Type: System.Net.WebHeaderCollection

Method: System.Void NormalizeCommonHeaders()

Disassembly:
	0x036811C0 MOV X19, X0
	0x036811C4 CBZ X0, 0x36811E0
	0x036811C8 LDRH W8, [X20 + 0x80]
	0x036811CC CMP W8, 0x6
	0x036811D0 B.NE 0x36811E0
	0x036811D4 LDR W8, [X19 + 0x10]
	0x036811D8 CMP W8, 0x10000
	0x036811DC B.GE 0x3681274
	0x036811E0 MOV X0, X20
	0x036811E4 BL 0x36801C0
	0x036811E8 MOV X0, X20
	0x036811EC MOV X1, X31
	0x036811F0 BL 0x3663ABC
	0x036811F4 MOV X0, X20
	0x036811F8 BL 0x36802C0
	0x036811FC CBZ X0, 0x3681270
	0x03681200 LDR X8, [X0]
	0x03681204 MOV X1, X21
	0x03681208 MOV X2, X19
	0x0368120C LDP X20, X19, [X31 + 0x30]
	0x03681210 LDR X4, [X8 + 0x278]
	0x03681214 LDR X3, [X8 + 0x280]
	0x03681218 LDP X22, X21, [X31 + 0x20]
	0x0368121C LDP X30, X23, [X31 + 0x10]
	0x03681220 ADD X31, X31, 0x40
	0x03681224 BR X4
	0x03681228 ADRP X0, 0xA77000
	0x0368122C LDR X0, [X0 + 0x528]
	0x03681230 BL 0x1C16D08
	0x03681234 BL 0x1C16F10
	0x03681238 MOV X19, X0
	0x0368123C ADRP X0, 0xA7A000
	0x03681240 LDR X0, [X0 + 0x588]
	0x03681244 BL 0x1C16D08
	0x03681248 MOV X1, X0
	0x0368124C MOV X0, X19
	0x03681250 MOV X2, X31
	0x03681254 BL 0x330E100
	0x03681258 ADRP X0, 0xABC000
	0x0368125C LDR X0, [X0 + 0xFC0]
	0x03681260 BL 0x1C16D08
	0x03681264 MOV X1, X0
	0x03681268 MOV X0, X19
	0x0368126C BL 0x1C16DEC
	0x03681270 BL 0x1C16F20
	0x03681274 ADRP X0, 0xA72000
	0x03681278 LDR X0, [X0 + 0x9D0]
	0x0368127C BL 0x1C16D08
	0x03681280 MOVZ W1, 0x1
	0x03681284 BL 0x1C16D6C
	0x03681288 MOVZ W8, 0xFFFF
	0x0368128C MOV X20, X0
	0x03681290 STRH W8, [X31 + 0xC]
	0x03681294 ADRP X0, 0xA77000
	0x03681298 LDR X0, [X0 + 0x658]
	0x0368129C BL 0x1C16D08
	0x036812A0 ADD X1, X31, 0xC
	0x036812A4 BL 0x1C16E04
	0x036812A8 MOV X21, X0
	0x036812AC MOV X0, X20
	0x036812B0 BL 0x19903C0
	0x036812B4 MOV X0, X20
	0x036812B8 MOV X1, X21
	0x036812BC BL 0x19980B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xD60000
	008 Move W8, [X20+2017]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xABD000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2017], W8
	019 Move X8, [X19+104]
	020 Compare X8, 0
	021 JumpIfEqual {69}
	022 Move X21, 0xABD000
	023 Move X21, [X21+3576]
	024 Move W22, 4
	025 Move W9, [X8+24]
	026 Subtract X23, X22, 4
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X8]
	030 Compare X9, 0
	031 JumpIfEqual {63}
	032 Move X0, X19
	033 Call WebHeaderCollection.get_InnerCollection, X0
	034 Move X8, [X21]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {42}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X8, [X21]
	042 Move X8, [X8+184]
	043 Move X8, [X8+8]
	044 Compare X8, 0
	045 JumpIfEqual {66}
	046 Move W9, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, [X19+104]
	049 Compare X9, 0
	050 JumpIfEqual {66}
	051 Move W10, [X9+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X20, 0
	054 JumpIfEqual {66}
	055 Move X10, [X20]
	056 Move X1, [X8]
	057 Move X2, [X9]
	058 Move X0, X20
	059 Move X8, [X10+584]
	060 Move X3, [X10+592]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X19+104]
	063 Add X22, X22, 1
	064 Compare X8, 0
	065 JumpIfNotEqual {25}
	066 Call 0x1C17F20
	067 Move [X19+104], X31
	068 Move [X19+112], W31
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Return 
	076 Call 0x1C17F28

Method: System.Collections.Specialized.NameValueCollection get_InnerCollection()

Disassembly:
	0x036812C0 MOV X0, X20
	0x036812C4 MOV X1, X31
	0x036812C8 MOV X2, X21
	0x036812CC BL 0x1993444
	0x036812D0 ADRP X0, 0xABC000
	0x036812D4 LDR X0, [X0 + 0xF98]
	0x036812D8 BL 0x1C16D08
	0x036812DC MOV X1, X20
	0x036812E0 MOV X2, X31
	0x036812E4 BL 0x320A16C
	0x036812E8 MOV X20, X0
	0x036812EC ADRP X0, 0xA7A000
	0x036812F0 LDR X0, [X0 + 0x760]
	0x036812F4 BL 0x1C16D08
	0x036812F8 BL 0x1C16F10
	0x036812FC MOV X21, X0
	0x03681300 ADRP X0, 0xA7C000
	0x03681304 LDR X0, [X0 + 0xEC8]
	0x03681308 BL 0x1C16D08
	0x0368130C MOV X1, X0
	0x03681310 MOV X0, X21
	0x03681314 MOV X2, X19
	0x03681318 MOV X3, X20
	0x0368131C MOV X4, X31
	0x03681320 BL 0x3312C8C
	0x03681324 ADRP X0, 0xABC000
	0x03681328 LDR X0, [X0 + 0xFC0]
	0x0368132C BL 0x1C16D08
	0x03681330 MOV X1, X0
	0x03681334 MOV X0, X21
	0x03681338 BL 0x1C16DEC
	0x0368133C SUB X31, X31, 0x40
	0x03681340 STP X30, X23, [X31 + 0x10]
	0x03681344 STP X22, X21, [X31 + 0x20]
	0x03681348 STP X20, X19, [X31 + 0x30]
	0x0368134C ADRP X22, 0xD5F000
	0x03681350 ADRP X23, 0xABC000
	0x03681354 LDRB W8, [X22 + 0x7EA]
	0x03681358 LDR X23, [X23 + 0xE28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD60000
	006 Move W8, [X20+2018]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xABD000
	013 Move X0, [X0+3784]
	014 Call 0x1C17CF4
	015 Move X0, 0xABD000
	016 Move X0, [X0+3880]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2018], W8
	020 Move X20, [X19+120]
	021 Compare X20, 0
	022 JumpIfNotEqual {43}
	023 Move X20, 0xABD000
	024 Move X20, [X20+3784]
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X9, 0xABD000
	032 Move X8, [X0+184]
	033 Move X9, [X9+3880]
	034 Move X21, [X8]
	035 Move X0, [X9]
	036 Call 0x1C17F10
	037 Move W1, 16
	038 Move X2, X21
	039 Move X3, X31
	040 Move X20, X0
	041 Call NameValueCollection..ctor, X0, X1, X2
	042 Move [X19+120], X20
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.Boolean AllowMultiValues(System.String name)

Disassembly:
	0x0368135C MOV X19, X2
	0x03681360 MOV X21, X1
	0x03681364 MOV X20, X0
	0x03681368 TBNZ X8, 0x0, 0x368138C
	0x0368136C ADRP X0, 0xABC000
	0x03681370 LDR X0, [X0 + 0xE28]
	0x03681374 BL 0x1C16CF4
	0x03681378 ADRP X0, 0xABC000
	0x0368137C LDR X0, [X0 + 0xDF8]
	0x03681380 BL 0x1C16CF4
	0x03681384 MOVZ W8, 0x1
	0x03681388 STRB W8, [X22 + 0x7EA]
	0x0368138C LDR X0, [X23]
	0x03681390 LDR W8, [X0 + 0xE0]
	0x03681394 CBNZ W8, 0x368139C
	0x03681398 BL 0x1C16DFC
	0x0368139C CBZ X21, 0x3681444
	0x036813A0 LDR W8, [X21 + 0x10]
	0x036813A4 CBZ W8, 0x3681444
	0x036813A8 ADRP X8, 0xABC000
	0x036813AC LDR X8, [X8 + 0xDF8]
	0x036813B0 LDR X0, [X8]
	0x036813B4 LDR W8, [X0 + 0xE0]
	0x036813B8 CBNZ W8, 0x36813C0
	0x036813BC BL 0x1C16DFC
	0x036813C0 MOV X0, X21
	0x036813C4 MOV W1, W31
	0x036813C8 BL 0x3680714
	0x036813CC MOV X21, X0
	0x036813D0 MOVZ W1, 0x1
	0x036813D4 MOV X0, X19
	0x036813D8 BL 0x3680714
	0x036813DC MOV X19, X0
	0x036813E0 CBZ X0, 0x36813FC
	0x036813E4 LDRH W8, [X20 + 0x80]
	0x036813E8 CMP W8, 0x6
	0x036813EC B.NE 0x36813FC
	0x036813F0 LDR W8, [X19 + 0x10]
	0x036813F4 CMP W8, 0x10000
	0x036813F8 B.GE 0x3681490
	0x036813FC MOV X0, X20
	0x03681400 BL 0x36801C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD60000
	006 Move X20, 0xABD000
	007 Move W8, [X21+2019]
	008 Move X20, [X20+3576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xABD000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move X0, 0xA73000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2019], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X8, [X8]
	030 Compare X8, 0
	031 JumpIfEqual {56}
	032 Move X1, X19
	033 Call HeaderInfoTable.get_Item, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {56}
	036 Move W8, [X0+40]
	037 Compare W8, 0
	038 JumpIfEqual {45}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, 1
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Move X8, 0xA73000
	046 Move X0, [X0+32]
	047 Move X8, [X8+2440]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X2, X31
	051 Move X1, [X8]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call String.op_Equality, X0, X1
	055 Return X0
	056 Call 0x1C17F20

Method: System.Boolean get_AllowHttpRequestHeader()

Disassembly:
	0x036814E0 MOV X1, X31
	0x036814E4 MOV X2, X21
	0x036814E8 BL 0x1993444
	0x036814EC ADRP X0, 0xABC000
	0x036814F0 LDR X0, [X0 + 0xF98]
	0x036814F4 BL 0x1C16D08
	0x036814F8 MOV X1, X20
	0x036814FC MOV X2, X31
	0x03681500 BL 0x320A16C
	0x03681504 MOV X20, X0
	0x03681508 ADRP X0, 0xA7A000
	0x0368150C LDR X0, [X0 + 0x760]
	0x03681510 BL 0x1C16D08
	0x03681514 BL 0x1C16F10
	0x03681518 MOV X21, X0
	0x0368151C ADRP X0, 0xA7C000

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, -44994560
	004 Add X9, X9, 1945
	005 NotImplemented "Instruction ADR not yet implemented."
	006 Move W11, [X9]
	007 Add X10, X10, X11
	008 Move W8, 1
	009 CallNoReturn X10
	010 Move W8, 1
	011 NotImplemented "Instruction STRH not yet implemented."
	012 Move W8, W31
	013 Move W0, W8
	014 Return X0

Method: System.Void Remove(System.Net.HttpRequestHeader header)

Disassembly:
	0x03681520 LDR X0, [X0 + 0xEC8]
	0x03681524 BL 0x1C16D08
	0x03681528 MOV X1, X0
	0x0368152C MOV X0, X21
	0x03681530 MOV X2, X19
	0x03681534 MOV X3, X20
	0x03681538 MOV X4, X31
	0x0368153C BL 0x3312C8C
	0x03681540 ADRP X0, 0xABC000
	0x03681544 LDR X0, [X0 + 0xFC8]
	0x03681548 BL 0x1C16D08
	0x0368154C MOV X1, X0
	0x03681550 MOV X0, X21
	0x03681554 BL 0x1C16DEC
	0x03681558 STR X30, [X31 - 0x30]!
	0x0368155C STP X22, X21, [X31 + 0x10]
	0x03681560 STP X20, X19, [X31 + 0x20]
	0x03681564 ADRP X21, 0xD5F000
	0x03681568 ADRP X22, 0xABC000
	0x0368156C LDRB W8, [X21 + 0x7EB]
	0x03681570 LDR X22, [X22 + 0xE28]
	0x03681574 MOV X20, X1
	0x03681578 MOV X19, X0
	0x0368157C TBNZ X8, 0x0, 0x36815A0
	0x03681580 ADRP X0, 0xABC000
	0x03681584 LDR X0, [X0 + 0xE28]
	0x03681588 BL 0x1C16CF4
	0x0368158C ADRP X0, 0xABC000
	0x03681590 LDR X0, [X0 + 0xDF8]
	0x03681594 BL 0x1C16CF4
	0x03681598 MOVZ W8, 0x1
	0x0368159C STRB W8, [X21 + 0x7EB]
	0x036815A0 LDR X0, [X22]
	0x036815A4 LDR W8, [X0 + 0xE0]
	0x036815A8 CBNZ W8, 0x36815B0
	0x036815AC BL 0x1C16DFC
	0x036815B0 CBZ X20, 0x3681644
	0x036815B4 LDR W8, [X20 + 0x10]
	0x036815B8 CBZ W8, 0x3681644
	0x036815BC ADRP X21, 0xABC000
	0x036815C0 LDR X21, [X21 + 0xDF8]
	0x036815C4 MOV X0, X19
	0x036815C8 MOV X1, X20
	0x036815CC BL 0x3680B28
	0x036815D0 LDR X0, [X21]
	0x036815D4 LDR W8, [X0 + 0xE0]
	0x036815D8 CBNZ W8, 0x36815E0
	0x036815DC BL 0x1C16DFC
	0x036815E0 MOV X0, X20
	0x036815E4 MOV W1, W31
	0x036815E8 BL 0x3680714
	0x036815EC MOV X20, X0
	0x036815F0 MOV X0, X19
	0x036815F4 BL 0x36801C0
	0x036815F8 LDR X8, [X19 + 0x78]
	0x036815FC CBZ X8, 0x3681634
	0x03681600 MOV X0, X19
	0x03681604 MOV X1, X31
	0x03681608 BL 0x3663ABC
	0x0368160C LDR X0, [X19 + 0x78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD60000
	006 Move W8, [X21+2020]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xABD000
	014 Move X0, [X0+3904]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2020], W8
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X9, -44994560
	021 Add X9, X9, 1951
	022 NotImplemented "Instruction ADR not yet implemented."
	023 Move W11, [X9]
	024 Add X10, X10, X11
	025 CallNoReturn X10
	026 Move W8, 1
	027 NotImplemented "Instruction STRH not yet implemented."
	028 Move X8, 0xABD000
	029 Move X8, [X8+3904]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, W20
	036 Move X1, X31
	037 Call HTTP_REQUEST_HEADER_ID.ToString, X0
	038 Move X8, [X19]
	039 Move X1, X0
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X3, [X8+648]
	044 Move X2, [X8+656]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X3
	048 Move X0, 0xABD000
	049 Move X0, [X0+3912]
	050 Call 0x1C17D08
	051 Move X1, X31
	052 Call SR.GetString, X0
	053 Move X19, X0
	054 Move X0, 0xA73000
	055 Move X0, [X0+1456]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X2, X31
	060 Move X20, X0
	061 Call InvalidOperationException..ctor, X0, X1
	062 Move X0, 0xABD000
	063 Move X0, [X0+3920]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X20
	067 Call 0x1C17DEC

Method: System.Void AddInternal(System.String name, System.String value)

Disassembly:
	0x03681610 CBZ X0, 0x368168C
	0x03681614 LDR X8, [X0]
	0x03681618 MOV X1, X20
	0x0368161C LDP X20, X19, [X31 + 0x20]
	0x03681620 LDP X22, X21, [X31 + 0x10]
	0x03681624 LDR X3, [X8 + 0x288]
	0x03681628 LDR X2, [X8 + 0x290]
	0x0368162C LDR X30, [X31], #0x30
	0x03681630 BR X3
	0x03681634 LDP X20, X19, [X31 + 0x20]
	0x03681638 LDP X22, X21, [X31 + 0x10]
	0x0368163C LDR X30, [X31], #0x30
	0x03681640 RET
	0x03681644 ADRP X0, 0xA77000
	0x03681648 LDR X0, [X0 + 0x528]
	0x0368164C BL 0x1C16D08
	0x03681650 BL 0x1C16F10
	0x03681654 MOV X19, X0
	0x03681658 ADRP X0, 0xA7A000
	0x0368165C LDR X0, [X0 + 0x588]
	0x03681660 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Move X20, X1
	007 Move X21, X0
	008 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	009 Move X0, X21
	010 Move X1, X31
	011 Call NameValueCollection.InvalidateCachedArrays, X0
	012 Move X0, X21
	013 Call WebHeaderCollection.get_InnerCollection, X0
	014 Compare X0, 0
	015 JumpIfEqual {26}
	016 Move X8, [X0]
	017 Move X1, X20
	018 Move X2, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X4, [X8+584]
	022 Move X3, [X8+592]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 CallNoReturn X4
	026 Call 0x1C17F20

Method: System.Void ChangeInternal(System.String name, System.String value)

Disassembly:
	0x03681664 MOV X1, X0
	0x03681668 MOV X0, X19
	0x0368166C MOV X2, X31
	0x03681670 BL 0x330E100
	0x03681674 ADRP X0, 0xABC000
	0x03681678 LDR X0, [X0 + 0xFD0]
	0x0368167C BL 0x1C16D08
	0x03681680 MOV X1, X0
	0x03681684 MOV X0, X19
	0x03681688 BL 0x1C16DEC
	0x0368168C BL 0x1C16F20
	0x03681690 STP X30, X25, [X31 - 0x40]!
	0x03681694 STP X24, X23, [X31 + 0x10]
	0x03681698 STP X22, X21, [X31 + 0x20]
	0x0368169C STP X20, X19, [X31 + 0x30]
	0x036816A0 ADRP X22, 0xD5F000
	0x036816A4 ADRP X20, 0xABC000
	0x036816A8 LDRB W8, [X22 + 0x7EC]
	0x036816AC LDR X20, [X20 + 0xDF8]
	0x036816B0 MOV X19, X1
	0x036816B4 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Move X20, X1
	007 Move X21, X0
	008 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	009 Move X0, X21
	010 Move X1, X31
	011 Call NameValueCollection.InvalidateCachedArrays, X0
	012 Move X0, X21
	013 Call WebHeaderCollection.get_InnerCollection, X0
	014 Compare X0, 0
	015 JumpIfEqual {26}
	016 Move X8, [X0]
	017 Move X1, X20
	018 Move X2, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X4, [X8+632]
	022 Move X3, [X8+640]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 CallNoReturn X4
	026 Call 0x1C17F20

Method: System.Void RemoveInternal(System.String name)

Disassembly:
	0x036816B8 TBNZ X8, 0x0, 0x36816E8
	0x036816BC ADRP X0, 0xA9F000
	0x036816C0 LDR X0, [X0 + 0xBA0]
	0x036816C4 BL 0x1C16CF4
	0x036816C8 ADRP X0, 0xA72000
	0x036816CC LDR X0, [X0 + 0xAC8]
	0x036816D0 BL 0x1C16CF4
	0x036816D4 ADRP X0, 0xABC000
	0x036816D8 LDR X0, [X0 + 0xDF8]
	0x036816DC BL 0x1C16CF4
	0x036816E0 MOVZ W8, 0x1
	0x036816E4 STRB W8, [X22 + 0x7EC]
	0x036816E8 MOV X0, X21
	0x036816EC BL 0x36801C0
	0x036816F0 LDR X0, [X20]
	0x036816F4 LDR W8, [X0 + 0xE0]
	0x036816F8 CBNZ W8, 0x3681704
	0x036816FC BL 0x1C16DFC
	0x03681700 LDR X0, [X20]
	0x03681704 LDR X8, [X0 + 0xB8]
	0x03681708 LDR X8, [X8]
	0x0368170C CBZ X8, 0x3681888
	0x03681710 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	007 Move X8, [X20+120]
	008 Compare X8, 0
	009 JumpIfEqual {24}
	010 Move X0, X20
	011 Move X1, X31
	012 Call NameValueCollection.InvalidateCachedArrays, X0
	013 Move X0, [X20+120]
	014 Compare X0, 0
	015 JumpIfEqual {28}
	016 Move X8, [X0]
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X3, [X8+648]
	021 Move X2, [X8+656]
	022 Move X30, [X31+32]
	023 CallNoReturn X3
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 
	028 Call 0x1C17F20

Method: System.String CheckBadChars(System.String name, System.Boolean isHeaderValue)

Disassembly:
	0x03681714 BL 0x3680404
	0x03681718 MOV X20, X0
	0x0368171C MOV X0, X21
	0x03681720 BL 0x36802C0
	0x03681724 CBZ X0, 0x3681888
	0x03681728 LDR X8, [X0]
	0x0368172C MOV X1, X19
	0x03681730 LDR X9, [X8 + 0x268]
	0x03681734 LDR X2, [X8 + 0x270]
	0x03681738 BLR X9
	0x0368173C MOV X19, X0
	0x03681740 CBZ X20, 0x3681870
	0x03681744 CBZ X19, 0x3681870
	0x03681748 LDRB W8, [X20 + 0x28]
	0x0368174C CBZ W8, 0x3681870
	0x03681750 LDR X8, [X19 + 0x18]
	0x03681754 CMP W8, 0x1
	0x03681758 B.LT 0x3681870
	0x0368175C ADRP X25, 0xA9F000
	0x03681760 LDR X25, [X25 + 0xBA0]
	0x03681764 MOV W24, W31
	0x03681768 MOV X22, X31
	0x0368176C MOV X21, X31
	0x03681770 AND X8, X8, 0x0
	0x03681774 CMP X22, W8, UXTW
	0x03681778 B.CS 0x368188C
	0x0368177C LDR X8, [X20 + 0x18]
	0x03681780 CBZ X8, 0x3681888
	0x03681784 ADD X9, X19, X22, 0x3, LSL
	0x03681788 LDR X10, [X8 + 0x18]
	0x0368178C LDR X0, [X8 + 0x40]
	0x03681790 LDR X1, [X9 + 0x20]
	0x03681794 LDR X2, [X8 + 0x28]
	0x03681798 BLR X10
	0x0368179C MOV X23, X0
	0x036817A0 CBNZ X21, 0x36817F8
	0x036817A4 CBZ X23, 0x3681888
	0x036817A8 LDR W8, [X23 + 0x18]
	0x036817AC CMP W8, 0x2
	0x036817B0 B.GE 0x36817BC
	0x036817B4 MOV X21, X31
	0x036817B8 B 0x3681810
	0x036817BC LDR X0, [X25]
	0x036817C0 BL 0x1C16F10
	0x036817C4 MOV X1, X19
	0x036817C8 MOV X2, X31
	0x036817CC MOV X21, X0
	0x036817D0 BL 0x3358360
	0x036817D4 CBZ X21, 0x3681888
	0x036817D8 LDR X8, [X21]
	0x036817DC LDR W9, [X19 + 0x18]
	0x036817E0 MOV X0, X21
	0x036817E4 MOV W1, W22
	0x036817E8 LDR X10, [X8 + 0x3E8]
	0x036817EC LDR X3, [X8 + 0x3F0]
	0x036817F0 ADD W2, W24, W9
	0x036817F4 BLR X10
	0x036817F8 LDR X8, [X21]
	0x036817FC MOV X0, X21
	0x03681800 MOV X1, X23
	0x03681804 LDR X9, [X8 + 0x318]
	0x03681808 LDR X2, [X8 + 0x320]
	0x0368180C BLR X9
	0x03681810 LDR W8, [X19 + 0x18]
	0x03681814 ADD X22, X22, 0x1
	0x03681818 SUB W24, W24, 0x1
	0x0368181C CMP X22, W8, SXTW
	0x03681820 B.LT 0x3681774
	0x03681824 CBZ X21, 0x3681870
	0x03681828 LDR X8, [X21]
	0x0368182C MOV X0, X21
	0x03681830 LDR X9, [X8 + 0x298]
	0x03681834 LDR X1, [X8 + 0x2A0]
	0x03681838 BLR X9
	0x0368183C ADRP X8, 0xA72000
	0x03681840 LDR X8, [X8 + 0xAC8]
	0x03681844 MOV W1, W0
	0x03681848 LDR X8, [X8]
	0x0368184C MOV X0, X8
	0x03681850 BL 0x1C16D6C
	0x03681854 LDR X8, [X21]
	0x03681858 MOV X19, X0
	0x0368185C MOV X0, X21
	0x03681860 MOV X1, X19
	0x03681864 LDR X9, [X8 + 0x358]
	0x03681868 LDR X2, [X8 + 0x360]
	0x0368186C BLR X9
	0x03681870 MOV X0, X19
	0x03681874 LDP X20, X19, [X31 + 0x30]
	0x03681878 LDP X22, X21, [X31 + 0x20]
	0x0368187C LDP X24, X23, [X31 + 0x10]
	0x03681880 LDP X30, X25, [X31], #0x40
	0x03681884 RET
	0x03681888 BL 0x1C16F20
	0x0368188C BL 0x1C16F28
	0x03681890 STP X30, X21, [X31 - 0x20]!
	0x03681894 STP X20, X19, [X31 + 0x10]
	0x03681898 ADRP X20, 0xD5F000
	0x0368189C ADRP X21, 0xABC000
	0x036818A0 LDRB W8, [X20 + 0x7ED]
	0x036818A4 LDR X21, [X21 + 0xDF8]
	0x036818A8 MOV X19, X0
	0x036818AC TBNZ X8, 0x0, 0x36818C4
	0x036818B0 ADRP X0, 0xABC000
	0x036818B4 LDR X0, [X0 + 0xDF8]
	0x036818B8 BL 0x1C16CF4
	0x036818BC MOVZ W8, 0x1
	0x036818C0 STRB W8, [X20 + 0x7ED]
	0x036818C4 LDR X0, [X21]
	0x036818C8 LDR W8, [X0 + 0xE0]
	0x036818CC CBNZ W8, 0x36818D4
	0x036818D0 BL 0x1C16DFC
	0x036818D4 MOV X0, X19
	0x036818D8 LDP X20, X19, [X31 + 0x10]
	0x036818DC MOV W1, W31
	0x036818E0 MOV W2, W31
	0x036818E4 LDP X30, X21, [X31], #0x20
	0x036818E8 B 0x36818EC
	0x036818EC STP X30, X27, [X31 - 0x50]!
	0x036818F0 STP X26, X25, [X31 + 0x10]
	0x036818F4 STP X24, X23, [X31 + 0x20]
	0x036818F8 STP X22, X21, [X31 + 0x30]
	0x036818FC STP X20, X19, [X31 + 0x40]
	0x03681900 ADRP X22, 0xD5F000
	0x03681904 LDRB W8, [X22 + 0x7EE]
	0x03681908 MOV W19, W2
	0x0368190C MOV W21, W1
	0x03681910 MOV X20, X0
	0x03681914 TBNZ X8, 0x0, 0x368195C
	0x03681918 ADRP X0, 0xA72000
	0x0368191C LDR X0, [X0 + 0x8F0]
	0x03681920 BL 0x1C16CF4
	0x03681924 ADRP X0, 0xA74000
	0x03681928 LDR X0, [X0 + 0x278]
	0x0368192C BL 0x1C16CF4
	0x03681930 ADRP X0, 0xABC000
	0x03681934 LDR X0, [X0 + 0xE28]
	0x03681938 BL 0x1C16CF4
	0x0368193C ADRP X0, 0xA76000
	0x03681940 LDR X0, [X0 + 0x928]
	0x03681944 BL 0x1C16CF4
	0x03681948 ADRP X0, 0xAB0000
	0x0368194C LDR X0, [X0 + 0x420]
	0x03681950 BL 0x1C16CF4
	0x03681954 MOVZ W8, 0x1
	0x03681958 STRB W8, [X22 + 0x7EE]
	0x0368195C TBNZ X21, 0x0, 0x3681B64
	0x03681960 ADRP X25, 0xAB0000
	0x03681964 LDR X25, [X25 + 0x420]
	0x03681968 CBZ X20, 0x3681B0C
	0x0368196C LDR X8, [X20]
	0x03681970 MOV X0, X20
	0x03681974 LDR X9, [X8 + 0x218]
	0x03681978 LDR X1, [X8 + 0x220]
	0x0368197C BLR X9
	0x03681980 CBZ W0, 0x3681B0C
	0x03681984 LDR X8, [X20]
	0x03681988 MOV X0, X20
	0x0368198C LDR X9, [X8 + 0x218]
	0x03681990 LDR X1, [X8 + 0x220]
	0x03681994 BLR X9
	0x03681998 ADRP X8, 0xA72000
	0x0368199C LDR X8, [X8 + 0x8F0]
	0x036819A0 MOV W22, W0
	0x036819A4 LDR X8, [X8]
	0x036819A8 MOV X0, X8
	0x036819AC BL 0x1C16F10
	0x036819B0 MOVZ W8, 0x1E
	0x036819B4 MUL W1, W22, W8
	0x036819B8 MOV X2, X31
	0x036819BC MOV X21, X0
	0x036819C0 BL 0x3231B28
	0x036819C4 ADRP X8, 0xA74000
	0x036819C8 LDR X8, [X8 + 0x278]
	0x036819CC MOV X0, X20
	0x036819D0 MOV X2, X31
	0x036819D4 LDR X8, [X8]
	0x036819D8 LDR X8, [X8 + 0xB8]
	0x036819DC LDR X1, [X8]
	0x036819E0 BL 0x366456C
	0x036819E4 CBZ X0, 0x3681A0C
	0x036819E8 CBZ X21, 0x3681B60
	0x036819EC MOV X1, X0
	0x036819F0 MOV X0, X21
	0x036819F4 MOV X2, X31
	0x036819F8 BL 0x32333E0
	0x036819FC CBZ X0, 0x3681B60
	0x03681A00 LDR X1, [X25]
	0x03681A04 MOV X2, X31
	0x03681A08 BL 0x32333E0
	0x03681A0C LDR X8, [X20]
	0x03681A10 MOV X0, X20
	0x03681A14 LDR X9, [X8 + 0x218]
	0x03681A18 LDR X1, [X8 + 0x220]
	0x03681A1C BLR X9
	0x03681A20 CMP W0, 0x1
	0x03681A24 B.LT 0x3681B00
	0x03681A28 ADRP X26, 0xABC000
	0x03681A2C ADRP X27, 0xA76000
	0x03681A30 LDR X26, [X26 + 0xE28]
	0x03681A34 LDR X27, [X27 + 0x928]
	0x03681A38 MOV W22, W31
	0x03681A3C LDR X8, [X20]
	0x03681A40 MOV X0, X20
	0x03681A44 MOV W1, W22
	0x03681A48 LDR X9, [X8 + 0x2B8]
	0x03681A4C LDR X2, [X8 + 0x2C0]
	0x03681A50 BLR X9
	0x03681A54 LDR X8, [X20]
	0x03681A58 MOV X24, X0
	0x03681A5C MOV X0, X20
	0x03681A60 MOV W1, W22
	0x03681A64 LDR X9, [X8 + 0x298]
	0x03681A68 LDR X2, [X8 + 0x2A0]
	0x03681A6C BLR X9
	0x03681A70 LDR X8, [X26]
	0x03681A74 MOV X23, X0
	0x03681A78 LDR W9, [X8 + 0xE0]
	0x03681A7C CBZ W9, 0x3681A88
	0x03681A80 CBNZ X24, 0x3681A94
	0x03681A84 B 0x3681AE0
	0x03681A88 MOV X0, X8
	0x03681A8C BL 0x1C16DFC
	0x03681A90 CBZ X24, 0x3681AE0
	0x03681A94 LDR W8, [X24 + 0x10]
	0x03681A98 CBZ W8, 0x3681AE0
	0x03681A9C CBZ X21, 0x3681B60
	0x03681AA0 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD60000
	006 Move W8, [X21+2021]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xA75000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move X0, 0xABD000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move X0, 0xABD000
	020 Move X0, [X0+3576]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2021], W8
	024 Compare X19, 0
	025 JumpIfEqual {80}
	026 Move W8, [X19+16]
	027 Compare W8, 0
	028 JumpIfEqual {102}
	029 Move TEMP, X20
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {111}
	033 Move X20, 0xABD000
	034 Move X20, [X20+3576]
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X0, X19
	043 Move X2, X31
	044 Move X1, [X8+24]
	045 Call String.Trim, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {183}
	048 Move W8, [X0+16]
	049 Move X19, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W20, W31
	052 Move W21, W31
	053 Move X0, X19
	054 Move W1, W20
	055 Move X2, X31
	056 Call String.get_Chars, X0, X1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 And W8, W0, 255
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Compare W21, 0
	061 JumpIfNotEqual {75}
	062 And W9, W0, 255
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W21, W31
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W21, 2
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W21, W31
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W21, 1
	075 Move W8, [X19+16]
	076 Add W20, W20, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Compare W21, 0
	079 JumpIfEqual {143}
	080 Move TEMP, X20
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {106}
	084 Move X0, 0xA78000
	085 Move X0, [X0+1320]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0xA7B000
	090 Move X0, [X0+1416]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call ArgumentNullException..ctor, X0, X1
	096 Move X0, 0xABD000
	097 Move X0, [X0+3928]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC
	102 Move TEMP, X20
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {176}
	106 Move X8, 0xA75000
	107 Move X8, [X8+632]
	108 Move X8, [X8]
	109 Move X8, [X8+184]
	110 Move X19, [X8]
	111 Move X20, 0xABD000
	112 Move X20, [X20+3624]
	113 Move X0, [X20]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X20]
	119 Move X8, [X0+184]
	120 Move X0, X19
	121 Move X2, X31
	122 Move X1, [X8+16]
	123 Call String.IndexOfAny, X0, X1
	124 Add W31, W0, 1
	125 Move X8, 0xABD000
	126 Move X8, [X8+3576]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X19
	133 Call WebHeaderCollection.ContainsNonAsciiChars, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {143}
	138 Move X0, 0xABD000
	139 Move X0, [X0+3936]
	140 Move W21, W31
	141 Compare W21, 0
	142 JumpIfNotEqual {149}
	143 Move X0, X19
	144 Move X20, [X31+16]
	145 Move X19, [X31+24]
	146 Move X30, [X31+32]
	147 Move X21, [X31+40]
	148 Return X0
	149 Move X0, 0xABD000
	150 Move X0, [X0+3944]
	151 Move X0, 0xABD000
	152 Move X0, [X0+3952]
	153 Call 0x1C17D08
	154 Move X1, X31
	155 Call SR.GetString, X0
	156 Move X19, X0
	157 Move X0, 0xA7B000
	158 Move X0, [X0+1400]
	159 Call 0x1C17D08
	160 Call 0x1C17F10
	161 Move X20, X0
	162 Move X0, 0xA7D000
	163 Move X0, [X0+3784]
	164 Call 0x1C17D08
	165 Move X2, X0
	166 Move X0, X20
	167 Move X1, X19
	168 Move X3, X31
	169 Call ArgumentException..ctor, X0, X1, X2
	170 Move X0, 0xABD000
	171 Move X0, [X0+3928]
	172 Call 0x1C17D08
	173 Move X1, X0
	174 Move X0, X20
	175 Call 0x1C17DEC
	176 Move X0, 0xA73000
	177 Move X0, [X0+2512]
	178 Call 0x1C17D08
	179 Move W1, 1
	180 Call 0x1C17D6C
	181 Compare X0, 0
	182 JumpIfNotEqual {197}
	183 Call 0x1C17F20
	184 Move X0, 0xABD000
	185 Move X0, [X0+3960]
	186 Call 0x1C17D08
	187 Move X1, X31
	188 Call SR.GetString, X0
	189 Move X19, X0
	190 Move X0, 0xA7B000
	191 Move X0, [X0+1400]
	192 Call 0x1C17D08
	193 Call 0x1C17F10
	194 Move X20, X0
	195 Move X0, 0xA7B000
	196 Move X0, [X0+1416]
	197 Move X19, X0
	198 Move X0, 0xA7B000
	199 Move X0, [X0+1416]
	200 Call 0x1C17D08
	201 Compare X0, 0
	202 JumpIfEqual {211}
	203 Move X8, [X19]
	204 Move X1, [X8+64]
	205 Call 0x1C17E00
	206 Compare X0, 0
	207 JumpIfNotEqual {211}
	208 Call 0x1C17F44
	209 Move X1, X31
	210 Call 0x1C17DEC
	211 Move X0, 0xA7B000
	212 Move X0, [X0+1416]
	213 Call 0x1C17D08
	214 Move W8, [X19+24]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17F28
	218 Move [X19+32], X0
	219 Move X0, 0xABD000
	220 Move X0, [X0+3968]
	221 Call 0x1C17D08
	222 Move X1, X19
	223 Move X2, X31
	224 Call SR.GetString, X0, X1
	225 Move X20, X0
	226 Move X0, 0xA7B000
	227 Move X0, [X0+1400]
	228 Call 0x1C17D08
	229 Call 0x1C17F10
	230 Move X19, X0
	231 Move X0, 0xA7B000
	232 Move X0, [X0+1416]
	233 Call 0x1C17D08
	234 Move X2, X0
	235 Move X0, X19
	236 Move X1, X20
	237 Move X3, X31
	238 Call ArgumentException..ctor, X0, X1, X2

Method: System.Boolean ContainsNonAsciiChars(System.String token)

Disassembly:
	0x03681AA4 MOV X1, X24
	0x03681AA8 MOV X2, X31
	0x03681AAC BL 0x32333E0
	0x03681AB0 LDR X1, [X27]
	0x03681AB4 MOV X0, X21
	0x03681AB8 MOV X2, X31
	0x03681ABC BL 0x32333E0
	0x03681AC0 MOV X0, X21
	0x03681AC4 MOV X1, X23
	0x03681AC8 MOV X2, X31
	0x03681ACC BL 0x32333E0
	0x03681AD0 CBZ X0, 0x3681B60
	0x03681AD4 LDR X1, [X25]
	0x03681AD8 MOV X2, X31
	0x03681ADC BL 0x32333E0
	0x03681AE0 LDR X8, [X20]
	0x03681AE4 MOV X0, X20
	0x03681AE8 ADD W22, W22, 0x1
	0x03681AEC LDR X9, [X8 + 0x218]
	0x03681AF0 LDR X1, [X8 + 0x220]
	0x03681AF4 BLR X9
	0x03681AF8 CMP W22, W0
	0x03681AFC B.LT 0x3681A3C
	0x03681B00 TBZ X19, 0x0, 0x3681B28
	0x03681B04 CBNZ X21, 0x3681B3C
	0x03681B08 B 0x3681B60
	0x03681B0C LDR X0, [X25]
	0x03681B10 LDP X20, X19, [X31 + 0x40]
	0x03681B14 LDP X22, X21, [X31 + 0x30]
	0x03681B18 LDP X24, X23, [X31 + 0x20]
	0x03681B1C LDP X26, X25, [X31 + 0x10]
	0x03681B20 LDP X30, X27, [X31], #0x50
	0x03681B24 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {31}
	006 Move W8, [X0+16]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W20, W31
	010 Move X0, X19
	011 Move W1, W20
	012 Move X2, X31
	013 Call String.get_Chars, X0, X1
	014 And W8, W0, 0xFFFF
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, X19
	017 Move W1, W20
	018 Move X2, X31
	019 Call String.get_Chars, X0, X1
	020 And W8, W0, 0xFFFF
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W8, [X19+16]
	023 Add W20, W20, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move W0, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void ThrowOnRestrictedHeader(System.String headerName)

Disassembly:
	0x03681B28 CBZ X21, 0x3681B60
	0x03681B2C LDR X1, [X25]
	0x03681B30 MOV X0, X21
	0x03681B34 MOV X2, X31
	0x03681B38 BL 0x32333E0
	0x03681B3C LDR X8, [X21]
	0x03681B40 MOV X0, X21
	0x03681B44 LDP X20, X19, [X31 + 0x40]
	0x03681B48 LDP X22, X21, [X31 + 0x30]
	0x03681B4C LDP X2, X1, [X8 + 0x168]
	0x03681B50 LDP X24, X23, [X31 + 0x20]
	0x03681B54 LDP X26, X25, [X31 + 0x10]
	0x03681B58 LDP X30, X27, [X31], #0x50
	0x03681B5C BR X2
	0x03681B60 BL 0x1C16F20
	0x03681B64 ADRP X0, 0xA72000
	0x03681B68 LDR X0, [X0 + 0x5B0]
	0x03681B6C BL 0x1C16D08
	0x03681B70 BL 0x1C16F10
	0x03681B74 MOV X1, X31
	0x03681B78 MOV X19, X0
	0x03681B7C BL 0x337DEC0
	0x03681B80 ADRP X0, 0xABC000
	0x03681B84 LDR X0, [X0 + 0xFD8]
	0x03681B88 BL 0x1C16D08
	0x03681B8C MOV X1, X0
	0x03681B90 MOV X0, X19
	0x03681B94 BL 0x1C16DEC
	0x03681B98 STR X30, [X31 - 0x30]!
	0x03681B9C STP X22, X21, [X31 + 0x10]
	0x03681BA0 STP X20, X19, [X31 + 0x20]
	0x03681BA4 ADRP X22, 0xD5F000
	0x03681BA8 ADRP X21, 0xAA5000
	0x03681BAC LDRB W8, [X22 + 0x7F0]
	0x03681BB0 LDR X21, [X21 + 0x538]
	0x03681BB4 MOV W20, W1
	0x03681BB8 MOV X19, X0
	0x03681BBC TBNZ X8, 0x0, 0x3681BEC
	0x03681BC0 ADRP X0, 0xAA5000
	0x03681BC4 LDR X0, [X0 + 0x538]
	0x03681BC8 BL 0x1C16CF4
	0x03681BCC ADRP X0, 0xA72000
	0x03681BD0 LDR X0, [X0 + 0xAC8]
	0x03681BD4 BL 0x1C16CF4
	0x03681BD8 ADRP X0, 0xABC000
	0x03681BDC LDR X0, [X0 + 0xDF8]
	0x03681BE0 BL 0x1C16CF4
	0x03681BE4 MOVZ W8, 0x1
	0x03681BE8 STRB W8, [X22 + 0x7F0]
	0x03681BEC LDR X0, [X21]
	0x03681BF0 LDR W8, [X0 + 0xE0]
	0x03681BF4 CBNZ W8, 0x3681C00
	0x03681BF8 BL 0x1C16DFC
	0x03681BFC LDR X0, [X21]
	0x03681C00 LDR X8, [X0 + 0xB8]
	0x03681C04 MOV X0, X19
	0x03681C08 MOV X2, X31
	0x03681C0C LDR X1, [X8]
	0x03681C10 BL 0x36648B8
	0x03681C14 AND W8, W20, 0xFFFF
	0x03681C18 CMP W8, 0x4
	0x03681C1C STRH W20, [X19 + 0x80]
	0x03681C20 B.NE 0x3681C68
	0x03681C24 ADRP X20, 0xABC000
	0x03681C28 LDR X20, [X20 + 0xDF8]
	0x03681C2C LDR X0, [X20]
	0x03681C30 LDR W8, [X0 + 0xE0]
	0x03681C34 CBNZ W8, 0x3681C40
	0x03681C38 BL 0x1C16DFC
	0x03681C3C LDR X0, [X20]
	0x03681C40 LDR X8, [X0 + 0xB8]
	0x03681C44 LDR X8, [X8 + 0x8]
	0x03681C48 CBZ X8, 0x3681C78
	0x03681C4C ADRP X9, 0xA72000
	0x03681C50 LDR X9, [X9 + 0xAC8]
	0x03681C54 LDR W8, [X8 + 0x18]
	0x03681C58 LDR X0, [X9]
	0x03681C5C SUB W1, W8, 0x1
	0x03681C60 BL 0x1C16D6C
	0x03681C64 STR X0, [X19 + 0x68]
	0x03681C68 LDP X20, X19, [X31 + 0x20]
	0x03681C6C LDP X22, X21, [X31 + 0x10]
	0x03681C70 LDR X30, [X31], #0x30
	0x03681C74 RET
	0x03681C78 BL 0x1C16F20
	0x03681C7C SUB X31, X31, 0x40
	0x03681C80 STP X30, X23, [X31 + 0x10]
	0x03681C84 STP X22, X21, [X31 + 0x20]
	0x03681C88 STP X20, X19, [X31 + 0x30]
	0x03681C8C ADRP X22, 0xD5F000
	0x03681C90 ADRP X21, 0xAA5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD60000
	006 Move W8, [X21+2022]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xABD000
	014 Move X0, [X0+3576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2022], W8
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, 0xABD000
	022 Move X20, [X20+3576]
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X8, [X8]
	031 Compare X8, 0
	032 JumpIfEqual {104}
	033 Move X1, X19
	034 Call HeaderInfoTable.get_Item, X0, X1
	035 Compare X0, 0
	036 JumpIfEqual {104}
	037 Move W8, [X0+16]
	038 Compare W8, 0
	039 JumpIfNotEqual {64}
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Move X20, 0xABD000
	046 Move X20, [X20+3576]
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X20]
	053 Move X8, [X0+184]
	054 Move X8, [X8]
	055 Compare X8, 0
	056 JumpIfEqual {104}
	057 Move X1, X19
	058 Call HeaderInfoTable.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {104}
	061 Move W8, [X0+17]
	062 Compare W8, 0
	063 JumpIfEqual {40}
	064 Move X0, 0xA73000
	065 Move X0, [X0+2512]
	066 Call 0x1C17D08
	067 Move W1, 1
	068 Call 0x1C17D6C
	069 Move X20, X0
	070 Call 0x19913C0
	071 Move X0, X20
	072 Move X1, X19
	073 Call 0x19990B4
	074 Move X0, X20
	075 Move X1, X31
	076 Move X2, X19
	077 Call 0x1994444
	078 Move X0, 0xABD000
	079 Move X0, [X0+3976]
	080 Call 0x1C17D08
	081 Move X1, X20
	082 Move X2, X31
	083 Call SR.GetString, X0, X1
	084 Move X19, X0
	085 Move X0, 0xA7B000
	086 Move X0, [X0+1400]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X20, X0
	090 Move X0, 0xA7B000
	091 Move X0, [X0+1416]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X20
	095 Move X1, X19
	096 Move X3, X31
	097 Call ArgumentException..ctor, X0, X1, X2
	098 Move X0, 0xABD000
	099 Move X0, [X0+3984]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X20
	103 Call 0x1C17DEC
	104 Call 0x1C17F20

Method: System.Void Add(System.String name, System.String value)

Disassembly:
	0x03681C94 LDRB W8, [X22 + 0x7F1]
	0x03681C98 LDR X21, [X21 + 0x538]
	0x03681C9C MOV X19, X1
	0x03681CA0 MOV X20, X0
	0x03681CA4 TBNZ X8, 0x0, 0x3681CE0
	0x03681CA8 ADRP X0, 0xABC000
	0x03681CAC LDR X0, [X0 + 0xEC8]
	0x03681CB0 BL 0x1C16CF4
	0x03681CB4 ADRP X0, 0xAA5000
	0x03681CB8 LDR X0, [X0 + 0x538]
	0x03681CBC BL 0x1C16CF4
	0x03681CC0 ADRP X0, 0xABC000
	0x03681CC4 LDR X0, [X0 + 0xF28]
	0x03681CC8 BL 0x1C16CF4
	0x03681CCC ADRP X0, 0xA9C000
	0x03681CD0 LDR X0, [X0 + 0x2C8]
	0x03681CD4 BL 0x1C16CF4
	0x03681CD8 MOVZ W8, 0x1
	0x03681CDC STRB W8, [X22 + 0x7F1]
	0x03681CE0 LDR X0, [X21]
	0x03681CE4 STR W31, [X31 + 0x8]
	0x03681CE8 LDR W8, [X0 + 0xE0]
	0x03681CEC CBNZ W8, 0x3681CF8
	0x03681CF0 BL 0x1C16DFC
	0x03681CF4 LDR X0, [X21]
	0x03681CF8 LDR X8, [X0 + 0xB8]
	0x03681CFC MOV X0, X20
	0x03681D00 MOV X2, X31
	0x03681D04 LDR X1, [X8]
	0x03681D08 BL 0x36648B8
	0x03681D0C CBZ X19, 0x3681E38
	0x03681D10 ADRP X8, 0xA9C000
	0x03681D14 LDR X8, [X8 + 0x2C8]
	0x03681D18 ADRP X22, 0xABC000
	0x03681D1C ADRP X23, 0xABC000
	0x03681D20 MOV X0, X19
	0x03681D24 LDR X1, [X8]
	0x03681D28 LDR X22, [X22 + 0xEC8]
	0x03681D2C LDR X23, [X23 + 0xF28]
	0x03681D30 MOV X2, X31
	0x03681D34 BL 0x32A9B08
	0x03681D38 LDR X8, [X22]
	0x03681D3C MOV W21, W0
	0x03681D40 LDR W9, [X8 + 0xE0]
	0x03681D44 CBNZ W9, 0x3681D54
	0x03681D48 MOV X0, X8
	0x03681D4C BL 0x1C16DFC
	0x03681D50 LDR X8, [X22]
	0x03681D54 LDR X8, [X8 + 0xB8]
	0x03681D58 LDR X0, [X23]
	0x03681D5C LDR X22, [X8]
	0x03681D60 BL 0x1C16F10
	0x03681D64 ADD W1, W21, 0x2
	0x03681D68 MOV X2, X22
	0x03681D6C MOV X3, X31
	0x03681D70 MOV X23, X0
	0x03681D74 BL 0x3663988
	0x03681D78 CMP W21, 0x1
	0x03681D7C STR X23, [X20 + 0x78]
	0x03681D80 STR W31, [X31 + 0xC]
	0x03681D84 B.LT 0x3681E24
	0x03681D88 MOV X0, X31
	0x03681D8C BL 0x333AB78
	0x03681D90 MOV X1, X0
	0x03681D94 ADD X0, X31, 0xC
	0x03681D98 MOV X2, X31
	0x03681D9C BL 0x337B824
	0x03681DA0 MOV X1, X0
	0x03681DA4 MOV X0, X19
	0x03681DA8 MOV X2, X31
	0x03681DAC BL 0x32A9F64
	0x03681DB0 LDR W8, [X31 + 0xC]
	0x03681DB4 MOV X22, X0
	0x03681DB8 MOV X0, X31
	0x03681DBC ADD W8, W8, W21
	0x03681DC0 STR W8, [X31 + 0x8]
	0x03681DC4 BL 0x333AB78
	0x03681DC8 MOV X1, X0
	0x03681DCC ADD X0, X31, 0x8
	0x03681DD0 MOV X2, X31
	0x03681DD4 BL 0x337B824
	0x03681DD8 MOV X1, X0
	0x03681DDC MOV X0, X19
	0x03681DE0 MOV X2, X31
	0x03681DE4 BL 0x32A9F64
	0x03681DE8 MOV X23, X0
	0x03681DEC MOV X0, X20
	0x03681DF0 BL 0x36802C0
	0x03681DF4 CBZ X0, 0x3681E38
	0x03681DF8 LDR X8, [X0]
	0x03681DFC MOV X1, X22
	0x03681E00 MOV X2, X23
	0x03681E04 LDR X9, [X8 + 0x248]
	0x03681E08 LDR X3, [X8 + 0x250]
	0x03681E0C BLR X9
	0x03681E10 LDR W8, [X31 + 0xC]
	0x03681E14 ADD W8, W8, 0x1
	0x03681E18 CMP W8, W21
	0x03681E1C STR W8, [X31 + 0xC]
	0x03681E20 B.LT 0x3681D88
	0x03681E24 LDP X20, X19, [X31 + 0x30]
	0x03681E28 LDP X22, X21, [X31 + 0x20]
	0x03681E2C LDP X30, X23, [X31 + 0x10]
	0x03681E30 ADD X31, X31, 0x40
	0x03681E34 RET
	0x03681E38 BL 0x1C16F20
	0x03681E3C RET
	0x03681E40 SUB X31, X31, 0x30

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD60000
	009 Move X23, 0xABD000
	010 Move W8, [X22+2023]
	011 Move X23, [X23+3576]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xABD000
	020 Move X0, [X0+3576]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2023], W8
	024 Move X0, [X23]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X21
	030 Move W1, W31
	031 Call WebHeaderCollection.CheckBadChars, X0, X1
	032 Move X21, X0
	033 Move X0, X20
	034 Move X1, X21
	035 Call WebHeaderCollection.ThrowOnRestrictedHeader, X0, X1
	036 Move W1, 1
	037 Move X0, X19
	038 Call WebHeaderCollection.CheckBadChars, X0, X1
	039 Move X19, X0
	040 Compare X0, 0
	041 JumpIfEqual {46}
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X19+16]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X20
	047 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	048 Move X0, X20
	049 Move X1, X31
	050 Call NameValueCollection.InvalidateCachedArrays, X0
	051 Move X0, X20
	052 Call WebHeaderCollection.get_InnerCollection, X0
	053 Compare X0, 0
	054 JumpIfEqual {68}
	055 Move X8, [X0]
	056 Move X1, X21
	057 Move X2, X19
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X4, [X8+584]
	061 Move X3, [X8+592]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X30, [X31+16]
	065 Move X23, [X31+24]
	066 Add X31, X31, 64
	067 CallNoReturn X4
	068 Call 0x1C17F20
	069 Move X0, 0xA73000
	070 Move X0, [X0+2512]
	071 Call 0x1C17D08
	072 Move W1, 1
	073 Call 0x1C17D6C
	074 Move W8, 0xFFFF
	075 Move X20, X0
	076 NotImplemented "Instruction STRH not yet implemented."
	077 Move X0, 0xA78000
	078 Move X0, [X0+1624]
	079 Call 0x1C17D08
	080 Add X1, X31, 12
	081 Call 0x1C17E04
	082 Move X21, X0
	083 Move X0, X20
	084 Call 0x19913C0
	085 Move X0, X20
	086 Move X1, X21
	087 Call 0x19990B4
	088 Move X0, X20
	089 Move X1, X31
	090 Move X2, X21
	091 Call 0x1994444
	092 Move X0, 0xABD000
	093 Move X0, [X0+3992]
	094 Call 0x1C17D08
	095 Move X1, X20
	096 Move X2, X31
	097 Call SR.GetString, X0, X1
	098 Move X20, X0
	099 Move X0, 0xA7B000
	100 Move X0, [X0+1888]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X21, X0
	104 Move X0, 0xA7D000
	105 Move X0, [X0+3784]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X21
	109 Move X2, X19
	110 Move X3, X20
	111 Move X4, X31
	112 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	113 Move X0, 0xABD000
	114 Move X0, [X0+4000]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X21
	118 Call 0x1C17DEC

Method: System.Void Add(System.String header)

Disassembly:
	0x03681E44 STP X30, X21, [X31 + 0x10]
	0x03681E48 STP X20, X19, [X31 + 0x20]
	0x03681E4C ADRP X21, 0xD5F000
	0x03681E50 LDRB W8, [X21 + 0x7F2]
	0x03681E54 MOV X19, X1
	0x03681E58 MOV X20, X0
	0x03681E5C TBNZ X8, 0x0, 0x3681E74
	0x03681E60 ADRP X0, 0xA9C000
	0x03681E64 LDR X0, [X0 + 0x2C8]
	0x03681E68 BL 0x1C16CF4
	0x03681E6C MOVZ W8, 0x1
	0x03681E70 STRB W8, [X21 + 0x7F2]
	0x03681E74 MOV X0, X20
	0x03681E78 STR W31, [X31 + 0x8]
	0x03681E7C BL 0x36801C0
	0x03681E80 LDR X8, [X20]
	0x03681E84 MOV X0, X20
	0x03681E88 LDR X9, [X8 + 0x218]
	0x03681E8C LDR X1, [X8 + 0x220]
	0x03681E90 BLR X9
	0x03681E94 CBZ X19, 0x3681FBC
	0x03681E98 ADRP X8, 0xA9C000
	0x03681E9C LDR X8, [X8 + 0x2C8]
	0x03681EA0 MOV W2, W0
	0x03681EA4 MOV X0, X19
	0x03681EA8 MOV X3, X31
	0x03681EAC LDR X1, [X8]
	0x03681EB0 BL 0x32A8F28
	0x03681EB4 STR W31, [X31 + 0xC]
	0x03681EB8 LDR X8, [X20]
	0x03681EBC MOV X0, X20
	0x03681EC0 LDR X9, [X8 + 0x218]
	0x03681EC4 LDR X1, [X8 + 0x220]
	0x03681EC8 BLR X9
	0x03681ECC CMP W0, 0x1
	0x03681ED0 B.LT 0x3681FAC
	0x03681ED4 MOV X0, X31
	0x03681ED8 BL 0x333AB78
	0x03681EDC MOV X1, X0
	0x03681EE0 ADD X0, X31, 0xC
	0x03681EE4 MOV X2, X31
	0x03681EE8 BL 0x337B824
	0x03681EEC LDR X8, [X20]
	0x03681EF0 LDR W1, [X31 + 0xC]
	0x03681EF4 MOV X21, X0
	0x03681EF8 MOV X0, X20
	0x03681EFC LDR X9, [X8 + 0x2B8]
	0x03681F00 LDR X2, [X8 + 0x2C0]
	0x03681F04 BLR X9
	0x03681F08 MOV X2, X0
	0x03681F0C MOV X0, X19
	0x03681F10 MOV X1, X21
	0x03681F14 MOV X3, X31
	0x03681F18 BL 0x32A8BF0
	0x03681F1C LDR X8, [X20]
	0x03681F20 LDR W21, [X31 + 0xC]
	0x03681F24 MOV X0, X20
	0x03681F28 LDR X9, [X8 + 0x218]
	0x03681F2C LDR X1, [X8 + 0x220]
	0x03681F30 BLR X9
	0x03681F34 ADD W8, W0, W21
	0x03681F38 MOV X0, X31
	0x03681F3C STR W8, [X31 + 0x8]
	0x03681F40 BL 0x333AB78
	0x03681F44 MOV X1, X0
	0x03681F48 ADD X0, X31, 0x8
	0x03681F4C MOV X2, X31
	0x03681F50 BL 0x337B824
	0x03681F54 LDR X8, [X20]
	0x03681F58 LDR W1, [X31 + 0xC]
	0x03681F5C MOV X21, X0
	0x03681F60 MOV X0, X20
	0x03681F64 LDR X9, [X8 + 0x298]
	0x03681F68 LDR X2, [X8 + 0x2A0]
	0x03681F6C BLR X9
	0x03681F70 MOV X2, X0
	0x03681F74 MOV X0, X19
	0x03681F78 MOV X1, X21
	0x03681F7C MOV X3, X31
	0x03681F80 BL 0x32A8BF0
	0x03681F84 LDR W8, [X31 + 0xC]
	0x03681F88 MOV X0, X20
	0x03681F8C ADD W21, W8, 0x1
	0x03681F90 STR W21, [X31 + 0xC]
	0x03681F94 LDR X8, [X20]
	0x03681F98 LDR X9, [X8 + 0x218]
	0x03681F9C LDR X1, [X8 + 0x220]
	0x03681FA0 BLR X9
	0x03681FA4 CMP W21, W0
	0x03681FA8 B.LT 0x3681ED4
	0x03681FAC LDP X20, X19, [X31 + 0x20]
	0x03681FB0 LDP X30, X21, [X31 + 0x10]
	0x03681FB4 ADD X31, X31, 0x30
	0x03681FB8 RET
	0x03681FBC BL 0x1C16F20
	0x03681FC0 LDR X8, [X0]
	0x03681FC4 LDP X5, X4, [X8 + 0x1E8]
	0x03681FC8 BR X5
	0x03681FCC STP X29, X30, [X31 - 0x60]!
	0x03681FD0 STP X28, X27, [X31 + 0x10]
	0x03681FD4 STP X26, X25, [X31 + 0x20]
	0x03681FD8 STP X24, X23, [X31 + 0x30]
	0x03681FDC STP X22, X21, [X31 + 0x40]
	0x03681FE0 STP X20, X19, [X31 + 0x50]
	0x03681FE4 ADRP X21, 0xD5F000
	0x03681FE8 LDRB W8, [X21 + 0x7F3]
	0x03681FEC MOV X19, X1
	0x03681FF0 MOV X20, X0
	0x03681FF4 TBNZ X8, 0x0, 0x3682018
	0x03681FF8 ADRP X0, 0xABC000
	0x03681FFC LDR X0, [X0 + 0xEC8]
	0x03682000 BL 0x1C16CF4
	0x03682004 ADRP X0, 0xABB000
	0x03682008 LDR X0, [X0 + 0xDF8]
	0x0368200C BL 0x1C16CF4
	0x03682010 MOVZ W8, 0x1
	0x03682014 STRB W8, [X21 + 0x7F3]
	0x03682018 CBZ X19, 0x36822A0
	0x0368201C LDR X8, [X20 + 0x68]
	0x03682020 CBZ X8, 0x36822A0
	0x03682024 LDR W8, [X19 + 0x10]
	0x03682028 CMP W8, 0x1
	0x0368202C B.LT 0x36822A0
	0x03682030 MOV X0, X19
	0x03682034 MOV W1, W31
	0x03682038 MOV X2, X31
	0x0368203C BL 0x3222A1C
	0x03682040 AND W8, W0, 0xFFFF
	0x03682044 CMP W8, 0xFF
	0x03682048 B.HI 0x36822A0
	0x0368204C ADRP X23, 0xABB000
	0x03682050 LDR X23, [X23 + 0xDF8]
	0x03682054 LDR X0, [X23]
	0x03682058 LDR W8, [X0 + 0xE0]
	0x0368205C CBNZ W8, 0x3682068
	0x03682060 BL 0x1C16DFC
	0x03682064 LDR X0, [X23]
	0x03682068 LDR X8, [X0 + 0xB8]
	0x0368206C MOV X0, X19
	0x03682070 MOV W1, W31
	0x03682074 MOV X2, X31
	0x03682078 LDR X21, [X8 + 0x10]
	0x0368207C BL 0x3222A1C
	0x03682080 CBZ X21, 0x36822F0
	0x03682084 LDR W9, [X21 + 0x18]
	0x03682088 AND W8, W0, 0x1F
	0x0368208C CMP W8, W9
	0x03682090 B.CS 0x36822F4
	0x03682094 ADD X8, X21, W8, UXTW
	0x00000000 INVALID
	0x0368209C TBNZ X8, 0x1F, 0x36822A0
	0x036820A0 ADRP X25, 0xABB000
	0x036820A4 LDR X25, [X25 + 0xEC8]
	0x036820A8 AND W27, W8, 0xFF
	0x036820AC LDR X0, [X23]
	0x036820B0 MOV W24, W27
	0x036820B4 LDR W8, [X0 + 0xE0]
	0x036820B8 CBNZ W8, 0x36820C4
	0x036820BC BL 0x1C16DFC
	0x036820C0 LDR X0, [X23]
	0x036820C4 LDR X8, [X0 + 0xB8]
	0x036820C8 LDR X8, [X8 + 0x8]
	0x036820CC CBZ X8, 0x36822F0
	0x036820D0 LDR W9, [X8 + 0x18]
	0x036820D4 CMP W24, W9
	0x036820D8 B.CS 0x36822F4
	0x036820DC SXTW X26, W24
	0x036820E0 ADD X8, X8, X26, 0x3, LSL
	0x036820E4 LDR X21, [X8 + 0x20]
	0x036820E8 CBZ X21, 0x36822F0
	0x036820EC LDR W8, [X21 + 0x10]
	0x036820F0 LDR W9, [X19 + 0x10]
	0x036820F4 CMP W8, W9
	0x036820F8 B.LT 0x36822A0
	0x036820FC LDR X0, [X25]
	0x03682100 LDR W8, [X0 + 0xE0]
	0x03682104 CBNZ W8, 0x3682110
	0x03682108 BL 0x1C16DFC
	0x0368210C LDR X0, [X25]
	0x03682110 LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD60000
	009 Move X22, 0xABD000
	010 Move W8, [X21+2024]
	011 Move X22, [X22+3624]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xABD000
	019 Move X0, [X0+3624]
	020 Call 0x1C17CF4
	021 Move X0, 0xABD000
	022 Move X0, [X0+3576]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2024], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Compare X20, 0
	032 JumpIfEqual {103}
	033 Move W8, [X20+16]
	034 Compare W8, 0
	035 JumpIfEqual {103}
	036 Move W1, 58
	037 Move X0, X20
	038 Move X2, X31
	039 Call String.IndexOf, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, -2147483648
	042 Compare TEMP, -2147483648
	043 JumpIfEqual {121}
	044 Move X23, 0xABD000
	045 Move X23, [X23+3576]
	046 Move W22, W0
	047 Move X0, X20
	048 Move W1, W31
	049 Move W2, W22
	050 Move X3, X31
	051 Call String.Substring, X0, X1, X2
	052 Move X21, X0
	053 Add W1, W22, 1
	054 Move X0, X20
	055 Move X2, X31
	056 Call String.Substring, X0, X1
	057 Move X8, [X23]
	058 Move X20, X0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move W1, W31
	066 Call WebHeaderCollection.CheckBadChars, X0, X1
	067 Move X21, X0
	068 Move X0, X19
	069 Move X1, X21
	070 Call WebHeaderCollection.ThrowOnRestrictedHeader, X0, X1
	071 Move W1, 1
	072 Move X0, X20
	073 Call WebHeaderCollection.CheckBadChars, X0, X1
	074 Move X20, X0
	075 Compare X0, 0
	076 JumpIfEqual {81}
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W8, [X20+16]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, X19
	082 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	083 Move X0, X19
	084 Move X1, X31
	085 Call NameValueCollection.InvalidateCachedArrays, X0
	086 Move X0, X19
	087 Call WebHeaderCollection.get_InnerCollection, X0
	088 Compare X0, 0
	089 JumpIfEqual {146}
	090 Move X8, [X0]
	091 Move X1, X21
	092 Move X2, X20
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X4, [X8+584]
	096 Move X3, [X8+592]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X30, [X31+16]
	100 Move X23, [X31+24]
	101 Add X31, X31, 64
	102 CallNoReturn X4
	103 Move X0, 0xA78000
	104 Move X0, [X0+1320]
	105 Call 0x1C17D08
	106 Call 0x1C17F10
	107 Move X19, X0
	108 Move X0, 0xABD000
	109 Move X0, [X0+4008]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X19
	113 Move X2, X31
	114 Call ArgumentNullException..ctor, X0, X1
	115 Move X0, 0xABD000
	116 Move X0, [X0+4016]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X19
	120 Call 0x1C17DEC
	121 Move X0, 0xABD000
	122 Move X0, [X0+4024]
	123 Call 0x1C17D08
	124 Move X1, X31
	125 Call SR.GetString, X0
	126 Move X19, X0
	127 Move X0, 0xA7B000
	128 Move X0, [X0+1400]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X20, X0
	132 Move X0, 0xABC000
	133 Move X0, [X0+4008]
	134 Call 0x1C17D08
	135 Move X2, X0
	136 Move X0, X20
	137 Move X1, X19
	138 Move X3, X31
	139 Call ArgumentException..ctor, X0, X1, X2
	140 Move X0, 0xABC000
	141 Move X0, [X0+4016]
	142 Call 0x1C17D08
	143 Move X1, X0
	144 Move X0, X20
	145 Call 0x1C17DEC
	146 Call 0x1C17F20
	147 Move X0, 0xA72000
	148 Move X0, [X0+2512]
	149 Call 0x1C17D08
	150 Move W1, 1
	151 Call 0x1C17D6C
	152 Move W8, 0xFFFF
	153 Move X19, X0
	154 NotImplemented "Instruction STRH not yet implemented."
	155 Move X0, 0xA77000
	156 Move X0, [X0+1624]
	157 Call 0x1C17D08
	158 Add X1, X31, 12
	159 Call 0x1C17E04
	160 Move X21, X0
	161 Move X0, X19
	162 Call 0x19913C0
	163 Move X0, X19
	164 Move X1, X21
	165 Call 0x19990B4
	166 Move X0, X19
	167 Move X1, X31
	168 Move X2, X21
	169 Call 0x1994444
	170 Move X0, 0xABC000
	171 Move X0, [X0+3992]
	172 Call 0x1C17D08
	173 Move X1, X19
	174 Move X2, X31
	175 Call SR.GetString, X0, X1
	176 Move X19, X0
	177 Move X0, 0xA7A000
	178 Move X0, [X0+1888]
	179 Call 0x1C17D08
	180 Call 0x1C17F10
	181 Move X21, X0
	182 Move X0, 0xA7C000
	183 Move X0, [X0+3784]
	184 Call 0x1C17D08
	185 Move X1, X0
	186 Move X0, X21
	187 Move X2, X20
	188 Move X3, X19
	189 Move X4, X31
	190 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	191 Move X0, 0xABC000
	192 Move X0, [X0+4016]
	193 Call 0x1C17D08
	194 Move X1, X0
	195 Move X0, X21
	196 Call 0x1C17DEC

Method: System.Void Set(System.String name, System.String value)

Disassembly:
	0x03682114 MOV X0, X19
	0x03682118 MOV W1, W31
	0x0368211C MOV X2, X31
	0x03682120 LDR X22, [X8 + 0x8]
	0x03682124 BL 0x3222A1C
	0x03682128 CBZ X22, 0x36822F0
	0x0368212C LDR W8, [X22 + 0x18]
	0x03682130 CMP W8, W0, UXTH
	0x03682134 B.LS 0x36822F4
	0x03682138 LDR X8, [X25]
	0x0368213C ADD X9, X22, W0, UXTH
	0x03682140 LDRB W22, [X9 + 0x20]
	0x03682144 MOV X0, X21
	0x03682148 LDR X8, [X8 + 0xB8]
	0x0368214C MOV W1, W31
	0x03682150 MOV X2, X31
	0x03682154 LDR X27, [X8 + 0x8]
	0x03682158 BL 0x3222A1C
	0x0368215C CBZ X27, 0x36822F0
	0x03682160 LDR W8, [X27 + 0x18]
	0x03682164 CMP W8, W0, UXTH
	0x03682168 B.LS 0x36822F4
	0x0368216C ADD X8, X27, W0, UXTH
	0x03682170 LDRB W8, [X8 + 0x20]
	0x03682174 CMP W22, W8
	0x03682178 B.NE 0x36822A0
	0x0368217C LDR W8, [X21 + 0x10]
	0x03682180 LDR W9, [X19 + 0x10]
	0x03682184 ADD W27, W24, 0x1
	0x03682188 CMP W8, W9
	0x0368218C B.GT 0x36820AC
	0x03682190 MOVZ W22, 0x1
	0x03682194 CMP W8, 0x2
	0x03682198 B.LT 0x3682278
	0x0368219C MOV X0, X19
	0x036821A0 MOV W1, W22
	0x036821A4 MOV X2, X31
	0x036821A8 BL 0x3222A1C
	0x036821AC AND W28, W0, 0xFFFF
	0x036821B0 MOV X0, X21
	0x036821B4 MOV W1, W22
	0x036821B8 MOV X2, X31
	0x036821BC BL 0x3222A1C
	0x036821C0 CMP W28, W0, UXTH
	0x036821C4 B.EQ 0x3682264
	0x036821C8 MOV X0, X19
	0x036821CC MOV W1, W22
	0x036821D0 MOV X2, X31
	0x036821D4 BL 0x3222A1C
	0x036821D8 AND W8, W0, 0xFFFF
	0x036821DC CMP W8, 0xFF
	0x036821E0 B.HI 0x3682274
	0x036821E4 LDR X0, [X25]
	0x036821E8 LDR W8, [X0 + 0xE0]
	0x036821EC CBNZ W8, 0x36821F8
	0x036821F0 BL 0x1C16DFC
	0x036821F4 LDR X0, [X25]
	0x036821F8 LDR X8, [X0 + 0xB8]
	0x036821FC MOV X0, X19
	0x03682200 MOV W1, W22
	0x03682204 MOV X2, X31
	0x03682208 LDR X28, [X8 + 0x8]
	0x0368220C BL 0x3222A1C
	0x03682210 CBZ X28, 0x36822F0
	0x03682214 LDR W8, [X28 + 0x18]
	0x03682218 CMP W8, W0, UXTH
	0x0368221C B.LS 0x36822F4
	0x03682220 LDR X8, [X25]
	0x03682224 ADD X9, X28, W0, UXTH
	0x03682228 LDRB W28, [X9 + 0x20]
	0x0368222C MOV X0, X21
	0x03682230 LDR X8, [X8 + 0xB8]
	0x03682234 MOV W1, W22
	0x03682238 MOV X2, X31
	0x0368223C LDR X29, [X8 + 0x8]
	0x03682240 BL 0x3222A1C
	0x03682244 CBZ X29, 0x36822F0
	0x03682248 LDR W8, [X29 + 0x18]
	0x0368224C CMP W8, W0, UXTH
	0x03682250 B.LS 0x36822F4
	0x03682254 ADD X8, X29, W0, UXTH
	0x03682258 LDRB W8, [X8 + 0x20]
	0x0368225C CMP W28, W8
	0x03682260 B.NE 0x3682274
	0x03682264 LDR W8, [X21 + 0x10]
	0x03682268 ADD W22, W22, 0x1
	0x0368226C CMP W22, W8
	0x03682270 B.LT 0x368219C
	0x03682274 LDR W8, [X21 + 0x10]
	0x03682278 CMP W22, W8
	0x0368227C B.NE 0x36820AC
	0x03682280 LDR X8, [X20 + 0x68]
	0x03682284 CBZ X8, 0x36822F0
	0x03682288 LDR W9, [X8 + 0x18]
	0x0368228C CMP W24, W9
	0x03682290 B.CS 0x36822F4
	0x03682294 ADD X8, X8, X26, 0x3, LSL
	0x03682298 LDR X0, [X8 + 0x20]
	0x0368229C B 0x36822D4
	0x036822A0 LDR X0, [X20 + 0x78]
	0x036822A4 CBZ X0, 0x36822D4
	0x036822A8 LDR X8, [X0]
	0x036822AC MOV X1, X19
	0x036822B0 LDP X20, X19, [X31 + 0x50]
	0x036822B4 LDP X22, X21, [X31 + 0x40]
	0x036822B8 LDR X3, [X8 + 0x258]
	0x036822BC LDR X2, [X8 + 0x260]
	0x036822C0 LDP X24, X23, [X31 + 0x30]
	0x036822C4 LDP X26, X25, [X31 + 0x20]
	0x036822C8 LDP X28, X27, [X31 + 0x10]
	0x036822CC LDP X29, X30, [X31], #0x60
	0x036822D0 BR X3
	0x036822D4 LDP X20, X19, [X31 + 0x50]
	0x036822D8 LDP X22, X21, [X31 + 0x40]
	0x036822DC LDP X24, X23, [X31 + 0x30]
	0x036822E0 LDP X26, X25, [X31 + 0x20]
	0x036822E4 LDP X28, X27, [X31 + 0x10]
	0x036822E8 LDP X29, X30, [X31], #0x60
	0x036822EC RET
	0x036822F0 BL 0x1C16F20
	0x036822F4 BL 0x1C16F28
	0x036822F8 STP X30, X21, [X31 - 0x20]!
	0x036822FC STP X20, X19, [X31 + 0x10]
	0x03682300 ADRP X21, 0xD5E000
	0x03682304 ADRP X20, 0xABB000
	0x03682308 LDRB W8, [X21 + 0x7F4]
	0x0368230C LDR X20, [X20 + 0x288]
	0x03682310 MOV X19, X0
	0x03682314 TBNZ X8, 0x0, 0x368232C
	0x03682318 ADRP X0, 0xABB000
	0x0368231C LDR X0, [X0 + 0x288]
	0x03682320 BL 0x1C16CF4
	0x03682324 MOVZ W8, 0x1
	0x03682328 STRB W8, [X21 + 0x7F4]
	0x0368232C MOV X0, X19
	0x03682330 BL 0x36801C0
	0x03682334 MOV X0, X19
	0x03682338 BL 0x36802C0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD5F000
	009 Move X23, 0xABC000
	010 Move W8, [X22+2025]
	011 Move X23, [X23+3624]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xABC000
	020 Move X0, [X0+3624]
	021 Call 0x1C17CF4
	022 Move X0, 0xABC000
	023 Move X0, [X0+3576]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2025], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Compare X21, 0
	033 JumpIfEqual {83}
	034 Move W8, [X21+16]
	035 Compare W8, 0
	036 JumpIfEqual {83}
	037 Move X8, 0xABC000
	038 Move X8, [X8+3576]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move W1, W31
	046 Call WebHeaderCollection.CheckBadChars, X0, X1
	047 Move X21, X0
	048 Move X0, X20
	049 Move X1, X21
	050 Call WebHeaderCollection.ThrowOnRestrictedHeader, X0, X1
	051 Move W1, 1
	052 Move X0, X19
	053 Call WebHeaderCollection.CheckBadChars, X0, X1
	054 Move X19, X0
	055 Compare X0, 0
	056 JumpIfEqual {61}
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, [X19+16]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X20
	062 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	063 Move X0, X20
	064 Move X1, X31
	065 Call NameValueCollection.InvalidateCachedArrays, X0
	066 Move X0, X20
	067 Call WebHeaderCollection.get_InnerCollection, X0
	068 Compare X0, 0
	069 JumpIfEqual {101}
	070 Move X8, [X0]
	071 Move X1, X21
	072 Move X2, X19
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X4, [X8+632]
	076 Move X3, [X8+640]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X30, [X31+16]
	080 Move X23, [X31+24]
	081 Add X31, X31, 64
	082 CallNoReturn X4
	083 Move X0, 0xA77000
	084 Move X0, [X0+1320]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0xA7A000
	089 Move X0, [X0+1416]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Move X2, X31
	094 Call ArgumentNullException..ctor, X0, X1
	095 Move X0, 0xABC000
	096 Move X0, [X0+4032]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X19
	100 Call 0x1C17DEC
	101 Call 0x1C17F20
	102 Move X0, 0xA72000
	103 Move X0, [X0+2512]
	104 Call 0x1C17D08
	105 Move W1, 1
	106 Call 0x1C17D6C
	107 Move W8, 0xFFFF
	108 Move X20, X0
	109 NotImplemented "Instruction STRH not yet implemented."
	110 Move X0, 0xA77000
	111 Move X0, [X0+1624]
	112 Call 0x1C17D08
	113 Add X1, X31, 12
	114 Call 0x1C17E04
	115 Move X21, X0
	116 Move X0, X20
	117 Call 0x19913C0
	118 Move X0, X20
	119 Move X1, X21
	120 Call 0x19990B4
	121 Move X0, X20
	122 Move X1, X31
	123 Move X2, X21
	124 Call 0x1994444
	125 Move X0, 0xABC000
	126 Move X0, [X0+3992]
	127 Call 0x1C17D08
	128 Move X1, X20
	129 Move X2, X31
	130 Call SR.GetString, X0, X1
	131 Move X20, X0
	132 Move X0, 0xA7A000
	133 Move X0, [X0+1888]
	134 Call 0x1C17D08
	135 Call 0x1C17F10
	136 Move X21, X0
	137 Move X0, 0xA7C000
	138 Move X0, [X0+3784]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X21
	142 Move X2, X19
	143 Move X3, X20
	144 Move X4, X31
	145 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	146 Move X0, 0xABC000
	147 Move X0, [X0+4032]
	148 Call 0x1C17D08
	149 Move X1, X0
	150 Move X0, X21
	151 Call 0x1C17DEC

Method: System.Void SetInternal(System.String name, System.String value)

Disassembly:
	0x0368233C LDR X8, [X20]
	0x03682340 MOV X19, X0
	0x03682344 MOV X0, X8
	0x03682348 BL 0x1C16F10
	0x0368234C MOV X1, X19
	0x03682350 MOV X2, X31
	0x03682354 MOV X20, X0
	0x03682358 BL 0x3666040
	0x0368235C MOV X0, X20
	0x03682360 LDP X20, X19, [X31 + 0x10]
	0x03682364 LDP X30, X21, [X31], #0x20
	0x03682368 RET
	0x0368236C STP X30, X19, [X31 - 0x10]!
	0x03682370 MOV X19, X0
	0x03682374 LDR X0, [X0 + 0x78]
	0x03682378 CBZ X0, 0x368238C
	0x0368237C LDR X8, [X0]
	0x03682380 LDR X9, [X8 + 0x218]
	0x03682384 LDR X1, [X8 + 0x220]
	0x03682388 BLR X9
	0x0368238C LDR W8, [X19 + 0x70]
	0x03682390 ADD W0, W8, W0
	0x03682394 LDP X30, X19, [X31], #0x10
	0x03682398 RET
	0x0368239C STP X30, X19, [X31 - 0x10]!
	0x036823A0 MOV X19, X0
	0x036823A4 BL 0x36801C0
	0x036823A8 MOV X0, X19
	0x036823AC BL 0x36802C0
	0x036823B0 CBZ X0, 0x36823C8
	0x036823B4 LDR X8, [X0]
	0x036823B8 LDR X2, [X8 + 0x228]
	0x036823BC LDR X1, [X8 + 0x230]
	0x036823C0 LDP X30, X19, [X31], #0x10
	0x036823C4 BR X2
	0x036823C8 BL 0x1C16F20
	0x036823CC STR X30, [X31 - 0x20]!
	0x036823D0 STP X20, X19, [X31 + 0x10]
	0x036823D4 MOV W19, W1
	0x036823D8 MOV X20, X0
	0x036823DC BL 0x36801C0
	0x036823E0 MOV X0, X20
	0x036823E4 BL 0x36802C0
	0x036823E8 CBZ X0, 0x3682408
	0x036823EC LDR X8, [X0]
	0x036823F0 MOV W1, W19
	0x036823F4 LDP X20, X19, [X31 + 0x10]
	0x036823F8 LDR X3, [X8 + 0x298]
	0x036823FC LDR X2, [X8 + 0x2A0]
	0x03682400 LDR X30, [X31], #0x20
	0x03682404 BR X3
	0x03682408 BL 0x1C16F20
	0x0368240C STR X30, [X31 - 0x20]!
	0x03682410 STP X20, X19, [X31 + 0x10]
	0x03682414 MOV W19, W1
	0x03682418 MOV X20, X0
	0x0368241C BL 0x36801C0
	0x03682420 MOV X0, X20
	0x03682424 BL 0x36802C0
	0x03682428 CBZ X0, 0x3682448
	0x0368242C LDR X8, [X0]
	0x03682430 MOV W1, W19
	0x03682434 LDP X20, X19, [X31 + 0x10]
	0x03682438 LDR X3, [X8 + 0x2A8]
	0x0368243C LDR X2, [X8 + 0x2B0]
	0x03682440 LDR X30, [X31], #0x20
	0x03682444 BR X3
	0x03682448 BL 0x1C16F20
	0x0368244C STR X30, [X31 - 0x20]!
	0x03682450 STP X20, X19, [X31 + 0x10]
	0x03682454 MOV W19, W1
	0x03682458 MOV X20, X0
	0x0368245C BL 0x36801C0
	0x03682460 MOV X0, X20
	0x03682464 BL 0x36802C0
	0x03682468 CBZ X0, 0x3682488
	0x0368246C LDR X8, [X0]
	0x03682470 MOV W1, W19
	0x03682474 LDP X20, X19, [X31 + 0x10]
	0x03682478 LDR X3, [X8 + 0x2B8]
	0x0368247C LDR X2, [X8 + 0x2C0]
	0x03682480 LDR X30, [X31], #0x20
	0x03682484 BR X3
	0x03682488 BL 0x1C16F20
	0x0368248C STP X30, X19, [X31 - 0x10]!
	0x03682490 MOV X19, X0
	0x03682494 BL 0x36801C0
	0x03682498 MOV X0, X19
	0x0368249C BL 0x36802C0
	0x036824A0 CBZ X0, 0x36824B8
	0x036824A4 LDR X8, [X0]
	0x036824A8 LDR X2, [X8 + 0x2C8]
	0x036824AC LDR X1, [X8 + 0x2D0]
	0x036824B0 LDP X30, X19, [X31], #0x10
	0x036824B4 BR X2
	0x036824B8 BL 0x1C16F20
	0x036824BC STP X30, X19, [X31 - 0x10]!
	0x036824C0 MOV X1, X31
	0x036824C4 MOV X19, X0
	0x036824C8 STR X31, [X0 + 0x68]
	0x036824CC STR W31, [X0 + 0x70]
	0x036824D0 BL 0x3663ABC
	0x036824D4 LDR X0, [X19 + 0x78]
	0x036824D8 CBZ X0, 0x36824F0
	0x036824DC LDR X8, [X0]
	0x036824E0 LDR X2, [X8 + 0x238]
	0x036824E4 LDR X1, [X8 + 0x240]
	0x036824E8 LDP X30, X19, [X31], #0x10
	0x036824EC BR X2
	0x036824F0 LDP X30, X19, [X31], #0x10
	0x036824F4 RET
	0x036824F8 STR X30, [X31 - 0x40]!
	0x036824FC STP X24, X23, [X31 + 0x10]
	0x03682500 STP X22, X21, [X31 + 0x20]
	0x03682504 STP X20, X19, [X31 + 0x30]
	0x03682508 ADRP X19, 0xD5E000
	0x0368250C ADRP X22, 0xABB000
	0x03682510 ADRP X20, 0xABB000
	0x03682514 ADRP X21, 0xA71000
	0x03682518 LDRB W8, [X19 + 0x7F5]
	0x0368251C LDR X22, [X22 + 0xF30]
	0x03682520 LDR X20, [X20 + 0xDF8]
	0x03682524 LDR X21, [X21 + 0xAC8]
	0x03682528 TBNZ X8, 0x0, 0x3682684
	0x0368252C ADRP X0, 0xA7A000
	0x03682530 LDR X0, [X0 + 0x8D8]
	0x03682534 BL 0x1C16CF4
	0x03682538 ADRP X0, 0xABB000
	0x0368253C LDR X0, [X0 + 0xF30]
	0x03682540 BL 0x1C16CF4
	0x03682544 ADRP X0, 0xABB000
	0x03682548 LDR X0, [X0 + 0xFE0]
	0x0368254C BL 0x1C16CF4
	0x03682550 ADRP X0, 0xAA0000
	0x03682554 LDR X0, [X0 + 0x708]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD5F000
	009 Move X23, 0xABC000
	010 Move W8, [X22+2026]
	011 Move X23, [X23+3624]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xABC000
	020 Move X0, [X0+3624]
	021 Call 0x1C17CF4
	022 Move X0, 0xABC000
	023 Move X0, [X0+3576]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2026], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Compare X21, 0
	033 JumpIfEqual {80}
	034 Move W8, [X21+16]
	035 Compare W8, 0
	036 JumpIfEqual {80}
	037 Move X8, 0xABC000
	038 Move X8, [X8+3576]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move W1, W31
	046 Call WebHeaderCollection.CheckBadChars, X0, X1
	047 Move X21, X0
	048 Move W1, 1
	049 Move X0, X19
	050 Call WebHeaderCollection.CheckBadChars, X0, X1
	051 Move X19, X0
	052 Compare X0, 0
	053 JumpIfEqual {58}
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, [X19+16]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X20
	059 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	060 Move X0, X20
	061 Move X1, X31
	062 Call NameValueCollection.InvalidateCachedArrays, X0
	063 Move X0, X20
	064 Call WebHeaderCollection.get_InnerCollection, X0
	065 Compare X0, 0
	066 JumpIfEqual {98}
	067 Move X8, [X0]
	068 Move X1, X21
	069 Move X2, X19
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X4, [X8+632]
	073 Move X3, [X8+640]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X30, [X31+16]
	077 Move X23, [X31+24]
	078 Add X31, X31, 64
	079 CallNoReturn X4
	080 Move X0, 0xA77000
	081 Move X0, [X0+1320]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xA7A000
	086 Move X0, [X0+1416]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentNullException..ctor, X0, X1
	092 Move X0, 0xABC000
	093 Move X0, [X0+4040]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC
	098 Call 0x1C17F20
	099 Move X0, 0xA72000
	100 Move X0, [X0+2512]
	101 Call 0x1C17D08
	102 Move W1, 1
	103 Call 0x1C17D6C
	104 Move W8, 0xFFFF
	105 Move X20, X0
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Move X0, 0xA77000
	108 Move X0, [X0+1624]
	109 Call 0x1C17D08
	110 Add X1, X31, 12
	111 Call 0x1C17E04
	112 Move X21, X0
	113 Move X0, X20
	114 Call 0x19913C0
	115 Move X0, X20
	116 Move X1, X21
	117 Call 0x19990B4
	118 Move X0, X20
	119 Move X1, X31
	120 Move X2, X21
	121 Call 0x1994444
	122 Move X0, 0xABC000
	123 Move X0, [X0+3992]
	124 Call 0x1C17D08
	125 Move X1, X20
	126 Move X2, X31
	127 Call SR.GetString, X0, X1
	128 Move X20, X0
	129 Move X0, 0xA7A000
	130 Move X0, [X0+1888]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X21, X0
	134 Move X0, 0xA7C000
	135 Move X0, [X0+3784]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X21
	139 Move X2, X19
	140 Move X3, X20
	141 Move X4, X31
	142 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	143 Move X0, 0xABC000
	144 Move X0, [X0+4040]
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X21
	148 Call 0x1C17DEC

Method: System.Void Remove(System.String name)

Disassembly:
	0x03682558 BL 0x1C16CF4
	0x0368255C ADRP X0, 0xA71000
	0x03682560 LDR X0, [X0 + 0xAC8]
	0x03682564 BL 0x1C16CF4
	0x03682568 ADRP X0, 0xABB000
	0x0368256C LDR X0, [X0 + 0xFE8]
	0x03682570 BL 0x1C16CF4
	0x03682574 ADRP X0, 0xABB000
	0x03682578 LDR X0, [X0 + 0x6E0]
	0x0368257C BL 0x1C16CF4
	0x03682580 ADRP X0, 0xABB000
	0x03682584 LDR X0, [X0 + 0xFF0]
	0x03682588 BL 0x1C16CF4
	0x0368258C ADRP X0, 0xABB000
	0x03682590 LDR X0, [X0 + 0xDF8]
	0x03682594 BL 0x1C16CF4
	0x03682598 ADRP X0, 0xAB8000
	0x0368259C LDR X0, [X0 + 0x9D8]
	0x036825A0 BL 0x1C16CF4
	0x036825A4 ADRP X0, 0xAB8000
	0x036825A8 LDR X0, [X0 + 0x9E0]
	0x036825AC BL 0x1C16CF4
	0x036825B0 ADRP X0, 0xAB8000
	0x036825B4 LDR X0, [X0 + 0xA10]
	0x036825B8 BL 0x1C16CF4
	0x036825BC ADRP X0, 0xAB8000
	0x036825C0 LDR X0, [X0 + 0xA18]
	0x036825C4 BL 0x1C16CF4
	0x036825C8 ADRP X0, 0xABB000
	0x036825CC LDR X0, [X0 + 0xFF8]
	0x036825D0 BL 0x1C16CF4
	0x036825D4 ADRP X0, 0xAAC000
	0x036825D8 LDR X0, [X0 + 0x988]
	0x036825DC BL 0x1C16CF4
	0x036825E0 ADRP X0, 0xABC000
	0x036825E4 LDR X0, [X0]
	0x036825E8 BL 0x1C16CF4
	0x036825EC ADRP X0, 0xAB8000
	0x036825F0 LDR X0, [X0 + 0xA60]
	0x036825F4 BL 0x1C16CF4
	0x036825F8 ADRP X0, 0xABC000
	0x036825FC LDR X0, [X0 + 0x8]
	0x03682600 BL 0x1C16CF4
	0x03682604 ADRP X0, 0xAB8000
	0x03682608 LDR X0, [X0 + 0xA78]
	0x0368260C BL 0x1C16CF4
	0x03682610 ADRP X0, 0xAB8000
	0x03682614 LDR X0, [X0 + 0xA80]
	0x03682618 BL 0x1C16CF4
	0x0368261C ADRP X0, 0xA99000
	0x03682620 LDR X0, [X0 + 0xB28]
	0x03682624 BL 0x1C16CF4
	0x03682628 ADRP X0, 0xAB8000
	0x0368262C LDR X0, [X0 + 0xA88]
	0x03682630 BL 0x1C16CF4
	0x03682634 ADRP X0, 0xAB8000
	0x03682638 LDR X0, [X0 + 0xA98]
	0x0368263C BL 0x1C16CF4
	0x03682640 ADRP X0, 0xAB8000
	0x03682644 LDR X0, [X0 + 0xAC8]
	0x03682648 BL 0x1C16CF4
	0x0368264C ADRP X0, 0xA71000
	0x03682650 LDR X0, [X0 + 0xEC8]
	0x03682654 BL 0x1C16CF4
	0x03682658 ADRP X0, 0xABC000
	0x0368265C LDR X0, [X0 + 0x10]
	0x03682660 BL 0x1C16CF4
	0x03682664 ADRP X0, 0xABC000
	0x03682668 LDR X0, [X0 + 0x18]
	0x0368266C BL 0x1C16CF4
	0x03682670 ADRP X0, 0xAB8000
	0x03682674 LDR X0, [X0 + 0xAF0]
	0x03682678 BL 0x1C16CF4
	0x0368267C MOVZ W8, 0x1
	0x03682680 STRB W8, [X19 + 0x7F5]
	0x03682684 LDR X0, [X22]
	0x03682688 BL 0x1C16F10
	0x0368268C MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD5F000
	007 Move X22, 0xABC000
	008 Move W8, [X21+2027]
	009 Move X22, [X22+3624]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xABC000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move X0, 0xABC000
	020 Move X0, [X0+3576]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2027], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Compare X20, 0
	030 JumpIfEqual {75}
	031 Move W8, [X20+16]
	032 Compare W8, 0
	033 JumpIfEqual {75}
	034 Move X21, 0xABC000
	035 Move X21, [X21+3576]
	036 Move X0, X19
	037 Move X1, X20
	038 Call WebHeaderCollection.ThrowOnRestrictedHeader, X0, X1
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move W1, W31
	046 Call WebHeaderCollection.CheckBadChars, X0, X1
	047 Move X20, X0
	048 Move X0, X19
	049 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	050 Move X8, [X19+120]
	051 Compare X8, 0
	052 JumpIfEqual {69}
	053 Move X0, X19
	054 Move X1, X31
	055 Call NameValueCollection.InvalidateCachedArrays, X0
	056 Move X0, [X19+120]
	057 Compare X0, 0
	058 JumpIfEqual {93}
	059 Move X8, [X0]
	060 Move X1, X20
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X3, [X8+648]
	066 Move X2, [X8+656]
	067 Move X30, [X31+48]
	068 CallNoReturn X3
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Move X0, 0xA77000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xA7A000
	081 Move X0, [X0+1416]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, 0xABC000
	088 Move X0, [X0+4048]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC
	093 Call 0x1C17F20

Method: System.String[] GetValues(System.String header)

Disassembly:
	0x03682690 MOV X19, X0
	0x03682694 BL 0x33BDD8C
	0x03682698 LDR X8, [X20]
	0x0368269C MOVZ W1, 0x13
	0x036826A0 LDR X8, [X8 + 0xB8]
	0x036826A4 STR X19, [X8]
	0x036826A8 LDR X0, [X21]
	0x036826AC BL 0x1C16D6C
	0x036826B0 CBZ X0, 0x3682948
	0x036826B4 LDR W8, [X0 + 0x18]
	0x036826B8 CBZ W8, 0x3682944
	0x036826BC ADRP X9, 0xAB8000
	0x036826C0 LDR X9, [X9 + 0xA98]
	0x036826C4 CMP W8, 0x1
	0x036826C8 LDR X9, [X9]
	0x036826CC STR X9, [X0 + 0x20]
	0x036826D0 B.EQ 0x3682944
	0x036826D4 ADRP X9, 0xA99000
	0x036826D8 LDR X9, [X9 + 0xB28]
	0x036826DC CMP W8, 0x2
	0x036826E0 LDR X9, [X9]
	0x036826E4 STR X9, [X0 + 0x28]
	0x036826E8 B.LS 0x3682944
	0x036826EC ADRP X9, 0xAB8000
	0x036826F0 LDR X9, [X9 + 0xA60]
	0x036826F4 CMP W8, 0x3
	0x036826F8 LDR X9, [X9]
	0x036826FC STR X9, [X0 + 0x30]
	0x03682700 B.EQ 0x3682944
	0x03682704 ADRP X9, 0xAAC000
	0x03682708 LDR X9, [X9 + 0x988]
	0x0368270C CMP W8, 0x4
	0x03682710 LDR X9, [X9]
	0x03682714 STR X9, [X0 + 0x38]
	0x03682718 B.LS 0x3682944
	0x0368271C ADRP X9, 0xAB8000
	0x03682720 LDR X9, [X9 + 0xA18]
	0x03682724 CMP W8, 0x5
	0x03682728 LDR X9, [X9]
	0x0368272C STR X9, [X0 + 0x40]
	0x03682730 B.EQ 0x3682944
	0x03682734 ADRP X9, 0xAB8000
	0x03682738 LDR X9, [X9 + 0xA78]
	0x0368273C CMP W8, 0x6
	0x03682740 LDR X9, [X9]
	0x03682744 STR X9, [X0 + 0x48]
	0x03682748 B.LS 0x3682944
	0x0368274C ADRP X9, 0xAB8000
	0x03682750 LDR X9, [X9 + 0xA10]
	0x03682754 CMP W8, 0x7
	0x03682758 LDR X9, [X9]
	0x0368275C STR X9, [X0 + 0x50]
	0x03682760 B.EQ 0x3682944
	0x03682764 ADRP X9, 0xAB8000
	0x03682768 LDR X9, [X9 + 0xA88]
	0x0368276C CMP W8, 0x8
	0x03682770 LDR X9, [X9]
	0x03682774 STR X9, [X0 + 0x58]
	0x03682778 B.LS 0x3682944
	0x0368277C ADRP X9, 0xAB8000
	0x03682780 LDR X9, [X9 + 0x9E0]
	0x03682784 CMP W8, 0x9
	0x03682788 LDR X9, [X9]
	0x0368278C STR X9, [X0 + 0x60]
	0x03682790 B.EQ 0x3682944
	0x03682794 ADRP X9, 0xAB8000
	0x03682798 LDR X9, [X9 + 0xAC8]
	0x0368279C CMP W8, 0xA
	0x036827A0 LDR X9, [X9]
	0x036827A4 STR X9, [X0 + 0x68]
	0x036827A8 B.LS 0x3682944
	0x036827AC ADRP X9, 0xABB000
	0x036827B0 LDR X9, [X9 + 0xFF8]
	0x036827B4 CMP W8, 0xB
	0x036827B8 LDR X9, [X9]
	0x036827BC STR X9, [X0 + 0x70]
	0x036827C0 B.EQ 0x3682944
	0x036827C4 ADRP X9, 0xABC000
	0x036827C8 LDR X9, [X9 + 0x10]
	0x036827CC CMP W8, 0xC
	0x036827D0 LDR X9, [X9]
	0x036827D4 STR X9, [X0 + 0x78]
	0x036827D8 B.LS 0x3682944
	0x036827DC ADRP X9, 0xABC000
	0x036827E0 LDR X9, [X9]
	0x036827E4 CMP W8, 0xD
	0x036827E8 LDR X9, [X9]
	0x036827EC STR X9, [X0 + 0x80]
	0x036827F0 B.EQ 0x3682944
	0x036827F4 ADRP X9, 0xAB8000
	0x036827F8 LDR X9, [X9 + 0x9D8]
	0x036827FC CMP W8, 0xE
	0x03682800 LDR X9, [X9]
	0x03682804 STR X9, [X0 + 0x88]
	0x03682808 B.LS 0x3682944
	0x0368280C ADRP X9, 0xAB8000
	0x03682810 LDR X9, [X9 + 0xAF0]
	0x03682814 CMP W8, 0xF
	0x03682818 LDR X9, [X9]
	0x0368281C STR X9, [X0 + 0x90]
	0x03682820 B.EQ 0x3682944
	0x03682824 ADRP X9, 0xAB8000
	0x03682828 LDR X9, [X9 + 0xA80]
	0x0368282C CMP W8, 0x10
	0x03682830 LDR X9, [X9]
	0x03682834 STR X9, [X0 + 0x98]
	0x03682838 B.LS 0x3682944
	0x0368283C ADRP X9, 0xABC000
	0x03682840 LDR X9, [X9 + 0x8]
	0x03682844 CMP W8, 0x11
	0x03682848 LDR X9, [X9]
	0x0368284C STR X9, [X0 + 0xA0]
	0x03682850 B.EQ 0x3682944
	0x03682854 ADRP X9, 0xABC000
	0x03682858 LDR X9, [X9 + 0x18]
	0x0368285C CMP W8, 0x12
	0x03682860 LDR X9, [X9]
	0x03682864 STR X9, [X0 + 0xA8]
	0x03682868 B.LS 0x3682944
	0x0368286C ADRP X8, 0xA71000
	0x03682870 LDR X8, [X8 + 0xEC8]
	0x03682874 ADRP X9, 0xAA0000
	0x03682878 ADRP X19, 0xABB000
	0x0368287C ADRP X21, 0xA7A000
	0x03682880 LDR X8, [X8]
	0x03682884 ADRP X22, 0xABB000
	0x03682888 ADRP X23, 0xABB000
	0x0368288C ADRP X24, 0xABB000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xD5F000
	010 Move X20, 0xABC000
	011 Move W8, [X22+2028]
	012 Move X20, [X20+3576]
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xA9F000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move X0, 0xA72000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move X0, 0xABC000
	026 Move X0, [X0+3576]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2028], W8
	030 Move X0, X21
	031 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X8, [X8]
	040 Compare X8, 0
	041 JumpIfEqual {144}
	042 Move X1, X19
	043 Call HeaderInfoTable.get_Item, X0, X1
	044 Move X20, X0
	045 Move X0, X21
	046 Call WebHeaderCollection.get_InnerCollection, X0
	047 Compare X0, 0
	048 JumpIfEqual {144}
	049 Move X8, [X0]
	050 Move X1, X19
	051 Move X9, [X8+616]
	052 Move X2, [X8+624]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X19, X0
	055 Compare X20, 0
	056 JumpIfEqual {134}
	057 Compare X19, 0
	058 JumpIfEqual {134}
	059 Move W8, [X20+40]
	060 Compare W8, 0
	061 JumpIfEqual {134}
	062 Move X8, [X19+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X25, 0xA9F000
	065 Move X25, [X25+2976]
	066 Move W24, W31
	067 Move X22, X31
	068 Move X21, X31
	069 And X8, X8, 0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X20+24]
	072 Compare X8, 0
	073 JumpIfEqual {144}
	074 Add X9, X19, X22
	075 Move X10, [X8+24]
	076 Move X0, [X8+64]
	077 Move X1, [X9+32]
	078 Move X2, [X8+40]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X23, X0
	081 Compare X21, 0
	082 JumpIfNotEqual {104}
	083 Compare X23, 0
	084 JumpIfEqual {144}
	085 Move W8, [X23+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X21, X31
	088 Move X0, [X25]
	089 Call 0x1C17F10
	090 Move X1, X19
	091 Move X2, X31
	092 Move X21, X0
	093 Call ArrayList..ctor, X0, X1
	094 Compare X21, 0
	095 JumpIfEqual {144}
	096 Move X8, [X21]
	097 Move W9, [X19+24]
	098 Move X0, X21
	099 Move W1, W22
	100 Move X10, [X8+1000]
	101 Move X3, [X8+1008]
	102 Add W2, W24, W9
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, [X21]
	105 Move X0, X21
	106 Move X1, X23
	107 Move X9, [X8+792]
	108 Move X2, [X8+800]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move W8, [X19+24]
	111 Add X22, X22, 1
	112 Subtract W24, W24, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Compare X21, 0
	115 JumpIfEqual {134}
	116 Move X8, [X21]
	117 Move X0, X21
	118 Move X9, [X8+664]
	119 Move X1, [X8+672]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, 0xA72000
	122 Move X8, [X8+2760]
	123 Move W1, W0
	124 Move X8, [X8]
	125 Move X0, X8
	126 Call 0x1C17D6C
	127 Move X8, [X21]
	128 Move X19, X0
	129 Move X0, X21
	130 Move X1, X19
	131 Move X9, [X8+856]
	132 Move X2, [X8+864]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X0, X19
	135 Move X20, [X31+48]
	136 Move X19, [X31+56]
	137 Move X22, [X31+32]
	138 Move X21, [X31+40]
	139 Move X24, [X31+16]
	140 Move X23, [X31+24]
	141 Move X30, [X31+64]
	142 Move X25, [X31+72]
	143 Return X0
	144 Call 0x1C17F20
	145 Call 0x1C17F28

Method: System.String ToString()

Disassembly:
	0x03682890 STR X8, [X0 + 0xB0]
	0x03682894 LDR X8, [X20]
	0x03682898 MOVZ W1, 0x20
	0x0368289C LDR X8, [X8 + 0xB8]
	0x036828A0 LDR X9, [X9 + 0x708]
	0x036828A4 LDR X19, [X19 + 0xFE8]
	0x036828A8 LDR X21, [X21 + 0x8D8]
	0x036828AC STR X0, [X8 + 0x8]
	0x036828B0 LDR X0, [X9]
	0x036828B4 LDR X22, [X22 + 0x6E0]
	0x036828B8 LDR X23, [X23 + 0xFE0]
	0x036828BC LDR X24, [X24 + 0xFF0]
	0x036828C0 BL 0x1C16D6C
	0x036828C4 LDR X1, [X19]
	0x036828C8 MOV X2, X31
	0x036828CC MOV X19, X0
	0x036828D0 BL 0x32C5BD8
	0x036828D4 LDR X8, [X20]
	0x036828D8 MOVZ W1, 0x6
	0x036828DC LDR X8, [X8 + 0xB8]
	0x036828E0 STR X19, [X8 + 0x10]
	0x036828E4 LDR X0, [X21]
	0x036828E8 BL 0x1C16D6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD5F000
	006 Move X21, 0xABC000
	007 Move W8, [X20+2029]
	008 Move X21, [X21+3576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xABC000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2029], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move W2, W31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]

Method: System.String GetAsString(System.Collections.Specialized.NameValueCollection cc, System.Boolean winInetCompat, System.Boolean forTrace)

Disassembly:
	0x036828EC LDR X1, [X22]
	0x036828F0 MOV X2, X31
	0x036828F4 MOV X19, X0
	0x036828F8 BL 0x32C5BD8
	0x036828FC LDR X8, [X20]
	0x03682900 MOVZ W1, 0x80
	0x03682904 LDR X8, [X8 + 0xB8]
	0x03682908 STR X19, [X8 + 0x18]
	0x0368290C LDR X0, [X23]
	0x03682910 BL 0x1C16D6C
	0x03682914 LDR X1, [X24]
	0x03682918 MOV X2, X31
	0x0368291C MOV X19, X0
	0x03682920 BL 0x32C5BD8
	0x03682924 LDR X8, [X20]
	0x03682928 LDP X22, X21, [X31 + 0x20]
	0x0368292C LDP X24, X23, [X31 + 0x10]
	0x03682930 LDR X8, [X8 + 0xB8]
	0x03682934 STR X19, [X8 + 0x20]
	0x03682938 LDP X20, X19, [X31 + 0x30]
	0x0368293C LDR X30, [X31], #0x40
	0x03682940 RET
	0x03682944 BL 0x1C16F28
	0x03682948 BL 0x1C16F20
	0x0368294C MOV X1, X31
	0x03682950 B 0x33BDD8C
	0x03682954 STR X30, [X31 - 0x30]!
	0x03682958 STP X22, X21, [X31 + 0x10]
	0x0368295C STP X20, X19, [X31 + 0x20]
	0x03682960 ADRP X20, 0xD5E000
	0x03682964 LDRB W8, [X20 + 0x7F6]
	0x03682968 MOV X19, X1
	0x0368296C TBNZ X8, 0x0, 0x3682990
	0x03682970 ADRP X0, 0xABB000
	0x03682974 LDR X0, [X0 + 0xEC8]
	0x03682978 BL 0x1C16CF4
	0x0368297C ADRP X0, 0xA73000
	0x03682980 LDR X0, [X0 + 0x278]
	0x03682984 BL 0x1C16CF4
	0x03682988 MOVZ W8, 0x1
	0x0368298C STRB W8, [X20 + 0x7F6]
	0x03682990 CBZ X19, 0x3682A50
	0x03682994 ADRP X8, 0xA73000
	0x03682998 LDR X8, [X8 + 0x278]
	0x0368299C LDR X9, [X19]
	0x036829A0 LDR X8, [X8]
	0x036829A4 CMP X9, X8
	0x036829A8 CSEL X19, X19, X31, EQ
	0x036829AC CBZ X19, 0x3682A64
	0x036829B0 LDR W20, [X19 + 0x10]
	0x036829B4 CBZ W20, 0x3682A50
	0x036829B8 ADRP X21, 0xABB000
	0x036829BC LDR X21, [X21 + 0xEC8]
	0x036829C0 LDR X0, [X21]
	0x036829C4 LDR W8, [X0 + 0xE0]
	0x036829C8 CBNZ W8, 0x36829D4
	0x036829CC BL 0x1C16DFC
	0x036829D0 LDR X0, [X21]
	0x036829D4 LDR X8, [X0 + 0xB8]
	0x036829D8 MOV X0, X19
	0x036829DC MOV W1, W31
	0x036829E0 MOV X2, X31
	0x036829E4 LDR X22, [X8 + 0x8]
	0x036829E8 BL 0x3222A1C
	0x036829EC CBZ X22, 0x3682A64
	0x036829F0 LDR W9, [X22 + 0x18]
	0x036829F4 AND W8, W0, 0xFF
	0x036829F8 CMP W8, W9
	0x036829FC B.CS 0x3682A68
	0x03682A00 LDR X9, [X21]
	0x03682A04 ADD X8, X22, W8, UXTW
	0x03682A08 LDRB W21, [X8 + 0x20]
	0x03682A0C SUB W1, W20, 0x1
	0x03682A10 LDR X9, [X9 + 0xB8]
	0x03682A14 MOV X0, X19
	0x03682A18 MOV X2, X31
	0x03682A1C LDR X22, [X9 + 0x8]
	0x03682A20 BL 0x3222A1C
	0x03682A24 CBZ X22, 0x3682A64
	0x03682A28 LDR W9, [X22 + 0x18]
	0x03682A2C AND W8, W0, 0xFF
	0x03682A30 CMP W8, W9
	0x03682A34 B.CS 0x3682A68
	0x03682A38 ADD X8, X22, W8, UXTW
	0x03682A3C LDRB W8, [X8 + 0x20]
	0x03682A40 UBFM W9, W21, 0x8, 0x7
	0x03682A44 BFM W9, W8, 0x10, 0x7
	0x03682A48 EOR W0, W9, W20, 0x0
	0x03682A4C B 0x3682A54
	0x03682A50 MOV W0, W31
	0x03682A54 LDP X20, X19, [X31 + 0x20]
	0x03682A58 LDP X22, X21, [X31 + 0x10]
	0x03682A5C LDR X30, [X31], #0x30
	0x03682A60 RET
	0x03682A64 BL 0x1C16F20
	0x03682A68 BL 0x1C16F28
	0x03682A6C STR X30, [X31 - 0x50]!
	0x03682A70 STP X26, X25, [X31 + 0x10]
	0x03682A74 STP X24, X23, [X31 + 0x20]
	0x03682A78 STP X22, X21, [X31 + 0x30]
	0x03682A7C STP X20, X19, [X31 + 0x40]
	0x03682A80 ADRP X21, 0xD5E000
	0x03682A84 ADRP X22, 0xA73000
	0x03682A88 LDRB W8, [X21 + 0x7F7]
	0x03682A8C LDR X22, [X22 + 0x278]
	0x03682A90 MOV X20, X2
	0x03682A94 MOV X19, X1
	0x03682A98 TBNZ X8, 0x0, 0x3682ABC
	0x03682A9C ADRP X0, 0xABB000
	0x03682AA0 LDR X0, [X0 + 0xEC8]
	0x03682AA4 BL 0x1C16CF4
	0x03682AA8 ADRP X0, 0xA73000
	0x03682AAC LDR X0, [X0 + 0x278]
	0x03682AB0 BL 0x1C16CF4
	0x03682AB4 MOVZ W8, 0x1
	0x03682AB8 STRB W8, [X21 + 0x7F7]
	0x03682ABC LDR X8, [X22]
	0x03682AC0 CBZ X19, 0x3682AD0
	0x03682AC4 LDR X9, [X19]
	0x03682AC8 CMP X9, X8
	0x03682ACC CSEL X19, X19, X31, EQ
	0x03682AD0 CBZ X20, 0x3682AE0
	0x03682AD4 LDR X9, [X20]
	0x03682AD8 CMP X9, X8
	0x03682ADC CSEL X20, X20, X31, EQ
	0x03682AE0 CBZ X19, 0x3682BA0
	0x03682AE4 CBZ X20, 0x3682BAC
	0x03682AE8 LDR W8, [X19 + 0x10]
	0x03682AEC LDR W9, [X20 + 0x10]
	0x03682AF0 SUB W21, W8, W9
	0x03682AF4 CMP W21, 0x0
	0x03682AF8 CSEL W23, W9, W8, GT
	0x03682AFC CMP W23, 0x1
	0x03682B00 B.LT 0x3682BB8
	0x03682B04 ADRP X24, 0xABB000
	0x03682B08 LDR X24, [X24 + 0xEC8]
	0x03682B0C MOV W22, W31
	0x03682B10 LDR X0, [X24]
	0x03682B14 LDR W8, [X0 + 0xE0]
	0x03682B18 CBNZ W8, 0x3682B24
	0x03682B1C BL 0x1C16DFC
	0x03682B20 LDR X0, [X24]
	0x03682B24 LDR X8, [X0 + 0xB8]
	0x03682B28 MOV X0, X19
	0x03682B2C MOV W1, W22
	0x03682B30 MOV X2, X31
	0x03682B34 LDR X25, [X8 + 0x8]
	0x03682B38 BL 0x3222A1C
	0x03682B3C CBZ X25, 0x3682BD4
	0x03682B40 LDR W8, [X25 + 0x18]
	0x03682B44 CMP W8, W0, UXTH
	0x03682B48 B.LS 0x3682BD8
	0x03682B4C LDR X8, [X24]
	0x03682B50 ADD X9, X25, W0, UXTH
	0x03682B54 LDRB W25, [X9 + 0x20]
	0x03682B58 MOV X0, X20
	0x03682B5C LDR X8, [X8 + 0xB8]
	0x03682B60 MOV W1, W22
	0x03682B64 MOV X2, X31
	0x03682B68 LDR X26, [X8 + 0x8]
	0x03682B6C BL 0x3222A1C
	0x03682B70 CBZ X26, 0x3682BD4
	0x03682B74 LDR W8, [X26 + 0x18]
	0x03682B78 CMP W8, W0, UXTH
	0x03682B7C B.LS 0x3682BD8
	0x03682B80 ADD X8, X26, W0, UXTH
	0x03682B84 LDRB W8, [X8 + 0x20]
	0x03682B88 SUBS W8, W25, W8
	0x03682B8C B.NE 0x3682BB4
	0x03682B90 ADD W22, W22, 0x1
	0x03682B94 CMP W23, W22

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0xD5F000
	012 Move W8, [X22+2030]
	013 Move W19, W2
	014 Move W21, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xA72000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move X0, 0xA74000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move X0, 0xABC000
	027 Move X0, [X0+3624]
	028 Call 0x1C17CF4
	029 Move X0, 0xA76000
	030 Move X0, [X0+2344]
	031 Call 0x1C17CF4
	032 Move X0, 0xAB0000
	033 Move X0, [X0+1056]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2030], W8
	037 Move TEMP, X21
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {193}
	041 Move X25, 0xAB0000
	042 Move X25, [X25+1056]
	043 Compare X20, 0
	044 JumpIfEqual {159}
	045 Move X8, [X20]
	046 Move X0, X20
	047 Move X9, [X8+536]
	048 Move X1, [X8+544]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare W0, 0
	051 JumpIfEqual {159}
	052 Move X8, [X20]
	053 Move X0, X20
	054 Move X9, [X8+536]
	055 Move X1, [X8+544]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, 0xA72000
	058 Move X8, [X8+2288]
	059 Move W22, W0
	060 Move X8, [X8]
	061 Move X0, X8
	062 Call 0x1C17F10
	063 Move W8, 30
	064 Multiply W1, W22, W8
	065 Move X2, X31
	066 Move X21, X0
	067 Call StringBuilder..ctor, X0, X1
	068 Move X8, 0xA74000
	069 Move X8, [X8+632]
	070 Move X0, X20
	071 Move X2, X31
	072 Move X8, [X8]
	073 Move X8, [X8+184]
	074 Move X1, [X8]
	075 Call NameValueCollection.get_Item, X0, X1
	076 Compare X0, 0
	077 JumpIfEqual {89}
	078 Compare X21, 0
	079 JumpIfEqual {192}
	080 Move X1, X0
	081 Move X0, X21
	082 Move X2, X31
	083 Call StringBuilder.Append, X0, X1
	084 Compare X0, 0
	085 JumpIfEqual {192}
	086 Move X1, [X25]
	087 Move X2, X31
	088 Call StringBuilder.Append, X0, X1
	089 Move X8, [X20]
	090 Move X0, X20
	091 Move X9, [X8+536]
	092 Move X1, [X8+544]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X26, 0xABC000
	096 Move X27, 0xA76000
	097 Move X26, [X26+3624]
	098 Move X27, [X27+2344]
	099 Move W22, W31
	100 Move X8, [X20]
	101 Move X0, X20
	102 Move W1, W22
	103 Move X9, [X8+696]
	104 Move X2, [X8+704]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, [X20]
	107 Move X24, X0
	108 Move X0, X20
	109 Move W1, W22
	110 Move X9, [X8+664]
	111 Move X2, [X8+672]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, [X26]
	114 Move X23, X0
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfEqual {120}
	118 Compare X24, 0
	119 JumpIfNotEqual {124}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Compare X24, 0
	123 JumpIfEqual {146}
	124 Move W8, [X24+16]
	125 Compare W8, 0
	126 JumpIfEqual {146}
	127 Compare X21, 0
	128 JumpIfEqual {192}
	129 Move X0, X21
	130 Move X1, X24
	131 Move X2, X31
	132 Call StringBuilder.Append, X0, X1
	133 Move X1, [X27]
	134 Move X0, X21
	135 Move X2, X31
	136 Call StringBuilder.Append, X0, X1
	137 Move X0, X21
	138 Move X1, X23
	139 Move X2, X31
	140 Call StringBuilder.Append, X0, X1
	141 Compare X0, 0
	142 JumpIfEqual {192}
	143 Move X1, [X25]
	144 Move X2, X31
	145 Call StringBuilder.Append, X0, X1
	146 Move X8, [X20]
	147 Move X0, X20
	148 Add W22, W22, 1
	149 Move X9, [X8+536]
	150 Move X1, [X8+544]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move TEMP, X19
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {171}
	157 Compare X21, 0
	158 JumpIfNotEqual {177}
	159 Move X0, [X25]
	160 Move X20, [X31+64]
	161 Move X19, [X31+72]
	162 Move X22, [X31+48]
	163 Move X21, [X31+56]
	164 Move X24, [X31+32]
	165 Move X23, [X31+40]
	166 Move X26, [X31+16]
	167 Move X25, [X31+24]
	168 Move X30, [X31+80]
	169 Move X27, [X31+88]
	170 Return X0
	171 Compare X21, 0
	172 JumpIfEqual {192}
	173 Move X1, [X25]
	174 Move X0, X21
	175 Move X2, X31
	176 Call StringBuilder.Append, X0, X1
	177 Move X8, [X21]
	178 Move X0, X21
	179 Move X20, [X31+64]
	180 Move X19, [X31+72]
	181 Move X22, [X31+48]
	182 Move X21, [X31+56]
	183 Move X2, [X8+360]
	184 Move X1, [X8+368]
	185 Move X24, [X31+32]
	186 Move X23, [X31+40]
	187 Move X26, [X31+16]
	188 Move X25, [X31+24]
	189 Move X30, [X31+80]
	190 Move X27, [X31+88]
	191 CallNoReturn X2
	192 Call 0x1C17F20
	193 Move X0, 0xA72000
	194 Move X0, [X0+1456]
	195 Call 0x1C17D08
	196 Call 0x1C17F10
	197 Move X1, X31
	198 Move X19, X0
	199 Call InvalidOperationException..ctor, X0
	200 Move X0, 0xABC000
	201 Move X0, [X0+4056]
	202 Call 0x1C17D08
	203 Move X1, X0
	204 Move X0, X19
	205 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x0367DAA0 BR X5
	0x0367DAA4 BL 0x1C16F20
	0x0367DAA8 STP X30, X21, [X31 - 0x20]!
	0x0367DAAC STP X20, X19, [X31 + 0x10]
	0x0367DAB0 MOV W20, W1
	0x0367DAB4 MOV X19, X0
	0x0367DAB8 TBZ X1, 0x0, 0x367DAC4
	0x0367DABC MOV X0, X19
	0x0367DAC0 BL 0x367B0B4
	0x0367DAC4 AND W1, W20, 0x1
	0x0367DAC8 MOV X0, X19
	0x0367DACC LDP X20, X19, [X31 + 0x10]
	0x0367DAD0 MOV X2, X31
	0x0367DAD4 LDP X30, X21, [X31], #0x20
	0x0367DAD8 B 0x32F02C8
	0x0367DADC CMP W1, 0x1
	0x0367DAE0 MOV X21, X0
	0x0367DAE4 B.NE 0x367DB18
	0x0367DAE8 MOV X0, X21
	0x0367DAEC BL 0x3EB1AD0
	0x0367DAF0 LDR X20, [X0]
	0x0367DAF4 BL 0x3EB1AE0
	0x0367DAF8 MOVZ W1, 0x1
	0x0367DAFC MOV X0, X19
	0x0367DB00 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD64000
	006 Move X20, 0xAAA000
	007 Move W8, [X21+2031]
	008 Move X20, [X20+1336]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAAA000
	015 Move X0, [X0+1336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2031], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, X31
	030 Move X1, [X8]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call NameValueCollection..ctor, X0, X1
	034 Return 

Method: System.Void .ctor(System.Net.WebHeaderCollectionType type)

Disassembly:
	0x03682B98 B.NE 0x3682B10
	0x03682B9C B 0x3682BB8
	0x03682BA0 CMP X20, 0x0
	0x03682BA4 CSINV W0, W31, W31, EQ
	0x03682BA8 B 0x3682BBC
	0x03682BAC MOVZ W21, 0x1
	0x03682BB0 B 0x3682BB8
	0x03682BB4 MOV W21, W8
	0x03682BB8 MOV W0, W21
	0x03682BBC LDP X20, X19, [X31 + 0x40]
	0x03682BC0 LDP X22, X21, [X31 + 0x30]
	0x03682BC4 LDP X24, X23, [X31 + 0x20]
	0x03682BC8 LDP X26, X25, [X31 + 0x10]
	0x03682BCC LDR X30, [X31], #0x50
	0x03682BD0 RET
	0x03682BD4 BL 0x1C16F20
	0x03682BD8 BL 0x1C16F28
	0x03682BDC STR X30, [X31 - 0x30]!
	0x03682BE0 STP X22, X21, [X31 + 0x10]
	0x03682BE4 STP X20, X19, [X31 + 0x20]
	0x03682BE8 ADRP X20, 0xD5E000
	0x03682BEC LDRB W8, [X20 + 0x7F8]
	0x03682BF0 MOV X19, X1
	0x03682BF4 TBNZ X8, 0x0, 0x3682C0C
	0x03682BF8 ADRP X0, 0xABB000
	0x03682BFC LDR X0, [X0 + 0xEC8]
	0x03682C00 BL 0x1C16CF4
	0x03682C04 MOVZ W8, 0x1
	0x03682C08 STRB W8, [X20 + 0x7F8]
	0x03682C0C CBZ X19, 0x3682CC4
	0x03682C10 LDR W20, [X19 + 0x10]
	0x03682C14 CBZ W20, 0x3682CB0
	0x03682C18 ADRP X21, 0xABB000
	0x03682C1C LDR X21, [X21 + 0xEC8]
	0x03682C20 LDR X0, [X21]
	0x03682C24 LDR W8, [X0 + 0xE0]
	0x03682C28 CBNZ W8, 0x3682C34
	0x03682C2C BL 0x1C16DFC
	0x03682C30 LDR X0, [X21]
	0x03682C34 LDR X8, [X0 + 0xB8]
	0x03682C38 MOV X0, X19
	0x03682C3C MOV W1, W31
	0x03682C40 MOV X2, X31
	0x03682C44 LDR X22, [X8 + 0x8]
	0x03682C48 BL 0x3222A1C
	0x03682C4C CBZ X22, 0x3682CC4
	0x03682C50 LDR W9, [X22 + 0x18]
	0x03682C54 AND W8, W0, 0xFF
	0x03682C58 CMP W8, W9
	0x03682C5C B.CS 0x3682CC8
	0x03682C60 LDR X9, [X21]
	0x03682C64 ADD X8, X22, W8, UXTW
	0x03682C68 LDRB W21, [X8 + 0x20]
	0x03682C6C SUB W1, W20, 0x1
	0x03682C70 LDR X9, [X9 + 0xB8]
	0x03682C74 MOV X0, X19
	0x03682C78 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD5F000
	007 Move X21, 0xAA5000
	008 Move W8, [X22+2032]
	009 Move X21, [X21+1336]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xAA5000
	017 Move X0, [X0+1336]
	018 Call 0x1C17CF4
	019 Move X0, 0xA72000
	020 Move X0, [X0+2760]
	021 Call 0x1C17CF4
	022 Move X0, 0xABC000
	023 Move X0, [X0+3576]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2032], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X0+184]
	034 Move X0, X19
	035 Move X2, X31
	036 Move X1, [X8]
	037 Call NameValueCollection..ctor, X0, X1
	038 And W8, W20, 0xFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction STRH not yet implemented."
	041 Move X20, 0xABC000
	042 Move X20, [X20+3576]
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X20]
	049 Move X8, [X0+184]
	050 Move X8, [X8+8]
	051 Compare X8, 0
	052 JumpIfEqual {66}
	053 Move X9, 0xA72000
	054 Move X9, [X9+2760]
	055 Move W8, [X8+24]
	056 Move X0, [X9]
	057 Subtract W1, W8, 1
	058 Call 0x1C17D6C
	059 Move [X19+104], X0
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return 
	066 Call 0x1C17F20

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x03682C7C LDR X22, [X9 + 0x8]
	0x03682C80 BL 0x3222A1C
	0x03682C84 CBZ X22, 0x3682CC4
	0x03682C88 LDR W9, [X22 + 0x18]
	0x03682C8C AND W8, W0, 0xFF
	0x03682C90 CMP W8, W9
	0x03682C94 B.CS 0x3682CC8
	0x03682C98 ADD X8, X22, W8, UXTW
	0x03682C9C LDRB W8, [X8 + 0x20]
	0x03682CA0 UBFM W9, W21, 0x8, 0x7
	0x03682CA4 BFM W9, W8, 0x10, 0x7
	0x03682CA8 EOR W0, W9, W20, 0x0
	0x03682CAC B 0x3682CB4
	0x03682CB0 MOV W0, W31
	0x03682CB4 LDP X20, X19, [X31 + 0x20]
	0x03682CB8 LDP X22, X21, [X31 + 0x10]
	0x03682CBC LDR X30, [X31], #0x30
	0x03682CC0 RET
	0x03682CC4 BL 0x1C16F20
	0x03682CC8 BL 0x1C16F28
	0x03682CCC STP X30, X25, [X31 - 0x40]!
	0x03682CD0 STP X24, X23, [X31 + 0x10]
	0x03682CD4 STP X22, X21, [X31 + 0x20]
	0x03682CD8 STP X20, X19, [X31 + 0x30]
	0x03682CDC ADRP X21, 0xD5E000
	0x03682CE0 ADRP X22, 0xA73000
	0x03682CE4 LDRB W8, [X21 + 0x7F9]
	0x03682CE8 LDR X22, [X22 + 0x278]
	0x03682CEC MOV X20, X2
	0x03682CF0 MOV X19, X1
	0x03682CF4 TBNZ X8, 0x0, 0x3682D18
	0x03682CF8 ADRP X0, 0xABB000
	0x03682CFC LDR X0, [X0 + 0xEC8]
	0x03682D00 BL 0x1C16CF4
	0x03682D04 ADRP X0, 0xA73000
	0x03682D08 LDR X0, [X0 + 0x278]
	0x03682D0C BL 0x1C16CF4
	0x03682D10 MOVZ W8, 0x1
	0x03682D14 STRB W8, [X21 + 0x7F9]
	0x03682D18 LDR X8, [X22]
	0x03682D1C CBZ X19, 0x3682D2C
	0x03682D20 LDR X9, [X19]
	0x03682D24 CMP X9, X8
	0x03682D28 CSEL X19, X19, X31, EQ
	0x03682D2C CBZ X20, 0x3682E20
	0x03682D30 LDR X9, [X20]
	0x03682D34 CMP X9, X8
	0x03682D38 CSEL X20, X20, X31, EQ
	0x03682D3C ORR X8, X19, X20, 0x0
	0x03682D40 CMP X8, 0x0
	0x03682D44 CSET W0, EQ
	0x03682D48 CBZ X19, 0x3682E30
	0x03682D4C CBZ X20, 0x3682E30
	0x03682D50 LDR W21, [X19 + 0x10]
	0x03682D54 LDR W8, [X20 + 0x10]
	0x03682D58 CMP W21, W8
	0x03682D5C B.NE 0x3682E2C
	0x03682D60 MOV X1, X19
	0x03682D64 BL 0x3682BDC
	0x03682D68 MOV X1, X20
	0x03682D6C MOV W22, W0
	0x03682D70 BL 0x3682BDC
	0x03682D74 CMP W22, W0
	0x03682D78 B.NE 0x3682E2C
	0x03682D7C ADRP X22, 0xABB000
	0x03682D80 LDR X22, [X22 + 0xEC8]
	0x03682D84 MOV W23, W21
	0x03682D88 CMP W21, 0x0
	0x03682D8C B.LE 0x3682E14
	0x03682D90 LDR X0, [X22]
	0x03682D94 SUB W21, W23, 0x1
	0x03682D98 LDR W8, [X0 + 0xE0]
	0x03682D9C CBNZ W8, 0x3682DA8
	0x03682DA0 BL 0x1C16DFC
	0x03682DA4 LDR X0, [X22]
	0x03682DA8 LDR X8, [X0 + 0xB8]
	0x03682DAC MOV X0, X19
	0x03682DB0 MOV W1, W21
	0x03682DB4 MOV X2, X31
	0x03682DB8 LDR X24, [X8 + 0x8]
	0x03682DBC BL 0x3222A1C
	0x03682DC0 CBZ X24, 0x3682E44
	0x03682DC4 LDR W8, [X24 + 0x18]
	0x03682DC8 CMP W8, W0, UXTH
	0x03682DCC B.LS 0x3682E48
	0x03682DD0 LDR X8, [X22]
	0x03682DD4 ADD X9, X24, W0, UXTH
	0x03682DD8 LDRB W24, [X9 + 0x20]
	0x03682DDC MOV X0, X20
	0x03682DE0 LDR X8, [X8 + 0xB8]
	0x03682DE4 MOV W1, W21
	0x03682DE8 MOV X2, X31
	0x03682DEC LDR X25, [X8 + 0x8]
	0x03682DF0 BL 0x3222A1C
	0x03682DF4 CBZ X25, 0x3682E44
	0x03682DF8 LDR W8, [X25 + 0x18]
	0x03682DFC CMP W8, W0, UXTH
	0x03682E00 B.LS 0x3682E48
	0x03682E04 ADD X8, X25, W0, UXTH
	0x03682E08 LDRB W8, [X8 + 0x20]
	0x03682E0C CMP W24, W8
	0x03682E10 B.EQ 0x3682D84
	0x03682E14 CMP W23, 0x1
	0x03682E18 CSET W0, LT
	0x03682E1C B 0x3682E30
	0x03682E20 CMP X19, 0x0
	0x03682E24 CSET W0, EQ
	0x03682E28 B 0x3682E30
	0x03682E2C MOV W0, W31
	0x03682E30 LDP X20, X19, [X31 + 0x30]
	0x03682E34 LDP X22, X21, [X31 + 0x20]
	0x03682E38 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD5F000
	009 Move X21, 0xAA5000
	010 Move W8, [X22+2033]
	011 Move X21, [X21+1336]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xABC000
	019 Move X0, [X0+3784]
	020 Call 0x1C17CF4
	021 Move X0, 0xAA5000
	022 Move X0, [X0+1336]
	023 Call 0x1C17CF4
	024 Move X0, 0xABC000
	025 Move X0, [X0+3880]
	026 Call 0x1C17CF4
	027 Move X0, 0xA9C000
	028 Move X0, [X0+712]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2033], W8
	032 Move X0, [X21]
	033 Move [X31+8], W31
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X0, X20
	041 Move X2, X31
	042 Move X1, [X8]
	043 Call NameValueCollection..ctor, X0, X1
	044 Compare X19, 0
	045 JumpIfEqual {123}
	046 Move X8, 0xA9C000
	047 Move X8, [X8+712]
	048 Move X22, 0xABC000
	049 Move X23, 0xABC000
	050 Move X0, X19
	051 Move X1, [X8]
	052 Move X22, [X22+3784]
	053 Move X23, [X23+3880]
	054 Move X2, X31
	055 Call SerializationInfo.GetInt32, X0, X1
	056 Move X8, [X22]
	057 Move W21, W0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {64}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X8, [X22]
	064 Move X8, [X8+184]
	065 Move X0, [X23]
	066 Move X22, [X8]
	067 Call 0x1C17F10
	068 Add W1, W21, 2
	069 Move X2, X22
	070 Move X3, X31
	071 Move X23, X0
	072 Call NameValueCollection..ctor, X0, X1, X2
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X20+120], X23
	075 Move [X31+12], W31
	076 Move X0, X31
	077 Call NumberFormatInfo.get_InvariantInfo
	078 Move X1, X0
	079 Add X0, X31, 12
	080 Move X2, X31
	081 Call Int32.ToString, X0, X1
	082 Move X1, X0
	083 Move X0, X19
	084 Move X2, X31
	085 Call SerializationInfo.GetString, X0, X1
	086 Move W8, [X31+12]
	087 Move X22, X0
	088 Move X0, X31
	089 Add W8, W8, W21
	090 Move [X31+8], W8
	091 Call NumberFormatInfo.get_InvariantInfo
	092 Move X1, X0
	093 Add X0, X31, 8
	094 Move X2, X31
	095 Call Int32.ToString, X0, X1
	096 Move X1, X0
	097 Move X0, X19
	098 Move X2, X31
	099 Call SerializationInfo.GetString, X0, X1
	100 Move X23, X0
	101 Move X0, X20
	102 Call WebHeaderCollection.get_InnerCollection, X0
	103 Compare X0, 0
	104 JumpIfEqual {123}
	105 Move X8, [X0]
	106 Move X1, X22
	107 Move X2, X23
	108 Move X9, [X8+584]
	109 Move X3, [X8+592]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move W8, [X31+12]
	112 Add W8, W8, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X31+12], W8
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X30, [X31+16]
	120 Move X23, [X31+24]
	121 Add X31, X31, 64
	122 Return 
	123 Call 0x1C17F20

Method: System.Void OnDeserialization(System.Object sender)

Disassembly:
	0x03682E3C LDP X30, X25, [X31], #0x40

ISIL:
	001 Return 

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x03682E40 RET
	0x03682E44 BL 0x1C16F20
	0x03682E48 BL 0x1C16F28
	0x03682E4C MOV X1, X31
	0x03682E50 B 0x33BDD8C
	0x03682E54 STR X30, [X31 - 0x30]!
	0x03682E58 STP X22, X21, [X31 + 0x10]
	0x03682E5C STP X20, X19, [X31 + 0x20]
	0x03682E60 ADRP X19, 0xD5E000
	0x03682E64 ADRP X20, 0xABB000
	0x03682E68 ADRP X22, 0xA71000
	0x03682E6C ADRP X21, 0xABC000
	0x03682E70 LDRB W8, [X19 + 0x7FA]
	0x03682E74 LDR X20, [X20 + 0xEC8]
	0x03682E78 LDR X22, [X22 + 0x618]
	0x03682E7C LDR X21, [X21 + 0x20]
	0x03682E80 TBNZ X8, 0x0, 0x3682EB0
	0x03682E84 ADRP X0, 0xA71000
	0x03682E88 LDR X0, [X0 + 0x618]
	0x03682E8C BL 0x1C16CF4
	0x03682E90 ADRP X0, 0xABB000
	0x03682E94 LDR X0, [X0 + 0xEC8]
	0x03682E98 BL 0x1C16CF4
	0x03682E9C ADRP X0, 0xABC000
	0x03682EA0 LDR X0, [X0 + 0x20]
	0x03682EA4 BL 0x1C16CF4
	0x03682EA8 MOVZ W8, 0x1
	0x03682EAC STRB W8, [X19 + 0x7FA]
	0x03682EB0 LDR X0, [X20]
	0x03682EB4 BL 0x1C16F10
	0x03682EB8 MOV X1, X31
	0x03682EBC MOV X19, X0
	0x03682EC0 BL 0x33BDD8C
	0x03682EC4 LDR X8, [X20]
	0x03682EC8 MOVZ W1, 0x100
	0x03682ECC LDR X8, [X8 + 0xB8]
	0x03682ED0 STR X19, [X8]
	0x03682ED4 LDR X0, [X22]
	0x03682ED8 BL 0x1C16D6C
	0x03682EDC LDR X1, [X21]
	0x03682EE0 MOV X2, X31
	0x03682EE4 MOV X19, X0
	0x03682EE8 BL 0x32C5BD8
	0x03682EEC LDR X8, [X20]
	0x03682EF0 LDP X22, X21, [X31 + 0x10]
	0x03682EF4 LDR X8, [X8 + 0xB8]
	0x03682EF8 STR X19, [X8 + 0x8]
	0x03682EFC LDP X20, X19, [X31 + 0x20]
	0x03682F00 LDR X30, [X31], #0x30
	0x03682F04 RET
	0x03682F08 STR X30, [X31 - 0x20]!
	0x03682F0C STP X20, X19, [X31 + 0x10]
	0x03682F10 ADRP X19, 0xD5E000
	0x03682F14 ADRP X20, 0xAB8000
	0x03682F18 LDRB W8, [X19 + 0x7FB]
	0x03682F1C LDR X20, [X20 + 0xD0]
	0x03682F20 TBNZ X8, 0x0, 0x3682F44
	0x03682F24 ADRP X0, 0xA77000
	0x03682F28 LDR X0, [X0 + 0xCC0]
	0x03682F2C BL 0x1C16CF4
	0x03682F30 ADRP X0, 0xAB8000
	0x03682F34 LDR X0, [X0 + 0xD0]
	0x03682F38 BL 0x1C16CF4
	0x03682F3C MOVZ W8, 0x1
	0x03682F40 STRB W8, [X19 + 0x7FB]
	0x03682F44 LDR X0, [X20]
	0x03682F48 LDR W8, [X0 + 0xE0]
	0x03682F4C CBNZ W8, 0x3682F58
	0x03682F50 BL 0x1C16DFC
	0x03682F54 LDR X0, [X20]
	0x03682F58 LDR X8, [X0 + 0xB8]
	0x03682F5C LDR X8, [X8 + 0x8]
	0x03682F60 CBNZ X8, 0x3682FB0
	0x03682F64 ADRP X8, 0xA77000
	0x03682F68 LDR X8, [X8 + 0xCC0]
	0x03682F6C LDR X0, [X8]
	0x03682F70 BL 0x1C16F10
	0x03682F74 MOV X1, X31
	0x03682F78 MOV X19, X0
	0x03682F7C BL 0x33BDD8C
	0x03682F80 LDR X0, [X20]
	0x03682F84 LDR W8, [X0 + 0xE0]
	0x03682F88 CBNZ W8, 0x3682F94
	0x03682F8C BL 0x1C16DFC
	0x03682F90 LDR X0, [X20]
	0x03682F94 LDR X8, [X0 + 0xB8]
	0x03682F98 MOV X1, X19
	0x03682F9C MOV X2, X31
	0x03682FA0 MOV X3, X31
	0x03682FA4 ADD X0, X8, 0x8
	0x03682FA8 BL 0x33EB118
	0x03682FAC LDR X0, [X20]
	0x03682FB0 LDR W8, [X0 + 0xE0]
	0x03682FB4 CBNZ W8, 0x3682FC0
	0x03682FB8 BL 0x1C16DFC
	0x03682FBC LDR X0, [X20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD5F000
	007 Move W8, [X21+2034]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA9C000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2034], W8
	019 Move X0, X20
	020 Move [X31+8], W31
	021 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	022 Move X8, [X20]
	023 Move X0, X20
	024 Move X9, [X8+536]
	025 Move X1, [X8+544]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X19, 0
	028 JumpIfEqual {102}
	029 Move X8, 0xA9C000
	030 Move X8, [X8+712]
	031 Move W2, W0
	032 Move X0, X19
	033 Move X3, X31
	034 Move X1, [X8]
	035 Call SerializationInfo.AddValue, X0, X1, X2
	036 Move [X31+12], W31
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X9, [X8+536]
	040 Move X1, [X8+544]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X31
	044 Call NumberFormatInfo.get_InvariantInfo
	045 Move X1, X0
	046 Add X0, X31, 12
	047 Move X2, X31
	048 Call Int32.ToString, X0, X1
	049 Move X8, [X20]
	050 Move W1, [X31+12]
	051 Move X21, X0
	052 Move X0, X20
	053 Move X9, [X8+696]
	054 Move X2, [X8+704]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X2, X0
	057 Move X0, X19
	058 Move X1, X21
	059 Move X3, X31
	060 Call SerializationInfo.AddValue, X0, X1, X2
	061 Move X8, [X20]
	062 Move W21, [X31+12]
	063 Move X0, X20
	064 Move X9, [X8+536]
	065 Move X1, [X8+544]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Add W8, W0, W21
	068 Move X0, X31
	069 Move [X31+8], W8
	070 Call NumberFormatInfo.get_InvariantInfo
	071 Move X1, X0
	072 Add X0, X31, 8
	073 Move X2, X31
	074 Call Int32.ToString, X0, X1
	075 Move X8, [X20]
	076 Move W1, [X31+12]
	077 Move X21, X0
	078 Move X0, X20
	079 Move X9, [X8+664]
	080 Move X2, [X8+672]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X2, X0
	083 Move X0, X19
	084 Move X1, X21
	085 Move X3, X31
	086 Call SerializationInfo.AddValue, X0, X1, X2
	087 Move W8, [X31+12]
	088 Move X0, X20
	089 Add W21, W8, 1
	090 Move [X31+12], W21
	091 Move X8, [X20]
	092 Move X9, [X8+536]
	093 Move X1, [X8+544]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X30, [X31+16]
	099 Move X21, [X31+24]
	100 Add X31, X31, 48
	101 Return 
	102 Call 0x1C17F20

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x03682FC0 LDR X8, [X0 + 0xB8]
	0x03682FC4 LDP X20, X19, [X31 + 0x10]
	0x03682FC8 LDR X0, [X8 + 0x8]

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+488]
	003 Move X4, [X8+496]
	004 CallNoReturn X5

Method: System.String Get(System.String name)

Disassembly:
	0x03682FCC LDR X30, [X31], #0x20
	0x03682FD0 RET
	0x03682FD4 STR X30, [X31 - 0x50]!
	0x03682FD8 STP X26, X25, [X31 + 0x10]
	0x03682FDC STP X24, X23, [X31 + 0x20]
	0x03682FE0 STP X22, X21, [X31 + 0x30]
	0x03682FE4 STP X20, X19, [X31 + 0x40]
	0x03682FE8 ADRP X21, 0xD5E000
	0x03682FEC LDRB W8, [X21 + 0x7FC]
	0x03682FF0 MOV W20, W1
	0x03682FF4 MOV X19, X0
	0x03682FF8 TBNZ X8, 0x0, 0x3683034
	0x03682FFC ADRP X0, 0xABB000
	0x03683000 LDR X0, [X0 + 0xEC0]
	0x03683004 BL 0x1C16CF4
	0x03683008 ADRP X0, 0xABB000
	0x0368300C LDR X0, [X0 + 0x28]
	0x03683010 BL 0x1C16CF4
	0x03683014 ADRP X0, 0xAB7000
	0x03683018 LDR X0, [X0 + 0xD0]
	0x0368301C BL 0x1C16CF4
	0x03683020 ADRP X0, 0xA79000
	0x03683024 LDR X0, [X0 + 0x988]
	0x03683028 BL 0x1C16CF4
	0x0368302C MOVZ W8, 0x1
	0x03683030 STRB W8, [X21 + 0x7FC]
	0x03683034 MOV X0, X31
	0x03683038 BL 0x3692290
	0x0368303C CBZ X19, 0x3683250
	0x03683040 MOV X0, X19
	0x03683044 MOV X1, X31
	0x03683048 TBZ X20, 0x0, 0x3683068
	0x0368304C BL 0x361CEF0
	0x03683050 ADRP X8, 0xA79000
	0x03683054 LDR X8, [X8 + 0x988]
	0x03683058 MOV X2, X31
	0x0368305C LDR X1, [X8]
	0x03683060 BL 0x321B938
	0x03683064 B 0x368306C
	0x03683068 BL 0x361B5B0
	0x0368306C MOV X20, X0
	0x03683070 CBZ X0, 0x3683250
	0x03683074 ADRP X8, 0xAB7000
	0x03683078 LDR X8, [X8 + 0xD0]
	0x0368307C LDR W24, [X20 + 0x10]
	0x03683080 LDR X0, [X8]
	0x03683084 LDR W8, [X0 + 0xE0]
	0x03683088 CBNZ W8, 0x3683090
	0x0368308C BL 0x1C16DFC
	0x03683090 BL 0x368325C
	0x03683094 CBZ X0, 0x3683250
	0x03683098 LDR X8, [X0]
	0x0368309C MOV X21, X0
	0x036830A0 LDR X9, [X8 + 0x298]
	0x036830A4 LDR X1, [X8 + 0x2A0]
	0x036830A8 BLR X9
	0x036830AC CMP W0, 0x1
	0x036830B0 B.LT 0x3683164
	0x036830B4 ADRP X26, 0xABB000
	0x036830B8 ADRP X25, 0xABA000
	0x036830BC LDR X26, [X26 + 0x28]
	0x036830C0 LDR X25, [X25 + 0xEC0]
	0x036830C4 MOV W22, W31
	0x036830C8 LDR X8, [X21]
	0x036830CC MOV X0, X21
	0x036830D0 MOV W1, W22
	0x036830D4 LDR X9, [X8 + 0x2E8]
	0x036830D8 LDR X2, [X8 + 0x2F0]
	0x036830DC BLR X9
	0x036830E0 CBZ X0, 0x3683250
	0x036830E4 LDR X8, [X0]
	0x036830E8 LDR X1, [X26]
	0x036830EC MOV X23, X0
	0x036830F0 LDRB W10, [X8 + 0x130]
	0x036830F4 LDRB W9, [X1 + 0x130]
	0x036830F8 CMP W10, W9
	0x036830FC B.CC 0x3683254
	0x03683100 LDR X8, [X8 + 0xC8]
	0x03683104 ADD X8, X8, X9, 0x3, LSL
	0x03683108 LDUR X8, [X8 - 0x8]
	0x0368310C CMP X8, X1
	0x03683110 B.NE 0x3683254
	0x03683114 LDR X0, [X23 + 0x10]
	0x03683118 CBZ X0, 0x3683250
	0x0368311C LDR W4, [X0 + 0x10]
	0x03683120 CMP W24, W4
	0x03683124 B.LT 0x3683144
	0x03683128 MOVZ W5, 0x5
	0x0368312C MOV W1, W31
	0x03683130 MOV X2, X20
	0x03683134 MOV W3, W31
	0x03683138 MOV X6, X31
	0x0368313C BL 0x3225DC8
	0x03683140 CBZ W0, 0x36831BC
	0x03683144 LDR X8, [X21]
	0x03683148 MOV X0, X21
	0x0368314C ADD W22, W22, 0x1
	0x03683150 LDR X9, [X8 + 0x298]
	0x03683154 LDR X1, [X8 + 0x2A0]
	0x03683158 BLR X9
	0x0368315C CMP W22, W0
	0x03683160 B.LT 0x36830C8
	0x03683164 MOV X0, X31
	0x03683168 BL 0x3692290
	0x0368316C ADRP X0, 0xABB000
	0x03683170 LDR X0, [X0 + 0x30]
	0x03683174 BL 0x1C16D08
	0x03683178 MOV X1, X31
	0x0368317C BL 0x320A1E4
	0x03683180 MOV X19, X0
	0x03683184 ADRP X0, 0xA70000
	0x03683188 LDR X0, [X0 + 0xB40]
	0x0368318C BL 0x1C16D08
	0x03683190 BL 0x1C16F10
	0x03683194 MOV X1, X19
	0x03683198 MOV X2, X31
	0x0368319C MOV X20, X0
	0x036831A0 BL 0x3379A44
	0x036831A4 ADRP X0, 0xABB000
	0x036831A8 LDR X0, [X0 + 0x38]
	0x036831AC BL 0x1C16D08
	0x036831B0 MOV X1, X0
	0x036831B4 MOV X0, X20
	0x036831B8 BL 0x1C16DEC
	0x036831BC MOV X0, X23
	0x036831C0 BL 0x367E9E0
	0x036831C4 CBZ X0, 0x3683250
	0x036831C8 LDR X8, [X0]
	0x036831CC LDR X1, [X25]
	0x036831D0 MOV X20, X0
	0x036831D4 LDRH W9, [X8 + 0x12E]
	0x036831D8 CBZ X9, 0x36831FC
	0x036831DC LDR X10, [X8 + 0xB0]
	0x036831E0 ADD X10, X10, 0x8
	0x036831E4 LDUR X11, [X10 - 0x8]
	0x036831E8 CMP X11, X1
	0x036831EC B.EQ 0x368320C
	0x036831F0 SUBS X9, X9, 0x1
	0x036831F4 ADD X10, X10, 0x10
	0x036831F8 B.NE 0x36831E4
	0x036831FC MOV X0, X20
	0x03683200 MOV W2, W31
	0x03683204 BL 0x1C5C788
	0x03683208 B 0x3683218
	0x0368320C LDRSW X9, [X10]
	0x03683210 ADD X8, X8, X9, 0x4, LSL
	0x03683214 ADD X0, X8, 0x138
	0x03683218 LDP X8, X2, [X0]
	0x0368321C MOV X0, X20
	0x03683220 MOV X1, X19
	0x03683224 BLR X8
	0x03683228 MOV X19, X0
	0x0368322C MOV X0, X31
	0x03683230 BL 0x3692290
	0x03683234 MOV X0, X19
	0x03683238 LDP X20, X19, [X31 + 0x40]
	0x0368323C LDP X22, X21, [X31 + 0x30]
	0x03683240 LDP X24, X23, [X31 + 0x20]
	0x03683244 LDP X26, X25, [X31 + 0x10]
	0x03683248 LDR X30, [X31], #0x50
	0x0368324C RET
	0x03683250 BL 0x1C16F20
	0x03683254 MOV X0, X23
	0x03683258 BL 0x1C171E0
	0x0368325C STR X30, [X31 - 0x30]!
	0x03683260 STP X22, X21, [X31 + 0x10]
	0x03683264 STP X20, X19, [X31 + 0x20]
	0x03683268 ADRP X19, 0xD5D000
	0x0368326C ADRP X22, 0xAB7000
	0x03683270 LDRB W8, [X19 + 0x7FF]
	0x03683274 LDR X22, [X22 + 0xD0]
	0x03683278 TBNZ X8, 0x0, 0x3683290
	0x0368327C ADRP X0, 0xAB7000
	0x03683280 LDR X0, [X0 + 0xD0]
	0x03683284 BL 0x1C16CF4
	0x03683288 MOVZ W8, 0x1
	0x0368328C STRB W8, [X19 + 0x7FF]
	0x03683290 LDR X0, [X22]
	0x03683294 STRB W31, [X31 + 0xC]
	0x03683298 LDR W8, [X0 + 0xE0]
	0x0368329C CBNZ W8, 0x36832A8
	0x036832A0 BL 0x1C16DFC
	0x036832A4 LDR X0, [X22]
	0x036832A8 LDR X8, [X0 + 0xB8]
	0x036832AC LDR X19, [X8]
	0x036832B0 BL 0x1C16D44
	0x036832B4 CBNZ X19, 0x3683350
	0x036832B8 LDR X0, [X22]
	0x036832BC LDR W8, [X0 + 0xE0]
	0x036832C0 CBNZ W8, 0x36832C8
	0x036832C4 BL 0x1C16DFC
	0x036832C8 BL 0x3682F08
	0x036832CC MOV X19, X0
	0x036832D0 STRB W31, [X31 + 0xC]
	0x036832D4 ADD X1, X31, 0xC
	0x036832D8 MOV X2, X31
	0x036832DC BL 0x33DE64C
	0x036832E0 LDR X0, [X22]
	0x036832E4 LDR W8, [X0 + 0xE0]
	0x036832E8 CBNZ W8, 0x36832F4
	0x036832EC BL 0x1C16DFC
	0x036832F0 LDR X0, [X22]
	0x036832F4 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xD5F000
	014 Move W8, [X21+2035]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xABC000
	022 Move X0, [X0+3784]
	023 Call 0x1C17CF4
	024 Move X0, 0xABB000
	025 Move X0, [X0+3576]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2035], W8
	029 Compare X19, 0
	030 JumpIfEqual {189}
	031 Move X8, [X20+104]
	032 Compare X8, 0
	033 JumpIfEqual {189}
	034 Move W8, [X19+16]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X19
	037 Move W1, W31
	038 Move X2, X31
	039 Call String.get_Chars, X0, X1
	040 And W8, W0, 0xFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X23, 0xABB000
	043 Move X23, [X23+3576]
	044 Move X0, [X23]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X23]
	050 Move X8, [X0+184]
	051 Move X0, X19
	052 Move W1, W31
	053 Move X2, X31
	054 Move X21, [X8+16]
	055 Call String.get_Chars, X0, X1
	056 Compare X21, 0
	057 JumpIfEqual {222}
	058 Move W9, [X21+24]
	059 And W8, W0, 31
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X21, W8
	062 NotImplemented "Instruction INVALID not yet implemented."
	063 Move TEMP, X8
	064 And TEMP, TEMP, -2147483648
	065 Compare TEMP, -2147483648
	066 JumpIfEqual {189}
	067 Move X25, 0xABB000
	068 Move X25, [X25+3784]
	069 And W27, W8, 255
	070 Move X0, [X23]
	071 Move W24, W27
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X23]
	077 Move X8, [X0+184]
	078 Move X8, [X8+8]
	079 Compare X8, 0
	080 JumpIfEqual {222}
	081 Move W9, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X26, W24
	084 Add X8, X8, X26
	085 Move X21, [X8+32]
	086 Compare X21, 0
	087 JumpIfEqual {222}
	088 Move W8, [X21+16]
	089 Move W9, [X19+16]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, [X25]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X25]
	097 Move X8, [X0+184]
	098 Move X0, X19
	099 Move W1, W31
	100 Move X2, X31
	101 Move X22, [X8+8]
	102 Call String.get_Chars, X0, X1
	103 Compare X22, 0
	104 JumpIfEqual {222}
	105 Move W8, [X22+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X25]
	108 Add X9, X22, W0
	109 Move W22, [X9+32]
	110 Move X0, X21
	111 Move X8, [X8+184]
	112 Move W1, W31
	113 Move X2, X31
	114 Move X27, [X8+8]
	115 Call String.get_Chars, X0, X1
	116 Compare X27, 0
	117 JumpIfEqual {222}
	118 Move W8, [X27+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add X8, X27, W0
	121 Move W8, [X8+32]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W8, [X21+16]
	124 Move W9, [X19+16]
	125 Add W27, W24, 1
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W22, 1
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X19
	130 Move W1, W22
	131 Move X2, X31
	132 Call String.get_Chars, X0, X1
	133 And W28, W0, 0xFFFF
	134 Move X0, X21
	135 Move W1, W22
	136 Move X2, X31
	137 Call String.get_Chars, X0, X1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X19
	140 Move W1, W22
	141 Move X2, X31
	142 Call String.get_Chars, X0, X1
	143 And W8, W0, 0xFFFF
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, [X25]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {151}
	149 Call 0x1C17DFC
	150 Move X0, [X25]
	151 Move X8, [X0+184]
	152 Move X0, X19
	153 Move W1, W22
	154 Move X2, X31
	155 Move X28, [X8+8]
	156 Call String.get_Chars, X0, X1
	157 Compare X28, 0
	158 JumpIfEqual {222}
	159 Move W8, [X28+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X8, [X25]
	162 Add X9, X28, W0
	163 Move W28, [X9+32]
	164 Move X0, X21
	165 Move X8, [X8+184]
	166 Move W1, W22
	167 Move X2, X31
	168 Move X29, [X8+8]
	169 Call String.get_Chars, X0, X1
	170 Compare X29, 0
	171 JumpIfEqual {222}
	172 Move W8, [X29+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X8, X29, W0
	175 Move W8, [X8+32]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move W8, [X21+16]
	178 Add W22, W22, 1
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W8, [X21+16]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, [X20+104]
	183 Compare X8, 0
	184 JumpIfEqual {222}
	185 Move W9, [X8+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Add X8, X8, X26
	188 Move X0, [X8+32]
	189 Move X0, [X20+120]
	190 Compare X0, 0
	191 JumpIfEqual {209}
	192 Move X8, [X0]
	193 Move X1, X19
	194 Move X20, [X31+80]
	195 Move X19, [X31+88]
	196 Move X22, [X31+64]
	197 Move X21, [X31+72]
	198 Move X3, [X8+600]
	199 Move X2, [X8+608]
	200 Move X24, [X31+48]
	201 Move X23, [X31+56]
	202 Move X26, [X31+32]
	203 Move X25, [X31+40]
	204 Move X28, [X31+16]
	205 Move X27, [X31+24]
	206 Move X29, [X31+96]
	207 Move X30, [X31+104]
	208 CallNoReturn X3
	209 Move X20, [X31+80]
	210 Move X19, [X31+88]
	211 Move X22, [X31+64]
	212 Move X21, [X31+72]
	213 Move X24, [X31+48]
	214 Move X23, [X31+56]
	215 Move X26, [X31+32]
	216 Move X25, [X31+40]
	217 Move X28, [X31+16]
	218 Move X27, [X31+24]
	219 Move X29, [X31+96]
	220 Move X30, [X31+104]
	221 Return X0
	222 Call 0x1C17F20
	223 Call 0x1C17F28

Method: System.Collections.IEnumerator GetEnumerator()

Disassembly:
	0x036832F8 LDR X20, [X8]
	0x036832FC BL 0x1C16D44
	0x03683300 CBZ X20, 0x368330C
	0x03683304 MOV X20, X31
	0x03683308 B 0x3683338
	0x0368330C LDR X0, [X22]
	0x03683310 LDR W8, [X0 + 0xE0]
	0x03683314 CBNZ W8, 0x368331C
	0x03683318 BL 0x1C16DFC
	0x0368331C BL 0x3683598
	0x03683320 MOV X21, X0
	0x03683324 BL 0x1C16D44
	0x03683328 LDR X8, [X22]
	0x0368332C MOV X20, X31
	0x03683330 LDR X8, [X8 + 0xB8]
	0x03683334 STR X21, [X8]
	0x03683338 LDRB W8, [X31 + 0xC]
	0x0368333C CBZ W8, 0x368334C
	0x03683340 MOV X0, X19
	0x03683344 MOV X1, X31
	0x03683348 BL 0x33E14E4
	0x0368334C CBNZ X20, 0x3683384
	0x03683350 LDR X0, [X22]
	0x03683354 LDR W8, [X0 + 0xE0]
	0x03683358 CBNZ W8, 0x3683364
	0x0368335C BL 0x1C16DFC
	0x03683360 LDR X0, [X22]
	0x03683364 LDR X8, [X0 + 0xB8]
	0x03683368 LDR X19, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD5E000
	006 Move X20, 0xABB000
	007 Move W8, [X21+2036]
	008 Move X20, [X20+648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xABB000
	015 Move X0, [X0+648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2036], W8
	019 Move X0, X19
	020 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	021 Move X0, X19
	022 Call WebHeaderCollection.get_InnerCollection, X0
	023 Move X8, [X20]
	024 Move X19, X0
	025 Move X0, X8
	026 Call 0x1C17F10
	027 Move X1, X19
	028 Move X2, X31
	029 Move X20, X0
	030 Call NameObjectKeysEnumerator..ctor, X0, X1
	031 Move X0, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x0368336C BL 0x1C16D44
	0x03683370 MOV X0, X19
	0x03683374 LDP X20, X19, [X31 + 0x20]
	0x03683378 LDP X22, X21, [X31 + 0x10]
	0x0368337C LDR X30, [X31], #0x30
	0x03683380 RET
	0x03683384 MOV X0, X20
	0x03683388 BL 0x1C16F18
	0x0368338C B 0x3683398
	0x03683390 B 0x3683398
	0x03683394 B 0x3683398
	0x03683398 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+120]
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X8, [X0]
	008 Move X9, [X8+536]
	009 Move X1, [X8+544]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W8, [X19+112]
	012 Add W0, W8, W0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Collections.Specialized.NameObjectCollectionBase/KeysCollection get_Keys()

Disassembly:
	0x0368339C CMP W1, 0x1
	0x036833A0 B.NE 0x36833B8
	0x036833A4 MOV X0, X21
	0x036833A8 BL 0x3EB1AD0
	0x036833AC LDR X20, [X0]
	0x036833B0 BL 0x3EB1AE0
	0x036833B4 B 0x3683338
	0x036833B8 MOV X20, X31
	0x036833BC B 0x36833C4
	0x036833C0 MOV X21, X0
	0x036833C4 LDRB W8, [X31 + 0xC]
	0x036833C8 CBZ W8, 0x36833D8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	005 Move X0, X19
	006 Call WebHeaderCollection.get_InnerCollection, X0
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X8, [X0]
	010 Move X2, [X8+552]
	011 Move X1, [X8+560]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.String Get(System.Int32 index)

Disassembly:
	0x036833CC MOV X0, X19
	0x036833D0 MOV X1, X31
	0x036833D4 BL 0x33E14E4
	0x036833D8 CBNZ X20, 0x36833E4
	0x036833DC MOV X0, X21
	0x036833E0 BL 0x1D2C690
	0x036833E4 MOV X0, X20
	0x036833E8 BL 0x1C16F18
	0x036833EC BL 0x1990590
	0x036833F0 STP X30, X21, [X31 - 0x20]!
	0x036833F4 STP X20, X19, [X31 + 0x10]
	0x036833F8 ADRP X20, 0xD5D000
	0x036833FC LDRB W8, [X20 + 0x7FD]
	0x03683400 MOV X19, X0
	0x03683404 TBNZ X8, 0x0, 0x3683428
	0x03683408 ADRP X0, 0xA72000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	007 Move X0, X20
	008 Call WebHeaderCollection.get_InnerCollection, X0
	009 Compare X0, 0
	010 JumpIfEqual {19}
	011 Move X8, [X0]
	012 Move W1, W19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X3, [X8+664]
	016 Move X2, [X8+672]
	017 Move X30, [X31+32]
	018 CallNoReturn X3
	019 Call 0x1C17F20

Method: System.String[] GetValues(System.Int32 index)

Disassembly:
	0x0368340C LDR X0, [X0 + 0xA28]
	0x03683410 BL 0x1C16CF4
	0x03683414 ADRP X0, 0xAB7000
	0x03683418 LDR X0, [X0 + 0xD0]
	0x0368341C BL 0x1C16CF4
	0x03683420 MOVZ W8, 0x1
	0x03683424 STRB W8, [X20 + 0x7FD]
	0x03683428 CBZ X19, 0x3683478
	0x0368342C ADRP X8, 0xA72000
	0x03683430 LDR X8, [X8 + 0xA28]
	0x03683434 ADRP X21, 0xAB7000
	0x03683438 LDR X0, [X8]
	0x0368343C LDR X21, [X21 + 0xD0]
	0x03683440 BL 0x1C16F10
	0x03683444 MOV X1, X19
	0x03683448 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	007 Move X0, X20
	008 Call WebHeaderCollection.get_InnerCollection, X0
	009 Compare X0, 0
	010 JumpIfEqual {19}
	011 Move X8, [X0]
	012 Move W1, W19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X3, [X8+680]
	016 Move X2, [X8+688]
	017 Move X30, [X31+32]
	018 CallNoReturn X3
	019 Call 0x1C17F20

Method: System.String GetKey(System.Int32 index)

Disassembly:
	0x0368344C MOV X20, X0
	0x03683450 BL 0x36196A8
	0x03683454 LDR X0, [X21]
	0x03683458 LDR W8, [X0 + 0xE0]
	0x0368345C CBNZ W8, 0x3683464
	0x03683460 BL 0x1C16DFC
	0x03683464 MOV X0, X20
	0x03683468 LDP X20, X19, [X31 + 0x10]
	0x0368346C MOV W1, W31
	0x03683470 LDP X30, X21, [X31], #0x20
	0x03683474 B 0x3682FD4
	0x03683478 ADRP X0, 0xA75000
	0x0368347C LDR X0, [X0 + 0x528]
	0x03683480 BL 0x1C16D08
	0x03683484 BL 0x1C16F10
	0x03683488 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	007 Move X0, X20
	008 Call WebHeaderCollection.get_InnerCollection, X0
	009 Compare X0, 0
	010 JumpIfEqual {19}
	011 Move X8, [X0]
	012 Move W1, W19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X3, [X8+696]
	016 Move X2, [X8+704]
	017 Move X30, [X31+32]
	018 CallNoReturn X3
	019 Call 0x1C17F20

Method: System.String[] get_AllKeys()

Disassembly:
	0x0368348C ADRP X0, 0xABB000
	0x03683490 LDR X0, [X0 + 0x40]
	0x03683494 BL 0x1C16D08
	0x03683498 MOV X1, X0
	0x0368349C MOV X0, X19
	0x036834A0 MOV X2, X31
	0x036834A4 BL 0x330E100
	0x036834A8 ADRP X0, 0xABB000
	0x036834AC LDR X0, [X0 + 0x48]
	0x036834B0 BL 0x1C16D08
	0x036834B4 MOV X1, X0
	0x036834B8 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call WebHeaderCollection.NormalizeCommonHeaders, X0
	005 Move X0, X19
	006 Call WebHeaderCollection.get_InnerCollection, X0
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X8, [X0]
	010 Move X2, [X8+712]
	011 Move X1, [X8+720]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x036834BC BL 0x1C16DEC
	0x036834C0 STP X30, X21, [X31 - 0x20]!
	0x036834C4 STP X20, X19, [X31 + 0x10]
	0x036834C8 ADRP X20, 0xD5D000
	0x036834CC ADRP X21, 0xA72000
	0x036834D0 LDRB W8, [X20 + 0x7FE]
	0x036834D4 LDR X21, [X21 + 0xA28]
	0x036834D8 MOV X19, X0
	0x036834DC TBNZ X8, 0x0, 0x3683500
	0x036834E0 ADRP X0, 0xA72000
	0x036834E4 LDR X0, [X0 + 0xA28]
	0x036834E8 BL 0x1C16CF4
	0x036834EC ADRP X0, 0xAB7000
	0x036834F0 LDR X0, [X0 + 0xD0]
	0x036834F4 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Move [X0+104], X31
	006 Move [X0+112], W31
	007 Call NameValueCollection.InvalidateCachedArrays, X0
	008 Move X0, [X19+120]
	009 Compare X0, 0
	010 JumpIfEqual {17}
	011 Move X8, [X0]
	012 Move X2, [X8+568]
	013 Move X1, [X8+576]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X2
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Void .cctor()

Disassembly:
	0x036834F8 MOVZ W8, 0x1
	0x036834FC STRB W8, [X20 + 0x7FE]
	0x03683500 LDR X0, [X21]
	0x03683504 LDR W8, [X0 + 0xE0]
	0x03683508 CBNZ W8, 0x3683510
	0x0368350C BL 0x1C16DFC
	0x03683510 MOV X0, X19
	0x03683514 MOV X1, X31
	0x03683518 MOV X2, X31
	0x0368351C BL 0x361DC84
	0x03683520 TBNZ X0, 0x0, 0x3683550
	0x03683524 ADRP X8, 0xAB7000
	0x03683528 LDR X8, [X8 + 0xD0]
	0x0368352C LDR X0, [X8]
	0x03683530 LDR W8, [X0 + 0xE0]
	0x03683534 CBNZ W8, 0x368353C
	0x03683538 BL 0x1C16DFC
	0x0368353C MOV X0, X19
	0x03683540 LDP X20, X19, [X31 + 0x10]
	0x03683544 MOV W1, W31
	0x03683548 LDP X30, X21, [X31], #0x20
	0x0368354C B 0x3682FD4
	0x03683550 ADRP X0, 0xA75000
	0x03683554 LDR X0, [X0 + 0x528]
	0x03683558 BL 0x1C16D08
	0x0368355C BL 0x1C16F10
	0x03683560 MOV X19, X0
	0x03683564 ADRP X0, 0xABB000
	0x03683568 LDR X0, [X0 + 0x50]
	0x0368356C BL 0x1C16D08
	0x03683570 MOV X1, X0
	0x03683574 MOV X0, X19
	0x03683578 MOV X2, X31
	0x0368357C BL 0x330E100
	0x03683580 ADRP X0, 0xABB000
	0x03683584 LDR X0, [X0 + 0x58]
	0x03683588 BL 0x1C16D08
	0x0368358C MOV X1, X0
	0x03683590 MOV X0, X19
	0x03683594 BL 0x1C16DEC
	0x03683598 STP X30, X27, [X31 - 0x50]!
	0x0368359C STP X26, X25, [X31 + 0x10]
	0x036835A0 STP X24, X23, [X31 + 0x20]
	0x036835A4 STP X22, X21, [X31 + 0x30]
	0x036835A8 STP X20, X19, [X31 + 0x40]
	0x036835AC ADRP X19, 0xD5D000
	0x036835B0 ADRP X23, 0xA9D000
	0x036835B4 ADRP X20, 0xABB000
	0x036835B8 ADRP X22, 0xABB000
	0x036835BC ADRP X21, 0xAAC000
	0x036835C0 LDRB W8, [X19 + 0x800]
	0x036835C4 LDR X23, [X23 + 0xBA0]
	0x036835C8 LDR X20, [X20 + 0x60]
	0x036835CC LDR X22, [X22 + 0x28]
	0x036835D0 LDR X21, [X21 + 0x5E8]
	0x036835D4 TBNZ X8, 0x0, 0x368364C
	0x036835D8 ADRP X0, 0xA9D000
	0x036835DC LDR X0, [X0 + 0xBA0]
	0x036835E0 BL 0x1C16CF4
	0x036835E4 ADRP X0, 0xABB000
	0x036835E8 LDR X0, [X0 + 0x68]
	0x036835EC BL 0x1C16CF4
	0x036835F0 ADRP X0, 0xABB000
	0x036835F4 LDR X0, [X0 + 0x70]
	0x036835F8 BL 0x1C16CF4
	0x036835FC ADRP X0, 0xABB000
	0x03683600 LDR X0, [X0 + 0x60]
	0x03683604 BL 0x1C16CF4
	0x03683608 ADRP X0, 0xABB000
	0x0368360C LDR X0, [X0 + 0x28]
	0x03683610 BL 0x1C16CF4
	0x03683614 ADRP X0, 0xAAC000
	0x03683618 LDR X0, [X0 + 0x5E8]
	0x0368361C BL 0x1C16CF4
	0x03683620 ADRP X0, 0xAB8000
	0x03683624 LDR X0, [X0 + 0x600]
	0x03683628 BL 0x1C16CF4
	0x0368362C ADRP X0, 0xAB8000
	0x03683630 LDR X0, [X0 + 0x620]
	0x03683634 BL 0x1C16CF4
	0x03683638 ADRP X0, 0xAAE000
	0x0368363C LDR X0, [X0 + 0x4C8]
	0x03683640 BL 0x1C16CF4
	0x03683644 MOVZ W8, 0x1
	0x03683648 STRB W8, [X19 + 0x800]
	0x0368364C LDR X0, [X23]
	0x03683650 BL 0x1C16F10
	0x03683654 MOV X1, X31
	0x03683658 MOV X19, X0
	0x0368365C BL 0x3351F5C
	0x03683660 LDR X0, [X20]
	0x03683664 BL 0x1C16F10
	0x03683668 MOV X1, X31
	0x0368366C MOV X20, X0
	0x03683670 BL 0x369BD88
	0x03683674 LDR X0, [X22]
	0x03683678 BL 0x1C16F10
	0x0368367C LDR X23, [X21]
	0x03683680 MOV X1, X31
	0x03683684 MOV X21, X0
	0x03683688 BL 0x33BDD8C
	0x0368368C STP X23, X20, [X21 + 0x10]
	0x03683690 CBZ X19, 0x36837B4
	0x03683694 LDR X8, [X19]
	0x03683698 ADRP X25, 0xAAE000
	0x0368369C ADRP X26, 0xABB000
	0x036836A0 LDR X25, [X25 + 0x4C8]
	0x036836A4 LDR X26, [X26 + 0x68]
	0x036836A8 LDR X9, [X8 + 0x308]
	0x036836AC LDR X2, [X8 + 0x310]
	0x036836B0 ADRP X27, 0xAB8000
	0x036836B4 ADRP X24, 0xABB000
	0x036836B8 ADRP X23, 0xAB8000
	0x036836BC LDR X27, [X27 + 0x620]
	0x036836C0 LDR X24, [X24 + 0x70]
	0x036836C4 LDR X23, [X23 + 0x600]
	0x036836C8 MOV X0, X19
	0x036836CC MOV X1, X21
	0x036836D0 BLR X9
	0x036836D4 LDR X0, [X22]
	0x036836D8 BL 0x1C16F10
	0x036836DC LDR X25, [X25]
	0x036836E0 MOV X1, X31
	0x036836E4 MOV X21, X0
	0x036836E8 BL 0x33BDD8C
	0x036836EC STP X25, X20, [X21 + 0x10]
	0x036836F0 LDR X8, [X19]
	0x036836F4 MOV X0, X19
	0x036836F8 MOV X1, X21
	0x036836FC LDR X9, [X8 + 0x308]
	0x03683700 LDR X2, [X8 + 0x310]
	0x03683704 BLR X9
	0x03683708 LDR X0, [X26]
	0x0368370C BL 0x1C16F10
	0x03683710 MOV X1, X31
	0x03683714 MOV X20, X0
	0x03683718 BL 0x36938FC
	0x0368371C LDR X0, [X22]
	0x03683720 BL 0x1C16F10
	0x03683724 LDR X25, [X27]
	0x03683728 MOV X1, X31
	0x0368372C MOV X21, X0
	0x03683730 BL 0x33BDD8C
	0x03683734 STP X25, X20, [X21 + 0x10]
	0x03683738 LDR X8, [X19]
	0x0368373C MOV X0, X19
	0x03683740 MOV X1, X21
	0x03683744 LDR X9, [X8 + 0x308]
	0x03683748 LDR X2, [X8 + 0x310]
	0x0368374C BLR X9
	0x03683750 LDR X0, [X24]
	0x03683754 BL 0x1C16F10
	0x03683758 MOV X1, X31
	0x0368375C MOV X20, X0
	0x03683760 BL 0x33BDD8C
	0x03683764 LDR X0, [X22]
	0x03683768 BL 0x1C16F10
	0x0368376C LDR X22, [X23]
	0x03683770 MOV X1, X31
	0x03683774 MOV X21, X0
	0x03683778 BL 0x33BDD8C
	0x0368377C STP X22, X20, [X21 + 0x10]
	0x03683780 LDR X8, [X19]
	0x03683784 MOV X0, X19
	0x03683788 MOV X1, X21
	0x0368378C LDR X9, [X8 + 0x308]
	0x03683790 LDR X2, [X8 + 0x310]
	0x03683794 BLR X9
	0x03683798 MOV X0, X19
	0x0368379C LDP X20, X19, [X31 + 0x40]
	0x036837A0 LDP X22, X21, [X31 + 0x30]
	0x036837A4 LDP X24, X23, [X31 + 0x20]
	0x036837A8 LDP X26, X25, [X31 + 0x10]
	0x036837AC LDP X30, X27, [X31], #0x50
	0x036837B0 RET
	0x036837B4 BL 0x1C16F20
	0x036837B8 MOV X1, X31
	0x036837BC B 0x33C011C
	0x036837C0 LDR X8, [X0]
	0x036837C4 LDP X5, X4, [X8 + 0x1A8]
	0x036837C8 BR X5
	0x036837CC RET
	0x036837D0 STP X30, X21, [X31 - 0x20]!
	0x036837D4 STP X20, X19, [X31 + 0x10]
	0x036837D8 ADRP X20, 0xD5D000
	0x036837DC ADRP X21, 0xA72000
	0x036837E0 ADRP X19, 0xABB000
	0x036837E4 LDRB W8, [X20 + 0x801]
	0x036837E8 LDR X21, [X21 + 0x278]
	0x036837EC LDR X19, [X19 + 0x78]
	0x036837F0 TBNZ X8, 0x0, 0x3683814
	0x036837F4 ADRP X0, 0xABB000
	0x036837F8 LDR X0, [X0 + 0x78]
	0x036837FC BL 0x1C16CF4
	0x03683800 ADRP X0, 0xA72000
	0x03683804 LDR X0, [X0 + 0x278]
	0x03683808 BL 0x1C16CF4
	0x0368380C MOVZ W8, 0x1
	0x03683810 STRB W8, [X20 + 0x801]
	0x03683814 LDR X8, [X21]
	0x03683818 LDR X0, [X19]
	0x0368381C LDR X8, [X8 + 0xB8]
	0x03683820 LDR W9, [X0 + 0xE0]
	0x03683824 LDR X19, [X8]
	0x03683828 CBNZ W9, 0x3683830
	0x0368382C BL 0x1C16DFC
	0x03683830 MOV X0, X19
	0x03683834 MOV X1, X31
	0x03683838 BL 0x36B9FCC
	0x0368383C CBZ X0, 0x3683850
	0x03683840 LDR X0, [X0 + 0x20]
	0x03683844 LDP X20, X19, [X31 + 0x10]
	0x03683848 LDP X30, X21, [X31], #0x20
	0x0368384C RET
	0x03683850 BL 0x1C16F20
	0x03683854 STP X30, X19, [X31 - 0x10]!
	0x03683858 BL 0x367DF94
	0x0368385C MOV X19, X0
	0x03683860 ADRP X0, 0xABB000
	0x03683864 LDR X0, [X0 + 0x80]
	0x03683868 BL 0x1C16D08
	0x0368386C MOV X1, X0
	0x03683870 MOV X0, X19
	0x03683874 BL 0x1C16DEC
	0x03683878 STP X30, X19, [X31 - 0x10]!
	0x0368387C BL 0x367DF94
	0x03683880 MOV X19, X0
	0x03683884 ADRP X0, 0xABB000
	0x03683888 LDR X0, [X0 + 0x88]
	0x0368388C BL 0x1C16D08
	0x03683890 MOV X1, X0
	0x03683894 MOV X0, X19
	0x03683898 BL 0x1C16DEC
	0x0368389C STP X30, X19, [X31 - 0x10]!
	0x036838A0 BL 0x367DF94
	0x036838A4 MOV X19, X0
	0x036838A8 ADRP X0, 0xABB000
	0x036838AC LDR X0, [X0 + 0x90]
	0x036838B0 BL 0x1C16D08
	0x036838B4 MOV X1, X0
	0x036838B8 MOV X0, X19
	0x036838BC BL 0x1C16DEC
	0x036838C0 STP X30, X19, [X31 - 0x10]!
	0x036838C4 BL 0x367DF94
	0x036838C8 MOV X19, X0
	0x036838CC ADRP X0, 0xABB000
	0x036838D0 LDR X0, [X0 + 0x98]
	0x036838D4 BL 0x1C16D08
	0x036838D8 MOV X1, X0
	0x036838DC MOV X0, X19
	0x036838E0 BL 0x1C16DEC
	0x036838E4 STP X30, X19, [X31 - 0x10]!
	0x036838E8 BL 0x367DF94
	0x036838EC MOV X19, X0
	0x036838F0 ADRP X0, 0xABB000
	0x036838F4 LDR X0, [X0 + 0xA0]
	0x036838F8 BL 0x1C16D08
	0x036838FC MOV X1, X0
	0x03683900 MOV X0, X19
	0x03683904 BL 0x1C16DEC
	0x03683908 STP X30, X19, [X31 - 0x10]!
	0x0368390C BL 0x367DF94
	0x03683910 MOV X19, X0
	0x03683914 ADRP X0, 0xABB000
	0x03683918 LDR X0, [X0 + 0xA8]
	0x0368391C BL 0x1C16D08
	0x03683920 MOV X1, X0
	0x03683924 MOV X0, X19
	0x03683928 BL 0x1C16DEC
	0x0368392C STP X30, X19, [X31 - 0x10]!
	0x03683930 BL 0x367DF94
	0x03683934 MOV X19, X0
	0x03683938 ADRP X0, 0xABB000
	0x0368393C LDR X0, [X0 + 0xB0]
	0x03683940 BL 0x1C16D08
	0x03683944 MOV X1, X0
	0x03683948 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xD5E000
	009 Move X22, 0xABB000
	010 Move X20, 0xABB000
	011 Move X21, 0xA71000
	012 Move W8, [X19+2037]
	013 Move X22, [X22+3888]
	014 Move X20, [X20+3576]
	015 Move X21, [X21+2760]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {106}
	020 Move X0, 0xA7A000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move X0, 0xABB000
	024 Move X0, [X0+3888]
	025 Call 0x1C17CF4
	026 Move X0, 0xABB000
	027 Move X0, [X0+4064]
	028 Call 0x1C17CF4
	029 Move X0, 0xAA0000
	030 Move X0, [X0+1800]
	031 Call 0x1C17CF4
	032 Move X0, 0xA71000
	033 Move X0, [X0+2760]
	034 Call 0x1C17CF4
	035 Move X0, 0xABB000
	036 Move X0, [X0+4072]
	037 Call 0x1C17CF4
	038 Move X0, 0xABB000
	039 Move X0, [X0+1760]
	040 Call 0x1C17CF4
	041 Move X0, 0xABB000
	042 Move X0, [X0+4080]
	043 Call 0x1C17CF4
	044 Move X0, 0xABB000
	045 Move X0, [X0+3576]
	046 Call 0x1C17CF4
	047 Move X0, 0xAB8000
	048 Move X0, [X0+2520]
	049 Call 0x1C17CF4
	050 Move X0, 0xAB8000
	051 Move X0, [X0+2528]
	052 Call 0x1C17CF4
	053 Move X0, 0xAB8000
	054 Move X0, [X0+2576]
	055 Call 0x1C17CF4
	056 Move X0, 0xAB8000
	057 Move X0, [X0+2584]
	058 Call 0x1C17CF4
	059 Move X0, 0xABB000
	060 Move X0, [X0+4088]
	061 Call 0x1C17CF4
	062 Move X0, 0xAAC000
	063 Move X0, [X0+2440]
	064 Call 0x1C17CF4
	065 Move X0, 0xABC000
	066 Move X0, [X0]
	067 Call 0x1C17CF4
	068 Move X0, 0xAB8000
	069 Move X0, [X0+2656]
	070 Call 0x1C17CF4
	071 Move X0, 0xABC000
	072 Move X0, [X0+8]
	073 Call 0x1C17CF4
	074 Move X0, 0xAB8000
	075 Move X0, [X0+2680]
	076 Call 0x1C17CF4
	077 Move X0, 0xAB8000
	078 Move X0, [X0+2688]
	079 Call 0x1C17CF4
	080 Move X0, 0xA99000
	081 Move X0, [X0+2856]
	082 Call 0x1C17CF4
	083 Move X0, 0xAB8000
	084 Move X0, [X0+2696]
	085 Call 0x1C17CF4
	086 Move X0, 0xAB8000
	087 Move X0, [X0+2712]
	088 Call 0x1C17CF4
	089 Move X0, 0xAB8000
	090 Move X0, [X0+2760]
	091 Call 0x1C17CF4
	092 Move X0, 0xA71000
	093 Move X0, [X0+3784]
	094 Call 0x1C17CF4
	095 Move X0, 0xABC000
	096 Move X0, [X0+16]
	097 Call 0x1C17CF4
	098 Move X0, 0xABC000
	099 Move X0, [X0+24]
	100 Call 0x1C17CF4
	101 Move X0, 0xAB8000
	102 Move X0, [X0+2800]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X19+2037], W8
	106 Move X0, [X22]
	107 Call 0x1C17F10
	108 Move X1, X31
	109 Move X19, X0
	110 Call Object..ctor, X0
	111 Move X8, [X20]
	112 Move W1, 19
	113 Move X8, [X8+184]
	114 Move [X8], X19
	115 Move X0, [X21]
	116 Call 0x1C17D6C
	117 Compare X0, 0
	118 JumpIfEqual {270}
	119 Move W8, [X0+24]
	120 Compare W8, 0
	121 JumpIfEqual {269}
	122 Move X9, 0xAB8000
	123 Move X9, [X9+2712]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X9, [X9]
	126 Move [X0+32], X9
	127 Move X9, 0xA99000
	128 Move X9, [X9+2856]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X9, [X9]
	131 Move [X0+40], X9
	132 Move X9, 0xAB8000
	133 Move X9, [X9+2656]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X9, [X9]
	136 Move [X0+48], X9
	137 Move X9, 0xAAC000
	138 Move X9, [X9+2440]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X9, [X9]
	141 Move [X0+56], X9
	142 Move X9, 0xAB8000
	143 Move X9, [X9+2584]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X9, [X9]
	146 Move [X0+64], X9
	147 Move X9, 0xAB8000
	148 Move X9, [X9+2680]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X9, [X9]
	151 Move [X0+72], X9
	152 Move X9, 0xAB8000
	153 Move X9, [X9+2576]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X9, [X9]
	156 Move [X0+80], X9
	157 Move X9, 0xAB8000
	158 Move X9, [X9+2696]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X9, [X9]
	161 Move [X0+88], X9
	162 Move X9, 0xAB8000
	163 Move X9, [X9+2528]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X9, [X9]
	166 Move [X0+96], X9
	167 Move X9, 0xAB8000
	168 Move X9, [X9+2760]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X9, [X9]
	171 Move [X0+104], X9
	172 Move X9, 0xABB000
	173 Move X9, [X9+4088]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X9, [X9]
	176 Move [X0+112], X9
	177 Move X9, 0xABC000
	178 Move X9, [X9+16]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X9, [X9]
	181 Move [X0+120], X9
	182 Move X9, 0xABC000
	183 Move X9, [X9]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X9, [X9]
	186 Move [X0+128], X9
	187 Move X9, 0xAB8000
	188 Move X9, [X9+2520]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X9, [X9]
	191 Move [X0+136], X9
	192 Move X9, 0xAB8000
	193 Move X9, [X9+2800]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X9, [X9]
	196 Move [X0+144], X9
	197 Move X9, 0xAB8000
	198 Move X9, [X9+2688]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X9, [X9]
	201 Move [X0+152], X9
	202 Move X9, 0xABC000
	203 Move X9, [X9+8]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X9, [X9]
	206 Move [X0+160], X9
	207 Move X9, 0xABC000
	208 Move X9, [X9+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X9, [X9]
	211 Move [X0+168], X9
	212 Move X8, 0xA71000
	213 Move X8, [X8+3784]
	214 Move X9, 0xAA0000
	215 Move X19, 0xABB000
	216 Move X21, 0xA7A000
	217 Move X8, [X8]
	218 Move X22, 0xABB000
	219 Move X23, 0xABB000
	220 Move X24, 0xABB000
	221 Move [X0+176], X8
	222 Move X8, [X20]
	223 Move W1, 32
	224 Move X8, [X8+184]
	225 Move X9, [X9+1800]
	226 Move X19, [X19+4072]
	227 Move X21, [X21+2264]
	228 Move [X8+8], X0
	229 Move X0, [X9]
	230 Move X22, [X22+1760]
	231 Move X23, [X23+4064]
	232 Move X24, [X24+4080]
	233 Call 0x1C17D6C
	234 Move X1, [X19]
	235 Move X2, X31
	236 Move X19, X0
	237 Call RuntimeHelpers.InitializeArray, X0, X1
	238 Move X8, [X20]
	239 Move W1, 6
	240 Move X8, [X8+184]
	241 Move [X8+16], X19
	242 Move X0, [X21]
	243 Call 0x1C17D6C
	244 Move X1, [X22]
	245 Move X2, X31
	246 Move X19, X0
	247 Call RuntimeHelpers.InitializeArray, X0, X1
	248 Move X8, [X20]
	249 Move W1, 128
	250 Move X8, [X8+184]
	251 Move [X8+24], X19
	252 Move X0, [X23]
	253 Call 0x1C17D6C
	254 Move X1, [X24]
	255 Move X2, X31
	256 Move X19, X0
	257 Call RuntimeHelpers.InitializeArray, X0, X1
	258 Move X8, [X20]
	259 Move X22, [X31+32]
	260 Move X21, [X31+40]
	261 Move X24, [X31+16]
	262 Move X23, [X31+24]
	263 Move X8, [X8+184]
	264 Move [X8+32], X19
	265 Move X20, [X31+48]
	266 Move X19, [X31+56]
	267 Move X30, [X31+64]
	268 Return 
	269 Call 0x1C17F28
	270 Call 0x1C17F20

