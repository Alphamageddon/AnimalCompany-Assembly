Type: System.Net.WebCompletionSource`1/<WaitForCompletion>d__15

Method: System.Void MoveNext()

Disassembly:
	0x0297CA94 LDR X1, [X8 + 0x58]
	0x0297CA98 B 0x2BC434C
	0x0297CA9C RET
	0x0297CAA0 SUB X31, X31, 0x70
	0x0297CAA4 STP X30, X19, [X31 + 0x60]
	0x0297CAA8 ADD X8, X31, 0x58
	0x0297CAAC ADD X9, X31, 0x50
	0x0297CAB0 STP X1, X0, [X31 + 0x50]
	0x0297CAB4 STP X8, X9, [X31 + 0x40]
	0x0297CAB8 LDR W8, [X0 + 0x10]
	0x0297CABC CMP W8, 0x1
	0x0297CAC0 B.EQ 0x297CB1C
	0x0297CAC4 CBNZ W8, 0x297CBC8
	0x0297CAC8 LDR X8, [X0 + 0x28]
	0x0297CACC MOVN W9, 0x0
	0x0297CAD0 STR W9, [X0 + 0x10]
	0x0297CAD4 CBZ X8, 0x297CB94
	0x0297CAD8 LDR X0, [X8 + 0x40]
	0x0297CADC CBZ X0, 0x297CB98
	0x0297CAE0 LDR X8, [X1 + 0x20]
	0x0297CAE4 LDR X8, [X8 + 0xC0]
	0x0297CAE8 LDR X1, [X8 + 0x20]
	0x0297CAEC ADD X8, X31, 0x8
	0x0297CAF0 BL 0x301CB58
	0x0297CAF4 LDUR V0, [X31 + 0x8]
	0x0297CAF8 LDR X8, [X31 + 0x18]
	0x0297CAFC LDP X1, X0, [X31 + 0x50]
	0x0297CB00 MOVN W9, 0x2
	0x0297CB04 STR V0, [X31 + 0x2]
	0x0297CB08 STR X8, [X31 + 0x30]
	0x0297CB0C STR X8, [X0 + 0x40]
	0x0297CB10 STR V0, [X0 + 0x3]
	0x0297CB14 STR W9, [X0 + 0x10]
	0x0297CB18 B 0x297CB24
	0x0297CB1C MOVN W8, 0x2
	0x0297CB20 STR W8, [X0 + 0x10]
	0x0297CB24 LDR X8, [X1 + 0x20]
	0x0297CB28 ADD X0, X0, 0x30
	0x0297CB2C LDR X8, [X8 + 0xC0]
	0x0297CB30 LDR X1, [X8 + 0x48]
	0x0297CB34 BL 0x2BC4350
	0x0297CB38 LDR X8, [X31 + 0x58]
	0x0297CB3C TBZ X0, 0x0, 0x297CB54
	0x0297CB40 LDR X9, [X8 + 0x40]
	0x0297CB44 MOVZ W0, 0x1
	0x0297CB48 STR W0, [X8 + 0x10]
	0x0297CB4C STR X9, [X8 + 0x18]
	0x0297CB50 B 0x297CBCC
	0x0297CB54 LDR X9, [X31 + 0x50]
	0x0297CB58 MOVN W10, 0x0
	0x0297CB5C ADD X0, X8, 0x30
	0x0297CB60 LDR X9, [X9 + 0x20]
	0x0297CB64 LDR X9, [X9 + 0xC0]
	0x0297CB68 LDR X9, [X9 + 0x8]
	0x0297CB6C STR W10, [X8 + 0x10]
	0x0297CB70 LDR X9, [X9 + 0x20]
	0x0297CB74 LDR X9, [X9 + 0xC0]
	0x0297CB78 LDR X1, [X9 + 0x58]
	0x0297CB7C BL 0x2BC434C
	0x0297CB80 LDR X8, [X31 + 0x58]
	0x0297CB84 MOV W0, W31
	0x0297CB88 STP X31, X31, [X8 + 0x30]
	0x0297CB8C STR X31, [X8 + 0x40]
	0x0297CB90 B 0x297CBCC
	0x0297CB94 BL 0x1C16F20
	0x0297CB98 BL 0x1C16F20
	0x0297CB9C B 0x297CBAC
	0x0297CBA0 B 0x297CBAC
	0x0297CBA4 B 0x297CBAC
	0x0297CBA8 B 0x297CBAC
	0x0297CBAC CMP W1, 0x1
	0x0297CBB0 B.NE 0x297CBF0
	0x0297CBB4 BL 0x3EB1AD0
	0x0297CBB8 LDR X19, [X0]
	0x0297CBBC STR X19, [X31 + 0x38]
	0x0297CBC0 BL 0x3EB1AE0
	0x0297CBC4 CBNZ X19, 0x297CBD8
	0x0297CBC8 MOV W0, W31
	0x0297CBCC LDP X30, X19, [X31 + 0x60]
	0x0297CBD0 ADD X31, X31, 0x70
	0x0297CBD4 RET
	0x0297CBD8 ADD X8, X31, 0x38
	0x0297CBDC ADD X0, X8, 0x8
	0x0297CBE0 BL 0x19CF87C
	0x0297CBE4 MOV X0, X19
	0x0297CBE8 BL 0x1C16F18
	0x0297CBEC CBNZ X19, 0x297CBF4
	0x0297CBF0 BL 0x1D2C690
	0x0297CBF4 LDP X8, X0, [X31 + 0x50]
	0x0297CBF8 LDR X8, [X8 + 0x20]
	0x0297CBFC LDR X8, [X8 + 0xC0]
	0x0297CC00 LDR X1, [X8 + 0x50]
	0x0297CC04 BL 0x297CA60
	0x0297CC08 MOV X0, X19
	0x0297CC0C BL 0x1C16F18
	0x0297CC10 BL 0x1990590
	0x0297CC14 MOVN W8, 0x0
	0x0297CC18 STR W8, [X0 + 0x10]
	0x0297CC1C LDR X8, [X1 + 0x20]
	0x0297CC20 ADD X0, X0, 0x30
	0x0297CC24 LDR X8, [X8 + 0xC0]
	0x0297CC28 LDR X1, [X8 + 0x58]
	0x0297CC2C B 0x2BC434C
	0x0297CC30 LDR X0, [X0 + 0x18]
	0x0297CC34 RET
	0x0297CC38 STR X30, [X31 - 0x20]!
	0x0297CC3C STP X20, X19, [X31 + 0x10]
	0x0297CC40 ADRP X0, 0x1777000
	0x0297CC44 LDR X0, [X0 + 0xB40]
	0x0297CC48 MOV X19, X1
	0x0297CC4C BL 0x1C16D08
	0x0297CC50 BL 0x1C16F10
	0x0297CC54 MOV X1, X31
	0x0297CC58 MOV X20, X0
	0x0297CC5C BL 0x3380310
	0x0297CC60 MOV X0, X20
	0x0297CC64 MOV X1, X19
	0x0297CC68 BL 0x1C16DEC
	0x0297CC6C LDR X0, [X0 + 0x18]
	0x0297CC70 RET
	0x0297CC74 STP X30, X21, [X31 - 0x20]!
	0x0297CC78 STP X20, X19, [X31 + 0x10]
	0x0297CC7C LDR W8, [X0 + 0x10]
	0x0297CC80 MOV X19, X0
	0x0297CC84 MOV X20, X1
	0x0297CC88 ADDS W31, W8, 0x2
	0x0297CC8C B.NE 0x297CCAC
	0x0297CC90 LDR W21, [X19 + 0x20]
	0x0297CC94 MOV X0, X31
	0x0297CC98 BL 0x33C151C
	0x0297CC9C CMP W21, W0
	0x0297CCA0 B.NE 0x297CCAC
	0x0297CCA4 STR W31, [X19 + 0x10]
	0x0297CCA8 B 0x297CCF0
	0x0297CCAC LDR X8, [X20 + 0x20]
	0x0297CCB0 LDR X8, [X8 + 0xC0]
	0x0297CCB4 LDR X0, [X8]
	0x0297CCB8 LDRB W8, [X0 + 0x135]
	0x0297CCBC TBNZ X8, 0x0, 0x297CCC4
	0x0297CCC0 BL 0x1C5C684
	0x0297CCC4 BL 0x1C16F10
	0x0297CCC8 MOV X1, X31
	0x0297CCCC MOV X20, X0
	0x0297CCD0 BL 0x33BDD8C
	0x0297CCD4 MOV X0, X31
	0x0297CCD8 STR W31, [X20 + 0x10]
	0x0297CCDC BL 0x33C151C
	0x0297CCE0 STR W0, [X20 + 0x20]
	0x0297CCE4 LDR X8, [X19 + 0x28]
	0x0297CCE8 MOV X19, X20
	0x0297CCEC STR X8, [X20 + 0x28]
	0x0297CCF0 MOV X0, X19
	0x0297CCF4 LDP X20, X19, [X31 + 0x10]
	0x0297CCF8 LDP X30, X21, [X31], #0x20
	0x0297CCFC RET
	0x0297CD00 LDR X8, [X1 + 0x20]
	0x0297CD04 LDR X8, [X8 + 0xC0]
	0x0297CD08 LDR X1, [X8 + 0x68]
	0x0297CD0C B 0x297CC74
	0x0297CD10 STR X30, [X31 - 0x30]!
	0x0297CD14 STP X22, X21, [X31 + 0x10]
	0x0297CD18 STP X20, X19, [X31 + 0x20]
	0x0297CD1C MOV W20, W1
	0x0297CD20 MOV X1, X31
	0x0297CD24 MOV X19, X2
	0x0297CD28 MOV X21, X0
	0x0297CD2C BL 0x33BDD8C
	0x0297CD30 LDR X8, [X19 + 0x20]
	0x0297CD34 MOVZ W1, 0x4
	0x0297CD38 LDR X8, [X8 + 0xC0]
	0x0297CD3C LDR X8, [X8]
	0x0297CD40 LDR X22, [X8 + 0x80]
	0x0297CD44 MOV X0, X22
	0x0297CD48 BL 0x1C16D14
	0x0297CD4C MOV X0, X21
	0x0297CD50 MOV X1, X22
	0x0297CD54 BL 0x1C16D18
	0x0297CD58 STR W20, [X0]
	0x0297CD5C MOV X0, X31
	0x0297CD60 BL 0x33C151C
	0x0297CD64 LDR X8, [X19 + 0x20]
	0x0297CD68 MOV W20, W0
	0x0297CD6C MOVZ W1, 0x4
	0x0297CD70 LDR X8, [X8 + 0xC0]
	0x0297CD74 LDR X8, [X8]
	0x0297CD78 LDR X8, [X8 + 0x80]
	0x0297CD7C ADD X19, X8, 0x40
	0x0297CD80 MOV X0, X19
	0x0297CD84 BL 0x1C16D14
	0x0297CD88 MOV X0, X21
	0x0297CD8C MOV X1, X19
	0x0297CD90 BL 0x1C16D18
	0x0297CD94 STR W20, [X0]
	0x0297CD98 LDP X20, X19, [X31 + 0x20]
	0x0297CD9C LDP X22, X21, [X31 + 0x10]
	0x0297CDA0 LDR X30, [X31], #0x30
	0x0297CDA4 RET
	0x0297CDA8 STR X30, [X31 - 0x20]!
	0x0297CDAC STP X20, X19, [X31 + 0x10]
	0x0297CDB0 LDR X8, [X1 + 0x20]
	0x0297CDB4 MOV X19, X1
	0x0297CDB8 MOV X20, X0
	0x0297CDBC LDR X8, [X8 + 0xC0]
	0x0297CDC0 LDR X8, [X8]
	0x0297CDC4 LDR X1, [X8 + 0x80]
	0x0297CDC8 BL 0x1C16D18
	0x0297CDCC LDR W8, [X0]
	0x0297CDD0 CMP W8, 0x1
	0x0297CDD4 CCMN W8, 0x3, 0x4, NE
	0x0297CDD8 B.NE 0x297CDFC
	0x0297CDDC LDR X8, [X19 + 0x20]
	0x0297CDE0 MOV X0, X20
	0x0297CDE4 LDP X20, X19, [X31 + 0x10]
	0x0297CDE8 LDR X8, [X8 + 0xC0]
	0x0297CDEC LDR X1, [X8 + 0x8]
	0x0297CDF0 LDR X2, [X1]
	0x0297CDF4 LDR X30, [X31], #0x20
	0x0297CDF8 BR X2
	0x0297CDFC LDP X20, X19, [X31 + 0x10]
	0x0297CE00 LDR X30, [X31], #0x20
	0x0297CE04 RET
	0x0297CE08 STP X29, X30, [X31 - 0x50]!
	0x0297CE0C STR X25, [X31 + 0x10]
	0x0297CE10 STP X24, X23, [X31 + 0x20]
	0x0297CE14 STP X22, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31], X31
	009 Move W8, [X0]
	010 Move X19, X0
	011 Move X20, X1
	012 Compare W8, 0
	013 JumpIfEqual {105}
	014 Move X8, [X19+32]
	015 Compare X8, 0
	016 JumpIfEqual {205}
	017 Move X21, [X8+16]
	018 Compare X21, 0
	019 JumpIfEqual {206}
	020 Move X0, [X20+32]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X21, [X21+16]
	028 Compare X21, 0
	029 JumpIfEqual {207}
	030 Move X0, [X20+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X2, [X8+40]
	039 Move X0, X21
	040 Move W1, W31
	041 Call Task`1<Object>.ConfigureAwait, X0, X1
	042 Move X21, X0
	043 Move X0, [X20+32]
	044 Move X22, X1
	045 Add X8, X0, 309
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {55}
	051 Call 0x1C5D684
	052 Move X0, [X20+32]
	053 Add X8, X0, 309
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move [X31], X21
	056 Move [X31+8], X22
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+192]
	063 Move X1, [X8+80]
	064 Add X0, X31, 0
	065 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {113}
	070 Move [X19], W31
	071 Move V0, [X31]
	072 Move [X19+40], V0
	073 Move X0, [X20+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Move X0, [X8+112]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, [X20+32]
	093 Move W8, [X0+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Move X8, [X0+192]
	100 Add X0, X19, 8
	101 Move X3, [X8+104]
	102 Add X1, X31, 0
	103 Move X2, X19
	104 Call AsyncTaskMethodBuilder`1<ValueTuple`2<Boolean, Object>>.AwaitUnsafeOnCompleted, X0, X1, X2
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 Move TEMP, 0
	107 Not TEMP
	108 Move W8, TEMP
	109 Move [X31], V0
	110 Move [X19+40], X31
	111 Move [X19+48], X31
	112 Move [X19], W8
	113 Move X0, [X20+32]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move X8, [X0+192]
	121 Move X1, [X8+136]
	122 Add X0, X31, 0
	123 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	124 Move X21, X0
	125 Compare X0, 0
	126 JumpIfEqual {194}
	127 Move X8, [X20+32]
	128 Add X9, X8, 309
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Move TEMP, X9
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {139}
	134 Move X0, X8
	135 Call 0x1C5D684
	136 Move X8, [X20+32]
	137 Add X9, X8, 309
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move W10, [X21+16]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move TEMP, X9
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {148}
	145 Move X0, X8
	146 Call 0x1C5D684
	147 Move X8, [X20+32]
	148 Move TEMP, 1
	149 Not TEMP
	150 Move W9, TEMP
	151 Move X22, [X21+32]
	152 Move X21, [X21+40]
	153 Move [X19+8], W9
	154 Move W9, [X8+309]
	155 Move TEMP, X9
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {162}
	159 Move X0, X8
	160 Call 0x1C5D684
	161 Move X8, X0
	162 Move X8, [X8+192]
	163 Move X0, [X8+112]
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {170}
	169 Call 0x1C5D684
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, [X20+32]
	175 Move W8, [X0+309]
	176 Move TEMP, X8
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {181}
	180 Call 0x1C5D684
	181 Move X8, [X0+192]
	182 Move X0, X19
	183 Move X1, X22
	184 Move X2, X21
	185 Move X3, [X8+200]
	186 Call AsyncTaskMethodBuilder`1<ValueTuple`2<Boolean, Object>>.SetResult, X0, X1
	187 Move X20, [X31+48]
	188 Move X19, [X31+56]
	189 Move X22, [X31+32]
	190 Move X21, [X31+40]
	191 Move X30, [X31+16]
	192 Add X31, X31, 64
	193 Return 
	194 Call 0x1C17F20
	195 Move TEMP, X9
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {201}
	199 Move X0, X8
	200 Call 0x1C5D684
	201 Move X0, [X21+24]
	202 Compare X0, 0
	203 JumpIfNotEqual {208}
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Move X1, X31
	209 Call ExceptionDispatchInfo.Throw, X0
	210 Move X0, 0x1778000
	211 Move X0, [X0+1456]
	212 Call 0x1C17D08
	213 Call 0x1C17F10
	214 Move X21, X0
	215 Move X0, 0x17A3000
	216 Move X0, [X0+832]
	217 Call 0x1C17D08
	218 Move X1, X0
	219 Move X0, X21
	220 Move X2, X31
	221 Call InvalidOperationException..ctor, X0, X1
	222 Move X0, X21
	223 Move X1, X20
	224 Call 0x1C17DEC
	225 Move X21, X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X21
	228 Call 0x3EB2AD0
	229 Move X21, X0
	230 Move X0, 0x1778000
	231 Move X0, [X0+2000]
	232 Call 0x1C17D08
	233 Move X8, [X21]
	234 Move X1, [X8]
	235 Call 0x1C18270
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {277}
	240 Move X21, [X21]
	241 Call 0x3EB2AE0
	242 Move TEMP, 1
	243 Not TEMP
	244 Move W8, TEMP
	245 Move [X19+8], W8
	246 Move X0, [X20+32]
	247 Move W8, [X0+309]
	248 Move TEMP, X8
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {253}
	252 Call 0x1C5D684
	253 Move X8, [X0+192]
	254 Move X0, [X8+112]
	255 Move W8, [X0+309]
	256 Move TEMP, X8
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {261}
	260 Call 0x1C5D684
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {265}
	264 Call 0x1C17DFC
	265 Move X0, [X20+32]
	266 Move W8, [X0+309]
	267 Move TEMP, X8
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfEqual {272}
	271 Call 0x1C5D684
	272 Move X8, [X0+192]
	273 Move X0, X19
	274 Move X1, X21
	275 Move X2, [X8+192]
	276 Call AsyncTaskMethodBuilder`1<ValueTuple`2<Boolean, Object>>.SetException, X0, X1
	277 Move W0, 8
	278 Call 0x3EB2AF0
	279 Move X8, [X21]
	280 Move [X0], X8
	281 Move X1, 0x1539000
	282 Add X1, X1, 3672
	283 Move X2, X31
	284 Call 0x3EB2B00
	285 Move X21, X0
	286 Call 0x3EB2AE0
	287 Move X0, X21
	288 Call 0x1D2D690
	289 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0297CE18 STP X20, X19, [X31 + 0x40]
	0x0297CE1C ADD X29, X31, 0x0
	0x0297CE20 SUB X31, X31, 0x40
	0x0297CE24 MRS X24, 0xC000
	0x0297CE28 LDR X8, [X24 + 0x28]
	0x0297CE2C STUR X8, [X29 - 0x8]
	0x0297CE30 STP X1, X0, [X29 - 0x20]
	0x0297CE34 LDR X8, [X1 + 0x20]
	0x0297CE38 LDR X8, [X8 + 0xC0]
	0x0297CE3C LDR X9, [X8 + 0x28]
	0x0297CE40 LDR X10, [X8 + 0x40]
	0x0297CE44 LDR W20, [X9 + 0xFC]
	0x0297CE48 LDR W9, [X10 + 0xFC]
	0x0297CE4C ADD X10, X31, 0x0
	0x0297CE50 ADD X9, X9, 0xF
	0x0297CE54 AND X9, X9, 0x1FFFFFFFF
	0x0297CE58 SUB X19, X10, X9
	0x0297CE5C ADD X31, X19, 0x0
	0x0297CE60 ADD X10, X20, 0xF
	0x0297CE64 ADD X9, X31, 0x0
	0x0297CE68 AND X10, X10, 0x1FFFFFFFF
	0x0297CE6C SUB X21, X9, X10
	0x0297CE70 ADD X31, X21, 0x0
	0x0297CE74 SUB X9, X29, 0x20
	0x0297CE78 SUB X10, X29, 0x18
	0x0297CE7C STP X9, X10, [X29 - 0x30]
	0x0297CE80 LDR X8, [X8]
	0x0297CE84 LDR X1, [X8 + 0x80]
	0x0297CE88 BL 0x1C16D18
	0x0297CE8C LDUR X8, [X29 - 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+112]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Add X0, X20, 8
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, [X8+208]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call AsyncTaskMethodBuilder`1<ValueTuple`2<Boolean, Object>>.SetStateMachine, X0, X1
	045 Return 

