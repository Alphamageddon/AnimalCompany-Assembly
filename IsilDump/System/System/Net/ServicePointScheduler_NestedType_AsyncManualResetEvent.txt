Type: System.Net.ServicePointScheduler/AsyncManualResetEvent

Method: System.Threading.Tasks.Task`1<System.Boolean> WaitAsync(System.Int32 millisecondTimeout)

Disassembly:
	0x036A920C ADRP X1, 0x80B000
	0x036A9210 ADD X1, X1, 0xE58
	0x036A9214 MOV X2, X31
	0x036A9218 BL 0x3EB1B00
	0x036A921C MOV X0, X24
	0x036A9220 BL 0x1C16F18
	0x036A9224 MOV X23, X0
	0x036A9228 BL 0x3EB1AE0
	0x036A922C MOV X0, X23
	0x036A9230 BL 0x1D2C690
	0x036A9234 BL 0x1990590
	0x036A9238 MOV X22, X1
	0x036A923C MOV X23, X0
	0x036A9240 B 0x36A914C
	0x036A9244 MOV X22, X1
	0x036A9248 MOV X23, X0
	0x036A924C B 0x36A916C
	0x036A9250 STR X30, [X31 - 0x30]!
	0x036A9254 STP X22, X21, [X31 + 0x10]
	0x036A9258 STP X20, X19, [X31 + 0x20]
	0x036A925C ADRP X21, 0xD37000
	0x036A9260 ADRP X22, 0xA4D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD38000
	006 Move W8, [X21+2337]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA56000
	014 Move X0, [X0+1776]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2337], W8
	018 Move X20, [X20+16]
	019 Call 0x1C17D44
	020 Compare X20, 0
	021 JumpIfEqual {31}
	022 Move X0, [X20+16]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, X31
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call ServicePointScheduler.WaitAsync, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void Set()

Disassembly:
	0x036A9264 LDRB W8, [X21 + 0x928]
	0x036A9268 LDR X22, [X22 + 0x280]
	0x036A926C MOV X19, X1
	0x036A9270 MOV X20, X0
	0x036A9274 TBNZ X8, 0x0, 0x36A928C
	0x036A9278 ADRP X0, 0xA4D000
	0x036A927C LDR X0, [X0 + 0x280]
	0x036A9280 BL 0x1C16CF4
	0x036A9284 MOVZ W8, 0x1
	0x036A9288 STRB W8, [X21 + 0x928]
	0x036A928C LDR X0, [X22]
	0x036A9290 LDR W8, [X0 + 0xE0]
	0x036A9294 CBNZ W8, 0x36A929C
	0x036A9298 BL 0x1C16DFC
	0x036A929C ADD X0, X20, 0x8
	0x036A92A0 MOV X1, X19
	0x036A92A4 LDP X20, X19, [X31 + 0x20]
	0x036A92A8 LDP X22, X21, [X31 + 0x10]
	0x036A92AC MOV X2, X31
	0x036A92B0 LDR X30, [X31], #0x30
	0x036A92B4 B 0x32C477C
	0x036A92B8 SUB X31, X31, 0x50
	0x036A92BC STP X30, X23, [X31 + 0x20]
	0x036A92C0 STP X22, X21, [X31 + 0x30]
	0x036A92C4 STP X20, X19, [X31 + 0x40]
	0x036A92C8 ADRP X20, 0xD37000
	0x036A92CC LDRB W8, [X20 + 0x929]
	0x036A92D0 MOV X19, X0
	0x036A92D4 TBNZ X8, 0x0, 0x36A9358
	0x036A92D8 ADRP X0, 0xA95000
	0x036A92DC LDR X0, [X0 + 0xF28]
	0x036A92E0 BL 0x1C16CF4
	0x036A92E4 ADRP X0, 0xA54000
	0x036A92E8 LDR X0, [X0 + 0x188]
	0x036A92EC BL 0x1C16CF4
	0x036A92F0 ADRP X0, 0xA54000
	0x036A92F4 LDR X0, [X0 + 0xE0]
	0x036A92F8 BL 0x1C16CF4
	0x036A92FC ADRP X0, 0xA4C000
	0x036A9300 LDR X0, [X0 + 0xA50]
	0x036A9304 BL 0x1C16CF4
	0x036A9308 ADRP X0, 0xA84000
	0x036A930C LDR X0, [X0 + 0x1E0]
	0x036A9310 BL 0x1C16CF4
	0x036A9314 ADRP X0, 0xA84000
	0x036A9318 LDR X0, [X0 + 0x1E8]
	0x036A931C BL 0x1C16CF4
	0x036A9320 ADRP X0, 0xA84000
	0x036A9324 LDR X0, [X0 + 0x1F0]
	0x036A9328 BL 0x1C16CF4
	0x036A932C ADRP X0, 0xA53000
	0x036A9330 LDR X0, [X0 + 0xC20]
	0x036A9334 BL 0x1C16CF4
	0x036A9338 ADRP X0, 0xA84000
	0x036A933C LDR X0, [X0 + 0x1F8]
	0x036A9340 BL 0x1C16CF4
	0x036A9344 ADRP X0, 0xA4B000
	0x036A9348 LDR X0, [X0 + 0x7B8]
	0x036A934C BL 0x1C16CF4
	0x036A9350 MOVZ W8, 0x1
	0x036A9354 STRB W8, [X20 + 0x929]
	0x036A9358 STP X31, X31, [X31 + 0x10]
	0x036A935C STR W31, [X31 + 0x8]
	0x036A9360 LDR W23, [X19]
	0x036A9364 CBZ W23, 0x36A94C4
	0x036A9368 ADRP X8, 0xA4C000
	0x036A936C LDR X8, [X8 + 0xA50]
	0x036A9370 LDR X0, [X8]
	0x036A9374 BL 0x1C16F10
	0x036A9378 MOV X21, X0
	0x036A937C MOV X1, X31
	0x036A9380 BL 0x33DFA8C
	0x036A9384 STR X21, [X19 + 0x30]
	0x036A9388 CBZ X21, 0x36A95E0
	0x036A938C LDR W20, [X19 + 0x20]
	0x036A9390 MOV X0, X21
	0x036A9394 MOV X1, X31
	0x036A9398 BL 0x33DFA08
	0x036A939C ADRP X8, 0xA4B000
	0x036A93A0 LDR X8, [X8 + 0x7B8]
	0x036A93A4 MOV X21, X0
	0x036A93A8 LDR X0, [X8]
	0x036A93AC LDR W8, [X0 + 0xE0]
	0x036A93B0 CBNZ W8, 0x36A93B8
	0x036A93B4 BL 0x1C16DFC
	0x036A93B8 MOV W0, W20
	0x036A93BC MOV X1, X21
	0x036A93C0 MOV X2, X31
	0x036A93C4 BL 0x33F503C
	0x036A93C8 ADRP X8, 0xA53000
	0x036A93CC LDR X8, [X8 + 0xC20]
	0x036A93D0 STR X0, [X19 + 0x38]
	0x036A93D4 LDR X0, [X8]
	0x036A93D8 MOVZ W1, 0x2
	0x036A93DC BL 0x1C16D6C
	0x036A93E0 MOV X20, X0
	0x036A93E4 CBZ X0, 0x36A95E4
	0x036A93E8 LDR X21, [X19 + 0x28]
	0x036A93EC CBZ X21, 0x36A9404
	0x036A93F0 LDR X8, [X20]
	0x036A93F4 LDR X1, [X8 + 0x40]
	0x036A93F8 MOV X0, X21
	0x036A93FC BL 0x1C16E00
	0x036A9400 CBZ X0, 0x36A95F4
	0x036A9404 LDR W8, [X20 + 0x18]
	0x036A9408 CBZ W8, 0x36A95E8
	0x036A940C STR X21, [X20 + 0x20]
	0x036A9410 LDR X21, [X19 + 0x38]
	0x036A9414 CBZ X21, 0x36A9430
	0x036A9418 LDR X8, [X20]
	0x036A941C LDR X1, [X8 + 0x40]
	0x036A9420 MOV X0, X21
	0x036A9424 BL 0x1C16E00
	0x036A9428 CBZ X0, 0x36A9600
	0x036A942C LDR W8, [X20 + 0x18]
	0x036A9430 CMP W8, 0x1
	0x036A9434 B.LS 0x36A95EC
	0x036A9438 STR X21, [X20 + 0x28]
	0x036A943C MOV X0, X20
	0x036A9440 MOV X1, X31
	0x036A9444 BL 0x33F6194
	0x036A9448 CBZ X0, 0x36A95F0
	0x036A944C ADRP X8, 0xA84000
	0x036A9450 LDR X8, [X8 + 0x1F8]
	0x036A9454 LDR X2, [X8]
	0x036A9458 MOV W1, W31
	0x036A945C BL 0x269F5D4
	0x036A9460 ADRP X8, 0xA84000
	0x036A9464 LDR X8, [X8 + 0x1F0]
	0x036A9468 STP X0, X1, [X31 + 0x10]
	0x036A946C LDR X8, [X8]
	0x036A9470 ADD X0, X31, 0x10
	0x036A9474 MOV X1, X8
	0x036A9478 BL 0x2998B64
	0x036A947C TBNZ X0, 0x0, 0x36A94D8
	0x036A9480 STR W31, [X19]
	0x036A9484 LDR V0, [X31 + 0x1]
	0x036A9488 ADRP X8, 0xA54000
	0x036A948C STR V0, [X19 + 0x4]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD38000
	009 Move X20, 0xA4C000
	010 Move W8, [X21+2338]
	011 Move X20, [X20+1976]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0xA53000
	018 Move X0, [X0+2008]
	019 Call 0x1C17CF4
	020 Move X0, 0xA75000
	021 Move X0, [X0+1984]
	022 Call 0x1C17CF4
	023 Move X0, 0xA56000
	024 Move X0, [X0+1776]
	025 Call 0x1C17CF4
	026 Move X0, 0xA96000
	027 Move X0, [X0+3768]
	028 Call 0x1C17CF4
	029 Move X0, 0xA53000
	030 Move X0, [X0+2024]
	031 Call 0x1C17CF4
	032 Move X0, 0xA4C000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xA96000
	036 Move X0, [X0+3776]
	037 Call 0x1C17CF4
	038 Move X0, 0xA96000
	039 Move X0, [X0+3784]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+2338], W8
	043 Move X19, [X19+16]
	044 Call 0x1C17D44
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X21, 0xD30000
	051 Move W8, [X21+3867]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0xA4C000
	055 Move X0, [X0+1976]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+3867], W8
	059 Move X8, [X20]
	060 Move X23, 0xA96000
	061 Move W9, [X8+224]
	062 Move X23, [X23+3784]
	063 Compare W9, 0
	064 JumpIfNotEqual {68}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X8, [X20]
	068 Move X0, [X23]
	069 Move X8, [X8+184]
	070 Move W9, [X0+224]
	071 Move X20, [X8+40]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X23]
	076 Move X8, [X0+184]
	077 Move X24, 0xA53000
	078 Move X21, [X8+8]
	079 Move X24, [X24+2008]
	080 Compare X21, 0
	081 JumpIfNotEqual {103}
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X23]
	087 Move X9, 0xA75000
	088 Move X8, [X0+184]
	089 Move X9, [X9+1984]
	090 Move X22, [X8]
	091 Move X0, [X9]
	092 Call 0x1C17F10
	093 Move X8, 0xA96000
	094 Move X8, [X8+3776]
	095 Move X1, X22
	096 Move X3, X31
	097 Move X21, X0
	098 Move X2, [X8]
	099 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	100 Move X8, [X23]
	101 Move X8, [X8+184]
	102 Move [X8+8], X21
	103 Move X0, [X24]
	104 Move X23, 0xA53000
	105 Move W8, [X0+224]
	106 Move X23, [X23+2024]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X31
	111 Call CancellationToken.get_None
	112 Move X8, [X23]
	113 Move X22, X0
	114 Move W9, [X8+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X8
	118 Call 0x1C17DFC
	119 Move X24, 0xD31000
	120 Move W8, [X24+2189]
	121 Compare W8, 0
	122 JumpIfNotEqual {128}
	123 Move X0, 0xA53000
	124 Move X0, [X0+2024]
	125 Call 0x1C17CF4
	126 Move W8, 1
	127 Move [X24+2189], W8
	128 Move X0, [X23]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {134}
	132 Call 0x1C17DFC
	133 Move X0, [X23]
	134 Compare X20, 0
	135 JumpIfEqual {162}
	136 Move X9, 0xA96000
	137 Move X8, [X0+184]
	138 Move X9, [X9+3768]
	139 Move W4, 1
	140 Move X0, X20
	141 Move X5, [X8+8]
	142 Move X6, [X9]
	143 Move X1, X21
	144 Move X2, X19
	145 Move X3, X22
	146 Call 0x229C9E4, X0, X1, X2, X3, X4, X5
	147 Compare X19, 0
	148 JumpIfEqual {162}
	149 Move X0, [X19+16]
	150 Compare X0, 0
	151 JumpIfEqual {162}
	152 Move X20, [X31+48]
	153 Move X19, [X31+56]
	154 Move X22, [X31+32]
	155 Move X21, [X31+40]
	156 Move X24, [X31+16]
	157 Move X23, [X31+24]
	158 Move X1, X31
	159 Move X30, [X31+64]
	160 Call Task.Wait, X0
	161 Return 
	162 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x036A9490 LDR X8, [X8 + 0xE0]
	0x036A9494 LDR X0, [X8]
	0x036A9498 LDR W8, [X0 + 0xE0]
	0x036A949C CBNZ W8, 0x36A94A4
	0x036A94A0 BL 0x1C16DFC
	0x036A94A4 ADRP X8, 0xA95000
	0x036A94A8 LDR X8, [X8 + 0xF28]
	0x036A94AC ADD X0, X19, 0x8
	0x036A94B0 LDR X3, [X8]
	0x036A94B4 ADD X1, X31, 0x10
	0x036A94B8 MOV X2, X19
	0x036A94BC BL 0x1FAA83C
	0x036A94C0 B 0x36A95C4
	0x036A94C4 LDR V0, [X19 + 0x4]
	0x036A94C8 MOVN W23, 0x0
	0x036A94CC STR V0, [X31 + 0x1]
	0x036A94D0 STP X31, X31, [X19 + 0x40]
	0x036A94D4 STR W23, [X19]
	0x036A94D8 ADRP X8, 0xA84000
	0x036A94DC LDR X8, [X8 + 0x1E8]
	0x036A94E0 ADD X0, X31, 0x10
	0x036A94E4 LDR X1, [X8]
	0x036A94E8 BL 0x2998BB0
	0x036A94EC LDR X8, [X19 + 0x38]
	0x036A94F0 MOV X21, X31
	0x036A94F4 MOVZ W22, 0x6
	0x036A94F8 CMP X0, X8
	0x036A94FC CSET W20, NE
	0x036A9500 TBZ X23, 0x1F, 0x36A9524
	0x036A9504 LDR X0, [X19 + 0x30]
	0x036A9508 CBZ X0, 0x36A960C
	0x036A950C MOV X1, X31
	0x036A9510 BL 0x33DFCF8
	0x036A9514 LDR X0, [X19 + 0x30]
	0x036A9518 CBZ X0, 0x36A9610
	0x036A951C MOV X1, X31
	0x036A9520 BL 0x33E01CC
	0x036A9524 CBNZ X21, 0x36A95D8
	0x036A9528 CBZ W22, 0x36A9574
	0x036A952C CMP W22, 0x6
	0x036A9530 B.NE 0x36A95C4
	0x036A9534 MOVN W8, 0x1
	0x036A9538 STR X31, [X19 + 0x30]
	0x036A953C STR W8, [X19], #0x8
	0x036A9540 ADRP X8, 0xA54000
	0x036A9544 LDR X8, [X8 + 0xE0]
	0x036A9548 LDR X0, [X8]
	0x036A954C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xD38000
	008 Move W8, [X20+2339]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xA56000
	015 Move X0, [X0+2312]
	016 Call 0x1C17CF4
	017 Move X0, 0xA56000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move X0, 0xA56000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2339], W8
	025 Move X22, 0xA56000
	026 Move X23, 0xA56000
	027 Move X22, [X22+2304]
	028 Move X23, [X23+2312]
	029 Add X19, X19, 16
	030 Move X20, [X19]
	031 Call 0x1C17D44
	032 Compare X20, 0
	033 JumpIfEqual {61}
	034 Move X0, [X20+16]
	035 Compare X0, 0
	036 JumpIfEqual {61}
	037 Move X1, X31
	038 Call Task.get_IsCompleted, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {54}
	043 Call 0x1C17D44
	044 Move X0, [X22]
	045 Call 0x1C17F10
	046 Move X1, [X23]
	047 Move X21, X0
	048 Call TaskCompletionSource`1<Boolean>..ctor, X0
	049 Move X0, X19
	050 Move X1, X21
	051 Move X2, X20
	052 Call 0x1C25138
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void .ctor(System.Boolean state)

Disassembly:
	0x036A9550 CBNZ W8, 0x36A9558
	0x036A9554 BL 0x1C16DFC
	0x036A9558 ADRP X8, 0xA54000
	0x036A955C LDR X8, [X8 + 0x188]
	0x036A9560 MOV X0, X19
	0x036A9564 MOV W1, W20
	0x036A9568 LDR X2, [X8]
	0x036A956C BL 0x262F004
	0x036A9570 B 0x36A95C4
	0x036A9574 MOVN X8, 0x0
	0x036A9578 ADD X9, X31, 0x0
	0x036A957C LDR X20, [X9, X8, LSL #3]
	0x036A9580 MOVN W8, 0x1
	0x036A9584 STR W8, [X19]
	0x036A9588 STR X31, [X19 + 0x30]
	0x036A958C ADRP X0, 0xA54000
	0x036A9590 LDR X0, [X0 + 0xE0]
	0x036A9594 ADD X19, X19, 0x8
	0x036A9598 BL 0x1C16D08
	0x036A959C LDR W8, [X0 + 0xE0]
	0x036A95A0 CBNZ W8, 0x36A95A8
	0x036A95A4 BL 0x1C16DFC
	0x036A95A8 ADRP X0, 0xA54000
	0x036A95AC LDR X0, [X0 + 0x190]
	0x036A95B0 BL 0x1C16D08
	0x036A95B4 MOV X2, X0
	0x036A95B8 MOV X0, X19
	0x036A95BC MOV X1, X20
	0x036A95C0 BL 0x262F21C
	0x036A95C4 LDP X20, X19, [X31 + 0x40]
	0x036A95C8 LDP X22, X21, [X31 + 0x30]
	0x036A95CC LDP X30, X23, [X31 + 0x20]
	0x036A95D0 ADD X31, X31, 0x50
	0x036A95D4 RET
	0x036A95D8 MOV X0, X21
	0x036A95DC BL 0x1C16F18
	0x036A95E0 BL 0x1C16F20
	0x036A95E4 BL 0x1C16F20
	0x036A95E8 BL 0x1C16F28
	0x036A95EC BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD38000
	008 Move X23, 0xA56000
	009 Move X21, 0xA56000
	010 Move W8, [X22+2340]
	011 Move X23, [X23+2304]
	012 Move X21, [X21+2312]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA56000
	020 Move X0, [X0+2312]
	021 Call 0x1C17CF4
	022 Move X0, 0xA56000
	023 Move X0, [X0+2304]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2340], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X1, [X21]
	030 Move X21, X0
	031 Call TaskCompletionSource`1<Boolean>..ctor, X0
	032 Call 0x1C17D44
	033 Move X0, X19
	034 Move X1, X31
	035 Move [X19+16], X21
	036 Call Object..ctor, X0
	037 Move TEMP, X20
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {50}
	041 Move X0, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call AsyncManualResetEvent.Set, X0
	049 Return 
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return 

