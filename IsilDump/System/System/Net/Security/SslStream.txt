Type: System.Net.Security.SslStream

Method: Mono.Net.Security.MobileAuthenticatedStream get_Impl()

Disassembly:
	0x03626590 STP X20, X19, [X31 + 0x10]
	0x03626594 ADRP X19, 0xDBA000
	0x03626598 ADRP X20, 0xB15000
	0x0362659C LDRB W8, [X19 + 0x4C1]
	0x036265A0 LDR X20, [X20 + 0x368]
	0x036265A4 TBNZ X8, 0x0, 0x36265BC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SslStream.CheckDisposed, X0
	005 Move X0, [X19+88]
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.String get_InternalTargetHost()

Disassembly:
	0x03626604 ADRP X19, 0xDBA000
	0x03626608 ADRP X20, 0xB15000
	0x0362660C LDRB W8, [X19 + 0x4C3]
	0x03626610 LDR X20, [X20 + 0x378]
	0x03626614 TBNZ X8, 0x0, 0x362662C
	0x03626618 ADRP X0, 0xB15000
	0x0362661C LDR X0, [X0 + 0x378]
	0x03626620 BL 0x1C16CF4
	0x03626624 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SslStream.CheckDisposed, X0
	005 Move X8, [X19+88]
	006 Compare X8, 0
	007 JumpIfEqual {12}
	008 Move X0, [X8+160]
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Call 0x1C17F20

Method: Mono.Net.Security.MobileTlsProvider GetProvider()

Disassembly:
	0x03626628 STRB W8, [X19 + 0x4C3]
	0x0362662C LDR X0, [X20]
	0x03626630 BL 0x1C16D9C
	0x03626634 STR X30, [X31 - 0x20]!
	0x03626638 STP X20, X19, [X31 + 0x10]
	0x0362663C ADRP X19, 0xDBA000
	0x03626640 ADRP X20, 0xB15000
	0x03626644 LDRB W8, [X19 + 0x4C4]
	0x03626648 LDR X20, [X20 + 0x380]
	0x0362664C TBNZ X8, 0x0, 0x3626664
	0x03626650 ADRP X0, 0xB15000
	0x03626654 LDR X0, [X0 + 0x380]
	0x03626658 BL 0x1C16CF4
	0x0362665C MOVZ W8, 0x1
	0x03626660 STRB W8, [X19 + 0x4C4]
	0x03626664 LDR X0, [X20]
	0x03626668 BL 0x1C16D9C
	0x0362666C STR X30, [X31 - 0x20]!
	0x03626670 STP X20, X19, [X31 + 0x10]
	0x03626674 ADRP X19, 0xDBA000
	0x03626678 ADRP X20, 0xB15000
	0x0362667C LDRB W8, [X19 + 0x4C5]
	0x03626680 LDR X20, [X20 + 0x388]
	0x03626684 TBNZ X8, 0x0, 0x362669C
	0x03626688 ADRP X0, 0xB15000
	0x0362668C LDR X0, [X0 + 0x388]
	0x03626690 BL 0x1C16CF4
	0x03626694 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0xDBB000
	004 Move W8, [X19+1204]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0xB14000
	010 Move X0, [X0+1928]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+1204], W8
	014 Move X0, X31
	015 Call MonoTlsProviderFactory.GetProvider
	016 Compare X0, 0
	017 JumpIfEqual {29}
	018 Move X9, 0xB14000
	019 Move X9, [X9+1928]
	020 Move X8, [X0]
	021 Move X1, [X9]
	022 Move W10, [X8+304]
	023 Move W9, [X1+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X8+200]
	026 Add X8, X8, X9
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Return X0
	032 Call 0x1C181E0

Method: System.Void .ctor(System.IO.Stream innerStream)

Disassembly:
	0x03626698 STRB W8, [X19 + 0x4C5]
	0x0362669C LDR X0, [X20]

ISIL:
	001 Move W2, W31

Method: System.Void .ctor(System.IO.Stream innerStream, System.Boolean leaveInnerStreamOpen)

Disassembly:
	0x036266A0 BL 0x1C16D9C
	0x036266A4 STR X30, [X31 - 0x20]!
	0x036266A8 STP X20, X19, [X31 + 0x10]
	0x036266AC ADRP X19, 0xDBA000
	0x036266B0 ADRP X20, 0xB15000
	0x036266B4 LDRB W8, [X19 + 0x4C6]
	0x036266B8 LDR X20, [X20 + 0x390]
	0x036266BC TBNZ X8, 0x0, 0x36266D4
	0x036266C0 ADRP X0, 0xB15000
	0x036266C4 LDR X0, [X0 + 0x390]
	0x036266C8 BL 0x1C16CF4
	0x036266CC MOVZ W8, 0x1
	0x036266D0 STRB W8, [X19 + 0x4C6]
	0x036266D4 LDR X0, [X20]
	0x036266D8 BL 0x1C16D9C
	0x036266DC STR X30, [X31 - 0x20]!
	0x036266E0 STP X20, X19, [X31 + 0x10]
	0x036266E4 ADRP X19, 0xDBA000
	0x036266E8 ADRP X20, 0xB15000
	0x036266EC LDRB W8, [X19 + 0x4C7]
	0x036266F0 LDR X20, [X20 + 0x398]
	0x036266F4 TBNZ X8, 0x0, 0x362670C
	0x036266F8 ADRP X0, 0xB15000
	0x036266FC LDR X0, [X0 + 0x398]
	0x03626700 BL 0x1C16CF4
	0x03626704 MOVZ W8, 0x1
	0x03626708 STRB W8, [X19 + 0x4C7]
	0x0362670C LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 And W21, W2, 1
	006 Move W2, W21
	007 Move X3, X31
	008 Move X20, X1
	009 Move X19, X0
	010 Call AuthenticatedStream..ctor, X0, X1, X2
	011 Call SslStream.GetProvider
	012 Move [X19+56], X0
	013 Move X0, X31
	014 Call MonoTlsSettings.CopyDefaultSettings
	015 Move X8, [X19+56]
	016 Move [X19+64], X0
	017 Compare X8, 0
	018 JumpIfEqual {34}
	019 Move X9, [X8]
	020 Move X4, X0
	021 Move X0, X8
	022 Move X1, X19
	023 Move X10, [X9+488]
	024 Move X5, [X9+496]
	025 Move X2, X20
	026 Move W3, W21
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move [X19+88], X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void .ctor(System.IO.Stream innerStream, System.Boolean leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback)

Disassembly:
	0x03626710 BL 0x1C16D9C
	0x03626714 STR X30, [X31 - 0x20]!
	0x03626718 STP X20, X19, [X31 + 0x10]

ISIL:
	001 And W2, W2, 1
	002 Move X4, X31

Method: System.Void .ctor(System.IO.Stream innerStream, System.Boolean leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback)

Disassembly:
	0x0362671C ADRP X19, 0xDBA000
	0x03626720 ADRP X20, 0xB15000
	0x03626724 LDRB W8, [X19 + 0x4C8]
	0x03626728 LDR X20, [X20 + 0x3A0]
	0x0362672C TBNZ X8, 0x0, 0x3626744
	0x03626730 ADRP X0, 0xB15000
	0x03626734 LDR X0, [X0 + 0x3A0]
	0x03626738 BL 0x1C16CF4
	0x0362673C MOVZ W8, 0x1
	0x03626740 STRB W8, [X19 + 0x4C8]
	0x03626744 LDR X0, [X20]
	0x03626748 BL 0x1C16D9C
	0x0362674C STR X30, [X31 - 0x20]!
	0x03626750 STP X20, X19, [X31 + 0x10]
	0x03626754 ADRP X19, 0xDBA000
	0x03626758 ADRP X20, 0xB15000
	0x0362675C LDRB W8, [X19 + 0x4C9]
	0x03626760 LDR X20, [X20 + 0x3A8]
	0x03626764 TBNZ X8, 0x0, 0x362677C
	0x03626768 ADRP X0, 0xB15000
	0x0362676C LDR X0, [X0 + 0x3A8]
	0x03626770 BL 0x1C16CF4
	0x03626774 MOVZ W8, 0x1
	0x03626778 STRB W8, [X19 + 0x4C9]
	0x0362677C LDR X0, [X20]
	0x03626780 BL 0x1C16D9C
	0x03626784 STR X30, [X31 - 0x20]!
	0x03626788 STP X20, X19, [X31 + 0x10]
	0x0362678C ADRP X19, 0xDBA000
	0x03626790 ADRP X20, 0xB15000
	0x03626794 LDRB W8, [X19 + 0x4CA]
	0x03626798 LDR X20, [X20 + 0x3B0]
	0x0362679C TBNZ X8, 0x0, 0x36267B4
	0x036267A0 ADRP X0, 0xB15000
	0x036267A4 LDR X0, [X0 + 0x3B0]
	0x036267A8 BL 0x1C16CF4
	0x036267AC MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 And W21, W2, 1
	008 Move X23, X3
	009 Move W2, W21
	010 Move X3, X31
	011 Move X22, X4
	012 Move X20, X1
	013 Move X19, X0
	014 Call AuthenticatedStream..ctor, X0, X1, X2
	015 Call SslStream.GetProvider
	016 Move [X19+56], X0
	017 Move X0, X31
	018 Call MonoTlsSettings.CopyDefaultSettings
	019 Move [X19+64], X0
	020 Move X0, X19
	021 Move X1, X23
	022 Call SslStream.SetAndVerifyValidationCallback, X0, X1
	023 Move X0, X19
	024 Move X1, X22
	025 Call SslStream.SetAndVerifySelectionCallback, X0, X1
	026 Move X0, [X19+56]
	027 Compare X0, 0
	028 JumpIfEqual {45}
	029 Move X8, [X0]
	030 Move X4, [X19+64]
	031 Move X1, X19
	032 Move X2, X20
	033 Move X9, [X8+488]
	034 Move X5, [X8+496]
	035 Move W3, W21
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move [X19+88], X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void .ctor(System.IO.Stream innerStream, System.Boolean leaveInnerStreamOpen, Mono.Security.Interface.MonoTlsProvider provider, Mono.Security.Interface.MonoTlsSettings settings)

Disassembly:
	0x036269F4 LDR X0, [X0 + 0xC50]
	0x036269F8 BL 0x1C16D08
	0x036269FC BL 0x1C16F10
	0x03626A00 MOV X1, X31
	0x03626A04 MOV X19, X0
	0x03626A08 BL 0x338E344
	0x03626A0C ADRP X0, 0xB15000
	0x03626A10 LDR X0, [X0 + 0x408]
	0x03626A14 BL 0x1C16D08
	0x03626A18 MOV X1, X0
	0x03626A1C MOV X0, X19
	0x03626A20 BL 0x1C16DEC
	0x03626A24 SUB X31, X31, 0x30
	0x03626A28 STP X30, X21, [X31 + 0x10]
	0x03626A2C STP X20, X19, [X31 + 0x20]
	0x03626A30 ADRP X21, 0xDBA000
	0x03626A34 LDRB W8, [X21 + 0x4D5]
	0x03626A38 MOV X20, X1
	0x03626A3C MOV X19, X0
	0x03626A40 TBNZ X8, 0x0, 0x3626A64
	0x03626A44 ADRP X0, 0xB15000
	0x03626A48 LDR X0, [X0 + 0x410]
	0x03626A4C BL 0x1C16CF4
	0x03626A50 ADRP X0, 0xAD4000
	0x03626A54 LDR X0, [X0 + 0xD48]
	0x03626A58 BL 0x1C16CF4
	0x03626A5C MOVZ W8, 0x1
	0x03626A60 STRB W8, [X21 + 0x4D5]
	0x03626A64 ADRP X8, 0xAD4000
	0x03626A68 LDR X8, [X8 + 0xD48]
	0x03626A6C CMP W20, 0x0
	0x03626A70 B.LE 0x3626AD8
	0x03626A74 MOV X10, X31
	0x03626A78 MOV W9, W31
	0x03626A7C MOV W13, W31
	0x03626A80 AND X11, X20, 0x0
	0x03626A84 MOVN W1, 0x0
	0x03626A88 LDRH W12, [X19, X10, LSL #1]
	0x03626A8C CBZ W12, 0x3626A98
	0x03626A90 MOV W12, W31
	0x03626A94 B 0x3626AAC
	0x03626A98 ADD W12, W13, 0x1
	0x03626A9C CMP W12, W9
	0x03626AA0 B.LE 0x3626AAC
	0x03626AA4 SUB W1, W10, W13
	0x03626AA8 MOV W9, W12
	0x03626AAC ADD X10, X10, 0x1
	0x03626AB0 CMP X11, X10
	0x03626AB4 MOV W13, W12
	0x03626AB8 B.NE 0x3626A88
	0x03626ABC CMP W9, 0x1
	0x03626AC0 STR X31, [X31 + 0x8]
	0x03626AC4 B.LE 0x3626ADC
	0x03626AC8 LDR X3, [X8]
	0x03626ACC ADD W2, W9, W1
	0x03626AD0 ADD X0, X31, 0x8
	0x03626AD4 B 0x3626AEC
	0x03626AD8 STR X31, [X31 + 0x8]
	0x03626ADC LDR X3, [X8]
	0x03626AE0 ADD X0, X31, 0x8
	0x03626AE4 MOVN W1, 0x0
	0x03626AE8 MOVN W2, 0x0
	0x03626AEC BL 0x279FA30
	0x03626AF0 LDR X0, [X31 + 0x8]
	0x03626AF4 LDP X20, X19, [X31 + 0x20]
	0x03626AF8 LDP X30, X21, [X31 + 0x10]
	0x03626AFC ADD X31, X31, 0x30
	0x03626B00 RET
	0x03626B04 STR X30, [X31 - 0x10]!
	0x03626B08 CBZ W1, 0x3626BD0
	0x03626B0C LDRH W8, [X0]
	0x03626B10 CBNZ W8, 0x3626B44
	0x03626B14 CMP W1, 0x1
	0x03626B18 B.LS 0x3626BD0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xDBB000
	009 Move W8, [X24+1205]
	010 Move X19, X4
	011 Move X23, X3
	012 Move W22, W2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xB14000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+1205], W8
	024 And W2, W22, 1
	025 Move X0, X20
	026 Move X1, X21
	027 Move X3, X31
	028 Call AuthenticatedStream..ctor, X0, X1, X2
	029 Compare X23, 0
	030 JumpIfEqual {51}
	031 Move X8, 0xB14000
	032 Move X8, [X8+1928]
	033 Move X9, [X23]
	034 Move X1, [X8]
	035 Move W10, [X9+304]
	036 Move W8, [X1+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X10, [X9+200]
	039 Subtract X9, X8, 1
	040 Move X10, [X10]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X20+56], X23
	043 Move X10, [X23]
	044 Move W11, [X10+304]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X10+200]
	047 Move X8, [X8]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X19, 0
	050 JumpIfNotEqual {54}
	051 Move [X20+56], X23
	052 Compare X19, 0
	053 JumpIfEqual {83}
	054 Move X0, X19
	055 Move X1, X31
	056 Call MonoTlsSettings.Clone, X0
	057 Move X8, X0
	058 Move X0, [X20+56]
	059 Move [X20+64], X8
	060 Move W8, 1
	061 Move [X20+96], W8
	062 Compare X0, 0
	063 JumpIfEqual {83}
	064 Move X8, [X0]
	065 And W3, W22, 1
	066 Move X1, X20
	067 Move X2, X21
	068 Move X9, [X8+488]
	069 Move X5, [X8+496]
	070 Move X4, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move [X20+88], X0
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return 
	081 Move X0, X23
	082 Call 0x1C181E0
	083 Call 0x1C17F20

Method: System.Void SetAndVerifyValidationCallback(System.Net.Security.RemoteCertificateValidationCallback callback)

Disassembly:
	0x036267B0 STRB W8, [X19 + 0x4CA]
	0x036267B4 LDR X0, [X20]
	0x036267B8 BL 0x1C16D9C
	0x036267BC STR X30, [X31 - 0x20]!
	0x036267C0 STP X20, X19, [X31 + 0x10]
	0x036267C4 ADRP X19, 0xDBA000
	0x036267C8 ADRP X20, 0xB15000
	0x036267CC LDRB W8, [X19 + 0x4CB]
	0x036267D0 LDR X20, [X20 + 0x3B8]
	0x036267D4 TBNZ X8, 0x0, 0x36267EC
	0x036267D8 ADRP X0, 0xB15000
	0x036267DC LDR X0, [X0 + 0x3B8]
	0x036267E0 BL 0x1C16CF4
	0x036267E4 MOVZ W8, 0x1
	0x036267E8 STRB W8, [X19 + 0x4CB]
	0x036267EC LDR X0, [X20]
	0x036267F0 BL 0x1C16D9C
	0x036267F4 STR X30, [X31 - 0x20]!
	0x036267F8 STP X20, X19, [X31 + 0x10]
	0x036267FC ADRP X19, 0xDBA000
	0x03626800 ADRP X20, 0xB15000
	0x03626804 LDRB W8, [X19 + 0x4CC]
	0x03626808 LDR X20, [X20 + 0x3C0]
	0x0362680C TBNZ X8, 0x0, 0x3626824
	0x03626810 ADRP X0, 0xB15000
	0x03626814 LDR X0, [X0 + 0x3C0]
	0x03626818 BL 0x1C16CF4
	0x0362681C MOVZ W8, 0x1
	0x03626820 STRB W8, [X19 + 0x4CC]
	0x03626824 LDR X0, [X20]
	0x03626828 BL 0x1C16D9C
	0x0362682C STR X30, [X31 - 0x20]!
	0x03626830 STP X20, X19, [X31 + 0x10]
	0x03626834 ADRP X19, 0xDBA000
	0x03626838 ADRP X20, 0xB15000
	0x0362683C LDRB W8, [X19 + 0x4CD]
	0x03626840 LDR X20, [X20 + 0x3C8]
	0x03626844 TBNZ X8, 0x0, 0x362685C
	0x03626848 ADRP X0, 0xB15000
	0x0362684C LDR X0, [X0 + 0x3C8]
	0x03626850 BL 0x1C16CF4
	0x03626854 MOVZ W8, 0x1
	0x03626858 STRB W8, [X19 + 0x4CD]
	0x0362685C LDR X0, [X20]
	0x03626860 BL 0x1C16D9C
	0x03626864 STR X30, [X31 - 0x20]!
	0x03626868 STP X20, X19, [X31 + 0x10]
	0x0362686C ADRP X19, 0xDBA000
	0x03626870 ADRP X20, 0xB15000
	0x03626874 LDRB W8, [X19 + 0x4CE]
	0x03626878 LDR X20, [X20 + 0x3D0]
	0x0362687C TBNZ X8, 0x0, 0x3626894
	0x03626880 ADRP X0, 0xB15000
	0x03626884 LDR X0, [X0 + 0x3D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+72]
	006 Compare X0, 0
	007 JumpIfEqual {50}
	008 Compare X1, 0
	009 JumpIfEqual {16}
	010 Move X2, X31
	011 Call Delegate.op_Inequality, X0, X1
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X8, [X19+64]
	017 Compare X8, 0
	018 JumpIfEqual {62}
	019 Move X8, [X8+16]
	020 Move W9, [X19+96]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 And W31, W8, W9
	024 Move X0, 0xB16000
	025 Move X0, [X0+720]
	026 Call 0x1C17D08
	027 Move X19, X0
	028 Move X0, 0xB16000
	029 Move X0, [X0+728]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Move X2, X31
	034 Call SR.Format, X0, X1
	035 Move X19, X0
	036 Move X0, 0xACE000
	037 Move X0, [X0+1456]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X1, X19
	041 Move X2, X31
	042 Move X20, X0
	043 Call InvalidOperationException..ctor, X0, X1
	044 Move X0, 0xB16000
	045 Move X0, [X0+736]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X20
	049 Call 0x1C17DEC
	050 Move X20, [X19+64]
	051 Move [X19+72], X1
	052 Move X0, X1
	053 Move X1, X31
	054 Call CallbackHelpers.PublicToMono, X0
	055 Compare X20, 0
	056 JumpIfEqual {62}
	057 Move [X20+16], X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return 
	062 Call 0x1C17F20

Method: System.Void SetAndVerifySelectionCallback(System.Net.Security.LocalCertificateSelectionCallback callback)

Disassembly:
	0x03626888 BL 0x1C16CF4
	0x0362688C MOVZ W8, 0x1
	0x03626890 STRB W8, [X19 + 0x4CE]
	0x03626894 LDR X0, [X20]
	0x03626898 BL 0x1C16D9C
	0x0362689C STR X30, [X31 - 0x20]!
	0x036268A0 STP X20, X19, [X31 + 0x10]
	0x036268A4 ADRP X19, 0xDBA000
	0x036268A8 ADRP X20, 0xB15000
	0x036268AC LDRB W8, [X19 + 0x4CF]
	0x036268B0 LDR X20, [X20 + 0x3D8]
	0x036268B4 TBNZ X8, 0x0, 0x36268CC
	0x036268B8 ADRP X0, 0xB15000
	0x036268BC LDR X0, [X0 + 0x3D8]
	0x036268C0 BL 0x1C16CF4
	0x036268C4 MOVZ W8, 0x1
	0x036268C8 STRB W8, [X19 + 0x4CF]
	0x036268CC LDR X0, [X20]
	0x036268D0 BL 0x1C16D9C
	0x036268D4 STR X30, [X31 - 0x20]!
	0x036268D8 STP X20, X19, [X31 + 0x10]
	0x036268DC ADRP X19, 0xDBA000
	0x036268E0 ADRP X20, 0xB15000
	0x036268E4 LDRB W8, [X19 + 0x4D0]
	0x036268E8 LDR X20, [X20 + 0x3E0]
	0x036268EC TBNZ X8, 0x0, 0x3626904
	0x036268F0 ADRP X0, 0xB15000
	0x036268F4 LDR X0, [X0 + 0x3E0]
	0x036268F8 BL 0x1C16CF4
	0x036268FC MOVZ W8, 0x1
	0x03626900 STRB W8, [X19 + 0x4D0]
	0x03626904 LDR X0, [X20]
	0x03626908 BL 0x1C16D9C
	0x0362690C STR X30, [X31 - 0x20]!
	0x03626910 STP X20, X19, [X31 + 0x10]
	0x03626914 ADRP X19, 0xDBA000
	0x03626918 ADRP X20, 0xB15000
	0x0362691C LDRB W8, [X19 + 0x4D1]
	0x03626920 LDR X20, [X20 + 0x3E8]
	0x03626924 TBNZ X8, 0x0, 0x362693C
	0x03626928 ADRP X0, 0xB15000
	0x0362692C LDR X0, [X0 + 0x3E8]
	0x03626930 BL 0x1C16CF4
	0x03626934 MOVZ W8, 0x1
	0x03626938 STRB W8, [X19 + 0x4D1]
	0x0362693C LDR X0, [X20]
	0x03626940 BL 0x1C16D9C
	0x03626944 STR X30, [X31 - 0x20]!
	0x03626948 STP X20, X19, [X31 + 0x10]
	0x0362694C ADRP X19, 0xDBA000
	0x03626950 ADRP X20, 0xB15000
	0x03626954 LDRB W8, [X19 + 0x4D2]
	0x03626958 LDR X20, [X20 + 0x3F0]
	0x0362695C TBNZ X8, 0x0, 0x3626974
	0x03626960 ADRP X0, 0xB15000
	0x03626964 LDR X0, [X0 + 0x3F0]
	0x03626968 BL 0x1C16CF4
	0x0362696C MOVZ W8, 0x1
	0x03626970 STRB W8, [X19 + 0x4D2]
	0x03626974 LDR X0, [X20]
	0x03626978 BL 0x1C16D9C
	0x0362697C STR X30, [X31 - 0x20]!
	0x03626980 STP X20, X19, [X31 + 0x10]
	0x03626984 ADRP X19, 0xDBA000
	0x03626988 ADRP X20, 0xB15000
	0x0362698C LDRB W8, [X19 + 0x4D3]
	0x03626990 LDR X20, [X20 + 0x3F8]
	0x03626994 TBNZ X8, 0x0, 0x36269AC
	0x03626998 ADRP X0, 0xB15000
	0x0362699C LDR X0, [X0 + 0x3F8]
	0x036269A0 BL 0x1C16CF4
	0x036269A4 MOVZ W8, 0x1
	0x036269A8 STRB W8, [X19 + 0x4D3]
	0x036269AC LDR X0, [X20]
	0x036269B0 BL 0x1C16D9C
	0x036269B4 STR X30, [X31 - 0x20]!
	0x036269B8 STP X20, X19, [X31 + 0x10]
	0x036269BC ADRP X19, 0xDBA000
	0x036269C0 ADRP X20, 0xB15000
	0x036269C4 LDRB W8, [X19 + 0x4D4]
	0x036269C8 LDR X20, [X20 + 0x400]
	0x036269CC TBNZ X8, 0x0, 0x36269E4
	0x036269D0 ADRP X0, 0xB15000
	0x036269D4 LDR X0, [X0 + 0x400]
	0x036269D8 BL 0x1C16CF4
	0x036269DC MOVZ W8, 0x1
	0x036269E0 STRB W8, [X19 + 0x4D4]
	0x036269E4 LDR X0, [X20]
	0x036269E8 BL 0x1C16D9C
	0x036269EC STP X30, X19, [X31 - 0x10]!
	0x036269F0 ADRP X0, 0xAF8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDBB000
	007 Move X22, 0xB16000
	008 Move W8, [X21+1206]
	009 Move X22, [X22+744]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xB15000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0xB16000
	020 Move X0, [X0+752]
	021 Call 0x1C17CF4
	022 Move X0, 0xB16000
	023 Move X0, [X0+744]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1206], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call Object..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {110}
	034 Move [X21+16], X20
	035 Move [X21+24], X19
	036 Move X0, [X19+80]
	037 Compare X0, 0
	038 JumpIfEqual {83}
	039 Compare X20, 0
	040 JumpIfEqual {48}
	041 Move X1, X20
	042 Move X2, X31
	043 Call Delegate.op_Inequality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {57}
	048 Move W8, [X19+96]
	049 Compare W8, 0
	050 JumpIfEqual {104}
	051 Move X8, [X19+64]
	052 Compare X8, 0
	053 JumpIfEqual {110}
	054 Move X8, [X8+24]
	055 Compare X8, 0
	056 JumpIfEqual {104}
	057 Move X0, 0xB16000
	058 Move X0, [X0+720]
	059 Call 0x1C17D08
	060 Move X19, X0
	061 Move X0, 0xB16000
	062 Move X0, [X0+760]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call SR.Format, X0, X1
	068 Move X19, X0
	069 Move X0, 0xACE000
	070 Move X0, [X0+1456]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X1, X19
	074 Move X2, X31
	075 Move X20, X0
	076 Call InvalidOperationException..ctor, X0, X1
	077 Move X0, 0xB16000
	078 Move X0, [X0+768]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X20
	082 Call 0x1C17DEC
	083 Move X22, [X19+64]
	084 Move [X19+80], X20
	085 Compare X20, 0
	086 JumpIfEqual {101}
	087 Move X8, 0xB15000
	088 Move X8, [X8+368]
	089 Move X0, [X8]
	090 Call 0x1C17F10
	091 Move X8, 0xB16000
	092 Move X8, [X8+752]
	093 Move X1, X21
	094 Move X3, X31
	095 Move X19, X0
	096 Move X2, [X8]
	097 Call MonoLocalCertificateSelectionCallback..ctor, X0, X1, X2
	098 Compare X22, 0
	099 JumpIfEqual {110}
	100 Move [X22+24], X19
	101 Compare X22, 0
	102 JumpIfEqual {110}
	103 Move [X22+24], X31
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Return 
	110 Call 0x1C17F20

Method: System.Void AuthenticateAsClient(System.String targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, System.Boolean checkCertificateRevocation)

Disassembly:
	0x03626B24 CMP W1, 0x2
	0x03626B28 B.LS 0x3626BD0
	0x03626B2C LDRH W8, [X0 + 0x4]
	0x03626B30 CBNZ W8, 0x3626B44
	0x03626B34 CMP W1, 0x3
	0x03626B38 B.LS 0x3626BD0
	0x03626B3C LDRH W8, [X0 + 0x6]
	0x03626B40 CBZ W8, 0x3626B80
	0x03626B44 CMP W1, 0x4
	0x03626B48 B.LS 0x3626BD0
	0x03626B4C LDRH W8, [X0 + 0x8]
	0x03626B50 CBZ W8, 0x3626B5C
	0x03626B54 MOV W8, W31
	0x03626B58 B 0x3626B74
	0x03626B5C CMP W1, 0x5
	0x03626B60 B.LS 0x3626BD0
	0x03626B64 LDRH W8, [X0 + 0xA]
	0x03626B68 MOVZ W9, 0x5EFE
	0x03626B6C CMP W8, W9
	0x03626B70 CSET W8, EQ
	0x03626B74 MOV W0, W8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W22, W4
	008 Move W19, W3
	009 Move X20, X2
	010 Move X21, X1
	011 Move X23, X0
	012 Call SslStream.CheckDisposed, X0
	013 Move X0, [X23+88]
	014 Compare X0, 0
	015 JumpIfEqual {29}
	016 And W4, W22, 1
	017 Move X1, X21
	018 Move X2, X20
	019 Move W3, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X5, X31
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]
	027 Call MobileAuthenticatedStream.AuthenticateAsClient, X0, X1, X2, X3, X4
	028 Return 
	029 Call 0x1C17F20

Method: System.IAsyncResult BeginAuthenticateAsClient(System.String targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, System.Boolean checkCertificateRevocation, System.AsyncCallback asyncCallback, System.Object asyncState)

Disassembly:
	0x03626B78 LDR X30, [X31], #0x10
	0x03626B7C RET
	0x03626B80 CMP W1, 0x6
	0x03626B84 B.LS 0x3626BD0
	0x03626B88 LDRH W8, [X0 + 0xC]
	0x03626B8C CBZ W8, 0x3626B4C
	0x03626B90 LDRH W8, [X0 + 0x8]
	0x03626B94 MOVZ W9, 0xFFFF
	0x03626B98 CMP W8, W9
	0x03626B9C B.EQ 0x3626BC0
	0x03626BA0 CBNZ W8, 0x3626B4C
	0x03626BA4 LDRH W9, [X0 + 0xA]
	0x03626BA8 MOVZ W8, 0x1
	0x03626BAC CBZ W9, 0x3626B74
	0x03626BB0 MOVZ W10, 0xFFFF
	0x03626BB4 CMP W9, W10
	0x03626BB8 B.EQ 0x3626B74
	0x03626BBC B 0x3626B4C
	0x03626BC0 LDRH W8, [X0 + 0xA]
	0x03626BC4 CBNZ W8, 0x3626B4C
	0x03626BC8 MOVZ W8, 0x1
	0x03626BCC B 0x3626B74
	0x03626BD0 BL 0x1C16F28
	0x03626BD4 SUB X31, X31, 0x70
	0x03626BD8 STP X29, X30, [X31 + 0x10]
	0x03626BDC STP X28, X27, [X31 + 0x20]
	0x03626BE0 STP X26, X25, [X31 + 0x30]
	0x03626BE4 STP X24, X23, [X31 + 0x40]
	0x03626BE8 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, X6
	010 Move X20, X5
	011 Move W24, W4
	012 Move W21, W3
	013 Move X22, X2
	014 Move X23, X1
	015 Move X25, X0
	016 Call SslStream.CheckDisposed, X0
	017 Move X0, [X25+88]
	018 Compare X0, 0
	019 JumpIfEqual {39}
	020 And W4, W24, 1
	021 Move X1, X23
	022 Move X2, X22
	023 Move W3, W21
	024 Move X5, X31
	025 Call MobileAuthenticatedStream.AuthenticateAsClientAsync, X0, X1, X2, X3, X4
	026 Move X1, X20
	027 Move X2, X19
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X22, [X31+32]
	031 Move X21, [X31+40]
	032 Move X24, [X31+16]
	033 Move X23, [X31+24]
	034 Move X3, X31
	035 Move X30, [X31+64]
	036 Move X25, [X31+72]
	037 Call TaskToApm.Begin, X0, X1, X2
	038 Return X0
	039 Call 0x1C17F20

Method: System.Void EndAuthenticateAsClient(System.IAsyncResult asyncResult)

Disassembly:
	0x03626BEC STP X20, X19, [X31 + 0x60]
	0x03626BF0 ADRP X21, 0xDBA000
	0x03626BF4 LDRB W8, [X21 + 0x4D6]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call TaskToApm.End, X0
	004 Return 

Method: System.Void AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, System.Boolean clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, System.Boolean checkCertificateRevocation)

Disassembly:
	0x03626BF8 MOV X19, X2
	0x03626BFC MOV W22, W1
	0x03626C00 MOV X20, X0
	0x03626C04 TBNZ X8, 0x0, 0x3626C1C
	0x03626C08 ADRP X0, 0xACF000
	0x03626C0C LDR X0, [X0 + 0xA28]
	0x03626C10 BL 0x1C16CF4
	0x03626C14 MOVZ W8, 0x1
	0x03626C18 STRB W8, [X21 + 0x4D6]
	0x03626C1C LDR W8, [X19]
	0x03626C20 CMP W8, W22
	0x03626C24 B.LE 0x3626C3C
	0x03626C28 LDRH W9, [X20, W22, SXTW]
	0x03626C2C CMP W9, 0x5B
	0x03626C30 CSET W28, EQ
	0x03626C34 CINC W22, W22, EQ
	0x03626C38 B 0x3626C40
	0x03626C3C MOV W28, W31
	0x03626C40 CMP W22, W8
	0x03626C44 STR W22, [X31 + 0xC]
	0x03626C48 B.GE 0x3626EC0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W21, W4
	008 Move W19, W3
	009 Move W22, W2
	010 Move X20, X1
	011 Move X23, X0
	012 Call SslStream.CheckDisposed, X0
	013 Move X0, [X23+88]
	014 Compare X0, 0
	015 JumpIfEqual {29}
	016 And W2, W22, 1
	017 And W4, W21, 1
	018 Move X1, X20
	019 Move W3, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X5, X31
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]
	027 Call MobileAuthenticatedStream.AuthenticateAsServer, X0, X1, X2, X3, X4
	028 Return 
	029 Call 0x1C17F20

Method: System.Threading.Tasks.Task AuthenticateAsClientAsync(System.String targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, System.Boolean checkCertificateRevocation)

Disassembly:
	0x03626C4C ADRP X25, 0xACF000
	0x03626C50 LDR X25, [X25 + 0xA28]
	0x03626C54 MOV W23, W31
	0x03626C58 MOV W29, W31
	0x03626C5C MOV W24, W31
	0x03626C60 MOV W27, W31
	0x03626C64 MOVZ W26, 0x1
	0x03626C68 MOVZ W21, 0x1
	0x03626C6C LDR X0, [X25]
	0x03626C70 LDRH W22, [X20, W22, SXTW]
	0x03626C74 LDR W8, [X0 + 0xE0]
	0x03626C78 CBNZ W8, 0x3626C80
	0x03626C7C BL 0x1C16DFC
	0x03626C80 MOV W0, W22
	0x03626C84 MOV X1, X31
	0x03626C88 BL 0x361D6E8
	0x03626C8C TBZ X0, 0x0, 0x3626CB4
	0x03626C90 LDR W8, [X31 + 0xC]
	0x03626C94 MOV W26, W31
	0x03626C98 ADD W29, W29, 0x1
	0x03626C9C ADD W22, W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W22, W4
	008 Move W19, W3
	009 Move X20, X2
	010 Move X21, X1
	011 Move X23, X0
	012 Call SslStream.CheckDisposed, X0
	013 Move X0, [X23+88]
	014 Compare X0, 0
	015 JumpIfEqual {29}
	016 And W4, W22, 1
	017 Move X1, X21
	018 Move X2, X20
	019 Move W3, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X5, X31
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]
	027 Call MobileAuthenticatedStream.AuthenticateAsClientAsync, X0, X1, X2, X3, X4
	028 Return X0
	029 Call 0x1C17F20

Method: System.Boolean get_IsAuthenticated()

Disassembly:
	0x03626CA0 STR W22, [X31 + 0xC]
	0x03626CA4 LDR W8, [X19]
	0x03626CA8 CMP W22, W8
	0x03626CAC B.LT 0x3626C6C
	0x03626CB0 B 0x3626EA4
	0x03626CB4 CMP W29, 0x4
	0x03626CB8 B.GT 0x3626EC0
	0x03626CBC LDRSW X8, [X31 + 0xC]
	0x03626CC0 CMP W29, 0x0
	0x03626CC4 CINC W23, W23, NE
	0x03626CC8 LDRH W9, [X20, X8, LSL #1]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SslStream.CheckDisposed, X0
	005 Move X0, [X19+88]
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X8, [X0]
	009 Move X2, [X8+952]
	010 Move X1, [X8+960]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X2
	014 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Certificate get_LocalCertificate()

Disassembly:
	0x03626CCC SUB W10, W8, W29
	0x03626CD0 CSEL W21, W21, W10, EQ
	0x03626CD4 CMP W9, 0x2E
	0x03626CD8 B.HI 0x3626D1C
	0x03626CDC CMP W9, 0x25
	0x03626CE0 B.NE 0x3626E08
	0x03626CE4 LDR W9, [X19]
	0x03626CE8 ADD W10, W8, 0x1
	0x03626CEC ADD X10, X20, W10, 0x1, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SslStream.CheckDisposed, X0
	005 Move X0, [X19+88]
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call MobileAuthenticatedStream.get_LocalCertificate, X0
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean get_CanSeek()

Disassembly:
	0x03626CF0 ADD W11, W8, 0x1
	0x03626CF4 CMP W11, W9

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanRead()

Disassembly:
	0x03626CF8 B.GE 0x3626DC4
	0x03626CFC LDRH W8, [X10], #0x2
	0x03626D00 CMP W8, 0x2F
	0x03626D04 B.EQ 0x3626EC0
	0x03626D08 CMP W8, 0x5D
	0x03626D0C MOV W8, W11

ISIL:
	001 Move X0, [X0+88]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+424]
	006 Move X1, [X8+432]
	007 CallNoReturn X2
	008 Return X0

Method: System.Boolean get_CanTimeout()

Disassembly:
	0x03626D10 B.NE 0x3626CF0
	0x03626D14 MOV W8, W11
	0x03626D18 B 0x3626D2C
	0x03626D1C CMP W9, 0x3A
	0x03626D20 B.EQ 0x3626E60
	0x03626D24 CMP W9, 0x5D
	0x03626D28 B.NE 0x3626EC0
	0x03626D2C TBZ X28, 0x0, 0x3626EC0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+456]
	007 Move X1, [X8+464]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean get_CanWrite()

Disassembly:
	0x03626D30 LDR W9, [X19]
	0x03626D34 ADD W10, W8, 0x1
	0x03626D38 CMP W10, W9
	0x03626D3C B.GE 0x3626D4C
	0x03626D40 LDRH W10, [X20, W10, SXTW]
	0x03626D44 CMP W10, 0x3A

ISIL:
	001 Move X0, [X0+88]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+472]
	006 Move X1, [X8+480]
	007 CallNoReturn X2
	008 Return X0

Method: System.Int32 get_ReadTimeout()

Disassembly:
	0x03626D48 B.NE 0x3626EC0
	0x03626D4C ADD W11, W8, 0x3
	0x03626D50 CMP W11, W9
	0x03626D54 ADD W10, W8, 0x2
	0x03626D58 B.GE 0x3626DCC
	0x03626D5C LDRH W12, [X20, W10, SXTW]
	0x03626D60 CMP W12, 0x30
	0x03626D64 B.NE 0x3626DCC
	0x03626D68 LDRH W11, [X20, W11, SXTW]
	0x03626D6C CMP W11, 0x78
	0x03626D70 B.NE 0x3626DCC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SslStream.CheckDisposed, X0
	005 Move X0, [X19+88]
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X8, [X0]
	009 Move X2, [X8+536]
	010 Move X1, [X8+544]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X2
	014 Call 0x1C17F20

Method: System.Void set_ReadTimeout(System.Int32 value)

Disassembly:
	0x03626D74 ADD W8, W8, 0x4
	0x03626D78 CMP W8, W9
	0x03626D7C STR W8, [X31 + 0xC]
	0x03626D80 B.GE 0x3626DC0
	0x03626D84 LDR X0, [X25]
	0x03626D88 LDRH W22, [X20, W8, SXTW]
	0x03626D8C LDR W9, [X0 + 0xE0]
	0x03626D90 CBNZ W9, 0x3626D98
	0x03626D94 BL 0x1C16DFC
	0x03626D98 MOV W0, W22
	0x03626D9C MOV X1, X31
	0x03626DA0 BL 0x361D6E8
	0x03626DA4 TBZ X0, 0x0, 0x3626EC0
	0x03626DA8 LDR W8, [X31 + 0xC]
	0x03626DAC ADD W8, W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call SslStream.CheckDisposed, X0
	007 Move X0, [X20+88]
	008 Compare X0, 0
	009 JumpIfEqual {18}
	010 Move X8, [X0]
	011 Move W1, W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X3, [X8+552]
	015 Move X2, [X8+560]
	016 Move X30, [X31+32]
	017 CallNoReturn X3
	018 Call 0x1C17F20

Method: System.Int32 get_WriteTimeout()

Disassembly:
	0x03626DB0 STR W8, [X31 + 0xC]
	0x03626DB4 LDR W9, [X19]
	0x03626DB8 CMP W8, W9
	0x03626DBC B.LT 0x3626D84
	0x03626DC0 MOV W28, W31
	0x03626DC4 MOV W29, W31
	0x03626DC8 B 0x3626C9C
	0x03626DCC CMP W10, W9
	0x03626DD0 B.GE 0x3626E94
	0x03626DD4 ADD X8, X20, W10, 0x1, SXTW
	0x03626DD8 LDRH W11, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SslStream.CheckDisposed, X0
	005 Move X0, [X19+88]
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X8, [X0]
	009 Move X2, [X8+568]
	010 Move X1, [X8+576]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X2
	014 Call 0x1C17F20

Method: System.Void set_WriteTimeout(System.Int32 value)

Disassembly:
	0x03626DDC SUB W11, W11, 0x30
	0x03626DE0 CMP W11, 0x9
	0x03626DE4 B.HI 0x3626EC0
	0x03626DE8 ADD W10, W10, 0x1
	0x03626DEC CMP W9, W10
	0x03626DF0 ADD X8, X8, 0x2
	0x03626DF4 B.NE 0x3626DD8
	0x03626DF8 MOV W28, W31
	0x03626DFC MOV W29, W31
	0x03626E00 MOV W8, W9
	0x03626E04 B 0x3626C9C
	0x03626E08 CMP W9, 0x2E
	0x03626E0C MOV W0, W31
	0x03626E10 B.NE 0x3626EC4
	0x03626E14 EOR W8, W27, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call SslStream.CheckDisposed, X0
	007 Move X0, [X20+88]
	008 Compare X0, 0
	009 JumpIfEqual {18}
	010 Move X8, [X0]
	011 Move W1, W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X3, [X8+584]
	015 Move X2, [X8+592]
	016 Move X30, [X31+32]
	017 CallNoReturn X3
	018 Call 0x1C17F20

Method: System.Int64 get_Length()

Disassembly:
	0x03626E18 TBZ X8, 0x0, 0x3626EC4
	0x03626E1C LDR W8, [X19]
	0x03626E20 ADD X2, X31, 0xC
	0x03626E24 MOVZ W3, 0x1
	0x03626E28 MOV X0, X20
	0x03626E2C MOV W1, W21
	0x03626E30 MOV W4, W31
	0x03626E34 MOV W5, W31
	0x03626E38 MOV X6, X31
	0x03626E3C STR W8, [X31 + 0xC]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SslStream.CheckDisposed, X0
	005 Move X0, [X19+88]
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X8, [X0]
	009 Move X2, [X8+488]
	010 Move X1, [X8+496]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X2
	014 Call 0x1C17F20

Method: System.Int64 get_Position()

Disassembly:
	0x03626E40 BL 0x35F4744
	0x03626E44 TBZ X0, 0x0, 0x3626EC0
	0x03626E48 LDR W21, [X31 + 0xC]
	0x03626E4C MOV W29, W31
	0x03626E50 ADD W23, W23, 0x1
	0x03626E54 MOVZ W27, 0x1
	0x03626E58 SUB W8, W21, 0x1
	0x03626E5C B 0x3626C9C
	0x03626E60 SUBS W9, W8, 0x1
	0x03626E64 B.LT 0x3626E88

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SslStream.CheckDisposed, X0
	005 Move X0, [X19+88]
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X8, [X0]
	009 Move X2, [X8+504]
	010 Move X1, [X8+512]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X2
	014 Call 0x1C17F20

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x03626E68 LDRH W9, [X20, W9, SXTW]
	0x03626E6C CMP W9, 0x3A
	0x03626E70 B.NE 0x3626E88
	0x03626E74 TBNZ X24, 0x0, 0x3626EC0
	0x03626E78 MOV W26, W31
	0x03626E7C MOV W29, W31
	0x03626E80 MOVZ W24, 0x1
	0x03626E84 B 0x3626C9C
	0x03626E88 MOV W29, W31
	0x03626E8C MOVZ W26, 0x1
	0x03626E90 B 0x3626C9C
	0x03626E94 MOV W28, W31
	0x03626E98 MOV W29, W31
	0x03626E9C MOV W8, W10
	0x03626EA0 B 0x3626C9C
	0x03626EA4 CBZ W29, 0x3626EBC
	0x03626EA8 CMP W29, 0x4
	0x03626EAC B.GT 0x3626EC0
	0x03626EB0 TBNZ X26, 0x0, 0x3626EC0
	0x03626EB4 ADD W23, W23, 0x1
	0x03626EB8 B 0x3626EE4
	0x03626EBC TBZ X26, 0x0, 0x3626EE4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xB16000
	005 Move X0, [X0+776]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call SR.GetString, X0
	009 Move X19, X0
	010 Move X0, 0xACE000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xB16000
	019 Move X0, [X0+784]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x03626EC0 MOV W0, W31
	0x03626EC4 LDP X20, X19, [X31 + 0x60]
	0x03626EC8 LDP X22, X21, [X31 + 0x50]
	0x03626ECC LDP X24, X23, [X31 + 0x40]
	0x03626ED0 LDP X26, X25, [X31 + 0x30]
	0x03626ED4 LDP X28, X27, [X31 + 0x20]
	0x03626ED8 LDP X29, X30, [X31 + 0x10]
	0x03626EDC ADD X31, X31, 0x70
	0x03626EE0 RET
	0x03626EE4 CMP W23, 0x8
	0x03626EE8 CSET W8, LT
	0x03626EEC CSET W9, EQ
	0x03626EF0 ANDS W31, W24, 0x1
	0x03626EF4 CSEL W8, W8, W9, NE
	0x03626EF8 EOR W9, W28, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call SslStream.CheckDisposed, X0
	007 Move X0, [X20+88]
	008 Compare X0, 0
	009 JumpIfEqual {18}
	010 Move X8, [X0]
	011 Move X1, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X3, [X8+840]
	015 Move X2, [X8+848]
	016 Move X30, [X31+32]
	017 CallNoReturn X3
	018 Call 0x1C17F20

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x03626EFC AND W0, W8, W9, 0x0
	0x03626F00 B 0x3626EC4
	0x03626F04 SUB X31, X31, 0x90
	0x03626F08 STP X29, X30, [X31 + 0x30]
	0x03626F0C STP X28, X27, [X31 + 0x40]
	0x03626F10 STP X26, X25, [X31 + 0x50]
	0x03626F14 STP X24, X23, [X31 + 0x60]
	0x03626F18 STP X22, X21, [X31 + 0x70]
	0x03626F1C STP X20, X19, [X31 + 0x80]
	0x03626F20 ADRP X20, 0xDBA000
	0x03626F24 LDRB W8, [X20 + 0x4D7]
	0x03626F28 MOV W23, W3
	0x03626F2C MOV X19, X2
	0x03626F30 MOV X21, X1
	0x03626F34 MOV X22, X0
	0x03626F38 STR X4, [X31]
	0x03626F3C TBNZ X8, 0x0, 0x3626F6C
	0x03626F40 ADRP X0, 0xB00000
	0x03626F44 LDR X0, [X0 + 0xD90]
	0x03626F48 BL 0x1C16CF4
	0x03626F4C ADRP X0, 0xAFC000
	0x03626F50 LDR X0, [X0 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xB16000
	005 Move X0, [X0+776]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call SR.GetString, X0
	009 Move X19, X0
	010 Move X0, 0xACE000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xB16000
	019 Move X0, [X0+792]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Threading.Tasks.Task FlushAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x03626F54 BL 0x1C16CF4
	0x03626F58 ADRP X0, 0xACF000
	0x03626F5C LDR X0, [X0 + 0xA28]
	0x03626F60 BL 0x1C16CF4
	0x03626F64 MOVZ W8, 0x1
	0x03626F68 STRB W8, [X20 + 0x4D7]
	0x03626F6C CMP W21, W23
	0x03626F70 STR X19, [X31 + 0x18]
	0x03626F74 B.LS 0x36273A8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+680]
	007 Move X2, [X8+688]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Flush()

Disassembly:
	0x03626F78 LDRH W8, [X22, W23, SXTW]
	0x03626F7C MOV W9, W21
	0x03626F80 SXTW X9, W9
	0x03626F84 STR X9, [X31 + 0x20]
	0x03626F88 MOVN W9, 0x0
	0x03626F8C CMP W8, 0x5B
	0x03626F90 MOVZ W8, 0x1
	0x03626F94 MOV W19, W31
	0x03626F98 MOV W26, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+664]
	007 Move X1, [X8+672]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void CheckDisposed()

Disassembly:
	0x036265A8 ADRP X0, 0xB15000
	0x036265AC LDR X0, [X0 + 0x368]
	0x036265B0 BL 0x1C16CF4
	0x036265B4 MOVZ W8, 0x1
	0x036265B8 STRB W8, [X19 + 0x4C1]
	0x036265BC LDR X0, [X20]
	0x036265C0 BL 0x1C16D9C
	0x036265C4 STR X30, [X31 - 0x20]!
	0x036265C8 STP X20, X19, [X31 + 0x10]
	0x036265CC ADRP X19, 0xDBA000
	0x036265D0 ADRP X20, 0xB15000
	0x036265D4 LDRB W8, [X19 + 0x4C2]
	0x036265D8 LDR X20, [X20 + 0x370]
	0x036265DC TBNZ X8, 0x0, 0x36265F4
	0x036265E0 ADRP X0, 0xB15000
	0x036265E4 LDR X0, [X0 + 0x370]
	0x036265E8 BL 0x1C16CF4
	0x036265EC MOVZ W8, 0x1
	0x036265F0 STRB W8, [X19 + 0x4C2]
	0x036265F4 LDR X0, [X20]
	0x036265F8 BL 0x1C16D9C
	0x036265FC STR X30, [X31 - 0x20]!
	0x03626600 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+88]
	004 Compare X8, 0
	005 JumpIfEqual {9}
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X0, 0xAF7000
	010 Move X0, [X0+1208]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0xB16000
	015 Move X0, [X0+704]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Move X2, X31
	020 Call ObjectDisposedException..ctor, X0, X1
	021 Move X0, 0xB16000
	022 Move X0, [X0+712]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call 0x1C17DEC

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03626F9C STR W9, [X31 + 0xC]
	0x03626FA0 CINC W23, W23, EQ
	0x03626FA4 STR W8, [X31 + 0x2C]
	0x03626FA8 STR X22, [X31 + 0x10]
	0x03626FAC MOV W29, W19
	0x03626FB0 CMP W23, W21
	0x03626FB4 MOV W19, W29
	0x03626FB8 B.GE 0x3627320
	0x03626FBC LDR X8, [X31 + 0x20]
	0x03626FC0 ADD X20, X22, W23, 0x1, SXTW
	0x03626FC4 MOV W28, W23
	0x03626FC8 MOV X25, X31
	0x03626FCC MOV W27, W23
	0x03626FD0 SUB X22, X8, W23, SXTW
	0x03626FD4 ADD W29, W23, 0x1
	0x03626FD8 MOV X24, X20
	0x03626FDC ADD W8, W27, W25
	0x03626FE0 CMP W21, W8
	0x03626FE4 B.LS 0x36273A8
	0x03626FE8 LDRH W23, [X20, X25, LSL #1]
	0x03626FEC CMP W23, 0x39
	0x03626FF0 B.GT 0x3627008
	0x03626FF4 CMP W23, 0x25
	0x03626FF8 B.EQ 0x3627128
	0x03626FFC CMP W23, 0x2F
	0x03627000 B.NE 0x3627018
	0x03627004 B 0x3627188
	0x03627008 CMP W23, 0x3A
	0x0362700C B.EQ 0x3627058
	0x03627010 CMP W23, 0x5D
	0x03627014 B.EQ 0x3627320
	0x03627018 ADRP X8, 0xACE000
	0x0362701C LDR X8, [X8 + 0xA28]
	0x03627020 LDR X0, [X8]
	0x03627024 LDR W8, [X0 + 0xE0]
	0x03627028 CBNZ W8, 0x3627030
	0x0362702C BL 0x1C16DFC
	0x03627030 MOV W0, W23
	0x03627034 MOV X1, X31
	0x03627038 BL 0x361D724
	0x0362703C ADD X25, X25, 0x1
	0x03627040 ADD W26, W0, W26, 0x4, LSL
	0x03627044 ADD X24, X24, 0x2
	0x03627048 CMP X22, X25
	0x0362704C ADD W29, W29, 0x1
	0x03627050 B.NE 0x3626FDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+88]
	007 Move W20, W1
	008 Compare X0, 0
	009 JumpIfEqual {17}
	010 Move TEMP, X20
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {17}
	014 Move X1, X31
	015 Call Stream.Dispose, X0
	016 Move [X19+88], X31
	017 And W1, W20, 1
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X2, X31
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Call AuthenticatedStream.Dispose, X0, X1
	025 Return 
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X21, X0
	028 Move X0, X21
	029 Call 0x3EB2AD0
	030 Move X20, [X0]
	031 Call 0x3EB2AE0
	032 Move W1, 1
	033 Move X0, X19
	034 Move X2, X31
	035 Call AuthenticatedStream.Dispose, X0, X1
	036 Compare X20, 0
	037 JumpIfNotEqual {44}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Move X20, X31
	044 Move X0, X20
	045 Call 0x1C17F18
	046 Move X21, X0
	047 Move W1, 1
	048 Move X0, X19
	049 Move X2, X31
	050 Call AuthenticatedStream.Dispose, X0, X1
	051 Compare X20, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X21
	054 Call 0x1D2D690
	055 Move X0, X20
	056 Call 0x1C17F18
	057 Call 0x1991590

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03627054 B 0x3627320
	0x03627058 ADD X8, X25, W28, UXTW
	0x0362705C ADD X23, X8, 0x1
	0x03627060 LDR X8, [X31 + 0x18]
	0x03627064 CMP W23, W21
	0x03627068 STRH W26, [X8, W19, SXTW]
	0x0362706C B.CS 0x36273A8
	0x03627070 LDR X22, [X31 + 0x10]
	0x03627074 ADD W29, W19, 0x1
	0x03627078 LDRH W8, [X22, W23, SXTW]
	0x0362707C CMP W8, 0x3A
	0x03627080 B.EQ 0x36270A4
	0x03627084 LDR W8, [X31 + 0xC]
	0x03627088 TBZ X8, 0x1F, 0x3627098
	0x0362708C CMP W29, 0x6
	0x03627090 MOV W26, W31
	0x03627094 B.LT 0x3626FB0
	0x03627098 ADD W8, W28, W25
	0x0362709C ADD W23, W8, 0x1
	0x036270A0 B 0x36270B0
	0x036270A4 ADD W8, W28, W25

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W3
	007 Move W20, W2
	008 Move X21, X1
	009 Move X22, X0
	010 Call SslStream.CheckDisposed, X0
	011 Move X0, [X22+88]
	012 Compare X0, 0
	013 JumpIfEqual {26}
	014 Move X8, [X0]
	015 Move X1, X21
	016 Move W2, W20
	017 Move W3, W19
	018 Move X5, [X8+856]
	019 Move X4, [X8+864]
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 CallNoReturn X5
	026 Call 0x1C17F20

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x036270A8 ADD W23, W8, 0x2
	0x036270AC STR W29, [X31 + 0xC]
	0x036270B0 CMP W23, W21
	0x036270B4 MOV W26, W31
	0x036270B8 B.GE 0x3626FB0
	0x036270BC ADD W9, W23, 0x4
	0x036270C0 MOVZ X13, 0x401
	0x036270C4 CSEL W8, W23, W21, HI
	0x036270C8 CMP W23, W9
	0x036270CC MOVK X13, 0x200000
	0x036270D0 CSEL W9, W23, W9, GT
	0x036270D4 MOV W24, W23
	0x036270D8 MOVZ W12, 0x1
	0x036270DC MOVK X13, 0x1000000
	0x036270E0 CMP W8, W24
	0x036270E4 B.EQ 0x36273A8
	0x036270E8 LDRH W10, [X22, W24, SXTW]
	0x036270EC SUB W11, W10, 0x25
	0x036270F0 CMP W11, 0x38
	0x036270F4 B.HI 0x3627104
	0x036270F8 LSLV X11, X12, X11

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W3
	007 Move W20, W2
	008 Move X21, X1
	009 Move X22, X0
	010 Call SslStream.CheckDisposed, X0
	011 Move X0, [X22+88]
	012 Compare X0, 0
	013 JumpIfEqual {26}
	014 Move X8, [X0]
	015 Move X1, X21
	016 Move W2, W20
	017 Move W3, W19
	018 Move X5, [X8+904]
	019 Move X4, [X8+912]
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 CallNoReturn X5
	026 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036270FC ANDS X31, X11, X13, 0x0
	0x03627100 B.NE 0x3627120
	0x03627104 CMP W9, W24
	0x03627108 B.EQ 0x3627120
	0x0362710C CMP W10, 0x2E
	0x03627110 B.EQ 0x3627288
	0x03627114 ADD W24, W24, 0x1
	0x03627118 CMP W21, W24
	0x0362711C B.NE 0x36270E0
	0x03627120 MOV W26, W31
	0x03627124 B 0x3626FB0
	0x03627128 LDR W8, [X31 + 0x2C]
	0x0362712C TBZ X8, 0x0, 0x3627140
	0x03627130 LDR X9, [X31 + 0x18]
	0x03627134 ADD W8, W19, 0x1
	0x03627138 STRH W26, [X9, W19, SXTW]
	0x0362713C MOV W19, W8
	0x03627140 LDR X11, [X31 + 0x10]
	0x03627144 ADD W9, W28, W25
	0x03627148 ADD W10, W9, 0x1
	0x0362714C ADD X8, X25, W28, UXTW
	0x03627150 CMP W10, W21
	0x03627154 CSINC W9, W21, W9, LE

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X4
	008 Move W20, W3
	009 Move W21, W2
	010 Move X22, X1
	011 Move X23, X0
	012 Call SslStream.CheckDisposed, X0
	013 Move X0, [X23+88]
	014 Compare X0, 0
	015 JumpIfEqual {30}
	016 Move X8, [X0]
	017 Move X1, X22
	018 Move W2, W21
	019 Move W3, W20
	020 Move X6, [X8+728]
	021 Move X5, [X8+736]
	022 Move X4, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Move X23, [X31+56]
	029 CallNoReturn X6
	030 Call 0x1C17F20

Method: System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x03627158 ADD X10, X11, W29, 0x1, SXTW
	0x0362715C MOV W23, W8
	0x03627160 ADD W23, W23, 0x1
	0x03627164 CMP W23, W21
	0x03627168 B.GE 0x36271D0
	0x0362716C B.CS 0x36273A8
	0x03627170 LDRH W11, [X10], #0x2
	0x03627174 CMP W11, 0x5D
	0x03627178 B.EQ 0x36271D4
	0x0362717C CMP W11, 0x2F
	0x03627180 B.NE 0x3627160
	0x03627184 B 0x36271D4
	0x03627188 LDR W8, [X31 + 0x2C]
	0x0362718C TBZ X8, 0x0, 0x36271A0
	0x03627190 LDR X9, [X31 + 0x18]
	0x03627194 ADD W8, W19, 0x1
	0x03627198 STRH W26, [X9, W19, SXTW]
	0x0362719C MOV W19, W8
	0x036271A0 LDR X22, [X31 + 0x10]
	0x036271A4 ADD X8, X25, W28, UXTW
	0x036271A8 ADD X23, X8, 0x1
	0x036271AC CMP W23, W21
	0x036271B0 B.CS 0x36273A8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X4
	008 Move W20, W3
	009 Move W21, W2
	010 Move X22, X1
	011 Move X23, X0
	012 Call SslStream.CheckDisposed, X0
	013 Move X0, [X23+88]
	014 Compare X0, 0
	015 JumpIfEqual {30}
	016 Move X8, [X0]
	017 Move X1, X22
	018 Move W2, W21
	019 Move W3, W20
	020 Move X6, [X8+792]
	021 Move X5, [X8+800]
	022 Move X4, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Move X23, [X31+56]
	029 CallNoReturn X6
	030 Call 0x1C17F20

Method: System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036271B4 LDRH W8, [X22, W23, SXTW]
	0x036271B8 CMP W8, 0x5D
	0x036271BC B.EQ 0x3627274
	0x036271C0 ADD W23, W23, 0x1
	0x036271C4 CMP W21, W23
	0x036271C8 B.NE 0x36271B4
	0x036271CC B 0x36273A8
	0x036271D0 MOV W23, W9
	0x036271D4 ADRP X10, 0xAFF000
	0x036271D8 LDR X10, [X10 + 0xD90]
	0x036271DC SUB W9, W31, W28
	0x036271E0 ADD X9, X9, W23, UXTW
	0x036271E4 CMP W21, W8
	0x036271E8 LDR X22, [X10]
	0x036271EC SUB X20, X9, X25
	0x036271F0 B.CC 0x3627204
	0x036271F4 SUB W8, W21, W28
	0x036271F8 SUB W8, W8, W25
	0x036271FC CMP W8, W20
	0x03627200 B.CS 0x362720C
	0x03627204 MOV X0, X31
	0x03627208 BL 0x339D6EC
	0x0362720C LDR X0, [X22 + 0x20]
	0x03627210 LDRB W8, [X0 + 0x135]
	0x03627214 TBNZ X8, 0x0, 0x362721C
	0x03627218 BL 0x1C5C684
	0x0362721C AND X2, X20, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X5
	009 Move X20, X4
	010 Move W21, W3
	011 Move W22, W2
	012 Move X23, X1
	013 Move X24, X0
	014 Call SslStream.CheckDisposed, X0
	015 Move X0, [X24+88]
	016 Compare X0, 0
	017 JumpIfEqual {35}
	018 Move X1, X23
	019 Move W2, W22
	020 Move W3, W21
	021 Move X4, X31
	022 Call Stream.ReadAsync, X0, X1, X2, X3
	023 Move X1, X20
	024 Move X2, X19
	025 Move X20, [X31+48]
	026 Move X19, [X31+56]
	027 Move X22, [X31+32]
	028 Move X21, [X31+40]
	029 Move X24, [X31+16]
	030 Move X23, [X31+24]
	031 Move X3, X31
	032 Move X30, [X31+64]
	033 Call TaskToApm.Begin, X0, X1, X2
	034 Return X0
	035 Call 0x1C17F20

Method: System.Int32 EndRead(System.IAsyncResult asyncResult)

Disassembly:
	0x03627220 MOV X0, X31
	0x03627224 MOV X1, X24
	0x03627228 MOV X3, X31
	0x0362722C BL 0x322EB14
	0x03627230 LDR X8, [X31]
	0x03627234 LDR X22, [X31 + 0x10]
	0x03627238 CMP W23, W21
	0x0362723C STR X0, [X8]
	0x03627240 B.GE 0x362727C
	0x03627244 CSEL W8, W23, W21, HI
	0x03627248 CMP W8, W23
	0x0362724C B.EQ 0x36273A8
	0x03627250 LDRH W9, [X22, W23, SXTW]
	0x03627254 CMP W9, 0x5D
	0x03627258 B.EQ 0x3627274
	0x0362725C ADD W23, W23, 0x1
	0x03627260 CMP W21, W23
	0x03627264 B.NE 0x3627248

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDBA000
	006 Move X21, 0xAFC000
	007 Move W8, [X20+1207]
	008 Move X21, [X21+3520]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAFC000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1207], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x229CB30, X0
	026 Return X0

Method: System.IAsyncResult BeginWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x03627268 STR W31, [X31 + 0x2C]
	0x0362726C MOV W23, W21
	0x03627270 B 0x3626FAC
	0x03627274 STR W31, [X31 + 0x2C]
	0x03627278 B 0x3626FAC
	0x0362727C MOV W23, W23
	0x03627280 STR W31, [X31 + 0x2C]
	0x03627284 B 0x3626FAC
	0x03627288 CMP W24, W21
	0x0362728C B.GE 0x36272E0
	0x03627290 LDR X10, [X31 + 0x20]
	0x03627294 SXTW X9, W24
	0x03627298 ADD X8, X22, X9, 0x1, LSL
	0x0362729C SUB X9, X10, X9
	0x036272A0 CMP W24, W21
	0x036272A4 B.CS 0x36273A8
	0x036272A8 LDRH W10, [X8]
	0x036272AC SUB W10, W10, 0x25
	0x036272B0 CMP W10, 0x38
	0x036272B4 B.HI 0x36272CC
	0x036272B8 MOVZ X11, 0x401
	0x036272BC LSLV X10, X12, X10
	0x036272C0 MOVK X11, 0x1000000
	0x036272C4 ANDS X31, X10, X11, 0x0
	0x036272C8 B.NE 0x36272E0
	0x036272CC ADD W24, W24, 0x1
	0x036272D0 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X5
	009 Move X20, X4
	010 Move W21, W3
	011 Move W22, W2
	012 Move X23, X1
	013 Move X24, X0
	014 Call SslStream.CheckDisposed, X0
	015 Move X0, [X24+88]
	016 Compare X0, 0
	017 JumpIfEqual {35}
	018 Move X1, X23
	019 Move W2, W22
	020 Move W3, W21
	021 Move X4, X31
	022 Call Stream.WriteAsync, X0, X1, X2, X3
	023 Move X1, X20
	024 Move X2, X19
	025 Move X20, [X31+48]
	026 Move X19, [X31+56]
	027 Move X22, [X31+32]
	028 Move X21, [X31+40]
	029 Move X24, [X31+16]
	030 Move X23, [X31+24]
	031 Move X3, X31
	032 Move X30, [X31+64]
	033 Call TaskToApm.Begin, X0, X1, X2
	034 Return X0
	035 Call 0x1C17F20

Method: System.Void EndWrite(System.IAsyncResult asyncResult)

Disassembly:
	0x036272D4 ADD X8, X8, 0x2
	0x036272D8 B.NE 0x36272A0
	0x036272DC MOV W24, W21

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call TaskToApm.End, X0
	004 Return 

