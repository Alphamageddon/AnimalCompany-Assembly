Type: System.Net.Security.CertificateHelper

Method: System.Security.Cryptography.X509Certificates.X509Certificate2 GetEligibleClientCertificate(System.Security.Cryptography.X509Certificates.X509CertificateCollection candidateCerts)

Disassembly:
	0x036DE754 MOV X1, X31
	0x036DE758 BL 0x3BE1EB4
	0x036DE75C LDR V0, [X19 + 0x40]
	0x036DE760 ADD X0, X31, 0x60
	0x036DE764 MOV X1, X31
	0x036DE768 SCVTF S0, S0
	0x036DE76C BL 0x3BE1EA0
	0x036DE770 LDRB W1, [X19 + 0x44]
	0x036DE774 ADD X0, X31, 0x60
	0x036DE778 MOV X2, X31
	0x036DE77C BL 0x3BE1EA8
	0x036DE780 LDR W1, [X19 + 0x48]
	0x036DE784 ADD X0, X31, 0x60
	0x036DE788 MOV X2, X31
	0x036DE78C BL 0x3BE1EBC
	0x036DE790 LDR W1, [X19 + 0x20]
	0x036DE794 ADD X0, X31, 0x60
	0x036DE798 MOV X2, X31
	0x036DE79C BL 0x3BE1EC4
	0x036DE7A0 LDP V0, V1, [X31 + 0x60]
	0x036DE7A4 LDUR V2, [X31 + 0x7C]
	0x036DE7A8 MOV X0, X19
	0x036DE7AC MOV X1, X31
	0x036DE7B0 STP V0, V1, [X31 + 0x30]
	0x036DE7B4 STUR V2, [X31 + 0x4C]
	0x036DE7B8 BL 0x3C32E90
	0x036DE7BC CBZ X0, 0x36DE8B4
	0x036DE7C0 MOV X1, X31
	0x036DE7C4 BL 0x3C3F58C
	0x036DE7C8 MOV X0, X19
	0x036DE7CC MOV X1, X31
	0x036DE7D0 MOV V8.16B, V0.16B
	0x036DE7D4 MOV V9.16B, V1.16B
	0x036DE7D8 MOV V10.16B, V2.16B
	0x036DE7DC BL 0x3C32E90
	0x036DE7E0 CBZ X0, 0x36DE8B4
	0x036DE7E4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD03000
	005 Move W8, [X20+2784]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA5F000
	012 Move X0, [X0+2800]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2784], W8
	016 Compare X19, 0
	017 JumpIfEqual {45}
	018 Move X0, X19
	019 Move X1, X31
	020 Call CollectionBase.get_Count, X0
	021 Compare W0, 0
	022 JumpIfEqual {40}
	023 Move X8, 0xA5F000
	024 Move X8, [X8+2800]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call X509Certificate2Collection..ctor, X0
	030 Compare X20, 0
	031 JumpIfEqual {45}
	032 Move X0, X20
	033 Move X1, X19
	034 Move X2, X31
	035 Call X509CertificateCollection.AddRange, X0, X1
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X0, X31
	043 Move X30, [X31+32]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Certificate2 GetEligibleClientCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2Collection candidateCerts)

Disassembly:
	0x036DE7E8 BL 0x3C3DEB4
	0x036DE7EC MOV V4.16B, V0.16B
	0x036DE7F0 MOV V5.16B, V1.16B
	0x036DE7F4 MOV V6.16B, V2.16B
	0x036DE7F8 LDP V0, V1, [X31 + 0x30]
	0x036DE7FC LDUR V2, [X31 + 0x4C]
	0x036DE800 MOV V7.16B, V3.16B
	0x036DE804 ADD X0, X31, 0x0
	0x036DE808 STP V0, V1, [X31]
	0x036DE80C STUR V2, [X31 + 0x1C]
	0x036DE810 MOV V0.16B, V8.16B
	0x036DE814 MOV V1.16B, V9.16B
	0x036DE818 MOV V2.16B, V10.16B
	0x036DE81C MOV V3.16B, V4.16B
	0x036DE820 MOV V4.16B, V5.16B
	0x036DE824 MOV V5.16B, V6.16B
	0x036DE828 MOV V6.16B, V7.16B
	0x036DE82C MOV X1, X31
	0x036DE830 BL 0x3BE2428
	0x036DE834 MOV X20, X19
	0x036DE838 STR W0, [X20 + 0x4C]!
	0x036DE83C MOV X0, X20
	0x036DE840 MOV X1, X31
	0x036DE844 BL 0x3BE1ECC
	0x036DE848 TBZ X0, 0x0, 0x36DE85C
	0x036DE84C MOV X0, X20
	0x036DE850 MOV X1, X19
	0x036DE854 MOV X2, X31
	0x036DE858 BL 0x3BE1FE0
	0x036DE85C MOV X0, X19
	0x036DE860 MOV X1, X31
	0x036DE864 BL 0x3C32E90
	0x036DE868 CBZ X0, 0x36DE8B4
	0x036DE86C MOV X1, X31
	0x036DE870 BL 0x3C3F58C
	0x036DE874 MOV X0, X19
	0x036DE878 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {55}
	006 Move X1, X31
	007 Move X19, X0
	008 Call CollectionBase.get_Count, X0
	009 Compare W0, 0
	010 JumpIfEqual {49}
	011 Move X0, X19
	012 Move X1, X31
	013 Call X509Certificate2Collection.GetEnumerator, X0
	014 Compare X0, 0
	015 JumpIfEqual {55}
	016 Move X1, X31
	017 Move X19, X0
	018 Call X509Certificate2Enumerator.MoveNext, X0
	019 Move X20, X31
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {50}
	024 Move X0, X19
	025 Move X1, X31
	026 Call X509Certificate2Enumerator.get_Current, X0
	027 Compare X0, 0
	028 JumpIfEqual {55}
	029 Move X1, X31
	030 Move X20, X0
	031 Call X509Certificate2.get_HasPrivateKey, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X0, X20
	037 Call CertificateHelper.IsValidClientCertificate, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {50}
	042 Move X0, X19
	043 Move X1, X31
	044 Call X509Certificate2Enumerator.MoveNext, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {24}
	049 Move X20, X31
	050 Move X0, X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Boolean IsValidClientCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2 cert)

Disassembly:
	0x036DE87C STP S0, S1, [X19 + 0x50]
	0x036DE880 STR S2, [X19 + 0x58]
	0x036DE884 BL 0x3C32E90
	0x036DE888 CBZ X0, 0x36DE8B4
	0x036DE88C MOV X1, X31
	0x036DE890 BL 0x3C3DEB4
	0x036DE894 STP S0, S1, [X19 + 0x5C]
	0x036DE898 STP S2, S3, [X19 + 0x64]
	0x036DE89C LDP X20, X19, [X31 + 0xB0]
	0x036DE8A0 LDR X30, [X31 + 0xA8]
	0x036DE8A4 LDP D9, D8, [X31 + 0x98]
	0x036DE8A8 LDR V10, [X31 + 0x90]
	0x036DE8AC ADD X31, X31, 0xC0
	0x036DE8B0 RET
	0x036DE8B4 BL 0x1C16F20
	0x036DE8B8 STR X30, [X31 - 0x40]!
	0x036DE8BC STP X24, X23, [X31 + 0x10]
	0x036DE8C0 STP X22, X21, [X31 + 0x20]
	0x036DE8C4 STP X20, X19, [X31 + 0x30]
	0x036DE8C8 ADRP X20, 0xD02000
	0x036DE8CC ADRP X22, 0xA62000
	0x036DE8D0 LDRB W8, [X20 + 0xAEA]
	0x036DE8D4 LDR X22, [X22 + 0x4C0]
	0x036DE8D8 MOV X19, X0
	0x036DE8DC TBNZ X8, 0x0, 0x36DE930
	0x036DE8E0 ADRP X0, 0xA62000
	0x036DE8E4 LDR X0, [X0 + 0x4C8]
	0x036DE8E8 BL 0x1C16CF4
	0x036DE8EC ADRP X0, 0xA62000
	0x036DE8F0 LDR X0, [X0 + 0x4D0]
	0x036DE8F4 BL 0x1C16CF4
	0x036DE8F8 ADRP X0, 0xA62000
	0x036DE8FC LDR X0, [X0 + 0x4D8]
	0x036DE900 BL 0x1C16CF4
	0x036DE904 ADRP X0, 0xA62000
	0x036DE908 LDR X0, [X0 + 0x4C0]
	0x036DE90C BL 0x1C16CF4
	0x036DE910 ADRP X0, 0xA62000
	0x036DE914 LDR X0, [X0 + 0x4E0]
	0x036DE918 BL 0x1C16CF4
	0x036DE91C ADRP X0, 0xA62000
	0x036DE920 LDR X0, [X0 + 0x4E8]
	0x036DE924 BL 0x1C16CF4
	0x036DE928 MOVZ W8, 0x1
	0x036DE92C STRB W8, [X20 + 0xAEA]
	0x036DE930 LDR X0, [X22]
	0x036DE934 LDR W8, [X0 + 0xE0]
	0x036DE938 CBNZ W8, 0x36DE944
	0x036DE93C BL 0x1C16DFC
	0x036DE940 LDR X0, [X22]
	0x036DE944 LDR X8, [X0 + 0xB8]
	0x036DE948 LDR X8, [X8]
	0x036DE94C CBZ X8, 0x36DEA80
	0x036DE950 LDR W8, [X8 + 0x18]
	0x036DE954 CBNZ W8, 0x36DE9E8
	0x036DE958 ADRP X23, 0xA62000
	0x036DE95C LDR X23, [X23 + 0x4E0]
	0x036DE960 ADRP X24, 0xA62000
	0x036DE964 LDR X8, [X23]
	0x036DE968 LDR X8, [X8 + 0xB8]
	0x036DE96C LDR X24, [X24 + 0x4E8]
	0x036DE970 LDR X20, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD03000
	007 Move W8, [X20+2785]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA5F000
	014 Move X0, [X0+2152]
	015 Call 0x1C17CF4
	016 Move X0, 0xA5F000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2785], W8
	021 Compare X19, 0
	022 JumpIfEqual {82}
	023 Move X0, X19
	024 Move X1, X31
	025 Call X509Certificate2.get_Extensions, X0
	026 Compare X0, 0
	027 JumpIfEqual {82}
	028 Move X1, X31
	029 Call X509ExtensionCollection.GetEnumerator, X0
	030 Compare X0, 0
	031 JumpIfEqual {82}
	032 Move X1, X31
	033 Move X19, X0
	034 Call X509ExtensionEnumerator.MoveNext, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {74}
	039 Move X21, 0xA5F000
	040 Move X22, 0xA5F000
	041 Move X21, [X21+2152]
	042 Move X22, [X22+2160]
	043 Move X0, X19
	044 Move X1, X31
	045 Call X509ExtensionEnumerator.get_Current, X0
	046 Compare X0, 0
	047 JumpIfEqual {67}
	048 Move X9, [X21]
	049 Move X8, [X0]
	050 Move X20, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X20
	053 Call CertificateHelper.IsValidForClientAuthenticationEKU, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {81}
	058 Move X8, [X20]
	059 Move X9, [X22]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X20
	062 Call CertificateHelper.IsValidForDigitalSignatureUsage, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {81}
	067 Move X0, X19
	068 Move X1, X31
	069 Call X509ExtensionEnumerator.MoveNext, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {43}
	074 Move W0, 1
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0
	081 Move W0, W31
	082 Call 0x1C17F20

Method: System.Boolean IsValidForClientAuthenticationEKU(System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension eku)

Disassembly:
	0x036DE974 LDR X0, [X24]
	0x036DE978 BL 0x1C16F10
	0x036DE97C ADRP X8, 0xA62000
	0x036DE980 LDR X8, [X8 + 0x4D8]
	0x036DE984 MOV X1, X31
	0x036DE988 MOV X3, X31
	0x036DE98C MOV X21, X0
	0x036DE990 LDR X2, [X8]
	0x036DE994 BL 0x3BE25BC
	0x036DE998 MOV X0, X20
	0x036DE99C MOV X1, X21
	0x036DE9A0 MOV X2, X31
	0x036DE9A4 BL 0x33C0DE4
	0x036DE9A8 CBZ X0, 0x36DE9DC
	0x036DE9AC LDR X1, [X24]
	0x036DE9B0 LDR X8, [X0]
	0x036DE9B4 CMP X8, X1
	0x036DE9B8 B.NE 0x36DE9D8
	0x036DE9BC LDR X8, [X23]
	0x036DE9C0 LDR X8, [X8 + 0xB8]
	0x036DE9C4 STR X0, [X8]
	0x036DE9C8 LDR X1, [X24]
	0x036DE9CC LDR X8, [X0]
	0x036DE9D0 CMP X8, X1
	0x036DE9D4 B.EQ 0x36DE9E8
	0x036DE9D8 BL 0x1C171E0
	0x036DE9DC LDR X8, [X23]
	0x036DE9E0 LDR X8, [X8 + 0xB8]
	0x036DE9E4 STR X0, [X8]
	0x036DE9E8 LDR X0, [X22]
	0x036DE9EC LDR W8, [X0 + 0xE0]
	0x036DE9F0 CBNZ W8, 0x36DE9FC
	0x036DE9F4 BL 0x1C16DFC
	0x036DE9F8 LDR X0, [X22]
	0x036DE9FC LDR X8, [X0 + 0xB8]
	0x036DEA00 LDR X0, [X8]
	0x036DEA04 CBZ X0, 0x36DEA80
	0x036DEA08 ADRP X9, 0xA62000
	0x036DEA0C LDR X9, [X9 + 0x4C8]
	0x036DEA10 LDR W10, [X0 + 0x1C]
	0x036DEA14 LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD03000
	006 Move W8, [X20+2786]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA63000
	013 Move X0, [X0+1112]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2786], W8
	017 Compare X19, 0
	018 JumpIfEqual {58}
	019 Move X0, X19
	020 Move X1, X31
	021 Call X509EnhancedKeyUsageExtension.get_EnhancedKeyUsages, X0
	022 Compare X0, 0
	023 JumpIfEqual {58}
	024 Move X1, X31
	025 Call OidCollection.GetEnumerator, X0
	026 Compare X0, 0
	027 JumpIfEqual {58}
	028 Move X21, 0xA63000
	029 Move X21, [X21+1112]
	030 Move X19, X0
	031 Move X0, X19
	032 Move X1, X31
	033 Call OidEnumerator.MoveNext, X0
	034 Move W20, W0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {52}
	039 Move X0, X19
	040 Move X1, X31
	041 Call OidEnumerator.get_Current, X0
	042 Compare X0, 0
	043 JumpIfEqual {58}
	044 Move X0, [X0+16]
	045 Move X1, [X21]
	046 Move X2, X31
	047 Call String.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {31}
	052 And W0, W20, 1
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Boolean IsValidForDigitalSignatureUsage(System.Security.Cryptography.X509Certificates.X509KeyUsageExtension ku)

Disassembly:
	0x036DEA18 LDR X9, [X9]
	0x036DEA1C ADD W10, W10, 0x1
	0x036DEA20 STR W10, [X0 + 0x1C]
	0x036DEA24 CBZ X8, 0x36DEA80
	0x036DEA28 LDRSW X10, [X0 + 0x18]
	0x036DEA2C LDR W11, [X8 + 0x18]
	0x036DEA30 CMP W10, W11
	0x036DEA34 B.CS 0x36DEA5C

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 Move X1, X31
	005 Call X509KeyUsageExtension.get_KeyUsages, X0
	006 Move W0, W0
	007 ShiftRight W0, 7
	008 And W0, W0, 127
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Certificate2 GetEligibleClientCertificate()

Disassembly:
	0x036DEA38 ADD W9, W10, 0x1
	0x036DEA3C ADD X8, X8, X10, 0x3, LSL
	0x036DEA40 STR W9, [X0 + 0x18]
	0x036DEA44 STR X19, [X8 + 0x20]
	0x036DEA48 LDP X20, X19, [X31 + 0x30]
	0x036DEA4C LDP X22, X21, [X31 + 0x20]
	0x036DEA50 LDP X24, X23, [X31 + 0x10]
	0x036DEA54 LDR X30, [X31], #0x40
	0x036DEA58 RET
	0x036DEA5C LDR X8, [X9 + 0x20]
	0x036DEA60 MOV X1, X19
	0x036DEA64 LDP X20, X19, [X31 + 0x30]
	0x036DEA68 LDP X22, X21, [X31 + 0x20]
	0x036DEA6C LDR X8, [X8 + 0xC0]
	0x036DEA70 LDP X24, X23, [X31 + 0x10]
	0x036DEA74 LDR X2, [X8 + 0x70]
	0x036DEA78 LDR X30, [X31], #0x40
	0x036DEA7C B 0x301BF90
	0x036DEA80 BL 0x1C16F20
	0x036DEA84 STP X30, X21, [X31 - 0x20]!
	0x036DEA88 STP X20, X19, [X31 + 0x10]
	0x036DEA8C ADRP X20, 0xD02000
	0x036DEA90 ADRP X21, 0xA62000
	0x036DEA94 LDRB W8, [X20 + 0xAE9]
	0x036DEA98 LDR X21, [X21 + 0x4C0]
	0x036DEA9C MOV X19, X0
	0x036DEAA0 TBNZ X8, 0x0, 0x36DEAB8
	0x036DEAA4 ADRP X0, 0xA62000
	0x036DEAA8 LDR X0, [X0 + 0x4C0]
	0x036DEAAC BL 0x1C16CF4
	0x036DEAB0 MOVZ W8, 0x1
	0x036DEAB4 STRB W8, [X20 + 0xAE9]
	0x036DEAB8 LDR X0, [X21]
	0x036DEABC LDR W8, [X0 + 0xE0]
	0x036DEAC0 CBNZ W8, 0x36DEAC8
	0x036DEAC4 BL 0x1C16DFC
	0x036DEAC8 MOV X0, X19
	0x036DEACC BL 0x36DEAE4
	0x036DEAD0 ADD X0, X19, 0x4C
	0x036DEAD4 LDP X20, X19, [X31 + 0x10]
	0x036DEAD8 MOV X1, X31
	0x036DEADC LDP X30, X21, [X31], #0x20
	0x036DEAE0 B 0x3BE1F68
	0x036DEAE4 STR X30, [X31 - 0x30]!
	0x036DEAE8 STP X22, X21, [X31 + 0x10]
	0x036DEAEC STP X20, X19, [X31 + 0x20]
	0x036DEAF0 ADRP X21, 0xD02000
	0x036DEAF4 ADRP X20, 0xA62000
	0x036DEAF8 LDRB W8, [X21 + 0xAEB]
	0x036DEAFC LDR X20, [X20 + 0x4C0]
	0x036DEB00 MOV X19, X0
	0x036DEB04 TBNZ X8, 0x0, 0x36DEB58
	0x036DEB08 ADRP X0, 0xA62000
	0x036DEB0C LDR X0, [X0 + 0x4F0]
	0x036DEB10 BL 0x1C16CF4
	0x036DEB14 ADRP X0, 0xA62000
	0x036DEB18 LDR X0, [X0 + 0x4D0]
	0x036DEB1C BL 0x1C16CF4
	0x036DEB20 ADRP X0, 0xA62000
	0x036DEB24 LDR X0, [X0 + 0x4D8]
	0x036DEB28 BL 0x1C16CF4
	0x036DEB2C ADRP X0, 0xA62000
	0x036DEB30 LDR X0, [X0 + 0x4C0]
	0x036DEB34 BL 0x1C16CF4
	0x036DEB38 ADRP X0, 0xA62000
	0x036DEB3C LDR X0, [X0 + 0x4E0]
	0x036DEB40 BL 0x1C16CF4
	0x036DEB44 ADRP X0, 0xA62000
	0x036DEB48 LDR X0, [X0 + 0x4E8]
	0x036DEB4C BL 0x1C16CF4
	0x036DEB50 MOVZ W8, 0x1
	0x036DEB54 STRB W8, [X21 + 0xAEB]
	0x036DEB58 LDR X0, [X20]
	0x036DEB5C LDR W8, [X0 + 0xE0]
	0x036DEB60 CBNZ W8, 0x36DEB6C
	0x036DEB64 BL 0x1C16DFC
	0x036DEB68 LDR X0, [X20]
	0x036DEB6C LDR X8, [X0 + 0xB8]
	0x036DEB70 LDR X0, [X8]
	0x036DEB74 CBZ X0, 0x36DEC44
	0x036DEB78 ADRP X8, 0xA62000
	0x036DEB7C LDR X8, [X8 + 0x4F0]
	0x036DEB80 MOV X1, X19
	0x036DEB84 LDR X2, [X8]
	0x036DEB88 BL 0x301D7A8
	0x036DEB8C LDR X8, [X20]
	0x036DEB90 LDR X8, [X8 + 0xB8]
	0x036DEB94 LDR X8, [X8]
	0x036DEB98 CBZ X8, 0x36DEC44
	0x036DEB9C LDR W8, [X8 + 0x18]
	0x036DEBA0 CBNZ W8, 0x36DEC34
	0x036DEBA4 ADRP X21, 0xA62000
	0x036DEBA8 LDR X21, [X21 + 0x4E0]
	0x036DEBAC ADRP X22, 0xA62000
	0x036DEBB0 LDR X8, [X21]
	0x036DEBB4 LDR X8, [X8 + 0xB8]
	0x036DEBB8 LDR X22, [X22 + 0x4E8]
	0x036DEBBC LDR X19, [X8]
	0x036DEBC0 LDR X0, [X22]
	0x036DEBC4 BL 0x1C16F10
	0x036DEBC8 ADRP X8, 0xA62000
	0x036DEBCC LDR X8, [X8 + 0x4D8]
	0x036DEBD0 MOV X1, X31
	0x036DEBD4 MOV X3, X31
	0x036DEBD8 MOV X20, X0
	0x036DEBDC LDR X2, [X8]
	0x036DEBE0 BL 0x3BE25BC
	0x036DEBE4 MOV X0, X19
	0x036DEBE8 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD03000
	007 Move X19, 0xA5F000
	008 Move W8, [X20+2787]
	009 Move X19, [X19+3144]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA16000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move X0, 0xA5F000
	018 Move X0, [X0+3144]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2787], W8
	022 Move X0, [X19]
	023 Move X22, 0xA16000
	024 Move X22, [X22+3584]
	025 Call 0x1C17F10
	026 Move W1, 5
	027 Move W2, 1
	028 Move X3, X31
	029 Move X19, X0
	030 Call X509Store..ctor, X0, X1, X2
	031 Compare X19, 0
	032 JumpIfEqual {73}
	033 Move X0, X19
	034 Move W1, W31
	035 Move X2, X31
	036 Call X509Store.Open, X0, X1
	037 Move X0, X19
	038 Move X1, X31
	039 Call X509Store.get_Certificates, X0
	040 Move X21, X0
	041 Move X20, X31
	042 Move X8, [X19]
	043 Move X1, [X22]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X19
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X20, 0
	064 JumpIfNotEqual {74}
	065 Move X0, X21
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Call CertificateHelper.GetEligibleClientCertificate, X0
	072 Return X0
	073 Call 0x1C17F20
	074 Move X0, X20
	075 Call 0x1C17F18
	076 Move X21, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X21
	079 Call 0x3EB2AD0
	080 Move X20, [X0]
	081 Call 0x3EB2AE0
	082 Move X21, X31
	083 Compare X19, 0
	084 JumpIfNotEqual {42}
	085 Move X20, X31
	086 Move X21, X0
	087 Compare X19, 0
	088 JumpIfEqual {110}
	089 Move X8, [X19]
	090 Move X1, [X22]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X20, 0
	111 JumpIfNotEqual {114}
	112 Move X0, X21
	113 Call 0x1D2D690
	114 Move X0, X20
	115 Call 0x1C17F18
	116 Call 0x1991590

