Type: System.Net.Security.AuthenticatedStream

Method: System.Void .ctor(System.IO.Stream innerStream, System.Boolean leaveInnerStreamOpen)

Disassembly:
	0x036DEEF8 CBNZ W8, 0x36DEF0C
	0x036DEEFC ADRP X0, 0xA15000
	0x036DEF00 LDR X0, [X0 + 0x5A0]
	0x036DEF04 BL 0x1C16CF4
	0x036DEF08 STRB W20, [X21 + 0x783]
	0x036DEF0C ADRP X8, 0xA15000
	0x036DEF10 LDR X8, [X8 + 0x5A0]
	0x036DEF14 ADRP X20, 0xCFA000
	0x036DEF18 LDR X8, [X8]
	0x036DEF1C LDR X8, [X8 + 0xB8]
	0x036DEF20 LDR V0, [X8]
	0x036DEF24 LDR V1, [X8 + 0x8]
	0x036DEF28 STR D0, [X19 + 0x50]
	0x036DEF2C STR S1, [X19 + 0x58]
	0x036DEF30 LDRB W8, [X20 + 0x793]
	0x036DEF34 CBNZ W8, 0x36DEF4C
	0x036DEF38 ADRP X0, 0xA16000
	0x036DEF3C LDR X0, [X0 + 0x5A8]
	0x036DEF40 BL 0x1C16CF4
	0x036DEF44 MOVZ W8, 0x1
	0x036DEF48 STRB W8, [X20 + 0x793]
	0x036DEF4C ADRP X8, 0xA16000
	0x036DEF50 LDR X8, [X8 + 0x5A8]
	0x036DEF54 MOV X0, X19
	0x036DEF58 MOV X1, X31
	0x036DEF5C LDR X8, [X8]
	0x036DEF60 LDR X8, [X8 + 0xB8]
	0x036DEF64 LDR V0, [X8]
	0x036DEF68 STUR V0, [X19 + 0x5C]
	0x036DEF6C LDP X20, X19, [X31 + 0x10]
	0x036DEF70 LDP X30, X21, [X31], #0x20
	0x036DEF74 B 0x3C36C30
	0x036DEF78 STR X30, [X31 - 0x30]!
	0x036DEF7C STP X22, X21, [X31 + 0x10]
	0x036DEF80 STP X20, X19, [X31 + 0x20]
	0x036DEF84 ADRP X21, 0xD02000
	0x036DEF88 ADRP X22, 0xA62000
	0x036DEF8C ADRP X19, 0xA62000
	0x036DEF90 ADRP X20, 0xA62000
	0x036DEF94 LDRB W8, [X21 + 0xAEE]
	0x036DEF98 LDR X22, [X22 + 0x518]
	0x036DEF9C LDR X19, [X19 + 0x520]
	0x036DEFA0 LDR X20, [X20 + 0x4C0]
	0x036DEFA4 TBNZ X8, 0x0, 0x36DEFD4
	0x036DEFA8 ADRP X0, 0xA62000
	0x036DEFAC LDR X0, [X0 + 0x520]
	0x036DEFB0 BL 0x1C16CF4
	0x036DEFB4 ADRP X0, 0xA62000
	0x036DEFB8 LDR X0, [X0 + 0x518]
	0x036DEFBC BL 0x1C16CF4
	0x036DEFC0 ADRP X0, 0xA62000
	0x036DEFC4 LDR X0, [X0 + 0x4C0]
	0x036DEFC8 BL 0x1C16CF4
	0x036DEFCC MOVZ W8, 0x1
	0x036DEFD0 STRB W8, [X21 + 0xAEE]
	0x036DEFD4 LDR X0, [X22]
	0x036DEFD8 BL 0x1C16F10
	0x036DEFDC LDR X1, [X19]
	0x036DEFE0 MOV X19, X0
	0x036DEFE4 BL 0x301B7C4
	0x036DEFE8 LDR X8, [X20]
	0x036DEFEC LDP X22, X21, [X31 + 0x10]
	0x036DEFF0 LDR X8, [X8 + 0xB8]
	0x036DEFF4 STR X19, [X8]
	0x036DEFF8 LDP X20, X19, [X31 + 0x20]
	0x036DEFFC LDR X30, [X31], #0x30
	0x036DF000 RET
	0x036DF004 LDRB W0, [X0 + 0x20]
	0x036DF008 RET
	0x036DF00C AND W8, W1, 0x1
	0x036DF010 STRB W8, [X0 + 0x20]
	0x036DF014 RET
	0x036DF018 LDR W0, [X0 + 0x24]
	0x036DF01C RET
	0x036DF020 STR W1, [X0 + 0x24]
	0x036DF024 RET
	0x036DF028 LDRB W0, [X0 + 0x28]
	0x036DF02C RET
	0x036DF030 AND W8, W1, 0x1
	0x036DF034 STRB W8, [X0 + 0x28]
	0x036DF038 RET
	0x036DF03C LDRB W0, [X0 + 0x29]
	0x036DF040 RET
	0x036DF044 AND W8, W1, 0x1
	0x036DF048 STRB W8, [X0 + 0x29]
	0x036DF04C RET
	0x036DF050 LDRB W0, [X0 + 0x2A]
	0x036DF054 RET
	0x036DF058 AND W8, W1, 0x1
	0x036DF05C STRB W8, [X0 + 0x2A]
	0x036DF060 RET
	0x036DF064 LDRB W0, [X0 + 0x2B]
	0x036DF068 RET
	0x036DF06C AND W8, W1, 0x1
	0x036DF070 STRB W8, [X0 + 0x2B]
	0x036DF074 RET
	0x036DF078 STR X30, [X31 - 0x20]!
	0x036DF07C STP X20, X19, [X31 + 0x10]
	0x036DF080 ADRP X20, 0xD01000
	0x036DF084 ADRP X19, 0xA61000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD03000
	008 Move X22, 0xA45000
	009 Move W8, [X23+2788]
	010 Move X22, [X22+3344]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA45000
	019 Move X0, [X0+3344]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2788], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X31
	030 Call Stream..ctor, X0
	031 Compare X20, 0
	032 JumpIfEqual {79}
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X8, [X8]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X8, [X20]
	047 Move X0, X20
	048 Move X9, [X8+424]
	049 Move X1, [X8+432]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {97}
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X8, [X20]
	061 Move X0, X20
	062 Move X9, [X8+472]
	063 Move X1, [X8+480]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {97}
	069 And W8, W21, 1
	070 Move [X19+40], X20
	071 Move [X19+48], W8
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Return 
	079 Move X0, 0xA1B000
	080 Move X0, [X0+1320]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0xA63000
	085 Move X0, [X0+800]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Move X2, X31
	090 Call ArgumentNullException..ctor, X0, X1
	091 Move X0, 0xA62000
	092 Move X0, [X0+1176]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Call 0x1C17DEC
	097 Move X0, 0xA62000
	098 Move X0, [X0+1184]
	099 Call 0x1C17D08
	100 Move X1, X31
	101 Call SR.GetString, X0
	102 Move X19, X0
	103 Move X0, 0xA1D000
	104 Move X0, [X0+1400]
	105 Call 0x1C17D08
	106 Call 0x1C17F10
	107 Move X20, X0
	108 Move X0, 0xA62000
	109 Move X0, [X0+800]
	110 Call 0x1C17D08
	111 Move X2, X0
	112 Move X0, X20
	113 Move X1, X19
	114 Move X3, X31
	115 Call ArgumentException..ctor, X0, X1, X2
	116 Move X0, 0xA62000
	117 Move X0, [X0+1176]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X20
	121 Call 0x1C17DEC

Method: System.IO.Stream get_InnerStream()

Disassembly:
	0x036DF088 LDRB W8, [X20 + 0xAEF]
	0x036DF08C LDR X19, [X19 + 0x528]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x036DF090 TBNZ X8, 0x0, 0x36DF0A8
	0x036DF094 ADRP X0, 0xA61000
	0x036DF098 LDR X0, [X0 + 0x528]
	0x036DF09C BL 0x1C16CF4
	0x036DF0A0 MOVZ W8, 0x1
	0x036DF0A4 STRB W8, [X20 + 0xAEF]
	0x036DF0A8 LDR X0, [X19]
	0x036DF0AC LDR W8, [X0 + 0xE0]
	0x036DF0B0 CBNZ W8, 0x36DF0BC
	0x036DF0B4 BL 0x1C16DFC
	0x036DF0B8 LDR X0, [X19]
	0x036DF0BC LDR X8, [X0 + 0xB8]
	0x036DF0C0 LDP X20, X19, [X31 + 0x10]
	0x036DF0C4 LDR X0, [X8]
	0x036DF0C8 LDR X30, [X31], #0x20
	0x036DF0CC RET
	0x036DF0D0 STP X30, X21, [X31 - 0x20]!
	0x036DF0D4 STP X20, X19, [X31 + 0x10]
	0x036DF0D8 ADRP X21, 0xD01000
	0x036DF0DC ADRP X20, 0xA61000
	0x036DF0E0 LDRB W8, [X21 + 0xAF0]
	0x036DF0E4 LDR X20, [X20 + 0x528]
	0x036DF0E8 MOV X19, X0
	0x036DF0EC TBNZ X8, 0x0, 0x36DF11C
	0x036DF0F0 ADRP X0, 0xA61000
	0x036DF0F4 LDR X0, [X0 + 0x530]
	0x036DF0F8 BL 0x1C16CF4
	0x036DF0FC ADRP X0, 0xA61000
	0x036DF100 LDR X0, [X0 + 0x538]
	0x036DF104 BL 0x1C16CF4
	0x036DF108 ADRP X0, 0xA61000
	0x036DF10C LDR X0, [X0 + 0x528]
	0x036DF110 BL 0x1C16CF4
	0x036DF114 MOVZ W8, 0x1
	0x036DF118 STRB W8, [X21 + 0xAF0]
	0x036DF11C LDR X0, [X20]
	0x036DF120 LDR W8, [X0 + 0xE0]
	0x036DF124 CBNZ W8, 0x36DF130
	0x036DF128 BL 0x1C16DFC
	0x036DF12C LDR X0, [X20]
	0x036DF130 LDR X8, [X0 + 0xB8]
	0x036DF134 LDR X0, [X8]
	0x036DF138 CBZ X0, 0x36DF1DC
	0x036DF13C ADRP X8, 0xA61000
	0x036DF140 LDR X8, [X8 + 0x538]
	0x036DF144 MOV X1, X19
	0x036DF148 LDR X2, [X8]
	0x036DF14C BL 0x301C318
	0x036DF150 TBNZ X0, 0x0, 0x36DF1B4
	0x036DF154 LDR X0, [X20]
	0x036DF158 LDR W8, [X0 + 0xE0]
	0x036DF15C CBNZ W8, 0x36DF168
	0x036DF160 BL 0x1C16DFC
	0x036DF164 LDR X0, [X20]
	0x036DF168 LDR X8, [X0 + 0xB8]
	0x036DF16C LDR X0, [X8]
	0x036DF170 CBZ X0, 0x36DF1DC
	0x036DF174 ADRP X9, 0xA61000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X19, X0
	007 Move TEMP, X1
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {27}
	011 Move W8, [X19+48]
	012 Move X0, [X19+40]
	013 Compare W8, 0
	014 JumpIfEqual {21}
	015 Compare X0, 0
	016 JumpIfEqual {36}
	017 Move X8, [X0]
	018 Move X1, [X8+672]
	019 Move X9, [X8+664]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {37}
	023 Move X8, [X0]
	024 Move X1, [X8+640]
	025 Move X9, [X8+632]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 And W1, W20, 1
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call Stream.Dispose, X0, X1
	035 Return 
	036 Call 0x1C17F20
	037 Call 0x1C17F20
	038 Move X21, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X21
	041 Call 0x3EB2AD0
	042 Move X20, [X0]
	043 Call 0x3EB2AE0
	044 Move W1, 1
	045 Move X0, X19
	046 Move X2, X31
	047 Call Stream.Dispose, X0, X1
	048 Compare X20, 0
	049 JumpIfNotEqual {56}
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move X20, X31
	056 Move X0, X20
	057 Call 0x1C17F18
	058 Move X21, X0
	059 Move W1, 1
	060 Move X0, X19
	061 Move X2, X31
	062 Call Stream.Dispose, X0, X1
	063 Compare X20, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X21
	066 Call 0x1D2D690
	067 Move X0, X20
	068 Call 0x1C17F18
	069 Call 0x1991590

Method: System.Boolean get_IsAuthenticated()

Disassembly:
	

ISIL:
No ISIL was generated
