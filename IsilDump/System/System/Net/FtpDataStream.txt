Type: System.Net.FtpDataStream

Method: System.Void .ctor(System.Net.Sockets.NetworkStream networkStream, System.Net.FtpWebRequest request, System.Net.TriState writeOnly)

Disassembly:
	0x03672A18 ADRP X0, 0xAAA000
	0x03672A1C LDR X0, [X0 + 0x4B8]
	0x03672A20 BL 0x1C16D08
	0x03672A24 LDR X8, [X19]
	0x03672A28 LDR X1, [X8]
	0x03672A2C BL 0x1C17270
	0x03672A30 TBZ X0, 0x0, 0x3672A5C
	0x03672A34 BL 0x3EB1AE0
	0x03672A38 MOV X0, X31
	0x03672A3C BL 0x367C8A8
	0x03672A40 MOV X19, X0
	0x03672A44 ADRP X0, 0xACB000
	0x03672A48 LDR X0, [X0 + 0x9B8]
	0x03672A4C BL 0x1C16D08
	0x03672A50 MOV X1, X0
	0x03672A54 MOV X0, X19
	0x03672A58 BL 0x1C16DEC
	0x03672A5C MOVZ W0, 0x8
	0x03672A60 BL 0x3EB1AF0
	0x03672A64 LDR X8, [X19]
	0x03672A68 STR X8, [X0]
	0x03672A6C ADRP X1, 0x842000
	0x03672A70 ADD X1, X1, 0xE58
	0x03672A74 MOV X2, X31
	0x03672A78 BL 0x3EB1B00
	0x03672A7C MOV X19, X0
	0x03672A80 BL 0x3EB1AE0
	0x03672A84 MOV X0, X19
	0x03672A88 BL 0x1D2C690
	0x03672A8C BL 0x1990590
	0x03672A90 SUB X31, X31, 0x30
	0x03672A94 STP X30, X21, [X31 + 0x10]
	0x03672A98 STP X20, X19, [X31 + 0x20]
	0x03672A9C ADRP X21, 0xD6E000
	0x03672AA0 LDRB W8, [X21 + 0x78B]
	0x03672AA4 MOV X20, X1
	0x03672AA8 MOV X19, X0
	0x03672AAC TBNZ X8, 0x0, 0x3672AD0
	0x03672AB0 ADRP X0, 0xACB000
	0x03672AB4 LDR X0, [X0 + 0x9C0]
	0x03672AB8 BL 0x1C16CF4
	0x03672ABC ADRP X0, 0xA8C000
	0x03672AC0 LDR X0, [X0 + 0x310]
	0x03672AC4 BL 0x1C16CF4
	0x03672AC8 MOVZ W8, 0x1
	0x03672ACC STRB W8, [X21 + 0x78B]
	0x03672AD0 STR X31, [X31 + 0x8]
	0x03672AD4 CBZ X20, 0x3672B78
	0x03672AD8 ADRP X8, 0xA8C000
	0x03672ADC LDR X8, [X8 + 0x310]
	0x03672AE0 MOV X0, X20
	0x03672AE4 MOV X2, X31
	0x03672AE8 LDR X1, [X8]
	0x03672AEC BL 0x322C9D4
	0x03672AF0 ADDS W31, W0, 0x1
	0x03672AF4 B.EQ 0x3672B68
	0x03672AF8 ADRP X8, 0xACB000
	0x03672AFC LDR X8, [X8 + 0x9C0]
	0x03672B00 MOV W21, W0
	0x03672B04 MOV X0, X20
	0x03672B08 MOV X2, X31
	0x03672B0C LDR X1, [X8]
	0x03672B10 BL 0x322C2F0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD6F000
	009 Move X23, 0xAB1000
	010 Move W8, [X24+1942]
	011 Move X23, [X23+3344]
	012 Move W22, W3
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xACC000
	021 Move X0, [X0+1128]
	022 Call 0x1C17CF4
	023 Move X0, 0xAB1000
	024 Move X0, [X0+3344]
	025 Call 0x1C17CF4
	026 Move X0, 0xAB4000
	027 Move X0, [X0+3056]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+1942], W8
	031 Move X0, [X23]
	032 Move X23, 0xACC000
	033 Move W8, [X0+224]
	034 Move X23, [X23+1128]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Call Stream..ctor, X0
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Call NetEventSource.get_IsEnabled
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {62}
	051 Move X0, [X23]
	052 Move X23, 0xAB4000
	053 Move W8, [X0+224]
	054 Move X23, [X23+3056]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X2, [X23]
	059 Move X0, X20
	060 Move X1, X31
	061 Call NetEventSource.Info, X0, X1, X2
	062 Move W8, 257
	063 NotImplemented "Instruction STRH not yet implemented."
	064 Compare W22, 0
	065 JumpIfEqual {68}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X20+57], W31
	068 Move [X20+56], W31
	069 Move [X20+40], X19
	070 Move [X20+48], X21
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X24, [X31+16]
	076 Move X23, [X31+24]
	077 Move X30, [X31+64]
	078 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x0367650C CMP W1, 0x1
	0x03676510 MOV X21, X0
	0x03676514 B.NE 0x3676540
	0x03676518 MOV X0, X21
	0x0367651C BL 0x3EB1AD0
	0x03676520 LDR X20, [X0]
	0x03676524 BL 0x3EB1AE0
	0x03676528 MOV X0, X19
	0x0367652C BL 0x3675A78
	0x03676530 CBNZ X20, 0x3676548
	0x03676534 LDP X20, X19, [X31 + 0x10]
	0x03676538 LDP X30, X21, [X31], #0x20
	0x0367653C RET
	0x03676540 MOV X20, X31
	0x03676544 B 0x3676554
	0x03676548 MOV X0, X20
	0x0367654C BL 0x1C16F18
	0x03676550 MOV X21, X0
	0x03676554 MOV X0, X19
	0x03676558 BL 0x3675A78
	0x0367655C CBNZ X20, 0x3676568
	0x03676560 MOV X0, X21
	0x03676564 BL 0x1D2C690
	0x03676568 MOV X0, X20
	0x0367656C BL 0x1C16F18
	0x03676570 BL 0x1990590
	0x03676574 STR X30, [X31 - 0x10]!
	0x03676578 LDR X0, [X0 + 0x30]
	0x0367657C CBZ X0, 0x3676594
	0x03676580 LDR X8, [X0]
	0x03676584 LDR X2, [X8 + 0x298]
	0x03676588 LDR X1, [X8 + 0x2A0]
	0x0367658C LDR X30, [X31], #0x10
	0x03676590 BR X2
	0x03676594 BL 0x1C16F20
	0x03676598 STR X30, [X31 - 0x10]!
	0x0367659C LDR X0, [X0 + 0x30]
	0x036765A0 CBZ X0, 0x36765B8
	0x036765A4 LDR X8, [X0]
	0x036765A8 LDR X3, [X8 + 0x348]
	0x036765AC LDR X2, [X8 + 0x350]
	0x036765B0 LDR X30, [X31], #0x10
	0x036765B4 BR X3
	0x036765B8 BL 0x1C16F20
	0x036765BC STR X30, [X31 - 0x10]!
	0x036765C0 LDR X0, [X0 + 0x30]
	0x036765C4 CBZ X0, 0x36765D8
	0x036765C8 LDR X8, [X0]
	0x036765CC LDP X2, X1, [X8 + 0x1C8]
	0x036765D0 LDR X30, [X31], #0x10
	0x036765D4 BR X2
	0x036765D8 BL 0x1C16F20
	0x036765DC STR X30, [X31 - 0x10]!
	0x036765E0 LDR X0, [X0 + 0x30]
	0x036765E4 CBZ X0, 0x36765FC
	0x036765E8 LDR X8, [X0]
	0x036765EC LDR X2, [X8 + 0x218]
	0x036765F0 LDR X1, [X8 + 0x220]
	0x036765F4 LDR X30, [X31], #0x10
	0x036765F8 BR X2
	0x036765FC BL 0x1C16F20
	0x03676600 STR X30, [X31 - 0x10]!
	0x03676604 LDR X0, [X0 + 0x30]
	0x03676608 CBZ X0, 0x3676620
	0x0367660C LDR X8, [X0]
	0x03676610 LDR X3, [X8 + 0x228]
	0x03676614 LDR X2, [X8 + 0x230]
	0x03676618 LDR X30, [X31], #0x10
	0x0367661C BR X3
	0x03676620 BL 0x1C16F20
	0x03676624 STR X30, [X31 - 0x10]!
	0x03676628 LDR X0, [X0 + 0x30]
	0x0367662C CBZ X0, 0x3676644
	0x03676630 LDR X8, [X0]
	0x03676634 LDR X2, [X8 + 0x238]
	0x03676638 LDR X1, [X8 + 0x240]
	0x0367663C LDR X30, [X31], #0x10
	0x03676640 BR X2
	0x03676644 BL 0x1C16F20
	0x03676648 STR X30, [X31 - 0x10]!
	0x0367664C LDR X0, [X0 + 0x30]
	0x03676650 CBZ X0, 0x3676668
	0x03676654 LDR X8, [X0]
	0x03676658 LDR X3, [X8 + 0x248]
	0x0367665C LDR X2, [X8 + 0x250]
	0x03676660 LDR X30, [X31], #0x10
	0x03676664 BR X3
	0x03676668 BL 0x1C16F20
	0x0367666C STR X30, [X31 - 0x20]!
	0x03676670 STP X20, X19, [X31 + 0x10]
	0x03676674 MOV X20, X0
	0x03676678 LDR X0, [X0 + 0x30]
	0x0367667C CBZ X0, 0x36766B8
	0x03676680 LDR X8, [X0]
	0x03676684 MOV W19, W1
	0x03676688 LDR X9, [X8 + 0x228]
	0x0367668C LDR X2, [X8 + 0x230]
	0x03676690 BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD6B000
	007 Move X21, 0xAC8000
	008 Move W8, [X22+1943]
	009 Move X21, [X21+2856]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAC8000
	017 Move X0, [X0+2856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1943], W8
	021 Move X8, [X19]
	022 Move X1, [X21]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move TEMP, X20
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {39}
	028 Compare W9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Compare W9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X19
	048 Move W2, W31
	049 Call 0x1C5D788
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X2, [X0+8]
	055 Move X0, X19
	056 Move W1, W31
	057 NotImplemented "Instruction BLR not yet implemented."
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X8, X8, X9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X2, [X0+8]
	063 Move W1, 3
	064 Move X0, X19
	065 NotImplemented "Instruction BLR not yet implemented."
	066 And W1, W20, 1
	067 Move X0, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X2, X31
	073 Move X30, [X31+48]
	074 Call Stream.Dispose, X0, X1
	075 Return 
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X22, X0
	078 Move X0, X22
	079 Call 0x3EB2AD0
	080 Move X21, [X0]
	081 Call 0x3EB2AE0
	082 And W1, W20, 1
	083 Move X0, X19
	084 Move X2, X31
	085 Call Stream.Dispose, X0, X1
	086 Compare X21, 0
	087 JumpIfNotEqual {95}
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return 
	094 Move X21, X31
	095 Move X0, X21
	096 Call 0x1C17F18
	097 Move X22, X0
	098 And W1, W20, 1
	099 Move X0, X19
	100 Move X2, X31
	101 Call Stream.Dispose, X0, X1
	102 Compare X21, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X22
	105 Call 0x1D2D690
	106 Move X0, X21
	107 Call 0x1C17F18
	108 Call 0x1991590

Method: System.Void System.Net.ICloseEx.CloseEx(System.Net.CloseExState closeState)

Disassembly:
	0x03676694 LDR X0, [X20 + 0x30]
	0x03676698 CBZ X0, 0x36766B8
	0x0367669C LDR X8, [X0]
	0x036766A0 MOV W1, W19
	0x036766A4 LDP X20, X19, [X31 + 0x10]
	0x036766A8 LDR X3, [X8 + 0x248]
	0x036766AC LDR X2, [X8 + 0x250]
	0x036766B0 LDR X30, [X31], #0x20
	0x036766B4 BR X3
	0x036766B8 BL 0x1C16F20
	0x036766BC STP X30, X23, [X31 - 0x30]!
	0x036766C0 STP X22, X21, [X31 + 0x10]
	0x036766C4 STP X20, X19, [X31 + 0x20]
	0x036766C8 MOV X22, X1
	0x036766CC MOV X1, X31
	0x036766D0 MOV X19, X4
	0x036766D4 MOV W20, W3
	0x036766D8 MOV W21, W2
	0x036766DC MOV X23, X0
	0x036766E0 BL 0x33BDD8C
	0x036766E4 STR X22, [X23 + 0x10]
	0x036766E8 STP W21, W20, [X23 + 0x18]
	0x036766EC STR X19, [X23 + 0x20]
	0x036766F0 LDP X20, X19, [X31 + 0x20]
	0x036766F4 LDP X22, X21, [X31 + 0x10]
	0x036766F8 LDP X30, X23, [X31], #0x30
	0x036766FC RET
	0x03676700 LDR W8, [X0 + 0x1C]
	0x03676704 ANDS W31, W8, W1, 0x0
	0x03676708 CSET W0, NE
	0x0367670C RET
	0x03676710 LDRB W8, [X0 + 0x1C]
	0x03676714 ANDS W31, W8, 0x3
	0x03676718 CSET W0, EQ
	0x0367671C RET
	0x03676720 LDRB W8, [X0 + 0x1C]
	0x03676724 UBFM W0, W8, 0x1, 0x1
	0x03676728 RET
	0x0367672C LDR W8, [X0 + 0x1C]
	0x03676730 AND W0, W8, 0x1
	0x03676734 RET
	0x03676738 LDRB W8, [X0 + 0x1C]
	0x0367673C UBFM W0, W8, 0x6, 0x6
	0x03676740 RET
	0x03676744 STR X30, [X31 - 0x30]!
	0x03676748 STP X22, X21, [X31 + 0x10]
	0x0367674C STP X20, X19, [X31 + 0x20]
	0x03676750 ADRP X20, 0xD6A000
	0x03676754 ADRP X21, 0xA7F000
	0x03676758 LDRB W8, [X20 + 0x79C]
	0x0367675C LDR X21, [X21 + 0xC48]
	0x03676760 MOV X19, X0
	0x03676764 TBNZ X8, 0x0, 0x3676788
	0x03676768 ADRP X0, 0xA7F000
	0x0367676C LDR X0, [X0 + 0xC48]
	0x03676770 BL 0x1C16CF4
	0x03676774 ADRP X0, 0xAC7000
	0x03676778 LDR X0, [X0 + 0xB68]
	0x0367677C BL 0x1C16CF4
	0x03676780 MOVZ W8, 0x1
	0x03676784 STRB W8, [X20 + 0x79C]
	0x03676788 LDR X0, [X21]
	0x0367678C LDR W8, [X0 + 0xE0]
	0x03676790 CBNZ W8, 0x3676798
	0x03676794 BL 0x1C16DFC
	0x03676798 MOV X0, X31
	0x0367679C BL 0x3338524
	0x036767A0 CBZ X19, 0x367689C
	0x036767A4 ADRP X20, 0xAC7000
	0x036767A8 LDR X20, [X20 + 0xB68]
	0x036767AC MOV X1, X0
	0x036767B0 MOV X0, X19
	0x036767B4 MOV X2, X31
	0x036767B8 BL 0x322B7DC
	0x036767BC LDR X8, [X20]
	0x036767C0 MOV X19, X0
	0x036767C4 LDR W9, [X8 + 0xE0]
	0x036767C8 CBNZ W9, 0x36767D8
	0x036767CC MOV X0, X8
	0x036767D0 BL 0x1C16DFC
	0x036767D4 LDR X8, [X20]
	0x036767D8 LDR X8, [X8 + 0xB8]
	0x036767DC LDR X21, [X8]
	0x036767E0 CBZ X21, 0x367689C
	0x036767E4 LDR W8, [X21 + 0x18]
	0x036767E8 CMP W8, 0x1
	0x036767EC B.LT 0x367682C
	0x036767F0 MOV W22, W31
	0x036767F4 CMP W22, W8
	0x036767F8 B.CS 0x36768A0
	0x036767FC ADD X8, X21, W22, 0x3, SXTW
	0x03676800 LDR X20, [X8 + 0x20]
	0x03676804 CBZ X20, 0x367689C
	0x03676808 LDR X1, [X20 + 0x10]
	0x0367680C MOV X0, X19
	0x03676810 MOV X2, X31
	0x03676814 BL 0x321BA08
	0x03676818 TBNZ X0, 0x0, 0x3676888
	0x0367681C LDR W8, [X21 + 0x18]
	0x03676820 ADD W22, W22, 0x1
	0x03676824 CMP W22, W8
	0x03676828 B.LT 0x36767F4
	0x0367682C ADRP X0, 0xA85000
	0x03676830 LDR X0, [X0 + 0x578]
	0x03676834 BL 0x1C16D08
	0x03676838 BL 0x1C16F10
	0x0367683C MOV X19, X0
	0x03676840 ADRP X0, 0xAC7000
	0x03676844 LDR X0, [X0 + 0xB70]
	0x03676848 BL 0x1C16D08
	0x0367684C MOV X20, X0
	0x03676850 ADRP X0, 0xA7E000
	0x03676854 LDR X0, [X0 + 0x6E8]
	0x03676858 BL 0x1C16D08
	0x0367685C MOV X2, X0
	0x03676860 MOV X0, X19
	0x03676864 MOV X1, X20
	0x03676868 MOV X3, X31
	0x0367686C BL 0x330E16C
	0x03676870 ADRP X0, 0xAC7000
	0x03676874 LDR X0, [X0 + 0xB78]
	0x03676878 BL 0x1C16D08
	0x0367687C MOV X1, X0
	0x03676880 MOV X0, X19
	0x03676884 BL 0x1C16DEC
	0x03676888 MOV X0, X20
	0x0367688C LDP X20, X19, [X31 + 0x20]
	0x03676890 LDP X22, X21, [X31 + 0x10]
	0x03676894 LDR X30, [X31], #0x30
	0x03676898 RET
	0x0367689C BL 0x1C16F20
	0x036768A0 BL 0x1C16F28
	0x036768A4 STR X30, [X31 - 0x40]!
	0x036768A8 STP X24, X23, [X31 + 0x10]
	0x036768AC STP X22, X21, [X31 + 0x20]
	0x036768B0 STP X20, X19, [X31 + 0x30]
	0x036768B4 ADRP X19, 0xD6A000
	0x036768B8 ADRP X23, 0xAC7000
	0x036768BC ADRP X21, 0xAC7000
	0x036768C0 ADRP X20, 0xAC7000
	0x036768C4 ADRP X22, 0xAA6000
	0x036768C8 LDRB W8, [X19 + 0x79D]
	0x036768CC LDR X23, [X23 + 0xB80]
	0x036768D0 LDR X21, [X21 + 0xB68]
	0x036768D4 LDR X20, [X20 + 0xB88]
	0x036768D8 LDR X22, [X22 + 0x4D0]
	0x036768DC TBNZ X8, 0x0, 0x36769A8
	0x036768E0 ADRP X0, 0xAC7000
	0x036768E4 LDR X0, [X0 + 0xB80]
	0x036768E8 BL 0x1C16CF4
	0x036768EC ADRP X0, 0xAC7000
	0x036768F0 LDR X0, [X0 + 0xB68]
	0x036768F4 BL 0x1C16CF4
	0x036768F8 ADRP X0, 0xAC7000
	0x036768FC LDR X0, [X0 + 0xA20]
	0x03676900 BL 0x1C16CF4
	0x03676904 ADRP X0, 0xAC7000
	0x03676908 LDR X0, [X0 + 0xB90]
	0x0367690C BL 0x1C16CF4
	0x03676910 ADRP X0, 0xAC7000
	0x03676914 LDR X0, [X0 + 0xB88]
	0x03676918 BL 0x1C16CF4
	0x0367691C ADRP X0, 0xAA6000
	0x03676920 LDR X0, [X0 + 0x4D0]
	0x03676924 BL 0x1C16CF4
	0x03676928 ADRP X0, 0xAC7000
	0x0367692C LDR X0, [X0 + 0xB98]
	0x03676930 BL 0x1C16CF4
	0x03676934 ADRP X0, 0xAC7000
	0x03676938 LDR X0, [X0 + 0xBA0]
	0x0367693C BL 0x1C16CF4
	0x03676940 ADRP X0, 0xAC7000
	0x03676944 LDR X0, [X0 + 0xBA8]
	0x03676948 BL 0x1C16CF4
	0x0367694C ADRP X0, 0xAC7000
	0x03676950 LDR X0, [X0 + 0xBB0]
	0x03676954 BL 0x1C16CF4
	0x03676958 ADRP X0, 0xAC7000
	0x0367695C LDR X0, [X0 + 0xBB8]
	0x03676960 BL 0x1C16CF4
	0x03676964 ADRP X0, 0xAC7000
	0x03676968 LDR X0, [X0 + 0xBC0]
	0x0367696C BL 0x1C16CF4
	0x03676970 ADRP X0, 0xAC7000
	0x03676974 LDR X0, [X0 + 0xBC8]
	0x03676978 BL 0x1C16CF4
	0x0367697C ADRP X0, 0xAC7000
	0x03676980 LDR X0, [X0 + 0xBD0]
	0x03676984 BL 0x1C16CF4
	0x03676988 ADRP X0, 0xAC7000
	0x0367698C LDR X0, [X0 + 0xBD8]
	0x03676990 BL 0x1C16CF4
	0x03676994 ADRP X0, 0xAC7000
	0x03676998 LDR X0, [X0 + 0xBE0]
	0x0367699C BL 0x1C16CF4
	0x036769A0 MOVZ W8, 0x1
	0x036769A4 STRB W8, [X19 + 0x79D]
	0x036769A8 LDR X0, [X23]
	0x036769AC MOVZ W1, 0xD
	0x036769B0 BL 0x1C16D6C
	0x036769B4 LDR X8, [X21]
	0x036769B8 MOV X19, X0
	0x036769BC MOV X0, X8
	0x036769C0 BL 0x1C16F10
	0x036769C4 LDR X23, [X20]
	0x036769C8 LDR X24, [X22]
	0x036769CC MOV X1, X31
	0x036769D0 MOV X20, X0
	0x036769D4 BL 0x33BDD8C
	0x036769D8 ADRP X8, 0xFFFFFFFFFD477000
	0x036769DC LDR V0, [X8 + 0xA30]
	0x036769E0 STR X23, [X20 + 0x10]
	0x036769E4 STR X24, [X20 + 0x20]
	0x036769E8 STR D0, [X20 + 0x18]
	0x036769EC CBZ X19, 0x3676E68
	0x036769F0 LDR X8, [X19]
	0x036769F4 MOV X0, X20
	0x036769F8 LDR X1, [X8 + 0x40]
	0x036769FC BL 0x1C16E00
	0x03676A00 CBZ X0, 0x3676E58
	0x03676A04 LDR W8, [X19 + 0x18]
	0x03676A08 CBZ W8, 0x3676E64
	0x03676A0C STR X20, [X19 + 0x20]
	0x03676A10 LDR X0, [X21]
	0x03676A14 ADRP X20, 0xAC7000
	0x03676A18 LDR X20, [X20 + 0xB90]
	0x03676A1C BL 0x1C16F10
	0x03676A20 LDR X23, [X20]
	0x03676A24 LDR X24, [X22]
	0x03676A28 MOV X1, X31
	0x03676A2C MOV X20, X0
	0x03676A30 BL 0x33BDD8C
	0x03676A34 ADRP X8, 0xFFFFFFFFFD478000
	0x03676A38 LDR V0, [X8 + 0x3A0]
	0x03676A3C STR X23, [X20 + 0x10]
	0x03676A40 STR X24, [X20 + 0x20]
	0x03676A44 MOV X0, X20
	0x03676A48 STR D0, [X20 + 0x18]
	0x03676A4C LDR X8, [X19]
	0x03676A50 LDR X1, [X8 + 0x40]
	0x03676A54 BL 0x1C16E00
	0x03676A58 CBZ X0, 0x3676E58
	0x03676A5C LDR W8, [X19 + 0x18]
	0x03676A60 CMP W8, 0x1
	0x03676A64 B.LS 0x3676E64
	0x03676A68 STR X20, [X19 + 0x28]
	0x03676A6C LDR X0, [X21]
	0x03676A70 ADRP X20, 0xAC7000
	0x03676A74 LDR X20, [X20 + 0xBA8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD6B000
	009 Move X23, 0xAC8000
	010 Move W8, [X21+1944]
	011 Move X23, [X23+1128]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xAC8000
	019 Move X0, [X0+2864]
	020 Call 0x1C17CF4
	021 Move X0, 0xAC8000
	022 Move X0, [X0+1128]
	023 Call 0x1C17CF4
	024 Move X0, 0xA7E000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xAC8000
	028 Move X0, [X0+2872]
	029 Call 0x1C17CF4
	030 Move X0, 0xAC8000
	031 Move X0, [X0+2880]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1944], W8
	035 Move X0, [X23]
	036 Move [X31+12], W31
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call NetEventSource.get_IsEnabled
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {92}
	046 Move X8, 0xA7E000
	047 Move X8, [X8+2512]
	048 Move X22, 0xAC8000
	049 Move W1, 1
	050 Move X0, [X8]
	051 Move X22, [X22+2864]
	052 Call 0x1C17D6C
	053 Move X21, X0
	054 Move X0, [X22]
	055 Add X1, X31, 8
	056 Move [X31+8], W20
	057 Call 0x1C17E04
	058 Compare X21, 0
	059 JumpIfEqual {158}
	060 Move X22, X0
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, [X21]
	064 Move X0, X22
	065 Move X1, [X8+64]
	066 Call 0x1C17E00
	067 Compare X0, 0
	068 JumpIfEqual {162}
	069 Move W8, [X21+24]
	070 Compare W8, 0
	071 JumpIfEqual {159}
	072 Move [X21+32], X22
	073 Move X8, 0xAC8000
	074 Move X8, [X8+2872]
	075 Move X1, X21
	076 Move X2, X31
	077 Move X0, [X8]
	078 Call FormattableStringFactory.Create, X0, X1
	079 Move X8, [X23]
	080 Move X21, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X8, 0xAC8000
	087 Move X8, [X8+2880]
	088 Move X0, X19
	089 Move X1, X21
	090 Move X2, [X8]
	091 Call NetEventSource.Info, X0, X1, X2
	092 Move [X31+12], W31
	093 Add X1, X31, 12
	094 Move X0, X19
	095 Move X2, X31
	096 Call Monitor.Enter, X0, X1
	097 Move W8, [X19+59]
	098 Compare W8, 0
	099 JumpIfEqual {102}
	100 Move X22, X31
	101 Move W21, 4
	102 Move W8, 1
	103 Move X22, X31
	104 NotImplemented "Instruction STRH not yet implemented."
	105 Move [X19+59], W8
	106 Move W21, 5
	107 Move W8, [X31+12]
	108 Compare W8, 0
	109 JumpIfEqual {113}
	110 Move X0, X19
	111 Move X1, X31
	112 Call Monitor.Exit, X0
	113 Compare X22, 0
	114 JumpIfNotEqual {153}
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Compare W21, 0
	117 JumpIfNotEqual {145}
	118 Move X0, [X19+48]
	119 Move TEMP, X20
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {131}
	123 Compare X0, 0
	124 JumpIfEqual {160}
	125 Move TEMP, 0
	126 Not TEMP
	127 Move W1, TEMP
	128 Move X2, X31
	129 Call NetworkStream.Close, X0, X1
	130 Move X21, X31
	131 Compare X0, 0
	132 JumpIfEqual {161}
	133 Move W1, W31
	134 Move X2, X31
	135 Call NetworkStream.Close, X0, X1
	136 Move X21, X31
	137 Move X0, [X19+40]
	138 Compare X0, 0
	139 JumpIfEqual {155}
	140 Move W1, W20
	141 Move X2, X31
	142 Call FtpWebRequest.DataStreamClosed, X0, X1
	143 Compare X21, 0
	144 JumpIfNotEqual {156}
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X30, [X31+16]
	150 Move X23, [X31+24]
	151 Add X31, X31, 64
	152 Return 
	153 Move X0, X22
	154 Call 0x1C17F18
	155 Call 0x1C17F20
	156 Move X0, X21
	157 Call 0x1C17F18
	158 Call 0x1C17F20
	159 Call 0x1C17F28
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 Call 0x1C17F44
	163 Move X1, X31
	164 Call 0x1C17DEC
	165 Move X21, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, X21
	168 Call 0x3EB2AD0
	169 Move X8, [X0]
	170 Move [X31], X8
	171 Call 0x3EB2AE0
	172 Move X21, [X31]
	173 Move [X31], X31
	174 Move X0, [X19+40]
	175 Move W22, W1
	176 Compare X0, 0
	177 JumpIfEqual {186}
	178 Move W1, W20
	179 Move X2, X31
	180 Call FtpWebRequest.DataStreamClosed, X0, X1
	181 Move X8, [X31]
	182 Compare X8, 0
	183 JumpIfEqual {209}
	184 Move X0, [X31]
	185 Call 0x1C17F18
	186 Call 0x1C17F20
	187 Move X21, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X21, X0
	190 Move X0, X21
	191 Call 0x3EB2AD0
	192 Move X22, [X0]
	193 Call 0x3EB2AE0
	194 Move W21, W31
	195 Move X22, X31
	196 Move X21, X0
	197 Move W8, [X31+12]
	198 Compare W8, 0
	199 JumpIfEqual {203}
	200 Move X0, X19
	201 Move X1, X31
	202 Call Monitor.Exit, X0
	203 Compare X22, 0
	204 JumpIfEqual {274}
	205 Move X0, X22
	206 Call 0x1C17F18
	207 Move X22, X1
	208 Move X21, X0
	209 Move W8, 1
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X0, X21
	212 Call 0x3EB2AD0
	213 Move X21, X0
	214 Move X0, 0xA7E000
	215 Move X0, [X0+2000]
	216 Call 0x1C17D08
	217 Move X8, [X21]
	218 Move X1, [X8]
	219 Call 0x1C18270
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {264}
	224 Move X21, [X21]
	225 Call 0x3EB2AE0
	226 Move X0, 0xAA9000
	227 Move X0, [X0+816]
	228 Call 0x1C17D08
	229 Compare X21, 0
	230 JumpIfEqual {239}
	231 Move X8, [X21]
	232 Move W9, [X0+304]
	233 Move W10, [X8+304]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X8, [X8+200]
	236 Add X8, X8, X9
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move TEMP, X20
	240 And TEMP, TEMP, 2
	241 Compare TEMP, 2
	242 JumpIfEqual {145}
	243 Move X0, X21
	244 Call 0x1C17F18
	245 Move X0, 0xAC8000
	246 Move X22, [X21+144]
	247 Move X0, [X0+2888]
	248 Call 0x1C17D08
	249 Compare X22, 0
	250 JumpIfEqual {239}
	251 Move X8, [X22]
	252 Move W9, [X0+304]
	253 Move W10, [X8+304]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X8, [X8+200]
	256 Add X8, X8, X9
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move W8, [X19+58]
	260 Compare W8, 0
	261 JumpIfNotEqual {239}
	262 Move W8, [X22+56]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W0, 8
	265 Call 0x3EB2AF0
	266 Move X8, [X21]
	267 Move [X0], X8
	268 Move X1, 0x83F000
	269 Add X1, X1, 3672
	270 Move X2, X31
	271 Call 0x3EB2B00
	272 Move X21, X0
	273 Call 0x3EB2AE0
	274 Move X0, X21
	275 Call 0x1D2D690
	276 Call 0x1991590

Method: System.Void CheckError()

Disassembly:
	0x03676A78 BL 0x1C16F10
	0x03676A7C LDR X23, [X20]
	0x03676A80 LDR X22, [X22]
	0x03676A84 MOV X1, X31
	0x03676A88 MOV X20, X0
	0x03676A8C BL 0x33BDD8C
	0x03676A90 ADRP X8, 0xFFFFFFFFFD477000
	0x03676A94 LDR V0, [X8 + 0xCD0]
	0x03676A98 STR X23, [X20 + 0x10]
	0x03676A9C STR X22, [X20 + 0x20]
	0x03676AA0 MOV X0, X20
	0x03676AA4 STR D0, [X20 + 0x18]
	0x03676AA8 LDR X8, [X19]
	0x03676AAC LDR X1, [X8 + 0x40]
	0x03676AB0 BL 0x1C16E00
	0x03676AB4 CBZ X0, 0x3676E58
	0x03676AB8 LDR W8, [X19 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+40]
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Move W8, [X8+137]
	007 Compare W8, 0
	008 JumpIfNotEqual {13}
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 
	012 Call 0x1C17F20
	013 Move X0, X31
	014 Call ExceptionHelper.get_RequestAbortedException
	015 Move X19, X0
	016 Move X0, 0xAC8000
	017 Move X0, [X0+2896]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Call 0x1C17DEC

Method: System.Boolean get_CanRead()

Disassembly:
	0x03676ABC CMP W8, 0x2
	0x03676AC0 B.LS 0x3676E64

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: System.Boolean get_CanSeek()

Disassembly:
	0x03676AC4 STR X20, [X19 + 0x30]
	0x03676AC8 LDR X0, [X21]
	0x03676ACC ADRP X20, 0xAC7000
	0x03676AD0 LDR X20, [X20 + 0xBC8]
	0x03676AD4 BL 0x1C16F10
	0x03676AD8 LDR X22, [X20]
	0x03676ADC MOV X1, X31
	0x03676AE0 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+440]
	007 Move X1, [X8+448]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean get_CanWrite()

Disassembly:
	0x03676AE4 BL 0x33BDD8C
	0x03676AE8 ADRP X8, 0xFFFFFFFFFD477000

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Int64 get_Length()

Disassembly:
	0x03676AEC LDR V0, [X8 + 0xDC0]
	0x03676AF0 STR X22, [X20 + 0x10]
	0x03676AF4 STR X31, [X20 + 0x20]
	0x03676AF8 MOV X0, X20
	0x03676AFC STR D0, [X20 + 0x18]
	0x03676B00 LDR X8, [X19]
	0x03676B04 LDR X1, [X8 + 0x40]
	0x03676B08 BL 0x1C16E00

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+488]
	007 Move X1, [X8+496]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int64 get_Position()

Disassembly:
	0x03676B0C CBZ X0, 0x3676E58
	0x03676B10 LDR W8, [X19 + 0x18]
	0x03676B14 CMP W8, 0x3
	0x03676B18 B.LS 0x3676E64
	0x03676B1C STR X20, [X19 + 0x38]
	0x03676B20 LDR X0, [X21]
	0x03676B24 ADRP X20, 0xAC7000
	0x03676B28 LDR X20, [X20 + 0xBD8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+504]
	007 Move X1, [X8+512]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x03676B2C BL 0x1C16F10
	0x03676B30 LDR X22, [X20]
	0x03676B34 MOV X1, X31
	0x03676B38 MOV X20, X0
	0x03676B3C BL 0x33BDD8C
	0x03676B40 ADRP X8, 0xFFFFFFFFFD478000
	0x03676B44 LDR V0, [X8 + 0x408]
	0x03676B48 STR X22, [X20 + 0x10]
	0x03676B4C STR X31, [X20 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+520]
	007 Move X2, [X8+528]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x03676B50 MOV X0, X20
	0x03676B54 STR D0, [X20 + 0x18]
	0x03676B58 LDR X8, [X19]
	0x03676B5C LDR X1, [X8 + 0x40]
	0x03676B60 BL 0x1C16E00
	0x03676B64 CBZ X0, 0x3676E58
	0x03676B68 LDR W8, [X19 + 0x18]
	0x03676B6C CMP W8, 0x4
	0x03676B70 B.LS 0x3676E64
	0x03676B74 STR X20, [X19 + 0x40]
	0x03676B78 LDR X0, [X21]
	0x03676B7C ADRP X20, 0xAC7000
	0x03676B80 LDR X20, [X20 + 0xBB0]
	0x03676B84 BL 0x1C16F10
	0x03676B88 LDR X22, [X20]
	0x03676B8C MOV X1, X31
	0x03676B90 MOV X20, X0
	0x03676B94 BL 0x33BDD8C
	0x03676B98 ADRP X8, 0xFFFFFFFFFD477000
	0x03676B9C LDR V0, [X8 + 0xE60]
	0x03676BA0 STR X22, [X20 + 0x10]
	0x03676BA4 STR X31, [X20 + 0x20]
	0x03676BA8 MOV X0, X20
	0x03676BAC STR D0, [X20 + 0x18]
	0x03676BB0 LDR X8, [X19]
	0x03676BB4 LDR X1, [X8 + 0x40]
	0x03676BB8 BL 0x1C16E00
	0x03676BBC CBZ X0, 0x3676E58
	0x03676BC0 LDR W8, [X19 + 0x18]
	0x03676BC4 CMP W8, 0x5
	0x03676BC8 B.LS 0x3676E64
	0x03676BCC STR X20, [X19 + 0x48]
	0x03676BD0 LDR X0, [X21]
	0x03676BD4 ADRP X20, 0xAC7000
	0x03676BD8 LDR X20, [X20 + 0xBB8]
	0x03676BDC BL 0x1C16F10
	0x03676BE0 LDR X22, [X20]
	0x03676BE4 MOV X1, X31
	0x03676BE8 MOV X20, X0
	0x03676BEC BL 0x33BDD8C
	0x03676BF0 ADRP X8, 0xFFFFFFFFFD477000
	0x03676BF4 LDR V0, [X8 + 0x590]
	0x03676BF8 STR X22, [X20 + 0x10]
	0x03676BFC STR X31, [X20 + 0x20]
	0x03676C00 MOV X0, X20
	0x03676C04 STR D0, [X20 + 0x18]
	0x03676C08 LDR X8, [X19]
	0x03676C0C LDR X1, [X8 + 0x40]
	0x03676C10 BL 0x1C16E00
	0x03676C14 CBZ X0, 0x3676E58
	0x03676C18 LDR W8, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W2
	006 Move X21, X1
	007 Move X19, X0
	008 Call FtpDataStream.CheckError, X0
	009 Move X0, [X19+48]
	010 Compare X0, 0
	011 JumpIfEqual {23}
	012 Move X8, [X0]
	013 Move X9, [X8+824]
	014 Move X3, [X8+832]
	015 Move X1, X21
	016 Move W2, W20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return X0
	023 Call 0x1C17F20
	024 Move X20, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X20
	027 Call 0x3EB2AD0
	028 Move X20, X0
	029 Move X0, 0xA84000
	030 Move X0, [X0+3264]
	031 Call 0x1C17D08
	032 Move X8, [X20]
	033 Move X1, [X8]
	034 Call 0x1C18270
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {45}
	039 Move X20, [X20]
	040 Call 0x3EB2AE0
	041 Move X0, X19
	042 Call FtpDataStream.CheckError, X0
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Move W0, 8
	046 Call 0x3EB2AF0
	047 Move X8, [X20]
	048 Move [X0], X8
	049 Move X1, 0x83F000
	050 Add X1, X1, 3672
	051 Move X2, X31
	052 Call 0x3EB2B00
	053 Move X20, X0
	054 Call 0x3EB2AE0
	055 Move X0, X20
	056 Call 0x1D2D690
	057 Call 0x1991590

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03676C1C CMP W8, 0x6
	0x03676C20 B.LS 0x3676E64
	0x03676C24 STR X20, [X19 + 0x50]
	0x03676C28 LDR X0, [X21]
	0x03676C2C ADRP X20, 0xAC7000
	0x03676C30 LDR X20, [X20 + 0xBA0]
	0x03676C34 BL 0x1C16F10
	0x03676C38 LDR X22, [X20]
	0x03676C3C MOV X1, X31
	0x03676C40 MOV X20, X0
	0x03676C44 BL 0x33BDD8C
	0x03676C48 ADRP X8, 0xFFFFFFFFFD478000
	0x03676C4C LDR V0, [X8 + 0x2F0]
	0x03676C50 STR X22, [X20 + 0x10]
	0x03676C54 STR X31, [X20 + 0x20]
	0x03676C58 MOV X0, X20
	0x03676C5C STR D0, [X20 + 0x18]
	0x03676C60 LDR X8, [X19]
	0x03676C64 LDR X1, [X8 + 0x40]
	0x03676C68 BL 0x1C16E00
	0x03676C6C CBZ X0, 0x3676E58
	0x03676C70 LDR W8, [X19 + 0x18]
	0x03676C74 CMP W8, 0x7
	0x03676C78 B.LS 0x3676E64
	0x03676C7C STR X20, [X19 + 0x58]
	0x03676C80 LDR X0, [X21]
	0x03676C84 ADRP X20, 0xAC7000
	0x03676C88 LDR X20, [X20 + 0xBC0]
	0x03676C8C BL 0x1C16F10
	0x03676C90 LDR X22, [X20]
	0x03676C94 MOV X1, X31
	0x03676C98 MOV X20, X0
	0x03676C9C BL 0x33BDD8C
	0x03676CA0 ADRP X8, 0xFFFFFFFFFD478000
	0x03676CA4 LDR V0, [X8 + 0x450]
	0x03676CA8 STR X22, [X20 + 0x10]
	0x03676CAC STR X31, [X20 + 0x20]
	0x03676CB0 MOV X0, X20
	0x03676CB4 STR D0, [X20 + 0x18]
	0x03676CB8 LDR X8, [X19]
	0x03676CBC LDR X1, [X8 + 0x40]
	0x03676CC0 BL 0x1C16E00
	0x03676CC4 CBZ X0, 0x3676E58
	0x03676CC8 LDR W8, [X19 + 0x18]
	0x03676CCC CMP W8, 0x8
	0x03676CD0 B.LS 0x3676E64
	0x03676CD4 STR X20, [X19 + 0x60]
	0x03676CD8 LDR X0, [X21]
	0x03676CDC ADRP X20, 0xAC7000
	0x03676CE0 LDR X20, [X20 + 0xBD0]
	0x03676CE4 BL 0x1C16F10
	0x03676CE8 LDR X22, [X20]
	0x03676CEC MOV X1, X31
	0x03676CF0 MOV X20, X0
	0x03676CF4 BL 0x33BDD8C
	0x03676CF8 ADRP X8, 0xFFFFFFFFFD478000
	0x03676CFC LDR V0, [X8 + 0x2F8]
	0x03676D00 STR X22, [X20 + 0x10]
	0x03676D04 STR X31, [X20 + 0x20]
	0x03676D08 MOV X0, X20
	0x03676D0C STR D0, [X20 + 0x18]
	0x03676D10 LDR X8, [X19]
	0x03676D14 LDR X1, [X8 + 0x40]
	0x03676D18 BL 0x1C16E00
	0x03676D1C CBZ X0, 0x3676E58

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W3
	007 Move W21, W2
	008 Move X22, X1
	009 Move X19, X0
	010 Call FtpDataStream.CheckError, X0
	011 Move X0, [X19+48]
	012 Compare X0, 0
	013 JumpIfEqual {38}
	014 Move X8, [X0]
	015 Move X9, [X8+856]
	016 Move X4, [X8+864]
	017 Move X1, X22
	018 Move W2, W21
	019 Move W3, W20
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move W20, W0
	022 Compare W0, 0
	023 JumpIfNotEqual {31}
	024 Move X8, [X19]
	025 Move W9, 1
	026 Move [X19+58], W9
	027 Move X0, X19
	028 Move X9, [X8+632]
	029 Move X1, [X8+640]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move W0, W20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0
	038 Call 0x1C17F20
	039 Move X20, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X20
	042 Call 0x3EB2AD0
	043 Move X20, X0
	044 Move X0, 0xA84000
	045 Move X0, [X0+3264]
	046 Call 0x1C17D08
	047 Move X8, [X20]
	048 Move X1, [X8]
	049 Call 0x1C18270
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {60}
	054 Move X20, [X20]
	055 Call 0x3EB2AE0
	056 Move X0, X19
	057 Call FtpDataStream.CheckError, X0
	058 Move X0, X20
	059 Call 0x1C17F18
	060 Move W0, 8
	061 Call 0x3EB2AF0
	062 Move X8, [X20]
	063 Move [X0], X8
	064 Move X1, 0x83F000
	065 Add X1, X1, 3672
	066 Move X2, X31
	067 Call 0x3EB2B00
	068 Move X20, X0
	069 Call 0x3EB2AE0
	070 Move X0, X20
	071 Call 0x1D2D690
	072 Call 0x1991590

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03676D20 LDR W8, [X19 + 0x18]
	0x03676D24 CMP W8, 0x9
	0x03676D28 B.LS 0x3676E64
	0x03676D2C STR X20, [X19 + 0x68]
	0x03676D30 LDR X0, [X21]
	0x03676D34 ADRP X20, 0xAC7000
	0x03676D38 LDR X20, [X20 + 0xB98]
	0x03676D3C BL 0x1C16F10
	0x03676D40 LDR X22, [X20]
	0x03676D44 MOV X1, X31
	0x03676D48 MOV X20, X0
	0x03676D4C BL 0x33BDD8C
	0x03676D50 ADRP X8, 0xFFFFFFFFFD478000
	0x03676D54 LDR V0, [X8 + 0x18]
	0x03676D58 STR X22, [X20 + 0x10]
	0x03676D5C STR X31, [X20 + 0x20]
	0x03676D60 MOV X0, X20
	0x03676D64 STR D0, [X20 + 0x18]
	0x03676D68 LDR X8, [X19]
	0x03676D6C LDR X1, [X8 + 0x40]
	0x03676D70 BL 0x1C16E00
	0x03676D74 CBZ X0, 0x3676E58
	0x03676D78 LDR W8, [X19 + 0x18]
	0x03676D7C CMP W8, 0xA
	0x03676D80 B.LS 0x3676E64
	0x03676D84 STR X20, [X19 + 0x70]
	0x03676D88 LDR X0, [X21]
	0x03676D8C ADRP X20, 0xAC7000
	0x03676D90 LDR X20, [X20 + 0xBE0]
	0x03676D94 BL 0x1C16F10
	0x03676D98 LDR X22, [X20]
	0x03676D9C MOV X1, X31
	0x03676DA0 MOV X20, X0
	0x03676DA4 BL 0x33BDD8C
	0x03676DA8 ADRP X8, 0xFFFFFFFFFD477000
	0x03676DAC LDR V0, [X8 + 0x3F0]
	0x03676DB0 STR X22, [X20 + 0x10]
	0x03676DB4 STR X31, [X20 + 0x20]
	0x03676DB8 MOV X0, X20
	0x03676DBC STR D0, [X20 + 0x18]
	0x03676DC0 LDR X8, [X19]
	0x03676DC4 LDR X1, [X8 + 0x40]
	0x03676DC8 BL 0x1C16E00
	0x03676DCC CBZ X0, 0x3676E58
	0x03676DD0 LDR W8, [X19 + 0x18]
	0x03676DD4 CMP W8, 0xB
	0x03676DD8 B.LS 0x3676E64
	0x03676DDC STR X20, [X19 + 0x78]
	0x03676DE0 LDR X0, [X21]
	0x03676DE4 ADRP X20, 0xAC7000
	0x03676DE8 LDR X20, [X20 + 0xA20]
	0x03676DEC BL 0x1C16F10
	0x03676DF0 LDR X22, [X20]
	0x03676DF4 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W3
	007 Move W21, W2
	008 Move X22, X1
	009 Move X19, X0
	010 Call FtpDataStream.CheckError, X0
	011 Move X0, [X19+48]
	012 Compare X0, 0
	013 JumpIfEqual {27}
	014 Move X8, [X0]
	015 Move X9, [X8+904]
	016 Move X4, [X8+912]
	017 Move X1, X22
	018 Move W2, W21
	019 Move W3, W20
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 Return 
	027 Call 0x1C17F20
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, X0
	030 Move X0, X20
	031 Call 0x3EB2AD0
	032 Move X20, X0
	033 Move X0, 0xA84000
	034 Move X0, [X0+3264]
	035 Call 0x1C17D08
	036 Move X8, [X20]
	037 Move X1, [X8]
	038 Call 0x1C18270
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {49}
	043 Move X20, [X20]
	044 Call 0x3EB2AE0
	045 Move X0, X19
	046 Call FtpDataStream.CheckError, X0
	047 Move X0, X20
	048 Call 0x1C17F18
	049 Move W0, 8
	050 Call 0x3EB2AF0
	051 Move X8, [X20]
	052 Move [X0], X8
	053 Move X1, 0x83F000
	054 Add X1, X1, 3672
	055 Move X2, X31
	056 Call 0x3EB2B00
	057 Move X20, X0
	058 Call 0x3EB2AE0
	059 Move X0, X20
	060 Call 0x1D2D690
	061 Call 0x1991590

Method: System.Void AsyncReadCallback(System.IAsyncResult ar)

Disassembly:
	0x03676DF8 MOV X20, X0
	0x03676DFC BL 0x33BDD8C
	0x03676E00 ADRP X8, 0xFFFFFFFFFD477000
	0x03676E04 LDR V0, [X8 + 0xAC8]
	0x03676E08 STR X22, [X20 + 0x10]
	0x03676E0C STR X31, [X20 + 0x20]
	0x03676E10 MOV X0, X20
	0x03676E14 STR D0, [X20 + 0x18]
	0x03676E18 LDR X8, [X19]
	0x03676E1C LDR X1, [X8 + 0x40]
	0x03676E20 BL 0x1C16E00
	0x03676E24 CBZ X0, 0x3676E58
	0x03676E28 LDR W8, [X19 + 0x18]
	0x03676E2C CMP W8, 0xC
	0x03676E30 B.LS 0x3676E64
	0x03676E34 STR X20, [X19 + 0x80]
	0x03676E38 LDR X8, [X21]
	0x03676E3C LDP X22, X21, [X31 + 0x20]
	0x03676E40 LDP X24, X23, [X31 + 0x10]
	0x03676E44 LDR X8, [X8 + 0xB8]
	0x03676E48 STR X19, [X8]
	0x03676E4C LDP X20, X19, [X31 + 0x30]
	0x03676E50 LDR X30, [X31], #0x40
	0x03676E54 RET
	0x03676E58 BL 0x1C16F44
	0x03676E5C MOV X1, X31
	0x03676E60 BL 0x1C16DEC
	0x03676E64 BL 0x1C16F28
	0x03676E68 BL 0x1C16F20
	0x03676E6C LDR X0, [X0 + 0x38]
	0x03676E70 RET
	0x03676E74 STR X30, [X31 - 0x10]!
	0x03676E78 LDR X8, [X0 + 0x38]
	0x03676E7C CBZ X8, 0x3676E8C
	0x03676E80 LDR X0, [X8 + 0x10]
	0x03676E84 LDR X30, [X31], #0x10
	0x03676E88 RET
	0x03676E8C BL 0x1C16F20
	0x03676E90 STP X30, X21, [X31 - 0x20]!
	0x03676E94 STP X20, X19, [X31 + 0x10]
	0x03676E98 ADRP X21, 0xD6A000
	0x03676E9C LDRB W8, [X21 + 0x79E]
	0x03676EA0 MOV X20, X1
	0x03676EA4 MOV X19, X0
	0x03676EA8 TBNZ X8, 0x0, 0x3676EC0
	0x03676EAC ADRP X0, 0xAC7000
	0x03676EB0 LDR X0, [X0 + 0xB68]
	0x03676EB4 BL 0x1C16CF4
	0x03676EB8 MOVZ W8, 0x1
	0x03676EBC STRB W8, [X21 + 0x79E]
	0x03676EC0 MOV X0, X20
	0x03676EC4 MOV X1, X31
	0x03676EC8 BL 0x32277A8
	0x03676ECC TBNZ X0, 0x0, 0x3676F44
	0x03676ED0 LDRB W8, [X19 + 0x48]
	0x03676ED4 CBNZ W8, 0x3676F10
	0x03676ED8 LDRB W8, [X19 + 0x49]
	0x03676EDC CBNZ W8, 0x3676F10
	0x03676EE0 ADRP X8, 0xAC7000
	0x03676EE4 LDR X8, [X8 + 0xB68]
	0x03676EE8 LDR X0, [X8]
	0x03676EEC LDR W8, [X0 + 0xE0]
	0x03676EF0 CBNZ W8, 0x3676EF8
	0x03676EF4 BL 0x1C16DFC
	0x03676EF8 MOV X0, X20
	0x03676EFC BL 0x3676744
	0x03676F00 STR X0, [X19 + 0x38]
	0x03676F04 LDP X20, X19, [X31 + 0x10]
	0x03676F08 LDP X30, X21, [X31], #0x20
	0x03676F0C RET
	0x03676F10 ADRP X0, 0xA7D000
	0x03676F14 LDR X0, [X0 + 0x5B0]
	0x03676F18 BL 0x1C16D08
	0x03676F1C BL 0x1C16F10
	0x03676F20 MOV X19, X0
	0x03676F24 ADRP X0, 0xAC7000
	0x03676F28 LDR X0, [X0 + 0xBE8]
	0x03676F2C BL 0x1C16D08
	0x03676F30 MOV X1, X0
	0x03676F34 MOV X0, X19
	0x03676F38 MOV X2, X31
	0x03676F3C BL 0x337DF1C
	0x03676F40 B 0x3676F88
	0x03676F44 ADRP X0, 0xA85000
	0x03676F48 LDR X0, [X0 + 0x578]
	0x03676F4C BL 0x1C16D08
	0x03676F50 BL 0x1C16F10
	0x03676F54 MOV X19, X0
	0x03676F58 ADRP X0, 0xAC7000
	0x03676F5C LDR X0, [X0 + 0xBF0]
	0x03676F60 BL 0x1C16D08
	0x03676F64 MOV X20, X0
	0x03676F68 ADRP X0, 0xA87000
	0x03676F6C LDR X0, [X0 + 0xEC8]
	0x03676F70 BL 0x1C16D08
	0x03676F74 MOV X2, X0
	0x03676F78 MOV X0, X19
	0x03676F7C MOV X1, X20
	0x03676F80 MOV X3, X31
	0x03676F84 BL 0x330E16C
	0x03676F88 ADRP X0, 0xAC7000
	0x03676F8C LDR X0, [X0 + 0xBF8]
	0x03676F90 BL 0x1C16D08
	0x03676F94 MOV X1, X0
	0x03676F98 MOV X0, X19
	0x03676F9C BL 0x1C16DEC
	0x03676FA0 B 0x3676FA4
	0x03676FA4 MOV X19, X0
	0x03676FA8 CMP W1, 0x1
	0x03676FAC B.NE 0x3677024
	0x03676FB0 MOV X0, X19
	0x03676FB4 BL 0x3EB1AD0
	0x03676FB8 MOV X19, X0
	0x03676FBC ADRP X0, 0xA85000
	0x03676FC0 LDR X0, [X0 + 0x578]
	0x03676FC4 BL 0x1C16D08
	0x03676FC8 LDR X8, [X19]
	0x03676FCC LDR X1, [X8]
	0x03676FD0 BL 0x1C17270
	0x03676FD4 TBZ X0, 0x0, 0x3676FFC
	0x03676FD8 BL 0x3EB1AE0
	0x03676FDC ADRP X0, 0xA85000
	0x03676FE0 LDR X0, [X0 + 0x578]
	0x03676FE4 BL 0x1C16D08
	0x03676FE8 BL 0x1C16F10
	0x03676FEC MOV X19, X0
	0x03676FF0 ADRP X0, 0xAC7000
	0x03676FF4 LDR X0, [X0 + 0xB70]
	0x03676FF8 B 0x3676F60
	0x03676FFC MOVZ W0, 0x8
	0x03677000 BL 0x3EB1AF0
	0x03677004 LDR X8, [X19]
	0x03677008 STR X8, [X0]
	0x0367700C ADRP X1, 0x83D000
	0x03677010 ADD X1, X1, 0xE58
	0x03677014 MOV X2, X31
	0x03677018 BL 0x3EB1B00
	0x0367701C MOV X19, X0
	0x03677020 BL 0x3EB1AE0
	0x03677024 MOV X0, X19
	0x03677028 BL 0x1D2C690
	0x0367702C BL 0x1990590
	0x03677030 LDRB W8, [X0 + 0x48]
	0x03677034 CBZ W8, 0x3677040
	0x03677038 MOVZ W0, 0x1
	0x0367703C RET
	0x03677040 LDRB W0, [X0 + 0x49]
	0x03677044 RET
	0x03677048 LDR X0, [X0 + 0x40]
	0x0367704C RET
	0x03677050 LDR X0, [X0 + 0x28]
	0x03677054 RET
	0x03677058 STP X30, X21, [X31 - 0x20]!
	0x0367705C STP X20, X19, [X31 + 0x10]
	0x03677060 LDRB W8, [X0 + 0x48]
	0x03677064 CBNZ W8, 0x36770D8
	0x03677068 LDRB W8, [X0 + 0x49]
	0x0367706C MOV X19, X0
	0x03677070 CBNZ W8, 0x36770D8
	0x03677074 MOV X20, X1
	0x03677078 CBZ X1, 0x367710C
	0x0367707C ADRP X21, 0xD69000
	0x03677080 LDRB W8, [X21 + 0x853]
	0x03677084 CBNZ W8, 0x367709C
	0x03677088 ADRP X0, 0xAC6000
	0x0367708C LDR X0, [X0 + 0xC00]
	0x03677090 BL 0x1C16CF4
	0x03677094 MOVZ W8, 0x1
	0x03677098 STRB W8, [X21 + 0x853]
	0x0367709C ADRP X21, 0xAC6000
	0x036770A0 LDR X21, [X21 + 0xC00]
	0x036770A4 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD6B000
	007 Move W8, [X19+1945]
	008 Move X21, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xAA6000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move X0, 0xA7E000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0xAC8000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+1945], W8
	025 Compare X21, 0
	026 JumpIfEqual {103}
	027 Move X10, 0xAA6000
	028 Move X8, [X21]
	029 Move X10, [X10+1816]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 2
	041 Move X0, X21
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 2
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X21
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X19, X0
	052 Compare X0, 0
	053 JumpIfEqual {65}
	054 Move X9, 0xAC8000
	055 Move X9, [X9+2904]
	056 Move X8, [X19]
	057 Move X1, [X9]
	058 Move W10, [X8+304]
	059 Move W9, [X1+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X8+200]
	062 Add X8, X8, X9
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X20+48]
	066 Compare X0, 0
	067 JumpIfEqual {104}
	068 Move X8, [X0]
	069 Move X9, [X8+712]
	070 Move X2, [X8+720]
	071 Move X1, X21
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move W21, W0
	074 Compare W0, 0
	075 JumpIfNotEqual {83}
	076 Move X8, [X20]
	077 Move W9, 1
	078 Move [X20+58], W9
	079 Move X1, [X8+640]
	080 Move X9, [X8+632]
	081 Move X0, X20
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X8, 0xA7E000
	084 Move X8, [X8+1880]
	085 Move [X31+12], W21
	086 Move X0, [X8]
	087 Add X1, X31, 12
	088 Call 0x1C17E04
	089 Move X1, X0
	090 Compare X19, 0
	091 JumpIfEqual {105}
	092 Move X0, X19
	093 Move X2, X31
	094 Call LazyAsyncResult.InvokeCallback, X0, X1
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X30, [X31+16]
	098 Move X21, [X31+24]
	099 Add X31, X31, 48
	100 Return 
	101 Move X0, X19
	102 Call 0x1C181E0
	103 Call 0x1C17F20
	104 Call 0x1C17F20
	105 Call 0x1C17F20
	106 Move X20, X0
	107 Move X20, X0
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, X20
	110 Call 0x3EB2AD0
	111 Move X20, X0
	112 Move X0, 0xA7E000
	113 Move X0, [X0+2000]
	114 Call 0x1C17D08
	115 Move X8, [X20]
	116 Move X1, [X8]
	117 Call 0x1C18270
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {137}
	122 Move X20, [X20]
	123 Call 0x3EB2AE0
	124 Compare X19, 0
	125 JumpIfEqual {145}
	126 Move X0, X19
	127 Move X1, X31
	128 Call LazyAsyncResult.get_IsCompleted, X0
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {95}
	133 Move X0, X19
	134 Move X1, X20
	135 Move X2, X31
	136 Call LazyAsyncResult.InvokeCallback, X0, X1
	137 Move W0, 8
	138 Call 0x3EB2AF0
	139 Move X8, [X20]
	140 Move [X0], X8
	141 Move X1, 0x83F000
	142 Add X1, X1, 3672
	143 Move X2, X31
	144 Call 0x3EB2B00
	145 Call 0x1C17F20
	146 Move X20, X0
	147 Move X19, X1
	148 Move X20, X0
	149 Call 0x3EB2AE0
	150 Move W1, W19
	151 Move W8, 1
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X20
	154 Call 0x3EB2AD0
	155 Move X19, X0
	156 Move X0, 0xA83000
	157 Move X0, [X0+3264]
	158 Call 0x1C17D08
	159 Move X8, [X19]
	160 Move X1, [X8]
	161 Call 0x1C18270
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {167}
	166 Call 0x3EB2AE0
	167 Move W0, 8
	168 Call 0x3EB2AF0
	169 Move X8, [X19]
	170 Move [X0], X8
	171 Move X1, 0x83E000
	172 Add X1, X1, 3672
	173 Move X2, X31
	174 Call 0x3EB2B00
	175 Move X20, X0
	176 Call 0x3EB2AE0
	177 Move X0, X20
	178 Call 0x1D2D690
	179 Call 0x1991590

Method: System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036770A8 LDR W8, [X0 + 0xE0]
	0x036770AC CBNZ W8, 0x36770B8
	0x036770B0 BL 0x1C16DFC
	0x036770B4 LDR X0, [X21]
	0x036770B8 LDR X8, [X0 + 0xB8]
	0x036770BC LDR X8, [X8]
	0x036770C0 CMP X8, X20
	0x036770C4 B.EQ 0x3677140
	0x036770C8 STR X20, [X19 + 0x28]
	0x036770CC LDP X20, X19, [X31 + 0x10]
	0x036770D0 LDP X30, X21, [X31], #0x20
	0x036770D4 RET
	0x036770D8 ADRP X0, 0xA7C000
	0x036770DC LDR X0, [X0 + 0x5B0]
	0x036770E0 BL 0x1C16D08
	0x036770E4 BL 0x1C16F10
	0x036770E8 MOV X19, X0
	0x036770EC ADRP X0, 0xAC6000
	0x036770F0 LDR X0, [X0 + 0xBE8]
	0x036770F4 BL 0x1C16D08
	0x036770F8 MOV X1, X0
	0x036770FC MOV X0, X19
	0x03677100 MOV X2, X31
	0x03677104 BL 0x337DF1C
	0x03677108 B 0x3677184
	0x0367710C ADRP X0, 0xA81000
	0x03677110 LDR X0, [X0 + 0x528]
	0x03677114 BL 0x1C16D08
	0x03677118 BL 0x1C16F10
	0x0367711C MOV X19, X0
	0x03677120 ADRP X0, 0xA86000
	0x03677124 LDR X0, [X0 + 0xEC8]
	0x03677128 BL 0x1C16D08
	0x0367712C MOV X1, X0
	0x03677130 MOV X0, X19
	0x03677134 MOV X2, X31
	0x03677138 BL 0x330E100
	0x0367713C B 0x3677184
	0x03677140 ADRP X0, 0xA84000
	0x03677144 LDR X0, [X0 + 0x578]
	0x03677148 BL 0x1C16D08
	0x0367714C BL 0x1C16F10
	0x03677150 MOV X19, X0
	0x03677154 ADRP X0, 0xAC6000
	0x03677158 LDR X0, [X0 + 0xC08]
	0x0367715C BL 0x1C16D08
	0x03677160 MOV X20, X0
	0x03677164 ADRP X0, 0xA86000
	0x03677168 LDR X0, [X0 + 0xEC8]
	0x0367716C BL 0x1C16D08
	0x03677170 MOV X2, X0
	0x03677174 MOV X0, X19
	0x03677178 MOV X1, X20
	0x0367717C MOV X3, X31
	0x03677180 BL 0x330E16C
	0x03677184 ADRP X0, 0xAC6000
	0x03677188 LDR X0, [X0 + 0xC10]
	0x0367718C BL 0x1C16D08
	0x03677190 MOV X1, X0
	0x03677194 MOV X0, X19
	0x03677198 BL 0x1C16DEC
	0x0367719C LDR X0, [X0 + 0x30]
	0x036771A0 RET
	0x036771A4 LDR W0, [X0 + 0x58]
	0x036771A8 RET
	0x036771AC STR X30, [X31 - 0x20]!
	0x036771B0 STP X20, X19, [X31 + 0x10]
	0x036771B4 LDRB W8, [X0 + 0x48]
	0x036771B8 CBNZ W8, 0x36771EC
	0x036771BC LDRB W8, [X0 + 0x49]
	0x036771C0 CBNZ W8, 0x36771EC
	0x036771C4 ADDS W31, W1, 0x2
	0x036771C8 B.LE 0x3677220
	0x036771CC LDR W8, [X0 + 0x58]
	0x036771D0 CMP W8, W1
	0x036771D4 B.EQ 0x36771E0
	0x036771D8 STR W1, [X0 + 0x58]
	0x036771DC STR X31, [X0 + 0x98]
	0x036771E0 LDP X20, X19, [X31 + 0x10]
	0x036771E4 LDR X30, [X31], #0x20
	0x036771E8 RET
	0x036771EC ADRP X0, 0xA7C000
	0x036771F0 LDR X0, [X0 + 0x5B0]
	0x036771F4 BL 0x1C16D08
	0x036771F8 BL 0x1C16F10
	0x036771FC MOV X19, X0
	0x03677200 ADRP X0, 0xAC6000
	0x03677204 LDR X0, [X0 + 0xBE8]
	0x03677208 BL 0x1C16D08
	0x0367720C MOV X1, X0
	0x03677210 MOV X0, X19
	0x03677214 MOV X2, X31
	0x03677218 BL 0x337DF1C
	0x0367721C B 0x3677264
	0x03677220 ADRP X0, 0xA84000
	0x03677224 LDR X0, [X0 + 0x760]
	0x03677228 BL 0x1C16D08
	0x0367722C BL 0x1C16F10
	0x03677230 MOV X19, X0
	0x03677234 ADRP X0, 0xA86000
	0x03677238 LDR X0, [X0 + 0xEC8]
	0x0367723C BL 0x1C16D08

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0xD6A000
	012 Move X23, 0xAC7000
	013 Move X26, 0xAA5000
	014 Move W8, [X27+1946]
	015 Move X23, [X23+2904]
	016 Move X26, [X26+1824]
	017 Move X25, X5
	018 Move X24, X4
	019 Move W20, W3
	020 Move W21, W2
	021 Move X22, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0xAA5000
	028 Move X0, [X0+1824]
	029 Call 0x1C17CF4
	030 Move X0, 0xAC7000
	031 Move X0, [X0+2912]
	032 Call 0x1C17CF4
	033 Move X0, 0xAC7000
	034 Move X0, [X0+2904]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X27+1946], W8
	038 Move X0, X19
	039 Call FtpDataStream.CheckError, X0
	040 Move X0, [X23]
	041 Call 0x1C17F10
	042 Move X1, X19
	043 Move X2, X25
	044 Move X3, X24
	045 Move X4, X31
	046 Move X23, X0
	047 Call LazyAsyncResult..ctor, X0, X1, X2, X3
	048 Move X24, [X19+48]
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X8, 0xAC7000
	052 Move X8, [X8+2912]
	053 Move X25, X0
	054 Move X2, [X8]
	055 Move X1, X19
	056 Move X3, X31
	057 Call AsyncCallback..ctor, X0, X1, X2
	058 Compare X24, 0
	059 JumpIfEqual {82}
	060 Move X8, [X24]
	061 Move X9, [X8+696]
	062 Move X6, [X8+704]
	063 Move X0, X24
	064 Move X1, X22
	065 Move W2, W21
	066 Move W3, W20
	067 Move X4, X25
	068 Move X5, X23
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X0, X23
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 Move X27, [X31+88]
	081 Return X0
	082 Call 0x1C17F20
	083 Move X20, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X20
	086 Call 0x3EB2AD0
	087 Move X20, X0
	088 Move X0, 0xA83000
	089 Move X0, [X0+3264]
	090 Call 0x1C17D08
	091 Move X8, [X20]
	092 Move X1, [X8]
	093 Call 0x1C18270
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {104}
	098 Move X20, [X20]
	099 Call 0x3EB2AE0
	100 Move X0, X19
	101 Call FtpDataStream.CheckError, X0
	102 Move X0, X20
	103 Call 0x1C17F18
	104 Move W0, 8
	105 Call 0x3EB2AF0
	106 Move X8, [X20]
	107 Move [X0], X8
	108 Move X1, 0x83E000
	109 Add X1, X1, 3672
	110 Move X2, X31
	111 Call 0x3EB2B00
	112 Move X20, X0
	113 Call 0x3EB2AE0
	114 Move X0, X20
	115 Call 0x1D2D690
	116 Call 0x1991590

Method: System.Int32 EndRead(System.IAsyncResult ar)

Disassembly:
	0x03677240 MOV X20, X0
	0x03677244 ADRP X0, 0xAC6000
	0x03677248 LDR X0, [X0 + 0xC18]
	0x0367724C BL 0x1C16D08
	0x03677250 MOV X2, X0
	0x03677254 MOV X0, X19
	0x03677258 MOV X1, X20
	0x0367725C MOV X3, X31
	0x03677260 BL 0x3311888
	0x03677264 ADRP X0, 0xAC6000
	0x03677268 LDR X0, [X0 + 0xC20]
	0x0367726C BL 0x1C16D08
	0x03677270 MOV X1, X0
	0x03677274 MOV X0, X19
	0x03677278 BL 0x1C16DEC
	0x0367727C LDR W0, [X0 + 0x5C]
	0x03677280 RET
	0x03677284 LDR W0, [X0 + 0xD8]
	0x03677288 RET
	0x0367728C LDR X0, [X0 + 0x68]
	0x03677290 RET
	0x03677294 LDR X0, [X0 + 0x60]
	0x03677298 RET
	0x0367729C STR X1, [X0 + 0x60]
	0x036772A0 RET
	0x036772A4 MOV X0, X31
	0x036772A8 RET
	0x036772AC STP X30, X19, [X31 - 0x10]!
	0x036772B0 LDRB W8, [X0 + 0x48]
	0x036772B4 CBNZ W8, 0x36772C8
	0x036772B8 LDRB W8, [X0 + 0x49]
	0x036772BC CBNZ W8, 0x36772C8
	0x036772C0 LDP X30, X19, [X31], #0x10
	0x036772C4 RET
	0x036772C8 ADRP X0, 0xA7C000
	0x036772CC LDR X0, [X0 + 0x5B0]
	0x036772D0 BL 0x1C16D08
	0x036772D4 BL 0x1C16F10
	0x036772D8 MOV X19, X0
	0x036772DC ADRP X0, 0xAC6000
	0x036772E0 LDR X0, [X0 + 0xBE8]
	0x036772E4 BL 0x1C16D08
	0x036772E8 MOV X1, X0
	0x036772EC MOV X0, X19
	0x036772F0 MOV X2, X31
	0x036772F4 BL 0x337DF1C
	0x036772F8 ADRP X0, 0xAC6000
	0x036772FC LDR X0, [X0 + 0xC28]
	0x03677300 BL 0x1C16D08
	0x03677304 MOV X1, X0
	0x03677308 MOV X0, X19
	0x0367730C BL 0x1C16DEC
	0x03677310 STP X30, X19, [X31 - 0x10]!
	0x03677314 LDRB W8, [X0 + 0x48]
	0x03677318 CBNZ W8, 0x3677330
	0x0367731C LDRB W8, [X0 + 0x49]
	0x03677320 CBNZ W8, 0x3677330
	0x03677324 STR X1, [X0 + 0x80]
	0x03677328 LDP X30, X19, [X31], #0x10
	0x0367732C RET
	0x03677330 ADRP X0, 0xA7C000
	0x03677334 LDR X0, [X0 + 0x5B0]
	0x03677338 BL 0x1C16D08
	0x0367733C BL 0x1C16F10
	0x03677340 MOV X19, X0
	0x03677344 ADRP X0, 0xAC6000
	0x03677348 LDR X0, [X0 + 0xBE8]
	0x0367734C BL 0x1C16D08
	0x03677350 MOV X1, X0
	0x03677354 MOV X0, X19
	0x03677358 MOV X2, X31
	0x0367735C BL 0x337DF1C
	0x03677360 ADRP X0, 0xAC6000
	0x03677364 LDR X0, [X0 + 0xC30]
	0x03677368 BL 0x1C16D08
	0x0367736C MOV X1, X0
	0x03677370 MOV X0, X19
	0x03677374 BL 0x1C16DEC
	0x03677378 LDRB W0, [X0 + 0x89]
	0x0367737C RET
	0x03677380 STR X30, [X31 - 0x50]!
	0x03677384 STP X26, X25, [X31 + 0x10]
	0x03677388 STP X24, X23, [X31 + 0x20]
	0x0367738C STP X22, X21, [X31 + 0x30]
	0x03677390 STP X20, X19, [X31 + 0x40]
	0x03677394 ADRP X21, 0xD69000
	0x03677398 ADRP X24, 0xAC6000
	0x0367739C LDRB W8, [X21 + 0x79F]
	0x036773A0 LDR X24, [X24 + 0x820]
	0x036773A4 MOV X20, X1
	0x036773A8 MOV X19, X0
	0x036773AC TBNZ X8, 0x0, 0x3677448
	0x036773B0 ADRP X0, 0xAC6000
	0x036773B4 LDR X0, [X0 + 0xC38]
	0x036773B8 BL 0x1C16CF4
	0x036773BC ADRP X0, 0xAC6000
	0x036773C0 LDR X0, [X0 + 0xB68]
	0x036773C4 BL 0x1C16CF4
	0x036773C8 ADRP X0, 0xAC6000
	0x036773CC LDR X0, [X0 + 0xC40]
	0x036773D0 BL 0x1C16CF4
	0x036773D4 ADRP X0, 0xAC6000
	0x036773D8 LDR X0, [X0 + 0x820]
	0x036773DC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD6A000
	006 Move W8, [X21+1947]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xA7D000
	014 Move X0, [X0+2000]
	015 Call 0x1C17CF4
	016 Move X0, 0xA7D000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move X0, 0xAC7000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1947], W8
	024 Compare X20, 0
	025 JumpIfEqual {77}
	026 Move X9, 0xAC7000
	027 Move X9, [X9+2904]
	028 Move X8, [X20]
	029 Move X1, [X9]
	030 Move W10, [X8+304]
	031 Move W9, [X1+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X8+200]
	034 Add X8, X8, X9
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X20
	038 Move X1, X31
	039 Call LazyAsyncResult.InternalWaitForCompletion, X0
	040 Move X20, X0
	041 Compare X0, 0
	042 JumpIfEqual {78}
	043 Move X9, 0xA7D000
	044 Move X9, [X9+2000]
	045 Move X8, [X20]
	046 Move X9, [X9]
	047 Move W11, [X8+304]
	048 Move W10, [X9+304]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X11, [X8+200]
	051 Add X10, X11, X10
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X20
	055 Move X1, X31
	056 Call ExceptionDispatchInfo.Throw, X0
	057 Move X8, [X20]
	058 Move X9, 0xA7D000
	059 Move X9, [X9+1880]
	060 Move X8, [X8+64]
	061 Move X1, [X9]
	062 Move X9, [X1+64]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X20
	065 Call 0x1C17E08
	066 Move W20, [X0]
	067 Move X0, X19
	068 Call FtpDataStream.CheckError, X0
	069 Move W0, W20
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return X0
	075 Move X0, X20
	076 Call 0x1C181E0
	077 Call 0x1C17F20
	078 Call 0x1C17F20
	079 Move X0, X20
	080 Call 0x1C181E0
	081 Move X20, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X20
	084 Call 0x3EB2AD0
	085 Move X21, [X0]
	086 Call 0x3EB2AE0
	087 Move X0, X19
	088 Call FtpDataStream.CheckError, X0
	089 Compare X21, 0
	090 JumpIfNotEqual {93}
	091 Move W20, W31
	092 Move X21, X31
	093 Move X0, X21
	094 Call 0x1C17F18
	095 Move X20, X0
	096 Move X0, X19
	097 Call FtpDataStream.CheckError, X0
	098 Compare X21, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X20
	101 Call 0x1D2D690
	102 Move X0, X21
	103 Call 0x1C17F18
	104 Call 0x1991590

Method: System.IAsyncResult BeginWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036773E0 ADRP X0, 0xAC6000
	0x036773E4 LDR X0, [X0 + 0x468]
	0x036773E8 BL 0x1C16CF4
	0x036773EC ADRP X0, 0xAC6000
	0x036773F0 LDR X0, [X0 + 0x8C0]
	0x036773F4 BL 0x1C16CF4
	0x036773F8 ADRP X0, 0xA82000
	0x036773FC LDR X0, [X0 + 0xCC0]
	0x03677400 BL 0x1C16CF4
	0x03677404 ADRP X0, 0xA7E000
	0x03677408 LDR X0, [X0 + 0xA28]
	0x0367740C BL 0x1C16CF4
	0x03677410 ADRP X0, 0xAC3000
	0x03677414 LDR X0, [X0 + 0xD0]
	0x03677418 BL 0x1C16CF4
	0x0367741C ADRP X0, 0xAC6000
	0x03677420 LDR X0, [X0 + 0xB88]
	0x03677424 BL 0x1C16CF4
	0x03677428 ADRP X0, 0xAAE000
	0x0367742C LDR X0, [X0 + 0xBF0]
	0x03677430 BL 0x1C16CF4
	0x03677434 ADRP X0, 0xA7C000
	0x03677438 LDR X0, [X0 + 0x988]
	0x0367743C BL 0x1C16CF4
	0x03677440 MOVZ W8, 0x1
	0x03677444 STRB W8, [X21 + 0x79F]
	0x03677448 MOVZ W8, 0x86A0
	0x0367744C MOVK W8, 0x10000
	0x03677450 MOVZ W9, 0x101
	0x03677454 STR W8, [X19 + 0x58]
	0x03677458 STRH W9, [X19 + 0x78]
	0x0367745C LDR X0, [X24]
	0x03677460 ADRP X21, 0xAC3000
	0x03677464 LDR W8, [X0 + 0xE0]
	0x03677468 LDR X21, [X21 + 0xD0]
	0x0367746C CBNZ W8, 0x3677478
	0x03677470 BL 0x1C16DFC
	0x03677474 LDR X0, [X24]
	0x03677478 LDR X8, [X0 + 0xB8]
	0x0367747C MOVZ W9, 0x93E0
	0x03677480 MOVK W9, 0x40000
	0x03677484 LDR X8, [X8 + 0x8]
	0x03677488 STR W9, [X19 + 0xD8]
	0x0367748C STR X8, [X19 + 0x98]
	0x03677490 LDR X0, [X21]
	0x03677494 ADRP X21, 0xAC6000
	0x03677498 LDR W8, [X0 + 0xE0]
	0x0367749C LDR X21, [X21 + 0x468]
	0x036774A0 CBNZ W8, 0x36774A8
	0x036774A4 BL 0x1C16DFC
	0x036774A8 MOV X0, X19
	0x036774AC MOV X1, X31
	0x036774B0 BL 0x33C011C
	0x036774B4 ADRP X8, 0xFFFFFFFFFD476000
	0x036774B8 LDR V0, [X8 + 0x470]
	0x036774BC STR D0, [X19 + 0x18]
	0x036774C0 LDR X0, [X21]
	0x036774C4 LDR W8, [X0 + 0xE0]
	0x036774C8 CBNZ W8, 0x36774D0
	0x036774CC BL 0x1C16DFC
	0x036774D0 MOV X0, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X5
	009 Move X21, X4
	010 Move W22, W3
	011 Move W23, W2
	012 Move X24, X1
	013 Move X19, X0
	014 Call FtpDataStream.CheckError, X0
	015 Move X0, [X19+48]
	016 Compare X0, 0
	017 JumpIfEqual {35}
	018 Move X8, [X0]
	019 Move X9, [X8+760]
	020 Move X6, [X8+768]
	021 Move X1, X24
	022 Move W2, W23
	023 Move W3, W22
	024 Move X4, X21
	025 Move X5, X20
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 Return X0
	035 Call 0x1C17F20
	036 Move X20, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X20
	039 Call 0x3EB2AD0
	040 Move X20, X0
	041 Move X0, 0xA83000
	042 Move X0, [X0+3264]
	043 Call 0x1C17D08
	044 Move X8, [X20]
	045 Move X1, [X8]
	046 Call 0x1C18270
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {57}
	051 Move X20, [X20]
	052 Call 0x3EB2AE0
	053 Move X0, X19
	054 Call FtpDataStream.CheckError, X0
	055 Move X0, X20
	056 Call 0x1C17F18
	057 Move W0, 8
	058 Call 0x3EB2AF0
	059 Move X8, [X20]
	060 Move [X0], X8
	061 Move X1, 0x83E000
	062 Add X1, X1, 3672
	063 Move X2, X31
	064 Call 0x3EB2B00
	065 Move X20, X0
	066 Call 0x3EB2AE0
	067 Move X0, X20
	068 Call 0x1D2D690
	069 Call 0x1991590

Method: System.Void EndWrite(System.IAsyncResult asyncResult)

Disassembly:
	0x036774D4 BL 0x366A368
	0x036774D8 TBZ X0, 0x0, 0x3677508
	0x036774DC LDR X0, [X21]
	0x036774E0 LDR W8, [X0 + 0xE0]
	0x036774E4 CBNZ W8, 0x36774EC
	0x036774E8 BL 0x1C16DFC
	0x036774EC ADRP X8, 0xAAE000
	0x036774F0 LDR X8, [X8 + 0xBF0]
	0x036774F4 MOV X0, X19
	0x036774F8 MOV X1, X20
	0x036774FC MOV X3, X31
	0x03677500 LDR X2, [X8]
	0x03677504 BL 0x366A4BC
	0x03677508 CBZ X20, 0x36776F8
	0x0367750C ADRP X23, 0xA7E000
	0x03677510 LDR X23, [X23 + 0xA28]
	0x03677514 MOV X0, X20
	0x03677518 MOV X1, X31
	0x0367751C BL 0x361CEF0
	0x03677520 LDR X8, [X23]
	0x03677524 MOV X21, X0
	0x03677528 LDR W9, [X8 + 0xE0]
	0x0367752C CBNZ W9, 0x367753C
	0x03677530 MOV X0, X8
	0x03677534 BL 0x1C16DFC
	0x03677538 LDR X8, [X23]
	0x0367753C LDR X8, [X8 + 0xB8]
	0x03677540 LDR X8, [X8 + 0x8]
	0x03677544 CMP X21, X8
	0x03677548 B.NE 0x36776FC
	0x0367754C ADRP X8, 0xAC6000
	0x03677550 LDR X8, [X8 + 0xC38]
	0x03677554 ADRP X21, 0xAC6000
	0x03677558 LDR X21, [X21 + 0xC40]
	0x0367755C ADRP X25, 0xA82000
	0x03677560 LDR X0, [X8]
	0x03677564 ADRP X26, 0xAC6000
	0x03677568 ADRP X22, 0xAC6000
	0x0367756C LDR X25, [X25 + 0xCC0]
	0x03677570 LDR X26, [X26 + 0xB68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+48]
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move X8, [X0]
	010 Move X9, [X8+776]
	011 Move X2, [X8+784]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call FtpDataStream.CheckError, X0
	019 Return 
	020 Call 0x1C17F20
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X21, X0
	023 Move X0, X21
	024 Call 0x3EB2AD0
	025 Move X20, [X0]
	026 Call 0x3EB2AE0
	027 Move X0, X19
	028 Call FtpDataStream.CheckError, X0
	029 Compare X20, 0
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Move X20, X31
	037 Move X0, X20
	038 Call 0x1C17F18
	039 Move X21, X0
	040 Move X0, X19
	041 Call FtpDataStream.CheckError, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void Flush()

Disassembly:
	0x03677574 LDR X22, [X22 + 0xB88]
	0x03677578 BL 0x1C16F10
	0x0367757C LDR X2, [X21]
	0x03677580 MOV X1, X19
	0x03677584 MOV X21, X0
	0x03677588 BL 0x3677768
	0x0367758C STR X21, [X19 + 0xA0]
	0x03677590 LDR X0, [X25]
	0x03677594 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+664]
	007 Move X1, [X8+672]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x03677598 MOV X1, X31
	0x0367759C MOV X21, X0
	0x036775A0 BL 0x33BDD8C
	0x036775A4 STR X21, [X19 + 0x20]
	0x036775A8 STR X20, [X19 + 0x30]
	0x036775AC LDR X0, [X26]
	0x036775B0 LDR W8, [X0 + 0xE0]
	0x036775B4 CBNZ W8, 0x36775BC
	0x036775B8 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+840]
	007 Move X2, [X8+848]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Boolean get_CanTimeout()

Disassembly:
	0x036775BC LDR X0, [X22]
	0x036775C0 BL 0x3676744
	0x036775C4 LDR X8, [X19 + 0x30]
	0x036775C8 STR X0, [X19 + 0x38]
	0x036775CC CBZ X8, 0x36776F8
	0x036775D0 MOV X0, X8
	0x036775D4 MOV X1, X31
	0x036775D8 BL 0x361D230

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+456]
	007 Move X1, [X8+464]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 get_ReadTimeout()

Disassembly:
	0x036775DC CBZ X0, 0x36776C0
	0x036775E0 LDR X0, [X19 + 0x30]
	0x036775E4 CBZ X0, 0x36776F8
	0x036775E8 MOV X1, X31
	0x036775EC BL 0x361D230
	0x036775F0 CBZ X0, 0x36776F8
	0x036775F4 LDR W8, [X0 + 0x10]
	0x036775F8 CBZ W8, 0x36776C0
	0x036775FC LDR X0, [X19 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+536]
	007 Move X1, [X8+544]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_ReadTimeout(System.Int32 value)

Disassembly:
	0x03677600 CBZ X0, 0x36776F8
	0x03677604 MOV X1, X31
	0x03677608 BL 0x361D230
	0x0367760C CBZ X0, 0x36776F8
	0x03677610 ADRP X8, 0xA7C000
	0x03677614 LDR X8, [X8 + 0x988]
	0x03677618 MOVZ W1, 0x3A
	0x0367761C MOV X2, X31
	0x03677620 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+552]
	007 Move X2, [X8+560]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Int32 get_WriteTimeout()

Disassembly:
	0x03677624 LDR X22, [X8]
	0x03677628 BL 0x322BD98
	0x0367762C ADDS W31, W0, 0x1
	0x03677630 B.EQ 0x367769C
	0x03677634 MOV W21, W0
	0x03677638 MOV X0, X20
	0x0367763C MOV W1, W31
	0x03677640 MOV W2, W21
	0x03677644 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+568]
	007 Move X1, [X8+576]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_WriteTimeout(System.Int32 value)

Disassembly:
	0x03677648 BL 0x3228DE4
	0x0367764C LDR X8, [X23]
	0x03677650 MOV X22, X0
	0x03677654 LDR W9, [X8 + 0xE0]
	0x03677658 CBNZ W9, 0x3677664
	0x0367765C MOV X0, X8
	0x03677660 BL 0x1C16DFC
	0x03677664 MOV X0, X22
	0x03677668 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+584]
	007 Move X2, [X8+592]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void SetSocketTimeoutOption(System.Int32 timeout)

Disassembly:
	0x0367766C BL 0x3624B80
	0x03677670 LDR W8, [X20 + 0x10]
	0x03677674 ADD W1, W21, 0x1
	0x03677678 MOV X23, X0
	0x0367767C MOV X0, X20
	0x03677680 SUB W2, W8, W1
	0x03677684 MOV X3, X31
	0x03677688 BL 0x3228DE4
	0x0367768C MOV X1, X31
	0x03677690 BL 0x3624B80
	0x03677694 MOV X22, X0
	0x03677698 MOV X20, X23
	0x0367769C ADRP X8, 0xAC6000
	0x036776A0 LDR X8, [X8 + 0x8C0]
	0x036776A4 LDR X0, [X8]
	0x036776A8 BL 0x1C16F10
	0x036776AC MOV X1, X20
	0x036776B0 MOV X2, X22
	0x036776B4 MOV X21, X0
	0x036776B8 BL 0x367786C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+48]
	006 Compare X0, 0
	007 JumpIfEqual {24}
	008 Move X8, [X0]
	009 Move W19, W1
	010 Move X9, [X8+552]
	011 Move X2, [X8+560]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X0, [X20+48]
	014 Compare X0, 0
	015 JumpIfEqual {24}
	016 Move X8, [X0]
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X3, [X8+584]
	021 Move X2, [X8+592]
	022 Move X30, [X31+32]
	023 CallNoReturn X3
	024 Call 0x1C17F20

