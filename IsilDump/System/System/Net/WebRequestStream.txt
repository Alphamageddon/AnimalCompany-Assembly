Type: System.Net.WebRequestStream

Method: System.Void .ctor(System.Net.WebConnection connection, System.Net.WebOperation operation, System.IO.Stream stream, System.Net.WebConnectionTunnel tunnel)

Disassembly:
	0x036AE2B8 CBNZ W8, 0x36AE2C0
	0x036AE2BC BL 0x1C16DFC
	0x036AE2C0 MOV X0, X19
	0x036AE2C4 MOV X1, X31
	0x036AE2C8 BL 0x33F4AE4
	0x036AE2CC B 0x36AE31C
	0x036AE2D0 LDR X0, [X19]
	0x036AE2D4 LDR W8, [X0 + 0xE0]
	0x036AE2D8 CBNZ W8, 0x36AE2E0
	0x036AE2DC BL 0x1C16DFC
	0x036AE2E0 ADRP X20, 0xD2A000
	0x036AE2E4 LDRB W8, [X20 + 0xF1D]
	0x036AE2E8 CBNZ W8, 0x36AE300
	0x036AE2EC ADRP X0, 0xA46000
	0x036AE2F0 LDR X0, [X0 + 0x7B8]
	0x036AE2F4 BL 0x1C16CF4
	0x036AE2F8 MOVZ W8, 0x1
	0x036AE2FC STRB W8, [X20 + 0xF1D]
	0x036AE300 LDR X0, [X19]
	0x036AE304 LDR W8, [X0 + 0xE0]
	0x036AE308 CBNZ W8, 0x36AE314
	0x036AE30C BL 0x1C16DFC
	0x036AE310 LDR X0, [X19]
	0x036AE314 LDR X8, [X0 + 0xB8]
	0x036AE318 LDR X0, [X8 + 0x30]
	0x036AE31C LDP X20, X19, [X31 + 0x10]
	0x036AE320 LDR X30, [X31], #0x20
	0x036AE324 RET
	0x036AE328 MOVZ W8, 0x1
	0x036AE32C STRB W8, [X0 + 0x29]
	0x036AE330 RET
	0x036AE334 MOV X1, X0
	0x036AE338 LDR X8, [X1], #0x29
	0x036AE33C LDR X3, [X8 + 0x3C8]
	0x036AE340 LDR X2, [X8 + 0x3D0]
	0x036AE344 BR X3
	0x036AE348 STP X30, X19, [X31 - 0x10]!
	0x036AE34C ADRP X0, 0xA45000
	0x036AE350 LDR X0, [X0 + 0xB40]
	0x036AE354 BL 0x1C16D08
	0x036AE358 BL 0x1C16F10
	0x036AE35C MOV X19, X0
	0x036AE360 ADRP X0, 0xA8D000
	0x036AE364 LDR X0, [X0 + 0x308]
	0x036AE368 BL 0x1C16D08
	0x036AE36C MOV X1, X0
	0x036AE370 MOV X0, X19
	0x036AE374 MOV X2, X31
	0x036AE378 BL 0x3379A44
	0x036AE37C ADRP X0, 0xA91000
	0x036AE380 LDR X0, [X0 + 0xE0]
	0x036AE384 BL 0x1C16D08
	0x036AE388 MOV X1, X0
	0x036AE38C MOV X0, X19
	0x036AE390 BL 0x1C16DEC
	0x036AE394 STP X30, X19, [X31 - 0x10]!
	0x036AE398 ADRP X0, 0xA45000
	0x036AE39C LDR X0, [X0 + 0xB40]
	0x036AE3A0 BL 0x1C16D08
	0x036AE3A4 BL 0x1C16F10
	0x036AE3A8 MOV X19, X0
	0x036AE3AC ADRP X0, 0xA8D000
	0x036AE3B0 LDR X0, [X0 + 0x308]
	0x036AE3B4 BL 0x1C16D08
	0x036AE3B8 MOV X1, X0
	0x036AE3BC MOV X0, X19
	0x036AE3C0 MOV X2, X31
	0x036AE3C4 BL 0x3379A44
	0x036AE3C8 ADRP X0, 0xA91000
	0x036AE3CC LDR X0, [X0 + 0xE8]
	0x036AE3D0 BL 0x1C16D08
	0x036AE3D4 MOV X1, X0
	0x036AE3D8 MOV X0, X19
	0x036AE3DC BL 0x1C16DEC
	0x036AE3E0 MOV W0, W31
	0x036AE3E4 RET
	0x036AE3E8 STP X30, X19, [X31 - 0x10]!
	0x036AE3EC ADRP X0, 0xA45000
	0x036AE3F0 LDR X0, [X0 + 0xB40]
	0x036AE3F4 BL 0x1C16D08
	0x036AE3F8 BL 0x1C16F10
	0x036AE3FC MOV X19, X0
	0x036AE400 ADRP X0, 0xA8D000
	0x036AE404 LDR X0, [X0 + 0x308]
	0x036AE408 BL 0x1C16D08
	0x036AE40C MOV X1, X0
	0x036AE410 MOV X0, X19
	0x036AE414 MOV X2, X31
	0x036AE418 BL 0x3379A44
	0x036AE41C ADRP X0, 0xA91000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD33000
	009 Move W8, [X24+2407]
	010 Move X20, X4
	011 Move X22, X3
	012 Move X21, X2
	013 Move X23, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA8D000
	020 Move X0, [X0+360]
	021 Call 0x1C17CF4
	022 Move X0, 0xA4E000
	023 Move X0, [X0+1368]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2407], W8
	027 Move X0, X19
	028 Move X1, X23
	029 Move X2, X21
	030 Call WebConnectionStream..ctor, X0, X1, X2
	031 Move [X19+144], X22
	032 Compare X21, 0
	033 JumpIfEqual {119}
	034 Move X0, [X21+16]
	035 Compare X0, 0
	036 JumpIfEqual {119}
	037 Move X1, X31
	038 Call HttpWebRequest.get_InternalAllowBuffering, X0
	039 And W8, W0, 1
	040 Move [X19+97], W8
	041 Move X8, [X21+16]
	042 Compare X8, 0
	043 JumpIfEqual {119}
	044 Move W8, [X8+200]
	045 Compare W8, 0
	046 JumpIfEqual {50}
	047 Move X8, [X21+40]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Move [X19+98], W8
	051 Compare W8, 0
	052 JumpIfNotEqual {69}
	053 Xor W8, W0, 1
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {69}
	058 Move X8, [X21+40]
	059 Compare X8, 0
	060 JumpIfNotEqual {69}
	061 Move X8, 0xA4E000
	062 Move X8, [X8+1368]
	063 Move X0, [X8]
	064 Call 0x1C17F10
	065 Move X1, X31
	066 Move X21, X0
	067 Call MemoryStream..ctor, X0
	068 Move [X19+88], X21
	069 Move X8, [X19+64]
	070 Compare X8, 0
	071 JumpIfEqual {119}
	072 Move W8, [X8+128]
	073 Move [X19+152], W8
	074 Compare X20, 0
	075 JumpIfEqual {85}
	076 Move X0, [X20+80]
	077 Move X1, X31
	078 Move X2, X31
	079 Call Version.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {111}
	084 Move X20, [X20+80]
	085 Move X0, X31
	086 Move X1, X31
	087 Move X2, X31
	088 Call Version.op_Inequality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {111}
	093 Move X21, 0xA8D000
	094 Move X21, [X21+360]
	095 Move X0, [X21]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X21]
	101 Move X8, [X0+184]
	102 Move X0, X20
	103 Move X2, X31
	104 Move X1, [X8+16]
	105 Call Version.op_Inequality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {111}
	110 Move [X19+152], W31
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X30, [X31+64]
	118 Return 
	119 Call 0x1C17F20

Method: System.IO.Stream get_InnerStream()

Disassembly:
	0x036B35C0 MOV X0, X21
	0x036B35C4 BL 0x3EB1AD0

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Boolean get_KeepAlive()

Disassembly:
	0x036B35C8 MOV X20, X0
	0x036B35CC ADRP X0, 0xA40000

ISIL:
	001 Move W0, [X0+152]
	002 Return X0

Method: System.Boolean get_CanRead()

Disassembly:
	0x036B35D0 LDR X0, [X0 + 0x7D0]
	0x036B35D4 BL 0x1C16D08

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x036B35D8 LDR X8, [X20]
	0x036B35DC LDR X1, [X8]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_HasWriteBuffer()

Disassembly:
	0x036B35E0 BL 0x1C17270
	0x036B35E4 TBZ X0, 0x0, 0x36B3624
	0x036B35E8 LDR X20, [X20]
	0x036B35EC BL 0x3EB1AE0
	0x036B35F0 MOVN W8, 0x1
	0x036B35F4 STR W8, [X19], #0x8
	0x036B35F8 ADRP X0, 0xA43000
	0x036B35FC LDR X0, [X0 + 0x280]
	0x036B3600 BL 0x1C16D08
	0x036B3604 LDR W8, [X0 + 0xE0]
	0x036B3608 CBNZ W8, 0x36B3610
	0x036B360C BL 0x1C16DFC
	0x036B3610 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+80]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move X8, [X8+40]
	006 Compare X8, 0
	007 JumpIfEqual {9}
	008 Move W0, 1
	009 Move X8, [X0+88]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.Int32 get_WriteBufferLength()

Disassembly:
	0x036B3614 MOV X1, X20
	0x036B3618 MOV X2, X31
	0x036B361C BL 0x32C4908
	0x036B3620 B 0x36B3484
	0x036B3624 MOVZ W0, 0x8
	0x036B3628 BL 0x3EB1AF0
	0x036B362C LDR X8, [X20]
	0x036B3630 STR X8, [X0]
	0x036B3634 ADRP X1, 0x801000
	0x036B3638 ADD X1, X1, 0xE58
	0x036B363C MOV X2, X31
	0x036B3640 BL 0x3EB1B00
	0x036B3644 MOV X21, X0
	0x036B3648 BL 0x3EB1AE0
	0x036B364C MOV X0, X21
	0x036B3650 BL 0x1D2C690
	0x036B3654 BL 0x1990590

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+80]
	003 Compare X8, 0
	004 JumpIfEqual {21}
	005 Move X8, [X8+40]
	006 Compare X8, 0
	007 JumpIfEqual {9}
	008 Move W0, [X8+28]
	009 Move X0, [X0+88]
	010 Compare X0, 0
	011 JumpIfEqual {16}
	012 Move X8, [X0]
	013 Move X9, [X8+488]
	014 Move X1, [X8+496]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move TEMP, 0
	017 Not TEMP
	018 Move W0, TEMP
	019 Move X30, [X31+16]
	020 Return X0
	021 Call 0x1C17F20

Method: System.Net.BufferOffsetSize GetWriteBuffer()

Disassembly:
	0x036B3658 STR X30, [X31 - 0x30]!
	0x036B365C STP X22, X21, [X31 + 0x10]
	0x036B3660 STP X20, X19, [X31 + 0x20]
	0x036B3664 ADRP X21, 0xD2D000
	0x036B3668 ADRP X22, 0xA43000
	0x036B366C LDRB W8, [X21 + 0x975]
	0x036B3670 LDR X22, [X22 + 0x280]
	0x036B3674 MOV X19, X1
	0x036B3678 MOV X20, X0
	0x036B367C TBNZ X8, 0x0, 0x36B3694
	0x036B3680 ADRP X0, 0xA43000
	0x036B3684 LDR X0, [X0 + 0x280]
	0x036B3688 BL 0x1C16CF4
	0x036B368C MOVZ W8, 0x1
	0x036B3690 STRB W8, [X21 + 0x975]
	0x036B3694 LDR X0, [X22]
	0x036B3698 LDR W8, [X0 + 0xE0]
	0x036B369C CBNZ W8, 0x36B36A4
	0x036B36A0 BL 0x1C16DFC
	0x036B36A4 ADD X0, X20, 0x8
	0x036B36A8 MOV X1, X19
	0x036B36AC LDP X20, X19, [X31 + 0x20]
	0x036B36B0 LDP X22, X21, [X31 + 0x10]
	0x036B36B4 MOV X2, X31
	0x036B36B8 LDR X30, [X31], #0x30
	0x036B36BC B 0x32C477C
	0x036B36C0 SUB X31, X31, 0x50
	0x036B36C4 STP X30, X23, [X31 + 0x20]
	0x036B36C8 STP X22, X21, [X31 + 0x30]
	0x036B36CC STP X20, X19, [X31 + 0x40]
	0x036B36D0 ADRP X20, 0xD2D000
	0x036B36D4 LDRB W8, [X20 + 0x976]
	0x036B36D8 MOV X19, X0
	0x036B36DC TBNZ X8, 0x0, 0x36B3718
	0x036B36E0 ADRP X0, 0xA8C000
	0x036B36E4 LDR X0, [X0 + 0x3A8]
	0x036B36E8 BL 0x1C16CF4
	0x036B36EC ADRP X0, 0xA8C000
	0x036B36F0 LDR X0, [X0 + 0x3B0]
	0x036B36F4 BL 0x1C16CF4
	0x036B36F8 ADRP X0, 0xA43000
	0x036B36FC LDR X0, [X0 + 0x280]
	0x036B3700 BL 0x1C16CF4
	0x036B3704 ADRP X0, 0xA8B000
	0x036B3708 LDR X0, [X0 + 0xA78]
	0x036B370C BL 0x1C16CF4
	0x036B3710 MOVZ W8, 0x1
	0x036B3714 STRB W8, [X20 + 0x976]
	0x036B3718 STP X31, X31, [X31 + 0x10]
	0x036B371C STR X31, [X31 + 0x8]
	0x036B3720 ADRP X21, 0xA43000
	0x036B3724 LDR W8, [X19]
	0x036B3728 LDR X20, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD2E000
	006 Move W8, [X20+2408]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA8C000
	013 Move X0, [X0+2848]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2408], W8
	017 Move X8, [X19+80]
	018 Compare X8, 0
	019 JumpIfEqual {67}
	020 Move X0, [X8+40]
	021 Compare X0, 0
	022 JumpIfEqual {28}
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0
	028 Move X0, [X19+88]
	029 Compare X0, 0
	030 JumpIfEqual {23}
	031 Move X8, [X0]
	032 Move X9, [X8+488]
	033 Move X1, [X8+496]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X0, 0
	036 JumpIfEqual {23}
	037 Move X0, [X19+88]
	038 Compare X0, 0
	039 JumpIfEqual {67}
	040 Move X8, [X0]
	041 Move X9, [X8+952]
	042 Move X1, [X8+960]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X19+88]
	045 Compare X8, 0
	046 JumpIfEqual {67}
	047 Move X9, [X8]
	048 Move X19, X0
	049 Move X0, X8
	050 Move X10, [X9+488]
	051 Move X1, [X9+496]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0xA8C000
	054 Move X8, [X8+2848]
	055 Move X20, X0
	056 Move X8, [X8]
	057 Move X0, X8
	058 Call 0x1C17F10
	059 Move X1, X19
	060 Move W2, W31
	061 Move W3, W20
	062 Move W4, W31
	063 Move X5, X31
	064 Move X21, X0
	065 Call BufferOffsetSize..ctor, X0, X1, X2, X3, X4
	066 Move X0, X21
	067 Call 0x1C17F20

Method: System.Threading.Tasks.Task FinishWriting(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B372C LDR X21, [X21 + 0x280]
	0x036B3730 CBZ W8, 0x36B3764
	0x036B3734 CMP W8, 0x1
	0x036B3738 B.NE 0x36B377C
	0x036B373C LDR X8, [X19 + 0x58]
	0x036B3740 MOVN W9, 0x0
	0x036B3744 STR X8, [X31 + 0x8]
	0x036B3748 STR X31, [X19 + 0x58]
	0x036B374C STR W9, [X19]
	0x036B3750 ADD X0, X31, 0x8
	0x036B3754 MOV X1, X31
	0x036B3758 BL 0x32C3B4C
	0x036B375C CBNZ X20, 0x36B3878
	0x036B3760 BL 0x1C16F20
	0x036B3764 LDUR V0, [X19 + 0x48]
	0x036B3768 MOVN W8, 0x0
	0x036B376C STR V0, [X31 + 0x1]
	0x036B3770 STP X31, X31, [X19 + 0x48]
	0x036B3774 STR W8, [X19]
	0x036B3778 B 0x36B37B8
	0x036B377C CBZ X20, 0x36B3914
	0x036B3780 LDR X1, [X19 + 0x28]
	0x036B3784 LDR X4, [X19 + 0x38]
	0x036B3788 LDP W2, W3, [X19 + 0x30]
	0x036B378C MOV X0, X20
	0x036B3790 BL 0x36B2B54
	0x036B3794 CBZ X0, 0x36B3918
	0x036B3798 MOV W1, W31
	0x036B379C MOV X2, X31
	0x036B37A0 BL 0x33ED3A0
	0x036B37A4 STP X0, X1, [X31 + 0x10]
	0x036B37A8 ADD X0, X31, 0x10
	0x036B37AC MOV X1, X31
	0x036B37B0 BL 0x32C40D4
	0x036B37B4 TBZ X0, 0x0, 0x36B38CC
	0x036B37B8 ADD X0, X31, 0x10
	0x036B37BC MOV X1, X31
	0x036B37C0 BL 0x32C40F0
	0x036B37C4 CBZ X20, 0x36B390C
	0x036B37C8 LDR X0, [X20 + 0x40]
	0x036B37CC CBZ X0, 0x36B3910
	0x036B37D0 LDR X8, [X0]
	0x036B37D4 LDR X1, [X8 + 0x210]
	0x036B37D8 LDR X9, [X8 + 0x208]
	0x036B37DC BLR X9
	0x036B37E0 CMP X0, 0x1
	0x036B37E4 B.LT 0x36B3878
	0x036B37E8 LDR X0, [X20 + 0x40]
	0x036B37EC CBZ X0, 0x36B391C
	0x036B37F0 LDR X8, [X0]
	0x036B37F4 LDR X22, [X20 + 0x70]
	0x036B37F8 LDR X1, [X8 + 0x210]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0xD2E000
	008 Move X21, 0xA44000
	009 Move W8, [X22+2409]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA8D000
	018 Move X0, [X0+816]
	019 Call 0x1C17CF4
	020 Move X0, 0xA44000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2409], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+64], V0
	028 Move [X31+72], V0
	029 Move [X31+32], V0
	030 Move [X31+40], V0
	031 Move [X31+64], X20
	032 Move [X31+72], X19
	033 Move X19, 0xA8D000
	034 Move W8, [X0+224]
	035 Move X19, [X19+816]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X19]
	045 Add X8, X31, 32
	046 Or X19, X8, 15
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W10, TEMP
	050 Add X1, X31, 32
	051 Move X0, X19
	052 Move [X31+40], V0
	053 Move [X31+56], X9
	054 Move [X31+32], W10
	055 Call AsyncTaskMethodBuilder.Start, X0, X1
	056 Move X0, X19
	057 Move X1, X31
	058 Call AsyncTaskMethodBuilder.get_Task, X0
	059 Move X20, [X31+128]
	060 Move X19, [X31+136]
	061 Move X22, [X31+112]
	062 Move X21, [X31+120]
	063 Move X30, [X31+96]
	064 Add X31, X31, 144
	065 Return X0

Method: System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B37FC LDR X9, [X8 + 0x208]
	0x036B3800 BLR X9
	0x036B3804 CMP X22, X0
	0x036B3808 B.NE 0x36B3878
	0x036B380C LDR X1, [X19 + 0x38]
	0x036B3810 MOV X0, X20
	0x036B3814 BL 0x36B272C
	0x036B3818 CBZ X0, 0x36B3920
	0x036B381C MOV X1, X31
	0x036B3820 BL 0x33ED394
	0x036B3824 STR X0, [X31 + 0x8]
	0x036B3828 ADD X0, X31, 0x8
	0x036B382C MOV X1, X31
	0x036B3830 BL 0x32C3A80
	0x036B3834 TBNZ X0, 0x0, 0x36B3750
	0x036B3838 MOVZ W8, 0x1
	0x036B383C STR W8, [X19]
	0x036B3840 LDR X8, [X31 + 0x8]
	0x036B3844 STR X8, [X19 + 0x58]
	0x036B3848 LDR X0, [X21]
	0x036B384C LDR W8, [X0 + 0xE0]
	0x036B3850 CBNZ W8, 0x36B3858
	0x036B3854 BL 0x1C16DFC
	0x036B3858 ADRP X8, 0xA8C000
	0x036B385C LDR X8, [X8 + 0x3B0]
	0x036B3860 ADD X0, X19, 0x8
	0x036B3864 LDR X3, [X8]
	0x036B3868 ADD X1, X31, 0x8
	0x036B386C MOV X2, X19
	0x036B3870 BL 0x218B264
	0x036B3874 B 0x36B38B8
	0x036B3878 STR X31, [X20 + 0x68]
	0x036B387C LDR X0, [X19 + 0x40]
	0x036B3880 CBZ X0, 0x36B3908
	0x036B3884 ADRP X8, 0xA8B000
	0x036B3888 LDR X8, [X8 + 0xA78]
	0x036B388C LDR X1, [X8]
	0x036B3890 BL 0x2850D00
	0x036B3894 MOVN W8, 0x1
	0x036B3898 STR W8, [X19], #0x8
	0x036B389C LDR X0, [X21]
	0x036B38A0 LDR W8, [X0 + 0xE0]
	0x036B38A4 CBNZ W8, 0x36B38AC
	0x036B38A8 BL 0x1C16DFC
	0x036B38AC MOV X0, X19
	0x036B38B0 MOV X1, X31
	0x036B38B4 BL 0x32C4864
	0x036B38B8 LDP X20, X19, [X31 + 0x40]
	0x036B38BC LDP X22, X21, [X31 + 0x30]
	0x036B38C0 LDP X30, X23, [X31 + 0x20]
	0x036B38C4 ADD X31, X31, 0x50
	0x036B38C8 RET
	0x036B38CC STR W31, [X19]
	0x036B38D0 LDR V0, [X31 + 0x1]
	0x036B38D4 STUR V0, [X19 + 0x48]
	0x036B38D8 LDR X0, [X21]
	0x036B38DC LDR W8, [X0 + 0xE0]
	0x036B38E0 CBNZ W8, 0x36B38E8
	0x036B38E4 BL 0x1C16DFC
	0x036B38E8 ADRP X8, 0xA8C000
	0x036B38EC LDR X8, [X8 + 0x3A8]
	0x036B38F0 ADD X0, X19, 0x8
	0x036B38F4 LDR X3, [X8]
	0x036B38F8 ADD X1, X31, 0x10
	0x036B38FC MOV X2, X19
	0x036B3900 BL 0x218C2E0
	0x036B3904 B 0x36B38B8
	0x036B3908 BL 0x1C16F20
	0x036B390C BL 0x1C16F20
	0x036B3910 BL 0x1C16F20
	0x036B3914 BL 0x1C16F20
	0x036B3918 BL 0x1C16F20
	0x036B391C BL 0x1C16F20
	0x036B3920 BL 0x1C16F20
	0x036B3924 B 0x36B3968
	0x036B3928 B 0x36B3968
	0x036B392C B 0x36B3968
	0x036B3930 B 0x36B3968
	0x036B3934 B 0x36B3968
	0x036B3938 B 0x36B3968
	0x036B393C B 0x36B3968
	0x036B3940 B 0x36B3968
	0x036B3944 B 0x36B3968
	0x036B3948 B 0x36B3968
	0x036B394C B 0x36B3968
	0x036B3950 B 0x36B3968
	0x036B3954 B 0x36B3968
	0x036B3958 B 0x36B3968
	0x036B395C B 0x36B3968
	0x036B3960 B 0x36B3968
	0x036B3964 B 0x36B3968
	0x036B3968 MOV X21, X0
	0x036B396C CMP W1, 0x1
	0x036B3970 B.EQ 0x36B39E4
	0x036B3974 MOVZ W8, 0x1
	0x036B3978 CMP W1, W8
	0x036B397C B.NE 0x36B3BB4
	0x036B3980 MOV X0, X21
	0x036B3984 BL 0x3EB1AD0
	0x036B3988 MOV X20, X0
	0x036B398C ADRP X0, 0xA40000
	0x036B3990 LDR X0, [X0 + 0x7D0]
	0x036B3994 BL 0x1C16D08
	0x036B3998 LDR X8, [X20]
	0x036B399C LDR X1, [X8]
	0x036B39A0 BL 0x1C17270
	0x036B39A4 TBZ X0, 0x0, 0x36B3A1C
	0x036B39A8 LDR X20, [X20]
	0x036B39AC BL 0x3EB1AE0
	0x036B39B0 MOVN W8, 0x1
	0x036B39B4 STR W8, [X19], #0x8
	0x036B39B8 ADRP X0, 0xA43000
	0x036B39BC LDR X0, [X0 + 0x280]
	0x036B39C0 BL 0x1C16D08
	0x036B39C4 LDR W8, [X0 + 0xE0]
	0x036B39C8 CBNZ W8, 0x36B39D0
	0x036B39CC BL 0x1C16DFC
	0x036B39D0 MOV X0, X19
	0x036B39D4 MOV X1, X20
	0x036B39D8 MOV X2, X31
	0x036B39DC BL 0x32C4908
	0x036B39E0 B 0x36B38B8
	0x036B39E4 MOV X0, X21
	0x036B39E8 BL 0x3EB1AD0
	0x036B39EC MOV X21, X0
	0x036B39F0 ADRP X0, 0xA40000
	0x036B39F4 LDR X0, [X0 + 0x7D0]
	0x036B39F8 BL 0x1C16D08
	0x036B39FC LDR X8, [X21]
	0x036B3A00 LDR X1, [X8]
	0x036B3A04 BL 0x1C17270
	0x036B3A08 TBZ X0, 0x0, 0x36B3A40
	0x036B3A0C LDR X21, [X21]
	0x036B3A10 BL 0x3EB1AE0
	0x036B3A14 CBNZ X20, 0x36B3A60
	0x036B3A18 BL 0x1C16F20
	0x036B3A1C MOVZ W0, 0x8
	0x036B3A20 BL 0x3EB1AF0
	0x036B3A24 LDR X8, [X20]
	0x036B3A28 STR X8, [X0]
	0x036B3A2C ADRP X1, 0x801000
	0x036B3A30 ADD X1, X1, 0xE58
	0x036B3A34 MOV X2, X31
	0x036B3A38 BL 0x3EB1B00
	0x036B3A3C B 0x36B3A60
	0x036B3A40 MOVZ W0, 0x8
	0x036B3A44 BL 0x3EB1AF0
	0x036B3A48 LDR X8, [X21]
	0x036B3A4C STR X8, [X0]
	0x036B3A50 ADRP X1, 0x801000
	0x036B3A54 ADD X1, X1, 0xE58

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD2E000
	009 Move W8, [X23+2410]
	010 Move W19, W3
	011 Move W20, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Move [X31+8], X4
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xA49000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0xA42000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move X0, 0xA8C000
	026 Move X0, [X0+2696]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2410], W8
	030 Compare X21, 0
	031 JumpIfEqual {106}
	032 Move TEMP, X20
	033 And TEMP, TEMP, -2147483648
	034 Compare TEMP, -2147483648
	035 JumpIfEqual {118}
	036 Move W8, [X21+24]
	037 Subtract W8, W8, W20
	038 Move TEMP, X19
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {125}
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, 0xA49000
	044 Move X8, [X8+2008]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X0, X31, 8
	051 Move X1, X31
	052 Call CancellationToken.get_IsCancellationRequested, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {68}
	057 Move X8, 0xA42000
	058 Move X8, [X8+1976]
	059 Move X19, [X31+8]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X19
	066 Move X1, X31
	067 Call Task.FromCanceled, X0
	068 Move X0, [X22+80]
	069 Compare X0, 0
	070 JumpIfEqual {137}
	071 Move X1, [X31+8]
	072 Call WebOperation.ThrowIfClosedOrDisposed, X0, X1
	073 Move X8, [X22+80]
	074 Compare X8, 0
	075 JumpIfEqual {137}
	076 Move X8, [X8+40]
	077 Compare X8, 0
	078 JumpIfNotEqual {138}
	079 Move X8, 0xA8C000
	080 Move X8, [X8+2696]
	081 Move X0, [X8]
	082 Call 0x1C17F10
	083 Move X23, X0
	084 Call WebCompletionSource..ctor, X0
	085 Add X0, X22, 104
	086 Move X1, X23
	087 Move X2, X31
	088 Call 0x1C25138
	089 Compare X0, 0
	090 JumpIfNotEqual {151}
	091 Move X5, [X31+8]
	092 Move X0, X22
	093 Move X1, X21
	094 Move W2, W20
	095 Move W3, W19
	096 Move X4, X23
	097 Call WebRequestStream.WriteAsyncInner, X0, X1, X2, X3, X4, X5
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X30, [X31+16]
	103 Move X23, [X31+24]
	104 Add X31, X31, 64
	105 Return X0
	106 Move X0, 0xA46000
	107 Move X0, [X0+1320]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0xA6C000
	112 Move X0, [X0+3912]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call ArgumentNullException..ctor, X0, X1
	118 Move X0, 0xA49000
	119 Move X0, [X0+1888]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X19, X0
	123 Move X0, 0xA70000
	124 Move X0, [X0+3472]
	125 Move X0, 0xA49000
	126 Move X0, [X0+1888]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X19, X0
	130 Move X0, 0xA69000
	131 Move X0, [X0+1608]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X19
	135 Move X2, X31
	136 Call ArgumentOutOfRangeException..ctor, X0, X1
	137 Call 0x1C17F20
	138 Move X0, 0xA41000
	139 Move X0, [X0+1456]
	140 Call 0x1C17D08
	141 Call 0x1C17F10
	142 Move X1, X31
	143 Move X19, X0
	144 Call InvalidOperationException..ctor, X0
	145 Move X0, 0xA8D000
	146 Move X0, [X0+824]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Call 0x1C17DEC
	151 Move X0, 0xA8B000
	152 Move X0, [X0+3168]
	153 Call 0x1C17D08
	154 Move X1, X31
	155 Call SR.GetString, X0
	156 Move X19, X0
	157 Move X0, 0xA41000
	158 Move X0, [X0+1456]
	159 Call 0x1C17D08
	160 Call 0x1C17F10
	161 Move X1, X19
	162 Move X2, X31
	163 Move X20, X0
	164 Call InvalidOperationException..ctor, X0, X1
	165 Move X0, 0xA8D000
	166 Move X0, [X0+824]
	167 Call 0x1C17D08
	168 Move X1, X0
	169 Move X0, X20
	170 Call 0x1C17DEC

Method: System.Threading.Tasks.Task WriteAsyncInner(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Net.WebCompletionSource completion, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B3A58 MOV X2, X31
	0x036B3A5C BL 0x3EB1B00
	0x036B3A60 LDR X0, [X20 + 0x50]
	0x036B3A64 MOVZ W8, 0x1
	0x036B3A68 STR X31, [X20 + 0x58]
	0x036B3A6C STRB W8, [X20 + 0x28]
	0x036B3A70 CBNZ X0, 0x36B3A78
	0x036B3A74 BL 0x1C16F20
	0x036B3A78 LDR X1, [X19 + 0x38]
	0x036B3A7C BL 0x36B04B4
	0x036B3A80 MOV X22, X0
	0x036B3A84 CBNZ X0, 0x36B3B04
	0x036B3A88 ADRP X0, 0xA7E000
	0x036B3A8C LDR X0, [X0 + 0xD8]
	0x036B3A90 BL 0x1C16D08
	0x036B3A94 MOV X23, X21
	0x036B3A98 CBZ X21, 0x36B3B08
	0x036B3A9C LDR X8, [X21]
	0x036B3AA0 LDRB W9, [X0 + 0x130]
	0x036B3AA4 MOV X23, X21
	0x036B3AA8 LDRB W10, [X8 + 0x130]
	0x036B3AAC CMP W10, W9
	0x036B3AB0 B.CC 0x36B3B08
	0x036B3AB4 LDR X8, [X8 + 0xC8]
	0x036B3AB8 MOV X23, X21
	0x036B3ABC ADD X8, X8, X9, 0x3, LSL
	0x036B3AC0 LDUR X8, [X8 - 0x8]
	0x036B3AC4 CMP X8, X0
	0x036B3AC8 B.NE 0x36B3B08
	0x036B3ACC ADRP X0, 0xA6E000
	0x036B3AD0 LDR X0, [X0 + 0x7A8]
	0x036B3AD4 BL 0x1C16D08
	0x036B3AD8 BL 0x1C16F10
	0x036B3ADC MOV X23, X0
	0x036B3AE0 ADRP X0, 0xA8C000
	0x036B3AE4 LDR X0, [X0 + 0x3B8]
	0x036B3AE8 BL 0x1C16D08
	0x036B3AEC MOV X1, X0
	0x036B3AF0 MOV X0, X23
	0x036B3AF4 MOV X2, X21
	0x036B3AF8 MOV X3, X31
	0x036B3AFC BL 0x32E2390
	0x036B3B00 B 0x36B3B08
	0x036B3B04 LDR X23, [X22 + 0x10]
	0x036B3B08 LDR X0, [X20 + 0x50]
	0x036B3B0C CBNZ X0, 0x36B3B14
	0x036B3B10 BL 0x1C16F20
	0x036B3B14 MOV X1, X20
	0x036B3B18 MOV X2, X23
	0x036B3B1C BL 0x36B0910
	0x036B3B20 STR X31, [X20 + 0x68]
	0x036B3B24 LDR X20, [X19 + 0x40]
	0x036B3B28 CBNZ X20, 0x36B3B30
	0x036B3B2C BL 0x1C16F20
	0x036B3B30 ADRP X0, 0xA8B000
	0x036B3B34 LDR X0, [X0 + 0xAA0]
	0x036B3B38 BL 0x1C16D08
	0x036B3B3C MOV X2, X0
	0x036B3B40 MOV X0, X20
	0x036B3B44 MOV X1, X23
	0x036B3B48 BL 0x2850ED0
	0x036B3B4C CBZ X22, 0x36B3B5C
	0x036B3B50 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xD2E000
	012 Move X25, 0xA44000
	013 Move W8, [X26+2411]
	014 Move X25, [X25+640]
	015 Move X19, X5
	016 Move X20, X4
	017 Move W21, W3
	018 Move W22, W2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xA8D000
	026 Move X0, [X0+832]
	027 Call 0x1C17CF4
	028 Move X0, 0xA44000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+2411], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+96], V0
	038 Move [X31+104], V0
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31+64], X24
	042 Move [X31+72], X23
	043 Move [X31+80], W22
	044 Move [X31+84], W21
	045 Move [X31+88], X19
	046 Move [X31+96], X20
	047 Move X19, 0xA8D000
	048 Move W8, [X0+224]
	049 Move X19, [X19+832]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Add X8, X31, 8
	054 Move X0, X31
	055 Call AsyncTaskMethodBuilder.Create
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move X9, [X31+24]
	058 Move X2, [X19]
	059 Add X8, X31, 32
	060 Or X19, X8, 15
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W10, TEMP
	064 Add X1, X31, 32
	065 Move X0, X19
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X19
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task ProcessWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B3B54 MOV X1, X31
	0x036B3B58 BL 0x32C2440
	0x036B3B5C MOV X0, X21
	0x036B3B60 BL 0x1C16F18
	0x036B3B64 B 0x36B3B90
	0x036B3B68 B 0x36B3B90
	0x036B3B6C MOV X21, X0
	0x036B3B70 B 0x36B3974
	0x036B3B74 B 0x36B3B90
	0x036B3B78 B 0x36B3B90
	0x036B3B7C B 0x36B3B90
	0x036B3B80 B 0x36B3B90
	0x036B3B84 B 0x36B3B90
	0x036B3B88 B 0x36B3B90
	0x036B3B8C B 0x36B3B90
	0x036B3B90 MOV X21, X0
	0x036B3B94 B 0x36B3974
	0x036B3B98 MOV X20, X1
	0x036B3B9C MOV X21, X0
	0x036B3BA0 BL 0x3EB1AE0
	0x036B3BA4 MOV W1, W20
	0x036B3BA8 B 0x36B3974
	0x036B3BAC MOV X21, X0
	0x036B3BB0 BL 0x3EB1AE0
	0x036B3BB4 MOV X0, X21
	0x036B3BB8 BL 0x1D2C690
	0x036B3BBC BL 0x1990590
	0x036B3BC0 STR X30, [X31 - 0x30]!
	0x036B3BC4 STP X22, X21, [X31 + 0x10]
	0x036B3BC8 STP X20, X19, [X31 + 0x20]
	0x036B3BCC ADRP X21, 0xD2D000
	0x036B3BD0 ADRP X22, 0xA43000
	0x036B3BD4 LDRB W8, [X21 + 0x977]
	0x036B3BD8 LDR X22, [X22 + 0x280]
	0x036B3BDC MOV X19, X1
	0x036B3BE0 MOV X20, X0
	0x036B3BE4 TBNZ X8, 0x0, 0x36B3BFC
	0x036B3BE8 ADRP X0, 0xA43000
	0x036B3BEC LDR X0, [X0 + 0x280]
	0x036B3BF0 BL 0x1C16CF4
	0x036B3BF4 MOVZ W8, 0x1
	0x036B3BF8 STRB W8, [X21 + 0x977]
	0x036B3BFC LDR X0, [X22]
	0x036B3C00 LDR W8, [X0 + 0xE0]
	0x036B3C04 CBNZ W8, 0x36B3C0C
	0x036B3C08 BL 0x1C16DFC
	0x036B3C0C ADD X0, X20, 0x8
	0x036B3C10 MOV X1, X19
	0x036B3C14 LDP X20, X19, [X31 + 0x20]
	0x036B3C18 LDP X22, X21, [X31 + 0x10]
	0x036B3C1C MOV X2, X31
	0x036B3C20 LDR X30, [X31], #0x30
	0x036B3C24 B 0x32C477C
	0x036B3C28 SUB X31, X31, 0x60
	0x036B3C2C STP X30, X25, [X31 + 0x20]
	0x036B3C30 STP X24, X23, [X31 + 0x30]
	0x036B3C34 STP X22, X21, [X31 + 0x40]
	0x036B3C38 STP X20, X19, [X31 + 0x50]
	0x036B3C3C ADRP X20, 0xD2D000
	0x036B3C40 LDRB W8, [X20 + 0x978]
	0x036B3C44 MOV X19, X0
	0x036B3C48 TBNZ X8, 0x0, 0x36B3CA8

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xD2E000
	011 Move X24, 0xA44000
	012 Move W8, [X25+2412]
	013 Move X24, [X24+640]
	014 Move X19, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X23, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xA8D000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move X0, 0xA44000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+2412], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+112], X31
	034 Move [X31+64], V0
	035 Move [X31+72], V0
	036 Move [X31+6], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move [X31+88], X23
	040 Move [X31+96], W21
	041 Move [X31+80], W20
	042 Move [X31+64], X22
	043 Move [X31+72], X19
	044 Move X19, 0xA8D000
	045 Move W8, [X0+224]
	046 Move X19, [X19+840]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 8
	051 Move X0, X31
	052 Call AsyncTaskMethodBuilder.Create
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X9, [X31+24]
	055 Move X2, [X19]
	056 Add X8, X31, 32
	057 Or X19, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X19
	063 Move [X31+40], V0
	064 Move [X31+56], X9
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X19
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Void CheckWriteOverflow(System.Int64 contentLength, System.Int64 totalWritten, System.Int64 size)

Disassembly:
	0x036B3C4C ADRP X0, 0xA8C000
	0x036B3C50 LDR X0, [X0 + 0x3C0]
	0x036B3C54 BL 0x1C16CF4
	0x036B3C58 ADRP X0, 0xA43000
	0x036B3C5C LDR X0, [X0 + 0x280]
	0x036B3C60 BL 0x1C16CF4
	0x036B3C64 ADRP X0, 0xA40000
	0x036B3C68 LDR X0, [X0 + 0x618]
	0x036B3C6C BL 0x1C16CF4
	0x036B3C70 ADRP X0, 0xA40000
	0x036B3C74 LDR X0, [X0 + 0x758]
	0x036B3C78 BL 0x1C16CF4
	0x036B3C7C ADRP X0, 0xA48000
	0x036B3C80 LDR X0, [X0 + 0x558]
	0x036B3C84 BL 0x1C16CF4
	0x036B3C88 ADRP X0, 0xA8C000
	0x036B3C8C LDR X0, [X0 + 0x70]
	0x036B3C90 BL 0x1C16CF4
	0x036B3C94 ADRP X0, 0xA8C000
	0x036B3C98 LDR X0, [X0 + 0x3C8]
	0x036B3C9C BL 0x1C16CF4
	0x036B3CA0 MOVZ W8, 0x1
	0x036B3CA4 STRB W8, [X20 + 0x978]
	0x036B3CA8 STP X31, X31, [X31 + 0x10]
	0x036B3CAC ADRP X24, 0xA43000
	0x036B3CB0 LDR W8, [X19]
	0x036B3CB4 LDR X24, [X24 + 0x280]
	0x036B3CB8 CBZ W8, 0x36B3EE4
	0x036B3CBC LDR X20, [X19 + 0x20]
	0x036B3CC0 CBZ X20, 0x36B4058
	0x036B3CC4 LDR X0, [X20 + 0x50]
	0x036B3CC8 CBZ X0, 0x36B405C
	0x036B3CCC LDR X1, [X19 + 0x28]
	0x036B3CD0 BL 0x36AD230
	0x036B3CD4 LDRB W8, [X20 + 0x62]
	0x036B3CD8 CBZ W8, 0x36B3F40
	0x036B3CDC MOVZ W8, 0x1
	0x036B3CE0 STRB W8, [X20 + 0x60]

ISIL:
	001 Add X31, X1, 1
	002 Subtract X8, X1, X2
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X31-32], X30
	006 Move [X31-24], X21
	007 Move [X31+16], X20
	008 Move [X31+24], X19
	009 Move W8, 1
	010 Move [X0+88], X31
	011 Move [X0+40], W8
	012 Move X8, 0xA8B000
	013 Move X8, [X8+3288]
	014 Move X19, X0
	015 Move X0, X8
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X20, X0
	019 Move X0, 0xA8D000
	020 Move X0, [X0+848]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X20
	024 Move X2, X31
	025 Call ProtocolViolationException..ctor, X0, X1
	026 Move X21, [X19+80]
	027 Move X0, X21
	028 Call 0x19913C0
	029 Move X0, X21
	030 Move X1, X19
	031 Move X2, X20
	032 Call WebOperation.CompleteRequestWritten, X0, X1, X2
	033 Move X0, 0xA8D000
	034 Move X0, [X0+856]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X20
	038 Call 0x1C17DEC

Method: System.Threading.Tasks.Task Initialize(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B2228 BL 0x1FAD5C0
	0x036B222C B 0x36B21A0
	0x036B2230 BL 0x1C16F20
	0x036B2234 BL 0x1C16F20
	0x036B2238 ADRP X0, 0xA46000
	0x036B223C LDR X0, [X0 + 0x528]
	0x036B2240 BL 0x1C16D08
	0x036B2244 BL 0x1C16F10
	0x036B2248 MOV X20, X0
	0x036B224C ADRP X0, 0xA6C000
	0x036B2250 LDR X0, [X0 + 0xF48]
	0x036B2254 BL 0x1C16D08
	0x036B2258 MOV X1, X0
	0x036B225C MOV X0, X20
	0x036B2260 MOV X2, X31
	0x036B2264 BL 0x330E100
	0x036B2268 ADRP X0, 0xA8D000
	0x036B226C LDR X0, [X0 + 0x328]
	0x036B2270 BL 0x1C16D08
	0x036B2274 MOV X1, X0
	0x036B2278 MOV X0, X20
	0x036B227C BL 0x1C16DEC
	0x036B2280 ADRP X0, 0xA49000
	0x036B2284 LDR X0, [X0 + 0x760]
	0x036B2288 BL 0x1C16D08
	0x036B228C BL 0x1C16F10
	0x036B2290 MOV X20, X0
	0x036B2294 ADRP X0, 0xA70000
	0x036B2298 LDR X0, [X0 + 0xD90]
	0x036B229C BL 0x1C16D08
	0x036B22A0 MOV X1, X0
	0x036B22A4 MOV X0, X20
	0x036B22A8 MOV X2, X31
	0x036B22AC BL 0x3316014
	0x036B22B0 ADRP X0, 0xA8D000
	0x036B22B4 LDR X0, [X0 + 0x328]
	0x036B22B8 BL 0x1C16D08
	0x036B22BC MOV X1, X0
	0x036B22C0 MOV X0, X20
	0x036B22C4 BL 0x1C16DEC
	0x036B22C8 ADRP X0, 0xA49000
	0x036B22CC LDR X0, [X0 + 0x760]
	0x036B22D0 BL 0x1C16D08
	0x036B22D4 BL 0x1C16F10
	0x036B22D8 MOV X20, X0
	0x036B22DC ADRP X0, 0xA6C000
	0x036B22E0 LDR X0, [X0 + 0xF90]
	0x036B22E4 BL 0x1C16D08
	0x036B22E8 MOV X1, X0
	0x036B22EC MOV X0, X20
	0x036B22F0 MOV X2, X31
	0x036B22F4 BL 0x3316014
	0x036B22F8 ADRP X0, 0xA8D000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X22, 0xD2F000
	008 Move X21, 0xA45000
	009 Move W8, [X22+2413]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA8E000
	018 Move X0, [X0+688]
	019 Call 0x1C17CF4
	020 Move X0, 0xA45000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2413], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+96], X31
	028 Move [X31+64], V0
	029 Move [X31+72], V0
	030 Move [X31+32], V0
	031 Move [X31+40], V0
	032 Move [X31+64], X20
	033 Move [X31+72], X19
	034 Move X19, 0xA8E000
	035 Move W8, [X0+224]
	036 Move X19, [X19+688]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add X8, X31, 8
	041 Move X0, X31
	042 Call AsyncTaskMethodBuilder.Create
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X9, [X31+24]
	045 Move X2, [X19]
	046 Add X8, X31, 32
	047 Or X19, X8, 15
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W10, TEMP
	051 Add X1, X31, 32
	052 Move X0, X19
	053 Move [X31+40], V0
	054 Move [X31+56], X9
	055 Move [X31+32], W10
	056 Call AsyncTaskMethodBuilder.Start, X0, X1
	057 Move X0, X19
	058 Move X1, X31
	059 Call AsyncTaskMethodBuilder.get_Task, X0
	060 Move X20, [X31+144]
	061 Move X19, [X31+152]
	062 Move X22, [X31+128]
	063 Move X21, [X31+136]
	064 Move X30, [X31+112]
	065 Add X31, X31, 160
	066 Return X0

Method: System.Threading.Tasks.Task SetHeadersAsync(System.Boolean setInternalLength, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B3CEC LDR X9, [X9 + 0x758]
	0x036B3CF0 STR W8, [X31 + 0xC]
	0x036B3CF4 LDR X0, [X9]
	0x036B3CF8 ADD X1, X31, 0xC
	0x036B3CFC BL 0x1C16E04
	0x036B3D00 MOV X1, X0
	0x036B3D04 ADRP X8, 0xA8C000
	0x036B3D08 LDR X8, [X8 + 0x3C8]
	0x036B3D0C LDR X0, [X8]
	0x036B3D10 MOV X2, X31
	0x036B3D14 BL 0x321EFD0
	0x036B3D18 MOV X21, X0
	0x036B3D1C MOV X0, X31
	0x036B3D20 BL 0x3242EC8
	0x036B3D24 CBZ X0, 0x36B4068
	0x036B3D28 LDR X8, [X0]
	0x036B3D2C LDR X9, [X8 + 0x268]
	0x036B3D30 LDR X2, [X8 + 0x270]
	0x036B3D34 MOV X1, X21
	0x036B3D38 BLR X9
	0x036B3D3C MOV X23, X0
	0x036B3D40 CBZ X0, 0x36B406C
	0x036B3D44 ADRP X10, 0xA40000
	0x036B3D48 LDR W8, [X19 + 0x30]
	0x036B3D4C LDR W9, [X23 + 0x18]
	0x036B3D50 LDR X10, [X10 + 0x618]
	0x036B3D54 ADD W8, W8, W9
	0x036B3D58 LDR X0, [X10]
	0x036B3D5C ADD W21, W8, 0x2
	0x036B3D60 MOV W1, W21
	0x036B3D64 BL 0x1C16D6C
	0x036B3D68 LDR W4, [X23 + 0x18]
	0x036B3D6C MOV X22, X0
	0x036B3D70 MOV X0, X23
	0x036B3D74 MOV W1, W31
	0x036B3D78 MOV X2, X22
	0x036B3D7C MOV W3, W31
	0x036B3D80 MOV X5, X31
	0x036B3D84 BL 0x33A8A9C
	0x036B3D88 LDR X0, [X19 + 0x38]
	0x036B3D8C LDR W1, [X19 + 0x40]
	0x036B3D90 LDR W4, [X19 + 0x30]
	0x036B3D94 LDR W3, [X23 + 0x18]
	0x036B3D98 MOV X2, X22
	0x036B3D9C MOV X5, X31
	0x036B3DA0 BL 0x33A8A9C
	0x036B3DA4 ADRP X25, 0xA8C000
	0x036B3DA8 LDR X25, [X25 + 0x70]
	0x036B3DAC LDR X0, [X25]
	0x036B3DB0 LDR W8, [X0 + 0xE0]
	0x036B3DB4 CBNZ W8, 0x36B3DC0
	0x036B3DB8 BL 0x1C16DFC
	0x036B3DBC LDR X0, [X25]
	0x036B3DC0 LDR X8, [X0 + 0xB8]
	0x036B3DC4 LDR X0, [X8]
	0x036B3DC8 CBZ X0, 0x36B4070

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0xD2E000
	009 Move X22, 0xA44000
	010 Move W8, [X23+2414]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move W21, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA8D000
	020 Move X0, [X0+864]
	021 Call 0x1C17CF4
	022 Move X0, 0xA44000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2414], W8
	027 Move X0, [X22]
	028 And W8, W21, 1
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+96], X31
	031 Move [X31+64], V0
	032 Move [X31+72], V0
	033 Move [X31+32], V0
	034 Move [X31+40], V0
	035 Move [X31+80], W8
	036 Move [X31+64], X20
	037 Move [X31+72], X19
	038 Move X19, 0xA8D000
	039 Move W8, [X0+224]
	040 Move X19, [X19+864]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X19]
	050 Add X8, X31, 32
	051 Or X19, X8, 15
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W10, TEMP
	055 Add X1, X31, 32
	056 Move X0, X19
	057 Move [X31+40], V0
	058 Move [X31+56], X9
	059 Move [X31+32], W10
	060 Call AsyncTaskMethodBuilder.Start, X0, X1
	061 Move X0, X19
	062 Move X1, X31
	063 Call AsyncTaskMethodBuilder.get_Task, X0
	064 Move X20, [X31+144]
	065 Move X19, [X31+152]
	066 Move X22, [X31+128]
	067 Move X21, [X31+136]
	068 Move X30, [X31+112]
	069 Move X23, [X31+120]
	070 Add X31, X31, 160
	071 Return X0

Method: System.Threading.Tasks.Task WriteRequestAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B3DCC LDR W8, [X19 + 0x30]
	0x036B3DD0 LDR W9, [X23 + 0x18]
	0x036B3DD4 LDR W4, [X0 + 0x18]
	0x036B3DD8 ADD W3, W8, W9
	0x036B3DDC MOV W1, W31
	0x036B3DE0 MOV X2, X22
	0x036B3DE4 MOV X5, X31
	0x036B3DE8 BL 0x33A8A9C
	0x036B3DEC LDRB W8, [X20 + 0x61]
	0x036B3DF0 CBZ W8, 0x36B3E40
	0x036B3DF4 LDR X23, [X20 + 0x58]
	0x036B3DF8 CBNZ X23, 0x36B3E20
	0x036B3DFC ADRP X8, 0xA48000
	0x036B3E00 LDR X8, [X8 + 0x558]
	0x036B3E04 LDR X0, [X8]
	0x036B3E08 BL 0x1C16F10
	0x036B3E0C MOV X23, X0
	0x036B3E10 MOV X1, X31
	0x036B3E14 BL 0x32E23B4
	0x036B3E18 STR X23, [X20 + 0x58]
	0x036B3E1C CBZ X23, 0x36B4080
	0x036B3E20 LDR X8, [X23]
	0x036B3E24 LDR X1, [X19 + 0x38]
	0x036B3E28 LDR W3, [X19 + 0x30]
	0x036B3E2C LDR W2, [X19 + 0x40]
	0x036B3E30 LDR X9, [X8 + 0x388]
	0x036B3E34 LDR X4, [X8 + 0x390]
	0x036B3E38 MOV X0, X23
	0x036B3E3C BLR X9
	0x036B3E40 LDR X8, [X20 + 0x70]
	0x036B3E44 LDRSW X9, [X19 + 0x30]
	0x036B3E48 ADD X8, X8, X9
	0x036B3E4C STR X8, [X20 + 0x70]
	0x036B3E50 STR X22, [X19 + 0x38]
	0x036B3E54 STR W31, [X19 + 0x40]
	0x036B3E58 STR W21, [X19 + 0x30]
	0x036B3E5C LDR X0, [X20 + 0x90]
	0x036B3E60 CBZ X0, 0x36B4060
	0x036B3E64 LDR X8, [X0]
	0x036B3E68 LDR X1, [X19 + 0x38]
	0x036B3E6C LDR X4, [X19 + 0x28]
	0x036B3E70 LDR W2, [X19 + 0x40]
	0x036B3E74 LDR X9, [X8 + 0x318]
	0x036B3E78 LDR X5, [X8 + 0x320]
	0x036B3E7C MOV W3, W21
	0x036B3E80 BLR X9
	0x036B3E84 CBZ X0, 0x36B4064
	0x036B3E88 MOV W1, W31
	0x036B3E8C MOV X2, X31
	0x036B3E90 BL 0x33ED3A0
	0x036B3E94 STP X0, X1, [X31 + 0x10]
	0x036B3E98 ADD X0, X31, 0x10
	0x036B3E9C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X22, 0xD2E000
	008 Move X21, 0xA44000
	009 Move W8, [X22+2415]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA8D000
	018 Move X0, [X0+872]
	019 Call 0x1C17CF4
	020 Move X0, 0xA44000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2415], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+80], V0
	028 Move [X31+88], V0
	029 Move [X31+48], V0
	030 Move [X31+56], V0
	031 Move [X31+2], V0
	032 Move [X31+64], X20
	033 Move [X31+72], X19
	034 Move X19, 0xA8D000
	035 Move W8, [X0+224]
	036 Move X19, [X19+872]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add X8, X31, 8
	041 Move X0, X31
	042 Call AsyncTaskMethodBuilder.Create
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X9, [X31+24]
	045 Move X2, [X19]
	046 Add X8, X31, 32
	047 Or X19, X8, 15
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W10, TEMP
	051 Add X1, X31, 32
	052 Move X0, X19
	053 Move [X31+40], V0
	054 Move [X31+56], X9
	055 Move [X31+32], W10
	056 Call AsyncTaskMethodBuilder.Start, X0, X1
	057 Move X0, X19
	058 Move X1, X31
	059 Call AsyncTaskMethodBuilder.get_Task, X0
	060 Move X20, [X31+144]
	061 Move X19, [X31+152]
	062 Move X22, [X31+128]
	063 Move X21, [X31+136]
	064 Move X30, [X31+112]
	065 Add X31, X31, 160
	066 Return X0

Method: System.Threading.Tasks.Task WriteChunkTrailer_inner(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B3EA0 BL 0x32C40D4
	0x036B3EA4 TBNZ X0, 0x0, 0x36B3EF8
	0x036B3EA8 STR W31, [X19]
	0x036B3EAC LDR V0, [X31 + 0x1]
	0x036B3EB0 STUR V0, [X19 + 0x48]
	0x036B3EB4 LDR X0, [X24]
	0x036B3EB8 LDR W8, [X0 + 0xE0]
	0x036B3EBC CBNZ W8, 0x36B3EC4
	0x036B3EC0 BL 0x1C16DFC
	0x036B3EC4 ADRP X8, 0xA8C000
	0x036B3EC8 LDR X8, [X8 + 0x3C0]
	0x036B3ECC ADD X0, X19, 0x8
	0x036B3ED0 LDR X3, [X8]
	0x036B3ED4 ADD X1, X31, 0x10
	0x036B3ED8 MOV X2, X19
	0x036B3EDC BL 0x218C1E8
	0x036B3EE0 B 0x36B3F28
	0x036B3EE4 LDUR V0, [X19 + 0x48]
	0x036B3EE8 MOVN W8, 0x0
	0x036B3EEC STR V0, [X31 + 0x1]
	0x036B3EF0 STP X31, X31, [X19 + 0x48]
	0x036B3EF4 STR W8, [X19]
	0x036B3EF8 ADD X0, X31, 0x10
	0x036B3EFC MOV X1, X31
	0x036B3F00 BL 0x32C40F0
	0x036B3F04 MOVN W8, 0x1
	0x036B3F08 STR W8, [X19], #0x8
	0x036B3F0C LDR X0, [X24]
	0x036B3F10 LDR W8, [X0 + 0xE0]
	0x036B3F14 CBNZ W8, 0x36B3F1C
	0x036B3F18 BL 0x1C16DFC
	0x036B3F1C MOV X0, X19
	0x036B3F20 MOV X1, X31
	0x036B3F24 BL 0x32C4864
	0x036B3F28 LDP X20, X19, [X31 + 0x50]
	0x036B3F2C LDP X22, X21, [X31 + 0x40]
	0x036B3F30 LDP X24, X23, [X31 + 0x30]
	0x036B3F34 LDP X30, X25, [X31 + 0x20]
	0x036B3F38 ADD X31, X31, 0x60
	0x036B3F3C RET
	0x036B3F40 LDR X0, [X20 + 0x40]
	0x036B3F44 CBZ X0, 0x36B4074
	0x036B3F48 LDR X8, [X0]
	0x036B3F4C LDR X1, [X8 + 0x210]
	0x036B3F50 LDR X9, [X8 + 0x208]
	0x036B3F54 BLR X9
	0x036B3F58 MOV X1, X0
	0x036B3F5C LDR X2, [X20 + 0x70]
	0x036B3F60 LDRSW X3, [X19 + 0x30]
	0x036B3F64 MOV X0, X20
	0x036B3F68 BL 0x36B2C4C
	0x036B3F6C LDRB W8, [X20 + 0x61]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0xD2E000
	008 Move X21, 0xA44000
	009 Move W8, [X22+2416]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA8D000
	018 Move X0, [X0+880]
	019 Call 0x1C17CF4
	020 Move X0, 0xA44000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2416], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+64], V0
	028 Move [X31+72], V0
	029 Move [X31+32], V0
	030 Move [X31+40], V0
	031 Move [X31+64], X20
	032 Move [X31+72], X19
	033 Move X19, 0xA8D000
	034 Move W8, [X0+224]
	035 Move X19, [X19+880]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X19]
	045 Add X8, X31, 32
	046 Or X19, X8, 15
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W10, TEMP
	050 Add X1, X31, 32
	051 Move X0, X19
	052 Move [X31+40], V0
	053 Move [X31+56], X9
	054 Move [X31+32], W10
	055 Call AsyncTaskMethodBuilder.Start, X0, X1
	056 Move X0, X19
	057 Move X1, X31
	058 Call AsyncTaskMethodBuilder.get_Task, X0
	059 Move X20, [X31+128]
	060 Move X19, [X31+136]
	061 Move X22, [X31+112]
	062 Move X21, [X31+120]
	063 Move X30, [X31+96]
	064 Add X31, X31, 144
	065 Return X0

Method: System.Threading.Tasks.Task WriteChunkTrailer()

Disassembly:
	0x036B3F70 CBZ W8, 0x36B4044
	0x036B3F74 LDR X21, [X20 + 0x58]
	0x036B3F78 CBNZ X21, 0x36B3FA0
	0x036B3F7C ADRP X8, 0xA48000
	0x036B3F80 LDR X8, [X8 + 0x558]
	0x036B3F84 LDR X0, [X8]
	0x036B3F88 BL 0x1C16F10
	0x036B3F8C MOV X21, X0
	0x036B3F90 MOV X1, X31
	0x036B3F94 BL 0x32E23B4
	0x036B3F98 STR X21, [X20 + 0x58]
	0x036B3F9C CBZ X21, 0x36B4084
	0x036B3FA0 LDR X8, [X21]
	0x036B3FA4 LDR X1, [X19 + 0x38]
	0x036B3FA8 LDR W3, [X19 + 0x30]
	0x036B3FAC LDR W2, [X19 + 0x40]
	0x036B3FB0 LDR X9, [X8 + 0x388]
	0x036B3FB4 LDR X4, [X8 + 0x390]
	0x036B3FB8 MOV X0, X21
	0x036B3FBC BLR X9
	0x036B3FC0 LDR X8, [X20 + 0x70]
	0x036B3FC4 LDRSW X9, [X19 + 0x30]
	0x036B3FC8 LDR X0, [X20 + 0x40]
	0x036B3FCC ADD X8, X8, X9
	0x036B3FD0 STR X8, [X20 + 0x70]
	0x036B3FD4 CBZ X0, 0x36B4078
	0x036B3FD8 LDR X8, [X0]
	0x036B3FDC LDR X1, [X8 + 0x210]
	0x036B3FE0 LDR X9, [X8 + 0x208]
	0x036B3FE4 BLR X9
	0x036B3FE8 CMP X0, 0x1
	0x036B3FEC B.LT 0x36B3F04
	0x036B3FF0 LDR X0, [X20 + 0x40]
	0x036B3FF4 CBZ X0, 0x36B407C
	0x036B3FF8 LDR X8, [X0]
	0x036B3FFC LDR X21, [X20 + 0x70]
	0x036B4000 LDR X1, [X8 + 0x210]
	0x036B4004 LDR X9, [X8 + 0x208]
	0x036B4008 BLR X9
	0x036B400C CMP X21, X0
	0x036B4010 B.LT 0x36B3F04
	0x036B4014 LDR X0, [X20 + 0x58]
	0x036B4018 MOVZ W8, 0x1
	0x036B401C STRB W8, [X20 + 0x60]
	0x036B4020 CBZ X0, 0x36B4088
	0x036B4024 LDR X8, [X0]
	0x036B4028 LDR X1, [X8 + 0x3C0]
	0x036B402C LDR X9, [X8 + 0x3B8]
	0x036B4030 BLR X9
	0x036B4034 STR X0, [X19 + 0x38]
	0x036B4038 STR W31, [X19 + 0x40]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X21, 0xD2E000
	007 Move X20, 0xA44000
	008 Move W8, [X21+2417]
	009 Move X20, [X20+640]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA8D000
	016 Move X0, [X0+888]
	017 Call 0x1C17CF4
	018 Move X0, 0xA44000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2417], W8
	023 Move X0, [X20]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X31+112], X31
	026 Move [X31+80], V0
	027 Move [X31+88], V0
	028 Move [X31+48], V0
	029 Move [X31+56], V0
	030 Move [X31+2], V0
	031 Move [X31+64], X19
	032 Move X19, 0xA8D000
	033 Move W8, [X0+224]
	034 Move X19, [X19+888]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Add X8, X31, 8
	039 Move X0, X31
	040 Call AsyncTaskMethodBuilder.Create
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move X9, [X31+24]
	043 Move X2, [X19]
	044 Add X8, X31, 32
	045 Or X19, X8, 15
	046 Move TEMP, 0
	047 Not TEMP
	048 Move W10, TEMP
	049 Add X1, X31, 32
	050 Move X0, X19
	051 Move [X31+40], V0
	052 Move [X31+56], X9
	053 Move [X31+32], W10
	054 Call AsyncTaskMethodBuilder.Start, X0, X1
	055 Move X0, X19
	056 Move X1, X31
	057 Call AsyncTaskMethodBuilder.get_Task, X0
	058 Move X20, [X31+144]
	059 Move X19, [X31+152]
	060 Move X30, [X31+128]
	061 Move X21, [X31+136]
	062 Add X31, X31, 160
	063 Return X0

Method: System.Void KillBuffer()

Disassembly:
	0x036B3CE4 ADRP X9, 0xA40000
	0x036B3CE8 LDR W8, [X19 + 0x30]

ISIL:
	001 Move [X0+88], X31
	002 Return 

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B403C LDR W21, [X20 + 0x70]
	0x036B4040 B 0x36B3E58
	0x036B4044 LDR X8, [X20 + 0x70]
	0x036B4048 LDRSW X21, [X19 + 0x30]
	0x036B404C ADD X8, X8, X21
	0x036B4050 STR X8, [X20 + 0x70]
	0x036B4054 B 0x36B3E5C
	0x036B4058 BL 0x1C16F20
	0x036B405C BL 0x1C16F20
	0x036B4060 BL 0x1C16F20
	0x036B4064 BL 0x1C16F20
	0x036B4068 BL 0x1C16F20
	0x036B406C BL 0x1C16F20
	0x036B4070 BL 0x1C16F20
	0x036B4074 BL 0x1C16F20
	0x036B4078 BL 0x1C16F20
	0x036B407C BL 0x1C16F20
	0x036B4080 BL 0x1C16F20
	0x036B4084 BL 0x1C16F20
	0x036B4088 BL 0x1C16F20
	0x036B408C B 0x36B4104
	0x036B4090 B 0x36B4104
	0x036B4094 B 0x36B4104
	0x036B4098 B 0x36B4104
	0x036B409C B 0x36B4104
	0x036B40A0 B 0x36B4104
	0x036B40A4 B 0x36B4104
	0x036B40A8 B 0x36B4104
	0x036B40AC B 0x36B4104
	0x036B40B0 B 0x36B4104
	0x036B40B4 B 0x36B4104
	0x036B40B8 B 0x36B4104
	0x036B40BC B 0x36B4104
	0x036B40C0 B 0x36B4104
	0x036B40C4 B 0x36B4104
	0x036B40C8 B 0x36B4104
	0x036B40CC B 0x36B4104
	0x036B40D0 B 0x36B4104
	0x036B40D4 B 0x36B4104
	0x036B40D8 B 0x36B4104
	0x036B40DC B 0x36B4104
	0x036B40E0 B 0x36B4104
	0x036B40E4 B 0x36B4104
	0x036B40E8 B 0x36B4104

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD2D000
	007 Move X21, 0xA40000
	008 Move X19, 0xA8C000
	009 Move X20, 0xA41000
	010 Move W8, [X22+2418]
	011 Move X21, [X21+2880]
	012 Move X19, [X19+160]
	013 Move X20, [X20+1976]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xA40000
	019 Move X0, [X0+2880]
	020 Call 0x1C17CF4
	021 Move X0, 0xA73000
	022 Move X0, [X0+3304]
	023 Call 0x1C17CF4
	024 Move X0, 0xA41000
	025 Move X0, [X0+1976]
	026 Call 0x1C17CF4
	027 Move X0, 0xA8C000
	028 Move X0, [X0+160]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2418], W8
	032 Move X0, [X21]
	033 Move X21, 0xA73000
	034 Move X21, [X21+3304]
	035 Call 0x1C17F10
	036 Move X1, [X19]
	037 Move X2, X31
	038 Move X19, X0
	039 Call NotSupportedException..ctor, X0, X1
	040 Move X0, [X20]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X1, [X21]
	046 Move X0, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Call Task.FromException, X0
	053 Return X0

Method: System.Boolean TryReadFromBufferedContent(System.Byte[] buffer, System.Int32 offset, System.Int32 count, out System.Int32 result)

Disassembly:
	0x036B40EC B 0x36B4104
	0x036B40F0 B 0x36B4104
	0x036B40F4 B 0x36B4104
	0x036B40F8 B 0x36B4104
	0x036B40FC B 0x36B4104
	0x036B4100 B 0x36B4104
	0x036B4104 MOV X20, X0
	0x036B4108 CMP W1, 0x1
	0x036B410C B.NE 0x36B419C
	0x036B4110 MOV X0, X20
	0x036B4114 BL 0x3EB1AD0
	0x036B4118 MOV X20, X0
	0x036B411C ADRP X0, 0xA3F000
	0x036B4120 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA40000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call InvalidOperationException..ctor, X0
	010 Move X0, 0xA8C000
	011 Move X0, [X0+896]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Close_internal(ref System.Boolean disposed)

Disassembly:
	0x036B4124 BL 0x1C16D08
	0x036B4128 LDR X8, [X20]
	0x036B412C LDR X1, [X8]
	0x036B4130 BL 0x1C17270
	0x036B4134 TBZ X0, 0x0, 0x36B4174
	0x036B4138 LDR X20, [X20]
	0x036B413C BL 0x3EB1AE0
	0x036B4140 MOVN W8, 0x1
	0x036B4144 STR W8, [X19], #0x8
	0x036B4148 ADRP X0, 0xA42000
	0x036B414C LDR X0, [X0 + 0x280]
	0x036B4150 BL 0x1C16D08
	0x036B4154 LDR W8, [X0 + 0xE0]
	0x036B4158 CBNZ W8, 0x36B4160
	0x036B415C BL 0x1C16DFC
	0x036B4160 MOV X0, X19
	0x036B4164 MOV X1, X20
	0x036B4168 MOV X2, X31
	0x036B416C BL 0x32C4908
	0x036B4170 B 0x36B3F28
	0x036B4174 MOVZ W0, 0x8
	0x036B4178 BL 0x3EB1AF0
	0x036B417C LDR X8, [X20]
	0x036B4180 STR X8, [X0]
	0x036B4184 ADRP X1, 0x800000
	0x036B4188 ADD X1, X1, 0xE58
	0x036B418C MOV X2, X31
	0x036B4190 BL 0x3EB1B00
	0x036B4194 MOV X20, X0
	0x036B4198 BL 0x3EB1AE0
	0x036B419C MOV X0, X20
	0x036B41A0 BL 0x1D2C690
	0x036B41A4 BL 0x1990590
	0x036B41A8 STR X30, [X31 - 0x30]!
	0x036B41AC STP X22, X21, [X31 + 0x10]
	0x036B41B0 STP X20, X19, [X31 + 0x20]
	0x036B41B4 ADRP X21, 0xD2C000
	0x036B41B8 ADRP X22, 0xA42000
	0x036B41BC LDRB W8, [X21 + 0x979]
	0x036B41C0 LDR X22, [X22 + 0x280]
	0x036B41C4 MOV X19, X1
	0x036B41C8 MOV X20, X0
	0x036B41CC TBNZ X8, 0x0, 0x36B41E4
	0x036B41D0 ADRP X0, 0xA42000
	0x036B41D4 LDR X0, [X0 + 0x280]
	0x036B41D8 BL 0x1C16CF4
	0x036B41DC MOVZ W8, 0x1
	0x036B41E0 STRB W8, [X21 + 0x979]
	0x036B41E4 LDR X0, [X22]
	0x036B41E8 LDR W8, [X0 + 0xE0]
	0x036B41EC CBNZ W8, 0x36B41F4
	0x036B41F0 BL 0x1C16DFC
	0x036B41F4 ADD X0, X20, 0x8
	0x036B41F8 MOV X1, X19
	0x036B41FC LDP X20, X19, [X31 + 0x20]
	0x036B4200 LDP X22, X21, [X31 + 0x10]
	0x036B4204 MOV X2, X31
	0x036B4208 LDR X30, [X31], #0x30
	0x036B420C B 0x32C477C
	0x036B4210 SUB X31, X31, 0x40
	0x036B4214 STP X30, X21, [X31 + 0x20]
	0x036B4218 STP X20, X19, [X31 + 0x30]
	0x036B421C ADRP X20, 0xD2C000
	0x036B4220 LDRB W8, [X20 + 0x97A]
	0x036B4224 MOV X19, X0
	0x036B4228 TBNZ X8, 0x0, 0x36B4258
	0x036B422C ADRP X0, 0xA8B000
	0x036B4230 LDR X0, [X0 + 0x3D0]
	0x036B4234 BL 0x1C16CF4
	0x036B4238 ADRP X0, 0xA8B000
	0x036B423C LDR X0, [X0 + 0x3D8]
	0x036B4240 BL 0x1C16CF4
	0x036B4244 ADRP X0, 0xA42000
	0x036B4248 LDR X0, [X0 + 0x280]
	0x036B424C BL 0x1C16CF4
	0x036B4250 MOVZ W8, 0x1
	0x036B4254 STRB W8, [X20 + 0x97A]
	0x036B4258 STP X31, X31, [X31 + 0x10]
	0x036B425C STR X31, [X31 + 0x8]
	0x036B4260 ADRP X21, 0xA42000
	0x036B4264 LDR W8, [X19]
	0x036B4268 LDR X20, [X19 + 0x20]
	0x036B426C LDR X21, [X21 + 0x280]
	0x036B4270 CBZ W8, 0x36B42B8
	0x036B4274 CMP W8, 0x1
	0x036B4278 B.NE 0x36B42D0
	0x036B427C LDR X8, [X19 + 0x40]
	0x036B4280 MOVN W9, 0x0
	0x036B4284 STR X8, [X31 + 0x8]
	0x036B4288 STR X31, [X19 + 0x40]
	0x036B428C STR W9, [X19]
	0x036B4290 ADD X0, X31, 0x8
	0x036B4294 MOV X1, X31
	0x036B4298 BL 0x32C3B4C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X1]
	006 Compare W8, 0
	007 JumpIfEqual {13}
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Move X21, [X31+40]
	012 Return 
	013 Move W8, 1
	014 Move [X1], W8
	015 Move W8, [X0+98]
	016 Move X20, X1
	017 Move X19, X0
	018 Compare W8, 0
	019 JumpIfEqual {31}
	020 Move X0, X19
	021 Call WebRequestStream.WriteChunkTrailer, X0
	022 Compare X0, 0
	023 JumpIfEqual {69}
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, X31
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Task.Wait, X0
	030 Return 
	031 Move W8, [X19+97]
	032 Compare W8, 0
	033 JumpIfEqual {58}
	034 Move W8, [X19+96]
	035 Compare W8, 0
	036 JumpIfNotEqual {58}
	037 Move X0, [X19+64]
	038 Compare X0, 0
	039 JumpIfEqual {69}
	040 Move X8, [X0]
	041 Move X9, [X8+520]
	042 Move X1, [X8+528]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move W8, [X19+98]
	045 Compare W8, 0
	046 JumpIfNotEqual {56}
	047 Move X8, [X19+80]
	048 Compare X8, 0
	049 JumpIfEqual {69}
	050 Add X31, X0, 1
	051 Move W8, [X8+48]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Move X8, [X19+112]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, 1
	057 Move [X20], W8
	058 Move X0, [X19+80]
	059 Compare X0, 0
	060 JumpIfEqual {69}
	061 Move X1, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X2, X31
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Call WebOperation.CompleteRequestWritten, X0, X1, X2
	068 Return 
	069 Call 0x1C17F20
	070 Move X0, 0xA6E000
	071 Move X0, [X0+1960]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X21, X0
	075 Move X0, 0xA8C000
	076 Move X0, [X0+904]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X21
	080 Move X2, X31
	081 Call IOException..ctor, X0, X1
	082 Move W8, 1
	083 Move [X19+40], W8
	084 Move [X20], W8
	085 Move X0, 0xA6B000
	086 Move X0, [X0+816]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X20, X0
	090 Move X0, 0xA8C000
	091 Move X0, [X0+912]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move W2, 6
	095 Move X0, X20
	096 Move W3, W31
	097 Move X4, X21
	098 Move X5, X31
	099 Call WebException..ctor, X0, X1, X2, X3, X4
	100 Move X21, [X19+80]
	101 Move X0, X21
	102 Call 0x19913C0
	103 Move X0, X21
	104 Move X1, X19
	105 Move X2, X20
	106 Call WebOperation.CompleteRequestWritten, X0, X1, X2
	107 Move X0, 0xA8C000
	108 Move X0, [X0+920]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X20
	112 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x036B429C CBZ X20, 0x36B446C
	0x036B42A0 LDR X8, [X20]
	0x036B42A4 LDR X1, [X8 + 0x280]
	0x036B42A8 LDR X9, [X8 + 0x278]
	0x036B42AC MOV X0, X20
	0x036B42B0 BLR X9
	0x036B42B4 B 0x36B4384
	0x036B42B8 LDR V0, [X19 + 0x3]
	0x036B42BC MOVN W8, 0x0
	0x036B42C0 STR V0, [X31 + 0x1]
	0x036B42C4 STP X31, X31, [X19 + 0x30]
	0x036B42C8 STR W8, [X19]
	0x036B42CC B 0x36B434C
	0x036B42D0 CBZ X20, 0x36B4470
	0x036B42D4 LDR X0, [X20 + 0x50]
	0x036B42D8 CBZ X0, 0x36B4474
	0x036B42DC LDR X1, [X19 + 0x28]
	0x036B42E0 BL 0x36AD230
	0x036B42E4 LDR X8, [X20 + 0x50]
	0x036B42E8 CBZ X8, 0x36B4478
	0x036B42EC LDR X9, [X8 + 0x28]
	0x036B42F0 CBZ X9, 0x36B4318
	0x036B42F4 LDRB W10, [X8 + 0x30]
	0x036B42F8 LDR X8, [X20 + 0x40]
	0x036B42FC CBZ W10, 0x36B430C
	0x036B4300 CBZ X8, 0x36B4480
	0x036B4304 MOV X9, X31
	0x036B4308 B 0x36B4314
	0x036B430C CBZ X8, 0x36B4488
	0x036B4310 LDRSW X9, [X9 + 0x1C]
	0x036B4314 STR X9, [X8 + 0x50]
	0x036B4318 LDR X2, [X19 + 0x28]
	0x036B431C MOV X0, X20
	0x036B4320 MOV W1, W31
	0x036B4324 BL 0x36B2CEC
	0x036B4328 CBZ X0, 0x36B447C
	0x036B432C MOV W1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD2D000
	005 Move X20, 0xA40000
	006 Move W8, [X19+2419]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xA40000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move X0, 0xA8C000
	016 Move X0, [X0+112]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2419], W8
	020 Move X0, [X20]
	021 Move W1, 2
	022 Call 0x1C17D6C
	023 Compare X0, 0
	024 JumpIfEqual {43}
	025 Move W8, [X0+24]
	026 Compare W8, 0
	027 JumpIfEqual {42}
	028 Move W9, 13
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X0+32], W9
	031 Move X8, 0xA8C000
	032 Move X8, [X8+112]
	033 Move W9, 10
	034 Move [X0+33], W9
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move [X8], X0
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F28
	043 Call 0x1C17F20

