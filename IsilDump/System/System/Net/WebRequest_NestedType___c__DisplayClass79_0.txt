Type: System.Net.WebRequest/<>c__DisplayClass79_0

Method: System.Void .ctor()

Disassembly:
	0x03685060 MOV X22, X1
	0x03685064 MOV X20, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task`1<System.Net.WebResponse> <GetResponseAsync>b__1()

Disassembly:
	0x03685B1C BL 0x33BDD8C
	0x03685B20 MOVZ W8, 0x1
	0x03685B24 STRH W31, [X20 + 0x10]
	0x03685B28 STP X24, X25, [X20 + 0x18]
	0x03685B2C STRB W8, [X20 + 0x28]
	0x03685B30 LDR X8, [X19]
	0x03685B34 MOV X0, X20
	0x03685B38 LDR X1, [X8 + 0x40]
	0x03685B3C BL 0x1C16E00
	0x03685B40 CBZ X0, 0x3686C78
	0x03685B44 LDR W8, [X23]
	0x03685B48 CMP W8, 0x7
	0x03685B4C B.LS 0x3686C74
	0x03685B50 STR X20, [X19 + 0x58]
	0x03685B54 LDR X8, [X22]
	0x03685B58 LDR X0, [X21]
	0x03685B5C ADRP X20, 0xAB9000
	0x03685B60 LDR X8, [X8 + 0xB8]
	0x03685B64 LDR X24, [X8 + 0x18]
	0x03685B68 LDR X20, [X20 + 0x200]
	0x03685B6C BL 0x1C16F10
	0x03685B70 LDR X25, [X20]
	0x03685B74 MOV X1, X31
	0x03685B78 MOV X20, X0
	0x03685B7C BL 0x33BDD8C
	0x03685B80 MOVZ W8, 0x1
	0x03685B84 STRH W31, [X20 + 0x10]
	0x03685B88 STP X24, X25, [X20 + 0x18]
	0x03685B8C STRB W8, [X20 + 0x28]
	0x03685B90 LDR X8, [X19]
	0x03685B94 MOV X0, X20
	0x03685B98 LDR X1, [X8 + 0x40]
	0x03685B9C BL 0x1C16E00
	0x03685BA0 CBZ X0, 0x3686C78
	0x03685BA4 LDR W8, [X23]
	0x03685BA8 CMP W8, 0x8
	0x03685BAC B.LS 0x3686C74
	0x03685BB0 STR X20, [X19 + 0x60]
	0x03685BB4 LDR X8, [X22]
	0x03685BB8 LDR X0, [X21]
	0x03685BBC ADRP X20, 0xAB5000
	0x03685BC0 LDR X8, [X8 + 0xB8]
	0x03685BC4 LDR X24, [X8 + 0x18]
	0x03685BC8 LDR X20, [X20 + 0x158]
	0x03685BCC BL 0x1C16F10
	0x03685BD0 LDR X25, [X20]
	0x03685BD4 MOV X1, X31
	0x03685BD8 MOV X20, X0
	0x03685BDC BL 0x33BDD8C
	0x03685BE0 MOVZ W8, 0x1
	0x03685BE4 STP X24, X25, [X20 + 0x18]
	0x03685BE8 STRH W8, [X20 + 0x10]
	0x03685BEC STRB W8, [X20 + 0x28]
	0x03685BF0 LDR X8, [X19]
	0x03685BF4 MOV X0, X20
	0x03685BF8 LDR X1, [X8 + 0x40]
	0x03685BFC BL 0x1C16E00
	0x03685C00 CBZ X0, 0x3686C78
	0x03685C04 LDR W8, [X23]
	0x03685C08 CMP W8, 0x9
	0x03685C0C B.LS 0x3686C74
	0x03685C10 STR X20, [X19 + 0x68]
	0x03685C14 LDR X8, [X22]
	0x03685C18 LDR X0, [X21]
	0x03685C1C ADRP X20, 0xAB5000
	0x03685C20 LDR X8, [X8 + 0xB8]
	0x03685C24 LDR X24, [X8 + 0x10]
	0x03685C28 LDR X20, [X20 + 0xA38]
	0x03685C2C BL 0x1C16F10
	0x03685C30 LDR X25, [X20]
	0x03685C34 MOV X1, X31
	0x03685C38 MOV X20, X0
	0x03685C3C BL 0x33BDD8C
	0x03685C40 STRH W31, [X20 + 0x10]
	0x03685C44 STP X24, X25, [X20 + 0x18]
	0x03685C48 STRB W31, [X20 + 0x28]
	0x03685C4C LDR X8, [X19]
	0x03685C50 MOV X0, X20
	0x03685C54 LDR X1, [X8 + 0x40]
	0x03685C58 BL 0x1C16E00
	0x03685C5C CBZ X0, 0x3686C78
	0x03685C60 LDR W8, [X23]
	0x03685C64 CMP W8, 0xA
	0x03685C68 B.LS 0x3686C74
	0x03685C6C STR X20, [X19 + 0x70]
	0x03685C70 LDR X8, [X22]
	0x03685C74 LDR X0, [X21]
	0x03685C78 ADRP X20, 0xAA9000
	0x03685C7C LDR X8, [X8 + 0xB8]
	0x03685C80 LDR X24, [X8 + 0x10]
	0x03685C84 LDR X20, [X20 + 0x988]
	0x03685C88 BL 0x1C16F10
	0x03685C8C LDR X25, [X20]
	0x03685C90 MOV X1, X31
	0x03685C94 MOV X20, X0
	0x03685C98 BL 0x33BDD8C
	0x03685C9C MOVZ W8, 0x1
	0x03685CA0 STP X24, X25, [X20 + 0x18]
	0x03685CA4 STRH W8, [X20 + 0x10]
	0x03685CA8 STRB W31, [X20 + 0x28]
	0x03685CAC LDR X8, [X19]
	0x03685CB0 MOV X0, X20
	0x03685CB4 LDR X1, [X8 + 0x40]
	0x03685CB8 BL 0x1C16E00
	0x03685CBC CBZ X0, 0x3686C78
	0x03685CC0 LDR W8, [X23]
	0x03685CC4 CMP W8, 0xB
	0x03685CC8 B.LS 0x3686C74
	0x03685CCC STR X20, [X19 + 0x78]
	0x03685CD0 LDR X8, [X22]
	0x03685CD4 LDR X0, [X21]
	0x03685CD8 ADRP X20, 0xAB5000
	0x03685CDC LDR X8, [X8 + 0xB8]
	0x03685CE0 LDR X24, [X8 + 0x18]
	0x03685CE4 LDR X20, [X20 + 0xA60]
	0x03685CE8 BL 0x1C16F10
	0x03685CEC LDR X25, [X20]
	0x03685CF0 MOV X1, X31
	0x03685CF4 MOV X20, X0
	0x03685CF8 BL 0x33BDD8C
	0x03685CFC MOVZ W8, 0x1
	0x03685D00 STRH W31, [X20 + 0x10]
	0x03685D04 STP X24, X25, [X20 + 0x18]
	0x03685D08 STRB W8, [X20 + 0x28]
	0x03685D0C LDR X8, [X19]
	0x03685D10 MOV X0, X20
	0x03685D14 LDR X1, [X8 + 0x40]
	0x03685D18 BL 0x1C16E00
	0x03685D1C CBZ X0, 0x3686C78
	0x03685D20 LDR W8, [X23]
	0x03685D24 CMP W8, 0xC
	0x03685D28 B.LS 0x3686C74
	0x03685D2C STR X20, [X19 + 0x80]
	0x03685D30 LDR X8, [X22]
	0x03685D34 LDR X0, [X21]
	0x03685D38 ADRP X20, 0xAB5000
	0x03685D3C LDR X8, [X8 + 0xB8]
	0x03685D40 LDR X24, [X8 + 0x10]
	0x03685D44 LDR X20, [X20 + 0xAF8]
	0x03685D48 BL 0x1C16F10
	0x03685D4C LDR X25, [X20]
	0x03685D50 MOV X1, X31
	0x03685D54 MOV X20, X0
	0x03685D58 BL 0x33BDD8C
	0x03685D5C STRH W31, [X20 + 0x10]
	0x03685D60 STP X24, X25, [X20 + 0x18]
	0x03685D64 STRB W31, [X20 + 0x28]
	0x03685D68 LDR X8, [X19]
	0x03685D6C MOV X0, X20
	0x03685D70 LDR X1, [X8 + 0x40]
	0x03685D74 BL 0x1C16E00
	0x03685D78 CBZ X0, 0x3686C78
	0x03685D7C LDR W8, [X23]
	0x03685D80 CMP W8, 0xD
	0x03685D84 B.LS 0x3686C74
	0x03685D88 STR X20, [X19 + 0x88]
	0x03685D8C LDR X8, [X22]
	0x03685D90 LDR X0, [X21]
	0x03685D94 ADRP X20, 0xA96000
	0x03685D98 LDR X8, [X8 + 0xB8]
	0x03685D9C LDR X24, [X8 + 0x10]
	0x03685DA0 LDR X20, [X20 + 0xB28]
	0x03685DA4 BL 0x1C16F10
	0x03685DA8 LDR X25, [X20]
	0x03685DAC MOV X1, X31
	0x03685DB0 MOV X20, X0
	0x03685DB4 BL 0x33BDD8C
	0x03685DB8 MOVZ W8, 0x101
	0x03685DBC STP X24, X25, [X20 + 0x18]
	0x03685DC0 STRH W8, [X20 + 0x10]
	0x03685DC4 STRB W31, [X20 + 0x28]
	0x03685DC8 LDR X8, [X19]
	0x03685DCC MOV X0, X20
	0x03685DD0 LDR X1, [X8 + 0x40]
	0x03685DD4 BL 0x1C16E00
	0x03685DD8 CBZ X0, 0x3686C78
	0x03685DDC LDR W8, [X23]
	0x03685DE0 CMP W8, 0xE
	0x03685DE4 B.LS 0x3686C74
	0x03685DE8 STR X20, [X19 + 0x90]
	0x03685DEC LDR X8, [X22]
	0x03685DF0 LDR X0, [X21]
	0x03685DF4 ADRP X20, 0xAB5000
	0x03685DF8 LDR X8, [X8 + 0xB8]
	0x03685DFC LDR X24, [X8 + 0x18]
	0x03685E00 LDR X20, [X20 + 0x6D0]
	0x03685E04 BL 0x1C16F10
	0x03685E08 LDR X25, [X20]
	0x03685E0C MOV X1, X31
	0x03685E10 MOV X20, X0
	0x03685E14 BL 0x33BDD8C
	0x03685E18 MOVZ W8, 0x1
	0x03685E1C STRH W31, [X20 + 0x10]
	0x03685E20 STP X24, X25, [X20 + 0x18]
	0x03685E24 STRB W8, [X20 + 0x28]
	0x03685E28 LDR X8, [X19]
	0x03685E2C MOV X0, X20
	0x03685E30 LDR X1, [X8 + 0x40]
	0x03685E34 BL 0x1C16E00
	0x03685E38 CBZ X0, 0x3686C78
	0x03685E3C LDR W8, [X23]
	0x03685E40 CMP W8, 0xF
	0x03685E44 B.LS 0x3686C74
	0x03685E48 STR X20, [X19 + 0x98]
	0x03685E4C LDR X8, [X22]
	0x03685E50 LDR X0, [X21]
	0x03685E54 ADRP X20, 0xAB5000
	0x03685E58 LDR X8, [X8 + 0xB8]
	0x03685E5C LDR X24, [X8 + 0x18]
	0x03685E60 LDR X20, [X20 + 0xAC0]
	0x03685E64 BL 0x1C16F10
	0x03685E68 LDR X25, [X20]
	0x03685E6C MOV X1, X31
	0x03685E70 MOV X20, X0
	0x03685E74 BL 0x33BDD8C
	0x03685E78 MOVZ W8, 0x1
	0x03685E7C STRH W31, [X20 + 0x10]
	0x03685E80 STP X24, X25, [X20 + 0x18]
	0x03685E84 STRB W8, [X20 + 0x28]
	0x03685E88 LDR X8, [X19]
	0x03685E8C MOV X0, X20
	0x03685E90 LDR X1, [X8 + 0x40]
	0x03685E94 BL 0x1C16E00
	0x03685E98 CBZ X0, 0x3686C78
	0x03685E9C LDR W8, [X23]
	0x03685EA0 CMP W8, 0x10
	0x03685EA4 B.LS 0x3686C74
	0x03685EA8 STR X20, [X19 + 0xA0]
	0x03685EAC LDR X8, [X22]
	0x03685EB0 LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0xD5C000
	010 Move W8, [X19+2059]
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xABA000
	017 Move X0, [X0+432]
	018 Call 0x1C17CF4
	019 Move X0, 0xABA000
	020 Move X0, [X0+400]
	021 Call 0x1C17CF4
	022 Move X0, 0xA6F000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0xABA000
	026 Move X0, [X0+440]
	027 Call 0x1C17CF4
	028 Move X0, 0xABA000
	029 Move X0, [X0+424]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+2059], W8
	033 Move X25, 0xA6F000
	034 Move X19, [X21+16]
	035 Move X25, [X25+3584]
	036 Compare X19, 0
	037 JumpIfEqual {148}
	038 Move X8, [X19]
	039 Move X1, [X8+608]
	040 Move X9, [X8+600]
	041 Move X0, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, 0xABA000
	044 Move X8, [X8+424]
	045 Move X20, X0
	046 Move X0, [X8]
	047 Call Task`1<Object>.get_Factory
	048 Move X8, 0xABA000
	049 Move X8, [X8+400]
	050 Move X22, X0
	051 Move X24, [X21+24]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Compare X24, 0
	055 JumpIfEqual {151}
	056 Move X8, [X24]
	057 Move X23, X0
	058 Move X2, [X8+688]
	059 Move X1, X24
	060 Move X3, X31
	061 Call Func`3<Object, Object, Object>..ctor, X0, X1, X2
	062 Move X8, 0xABA000
	063 Move X8, [X8+432]
	064 Move X24, [X21+24]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Compare X24, 0
	068 JumpIfEqual {152}
	069 Move X8, [X24]
	070 Move X21, X0
	071 Move X2, [X8+704]
	072 Move X1, X24
	073 Move X3, X31
	074 Call Func`2<Object, Object>..ctor, X0, X1, X2
	075 Compare X22, 0
	076 JumpIfEqual {155}
	077 Move X8, 0xABA000
	078 Move X8, [X8+440]
	079 Move X4, [X8]
	080 Move X0, X22
	081 Move X1, X23
	082 Move X2, X21
	083 Move X3, X31
	084 Call TaskFactory`1<Object>.FromAsync, X0, X1, X2, X3
	085 Move X22, X0
	086 Move X21, X31
	087 Compare X20, 0
	088 JumpIfEqual {110}
	089 Move X8, [X20]
	090 Move X1, [X25]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X21, 0
	111 JumpIfNotEqual {153}
	112 Move X20, X31
	113 Compare X19, 0
	114 JumpIfEqual {136}
	115 Move X8, [X19]
	116 Move X1, [X25]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X19
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X19
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X20, 0
	137 JumpIfNotEqual {149}
	138 Move X0, X22
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move X30, [X31+64]
	146 Move X25, [X31+72]
	147 Return X0
	148 Call 0x1C17F20
	149 Move X0, X20
	150 Call 0x1C17F18
	151 Call 0x1C17F20
	152 Call 0x1C17F20
	153 Move X0, X21
	154 Call 0x1C17F18
	155 Call 0x1C17F20
	156 Move X23, X1
	157 Move X24, X0
	158 Move X23, X1
	159 Move X24, X0
	160 Move X23, X1
	161 Move X24, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X24
	164 Call 0x3EB2AD0
	165 Move X21, [X0]
	166 Call 0x3EB2AE0
	167 Move X22, X31
	168 Compare X20, 0
	169 JumpIfNotEqual {89}
	170 Move X21, X31
	171 Compare X20, 0
	172 JumpIfEqual {194}
	173 Move X8, [X20]
	174 Move X1, [X25]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Compare X9, 0
	177 JumpIfEqual {184}
	178 Move X10, [X8+176]
	179 Add X10, X10, 8
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Subtract X9, X9, 1
	183 Add X10, X10, 16
	184 Move X0, X20
	185 Move W2, W31
	186 Call 0x1C5D788
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Add X8, X8, X9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X1, [X0+8]
	192 Move X0, X20
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Compare X21, 0
	195 JumpIfNotEqual {203}
	196 Move X22, X31
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X0, X24
	199 Call 0x3EB2AD0
	200 Move X20, [X0]
	201 Call 0x3EB2AE0
	202 Move X20, X31
	203 Move X0, X21
	204 Call 0x1C17F18
	205 Move X23, X1
	206 Move X24, X0
	207 Compare X20, 0
	208 JumpIfNotEqual {173}
	209 Move X24, X0
	210 Compare X19, 0
	211 JumpIfEqual {233}
	212 Move X8, [X19]
	213 Move X1, [X25]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move X0, X19
	224 Move W2, W31
	225 Call 0x1C5D788
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Add X8, X8, X9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, X19
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X20, 0
	234 JumpIfNotEqual {237}
	235 Move X0, X24
	236 Call 0x1D2D690
	237 Move X0, X20
	238 Call 0x1C17F18
	239 Call 0x1991590

