Type: System.Net.IPEndPoint

Method: System.Net.Sockets.AddressFamily get_AddressFamily()

Disassembly:
	0x0366F7A4 BL 0x1D2C690
	0x0366F7A8 BL 0x1990590
	0x0366F7AC MOV X1, X31
	0x0366F7B0 MOV X2, X31
	0x0366F7B4 MOV W3, W31
	0x0366F7B8 B 0x366F248
	0x0366F7BC MOV X0, X31
	0x0366F7C0 RET
	0x0366F7C4 STP X30, X23, [X31 - 0x30]!
	0x0366F7C8 STP X22, X21, [X31 + 0x10]
	0x0366F7CC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X8, [X8+24]
	006 Move W9, 23
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, 2
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.Void .ctor(System.Int64 address, System.Int32 port)

Disassembly:
	0x0366F7D0 ADRP X22, 0xD71000
	0x0366F7D4 ADRP X23, 0xAAF000
	0x0366F7D8 LDRB W8, [X22 + 0x76E]
	0x0366F7DC LDR X23, [X23 + 0x330]
	0x0366F7E0 MOV X20, X3
	0x0366F7E4 MOV W19, W2
	0x0366F7E8 MOV X21, X1
	0x0366F7EC TBNZ X8, 0x0, 0x366F804
	0x0366F7F0 ADRP X0, 0xAAF000
	0x0366F7F4 LDR X0, [X0 + 0x330]
	0x0366F7F8 BL 0x1C16CF4
	0x0366F7FC MOVZ W8, 0x1
	0x0366F800 STRB W8, [X22 + 0x76E]
	0x0366F804 LDR X0, [X23]
	0x0366F808 BL 0x1C16F10
	0x0366F80C MOV X1, X21
	0x0366F810 MOV X2, X20
	0x0366F814 MOV W3, W19
	0x0366F818 MOV X4, X31
	0x0366F81C MOV X5, X31
	0x0366F820 MOV X22, X0
	0x0366F824 BL 0x367B5A0
	0x0366F828 MOV X0, X22
	0x0366F82C LDP X20, X19, [X31 + 0x20]
	0x0366F830 LDP X22, X21, [X31 + 0x10]
	0x0366F834 LDP X30, X23, [X31], #0x30
	0x0366F838 RET
	0x0366F83C STR X30, [X31 - 0x40]!
	0x0366F840 STP X24, X23, [X31 + 0x10]
	0x0366F844 STP X22, X21, [X31 + 0x20]
	0x0366F848 STP X20, X19, [X31 + 0x30]
	0x0366F84C ADRP X24, 0xD71000
	0x0366F850 ADRP X23, 0xACE000
	0x0366F854 ADRP X22, 0xAAF000
	0x0366F858 LDRB W8, [X24 + 0x76F]
	0x0366F85C LDR X23, [X23 + 0x858]
	0x0366F860 LDR X22, [X22 + 0x330]
	0x0366F864 MOV X19, X3
	0x0366F868 MOV X20, X2
	0x0366F86C MOV W21, W1
	0x0366F870 TBNZ X8, 0x0, 0x366F894
	0x0366F874 ADRP X0, 0xAAF000
	0x0366F878 LDR X0, [X0 + 0x330]
	0x0366F87C BL 0x1C16CF4
	0x0366F880 ADRP X0, 0xACE000
	0x0366F884 LDR X0, [X0 + 0x858]
	0x0366F888 BL 0x1C16CF4
	0x0366F88C MOVZ W8, 0x1
	0x0366F890 STRB W8, [X24 + 0x76F]
	0x0366F894 MOV W0, W21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD72000
	007 Move W8, [X22+1893]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA92000
	016 Move X0, [X0+2408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1893], W8
	020 Move X0, X20
	021 Move X1, X31
	022 Call EndPoint..ctor, X0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, 0xA92000
	025 Move X8, [X8+2408]
	026 Move [X20+24], W21
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X19
	030 Move X21, X0
	031 Call IPAddress..ctor, X0, X1
	032 Move [X20+16], X21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 
	039 Move X0, 0xA8D000
	040 Move X0, [X0+1888]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0xACF000
	045 Move X0, [X0+1992]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call ArgumentOutOfRangeException..ctor, X0, X1
	051 Move X0, 0xACF000
	052 Move X0, [X0+2000]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X19
	056 Call 0x1C17DEC

Method: System.Void .ctor(System.Net.IPAddress address, System.Int32 port)

Disassembly:
	0x0366F898 MOV X1, X20
	0x0366F89C MOV X2, X31
	0x0366F8A0 BL 0x36876A0
	0x0366F8A4 LDR X8, [X23]
	0x0366F8A8 MOV X1, X0
	0x0366F8AC MOV X2, X31
	0x0366F8B0 MOV X0, X8
	0x0366F8B4 BL 0x32094D4
	0x0366F8B8 LDR X8, [X22]
	0x0366F8BC MOV X20, X0
	0x0366F8C0 MOV X0, X8
	0x0366F8C4 BL 0x1C16F10
	0x0366F8C8 MOVZ W3, 0x7
	0x0366F8CC MOV X1, X20
	0x0366F8D0 MOV X2, X19
	0x0366F8D4 MOV X4, X31
	0x0366F8D8 MOV X5, X31
	0x0366F8DC MOV X21, X0
	0x0366F8E0 BL 0x367B5A0
	0x0366F8E4 MOV X0, X21
	0x0366F8E8 LDP X20, X19, [X31 + 0x30]
	0x0366F8EC LDP X22, X21, [X31 + 0x20]
	0x0366F8F0 LDP X24, X23, [X31 + 0x10]
	0x0366F8F4 LDR X30, [X31], #0x40
	0x0366F8F8 RET
	0x0366F8FC STR X30, [X31 - 0x20]!
	0x0366F900 STP X20, X19, [X31 + 0x10]
	0x0366F904 LDRB W8, [X0 + 0x48]
	0x0366F908 CBNZ W8, 0x366F914
	0x0366F90C MOV X19, X0
	0x0366F910 BL 0x366F2DC
	0x0366F914 LDP X20, X19, [X31 + 0x10]
	0x0366F918 LDR X30, [X31], #0x20
	0x0366F91C RET
	0x0366F920 CMP W1, 0x1
	0x0366F924 MOV X20, X0
	0x0366F928 B.NE 0x366F9A4
	0x0366F92C MOV X0, X20
	0x0366F930 BL 0x3EB1AD0
	0x0366F934 MOV X20, X0
	0x0366F938 ADRP X0, 0xA84000
	0x0366F93C LDR X0, [X0 + 0x7D0]
	0x0366F940 BL 0x1C16D08
	0x0366F944 LDR X8, [X20]
	0x0366F948 LDR X1, [X8]
	0x0366F94C BL 0x1C17270

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X1, X31
	007 Move W20, W2
	008 Move X21, X0
	009 Call EndPoint..ctor, X0
	010 Compare X19, 0
	011 JumpIfEqual {20}
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X21+24], W20
	014 Move [X21+16], X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Move X21, [X31+40]
	019 Return 
	020 Move X0, 0xA8A000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xACF000
	026 Move X0, [X0+1848]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0xA8D000
	033 Move X0, [X0+1888]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0xACF000
	038 Move X0, [X0+1992]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call ArgumentOutOfRangeException..ctor, X0, X1
	044 Move X0, 0xACF000
	045 Move X0, [X0+2008]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.Net.IPAddress get_Address()

Disassembly:
	0x0366F950 TBZ X0, 0x0, 0x366F97C
	0x0366F954 LDR X20, [X20]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Int32 get_Port()

Disassembly:
	0x0366F958 BL 0x3EB1AE0
	0x0366F95C LDR X8, [X19]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x0366F960 MOV X0, X19
	0x0366F964 MOV X1, X20
	0x0366F968 LDP X20, X19, [X31 + 0x10]
	0x0366F96C LDR X3, [X8 + 0x3B8]
	0x0366F970 LDR X2, [X8 + 0x3C0]
	0x0366F974 LDR X30, [X31], #0x20
	0x0366F978 BR X3
	0x0366F97C MOVZ W0, 0x8
	0x0366F980 BL 0x3EB1AF0
	0x0366F984 LDR X8, [X20]
	0x0366F988 STR X8, [X0]
	0x0366F98C ADRP X1, 0x845000
	0x0366F990 ADD X1, X1, 0xE58
	0x0366F994 MOV X2, X31
	0x0366F998 BL 0x3EB1B00
	0x0366F99C MOV X20, X0
	0x0366F9A0 BL 0x3EB1AE0
	0x0366F9A4 MOV X0, X20
	0x0366F9A8 BL 0x1D2C690
	0x0366F9AC BL 0x1990590
	0x0366F9B0 LDR W8, [X0 + 0x18]
	0x0366F9B4 ANDS W31, W8, W1, 0x0
	0x0366F9B8 CSET W0, NE
	0x0366F9BC RET
	0x0366F9C0 STP X30, X23, [X31 - 0x30]!
	0x0366F9C4 STP X22, X21, [X31 + 0x10]
	0x0366F9C8 STP X20, X19, [X31 + 0x20]
	0x0366F9CC LDRB W8, [X0 + 0x5C]
	0x0366F9D0 MOV X19, X0
	0x0366F9D4 MOV X20, X1
	0x0366F9D8 CBZ W8, 0x366FA0C
	0x0366F9DC LDRB W21, [X19 + 0x48]
	0x0366F9E0 LDR W22, [X19 + 0x58]
	0x0366F9E4 LDR X23, [X19 + 0x50]
	0x0366F9E8 MOV X0, X19
	0x0366F9EC BL 0x366FAF0
	0x0366F9F0 CBZ W21, 0x366FA08
	0x0366F9F4 LDP X20, X19, [X31 + 0x20]
	0x0366F9F8 LDP X22, X21, [X31 + 0x10]
	0x0366F9FC MOVZ W0, 0x1
	0x0366FA00 LDP X30, X23, [X31], #0x30
	0x0366FA04 RET
	0x0366FA08 STR X0, [X19 + 0x60]
	0x0366FA0C MOV X0, X19
	0x0366FA10 MOV X1, X20
	0x0366FA14 LDP X20, X19, [X31 + 0x20]
	0x0366FA18 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD72000
	007 Move W8, [X20+1894]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xACF000
	014 Move X0, [X0+2016]
	015 Call 0x1C17CF4
	016 Move X0, 0xA8D000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1894], W8
	021 Move X0, [X19+16]
	022 Compare X0, 0
	023 JumpIfEqual {56}
	024 Move X8, [X0+24]
	025 Move X9, 0xA8D000
	026 Move X10, 0xACF000
	027 Move X9, [X9+4080]
	028 Move X10, [X10+2016]
	029 Move X11, [X0]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X8]
	033 Move X8, [X11+360]
	034 Move X1, [X11+368]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move W8, [X19+24]
	037 Move X21, X0
	038 Move X0, X31
	039 Move [X31+12], W8
	040 Call NumberFormatInfo.get_InvariantInfo
	041 Move X1, X0
	042 Add X0, X31, 12
	043 Move X2, X31
	044 Call Int32.ToString, X0, X1
	045 Move X2, X0
	046 Move X0, X20
	047 Move X1, X21
	048 Move X3, X31
	049 Call String.Format, X0, X1, X2
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Add X31, X31, 48
	055 Return X0
	056 Call 0x1C17F20

Method: System.Net.SocketAddress Serialize()

Disassembly:
	0x0366FA1C LDP X30, X23, [X31], #0x30
	0x0366FA20 B 0x366FE38
	0x0366FA24 CMP W1, 0x1
	0x0366FA28 MOV X21, X0
	0x0366FA2C B.NE 0x366FAE4
	0x0366FA30 MOV X0, X21
	0x0366FA34 BL 0x3EB1AD0
	0x0366FA38 MOV X21, X0
	0x0366FA3C ADRP X0, 0xA8A000
	0x0366FA40 LDR X0, [X0 + 0xCC0]
	0x0366FA44 BL 0x1C16D08
	0x0366FA48 LDR X8, [X21]
	0x0366FA4C LDR X1, [X8]
	0x0366FA50 BL 0x1C17270
	0x0366FA54 TBZ X0, 0x0, 0x366FAB8
	0x0366FA58 LDR X21, [X21]
	0x0366FA5C BL 0x3EB1AE0
	0x0366FA60 TBNZ X22, 0x1F, 0x366FAAC
	0x0366FA64 CBZ X23, 0x366FAB4
	0x0366FA68 LDR W8, [X23 + 0x18]
	0x0366FA6C CMP W22, W8
	0x0366FA70 B.GE 0x366FAAC
	0x0366FA74 CMP W22, W8
	0x0366FA78 B.CS 0x366FAD8
	0x0366FA7C ADD X8, X23, X22, 0x3, LSL
	0x0366FA80 LDR X8, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD72000
	006 Move X21, 0xACF000
	007 Move W8, [X20+1895]
	008 Move X21, [X21+2024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xACF000
	015 Move X0, [X0+2024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1895], W8
	019 Move X0, [X21]
	020 Move X20, [X19+16]
	021 Move W19, [X19+24]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move W2, W19
	025 Move X3, X31
	026 Move X21, X0
	027 Call SocketAddress..ctor, X0, X1, X2
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X21
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Net.EndPoint Create(System.Net.SocketAddress socketAddress)

Disassembly:
	0x0366FA84 CBZ X8, 0x366FAB4
	0x0366FA88 ADRP X0, 0xACE000
	0x0366FA8C LDR X22, [X8 + 0x10]
	0x0366FA90 LDR X0, [X0 + 0x860]
	0x0366FA94 BL 0x1C16D08
	0x0366FA98 MOV X1, X0
	0x0366FA9C MOV X0, X22
	0x0366FAA0 MOV X2, X31
	0x0366FAA4 BL 0x3226EF8
	0x0366FAA8 TBZ X0, 0x0, 0x366FA0C
	0x0366FAAC MOV X0, X21
	0x0366FAB0 BL 0x1C16F18
	0x0366FAB4 BL 0x1C16F20
	0x0366FAB8 MOVZ W0, 0x8
	0x0366FABC BL 0x3EB1AF0
	0x0366FAC0 LDR X8, [X21]
	0x0366FAC4 STR X8, [X0]
	0x0366FAC8 ADRP X1, 0x845000
	0x0366FACC ADD X1, X1, 0xE58
	0x0366FAD0 MOV X2, X31
	0x0366FAD4 BL 0x3EB1B00
	0x0366FAD8 BL 0x1C16F28
	0x0366FADC MOV X21, X0
	0x0366FAE0 BL 0x3EB1AE0
	0x0366FAE4 MOV X0, X21
	0x0366FAE8 BL 0x1D2C690
	0x0366FAEC BL 0x1990590
	0x0366FAF0 STR X30, [X31 - 0x30]!
	0x0366FAF4 STP X22, X21, [X31 + 0x10]
	0x0366FAF8 STP X20, X19, [X31 + 0x20]
	0x0366FAFC ADRP X20, 0xD71000
	0x0366FB00 ADRP X21, 0xACE000
	0x0366FB04 LDRB W8, [X20 + 0x775]
	0x0366FB08 LDR X21, [X21 + 0x868]
	0x0366FB0C MOV X19, X0
	0x0366FB10 TBNZ X8, 0x0, 0x366FB34
	0x0366FB14 ADRP X0, 0xACE000
	0x0366FB18 LDR X0, [X0 + 0x828]
	0x0366FB1C BL 0x1C16CF4
	0x0366FB20 ADRP X0, 0xACE000
	0x0366FB24 LDR X0, [X0 + 0x868]
	0x0366FB28 BL 0x1C16CF4
	0x0366FB2C MOVZ W8, 0x1
	0x0366FB30 STRB W8, [X20 + 0x775]
	0x0366FB34 LDR X0, [X21]
	0x0366FB38 BL 0x1C16F10
	0x0366FB3C MOV X1, X19
	0x0366FB40 MOV X20, X0
	0x0366FB44 BL 0x3670B50
	0x0366FB48 LDR X8, [X19 + 0x70]
	0x0366FB4C CBZ X8, 0x366FC38
	0x0366FB50 LDR W8, [X8 + 0x10]
	0x0366FB54 CMP W8, 0x1
	0x0366FB58 B.LT 0x366FB78
	0x0366FB5C MOVN W2, 0x0
	0x0366FB60 MOV X0, X19
	0x0366FB64 MOV X1, X20
	0x0366FB68 BL 0x367030C
	0x0366FB6C CBZ X20, 0x366FC3C
	0x0366FB70 LDR X0, [X20 + 0x10]
	0x0366FB74 B 0x366FBD8
	0x0366FB78 LDRB W8, [X19 + 0x48]
	0x0366FB7C CBZ W8, 0x366FBE8
	0x0366FB80 CBZ X20, 0x366FC40
	0x0366FB84 LDR X21, [X20 + 0x20]
	0x0366FB88 CBZ X21, 0x366FC44
	0x0366FB8C ADRP X22, 0xACE000
	0x0366FB90 LDR X22, [X22 + 0x828]
	0x0366FB94 LDR X0, [X22]
	0x0366FB98 LDR W8, [X0 + 0xE0]
	0x0366FB9C CBNZ W8, 0x366FBA8
	0x0366FBA0 BL 0x1C16DFC
	0x0366FBA4 LDR X0, [X22]
	0x0366FBA8 LDR X8, [X0 + 0xB8]
	0x0366FBAC LDR X9, [X19]
	0x0366FBB0 LDR W3, [X21 + 0x18]
	0x0366FBB4 LDR X4, [X8 + 0x8]
	0x0366FBB8 LDR X8, [X9 + 0x2B8]
	0x0366FBBC LDR X6, [X9 + 0x2C0]
	0x0366FBC0 MOV X0, X19
	0x0366FBC4 MOV X1, X21
	0x0366FBC8 MOV W2, W31
	0x0366FBCC MOV X5, X20
	0x0366FBD0 BLR X8
	0x0366FBD4 MOV X0, X31
	0x0366FBD8 LDP X20, X19, [X31 + 0x20]
	0x0366FBDC LDP X22, X21, [X31 + 0x10]
	0x0366FBE0 LDR X30, [X31], #0x30
	0x0366FBE4 RET
	0x0366FBE8 CBZ X20, 0x366FC48
	0x0366FBEC LDR X1, [X20 + 0x20]
	0x0366FBF0 CBZ X1, 0x366FC4C
	0x0366FBF4 LDR X8, [X19]
	0x0366FBF8 LDR W3, [X1 + 0x18]
	0x0366FBFC LDR X9, [X8 + 0x358]
	0x0366FC00 LDR X4, [X8 + 0x360]
	0x0366FC04 MOV X0, X19
	0x0366FC08 MOV W2, W31
	0x0366FC0C BLR X9
	0x0366FC10 MOV W21, W0
	0x0366FC14 CBNZ W0, 0x366FC24
	0x0366FC18 MOV X0, X19
	0x0366FC1C MOV X1, X31
	0x0366FC20 BL 0x367B0B4
	0x0366FC24 MOV X0, X19
	0x0366FC28 MOV X1, X20
	0x0366FC2C MOV W2, W21
	0x0366FC30 BL 0x367030C
	0x0366FC34 B 0x366FB70
	0x0366FC38 BL 0x1C16F20
	0x0366FC3C BL 0x1C16F20
	0x0366FC40 BL 0x1C16F20
	0x0366FC44 BL 0x1C16F20
	0x0366FC48 BL 0x1C16F20
	0x0366FC4C BL 0x1C16F20
	0x0366FC50 B 0x366FC6C
	0x0366FC54 B 0x366FC6C
	0x0366FC58 B 0x366FC6C
	0x0366FC5C B 0x366FC6C
	0x0366FC60 B 0x366FC6C
	0x0366FC64 B 0x366FC6C
	0x0366FC68 B 0x366FC6C
	0x0366FC6C MOV X21, X1
	0x0366FC70 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Compare X1, 0
	009 JumpIfEqual {35}
	010 Move X20, X1
	011 Move X19, X0
	012 Move X0, X1
	013 Move X1, X31
	014 Call SocketAddress.get_Family, X0
	015 Move X8, [X19]
	016 Move W21, W0
	017 Move X0, X19
	018 Move X9, [X8+376]
	019 Move X1, [X8+384]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W8, [X20+16]
	023 Move X0, X20
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+80]
	026 Move X19, [X31+88]
	027 Move X22, [X31+64]
	028 Move X21, [X31+72]
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 Move X1, X31
	032 Add X31, X31, 96
	033 Call SocketAddress.GetIPEndPoint, X0
	034 Return X0
	035 Call 0x1C17F20
	036 Move X0, X20
	037 Move X1, X31
	038 Call SocketAddress.get_Family, X0
	039 Move X21, 0xAC5000
	040 Move X21, [X21+3024]
	041 Move W20, W0
	042 Move X0, X21
	043 Call 0x1C17D08
	044 Move TEMP, 0
	045 Not TEMP
	046 Move X23, TEMP
	047 Move [X31+24], X0
	048 Move [X31+32], X23
	049 Add X0, X31, 24
	050 Move X1, X31
	051 Move [X31+40], W20
	052 Call Enum.ToString, X0
	053 Move X20, X0
	054 Move X0, X19
	055 Move X1, X31
	056 Call "il2cpp_vm_object_is_inst", X0
	057 Move X22, X0
	058 Call 0x19913C0
	059 Move X8, [X22]
	060 Move X0, X22
	061 Move X9, [X8+744]
	062 Move X1, [X8+752]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, [X19]
	065 Move X22, X0
	066 Move X0, X19
	067 Move X9, [X8+376]
	068 Move X1, [X8+384]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move W19, W0
	071 Move X0, X21
	072 Call 0x1C17D08
	073 Move [X31], X0
	074 Move [X31+8], X23
	075 Add X0, X31, 0
	076 Move X1, X31
	077 Move [X31+16], W19
	078 Call Enum.ToString, X0
	079 Move X19, X0
	080 Move X0, 0xACF000
	081 Move X0, [X0+2032]
	082 Call 0x1C17D08
	083 Move X1, X20
	084 Move X2, X22
	085 Move X3, X19
	086 Move X4, X31
	087 Call SR.Format, X0, X1, X2, X3
	088 Move X1, X31
	089 Call "il2cpp_vm_object_is_inst", X0
	090 Move X20, X0
	091 Call 0x19913C0
	092 Move X8, [X20]
	093 Move X0, X20
	094 Move X9, [X8+744]
	095 Move X1, [X8+752]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X20, X0
	098 Move X0, X19
	099 Move X1, X31
	100 Call "il2cpp_vm_object_is_inst", X0
	101 Move X19, X0
	102 Call 0x19913C0
	103 Move X8, [X19]
	104 Move X0, X19
	105 Move X9, [X8+744]
	106 Move X1, [X8+752]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X19, X0
	109 Move X0, 0xACF000
	110 Move X0, [X0+2040]
	111 Call 0x1C17D08
	112 Move X1, X20
	113 Move X2, X19
	114 Move X3, X31
	115 Call SR.Format, X0, X1, X2
	116 Move X19, X0
	117 Move X0, 0xA8D000
	118 Move X0, [X0+1400]
	119 Call 0x1C17D08
	120 Call 0x1C17F10
	121 Move X20, X0
	122 Move X0, 0xACF000
	123 Move X0, [X0+2048]
	124 Call 0x1C17D08
	125 Move X2, X0
	126 Move X0, X20
	127 Move X1, X19
	128 Move X3, X31
	129 Call ArgumentException..ctor, X0, X1, X2
	130 Move X0, 0xACF000
	131 Move X0, [X0+2056]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X20
	135 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object comparand)

Disassembly:
	0x0366FC74 CMP W21, 0x1
	0x0366FC78 B.NE 0x366FD54
	0x0366FC7C MOV X0, X20
	0x0366FC80 BL 0x3EB1AD0
	0x0366FC84 MOV X20, X0
	0x0366FC88 ADRP X0, 0xAB2000
	0x0366FC8C LDR X0, [X0 + 0x7A8]
	0x0366FC90 BL 0x1C16D08
	0x0366FC94 LDR X8, [X20]
	0x0366FC98 LDR X1, [X8]
	0x0366FC9C BL 0x1C17270
	0x0366FCA0 TBZ X0, 0x0, 0x366FCAC
	0x0366FCA4 MOVZ W21, 0x7
	0x0366FCA8 B 0x366FCCC
	0x0366FCAC ADRP X0, 0xA8A000
	0x0366FCB0 LDR X0, [X0 + 0xCC0]
	0x0366FCB4 BL 0x1C16D08
	0x0366FCB8 LDR X8, [X20]
	0x0366FCBC LDR X1, [X8]
	0x0366FCC0 BL 0x1C17270
	0x0366FCC4 TBZ X0, 0x0, 0x366FD08
	0x0366FCC8 MOVZ W21, 0x8
	0x0366FCCC LDR X20, [X20]
	0x0366FCD0 BL 0x3EB1AE0
	0x0366FCD4 CMP W21, 0x7
	0x0366FCD8 B.EQ 0x366FCEC
	0x0366FCDC CMP W21, 0x8
	0x0366FCE0 B.NE 0x366FBD8
	0x0366FCE4 MOV X0, X20
	0x0366FCE8 BL 0x1C16F18
	0x0366FCEC LDR W8, [X19 + 0x58]
	0x0366FCF0 CMP W8, 0x1
	0x0366FCF4 B.GT 0x366FD00
	0x0366FCF8 MOVZ W8, 0x1
	0x0366FCFC STRB W8, [X19 + 0x38]
	0x0366FD00 MOV X0, X20
	0x0366FD04 BL 0x1C16F18
	0x0366FD08 MOVZ W0, 0x8
	0x0366FD0C BL 0x3EB1AF0
	0x0366FD10 LDR X8, [X20]
	0x0366FD14 STR X8, [X0]
	0x0366FD18 ADRP X1, 0x845000
	0x0366FD1C ADD X1, X1, 0xE58
	0x0366FD20 MOV X2, X31
	0x0366FD24 BL 0x3EB1B00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD72000
	006 Move W8, [X21+1896]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA92000
	014 Move X0, [X0+3000]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1896], W8
	018 Compare X20, 0
	019 JumpIfEqual {50}
	020 Move X8, 0xA92000
	021 Move X8, [X8+3000]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {56}
	034 Move X0, [X20+16]
	035 Compare X0, 0
	036 JumpIfEqual {56}
	037 Move X8, [X0]
	038 Move X1, [X19+16]
	039 Move X9, [X8+312]
	040 Move X2, [X8+320]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {50}
	046 Move W8, [X20+24]
	047 Move W9, [X19+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Move W0, W31
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x0366FD28 B 0x366FDEC
	0x0366FD2C B 0x366FD4C
	0x0366FD30 B 0x366FD4C
	0x0366FD34 B 0x366FD4C
	0x0366FD38 MOV X21, X1
	0x0366FD3C MOV X20, X0
	0x0366FD40 BL 0x3EB1AE0
	0x0366FD44 B 0x366FD54
	0x0366FD48 B 0x366FD4C
	0x0366FD4C MOV X21, X1
	0x0366FD50 MOV X20, X0
	0x0366FD54 CMP W21, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {16}
	007 Move X8, [X0]
	008 Move X9, [X8+344]
	009 Move X1, [X8+352]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W8, [X19+24]
	012 Xor W0, W8, W0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0366FD58 B.NE 0x366FE2C
	0x0366FD5C MOV X0, X20
	0x0366FD60 BL 0x3EB1AD0
	0x0366FD64 MOV X19, X0
	0x0366FD68 ADRP X0, 0xA84000
	0x0366FD6C LDR X0, [X0 + 0x7D0]
	0x0366FD70 BL 0x1C16D08
	0x0366FD74 LDR X8, [X19]
	0x0366FD78 LDR X1, [X8]
	0x0366FD7C BL 0x1C17270
	0x0366FD80 TBZ X0, 0x0, 0x366FDCC
	0x0366FD84 LDR X19, [X19]
	0x0366FD88 BL 0x3EB1AE0
	0x0366FD8C ADRP X0, 0xAAF000
	0x0366FD90 LDR X0, [X0 + 0x330]
	0x0366FD94 BL 0x1C16D08
	0x0366FD98 CBZ X19, 0x366FDEC
	0x0366FD9C LDR X8, [X19]
	0x0366FDA0 LDRB W9, [X0 + 0x130]
	0x0366FDA4 LDRB W10, [X8 + 0x130]
	0x0366FDA8 CMP W10, W9
	0x0366FDAC B.CC 0x366FDEC
	0x0366FDB0 LDR X8, [X8 + 0xC8]
	0x0366FDB4 ADD X8, X8, X9, 0x3, LSL
	0x0366FDB8 LDUR X8, [X8 - 0x8]
	0x0366FDBC CMP X8, X0
	0x0366FDC0 B.NE 0x366FDEC
	0x0366FDC4 MOV X0, X19
	0x0366FDC8 BL 0x1C16F18
	0x0366FDCC MOVZ W0, 0x8
	0x0366FDD0 BL 0x3EB1AF0
	0x0366FDD4 LDR X8, [X19]
	0x0366FDD8 STR X8, [X0]
	0x0366FDDC ADRP X1, 0x845000
	0x0366FDE0 ADD X1, X1, 0xE58
	0x0366FDE4 MOV X2, X31
	0x0366FDE8 BL 0x3EB1B00
	0x0366FDEC ADRP X0, 0xACE000
	0x0366FDF0 LDR X0, [X0 + 0x870]
	0x0366FDF4 BL 0x1C16D08
	0x0366FDF8 MOVZ W2, 0x3
	0x0366FDFC MOV X1, X0
	0x0366FE00 MOV X3, X19
	0x0366FE04 BL 0x366F7C4
	0x0366FE08 MOV X19, X0
	0x0366FE0C ADRP X0, 0xACE000
	0x0366FE10 LDR X0, [X0 + 0x878]
	0x0366FE14 BL 0x1C16D08
	0x0366FE18 MOV X1, X0
	0x0366FE1C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD72000
	007 Move X21, 0xA92000
	008 Move W8, [X19+1897]
	009 Move X21, [X21+2408]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA92000
	015 Move X0, [X0+2408]
	016 Call 0x1C17CF4
	017 Move X0, 0xA92000
	018 Move X0, [X0+3000]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1897], W8
	022 Move X0, [X21]
	023 Move X22, 0xA92000
	024 Move W8, [X0+224]
	025 Move X22, [X22+3000]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X22]
	032 Move X19, [X8]
	033 Call 0x1C17F10
	034 Move X1, X19
	035 Move W2, W31
	036 Move X20, X0
	037 Call IPEndPoint..ctor, X0, X1, X2
	038 Move X8, [X22]
	039 Move X8, [X8+184]
	040 Move [X8], X20
	041 Move X8, [X21]
	042 Move X0, [X22]
	043 Move X8, [X8+184]
	044 Move X19, [X8+32]
	045 Call 0x1C17F10
	046 Move X1, X19
	047 Move W2, W31
	048 Move X20, X0
	049 Call IPEndPoint..ctor, X0, X1, X2
	050 Move X8, [X22]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X8, [X8+184]
	054 Move [X8+8], X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+48]
	058 Return 

