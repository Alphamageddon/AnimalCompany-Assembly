Type: System.Net.MonoChunkStream/<FinishReading>d__8

Method: System.Void MoveNext()

Disassembly:
	0x036A5A10 CBZ W8, 0x36A5A20
	0x036A5A14 MOV X0, X19
	0x036A5A18 MOV X1, X31
	0x036A5A1C BL 0x33E14E4
	0x036A5A20 CBNZ X20, 0x36A5A34
	0x036A5A24 LDP X20, X19, [X31 + 0x20]
	0x036A5A28 LDP X22, X21, [X31 + 0x10]
	0x036A5A2C LDR X30, [X31], #0x30
	0x036A5A30 RET
	0x036A5A34 MOV X0, X20
	0x036A5A38 BL 0x1C16F18
	0x036A5A3C BL 0x1C16F20
	0x036A5A40 B 0x36A5A48
	0x036A5A44 B 0x36A5A48
	0x036A5A48 MOV X21, X0
	0x036A5A4C CMP W1, 0x1
	0x036A5A50 B.NE 0x36A5A68
	0x036A5A54 MOV X0, X21
	0x036A5A58 BL 0x3EB1AD0
	0x036A5A5C LDR X20, [X0]
	0x036A5A60 BL 0x3EB1AE0
	0x036A5A64 B 0x36A5A0C
	0x036A5A68 MOV X20, X31
	0x036A5A6C B 0x36A5A74
	0x036A5A70 MOV X21, X0
	0x036A5A74 LDRB W8, [X31 + 0xC]
	0x036A5A78 CBZ W8, 0x36A5A88
	0x036A5A7C MOV X0, X19
	0x036A5A80 MOV X1, X31
	0x036A5A84 BL 0x33E14E4
	0x036A5A88 CBNZ X20, 0x36A5A94
	0x036A5A8C MOV X0, X21
	0x036A5A90 BL 0x1D2C690
	0x036A5A94 MOV X0, X20
	0x036A5A98 BL 0x1C16F18
	0x036A5A9C BL 0x1990590
	0x036A5AA0 SUB X31, X31, 0x30
	0x036A5AA4 STP X30, X21, [X31 + 0x10]
	0x036A5AA8 STP X20, X19, [X31 + 0x20]
	0x036A5AAC MOV X20, X1
	0x036A5AB0 MOV X19, X0
	0x036A5AB4 STRB W31, [X31 + 0xC]
	0x036A5AB8 ADD X1, X31, 0xC
	0x036A5ABC MOV X2, X31
	0x036A5AC0 BL 0x33DE64C
	0x036A5AC4 LDRB W8, [X19 + 0x5C]
	0x036A5AC8 CBZ W8, 0x36A5AD8
	0x036A5ACC MOV X20, X31
	0x036A5AD0 MOVZ W21, 0x1
	0x036A5AD4 B 0x36A5AF0
	0x036A5AD8 LDR X0, [X19 + 0x70]
	0x036A5ADC CBZ X0, 0x36A5B24
	0x036A5AE0 MOV X1, X20
	0x036A5AE4 BL 0x36A5B8C
	0x036A5AE8 MOV W21, W0
	0x036A5AEC MOV X20, X31
	0x036A5AF0 LDRB W8, [X31 + 0xC]
	0x036A5AF4 CBZ W8, 0x36A5B04
	0x036A5AF8 MOV X0, X19
	0x036A5AFC MOV X1, X31
	0x036A5B00 BL 0x33E14E4
	0x036A5B04 CBNZ X20, 0x36A5B1C
	0x036A5B08 AND W0, W21, 0x1
	0x036A5B0C LDP X20, X19, [X31 + 0x20]
	0x036A5B10 LDP X30, X21, [X31 + 0x10]
	0x036A5B14 ADD X31, X31, 0x30
	0x036A5B18 RET
	0x036A5B1C MOV X0, X20
	0x036A5B20 BL 0x1C16F18
	0x036A5B24 BL 0x1C16F20
	0x036A5B28 B 0x36A5B30
	0x036A5B2C B 0x36A5B30
	0x036A5B30 MOV X21, X0
	0x036A5B34 CMP W1, 0x1
	0x036A5B38 B.NE 0x36A5B54
	0x036A5B3C MOV X0, X21
	0x036A5B40 BL 0x3EB1AD0
	0x036A5B44 LDR X20, [X0]
	0x036A5B48 BL 0x3EB1AE0
	0x036A5B4C MOV W21, W31
	0x036A5B50 B 0x36A5AF0
	0x036A5B54 MOV X20, X31
	0x036A5B58 B 0x36A5B60
	0x036A5B5C MOV X21, X0
	0x036A5B60 LDRB W8, [X31 + 0xC]
	0x036A5B64 CBZ W8, 0x36A5B74
	0x036A5B68 MOV X0, X19
	0x036A5B6C MOV X1, X31
	0x036A5B70 BL 0x33E14E4
	0x036A5B74 CBNZ X20, 0x36A5B80
	0x036A5B78 MOV X0, X21
	0x036A5B7C BL 0x1D2C690
	0x036A5B80 MOV X0, X20
	0x036A5B84 BL 0x1C16F18
	0x036A5B88 BL 0x1990590
	0x036A5B8C SUB X31, X31, 0x30
	0x036A5B90 STP X30, X21, [X31 + 0x10]
	0x036A5B94 STP X20, X19, [X31 + 0x20]
	0x036A5B98 ADRP X21, 0xD3B000
	0x036A5B9C LDRB W8, [X21 + 0x913]
	0x036A5BA0 MOV X20, X1
	0x036A5BA4 MOV X19, X0
	0x036A5BA8 TBNZ X8, 0x0, 0x36A5BD8
	0x036A5BAC ADRP X0, 0xA99000
	0x036A5BB0 LDR X0, [X0 + 0xC88]
	0x036A5BB4 BL 0x1C16CF4
	0x036A5BB8 ADRP X0, 0xA99000
	0x036A5BBC LDR X0, [X0 + 0xC90]
	0x036A5BC0 BL 0x1C16CF4
	0x036A5BC4 ADRP X0, 0xA99000
	0x036A5BC8 LDR X0, [X0 + 0xC98]
	0x036A5BCC BL 0x1C16CF4
	0x036A5BD0 MOVZ W8, 0x1
	0x036A5BD4 STRB W8, [X21 + 0x913]
	0x036A5BD8 MOV X0, X20
	0x036A5BDC MOV X1, X31
	0x036A5BE0 STR X31, [X31 + 0x8]
	0x036A5BE4 BL 0x32277A8
	0x036A5BE8 TBZ X0, 0x0, 0x36A5C0C
	0x036A5BEC LDR X0, [X19 + 0x28]
	0x036A5BF0 STR X0, [X31 + 0x8]
	0x036A5BF4 CBZ X0, 0x36A5C98
	0x036A5BF8 BL 0x36A7AC0
	0x036A5BFC MOV X0, X19
	0x036A5C00 BL 0x36A69C8
	0x036A5C04 MOVZ W0, 0x1
	0x036A5C08 B 0x36A5C88
	0x036A5C0C LDR X0, [X19 + 0x30]
	0x036A5C10 CBZ X0, 0x36A5C88
	0x036A5C14 ADRP X8, 0xA99000
	0x036A5C18 LDR X8, [X8 + 0xC90]
	0x036A5C1C ADD X2, X31, 0x8
	0x036A5C20 MOV X1, X20
	0x036A5C24 LDR X3, [X8]
	0x036A5C28 BL 0x2AA6B2C
	0x036A5C2C TBZ X0, 0x0, 0x36A5C84
	0x036A5C30 LDR X0, [X31 + 0x8]
	0x036A5C34 LDR X8, [X19 + 0x28]
	0x036A5C38 CMP X0, X8
	0x036A5C3C B.EQ 0x36A5BF4
	0x036A5C40 LDR X0, [X19 + 0x30]
	0x036A5C44 CBZ X0, 0x36A5C98
	0x036A5C48 ADRP X8, 0xA99000
	0x036A5C4C LDR X8, [X8 + 0xC88]
	0x036A5C50 MOV X1, X20
	0x036A5C54 LDR X2, [X8]
	0x036A5C58 BL 0x2AA64F8
	0x036A5C5C LDR X0, [X19 + 0x30]
	0x036A5C60 CBZ X0, 0x36A5C98
	0x036A5C64 ADRP X8, 0xA99000
	0x036A5C68 LDR X8, [X8 + 0xC98]
	0x036A5C6C LDR X1, [X8]
	0x036A5C70 BL 0x2AA4E88
	0x036A5C74 CBNZ W0, 0x36A5C7C
	0x036A5C78 STR X31, [X19 + 0x30]
	0x036A5C7C LDR X0, [X31 + 0x8]
	0x036A5C80 B 0x36A5BF4
	0x036A5C84 MOV W0, W31
	0x036A5C88 LDP X20, X19, [X31 + 0x20]
	0x036A5C8C LDP X30, X21, [X31 + 0x10]
	0x036A5C90 ADD X31, X31, 0x30
	0x036A5C94 RET
	0x036A5C98 BL 0x1C16F20
	0x036A5C9C MOVZ W8, 0x1
	0x036A5CA0 STRB W8, [X0 + 0x5C]
	0x036A5CA4 STR X31, [X0 + 0x70]
	0x036A5CA8 RET
	0x036A5CAC STP X30, X19, [X31 - 0x10]!
	0x036A5CB0 MOV X19, X0
	0x036A5CB4 CBZ X1, 0x36A5CD0
	0x036A5CB8 LDR X8, [X1]
	0x036A5CBC MOV X0, X1
	0x036A5CC0 LDP X9, X8, [X8 + 0x1F8]
	0x036A5CC4 MOV X1, X8
	0x036A5CC8 BLR X9
	0x036A5CCC B 0x36A5CD4
	0x036A5CD0 MOV X0, X31
	0x036A5CD4 STR X0, [X19 + 0x80]
	0x036A5CD8 LDP X30, X19, [X31], #0x10
	0x036A5CDC RET
	0x036A5CE0 STP X30, X19, [X31 - 0x10]!
	0x036A5CE4 MOV X19, X0
	0x036A5CE8 CBZ X1, 0x36A5D04
	0x036A5CEC LDR X8, [X1]
	0x036A5CF0 MOV X0, X1
	0x036A5CF4 LDP X9, X8, [X8 + 0x1F8]
	0x036A5CF8 MOV X1, X8
	0x036A5CFC BLR X9
	0x036A5D00 B 0x36A5D08
	0x036A5D04 MOV X0, X31
	0x036A5D08 STR X0, [X19 + 0x88]
	0x036A5D0C LDP X30, X19, [X31], #0x10
	0x036A5D10 RET
	0x036A5D14 STP X30, X25, [X31 - 0x40]!
	0x036A5D18 STP X24, X23, [X31 + 0x10]
	0x036A5D1C STP X22, X21, [X31 + 0x20]
	0x036A5D20 STP X20, X19, [X31 + 0x30]
	0x036A5D24 LDR X8, [X0 + 0x48]
	0x036A5D28 CBZ X8, 0x36A5DD4
	0x036A5D2C ADRP X23, 0xA8C000
	0x036A5D30 LDR X23, [X23 + 0xD8]
	0x036A5D34 MOV X19, X2
	0x036A5D38 MOV X20, X0
	0x036A5D3C MOV X21, X1
	0x036A5D40 MOV W22, W31
	0x036A5D44 MOVZ W25, 0x80000000
	0x036A5D48 LDR X0, [X8 + 0x40]
	0x036A5D4C LDR X9, [X8 + 0x18]
	0x036A5D50 LDR X4, [X8 + 0x28]
	0x036A5D54 MOV X1, X20
	0x036A5D58 MOV X2, X19
	0x036A5D5C MOV W3, W22
	0x036A5D60 BLR X9
	0x036A5D64 MOV X1, X0
	0x036A5D68 CBZ X1, 0x36A5DD4
	0x036A5D6C CBZ X21, 0x36A5D80
	0x036A5D70 MOV X0, X21
	0x036A5D74 MOV X2, X31
	0x036A5D78 BL 0x36C2A18
	0x036A5D7C B 0x36A5DD4
	0x036A5D80 BL 0x1C16F20
	0x036A5D84 B 0x36A5E30
	0x036A5D88 CMP W1, 0x1
	0x036A5D8C MOV X24, X0
	0x036A5D90 B.NE 0x36A5E40
	0x036A5D94 MOV X0, X24
	0x036A5D98 BL 0x3EB1AD0
	0x036A5D9C MOV X24, X0
	0x036A5DA0 MOV X0, X23
	0x036A5DA4 BL 0x1C16D08
	0x036A5DA8 LDR X8, [X24]
	0x036A5DAC LDR X1, [X8]
	0x036A5DB0 BL 0x1C17270
	0x036A5DB4 TBZ X0, 0x0, 0x36A5DEC
	0x036A5DB8 BL 0x3EB1AE0
	0x036A5DBC ADD W22, W22, 0x1
	0x036A5DC0 CMP W22, W25
	0x036A5DC4 B.EQ 0x36A5E10
	0x036A5DC8 LDR X8, [X20 + 0x48]
	0x036A5DCC CBNZ X8, 0x36A5D48
	0x036A5DD0 BL 0x1C16F20
	0x036A5DD4 MOVZ W0, 0x1
	0x036A5DD8 LDP X20, X19, [X31 + 0x30]
	0x036A5DDC LDP X22, X21, [X31 + 0x20]
	0x036A5DE0 LDP X24, X23, [X31 + 0x10]
	0x036A5DE4 LDP X30, X25, [X31], #0x40
	0x036A5DE8 RET
	0x036A5DEC MOVZ W0, 0x8
	0x036A5DF0 BL 0x3EB1AF0
	0x036A5DF4 LDR X8, [X24]
	0x036A5DF8 STR X8, [X0]
	0x036A5DFC ADRP X1, 0x80F000
	0x036A5E00 ADD X1, X1, 0xE58
	0x036A5E04 MOV X2, X31
	0x036A5E08 BL 0x3EB1B00
	0x036A5E0C B 0x36A5EA8
	0x036A5E10 BL 0x1C16F30
	0x036A5E14 MOV X19, X0
	0x036A5E18 ADRP X0, 0xA99000
	0x036A5E1C LDR X0, [X0 + 0xCA0]
	0x036A5E20 BL 0x1C16D08
	0x036A5E24 MOV X1, X0
	0x036A5E28 MOV X0, X19
	0x036A5E2C BL 0x1C16DEC
	0x036A5E30 B 0x36A5E48
	0x036A5E34 B 0x36A5E38
	0x036A5E38 MOV X24, X0
	0x036A5E3C BL 0x3EB1AE0
	0x036A5E40 MOV X0, X24
	0x036A5E44 BL 0x1D2C690
	0x036A5E48 MOV X24, X0
	0x036A5E4C CMP W1, 0x1
	0x036A5E50 B.NE 0x36A5E40
	0x036A5E54 MOV X0, X24
	0x036A5E58 BL 0x3EB1AD0
	0x036A5E5C MOV X19, X0
	0x036A5E60 ADRP X0, 0xA54000
	0x036A5E64 LDR X0, [X0 + 0xCC0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0xD3C000
	008 Move W8, [X20+2290]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0xA9A000
	015 Move X0, [X0+3104]
	016 Call 0x1C17CF4
	017 Move X0, 0xA9A000
	018 Move X0, [X0+3112]
	019 Call 0x1C17CF4
	020 Move X0, 0xA52000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xA4F000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0xA57000
	027 Move X0, [X0+2008]
	028 Call 0x1C17CF4
	029 Move X0, 0xA83000
	030 Move X0, [X0+696]
	031 Call 0x1C17CF4
	032 Move X0, 0xA83000
	033 Move X0, [X0+704]
	034 Call 0x1C17CF4
	035 Move X0, 0xA83000
	036 Move X0, [X0+712]
	037 Call 0x1C17CF4
	038 Move X0, 0xA83000
	039 Move X0, [X0+720]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+2290], W8
	043 Move [X31+16], X31
	044 Move [X31+24], X31
	045 Move [X31], X31
	046 Move [X31+8], X31
	047 Move X22, 0xA52000
	048 Move W8, [X19]
	049 Move X20, [X19+32]
	050 Move X22, [X22+640]
	051 Compare W8, 0
	052 JumpIfEqual {62}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W8, TEMP
	058 Move [X31], V0
	059 Move [X19+72], X31
	060 Move [X19+80], X31
	061 Move [X19], W8
	062 Move V0, [X19+3]
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W8, TEMP
	066 Move [X31+1], V0
	067 Move [X19+48], X31
	068 Move [X19+56], X31
	069 Move [X19], W8
	070 Compare X20, 0
	071 JumpIfEqual {131}
	072 Move X1, [X19+40]
	073 Move X0, X20
	074 Move X2, X31
	075 Call WebReadStream.FinishReading, X0, X1
	076 Compare X0, 0
	077 JumpIfEqual {132}
	078 Move W1, W31
	079 Move X2, X31
	080 Call Task.ConfigureAwait, X0, X1
	081 Move [X31+16], X0
	082 Move [X31+24], X1
	083 Add X0, X31, 16
	084 Move X1, X31
	085 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {114}
	090 Add X0, X31, 16
	091 Move X1, X31
	092 Call ConfiguredTaskAwaiter.GetResult, X0
	093 Move X8, 0xA57000
	094 Move X8, [X8+2008]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Add X0, X19, 40
	101 Move X1, X31
	102 Call CancellationToken.ThrowIfCancellationRequested, X0
	103 Compare X20, 0
	104 JumpIfEqual {129}
	105 Move X0, [X20+72]
	106 Compare X0, 0
	107 JumpIfEqual {130}
	108 Call MonoChunkParser.get_DataAvailable, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {140}
	113 Call MonoChunkStream.ThrowExpectingChunkTrailer
	114 Move [X19], W31
	115 Move V0, [X31+1]
	116 Move [X19+3], V0
	117 Move X0, [X22]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X8, 0xA9A000
	123 Move X8, [X8+3104]
	124 Add X0, X19, 8
	125 Move X3, [X8]
	126 Add X1, X31, 16
	127 Move X2, X19
	128 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	129 Call 0x1C17F20
	130 Call 0x1C17F20
	131 Call 0x1C17F20
	132 Call 0x1C17F20
	133 Move X20, [X31+64]
	134 Move X19, [X31+72]
	135 Move X22, [X31+48]
	136 Move X21, [X31+56]
	137 Move X30, [X31+32]
	138 Add X31, X31, 80
	139 Return 
	140 Move X8, [X20+72]
	141 Compare X8, 0
	142 JumpIfEqual {247}
	143 Move W10, [X8+24]
	144 Move W9, [X8+28]
	145 Or W9, W10, W9
	146 Compare W9, 0
	147 JumpIfNotEqual {151}
	148 Move W8, [X8+36]
	149 Compare W8, 0
	150 JumpIfEqual {235}
	151 Move X8, 0xA4F000
	152 Move X8, [X8+1560]
	153 Move X0, [X8]
	154 Move W1, 256
	155 Call 0x1C17D6C
	156 Move X1, X0
	157 Move [X19+64], X1
	158 Compare X1, 0
	159 JumpIfEqual {250}
	160 Move X0, [X20+48]
	161 Compare X0, 0
	162 JumpIfEqual {251}
	163 Move X8, [X0]
	164 Move X4, [X19+40]
	165 Move W3, [X1+24]
	166 Move X9, [X8+728]
	167 Move X5, [X8+736]
	168 Move W2, W31
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare X0, 0
	171 JumpIfEqual {252}
	172 Move X8, 0xA83000
	173 Move X8, [X8+720]
	174 Move X2, [X8]
	175 Move W1, W31
	176 Call Task`1<Int32>.ConfigureAwait, X0, X1
	177 Move X8, 0xA83000
	178 Move X8, [X8+712]
	179 Move [X31], X0
	180 Move [X31+8], X1
	181 Move X8, [X8]
	182 Add X0, X31, 0
	183 Move X1, X8
	184 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {219}
	189 Move X8, 0xA83000
	190 Move X8, [X8+704]
	191 Move X1, [X8]
	192 Add X0, X31, 0
	193 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	194 Move W21, W0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Call MonoChunkStream.ThrowExpectingChunkTrailer
	197 Compare X20, 0
	198 JumpIfEqual {249}
	199 Move X0, [X20+72]
	200 Compare X0, 0
	201 JumpIfEqual {248}
	202 Move X1, [X19+64]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X31+44], W31
	205 Add X2, X31, 44
	206 Move W3, W21
	207 Call MonoChunkParser.InternalWrite, X0, X1, X2, X3
	208 Move X0, [X20+72]
	209 Compare X0, 0
	210 JumpIfEqual {253}
	211 Move X1, [X19+64]
	212 Move W3, 1
	213 Move W2, W31
	214 Call MonoChunkParser.ReadFromChunks, X0, X1, X2, X3
	215 Compare W0, 0
	216 JumpIfEqual {218}
	217 Call MonoChunkStream.ThrowExpectingChunkTrailer
	218 Move [X19+64], X31
	219 Move W8, 1
	220 Move [X19], W8
	221 Move V0, [X31]
	222 Move [X19+72], V0
	223 Move X0, [X22]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X8, 0xA9A000
	229 Move X8, [X8+3112]
	230 Add X0, X19, 8
	231 Move X3, [X8]
	232 Add X1, X31, 0
	233 Move X2, X19
	234 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	235 Move TEMP, 1
	236 Not TEMP
	237 Move W8, TEMP
	238 Move [X19+8], W8
	239 Move X0, [X22]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X0, X19
	245 Move X1, X31
	246 Call AsyncTaskMethodBuilder.SetResult, X0
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Move X20, X0
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X0, X20
	257 Call 0x3EB2AD0
	258 Move X20, X0
	259 Move X0, 0xA4F000
	260 Move X0, [X0+2000]
	261 Call 0x1C17D08
	262 Move X8, [X20]
	263 Move X1, [X8]
	264 Call 0x1C18270
	265 Move TEMP, X0
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfNotEqual {286}
	269 Move X20, [X20]
	270 Call 0x3EB2AE0
	271 Move TEMP, 1
	272 Not TEMP
	273 Move W8, TEMP
	274 Move [X19+8], W8
	275 Move X0, 0xA52000
	276 Move X0, [X0+640]
	277 Call 0x1C17D08
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X0, X19
	283 Move X1, X20
	284 Move X2, X31
	285 Call AsyncTaskMethodBuilder.SetException, X0, X1
	286 Move W0, 8
	287 Call 0x3EB2AF0
	288 Move X8, [X20]
	289 Move [X0], X8
	290 Move X1, 0x810000
	291 Add X1, X1, 3672
	292 Move X2, X31
	293 Call 0x3EB2B00
	294 Move X20, X0
	295 Call 0x3EB2AE0
	296 Move X0, X20
	297 Call 0x1D2D690
	298 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036A5E68 BL 0x1C16D08
	0x036A5E6C LDR X8, [X19]
	0x036A5E70 LDR X1, [X8]
	0x036A5E74 BL 0x1C17270
	0x036A5E78 TBZ X0, 0x0, 0x36A5E88
	0x036A5E7C BL 0x3EB1AE0
	0x036A5E80 MOV W0, W31
	0x036A5E84 B 0x36A5DD8
	0x036A5E88 MOVZ W0, 0x8
	0x036A5E8C BL 0x3EB1AF0
	0x036A5E90 LDR X8, [X19]
	0x036A5E94 STR X8, [X0]
	0x036A5E98 ADRP X1, 0x80F000
	0x036A5E9C ADD X1, X1, 0xE58
	0x036A5EA0 MOV X2, X31
	0x036A5EA4 BL 0x3EB1B00
	0x036A5EA8 MOV X24, X0
	0x036A5EAC BL 0x3EB1AE0
	0x036A5EB0 B 0x36A5E40
	0x036A5EB4 BL 0x1990590
	0x036A5EB8 STR X30, [X31 - 0x30]!
	0x036A5EBC STP X22, X21, [X31 + 0x10]
	0x036A5EC0 STP X20, X19, [X31 + 0x20]
	0x036A5EC4 ADRP X21, 0xD3B000
	0x036A5EC8 ADRP X22, 0xA99000
	0x036A5ECC ADRP X19, 0xA99000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD3C000
	007 Move X22, 0xA52000
	008 Move W8, [X21+2291]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA52000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2291], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

