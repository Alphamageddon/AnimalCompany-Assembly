Type: System.Net.Mail.MailAddress

Method: System.Void .ctor(System.String displayName, System.String userName, System.String domain)

Disassembly:
	0x036D0064 BL 0x1C16DFC
	0x036D0068 LDR X0, [X25]
	0x036D006C LDR X8, [X0 + 0xB8]
	0x036D0070 MOV X0, X19
	0x036D0074 MOV X1, X31
	0x036D0078 LDR X8, [X8 + 0x30]
	0x036D007C STR X8, [X19 + 0xA8]
	0x036D0080 BL 0x33BDD8C
	0x036D0084 STR X22, [X19 + 0x10]
	0x036D0088 STRB W23, [X19 + 0x18]
	0x036D008C STR X21, [X19 + 0x20]
	0x036D0090 LDR X0, [X26]
	0x036D0094 MOVZ W1, 0x7D
	0x036D0098 BL 0x1C16D6C
	0x036D009C LDR X1, [X24]
	0x036D00A0 BL 0x319DBA8
	0x036D00A4 MOV X8, X0
	0x036D00A8 LDR X0, [X19 + 0x30]
	0x036D00AC STP X8, X1, [X19 + 0x38]
	0x036D00B0 CBZ X0, 0x36D0264
	0x036D00B4 ADRP X23, 0xA6F000
	0x036D00B8 LDR X23, [X23 + 0xF68]
	0x036D00BC MOV X1, X31
	0x036D00C0 BL 0x33DFA08
	0x036D00C4 LDR X8, [X23]
	0x036D00C8 STR X0, [X31 + 0x28]
	0x036D00CC LDR W9, [X8 + 0xE0]
	0x036D00D0 CBNZ W9, 0x36D00E0
	0x036D00D4 MOV X0, X8
	0x036D00D8 BL 0x1C16DFC
	0x036D00DC LDR X8, [X23]
	0x036D00E0 LDR X9, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD11000
	009 Move X23, 0xA5A000
	010 Move W8, [X24+2677]
	011 Move X23, [X23+1544]
	012 Move X22, X3
	013 Move X21, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA5A000
	021 Move X0, [X0+1544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2677], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move [X19+32], X21
	029 Move [X19+40], X22
	030 Move [X19+24], X20
	031 Move X0, [X23]
	032 Move X1, X31
	033 Call Encoding.GetEncoding, X0
	034 Move [X19+16], X0
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X30, [X31+64]
	042 Return 

Method: System.Void .ctor(System.String address)

Disassembly:
	0x036D095C MOV X0, X19
	0x036D0960 BL 0x19980B4
	0x036D0964 MOV X0, X20

ISIL:
	001 Move X2, X31
	002 Move X3, X31

Method: System.Void .ctor(System.String address, System.String displayName, System.Text.Encoding displayNameEncoding)

Disassembly:
	0x036D0968 BL 0x1C16D08
	0x036D096C MOV X2, X0
	0x036D0970 MOVZ W1, 0x1
	0x036D0974 MOV X0, X19
	0x036D0978 BL 0x1993444
	0x036D097C MOV X0, X19
	0x036D0980 BL 0x19903C0
	0x036D0984 ADRP X20, 0xA6F000
	0x036D0988 LDR X20, [X20 + 0xF80]
	0x036D098C MOV X0, X20
	0x036D0990 BL 0x1C16D08
	0x036D0994 MOV X1, X0
	0x036D0998 MOV X0, X19
	0x036D099C BL 0x19980B4
	0x036D09A0 MOV X0, X20
	0x036D09A4 BL 0x1C16D08
	0x036D09A8 MOV X2, X0
	0x036D09AC MOVZ W1, 0x2
	0x036D09B0 MOV X0, X19
	0x036D09B4 BL 0x1993444
	0x036D09B8 MOV X0, X19
	0x036D09BC BL 0x19903C0
	0x036D09C0 ADRP X20, 0xA6C000
	0x036D09C4 LDR X20, [X20 + 0xE80]
	0x036D09C8 MOV X0, X20
	0x036D09CC BL 0x1C16D08
	0x036D09D0 MOV X1, X0
	0x036D09D4 MOV X0, X19
	0x036D09D8 BL 0x19980B4
	0x036D09DC MOV X0, X20
	0x036D09E0 BL 0x1C16D08
	0x036D09E4 MOV X2, X0
	0x036D09E8 MOVZ W1, 0x3
	0x036D09EC MOV X0, X19
	0x036D09F0 BL 0x1993444
	0x036D09F4 MOV X0, X19
	0x036D09F8 BL 0x19903C0
	0x036D09FC ADRP X20, 0xA6F000
	0x036D0A00 LDR X20, [X20 + 0xF88]
	0x036D0A04 MOV X0, X20
	0x036D0A08 BL 0x1C16D08
	0x036D0A0C MOV X1, X0
	0x036D0A10 MOV X0, X19
	0x036D0A14 BL 0x19980B4
	0x036D0A18 MOV X0, X20
	0x036D0A1C BL 0x1C16D08
	0x036D0A20 MOV X2, X0
	0x036D0A24 MOVZ W1, 0x4
	0x036D0A28 MOV X0, X19
	0x036D0A2C BL 0x1993444
	0x036D0A30 ADRP X0, 0xA6F000
	0x036D0A34 LDR X0, [X0 + 0xF90]
	0x036D0A38 BL 0x1C16D08
	0x036D0A3C MOV X1, X19
	0x036D0A40 MOV X2, X31
	0x036D0A44 BL 0x320A1E8
	0x036D0A48 MOV X19, X0
	0x036D0A4C ADRP X0, 0xA2B000
	0x036D0A50 LDR X0, [X0 + 0x578]
	0x036D0A54 BL 0x1C16D08
	0x036D0A58 BL 0x1C16F10
	0x036D0A5C MOV X20, X0
	0x036D0A60 ADRP X0, 0xA6F000
	0x036D0A64 LDR X0, [X0 + 0xF98]
	0x036D0A68 BL 0x1C16D08
	0x036D0A6C MOV X2, X0
	0x036D0A70 MOV X0, X20
	0x036D0A74 MOV X1, X19
	0x036D0A78 MOV X3, X31
	0x036D0A7C BL 0x330E16C
	0x036D0A80 ADRP X0, 0xA6F000
	0x036D0A84 LDR X0, [X0 + 0xFC8]
	0x036D0A88 BL 0x1C16D08
	0x036D0A8C MOV X1, X0
	0x036D0A90 MOV X0, X20
	0x036D0A94 BL 0x1C16DEC
	0x036D0A98 B 0x36D0A9C
	0x036D0A9C MOV X19, X0
	0x036D0AA0 CMP W1, 0x1
	0x036D0AA4 B.NE 0x36D0B40
	0x036D0AA8 MOV X0, X19
	0x036D0AAC BL 0x3EB1AD0
	0x036D0AB0 MOV X19, X0
	0x036D0AB4 ADRP X0, 0xA23000
	0x036D0AB8 LDR X0, [X0 + 0x7D0]
	0x036D0ABC BL 0x1C16D08
	0x036D0AC0 LDR X8, [X19]
	0x036D0AC4 LDR X1, [X8]
	0x036D0AC8 BL 0x1C17270
	0x036D0ACC TBZ X0, 0x0, 0x36D0B18
	0x036D0AD0 LDR X19, [X19]
	0x036D0AD4 BL 0x3EB1AE0
	0x036D0AD8 ADRP X0, 0xA24000
	0x036D0ADC LDR X0, [X0 + 0x7B8]
	0x036D0AE0 BL 0x1C16D08
	0x036D0AE4 LDR W8, [X0 + 0xE0]
	0x036D0AE8 CBNZ W8, 0x36D0AF0
	0x036D0AEC BL 0x1C16DFC
	0x036D0AF0 MOV X0, X19
	0x036D0AF4 MOV X1, X31
	0x036D0AF8 BL 0x33EDAC4
	0x036D0AFC MOV X21, X0
	0x036D0B00 CBNZ X0, 0x36D0B10
	0x036D0B04 MOVZ W0, 0x26
	0x036D0B08 MOV X1, X31
	0x036D0B0C BL 0x338F3E0
	0x036D0B10 MOVZ W1, 0x10000
	0x036D0B14 B 0x36D08D4
	0x036D0B18 MOVZ W0, 0x8
	0x036D0B1C BL 0x3EB1AF0
	0x036D0B20 LDR X8, [X19]
	0x036D0B24 STR X8, [X0]
	0x036D0B28 ADRP X1, 0x7E4000
	0x036D0B2C ADD X1, X1, 0xE58
	0x036D0B30 MOV X2, X31
	0x036D0B34 BL 0x3EB1B00
	0x036D0B38 MOV X19, X0
	0x036D0B3C BL 0x3EB1AE0
	0x036D0B40 MOV X0, X19
	0x036D0B44 BL 0x1D2C690
	0x036D0B48 BL 0x1990590
	0x036D0B4C SUB X31, X31, 0x40
	0x036D0B50 STP X30, X23, [X31 + 0x10]
	0x036D0B54 STP X22, X21, [X31 + 0x20]
	0x036D0B58 STP X20, X19, [X31 + 0x30]
	0x036D0B5C ADRP X22, 0xD10000
	0x036D0B60 ADRP X23, 0xA25000
	0x036D0B64 LDRB W8, [X22 + 0xAB3]
	0x036D0B68 LDR X23, [X23 + 0x278]
	0x036D0B6C MOV X20, X2
	0x036D0B70 MOV W21, W1
	0x036D0B74 MOV W19, W0
	0x036D0B78 TBNZ X8, 0x0, 0x36D0B90
	0x036D0B7C ADRP X0, 0xA25000
	0x036D0B80 LDR X0, [X0 + 0x278]
	0x036D0B84 BL 0x1C16CF4
	0x036D0B88 MOVZ W8, 0x1
	0x036D0B8C STRB W8, [X22 + 0xAB3]
	0x036D0B90 LDR X8, [X23]
	0x036D0B94 LDR X8, [X8 + 0xB8]
	0x036D0B98 LDR X8, [X8]
	0x036D0B9C CBZ X20, 0x36D0C00
	0x036D0BA0 LDR X9, [X20 + 0x18]
	0x036D0BA4 CBZ X9, 0x36D0C00
	0x036D0BA8 CMP W9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD11000
	008 Move W8, [X23+2678]
	009 Move X22, X3
	010 Move X21, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA26000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move X0, 0xA5A000
	021 Move X0, [X0+1544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2678], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Compare X20, 0
	029 JumpIfEqual {120}
	030 Move X23, 0xA26000
	031 Move X23, [X23+632]
	032 Move X0, X20
	033 Move X2, X31
	034 Move X8, [X23]
	035 Move X8, [X8+184]
	036 Move X1, [X8]
	037 Call String.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {138}
	042 Compare X22, 0
	043 JumpIfNotEqual {50}
	044 Move X8, 0xA5A000
	045 Move X8, [X8+1544]
	046 Move X1, X31
	047 Move X0, [X8]
	048 Call Encoding.GetEncoding, X0
	049 Move X22, X0
	050 Compare X19, 0
	051 JumpIfEqual {119}
	052 Move [X19+16], X22
	053 Compare X21, 0
	054 JumpIfNotEqual {58}
	055 Move X8, [X23]
	056 Move X8, [X8+184]
	057 Move X21, [X8]
	058 Move X0, X21
	059 Move X1, X31
	060 Move [X19+24], X21
	061 Call String.IsNullOrEmpty, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {96}
	066 Move X0, [X19+24]
	067 Call MailAddressParser.NormalizeOrThrow, X0
	068 Move [X19+24], X0
	069 Compare X0, 0
	070 JumpIfEqual {119}
	071 Move W8, [X0+16]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W1, W31
	074 Move X2, X31
	075 Call String.get_Chars, X0, X1
	076 And W8, W0, 0xFFFF
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X19+24]
	079 Compare X0, 0
	080 JumpIfEqual {119}
	081 Move W8, [X0+16]
	082 Move X2, X31
	083 Subtract W1, W8, 1
	084 Call String.get_Chars, X0, X1
	085 And W8, W0, 0xFFFF
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X19+24]
	088 Compare X0, 0
	089 JumpIfEqual {119}
	090 Move W8, [X0+16]
	091 Move W1, 1
	092 Move X3, X31
	093 Subtract W2, W8, 2
	094 Call String.Substring, X0, X1, X2
	095 Move [X19+24], X0
	096 Move X0, X20
	097 Call MailAddressParser.ParseAddress, X0
	098 Compare X0, 0
	099 JumpIfEqual {119}
	100 Move X20, X0
	101 Move V0, [X0+2]
	102 Move X0, [X19+24]
	103 Move X1, X31
	104 Move [X19+2], V0
	105 Call String.IsNullOrEmpty, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {112}
	110 Move X8, [X20+24]
	111 Move [X19+24], X8
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Move X23, [X31+56]
	118 Return 
	119 Call 0x1C17F20
	120 Move X0, 0xA29000
	121 Move X0, [X0+1320]
	122 Call 0x1C17D08
	123 Call 0x1C17F10
	124 Move X19, X0
	125 Move X0, 0xA6E000
	126 Move X0, [X0+1848]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Move X2, X31
	131 Call ArgumentNullException..ctor, X0, X1
	132 Move X0, 0xA70000
	133 Move X0, [X0+3896]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Call 0x1C17DEC
	138 Move X0, 0xA6E000
	139 Move X0, [X0+3968]
	140 Call 0x1C17D08
	141 Move X20, 0xA6E000
	142 Move X20, [X20+1848]
	143 Move X19, X0
	144 Move X0, X20
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X19
	148 Move X2, X31
	149 Call SR.Format, X0, X1
	150 Move X19, X0
	151 Move X0, 0xA2C000
	152 Move X0, [X0+1400]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X21, X0
	156 Move X0, X20
	157 Call 0x1C17D08
	158 Move X2, X0
	159 Move X0, X21
	160 Move X1, X19
	161 Move X3, X31
	162 Call ArgumentException..ctor, X0, X1, X2
	163 Move X0, 0xA70000
	164 Move X0, [X0+3896]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X21
	168 Call 0x1C17DEC

Method: System.String get_DisplayName()

Disassembly:
	0x036D0BAC B.LT 0x36D0BD0
	0x036D0BB0 MOV W8, W31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.String get_Address()

Disassembly:
	0x036D0BB4 ADD X10, X20, W8, 0x2, SXTW
	0x036D0BB8 LDR W10, [X10 + 0x20]
	0x036D0BBC CMP W10, W19
	0x036D0BC0 B.EQ 0x36D0C78
	0x036D0BC4 ADD W8, W8, 0x1
	0x036D0BC8 CMP W9, W8
	0x036D0BCC B.NE 0x36D0BB4
	0x036D0BD0 ADRP X0, 0xA23000
	0x036D0BD4 LDR X0, [X0 + 0x838]
	0x036D0BD8 BL 0x1C16D08
	0x036D0BDC MOV X21, X0
	0x036D0BE0 ADRP X0, 0xA6F000
	0x036D0BE4 LDR X0, [X0 + 0xFD0]
	0x036D0BE8 BL 0x1C16D08
	0x036D0BEC MOV X2, X0
	0x036D0BF0 MOV X0, X21
	0x036D0BF4 MOV X1, X20
	0x036D0BF8 BL 0x226B768
	0x036D0BFC MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD11000
	006 Move X20, 0xA2E000
	007 Move W8, [X21+2679]
	008 Move X20, [X20+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA2E000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2679], W8
	019 Move X0, [X19+32]
	020 Move X2, [X19+40]
	021 Move X1, [X20]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X3, X31
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call String.Concat, X0, X1, X2
	028 Return X0

Method: System.String get_SmtpAddress()

Disassembly:
	0x036D0C00 STR W19, [X31 + 0xC]
	0x036D0C04 ADRP X0, 0xA63000
	0x036D0C08 LDR X0, [X0 + 0xD88]
	0x036D0C0C MOV X19, X8
	0x036D0C10 BL 0x1C16D08
	0x036D0C14 ADD X1, X31, 0xC
	0x036D0C18 BL 0x1C16E04
	0x036D0C1C MOV X20, X0
	0x036D0C20 ADRP X0, 0xA6F000
	0x036D0C24 LDR X0, [X0 + 0xFD8]
	0x036D0C28 BL 0x1C16D08
	0x036D0C2C MOV X1, X20
	0x036D0C30 MOV X2, X19
	0x036D0C34 MOV X3, X31
	0x036D0C38 BL 0x320A264
	0x036D0C3C MOV X19, X0
	0x036D0C40 ADRP X0, 0xA4E000
	0x036D0C44 LDR X0, [X0 + 0x308]
	0x036D0C48 BL 0x1C16D08
	0x036D0C4C BL 0x1C16F10
	0x036D0C50 MOVZ W1, 0x9
	0x036D0C54 MOV X2, X19
	0x036D0C58 MOV X20, X0
	0x036D0C5C BL 0x36D7F84
	0x036D0C60 ADRP X0, 0xA6F000
	0x036D0C64 LDR X0, [X0 + 0xFE0]
	0x036D0C68 BL 0x1C16D08
	0x036D0C6C MOV X1, X0
	0x036D0C70 MOV X0, X20
	0x036D0C74 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD11000
	007 Move X20, 0xA4D000
	008 Move X21, 0xA26000
	009 Move W8, [X22+2680]
	010 Move X20, [X20+2624]
	011 Move X21, [X21+608]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA4D000
	018 Move X0, [X0+2624]
	019 Call 0x1C17CF4
	020 Move X0, 0xA26000
	021 Move X0, [X0+608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2680], W8
	025 Move X0, X19
	026 Call MailAddress.get_Address, X0
	027 Move X8, [X20]
	028 Move X2, [X21]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X1, X0
	034 Move X0, X8
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Call String.Concat, X0, X1, X2
	038 Return X0

Method: System.String ToString()

Disassembly:
	0x036D0C78 TBNZ X21, 0x0, 0x36D0C90
	0x036D0C7C LDP X20, X19, [X31 + 0x30]
	0x036D0C80 LDP X22, X21, [X31 + 0x20]
	0x036D0C84 LDP X30, X23, [X31 + 0x10]
	0x036D0C88 ADD X31, X31, 0x40
	0x036D0C8C RET
	0x036D0C90 ADRP X0, 0xA4C000
	0x036D0C94 LDR X0, [X0 + 0x4B8]
	0x036D0C98 BL 0x1C16D08
	0x036D0C9C BL 0x1C16F10
	0x036D0CA0 MOV X19, X0
	0x036D0CA4 ADRP X0, 0xA6F000
	0x036D0CA8 LDR X0, [X0 + 0xFE8]
	0x036D0CAC BL 0x1C16D08
	0x036D0CB0 MOV X1, X0
	0x036D0CB4 MOV X0, X19
	0x036D0CB8 MOV X2, X31
	0x036D0CBC BL 0x338C448
	0x036D0CC0 ADRP X0, 0xA6F000
	0x036D0CC4 LDR X0, [X0 + 0xFE0]
	0x036D0CC8 BL 0x1C16D08
	0x036D0CCC MOV X1, X0
	0x036D0CD0 MOV X0, X19
	0x036D0CD4 BL 0x1C16DEC
	0x036D0CD8 SUB X31, X31, 0x50
	0x036D0CDC STP X30, X25, [X31 + 0x10]
	0x036D0CE0 STP X24, X23, [X31 + 0x20]
	0x036D0CE4 STP X22, X21, [X31 + 0x30]
	0x036D0CE8 STP X20, X19, [X31 + 0x40]
	0x036D0CEC ADRP X24, 0xD10000
	0x036D0CF0 STR X5, [X31 + 0x8]
	0x036D0CF4 ADRP X25, 0xA2B000
	0x036D0CF8 LDRB W8, [X24 + 0xA82]
	0x036D0CFC LDR X25, [X25 + 0x7D8]
	0x036D0D00 MOV X19, X4
	0x036D0D04 MOV X20, X3
	0x036D0D08 MOV W23, W2
	0x036D0D0C MOV W21, W1
	0x036D0D10 MOV X22, X0
	0x036D0D14 TBNZ X8, 0x0, 0x36D0D2C
	0x036D0D18 ADRP X0, 0xA2B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD11000
	007 Move W8, [X20+2681]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA70000
	014 Move X0, [X0+3904]
	015 Call 0x1C17CF4
	016 Move X0, 0xA2F000
	017 Move X0, [X0+3288]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2681], W8
	021 Move X0, [X19+24]
	022 Move X1, X31
	023 Call String.IsNullOrEmpty, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {36}
	028 Move X0, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call MailAddress.get_Address, X0
	035 Return X0
	036 Move X21, 0xA2F000
	037 Move X22, 0xA70000
	038 Move X20, [X19+24]
	039 Move X21, [X21+3288]
	040 Move X22, [X22+3904]
	041 Move X0, X19
	042 Call MailAddress.get_SmtpAddress, X0
	043 Move X8, [X21]
	044 Move X2, [X22]
	045 Move X1, X20
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X3, X0
	051 Move X0, X8
	052 Move X4, X31
	053 Move X30, [X31+48]
	054 Call String.Concat, X0, X1, X2, X3
	055 Return X0

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x036D0D1C LDR X0, [X0 + 0x7D8]
	0x036D0D20 BL 0x1C16CF4
	0x036D0D24 MOVZ W8, 0x1
	0x036D0D28 STRB W8, [X24 + 0xA82]
	0x036D0D2C LDR X0, [X25]
	0x036D0D30 LDR W8, [X0 + 0xE0]
	0x036D0D34 CBNZ W8, 0x36D0D3C
	0x036D0D38 BL 0x1C16DFC
	0x036D0D3C ADD X0, X31, 0x8
	0x036D0D40 MOV X1, X31
	0x036D0D44 BL 0x33DD2F8
	0x036D0D48 TBNZ X0, 0x0, 0x36D0D84
	0x036D0D4C LDR X0, [X22 + 0x50]
	0x036D0D50 CBZ X0, 0x36D0DD4
	0x036D0D54 MOV W1, W31
	0x036D0D58 MOV X2, X31
	0x036D0D5C BL 0x33E1C08
	0x036D0D60 TBZ X0, 0x0, 0x36D0D84
	0x036D0D64 AND W2, W23, 0x1
	0x036D0D68 MOV X0, X22
	0x036D0D6C MOV W1, W21
	0x036D0D70 MOV X3, X20
	0x036D0D74 MOV X4, X19
	0x036D0D78 BL 0x36D1780
	0x036D0D7C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {28}
	006 Move X8, [X0]
	007 Move X19, X1
	008 Move X9, [X8+360]
	009 Move X1, [X8+368]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X8, [X19]
	012 Move X20, X0
	013 Move X0, X19
	014 Move X9, [X8+360]
	015 Move X1, [X8+368]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X20, 0
	018 JumpIfEqual {33}
	019 Move X1, X0
	020 Move X0, X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W2, 3
	024 Move X3, X31
	025 Move X30, [X31+32]
	026 Call String.Equals, X0, X1, X2
	027 Return X0
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W0, W31
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x036D0D80 B 0x36D0DB8
	0x036D0D84 LDR X5, [X31 + 0x8]
	0x036D0D88 AND W2, W23, 0x1
	0x036D0D8C MOV X0, X22
	0x036D0D90 MOV W1, W21
	0x036D0D94 MOV X3, X20
	0x036D0D98 MOV X4, X19
	0x036D0D9C BL 0x36D1C44
	0x036D0DA0 MOV X19, X0
	0x036D0DA4 CBNZ X0, 0x36D0DB4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+360]
	004 Move X1, [X8+368]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X2, [X8+344]
	010 Move X1, [X8+352]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x036D0DA8 MOVZ W0, 0x26
	0x036D0DAC MOV X1, X31
	0x036D0DB0 BL 0x338F3E0
	0x036D0DB4 MOVZ W1, 0x10000
	0x036D0DB8 MOV X0, X19
	0x036D0DBC LDP X20, X19, [X31 + 0x40]
	0x036D0DC0 LDP X22, X21, [X31 + 0x30]
	0x036D0DC4 LDP X24, X23, [X31 + 0x20]
	0x036D0DC8 LDP X30, X25, [X31 + 0x10]
	0x036D0DCC ADD X31, X31, 0x50
	0x036D0DD0 RET
	0x036D0DD4 BL 0x1C16F20
	0x036D0DD8 SUB X31, X31, 0x90
	0x036D0DDC STP X30, X25, [X31 + 0x50]
	0x036D0DE0 STP X24, X23, [X31 + 0x60]
	0x036D0DE4 STP X22, X21, [X31 + 0x70]
	0x036D0DE8 STP X20, X19, [X31 + 0x80]
	0x036D0DEC ADRP X25, 0xD10000
	0x036D0DF0 ADRP X19, 0xA4E000
	0x036D0DF4 ADRP X24, 0xA4C000
	0x036D0DF8 LDRB W8, [X25 + 0xA7F]
	0x036D0DFC LDR X19, [X19 + 0xF48]
	0x036D0E00 LDR X24, [X24 + 0xB60]
	0x036D0E04 MOV X21, X3
	0x036D0E08 MOV X22, X2
	0x036D0E0C MOV X23, X1
	0x036D0E10 MOV X20, X0
	0x036D0E14 TBNZ X8, 0x0, 0x36D0E68

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xD11000
	006 Move X21, 0xA70000
	007 Move X20, 0xA6B000
	008 Move W8, [X19+2682]
	009 Move X21, [X21+3912]
	010 Move X20, [X20+3192]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA70000
	016 Move X0, [X0+3912]
	017 Call 0x1C17CF4
	018 Move X0, 0xA6B000
	019 Move X0, [X0+3192]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2682], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

