Type: System.Net.Mail.QuotedPairReader

Method: System.Int32 CountQuotedChars(System.String data, System.Int32 index, System.Boolean permitUnicodeEscaping)

Disassembly:
	0x036CF300 MOV X0, X19
	0x036CF304 MOV W1, W20
	0x036CF308 MOV X2, X31
	0x036CF30C BL 0x3222A1C
	0x036CF310 STRH W0, [X31 + 0x8]
	0x036CF314 ADRP X0, 0xA26000
	0x036CF318 LDR X0, [X0 + 0x170]
	0x036CF31C BL 0x1C16D08
	0x036CF320 ADD X1, X31, 0x8
	0x036CF324 B 0x36CF360
	0x036CF328 ADRP X19, 0xA70000
	0x036CF32C LDR X19, [X19 + 0xEC0]
	0x036CF330 MOV X0, X19
	0x036CF334 BL 0x1C16D08
	0x036CF338 BL 0x19903D0
	0x036CF33C MOV X0, X19
	0x036CF340 BL 0x1C16D08
	0x036CF344 LDR X8, [X0 + 0xB8]
	0x036CF348 ADRP X0, 0xA26000
	0x036CF34C LDRH W8, [X8 + 0x40]
	0x036CF350 STRH W8, [X31 + 0x4]
	0x036CF354 LDR X0, [X0 + 0x170]
	0x036CF358 BL 0x1C16D08
	0x036CF35C ADD X1, X31, 0x4
	0x036CF360 BL 0x1C16E04
	0x036CF364 MOV X19, X0
	0x036CF368 ADRP X0, 0xA70000
	0x036CF36C LDR X0, [X0 + 0xEC8]
	0x036CF370 BL 0x1C16D08
	0x036CF374 MOV X1, X19
	0x036CF378 MOV X2, X31
	0x036CF37C BL 0x32094D4
	0x036CF380 MOV X19, X0
	0x036CF384 ADRP X0, 0xA51000
	0x036CF388 LDR X0, [X0 + 0xC08]
	0x036CF38C BL 0x1C16D08
	0x036CF390 BL 0x1C16F10
	0x036CF394 MOV X1, X19
	0x036CF398 MOV X2, X31
	0x036CF39C MOV X20, X0
	0x036CF3A0 BL 0x33674A0
	0x036CF3A4 ADRP X0, 0xA70000
	0x036CF3A8 LDR X0, [X0 + 0xF18]
	0x036CF3AC BL 0x1C16D08
	0x036CF3B0 MOV X1, X0
	0x036CF3B4 MOV X0, X20
	0x036CF3B8 BL 0x1C16DEC
	0x036CF3BC STR X30, [X31 - 0x20]!
	0x036CF3C0 STP X20, X19, [X31 + 0x10]
	0x036CF3C4 CBZ X0, 0x36CF3E0
	0x036CF3C8 MOVZ W1, 0x1
	0x036CF3CC MOV X2, X31
	0x036CF3D0 BL 0x322E3D0
	0x036CF3D4 LDP X20, X19, [X31 + 0x10]
	0x036CF3D8 LDR X30, [X31], #0x20
	0x036CF3DC RET
	0x036CF3E0 BL 0x1C16F20
	0x036CF3E4 B 0x36CF3E8
	0x036CF3E8 MOV X19, X0
	0x036CF3EC CMP W1, 0x1
	0x036CF3F0 B.NE 0x36CF498
	0x036CF3F4 MOV X0, X19
	0x036CF3F8 BL 0x3EB1AD0
	0x036CF3FC MOV X19, X0
	0x036CF400 ADRP X0, 0xA2C000
	0x036CF404 LDR X0, [X0 + 0x578]
	0x036CF408 BL 0x1C16D08
	0x036CF40C LDR X8, [X19]
	0x036CF410 LDR X1, [X8]
	0x036CF414 BL 0x1C17270
	0x036CF418 TBZ X0, 0x0, 0x36CF470
	0x036CF41C LDR X19, [X19]
	0x036CF420 BL 0x3EB1AE0
	0x036CF424 ADRP X0, 0xA51000
	0x036CF428 LDR X0, [X0 + 0xC08]
	0x036CF42C BL 0x1C16D08
	0x036CF430 BL 0x1C16F10
	0x036CF434 MOV X20, X0
	0x036CF438 ADRP X0, 0xA70000
	0x036CF43C LDR X0, [X0 + 0xED8]
	0x036CF440 BL 0x1C16D08
	0x036CF444 MOV X1, X0
	0x036CF448 MOV X0, X20
	0x036CF44C MOV X2, X19
	0x036CF450 MOV X3, X31
	0x036CF454 BL 0x33674C4
	0x036CF458 ADRP X0, 0xA70000
	0x036CF45C LDR X0, [X0 + 0xF20]
	0x036CF460 BL 0x1C16D08
	0x036CF464 MOV X1, X0
	0x036CF468 MOV X0, X20
	0x036CF46C BL 0x1C16DEC
	0x036CF470 MOVZ W0, 0x8
	0x036CF474 BL 0x3EB1AF0
	0x036CF478 LDR X8, [X19]
	0x036CF47C STR X8, [X0]
	0x036CF480 ADRP X1, 0x7E5000
	0x036CF484 ADD X1, X1, 0xE58
	0x036CF488 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD12000
	009 Move W8, [X22+2670]
	010 Move W21, W2
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xA71000
	018 Move X0, [X0+3776]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2670], W8
	022 Subtract W22, W19, 1
	023 Compare X20, 0
	024 JumpIfEqual {79}
	025 Move X24, 0xA71000
	026 Move X24, [X24+3776]
	027 Move X0, X20
	028 Move W1, W22
	029 Move X2, X31
	030 Call String.get_Chars, X0, X1
	031 Move X8, [X24]
	032 Move W23, W0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X8, [X24]
	039 Move X8, [X8+184]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X20
	043 Move W1, W22
	044 Call QuotedPairReader.CountBackslashes, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {58}
	049 Move W0, W31
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Return X0
	058 Move W22, W0
	059 Move TEMP, X21
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {78}
	063 Move X0, X20
	064 Move W1, W19
	065 Move X2, X31
	066 Call String.get_Chars, X0, X1
	067 Move X8, [X24]
	068 Move W21, W0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {75}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X8, [X24]
	075 Move X8, [X8+184]
	076 Move W8, [X8+48]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add W0, W22, 1
	079 Call 0x1C17F20
	080 Move X0, X20
	081 Call 0x19913C0
	082 Move X0, X20
	083 Move W1, W19
	084 Move X2, X31
	085 Call String.get_Chars, X0, X1
	086 NotImplemented "Instruction STRH not yet implemented."
	087 Move X0, 0xA27000
	088 Move X0, [X0+368]
	089 Call 0x1C17D08
	090 Add X1, X31, 12
	091 Call 0x1C17E04
	092 Move X19, X0
	093 Move X0, 0xA71000
	094 Move X0, [X0+3784]
	095 Call 0x1C17D08
	096 Move X1, X19
	097 Move X2, X31
	098 Call SR.Format, X0, X1
	099 Move X19, X0
	100 Move X0, 0xA52000
	101 Move X0, [X0+3080]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X1, X19
	105 Move X2, X31
	106 Move X20, X0
	107 Call FormatException..ctor, X0, X1
	108 Move X0, 0xA71000
	109 Move X0, [X0+3816]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC

Method: System.Int32 CountBackslashes(System.String data, System.Int32 index)

Disassembly:
	0x036D0800 BL 0x1C16DEC
	0x036D0804 STP X30, X27, [X31 - 0x50]!
	0x036D0808 STP X26, X25, [X31 + 0x10]
	0x036D080C STP X24, X23, [X31 + 0x20]
	0x036D0810 STP X22, X21, [X31 + 0x30]
	0x036D0814 STP X20, X19, [X31 + 0x40]
	0x036D0818 ADRP X25, 0xD10000
	0x036D081C LDRB W8, [X25 + 0xA7E]
	0x036D0820 MOV X21, X5
	0x036D0824 MOV W19, W4
	0x036D0828 MOV W24, W3
	0x036D082C MOV X22, X2
	0x036D0830 MOV X23, X1
	0x036D0834 MOV X20, X0
	0x036D0838 TBNZ X8, 0x0, 0x36D0850
	0x036D083C ADRP X0, 0xA4C000
	0x036D0840 LDR X0, [X0 + 0xB60]
	0x036D0844 BL 0x1C16CF4
	0x036D0848 MOVZ W8, 0x1
	0x036D084C STRB W8, [X25 + 0xA7E]
	0x036D0850 CMP W24, 0x2
	0x036D0854 B.CS 0x36D08F0
	0x036D0858 ADRP X27, 0xA4C000
	0x036D085C LDR X27, [X27 + 0xB60]
	0x036D0860 LDR W25, [X20 + 0x58]
	0x036D0864 LDRB W26, [X20 + 0x5C]
	0x036D0868 LDR X0, [X27]
	0x036D086C LDR W8, [X0 + 0xE0]
	0x036D0870 CBNZ W8, 0x36D087C
	0x036D0874 BL 0x1C16DFC
	0x036D0878 LDR X0, [X27]
	0x036D087C LDR X8, [X0 + 0xB8]
	0x036D0880 CMP W26, 0x0
	0x036D0884 CSET W1, NE
	0x036D0888 LDR X2, [X8 + 0x10]
	0x036D088C MOV W0, W25
	0x036D0890 BL 0x36D0B4C
	0x036D0894 LDRB W8, [X20 + 0xA0]
	0x036D0898 CMP W24, 0x1
	0x036D089C MOVZ W9, 0x1
	0x036D08A0 CINC W9, W9, EQ

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xD11000
	008 Move W8, [X21+2671]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA70000
	016 Move X0, [X0+3776]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2671], W8
	020 Move X22, 0xA70000
	021 Move X22, [X22+3776]
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W8, TEMP
	025 Move W23, W8
	026 Add W1, W19, W8
	027 Compare X20, 0
	028 JumpIfEqual {52}
	029 Move X0, X20
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 Move X8, [X22]
	033 Move W21, W0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {40}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X8, [X22]
	040 Move X8, [X8+184]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract W8, W23, 1
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Subtract W0, W31, W23
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Return X0
	052 Call 0x1C17F20

