Type: System.Net.Mail.DotAtomReader

Method: System.Int32 ReadReverse(System.String data, System.Int32 index)

Disassembly:
	0x036CF48C BL 0x3EB1B00
	0x036CF490 MOV X19, X0
	0x036CF494 BL 0x3EB1AE0
	0x036CF498 MOV X0, X19
	0x036CF49C BL 0x1D2C690
	0x036CF4A0 BL 0x1990590
	0x036CF4A4 SUB X31, X31, 0x40
	0x036CF4A8 STP X30, X23, [X31 + 0x10]
	0x036CF4AC STP X22, X21, [X31 + 0x20]
	0x036CF4B0 STP X20, X19, [X31 + 0x30]
	0x036CF4B4 ADRP X22, 0xD11000
	0x036CF4B8 LDRB W8, [X22 + 0xA70]
	0x036CF4BC MOV W20, W2
	0x036CF4C0 MOV W21, W1
	0x036CF4C4 MOV X19, X0
	0x036CF4C8 TBNZ X8, 0x0, 0x36CF4E0
	0x036CF4CC ADRP X0, 0xA70000
	0x036CF4D0 LDR X0, [X0 + 0xEC0]
	0x036CF4D4 BL 0x1C16CF4
	0x036CF4D8 MOVZ W8, 0x1
	0x036CF4DC STRB W8, [X22 + 0xA70]
	0x036CF4E0 ADRP X23, 0xA70000
	0x036CF4E4 LDR X23, [X23 + 0xEC0]
	0x036CF4E8 SUB W1, W21, 0x1
	0x036CF4EC MOV X0, X19
	0x036CF4F0 BL 0x36CE0F4
	0x036CF4F4 TBNZ X0, 0x1F, 0x36CF588
	0x036CF4F8 MOV W21, W0
	0x036CF4FC AND W2, W20, 0x1
	0x036CF500 MOV X0, X19
	0x036CF504 MOV W1, W21
	0x036CF508 BL 0x36CE300
	0x036CF50C CMP W0, 0x1
	0x036CF510 B.LT 0x36CF520
	0x036CF514 SUB W1, W21, W0
	0x036CF518 TBZ X1, 0x1F, 0x36CF4EC
	0x036CF51C B 0x36CF588
	0x036CF520 CBZ X19, 0x36CF634
	0x036CF524 MOV X0, X19
	0x036CF528 MOV W1, W21
	0x036CF52C MOV X2, X31
	0x036CF530 BL 0x3222A1C
	0x036CF534 LDR X8, [X23]
	0x036CF538 MOV W22, W0
	0x036CF53C LDR W9, [X8 + 0xE0]
	0x036CF540 CBNZ W9, 0x36CF550
	0x036CF544 MOV X0, X8
	0x036CF548 BL 0x1C16DFC
	0x036CF54C LDR X8, [X23]
	0x036CF550 LDR X8, [X8 + 0xB8]
	0x036CF554 LDRH W8, [X8 + 0x34]
	0x036CF558 CMP W8, W22, UXTH
	0x036CF55C B.EQ 0x36CF61C
	0x036CF560 MOV X0, X19
	0x036CF564 MOV W1, W21
	0x036CF568 MOV X2, X31
	0x036CF56C BL 0x3222A1C
	0x036CF570 MOV W1, W0
	0x036CF574 AND W0, W20, 0x1
	0x036CF578 BL 0x36CF8A4
	0x036CF57C TBZ X0, 0x0, 0x36CF638
	0x036CF580 SUB W1, W21, 0x1
	0x036CF584 TBZ X1, 0x1F, 0x36CF4EC
	0x036CF588 ADRP X19, 0xA70000
	0x036CF58C LDR X19, [X19 + 0xEC0]
	0x036CF590 MOV X0, X19
	0x036CF594 BL 0x1C16D08
	0x036CF598 BL 0x19903D0
	0x036CF59C MOV X0, X19
	0x036CF5A0 BL 0x1C16D08
	0x036CF5A4 LDR X8, [X0 + 0xB8]
	0x036CF5A8 ADRP X0, 0xA26000
	0x036CF5AC LDRH W8, [X8 + 0x34]
	0x036CF5B0 STRH W8, [X31 + 0x8]
	0x036CF5B4 LDR X0, [X0 + 0x170]
	0x036CF5B8 BL 0x1C16D08
	0x036CF5BC ADD X1, X31, 0x8
	0x036CF5C0 BL 0x1C16E04
	0x036CF5C4 MOV X19, X0
	0x036CF5C8 ADRP X0, 0xA70000
	0x036CF5CC LDR X0, [X0 + 0xEC8]
	0x036CF5D0 BL 0x1C16D08
	0x036CF5D4 MOV X1, X19
	0x036CF5D8 MOV X2, X31
	0x036CF5DC BL 0x32094D4
	0x036CF5E0 MOV X19, X0
	0x036CF5E4 ADRP X0, 0xA51000
	0x036CF5E8 LDR X0, [X0 + 0xC08]
	0x036CF5EC BL 0x1C16D08
	0x036CF5F0 BL 0x1C16F10
	0x036CF5F4 MOV X1, X19
	0x036CF5F8 MOV X2, X31
	0x036CF5FC MOV X20, X0
	0x036CF600 BL 0x33674A0
	0x036CF604 ADRP X0, 0xA70000
	0x036CF608 LDR X0, [X0 + 0xF28]
	0x036CF60C BL 0x1C16D08
	0x036CF610 MOV X1, X0
	0x036CF614 MOV X0, X20
	0x036CF618 BL 0x1C16DEC
	0x036CF61C SUB W0, W21, 0x1
	0x036CF620 LDP X20, X19, [X31 + 0x30]
	0x036CF624 LDP X22, X21, [X31 + 0x20]
	0x036CF628 LDP X30, X23, [X31 + 0x10]
	0x036CF62C ADD X31, X31, 0x40
	0x036CF630 RET
	0x036CF634 BL 0x1C16F20
	0x036CF638 MOV X0, X19
	0x036CF63C BL 0x19903C0
	0x036CF640 MOV X0, X19
	0x036CF644 MOV W1, W21
	0x036CF648 MOV X2, X31
	0x036CF64C BL 0x3222A1C
	0x036CF650 STRH W0, [X31 + 0xC]
	0x036CF654 ADRP X0, 0xA26000
	0x036CF658 LDR X0, [X0 + 0x170]
	0x036CF65C BL 0x1C16D08
	0x036CF660 ADD X1, X31, 0xC
	0x036CF664 B 0x36CF5C0
	0x036CF668 STR X30, [X31 - 0x40]!
	0x036CF66C STP X24, X23, [X31 + 0x10]
	0x036CF670 STP X22, X21, [X31 + 0x20]
	0x036CF674 STP X20, X19, [X31 + 0x30]
	0x036CF678 ADRP X23, 0xD11000
	0x036CF67C LDRB W8, [X23 + 0xA71]
	0x036CF680 MOV W21, W3
	0x036CF684 MOV W22, W2
	0x036CF688 MOV W19, W1
	0x036CF68C MOV X20, X0
	0x036CF690 TBNZ X8, 0x0, 0x36CF6A8
	0x036CF694 ADRP X0, 0xA70000
	0x036CF698 LDR X0, [X0 + 0xEC0]
	0x036CF69C BL 0x1C16CF4
	0x036CF6A0 MOVZ W8, 0x1
	0x036CF6A4 STRB W8, [X23 + 0xA71]
	0x036CF6A8 ADRP X24, 0xA70000
	0x036CF6AC LDR X24, [X24 + 0xEC0]
	0x036CF6B0 MOV X0, X20
	0x036CF6B4 MOV W1, W19
	0x036CF6B8 BL 0x36CE0F4
	0x036CF6BC MOV W19, W0
	0x036CF6C0 TBNZ X0, 0x1F, 0x36CF75C
	0x036CF6C4 AND W2, W22, 0x1
	0x036CF6C8 MOV X0, X20
	0x036CF6CC MOV W1, W19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xD12000
	009 Move W8, [X19+2665]
	010 Move W20, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA71000
	017 Move X0, [X0+3776]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2665], W8
	021 Move X23, 0xA71000
	022 Move X23, [X23+3776]
	023 Move W19, W20
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {86}
	028 Compare X21, 0
	029 JumpIfEqual {113}
	030 Move W19, W20
	031 Move X0, X21
	032 Move W1, W19
	033 Move X2, X31
	034 Call String.get_Chars, X0, X1
	035 Move X8, [X23]
	036 Move W22, W0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {43}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X8, [X23]
	043 Move X8, [X8+184]
	044 Move W8, [X8+48]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X21
	047 Move W1, W19
	048 Move X2, X31
	049 Call String.get_Chars, X0, X1
	050 Move X8, [X23]
	051 Move W22, W0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {58}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X8, [X23]
	058 Move X9, [X8+184]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {67}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X8, [X23]
	067 Move X8, [X8+184]
	068 Move X0, X21
	069 Move W1, W19
	070 Move X2, X31
	071 Move X22, [X8]
	072 Call String.get_Chars, X0, X1
	073 Compare X22, 0
	074 JumpIfEqual {113}
	075 Move W8, [X22+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add X8, X22, W0
	078 Move W8, [X8+32]
	079 Compare W8, 0
	080 JumpIfEqual {86}
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract W19, W19, 1
	083 Move TEMP, 0
	084 Not TEMP
	085 Move W19, TEMP
	086 Compare X21, 0
	087 JumpIfEqual {113}
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add W1, W19, 1
	090 Move X0, X21
	091 Move X2, X31
	092 Call String.get_Chars, X0, X1
	093 Move X8, [X23]
	094 Move W20, W0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X8, [X23]
	101 Move X8, [X8+184]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W0, W19
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X30, [X31+16]
	110 Move X23, [X31+24]
	111 Add X31, X31, 64
	112 Return X0
	113 Call 0x1C17F20
	114 Call 0x1C17F28
	115 Move X0, X21
	116 Move W1, W20
	117 Move X2, X31
	118 Call String.get_Chars, X0, X1
	119 NotImplemented "Instruction STRH not yet implemented."
	120 Move X0, 0xA27000
	121 Move X0, [X0+368]
	122 Call 0x1C17D08
	123 Add X1, X31, 12
	124 Move X19, 0xA71000
	125 Move X19, [X19+3776]
	126 Move X0, X19
	127 Call 0x1C17D08
	128 Call 0x19913D0
	129 Move X0, X19
	130 Call 0x1C17D08
	131 Move X8, [X0+184]
	132 Move X0, 0xA27000
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 NotImplemented "Instruction STRH not yet implemented."
	135 Move X0, [X0+368]
	136 Call 0x1C17D08
	137 Add X1, X31, 8
	138 Call 0x1C17E04
	139 Move X19, X0
	140 Move X0, 0xA71000
	141 Move X0, [X0+3784]
	142 Call 0x1C17D08
	143 Move X1, X19
	144 Move X2, X31
	145 Call SR.Format, X0, X1
	146 Move X19, X0
	147 Move X0, 0xA52000
	148 Move X0, [X0+3080]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X1, X19
	152 Move X2, X31
	153 Move X20, X0
	154 Call FormatException..ctor, X0, X1
	155 Move X0, 0xA71000
	156 Move X0, [X0+3824]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X20
	160 Call 0x1C17DEC

