Type: System.Net.Mail.WhitespaceReader

Method: System.Int32 ReadFwsReverse(System.String data, System.Int32 index)

Disassembly:
	0x036CF0F4 ADRP X21, 0xD11000
	0x036CF0F8 LDRB W8, [X21 + 0xA74]
	0x036CF0FC MOV W20, W1
	0x036CF100 MOV X19, X0
	0x036CF104 TBNZ X8, 0x0, 0x36CF11C
	0x036CF108 ADRP X0, 0xA70000
	0x036CF10C LDR X0, [X0 + 0xEC0]
	0x036CF110 BL 0x1C16CF4
	0x036CF114 MOVZ W8, 0x1
	0x036CF118 STRB W8, [X21 + 0xA74]
	0x036CF11C MOV X0, X19
	0x036CF120 MOV W1, W20
	0x036CF124 BL 0x36CE0F4
	0x036CF128 MOV W20, W0
	0x036CF12C TBNZ X0, 0x1F, 0x36CF29C
	0x036CF130 ADRP X23, 0xA70000
	0x036CF134 LDR X23, [X23 + 0xEC0]
	0x036CF138 MOV W22, W31
	0x036CF13C MOVZ W2, 0x1
	0x036CF140 MOV X0, X19
	0x036CF144 MOV W1, W20
	0x036CF148 BL 0x36CE300
	0x036CF14C CMP W22, 0x1
	0x036CF150 B.LT 0x36CF164
	0x036CF154 CMP W0, 0x1
	0x036CF158 B.LT 0x36CF164
	0x036CF15C SUB W1, W20, W0
	0x036CF160 B 0x36CF284
	0x036CF164 CBZ X19, 0x36CF2B4
	0x036CF168 MOV X0, X19
	0x036CF16C MOV W1, W20
	0x036CF170 MOV X2, X31
	0x036CF174 BL 0x3222A1C
	0x036CF178 LDR X8, [X23]
	0x036CF17C MOV W21, W0
	0x036CF180 LDR W9, [X8 + 0xE0]
	0x036CF184 CBNZ W9, 0x36CF194
	0x036CF188 MOV X0, X8
	0x036CF18C BL 0x1C16DFC
	0x036CF190 LDR X8, [X23]
	0x036CF194 LDR X8, [X8 + 0xB8]
	0x036CF198 LDRH W8, [X8 + 0x40]
	0x036CF19C CMP W8, W21, UXTH
	0x036CF1A0 B.NE 0x36CF1AC
	0x036CF1A4 ADD W22, W22, 0x1
	0x036CF1A8 B 0x36CF280
	0x036CF1AC MOV X0, X19
	0x036CF1B0 MOV W1, W20
	0x036CF1B4 MOV X2, X31
	0x036CF1B8 BL 0x3222A1C
	0x036CF1BC LDR X8, [X23]
	0x036CF1C0 MOV W21, W0
	0x036CF1C4 LDR W9, [X8 + 0xE0]
	0x036CF1C8 CBNZ W9, 0x36CF1D8
	0x036CF1CC MOV X0, X8
	0x036CF1D0 BL 0x1C16DFC
	0x036CF1D4 LDR X8, [X23]
	0x036CF1D8 LDR X8, [X8 + 0xB8]
	0x036CF1DC LDRH W8, [X8 + 0x3E]
	0x036CF1E0 CMP W8, W21, UXTH
	0x036CF1E4 B.NE 0x36CF1F4
	0x036CF1E8 SUBS W22, W22, 0x1
	0x036CF1EC B.PL 0x36CF280
	0x036CF1F0 B 0x36CF2B8
	0x036CF1F4 CMP W22, 0x1
	0x036CF1F8 B.LT 0x36CF29C
	0x036CF1FC MOV X0, X19
	0x036CF200 MOV W1, W20
	0x036CF204 MOV X2, X31
	0x036CF208 BL 0x3222A1C
	0x036CF20C LDR X8, [X23]
	0x036CF210 MOV W21, W0
	0x036CF214 LDR W9, [X8 + 0xE0]
	0x036CF218 CBNZ W9, 0x36CF228
	0x036CF21C MOV X0, X8
	0x036CF220 BL 0x1C16DFC
	0x036CF224 LDR X8, [X23]
	0x036CF228 LDR X9, [X8 + 0xB8]
	0x036CF22C LDR W10, [X9 + 0x30]
	0x036CF230 CMP W10, W21, UXTH
	0x036CF234 B.LT 0x36CF280
	0x036CF238 LDR W10, [X8 + 0xE0]
	0x036CF23C CBNZ W10, 0x36CF250
	0x036CF240 MOV X0, X8
	0x036CF244 BL 0x1C16DFC
	0x036CF248 LDR X8, [X23]
	0x036CF24C LDR X9, [X8 + 0xB8]
	0x036CF250 LDR X21, [X9 + 0x28]
	0x036CF254 MOV X0, X19
	0x036CF258 MOV W1, W20
	0x036CF25C MOV X2, X31
	0x036CF260 BL 0x3222A1C
	0x036CF264 CBZ X21, 0x36CF2B4
	0x036CF268 LDR W8, [X21 + 0x18]
	0x036CF26C CMP W8, W0, UXTH
	0x036CF270 B.LS 0x36CF2F4
	0x036CF274 ADD X8, X21, W0, UXTH
	0x036CF278 LDRB W8, [X8 + 0x20]
	0x036CF27C CBZ W8, 0x36CF2F8
	0x036CF280 SUB W1, W20, 0x1
	0x036CF284 MOV X0, X19
	0x036CF288 BL 0x36CE0F4
	0x036CF28C MOV W20, W0
	0x036CF290 TBZ X0, 0x1F, 0x36CF13C
	0x036CF294 CMP W22, 0x1
	0x036CF298 B.GE 0x36CF328
	0x036CF29C MOV W0, W20
	0x036CF2A0 LDP X20, X19, [X31 + 0x30]
	0x036CF2A4 LDP X22, X21, [X31 + 0x20]
	0x036CF2A8 LDP X30, X23, [X31 + 0x10]
	0x036CF2AC ADD X31, X31, 0x40
	0x036CF2B0 RET
	0x036CF2B4 BL 0x1C16F20
	0x036CF2B8 ADRP X19, 0xA70000
	0x036CF2BC LDR X19, [X19 + 0xEC0]
	0x036CF2C0 MOV X0, X19
	0x036CF2C4 BL 0x1C16D08
	0x036CF2C8 BL 0x19903D0
	0x036CF2CC MOV X0, X19
	0x036CF2D0 BL 0x1C16D08
	0x036CF2D4 LDR X8, [X0 + 0xB8]
	0x036CF2D8 ADRP X0, 0xA26000
	0x036CF2DC LDRH W8, [X8 + 0x3E]
	0x036CF2E0 STRH W8, [X31 + 0xC]
	0x036CF2E4 LDR X0, [X0 + 0x170]
	0x036CF2E8 BL 0x1C16D08
	0x036CF2EC ADD X1, X31, 0xC
	0x036CF2F0 B 0x36CF360
	0x036CF2F4 BL 0x1C16F28
	0x036CF2F8 MOV X0, X19
	0x036CF2FC BL 0x19903C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xD12000
	008 Move W8, [X21+2675]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA71000
	016 Move X0, [X0+3776]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2675], W8
	020 Move TEMP, X19
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {125}
	024 Compare X20, 0
	025 JumpIfEqual {151}
	026 Move X22, 0xA71000
	027 Move X22, [X22+3776]
	028 Move W23, W31
	029 Move X0, X20
	030 Move W1, W19
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 Move X8, [X22]
	034 Move W21, W0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X8, [X22]
	041 Move X8, [X8+184]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 And W8, W23, W8
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {51}
	050 Move W23, W31
	051 Move X0, X20
	052 Move W1, W19
	053 Move X2, X31
	054 Call String.get_Chars, X0, X1
	055 Move X8, [X22]
	056 Move W21, W0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {63}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X8, [X22]
	063 Move X8, [X8+184]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSET not yet implemented."
	067 NotImplemented "Instruction BIC not yet implemented."
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {133}
	072 Move X0, X20
	073 Move W1, W19
	074 Move X2, X31
	075 Call String.get_Chars, X0, X1
	076 Move X8, [X22]
	077 Move W21, W0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {84}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X8, [X22]
	084 Move X8, [X8+184]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W23, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract W19, W19, 1
	090 Move X0, X20
	091 Move W1, W19
	092 Move X2, X31
	093 Call String.get_Chars, X0, X1
	094 Move X8, [X22]
	095 Move W21, W0
	096 Move W9, [X8+224]
	097 Compare W9, 0
	098 JumpIfNotEqual {102}
	099 Move X0, X8
	100 Call 0x1C17DFC
	101 Move X8, [X22]
	102 Move X8, [X8+184]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X20
	106 Move W1, W19
	107 Move X2, X31
	108 Call String.get_Chars, X0, X1
	109 Move X8, [X22]
	110 Move W21, W0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {117}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X8, [X22]
	117 Move X8, [X8+184]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Compare W23, 0
	121 JumpIfNotEqual {133}
	122 Move TEMP, 0
	123 Not TEMP
	124 Move W19, TEMP
	125 Move W0, W19
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X30, [X31+48]
	131 Move X23, [X31+56]
	132 Return X0
	133 Move X0, 0xA52000
	134 Move X0, [X0+3080]
	135 Call 0x1C17D08
	136 Call 0x1C17F10
	137 Move X19, X0
	138 Move X0, 0xA71000
	139 Move X0, [X0+3800]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Move X2, X31
	144 Call FormatException..ctor, X0, X1
	145 Move X0, 0xA71000
	146 Move X0, [X0+3808]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Call 0x1C17DEC
	151 Call 0x1C17F20

Method: System.Int32 ReadCfwsReverse(System.String data, System.Int32 index)

Disassembly:
	0x036D00E4 ADRP X24, 0xA2B000
	0x036D00E8 LDR X21, [X9 + 0x8]
	0x036D00EC LDR X24, [X24 + 0x7D8]
	0x036D00F0 CBNZ X21, 0x36D0148
	0x036D00F4 LDR W9, [X8 + 0xE0]
	0x036D00F8 CBNZ W9, 0x36D0108
	0x036D00FC MOV X0, X8
	0x036D0100 BL 0x1C16DFC
	0x036D0104 LDR X8, [X23]
	0x036D0108 ADRP X9, 0xA4D000
	0x036D010C LDR X8, [X8 + 0xB8]
	0x036D0110 LDR X9, [X9 + 0xE48]
	0x036D0114 LDR X22, [X8]
	0x036D0118 LDR X0, [X9]
	0x036D011C BL 0x1C16F10
	0x036D0120 ADRP X8, 0xA6F000
	0x036D0124 LDR X8, [X8 + 0xF58]
	0x036D0128 MOV X1, X22
	0x036D012C MOV X3, X31
	0x036D0130 MOV X21, X0
	0x036D0134 LDR X2, [X8]
	0x036D0138 BL 0x2A6B948
	0x036D013C LDR X8, [X23]
	0x036D0140 LDR X8, [X8 + 0xB8]
	0x036D0144 STR X21, [X8 + 0x8]
	0x036D0148 LDR X0, [X24]
	0x036D014C ADRP X22, 0xA25000
	0x036D0150 LDR W8, [X0 + 0xE0]
	0x036D0154 LDR X22, [X22 + 0x570]
	0x036D0158 CBNZ W8, 0x36D0160
	0x036D015C BL 0x1C16DFC
	0x036D0160 ADD X8, X31, 0x8
	0x036D0164 ADD X0, X31, 0x28
	0x036D0168 MOV X1, X21
	0x036D016C MOV X2, X19
	0x036D0170 MOV X3, X31
	0x036D0174 BL 0x33DD5C8
	0x036D0178 LDR X0, [X22]
	0x036D017C LDR W8, [X0 + 0xE0]
	0x036D0180 CBNZ W8, 0x36D018C
	0x036D0184 BL 0x1C16DFC
	0x036D0188 LDR X0, [X22]
	0x036D018C LDR X8, [X0 + 0xB8]
	0x036D0190 MOV X0, X20
	0x036D0194 MOV X2, X31
	0x036D0198 LDR X1, [X8]
	0x036D019C BL 0x3394D08
	0x036D01A0 TBZ X0, 0x0, 0x36D0244
	0x036D01A4 LDR X0, [X23]
	0x036D01A8 LDR W8, [X0 + 0xE0]
	0x036D01AC CBNZ W8, 0x36D01B8
	0x036D01B0 BL 0x1C16DFC
	0x036D01B4 LDR X0, [X23]
	0x036D01B8 LDR X8, [X0 + 0xB8]
	0x036D01BC LDR X21, [X8 + 0x10]
	0x036D01C0 CBNZ X21, 0x36D0214
	0x036D01C4 LDR W8, [X0 + 0xE0]
	0x036D01C8 CBNZ W8, 0x36D01D4
	0x036D01CC BL 0x1C16DFC
	0x036D01D0 LDR X0, [X23]
	0x036D01D4 ADRP X9, 0xA2B000
	0x036D01D8 LDR X8, [X0 + 0xB8]
	0x036D01DC LDR X9, [X9 + 0xC78]
	0x036D01E0 LDR X22, [X8]
	0x036D01E4 LDR X0, [X9]
	0x036D01E8 BL 0x1C16F10
	0x036D01EC ADRP X8, 0xA6F000
	0x036D01F0 LDR X8, [X8 + 0xF60]
	0x036D01F4 MOV X1, X22
	0x036D01F8 MOV X3, X31
	0x036D01FC MOV X21, X0
	0x036D0200 LDR X2, [X8]
	0x036D0204 BL 0x33ECC14
	0x036D0208 LDR X8, [X23]
	0x036D020C LDR X8, [X8 + 0xB8]
	0x036D0210 STR X21, [X8 + 0x10]
	0x036D0214 ADRP X8, 0xA2B000
	0x036D0218 LDR X8, [X8 + 0xC80]
	0x036D021C LDR X0, [X8]
	0x036D0220 BL 0x1C16F10
	0x036D0224 MOV X1, X21
	0x036D0228 MOV X2, X19
	0x036D022C MOV X3, X20
	0x036D0230 MOV X4, X20
	0x036D0234 MOV X5, X31
	0x036D0238 MOV X22, X0
	0x036D023C BL 0x33EBC04
	0x036D0240 STR X22, [X19 + 0x28]
	0x036D0244 LDP X20, X19, [X31 + 0x70]
	0x036D0248 LDP X22, X21, [X31 + 0x60]
	0x036D024C LDP X24, X23, [X31 + 0x50]
	0x036D0250 LDP X26, X25, [X31 + 0x40]
	0x036D0254 LDP X28, X27, [X31 + 0x30]
	0x036D0258 LDR X30, [X31 + 0x20]
	0x036D025C ADD X31, X31, 0x80
	0x036D0260 RET
	0x036D0264 BL 0x1C16F20
	0x036D0268 LDR X0, [X0 + 0x30]
	0x036D026C RET
	0x036D0270 LDR X0, [X0 + 0x48]
	0x036D0274 RET
	0x036D0278 MOV X1, X31
	0x036D027C B 0x33BDD8C
	0x036D0280 MOV X1, X31
	0x036D0284 B 0x33BDD8C
	0x036D0288 SUB X31, X31, 0x30
	0x036D028C STP X30, X21, [X31 + 0x10]
	0x036D0290 STP X20, X19, [X31 + 0x20]
	0x036D0294 LDR X19, [X0 + 0x30]
	0x036D0298 MOV X20, X0
	0x036D029C STRB W31, [X31 + 0xC]
	0x036D02A0 ADD X1, X31, 0xC
	0x036D02A4 MOV X0, X19
	0x036D02A8 MOV X2, X31
	0x036D02AC BL 0x33DE64C
	0x036D02B0 MOV X0, X20
	0x036D02B4 BL 0x36D0344
	0x036D02B8 MOV X20, X31
	0x036D02BC LDRB W8, [X31 + 0xC]
	0x036D02C0 CBZ W8, 0x36D02D0
	0x036D02C4 MOV X0, X19
	0x036D02C8 MOV X1, X31
	0x036D02CC BL 0x33E14E4
	0x036D02D0 CBNZ X20, 0x36D02E4
	0x036D02D4 LDP X20, X19, [X31 + 0x20]
	0x036D02D8 LDP X30, X21, [X31 + 0x10]
	0x036D02DC ADD X31, X31, 0x30
	0x036D02E0 RET
	0x036D02E4 MOV X0, X20
	0x036D02E8 BL 0x1C16F18
	0x036D02EC CMP W1, 0x1
	0x036D02F0 MOV X21, X0
	0x036D02F4 B.NE 0x36D030C
	0x036D02F8 MOV X0, X21
	0x036D02FC BL 0x3EB1AD0
	0x036D0300 LDR X20, [X0]
	0x036D0304 BL 0x3EB1AE0
	0x036D0308 B 0x36D02BC
	0x036D030C MOV X20, X31
	0x036D0310 B 0x36D0318
	0x036D0314 MOV X21, X0
	0x036D0318 LDRB W8, [X31 + 0xC]
	0x036D031C CBZ W8, 0x36D032C
	0x036D0320 MOV X0, X19
	0x036D0324 MOV X1, X31
	0x036D0328 BL 0x33E14E4
	0x036D032C CBNZ X20, 0x36D0338
	0x036D0330 MOV X0, X21
	0x036D0334 BL 0x1D2C690
	0x036D0338 MOV X0, X20
	0x036D033C BL 0x1C16F18
	0x036D0340 BL 0x1990590
	0x036D0344 STP X30, X19, [X31 - 0x10]!
	0x036D0348 LDRB W8, [X0 + 0x5C]
	0x036D034C CBNZ W8, 0x36D0390
	0x036D0350 MOV X19, X0
	0x036D0354 LDR X0, [X0 + 0x28]
	0x036D0358 MOVZ W8, 0x1
	0x036D035C STRB W8, [X19 + 0x5C]
	0x036D0360 CBZ X0, 0x36D036C
	0x036D0364 MOV X1, X31
	0x036D0368 BL 0x33EBF78
	0x036D036C LDR X0, [X19 + 0x10]
	0x036D0370 CBZ X0, 0x36D037C
	0x036D0374 MOV X1, X31
	0x036D0378 BL 0x32F02B8
	0x036D037C LDR W8, [X19 + 0x58]
	0x036D0380 CMP W8, 0x5
	0x036D0384 B.GT 0x36D0390
	0x036D0388 MOVZ W8, 0x5
	0x036D038C STR W8, [X19 + 0x58]
	0x036D0390 LDP X30, X19, [X31], #0x10
	0x036D0394 RET
	0x036D0398 LDR X0, [X0 + 0x60]
	0x036D039C RET
	0x036D03A0 LDR X0, [X0 + 0x68]
	0x036D03A4 RET
	0x036D03A8 LDR W0, [X0 + 0x58]
	0x036D03AC RET
	0x036D03B0 LDR X0, [X0 + 0x20]
	0x036D03B4 RET
	0x036D03B8 SUB X31, X31, 0x60

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD11000
	009 Move W8, [X21+2676]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA70000
	017 Move X0, [X0+3776]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2676], W8
	021 Move X0, X19
	022 Move W1, W20
	023 Call WhitespaceReader.ReadFwsReverse, X0, X1
	024 Move W20, W0
	025 Move TEMP, X0
	026 And TEMP, TEMP, -2147483648
	027 Compare TEMP, -2147483648
	028 JumpIfEqual {118}
	029 Move X23, 0xA70000
	030 Move X23, [X23+3776]
	031 Move W22, W31
	032 Move W2, 1
	033 Move X0, X19
	034 Move W1, W20
	035 Call QuotedPairReader.CountQuotedChars, X0, X1, X2
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract W1, W20, W0
	039 Compare X19, 0
	040 JumpIfEqual {127}
	041 Move X0, X19
	042 Move W1, W20
	043 Move X2, X31
	044 Call String.get_Chars, X0, X1
	045 Move X8, [X23]
	046 Move W21, W0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {53}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X8, [X23]
	053 Move X8, [X8+184]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W22, W22, 1
	057 Move X0, X19
	058 Move W1, W20
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 Move X8, [X23]
	062 Move W21, W0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {69}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X8, [X23]
	069 Move X8, [X8+184]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract W22, W22, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X19
	075 Move W1, W20
	076 Move X2, X31
	077 Call String.get_Chars, X0, X1
	078 Move X8, [X23]
	079 Move W21, W0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {86}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X8, [X23]
	086 Move X9, [X8+184]
	087 Move W10, [X9+48]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W10, [X8+224]
	090 Compare W10, 0
	091 JumpIfNotEqual {96}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X8, [X23]
	095 Move X9, [X8+184]
	096 Move X21, [X9+40]
	097 Move X0, X19
	098 Move W1, W20
	099 Move X2, X31
	100 Call String.get_Chars, X0, X1
	101 Compare X21, 0
	102 JumpIfEqual {127}
	103 Move W8, [X21+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X8, X21, W0
	106 Move W8, [X8+32]
	107 Compare W8, 0
	108 JumpIfEqual {143}
	109 Subtract W1, W20, 1
	110 Move X0, X19
	111 Call WhitespaceReader.ReadFwsReverse, X0, X1
	112 Move W20, W0
	113 Move TEMP, X0
	114 And TEMP, TEMP, -2147483648
	115 Compare TEMP, -2147483648
	116 JumpIfNotEqual {32}
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W0, W20
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X30, [X31+16]
	124 Move X23, [X31+24]
	125 Add X31, X31, 64
	126 Return X0
	127 Call 0x1C17F20
	128 Move X19, 0xA70000
	129 Move X19, [X19+3776]
	130 Move X0, X19
	131 Call 0x1C17D08
	132 Call 0x19913D0
	133 Move X0, X19
	134 Call 0x1C17D08
	135 Move X8, [X0+184]
	136 Move X0, 0xA26000
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 NotImplemented "Instruction STRH not yet implemented."
	139 Move X0, [X0+368]
	140 Call 0x1C17D08
	141 Add X1, X31, 12
	142 Call 0x1C17F28
	143 Move X0, X19
	144 Call 0x19913C0
	145 Move X0, X19
	146 Move W1, W20
	147 Move X2, X31
	148 Call String.get_Chars, X0, X1
	149 NotImplemented "Instruction STRH not yet implemented."
	150 Move X0, 0xA26000
	151 Move X0, [X0+368]
	152 Call 0x1C17D08
	153 Add X1, X31, 8
	154 Move X19, 0xA70000
	155 Move X19, [X19+3776]
	156 Move X0, X19
	157 Call 0x1C17D08
	158 Call 0x19913D0
	159 Move X0, X19
	160 Call 0x1C17D08
	161 Move X8, [X0+184]
	162 Move X0, 0xA26000
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 NotImplemented "Instruction STRH not yet implemented."
	165 Move X0, [X0+368]
	166 Call 0x1C17D08
	167 Add X1, X31, 4
	168 Call 0x1C17E04
	169 Move X19, X0
	170 Move X0, 0xA70000
	171 Move X0, [X0+3784]
	172 Call 0x1C17D08
	173 Move X1, X19
	174 Move X2, X31
	175 Call SR.Format, X0, X1
	176 Move X19, X0
	177 Move X0, 0xA51000
	178 Move X0, [X0+3080]
	179 Call 0x1C17D08
	180 Call 0x1C17F10
	181 Move X1, X19
	182 Move X2, X31
	183 Move X20, X0
	184 Call FormatException..ctor, X0, X1
	185 Move X0, 0xA70000
	186 Move X0, [X0+3864]
	187 Call 0x1C17D08
	188 Move X1, X0
	189 Move X0, X20
	190 Call 0x1C17DEC

