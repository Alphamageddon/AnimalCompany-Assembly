Type: System.Net.LazyAsyncResult

Method: System.Net.LazyAsyncResult/ThreadContext get_CurrentThreadContext()

Disassembly:
	0x03687C88 MOV X1, X20
	0x03687C8C MOV X2, X31
	0x03687C90 MOV X19, X0
	0x03687C94 BL 0x33E67F0
	0x03687C98 CBZ X19, 0x3687CB0
	0x03687C9C MOV X0, X19
	0x03687CA0 LDP X20, X19, [X31 + 0x10]
	0x03687CA4 MOV X1, X31
	0x03687CA8 LDR X30, [X31], #0x20
	0x03687CAC B 0x33E6A6C
	0x03687CB0 BL 0x1C16F20
	0x03687CB4 SUB X31, X31, 0x80
	0x03687CB8 STP X29, X30, [X31 + 0x20]
	0x03687CBC STP X28, X27, [X31 + 0x30]
	0x03687CC0 STP X26, X25, [X31 + 0x40]
	0x03687CC4 STP X24, X23, [X31 + 0x50]
	0x03687CC8 STP X22, X21, [X31 + 0x60]
	0x03687CCC STP X20, X19, [X31 + 0x70]
	0x03687CD0 ADRP X19, 0xD59000
	0x03687CD4 LDRB W8, [X19 + 0x820]
	0x03687CD8 TBNZ X8, 0x0, 0x3687D5C
	0x03687CDC ADRP X0, 0xAB7000
	0x03687CE0 LDR X0, [X0 + 0x260]
	0x03687CE4 BL 0x1C16CF4
	0x03687CE8 ADRP X0, 0xAB7000
	0x03687CEC LDR X0, [X0 + 0x268]
	0x03687CF0 BL 0x1C16CF4
	0x03687CF4 ADRP X0, 0xAB7000
	0x03687CF8 LDR X0, [X0 + 0x270]
	0x03687CFC BL 0x1C16CF4
	0x03687D00 ADRP X0, 0xAB7000
	0x03687D04 LDR X0, [X0 + 0x278]
	0x03687D08 BL 0x1C16CF4
	0x03687D0C ADRP X0, 0xAB7000
	0x03687D10 LDR X0, [X0 + 0x280]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD5A000
	005 Move X20, 0xAB7000
	006 Move W8, [X19+2067]
	007 Move X20, [X20+2904]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xAB7000
	013 Move X0, [X0+2904]
	014 Call 0x1C17CF4
	015 Move X0, 0xAB8000
	016 Move X0, [X0+528]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2067], W8
	020 Move X0, [X20]
	021 Call 0x1C17D0C
	022 Move X19, [X0]
	023 Compare X19, 0
	024 JumpIfNotEqual {37}
	025 Move X8, 0xAB8000
	026 Move X8, [X8+528]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call Object..ctor, X0
	032 Move X0, [X20]
	033 Call 0x1C17D0C
	034 Move [X0], X19
	035 Move X0, [X20]
	036 Call 0x1C17D0C
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Void .ctor(System.Object myObject, System.Object myState, System.AsyncCallback myCallBack)

Disassembly:
	0x0367B54C B.NE 0x367B568
	0x0367B550 MOV X0, X21
	0x0367B554 BL 0x3EB1AD0
	0x0367B558 LDR X22, [X0]
	0x0367B55C BL 0x3EB1AE0
	0x0367B560 MOV W23, W31
	0x0367B564 B 0x367B344
	0x0367B568 MOV X22, X31
	0x0367B56C B 0x367B574
	0x0367B570 MOV X21, X0
	0x0367B574 LDRB W8, [X31 + 0x2C]
	0x0367B578 CBZ W8, 0x367B588
	0x0367B57C MOV X0, X20
	0x0367B580 MOV X1, X31
	0x0367B584 BL 0x33E14E4
	0x0367B588 CBNZ X22, 0x367B594
	0x0367B58C MOV X0, X21
	0x0367B590 BL 0x1D2C690
	0x0367B594 MOV X0, X22
	0x0367B598 BL 0x1C16F18
	0x0367B59C BL 0x1990590
	0x0367B5A0 MOV X5, X4
	0x0367B5A4 MOV W4, W3
	0x0367B5A8 MOV X3, X2
	0x0367B5AC MOV X2, X31
	0x0367B5B0 B 0x367FDC4
	0x0367B5B4 MOVZ W8, 0x10
	0x0367B5B8 MOV X3, X31
	0x0367B5BC STR W8, [X0 + 0x8C]
	0x0367B5C0 B 0x337DF40
	0x0367B5C4 STR W1, [X0 + 0x38]
	0x0367B5C8 STR X2, [X0 + 0x40]
	0x0367B5CC STR X3, [X0 + 0x68]
	0x0367B5D0 RET
	0x0367B5D4 LDRB W8, [X0 + 0x88]
	0x0367B5D8 CBZ W8, 0x367B5E0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD66000
	009 Move X23, 0xAAC000
	010 Move W8, [X24+2068]
	011 Move X23, [X23+1336]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xAAC000
	021 Move X0, [X0+1336]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2068], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move [X19+16], X22
	029 Move [X19+24], X21
	030 Move [X19+32], X20
	031 Move X0, [X23]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X23]
	037 Move X8, [X0+184]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X8, [X8]
	043 Move [X19+40], X8
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+64]
	047 Return 

Method: System.Object get_AsyncObject()

Disassembly:
	0x03687D1C LDR X0, [X0 + 0x288]
	0x03687D20 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Object get_AsyncState()

Disassembly:
	0x03687D24 ADRP X0, 0xA6C000
	0x03687D28 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.AsyncCallback get_AsyncCallback()

Disassembly:
	0x03687D2C BL 0x1C16CF4
	0x03687D30 ADRP X0, 0xAB6000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Threading.WaitHandle get_AsyncWaitHandle()

Disassembly:
	0x03687D34 LDR X0, [X0 + 0xD60]
	0x03687D38 BL 0x1C16CF4
	0x03687D3C ADRP X0, 0xAB6000
	0x03687D40 LDR X0, [X0 + 0xD38]
	0x03687D44 BL 0x1C16CF4
	0x03687D48 ADRP X0, 0xAA6000
	0x03687D4C LDR X0, [X0 + 0x268]
	0x03687D50 BL 0x1C16CF4
	0x03687D54 MOVZ W8, 0x1
	0x03687D58 STRB W8, [X19 + 0x820]
	0x03687D5C MOV X0, X31
	0x03687D60 STRB W31, [X31 + 0x18]
	0x03687D64 STR W31, [X31 + 0x14]
	0x03687D68 BL 0x33E3C68
	0x03687D6C CBZ X0, 0x36883CC
	0x03687D70 ADRP X24, 0xAB6000
	0x03687D74 LDR X24, [X24 + 0xD38]
	0x03687D78 MOVZ W1, 0x1
	0x03687D7C MOV X2, X31
	0x03687D80 BL 0x33E7018
	0x03687D84 LDR X0, [X24]
	0x03687D88 LDR W8, [X0 + 0xE0]
	0x03687D8C CBNZ W8, 0x3687D98
	0x03687D90 BL 0x1C16DFC
	0x03687D94 LDR X0, [X24]
	0x03687D98 LDR X8, [X0 + 0xB8]
	0x03687D9C LDR X0, [X8]
	0x03687DA0 STRB W31, [X31 + 0x1C]
	0x03687DA4 ADD X1, X31, 0x1C
	0x03687DA8 MOV X2, X31
	0x03687DAC STR X0, [X31 + 0x8]
	0x03687DB0 BL 0x33DE64C
	0x03687DB4 LDR X0, [X24]
	0x03687DB8 LDR W8, [X0 + 0xE0]
	0x03687DBC CBNZ W8, 0x3687DC8
	0x03687DC0 BL 0x1C16DFC
	0x03687DC4 LDR X0, [X24]
	0x03687DC8 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD5A000
	005 Move W8, [X20+2069]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA9E000
	012 Move X0, [X0+1992]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2069], W8
	016 Move X0, X19
	017 Add X0, X0, 48
	018 Move W8, [X0]
	019 Move W9, 1
	020 Move [X0+5], W9
	021 Compare W8, 0
	022 JumpIfNotEqual {27}
	023 Move W1, 0x80000000
	024 Move W2, W31
	025 Move X3, X31
	026 Call Interlocked.CompareExchange, X0, X1, X2
	027 Move X0, [X19+56]
	028 Compare X0, 0
	029 JumpIfEqual {36}
	030 Move X8, 0xA9E000
	031 Move X8, [X8+1992]
	032 Move X1, [X8]
	033 Move X8, [X0]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Call 0x1C181E0
	036 Move [X31+8], X0
	037 Add X1, X31, 8
	038 Move X0, X19
	039 Call LazyAsyncResult.LazilyCreateEvent, X0, X1
	040 Move X0, [X31+8]
	041 Compare X0, 0
	042 JumpIfEqual {37}
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return X0

Method: System.Boolean LazilyCreateEvent(out System.Threading.ManualResetEvent waitHandle)

Disassembly:
	0x03687DCC ADD X0, X8, 0x10
	0x03687DD0 MOVZ W1, 0x1
	0x03687DD4 MOVZ W2, 0x1
	0x03687DD8 MOV X3, X31
	0x03687DDC BL 0x33E7AB4
	0x03687DE0 CMP W0, 0x1
	0x03687DE4 B.NE 0x368836C
	0x03687DE8 ADRP X26, 0xAA6000
	0x03687DEC ADRP X27, 0xAB6000
	0x03687DF0 ADRP X28, 0xAB7000
	0x03687DF4 ADRP X29, 0xAB7000
	0x03687DF8 ADRP X20, 0xAB7000
	0x03687DFC LDR X26, [X26 + 0x268]
	0x03687E00 LDR X27, [X27 + 0xD60]
	0x03687E04 LDR X28, [X28 + 0x260]
	0x03687E08 LDR X29, [X29 + 0x278]
	0x03687E0C LDR X20, [X20 + 0x270]
	0x03687E10 LDR X0, [X24]
	0x03687E14 LDR W8, [X0 + 0xE0]
	0x03687E18 CBNZ W8, 0x3687E24
	0x03687E1C BL 0x1C16DFC
	0x03687E20 LDR X0, [X24]
	0x03687E24 LDR X8, [X0 + 0xB8]
	0x03687E28 LDR X0, [X8 + 0x18]
	0x03687E2C CBZ X0, 0x3688290
	0x03687E30 MOV X1, X31
	0x03687E34 BL 0x33E207C
	0x03687E38 LDR X8, [X24]
	0x03687E3C LDR W9, [X8 + 0xE0]
	0x03687E40 CBNZ W9, 0x3687E50
	0x03687E44 MOV X0, X8
	0x03687E48 BL 0x1C16DFC
	0x03687E4C LDR X8, [X24]
	0x03687E50 LDR X9, [X8 + 0xB8]
	0x03687E54 LDR X10, [X9 + 0x8]
	0x03687E58 CBZ X10, 0x368826C
	0x03687E5C LDR W10, [X10 + 0x18]
	0x03687E60 CMP W10, 0x1
	0x03687E64 B.LT 0x3687F44
	0x03687E68 LDR W10, [X8 + 0xE0]
	0x03687E6C CBNZ W10, 0x3687E80
	0x03687E70 MOV X0, X8
	0x03687E74 BL 0x1C16DFC
	0x03687E78 LDR X8, [X24]
	0x03687E7C LDR X9, [X8 + 0xB8]
	0x03687E80 LDR X21, [X9 + 0x8]
	0x03687E84 STRB W31, [X31 + 0x18]
	0x03687E88 ADD X1, X31, 0x18
	0x03687E8C MOV X0, X21
	0x03687E90 MOV X2, X31
	0x03687E94 BL 0x33DE64C
	0x03687E98 LDR X0, [X24]
	0x03687E9C LDR W8, [X0 + 0xE0]
	0x03687EA0 CBNZ W8, 0x3687EAC
	0x03687EA4 BL 0x1C16DFC
	0x03687EA8 LDR X0, [X24]
	0x03687EAC LDR X8, [X0 + 0xB8]
	0x03687EB0 LDR X8, [X8 + 0x8]
	0x03687EB4 CBZ X8, 0x36881E4
	0x03687EB8 LDR X22, [X8 + 0x10]
	0x03687EBC CBZ X22, 0x3687F1C
	0x03687EC0 LDR W8, [X0 + 0xE0]
	0x03687EC4 CBNZ W8, 0x3687ED0
	0x03687EC8 BL 0x1C16DFC
	0x03687ECC LDR X0, [X24]
	0x03687ED0 LDR X8, [X0 + 0xB8]
	0x03687ED4 LDR X0, [X8 + 0x8]
	0x03687ED8 CBZ X0, 0x36881D4
	0x03687EDC LDR X2, [X29]
	0x03687EE0 MOV X1, X22
	0x03687EE4 BL 0x2EED4A4
	0x03687EE8 LDR X8, [X24]
	0x03687EEC LDR X8, [X8 + 0xB8]
	0x03687EF0 LDR X0, [X8]
	0x03687EF4 CBZ X0, 0x36881DC
	0x03687EF8 LDR X2, [X20]
	0x03687EFC MOV X1, X22
	0x03687F00 BL 0x2EED060
	0x03687F04 LDR X0, [X24]
	0x03687F08 LDR X8, [X0 + 0xB8]
	0x03687F0C LDR X8, [X8 + 0x8]
	0x03687F10 CBNZ X8, 0x3687EB8
	0x03687F14 BL 0x1C16F20
	0x03687F18 B 0x3688400
	0x03687F1C MOVZ W19, 0x7
	0x03687F20 LDRB W8, [X31 + 0x18]
	0x03687F24 CBZ W8, 0x3687F34
	0x03687F28 MOV X0, X21
	0x03687F2C MOV X1, X31
	0x03687F30 BL 0x33E14E4
	0x03687F34 CBNZ X22, 0x368827C
	0x03687F38 CMP W19, 0x7
	0x03687F3C B.EQ 0x3687F44
	0x03687F40 CBNZ W19, 0x368836C
	0x03687F44 MOV X0, X31
	0x03687F48 BL 0x33C18F4
	0x03687F4C MOV W21, W0
	0x03687F50 LDR X0, [X24]
	0x03687F54 LDR W8, [X0 + 0xE0]
	0x03687F58 CBNZ W8, 0x3687F64
	0x03687F5C BL 0x1C16DFC
	0x03687F60 LDR X0, [X24]
	0x03687F64 LDR X8, [X0 + 0xB8]
	0x03687F68 LDR X8, [X8]
	0x03687F6C CBZ X8, 0x3688274
	0x03687F70 LDR X22, [X8 + 0x10]
	0x03687F74 MOV W25, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xD5A000
	008 Move X23, 0xA9E000
	009 Move W8, [X20+2070]
	010 Move X23, [X23+1992]
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xA9E000
	018 Move X0, [X0+1992]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2070], W8
	022 Move X0, [X23]
	023 Call 0x1C17F10
	024 Move W1, W31
	025 Move X2, X31
	026 Move X22, X0
	027 Call ManualResetEvent..ctor, X0, X1
	028 Add X20, X21, 56
	029 Move [X19], X22
	030 Move X0, X20
	031 Move X1, X22
	032 Move X2, X31
	033 Move X3, X31
	034 Call Interlocked.CompareExchange, X0, X1, X2
	035 Compare X0, 0
	036 JumpIfEqual {55}
	037 Move X0, [X19]
	038 Compare X0, 0
	039 JumpIfEqual {71}
	040 Move X8, [X0]
	041 Move X1, [X8+528]
	042 Move X9, [X8+520]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X0, [X20]
	045 Compare X0, 0
	046 JumpIfEqual {63}
	047 Move X1, [X23]
	048 Move X8, [X0]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X19], X0
	051 Move X1, [X23]
	052 Move X8, [X0]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W0, W31
	055 Move W8, [X21+48]
	056 And W31, W8, 0x7FFFFFFF
	057 Move X0, [X19]
	058 Compare X0, 0
	059 JumpIfEqual {74}
	060 Move X1, X31
	061 Call EventWaitHandle.Set, X0
	062 Move W0, 1
	063 Move [X19], X31
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return X0
	071 Call 0x1C17F20
	072 Call 0x1C181E0
	073 Call 0x1C181E0
	074 Call 0x1C17F20
	075 Move X21, X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, X21
	078 Call 0x3EB2AD0
	079 Move X21, X0
	080 Move X0, 0xA73000
	081 Move X0, [X0+3264]
	082 Call 0x1C17D08
	083 Move X8, [X21]
	084 Move X1, [X8]
	085 Call 0x1C18270
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {102}
	090 Move X21, [X21]
	091 Call 0x3EB2AE0
	092 Move [X20], X31
	093 Move X0, [X19]
	094 Compare X0, 0
	095 JumpIfEqual {100}
	096 Move X8, [X0]
	097 Move X9, [X8+520]
	098 Move X1, [X8+528]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X0, X21
	101 Call 0x1C17F18
	102 Move W0, 8
	103 Call 0x3EB2AF0
	104 Move X8, [X21]
	105 Move [X0], X8
	106 Move X1, 0x82E000
	107 Add X1, X1, 3672
	108 Move X2, X31
	109 Call 0x3EB2B00
	110 Move X21, X0
	111 Call 0x3EB2AE0
	112 Move X0, X21
	113 Call 0x1D2D690
	114 Call 0x1991590

Method: System.Boolean get_CompletedSynchronously()

Disassembly:
	0x03687F78 MOV W19, W31
	0x03687F7C CBZ X22, 0x3688074
	0x03687F80 LDR X0, [X22 + 0x28]
	0x03687F84 CBZ X0, 0x3688224
	0x03687F88 LDR X8, [X0]
	0x03687F8C LDP X9, X1, [X8 + 0x198]
	0x03687F90 BLR X9
	0x03687F94 CBNZ X0, 0x3687FDC
	0x03687F98 LDR X1, [X28]
	0x03687F9C MOV X0, X22
	0x03687FA0 BL 0x2EEA710
	0x03687FA4 MOV X23, X0

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 48
	003 Move W8, [X0]
	004 Compare W8, 0
	005 JumpIfNotEqual {11}
	006 Move W1, 0x80000000
	007 Move W2, W31
	008 Move X3, X31
	009 Call Interlocked.CompareExchange, X0, X1, X2
	010 Move W8, W0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Move X30, [X31+16]
	014 Return X0

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x03687FA8 LDR X0, [X24]
	0x03687FAC LDR W8, [X0 + 0xE0]
	0x03687FB0 CBNZ W8, 0x3687FBC
	0x03687FB4 BL 0x1C16DFC
	0x03687FB8 LDR X0, [X24]
	0x03687FBC LDR X8, [X0 + 0xB8]
	0x03687FC0 LDR X0, [X8]
	0x03687FC4 CBZ X0, 0x368822C
	0x03687FC8 LDR X2, [X29]
	0x03687FCC MOV X1, X22
	0x03687FD0 BL 0x2EED4A4
	0x03687FD4 MOV X22, X23

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 48
	003 Move W8, [X0]
	004 Compare W8, 0
	005 JumpIfNotEqual {11}
	006 Move W1, 0x80000000
	007 Move W2, W31
	008 Move X3, X31
	009 Call Interlocked.CompareExchange, X0, X1, X2
	010 Move W8, W0
	011 And W31, W8, 0x7FFFFFFF
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Move X30, [X31+16]
	014 Return X0

Method: System.Boolean get_InternalPeekCompleted()

Disassembly:
	0x03679424 LDP X9, X1, [X8 + 0x1C8]
	0x03679428 MOV X0, X20
	0x0367942C BLR X9
	0x03679430 TBZ X0, 0x0, 0x3679464

ISIL:
	001 Move W8, [X0+48]
	002 And W31, W8, 0x7FFFFFFF
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_EndCalled()

Disassembly:
	0x03687FD8 B 0x3687F7C
	0x03687FDC LDR X8, [X0]

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Void set_EndCalled(System.Boolean value)

Disassembly:
	0x03687FE0 LDR X1, [X27]
	0x03687FE4 LDRB W10, [X8 + 0x130]
	0x03687FE8 LDRB W9, [X1 + 0x130]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+52], W8
	003 Return 

Method: System.Void ProtectedInvokeCallback(System.Object result, System.IntPtr userToken)

Disassembly:
	0x03687FEC CMP W10, W9
	0x03687FF0 B.CC 0x3688264
	0x03687FF4 LDR X8, [X8 + 0xC8]
	0x03687FF8 ADD X8, X8, X9, 0x3, LSL
	0x03687FFC LDUR X8, [X8 - 0x8]
	0x03688000 CMP X8, X1
	0x03688004 B.NE 0x3688264
	0x03688008 ADD X1, X31, 0x14
	0x0368800C BL 0x3688480
	0x03688010 TBZ X0, 0x0, 0x3688060
	0x03688014 LDR W23, [X31 + 0x14]
	0x03688018 TBZ X25, 0x0, 0x3688050
	0x0368801C LDR X0, [X24]
	0x03688020 LDR W8, [X0 + 0xE0]
	0x03688024 CBNZ W8, 0x368802C
	0x03688028 BL 0x1C16DFC
	0x0368802C CMP W21, W23
	0x03688030 CSET W8, GT
	0x03688034 CMP W19, W23
	0x03688038 CSET W9, LE
	0x0368803C CMP W21, W19
	0x03688040 EOR W8, W8, W9, 0x0
	0x03688044 CSET W9, LE
	0x03688048 EOR W8, W9, W8, 0x0
	0x0368804C TBZ X8, 0x0, 0x368805C
	0x03688050 MOVZ W25, 0x1
	0x03688054 MOV W19, W23
	0x03688058 B 0x3688060
	0x0368805C MOVZ W25, 0x1
	0x03688060 LDR X1, [X28]
	0x03688064 MOV X0, X22
	0x03688068 BL 0x2EEA710
	0x0368806C MOV X22, X0
	0x03688070 B 0x3687F7C
	0x03688074 MOV X0, X31
	0x03688078 BL 0x33C18F4
	0x0368807C TBZ X25, 0x0, 0x36880E8
	0x03688080 MOV W22, W0
	0x03688084 LDR X0, [X24]
	0x03688088 LDR W8, [X0 + 0xE0]
	0x0368808C CBNZ W8, 0x3688094
	0x03688090 BL 0x1C16DFC
	0x03688094 CMP W21, W22
	0x03688098 CSET W8, GT
	0x0368809C SUBS W22, W19, W22
	0x036880A0 CSET W9, LE
	0x036880A4 CMP W21, W19
	0x036880A8 EOR W8, W8, W9, 0x0
	0x036880AC CSET W9, LE
	0x036880B0 EOR W8, W9, W8, 0x0
	0x036880B4 TBZ X8, 0x0, 0x36880F0
	0x036880B8 ADRP X8, 0xA6B000
	0x036880BC LDR X8, [X8 + 0x5A8]
	0x036880C0 LDR X0, [X8]
	0x036880C4 LDR W8, [X0 + 0xE0]
	0x036880C8 CBNZ W8, 0x36880D0
	0x036880CC BL 0x1C16DFC
	0x036880D0 ORR W1, W31, 0x7FFFFFF0
	0x036880D4 MOV W0, W22
	0x036880D8 MOV X2, X31
	0x036880DC BL 0x337EEEC
	0x036880E0 ADD W21, W0, 0xF
	0x036880E4 B 0x36880F4
	0x036880E8 MOVZ W21, 0x7530
	0x036880EC B 0x36880F4
	0x036880F0 MOV W21, W31
	0x036880F4 LDR X0, [X24]
	0x036880F8 LDR W8, [X0 + 0xE0]
	0x036880FC CBNZ W8, 0x3688108
	0x03688100 BL 0x1C16DFC
	0x03688104 LDR X0, [X24]
	0x03688108 LDR X8, [X26]
	0x0368810C LDR X9, [X0 + 0xB8]
	0x03688110 LDR W10, [X8 + 0xE0]
	0x03688114 LDR X22, [X9 + 0x28]
	0x03688118 CBNZ W10, 0x3688124
	0x0368811C MOV X0, X8
	0x03688120 BL 0x1C16DFC
	0x03688124 MOV X0, X22
	0x03688128 MOV W1, W21
	0x0368812C MOV W2, W31
	0x03688130 MOV X3, X31
	0x03688134 BL 0x33EA75C
	0x03688138 CBZ W0, 0x368836C
	0x0368813C CMP W0, 0x102
	0x03688140 CSET W8, NE
	0x03688144 ORR W8, W25, W8, 0x0
	0x03688148 TBNZ X8, 0x0, 0x3687E38
	0x0368814C LDR X0, [X24]
	0x03688150 LDR W8, [X0 + 0xE0]
	0x03688154 CBNZ W8, 0x3688160
	0x03688158 BL 0x1C16DFC
	0x0368815C LDR X0, [X24]
	0x03688160 LDR X8, [X0 + 0xB8]
	0x03688164 ADD X0, X8, 0x10
	0x03688168 MOVZ W2, 0x1
	0x0368816C MOV W1, W31
	0x03688170 MOV X3, X31
	0x03688174 BL 0x33E7AB4
	0x03688178 LDR X8, [X24]
	0x0368817C LDR X8, [X8 + 0xB8]
	0x03688180 LDR X0, [X8 + 0x18]
	0x03688184 CBZ X0, 0x3688288
	0x03688188 LDR X8, [X0]
	0x0368818C LDP X9, X3, [X8 + 0x1B8]
	0x03688190 MOV W1, W31
	0x03688194 MOV W2, W31
	0x03688198 BLR X9
	0x0368819C TBZ X0, 0x0, 0x368836C
	0x036881A0 LDR X0, [X24]
	0x036881A4 LDR W8, [X0 + 0xE0]
	0x036881A8 CBNZ W8, 0x36881B4
	0x036881AC BL 0x1C16DFC
	0x036881B0 LDR X0, [X24]
	0x036881B4 LDR X8, [X0 + 0xB8]
	0x036881B8 ADD X0, X8, 0x10
	0x036881BC MOVZ W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD5A000
	008 Move X22, 0xAA0000
	009 Move W8, [X23+2071]
	010 Call 0x3EB2914
	011 Return 
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA9F000
	020 Move X0, [X0+1336]
	021 Call 0x1C17CF4
	022 Move X0, 0xA9D000
	023 Move X0, [X0+1992]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2071], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X22]
	033 Move X8, [X0+184]
	034 Move X8, [X8]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X20
	037 Add X0, X0, 48
	038 Move W8, [X0]
	039 And W31, W8, 0x7FFFFFFF
	040 Move X1, X31
	041 Call Interlocked.Increment, X0
	042 And W8, W0, 0x7FFFFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move X23, [X20+40]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X8, [X0+184]
	052 Move X8, [X8]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X20+40], X21
	055 Move X0, [X20+56]
	056 Compare X0, 0
	057 JumpIfEqual {65}
	058 Move X8, 0xA9D000
	059 Move X8, [X8+1992]
	060 Move X1, [X8]
	061 Move X8, [X0]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X1, X31
	064 Call EventWaitHandle.Set, X0
	065 Move X8, [X20]
	066 Move X0, X20
	067 Move X1, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X3, [X8+440]
	071 Move X2, [X8+448]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 CallNoReturn X3
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Return 
	084 Move X0, 0xA71000
	085 Move X0, [X0+1320]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0xAB7000
	090 Move X0, [X0+536]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call ArgumentNullException..ctor, X0, X1
	096 Move X0, 0xAB7000
	097 Move X0, [X0+544]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC
	102 Call 0x1C181E0
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X21, X0
	105 Move X0, X21
	106 Call 0x3EB2AD0
	107 Move X21, X0
	108 Move X0, 0xA95000
	109 Move X0, [X0+1208]
	110 Call 0x1C17D08
	111 Move X8, [X21]
	112 Move X1, [X8]
	113 Call 0x1C18270
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {119}
	118 Call 0x3EB2AE0
	119 Move W0, 8
	120 Call 0x3EB2AF0
	121 Move X8, [X21]
	122 Move [X0], X8
	123 Move X1, 0x82D000
	124 Add X1, X1, 3672
	125 Move X2, X31
	126 Call 0x3EB2B00
	127 Move X21, X0
	128 Call 0x3EB2AE0
	129 Move X0, X21
	130 Call 0x1D2D690
	131 Call 0x1991590

Method: System.Void InvokeCallback(System.Object result)

Disassembly:
	0x03678FCC LDR X0, [X25]
	0x03678FD0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X2, X31
	002 Call LazyAsyncResult.ProtectedInvokeCallback, X0, X1, X2
	003 Return 

Method: System.Void InvokeCallback()

Disassembly:
	0x03679434 LDR X8, [X20]
	0x03679438 LDR W1, [X19 + 0xD8]
	0x0367943C LDR X9, [X8 + 0x248]

ISIL:
	001 Move X1, X31
	002 Move X2, X31
	003 Call LazyAsyncResult.ProtectedInvokeCallback, X0, X1, X2
	004 Return 

Method: System.Void Complete(System.IntPtr userToken)

Disassembly:
	0x036881C0 MOV W2, W31
	0x036881C4 MOV X3, X31
	0x036881C8 BL 0x33E7AB4
	0x036881CC CBZ W0, 0x3687E38
	0x036881D0 B 0x368836C
	0x036881D4 BL 0x1C16F20
	0x036881D8 B 0x3688400
	0x036881DC BL 0x1C16F20
	0x036881E0 B 0x3688400
	0x036881E4 BL 0x1C16F20
	0x036881E8 B 0x3688400
	0x036881EC B 0x3688208
	0x036881F0 B 0x3688208
	0x036881F4 B 0x3688208
	0x036881F8 B 0x3688208
	0x036881FC B 0x3688208
	0x03688200 B 0x3688208
	0x03688204 B 0x3688208
	0x03688208 CMP W1, 0x1
	0x0368820C B.NE 0x3688234
	0x03688210 BL 0x3EB1AD0
	0x03688214 LDR X22, [X0]
	0x03688218 BL 0x3EB1AE0
	0x0368821C MOV W19, W31
	0x03688220 B 0x3687F20
	0x03688224 BL 0x1C16F20
	0x03688228 B 0x3688400
	0x0368822C BL 0x1C16F20
	0x03688230 B 0x3688400
	0x03688234 STR X1, [X31]
	0x03688238 MOV X23, X0
	0x0368823C MOV X22, X31
	0x03688240 LDRB W8, [X31 + 0x18]
	0x03688244 CBZ W8, 0x3688254
	0x03688248 MOV X0, X21
	0x0368824C MOV X1, X31
	0x03688250 BL 0x33E14E4
	0x03688254 LDR X1, [X31]
	0x03688258 MOV X0, X23
	0x0368825C CBZ X22, 0x3688310
	0x03688260 B 0x3688400
	0x03688264 BL 0x1C171E0
	0x03688268 B 0x3688408
	0x0368826C BL 0x1C16F20
	0x03688270 B 0x3688400
	0x03688274 BL 0x1C16F20
	0x03688278 B 0x3688400
	0x0368827C MOV X0, X22
	0x03688280 BL 0x1C16F18
	0x03688284 B 0x3688408
	0x03688288 BL 0x1C16F20
	0x0368828C B 0x3688408
	0x03688290 BL 0x1C16F20
	0x03688294 B 0x3688400
	0x03688298 MOV X23, X0
	0x0368829C STR X1, [X31]
	0x036882A0 B 0x3688240
	0x036882A4 B 0x3688310
	0x036882A8 B 0x3688310
	0x036882AC B 0x3688310
	0x036882B0 B 0x3688310
	0x036882B4 B 0x3688310
	0x036882B8 B 0x3688310
	0x036882BC B 0x3688310
	0x036882C0 B 0x3688310
	0x036882C4 B 0x3688310
	0x036882C8 B 0x3688310
	0x036882CC B 0x3688310
	0x036882D0 B 0x3688310
	0x036882D4 B 0x3688310
	0x036882D8 B 0x3688310
	0x036882DC B 0x3688310
	0x036882E0 B 0x3688310
	0x036882E4 B 0x3688310
	0x036882E8 B 0x3688310
	0x036882EC B 0x3688310
	0x036882F0 B 0x3688310
	0x036882F4 B 0x3688310
	0x036882F8 B 0x3688310
	0x036882FC B 0x3688310
	0x03688300 B 0x3688310
	0x03688304 B 0x3688310
	0x03688308 B 0x3688310
	0x0368830C B 0x3688310
	0x03688310 CMP W1, 0x1
	0x03688314 MOVZ W19, 0x1
	0x03688318 B.NE 0x36883A8
	0x0368831C BL 0x3EB1AD0
	0x03688320 MOV X21, X0
	0x03688324 ADRP X0, 0xA6B000
	0x03688328 LDR X0, [X0 + 0x7D0]
	0x0368832C BL 0x1C16D08
	0x03688330 LDR X8, [X21]
	0x03688334 LDR X1, [X8]
	0x03688338 BL 0x1C17270
	0x0368833C TBZ X0, 0x0, 0x36883D8
	0x03688340 LDR X21, [X21]
	0x03688344 BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD59000
	007 Move W8, [X20+2072]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xAB7000
	014 Move X0, [X0+552]
	015 Call 0x1C17CF4
	016 Move X0, 0xA75000
	017 Move X0, [X0+2392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2072], W8
	021 Call LazyAsyncResult.get_CurrentThreadContext
	022 Move X20, X0
	023 Compare X0, 0
	024 JumpIfEqual {76}
	025 Move X22, X20
	026 Add X22, X22, 16
	027 Move W8, [X22]
	028 Add W8, W8, 1
	029 Move [X22], W8
	030 Move X9, [X19+32]
	031 Compare X9, 0
	032 JumpIfEqual {41}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X9+64]
	035 Move X8, [X9+24]
	036 Move X2, [X9+40]
	037 Move X1, X19
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X21, X31
	040 Move W8, [X22]
	041 Move X21, X31
	042 Subtract W8, W8, 1
	043 Move [X22], W8
	044 Move X8, [X19]
	045 Move X0, X19
	046 Move X9, [X8+456]
	047 Move X1, [X8+464]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X21, 0
	050 JumpIfEqual {70}
	051 Move X0, X21
	052 Call 0x1C17F18
	053 Move X8, 0xA75000
	054 Move X8, [X8+2392]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X8, 0xAB7000
	058 Move X8, [X8+552]
	059 Move X21, X0
	060 Move X2, [X8]
	061 Move X1, X19
	062 Move X3, X31
	063 Call WaitCallback..ctor, X0, X1, X2
	064 Move X0, X21
	065 Move X1, X31
	066 Call ThreadPool.QueueUserWorkItem, X0
	067 Move W8, [X22]
	068 Subtract W8, W8, 1
	069 Move [X22], W8
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 
	076 Call 0x1C17F20
	077 Move X22, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X22
	080 Call 0x3EB2AD0
	081 Move X21, [X0]
	082 Call 0x3EB2AE0
	083 Compare X20, 0
	084 JumpIfEqual {87}
	085 Add X22, X20, 16
	086 Move X21, X31
	087 Call 0x1C17F20
	088 Move X22, X0
	089 Compare X20, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17F20
	092 Move W8, [X20+16]
	093 Subtract W8, W8, 1
	094 Move [X20+16], W8
	095 Move X8, [X19]
	096 Move X9, [X8+456]
	097 Move X1, [X8+464]
	098 Move X0, X19
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Compare X21, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X22
	103 Call 0x1D2D690
	104 Move X0, X21
	105 Call 0x1C17F18
	106 Call 0x1991590

Method: System.Void WorkerThreadComplete(System.Object state)

Disassembly:
	0x03688348 MOV X0, X21
	0x0368834C BL 0x367E11C
	0x03688350 TBNZ X0, 0x0, 0x36883F8
	0x03688354 MOV X0, X31
	0x03688358 BL 0x3692290
	0x0368835C MOVZ W0, 0x3E8
	0x03688360 MOV X1, X31
	0x03688364 BL 0x33E3BEC
	0x03688368 B 0x3687E10
	0x0368836C MOV X21, X31
	0x03688370 LDRB W8, [X31 + 0x1C]
	0x03688374 CBZ W8, 0x3688384
	0x03688378 LDR X0, [X31 + 0x8]
	0x0368837C MOV X1, X31
	0x03688380 BL 0x33E14E4
	0x03688384 CBNZ X21, 0x36883D0
	0x03688388 LDP X20, X19, [X31 + 0x70]
	0x0368838C LDP X22, X21, [X31 + 0x60]
	0x03688390 LDP X24, X23, [X31 + 0x50]
	0x03688394 LDP X26, X25, [X31 + 0x40]
	0x03688398 LDP X28, X27, [X31 + 0x30]
	0x0368839C LDP X29, X30, [X31 + 0x20]
	0x036883A0 ADD X31, X31, 0x80
	0x036883A4 RET
	0x036883A8 MOV X21, X1
	0x036883AC MOV X20, X0
	0x036883B0 CMP W21, W19
	0x036883B4 B.NE 0x3688408
	0x036883B8 MOV X0, X20
	0x036883BC BL 0x3EB1AD0
	0x036883C0 LDR X21, [X0]
	0x036883C4 BL 0x3EB1AE0
	0x036883C8 B 0x3688370
	0x036883CC BL 0x1C16F20
	0x036883D0 MOV X0, X21
	0x036883D4 BL 0x1C16F18
	0x036883D8 MOVZ W0, 0x8
	0x036883DC BL 0x3EB1AF0
	0x036883E0 LDR X8, [X21]
	0x036883E4 STR X8, [X0]
	0x036883E8 ADRP X1, 0x82C000
	0x036883EC ADD X1, X1, 0xE58
	0x036883F0 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+32]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfEqual {27}
	009 Move X0, [X8+64]
	010 Move X9, [X8+24]
	011 Move X2, [X8+40]
	012 Move X1, X19
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X20, X31
	015 Move X8, [X19]
	016 Move X0, X19
	017 Move X9, [X8+456]
	018 Move X1, [X8+464]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X20, 0
	021 JumpIfNotEqual {28}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Call 0x1C17F20
	028 Move X0, X20
	029 Call 0x1C17F18
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X21, X0
	032 Move X0, X21
	033 Call 0x3EB2AD0
	034 Move X20, [X0]
	035 Call 0x3EB2AE0
	036 Move X20, X31
	037 Move X21, X0
	038 Move X8, [X19]
	039 Move X9, [X8+456]
	040 Move X1, [X8+464]
	041 Move X0, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X20, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X21
	046 Call 0x1D2D690
	047 Move X0, X20
	048 Call 0x1C17F18
	049 Call 0x1991590

Method: System.Void Cleanup()

Disassembly:
	0x036883F4 BL 0x3EB1B00

ISIL:
	001 Return 

Method: System.Object InternalWaitForCompletion()

Disassembly:
	0x03679D94 CMP W10, W9
	0x03679D98 B.CC 0x3679DB0

ISIL:
	001 Move W1, 1
	002 Call LazyAsyncResult.WaitForCompletion, X0, X1
	003 Return X0

Method: System.Object WaitForCompletion(System.Boolean snap)

Disassembly:
	0x036883F8 MOV X0, X21
	0x036883FC BL 0x1C16F18
	0x03688400 MOV X0, X22
	0x03688404 BL 0x1C16F18
	0x03688408 MOV X21, X31
	0x0368840C B 0x3688414
	0x03688410 MOV X20, X0
	0x03688414 LDRB W8, [X31 + 0x1C]
	0x03688418 CBZ W8, 0x3688428
	0x0368841C LDR X0, [X31 + 0x8]
	0x03688420 MOV X1, X31
	0x03688424 BL 0x33E14E4
	0x03688428 CBNZ X21, 0x3688434
	0x0368842C MOV X0, X20
	0x03688430 BL 0x1D2C690
	0x03688434 MOV X0, X21
	0x03688438 BL 0x1C16F18
	0x0368843C BL 0x1990590
	0x03688440 B 0x3688450
	0x03688444 B 0x3688458
	0x03688448 B 0x3688450
	0x0368844C B 0x3688450
	0x03688450 MOV X20, X0
	0x03688454 B 0x3688478
	0x03688458 MOV X20, X0
	0x0368845C MOV W21, W1
	0x03688460 BL 0x3EB1AE0
	0x03688464 B 0x36883B0
	0x03688468 BL 0x1990590
	0x0368846C B 0x3688470
	0x03688470 MOV X20, X0
	0x03688474 MOVZ W19, 0x1
	0x03688478 MOV W21, W1
	0x0368847C B 0x36883B0
	0x03688480 SUB X31, X31, 0x50
	0x03688484 STP X31, X30, [X31 + 0x8]
	0x03688488 STP X24, X23, [X31 + 0x20]
	0x0368848C STP X22, X21, [X31 + 0x30]
	0x03688490 STP X20, X19, [X31 + 0x40]
	0x03688494 MOV X19, X1
	0x03688498 MOV X20, X0
	0x0368849C STRB W31, [X31 + 0x1C]
	0x036884A0 LDR X22, [X20 + 0x20]
	0x036884A4 CBZ X22, 0x36885CC
	0x036884A8 LDR X21, [X22 + 0x38]
	0x036884AC CMP X21, X22
	0x036884B0 B.NE 0x368854C
	0x036884B4 STRB W31, [X31 + 0x1C]
	0x036884B8 ADD X1, X31, 0x1C
	0x036884BC MOV X0, X22
	0x036884C0 MOV X2, X31
	0x036884C4 BL 0x33DE64C
	0x036884C8 LDR X8, [X20 + 0x20]
	0x036884CC CBZ X8, 0x3688560
	0x036884D0 LDR X21, [X8 + 0x38]
	0x036884D4 CMP X21, X8
	0x036884D8 B.EQ 0x36884E8
	0x036884DC MOV X23, X31
	0x036884E0 MOVZ W24, 0x3
	0x036884E4 B 0x3688528
	0x036884E8 LDR X0, [X20 + 0x18]
	0x036884EC MOV X1, X31
	0x036884F0 MOV X2, X31
	0x036884F4 BL 0x33C5D2C
	0x036884F8 TBZ X0, 0x0, 0x368851C
	0x036884FC LDR X0, [X20 + 0x18]
	0x03688500 MOV X1, X31
	0x03688504 BL 0x32C083C
	0x03688508 STR X0, [X31 + 0x8]
	0x0368850C ADD X0, X31, 0x8
	0x03688510 MOV X1, X31
	0x03688514 BL 0x32C0794
	0x03688518 STR X31, [X20 + 0x18]
	0x0368851C MOV X23, X31
	0x03688520 STR W31, [X19]
	0x03688524 MOVZ W24, 0x6
	0x03688528 LDRB W8, [X31 + 0x1C]
	0x0368852C CBZ W8, 0x368853C
	0x03688530 MOV X0, X22
	0x03688534 MOV X1, X31
	0x03688538 BL 0x33E14E4
	0x0368853C CBNZ X23, 0x36885D0
	0x03688540 CMP W24, 0x3
	0x03688544 B.EQ 0x368854C
	0x03688548 CBNZ W24, 0x36885C4
	0x0368854C CBZ X21, 0x36885CC
	0x03688550 MOV X0, X21
	0x03688554 BL 0x3688A74
	0x03688558 TBNZ X0, 0x0, 0x36884A0
	0x0368855C B 0x368859C
	0x03688560 BL 0x1C16F20
	0x03688564 B 0x36885E0
	0x03688568 B 0x3688578
	0x0368856C B 0x3688578
	0x03688570 B 0x3688578
	0x03688574 B 0x3688578
	0x03688578 MOV X24, X0
	0x0368857C CMP W1, 0x1
	0x03688580 B.NE 0x36885D8
	0x03688584 MOV X0, X24
	0x03688588 BL 0x3EB1AD0
	0x0368858C LDR X23, [X0]
	0x03688590 BL 0x3EB1AE0
	0x03688594 MOV W24, W31
	0x03688598 B 0x3688528
	0x0368859C LDP W8, W9, [X21 + 0x10]
	0x036885A0 MOVZ W0, 0x1
	0x036885A4 ADD W8, W9, W8
	0x036885A8 STR W8, [X19]
	0x036885AC LDP X20, X19, [X31 + 0x40]
	0x036885B0 LDP X22, X21, [X31 + 0x30]
	0x036885B4 LDP X24, X23, [X31 + 0x20]
	0x036885B8 LDR X30, [X31 + 0x10]
	0x036885BC ADD X31, X31, 0x50
	0x036885C0 RET
	0x036885C4 MOV W0, W31
	0x036885C8 B 0x36885AC
	0x036885CC BL 0x1C16F20
	0x036885D0 MOV X0, X23
	0x036885D4 BL 0x1C16F18
	0x036885D8 MOV X23, X31
	0x036885DC B 0x36885E4
	0x036885E0 MOV X24, X0
	0x036885E4 LDRB W8, [X31 + 0x1C]
	0x036885E8 CBZ W8, 0x36885F8
	0x036885EC MOV X0, X22
	0x036885F0 MOV X1, X31
	0x036885F4 BL 0x33E14E4
	0x036885F8 CBNZ X23, 0x3688604
	0x036885FC MOV X0, X24
	0x03688600 BL 0x1D2C690
	0x03688604 MOV X0, X23
	0x03688608 BL 0x1C16F18
	0x0368860C BL 0x1990590
	0x03688610 CMP W0, W2
	0x03688614 CSET W8, GT
	0x03688618 CMP W1, W2
	0x0368861C CSET W9, LE
	0x03688620 CMP W0, W1
	0x03688624 EOR W8, W8, W9, 0x0
	0x03688628 CSET W9, LE
	0x0368862C EOR W0, W9, W8, 0x0
	0x03688630 RET
	0x03688634 STR X30, [X31 - 0x20]!
	0x03688638 STP X20, X19, [X31 + 0x10]
	0x0368863C ADRP X20, 0xD58000
	0x03688640 ADRP X19, 0xAB5000
	0x03688644 LDRB W8, [X20 + 0x821]
	0x03688648 LDR X19, [X19 + 0xD38]
	0x0368864C TBNZ X8, 0x0, 0x3688664
	0x03688650 ADRP X0, 0xAB5000
	0x03688654 LDR X0, [X0 + 0xD38]
	0x03688658 BL 0x1C16CF4
	0x0368865C MOVZ W8, 0x1
	0x03688660 STRB W8, [X20 + 0x821]
	0x03688664 LDR X0, [X19]
	0x03688668 LDR W8, [X0 + 0xE0]
	0x0368866C CBNZ W8, 0x3688678
	0x03688670 BL 0x1C16DFC
	0x03688674 LDR X0, [X19]
	0x03688678 LDR X8, [X0 + 0xB8]
	0x0368867C MOVZ W1, 0x2
	0x03688680 MOV X2, X31
	0x03688684 ADD X0, X8, 0x10
	0x03688688 BL 0x33E9064
	0x0368868C LDR X8, [X19]
	0x03688690 LDR X8, [X8 + 0xB8]
	0x03688694 LDR X0, [X8 + 0x20]
	0x03688698 CBZ X0, 0x36886AC
	0x0368869C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD59000
	007 Move W8, [X21+2073]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA9F000
	015 Move X0, [X0+1336]
	016 Call 0x1C17CF4
	017 Move X0, 0xA9D000
	018 Move X0, [X0+1992]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2073], W8
	022 Move X0, X19
	023 Add X0, X0, 48
	024 Move W8, [X0]
	025 Move TEMP, X20
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {36}
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move W1, 0x80000000
	032 Move W2, W31
	033 Move X3, X31
	034 Call Interlocked.CompareExchange, X0, X1, X2
	035 Move W8, W0
	036 And W31, W8, 0x7FFFFFFF
	037 Move X8, X31
	038 Move X8, [X19+56]
	039 Compare X8, 0
	040 JumpIfEqual {83}
	041 Move X9, 0xA9D000
	042 Move X9, [X9+1992]
	043 Move X1, [X9]
	044 Move X9, [X8]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W22, W31
	047 Compare X8, 0
	048 JumpIfEqual {169}
	049 Move X9, [X8]
	050 Move X10, [X9+440]
	051 Move X3, [X9+448]
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W1, TEMP
	055 Move X0, X8
	056 Move W2, W31
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X20, X31
	059 Move W21, 5
	060 Compare W22, 0
	061 JumpIfEqual {78}
	062 Move W8, [X19+53]
	063 Compare W8, 0
	064 JumpIfNotEqual {78}
	065 Move X0, [X19+56]
	066 Compare X0, 0
	067 JumpIfEqual {95}
	068 Move X8, 0xA9D000
	069 Move X8, [X8+1992]
	070 Move X1, [X8]
	071 Move X8, [X0]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X19+56], X31
	074 Move X8, [X0]
	075 Move X9, [X8+520]
	076 Move X1, [X8+528]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X20, 0
	079 JumpIfNotEqual {91}
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Compare W21, 0
	082 JumpIfEqual {166}
	083 Add X1, X31, 8
	084 Move X0, X19
	085 Move [X31+8], X31
	086 Call LazyAsyncResult.LazilyCreateEvent, X0, X1
	087 Move X8, [X31+8]
	088 And W22, W0, 1
	089 Compare X8, 0
	090 JumpIfNotEqual {49}
	091 Move X0, X20
	092 Call 0x1C17F18
	093 Move X0, X8
	094 Call 0x1C181E0
	095 Move [X19+56], X31
	096 Call 0x1C17F20
	097 Call 0x1C181E0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X21, X0
	100 Move X0, X21
	101 Call 0x3EB2AD0
	102 Move X20, X0
	103 Move X0, 0xA95000
	104 Move X0, [X0+1208]
	105 Call 0x1C17D08
	106 Move X8, [X20]
	107 Move X1, [X8]
	108 Call 0x1C18270
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {114}
	113 Call 0x3EB2AE0
	114 Move W0, 8
	115 Call 0x3EB2AF0
	116 Move X8, [X20]
	117 Move [X0], X8
	118 Move X1, 0x82D000
	119 Add X1, X1, 3672
	120 Move X2, X31
	121 Call 0x3EB2B00
	122 Move X21, X0
	123 Move X20, X1
	124 Move X21, X0
	125 Call 0x3EB2AE0
	126 Move W1, W20
	127 Move W8, 1
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X21
	130 Call 0x3EB2AD0
	131 Move X20, [X0]
	132 Call 0x3EB2AE0
	133 Move W21, W31
	134 Compare W22, 0
	135 JumpIfNotEqual {62}
	136 Move X20, X31
	137 Move X21, X0
	138 Compare W22, 0
	139 JumpIfEqual {158}
	140 Move W8, [X19+53]
	141 Compare W8, 0
	142 JumpIfNotEqual {158}
	143 Move X0, [X19+56]
	144 Compare X0, 0
	145 JumpIfNotEqual {148}
	146 Move [X19+56], X31
	147 Call 0x1C17F20
	148 Move X8, 0xA9D000
	149 Move X8, [X8+1992]
	150 Move X1, [X8]
	151 Move X8, [X0]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X19+56], X31
	154 Move X8, [X0]
	155 Move X1, [X8+528]
	156 Move X9, [X8+520]
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Compare X20, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X21
	161 Call 0x1D2D690
	162 Move X0, X20
	163 Call 0x1C17F18
	164 Call 0x1C181E0
	165 Call 0x1991590
	166 Move W0, 1
	167 Move X1, X31
	168 Call Thread.SpinWait, X0
	169 Move X21, 0xA9F000
	170 Move X21, [X21+1336]
	171 Move X20, [X19+40]
	172 Move X0, [X21]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {178}
	176 Call 0x1C17DFC
	177 Move X0, [X21]
	178 Move X8, [X0+184]
	179 Move X8, [X8]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, [X19+40]
	182 Move X20, [X31+32]
	183 Move X19, [X31+40]
	184 Move X22, [X31+16]
	185 Move X21, [X31+24]
	186 Move X30, [X31+48]
	187 Return X0

