Type: System.Net.NetworkCredential

Method: System.Void .ctor(System.String userName, System.String password)

Disassembly:
	0x0367886C LDR X21, [X21 + 0x28]
	0x03678870 LDR X0, [X0 + 0xD8]
	0x03678874 BL 0x1C16D08
	0x03678878 CBZ X21, 0x367892C
	0x0367887C LDR X8, [X21]
	0x03678880 LDRB W9, [X0 + 0x130]
	0x03678884 LDRB W10, [X8 + 0x130]
	0x03678888 CMP W10, W9
	0x0367888C B.CC 0x367892C
	0x03678890 LDR X8, [X8 + 0xC8]
	0x03678894 ADD X8, X8, X9, 0x3, LSL
	0x03678898 LDUR X8, [X8 - 0x8]
	0x0367889C CMP X8, X0
	0x036788A0 B.NE 0x367892C
	0x036788A4 MOV X0, X21
	0x036788A8 MOV X1, X31
	0x036788AC BL 0x36C8880
	0x036788B0 MOVZ W8, 0x274C
	0x036788B4 CMP W0, W8
	0x036788B8 B.NE 0x367892C
	0x036788BC ADRP X0, 0xAA6000
	0x036788C0 LDR X0, [X0 + 0x330]
	0x036788C4 BL 0x1C16D08
	0x036788C8 BL 0x1C16F10
	0x036788CC MOV X21, X0
	0x036788D0 ADRP X0, 0xAA6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD69000
	008 Move X23, 0xA7E000
	009 Move W8, [X22+2004]
	010 Move X23, [X23+632]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA7E000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2004], W8
	023 Move X8, [X23]
	024 Move X0, X21
	025 Move X1, X20
	026 Move X2, X19
	027 Move X8, [X8+184]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X3, [X8]
	033 Move X30, [X31+48]
	034 Move X23, [X31+56]
	035 Call NetworkCredential..ctor, X0, X1, X2, X3
	036 Return 

Method: System.Void .ctor(System.String userName, System.String password, System.String domain)

Disassembly:
	0x0367DF10 LDP X30, X21, [X31], #0x20
	0x0367DF14 B 0x367CF10
	0x0367DF18 STR X30, [X31 - 0x20]!
	0x0367DF1C STP X20, X19, [X31 + 0x10]
	0x0367DF20 ADRP X19, 0xD63000
	0x0367DF24 ADRP X20, 0xAC0000
	0x0367DF28 LDRB W8, [X19 + 0x7C7]
	0x0367DF2C LDR X20, [X20 + 0xC00]
	0x0367DF30 TBNZ X8, 0x0, 0x367DF48
	0x0367DF34 ADRP X0, 0xAC0000
	0x0367DF38 LDR X0, [X0 + 0xC00]
	0x0367DF3C BL 0x1C16CF4
	0x0367DF40 MOVZ W8, 0x1
	0x0367DF44 STRB W8, [X19 + 0x7C7]
	0x0367DF48 LDR X0, [X20]
	0x0367DF4C BL 0x1C16F10
	0x0367DF50 MOV X19, X0
	0x0367DF54 BL 0x367DEC0
	0x0367DF58 LDR X8, [X20]
	0x0367DF5C LDR X8, [X8 + 0xB8]
	0x0367DF60 STR X19, [X8]
	0x0367DF64 LDP X20, X19, [X31 + 0x10]
	0x0367DF68 LDR X30, [X31], #0x20
	0x0367DF6C RET
	0x0367DF70 STP X30, X19, [X31 - 0x10]!
	0x0367DF74 BL 0x367DF94
	0x0367DF78 MOV X19, X0
	0x0367DF7C ADRP X0, 0xAC0000
	0x0367DF80 LDR X0, [X0 + 0xE30]
	0x0367DF84 BL 0x1C16D08
	0x0367DF88 MOV X1, X0
	0x0367DF8C MOV X0, X19
	0x0367DF90 BL 0x1C16DEC
	0x0367DF94 STP X30, X21, [X31 - 0x20]!
	0x0367DF98 STP X20, X19, [X31 + 0x10]
	0x0367DF9C ADRP X20, 0xD63000
	0x0367DFA0 ADRP X21, 0xAC0000
	0x0367DFA4 ADRP X19, 0xA7F000
	0x0367DFA8 LDRB W8, [X20 + 0x7CD]
	0x0367DFAC LDR X21, [X21 + 0xE38]
	0x0367DFB0 LDR X19, [X19 + 0x758]
	0x0367DFB4 TBNZ X8, 0x0, 0x367DFD8
	0x0367DFB8 ADRP X0, 0xA7F000
	0x0367DFBC LDR X0, [X0 + 0x758]
	0x0367DFC0 BL 0x1C16CF4
	0x0367DFC4 ADRP X0, 0xAC0000
	0x0367DFC8 LDR X0, [X0 + 0xE38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move X20, X3
	010 Move X21, X2
	011 Move X19, X0
	012 Call Object..ctor, X0
	013 Move X23, 0xD64000
	014 Move W8, [X23+2005]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA79000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2005], W8
	024 Compare X22, 0
	025 JumpIfNotEqual {31}
	026 Move X8, 0xA79000
	027 Move X8, [X8+632]
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move X22, [X8]
	031 Move X0, X21
	032 Move X1, X31
	033 Move [X19+24], X22
	034 Call SecureStringHelper.CreateSecureString, X0
	035 Move [X19+32], X0
	036 Move X21, 0xD64000
	037 Move W8, [X21+2006]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {47}
	042 Move X0, 0xA79000
	043 Move X0, [X0+632]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2006], W8
	047 Compare X20, 0
	048 JumpIfNotEqual {54}
	049 Move X8, 0xA79000
	050 Move X8, [X8+632]
	051 Move X8, [X8]
	052 Move X8, [X8+184]
	053 Move X20, [X8]
	054 Move [X19+16], X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

Method: System.String get_UserName()

Disassembly:
	0x036801A4 BL 0x1C16D6C
	0x036801A8 LDR X8, [X19]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_UserName(System.String value)

Disassembly:
	0x036800D4 CBNZ W9, 0x36800E4
	0x036800D8 MOV X0, X8
	0x036800DC BL 0x1C16DFC
	0x036800E0 LDR X8, [X21]
	0x036800E4 LDR X8, [X8 + 0xB8]
	0x036800E8 LDR X8, [X8]
	0x036800EC CBZ X8, 0x3680120
	0x036800F0 LDR W9, [X8 + 0x18]
	0x036800F4 CMP W9, W19
	0x036800F8 B.LS 0x3680124
	0x036800FC ADD X19, X8, X22, 0x3, LSL
	0x03680100 BL 0x1C16D44
	0x03680104 STR X20, [X19 + 0x20]
	0x03680108 MOV X0, X20
	0x0368010C LDP X20, X19, [X31 + 0x40]
	0x03680110 LDP X22, X21, [X31 + 0x30]
	0x03680114 LDR X30, [X31 + 0x20]
	0x03680118 ADD X31, X31, 0x50
	0x0368011C RET
	0x03680120 BL 0x1C16F20
	0x03680124 BL 0x1C16F28
	0x03680128 ADRP X0, 0xABD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD61000
	006 Move W8, [X21+2005]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA76000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2005], W8
	018 Compare X20, 0
	019 JumpIfNotEqual {25}
	020 Move X8, 0xA76000
	021 Move X8, [X8+632]
	022 Move X8, [X8]
	023 Move X8, [X8+184]
	024 Move X20, [X8]
	025 Move [X19+24], X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.String get_Password()

Disassembly:
	0x036801AC LDP X20, X19, [X31 + 0x10]
	0x036801B0 LDR X8, [X8 + 0xB8]
	0x036801B4 STR X0, [X8]

ISIL:
	001 Move X0, [X0+32]
	002 Move X1, X31
	003 Call SecureStringHelper.CreateString, X0
	004 Return X0

Method: System.Void set_Password(System.String value)

Disassembly:
	0x0368012C LDR X0, [X0 + 0x848]
	0x03680130 BL 0x1C16D08
	0x03680134 BL 0x1C16F10
	0x03680138 MOV X19, X0
	0x0368013C BL 0x367A644
	0x03680140 ADRP X0, 0xABD000
	0x03680144 LDR X0, [X0 + 0xF20]
	0x03680148 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X1
	005 Move X1, X31
	006 Call SecureStringHelper.CreateSecureString, X0
	007 Move [X19+32], X0
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: System.String get_Domain()

Disassembly:
	0x036801C4 STP X22, X21, [X31 + 0x10]
	0x036801C8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Domain(System.String value)

Disassembly:
	0x0368014C MOV X1, X0
	0x03680150 MOV X0, X19
	0x03680154 BL 0x1C16DEC
	0x03680158 STP X30, X21, [X31 - 0x20]!
	0x0368015C STP X20, X19, [X31 + 0x10]
	0x03680160 ADRP X20, 0xD60000
	0x03680164 ADRP X21, 0xA73000
	0x03680168 ADRP X19, 0xABD000
	0x0368016C LDRB W8, [X20 + 0x7E0]
	0x03680170 LDR X21, [X21 + 0xAC8]
	0x03680174 LDR X19, [X19 + 0xEB8]
	0x03680178 TBNZ X8, 0x0, 0x368019C
	0x0368017C ADRP X0, 0xA73000
	0x03680180 LDR X0, [X0 + 0xAC8]
	0x03680184 BL 0x1C16CF4
	0x03680188 ADRP X0, 0xABD000
	0x0368018C LDR X0, [X0 + 0xEB8]
	0x03680190 BL 0x1C16CF4
	0x03680194 MOVZ W8, 0x1
	0x03680198 STRB W8, [X20 + 0x7E0]
	0x0368019C LDR X0, [X21]
	0x036801A0 MOVZ W1, 0x15

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD61000
	006 Move W8, [X21+2006]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA76000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2006], W8
	018 Compare X20, 0
	019 JumpIfNotEqual {25}
	020 Move X8, 0xA76000
	021 Move X8, [X8+632]
	022 Move X8, [X8]
	023 Move X8, [X8+184]
	024 Move X20, [X8]
	025 Move [X19+16], X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.String InternalGetUserName()

Disassembly:
	0x036801CC ADRP X20, 0xD60000
	0x036801D0 LDRB W8, [X20 + 0x7E1]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.String InternalGetPassword()

Disassembly:
	0x036801B8 LDP X30, X21, [X31], #0x20
	0x036801BC RET
	0x036801C0 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move X0, [X0+32]
	002 Move X1, X31
	003 Call SecureStringHelper.CreateString, X0
	004 Return X0

Method: System.String InternalGetDomain()

Disassembly:
	0x036801D4 MOV X19, X0
	0x036801D8 TBNZ X8, 0x0, 0x36801F0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Net.NetworkCredential GetCredential(System.Uri uri, System.String authType)

Disassembly:
	0x036801DC ADRP X0, 0xABD000

ISIL:
	001 Return X0

