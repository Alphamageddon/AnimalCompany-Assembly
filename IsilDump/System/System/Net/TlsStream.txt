Type: System.Net.TlsStream

Method: System.Void .ctor(System.Net.Sockets.NetworkStream stream, System.Net.Sockets.Socket socket, System.String host, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates)

Disassembly:
	0x0366D554 B.CS 0x366D5FC
	0x0366D558 ADD X12, X12, X8, 0x1, LSL
	0x0366D55C LDRB W12, [X12 + 0x21]
	0x0366D560 CMP X9, X8
	0x0366D564 STURB W12, [X11 - 0x1]
	0x0366D568 B.EQ 0x366D5FC
	0x0366D56C LDR X12, [X19 + 0x18]
	0x0366D570 CBZ X12, 0x366D600
	0x0366D574 LDR W13, [X12 + 0x18]
	0x0366D578 CMP X8, X13
	0x0366D57C B.CS 0x366D5FC
	0x0366D580 ADD X12, X12, X8, 0x1, LSL
	0x0366D584 LDRB W12, [X12 + 0x20]
	0x0366D588 ADD X8, X8, 0x1
	0x0366D58C CMP X8, 0x8
	0x0366D590 STRB W12, [X11], #0x2
	0x0366D594 B.NE 0x366D53C
	0x0366D598 B 0x366D5EC
	0x0366D59C MOVZ W1, 0x4
	0x0366D5A0 BL 0x1C16D6C
	0x0366D5A4 LDR X1, [X20]
	0x0366D5A8 MOV X20, X0
	0x0366D5AC BL 0x25FB4C0
	0x0366D5B0 CBZ W1, 0x366D5FC
	0x0366D5B4 LDR W8, [X19 + 0x10]
	0x0366D5B8 CMP W1, 0x1
	0x0366D5BC STRB W8, [X0]
	0x0366D5C0 B.EQ 0x366D5FC
	0x0366D5C4 UBFM W9, W8, 0x8, 0x1F
	0x0366D5C8 CMP W1, 0x2
	0x0366D5CC STRB W9, [X0 + 0x1]
	0x0366D5D0 B.LS 0x366D5FC
	0x0366D5D4 UBFM W9, W8, 0x10, 0x1F
	0x0366D5D8 CMP W1, 0x3
	0x0366D5DC STRB W9, [X0 + 0x2]
	0x0366D5E0 B.EQ 0x366D5FC
	0x0366D5E4 UBFM W8, W8, 0x18, 0x1F
	0x0366D5E8 STRB W8, [X0 + 0x3]
	0x0366D5EC MOV X0, X20
	0x0366D5F0 LDP X20, X19, [X31 + 0x10]
	0x0366D5F4 LDP X30, X21, [X31], #0x20
	0x0366D5F8 RET
	0x0366D5FC BL 0x1C16F28
	0x0366D600 BL 0x1C16F20
	0x0366D604 LDR X8, [X0 + 0x18]
	0x0366D608 MOVZ W9, 0x17
	0x0366D60C CMP X8, 0x0
	0x0366D610 MOVZ W8, 0x2
	0x0366D614 CSEL W0, W8, W9, EQ
	0x0366D618 RET
	0x0366D61C STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD74000
	010 Move X24, 0xAB5000
	011 Move W8, [X25+1870]
	012 Move X24, [X24+560]
	013 Move X19, X4
	014 Move X20, X3
	015 Move X23, X2
	016 Move X22, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xAB5000
	023 Move X0, [X0+560]
	024 Call 0x1C17CF4
	025 Move X0, 0xAC5000
	026 Move X0, [X0+1288]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1870], W8
	030 Move X25, 0xAC5000
	031 Move X25, [X25+1288]
	032 Move X0, X21
	033 Move X1, X23
	034 Move X2, X31
	035 Call NetworkStream..ctor, X0, X1
	036 Move X0, [X24]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X31
	042 Call ServicePointManager.get_ServerCertificateValidationCallback
	043 Move X8, [X25]
	044 Move X23, X0
	045 Move X0, X8
	046 Call 0x1C17F10
	047 Move X1, X22
	048 Move W2, W31
	049 Move X3, X23
	050 Move X4, X31
	051 Move X24, X0
	052 Call SslStream..ctor, X0, X1, X2, X3
	053 Move [X21+72], X24
	054 Move [X21+80], X20
	055 Move [X21+88], X19
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Return 

Method: System.Void AuthenticateAsClient()

Disassembly:
	0x0366D620 LDR X8, [X0 + 0x18]
	0x0366D624 CBZ X8, 0x366D634
	0x0366D628 LDR W0, [X0 + 0x10]
	0x0366D62C LDP X30, X19, [X31], #0x10
	0x0366D630 RET
	0x0366D634 ADRP X0, 0xAC4000
	0x0366D638 LDR X0, [X0 + 0xD8]
	0x0366D63C BL 0x1C16D08
	0x0366D640 BL 0x1C16F10
	0x0366D644 MOVZ W1, 0x273D
	0x0366D648 MOV X2, X31
	0x0366D64C MOV X19, X0
	0x0366D650 BL 0x36CA10C
	0x0366D654 ADRP X0, 0xAD0000
	0x0366D658 LDR X0, [X0 + 0x788]
	0x0366D65C BL 0x1C16D08
	0x0366D660 MOV X1, X0
	0x0366D664 MOV X0, X19
	0x0366D668 BL 0x1C16DEC
	0x0366D66C SUB X31, X31, 0x50
	0x0366D670 STR X30, [X31 + 0x30]
	0x0366D674 STP X20, X19, [X31 + 0x40]
	0x0366D678 MRS X20, 0xC000
	0x0366D67C LDR X8, [X20 + 0x28]
	0x0366D680 MOV X19, X0
	0x0366D684 STR X8, [X31 + 0x28]
	0x0366D688 LDR X0, [X0 + 0x20]
	0x0366D68C CBNZ X0, 0x366D6E0
	0x0366D690 LDR X0, [X19 + 0x18]
	0x0366D694 CBZ X0, 0x366D6AC
	0x0366D698 LDR W1, [X19 + 0x10]
	0x0366D69C BL 0x366E428
	0x0366D6A0 MOV X1, X31
	0x0366D6A4 BL 0x3235BE8
	0x0366D6A8 B 0x366D6DC
	0x0366D6AC LDR W0, [X19 + 0x10]
	0x0366D6B0 ADD X1, X31, 0x0
	0x0366D6B4 STP X31, X31, [X31]
	0x0366D6B8 STUR X31, [X31 + 0x16]
	0x0366D6BC STR X31, [X31 + 0x10]
	0x0366D6C0 BL 0x366E264
	0x0366D6C4 MOV W3, W0
	0x0366D6C8 ADD X1, X31, 0x0
	0x0366D6CC MOV X0, X31
	0x0366D6D0 MOV W2, W31
	0x0366D6D4 MOV X4, X31
	0x0366D6D8 BL 0x322EAD4
	0x0366D6DC STR X0, [X19 + 0x20]
	0x0366D6E0 LDR X8, [X20 + 0x28]
	0x0366D6E4 LDR X9, [X31 + 0x28]
	0x0366D6E8 CMP X8, X9
	0x0366D6EC B.NE 0x366D700
	0x0366D6F0 LDP X20, X19, [X31 + 0x40]
	0x0366D6F4 LDR X30, [X31 + 0x30]
	0x0366D6F8 ADD X31, X31, 0x50
	0x0366D6FC RET
	0x0366D700 BL 0x3EB1B20
	0x0366D704 STR X30, [X31 - 0x10]!
	0x0366D708 BL 0x366E428
	0x0366D70C MOV X1, X31
	0x0366D710 LDR X30, [X31], #0x10
	0x0366D714 B 0x3235BE8
	0x0366D718 SUB X31, X31, 0x40
	0x0366D71C STP X30, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xD74000
	009 Move X22, 0xAB5000
	010 Move W8, [X19+1871]
	011 Move X22, [X22+560]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAB5000
	018 Move X0, [X0+560]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1871], W8
	022 Move X0, [X22]
	023 Move X21, [X20+72]
	024 Move X19, [X20+80]
	025 Move X20, [X20+88]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X23, 0xD74000
	031 Move W8, [X23+760]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0xAB5000
	035 Move X0, [X0+560]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+760], W8
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X22]
	045 Move X8, [X0+184]
	046 Move X24, 0xD70000
	047 Move W9, [X24+518]
	048 Move W23, [X8+36]
	049 Compare W9, 0
	050 JumpIfNotEqual {56}
	051 Move X0, X22
	052 Call 0x1C17CF4
	053 Move X0, [X22]
	054 Move W8, 1
	055 Move [X24+518], W8
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X22]
	061 Compare X21, 0
	062 JumpIfEqual {80}
	063 Move X8, [X0+184]
	064 Move X9, [X21]
	065 Move X0, X21
	066 Move X1, X19
	067 Move W4, [X8+32]
	068 Move X6, [X9+968]
	069 Move X5, [X9+976]
	070 Move X2, X20
	071 Move W3, W23
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 CallNoReturn X6
	080 Call 0x1C17F20

Method: System.IAsyncResult BeginAuthenticateAsClient(System.AsyncCallback asyncCallback, System.Object state)

Disassembly:
	0x0366D720 MRS X19, 0xC000
	0x0366D724 LDR X8, [X19 + 0x28]
	0x0366D728 ADD X1, X31, 0x0
	0x0366D72C STR X8, [X31 + 0x28]
	0x0366D730 STP X31, X31, [X31 + 0x8]
	0x0366D734 STR X31, [X31]
	0x0366D738 STUR X31, [X31 + 0x16]
	0x0366D73C BL 0x366E264
	0x0366D740 MOV W3, W0
	0x0366D744 ADD X1, X31, 0x0
	0x0366D748 MOV X0, X31
	0x0366D74C MOV W2, W31
	0x0366D750 MOV X4, X31
	0x0366D754 BL 0x322EAD4
	0x0366D758 LDR X8, [X19 + 0x28]
	0x0366D75C LDR X9, [X31 + 0x28]
	0x0366D760 CMP X8, X9
	0x0366D764 B.NE 0x366D774
	0x0366D768 LDP X30, X19, [X31 + 0x30]
	0x0366D76C ADD X31, X31, 0x40
	0x0366D770 RET
	0x0366D774 BL 0x3EB1B20
	0x0366D778 STR X30, [X31 - 0x20]!
	0x0366D77C STP X20, X19, [X31 + 0x10]
	0x0366D780 ADRP X20, 0xD73000
	0x0366D784 LDRB W8, [X20 + 0x759]
	0x0366D788 MOV X19, X0
	0x0366D78C TBNZ X8, 0x0, 0x366D7A4
	0x0366D790 ADRP X0, 0xA93000
	0x0366D794 LDR X0, [X0 + 0x968]
	0x0366D798 BL 0x1C16CF4
	0x0366D79C MOVZ W8, 0x1
	0x0366D7A0 STRB W8, [X20 + 0x759]
	0x0366D7A4 ADRP X20, 0xA93000
	0x0366D7A8 LDR X20, [X20 + 0x968]
	0x0366D7AC CBZ X19, 0x366D830
	0x0366D7B0 LDR X8, [X19 + 0x18]
	0x0366D7B4 CBZ X8, 0x366D7EC
	0x0366D7B8 LDR X0, [X20]
	0x0366D7BC LDR W8, [X0 + 0xE0]
	0x0366D7C0 CBNZ W8, 0x366D7CC
	0x0366D7C4 BL 0x1C16DFC
	0x0366D7C8 LDR X0, [X20]
	0x0366D7CC LDR X8, [X0 + 0xB8]
	0x0366D7D0 LDR X9, [X19]
	0x0366D7D4 MOV X0, X19
	0x0366D7D8 LDP X20, X19, [X31 + 0x10]
	0x0366D7DC LDR X1, [X8 + 0x28]
	0x0366D7E0 LDP X3, X2, [X9 + 0x138]
	0x0366D7E4 LDR X30, [X31], #0x20
	0x0366D7E8 BR X3
	0x0366D7EC LDR X0, [X20]
	0x0366D7F0 LDR W19, [X19 + 0x10]
	0x0366D7F4 LDR W8, [X0 + 0xE0]
	0x0366D7F8 CBNZ W8, 0x366D804
	0x0366D7FC BL 0x1C16DFC
	0x0366D800 LDR X0, [X20]
	0x0366D804 LDR X8, [X0 + 0xB8]
	0x0366D808 LDR X8, [X8 + 0x8]
	0x0366D80C CBZ X8, 0x366D83C
	0x0366D810 LDRB W8, [X8 + 0x10]
	0x0366D814 AND W9, W19, 0xFF
	0x0366D818 LDP X20, X19, [X31 + 0x10]
	0x0366D81C EOR W8, W8, W9, 0x0
	0x0366D820 CMP W8, 0x0
	0x0366D824 CSET W0, EQ
	0x0366D828 LDR X30, [X31], #0x20
	0x0366D82C RET
	0x0366D830 LDR X0, [X20]
	0x0366D834 BL 0x19903D0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xD74000
	011 Move X24, 0xAB5000
	012 Move W8, [X21+1872]
	013 Move X24, [X24+560]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xAB5000
	022 Move X0, [X0+560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1872], W8
	026 Move X0, [X24]
	027 Move X23, [X22+72]
	028 Move X21, [X22+80]
	029 Move X22, [X22+88]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X25, 0xD74000
	035 Move W8, [X25+760]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0xAB5000
	039 Move X0, [X0+560]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+760], W8
	043 Move X0, [X24]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X24]
	049 Move X8, [X0+184]
	050 Move X26, 0xD70000
	051 Move W9, [X26+518]
	052 Move W25, [X8+36]
	053 Compare W9, 0
	054 JumpIfNotEqual {60}
	055 Move X0, X24
	056 Call 0x1C17CF4
	057 Move X0, [X24]
	058 Move W8, 1
	059 Move [X26+518], W8
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X24]
	065 Compare X23, 0
	066 JumpIfEqual {88}
	067 Move X8, [X0+184]
	068 Move X9, [X23]
	069 Move X0, X23
	070 Move X1, X21
	071 Move W4, [X8+32]
	072 Move X8, [X9+984]
	073 Move X7, [X9+992]
	074 Move X2, X22
	075 Move W3, W25
	076 Move X5, X20
	077 Move X6, X19
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X30, [X31+80]
	087 CallNoReturn X8
	088 Call 0x1C17F20

Method: System.Void EndAuthenticateAsClient(System.IAsyncResult asyncResult)

Disassembly:
	0x0366D838 BL 0x366CBA4
	0x0366D83C BL 0x1C16F20
	0x0366D840 STR X30, [X31 - 0x30]!
	0x0366D844 STP X22, X21, [X31 + 0x10]
	0x0366D848 STP X20, X19, [X31 + 0x20]
	0x0366D84C ADRP X22, 0xD73000
	0x0366D850 LDRB W8, [X22 + 0x75A]
	0x0366D854 MOV W19, W2
	0x0366D858 MOV X21, X1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+1000]
	007 Move X2, [X8+1008]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.IAsyncResult BeginWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x0366D85C MOV X20, X0
	0x0366D860 TBNZ X8, 0x0, 0x366D878
	0x0366D864 ADRP X0, 0xA93000
	0x0366D868 LDR X0, [X0 + 0x968]
	0x0366D86C BL 0x1C16CF4
	0x0366D870 MOVZ W8, 0x1
	0x0366D874 STRB W8, [X22 + 0x75A]
	0x0366D878 CBZ X21, 0x366D944
	0x0366D87C ADRP X8, 0xA93000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X7, [X8+760]
	007 Move X6, [X8+768]
	008 Move X30, [X31+16]
	009 CallNoReturn X7
	010 Call 0x1C17F20

Method: System.Void EndWrite(System.IAsyncResult result)

Disassembly:
	0x0366D880 LDR X8, [X8 + 0x968]
	0x0366D884 LDR X9, [X21]
	0x0366D888 LDR X8, [X8]
	0x0366D88C LDRB W11, [X9 + 0x130]
	0x0366D890 LDRB W10, [X8 + 0x130]
	0x0366D894 CMP W11, W10
	0x0366D898 B.CC 0x366D944
	0x0366D89C LDR X9, [X9 + 0xC8]
	0x0366D8A0 ADD X9, X9, X10, 0x3, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+776]
	007 Move X2, [X8+784]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x0366D8A4 LDUR X9, [X9 - 0x8]
	0x0366D8A8 CMP X9, X8
	0x0366D8AC CSEL X8, X21, X31, EQ
	0x0366D8B0 B.NE 0x366D944
	0x0366D8B4 CBZ X8, 0x366D970
	0x0366D8B8 LDR X9, [X20 + 0x18]
	0x0366D8BC LDR X12, [X8 + 0x18]
	0x0366D8C0 MOVZ W10, 0x17
	0x0366D8C4 MOVZ W11, 0x2

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+904]
	007 Move X4, [X8+912]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x0366D8C8 CMP X9, 0x0
	0x0366D8CC CSEL W13, W11, W10, EQ
	0x0366D8D0 CMP X12, 0x0
	0x0366D8D4 CSEL W10, W11, W10, EQ
	0x0366D8D8 CMP W13, W10
	0x0366D8DC B.NE 0x366D944
	0x0366D8E0 CBZ X9, 0x366D958
	0x0366D8E4 CBZ X12, 0x366D970
	0x0366D8E8 LDR W11, [X12 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+856]
	007 Move X4, [X8+864]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x0366D8EC MOV X10, X31
	0x0366D8F0 ADD X12, X12, 0x20
	0x0366D8F4 ADD X13, X9, 0x20
	0x0366D8F8 CMP X10, X11
	0x0366D8FC B.CS 0x366D96C
	0x0366D900 LDR W14, [X9 + 0x18]
	0x0366D904 CMP X10, X14
	0x0366D908 B.CS 0x366D96C
	0x0366D90C LDRH W14, [X12, X10, LSL #1]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X7, [X8+696]
	007 Move X6, [X8+704]
	008 Move X30, [X31+16]
	009 CallNoReturn X7
	010 Call 0x1C17F20

Method: System.Int32 EndRead(System.IAsyncResult asyncResult)

Disassembly:
	0x0366D910 LDRH W15, [X13, X10, LSL #1]
	0x0366D914 CMP W14, W15
	0x0366D918 B.NE 0x366D944
	0x0366D91C ADD X10, X10, 0x1
	0x0366D920 CMP X10, 0x8
	0x0366D924 B.NE 0x366D8F8
	0x0366D928 LDR W8, [X8 + 0x10]
	0x0366D92C LDR W9, [X20 + 0x10]
	0x0366D930 CMP W8, W9

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+712]
	007 Move X2, [X8+720]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Close()

Disassembly:
	0x0366D934 CSET W8, EQ
	0x0366D938 ORN W8, W8, W19, 0x0
	0x0366D93C AND W0, W8, 0x1
	0x0366D940 B 0x366D948
	0x0366D944 MOV W0, W31
	0x0366D948 LDP X20, X19, [X31 + 0x20]
	0x0366D94C LDP X22, X21, [X31 + 0x10]
	0x0366D950 LDR X30, [X31], #0x30
	0x0366D954 RET
	0x0366D958 LDR W8, [X8 + 0x10]
	0x0366D95C LDR W9, [X20 + 0x10]
	0x0366D960 CMP W8, W9
	0x0366D964 CSET W0, EQ

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Stream.Close, X0
	006 Move X0, [X19+72]
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X8, [X0]
	010 Move X2, [X8+632]
	011 Move X1, [X8+640]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X2
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

