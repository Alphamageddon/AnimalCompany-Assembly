Type: System.Net.IPAddress

Method: System.Boolean get_IsIPv4()

Disassembly:
	0x0366DA58 LDR W22, [X8 + 0x18]
	0x0366DA5C LDR X21, [X10]
	0x0366DA60 ADD X23, X8, 0x20
	0x0366DA64 LDR X9, [X21 + 0x38]

ISIL:
	001 Move X8, [X0+24]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsIPv6()

Disassembly:
	0x0366DA68 CBNZ X9, 0x366DA8C
	0x0366DA6C ADRP X0, 0xAAF000
	0x0366DA70 LDR X0, [X0 + 0x70]
	0x0366DA74 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+24]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.UInt32 get_PrivateAddress()

Disassembly:
	0x0366DA78 LDR X9, [X21 + 0x38]
	0x0366DA7C CBNZ X9, 0x366DA8C

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_PrivateAddress(System.UInt32 value)

Disassembly:
	0x0366DA80 MOV X0, X21
	0x0366DA84 BL 0x1C5C6E0
	0x0366DA88 LDR X9, [X21 + 0x38]
	0x0366DA8C LDR X2, [X9 + 0x18]

ISIL:
	001 Move [X0+32], X31
	002 Move [X0+40], W31
	003 Move [X0+16], W1
	004 Return 

Method: System.UInt32 get_PrivateScopeId()

Disassembly:
	0x0366DA90 MOV X0, X23
	0x0366DA94 MOV X1, X22

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_PrivateScopeId(System.UInt32 value)

Disassembly:
	0x0366DA98 BL 0x2218D00
	0x0366DA9C MOVZ X8, 0x40000000
	0x0366DAA0 MOV X9, INVALID
	0x0366DAA4 ADD X8, X8, X22, 0x20, LSL

ISIL:
	001 Move [X0+32], X31
	002 Move [X0+40], W31
	003 Move [X0+16], W1
	004 Return 

Method: System.Void .ctor(System.Int64 newAddress)

Disassembly:
	0x0366DAA8 MOVK X9, 0x1
	0x0366DAAC CMP X8, X9
	0x0366DAB0 B.CS 0x366DD5C
	0x0366DAB4 ADRP X8, 0xAB9000
	0x0366DAB8 LDR X8, [X8 + 0xD60]
	0x0366DABC MOVZ W2, 0x14
	0x0366DAC0 MOV X1, X20
	0x0366DAC4 LDR X3, [X8]
	0x0366DAC8 UBFM W8, W22, 0x1F, 0x1E
	0x0366DACC STP X0, X8, [X29 - 0x18]
	0x0366DAD0 SUB X0, X29, 0x18
	0x0366DAD4 BL 0x25BE5D8
	0x0366DAD8 ADRP X8, 0xABA000
	0x0366DADC LDR X8, [X8 + 0x28]
	0x0366DAE0 LDR X8, [X8]
	0x0366DAE4 LDR X0, [X8 + 0x20]
	0x0366DAE8 LDRB W8, [X0 + 0x135]
	0x0366DAEC TBNZ X8, 0x0, 0x366DAF4
	0x0366DAF0 BL 0x1C5C684
	0x0366DAF4 LDR W2, [X19 + 0x10]
	0x0366DAF8 ADD X0, X20, 0x10
	0x0366DAFC MOVZ W1, 0x4
	0x0366DB00 MOV X3, X31
	0x0366DB04 BL 0x3316E24
	0x0366DB08 ADRP X8, 0xAB9000
	0x0366DB0C LDR X8, [X8 + 0xF68]
	0x0366DB10 MOVZ W1, 0x14
	0x0366DB14 MOV X0, X20
	0x0366DB18 LDR X2, [X8]
	0x0366DB1C BL 0x25FB09C
	0x0366DB20 ADRP X23, 0xABA000
	0x0366DB24 LDR X23, [X23 + 0x9D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X8, X19
	009 ShiftRight X8, 32
	010 And X8, X8, 0x7FFFFFFF
	011 Compare X8, 0
	012 JumpIfNotEqual {20}
	013 Move [X20+32], X31
	014 Move [X20+40], W31
	015 Move [X20+16], W19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Move X0, 0xA8F000
	021 Move X0, [X0+1888]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xAD1000
	026 Move X0, [X0+1832]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentOutOfRangeException..ctor, X0, X1
	032 Move X0, 0xAD1000
	033 Move X0, [X0+1840]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: System.Void .ctor(System.Byte[] address, System.Int64 scopeid)

Disassembly:
	0x0366DB28 MOV X21, X0
	0x0366DB2C MOV X20, X1
	0x0366DB30 LDR X0, [X23]
	0x0366DB34 LDR W8, [X0 + 0xE0]
	0x0366DB38 CBNZ W8, 0x366DB40
	0x0366DB3C BL 0x1C16DFC
	0x0366DB40 ADRP X22, 0xD6F000
	0x0366DB44 LDRB W8, [X22 + 0xB00]
	0x0366DB48 CBNZ W8, 0x366DB60
	0x0366DB4C ADRP X0, 0xABA000
	0x0366DB50 LDR X0, [X0 + 0x9D8]
	0x0366DB54 BL 0x1C16CF4
	0x0366DB58 MOVZ W8, 0x1
	0x0366DB5C STRB W8, [X22 + 0xB00]
	0x0366DB60 LDR X0, [X23]
	0x0366DB64 LDR W8, [X0 + 0xE0]
	0x0366DB68 CBNZ W8, 0x366DB74
	0x0366DB6C BL 0x1C16DFC
	0x0366DB70 LDR X0, [X23]
	0x0366DB74 LDR X8, [X0 + 0xB8]
	0x0366DB78 ADRP X25, 0xD6F000
	0x0366DB7C LDRB W9, [X25 + 0xB01]
	0x0366DB80 LDR X22, [X8]
	0x0366DB84 CBNZ W9, 0x366DBB4
	0x0366DB88 ADRP X0, 0xABA000
	0x0366DB8C LDR X0, [X0 + 0x9D8]
	0x0366DB90 BL 0x1C16CF4
	0x0366DB94 ADRP X0, 0xAB9000
	0x0366DB98 LDR X0, [X0 + 0xDD0]
	0x0366DB9C BL 0x1C16CF4
	0x0366DBA0 ADRP X0, 0xAB5000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD74000
	007 Move W8, [X22+1874]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA94000
	016 Move X0, [X0+2408]
	017 Call 0x1C17CF4
	018 Move X0, 0xABC000
	019 Move X0, [X0+608]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1874], W8
	023 Compare X20, 0
	024 JumpIfEqual {36}
	025 Move W2, [X20+24]
	026 Add X1, X20, 32
	027 Move X0, X21
	028 Move X3, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call IPAddress..ctor, X0, X1, X2
	035 Return 
	036 Move X8, 0xA94000
	037 Move X8, [X8+2408]
	038 Move X0, [X8]
	039 Call 0x19913D0
	040 Call IPAddress.ThrowAddressNullException

Method: System.Void .ctor(System.ReadOnlySpan`1<System.Byte> address, System.Int64 scopeid)

Disassembly:
	0x0366DBF0 B 0x366DD24
	0x0366DBF4 ADRP X8, 0xAD0000
	0x0366DBF8 LDR X8, [X8 + 0x7A0]
	0x0366DBFC ADD X20, X19, 0x10
	0x0366DC00 LDR X0, [X8]
	0x0366DC04 LDR X8, [X0 + 0x38]
	0x0366DC08 CBNZ X8, 0x366DC10
	0x0366DC0C BL 0x1C5C6E0
	0x0366DC10 ADRP X8, 0xAD0000
	0x0366DC14 LDR X8, [X8 + 0x798]
	0x0366DC18 LDR X21, [X8]
	0x0366DC1C LDR X8, [X21 + 0x38]
	0x0366DC20 CBNZ X8, 0x366DC44
	0x0366DC24 ADRP X0, 0xAAF000
	0x0366DC28 LDR X0, [X0 + 0x70]
	0x0366DC2C BL 0x1C16CF4
	0x0366DC30 LDR X8, [X21 + 0x38]
	0x0366DC34 CBNZ X8, 0x366DC44
	0x0366DC38 MOV X0, X21
	0x0366DC3C BL 0x1C5C6E0
	0x0366DC40 LDR X8, [X21 + 0x38]
	0x0366DC44 LDR X2, [X8 + 0x18]
	0x0366DC48 MOVZ W1, 0x1
	0x0366DC4C MOV X0, X20
	0x0366DC50 BL 0x2218D04
	0x0366DC54 ADRP X22, 0xABA000
	0x0366DC58 LDR X22, [X22 + 0x9D8]
	0x0366DC5C MOV X20, X0
	0x0366DC60 LDR X8, [X22]
	0x0366DC64 LDR W9, [X8 + 0xE0]
	0x0366DC68 CBNZ W9, 0x366DC74
	0x0366DC6C MOV X0, X8
	0x0366DC70 BL 0x1C16DFC
	0x0366DC74 ADRP X21, 0xD6F000
	0x0366DC78 LDRB W8, [X21 + 0xB00]
	0x0366DC7C CBNZ W8, 0x366DC94
	0x0366DC80 ADRP X0, 0xABA000
	0x0366DC84 LDR X0, [X0 + 0x9D8]
	0x0366DC88 BL 0x1C16CF4
	0x0366DC8C MOVZ W8, 0x1
	0x0366DC90 STRB W8, [X21 + 0xB00]
	0x0366DC94 LDR X0, [X22]
	0x0366DC98 LDR W8, [X0 + 0xE0]
	0x0366DC9C CBNZ W8, 0x366DCA8
	0x0366DCA0 BL 0x1C16DFC
	0x0366DCA4 LDR X0, [X22]
	0x0366DCA8 LDR X8, [X0 + 0xB8]
	0x0366DCAC ADRP X23, 0xD6F000
	0x0366DCB0 LDRB W9, [X23 + 0xB01]
	0x0366DCB4 LDR X21, [X8]
	0x0366DCB8 CBNZ W9, 0x366DCE8
	0x0366DCBC ADRP X0, 0xABA000
	0x0366DCC0 LDR X0, [X0 + 0x9D8]
	0x0366DCC4 BL 0x1C16CF4
	0x0366DCC8 ADRP X0, 0xAB9000
	0x0366DCCC LDR X0, [X0 + 0xDD0]
	0x0366DCD0 BL 0x1C16CF4
	0x0366DCD4 ADRP X0, 0xAB5000
	0x0366DCD8 LDR X0, [X0 + 0xAC0]
	0x0366DCDC BL 0x1C16CF4
	0x0366DCE0 MOVZ W8, 0x1
	0x0366DCE4 STRB W8, [X23 + 0xB01]
	0x0366DCE8 ADRP X8, 0xAB9000
	0x0366DCEC LDR X8, [X8 + 0xDD0]
	0x0366DCF0 MOVZ W1, 0x4
	0x0366DCF4 MOV X0, X20
	0x0366DCF8 LDR X2, [X8]
	0x0366DCFC BL 0x2218CF0
	0x0366DD00 LDR X8, [X22]
	0x0366DD04 MOV X20, X0
	0x0366DD08 LDR W9, [X8 + 0xE0]
	0x0366DD0C CBNZ W9, 0x366DD18
	0x0366DD10 MOV X0, X8
	0x0366DD14 BL 0x1C16DFC
	0x0366DD18 MOVZ W1, 0x4
	0x0366DD1C MOV X0, X20
	0x0366DD20 MOV X2, X21
	0x0366DD24 MOV X3, X31
	0x0366DD28 BL 0x337E57C
	0x0366DD2C STR W0, [X19 + 0x28]
	0x0366DD30 LDR X8, [X24 + 0x28]
	0x0366DD34 LDUR X9, [X29 - 0x8]
	0x0366DD38 CMP X8, X9
	0x0366DD3C B.NE 0x366DD68
	0x0366DD40 ADD X31, X29, 0x0
	0x0366DD44 LDP X20, X19, [X31 + 0x40]
	0x0366DD48 LDP X22, X21, [X31 + 0x30]
	0x0366DD4C LDP X24, X23, [X31 + 0x20]
	0x0366DD50 LDR X25, [X31 + 0x10]
	0x0366DD54 LDP X29, X30, [X31], #0x50
	0x0366DD58 RET
	0x0366DD5C BL 0x1C16F30
	0x0366DD60 MOV X1, X21
	0x0366DD64 BL 0x1C16DEC
	0x0366DD68 BL 0x3EB1B20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD74000
	008 Move W8, [X23+1875]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xAB6000
	018 Move X0, [X0+2752]
	019 Call 0x1C17CF4
	020 Move X0, 0xAB7000
	021 Move X0, [X0+2256]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1875], W8
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, X19
	030 ShiftRight X8, 32
	031 And X8, X8, 0x7FFFFFFF
	032 Compare X8, 0
	033 JumpIfNotEqual {88}
	034 Move X8, 0xAB7000
	035 Move X8, [X8+2256]
	036 Move W1, 8
	037 Move X0, [X8]
	038 Call 0x1C17D6C
	039 Move X8, X31
	040 Add X9, X0, 32
	041 Move TEMP, 7
	042 Not TEMP
	043 Move X10, TEMP
	044 Move [X20+24], X0
	045 Add X11, X8, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {70}
	049 Move W11, [X0+24]
	050 Add X12, X10, 8
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X12, X21, X8
	053 Move W11, [X21]
	054 Move W12, [X12+1]
	055 Add X10, X10, 1
	056 NotImplemented "Instruction BFM not yet implemented."
	057 NotImplemented "Instruction STRH not yet implemented."
	058 Add X8, X8, 2
	059 Move [X20+32], X31
	060 Move [X20+40], W31
	061 Move [X20+16], W19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 
	069 Call 0x1C17F28
	070 Call 0x1C17F20
	071 Move X0, 0xA8F000
	072 Move X0, [X0+1400]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xAD1000
	077 Move X0, [X0+1864]
	078 Call 0x1C17D08
	079 Move X20, X0
	080 Move X0, 0xAD1000
	081 Move X0, [X0+1848]
	082 Call 0x1C17D08
	083 Move X2, X0
	084 Move X0, X19
	085 Move X1, X20
	086 Move X3, X31
	087 Call ArgumentException..ctor, X0, X1, X2
	088 Move X0, 0xA8F000
	089 Move X0, [X0+1888]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0xAD1000
	094 Move X0, [X0+1872]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Move X2, X31
	099 Call ArgumentOutOfRangeException..ctor, X0, X1
	100 Move X0, 0xAD1000
	101 Move X0, [X0+1880]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Call 0x1C17DEC

Method: System.Void .ctor(System.UInt16* numbers, System.Int32 numbersLength, System.UInt32 scopeid)

Disassembly:
	0x0366DD6C STR X30, [X31 - 0x20]!
	0x0366DD70 STP X20, X19, [X31 + 0x10]
	0x0366DD74 ADRP X19, 0xD73000
	0x0366DD78 LDRB W8, [X19 + 0x75C]
	0x0366DD7C MOV X20, X0
	0x0366DD80 TBNZ X8, 0x0, 0x366DDA4
	0x0366DD84 ADRP X0, 0xA93000
	0x0366DD88 LDR X0, [X0 + 0x968]
	0x0366DD8C BL 0x1C16CF4
	0x0366DD90 ADRP X0, 0xAB6000
	0x0366DD94 LDR X0, [X0 + 0x8D0]
	0x0366DD98 BL 0x1C16CF4
	0x0366DD9C MOVZ W8, 0x1
	0x0366DDA0 STRB W8, [X19 + 0x75C]
	0x0366DDA4 LDR X8, [X20 + 0x18]
	0x0366DDA8 CBNZ X8, 0x366DE30
	0x0366DDAC ADRP X8, 0xAB6000
	0x0366DDB0 LDR W20, [X20 + 0x10]
	0x0366DDB4 LDR X8, [X8 + 0x8D0]
	0x0366DDB8 MOVZ W1, 0x8
	0x0366DDBC LDR X0, [X8]
	0x0366DDC0 BL 0x1C16D6C
	0x0366DDC4 CBZ X0, 0x366DE44
	0x0366DDC8 LDR W8, [X0 + 0x18]
	0x0366DDCC MOV X19, X0
	0x0366DDD0 CMP W8, 0x5
	0x0366DDD4 B.LS 0x366DE40
	0x0366DDD8 MOVZ W9, 0xFFFF
	0x0366DDDC CMP W8, 0x6
	0x0366DDE0 STRH W9, [X19 + 0x2A]
	0x0366DDE4 B.EQ 0x366DE40
	0x0366DDE8 REV W9, W20
	0x0366DDEC UBFM W9, W9, 0x10, 0x1F
	0x0366DDF0 CMP W8, 0x7
	0x0366DDF4 STRH W9, [X19 + 0x2C]
	0x0366DDF8 B.LS 0x366DE40
	0x0366DDFC UBFM W8, W20, 0x8, 0x1F
	0x0366DE00 BFM W8, W20, 0x18, 0x1F
	0x0366DE04 STRH W8, [X19 + 0x2E]
	0x0366DE08 ADRP X8, 0xA93000
	0x0366DE0C LDR X8, [X8 + 0x968]
	0x0366DE10 LDR X0, [X8]
	0x0366DE14 BL 0x1C16F10
	0x0366DE18 MOV X1, X31
	0x0366DE1C MOV X20, X0
	0x0366DE20 BL 0x33BDD8C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD74000
	008 Move X22, 0xAB7000
	009 Move W8, [X23+1876]
	010 Move X22, [X22+2256]
	011 Move W19, W3
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAB7000
	019 Move X0, [X0+2256]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1876], W8
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move X0, [X22]
	027 Move W1, 8
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {56}
	031 Move W8, [X0+24]
	032 Move X9, X8
	033 ShiftRight X9, 32
	034 And X9, X9, 0x7FFFFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, X31
	037 Move X10, W8
	038 Add X11, X0, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Add X9, X9, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X20+24], X0
	045 Move [X20+32], X31
	046 Move [X20+40], W31
	047 Move [X20+16], W19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return 
	055 Call 0x1C17F28
	056 Call 0x1C17F20

Method: System.Void .ctor(System.UInt16[] numbers, System.UInt32 scopeid)

Disassembly:
	0x0366DE24 STP X19, X31, [X20 + 0x18]
	0x0366DE28 STR W31, [X20 + 0x28]
	0x0366DE2C STR W31, [X20 + 0x10]
	0x0366DE30 MOV X0, X20
	0x0366DE34 LDP X20, X19, [X31 + 0x10]
	0x0366DE38 LDR X30, [X31], #0x20
	0x0366DE3C RET
	0x0366DE40 BL 0x1C16F28
	0x0366DE44 BL 0x1C16F20
	0x0366DE48 STR X30, [X31 - 0x30]!
	0x0366DE4C STP X22, X21, [X31 + 0x10]
	0x0366DE50 STP X20, X19, [X31 + 0x20]
	0x0366DE54 ADRP X19, 0xD73000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+24], X20
	011 Move [X21+32], X31
	012 Move [X21+16], W19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move [X21+40], W31
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 

Method: System.Void .ctor(System.Byte[] address)

Disassembly:
	0x0366DE58 ADRP X20, 0xAD0000
	0x0366DE5C ADRP X21, 0xA93000
	0x0366DE60 ADRP X22, 0xA86000
	0x0366DE64 LDRB W8, [X19 + 0x75D]
	0x0366DE68 LDR X20, [X20 + 0x7B0]
	0x0366DE6C LDR X21, [X21 + 0x968]
	0x0366DE70 LDR X22, [X22 + 0x618]
	0x0366DE74 TBNZ X8, 0x0, 0x366DEA4
	0x0366DE78 ADRP X0, 0xA86000
	0x0366DE7C LDR X0, [X0 + 0x618]
	0x0366DE80 BL 0x1C16CF4
	0x0366DE84 ADRP X0, 0xA93000
	0x0366DE88 LDR X0, [X0 + 0x968]
	0x0366DE8C BL 0x1C16CF4
	0x0366DE90 ADRP X0, 0xAD0000
	0x0366DE94 LDR X0, [X0 + 0x7B0]
	0x0366DE98 BL 0x1C16CF4
	0x0366DE9C MOVZ W8, 0x1
	0x0366DEA0 STRB W8, [X19 + 0x75D]
	0x0366DEA4 LDR X0, [X20]
	0x0366DEA8 BL 0x1C16F10
	0x0366DEAC MOV X1, X31
	0x0366DEB0 MOV X19, X0
	0x0366DEB4 BL 0x366DFDC
	0x0366DEB8 LDR X8, [X21]
	0x0366DEBC LDR X8, [X8 + 0xB8]
	0x0366DEC0 STR X19, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD74000
	006 Move W8, [X21+1877]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA94000
	014 Move X0, [X0+2408]
	015 Call 0x1C17CF4
	016 Move X0, 0xABC000
	017 Move X0, [X0+608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1877], W8
	021 Compare X19, 0
	022 JumpIfEqual {30}
	023 Move W2, [X19+24]
	024 Add X1, X19, 32
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Move X8, 0xA94000
	031 Move X8, [X8+2408]
	032 Move X0, [X8]
	033 Call 0x19913D0
	034 Call IPAddress.ThrowAddressNullException

Method: System.Void .ctor(System.ReadOnlySpan`1<System.Byte> address)

Disassembly:
	0x0366DEC4 LDR X0, [X20]
	0x0366DEC8 BL 0x1C16F10
	0x0366DECC MOVZ W1, 0x7F
	0x0366DED0 MOVK W1, 0x1000000
	0x0366DED4 MOV X19, X0
	0x0366DED8 BL 0x366DFDC
	0x0366DEDC LDR X8, [X21]
	0x0366DEE0 LDR X8, [X8 + 0xB8]
	0x0366DEE4 STR X19, [X8 + 0x8]
	0x0366DEE8 LDR X0, [X20]
	0x0366DEEC BL 0x1C16F10
	0x0366DEF0 MOVN W1, 0x0
	0x0366DEF4 MOV X19, X0
	0x0366DEF8 BL 0x366DFDC
	0x0366DEFC LDR X8, [X21]
	0x0366DF00 MOVZ W1, 0x10
	0x0366DF04 LDR X8, [X8 + 0xB8]
	0x0366DF08 STP X19, X19, [X8 + 0x10]
	0x0366DF0C LDR X0, [X22]
	0x0366DF10 BL 0x1C16D6C
	0x0366DF14 LDR X8, [X21]
	0x0366DF18 MOV X19, X0
	0x0366DF1C MOV X0, X8
	0x0366DF20 BL 0x1C16F10
	0x0366DF24 MOV X1, X19
	0x0366DF28 MOV X2, X31
	0x0366DF2C MOV X20, X0
	0x0366DF30 BL 0x366CB28
	0x0366DF34 LDR X8, [X21]
	0x0366DF38 MOVZ W1, 0x10
	0x0366DF3C LDR X8, [X8 + 0xB8]
	0x0366DF40 STR X20, [X8 + 0x20]
	0x0366DF44 LDR X0, [X22]
	0x0366DF48 BL 0x1C16D6C
	0x0366DF4C CBZ X0, 0x366DFD4
	0x0366DF50 LDR W8, [X0 + 0x18]
	0x0366DF54 MOV X19, X0
	0x0366DF58 CMP W8, 0xF
	0x0366DF5C B.LS 0x366DFD8
	0x0366DF60 MOVZ W8, 0x1
	0x0366DF64 STRB W8, [X19 + 0x2F]
	0x0366DF68 LDR X0, [X21]
	0x0366DF6C BL 0x1C16F10
	0x0366DF70 MOV X1, X19
	0x0366DF74 MOV X2, X31
	0x0366DF78 MOV X20, X0
	0x0366DF7C BL 0x366CB28
	0x0366DF80 LDR X8, [X21]
	0x0366DF84 MOVZ W1, 0x10
	0x0366DF88 LDR X8, [X8 + 0xB8]
	0x0366DF8C STR X20, [X8 + 0x28]
	0x0366DF90 LDR X0, [X22]
	0x0366DF94 BL 0x1C16D6C
	0x0366DF98 LDR X8, [X21]
	0x0366DF9C MOV X19, X0
	0x0366DFA0 MOV X0, X8
	0x0366DFA4 BL 0x1C16F10
	0x0366DFA8 MOV X1, X19
	0x0366DFAC MOV X2, X31
	0x0366DFB0 MOV X20, X0
	0x0366DFB4 BL 0x366CB28
	0x0366DFB8 LDR X8, [X21]
	0x0366DFBC LDP X22, X21, [X31 + 0x10]
	0x0366DFC0 LDR X8, [X8 + 0xB8]
	0x0366DFC4 STR X20, [X8 + 0x30]
	0x0366DFC8 LDP X20, X19, [X31 + 0x20]
	0x0366DFCC LDR X30, [X31], #0x30
	0x0366DFD0 RET
	0x0366DFD4 BL 0x1C16F20
	0x0366DFD8 BL 0x1C16F28
	0x0366DFDC STR X30, [X31 - 0x30]!
	0x0366DFE0 STP X22, X21, [X31 + 0x10]
	0x0366DFE4 STP X20, X19, [X31 + 0x20]
	0x0366DFE8 ADRP X21, 0xD73000
	0x0366DFEC ADRP X22, 0xA93000
	0x0366DFF0 LDRB W8, [X21 + 0x75E]
	0x0366DFF4 LDR X22, [X22 + 0x968]
	0x0366DFF8 MOV X19, X1
	0x0366DFFC MOV X20, X0
	0x0366E000 TBNZ X8, 0x0, 0x366E018
	0x0366E004 ADRP X0, 0xA92000
	0x0366E008 LDR X0, [X0 + 0x968]
	0x0366E00C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD74000
	007 Move W8, [X22+1878]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xAB6000
	016 Move X0, [X0+2752]
	017 Call 0x1C17CF4
	018 Move X0, 0xAB7000
	019 Move X0, [X0+2256]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1878], W8
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, [X19]
	029 Move [X20+32], X31
	030 Move [X20+40], W31
	031 Move [X20+16], W8
	032 Move X8, 0xAB7000
	033 Move X8, [X8+2256]
	034 Move W1, 8
	035 Move X0, [X8]
	036 Call 0x1C17D6C
	037 Move X8, X31
	038 Add X9, X0, 32
	039 Move TEMP, 7
	040 Not TEMP
	041 Move X10, TEMP
	042 Move [X20+24], X0
	043 Add X11, X8, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare X0, 0
	046 JumpIfEqual {64}
	047 Move W11, [X0+24]
	048 Add X12, X10, 8
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X12, X19, X8
	051 Move W11, [X19]
	052 Move W12, [X12+1]
	053 Add X10, X10, 1
	054 NotImplemented "Instruction BFM not yet implemented."
	055 NotImplemented "Instruction STRH not yet implemented."
	056 Add X8, X8, 2
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Call 0x1C17F28
	064 Call 0x1C17F20
	065 Move X0, 0xA8F000
	066 Move X0, [X0+1400]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0xAD1000
	071 Move X0, [X0+1864]
	072 Call 0x1C17D08
	073 Move X20, X0
	074 Move X0, 0xAD1000
	075 Move X0, [X0+1848]
	076 Call 0x1C17D08
	077 Move X2, X0
	078 Move X0, X19
	079 Move X1, X20
	080 Move X3, X31
	081 Call ArgumentException..ctor, X0, X1, X2
	082 Move X0, 0xAD1000
	083 Move X0, [X0+1888]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Call 0x1C17DEC

Method: System.Boolean TryParse(System.String ipString, out System.Net.IPAddress address)

Disassembly:
	0x0366E010 MOVZ W8, 0x1
	0x0366E014 STRB W8, [X21 + 0x75E]
	0x0366E018 LDR X0, [X22]
	0x0366E01C LDR W8, [X0 + 0xE0]
	0x0366E020 CBNZ W8, 0x366E028
	0x0366E024 BL 0x1C16DFC
	0x0366E028 MOV X0, X20
	0x0366E02C MOV X1, X19
	0x0366E030 LDP X20, X19, [X31 + 0x20]
	0x0366E034 LDP X22, X21, [X31 + 0x10]
	0x0366E038 LDR X30, [X31], #0x30
	0x0366E03C B 0x366CAA8
	0x0366E040 SUB X31, X31, 0x50
	0x0366E044 STR X30, [X31 + 0x10]
	0x0366E048 STP X24, X23, [X31 + 0x20]
	0x0366E04C STP X22, X21, [X31 + 0x30]
	0x0366E050 STP X20, X19, [X31 + 0x40]
	0x0366E054 ADRP X24, 0xD72000
	0x0366E058 ADRP X23, 0xAB4000
	0x0366E05C LDRB W8, [X24 + 0x763]
	0x0366E060 LDR X23, [X23 + 0x20]
	0x0366E064 MOV X19, X4
	0x0366E068 MOV X20, X2
	0x0366E06C MOV X21, X1
	0x0366E070 MOV X22, X0
	0x0366E074 TBNZ X8, 0x0, 0x366E098
	0x0366E078 ADRP X0, 0xAB4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Compare X0, 0
	007 JumpIfEqual {27}
	008 Move X21, 0xD6F000
	009 Move W8, [X21+939]
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0xAAD000
	014 Move X0, [X0+656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+939], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call String.GetRawStringData, X0
	021 Move W1, [X20+16]
	022 Move W2, 1
	023 Call IPAddressParser.Parse, X0, X1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move [X19], X0
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move [X19], X31
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0

Method: System.Net.IPAddress Parse(System.String ipString)

Disassembly:
	0x0366E240 CSET W8, EQ
	0x0366E244 ANDS W0, W9, W8, 0x0
	0x0366E248 CSEL X8, X10, X31, NE
	0x0366E24C STR X8, [X19]
	0x0366E250 LDP X20, X19, [X31 + 0x30]
	0x0366E254 LDP X22, X21, [X31 + 0x20]
	0x0366E258 LDP X30, X23, [X31 + 0x10]
	0x0366E25C ADD X31, X31, 0x40
	0x0366E260 RET
	0x0366E264 SUB X31, X31, 0x30
	0x0366E268 STP X30, X21, [X31 + 0x10]
	0x0366E26C STP X20, X19, [X31 + 0x20]
	0x0366E270 MOV W20, W0
	0x0366E274 AND W0, W0, 0xFF
	0x0366E278 ADD X2, X31, 0xC
	0x0366E27C MOV X19, X1
	0x0366E280 STR W31, [X31 + 0xC]
	0x0366E284 BL 0x366E370
	0x0366E288 LDRSW X8, [X31 + 0xC]
	0x0366E28C MOVZ W21, 0x2E
	0x0366E290 UBFM W0, W20, 0x8, 0xF
	0x0366E294 ADD X2, X31, 0xC
	0x0366E298 ADD W9, W8, 0x1
	0x0366E29C MOV X1, X19
	0x0366E2A0 STR W9, [X31 + 0xC]
	0x0366E2A4 STRH W21, [X19, X8, LSL #1]
	0x0366E2A8 BL 0x366E370
	0x0366E2AC LDRSW X8, [X31 + 0xC]
	0x0366E2B0 UBFM W0, W20, 0x10, 0x17
	0x0366E2B4 ADD X2, X31, 0xC
	0x0366E2B8 MOV X1, X19
	0x0366E2BC ADD W9, W8, 0x1
	0x0366E2C0 STR W9, [X31 + 0xC]
	0x0366E2C4 STRH W21, [X19, X8, LSL #1]
	0x0366E2C8 BL 0x366E370
	0x0366E2CC LDRSW X8, [X31 + 0xC]
	0x0366E2D0 UBFM W0, W20, 0x18, 0x1F
	0x0366E2D4 ADD X2, X31, 0xC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {26}
	006 Move X20, 0xD6F000
	007 Move W8, [X20+939]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0xAAD000
	012 Move X0, [X0+656]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+939], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call String.GetRawStringData, X0
	019 Move W1, [X19+16]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W2, W31
	023 Move X30, [X31+32]
	024 Call IPAddressParser.Parse, X0, X1
	025 Return X0
	026 Move X0, 0xA8B000
	027 Move X0, [X0+1320]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xAD0000
	032 Move X0, [X0+1912]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Move X2, X31
	037 Call ArgumentNullException..ctor, X0, X1
	038 Move X0, 0xAD0000
	039 Move X0, [X0+1920]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Call 0x1C17DEC

Method: System.Boolean TryWriteBytes(System.Span`1<System.Byte> destination, out System.Int32 bytesWritten)

Disassembly:
	0x0366E2D8 MOV X1, X19
	0x0366E2DC ADD W9, W8, 0x1
	0x0366E2E0 STR W9, [X31 + 0xC]
	0x0366E2E4 STRH W21, [X19, X8, LSL #1]
	0x0366E2E8 BL 0x366E370
	0x0366E2EC LDR W0, [X31 + 0xC]
	0x0366E2F0 LDP X20, X19, [X31 + 0x20]
	0x0366E2F4 LDP X30, X21, [X31 + 0x10]
	0x0366E2F8 ADD X31, X31, 0x30
	0x0366E2FC RET
	0x0366E300 SUB X31, X31, 0x50
	0x0366E304 STR X30, [X31 + 0x30]
	0x0366E308 STP X20, X19, [X31 + 0x40]
	0x0366E30C MRS X20, 0xC000
	0x0366E310 LDR X8, [X20 + 0x28]
	0x0366E314 MOV X19, X1
	0x0366E318 ADD X1, X31, 0x0
	0x0366E31C STR X8, [X31 + 0x28]
	0x0366E320 STP X31, X31, [X31 + 0x8]
	0x0366E324 STR X31, [X31]
	0x0366E328 STUR X31, [X31 + 0x16]
	0x0366E32C BL 0x366E264
	0x0366E330 CBZ X19, 0x366E368
	0x0366E334 MOV W2, W0
	0x0366E338 ADD X1, X31, 0x0
	0x0366E33C MOV X0, X19
	0x0366E340 MOV X3, X31
	0x0366E344 BL 0x3233290
	0x0366E348 LDR X8, [X20 + 0x28]
	0x0366E34C LDR X9, [X31 + 0x28]
	0x0366E350 CMP X8, X9
	0x0366E354 B.NE 0x366E36C
	0x0366E358 LDP X20, X19, [X31 + 0x40]
	0x0366E35C LDR X30, [X31 + 0x30]
	0x0366E360 ADD X31, X31, 0x50
	0x0366E364 RET
	0x0366E368 BL 0x1C16F20
	0x0366E36C BL 0x3EB1B20
	0x0366E370 STR X30, [X31 - 0x30]!
	0x0366E374 STP X22, X21, [X31 + 0x10]
	0x0366E378 STP X20, X19, [X31 + 0x20]
	0x0366E37C ADRP X22, 0xD72000
	0x0366E380 LDRB W8, [X22 + 0x761]
	0x0366E384 MOV X21, X2
	0x0366E388 MOV X19, X1
	0x0366E38C MOV W20, W0
	0x0366E390 TBNZ X8, 0x0, 0x366E3A8
	0x0366E394 ADRP X0, 0xA85000
	0x0366E398 LDR X0, [X0 + 0x5A8]
	0x0366E39C BL 0x1C16CF4
	0x0366E3A0 MOVZ W8, 0x1
	0x0366E3A4 STRB W8, [X22 + 0x761]
	0x0366E3A8 ADRP X22, 0xA85000
	0x0366E3AC LDR X22, [X22 + 0x5A8]
	0x0366E3B0 STR W31, [X31 + 0xC]
	0x0366E3B4 LDR W10, [X21]
	0x0366E3B8 CMP W20, 0x9
	0x0366E3BC MOVZ W8, 0x1
	0x0366E3C0 MOVZ W9, 0x3
	0x0366E3C4 CINC W8, W8, GT
	0x0366E3C8 CMP W20, 0x63
	0x0366E3CC CSEL W8, W9, W8, GT
	0x0366E3D0 ADD W8, W10, W8
	0x0366E3D4 STR W8, [X21]
	0x0366E3D8 SUB W21, W8, 0x1
	0x0366E3DC LDR X0, [X22]
	0x0366E3E0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD73000
	008 Move W8, [X23+1879]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAB5000
	018 Move X0, [X0+2344]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1879], W8
	022 Move X8, [X20+24]
	023 Compare X8, 0
	024 JumpIfEqual {58}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 And X10, X22, 0
	027 Add X10, X10, 1
	028 Move X8, X31
	029 Move X9, X22
	030 ShiftRight X9, 1
	031 And X9, X9, 0x7FFFFFFF
	032 Move X10, X10
	033 ShiftRight X10, 1
	034 And X10, X10, 0x7FFFFFFF
	035 Add X11, X21, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X12, [X20+24]
	038 Compare X12, 0
	039 JumpIfEqual {74}
	040 Move W13, [X12+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X12, X12, X8
	043 Move W12, [X12+33]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction STURB not yet implemented."
	046 Move X12, [X20+24]
	047 Compare X12, 0
	048 JumpIfEqual {74}
	049 Move W13, [X12+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X12, X12, X8
	052 Move W12, [X12+32]
	053 Add X8, X8, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X11+2], W12
	056 Move W0, 1
	057 Move W8, 16
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, [X20+16]
	060 Move W0, 1
	061 Move [X21], W8
	062 Move W8, 4
	063 Move W8, W31
	064 Move W0, W31
	065 Move [X19], W8
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return X0
	073 Call 0x1C17F28
	074 Call 0x1C17F20

Method: System.Void WriteIPv6Bytes(System.Span`1<System.Byte> destination)

Disassembly:
	0x0366E3E4 CBNZ W8, 0x366E3EC
	0x0366E3E8 BL 0x1C16DFC
	0x0366E3EC ADD X2, X31, 0xC
	0x0366E3F0 MOVZ W1, 0xA
	0x0366E3F4 MOV W0, W20
	0x0366E3F8 MOV X3, X31
	0x0366E3FC BL 0x337EC18
	0x0366E400 LDRH W8, [X31 + 0xC]
	0x0366E404 MOV W20, W0
	0x0366E408 ADD W8, W8, 0x30
	0x0366E40C STRH W8, [X19, W21, SXTW]
	0x0366E410 SUB W21, W21, 0x1
	0x0366E414 CBNZ W0, 0x366E3DC
	0x0366E418 LDP X20, X19, [X31 + 0x20]
	0x0366E41C LDP X22, X21, [X31 + 0x10]
	0x0366E420 LDR X30, [X31], #0x30
	0x0366E424 RET
	0x0366E428 STR X30, [X31 - 0x30]!
	0x0366E42C STP X22, X21, [X31 + 0x10]
	0x0366E430 STP X20, X19, [X31 + 0x20]
	0x0366E434 ADRP X22, 0xD72000
	0x0366E438 ADRP X20, 0xACF000
	0x0366E43C LDRB W8, [X22 + 0x760]
	0x0366E440 LDR X20, [X20 + 0x7B8]
	0x0366E444 MOV W19, W1
	0x0366E448 MOV X21, X0
	0x0366E44C TBNZ X8, 0x0, 0x366E464
	0x0366E450 ADRP X0, 0xACF000
	0x0366E454 LDR X0, [X0 + 0x7B8]
	0x0366E458 BL 0x1C16CF4
	0x0366E45C MOVZ W8, 0x1
	0x0366E460 STRB W8, [X22 + 0x760]
	0x0366E464 MOVZ W0, 0x41
	0x0366E468 MOV X1, X31
	0x0366E46C BL 0x3235A9C

ISIL:
	001 Move [X31-16], X30
	002 Move X11, X31
	003 And X8, X2, 0
	004 Add X9, X1, 1
	005 Move W10, 16
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X13, [X0+24]
	008 Compare X13, 0
	009 JumpIfEqual {32}
	010 Move W14, [X13+24]
	011 Subtract X12, X10, 16
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X13, X13, X10
	014 Move W14, [X13+1]
	015 Add X13, X11, 1
	016 Add X15, X9, X11
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction STURB not yet implemented."
	019 Move X14, [X0+24]
	020 Compare X14, 0
	021 JumpIfEqual {32}
	022 Move W15, [X14+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Add X10, X10, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X9], W12
	028 Add X11, X13, 1
	029 Move X30, [X31+16]
	030 Return 
	031 Call 0x1C17F28
	032 Call 0x1C17F20

Method: System.Void WriteIPv4Bytes(System.Span`1<System.Byte> destination)

Disassembly:
	0x0366E470 LDR X1, [X20]
	0x0366E474 MOV X20, X0
	0x0366E478 MOV X0, X21
	0x0366E47C BL 0x25BFDE4
	0x0366E480 MOV X2, X31
	0x0366E484 BL 0x3626B04
	0x0366E488 TBZ X0, 0x0, 0x366E4F4
	0x0366E48C MOVZ W2, 0x6
	0x0366E490 MOV X0, X21
	0x0366E494 MOV W1, W31
	0x0366E498 MOV X3, X20
	0x0366E49C BL 0x366E548
	0x0366E4A0 CBZ X20, 0x366E544
	0x0366E4A4 MOV X0, X20
	0x0366E4A8 MOV X1, X31
	0x0366E4AC BL 0x323260C
	0x0366E4B0 SUB W1, W0, 0x1
	0x0366E4B4 MOV X0, X20
	0x0366E4B8 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Compare W2, 0
	003 JumpIfEqual {23}
	004 Move W8, [X0+16]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move [X1], W8
	007 Move W9, W8
	008 ShiftRight W9, 8
	009 And W9, W9, 0x7FFFFFFF
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move [X1+1], W9
	012 Move W9, W8
	013 ShiftRight W9, 16
	014 And W9, W9, 0x7FFFFFFF
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move [X1+2], W9
	017 Move W8, W8
	018 ShiftRight W8, 24
	019 And W8, W8, 0x7FFFFFFF
	020 Move [X1+3], W8
	021 Move X30, [X31+16]
	022 Return 
	023 Call 0x1C17F28

Method: System.Byte[] GetAddressBytes()

Disassembly:
	0x0366E4BC BL 0x3232E88
	0x0366E4C0 AND W8, W0, 0xFFFF
	0x0366E4C4 CMP W8, 0x3A
	0x0366E4C8 B.EQ 0x366E4DC
	0x0366E4CC MOVZ W1, 0x3A
	0x0366E4D0 MOV X0, X20
	0x0366E4D4 MOV X2, X31
	0x0366E4D8 BL 0x3233D30
	0x0366E4DC MOV X0, X21
	0x0366E4E0 BL 0x366E6FC
	0x0366E4E4 MOV X1, X20
	0x0366E4E8 BL 0x366E300
	0x0366E4EC CBNZ W19, 0x366E50C
	0x0366E4F0 B 0x366E530
	0x0366E4F4 MOVZ W2, 0x8
	0x0366E4F8 MOV X0, X21
	0x0366E4FC MOV W1, W31
	0x0366E500 MOV X3, X20
	0x0366E504 BL 0x366E548
	0x0366E508 CBZ W19, 0x366E530
	0x0366E50C CBZ X20, 0x366E544
	0x0366E510 MOVZ W1, 0x25
	0x0366E514 MOV X0, X20
	0x0366E518 MOV X2, X31
	0x0366E51C BL 0x3233D30
	0x0366E520 CBZ X0, 0x366E544
	0x0366E524 MOV W1, W19
	0x0366E528 MOV X2, X31
	0x0366E52C BL 0x3233F38
	0x0366E530 MOV X0, X20
	0x0366E534 LDP X20, X19, [X31 + 0x20]
	0x0366E538 LDP X22, X21, [X31 + 0x10]
	0x0366E53C LDR X30, [X31], #0x30
	0x0366E540 RET
	0x0366E544 BL 0x1C16F20
	0x0366E548 STP X30, X27, [X31 - 0x50]!
	0x0366E54C STP X26, X25, [X31 + 0x10]
	0x0366E550 STP X24, X23, [X31 + 0x20]
	0x0366E554 STP X22, X21, [X31 + 0x30]
	0x0366E558 STP X20, X19, [X31 + 0x40]
	0x0366E55C ADRP X23, 0xD72000
	0x0366E560 LDRB W8, [X23 + 0x764]
	0x0366E564 MOV X19, X3
	0x0366E568 MOV W22, W2
	0x0366E56C MOV W21, W1
	0x0366E570 MOV X20, X0
	0x0366E574 TBNZ X8, 0x0, 0x366E598
	0x0366E578 ADRP X0, 0xACF000
	0x0366E57C LDR X0, [X0 + 0x7C0]
	0x0366E580 BL 0x1C16CF4
	0x0366E584 ADRP X0, 0xA92000
	0x0366E588 LDR X0, [X0 + 0x998]
	0x0366E58C BL 0x1C16CF4
	0x0366E590 MOVZ W8, 0x1
	0x0366E594 STRB W8, [X23 + 0x764]
	0x0366E598 SUB W23, W22, W21
	0x0366E59C ADD X25, X20, W21, 0x1, SXTW
	0x0366E5A0 CBZ X20, 0x366E5CC
	0x0366E5A4 LDR W8, [X20 + 0x18]
	0x0366E5A8 SUBS W8, W8, W21
	0x0366E5AC B.CC 0x366E5B8
	0x0366E5B0 CMP W8, W23
	0x0366E5B4 B.CS 0x366E5C0
	0x0366E5B8 MOV X0, X31
	0x0366E5BC BL 0x339D6EC
	0x0366E5C0 ADD X0, X25, 0x20
	0x0366E5C4 MOV W1, W23
	0x0366E5C8 B 0x366E5E4
	0x0366E5CC ORR W8, W23, W21, 0x0
	0x0366E5D0 CBZ W8, 0x366E5DC
	0x0366E5D4 MOV X0, X31
	0x0366E5D8 BL 0x339D6EC
	0x0366E5DC MOV X0, X31
	0x0366E5E0 MOV X1, X31
	0x0366E5E4 MOV X2, X31
	0x0366E5E8 BL 0x3626A24
	0x0366E5EC MOV X23, X0
	0x0366E5F0 CMP W23, W21
	0x0366E5F4 CSET W24, GT
	0x0366E5F8 B.LE 0x366E658
	0x0366E5FC MOV W9, W23
	0x0366E600 SXTW X9, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD73000
	006 Move X20, 0xA86000
	007 Move W8, [X21+1880]
	008 Move X20, [X20+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA86000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xAB5000
	018 Move X0, [X0+760]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1880], W8
	022 Move X0, [X20]
	023 Move X20, 0xAB5000
	024 Move X8, [X19+24]
	025 Move X20, [X20+760]
	026 Compare X8, 0
	027 JumpIfEqual {63}
	028 Move W1, 16
	029 Call 0x1C17D6C
	030 Move X1, [X20]
	031 Move X20, X0
	032 Call 0x25FC4C0, X0
	033 And X10, X1, 0
	034 Add X10, X10, 1
	035 Move X8, X31
	036 Move X9, X1
	037 ShiftRight X9, 1
	038 And X9, X9, 0x7FFFFFFF
	039 Move X10, X10
	040 ShiftRight X10, 1
	041 And X10, X10, 0x7FFFFFFF
	042 Add X11, X0, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X12, [X19+24]
	045 Compare X12, 0
	046 JumpIfEqual {94}
	047 Move W13, [X12+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X12, X12, X8
	050 Move W12, [X12+33]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction STURB not yet implemented."
	053 Move X12, [X19+24]
	054 Compare X12, 0
	055 JumpIfEqual {94}
	056 Move W13, [X12+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X12, X12, X8
	059 Move W12, [X12+32]
	060 Add X8, X8, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X11+2], W12
	063 Move W1, 4
	064 Call 0x1C17D6C
	065 Move X1, [X20]
	066 Move X20, X0
	067 Call 0x25FC4C0, X0
	068 Compare W1, 0
	069 JumpIfEqual {93}
	070 Move W8, [X19+16]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X0], W8
	073 Move W9, W8
	074 ShiftRight W9, 8
	075 And W9, W9, 0x7FFFFFFF
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X0+1], W9
	078 Move W9, W8
	079 ShiftRight W9, 16
	080 And W9, W9, 0x7FFFFFFF
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X0+2], W9
	083 Move W8, W8
	084 ShiftRight W8, 24
	085 And W8, W8, 0x7FFFFFFF
	086 Move [X0+3], W8
	087 Move X0, X20
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X30, [X31+32]
	091 Move X21, [X31+40]
	092 Return X0
	093 Call 0x1C17F28
	094 Call 0x1C17F20

Method: System.Net.Sockets.AddressFamily get_AddressFamily()

Disassembly:
	0x0366E604 MOV W8, W31
	0x0366E608 ADD X25, X25, 0x20
	0x0366E60C SUB X26, X9, W21, SXTW
	0x0366E610 MOV W27, W21
	0x0366E614 TBZ X8, 0x0, 0x366E62C
	0x0366E618 CBZ X19, 0x366E6F4

ISIL:
	001 Move X8, [X0+24]
	002 Move W9, 23
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W8, 2
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Return X0

Method: System.Int64 get_ScopeId()

Disassembly:
	0x0366E61C MOVZ W1, 0x3A
	0x0366E620 MOV X0, X19
	0x0366E624 MOV X2, X31
	0x0366E628 BL 0x3233D30
	0x0366E62C CBZ X20, 0x366E6F4
	0x0366E630 LDR W8, [X20 + 0x18]
	0x0366E634 CMP W27, W8
	0x0366E638 B.CS 0x366E6F8
	0x0366E63C LDRH W0, [X25], #0x2
	0x0366E640 MOV X1, X19
	0x0366E644 BL 0x366E730
	0x0366E648 ADD W27, W27, 0x1
	0x0366E64C SUBS X26, X26, 0x1
	0x0366E650 MOVZ W8, 0x1
	0x0366E654 B.NE 0x366E614
	0x0366E658 TBNZ X23, 0x1F, 0x366E680
	0x0366E65C CBZ X19, 0x366E6F4
	0x0366E660 ADRP X8, 0xA92000
	0x0366E664 LDR X8, [X8 + 0x998]
	0x0366E668 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W0, [X0+16]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0xAC4000
	011 Move X0, [X0+216]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move W1, 0x273D
	015 Move X2, X31
	016 Move X19, X0
	017 Call SocketException..ctor, X0, X1
	018 Move X0, 0xAD0000
	019 Move X0, [X0+1928]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x0366E66C MOV X2, X31
	0x0366E670 UBFM X21, X23, 0x20, 0x3F
	0x0366E674 LDR X1, [X8]
	0x0366E678 BL 0x32333E0
	0x0366E67C MOV W24, W31
	0x0366E680 CMP W21, W22
	0x0366E684 B.GE 0x366E6DC
	0x0366E688 SXTW X8, W22
	0x0366E68C ADD X9, X20, W21, 0x1, SXTW
	0x0366E690 ADD X22, X9, 0x20
	0x0366E694 SUB X23, X8, W21, SXTW
	0x0366E698 TBZ X24, 0x0, 0x366E6B0
	0x0366E69C CBZ X19, 0x366E6F4
	0x0366E6A0 MOVZ W1, 0x3A
	0x0366E6A4 MOV X0, X19
	0x0366E6A8 MOV X2, X31
	0x0366E6AC BL 0x3233D30
	0x0366E6B0 CBZ X20, 0x366E6F4
	0x0366E6B4 LDR W8, [X20 + 0x18]
	0x0366E6B8 CMP W21, W8
	0x0366E6BC B.CS 0x366E6F8
	0x0366E6C0 LDRH W0, [X22], #0x2
	0x0366E6C4 MOV X1, X19
	0x0366E6C8 BL 0x366E730
	0x0366E6CC ADD W21, W21, 0x1
	0x0366E6D0 SUBS X23, X23, 0x1
	0x0366E6D4 MOVZ W24, 0x1
	0x0366E6D8 B.NE 0x366E698
	0x0366E6DC LDP X20, X19, [X31 + 0x40]
	0x0366E6E0 LDP X22, X21, [X31 + 0x30]
	0x0366E6E4 LDP X24, X23, [X31 + 0x20]
	0x0366E6E8 LDP X26, X25, [X31 + 0x10]
	0x0366E6EC LDP X30, X27, [X31], #0x50
	0x0366E6F0 RET
	0x0366E6F4 BL 0x1C16F20
	0x0366E6F8 BL 0x1C16F28
	0x0366E6FC STR X30, [X31 - 0x10]!
	0x0366E700 CBZ X0, 0x366E728

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Move X19, X0
	008 Move [X31+40], X8
	009 Move X0, [X0+32]
	010 Compare X0, 0
	011 JumpIfNotEqual {33}
	012 Move X0, [X19+24]
	013 Compare X0, 0
	014 JumpIfEqual {19}
	015 Move W1, [X19+16]
	016 Call IPAddressParser.IPv6AddressToStringHelper, X0, X1
	017 Move X1, X31
	018 Call StringBuilderCache.GetStringAndRelease, X0
	019 Move W0, [X19+16]
	020 Add X1, X31, 0
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move [X31+22], X31
	024 Move [X31+16], X31
	025 Call IPAddressParser.IPv4AddressToStringHelper, X0, X1
	026 Move W3, W0
	027 Add X1, X31, 0
	028 Move X0, X31
	029 Move W2, W31
	030 Move X4, X31
	031 Call String.CreateString, X0, X1, X2, X3
	032 Move [X19+32], X0
	033 Move X8, [X20+40]
	034 Move X9, [X31+40]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X30, [X31+48]
	039 Add X31, X31, 80
	040 Return X0
	041 Call 0x3EB2B20

Method: System.Boolean IsLoopback(System.Net.IPAddress address)

Disassembly:
	0x0366E778 MOV X0, X1
	0x0366E77C MOV X1, X8
	0x0366E780 MOV X3, X31
	0x0366E784 BL 0x3233290
	0x0366E788 LDR X30, [X31 + 0x10]
	0x0366E78C ADD X31, X31, 0x20
	0x0366E790 RET
	0x0366E794 BL 0x1C16F20
	0x0366E798 REV W8, W0
	0x0366E79C UBFM W0, W8, 0x10, 0x1F
	0x0366E7A0 RET
	0x0366E7A4 STR X30, [X31 - 0x10]!
	0x0366E7A8 LDR X8, [X0 + 0x10]
	0x0366E7AC CBZ X8, 0x366E7CC
	0x0366E7B0 LDR X8, [X8 + 0x18]
	0x0366E7B4 MOVZ W9, 0x17
	0x0366E7B8 CMP X8, 0x0
	0x0366E7BC MOVZ W8, 0x2
	0x0366E7C0 CSEL W0, W8, W9, EQ
	0x0366E7C4 LDR X30, [X31], #0x10
	0x0366E7C8 RET
	0x0366E7CC BL 0x1C16F20
	0x0366E7D0 STR X30, [X31 - 0x30]!
	0x0366E7D4 STP X22, X21, [X31 + 0x10]
	0x0366E7D8 STP X20, X19, [X31 + 0x20]
	0x0366E7DC ADRP X22, 0xD72000
	0x0366E7E0 LDRB W8, [X22 + 0x765]
	0x0366E7E4 MOV W21, W2
	0x0366E7E8 MOV X19, X1
	0x0366E7EC MOV X20, X0
	0x0366E7F0 TBNZ X8, 0x0, 0x366E808
	0x0366E7F4 ADRP X0, 0xA92000
	0x0366E7F8 LDR X0, [X0 + 0x968]
	0x0366E7FC BL 0x1C16CF4
	0x0366E800 MOVZ W8, 0x1
	0x0366E804 STRB W8, [X22 + 0x765]
	0x0366E808 MOV X0, X20
	0x0366E80C MOV X1, X31
	0x0366E810 BL 0x367E0DC
	0x0366E814 CMP W21, 0x10000
	0x0366E818 B.CS 0x366E850
	0x0366E81C ADRP X8, 0xA92000
	0x0366E820 LDR X8, [X8 + 0x968]
	0x0366E824 STR W21, [X20 + 0x18]
	0x0366E828 LDR X0, [X8]
	0x0366E82C BL 0x1C16F10
	0x0366E830 MOV X1, X19
	0x0366E834 MOV X21, X0
	0x0366E838 BL 0x366CAA8
	0x0366E83C STR X21, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD73000
	005 Move W8, [X20+1881]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA93000
	012 Move X0, [X0+2408]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1881], W8
	016 Move X20, 0xA93000
	017 Move X20, [X20+2408]
	018 Compare X19, 0
	019 JumpIfEqual {59}
	020 Move X8, [X19+24]
	021 Compare X8, 0
	022 JumpIfEqual {39}
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X9, [X19]
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, [X8+40]
	035 Move X3, [X9+312]
	036 Move X2, [X9+320]
	037 Move X30, [X31+32]
	038 CallNoReturn X3
	039 Move X0, [X20]
	040 Move W19, [X19+16]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X20]
	046 Move X8, [X0+184]
	047 Move X8, [X8+8]
	048 Compare X8, 0
	049 JumpIfEqual {62}
	050 Move W8, [X8+16]
	051 And W9, W19, 255
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Xor W8, W8, W9
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move X30, [X31+32]
	058 Return X0
	059 Move X0, [X20]
	060 Call 0x19913D0
	061 Call IPAddress.ThrowAddressNullException
	062 Call 0x1C17F20

Method: System.Boolean Equals(System.Object comparandObj, System.Boolean compareScopeId)

Disassembly:
	0x0366E840 LDP X20, X19, [X31 + 0x20]
	0x0366E844 LDP X22, X21, [X31 + 0x10]
	0x0366E848 LDR X30, [X31], #0x30
	0x0366E84C RET
	0x0366E850 ADRP X0, 0xA8D000
	0x0366E854 LDR X0, [X0 + 0x760]
	0x0366E858 BL 0x1C16D08
	0x0366E85C BL 0x1C16F10
	0x0366E860 MOV X19, X0
	0x0366E864 ADRP X0, 0xACF000
	0x0366E868 LDR X0, [X0 + 0x7C8]
	0x0366E86C BL 0x1C16D08
	0x0366E870 MOV X1, X0
	0x0366E874 MOV X0, X19
	0x0366E878 MOV X2, X31
	0x0366E87C BL 0x3316014
	0x0366E880 ADRP X0, 0xACF000
	0x0366E884 LDR X0, [X0 + 0x7D0]
	0x0366E888 BL 0x1C16D08
	0x0366E88C MOV X1, X0
	0x0366E890 MOV X0, X19
	0x0366E894 BL 0x1C16DEC
	0x0366E898 STP X30, X21, [X31 - 0x20]!
	0x0366E89C STP X20, X19, [X31 + 0x10]
	0x0366E8A0 MOV X19, X1
	0x0366E8A4 MOV X1, X31
	0x0366E8A8 MOV W20, W2
	0x0366E8AC MOV X21, X0
	0x0366E8B0 BL 0x367E0DC
	0x0366E8B4 CBZ X19, 0x366E8D4
	0x0366E8B8 CMP W20, 0x10000
	0x0366E8BC B.CS 0x366E908
	0x0366E8C0 STR W20, [X21 + 0x18]
	0x0366E8C4 STR X19, [X21 + 0x10]
	0x0366E8C8 LDP X20, X19, [X31 + 0x10]
	0x0366E8CC LDP X30, X21, [X31], #0x20
	0x0366E8D0 RET
	0x0366E8D4 ADRP X0, 0xA8A000
	0x0366E8D8 LDR X0, [X0 + 0x528]
	0x0366E8DC BL 0x1C16D08
	0x0366E8E0 BL 0x1C16F10
	0x0366E8E4 MOV X19, X0
	0x0366E8E8 ADRP X0, 0xACF000
	0x0366E8EC LDR X0, [X0 + 0x738]
	0x0366E8F0 BL 0x1C16D08
	0x0366E8F4 MOV X1, X0
	0x0366E8F8 MOV X0, X19
	0x0366E8FC MOV X2, X31
	0x0366E900 BL 0x330E100
	0x0366E904 B 0x366E938
	0x0366E908 ADRP X0, 0xA8D000
	0x0366E90C LDR X0, [X0 + 0x760]
	0x0366E910 BL 0x1C16D08
	0x0366E914 BL 0x1C16F10
	0x0366E918 MOV X19, X0
	0x0366E91C ADRP X0, 0xACF000
	0x0366E920 LDR X0, [X0 + 0x7C8]
	0x0366E924 BL 0x1C16D08
	0x0366E928 MOV X1, X0
	0x0366E92C MOV X0, X19
	0x0366E930 MOV X2, X31
	0x0366E934 BL 0x3316014
	0x0366E938 ADRP X0, 0xACF000
	0x0366E93C LDR X0, [X0 + 0x7D8]
	0x0366E940 BL 0x1C16D08
	0x0366E944 MOV X1, X0
	0x0366E948 MOV X0, X19
	0x0366E94C BL 0x1C16DEC
	0x0366E950 LDR X0, [X0 + 0x10]
	0x0366E954 RET
	0x0366E958 LDR W0, [X0 + 0x18]
	0x0366E95C RET
	0x0366E960 SUB X31, X31, 0x30
	0x0366E964 STP X30, X21, [X31 + 0x10]
	0x0366E968 STP X20, X19, [X31 + 0x20]
	0x0366E96C ADRP X20, 0xD72000
	0x0366E970 LDRB W8, [X20 + 0x766]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD73000
	007 Move W8, [X22+1882]
	008 Move W19, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA93000
	016 Move X0, [X0+2408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1882], W8
	020 Compare X21, 0
	021 JumpIfEqual {67}
	022 Move X8, 0xA93000
	023 Move X8, [X8+2408]
	024 Move X9, [X21]
	025 Move X8, [X8]
	026 Move W11, [X9+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X9+200]
	030 Add X9, X9, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Compare X8, 0
	035 JumpIfEqual {79}
	036 Move X9, [X20+24]
	037 Move X12, [X8+24]
	038 Move W10, 23
	039 Move W11, 2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {74}
	047 Compare X12, 0
	048 JumpIfEqual {79}
	049 Move W11, [X12+24]
	050 Move X10, X31
	051 Add X12, X12, 32
	052 Add X13, X9, 32
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W14, [X9+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X10, X10, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X8+16]
	062 Move W9, [X20+16]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 NotImplemented "Instruction ORN not yet implemented."
	066 And W0, W8, 1
	067 Move W0, W31
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Move W8, [X8+16]
	075 Move W9, [X20+16]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: System.Boolean Equals(System.Object comparand)

Disassembly:
	0x0366E974 MOV X19, X0
	0x0366E978 TBNZ X8, 0x0, 0x366E99C

ISIL:
	001 Move W2, 1
	002 Call IPAddress.Equals, X0, X1, X2
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0366E97C ADRP X0, 0xACF000
	0x0366E980 LDR X0, [X0 + 0x7E0]
	0x0366E984 BL 0x1C16CF4
	0x0366E988 ADRP X0, 0xA8D000
	0x0366E98C LDR X0, [X0 + 0xFF0]
	0x0366E990 BL 0x1C16CF4
	0x0366E994 MOVZ W8, 0x1
	0x0366E998 STRB W8, [X20 + 0x766]
	0x0366E99C LDR X0, [X19 + 0x10]
	0x0366E9A0 CBZ X0, 0x366EA18
	0x0366E9A4 LDR X8, [X0 + 0x18]
	0x0366E9A8 ADRP X9, 0xA8D000
	0x0366E9AC ADRP X10, 0xACF000
	0x0366E9B0 LDR X9, [X9 + 0xFF0]
	0x0366E9B4 LDR X10, [X10 + 0x7E0]
	0x0366E9B8 LDR X11, [X0]
	0x0366E9BC CMP X8, 0x0
	0x0366E9C0 CSEL X8, X9, X10, EQ
	0x0366E9C4 LDR X20, [X8]
	0x0366E9C8 LDP X8, X1, [X11 + 0x168]
	0x0366E9CC BLR X8
	0x0366E9D0 LDR W8, [X19 + 0x18]
	0x0366E9D4 MOV X21, X0
	0x0366E9D8 MOV X0, X31
	0x0366E9DC STR W8, [X31 + 0xC]
	0x0366E9E0 BL 0x333AB78
	0x0366E9E4 MOV X1, X0
	0x0366E9E8 ADD X0, X31, 0xC
	0x0366E9EC MOV X2, X31
	0x0366E9F0 BL 0x337B824
	0x0366E9F4 MOV X2, X0
	0x0366E9F8 MOV X0, X20
	0x0366E9FC MOV X1, X21
	0x0366EA00 MOV X3, X31
	0x0366EA04 BL 0x3227BD4
	0x0366EA08 LDP X20, X19, [X31 + 0x20]
	0x0366EA0C LDP X30, X21, [X31 + 0x10]
	0x0366EA10 ADD X31, X31, 0x30
	0x0366EA14 RET
	0x0366EA18 BL 0x1C16F20
	0x0366EA1C STP X30, X21, [X31 - 0x20]!
	0x0366EA20 STP X20, X19, [X31 + 0x10]
	0x0366EA24 ADRP X20, 0xD72000
	0x0366EA28 ADRP X21, 0xACF000
	0x0366EA2C LDRB W8, [X20 + 0x767]
	0x0366EA30 LDR X21, [X21 + 0x7E8]
	0x0366EA34 MOV X19, X0
	0x0366EA38 TBNZ X8, 0x0, 0x366EA50
	0x0366EA3C ADRP X0, 0xACF000
	0x0366EA40 LDR X0, [X0 + 0x7E8]
	0x0366EA44 BL 0x1C16CF4
	0x0366EA48 MOVZ W8, 0x1
	0x0366EA4C STRB W8, [X20 + 0x767]
	0x0366EA50 LDR X0, [X21]
	0x0366EA54 LDR X20, [X19 + 0x10]
	0x0366EA58 LDR W19, [X19 + 0x18]
	0x0366EA5C BL 0x1C16F10
	0x0366EA60 MOV X1, X20
	0x0366EA64 MOV W2, W19
	0x0366EA68 MOV X3, X31
	0x0366EA6C MOV X21, X0
	0x0366EA70 BL 0x367F648
	0x0366EA74 LDP X20, X19, [X31 + 0x10]
	0x0366EA78 MOV X0, X21
	0x0366EA7C LDP X30, X21, [X31], #0x20
	0x0366EA80 RET
	0x0366EA84 SUB X31, X31, 0x60
	0x0366EA88 STP X30, X23, [X31 + 0x30]
	0x0366EA8C STP X22, X21, [X31 + 0x40]
	0x0366EA90 STP X20, X19, [X31 + 0x50]
	0x0366EA94 CBZ X1, 0x366EAF0
	0x0366EA98 MOV X20, X1
	0x0366EA9C MOV X19, X0
	0x0366EAA0 MOV X0, X1
	0x0366EAA4 MOV X1, X31
	0x0366EAA8 BL 0x367F200
	0x0366EAAC LDR X8, [X19]
	0x0366EAB0 MOV W21, W0
	0x0366EAB4 MOV X0, X19
	0x0366EAB8 LDP X9, X1, [X8 + 0x178]
	0x0366EABC BLR X9
	0x0366EAC0 CMP W21, W0
	0x0366EAC4 B.NE 0x366EAF4
	0x0366EAC8 LDR W8, [X20 + 0x10]
	0x0366EACC MOV X0, X20
	0x0366EAD0 CMP W8, 0x7
	0x0366EAD4 B.LE 0x366EBB4
	0x0366EAD8 LDP X20, X19, [X31 + 0x50]
	0x0366EADC LDP X22, X21, [X31 + 0x40]
	0x0366EAE0 LDP X30, X23, [X31 + 0x30]
	0x0366EAE4 MOV X1, X31
	0x0366EAE8 ADD X31, X31, 0x60
	0x0366EAEC B 0x367F890
	0x0366EAF0 BL 0x1C16F20
	0x0366EAF4 MOV X0, X20
	0x0366EAF8 MOV X1, X31
	0x0366EAFC BL 0x367F200
	0x0366EB00 ADRP X21, 0xAC5000
	0x0366EB04 LDR X21, [X21 + 0xBD0]
	0x0366EB08 MOV W20, W0
	0x0366EB0C MOV X0, X21
	0x0366EB10 BL 0x1C16D08
	0x0366EB14 MOVN X23, 0x0
	0x0366EB18 STP X0, X23, [X31 + 0x18]
	0x0366EB1C ADD X0, X31, 0x18
	0x0366EB20 MOV X1, X31
	0x0366EB24 STR W20, [X31 + 0x28]
	0x0366EB28 BL 0x33B162C
	0x0366EB2C MOV X20, X0
	0x0366EB30 MOV X0, X19
	0x0366EB34 MOV X1, X31
	0x0366EB38 BL 0x33BE520
	0x0366EB3C MOV X22, X0
	0x0366EB40 BL 0x19903C0
	0x0366EB44 LDR X8, [X22]
	0x0366EB48 MOV X0, X22
	0x0366EB4C LDR X9, [X8 + 0x2E8]
	0x0366EB50 LDR X1, [X8 + 0x2F0]
	0x0366EB54 BLR X9
	0x0366EB58 LDR X8, [X19]
	0x0366EB5C MOV X22, X0
	0x0366EB60 MOV X0, X19
	0x0366EB64 LDP X9, X1, [X8 + 0x178]
	0x0366EB68 BLR X9
	0x0366EB6C MOV W19, W0
	0x0366EB70 MOV X0, X21
	0x0366EB74 BL 0x1C16D08
	0x0366EB78 STP X0, X23, [X31]
	0x0366EB7C ADD X0, X31, 0x0
	0x0366EB80 MOV X1, X31
	0x0366EB84 STR W19, [X31 + 0x10]
	0x0366EB88 BL 0x33B162C
	0x0366EB8C MOV X19, X0
	0x0366EB90 ADRP X0, 0xACF000
	0x0366EB94 LDR X0, [X0 + 0x7F0]
	0x0366EB98 BL 0x1C16D08
	0x0366EB9C MOV X1, X20
	0x0366EBA0 MOV X2, X22
	0x0366EBA4 MOV X3, X19
	0x0366EBA8 MOV X4, X31
	0x0366EBAC BL 0x320A2DC
	0x0366EBB0 B 0x366EC24
	0x0366EBB4 MOV X1, X31
	0x0366EBB8 BL 0x33BE520
	0x0366EBBC MOV X20, X0
	0x0366EBC0 BL 0x19903C0
	0x0366EBC4 LDR X8, [X20]
	0x0366EBC8 MOV X0, X20
	0x0366EBCC LDR X9, [X8 + 0x2E8]
	0x0366EBD0 LDR X1, [X8 + 0x2F0]
	0x0366EBD4 BLR X9
	0x0366EBD8 MOV X20, X0
	0x0366EBDC MOV X0, X19
	0x0366EBE0 MOV X1, X31
	0x0366EBE4 BL 0x33BE520
	0x0366EBE8 MOV X19, X0
	0x0366EBEC BL 0x19903C0
	0x0366EBF0 LDR X8, [X19]
	0x0366EBF4 MOV X0, X19
	0x0366EBF8 LDR X9, [X8 + 0x2E8]
	0x0366EBFC LDR X1, [X8 + 0x2F0]
	0x0366EC00 BLR X9
	0x0366EC04 MOV X19, X0
	0x0366EC08 ADRP X0, 0xACF000
	0x0366EC0C LDR X0, [X0 + 0x7F8]
	0x0366EC10 BL 0x1C16D08
	0x0366EC14 MOV X1, X20
	0x0366EC18 MOV X2, X19
	0x0366EC1C MOV X3, X31
	0x0366EC20 BL 0x320A264
	0x0366EC24 MOV X19, X0
	0x0366EC28 ADRP X0, 0xA8D000
	0x0366EC2C LDR X0, [X0 + 0x578]
	0x0366EC30 BL 0x1C16D08
	0x0366EC34 BL 0x1C16F10
	0x0366EC38 MOV X20, X0
	0x0366EC3C ADRP X0, 0xACF000
	0x0366EC40 LDR X0, [X0 + 0x800]
	0x0366EC44 BL 0x1C16D08
	0x0366EC48 MOV X2, X0
	0x0366EC4C MOV X0, X20
	0x0366EC50 MOV X1, X19
	0x0366EC54 MOV X3, X31
	0x0366EC58 BL 0x330E16C
	0x0366EC5C ADRP X0, 0xACF000
	0x0366EC60 LDR X0, [X0 + 0x808]
	0x0366EC64 BL 0x1C16D08
	0x0366EC68 MOV X1, X0
	0x0366EC6C MOV X0, X20
	0x0366EC70 BL 0x1C16DEC
	0x0366EC74 STP X30, X21, [X31 - 0x20]!
	0x0366EC78 STP X20, X19, [X31 + 0x10]
	0x0366EC7C ADRP X21, 0xD72000
	0x0366EC80 LDRB W8, [X21 + 0x768]
	0x0366EC84 MOV X20, X1
	0x0366EC88 MOV X19, X0
	0x0366EC8C TBNZ X8, 0x0, 0x366ECA4
	0x0366EC90 ADRP X0, 0xA92000
	0x0366EC94 LDR X0, [X0 + 0xBB8]
	0x0366EC98 BL 0x1C16CF4
	0x0366EC9C MOVZ W8, 0x1
	0x0366ECA0 STRB W8, [X21 + 0x768]
	0x0366ECA4 CBZ X20, 0x366ED14
	0x0366ECA8 ADRP X8, 0xA92000
	0x0366ECAC LDR X8, [X8 + 0xBB8]
	0x0366ECB0 LDR X9, [X20]
	0x0366ECB4 LDR X8, [X8]
	0x0366ECB8 LDRB W11, [X9 + 0x130]
	0x0366ECBC LDRB W10, [X8 + 0x130]
	0x0366ECC0 CMP W11, W10
	0x0366ECC4 B.CC 0x366ED14
	0x0366ECC8 LDR X9, [X9 + 0xC8]
	0x0366ECCC ADD X9, X9, X10, 0x3, LSL
	0x0366ECD0 LDUR X9, [X9 - 0x8]
	0x0366ECD4 CMP X9, X8
	0x0366ECD8 CSEL X20, X20, X31, EQ
	0x0366ECDC B.NE 0x366ED14
	0x0366ECE0 CBZ X20, 0x366ED24
	0x0366ECE4 LDR X0, [X20 + 0x10]
	0x0366ECE8 CBZ X0, 0x366ED24
	0x0366ECEC LDR X8, [X0]
	0x0366ECF0 LDR X1, [X19 + 0x10]
	0x0366ECF4 LDP X9, X2, [X8 + 0x138]
	0x0366ECF8 BLR X9
	0x0366ECFC TBZ X0, 0x0, 0x366ED14
	0x0366ED00 LDR W8, [X20 + 0x18]
	0x0366ED04 LDR W9, [X19 + 0x18]
	0x0366ED08 CMP W8, W9
	0x0366ED0C CSET W0, EQ
	0x0366ED10 B 0x366ED18
	0x0366ED14 MOV W0, W31
	0x0366ED18 LDP X20, X19, [X31 + 0x10]
	0x0366ED1C LDP X30, X21, [X31], #0x20
	0x0366ED20 RET
	0x0366ED24 BL 0x1C16F20
	0x0366ED28 STP X30, X19, [X31 - 0x10]!
	0x0366ED2C MOV X19, X0
	0x0366ED30 LDR X0, [X0 + 0x10]
	0x0366ED34 CBZ X0, 0x366ED54
	0x0366ED38 LDR X8, [X0]
	0x0366ED3C LDP X9, X1, [X8 + 0x158]
	0x0366ED40 BLR X9
	0x0366ED44 LDR W8, [X19 + 0x18]
	0x0366ED48 EOR W0, W8, W0, 0x0
	0x0366ED4C LDP X30, X19, [X31], #0x10
	0x0366ED50 RET
	0x0366ED54 BL 0x1C16F20
	0x0366ED58 STR X30, [X31 - 0x30]!
	0x0366ED5C STP X22, X21, [X31 + 0x10]
	0x0366ED60 STP X20, X19, [X31 + 0x20]
	0x0366ED64 ADRP X19, 0xD72000
	0x0366ED68 ADRP X21, 0xA92000

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 32
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X20, 0xD73000
	015 Move X19, X0
	016 Move [X29-8], X8
	017 Move W8, [X20+1883]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0xABA000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0xAD0000
	026 Move X0, [X0+1936]
	027 Call 0x1C17CF4
	028 Move X0, 0xAD0000
	029 Move X0, [X0+1944]
	030 Call 0x1C17CF4
	031 Move X0, 0xAD0000
	032 Move X0, [X0+1952]
	033 Call 0x1C17CF4
	034 Move X0, 0xAB9000
	035 Move X0, [X0+3424]
	036 Call 0x1C17CF4
	037 Move X0, 0xAD0000
	038 Move X0, [X0+1960]
	039 Call 0x1C17CF4
	040 Move X0, 0xABA000
	041 Move X0, [X0+40]
	042 Call 0x1C17CF4
	043 Move X0, 0xAB4000
	044 Move X0, [X0+2104]
	045 Call 0x1C17CF4
	046 Move X0, 0xAB9000
	047 Move X0, [X0+3944]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+1883], W8
	051 Move [X29-24], X31
	052 Move [X29-16], X31
	053 Move W0, [X19+40]
	054 Compare W0, 0
	055 JumpIfNotEqual {268}
	056 Move X8, [X19+24]
	057 Compare X8, 0
	058 JumpIfEqual {181}
	059 Add X9, X31, 0
	060 Subtract X20, X9, 32
	061 Add X31, X20, 0
	062 Move X10, 0xAD0000
	063 Move X10, [X10+1936]
	064 Move [X9-32], X31
	065 Move [X9-24], X31
	066 Move [X9-16], W31
	067 Move W22, [X8+24]
	068 Move X21, [X10]
	069 Add X23, X8, 32
	070 Move X9, [X21+56]
	071 Compare X9, 0
	072 JumpIfNotEqual {82}
	073 Move X0, 0xAAF000
	074 Move X0, [X0+112]
	075 Call 0x1C17CF4
	076 Move X9, [X21+56]
	077 Compare X9, 0
	078 JumpIfNotEqual {82}
	079 Move X0, X21
	080 Call 0x1C5D6E0
	081 Move X9, [X21+56]
	082 Move X2, [X9+24]
	083 Move X0, X23
	084 Move X1, X22
	085 Call MemoryMarshal.GetReference, X0
	086 Move X8, 0x40000000
	087 Move X9, INVALID
	088 Add X8, X8, X22
	089 NotImplemented "Instruction MOVK not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, 0xAB9000
	092 Move X8, [X8+3424]
	093 Move W2, 20
	094 Move X1, X20
	095 Move X3, [X8]
	096 Move W8, W22
	097 ShiftRight W8, 31
	098 And W8, W8, 0x3FFFFFFF
	099 Move [X29-24], X0
	100 Move [X29-16], X8
	101 Subtract X0, X29, 24
	102 Call 0x25BF5D8, X0, X1
	103 Move X8, 0xABA000
	104 Move X8, [X8+40]
	105 Move X8, [X8]
	106 Move X0, [X8+32]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move W2, [X19+16]
	114 Add X0, X20, 16
	115 Move W1, 4
	116 Move X3, X31
	117 Call BitConverter.TryWriteBytes, X0, X1
	118 Move X8, 0xAB9000
	119 Move X8, [X8+3944]
	120 Move W1, 20
	121 Move X0, X20
	122 Move X2, [X8]
	123 Call 0x25FC09C, X0
	124 Move X23, 0xABA000
	125 Move X23, [X23+2520]
	126 Move X21, X0
	127 Move X20, X1
	128 Move X0, [X23]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X22, 0xD6F000
	134 Move W8, [X22+2816]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0xABA000
	138 Move X0, [X0+2520]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X22+2816], W8
	142 Move X0, [X23]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X23]
	148 Move X8, [X0+184]
	149 Move X25, 0xD6F000
	150 Move W9, [X25+2817]
	151 Move X22, [X8]
	152 Compare W9, 0
	153 JumpIfNotEqual {165}
	154 Move X0, 0xABA000
	155 Move X0, [X0+2520]
	156 Call 0x1C17CF4
	157 Move X0, 0xAB9000
	158 Move X0, [X0+3536]
	159 Call 0x1C17CF4
	160 Move X0, 0xAB5000
	161 Move X0, [X0+2752]
	162 Call 0x1C17CF4
	163 Move W8, 1
	164 Move [X25+2817], W8
	165 Move X8, 0xAB9000
	166 Move X8, [X8+3536]
	167 Move X0, X21
	168 Move X1, X20
	169 Move X2, [X8]
	170 Call 0x2219CF0, X0
	171 Move X8, [X23]
	172 Move X21, X0
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X8
	177 Call 0x1C17DFC
	178 Move X0, X21
	179 Move W1, W20
	180 Move X2, X22
	181 Move X8, 0xAD0000
	182 Move X8, [X8+1952]
	183 Add X20, X19, 16
	184 Move X0, [X8]
	185 Move X8, [X0+56]
	186 Compare X8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C5D6E0
	189 Move X8, 0xAD0000
	190 Move X8, [X8+1944]
	191 Move X21, [X8]
	192 Move X8, [X21+56]
	193 Compare X8, 0
	194 JumpIfNotEqual {204}
	195 Move X0, 0xAAF000
	196 Move X0, [X0+112]
	197 Call 0x1C17CF4
	198 Move X8, [X21+56]
	199 Compare X8, 0
	200 JumpIfNotEqual {204}
	201 Move X0, X21
	202 Call 0x1C5D6E0
	203 Move X8, [X21+56]
	204 Move X2, [X8+24]
	205 Move W1, 1
	206 Move X0, X20
	207 Call MemoryMarshal.GetReference, X0
	208 Move X22, 0xABA000
	209 Move X22, [X22+2520]
	210 Move X20, X0
	211 Move X8, [X22]
	212 Move W9, [X8+224]
	213 Compare W9, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X8
	216 Call 0x1C17DFC
	217 Move X21, 0xD6F000
	218 Move W8, [X21+2816]
	219 Compare W8, 0
	220 JumpIfNotEqual {226}
	221 Move X0, 0xABA000
	222 Move X0, [X0+2520]
	223 Call 0x1C17CF4
	224 Move W8, 1
	225 Move [X21+2816], W8
	226 Move X0, [X22]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {232}
	230 Call 0x1C17DFC
	231 Move X0, [X22]
	232 Move X8, [X0+184]
	233 Move X23, 0xD6F000
	234 Move W9, [X23+2817]
	235 Move X21, [X8]
	236 Compare W9, 0
	237 JumpIfNotEqual {249}
	238 Move X0, 0xABA000
	239 Move X0, [X0+2520]
	240 Call 0x1C17CF4
	241 Move X0, 0xAB9000
	242 Move X0, [X0+3536]
	243 Call 0x1C17CF4
	244 Move X0, 0xAB5000
	245 Move X0, [X0+2752]
	246 Call 0x1C17CF4
	247 Move W8, 1
	248 Move [X23+2817], W8
	249 Move X8, 0xAB9000
	250 Move X8, [X8+3536]
	251 Move W1, 4
	252 Move X0, X20
	253 Move X2, [X8]
	254 Call 0x2219CF0, X0
	255 Move X8, [X22]
	256 Move X20, X0
	257 Move W9, [X8+224]
	258 Compare W9, 0
	259 JumpIfNotEqual {262}
	260 Move X0, X8
	261 Call 0x1C17DFC
	262 Move W1, 4
	263 Move X0, X20
	264 Move X2, X21
	265 Move X3, X31
	266 Call Marvin.ComputeHash32, X0, X1, X2
	267 Move [X19+40], W0
	268 Move X8, [X24+40]
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Add X31, X29, 0
	272 Move X20, [X31+64]
	273 Move X19, [X31+72]
	274 Move X22, [X31+48]
	275 Move X21, [X31+56]
	276 Move X24, [X31+32]
	277 Move X23, [X31+40]
	278 Move X25, [X31+16]
	279 Move X29, [X31+80]
	280 Move X30, [X31+88]
	281 Return X0
	282 Call 0x1C17F30
	283 Move X1, X21
	284 Call 0x1C17DEC
	285 Call 0x3EB2B20

Method: System.Net.IPAddress MapToIPv6()

Disassembly:
	0x0366ED6C LDRB W8, [X19 + 0x769]
	0x0366ED70 LDR X21, [X21 + 0x968]
	0x0366ED74 TBNZ X8, 0x0, 0x366ED98
	0x0366ED78 ADRP X0, 0xA92000
	0x0366ED7C LDR X0, [X0 + 0x968]
	0x0366ED80 BL 0x1C16CF4
	0x0366ED84 ADRP X0, 0xA92000
	0x0366ED88 LDR X0, [X0 + 0xBB8]
	0x0366ED8C BL 0x1C16CF4
	0x0366ED90 MOVZ W8, 0x1
	0x0366ED94 STRB W8, [X19 + 0x769]
	0x0366ED98 LDR X0, [X21]
	0x0366ED9C ADRP X22, 0xA92000
	0x0366EDA0 LDR W8, [X0 + 0xE0]
	0x0366EDA4 LDR X22, [X22 + 0xBB8]
	0x0366EDA8 CBNZ W8, 0x366EDB4
	0x0366EDAC BL 0x1C16DFC
	0x0366EDB0 LDR X0, [X21]
	0x0366EDB4 LDR X8, [X0 + 0xB8]
	0x0366EDB8 LDR X0, [X22]
	0x0366EDBC LDR X19, [X8]
	0x0366EDC0 BL 0x1C16F10
	0x0366EDC4 MOV X1, X19
	0x0366EDC8 MOV W2, W31
	0x0366EDCC MOV X20, X0
	0x0366EDD0 BL 0x366E898
	0x0366EDD4 LDR X8, [X22]
	0x0366EDD8 LDR X8, [X8 + 0xB8]
	0x0366EDDC STR X20, [X8]
	0x0366EDE0 LDR X8, [X21]
	0x0366EDE4 LDR X0, [X22]
	0x0366EDE8 LDR X8, [X8 + 0xB8]
	0x0366EDEC LDR X19, [X8 + 0x20]
	0x0366EDF0 BL 0x1C16F10
	0x0366EDF4 MOV X1, X19
	0x0366EDF8 MOV W2, W31
	0x0366EDFC MOV X20, X0
	0x0366EE00 BL 0x366E898
	0x0366EE04 LDR X8, [X22]
	0x0366EE08 LDP X22, X21, [X31 + 0x10]
	0x0366EE0C LDR X8, [X8 + 0xB8]
	0x0366EE10 STR X20, [X8 + 0x8]
	0x0366EE14 LDP X20, X19, [X31 + 0x20]
	0x0366EE18 LDR X30, [X31], #0x30
	0x0366EE1C RET
	0x0366EE20 STR X30, [X31 - 0x30]!
	0x0366EE24 STP X22, X21, [X31 + 0x10]
	0x0366EE28 STP X20, X19, [X31 + 0x20]
	0x0366EE2C ADRP X21, 0xD72000
	0x0366EE30 ADRP X22, 0xA87000
	0x0366EE34 LDRB W8, [X21 + 0x76A]
	0x0366EE38 LDR X22, [X22 + 0x278]
	0x0366EE3C MOV X20, X1
	0x0366EE40 MOV X19, X0
	0x0366EE44 TBNZ X8, 0x0, 0x366EE5C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD73000
	005 Move W8, [X19+1884]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA93000
	012 Move X0, [X0+2408]
	013 Call 0x1C17CF4
	014 Move X0, 0xAB6000
	015 Move X0, [X0+2256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1884], W8
	019 Move X8, [X20+24]
	020 Compare X8, 0
	021 JumpIfNotEqual {58}
	022 Move X8, 0xAB6000
	023 Move W20, [X20+16]
	024 Move X8, [X8+2256]
	025 Move W1, 8
	026 Move X0, [X8]
	027 Call 0x1C17D6C
	028 Compare X0, 0
	029 JumpIfEqual {64}
	030 Move W8, [X0+24]
	031 Move X19, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W9, 0xFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction STRH not yet implemented."
	036 NotImplemented "Instruction REV not yet implemented."
	037 Move W9, W9
	038 ShiftRight W9, 16
	039 And W9, W9, 0x7FFFFFFF
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Move W8, W20
	043 ShiftRight W8, 8
	044 And W8, W8, 0x7FFFFFFF
	045 NotImplemented "Instruction BFM not yet implemented."
	046 NotImplemented "Instruction STRH not yet implemented."
	047 Move X8, 0xA93000
	048 Move X8, [X8+2408]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X20, X0
	053 Call Object..ctor, X0
	054 Move [X20+24], X19
	055 Move [X20+32], X31
	056 Move [X20+40], W31
	057 Move [X20+16], W31
	058 Move X0, X20
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Return X0
	063 Call 0x1C17F28
	064 Call 0x1C17F20

Method: System.Byte[] ThrowAddressNullException()

Disassembly:
	0x0366DBA4 LDR X0, [X0 + 0xAC0]
	0x0366DBA8 BL 0x1C16CF4
	0x0366DBAC MOVZ W8, 0x1
	0x0366DBB0 STRB W8, [X25 + 0xB01]
	0x0366DBB4 ADRP X8, 0xAB9000
	0x0366DBB8 LDR X8, [X8 + 0xDD0]
	0x0366DBBC MOV X0, X21
	0x0366DBC0 MOV X1, X20
	0x0366DBC4 LDR X2, [X8]
	0x0366DBC8 BL 0x2218CF0
	0x0366DBCC LDR X8, [X23]
	0x0366DBD0 MOV X21, X0
	0x0366DBD4 LDR W9, [X8 + 0xE0]
	0x0366DBD8 CBNZ W9, 0x366DBE4
	0x0366DBDC MOV X0, X8
	0x0366DBE0 BL 0x1C16DFC
	0x0366DBE4 MOV X0, X21
	0x0366DBE8 MOV W1, W20
	0x0366DBEC MOV X2, X22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA8C000
	004 Move X0, [X0+1320]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAD1000
	009 Move X0, [X0+1848]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call ArgumentNullException..ctor, X0, X1
	015 Move X0, 0xAD1000
	016 Move X0, [X0+1856]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0366EE48 ADRP X0, 0xA87000
	0x0366EE4C LDR X0, [X0 + 0x278]
	0x0366EE50 BL 0x1C16CF4
	0x0366EE54 MOVZ W8, 0x1
	0x0366EE58 STRB W8, [X21 + 0x76A]
	0x0366EE5C LDR X8, [X22]
	0x0366EE60 MOV X0, X31
	0x0366EE64 LDR X8, [X8 + 0xB8]
	0x0366EE68 LDR X8, [X8]
	0x0366EE6C STR X8, [X19 + 0x70]
	0x0366EE70 BL 0x3241948
	0x0366EE74 STR X0, [X19 + 0x78]
	0x0366EE78 MOV X0, X19
	0x0366EE7C MOV X1, X20
	0x0366EE80 MOV X2, X31
	0x0366EE84 BL 0x367D708
	0x0366EE88 LDR X0, [X19 + 0x78]
	0x0366EE8C CBZ X0, 0x366EEB4
	0x0366EE90 LDR X8, [X0]
	0x0366EE94 LDR X9, [X8 + 0x338]
	0x0366EE98 LDR X1, [X8 + 0x340]
	0x0366EE9C BLR X9
	0x0366EEA0 STR X0, [X19 + 0x80]
	0x0366EEA4 LDP X20, X19, [X31 + 0x20]
	0x0366EEA8 LDP X22, X21, [X31 + 0x10]
	0x0366EEAC LDR X30, [X31], #0x30
	0x0366EEB0 RET
	0x0366EEB4 BL 0x1C16F20
	0x0366EEB8 STR X30, [X31 - 0x30]!
	0x0366EEBC STP X22, X21, [X31 + 0x10]
	0x0366EEC0 STP X20, X19, [X31 + 0x20]
	0x0366EEC4 ADRP X22, 0xD72000
	0x0366EEC8 ADRP X21, 0xACF000
	0x0366EECC LDRB W8, [X22 + 0x76B]
	0x0366EED0 LDR X21, [X21 + 0x468]
	0x0366EED4 MOV X20, X1
	0x0366EED8 MOV X19, X0
	0x0366EEDC TBNZ X8, 0x0, 0x366EF0C
	0x0366EEE0 ADRP X0, 0xACF000
	0x0366EEE4 LDR X0, [X0 + 0x468]
	0x0366EEE8 BL 0x1C16CF4
	0x0366EEEC ADRP X0, 0xACF000
	0x0366EEF0 LDR X0, [X0 + 0x810]
	0x0366EEF4 BL 0x1C16CF4
	0x0366EEF8 ADRP X0, 0xAC9000
	0x0366EEFC LDR X0, [X0 + 0xB00]
	0x0366EF00 BL 0x1C16CF4
	0x0366EF04 MOVZ W8, 0x1
	0x0366EF08 STRB W8, [X22 + 0x76B]
	0x0366EF0C LDR X0, [X21]
	0x0366EF10 LDR W8, [X0 + 0xE0]
	0x0366EF14 CBNZ W8, 0x366EF1C
	0x0366EF18 BL 0x1C16DFC
	0x0366EF1C BL 0x366A368
	0x0366EF20 TBZ X0, 0x0, 0x366EF54
	0x0366EF24 LDR X0, [X21]
	0x0366EF28 ADRP X22, 0xACF000
	0x0366EF2C ADRP X21, 0xAC9000
	0x0366EF30 LDR W8, [X0 + 0xE0]
	0x0366EF34 LDR X22, [X22 + 0x810]
	0x0366EF38 LDR X21, [X21 + 0xB00]
	0x0366EF3C CBNZ W8, 0x366EF44
	0x0366EF40 BL 0x1C16DFC
	0x0366EF44 LDR X1, [X22]
	0x0366EF48 LDR X2, [X21]
	0x0366EF4C MOV X0, X19
	0x0366EF50 BL 0x366A4BC
	0x0366EF54 STRB W31, [X31 + 0xC]
	0x0366EF58 ADD X1, X31, 0xC
	0x0366EF5C MOV X0, X19
	0x0366EF60 MOV X2, X31
	0x0366EF64 BL 0x33DE64C
	0x0366EF68 LDRB W8, [X19 + 0x49]
	0x0366EF6C CBZ W8, 0x366EF7C
	0x0366EF70 MOV X21, X31
	0x0366EF74 MOVZ W22, 0x4
	0x0366EF78 B 0x366EF8C
	0x0366EF7C MOVZ W8, 0x1
	0x0366EF80 MOV X21, X31
	0x0366EF84 STRB W8, [X19 + 0x49]
	0x0366EF88 MOVZ W22, 0x5
	0x0366EF8C LDRB W8, [X31 + 0xC]
	0x0366EF90 CBZ W8, 0x366EFA0
	0x0366EF94 MOV X0, X19
	0x0366EF98 MOV X1, X31
	0x0366EF9C BL 0x33E14E4
	0x0366EFA0 CBNZ X21, 0x366EFE4
	0x0366EFA4 CMP W22, 0x5
	0x0366EFA8 B.EQ 0x366EFB0
	0x0366EFAC CBNZ W22, 0x366EFD4
	0x0366EFB0 MOV X0, X19
	0x0366EFB4 MOV W1, W31
	0x0366EFB8 MOV X2, X31
	0x0366EFBC BL 0x367DB54
	0x0366EFC0 MOV X21, X31
	0x0366EFC4 MOV X0, X19
	0x0366EFC8 MOV X1, X20
	0x0366EFCC BL 0x366F134
	0x0366EFD0 CBNZ X21, 0x366EFE4
	0x0366EFD4 LDP X20, X19, [X31 + 0x20]
	0x0366EFD8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD73000
	007 Move X20, 0xAD0000
	008 Move X21, 0xA93000
	009 Move X22, 0xA86000
	010 Move W8, [X19+1885]
	011 Move X20, [X20+1968]
	012 Move X21, [X21+2408]
	013 Move X22, [X22+1560]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA86000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xA93000
	022 Move X0, [X0+2408]
	023 Call 0x1C17CF4
	024 Move X0, 0xAD0000
	025 Move X0, [X0+1968]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1885], W8
	029 Move X0, [X20]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X19, X0
	033 Call ReadOnlyIPAddress..ctor, X0, X1
	034 Move X8, [X21]
	035 Move X8, [X8+184]
	036 Move [X8], X19
	037 Move X0, [X20]
	038 Call 0x1C17F10
	039 Move W1, 127
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 Move X19, X0
	042 Call ReadOnlyIPAddress..ctor, X0, X1
	043 Move X8, [X21]
	044 Move X8, [X8+184]
	045 Move [X8+8], X19
	046 Move X0, [X20]
	047 Call 0x1C17F10
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W1, TEMP
	051 Move X19, X0
	052 Call ReadOnlyIPAddress..ctor, X0, X1
	053 Move X8, [X21]
	054 Move W1, 16
	055 Move X8, [X8+184]
	056 Move [X8+16], X19
	057 Move [X8+24], X19
	058 Move X0, [X22]
	059 Call 0x1C17D6C
	060 Move X8, [X21]
	061 Move X19, X0
	062 Move X0, X8
	063 Call 0x1C17F10
	064 Move X1, X19
	065 Move X2, X31
	066 Move X20, X0
	067 Call IPAddress..ctor, X0, X1, X2
	068 Move X8, [X21]
	069 Move W1, 16
	070 Move X8, [X8+184]
	071 Move [X8+32], X20
	072 Move X0, [X22]
	073 Call 0x1C17D6C
	074 Compare X0, 0
	075 JumpIfEqual {110}
	076 Move W8, [X0+24]
	077 Move X19, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W8, 1
	080 Move [X19+47], W8
	081 Move X0, [X21]
	082 Call 0x1C17F10
	083 Move X1, X19
	084 Move X2, X31
	085 Move X20, X0
	086 Call IPAddress..ctor, X0, X1, X2
	087 Move X8, [X21]
	088 Move W1, 16
	089 Move X8, [X8+184]
	090 Move [X8+40], X20
	091 Move X0, [X22]
	092 Call 0x1C17D6C
	093 Move X8, [X21]
	094 Move X19, X0
	095 Move X0, X8
	096 Call 0x1C17F10
	097 Move X1, X19
	098 Move X2, X31
	099 Move X20, X0
	100 Call IPAddress..ctor, X0, X1, X2
	101 Move X8, [X21]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X8, [X8+184]
	105 Move [X8+48], X20
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X30, [X31+48]
	109 Return 
	110 Call 0x1C17F20
	111 Call 0x1C17F28

