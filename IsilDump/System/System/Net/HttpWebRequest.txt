Type: System.Net.HttpWebRequest

Method: System.Void .cctor()

Disassembly:
	0x0369CF84 LDR X30, [X31], #0x10
	0x0369CF88 RET
	0x0369CF8C BL 0x1C16F20
	0x0369CF90 LDR X0, [X0 + 0x138]
	0x0369CF94 RET
	0x0369CF98 LDR X8, [X0 + 0x138]
	0x0369CF9C CBZ X8, 0x369CFA8
	0x0369CFA0 LDR X0, [X8 + 0x10]
	0x0369CFA4 RET
	0x0369CFA8 MOV X0, X31
	0x0369CFAC RET
	0x0369CFB0 STP X30, X21, [X31 - 0x20]!
	0x0369CFB4 STP X20, X19, [X31 + 0x10]
	0x0369CFB8 ADRP X21, 0xD44000
	0x0369CFBC LDRB W8, [X21 + 0x8BD]
	0x0369CFC0 MOV X20, X1
	0x0369CFC4 MOV X19, X0
	0x0369CFC8 TBNZ X8, 0x0, 0x369CFE0
	0x0369CFCC ADRP X0, 0xA9D000
	0x0369CFD0 LDR X0, [X0 + 0x538]
	0x0369CFD4 BL 0x1C16CF4
	0x0369CFD8 MOVZ W8, 0x1
	0x0369CFDC STRB W8, [X21 + 0x8BD]
	0x0369CFE0 CBZ X20, 0x369D008
	0x0369CFE4 ADRP X8, 0xA9D000
	0x0369CFE8 LDR X8, [X8 + 0x538]
	0x0369CFEC LDR X0, [X8]
	0x0369CFF0 BL 0x1C16F10
	0x0369CFF4 MOV X1, X20
	0x0369CFF8 MOV X21, X0
	0x0369CFFC BL 0x3696914
	0x0369D000 STR X21, [X19 + 0x138]
	0x0369D004 B 0x369D00C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD45000
	006 Move X20, 0xA80000
	007 Move X19, 0xAA3000
	008 Move W8, [X21+2226]
	009 Move X20, [X20+2952]
	010 Move X19, [X19+1904]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA80000
	016 Move X0, [X0+2952]
	017 Call 0x1C17CF4
	018 Move X0, 0xAA3000
	019 Move X0, [X0+1904]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2226], W8
	023 Move X8, [X20]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move X8, [X8+184]
	026 Move [X8], D0
	027 Move X0, [X19]
	028 Call 0x1C17F10
	029 Move W1, 1
	030 Move X2, X31
	031 Move X19, X0
	032 Call RequestCachePolicy..ctor, X0, X1
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move [X8+8], X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: System.Void .ctor(System.Uri uri)

Disassembly:
	0x0369CDE8 STRB W20, [X19 + 0xC8]
	0x0369CDEC LDP X20, X19, [X31 + 0x10]
	0x0369CDF0 LDR X30, [X31], #0x20
	0x0369CDF4 RET
	0x0369CDF8 B 0x369CC98
	0x0369CDFC LDR X0, [X0 + 0xD0]
	0x0369CE00 RET
	0x0369CE04 LDR W0, [X0 + 0xD8]
	0x0369CE08 RET
	0x0369CE0C STP X30, X19, [X31 - 0x10]!
	0x0369CE10 ADDS W31, W1, 0x2
	0x0369CE14 B.LE 0x369CE24
	0x0369CE18 STR W1, [X0 + 0xD8]
	0x0369CE1C LDP X30, X19, [X31], #0x10
	0x0369CE20 RET
	0x0369CE24 ADRP X0, 0xA5F000
	0x0369CE28 LDR X0, [X0 + 0x760]
	0x0369CE2C BL 0x1C16D08
	0x0369CE30 BL 0x1C16F10
	0x0369CE34 MOV X19, X0
	0x0369CE38 ADRP X0, 0xA61000
	0x0369CE3C LDR X0, [X0 + 0xEC8]
	0x0369CE40 BL 0x1C16D08
	0x0369CE44 MOV X1, X0
	0x0369CE48 MOV X0, X19
	0x0369CE4C MOV X2, X31
	0x0369CE50 BL 0x3316014
	0x0369CE54 ADRP X0, 0xAA2000
	0x0369CE58 LDR X0, [X0 + 0x7D8]
	0x0369CE5C BL 0x1C16D08
	0x0369CE60 MOV X1, X0
	0x0369CE64 MOV X0, X19
	0x0369CE68 BL 0x1C16DEC
	0x0369CE6C STR X30, [X31 - 0x20]!
	0x0369CE70 STP X20, X19, [X31 + 0x10]
	0x0369CE74 ADRP X20, 0xD44000
	0x0369CE78 LDRB W8, [X20 + 0x8BC]
	0x0369CE7C MOV X19, X0
	0x0369CE80 TBNZ X8, 0x0, 0x369CE98
	0x0369CE84 ADRP X0, 0xA9E000
	0x0369CE88 LDR X0, [X0 + 0x190]
	0x0369CE8C BL 0x1C16CF4
	0x0369CE90 MOVZ W8, 0x1
	0x0369CE94 STRB W8, [X20 + 0x8BC]
	0x0369CE98 LDR X0, [X19 + 0x78]
	0x0369CE9C CBZ X0, 0x369CEBC
	0x0369CEA0 ADRP X8, 0xA9E000
	0x0369CEA4 LDR X8, [X8 + 0x190]
	0x0369CEA8 LDP X20, X19, [X31 + 0x10]
	0x0369CEAC MOV X2, X31
	0x0369CEB0 LDR X1, [X8]
	0x0369CEB4 LDR X30, [X31], #0x20
	0x0369CEB8 B 0x366456C
	0x0369CEBC BL 0x1C16F20
	0x0369CEC0 STR X30, [X31 - 0x20]!
	0x0369CEC4 STP X20, X19, [X31 + 0x10]
	0x0369CEC8 ADRP X20, 0xD44000
	0x0369CECC LDRB W8, [X20 + 0x91F]
	0x0369CED0 MOV X19, X0
	0x0369CED4 CBNZ W8, 0x369CEEC
	0x0369CED8 ADRP X0, 0xAA1000
	0x0369CEDC LDR X0, [X0 + 0xC00]
	0x0369CEE0 BL 0x1C16CF4
	0x0369CEE4 MOVZ W8, 0x1
	0x0369CEE8 STRB W8, [X20 + 0x91F]
	0x0369CEEC ADRP X20, 0xAA1000
	0x0369CEF0 LDR X20, [X20 + 0xC00]
	0x0369CEF4 LDR X0, [X20]
	0x0369CEF8 LDR W8, [X0 + 0xE0]
	0x0369CEFC CBNZ W8, 0x369CF08
	0x0369CF00 BL 0x1C16DFC
	0x0369CF04 LDR X0, [X20]
	0x0369CF08 LDR X8, [X0 + 0xB8]
	0x0369CF0C LDR X9, [X19]
	0x0369CF10 MOV X0, X19
	0x0369CF14 LDR X20, [X8]
	0x0369CF18 LDR X8, [X9 + 0x228]
	0x0369CF1C LDR X1, [X9 + 0x230]
	0x0369CF20 BLR X8
	0x0369CF24 CMP X20, X0
	0x0369CF28 LDP X20, X19, [X31 + 0x10]
	0x0369CF2C CSET W0, EQ
	0x0369CF30 LDR X30, [X31], #0x20
	0x0369CF34 RET
	0x0369CF38 LDRB W0, [X0 + 0x179]
	0x0369CF3C RET
	0x0369CF40 LDRB W0, [X0 + 0x10C]
	0x0369CF44 RET
	0x0369CF48 AND W8, W1, 0x1
	0x0369CF4C STRB W8, [X0 + 0x10C]
	0x0369CF50 RET
	0x0369CF54 LDR X0, [X0 + 0x28]
	0x0369CF58 RET
	0x0369CF5C STR X30, [X31 - 0x10]!
	0x0369CF60 LDR X8, [X0 + 0xD0]
	0x0369CF64 CBZ X8, 0x369CF8C
	0x0369CF68 LDRB W9, [X8 + 0x30]
	0x0369CF6C CBZ W9, 0x369CF80
	0x0369CF70 LDRB W8, [X8 + 0x32]
	0x0369CF74 CMP W8, 0x0
	0x0369CF78 CSET W0, EQ
	0x0369CF7C B 0x369CF84
	0x0369CF80 MOV W0, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD45000
	009 Move X23, 0xA5A000
	010 Move X22, 0xA81000
	011 Move X21, 0xA9F000
	012 Move W8, [X24+2227]
	013 Move X23, [X23+632]
	014 Move X22, [X22+1232]
	015 Move X21, [X21+360]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0xA9F000
	023 Move X0, [X0+360]
	024 Call 0x1C17CF4
	025 Move X0, 0xA5E000
	026 Move X0, [X0+3264]
	027 Call 0x1C17CF4
	028 Move X0, 0xA5A000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move X0, 0xAA2000
	032 Move X0, [X0+3576]
	033 Call 0x1C17CF4
	034 Move X0, 0xA9F000
	035 Move X0, [X0+208]
	036 Call 0x1C17CF4
	037 Move X0, 0xA81000
	038 Move X0, [X0+1232]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X24+2227], W8
	042 Move W8, 257
	043 Move TEMP, 0
	044 Not TEMP
	045 Move X9, TEMP
	046 Move W10, 1
	047 Move W11, 50
	048 NotImplemented "Instruction STURH not yet implemented."
	049 Move [X19+80], X9
	050 Move [X19+128], W10
	051 Move [X19+132], W11
	052 Move X8, [X23]
	053 Move X23, 0xA9F000
	054 Move X8, [X8+184]
	055 Move X9, [X8]
	056 Move X8, [X22]
	057 Move [X19+160], W10
	058 Move X22, 0xA5E000
	059 Move [X19+136], X9
	060 Move [X19+144], X8
	061 Move [X19+152], X8
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Move X22, [X22+3264]
	065 Move X23, [X23+208]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X21]
	070 Move X8, [X0+184]
	071 Move X9, -45801472
	072 Move V0, [X9+2768]
	073 Move X8, [X8+16]
	074 Move [X19+216], D0
	075 Move [X19+168], X8
	076 Move X0, [X22]
	077 Move X22, 0xAA2000
	078 Move X22, [X22+3576]
	079 Call 0x1C17F10
	080 Move X1, X31
	081 Move X21, X0
	082 Call Object..ctor, X0
	083 Move W8, 0x93E0
	084 NotImplemented "Instruction MOVK not yet implemented."
	085 Move [X19+272], X21
	086 Move [X19+288], W8
	087 Move X0, [X23]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X19
	093 Move X1, X31
	094 Call WebRequest..ctor, X0
	095 Move X0, X31
	096 Move [X19+32], X20
	097 Move [X19+40], X20
	098 Call WebRequest.get_InternalDefaultWebProxy
	099 Move [X19+192], X0
	100 Move X0, [X22]
	101 Call 0x1C17F10
	102 Move W1, 3
	103 Move X2, X31
	104 Move X20, X0
	105 Call WebHeaderCollection..ctor, X0, X1
	106 Move W8, 1
	107 Move [X19+120], X20
	108 Move [X19+336], X19
	109 Move [X19+344], X31
	110 Move [X19+376], W8
	111 Move [X19+352], X19
	112 Move [X19+360], X8
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X30, [X31+64]
	120 Return 

Method: System.Void .ctor(System.Uri uri, Mono.Net.Security.MobileTlsProvider tlsProvider, Mono.Security.Interface.MonoTlsSettings settings = null)

Disassembly:
	0x0369D018 SUB X31, X31, 0x70
	0x0369D01C STR X30, [X31 + 0x10]
	0x0369D020 STP X28, X27, [X31 + 0x20]
	0x0369D024 STP X26, X25, [X31 + 0x30]
	0x0369D028 STP X24, X23, [X31 + 0x40]
	0x0369D02C STP X22, X21, [X31 + 0x50]
	0x0369D030 STP X20, X19, [X31 + 0x60]
	0x0369D034 ADRP X21, 0xD43000
	0x0369D038 ADRP X24, 0xA58000
	0x0369D03C LDRB W8, [X21 + 0x903]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X3
	006 Move X20, X2
	007 Move X21, X0
	008 Call HttpWebRequest..ctor, X0, X1
	009 Move [X21+296], X20
	010 Move [X21+304], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Move X21, [X31+40]
	015 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x0369D040 LDR X24, [X24 + 0xA28]
	0x0369D044 MOV X20, X1
	0x0369D048 MOV X19, X0
	0x0369D04C TBNZ X8, 0x0, 0x369D0DC
	0x0369D050 ADRP X0, 0xAA1000
	0x0369D054 LDR X0, [X0 + 0x7E0]
	0x0369D058 BL 0x1C16CF4
	0x0369D05C ADRP X0, 0xAA1000
	0x0369D060 LDR X0, [X0 + 0x7E8]
	0x0369D064 BL 0x1C16CF4
	0x0369D068 ADRP X0, 0xAA1000
	0x0369D06C LDR X0, [X0 + 0x7F0]
	0x0369D070 BL 0x1C16CF4
	0x0369D074 ADRP X0, 0xAA1000
	0x0369D078 LDR X0, [X0 + 0x120]
	0x0369D07C BL 0x1C16CF4
	0x0369D080 ADRP X0, 0xAA1000
	0x0369D084 LDR X0, [X0 + 0x7F8]
	0x0369D088 BL 0x1C16CF4
	0x0369D08C ADRP X0, 0xA84000
	0x0369D090 LDR X0, [X0 + 0x230]
	0x0369D094 BL 0x1C16CF4
	0x0369D098 ADRP X0, 0xAA1000
	0x0369D09C LDR X0, [X0 + 0x800]
	0x0369D0A0 BL 0x1C16CF4
	0x0369D0A4 ADRP X0, 0xA58000
	0x0369D0A8 LDR X0, [X0 + 0xA28]
	0x0369D0AC BL 0x1C16CF4
	0x0369D0B0 ADRP X0, 0xA92000
	0x0369D0B4 LDR X0, [X0 + 0x5E8]
	0x0369D0B8 BL 0x1C16CF4
	0x0369D0BC ADRP X0, 0xA96000
	0x0369D0C0 LDR X0, [X0 + 0xB48]
	0x0369D0C4 BL 0x1C16CF4
	0x0369D0C8 ADRP X0, 0xA94000
	0x0369D0CC LDR X0, [X0 + 0x4C8]
	0x0369D0D0 BL 0x1C16CF4
	0x0369D0D4 MOVZ W8, 0x1
	0x0369D0D8 STRB W8, [X21 + 0x903]
	0x0369D0DC LDR X0, [X24]
	0x0369D0E0 STRB W31, [X31 + 0x1C]
	0x0369D0E4 STR X31, [X31 + 0x8]
	0x0369D0E8 LDR W8, [X0 + 0xE0]
	0x0369D0EC CBNZ W8, 0x369D0F4
	0x0369D0F0 BL 0x1C16DFC
	0x0369D0F4 MOV X0, X19
	0x0369D0F8 MOV X1, X31
	0x0369D0FC MOV X2, X31
	0x0369D100 BL 0x361DC84
	0x0369D104 TBNZ X0, 0x0, 0x369D528
	0x0369D108 CBZ X19, 0x369D524
	0x0369D10C ADRP X27, 0xA96000
	0x0369D110 LDR X27, [X27 + 0xB48]
	0x0369D114 MOV X0, X19
	0x0369D118 MOV X1, X31
	0x0369D11C BL 0x361CEF0
	0x0369D120 MOV X21, X0
	0x0369D124 MOV X0, X19
	0x0369D128 MOV X1, X31
	0x0369D12C BL 0x361BD04
	0x0369D130 LDR X1, [X27]
	0x0369D134 MOV X2, X0
	0x0369D138 MOV X0, X21
	0x0369D13C MOV X3, X31
	0x0369D140 BL 0x32274B8
	0x0369D144 LDR X8, [X24]
	0x0369D148 MOV X21, X0
	0x0369D14C MOV X0, X8
	0x0369D150 BL 0x1C16F10
	0x0369D154 MOV X1, X21
	0x0369D158 MOV X2, X31
	0x0369D15C MOV X22, X0
	0x0369D160 BL 0x36196A8
	0x0369D164 CMP X20, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, 257
	006 Move TEMP, 0
	007 Not TEMP
	008 Move X9, TEMP
	009 Move W21, 1
	010 Move W10, 50
	011 Move X19, X0
	012 NotImplemented "Instruction STURH not yet implemented."
	013 Move [X0+80], X9
	014 Move [X0+128], W21
	015 Move [X0+132], W10
	016 Move X0, 0xA59000
	017 Move X0, [X0+632]
	018 Call 0x1C17D08
	019 Move X8, [X0+184]
	020 Move X20, 0xA80000
	021 Move X8, [X8]
	022 Move [X19+136], X8
	023 Move X20, [X20+1232]
	024 Move X0, X20
	025 Call 0x1C17D08
	026 Move [X19+144], X0
	027 Move X0, X20
	028 Call 0x1C17D08
	029 Move X0, X20
	030 Call 0x1C17D08
	031 Move [X19+152], X0
	032 Move X0, X20
	033 Call 0x1C17D08
	034 Move [X19+160], W21
	035 Move X20, 0xA9E000
	036 Move X20, [X20+360]
	037 Move X0, X20
	038 Call 0x1C17D08
	039 Call 0x19913D0
	040 Move X0, X20
	041 Call 0x1C17D08
	042 Move X8, [X0+184]
	043 Move X9, -45805568
	044 Move V0, [X9+2768]
	045 Move X0, 0xA5D000
	046 Move X8, [X8+16]
	047 Move [X19+216], D0
	048 Move [X19+168], X8
	049 Move X0, [X0+3264]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X20, X0
	054 Call Object..ctor, X0
	055 Move W8, 0x93E0
	056 NotImplemented "Instruction MOVK not yet implemented."
	057 Move [X19+272], X20
	058 Move [X19+288], W8
	059 Move X0, 0xA9E000
	060 Move X0, [X0+208]
	061 Call 0x1C17D08
	062 Call 0x19913D0
	063 Move X0, X19
	064 Move X1, X31
	065 Call WebRequest..ctor, X0
	066 Move X0, 0xA81000
	067 Move X0, [X0+736]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X19, X0
	072 Call SerializationException..ctor, X0
	073 Move X0, 0xAA2000
	074 Move X0, [X0+1912]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: System.Void ResetAuthorization()

Disassembly:
	0x0369D008 STR X31, [X19 + 0x138]
	0x0369D00C LDP X20, X19, [X31 + 0x10]
	0x0369D010 LDP X30, X21, [X31], #0x20
	0x0369D014 RET

ISIL:
	001 Move W8, 1
	002 Move [X0+336], X0
	003 Move [X0+344], X31
	004 Move [X0+352], X0
	005 Move [X0+360], X8
	006 Return 

Method: System.Uri get_Address()

Disassembly:
	0x0369D180 LDR X1, [X21]
	0x0369D184 CBZ X9, 0x369D1A8

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_AllowAutoRedirect(System.Boolean value)

Disassembly:
	0x0369D188 LDR X10, [X8 + 0xB0]
	0x0369D18C ADD X10, X10, 0x8
	0x0369D190 LDUR X11, [X10 - 0x8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+49], W8
	003 Return 

Method: System.Boolean get_AllowWriteStreamBuffering()

Disassembly:
	0x0369D194 CMP X11, X1
	0x0369D198 B.EQ 0x369D1C4

ISIL:
	001 Move W0, [X0+50]
	002 Return X0

Method: System.Void set_AllowWriteStreamBuffering(System.Boolean value)

Disassembly:
	0x0369D19C SUBS X9, X9, 0x1
	0x0369D1A0 ADD X10, X10, 0x10
	0x0369D1A4 B.NE 0x369D190

ISIL:
	001 And W8, W1, 1
	002 Move [X0+50], W8
	003 Return 

Method: System.Net.DecompressionMethods get_AutomaticDecompression()

Disassembly:
	0x0369D1A8 MOVZ W2, 0x1
	0x0369D1AC MOV X0, X20

ISIL:
	001 Move W0, [X0+284]
	002 Return X0

Method: System.Void set_AutomaticDecompression(System.Net.DecompressionMethods value)

Disassembly:
	0x0369D1B0 BL 0x1C5C788
	0x0369D1B4 B 0x369D1D4
	0x0369D1B8 MOV W23, W31
	0x0369D1BC MOV W25, W31
	0x0369D1C0 B 0x369D2D4
	0x0369D1C4 LDR W9, [X10]
	0x0369D1C8 ADD W9, W9, 0x1
	0x0369D1CC ADD X8, X8, W9, 0x4, SXTW
	0x0369D1D0 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call HttpWebRequest.CheckRequestStarted, X0
	007 Move [X20+284], W19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 

Method: System.Boolean get_InternalAllowBuffering()

Disassembly:
	0x0369D230 CBZ X9, 0x369D254
	0x0369D234 LDR X10, [X8 + 0xB0]
	0x0369D238 ADD X10, X10, 0x8
	0x0369D23C LDUR X11, [X10 - 0x8]
	0x0369D240 CMP X11, X1

ISIL:
	001 Move W8, [X0+50]
	002 Compare W8, 0
	003 JumpIfEqual {4}
	004 Move W0, W31
	005 Return X0

Method: System.Boolean get_MethodWithBuffer()

Disassembly:
	0x0369D244 B.EQ 0x369D264
	0x0369D248 SUBS X9, X9, 0x1
	0x0369D24C ADD X10, X10, 0x10
	0x0369D250 B.NE 0x369D23C
	0x0369D254 MOV X0, X20
	0x0369D258 MOV W2, W31
	0x0369D25C BL 0x1C5C788
	0x0369D260 B 0x369D270
	0x0369D264 LDRSW X9, [X10]
	0x0369D268 ADD X8, X8, X9, 0x4, LSL
	0x0369D26C ADD X0, X8, 0x138
	0x0369D270 LDP X8, X2, [X0]
	0x0369D274 MOV X0, X20
	0x0369D278 MOV X1, X19
	0x0369D27C BLR X8
	0x0369D280 CBZ X0, 0x369D524
	0x0369D284 MOV X1, X31
	0x0369D288 MOV X19, X0
	0x0369D28C BL 0x361CEF0
	0x0369D290 ADRP X20, 0xA92000
	0x0369D294 LDR X20, [X20 + 0x5E8]
	0x0369D298 MOV X2, X31
	0x0369D29C LDR X1, [X20]
	0x0369D2A0 BL 0x3226EF8
	0x0369D2A4 TBNZ X0, 0x0, 0x369D570
	0x0369D2A8 TBZ X21, 0x0, 0x369D2CC
	0x0369D2AC MOV X0, X19
	0x0369D2B0 MOV X1, X31
	0x0369D2B4 BL 0x361CEF0
	0x0369D2B8 LDR X1, [X20]
	0x0369D2BC MOV X2, X31
	0x0369D2C0 BL 0x321BA08
	0x0369D2C4 MOV W23, W0
	0x0369D2C8 B 0x369D2D0
	0x0369D2CC MOV W23, W31
	0x0369D2D0 MOVZ W25, 0x1
	0x0369D2D4 ADRP X28, 0xAA1000
	0x0369D2D8 ADRP X26, 0xA84000
	0x0369D2DC LDR X28, [X28 + 0x7F8]
	0x0369D2E0 LDR X26, [X26 + 0x230]
	0x0369D2E4 MOV X0, X19
	0x0369D2E8 MOV X1, X31
	0x0369D2EC BL 0x361CEF0
	0x0369D2F0 MOV X20, X0
	0x0369D2F4 MOV X0, X19
	0x0369D2F8 MOV X1, X31
	0x0369D2FC BL 0x361BD04
	0x0369D300 LDR X1, [X27]
	0x0369D304 MOV X2, X0
	0x0369D308 MOV X0, X20
	0x0369D30C MOV X3, X31
	0x0369D310 BL 0x32274B8
	0x0369D314 LDR X8, [X24]
	0x0369D318 MOV X19, X0
	0x0369D31C MOV X0, X8
	0x0369D320 BL 0x1C16F10
	0x0369D324 MOV X1, X19
	0x0369D328 MOV X2, X31
	0x0369D32C MOV X21, X0
	0x0369D330 BL 0x36196A8
	0x0369D334 LDR X0, [X28]
	0x0369D338 CMP W25, 0x0
	0x0369D33C CSEL X19, X21, X31, NE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD44000
	006 Move X20, 0xA9A000
	007 Move W8, [X21+2228]
	008 Move X20, [X20+2824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xA80000
	015 Move X0, [X0+1232]
	016 Call 0x1C17CF4
	017 Move X0, 0xA9E000
	018 Move X0, [X0+536]
	019 Call 0x1C17CF4
	020 Move X0, 0xA9E000
	021 Move X0, [X0+544]
	022 Call 0x1C17CF4
	023 Move X0, 0xA9A000
	024 Move X0, [X0+2824]
	025 Call 0x1C17CF4
	026 Move X0, 0xA9E000
	027 Move X0, [X0+552]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2228], W8
	031 Move X0, [X19+144]
	032 Move X1, [X20]
	033 Move X2, X31
	034 Call String.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {80}
	039 Move X8, 0xA80000
	040 Move X0, [X19+144]
	041 Move X8, [X8+1232]
	042 Move X2, X31
	043 Move X1, [X8]
	044 Call String.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {80}
	049 Move X8, 0xA9E000
	050 Move X0, [X19+144]
	051 Move X8, [X8+552]
	052 Move X2, X31
	053 Move X1, [X8]
	054 Call String.op_Inequality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {80}
	059 Move X8, 0xA9E000
	060 Move X0, [X19+144]
	061 Move X8, [X8+536]
	062 Move X2, X31
	063 Move X1, [X8]
	064 Call String.op_Inequality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {80}
	069 Move X8, 0xA9E000
	070 Move X0, [X19+144]
	071 Move X8, [X8+544]
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X2, X31
	075 Move X1, [X8]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Call String.op_Inequality, X0, X1
	079 Return X0
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move W0, W31
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Return X0

Method: Mono.Net.Security.MobileTlsProvider get_TlsProvider()

Disassembly:
	0x0369D340 BL 0x1C16F10
	0x0369D344 MOV X1, X31

ISIL:
	001 Move X0, [X0+296]
	002 Return X0

Method: Mono.Security.Interface.MonoTlsSettings get_TlsSettings()

Disassembly:
	0x0369D348 MOV X20, X0
	0x0369D34C AND W27, W23, 0x1

ISIL:
	001 Move X0, [X0+304]
	002 Return X0

Method: System.Security.Cryptography.X509Certificates.X509CertificateCollection get_ClientCertificates()

Disassembly:
	0x0369D350 BL 0x33BDD8C
	0x0369D354 STP X22, X19, [X20 + 0x10]
	0x0369D358 STRB W27, [X20 + 0x20]
	0x0369D35C LDR X0, [X26]
	0x0369D360 LDR W8, [X0 + 0xE0]
	0x0369D364 CBNZ W8, 0x369D370
	0x0369D368 BL 0x1C16DFC
	0x0369D36C LDR X0, [X26]
	0x0369D370 LDR X8, [X0 + 0xB8]
	0x0369D374 LDR X19, [X8]
	0x0369D378 STRB W31, [X31 + 0x1C]
	0x0369D37C ADD X1, X31, 0x1C
	0x0369D380 MOV X0, X19
	0x0369D384 MOV X2, X31
	0x0369D388 BL 0x33DE64C
	0x0369D38C LDR X0, [X26]
	0x0369D390 LDR W8, [X0 + 0xE0]
	0x0369D394 CBNZ W8, 0x369D3A0
	0x0369D398 BL 0x1C16DFC
	0x0369D39C LDR X0, [X26]
	0x0369D3A0 LDR X8, [X0 + 0xB8]
	0x0369D3A4 LDR X0, [X8]
	0x0369D3A8 CBZ X0, 0x369D564
	0x0369D3AC ADRP X8, 0xAA1000
	0x0369D3B0 LDR X8, [X8 + 0x7E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD44000
	005 Move W8, [X20+2229]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA85000
	012 Move X0, [X0+1024]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2229], W8
	016 Move X20, [X19+56]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xA85000
	020 Move X8, [X8+1024]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call X509CertificateCollection..ctor, X0
	026 Move [X19+56], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void set_ConnectionGroupName(System.String value)

Disassembly:
	0x0369D3B4 LDR X3, [X8]
	0x0369D3B8 ADD X2, X31, 0x8

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Int64 get_ContentLength()

Disassembly:
	0x0369D3BC MOV X1, X20
	0x0369D3C0 BL 0x2985A04

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_ContentLength(System.Int64 value)

Disassembly:
	0x0369D3C4 TBZ X0, 0x0, 0x369D3D0
	0x0369D3C8 LDR X20, [X31 + 0x8]
	0x0369D3CC B 0x369D4E4
	0x0369D3D0 LDR X8, [X26]
	0x0369D3D4 LDR W9, [X8 + 0xE0]
	0x0369D3D8 CBNZ W9, 0x369D3E8
	0x0369D3DC MOV X0, X8
	0x0369D3E0 BL 0x1C16DFC
	0x0369D3E4 LDR X8, [X26]
	0x0369D3E8 LDR X9, [X8 + 0xB8]
	0x0369D3EC LDR W9, [X9 + 0x18]
	0x0369D3F0 CMP W9, 0x1
	0x0369D3F4 B.LT 0x369D43C
	0x0369D3F8 LDR W9, [X8 + 0xE0]
	0x0369D3FC CBNZ W9, 0x369D40C
	0x0369D400 MOV X0, X8
	0x0369D404 BL 0x1C16DFC
	0x0369D408 LDR X8, [X26]
	0x0369D40C LDR X8, [X8 + 0xB8]
	0x0369D410 LDR X0, [X8]
	0x0369D414 CBZ X0, 0x369D5B8
	0x0369D418 ADRP X8, 0xAA1000
	0x0369D41C LDR X8, [X8 + 0x7F0]
	0x0369D420 LDR X1, [X8]
	0x0369D424 BL 0x2986E38
	0x0369D428 LDR X8, [X26]
	0x0369D42C LDR X9, [X8 + 0xB8]
	0x0369D430 LDR W9, [X9 + 0x18]
	0x0369D434 CMP W0, W9
	0x0369D438 B.GE 0x369D5BC
	0x0369D43C LDR W9, [X8 + 0xE0]
	0x0369D440 CBNZ W9, 0x369D450
	0x0369D444 MOV X0, X8
	0x0369D448 BL 0x1C16DFC
	0x0369D44C LDR X8, [X26]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Call HttpWebRequest.CheckRequestStarted, X0
	007 Move TEMP, X20
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {18}
	011 Move W8, 1
	012 Move [X19+80], X20
	013 Move [X19+72], W8
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 
	018 Move X0, 0xA5F000
	019 Move X0, [X0+1888]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xA61000
	024 Move X0, [X0+3784]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xAA2000
	028 Move X0, [X0+1936]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	035 Move X0, 0xAA2000
	036 Move X0, [X0+1944]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Call 0x1C17DEC

Method: System.Void set_InternalContentLength(System.Int64 value)

Disassembly:
	0x0369D450 ADRP X9, 0xAA1000
	0x0369D454 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Boolean get_ThrowOnError()

Disassembly:
	0x0369D458 LDR X9, [X9 + 0x800]
	0x0369D45C LDP W24, W23, [X8 + 0x10]

ISIL:
	001 Move W0, [X0+376]
	002 Return X0

Method: System.Void set_ThrowOnError(System.Boolean value)

Disassembly:
	0x0369D460 LDR X0, [X9]
	0x0369D464 BL 0x1C16F10
	0x0369D468 MOV X22, X0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+376], W8
	003 Return 

Method: System.Void set_CookieContainer(System.Net.CookieContainer value)

Disassembly:
	0x0369D46C MOV X1, X20
	0x0369D470 MOV X2, X21

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.Net.ICredentials get_Credentials()

Disassembly:
	0x0369D474 MOV W3, W24
	0x0369D478 MOV W4, W23

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_Credentials(System.Net.ICredentials value)

Disassembly:
	0x0369D47C BL 0x36A4FE8
	0x0369D480 STR X22, [X31 + 0x8]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.Int32 get_DefaultMaximumErrorResponseLength()

Disassembly:
	0x0369D484 CBZ X22, 0x369D568
	0x0369D488 LDR X8, [X26]
	0x0369D48C LDR X8, [X8 + 0xB8]
	0x0369D490 LDRB W9, [X8 + 0x28]
	0x0369D494 STRB W9, [X22 + 0x31]
	0x0369D498 LDRB W9, [X8 + 0x29]
	0x0369D49C STRB W25, [X22 + 0x30]
	0x0369D4A0 STRB W27, [X22 + 0x32]
	0x0369D4A4 STRB W9, [X22 + 0x40]
	0x0369D4A8 LDRB W1, [X8 + 0x38]
	0x0369D4AC LDP W2, W3, [X8 + 0x3C]
	0x0369D4B0 MOV X0, X22
	0x0369D4B4 BL 0x36A52F8
	0x0369D4B8 LDR X8, [X26]
	0x0369D4BC LDR X8, [X8 + 0xB8]
	0x0369D4C0 LDR X0, [X8]
	0x0369D4C4 CBZ X0, 0x369D56C
	0x0369D4C8 ADRP X8, 0xAA1000
	0x0369D4CC LDR X2, [X31 + 0x8]
	0x0369D4D0 LDR X8, [X8 + 0x7E0]
	0x0369D4D4 LDR X3, [X8]
	0x0369D4D8 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD44000
	005 Move X19, 0xA7F000
	006 Move W8, [X20+2230]
	007 Move X19, [X19+2952]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA7F000
	013 Move X0, [X0+2952]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2230], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+4]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Net.WebHeaderCollection get_Headers()

Disassembly:
	0x0369D4DC BL 0x2987140
	0x0369D4E0 MOV X20, X0

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.String get_Host()

Disassembly:
	0x0369D4E4 MOV X21, X31
	0x0369D4E8 LDRB W8, [X31 + 0x1C]
	0x0369D4EC CBZ W8, 0x369D4FC
	0x0369D4F0 MOV X0, X19
	0x0369D4F4 MOV X1, X31
	0x0369D4F8 BL 0x33E14E4
	0x0369D4FC CBNZ X21, 0x369D55C
	0x0369D500 MOV X0, X20
	0x0369D504 LDP X20, X19, [X31 + 0x60]
	0x0369D508 LDP X22, X21, [X31 + 0x50]
	0x0369D50C LDP X24, X23, [X31 + 0x40]
	0x0369D510 LDP X26, X25, [X31 + 0x30]
	0x0369D514 LDP X28, X27, [X31 + 0x20]
	0x0369D518 LDR X30, [X31 + 0x10]
	0x0369D51C ADD X31, X31, 0x70
	0x0369D520 RET
	0x0369D524 BL 0x1C16F20
	0x0369D528 ADRP X0, 0xA5B000
	0x0369D52C LDR X0, [X0 + 0x528]
	0x0369D530 BL 0x1C16D08
	0x0369D534 BL 0x1C16F10
	0x0369D538 MOV X19, X0
	0x0369D53C ADRP X0, 0xAA0000
	0x0369D540 LDR X0, [X0 + 0x738]
	0x0369D544 BL 0x1C16D08
	0x0369D548 MOV X1, X0
	0x0369D54C MOV X0, X19
	0x0369D550 MOV X2, X31
	0x0369D554 BL 0x330E100
	0x0369D558 B 0x369D5A0
	0x0369D55C MOV X0, X21
	0x0369D560 BL 0x1C16F18
	0x0369D564 BL 0x1C16F20
	0x0369D568 BL 0x1C16F20
	0x0369D56C BL 0x1C16F20
	0x0369D570 ADRP X0, 0xA56000
	0x0369D574 LDR X0, [X0 + 0xB40]
	0x0369D578 BL 0x1C16D08
	0x0369D57C BL 0x1C16F10
	0x0369D580 MOV X19, X0
	0x0369D584 ADRP X0, 0xAA1000
	0x0369D588 LDR X0, [X0 + 0x808]
	0x0369D58C BL 0x1C16D08
	0x0369D590 MOV X1, X0
	0x0369D594 MOV X0, X19
	0x0369D598 MOV X2, X31
	0x0369D59C BL 0x3379A44
	0x0369D5A0 ADRP X0, 0xAA1000
	0x0369D5A4 LDR X0, [X0 + 0x810]
	0x0369D5A8 BL 0x1C16D08
	0x0369D5AC MOV X1, X0
	0x0369D5B0 MOV X0, X19
	0x0369D5B4 BL 0x1C16DEC
	0x0369D5B8 BL 0x1C16F20
	0x0369D5BC ADRP X0, 0xA56000
	0x0369D5C0 LDR X0, [X0 + 0x5B0]
	0x0369D5C4 BL 0x1C16D08
	0x0369D5C8 BL 0x1C16F10
	0x0369D5CC MOV X20, X0
	0x0369D5D0 ADRP X0, 0xAA1000
	0x0369D5D4 LDR X0, [X0 + 0x818]
	0x0369D5D8 BL 0x1C16D08
	0x0369D5DC MOV X1, X0
	0x0369D5E0 MOV X0, X20
	0x0369D5E4 MOV X2, X31
	0x0369D5E8 BL 0x337DF1C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD44000
	007 Move W8, [X19+2231]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA59000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0xA60000
	017 Move X0, [X0+2440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2231], W8
	021 Move X21, [X20+328]
	022 Move X8, 0xA59000
	023 Move X8, [X8+2600]
	024 Move X19, X21
	025 Compare X21, 0
	026 JumpIfNotEqual {28}
	027 Move X19, [X20+40]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move X1, X31
	035 Move X2, X31
	036 Call Uri.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move W8, [X20+320]
	042 Compare W8, 0
	043 JumpIfNotEqual {58}
	044 Move X0, [X20+40]
	045 Compare X0, 0
	046 JumpIfEqual {84}
	047 Move X1, X31
	048 Call Uri.get_IsDefaultPort, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {58}
	053 Compare X19, 0
	054 JumpIfEqual {84}
	055 Move X0, X19
	056 Move X1, X31
	057 Call Uri.get_Host, X0
	058 Compare X19, 0
	059 JumpIfEqual {84}
	060 Move X21, 0xA60000
	061 Move X21, [X21+2440]
	062 Move X0, X19
	063 Move X1, X31
	064 Call Uri.get_Host, X0
	065 Move X20, X0
	066 Move X0, X19
	067 Move X1, X31
	068 Call Uri.get_Port, X0
	069 Move [X31+12], W0
	070 Add X0, X31, 12
	071 Move X1, X31
	072 Call Int32.ToString, X0
	073 Move X1, [X21]
	074 Move X2, X0
	075 Move X0, X20
	076 Move X3, X31
	077 Call String.Concat, X0, X1, X2
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Add X31, X31, 48
	083 Return X0
	084 Call 0x1C17F20

Method: System.Void set_Host(System.String value)

Disassembly:
	0x0369D5EC ADRP X0, 0xAA1000
	0x0369D5F0 LDR X0, [X0 + 0x810]
	0x0369D5F4 BL 0x1C16D08
	0x0369D5F8 MOV X1, X0
	0x0369D5FC MOV X0, X20
	0x0369D600 BL 0x1C16DEC
	0x0369D604 B 0x369D630
	0x0369D608 B 0x369D630
	0x0369D60C B 0x369D630
	0x0369D610 B 0x369D630
	0x0369D614 B 0x369D630
	0x0369D618 B 0x369D630
	0x0369D61C B 0x369D630
	0x0369D620 B 0x369D630
	0x0369D624 B 0x369D630
	0x0369D628 B 0x369D630
	0x0369D62C B 0x369D630
	0x0369D630 MOV X20, X0
	0x0369D634 CMP W1, 0x1
	0x0369D638 B.NE 0x369D654
	0x0369D63C MOV X0, X20
	0x0369D640 BL 0x3EB1AD0
	0x0369D644 LDR X21, [X0]
	0x0369D648 BL 0x3EB1AE0
	0x0369D64C MOV X20, X31
	0x0369D650 B 0x369D4E8
	0x0369D654 MOV X21, X31
	0x0369D658 B 0x369D660
	0x0369D65C MOV X20, X0
	0x0369D660 LDRB W8, [X31 + 0x1C]
	0x0369D664 CBZ W8, 0x369D674
	0x0369D668 MOV X0, X19
	0x0369D66C MOV X1, X31
	0x0369D670 BL 0x33E14E4
	0x0369D674 CBNZ X21, 0x369D680
	0x0369D678 MOV X0, X20
	0x0369D67C BL 0x1D2C690
	0x0369D680 MOV X0, X21
	0x0369D684 BL 0x1C16F18
	0x0369D688 BL 0x1990590
	0x0369D68C STR X30, [X31 - 0x40]!
	0x0369D690 STP X24, X23, [X31 + 0x10]
	0x0369D694 STP X22, X21, [X31 + 0x20]
	0x0369D698 STP X20, X19, [X31 + 0x30]
	0x0369D69C ADRP X19, 0xD43000
	0x0369D6A0 LDRB W8, [X19 + 0x8BF]
	0x0369D6A4 MOV X23, X3
	0x0369D6A8 MOV X24, X2
	0x0369D6AC MOV W22, W1
	0x0369D6B0 MOV X20, X0
	0x0369D6B4 TBNZ X8, 0x0, 0x369D6CC
	0x0369D6B8 ADRP X0, 0xAA1000
	0x0369D6BC LDR X0, [X0 + 0x820]
	0x0369D6C0 BL 0x1C16CF4
	0x0369D6C4 MOVZ W8, 0x1
	0x0369D6C8 STRB W8, [X19 + 0x8BF]
	0x0369D6CC LDR X19, [X20 + 0x110]
	0x0369D6D0 STRB W31, [X31 + 0xC]
	0x0369D6D4 ADD X1, X31, 0xC
	0x0369D6D8 MOV X0, X19
	0x0369D6DC MOV X2, X31
	0x0369D6E0 BL 0x33DE64C
	0x0369D6E4 TBNZ X22, 0x0, 0x369D740
	0x0369D6E8 LDRB W8, [X20 + 0x71]
	0x0369D6EC CBZ W8, 0x369D740
	0x0369D6F0 LDR X21, [X20 + 0xF8]
	0x0369D6F4 CBNZ X21, 0x369D7AC
	0x0369D6F8 ADRP X0, 0xA56000
	0x0369D6FC LDR X0, [X0 + 0x5B0]
	0x0369D700 BL 0x1C16D08
	0x0369D704 BL 0x1C16F10
	0x0369D708 MOV X20, X0
	0x0369D70C ADRP X0, 0xAA1000
	0x0369D710 LDR X0, [X0 + 0x828]
	0x0369D714 BL 0x1C16D08
	0x0369D718 MOV X1, X0
	0x0369D71C MOV X0, X20
	0x0369D720 MOV X2, X31
	0x0369D724 BL 0x337DF1C
	0x0369D728 ADRP X0, 0xAA1000
	0x0369D72C LDR X0, [X0 + 0x830]
	0x0369D730 BL 0x1C16D08
	0x0369D734 MOV X1, X0
	0x0369D738 MOV X0, X20
	0x0369D73C BL 0x1C16DEC
	0x0369D740 ADRP X8, 0xAA1000
	0x0369D744 LDR X8, [X8 + 0x820]
	0x0369D748 LDR X0, [X8]
	0x0369D74C BL 0x1C16F10
	0x0369D750 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Move [X31+8], X31
	009 Call HttpWebRequest.CheckRequestStarted, X0
	010 Compare X20, 0
	011 JumpIfEqual {78}
	012 Move W1, 47
	013 Move X0, X20
	014 Move X2, X31
	015 Call String.IndexOf, X0, X1
	016 Add W31, W0, 1
	017 Add X2, X31, 8
	018 Move X0, X19
	019 Move X1, X20
	020 Call HttpWebRequest.TryGetHostUri, X0, X1, X2
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {61}
	025 Move X0, [X31+8]
	026 Move [X19+328], X0
	027 Compare X0, 0
	028 JumpIfEqual {96}
	029 Move X1, X31
	030 Call Uri.get_IsDefaultPort, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {52}
	035 Move W1, 58
	036 Move X0, X20
	037 Move X2, X31
	038 Call String.IndexOf, X0, X1
	039 Add W31, W0, 1
	040 Move W1, 93
	041 Move X0, X20
	042 Move X2, X31
	043 Call String.IndexOf, X0, X1
	044 Add W31, W0, 1
	045 Move W21, W0
	046 Move W1, 58
	047 Move X0, X20
	048 Move X2, X31
	049 Call String.LastIndexOf, X0, X1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move W8, 1
	053 Move [X19+320], W8
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+16]
	057 Move X21, [X31+24]
	058 Add X31, X31, 48
	059 Return 
	060 Move [X19+320], W31
	061 Move X0, 0xA5F000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0xAA2000
	067 Move X0, [X0+1952]
	068 Call 0x1C17D08
	069 Move X20, X0
	070 Move X0, 0xA61000
	071 Move X0, [X0+3784]
	072 Call 0x1C17D08
	073 Move X2, X0
	074 Move X0, X19
	075 Move X1, X20
	076 Move X3, X31
	077 Call ArgumentException..ctor, X0, X1, X2
	078 Move X0, 0xA5C000
	079 Move X0, [X0+1320]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0xA61000
	084 Move X0, [X0+3784]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call ArgumentNullException..ctor, X0, X1
	090 Move X0, 0xAA2000
	091 Move X0, [X0+1960]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Call 0x1C17DEC
	096 Call 0x1C17F20

Method: System.Boolean TryGetHostUri(System.String hostName, out System.Uri hostUri)

Disassembly:
	0x0369D754 MOV X1, X20
	0x0369D758 MOV X2, X24
	0x0369D75C MOV W3, W31
	0x0369D760 MOV X4, X23
	0x0369D764 MOV X5, X31
	0x0369D768 BL 0x36AFD78
	0x0369D76C ADD X0, X20, 0xF8
	0x0369D770 MOV X1, X21
	0x0369D774 MOV X2, X31
	0x0369D778 BL 0x1C24138
	0x0369D77C CBNZ X0, 0x369D7E8
	0x0369D780 MOVZ W8, 0x1
	0x0369D784 STRB W8, [X20 + 0x71]
	0x0369D788 TBNZ X22, 0x0, 0x369D790
	0x0369D78C STR W31, [X20 + 0x108]
	0x0369D790 MOV X0, X20
	0x0369D794 BL 0x369CC98
	0x0369D798 STR X0, [X20 + 0xD0]
	0x0369D79C CBZ X0, 0x369D830
	0x0369D7A0 LDR X2, [X20 + 0x40]
	0x0369D7A4 MOV X1, X21
	0x0369D7A8 BL 0x369D8A8
	0x0369D7AC MOV X22, X31
	0x0369D7B0 LDRB W8, [X31 + 0xC]
	0x0369D7B4 CBZ W8, 0x369D7C4
	0x0369D7B8 MOV X0, X19
	0x0369D7BC MOV X1, X31
	0x0369D7C0 BL 0x33E14E4
	0x0369D7C4 CBNZ X22, 0x369D7E0
	0x0369D7C8 MOV X0, X21
	0x0369D7CC LDP X20, X19, [X31 + 0x30]
	0x0369D7D0 LDP X22, X21, [X31 + 0x20]
	0x0369D7D4 LDP X24, X23, [X31 + 0x10]
	0x0369D7D8 LDR X30, [X31], #0x40
	0x0369D7DC RET
	0x0369D7E0 MOV X0, X22
	0x0369D7E4 BL 0x1C16F18
	0x0369D7E8 ADRP X0, 0xA56000
	0x0369D7EC LDR X0, [X0 + 0x5B0]
	0x0369D7F0 BL 0x1C16D08
	0x0369D7F4 BL 0x1C16F10
	0x0369D7F8 MOV X20, X0
	0x0369D7FC ADRP X0, 0xA9C000
	0x0369D800 LDR X0, [X0 + 0x5B0]
	0x0369D804 BL 0x1C16D08
	0x0369D808 MOV X1, X0
	0x0369D80C MOV X0, X20
	0x0369D810 MOV X2, X31
	0x0369D814 BL 0x337DF1C
	0x0369D818 ADRP X0, 0xAA1000
	0x0369D81C LDR X0, [X0 + 0x830]
	0x0369D820 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD44000
	008 Move W8, [X22+2232]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA59000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xA97000
	020 Move X0, [X0+2888]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2232], W8
	024 Move X0, [X21+40]
	025 Compare X0, 0
	026 JumpIfEqual {65}
	027 Move X1, X31
	028 Call Uri.get_Scheme, X0
	029 Move X8, [X21+40]
	030 Compare X8, 0
	031 JumpIfEqual {65}
	032 Move X22, 0xA97000
	033 Move X23, 0xA59000
	034 Move X22, [X22+2888]
	035 Move X23, [X23+2600]
	036 Move X21, X0
	037 Move X0, X8
	038 Move X1, X31
	039 Call Uri.get_PathAndQuery, X0
	040 Move X1, [X22]
	041 Move X3, X0
	042 Move X0, X21
	043 Move X2, X20
	044 Move X4, X31
	045 Call String.Concat, X0, X1, X2, X3
	046 Move X8, [X23]
	047 Move X20, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X2, X19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move W1, 1
	060 Move X3, X31
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Call Uri.TryCreate, X0, X1, X2
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean get_KeepAlive()

Disassembly:
	0x0369D824 MOV X1, X0
	0x0369D828 MOV X0, X20

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_KeepAlive(System.Boolean value)

Disassembly:
	0x0369D82C BL 0x1C16DEC
	0x0369D830 BL 0x1C16F20
	0x0369D834 B 0x369D84C

ISIL:
	001 And W8, W1, 1
	002 Move [X0+128], W8
	003 Return 

Method: System.Void set_MaximumAutomaticRedirections(System.Int32 value)

Disassembly:
	0x0369D838 B 0x369D84C
	0x0369D83C B 0x369D84C
	0x0369D840 B 0x369D84C
	0x0369D844 B 0x369D84C
	0x0369D848 B 0x369D84C
	0x0369D84C MOV X20, X0
	0x0369D850 CMP W1, 0x1
	0x0369D854 B.NE 0x369D870
	0x0369D858 MOV X0, X20
	0x0369D85C BL 0x3EB1AD0
	0x0369D860 LDR X22, [X0]
	0x0369D864 BL 0x3EB1AE0
	0x0369D868 MOV X21, X31
	0x0369D86C B 0x369D7B0
	0x0369D870 MOV X22, X31
	0x0369D874 B 0x369D87C
	0x0369D878 MOV X20, X0
	0x0369D87C LDRB W8, [X31 + 0xC]
	0x0369D880 CBZ W8, 0x369D890
	0x0369D884 MOV X0, X19
	0x0369D888 MOV X1, X31
	0x0369D88C BL 0x33E14E4
	0x0369D890 CBNZ X22, 0x369D89C
	0x0369D894 MOV X0, X20
	0x0369D898 BL 0x1D2C690
	0x0369D89C MOV X0, X22
	0x0369D8A0 BL 0x1C16F18
	0x0369D8A4 BL 0x1990590
	0x0369D8A8 SUB X31, X31, 0x30
	0x0369D8AC STP X30, X21, [X31 + 0x10]
	0x0369D8B0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X20, [X31+16]
	006 Move X19, [X31+24]
	007 Move [X0+132], W1
	008 Move X30, [X31+32]
	009 Return 
	010 Move X0, 0xA5F000
	011 Move X0, [X0+1400]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0xAA2000
	016 Move X0, [X0+1968]
	017 Call 0x1C17D08
	018 Move X20, X0
	019 Move X0, 0xA61000
	020 Move X0, [X0+3784]
	021 Call 0x1C17D08
	022 Move X2, X0
	023 Move X0, X19
	024 Move X1, X20
	025 Move X3, X31
	026 Call ArgumentException..ctor, X0, X1, X2
	027 Move X0, 0xAA2000
	028 Move X0, [X0+1976]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Int32 get_DefaultMaximumResponseHeadersLength()

Disassembly:
	0x0369D8B4 MOV X20, X2
	0x0369D8B8 MOV X21, X1
	0x0369D8BC MOV X19, X0
	0x0369D8C0 STRB W31, [X31 + 0xC]
	0x0369D8C4 ADD X1, X31, 0xC
	0x0369D8C8 MOV X2, X31
	0x0369D8CC BL 0x33DE64C
	0x0369D8D0 LDRB W8, [X19 + 0x5C]
	0x0369D8D4 CBNZ W8, 0x369D920
	0x0369D8D8 LDR X0, [X19 + 0x70]
	0x0369D8DC CBZ X0, 0x369D95C
	0x0369D8E0 MOV X1, X21
	0x0369D8E4 MOV X2, X20
	0x0369D8E8 BL 0x36A59B8
	0x0369D8EC MOV X20, X31
	0x0369D8F0 LDRB W8, [X31 + 0xC]
	0x0369D8F4 CBZ W8, 0x369D904
	0x0369D8F8 MOV X0, X19
	0x0369D8FC MOV X1, X31
	0x0369D900 BL 0x33E14E4
	0x0369D904 CBNZ X20, 0x369D918
	0x0369D908 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD44000
	005 Move X19, 0xA7F000
	006 Move W8, [X20+2233]
	007 Move X19, [X19+2952]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA7F000
	013 Move X0, [X0+2952]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2233], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 get_ReadWriteTimeout()

Disassembly:
	0x0369D90C LDP X30, X21, [X31 + 0x10]
	0x0369D910 ADD X31, X31, 0x30

ISIL:
	001 Move W0, [X0+288]
	002 Return X0

Method: System.String get_Method()

Disassembly:
	0x0369D914 RET
	0x0369D918 MOV X0, X20

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void set_Method(System.String value)

Disassembly:
	0x0369D91C BL 0x1C16F18
	0x0369D920 ADRP X0, 0xAA1000
	0x0369D924 LDR X0, [X0 + 0x838]
	0x0369D928 BL 0x1C16D08
	0x0369D92C MOV X20, X0
	0x0369D930 ADRP X0, 0xA56000
	0x0369D934 LDR X0, [X0 + 0x6C0]
	0x0369D938 BL 0x1C16D08
	0x0369D93C LDR W8, [X0 + 0xE0]
	0x0369D940 CBNZ W8, 0x369D948
	0x0369D944 BL 0x1C16DFC
	0x0369D948 MOV X0, X20
	0x0369D94C MOV X1, X31
	0x0369D950 BL 0x338C698
	0x0369D954 CBNZ X0, 0x369D960
	0x0369D958 BL 0x1C16F20
	0x0369D95C BL 0x1C16F20
	0x0369D960 LDR X8, [X0]
	0x0369D964 LDR X1, [X8 + 0x2F0]
	0x0369D968 LDR X9, [X8 + 0x2E8]
	0x0369D96C BLR X9
	0x0369D970 MOV X20, X0
	0x0369D974 ADRP X0, 0xA7F000
	0x0369D978 LDR X0, [X0 + 0x4B8]
	0x0369D97C BL 0x1C16D08
	0x0369D980 BL 0x1C16F10
	0x0369D984 MOV X21, X0
	0x0369D988 MOV X1, X20
	0x0369D98C MOV X2, X31
	0x0369D990 BL 0x338C448
	0x0369D994 ADRP X0, 0xAA1000
	0x0369D998 LDR X0, [X0 + 0x840]
	0x0369D99C BL 0x1C16D08
	0x0369D9A0 MOV X1, X0
	0x0369D9A4 MOV X0, X21
	0x0369D9A8 BL 0x1C16DEC
	0x0369D9AC B 0x369D9C0
	0x0369D9B0 B 0x369D9C0
	0x0369D9B4 B 0x369D9C0
	0x0369D9B8 B 0x369D9C0
	0x0369D9BC B 0x369D9C0
	0x0369D9C0 MOV X21, X0
	0x0369D9C4 CMP W1, 0x1
	0x0369D9C8 B.NE 0x369D9E0
	0x0369D9CC MOV X0, X21
	0x0369D9D0 BL 0x3EB1AD0
	0x0369D9D4 LDR X20, [X0]
	0x0369D9D8 BL 0x3EB1AE0
	0x0369D9DC B 0x369D8F0
	0x0369D9E0 MOV X20, X31
	0x0369D9E4 B 0x369D9EC
	0x0369D9E8 MOV X21, X0
	0x0369D9EC LDRB W8, [X31 + 0xC]
	0x0369D9F0 CBZ W8, 0x369DA00
	0x0369D9F4 MOV X0, X19
	0x0369D9F8 MOV X1, X31
	0x0369D9FC BL 0x33E14E4
	0x0369DA00 CBNZ X20, 0x369DA0C
	0x0369DA04 MOV X0, X21
	0x0369DA08 BL 0x1D2C690
	0x0369DA0C MOV X0, X20
	0x0369DA10 BL 0x1C16F18
	0x0369DA14 BL 0x1990590
	0x0369DA18 STR X30, [X31 - 0x30]!
	0x0369DA1C STP X22, X21, [X31 + 0x10]
	0x0369DA20 STP X20, X19, [X31 + 0x20]
	0x0369DA24 ADRP X19, 0xD43000
	0x0369DA28 LDRB W8, [X19 + 0x8C0]
	0x0369DA2C MOV X20, X1
	0x0369DA30 MOV X21, X0
	0x0369DA34 TBNZ X8, 0x0, 0x369DA7C
	0x0369DA38 ADRP X0, 0xA7F000
	0x0369DA3C LDR X0, [X0 + 0x4D0]
	0x0369DA40 BL 0x1C16CF4
	0x0369DA44 ADRP X0, 0xA9D000
	0x0369DA48 LDR X0, [X0 + 0x218]
	0x0369DA4C BL 0x1C16CF4
	0x0369DA50 ADRP X0, 0xA9D000
	0x0369DA54 LDR X0, [X0 + 0x220]
	0x0369DA58 BL 0x1C16CF4
	0x0369DA5C ADRP X0, 0xA99000
	0x0369DA60 LDR X0, [X0 + 0xB08]
	0x0369DA64 BL 0x1C16CF4
	0x0369DA68 ADRP X0, 0xA56000
	0x0369DA6C LDR X0, [X0 + 0x988]
	0x0369DA70 BL 0x1C16CF4
	0x0369DA74 MOVZ W8, 0x1
	0x0369DA78 STRB W8, [X19 + 0x8C0]
	0x0369DA7C ADD X0, X21, 0x100
	0x0369DA80 MOV W1, W31
	0x0369DA84 MOV W2, W31
	0x0369DA88 MOV X3, X31
	0x0369DA8C BL 0x33E7AB4
	0x0369DA90 CMP W0, 0x1
	0x0369DA94 B.EQ 0x369DC4C
	0x0369DA98 ADRP X8, 0xA7F000
	0x0369DA9C LDR X8, [X8 + 0x4D0]
	0x0369DAA0 LDR X0, [X21 + 0x90]
	0x0369DAA4 MOV X2, X31
	0x0369DAA8 LDR X1, [X8]
	0x0369DAAC BL 0x321BA08
	0x0369DAB0 TBNZ X0, 0x0, 0x369DC04
	0x0369DAB4 ADRP X8, 0xA9D000
	0x0369DAB8 LDR X8, [X8 + 0x218]
	0x0369DABC LDR X0, [X21 + 0x90]
	0x0369DAC0 MOV X2, X31
	0x0369DAC4 LDR X1, [X8]
	0x0369DAC8 BL 0x321BA08
	0x0369DACC TBNZ X0, 0x0, 0x369DC04
	0x0369DAD0 ADRP X8, 0xA99000
	0x0369DAD4 LDR X8, [X8 + 0xB08]
	0x0369DAD8 LDR X0, [X21 + 0x90]
	0x0369DADC MOV X2, X31
	0x0369DAE0 LDR X1, [X8]
	0x0369DAE4 BL 0x321BA08
	0x0369DAE8 TBNZ X0, 0x0, 0x369DC04
	0x0369DAEC ADRP X8, 0xA9D000
	0x0369DAF0 LDR X8, [X8 + 0x220]
	0x0369DAF4 LDR X0, [X21 + 0x90]
	0x0369DAF8 MOV X2, X31
	0x0369DAFC LDR X1, [X8]
	0x0369DB00 BL 0x321BA08
	0x0369DB04 TBNZ X0, 0x0, 0x369DC04
	0x0369DB08 LDR X8, [X21 + 0x90]
	0x0369DB0C CBZ X8, 0x369DC04
	0x0369DB10 LDR X8, [X21 + 0x50]
	0x0369DB14 ADDS X31, X8, 0x1
	0x0369DB18 B.NE 0x369DB34
	0x0369DB1C LDRB W8, [X21 + 0xC8]
	0x0369DB20 CBNZ W8, 0x369DB34
	0x0369DB24 LDRB W8, [X21 + 0x32]
	0x0369DB28 CBNZ W8, 0x369DB34
	0x0369DB2C LDRB W8, [X21 + 0x80]
	0x0369DB30 CBNZ W8, 0x369DCF0
	0x0369DB34 MOV X0, X21
	0x0369DB38 BL 0x369CE6C
	0x0369DB3C CBZ X0, 0x369DB68
	0x0369DB40 LDRB W8, [X21 + 0xC8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD44000
	006 Move W8, [X21+2234]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {42}
	013 Move X0, 0xAA1000
	014 Move X0, [X0+1768]
	015 Call 0x1C17CF4
	016 Move X0, 0xA80000
	017 Move X0, [X0+1248]
	018 Call 0x1C17CF4
	019 Move X0, 0xA80000
	020 Move X0, [X0+1240]
	021 Call 0x1C17CF4
	022 Move X0, 0xA80000
	023 Move X0, [X0+1232]
	024 Call 0x1C17CF4
	025 Move X0, 0xA9E000
	026 Move X0, [X0+536]
	027 Call 0x1C17CF4
	028 Move X0, 0xA9E000
	029 Move X0, [X0+544]
	030 Call 0x1C17CF4
	031 Move X0, 0xA9A000
	032 Move X0, [X0+2824]
	033 Call 0x1C17CF4
	034 Move X0, 0xA9E000
	035 Move X0, [X0+552]
	036 Call 0x1C17CF4
	037 Move X0, 0xA80000
	038 Move X0, [X0+1224]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+2234], W8
	042 Move X0, X19
	043 Move X1, X31
	044 Call String.IsNullOrEmpty, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {154}
	049 Move X8, 0xAA1000
	050 Move X8, [X8+1768]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move X1, X31
	058 Call HttpValidationHelpers.IsInvalidMethodOrHeaderString, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {154}
	063 Compare X19, 0
	064 JumpIfEqual {177}
	065 Move X21, 0xA9A000
	066 Move X21, [X21+2824]
	067 Move X0, X19
	068 Move X1, X31
	069 Call String.ToUpperInvariant, X0
	070 Move [X20+144], X0
	071 Move X1, [X21]
	072 Move X2, X31
	073 Call String.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {149}
	078 Move X8, 0xA80000
	079 Move X0, [X20+144]
	080 Move X8, [X8+1232]
	081 Move X2, X31
	082 Move X1, [X8]
	083 Call String.op_Inequality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {149}
	088 Move X8, 0xA80000
	089 Move X0, [X20+144]
	090 Move X8, [X8+1240]
	091 Move X2, X31
	092 Move X1, [X8]
	093 Call String.op_Inequality, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {149}
	098 Move X8, 0xA80000
	099 Move X0, [X20+144]
	100 Move X8, [X8+1248]
	101 Move X2, X31
	102 Move X1, [X8]
	103 Call String.op_Inequality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {149}
	108 Move X8, 0xA80000
	109 Move X0, [X20+144]
	110 Move X8, [X8+1224]
	111 Move X2, X31
	112 Move X1, [X8]
	113 Call String.op_Inequality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {149}
	118 Move X8, 0xA9E000
	119 Move X0, [X20+144]
	120 Move X8, [X8+536]
	121 Move X2, X31
	122 Move X1, [X8]
	123 Call String.op_Inequality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {149}
	128 Move X8, 0xA9E000
	129 Move X0, [X20+144]
	130 Move X8, [X8+544]
	131 Move X2, X31
	132 Move X1, [X8]
	133 Call String.op_Inequality, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {149}
	138 Move X8, 0xA9E000
	139 Move X0, [X20+144]
	140 Move X8, [X8+552]
	141 Move X2, X31
	142 Move X1, [X8]
	143 Call String.op_Inequality, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {149}
	148 Move [X20+144], X19
	149 Move X20, [X31+16]
	150 Move X19, [X31+24]
	151 Move X30, [X31+32]
	152 Move X21, [X31+40]
	153 Return 
	154 Move X0, 0xA5F000
	155 Move X0, [X0+1400]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xAA2000
	160 Move X0, [X0+1152]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xA61000
	164 Move X0, [X0+3784]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentException..ctor, X0, X1, X2
	171 Move X0, 0xAA2000
	172 Move X0, [X0+1984]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC
	177 Call 0x1C17F20

Method: System.Void set_PreAuthenticate(System.Boolean value)

Disassembly:
	0x0369DB44 CBNZ W8, 0x369DB68
	0x0369DB48 MOV X1, X31
	0x0369DB4C BL 0x322B8DC

ISIL:
	001 And W8, W1, 1
	002 Move [X0+161], W8
	003 Return 

Method: System.Version get_ProtocolVersion()

Disassembly:
	0x0369DB50 ADRP X8, 0xA56000
	0x0369DB54 LDR X8, [X8 + 0x988]

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_ProtocolVersion(System.Version value)

Disassembly:
	0x0369DB58 MOV X2, X31
	0x0369DB5C LDR X1, [X8]
	0x0369DB60 BL 0x3226EF8
	0x0369DB64 TBNZ X0, 0x0, 0x369DCBC
	0x0369DB68 LDR X19, [X21 + 0x110]
	0x0369DB6C STRB W31, [X31 + 0xC]
	0x0369DB70 ADD X1, X31, 0xC
	0x0369DB74 MOV X0, X19
	0x0369DB78 MOV X2, X31
	0x0369DB7C BL 0x33DE64C
	0x0369DB80 LDRB W8, [X21 + 0x10D]
	0x0369DB84 CBNZ W8, 0x369DC70
	0x0369DB88 LDR X22, [X21 + 0xF8]
	0x0369DB8C CBNZ X22, 0x369DBB8
	0x0369DB90 LDR X8, [X21 + 0x90]
	0x0369DB94 MOVZ W9, 0x1
	0x0369DB98 STRB W9, [X21 + 0x104]
	0x0369DB9C STR X8, [X21 + 0x98]
	0x0369DBA0 MOV X0, X21
	0x0369DBA4 MOV W1, W31
	0x0369DBA8 MOV X2, X31
	0x0369DBAC MOV X3, X20
	0x0369DBB0 BL 0x369D68C
	0x0369DBB4 MOV X22, X0
	0x0369DBB8 MOV X20, X31
	0x0369DBBC MOVZ W21, 0x15
	0x0369DBC0 LDRB W8, [X31 + 0xC]
	0x0369DBC4 CBZ W8, 0x369DBD4
	0x0369DBC8 MOV X0, X19
	0x0369DBCC MOV X1, X31
	0x0369DBD0 BL 0x33E14E4
	0x0369DBD4 CBNZ X20, 0x369DC68
	0x0369DBD8 CMP W21, 0x15
	0x0369DBDC B.EQ 0x369DBE4
	0x0369DBE0 CBNZ W21, 0x369DBF4
	0x0369DBE4 CBZ X22, 0x369DCB8
	0x0369DBE8 MOV X0, X22
	0x0369DBEC MOV X1, X31
	0x0369DBF0 BL 0x36B0770
	0x0369DBF4 LDP X20, X19, [X31 + 0x20]
	0x0369DBF8 LDP X22, X21, [X31 + 0x10]
	0x0369DBFC LDR X30, [X31], #0x30
	0x0369DC00 RET
	0x0369DC04 ADRP X0, 0xAA0000
	0x0369DC08 LDR X0, [X0 + 0xCD8]
	0x0369DC0C BL 0x1C16D08
	0x0369DC10 BL 0x1C16F10
	0x0369DC14 MOV X19, X0
	0x0369DC18 ADRP X0, 0xAA0000
	0x0369DC1C LDR X0, [X0 + 0xCE0]
	0x0369DC20 BL 0x1C16D08
	0x0369DC24 MOV X1, X0
	0x0369DC28 MOV X0, X19
	0x0369DC2C MOV X2, X31
	0x0369DC30 BL 0x36792F8
	0x0369DC34 ADRP X0, 0xAA1000
	0x0369DC38 LDR X0, [X0 + 0x848]
	0x0369DC3C BL 0x1C16D08
	0x0369DC40 MOV X1, X0
	0x0369DC44 MOV X0, X19
	0x0369DC48 BL 0x1C16DEC
	0x0369DC4C ADRP X0, 0xA7E000
	0x0369DC50 LDR X0, [X0 + 0xB88]
	0x0369DC54 BL 0x1C16D08
	0x0369DC58 BL 0x19903D0
	0x0369DC5C BL 0x369DDA0
	0x0369DC60 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD44000
	007 Move X21, 0xA9E000
	008 Move W8, [X22+2235]
	009 Move X21, [X21+360]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA9E000
	017 Move X0, [X0+360]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2235], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X0, X19
	029 Move X2, X31
	030 Move X1, [X8+8]
	031 Call Version.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {51}
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Move X0, X19
	044 Move X2, X31
	045 Move X1, [X8+16]
	046 Call Version.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {60}
	051 Move W8, 1
	052 Move [X20+176], W8
	053 Move [X20+168], X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return 
	060 Move X0, 0xA5F000
	061 Move X0, [X0+1400]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X19, X0
	065 Move X0, 0xAA2000
	066 Move X0, [X0+1992]
	067 Call 0x1C17D08
	068 Move X20, X0
	069 Move X0, 0xA61000
	070 Move X0, [X0+3784]
	071 Call 0x1C17D08
	072 Move X2, X0
	073 Move X0, X19
	074 Move X1, X20
	075 Move X3, X31
	076 Call ArgumentException..ctor, X0, X1, X2
	077 Move X0, 0xAA2000
	078 Move X0, [X0+2000]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.Net.IWebProxy get_Proxy()

Disassembly:
	0x0369DC64 B 0x369DC34
	0x0369DC68 MOV X0, X20

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Void set_Proxy(System.Net.IWebProxy value)

Disassembly:
	0x0369DC6C BL 0x1C16F18
	0x0369DC70 ADRP X0, 0xA56000
	0x0369DC74 LDR X0, [X0 + 0x5B0]
	0x0369DC78 BL 0x1C16D08
	0x0369DC7C BL 0x1C16F10
	0x0369DC80 MOV X20, X0
	0x0369DC84 ADRP X0, 0xAA0000
	0x0369DC88 LDR X0, [X0 + 0xBE8]
	0x0369DC8C BL 0x1C16D08
	0x0369DC90 MOV X1, X0
	0x0369DC94 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call HttpWebRequest.CheckRequestStarted, X0
	007 Move [X20+192], X19
	008 Move [X20+208], X31
	009 Move X0, X20
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]

Method: System.Uri get_RequestUri()

Disassembly:
	0x0369DDC4 LDR X20, [X20 + 0x860]
	0x0369DDC8 LDR X19, [X19 + 0x330]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Boolean get_SendChunked()

Disassembly:
	0x0369DDCC TBNZ X8, 0x0, 0x369DDFC
	0x0369DDD0 ADRP X0, 0xAA0000

ISIL:
	001 Move W0, [X0+200]
	002 Return X0

Method: System.Void set_SendChunked(System.Boolean value)

Disassembly:
	0x0369DDD4 LDR X0, [X0 + 0xF10]
	0x0369DDD8 BL 0x1C16CF4
	0x0369DDDC ADRP X0, 0xA81000
	0x0369DDE0 LDR X0, [X0 + 0x330]
	0x0369DDE4 BL 0x1C16CF4
	0x0369DDE8 ADRP X0, 0xAA1000
	0x0369DDEC LDR X0, [X0 + 0x860]
	0x0369DDF0 BL 0x1C16CF4
	0x0369DDF4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 And W20, W1, 1
	006 Call HttpWebRequest.CheckRequestStarted, X0
	007 Move [X19+200], W20
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 

Method: System.Net.ServicePoint get_ServicePoint()

Disassembly:
	0x0369DDF8 STRB W8, [X22 + 0x8C9]

ISIL:
	001 Call HttpWebRequest.GetServicePoint, X0
	002 Return X0

Method: System.Net.ServicePoint get_ServicePointNoLock()

Disassembly:
	0x0369DDFC LDR X0, [X21]
	0x0369DE00 MOVZ W8, 0x6

ISIL:
	001 Move X0, [X0+208]
	002 Return X0

Method: System.Int32 get_Timeout()

Disassembly:
	0x0369DE04 ADD X1, X31, 0xC
	0x0369DE08 STR W8, [X31 + 0xC]

ISIL:
	001 Move W0, [X0+216]
	002 Return X0

Method: System.Void set_Timeout(System.Int32 value)

Disassembly:
	0x0369DE0C BL 0x1C16E04
	0x0369DE10 LDR X8, [X20]
	0x0369DE14 MOV X1, X0
	0x0369DE18 MOV X2, X31
	0x0369DE1C MOV X0, X8
	0x0369DE20 BL 0x32094D4
	0x0369DE24 LDR X8, [X19]
	0x0369DE28 MOV X19, X0
	0x0369DE2C MOV X0, X8
	0x0369DE30 BL 0x1C16F10
	0x0369DE34 MOVZ W2, 0x6
	0x0369DE38 MOV X1, X19
	0x0369DE3C MOV X3, X31
	0x0369DE40 MOV X20, X0
	0x0369DE44 BL 0x367A0D4
	0x0369DE48 MOV X0, X20
	0x0369DE4C LDP X20, X19, [X31 + 0x20]
	0x0369DE50 LDP X22, X21, [X31 + 0x10]
	0x0369DE54 LDR X30, [X31], #0x30
	0x0369DE58 RET
	0x0369DE5C STP X30, X25, [X31 - 0x40]!
	0x0369DE60 STP X24, X23, [X31 + 0x10]
	0x0369DE64 STP X22, X21, [X31 + 0x20]
	0x0369DE68 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add W31, W1, 2
	004 Move [X0+216], W1
	005 Move X30, [X31+16]
	006 Move X19, [X31+24]
	007 Return 
	008 Move X0, 0xA5F000
	009 Move X0, [X0+1888]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Move X0, 0xA61000
	014 Move X0, [X0+3784]
	015 Call 0x1C17D08
	016 Move X1, X0
	017 Move X0, X19
	018 Move X2, X31
	019 Call ArgumentOutOfRangeException..ctor, X0, X1
	020 Move X0, 0xAA2000
	021 Move X0, [X0+2008]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17DEC

Method: System.String get_TransferEncoding()

Disassembly:
	0x0369DE6C ADRP X24, 0xD43000
	0x0369DE70 ADRP X25, 0xAA1000
	0x0369DE74 ADRP X22, 0xAA1000
	0x0369DE78 ADRP X23, 0xAA1000
	0x0369DE7C LDRB W8, [X24 + 0x8C1]
	0x0369DE80 LDR X25, [X25 + 0x868]
	0x0369DE84 LDR X22, [X22 + 0x848]
	0x0369DE88 LDR X23, [X23 + 0x870]
	0x0369DE8C MOV X19, X2
	0x0369DE90 MOV X20, X1
	0x0369DE94 MOV X21, X0
	0x0369DE98 TBNZ X8, 0x0, 0x369DEC8
	0x0369DE9C ADRP X0, 0xAA1000
	0x0369DEA0 LDR X0, [X0 + 0x868]
	0x0369DEA4 BL 0x1C16CF4
	0x0369DEA8 ADRP X0, 0xAA1000
	0x0369DEAC LDR X0, [X0 + 0x848]
	0x0369DEB0 BL 0x1C16CF4
	0x0369DEB4 ADRP X0, 0xAA1000
	0x0369DEB8 LDR X0, [X0 + 0x870]
	0x0369DEBC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD44000
	005 Move W8, [X20+2236]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA9E000
	012 Move X0, [X0+400]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2236], W8
	016 Move X0, [X19+120]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0xA9E000
	020 Move X8, [X8+400]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.Boolean get_UseDefaultCredentials()

Disassembly:
	0x0369DEC0 MOVZ W8, 0x1
	0x0369DEC4 STRB W8, [X24 + 0x8C1]
	0x0369DEC8 LDR X0, [X25]
	0x0369DECC BL 0x1C16F10
	0x0369DED0 LDR X2, [X22]
	0x0369DED4 MOV X1, X21
	0x0369DED8 MOV X3, X31
	0x0369DEDC MOV X22, X0
	0x0369DEE0 BL 0x2D2B9F4
	0x0369DEE4 LDR X2, [X23]
	0x0369DEE8 MOV X0, X21
	0x0369DEEC MOV X1, X22
	0x0369DEF0 BL 0x21ED3FC
	0x0369DEF4 MOV X1, X20
	0x0369DEF8 MOV X2, X19
	0x0369DEFC LDP X20, X19, [X31 + 0x30]
	0x0369DF00 LDP X22, X21, [X31 + 0x20]
	0x0369DF04 LDP X24, X23, [X31 + 0x10]
	0x0369DF08 MOV X3, X31
	0x0369DF0C LDP X30, X25, [X31], #0x40
	0x0369DF10 B 0x33ED028
	0x0369DF14 STP X30, X21, [X31 - 0x20]!
	0x0369DF18 STP X20, X19, [X31 + 0x10]
	0x0369DF1C ADRP X21, 0xD43000
	0x0369DF20 LDRB W8, [X21 + 0x8C2]
	0x0369DF24 MOV X20, X1
	0x0369DF28 MOV X19, X0
	0x0369DF2C TBNZ X8, 0x0, 0x369DF44
	0x0369DF30 ADRP X0, 0xAA1000
	0x0369DF34 LDR X0, [X0 + 0x878]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD44000
	005 Move W8, [X20+2335]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0xAA1000
	010 Move X0, [X0+3072]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+2335], W8
	014 Move X20, 0xAA1000
	015 Move X20, [X20+3072]
	016 Move X0, [X20]
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {22}
	020 Call 0x1C17DFC
	021 Move X0, [X20]
	022 Move X8, [X0+184]
	023 Move X9, [X19]
	024 Move X0, X19
	025 Move X20, [X8]
	026 Move X8, [X9+552]
	027 Move X1, [X9+560]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Boolean get_UnsafeAuthenticatedConnectionSharing()

Disassembly:
	0x0369DF38 BL 0x1C16CF4
	0x0369DF3C MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+377]
	002 Return X0

Method: System.Boolean get_ExpectContinue()

Disassembly:
	0x0369DF40 STRB W8, [X21 + 0x8C2]
	0x0369DF44 CBZ X20, 0x369DF68

ISIL:
	001 Move W0, [X0+268]
	002 Return X0

Method: System.Void set_ExpectContinue(System.Boolean value)

Disassembly:
	0x0369DF48 ADRP X8, 0xAA1000
	0x0369DF4C LDR X8, [X8 + 0x878]
	0x0369DF50 LDR X1, [X8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+268], W8
	003 Return 

Method: System.Uri get_AuthUri()

Disassembly:
	0x0369DF54 MOV X0, X20
	0x0369DF58 BL 0x229BC28

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Boolean get_ProxyQuery()

Disassembly:
	0x0369DF5C LDP X20, X19, [X31 + 0x10]
	0x0369DF60 LDP X30, X21, [X31], #0x20
	0x0369DF64 RET
	0x0369DF68 ADRP X0, 0xA5B000
	0x0369DF6C LDR X0, [X0 + 0x528]
	0x0369DF70 BL 0x1C16D08
	0x0369DF74 BL 0x1C16F10
	0x0369DF78 MOV X19, X0
	0x0369DF7C ADRP X0, 0xA81000
	0x0369DF80 LDR X0, [X0 + 0xDD0]
	0x0369DF84 BL 0x1C16D08
	0x0369DF88 MOV X1, X0
	0x0369DF8C MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+208]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move W9, [X8+48]
	006 Compare W9, 0
	007 JumpIfEqual {11}
	008 Move W8, [X8+50]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move W0, W31
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.Net.ServerCertValidationCallback get_ServerCertValidationCallback()

Disassembly:
	0x0369DF90 MOV X2, X31
	0x0369DF94 BL 0x330E100

ISIL:
	001 Move X0, [X0+312]
	002 Return X0

Method: System.Net.Security.RemoteCertificateValidationCallback get_ServerCertificateValidationCallback()

Disassembly:
	0x0369DF98 ADRP X0, 0xAA1000
	0x0369DF9C LDR X0, [X0 + 0x880]
	0x0369DFA0 BL 0x1C16D08
	0x0369DFA4 MOV X1, X0
	0x0369DFA8 MOV X0, X19
	0x0369DFAC BL 0x1C16DEC

ISIL:
	001 Move X8, [X0+312]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X8+16]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.Void set_ServerCertificateValidationCallback(System.Net.Security.RemoteCertificateValidationCallback value)

Disassembly:
	0x0369DFB0 CMP W1, 0x1
	0x0369DFB4 MOV X20, X0
	0x0369DFB8 B.NE 0x369E028
	0x0369DFBC MOV X0, X20
	0x0369DFC0 BL 0x3EB1AD0
	0x0369DFC4 MOV X20, X0
	0x0369DFC8 ADRP X0, 0xA56000
	0x0369DFCC LDR X0, [X0 + 0x7D0]
	0x0369DFD0 BL 0x1C16D08
	0x0369DFD4 LDR X8, [X20]
	0x0369DFD8 LDR X1, [X8]
	0x0369DFDC BL 0x1C17270
	0x0369DFE0 TBZ X0, 0x0, 0x369E000
	0x0369DFE4 LDR X20, [X20]
	0x0369DFE8 BL 0x3EB1AE0
	0x0369DFEC MOV X0, X19
	0x0369DFF0 MOV X1, X20
	0x0369DFF4 BL 0x369E034
	0x0369DFF8 MOV X19, X0
	0x0369DFFC B 0x369DF98
	0x0369E000 MOVZ W0, 0x8
	0x0369E004 BL 0x3EB1AF0
	0x0369E008 LDR X8, [X20]
	0x0369E00C STR X8, [X0]
	0x0369E010 ADRP X1, 0x816000
	0x0369E014 ADD X1, X1, 0xE58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD44000
	006 Move W8, [X21+2237]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA9D000
	014 Move X0, [X0+1336]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2237], W8
	018 Compare X20, 0
	019 JumpIfEqual {28}
	020 Move X8, 0xA9D000
	021 Move X8, [X8+1336]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X20
	025 Move X21, X0
	026 Call ServerCertValidationCallback..ctor, X0, X1
	027 Move [X19+312], X21
	028 Move [X19+312], X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Net.ServicePoint GetServicePoint()

Disassembly:
	0x0369DC98 MOV X2, X31
	0x0369DC9C BL 0x337DF1C
	0x0369DCA0 ADRP X0, 0xAA1000
	0x0369DCA4 LDR X0, [X0 + 0x848]
	0x0369DCA8 BL 0x1C16D08
	0x0369DCAC MOV X1, X0
	0x0369DCB0 MOV X0, X20
	0x0369DCB4 BL 0x1C16DEC
	0x0369DCB8 BL 0x1C16F20
	0x0369DCBC ADRP X0, 0xA56000
	0x0369DCC0 LDR X0, [X0 + 0x5B0]
	0x0369DCC4 BL 0x1C16D08
	0x0369DCC8 BL 0x1C16F10
	0x0369DCCC MOV X19, X0
	0x0369DCD0 ADRP X0, 0xAA1000
	0x0369DCD4 LDR X0, [X0 + 0x850]
	0x0369DCD8 BL 0x1C16D08
	0x0369DCDC MOV X1, X0
	0x0369DCE0 MOV X0, X19
	0x0369DCE4 MOV X2, X31
	0x0369DCE8 BL 0x337DF1C
	0x0369DCEC B 0x369DC34
	0x0369DCF0 ADRP X0, 0xAA0000
	0x0369DCF4 LDR X0, [X0 + 0xCD8]
	0x0369DCF8 BL 0x1C16D08
	0x0369DCFC BL 0x1C16F10
	0x0369DD00 MOV X19, X0
	0x0369DD04 ADRP X0, 0xAA1000
	0x0369DD08 LDR X0, [X0 + 0x858]
	0x0369DD0C B 0x369DC20
	0x0369DD10 B 0x369DD18
	0x0369DD14 B 0x369DD18
	0x0369DD18 MOV X21, X0
	0x0369DD1C CMP W1, 0x1
	0x0369DD20 B.NE 0x369DD40
	0x0369DD24 MOV X0, X21
	0x0369DD28 BL 0x3EB1AD0
	0x0369DD2C LDR X20, [X0]
	0x0369DD30 BL 0x3EB1AE0
	0x0369DD34 MOV W21, W31
	0x0369DD38 MOV X22, X31
	0x0369DD3C B 0x369DBC0
	0x0369DD40 MOV X20, X31
	0x0369DD44 B 0x369DD4C
	0x0369DD48 MOV X21, X0
	0x0369DD4C LDRB W8, [X31 + 0xC]
	0x0369DD50 CBZ W8, 0x369DD60
	0x0369DD54 MOV X0, X19
	0x0369DD58 MOV X1, X31
	0x0369DD5C BL 0x33E14E4
	0x0369DD60 CBNZ X20, 0x369DD6C
	0x0369DD64 MOV X0, X21
	0x0369DD68 BL 0x1D2C690
	0x0369DD6C MOV X0, X20
	0x0369DD70 BL 0x1C16F18
	0x0369DD74 BL 0x1990590
	0x0369DD78 STR X30, [X31 - 0x10]!
	0x0369DD7C ADD X0, X0, 0x100
	0x0369DD80 MOV W1, W31
	0x0369DD84 MOV W2, W31
	0x0369DD88 MOV X3, X31
	0x0369DD8C BL 0x33E7AB4
	0x0369DD90 CMP W0, 0x1
	0x0369DD94 CSET W0, EQ
	0x0369DD98 LDR X30, [X31], #0x10
	0x0369DD9C RET
	0x0369DDA0 STR X30, [X31 - 0x30]!
	0x0369DDA4 STP X22, X21, [X31 + 0x10]
	0x0369DDA8 STP X20, X19, [X31 + 0x20]
	0x0369DDAC ADRP X22, 0xD43000
	0x0369DDB0 ADRP X21, 0xAA0000
	0x0369DDB4 ADRP X20, 0xAA1000
	0x0369DDB8 ADRP X19, 0xA81000
	0x0369DDBC LDRB W8, [X22 + 0x8C9]
	0x0369DDC0 LDR X21, [X21 + 0xF10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD44000
	007 Move W8, [X19+2238]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA85000
	014 Move X0, [X0+560]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+2238], W8
	018 Move X19, [X20+272]
	019 Move [X31+12], W31
	020 Add X1, X31, 12
	021 Move X0, X19
	022 Move X2, X31
	023 Call Monitor.Enter, X0, X1
	024 Move W8, [X20+48]
	025 Compare W8, 0
	026 JumpIfEqual {42}
	027 Move X8, 0xA85000
	028 Move X8, [X8+560]
	029 Move X21, [X20+40]
	030 Move X22, [X20+192]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X21
	037 Move X1, X22
	038 Call ServicePointManager.FindServicePoint, X0, X1
	039 Move X21, X31
	040 Move [X20+208], X0
	041 Move [X20+48], W31
	042 Move X8, [X20+208]
	043 Compare X8, 0
	044 JumpIfEqual {27}
	045 Move X21, X31
	046 Move W8, [X31+12]
	047 Compare W8, 0
	048 JumpIfEqual {52}
	049 Move X0, X19
	050 Move X1, X31
	051 Call Monitor.Exit, X0
	052 Compare X21, 0
	053 JumpIfNotEqual {61}
	054 Move X0, [X20+208]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return X0
	061 Move X0, X21
	062 Call 0x1C17F18
	063 Move X22, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X22
	066 Call 0x3EB2AD0
	067 Move X21, [X0]
	068 Call 0x3EB2AE0
	069 Move X21, X31
	070 Move X22, X0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Monitor.Exit, X0
	077 Compare X21, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X22
	080 Call 0x1D2D690
	081 Move X0, X21
	082 Call 0x1C17F18
	083 Call 0x1991590

Method: System.Net.WebOperation SendRequest(System.Boolean redirecting, System.Net.BufferOffsetSize writeBuffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0369E68C MOV X1, X20
	0x0369E690 MOV X2, X19
	0x0369E694 LDP X20, X19, [X31 + 0x20]
	0x0369E698 LDP X22, X21, [X31 + 0x10]
	0x0369E69C MOV X3, X31
	0x0369E6A0 LDP X30, X23, [X31], #0x30
	0x0369E6A4 B 0x33ED028
	0x0369E6A8 ADRP X0, 0xA7D000
	0x0369E6AC LDR X0, [X0 + 0xB88]
	0x0369E6B0 BL 0x1C16D08
	0x0369E6B4 BL 0x19903D0
	0x0369E6B8 BL 0x369DDA0
	0x0369E6BC MOV X19, X0
	0x0369E6C0 B 0x369E6F4
	0x0369E6C4 ADRP X0, 0xA55000
	0x0369E6C8 LDR X0, [X0 + 0x5B0]
	0x0369E6CC BL 0x1C16D08
	0x0369E6D0 BL 0x1C16F10
	0x0369E6D4 MOV X19, X0
	0x0369E6D8 ADRP X0, 0xAA0000
	0x0369E6DC LDR X0, [X0 + 0x850]
	0x0369E6E0 BL 0x1C16D08
	0x0369E6E4 MOV X1, X0
	0x0369E6E8 MOV X0, X19
	0x0369E6EC MOV X2, X31
	0x0369E6F0 BL 0x337DF1C
	0x0369E6F4 ADRP X0, 0xAA0000
	0x0369E6F8 LDR X0, [X0 + 0x8E0]
	0x0369E6FC BL 0x1C16D08
	0x0369E700 MOV X1, X0
	0x0369E704 MOV X0, X19
	0x0369E708 BL 0x1C16DEC
	0x0369E70C STP X30, X21, [X31 - 0x20]!
	0x0369E710 STP X20, X19, [X31 + 0x10]
	0x0369E714 ADRP X21, 0xD42000
	0x0369E718 LDRB W8, [X21 + 0x8CB]
	0x0369E71C MOV X20, X1
	0x0369E720 MOV X19, X0
	0x0369E724 TBNZ X8, 0x0, 0x369E73C
	0x0369E728 ADRP X0, 0xAA0000
	0x0369E72C LDR X0, [X0 + 0x8E8]
	0x0369E730 BL 0x1C16CF4
	0x0369E734 MOVZ W8, 0x1
	0x0369E738 STRB W8, [X21 + 0x8CB]
	0x0369E73C CBZ X20, 0x369E760
	0x0369E740 ADRP X8, 0xAA0000
	0x0369E744 LDR X8, [X8 + 0x8E8]
	0x0369E748 LDR X1, [X8]
	0x0369E74C MOV X0, X20
	0x0369E750 BL 0x229BC28
	0x0369E754 LDP X20, X19, [X31 + 0x10]
	0x0369E758 LDP X30, X21, [X31], #0x20
	0x0369E75C RET
	0x0369E760 ADRP X0, 0xA5A000
	0x0369E764 LDR X0, [X0 + 0x528]
	0x0369E768 BL 0x1C16D08
	0x0369E76C BL 0x1C16F10
	0x0369E770 MOV X19, X0
	0x0369E774 ADRP X0, 0xA80000
	0x0369E778 LDR X0, [X0 + 0xDD0]
	0x0369E77C BL 0x1C16D08
	0x0369E780 MOV X1, X0
	0x0369E784 MOV X0, X19
	0x0369E788 MOV X2, X31
	0x0369E78C BL 0x330E100
	0x0369E790 ADRP X0, 0xAA0000
	0x0369E794 LDR X0, [X0 + 0x8F0]
	0x0369E798 BL 0x1C16D08
	0x0369E79C MOV X1, X0
	0x0369E7A0 MOV X0, X19
	0x0369E7A4 BL 0x1C16DEC
	0x0369E7A8 CMP W1, 0x1
	0x0369E7AC MOV X20, X0
	0x0369E7B0 B.NE 0x369E820
	0x0369E7B4 MOV X0, X20
	0x0369E7B8 BL 0x3EB1AD0
	0x0369E7BC MOV X20, X0
	0x0369E7C0 ADRP X0, 0xA55000
	0x0369E7C4 LDR X0, [X0 + 0x7D0]
	0x0369E7C8 BL 0x1C16D08
	0x0369E7CC LDR X8, [X20]
	0x0369E7D0 LDR X1, [X8]
	0x0369E7D4 BL 0x1C17270
	0x0369E7D8 TBZ X0, 0x0, 0x369E7F8
	0x0369E7DC LDR X20, [X20]
	0x0369E7E0 BL 0x3EB1AE0
	0x0369E7E4 MOV X0, X19
	0x0369E7E8 MOV X1, X20
	0x0369E7EC BL 0x369E034
	0x0369E7F0 MOV X19, X0
	0x0369E7F4 B 0x369E790
	0x0369E7F8 MOVZ W0, 0x8
	0x0369E7FC BL 0x3EB1AF0
	0x0369E800 LDR X8, [X20]
	0x0369E804 STR X8, [X0]
	0x0369E808 ADRP X1, 0x816000
	0x0369E80C ADD X1, X1, 0xE58
	0x0369E810 MOV X2, X31
	0x0369E814 BL 0x3EB1B00
	0x0369E818 MOV X20, X0
	0x0369E81C BL 0x3EB1AE0
	0x0369E820 MOV X0, X20
	0x0369E824 BL 0x1D2C690
	0x0369E828 BL 0x1990590
	0x0369E82C AND W8, W1, 0x1
	0x0369E830 STRB W8, [X0 + 0x118]
	0x0369E834 RET
	0x0369E838 STR X30, [X31 - 0x20]!
	0x0369E83C STP X20, X19, [X31 + 0x10]
	0x0369E840 ADRP X20, 0xD42000
	0x0369E844 LDRB W8, [X20 + 0x8CC]
	0x0369E848 MOV X19, X0
	0x0369E84C TBNZ X8, 0x0, 0x369E864
	0x0369E850 ADRP X0, 0xAA0000
	0x0369E854 LDR X0, [X0 + 0x8F8]
	0x0369E858 BL 0x1C16CF4
	0x0369E85C MOVZ W8, 0x1
	0x0369E860 STRB W8, [X20 + 0x8CC]
	0x0369E864 ADD X0, X19, 0x100
	0x0369E868 MOVZ W1, 0x1
	0x0369E86C MOV W2, W31
	0x0369E870 MOV X3, X31
	0x0369E874 MOVZ W20, 0x1
	0x0369E878 BL 0x33E7AB4
	0x0369E87C CMP W0, 0x1
	0x0369E880 B.EQ 0x369E8C8
	0x0369E884 LDR X0, [X19 + 0xF8]
	0x0369E888 STRB W20, [X19 + 0x70]
	0x0369E88C CBZ X0, 0x369E898
	0x0369E890 MOV X1, X31
	0x0369E894 BL 0x36AFF38
	0x0369E898 LDR X0, [X19 + 0xF0]
	0x0369E89C CBZ X0, 0x369E8B0
	0x0369E8A0 ADRP X8, 0xAA0000
	0x0369E8A4 LDR X8, [X8 + 0x8F8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xD43000
	009 Move W8, [X19+2239]
	010 Move X23, X3
	011 Move X24, X2
	012 Move W22, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAA1000
	019 Move X0, [X0+2080]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2239], W8
	023 Move X19, [X20+272]
	024 Move [X31+12], W31
	025 Add X1, X31, 12
	026 Move X0, X19
	027 Move X2, X31
	028 Call Monitor.Enter, X0, X1
	029 Move TEMP, X22
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {57}
	033 Move W8, [X20+113]
	034 Compare W8, 0
	035 JumpIfEqual {57}
	036 Move X21, [X20+248]
	037 Compare X21, 0
	038 JumpIfNotEqual {89}
	039 Move X0, 0xA56000
	040 Move X0, [X0+1456]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X20, X0
	044 Move X0, 0xAA1000
	045 Move X0, [X0+2088]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X20
	049 Move X2, X31
	050 Call InvalidOperationException..ctor, X0, X1
	051 Move X0, 0xAA1000
	052 Move X0, [X0+2096]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X20
	056 Call 0x1C17DEC
	057 Move X8, 0xAA1000
	058 Move X8, [X8+2080]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X21, X0
	062 Move X1, X20
	063 Move X2, X24
	064 Move W3, W31
	065 Move X4, X23
	066 Move X5, X31
	067 Call WebOperation..ctor, X0, X1, X2, X3, X4
	068 Add X0, X20, 248
	069 Move X1, X21
	070 Move X2, X31
	071 Call 0x1C25138
	072 Compare X0, 0
	073 JumpIfNotEqual {109}
	074 Move W8, 1
	075 Move [X20+113], W8
	076 Move TEMP, X22
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Move [X20+264], W31
	081 Move X0, X20
	082 Call HttpWebRequest.GetServicePoint, X0
	083 Move [X20+208], X0
	084 Compare X0, 0
	085 JumpIfEqual {127}
	086 Move X2, [X20+64]
	087 Move X1, X21
	088 Call ServicePoint.SendRequest, X0, X1, X2
	089 Move X22, X31
	090 Move W8, [X31+12]
	091 Compare W8, 0
	092 JumpIfEqual {96}
	093 Move X0, X19
	094 Move X1, X31
	095 Call Monitor.Exit, X0
	096 Compare X22, 0
	097 JumpIfNotEqual {107}
	098 Move X0, X21
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X24, [X31+16]
	104 Move X23, [X31+24]
	105 Move X30, [X31+64]
	106 Return X0
	107 Move X0, X22
	108 Call 0x1C17F18
	109 Move X0, 0xA56000
	110 Move X0, [X0+1456]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X0, 0xA9C000
	115 Move X0, [X0+1456]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X20
	119 Move X2, X31
	120 Call InvalidOperationException..ctor, X0, X1
	121 Move X0, 0xAA1000
	122 Move X0, [X0+2096]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X20
	126 Call 0x1C17DEC
	127 Call 0x1C17F20
	128 Move X20, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X20
	131 Call 0x3EB2AD0
	132 Move X22, [X0]
	133 Call 0x3EB2AE0
	134 Move X21, X31
	135 Move X22, X31
	136 Move X20, X0
	137 Move W8, [X31+12]
	138 Compare W8, 0
	139 JumpIfEqual {143}
	140 Move X0, X19
	141 Move X1, X31
	142 Call Monitor.Exit, X0
	143 Compare X22, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X20
	146 Call 0x1D2D690
	147 Move X0, X22
	148 Call 0x1C17F18
	149 Call 0x1991590

Method: System.Threading.Tasks.Task`1<System.IO.Stream> MyGetRequestStreamAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0369EA18 LDR X0, [X19 + 0x78]
	0x0369EA1C STR X8, [X19 + 0x90]
	0x0369EA20 CBZ X0, 0x369EA48
	0x0369EA24 ADRP X8, 0xA9C000
	0x0369EA28 LDR X8, [X8 + 0x190]
	0x0369EA2C MOV X2, X31
	0x0369EA30 LDR X1, [X8]
	0x0369EA34 BL 0x36806B8
	0x0369EA38 STRB W31, [X19 + 0xC8]
	0x0369EA3C LDP X20, X19, [X31 + 0x10]
	0x0369EA40 LDP X30, X21, [X31], #0x20
	0x0369EA44 RET
	0x0369EA48 BL 0x1C16F20
	0x0369EA4C SUB X31, X31, 0x50
	0x0369EA50 STR X30, [X31 + 0x10]
	0x0369EA54 STP X24, X23, [X31 + 0x20]
	0x0369EA58 STP X22, X21, [X31 + 0x30]
	0x0369EA5C STP X20, X19, [X31 + 0x40]
	0x0369EA60 ADRP X22, 0xD42000
	0x0369EA64 LDRB W8, [X22 + 0x8CE]
	0x0369EA68 MOV X19, X2
	0x0369EA6C MOV W21, W1
	0x0369EA70 MOV X20, X0
	0x0369EA74 TBNZ X8, 0x0, 0x369EB04
	0x0369EA78 ADRP X0, 0xA5E000
	0x0369EA7C LDR X0, [X0 + 0x758]
	0x0369EA80 BL 0x1C16CF4
	0x0369EA84 ADRP X0, 0xA9F000
	0x0369EA88 LDR X0, [X0 + 0xCD8]
	0x0369EA8C BL 0x1C16CF4
	0x0369EA90 ADRP X0, 0xA57000
	0x0369EA94 LDR X0, [X0 + 0xA28]
	0x0369EA98 BL 0x1C16CF4
	0x0369EA9C ADRP X0, 0xA80000
	0x0369EAA0 LDR X0, [X0 + 0x330]
	0x0369EAA4 BL 0x1C16CF4
	0x0369EAA8 ADRP X0, 0xAA0000
	0x0369EAAC LDR X0, [X0 + 0x910]
	0x0369EAB0 BL 0x1C16CF4
	0x0369EAB4 ADRP X0, 0xA9C000
	0x0369EAB8 LDR X0, [X0 + 0x9E0]
	0x0369EABC BL 0x1C16CF4
	0x0369EAC0 ADRP X0, 0xAA0000
	0x0369EAC4 LDR X0, [X0 + 0x918]
	0x0369EAC8 BL 0x1C16CF4
	0x0369EACC ADRP X0, 0xA7E000
	0x0369EAD0 LDR X0, [X0 + 0x4D8]
	0x0369EAD4 BL 0x1C16CF4
	0x0369EAD8 ADRP X0, 0xA7E000
	0x0369EADC LDR X0, [X0 + 0x4D0]
	0x0369EAE0 BL 0x1C16CF4
	0x0369EAE4 ADRP X0, 0xAA0000
	0x0369EAE8 LDR X0, [X0 + 0x920]
	0x0369EAEC BL 0x1C16CF4
	0x0369EAF0 ADRP X0, 0xAA0000
	0x0369EAF4 LDR X0, [X0 + 0x928]
	0x0369EAF8 BL 0x1C16CF4
	0x0369EAFC MOVZ W8, 0x1
	0x0369EB00 STRB W8, [X22 + 0x8CE]
	0x0369EB04 STR W31, [X31 + 0x1C]
	0x0369EB08 LDR W9, [X20 + 0x108]
	0x0369EB0C SUB W8, W21, 0x12C
	0x0369EB10 CMP W8, 0x7
	0x0369EB14 ADD W9, W9, 0x1
	0x0369EB18 STR W9, [X20 + 0x108]
	0x0369EB1C B.HI 0x369EB70
	0x0369EB20 ADRP X9, 0xFFFFFFFFFD4F9000
	0x0369EB24 ADD X9, X9, 0x7BA
	0x0369EB28 ADR X10, 0x18
	0x0369EB2C LDRB W11, [X9, X8, LSL]
	0x0369EB30 ADD X10, X10, X11, 0x2, LSL
	0x0369EB34 MOV X22, X31
	0x0369EB38 MOV W0, W31
	0x0369EB3C BR X10
	0x0369EB40 ADRP X8, 0xA7E000
	0x0369EB44 LDR X0, [X20 + 0x90]
	0x0369EB48 LDR X8, [X8 + 0x4D8]
	0x0369EB4C MOV X2, X31
	0x0369EB50 LDR X1, [X8]
	0x0369EB54 BL 0x321BA08
	0x0369EB58 MOV X22, X31
	0x0369EB5C TBZ X0, 0x0, 0x369EC1C
	0x0369EB60 MOV X0, X20
	0x0369EB64 BL 0x369E9D4
	0x0369EB68 MOV X22, X31
	0x0369EB6C B 0x369EC1C
	0x0369EB70 ADD X0, X31, 0x1C
	0x0369EB74 MOV X1, X31
	0x0369EB78 STR W21, [X31 + 0x1C]
	0x0369EB7C BL 0x337B6E0
	0x0369EB80 ADRP X8, 0xAA0000
	0x0369EB84 LDR X8, [X8 + 0x910]
	0x0369EB88 MOV X1, X0
	0x0369EB8C MOV X2, X31
	0x0369EB90 LDR X8, [X8]
	0x0369EB94 MOV X0, X8
	0x0369EB98 BL 0x321B938
	0x0369EB9C ADRP X8, 0xA9F000
	0x0369EBA0 LDR X8, [X8 + 0xCD8]
	0x0369EBA4 MOV X23, X0
	0x0369EBA8 LDR X8, [X8]
	0x0369EBAC MOV X0, X8
	0x0369EBB0 BL 0x1C16F10
	0x0369EBB4 MOV X1, X23
	0x0369EBB8 MOV X2, X31
	0x0369EBBC MOV X22, X0
	0x0369EBC0 BL 0x36792F8
	0x0369EBC4 B 0x369EC1C
	0x0369EBC8 ADRP X8, 0xA5E000
	0x0369EBCC LDR X8, [X8 + 0x758]
	0x0369EBD0 LDR X0, [X8]
	0x0369EBD4 BL 0x1C16F10
	0x0369EBD8 ADRP X8, 0xAA0000
	0x0369EBDC LDR X8, [X8 + 0x920]
	0x0369EBE0 MOV X2, X31
	0x0369EBE4 MOV X22, X0
	0x0369EBE8 LDR X1, [X8]
	0x0369EBEC BL 0x33802E4
	0x0369EBF0 B 0x369EC1C
	0x0369EBF4 ADRP X8, 0xA80000
	0x0369EBF8 LDR X8, [X8 + 0x330]
	0x0369EBFC LDR X0, [X8]
	0x0369EC00 BL 0x1C16F10
	0x0369EC04 ADRP X8, 0xAA0000
	0x0369EC08 LDR X8, [X8 + 0x928]
	0x0369EC0C MOV X2, X31
	0x0369EC10 MOV X22, X0
	0x0369EC14 LDR X1, [X8]
	0x0369EC18 BL 0x367E910
	0x0369EC1C ADRP X23, 0xA7E000
	0x0369EC20 LDR X23, [X23 + 0x4D0]
	0x0369EC24 LDR X0, [X20 + 0x90]
	0x0369EC28 MOV X2, X31
	0x0369EC2C LDR X1, [X23]
	0x0369EC30 BL 0x3226EF8
	0x0369EC34 TBZ X0, 0x0, 0x369ECAC
	0x0369EC38 LDRB W8, [X20 + 0x32]
	0x0369EC3C CBZ W8, 0x369EC4C
	0x0369EC40 MOV X0, X20
	0x0369EC44 BL 0x369C244
	0x0369EC48 TBNZ X0, 0x0, 0x369ECAC
	0x0369EC4C LDR X8, [X20 + 0x170]
	0x0369EC50 CBNZ X8, 0x369ECAC
	0x0369EC54 LDR X0, [X20 + 0xE0]
	0x0369EC58 CBZ X0, 0x369EDD4
	0x0369EC5C MOV X1, X31
	0x0369EC60 BL 0x36B2614
	0x0369EC64 CMP W0, 0x0
	0x0369EC68 B.GT 0x369EC78
	0x0369EC6C LDR X8, [X20 + 0x50]
	0x0369EC70 CMP X8, 0x1
	0x0369EC74 B.LT 0x369ECAC
	0x0369EC78 ADRP X8, 0xA80000
	0x0369EC7C LDR X8, [X8 + 0x330]
	0x0369EC80 LDR X0, [X8]
	0x0369EC84 BL 0x1C16F10
	0x0369EC88 ADRP X8, 0xAA0000
	0x0369EC8C LDR X8, [X8 + 0x918]
	0x0369EC90 MOVZ W3, 0x7
	0x0369EC94 MOV X2, X31
	0x0369EC98 MOV X4, X19
	0x0369EC9C LDR X1, [X8]
	0x0369ECA0 MOV X5, X31
	0x0369ECA4 MOV X22, X0
	0x0369ECA8 BL 0x367B5A0
	0x0369ECAC CBNZ X22, 0x369EDD8
	0x0369ECB0 LDR X8, [X20]
	0x0369ECB4 MOV X0, X20
	0x0369ECB8 LDR X9, [X8 + 0x328]
	0x0369ECBC LDR X1, [X8 + 0x330]
	0x0369ECC0 BLR X9
	0x0369ECC4 TBNZ X0, 0x0, 0x369ECDC
	0x0369ECC8 LDR X0, [X20 + 0x90]
	0x0369ECCC LDR X1, [X23]
	0x0369ECD0 MOV X2, X31
	0x0369ECD4 BL 0x321BA08
	0x0369ECD8 TBZ X0, 0x0, 0x369ECE4
	0x0369ECDC MOVN X8, 0x0
	0x0369ECE0 STR X8, [X20 + 0x50]
	0x0369ECE4 CBZ X19, 0x369EDD4
	0x0369ECE8 LDR X8, [X19]
	0x0369ECEC MOV X0, X19
	0x0369ECF0 LDR X9, [X8 + 0x218]
	0x0369ECF4 LDR X1, [X8 + 0x220]
	0x0369ECF8 BLR X9
	0x0369ECFC CBZ X0, 0x369EDD4
	0x0369ED00 ADRP X8, 0xA9C000
	0x0369ED04 LDR X8, [X8 + 0x9E0]
	0x0369ED08 MOV X2, X31
	0x0369ED0C LDR X1, [X8]
	0x0369ED10 BL 0x366456C
	0x0369ED14 CBZ X0, 0x369EDF0
	0x0369ED18 ADRP X8, 0xA57000
	0x0369ED1C LDR X8, [X8 + 0xA28]
	0x0369ED20 MOV X22, X0
	0x0369ED24 LDR X23, [X20 + 0x28]
	0x0369ED28 LDR X0, [X8]
	0x0369ED2C BL 0x1C16F10
	0x0369ED30 MOV X24, X0
	0x0369ED34 MOV X1, X23
	0x0369ED38 MOV X2, X22
	0x0369ED3C MOV X3, X31
	0x0369ED40 BL 0x3619964
	0x0369ED44 STR X24, [X20 + 0x28]
	0x0369ED48 CBZ X24, 0x369EDD4
	0x0369ED4C MOV X0, X24
	0x0369ED50 MOV X1, X31
	0x0369ED54 BL 0x361CEF0
	0x0369ED58 CBZ X23, 0x369EDD4
	0x0369ED5C MOV X19, X0
	0x0369ED60 MOV X0, X23
	0x0369ED64 MOV X1, X31
	0x0369ED68 BL 0x361CEF0
	0x0369ED6C MOV X1, X0
	0x0369ED70 MOV X0, X19
	0x0369ED74 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD43000
	007 Move W8, [X19+2240]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xA7F000
	015 Move X0, [X0+1232]
	016 Call 0x1C17CF4
	017 Move X0, 0xA9D000
	018 Move X0, [X0+536]
	019 Call 0x1C17CF4
	020 Move X0, 0xA9D000
	021 Move X0, [X0+544]
	022 Call 0x1C17CF4
	023 Move X0, 0xA99000
	024 Move X0, [X0+2824]
	025 Call 0x1C17CF4
	026 Move X0, 0xA56000
	027 Move X0, [X0+2440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+2240], W8
	031 Add X0, X21, 256
	032 Move W1, W31
	033 Move W2, W31
	034 Move X3, X31
	035 Call Interlocked.CompareExchange, X0, X1, X2
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, 0xA7F000
	038 Move X8, [X8+1232]
	039 Move X0, [X21+144]
	040 Move X2, X31
	041 Move X1, [X8]
	042 Call String.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {155}
	047 Move X8, 0xA9D000
	048 Move X8, [X8+536]
	049 Move X0, [X21+144]
	050 Move X2, X31
	051 Move X1, [X8]
	052 Call String.op_Equality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {155}
	057 Move X8, 0xA99000
	058 Move X8, [X8+2824]
	059 Move X0, [X21+144]
	060 Move X2, X31
	061 Move X1, [X8]
	062 Call String.op_Equality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {155}
	067 Move X8, 0xA9D000
	068 Move X8, [X8+544]
	069 Move X0, [X21+144]
	070 Move X2, X31
	071 Move X1, [X8]
	072 Call String.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {155}
	077 Move X8, [X21+144]
	078 Compare X8, 0
	079 JumpIfEqual {155}
	080 Move X8, [X21+80]
	081 Add X31, X8, 1
	082 Move W8, [X21+200]
	083 Compare W8, 0
	084 JumpIfNotEqual {91}
	085 Move W8, [X21+50]
	086 Compare W8, 0
	087 JumpIfNotEqual {91}
	088 Move W8, [X21+128]
	089 Compare W8, 0
	090 JumpIfNotEqual {212}
	091 Move X0, X21
	092 Call HttpWebRequest.get_TransferEncoding, X0
	093 Compare X0, 0
	094 JumpIfEqual {109}
	095 Move W8, [X21+200]
	096 Compare W8, 0
	097 JumpIfNotEqual {109}
	098 Move X1, X31
	099 Call String.Trim, X0
	100 Move X8, 0xA56000
	101 Move X8, [X8+2440]
	102 Move X2, X31
	103 Move X1, [X8]
	104 Call String.op_Inequality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {200}
	109 Move X19, [X21+272]
	110 Move [X31+12], W31
	111 Add X1, X31, 12
	112 Move X0, X19
	113 Move X2, X31
	114 Call Monitor.Enter, X0, X1
	115 Move W8, [X21+269]
	116 Compare W8, 0
	117 JumpIfNotEqual {181}
	118 Move X22, [X21+248]
	119 Compare X22, 0
	120 JumpIfNotEqual {131}
	121 Move X8, [X21+144]
	122 Move W9, 1
	123 Move [X21+260], W9
	124 Move [X21+152], X8
	125 Move X0, X21
	126 Move W1, W31
	127 Move X2, X31
	128 Move X3, X20
	129 Call HttpWebRequest.SendRequest, X0, X1, X2, X3
	130 Move X22, X0
	131 Move X20, X31
	132 Move W21, 21
	133 Move W8, [X31+12]
	134 Compare W8, 0
	135 JumpIfEqual {139}
	136 Move X0, X19
	137 Move X1, X31
	138 Call Monitor.Exit, X0
	139 Compare X20, 0
	140 JumpIfNotEqual {179}
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Compare W21, 0
	143 JumpIfNotEqual {149}
	144 Compare X22, 0
	145 JumpIfEqual {199}
	146 Move X0, X22
	147 Move X1, X31
	148 Call WebOperation.GetRequestStream, X0
	149 Move X20, [X31+32]
	150 Move X19, [X31+40]
	151 Move X22, [X31+16]
	152 Move X21, [X31+24]
	153 Move X30, [X31+48]
	154 Return X0
	155 Move X0, 0xAA0000
	156 Move X0, [X0+3288]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X19, X0
	160 Move X0, 0xAA0000
	161 Move X0, [X0+3296]
	162 Call 0x1C17D08
	163 Move X1, X0
	164 Move X0, X19
	165 Move X2, X31
	166 Call ProtocolViolationException..ctor, X0, X1
	167 Move X0, 0xAA1000
	168 Move X0, [X0+2120]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Call 0x1C17DEC
	173 Move X0, 0xA7E000
	174 Move X0, [X0+2952]
	175 Call 0x1C17D08
	176 Call 0x19913D0
	177 Call HttpWebRequest.CreateRequestAbortedException
	178 Move X19, X0
	179 Move X0, X20
	180 Call 0x1C17F18
	181 Move X0, 0xA56000
	182 Move X0, [X0+1456]
	183 Call 0x1C17D08
	184 Call 0x1C17F10
	185 Move X20, X0
	186 Move X0, 0xAA0000
	187 Move X0, [X0+3048]
	188 Call 0x1C17D08
	189 Move X1, X0
	190 Move X0, X20
	191 Move X2, X31
	192 Call InvalidOperationException..ctor, X0, X1
	193 Move X0, 0xAA1000
	194 Move X0, [X0+2120]
	195 Call 0x1C17D08
	196 Move X1, X0
	197 Move X0, X20
	198 Call 0x1C17DEC
	199 Call 0x1C17F20
	200 Move X0, 0xA56000
	201 Move X0, [X0+1456]
	202 Call 0x1C17D08
	203 Call 0x1C17F10
	204 Move X19, X0
	205 Move X0, 0xAA1000
	206 Move X0, [X0+2128]
	207 Call 0x1C17D08
	208 Move X1, X0
	209 Move X0, X19
	210 Move X2, X31
	211 Call InvalidOperationException..ctor, X0, X1
	212 Move X0, 0xAA0000
	213 Move X0, [X0+3288]
	214 Call 0x1C17D08
	215 Call 0x1C17F10
	216 Move X19, X0
	217 Move X0, 0xAA1000
	218 Move X0, [X0+2136]
	219 Move X21, X0
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X0, X21
	222 Call 0x3EB2AD0
	223 Move X20, [X0]
	224 Call 0x3EB2AE0
	225 Move W21, W31
	226 Move X22, X31
	227 Move X20, X31
	228 Move X21, X0
	229 Move W8, [X31+12]
	230 Compare W8, 0
	231 JumpIfEqual {235}
	232 Move X0, X19
	233 Move X1, X31
	234 Call Monitor.Exit, X0
	235 Compare X20, 0
	236 JumpIfNotEqual {239}
	237 Move X0, X21
	238 Call 0x1D2D690
	239 Move X0, X20
	240 Call 0x1C17F18
	241 Call 0x1991590

Method: System.IAsyncResult BeginGetRequestStream(System.AsyncCallback callback, System.Object state)

Disassembly:
	0x0369EE5C BL 0x1C16D08
	0x0369EE60 MOV X1, X0
	0x0369EE64 MOV X0, X21
	0x0369EE68 BL 0x1C16DEC
	0x0369EE6C CMP W1, 0x1
	0x0369EE70 MOV X20, X0
	0x0369EE74 B.NE 0x369EF08
	0x0369EE78 MOV X0, X20
	0x0369EE7C BL 0x3EB1AD0
	0x0369EE80 MOV X20, X0
	0x0369EE84 ADRP X0, 0xA55000
	0x0369EE88 LDR X0, [X0 + 0x7D0]
	0x0369EE8C BL 0x1C16D08
	0x0369EE90 LDR X8, [X20]
	0x0369EE94 LDR X1, [X8]
	0x0369EE98 BL 0x1C17270
	0x0369EE9C TBZ X0, 0x0, 0x369EEE0
	0x0369EEA0 BL 0x3EB1AE0
	0x0369EEA4 STR W21, [X31 + 0xC]
	0x0369EEA8 ADRP X0, 0xA55000
	0x0369EEAC LDR X0, [X0 + 0x758]
	0x0369EEB0 BL 0x1C16D08
	0x0369EEB4 ADD X1, X31, 0xC
	0x0369EEB8 BL 0x1C16E04
	0x0369EEBC MOV X20, X0
	0x0369EEC0 ADRP X0, 0xAA0000
	0x0369EEC4 LDR X0, [X0 + 0x940]
	0x0369EEC8 BL 0x1C16D08
	0x0369EECC MOV X1, X22
	0x0369EED0 MOV X2, X20
	0x0369EED4 MOV X3, X31
	0x0369EED8 BL 0x3227BD4
	0x0369EEDC B 0x369EE24
	0x0369EEE0 MOVZ W0, 0x8
	0x0369EEE4 BL 0x3EB1AF0
	0x0369EEE8 LDR X8, [X20]
	0x0369EEEC STR X8, [X0]
	0x0369EEF0 ADRP X1, 0x816000
	0x0369EEF4 ADD X1, X1, 0xE58
	0x0369EEF8 MOV X2, X31
	0x0369EEFC BL 0x3EB1B00
	0x0369EF00 MOV X20, X0
	0x0369EF04 BL 0x3EB1AE0
	0x0369EF08 MOV X0, X20
	0x0369EF0C BL 0x1D2C690
	0x0369EF10 BL 0x1990590

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xD43000
	010 Move X25, 0xAA1000
	011 Move X22, 0xAA1000
	012 Move X23, 0xAA1000
	013 Move W8, [X24+2241]
	014 Move X25, [X25+2152]
	015 Move X22, [X22+2120]
	016 Move X23, [X23+2160]
	017 Move X19, X2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xAA1000
	025 Move X0, [X0+2152]
	026 Call 0x1C17CF4
	027 Move X0, 0xAA1000
	028 Move X0, [X0+2120]
	029 Call 0x1C17CF4
	030 Move X0, 0xAA1000
	031 Move X0, [X0+2160]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+2241], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X2, [X22]
	038 Move X1, X21
	039 Move X3, X31
	040 Move X22, X0
	041 Call Func`2<CancellationToken, Object>..ctor, X0, X1, X2
	042 Move X2, [X23]
	043 Move X0, X21
	044 Move X1, X22
	045 Call 0x21EE3FC, X0, X1
	046 Move X1, X20
	047 Move X2, X19
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X3, X31
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Call TaskToApm.Begin, X0, X1, X2
	058 Return X0

Method: System.IO.Stream EndGetRequestStream(System.IAsyncResult asyncResult)

Disassembly:
	0x0369EF14 STP X30, X23, [X31 - 0x30]!
	0x0369EF18 STP X22, X21, [X31 + 0x10]
	0x0369EF1C STP X20, X19, [X31 + 0x20]
	0x0369EF20 ADRP X20, 0xD42000
	0x0369EF24 LDRB W8, [X20 + 0x8CF]
	0x0369EF28 MOV X19, X0
	0x0369EF2C TBNZ X8, 0x0, 0x369F01C
	0x0369EF30 ADRP X0, 0xA9C000
	0x0369EF34 LDR X0, [X0 + 0x168]
	0x0369EF38 BL 0x1C16CF4
	0x0369EF3C ADRP X0, 0xA57000
	0x0369EF40 LDR X0, [X0 + 0xA28]
	0x0369EF44 BL 0x1C16CF4
	0x0369EF48 ADRP X0, 0xA9C000
	0x0369EF4C LDR X0, [X0 + 0x188]
	0x0369EF50 BL 0x1C16CF4
	0x0369EF54 ADRP X0, 0xA58000
	0x0369EF58 LDR X0, [X0 + 0x278]
	0x0369EF5C BL 0x1C16CF4
	0x0369EF60 ADRP X0, 0xA9C000
	0x0369EF64 LDR X0, [X0 + 0xB88]
	0x0369EF68 BL 0x1C16CF4
	0x0369EF6C ADRP X0, 0xA9C000
	0x0369EF70 LDR X0, [X0 + 0x9E8]
	0x0369EF74 BL 0x1C16CF4
	0x0369EF78 ADRP X0, 0xAA0000
	0x0369EF7C LDR X0, [X0 + 0x948]
	0x0369EF80 BL 0x1C16CF4
	0x0369EF84 ADRP X0, 0xAA0000
	0x0369EF88 LDR X0, [X0 + 0x200]
	0x0369EF8C BL 0x1C16CF4
	0x0369EF90 ADRP X0, 0xA9C000
	0x0369EF94 LDR X0, [X0 + 0x190]
	0x0369EF98 BL 0x1C16CF4
	0x0369EF9C ADRP X0, 0xA9C000
	0x0369EFA0 LDR X0, [X0 + 0x258]
	0x0369EFA4 BL 0x1C16CF4
	0x0369EFA8 ADRP X0, 0xA7D000
	0x0369EFAC LDR X0, [X0 + 0xB28]
	0x0369EFB0 BL 0x1C16CF4
	0x0369EFB4 ADRP X0, 0xAA0000
	0x0369EFB8 LDR X0, [X0 + 0x950]
	0x0369EFBC BL 0x1C16CF4
	0x0369EFC0 ADRP X0, 0xA9C000
	0x0369EFC4 LDR X0, [X0 + 0x158]
	0x0369EFC8 BL 0x1C16CF4
	0x0369EFCC ADRP X0, 0xA9C000
	0x0369EFD0 LDR X0, [X0 + 0xB90]
	0x0369EFD4 BL 0x1C16CF4
	0x0369EFD8 ADRP X0, 0xA9C000
	0x0369EFDC LDR X0, [X0 + 0xAD8]
	0x0369EFE0 BL 0x1C16CF4
	0x0369EFE4 ADRP X0, 0xA55000
	0x0369EFE8 LDR X0, [X0 + 0x988]
	0x0369EFEC BL 0x1C16CF4
	0x0369EFF0 ADRP X0, 0xAA0000
	0x0369EFF4 LDR X0, [X0 + 0x958]
	0x0369EFF8 BL 0x1C16CF4
	0x0369EFFC ADRP X0, 0xAA0000
	0x0369F000 LDR X0, [X0 + 0x208]
	0x0369F004 BL 0x1C16CF4
	0x0369F008 ADRP X0, 0xA56000
	0x0369F00C LDR X0, [X0 + 0x4B0]
	0x0369F010 BL 0x1C16CF4
	0x0369F014 MOVZ W8, 0x1
	0x0369F018 STRB W8, [X20 + 0x8CF]
	0x0369F01C ADRP X21, 0xA9B000
	0x0369F020 ADRP X22, 0xA7C000
	0x0369F024 LDRB W8, [X19 + 0xC8]
	0x0369F028 LDR X21, [X21 + 0x190]
	0x0369F02C LDR X22, [X22 + 0xB28]
	0x0369F030 CBZ W8, 0x369F070

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD43000
	006 Move W8, [X21+2242]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAA1000
	014 Move X0, [X0+2168]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2242], W8
	018 Compare X20, 0
	019 JumpIfEqual {30}
	020 Move X8, 0xAA1000
	021 Move X8, [X8+2168]
	022 Move X1, [X8]
	023 Move X0, X20
	024 Call TaskToApm.End, X0
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0
	030 Move X0, 0xA5B000
	031 Move X0, [X0+1320]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0xA81000
	036 Move X0, [X0+3536]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call ArgumentNullException..ctor, X0, X1
	042 Move X0, 0xAA1000
	043 Move X0, [X0+2176]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, X0
	050 Move X0, X20
	051 Call 0x3EB2AD0
	052 Move X20, X0
	053 Move X0, 0xA56000
	054 Move X0, [X0+2000]
	055 Call 0x1C17D08
	056 Move X8, [X20]
	057 Move X1, [X8]
	058 Call 0x1C18270
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {69}
	063 Move X20, [X20]
	064 Call 0x3EB2AE0
	065 Move X0, X19
	066 Move X1, X20
	067 Call HttpWebRequest.GetWebException, X0, X1
	068 Move X19, X0
	069 Move W0, 8
	070 Call 0x3EB2AF0
	071 Move X8, [X20]
	072 Move [X0], X8
	073 Move X1, 0x816000
	074 Add X1, X1, 3672
	075 Move X2, X31
	076 Call 0x3EB2B00
	077 Move X20, X0
	078 Call 0x3EB2AE0
	079 Move X0, X20
	080 Call 0x1D2D690
	081 Call 0x1991590

Method: System.Threading.Tasks.Task`1<System.IO.Stream> GetRequestStreamAsync()

Disassembly:
	0x0369F0B8 LDR X2, [X8]
	0x0369F0BC BL 0x368133C
	0x0369F0C0 MOV W23, W31
	0x0369F0C4 B 0x369F140
	0x0369F0C8 LDR X0, [X19 + 0x78]
	0x0369F0CC CBZ X0, 0x369F564
	0x0369F0D0 LDR X1, [X22]
	0x0369F0D4 MOV X2, X31
	0x0369F0D8 BL 0x36806B8
	0x0369F0DC MOV W21, W31
	0x0369F0E0 B 0x369F15C
	0x0369F0E4 CMP X8, 0x0
	0x0369F0E8 B.GT 0x369F0A0
	0x0369F0EC LDRB W8, [X19 + 0x104]
	0x0369F0F0 CBNZ W8, 0x369F0A0
	0x0369F0F4 LDR X0, [X19 + 0x78]
	0x0369F0F8 CBZ X0, 0x369F564
	0x0369F0FC LDR X1, [X22]
	0x0369F100 MOV X2, X31
	0x0369F104 BL 0x36806B8
	0x0369F108 B 0x369F0C0
	0x0369F10C LDRB W9, [X19 + 0x48]
	0x0369F110 CMP X8, 0x0
	0x0369F114 CSET W23, GT
	0x0369F118 CBZ W9, 0x369F550
	0x0369F11C LDR X20, [X19 + 0x78]
	0x0369F120 MOV X1, X31
	0x0369F124 BL 0x337C96C
	0x0369F128 CBZ X20, 0x369F564
	0x0369F12C LDR X1, [X22]
	0x0369F130 MOV X2, X0
	0x0369F134 MOV X0, X20
	0x0369F138 MOV X3, X31
	0x0369F13C BL 0x368133C
	0x0369F140 LDR X0, [X19 + 0x78]
	0x0369F144 CBZ X0, 0x369F564
	0x0369F148 LDR X1, [X21]
	0x0369F14C MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD42000
	008 Move X23, 0xAA0000
	009 Move X20, 0xAA0000
	010 Move X21, 0xAA0000
	011 Move W8, [X22+2243]
	012 Move X23, [X23+2152]
	013 Move X20, [X20+2120]
	014 Move X21, [X21+2160]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xAA0000
	021 Move X0, [X0+2152]
	022 Call 0x1C17CF4
	023 Move X0, 0xAA0000
	024 Move X0, [X0+2120]
	025 Call 0x1C17CF4
	026 Move X0, 0xAA0000
	027 Move X0, [X0+2160]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2243], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call Func`2<CancellationToken, Object>..ctor, X0, X1, X2
	038 Move X2, [X21]
	039 Move X0, X19
	040 Move X1, X20
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call 0x21EE3FC, X0, X1
	048 Return X0

Method: System.Threading.Tasks.Task`1<T> RunWithTimeout(System.Func`2<System.Threading.CancellationToken, System.Threading.Tasks.Task`1<T>> func, System.Int32 timeout, System.Action abort, System.Func`1<System.Boolean> aborted, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x021EE6C4 MOV X0, X19
	0x021EE6C8 BL 0x1C5C6E0
	0x021EE6CC LDR X8, [X19 + 0x38]
	0x021EE6D0 LDR X0, [X8 + 0x8]
	0x021EE6D4 LDRB W8, [X0 + 0x135]
	0x021EE6D8 TBNZ X8, 0x0, 0x21EE6E0
	0x021EE6DC BL 0x1C5C684
	0x021EE6E0 LDR W8, [X0 + 0xE0]
	0x021EE6E4 CBNZ W8, 0x21EE6EC
	0x021EE6E8 BL 0x1C16DFC
	0x021EE6EC LDR X8, [X19 + 0x38]
	0x021EE6F0 LDR X0, [X8]
	0x021EE6F4 BL 0x2D23FB4
	0x021EE6F8 LDR X8, [X19 + 0x38]
	0x021EE6FC LDR X0, [X8 + 0x8]
	0x021EE700 LDRB W8, [X0 + 0x135]
	0x021EE704 TBNZ X8, 0x0, 0x21EE70C
	0x021EE708 BL 0x1C5C684
	0x021EE70C ADRP X8, 0x1F2D000
	0x021EE710 LDR X0, [X0 + 0xB8]
	0x021EE714 LDR X8, [X8 + 0xB90]
	0x021EE718 LDR X1, [X8]
	0x021EE71C BL 0x25E6504
	0x021EE720 LDR X0, [X0]
	0x021EE724 LDP X30, X19, [X31], #0x10
	0x021EE728 RET
	0x021EE72C STP X30, X19, [X31 - 0x10]!
	0x021EE730 LDR X8, [X0 + 0x38]
	0x021EE734 MOV X19, X0
	0x021EE738 CBNZ X8, 0x21EE75C
	0x021EE73C ADRP X0, 0x1F2D000
	0x021EE740 LDR X0, [X0 + 0xB90]
	0x021EE744 BL 0x1C16CF4
	0x021EE748 LDR X8, [X19 + 0x38]
	0x021EE74C CBNZ X8, 0x21EE75C
	0x021EE750 MOV X0, X19
	0x021EE754 BL 0x1C5C6E0
	0x021EE758 LDR X8, [X19 + 0x38]
	0x021EE75C LDR X0, [X8 + 0x8]
	0x021EE760 LDRB W8, [X0 + 0x135]
	0x021EE764 TBNZ X8, 0x0, 0x21EE76C
	0x021EE768 BL 0x1C5C684
	0x021EE76C LDR W8, [X0 + 0xE0]
	0x021EE770 CBNZ W8, 0x21EE778
	0x021EE774 BL 0x1C16DFC
	0x021EE778 LDR X8, [X19 + 0x38]
	0x021EE77C LDR X0, [X8]
	0x021EE780 BL 0x2D24328
	0x021EE784 LDR X8, [X19 + 0x38]
	0x021EE788 LDR X0, [X8 + 0x8]
	0x021EE78C LDRB W8, [X0 + 0x135]
	0x021EE790 TBNZ X8, 0x0, 0x21EE798
	0x021EE794 BL 0x1C5C684
	0x021EE798 ADRP X8, 0x1F2D000
	0x021EE79C LDR X0, [X0 + 0xB8]
	0x021EE7A0 LDR X8, [X8 + 0xB90]
	0x021EE7A4 LDR X1, [X8]
	0x021EE7A8 BL 0x25E6504
	0x021EE7AC LDR X0, [X0]
	0x021EE7B0 LDP X30, X19, [X31], #0x10
	0x021EE7B4 RET
	0x021EE7B8 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+56]
	009 Move X21, X5
	010 Move X24, X4
	011 Move X19, X3
	012 Move X20, X2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {28}
	017 Move X0, 0x1F08000
	018 Move X0, [X0+2640]
	019 Call 0x1C17CF4
	020 Move X0, 0x1F2E000
	021 Move X0, [X0+2952]
	022 Call 0x1C17CF4
	023 Move X8, [X21+56]
	024 Compare X8, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X21
	027 Call 0x1C5D6E0
	028 Move X8, 0x1F08000
	029 Move X8, [X8+2640]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X24
	036 Move X1, X31
	037 Call CancellationTokenSource.CreateLinkedTokenSource, X0
	038 Compare X0, 0
	039 JumpIfEqual {75}
	040 Move X1, X31
	041 Move X24, X0
	042 Call CancellationTokenSource.get_Token, X0
	043 Compare X23, 0
	044 JumpIfEqual {75}
	045 Move X1, X0
	046 Move X8, [X23+24]
	047 Move X0, [X23+64]
	048 Move X2, [X23+40]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, 0x1F2E000
	051 Move X8, [X8+2952]
	052 Move X23, X0
	053 Move X8, [X8]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X8, [X21+56]
	060 Move X0, X23
	061 Move W1, W22
	062 Move X2, X20
	063 Move X5, [X8+24]
	064 Move X3, X19
	065 Move X4, X24
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Call 0x21EE8DC, X0, X1, X2, X3, X4
	074 Return X0
	075 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<T> RunWithTimeoutWorker(System.Threading.Tasks.Task`1<T> workerTask, System.Int32 timeout, System.Action abort, System.Func`1<System.Boolean> aborted, System.Threading.CancellationTokenSource cts)

Disassembly:
	0x021EE8DC LDR X30, [X31 + 0x30]
	0x021EE8E0 ADD X31, X31, 0x70
	0x021EE8E4 RET
	0x021EE8E8 SUB X31, X31, 0x70
	0x021EE8EC STR X30, [X31 + 0x30]
	0x021EE8F0 STP X24, X23, [X31 + 0x40]
	0x021EE8F4 STP X22, X21, [X31 + 0x50]
	0x021EE8F8 STP X20, X19, [X31 + 0x60]
	0x021EE8FC LDR X8, [X5 + 0x38]
	0x021EE900 MOV X21, X4
	0x021EE904 MOV X22, X3
	0x021EE908 MOV W19, W2
	0x021EE90C MOV W20, W1
	0x021EE910 MOV X23, X0
	0x021EE914 CBNZ X8, 0x21EE928
	0x021EE918 MOV X0, X5
	0x021EE91C MOV X24, X5
	0x021EE920 BL 0x1C5C6E0
	0x021EE924 LDR X8, [X24 + 0x38]
	0x021EE928 MOVI V0.2D, 0x0
	0x021EE92C STR X31, [X31 + 0x20]
	0x021EE930 STP V0, V0, [X31]
	0x021EE934 LDR X0, [X8 + 0x18]
	0x021EE938 BL 0x21EE588
	0x021EE93C MOV X2, X0
	0x021EE940 ADD X0, X31, 0x0
	0x021EE944 MOVZ W5, 0x1
	0x021EE948 MOV X1, X23
	0x021EE94C MOV X3, X22
	0x021EE950 MOV X4, X21
	0x021EE954 MOV X6, X31
	0x021EE958 BL 0x3BFE4B0
	0x021EE95C ADD X0, X31, 0x0
	0x021EE960 MOV W1, W20
	0x021EE964 MOV W2, W19
	0x021EE968 MOV X3, X31
	0x021EE96C BL 0x3BFE1CC
	0x021EE970 LDP X20, X19, [X31 + 0x60]
	0x021EE974 LDP X22, X21, [X31 + 0x50]
	0x021EE978 LDP X24, X23, [X31 + 0x40]
	0x021EE97C LDR X30, [X31 + 0x30]
	0x021EE980 ADD X31, X31, 0x70
	0x021EE984 RET
	0x021EE988 SUB X31, X31, 0x70
	0x021EE98C STR X30, [X31 + 0x30]
	0x021EE990 STP X24, X23, [X31 + 0x40]
	0x021EE994 STP X22, X21, [X31 + 0x50]
	0x021EE998 STP X20, X19, [X31 + 0x60]
	0x021EE99C LDR X8, [X5 + 0x38]
	0x021EE9A0 MOV X21, X4
	0x021EE9A4 MOV X22, X3
	0x021EE9A8 MOV W19, W2
	0x021EE9AC MOV W20, W1
	0x021EE9B0 MOV X23, X0
	0x021EE9B4 CBNZ X8, 0x21EE9C8
	0x021EE9B8 MOV X0, X5
	0x021EE9BC MOV X24, X5
	0x021EE9C0 BL 0x1C5C6E0
	0x021EE9C4 LDR X8, [X24 + 0x38]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X8, [X5+56]
	010 Move X19, X5
	011 Move X20, X4
	012 Move X21, X3
	013 Move X22, X2
	014 Move W23, W1
	015 Move X24, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Move [X31+64], V0
	023 Move [X31+72], V0
	024 Move [X31+6], V0
	025 Move [X31+32], V0
	026 Move [X31+40], V0
	027 Move [X31+64], X24
	028 Move [X31+72], W23
	029 Move [X31+112], X31
	030 Move [X31+88], X22
	031 Move [X31+96], X21
	032 Move [X31+80], X20
	033 Move X0, [X8+24]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X8, [X19+56]
	045 Move X0, [X8+16]
	046 Add X8, X31, 8
	047 Call AsyncTaskMethodBuilder`1<Int32>.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X8, [X31+24]
	050 Move TEMP, 0
	051 Not TEMP
	052 Move W9, TEMP
	053 Move [X31+32], W9
	054 Move [X31+40], V0
	055 Move [X31+56], X8
	056 Move X8, [X19+56]
	057 Add X1, X31, 32
	058 Move X2, [X8+40]
	059 Add X8, X31, 32
	060 Or X20, X8, 15
	061 Move X0, X20
	062 Call AsyncTaskMethodBuilder`1<Int32>.Start, X0, X1
	063 Move X8, [X19+56]
	064 Move X0, X20
	065 Move X1, [X8+56]
	066 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	067 Move X20, [X31+176]
	068 Move X19, [X31+184]
	069 Move X22, [X31+160]
	070 Move X21, [X31+168]
	071 Move X24, [X31+144]
	072 Move X23, [X31+152]
	073 Move X30, [X31+128]
	074 Add X31, X31, 192
	075 Return X0

Method: System.Threading.Tasks.Task`1<T> RunWithTimeout(System.Func`2<System.Threading.CancellationToken, System.Threading.Tasks.Task`1<T>> func)

Disassembly:
	0x021EE3FC LDR X8, [X21 + 0x38]
	0x021EE400 MOVI V0.2D, 0x0
	0x021EE404 STR X31, [X31 + 0x20]
	0x021EE408 STP V0, V0, [X31]
	0x021EE40C LDR X1, [X8 + 0x8]
	0x021EE410 MOV X0, X22
	0x021EE414 LDR X8, [X1]
	0x021EE418 BLR X8
	0x021EE41C LDR X8, [X21 + 0x38]
	0x021EE420 MOV X21, X0
	0x021EE424 LDR X8, [X8 + 0x18]
	0x021EE428 LDR X9, [X8]
	0x021EE42C MOV X0, X8
	0x021EE430 BLR X9
	0x021EE434 MOV X2, X0
	0x021EE438 ADD X0, X31, 0x0
	0x021EE43C MOVZ W5, 0x2
	0x021EE440 MOV X1, X21
	0x021EE444 MOV X3, X20
	0x021EE448 MOV X4, X19
	0x021EE44C MOV X6, X31
	0x021EE450 BL 0x3BFE4B0
	0x021EE454 ADD X0, X31, 0x0
	0x021EE458 MOV X1, X31
	0x021EE45C BL 0x3BFE134
	0x021EE460 LDP X20, X19, [X31 + 0x50]
	0x021EE464 LDP X22, X21, [X31 + 0x40]
	0x021EE468 LDR X30, [X31 + 0x30]
	0x021EE46C ADD X31, X31, 0x60
	0x021EE470 RET
	0x021EE474 SUB X31, X31, 0x60
	0x021EE478 STR X30, [X31 + 0x30]
	0x021EE47C STP X22, X21, [X31 + 0x40]
	0x021EE480 STP X20, X19, [X31 + 0x50]
	0x021EE484 LDR X8, [X3 + 0x38]
	0x021EE488 MOV X19, X2
	0x021EE48C MOV X20, X1
	0x021EE490 MOV X21, X0
	0x021EE494 CBNZ X8, 0x21EE4A8
	0x021EE498 MOV X0, X3
	0x021EE49C MOV X22, X3
	0x021EE4A0 BL 0x1C5C6E0
	0x021EE4A4 LDR X8, [X22 + 0x38]
	0x021EE4A8 MOVI V0.2D, 0x0
	0x021EE4AC STR X31, [X31 + 0x20]
	0x021EE4B0 STP V0, V0, [X31]
	0x021EE4B4 LDR X0, [X8 + 0x18]
	0x021EE4B8 BL 0x21EE018
	0x021EE4BC MOV X2, X0
	0x021EE4C0 ADD X0, X31, 0x0
	0x021EE4C4 MOVZ W5, 0x2
	0x021EE4C8 MOV X1, X21
	0x021EE4CC MOV X3, X20
	0x021EE4D0 MOV X4, X19
	0x021EE4D4 MOV X6, X31
	0x021EE4D8 BL 0x3BFE4B0
	0x021EE4DC ADD X0, X31, 0x0
	0x021EE4E0 MOV X1, X31
	0x021EE4E4 BL 0x3BFE134
	0x021EE4E8 LDP X20, X19, [X31 + 0x50]
	0x021EE4EC LDP X22, X21, [X31 + 0x40]
	0x021EE4F0 LDR X30, [X31 + 0x30]
	0x021EE4F4 ADD X31, X31, 0x60
	0x021EE4F8 RET
	0x021EE4FC STP X30, X19, [X31 - 0x10]!
	0x021EE500 LDR X8, [X0 + 0x38]
	0x021EE504 MOV X19, X0
	0x021EE508 CBNZ X8, 0x21EE52C
	0x021EE50C ADRP X0, 0x1F2D000
	0x021EE510 LDR X0, [X0 + 0xB90]
	0x021EE514 BL 0x1C16CF4
	0x021EE518 LDR X8, [X19 + 0x38]
	0x021EE51C CBNZ X8, 0x21EE52C
	0x021EE520 MOV X0, X19
	0x021EE524 BL 0x1C5C6E0
	0x021EE528 LDR X8, [X19 + 0x38]
	0x021EE52C LDR X0, [X8 + 0x8]
	0x021EE530 LDRB W8, [X0 + 0x135]
	0x021EE534 TBNZ X8, 0x0, 0x21EE53C
	0x021EE538 BL 0x1C5C684
	0x021EE53C LDR W8, [X0 + 0xE0]
	0x021EE540 CBNZ W8, 0x21EE548
	0x021EE544 BL 0x1C16DFC
	0x021EE548 LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X2+56]
	010 Move X19, X2
	011 Move X22, X1
	012 Move X20, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {32}
	015 Move X0, 0x1F07000
	016 Move X0, [X0+3696]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F08000
	019 Move X0, [X0+2640]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F0F000
	022 Move X0, [X0+2368]
	023 Call 0x1C17CF4
	024 Move X0, 0x1F2E000
	025 Move X0, [X0+2952]
	026 Call 0x1C17CF4
	027 Move X8, [X19+56]
	028 Compare X8, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X19
	031 Call 0x1C5D6E0
	032 Move X8, 0x1F08000
	033 Move X8, [X8+2640]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X21, X0
	038 Call CancellationTokenSource..ctor, X0
	039 Compare X21, 0
	040 JumpIfEqual {98}
	041 Move X0, X21
	042 Move X1, X31
	043 Call CancellationTokenSource.get_Token, X0
	044 Compare X22, 0
	045 JumpIfEqual {98}
	046 Move X1, X0
	047 Move X8, [X22+24]
	048 Move X0, [X22+64]
	049 Move X2, [X22+40]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, 0x1F07000
	052 Move W22, [X20+216]
	053 Move X8, [X8+3696]
	054 Move X23, X0
	055 Move X8, [X8]
	056 Move X0, X8
	057 Call 0x1C17F10
	058 Move X8, [X20]
	059 Move X1, X20
	060 Move X3, X31
	061 Move X24, X0
	062 Move X2, [X8+784]
	063 Call Action..ctor, X0, X1, X2
	064 Move X8, 0x1F0F000
	065 Move X8, [X8+2368]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X8, [X19+56]
	069 Move X1, X20
	070 Move X3, X31
	071 Move X25, X0
	072 Move X2, [X8+24]
	073 Call Func`1<Boolean>..ctor, X0, X1, X2
	074 Move X8, 0x1F2E000
	075 Move X8, [X8+2952]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, [X19+56]
	082 Move X0, X23
	083 Move W1, W22
	084 Move X2, X24
	085 Move X5, [X8+32]
	086 Move X4, X21
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X3, X25
	094 Move X30, [X31+64]
	095 Move X25, [X31+72]
	096 Call HttpWebRequest.RunWithTimeoutWorker, X0, X1, X2, X3, X4
	097 Return X0
	098 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Net.HttpWebResponse> MyGetResponseAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0369F150 BL 0x36806B8
	0x0369F154 CMP W23, 0x0
	0x0369F158 CSET W21, NE
	0x0369F15C ADRP X22, 0xA9B000
	0x0369F160 LDR X22, [X22 + 0x168]
	0x0369F164 LDR X20, [X19 + 0xB8]
	0x0369F168 LDR X0, [X22]
	0x0369F16C LDR W8, [X0 + 0xE0]
	0x0369F170 CBNZ W8, 0x369F17C
	0x0369F174 BL 0x1C16DFC
	0x0369F178 LDR X0, [X22]
	0x0369F17C LDR X8, [X0 + 0xB8]
	0x0369F180 ADRP X23, 0xA9B000
	0x0369F184 MOV X0, X20
	0x0369F188 MOV X2, X31
	0x0369F18C LDR X1, [X8 + 0x10]
	0x0369F190 LDR X23, [X23 + 0xAD8]
	0x0369F194 BL 0x339C580
	0x0369F198 AND W8, W21, W0, 0x0
	0x0369F19C CMP W8, 0x1
	0x0369F1A0 B.NE 0x369F1DC
	0x0369F1A4 LDR X0, [X19 + 0xD0]
	0x0369F1A8 CBZ X0, 0x369F564
	0x0369F1AC BL 0x369F568
	0x0369F1B0 TBZ X0, 0x0, 0x369F1DC
	0x0369F1B4 LDR X0, [X19 + 0x78]
	0x0369F1B8 CBZ X0, 0x369F564
	0x0369F1BC ADRP X8, 0xA9B000
	0x0369F1C0 LDR X1, [X23]
	0x0369F1C4 LDR X8, [X8 + 0xB90]
	0x0369F1C8 MOV X3, X31
	0x0369F1CC LDR X2, [X8]
	0x0369F1D0 BL 0x3680664
	0x0369F1D4 MOVZ W8, 0x1
	0x0369F1D8 B 0x369F1F4
	0x0369F1DC LDR X0, [X19 + 0x78]
	0x0369F1E0 CBZ X0, 0x369F564
	0x0369F1E4 LDR X1, [X23]
	0x0369F1E8 MOV X2, X31
	0x0369F1EC BL 0x36806B8
	0x0369F1F0 MOV W8, W31
	0x0369F1F4 LDR X10, [X19 + 0xD0]
	0x0369F1F8 STRB W8, [X19 + 0x10C]
	0x0369F1FC CBZ X10, 0x369F564
	0x0369F200 ADRP X8, 0xA9F000
	0x0369F204 ADRP X9, 0xA9B000
	0x0369F208 LDRB W11, [X10 + 0x30]
	0x0369F20C LDR X8, [X8 + 0x208]
	0x0369F210 LDR X9, [X9 + 0x158]
	0x0369F214 CBZ W11, 0x369F22C
	0x0369F218 LDRB W10, [X10 + 0x32]
	0x0369F21C CMP W10, 0x0
	0x0369F220 CSET W10, EQ
	0x0369F224 CSEL X11, X8, X9, EQ
	0x0369F228 B 0x369F234
	0x0369F22C MOV W10, W31
	0x0369F230 MOV X11, X9
	0x0369F234 LDR X0, [X19 + 0x78]
	0x0369F238 CBZ X0, 0x369F564
	0x0369F23C CMP W10, 0x0
	0x0369F240 CSEL X8, X9, X8, NE

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+184], X25
	004 Move [X31+192], X24
	005 Move [X31+200], X23
	006 Move [X31+208], X22
	007 Move [X31+216], X21
	008 Move [X31+224], X20
	009 Move [X31+232], X19
	010 Move X22, 0xD42000
	011 Move X21, 0xAA0000
	012 Move W8, [X22+2244]
	013 Move X21, [X21+2184]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xAA0000
	021 Move X0, [X0+2192]
	022 Call 0x1C17CF4
	023 Move X0, 0xAA0000
	024 Move X0, [X0+2200]
	025 Call 0x1C17CF4
	026 Move X0, 0xAA0000
	027 Move X0, [X0+2208]
	028 Call 0x1C17CF4
	029 Move X0, 0xAA0000
	030 Move X0, [X0+2184]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2244], W8
	034 Move X24, 0xAA0000
	035 Move X23, 0xAA0000
	036 Move X22, 0xAA0000
	037 Move X24, [X24+2192]
	038 Move X23, [X23+2200]
	039 Move X22, [X22+2208]
	040 Add X0, X31, 8
	041 Move W2, 168
	042 Move W1, W31
	043 Add X25, X31, 8
	044 Call 0x3EB2B10
	045 Move X0, [X21]
	046 Move [X31+40], X20
	047 Move [X31+48], X19
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, [X24]
	053 Add X19, X25, 8
	054 Move X8, X19
	055 Call AsyncTaskMethodBuilder`1<Object>.Create
	056 Move X2, [X23]
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W8, TEMP
	060 Add X1, X31, 8
	061 Move X0, X19
	062 Move [X31+8], W8
	063 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	064 Move X1, [X22]
	065 Move X0, X19
	066 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	067 Move X20, [X31+224]
	068 Move X19, [X31+232]
	069 Move X22, [X31+208]
	070 Move X21, [X31+216]
	071 Move X24, [X31+192]
	072 Move X23, [X31+200]
	073 Move X30, [X31+176]
	074 Move X25, [X31+184]
	075 Add X31, X31, 240
	076 Return X0

Method: System.Threading.Tasks.Task`1<System.ValueTuple`5<System.Net.HttpWebResponse, System.Boolean, System.Boolean, System.Net.BufferOffsetSize, System.Net.WebOperation>> GetResponseFromData(System.Net.WebResponseStream stream, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0369F244 LDR X1, [X8]
	0x0369F248 LDR X20, [X11]
	0x0369F24C MOV X2, X31
	0x0369F250 BL 0x36806B8
	0x0369F254 LDR X0, [X19 + 0xD0]
	0x0369F258 CBZ X0, 0x369F564
	0x0369F25C LDR X8, [X0]
	0x0369F260 LDP X9, X1, [X8 + 0x178]
	0x0369F264 BLR X9
	0x0369F268 MOV X1, X31
	0x0369F26C MOV X2, X31
	0x0369F270 MOV X21, X0
	0x0369F274 BL 0x339C580
	0x0369F278 TBZ X0, 0x0, 0x369F284
	0x0369F27C MOVZ W23, 0x1
	0x0369F280 B 0x369F2B0
	0x0369F284 LDR X0, [X22]
	0x0369F288 LDR W8, [X0 + 0xE0]
	0x0369F28C CBNZ W8, 0x369F298
	0x0369F290 BL 0x1C16DFC
	0x0369F294 LDR X0, [X22]
	0x0369F298 LDR X8, [X0 + 0xB8]
	0x0369F29C MOV X0, X21
	0x0369F2A0 MOV X2, X31
	0x0369F2A4 LDR X1, [X8 + 0x8]
	0x0369F2A8 BL 0x339C580
	0x0369F2AC AND W23, W0, 0x1
	0x0369F2B0 LDRB W8, [X19 + 0x80]
	0x0369F2B4 CBZ W8, 0x369F35C
	0x0369F2B8 LDR X0, [X22]
	0x0369F2BC LDR X21, [X19 + 0xA8]
	0x0369F2C0 LDR W8, [X0 + 0xE0]
	0x0369F2C4 CBNZ W8, 0x369F2D0
	0x0369F2C8 BL 0x1C16DFC
	0x0369F2CC LDR X0, [X22]
	0x0369F2D0 LDR X8, [X0 + 0xB8]
	0x0369F2D4 MOV X0, X21
	0x0369F2D8 MOV X2, X31
	0x0369F2DC LDR X1, [X8 + 0x8]
	0x0369F2E0 BL 0x339C580
	0x0369F2E4 AND W8, W0, 0x1
	0x0369F2E8 ORR W8, W23, W8, 0x0
	0x0369F2EC CBZ W8, 0x369F354
	0x0369F2F0 LDR X0, [X19 + 0x78]
	0x0369F2F4 CBZ X0, 0x369F564
	0x0369F2F8 MOV X1, X20
	0x0369F2FC MOV X2, X31
	0x0369F300 BL 0x366456C
	0x0369F304 CBZ X0, 0x369F340
	0x0369F308 LDR X0, [X19 + 0x78]
	0x0369F30C CBZ X0, 0x369F564
	0x0369F310 MOV X1, X20
	0x0369F314 MOV X2, X31
	0x0369F318 BL 0x366456C
	0x0369F31C CBZ X0, 0x369F564
	0x0369F320 ADRP X8, 0xA9F000
	0x0369F324 LDR X8, [X8 + 0x950]
	0x0369F328 MOVZ W2, 0x5
	0x0369F32C MOV X3, X31
	0x0369F330 LDR X1, [X8]
	0x0369F334 BL 0x322BD40
	0x0369F338 ADDS W31, W0, 0x1

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0xD42000
	009 Move X22, 0xAA0000
	010 Move W8, [X23+2245]
	011 Move X22, [X22+2216]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xAA0000
	020 Move X0, [X0+2224]
	021 Call 0x1C17CF4
	022 Move X0, 0xAA0000
	023 Move X0, [X0+2232]
	024 Call 0x1C17CF4
	025 Move X0, 0xAA0000
	026 Move X0, [X0+2240]
	027 Call 0x1C17CF4
	028 Move X0, 0xAA0000
	029 Move X0, [X0+2216]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+2245], W8
	033 Move X0, [X22]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+32], V0
	036 Move [X31+40], V0
	037 Move [X31+80], V0
	038 Move [X31+88], V0
	039 Move [X31+4], V0
	040 Move [X31], V0
	041 Move [X31+8], V0
	042 Move [X31+32], X21
	043 Move [X31+40], X20
	044 Move [X31+48], X19
	045 Move X19, 0xAA0000
	046 Move X21, 0xAA0000
	047 Move X20, 0xAA0000
	048 Move W8, [X0+224]
	049 Move X19, [X19+2224]
	050 Move X21, [X21+2232]
	051 Move X20, [X20+2240]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X19]
	056 Add X8, X31, 0
	057 Or X19, X8, 15
	058 Move X8, X19
	059 Call AsyncTaskMethodBuilder`1<ValueTuple`5<Object, Boolean, Boolean, Object, Object>>.Create
	060 Move X2, [X21]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X19
	066 Move [X31], W8
	067 Call AsyncTaskMethodBuilder`1<ValueTuple`5<Object, Boolean, Boolean, Object, Object>>.Start, X0, X1
	068 Move X1, [X20]
	069 Move X0, X19
	070 Call AsyncTaskMethodBuilder`1<ValueTuple`5<Object, Boolean, Boolean, Object, Object>>.get_Task, X0
	071 Move X20, [X31+144]
	072 Move X19, [X31+152]
	073 Move X22, [X31+128]
	074 Move X21, [X31+136]
	075 Move X30, [X31+112]
	076 Move X23, [X31+120]
	077 Add X31, X31, 160
	078 Return X0

Method: System.Exception FlattenException(System.Exception e)

Disassembly:
	0x0369F33C B.NE 0x369F3AC
	0x0369F340 LDR X0, [X19 + 0x78]
	0x0369F344 CBZ X0, 0x369F564
	0x0369F348 ADRP X8, 0xA9F000
	0x0369F34C LDR X8, [X8 + 0x950]
	0x0369F350 B 0x369F39C
	0x0369F354 LDRB W8, [X19 + 0x80]
	0x0369F358 CBNZ W8, 0x369F3AC
	0x0369F35C LDR X0, [X22]
	0x0369F360 LDR X21, [X19 + 0xA8]
	0x0369F364 LDR W8, [X0 + 0xE0]
	0x0369F368 CBNZ W8, 0x369F374
	0x0369F36C BL 0x1C16DFC
	0x0369F370 LDR X0, [X22]
	0x0369F374 LDR X8, [X0 + 0xB8]
	0x0369F378 MOV X0, X21
	0x0369F37C MOV X2, X31
	0x0369F380 LDR X1, [X8 + 0x10]
	0x0369F384 BL 0x339C580
	0x0369F388 TBZ X0, 0x0, 0x369F3AC
	0x0369F38C LDR X0, [X19 + 0x78]
	0x0369F390 CBZ X0, 0x369F564
	0x0369F394 ADRP X8, 0xA9B000
	0x0369F398 LDR X8, [X8 + 0xB88]
	0x0369F39C LDR X2, [X8]
	0x0369F3A0 MOV X1, X20
	0x0369F3A4 MOV X3, X31
	0x0369F3A8 BL 0x3680664
	0x0369F3AC ADRP X8, 0xA56000
	0x0369F3B0 LDR X8, [X8 + 0xA28]
	0x0369F3B4 LDR X20, [X19 + 0x148]
	0x0369F3B8 LDR X0, [X8]
	0x0369F3BC LDR W8, [X0 + 0xE0]
	0x0369F3C0 CBNZ W8, 0x369F3C8
	0x0369F3C4 BL 0x1C16DFC
	0x0369F3C8 MOV X0, X20
	0x0369F3CC MOV X1, X31
	0x0369F3D0 MOV X2, X31
	0x0369F3D4 BL 0x361A090
	0x0369F3D8 TBZ X0, 0x0, 0x369F3F4
	0x0369F3DC LDR X0, [X19 + 0x148]
	0x0369F3E0 CBZ X0, 0x369F564
	0x0369F3E4 LDRB W8, [X19 + 0x140]
	0x0369F3E8 CBZ W8, 0x369F428
	0x0369F3EC MOVZ W1, 0x84
	0x0369F3F0 B 0x369F42C
	0x0369F3F4 LDR X0, [X19 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD42000
	005 Move W8, [X20+2246]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA87000
	012 Move X0, [X0+2256]
	013 Call 0x1C17CF4
	014 Move X0, 0xA89000
	015 Move X0, [X0+3816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2246], W8
	019 Compare X19, 0
	020 JumpIfEqual {47}
	021 Move X8, 0xA87000
	022 Move X8, [X8+2256]
	023 Move X9, [X19]
	024 Move X8, [X8]
	025 Move W11, [X9+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, [X9+200]
	029 Add X9, X9, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X19
	033 Move X1, X31
	034 Call AggregateException.Flatten, X0
	035 Compare X0, 0
	036 JumpIfEqual {52}
	037 Move X20, X0
	038 Move X0, [X0+144]
	039 Compare X0, 0
	040 JumpIfEqual {52}
	041 Move X8, 0xA89000
	042 Move X8, [X8+3816]
	043 Move X1, [X8]
	044 Call ReadOnlyCollection`1<Object>.get_Count, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X19, [X20+40]
	047 Move X0, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Net.WebException GetWebException(System.Exception e)

Disassembly:
	0x0369F034 LDR X0, [X19 + 0x78]
	0x0369F038 CBZ X0, 0x369F564
	0x0369F03C ADRP X8, 0xA9B000
	0x0369F040 LDR X8, [X8 + 0x258]
	0x0369F044 LDR X1, [X21]
	0x0369F048 MOV X3, X31
	0x0369F04C LDR X2, [X8]
	0x0369F050 BL 0x3680664
	0x0369F054 LDR X0, [X19 + 0x78]
	0x0369F058 CBZ X0, 0x369F564
	0x0369F05C LDR X1, [X22]
	0x0369F060 MOV X2, X31
	0x0369F064 BL 0x36806B8
	0x0369F068 MOVZ W21, 0x1
	0x0369F06C B 0x369F15C
	0x0369F070 MOV X0, X19
	0x0369F074 LDR X8, [X0 + 0x50]!
	0x0369F078 ADDS X31, X8, 0x1
	0x0369F07C B.EQ 0x369F0C8
	0x0369F080 LDR W9, [X19 + 0x15C]
	0x0369F084 CMP W9, 0x1
	0x0369F088 B.EQ 0x369F098
	0x0369F08C LDR W9, [X19 + 0x16C]
	0x0369F090 CMP W9, 0x1
	0x0369F094 B.NE 0x369F10C
	0x0369F098 LDRB W9, [X19 + 0x48]
	0x0369F09C CBZ W9, 0x369F0E4
	0x0369F0A0 LDR X0, [X19 + 0x78]
	0x0369F0A4 CBZ X0, 0x369F564
	0x0369F0A8 ADRP X8, 0xA56000
	0x0369F0AC LDR X1, [X22]
	0x0369F0B0 LDR X8, [X8 + 0x4B0]
	0x0369F0B4 MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD42000
	007 Move X21, 0xA7D000
	008 Move W8, [X22+2247]
	009 Move X21, [X21+2952]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA7D000
	017 Move X0, [X0+2952]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2247], W8
	021 Add X0, X20, 256
	022 Move W1, W31
	023 Move W2, W31
	024 Move X3, X31
	025 Call Interlocked.CompareExchange, X0, X1, X2
	026 Move X8, [X21]
	027 Move W20, W0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+48]
	041 Call HttpWebRequest.GetWebException, X0, X1
	042 Return X0

Method: System.Net.WebException GetWebException(System.Exception e, System.Boolean aborted)

Disassembly:
	0x0369F3F8 CBZ X0, 0x369F564
	0x0369F3FC MOV X1, X31
	0x0369F400 BL 0x361BE70
	0x0369F404 LDR X8, [X19 + 0x28]
	0x0369F408 CBZ X8, 0x369F564
	0x0369F40C TBZ X0, 0x0, 0x369F418
	0x0369F410 MOVZ W1, 0x4
	0x0369F414 B 0x369F41C
	0x0369F418 MOVZ W1, 0x84
	0x0369F41C MOVZ W2, 0x2
	0x0369F420 MOV X0, X8
	0x0369F424 B 0x369F430
	0x0369F428 MOVZ W1, 0x4
	0x0369F42C MOVZ W2, 0x2
	0x0369F430 MOV X3, X31
	0x0369F434 BL 0x3620B04
	0x0369F438 MOV X2, X0
	0x0369F43C LDR X0, [X19 + 0x78]
	0x0369F440 CBZ X0, 0x369F564
	0x0369F444 ADRP X8, 0xA9B000
	0x0369F448 LDR X8, [X8 + 0x188]
	0x0369F44C MOV X3, X31
	0x0369F450 LDR X1, [X8]
	0x0369F454 BL 0x368133C
	0x0369F458 LDR X0, [X19 + 0x60]
	0x0369F45C CBZ X0, 0x369F4BC
	0x0369F460 LDR X1, [X19 + 0x28]
	0x0369F464 ADRP X20, 0xA54000
	0x0369F468 LDR X20, [X20 + 0x988]
	0x0369F46C MOV X2, X31
	0x0369F470 BL 0x36906C0
	0x0369F474 LDR X1, [X20]
	0x0369F478 MOV X2, X31
	0x0369F47C MOV X20, X0
	0x0369F480 BL 0x3226EF8
	0x0369F484 LDR X8, [X19 + 0x78]
	0x0369F488 CBZ X8, 0x369F564
	0x0369F48C ADRP X9, 0xA9F000
	0x0369F490 LDR X9, [X9 + 0x200]
	0x0369F494 LDR X1, [X9]
	0x0369F498 TBZ X0, 0x0, 0x369F4B0
	0x0369F49C MOV X0, X8
	0x0369F4A0 MOV X2, X20
	0x0369F4A4 MOV X3, X31
	0x0369F4A8 BL 0x3680664
	0x0369F4AC B 0x369F4BC
	0x0369F4B0 MOV X0, X8
	0x0369F4B4 MOV X2, X31
	0x0369F4B8 BL 0x36806B8
	0x0369F4BC ADRP X8, 0xA57000
	0x0369F4C0 LDR X8, [X8 + 0x278]
	0x0369F4C4 LDR W9, [X19 + 0x11C]
	0x0369F4C8 ADRP X10, 0xA9F000
	0x0369F4CC ADRP X11, 0xA9F000
	0x0369F4D0 LDR X8, [X8]
	0x0369F4D4 LDR X10, [X10 + 0x948]
	0x0369F4D8 LDR X11, [X11 + 0x958]
	0x0369F4DC ANDS W31, W9, 0x1
	0x0369F4E0 CSEL X8, X31, X8, EQ
	0x0369F4E4 CMP X8, 0x0
	0x0369F4E8 CSEL X10, X10, X11, EQ
	0x0369F4EC LDR X10, [X10]
	0x0369F4F0 ANDS W31, W9, 0x2
	0x0369F4F4 CSEL X2, X8, X10, EQ
	0x0369F4F8 CBZ X2, 0x369F518
	0x0369F4FC LDR X0, [X19 + 0x78]
	0x0369F500 CBZ X0, 0x369F564
	0x0369F504 ADRP X8, 0xA9B000
	0x0369F508 LDR X8, [X8 + 0x9E8]
	0x0369F50C MOV X3, X31
	0x0369F510 LDR X1, [X8]
	0x0369F514 BL 0x3680664
	0x0369F518 LDRB W8, [X19 + 0xA2]
	0x0369F51C CBNZ W8, 0x369F530
	0x0369F520 LDRB W8, [X19 + 0xA1]
	0x0369F524 CBZ W8, 0x369F530
	0x0369F528 MOV X0, X19
	0x0369F52C BL 0x369F604
	0x0369F530 LDR X0, [X19 + 0x78]
	0x0369F534 CBZ X0, 0x369F564
	0x0369F538 LDR X8, [X0]
	0x0369F53C LDP X20, X19, [X31 + 0x20]
	0x0369F540 LDP X22, X21, [X31 + 0x10]
	0x0369F544 LDP X2, X1, [X8 + 0x168]
	0x0369F548 LDP X30, X23, [X31], #0x30
	0x0369F54C BR X2
	0x0369F550 LDRB W9, [X19 + 0x104]
	0x0369F554 CBNZ W9, 0x369F11C
	0x0369F558 CMP X8, 0x1
	0x0369F55C B.LT 0x369F0C0
	0x0369F560 B 0x369F11C
	0x0369F564 BL 0x1C16F20
	0x0369F568 STR X30, [X31 - 0x20]!
	0x0369F56C STP X20, X19, [X31 + 0x10]
	0x0369F570 ADRP X20, 0xD41000
	0x0369F574 LDRB W8, [X20 + 0x8F8]
	0x0369F578 MOV X19, X0
	0x0369F57C TBNZ X8, 0x0, 0x369F594
	0x0369F580 ADRP X0, 0xA9B000
	0x0369F584 LDR X0, [X0 + 0x168]
	0x0369F588 BL 0x1C16CF4
	0x0369F58C MOVZ W8, 0x1
	0x0369F590 STRB W8, [X20 + 0x8F8]
	0x0369F594 LDRB W8, [X19 + 0x31]
	0x0369F598 CBZ W8, 0x369F5B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD42000
	007 Move X21, 0xA7D000
	008 Move W8, [X22+2248]
	009 Move X21, [X21+2952]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xA7D000
	017 Move X0, [X0+2952]
	018 Call 0x1C17CF4
	019 Move X0, 0xA7E000
	020 Move X0, [X0+1208]
	021 Call 0x1C17CF4
	022 Move X0, 0xA5D000
	023 Move X0, [X0+2216]
	024 Call 0x1C17CF4
	025 Move X0, 0xA80000
	026 Move X0, [X0+816]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2248], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Call HttpWebRequest.FlattenException, X0
	037 Compare X0, 0
	038 JumpIfEqual {90}
	039 Move X22, 0xA80000
	040 Move X22, [X22+816]
	041 Move X8, [X0]
	042 Move X19, X0
	043 Move X10, [X22]
	044 Move W9, [X8+304]
	045 Move W11, [X10+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X12, [X8+200]
	048 Add X11, X12, X11
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move TEMP, X20
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {94}
	055 Move X10, 0xA5D000
	056 Move X10, [X10+2216]
	057 Move X10, [X10]
	058 Move W11, [X10+304]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X12, [X8+200]
	061 Add X11, X12, X11
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X10, 0xA7E000
	065 Move X10, [X10+1208]
	066 Move X10, [X10]
	067 Move W11, [X10+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X8+200]
	070 Add X8, X8, X11
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X19]
	074 Move X0, X19
	075 Move X9, [X8+392]
	076 Move X1, [X8+400]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X22]
	079 Move X20, X0
	080 Move X0, X8
	081 Call 0x1C17F10
	082 Move W3, 16
	083 Move X1, X20
	084 Move X2, X19
	085 Move X4, X31
	086 Move X5, X31
	087 Move X21, X0
	088 Call WebException..ctor, X0, X1, X2, X3, X4
	089 Move X0, X21
	090 Move TEMP, X20
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {120}
	094 Move X0, [X21]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Call HttpWebRequest.CreateRequestAbortedException
	105 Return X0
	106 Move TEMP, X20
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {113}
	110 Move W8, [X19+140]
	111 Or W8, W8, 8
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X19
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return X0
	120 Call 0x1C17F20

Method: System.Net.WebException CreateRequestAbortedException()

Disassembly:
	0x0369EDA0 MOV X1, X0
	0x0369EDA4 MOV X0, X19
	0x0369EDA8 MOV X2, X31
	0x0369EDAC BL 0x3226EF8
	0x0369EDB0 AND W8, W0, 0x1
	0x0369EDB4 MOVZ W0, 0x1
	0x0369EDB8 STRB W8, [X20 + 0x30]
	0x0369EDBC LDP X20, X19, [X31 + 0x40]
	0x0369EDC0 LDP X22, X21, [X31 + 0x30]
	0x0369EDC4 LDP X24, X23, [X31 + 0x20]
	0x0369EDC8 LDR X30, [X31 + 0x10]
	0x0369EDCC ADD X31, X31, 0x50
	0x0369EDD0 RET
	0x0369EDD4 BL 0x1C16F20
	0x0369EDD8 ADRP X0, 0xAA0000
	0x0369EDDC LDR X0, [X0 + 0x930]
	0x0369EDE0 BL 0x1C16D08
	0x0369EDE4 MOV X1, X0
	0x0369EDE8 MOV X0, X22
	0x0369EDEC BL 0x1C16DEC
	0x0369EDF0 STR W21, [X31 + 0x18]
	0x0369EDF4 ADRP X0, 0xA55000
	0x0369EDF8 LDR X0, [X0 + 0x758]
	0x0369EDFC BL 0x1C16D08
	0x0369EE00 ADD X1, X31, 0x18
	0x0369EE04 BL 0x1C16E04
	0x0369EE08 MOV X20, X0
	0x0369EE0C ADRP X0, 0xAA0000
	0x0369EE10 LDR X0, [X0 + 0x938]
	0x0369EE14 BL 0x1C16D08
	0x0369EE18 MOV X1, X20
	0x0369EE1C MOV X2, X31
	0x0369EE20 BL 0x321EFD0
	0x0369EE24 MOV X20, X0
	0x0369EE28 ADRP X0, 0xA80000
	0x0369EE2C LDR X0, [X0 + 0x330]
	0x0369EE30 BL 0x1C16D08
	0x0369EE34 BL 0x1C16F10
	0x0369EE38 MOVZ W3, 0x7
	0x0369EE3C MOV X1, X20
	0x0369EE40 MOV X2, X31
	0x0369EE44 MOV X4, X19
	0x0369EE48 MOV X5, X31
	0x0369EE4C MOV X21, X0
	0x0369EE50 BL 0x367B5A0
	0x0369EE54 ADRP X0, 0xAA0000
	0x0369EE58 LDR X0, [X0 + 0x930]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD43000
	007 Move X21, 0xAA0000
	008 Move X20, 0xAA1000
	009 Move X19, 0xA81000
	010 Move W8, [X22+2249]
	011 Move X21, [X21+3856]
	012 Move X20, [X20+2144]
	013 Move X19, [X19+816]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xAA0000
	019 Move X0, [X0+3856]
	020 Call 0x1C17CF4
	021 Move X0, 0xA81000
	022 Move X0, [X0+816]
	023 Call 0x1C17CF4
	024 Move X0, 0xAA1000
	025 Move X0, [X0+2144]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2249], W8
	029 Move X0, [X21]
	030 Move W8, 6
	031 Add X1, X31, 12
	032 Move [X31+12], W8
	033 Call 0x1C17E04
	034 Move X8, [X20]
	035 Move X1, X0
	036 Move X2, X31
	037 Move X0, X8
	038 Call SR.Format, X0, X1
	039 Move X8, [X19]
	040 Move X19, X0
	041 Move X0, X8
	042 Call 0x1C17F10
	043 Move W2, 6
	044 Move X1, X19
	045 Move X3, X31
	046 Move X20, X0
	047 Call WebException..ctor, X0, X1, X2
	048 Move X0, X20
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0

Method: System.IAsyncResult BeginGetResponse(System.AsyncCallback callback, System.Object state)

Disassembly:
	0x0369F59C LDR X0, [X19 + 0x20]
	0x0369F5A0 MOV X1, X31
	0x0369F5A4 MOV X2, X31
	0x0369F5A8 BL 0x339C580
	0x0369F5AC TBZ X0, 0x0, 0x369F5C8
	0x0369F5B0 MOVZ W0, 0x1
	0x0369F5B4 B 0x369F5BC
	0x0369F5B8 MOV W0, W31
	0x0369F5BC LDP X20, X19, [X31 + 0x10]
	0x0369F5C0 LDR X30, [X31], #0x20
	0x0369F5C4 RET
	0x0369F5C8 ADRP X20, 0xA9B000
	0x0369F5CC LDR X20, [X20 + 0x168]
	0x0369F5D0 LDR X19, [X19 + 0x20]
	0x0369F5D4 LDR X0, [X20]
	0x0369F5D8 LDR W8, [X0 + 0xE0]
	0x0369F5DC CBNZ W8, 0x369F5E8
	0x0369F5E0 BL 0x1C16DFC
	0x0369F5E4 LDR X0, [X20]
	0x0369F5E8 LDR X8, [X0 + 0xB8]
	0x0369F5EC MOV X0, X19
	0x0369F5F0 LDP X20, X19, [X31 + 0x10]
	0x0369F5F4 MOV X2, X31
	0x0369F5F8 LDR X1, [X8 + 0x10]
	0x0369F5FC LDR X30, [X31], #0x20
	0x0369F600 B 0x339C580
	0x0369F604 STP X30, X23, [X31 - 0x30]!
	0x0369F608 STP X22, X21, [X31 + 0x10]
	0x0369F60C STP X20, X19, [X31 + 0x20]
	0x0369F610 ADRP X20, 0xD41000
	0x0369F614 LDRB W8, [X20 + 0x8D0]
	0x0369F618 MOV X19, X0
	0x0369F61C TBNZ X8, 0x0, 0x369F658
	0x0369F620 ADRP X0, 0xA9F000
	0x0369F624 LDR X0, [X0 + 0x598]
	0x0369F628 BL 0x1C16CF4
	0x0369F62C ADRP X0, 0xA9F000
	0x0369F630 LDR X0, [X0 + 0x120]
	0x0369F634 BL 0x1C16CF4
	0x0369F638 ADRP X0, 0xA8F000
	0x0369F63C LDR X0, [X0 + 0x7D0]
	0x0369F640 BL 0x1C16CF4
	0x0369F644 ADRP X0, 0xA9B000
	0x0369F648 LDR X0, [X0 + 0xAB0]
	0x0369F64C BL 0x1C16CF4
	0x0369F650 MOVZ W8, 0x1
	0x0369F654 STRB W8, [X20 + 0x8D0]
	0x0369F658 LDR X20, [X19 + 0xC0]
	0x0369F65C CBZ X20, 0x369F6D0
	0x0369F660 ADRP X22, 0xA9F000
	0x0369F664 LDR X8, [X20]
	0x0369F668 LDR X22, [X22 + 0x120]
	0x0369F66C LDR X21, [X19 + 0x28]
	0x0369F670 LDRH W9, [X8 + 0x12E]
	0x0369F674 LDR X1, [X22]
	0x0369F678 CBZ X9, 0x369F69C
	0x0369F67C LDR X10, [X8 + 0xB0]
	0x0369F680 ADD X10, X10, 0x8
	0x0369F684 LDUR X11, [X10 - 0x8]
	0x0369F688 CMP X11, X1
	0x0369F68C B.EQ 0x369F6AC
	0x0369F690 SUBS X9, X9, 0x1
	0x0369F694 ADD X10, X10, 0x10
	0x0369F698 B.NE 0x369F684
	0x0369F69C MOVZ W2, 0x1
	0x0369F6A0 MOV X0, X20
	0x0369F6A4 BL 0x1C5C788
	0x0369F6A8 B 0x369F6BC
	0x0369F6AC LDR W9, [X10]
	0x0369F6B0 ADD W9, W9, 0x1
	0x0369F6B4 ADD X8, X8, W9, 0x4, SXTW
	0x0369F6B8 ADD X0, X8, 0x138
	0x0369F6BC LDP X8, X2, [X0]
	0x0369F6C0 MOV X0, X20
	0x0369F6C4 MOV X1, X21
	0x0369F6C8 BLR X8
	0x0369F6CC TBZ X0, 0x0, 0x369F6D8
	0x0369F6D0 MOVZ W21, 0x1
	0x0369F6D4 B 0x369F6E4
	0x0369F6D8 LDR X8, [X19 + 0x68]
	0x0369F6DC CBZ X8, 0x369F78C
	0x0369F6E0 MOV W21, W31
	0x0369F6E4 LDR X20, [X19 + 0x68]
	0x0369F6E8 ADRP X8, 0xA9F000
	0x0369F6EC LDR X8, [X8 + 0x598]
	0x0369F6F0 LDR X0, [X8]
	0x0369F6F4 LDR W8, [X0 + 0xE0]
	0x0369F6F8 CBNZ W8, 0x369F700
	0x0369F6FC BL 0x1C16DFC
	0x0369F700 MOV X0, X19
	0x0369F704 MOV X1, X20
	0x0369F708 BL 0x36974B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD42000
	008 Move W8, [X22+2250]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xAA0000
	017 Move X0, [X0+2248]
	018 Call 0x1C17CF4
	019 Move X0, 0xAA0000
	020 Move X0, [X0+2256]
	021 Call 0x1C17CF4
	022 Move X0, 0xAA0000
	023 Move X0, [X0+2264]
	024 Call 0x1C17CF4
	025 Move X0, 0xA55000
	026 Move X0, [X0+2440]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2250], W8
	030 Add X0, X21, 256
	031 Move W1, W31
	032 Move W2, W31
	033 Move X3, X31
	034 Call Interlocked.CompareExchange, X0, X1, X2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X21
	037 Call HttpWebRequest.get_TransferEncoding, X0
	038 Compare X0, 0
	039 JumpIfEqual {54}
	040 Move W8, [X21+200]
	041 Compare W8, 0
	042 JumpIfNotEqual {54}
	043 Move X1, X31
	044 Call String.Trim, X0
	045 Move X8, 0xA55000
	046 Move X8, [X8+2440]
	047 Move X2, X31
	048 Move X1, [X8]
	049 Call String.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {88}
	054 Move X8, 0xAA0000
	055 Move X8, [X8+2248]
	056 Move X22, 0xAA0000
	057 Move X23, 0xAA0000
	058 Move X0, [X8]
	059 Move X22, [X22+2256]
	060 Move X23, [X23+2264]
	061 Call 0x1C17F10
	062 Move X2, [X22]
	063 Move X1, X21
	064 Move X3, X31
	065 Move X22, X0
	066 Call Func`2<CancellationToken, Object>..ctor, X0, X1, X2
	067 Move X2, [X23]
	068 Move X0, X21
	069 Move X1, X22
	070 Call 0x21EE3FC, X0, X1
	071 Move X1, X20
	072 Move X2, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X3, X31
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call TaskToApm.Begin, X0, X1, X2
	081 Return X0
	082 Move X0, 0xA7D000
	083 Move X0, [X0+2952]
	084 Call 0x1C17D08
	085 Call 0x19913D0
	086 Call HttpWebRequest.CreateRequestAbortedException
	087 Move X19, X0
	088 Move X0, 0xA55000
	089 Move X0, [X0+1456]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0xAA0000
	094 Move X0, [X0+2128]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Move X2, X31
	099 Call InvalidOperationException..ctor, X0, X1
	100 Move X0, 0xAA0000
	101 Move X0, [X0+2272]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Call 0x1C17DEC

Method: System.Net.WebResponse EndGetResponse(System.IAsyncResult asyncResult)

Disassembly:
	0x0369F70C CBZ X0, 0x369F77C
	0x0369F710 MOV X20, X0
	0x0369F714 LDR X0, [X19 + 0x78]
	0x0369F718 CBZ X0, 0x369F7FC
	0x0369F71C ADRP X22, 0xA9B000
	0x0369F720 LDR X22, [X22 + 0xAB0]
	0x0369F724 MOV X2, X31
	0x0369F728 LDR X1, [X22]
	0x0369F72C BL 0x36806B8
	0x0369F730 LDR X0, [X19 + 0x78]
	0x0369F734 CBZ X0, 0x369F7FC
	0x0369F738 ADRP X23, 0xA8F000
	0x0369F73C LDR X23, [X23 + 0x7D0]
	0x0369F740 MOV X2, X31
	0x0369F744 LDR X1, [X23]
	0x0369F748 BL 0x36806B8
	0x0369F74C TBNZ X21, 0x0, 0x369F75C
	0x0369F750 LDR X8, [X19 + 0x68]
	0x0369F754 CMP X8, 0x0
	0x0369F758 CSEL X23, X22, X23, EQ
	0x0369F75C LDR X0, [X19 + 0x78]
	0x0369F760 CBZ X0, 0x369F7FC
	0x0369F764 LDR X1, [X23]
	0x0369F768 LDR X2, [X20 + 0x10]
	0x0369F76C MOV X3, X31
	0x0369F770 BL 0x366457C
	0x0369F774 MOVZ W8, 0x1
	0x0369F778 STRB W8, [X19 + 0xA2]
	0x0369F77C LDP X20, X19, [X31 + 0x20]
	0x0369F780 LDP X22, X21, [X31 + 0x10]
	0x0369F784 LDP X30, X23, [X31], #0x30
	0x0369F788 RET
	0x0369F78C LDR X20, [X19 + 0xC0]
	0x0369F790 CBZ X20, 0x369F7FC
	0x0369F794 LDR X8, [X20]
	0x0369F798 LDR X1, [X22]
	0x0369F79C LDRH W9, [X8 + 0x12E]
	0x0369F7A0 CBZ X9, 0x369F7C4
	0x0369F7A4 LDR X10, [X8 + 0xB0]
	0x0369F7A8 ADD X10, X10, 0x8
	0x0369F7AC LDUR X11, [X10 - 0x8]
	0x0369F7B0 CMP X11, X1
	0x0369F7B4 B.EQ 0x369F7D4
	0x0369F7B8 SUBS X9, X9, 0x1
	0x0369F7BC ADD X10, X10, 0x10
	0x0369F7C0 B.NE 0x369F7AC
	0x0369F7C4 MOVZ W2, 0x2
	0x0369F7C8 MOV X0, X20
	0x0369F7CC BL 0x1C5C788
	0x0369F7D0 B 0x369F7E4
	0x0369F7D4 LDR W9, [X10]
	0x0369F7D8 ADD W9, W9, 0x2
	0x0369F7DC ADD X8, X8, W9, 0x4, SXTW
	0x0369F7E0 ADD X0, X8, 0x138
	0x0369F7E4 LDP X8, X1, [X0]
	0x0369F7E8 MOV X0, X20
	0x0369F7EC BLR X8
	0x0369F7F0 MOV X20, X0
	0x0369F7F4 MOV W21, W31
	0x0369F7F8 B 0x369F6E8
	0x0369F7FC BL 0x1C16F20
	0x0369F800 SUB X31, X31, 0x40
	0x0369F804 STP X30, X23, [X31 + 0x10]
	0x0369F808 STP X22, X21, [X31 + 0x20]
	0x0369F80C STP X20, X19, [X31 + 0x30]
	0x0369F810 ADRP X20, 0xD41000
	0x0369F814 ADRP X21, 0xA54000
	0x0369F818 LDRB W8, [X20 + 0x8D1]
	0x0369F81C LDR X21, [X21 + 0x8F0]
	0x0369F820 MOV X19, X0
	0x0369F824 TBNZ X8, 0x0, 0x369F86C
	0x0369F828 ADRP X0, 0xA54000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD42000
	006 Move W8, [X21+2251]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAA0000
	014 Move X0, [X0+2280]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2251], W8
	018 Compare X20, 0
	019 JumpIfEqual {30}
	020 Move X8, 0xAA0000
	021 Move X8, [X8+2280]
	022 Move X1, [X8]
	023 Move X0, X20
	024 Call TaskToApm.End, X0
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0
	030 Move X0, 0xA5A000
	031 Move X0, [X0+1320]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0xA80000
	036 Move X0, [X0+3536]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call ArgumentNullException..ctor, X0, X1
	042 Move X0, 0xAA0000
	043 Move X0, [X0+2288]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, X0
	050 Move X0, X20
	051 Call 0x3EB2AD0
	052 Move X20, X0
	053 Move X0, 0xA55000
	054 Move X0, [X0+2000]
	055 Call 0x1C17D08
	056 Move X8, [X20]
	057 Move X1, [X8]
	058 Call 0x1C18270
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {69}
	063 Move X20, [X20]
	064 Call 0x3EB2AE0
	065 Move X0, X19
	066 Move X1, X20
	067 Call HttpWebRequest.GetWebException, X0, X1
	068 Move X19, X0
	069 Move W0, 8
	070 Call 0x3EB2AF0
	071 Move X8, [X20]
	072 Move [X0], X8
	073 Move X1, 0x816000
	074 Add X1, X1, 3672
	075 Move X2, X31
	076 Call 0x3EB2B00
	077 Move X20, X0
	078 Call 0x3EB2AE0
	079 Move X0, X20
	080 Call 0x1D2D690
	081 Call 0x1991590

Method: System.Void set_FinishedReading(System.Boolean value)

Disassembly:
	0x0369F82C LDR X0, [X0 + 0x758]
	0x0369F830 BL 0x1C16CF4
	0x0369F834 ADRP X0, 0xA54000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+280], W8
	003 Return 

Method: System.Boolean get_Aborted()

Disassembly:
	0x0369ED78 BL 0x3226EF8
	0x0369ED7C TBZ X0, 0x0, 0x369ED88
	0x0369ED80 MOVZ W0, 0x1
	0x0369ED84 B 0x369EDB0
	0x0369ED88 MOV X0, X20
	0x0369ED8C BL 0x369C4E4
	0x0369ED90 MOV X19, X0
	0x0369ED94 MOV X0, X23
	0x0369ED98 MOV X1, X31
	0x0369ED9C BL 0x361BD04

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 256
	003 Move W1, W31
	004 Move W2, W31
	005 Move X3, X31
	006 Call Interlocked.CompareExchange, X0, X1, X2
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Void Abort()

Disassembly:
	0x0369F838 LDR X0, [X0 + 0x9D0]
	0x0369F83C BL 0x1C16CF4
	0x0369F840 ADRP X0, 0xA54000
	0x0369F844 LDR X0, [X0 + 0x8F0]
	0x0369F848 BL 0x1C16CF4
	0x0369F84C ADRP X0, 0xA9F000
	0x0369F850 LDR X0, [X0 + 0x960]
	0x0369F854 BL 0x1C16CF4
	0x0369F858 ADRP X0, 0xA9F000
	0x0369F85C LDR X0, [X0 + 0x968]
	0x0369F860 BL 0x1C16CF4
	0x0369F864 MOVZ W8, 0x1
	0x0369F868 STRB W8, [X20 + 0x8D1]
	0x0369F86C LDR X0, [X21]
	0x0369F870 BL 0x1C16F10
	0x0369F874 MOV X1, X31
	0x0369F878 MOV X20, X0
	0x0369F87C BL 0x3231AC4
	0x0369F880 LDR X8, [X19 + 0xD0]
	0x0369F884 CBZ X8, 0x369FAF8
	0x0369F888 LDRB W9, [X8 + 0x30]
	0x0369F88C LDR X0, [X19 + 0x28]
	0x0369F890 CBZ W9, 0x369F8F4
	0x0369F894 CBZ X0, 0x369FAF8
	0x0369F898 LDRB W8, [X8 + 0x32]
	0x0369F89C CBNZ W8, 0x369F8F8
	0x0369F8A0 MOV X1, X31
	0x0369F8A4 BL 0x361CEF0
	0x0369F8A8 MOV X21, X0
	0x0369F8AC MOV X0, X19
	0x0369F8B0 BL 0x369C4E4
	0x0369F8B4 LDR X8, [X19 + 0x28]
	0x0369F8B8 CBZ X8, 0x369FAF8
	0x0369F8BC MOV X22, X0
	0x0369F8C0 MOV X0, X8
	0x0369F8C4 MOV X1, X31
	0x0369F8C8 BL 0x361C058
	0x0369F8CC ADRP X8, 0xA9F000
	0x0369F8D0 LDR X8, [X8 + 0x960]
	0x0369F8D4 MOV X3, X0
	0x0369F8D8 MOV X1, X21
	0x0369F8DC MOV X2, X22
	0x0369F8E0 LDR X8, [X8]
	0x0369F8E4 MOV X4, X31
	0x0369F8E8 MOV X0, X8
	0x0369F8EC BL 0x3227C18
	0x0369F8F0 B 0x369F900
	0x0369F8F4 CBZ X0, 0x369FAF8
	0x0369F8F8 MOV X1, X31
	0x0369F8FC BL 0x361C058
	0x0369F900 LDRB W8, [X19 + 0xB0]
	0x0369F904 MOV X21, X0
	0x0369F908 CBNZ W8, 0x369F96C
	0x0369F90C LDR X0, [X19 + 0xD0]
	0x0369F910 CBZ X0, 0x369FAF8
	0x0369F914 LDR X8, [X0]
	0x0369F918 LDP X9, X1, [X8 + 0x178]
	0x0369F91C BLR X9
	0x0369F920 MOV X1, X31
	0x0369F924 MOV X2, X31
	0x0369F928 BL 0x339D0E0
	0x0369F92C TBZ X0, 0x0, 0x369F96C
	0x0369F930 LDR X0, [X19 + 0xD0]
	0x0369F934 CBZ X0, 0x369FAF8
	0x0369F938 LDR X8, [X0]
	0x0369F93C LDP X9, X1, [X8 + 0x178]
	0x0369F940 BLR X9
	0x0369F944 LDR X1, [X19 + 0xA8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD42000
	005 Move W8, [X20+2252]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xAA0000
	012 Move X0, [X0+2296]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2252], W8
	016 Add X0, X19, 256
	017 Move W1, 1
	018 Move W2, W31
	019 Move X3, X31
	020 Move W20, 1
	021 Call Interlocked.CompareExchange, X0, X1, X2
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X19+248]
	024 Move [X19+112], W20
	025 Compare X0, 0
	026 JumpIfEqual {29}
	027 Move X1, X31
	028 Call WebOperation.Abort, X0
	029 Move X0, [X19+240]
	030 Compare X0, 0
	031 JumpIfEqual {36}
	032 Move X8, 0xAA0000
	033 Move X8, [X8+2296]
	034 Move X1, [X8]
	035 Call WebCompletionSource`1<Object>.TrySetCanceled, X0
	036 Move X0, [X19+232]
	037 Compare X0, 0
	038 JumpIfEqual {44}
	039 Move X8, [X0]
	040 Move X9, [X8+456]
	041 Move X1, [X8+464]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move [X19+232], X31
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X19, X0
	050 Move X0, X19
	051 Call 0x3EB2AD0
	052 Move X19, X0
	053 Move X0, 0xA5B000
	054 Move X0, [X0+3264]
	055 Call 0x1C17D08
	056 Move X8, [X19]
	057 Move X1, [X8]
	058 Call 0x1C18270
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {68}
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Call 0x3EB2AE0
	067 Return 
	068 Move W0, 8
	069 Call 0x3EB2AF0
	070 Move X8, [X19]
	071 Move [X0], X8
	072 Move X1, 0x816000
	073 Add X1, X1, 3672
	074 Move X2, X31
	075 Call 0x3EB2B00
	076 Move X19, X0
	077 Call 0x3EB2AE0
	078 Move X0, X19
	079 Call 0x1D2D690
	080 Call 0x1991590

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x0369F948 MOV X2, X31
	0x0369F94C BL 0x339D108
	0x0369F950 TBZ X0, 0x0, 0x369F96C
	0x0369F954 LDR X0, [X19 + 0xD0]
	0x0369F958 CBZ X0, 0x369FAF8
	0x0369F95C LDR X8, [X0]
	0x0369F960 LDP X9, X1, [X8 + 0x178]
	0x0369F964 BLR X9
	0x0369F968 B 0x369F970
	0x0369F96C LDR X0, [X19 + 0xA8]
	0x0369F970 ADRP X8, 0xA54000
	0x0369F974 LDR X8, [X8 + 0x9D0]
	0x0369F978 STR X0, [X19 + 0xB8]
	0x0369F97C MOVZ W1, 0x4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA7F000
	004 Move X0, [X0+736]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call SerializationException..ctor, X0
	010 Move X0, 0xAA0000
	011 Move X0, [X0+2304]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x0369F980 LDR X0, [X8]
	0x0369F984 BL 0x1C16D6C
	0x0369F988 CBZ X0, 0x369FAF8
	0x0369F98C LDR X23, [X19 + 0x90]
	0x0369F990 MOV X22, X0
	0x0369F994 CBZ X23, 0x369F9AC
	0x0369F998 LDR X8, [X22]
	0x0369F99C MOV X0, X23
	0x0369F9A0 LDR X1, [X8 + 0x40]
	0x0369F9A4 BL 0x1C16E00
	0x0369F9A8 CBZ X0, 0x369FB00
	0x0369F9AC LDR W8, [X22 + 0x18]
	0x0369F9B0 CBZ W8, 0x369FAFC
	0x0369F9B4 STR X23, [X22 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA7F000
	004 Move X0, [X0+736]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call SerializationException..ctor, X0
	010 Move X0, 0xAA0000
	011 Move X0, [X0+2312]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void CheckRequestStarted()

Disassembly:
	0x0369D1D4 LDP X8, X2, [X0]
	0x0369D1D8 MOV X0, X20
	0x0369D1DC MOV X1, X19
	0x0369D1E0 BLR X8
	0x0369D1E4 ANDS W8, W0, 0x1
	0x0369D1E8 CSEL X22, X31, X26, NE
	0x0369D1EC CBZ W8, 0x369D200
	0x0369D1F0 MOV W23, W31
	0x0369D1F4 MOV W25, W31
	0x0369D1F8 MOV X22, X26
	0x0369D1FC B 0x369D2D4
	0x0369D200 MOV X0, X19
	0x0369D204 MOV X1, X31
	0x0369D208 BL 0x361CEF0
	0x0369D20C ADRP X8, 0xA94000
	0x0369D210 LDR X8, [X8 + 0x4C8]
	0x0369D214 MOV X2, X31
	0x0369D218 LDR X1, [X8]
	0x0369D21C BL 0x321BA08
	0x0369D220 LDR X8, [X20]
	0x0369D224 LDR X1, [X21]
	0x0369D228 MOV W21, W0
	0x0369D22C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+113]
	004 Compare W8, 0
	005 JumpIfNotEqual {9}
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X0, 0xA57000
	010 Move X0, [X0+1456]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0xAA2000
	015 Move X0, [X0+1920]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Move X2, X31
	020 Call InvalidOperationException..ctor, X0, X1
	021 Move X0, 0xAA2000
	022 Move X0, [X0+1928]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call 0x1C17DEC

Method: System.Void DoContinueDelegate(System.Int32 statusCode, System.Net.WebHeaderCollection headers)

Disassembly:
	0x0369F9B8 CBZ X21, 0x369F9D4
	0x0369F9BC LDR X8, [X22]
	0x0369F9C0 MOV X0, X21
	0x0369F9C4 LDR X1, [X8 + 0x40]
	0x0369F9C8 BL 0x1C16E00
	0x0369F9CC CBZ X0, 0x369FB00
	0x0369F9D0 LDR W8, [X22 + 0x18]

ISIL:
	001 Move X8, [X0+88]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X4, [X8+24]
	005 Move X0, [X8+64]
	006 Move X3, [X8+40]
	007 CallNoReturn X4
	008 Return 

Method: System.Void RewriteRedirectToGet()

Disassembly:
	0x0369F9D4 CMP W8, 0x1
	0x0369F9D8 B.LS 0x369FAFC
	0x0369F9DC STR X21, [X22 + 0x28]
	0x0369F9E0 LDR X8, [X19 + 0xB8]
	0x0369F9E4 CBZ X8, 0x369FAF8
	0x0369F9E8 ADRP X23, 0xA54000
	0x0369F9EC LDR X23, [X23 + 0x758]
	0x0369F9F0 LDR W8, [X8 + 0x10]
	0x0369F9F4 ADD X1, X31, 0xC
	0x0369F9F8 LDR X0, [X23]
	0x0369F9FC STR W8, [X31 + 0xC]
	0x0369FA00 BL 0x1C16E04
	0x0369FA04 MOV X21, X0
	0x0369FA08 CBZ X0, 0x369FA20
	0x0369FA0C LDR X8, [X22]
	0x0369FA10 MOV X0, X21
	0x0369FA14 LDR X1, [X8 + 0x40]
	0x0369FA18 BL 0x1C16E00
	0x0369FA1C CBZ X0, 0x369FB00
	0x0369FA20 LDR W8, [X22 + 0x18]
	0x0369FA24 CMP W8, 0x2
	0x0369FA28 B.LS 0x369FAFC
	0x0369FA2C STR X21, [X22 + 0x30]
	0x0369FA30 LDR X8, [X19 + 0xB8]
	0x0369FA34 CBZ X8, 0x369FAF8
	0x0369FA38 LDR W8, [X8 + 0x14]
	0x0369FA3C LDR X0, [X23]
	0x0369FA40 ADD X1, X31, 0x8
	0x0369FA44 STR W8, [X31 + 0x8]
	0x0369FA48 BL 0x1C16E04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD42000
	006 Move X21, 0xA7E000
	007 Move W8, [X20+2253]
	008 Move X21, [X21+1232]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA7E000
	015 Move X0, [X0+1232]
	016 Call 0x1C17CF4
	017 Move X0, 0xA9C000
	018 Move X0, [X0+400]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2253], W8
	022 Move X8, [X21]
	023 Move X0, [X19+120]
	024 Move [X19+144], X8
	025 Compare X0, 0
	026 JumpIfEqual {38}
	027 Move X8, 0xA9C000
	028 Move X8, [X8+400]
	029 Move X2, X31
	030 Move X1, [X8]
	031 Call WebHeaderCollection.RemoveInternal, X0, X1
	032 Move [X19+200], W31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Call 0x1C17F20

Method: System.Boolean Redirect(System.Net.HttpStatusCode code, System.Net.WebResponse response)

Disassembly:
	0x0369FA4C MOV X21, X0
	0x0369FA50 CBZ X0, 0x369FA68
	0x0369FA54 LDR X8, [X22]
	0x0369FA58 MOV X0, X21
	0x0369FA5C LDR X1, [X8 + 0x40]
	0x0369FA60 BL 0x1C16E00
	0x0369FA64 CBZ X0, 0x369FB00
	0x0369FA68 LDR W8, [X22 + 0x18]
	0x0369FA6C CMP W8, 0x3
	0x0369FA70 B.LS 0x369FAFC
	0x0369FA74 STR X21, [X22 + 0x38]
	0x0369FA78 CBZ X20, 0x369FAF8
	0x0369FA7C ADRP X8, 0xA9F000
	0x0369FA80 LDR X8, [X8 + 0x968]
	0x0369FA84 MOV X0, X20
	0x0369FA88 MOV X2, X22
	0x0369FA8C MOV X3, X31
	0x0369FA90 LDR X1, [X8]
	0x0369FA94 BL 0x3234E54
	0x0369FA98 MOV X0, X19
	0x0369FA9C BL 0x369EF14
	0x0369FAA0 MOV X1, X0
	0x0369FAA4 MOV X0, X20
	0x0369FAA8 MOV X2, X31
	0x0369FAAC BL 0x32333E0
	0x0369FAB0 LDR X8, [X20]
	0x0369FAB4 MOV X0, X20
	0x0369FAB8 LDP X9, X1, [X8 + 0x168]
	0x0369FABC BLR X9
	0x0369FAC0 MOV X19, X0
	0x0369FAC4 MOV X0, X31
	0x0369FAC8 BL 0x3241948
	0x0369FACC CBZ X0, 0x369FAF8
	0x0369FAD0 LDR X8, [X0]
	0x0369FAD4 MOV X1, X19
	0x0369FAD8 LDR X9, [X8 + 0x268]
	0x0369FADC LDR X2, [X8 + 0x270]
	0x0369FAE0 BLR X9
	0x0369FAE4 LDP X20, X19, [X31 + 0x30]
	0x0369FAE8 LDP X22, X21, [X31 + 0x20]
	0x0369FAEC LDP X30, X23, [X31 + 0x10]
	0x0369FAF0 ADD X31, X31, 0x40
	0x0369FAF4 RET
	0x0369FAF8 BL 0x1C16F20
	0x0369FAFC BL 0x1C16F28
	0x0369FB00 BL 0x1C16F44
	0x0369FB04 MOV X1, X31
	0x0369FB08 BL 0x1C16DEC
	0x0369FB0C SUB X31, X31, 0x60
	0x0369FB10 STP X30, X27, [X31 + 0x10]
	0x0369FB14 STP X26, X25, [X31 + 0x20]
	0x0369FB18 STP X24, X23, [X31 + 0x30]
	0x0369FB1C STP X22, X21, [X31 + 0x40]
	0x0369FB20 STP X20, X19, [X31 + 0x50]
	0x0369FB24 ADRP X22, 0xD41000
	0x0369FB28 LDRB W8, [X22 + 0x8D2]
	0x0369FB2C MOV X23, X4
	0x0369FB30 MOV X24, X3
	0x0369FB34 MOV X21, X2
	0x0369FB38 MOV X20, X1
	0x0369FB3C MOV X19, X0
	0x0369FB40 TBNZ X8, 0x0, 0x369FB88
	0x0369FB44 ADRP X0, 0xA9A000
	0x0369FB48 LDR X0, [X0 + 0x828]
	0x0369FB4C BL 0x1C16CF4
	0x0369FB50 ADRP X0, 0xA9F000
	0x0369FB54 LDR X0, [X0 + 0x120]
	0x0369FB58 BL 0x1C16CF4
	0x0369FB5C ADRP X0, 0xA9F000
	0x0369FB60 LDR X0, [X0 + 0x970]
	0x0369FB64 BL 0x1C16CF4
	0x0369FB68 ADRP X0, 0xA9F000
	0x0369FB6C LDR X0, [X0 + 0x820]
	0x0369FB70 BL 0x1C16CF4
	0x0369FB74 ADRP X0, 0xA84000
	0x0369FB78 LDR X0, [X0 + 0xA50]
	0x0369FB7C BL 0x1C16CF4
	0x0369FB80 MOVZ W8, 0x1
	0x0369FB84 STRB W8, [X22 + 0x8D2]
	0x0369FB88 CBZ X21, 0x369FD94
	0x0369FB8C LDR X8, [X21]
	0x0369FB90 ADRP X26, 0xA9F000
	0x0369FB94 MOV X0, X21
	0x0369FB98 LDR X9, [X8 + 0x228]
	0x0369FB9C LDR X1, [X8 + 0x230]
	0x0369FBA0 LDR X26, [X26 + 0x970]
	0x0369FBA4 BLR X9
	0x0369FBA8 CMP W0, 0x197
	0x0369FBAC MOVZ W8, 0x15C
	0x0369FBB0 MOVZ W9, 0x16C
	0x0369FBB4 CSEL X8, X9, X8, EQ
	0x0369FBB8 LDR W8, [X19, X8, LSL]
	0x0369FBBC CBZ W8, 0x369FBE0
	0x0369FBC0 LDR W8, [X19 + 0x15C]
	0x0369FBC4 MOV W25, W0
	0x0369FBC8 CMP W8, 0x1
	0x0369FBCC ADRP X8, 0xA9F000
	0x0369FBD0 LDR X8, [X8 + 0x820]
	0x0369FBD4 B.NE 0x369FBF8
	0x0369FBD8 MOVZ W21, 0x1
	0x0369FBDC B 0x369FC04
	0x0369FBE0 LDR X3, [X26]
	0x0369FBE4 STP X31, X31, [X31]
	0x0369FBE8 ADD X0, X31, 0x0
	0x0369FBEC MOV X1, X31
	0x0369FBF0 MOV W2, W31
	0x0369FBF4 B 0x369FD70
	0x0369FBF8 LDR W9, [X19 + 0x16C]
	0x0369FBFC CMP W9, 0x1
	0x0369FC00 CSET W21, EQ
	0x0369FC04 LDR X0, [X8]
	0x0369FC08 BL 0x1C16F10
	0x0369FC0C MOV X1, X19
	0x0369FC10 MOV X2, X24
	0x0369FC14 MOV W3, W21
	0x0369FC18 MOV X4, X23
	0x0369FC1C MOV X5, X31
	0x0369FC20 MOV X22, X0
	0x0369FC24 BL 0x36AFD78
	0x0369FC28 CBZ X20, 0x369FD94
	0x0369FC2C LDR X0, [X20 + 0x50]
	0x0369FC30 CBZ X0, 0x369FD94
	0x0369FC34 MOV X1, X22
	0x0369FC38 MOV X2, X31
	0x0369FC3C BL 0x36B05F4
	0x0369FC40 CMP W25, 0x197
	0x0369FC44 B.NE 0x369FC98
	0x0369FC48 LDR X23, [X19 + 0xC0]
	0x0369FC4C CBZ X23, 0x369FC98
	0x0369FC50 ADRP X10, 0xA9F000
	0x0369FC54 LDR X8, [X23]
	0x0369FC58 LDR X10, [X10 + 0x120]
	0x0369FC5C LDRH W9, [X8 + 0x12E]
	0x0369FC60 LDR X1, [X10]
	0x0369FC64 CBZ X9, 0x369FC88
	0x0369FC68 LDR X10, [X8 + 0xB0]
	0x0369FC6C ADD X10, X10, 0x8
	0x0369FC70 LDUR X11, [X10 - 0x8]
	0x0369FC74 CMP X11, X1
	0x0369FC78 B.EQ 0x369FCA4
	0x0369FC7C SUBS X9, X9, 0x1
	0x0369FC80 ADD X10, X10, 0x10
	0x0369FC84 B.NE 0x369FC70
	0x0369FC88 MOVZ W2, 0x2
	0x0369FC8C MOV X0, X23
	0x0369FC90 BL 0x1C5C788
	0x0369FC94 B 0x369FCB4
	0x0369FC98 LDR X23, [X19 + 0x68]
	0x0369FC9C CBNZ X23, 0x369FCC8
	0x0369FCA0 B 0x369FD5C
	0x0369FCA4 LDR W9, [X10]
	0x0369FCA8 ADD W9, W9, 0x2
	0x0369FCAC ADD X8, X8, W9, 0x4, SXTW
	0x0369FCB0 ADD X0, X8, 0x138
	0x0369FCB4 LDP X8, X1, [X0]
	0x0369FCB8 MOV X0, X23
	0x0369FCBC BLR X8
	0x0369FCC0 MOV X23, X0
	0x0369FCC4 CBZ X23, 0x369FD5C
	0x0369FCC8 ADRP X9, 0xA9A000
	0x0369FCCC LDR X27, [X20 + 0x48]
	0x0369FCD0 LDR X24, [X19 + 0x20]
	0x0369FCD4 LDR X8, [X23]
	0x0369FCD8 LDR X9, [X9 + 0x828]
	0x0369FCDC ADRP X10, 0xA84000
	0x0369FCE0 LDR X1, [X9]
	0x0369FCE4 LDR X10, [X10 + 0xA50]
	0x0369FCE8 LDRH W9, [X8 + 0x12E]
	0x0369FCEC LDR X25, [X10]
	0x0369FCF0 CBZ X9, 0x369FD14
	0x0369FCF4 LDR X10, [X8 + 0xB0]
	0x0369FCF8 ADD X10, X10, 0x8
	0x0369FCFC LDUR X11, [X10 - 0x8]
	0x0369FD00 CMP X11, X1
	0x0369FD04 B.EQ 0x369FD24
	0x0369FD08 SUBS X9, X9, 0x1
	0x0369FD0C ADD X10, X10, 0x10
	0x0369FD10 B.NE 0x369FCFC
	0x0369FD14 MOV X0, X23
	0x0369FD18 MOV W2, W31
	0x0369FD1C BL 0x1C5C788
	0x0369FD20 B 0x369FD30
	0x0369FD24 LDRSW X9, [X10]
	0x0369FD28 ADD X8, X8, X9, 0x4, LSL
	0x0369FD2C ADD X0, X8, 0x138
	0x0369FD30 LDP X8, X3, [X0]
	0x0369FD34 MOV X0, X23
	0x0369FD38 MOV X1, X24
	0x0369FD3C MOV X2, X25
	0x0369FD40 BLR X8
	0x0369FD44 CBZ X27, 0x369FD94
	0x0369FD48 STR X0, [X27 + 0x10]
	0x0369FD4C LDR X8, [X20 + 0x48]
	0x0369FD50 CBZ X8, 0x369FD94
	0x0369FD54 LDRB W9, [X19 + 0x179]
	0x0369FD58 STRB W9, [X8 + 0x19]
	0x0369FD5C LDR X3, [X26]
	0x0369FD60 ADD X0, X31, 0x0
	0x0369FD64 MOV X1, X22
	0x0369FD68 MOV W2, W21
	0x0369FD6C STP X31, X31, [X31]
	0x0369FD70 BL 0x27A93B4
	0x0369FD74 LDP X0, X1, [X31]
	0x0369FD78 LDP X20, X19, [X31 + 0x50]
	0x0369FD7C LDP X22, X21, [X31 + 0x40]
	0x0369FD80 LDP X24, X23, [X31 + 0x30]
	0x0369FD84 LDP X26, X25, [X31 + 0x20]
	0x0369FD88 LDP X30, X27, [X31 + 0x10]
	0x0369FD8C ADD X31, X31, 0x60
	0x0369FD90 RET
	0x0369FD94 BL 0x1C16F20
	0x0369FD98 CMP W2, 0x197
	0x0369FD9C B.NE 0x369FDA8
	0x0369FDA0 ADD X0, X0, 0x160
	0x0369FDA4 B 0x369FDB0
	0x0369FDA8 ADD X0, X0, 0x150
	0x0369FDAC B 0x369FDB0
	0x0369FDB0 STR X30, [X31 - 0x50]!
	0x0369FDB4 STP X26, X25, [X31 + 0x10]
	0x0369FDB8 STP X24, X23, [X31 + 0x20]
	0x0369FDBC STP X22, X21, [X31 + 0x30]
	0x0369FDC0 STP X20, X19, [X31 + 0x40]
	0x0369FDC4 ADRP X22, 0xD41000
	0x0369FDC8 LDRB W8, [X22 + 0x8D7]
	0x0369FDCC MOV W21, W2
	0x0369FDD0 MOV X20, X1
	0x0369FDD4 MOV X19, X0
	0x0369FDD8 TBNZ X8, 0x0, 0x369FE38
	0x0369FDDC ADRP X0, 0xA9F000
	0x0369FDE0 LDR X0, [X0 + 0x598]
	0x0369FDE4 BL 0x1C16CF4
	0x0369FDE8 ADRP X0, 0xA9F000
	0x0369FDEC LDR X0, [X0 + 0x120]
	0x0369FDF0 BL 0x1C16CF4
	0x0369FDF4 ADRP X0, 0xA84000
	0x0369FDF8 LDR X0, [X0 + 0xA50]
	0x0369FDFC BL 0x1C16CF4
	0x0369FE00 ADRP X0, 0xA9B000
	0x0369FE04 LDR X0, [X0 + 0xA80]
	0x0369FE08 BL 0x1C16CF4
	0x0369FE0C ADRP X0, 0xA8F000
	0x0369FE10 LDR X0, [X0 + 0x7D0]
	0x0369FE14 BL 0x1C16CF4
	0x0369FE18 ADRP X0, 0xA9B000
	0x0369FE1C LDR X0, [X0 + 0xAB0]
	0x0369FE20 BL 0x1C16CF4
	0x0369FE24 ADRP X0, 0xA9B000
	0x0369FE28 LDR X0, [X0 + 0xAC8]
	0x0369FE2C BL 0x1C16CF4
	0x0369FE30 MOVZ W8, 0x1
	0x0369FE34 STRB W8, [X22 + 0x8D7]
	0x0369FE38 CMP W21, 0x191
	0x0369FE3C STRB W31, [X19 + 0x9]
	0x0369FE40 B.NE 0x369FE54
	0x0369FE44 LDR X8, [X19]
	0x0369FE48 CBZ X8, 0x36A00C0
	0x0369FE4C LDR X8, [X8 + 0x68]
	0x0369FE50 CBZ X8, 0x36A002C
	0x0369FE54 LDRB W8, [X19 + 0x8]
	0x0369FE58 CMP W21, 0x197
	0x0369FE5C CSET W9, EQ
	0x0369FE60 CMP W8, W9
	0x0369FE64 B.NE 0x36A002C
	0x0369FE68 CBZ W8, 0x369FEE4
	0x0369FE6C LDR X8, [X19]
	0x0369FE70 CBZ X8, 0x36A00C0
	0x0369FE74 LDR X21, [X8 + 0xC0]
	0x0369FE78 CBZ X21, 0x36A002C
	0x0369FE7C ADRP X10, 0xA9F000
	0x0369FE80 LDR X8, [X21]
	0x0369FE84 LDR X10, [X10 + 0x120]
	0x0369FE88 LDRH W9, [X8 + 0x12E]
	0x0369FE8C LDR X1, [X10]
	0x0369FE90 CBZ X9, 0x369FEB4
	0x0369FE94 LDR X10, [X8 + 0xB0]
	0x0369FE98 ADD X10, X10, 0x8
	0x0369FE9C LDUR X11, [X10 - 0x8]
	0x0369FEA0 CMP X11, X1
	0x0369FEA4 B.EQ 0x369FEC4
	0x0369FEA8 SUBS X9, X9, 0x1
	0x0369FEAC ADD X10, X10, 0x10
	0x0369FEB0 B.NE 0x369FE9C
	0x0369FEB4 MOVZ W2, 0x2
	0x0369FEB8 MOV X0, X21
	0x0369FEBC BL 0x1C5C788
	0x0369FEC0 B 0x369FED4
	0x0369FEC4 LDR W9, [X10]
	0x0369FEC8 ADD W9, W9, 0x2
	0x0369FECC ADD X8, X8, W9, 0x4, SXTW
	0x0369FED0 ADD X0, X8, 0x138
	0x0369FED4 LDP X8, X1, [X0]
	0x0369FED8 MOV X0, X21
	0x0369FEDC BLR X8
	0x0369FEE0 CBZ X0, 0x36A0030
	0x0369FEE4 CBZ X20, 0x36A00C0
	0x0369FEE8 LDR X8, [X20]
	0x0369FEEC MOV X0, X20
	0x0369FEF0 LDR X9, [X8 + 0x218]
	0x0369FEF4 LDR X1, [X8 + 0x220]
	0x0369FEF8 BLR X9
	0x0369FEFC CBZ X0, 0x36A00C0
	0x0369FF00 LDRB W8, [X19 + 0x8]
	0x0369FF04 ADRP X10, 0xA9B000
	0x0369FF08 ADRP X11, 0xA9B000
	0x0369FF0C LDR X9, [X0]
	0x0369FF10 LDR X10, [X10 + 0xA80]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0xD42000
	010 Move W8, [X22+2254]
	011 Move X19, X2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {53}
	018 Move X0, 0xA5E000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0xA9F000
	022 Move X0, [X0+3288]
	023 Call 0x1C17CF4
	024 Move X0, 0xA57000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0xA80000
	028 Move X0, [X0+816]
	029 Call 0x1C17CF4
	030 Move X0, 0xAA0000
	031 Move X0, [X0+2320]
	032 Call 0x1C17CF4
	033 Move X0, 0xA9C000
	034 Move X0, [X0+2528]
	035 Call 0x1C17CF4
	036 Move X0, 0xAA0000
	037 Move X0, [X0+2328]
	038 Call 0x1C17CF4
	039 Move X0, 0xA7E000
	040 Move X0, [X0+1240]
	041 Call 0x1C17CF4
	042 Move X0, 0xA7E000
	043 Move X0, [X0+1232]
	044 Call 0x1C17CF4
	045 Move X0, 0xAA0000
	046 Move X0, [X0+2336]
	047 Call 0x1C17CF4
	048 Move X0, 0xAA0000
	049 Move X0, [X0+2344]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+2254], W8
	053 Move [X31+28], W31
	054 Move W9, [X20+264]
	055 Subtract W8, W21, 300
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W9, W9, 1
	058 Move [X20+264], W9
	059 Move X9, -45117440
	060 Add X9, X9, 1978
	061 NotImplemented "Instruction ADR not yet implemented."
	062 Move W11, [X9]
	063 Add X10, X10, X11
	064 Move X22, X31
	065 Move W0, W31
	066 CallNoReturn X10
	067 Move X8, 0xA7E000
	068 Move X0, [X20+144]
	069 Move X8, [X8+1240]
	070 Move X2, X31
	071 Move X1, [X8]
	072 Call String.op_Equality, X0, X1
	073 Move X22, X31
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {122}
	078 Move X0, X20
	079 Call HttpWebRequest.RewriteRedirectToGet, X0
	080 Move X22, X31
	081 Add X0, X31, 28
	082 Move X1, X31
	083 Move [X31+28], W21
	084 Call Int32.ToString, X0
	085 Move X8, 0xAA0000
	086 Move X8, [X8+2320]
	087 Move X1, X0
	088 Move X2, X31
	089 Move X8, [X8]
	090 Move X0, X8
	091 Call String.Concat, X0, X1
	092 Move X8, 0xA9F000
	093 Move X8, [X8+3288]
	094 Move X23, X0
	095 Move X8, [X8]
	096 Move X0, X8
	097 Call 0x1C17F10
	098 Move X1, X23
	099 Move X2, X31
	100 Move X22, X0
	101 Call ProtocolViolationException..ctor, X0, X1
	102 Move X8, 0xA5E000
	103 Move X8, [X8+1880]
	104 Move X0, [X8]
	105 Call 0x1C17F10
	106 Move X8, 0xAA0000
	107 Move X8, [X8+2336]
	108 Move X2, X31
	109 Move X22, X0
	110 Move X1, [X8]
	111 Call NotImplementedException..ctor, X0, X1
	112 Move X8, 0xA80000
	113 Move X8, [X8+816]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X8, 0xAA0000
	117 Move X8, [X8+2344]
	118 Move X2, X31
	119 Move X22, X0
	120 Move X1, [X8]
	121 Call WebException..ctor, X0, X1
	122 Move X23, 0xA7E000
	123 Move X23, [X23+1232]
	124 Move X0, [X20+144]
	125 Move X2, X31
	126 Move X1, [X23]
	127 Call String.op_Inequality, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {165}
	132 Move W8, [X20+50]
	133 Compare W8, 0
	134 JumpIfEqual {141}
	135 Move X0, X20
	136 Call HttpWebRequest.get_MethodWithBuffer, X0
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {165}
	141 Move X8, [X20+368]
	142 Compare X8, 0
	143 JumpIfNotEqual {165}
	144 Move X0, [X20+224]
	145 Compare X0, 0
	146 JumpIfEqual {258}
	147 Move X1, X31
	148 Call WebRequestStream.get_WriteBufferLength, X0
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X8, [X20+80]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X8, 0xA80000
	153 Move X8, [X8+816]
	154 Move X0, [X8]
	155 Call 0x1C17F10
	156 Move X8, 0xAA0000
	157 Move X8, [X8+2328]
	158 Move W3, 7
	159 Move X2, X31
	160 Move X4, X19
	161 Move X1, [X8]
	162 Move X5, X31
	163 Move X22, X0
	164 Call WebException..ctor, X0, X1, X2, X3, X4
	165 Compare X22, 0
	166 JumpIfNotEqual {259}
	167 Move X8, [X20]
	168 Move X0, X20
	169 Move X9, [X8+808]
	170 Move X1, [X8+816]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {184}
	176 Move X0, [X20+144]
	177 Move X1, [X23]
	178 Move X2, X31
	179 Call String.op_Equality, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {188}
	184 Move TEMP, 0
	185 Not TEMP
	186 Move X8, TEMP
	187 Move [X20+80], X8
	188 Compare X19, 0
	189 JumpIfEqual {258}
	190 Move X8, [X19]
	191 Move X0, X19
	192 Move X9, [X8+536]
	193 Move X1, [X8+544]
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Compare X0, 0
	196 JumpIfEqual {258}
	197 Move X8, 0xA9C000
	198 Move X8, [X8+2528]
	199 Move X2, X31
	200 Move X1, [X8]
	201 Call NameValueCollection.get_Item, X0, X1
	202 Compare X0, 0
	203 JumpIfEqual {265}
	204 Move X8, 0xA57000
	205 Move X8, [X8+2600]
	206 Move X22, X0
	207 Move X23, [X20+40]
	208 Move X0, [X8]
	209 Call 0x1C17F10
	210 Move X24, X0
	211 Move X1, X23
	212 Move X2, X22
	213 Move X3, X31
	214 Call Uri..ctor, X0, X1, X2
	215 Move [X20+40], X24
	216 Compare X24, 0
	217 JumpIfEqual {258}
	218 Move X0, X24
	219 Move X1, X31
	220 Call Uri.get_Scheme, X0
	221 Compare X23, 0
	222 JumpIfEqual {258}
	223 Move X19, X0
	224 Move X0, X23
	225 Move X1, X31
	226 Call Uri.get_Scheme, X0
	227 Move X1, X0
	228 Move X0, X19
	229 Move X2, X31
	230 Call String.op_Inequality, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {236}
	235 Move W0, 1
	236 Move X0, X20
	237 Call HttpWebRequest.get_Host, X0
	238 Move X19, X0
	239 Move X0, X23
	240 Move X1, X31
	241 Call Uri.get_Authority, X0
	242 Move X1, X0
	243 Move X0, X19
	244 Move X2, X31
	245 Call String.op_Inequality, X0, X1
	246 And W8, W0, 1
	247 Move W0, 1
	248 Move [X20+48], W8
	249 Move X20, [X31+64]
	250 Move X19, [X31+72]
	251 Move X22, [X31+48]
	252 Move X21, [X31+56]
	253 Move X24, [X31+32]
	254 Move X23, [X31+40]
	255 Move X30, [X31+16]
	256 Add X31, X31, 80
	257 Return X0
	258 Call 0x1C17F20
	259 Move X0, 0xAA0000
	260 Move X0, [X0+2352]
	261 Call 0x1C17D08
	262 Move X1, X0
	263 Move X0, X22
	264 Call 0x1C17DEC
	265 Move [X31+24], W21
	266 Move X0, 0xA55000
	267 Move X0, [X0+1880]
	268 Call 0x1C17D08
	269 Add X1, X31, 24
	270 Call 0x1C17E04
	271 Move X20, X0
	272 Move X0, 0xAA0000
	273 Move X0, [X0+2360]
	274 Call 0x1C17D08
	275 Move X1, X20
	276 Move X2, X31
	277 Call String.Format, X0, X1
	278 Move X20, X0
	279 Move X0, 0xA80000
	280 Move X0, [X0+816]
	281 Call 0x1C17D08
	282 Call 0x1C17F10
	283 Move W3, 7
	284 Move X1, X20
	285 Move X2, X31
	286 Move X4, X19
	287 Move X5, X31
	288 Move X21, X0
	289 Call WebException..ctor, X0, X1, X2, X3, X4
	290 Move X0, 0xAA0000
	291 Move X0, [X0+2352]
	292 Call 0x1C17D08
	293 Move X1, X0
	294 Move X0, X21
	295 Call 0x1C17DEC
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X20, X0
	298 Move X0, X20
	299 Call 0x3EB2AD0
	300 Move X20, X0
	301 Move X0, 0xA55000
	302 Move X0, [X0+2000]
	303 Call 0x1C17D08
	304 Move X8, [X20]
	305 Move X1, [X8]
	306 Call 0x1C18270
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {326}
	311 Call 0x3EB2AE0
	312 Move [X31+12], W21
	313 Move X0, 0xA55000
	314 Move X0, [X0+1880]
	315 Call 0x1C17D08
	316 Add X1, X31, 12
	317 Call 0x1C17E04
	318 Move X20, X0
	319 Move X0, 0xAA0000
	320 Move X0, [X0+2368]
	321 Call 0x1C17D08
	322 Move X1, X22
	323 Move X2, X20
	324 Move X3, X31
	325 Call String.Format, X0, X1, X2
	326 Move W0, 8
	327 Call 0x3EB2AF0
	328 Move X8, [X20]
	329 Move [X0], X8
	330 Move X1, 0x816000
	331 Add X1, X1, 3672
	332 Move X2, X31
	333 Call 0x3EB2B00
	334 Move X20, X0
	335 Call 0x3EB2AE0
	336 Move X0, X20
	337 Call 0x1D2D690
	338 Call 0x1991590

Method: System.String GetHeaders()

Disassembly:
	0x0369FF14 LDR X11, [X11 + 0xAC8]
	0x0369FF18 CMP W8, 0x0
	0x0369FF1C LDR X8, [X9 + 0x268]
	0x0369FF20 LDR X2, [X9 + 0x270]
	0x0369FF24 CSEL X10, X10, X11, EQ
	0x0369FF28 LDR X1, [X10]
	0x0369FF2C BLR X8
	0x0369FF30 CBZ X0, 0x36A0030
	0x0369FF34 LDR X8, [X0 + 0x18]
	0x0369FF38 MOV X20, X0
	0x0369FF3C CBZ X8, 0x36A002C
	0x0369FF40 LDR X9, [X19]
	0x0369FF44 CBZ X9, 0x36A00C0
	0x0369FF48 LDRB W10, [X19 + 0x8]
	0x0369FF4C CBZ W10, 0x369FFA0
	0x0369FF50 LDR X21, [X9 + 0xC0]
	0x0369FF54 CBZ X21, 0x36A00C0
	0x0369FF58 ADRP X10, 0xA9F000
	0x0369FF5C LDR X8, [X21]
	0x0369FF60 LDR X10, [X10 + 0x120]
	0x0369FF64 LDRH W9, [X8 + 0x12E]
	0x0369FF68 LDR X1, [X10]
	0x0369FF6C CBZ X9, 0x369FF90
	0x0369FF70 LDR X10, [X8 + 0xB0]
	0x0369FF74 ADD X10, X10, 0x8
	0x0369FF78 LDUR X11, [X10 - 0x8]
	0x0369FF7C CMP X11, X1
	0x0369FF80 B.EQ 0x369FFA8
	0x0369FF84 SUBS X9, X9, 0x1
	0x0369FF88 ADD X10, X10, 0x10
	0x0369FF8C B.NE 0x369FF78
	0x0369FF90 MOVZ W2, 0x2
	0x0369FF94 MOV X0, X21
	0x0369FF98 BL 0x1C5C788
	0x0369FF9C B 0x369FFB8
	0x0369FFA0 LDR X21, [X9 + 0x68]
	0x0369FFA4 B 0x369FFCC
	0x0369FFA8 LDR W9, [X10]
	0x0369FFAC ADD W9, W9, 0x2
	0x0369FFB0 ADD X8, X8, W9, 0x4, SXTW
	0x0369FFB4 ADD X0, X8, 0x138
	0x0369FFB8 LDP X8, X1, [X0]
	0x0369FFBC MOV X0, X21
	0x0369FFC0 BLR X8
	0x0369FFC4 LDR W8, [X20 + 0x18]
	0x0369FFC8 MOV X21, X0
	0x0369FFCC CMP W8, 0x1
	0x0369FFD0 B.LT 0x36A002C
	0x0369FFD4 ADRP X26, 0xA9F000
	0x0369FFD8 LDR X26, [X26 + 0x598]
	0x0369FFDC MOV X24, X31
	0x0369FFE0 ADD X25, X20, 0x20
	0x0369FFE4 CMP X24, W8, UXTW
	0x0369FFE8 B.CS 0x36A00C4
	0x0369FFEC LDR X0, [X26]
	0x0369FFF0 LDR X22, [X25, X24, LSL #3]
	0x0369FFF4 LDR X23, [X19]
	0x0369FFF8 LDR W8, [X0 + 0xE0]
	0x0369FFFC CBNZ W8, 0x36A0004
	0x036A0000 BL 0x1C16DFC
	0x036A0004 MOV X0, X22
	0x036A0008 MOV X1, X23
	0x036A000C MOV X2, X21
	0x036A0010 BL 0x3696ECC
	0x036A0014 CBNZ X0, 0x36A0048
	0x036A0018 LDR W8, [X20 + 0x18]
	0x036A001C ADD X24, X24, 0x1
	0x036A0020 CMP X24, W8, SXTW
	0x036A0024 B.LT 0x369FFE4
	0x036A0028 B 0x36A0030
	0x036A002C MOV W0, W31
	0x036A0030 LDP X20, X19, [X31 + 0x40]
	0x036A0034 LDP X22, X21, [X31 + 0x30]
	0x036A0038 LDP X24, X23, [X31 + 0x20]
	0x036A003C LDP X26, X25, [X31 + 0x10]
	0x036A0040 LDR X30, [X31], #0x50
	0x036A0044 RET
	0x036A0048 LDR X8, [X19]
	0x036A004C CBZ X8, 0x36A00C0
	0x036A0050 MOV X22, X0
	0x036A0054 LDR X0, [X8 + 0x78]
	0x036A0058 CBZ X0, 0x36A00C0
	0x036A005C LDRB W8, [X19 + 0x8]
	0x036A0060 ADRP X9, 0xA8E000
	0x036A0064 ADRP X10, 0xA9A000
	0x036A0068 LDR X9, [X9 + 0x7D0]
	0x036A006C LDR X10, [X10 + 0xAB0]
	0x036A0070 CMP W8, 0x0
	0x036A0074 LDR X2, [X22 + 0x10]
	0x036A0078 MOV X3, X31
	0x036A007C CSEL X8, X9, X10, EQ
	0x036A0080 LDR X1, [X8]
	0x036A0084 BL 0x366457C
	0x036A0088 LDRB W8, [X22 + 0x18]
	0x036A008C ADRP X9, 0xA83000
	0x036A0090 LDR X9, [X9 + 0xA50]
	0x036A0094 MOV X2, X31
	0x036A0098 STRB W8, [X19 + 0x9]
	0x036A009C LDR X0, [X22 + 0x20]
	0x036A00A0 LDR X1, [X9]
	0x036A00A4 BL 0x321BA08
	0x036A00A8 TBZ X0, 0x0, 0x36A00B8
	0x036A00AC LDR W8, [X19 + 0xC]
	0x036A00B0 ADD W8, W8, 0x1
	0x036A00B4 STR W8, [X19 + 0xC]
	0x036A00B8 MOVZ W0, 0x1
	0x036A00BC B 0x36A0030
	0x036A00C0 BL 0x1C16F20
	0x036A00C4 BL 0x1C16F28
	0x036A00C8 SUB X31, X31, 0x40
	0x036A00CC STR X30, [X31 + 0x10]
	0x036A00D0 STP X22, X21, [X31 + 0x20]
	0x036A00D4 STP X20, X19, [X31 + 0x30]
	0x036A00D8 ADRP X22, 0xD40000
	0x036A00DC LDRB W8, [X22 + 0x8D3]
	0x036A00E0 MOV W21, W2
	0x036A00E4 MOV X19, X1
	0x036A00E8 MOV X20, X0
	0x036A00EC TBNZ X8, 0x0, 0x36A014C
	0x036A00F0 ADRP X0, 0xA9E000
	0x036A00F4 LDR X0, [X0 + 0x978]
	0x036A00F8 BL 0x1C16CF4
	0x036A00FC ADRP X0, 0xA9E000
	0x036A0100 LDR X0, [X0 + 0x980]
	0x036A0104 BL 0x1C16CF4
	0x036A0108 ADRP X0, 0xA9E000
	0x036A010C LDR X0, [X0 + 0x988]
	0x036A0110 BL 0x1C16CF4
	0x036A0114 ADRP X0, 0xA54000
	0x036A0118 LDR X0, [X0 + 0x7B8]
	0x036A011C BL 0x1C16CF4
	0x036A0120 ADRP X0, 0xA9E000
	0x036A0124 LDR X0, [X0 + 0x990]
	0x036A0128 BL 0x1C16CF4
	0x036A012C ADRP X0, 0xA7E000
	0x036A0130 LDR X0, [X0 + 0x330]
	0x036A0134 BL 0x1C16CF4
	0x036A0138 ADRP X0, 0xA9E000
	0x036A013C LDR X0, [X0 + 0x918]
	0x036A0140 BL 0x1C16CF4
	0x036A0144 MOVZ W8, 0x1
	0x036A0148 STRB W8, [X22 + 0x8D3]
	0x036A014C TBZ X21, 0x0, 0x36A0178
	0x036A0150 MOV X0, X20
	0x036A0154 BL 0x369C244
	0x036A0158 TBZ X0, 0x0, 0x36A01D8
	0x036A015C LDR X0, [X20 + 0xE0]
	0x036A0160 CBZ X0, 0x36A02C4
	0x036A0164 MOV X1, X31
	0x036A0168 BL 0x36B2614
	0x036A016C CBZ W0, 0x36A01D8
	0x036A0170 LDR X8, [X20 + 0x50]
	0x036A0174 CBZ X8, 0x36A01D8
	0x036A0178 LDR X8, [X20]
	0x036A017C MOV X0, X20
	0x036A0180 LDR X9, [X8 + 0x328]
	0x036A0184 LDR X1, [X8 + 0x330]
	0x036A0188 BLR X9
	0x036A018C TBZ X0, 0x0, 0x36A01F0
	0x036A0190 LDR X0, [X20 + 0xE0]
	0x036A0194 CBZ X0, 0x36A02C4
	0x036A0198 MOV X1, X31
	0x036A019C BL 0x36B2658
	0x036A01A0 ADRP X8, 0xA54000
	0x036A01A4 LDR X8, [X8 + 0x7B8]
	0x036A01A8 MOV X19, X0
	0x036A01AC LDR X8, [X8]
	0x036A01B0 LDR W9, [X8 + 0xE0]
	0x036A01B4 CBNZ W9, 0x36A01C0
	0x036A01B8 MOV X0, X8
	0x036A01BC BL 0x1C16DFC
	0x036A01C0 ADRP X8, 0xA9E000
	0x036A01C4 LDR X8, [X8 + 0x988]
	0x036A01C8 MOV X0, X19
	0x036A01CC LDR X1, [X8]
	0x036A01D0 BL 0x229A308
	0x036A01D4 B 0x36A0238
	0x036A01D8 ADRP X8, 0xA9E000
	0x036A01DC LDR X8, [X8 + 0x990]
	0x036A01E0 STP X31, X31, [X31]
	0x036A01E4 ADD X0, X31, 0x0
	0x036A01E8 MOV X1, X31
	0x036A01EC B 0x36A024C
	0x036A01F0 LDR X8, [X20 + 0x170]
	0x036A01F4 CBZ X8, 0x36A0270
	0x036A01F8 ADRP X8, 0xA9E000
	0x036A01FC LDR X8, [X8 + 0x978]
	0x036A0200 LDR X0, [X8]
	0x036A0204 BL 0x1C16F10
	0x036A0208 ADRP X8, 0xA9E000
	0x036A020C LDR X8, [X8 + 0x980]
	0x036A0210 MOV X1, X20
	0x036A0214 MOV X3, X31
	0x036A0218 MOV X19, X0
	0x036A021C LDR X2, [X8]
	0x036A0220 BL 0x2D27AA8
	0x036A0224 CBZ X19, 0x36A02C4
	0x036A0228 LDR X8, [X19 + 0x18]
	0x036A022C LDR X0, [X19 + 0x40]
	0x036A0230 LDR X1, [X19 + 0x28]
	0x036A0234 BLR X8
	0x036A0238 ADRP X8, 0xA9E000
	0x036A023C LDR X8, [X8 + 0x990]
	0x036A0240 MOV X1, X0
	0x036A0244 ADD X0, X31, 0x0
	0x036A0248 STP X31, X31, [X31]
	0x036A024C LDR X3, [X8]
	0x036A0250 MOV X2, X31
	0x036A0254 BL 0x27ABC80
	0x036A0258 LDP X0, X1, [X31]
	0x036A025C LDP X20, X19, [X31 + 0x30]
	0x036A0260 LDP X22, X21, [X31 + 0x20]
	0x036A0264 LDR X30, [X31 + 0x10]
	0x036A0268 ADD X31, X31, 0x40
	0x036A026C RET
	0x036A0270 ADRP X8, 0xA7E000
	0x036A0274 LDR X8, [X8 + 0x330]
	0x036A0278 LDR X0, [X8]
	0x036A027C BL 0x1C16F10
	0x036A0280 ADRP X8, 0xA9E000
	0x036A0284 LDR X8, [X8 + 0x918]
	0x036A0288 MOVZ W3, 0x7
	0x036A028C MOV X2, X31
	0x036A0290 MOV X4, X19
	0x036A0294 LDR X1, [X8]
	0x036A0298 MOV X5, X31
	0x036A029C MOV X20, X0
	0x036A02A0 BL 0x367B5A0
	0x036A02A4 ADRP X8, 0xA9E000
	0x036A02A8 LDR X8, [X8 + 0x990]
	0x036A02AC STP X31, X31, [X31]
	0x036A02B0 ADD X0, X31, 0x0
	0x036A02B4 MOV X1, X31
	0x036A02B8 LDR X3, [X8]
	0x036A02BC MOV X2, X20
	0x036A02C0 B 0x36A0254
	0x036A02C4 BL 0x1C16F20
	0x036A02C8 SUB X31, X31, 0x50
	0x036A02CC STP X30, X25, [X31 + 0x10]
	0x036A02D0 STP X24, X23, [X31 + 0x20]
	0x036A02D4 STP X22, X21, [X31 + 0x30]
	0x036A02D8 STP X20, X19, [X31 + 0x40]
	0x036A02DC ADRP X22, 0xD40000
	0x036A02E0 LDRB W9, [X22 + 0x8D4]
	0x036A02E4 MOV X21, X1
	0x036A02E8 MOV X20, X0
	0x036A02EC MOV X19, X8
	0x036A02F0 TBNZ X9, 0x0, 0x36A0338
	0x036A02F4 ADRP X0, 0xA53000
	0x036A02F8 LDR X0, [X0 + 0x758]
	0x036A02FC BL 0x1C16CF4
	0x036A0300 ADRP X0, 0xA9E000
	0x036A0304 LDR X0, [X0 + 0x998]
	0x036A0308 BL 0x1C16CF4
	0x036A030C ADRP X0, 0xA7E000
	0x036A0310 LDR X0, [X0 + 0x330]
	0x036A0314 BL 0x1C16CF4
	0x036A0318 ADRP X0, 0xA9E000
	0x036A031C LDR X0, [X0 + 0x9A0]
	0x036A0320 BL 0x1C16CF4
	0x036A0324 ADRP X0, 0xA9E000
	0x036A0328 LDR X0, [X0 + 0x9A8]
	0x036A032C BL 0x1C16CF4
	0x036A0330 MOVZ W8, 0x1
	0x036A0334 STRB W8, [X22 + 0x8D4]
	0x036A0338 CBZ X21, 0x36A0768
	0x036A033C LDR X8, [X21]
	0x036A0340 ADRP X23, 0xA53000
	0x036A0344 ADRP X25, 0xA9E000
	0x036A0348 ADRP X24, 0xA7E000
	0x036A034C LDR X9, [X8 + 0x228]
	0x036A0350 LDR X1, [X8 + 0x230]
	0x036A0354 LDR X23, [X23 + 0x758]
	0x036A0358 LDR X25, [X25 + 0x9A8]
	0x036A035C LDR X24, [X24 + 0x330]
	0x036A0360 MOV X0, X21
	0x036A0364 BLR X9
	0x036A0368 MOV W22, W0
	0x036A036C CMP W0, 0x191
	0x036A0370 B.NE 0x36A0384
	0x036A0374 LDRB W8, [X20 + 0x159]
	0x036A0378 CBNZ W8, 0x36A0384
	0x036A037C LDR X8, [X20 + 0x68]
	0x036A0380 CBNZ X8, 0x36A0440
	0x036A0384 LDR X8, [X20 + 0xD0]
	0x036A0388 CBZ X8, 0x36A0768
	0x036A038C LDRB W9, [X8 + 0x30]
	0x036A0390 CBZ W9, 0x36A039C
	0x036A0394 LDRB W8, [X8 + 0x32]
	0x036A0398 CBZ W8, 0x36A0430
	0x036A039C CMP W22, 0x190
	0x036A03A0 B.GE 0x36A04D8
	0x036A03A4 CMP W22, 0x130
	0x036A03A8 B.NE 0x36A05A4
	0x036A03AC LDRB W8, [X20 + 0x31]
	0x036A03B0 CBZ W8, 0x36A065C
	0x036A03B4 LDR X0, [X23]
	0x036A03B8 MOVZ W8, 0x130
	0x036A03BC ADD X1, X31, 0x8
	0x036A03C0 STR W8, [X31 + 0x8]
	0x036A03C4 BL 0x1C16E04
	0x036A03C8 LDR X8, [X21]
	0x036A03CC MOV X23, X0
	0x036A03D0 MOV X0, X21
	0x036A03D4 LDR X9, [X8 + 0x238]
	0x036A03D8 LDR X1, [X8 + 0x240]
	0x036A03DC BLR X9
	0x036A03E0 LDR X8, [X25]
	0x036A03E4 MOV X2, X0
	0x036A03E8 MOV X1, X23
	0x036A03EC MOV X3, X31
	0x036A03F0 MOV X0, X8
	0x036A03F4 BL 0x3227BD4
	0x036A03F8 LDR X8, [X24]
	0x036A03FC MOV X23, X0
	0x036A0400 MOV X0, X8
	0x036A0404 BL 0x1C16F10
	0x036A0408 MOVZ W3, 0x7
	0x036A040C MOV X1, X23
	0x036A0410 MOV X2, X31
	0x036A0414 MOV X4, X21
	0x036A0418 MOV X5, X31
	0x036A041C MOV X24, X0
	0x036A0420 BL 0x367B5A0
	0x036A0424 MOV W23, W31
	0x036A0428 CBNZ X24, 0x36A05CC
	0x036A042C B 0x36A054C
	0x036A0430 CMP W22, 0x197
	0x036A0434 B.NE 0x36A039C
	0x036A0438 LDRB W8, [X20 + 0x169]
	0x036A043C CBNZ W8, 0x36A039C
	0x036A0440 LDRB W8, [X20 + 0xA2]
	0x036A0444 CBNZ W8, 0x36A04D8
	0x036A0448 MOV X0, X20
	0x036A044C MOV X1, X21
	0x036A0450 MOV W2, W22
	0x036A0454 BL 0x369FD98
	0x036A0458 TBZ X0, 0x0, 0x36A04D8
	0x036A045C MOV X0, X20
	0x036A0460 BL 0x369C244
	0x036A0464 TBZ X0, 0x0, 0x36A06BC
	0x036A0468 MOV X0, X20
	0x036A046C MOV X1, X21
	0x036A0470 MOV W2, W31
	0x036A0474 BL 0x36A00C8
	0x036A0478 CBZ X1, 0x36A0704
	0x036A047C LDRB W8, [X20 + 0x178]
	0x036A0480 CBZ W8, 0x36A0744
	0x036A0484 LDR X0, [X20 + 0xE0]
	0x036A0488 CBZ X0, 0x36A0768
	0x036A048C MOV X22, X1
	0x036A0490 MOV X1, X31
	0x036A0494 BL 0x36AE328
	0x036A0498 STR X31, [X20 + 0xE0]
	0x036A049C LDR X8, [X21]
	0x036A04A0 MOV X0, X21
	0x036A04A4 LDP X9, X1, [X8 + 0x1C8]
	0x036A04A8 BLR X9
	0x036A04AC ADRP X8, 0xA9E000
	0x036A04B0 LDR X8, [X8 + 0x998]
	0x036A04B4 STP X31, X31, [X19]
	0x036A04B8 MOVZ W2, 0x1
	0x036A04BC STR X31, [X19 + 0x10]
	0x036A04C0 LDR X5, [X8]
	0x036A04C4 MOV X0, X19
	0x036A04C8 MOV W1, W31
	0x036A04CC MOV X3, X31
	0x036A04D0 MOV X4, X22
	0x036A04D4 B 0x36A072C
	0x036A04D8 LDR X0, [X23]
	0x036A04DC ADD X1, X31, 0xC
	0x036A04E0 STR W22, [X31 + 0xC]
	0x036A04E4 BL 0x1C16E04
	0x036A04E8 LDR X8, [X21]
	0x036A04EC MOV X23, X0
	0x036A04F0 MOV X0, X21
	0x036A04F4 LDR X9, [X8 + 0x238]
	0x036A04F8 LDR X1, [X8 + 0x240]
	0x036A04FC BLR X9
	0x036A0500 LDR X8, [X25]
	0x036A0504 MOV X2, X0
	0x036A0508 MOV X1, X23
	0x036A050C MOV X3, X31
	0x036A0510 MOV X0, X8
	0x036A0514 BL 0x3227BD4
	0x036A0518 LDR X8, [X24]
	0x036A051C MOV X23, X0
	0x036A0520 MOV X0, X8
	0x036A0524 BL 0x1C16F10
	0x036A0528 MOV X24, X0
	0x036A052C MOVZ W3, 0x7
	0x036A0530 MOV X1, X23
	0x036A0534 MOV X2, X31
	0x036A0538 MOV X4, X21
	0x036A053C MOV X5, X31
	0x036A0540 BL 0x367B5A0
	0x036A0544 MOVZ W23, 0x1
	0x036A0548 CBNZ X24, 0x36A05CC
	0x036A054C LDRB W8, [X20 + 0x31]
	0x036A0550 CBZ W8, 0x36A0660
	0x036A0554 MOV X0, X20
	0x036A0558 MOV W1, W22
	0x036A055C MOV X2, X21
	0x036A0560 BL 0x369EA4C
	0x036A0564 MOV W25, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xD42000
	008 Move W8, [X20+2255]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {73}
	014 Move X0, 0xA9C000
	015 Move X0, [X0+360]
	016 Call 0x1C17CF4
	017 Move X0, 0xA57000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0xA9C000
	021 Move X0, [X0+392]
	022 Call 0x1C17CF4
	023 Move X0, 0xA58000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move X0, 0xA9C000
	027 Move X0, [X0+2952]
	028 Call 0x1C17CF4
	029 Move X0, 0xA9C000
	030 Move X0, [X0+2536]
	031 Call 0x1C17CF4
	032 Move X0, 0xAA0000
	033 Move X0, [X0+2376]
	034 Call 0x1C17CF4
	035 Move X0, 0xAA0000
	036 Move X0, [X0+512]
	037 Call 0x1C17CF4
	038 Move X0, 0xA9C000
	039 Move X0, [X0+400]
	040 Call 0x1C17CF4
	041 Move X0, 0xA9C000
	042 Move X0, [X0+600]
	043 Call 0x1C17CF4
	044 Move X0, 0xA7D000
	045 Move X0, [X0+2856]
	046 Call 0x1C17CF4
	047 Move X0, 0xAA0000
	048 Move X0, [X0+2384]
	049 Call 0x1C17CF4
	050 Move X0, 0xA9C000
	051 Move X0, [X0+344]
	052 Call 0x1C17CF4
	053 Move X0, 0xA9C000
	054 Move X0, [X0+2960]
	055 Call 0x1C17CF4
	056 Move X0, 0xA9C000
	057 Move X0, [X0+2776]
	058 Call 0x1C17CF4
	059 Move X0, 0xA55000
	060 Move X0, [X0+2440]
	061 Call 0x1C17CF4
	062 Move X0, 0xAA0000
	063 Move X0, [X0+2392]
	064 Call 0x1C17CF4
	065 Move X0, 0xAA0000
	066 Move X0, [X0+520]
	067 Call 0x1C17CF4
	068 Move X0, 0xA56000
	069 Move X0, [X0+1200]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+2255], W8
	073 Move X21, 0xA9B000
	074 Move X22, 0xA7C000
	075 Move W8, [X19+200]
	076 Move X21, [X21+400]
	077 Move X22, [X22+2856]
	078 Compare W8, 0
	079 JumpIfEqual {96}
	080 Move X0, [X19+120]
	081 Compare X0, 0
	082 JumpIfEqual {460}
	083 Move X8, 0xA9B000
	084 Move X8, [X8+600]
	085 Move X1, [X21]
	086 Move X3, X31
	087 Move X2, [X8]
	088 Call WebHeaderCollection.ChangeInternal, X0, X1, X2
	089 Move X0, [X19+120]
	090 Compare X0, 0
	091 JumpIfEqual {460}
	092 Move X1, [X22]
	093 Move X2, X31
	094 Call WebHeaderCollection.RemoveInternal, X0, X1
	095 Move W21, 1
	096 Move X0, X19
	097 Add X0, X0, 80
	098 Move X8, [X0]
	099 Add X31, X8, 1
	100 Move W9, [X19+348]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W9, [X19+364]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W9, [X19+72]
	105 Compare W9, 0
	106 JumpIfEqual {124}
	107 Move X0, [X19+120]
	108 Compare X0, 0
	109 JumpIfEqual {460}
	110 Move X8, 0xA56000
	111 Move X1, [X22]
	112 Move X8, [X8+1200]
	113 Move X3, X31
	114 Move X2, [X8]
	115 Call WebHeaderCollection.SetInternal, X0, X1, X2
	116 Move W23, W31
	117 Move X0, [X19+120]
	118 Compare X0, 0
	119 JumpIfEqual {460}
	120 Move X1, [X22]
	121 Move X2, X31
	122 Call WebHeaderCollection.RemoveInternal, X0, X1
	123 Move W21, W31
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W8, [X19+260]
	126 Compare W8, 0
	127 JumpIfNotEqual {107}
	128 Move X0, [X19+120]
	129 Compare X0, 0
	130 JumpIfEqual {460}
	131 Move X1, [X22]
	132 Move X2, X31
	133 Call WebHeaderCollection.RemoveInternal, X0, X1
	134 Move W9, [X19+72]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CSET not yet implemented."
	137 Compare W9, 0
	138 JumpIfEqual {456}
	139 Move X20, [X19+120]
	140 Move X1, X31
	141 Call Int64.ToString, X0
	142 Compare X20, 0
	143 JumpIfEqual {460}
	144 Move X1, [X22]
	145 Move X2, X0
	146 Move X0, X20
	147 Move X3, X31
	148 Call WebHeaderCollection.SetInternal, X0, X1, X2
	149 Move X0, [X19+120]
	150 Compare X0, 0
	151 JumpIfEqual {460}
	152 Move X1, [X21]
	153 Move X2, X31
	154 Call WebHeaderCollection.RemoveInternal, X0, X1
	155 NotImplemented "Instruction CMP not yet implemented."
	156 NotImplemented "Instruction CSET not yet implemented."
	157 Move X22, 0xA9B000
	158 Move X22, [X22+360]
	159 Move X20, [X19+184]
	160 Move X0, [X22]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X22]
	166 Move X8, [X0+184]
	167 Move X23, 0xA9B000
	168 Move X0, X20
	169 Move X2, X31
	170 Move X1, [X8+16]
	171 Move X23, [X23+2776]
	172 Call Version.op_Equality, X0, X1
	173 And W8, W21, W0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, [X19+208]
	176 Compare X0, 0
	177 JumpIfEqual {460}
	178 Call ServicePoint.get_SendContinue, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {193}
	183 Move X0, [X19+120]
	184 Compare X0, 0
	185 JumpIfEqual {460}
	186 Move X8, 0xA9B000
	187 Move X1, [X23]
	188 Move X8, [X8+2960]
	189 Move X3, X31
	190 Move X2, [X8]
	191 Call WebHeaderCollection.ChangeInternal, X0, X1, X2
	192 Move W8, 1
	193 Move X0, [X19+120]
	194 Compare X0, 0
	195 JumpIfEqual {460}
	196 Move X1, [X23]
	197 Move X2, X31
	198 Call WebHeaderCollection.RemoveInternal, X0, X1
	199 Move W8, W31
	200 Move X10, [X19+208]
	201 Move [X19+268], W8
	202 Compare X10, 0
	203 JumpIfEqual {460}
	204 Move X8, 0xA9F000
	205 Move X9, 0xA9B000
	206 Move W11, [X10+48]
	207 Move X8, [X8+520]
	208 Move X9, [X9+344]
	209 Compare W11, 0
	210 JumpIfEqual {215}
	211 Move W10, [X10+50]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 NotImplemented "Instruction CSET not yet implemented."
	214 NotImplemented "Instruction CSEL not yet implemented."
	215 Move W10, W31
	216 Move X11, X9
	217 Move X0, [X19+120]
	218 Compare X0, 0
	219 JumpIfEqual {460}
	220 NotImplemented "Instruction CMP not yet implemented."
	221 NotImplemented "Instruction CSEL not yet implemented."
	222 Move X1, [X8]
	223 Move X20, [X11]
	224 Move X2, X31
	225 Call WebHeaderCollection.RemoveInternal, X0, X1
	226 Move X0, [X19+208]
	227 Compare X0, 0
	228 JumpIfEqual {460}
	229 Move X8, [X0]
	230 Move X9, [X8+376]
	231 Move X1, [X8+384]
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X1, X31
	234 Move X2, X31
	235 Move X21, X0
	236 Call Version.op_Equality, X0, X1
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {242}
	241 Move W23, 1
	242 Move X0, [X22]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {248}
	246 Call 0x1C17DFC
	247 Move X0, [X22]
	248 Move X8, [X0+184]
	249 Move X0, X21
	250 Move X2, X31
	251 Move X1, [X8+8]
	252 Call Version.op_Equality, X0, X1
	253 And W23, W0, 1
	254 Move W8, [X19+128]
	255 Compare W8, 0
	256 JumpIfEqual {304}
	257 Move X0, [X22]
	258 Move X21, [X19+168]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {264}
	262 Call 0x1C17DFC
	263 Move X0, [X22]
	264 Move X8, [X0+184]
	265 Move X0, X21
	266 Move X2, X31
	267 Move X1, [X8+8]
	268 Call Version.op_Equality, X0, X1
	269 And W8, W0, 1
	270 Or W8, W23, W8
	271 Compare W8, 0
	272 JumpIfEqual {301}
	273 Move X0, [X19+120]
	274 Compare X0, 0
	275 JumpIfEqual {460}
	276 Move X1, X20
	277 Move X2, X31
	278 Call NameValueCollection.get_Item, X0, X1
	279 Compare X0, 0
	280 JumpIfEqual {296}
	281 Move X0, [X19+120]
	282 Compare X0, 0
	283 JumpIfEqual {460}
	284 Move X1, X20
	285 Move X2, X31
	286 Call NameValueCollection.get_Item, X0, X1
	287 Compare X0, 0
	288 JumpIfEqual {460}
	289 Move X8, 0xA9F000
	290 Move X8, [X8+2384]
	291 Move W2, 5
	292 Move X3, X31
	293 Move X1, [X8]
	294 Call String.IndexOf, X0, X1, X2
	295 Add W31, W0, 1
	296 Move X0, [X19+120]
	297 Compare X0, 0
	298 JumpIfEqual {460}
	299 Move X8, 0xA9F000
	300 Move X8, [X8+2384]
	301 Move W8, [X19+128]
	302 Compare W8, 0
	303 JumpIfNotEqual {329}
	304 Move X0, [X22]
	305 Move X21, [X19+168]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {311}
	309 Call 0x1C17DFC
	310 Move X0, [X22]
	311 Move X8, [X0+184]
	312 Move X0, X21
	313 Move X2, X31
	314 Move X1, [X8+16]
	315 Call Version.op_Equality, X0, X1
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfNotEqual {329}
	320 Move X0, [X19+120]
	321 Compare X0, 0
	322 JumpIfEqual {460}
	323 Move X8, 0xA9B000
	324 Move X8, [X8+2952]
	325 Move X2, [X8]
	326 Move X1, X20
	327 Move X3, X31
	328 Call WebHeaderCollection.ChangeInternal, X0, X1, X2
	329 Move X8, 0xA56000
	330 Move X8, [X8+2600]
	331 Move X20, [X19+328]
	332 Move X0, [X8]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X0, X20
	338 Move X1, X31
	339 Move X2, X31
	340 Call Uri.op_Inequality, X0, X1
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {352}
	345 Move X0, [X19+328]
	346 Compare X0, 0
	347 JumpIfEqual {460}
	348 Move W8, [X19+320]
	349 Compare W8, 0
	350 JumpIfEqual {368}
	351 Move W1, 132
	352 Move X0, [X19+40]
	353 Compare X0, 0
	354 JumpIfEqual {460}
	355 Move X1, X31
	356 Call Uri.get_IsDefaultPort, X0
	357 Move X8, [X19+40]
	358 Compare X8, 0
	359 JumpIfEqual {460}
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {365}
	364 Move W1, 4
	365 Move W1, 132
	366 Move W2, 2
	367 Move X0, X8
	368 Move W1, 4
	369 Move W2, 2
	370 Move X3, X31
	371 Call Uri.GetComponents, X0, X1, X2
	372 Move X2, X0
	373 Move X0, [X19+120]
	374 Compare X0, 0
	375 JumpIfEqual {460}
	376 Move X8, 0xA9B000
	377 Move X8, [X8+392]
	378 Move X3, X31
	379 Move X1, [X8]
	380 Call WebHeaderCollection.SetInternal, X0, X1, X2
	381 Move X0, [X19+96]
	382 Compare X0, 0
	383 JumpIfEqual {410}
	384 Move X1, [X19+40]
	385 Move X20, 0xA54000
	386 Move X20, [X20+2440]
	387 Move X2, X31
	388 Call CookieContainer.GetCookieHeader, X0, X1
	389 Move X1, [X20]
	390 Move X2, X31
	391 Move X20, X0
	392 Call String.op_Inequality, X0, X1
	393 Move X8, [X19+120]
	394 Compare X8, 0
	395 JumpIfEqual {460}
	396 Move X9, 0xA9F000
	397 Move X9, [X9+512]
	398 Move X1, [X9]
	399 Move TEMP, X0
	400 And TEMP, TEMP, 1
	401 Compare TEMP, 1
	402 JumpIfNotEqual {407}
	403 Move X0, X8
	404 Move X2, X20
	405 Move X3, X31
	406 Call WebHeaderCollection.ChangeInternal, X0, X1, X2
	407 Move X0, X8
	408 Move X2, X31
	409 Call WebHeaderCollection.RemoveInternal, X0, X1
	410 Move X8, 0xA57000
	411 Move X8, [X8+632]
	412 Move W9, [X19+284]
	413 Move X10, 0xA9F000
	414 Move X11, 0xA9F000
	415 Move X8, [X8]
	416 Move X10, [X10+2376]
	417 Move X11, [X11+2392]
	418 And W31, W9, 1
	419 NotImplemented "Instruction CSEL not yet implemented."
	420 NotImplemented "Instruction CMP not yet implemented."
	421 NotImplemented "Instruction CSEL not yet implemented."
	422 Move X10, [X10]
	423 And W31, W9, 2
	424 NotImplemented "Instruction CSEL not yet implemented."
	425 Compare X2, 0
	426 JumpIfEqual {435}
	427 Move X0, [X19+120]
	428 Compare X0, 0
	429 JumpIfEqual {460}
	430 Move X8, 0xA9B000
	431 Move X8, [X8+2536]
	432 Move X3, X31
	433 Move X1, [X8]
	434 Call WebHeaderCollection.ChangeInternal, X0, X1, X2
	435 Move W8, [X19+162]
	436 Compare W8, 0
	437 JumpIfNotEqual {443}
	438 Move W8, [X19+161]
	439 Compare W8, 0
	440 JumpIfEqual {443}
	441 Move X0, X19
	442 Call HttpWebRequest.DoPreAuthenticate, X0
	443 Move X0, [X19+120]
	444 Compare X0, 0
	445 JumpIfEqual {460}
	446 Move X8, [X0]
	447 Move X20, [X31+32]
	448 Move X19, [X31+40]
	449 Move X22, [X31+16]
	450 Move X21, [X31+24]
	451 Move X2, [X8+360]
	452 Move X1, [X8+368]
	453 Move X30, [X31+48]
	454 Move X23, [X31+56]
	455 CallNoReturn X2
	456 Move W9, [X19+260]
	457 Compare W9, 0
	458 JumpIfNotEqual {139}
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Call 0x1C17F20

Method: System.Void DoPreAuthenticate()

Disassembly:
	0x036A0604 MOV X4, X24
	0x036A0608 STP X31, X31, [X19]
	0x036A060C STR X31, [X19 + 0x10]
	0x036A0610 B 0x36A06A0
	0x036A0614 ADRP X8, 0xA9E000
	0x036A0618 LDR X8, [X8 + 0x998]
	0x036A061C STP X31, X31, [X19]
	0x036A0620 STR X31, [X19 + 0x10]
	0x036A0624 MOV X0, X19
	0x036A0628 LDR X5, [X8]
	0x036A062C MOV W1, W31
	0x036A0630 MOV W2, W23
	0x036A0634 MOV X3, X31
	0x036A0638 B 0x36A069C
	0x036A063C LDRB W8, [X20 + 0x31]
	0x036A0640 CBZ W8, 0x36A065C
	0x036A0644 LDR W8, [X20 + 0x108]
	0x036A0648 LDR W9, [X20 + 0x84]
	0x036A064C CMP W8, W9
	0x036A0650 B.GE 0x36A06E4
	0x036A0654 MOV W23, W31
	0x036A0658 B 0x36A0554
	0x036A065C MOV W23, W31
	0x036A0660 CMP W22, 0x130
	0x036A0664 CSET W9, NE
	0x036A0668 EOR W8, W8, 0x1
	0x036A066C AND W8, W9, W8, 0x0
	0x036A0670 MOV X21, X31
	0x036A0674 MOV W1, W31
	0x036A0678 ORR W23, W23, W8, 0x0
	0x036A067C ADRP X8, 0xA9E000
	0x036A0680 LDR X8, [X8 + 0x998]
	0x036A0684 MOV X0, X19
	0x036A0688 MOV W2, W23
	0x036A068C MOV X3, X21
	0x036A0690 LDR X5, [X8]
	0x036A0694 STP X31, X31, [X19]
	0x036A0698 STR X31, [X19 + 0x10]
	0x036A069C MOV X4, X31
	0x036A06A0 BL 0x27C82B4
	0x036A06A4 LDP X20, X19, [X31 + 0x40]
	0x036A06A8 LDP X22, X21, [X31 + 0x30]
	0x036A06AC LDP X24, X23, [X31 + 0x20]
	0x036A06B0 LDP X30, X25, [X31 + 0x10]
	0x036A06B4 ADD X31, X31, 0x50
	0x036A06B8 RET
	0x036A06BC ADRP X8, 0xA9E000
	0x036A06C0 LDR X8, [X8 + 0x998]
	0x036A06C4 MOVZ W1, 0x1
	0x036A06C8 MOVZ W2, 0x1
	0x036A06CC MOV X0, X19
	0x036A06D0 LDR X5, [X8]
	0x036A06D4 STP X31, X31, [X19]
	0x036A06D8 STR X31, [X19 + 0x10]
	0x036A06DC MOV X3, X31
	0x036A06E0 B 0x36A0728
	0x036A06E4 LDR X0, [X24]
	0x036A06E8 BL 0x1C16F10
	0x036A06EC ADRP X8, 0xA9E000
	0x036A06F0 LDR X8, [X8 + 0x9A0]
	0x036A06F4 MOV X24, X0
	0x036A06F8 MOVZ W3, 0x7
	0x036A06FC LDR X1, [X8]
	0x036A0700 B 0x36A0534
	0x036A0704 ADRP X8, 0xA9E000
	0x036A0708 LDR X8, [X8 + 0x998]
	0x036A070C MOV X3, X0
	0x036A0710 STP X31, X31, [X19]
	0x036A0714 MOVZ W1, 0x1
	0x036A0718 LDR X5, [X8]
	0x036A071C MOVZ W2, 0x1
	0x036A0720 STR X31, [X19 + 0x10]
	0x036A0724 MOV X0, X19
	0x036A0728 MOV X4, X31
	0x036A072C LDP X20, X19, [X31 + 0x40]
	0x036A0730 LDP X22, X21, [X31 + 0x30]
	0x036A0734 LDP X24, X23, [X31 + 0x20]
	0x036A0738 LDP X30, X25, [X31 + 0x10]
	0x036A073C ADD X31, X31, 0x50
	0x036A0740 B 0x27C82B4
	0x036A0744 ADRP X8, 0xA9E000
	0x036A0748 LDR X8, [X8 + 0x998]
	0x036A074C STP X31, X31, [X19]
	0x036A0750 MOVZ W2, 0x1
	0x036A0754 STR X31, [X19 + 0x10]
	0x036A0758 LDR X5, [X8]
	0x036A075C MOV X0, X19
	0x036A0760 MOV W1, W31
	0x036A0764 B 0x36A06DC
	0x036A0768 BL 0x1C16F20
	0x036A076C STR X30, [X31 - 0x20]!
	0x036A0770 STP X20, X19, [X31 + 0x10]
	0x036A0774 ADRP X20, 0xD40000
	0x036A0778 LDRB W8, [X20 + 0x8D8]
	0x036A077C MOV X19, X0
	0x036A0780 TBNZ X8, 0x0, 0x36A07A4
	0x036A0784 ADRP X0, 0xA8E000
	0x036A0788 LDR X0, [X0 + 0x7D0]
	0x036A078C BL 0x1C16CF4
	0x036A0790 ADRP X0, 0xA9A000
	0x036A0794 LDR X0, [X0 + 0xAB0]
	0x036A0798 BL 0x1C16CF4
	0x036A079C MOVZ W8, 0x1
	0x036A07A0 STRB W8, [X20 + 0x8D8]
	0x036A07A4 LDR X8, [X19]
	0x036A07A8 STRB W31, [X19 + 0x9]
	0x036A07AC STR W31, [X19 + 0xC]
	0x036A07B0 CBZ X8, 0x36A07EC
	0x036A07B4 LDR X0, [X8 + 0x78]
	0x036A07B8 CBZ X0, 0x36A07EC
	0x036A07BC LDRB W8, [X19 + 0x8]
	0x036A07C0 ADRP X9, 0xA8E000
	0x036A07C4 ADRP X10, 0xA9A000
	0x036A07C8 LDR X9, [X9 + 0x7D0]
	0x036A07CC LDR X10, [X10 + 0xAB0]
	0x036A07D0 CMP W8, 0x0
	0x036A07D4 LDP X20, X19, [X31 + 0x10]
	0x036A07D8 MOV X2, X31
	0x036A07DC CSEL X8, X9, X10, EQ
	0x036A07E0 LDR X1, [X8]
	0x036A07E4 LDR X30, [X31], #0x20
	0x036A07E8 B 0x36806B8
	0x036A07EC BL 0x1C16F20
	0x036A07F0 SUB X31, X31, 0x60
	0x036A07F4 STP X30, X21, [X31 + 0x40]
	0x036A07F8 STP X20, X19, [X31 + 0x50]
	0x036A07FC ADRP X21, 0xD40000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xD41000
	008 Move W8, [X20+2256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xA9F000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0xA9F000
	018 Move X0, [X0+288]
	019 Call 0x1C17CF4
	020 Move X0, 0xA8F000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move X0, 0xA9B000
	024 Move X0, [X0+2736]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2256], W8
	028 Move X20, [X19+192]
	029 Compare X20, 0
	030 JumpIfEqual {61}
	031 Move X22, 0xA9F000
	032 Move X8, [X20]
	033 Move X22, [X22+288]
	034 Move X21, [X19+40]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X22]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 1
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 1
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move X1, X21
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {62}
	061 Move W21, 1
	062 Move X8, [X19+104]
	063 Compare X8, 0
	064 JumpIfEqual {119}
	065 Move W21, W31
	066 Move X20, [X19+104]
	067 Move X8, 0xA9F000
	068 Move X8, [X8+1432]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X19
	075 Move X1, X20
	076 Call AuthenticationManager.PreAuthenticate, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {112}
	079 Move X20, X0
	080 Move X0, [X19+120]
	081 Compare X0, 0
	082 JumpIfEqual {146}
	083 Move X22, 0xA9B000
	084 Move X22, [X22+2736]
	085 Move X2, X31
	086 Move X1, [X22]
	087 Call WebHeaderCollection.RemoveInternal, X0, X1
	088 Move X0, [X19+120]
	089 Compare X0, 0
	090 JumpIfEqual {146}
	091 Move X23, 0xA8F000
	092 Move X23, [X23+2000]
	093 Move X2, X31
	094 Move X1, [X23]
	095 Call WebHeaderCollection.RemoveInternal, X0, X1
	096 Move TEMP, X21
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {103}
	100 Move X8, [X19+104]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Move X0, [X19+120]
	104 Compare X0, 0
	105 JumpIfEqual {146}
	106 Move X1, [X23]
	107 Move X2, [X20+16]
	108 Move X3, X31
	109 Call NameValueCollection.set_Item, X0, X1, X2
	110 Move W8, 1
	111 Move [X19+162], W8
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Move X23, [X31+56]
	118 Return 
	119 Move X20, [X19+192]
	120 Compare X20, 0
	121 JumpIfEqual {146}
	122 Move X8, [X20]
	123 Move X1, [X22]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move W2, 2
	134 Move X0, X20
	135 Call 0x1C5D788
	136 Move W9, [X10]
	137 Add W9, W9, 2
	138 Add X8, X8, W9
	139 Add X0, X8, 312
	140 Move X8, [X0]
	141 Move X1, [X0+8]
	142 Move X0, X20
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X20, X0
	145 Move W21, W31
	146 Call 0x1C17F20

Method: System.Byte[] GetRequestHeaders()

Disassembly:
	0x036A0800 ADRP X20, 0xA9E000
	0x036A0804 LDRB W8, [X21 + 0x8D5]
	0x036A0808 LDR X20, [X20 + 0x9B0]
	0x036A080C MOV X19, X0
	0x036A0810 TBNZ X8, 0x0, 0x36A084C
	0x036A0814 ADRP X0, 0xA9E000
	0x036A0818 LDR X0, [X0 + 0x9B8]
	0x036A081C BL 0x1C16CF4
	0x036A0820 ADRP X0, 0xA9E000
	0x036A0824 LDR X0, [X0 + 0x9C0]
	0x036A0828 BL 0x1C16CF4
	0x036A082C ADRP X0, 0xA9E000
	0x036A0830 LDR X0, [X0 + 0x9C8]
	0x036A0834 BL 0x1C16CF4
	0x036A0838 ADRP X0, 0xA9E000
	0x036A083C LDR X0, [X0 + 0x9B0]
	0x036A0840 BL 0x1C16CF4
	0x036A0844 MOVZ W8, 0x1
	0x036A0848 STRB W8, [X21 + 0x8D5]
	0x036A084C LDR X0, [X20]
	0x036A0850 MOVI V0.2D, 0x0
	0x036A0854 STP V0, V0, [X31 + 0x20]
	0x036A0858 STP V0, V0, [X31]
	0x036A085C STR X19, [X31 + 0x20]
	0x036A0860 ADRP X19, 0xA9E000
	0x036A0864 ADRP X21, 0xA9E000
	0x036A0868 ADRP X20, 0xA9E000
	0x036A086C LDR W8, [X0 + 0xE0]
	0x036A0870 LDR X19, [X19 + 0x9B8]
	0x036A0874 LDR X21, [X21 + 0x9C0]
	0x036A0878 LDR X20, [X20 + 0x9C8]
	0x036A087C CBNZ W8, 0x36A0884
	0x036A0880 BL 0x1C16DFC
	0x036A0884 LDR X0, [X19]
	0x036A0888 ADD X8, X31, 0x0
	0x036A088C ORR X19, X8, 0xF
	0x036A0890 MOV X8, X19
	0x036A0894 BL 0x263221C
	0x036A0898 LDR X2, [X21]
	0x036A089C MOVN W8, 0x0
	0x036A08A0 ADD X1, X31, 0x0
	0x036A08A4 MOV X0, X19
	0x036A08A8 STR W8, [X31]
	0x036A08AC BL 0x1FCFF14
	0x036A08B0 LDR X1, [X20]
	0x036A08B4 MOV X0, X19
	0x036A08B8 BL 0x2632230
	0x036A08BC LDP X20, X19, [X31 + 0x50]
	0x036A08C0 LDP X30, X21, [X31 + 0x40]
	0x036A08C4 ADD X31, X31, 0x60
	0x036A08C8 RET
	0x036A08CC STR X30, [X31 - 0x20]!
	0x036A08D0 STP X20, X19, [X31 + 0x10]
	0x036A08D4 ADRP X19, 0xD40000
	0x036A08D8 ADRP X20, 0xA9E000
	0x036A08DC LDRB W8, [X19 + 0x8D6]
	0x036A08E0 LDR X20, [X20 + 0x9D0]
	0x036A08E4 TBNZ X8, 0x0, 0x36A08FC
	0x036A08E8 ADRP X0, 0xA9E000
	0x036A08EC LDR X0, [X0 + 0x9D0]
	0x036A08F0 BL 0x1C16CF4
	0x036A08F4 MOVZ W8, 0x1
	0x036A08F8 STRB W8, [X19 + 0x8D6]
	0x036A08FC LDR X0, [X20]
	0x036A0900 BL 0x1C16D9C
	0x036A0904 LDRB W0, [X0 + 0x9]
	0x036A0908 RET
	0x036A090C LDR W0, [X0 + 0xC]
	0x036A0910 RET
	0x036A0914 LDRB W8, [X0 + 0x9]
	0x036A0918 CBZ W8, 0x36A092C
	0x036A091C LDR W8, [X0 + 0xC]
	0x036A0920 CMP W8, 0x0
	0x036A0924 CSET W0, NE
	0x036A0928 RET
	0x036A092C MOV W0, W31
	0x036A0930 RET
	0x036A0934 SUB X31, X31, 0x50
	0x036A0938 STP X30, X25, [X31 + 0x10]
	0x036A093C STP X24, X23, [X31 + 0x20]
	0x036A0940 STP X22, X21, [X31 + 0x30]
	0x036A0944 STP X20, X19, [X31 + 0x40]
	0x036A0948 ADRP X25, 0xD40000
	0x036A094C ADRP X20, 0xA9E000
	0x036A0950 ADRP X21, 0xA53000
	0x036A0954 ADRP X24, 0xA9E000
	0x036A0958 ADRP X22, 0xA53000
	0x036A095C ADRP X23, 0xA9E000
	0x036A0960 LDRB W8, [X25 + 0x8D9]
	0x036A0964 LDR X20, [X20 + 0x9D8]
	0x036A0968 LDR X21, [X21 + 0x988]
	0x036A096C LDR X24, [X24 + 0x9E0]
	0x036A0970 LDR X22, [X22 + 0xB58]
	0x036A0974 LDR X23, [X23 + 0x9E8]
	0x036A0978 MOV X19, X0
	0x036A097C TBNZ X8, 0x0, 0x36A09C4
	0x036A0980 ADRP X0, 0xA53000
	0x036A0984 LDR X0, [X0 + 0xB58]
	0x036A0988 BL 0x1C16CF4
	0x036A098C ADRP X0, 0xA9E000
	0x036A0990 LDR X0, [X0 + 0x9E8]
	0x036A0994 BL 0x1C16CF4
	0x036A0998 ADRP X0, 0xA9E000
	0x036A099C LDR X0, [X0 + 0x9E0]
	0x036A09A0 BL 0x1C16CF4
	0x036A09A4 ADRP X0, 0xA9E000
	0x036A09A8 LDR X0, [X0 + 0x9D8]
	0x036A09AC BL 0x1C16CF4
	0x036A09B0 ADRP X0, 0xA53000
	0x036A09B4 LDR X0, [X0 + 0x988]
	0x036A09B8 BL 0x1C16CF4
	0x036A09BC MOVZ W8, 0x1
	0x036A09C0 STRB W8, [X25 + 0x8D9]
	0x036A09C4 LDRB W8, [X19 + 0x8]
	0x036A09C8 LDRB W9, [X19 + 0x9]
	0x036A09CC LDR X0, [X22]
	0x036A09D0 LDR X20, [X20]
	0x036A09D4 CMP W8, 0x0
	0x036A09D8 CSEL X8, X21, X24, EQ
	0x036A09DC LDR X21, [X8]
	0x036A09E0 ADD X1, X31, 0xC
	0x036A09E4 STRB W9, [X31 + 0xC]
	0x036A09E8 BL 0x1C16E04
	0x036A09EC MOV X22, X0
	0x036A09F0 LDR W8, [X19 + 0xC]
	0x036A09F4 LDR X0, [X23]
	0x036A09F8 ADD X1, X31, 0x8
	0x036A09FC STR W8, [X31 + 0x8]
	0x036A0A00 BL 0x1C16E04
	0x036A0A04 MOV X3, X0
	0x036A0A08 MOV X0, X20
	0x036A0A0C MOV X1, X21
	0x036A0A10 MOV X2, X22
	0x036A0A14 MOV X4, X31
	0x036A0A18 BL 0x3227C18
	0x036A0A1C LDP X20, X19, [X31 + 0x40]
	0x036A0A20 LDP X22, X21, [X31 + 0x30]
	0x036A0A24 LDP X24, X23, [X31 + 0x20]
	0x036A0A28 LDP X30, X25, [X31 + 0x10]
	0x036A0A2C ADD X31, X31, 0x50
	0x036A0A30 RET
	0x036A0A34 SUB X31, X31, 0xD0
	0x036A0A38 STR X30, [X31 + 0x70]
	0x036A0A3C STP X28, X27, [X31 + 0x80]
	0x036A0A40 STP X26, X25, [X31 + 0x90]
	0x036A0A44 STP X24, X23, [X31 + 0xA0]
	0x036A0A48 STP X22, X21, [X31 + 0xB0]
	0x036A0A4C STP X20, X19, [X31 + 0xC0]
	0x036A0A50 ADRP X20, 0xD40000
	0x036A0A54 LDRB W8, [X20 + 0x8DA]
	0x036A0A58 MOV X19, X0
	0x036A0A5C TBNZ X8, 0x0, 0x36A0B70
	0x036A0A60 ADRP X0, 0xA9E000
	0x036A0A64 LDR X0, [X0 + 0x9F0]
	0x036A0A68 BL 0x1C16CF4
	0x036A0A6C ADRP X0, 0xA9E000
	0x036A0A70 LDR X0, [X0 + 0x9F8]
	0x036A0A74 BL 0x1C16CF4
	0x036A0A78 ADRP X0, 0xA9E000
	0x036A0A7C LDR X0, [X0 + 0xA00]
	0x036A0A80 BL 0x1C16CF4
	0x036A0A84 ADRP X0, 0xA9E000
	0x036A0A88 LDR X0, [X0 + 0xA08]
	0x036A0A8C BL 0x1C16CF4
	0x036A0A90 ADRP X0, 0xA9E000
	0x036A0A94 LDR X0, [X0 + 0xA10]
	0x036A0A98 BL 0x1C16CF4
	0x036A0A9C ADRP X0, 0xA9E000
	0x036A0AA0 LDR X0, [X0 + 0x888]
	0x036A0AA4 BL 0x1C16CF4
	0x036A0AA8 ADRP X0, 0xA5B000
	0x036A0AAC LDR X0, [X0 + 0x7D8]
	0x036A0AB0 BL 0x1C16CF4
	0x036A0AB4 ADRP X0, 0xA9E000
	0x036A0AB8 LDR X0, [X0 + 0xA18]
	0x036A0ABC BL 0x1C16CF4
	0x036A0AC0 ADRP X0, 0xA9E000
	0x036A0AC4 LDR X0, [X0 + 0xA20]
	0x036A0AC8 BL 0x1C16CF4
	0x036A0ACC ADRP X0, 0xA9E000
	0x036A0AD0 LDR X0, [X0 + 0xA28]
	0x036A0AD4 BL 0x1C16CF4
	0x036A0AD8 ADRP X0, 0xA9E000
	0x036A0ADC LDR X0, [X0 + 0xA30]
	0x036A0AE0 BL 0x1C16CF4
	0x036A0AE4 ADRP X0, 0xA9E000
	0x036A0AE8 LDR X0, [X0 + 0xA38]
	0x036A0AEC BL 0x1C16CF4
	0x036A0AF0 ADRP X0, 0xA9E000
	0x036A0AF4 LDR X0, [X0 + 0xA40]
	0x036A0AF8 BL 0x1C16CF4
	0x036A0AFC ADRP X0, 0xA9E000
	0x036A0B00 LDR X0, [X0 + 0xA48]
	0x036A0B04 BL 0x1C16CF4
	0x036A0B08 ADRP X0, 0xA9E000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD41000
	009 Move X21, 0xA54000
	010 Move W8, [X20+2257]
	011 Move X21, [X21+2288]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xA54000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0xA54000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xA54000
	024 Move X0, [X0+2288]
	025 Call 0x1C17CF4
	026 Move X0, 0xA9F000
	027 Move X0, [X0+2400]
	028 Call 0x1C17CF4
	029 Move X0, 0xA9F000
	030 Move X0, [X0+2408]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2257], W8
	034 Move X0, [X21]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X20, X0
	038 Call StringBuilder..ctor, X0
	039 Move X8, [X19+208]
	040 Compare X8, 0
	041 JumpIfEqual {229}
	042 Move W9, [X8+48]
	043 Move X0, [X19+40]
	044 Compare W9, 0
	045 JumpIfEqual {72}
	046 Compare X0, 0
	047 JumpIfEqual {229}
	048 Move W8, [X8+50]
	049 Compare W8, 0
	050 JumpIfNotEqual {74}
	051 Move X1, X31
	052 Call Uri.get_Scheme, X0
	053 Move X21, X0
	054 Move X0, X19
	055 Call HttpWebRequest.get_Host, X0
	056 Move X8, [X19+40]
	057 Compare X8, 0
	058 JumpIfEqual {229}
	059 Move X22, X0
	060 Move X0, X8
	061 Move X1, X31
	062 Call Uri.get_PathAndQuery, X0
	063 Move X8, 0xA9F000
	064 Move X8, [X8+2400]
	065 Move X3, X0
	066 Move X1, X21
	067 Move X2, X22
	068 Move X8, [X8]
	069 Move X4, X31
	070 Move X0, X8
	071 Call String.Format, X0, X1, X2, X3
	072 Compare X0, 0
	073 JumpIfEqual {229}
	074 Move X1, X31
	075 Call Uri.get_PathAndQuery, X0
	076 Move W8, [X19+176]
	077 Move X21, X0
	078 Compare W8, 0
	079 JumpIfNotEqual {115}
	080 Move X0, [X19+208]
	081 Compare X0, 0
	082 JumpIfEqual {229}
	083 Move X8, [X0]
	084 Move X9, [X8+376]
	085 Move X1, [X8+384]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X1, X31
	088 Move X2, X31
	089 Call Version.op_Inequality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {115}
	094 Move X0, [X19+208]
	095 Compare X0, 0
	096 JumpIfEqual {229}
	097 Move X8, [X0]
	098 Move X9, [X8+376]
	099 Move X1, [X8+384]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X1, [X19+168]
	102 Move X2, X31
	103 Call Version.op_LessThan, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {115}
	108 Move X0, [X19+208]
	109 Compare X0, 0
	110 JumpIfEqual {229}
	111 Move X8, [X0]
	112 Move X9, [X8+376]
	113 Move X1, [X8+384]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X0, [X19+168]
	116 Move X8, 0xA54000
	117 Move X8, [X8+2512]
	118 Move [X19+184], X0
	119 Move W1, 4
	120 Move X0, [X8]
	121 Call 0x1C17D6C
	122 Compare X0, 0
	123 JumpIfEqual {229}
	124 Move X23, [X19+144]
	125 Move X22, X0
	126 Compare X23, 0
	127 JumpIfEqual {134}
	128 Move X8, [X22]
	129 Move X0, X23
	130 Move X1, [X8+64]
	131 Call 0x1C17E00
	132 Compare X0, 0
	133 JumpIfEqual {231}
	134 Move W8, [X22+24]
	135 Compare W8, 0
	136 JumpIfEqual {230}
	137 Move [X22+32], X23
	138 Compare X21, 0
	139 JumpIfEqual {147}
	140 Move X8, [X22]
	141 Move X0, X21
	142 Move X1, [X8+64]
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {231}
	146 Move W8, [X22+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X22+40], X21
	149 Move X8, [X19+184]
	150 Compare X8, 0
	151 JumpIfEqual {229}
	152 Move X23, 0xA54000
	153 Move X23, [X23+1880]
	154 Move W8, [X8+16]
	155 Add X1, X31, 12
	156 Move X0, [X23]
	157 Move [X31+12], W8
	158 Call 0x1C17E04
	159 Move X21, X0
	160 Compare X0, 0
	161 JumpIfEqual {168}
	162 Move X8, [X22]
	163 Move X0, X21
	164 Move X1, [X8+64]
	165 Call 0x1C17E00
	166 Compare X0, 0
	167 JumpIfEqual {231}
	168 Move W8, [X22+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X22+48], X21
	171 Move X8, [X19+184]
	172 Compare X8, 0
	173 JumpIfEqual {229}
	174 Move W8, [X8+20]
	175 Move X0, [X23]
	176 Add X1, X31, 8
	177 Move [X31+8], W8
	178 Call 0x1C17E04
	179 Move X21, X0
	180 Compare X0, 0
	181 JumpIfEqual {188}
	182 Move X8, [X22]
	183 Move X0, X21
	184 Move X1, [X8+64]
	185 Call 0x1C17E00
	186 Compare X0, 0
	187 JumpIfEqual {231}
	188 Move W8, [X22+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X22+56], X21
	191 Compare X20, 0
	192 JumpIfEqual {229}
	193 Move X8, 0xA9F000
	194 Move X8, [X8+2408]
	195 Move X0, X20
	196 Move X2, X22
	197 Move X3, X31
	198 Move X1, [X8]
	199 Call StringBuilder.AppendFormat, X0, X1, X2
	200 Move X0, X19
	201 Call HttpWebRequest.GetHeaders, X0
	202 Move X1, X0
	203 Move X0, X20
	204 Move X2, X31
	205 Call StringBuilder.Append, X0, X1
	206 Move X8, [X20]
	207 Move X0, X20
	208 Move X9, [X8+360]
	209 Move X1, [X8+368]
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X19, X0
	212 Move X0, X31
	213 Call Encoding.get_UTF8
	214 Compare X0, 0
	215 JumpIfEqual {229}
	216 Move X8, [X0]
	217 Move X1, X19
	218 Move X9, [X8+616]
	219 Move X2, [X8+624]
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move X20, [X31+48]
	222 Move X19, [X31+56]
	223 Move X22, [X31+32]
	224 Move X21, [X31+40]
	225 Move X30, [X31+16]
	226 Move X23, [X31+24]
	227 Add X31, X31, 64
	228 Return X0
	229 Call 0x1C17F20
	230 Call 0x1C17F28
	231 Call 0x1C17F44
	232 Move X1, X31
	233 Call 0x1C17DEC

Method: System.ValueTuple`2<System.Net.WebOperation, System.Boolean> HandleNtlmAuth(System.Net.WebResponseStream stream, System.Net.HttpWebResponse response, System.Net.BufferOffsetSize writeBuffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036A0B0C LDR X0, [X0 + 0xA50]
	0x036A0B10 BL 0x1C16CF4
	0x036A0B14 ADRP X0, 0xA9E000
	0x036A0B18 LDR X0, [X0 + 0xA58]
	0x036A0B1C BL 0x1C16CF4
	0x036A0B20 ADRP X0, 0xA9E000
	0x036A0B24 LDR X0, [X0 + 0xA60]
	0x036A0B28 BL 0x1C16CF4
	0x036A0B2C ADRP X0, 0xA9E000
	0x036A0B30 LDR X0, [X0 + 0xA68]
	0x036A0B34 BL 0x1C16CF4
	0x036A0B38 ADRP X0, 0xA9E000
	0x036A0B3C LDR X0, [X0 + 0xA70]
	0x036A0B40 BL 0x1C16CF4
	0x036A0B44 ADRP X0, 0xA9E000
	0x036A0B48 LDR X0, [X0 + 0xA78]
	0x036A0B4C BL 0x1C16CF4
	0x036A0B50 ADRP X0, 0xA9E000
	0x036A0B54 LDR X0, [X0 + 0xA80]
	0x036A0B58 BL 0x1C16CF4
	0x036A0B5C ADRP X0, 0xA9E000
	0x036A0B60 LDR X0, [X0 + 0xA88]
	0x036A0B64 BL 0x1C16CF4
	0x036A0B68 MOVZ W8, 0x1
	0x036A0B6C STRB W8, [X20 + 0x8DA]
	0x036A0B70 STRB W31, [X31 + 0x7C]
	0x036A0B74 STP X31, X31, [X31 + 0x60]
	0x036A0B78 STP X31, X31, [X31 + 0x50]
	0x036A0B7C STR X31, [X31 + 0x48]
	0x036A0B80 STP X31, X31, [X31 + 0x30]
	0x036A0B84 LDR W26, [X19]
	0x036A0B88 LDR X20, [X19 + 0x20]
	0x036A0B8C CMP W26, 0x4
	0x036A0B90 B.CC 0x36A0BA8
	0x036A0B94 CMP W26, 0x4
	0x036A0B98 B.NE 0x36A0BB4
	0x036A0B9C MOV X27, X31
	0x036A0BA0 MOV X21, X31
	0x036A0BA4 B 0x36A0E28
	0x036A0BA8 MOV X27, X31
	0x036A0BAC MOV X21, X31
	0x036A0BB0 B 0x36A0F6C
	0x036A0BB4 CBZ X20, 0x36A0D44
	0x036A0BB8 ADD X0, X20, 0x100
	0x036A0BBC MOV W1, W31
	0x036A0BC0 MOV W2, W31
	0x036A0BC4 MOV X3, X31
	0x036A0BC8 BL 0x33E7AB4
	0x036A0BCC CMP W0, 0x1
	0x036A0BD0 B.EQ 0x36A0D48
	0x036A0BD4 ADRP X8, 0xA9E000
	0x036A0BD8 LDR X8, [X8 + 0xA88]
	0x036A0BDC LDR X0, [X8]
	0x036A0BE0 BL 0x1C16F10
	0x036A0BE4 MOV X21, X0
	0x036A0BE8 MOV X1, X31
	0x036A0BEC BL 0x36A97D4
	0x036A0BF0 STR X21, [X19 + 0x30]
	0x036A0BF4 LDR X24, [X20 + 0x110]
	0x036A0BF8 STRB W31, [X31 + 0x7C]
	0x036A0BFC ADD X1, X31, 0x7C
	0x036A0C00 MOV X0, X24
	0x036A0C04 MOV X2, X31
	0x036A0C08 BL 0x33DE64C
	0x036A0C0C MOVZ W8, 0x1
	0x036A0C10 STRB W8, [X20 + 0x10D]
	0x036A0C14 LDR X1, [X19 + 0x30]
	0x036A0C18 ADD X0, X20, 0xF0
	0x036A0C1C MOV X2, X31
	0x036A0C20 BL 0x1C24138
	0x036A0C24 MOV X21, X0
	0x036A0C28 CBZ X0, 0x36A0C80
	0x036A0C2C ADRP X8, 0xA9E000
	0x036A0C30 LDR X8, [X8 + 0xA70]
	0x036A0C34 LDR X1, [X8]
	0x036A0C38 MOV X0, X21
	0x036A0C3C BL 0x2850F8C
	0x036A0C40 LDRB W8, [X20 + 0x70]
	0x036A0C44 CBZ W8, 0x36A0CFC
	0x036A0C48 ADRP X8, 0xA9E000
	0x036A0C4C LDR X8, [X8 + 0xA80]
	0x036A0C50 LDR X1, [X8]
	0x036A0C54 MOV X0, X21
	0x036A0C58 BL 0x2850C38
	0x036A0C5C CBZ X0, 0x36A0D88
	0x036A0C60 MOV X1, X31
	0x036A0C64 BL 0x33ED11C
	0x036A0C68 TBZ X0, 0x0, 0x36A0CFC
	0x036A0C6C LDR X21, [X20 + 0xE8]
	0x036A0C70 MOV X25, X31
	0x036A0C74 MOVZ W22, 0x9
	0x036A0C78 TBNZ X26, 0x1F, 0x36A0CC8
	0x036A0C7C B 0x36A0CDC
	0x036A0C80 LDR X0, [X20 + 0xF8]
	0x036A0C84 STR X0, [X19 + 0x38]
	0x036A0C88 CBZ X0, 0x36A0C98
	0x036A0C8C MOV X1, X31
	0x036A0C90 BL 0x36B08A0
	0x036A0C94 STR X0, [X20 + 0xE0]
	0x036A0C98 LDR X8, [X20 + 0x90]
	0x036A0C9C STR X8, [X20 + 0x98]
	0x036A0CA0 LDR X3, [X19 + 0x28]
	0x036A0CA4 MOV X0, X20
	0x036A0CA8 MOV W1, W31
	0x036A0CAC MOV X2, X31
	0x036A0CB0 BL 0x369D68C
	0x036A0CB4 MOV X25, X31
	0x036A0CB8 MOV X21, X31
	0x036A0CBC STR X0, [X19 + 0x38]
	0x036A0CC0 MOVZ W22, 0xD
	0x036A0CC4 TBZ X26, 0x1F, 0x36A0CDC
	0x036A0CC8 LDRB W8, [X31 + 0x7C]
	0x036A0CCC CBZ W8, 0x36A0CDC
	0x036A0CD0 MOV X0, X24
	0x036A0CD4 MOV X1, X31
	0x036A0CD8 BL 0x33E14E4
	0x036A0CDC CBNZ X25, 0x36A0D80
	0x036A0CE0 CMP W22, 0xD
	0x036A0CE4 MOV X27, X31
	0x036A0CE8 B.EQ 0x36A0F5C
	0x036A0CEC CMP W22, 0x9
	0x036A0CF0 B.EQ 0x36A1370
	0x036A0CF4 CBZ W22, 0x36A0F5C
	0x036A0CF8 B 0x36A1404
	0x036A0CFC ADRP X0, 0xA53000
	0x036A0D00 LDR X0, [X0 + 0x5B0]
	0x036A0D04 BL 0x1C16D08
	0x036A0D08 BL 0x1C16F10
	0x036A0D0C MOV X21, X0
	0x036A0D10 ADRP X0, 0xA9E000
	0x036A0D14 LDR X0, [X0 + 0xA90]
	0x036A0D18 BL 0x1C16D08
	0x036A0D1C MOV X1, X0
	0x036A0D20 MOV X0, X21
	0x036A0D24 MOV X2, X31
	0x036A0D28 BL 0x337DF1C
	0x036A0D2C ADRP X0, 0xA9E000
	0x036A0D30 LDR X0, [X0 + 0xA98]
	0x036A0D34 BL 0x1C16D08
	0x036A0D38 MOV X1, X0
	0x036A0D3C MOV X0, X21
	0x036A0D40 BL 0x1C16DEC
	0x036A0D44 BL 0x1C16F20
	0x036A0D48 ADRP X0, 0xA7B000
	0x036A0D4C LDR X0, [X0 + 0xB88]
	0x036A0D50 BL 0x1C16D08
	0x036A0D54 LDR W8, [X0 + 0xE0]
	0x036A0D58 CBNZ W8, 0x36A0D60
	0x036A0D5C BL 0x1C16DFC
	0x036A0D60 BL 0x369DDA0
	0x036A0D64 MOV X20, X0
	0x036A0D68 ADRP X0, 0xA9E000
	0x036A0D6C LDR X0, [X0 + 0xA98]
	0x036A0D70 BL 0x1C16D08
	0x036A0D74 MOV X1, X0
	0x036A0D78 MOV X0, X20
	0x036A0D7C BL 0x1C16DEC
	0x036A0D80 MOV X0, X25
	0x036A0D84 BL 0x1C16F18
	0x036A0D88 BL 0x1C16F20
	0x036A0D8C B 0x36A0DB8
	0x036A0D90 B 0x36A0DB8
	0x036A0D94 B 0x36A16D4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xD41000
	013 Move W8, [X22+2258]
	014 Move X23, X4
	015 Move X24, X3
	016 Move X21, X2
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0xA9A000
	024 Move X0, [X0+2088]
	025 Call 0x1C17CF4
	026 Move X0, 0xA9F000
	027 Move X0, [X0+288]
	028 Call 0x1C17CF4
	029 Move X0, 0xA9F000
	030 Move X0, [X0+2416]
	031 Call 0x1C17CF4
	032 Move X0, 0xA9F000
	033 Move X0, [X0+2080]
	034 Call 0x1C17CF4
	035 Move X0, 0xA84000
	036 Move X0, [X0+2640]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2258], W8
	040 Compare X21, 0
	041 JumpIfEqual {181}
	042 Move X8, [X21]
	043 Move X26, 0xA9F000
	044 Move X0, X21
	045 Move X9, [X8+552]
	046 Move X1, [X8+560]
	047 Move X26, [X26+2416]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, 348
	051 Move W9, 364
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Move W8, [X19]
	054 Compare W8, 0
	055 JumpIfEqual {62}
	056 Move W8, [X19+348]
	057 Move W25, W0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, 0xA9F000
	060 Move X8, [X8+2080]
	061 Move W21, 1
	062 Move X3, [X26]
	063 Move [X31], X31
	064 Move [X31+8], X31
	065 Add X0, X31, 0
	066 Move X1, X31
	067 Move W2, W31
	068 Move W9, [X19+364]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move X0, [X8]
	072 Call 0x1C17F10
	073 Move X1, X19
	074 Move X2, X24
	075 Move W3, W21
	076 Move X4, X23
	077 Move X5, X31
	078 Move X22, X0
	079 Call WebOperation..ctor, X0, X1, X2, X3, X4
	080 Compare X20, 0
	081 JumpIfEqual {181}
	082 Move X0, [X20+80]
	083 Compare X0, 0
	084 JumpIfEqual {181}
	085 Move X1, X22
	086 Move X2, X31
	087 Call WebOperation.SetPriorityRequest, X0, X1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X23, [X19+192]
	090 Compare X23, 0
	091 JumpIfEqual {108}
	092 Move X10, 0xA9F000
	093 Move X8, [X23]
	094 Move X10, [X10+288]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X1, [X10]
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move W2, 2
	106 Move X0, X23
	107 Call 0x1C5D788
	108 Move X23, [X19+104]
	109 Compare X23, 0
	110 JumpIfNotEqual {122}
	111 Move W9, [X10]
	112 Add W9, W9, 2
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X23
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X23, X0
	120 Compare X23, 0
	121 JumpIfEqual {160}
	122 Move X9, 0xA9A000
	123 Move X27, [X20+72]
	124 Move X24, [X19+32]
	125 Move X8, [X23]
	126 Move X9, [X9+2088]
	127 Move X10, 0xA84000
	128 Move X1, [X9]
	129 Move X10, [X10+2640]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move X25, [X10]
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X23
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X3, [X0+8]
	148 Move X0, X23
	149 Move X1, X24
	150 Move X2, X25
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Compare X27, 0
	153 JumpIfEqual {181}
	154 Move [X27+16], X0
	155 Move X8, [X20+72]
	156 Compare X8, 0
	157 JumpIfEqual {181}
	158 Move W9, [X19+377]
	159 Move [X8+25], W9
	160 Move X3, [X26]
	161 Add X0, X31, 0
	162 Move X1, X22
	163 Move W2, W21
	164 Move [X31], X31
	165 Move [X31+8], X31
	166 Call ValueTuple`2<Object, Boolean>..ctor, X0, X1, X2
	167 Move X0, [X31]
	168 Move X1, [X31+8]
	169 Move X20, [X31+80]
	170 Move X19, [X31+88]
	171 Move X22, [X31+64]
	172 Move X21, [X31+72]
	173 Move X24, [X31+48]
	174 Move X23, [X31+56]
	175 Move X26, [X31+32]
	176 Move X25, [X31+40]
	177 Move X30, [X31+16]
	178 Move X27, [X31+24]
	179 Add X31, X31, 96
	180 Return X0
	181 Call 0x1C17F20

Method: System.Boolean CheckAuthorization(System.Net.WebResponse response, System.Net.HttpStatusCode code)

Disassembly:
	0x036A0D98 B 0x36A0DB8
	0x036A0D9C B 0x36A0DB8
	0x036A0DA0 B 0x36A16D4
	0x036A0DA4 B 0x36A0DB8
	0x036A0DA8 B 0x36A0DB8
	0x036A0DAC B 0x36A16D4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Add X0, X0, 352
	003 Add X0, X0, 336

Method: System.ValueTuple`2<System.Threading.Tasks.Task`1<System.Net.BufferOffsetSize>, System.Net.WebException> GetRewriteHandler(System.Net.HttpWebResponse response, System.Boolean redirect)

Disassembly:
	0x036A10C8 CBZ X0, 0x36A1494
	0x036A10CC ADRP X8, 0xA9D000
	0x036A10D0 LDR X8, [X8 + 0xA68]
	0x036A10D4 LDR X1, [X8]
	0x036A10D8 BL 0x269F5D0
	0x036A10DC ADRP X8, 0xA9D000
	0x036A10E0 LDR X8, [X8 + 0xA50]
	0x036A10E4 STR X0, [X31 + 0x48]
	0x036A10E8 LDR X1, [X8]
	0x036A10EC ADD X0, X31, 0x48
	0x036A10F0 BL 0x2677430
	0x036A10F4 TBZ X0, 0x0, 0x36A1234
	0x036A10F8 ADRP X8, 0xA9D000
	0x036A10FC LDR X8, [X8 + 0xA48]
	0x036A1100 ADD X0, X31, 0x48
	0x036A1104 LDR X1, [X8]
	0x036A1108 BL 0x2677474
	0x036A110C MOV X1, X0
	0x036A1110 STR X1, [X19 + 0x50]
	0x036A1114 CBZ X20, 0x36A1488
	0x036A1118 LDR X2, [X19 + 0x28]
	0x036A111C MOV X0, X20
	0x036A1120 BL 0x369E244
	0x036A1124 CBZ X0, 0x36A148C
	0x036A1128 ADRP X8, 0xA9D000
	0x036A112C LDR X8, [X8 + 0xA58]
	0x036A1130 LDR X2, [X8]
	0x036A1134 MOV W1, W31
	0x036A1138 BL 0x2698EDC
	0x036A113C ADRP X8, 0xA9D000
	0x036A1140 LDR X8, [X8 + 0xA38]
	0x036A1144 STP X0, X1, [X31 + 0x30]
	0x036A1148 LDR X8, [X8]
	0x036A114C ADD X0, X31, 0x30
	0x036A1150 MOV X1, X8
	0x036A1154 BL 0x2998594
	0x036A1158 TBZ X0, 0x0, 0x36A11EC
	0x036A115C ADRP X8, 0xA9D000
	0x036A1160 LDR X8, [X8 + 0xA28]
	0x036A1164 ADD X0, X31, 0x30
	0x036A1168 LDR X1, [X8]
	0x036A116C ADD X8, X31, 0x10
	0x036A1170 BL 0x29985E0
	0x036A1174 LDR X8, [X31 + 0x10]
	0x036A1178 LDRB W9, [X31 + 0x18]
	0x036A117C LDRB W10, [X31 + 0x19]
	0x036A1180 LDP X11, X12, [X31 + 0x20]
	0x036A1184 STR X8, [X19 + 0x48]
	0x036A1188 AND W8, W9, 0x1
	0x036A118C AND W9, W10, 0x1
	0x036A1190 STRB W8, [X19 + 0x58]
	0x036A1194 STRB W9, [X19 + 0x59]
	0x036A1198 STP X12, X11, [X19 + 0x60]
	0x036A119C CBZ X20, 0x36A147C
	0x036A11A0 LDR X24, [X20 + 0x110]
	0x036A11A4 STRB W31, [X31 + 0x7C]
	0x036A11A8 ADD X1, X31, 0x7C
	0x036A11AC MOV X0, X24
	0x036A11B0 MOV X2, X31
	0x036A11B4 BL 0x33DE64C
	0x036A11B8 LDR X22, [X19 + 0x40]
	0x036A11BC CBNZ X22, 0x36A1468
	0x036A11C0 LDRB W8, [X19 + 0x58]
	0x036A11C4 CBZ W8, 0x36A130C
	0x036A11C8 STRB W31, [X20 + 0x118]
	0x036A11CC STRB W31, [X20 + 0x70]
	0x036A11D0 STR X31, [X20 + 0xE8]
	0x036A11D4 LDR X8, [X19 + 0x60]
	0x036A11D8 MOV X25, X31
	0x036A11DC MOVZ W22, 0x3
	0x036A11E0 STR X8, [X20 + 0xF8]
	0x036A11E4 TBNZ X26, 0x1F, 0x36A1344
	0x036A11E8 B 0x36A1358
	0x036A11EC MOVZ W8, 0x3
	0x036A11F0 STR W8, [X19]
	0x036A11F4 LDR V0, [X31 + 0x3]
	0x036A11F8 ADRP X8, 0xA9D000
	0x036A11FC STUR V0, [X19 + 0x98]
	0x036A1200 LDR X8, [X8 + 0x888]
	0x036A1204 LDR X0, [X8]
	0x036A1208 LDR W8, [X0 + 0xE0]
	0x036A120C CBNZ W8, 0x36A1214
	0x036A1210 BL 0x1C16DFC
	0x036A1214 ADRP X8, 0xA9D000
	0x036A1218 LDR X8, [X8 + 0xA00]
	0x036A121C ADD X0, X19, 0x8
	0x036A1220 LDR X3, [X8]
	0x036A1224 ADD X1, X31, 0x30
	0x036A1228 MOV X2, X19
	0x036A122C BL 0x1FAE5E8
	0x036A1230 B 0x36A1404
	0x036A1234 MOVZ W8, 0x2
	0x036A1238 STR W8, [X19]
	0x036A123C LDR X8, [X31 + 0x48]
	0x036A1240 STR X8, [X19 + 0x90]
	0x036A1244 ADRP X8, 0xA9D000
	0x036A1248 LDR X8, [X8 + 0x888]
	0x036A124C LDR X0, [X8]
	0x036A1250 LDR W8, [X0 + 0xE0]
	0x036A1254 CBNZ W8, 0x36A125C
	0x036A1258 BL 0x1C16DFC
	0x036A125C ADRP X8, 0xA9D000
	0x036A1260 LDR X8, [X8 + 0xA08]
	0x036A1264 ADD X0, X19, 0x8
	0x036A1268 LDR X3, [X8]
	0x036A126C ADD X1, X31, 0x48
	0x036A1270 MOV X2, X19
	0x036A1274 BL 0x1FC0B94
	0x036A1278 B 0x36A1404
	0x036A127C MOVZ W8, 0x4
	0x036A1280 STR W8, [X19]
	0x036A1284 LDR V0, [X31 + 0x5]
	0x036A1288 ADRP X8, 0xA9D000
	0x036A128C STR V0, [X19 + 0x8]
	0x036A1290 LDR X8, [X8 + 0x888]
	0x036A1294 LDR X0, [X8]
	0x036A1298 LDR W8, [X0 + 0xE0]
	0x036A129C CBNZ W8, 0x36A12A4
	0x036A12A0 BL 0x1C16DFC
	0x036A12A4 ADRP X8, 0xA9D000
	0x036A12A8 LDR X8, [X8 + 0x9F8]
	0x036A12AC ADD X0, X19, 0x8
	0x036A12B0 LDR X3, [X8]
	0x036A12B4 ADD X1, X31, 0x50
	0x036A12B8 MOV X2, X19
	0x036A12BC BL 0x1FC7208
	0x036A12C0 B 0x36A1404
	0x036A12C4 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xD40000
	008 Move W8, [X22+2259]
	009 Move W21, W2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xA9E000
	017 Move X0, [X0+2424]
	018 Call 0x1C17CF4
	019 Move X0, 0xA9E000
	020 Move X0, [X0+2432]
	021 Call 0x1C17CF4
	022 Move X0, 0xA9E000
	023 Move X0, [X0+2440]
	024 Call 0x1C17CF4
	025 Move X0, 0xA54000
	026 Move X0, [X0+1976]
	027 Call 0x1C17CF4
	028 Move X0, 0xA9E000
	029 Move X0, [X0+2448]
	030 Call 0x1C17CF4
	031 Move X0, 0xA7E000
	032 Move X0, [X0+816]
	033 Call 0x1C17CF4
	034 Move X0, 0xA9E000
	035 Move X0, [X0+2328]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+2259], W8
	039 Move TEMP, X21
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {59}
	043 Move X0, X20
	044 Call HttpWebRequest.get_MethodWithBuffer, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {87}
	049 Move X0, [X20+224]
	050 Compare X0, 0
	051 JumpIfEqual {152}
	052 Move X1, X31
	053 Call WebRequestStream.get_WriteBufferLength, X0
	054 Compare W0, 0
	055 JumpIfEqual {87}
	056 Move X8, [X20+80]
	057 Compare X8, 0
	058 JumpIfEqual {87}
	059 Move X8, [X20]
	060 Move X0, X20
	061 Move X9, [X8+808]
	062 Move X1, [X8+816]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {93}
	068 Move X0, [X20+224]
	069 Compare X0, 0
	070 JumpIfEqual {152}
	071 Move X1, X31
	072 Call WebRequestStream.GetWriteBuffer, X0
	073 Move X8, 0xA54000
	074 Move X8, [X8+1976]
	075 Move X19, X0
	076 Move X8, [X8]
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X8, 0xA9E000
	083 Move X8, [X8+2440]
	084 Move X0, X19
	085 Move X1, [X8]
	086 Call Task.FromResult, X0
	087 Move X8, 0xA9E000
	088 Move X8, [X8+2448]
	089 Move [X31], X31
	090 Move [X31+8], X31
	091 Add X0, X31, 0
	092 Move X1, X31
	093 Move X8, [X20+368]
	094 Compare X8, 0
	095 JumpIfEqual {131}
	096 Move X8, 0xA9E000
	097 Move X8, [X8+2424]
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move X8, 0xA9E000
	101 Move X8, [X8+2432]
	102 Move X1, X20
	103 Move X3, X31
	104 Move X19, X0
	105 Move X2, [X8]
	106 Call Func`1<Object>..ctor, X0, X1, X2
	107 Compare X19, 0
	108 JumpIfEqual {152}
	109 Move X8, [X19+24]
	110 Move X0, [X19+64]
	111 Move X1, [X19+40]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, 0xA9E000
	114 Move X8, [X8+2448]
	115 Move X1, X0
	116 Add X0, X31, 0
	117 Move [X31], X31
	118 Move [X31+8], X31
	119 Move X3, [X8]
	120 Move X2, X31
	121 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	122 Move X0, [X31]
	123 Move X1, [X31+8]
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X30, [X31+16]
	129 Add X31, X31, 64
	130 Return X0
	131 Move X8, 0xA7E000
	132 Move X8, [X8+816]
	133 Move X0, [X8]
	134 Call 0x1C17F10
	135 Move X8, 0xA9E000
	136 Move X8, [X8+2328]
	137 Move W3, 7
	138 Move X2, X31
	139 Move X4, X19
	140 Move X1, [X8]
	141 Move X5, X31
	142 Move X20, X0
	143 Call WebException..ctor, X0, X1, X2, X3, X4
	144 Move X8, 0xA9E000
	145 Move X8, [X8+2448]
	146 Move [X31], X31
	147 Move [X31+8], X31
	148 Add X0, X31, 0
	149 Move X1, X31
	150 Move X3, [X8]
	151 Move X2, X20
	152 Call 0x1C17F20

Method: System.ValueTuple`4<System.Boolean, System.Boolean, System.Threading.Tasks.Task`1<System.Net.BufferOffsetSize>, System.Net.WebException> CheckFinalStatus(System.Net.HttpWebResponse response)

Disassembly:
	0x036A12C8 STR W8, [X19]
	0x036A12CC LDR V0, [X31 + 0x5]
	0x036A12D0 ADRP X8, 0xA9D000
	0x036A12D4 STR V0, [X19 + 0x8]
	0x036A12D8 LDR X8, [X8 + 0x888]
	0x036A12DC LDR X0, [X8]
	0x036A12E0 LDR W8, [X0 + 0xE0]
	0x036A12E4 CBNZ W8, 0x36A12EC
	0x036A12E8 BL 0x1C16DFC
	0x036A12EC ADRP X8, 0xA9D000
	0x036A12F0 LDR X8, [X8 + 0x9F8]
	0x036A12F4 ADD X0, X19, 0x8
	0x036A12F8 LDR X3, [X8]
	0x036A12FC ADD X1, X31, 0x50
	0x036A1300 MOV X2, X19
	0x036A1304 BL 0x1FC7208
	0x036A1308 B 0x36A1404
	0x036A130C MOVZ W8, 0x1
	0x036A1310 STRB W8, [X20 + 0x70]
	0x036A1314 LDR X8, [X19 + 0x48]
	0x036A1318 STR X8, [X20 + 0xE8]
	0x036A131C LDR X0, [X19 + 0x30]
	0x036A1320 CBZ X0, 0x36A1544
	0x036A1324 ADRP X8, 0xA9D000
	0x036A1328 LDR X8, [X8 + 0xA78]
	0x036A132C LDR X1, [X8]
	0x036A1330 BL 0x2850D00
	0x036A1334 LDR X21, [X19 + 0x48]
	0x036A1338 MOV X25, X31
	0x036A133C MOVZ W22, 0x9
	0x036A1340 TBZ X26, 0x1F, 0x36A1358
	0x036A1344 LDRB W8, [X31 + 0x7C]
	0x036A1348 CBZ W8, 0x36A1358
	0x036A134C MOV X0, X24
	0x036A1350 MOV X1, X31
	0x036A1354 BL 0x33E14E4
	0x036A1358 CBNZ X25, 0x36A1480
	0x036A135C CBZ W22, 0x36A0E28
	0x036A1360 CMP W22, 0x3
	0x036A1364 B.EQ 0x36A0E28
	0x036A1368 CMP W22, 0x9
	0x036A136C B.NE 0x36A1404
	0x036A1370 MOVN W8, 0x1
	0x036A1374 STP X31, X31, [X19 + 0x30]
	0x036A1378 STR W8, [X19], #0x8
	0x036A137C ADRP X8, 0xA9D000
	0x036A1380 LDR X8, [X8 + 0x888]
	0x036A1384 LDR X0, [X8]
	0x036A1388 LDR W8, [X0 + 0xE0]
	0x036A138C CBNZ W8, 0x36A1394
	0x036A1390 BL 0x1C16DFC
	0x036A1394 ADRP X8, 0xA9D000
	0x036A1398 LDR X8, [X8 + 0xA10]
	0x036A139C MOV X0, X19
	0x036A13A0 MOV X1, X21
	0x036A13A4 LDR X2, [X8]
	0x036A13A8 BL 0x26322B0
	0x036A13AC B 0x36A1404
	0x036A13B0 LDR X8, [X19 + 0x60]
	0x036A13B4 CMP X8, 0x0
	0x036A13B8 CSET W1, NE
	0x036A13BC CBNZ X0, 0x36A0E64
	0x036A13C0 BL 0x1C16F20
	0x036A13C4 STR W31, [X19]
	0x036A13C8 LDR V0, [X31 + 0x6]
	0x036A13CC ADRP X8, 0xA9D000
	0x036A13D0 STR V0, [X19 + 0x7]
	0x036A13D4 LDR X8, [X8 + 0x888]
	0x036A13D8 LDR X0, [X8]
	0x036A13DC LDR W8, [X0 + 0xE0]
	0x036A13E0 CBNZ W8, 0x36A13E8
	0x036A13E4 BL 0x1C16DFC
	0x036A13E8 ADRP X8, 0xA9D000
	0x036A13EC LDR X8, [X8 + 0x9F0]
	0x036A13F0 ADD X0, X19, 0x8
	0x036A13F4 LDR X3, [X8]
	0x036A13F8 ADD X1, X31, 0x60
	0x036A13FC MOV X2, X19
	0x036A1400 BL 0x1FAF47C
	0x036A1404 LDP X20, X19, [X31 + 0xC0]
	0x036A1408 LDP X22, X21, [X31 + 0xB0]
	0x036A140C LDP X24, X23, [X31 + 0xA0]
	0x036A1410 LDP X26, X25, [X31 + 0x90]
	0x036A1414 LDP X28, X27, [X31 + 0x80]
	0x036A1418 LDR X30, [X31 + 0x70]
	0x036A141C ADD X31, X31, 0xD0
	0x036A1420 RET
	0x036A1424 BL 0x1C16F20
	0x036A1428 MOV X0, X25
	0x036A142C BL 0x1C16F18
	0x036A1430 STR X8, [X31 + 0x8]
	0x036A1434 MOVZ W8, 0x1
	0x036A1438 STRB W8, [X20 + 0x70]
	0x036A143C LDR X28, [X19 + 0x50]
	0x036A1440 CMP X28, 0x0
	0x036A1444 CSEL X25, X27, X28, EQ
	0x036A1448 CBNZ X28, 0x36A1460
	0x036A144C LDR X23, [X19 + 0x30]
	0x036A1450 CBNZ X23, 0x36A14A8
	0x036A1454 BL 0x1C16F20
	0x036A1458 BL 0x1C16F20
	0x036A145C BL 0x1C16F20
	0x036A1460 CBNZ X25, 0x36A14E4
	0x036A1464 BL 0x1C16F20
	0x036A1468 MOVZ W8, 0x1
	0x036A146C STRB W8, [X20 + 0x70]
	0x036A1470 LDR X23, [X19 + 0x30]
	0x036A1474 CBNZ X23, 0x36A150C
	0x036A1478 BL 0x1C16F20
	0x036A147C BL 0x1C16F20
	0x036A1480 MOV X0, X25
	0x036A1484 BL 0x1C16F18
	0x036A1488 BL 0x1C16F20
	0x036A148C BL 0x1C16F20
	0x036A1490 BL 0x1C16F20
	0x036A1494 BL 0x1C16F20
	0x036A1498 BL 0x1C16F20
	0x036A149C BL 0x1C16F20
	0x036A14A0 BL 0x1C16F20
	0x036A14A4 BL 0x1C16F20
	0x036A14A8 ADRP X0, 0xA9D000
	0x036A14AC LDR X0, [X0 + 0xAA0]
	0x036A14B0 BL 0x1C16D08
	0x036A14B4 MOV X2, X0
	0x036A14B8 MOV X0, X23
	0x036A14BC MOV X1, X22
	0x036A14C0 BL 0x2850ED0
	0x036A14C4 LDR X8, [X31 + 0x8]
	0x036A14C8 LDR X22, [X8]
	0x036A14CC ADRP X0, 0xA9D000
	0x036A14D0 LDR X0, [X0 + 0xA98]
	0x036A14D4 BL 0x1C16D08
	0x036A14D8 MOV X1, X0
	0x036A14DC MOV X0, X22
	0x036A14E0 BL 0x1C16DEC
	0x036A14E4 LDR X8, [X25]
	0x036A14E8 LDR X1, [X8 + 0x280]
	0x036A14EC LDR X9, [X8 + 0x278]
	0x036A14F0 MOV X0, X25
	0x036A14F4 BLR X9
	0x036A14F8 LDR X8, [X31 + 0x8]
	0x036A14FC LDR X22, [X8]
	0x036A1500 B 0x36A144C
	0x036A1504 BL 0x1C16F20
	0x036A1508 BL 0x1C16F20
	0x036A150C ADRP X0, 0xA9D000
	0x036A1510 LDR X0, [X0 + 0xAA0]
	0x036A1514 BL 0x1C16D08
	0x036A1518 MOV X2, X0
	0x036A151C MOV X0, X23
	0x036A1520 MOV X1, X22
	0x036A1524 BL 0x2850ED0
	0x036A1528 LDR X22, [X19 + 0x40]
	0x036A152C ADRP X0, 0xA9D000
	0x036A1530 LDR X0, [X0 + 0xA98]
	0x036A1534 BL 0x1C16D08
	0x036A1538 MOV X1, X0
	0x036A153C MOV X0, X22
	0x036A1540 BL 0x1C16DEC
	0x036A1544 BL 0x1C16F20
	0x036A1548 B 0x36A15DC
	0x036A154C B 0x36A1570
	0x036A1550 B 0x36A15DC
	0x036A1554 B 0x36A15DC
	0x036A1558 B 0x36A15DC
	0x036A155C B 0x36A15DC
	0x036A1560 B 0x36A1570
	0x036A1564 B 0x36A1658
	0x036A1568 B 0x36A1658
	0x036A156C B 0x36A1658
	0x036A1570 MOV X22, X1
	0x036A1574 MOV X23, X0
	0x036A1578 MOV X28, X25
	0x036A157C B 0x36A1670
	0x036A1580 B 0x36A1658
	0x036A1584 B 0x36A1658
	0x036A1588 B 0x36A1658
	0x036A158C B 0x36A1658
	0x036A1590 B 0x36A1658
	0x036A1594 B 0x36A1658
	0x036A1598 B 0x36A1794
	0x036A159C B 0x36A1794
	0x036A15A0 B 0x36A1794
	0x036A15A4 B 0x36A1664
	0x036A15A8 MOV X22, X1
	0x036A15AC MOV X23, X0
	0x036A15B0 B 0x36A1670
	0x036A15B4 B 0x36A1658
	0x036A15B8 B 0x36A1658
	0x036A15BC B 0x36A1658
	0x036A15C0 B 0x36A1658
	0x036A15C4 B 0x36A1658
	0x036A15C8 B 0x36A1658
	0x036A15CC B 0x36A1658
	0x036A15D0 B 0x36A1658
	0x036A15D4 B 0x36A16D4
	0x036A15D8 B 0x36A1658
	0x036A15DC MOV X22, X1
	0x036A15E0 MOV X23, X0
	0x036A15E4 CMP W22, 0x1
	0x036A15E8 B.NE 0x36A1608
	0x036A15EC MOV X0, X23
	0x036A15F0 BL 0x3EB1AD0
	0x036A15F4 LDR X25, [X0]
	0x036A15F8 BL 0x3EB1AE0
	0x036A15FC MOV W22, W31
	0x036A1600 TBNZ X26, 0x1F, 0x36A1344
	0x036A1604 B 0x36A1358
	0x036A1608 MOV X25, X31
	0x036A160C TBZ X26, 0x1F, 0x36A1624
	0x036A1610 LDRB W8, [X31 + 0x7C]
	0x036A1614 CBZ W8, 0x36A1624
	0x036A1618 MOV X0, X24
	0x036A161C MOV X1, X31
	0x036A1620 BL 0x33E14E4
	0x036A1624 CBZ X25, 0x36A16DC
	0x036A1628 MOV X0, X25
	0x036A162C BL 0x1C16F18
	0x036A1630 MOV X22, X1
	0x036A1634 MOV X23, X0
	0x036A1638 TBNZ X26, 0x1F, 0x36A1610
	0x036A163C B 0x36A1624
	0x036A1640 B 0x36A1658
	0x036A1644 B 0x36A16D4
	0x036A1648 B 0x36A1658
	0x036A164C B 0x36A1794
	0x036A1650 B 0x36A1794
	0x036A1654 B 0x36A1658
	0x036A1658 MOV X22, X1
	0x036A165C MOV X23, X0
	0x036A1660 B 0x36A187C
	0x036A1664 MOV X22, X1
	0x036A1668 MOV X23, X0
	0x036A166C MOV X28, X27
	0x036A1670 CMP W22, 0x1
	0x036A1674 B.NE 0x36A1698
	0x036A1678 MOV X0, X23
	0x036A167C BL 0x3EB1AD0
	0x036A1680 LDR X25, [X0]
	0x036A1684 BL 0x3EB1AE0
	0x036A1688 MOV W22, W31
	0x036A168C MOV X27, X28
	0x036A1690 TBNZ X26, 0x1F, 0x36A0F2C
	0x036A1694 B 0x36A0F40
	0x036A1698 MOV X25, X31
	0x036A169C TBZ X26, 0x1F, 0x36A16B4
	0x036A16A0 LDRB W8, [X31 + 0x7C]
	0x036A16A4 CBZ W8, 0x36A16B4
	0x036A16A8 MOV X0, X24
	0x036A16AC MOV X1, X31
	0x036A16B0 BL 0x33E14E4
	0x036A16B4 CBZ X25, 0x36A16DC
	0x036A16B8 MOV X0, X25
	0x036A16BC BL 0x1C16F18
	0x036A16C0 MOV X22, X1
	0x036A16C4 MOV X23, X0
	0x036A16C8 TBNZ X26, 0x1F, 0x36A16A0
	0x036A16CC B 0x36A16B4
	0x036A16D0 B 0x36A16D4
	0x036A16D4 MOV X22, X1
	0x036A16D8 MOV X23, X0
	0x036A16DC CMP W22, 0x1
	0x036A16E0 B.NE 0x36A1788
	0x036A16E4 MOV X0, X23
	0x036A16E8 BL 0x3EB1AD0
	0x036A16EC MOV X20, X0
	0x036A16F0 ADRP X0, 0xA52000
	0x036A16F4 LDR X0, [X0 + 0x7D0]
	0x036A16F8 BL 0x1C16D08
	0x036A16FC LDR X8, [X20]
	0x036A1700 LDR X1, [X8]
	0x036A1704 BL 0x1C17270
	0x036A1708 TBZ X0, 0x0, 0x36A175C
	0x036A170C LDR X20, [X20]
	0x036A1710 BL 0x3EB1AE0
	0x036A1714 MOVN W8, 0x1
	0x036A1718 STR W8, [X19]
	0x036A171C STP X31, X31, [X19 + 0x30]
	0x036A1720 ADRP X0, 0xA9D000
	0x036A1724 LDR X0, [X0 + 0x888]
	0x036A1728 ADD X21, X19, 0x8
	0x036A172C BL 0x1C16D08
	0x036A1730 LDR W8, [X0 + 0xE0]
	0x036A1734 CBNZ W8, 0x36A173C
	0x036A1738 BL 0x1C16DFC
	0x036A173C ADRP X0, 0xA9D000
	0x036A1740 LDR X0, [X0 + 0xAA8]
	0x036A1744 BL 0x1C16D08
	0x036A1748 MOV X2, X0
	0x036A174C MOV X0, X21
	0x036A1750 MOV X1, X20
	0x036A1754 BL 0x26324C8
	0x036A1758 B 0x36A1404
	0x036A175C MOVZ W0, 0x8
	0x036A1760 BL 0x3EB1AF0
	0x036A1764 LDR X8, [X20]
	0x036A1768 STR X8, [X0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xD40000
	011 Move W9, [X22+2260]
	012 Move X21, X1
	013 Move X20, X0
	014 Move X19, X8
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xA53000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xA9E000
	023 Move X0, [X0+2456]
	024 Call 0x1C17CF4
	025 Move X0, 0xA7E000
	026 Move X0, [X0+816]
	027 Call 0x1C17CF4
	028 Move X0, 0xA9E000
	029 Move X0, [X0+2464]
	030 Call 0x1C17CF4
	031 Move X0, 0xA9E000
	032 Move X0, [X0+2472]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2260], W8
	036 Compare X21, 0
	037 JumpIfEqual {334}
	038 Move X8, [X21]
	039 Move X23, 0xA53000
	040 Move X25, 0xA9E000
	041 Move X24, 0xA7E000
	042 Move X9, [X8+552]
	043 Move X1, [X8+560]
	044 Move X23, [X23+1880]
	045 Move X25, [X25+2472]
	046 Move X24, [X24+816]
	047 Move X0, X21
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move W22, W0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X20+345]
	052 Compare W8, 0
	053 JumpIfNotEqual {57}
	054 Move X8, [X20+104]
	055 Compare X8, 0
	056 JumpIfNotEqual {106}
	057 Move X8, [X20+208]
	058 Compare X8, 0
	059 JumpIfEqual {334}
	060 Move W9, [X8+48]
	061 Compare W9, 0
	062 JumpIfEqual {66}
	063 Move W8, [X8+50]
	064 Compare W8, 0
	065 JumpIfEqual {102}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X20+49]
	069 Compare W8, 0
	070 JumpIfEqual {257}
	071 Move X0, [X23]
	072 Move W8, 304
	073 Add X1, X31, 8
	074 Move [X31+8], W8
	075 Call 0x1C17E04
	076 Move X8, [X21]
	077 Move X23, X0
	078 Move X0, X21
	079 Move X9, [X8+568]
	080 Move X1, [X8+576]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X25]
	083 Move X2, X0
	084 Move X1, X23
	085 Move X3, X31
	086 Move X0, X8
	087 Call String.Format, X0, X1, X2
	088 Move X8, [X24]
	089 Move X23, X0
	090 Move X0, X8
	091 Call 0x1C17F10
	092 Move W3, 7
	093 Move X1, X23
	094 Move X2, X31
	095 Move X4, X21
	096 Move X5, X31
	097 Move X24, X0
	098 Call WebException..ctor, X0, X1, X2, X3, X4
	099 Move W23, W31
	100 Compare X24, 0
	101 JumpIfNotEqual {220}
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W8, [X20+361]
	104 Compare W8, 0
	105 JumpIfNotEqual {66}
	106 Move W8, [X20+162]
	107 Compare W8, 0
	108 JumpIfNotEqual {155}
	109 Move X0, X20
	110 Move X1, X21
	111 Move W2, W22
	112 Call HttpWebRequest.CheckAuthorization, X0, X1, X2
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {155}
	117 Move X0, X20
	118 Call HttpWebRequest.get_MethodWithBuffer, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {286}
	123 Move X0, X20
	124 Move X1, X21
	125 Move W2, W31
	126 Call HttpWebRequest.GetRewriteHandler, X0, X1, X2
	127 Compare X1, 0
	128 JumpIfEqual {303}
	129 Move W8, [X20+376]
	130 Compare W8, 0
	131 JumpIfEqual {325}
	132 Move X0, [X20+224]
	133 Compare X0, 0
	134 JumpIfEqual {334}
	135 Move X22, X1
	136 Move X1, X31
	137 Call WebConnectionStream.InternalClose, X0
	138 Move [X20+224], X31
	139 Move X8, [X21]
	140 Move X0, X21
	141 Move X9, [X8+456]
	142 Move X1, [X8+464]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, 0xA9E000
	145 Move X8, [X8+2456]
	146 Move [X19], X31
	147 Move [X19+8], X31
	148 Move W2, 1
	149 Move [X19+16], X31
	150 Move X5, [X8]
	151 Move X0, X19
	152 Move W1, W31
	153 Move X3, X31
	154 Move X4, X22
	155 Move X0, [X23]
	156 Add X1, X31, 12
	157 Move [X31+12], W22
	158 Call 0x1C17E04
	159 Move X8, [X21]
	160 Move X23, X0
	161 Move X0, X21
	162 Move X9, [X8+568]
	163 Move X1, [X8+576]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X8, [X25]
	166 Move X2, X0
	167 Move X1, X23
	168 Move X3, X31
	169 Move X0, X8
	170 Call String.Format, X0, X1, X2
	171 Move X8, [X24]
	172 Move X23, X0
	173 Move X0, X8
	174 Call 0x1C17F10
	175 Move X24, X0
	176 Move W3, 7
	177 Move X1, X23
	178 Move X2, X31
	179 Move X4, X21
	180 Move X5, X31
	181 Call WebException..ctor, X0, X1, X2, X3, X4
	182 Move W23, 1
	183 Compare X24, 0
	184 JumpIfNotEqual {220}
	185 Move W8, [X20+49]
	186 Compare W8, 0
	187 JumpIfEqual {258}
	188 Move X0, X20
	189 Move W1, W22
	190 Move X2, X21
	191 Call HttpWebRequest.Redirect, X0, X1, X2
	192 Move W25, W0
	193 Move W2, 1
	194 Move X0, X20
	195 Move X1, X21
	196 Call HttpWebRequest.GetRewriteHandler, X0, X1, X2
	197 Move X21, X0
	198 Move X24, X1
	199 Move TEMP, X25
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {214}
	203 Move W8, [X20+377]
	204 Compare W8, 0
	205 JumpIfNotEqual {210}
	206 Add X0, X20, 336
	207 Call AuthorizationState.Reset, X0
	208 Add X0, X20, 352
	209 Call AuthorizationState.Reset, X0
	210 Move W1, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move W23, W31
	213 Move W8, 1
	214 Move W1, W31
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction CSET not yet implemented."
	217 Or W23, W8, W23
	218 Compare X24, 0
	219 JumpIfEqual {265}
	220 Move W8, [X20+376]
	221 Compare W8, 0
	222 JumpIfEqual {240}
	223 Move X0, [X20+224]
	224 Compare X0, 0
	225 JumpIfEqual {229}
	226 Move X1, X31
	227 Call WebConnectionStream.InternalClose, X0
	228 Move [X20+224], X31
	229 Move X8, 0xA9E000
	230 Move X8, [X8+2456]
	231 Move X0, X19
	232 Move W1, W31
	233 Move W2, W23
	234 Move X5, [X8]
	235 Move X3, X31
	236 Move X4, X24
	237 Move [X19], X31
	238 Move [X19+8], X31
	239 Move [X19+16], X31
	240 Move X8, 0xA9E000
	241 Move X8, [X8+2456]
	242 Move [X19], X31
	243 Move [X19+8], X31
	244 Move [X19+16], X31
	245 Move X0, X19
	246 Move X5, [X8]
	247 Move W1, W31
	248 Move W2, W23
	249 Move X3, X31
	250 Move W8, [X20+49]
	251 Compare W8, 0
	252 JumpIfEqual {257}
	253 Move W8, [X20+264]
	254 Move W9, [X20+132]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move W23, W31
	257 Move W23, W31
	258 NotImplemented "Instruction CMP not yet implemented."
	259 NotImplemented "Instruction CSET not yet implemented."
	260 Xor W8, W8, 1
	261 And W8, W9, W8
	262 Move X21, X31
	263 Move W1, W31
	264 Or W23, W23, W8
	265 Move X8, 0xA9E000
	266 Move X8, [X8+2456]
	267 Move X0, X19
	268 Move W2, W23
	269 Move X3, X21
	270 Move X5, [X8]
	271 Move [X19], X31
	272 Move [X19+8], X31
	273 Move [X19+16], X31
	274 Move X4, X31
	275 Call 0x27C92B4, X0, X1, X2, X3, X4
	276 Move X20, [X31+64]
	277 Move X19, [X31+72]
	278 Move X22, [X31+48]
	279 Move X21, [X31+56]
	280 Move X24, [X31+32]
	281 Move X23, [X31+40]
	282 Move X30, [X31+16]
	283 Move X25, [X31+24]
	284 Add X31, X31, 80
	285 Return X0
	286 Move X8, 0xA9E000
	287 Move X8, [X8+2456]
	288 Move W1, 1
	289 Move W2, 1
	290 Move X0, X19
	291 Move X5, [X8]
	292 Move [X19], X31
	293 Move [X19+8], X31
	294 Move [X19+16], X31
	295 Move X3, X31
	296 Move X0, [X24]
	297 Call 0x1C17F10
	298 Move X8, 0xA9E000
	299 Move X8, [X8+2464]
	300 Move X24, X0
	301 Move W3, 7
	302 Move X1, [X8]
	303 Move X8, 0xA9E000
	304 Move X8, [X8+2456]
	305 Move X3, X0
	306 Move [X19], X31
	307 Move [X19+8], X31
	308 Move W1, 1
	309 Move X5, [X8]
	310 Move W2, 1
	311 Move [X19+16], X31
	312 Move X0, X19
	313 Move X4, X31
	314 Move X20, [X31+64]
	315 Move X19, [X31+72]
	316 Move X22, [X31+48]
	317 Move X21, [X31+56]
	318 Move X24, [X31+32]
	319 Move X23, [X31+40]
	320 Move X30, [X31+16]
	321 Move X25, [X31+24]
	322 Add X31, X31, 80
	323 Call 0x27C92B4, X0, X1, X2, X3, X4
	324 Return X0
	325 Move X8, 0xA9E000
	326 Move X8, [X8+2456]
	327 Move [X19], X31
	328 Move [X19+8], X31
	329 Move W2, 1
	330 Move [X19+16], X31
	331 Move X5, [X8]
	332 Move X0, X19
	333 Move W1, W31
	334 Call 0x1C17F20

Method: System.Boolean <RunWithTimeout>b__242_0()

Disassembly:
	0x021EE3EC MOV X22, X0
	0x021EE3F0 CBNZ X8, 0x21EE400

ISIL:
	001 Move X1, X31
	002 Call HttpWebRequest.get_Aborted, X0
	003 Return X0

Method: System.Threading.Tasks.Task`1<System.Net.BufferOffsetSize> <GetRewriteHandler>b__271_0()

Disassembly:
	0x036A17F0 LDR X1, [X8]
	0x036A17F4 BL 0x1C17270
	0x036A17F8 TBZ X0, 0x0, 0x36A181C
	0x036A17FC LDR X22, [X22]
	0x036A1800 BL 0x3EB1AE0
	0x036A1804 CBZ X20, 0x36A1840
	0x036A1808 MOV X0, X20
	0x036A180C MOV X1, X22
	0x036A1810 BL 0x369E034
	0x036A1814 STR X0, [X19 + 0x40]
	0x036A1818 B 0x36A0ED0
	0x036A181C MOVZ W0, 0x8
	0x036A1820 BL 0x3EB1AF0
	0x036A1824 LDR X8, [X22]
	0x036A1828 STR X8, [X0]
	0x036A182C ADRP X1, 0x813000
	0x036A1830 ADD X1, X1, 0xE58
	0x036A1834 MOV X2, X31
	0x036A1838 BL 0x3EB1B00
	0x036A183C B 0x36A18EC
	0x036A1840 BL 0x1C16F20
	0x036A1844 B 0x36A16D4
	0x036A1848 B 0x36A16D4
	0x036A184C B 0x36A16D4
	0x036A1850 MOV X22, X1
	0x036A1854 MOV X23, X0
	0x036A1858 BL 0x3EB1AE0
	0x036A185C B 0x36A16DC
	0x036A1860 MOV X22, X1
	0x036A1864 MOV X23, X0
	0x036A1868 MOVZ W26, 0x2
	0x036A186C B 0x36A187C
	0x036A1870 MOV X22, X1
	0x036A1874 MOV X23, X0
	0x036A1878 MOVZ W26, 0x3
	0x036A187C CMP W22, 0x1
	0x036A1880 B.NE 0x36A16DC
	0x036A1884 MOV X0, X23
	0x036A1888 BL 0x3EB1AD0
	0x036A188C MOV X22, X0
	0x036A1890 ADRP X0, 0xA52000
	0x036A1894 LDR X0, [X0 + 0x7D0]
	0x036A1898 BL 0x1C16D08
	0x036A189C LDR X8, [X22]
	0x036A18A0 LDR X1, [X8]
	0x036A18A4 BL 0x1C17270
	0x036A18A8 TBZ X0, 0x0, 0x36A18CC
	0x036A18AC LDR X22, [X22]
	0x036A18B0 BL 0x3EB1AE0
	0x036A18B4 CBZ X20, 0x36A18EC
	0x036A18B8 MOV X0, X20
	0x036A18BC MOV X1, X22
	0x036A18C0 BL 0x369E034
	0x036A18C4 STR X0, [X19 + 0x40]
	0x036A18C8 B 0x36A11A0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xD40000
	007 Move X20, 0xA9E000
	008 Move W8, [X21+2261]
	009 Move X20, [X20+2480]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xA9E000
	016 Move X0, [X0+2488]
	017 Call 0x1C17CF4
	018 Move X0, 0xA9E000
	019 Move X0, [X0+2496]
	020 Call 0x1C17CF4
	021 Move X0, 0xA9E000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0xA9E000
	025 Move X0, [X0+2480]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2261], W8
	029 Move X0, [X20]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move [X31], V0
	034 Move [X31+8], V0
	035 Move [X31+32], X19
	036 Move X19, 0xA9E000
	037 Move X21, 0xA9E000
	038 Move X20, 0xA9E000
	039 Move W8, [X0+224]
	040 Move X19, [X19+2488]
	041 Move X21, [X21+2496]
	042 Move X20, [X20+2504]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, [X19]
	047 Add X8, X31, 0
	048 Or X19, X8, 15
	049 Move X8, X19
	050 Call AsyncTaskMethodBuilder`1<Object>.Create
	051 Move X2, [X21]
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W8, TEMP
	055 Add X1, X31, 0
	056 Move X0, X19
	057 Move [X31], W8
	058 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	059 Move X1, [X20]
	060 Move X0, X19
	061 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	062 Move X20, [X31+80]
	063 Move X19, [X31+88]
	064 Move X30, [X31+64]
	065 Move X21, [X31+72]
	066 Add X31, X31, 96
	067 Return X0

Method: System.Void .ctor()

Disassembly:
	0x036A18CC MOVZ W0, 0x8
	0x036A18D0 BL 0x3EB1AF0
	0x036A18D4 LDR X8, [X22]
	0x036A18D8 STR X8, [X0]
	0x036A18DC ADRP X1, 0x813000
	0x036A18E0 ADD X1, X1, 0xE58
	0x036A18E4 MOV X2, X31
	0x036A18E8 BL 0x3EB1B00
	0x036A18EC BL 0x1C16F20
	0x036A18F0 B 0x36A16D4
	0x036A18F4 B 0x36A16D4
	0x036A18F8 B 0x36A16D4
	0x036A18FC MOV X22, X1
	0x036A1900 MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD40000
	005 Move X20, 0xA9E000
	006 Move W8, [X19+2262]
	007 Move X20, [X20+2512]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA9E000
	013 Move X0, [X0+2512]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2262], W8
	017 Move X0, [X20]
	018 Call 0x1C17D9C

