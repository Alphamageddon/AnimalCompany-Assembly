Type: System.Net.WebRequestStream/<WriteChunkTrailer_inner>d__39

Method: System.Void MoveNext()

Disassembly:
	0x036B62AC TBNZ X8, 0x0, 0x36B6360
	0x036B62B0 ADRP X0, 0xA89000
	0x036B62B4 LDR X0, [X0 + 0x4B0]
	0x036B62B8 BL 0x1C16CF4
	0x036B62BC ADRP X0, 0xA89000
	0x036B62C0 LDR X0, [X0 + 0x4B8]
	0x036B62C4 BL 0x1C16CF4
	0x036B62C8 ADRP X0, 0xA84000
	0x036B62CC LDR X0, [X0 + 0x168]
	0x036B62D0 BL 0x1C16CF4
	0x036B62D4 ADRP X0, 0xA89000
	0x036B62D8 LDR X0, [X0 + 0x4C0]
	0x036B62DC BL 0x1C16CF4
	0x036B62E0 ADRP X0, 0xA40000
	0x036B62E4 LDR X0, [X0 + 0x278]
	0x036B62E8 BL 0x1C16CF4
	0x036B62EC ADRP X0, 0xA84000
	0x036B62F0 LDR X0, [X0 + 0xB88]
	0x036B62F4 BL 0x1C16CF4
	0x036B62F8 ADRP X0, 0xA88000
	0x036B62FC LDR X0, [X0 + 0x948]
	0x036B6300 BL 0x1C16CF4
	0x036B6304 ADRP X0, 0xA84000
	0x036B6308 LDR X0, [X0 + 0x6D0]
	0x036B630C BL 0x1C16CF4
	0x036B6310 ADRP X0, 0xA84000
	0x036B6314 LDR X0, [X0 + 0x190]
	0x036B6318 BL 0x1C16CF4
	0x036B631C ADRP X0, 0xA84000
	0x036B6320 LDR X0, [X0 + 0x258]
	0x036B6324 BL 0x1C16CF4
	0x036B6328 ADRP X0, 0xA65000
	0x036B632C LDR X0, [X0 + 0xB28]
	0x036B6330 BL 0x1C16CF4
	0x036B6334 ADRP X0, 0xA88000
	0x036B6338 LDR X0, [X0 + 0x950]
	0x036B633C BL 0x1C16CF4
	0x036B6340 ADRP X0, 0xA84000
	0x036B6344 LDR X0, [X0 + 0x158]
	0x036B6348 BL 0x1C16CF4
	0x036B634C ADRP X0, 0xA88000
	0x036B6350 LDR X0, [X0 + 0x208]
	0x036B6354 BL 0x1C16CF4
	0x036B6358 MOVZ W8, 0x1
	0x036B635C STRB W8, [X21 + 0x989]
	0x036B6360 STR X31, [X31 + 0x8]
	0x036B6364 LDR X0, [X19 + 0x88]
	0x036B6368 CBZ X0, 0x36B6794
	0x036B636C ADRP X23, 0xA84000
	0x036B6370 LDR X23, [X23 + 0x190]
	0x036B6374 ADRP X22, 0xA84000
	0x036B6378 MOV X2, X31
	0x036B637C LDR X1, [X23]
	0x036B6380 LDR X22, [X22 + 0x258]
	0x036B6384 BL 0x366456C
	0x036B6388 CBZ X0, 0x36B63A8
	0x036B638C LDR X1, [X22]
	0x036B6390 MOVZ W2, 0x5
	0x036B6394 MOV X3, X31
	0x036B6398 BL 0x322BD40
	0x036B639C ADDS W31, W0, 0x1
	0x036B63A0 CSET W24, NE
	0x036B63A4 B 0x36B63AC
	0x036B63A8 MOV W24, W31
	0x036B63AC LDR X0, [X19 + 0x88]
	0x036B63B0 CBZ X0, 0x36B6794
	0x036B63B4 ADRP X8, 0xA65000
	0x036B63B8 LDR X8, [X8 + 0xB28]
	0x036B63BC MOV X2, X31
	0x036B63C0 LDR X1, [X8]
	0x036B63C4 BL 0x366456C
	0x036B63C8 CBNZ W24, 0x36B63F0
	0x036B63CC MOV X1, X31
	0x036B63D0 MOV X21, X0
	0x036B63D4 BL 0x32277A8
	0x036B63D8 TBNZ X0, 0x0, 0x36B63F0
	0x036B63DC ADD X1, X31, 0x8
	0x036B63E0 MOV X0, X21
	0x036B63E4 MOV X2, X31
	0x036B63E8 BL 0x337D588
	0x036B63EC TBNZ X0, 0x0, 0x36B63F8
	0x036B63F0 MOVN X8, 0x80000000
	0x036B63F4 STR X8, [X31 + 0x8]
	0x036B63F8 MOV X0, X19
	0x036B63FC BL 0x36B61F8
	0x036B6400 TBZ X0, 0x0, 0x36B6438
	0x036B6404 LDR X0, [X19 + 0x88]
	0x036B6408 CBZ X0, 0x36B6794
	0x036B640C LDR X1, [X23]
	0x036B6410 MOV X2, X31
	0x036B6414 BL 0x366456C
	0x036B6418 CBZ X0, 0x36B6438
	0x036B641C LDR X1, [X22]
	0x036B6420 MOVZ W2, 0x5
	0x036B6424 MOV X3, X31
	0x036B6428 BL 0x322BD40
	0x036B642C ADDS W31, W0, 0x1
	0x036B6430 CSET W8, NE
	0x036B6434 B 0x36B643C
	0x036B6438 MOV W8, W31
	0x036B643C ADRP X22, 0xA84000
	0x036B6440 LDR X22, [X22 + 0x168]
	0x036B6444 STRB W8, [X19 + 0xA9]
	0x036B6448 LDR X21, [X19 + 0xA0]
	0x036B644C LDR X0, [X22]
	0x036B6450 LDR W8, [X0 + 0xE0]
	0x036B6454 CBNZ W8, 0x36B6460
	0x036B6458 BL 0x1C16DFC
	0x036B645C LDR X0, [X22]
	0x036B6460 LDR X8, [X0 + 0xB8]
	0x036B6464 MOV X0, X21
	0x036B6468 MOV X2, X31
	0x036B646C LDR X1, [X8 + 0x10]
	0x036B6470 BL 0x339C580
	0x036B6474 TBZ X0, 0x0, 0x36B654C
	0x036B6478 LDR X8, [X19 + 0x80]
	0x036B647C CBZ X8, 0x36B6794
	0x036B6480 LDRB W8, [X8 + 0x98]
	0x036B6484 CBZ W8, 0x36B654C
	0x036B6488 LDR X8, [X19 + 0x48]
	0x036B648C MOVZ W9, 0x1
	0x036B6490 STRB W9, [X19 + 0xA8]
	0x036B6494 CBZ X8, 0x36B6794
	0x036B6498 LDR X8, [X8 + 0x48]
	0x036B649C CBZ X8, 0x36B6794
	0x036B64A0 LDR X0, [X19 + 0x88]
	0x036B64A4 CBZ X0, 0x36B6794
	0x036B64A8 LDRB W8, [X8 + 0x30]
	0x036B64AC ADRP X9, 0xA84000
	0x036B64B0 ADRP X10, 0xA88000
	0x036B64B4 LDR X9, [X9 + 0x158]
	0x036B64B8 LDR X10, [X10 + 0x208]
	0x036B64BC CMP W8, 0x0
	0x036B64C0 MOV X2, X31
	0x036B64C4 CSEL X8, X9, X10, EQ
	0x036B64C8 LDR X1, [X8]
	0x036B64CC BL 0x366456C
	0x036B64D0 CBZ X0, 0x36B6530
	0x036B64D4 MOV X1, X31
	0x036B64D8 BL 0x322B5E4
	0x036B64DC CBZ X0, 0x36B6794
	0x036B64E0 ADRP X8, 0xA88000
	0x036B64E4 LDR X8, [X8 + 0x950]
	0x036B64E8 MOVZ W2, 0x4
	0x036B64EC MOV X3, X31
	0x036B64F0 MOV X21, X0
	0x036B64F4 LDR X1, [X8]
	0x036B64F8 BL 0x322BD40
	0x036B64FC ADDS W31, W0, 0x1
	0x036B6500 CSET W8, NE
	0x036B6504 STRB W8, [X19 + 0xA8]
	0x036B6508 ADRP X8, 0xA84000
	0x036B650C LDR X8, [X8 + 0xB88]
	0x036B6510 MOVZ W2, 0x4
	0x036B6514 MOV X0, X21
	0x036B6518 MOV X3, X31
	0x036B651C LDR X1, [X8]
	0x036B6520 BL 0x322BD40
	0x036B6524 ADDS W31, W0, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD2B000
	007 Move W8, [X20+2432]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xA8A000
	014 Move X0, [X0+1096]
	015 Call 0x1C17CF4
	016 Move X0, 0xA41000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move X0, 0xA8A000
	020 Move X0, [X0+1104]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2432], W8
	024 Move [X31], X31
	025 Move [X31+8], X31
	026 Move X20, 0xA41000
	027 Move W8, [X19]
	028 Move X20, [X20+640]
	029 Compare W8, 0
	030 JumpIfEqual {99}
	031 Move X21, [X19+32]
	032 Compare X21, 0
	033 JumpIfEqual {128}
	034 Add X0, X21, 136
	035 Move W1, 1
	036 Move W2, W31
	037 Move X3, X31
	038 Call Interlocked.CompareExchange, X0, X1, X2
	039 Compare W0, 0
	040 JumpIfNotEqual {110}
	041 Move X0, [X21+80]
	042 Compare X0, 0
	043 JumpIfEqual {129}
	044 Move X1, [X19+40]
	045 Call WebOperation.ThrowIfClosedOrDisposed, X0, X1
	046 Move X0, X31
	047 Call Encoding.get_ASCII
	048 Compare X0, 0
	049 JumpIfEqual {130}
	050 Move X9, 0xA8A000
	051 Move X8, [X0]
	052 Move X9, [X9+1104]
	053 Move X2, [X8+624]
	054 Move X1, [X9]
	055 Move X9, [X8+616]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X1, X0
	058 Compare X1, 0
	059 JumpIfEqual {131}
	060 Move X0, [X21+144]
	061 Compare X0, 0
	062 JumpIfEqual {132}
	063 Move X8, [X0]
	064 Move X4, [X19+40]
	065 Move W3, [X1+24]
	066 Move X9, [X8+792]
	067 Move X5, [X8+800]
	068 Move W2, W31
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X0, 0
	071 JumpIfEqual {133}
	072 Move W1, W31
	073 Move X2, X31
	074 Call Task.ConfigureAwait, X0, X1
	075 Move [X31], X0
	076 Move [X31+8], X1
	077 Add X0, X31, 0
	078 Move X1, X31
	079 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {107}
	084 Move [X19], W31
	085 Move V0, [X31]
	086 Move [X19+3], V0
	087 Move X0, [X20]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X8, 0xA8A000
	093 Move X8, [X8+1096]
	094 Add X0, X19, 8
	095 Move X3, [X8]
	096 Add X1, X31, 0
	097 Move X2, X19
	098 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	099 Move V0, [X19+3]
	100 Move TEMP, 0
	101 Not TEMP
	102 Move W8, TEMP
	103 Move [X31], V0
	104 Move [X19+48], X31
	105 Move [X19+56], X31
	106 Move [X19], W8
	107 Add X0, X31, 0
	108 Move X1, X31
	109 Call ConfiguredTaskAwaiter.GetResult, X0
	110 Move TEMP, 1
	111 Not TEMP
	112 Move W8, TEMP
	113 Move [X19+8], W8
	114 Move X0, [X20]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X19
	120 Move X1, X31
	121 Call AsyncTaskMethodBuilder.SetResult, X0
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X30, [X31+16]
	125 Move X21, [X31+24]
	126 Add X31, X31, 48
	127 Return 
	128 Call 0x1C17F20
	129 Call 0x1C17F20
	130 Call 0x1C17F20
	131 Call 0x1C17F20
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Move X20, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X20
	137 Call 0x3EB2AD0
	138 Move X20, X0
	139 Move X0, 0xA3E000
	140 Move X0, [X0+2000]
	141 Call 0x1C17D08
	142 Move X8, [X20]
	143 Move X1, [X8]
	144 Call 0x1C18270
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {166}
	149 Move X20, [X20]
	150 Call 0x3EB2AE0
	151 Move TEMP, 1
	152 Not TEMP
	153 Move W8, TEMP
	154 Move [X19+8], W8
	155 Move X0, 0xA41000
	156 Move X0, [X0+640]
	157 Call 0x1C17D08
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X19
	163 Move X1, X20
	164 Move X2, X31
	165 Call AsyncTaskMethodBuilder.SetException, X0, X1
	166 Move W0, 8
	167 Call 0x3EB2AF0
	168 Move X8, [X20]
	169 Move [X0], X8
	170 Move X1, 0x7FF000
	171 Add X1, X1, 3672
	172 Move X2, X31
	173 Call 0x3EB2B00
	174 Move X20, X0
	175 Call 0x3EB2AE0
	176 Move X0, X20
	177 Call 0x1D2D690
	178 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B6528 B.EQ 0x36B6530
	0x036B652C STRB W31, [X19 + 0xA8]
	0x036B6530 LDRB W8, [X19 + 0xA9]
	0x036B6534 CBNZ W8, 0x36B654C
	0x036B6538 LDR X8, [X31 + 0x8]
	0x036B653C MOVN X9, 0x80000000
	0x036B6540 CMP X8, X9
	0x036B6544 B.NE 0x36B654C
	0x036B6548 STRB W31, [X19 + 0xA8]
	0x036B654C ADRP X24, 0xA89000
	0x036B6550 LDR X24, [X24 + 0x4B0]
	0x036B6554 MOV X0, X19
	0x036B6558 BL 0x36B61F8
	0x036B655C TBZ X0, 0x0, 0x36B65C4
	0x036B6560 LDRB W8, [X19 + 0xA9]
	0x036B6564 CBZ W8, 0x36B6570
	0x036B6568 CBNZ X20, 0x36B6584
	0x036B656C B 0x36B6794
	0x036B6570 CBZ X20, 0x36B6794
	0x036B6574 LDRSW X8, [X20 + 0x1C]
	0x036B6578 LDR X9, [X31 + 0x8]
	0x036B657C CMP X9, X8
	0x036B6580 B.LE 0x36B65C4
	0x036B6584 LDR W9, [X20 + 0x1C]
	0x036B6588 LDR X8, [X19 + 0x80]
	0x036B658C CMP W9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD2B000
	007 Move X22, 0xA41000
	008 Move W8, [X21+2433]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA41000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2433], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

