Type: System.Net.WebResponseStream/<ReadAsync>d__40

Method: System.Void MoveNext()

Disassembly:
	0x036B8450 ADD X8, X8, X9, 0x4, LSL
	0x036B8454 ADD X0, X8, 0x138
	0x036B8458 LDP X8, X1, [X0]
	0x036B845C MOV X0, X22
	0x036B8460 BLR X8
	0x036B8464 CBZ X21, 0x36B8038
	0x036B8468 MOV X0, X21
	0x036B846C BL 0x1C16F18
	0x036B8470 MOV X20, X0
	0x036B8474 STR X1, [X31 + 0x8]
	0x036B8478 TBZ X22, 0x1F, 0x36B8464
	0x036B847C B 0x36B83FC
	0x036B8480 BL 0x1990590
	0x036B8484 STR X30, [X31 - 0x30]!
	0x036B8488 STP X22, X21, [X31 + 0x10]
	0x036B848C STP X20, X19, [X31 + 0x20]
	0x036B8490 ADRP X22, 0xD28000
	0x036B8494 ADRP X21, 0xA87000
	0x036B8498 LDRB W8, [X22 + 0x993]
	0x036B849C LDR X21, [X21 + 0x4C8]
	0x036B84A0 MOV X19, X1
	0x036B84A4 MOV X20, X0
	0x036B84A8 TBNZ X8, 0x0, 0x36B84CC
	0x036B84AC ADRP X0, 0xA87000
	0x036B84B0 LDR X0, [X0 + 0x580]
	0x036B84B4 BL 0x1C16CF4
	0x036B84B8 ADRP X0, 0xA87000
	0x036B84BC LDR X0, [X0 + 0x4C8]
	0x036B84C0 BL 0x1C16CF4
	0x036B84C4 MOVZ W8, 0x1
	0x036B84C8 STRB W8, [X22 + 0x993]
	0x036B84CC LDR X0, [X21]
	0x036B84D0 ADRP X21, 0xA87000
	0x036B84D4 LDR W8, [X0 + 0xE0]
	0x036B84D8 LDR X21, [X21 + 0x580]
	0x036B84DC CBNZ W8, 0x36B84E4
	0x036B84E0 BL 0x1C16DFC
	0x036B84E4 LDR X2, [X21]
	0x036B84E8 ADD X0, X20, 0x8
	0x036B84EC MOV X1, X19
	0x036B84F0 LDP X20, X19, [X31 + 0x20]
	0x036B84F4 LDP X22, X21, [X31 + 0x10]
	0x036B84F8 LDR X30, [X31], #0x30
	0x036B84FC B 0x2632228
	0x036B8500 SUB X31, X31, 0x70
	0x036B8504 STR X30, [X31 + 0x20]
	0x036B8508 STP X26, X25, [X31 + 0x30]
	0x036B850C STP X24, X23, [X31 + 0x40]
	0x036B8510 STP X22, X21, [X31 + 0x50]
	0x036B8514 STP X20, X19, [X31 + 0x60]
	0x036B8518 ADRP X20, 0xD28000
	0x036B851C LDRB W8, [X20 + 0x994]
	0x036B8520 MOV X19, X0
	0x036B8524 TBNZ X8, 0x0, 0x36B8620
	0x036B8528 ADRP X0, 0xA87000
	0x036B852C LDR X0, [X0 + 0x588]
	0x036B8530 BL 0x1C16CF4
	0x036B8534 ADRP X0, 0xA87000
	0x036B8538 LDR X0, [X0 + 0x590]
	0x036B853C BL 0x1C16CF4
	0x036B8540 ADRP X0, 0xA3E000
	0x036B8544 LDR X0, [X0 + 0x280]
	0x036B8548 BL 0x1C16CF4
	0x036B854C ADRP X0, 0xA86000
	0x036B8550 LDR X0, [X0 + 0xB20]
	0x036B8554 BL 0x1C16CF4
	0x036B8558 ADRP X0, 0xA87000
	0x036B855C LDR X0, [X0 + 0x4B0]
	0x036B8560 BL 0x1C16CF4
	0x036B8564 ADRP X0, 0xA3D000
	0x036B8568 LDR X0, [X0 + 0xA50]
	0x036B856C BL 0x1C16CF4
	0x036B8570 ADRP X0, 0xA43000
	0x036B8574 LDR X0, [X0 + 0x7D8]
	0x036B8578 BL 0x1C16CF4
	0x036B857C ADRP X0, 0xA75000
	0x036B8580 LDR X0, [X0 + 0x1E0]
	0x036B8584 BL 0x1C16CF4
	0x036B8588 ADRP X0, 0xA87000
	0x036B858C LDR X0, [X0 + 0x598]
	0x036B8590 BL 0x1C16CF4
	0x036B8594 ADRP X0, 0xA75000
	0x036B8598 LDR X0, [X0 + 0x1E8]
	0x036B859C BL 0x1C16CF4
	0x036B85A0 ADRP X0, 0xA87000
	0x036B85A4 LDR X0, [X0 + 0x5A0]
	0x036B85A8 BL 0x1C16CF4
	0x036B85AC ADRP X0, 0xA87000
	0x036B85B0 LDR X0, [X0 + 0x5A8]
	0x036B85B4 BL 0x1C16CF4
	0x036B85B8 ADRP X0, 0xA75000
	0x036B85BC LDR X0, [X0 + 0x1F0]
	0x036B85C0 BL 0x1C16CF4
	0x036B85C4 ADRP X0, 0xA44000
	0x036B85C8 LDR X0, [X0 + 0xC20]
	0x036B85CC BL 0x1C16CF4
	0x036B85D0 ADRP X0, 0xA75000
	0x036B85D4 LDR X0, [X0 + 0x1F8]
	0x036B85D8 BL 0x1C16CF4
	0x036B85DC ADRP X0, 0xA87000
	0x036B85E0 LDR X0, [X0 + 0x5B0]
	0x036B85E4 BL 0x1C16CF4
	0x036B85E8 ADRP X0, 0xA3C000
	0x036B85EC LDR X0, [X0 + 0x7B8]
	0x036B85F0 BL 0x1C16CF4
	0x036B85F4 ADRP X0, 0xA86000
	0x036B85F8 LDR X0, [X0 + 0xA78]
	0x036B85FC BL 0x1C16CF4
	0x036B8600 ADRP X0, 0xA87000
	0x036B8604 LDR X0, [X0 + 0x468]
	0x036B8608 BL 0x1C16CF4
	0x036B860C ADRP X0, 0xA86000
	0x036B8610 LDR X0, [X0 + 0xA88]
	0x036B8614 BL 0x1C16CF4
	0x036B8618 MOVZ W8, 0x1
	0x036B861C STRB W8, [X20 + 0x994]
	0x036B8620 STP X31, X31, [X31 + 0x10]
	0x036B8624 STP X31, X31, [X31]
	0x036B8628 ADRP X26, 0xA43000
	0x036B862C ADRP X23, 0xA3C000
	0x036B8630 ADRP X24, 0xA3E000
	0x036B8634 LDR W25, [X19]
	0x036B8638 LDR X20, [X19 + 0x20]
	0x036B863C LDR X26, [X26 + 0x7D8]
	0x036B8640 LDR X23, [X23 + 0x7B8]
	0x036B8644 LDR X24, [X24 + 0x280]
	0x036B8648 CBZ W25, 0x36B874C
	0x036B864C CMP W25, 0x1
	0x036B8650 B.NE 0x36B8764
	0x036B8654 LDR V0, [X19 + 0x6]
	0x036B8658 MOVN W25, 0x0
	0x036B865C STR V0, [X31]
	0x036B8660 STP X31, X31, [X19 + 0x60]
	0x036B8664 STR W25, [X19]
	0x036B8668 ADRP X8, 0xA87000
	0x036B866C LDR X8, [X8 + 0x5A0]
	0x036B8670 ADD X0, X31, 0x0
	0x036B8674 LDR X1, [X8]
	0x036B8678 BL 0x2998BB0
	0x036B867C MOV X22, X0
	0x036B8680 CBZ X0, 0x36B886C
	0x036B8684 ADRP X8, 0xA86000
	0x036B8688 LDR X8, [X8 + 0xB20]
	0x036B868C LDR X0, [X8]
	0x036B8690 BL 0x1C16F10
	0x036B8694 LDR W3, [X22 + 0x18]
	0x036B8698 MOV X21, X0
	0x036B869C MOV X1, X22
	0x036B86A0 MOV W2, W31
	0x036B86A4 MOV W4, W31
	0x036B86A8 MOV X5, X31
	0x036B86AC BL 0x368503C
	0x036B86B0 CBZ X20, 0x36B8870
	0x036B86B4 ADRP X8, 0xA87000
	0x036B86B8 LDR X23, [X20 + 0x50]
	0x036B86BC LDR X8, [X8 + 0x4B0]
	0x036B86C0 LDR X0, [X8]
	0x036B86C4 BL 0x1C16F10
	0x036B86C8 MOV X22, X0
	0x036B86CC MOV X1, X23
	0x036B86D0 MOV X2, X31
	0x036B86D4 MOV X3, X21
	0x036B86D8 MOV X4, X31
	0x036B86DC BL 0x369800C
	0x036B86E0 MOVZ W8, 0x101
	0x036B86E4 STR X22, [X20 + 0x58]
	0x036B86E8 STRH W8, [X20 + 0x60]
	0x036B86EC LDR X0, [X19 + 0x38]
	0x036B86F0 CBZ X0, 0x36B8874
	0x036B86F4 ADRP X8, 0xA86000
	0x036B86F8 LDR X8, [X8 + 0xA78]
	0x036B86FC LDR X1, [X8]
	0x036B8700 BL 0x2850D00
	0x036B8704 MOV X21, X31
	0x036B8708 MOVZ W8, 0x18
	0x036B870C TBZ X25, 0x1F, 0x36B8718
	0x036B8710 CBZ X20, 0x36B8884
	0x036B8714 STR X31, [X20 + 0x68]
	0x036B8718 CBNZ X21, 0x36B8864
	0x036B871C CMP W8, 0x18
	0x036B8720 B.EQ 0x36B8730
	0x036B8724 CMP W8, 0x7
	0x036B8728 B.EQ 0x36B87A4
	0x036B872C CBNZ W8, 0x36B8C1C
	0x036B8730 CBZ X20, 0x36B887C
	0x036B8734 LDR X0, [X20 + 0x50]
	0x036B8738 CBZ X0, 0x36B8880
	0x036B873C MOVZ W1, 0x1
	0x036B8740 MOV X2, X31
	0x036B8744 BL 0x36B01D4
	0x036B8748 B 0x36B87A4
	0x036B874C LDR V0, [X19 + 0x5]
	0x036B8750 MOVN W25, 0x0
	0x036B8754 STR V0, [X31 + 0x1]
	0x036B8758 STP X31, X31, [X19 + 0x50]
	0x036B875C STR W25, [X19]
	0x036B8760 B 0x36B8AF4
	0x036B8764 CBZ X20, 0x36B8878
	0x036B8768 LDRB W8, [X20 + 0x7C]
	0x036B876C CBNZ W8, 0x36B8780
	0x036B8770 LDRB W8, [X20 + 0x61]
	0x036B8774 CBNZ W8, 0x36B8780
	0x036B8778 LDRB W8, [X20 + 0x60]
	0x036B877C CBZ W8, 0x36B87D4
	0x036B8780 LDRB W8, [X20 + 0x60]
	0x036B8784 CBNZ W8, 0x36B87A4
	0x036B8788 LDR X0, [X20 + 0x50]
	0x036B878C MOVZ W8, 0x1
	0x036B8790 STRB W8, [X20 + 0x60]
	0x036B8794 CBZ X0, 0x36B8888
	0x036B8798 MOVZ W1, 0x1
	0x036B879C MOV X2, X31
	0x036B87A0 BL 0x36B01D4
	0x036B87A4 MOVN W8, 0x1
	0x036B87A8 STR W8, [X19]
	0x036B87AC STP X31, X31, [X19 + 0x38]
	0x036B87B0 LDR X0, [X24]
	0x036B87B4 ADD X19, X19, 0x8
	0x036B87B8 LDR W8, [X0 + 0xE0]
	0x036B87BC CBNZ W8, 0x36B87C4
	0x036B87C0 BL 0x1C16DFC
	0x036B87C4 MOV X0, X19
	0x036B87C8 MOV X1, X31
	0x036B87CC BL 0x32C4864
	0x036B87D0 B 0x36B8C1C
	0x036B87D4 ADRP X8, 0xA86000
	0x036B87D8 LDR X8, [X8 + 0xA88]
	0x036B87DC LDR X0, [X8]
	0x036B87E0 BL 0x1C16F10
	0x036B87E4 MOV X21, X0
	0x036B87E8 BL 0x36A97D4
	0x036B87EC STR X21, [X19 + 0x38]
	0x036B87F0 ADRP X8, 0xA3D000
	0x036B87F4 LDR X8, [X8 + 0xA50]
	0x036B87F8 LDR X0, [X8]
	0x036B87FC BL 0x1C16F10
	0x036B8800 MOV X21, X0
	0x036B8804 MOV X1, X31
	0x036B8808 BL 0x33DFA8C
	0x036B880C STR X21, [X19 + 0x40]
	0x036B8810 LDR X8, [X20]
	0x036B8814 LDR X1, [X8 + 0x220]
	0x036B8818 LDR X9, [X8 + 0x218]
	0x036B881C MOV X0, X20
	0x036B8820 BLR X9
	0x036B8824 MOV W21, W0
	0x036B8828 LDR X0, [X19 + 0x40]
	0x036B882C CBZ X0, 0x36B888C
	0x036B8830 MOV X1, X31
	0x036B8834 BL 0x33DFA08
	0x036B8838 MOV X22, X0
	0x036B883C LDR X0, [X23]
	0x036B8840 LDR W8, [X0 + 0xE0]
	0x036B8844 CBNZ W8, 0x36B884C
	0x036B8848 BL 0x1C16DFC
	0x036B884C MOV W0, W21
	0x036B8850 MOV X1, X22
	0x036B8854 MOV X2, X31
	0x036B8858 BL 0x33F503C
	0x036B885C STR X0, [X19 + 0x48]
	0x036B8860 B 0x36B89EC
	0x036B8864 MOV X0, X21
	0x036B8868 BL 0x1C16F18
	0x036B886C BL 0x1C16F20
	0x036B8870 BL 0x1C16F20
	0x036B8874 BL 0x1C16F20
	0x036B8878 BL 0x1C16F20
	0x036B887C BL 0x1C16F20
	0x036B8880 BL 0x1C16F20
	0x036B8884 BL 0x1C16F20
	0x036B8888 BL 0x1C16F20
	0x036B888C BL 0x1C16F20
	0x036B8890 B 0x36B8D90
	0x036B8894 B 0x36B8D90
	0x036B8898 B 0x36B8D90
	0x036B889C B 0x36B8D90
	0x036B88A0 B 0x36B8D90
	0x036B88A4 B 0x36B88D0
	0x036B88A8 B 0x36B88D0
	0x036B88AC B 0x36B88D0
	0x036B88B0 B 0x36B88D0
	0x036B88B4 B 0x36B88D0
	0x036B88B8 B 0x36B88E0
	0x036B88BC B 0x36B88E0
	0x036B88C0 B 0x36B88E0
	0x036B88C4 B 0x36B88E0
	0x036B88C8 B 0x36B88E0
	0x036B88CC B 0x36B88D0
	0x036B88D0 MOV X23, X0
	0x036B88D4 MOV W22, W1
	0x036B88D8 B 0x36B8DE8
	0x036B88DC B 0x36B88E0
	0x036B88E0 MOV X23, X0
	0x036B88E4 MOV W22, W1
	0x036B88E8 CMP W1, 0x1
	0x036B88EC B.EQ 0x36B8930
	0x036B88F0 MOVZ W8, 0x1
	0x036B88F4 CMP W22, W8
	0x036B88F8 B.NE 0x36B8914
	0x036B88FC MOV X0, X23
	0x036B8900 BL 0x3EB1AD0
	0x036B8904 LDR X21, [X0]
	0x036B8908 BL 0x3EB1AE0
	0x036B890C MOV W8, W31
	0x036B8910 B 0x36B870C
	0x036B8914 MOV X21, X31
	0x036B8918 TBZ X25, 0x1F, 0x36B8924
	0x036B891C CBZ X20, 0x36B896C
	0x036B8920 STR X31, [X20 + 0x68]
	0x036B8924 CBZ X21, 0x36B8DE8
	0x036B8928 MOV X0, X21
	0x036B892C BL 0x1C16F18
	0x036B8930 MOV X0, X23
	0x036B8934 BL 0x3EB1AD0
	0x036B8938 MOV X21, X0
	0x036B893C ADRP X0, 0xA3B000
	0x036B8940 LDR X0, [X0 + 0x7D0]
	0x036B8944 BL 0x1C16D08
	0x036B8948 LDR X8, [X21]
	0x036B894C LDR X1, [X8]
	0x036B8950 BL 0x1C17270
	0x036B8954 TBZ X0, 0x0, 0x36B8970
	0x036B8958 LDR X21, [X21]
	0x036B895C BL 0x3EB1AE0
	0x036B8960 LDR X22, [X19 + 0x38]
	0x036B8964 CBNZ X22, 0x36B8994
	0x036B8968 BL 0x1C16F20
	0x036B896C BL 0x1C16F20
	0x036B8970 MOVZ W0, 0x8
	0x036B8974 BL 0x3EB1AF0
	0x036B8978 LDR X8, [X21]
	0x036B897C STR X8, [X0]
	0x036B8980 ADRP X1, 0x7FC000
	0x036B8984 ADD X1, X1, 0xE58
	0x036B8988 MOV X2, X31
	0x036B898C BL 0x3EB1B00
	0x036B8990 B 0x36B8E7C
	0x036B8994 ADRP X0, 0xA86000
	0x036B8998 LDR X0, [X0 + 0xAA0]
	0x036B899C BL 0x1C16D08
	0x036B89A0 MOV X2, X0
	0x036B89A4 MOV X0, X22
	0x036B89A8 MOV X1, X21
	0x036B89AC BL 0x2850ED0
	0x036B89B0 MOV X0, X21
	0x036B89B4 BL 0x1C16F18
	0x036B89B8 B 0x36B89C0
	0x036B89BC B 0x36B89C0
	0x036B89C0 MOV X23, X0
	0x036B89C4 MOV W22, W1
	0x036B89C8 B 0x36B88F0
	0x036B89CC MOV X23, X0
	0x036B89D0 MOV W22, W1
	0x036B89D4 TBZ X25, 0x1F, 0x36B8924
	0x036B89D8 B 0x36B891C
	0x036B89DC MOV X22, X1
	0x036B89E0 MOV X23, X0
	0x036B89E4 BL 0x3EB1AE0
	0x036B89E8 B 0x36B88F0
	0x036B89EC LDR X0, [X26]
	0x036B89F0 LDR W8, [X0 + 0xE0]
	0x036B89F4 CBNZ W8, 0x36B89FC
	0x036B89F8 BL 0x1C16DFC
	0x036B89FC ADD X0, X19, 0x28
	0x036B8A00 MOV X1, X31
	0x036B8A04 BL 0x33DDC30
	0x036B8A08 CBZ X20, 0x36B8CE4
	0x036B8A0C LDR X1, [X19 + 0x38]
	0x036B8A10 ADD X0, X20, 0x68
	0x036B8A14 MOV X2, X31
	0x036B8A18 BL 0x1C24138
	0x036B8A1C CBZ X0, 0x36B8B60
	0x036B8A20 ADRP X8, 0xA87000
	0x036B8A24 LDR X8, [X8 + 0x468]
	0x036B8A28 LDR X1, [X8]
	0x036B8A2C BL 0x2851004
	0x036B8A30 ADRP X8, 0xA44000
	0x036B8A34 LDR X8, [X8 + 0xC20]
	0x036B8A38 MOV X22, X0
	0x036B8A3C LDR X0, [X8]
	0x036B8A40 MOVZ W1, 0x2
	0x036B8A44 BL 0x1C16D6C
	0x036B8A48 MOV X21, X0
	0x036B8A4C CBZ X0, 0x36B8CF0
	0x036B8A50 CBZ X22, 0x36B8A68
	0x036B8A54 LDR X8, [X21]
	0x036B8A58 LDR X1, [X8 + 0x40]
	0x036B8A5C MOV X0, X22
	0x036B8A60 BL 0x1C16E00
	0x036B8A64 CBZ X0, 0x36B8D04
	0x036B8A68 LDR W8, [X21 + 0x18]
	0x036B8A6C CBZ W8, 0x36B8CF4
	0x036B8A70 STR X22, [X21 + 0x20]
	0x036B8A74 LDR X22, [X19 + 0x48]
	0x036B8A78 CBZ X22, 0x36B8A94
	0x036B8A7C LDR X8, [X21]
	0x036B8A80 LDR X1, [X8 + 0x40]
	0x036B8A84 MOV X0, X22
	0x036B8A88 BL 0x1C16E00
	0x036B8A8C CBZ X0, 0x36B8CF8
	0x036B8A90 LDR W8, [X21 + 0x18]
	0x036B8A94 CMP W8, 0x1
	0x036B8A98 B.LS 0x36B8CEC
	0x036B8A9C STR X22, [X21 + 0x28]
	0x036B8AA0 LDR X0, [X23]
	0x036B8AA4 LDR W8, [X0 + 0xE0]
	0x036B8AA8 CBNZ W8, 0x36B8AB0
	0x036B8AAC BL 0x1C16DFC
	0x036B8AB0 MOV X0, X21
	0x036B8AB4 MOV X1, X31
	0x036B8AB8 BL 0x33F6194
	0x036B8ABC CBZ X0, 0x36B8CE8
	0x036B8AC0 ADRP X8, 0xA75000
	0x036B8AC4 LDR X8, [X8 + 0x1F8]
	0x036B8AC8 LDR X2, [X8]
	0x036B8ACC MOV W1, W31
	0x036B8AD0 BL 0x269F5D4
	0x036B8AD4 ADRP X8, 0xA75000
	0x036B8AD8 LDR X8, [X8 + 0x1F0]
	0x036B8ADC STP X0, X1, [X31 + 0x10]
	0x036B8AE0 LDR X8, [X8]
	0x036B8AE4 ADD X0, X31, 0x10
	0x036B8AE8 MOV X1, X8
	0x036B8AEC BL 0x2998B64
	0x036B8AF0 TBZ X0, 0x0, 0x36B8BE4
	0x036B8AF4 ADRP X8, 0xA75000
	0x036B8AF8 LDR X8, [X8 + 0x1E8]
	0x036B8AFC ADD X0, X31, 0x10
	0x036B8B00 LDR X1, [X8]
	0x036B8B04 BL 0x2998BB0
	0x036B8B08 LDR X8, [X19 + 0x48]
	0x036B8B0C CMP X0, X8
	0x036B8B10 B.NE 0x36B89EC
	0x036B8B14 ADRP X0, 0xA66000
	0x036B8B18 LDR X0, [X0 + 0x330]
	0x036B8B1C BL 0x1C16D08
	0x036B8B20 BL 0x1C16F10
	0x036B8B24 MOV X21, X0
	0x036B8B28 ADRP X0, 0xA66000
	0x036B8B2C LDR X0, [X0 + 0x338]
	0x036B8B30 BL 0x1C16D08
	0x036B8B34 MOV X1, X0
	0x036B8B38 MOVZ W2, 0xE
	0x036B8B3C MOV X0, X21
	0x036B8B40 MOV X3, X31
	0x036B8B44 BL 0x367A0D4
	0x036B8B48 ADRP X0, 0xA87000
	0x036B8B4C LDR X0, [X0 + 0x5B8]
	0x036B8B50 BL 0x1C16D08
	0x036B8B54 MOV X1, X0
	0x036B8B58 MOV X0, X21
	0x036B8B5C BL 0x1C16DEC
	0x036B8B60 MOV X21, X31
	0x036B8B64 STR X31, [X19 + 0x48]
	0x036B8B68 MOVZ W22, 0x3
	0x036B8B6C TBZ X25, 0x1F, 0x36B8B90
	0x036B8B70 LDR X0, [X19 + 0x40]
	0x036B8B74 CBZ X0, 0x36B8D18
	0x036B8B78 MOV X1, X31
	0x036B8B7C BL 0x33DFCF8
	0x036B8B80 LDR X0, [X19 + 0x40]
	0x036B8B84 CBZ X0, 0x36B8D1C
	0x036B8B88 MOV X1, X31
	0x036B8B8C BL 0x33E01CC
	0x036B8B90 CBNZ X21, 0x36B8D10
	0x036B8B94 CMP W22, 0x3
	0x036B8B98 B.EQ 0x36B8BA0
	0x036B8B9C CBNZ W22, 0x36B8C1C
	0x036B8BA0 CMP W25, 0x1
	0x036B8BA4 B.EQ 0x36B8654
	0x036B8BA8 LDR X0, [X26]
	0x036B8BAC LDR W8, [X0 + 0xE0]
	0x036B8BB0 CBNZ W8, 0x36B8BB8
	0x036B8BB4 BL 0x1C16DFC
	0x036B8BB8 ADD X0, X19, 0x28
	0x036B8BBC MOV X1, X31
	0x036B8BC0 BL 0x33DDC30
	0x036B8BC4 CBZ X20, 0x36B8D20
	0x036B8BC8 LDRB W8, [X20 + 0x7C]
	0x036B8BCC CBNZ W8, 0x36B8BD8
	0x036B8BD0 LDRB W8, [X20 + 0x61]
	0x036B8BD4 CBZ W8, 0x36B8C38
	0x036B8BD8 MOV X21, X31
	0x036B8BDC MOVZ W8, 0x7
	0x036B8BE0 B 0x36B870C
	0x036B8BE4 STR W31, [X19]
	0x036B8BE8 LDR V0, [X31 + 0x1]
	0x036B8BEC STR V0, [X19 + 0x5]
	0x036B8BF0 LDR X0, [X24]
	0x036B8BF4 LDR W8, [X0 + 0xE0]
	0x036B8BF8 CBNZ W8, 0x36B8C00
	0x036B8BFC BL 0x1C16DFC
	0x036B8C00 ADRP X8, 0xA87000
	0x036B8C04 LDR X8, [X8 + 0x590]
	0x036B8C08 ADD X0, X19, 0x8
	0x036B8C0C LDR X3, [X8]
	0x036B8C10 ADD X1, X31, 0x10
	0x036B8C14 MOV X2, X19
	0x036B8C18 BL 0x21858C8
	0x036B8C1C LDP X20, X19, [X31 + 0x60]
	0x036B8C20 LDP X22, X21, [X31 + 0x50]
	0x036B8C24 LDP X24, X23, [X31 + 0x40]
	0x036B8C28 LDP X26, X25, [X31 + 0x30]
	0x036B8C2C LDR X30, [X31 + 0x20]
	0x036B8C30 ADD X31, X31, 0x70
	0x036B8C34 RET
	0x036B8C38 LDRB W8, [X19 + 0x30]
	0x036B8C3C CBZ W8, 0x36B8C48
	0x036B8C40 LDRB W8, [X20 + 0xA8]
	0x036B8C44 CBZ W8, 0x36B8CCC
	0x036B8C48 LDR X1, [X19 + 0x28]
	0x036B8C4C MOV X0, X20
	0x036B8C50 BL 0x36B6798
	0x036B8C54 CBZ X0, 0x36B8D24
	0x036B8C58 ADRP X8, 0xA87000
	0x036B8C5C LDR X8, [X8 + 0x5B0]
	0x036B8C60 LDR X2, [X8]
	0x036B8C64 MOV W1, W31
	0x036B8C68 BL 0x269F5D4
	0x036B8C6C ADRP X8, 0xA87000
	0x036B8C70 LDR X8, [X8 + 0x5A8]
	0x036B8C74 STP X0, X1, [X31]
	0x036B8C78 LDR X8, [X8]
	0x036B8C7C ADD X0, X31, 0x0
	0x036B8C80 MOV X1, X8
	0x036B8C84 BL 0x2998B64
	0x036B8C88 TBNZ X0, 0x0, 0x36B8668
	0x036B8C8C MOVZ W8, 0x1
	0x036B8C90 STR W8, [X19]
	0x036B8C94 LDR V0, [X31]
	0x036B8C98 STR V0, [X19 + 0x6]
	0x036B8C9C LDR X0, [X24]
	0x036B8CA0 LDR W8, [X0 + 0xE0]
	0x036B8CA4 CBNZ W8, 0x36B8CAC
	0x036B8CA8 BL 0x1C16DFC
	0x036B8CAC ADRP X8, 0xA87000
	0x036B8CB0 LDR X8, [X8 + 0x588]
	0x036B8CB4 ADD X0, X19, 0x8
	0x036B8CB8 LDR X3, [X8]
	0x036B8CBC ADD X1, X31, 0x0
	0x036B8CC0 MOV X2, X19
	0x036B8CC4 BL 0x21858C8
	0x036B8CC8 B 0x36B8C1C
	0x036B8CCC LDR X8, [X20]
	0x036B8CD0 LDR X1, [X8 + 0x280]
	0x036B8CD4 LDR X9, [X8 + 0x278]
	0x036B8CD8 MOV X0, X20
	0x036B8CDC BLR X9
	0x036B8CE0 B 0x36B8BD8
	0x036B8CE4 BL 0x1C16F20
	0x036B8CE8 BL 0x1C16F20
	0x036B8CEC BL 0x1C16F28
	0x036B8CF0 BL 0x1C16F20
	0x036B8CF4 BL 0x1C16F28
	0x036B8CF8 BL 0x1C16F44
	0x036B8CFC MOV X1, X31
	0x036B8D00 BL 0x1C16DEC
	0x036B8D04 BL 0x1C16F44
	0x036B8D08 MOV X1, X31
	0x036B8D0C BL 0x1C16DEC
	0x036B8D10 MOV X0, X21
	0x036B8D14 BL 0x1C16F18
	0x036B8D18 BL 0x1C16F20
	0x036B8D1C BL 0x1C16F20
	0x036B8D20 BL 0x1C16F20
	0x036B8D24 BL 0x1C16F20
	0x036B8D28 B 0x36B88E0
	0x036B8D2C MOV X23, X0
	0x036B8D30 MOVZ W25, 0x1
	0x036B8D34 B 0x36B88E4
	0x036B8D38 B 0x36B88E0
	0x036B8D3C B 0x36B88E0
	0x036B8D40 B 0x36B88E0
	0x036B8D44 B 0x36B88E0
	0x036B8D48 B 0x36B88E0
	0x036B8D4C MOV X23, X0
	0x036B8D50 MOV W25, W31
	0x036B8D54 B 0x36B8D94
	0x036B8D58 MOV X22, X1
	0x036B8D5C MOV X23, X0
	0x036B8D60 B 0x36B8DE8
	0x036B8D64 B 0x36B8D90
	0x036B8D68 B 0x36B8D90
	0x036B8D6C B 0x36B8D90
	0x036B8D70 B 0x36B8D90
	0x036B8D74 B 0x36B8D90
	0x036B8D78 B 0x36B8D90
	0x036B8D7C B 0x36B8D90
	0x036B8D80 B 0x36B8D90
	0x036B8D84 B 0x36B8D90
	0x036B8D88 B 0x36B8D90
	0x036B8D8C B 0x36B8D90
	0x036B8D90 MOV X23, X0
	0x036B8D94 CMP W1, 0x1
	0x036B8D98 B.NE 0x36B8DB8
	0x036B8D9C MOV X0, X23
	0x036B8DA0 BL 0x3EB1AD0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X20, 0xD29000
	010 Move W8, [X20+2448]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {66}
	016 Move X0, 0xA88000
	017 Move X0, [X0+1312]
	018 Call 0x1C17CF4
	019 Move X0, 0xA88000
	020 Move X0, [X0+1320]
	021 Call 0x1C17CF4
	022 Move X0, 0xA6B000
	023 Move X0, [X0+3632]
	024 Call 0x1C17CF4
	025 Move X0, 0xA6B000
	026 Move X0, [X0+3488]
	027 Call 0x1C17CF4
	028 Move X0, 0xA44000
	029 Move X0, [X0+2008]
	030 Call 0x1C17CF4
	031 Move X0, 0xA88000
	032 Move X0, [X0+1328]
	033 Call 0x1C17CF4
	034 Move X0, 0xA70000
	035 Move X0, [X0+696]
	036 Call 0x1C17CF4
	037 Move X0, 0xA88000
	038 Move X0, [X0+1336]
	039 Call 0x1C17CF4
	040 Move X0, 0xA70000
	041 Move X0, [X0+704]
	042 Call 0x1C17CF4
	043 Move X0, 0xA88000
	044 Move X0, [X0+1344]
	045 Call 0x1C17CF4
	046 Move X0, 0xA70000
	047 Move X0, [X0+712]
	048 Call 0x1C17CF4
	049 Move X0, 0xA70000
	050 Move X0, [X0+720]
	051 Call 0x1C17CF4
	052 Move X0, 0xA88000
	053 Move X0, [X0+1352]
	054 Call 0x1C17CF4
	055 Move X0, 0xA87000
	056 Move X0, [X0+2680]
	057 Call 0x1C17CF4
	058 Move X0, 0xA88000
	059 Move X0, [X0+1128]
	060 Call 0x1C17CF4
	061 Move X0, 0xA87000
	062 Move X0, [X0+2696]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X20+2448], W8
	066 Move [X31+32], X31
	067 Move [X31+40], X31
	068 Move [X31+16], X31
	069 Move [X31+24], X31
	070 Move [X31+60], W31
	071 Move X22, 0xA44000
	072 Move W24, [X19]
	073 Move X20, [X19+56]
	074 Move X22, [X22+2008]
	075 Compare W24, 0
	076 JumpIfEqual {119}
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X22]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Add X0, X19, 32
	084 Move X1, X31
	085 Call CancellationToken.ThrowIfCancellationRequested, X0
	086 Move X9, [X19+40]
	087 Compare X9, 0
	088 JumpIfEqual {127}
	089 Move W8, [X19+48]
	090 Move TEMP, X8
	091 And TEMP, TEMP, -2147483648
	092 Compare TEMP, -2147483648
	093 JumpIfEqual {145}
	094 Move W9, [X9+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W10, [X19+52]
	097 Move TEMP, X10
	098 And TEMP, TEMP, -2147483648
	099 Compare TEMP, -2147483648
	100 JumpIfEqual {163}
	101 Subtract W8, W9, W8
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Compare X20, 0
	104 JumpIfEqual {181}
	105 Add X0, X20, 120
	106 Move W1, 1
	107 Move W2, W31
	108 Move X3, X31
	109 Call Interlocked.CompareExchange, X0, X1, X2
	110 Compare W0, 0
	111 JumpIfNotEqual {182}
	112 Move X8, 0xA87000
	113 Move X8, [X8+2696]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X21, X0
	117 Call WebCompletionSource..ctor, X0
	118 Move [X19+64], X21
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move TEMP, 0
	121 Not TEMP
	122 Move W24, TEMP
	123 Move [X31+2], V0
	124 Move [X19+88], X31
	125 Move [X19+96], X31
	126 Move [X19], W24
	127 Move X0, 0xA41000
	128 Move X0, [X0+1320]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X20, X0
	132 Move X0, 0xA67000
	133 Move X0, [X0+3912]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X20
	137 Move X2, X31
	138 Call ArgumentNullException..ctor, X0, X1
	139 Move X0, 0xA88000
	140 Move X0, [X0+1360]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X20
	144 Call 0x1C17DEC
	145 Move X0, 0xA44000
	146 Move X0, [X0+1888]
	147 Call 0x1C17D08
	148 Call 0x1C17F10
	149 Move X20, X0
	150 Move X0, 0xA6B000
	151 Move X0, [X0+3472]
	152 Call 0x1C17D08
	153 Move X1, X0
	154 Move X0, X20
	155 Move X2, X31
	156 Call ArgumentOutOfRangeException..ctor, X0, X1
	157 Move X0, 0xA88000
	158 Move X0, [X0+1360]
	159 Call 0x1C17D08
	160 Move X1, X0
	161 Move X0, X20
	162 Call 0x1C17DEC
	163 Move X0, 0xA44000
	164 Move X0, [X0+1888]
	165 Call 0x1C17D08
	166 Call 0x1C17F10
	167 Move X20, X0
	168 Move X0, 0xA64000
	169 Move X0, [X0+1608]
	170 Call 0x1C17D08
	171 Move X1, X0
	172 Move X0, X20
	173 Move X2, X31
	174 Call ArgumentOutOfRangeException..ctor, X0, X1
	175 Move X0, 0xA88000
	176 Move X0, [X0+1360]
	177 Call 0x1C17D08
	178 Move X1, X0
	179 Move X0, X20
	180 Call 0x1C17DEC
	181 Call 0x1C17F20
	182 Move X0, 0xA3C000
	183 Move X0, [X0+1456]
	184 Call 0x1C17D08
	185 Call 0x1C17F10
	186 Move X20, X0
	187 Move X0, 0xA82000
	188 Move X0, [X0+1456]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X20
	192 Move X2, X31
	193 Call InvalidOperationException..ctor, X0, X1
	194 Move X0, 0xA88000
	195 Move X0, [X0+1360]
	196 Call 0x1C17D08
	197 Move X1, X0
	198 Move X0, X20
	199 Call 0x1C17DEC
	200 Compare X20, 0
	201 JumpIfEqual {375}
	202 Move X1, [X19+64]
	203 Add X0, X20, 104
	204 Move X2, X31
	205 Call 0x1C25138
	206 Compare X0, 0
	207 JumpIfEqual {248}
	208 Move X8, 0xA88000
	209 Move X8, [X8+1128]
	210 Move X1, [X8]
	211 Call WebCompletionSource`1<Object>.WaitForCompletion, X0
	212 Compare X0, 0
	213 JumpIfEqual {376}
	214 Move X8, 0xA88000
	215 Move X8, [X8+1352]
	216 Move X2, [X8]
	217 Move W1, W31
	218 Call Task`1<Object>.ConfigureAwait, X0, X1
	219 Move X8, 0xA88000
	220 Move X8, [X8+1344]
	221 Move [X31+32], X0
	222 Move [X31+40], X1
	223 Move X8, [X8]
	224 Add X0, X31, 32
	225 Move X1, X8
	226 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {358}
	231 Move X8, 0xA88000
	232 Move X8, [X8+1336]
	233 Move X1, [X8]
	234 Add X0, X31, 32
	235 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	236 Move X0, [X22]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Add X0, X19, 32
	242 Move X1, X31
	243 Call CancellationToken.get_IsCancellationRequested, X0
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {200}
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move [X19+72], W31
	250 Move [X19+80], X31
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 Move TEMP, 0
	253 Not TEMP
	254 Move W24, TEMP
	255 Move [X31+1], V0
	256 Move [X19+104], X31
	257 Move [X19+112], X31
	258 Move [X19], W24
	259 Move X8, 0xA70000
	260 Move X8, [X8+704]
	261 Move X1, [X8]
	262 Add X0, X31, 16
	263 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	264 Move W8, W0
	265 Move X0, [X19+80]
	266 Move [X19+72], W8
	267 Compare X0, 0
	268 JumpIfEqual {427}
	269 Compare X20, 0
	270 JumpIfEqual {377}
	271 Move X23, [X20+112]
	272 Move [X31+60], W31
	273 Add X1, X31, 60
	274 Move X0, X23
	275 Move X2, X31
	276 Call Monitor.Enter, X0, X1
	277 Move X21, [X19+64]
	278 Compare X21, 0
	279 JumpIfEqual {378}
	280 Move X22, [X19+80]
	281 Move X0, 0xA87000
	282 Move X0, [X0+2720]
	283 Call 0x1C17D08
	284 Move X2, X0
	285 Move X0, X21
	286 Move X1, X22
	287 Call WebCompletionSource`1<Object>.TrySetException, X0, X1
	288 Move X21, X31
	289 Move [X20+104], X31
	290 Move [X20+120], W31
	291 Move W22, 28
	292 Move TEMP, X24
	293 And TEMP, TEMP, -2147483648
	294 Compare TEMP, -2147483648
	295 JumpIfNotEqual {302}
	296 Move W8, [X31+60]
	297 Compare W8, 0
	298 JumpIfEqual {302}
	299 Move X0, X23
	300 Move X1, X31
	301 Call Monitor.Exit, X0
	302 Compare X21, 0
	303 JumpIfNotEqual {379}
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Compare W22, 0
	306 JumpIfNotEqual {498}
	307 Move X0, [X20+80]
	308 Move W8, 1
	309 Move [X20+40], W8
	310 Compare X0, 0
	311 JumpIfNotEqual {381}
	312 Call 0x1C17F20
	313 Compare X20, 0
	314 JumpIfEqual {391}
	315 Move X4, [X19+32]
	316 Move X1, [X19+40]
	317 Move W2, [X19+48]
	318 Move W3, [X19+52]
	319 Move X0, X20
	320 Call WebResponseStream.ProcessRead, X0, X1, X2, X3, X4
	321 Compare X0, 0
	322 JumpIfEqual {392}
	323 Move X8, 0xA70000
	324 Move X8, [X8+720]
	325 Move X2, [X8]
	326 Move W1, W31
	327 Call Task`1<Int32>.ConfigureAwait, X0, X1
	328 Move X8, 0xA70000
	329 Move X8, [X8+712]
	330 Move [X31+16], X0
	331 Move [X31+24], X1
	332 Move X8, [X8]
	333 Add X0, X31, 16
	334 Move X1, X8
	335 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfEqual {259}
	340 Move W8, 1
	341 Move [X19], W8
	342 Move V0, [X31+1]
	343 Move X8, 0xA6B000
	344 Move [X19+104], V0
	345 Move X8, [X8+3488]
	346 Move X0, [X8]
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X8, 0xA88000
	352 Move X8, [X8+1320]
	353 Add X0, X19, 8
	354 Move X3, [X8]
	355 Add X1, X31, 16
	356 Move X2, X19
	357 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	358 Move [X19], W31
	359 Move V0, [X31+2]
	360 Move X8, 0xA6B000
	361 Move [X19+88], V0
	362 Move X8, [X8+3488]
	363 Move X0, [X8]
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Move X8, 0xA88000
	369 Move X8, [X8+1312]
	370 Add X0, X19, 8
	371 Move X3, [X8]
	372 Add X1, X31, 32
	373 Move X2, X19
	374 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 Move X0, X21
	380 Call 0x1C17F18
	381 Move X2, [X19+80]
	382 Move W1, W31
	383 Call WebOperation.Finish, X0, X1, X2
	384 Move X20, [X19+80]
	385 Move X0, 0xA88000
	386 Move X0, [X0+1360]
	387 Call 0x1C17D08
	388 Move X1, X0
	389 Move X0, X20
	390 Call 0x1C17DEC
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Move X21, X1
	394 Move X22, X0
	395 Move W24, 1
	396 Move X21, X1
	397 Move X22, X0
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X0, X22
	400 Call 0x3EB2AD0
	401 Move X21, X0
	402 Move X0, 0xA3C000
	403 Move X0, [X0+2000]
	404 Call 0x1C17D08
	405 Move X8, [X21]
	406 Move X1, [X8]
	407 Call 0x1C18270
	408 Move TEMP, X0
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfNotEqual {512}
	412 Move X21, [X21]
	413 Call 0x3EB2AE0
	414 Compare X20, 0
	415 JumpIfEqual {520}
	416 Move X0, 0xA88000
	417 Move X0, [X0+1368]
	418 Call 0x1C17D08
	419 Move X3, X0
	420 Move W1, 3
	421 Move X0, X20
	422 Move X2, X21
	423 Call WebResponseStream.GetReadException, X0, X1, X2, X3
	424 Move [X19+80], X0
	425 Compare X0, 0
	426 JumpIfNotEqual {269}
	427 Compare X20, 0
	428 JumpIfEqual {507}
	429 Move X23, [X20+112]
	430 Move [X31+60], W31
	431 Add X1, X31, 60
	432 Move X0, X23
	433 Move X2, X31
	434 Call Monitor.Enter, X0, X1
	435 Move X0, [X19+64]
	436 Compare X0, 0
	437 JumpIfEqual {508}
	438 Move X8, 0xA87000
	439 Move X8, [X8+2680]
	440 Move X1, [X8]
	441 Call WebCompletionSource`1<Object>.TrySetCompleted, X0
	442 Move X21, X31
	443 Move [X20+104], X31
	444 Move [X20+120], W31
	445 Move W22, 31
	446 Move TEMP, X24
	447 And TEMP, TEMP, -2147483648
	448 Compare TEMP, -2147483648
	449 JumpIfNotEqual {456}
	450 Move W8, [X31+60]
	451 Compare W8, 0
	452 JumpIfEqual {456}
	453 Move X0, X23
	454 Move X1, X31
	455 Call Monitor.Exit, X0
	456 Compare X21, 0
	457 JumpIfNotEqual {509}
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Compare W22, 0
	460 JumpIfNotEqual {498}
	461 Move W21, [X19+72]
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Move W8, [X20+124]
	464 Compare W8, 0
	465 JumpIfNotEqual {479}
	466 Move W9, [X20+96]
	467 Move W8, 1
	468 Move [X20+124], W8
	469 Compare W9, 0
	470 JumpIfNotEqual {479}
	471 Move X0, [X20+80]
	472 Move [X20+96], W8
	473 Compare X0, 0
	474 JumpIfEqual {511}
	475 Move W1, 1
	476 Move X2, X31
	477 Call WebOperation.Finish, X0, X1, X2
	478 Move W21, [X19+72]
	479 Move TEMP, 1
	480 Not TEMP
	481 Move W8, TEMP
	482 Move [X19+64], X31
	483 Move [X19+80], X31
	484 Move [X19+8], W8
	485 Move X8, 0xA6B000
	486 Move X8, [X8+3488]
	487 Move X0, [X8]
	488 Move W8, [X0+224]
	489 Compare W8, 0
	490 JumpIfNotEqual {492}
	491 Call 0x1C17DFC
	492 Move X8, 0xA6B000
	493 Move X8, [X8+3632]
	494 Move X0, X19
	495 Move W1, W21
	496 Move X2, [X8]
	497 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	498 Move X20, [X31+96]
	499 Move X19, [X31+104]
	500 Move X22, [X31+80]
	501 Move X21, [X31+88]
	502 Move X24, [X31+64]
	503 Move X23, [X31+72]
	504 Move X30, [X31+48]
	505 Add X31, X31, 112
	506 Return 
	507 Call 0x1C17F20
	508 Call 0x1C17F20
	509 Move X0, X21
	510 Call 0x1C17F18
	511 Call 0x1C17F20
	512 Move W0, 8
	513 Call 0x3EB2AF0
	514 Move X8, [X21]
	515 Move [X0], X8
	516 Move X1, 0x7FD000
	517 Add X1, X1, 3672
	518 Move X2, X31
	519 Call 0x3EB2B00
	520 Call 0x1C17F20
	521 Move X21, X1
	522 Move X22, X0
	523 Call 0x3EB2AE0
	524 Move X21, X1
	525 Move X22, X0
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Move X0, X22
	528 Call 0x3EB2AD0
	529 Move X8, [X0]
	530 Move [X31+8], X8
	531 Call 0x3EB2AE0
	532 Move X21, [X31+8]
	533 Move W22, W31
	534 Move TEMP, X24
	535 And TEMP, TEMP, -2147483648
	536 Compare TEMP, -2147483648
	537 JumpIfEqual {450}
	538 Move [X31+8], X31
	539 Move TEMP, X24
	540 And TEMP, TEMP, -2147483648
	541 Compare TEMP, -2147483648
	542 JumpIfNotEqual {549}
	543 Move W8, [X31+60]
	544 Compare W8, 0
	545 JumpIfEqual {549}
	546 Move X0, X23
	547 Move X1, X31
	548 Call Monitor.Exit, X0
	549 Move X8, [X31+8]
	550 Compare X8, 0
	551 JumpIfEqual {598}
	552 Move X0, [X31+8]
	553 Call 0x1C17F18
	554 Move X21, X1
	555 Move X22, X0
	556 Move TEMP, X24
	557 And TEMP, TEMP, -2147483648
	558 Compare TEMP, -2147483648
	559 JumpIfEqual {543}
	560 Move X21, X1
	561 Move X22, X0
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move X0, X22
	564 Call 0x3EB2AD0
	565 Move X8, [X0]
	566 Move [X31+8], X8
	567 Call 0x3EB2AE0
	568 Move X21, [X31+8]
	569 Move W22, W31
	570 Move TEMP, X24
	571 And TEMP, TEMP, -2147483648
	572 Compare TEMP, -2147483648
	573 JumpIfEqual {296}
	574 Move [X31+8], X31
	575 Move TEMP, X24
	576 And TEMP, TEMP, -2147483648
	577 Compare TEMP, -2147483648
	578 JumpIfNotEqual {585}
	579 Move W8, [X31+60]
	580 Compare W8, 0
	581 JumpIfEqual {585}
	582 Move X0, X23
	583 Move X1, X31
	584 Call Monitor.Exit, X0
	585 Move X8, [X31+8]
	586 Compare X8, 0
	587 JumpIfEqual {598}
	588 Move X0, [X31+8]
	589 Call 0x1C17F18
	590 Move X21, X1
	591 Move X22, X0
	592 Move TEMP, X24
	593 And TEMP, TEMP, -2147483648
	594 Compare TEMP, -2147483648
	595 JumpIfEqual {579}
	596 Move X21, X1
	597 Move X22, X0
	598 NotImplemented "Instruction CMP not yet implemented."
	599 Move X0, X22
	600 Call 0x3EB2AD0
	601 Move X20, X0
	602 Move X0, 0xA3C000
	603 Move X0, [X0+2000]
	604 Call 0x1C17D08
	605 Move X8, [X20]
	606 Move X1, [X8]
	607 Call 0x1C18270
	608 Move TEMP, X0
	609 And TEMP, TEMP, 1
	610 Compare TEMP, 1
	611 JumpIfNotEqual {634}
	612 Move X20, [X20]
	613 Call 0x3EB2AE0
	614 Move TEMP, 1
	615 Not TEMP
	616 Move W8, TEMP
	617 Move [X19+64], X31
	618 Move [X19+80], X31
	619 Move [X19+8], W8
	620 Move X0, 0xA6B000
	621 Move X0, [X0+3488]
	622 Call 0x1C17D08
	623 Move W8, [X0+224]
	624 Compare W8, 0
	625 JumpIfNotEqual {627}
	626 Call 0x1C17DFC
	627 Move X0, 0xA6B000
	628 Move X0, [X0+3648]
	629 Call 0x1C17D08
	630 Move X2, X0
	631 Move X0, X19
	632 Move X1, X20
	633 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	634 Move W0, 8
	635 Call 0x3EB2AF0
	636 Move X8, [X20]
	637 Move [X0], X8
	638 Move X1, 0x7FD000
	639 Add X1, X1, 3672
	640 Move X2, X31
	641 Call 0x3EB2B00
	642 Move X22, X0
	643 Call 0x3EB2AE0
	644 Move X0, X22
	645 Call 0x1D2D690
	646 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B8DA4 LDR X21, [X0]
	0x036B8DA8 BL 0x3EB1AE0
	0x036B8DAC MOV W22, W31
	0x036B8DB0 TBZ X25, 0x1F, 0x36B8B90
	0x036B8DB4 B 0x36B8B70
	0x036B8DB8 MOV X21, X31
	0x036B8DBC MOV W22, W1
	0x036B8DC0 TBZ X25, 0x1F, 0x36B8DE4
	0x036B8DC4 LDR X0, [X19 + 0x40]
	0x036B8DC8 CBZ X0, 0x36B8E84
	0x036B8DCC MOV X1, X31
	0x036B8DD0 BL 0x33DFCF8
	0x036B8DD4 LDR X0, [X19 + 0x40]
	0x036B8DD8 CBZ X0, 0x36B8E88
	0x036B8DDC MOV X1, X31
	0x036B8DE0 BL 0x33E01CC
	0x036B8DE4 CBNZ X21, 0x36B8E7C
	0x036B8DE8 CMP W22, 0x1
	0x036B8DEC B.NE 0x36B8E9C
	0x036B8DF0 MOV X0, X23
	0x036B8DF4 BL 0x3EB1AD0
	0x036B8DF8 MOV X20, X0
	0x036B8DFC ADRP X0, 0xA3B000
	0x036B8E00 LDR X0, [X0 + 0x7D0]
	0x036B8E04 BL 0x1C16D08
	0x036B8E08 LDR X8, [X20]
	0x036B8E0C LDR X1, [X8]
	0x036B8E10 BL 0x1C17270
	0x036B8E14 TBZ X0, 0x0, 0x36B8E5C
	0x036B8E18 LDR X20, [X20]
	0x036B8E1C BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD29000
	007 Move X21, 0xA6B000
	008 Move W8, [X22+2449]
	009 Move X21, [X21+3488]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA6B000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xA6B000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2449], W8
	024 Move X0, [X21]
	025 Move X21, 0xA6B000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3656]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Int32>.SetStateMachine, X0, X1
	040 Return 

