Type: System.Net.TimerThread/TimerQueue

Method: System.Void .ctor(System.Int32 durationMilliseconds)

Disassembly:
	0x03688B14 MOV X0, X21
	0x03688B18 MOV X2, X31
	0x03688B1C BL 0x33DE64C
	0x03688B20 LDR W8, [X19 + 0x18]
	0x03688B24 CBZ W8, 0x3688B40
	0x03688B28 MOV X22, X31
	0x03688B2C MOV W23, W31
	0x03688B30 MOVZ W24, 0x5
	0x03688B34 B 0x3688B80
	0x03688B38 MOV W8, W31
	0x03688B3C B 0x3688BD0
	0x03688B40 MOV X8, X19
	0x03688B44 LDR X9, [X8 + 0x38]!
	0x03688B48 MOVZ W10, 0x1
	0x03688B4C STUR W10, [X8 - 0x20]
	0x03688B50 CBZ X9, 0x3688BF0
	0x03688B54 LDR X10, [X19 + 0x40]
	0x03688B58 STR X10, [X9 + 0x40]
	0x03688B5C LDR X10, [X19 + 0x40]
	0x03688B60 CBZ X10, 0x3688BF4
	0x03688B64 STR X9, [X10 + 0x38]
	0x03688B68 STP X31, X31, [X8]
	0x03688B6C LDR X8, [X19 + 0x20]
	0x03688B70 MOV X22, X31
	0x03688B74 MOVZ W24, 0x5
	0x03688B78 CMP X8, 0x0
	0x03688B7C CSET W23, NE
	0x03688B80 LDRB W8, [X31 + 0xC]
	0x03688B84 CBZ W8, 0x3688B94
	0x03688B88 MOV X0, X21
	0x03688B8C MOV X1, X31
	0x03688B90 BL 0x33E14E4
	0x03688B94 CBNZ X22, 0x3688BE8
	0x03688B98 CMP W24, 0x5
	0x03688B9C B.EQ 0x3688BA4
	0x03688BA0 CBNZ W24, 0x3688BD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD59000
	007 Move X21, 0xAB7000
	008 Move W8, [X22+2083]
	009 Move X21, [X21+592]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAB7000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2083], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move [X19+16], W20
	025 Move X0, [X21]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+20], W31
	032 Call Environment.get_TickCount
	033 Move W8, 3
	034 Move [X20+16], W0
	035 Move [X20+24], W8
	036 Move [X19+32], X20
	037 Move [X20+56], X20
	038 Move [X20+64], X20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: System.Net.TimerThread/Timer CreateTimer(System.Net.TimerThread/Callback callback, System.Object context)

Disassembly:
	0x0368983C B.LT 0x368987C
	0x03689840 MOV W1, W31
	0x03689844 MOV X2, X31
	0x03689848 BL 0x3222A1C
	0x0368984C AND W8, W0, 0xFFFF
	0x03689850 CMP W8, 0x22
	0x03689854 B.NE 0x368987C
	0x03689858 LDR X0, [X19 + 0x48]
	0x0368985C CBZ X0, 0x3689DC4
	0x03689860 LDR W8, [X0 + 0x10]
	0x03689864 MOV X2, X31
	0x03689868 SUB W1, W8, 0x1
	0x0368986C BL 0x3222A1C
	0x03689870 AND W8, W0, 0xFFFF
	0x03689874 CMP W8, 0x22
	0x03689878 B.EQ 0x36898B4
	0x0368987C LDR X0, [X29]
	0x03689880 LDR X28, [X19 + 0x48]
	0x03689884 LDR W8, [X0 + 0xE0]
	0x03689888 CBNZ W8, 0x3689890
	0x0368988C BL 0x1C16DFC
	0x03689890 CBZ X28, 0x3689DC4
	0x03689894 LDR X8, [X29]
	0x03689898 MOV X0, X28
	0x0368989C MOV X2, X31
	0x036898A0 LDR X8, [X8 + 0xB8]
	0x036898A4 LDR X1, [X8 + 0x10]
	0x036898A8 BL 0x322BE8C
	0x036898AC ADDS W31, W0, 0x1
	0x036898B0 B.NE 0x3689C88
	0x036898B4 LDRB W8, [X19 + 0x30]
	0x036898B8 TBZ X22, 0x0, 0x36898FC
	0x036898BC CBZ W8, 0x3689978
	0x036898C0 STR X24, [X19 + 0x28]
	0x036898C4 LDRB W8, [X19 + 0x50]
	0x036898C8 CBZ W8, 0x3689C14
	0x036898CC LDR W8, [X19 + 0x20]
	0x036898D0 CMP W8, 0x1
	0x036898D4 B.EQ 0x3689B6C
	0x036898D8 CMP W8, 0x2
	0x036898DC B.NE 0x3689B40
	0x036898E0 CBZ X23, 0x3689DC4
	0x036898E4 MOVZ W1, 0x2F
	0x036898E8 MOV X0, X23
	0x036898EC MOV X2, X31
	0x036898F0 BL 0x322C668
	0x036898F4 MOV W2, W0
	0x036898F8 B 0x3689B58
	0x036898FC LDR X28, [X19 + 0x28]
	0x03689900 CBZ W8, 0x368997C
	0x03689904 MOVZ W2, 0x5
	0x03689908 MOV X0, X24
	0x0368990C MOV X1, X28
	0x03689910 MOV X3, X31
	0x03689914 BL 0x322590C
	0x03689918 CBZ W0, 0x3689C14
	0x0368991C TBZ X20, 0x0, 0x3689624
	0x03689920 ADRP X0, 0xA6A000
	0x03689924 LDR X0, [X0 + 0x9D0]
	0x03689928 BL 0x1C16D08
	0x0368992C MOVZ W1, 0x2
	0x03689930 BL 0x1C16D6C
	0x03689934 MOV X20, X0
	0x03689938 BL 0x19903C0
	0x0368993C ADRP X21, 0xAB5000
	0x03689940 LDR X21, [X21 + 0x2C0]
	0x03689944 MOV X0, X21
	0x03689948 BL 0x1C16D08
	0x0368994C MOV X1, X0
	0x03689950 MOV X0, X20
	0x03689954 BL 0x19980B4
	0x03689958 MOV X0, X21
	0x0368995C BL 0x1C16D08
	0x03689960 MOV X2, X0
	0x03689964 MOV X0, X20
	0x03689968 MOV X1, X31
	0x0368996C BL 0x1993444
	0x03689970 LDR X19, [X19 + 0x28]
	0x03689974 B 0x3689CE0
	0x03689978 LDR X28, [X19 + 0x28]
	0x0368997C LDR X0, [X29]
	0x03689980 LDR W8, [X0 + 0xE0]
	0x03689984 CBNZ W8, 0x368998C
	0x03689988 BL 0x1C16DFC
	0x0368998C MOV X0, X28
	0x03689990 BL 0x3689EB4
	0x03689994 TBZ X0, 0x0, 0x3689A94
	0x03689998 CBZ X28, 0x3689DC4
	0x0368999C MOV X0, X28
	0x036899A0 MOV W1, W31
	0x036899A4 MOV X2, X31
	0x036899A8 BL 0x3222A1C
	0x036899AC AND W8, W0, 0xFFFF
	0x036899B0 CMP W8, 0x2E
	0x036899B4 B.EQ 0x36899E0
	0x036899B8 ORR W8, W25, 0x2
	0x036899BC CMP W8, 0x3
	0x036899C0 B.NE 0x368991C
	0x036899C4 ADRP X8, 0xA73000
	0x036899C8 LDR X8, [X8 + 0x790]
	0x036899CC MOV X1, X28
	0x036899D0 MOV X2, X31
	0x036899D4 LDR X0, [X8]
	0x036899D8 BL 0x321B938
	0x036899DC MOV X28, X0
	0x036899E0 CBZ X24, 0x3689DC4
	0x036899E4 MOVZ W1, 0x2E
	0x036899E8 MOV X0, X24
	0x036899EC MOV X2, X31
	0x036899F0 BL 0x322BD98
	0x036899F4 STR W0, [X31 + 0xC]
	0x036899F8 TBZ X27, 0x0, 0x3689A14
	0x036899FC MOVZ W2, 0x5
	0x03689A00 MOV X0, X26
	0x03689A04 MOV X1, X28
	0x03689A08 MOV X3, X31
	0x03689A0C BL 0x322590C
	0x03689A10 CBZ W0, 0x3689BD8
	0x03689A14 CBZ X28, 0x3689DC4
	0x03689A18 LDR W8, [X28 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD58000
	009 Move X19, 0xAB6000
	010 Move W8, [X23+2084]
	011 Move X19, [X19+592]
	012 Move X20, X2
	013 Move X22, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xAB6000
	020 Move X0, [X0+592]
	021 Call 0x1C17CF4
	022 Move X0, 0xAB5000
	023 Move X0, [X0+3384]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2084], W8
	027 Move X0, [X19]
	028 Move W23, [X21+16]
	029 Move X24, [X21+32]
	030 Call 0x1C17F10
	031 Move X1, X22
	032 Move X2, X20
	033 Move W3, W23
	034 Move X4, X24
	035 Move X19, X0
	036 Call TimerNode..ctor, X0, X1, X2, X3, X4
	037 Move X20, [X21+32]
	038 Move [X31+12], W31
	039 Add X1, X31, 12
	040 Move X0, X20
	041 Move X2, X31
	042 Call Monitor.Enter, X0, X1
	043 Move X8, [X21+32]
	044 Compare X8, 0
	045 JumpIfEqual {110}
	046 Move X9, [X8+56]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W23, W31
	049 Compare X19, 0
	050 JumpIfEqual {107}
	051 Move X8, [X21+32]
	052 Move [X19+56], X8
	053 Compare X8, 0
	054 JumpIfEqual {111}
	055 Move X9, [X8+64]
	056 Move [X19+64], X9
	057 Move X9, [X8+64]
	058 Compare X9, 0
	059 JumpIfEqual {112}
	060 Move X21, X31
	061 Move [X9+56], X19
	062 Move [X8+64], X19
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {69}
	066 Move X0, X20
	067 Move X1, X31
	068 Call Monitor.Exit, X0
	069 Compare X21, 0
	070 JumpIfNotEqual {108}
	071 Move TEMP, X23
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {83}
	075 Move X8, 0xAB5000
	076 Move X8, [X8+3384]
	077 Move X0, [X8]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Call TimerThread.Prod
	083 Move X0, X19
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Return X0
	092 Move X0, [X21+24]
	093 Move X1, X31
	094 Move X2, X31
	095 Call IntPtr.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {104}
	100 Move X0, X21
	101 Move X1, X31
	102 Call GCHandle.Alloc, X0
	103 Move [X21+24], X0
	104 Move W23, 1
	105 Compare X19, 0
	106 JumpIfNotEqual {51}
	107 Call 0x1C17F20
	108 Move X0, X21
	109 Call 0x1C17F18
	110 Call 0x1C17F20
	111 Call 0x1C17F20
	112 Call 0x1C17F20
	113 Move X22, X0
	114 Move X22, X0
	115 Move W23, W31
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X22
	118 Call 0x3EB2AD0
	119 Move X21, [X0]
	120 Call 0x3EB2AE0
	121 Move X21, X31
	122 Move X22, X0
	123 Move W8, [X31+12]
	124 Compare W8, 0
	125 JumpIfEqual {129}
	126 Move X0, X20
	127 Move X1, X31
	128 Call Monitor.Exit, X0
	129 Compare X21, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X22
	132 Call 0x1D2D690
	133 Move X0, X21
	134 Call 0x1C17F18
	135 Call 0x1991590

Method: System.Boolean Fire(out System.Int32 nextExpiration)

Disassembly:
	0x03689480 LDR X30, [X31], #0x20
	0x03689484 B 0x321B938
	0x03689488 BL 0x1C16F20
	0x0368948C STP X30, X19, [X31 - 0x10]!
	0x03689490 CBZ X1, 0x36894E0
	0x03689494 MOV X2, X0
	0x03689498 CBZ X0, 0x36894E0
	0x0368949C LDR W4, [X1 + 0x10]
	0x036894A0 LDR W8, [X2 + 0x10]
	0x036894A4 ADD W9, W4, 0x1
	0x036894A8 CMP W9, W8
	0x036894AC B.NE 0x36894D0
	0x036894B0 MOVZ W3, 0x1
	0x036894B4 MOVZ W5, 0x5
	0x036894B8 MOV X0, X1
	0x036894BC MOV W1, W31
	0x036894C0 MOV X6, X31
	0x036894C4 MOVZ W19, 0x1
	0x036894C8 BL 0x3225DC8
	0x036894CC CBZ W0, 0x36894D4
	0x036894D0 MOV W19, W31
	0x036894D4 MOV W0, W19
	0x036894D8 LDP X30, X19, [X31], #0x10
	0x036894DC RET
	0x036894E0 BL 0x1C16F20
	0x036894E4 SUB X31, X31, 0x70
	0x036894E8 STP X29, X30, [X31 + 0x10]
	0x036894EC STP X28, X27, [X31 + 0x20]
	0x036894F0 STP X26, X25, [X31 + 0x30]
	0x036894F4 STP X24, X23, [X31 + 0x40]
	0x036894F8 STP X22, X21, [X31 + 0x50]
	0x036894FC STP X20, X19, [X31 + 0x60]
	0x03689500 ADRP X21, 0xD57000
	0x03689504 LDRB W8, [X21 + 0x82F]
	0x03689508 MOV W20, W6
	0x0368950C MOV W22, W5
	0x03689510 MOV X26, X4
	0x03689514 MOV W27, W3
	0x03689518 MOV X23, X2
	0x0368951C MOV W25, W1
	0x03689520 MOV X19, X0
	0x03689524 TBNZ X8, 0x0, 0x3689560
	0x03689528 ADRP X0, 0xAB5000
	0x0368952C LDR X0, [X0 + 0x2A0]
	0x03689530 BL 0x1C16CF4
	0x03689534 ADRP X0, 0xA6C000
	0x03689538 LDR X0, [X0 + 0xC48]
	0x0368953C BL 0x1C16CF4
	0x03689540 ADRP X0, 0xA6B000
	0x03689544 LDR X0, [X0 + 0xE58]
	0x03689548 BL 0x1C16CF4
	0x0368954C ADRP X0, 0xA73000
	0x03689550 LDR X0, [X0 + 0x790]
	0x03689554 BL 0x1C16CF4
	0x03689558 MOVZ W8, 0x1
	0x0368955C STRB W8, [X21 + 0x82F]
	0x03689560 CBZ X23, 0x3689DC4
	0x03689564 MOV X0, X23
	0x03689568 MOV X1, X31
	0x0368956C BL 0x361C394
	0x03689570 MOV X24, X0
	0x03689574 MOV X0, X23
	0x03689578 MOV X1, X31
	0x0368957C BL 0x361CC2C
	0x03689580 MOV W21, W0
	0x03689584 MOV X0, X23
	0x03689588 MOV X1, X31
	0x0368958C BL 0x361B448
	0x03689590 MOV X23, X0
	0x03689594 TBZ X22, 0x0, 0x36895B8
	0x03689598 LDR W8, [X19 + 0x88]
	0x0368959C MOVZ W9, 0x2
	0x036895A0 CMP W8, 0x1
	0x036895A4 CCMP W25, 0x0, 0x0, EQ
	0x036895A8 CSEL W9, W9, W25, EQ
	0x036895AC CMP W8, 0x0
	0x036895B0 CSINC W25, W9, W31, NE
	0x036895B4 STR W25, [X19 + 0x20]
	0x036895B8 LDR X0, [X19 + 0x40]
	0x036895BC CBZ X0, 0x3689620
	0x036895C0 LDR W8, [X0 + 0x10]
	0x036895C4 CBZ W8, 0x3689620
	0x036895C8 MOV W1, W31
	0x036895CC MOV X2, X31
	0x036895D0 BL 0x3222A1C
	0x036895D4 AND W8, W0, 0xFFFF
	0x036895D8 CMP W8, 0x24
	0x036895DC B.EQ 0x3689620
	0x036895E0 ADRP X29, 0xAB5000
	0x036895E4 LDR X29, [X29 + 0x2A0]
	0x036895E8 LDR X28, [X19 + 0x40]
	0x036895EC LDR X0, [X29]
	0x036895F0 LDR W8, [X0 + 0xE0]
	0x036895F4 CBNZ W8, 0x36895FC
	0x036895F8 BL 0x1C16DFC
	0x036895FC CBZ X28, 0x3689DC4
	0x03689600 LDR X8, [X29]
	0x03689604 MOV X0, X28
	0x03689608 MOV X2, X31
	0x0368960C LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, X1
	011 Move X20, X0
	012 Move [X31+28], W31
	013 Move X22, [X20+32]
	014 Compare X22, 0
	015 JumpIfEqual {91}
	016 Move X21, [X22+56]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X31+28], W31
	019 Add X1, X31, 28
	020 Move X0, X22
	021 Move X2, X31
	022 Call Monitor.Enter, X0, X1
	023 Move X8, [X20+32]
	024 Compare X8, 0
	025 JumpIfEqual {68}
	026 Move X21, [X8+56]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X23, X31
	029 Move W24, 3
	030 Move X0, [X20+24]
	031 Move X1, X31
	032 Move X2, X31
	033 Call IntPtr.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {46}
	038 Move X0, [X20+24]
	039 Move X1, X31
	040 Call GCHandle.op_Explicit, X0
	041 Move [X31+8], X0
	042 Add X0, X31, 8
	043 Move X1, X31
	044 Call GCHandle.Free, X0
	045 Move [X20+24], X31
	046 Move X23, X31
	047 Move [X19], W31
	048 Move W24, 6
	049 Move W8, [X31+28]
	050 Compare W8, 0
	051 JumpIfEqual {55}
	052 Move X0, X22
	053 Move X1, X31
	054 Call Monitor.Exit, X0
	055 Compare X23, 0
	056 JumpIfNotEqual {92}
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Compare W24, 0
	059 JumpIfNotEqual {90}
	060 Compare X21, 0
	061 JumpIfEqual {91}
	062 Move X0, X21
	063 Call TimerNode.Fire, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {13}
	068 Call 0x1C17F20
	069 Move X24, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, X24
	072 Call 0x3EB2AD0
	073 Move X23, [X0]
	074 Call 0x3EB2AE0
	075 Move W24, W31
	076 Move W8, [X21+16]
	077 Move W9, [X21+20]
	078 Move W0, 1
	079 Add W8, W9, W8
	080 Move [X19], W8
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X30, [X31+16]
	088 Add X31, X31, 80
	089 Return X0
	090 Move W0, W31
	091 Call 0x1C17F20
	092 Move X0, X23
	093 Call 0x1C17F18
	094 Move X23, X31
	095 Move X24, X0
	096 Move W8, [X31+28]
	097 Compare W8, 0
	098 JumpIfEqual {102}
	099 Move X0, X22
	100 Move X1, X31
	101 Call Monitor.Exit, X0
	102 Compare X23, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X24
	105 Call 0x1D2D690
	106 Move X0, X23
	107 Call 0x1C17F18
	108 Call 0x1991590

