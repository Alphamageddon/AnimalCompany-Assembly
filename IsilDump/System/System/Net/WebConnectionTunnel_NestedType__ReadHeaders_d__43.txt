Type: System.Net.WebConnectionTunnel/<ReadHeaders>d__43

Method: System.Void MoveNext()

Disassembly:
	0x036B0484 ADRP X8, 0xA8F000
	0x036B0488 LDR X8, [X8 + 0x250]
	0x036B048C MOV X1, X19
	0x036B0490 LDR X2, [X8]
	0x036B0494 BL 0x2850ED0
	0x036B0498 MOV X0, X20
	0x036B049C MOV X2, X19
	0x036B04A0 LDP X20, X19, [X31 + 0x10]
	0x036B04A4 MOV W1, W31
	0x036B04A8 LDP X30, X21, [X31], #0x20
	0x036B04AC B 0x36B01D4
	0x036B04B0 BL 0x1C16F20
	0x036B04B4 STR X30, [X31 - 0x20]!
	0x036B04B8 STP X20, X19, [X31 + 0x10]
	0x036B04BC ADRP X20, 0xD30000
	0x036B04C0 LDRB W8, [X20 + 0x94F]
	0x036B04C4 MOV X19, X0
	0x036B04C8 STR X1, [X31 + 0x8]
	0x036B04CC TBNZ X8, 0x0, 0x36B04E4
	0x036B04D0 ADRP X0, 0xA4B000
	0x036B04D4 LDR X0, [X0 + 0x7D8]
	0x036B04D8 BL 0x1C16CF4
	0x036B04DC MOVZ W8, 0x1
	0x036B04E0 STRB W8, [X20 + 0x94F]
	0x036B04E4 MOV X0, X19
	0x036B04E8 BL 0x36ACC30
	0x036B04EC TBNZ X0, 0x0, 0x36B0520
	0x036B04F0 ADRP X8, 0xA4B000
	0x036B04F4 LDR X8, [X8 + 0x7D8]
	0x036B04F8 LDR X0, [X8]
	0x036B04FC LDR W8, [X0 + 0xE0]
	0x036B0500 CBNZ W8, 0x36B0508
	0x036B0504 BL 0x1C16DFC
	0x036B0508 ADD X0, X31, 0x8
	0x036B050C MOV X1, X31
	0x036B0510 BL 0x33DD2B0
	0x036B0514 MOV W8, W0
	0x036B0518 MOV X0, X31
	0x036B051C TBZ X8, 0x0, 0x36B0530
	0x036B0520 ADD X2, X19, 0x70
	0x036B0524 MOV X0, X19
	0x036B0528 MOV W1, W31
	0x036B052C BL 0x36B053C
	0x036B0530 LDP X20, X19, [X31 + 0x10]
	0x036B0534 LDR X30, [X31], #0x20
	0x036B0538 RET
	0x036B053C STP X30, X21, [X31 - 0x20]!
	0x036B0540 STP X20, X19, [X31 + 0x10]
	0x036B0544 MOV W20, W1
	0x036B0548 MOV X1, X2
	0x036B054C MOV X21, X0
	0x036B0550 BL 0x36AFF78
	0x036B0554 MOV X19, X0
	0x036B0558 TBZ X1, 0x0, 0x36B056C
	0x036B055C LDR X0, [X21 + 0x38]
	0x036B0560 CBZ X0, 0x36B056C
	0x036B0564 MOV X1, X31
	0x036B0568 BL 0x33DFCF8
	0x036B056C TBZ X20, 0x0, 0x36B0580
	0x036B0570 CBZ X19, 0x36B0590
	0x036B0574 MOV X0, X19
	0x036B0578 MOV X1, X31
	0x036B057C BL 0x32C2440
	0x036B0580 MOV X0, X19
	0x036B0584 LDP X20, X19, [X31 + 0x10]
	0x036B0588 LDP X30, X21, [X31], #0x20
	0x036B058C RET
	0x036B0590 BL 0x1C16F20
	0x036B0594 STP X30, X21, [X31 - 0x20]!
	0x036B0598 STP X20, X19, [X31 + 0x10]
	0x036B059C ADRP X20, 0xD30000
	0x036B05A0 ADRP X21, 0xA4B000
	0x036B05A4 LDRB W8, [X20 + 0x950]
	0x036B05A8 LDR X21, [X21 + 0x7D8]
	0x036B05AC MOV X19, X0
	0x036B05B0 TBNZ X8, 0x0, 0x36B05C8
	0x036B05B4 ADRP X0, 0xA4B000
	0x036B05B8 LDR X0, [X0 + 0x7D8]
	0x036B05BC BL 0x1C16CF4
	0x036B05C0 MOVZ W8, 0x1
	0x036B05C4 STRB W8, [X20 + 0x950]
	0x036B05C8 LDR X0, [X21]
	0x036B05CC LDR W8, [X0 + 0xE0]
	0x036B05D0 CBNZ W8, 0x36B05D8
	0x036B05D4 BL 0x1C16DFC
	0x036B05D8 MOV X0, X31
	0x036B05DC BL 0x33DD2A8
	0x036B05E0 MOV X1, X0
	0x036B05E4 MOV X0, X19
	0x036B05E8 LDP X20, X19, [X31 + 0x10]
	0x036B05EC LDP X30, X21, [X31], #0x20
	0x036B05F0 B 0x36AC0BC
	0x036B05F4 SUB X31, X31, 0x30
	0x036B05F8 STP X30, X21, [X31 + 0x10]
	0x036B05FC STP X20, X19, [X31 + 0x20]
	0x036B0600 MOV X20, X1
	0x036B0604 MOV X19, X0
	0x036B0608 STRB W31, [X31 + 0xC]
	0x036B060C ADD X1, X31, 0xC
	0x036B0610 MOV X2, X31
	0x036B0614 BL 0x33DE64C
	0x036B0618 LDR W8, [X19 + 0x88]
	0x036B061C CMP W8, 0x1
	0x036B0620 B.NE 0x36B0674
	0x036B0624 LDR X8, [X19 + 0x20]
	0x036B0628 CBZ X8, 0x36B0674
	0x036B062C LDR W8, [X19 + 0x8C]
	0x036B0630 CBNZ W8, 0x36B0674
	0x036B0634 ADD X0, X19, 0x80
	0x036B0638 MOV X1, X20
	0x036B063C MOV X2, X31
	0x036B0640 BL 0x1C24138
	0x036B0644 CBNZ X0, 0x36B06C4
	0x036B0648 MOV X20, X31
	0x036B064C LDRB W8, [X31 + 0xC]
	0x036B0650 CBZ W8, 0x36B0660
	0x036B0654 MOV X0, X19
	0x036B0658 MOV X1, X31
	0x036B065C BL 0x33E14E4
	0x036B0660 CBNZ X20, 0x36B06BC
	0x036B0664 LDP X20, X19, [X31 + 0x20]
	0x036B0668 LDP X30, X21, [X31 + 0x10]
	0x036B066C ADD X31, X31, 0x30
	0x036B0670 RET
	0x036B0674 ADRP X0, 0xA43000
	0x036B0678 LDR X0, [X0 + 0x5B0]
	0x036B067C BL 0x1C16D08
	0x036B0680 BL 0x1C16F10
	0x036B0684 MOV X20, X0
	0x036B0688 ADRP X0, 0xA6E000
	0x036B068C LDR X0, [X0 + 0x340]
	0x036B0690 BL 0x1C16D08
	0x036B0694 MOV X1, X0
	0x036B0698 MOV X0, X20
	0x036B069C MOV X2, X31
	0x036B06A0 BL 0x337DF1C
	0x036B06A4 ADRP X0, 0xA8F000
	0x036B06A8 LDR X0, [X0 + 0x258]
	0x036B06AC BL 0x1C16D08
	0x036B06B0 MOV X1, X0
	0x036B06B4 MOV X0, X20
	0x036B06B8 BL 0x1C16DEC
	0x036B06BC MOV X0, X20
	0x036B06C0 BL 0x1C16F18
	0x036B06C4 ADRP X0, 0xA43000
	0x036B06C8 LDR X0, [X0 + 0x5B0]
	0x036B06CC BL 0x1C16D08
	0x036B06D0 BL 0x1C16F10
	0x036B06D4 MOV X20, X0
	0x036B06D8 ADRP X0, 0xA8F000
	0x036B06DC LDR X0, [X0 + 0x260]
	0x036B06E0 BL 0x1C16D08
	0x036B06E4 MOV X1, X0
	0x036B06E8 MOV X0, X20
	0x036B06EC MOV X2, X31
	0x036B06F0 BL 0x337DF1C
	0x036B06F4 ADRP X0, 0xA8F000
	0x036B06F8 LDR X0, [X0 + 0x258]
	0x036B06FC BL 0x1C16D08
	0x036B0700 MOV X1, X0
	0x036B0704 MOV X0, X20
	0x036B0708 BL 0x1C16DEC
	0x036B070C B 0x36B0718
	0x036B0710 B 0x36B0718
	0x036B0714 B 0x36B0718
	0x036B0718 MOV X21, X0
	0x036B071C CMP W1, 0x1
	0x036B0720 B.NE 0x36B0738
	0x036B0724 MOV X0, X21
	0x036B0728 BL 0x3EB1AD0
	0x036B072C LDR X20, [X0]
	0x036B0730 BL 0x3EB1AE0
	0x036B0734 B 0x36B064C
	0x036B0738 MOV X20, X31
	0x036B073C B 0x36B0744
	0x036B0740 MOV X21, X0
	0x036B0744 LDRB W8, [X31 + 0xC]
	0x036B0748 CBZ W8, 0x36B0758
	0x036B074C MOV X0, X19
	0x036B0750 MOV X1, X31
	0x036B0754 BL 0x33E14E4
	0x036B0758 CBNZ X20, 0x36B0764
	0x036B075C MOV X0, X21
	0x036B0760 BL 0x1D2C690
	0x036B0764 MOV X0, X20
	0x036B0768 BL 0x1C16F18
	0x036B076C BL 0x1990590
	0x036B0770 SUB X31, X31, 0x60
	0x036B0774 STP X30, X21, [X31 + 0x40]
	0x036B0778 STP X20, X19, [X31 + 0x50]
	0x036B077C ADRP X21, 0xD30000
	0x036B0780 ADRP X20, 0xA81000
	0x036B0784 LDRB W8, [X21 + 0x955]
	0x036B0788 LDR X20, [X20 + 0x438]
	0x036B078C MOV X19, X0
	0x036B0790 TBNZ X8, 0x0, 0x36B07CC
	0x036B0794 ADRP X0, 0xA81000
	0x036B0798 LDR X0, [X0 + 0x440]
	0x036B079C BL 0x1C16CF4
	0x036B07A0 ADRP X0, 0xA8F000
	0x036B07A4 LDR X0, [X0 + 0x268]
	0x036B07A8 BL 0x1C16CF4
	0x036B07AC ADRP X0, 0xA81000
	0x036B07B0 LDR X0, [X0 + 0x450]
	0x036B07B4 BL 0x1C16CF4
	0x036B07B8 ADRP X0, 0xA81000
	0x036B07BC LDR X0, [X0 + 0x438]
	0x036B07C0 BL 0x1C16CF4
	0x036B07C4 MOVZ W8, 0x1
	0x036B07C8 STRB W8, [X21 + 0x955]
	0x036B07CC LDR X0, [X20]
	0x036B07D0 MOVI V0.2D, 0x0
	0x036B07D4 STP V0, V0, [X31 + 0x10]
	0x036B07D8 STR V0, [X31]
	0x036B07DC STR X31, [X31 + 0x30]
	0x036B07E0 STR X19, [X31 + 0x20]
	0x036B07E4 ADRP X19, 0xA81000
	0x036B07E8 ADRP X21, 0xA8F000
	0x036B07EC ADRP X20, 0xA81000
	0x036B07F0 LDR W8, [X0 + 0xE0]
	0x036B07F4 LDR X19, [X19 + 0x440]
	0x036B07F8 LDR X21, [X21 + 0x268]
	0x036B07FC LDR X20, [X20 + 0x450]
	0x036B0800 CBNZ W8, 0x36B0808
	0x036B0804 BL 0x1C16DFC
	0x036B0808 LDR X0, [X19]
	0x036B080C ADD X8, X31, 0x0
	0x036B0810 ORR X19, X8, 0xF
	0x036B0814 MOV X8, X19
	0x036B0818 BL 0x263221C
	0x036B081C LDR X2, [X21]
	0x036B0820 MOVN W8, 0x0
	0x036B0824 ADD X1, X31, 0x0
	0x036B0828 MOV X0, X19
	0x036B082C STR W8, [X31]
	0x036B0830 BL 0x1FD1914
	0x036B0834 LDR X1, [X20]
	0x036B0838 MOV X0, X19
	0x036B083C BL 0x2632230
	0x036B0840 LDP X20, X19, [X31 + 0x50]
	0x036B0844 LDP X30, X21, [X31 + 0x40]
	0x036B0848 ADD X31, X31, 0x60
	0x036B084C RET
	0x036B0850 STR X30, [X31 - 0x20]!
	0x036B0854 STP X20, X19, [X31 + 0x10]
	0x036B0858 ADRP X20, 0xD30000
	0x036B085C LDRB W8, [X20 + 0x956]
	0x036B0860 MOV X19, X0
	0x036B0864 TBNZ X8, 0x0, 0x36B087C
	0x036B0868 ADRP X0, 0xA8F000
	0x036B086C LDR X0, [X0 + 0x270]
	0x036B0870 BL 0x1C16CF4
	0x036B0874 MOVZ W8, 0x1
	0x036B0878 STRB W8, [X20 + 0x956]
	0x036B087C LDR X0, [X19 + 0x40]
	0x036B0880 CBZ X0, 0x36B089C
	0x036B0884 ADRP X8, 0xA8F000
	0x036B0888 LDR X8, [X8 + 0x270]
	0x036B088C LDP X20, X19, [X31 + 0x10]
	0x036B0890 LDR X1, [X8]
	0x036B0894 LDR X30, [X31], #0x20
	0x036B0898 B 0x2851004
	0x036B089C BL 0x1C16F20
	0x036B08A0 STP X30, X19, [X31 - 0x10]!
	0x036B08A4 MOV X19, X0
	0x036B08A8 BL 0x36B0594
	0x036B08AC LDR X0, [X19 + 0x60]
	0x036B08B0 LDP X30, X19, [X31], #0x10
	0x036B08B4 RET
	0x036B08B8 STR X30, [X31 - 0x20]!
	0x036B08BC STP X20, X19, [X31 + 0x10]
	0x036B08C0 ADRP X20, 0xD30000
	0x036B08C4 LDRB W8, [X20 + 0x957]
	0x036B08C8 MOV X19, X0
	0x036B08CC TBNZ X8, 0x0, 0x36B08E4
	0x036B08D0 ADRP X0, 0xA8F000
	0x036B08D4 LDR X0, [X0 + 0x278]
	0x036B08D8 BL 0x1C16CF4
	0x036B08DC MOVZ W8, 0x1
	0x036B08E0 STRB W8, [X20 + 0x957]
	0x036B08E4 LDR X0, [X19 + 0x50]
	0x036B08E8 CBZ X0, 0x36B0904
	0x036B08EC ADRP X8, 0xA8F000
	0x036B08F0 LDR X8, [X8 + 0x278]
	0x036B08F4 LDP X20, X19, [X31 + 0x10]
	0x036B08F8 LDR X1, [X8]
	0x036B08FC LDR X30, [X31], #0x20
	0x036B0900 B 0x2851004
	0x036B0904 BL 0x1C16F20
	0x036B0908 LDR X0, [X0 + 0x58]
	0x036B090C RET
	0x036B0910 STR X30, [X31 - 0x30]!
	0x036B0914 STP X22, X21, [X31 + 0x10]
	0x036B0918 STP X20, X19, [X31 + 0x20]
	0x036B091C ADRP X22, 0xD30000
	0x036B0920 LDRB W8, [X22 + 0x959]
	0x036B0924 MOV X20, X2
	0x036B0928 MOV X19, X1
	0x036B092C MOV X21, X0
	0x036B0930 TBNZ X8, 0x0, 0x36B0948
	0x036B0934 ADRP X0, 0xA8F000
	0x036B0938 LDR X0, [X0 + 0x280]
	0x036B093C BL 0x1C16CF4
	0x036B0940 MOVZ W8, 0x1
	0x036B0944 STRB W8, [X22 + 0x959]
	0x036B0948 CBZ X20, 0x36B0964
	0x036B094C MOV X0, X21
	0x036B0950 MOV X1, X20
	0x036B0954 LDP X20, X19, [X31 + 0x20]
	0x036B0958 LDP X22, X21, [X31 + 0x10]
	0x036B095C LDR X30, [X31], #0x30
	0x036B0960 B 0x36B0410
	0x036B0964 LDR X0, [X21 + 0x48]
	0x036B0968 CBZ X0, 0x36B098C
	0x036B096C ADRP X8, 0xA8F000
	0x036B0970 LDR X8, [X8 + 0x280]
	0x036B0974 MOV X1, X19
	0x036B0978 LDP X20, X19, [X31 + 0x20]
	0x036B097C LDP X22, X21, [X31 + 0x10]
	0x036B0980 LDR X2, [X8]
	0x036B0984 LDR X30, [X31], #0x30
	0x036B0988 B 0x2850C54
	0x036B098C BL 0x1C16F20
	0x036B0990 STR X30, [X31 - 0x10]!
	0x036B0994 LDR X8, [X0 + 0x10]
	0x036B0998 CBZ X8, 0x36B09B0
	0x036B099C MOVZ W9, 0x1
	0x036B09A0 ADD X1, X0, 0x70
	0x036B09A4 STRB W9, [X8 + 0x118]
	0x036B09A8 LDR X30, [X31], #0x10
	0x036B09AC B 0x36AFF78
	0x036B09B0 BL 0x1C16F20
	0x036B09B4 SUB X31, X31, 0x30
	0x036B09B8 STP X30, X21, [X31 + 0x10]
	0x036B09BC STP X20, X19, [X31 + 0x20]
	0x036B09C0 ADRP X20, 0xD30000
	0x036B09C4 LDRB W8, [X20 + 0x95B]
	0x036B09C8 MOV X19, X0
	0x036B09CC TBNZ X8, 0x0, 0x36B0A38
	0x036B09D0 ADRP X0, 0xA8F000
	0x036B09D4 LDR X0, [X0 + 0x288]
	0x036B09D8 BL 0x1C16CF4
	0x036B09DC ADRP X0, 0xA81000
	0x036B09E0 LDR X0, [X0 + 0x4F8]
	0x036B09E4 BL 0x1C16CF4
	0x036B09E8 ADRP X0, 0xA81000
	0x036B09EC LDR X0, [X0 + 0x438]
	0x036B09F0 BL 0x1C16CF4
	0x036B09F4 ADRP X0, 0xA8E000
	0x036B09F8 LDR X0, [X0 + 0xA18]
	0x036B09FC BL 0x1C16CF4
	0x036B0A00 ADRP X0, 0xA8E000
	0x036B0A04 LDR X0, [X0 + 0xA30]
	0x036B0A08 BL 0x1C16CF4
	0x036B0A0C ADRP X0, 0xA8E000
	0x036B0A10 LDR X0, [X0 + 0xA40]
	0x036B0A14 BL 0x1C16CF4
	0x036B0A18 ADRP X0, 0xA8E000
	0x036B0A1C LDR X0, [X0 + 0xA60]
	0x036B0A20 BL 0x1C16CF4
	0x036B0A24 ADRP X0, 0xA8F000
	0x036B0A28 LDR X0, [X0 + 0x270]
	0x036B0A2C BL 0x1C16CF4
	0x036B0A30 MOVZ W8, 0x1
	0x036B0A34 STRB W8, [X20 + 0x95B]
	0x036B0A38 STP X31, X31, [X31]
	0x036B0A3C ADRP X21, 0xA81000
	0x036B0A40 LDR W8, [X19]
	0x036B0A44 LDR X21, [X21 + 0x438]
	0x036B0A48 CBZ W8, 0x36B0AE0
	0x036B0A4C LDR X8, [X19 + 0x20]
	0x036B0A50 CBZ X8, 0x36B0B4C
	0x036B0A54 LDR X0, [X8 + 0x40]
	0x036B0A58 CBZ X0, 0x36B0B50
	0x036B0A5C ADRP X8, 0xA8F000
	0x036B0A60 LDR X8, [X8 + 0x270]
	0x036B0A64 LDR X1, [X8]
	0x036B0A68 BL 0x2851004
	0x036B0A6C CBZ X0, 0x36B0B54
	0x036B0A70 ADRP X8, 0xA8E000
	0x036B0A74 LDR X8, [X8 + 0xA60]
	0x036B0A78 LDR X2, [X8]
	0x036B0A7C MOV W1, W31
	0x036B0A80 BL 0x269F5D4
	0x036B0A84 ADRP X8, 0xA8E000
	0x036B0A88 LDR X8, [X8 + 0xA40]
	0x036B0A8C STP X0, X1, [X31]
	0x036B0A90 LDR X8, [X8]
	0x036B0A94 ADD X0, X31, 0x0
	0x036B0A98 MOV X1, X8
	0x036B0A9C BL 0x2998B64
	0x036B0AA0 TBNZ X0, 0x0, 0x36B0AF4
	0x036B0AA4 STR W31, [X19]
	0x036B0AA8 LDR V0, [X31]
	0x036B0AAC STUR V0, [X19 + 0x28]
	0x036B0AB0 LDR X0, [X21]
	0x036B0AB4 LDR W8, [X0 + 0xE0]
	0x036B0AB8 CBNZ W8, 0x36B0AC0
	0x036B0ABC BL 0x1C16DFC
	0x036B0AC0 ADRP X8, 0xA8F000
	0x036B0AC4 LDR X8, [X8 + 0x288]
	0x036B0AC8 ADD X0, X19, 0x8
	0x036B0ACC LDR X3, [X8]
	0x036B0AD0 ADD X1, X31, 0x0
	0x036B0AD4 MOV X2, X19
	0x036B0AD8 BL 0x1FAF8A4
	0x036B0ADC B 0x36B0B3C
	0x036B0AE0 LDUR V0, [X19 + 0x28]
	0x036B0AE4 MOVN W8, 0x0
	0x036B0AE8 STR V0, [X31]
	0x036B0AEC STP X31, X31, [X19 + 0x28]
	0x036B0AF0 STR W8, [X19]
	0x036B0AF4 ADRP X8, 0xA8E000
	0x036B0AF8 LDR X8, [X8 + 0xA30]
	0x036B0AFC ADD X0, X31, 0x0
	0x036B0B00 LDR X1, [X8]
	0x036B0B04 BL 0x2998BB0
	0x036B0B08 MOVN W8, 0x1
	0x036B0B0C STR W8, [X19], #0x8
	0x036B0B10 MOV X20, X0
	0x036B0B14 LDR X0, [X21]
	0x036B0B18 ADRP X21, 0xA81000
	0x036B0B1C LDR W8, [X0 + 0xE0]
	0x036B0B20 LDR X21, [X21 + 0x4F8]
	0x036B0B24 CBNZ W8, 0x36B0B2C
	0x036B0B28 BL 0x1C16DFC
	0x036B0B2C LDR X2, [X21]
	0x036B0B30 MOV X0, X19
	0x036B0B34 MOV X1, X20
	0x036B0B38 BL 0x26322B0
	0x036B0B3C LDP X20, X19, [X31 + 0x20]
	0x036B0B40 LDP X30, X21, [X31 + 0x10]
	0x036B0B44 ADD X31, X31, 0x30
	0x036B0B48 RET
	0x036B0B4C BL 0x1C16F20
	0x036B0B50 BL 0x1C16F20
	0x036B0B54 BL 0x1C16F20
	0x036B0B58 B 0x36B0B70
	0x036B0B5C B 0x36B0B70
	0x036B0B60 B 0x36B0B70
	0x036B0B64 B 0x36B0B70
	0x036B0B68 B 0x36B0B70
	0x036B0B6C B 0x36B0B70
	0x036B0B70 MOV X20, X0
	0x036B0B74 CMP W1, 0x1
	0x036B0B78 B.NE 0x36B0C14
	0x036B0B7C MOV X0, X20
	0x036B0B80 BL 0x3EB1AD0
	0x036B0B84 MOV X20, X0
	0x036B0B88 ADRP X0, 0xA43000
	0x036B0B8C LDR X0, [X0 + 0x7D0]
	0x036B0B90 BL 0x1C16D08
	0x036B0B94 LDR X8, [X20]
	0x036B0B98 LDR X1, [X8]
	0x036B0B9C BL 0x1C17270
	0x036B0BA0 TBZ X0, 0x0, 0x36B0BEC
	0x036B0BA4 LDR X20, [X20]
	0x036B0BA8 BL 0x3EB1AE0
	0x036B0BAC MOVN W8, 0x1
	0x036B0BB0 STR W8, [X19], #0x8
	0x036B0BB4 ADRP X0, 0xA81000
	0x036B0BB8 LDR X0, [X0 + 0x438]
	0x036B0BBC BL 0x1C16D08
	0x036B0BC0 LDR W8, [X0 + 0xE0]
	0x036B0BC4 CBNZ W8, 0x36B0BCC
	0x036B0BC8 BL 0x1C16DFC
	0x036B0BCC ADRP X0, 0xA81000
	0x036B0BD0 LDR X0, [X0 + 0x520]
	0x036B0BD4 BL 0x1C16D08
	0x036B0BD8 MOV X2, X0
	0x036B0BDC MOV X0, X19
	0x036B0BE0 MOV X1, X20
	0x036B0BE4 BL 0x26324C8
	0x036B0BE8 B 0x36B0B3C
	0x036B0BEC MOVZ W0, 0x8
	0x036B0BF0 BL 0x3EB1AF0
	0x036B0BF4 LDR X8, [X20]
	0x036B0BF8 STR X8, [X0]
	0x036B0BFC ADRP X1, 0x804000
	0x036B0C00 ADD X1, X1, 0xE58
	0x036B0C04 MOV X2, X31
	0x036B0C08 BL 0x3EB1B00
	0x036B0C0C MOV X20, X0
	0x036B0C10 BL 0x3EB1AE0
	0x036B0C14 MOV X0, X20
	0x036B0C18 BL 0x1D2C690
	0x036B0C1C BL 0x1990590
	0x036B0C20 STR X30, [X31 - 0x30]!
	0x036B0C24 STP X22, X21, [X31 + 0x10]
	0x036B0C28 STP X20, X19, [X31 + 0x20]
	0x036B0C2C ADRP X22, 0xD30000
	0x036B0C30 ADRP X21, 0xA81000
	0x036B0C34 LDRB W8, [X22 + 0x95C]
	0x036B0C38 LDR X21, [X21 + 0x438]
	0x036B0C3C MOV X19, X1
	0x036B0C40 MOV X20, X0
	0x036B0C44 TBNZ X8, 0x0, 0x36B0C68
	0x036B0C48 ADRP X0, 0xA81000
	0x036B0C4C LDR X0, [X0 + 0x528]
	0x036B0C50 BL 0x1C16CF4
	0x036B0C54 ADRP X0, 0xA81000
	0x036B0C58 LDR X0, [X0 + 0x438]
	0x036B0C5C BL 0x1C16CF4
	0x036B0C60 MOVZ W8, 0x1
	0x036B0C64 STRB W8, [X22 + 0x95C]
	0x036B0C68 LDR X0, [X21]
	0x036B0C6C ADRP X21, 0xA81000
	0x036B0C70 LDR W8, [X0 + 0xE0]
	0x036B0C74 LDR X21, [X21 + 0x528]
	0x036B0C78 CBNZ W8, 0x36B0C80
	0x036B0C7C BL 0x1C16DFC
	0x036B0C80 LDR X2, [X21]
	0x036B0C84 ADD X0, X20, 0x8
	0x036B0C88 MOV X1, X19
	0x036B0C8C LDP X20, X19, [X31 + 0x20]
	0x036B0C90 LDP X22, X21, [X31 + 0x10]
	0x036B0C94 LDR X30, [X31], #0x30
	0x036B0C98 B 0x2632228
	0x036B0C9C SUB X31, X31, 0x50
	0x036B0CA0 STR X30, [X31 + 0x20]
	0x036B0CA4 STP X22, X21, [X31 + 0x30]
	0x036B0CA8 STP X20, X19, [X31 + 0x40]
	0x036B0CAC ADRP X20, 0xD30000
	0x036B0CB0 LDRB W8, [X20 + 0x95D]
	0x036B0CB4 MOV X19, X0
	0x036B0CB8 TBNZ X8, 0x0, 0x36B0D30
	0x036B0CBC ADRP X0, 0xA8F000
	0x036B0CC0 LDR X0, [X0 + 0x290]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X20, 0xD31000
	015 Move W8, [X20+2377]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {77}
	021 Move X0, 0xA90000
	022 Move X0, [X0+416]
	023 Call 0x1C17CF4
	024 Move X0, 0xA90000
	025 Move X0, [X0+424]
	026 Call 0x1C17CF4
	027 Move X0, 0xA90000
	028 Move X0, [X0+264]
	029 Call 0x1C17CF4
	030 Move X0, 0xA44000
	031 Move X0, [X0+1560]
	032 Call 0x1C17CF4
	033 Move X0, 0xA4C000
	034 Move X0, [X0+2008]
	035 Call 0x1C17CF4
	036 Move X0, 0xA78000
	037 Move X0, [X0+696]
	038 Call 0x1C17CF4
	039 Move X0, 0xA78000
	040 Move X0, [X0+704]
	041 Call 0x1C17CF4
	042 Move X0, 0xA78000
	043 Move X0, [X0+712]
	044 Call 0x1C17CF4
	045 Move X0, 0xA8B000
	046 Move X0, [X0+360]
	047 Call 0x1C17CF4
	048 Move X0, 0xA4C000
	049 Move X0, [X0+1368]
	050 Call 0x1C17CF4
	051 Move X0, 0xA78000
	052 Move X0, [X0+720]
	053 Call 0x1C17CF4
	054 Move X0, 0xA90000
	055 Move X0, [X0+432]
	056 Call 0x1C17CF4
	057 Move X0, 0xA90000
	058 Move X0, [X0+440]
	059 Call 0x1C17CF4
	060 Move X0, 0xA8E000
	061 Move X0, [X0+3576]
	062 Call 0x1C17CF4
	063 Move X0, 0xA90000
	064 Move X0, [X0+448]
	065 Call 0x1C17CF4
	066 Move X0, 0xA44000
	067 Move X0, [X0+3544]
	068 Call 0x1C17CF4
	069 Move X0, 0xA90000
	070 Move X0, [X0+456]
	071 Call 0x1C17CF4
	072 Move X0, 0xA6C000
	073 Move X0, [X0+2856]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+2377], W8
	077 Move [X31+64], X31
	078 Move [X31+72], X31
	079 Move [X31+80], X31
	080 Move [X31+32], X31
	081 Move [X31+40], X31
	082 Move [X31+28], W31
	083 Move X9, 0xA44000
	084 Move W8, [X19]
	085 Move X24, [X19+48]
	086 Move X9, [X9+1560]
	087 Compare W8, 0
	088 JumpIfEqual {353}
	089 Move W8, 200
	090 Move [X19+56], X31
	091 Move [X19+64], W8
	092 Move X0, [X9]
	093 Move W1, 1024
	094 Call 0x1C17D6C
	095 Move X8, 0xA4C000
	096 Move X8, [X8+1368]
	097 Move [X19+72], X0
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move X20, X0
	101 Move X1, X31
	102 Call MemoryStream..ctor, X0
	103 Move [X19+80], X20
	104 Move X8, 0xA4C000
	105 Move X8, [X8+2008]
	106 Move X0, [X8]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Add X0, X19, 32
	112 Move X1, X31
	113 Call CancellationToken.ThrowIfCancellationRequested, X0
	114 Move X0, [X19+40]
	115 Compare X0, 0
	116 JumpIfEqual {478}
	117 Move X8, [X0]
	118 Move X1, [X19+72]
	119 Move X4, [X19+32]
	120 Move X9, [X8+728]
	121 Move X5, [X8+736]
	122 Move W3, 1024
	123 Move W2, W31
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {477}
	127 Move X8, 0xA78000
	128 Move X8, [X8+720]
	129 Move X2, [X8]
	130 Move W1, W31
	131 Call Task`1<Int32>.ConfigureAwait, X0, X1
	132 Move X8, 0xA78000
	133 Move X8, [X8+712]
	134 Move [X31+32], X0
	135 Move [X31+40], X1
	136 Move X8, [X8]
	137 Add X0, X31, 32
	138 Move X1, X8
	139 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {433}
	144 Move X8, 0xA78000
	145 Move X8, [X8+704]
	146 Move X1, [X8]
	147 Add X0, X31, 32
	148 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	149 Move W3, W0
	150 Compare W0, 0
	151 JumpIfEqual {480}
	152 Move X0, [X19+80]
	153 Compare X0, 0
	154 JumpIfEqual {479}
	155 Move X8, [X0]
	156 Add X25, X19, 72
	157 Move X1, [X25]
	158 Move X9, [X8+904]
	159 Move X4, [X8+912]
	160 Move W2, W31
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, 0xA8E000
	163 Move X8, [X8+3576]
	164 Move [X31+60], W31
	165 Move [X31+48], X31
	166 Move X0, [X8]
	167 Call 0x1C17F10
	168 Move X20, X0
	169 Move X1, X31
	170 Call WebHeaderCollection..ctor, X0
	171 Move X0, [X19+80]
	172 Compare X0, 0
	173 JumpIfEqual {285}
	174 Move X29, 0xA90000
	175 Move X22, 0xA8B000
	176 Move X23, 0xA44000
	177 Move X26, 0xA90000
	178 Move X28, 0xA6C000
	179 Move X29, [X29+448]
	180 Move X22, [X22+360]
	181 Move X23, [X23+3544]
	182 Move X26, [X26+456]
	183 Move X28, [X28+2856]
	184 Move W27, W31
	185 Move X8, [X0]
	186 Move X1, [X8+960]
	187 Move X9, [X8+952]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move X21, X0
	190 Move X0, [X19+80]
	191 Compare X0, 0
	192 JumpIfEqual {450}
	193 Move X8, [X0]
	194 Move X9, [X8+488]
	195 Move X1, [X8+496]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X2, X0
	198 Add X1, X31, 60
	199 Add X3, X31, 48
	200 Move X0, X21
	201 Call WebConnection.ReadLine, X0, X1, X2, X3
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {104}
	206 Move X8, [X31+48]
	207 Compare X8, 0
	208 JumpIfEqual {286}
	209 Move TEMP, X27
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {219}
	213 Compare X20, 0
	214 JumpIfEqual {451}
	215 Move X0, X20
	216 Move X1, X8
	217 Move X2, X31
	218 Call WebHeaderCollection.Add, X0, X1
	219 Move W1, 32
	220 Move X0, X8
	221 Move W2, W31
	222 Move X3, X31
	223 Call String.Split, X0, X1, X2
	224 Move X21, X0
	225 Compare X0, 0
	226 JumpIfEqual {452}
	227 Move W8, [X21+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, [X21+32]
	230 Move X1, [X29]
	231 Move W2, 1
	232 Move X3, X31
	233 Call String.Compare, X0, X1, X2
	234 Compare W0, 0
	235 JumpIfEqual {254}
	236 Move W8, [X21+24]
	237 Compare W8, 0
	238 JumpIfEqual {465}
	239 Move X0, [X21+32]
	240 Move X1, [X26]
	241 Move W2, 1
	242 Move X3, X31
	243 Call String.Compare, X0, X1, X2
	244 Compare W0, 0
	245 JumpIfNotEqual {466}
	246 Move X0, [X22]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Compare X24, 0
	252 JumpIfEqual {464}
	253 Move W8, 8
	254 Move X0, [X22]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Compare X24, 0
	260 JumpIfEqual {476}
	261 Move W8, 16
	262 Move X9, [X22]
	263 Move X9, [X9+184]
	264 Move X8, [X9]
	265 Move [X24+80], X8
	266 Move W8, [X21+24]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X0, [X21+40]
	269 Move X1, X31
	270 Call UInt32.Parse, X0
	271 Move [X19+64], W0
	272 Move W8, [X21+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X0, [X23]
	275 Subtract W3, W8, 2
	276 Move W2, 2
	277 Move X1, X21
	278 Move X4, X31
	279 Call String.Join, X0, X1, X2, X3
	280 Move [X24+56], X0
	281 Move X0, [X19+80]
	282 Move W27, 1
	283 Compare X0, 0
	284 JumpIfNotEqual {185}
	285 Call 0x1C17F20
	286 Compare X20, 0
	287 JumpIfEqual {490}
	288 Move X1, [X28]
	289 Move X0, X20
	290 Move X2, X31
	291 Call NameValueCollection.get_Item, X0, X1
	292 Move X21, X0
	293 Move X1, X31
	294 Call String.IsNullOrEmpty, X0
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfEqual {307}
	299 Add X1, X31, 28
	300 Move X0, X21
	301 Move X2, X31
	302 Call Int32.TryParse, X0, X1
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {308}
	307 Move [X31+28], W31
	308 Move X0, [X19+80]
	309 Compare X0, 0
	310 JumpIfEqual {491}
	311 Move X8, [X0]
	312 Move X9, [X8+488]
	313 Move X1, [X8+496]
	314 NotImplemented "Instruction BLR not yet implemented."
	315 NotImplemented "Instruction LDRSW not yet implemented."
	316 NotImplemented "Instruction LDRSW not yet implemented."
	317 Subtract X8, X0, X22
	318 Subtract X8, X8, X23
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X0, [X19+80]
	321 Compare X0, 0
	322 JumpIfEqual {492}
	323 Move X8, [X0]
	324 Move X9, [X8+488]
	325 Move X1, [X8+496]
	326 NotImplemented "Instruction BLR not yet implemented."
	327 Move X8, 0xA44000
	328 Move W9, [X31+28]
	329 Move X8, [X8+1560]
	330 Subtract W10, W0, W22
	331 Subtract W1, W10, W9
	332 Move X8, [X8]
	333 Move X0, X8
	334 Call 0x1C17D6C
	335 Move X8, X0
	336 Move X0, [X19+80]
	337 Move [X19+56], X8
	338 Compare X0, 0
	339 JumpIfEqual {493}
	340 Move X8, [X0]
	341 Move X1, [X8+960]
	342 Move X9, [X8+952]
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Move X2, [X19+56]
	345 Compare X2, 0
	346 JumpIfEqual {494}
	347 Move W8, [X31+28]
	348 Move W4, [X2+24]
	349 Add W1, W8, W22
	350 Move W3, W31
	351 Move X5, X31
	352 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	353 NotImplemented "Instruction LDUR not yet implemented."
	354 Move TEMP, 0
	355 Not TEMP
	356 Move W8, TEMP
	357 Move [X31+2], V0
	358 Move [X19+88], X31
	359 Move [X19+96], X31
	360 Move [X19], W8
	361 Move X0, [X19+80]
	362 Compare X0, 0
	363 JumpIfEqual {495}
	364 Move X8, [X0]
	365 Move X21, [X19+40]
	366 Move X9, [X8+488]
	367 Move X1, [X8+496]
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Compare X24, 0
	370 JumpIfEqual {496}
	371 Add W8, W23, W22
	372 Subtract W2, W8, W0
	373 Move X1, X21
	374 Call WebConnectionTunnel.FlushContents, X0, X1, X2
	375 Move X8, 0xA90000
	376 Move X2, [X19+56]
	377 Move W3, [X19+64]
	378 Move X8, [X8+440]
	379 Move [X31+96], X31
	380 Move [X31+104], X31
	381 Move [X31+112], X31
	382 Move X4, [X8]
	383 Add X0, X31, 96
	384 Move X1, X20
	385 Call ValueTuple`3<Object, Object, Int32>..ctor, X0, X1, X2, X3
	386 Move X8, [X31+112]
	387 Move V0, [X31+6]
	388 Move X9, 0xA90000
	389 Move [X31+80], X8
	390 Move TEMP, 1
	391 Not TEMP
	392 Move W8, TEMP
	393 Move [X31+4], V0
	394 Move [X19], W8
	395 Move [X19+56], X31
	396 Move [X25], X31
	397 Move [X25+8], X31
	398 Move V0, [X31+4]
	399 Move X8, [X31+80]
	400 Move X9, [X9+264]
	401 Add X19, X19, 8
	402 Move [X31], V0
	403 Move [X31+16], X8
	404 Move X0, [X9]
	405 Move W8, [X0+224]
	406 Compare W8, 0
	407 JumpIfNotEqual {409}
	408 Call 0x1C17DFC
	409 Move X9, 0xA90000
	410 Move V0, [X31]
	411 Move X8, [X31+16]
	412 Move X9, [X9+424]
	413 Add X1, X31, 96
	414 Move X0, X19
	415 Move [X31+6], V0
	416 Move X2, [X9]
	417 Move [X31+112], X8
	418 Call AsyncTaskMethodBuilder`1<ValueTuple`3<Object, Object, Int32>>.SetResult, X0, X1
	419 Move X20, [X31+208]
	420 Move X19, [X31+216]
	421 Move X22, [X31+192]
	422 Move X21, [X31+200]
	423 Move X24, [X31+176]
	424 Move X23, [X31+184]
	425 Move X26, [X31+160]
	426 Move X25, [X31+168]
	427 Move X28, [X31+144]
	428 Move X27, [X31+152]
	429 Move X29, [X31+128]
	430 Move X30, [X31+136]
	431 Add X31, X31, 224
	432 Return 
	433 Move [X19], W31
	434 Move V0, [X31+2]
	435 Move X8, 0xA90000
	436 Move [X19+88], V0
	437 Move X8, [X8+264]
	438 Move X0, [X8]
	439 Move W8, [X0+224]
	440 Compare W8, 0
	441 JumpIfNotEqual {443}
	442 Call 0x1C17DFC
	443 Move X8, 0xA90000
	444 Move X8, [X8+416]
	445 Add X0, X19, 8
	446 Move X3, [X8]
	447 Add X1, X31, 32
	448 Move X2, X19
	449 Call AsyncTaskMethodBuilder`1<ValueTuple`3<Object, Object, Int32>>.AwaitUnsafeOnCompleted, X0, X1, X2
	450 Call 0x1C17F20
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Move W0, 11
	454 Move X1, X31
	455 Call WebConnection.GetException, X0, X1
	456 Move X20, X0
	457 Move X0, 0xA90000
	458 Move X0, [X0+432]
	459 Call 0x1C17D08
	460 Move X1, X0
	461 Move X0, X20
	462 Call 0x1C17DEC
	463 Call 0x1C17F28
	464 Call 0x1C17F20
	465 Call 0x1C17F28
	466 Move W0, 11
	467 Move X1, X31
	468 Call WebConnection.GetException, X0, X1
	469 Move X20, X0
	470 Move X0, 0xA90000
	471 Move X0, [X0+432]
	472 Call 0x1C17D08
	473 Move X1, X0
	474 Move X0, X20
	475 Call 0x1C17DEC
	476 Call 0x1C17F20
	477 Call 0x1C17F20
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Move W0, 11
	481 Move X1, X31
	482 Call WebConnection.GetException, X0, X1
	483 Move X20, X0
	484 Move X0, 0xA90000
	485 Move X0, [X0+432]
	486 Call 0x1C17D08
	487 Move X1, X0
	488 Move X0, X20
	489 Call 0x1C17DEC
	490 Call 0x1C17F20
	491 Call 0x1C17F20
	492 Call 0x1C17F20
	493 Call 0x1C17F20
	494 Call 0x1C17F20
	495 Call 0x1C17F20
	496 Call 0x1C17F20
	497 Move X20, X0
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Move X0, X20
	500 Call 0x3EB2AD0
	501 Move X20, X0
	502 Move X0, 0xA44000
	503 Move X0, [X0+2000]
	504 Call 0x1C17D08
	505 Move X8, [X20]
	506 Move X1, [X8]
	507 Call 0x1C18270
	508 Move TEMP, X0
	509 And TEMP, TEMP, 1
	510 Compare TEMP, 1
	511 JumpIfNotEqual {536}
	512 Move X20, [X20]
	513 Call 0x3EB2AE0
	514 Move TEMP, 1
	515 Not TEMP
	516 Move W8, TEMP
	517 Move [X19+56], X31
	518 Move [X19], W8
	519 Move [X19+72], X31
	520 Move [X19+80], X31
	521 Move X0, 0xA90000
	522 Move X0, [X0+264]
	523 Add X21, X19, 8
	524 Call 0x1C17D08
	525 Move W8, [X0+224]
	526 Compare W8, 0
	527 JumpIfNotEqual {529}
	528 Call 0x1C17DFC
	529 Move X0, 0xA90000
	530 Move X0, [X0+464]
	531 Call 0x1C17D08
	532 Move X2, X0
	533 Move X0, X21
	534 Move X1, X20
	535 Call AsyncTaskMethodBuilder`1<ValueTuple`3<Object, Object, Int32>>.SetException, X0, X1
	536 Move W0, 8
	537 Call 0x3EB2AF0
	538 Move X8, [X20]
	539 Move [X0], X8
	540 Move X1, 0x805000
	541 Add X1, X1, 3672
	542 Move X2, X31
	543 Call 0x3EB2B00
	544 Move X20, X0
	545 Call 0x3EB2AE0
	546 Move X0, X20
	547 Call 0x1D2D690
	548 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B0CC4 BL 0x1C16CF4
	0x036B0CC8 ADRP X0, 0xA8F000
	0x036B0CCC LDR X0, [X0 + 0x298]
	0x036B0CD0 BL 0x1C16CF4
	0x036B0CD4 ADRP X0, 0xA8E000
	0x036B0CD8 LDR X0, [X0 + 0xA18]
	0x036B0CDC BL 0x1C16CF4
	0x036B0CE0 ADRP X0, 0xA8E000
	0x036B0CE4 LDR X0, [X0 + 0xA30]
	0x036B0CE8 BL 0x1C16CF4
	0x036B0CEC ADRP X0, 0xA8E000
	0x036B0CF0 LDR X0, [X0 + 0xA40]
	0x036B0CF4 BL 0x1C16CF4
	0x036B0CF8 ADRP X0, 0xA8E000
	0x036B0CFC LDR X0, [X0 + 0xA60]
	0x036B0D00 BL 0x1C16CF4
	0x036B0D04 ADRP X0, 0xA8F000
	0x036B0D08 LDR X0, [X0 + 0x280]
	0x036B0D0C BL 0x1C16CF4
	0x036B0D10 ADRP X0, 0xA8F000
	0x036B0D14 LDR X0, [X0 + 0x2A0]
	0x036B0D18 BL 0x1C16CF4
	0x036B0D1C ADRP X0, 0xA8F000
	0x036B0D20 LDR X0, [X0 + 0x2A8]
	0x036B0D24 BL 0x1C16CF4
	0x036B0D28 MOVZ W8, 0x1
	0x036B0D2C STRB W8, [X20 + 0x95D]
	0x036B0D30 STP X31, X31, [X31 + 0x10]
	0x036B0D34 STP X31, X31, [X31]
	0x036B0D38 LDR W8, [X19]
	0x036B0D3C LDR X20, [X19 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD31000
	007 Move X21, 0xA90000
	008 Move W8, [X22+2378]
	009 Move X21, [X21+264]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA90000
	017 Move X0, [X0+472]
	018 Call 0x1C17CF4
	019 Move X0, 0xA90000
	020 Move X0, [X0+264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2378], W8
	024 Move X0, [X21]
	025 Move X21, 0xA90000
	026 Move W8, [X0+224]
	027 Move X21, [X21+472]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<ValueTuple`3<Object, Object, Int32>>.SetStateMachine, X0, X1
	040 Return 

