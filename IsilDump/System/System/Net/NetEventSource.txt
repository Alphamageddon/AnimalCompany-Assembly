Type: System.Net.NetEventSource

Method: System.Void Enter(System.Object thisOrContextObject, System.FormattableString formattableString = null, System.String memberName = null)

Disassembly:
	0x0366C228 LDP X20, X19, [X31 + 0x20]
	0x0366C22C LDP X22, X21, [X31 + 0x10]
	0x0366C230 LDP X30, X23, [X31], #0x30
	0x0366C234 RET
	0x0366C238 BL 0x1C16F20
	0x0366C23C STR X30, [X31 - 0x40]!
	0x0366C240 STP X24, X23, [X31 + 0x10]
	0x0366C244 STP X22, X21, [X31 + 0x20]
	0x0366C248 STP X20, X19, [X31 + 0x30]
	0x0366C24C ADRP X24, 0xD74000
	0x0366C250 LDRB W8, [X24 + 0x747]
	0x0366C254 MOV X19, X4
	0x0366C258 MOV X20, X3
	0x0366C25C MOV X22, X2
	0x0366C260 MOV X21, X1
	0x0366C264 MOV X23, X0
	0x0366C268 TBNZ X8, 0x0, 0x366C280
	0x0366C26C ADRP X0, 0xAD1000
	0x0366C270 LDR X0, [X0 + 0x6F0]
	0x0366C274 BL 0x1C16CF4
	0x0366C278 MOVZ W8, 0x1
	0x0366C27C STRB W8, [X24 + 0x747]
	0x0366C280 CBZ X23, 0x366C2C0
	0x0366C284 ADRP X8, 0xAD1000
	0x0366C288 LDR X8, [X8 + 0x6F0]
	0x0366C28C CMP X22, 0x0
	0x0366C290 MOV X0, X23
	0x0366C294 MOV X2, X21
	0x0366C298 LDR X8, [X8]
	0x0366C29C MOV X4, X20
	0x0366C2A0 MOV X5, X19
	0x0366C2A4 LDP X20, X19, [X31 + 0x30]
	0x0366C2A8 CSEL X3, X8, X22, EQ
	0x0366C2AC LDP X22, X21, [X31 + 0x20]
	0x0366C2B0 LDP X24, X23, [X31 + 0x10]
	0x0366C2B4 MOVZ W1, 0x3
	0x0366C2B8 LDR X30, [X31], #0x40
	0x0366C2BC B 0x366C2C4
	0x0366C2C0 BL 0x1C16F20
	0x0366C2C4 STP X29, X30, [X31 - 0x60]!
	0x0366C2C8 STP X28, X27, [X31 + 0x10]
	0x0366C2CC STP X26, X25, [X31 + 0x20]
	0x0366C2D0 STP X24, X23, [X31 + 0x30]
	0x0366C2D4 STP X22, X21, [X31 + 0x40]
	0x0366C2D8 STP X20, X19, [X31 + 0x50]
	0x0366C2DC ADD X29, X31, 0x0
	0x0366C2E0 SUB X31, X31, 0x20
	0x0366C2E4 MRS X26, 0xC000
	0x0366C2E8 LDR X8, [X26 + 0x28]
	0x0366C2EC ADRP X19, 0xD74000
	0x0366C2F0 MOV X21, X5
	0x0366C2F4 MOV X22, X4
	0x0366C2F8 STUR X8, [X29 - 0x8]
	0x0366C2FC LDRB W8, [X19 + 0x74C]
	0x0366C300 MOV X23, X3
	0x0366C304 MOV X24, X2
	0x0366C308 MOV W25, W1
	0x0366C30C MOV X20, X0
	0x0366C310 TBNZ X8, 0x0, 0x366C334
	0x0366C314 ADRP X0, 0xAD1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD75000
	008 Move X23, 0xAD2000
	009 Move W8, [X22+1849]
	010 Move X23, [X23+1128]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xAD2000
	019 Move X0, [X0+1128]
	020 Call 0x1C17CF4
	021 Move X0, 0xA88000
	022 Move X0, [X0+2440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1849], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call NetEventSource.get_IsEnabled
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {70}
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X23]
	042 Move X8, [X0+184]
	043 Move X0, X21
	044 Move X22, [X8]
	045 Call NetEventSource.IdOf, X0
	046 Move X21, X0
	047 Compare X20, 0
	048 JumpIfEqual {77}
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Call NetEventSource.Format, X0
	056 Move X3, X0
	057 Compare X22, 0
	058 JumpIfEqual {82}
	059 Move X0, X22
	060 Move X1, X21
	061 Move X2, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call NetEventSource.Enter, X0, X1, X2, X3
	069 Return 
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return 
	077 Move X8, 0xA88000
	078 Move X8, [X8+2440]
	079 Move X3, [X8]
	080 Compare X22, 0
	081 JumpIfNotEqual {59}
	082 Call 0x1C17F20

Method: System.Void Enter(System.Object thisOrContextObject, System.Object arg0, System.String memberName = null)

Disassembly:
	0x0366C7D4 MOVZ W8, 0x1
	0x0366C7D8 STRB W8, [X26 + 0x206]
	0x0366C7DC LDR W8, [X0 + 0xE0]
	0x0366C7E0 CBNZ W8, 0x366C7EC
	0x0366C7E4 BL 0x1C16DFC
	0x0366C7E8 LDR X0, [X24]
	0x0366C7EC CBZ X23, 0x366C834
	0x0366C7F0 LDR X8, [X0 + 0xB8]
	0x0366C7F4 LDR X9, [X23]
	0x0366C7F8 MOV X0, X23
	0x0366C7FC MOV X1, X21
	0x0366C800 LDRB W4, [X8 + 0x20]
	0x0366C804 LDR X8, [X9 + 0x3D8]
	0x0366C808 LDR X7, [X9 + 0x3E0]
	0x0366C80C MOV X2, X22
	0x0366C810 MOV W3, W25
	0x0366C814 MOV X5, X20
	0x0366C818 MOV X6, X19
	0x0366C81C LDP X20, X19, [X31 + 0x40]
	0x0366C820 LDP X22, X21, [X31 + 0x30]
	0x0366C824 LDP X24, X23, [X31 + 0x20]
	0x0366C828 LDP X26, X25, [X31 + 0x10]
	0x0366C82C LDR X30, [X31], #0x50
	0x0366C830 BR X8
	0x0366C834 BL 0x1C16F20
	0x0366C838 STR X30, [X31 - 0x10]!
	0x0366C83C LDR X0, [X0 + 0x48]
	0x0366C840 CBZ X0, 0x366C858
	0x0366C844 LDR X8, [X0]
	0x0366C848 LDR X3, [X8 + 0x3E8]
	0x0366C84C LDR X2, [X8 + 0x3F0]
	0x0366C850 LDR X30, [X31], #0x10
	0x0366C854 BR X3
	0x0366C858 BL 0x1C16F20
	0x0366C85C STR X30, [X31 - 0x10]!
	0x0366C860 LDR X0, [X0 + 0x48]
	0x0366C864 CBZ X0, 0x366C87C
	0x0366C868 LDR X8, [X0]
	0x0366C86C LDR X7, [X8 + 0x2F8]
	0x0366C870 LDR X6, [X8 + 0x300]
	0x0366C874 LDR X30, [X31], #0x10
	0x0366C878 BR X7
	0x0366C87C BL 0x1C16F20
	0x0366C880 STR X30, [X31 - 0x10]!
	0x0366C884 LDR X0, [X0 + 0x48]
	0x0366C888 CBZ X0, 0x366C8A0
	0x0366C88C LDR X8, [X0]
	0x0366C890 LDR X3, [X8 + 0x308]
	0x0366C894 LDR X2, [X8 + 0x310]
	0x0366C898 LDR X30, [X31], #0x10
	0x0366C89C BR X3
	0x0366C8A0 BL 0x1C16F20
	0x0366C8A4 STR X30, [X31 - 0x10]!
	0x0366C8A8 LDR X0, [X0 + 0x48]
	0x0366C8AC CBZ X0, 0x366C8C4
	0x0366C8B0 LDR X8, [X0]
	0x0366C8B4 LDR X5, [X8 + 0x388]
	0x0366C8B8 LDR X4, [X8 + 0x390]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD75000
	008 Move X22, 0xAD2000
	009 Move W8, [X23+1850]
	010 Move X22, [X22+1128]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xAD2000
	019 Move X0, [X0+1128]
	020 Call 0x1C17CF4
	021 Move X0, 0xAD2000
	022 Move X0, [X0+1784]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1850], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call NetEventSource.get_IsEnabled
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {70}
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X22]
	042 Move X8, [X0+184]
	043 Move X0, X21
	044 Move X22, [X8]
	045 Call NetEventSource.IdOf, X0
	046 Move X21, X0
	047 Move X0, X20
	048 Call NetEventSource.Format, X0
	049 Move X8, 0xAD2000
	050 Move X8, [X8+1784]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X8, [X8]
	054 Move X0, X8
	055 Call String.Format, X0, X1
	056 Compare X22, 0
	057 JumpIfEqual {77}
	058 Move X3, X0
	059 Move X0, X22
	060 Move X1, X21
	061 Move X2, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call NetEventSource.Enter, X0, X1, X2, X3
	069 Return 
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return 
	077 Call 0x1C17F20

Method: System.Void Enter(System.Object thisOrContextObject, System.Object arg0, System.Object arg1, System.Object arg2, System.String memberName = null)

Disassembly:
	0x0366CCA0 LDRB W12, [X12 + 0x1]
	0x0366CCA4 ADDS X10, X10, 0x1
	0x0366CCA8 BFM W12, W11, 0x18, 0x7
	0x0366CCAC STRH W12, [X9, X8, LSL]
	0x0366CCB0 ADD X8, X8, 0x2
	0x0366CCB4 B.CC 0x366CC78
	0x0366CCB8 STR X31, [X20 + 0x20]
	0x0366CCBC STR W31, [X20 + 0x28]
	0x0366CCC0 STR W19, [X20 + 0x10]
	0x0366CCC4 LDP X20, X19, [X31 + 0x20]
	0x0366CCC8 LDP X22, X21, [X31 + 0x10]
	0x0366CCCC LDP X30, X23, [X31], #0x30
	0x0366CCD0 RET
	0x0366CCD4 BL 0x1C16F28
	0x0366CCD8 BL 0x1C16F20
	0x0366CCDC ADRP X0, 0xA8F000
	0x0366CCE0 LDR X0, [X0 + 0x578]
	0x0366CCE4 BL 0x1C16D08
	0x0366CCE8 BL 0x1C16F10
	0x0366CCEC MOV X19, X0
	0x0366CCF0 ADRP X0, 0xAD1000
	0x0366CCF4 LDR X0, [X0 + 0x748]
	0x0366CCF8 BL 0x1C16D08
	0x0366CCFC MOV X20, X0
	0x0366CD00 ADRP X0, 0xAD1000
	0x0366CD04 LDR X0, [X0 + 0x738]
	0x0366CD08 BL 0x1C16D08
	0x0366CD0C MOV X2, X0
	0x0366CD10 MOV X0, X19
	0x0366CD14 MOV X1, X20
	0x0366CD18 MOV X3, X31
	0x0366CD1C BL 0x330E16C
	0x0366CD20 B 0x366CD54
	0x0366CD24 ADRP X0, 0xA8F000
	0x0366CD28 LDR X0, [X0 + 0x760]
	0x0366CD2C BL 0x1C16D08
	0x0366CD30 BL 0x1C16F10
	0x0366CD34 MOV X19, X0
	0x0366CD38 ADRP X0, 0xAD1000
	0x0366CD3C LDR X0, [X0 + 0x750]
	0x0366CD40 BL 0x1C16D08
	0x0366CD44 MOV X1, X0
	0x0366CD48 MOV X0, X19
	0x0366CD4C MOV X2, X31
	0x0366CD50 BL 0x3316014
	0x0366CD54 ADRP X0, 0xAD1000
	0x0366CD58 LDR X0, [X0 + 0x758]
	0x0366CD5C BL 0x1C16D08
	0x0366CD60 MOV X1, X0
	0x0366CD64 MOV X0, X19
	0x0366CD68 BL 0x1C16DEC
	0x0366CD6C STP X30, X23, [X31 - 0x30]!
	0x0366CD70 STP X22, X21, [X31 + 0x10]
	0x0366CD74 STP X20, X19, [X31 + 0x20]
	0x0366CD78 ADRP X23, 0xD74000
	0x0366CD7C ADRP X22, 0xAB7000
	0x0366CD80 LDRB W8, [X23 + 0x754]
	0x0366CD84 LDR X22, [X22 + 0x8D0]
	0x0366CD88 MOV W19, W3
	0x0366CD8C MOV X21, X1
	0x0366CD90 MOV X20, X0
	0x0366CD94 TBNZ X8, 0x0, 0x366CDAC
	0x0366CD98 ADRP X0, 0xAB7000
	0x0366CD9C LDR X0, [X0 + 0x8D0]
	0x0366CDA0 BL 0x1C16CF4
	0x0366CDA4 MOVZ W8, 0x1
	0x0366CDA8 STRB W8, [X23 + 0x754]
	0x0366CDAC MOV X0, X20
	0x0366CDB0 MOV X1, X31
	0x0366CDB4 BL 0x33BDD8C
	0x0366CDB8 LDR X0, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD75000
	010 Move X24, 0xAD2000
	011 Move W8, [X25+1851]
	012 Move X24, [X24+1128]
	013 Move X19, X4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xAD2000
	023 Move X0, [X0+1128]
	024 Call 0x1C17CF4
	025 Move X0, 0xAB1000
	026 Move X0, [X0+3352]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1851], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Call NetEventSource.get_IsEnabled
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {84}
	040 Move X0, [X24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X24]
	046 Move X8, [X0+184]
	047 Move X0, X23
	048 Move X24, [X8]
	049 Call NetEventSource.IdOf, X0
	050 Move X23, X0
	051 Move X0, X22
	052 Call NetEventSource.Format, X0
	053 Move X22, X0
	054 Move X0, X21
	055 Call NetEventSource.Format, X0
	056 Move X21, X0
	057 Move X0, X20
	058 Call NetEventSource.Format, X0
	059 Move X8, 0xAB1000
	060 Move X8, [X8+3352]
	061 Move X3, X0
	062 Move X1, X22
	063 Move X2, X21
	064 Move X8, [X8]
	065 Move X4, X31
	066 Move X0, X8
	067 Call String.Format, X0, X1, X2, X3
	068 Compare X24, 0
	069 JumpIfEqual {93}
	070 Move X3, X0
	071 Move X0, X24
	072 Move X1, X23
	073 Move X2, X19
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move X30, [X31+64]
	081 Move X25, [X31+72]
	082 Call NetEventSource.Enter, X0, X1, X2, X3
	083 Return 
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Move X25, [X31+72]
	092 Return 
	093 Call 0x1C17F20

Method: System.Void Enter(System.String thisOrContextObject, System.String memberName, System.String parameters)

Disassembly:
	0x0366C758 LDR X0, [X0 + 0x230]
	0x0366C75C BL 0x1C16CF4
	0x0366C760 MOVZ W8, 0x1
	0x0366C764 STRB W8, [X21 + 0x750]
	0x0366C768 LDR X0, [X24]
	0x0366C76C LDP X23, X21, [X22 + 0x48]
	0x0366C770 LDR X22, [X22 + 0x58]
	0x0366C774 LDR W8, [X0 + 0xE0]
	0x0366C778 CBNZ W8, 0x366C780
	0x0366C77C BL 0x1C16DFC
	0x0366C780 ADRP X25, 0xD74000
	0x0366C784 LDRB W8, [X25 + 0x2F8]
	0x0366C788 CBNZ W8, 0x366C7A0
	0x0366C78C ADRP X0, 0xAB5000
	0x0366C790 LDR X0, [X0 + 0x230]
	0x0366C794 BL 0x1C16CF4
	0x0366C798 MOVZ W8, 0x1
	0x0366C79C STRB W8, [X25 + 0x2F8]
	0x0366C7A0 LDR X0, [X24]
	0x0366C7A4 LDR W8, [X0 + 0xE0]
	0x0366C7A8 CBNZ W8, 0x366C7B4
	0x0366C7AC BL 0x1C16DFC
	0x0366C7B0 LDR X0, [X24]
	0x0366C7B4 LDR X8, [X0 + 0xB8]
	0x0366C7B8 ADRP X26, 0xD70000
	0x0366C7BC LDRB W9, [X26 + 0x206]
	0x0366C7C0 LDR W25, [X8 + 0x24]
	0x0366C7C4 CBNZ W9, 0x366C7DC
	0x0366C7C8 MOV X0, X24
	0x0366C7CC BL 0x1C16CF4
	0x0366C7D0 LDR X0, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD75000
	008 Move W8, [X23+1852]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAD2000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1852], W8
	022 Compare X21, 0
	023 JumpIfEqual {42}
	024 Move X8, 0xAD2000
	025 Move X8, [X8+1776]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X21
	028 Move X2, X20
	029 Move X8, [X8]
	030 Move X4, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move W1, 1
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X5, X31
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call EventSource.WriteEvent, X0, X1, X2, X3, X4
	041 Return 
	042 Call 0x1C17F20

Method: System.Void Exit(System.Object thisOrContextObject, System.FormattableString formattableString = null, System.String memberName = null)

Disassembly:
	0x0366CDBC MOVZ W1, 0x8
	0x0366CDC0 BL 0x1C16D6C
	0x0366CDC4 CBZ X0, 0x366CE20
	0x0366CDC8 LDR W8, [X0 + 0x18]
	0x0366CDCC UBFM X9, X8, 0x20, 0x1F
	0x0366CDD0 CMP X9, 0x1
	0x0366CDD4 B.LT 0x366CE00
	0x0366CDD8 MOV X9, X31
	0x0366CDDC SXTW X10, W8
	0x0366CDE0 ADD X11, X0, 0x20
	0x0366CDE4 CMP X9, X8
	0x0366CDE8 B.CS 0x366CE1C
	0x0366CDEC LDRH W12, [X21], #0x2
	0x0366CDF0 STRH W12, [X11, X9, LSL #1]
	0x0366CDF4 ADD X9, X9, 0x1
	0x0366CDF8 CMP X10, X9
	0x0366CDFC B.NE 0x366CDE4
	0x0366CE00 STP X0, X31, [X20 + 0x18]
	0x0366CE04 STR W31, [X20 + 0x28]
	0x0366CE08 STR W19, [X20 + 0x10]
	0x0366CE0C LDP X20, X19, [X31 + 0x20]
	0x0366CE10 LDP X22, X21, [X31 + 0x10]
	0x0366CE14 LDP X30, X23, [X31], #0x30
	0x0366CE18 RET
	0x0366CE1C BL 0x1C16F28
	0x0366CE20 BL 0x1C16F20
	0x0366CE24 STP X30, X21, [X31 - 0x20]!
	0x0366CE28 STP X20, X19, [X31 + 0x10]
	0x0366CE2C MOV X20, X1
	0x0366CE30 MOV X1, X31
	0x0366CE34 MOV W19, W2
	0x0366CE38 MOV X21, X0
	0x0366CE3C BL 0x33BDD8C
	0x0366CE40 STP X20, X31, [X21 + 0x18]
	0x0366CE44 STR W19, [X21 + 0x10]
	0x0366CE48 LDP X20, X19, [X31 + 0x10]
	0x0366CE4C STR W31, [X21 + 0x28]
	0x0366CE50 LDP X30, X21, [X31], #0x20
	0x0366CE54 RET
	0x0366CE58 STP X30, X21, [X31 - 0x20]!
	0x0366CE5C STP X20, X19, [X31 + 0x10]
	0x0366CE60 ADRP X21, 0xD74000
	0x0366CE64 LDRB W8, [X21 + 0x755]
	0x0366CE68 MOV X19, X1
	0x0366CE6C MOV X20, X0
	0x0366CE70 TBNZ X8, 0x0, 0x366CE94
	0x0366CE74 ADRP X0, 0xA94000
	0x0366CE78 LDR X0, [X0 + 0x968]
	0x0366CE7C BL 0x1C16CF4
	0x0366CE80 ADRP X0, 0xABC000
	0x0366CE84 LDR X0, [X0 + 0x260]
	0x0366CE88 BL 0x1C16CF4
	0x0366CE8C MOVZ W8, 0x1
	0x0366CE90 STRB W8, [X21 + 0x755]
	0x0366CE94 CBZ X19, 0x366CEB0
	0x0366CE98 LDR W2, [X19 + 0x18]
	0x0366CE9C ADD X1, X19, 0x20
	0x0366CEA0 MOV X0, X20
	0x0366CEA4 LDP X20, X19, [X31 + 0x10]
	0x0366CEA8 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD75000
	008 Move X23, 0xAD2000
	009 Move W8, [X22+1853]
	010 Move X23, [X23+1128]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xAD2000
	019 Move X0, [X0+1128]
	020 Call 0x1C17CF4
	021 Move X0, 0xA88000
	022 Move X0, [X0+2440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1853], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call NetEventSource.get_IsEnabled
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {68}
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X23]
	042 Move X8, [X0+184]
	043 Move X0, X21
	044 Move X22, [X8]
	045 Call NetEventSource.IdOf, X0
	046 Move X21, X0
	047 Compare X20, 0
	048 JumpIfEqual {75}
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Call NetEventSource.Format, X0
	056 Move X3, X0
	057 Compare X22, 0
	058 JumpIfEqual {80}
	059 Move X0, X22
	060 Move X1, X21
	061 Move X2, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Return 
	075 Move X8, 0xA88000
	076 Move X8, [X8+2440]
	077 Move X3, [X8]
	078 Compare X22, 0
	079 JumpIfNotEqual {59}
	080 Call 0x1C17F20

Method: System.Void Exit(System.String thisOrContextObject, System.String memberName, System.String result)

Disassembly:
	0x0366CEAC B 0x366CEC4
	0x0366CEB0 ADRP X8, 0xA94000
	0x0366CEB4 LDR X8, [X8 + 0x968]
	0x0366CEB8 LDR X0, [X8]
	0x0366CEBC BL 0x19903D0
	0x0366CEC0 BL 0x366CBA4
	0x0366CEC4 STR X30, [X31 - 0x30]!
	0x0366CEC8 STP X22, X21, [X31 + 0x10]
	0x0366CECC STP X20, X19, [X31 + 0x20]
	0x0366CED0 ADRP X22, 0xD74000
	0x0366CED4 LDRB W8, [X22 + 0x756]
	0x0366CED8 MOV X21, X2
	0x0366CEDC MOV X19, X1
	0x0366CEE0 MOV X20, X0
	0x0366CEE4 TBNZ X8, 0x0, 0x366CF08
	0x0366CEE8 ADRP X0, 0xAB6000
	0x0366CEEC LDR X0, [X0 + 0xAC0]
	0x0366CEF0 BL 0x1C16CF4
	0x0366CEF4 ADRP X0, 0xAB7000
	0x0366CEF8 LDR X0, [X0 + 0x8D0]
	0x0366CEFC BL 0x1C16CF4
	0x0366CF00 MOVZ W8, 0x1
	0x0366CF04 STRB W8, [X22 + 0x756]
	0x0366CF08 MOV X0, X20
	0x0366CF0C MOV X1, X31
	0x0366CF10 BL 0x33BDD8C
	0x0366CF14 CMP W21, 0x10
	0x0366CF18 B.EQ 0x366CF38
	0x0366CF1C CMP W21, 0x4
	0x0366CF20 B.NE 0x366CFB4
	0x0366CF24 LDR W8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD75000
	008 Move W8, [X23+1854]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAD2000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1854], W8
	022 Compare X21, 0
	023 JumpIfEqual {42}
	024 Move X8, 0xAD2000
	025 Move X8, [X8+1776]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X21
	028 Move X2, X20
	029 Move X8, [X8]
	030 Move X4, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move W1, 2
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X5, X31
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call EventSource.WriteEvent, X0, X1, X2, X3, X4
	041 Return 
	042 Call 0x1C17F20

Method: System.Void Info(System.Object thisOrContextObject, System.FormattableString formattableString = null, System.String memberName = null)

Disassembly:
	0x0366B3CC MOV X2, X0
	0x0366B3D0 MOV X0, X20
	0x0366B3D4 MOV X3, X31
	0x0366B3D8 BL 0x32274B8
	0x0366B3DC B 0x366B3EC
	0x0366B3E0 ADRP X8, 0xA92000
	0x0366B3E4 LDR X8, [X8 + 0xEC0]
	0x0366B3E8 LDR X0, [X8]
	0x0366B3EC LDP X20, X19, [X31 + 0x20]
	0x0366B3F0 LDP X30, X21, [X31 + 0x10]
	0x0366B3F4 ADD X31, X31, 0x30
	0x0366B3F8 RET
	0x0366B3FC BL 0x1C16F20
	0x0366B400 STR X30, [X31 - 0x50]!
	0x0366B404 STP X26, X25, [X31 + 0x10]
	0x0366B408 STP X24, X23, [X31 + 0x20]
	0x0366B40C STP X22, X21, [X31 + 0x30]
	0x0366B410 STP X20, X19, [X31 + 0x40]
	0x0366B414 ADRP X20, 0xD75000
	0x0366B418 LDRB W8, [X20 + 0x74B]
	0x0366B41C MOV X19, X0
	0x0366B420 TBNZ X8, 0x0, 0x366B444
	0x0366B424 ADRP X0, 0xAD2000
	0x0366B428 LDR X0, [X0 + 0x468]
	0x0366B42C BL 0x1C16CF4
	0x0366B430 ADRP X0, 0xA88000
	0x0366B434 LDR X0, [X0 + 0x9D0]
	0x0366B438 BL 0x1C16CF4
	0x0366B43C MOVZ W8, 0x1
	0x0366B440 STRB W8, [X20 + 0x74B]
	0x0366B444 CBZ X19, 0x366B748
	0x0366B448 LDR X8, [X19]
	0x0366B44C MOV X0, X19
	0x0366B450 LDP X9, X1, [X8 + 0x1A8]
	0x0366B454 BLR X9
	0x0366B458 CMP W0, 0x3
	0x0366B45C B.HI 0x366B4A0
	0x0366B460 ADRP X9, 0xFFFFFFFFFD52C000
	0x0366B464 MOV W8, W0
	0x0366B468 ADD X9, X9, 0x790
	0x0366B46C ADR X10, 0x10
	0x0366B470 LDRB W11, [X9, X8, LSL]
	0x0366B474 ADD X10, X10, X11, 0x2, LSL
	0x0366B478 BR X10
	0x0366B47C LDR X8, [X19]
	0x0366B480 MOV X0, X19
	0x0366B484 LDP X20, X19, [X31 + 0x40]
	0x0366B488 LDP X22, X21, [X31 + 0x30]
	0x0366B48C LDP X2, X1, [X8 + 0x188]
	0x0366B490 LDP X24, X23, [X31 + 0x20]
	0x0366B494 LDP X26, X25, [X31 + 0x10]
	0x0366B498 LDR X30, [X31], #0x50
	0x0366B49C BR X2
	0x0366B4A0 LDR X8, [X19]
	0x0366B4A4 MOV X0, X19
	0x0366B4A8 LDP X9, X1, [X8 + 0x198]
	0x0366B4AC BLR X9
	0x0366B4B0 CBZ X0, 0x366B748
	0x0366B4B4 ADRP X8, 0xA88000
	0x0366B4B8 LDR X8, [X8 + 0x9D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD76000
	008 Move X23, 0xAD3000
	009 Move W8, [X22+1855]
	010 Move X23, [X23+1128]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xAD3000
	019 Move X0, [X0+1128]
	020 Call 0x1C17CF4
	021 Move X0, 0xA89000
	022 Move X0, [X0+2440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1855], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call NetEventSource.get_IsEnabled
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {70}
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X23]
	042 Move X8, [X0+184]
	043 Move X0, X21
	044 Move X22, [X8]
	045 Call NetEventSource.IdOf, X0
	046 Move X21, X0
	047 Compare X20, 0
	048 JumpIfEqual {77}
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Call NetEventSource.Format, X0
	056 Move X3, X0
	057 Compare X22, 0
	058 JumpIfEqual {82}
	059 Move X0, X22
	060 Move X1, X21
	061 Move X2, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call NetEventSource.Info, X0, X1, X2, X3
	069 Return 
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return 
	077 Move X8, 0xA89000
	078 Move X8, [X8+2440]
	079 Move X3, [X8]
	080 Compare X22, 0
	081 JumpIfNotEqual {59}
	082 Call 0x1C17F20

Method: System.Void Info(System.Object thisOrContextObject, System.Object message, System.String memberName = null)

Disassembly:
	0x0366B4BC MOV X20, X0
	0x0366B4C0 LDR W1, [X20 + 0x18]
	0x0366B4C4 LDR X0, [X8]
	0x0366B4C8 BL 0x1C16D6C
	0x0366B4CC LDR X8, [X20 + 0x18]
	0x0366B4D0 MOV X21, X0
	0x0366B4D4 CMP W8, 0x1
	0x0366B4D8 B.LT 0x366B558
	0x0366B4DC ADRP X26, 0xAD2000
	0x0366B4E0 LDR X26, [X26 + 0x468]
	0x0366B4E4 MOV X23, X31
	0x0366B4E8 AND X8, X8, 0x0
	0x0366B4EC ADD X24, X20, 0x20
	0x0366B4F0 ADD X25, X21, 0x20
	0x0366B4F4 CMP X23, W8, UXTW
	0x0366B4F8 B.CS 0x366B744
	0x0366B4FC LDR X0, [X26]
	0x0366B500 LDR X22, [X24, X23, LSL #3]
	0x0366B504 LDR W8, [X0 + 0xE0]
	0x0366B508 CBNZ W8, 0x366B510
	0x0366B50C BL 0x1C16DFC
	0x0366B510 MOV X0, X22
	0x0366B514 BL 0x366B8BC
	0x0366B518 CBZ X21, 0x366B748
	0x0366B51C MOV X22, X0
	0x0366B520 CBZ X0, 0x366B538
	0x0366B524 LDR X8, [X21]
	0x0366B528 MOV X0, X22
	0x0366B52C LDR X1, [X8 + 0x40]
	0x0366B530 BL 0x1C16E00
	0x0366B534 CBZ X0, 0x366B74C
	0x0366B538 LDR W8, [X21 + 0x18]
	0x0366B53C CMP X23, X8
	0x0366B540 B.CS 0x366B744
	0x0366B544 STR X22, [X25, X23, LSL #3]
	0x0366B548 LDR W8, [X20 + 0x18]
	0x0366B54C ADD X23, X23, 0x1
	0x0366B550 CMP X23, W8, SXTW
	0x0366B554 B.LT 0x366B4F4
	0x0366B558 LDR X8, [X19]
	0x0366B55C MOV X0, X19
	0x0366B560 LDP X9, X1, [X8 + 0x188]
	0x0366B564 BLR X9
	0x0366B568 MOV X1, X21
	0x0366B56C LDP X20, X19, [X31 + 0x40]
	0x0366B570 LDP X22, X21, [X31 + 0x30]
	0x0366B574 LDP X24, X23, [X31 + 0x20]
	0x0366B578 LDP X26, X25, [X31 + 0x10]
	0x0366B57C MOV X2, X31
	0x0366B580 LDR X30, [X31], #0x50
	0x0366B584 B 0x3227C5C
	0x0366B588 LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD76000
	008 Move X22, 0xAD3000
	009 Move W8, [X23+1856]
	010 Move X22, [X22+1128]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAD3000
	019 Move X0, [X0+1128]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1856], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call NetEventSource.get_IsEnabled
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {66}
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X0, X21
	041 Move X22, [X8]
	042 Call NetEventSource.IdOf, X0
	043 Move X21, X0
	044 Move X0, X20
	045 Call NetEventSource.Format, X0
	046 Compare X0, 0
	047 JumpIfEqual {73}
	048 Move X8, [X0]
	049 Move X9, [X8+360]
	050 Move X1, [X8+368]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X22, 0
	053 JumpIfEqual {73}
	054 Move X3, X0
	055 Move X0, X22
	056 Move X1, X21
	057 Move X2, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Call NetEventSource.Info, X0, X1, X2, X3
	065 Return 
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void Info(System.String thisOrContextObject, System.String memberName, System.String message)

Disassembly:
	0x0366CF28 STR X31, [X20 + 0x20]
	0x0366CF2C STR W31, [X20 + 0x28]
	0x0366CF30 STR W8, [X20 + 0x10]
	0x0366CF34 B 0x366CF9C
	0x0366CF38 ADRP X8, 0xAB7000
	0x0366CF3C LDR X8, [X8 + 0x8D0]
	0x0366CF40 MOVZ W1, 0x8
	0x0366CF44 LDR X0, [X8]
	0x0366CF48 BL 0x1C16D6C
	0x0366CF4C MOV X8, X31
	0x0366CF50 ADD X9, X0, 0x20
	0x0366CF54 MOVN X10, 0x7
	0x0366CF58 STR X0, [X20 + 0x18]
	0x0366CF5C ADD X11, X8, 0x1
	0x0366CF60 CMP X11, 0x10
	0x0366CF64 B.CS 0x366CFAC
	0x0366CF68 CBZ X0, 0x366CFB0
	0x0366CF6C LDR W11, [X0 + 0x18]
	0x0366CF70 ADD X12, X10, 0x8
	0x0366CF74 CMP X12, X11
	0x0366CF78 B.CS 0x366CFAC
	0x0366CF7C ADD X12, X19, X8
	0x0366CF80 LDRB W11, [X19, X8, LSL]
	0x0366CF84 LDRB W12, [X12 + 0x1]
	0x0366CF88 ADDS X10, X10, 0x1
	0x0366CF8C BFM W12, W11, 0x18, 0x7
	0x0366CF90 STRH W12, [X9, X8, LSL]
	0x0366CF94 ADD X8, X8, 0x2
	0x0366CF98 B.CC 0x366CF5C
	0x0366CF9C LDP X20, X19, [X31 + 0x20]
	0x0366CFA0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD75000
	008 Move W8, [X23+1857]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAD2000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1857], W8
	022 Compare X21, 0
	023 JumpIfEqual {42}
	024 Move X8, 0xAD2000
	025 Move X8, [X8+1776]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X21
	028 Move X2, X20
	029 Move X8, [X8]
	030 Move X4, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move W1, 4
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X5, X31
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call EventSource.WriteEvent, X0, X1, X2, X3, X4
	041 Return 
	042 Call 0x1C17F20

Method: System.Void Error(System.Object thisOrContextObject, System.Object message, System.String memberName = null)

Disassembly:
	0x0366CFA4 LDR X30, [X31], #0x30
	0x0366CFA8 RET
	0x0366CFAC BL 0x1C16F28
	0x0366CFB0 BL 0x1C16F20
	0x0366CFB4 ADRP X0, 0xA8F000
	0x0366CFB8 LDR X0, [X0 + 0x578]
	0x0366CFBC BL 0x1C16D08
	0x0366CFC0 BL 0x1C16F10
	0x0366CFC4 MOV X19, X0
	0x0366CFC8 ADRP X0, 0xAD1000
	0x0366CFCC LDR X0, [X0 + 0x748]
	0x0366CFD0 BL 0x1C16D08
	0x0366CFD4 MOV X20, X0
	0x0366CFD8 ADRP X0, 0xAD1000
	0x0366CFDC LDR X0, [X0 + 0x738]
	0x0366CFE0 BL 0x1C16D08
	0x0366CFE4 MOV X2, X0
	0x0366CFE8 MOV X0, X19
	0x0366CFEC MOV X1, X20
	0x0366CFF0 MOV X3, X31
	0x0366CFF4 BL 0x330E16C
	0x0366CFF8 ADRP X0, 0xAD1000
	0x0366CFFC LDR X0, [X0 + 0x760]
	0x0366D000 BL 0x1C16D08
	0x0366D004 MOV X1, X0
	0x0366D008 MOV X0, X19
	0x0366D00C BL 0x1C16DEC
	0x0366D010 STP X30, X21, [X31 - 0x20]!
	0x0366D014 STP X20, X19, [X31 + 0x10]
	0x0366D018 MOV X19, X1
	0x0366D01C CBZ X0, 0x366D06C
	0x0366D020 ADRP X21, 0xD6F000
	0x0366D024 LDRB W8, [X21 + 0x3AB]
	0x0366D028 MOV X20, X0
	0x0366D02C CBNZ W8, 0x366D044
	0x0366D030 ADRP X0, 0xAAD000
	0x0366D034 LDR X0, [X0 + 0x290]
	0x0366D038 BL 0x1C16CF4
	0x0366D03C MOVZ W8, 0x1
	0x0366D040 STRB W8, [X21 + 0x3AB]
	0x0366D044 MOV X0, X20
	0x0366D048 MOV X1, X31
	0x0366D04C BL 0x3225708
	0x0366D050 LDR W1, [X20 + 0x10]
	0x0366D054 MOVZ W2, 0x1
	0x0366D058 BL 0x366D07C
	0x0366D05C CMP X0, 0x0
	0x0366D060 STR X0, [X19]
	0x0366D064 CSET W0, NE
	0x0366D068 B 0x366D070
	0x0366D06C STR X31, [X19]
	0x0366D070 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD75000
	008 Move X22, 0xAD2000
	009 Move W8, [X23+1858]
	010 Move X22, [X22+1128]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAD2000
	019 Move X0, [X0+1128]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1858], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call NetEventSource.get_IsEnabled
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {64}
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X0, X21
	041 Move X22, [X8]
	042 Call NetEventSource.IdOf, X0
	043 Move X21, X0
	044 Move X0, X20
	045 Call NetEventSource.Format, X0
	046 Compare X0, 0
	047 JumpIfEqual {71}
	048 Move X8, [X0]
	049 Move X9, [X8+360]
	050 Move X1, [X8+368]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X22, 0
	053 JumpIfEqual {71}
	054 Move X3, X0
	055 Move X0, X22
	056 Move X1, X21
	057 Move X2, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void ErrorMessage(System.String thisOrContextObject, System.String memberName, System.String message)

Disassembly:
	0x0366D074 LDP X30, X21, [X31], #0x20
	0x0366D078 RET
	0x0366D07C STP X29, X30, [X31 - 0x40]!
	0x0366D080 STR X23, [X31 + 0x10]
	0x0366D084 STP X22, X21, [X31 + 0x20]
	0x0366D088 STP X20, X19, [X31 + 0x30]
	0x0366D08C ADD X29, X31, 0x0
	0x0366D090 SUB X31, X31, 0x20
	0x0366D094 MRS X23, 0xC000
	0x0366D098 LDR X8, [X23 + 0x28]
	0x0366D09C ADRP X22, 0xD73000
	0x0366D0A0 MOV W19, W2
	0x0366D0A4 MOV X20, X1
	0x0366D0A8 STUR X8, [X29 - 0x8]
	0x0366D0AC LDRB W8, [X22 + 0x75F]
	0x0366D0B0 MOV X21, X0
	0x0366D0B4 TBNZ X8, 0x0, 0x366D0E4
	0x0366D0B8 ADRP X0, 0xA93000
	0x0366D0BC LDR X0, [X0 + 0x968]
	0x0366D0C0 BL 0x1C16CF4
	0x0366D0C4 ADRP X0, 0xAD0000
	0x0366D0C8 LDR X0, [X0 + 0x768]
	0x0366D0CC BL 0x1C16CF4
	0x0366D0D0 ADRP X0, 0xACE000
	0x0366D0D4 LDR X0, [X0 + 0x418]
	0x0366D0D8 BL 0x1C16CF4
	0x0366D0DC MOVZ W8, 0x1
	0x0366D0E0 STRB W8, [X22 + 0x75F]
	0x0366D0E4 MOVZ W2, 0x3A
	0x0366D0E8 MOV X0, X21
	0x0366D0EC MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD74000
	008 Move W8, [X23+1859]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAD1000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1859], W8
	022 Compare X21, 0
	023 JumpIfEqual {42}
	024 Move X8, 0xAD1000
	025 Move X8, [X8+1776]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X21
	028 Move X2, X20
	029 Move X8, [X8]
	030 Move X4, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move W1, 5
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X5, X31
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call EventSource.WriteEvent, X0, X1, X2, X3, X4
	041 Return 
	042 Call 0x1C17F20

Method: System.Void Fail(System.Object thisOrContextObject, System.Object message, System.String memberName = null)

Disassembly:
	0x0366ADF0 B 0x366B084
	0x0366ADF4 ADRP X8, 0xAD3000
	0x0366ADF8 LDR X8, [X8 + 0x6B0]
	0x0366ADFC B 0x366B084
	0x0366AE00 ADRP X8, 0xAD3000
	0x0366AE04 LDR X8, [X8 + 0x5F0]
	0x0366AE08 B 0x366B084
	0x0366AE0C ADRP X8, 0xAD3000
	0x0366AE10 LDR X8, [X8 + 0x620]
	0x0366AE14 B 0x366B084
	0x0366AE18 ADRP X8, 0xAD3000
	0x0366AE1C LDR X8, [X8 + 0x510]
	0x0366AE20 B 0x366B084
	0x0366AE24 ADRP X8, 0xAD3000
	0x0366AE28 LDR X8, [X8 + 0x520]
	0x0366AE2C B 0x366B084
	0x0366AE30 ADRP X8, 0xAD3000
	0x0366AE34 LDR X8, [X8 + 0x630]
	0x0366AE38 B 0x366B084
	0x0366AE3C ADRP X8, 0xAD3000
	0x0366AE40 LDR X8, [X8 + 0x578]
	0x0366AE44 B 0x366B084
	0x0366AE48 ADRP X8, 0xAD3000
	0x0366AE4C LDR X8, [X8 + 0x680]
	0x0366AE50 CMP W19, 0xE2
	0x0366AE54 LDR X8, [X8]
	0x0366AE58 CSEL X0, X8, X31, EQ
	0x0366AE5C B 0x366B088
	0x0366AE60 ADRP X8, 0xAD3000
	0x0366AE64 LDR X8, [X8 + 0x6A0]
	0x0366AE68 B 0x366B084
	0x0366AE6C ADRP X8, 0xAD3000
	0x0366AE70 LDR X8, [X8 + 0x568]
	0x0366AE74 B 0x366B084
	0x0366AE78 ADRP X8, 0xAD3000
	0x0366AE7C LDR X8, [X8 + 0x650]
	0x0366AE80 B 0x366B084
	0x0366AE84 ADRP X8, 0xAD3000
	0x0366AE88 LDR X8, [X8 + 0x558]
	0x0366AE8C B 0x366B084
	0x0366AE90 ADRP X8, 0xAD3000
	0x0366AE94 LDR X8, [X8 + 0x548]
	0x0366AE98 B 0x366B084
	0x0366AE9C ADRP X8, 0xAD3000
	0x0366AEA0 LDR X8, [X8 + 0x658]
	0x0366AEA4 B 0x366B084
	0x0366AEA8 ADRP X8, 0xAD3000
	0x0366AEAC LDR X8, [X8 + 0x5A8]
	0x0366AEB0 B 0x366B084
	0x0366AEB4 ADRP X8, 0xAD3000
	0x0366AEB8 LDR X8, [X8 + 0x608]
	0x0366AEBC B 0x366B084

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD77000
	008 Move X22, 0xAD4000
	009 Move W8, [X23+1860]
	010 Move X22, [X22+1128]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAD4000
	019 Move X0, [X0+1128]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1860], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call NetEventSource.get_IsEnabled
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {66}
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X0, X21
	041 Move X22, [X8]
	042 Call NetEventSource.IdOf, X0
	043 Move X21, X0
	044 Move X0, X20
	045 Call NetEventSource.Format, X0
	046 Compare X0, 0
	047 JumpIfEqual {73}
	048 Move X8, [X0]
	049 Move X9, [X8+360]
	050 Move X1, [X8+368]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X22, 0
	053 JumpIfEqual {73}
	054 Move X3, X0
	055 Move X0, X22
	056 Move X1, X21
	057 Move X2, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Call NetEventSource.CriticalFailure, X0, X1, X2, X3
	065 Return 
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void CriticalFailure(System.String thisOrContextObject, System.String memberName, System.String message)

Disassembly:
	0x0366D0F0 MOV X3, X31
	0x0366D0F4 STUR W31, [X29 - 0xC]
	0x0366D0F8 STUR X31, [X29 - 0x18]
	0x0366D0FC BL 0x337F7D8
	0x0366D100 TBZ X0, 0x0, 0x366D164
	0x0366D104 ADD X8, X31, 0x0
	0x0366D108 SUB X22, X8, 0x10
	0x0366D10C ADD X31, X22, 0x0
	0x0366D110 MOVZ W1, 0x10
	0x0366D114 MOV X0, X22
	0x0366D118 MOV X2, X31
	0x0366D11C STP X31, X31, [X8 - 0x10]
	0x0366D120 BL 0x33929EC
	0x0366D124 SUB X4, X29, 0xC
	0x0366D128 MOV X0, X21
	0x0366D12C MOV X1, X20
	0x0366D130 MOV X2, X22
	0x0366D134 BL 0x366E040
	0x0366D138 TBZ X0, 0x0, 0x366D19C
	0x0366D13C ADRP X8, 0xA93000
	0x0366D140 LDUR W20, [X29 - 0xC]
	0x0366D144 LDR X8, [X8 + 0x968]
	0x0366D148 LDR X0, [X8]
	0x0366D14C BL 0x1C16F10
	0x0366D150 MOV X1, X22
	0x0366D154 MOV W3, W20
	0x0366D158 MOV X19, X0
	0x0366D15C BL 0x366CD6C
	0x0366D160 B 0x366D1A4
	0x0366D164 SUB X2, X29, 0x18
	0x0366D168 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD74000
	008 Move W8, [X23+1861]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAD1000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1861], W8
	022 Compare X21, 0
	023 JumpIfEqual {42}
	024 Move X8, 0xAD1000
	025 Move X8, [X8+1776]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X21
	028 Move X2, X20
	029 Move X8, [X8]
	030 Move X4, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move W1, 6
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X5, X31
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call EventSource.WriteEvent, X0, X1, X2, X3, X4
	041 Return 
	042 Call 0x1C17F20

Method: System.Void Associate(System.Object first, System.Object second, System.String memberName = null)

Disassembly:
	0x0366D16C MOV X1, X20
	0x0366D170 BL 0x366E1B4
	0x0366D174 TBZ X0, 0x0, 0x366D19C
	0x0366D178 ADRP X8, 0xA93000
	0x0366D17C LDUR X20, [X29 - 0x18]
	0x0366D180 LDR X8, [X8 + 0x968]
	0x0366D184 LDR X0, [X8]
	0x0366D188 BL 0x1C16F10
	0x0366D18C MOV X1, X20
	0x0366D190 MOV X19, X0
	0x0366D194 BL 0x366CAA8
	0x0366D198 B 0x366D1A4
	0x0366D19C TBZ X19, 0x0, 0x366D1D0
	0x0366D1A0 MOV X19, X31
	0x0366D1A4 LDR X8, [X23 + 0x28]
	0x0366D1A8 LDUR X9, [X29 - 0x8]
	0x0366D1AC CMP X8, X9
	0x0366D1B0 B.NE 0x366D23C
	0x0366D1B4 MOV X0, X19
	0x0366D1B8 ADD X31, X29, 0x0
	0x0366D1BC LDP X20, X19, [X31 + 0x30]
	0x0366D1C0 LDP X22, X21, [X31 + 0x20]
	0x0366D1C4 LDR X23, [X31 + 0x10]
	0x0366D1C8 LDP X29, X30, [X31], #0x40
	0x0366D1CC RET
	0x0366D1D0 ADRP X0, 0xAC4000
	0x0366D1D4 LDR X0, [X0 + 0xD8]
	0x0366D1D8 BL 0x1C16D08
	0x0366D1DC BL 0x1C16F10
	0x0366D1E0 MOVZ W1, 0x2726
	0x0366D1E4 MOV X2, X31
	0x0366D1E8 MOV X19, X0
	0x0366D1EC BL 0x36CA10C
	0x0366D1F0 ADRP X0, 0xAB3000
	0x0366D1F4 LDR X0, [X0 + 0xC08]
	0x0366D1F8 BL 0x1C16D08
	0x0366D1FC BL 0x1C16F10
	0x0366D200 MOV X20, X0
	0x0366D204 ADRP X0, 0xAD0000
	0x0366D208 LDR X0, [X0 + 0x748]
	0x0366D20C BL 0x1C16D08
	0x0366D210 MOV X1, X0
	0x0366D214 MOV X0, X20
	0x0366D218 MOV X2, X19
	0x0366D21C MOV X3, X31
	0x0366D220 BL 0x33674C4
	0x0366D224 ADRP X0, 0xAD0000
	0x0366D228 LDR X0, [X0 + 0x770]
	0x0366D22C BL 0x1C16D08
	0x0366D230 MOV X1, X0
	0x0366D234 MOV X0, X20
	0x0366D238 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD74000
	008 Move X22, 0xAD1000
	009 Move W8, [X23+1862]
	010 Move X22, [X22+1128]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAD1000
	019 Move X0, [X0+1128]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1862], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call NetEventSource.get_IsEnabled
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {62}
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X0, X21
	041 Move X22, [X8]
	042 Call NetEventSource.IdOf, X0
	043 Move X23, X0
	044 Move X0, X21
	045 Call NetEventSource.IdOf, X0
	046 Move X21, X0
	047 Move X0, X20
	048 Call NetEventSource.IdOf, X0
	049 Compare X22, 0
	050 JumpIfEqual {69}
	051 Move X4, X0
	052 Move X0, X22
	053 Move X2, X19
	054 Move X3, X21
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X1, X23
	060 Move X30, [X31+48]
	061 Move X23, [X31+56]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 
	069 Call 0x1C17F20

Method: System.Void Associate(System.String thisOrContextObject, System.String memberName, System.String first, System.String second)

Disassembly:
	0x0366D23C BL 0x3EB1B20
	0x0366D240 STR X30, [X31 - 0x20]!
	0x0366D244 STP X20, X19, [X31 + 0x10]
	0x0366D248 CBZ X0, 0x366D290
	0x0366D24C ADRP X20, 0xD6F000
	0x0366D250 LDRB W8, [X20 + 0x3AB]
	0x0366D254 MOV X19, X0
	0x0366D258 CBNZ W8, 0x366D270
	0x0366D25C ADRP X0, 0xAAD000
	0x0366D260 LDR X0, [X0 + 0x290]
	0x0366D264 BL 0x1C16CF4
	0x0366D268 MOVZ W8, 0x1
	0x0366D26C STRB W8, [X20 + 0x3AB]
	0x0366D270 MOV X0, X19
	0x0366D274 MOV X1, X31
	0x0366D278 BL 0x3225708
	0x0366D27C LDR W1, [X19 + 0x10]
	0x0366D280 LDP X20, X19, [X31 + 0x10]
	0x0366D284 MOV W2, W31
	0x0366D288 LDR X30, [X31], #0x20
	0x0366D28C B 0x366D07C
	0x0366D290 ADRP X0, 0xA8B000
	0x0366D294 LDR X0, [X0 + 0x528]
	0x0366D298 BL 0x1C16D08
	0x0366D29C BL 0x1C16F10
	0x0366D2A0 MOV X19, X0
	0x0366D2A4 ADRP X0, 0xAD0000
	0x0366D2A8 LDR X0, [X0 + 0x778]
	0x0366D2AC BL 0x1C16D08
	0x0366D2B0 MOV X1, X0
	0x0366D2B4 MOV X0, X19
	0x0366D2B8 MOV X2, X31
	0x0366D2BC BL 0x330E100
	0x0366D2C0 ADRP X0, 0xAD0000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD74000
	009 Move W8, [X24+1863]
	010 Move X19, X4
	011 Move X20, X3
	012 Move X22, X2
	013 Move X21, X1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xAD1000
	020 Move X0, [X0+1776]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+1863], W8
	024 Compare X23, 0
	025 JumpIfEqual {43}
	026 Move X8, 0xAD1000
	027 Move X8, [X8+1776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, X23
	030 Move X2, X21
	031 Move X8, [X8]
	032 Move X4, X20
	033 Move X5, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move W1, 3
	042 Move X30, [X31+64]
	043 Call 0x1C17F20

Method: System.Boolean get_IsEnabled()

Disassembly:
	0x0366B368 MOV X1, X31
	0x0366B36C BL 0x33BE520
	0x0366B370 CBZ X0, 0x366B3FC
	0x0366B374 LDR X8, [X0]
	0x0366B378 ADRP X20, 0xAD2000
	0x0366B37C ADRP X21, 0xA89000
	0x0366B380 LDP X9, X1, [X8 + 0x1A8]
	0x0366B384 LDR X20, [X20 + 0x468]
	0x0366B388 LDR X21, [X21 + 0xA08]
	0x0366B38C BLR X9
	0x0366B390 LDR X8, [X20]
	0x0366B394 MOV X20, X0
	0x0366B398 LDR W9, [X8 + 0xE0]
	0x0366B39C CBNZ W9, 0x366B3A8
	0x0366B3A0 MOV X0, X8
	0x0366B3A4 BL 0x1C16DFC
	0x0366B3A8 LDR X8, [X19]
	0x0366B3AC MOV X0, X19
	0x0366B3B0 LDP X9, X1, [X8 + 0x158]
	0x0366B3B4 BLR X9
	0x0366B3B8 STR W0, [X31 + 0xC]
	0x0366B3BC ADD X0, X31, 0xC
	0x0366B3C0 MOV X1, X31
	0x0366B3C4 BL 0x337B6E0
	0x0366B3C8 LDR X1, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD76000
	005 Move X19, 0xAD3000
	006 Move W8, [X20+1864]
	007 Move X19, [X19+1128]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAD3000
	013 Move X0, [X0+1128]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1864], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8]
	025 Compare X0, 0
	026 JumpIfEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call EventSource.IsEnabled, X0
	032 Return X0
	033 Call 0x1C17F20

Method: System.String IdOf(System.Object value)

Disassembly:
	0x0366C318 LDR X0, [X0 + 0x720]
	0x0366C31C BL 0x1C16CF4
	0x0366C320 ADRP X0, 0xA87000
	0x0366C324 LDR X0, [X0 + 0x988]
	0x0366C328 BL 0x1C16CF4
	0x0366C32C MOVZ W8, 0x1
	0x0366C330 STRB W8, [X19 + 0x74C]
	0x0366C334 MOV X0, X20
	0x0366C338 MOV X1, X31
	0x0366C33C BL 0x334F914
	0x0366C340 TBZ X0, 0x0, 0x366C498
	0x0366C344 STUR W25, [X29 - 0x14]
	0x0366C348 ADRP X8, 0xA87000
	0x0366C34C LDR X8, [X8 + 0x988]
	0x0366C350 CMP X24, 0x0
	0x0366C354 LDR X8, [X8]
	0x0366C358 CSEL X25, X8, X24, EQ
	0x0366C35C CMP X23, 0x0
	0x0366C360 CSEL X24, X8, X23, EQ
	0x0366C364 CMP X22, 0x0
	0x0366C368 CSEL X28, X8, X22, EQ
	0x0366C36C CMP X21, 0x0
	0x0366C370 CSEL X27, X8, X21, EQ
	0x0366C374 CBZ X25, 0x366C3BC
	0x0366C378 MOV X0, X31
	0x0366C37C BL 0x32C1424
	0x0366C380 ADD X23, X25, W0, SXTW
	0x0366C384 CBZ X24, 0x366C3C4
	0x0366C388 MOV X0, X31
	0x0366C38C BL 0x32C1424
	0x0366C390 ADD X19, X24, W0, SXTW
	0x0366C394 CBZ X28, 0x366C3CC
	0x0366C398 MOV X0, X31
	0x0366C39C BL 0x32C1424
	0x0366C3A0 ADD X22, X28, W0, SXTW
	0x0366C3A4 CBZ X27, 0x366C3D4
	0x0366C3A8 MOV X0, X31
	0x0366C3AC BL 0x32C1424
	0x0366C3B0 ADD X8, X27, W0, SXTW
	0x0366C3B4 STUR X8, [X29 - 0x10]
	0x0366C3B8 B 0x366C3D8
	0x0366C3BC MOV X23, X25
	0x0366C3C0 CBNZ X24, 0x366C388
	0x0366C3C4 MOV X19, X24
	0x0366C3C8 CBNZ X28, 0x366C398
	0x0366C3CC MOV X22, X28
	0x0366C3D0 CBNZ X27, 0x366C3A8
	0x0366C3D4 STUR X27, [X29 - 0x10]
	0x0366C3D8 ADD X8, X31, 0x0
	0x0366C3DC SUB X21, X8, 0x40
	0x0366C3E0 ADD X31, X21, 0x0
	0x0366C3E4 MOVI V0.2D, 0x0
	0x0366C3E8 MOV X0, X23
	0x0366C3EC MOV X1, X31
	0x0366C3F0 STP V0, V0, [X8 - 0x20]
	0x0366C3F4 STP V0, V0, [X8 - 0x40]
	0x0366C3F8 BL 0x33C693C
	0x0366C3FC CBZ X25, 0x366C4C8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD75000
	007 Move W8, [X20+1865]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xAD2000
	014 Move X0, [X0+1128]
	015 Call 0x1C17CF4
	016 Move X0, 0xA89000
	017 Move X0, [X0+2568]
	018 Call 0x1C17CF4
	019 Move X0, 0xA92000
	020 Move X0, [X0+3776]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1865], W8
	024 Compare X19, 0
	025 JumpIfEqual {60}
	026 Move X0, X19
	027 Move X1, X31
	028 Call "il2cpp_vm_object_is_inst", X0
	029 Compare X0, 0
	030 JumpIfEqual {69}
	031 Move X8, [X0]
	032 Move X20, 0xAD2000
	033 Move X21, 0xA89000
	034 Move X9, [X8+424]
	035 Move X1, [X8+432]
	036 Move X20, [X20+1128]
	037 Move X21, [X21+2568]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X20]
	040 Move X20, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X19]
	047 Move X0, X19
	048 Move X9, [X8+344]
	049 Move X1, [X8+352]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move [X31+12], W0
	052 Add X0, X31, 12
	053 Move X1, X31
	054 Call Int32.ToString, X0
	055 Move X1, [X21]
	056 Move X2, X0
	057 Move X0, X20
	058 Move X3, X31
	059 Call String.Concat, X0, X1, X2
	060 Move X8, 0xA92000
	061 Move X8, [X8+3776]
	062 Move X0, [X8]
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Add X31, X31, 48
	068 Return X0
	069 Call 0x1C17F20

Method: System.Int32 GetHashCode(System.Object value)

Disassembly:
	0x0366D4D0 LDR X20, [X20 + 0x618]
	0x0366D4D4 MOV X19, X0
	0x0366D4D8 TBNZ X8, 0x0, 0x366D4FC
	0x0366D4DC ADRP X0, 0xA86000
	0x0366D4E0 LDR X0, [X0 + 0x618]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {7}
	003 Move X8, [X0]
	004 Move X2, [X8+344]
	005 Move X1, [X8+352]
	006 CallNoReturn X2
	007 Return X0

Method: System.Object Format(System.Object value)

Disassembly:
	0x0366C8BC LDR X30, [X31], #0x10
	0x0366C8C0 BR X5
	0x0366C8C4 BL 0x1C16F20
	0x0366C8C8 STR X30, [X31 - 0x10]!
	0x0366C8CC LDR X0, [X0 + 0x48]
	0x0366C8D0 CBZ X0, 0x366C8E8
	0x0366C8D4 LDR X8, [X0]
	0x0366C8D8 LDR X5, [X8 + 0x358]
	0x0366C8DC LDR X4, [X8 + 0x360]
	0x0366C8E0 LDR X30, [X31], #0x10
	0x0366C8E4 BR X5
	0x0366C8E8 BL 0x1C16F20
	0x0366C8EC STR X30, [X31 - 0x10]!
	0x0366C8F0 LDR X0, [X0 + 0x48]
	0x0366C8F4 CBZ X0, 0x366C90C
	0x0366C8F8 LDR X8, [X0]
	0x0366C8FC LDR X7, [X8 + 0x2B8]
	0x0366C900 LDR X6, [X8 + 0x2C0]
	0x0366C904 LDR X30, [X31], #0x10
	0x0366C908 BR X7
	0x0366C90C BL 0x1C16F20
	0x0366C910 STR X30, [X31 - 0x10]!
	0x0366C914 LDR X0, [X0 + 0x48]
	0x0366C918 CBZ X0, 0x366C930
	0x0366C91C LDR X8, [X0]
	0x0366C920 LDR X3, [X8 + 0x2C8]
	0x0366C924 LDR X2, [X8 + 0x2D0]
	0x0366C928 LDR X30, [X31], #0x10
	0x0366C92C BR X3
	0x0366C930 BL 0x1C16F20
	0x0366C934 STP X30, X19, [X31 - 0x10]!
	0x0366C938 MOV X1, X31
	0x0366C93C MOV X19, X0
	0x0366C940 BL 0x32F0248
	0x0366C944 LDR X0, [X19 + 0x48]
	0x0366C948 CBZ X0, 0x366C960
	0x0366C94C LDR X8, [X0]
	0x0366C950 LDR X2, [X8 + 0x278]
	0x0366C954 LDR X1, [X8 + 0x280]
	0x0366C958 LDP X30, X19, [X31], #0x10
	0x0366C95C BR X2
	0x0366C960 LDP X30, X19, [X31], #0x10
	0x0366C964 RET
	0x0366C968 STP X30, X21, [X31 - 0x20]!
	0x0366C96C STP X20, X19, [X31 + 0x10]
	0x0366C970 ADRP X19, 0xD74000
	0x0366C974 ADRP X21, 0xA8F000
	0x0366C978 ADRP X20, 0xACE000
	0x0366C97C LDRB W8, [X19 + 0x751]
	0x0366C980 LDR X21, [X21 + 0x7C0]
	0x0366C984 LDR X20, [X20 + 0x168]
	0x0366C988 TBNZ X8, 0x0, 0x366C9AC
	0x0366C98C ADRP X0, 0xACE000
	0x0366C990 LDR X0, [X0 + 0x168]
	0x0366C994 BL 0x1C16CF4
	0x0366C998 ADRP X0, 0xA8F000
	0x0366C99C LDR X0, [X0 + 0x7C0]
	0x0366C9A0 BL 0x1C16CF4
	0x0366C9A4 MOVZ W8, 0x1
	0x0366C9A8 STRB W8, [X19 + 0x751]
	0x0366C9AC LDR X0, [X21]
	0x0366C9B0 BL 0x1C16F10
	0x0366C9B4 MOV W1, W31
	0x0366C9B8 MOV W2, W31
	0x0366C9BC MOV X3, X31
	0x0366C9C0 MOV X19, X0
	0x0366C9C4 BL 0x339C25C
	0x0366C9C8 LDR X8, [X20]
	0x0366C9CC LDR X8, [X8 + 0xB8]
	0x0366C9D0 STR X19, [X8]
	0x0366C9D4 LDR X0, [X21]
	0x0366C9D8 BL 0x1C16F10
	0x0366C9DC MOVZ W1, 0x1
	0x0366C9E0 MOV W2, W31
	0x0366C9E4 MOV X3, X31
	0x0366C9E8 MOV X19, X0
	0x0366C9EC BL 0x339C25C
	0x0366C9F0 LDR X8, [X20]
	0x0366C9F4 LDR X8, [X8 + 0xB8]
	0x0366C9F8 STR X19, [X8 + 0x8]
	0x0366C9FC LDR X0, [X21]
	0x0366CA00 BL 0x1C16F10
	0x0366CA04 MOVZ W1, 0x1
	0x0366CA08 MOVZ W2, 0x1
	0x0366CA0C MOV X3, X31
	0x0366CA10 MOV X19, X0
	0x0366CA14 BL 0x339C25C
	0x0366CA18 LDR X8, [X20]
	0x0366CA1C LDR X8, [X8 + 0xB8]
	0x0366CA20 STR X19, [X8 + 0x10]
	0x0366CA24 LDR X0, [X21]
	0x0366CA28 BL 0x1C16F10
	0x0366CA2C MOVZ W1, 0x2
	0x0366CA30 MOV W2, W31
	0x0366CA34 MOV X3, X31
	0x0366CA38 MOV X19, X0
	0x0366CA3C BL 0x339C25C
	0x0366CA40 LDR X8, [X20]
	0x0366CA44 LDR X8, [X8 + 0xB8]
	0x0366CA48 STR X19, [X8 + 0x18]
	0x0366CA4C LDP X20, X19, [X31 + 0x10]
	0x0366CA50 LDP X30, X21, [X31], #0x20
	0x0366CA54 RET
	0x0366CA58 LDR X8, [X0 + 0x18]
	0x0366CA5C CMP X8, 0x0
	0x0366CA60 CSET W0, EQ
	0x0366CA64 RET
	0x0366CA68 LDR X8, [X0 + 0x18]
	0x0366CA6C CMP X8, 0x0
	0x0366CA70 CSET W0, NE
	0x0366CA74 RET
	0x0366CA78 LDR W0, [X0 + 0x10]
	0x0366CA7C RET
	0x0366CA80 STR X31, [X0 + 0x20]
	0x0366CA84 STR W31, [X0 + 0x28]
	0x0366CA88 STR W1, [X0 + 0x10]
	0x0366CA8C RET
	0x0366CA90 LDR W0, [X0 + 0x10]
	0x0366CA94 RET
	0x0366CA98 STR X31, [X0 + 0x20]
	0x0366CA9C STR W31, [X0 + 0x28]
	0x0366CAA0 STR W1, [X0 + 0x10]
	0x0366CAA4 RET
	0x0366CAA8 STR X30, [X31 - 0x20]!
	0x0366CAAC STP X20, X19, [X31 + 0x10]
	0x0366CAB0 MOV X19, X1
	0x0366CAB4 MOV X1, X31
	0x0366CAB8 MOV X20, X0
	0x0366CABC BL 0x33BDD8C
	0x0366CAC0 UBFM X8, X19, 0x20, 0x3F
	0x0366CAC4 CBNZ X8, 0x366CAE0
	0x0366CAC8 STR X31, [X20 + 0x20]
	0x0366CACC STR W31, [X20 + 0x28]
	0x0366CAD0 STR W19, [X20 + 0x10]
	0x0366CAD4 LDP X20, X19, [X31 + 0x10]
	0x0366CAD8 LDR X30, [X31], #0x20
	0x0366CADC RET
	0x0366CAE0 ADRP X0, 0xA8F000
	0x0366CAE4 LDR X0, [X0 + 0x760]
	0x0366CAE8 BL 0x1C16D08
	0x0366CAEC BL 0x1C16F10
	0x0366CAF0 MOV X19, X0
	0x0366CAF4 ADRP X0, 0xAD1000
	0x0366CAF8 LDR X0, [X0 + 0x728]
	0x0366CAFC BL 0x1C16D08
	0x0366CB00 MOV X1, X0
	0x0366CB04 MOV X0, X19
	0x0366CB08 MOV X2, X31
	0x0366CB0C BL 0x3316014
	0x0366CB10 ADRP X0, 0xAD1000
	0x0366CB14 LDR X0, [X0 + 0x730]
	0x0366CB18 BL 0x1C16D08
	0x0366CB1C MOV X1, X0
	0x0366CB20 MOV X0, X19
	0x0366CB24 BL 0x1C16DEC
	0x0366CB28 STR X30, [X31 - 0x30]!
	0x0366CB2C STP X22, X21, [X31 + 0x10]
	0x0366CB30 STP X20, X19, [X31 + 0x20]
	0x0366CB34 ADRP X22, 0xD74000
	0x0366CB38 LDRB W8, [X22 + 0x752]
	0x0366CB3C MOV X19, X2
	0x0366CB40 MOV X20, X1
	0x0366CB44 MOV X21, X0
	0x0366CB48 TBNZ X8, 0x0, 0x366CB6C
	0x0366CB4C ADRP X0, 0xA94000
	0x0366CB50 LDR X0, [X0 + 0x968]
	0x0366CB54 BL 0x1C16CF4
	0x0366CB58 ADRP X0, 0xABC000
	0x0366CB5C LDR X0, [X0 + 0x260]
	0x0366CB60 BL 0x1C16CF4
	0x0366CB64 MOVZ W8, 0x1
	0x0366CB68 STRB W8, [X22 + 0x752]
	0x0366CB6C CBZ X20, 0x366CB90
	0x0366CB70 LDR W2, [X20 + 0x18]
	0x0366CB74 ADD X1, X20, 0x20
	0x0366CB78 MOV X0, X21
	0x0366CB7C MOV X3, X19
	0x0366CB80 LDP X20, X19, [X31 + 0x20]
	0x0366CB84 LDP X22, X21, [X31 + 0x10]
	0x0366CB88 LDR X30, [X31], #0x30
	0x0366CB8C B 0x366CBF0
	0x0366CB90 ADRP X8, 0xA94000
	0x0366CB94 LDR X8, [X8 + 0x968]
	0x0366CB98 LDR X0, [X8]
	0x0366CB9C BL 0x19903D0
	0x0366CBA0 BL 0x366CBA4
	0x0366CBA4 STP X30, X19, [X31 - 0x10]!
	0x0366CBA8 ADRP X0, 0xA8C000
	0x0366CBAC LDR X0, [X0 + 0x528]
	0x0366CBB0 BL 0x1C16D08
	0x0366CBB4 BL 0x1C16F10
	0x0366CBB8 MOV X19, X0
	0x0366CBBC ADRP X0, 0xAD1000
	0x0366CBC0 LDR X0, [X0 + 0x738]
	0x0366CBC4 BL 0x1C16D08
	0x0366CBC8 MOV X1, X0
	0x0366CBCC MOV X0, X19
	0x0366CBD0 MOV X2, X31
	0x0366CBD4 BL 0x330E100
	0x0366CBD8 ADRP X0, 0xAD1000
	0x0366CBDC LDR X0, [X0 + 0x740]
	0x0366CBE0 BL 0x1C16D08
	0x0366CBE4 MOV X1, X0
	0x0366CBE8 MOV X0, X19
	0x0366CBEC BL 0x1C16DEC
	0x0366CBF0 STP X30, X23, [X31 - 0x30]!
	0x0366CBF4 STP X22, X21, [X31 + 0x10]
	0x0366CBF8 STP X20, X19, [X31 + 0x20]
	0x0366CBFC ADRP X23, 0xD74000
	0x0366CC00 LDRB W8, [X23 + 0x753]
	0x0366CC04 MOV X19, X3
	0x0366CC08 MOV X22, X2
	0x0366CC0C MOV X21, X1
	0x0366CC10 MOV X20, X0
	0x0366CC14 TBNZ X8, 0x0, 0x366CC38
	0x0366CC18 ADRP X0, 0xAB6000
	0x0366CC1C LDR X0, [X0 + 0xAC0]
	0x0366CC20 BL 0x1C16CF4
	0x0366CC24 ADRP X0, 0xAB7000
	0x0366CC28 LDR X0, [X0 + 0x8D0]
	0x0366CC2C BL 0x1C16CF4
	0x0366CC30 MOVZ W8, 0x1
	0x0366CC34 STRB W8, [X23 + 0x753]
	0x0366CC38 MOV X0, X20
	0x0366CC3C MOV X1, X31
	0x0366CC40 BL 0x33BDD8C
	0x0366CC44 CMP W22, 0x10
	0x0366CC48 B.NE 0x366CCDC
	0x0366CC4C UBFM X8, X19, 0x20, 0x3F
	0x0366CC50 CBNZ X8, 0x366CD24
	0x0366CC54 ADRP X8, 0xAB7000
	0x0366CC58 LDR X8, [X8 + 0x8D0]
	0x0366CC5C MOVZ W1, 0x8
	0x0366CC60 LDR X0, [X8]
	0x0366CC64 BL 0x1C16D6C
	0x0366CC68 MOV X8, X31
	0x0366CC6C ADD X9, X0, 0x20
	0x0366CC70 MOVN X10, 0x7
	0x0366CC74 STR X0, [X20 + 0x18]
	0x0366CC78 ADD X11, X8, 0x1
	0x0366CC7C CMP X11, 0x10
	0x0366CC80 B.CS 0x366CCD4
	0x0366CC84 CBZ X0, 0x366CCD8
	0x0366CC88 LDR W11, [X0 + 0x18]
	0x0366CC8C ADD X12, X10, 0x8
	0x0366CC90 CMP X12, X11
	0x0366CC94 B.CS 0x366CCD4
	0x0366CC98 ADD X12, X21, X8
	0x0366CC9C LDRB W11, [X21, X8, LSL]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD75000
	007 Move W8, [X20+1866]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {48}
	013 Move X0, 0xA8F000
	014 Move X0, [X0+752]
	015 Call 0x1C17CF4
	016 Move X0, 0xA88000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move X0, 0xAB1000
	020 Move X0, [X0+3872]
	021 Call 0x1C17CF4
	022 Move X0, 0xAD2000
	023 Move X0, [X0+1128]
	024 Call 0x1C17CF4
	025 Move X0, 0xA88000
	026 Move X0, [X0+3824]
	027 Call 0x1C17CF4
	028 Move X0, 0xAD2000
	029 Move X0, [X0+1792]
	030 Call 0x1C17CF4
	031 Move X0, 0xAD2000
	032 Move X0, [X0+1800]
	033 Call 0x1C17CF4
	034 Move X0, 0xAD2000
	035 Move X0, [X0+1808]
	036 Call 0x1C17CF4
	037 Move X0, 0xA91000
	038 Move X0, [X0+3624]
	039 Call 0x1C17CF4
	040 Move X0, 0xAD2000
	041 Move X0, [X0+1816]
	042 Call 0x1C17CF4
	043 Move X0, 0xA92000
	044 Move X0, [X0+3776]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+1866], W8
	048 Compare X19, 0
	049 JumpIfEqual {92}
	050 Move X20, 0xA88000
	051 Move X20, [X20+3824]
	052 Move X9, [X19]
	053 Move X8, [X20]
	054 Move W11, [X9+304]
	055 Move W10, [X8+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, [X9+200]
	058 Add X9, X9, X10
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X21, 0xA8F000
	062 Move X21, [X21+752]
	063 Move X0, X19
	064 Move X1, [X21]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {95}
	068 Move X1, X31
	069 Move X20, X0
	070 Call "il2cpp_vm_object_is_inst", X0
	071 Compare X0, 0
	072 JumpIfEqual {264}
	073 Move X8, [X0]
	074 Move X9, [X8+424]
	075 Move X1, [X8+432]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X20]
	078 Move X1, [X21]
	079 Move X19, X0
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 1
	090 Move X0, X20
	091 Call 0x1C5D788
	092 Move X8, 0xA92000
	093 Move X8, [X8+3776]
	094 Move X19, [X8]
	095 Move X9, 0xAD2000
	096 Move X9, [X9+1792]
	097 Move X8, [X19]
	098 Move X9, [X9]
	099 Move W11, [X8+304]
	100 Move W10, [X9+304]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X11, [X8+200]
	103 Add X10, X11, X10
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X9, 0xAB1000
	107 Move X9, [X9+3872]
	108 Move X9, [X9]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X9, [X8+360]
	111 Move X1, [X8+368]
	112 Move X0, X19
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X0, 0
	115 JumpIfEqual {134}
	116 Move X20, X0
	117 Move X0, X19
	118 Move X1, X31
	119 Call "il2cpp_vm_object_is_inst", X0
	120 Compare X0, 0
	121 JumpIfEqual {264}
	122 Move X8, [X0]
	123 Move X9, [X8+744]
	124 Move X1, [X8+752]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X1, X0
	127 Move X0, X20
	128 Move X2, X31
	129 Call String.op_Equality, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {206}
	134 Move X8, 0xAD2000
	135 Move X8, [X8+1128]
	136 Move X0, [X8]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X19
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X30, [X31+16]
	145 Move X21, [X31+24]
	146 Add X31, X31, 48
	147 Call NetEventSource.IdOf, X0
	148 Return X0
	149 Move X0, X19
	150 Move X1, X31
	151 Call "il2cpp_vm_object_is_inst", X0
	152 Compare X0, 0
	153 JumpIfEqual {264}
	154 Move X8, [X0]
	155 Move X9, [X8+1064]
	156 Move X1, [X8+1072]
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X8, [X19]
	159 Move X1, [X20]
	160 Move W10, [X8+304]
	161 Move W9, [X1+304]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X8, [X8+200]
	164 Add X8, X8, X9
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X20, X0
	168 Move X0, X19
	169 Move X1, X31
	170 Call Array.get_Length, X0
	171 Move X8, 0xA88000
	172 Move X8, [X8+1880]
	173 Move [X31], W0
	174 Add X1, X31, 0
	175 Move X8, [X8]
	176 Move X0, X8
	177 Call 0x1C17E04
	178 Move X8, 0xAD2000
	179 Move X8, [X8+1808]
	180 Move X2, X0
	181 Move X1, X20
	182 Move W9, [X10]
	183 Add W9, W9, 1
	184 Add X8, X8, W9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X20
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X8, 0xA88000
	191 Move X8, [X8+1880]
	192 Move [X31], W0
	193 Add X1, X31, 0
	194 Move X8, [X8]
	195 Move X0, X8
	196 Call 0x1C17E04
	197 Move X8, 0xAD2000
	198 Move X8, [X8+1800]
	199 Move X2, X0
	200 Move X1, X19
	201 Move X8, [X8]
	202 Move X0, X8
	203 Move X3, X31
	204 Call String.Format, X0, X1, X2
	205 Move X19, X0
	206 Move X0, X19
	207 Move X20, [X31+32]
	208 Move X19, [X31+40]
	209 Move X30, [X31+16]
	210 Move X21, [X31+24]
	211 Add X31, X31, 48
	212 Return X0
	213 Move X8, 0xA91000
	214 Move X8, [X8+3624]
	215 Move X1, X19
	216 Move X20, [X31+32]
	217 Move X19, [X31+40]
	218 Move X30, [X31+16]
	219 Move X21, [X31+24]
	220 Move X0, [X8]
	221 Move X2, X31
	222 Add X31, X31, 48
	223 Call String.Format, X0, X1
	224 Return X0
	225 Move X0, X19
	226 Move X1, X31
	227 Call "il2cpp_vm_object_is_inst", X0
	228 Compare X0, 0
	229 JumpIfEqual {264}
	230 Move X8, [X0]
	231 Move X9, [X8+424]
	232 Move X1, [X8+432]
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Move X8, [X19]
	235 Move X20, X0
	236 Move X0, X19
	237 Move X9, [X8+344]
	238 Move X1, [X8+352]
	239 NotImplemented "Instruction BLR not yet implemented."
	240 Move X8, 0xA88000
	241 Move X8, [X8+1880]
	242 Move [X31+12], W0
	243 Add X1, X31, 12
	244 Move X8, [X8]
	245 Move X0, X8
	246 Call 0x1C17E04
	247 Move X9, 0xAB1000
	248 Move X8, [X19+16]
	249 Move X9, [X9+3872]
	250 Move X21, X0
	251 Add X1, X31, 0
	252 Move [X31], X8
	253 Move X0, [X9]
	254 Call 0x1C17E04
	255 Move X8, 0xAD2000
	256 Move X8, [X8+1816]
	257 Move X3, X0
	258 Move X1, X20
	259 Move X2, X21
	260 Move X8, [X8]
	261 Move X4, X31
	262 Move X0, X8
	263 Call String.Format, X0, X1, X2, X3
	264 Call 0x1C17F20
	265 Move X0, X19
	266 Call 0x1C181E0

Method: System.String Format(System.FormattableString s)

Disassembly:
	0x0366C400 LDR W8, [X25 + 0x10]
	0x0366C404 STR X0, [X21]
	0x0366C408 MOV X0, X19
	0x0366C40C MOV X1, X31
	0x0366C410 UBFM W8, W8, 0x1F, 0x1E
	0x0366C414 ADD W8, W8, 0x2
	0x0366C418 STP W8, W31, [X21 + 0x8]
	0x0366C41C BL 0x33C693C
	0x0366C420 CBZ X24, 0x366C4C8
	0x0366C424 LDR W8, [X24 + 0x10]
	0x0366C428 STR X0, [X21 + 0x10]
	0x0366C42C MOV X0, X22
	0x0366C430 MOV X1, X31
	0x0366C434 UBFM W8, W8, 0x1F, 0x1E
	0x0366C438 ADD W8, W8, 0x2
	0x0366C43C STP W8, W31, [X21 + 0x18]
	0x0366C440 BL 0x33C693C
	0x0366C444 CBZ X28, 0x366C4C8
	0x0366C448 LDR W8, [X28 + 0x10]
	0x0366C44C STR X0, [X21 + 0x20]
	0x0366C450 LDUR X0, [X29 - 0x10]
	0x0366C454 MOV X1, X31
	0x0366C458 UBFM W8, W8, 0x1F, 0x1E
	0x0366C45C ADD W8, W8, 0x2
	0x0366C460 STP W8, W31, [X21 + 0x28]
	0x0366C464 BL 0x33C693C
	0x0366C468 CBZ X27, 0x366C4C8
	0x0366C46C LDR W8, [X27 + 0x10]
	0x0366C470 LDUR W1, [X29 - 0x14]
	0x0366C474 STR X0, [X21 + 0x30]
	0x0366C478 MOVZ W2, 0x4
	0x0366C47C UBFM W8, W8, 0x1F, 0x1E
	0x0366C480 ADD W8, W8, 0x2
	0x0366C484 MOV X0, X20
	0x0366C488 MOV X3, X21
	0x0366C48C MOV X4, X31
	0x0366C490 STP W8, W31, [X21 + 0x38]
	0x0366C494 BL 0x334FD90
	0x0366C498 LDR X8, [X26 + 0x28]
	0x0366C49C LDUR X9, [X29 - 0x8]
	0x0366C4A0 CMP X8, X9
	0x0366C4A4 B.NE 0x366C4CC
	0x0366C4A8 ADD X31, X29, 0x0
	0x0366C4AC LDP X20, X19, [X31 + 0x50]
	0x0366C4B0 LDP X22, X21, [X31 + 0x40]
	0x0366C4B4 LDP X24, X23, [X31 + 0x30]
	0x0366C4B8 LDP X26, X25, [X31 + 0x20]
	0x0366C4BC LDP X28, X27, [X31 + 0x10]
	0x0366C4C0 LDP X29, X30, [X31], #0x60
	0x0366C4C4 RET
	0x0366C4C8 BL 0x1C16F20
	0x0366C4CC BL 0x3EB1B20
	0x0366C4D0 CBZ X0, 0x366C4E0
	0x0366C4D4 LDR X8, [X0]
	0x0366C4D8 LDP X2, X1, [X8 + 0x158]
	0x0366C4DC BR X2
	0x0366C4E0 RET
	0x0366C4E4 MOV X1, X31
	0x0366C4E8 B 0x334F7E0
	0x0366C4EC STR X30, [X31 - 0x20]!
	0x0366C4F0 STP X20, X19, [X31 + 0x10]
	0x0366C4F4 ADRP X19, 0xD74000
	0x0366C4F8 ADRP X20, 0xAD1000
	0x0366C4FC LDRB W8, [X19 + 0x74D]
	0x0366C500 LDR X20, [X20 + 0x468]
	0x0366C504 TBNZ X8, 0x0, 0x366C51C
	0x0366C508 ADRP X0, 0xAD1000
	0x0366C50C LDR X0, [X0 + 0x468]
	0x0366C510 BL 0x1C16CF4
	0x0366C514 MOVZ W8, 0x1
	0x0366C518 STRB W8, [X19 + 0x74D]
	0x0366C51C LDR X0, [X20]
	0x0366C520 BL 0x1C16F10
	0x0366C524 MOV X1, X31
	0x0366C528 MOV X19, X0
	0x0366C52C BL 0x334F7E0
	0x0366C530 LDR X8, [X20]
	0x0366C534 LDR X8, [X8 + 0xB8]
	0x0366C538 STR X19, [X8]
	0x0366C53C LDP X20, X19, [X31 + 0x10]
	0x0366C540 LDR X30, [X31], #0x20
	0x0366C544 RET
	0x0366C548 CMP W0, 0x10000
	0x0366C54C CSET W0, CC
	0x0366C550 RET
	0x0366C554 STP X30, X25, [X31 - 0x40]!
	0x0366C558 STP X24, X23, [X31 + 0x10]
	0x0366C55C STP X22, X21, [X31 + 0x20]
	0x0366C560 STP X20, X19, [X31 + 0x30]
	0x0366C564 ADRP X25, 0xD74000
	0x0366C568 ADRP X24, 0xAB5000
	0x0366C56C LDRB W8, [X25 + 0x74E]
	0x0366C570 LDR X24, [X24 + 0x230]
	0x0366C574 MOV X19, X4
	0x0366C578 MOV X20, X3
	0x0366C57C MOV X23, X2
	0x0366C580 MOV X22, X1
	0x0366C584 MOV X21, X0
	0x0366C588 TBNZ X8, 0x0, 0x366C5AC
	0x0366C58C ADRP X0, 0xAB5000
	0x0366C590 LDR X0, [X0 + 0x230]
	0x0366C594 BL 0x1C16CF4
	0x0366C598 ADRP X0, 0xAC5000
	0x0366C59C LDR X0, [X0 + 0x508]
	0x0366C5A0 BL 0x1C16CF4
	0x0366C5A4 MOVZ W8, 0x1
	0x0366C5A8 STRB W8, [X25 + 0x74E]
	0x0366C5AC ADRP X25, 0xAC5000
	0x0366C5B0 LDR X25, [X25 + 0x508]
	0x0366C5B4 MOV X0, X21
	0x0366C5B8 MOV X1, X23
	0x0366C5BC MOV X2, X31
	0x0366C5C0 BL 0x36BA54C
	0x0366C5C4 LDR X0, [X24]
	0x0366C5C8 LDR W8, [X0 + 0xE0]
	0x0366C5CC CBNZ W8, 0x366C5D4
	0x0366C5D0 BL 0x1C16DFC
	0x0366C5D4 MOV X0, X31
	0x0366C5D8 BL 0x36A6120
	0x0366C5DC LDR X8, [X25]
	0x0366C5E0 MOV X23, X0
	0x0366C5E4 MOV X0, X8
	0x0366C5E8 BL 0x1C16F10
	0x0366C5EC MOV X1, X22
	0x0366C5F0 MOV W2, W31
	0x0366C5F4 MOV X3, X23
	0x0366C5F8 MOV X4, X31
	0x0366C5FC MOV X24, X0
	0x0366C600 BL 0x3625710
	0x0366C604 STP X24, X20, [X21 + 0x48]
	0x0366C608 STR X19, [X21 + 0x58]
	0x0366C60C LDP X20, X19, [X31 + 0x30]
	0x0366C610 LDP X22, X21, [X31 + 0x20]
	0x0366C614 LDP X24, X23, [X31 + 0x10]
	0x0366C618 LDP X30, X25, [X31], #0x40
	0x0366C61C RET
	0x0366C620 STR X30, [X31 - 0x40]!
	0x0366C624 STP X24, X23, [X31 + 0x10]
	0x0366C628 STP X22, X21, [X31 + 0x20]
	0x0366C62C STP X20, X19, [X31 + 0x30]
	0x0366C630 ADRP X19, 0xD74000
	0x0366C634 ADRP X22, 0xAB5000
	0x0366C638 LDRB W8, [X19 + 0x74F]
	0x0366C63C LDR X22, [X22 + 0x230]
	0x0366C640 MOV X20, X0
	0x0366C644 TBNZ X8, 0x0, 0x366C65C
	0x0366C648 ADRP X0, 0xAB5000
	0x0366C64C LDR X0, [X0 + 0x230]
	0x0366C650 BL 0x1C16CF4
	0x0366C654 MOVZ W8, 0x1
	0x0366C658 STRB W8, [X19 + 0x74F]
	0x0366C65C LDR X0, [X22]
	0x0366C660 LDP X21, X19, [X20 + 0x48]
	0x0366C664 LDR X20, [X20 + 0x58]
	0x0366C668 LDR W8, [X0 + 0xE0]
	0x0366C66C CBNZ W8, 0x366C674
	0x0366C670 BL 0x1C16DFC
	0x0366C674 ADRP X23, 0xD74000
	0x0366C678 LDRB W8, [X23 + 0x2F8]
	0x0366C67C CBNZ W8, 0x366C694
	0x0366C680 ADRP X0, 0xAB5000
	0x0366C684 LDR X0, [X0 + 0x230]
	0x0366C688 BL 0x1C16CF4
	0x0366C68C MOVZ W8, 0x1
	0x0366C690 STRB W8, [X23 + 0x2F8]
	0x0366C694 LDR X0, [X22]
	0x0366C698 LDR W8, [X0 + 0xE0]
	0x0366C69C CBNZ W8, 0x366C6A8
	0x0366C6A0 BL 0x1C16DFC
	0x0366C6A4 LDR X0, [X22]
	0x0366C6A8 LDR X8, [X0 + 0xB8]
	0x0366C6AC ADRP X24, 0xD70000
	0x0366C6B0 LDRB W9, [X24 + 0x206]
	0x0366C6B4 LDR W23, [X8 + 0x24]
	0x0366C6B8 CBNZ W9, 0x366C6D0
	0x0366C6BC MOV X0, X22
	0x0366C6C0 BL 0x1C16CF4
	0x0366C6C4 LDR X0, [X22]
	0x0366C6C8 MOVZ W8, 0x1
	0x0366C6CC STRB W8, [X24 + 0x206]
	0x0366C6D0 LDR W8, [X0 + 0xE0]
	0x0366C6D4 CBNZ W8, 0x366C6E0
	0x0366C6D8 BL 0x1C16DFC
	0x0366C6DC LDR X0, [X22]
	0x0366C6E0 CBZ X21, 0x366C71C
	0x0366C6E4 LDR X8, [X0 + 0xB8]
	0x0366C6E8 LDR X9, [X21]
	0x0366C6EC MOV X0, X21
	0x0366C6F0 MOV X1, X19
	0x0366C6F4 LDRB W4, [X8 + 0x20]
	0x0366C6F8 LDR X6, [X9 + 0x3C8]
	0x0366C6FC LDR X5, [X9 + 0x3D0]
	0x0366C700 MOV X2, X20
	0x0366C704 MOV W3, W23
	0x0366C708 LDP X20, X19, [X31 + 0x30]
	0x0366C70C LDP X22, X21, [X31 + 0x20]
	0x0366C710 LDP X24, X23, [X31 + 0x10]
	0x0366C714 LDR X30, [X31], #0x40
	0x0366C718 BR X6
	0x0366C71C BL 0x1C16F20
	0x0366C720 STR X30, [X31 - 0x50]!
	0x0366C724 STP X26, X25, [X31 + 0x10]
	0x0366C728 STP X24, X23, [X31 + 0x20]
	0x0366C72C STP X22, X21, [X31 + 0x30]
	0x0366C730 STP X20, X19, [X31 + 0x40]
	0x0366C734 ADRP X21, 0xD74000
	0x0366C738 ADRP X24, 0xAB5000
	0x0366C73C LDRB W8, [X21 + 0x750]
	0x0366C740 LDR X24, [X24 + 0x230]
	0x0366C744 MOV X19, X2
	0x0366C748 MOV X20, X1
	0x0366C74C MOV X22, X0
	0x0366C750 TBNZ X8, 0x0, 0x366C768
	0x0366C754 ADRP X0, 0xAB5000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xD75000
	011 Move W8, [X20+1867]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xAD2000
	018 Move X0, [X0+1128]
	019 Call 0x1C17CF4
	020 Move X0, 0xA88000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1867], W8
	025 Compare X19, 0
	026 JumpIfEqual {259}
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+424]
	030 Move X1, [X8+432]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, -44908544
	034 Move W8, W0
	035 Add X9, X9, 1936
	036 NotImplemented "Instruction ADR not yet implemented."
	037 Move W11, [X9]
	038 Add X10, X10, X11
	039 CallNoReturn X10
	040 Move X8, [X19]
	041 Move X0, X19
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X2, [X8+392]
	047 Move X1, [X8+400]
	048 Move X24, [X31+32]
	049 Move X23, [X31+40]
	050 Move X26, [X31+16]
	051 Move X25, [X31+24]
	052 Move X30, [X31+80]
	053 CallNoReturn X2
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+408]
	057 Move X1, [X8+416]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X0, 0
	060 JumpIfEqual {259}
	061 Move X8, 0xA88000
	062 Move X8, [X8+2512]
	063 Move X20, X0
	064 Move W1, [X20+24]
	065 Move X0, [X8]
	066 Call 0x1C17D6C
	067 Move X8, [X20+24]
	068 Move X21, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X26, 0xAD2000
	071 Move X26, [X26+1128]
	072 Move X23, X31
	073 And X8, X8, 0
	074 Add X24, X20, 32
	075 Add X25, X21, 32
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, [X26]
	078 Move X22, [X24]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X22
	084 Call NetEventSource.Format, X0
	085 Compare X21, 0
	086 JumpIfEqual {259}
	087 Move X22, X0
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X21]
	091 Move X0, X22
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {260}
	096 Move W8, [X21+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X25], X22
	099 Move W8, [X20+24]
	100 Add X23, X23, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X19]
	103 Move X0, X19
	104 Move X9, [X8+392]
	105 Move X1, [X8+400]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X1, X21
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X26, [X31+16]
	115 Move X25, [X31+24]
	116 Move X2, X31
	117 Move X30, [X31+80]
	118 Call String.Format, X0, X1
	119 Return X0
	120 Move X8, [X19]
	121 Move X0, X19
	122 Move X9, [X8+392]
	123 Move X1, [X8+400]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X8, [X19]
	126 Move X20, X0
	127 Move X0, X19
	128 Move W1, W31
	129 Move X9, [X8+440]
	130 Move X2, [X8+448]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, 0xAD2000
	133 Move X8, [X8+1128]
	134 Move X19, X0
	135 Move X8, [X8]
	136 Move W9, [X8+224]
	137 Compare W9, 0
	138 JumpIfNotEqual {141}
	139 Move X0, X8
	140 Call 0x1C17DFC
	141 Move X0, X19
	142 Call NetEventSource.Format, X0
	143 Move X1, X0
	144 Move X0, X20
	145 Move X20, [X31+64]
	146 Move X19, [X31+72]
	147 Move X22, [X31+48]
	148 Move X21, [X31+56]
	149 Move X24, [X31+32]
	150 Move X23, [X31+40]
	151 Move X26, [X31+16]
	152 Move X25, [X31+24]
	153 Move X2, X31
	154 Move X30, [X31+80]
	155 Call String.Format, X0, X1
	156 Return X0
	157 Move X8, [X19]
	158 Move X0, X19
	159 Move X9, [X8+392]
	160 Move X1, [X8+400]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, [X19]
	163 Move X20, X0
	164 Move X0, X19
	165 Move W1, W31
	166 Move X9, [X8+440]
	167 Move X2, [X8+448]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X8, 0xAD2000
	170 Move X8, [X8+1128]
	171 Move X21, X0
	172 Move X8, [X8]
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X8
	177 Call 0x1C17DFC
	178 Move X0, X21
	179 Call NetEventSource.Format, X0
	180 Move X8, [X19]
	181 Move X21, X0
	182 Move W1, 1
	183 Move X0, X19
	184 Move X9, [X8+440]
	185 Move X2, [X8+448]
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Call NetEventSource.Format, X0
	188 Move X2, X0
	189 Move X0, X20
	190 Move X1, X21
	191 Move X20, [X31+64]
	192 Move X19, [X31+72]
	193 Move X22, [X31+48]
	194 Move X21, [X31+56]
	195 Move X24, [X31+32]
	196 Move X23, [X31+40]
	197 Move X26, [X31+16]
	198 Move X25, [X31+24]
	199 Move X3, X31
	200 Move X30, [X31+80]
	201 Call String.Format, X0, X1, X2
	202 Return X0
	203 Move X8, [X19]
	204 Move X0, X19
	205 Move X9, [X8+392]
	206 Move X1, [X8+400]
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X8, [X19]
	209 Move X20, X0
	210 Move X0, X19
	211 Move W1, W31
	212 Move X9, [X8+440]
	213 Move X2, [X8+448]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X8, 0xAD2000
	216 Move X8, [X8+1128]
	217 Move X21, X0
	218 Move X8, [X8]
	219 Move W9, [X8+224]
	220 Compare W9, 0
	221 JumpIfNotEqual {224}
	222 Move X0, X8
	223 Call 0x1C17DFC
	224 Move X0, X21
	225 Call NetEventSource.Format, X0
	226 Move X8, [X19]
	227 Move X21, X0
	228 Move W1, 1
	229 Move X0, X19
	230 Move X9, [X8+440]
	231 Move X2, [X8+448]
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Call NetEventSource.Format, X0
	234 Move X8, [X19]
	235 Move X22, X0
	236 Move W1, 2
	237 Move X0, X19
	238 Move X9, [X8+440]
	239 Move X2, [X8+448]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Call NetEventSource.Format, X0
	242 Move X3, X0
	243 Move X0, X20
	244 Move X1, X21
	245 Move X2, X22
	246 Move X20, [X31+64]
	247 Move X19, [X31+72]
	248 Move X22, [X31+48]
	249 Move X21, [X31+56]
	250 Move X24, [X31+32]
	251 Move X23, [X31+40]
	252 Move X26, [X31+16]
	253 Move X25, [X31+24]
	254 Move X4, X31
	255 Move X30, [X31+80]
	256 Call String.Format, X0, X1, X2, X3
	257 Return X0
	258 Call 0x1C17F28
	259 Call 0x1C17F20
	260 Call 0x1C17F44
	261 Move X1, X31
	262 Call 0x1C17DEC

Method: System.Void WriteEvent(System.Int32 eventId, System.String arg1, System.String arg2, System.String arg3, System.String arg4)

Disassembly:
	0x0366D2C4 LDR X0, [X0 + 0x780]
	0x0366D2C8 BL 0x1C16D08
	0x0366D2CC MOV X1, X0
	0x0366D2D0 MOV X0, X19
	0x0366D2D4 BL 0x1C16DEC
	0x0366D2D8 STP X30, X23, [X31 - 0x30]!
	0x0366D2DC STP X22, X21, [X31 + 0x10]
	0x0366D2E0 STP X20, X19, [X31 + 0x20]
	0x0366D2E4 ADRP X23, 0xD73000
	0x0366D2E8 LDRB W8, [X23 + 0x757]
	0x0366D2EC MOV X19, X3
	0x0366D2F0 MOV X22, X2
	0x0366D2F4 MOV X21, X1
	0x0366D2F8 MOV X20, X0
	0x0366D2FC TBNZ X8, 0x0, 0x366D314
	0x0366D300 ADRP X0, 0xAB5000
	0x0366D304 LDR X0, [X0 + 0x928]
	0x0366D308 BL 0x1C16CF4
	0x0366D30C MOVZ W8, 0x1
	0x0366D310 STRB W8, [X23 + 0x757]
	0x0366D314 LDR X8, [X20 + 0x18]
	0x0366D318 CBZ X8, 0x366D3A4
	0x0366D31C CMP W22, 0x10
	0x0366D320 B.LT 0x366D3C0
	0x0366D324 AND X10, X22, 0x0
	0x0366D328 ADD X10, X10, 0x1
	0x0366D32C MOV X8, X31
	0x0366D330 UBFM X9, X22, 0x1, 0x1F
	0x0366D334 UBFM X10, X10, 0x1, 0x3F
	0x0366D338 ADD X11, X21, 0x1
	0x0366D33C CMP X10, X8
	0x0366D340 B.EQ 0x366D3DC
	0x0366D344 LDR X12, [X20 + 0x18]
	0x0366D348 CBZ X12, 0x366D3E0
	0x0366D34C LDR W13, [X12 + 0x18]
	0x0366D350 CMP X8, X13
	0x0366D354 B.CS 0x366D3DC
	0x0366D358 ADD X12, X12, X8, 0x1, LSL
	0x0366D35C LDRB W12, [X12 + 0x21]
	0x0366D360 CMP X9, X8
	0x0366D364 STURB W12, [X11 - 0x1]
	0x0366D368 B.EQ 0x366D3DC
	0x0366D36C LDR X12, [X20 + 0x18]
	0x0366D370 CBZ X12, 0x366D3E0
	0x0366D374 LDR W13, [X12 + 0x18]
	0x0366D378 CMP X8, X13
	0x0366D37C B.CS 0x366D3DC
	0x0366D380 ADD X12, X12, X8, 0x1, LSL
	0x0366D384 LDRB W12, [X12 + 0x20]
	0x0366D388 ADD X8, X8, 0x1
	0x0366D38C CMP X8, 0x8
	0x0366D390 STRB W12, [X11], #0x2
	0x0366D394 B.NE 0x366D33C
	0x0366D398 MOVZ W0, 0x1
	0x0366D39C MOVZ W8, 0x10
	0x0366D3A0 B 0x366D3C8
	0x0366D3A4 CMP W22, 0x4
	0x0366D3A8 B.LT 0x366D3C0
	0x0366D3AC LDR W8, [X20 + 0x10]
	0x0366D3B0 MOVZ W0, 0x1
	0x0366D3B4 STR W8, [X21]
	0x0366D3B8 MOVZ W8, 0x4
	0x0366D3BC B 0x366D3C8
	0x0366D3C0 MOV W8, W31
	0x0366D3C4 MOV W0, W31
	0x0366D3C8 STR W8, [X19]
	0x0366D3CC LDP X20, X19, [X31 + 0x20]
	0x0366D3D0 LDP X22, X21, [X31 + 0x10]
	0x0366D3D4 LDP X30, X23, [X31], #0x30
	0x0366D3D8 RET
	0x0366D3DC BL 0x1C16F28
	0x0366D3E0 BL 0x1C16F20
	0x0366D3E4 STR X30, [X31 - 0x10]!
	0x0366D3E8 MOV X11, X31
	0x0366D3EC AND X8, X2, 0x0
	0x0366D3F0 ADD X9, X1, 0x1
	0x0366D3F4 MOVZ W10, 0x10
	0x0366D3F8 CMP X11, X8
	0x0366D3FC B.CS 0x366D468
	0x0366D400 LDR X13, [X0 + 0x18]
	0x0366D404 CBZ X13, 0x366D46C
	0x0366D408 LDR W14, [X13 + 0x18]
	0x0366D40C SUB X12, X10, 0x10
	0x0366D410 CMP X12, X14
	0x0366D414 B.CS 0x366D468
	0x0366D418 ADD X13, X13, X10, 0x1, LSL
	0x0366D41C LDRB W14, [X13 + 0x1]
	0x0366D420 ADD X13, X11, 0x1
	0x0366D424 ADD X15, X9, X11
	0x0366D428 CMP X13, X8
	0x0366D42C STURB W14, [X15 - 0x1]
	0x0366D430 B.CS 0x366D468
	0x0366D434 LDR X14, [X0 + 0x18]
	0x0366D438 CBZ X14, 0x366D46C
	0x0366D43C LDR W15, [X14 + 0x18]
	0x0366D440 CMP X12, X15
	0x0366D444 B.CS 0x366D468
	0x0366D448 LDRH W12, [X14, X10, LSL #1]
	0x0366D44C ADD X10, X10, 0x1
	0x0366D450 CMP X10, 0x18
	0x0366D454 STRB W12, [X9, X11, LSL]
	0x0366D458 ADD X11, X13, 0x1
	0x0366D45C B.NE 0x366D3F8
	0x0366D460 LDR X30, [X31], #0x10
	0x0366D464 RET
	0x0366D468 BL 0x1C16F28
	0x0366D46C BL 0x1C16F20
	0x0366D470 STR X30, [X31 - 0x10]!
	0x0366D474 CBZ W2, 0x366D4B8
	0x0366D478 LDR W8, [X0 + 0x10]
	0x0366D47C CMP W2, 0x1
	0x0366D480 STRB W8, [X1]
	0x0366D484 B.EQ 0x366D4B8
	0x0366D488 UBFM W9, W8, 0x8, 0x1F
	0x0366D48C CMP W2, 0x2
	0x0366D490 STRB W9, [X1 + 0x1]
	0x0366D494 B.LS 0x366D4B8
	0x0366D498 UBFM W9, W8, 0x10, 0x1F
	0x0366D49C CMP W2, 0x3
	0x0366D4A0 STRB W9, [X1 + 0x2]
	0x0366D4A4 B.EQ 0x366D4B8
	0x0366D4A8 UBFM W8, W8, 0x18, 0x1F
	0x0366D4AC STRB W8, [X1 + 0x3]
	0x0366D4B0 LDR X30, [X31], #0x10
	0x0366D4B4 RET
	0x0366D4B8 BL 0x1C16F28
	0x0366D4BC STP X30, X21, [X31 - 0x20]!
	0x0366D4C0 STP X20, X19, [X31 + 0x10]
	0x0366D4C4 ADRP X21, 0xD73000
	0x0366D4C8 ADRP X20, 0xA86000
	0x0366D4CC LDRB W8, [X21 + 0x758]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X26+40]
	017 Move X19, 0xD74000
	018 Move X21, X5
	019 Move X22, X4
	020 Move [X29-8], X8
	021 Move W8, [X19+1868]
	022 Move X23, X3
	023 Move X24, X2
	024 Move W25, W1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0xAD1000
	031 Move X0, [X0+1824]
	032 Call 0x1C17CF4
	033 Move X0, 0xA87000
	034 Move X0, [X0+2440]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+1868], W8
	038 Move X0, X20
	039 Move X1, X31
	040 Call EventSource.IsEnabled, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {154}
	045 Move [X29-20], W25
	046 Move X8, 0xA87000
	047 Move X8, [X8+2440]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X8]
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Compare X25, 0
	058 JumpIfEqual {78}
	059 Move X0, X31
	060 Call RuntimeHelpers.get_OffsetToStringData
	061 Add X23, X25, W0
	062 Compare X24, 0
	063 JumpIfEqual {81}
	064 Move X0, X31
	065 Call RuntimeHelpers.get_OffsetToStringData
	066 Add X19, X24, W0
	067 Compare X28, 0
	068 JumpIfEqual {84}
	069 Move X0, X31
	070 Call RuntimeHelpers.get_OffsetToStringData
	071 Add X22, X28, W0
	072 Compare X27, 0
	073 JumpIfEqual {87}
	074 Move X0, X31
	075 Call RuntimeHelpers.get_OffsetToStringData
	076 Add X8, X27, W0
	077 Move [X29-16], X8
	078 Move X23, X25
	079 Compare X24, 0
	080 JumpIfNotEqual {64}
	081 Move X19, X24
	082 Compare X28, 0
	083 JumpIfNotEqual {69}
	084 Move X22, X28
	085 Compare X27, 0
	086 JumpIfNotEqual {74}
	087 Move [X29-16], X27
	088 Add X8, X31, 0
	089 Subtract X21, X8, 64
	090 Add X31, X21, 0
	091 NotImplemented "Instruction MOVI not yet implemented."
	092 Move X0, X23
	093 Move X1, X31
	094 Move [X8-32], V0
	095 Move [X8-24], V0
	096 Move [X8-64], V0
	097 Move [X8-56], V0
	098 Call IntPtr.op_Explicit, X0
	099 Compare X25, 0
	100 JumpIfEqual {171}
	101 Move W8, [X25+16]
	102 Move [X21], X0
	103 Move X0, X19
	104 Move X1, X31
	105 Move W8, W8
	106 ShiftRight W8, 31
	107 And W8, W8, 0x3FFFFFFF
	108 Add W8, W8, 2
	109 Move [X21+8], W8
	110 Move [X21+12], W31
	111 Call IntPtr.op_Explicit, X0
	112 Compare X24, 0
	113 JumpIfEqual {171}
	114 Move W8, [X24+16]
	115 Move [X21+16], X0
	116 Move X0, X22
	117 Move X1, X31
	118 Move W8, W8
	119 ShiftRight W8, 31
	120 And W8, W8, 0x3FFFFFFF
	121 Add W8, W8, 2
	122 Move [X21+24], W8
	123 Move [X21+28], W31
	124 Call IntPtr.op_Explicit, X0
	125 Compare X28, 0
	126 JumpIfEqual {171}
	127 Move W8, [X28+16]
	128 Move [X21+32], X0
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move X1, X31
	131 Move W8, W8
	132 ShiftRight W8, 31
	133 And W8, W8, 0x3FFFFFFF
	134 Add W8, W8, 2
	135 Move [X21+40], W8
	136 Move [X21+44], W31
	137 Call IntPtr.op_Explicit, X0
	138 Compare X27, 0
	139 JumpIfEqual {171}
	140 Move W8, [X27+16]
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Move [X21+48], X0
	143 Move W2, 4
	144 Move W8, W8
	145 ShiftRight W8, 31
	146 And W8, W8, 0x3FFFFFFF
	147 Add W8, W8, 2
	148 Move X0, X20
	149 Move X3, X21
	150 Move X4, X31
	151 Move [X21+56], W8
	152 Move [X21+60], W31
	153 Call EventSource.WriteEventCore, X0, X1, X2, X3
	154 Move X8, [X26+40]
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Add X31, X29, 0
	158 Move X20, [X31+80]
	159 Move X19, [X31+88]
	160 Move X22, [X31+64]
	161 Move X21, [X31+72]
	162 Move X24, [X31+48]
	163 Move X23, [X31+56]
	164 Move X26, [X31+32]
	165 Move X25, [X31+40]
	166 Move X28, [X31+16]
	167 Move X27, [X31+24]
	168 Move X29, [X31+96]
	169 Move X30, [X31+104]
	170 Return 
	171 Call 0x1C17F20
	172 Call 0x3EB2B20

Method: System.Void .ctor()

Disassembly:
	0x0366D4E4 BL 0x1C16CF4
	0x0366D4E8 ADRP X0, 0xAB5000

ISIL:
	001 Move X1, X31
	002 Call EventSource..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x0366D4EC LDR X0, [X0 + 0x2F8]
	0x0366D4F0 BL 0x1C16CF4
	0x0366D4F4 MOVZ W8, 0x1
	0x0366D4F8 STRB W8, [X21 + 0x758]
	0x0366D4FC LDR X0, [X20]
	0x0366D500 ADRP X20, 0xAB5000
	0x0366D504 LDR X8, [X19 + 0x18]
	0x0366D508 LDR X20, [X20 + 0x2F8]
	0x0366D50C CBZ X8, 0x366D59C
	0x0366D510 MOVZ W1, 0x10
	0x0366D514 BL 0x1C16D6C
	0x0366D518 LDR X1, [X20]
	0x0366D51C MOV X20, X0
	0x0366D520 BL 0x25FB4C0
	0x0366D524 AND X10, X1, 0x0
	0x0366D528 ADD X10, X10, 0x1
	0x0366D52C MOV X8, X31
	0x0366D530 UBFM X9, X1, 0x1, 0x1F
	0x0366D534 UBFM X10, X10, 0x1, 0x3F
	0x0366D538 ADD X11, X0, 0x1
	0x0366D53C CMP X10, X8
	0x0366D540 B.EQ 0x366D5FC
	0x0366D544 LDR X12, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD74000
	005 Move X20, 0xAD1000
	006 Move W8, [X19+1869]
	007 Move X20, [X20+1128]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAD1000
	013 Move X0, [X0+1128]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1869], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call EventSource..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

