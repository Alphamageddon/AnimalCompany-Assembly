Type: System.Net.ServicePointManager

Method: System.Void .cctor()

Disassembly:
	0x036A6EB8 ADD X0, X31, 0x30
	0x036A6EBC BL 0x2C0A83C
	0x036A6EC0 CBZ X21, 0x36A6E94
	0x036A6EC4 MOV X0, X21
	0x036A6EC8 BL 0x1C16F18
	0x036A6ECC LDP X20, X19, [X31 + 0x90]
	0x036A6ED0 LDP X22, X21, [X31 + 0x80]
	0x036A6ED4 LDP X24, X23, [X31 + 0x70]
	0x036A6ED8 LDR X30, [X31 + 0x60]
	0x036A6EDC ADD X31, X31, 0xA0
	0x036A6EE0 RET
	0x036A6EE4 BL 0x1C16F20
	0x036A6EE8 MOV X19, X0
	0x036A6EEC MOV X21, X31
	0x036A6EF0 B 0x36A6EF8
	0x036A6EF4 MOV X19, X0
	0x036A6EF8 LDR X1, [X22]
	0x036A6EFC ADD X0, X31, 0x30
	0x036A6F00 BL 0x2C0A83C
	0x036A6F04 CBNZ X21, 0x36A6F10
	0x036A6F08 MOV X0, X19
	0x036A6F0C BL 0x1D2C690
	0x036A6F10 MOV X0, X21
	0x036A6F14 BL 0x1C16F18
	0x036A6F18 BL 0x1990590
	0x036A6F1C SUB X31, X31, 0x40
	0x036A6F20 STP X30, X23, [X31 + 0x10]
	0x036A6F24 STP X22, X21, [X31 + 0x20]
	0x036A6F28 STP X20, X19, [X31 + 0x30]
	0x036A6F2C ADRP X21, 0xD3A000
	0x036A6F30 LDRB W8, [X21 + 0x90F]
	0x036A6F34 MOV X20, X1
	0x036A6F38 MOV X19, X0
	0x036A6F3C TBNZ X8, 0x0, 0x36A6F60
	0x036A6F40 ADRP X0, 0xA98000
	0x036A6F44 LDR X0, [X0 + 0xD60]
	0x036A6F48 BL 0x1C16CF4
	0x036A6F4C ADRP X0, 0xA98000
	0x036A6F50 LDR X0, [X0 + 0xD68]
	0x036A6F54 BL 0x1C16CF4
	0x036A6F58 MOVZ W8, 0x1
	0x036A6F5C STRB W8, [X21 + 0x90F]
	0x036A6F60 CBZ X20, 0x36A6FF8
	0x036A6F64 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD3B000
	007 Move X22, 0xA99000
	008 Move X19, 0xA99000
	009 Move X20, 0xA7C000
	010 Move W8, [X21+2300]
	011 Move X22, [X22+3240]
	012 Move X19, [X19+3248]
	013 Move X20, [X20+560]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA99000
	019 Move X0, [X0+3248]
	020 Call 0x1C17CF4
	021 Move X0, 0xA99000
	022 Move X0, [X0+3240]
	023 Call 0x1C17CF4
	024 Move X0, 0xA7C000
	025 Move X0, [X0+560]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2300], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call ConcurrentDictionary`2<Object, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X9, -45850624
	036 Move V0, [X9+127]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move W9, 1
	041 Move [X8], X19
	042 Move X8, [X20]
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X8, [X8+184]
	046 Move [X8+1], V0
	047 Move [X8+32], W31
	048 Move [X8+36], W31
	049 Move [X8+40], W9
	050 Move X30, [X31+48]
	051 Return 

Method: System.Net.ICertificatePolicy GetLegacyCertificatePolicy()

Disassembly:
	0x036A6F68 BL 0x36A7374
	0x036A6F6C MOV X0, X20
	0x036A6F70 BL 0x36A7640
	0x036A6F74 CBZ X0, 0x36A6FE4
	0x036A6F78 MOV X22, X0
	0x036A6F7C MOV X0, X20
	0x036A6F80 MOV X1, X22
	0x036A6F84 MOV W2, W31
	0x036A6F88 BL 0x36A7468
	0x036A6F8C CBZ X0, 0x36A6FE4
	0x036A6F90 ADRP X8, 0xA98000
	0x036A6F94 LDR X23, [X19 + 0x38]
	0x036A6F98 LDR X8, [X8 + 0xD68]
	0x036A6F9C MOV X21, X0
	0x036A6FA0 ADD X0, X31, 0x0
	0x036A6FA4 MOV X1, X20
	0x036A6FA8 LDR X3, [X8]
	0x036A6FAC MOV X2, X22
	0x036A6FB0 STP X31, X31, [X31]
	0x036A6FB4 BL 0x27ABC80
	0x036A6FB8 CBZ X23, 0x36A6FF8
	0x036A6FBC ADRP X8, 0xA98000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD3B000
	005 Move X19, 0xA7C000
	006 Move W8, [X20+2301]
	007 Move X19, [X19+560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA7C000
	013 Move X0, [X0+560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2301], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean get_CheckCertificateRevocationList()

Disassembly:
	0x036A6FC0 LDP X1, X2, [X31]
	0x036A6FC4 LDR X8, [X8 + 0xD60]
	0x036A6FC8 MOV X0, X23
	0x036A6FCC LDR X3, [X8]
	0x036A6FD0 BL 0x2EEAC80
	0x036A6FD4 MOV X0, X19
	0x036A6FD8 MOV X1, X21
	0x036A6FDC BL 0x36A72A8
	0x036A6FE0 MOVZ W0, 0x1
	0x036A6FE4 LDP X20, X19, [X31 + 0x30]
	0x036A6FE8 LDP X22, X21, [X31 + 0x20]
	0x036A6FEC LDP X30, X23, [X31 + 0x10]
	0x036A6FF0 ADD X31, X31, 0x40
	0x036A6FF4 RET
	0x036A6FF8 BL 0x1C16F20
	0x036A6FFC SUB X31, X31, 0x80
	0x036A7000 STR X30, [X31 + 0x40]
	0x036A7004 STP X24, X23, [X31 + 0x50]
	0x036A7008 STP X22, X21, [X31 + 0x60]
	0x036A700C STP X20, X19, [X31 + 0x70]
	0x036A7010 ADRP X22, 0xD39000
	0x036A7014 LDRB W8, [X22 + 0x90E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD3B000
	005 Move X19, 0xA7C000
	006 Move W8, [X20+2302]
	007 Move X19, [X19+560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA7C000
	013 Move X0, [X0+560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2302], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+32]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 get_DnsRefreshTimeout()

Disassembly:
	0x036A7018 MOV X20, X2
	0x036A701C MOV X19, X1
	0x036A7020 MOV X21, X0
	0x036A7024 TBNZ X8, 0x0, 0x36A7090
	0x036A7028 ADRP X0, 0xA97000
	0x036A702C LDR X0, [X0 + 0xD70]
	0x036A7030 BL 0x1C16CF4
	0x036A7034 ADRP X0, 0xA97000
	0x036A7038 LDR X0, [X0 + 0xD60]
	0x036A703C BL 0x1C16CF4
	0x036A7040 ADRP X0, 0xA97000
	0x036A7044 LDR X0, [X0 + 0xD78]
	0x036A7048 BL 0x1C16CF4
	0x036A704C ADRP X0, 0xA97000
	0x036A7050 LDR X0, [X0 + 0xD80]
	0x036A7054 BL 0x1C16CF4
	0x036A7058 ADRP X0, 0xA4D000
	0x036A705C LDR X0, [X0 + 0x7B8]
	0x036A7060 BL 0x1C16CF4
	0x036A7064 ADRP X0, 0xA97000
	0x036A7068 LDR X0, [X0 + 0xD68]
	0x036A706C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD3A000
	005 Move X19, 0xA7B000
	006 Move W8, [X20+2303]
	007 Move X19, [X19+560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA7B000
	013 Move X0, [X0+560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2303], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+28]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Net.SecurityProtocolType get_SecurityProtocol()

Disassembly:
	0x036A7070 ADRP X0, 0xA97000
	0x036A7074 LDR X0, [X0 + 0xD88]
	0x036A7078 BL 0x1C16CF4
	0x036A707C ADRP X0, 0xA97000
	0x036A7080 LDR X0, [X0 + 0xD90]
	0x036A7084 BL 0x1C16CF4
	0x036A7088 MOVZ W8, 0x1
	0x036A708C STRB W8, [X22 + 0x90E]
	0x036A7090 CBZ X20, 0x36A721C
	0x036A7094 LDR X8, [X20 + 0x58]
	0x036A7098 CBZ X8, 0x36A721C
	0x036A709C LDR X22, [X8 + 0x18]
	0x036A70A0 CBZ X22, 0x36A721C
	0x036A70A4 ADRP X8, 0xA97000
	0x036A70A8 LDR X8, [X8 + 0xD80]
	0x036A70AC MOV X0, X22
	0x036A70B0 LDR X1, [X8]
	0x036A70B4 BL 0x25C9B74
	0x036A70B8 TBZ X0, 0x0, 0x36A70EC
	0x036A70BC LDRB W8, [X22 + 0x20]
	0x036A70C0 LDR X22, [X22 + 0x28]
	0x036A70C4 TBZ X8, 0x0, 0x36A70F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD3A000
	005 Move X19, 0xA7B000
	006 Move W8, [X20+2304]
	007 Move X19, [X19+560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA7B000
	013 Move X0, [X0+560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2304], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+36]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Net.ServerCertValidationCallback get_ServerCertValidationCallback()

Disassembly:
	0x036A70C8 LDR X0, [X20 + 0x18]
	0x036A70CC CBZ X0, 0x36A721C
	0x036A70D0 MOV X1, X22
	0x036A70D4 MOV X2, X31
	0x036A70D8 BL 0x36AB178
	0x036A70DC TBZ X0, 0x0, 0x36A70F0
	0x036A70E0 CBZ X22, 0x36A7180
	0x036A70E4 MOVZ W24, 0x1
	0x036A70E8 B 0x36A7108
	0x036A70EC MOV X22, X31
	0x036A70F0 CBZ X19, 0x36A721C
	0x036A70F4 LDR X1, [X20 + 0x18]
	0x036A70F8 MOV X0, X19
	0x036A70FC BL 0x36A7220
	0x036A7100 CBZ X22, 0x36A7200
	0x036A7104 MOV W24, W31
	0x036A7108 ADRP X8, 0xA97000
	0x036A710C LDR X8, [X8 + 0xD68]
	0x036A7110 LDR X23, [X21 + 0x38]
	0x036A7114 ADD X0, X31, 0x20
	0x036A7118 MOV X1, X19
	0x036A711C LDR X3, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD3A000
	005 Move X19, 0xA7B000
	006 Move W8, [X20+2305]
	007 Move X19, [X19+560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA7B000
	013 Move X0, [X0+560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2305], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+48]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Net.Security.RemoteCertificateValidationCallback get_ServerCertificateValidationCallback()

Disassembly:
	0x036A7120 MOV X2, X22
	0x036A7124 STP X31, X31, [X31 + 0x20]
	0x036A7128 BL 0x27ABC80
	0x036A712C CBZ X23, 0x36A721C
	0x036A7130 ADRP X8, 0xA97000
	0x036A7134 LDR X8, [X8 + 0xD60]
	0x036A7138 LDP X1, X2, [X31 + 0x20]
	0x036A713C MOV X0, X23
	0x036A7140 LDR X3, [X8]
	0x036A7144 BL 0x2EEAC80
	0x036A7148 CBZ W24, 0x36A715C
	0x036A714C LDR X1, [X20 + 0x18]
	0x036A7150 MOV X0, X21
	0x036A7154 BL 0x36A72A8
	0x036A7158 B 0x36A7178
	0x036A715C CBZ X19, 0x36A721C
	0x036A7160 MOV X0, X19
	0x036A7164 BL 0x36A7374
	0x036A7168 MOVZ W2, 0x1
	0x036A716C MOV X0, X19
	0x036A7170 MOV X1, X22
	0x036A7174 BL 0x36A7468
	0x036A7178 MOV W0, W31
	0x036A717C B 0x36A7204
	0x036A7180 ADRP X8, 0xA4D000
	0x036A7184 LDR X8, [X8 + 0x7B8]
	0x036A7188 LDR W22, [X21 + 0x1C]
	0x036A718C LDR X0, [X8]
	0x036A7190 LDR W8, [X0 + 0xE0]
	0x036A7194 CBNZ W8, 0x36A719C
	0x036A7198 BL 0x1C16DFC
	0x036A719C MOV W0, W22
	0x036A71A0 MOV X1, X31
	0x036A71A4 BL 0x33F53C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD3A000
	005 Move X19, 0xA7B000
	006 Move W8, [X20+2306]
	007 Move X19, [X19+560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA7B000
	013 Move X0, [X0+560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2306], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X8, [X8+48]
	025 Compare X8, 0
	026 JumpIfEqual {37}
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {36}
	030 Call 0x1C17DFC
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X8, [X8+48]
	034 Compare X8, 0
	035 JumpIfEqual {42}
	036 Move X0, [X8+16]
	037 Move X0, X31
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Net.ServicePoint FindServicePoint(System.Uri address, System.Net.IWebProxy proxy)

Disassembly:
	0x0369E018 MOV X2, X31
	0x0369E01C BL 0x3EB1B00
	0x0369E020 MOV X20, X0
	0x0369E024 BL 0x3EB1AE0
	0x0369E028 MOV X0, X20
	0x0369E02C BL 0x1D2C690
	0x0369E030 BL 0x1990590
	0x0369E034 STR X30, [X31 - 0x30]!
	0x0369E038 STP X22, X21, [X31 + 0x10]
	0x0369E03C STP X20, X19, [X31 + 0x20]
	0x0369E040 ADRP X22, 0xD42000
	0x0369E044 ADRP X21, 0xA7D000
	0x0369E048 LDRB W8, [X22 + 0x8C7]
	0x0369E04C LDR X21, [X21 + 0xB88]
	0x0369E050 MOV X19, X1
	0x0369E054 MOV X20, X0
	0x0369E058 TBNZ X8, 0x0, 0x369E070
	0x0369E05C ADRP X0, 0xA7D000
	0x0369E060 LDR X0, [X0 + 0xB88]
	0x0369E064 BL 0x1C16CF4
	0x0369E068 MOVZ W8, 0x1
	0x0369E06C STRB W8, [X22 + 0x8C7]
	0x0369E070 ADD X0, X20, 0x100
	0x0369E074 MOV W1, W31
	0x0369E078 MOV W2, W31
	0x0369E07C MOV X3, X31
	0x0369E080 BL 0x33E7AB4
	0x0369E084 LDR X8, [X21]
	0x0369E088 MOV W20, W0
	0x0369E08C LDR W9, [X8 + 0xE0]
	0x0369E090 CBNZ W9, 0x369E09C
	0x0369E094 MOV X0, X8
	0x0369E098 BL 0x1C16DFC
	0x0369E09C CMP W20, 0x1
	0x0369E0A0 MOV X0, X19
	0x0369E0A4 LDP X20, X19, [X31 + 0x20]
	0x0369E0A8 LDP X22, X21, [X31 + 0x10]
	0x0369E0AC CSET W1, EQ
	0x0369E0B0 LDR X30, [X31], #0x30
	0x0369E0B4 B 0x369E3F8
	0x0369E0B8 STP X30, X23, [X31 - 0x30]!
	0x0369E0BC STP X22, X21, [X31 + 0x10]
	0x0369E0C0 STP X20, X19, [X31 + 0x20]
	0x0369E0C4 ADRP X22, 0xD42000
	0x0369E0C8 ADRP X23, 0xAA0000
	0x0369E0CC ADRP X20, 0xAA0000
	0x0369E0D0 ADRP X21, 0xAA0000
	0x0369E0D4 LDRB W8, [X22 + 0x8C3]
	0x0369E0D8 LDR X23, [X23 + 0x868]
	0x0369E0DC LDR X20, [X20 + 0x848]
	0x0369E0E0 LDR X21, [X21 + 0x870]
	0x0369E0E4 MOV X19, X0
	0x0369E0E8 TBNZ X8, 0x0, 0x369E118
	0x0369E0EC ADRP X0, 0xAA0000
	0x0369E0F0 LDR X0, [X0 + 0x868]
	0x0369E0F4 BL 0x1C16CF4
	0x0369E0F8 ADRP X0, 0xAA0000
	0x0369E0FC LDR X0, [X0 + 0x848]
	0x0369E100 BL 0x1C16CF4
	0x0369E104 ADRP X0, 0xAA0000
	0x0369E108 LDR X0, [X0 + 0x870]
	0x0369E10C BL 0x1C16CF4
	0x0369E110 MOVZ W8, 0x1
	0x0369E114 STRB W8, [X22 + 0x8C3]
	0x0369E118 LDR X0, [X23]
	0x0369E11C BL 0x1C16F10
	0x0369E120 LDR X2, [X20]
	0x0369E124 MOV X1, X19
	0x0369E128 MOV X3, X31
	0x0369E12C MOV X20, X0
	0x0369E130 BL 0x2D2B9F4
	0x0369E134 LDR X2, [X21]
	0x0369E138 MOV X0, X19
	0x0369E13C MOV X1, X20
	0x0369E140 LDP X20, X19, [X31 + 0x20]
	0x0369E144 LDP X22, X21, [X31 + 0x10]
	0x0369E148 LDP X30, X23, [X31], #0x30
	0x0369E14C B 0x21ED3FC
	0x0369E150 SUB X31, X31, 0xF0
	0x0369E154 STP X30, X25, [X31 + 0xB0]
	0x0369E158 STP X24, X23, [X31 + 0xC0]
	0x0369E15C STP X22, X21, [X31 + 0xD0]
	0x0369E160 STP X20, X19, [X31 + 0xE0]
	0x0369E164 ADRP X22, 0xD42000
	0x0369E168 ADRP X21, 0xAA0000
	0x0369E16C LDRB W8, [X22 + 0x8C4]
	0x0369E170 LDR X21, [X21 + 0x888]
	0x0369E174 MOV X19, X1
	0x0369E178 MOV X20, X0
	0x0369E17C TBNZ X8, 0x0, 0x369E1B8
	0x0369E180 ADRP X0, 0xAA0000
	0x0369E184 LDR X0, [X0 + 0x890]
	0x0369E188 BL 0x1C16CF4
	0x0369E18C ADRP X0, 0xAA0000
	0x0369E190 LDR X0, [X0 + 0x898]
	0x0369E194 BL 0x1C16CF4
	0x0369E198 ADRP X0, 0xAA0000
	0x0369E19C LDR X0, [X0 + 0x8A0]
	0x0369E1A0 BL 0x1C16CF4
	0x0369E1A4 ADRP X0, 0xAA0000
	0x0369E1A8 LDR X0, [X0 + 0x888]
	0x0369E1AC BL 0x1C16CF4
	0x0369E1B0 MOVZ W8, 0x1
	0x0369E1B4 STRB W8, [X22 + 0x8C4]
	0x0369E1B8 ADRP X24, 0xAA0000
	0x0369E1BC ADRP X23, 0xAA0000
	0x0369E1C0 ADRP X22, 0xAA0000
	0x0369E1C4 LDR X24, [X24 + 0x890]
	0x0369E1C8 LDR X23, [X23 + 0x898]
	0x0369E1CC LDR X22, [X22 + 0x8A0]
	0x0369E1D0 ADD X0, X31, 0x8
	0x0369E1D4 MOVZ W2, 0xA8
	0x0369E1D8 MOV W1, W31
	0x0369E1DC ADD X25, X31, 0x8
	0x0369E1E0 BL 0x3EB1B10
	0x0369E1E4 LDR X0, [X21]
	0x0369E1E8 STP X20, X19, [X31 + 0x28]
	0x0369E1EC LDR W8, [X0 + 0xE0]
	0x0369E1F0 CBNZ W8, 0x369E1F8
	0x0369E1F4 BL 0x1C16DFC
	0x0369E1F8 LDR X0, [X24]
	0x0369E1FC ADD X19, X25, 0x8
	0x0369E200 MOV X8, X19
	0x0369E204 BL 0x263221C
	0x0369E208 LDR X2, [X23]
	0x0369E20C MOVN W8, 0x0
	0x0369E210 ADD X1, X31, 0x8
	0x0369E214 MOV X0, X19
	0x0369E218 STR W8, [X31 + 0x8]
	0x0369E21C BL 0x1FD0014
	0x0369E220 LDR X1, [X22]
	0x0369E224 MOV X0, X19
	0x0369E228 BL 0x2632230
	0x0369E22C LDP X20, X19, [X31 + 0xE0]
	0x0369E230 LDP X22, X21, [X31 + 0xD0]
	0x0369E234 LDP X24, X23, [X31 + 0xC0]
	0x0369E238 LDP X30, X25, [X31 + 0xB0]
	0x0369E23C ADD X31, X31, 0xF0
	0x0369E240 RET
	0x0369E244 SUB X31, X31, 0xA0
	0x0369E248 STP X30, X23, [X31 + 0x70]
	0x0369E24C STP X22, X21, [X31 + 0x80]
	0x0369E250 STP X20, X19, [X31 + 0x90]
	0x0369E254 ADRP X23, 0xD42000
	0x0369E258 ADRP X22, 0xAA0000
	0x0369E25C LDRB W8, [X23 + 0x8C5]
	0x0369E260 LDR X22, [X22 + 0x8A8]
	0x0369E264 MOV X19, X2
	0x0369E268 MOV X20, X1
	0x0369E26C MOV X21, X0
	0x0369E270 TBNZ X8, 0x0, 0x369E2AC
	0x0369E274 ADRP X0, 0xAA0000
	0x0369E278 LDR X0, [X0 + 0x8B0]
	0x0369E27C BL 0x1C16CF4
	0x0369E280 ADRP X0, 0xAA0000
	0x0369E284 LDR X0, [X0 + 0x8B8]
	0x0369E288 BL 0x1C16CF4
	0x0369E28C ADRP X0, 0xAA0000
	0x0369E290 LDR X0, [X0 + 0x8C0]
	0x0369E294 BL 0x1C16CF4
	0x0369E298 ADRP X0, 0xAA0000
	0x0369E29C LDR X0, [X0 + 0x8A8]
	0x0369E2A0 BL 0x1C16CF4
	0x0369E2A4 MOVZ W8, 0x1
	0x0369E2A8 STRB W8, [X23 + 0x8C5]
	0x0369E2AC LDR X0, [X22]
	0x0369E2B0 MOVI V0.2D, 0x0
	0x0369E2B4 STP V0, V0, [X31 + 0x20]
	0x0369E2B8 STP V0, V0, [X31 + 0x50]
	0x0369E2BC STR V0, [X31 + 0x4]
	0x0369E2C0 STP V0, V0, [X31]
	0x0369E2C4 STP X21, X20, [X31 + 0x20]
	0x0369E2C8 STR X19, [X31 + 0x30]
	0x0369E2CC ADRP X19, 0xAA0000
	0x0369E2D0 ADRP X21, 0xAA0000
	0x0369E2D4 ADRP X20, 0xAA0000
	0x0369E2D8 LDR W8, [X0 + 0xE0]
	0x0369E2DC LDR X19, [X19 + 0x8B0]
	0x0369E2E0 LDR X21, [X21 + 0x8B8]
	0x0369E2E4 LDR X20, [X20 + 0x8C0]
	0x0369E2E8 CBNZ W8, 0x369E2F0
	0x0369E2EC BL 0x1C16DFC
	0x0369E2F0 LDR X0, [X19]
	0x0369E2F4 ADD X8, X31, 0x0
	0x0369E2F8 ORR X19, X8, 0xF
	0x0369E2FC MOV X8, X19
	0x0369E300 BL 0x24DD3DC
	0x0369E304 LDR X2, [X21]
	0x0369E308 MOVN W8, 0x0
	0x0369E30C ADD X1, X31, 0x0
	0x0369E310 MOV X0, X19
	0x0369E314 STR W8, [X31]
	0x0369E318 BL 0x1FAA000
	0x0369E31C LDR X1, [X20]
	0x0369E320 MOV X0, X19
	0x0369E324 BL 0x24DD3F0
	0x0369E328 LDP X20, X19, [X31 + 0x90]
	0x0369E32C LDP X22, X21, [X31 + 0x80]
	0x0369E330 LDP X30, X23, [X31 + 0x70]
	0x0369E334 ADD X31, X31, 0xA0
	0x0369E338 RET
	0x0369E33C STR X30, [X31 - 0x20]!
	0x0369E340 STP X20, X19, [X31 + 0x10]
	0x0369E344 ADRP X20, 0xD42000
	0x0369E348 LDRB W8, [X20 + 0x8C6]
	0x0369E34C MOV X19, X0
	0x0369E350 TBNZ X8, 0x0, 0x369E374
	0x0369E354 ADRP X0, 0xA87000
	0x0369E358 LDR X0, [X0 + 0x8D0]
	0x0369E35C BL 0x1C16CF4
	0x0369E360 ADRP X0, 0xA89000
	0x0369E364 LDR X0, [X0 + 0xEE8]
	0x0369E368 BL 0x1C16CF4
	0x0369E36C MOVZ W8, 0x1
	0x0369E370 STRB W8, [X20 + 0x8C6]
	0x0369E374 CBZ X19, 0x369E3E4
	0x0369E378 ADRP X8, 0xA87000
	0x0369E37C LDR X8, [X8 + 0x8D0]
	0x0369E380 LDR X9, [X19]
	0x0369E384 LDR X8, [X8]
	0x0369E388 LDRB W11, [X9 + 0x130]
	0x0369E38C LDRB W10, [X8 + 0x130]
	0x0369E390 CMP W11, W10
	0x0369E394 B.CC 0x369E3E4
	0x0369E398 LDR X9, [X9 + 0xC8]
	0x0369E39C ADD X9, X9, X10, 0x3, LSL
	0x0369E3A0 LDUR X9, [X9 - 0x8]
	0x0369E3A4 CMP X9, X8
	0x0369E3A8 B.NE 0x369E3E4
	0x0369E3AC MOV X0, X19
	0x0369E3B0 MOV X1, X31
	0x0369E3B4 BL 0x3315318
	0x0369E3B8 CBZ X0, 0x369E3F4
	0x0369E3BC MOV X20, X0
	0x0369E3C0 LDR X0, [X0 + 0x90]
	0x0369E3C4 CBZ X0, 0x369E3F4
	0x0369E3C8 ADRP X8, 0xA89000
	0x0369E3CC LDR X8, [X8 + 0xEE8]
	0x0369E3D0 LDR X1, [X8]
	0x0369E3D4 BL 0x25518BC
	0x0369E3D8 CMP W0, 0x1
	0x0369E3DC B.NE 0x369E3E4
	0x0369E3E0 LDR X19, [X20 + 0x28]
	0x0369E3E4 MOV X0, X19
	0x0369E3E8 LDP X20, X19, [X31 + 0x10]
	0x0369E3EC LDR X30, [X31], #0x20
	0x0369E3F0 RET
	0x0369E3F4 BL 0x1C16F20
	0x0369E3F8 STR X30, [X31 - 0x30]!
	0x0369E3FC STP X22, X21, [X31 + 0x10]
	0x0369E400 STP X20, X19, [X31 + 0x20]
	0x0369E404 ADRP X22, 0xD42000
	0x0369E408 ADRP X21, 0xA7D000
	0x0369E40C LDRB W8, [X22 + 0x8C8]
	0x0369E410 LDR X21, [X21 + 0xB88]
	0x0369E414 MOV W20, W1
	0x0369E418 MOV X19, X0
	0x0369E41C TBNZ X8, 0x0, 0x369E458
	0x0369E420 ADRP X0, 0xA7D000
	0x0369E424 LDR X0, [X0 + 0xB88]
	0x0369E428 BL 0x1C16CF4
	0x0369E42C ADRP X0, 0xA7E000
	0x0369E430 LDR X0, [X0 + 0x4B8]
	0x0369E434 BL 0x1C16CF4
	0x0369E438 ADRP X0, 0xA5D000
	0x0369E43C LDR X0, [X0 + 0x8A8]
	0x0369E440 BL 0x1C16CF4
	0x0369E444 ADRP X0, 0xA80000
	0x0369E448 LDR X0, [X0 + 0x330]
	0x0369E44C BL 0x1C16CF4
	0x0369E450 MOVZ W8, 0x1
	0x0369E454 STRB W8, [X22 + 0x8C8]
	0x0369E458 LDR X0, [X21]
	0x0369E45C LDR W8, [X0 + 0xE0]
	0x0369E460 CBNZ W8, 0x369E468
	0x0369E464 BL 0x1C16DFC
	0x0369E468 MOV X0, X19
	0x0369E46C BL 0x369E33C
	0x0369E470 CBZ X0, 0x369E54C
	0x0369E474 ADRP X22, 0xA80000
	0x0369E478 LDR X22, [X22 + 0x330]
	0x0369E47C LDR X8, [X0]
	0x0369E480 MOV X19, X0
	0x0369E484 LDR X10, [X22]
	0x0369E488 LDRB W9, [X8 + 0x130]
	0x0369E48C LDRB W11, [X10 + 0x130]
	0x0369E490 CMP W9, W11
	0x0369E494 B.CC 0x369E4AC
	0x0369E498 LDR X12, [X8 + 0xC8]
	0x0369E49C ADD X11, X12, X11, 0x3, LSL
	0x0369E4A0 LDUR X11, [X11 - 0x8]
	0x0369E4A4 CMP X11, X10
	0x0369E4A8 B.EQ 0x369E570
	0x0369E4AC TBNZ X20, 0x0, 0x369E550
	0x0369E4B0 ADRP X10, 0xA5D000
	0x0369E4B4 LDR X10, [X10 + 0x8A8]
	0x0369E4B8 LDR X10, [X10]
	0x0369E4BC LDRB W11, [X10 + 0x130]
	0x0369E4C0 CMP W9, W11
	0x0369E4C4 B.CC 0x369E4DC
	0x0369E4C8 LDR X12, [X8 + 0xC8]
	0x0369E4CC ADD X11, X12, X11, 0x3, LSL
	0x0369E4D0 LDUR X11, [X11 - 0x8]
	0x0369E4D4 CMP X11, X10
	0x0369E4D8 B.EQ 0x369E550
	0x0369E4DC ADRP X10, 0xA7E000
	0x0369E4E0 LDR X10, [X10 + 0x4B8]
	0x0369E4E4 LDR X10, [X10]
	0x0369E4E8 LDRB W11, [X10 + 0x130]
	0x0369E4EC CMP W9, W11
	0x0369E4F0 B.CC 0x369E508
	0x0369E4F4 LDR X8, [X8 + 0xC8]
	0x0369E4F8 ADD X8, X8, X11, 0x3, LSL
	0x0369E4FC LDUR X8, [X8 - 0x8]
	0x0369E500 CMP X8, X10
	0x0369E504 B.EQ 0x369E550
	0x0369E508 LDR X8, [X19]
	0x0369E50C MOV X0, X19
	0x0369E510 LDP X9, X1, [X8 + 0x188]
	0x0369E514 BLR X9
	0x0369E518 LDR X8, [X22]
	0x0369E51C MOV X20, X0
	0x0369E520 MOV X0, X8
	0x0369E524 BL 0x1C16F10
	0x0369E528 MOVZ W3, 0x10
	0x0369E52C MOV X1, X20
	0x0369E530 MOV X2, X19
	0x0369E534 MOV X4, X31
	0x0369E538 MOV X5, X31
	0x0369E53C MOV X21, X0
	0x0369E540 BL 0x367B5A0
	0x0369E544 MOV X0, X21
	0x0369E548 B 0x369E588
	0x0369E54C TBZ X20, 0x0, 0x369E598
	0x0369E550 LDR X0, [X21]
	0x0369E554 LDR W8, [X0 + 0xE0]
	0x0369E558 CBNZ W8, 0x369E560
	0x0369E55C BL 0x1C16DFC
	0x0369E560 LDP X20, X19, [X31 + 0x20]
	0x0369E564 LDP X22, X21, [X31 + 0x10]
	0x0369E568 LDR X30, [X31], #0x30
	0x0369E56C B 0x369DDA0
	0x0369E570 TBZ X20, 0x0, 0x369E584
	0x0369E574 LDR W8, [X19 + 0x8C]
	0x0369E578 ORR W8, W8, 0x8
	0x0369E57C CMP W8, 0xE
	0x0369E580 B.NE 0x369E550
	0x0369E584 MOV X0, X19
	0x0369E588 LDP X20, X19, [X31 + 0x20]
	0x0369E58C LDP X22, X21, [X31 + 0x10]
	0x0369E590 LDR X30, [X31], #0x30
	0x0369E594 RET
	0x0369E598 BL 0x1C16F20
	0x0369E59C STP X30, X23, [X31 - 0x30]!
	0x0369E5A0 STP X22, X21, [X31 + 0x10]
	0x0369E5A4 STP X20, X19, [X31 + 0x20]
	0x0369E5A8 ADRP X22, 0xD42000
	0x0369E5AC LDRB W8, [X22 + 0x8CA]
	0x0369E5B0 MOV X19, X2
	0x0369E5B4 MOV X20, X1
	0x0369E5B8 MOV X21, X0
	0x0369E5BC TBNZ X8, 0x0, 0x369E5F8
	0x0369E5C0 ADRP X0, 0xAA0000
	0x0369E5C4 LDR X0, [X0 + 0x8C8]
	0x0369E5C8 BL 0x1C16CF4
	0x0369E5CC ADRP X0, 0xAA0000
	0x0369E5D0 LDR X0, [X0 + 0x8D0]
	0x0369E5D4 BL 0x1C16CF4
	0x0369E5D8 ADRP X0, 0xAA0000
	0x0369E5DC LDR X0, [X0 + 0x8D8]
	0x0369E5E0 BL 0x1C16CF4
	0x0369E5E4 ADRP X0, 0xA55000
	0x0369E5E8 LDR X0, [X0 + 0x988]
	0x0369E5EC BL 0x1C16CF4
	0x0369E5F0 MOVZ W8, 0x1
	0x0369E5F4 STRB W8, [X22 + 0x8CA]
	0x0369E5F8 ADD X0, X21, 0x100
	0x0369E5FC MOV W1, W31
	0x0369E600 MOV W2, W31
	0x0369E604 MOV X3, X31
	0x0369E608 BL 0x33E7AB4
	0x0369E60C CMP W0, 0x1
	0x0369E610 B.EQ 0x369E6A8
	0x0369E614 MOV X0, X21
	0x0369E618 BL 0x369CE6C
	0x0369E61C CBZ X0, 0x369E648
	0x0369E620 LDRB W8, [X21 + 0xC8]
	0x0369E624 CBNZ W8, 0x369E648
	0x0369E628 MOV X1, X31
	0x0369E62C BL 0x322B8DC
	0x0369E630 ADRP X8, 0xA55000
	0x0369E634 LDR X8, [X8 + 0x988]
	0x0369E638 MOV X2, X31
	0x0369E63C LDR X1, [X8]
	0x0369E640 BL 0x3226EF8
	0x0369E644 TBNZ X0, 0x0, 0x369E6C4
	0x0369E648 ADRP X8, 0xAA0000
	0x0369E64C LDR X8, [X8 + 0x8C8]
	0x0369E650 ADRP X22, 0xAA0000
	0x0369E654 ADRP X23, 0xAA0000
	0x0369E658 LDR X0, [X8]
	0x0369E65C LDR X22, [X22 + 0x8D0]
	0x0369E660 LDR X23, [X23 + 0x8D8]
	0x0369E664 BL 0x1C16F10
	0x0369E668 LDR X2, [X22]
	0x0369E66C MOV X1, X21
	0x0369E670 MOV X3, X31
	0x0369E674 MOV X22, X0
	0x0369E678 BL 0x2D2B9F4
	0x0369E67C LDR X2, [X23]
	0x0369E680 MOV X0, X21
	0x0369E684 MOV X1, X22
	0x0369E688 BL 0x21ED3FC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X21, 0xD43000
	014 Move X24, 0xA58000
	015 Move W8, [X21+2307]
	016 Move X24, [X24+2600]
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0xAA1000
	024 Move X0, [X0+2016]
	025 Call 0x1C17CF4
	026 Move X0, 0xAA1000
	027 Move X0, [X0+2024]
	028 Call 0x1C17CF4
	029 Move X0, 0xAA1000
	030 Move X0, [X0+2032]
	031 Call 0x1C17CF4
	032 Move X0, 0xAA1000
	033 Move X0, [X0+288]
	034 Call 0x1C17CF4
	035 Move X0, 0xAA1000
	036 Move X0, [X0+2040]
	037 Call 0x1C17CF4
	038 Move X0, 0xA84000
	039 Move X0, [X0+560]
	040 Call 0x1C17CF4
	041 Move X0, 0xAA1000
	042 Move X0, [X0+2048]
	043 Call 0x1C17CF4
	044 Move X0, 0xA58000
	045 Move X0, [X0+2600]
	046 Call 0x1C17CF4
	047 Move X0, 0xA92000
	048 Move X0, [X0+1512]
	049 Call 0x1C17CF4
	050 Move X0, 0xA96000
	051 Move X0, [X0+2888]
	052 Call 0x1C17CF4
	053 Move X0, 0xA94000
	054 Move X0, [X0+1224]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+2307], W8
	058 Move X0, [X24]
	059 Move [X31+28], W31
	060 Move [X31+8], X31
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X19
	066 Move X1, X31
	067 Move X2, X31
	068 Call Uri.op_Equality, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {361}
	073 Compare X19, 0
	074 JumpIfEqual {360}
	075 Move X27, 0xA96000
	076 Move X27, [X27+2888]
	077 Move X0, X19
	078 Move X1, X31
	079 Call Uri.get_Scheme, X0
	080 Move X21, X0
	081 Move X0, X19
	082 Move X1, X31
	083 Call Uri.get_Authority, X0
	084 Move X1, [X27]
	085 Move X2, X0
	086 Move X0, X21
	087 Move X3, X31
	088 Call String.Concat, X0, X1, X2
	089 Move X8, [X24]
	090 Move X21, X0
	091 Move X0, X8
	092 Call 0x1C17F10
	093 Move X1, X21
	094 Move X2, X31
	095 Move X22, X0
	096 Call Uri..ctor, X0, X1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Compare X20, 0
	100 JumpIfEqual {117}
	101 Move X21, 0xAA1000
	102 Move X8, [X20]
	103 Move X21, [X21+288]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Move X1, [X21]
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 1
	115 Move X0, X20
	116 Call 0x1C5D788
	117 Move W23, W31
	118 Move W25, W31
	119 Move W9, [X10]
	120 Add W9, W9, 1
	121 Add X8, X8, W9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X2, [X0+8]
	125 Move X0, X20
	126 Move X1, X19
	127 NotImplemented "Instruction BLR not yet implemented."
	128 And W8, W0, 1
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 Compare W8, 0
	131 JumpIfEqual {135}
	132 Move W23, W31
	133 Move W25, W31
	134 Move X22, X26
	135 Move X0, X19
	136 Move X1, X31
	137 Call Uri.get_Scheme, X0
	138 Move X8, 0xA94000
	139 Move X8, [X8+1224]
	140 Move X2, X31
	141 Move X1, [X8]
	142 Call String.op_Equality, X0, X1
	143 Move X8, [X20]
	144 Move X1, [X21]
	145 Move W21, W0
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X20
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X2, [X0+8]
	163 Move X0, X20
	164 Move X1, X19
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Compare X0, 0
	167 JumpIfEqual {360}
	168 Move X1, X31
	169 Move X19, X0
	170 Call Uri.get_Scheme, X0
	171 Move X20, 0xA92000
	172 Move X20, [X20+1512]
	173 Move X2, X31
	174 Move X1, [X20]
	175 Call String.op_Inequality, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {378}
	180 Move TEMP, X21
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {191}
	184 Move X0, X19
	185 Move X1, X31
	186 Call Uri.get_Scheme, X0
	187 Move X1, [X20]
	188 Move X2, X31
	189 Call String.op_Equality, X0, X1
	190 Move W23, W0
	191 Move W23, W31
	192 Move W25, 1
	193 Move X28, 0xAA1000
	194 Move X26, 0xA84000
	195 Move X28, [X28+2040]
	196 Move X26, [X26+560]
	197 Move X0, X19
	198 Move X1, X31
	199 Call Uri.get_Scheme, X0
	200 Move X20, X0
	201 Move X0, X19
	202 Move X1, X31
	203 Call Uri.get_Authority, X0
	204 Move X1, [X27]
	205 Move X2, X0
	206 Move X0, X20
	207 Move X3, X31
	208 Call String.Concat, X0, X1, X2
	209 Move X8, [X24]
	210 Move X19, X0
	211 Move X0, X8
	212 Call 0x1C17F10
	213 Move X1, X19
	214 Move X2, X31
	215 Move X21, X0
	216 Call Uri..ctor, X0, X1
	217 Move X0, [X28]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction CSEL not yet implemented."
	220 Call 0x1C17F10
	221 Move X1, X31
	222 Move X20, X0
	223 And W27, W23, 1
	224 Call Object..ctor, X0
	225 Move [X20+16], X22
	226 Move [X20+24], X19
	227 Move [X20+32], W27
	228 Move X0, [X26]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X26]
	234 Move X8, [X0+184]
	235 Move X19, [X8]
	236 Move [X31+28], W31
	237 Add X1, X31, 28
	238 Move X0, X19
	239 Move X2, X31
	240 Call Monitor.Enter, X0, X1
	241 Move X0, [X26]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {247}
	245 Call 0x1C17DFC
	246 Move X0, [X26]
	247 Move X8, [X0+184]
	248 Move X0, [X8]
	249 Compare X0, 0
	250 JumpIfEqual {375}
	251 Move X8, 0xAA1000
	252 Move X8, [X8+2024]
	253 Move X3, [X8]
	254 Add X2, X31, 8
	255 Move X1, X20
	256 Call ConcurrentDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	257 Move TEMP, X0
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfNotEqual {262}
	261 Move X20, [X31+8]
	262 Move X8, [X26]
	263 Move W9, [X8+224]
	264 Compare W9, 0
	265 JumpIfNotEqual {269}
	266 Move X0, X8
	267 Call 0x1C17DFC
	268 Move X8, [X26]
	269 Move X9, [X8+184]
	270 Move W9, [X9+24]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move W9, [X8+224]
	273 Compare W9, 0
	274 JumpIfNotEqual {278}
	275 Move X0, X8
	276 Call 0x1C17DFC
	277 Move X8, [X26]
	278 Move X8, [X8+184]
	279 Move X0, [X8]
	280 Compare X0, 0
	281 JumpIfEqual {396}
	282 Move X8, 0xAA1000
	283 Move X8, [X8+2032]
	284 Move X1, [X8]
	285 Call ConcurrentDictionary`2<Object, Object>.get_Count, X0
	286 Move X8, [X26]
	287 Move X9, [X8+184]
	288 Move W9, [X9+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move W9, [X8+224]
	291 Compare W9, 0
	292 JumpIfNotEqual {296}
	293 Move X0, X8
	294 Call 0x1C17DFC
	295 Move X8, [X26]
	296 Move X9, 0xAA1000
	297 Move X8, [X8+184]
	298 Move X9, [X9+2048]
	299 Move W24, [X8+16]
	300 Move W23, [X8+20]
	301 Move X0, [X9]
	302 Call 0x1C17F10
	303 Move X22, X0
	304 Move X1, X20
	305 Move X2, X21
	306 Move W3, W24
	307 Move W4, W23
	308 Call ServicePoint..ctor, X0, X1, X2, X3, X4
	309 Move [X31+8], X22
	310 Compare X22, 0
	311 JumpIfEqual {376}
	312 Move X8, [X26]
	313 Move X8, [X8+184]
	314 Move W9, [X8+40]
	315 Move [X22+49], W9
	316 Move W9, [X8+41]
	317 Move [X22+48], W25
	318 Move [X22+50], W27
	319 Move [X22+64], W9
	320 Move W1, [X8+56]
	321 Move W2, [X8+60]
	322 Move W3, [X8+64]
	323 Move X0, X22
	324 Call ServicePoint.SetTcpKeepAlive, X0, X1, X2, X3
	325 Move X8, [X26]
	326 Move X8, [X8+184]
	327 Move X0, [X8]
	328 Compare X0, 0
	329 JumpIfEqual {377}
	330 Move X8, 0xAA1000
	331 Move X2, [X31+8]
	332 Move X8, [X8+2016]
	333 Move X3, [X8]
	334 Move X1, X20
	335 Call ConcurrentDictionary`2<Object, Object>.GetOrAdd, X0, X1, X2
	336 Move X20, X0
	337 Move X21, X31
	338 Move W8, [X31+28]
	339 Compare W8, 0
	340 JumpIfEqual {344}
	341 Move X0, X19
	342 Move X1, X31
	343 Call Monitor.Exit, X0
	344 Compare X21, 0
	345 JumpIfNotEqual {373}
	346 Move X0, X20
	347 Move X20, [X31+96]
	348 Move X19, [X31+104]
	349 Move X22, [X31+80]
	350 Move X21, [X31+88]
	351 Move X24, [X31+64]
	352 Move X23, [X31+72]
	353 Move X26, [X31+48]
	354 Move X25, [X31+56]
	355 Move X28, [X31+32]
	356 Move X27, [X31+40]
	357 Move X30, [X31+16]
	358 Add X31, X31, 112
	359 Return X0
	360 Call 0x1C17F20
	361 Move X0, 0xA5B000
	362 Move X0, [X0+1320]
	363 Call 0x1C17D08
	364 Call 0x1C17F10
	365 Move X19, X0
	366 Move X0, 0xAA0000
	367 Move X0, [X0+1848]
	368 Call 0x1C17D08
	369 Move X1, X0
	370 Move X0, X19
	371 Move X2, X31
	372 Call ArgumentNullException..ctor, X0, X1
	373 Move X0, X21
	374 Call 0x1C17F18
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Move X0, 0xA56000
	379 Move X0, [X0+2880]
	380 Call 0x1C17D08
	381 Call 0x1C17F10
	382 Move X19, X0
	383 Move X0, 0xAA1000
	384 Move X0, [X0+2056]
	385 Call 0x1C17D08
	386 Move X1, X0
	387 Move X0, X19
	388 Move X2, X31
	389 Call NotSupportedException..ctor, X0, X1
	390 Move X0, 0xAA1000
	391 Move X0, [X0+2064]
	392 Call 0x1C17D08
	393 Move X1, X0
	394 Move X0, X19
	395 Call 0x1C17DEC
	396 Call 0x1C17F20
	397 Move X0, 0xA56000
	398 Move X0, [X0+1456]
	399 Call 0x1C17D08
	400 Call 0x1C17F10
	401 Move X20, X0
	402 Move X0, 0xAA1000
	403 Move X0, [X0+2072]
	404 Call 0x1C17D08
	405 Move X1, X0
	406 Move X0, X20
	407 Move X2, X31
	408 Call InvalidOperationException..ctor, X0, X1
	409 Move X0, 0xAA1000
	410 Move X0, [X0+2064]
	411 Call 0x1C17D08
	412 Move X1, X0
	413 Move X0, X20
	414 Call 0x1C17DEC
	415 Move X20, X0
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X0, X20
	418 Call 0x3EB2AD0
	419 Move X21, [X0]
	420 Call 0x3EB2AE0
	421 Move X20, X31
	422 Move X21, X31
	423 Move X20, X0
	424 Move W8, [X31+28]
	425 Compare W8, 0
	426 JumpIfEqual {430}
	427 Move X0, X19
	428 Move X1, X31
	429 Call Monitor.Exit, X0
	430 Compare X21, 0
	431 JumpIfNotEqual {434}
	432 Move X0, X20
	433 Call 0x1D2D690
	434 Move X0, X21
	435 Call 0x1C17F18
	436 Call 0x1991590

Method: System.Void CloseConnectionGroup(System.String connectionGroupName)

Disassembly:
	0x036A71E4 LDR X9, [X31 + 0x18]
	0x036A71E8 ADD X1, X31, 0x20
	0x036A71EC LDR X2, [X8]
	0x036A71F0 MOV X0, X21
	0x036A71F4 STR V0, [X31 + 0x2]
	0x036A71F8 STR X9, [X31 + 0x30]
	0x036A71FC BL 0x2EEBDD8
	0x036A7200 MOVZ W0, 0x1
	0x036A7204 LDP X20, X19, [X31 + 0x70]
	0x036A7208 LDP X22, X21, [X31 + 0x60]
	0x036A720C LDP X24, X23, [X31 + 0x50]
	0x036A7210 LDR X30, [X31 + 0x40]
	0x036A7214 ADD X31, X31, 0x80
	0x036A7218 RET
	0x036A721C BL 0x1C16F20
	0x036A7220 STP X30, X21, [X31 - 0x20]!
	0x036A7224 STP X20, X19, [X31 + 0x10]
	0x036A7228 ADRP X21, 0xD39000
	0x036A722C LDRB W8, [X21 + 0x918]
	0x036A7230 MOV X19, X1
	0x036A7234 MOV X20, X0
	0x036A7238 TBNZ X8, 0x0, 0x36A7250
	0x036A723C ADRP X0, 0xA97000
	0x036A7240 LDR X0, [X0 + 0xD98]
	0x036A7244 BL 0x1C16CF4
	0x036A7248 MOVZ W8, 0x1
	0x036A724C STRB W8, [X21 + 0x918]
	0x036A7250 LDR X0, [X20 + 0x28]
	0x036A7254 CBZ X0, 0x36A72A4
	0x036A7258 ADRP X8, 0xA97000
	0x036A725C LDR X8, [X8 + 0xD98]
	0x036A7260 MOV X1, X19
	0x036A7264 LDR X2, [X8]
	0x036A7268 BL 0x2EED450
	0x036A726C CBZ X19, 0x36A72A4
	0x036A7270 MOV X0, X19
	0x036A7274 MOV X1, X31
	0x036A7278 BL 0x36AB310
	0x036A727C LDR X20, [X20 + 0x10]
	0x036A7280 CBZ X20, 0x36A72A4
	0x036A7284 MOV X0, X20
	0x036A7288 MOV X1, X19
	0x036A728C BL 0x36A72A8
	0x036A7290 ADD X0, X20, 0x48
	0x036A7294 LDP X20, X19, [X31 + 0x10]
	0x036A7298 MOV X1, X31
	0x036A729C LDP X30, X21, [X31], #0x20
	0x036A72A0 B 0x33EB148
	0x036A72A4 BL 0x1C16F20
	0x036A72A8 STR X30, [X31 - 0x40]!
	0x036A72AC STP X24, X23, [X31 + 0x10]
	0x036A72B0 STP X22, X21, [X31 + 0x20]
	0x036A72B4 STP X20, X19, [X31 + 0x30]
	0x036A72B8 ADRP X21, 0xD39000
	0x036A72BC LDRB W8, [X21 + 0x911]
	0x036A72C0 MOV X19, X1
	0x036A72C4 MOV X20, X0
	0x036A72C8 TBNZ X8, 0x0, 0x36A7304
	0x036A72CC ADRP X0, 0xA97000
	0x036A72D0 LDR X0, [X0 + 0xDA0]
	0x036A72D4 BL 0x1C16CF4
	0x036A72D8 ADRP X0, 0xA97000
	0x036A72DC LDR X0, [X0 + 0xDA8]
	0x036A72E0 BL 0x1C16CF4
	0x036A72E4 ADRP X0, 0xA97000
	0x036A72E8 LDR X0, [X0 + 0xDB0]
	0x036A72EC BL 0x1C16CF4
	0x036A72F0 ADRP X0, 0xA97000
	0x036A72F4 LDR X0, [X0 + 0xDB8]
	0x036A72F8 BL 0x1C16CF4
	0x036A72FC MOVZ W8, 0x1
	0x036A7300 STRB W8, [X21 + 0x911]
	0x036A7304 LDR X8, [X20 + 0x40]
	0x036A7308 CBZ X8, 0x36A7370
	0x036A730C LDR X21, [X8 + 0x10]
	0x036A7310 CBZ X21, 0x36A735C
	0x036A7314 ADRP X23, 0xA97000
	0x036A7318 ADRP X24, 0xA97000
	0x036A731C LDR X23, [X23 + 0xDA0]
	0x036A7320 LDR X24, [X24 + 0xDB0]
	0x036A7324 LDR X1, [X23]
	0x036A7328 MOV X0, X21
	0x036A732C BL 0x2EEA68C
	0x036A7330 LDR X8, [X21 + 0x30]
	0x036A7334 MOV X22, X0
	0x036A7338 CMP X8, X19
	0x036A733C B.NE 0x36A7354
	0x036A7340 LDR X0, [X20 + 0x40]
	0x036A7344 CBZ X0, 0x36A7370
	0x036A7348 LDR X2, [X24]
	0x036A734C MOV X1, X21
	0x036A7350 BL 0x2EEC370
	0x036A7354 MOV X21, X22
	0x036A7358 CBNZ X22, 0x36A7324
	0x036A735C LDP X20, X19, [X31 + 0x30]
	0x036A7360 LDP X22, X21, [X31 + 0x20]
	0x036A7364 LDP X24, X23, [X31 + 0x10]
	0x036A7368 LDR X30, [X31], #0x40
	0x036A736C RET
	0x036A7370 BL 0x1C16F20
	0x036A7374 STR X30, [X31 - 0x40]!
	0x036A7378 STP X24, X23, [X31 + 0x10]
	0x036A737C STP X22, X21, [X31 + 0x20]
	0x036A7380 STP X20, X19, [X31 + 0x30]
	0x036A7384 ADRP X20, 0xD39000
	0x036A7388 LDRB W8, [X20 + 0x919]
	0x036A738C MOV X19, X0
	0x036A7390 TBNZ X8, 0x0, 0x36A73CC
	0x036A7394 ADRP X0, 0xA97000
	0x036A7398 LDR X0, [X0 + 0xDC0]
	0x036A739C BL 0x1C16CF4
	0x036A73A0 ADRP X0, 0xA97000
	0x036A73A4 LDR X0, [X0 + 0xDC8]
	0x036A73A8 BL 0x1C16CF4
	0x036A73AC ADRP X0, 0xA97000
	0x036A73B0 LDR X0, [X0 + 0xDD0]
	0x036A73B4 BL 0x1C16CF4
	0x036A73B8 ADRP X0, 0xA97000
	0x036A73BC LDR X0, [X0 + 0xDD8]
	0x036A73C0 BL 0x1C16CF4
	0x036A73C4 MOVZ W8, 0x1
	0x036A73C8 STRB W8, [X20 + 0x919]
	0x036A73CC LDR X8, [X19 + 0x28]
	0x036A73D0 CBZ X8, 0x36A7464
	0x036A73D4 LDR X21, [X8 + 0x10]
	0x036A73D8 CBZ X21, 0x36A7450
	0x036A73DC ADRP X23, 0xA97000
	0x036A73E0 ADRP X24, 0xA97000
	0x036A73E4 LDR X23, [X23 + 0xDC0]
	0x036A73E8 LDR X24, [X24 + 0xDD0]
	0x036A73EC LDR X1, [X23]
	0x036A73F0 LDR X22, [X21 + 0x28]
	0x036A73F4 MOV X0, X21
	0x036A73F8 BL 0x2EEA710
	0x036A73FC CBZ X22, 0x36A7464
	0x036A7400 MOV X20, X0
	0x036A7404 MOV X0, X22
	0x036A7408 MOV X1, X31
	0x036A740C BL 0x36AA510
	0x036A7410 TBZ X0, 0x0, 0x36A7448
	0x036A7414 LDR X0, [X19 + 0x28]
	0x036A7418 CBZ X0, 0x36A7464
	0x036A741C LDR X2, [X24]
	0x036A7420 MOV X1, X21
	0x036A7424 BL 0x2EED4A4
	0x036A7428 LDR X21, [X19 + 0x10]
	0x036A742C CBZ X21, 0x36A7464
	0x036A7430 MOV X0, X21
	0x036A7434 MOV X1, X22
	0x036A7438 BL 0x36A72A8
	0x036A743C ADD X0, X21, 0x48
	0x036A7440 MOV X1, X31
	0x036A7444 BL 0x33EB148
	0x036A7448 MOV X21, X20
	0x036A744C CBNZ X20, 0x36A73EC
	0x036A7450 LDP X20, X19, [X31 + 0x30]
	0x036A7454 LDP X22, X21, [X31 + 0x20]
	0x036A7458 LDP X24, X23, [X31 + 0x10]
	0x036A745C LDR X30, [X31], #0x40
	0x036A7460 RET
	0x036A7464 BL 0x1C16F20
	0x036A7468 SUB X31, X31, 0x40
	0x036A746C STP X30, X23, [X31 + 0x10]
	0x036A7470 STP X22, X21, [X31 + 0x20]
	0x036A7474 STP X20, X19, [X31 + 0x30]
	0x036A7478 ADRP X22, 0xD39000
	0x036A747C LDRB W8, [X22 + 0x91E]
	0x036A7480 MOV W21, W2
	0x036A7484 MOV X19, X1
	0x036A7488 MOV X20, X0
	0x036A748C TBNZ X8, 0x0, 0x36A74D4
	0x036A7490 ADRP X0, 0xA97000
	0x036A7494 LDR X0, [X0 + 0xDE0]
	0x036A7498 BL 0x1C16CF4
	0x036A749C ADRP X0, 0xA97000
	0x036A74A0 LDR X0, [X0 + 0xDE8]
	0x036A74A4 BL 0x1C16CF4
	0x036A74A8 ADRP X0, 0xA97000
	0x036A74AC LDR X0, [X0 + 0xD28]
	0x036A74B0 BL 0x1C16CF4
	0x036A74B4 ADRP X0, 0xA97000
	0x036A74B8 LDR X0, [X0 + 0xDF0]
	0x036A74BC BL 0x1C16CF4
	0x036A74C0 ADRP X0, 0xA97000
	0x036A74C4 LDR X0, [X0 + 0xDF8]
	0x036A74C8 BL 0x1C16CF4
	0x036A74CC MOVZ W8, 0x1
	0x036A74D0 STRB W8, [X22 + 0x91E]
	0x036A74D4 ADRP X23, 0xA97000
	0x036A74D8 LDR X23, [X23 + 0xDF0]
	0x036A74DC MOV X0, X20
	0x036A74E0 MOV X1, X19
	0x036A74E4 BL 0x36A7EE4
	0x036A74E8 CBZ X0, 0x36A7504
	0x036A74EC LDR X3, [X23]
	0x036A74F0 MOV X1, X0
	0x036A74F4 STP X31, X31, [X31]
	0x036A74F8 ADD X0, X31, 0x0
	0x036A74FC MOV W2, W31
	0x036A7500 B 0x36A75AC
	0x036A7504 LDR X8, [X20 + 0x10]
	0x036A7508 TBZ X21, 0x0, 0x36A75C8
	0x036A750C CBZ X8, 0x36A7604
	0x036A7510 LDR X22, [X8 + 0x10]
	0x036A7514 ADRP X8, 0xA97000
	0x036A7518 LDR X8, [X8 + 0xDF8]
	0x036A751C LDR X0, [X8]
	0x036A7520 BL 0x1C16F10
	0x036A7524 MOV X1, X22
	0x036A7528 MOV X2, X31
	0x036A752C MOV X21, X0
	0x036A7530 BL 0x36A9828
	0x036A7534 CBZ X21, 0x36A7604
	0x036A7538 MOV X0, X21
	0x036A753C MOV X1, X19
	0x036A7540 MOV W2, W31
	0x036A7544 MOV X3, X31
	0x036A7548 BL 0x36AAC94
	0x036A754C LDR X0, [X20 + 0x28]
	0x036A7550 CBZ X0, 0x36A7604
	0x036A7554 ADRP X8, 0xA97000
	0x036A7558 LDR X8, [X8 + 0xDE0]
	0x036A755C MOV X1, X21
	0x036A7560 LDR X2, [X8]
	0x036A7564 BL 0x2EECF44
	0x036A7568 LDR X8, [X20 + 0x10]
	0x036A756C CBZ X8, 0x36A7604
	0x036A7570 ADD X0, X8, 0x48
	0x036A7574 MOV X1, X31
	0x036A7578 BL 0x33EB14C
	0x036A757C LDR X0, [X20 + 0x30]
	0x036A7580 CBZ X0, 0x36A7604
	0x036A7584 ADRP X8, 0xA97000
	0x036A7588 LDR X8, [X8 + 0xDE8]
	0x036A758C MOV X1, X19
	0x036A7590 LDR X2, [X8]
	0x036A7594 BL 0x2EED450
	0x036A7598 LDR X3, [X23]
	0x036A759C ADD X0, X31, 0x0
	0x036A75A0 MOVZ W2, 0x1
	0x036A75A4 MOV X1, X21
	0x036A75A8 STP X31, X31, [X31]
	0x036A75AC BL 0x27A93B4
	0x036A75B0 LDP X0, X1, [X31]
	0x036A75B4 LDP X20, X19, [X31 + 0x30]
	0x036A75B8 LDP X22, X21, [X31 + 0x20]
	0x036A75BC LDP X30, X23, [X31 + 0x10]
	0x036A75C0 ADD X31, X31, 0x40
	0x036A75C4 RET
	0x036A75C8 CBZ X8, 0x36A7604
	0x036A75CC LDR X9, [X8 + 0x10]
	0x036A75D0 CBZ X9, 0x36A7604
	0x036A75D4 LDR X10, [X20 + 0x28]
	0x036A75D8 CBZ X10, 0x36A7604
	0x036A75DC LDR W11, [X9 + 0x78]
	0x036A75E0 LDR W9, [X10 + 0x18]
	0x036A75E4 CMP W11, W9

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X19, 0xD3A000
	010 Move X20, 0xA7B000
	011 Move W8, [X19+2308]
	012 Move X20, [X20+560]
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xA98000
	019 Move X0, [X0+3256]
	020 Call 0x1C17CF4
	021 Move X0, 0xA4D000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0xA98000
	025 Move X0, [X0+3264]
	026 Call 0x1C17CF4
	027 Move X0, 0xA98000
	028 Move X0, [X0+3272]
	029 Call 0x1C17CF4
	030 Move X0, 0xA4D000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0xA7B000
	034 Move X0, [X0+560]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+2308], W8
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X19, [X8]
	046 Move [X31+28], W31
	047 Add X1, X31, 28
	048 Move X0, X19
	049 Move X2, X31
	050 Call Monitor.Enter, X0, X1
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X20]
	057 Move X8, [X0+184]
	058 Move X0, [X8]
	059 Compare X0, 0
	060 JumpIfEqual {197}
	061 Move X8, 0xA98000
	062 Move X8, [X8+3256]
	063 Move X1, [X8]
	064 Call ConcurrentDictionary`2<Object, Object>.get_Values, X0
	065 Move X20, X0
	066 Compare X0, 0
	067 JumpIfEqual {198}
	068 Move X10, 0xA98000
	069 Move X8, [X20]
	070 Move X10, [X10+3264]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X20
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X20
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X23, 0xA4D000
	092 Move X23, [X23+3584]
	093 Move X20, X0
	094 Compare X0, 0
	095 JumpIfEqual {199}
	096 Move X22, 0xA4D000
	097 Move X24, 0xA98000
	098 Move X22, [X22+3608]
	099 Move X24, [X24+3272]
	100 Move X8, [X20]
	101 Move X1, [X22]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X20
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X20
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {150}
	125 Move X8, [X20]
	126 Move X1, [X24]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move X0, X20
	137 Move W2, W31
	138 Call 0x1C5D788
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Add X8, X8, X9
	141 Add X0, X8, 312
	142 Move X8, [X0]
	143 Move X1, [X0+8]
	144 Move X0, X20
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Compare X0, 0
	147 JumpIfEqual {194}
	148 Move X1, X21
	149 Call ServicePoint.CloseConnectionGroup, X0, X1
	150 Move X22, X31
	151 Compare X20, 0
	152 JumpIfEqual {174}
	153 Move X8, [X20]
	154 Move X1, [X23]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move X0, X20
	165 Move W2, W31
	166 Call 0x1C5D788
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Add X8, X8, X9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X1, [X0+8]
	172 Move X0, X20
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Compare X22, 0
	175 JumpIfNotEqual {200}
	176 Move X20, X31
	177 Move W8, [X31+28]
	178 Compare W8, 0
	179 JumpIfEqual {183}
	180 Move X0, X19
	181 Move X1, X31
	182 Call Monitor.Exit, X0
	183 Compare X20, 0
	184 JumpIfNotEqual {195}
	185 Move X20, [X31+64]
	186 Move X19, [X31+72]
	187 Move X22, [X31+48]
	188 Move X21, [X31+56]
	189 Move X24, [X31+32]
	190 Move X23, [X31+40]
	191 Move X30, [X31+16]
	192 Add X31, X31, 80
	193 Return 
	194 Call 0x1C17F20
	195 Move X0, X20
	196 Call 0x1C17F18
	197 Call 0x1C17F20
	198 Call 0x1C17F20
	199 Call 0x1C17F20
	200 Move X0, X22
	201 Call 0x1C17F18
	202 Move X21, X0
	203 Move [X31+8], X1
	204 Move X21, X0
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X0, X21
	207 Call 0x3EB2AD0
	208 Move X22, [X0]
	209 Call 0x3EB2AE0
	210 Move [X31+8], X1
	211 Move X22, X31
	212 Compare X20, 0
	213 JumpIfEqual {235}
	214 Move X8, [X20]
	215 Move X1, [X23]
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Compare X9, 0
	218 JumpIfEqual {225}
	219 Move X10, [X8+176]
	220 Add X10, X10, 8
	221 NotImplemented "Instruction LDUR not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Subtract X9, X9, 1
	224 Add X10, X10, 16
	225 Move X0, X20
	226 Move W2, W31
	227 Call 0x1C5D788
	228 NotImplemented "Instruction LDRSW not yet implemented."
	229 Add X8, X8, X9
	230 Add X0, X8, 312
	231 Move X8, [X0]
	232 Move X1, [X0+8]
	233 Move X0, X20
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Compare X22, 0
	236 JumpIfNotEqual {244}
	237 Move X8, [X31+8]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X0, X21
	240 Call 0x3EB2AD0
	241 Move X20, [X0]
	242 Call 0x3EB2AE0
	243 Move X20, X31
	244 Move X0, X22
	245 Call 0x1C17F18
	246 Move X21, X0
	247 Move [X31+8], X1
	248 Compare X20, 0
	249 JumpIfNotEqual {214}
	250 Move X21, X0
	251 Move W8, [X31+28]
	252 Compare W8, 0
	253 JumpIfEqual {257}
	254 Move X0, X19
	255 Move X1, X31
	256 Call Monitor.Exit, X0
	257 Compare X20, 0
	258 JumpIfNotEqual {261}
	259 Move X0, X21
	260 Call 0x1D2D690
	261 Move X0, X20
	262 Call 0x1C17F18
	263 Call 0x1991590

Method: System.Void RemoveServicePoint(System.Net.ServicePoint sp)

Disassembly:
	0x036A75E8 B.GT 0x36A7510
	0x036A75EC CBZ W9, 0x36A7510
	0x036A75F0 LDR X3, [X23]
	0x036A75F4 ADD X0, X31, 0x0
	0x036A75F8 MOV X1, X31
	0x036A75FC STP X31, X31, [X31]
	0x036A7600 B 0x36A74FC
	0x036A7604 BL 0x1C16F20
	0x036A7608 STR X30, [X31 - 0x20]!
	0x036A760C STP X20, X19, [X31 + 0x10]
	0x036A7610 CBZ X1, 0x36A763C
	0x036A7614 MOV X20, X0
	0x036A7618 MOV X0, X1
	0x036A761C MOV X1, X2
	0x036A7620 MOV X19, X2
	0x036A7624 BL 0x36A7220
	0x036A7628 MOV X0, X20
	0x036A762C MOV X1, X19
	0x036A7630 LDP X20, X19, [X31 + 0x10]
	0x036A7634 LDR X30, [X31], #0x20
	0x036A7638 B 0x36A72A8
	0x036A763C BL 0x1C16F20
	0x036A7640 STR X30, [X31 - 0x40]!
	0x036A7644 STP X24, X23, [X31 + 0x10]
	0x036A7648 STP X22, X21, [X31 + 0x20]
	0x036A764C STP X20, X19, [X31 + 0x30]
	0x036A7650 ADRP X20, 0xD39000
	0x036A7654 LDRB W8, [X20 + 0x91C]
	0x036A7658 MOV X19, X0
	0x036A765C TBNZ X8, 0x0, 0x36A7698
	0x036A7660 ADRP X0, 0xA97000
	0x036A7664 LDR X0, [X0 + 0xE00]
	0x036A7668 BL 0x1C16CF4
	0x036A766C ADRP X0, 0xA97000
	0x036A7670 LDR X0, [X0 + 0xE08]
	0x036A7674 BL 0x1C16CF4
	0x036A7678 ADRP X0, 0xA97000
	0x036A767C LDR X0, [X0 + 0xE10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD3A000
	007 Move X20, 0xA7B000
	008 Move W8, [X21+2309]
	009 Move X20, [X20+560]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA98000
	016 Move X0, [X0+3280]
	017 Call 0x1C17CF4
	018 Move X0, 0xA7B000
	019 Move X0, [X0+560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2309], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Compare X19, 0
	031 JumpIfEqual {48}
	032 Move X8, [X0+184]
	033 Move X0, [X8]
	034 Compare X0, 0
	035 JumpIfEqual {48}
	036 Move X8, 0xA98000
	037 Move X8, [X8+3280]
	038 Move X1, [X19+104]
	039 Add X2, X31, 8
	040 Move X3, [X8]
	041 Call ConcurrentDictionary`2<Object, Object>.TryRemove, X0, X1, X2
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Add X31, X31, 48
	047 Return 
	048 Call 0x1C17F20

