Type: System.Net.WebRequestStream/<FinishWriting>d__31

Method: System.Void MoveNext()

Disassembly:
	0x036B4330 MOV X2, X31
	0x036B4334 BL 0x33ED3A0
	0x036B4338 STP X0, X1, [X31 + 0x10]
	0x036B433C ADD X0, X31, 0x10
	0x036B4340 MOV X1, X31
	0x036B4344 BL 0x32C40D4
	0x036B4348 TBZ X0, 0x0, 0x36B43B8
	0x036B434C ADD X0, X31, 0x10
	0x036B4350 MOV X1, X31
	0x036B4354 BL 0x32C40F0
	0x036B4358 CBZ X20, 0x36B4460
	0x036B435C LDR X0, [X20 + 0x50]
	0x036B4360 CBZ X0, 0x36B4464
	0x036B4364 LDR X1, [X19 + 0x28]
	0x036B4368 BL 0x36AD230
	0x036B436C LDR X8, [X20 + 0x50]
	0x036B4370 CBZ X8, 0x36B4468
	0x036B4374 LDR X9, [X8 + 0x28]
	0x036B4378 CBZ X9, 0x36B4384
	0x036B437C LDRB W8, [X8 + 0x30]
	0x036B4380 CBZ W8, 0x36B43F4
	0x036B4384 MOVN W8, 0x1
	0x036B4388 STR W8, [X19], #0x8
	0x036B438C LDR X0, [X21]
	0x036B4390 LDR W8, [X0 + 0xE0]
	0x036B4394 CBNZ W8, 0x36B439C
	0x036B4398 BL 0x1C16DFC
	0x036B439C MOV X0, X19
	0x036B43A0 MOV X1, X31
	0x036B43A4 BL 0x32C4864
	0x036B43A8 LDP X20, X19, [X31 + 0x30]
	0x036B43AC LDP X30, X21, [X31 + 0x20]
	0x036B43B0 ADD X31, X31, 0x40
	0x036B43B4 RET
	0x036B43B8 STR W31, [X19]
	0x036B43BC LDR V0, [X31 + 0x1]
	0x036B43C0 STR V0, [X19 + 0x3]
	0x036B43C4 LDR X0, [X21]
	0x036B43C8 LDR W8, [X0 + 0xE0]
	0x036B43CC CBNZ W8, 0x36B43D4
	0x036B43D0 BL 0x1C16DFC
	0x036B43D4 ADRP X8, 0xA8B000
	0x036B43D8 LDR X8, [X8 + 0x3D0]
	0x036B43DC ADD X0, X19, 0x8
	0x036B43E0 LDR X3, [X8]
	0x036B43E4 ADD X1, X31, 0x10
	0x036B43E8 MOV X2, X19
	0x036B43EC BL 0x218C16C
	0x036B43F0 B 0x36B43A8
	0x036B43F4 LDR X1, [X19 + 0x28]
	0x036B43F8 MOV X0, X20
	0x036B43FC BL 0x36B2DCC
	0x036B4400 CBZ X0, 0x36B4484
	0x036B4404 MOV X1, X31
	0x036B4408 BL 0x33ED394
	0x036B440C STR X0, [X31 + 0x8]
	0x036B4410 ADD X0, X31, 0x8
	0x036B4414 MOV X1, X31
	0x036B4418 BL 0x32C3A80
	0x036B441C TBNZ X0, 0x0, 0x36B4290
	0x036B4420 MOVZ W8, 0x1
	0x036B4424 STR W8, [X19]
	0x036B4428 LDR X8, [X31 + 0x8]
	0x036B442C STR X8, [X19 + 0x40]
	0x036B4430 LDR X0, [X21]
	0x036B4434 LDR W8, [X0 + 0xE0]
	0x036B4438 CBNZ W8, 0x36B4440
	0x036B443C BL 0x1C16DFC
	0x036B4440 ADRP X8, 0xA8B000
	0x036B4444 LDR X8, [X8 + 0x3D8]
	0x036B4448 ADD X0, X19, 0x8
	0x036B444C LDR X3, [X8]
	0x036B4450 ADD X1, X31, 0x8
	0x036B4454 MOV X2, X19
	0x036B4458 BL 0x218B1E8
	0x036B445C B 0x36B43A8
	0x036B4460 BL 0x1C16F20
	0x036B4464 BL 0x1C16F20
	0x036B4468 BL 0x1C16F20
	0x036B446C BL 0x1C16F20
	0x036B4470 BL 0x1C16F20
	0x036B4474 BL 0x1C16F20
	0x036B4478 BL 0x1C16F20
	0x036B447C BL 0x1C16F20
	0x036B4480 BL 0x1C16F20
	0x036B4484 BL 0x1C16F20
	0x036B4488 BL 0x1C16F20
	0x036B448C B 0x36B44D0
	0x036B4490 B 0x36B44D0
	0x036B4494 B 0x36B44D0
	0x036B4498 B 0x36B44D0
	0x036B449C B 0x36B44D0
	0x036B44A0 B 0x36B44D0
	0x036B44A4 B 0x36B44D0
	0x036B44A8 B 0x36B44D0
	0x036B44AC B 0x36B44D0
	0x036B44B0 B 0x36B44D0
	0x036B44B4 B 0x36B44D0
	0x036B44B8 B 0x36B44D0
	0x036B44BC B 0x36B44D0
	0x036B44C0 B 0x36B44D0
	0x036B44C4 B 0x36B44D0
	0x036B44C8 B 0x36B44D0
	0x036B44CC B 0x36B44D0
	0x036B44D0 MOV X20, X0
	0x036B44D4 CMP W1, 0x1
	0x036B44D8 B.NE 0x36B4568
	0x036B44DC MOV X0, X20
	0x036B44E0 BL 0x3EB1AD0
	0x036B44E4 MOV X20, X0
	0x036B44E8 ADRP X0, 0xA3F000
	0x036B44EC LDR X0, [X0 + 0x7D0]
	0x036B44F0 BL 0x1C16D08
	0x036B44F4 LDR X8, [X20]
	0x036B44F8 LDR X1, [X8]
	0x036B44FC BL 0x1C17270
	0x036B4500 TBZ X0, 0x0, 0x36B4540
	0x036B4504 LDR X20, [X20]
	0x036B4508 BL 0x3EB1AE0
	0x036B450C MOVN W8, 0x1
	0x036B4510 STR W8, [X19], #0x8
	0x036B4514 ADRP X0, 0xA42000
	0x036B4518 LDR X0, [X0 + 0x280]
	0x036B451C BL 0x1C16D08
	0x036B4520 LDR W8, [X0 + 0xE0]
	0x036B4524 CBNZ W8, 0x36B452C
	0x036B4528 BL 0x1C16DFC
	0x036B452C MOV X0, X19
	0x036B4530 MOV X1, X20
	0x036B4534 MOV X2, X31
	0x036B4538 BL 0x32C4908
	0x036B453C B 0x36B43A8
	0x036B4540 MOVZ W0, 0x8
	0x036B4544 BL 0x3EB1AF0
	0x036B4548 LDR X8, [X20]
	0x036B454C STR X8, [X0]
	0x036B4550 ADRP X1, 0x800000
	0x036B4554 ADD X1, X1, 0xE58
	0x036B4558 MOV X2, X31
	0x036B455C BL 0x3EB1B00
	0x036B4560 MOV X20, X0
	0x036B4564 BL 0x3EB1AE0
	0x036B4568 MOV X0, X20
	0x036B456C BL 0x1D2C690
	0x036B4570 BL 0x1990590
	0x036B4574 STR X30, [X31 - 0x30]!
	0x036B4578 STP X22, X21, [X31 + 0x10]
	0x036B457C STP X20, X19, [X31 + 0x20]
	0x036B4580 ADRP X21, 0xD2C000
	0x036B4584 ADRP X22, 0xA42000
	0x036B4588 LDRB W8, [X21 + 0x97B]
	0x036B458C LDR X22, [X22 + 0x280]
	0x036B4590 MOV X19, X1
	0x036B4594 MOV X20, X0
	0x036B4598 TBNZ X8, 0x0, 0x36B45B0
	0x036B459C ADRP X0, 0xA42000
	0x036B45A0 LDR X0, [X0 + 0x280]
	0x036B45A4 BL 0x1C16CF4
	0x036B45A8 MOVZ W8, 0x1
	0x036B45AC STRB W8, [X21 + 0x97B]
	0x036B45B0 LDR X0, [X22]
	0x036B45B4 LDR W8, [X0 + 0xE0]
	0x036B45B8 CBNZ W8, 0x36B45C0
	0x036B45BC BL 0x1C16DFC
	0x036B45C0 ADD X0, X20, 0x8
	0x036B45C4 MOV X1, X19
	0x036B45C8 LDP X20, X19, [X31 + 0x20]
	0x036B45CC LDP X22, X21, [X31 + 0x10]
	0x036B45D0 MOV X2, X31
	0x036B45D4 LDR X30, [X31], #0x30
	0x036B45D8 B 0x32C477C
	0x036B45DC SUB X31, X31, 0x50
	0x036B45E0 STR X30, [X31 + 0x10]
	0x036B45E4 STP X24, X23, [X31 + 0x20]
	0x036B45E8 STP X22, X21, [X31 + 0x30]
	0x036B45EC STP X20, X19, [X31 + 0x40]
	0x036B45F0 ADRP X20, 0xD2C000
	0x036B45F4 LDRB W8, [X20 + 0x97C]
	0x036B45F8 MOV X19, X0
	0x036B45FC TBNZ X8, 0x0, 0x36B46A4
	0x036B4600 ADRP X0, 0xA8B000
	0x036B4604 LDR X0, [X0 + 0x3E0]
	0x036B4608 BL 0x1C16CF4
	0x036B460C ADRP X0, 0xA42000
	0x036B4610 LDR X0, [X0 + 0x280]
	0x036B4614 BL 0x1C16CF4
	0x036B4618 ADRP X0, 0xA8B000
	0x036B461C LDR X0, [X0 + 0x3E8]
	0x036B4620 BL 0x1C16CF4
	0x036B4624 ADRP X0, 0xA8B000
	0x036B4628 LDR X0, [X0 + 0x3F0]
	0x036B462C BL 0x1C16CF4
	0x036B4630 ADRP X0, 0xA8B000
	0x036B4634 LDR X0, [X0 + 0x3F8]
	0x036B4638 BL 0x1C16CF4
	0x036B463C ADRP X0, 0xA68000
	0x036B4640 LDR X0, [X0 + 0x4D0]
	0x036B4644 BL 0x1C16CF4
	0x036B4648 ADRP X0, 0xA86000
	0x036B464C LDR X0, [X0 + 0x218]
	0x036B4650 BL 0x1C16CF4
	0x036B4654 ADRP X0, 0xA86000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD2D000
	009 Move W8, [X20+2420]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA8C000
	016 Move X0, [X0+928]
	017 Call 0x1C17CF4
	018 Move X0, 0xA43000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2420], W8
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Move X23, 0xA43000
	026 Move W8, [X19]
	027 Move X20, [X19+32]
	028 Move X23, [X23+640]
	029 Compare W8, 0
	030 JumpIfEqual {80}
	031 Compare X20, 0
	032 JumpIfEqual {119}
	033 Add X0, X20, 132
	034 Move W1, 1
	035 Move W2, W31
	036 Move X3, X31
	037 Call Interlocked.CompareExchange, X0, X1, X2
	038 Compare W0, 0
	039 JumpIfNotEqual {99}
	040 Move X0, [X20+80]
	041 Compare X0, 0
	042 JumpIfEqual {122}
	043 Move X1, [X19+40]
	044 Call WebOperation.ThrowIfClosedOrDisposed, X0, X1
	045 Move W8, [X20+98]
	046 Compare W8, 0
	047 JumpIfEqual {93}
	048 Move X1, [X19+40]
	049 Move X0, X20
	050 Call WebRequestStream.WriteChunkTrailer_inner, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {123}
	053 Move W1, W31
	054 Move X2, X31
	055 Call Task.ConfigureAwait, X0, X1
	056 Move [X31], X0
	057 Move [X31+8], X1
	058 Add X0, X31, 0
	059 Move X1, X31
	060 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {88}
	065 Move [X19], W31
	066 Move V0, [X31]
	067 Move [X19+3], V0
	068 Move X0, [X23]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X8, 0xA8C000
	074 Move X8, [X8+928]
	075 Add X0, X19, 8
	076 Move X3, [X8]
	077 Add X1, X31, 0
	078 Move X2, X19
	079 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	080 Move V0, [X19+3]
	081 Move TEMP, 0
	082 Not TEMP
	083 Move W8, TEMP
	084 Move [X31], V0
	085 Move [X19+48], X31
	086 Move [X19+56], X31
	087 Move [X19], W8
	088 Add X0, X31, 0
	089 Move X1, X31
	090 Call ConfiguredTaskAwaiter.GetResult, X0
	091 Compare X20, 0
	092 JumpIfEqual {121}
	093 Move X0, [X20+80]
	094 Compare X0, 0
	095 JumpIfEqual {120}
	096 Move X1, X20
	097 Move X2, X31
	098 Call WebOperation.CompleteRequestWritten, X0, X1, X2
	099 Move TEMP, 1
	100 Not TEMP
	101 Move W8, TEMP
	102 Move [X19+8], W8
	103 Move X0, [X23]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X19
	109 Move X1, X31
	110 Call AsyncTaskMethodBuilder.SetResult, X0
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X30, [X31+16]
	116 Move X23, [X31+24]
	117 Add X31, X31, 64
	118 Return 
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Call 0x1C17F20
	122 Call 0x1C17F20
	123 Call 0x1C17F20
	124 Move X21, X0
	125 Move X21, X0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W8, 1
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X21
	130 Call 0x3EB2AD0
	131 Move X22, [X0]
	132 Call 0x3EB2AE0
	133 Compare X22, 0
	134 JumpIfEqual {91}
	135 Move X0, X22
	136 Call 0x1C17F18
	137 Move X0, X21
	138 Call 0x3EB2AD0
	139 Move X21, X0
	140 Move X0, 0xA40000
	141 Move X0, [X0+2000]
	142 Call 0x1C17D08
	143 Move X8, [X21]
	144 Move X1, [X8]
	145 Call 0x1C18270
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {155}
	150 Move X21, [X21]
	151 Call 0x3EB2AE0
	152 Compare X20, 0
	153 JumpIfNotEqual {163}
	154 Call 0x1C17F20
	155 Move W0, 8
	156 Call 0x3EB2AF0
	157 Move X8, [X21]
	158 Move [X0], X8
	159 Move X1, 0x801000
	160 Add X1, X1, 3672
	161 Move X2, X31
	162 Call 0x3EB2B00
	163 Move X0, [X20+80]
	164 Compare X0, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17F20
	167 Move X1, X20
	168 Move X2, X21
	169 Call WebOperation.CompleteRequestWritten, X0, X1, X2
	170 Move X0, X21
	171 Call 0x1C17F18
	172 Move X21, X0
	173 Compare X22, 0
	174 JumpIfEqual {181}
	175 Move X0, X22
	176 Call 0x1C17F18
	177 Move X22, X1
	178 Move X21, X0
	179 Call 0x3EB2AE0
	180 Move W1, W22
	181 Move X21, X0
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X0, X21
	184 Call 0x3EB2AD0
	185 Move X20, X0
	186 Move X0, 0xA40000
	187 Move X0, [X0+2000]
	188 Call 0x1C17D08
	189 Move X8, [X20]
	190 Move X1, [X8]
	191 Call 0x1C18270
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {213}
	196 Move X20, [X20]
	197 Call 0x3EB2AE0
	198 Move TEMP, 1
	199 Not TEMP
	200 Move W8, TEMP
	201 Move [X19+8], W8
	202 Move X0, 0xA43000
	203 Move X0, [X0+640]
	204 Call 0x1C17D08
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X19
	210 Move X1, X20
	211 Move X2, X31
	212 Call AsyncTaskMethodBuilder.SetException, X0, X1
	213 Move W0, 8
	214 Call 0x3EB2AF0
	215 Move X8, [X20]
	216 Move [X0], X8
	217 Move X1, 0x801000
	218 Add X1, X1, 3672
	219 Move X2, X31
	220 Call 0x3EB2B00
	221 Move X21, X0
	222 Call 0x3EB2AE0
	223 Move X0, X21
	224 Call 0x1D2D690
	225 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B4658 LDR X0, [X0 + 0x220]
	0x036B465C BL 0x1C16CF4
	0x036B4660 ADRP X0, 0xA82000
	0x036B4664 LDR X0, [X0 + 0xB08]
	0x036B4668 BL 0x1C16CF4
	0x036B466C ADRP X0, 0xA86000
	0x036B4670 LDR X0, [X0 + 0x228]
	0x036B4674 BL 0x1C16CF4
	0x036B4678 ADRP X0, 0xA8B000
	0x036B467C LDR X0, [X0 + 0x400]
	0x036B4680 BL 0x1C16CF4
	0x036B4684 ADRP X0, 0xA8B000
	0x036B4688 LDR X0, [X0 + 0x408]
	0x036B468C BL 0x1C16CF4
	0x036B4690 ADRP X0, 0xA8B000
	0x036B4694 LDR X0, [X0 + 0x410]
	0x036B4698 BL 0x1C16CF4
	0x036B469C MOVZ W8, 0x1
	0x036B46A0 STRB W8, [X20 + 0x97C]
	0x036B46A4 STP X31, X31, [X31]
	0x036B46A8 ADRP X23, 0xA42000
	0x036B46AC LDR W8, [X19]
	0x036B46B0 LDR X20, [X19 + 0x20]
	0x036B46B4 LDR X23, [X23 + 0x280]
	0x036B46B8 CBZ W8, 0x36B4848
	0x036B46BC CBZ X20, 0x36B4A1C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD2D000
	007 Move X22, 0xA43000
	008 Move W8, [X21+2421]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA43000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2421], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

