Type: System.Net.MonoChunkStream/<ProcessReadAsync>d__7

Method: System.Void MoveNext()

Disassembly:
	0x036A55AC ADRP X21, 0xA4F000
	0x036A55B0 LDR X19, [X19 + 0x18]
	0x036A55B4 LDR X0, [X8]
	0x036A55B8 LDR W8, [X0 + 0xE0]
	0x036A55BC LDR X21, [X21 + 0x9F0]
	0x036A55C0 CBNZ W8, 0x36A55C8
	0x036A55C4 BL 0x1C16DFC
	0x036A55C8 SCVTF D0, W20
	0x036A55CC MOV X0, X31
	0x036A55D0 BL 0x33945E4
	0x036A55D4 LDR X8, [X21]
	0x036A55D8 MOV X20, X0
	0x036A55DC LDR W9, [X8 + 0xE0]
	0x036A55E0 CBNZ W9, 0x36A55EC
	0x036A55E4 MOV X0, X8
	0x036A55E8 BL 0x1C16DFC
	0x036A55EC MOV X0, X19
	0x036A55F0 MOV X1, X20
	0x036A55F4 MOV X2, X31
	0x036A55F8 BL 0x3362E18
	0x036A55FC MOV X19, X0
	0x036A5600 MOV X0, X31
	0x036A5604 BL 0x33616A4
	0x036A5608 MOV X1, X0
	0x036A560C MOV X0, X19
	0x036A5610 LDP X20, X19, [X31 + 0x10]
	0x036A5614 MOV X2, X31
	0x036A5618 LDP X30, X21, [X31], #0x20
	0x036A561C B 0x3363148
	0x036A5620 LDP X20, X19, [X31 + 0x10]
	0x036A5624 MOV W0, W31
	0x036A5628 LDP X30, X21, [X31], #0x20
	0x036A562C RET
	0x036A5630 STR X30, [X31 - 0x40]!
	0x036A5634 STP X24, X23, [X31 + 0x10]
	0x036A5638 STP X22, X21, [X31 + 0x20]
	0x036A563C STP X20, X19, [X31 + 0x30]
	0x036A5640 ADRP X20, 0xD3B000
	0x036A5644 LDRB W8, [X20 + 0x8FB]
	0x036A5648 MOV X19, X0
	0x036A564C TBNZ X8, 0x0, 0x36A5688
	0x036A5650 ADRP X0, 0xA4F000
	0x036A5654 LDR X0, [X0 + 0x9F0]
	0x036A5658 BL 0x1C16CF4
	0x036A565C ADRP X0, 0xA8E000
	0x036A5660 LDR X0, [X0 + 0xB88]
	0x036A5664 BL 0x1C16CF4
	0x036A5668 ADRP X0, 0xA5B000
	0x036A566C LDR X0, [X0 + 0x968]
	0x036A5670 BL 0x1C16CF4
	0x036A5674 ADRP X0, 0xA99000
	0x036A5678 LDR X0, [X0 + 0x718]
	0x036A567C BL 0x1C16CF4
	0x036A5680 MOVZ W8, 0x1
	0x036A5684 STRB W8, [X20 + 0x8FB]
	0x036A5688 LDR X20, [X19 + 0x38]
	0x036A568C STRB W31, [X31 + 0xC]
	0x036A5690 ADD X1, X31, 0xC
	0x036A5694 MOV X0, X20
	0x036A5698 MOV X2, X31
	0x036A569C BL 0x33DE64C
	0x036A56A0 LDR X0, [X19 + 0x10]
	0x036A56A4 CBZ X0, 0x36A5860
	0x036A56A8 MOV X1, X31
	0x036A56AC BL 0x361C394
	0x036A56B0 MOV X21, X0
	0x036A56B4 LDR X0, [X19 + 0x10]
	0x036A56B8 CBZ X0, 0x36A5864
	0x036A56BC MOV X1, X31
	0x036A56C0 BL 0x361BD78
	0x036A56C4 CMP W0, 0x4
	0x036A56C8 B.EQ 0x36A56E4
	0x036A56CC LDR X0, [X19 + 0x10]
	0x036A56D0 CBZ X0, 0x36A5868
	0x036A56D4 MOV X1, X31
	0x036A56D8 BL 0x361BD78
	0x036A56DC CMP W0, 0x3
	0x036A56E0 B.NE 0x36A57BC
	0x036A56E4 LDR X23, [X19 + 0x28]
	0x036A56E8 CBNZ X23, 0x36A57D0
	0x036A56EC LDR X0, [X19 + 0x10]
	0x036A56F0 CBZ X0, 0x36A586C
	0x036A56F4 MOV X1, X31
	0x036A56F8 BL 0x361BD78
	0x036A56FC CMP W0, 0x4
	0x036A5700 B.NE 0x36A5724
	0x036A5704 CBZ X21, 0x36A5888
	0x036A5708 LDR W8, [X21 + 0x10]
	0x036A570C SUB W2, W8, 0x2
	0x036A5710 MOVZ W1, 0x1
	0x036A5714 MOV X0, X21
	0x036A5718 MOV X3, X31
	0x036A571C BL 0x3228DE4
	0x036A5720 MOV X21, X0
	0x036A5724 ADRP X8, 0xA99000
	0x036A5728 LDR X8, [X8 + 0x718]
	0x036A572C LDR X0, [X8]
	0x036A5730 BL 0x1C16F10
	0x036A5734 MOV X23, X0
	0x036A5738 MOV X1, X31
	0x036A573C BL 0x367E10C
	0x036A5740 STR X23, [X19 + 0x28]
	0x036A5744 ADRP X8, 0xA8E000
	0x036A5748 LDR X8, [X8 + 0xB88]
	0x036A574C LDR X0, [X8]
	0x036A5750 MOVZ W1, 0x1
	0x036A5754 BL 0x1C16D6C
	0x036A5758 ADRP X8, 0xA5B000
	0x036A575C LDR X8, [X8 + 0x968]
	0x036A5760 MOV X24, X0
	0x036A5764 LDR X0, [X8]
	0x036A5768 LDR W8, [X0 + 0xE0]
	0x036A576C CBNZ W8, 0x36A5774
	0x036A5770 BL 0x1C16DFC
	0x036A5774 MOV X0, X21
	0x036A5778 MOV X1, X31
	0x036A577C BL 0x366D240
	0x036A5780 CBZ X24, 0x36A5870
	0x036A5784 MOV X21, X0
	0x036A5788 CBZ X0, 0x36A57A0
	0x036A578C LDR X8, [X24]
	0x036A5790 LDR X1, [X8 + 0x40]
	0x036A5794 MOV X0, X21
	0x036A5798 BL 0x1C16E00
	0x036A579C CBZ X0, 0x36A587C
	0x036A57A0 LDR W8, [X24 + 0x18]
	0x036A57A4 CBZ W8, 0x36A5874
	0x036A57A8 STR X21, [X24 + 0x20]
	0x036A57AC CBZ X23, 0x36A5878
	0x036A57B0 STR X24, [X23 + 0x20]
	0x036A57B4 LDR X23, [X19 + 0x28]
	0x036A57B8 B 0x36A57D0
	0x036A57BC MOV X0, X19
	0x036A57C0 BL 0x36A5504
	0x036A57C4 TBNZ X0, 0x0, 0x36A5818
	0x036A57C8 LDR X23, [X19 + 0x28]
	0x036A57CC CBZ X23, 0x36A5818
	0x036A57D0 MOV X22, X31
	0x036A57D4 MOVZ W21, 0x5
	0x036A57D8 LDRB W8, [X31 + 0xC]
	0x036A57DC CBZ W8, 0x36A57EC
	0x036A57E0 MOV X0, X20
	0x036A57E4 MOV X1, X31
	0x036A57E8 BL 0x33E14E4
	0x036A57EC CBNZ X22, 0x36A5858
	0x036A57F0 ORR W8, W21, 0x8
	0x036A57F4 CMP W8, 0x8
	0x036A57F8 B.NE 0x36A5800
	0x036A57FC LDR X23, [X19 + 0x28]
	0x036A5800 MOV X0, X23
	0x036A5804 LDP X20, X19, [X31 + 0x30]
	0x036A5808 LDP X22, X21, [X31 + 0x20]
	0x036A580C LDP X24, X23, [X31 + 0x10]
	0x036A5810 LDR X30, [X31], #0x40
	0x036A5814 RET
	0x036A5818 ADRP X8, 0xA4F000
	0x036A581C LDR X8, [X8 + 0x9F0]
	0x036A5820 LDR X0, [X8]
	0x036A5824 LDR W8, [X0 + 0xE0]
	0x036A5828 CBNZ W8, 0x36A5830
	0x036A582C BL 0x1C16DFC
	0x036A5830 MOV X0, X31
	0x036A5834 BL 0x33616A4
	0x036A5838 STR X0, [X19 + 0x18]
	0x036A583C MOV X0, X21
	0x036A5840 BL 0x369B2B8
	0x036A5844 MOV X22, X31
	0x036A5848 MOV X23, X31
	0x036A584C STR X0, [X19 + 0x28]
	0x036A5850 MOVZ W21, 0x8
	0x036A5854 B 0x36A57D8
	0x036A5858 MOV X0, X22
	0x036A585C BL 0x1C16F18
	0x036A5860 BL 0x1C16F20
	0x036A5864 BL 0x1C16F20
	0x036A5868 BL 0x1C16F20
	0x036A586C BL 0x1C16F20
	0x036A5870 BL 0x1C16F20
	0x036A5874 BL 0x1C16F28
	0x036A5878 BL 0x1C16F20
	0x036A587C BL 0x1C16F44
	0x036A5880 MOV X1, X31
	0x036A5884 BL 0x1C16DEC
	0x036A5888 BL 0x1C16F20
	0x036A588C B 0x36A594C
	0x036A5890 B 0x36A594C
	0x036A5894 B 0x36A594C
	0x036A5898 B 0x36A594C
	0x036A589C MOV X22, X1
	0x036A58A0 CMP W22, 0x1
	0x036A58A4 MOV X21, X0
	0x036A58A8 B.NE 0x36A5954
	0x036A58AC MOV X0, X21
	0x036A58B0 BL 0x3EB1AD0
	0x036A58B4 MOV X21, X0
	0x036A58B8 ADRP X0, 0xA54000
	0x036A58BC LDR X0, [X0 + 0xCC0]
	0x036A58C0 BL 0x1C16D08
	0x036A58C4 LDR X8, [X21]
	0x036A58C8 LDR X1, [X8]
	0x036A58CC BL 0x1C17270
	0x036A58D0 TBZ X0, 0x0, 0x36A58E4
	0x036A58D4 BL 0x3EB1AE0
	0x036A58D8 MOV X22, X31
	0x036A58DC MOV X23, X31
	0x036A58E0 B 0x36A57D4
	0x036A58E4 MOVZ W0, 0x8
	0x036A58E8 BL 0x3EB1AF0
	0x036A58EC LDR X8, [X21]
	0x036A58F0 STR X8, [X0]
	0x036A58F4 ADRP X1, 0x80F000
	0x036A58F8 ADD X1, X1, 0xE58
	0x036A58FC MOV X2, X31
	0x036A5900 BL 0x3EB1B00
	0x036A5904 B 0x36A594C
	0x036A5908 MOV X22, X1
	0x036A590C MOV X21, X0
	0x036A5910 BL 0x3EB1AE0
	0x036A5914 B 0x36A5954
	0x036A5918 B 0x36A594C
	0x036A591C B 0x36A594C
	0x036A5920 B 0x36A594C
	0x036A5924 B 0x36A594C
	0x036A5928 B 0x36A594C
	0x036A592C B 0x36A594C
	0x036A5930 B 0x36A594C
	0x036A5934 B 0x36A594C
	0x036A5938 B 0x36A594C
	0x036A593C B 0x36A594C
	0x036A5940 B 0x36A594C
	0x036A5944 B 0x36A594C
	0x036A5948 B 0x36A594C
	0x036A594C MOV X22, X1
	0x036A5950 MOV X21, X0
	0x036A5954 CMP W22, 0x1
	0x036A5958 B.NE 0x36A5978
	0x036A595C MOV X0, X21
	0x036A5960 BL 0x3EB1AD0
	0x036A5964 LDR X22, [X0]
	0x036A5968 BL 0x3EB1AE0
	0x036A596C MOV W21, W31
	0x036A5970 MOV X23, X31
	0x036A5974 B 0x36A57D8
	0x036A5978 MOV X22, X31
	0x036A597C B 0x36A5984
	0x036A5980 MOV X21, X0
	0x036A5984 LDRB W8, [X31 + 0xC]
	0x036A5988 CBZ W8, 0x36A5998
	0x036A598C MOV X0, X20
	0x036A5990 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xD3C000
	008 Move W8, [X20+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0xA9A000
	015 Move X0, [X0+3096]
	016 Call 0x1C17CF4
	017 Move X0, 0xA7E000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move X0, 0xA7E000
	021 Move X0, [X0+3488]
	022 Call 0x1C17CF4
	023 Move X0, 0xA4F000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0xA57000
	027 Move X0, [X0+2008]
	028 Call 0x1C17CF4
	029 Move X0, 0xA83000
	030 Move X0, [X0+696]
	031 Call 0x1C17CF4
	032 Move X0, 0xA83000
	033 Move X0, [X0+704]
	034 Call 0x1C17CF4
	035 Move X0, 0xA83000
	036 Move X0, [X0+712]
	037 Call 0x1C17CF4
	038 Move X0, 0xA83000
	039 Move X0, [X0+720]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+2288], W8
	043 Move [X31], X31
	044 Move [X31+8], X31
	045 Move X21, 0xA7E000
	046 Move W8, [X19]
	047 Move X22, [X19+40]
	048 Move X21, [X21+3488]
	049 Compare W8, 0
	050 JumpIfEqual {79}
	051 Move X8, 0xA57000
	052 Move X8, [X8+2008]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Add X0, X19, 32
	059 Move X1, X31
	060 Call CancellationToken.ThrowIfCancellationRequested, X0
	061 Compare X22, 0
	062 JumpIfEqual {88}
	063 Move X0, [X22+72]
	064 Compare X0, 0
	065 JumpIfEqual {89}
	066 Call MonoChunkParser.get_DataAvailable, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {87}
	071 Move X0, [X22+72]
	072 Compare X0, 0
	073 JumpIfEqual {90}
	074 Move X1, [X19+48]
	075 Move W2, [X19+56]
	076 Move W3, [X19+60]
	077 Call MonoChunkParser.ReadFromChunks, X0, X1, X2, X3
	078 Move W20, W0
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move TEMP, 0
	081 Not TEMP
	082 Move W8, TEMP
	083 Move [X31], V0
	084 Move [X19+72], X31
	085 Move [X19+80], X31
	086 Move [X19], W8
	087 Move [X19+64], X31
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 Call 0x1C17F20
	091 Subtract W8, W10, W9
	092 Move X1, [X19+64]
	093 Move W9, 0x4000
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSEL not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W8, 1024
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Compare X1, 0
	100 JumpIfEqual {103}
	101 Move W8, [X1+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0xA4F000
	104 Move X8, [X8+1560]
	105 Move X0, [X8]
	106 Move W1, W20
	107 Call 0x1C17D6C
	108 Move X1, X0
	109 Move [X19+64], X1
	110 Move X0, [X22+48]
	111 Compare X0, 0
	112 JumpIfEqual {219}
	113 Move X8, [X0]
	114 Move X4, [X19+32]
	115 Move X9, [X8+728]
	116 Move X5, [X8+736]
	117 Move W2, W31
	118 Move W3, W20
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X0, 0
	121 JumpIfEqual {218}
	122 Move X8, 0xA83000
	123 Move X8, [X8+720]
	124 Move X2, [X8]
	125 Move W1, W31
	126 Call Task`1<Int32>.ConfigureAwait, X0, X1
	127 Move X8, 0xA83000
	128 Move X8, [X8+712]
	129 Move [X31], X0
	130 Move [X31+8], X1
	131 Move X8, [X8]
	132 Add X0, X31, 0
	133 Move X1, X8
	134 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {195}
	139 Move X8, 0xA83000
	140 Move X8, [X8+704]
	141 Move X1, [X8]
	142 Add X0, X31, 0
	143 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	144 Move W20, W0
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Compare X22, 0
	147 JumpIfEqual {222}
	148 Move X0, [X22+72]
	149 Compare X0, 0
	150 JumpIfEqual {220}
	151 Move X1, [X19+64]
	152 Move [X31+28], W31
	153 Add X2, X31, 28
	154 Move W3, W20
	155 Call MonoChunkParser.InternalWrite, X0, X1, X2, X3
	156 Move X0, [X22+72]
	157 Compare X0, 0
	158 JumpIfEqual {221}
	159 Move X1, [X19+48]
	160 Move W2, [X19+56]
	161 Move W3, [X19+60]
	162 Call MonoChunkParser.ReadFromChunks, X0, X1, X2, X3
	163 Move W20, W0
	164 Compare W0, 0
	165 JumpIfNotEqual {178}
	166 Move X8, [X22+72]
	167 Compare X8, 0
	168 JumpIfEqual {217}
	169 Move W10, [X8+24]
	170 Move W9, [X8+28]
	171 Or W11, W10, W9
	172 Compare W11, 0
	173 JumpIfNotEqual {91}
	174 Move W8, [X8+36]
	175 Compare W8, 0
	176 JumpIfNotEqual {91}
	177 Move W20, W31
	178 Move TEMP, 1
	179 Not TEMP
	180 Move W8, TEMP
	181 Move [X19], W8
	182 Move [X19+64], X31
	183 Move X0, [X21]
	184 Move X21, 0xA7E000
	185 Add X19, X19, 8
	186 Move W8, [X0+224]
	187 Move X21, [X21+3632]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X2, [X21]
	192 Move X0, X19
	193 Move W1, W20
	194 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	195 Move [X19], W31
	196 Move V0, [X31]
	197 Move [X19+72], V0
	198 Move X0, [X21]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X8, 0xA9A000
	204 Move X8, [X8+3096]
	205 Add X0, X19, 8
	206 Move X3, [X8]
	207 Add X1, X31, 0
	208 Move X2, X19
	209 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	210 Move X20, [X31+48]
	211 Move X19, [X31+56]
	212 Move X22, [X31+32]
	213 Move X21, [X31+40]
	214 Move X30, [X31+16]
	215 Add X31, X31, 64
	216 Return 
	217 Call 0x1C17F20
	218 Call 0x1C17F20
	219 Call 0x1C17F20
	220 Call 0x1C17F20
	221 Call 0x1C17F20
	222 Call 0x1C17F20
	223 Move X20, X0
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, X20
	226 Call 0x3EB2AD0
	227 Move X20, X0
	228 Move X0, 0xA4F000
	229 Move X0, [X0+2000]
	230 Call 0x1C17D08
	231 Move X8, [X20]
	232 Move X1, [X8]
	233 Call 0x1C18270
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {259}
	238 Move X20, [X20]
	239 Call 0x3EB2AE0
	240 Move TEMP, 1
	241 Not TEMP
	242 Move W8, TEMP
	243 Move [X19+64], X31
	244 Move [X19+8], W8
	245 Move X0, 0xA7E000
	246 Move X0, [X0+3488]
	247 Call 0x1C17D08
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X0, 0xA7E000
	253 Move X0, [X0+3648]
	254 Call 0x1C17D08
	255 Move X2, X0
	256 Move X0, X19
	257 Move X1, X20
	258 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	259 Move W0, 8
	260 Call 0x3EB2AF0
	261 Move X8, [X20]
	262 Move [X0], X8
	263 Move X1, 0x810000
	264 Add X1, X1, 3672
	265 Move X2, X31
	266 Call 0x3EB2B00
	267 Move X20, X0
	268 Call 0x3EB2AE0
	269 Move X0, X20
	270 Call 0x1D2D690
	271 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036A5994 BL 0x33E14E4
	0x036A5998 CBNZ X22, 0x36A59A4
	0x036A599C MOV X0, X21
	0x036A59A0 BL 0x1D2C690
	0x036A59A4 MOV X0, X22
	0x036A59A8 BL 0x1C16F18
	0x036A59AC BL 0x1990590
	0x036A59B0 STR X1, [X0 + 0x20]
	0x036A59B4 RET
	0x036A59B8 STR X30, [X31 - 0x30]!
	0x036A59BC STP X22, X21, [X31 + 0x10]
	0x036A59C0 STP X20, X19, [X31 + 0x20]
	0x036A59C4 LDR X19, [X0 + 0x10]
	0x036A59C8 MOV X22, X2
	0x036A59CC MOV X21, X1
	0x036A59D0 MOV X20, X0
	0x036A59D4 STRB W31, [X31 + 0xC]
	0x036A59D8 ADD X1, X31, 0xC
	0x036A59DC MOV X0, X19
	0x036A59E0 MOV X2, X31
	0x036A59E4 BL 0x33DE64C
	0x036A59E8 MOV X0, X20
	0x036A59EC MOV X1, X22
	0x036A59F0 BL 0x36A7878
	0x036A59F4 CBZ X0, 0x36A5A3C
	0x036A59F8 MOV X1, X21
	0x036A59FC BL 0x36A7A68
	0x036A5A00 MOV X0, X20
	0x036A5A04 BL 0x36A69C8
	0x036A5A08 MOV X20, X31
	0x036A5A0C LDRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD3C000
	007 Move X21, 0xA7E000
	008 Move W8, [X22+2289]
	009 Move X21, [X21+3488]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA7E000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xA7E000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2289], W8
	024 Move X0, [X21]
	025 Move X21, 0xA7E000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3656]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Int32>.SetStateMachine, X0, X1
	040 Return 

