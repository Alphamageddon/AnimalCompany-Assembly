Type: System.Net.BufferedReadStream

Method: System.Void .ctor(System.Net.WebOperation operation, System.IO.Stream innerStream, System.Net.BufferOffsetSize readBuffer)

Disassembly:
	0x0369900C STRB W8, [X20 + 0x899]
	0x03699010 LDR X0, [X19 + 0x30]
	0x03699014 CBNZ X0, 0x36990B0
	0x03699018 ADRP X8, 0xA5A000
	0x0369901C LDR X8, [X8 + 0x618]
	0x03699020 MOVZ W1, 0xF
	0x03699024 LDR X0, [X8]
	0x03699028 BL 0x1C16D6C
	0x0369902C ADRP X21, 0xAA5000
	0x03699030 LDR X21, [X21 + 0x630]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X3
	005 Move X3, X31
	006 Move X20, X0
	007 Call WebReadStream..ctor, X0, X1, X2
	008 Move [X20+64], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Threading.Tasks.Task`1<System.Int32> ProcessReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x03699034 MOV X20, X0
	0x03699038 LDR X8, [X21]
	0x0369903C LDR W9, [X8 + 0xE0]
	0x03699040 CBNZ W9, 0x3699050
	0x03699044 MOV X0, X8
	0x03699048 BL 0x1C16DFC
	0x0369904C LDR X8, [X21]
	0x03699050 LDR X8, [X8 + 0xB8]
	0x03699054 LDR X0, [X8]
	0x03699058 CBZ X0, 0x36990BC
	0x0369905C LDR X8, [X0]
	0x03699060 MOV X1, X20
	0x03699064 LDP X9, X2, [X8 + 0x198]
	0x03699068 BLR X9
	0x0369906C ADRP X8, 0xA63000
	0x03699070 LDR X8, [X8 + 0x9E8]
	0x03699074 LDR X0, [X8]
	0x03699078 LDR W8, [X0 + 0xE0]
	0x0369907C CBNZ W8, 0x3699084
	0x03699080 BL 0x1C16DFC
	0x03699084 MOV X0, X20
	0x03699088 MOV X1, X31
	0x0369908C BL 0x33225A0
	0x03699090 STR X0, [X19 + 0x30]
	0x03699094 CBZ X20, 0x36990BC
	0x03699098 LDR W2, [X20 + 0x18]
	0x0369909C MOV X0, X20
	0x036990A0 MOV W1, W31
	0x036990A4 MOV X3, X31
	0x036990A8 BL 0x339FA34
	0x036990AC LDR X0, [X19 + 0x30]
	0x036990B0 LDP X20, X19, [X31 + 0x10]
	0x036990B4 LDP X30, X21, [X31], #0x20
	0x036990B8 RET
	0x036990BC BL 0x1C16F20
	0x036990C0 STR X30, [X31 - 0x30]!
	0x036990C4 STP X22, X21, [X31 + 0x10]
	0x036990C8 STP X20, X19, [X31 + 0x20]
	0x036990CC ADRP X21, 0xD47000
	0x036990D0 ADRP X22, 0xAA5000
	0x036990D4 LDRB W8, [X21 + 0x89A]
	0x036990D8 LDR X22, [X22 + 0x608]
	0x036990DC MOV X20, X1
	0x036990E0 MOV X19, X0
	0x036990E4 TBNZ X8, 0x0, 0x3699108
	0x036990E8 ADRP X0, 0xAA5000
	0x036990EC LDR X0, [X0 + 0x608]
	0x036990F0 BL 0x1C16CF4
	0x036990F4 ADRP X0, 0xA87000
	0x036990F8 LDR X0, [X0 + 0xD50]
	0x036990FC BL 0x1C16CF4
	0x03699100 MOVZ W8, 0x1
	0x03699104 STRB W8, [X21 + 0x89A]
	0x03699108 LDR X0, [X22]
	0x0369910C BL 0x1C16F10
	0x03699110 MOV X1, X20
	0x03699114 MOV X21, X0
	0x03699118 BL 0x36987A8
	0x0369911C STR X21, [X19 + 0x28]
	0x03699120 CBZ X21, 0x3699198
	0x03699124 MOV X0, X21
	0x03699128 BL 0x3698934
	0x0369912C MOV W20, W0
	0x03699130 TBZ X0, 0x0, 0x3699184
	0x03699134 LDR X0, [X19 + 0x28]
	0x03699138 CBZ X0, 0x3699198
	0x0369913C BL 0x36988DC
	0x03699140 CBZ X0, 0x3699178
	0x03699144 LDR X0, [X19 + 0x28]
	0x03699148 CBZ X0, 0x3699198
	0x0369914C BL 0x36988DC
	0x03699150 CBZ X0, 0x3699198

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xD48000
	011 Move X24, 0xA8A000
	012 Move W8, [X25+2191]
	013 Move X24, [X24+3488]
	014 Move X19, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X23, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xA8A000
	024 Move X0, [X0+3496]
	025 Call 0x1C17CF4
	026 Move X0, 0xAA6000
	027 Move X0, [X0+1512]
	028 Call 0x1C17CF4
	029 Move X0, 0xA8A000
	030 Move X0, [X0+3512]
	031 Call 0x1C17CF4
	032 Move X0, 0xA8A000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+2191], W8
	037 Move X0, [X24]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+112], X31
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+6], V0
	043 Move [X31+32], V0
	044 Move [X31+40], V0
	045 Move [X31+88], X23
	046 Move [X31+96], W21
	047 Move [X31+80], W20
	048 Move [X31+64], X19
	049 Move [X31+72], X22
	050 Move X21, 0xA8A000
	051 Move X19, 0xAA6000
	052 Move X20, 0xA8A000
	053 Move W8, [X0+224]
	054 Move X21, [X21+3496]
	055 Move X19, [X19+1512]
	056 Move X20, [X20+3512]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X21]
	061 Add X8, X31, 8
	062 Call AsyncTaskMethodBuilder`1<Int32>.Create
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move X9, [X31+24]
	065 Move X2, [X19]
	066 Add X8, X31, 32
	067 Or X19, X8, 15
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W10, TEMP
	071 Add X1, X31, 32
	072 Move X0, X19
	073 Move [X31+40], V0
	074 Move [X31+56], X9
	075 Move [X31+32], W10
	076 Call AsyncTaskMethodBuilder`1<Int32>.Start, X0, X1
	077 Move X1, [X20]
	078 Move X0, X19
	079 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	080 Move X20, [X31+176]
	081 Move X19, [X31+184]
	082 Move X22, [X31+160]
	083 Move X21, [X31+168]
	084 Move X24, [X31+144]
	085 Move X23, [X31+152]
	086 Move X30, [X31+128]
	087 Move X25, [X31+136]
	088 Add X31, X31, 192
	089 Return X0

Method: System.Boolean TryReadFromBuffer(System.Byte[] buffer, System.Int32 offset, System.Int32 size, out System.Int32 result)

Disassembly:
	0x03699154 MOV X1, X31
	0x03699158 BL 0x322B760
	0x0369915C CBZ X0, 0x3699198
	0x03699160 ADRP X8, 0xA87000
	0x03699164 LDR X8, [X8 + 0xD50]
	0x03699168 MOV X2, X31
	0x0369916C LDR X1, [X8]
	0x03699170 BL 0x3226F64
	0x03699174 TBZ X0, 0x0, 0x3699184
	0x03699178 MOV X0, X31
	0x0369917C BL 0x32560FC
	0x03699180 STR X0, [X19 + 0x20]
	0x03699184 AND W0, W20, 0x1
	0x03699188 LDP X20, X19, [X31 + 0x20]
	0x0369918C LDP X22, X21, [X31 + 0x10]
	0x03699190 LDR X30, [X31], #0x30
	0x03699194 RET
	0x03699198 BL 0x1C16F20
	0x0369919C SUB X31, X31, 0x40
	0x036991A0 STP X30, X23, [X31 + 0x10]
	0x036991A4 STP X22, X21, [X31 + 0x20]
	0x036991A8 STP X20, X19, [X31 + 0x30]
	0x036991AC ADRP X21, 0xD47000
	0x036991B0 LDRB W8, [X21 + 0x89B]
	0x036991B4 MOV X19, X1
	0x036991B8 MOV X20, X0
	0x036991BC TBNZ X8, 0x0, 0x36991E0
	0x036991C0 ADRP X0, 0xA5A000
	0x036991C4 LDR X0, [X0 + 0x8F0]
	0x036991C8 BL 0x1C16CF4
	0x036991CC ADRP X0, 0xA8D000
	0x036991D0 LDR X0, [X0 + 0x350]
	0x036991D4 BL 0x1C16CF4
	0x036991D8 MOVZ W8, 0x1
	0x036991DC STRB W8, [X21 + 0x89B]
	0x036991E0 STRB W31, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X9, [X0+64]
	006 Move X19, X4
	007 Move X20, X0
	008 Compare X9, 0
	009 JumpIfEqual {33}
	010 Move W10, [X9+28]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, W2
	013 Move X2, X1
	014 Move X0, [X9+16]
	015 Move W1, [X9+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSEL not yet implemented."
	018 Move W3, W8
	019 Move W4, W21
	020 Move X5, X31
	021 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	022 Move X8, [X20+64]
	023 Compare X8, 0
	024 JumpIfEqual {42}
	025 Move W9, [X8+24]
	026 Move W10, [X8+28]
	027 Move W0, 1
	028 Add W9, W9, W21
	029 Subtract W10, W10, W21
	030 Move [X8+24], W9
	031 Move [X8+28], W10
	032 Move [X19], W21
	033 Move [X19], W31
	034 Move X8, [X20+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call 0x1C17F20

