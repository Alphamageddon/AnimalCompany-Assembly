Type: System.Net.Sockets.SocketAsyncResult/<>c

Method: System.Void .cctor()

Disassembly:
	0x036CE2A8 LDP X22, X21, [X31 + 0x10]
	0x036CE2AC LDP X30, X23, [X31], #0x30
	0x036CE2B0 RET
	0x036CE2B4 ADRP X0, 0xA52000
	0x036CE2B8 LDR X0, [X0 + 0xC08]
	0x036CE2BC BL 0x1C16D08
	0x036CE2C0 BL 0x1C16F10
	0x036CE2C4 MOV X19, X0
	0x036CE2C8 ADRP X0, 0xA71000
	0x036CE2CC LDR X0, [X0 + 0xED8]
	0x036CE2D0 BL 0x1C16D08
	0x036CE2D4 MOV X1, X0
	0x036CE2D8 MOV X0, X19
	0x036CE2DC MOV X2, X31
	0x036CE2E0 BL 0x33674A0
	0x036CE2E4 ADRP X0, 0xA71000
	0x036CE2E8 LDR X0, [X0 + 0xEE0]
	0x036CE2EC BL 0x1C16D08
	0x036CE2F0 MOV X1, X0
	0x036CE2F4 MOV X0, X19
	0x036CE2F8 BL 0x1C16DEC
	0x036CE2FC BL 0x1C16F20
	0x036CE300 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD13000
	005 Move X20, 0xA72000
	006 Move W8, [X19+2654]
	007 Move X20, [X20+3448]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA72000
	013 Move X0, [X0+3448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2654], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x036CE304 STP X24, X23, [X31 + 0x10]
	0x036CE308 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Complete>b__27_0(System.Object state)

Disassembly:
	0x036CE30C STP X20, X19, [X31 + 0x30]
	0x036CE310 ADRP X22, 0xD12000
	0x036CE314 LDRB W8, [X22 + 0xA6E]
	0x036CE318 MOV W21, W2
	0x036CE31C MOV W19, W1
	0x036CE320 MOV X20, X0
	0x036CE324 TBNZ X8, 0x0, 0x36CE33C
	0x036CE328 ADRP X0, 0xA71000
	0x036CE32C LDR X0, [X0 + 0xEC0]
	0x036CE330 BL 0x1C16CF4
	0x036CE334 MOVZ W8, 0x1
	0x036CE338 STRB W8, [X22 + 0xA6E]
	0x036CE33C SUBS W22, W19, 0x1
	0x036CE340 B.LT 0x36CE39C
	0x036CE344 CBZ X20, 0x36CE400
	0x036CE348 ADRP X24, 0xA71000
	0x036CE34C LDR X24, [X24 + 0xEC0]
	0x036CE350 MOV X0, X20
	0x036CE354 MOV W1, W22
	0x036CE358 MOV X2, X31
	0x036CE35C BL 0x3222A1C
	0x036CE360 LDR X8, [X24]
	0x036CE364 MOV W23, W0
	0x036CE368 LDR W9, [X8 + 0xE0]
	0x036CE36C CBNZ W9, 0x36CE37C
	0x036CE370 MOV X0, X8
	0x036CE374 BL 0x1C16DFC
	0x036CE378 LDR X8, [X24]
	0x036CE37C LDR X8, [X8 + 0xB8]
	0x036CE380 LDRH W8, [X8 + 0x42]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD13000
	005 Move W8, [X20+2655]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA71000
	012 Move X0, [X0+4024]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2655], W8
	016 Compare X19, 0
	017 JumpIfEqual {34}
	018 Move X8, 0xA71000
	019 Move X8, [X8+4024]
	020 Move X1, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19+16]
	024 Compare X8, 0
	025 JumpIfEqual {34}
	026 Move X3, [X8+24]
	027 Move X0, [X8+64]
	028 Move X2, [X8+40]
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 CallNoReturn X3
	034 Call 0x1C17F20
	035 Move X0, X19
	036 Call 0x1C181E0

