Type: System.Net.Sockets.TcpListener

Method: System.Void .ctor(System.Net.IPAddress localaddr, System.Int32 port)

Disassembly:
	0x036CCE54 CBNZ W8, 0x36CCE8C
	0x036CCE58 MOV X19, X0
	0x036CCE5C MOV W20, W1
	0x036CCE60 ADD X21, X0, 0x14
	0x036CCE64 BL 0x1C16D44
	0x036CCE68 MOVZ W1, 0x1
	0x036CCE6C MOV X0, X21
	0x036CCE70 MOV X2, X31
	0x036CCE74 BL 0x33E9064
	0x036CCE78 CBNZ W0, 0x36CCEC0
	0x036CCE7C STR W20, [X19 + 0x3C]
	0x036CCE80 LDP X20, X19, [X31 + 0x10]
	0x036CCE84 LDP X30, X21, [X31], #0x20
	0x036CCE88 RET
	0x036CCE8C ADRP X0, 0xA50000
	0x036CCE90 LDR X0, [X0 + 0x4B8]
	0x036CCE94 BL 0x1C16D08
	0x036CCE98 BL 0x1C16F10
	0x036CCE9C MOV X19, X0
	0x036CCEA0 ADRP X0, 0xA73000
	0x036CCEA4 LDR X0, [X0 + 0xE90]
	0x036CCEA8 BL 0x1C16D08
	0x036CCEAC MOV X1, X0
	0x036CCEB0 MOV X0, X19
	0x036CCEB4 MOV X2, X31
	0x036CCEB8 BL 0x338C448
	0x036CCEBC B 0x36CCEF0
	0x036CCEC0 ADRP X0, 0xA27000
	0x036CCEC4 LDR X0, [X0 + 0x5B0]
	0x036CCEC8 BL 0x1C16D08
	0x036CCECC BL 0x1C16F10
	0x036CCED0 MOV X19, X0
	0x036CCED4 ADRP X0, 0xA71000
	0x036CCED8 LDR X0, [X0 + 0x148]
	0x036CCEDC BL 0x1C16D08
	0x036CCEE0 MOV X1, X0
	0x036CCEE4 MOV X0, X19
	0x036CCEE8 MOV X2, X31
	0x036CCEEC BL 0x337DF1C
	0x036CCEF0 ADRP X0, 0xA73000
	0x036CCEF4 LDR X0, [X0 + 0xE98]
	0x036CCEF8 BL 0x1C16D08
	0x036CCEFC MOV X1, X0
	0x036CCF00 MOV X0, X19
	0x036CCF04 BL 0x1C16DEC
	0x036CCF08 STP X30, X19, [X31 - 0x10]!
	0x036CCF0C MOV X19, X0
	0x036CCF10 BL 0x1C16D44
	0x036CCF14 LDR X8, [X19]
	0x036CCF18 STR W31, [X19 + 0x14]
	0x036CCF1C MOV X0, X19
	0x036CCF20 MOV X1, X19
	0x036CCF24 LDP X3, X2, [X8 + 0x188]
	0x036CCF28 LDP X30, X19, [X31], #0x10
	0x036CCF2C BR X3
	0x036CCF30 CBZ X1, 0x36CCF54
	0x036CCF34 LDR X8, [X1 + 0x50]
	0x036CCF38 MOV X2, X1
	0x036CCF3C CBZ X8, 0x36CCF54
	0x036CCF40 LDR X1, [X2 + 0x20]
	0x036CCF44 LDR X4, [X8 + 0x18]
	0x036CCF48 LDR X0, [X8 + 0x40]
	0x036CCF4C LDR X3, [X8 + 0x28]
	0x036CCF50 BR X4
	0x036CCF54 RET
	0x036CCF58 LDP X8, X1, [X0 + 0x58]
	0x036CCF5C MOV X0, X8
	0x036CCF60 RET
	0x036CCF64 LDR W0, [X0 + 0x68]
	0x036CCF68 RET
	0x036CCF6C LDR W0, [X0 + 0x6C]
	0x036CCF70 RET
	0x036CCF74 LDR X0, [X0 + 0x78]
	0x036CCF78 RET
	0x036CCF7C SUB X31, X31, 0x30
	0x036CCF80 STP X30, X21, [X31 + 0x10]
	0x036CCF84 STP X20, X19, [X31 + 0x20]
	0x036CCF88 ADRP X21, 0xD14000
	0x036CCF8C STP X1, X2, [X31]
	0x036CCF90 ADRP X20, 0xA52000
	0x036CCF94 LDRB W8, [X21 + 0xA5A]
	0x036CCF98 LDR X20, [X20 + 0x2D8]
	0x036CCF9C MOV X19, X0
	0x036CCFA0 TBNZ X8, 0x0, 0x36CCFB8
	0x036CCFA4 ADRP X0, 0xA52000
	0x036CCFA8 LDR X0, [X0 + 0x2D8]
	0x036CCFAC BL 0x1C16CF4
	0x036CCFB0 MOVZ W8, 0x1
	0x036CCFB4 STRB W8, [X21 + 0xA5A]
	0x036CCFB8 LDR X1, [X20]
	0x036CCFBC ADD X0, X31, 0x0
	0x036CCFC0 BL 0x319DCF0
	0x036CCFC4 CBZ W0, 0x36CCFD0
	0x036CCFC8 LDR X8, [X19 + 0x78]
	0x036CCFCC CBNZ X8, 0x36CD000
	0x036CCFD0 LDR V0, [X31]
	0x036CCFD4 STR W31, [X19 + 0x68]
	0x036CCFD8 ADD X0, X31, 0x0
	0x036CCFDC STUR V0, [X19 + 0x58]
	0x036CCFE0 LDR X1, [X20]
	0x036CCFE4 BL 0x319DCF0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD15000
	007 Move W8, [X22+2640]
	008 Move W20, W2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xA35000
	016 Move X0, [X0+3000]
	017 Call 0x1C17CF4
	018 Move X0, 0xA31000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move X0, 0xA72000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2640], W8
	026 Move X0, X19
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move X0, X31
	030 Call Logging.get_On
	031 Compare X21, 0
	032 JumpIfEqual {85}
	033 Move X8, 0xA72000
	034 Move X8, [X8+3624]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move W0, W20
	041 Move X1, X31
	042 Call ValidationHelper.ValidateTcpPort, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {97}
	047 Move X8, 0xA35000
	048 Move X8, [X8+3000]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X1, X21
	052 Move W2, W20
	053 Move X3, X31
	054 Move X22, X0
	055 Call IPEndPoint..ctor, X0, X1, X2
	056 Move [X19+16], X22
	057 Compare X22, 0
	058 JumpIfEqual {115}
	059 Move X8, [X22]
	060 Move X20, 0xA31000
	061 Move X0, X22
	062 Move X9, [X8+376]
	063 Move X1, [X8+384]
	064 Move X20, [X20+1928]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X20]
	067 Move W20, W0
	068 Move X0, X8
	069 Call 0x1C17F10
	070 Move W2, 1
	071 Move W3, 6
	072 Move W1, W20
	073 Move X4, X31
	074 Move X21, X0
	075 Call Socket..ctor, X0, X1, X2, X3
	076 Move [X19+24], X21
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X0, X31
	082 Move X30, [X31+48]
	083 Call Logging.get_On
	084 Return 
	085 Move X0, 0xA2D000
	086 Move X0, [X0+1320]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0xA74000
	091 Move X0, [X0+3584]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Move X2, X31
	096 Call ArgumentNullException..ctor, X0, X1
	097 Move X0, 0xA30000
	098 Move X0, [X0+1888]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X19, X0
	102 Move X0, 0xA72000
	103 Move X0, [X0+1992]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X19
	107 Move X2, X31
	108 Call ArgumentOutOfRangeException..ctor, X0, X1
	109 Move X0, 0xA74000
	110 Move X0, [X0+3592]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Call 0x1C17DEC
	115 Call 0x1C17F20

Method: System.Net.Sockets.Socket get_Server()

Disassembly:
	0x036CCFE8 STR W0, [X19 + 0x6C]
	0x036CCFEC STRB W31, [X19 + 0x70]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void Start()

Disassembly:
	0x036CCFF0 LDP X20, X19, [X31 + 0x20]
	0x036CCFF4 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move TEMP, 0x80000000
	002 Not TEMP
	003 Move W1, TEMP

Method: System.Void Start(System.Int32 backlog)

Disassembly:
	0x036CCFF8 ADD X31, X31, 0x30
	0x036CCFFC RET
	0x036CD000 ADRP X0, 0xA72000
	0x036CD004 LDR X0, [X0 + 0xEA0]
	0x036CD008 BL 0x1C16D08
	0x036CD00C MOV X19, X0
	0x036CD010 ADRP X0, 0xA72000
	0x036CD014 LDR X0, [X0 + 0xEA8]
	0x036CD018 BL 0x1C16D08
	0x036CD01C MOV X1, X0
	0x036CD020 MOV X0, X19
	0x036CD024 MOV X2, X31
	0x036CD028 BL 0x32094D4
	0x036CD02C MOV X19, X0
	0x036CD030 ADRP X0, 0xA2E000
	0x036CD034 LDR X0, [X0 + 0x578]
	0x036CD038 BL 0x1C16D08
	0x036CD03C BL 0x1C16F10
	0x036CD040 MOV X1, X19
	0x036CD044 MOV X2, X31
	0x036CD048 MOV X20, X0
	0x036CD04C BL 0x3314A68
	0x036CD050 ADRP X0, 0xA72000
	0x036CD054 LDR X0, [X0 + 0xEB0]
	0x036CD058 BL 0x1C16D08
	0x036CD05C MOV X1, X0
	0x036CD060 MOV X0, X20
	0x036CD064 BL 0x1C16DEC
	0x036CD068 LDR X0, [X0 + 0x30]
	0x036CD06C CBZ X0, 0x36CD078
	0x036CD070 MOV X1, X31
	0x036CD074 B 0x36BF224
	0x036CD078 RET
	0x036CD07C STP X30, X25, [X31 - 0x40]!
	0x036CD080 STP X24, X23, [X31 + 0x10]
	0x036CD084 STP X22, X21, [X31 + 0x20]
	0x036CD088 STP X20, X19, [X31 + 0x30]
	0x036CD08C ADRP X25, 0xD13000
	0x036CD090 ADRP X24, 0xA72000
	0x036CD094 LDRB W8, [X25 + 0xA5B]
	0x036CD098 LDR X24, [X24 + 0x9F8]
	0x036CD09C MOV W20, W4
	0x036CD0A0 MOV X22, X3
	0x036CD0A4 MOV X23, X2
	0x036CD0A8 MOV X21, X1
	0x036CD0AC MOV X19, X0
	0x036CD0B0 TBNZ X8, 0x0, 0x36CD0C8
	0x036CD0B4 ADRP X0, 0xA72000
	0x036CD0B8 LDR X0, [X0 + 0x9F8]
	0x036CD0BC BL 0x1C16CF4
	0x036CD0C0 MOVZ W8, 0x1
	0x036CD0C4 STRB W8, [X25 + 0xA5B]
	0x036CD0C8 MOV X0, X19
	0x036CD0CC MOV X1, X23
	0x036CD0D0 MOV X2, X22
	0x036CD0D4 MOV X3, X31
	0x036CD0D8 BL 0x362E390
	0x036CD0DC STR X21, [X19 + 0x30]
	0x036CD0E0 STR W20, [X19 + 0x38]
	0x036CD0E4 STP X31, X31, [X19 + 0x40]
	0x036CD0E8 LDR X1, [X24]
	0x036CD0EC MOV X0, X31
	0x036CD0F0 BL 0x319DBA8
	0x036CD0F4 STP X0, X1, [X19 + 0x50]
	0x036CD0F8 STR X31, [X19 + 0x60]
	0x036CD0FC STR W31, [X19 + 0x68]
	0x036CD100 STR X31, [X19 + 0x88]
	0x036CD104 STRB W31, [X19 + 0x90]
	0x036CD108 STP X31, X31, [X19 + 0x70]
	0x036CD10C STR W31, [X19 + 0x80]
	0x036CD110 STUR X31, [X19 + 0x94]
	0x036CD114 STUR X31, [X19 + 0xA4]
	0x036CD118 STUR X31, [X19 + 0x9C]
	0x036CD11C LDP X20, X19, [X31 + 0x30]
	0x036CD120 LDP X22, X21, [X31 + 0x20]
	0x036CD124 LDP X24, X23, [X31 + 0x10]
	0x036CD128 LDP X30, X25, [X31], #0x40
	0x036CD12C RET
	0x036CD130 STP X30, X21, [X31 - 0x20]!
	0x036CD134 STP X20, X19, [X31 + 0x10]
	0x036CD138 MOV X20, X1
	0x036CD13C MOV X1, X2
	0x036CD140 MOV X2, X3
	0x036CD144 MOV X3, X31
	0x036CD148 MOV W19, W4
	0x036CD14C MOV X21, X0
	0x036CD150 BL 0x362E3B0
	0x036CD154 STR X20, [X21 + 0x30]
	0x036CD158 STR W19, [X21 + 0x38]
	0x036CD15C LDP X20, X19, [X31 + 0x10]
	0x036CD160 LDP X30, X21, [X31], #0x20
	0x036CD164 RET
	0x036CD168 STR X30, [X31 - 0x20]!
	0x036CD16C STP X20, X19, [X31 + 0x10]
	0x036CD170 ADRP X20, 0xD13000
	0x036CD174 LDRB W8, [X20 + 0xA5C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {35}
	008 Move X19, X0
	009 Move X0, X31
	010 Move W20, W1
	011 Call Logging.get_On
	012 Move X0, [X19+24]
	013 Compare X0, 0
	014 JumpIfEqual {53}
	015 Move W8, [X19+32]
	016 Compare W8, 0
	017 JumpIfNotEqual {29}
	018 Move X1, [X19+16]
	019 Move X2, X31
	020 Call Socket.Bind, X0, X1
	021 Move X0, [X19+24]
	022 Compare X0, 0
	023 JumpIfEqual {73}
	024 Move W1, W20
	025 Move X2, X31
	026 Call Socket.Listen, X0, X1
	027 Move W8, 1
	028 Move [X19+32], W8
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X0, X31
	032 Move X30, [X31+32]
	033 Call Logging.get_On
	034 Return 
	035 Move X0, 0xA2F000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xA73000
	041 Move X0, [X0+3600]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call ArgumentOutOfRangeException..ctor, X0, X1
	047 Move X0, 0xA73000
	048 Move X0, [X0+3608]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC
	053 Move X0, 0xA73000
	054 Move X0, [X0+3616]
	055 Call 0x1C17D08
	056 Move X1, X31
	057 Call SR.GetString, X0
	058 Move X19, X0
	059 Move X0, 0xA27000
	060 Move X0, [X0+1456]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X1, X19
	064 Move X2, X31
	065 Move X20, X0
	066 Call InvalidOperationException..ctor, X0, X1
	067 Move X0, 0xA73000
	068 Move X0, [X0+3608]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X20
	072 Call 0x1C17DEC
	073 Call 0x1C17F20
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X20, X0
	076 Move X0, X20
	077 Call 0x3EB2AD0
	078 Move X20, X0
	079 Move X0, 0xA65000
	080 Move X0, [X0+216]
	081 Call 0x1C17D08
	082 Move X8, [X20]
	083 Move X1, [X8]
	084 Call 0x1C18270
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {95}
	089 Move X20, [X20]
	090 Call 0x3EB2AE0
	091 Move X0, X19
	092 Call TcpListener.Stop, X0
	093 Move X0, X20
	094 Call 0x1C17F18
	095 Move W0, 8
	096 Call 0x3EB2AF0
	097 Move X8, [X20]
	098 Move [X0], X8
	099 Move X1, 0x7E8000
	100 Add X1, X1, 3672
	101 Move X2, X31
	102 Call 0x3EB2B00
	103 Move X20, X0
	104 Call 0x3EB2AE0
	105 Move X0, X20
	106 Call 0x1D2D690
	107 Call 0x1991590

Method: System.Void Stop()

Disassembly:
	0x036CD178 MOV X19, X0
	0x036CD17C TBNZ X8, 0x0, 0x36CD194
	0x036CD180 ADRP X0, 0xA64000
	0x036CD184 LDR X0, [X0 + 0xD8]
	0x036CD188 BL 0x1C16CF4
	0x036CD18C MOVZ W8, 0x1
	0x036CD190 STRB W8, [X20 + 0xA5C]
	0x036CD194 LDR X8, [X19 + 0x40]
	0x036CD198 CBZ X8, 0x36CD1D0
	0x036CD19C ADRP X9, 0xA64000
	0x036CD1A0 LDR X9, [X9 + 0xD8]
	0x036CD1A4 LDR X10, [X8]
	0x036CD1A8 LDR X9, [X9]
	0x036CD1AC LDRB W12, [X10 + 0x130]
	0x036CD1B0 LDRB W11, [X9 + 0x130]
	0x036CD1B4 CMP W12, W11
	0x036CD1B8 B.CC 0x36CD1D0
	0x036CD1BC LDR X10, [X10 + 0xC8]
	0x036CD1C0 ADD X10, X10, X11, 0x3, LSL
	0x036CD1C4 LDUR X10, [X10 - 0x8]
	0x036CD1C8 CMP X10, X9
	0x036CD1CC B.EQ 0x36CD1E0
	0x036CD1D0 LDR W0, [X19 + 0xA4]
	0x036CD1D4 LDP X20, X19, [X31 + 0x10]
	0x036CD1D8 LDR X30, [X31], #0x20
	0x036CD1DC RET
	0x036CD1E0 LDR W0, [X8 + 0x8C]
	0x036CD1E4 B 0x36CD1D4
	0x036CD1E8 STR X30, [X31 - 0x20]!
	0x036CD1EC STP X20, X19, [X31 + 0x10]
	0x036CD1F0 LDR X8, [X0 + 0x40]
	0x036CD1F4 CBNZ X8, 0x36CD20C
	0x036CD1F8 LDR W8, [X0 + 0xA4]
	0x036CD1FC CBNZ W8, 0x36CD23C
	0x036CD200 LDP X20, X19, [X31 + 0x10]
	0x036CD204 LDR X30, [X31], #0x20
	0x036CD208 RET
	0x036CD20C LDR X19, [X0 + 0x30]
	0x036CD210 MOV X20, X0
	0x036CD214 MOV X0, X19
	0x036CD218 BL 0x19903C0
	0x036CD21C STRB W31, [X19 + 0x52]
	0x036CD220 ADRP X0, 0xA72000
	0x036CD224 LDR X19, [X20 + 0x40]
	0x036CD228 LDR X0, [X0 + 0xEB8]
	0x036CD22C BL 0x1C16D08
	0x036CD230 MOV X1, X0
	0x036CD234 MOV X0, X19
	0x036CD238 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD14000
	006 Move W8, [X20+2641]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA30000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2641], W8
	017 Move X0, X31
	018 Call Logging.get_On
	019 Move X0, [X19+24]
	020 Compare X0, 0
	021 JumpIfEqual {25}
	022 Move X1, X31
	023 Call Socket.Close, X0
	024 Move [X19+24], X31
	025 Move X0, [X19+16]
	026 Move [X19+32], W31
	027 Compare X0, 0
	028 JumpIfEqual {62}
	029 Move X8, [X0]
	030 Move X20, 0xA30000
	031 Move X9, [X8+376]
	032 Move X1, [X8+384]
	033 Move X20, [X20+1928]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X20]
	036 Move W21, W0
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move W2, 1
	040 Move W3, 6
	041 Move W1, W21
	042 Move X4, X31
	043 Move X20, X0
	044 Call Socket..ctor, X0, X1, X2, X3
	045 Move W8, [X19+33]
	046 Move [X19+24], X20
	047 Compare W8, 0
	048 JumpIfEqual {55}
	049 Compare X20, 0
	050 JumpIfEqual {62}
	051 Move W1, 1
	052 Move X0, X20
	053 Move X2, X31
	054 Call Socket.set_ExclusiveAddressUse, X0, X1
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X0, X31
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call Logging.get_On
	061 Return 
	062 Call 0x1C17F20

Method: System.Net.Sockets.TcpClient AcceptTcpClient()

Disassembly:
	0x036CD23C LDR X19, [X0 + 0x30]
	0x036CD240 MOV X20, X0
	0x036CD244 MOV X0, X19
	0x036CD248 BL 0x19903C0
	0x036CD24C STRB W31, [X19 + 0x52]
	0x036CD250 ADRP X0, 0xA64000
	0x036CD254 LDR W19, [X20 + 0xA4]
	0x036CD258 LDR X0, [X0 + 0xD8]
	0x036CD25C BL 0x1C16D08
	0x036CD260 BL 0x1C16F10
	0x036CD264 MOV W1, W19
	0x036CD268 MOV X20, X0
	0x036CD26C BL 0x36C6F04
	0x036CD270 ADRP X0, 0xA72000
	0x036CD274 LDR X0, [X0 + 0xEB8]
	0x036CD278 BL 0x1C16D08
	0x036CD27C MOV X1, X0
	0x036CD280 MOV X0, X20
	0x036CD284 BL 0x1C16DEC
	0x036CD288 B 0x36C911C
	0x036CD28C AND W8, W1, 0x1
	0x036CD290 STRB W8, [X0 + 0x28]
	0x036CD294 B 0x36C911C
	0x036CD298 AND W8, W2, 0x1
	0x036CD29C STR X1, [X0 + 0x40]
	0x036CD2A0 STRB W8, [X0 + 0x28]
	0x036CD2A4 B 0x36C911C
	0x036CD2A8 STR X30, [X31 - 0x20]!
	0x036CD2AC STP X20, X19, [X31 + 0x10]
	0x036CD2B0 ADRP X19, 0xD13000
	0x036CD2B4 ADRP X20, 0xA72000
	0x036CD2B8 LDRB W8, [X19 + 0xA5E]
	0x036CD2BC LDR X20, [X20 + 0xD78]
	0x036CD2C0 TBNZ X8, 0x0, 0x36CD2D8
	0x036CD2C4 ADRP X0, 0xA72000
	0x036CD2C8 LDR X0, [X0 + 0xD78]
	0x036CD2CC BL 0x1C16CF4
	0x036CD2D0 MOVZ W8, 0x1
	0x036CD2D4 STRB W8, [X19 + 0xA5E]
	0x036CD2D8 LDR X0, [X20]
	0x036CD2DC BL 0x1C16F10
	0x036CD2E0 MOV X1, X31
	0x036CD2E4 MOV X19, X0
	0x036CD2E8 BL 0x33BDD8C
	0x036CD2EC LDR X8, [X20]
	0x036CD2F0 LDR X8, [X8 + 0xB8]
	0x036CD2F4 STR X19, [X8]
	0x036CD2F8 LDP X20, X19, [X31 + 0x10]
	0x036CD2FC LDR X30, [X31], #0x20
	0x036CD300 RET
	0x036CD304 MOV X1, X31
	0x036CD308 B 0x33BDD8C
	0x036CD30C STR X30, [X31 - 0x20]!
	0x036CD310 STP X20, X19, [X31 + 0x10]
	0x036CD314 ADRP X20, 0xD13000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD14000
	005 Move W8, [X20+2642]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA65000
	012 Move X0, [X0+1296]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2642], W8
	016 Move X0, X31
	017 Call Logging.get_On
	018 Move W8, [X19+32]
	019 Compare W8, 0
	020 JumpIfEqual {42}
	021 Move X0, [X19+24]
	022 Compare X0, 0
	023 JumpIfEqual {62}
	024 Move X19, 0xA65000
	025 Move X19, [X19+1296]
	026 Move X1, X31
	027 Call Socket.Accept, X0
	028 Move X8, [X19]
	029 Move X19, X0
	030 Move X0, X8
	031 Call 0x1C17F10
	032 Move X1, X19
	033 Move X20, X0
	034 Call TcpClient..ctor, X0, X1
	035 Move X0, X31
	036 Call Logging.get_On
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Move X0, 0xA73000
	043 Move X0, [X0+3624]
	044 Call 0x1C17D08
	045 Move X1, X31
	046 Call SR.GetString, X0
	047 Move X19, X0
	048 Move X0, 0xA27000
	049 Move X0, [X0+1456]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X1, X19
	053 Move X2, X31
	054 Move X20, X0
	055 Call InvalidOperationException..ctor, X0, X1
	056 Move X0, 0xA73000
	057 Move X0, [X0+3632]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X20
	061 Call 0x1C17DEC
	062 Call 0x1C17F20

