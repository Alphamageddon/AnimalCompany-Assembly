Type: System.Net.Sockets.Socket/AwaitableSocketAsyncEventArgs

Method: System.Void .ctor()

Disassembly:
	0x036C7170 TBNZ X8, 0x0, 0x36C71A0
	0x036C7174 ADRP X0, 0xA78000
	0x036C7178 LDR X0, [X0 + 0xCE0]
	0x036C717C BL 0x1C16CF4
	0x036C7180 ADRP X0, 0xA78000
	0x036C7184 LDR X0, [X0 + 0xCE8]
	0x036C7188 BL 0x1C16CF4
	0x036C718C ADRP X0, 0xA78000
	0x036C7190 LDR X0, [X0 + 0xCF0]
	0x036C7194 BL 0x1C16CF4
	0x036C7198 MOVZ W8, 0x1
	0x036C719C STRB W8, [X20 + 0xA26]
	0x036C71A0 CBZ X19, 0x36C71FC
	0x036C71A4 ADRP X9, 0xA78000
	0x036C71A8 LDR X9, [X9 + 0xCF0]
	0x036C71AC LDR X8, [X19]
	0x036C71B0 LDR X1, [X9]
	0x036C71B4 LDRB W10, [X8 + 0x130]
	0x036C71B8 LDRB W9, [X1 + 0x130]
	0x036C71BC CMP W10, W9
	0x036C71C0 B.CC 0x36C7200
	0x036C71C4 LDR X8, [X8 + 0xC8]
	0x036C71C8 ADD X8, X8, X9, 0x3, LSL
	0x036C71CC LDUR X8, [X8 - 0x8]
	0x036C71D0 CMP X8, X1
	0x036C71D4 B.NE 0x36C7200

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD1A000
	006 Move X20, 0xA79000
	007 Move W8, [X21+2585]
	008 Move X20, [X20+3144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA79000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2585], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, X19
	027 Move W1, W31
	028 Move X8, [X8+16]
	029 Move [X19+128], X8
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]

Method: System.Boolean get_WrapExceptionsInIOExceptions()

Disassembly:
	0x036C7264 BL 0x1C16F10
	0x036C7268 MOV X19, X0

ISIL:
	001 Move W0, [X0+154]
	002 Return X0

Method: System.Void set_WrapExceptionsInIOExceptions(System.Boolean value)

Disassembly:
	0x036C726C ADRP X0, 0xA78000
	0x036C7270 LDR X0, [X0 + 0xD00]
	0x036C7274 BL 0x1C16D08

ISIL:
	001 And W8, W1, 1
	002 Move [X0+154], W8
	003 Return 

Method: System.Boolean Reserve()

Disassembly:
	0x036C7278 MOV X1, X0
	0x036C727C MOV X0, X19
	0x036C7280 MOV X2, X31
	0x036C7284 BL 0x33B2C70
	0x036C7288 ADRP X0, 0xA78000
	0x036C728C LDR X0, [X0 + 0xCB8]
	0x036C7290 BL 0x1C16D08
	0x036C7294 MOV X1, X0
	0x036C7298 MOV X0, X19
	0x036C729C BL 0x1C16DEC
	0x036C72A0 STR X30, [X31 - 0x20]!
	0x036C72A4 STP X20, X19, [X31 + 0x10]
	0x036C72A8 ADRP X19, 0xD19000
	0x036C72AC ADRP X20, 0xA78000
	0x036C72B0 LDRB W8, [X19 + 0xA27]
	0x036C72B4 LDR X20, [X20 + 0x830]
	0x036C72B8 TBNZ X8, 0x0, 0x36C72D0
	0x036C72BC ADRP X0, 0xA78000
	0x036C72C0 LDR X0, [X0 + 0x830]
	0x036C72C4 BL 0x1C16CF4
	0x036C72C8 MOVZ W8, 0x1
	0x036C72CC STRB W8, [X19 + 0xA27]
	0x036C72D0 LDR X0, [X20]
	0x036C72D4 BL 0x1C16F10
	0x036C72D8 MOV X1, X31
	0x036C72DC MOV X19, X0
	0x036C72E0 BL 0x33BDD8C
	0x036C72E4 LDR X8, [X20]
	0x036C72E8 LDR X8, [X8 + 0xB8]
	0x036C72EC STR X19, [X8]
	0x036C72F0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD1A000
	006 Move X20, 0xA79000
	007 Move W8, [X21+2586]
	008 Move X20, [X20+3144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA79000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2586], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Add X0, X19, 128
	027 Move X1, X31
	028 Move X2, [X8+16]
	029 Call 0x1C25138
	030 Move X8, [X20]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X8, [X8+184]
	034 Move X8, [X8+16]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Void Release()

Disassembly:
	0x036C72F4 LDR X30, [X31], #0x20
	0x036C72F8 RET
	0x036C72FC MOV X1, X31
	0x036C7300 B 0x33BDD8C
	0x036C7304 STR X30, [X31 - 0x20]!
	0x036C7308 STP X20, X19, [X31 + 0x10]
	0x036C730C ADRP X19, 0xD19000
	0x036C7310 LDRB W8, [X19 + 0xA28]
	0x036C7314 MOV X20, X1
	0x036C7318 TBNZ X8, 0x0, 0x36C7360
	0x036C731C ADRP X0, 0xA54000
	0x036C7320 LDR X0, [X0 + 0x718]
	0x036C7324 BL 0x1C16CF4
	0x036C7328 ADRP X0, 0xA35000
	0x036C732C LDR X0, [X0 + 0x788]
	0x036C7330 BL 0x1C16CF4
	0x036C7334 ADRP X0, 0xA37000
	0x036C7338 LDR X0, [X0 + 0x8D8]
	0x036C733C BL 0x1C16CF4
	0x036C7340 ADRP X0, 0xA37000
	0x036C7344 LDR X0, [X0 + 0x6F0]
	0x036C7348 BL 0x1C16CF4
	0x036C734C ADRP X0, 0xA37000
	0x036C7350 LDR X0, [X0 + 0x900]
	0x036C7354 BL 0x1C16CF4
	0x036C7358 MOVZ W8, 0x1
	0x036C735C STRB W8, [X19 + 0xA28]
	0x036C7360 CBZ X20, 0x36C7500

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD1A000
	006 Move X20, 0xA79000
	007 Move W8, [X21+2587]
	008 Move X20, [X20+3144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA79000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2587], W8
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Add W8, W8, 1
	021 NotImplemented "Instruction STRH not yet implemented."
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8+16]
	030 Call 0x1C17D44
	031 Move [X19+128], X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void OnCompleted(System.Net.Sockets.SocketAsyncEventArgs _)

Disassembly:
	0x036C7364 ADRP X10, 0xA54000
	0x036C7368 LDR X8, [X20]
	0x036C736C LDR X10, [X10 + 0x718]
	0x036C7370 LDRH W9, [X8 + 0x12E]
	0x036C7374 LDR X1, [X10]
	0x036C7378 CBZ X9, 0x36C739C
	0x036C737C LDR X10, [X8 + 0xB0]
	0x036C7380 ADD X10, X10, 0x8
	0x036C7384 LDUR X11, [X10 - 0x8]
	0x036C7388 CMP X11, X1
	0x036C738C B.EQ 0x36C73AC
	0x036C7390 SUBS X9, X9, 0x1
	0x036C7394 ADD X10, X10, 0x10
	0x036C7398 B.NE 0x36C7384
	0x036C739C MOVZ W2, 0x2
	0x036C73A0 MOV X0, X20
	0x036C73A4 BL 0x1C5C788
	0x036C73A8 B 0x36C73BC
	0x036C73AC LDR W9, [X10]
	0x036C73B0 ADD W9, W9, 0x2
	0x036C73B4 ADD X8, X8, W9, 0x4, SXTW
	0x036C73B8 ADD X0, X8, 0x138
	0x036C73BC LDP X8, X1, [X0]
	0x036C73C0 MOV X0, X20
	0x036C73C4 BLR X8
	0x036C73C8 MOV X19, X0
	0x036C73CC CBZ X0, 0x36C7484
	0x036C73D0 ADRP X9, 0xA37000
	0x036C73D4 LDR X9, [X9 + 0x900]
	0x036C73D8 LDR X8, [X19]
	0x036C73DC LDR X1, [X9]
	0x036C73E0 LDRB W10, [X8 + 0x130]
	0x036C73E4 LDRB W9, [X1 + 0x130]
	0x036C73E8 CMP W10, W9
	0x036C73EC B.CC 0x36C7478
	0x036C73F0 LDR X8, [X8 + 0xC8]
	0x036C73F4 ADD X8, X8, X9, 0x3, LSL
	0x036C73F8 LDUR X8, [X8 - 0x8]
	0x036C73FC CMP X8, X1
	0x036C7400 B.NE 0x36C7478
	0x036C7404 LDR X8, [X19 + 0x10]
	0x036C7408 CBZ X8, 0x36C7488
	0x036C740C LDR X0, [X8 + 0x20]
	0x036C7410 CBZ X0, 0x36C748C
	0x036C7414 ADRP X9, 0xA35000
	0x036C7418 LDR X9, [X9 + 0x788]
	0x036C741C LDR X8, [X0]
	0x036C7420 LDR X1, [X9]
	0x036C7424 LDRB W10, [X8 + 0x130]
	0x036C7428 LDRB W9, [X1 + 0x130]
	0x036C742C CMP W10, W9
	0x036C7430 B.CC 0x36C7480
	0x036C7434 LDR X8, [X8 + 0xC8]
	0x036C7438 ADD X8, X8, X9, 0x3, LSL
	0x036C743C LDUR X8, [X8 - 0x8]
	0x036C7440 CMP X8, X1
	0x036C7444 B.NE 0x36C7480
	0x036C7448 MOV X1, X20
	0x036C744C MOV X2, X31
	0x036C7450 BL 0x36AB670
	0x036C7454 ADRP X8, 0xA37000
	0x036C7458 LDR X8, [X8 + 0x8D8]
	0x036C745C LDR X2, [X8]
	0x036C7460 MOVZ W1, 0x1
	0x036C7464 MOV X0, X19
	0x036C7468 BL 0x267A100
	0x036C746C LDP X20, X19, [X31 + 0x10]
	0x036C7470 LDR X30, [X31], #0x20
	0x036C7474 RET
	0x036C7478 MOV X0, X19
	0x036C747C BL 0x1C171E0
	0x036C7480 BL 0x1C171E0
	0x036C7484 BL 0x1C16F20
	0x036C7488 BL 0x1C16F20
	0x036C748C BL 0x1C16F20
	0x036C7490 B 0x36C749C
	0x036C7494 B 0x36C749C
	0x036C7498 B 0x36C749C
	0x036C749C MOV X20, X0
	0x036C74A0 CMP W1, 0x1
	0x036C74A4 B.NE 0x36C752C
	0x036C74A8 MOV X0, X20
	0x036C74AC BL 0x3EB1AD0
	0x036C74B0 MOV X20, X0
	0x036C74B4 ADRP X0, 0xA2C000
	0x036C74B8 LDR X0, [X0 + 0x7D0]
	0x036C74BC BL 0x1C16D08
	0x036C74C0 LDR X8, [X20]
	0x036C74C4 LDR X1, [X8]
	0x036C74C8 BL 0x1C17270
	0x036C74CC TBZ X0, 0x0, 0x36C7504
	0x036C74D0 LDR X20, [X20]
	0x036C74D4 BL 0x3EB1AE0
	0x036C74D8 CBZ X19, 0x36C7500
	0x036C74DC ADRP X0, 0xA78000
	0x036C74E0 LDR X0, [X0 + 0xD08]
	0x036C74E4 BL 0x1C16D08
	0x036C74E8 MOV X2, X0
	0x036C74EC MOV X0, X19
	0x036C74F0 MOV X1, X20
	0x036C74F4 LDP X20, X19, [X31 + 0x10]
	0x036C74F8 LDR X30, [X31], #0x20
	0x036C74FC B 0x267A038
	0x036C7500 BL 0x1C16F20
	0x036C7504 MOVZ W0, 0x8
	0x036C7508 BL 0x3EB1AF0
	0x036C750C LDR X8, [X20]
	0x036C7510 STR X8, [X0]
	0x036C7514 ADRP X1, 0x7ED000
	0x036C7518 ADD X1, X1, 0xE58
	0x036C751C MOV X2, X31
	0x036C7520 BL 0x3EB1B00
	0x036C7524 MOV X20, X0
	0x036C7528 BL 0x3EB1AE0
	0x036C752C MOV X0, X20
	0x036C7530 BL 0x1D2C690
	0x036C7534 BL 0x1990590
	0x036C7538 STR X30, [X31 - 0x20]!
	0x036C753C STP X20, X19, [X31 + 0x10]
	0x036C7540 ADRP X19, 0xD19000
	0x036C7544 ADRP X20, 0xA78000
	0x036C7548 LDRB W8, [X19 + 0xA29]
	0x036C754C LDR X20, [X20 + 0xD10]
	0x036C7550 TBNZ X8, 0x0, 0x36C7568
	0x036C7554 ADRP X0, 0xA78000
	0x036C7558 LDR X0, [X0 + 0xD10]
	0x036C755C BL 0x1C16CF4
	0x036C7560 MOVZ W8, 0x1
	0x036C7564 STRB W8, [X19 + 0xA29]
	0x036C7568 LDR X0, [X20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xD1A000
	012 Move W8, [X20+2588]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xA79000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0xA5F000
	022 Move X0, [X0+2376]
	023 Call 0x1C17CF4
	024 Move X0, 0xA55000
	025 Move X0, [X0+1408]
	026 Call 0x1C17CF4
	027 Move X0, 0xA79000
	028 Move X0, [X0+3152]
	029 Call 0x1C17CF4
	030 Move X0, 0xA79000
	031 Move X0, [X0+3160]
	032 Call 0x1C17CF4
	033 Move X0, 0xA79000
	034 Move X0, [X0+3168]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2588], W8
	038 Move X21, X19
	039 Move X22, 0xA79000
	040 Add X21, X21, 128
	041 Move X20, [X21]
	042 Move X22, [X22+3144]
	043 Compare X20, 0
	044 JumpIfNotEqual {59}
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X8, [X0+184]
	052 Move X0, X21
	053 Move X2, X31
	054 Move X1, [X8+8]
	055 Call 0x1C25138
	056 Move X20, X0
	057 Compare X0, 0
	058 JumpIfEqual {153}
	059 Move X21, [X19+72]
	060 Move [X19+72], X31
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X22]
	067 Move X8, [X0+184]
	068 Move X22, [X19+136]
	069 Move X8, [X8+8]
	070 Move [X19+128], X8
	071 Compare X22, 0
	072 JumpIfEqual {139}
	073 Move X25, 0xA79000
	074 Move X25, [X25+3168]
	075 Move [X19+136], X31
	076 Move X0, [X25]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X25]
	082 Move X8, [X0+184]
	083 Move X27, 0xA79000
	084 Move X26, 0xA55000
	085 Move X23, [X8+8]
	086 Move X27, [X27+3152]
	087 Move X26, [X26+1408]
	088 Compare X23, 0
	089 JumpIfNotEqual {111}
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X25]
	095 Move X9, 0xA5F000
	096 Move X8, [X0+184]
	097 Move X9, [X9+2376]
	098 Move X24, [X8]
	099 Move X0, [X9]
	100 Call 0x1C17F10
	101 Move X8, 0xA79000
	102 Move X8, [X8+3160]
	103 Move X1, X24
	104 Move X3, X31
	105 Move X23, X0
	106 Move X2, [X8]
	107 Call ContextCallback..ctor, X0, X1, X2
	108 Move X8, [X25]
	109 Move X8, [X8+184]
	110 Move [X8+8], X23
	111 Move X3, [X27]
	112 Move X0, X19
	113 Move X1, X20
	114 Move X2, X21
	115 Call Tuple.Create, X0, X1, X2
	116 Move X8, [X26]
	117 Move X19, X0
	118 Move W9, [X8+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X8
	122 Call 0x1C17DFC
	123 Move X0, X22
	124 Move X1, X23
	125 Move X2, X19
	126 Move X20, [X31+64]
	127 Move X19, [X31+72]
	128 Move X22, [X31+48]
	129 Move X21, [X31+56]
	130 Move X24, [X31+32]
	131 Move X23, [X31+40]
	132 Move X26, [X31+16]
	133 Move X25, [X31+24]
	134 Move X3, X31
	135 Move X30, [X31+80]
	136 Move X27, [X31+88]
	137 Call ExecutionContext.Run, X0, X1, X2
	138 Return 
	139 Move X0, X19
	140 Move X1, X20
	141 Move X2, X21
	142 Move X20, [X31+64]
	143 Move X19, [X31+72]
	144 Move X22, [X31+48]
	145 Move X21, [X31+56]
	146 Move X24, [X31+32]
	147 Move X23, [X31+40]
	148 Move X26, [X31+16]
	149 Move X25, [X31+24]
	150 Move W3, W31
	151 Move X30, [X31+80]
	152 Move X27, [X31+88]
	153 Move X20, [X31+64]
	154 Move X19, [X31+72]
	155 Move X22, [X31+48]
	156 Move X21, [X31+56]
	157 Move X24, [X31+32]
	158 Move X23, [X31+40]
	159 Move X26, [X31+16]
	160 Move X25, [X31+24]
	161 Move X30, [X31+80]
	162 Move X27, [X31+88]
	163 Return 

Method: System.Threading.Tasks.ValueTask`1<System.Int32> ReceiveAsync(System.Net.Sockets.Socket socket)

Disassembly:
	0x036C7848 ADRP X0, 0xA54000
	0x036C784C LDR X0, [X0 + 0x718]
	0x036C7850 BL 0x1C16CF4
	0x036C7854 ADRP X0, 0xA57000
	0x036C7858 LDR X0, [X0 + 0x2E0]
	0x036C785C BL 0x1C16CF4
	0x036C7860 ADRP X0, 0xA5B000
	0x036C7864 LDR X0, [X0 + 0xEA0]
	0x036C7868 BL 0x1C16CF4
	0x036C786C ADRP X0, 0xA5F000
	0x036C7870 LDR X0, [X0 + 0xD80]
	0x036C7874 BL 0x1C16CF4
	0x036C7878 ADRP X0, 0xA5F000
	0x036C787C LDR X0, [X0 + 0xD60]
	0x036C7880 BL 0x1C16CF4
	0x036C7884 ADRP X0, 0xA35000
	0x036C7888 LDR X0, [X0 + 0x788]
	0x036C788C BL 0x1C16CF4
	0x036C7890 ADRP X0, 0xA78000
	0x036C7894 LDR X0, [X0 + 0xD18]
	0x036C7898 BL 0x1C16CF4
	0x036C789C ADRP X0, 0xA37000
	0x036C78A0 LDR X0, [X0 + 0xD20]
	0x036C78A4 BL 0x1C16CF4
	0x036C78A8 ADRP X0, 0xA78000
	0x036C78AC LDR X0, [X0 + 0xD28]
	0x036C78B0 BL 0x1C16CF4
	0x036C78B4 ADRP X0, 0xA78000
	0x036C78B8 LDR X0, [X0 + 0xD30]
	0x036C78BC BL 0x1C16CF4
	0x036C78C0 ADRP X0, 0xA78000
	0x036C78C4 LDR X0, [X0 + 0xD38]
	0x036C78C8 BL 0x1C16CF4
	0x036C78CC ADRP X0, 0xA78000
	0x036C78D0 LDR X0, [X0 + 0xD40]
	0x036C78D4 BL 0x1C16CF4
	0x036C78D8 MOVZ W8, 0x1
	0x036C78DC STRB W8, [X20 + 0xA2C]
	0x036C78E0 STR X31, [X31 + 0x48]
	0x036C78E4 STP X31, X31, [X31 + 0x30]
	0x036C78E8 STP X31, X31, [X31 + 0x20]
	0x036C78EC STP X31, X31, [X31 + 0x10]
	0x036C78F0 CBZ X19, 0x36C7AE8
	0x036C78F4 ADRP X10, 0xA54000
	0x036C78F8 LDR X8, [X19]
	0x036C78FC LDR X10, [X10 + 0x718]
	0x036C7900 LDRH W9, [X8 + 0x12E]
	0x036C7904 LDR X1, [X10]
	0x036C7908 CBZ X9, 0x36C792C
	0x036C790C LDR X10, [X8 + 0xB0]
	0x036C7910 ADD X10, X10, 0x8
	0x036C7914 LDUR X11, [X10 - 0x8]
	0x036C7918 CMP X11, X1
	0x036C791C B.EQ 0x36C793C
	0x036C7920 SUBS X9, X9, 0x1
	0x036C7924 ADD X10, X10, 0x10
	0x036C7928 B.NE 0x36C7914
	0x036C792C MOVZ W2, 0x2
	0x036C7930 MOV X0, X19
	0x036C7934 BL 0x1C5C788
	0x036C7938 B 0x36C794C
	0x036C793C LDR W9, [X10]
	0x036C7940 ADD W9, W9, 0x2
	0x036C7944 ADD X8, X8, W9, 0x4, SXTW
	0x036C7948 ADD X0, X8, 0x138
	0x036C794C LDP X8, X1, [X0]
	0x036C7950 MOV X0, X19
	0x036C7954 BLR X8
	0x036C7958 CBZ X0, 0x36C7990

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD1A000
	006 Move W8, [X21+2589]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xA60000
	014 Move X0, [X0+3304]
	015 Call 0x1C17CF4
	016 Move X0, 0xA2E000
	017 Move X0, [X0+1976]
	018 Call 0x1C17CF4
	019 Move X0, 0xA60000
	020 Move X0, [X0+3352]
	021 Call 0x1C17CF4
	022 Move X0, 0xA60000
	023 Move X0, [X0+3360]
	024 Call 0x1C17CF4
	025 Move X0, 0xA79000
	026 Move X0, [X0+3200]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2589], W8
	030 Compare X20, 0
	031 JumpIfEqual {81}
	032 Move X0, X20
	033 Move X1, X19
	034 Move X2, X31
	035 Call Socket.ReceiveAsync, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {43}
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, 0x10000
	042 NotImplemented "Instruction BFM not yet implemented."
	043 Move W21, [X19+56]
	044 Move W20, [X19+64]
	045 Move X0, X19
	046 Call AwaitableSocketAsyncEventArgs.Release, X0
	047 Compare W20, 0
	048 JumpIfEqual {73}
	049 Move X0, X19
	050 Move W1, W20
	051 Call AwaitableSocketAsyncEventArgs.CreateException, X0, X1
	052 Move X8, 0xA2E000
	053 Move X8, [X8+1976]
	054 Move X19, X0
	055 Move X8, [X8]
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X8, 0xA60000
	062 Move X8, [X8+3304]
	063 Move X0, X19
	064 Move X1, [X8]
	065 Call Task.FromException, X0
	066 Move X19, X0
	067 Compare X0, 0
	068 JumpIfNotEqual {72}
	069 Move W0, 38
	070 Move X1, X31
	071 Call ThrowHelper.ThrowArgumentNullException, X0
	072 Move X1, 0x10000
	073 Move X19, X31
	074 Or X1, X21, 0x1FFFFFFFFFFFF
	075 Move X0, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Return X0
	081 Call 0x1C17F20

Method: System.Threading.Tasks.ValueTask SendAsyncForNetworkStream(System.Net.Sockets.Socket socket)

Disassembly:
	0x036C7A48 STP W31, W8, [X31 + 0x38]
	0x036C7A4C LDR X1, [X9]
	0x036C7A50 ADD X0, X31, 0x30
	0x036C7A54 BL 0x25D7918
	0x036C7A58 LDR X8, [X31 + 0x48]
	0x036C7A5C STP X0, X1, [X31 + 0x20]
	0x036C7A60 CBZ X8, 0x36C7B00
	0x036C7A64 ADRP X9, 0xA57000
	0x036C7A68 LDR X9, [X9 + 0x2E0]
	0x036C7A6C LDUR V0, [X8 + 0x18]
	0x036C7A70 LDR X1, [X9]
	0x036C7A74 STR V0, [X31 + 0x1]
	0x036C7A78 ADD X0, X31, 0x10
	0x036C7A7C BL 0x2984784
	0x036C7A80 ADRP X8, 0xA5F000
	0x036C7A84 LDR X8, [X8 + 0xD60]
	0x036C7A88 MOV X2, X0
	0x036C7A8C MOV X4, X1
	0x036C7A90 LDR X3, [X8]
	0x036C7A94 ADD X0, X31, 0x20
	0x036C7A98 MOV X1, X2
	0x036C7A9C MOV X2, X4
	0x036C7AA0 BL 0x25BE5D8
	0x036C7AA4 LDR X8, [X31 + 0x48]
	0x036C7AA8 CBZ X8, 0x36C7B04
	0x036C7AAC LDR X0, [X8 + 0x10]
	0x036C7AB0 CBZ X0, 0x36C7B08
	0x036C7AB4 ADRP X8, 0xA78000
	0x036C7AB8 LDR X8, [X8 + 0xD18]
	0x036C7ABC LDR X2, [X8]
	0x036C7AC0 MOV W1, W19
	0x036C7AC4 BL 0x267AB34
	0x036C7AC8 ADD X0, X31, 0x0
	0x036C7ACC BL 0x1BC727C
	0x036C7AD0 LDP X20, X19, [X31 + 0x50]
	0x036C7AD4 LDR X30, [X31 + 0x40]
	0x036C7AD8 ADD X31, X31, 0x60
	0x036C7ADC RET
	0x036C7AE0 BL 0x1C171E0
	0x036C7AE4 BL 0x1C171E0
	0x036C7AE8 BL 0x1C16F20
	0x036C7AEC BL 0x1C16F20
	0x036C7AF0 BL 0x1C16F20
	0x036C7AF4 BL 0x1C16F20
	0x036C7AF8 BL 0x1C16F20
	0x036C7AFC BL 0x1C16F20
	0x036C7B00 BL 0x1C16F20
	0x036C7B04 BL 0x1C16F20
	0x036C7B08 BL 0x1C16F20
	0x036C7B0C B 0x36C7B3C
	0x036C7B10 B 0x36C7B3C
	0x036C7B14 B 0x36C7B3C
	0x036C7B18 B 0x36C7B3C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD1A000
	006 Move W8, [X21+2590]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA2E000
	014 Move X0, [X0+1976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2590], W8
	018 Compare X20, 0
	019 JumpIfEqual {65}
	020 Move X0, X20
	021 Move X1, X19
	022 Move X2, X31
	023 Call Socket.SendAsync, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {30}
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Or X1, X8, 0x1FFFF
	030 Move W20, [X19+64]
	031 Move X0, X19
	032 Call AwaitableSocketAsyncEventArgs.Release, X0
	033 Compare W20, 0
	034 JumpIfEqual {57}
	035 Move X0, X19
	036 Move W1, W20
	037 Call AwaitableSocketAsyncEventArgs.CreateException, X0, X1
	038 Move X8, 0xA2E000
	039 Move X8, [X8+1976]
	040 Move X19, X0
	041 Move X8, [X8]
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Move X1, X31
	049 Call Task.FromException, X0
	050 Move X19, X0
	051 Compare X0, 0
	052 JumpIfNotEqual {56}
	053 Move W0, 38
	054 Move X1, X31
	055 Call ThrowHelper.ThrowArgumentNullException, X0
	056 Move W1, 0x10000
	057 Move X19, X31
	058 Move X1, X31
	059 Move X0, X19
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Threading.Tasks.Sources.ValueTaskSourceStatus GetStatus(System.Int16 token)

Disassembly:
	0x036C7B1C B 0x36C7B3C
	0x036C7B20 B 0x36C7B3C
	0x036C7B24 B 0x36C7B3C
	0x036C7B28 B 0x36C7B3C
	0x036C7B2C B 0x36C7B3C
	0x036C7B30 B 0x36C7B3C
	0x036C7B34 B 0x36C7B3C
	0x036C7B38 B 0x36C7B3C
	0x036C7B3C MOV X19, X0
	0x036C7B40 CMP W1, 0x1
	0x036C7B44 B.NE 0x36C7C04
	0x036C7B48 MOV X0, X19
	0x036C7B4C BL 0x3EB1AD0
	0x036C7B50 MOV X19, X0
	0x036C7B54 ADRP X0, 0xA2C000
	0x036C7B58 LDR X0, [X0 + 0x7D0]
	0x036C7B5C BL 0x1C16D08
	0x036C7B60 LDR X8, [X19]
	0x036C7B64 LDR X1, [X8]
	0x036C7B68 BL 0x1C17270
	0x036C7B6C TBZ X0, 0x0, 0x36C7BB4
	0x036C7B70 LDR X19, [X19]
	0x036C7B74 BL 0x3EB1AE0
	0x036C7B78 LDR X20, [X31 + 0x48]
	0x036C7B7C CBZ X20, 0x36C7BD4
	0x036C7B80 ADRP X0, 0xA78000
	0x036C7B84 LDR X0, [X0 + 0xD28]
	0x036C7B88 BL 0x1C16D08
	0x036C7B8C LDR X20, [X20 + 0x10]
	0x036C7B90 CBZ X20, 0x36C7BD8
	0x036C7B94 ADRP X0, 0xA78000
	0x036C7B98 LDR X0, [X0 + 0xD20]
	0x036C7B9C BL 0x1C16D08
	0x036C7BA0 MOV X2, X0
	0x036C7BA4 MOV X0, X20
	0x036C7BA8 MOV X1, X19
	0x036C7BAC BL 0x267AA6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD1A000
	006 Move W8, [X21+2591]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA79000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2591], W8
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, 0xA79000
	021 Move X21, [X21+3144]
	022 Move X20, [X19+128]
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X8, [X8+8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, W31
	033 Move W8, [X19+64]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, 1
	036 NotImplemented "Instruction CINC not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call AwaitableSocketAsyncEventArgs.ThrowIncorrectTokenException, X0

Method: System.Void OnCompleted(System.Action`1<System.Object> continuation, System.Object state, System.Int16 token, System.Threading.Tasks.Sources.ValueTaskSourceOnCompletedFlags flags)

Disassembly:
	0x036C7BFC BL 0x3EB1AE0
	0x036C7C00 MOV W1, W20
	0x036C7C04 MOVZ W8, 0x1
	0x036C7C08 CMP W1, W8
	0x036C7C0C B.NE 0x36C7C2C
	0x036C7C10 MOV X0, X19
	0x036C7C14 BL 0x3EB1AD0
	0x036C7C18 LDR X8, [X0]
	0x036C7C1C STR X8, [X31]
	0x036C7C20 BL 0x3EB1AE0
	0x036C7C24 B 0x36C7AC8
	0x036C7C28 MOV X19, X0
	0x036C7C2C ADD X0, X31, 0x0
	0x036C7C30 BL 0x1BC727C
	0x036C7C34 MOV X0, X19
	0x036C7C38 BL 0x1D2C690
	0x036C7C3C BL 0x1990590
	0x036C7C40 MOV X19, X0
	0x036C7C44 B 0x36C7B40
	0x036C7C48 STR X30, [X31 - 0x20]!
	0x036C7C4C STP X20, X19, [X31 + 0x10]
	0x036C7C50 ADRP X19, 0xD19000
	0x036C7C54 ADRP X20, 0xA78000
	0x036C7C58 LDRB W8, [X19 + 0xA2D]
	0x036C7C5C LDR X20, [X20 + 0xD10]
	0x036C7C60 TBNZ X8, 0x0, 0x36C7C78
	0x036C7C64 ADRP X0, 0xA78000
	0x036C7C68 LDR X0, [X0 + 0xD10]
	0x036C7C6C BL 0x1C16CF4
	0x036C7C70 MOVZ W8, 0x1
	0x036C7C74 STRB W8, [X19 + 0xA2D]
	0x036C7C78 LDR X0, [X20]
	0x036C7C7C BL 0x1C16F10
	0x036C7C80 MOV X1, X31
	0x036C7C84 MOV X19, X0
	0x036C7C88 BL 0x33BDD8C
	0x036C7C8C MOV X0, X19
	0x036C7C90 LDP X20, X19, [X31 + 0x10]
	0x036C7C94 LDR X30, [X31], #0x20
	0x036C7C98 RET
	0x036C7C9C STR X30, [X31 - 0x20]!
	0x036C7CA0 STP X20, X19, [X31 + 0x10]
	0x036C7CA4 ADRP X19, 0xD19000
	0x036C7CA8 ADRP X20, 0xA78000
	0x036C7CAC LDRB W8, [X19 + 0xA2E]
	0x036C7CB0 LDR X20, [X20 + 0xC48]
	0x036C7CB4 TBNZ X8, 0x0, 0x36C7CCC
	0x036C7CB8 ADRP X0, 0xA78000
	0x036C7CBC LDR X0, [X0 + 0xC48]
	0x036C7CC0 BL 0x1C16CF4
	0x036C7CC4 MOVZ W8, 0x1
	0x036C7CC8 STRB W8, [X19 + 0xA2E]
	0x036C7CCC LDR X0, [X20]
	0x036C7CD0 BL 0x1C16F10
	0x036C7CD4 MOV X19, X0
	0x036C7CD8 BL 0x36C6170
	0x036C7CDC MOV X0, X19
	0x036C7CE0 LDP X20, X19, [X31 + 0x10]
	0x036C7CE4 LDR X30, [X31], #0x20
	0x036C7CE8 RET
	0x036C7CEC STR X30, [X31 - 0x20]!
	0x036C7CF0 STP X20, X19, [X31 + 0x10]
	0x036C7CF4 ADRP X19, 0xD19000
	0x036C7CF8 LDRB W8, [X19 + 0xA2F]
	0x036C7CFC MOV X20, X1
	0x036C7D00 TBNZ X8, 0x0, 0x36C7D48
	0x036C7D04 ADRP X0, 0xA54000
	0x036C7D08 LDR X0, [X0 + 0x718]
	0x036C7D0C BL 0x1C16CF4
	0x036C7D10 ADRP X0, 0xA35000
	0x036C7D14 LDR X0, [X0 + 0x788]
	0x036C7D18 BL 0x1C16CF4
	0x036C7D1C ADRP X0, 0xA78000
	0x036C7D20 LDR X0, [X0 + 0xD18]
	0x036C7D24 BL 0x1C16CF4
	0x036C7D28 ADRP X0, 0xA37000
	0x036C7D2C LDR X0, [X0 + 0xD20]
	0x036C7D30 BL 0x1C16CF4
	0x036C7D34 ADRP X0, 0xA38000
	0x036C7D38 LDR X0, [X0 + 0x78]
	0x036C7D3C BL 0x1C16CF4
	0x036C7D40 MOVZ W8, 0x1
	0x036C7D44 STRB W8, [X19 + 0xA2F]
	0x036C7D48 CBZ X20, 0x36C7EEC
	0x036C7D4C ADRP X10, 0xA54000
	0x036C7D50 LDR X8, [X20]
	0x036C7D54 LDR X10, [X10 + 0x718]
	0x036C7D58 LDRH W9, [X8 + 0x12E]
	0x036C7D5C LDR X1, [X10]
	0x036C7D60 CBZ X9, 0x36C7D84
	0x036C7D64 LDR X10, [X8 + 0xB0]
	0x036C7D68 ADD X10, X10, 0x8
	0x036C7D6C LDUR X11, [X10 - 0x8]
	0x036C7D70 CMP X11, X1
	0x036C7D74 B.EQ 0x36C7D94
	0x036C7D78 SUBS X9, X9, 0x1
	0x036C7D7C ADD X10, X10, 0x10
	0x036C7D80 B.NE 0x36C7D6C
	0x036C7D84 MOVZ W2, 0x2
	0x036C7D88 MOV X0, X20
	0x036C7D8C BL 0x1C5C788
	0x036C7D90 B 0x36C7DA4
	0x036C7D94 LDR W9, [X10]
	0x036C7D98 ADD W9, W9, 0x2
	0x036C7D9C ADD X8, X8, W9, 0x4, SXTW
	0x036C7DA0 ADD X0, X8, 0x138
	0x036C7DA4 LDP X8, X1, [X0]
	0x036C7DA8 MOV X0, X20
	0x036C7DAC BLR X8
	0x036C7DB0 MOV X19, X0
	0x036C7DB4 CBZ X0, 0x36C7E6C
	0x036C7DB8 ADRP X9, 0xA38000
	0x036C7DBC LDR X9, [X9 + 0x78]
	0x036C7DC0 LDR X8, [X19]
	0x036C7DC4 LDR X1, [X9]
	0x036C7DC8 LDRB W10, [X8 + 0x130]
	0x036C7DCC LDRB W9, [X1 + 0x130]
	0x036C7DD0 CMP W10, W9
	0x036C7DD4 B.CC 0x36C7E60
	0x036C7DD8 LDR X8, [X8 + 0xC8]
	0x036C7DDC ADD X8, X8, X9, 0x3, LSL
	0x036C7DE0 LDUR X8, [X8 - 0x8]
	0x036C7DE4 CMP X8, X1
	0x036C7DE8 B.NE 0x36C7E60
	0x036C7DEC LDR X8, [X19 + 0x10]
	0x036C7DF0 CBZ X8, 0x36C7E70
	0x036C7DF4 LDR X0, [X8 + 0x20]
	0x036C7DF8 CBZ X0, 0x36C7E74
	0x036C7DFC ADRP X9, 0xA35000
	0x036C7E00 LDR X9, [X9 + 0x788]
	0x036C7E04 LDR X8, [X0]
	0x036C7E08 LDR X1, [X9]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xD1A000
	010 Move W8, [X24+2592]
	011 Move W22, W4
	012 Move W23, W3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xA79000
	021 Move X0, [X0+3144]
	022 Call 0x1C17CF4
	023 Move X0, 0xA55000
	024 Move X0, [X0+1408]
	025 Call 0x1C17CF4
	026 Move X0, 0xA5F000
	027 Move X0, [X0+2392]
	028 Call 0x1C17CF4
	029 Move X0, 0xA35000
	030 Move X0, [X0+2024]
	031 Call 0x1C17CF4
	032 Move X0, 0xA2D000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+2592], W8
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move TEMP, X22
	040 And TEMP, TEMP, 2
	041 Compare TEMP, 2
	042 JumpIfNotEqual {53}
	043 Move X8, 0xA55000
	044 Move X8, [X8+1408]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X31
	051 Call ExecutionContext.Capture
	052 Move [X21+136], X0
	053 Move X25, 0xA79000
	054 Move X25, [X25+3144]
	055 Move TEMP, X22
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {118}
	059 Move X0, X31
	060 Call SynchronizationContext.get_Current
	061 Compare X0, 0
	062 JumpIfEqual {89}
	063 Move X1, X31
	064 Move X22, X0
	065 Call "il2cpp_vm_object_is_inst", X0
	066 Move X8, 0xA2D000
	067 Move X8, [X8+1728]
	068 Move X9, 0xA5F000
	069 Move X23, X0
	070 Move X8, [X8]
	071 Move X9, [X9+2392]
	072 Move W10, [X8+224]
	073 Move X24, [X9]
	074 Compare W10, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X0, X24
	079 Move X1, X31
	080 Call Type.GetTypeFromHandle, X0
	081 Move X1, X0
	082 Move X0, X23
	083 Move X2, X31
	084 Call Type.op_Inequality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {117}
	089 Move X23, 0xA35000
	090 Move X23, [X23+2024]
	091 Move X0, [X23]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X31
	097 Call TaskScheduler.get_Current
	098 Move X24, 0xD13000
	099 Move W8, [X24+2189]
	100 Move X22, X0
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0xA35000
	104 Move X0, [X0+2024]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X24+2189], W8
	108 Move X0, [X23]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X23]
	114 Move X8, [X0+184]
	115 Move X8, [X8+8]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X21+144], X22
	118 Add X0, X21, 128
	119 Move X1, X20
	120 Move X2, X31
	121 Move [X21+72], X19
	122 Call 0x1C25138
	123 Move X8, [X25]
	124 Move X22, X0
	125 Move W9, [X8+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {131}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X8, [X25]
	131 Move X8, [X8+184]
	132 Move X8, [X8+8]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Compare X22, 0
	135 JumpIfNotEqual {162}
	136 Move X20, [X31+48]
	137 Move X19, [X31+56]
	138 Move X22, [X31+32]
	139 Move X21, [X31+40]
	140 Move X24, [X31+16]
	141 Move X23, [X31+24]
	142 Move X30, [X31+64]
	143 Move X25, [X31+72]
	144 Return 
	145 Move [X21+136], X31
	146 Move [X21+72], X31
	147 Move X0, X21
	148 Move X1, X20
	149 Move X2, X19
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move W3, 1
	157 Move X30, [X31+64]
	158 Move X25, [X31+72]
	159 Call AwaitableSocketAsyncEventArgs.InvokeContinuation, X0, X1, X2, X3
	160 Return 
	161 Call AwaitableSocketAsyncEventArgs.ThrowIncorrectTokenException, X0
	162 Call AwaitableSocketAsyncEventArgs.ThrowMultipleContinuationsException, X0

Method: System.Void InvokeContinuation(System.Action`1<System.Object> continuation, System.Object state, System.Boolean forceAsync)

Disassembly:
	0x036C756C BL 0x1C16F10
	0x036C7570 MOV X1, X31
	0x036C7574 MOV X19, X0
	0x036C7578 BL 0x33BDD8C
	0x036C757C MOV X0, X19
	0x036C7580 LDP X20, X19, [X31 + 0x10]
	0x036C7584 LDR X30, [X31], #0x20
	0x036C7588 RET
	0x036C758C STR X30, [X31 - 0x20]!
	0x036C7590 STP X20, X19, [X31 + 0x10]
	0x036C7594 ADRP X19, 0xD19000
	0x036C7598 ADRP X20, 0xA78000
	0x036C759C LDRB W8, [X19 + 0xA2A]
	0x036C75A0 LDR X20, [X20 + 0xC48]
	0x036C75A4 TBNZ X8, 0x0, 0x36C75BC
	0x036C75A8 ADRP X0, 0xA78000
	0x036C75AC LDR X0, [X0 + 0xC48]
	0x036C75B0 BL 0x1C16CF4
	0x036C75B4 MOVZ W8, 0x1
	0x036C75B8 STRB W8, [X19 + 0xA2A]
	0x036C75BC LDR X0, [X20]
	0x036C75C0 BL 0x1C16F10
	0x036C75C4 MOV X19, X0
	0x036C75C8 BL 0x36C6170
	0x036C75CC MOV X0, X19
	0x036C75D0 LDP X20, X19, [X31 + 0x10]
	0x036C75D4 LDR X30, [X31], #0x20
	0x036C75D8 RET
	0x036C75DC STR X30, [X31 - 0x20]!
	0x036C75E0 STP X20, X19, [X31 + 0x10]
	0x036C75E4 ADRP X19, 0xD19000
	0x036C75E8 LDRB W8, [X19 + 0xA2B]
	0x036C75EC MOV X20, X1
	0x036C75F0 TBNZ X8, 0x0, 0x36C7638
	0x036C75F4 ADRP X0, 0xA54000
	0x036C75F8 LDR X0, [X0 + 0x718]
	0x036C75FC BL 0x1C16CF4
	0x036C7600 ADRP X0, 0xA35000
	0x036C7604 LDR X0, [X0 + 0x788]
	0x036C7608 BL 0x1C16CF4
	0x036C760C ADRP X0, 0xA78000
	0x036C7610 LDR X0, [X0 + 0xD18]
	0x036C7614 BL 0x1C16CF4
	0x036C7618 ADRP X0, 0xA37000
	0x036C761C LDR X0, [X0 + 0xD20]
	0x036C7620 BL 0x1C16CF4
	0x036C7624 ADRP X0, 0xA38000
	0x036C7628 LDR X0, [X0 + 0x78]
	0x036C762C BL 0x1C16CF4
	0x036C7630 MOVZ W8, 0x1
	0x036C7634 STRB W8, [X19 + 0xA2B]
	0x036C7638 CBZ X20, 0x36C77DC
	0x036C763C ADRP X10, 0xA54000
	0x036C7640 LDR X8, [X20]
	0x036C7644 LDR X10, [X10 + 0x718]
	0x036C7648 LDRH W9, [X8 + 0x12E]
	0x036C764C LDR X1, [X10]
	0x036C7650 CBZ X9, 0x36C7674
	0x036C7654 LDR X10, [X8 + 0xB0]
	0x036C7658 ADD X10, X10, 0x8
	0x036C765C LDUR X11, [X10 - 0x8]
	0x036C7660 CMP X11, X1
	0x036C7664 B.EQ 0x36C7684
	0x036C7668 SUBS X9, X9, 0x1
	0x036C766C ADD X10, X10, 0x10
	0x036C7670 B.NE 0x36C765C
	0x036C7674 MOVZ W2, 0x2
	0x036C7678 MOV X0, X20
	0x036C767C BL 0x1C5C788
	0x036C7680 B 0x36C7694
	0x036C7684 LDR W9, [X10]
	0x036C7688 ADD W9, W9, 0x2
	0x036C768C ADD X8, X8, W9, 0x4, SXTW
	0x036C7690 ADD X0, X8, 0x138
	0x036C7694 LDP X8, X1, [X0]
	0x036C7698 MOV X0, X20
	0x036C769C BLR X8
	0x036C76A0 MOV X19, X0
	0x036C76A4 CBZ X0, 0x36C775C
	0x036C76A8 ADRP X9, 0xA38000
	0x036C76AC LDR X9, [X9 + 0x78]
	0x036C76B0 LDR X8, [X19]
	0x036C76B4 LDR X1, [X9]
	0x036C76B8 LDRB W10, [X8 + 0x130]
	0x036C76BC LDRB W9, [X1 + 0x130]
	0x036C76C0 CMP W10, W9
	0x036C76C4 B.CC 0x36C7750
	0x036C76C8 LDR X8, [X8 + 0xC8]
	0x036C76CC ADD X8, X8, X9, 0x3, LSL
	0x036C76D0 LDUR X8, [X8 - 0x8]
	0x036C76D4 CMP X8, X1
	0x036C76D8 B.NE 0x36C7750
	0x036C76DC LDR X8, [X19 + 0x10]
	0x036C76E0 CBZ X8, 0x36C7760
	0x036C76E4 LDR X0, [X8 + 0x20]
	0x036C76E8 CBZ X0, 0x36C7764
	0x036C76EC ADRP X9, 0xA35000
	0x036C76F0 LDR X9, [X9 + 0x788]
	0x036C76F4 LDR X8, [X0]
	0x036C76F8 LDR X1, [X9]
	0x036C76FC LDRB W10, [X8 + 0x130]
	0x036C7700 LDRB W9, [X1 + 0x130]
	0x036C7704 CMP W10, W9
	0x036C7708 B.CC 0x36C7758
	0x036C770C LDR X8, [X8 + 0xC8]
	0x036C7710 ADD X8, X8, X9, 0x3, LSL
	0x036C7714 LDUR X8, [X8 - 0x8]
	0x036C7718 CMP X8, X1
	0x036C771C B.NE 0x36C7758
	0x036C7720 MOV X1, X20
	0x036C7724 MOV X2, X31
	0x036C7728 BL 0x36BC2E4
	0x036C772C MOV W1, W0
	0x036C7730 ADRP X8, 0xA78000
	0x036C7734 LDR X8, [X8 + 0xD18]
	0x036C7738 LDR X2, [X8]
	0x036C773C MOV X0, X19
	0x036C7740 BL 0x267AB34
	0x036C7744 LDP X20, X19, [X31 + 0x10]
	0x036C7748 LDR X30, [X31], #0x20
	0x036C774C RET
	0x036C7750 MOV X0, X19
	0x036C7754 BL 0x1C171E0
	0x036C7758 BL 0x1C171E0
	0x036C775C BL 0x1C16F20
	0x036C7760 BL 0x1C16F20
	0x036C7764 BL 0x1C16F20
	0x036C7768 B 0x36C7778
	0x036C776C B 0x36C7778
	0x036C7770 B 0x36C7778
	0x036C7774 B 0x36C7778
	0x036C7778 MOV X20, X0
	0x036C777C CMP W1, 0x1
	0x036C7780 B.NE 0x36C7808
	0x036C7784 MOV X0, X20
	0x036C7788 BL 0x3EB1AD0
	0x036C778C MOV X20, X0
	0x036C7790 ADRP X0, 0xA2C000
	0x036C7794 LDR X0, [X0 + 0x7D0]
	0x036C7798 BL 0x1C16D08
	0x036C779C LDR X8, [X20]
	0x036C77A0 LDR X1, [X8]
	0x036C77A4 BL 0x1C17270
	0x036C77A8 TBZ X0, 0x0, 0x36C77E0
	0x036C77AC LDR X20, [X20]
	0x036C77B0 BL 0x3EB1AE0
	0x036C77B4 CBZ X19, 0x36C77DC
	0x036C77B8 ADRP X0, 0xA78000
	0x036C77BC LDR X0, [X0 + 0xD20]
	0x036C77C0 BL 0x1C16D08
	0x036C77C4 MOV X2, X0
	0x036C77C8 MOV X0, X19
	0x036C77CC MOV X1, X20
	0x036C77D0 LDP X20, X19, [X31 + 0x10]
	0x036C77D4 LDR X30, [X31], #0x20
	0x036C77D8 B 0x267AA6C
	0x036C77DC BL 0x1C16F20
	0x036C77E0 MOVZ W0, 0x8
	0x036C77E4 BL 0x3EB1AF0
	0x036C77E8 LDR X8, [X20]
	0x036C77EC STR X8, [X0]
	0x036C77F0 ADRP X1, 0x7ED000
	0x036C77F4 ADD X1, X1, 0xE58
	0x036C77F8 MOV X2, X31
	0x036C77FC BL 0x3EB1B00
	0x036C7800 MOV X20, X0
	0x036C7804 BL 0x3EB1AE0
	0x036C7808 MOV X0, X20
	0x036C780C BL 0x1D2C690
	0x036C7810 BL 0x1990590
	0x036C7814 SUB X31, X31, 0x60
	0x036C7818 STR X30, [X31 + 0x40]
	0x036C781C STP X20, X19, [X31 + 0x50]
	0x036C7820 ADRP X20, 0xD19000
	0x036C7824 LDRB W8, [X20 + 0xA2C]
	0x036C7828 MOV X19, X1
	0x036C782C TBNZ X8, 0x0, 0x36C78E0
	0x036C7830 ADRP X0, 0xA57000
	0x036C7834 LDR X0, [X0 + 0xD50]
	0x036C7838 BL 0x1C16CF4
	0x036C783C ADRP X0, 0xA57000
	0x036C7840 LDR X0, [X0 + 0xD68]
	0x036C7844 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD1A000
	009 Move W8, [X21+2593]
	010 Move W22, W3
	011 Move X19, X2
	012 Move X20, X1
	013 Move X23, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0xA35000
	019 Move X0, [X0+2008]
	020 Call 0x1C17CF4
	021 Move X0, 0xA39000
	022 Move X0, [X0+1184]
	023 Call 0x1C17CF4
	024 Move X0, 0xA67000
	025 Move X0, [X0+888]
	026 Call 0x1C17CF4
	027 Move X0, 0xA35000
	028 Move X0, [X0+2024]
	029 Call 0x1C17CF4
	030 Move X0, 0xA2E000
	031 Move X0, [X0+1976]
	032 Call 0x1C17CF4
	033 Move X0, 0xA79000
	034 Move X0, [X0+3176]
	035 Call 0x1C17CF4
	036 Move X0, 0xA79000
	037 Move X0, [X0+3184]
	038 Call 0x1C17CF4
	039 Move X0, 0xA79000
	040 Move X0, [X0+3192]
	041 Call 0x1C17CF4
	042 Move X0, 0xA79000
	043 Move X0, [X0+3168]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2593], W8
	047 Move X21, [X23+144]
	048 Move [X23+144], X31
	049 Compare X21, 0
	050 JumpIfEqual {125}
	051 Move X8, 0xA67000
	052 Move X8, [X8+888]
	053 Move X9, [X21]
	054 Move X8, [X8]
	055 Move W11, [X9+304]
	056 Move W10, [X8+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, [X9+200]
	059 Add X9, X9, X10
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X22, 0xA2E000
	063 Move X22, [X22+1976]
	064 Move X0, [X22]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X23, 0xD12000
	070 Move W8, [X23+3867]
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0xA2E000
	074 Move X0, [X0+1976]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X23+3867], W8
	078 Move X0, [X22]
	079 Move X23, 0xA35000
	080 Move W8, [X0+224]
	081 Move X23, [X23+2008]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X22]
	086 Move X8, [X23]
	087 Move X9, [X0+184]
	088 Move W10, [X8+224]
	089 Move X22, [X9+40]
	090 Compare W10, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X31
	095 Call CancellationToken.get_None
	096 Compare X22, 0
	097 JumpIfEqual {213}
	098 Move X9, 0xA35000
	099 Move X9, [X9+2024]
	100 Move X8, [X21]
	101 Move X1, [X9]
	102 Move W10, [X8+304]
	103 Move W9, [X1+304]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, [X8+200]
	106 Add X8, X8, X9
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X3, X0
	110 Move X0, X22
	111 Move X1, X20
	112 Move X2, X19
	113 Move X5, X21
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 Move W4, 8
	121 Move X6, X31
	122 Move X30, [X31+64]
	123 Call TaskFactory.StartNew, X0, X1, X2, X3, X4, X5
	124 Return 
	125 Move TEMP, X22
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {144}
	129 Move X8, 0xA79000
	130 Move X8, [X8+3176]
	131 Move X0, X20
	132 Move X1, X19
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X3, [X8]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move W2, 1
	141 Move X30, [X31+64]
	142 Call 0x229DB40, X0, X1, X2
	143 Return 
	144 Compare X20, 0
	145 JumpIfEqual {213}
	146 Move X3, [X20+24]
	147 Move X0, [X20+64]
	148 Move X2, [X20+40]
	149 Move X1, X19
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 CallNoReturn X3
	158 Move X24, 0xA79000
	159 Move X24, [X24+3168]
	160 Move X0, [X24]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X24]
	166 Move X8, [X0+184]
	167 Move X22, [X8+16]
	168 Compare X22, 0
	169 JumpIfNotEqual {191}
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {175}
	173 Call 0x1C17DFC
	174 Move X0, [X24]
	175 Move X9, 0xA39000
	176 Move X8, [X0+184]
	177 Move X9, [X9+1184]
	178 Move X23, [X8]
	179 Move X0, [X9]
	180 Call 0x1C17F10
	181 Move X8, 0xA79000
	182 Move X8, [X8+3192]
	183 Move X1, X23
	184 Move X3, X31
	185 Move X22, X0
	186 Move X2, [X8]
	187 Call SendOrPostCallback..ctor, X0, X1, X2
	188 Move X8, [X24]
	189 Move X8, [X8+184]
	190 Move [X8+16], X22
	191 Move X8, 0xA79000
	192 Move X8, [X8+3184]
	193 Move X0, X20
	194 Move X1, X19
	195 Move X2, [X8]
	196 Call 0x229F5F8, X0, X1
	197 Move X8, [X21]
	198 Move X2, X0
	199 Move X0, X21
	200 Move X1, X22
	201 Move X4, [X8+392]
	202 Move X3, [X8+400]
	203 Move X20, [X31+48]
	204 Move X19, [X31+56]
	205 Move X22, [X31+32]
	206 Move X21, [X31+40]
	207 Move X24, [X31+16]
	208 Move X23, [X31+24]
	209 Move X30, [X31+64]
	210 CallNoReturn X4
	211 Move X0, X21
	212 Call 0x1C181E0
	213 Call 0x1C17F20

Method: System.Int32 GetResult(System.Int16 token)

Disassembly:
	0x036C7E58 LDR X30, [X31], #0x20
	0x036C7E5C RET
	0x036C7E60 MOV X0, X19
	0x036C7E64 BL 0x1C171E0
	0x036C7E68 BL 0x1C171E0
	0x036C7E6C BL 0x1C16F20
	0x036C7E70 BL 0x1C16F20
	0x036C7E74 BL 0x1C16F20
	0x036C7E78 B 0x36C7E88
	0x036C7E7C B 0x36C7E88
	0x036C7E80 B 0x36C7E88
	0x036C7E84 B 0x36C7E88
	0x036C7E88 MOV X20, X0
	0x036C7E8C CMP W1, 0x1
	0x036C7E90 B.NE 0x36C7F18
	0x036C7E94 MOV X0, X20
	0x036C7E98 BL 0x3EB1AD0
	0x036C7E9C MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W20, [X0+64]
	008 Move W21, [X0+56]
	009 Move X19, X0
	010 Call AwaitableSocketAsyncEventArgs.Release, X0
	011 Compare W20, 0
	012 JumpIfNotEqual {20}
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move W0, W21
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return X0
	019 Call AwaitableSocketAsyncEventArgs.ThrowIncorrectTokenException, X0
	020 Move X0, X19
	021 Move W1, W20
	022 Call AwaitableSocketAsyncEventArgs.ThrowException, X0, X1

Method: System.Void System.Threading.Tasks.Sources.IValueTaskSource.GetResult(System.Int16 token)

Disassembly:
	0x036C7EC4 CBZ X19, 0x36C7EEC
	0x036C7EC8 ADRP X0, 0xA78000
	0x036C7ECC LDR X0, [X0 + 0xD20]
	0x036C7ED0 BL 0x1C16D08
	0x036C7ED4 MOV X2, X0
	0x036C7ED8 MOV X0, X19
	0x036C7EDC MOV X1, X20
	0x036C7EE0 LDP X20, X19, [X31 + 0x10]
	0x036C7EE4 LDR X30, [X31], #0x20
	0x036C7EE8 B 0x267AA6C
	0x036C7EEC BL 0x1C16F20
	0x036C7EF0 MOVZ W0, 0x8
	0x036C7EF4 BL 0x3EB1AF0
	0x036C7EF8 LDR X8, [X20]
	0x036C7EFC STR X8, [X0]
	0x036C7F00 ADRP X1, 0x7ED000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction LDRH not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W20, [X0+64]
	007 Move X19, X0
	008 Call AwaitableSocketAsyncEventArgs.Release, X0
	009 Compare W20, 0
	010 JumpIfNotEqual {16}
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Call AwaitableSocketAsyncEventArgs.ThrowIncorrectTokenException, X0
	016 Move X0, X19
	017 Move W1, W20
	018 Call AwaitableSocketAsyncEventArgs.ThrowException, X0, X1

Method: System.Void ThrowIncorrectTokenException()

Disassembly:
	0x036C7BB0 B 0x36C7AC8
	0x036C7BB4 MOVZ W0, 0x8
	0x036C7BB8 BL 0x3EB1AF0
	0x036C7BBC LDR X8, [X19]
	0x036C7BC0 STR X8, [X0]
	0x036C7BC4 ADRP X1, 0x7ED000
	0x036C7BC8 ADD X1, X1, 0xE58
	0x036C7BCC MOV X2, X31
	0x036C7BD0 BL 0x3EB1B00
	0x036C7BD4 BL 0x1C16F20
	0x036C7BD8 BL 0x1C16F20
	0x036C7BDC B 0x36C7BEC
	0x036C7BE0 B 0x36C7BEC
	0x036C7BE4 B 0x36C7BEC
	0x036C7BE8 B 0x36C7BEC
	0x036C7BEC MOV X19, X0
	0x036C7BF0 B 0x36C7C04
	0x036C7BF4 MOV X20, X1
	0x036C7BF8 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA2D000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA79000
	009 Move X0, [X0+3208]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0xA79000
	016 Move X0, [X0+3216]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void ThrowMultipleContinuationsException()

Disassembly:
	0x036C7E0C LDRB W10, [X8 + 0x130]
	0x036C7E10 LDRB W9, [X1 + 0x130]
	0x036C7E14 CMP W10, W9
	0x036C7E18 B.CC 0x36C7E68
	0x036C7E1C LDR X8, [X8 + 0xC8]
	0x036C7E20 ADD X8, X8, X9, 0x3, LSL
	0x036C7E24 LDUR X8, [X8 - 0x8]
	0x036C7E28 CMP X8, X1
	0x036C7E2C B.NE 0x36C7E68
	0x036C7E30 MOV X1, X20
	0x036C7E34 MOV X2, X31
	0x036C7E38 BL 0x36BC8C8
	0x036C7E3C MOV W1, W0
	0x036C7E40 ADRP X8, 0xA78000
	0x036C7E44 LDR X8, [X8 + 0xD18]
	0x036C7E48 LDR X2, [X8]
	0x036C7E4C MOV X0, X19
	0x036C7E50 BL 0x267AB34
	0x036C7E54 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA2D000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA79000
	009 Move X0, [X0+3224]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0xA79000
	016 Move X0, [X0+3232]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void ThrowException(System.Net.Sockets.SocketError error)

Disassembly:
	0x036C7EA0 ADRP X0, 0xA2C000
	0x036C7EA4 LDR X0, [X0 + 0x7D0]
	0x036C7EA8 BL 0x1C16D08
	0x036C7EAC LDR X8, [X20]
	0x036C7EB0 LDR X1, [X8]
	0x036C7EB4 BL 0x1C17270
	0x036C7EB8 TBZ X0, 0x0, 0x36C7EF0
	0x036C7EBC LDR X20, [X20]
	0x036C7EC0 BL 0x3EB1AE0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call AwaitableSocketAsyncEventArgs.CreateException, X0, X1
	004 Move X19, X0
	005 Move X0, 0xA79000
	006 Move X0, [X0+3240]
	007 Call 0x1C17D08
	008 Move X1, X0
	009 Move X0, X19
	010 Call 0x1C17DEC

Method: System.Exception CreateException(System.Net.Sockets.SocketError error)

Disassembly:
	0x036C795C ADRP X9, 0xA78000
	0x036C7960 LDR X9, [X9 + 0xD40]
	0x036C7964 LDR X8, [X0]
	0x036C7968 LDR X1, [X9]
	0x036C796C LDRB W10, [X8 + 0x130]
	0x036C7970 LDRB W9, [X1 + 0x130]
	0x036C7974 CMP W10, W9
	0x036C7978 B.CC 0x36C7AE4
	0x036C797C LDR X8, [X8 + 0xC8]
	0x036C7980 ADD X8, X8, X9, 0x3, LSL
	0x036C7984 LDUR X8, [X8 - 0x8]
	0x036C7988 CMP X8, X1
	0x036C798C B.NE 0x36C7AE4
	0x036C7990 ADD X8, X31, 0x48
	0x036C7994 STR X0, [X31 + 0x48]
	0x036C7998 STP X31, X8, [X31]
	0x036C799C CBZ X0, 0x36C7AEC
	0x036C79A0 LDR X8, [X0 + 0x10]
	0x036C79A4 CBZ X8, 0x36C7AF0
	0x036C79A8 LDR X8, [X8 + 0x10]
	0x036C79AC CBZ X8, 0x36C7AF4
	0x036C79B0 LDR X0, [X8 + 0x20]
	0x036C79B4 CBZ X0, 0x36C7AF8
	0x036C79B8 ADRP X9, 0xA35000
	0x036C79BC LDR X9, [X9 + 0x788]
	0x036C79C0 LDR X8, [X0]
	0x036C79C4 LDR X1, [X9]
	0x036C79C8 LDRB W10, [X8 + 0x130]
	0x036C79CC LDRB W9, [X1 + 0x130]
	0x036C79D0 CMP W10, W9
	0x036C79D4 B.CC 0x36C7AE0
	0x036C79D8 LDR X8, [X8 + 0xC8]
	0x036C79DC ADD X8, X8, X9, 0x3, LSL
	0x036C79E0 LDUR X8, [X8 - 0x8]
	0x036C79E4 CMP X8, X1
	0x036C79E8 B.NE 0x36C7AE0
	0x036C79EC MOV X1, X19
	0x036C79F0 MOV X2, X31
	0x036C79F4 BL 0x36BC2E4
	0x036C79F8 LDR X8, [X31 + 0x48]
	0x036C79FC CBZ X8, 0x36C7AFC
	0x036C7A00 LDR X20, [X8 + 0x28]
	0x036C7A04 MOV W19, W0
	0x036C7A08 CBZ X20, 0x36C7A28
	0x036C7A0C LDR W8, [X20 + 0x18]
	0x036C7A10 CMP W19, W8
	0x036C7A14 B.LS 0x36C7A20
	0x036C7A18 MOV X0, X31
	0x036C7A1C BL 0x339D6EC
	0x036C7A20 MOV W8, W19
	0x036C7A24 B 0x36C7A3C
	0x036C7A28 CBZ W19, 0x36C7A34
	0x036C7A2C MOV X0, X31
	0x036C7A30 BL 0x339D6EC
	0x036C7A34 MOV X20, X31
	0x036C7A38 MOV W8, W31
	0x036C7A3C ADRP X9, 0xA5F000
	0x036C7A40 LDR X9, [X9 + 0xD80]
	0x036C7A44 STR X20, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD1A000
	007 Move X22, 0xA6B000
	008 Move W8, [X19+2594]
	009 Move X22, [X22+216]
	010 Move W21, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xA5B000
	017 Move X0, [X0+1960]
	018 Call 0x1C17CF4
	019 Move X0, 0xA6B000
	020 Move X0, [X0+216]
	021 Call 0x1C17CF4
	022 Move X0, 0xA79000
	023 Move X0, [X0+1888]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+2594], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move W1, W21
	030 Move X2, X31
	031 Move X19, X0
	032 Call Win32Exception..ctor, X0, X1
	033 Move W8, [X20+154]
	034 Compare W8, 0
	035 JumpIfEqual {62}
	036 Compare X19, 0
	037 JumpIfEqual {69}
	038 Move X8, [X19]
	039 Move X20, 0xA79000
	040 Move X21, 0xA5B000
	041 Move X0, X19
	042 Move X9, [X8+392]
	043 Move X1, [X8+400]
	044 Move X20, [X20+1888]
	045 Move X21, [X21+1960]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X20]
	048 Move X1, X0
	049 Move X2, X31
	050 Move X0, X8
	051 Call SR.Format, X0, X1
	052 Move X8, [X21]
	053 Move X20, X0
	054 Move X0, X8
	055 Call 0x1C17F10
	056 Move X1, X20
	057 Move X2, X19
	058 Move X3, X31
	059 Move X21, X0
	060 Call IOException..ctor, X0, X1, X2
	061 Move X19, X21
	062 Move X0, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return X0
	069 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x036C7F0C BL 0x3EB1B00
	0x036C7F10 MOV X20, X0
	0x036C7F14 BL 0x3EB1AE0
	0x036C7F18 MOV X0, X20
	0x036C7F1C BL 0x1D2C690
	0x036C7F20 BL 0x1990590
	0x036C7F24 SUB X31, X31, 0x30
	0x036C7F28 STR X30, [X31 + 0x10]
	0x036C7F2C STP X20, X19, [X31 + 0x20]
	0x036C7F30 ADRP X20, 0xD19000
	0x036C7F34 LDRB W8, [X20 + 0xA30]
	0x036C7F38 MOV X19, X1
	0x036C7F3C TBNZ X8, 0x0, 0x36C7FB4
	0x036C7F40 ADRP X0, 0xA57000
	0x036C7F44 LDR X0, [X0 + 0xD50]
	0x036C7F48 BL 0x1C16CF4
	0x036C7F4C ADRP X0, 0xA57000
	0x036C7F50 LDR X0, [X0 + 0xD68]
	0x036C7F54 BL 0x1C16CF4
	0x036C7F58 ADRP X0, 0xA54000
	0x036C7F5C LDR X0, [X0 + 0x718]
	0x036C7F60 BL 0x1C16CF4
	0x036C7F64 ADRP X0, 0xA35000
	0x036C7F68 LDR X0, [X0 + 0x788]
	0x036C7F6C BL 0x1C16CF4
	0x036C7F70 ADRP X0, 0xA78000
	0x036C7F74 LDR X0, [X0 + 0xD18]
	0x036C7F78 BL 0x1C16CF4
	0x036C7F7C ADRP X0, 0xA37000
	0x036C7F80 LDR X0, [X0 + 0xD20]
	0x036C7F84 BL 0x1C16CF4
	0x036C7F88 ADRP X0, 0xA78000
	0x036C7F8C LDR X0, [X0 + 0xD48]
	0x036C7F90 BL 0x1C16CF4
	0x036C7F94 ADRP X0, 0xA78000
	0x036C7F98 LDR X0, [X0 + 0xD50]
	0x036C7F9C BL 0x1C16CF4
	0x036C7FA0 ADRP X0, 0xA78000
	0x036C7FA4 LDR X0, [X0 + 0xD58]
	0x036C7FA8 BL 0x1C16CF4
	0x036C7FAC MOVZ W8, 0x1
	0x036C7FB0 STRB W8, [X20 + 0xA30]
	0x036C7FB4 STR X31, [X31 + 0x18]
	0x036C7FB8 CBZ X19, 0x36C80F8
	0x036C7FBC ADRP X10, 0xA54000
	0x036C7FC0 LDR X8, [X19]
	0x036C7FC4 LDR X10, [X10 + 0x718]
	0x036C7FC8 LDRH W9, [X8 + 0x12E]
	0x036C7FCC LDR X1, [X10]
	0x036C7FD0 CBZ X9, 0x36C7FF4
	0x036C7FD4 LDR X10, [X8 + 0xB0]
	0x036C7FD8 ADD X10, X10, 0x8
	0x036C7FDC LDUR X11, [X10 - 0x8]
	0x036C7FE0 CMP X11, X1
	0x036C7FE4 B.EQ 0x36C8004
	0x036C7FE8 SUBS X9, X9, 0x1
	0x036C7FEC ADD X10, X10, 0x10
	0x036C7FF0 B.NE 0x36C7FDC
	0x036C7FF4 MOVZ W2, 0x2
	0x036C7FF8 MOV X0, X19
	0x036C7FFC BL 0x1C5C788
	0x036C8000 B 0x36C8014
	0x036C8004 LDR W9, [X10]
	0x036C8008 ADD W9, W9, 0x2
	0x036C800C ADD X8, X8, W9, 0x4, SXTW
	0x036C8010 ADD X0, X8, 0x138
	0x036C8014 LDP X8, X1, [X0]
	0x036C8018 MOV X0, X19
	0x036C801C BLR X8
	0x036C8020 CBZ X0, 0x36C8058
	0x036C8024 ADRP X9, 0xA77000
	0x036C8028 LDR X9, [X9 + 0xD58]
	0x036C802C LDR X8, [X0]
	0x036C8030 LDR X1, [X9]
	0x036C8034 LDRB W10, [X8 + 0x130]
	0x036C8038 LDRB W9, [X1 + 0x130]
	0x036C803C CMP W10, W9
	0x036C8040 B.CC 0x36C80F4
	0x036C8044 LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xD1A000
	009 Move X21, 0xA79000
	010 Move W8, [X19+2595]
	011 Move X21, [X21+3144]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xA57000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xA79000
	020 Move X0, [X0+3144]
	021 Call 0x1C17CF4
	022 Move X0, 0xA79000
	023 Move X0, [X0+3248]
	024 Call 0x1C17CF4
	025 Move X0, 0xA79000
	026 Move X0, [X0+3256]
	027 Call 0x1C17CF4
	028 Move X0, 0xA79000
	029 Move X0, [X0+3168]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+2595], W8
	033 Move X0, [X21]
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Call AwaitableSocketAsyncEventArgs..ctor, X0
	037 Compare X19, 0
	038 JumpIfEqual {90}
	039 Move [X19+128], X31
	040 Move X8, [X21]
	041 Move X23, 0xA79000
	042 Move X24, 0xA57000
	043 Move X20, 0xA79000
	044 Move X8, [X8+184]
	045 Move X23, [X23+3168]
	046 Move X22, 0xA79000
	047 Move [X8], X19
	048 Move X0, [X23]
	049 Move W8, [X0+224]
	050 Move X24, [X24+3656]
	051 Move X20, [X20+3248]
	052 Move X22, [X22+3256]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X23]
	057 Move X8, [X0+184]
	058 Move X0, [X24]
	059 Move X19, [X8]
	060 Call 0x1C17F10
	061 Move X2, [X20]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X20, X0
	065 Call Action`1<Object>..ctor, X0, X1, X2
	066 Move X8, [X21]
	067 Move X8, [X8+184]
	068 Move [X8+8], X20
	069 Move X8, [X23]
	070 Move X0, [X24]
	071 Move X8, [X8+184]
	072 Move X19, [X8]
	073 Call 0x1C17F10
	074 Move X2, [X22]
	075 Move X1, X19
	076 Move X3, X31
	077 Move X20, X0
	078 Call Action`1<Object>..ctor, X0, X1, X2
	079 Move X8, [X21]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X8, [X8+184]
	085 Move [X8+16], X20
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X30, [X31+64]
	089 Return 
	090 Call 0x1C17F20

