Type: System.Net.Sockets.TcpClient

Method: System.Void .ctor()

Disassembly:
	0x036CBA80 LDR X8, [X19 + 0x20]
	0x036CBA84 CBNZ X8, 0x36CBAB0
	0x036CBA88 ADRP X8, 0xA72000
	0x036CBA8C LDR X8, [X8 + 0x8E8]
	0x036CBA90 LDR X0, [X8]
	0x036CBA94 BL 0x1C16F10
	0x036CBA98 MOVZ W2, 0x1
	0x036CBA9C MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move W1, 2
	003 Call TcpClient..ctor, X0, X1
	004 Move X0, X31
	005 Call Logging.get_On
	006 Move X0, X31
	007 Move X30, [X31+16]
	008 Call Logging.get_On
	009 Return 

Method: System.Void .ctor(System.Net.Sockets.AddressFamily family)

Disassembly:
	0x036CBAA0 MOV X3, X31
	0x036CBAA4 MOV X21, X0
	0x036CBAA8 BL 0x36ACB1C
	0x036CBAAC STR X21, [X19 + 0x20]
	0x036CBAB0 MOV X0, X31
	0x036CBAB4 BL 0x3692290
	0x036CBAB8 LDR X0, [X19 + 0x20]
	0x036CBABC LDP X20, X19, [X31 + 0x10]
	0x036CBAC0 LDP X30, X21, [X31], #0x20
	0x036CBAC4 RET
	0x036CBAC8 MOV X0, X19
	0x036CBACC MOV X1, X31
	0x036CBAD0 BL 0x33BE520
	0x036CBAD4 MOV X19, X0
	0x036CBAD8 BL 0x19903C0
	0x036CBADC LDR X8, [X19]
	0x036CBAE0 MOV X0, X19
	0x036CBAE4 LDR X9, [X8 + 0x2E8]
	0x036CBAE8 LDR X1, [X8 + 0x2F0]
	0x036CBAEC BLR X9
	0x036CBAF0 MOV X19, X0
	0x036CBAF4 ADRP X0, 0xA51000
	0x036CBAF8 LDR X0, [X0 + 0x4B8]
	0x036CBAFC BL 0x1C16D08
	0x036CBB00 BL 0x1C16F10
	0x036CBB04 MOV X1, X19
	0x036CBB08 MOV X2, X31
	0x036CBB0C MOV X20, X0
	0x036CBB10 BL 0x338C448
	0x036CBB14 B 0x36CBB54
	0x036CBB18 BL 0x1C16F20
	0x036CBB1C ADRP X0, 0xA74000
	0x036CBB20 LDR X0, [X0 + 0x6E0]
	0x036CBB24 BL 0x1C16D08
	0x036CBB28 MOV X1, X31
	0x036CBB2C BL 0x320A1E4
	0x036CBB30 MOV X19, X0
	0x036CBB34 ADRP X0, 0xA28000
	0x036CBB38 LDR X0, [X0 + 0x5B0]
	0x036CBB3C BL 0x1C16D08
	0x036CBB40 BL 0x1C16F10
	0x036CBB44 MOV X1, X19
	0x036CBB48 MOV X2, X31
	0x036CBB4C MOV X20, X0
	0x036CBB50 BL 0x337DF1C
	0x036CBB54 ADRP X0, 0xA74000
	0x036CBB58 LDR X0, [X0 + 0xDF8]
	0x036CBB5C BL 0x1C16D08
	0x036CBB60 MOV X1, X0
	0x036CBB64 MOV X0, X20
	0x036CBB68 BL 0x1C16DEC
	0x036CBB6C STP X30, X21, [X31 - 0x20]!
	0x036CBB70 STP X20, X19, [X31 + 0x10]
	0x036CBB74 ADRP X21, 0xD15000
	0x036CBB78 ADRP X20, 0xA28000
	0x036CBB7C LDRB W8, [X21 + 0xA4D]
	0x036CBB80 LDR X20, [X20 + 0xE00]
	0x036CBB84 MOV X19, X0
	0x036CBB88 TBNZ X8, 0x0, 0x36CBBA0
	0x036CBB8C ADRP X0, 0xA28000
	0x036CBB90 LDR X0, [X0 + 0xE00]
	0x036CBB94 BL 0x1C16CF4
	0x036CBB98 MOVZ W8, 0x1
	0x036CBB9C STRB W8, [X21 + 0xA4D]
	0x036CBBA0 MOV X0, X31
	0x036CBBA4 BL 0x3692290
	0x036CBBA8 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move W8, 2
	006 Move X1, X31
	007 Move X19, X0
	008 Move [X0+40], W8
	009 Call Object..ctor, X0
	010 Move X0, X31
	011 Call Logging.get_On
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, X19
	015 Move [X19+40], W20
	016 Call TcpClient.initialize, X0
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X0, X31
	020 Move X30, [X31+32]
	021 Call Logging.get_On
	022 Return 
	023 Move X0, 0xA29000
	024 Move X0, [X0+2512]
	025 Call 0x1C17D08
	026 Move W1, 1
	027 Call 0x1C17D6C
	028 Move X19, X0
	029 Call 0x19913C0
	030 Move X20, 0xA32000
	031 Move X20, [X20+2896]
	032 Move X0, X20
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Call 0x19990B4
	037 Move X0, X20
	038 Call 0x1C17D08
	039 Move X2, X0
	040 Move X0, X19
	041 Move X1, X31
	042 Call 0x1994444
	043 Move X0, 0xA75000
	044 Move X0, [X0+3464]
	045 Call 0x1C17D08
	046 Move X1, X19
	047 Move X2, X31
	048 Call SR.GetString, X0, X1
	049 Move X19, X0
	050 Move X0, 0xA31000
	051 Move X0, [X0+1400]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X20, X0
	055 Move X0, 0xA75000
	056 Move X0, [X0+3472]
	057 Call 0x1C17D08
	058 Move X2, X0
	059 Move X0, X20
	060 Move X1, X19
	061 Move X3, X31
	062 Call ArgumentException..ctor, X0, X1, X2
	063 Move X0, 0xA75000
	064 Move X0, [X0+3480]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X20
	068 Call 0x1C17DEC

Method: System.Void .ctor(System.String hostname, System.Int32 port)

Disassembly:
	0x036CBC18 STP X20, X19, [X31 + 0x20]
	0x036CBC1C ADRP X21, 0xD15000
	0x036CBC20 LDRB W8, [X21 + 0xA4E]
	0x036CBC24 MOV W20, W1
	0x036CBC28 MOV X19, X0
	0x036CBC2C TBNZ X8, 0x0, 0x36CBC50
	0x036CBC30 ADRP X0, 0xA2F000
	0x036CBC34 LDR X0, [X0 + 0xC10]
	0x036CBC38 BL 0x1C16CF4
	0x036CBC3C ADRP X0, 0xA28000
	0x036CBC40 LDR X0, [X0 + 0xE00]
	0x036CBC44 BL 0x1C16CF4
	0x036CBC48 MOVZ W8, 0x1
	0x036CBC4C STRB W8, [X21 + 0xA4E]
	0x036CBC50 MOV X0, X31
	0x036CBC54 BL 0x3692290
	0x036CBC58 LDRB W8, [X19 + 0x2C]
	0x036CBC5C CBNZ W8, 0x36CBD24
	0x036CBC60 TBZ X20, 0x0, 0x36CBD1C
	0x036CBC64 LDR X20, [X19 + 0x20]
	0x036CBC68 CBZ X20, 0x36CBCB4
	0x036CBC6C ADRP X10, 0xA28000
	0x036CBC70 LDR X8, [X20]
	0x036CBC74 LDR X10, [X10 + 0xE00]
	0x036CBC78 LDRH W9, [X8 + 0x12E]
	0x036CBC7C LDR X1, [X10]
	0x036CBC80 CBZ X9, 0x36CBCA4
	0x036CBC84 LDR X10, [X8 + 0xB0]
	0x036CBC88 ADD X10, X10, 0x8
	0x036CBC8C LDUR X11, [X10 - 0x8]
	0x036CBC90 CMP X11, X1
	0x036CBC94 B.EQ 0x36CBCE0
	0x036CBC98 SUBS X9, X9, 0x1
	0x036CBC9C ADD X10, X10, 0x10
	0x036CBCA0 B.NE 0x36CBC8C
	0x036CBCA4 MOV X0, X20
	0x036CBCA8 MOV W2, W31
	0x036CBCAC BL 0x1C5C788
	0x036CBCB0 B 0x36CBCEC
	0x036CBCB4 LDR X20, [X19 + 0x10]
	0x036CBCB8 CBZ X20, 0x36CBCF8
	0x036CBCBC MOVZ W1, 0x2
	0x036CBCC0 MOV X0, X20
	0x036CBCC4 MOV X2, X31
	0x036CBCC8 BL 0x36BBC2C
	0x036CBCCC MOV X0, X20
	0x036CBCD0 MOV X1, X31
	0x036CBCD4 BL 0x36AC3C8
	0x036CBCD8 STR X31, [X19 + 0x10]
	0x036CBCDC B 0x36CBCF8
	0x036CBCE0 LDRSW X9, [X10]
	0x036CBCE4 ADD X8, X8, X9, 0x4, LSL
	0x036CBCE8 ADD X0, X8, 0x138
	0x036CBCEC LDP X8, X1, [X0]
	0x036CBCF0 MOV X0, X20
	0x036CBCF4 BLR X8
	0x036CBCF8 ADRP X8, 0xA2F000
	0x036CBCFC LDR X8, [X8 + 0xC10]
	0x036CBD00 LDR X0, [X8]
	0x036CBD04 LDR W8, [X0 + 0xE0]
	0x036CBD08 CBNZ W8, 0x36CBD10
	0x036CBD0C BL 0x1C16DFC
	0x036CBD10 MOV X0, X19
	0x036CBD14 MOV X1, X31
	0x036CBD18 BL 0x33B3E9C
	0x036CBD1C MOVZ W8, 0x1
	0x036CBD20 STRB W8, [X19 + 0x2C]
	0x036CBD24 LDP X20, X19, [X31 + 0x20]
	0x036CBD28 LDP X22, X21, [X31 + 0x10]
	0x036CBD2C MOV X0, X31
	0x036CBD30 LDR X30, [X31], #0x30
	0x036CBD34 B 0x3692290
	0x036CBD38 CMP W1, 0x1
	0x036CBD3C MOV X22, X0
	0x036CBD40 B.NE 0x36CBD70
	0x036CBD44 MOV X0, X22
	0x036CBD48 BL 0x3EB1AD0
	0x036CBD4C LDR X21, [X0]
	0x036CBD50 BL 0x3EB1AE0
	0x036CBD54 MOV X0, X20
	0x036CBD58 MOV X1, X31
	0x036CBD5C BL 0x36AC3C8
	0x036CBD60 STR X31, [X19 + 0x10]
	0x036CBD64 CBZ X21, 0x36CBCF8
	0x036CBD68 MOV X0, X21
	0x036CBD6C BL 0x1C16F18
	0x036CBD70 MOV X21, X31
	0x036CBD74 B 0x36CBD7C
	0x036CBD78 MOV X22, X0
	0x036CBD7C MOV X0, X20
	0x036CBD80 MOV X1, X31
	0x036CBD84 BL 0x36AC3C8
	0x036CBD88 STR X31, [X19 + 0x10]
	0x036CBD8C CBNZ X21, 0x36CBD98
	0x036CBD90 MOV X0, X22
	0x036CBD94 BL 0x1D2C690
	0x036CBD98 MOV X0, X21
	0x036CBD9C BL 0x1C16F18
	0x036CBDA0 BL 0x1990590
	0x036CBDA4 LDR X8, [X0]
	0x036CBDA8 MOVZ W1, 0x1
	0x036CBDAC LDP X3, X2, [X8 + 0x188]
	0x036CBDB0 BR X3
	0x036CBDB4 STP X30, X21, [X31 - 0x20]!
	0x036CBDB8 STP X20, X19, [X31 + 0x10]
	0x036CBDBC LDR X8, [X0]
	0x036CBDC0 MOV X19, X0
	0x036CBDC4 LDP X9, X2, [X8 + 0x188]
	0x036CBDC8 MOV W1, W31
	0x036CBDCC BLR X9
	0x036CBDD0 MOV X0, X19
	0x036CBDD4 LDP X20, X19, [X31 + 0x10]
	0x036CBDD8 MOV X1, X31
	0x036CBDDC LDP X30, X21, [X31], #0x20
	0x036CBDE0 B 0x33CB4DC
	0x036CBDE4 CMP W1, 0x1
	0x036CBDE8 MOV X21, X0
	0x036CBDEC B.NE 0x36CBE1C
	0x036CBDF0 MOV X0, X21
	0x036CBDF4 BL 0x3EB1AD0
	0x036CBDF8 LDR X20, [X0]
	0x036CBDFC BL 0x3EB1AE0
	0x036CBE00 MOV X0, X19
	0x036CBE04 MOV X1, X31
	0x036CBE08 BL 0x33CB4DC
	0x036CBE0C CBNZ X20, 0x36CBE24
	0x036CBE10 LDP X20, X19, [X31 + 0x10]
	0x036CBE14 LDP X30, X21, [X31], #0x20
	0x036CBE18 RET
	0x036CBE1C MOV X20, X31
	0x036CBE20 B 0x36CBE30
	0x036CBE24 MOV X0, X20
	0x036CBE28 BL 0x1C16F18
	0x036CBE2C MOV X21, X0
	0x036CBE30 MOV X0, X19
	0x036CBE34 MOV X1, X31
	0x036CBE38 BL 0x33CB4DC
	0x036CBE3C CBNZ X20, 0x36CBE48
	0x036CBE40 MOV X0, X21
	0x036CBE44 BL 0x1D2C690
	0x036CBE48 MOV X0, X20
	0x036CBE4C BL 0x1C16F18
	0x036CBE50 BL 0x1990590
	0x036CBE54 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD16000
	007 Move W8, [X22+2632]
	008 Move W20, W2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA73000
	016 Move X0, [X0+3624]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2632], W8
	020 Move W8, 2
	021 Move X0, X19
	022 Move X1, X31
	023 Move [X19+40], W8
	024 Call Object..ctor, X0
	025 Move X0, X31
	026 Call Logging.get_On
	027 Compare X21, 0
	028 JumpIfEqual {55}
	029 Move X8, 0xA73000
	030 Move X8, [X8+3624]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, W20
	037 Move X1, X31
	038 Call ValidationHelper.ValidateTcpPort, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {67}
	043 Move X0, X19
	044 Move X1, X21
	045 Move W2, W20
	046 Call TcpClient.Connect, X0, X1, X2
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X0, X31
	052 Move X30, [X31+48]
	053 Call Logging.get_On
	054 Return 
	055 Move X0, 0xA2E000
	056 Move X0, [X0+1320]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0xA75000
	061 Move X0, [X0+3488]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call ArgumentNullException..ctor, X0, X1
	067 Move X0, 0xA31000
	068 Move X0, [X0+1888]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X19, X0
	072 Move X0, 0xA73000
	073 Move X0, [X0+1992]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call ArgumentOutOfRangeException..ctor, X0, X1
	079 Move X0, 0xA75000
	080 Move X0, [X0+3496]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Call 0x1C17DEC
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X20, X0
	087 Move X0, X20
	088 Call 0x3EB2AD0
	089 Move X20, X0
	090 Move X0, 0xA29000
	091 Move X0, [X0+2000]
	092 Call 0x1C17D08
	093 Move X8, [X20]
	094 Move X1, [X8]
	095 Call 0x1C18270
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {124}
	100 Move X20, [X20]
	101 Call 0x3EB2AE0
	102 Move X0, 0xA52000
	103 Move X0, [X0+3000]
	104 Call 0x1C17D08
	105 Compare X20, 0
	106 JumpIfNotEqual {132}
	107 Move X0, 0xA73000
	108 Move X0, [X0+3672]
	109 Call 0x1C17D08
	110 Move X0, 0xA32000
	111 Move X0, [X0+3512]
	112 Call 0x1C17D08
	113 Move X0, [X19+16]
	114 Compare X0, 0
	115 JumpIfEqual {118}
	116 Move X1, X31
	117 Call Socket.Close, X0
	118 Move X0, 0xA75000
	119 Move X0, [X0+3496]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X20
	123 Call 0x1C17DEC
	124 Move W0, 8
	125 Call 0x3EB2AF0
	126 Move X8, [X20]
	127 Move [X0], X8
	128 Move X1, 0x7EA000
	129 Add X1, X1, 3672
	130 Move X2, X31
	131 Call 0x3EB2B00
	132 Move X8, [X20]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, 0xA73000
	135 Move X0, [X0+3672]
	136 Call 0x1C17D08
	137 Move X8, [X20]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, 0xA32000
	140 Move X0, [X0+3512]
	141 Call 0x1C17D08
	142 Move X8, [X20]
	143 Move W9, [X0+304]
	144 Move W10, [X8+304]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, [X8+200]
	147 Add X8, X8, X9
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, X20
	151 Call 0x1C17F18
	152 Move X20, X0
	153 Call 0x3EB2AE0
	154 Move X0, X20
	155 Call 0x1D2D690
	156 Call 0x1991590

Method: System.Void .ctor(System.Net.Sockets.Socket acceptedSocket)

Disassembly:
	0x036CC4E8 MOVZ W1, 0x2
	0x036CC4EC MOV X3, X31
	0x036CC4F0 BL 0x36C5790
	0x036CC4F4 LDR X20, [X19 + 0x20]
	0x036CC4F8 CBZ X20, 0x36CC77C
	0x036CC4FC STRB W31, [X31 + 0x48]
	0x036CC500 ADD X1, X31, 0x48
	0x036CC504 MOV X0, X20
	0x036CC508 MOV X2, X31
	0x036CC50C BL 0x33DE64C
	0x036CC510 ADRP X27, 0xA68000
	0x036CC514 ADRP X22, 0xA68000
	0x036CC518 ADRP X25, 0xA68000
	0x036CC51C ADRP X24, 0xA68000
	0x036CC520 LDR X27, [X27 + 0x640]
	0x036CC524 LDR X22, [X22 + 0x690]
	0x036CC528 LDR X25, [X25 + 0x678]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move W8, 2
	006 Move X1, X31
	007 Move X20, X0
	008 Move [X0+40], W8
	009 Call Object..ctor, X0
	010 Move X0, X31
	011 Call Logging.get_On
	012 Move W8, 1
	013 Move [X20+16], X19
	014 Move [X20+24], W8
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X0, X31
	018 Move X30, [X31+32]
	019 Call Logging.get_On
	020 Return 

Method: System.Net.Sockets.Socket get_Client()

Disassembly:
	0x036CC52C LDR X24, [X24 + 0x670]
	0x036CC530 MOV W26, W31

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Client(System.Net.Sockets.Socket value)

Disassembly:
	0x036CC534 MOVZ W28, 0x1
	0x036CC538 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Void Connect(System.String hostname, System.Int32 port)

Disassembly:
	0x036CBE58 STP X22, X21, [X31 + 0x10]
	0x036CBE5C STP X20, X19, [X31 + 0x20]
	0x036CBE60 ADRP X22, 0xD15000
	0x036CBE64 LDRB W8, [X22 + 0xA50]
	0x036CBE68 MOV W20, W2
	0x036CBE6C MOV X21, X1
	0x036CBE70 MOV X19, X0
	0x036CBE74 TBNZ X8, 0x0, 0x36CBEA4
	0x036CBE78 ADRP X0, 0xA35000
	0x036CBE7C LDR X0, [X0 + 0xBB8]
	0x036CBE80 BL 0x1C16CF4
	0x036CBE84 ADRP X0, 0xA31000
	0x036CBE88 LDR X0, [X0 + 0x788]
	0x036CBE8C BL 0x1C16CF4
	0x036CBE90 ADRP X0, 0xA72000
	0x036CBE94 LDR X0, [X0 + 0xE28]
	0x036CBE98 BL 0x1C16CF4
	0x036CBE9C MOVZ W8, 0x1
	0x036CBEA0 STRB W8, [X22 + 0xA50]
	0x036CBEA4 MOV X0, X19
	0x036CBEA8 MOV X1, X31
	0x036CBEAC BL 0x33BDD8C
	0x036CBEB0 MOV X0, X31
	0x036CBEB4 BL 0x3692290
	0x036CBEB8 CBZ X21, 0x36CBF68
	0x036CBEBC ADRP X8, 0xA72000
	0x036CBEC0 LDR X8, [X8 + 0xE28]
	0x036CBEC4 LDR X0, [X8]
	0x036CBEC8 LDR W8, [X0 + 0xE0]
	0x036CBECC CBNZ W8, 0x36CBED4
	0x036CBED0 BL 0x1C16DFC
	0x036CBED4 MOV W0, W20
	0x036CBED8 MOV X1, X31
	0x036CBEDC BL 0x367E800
	0x036CBEE0 TBZ X0, 0x0, 0x36CBF9C
	0x036CBEE4 ADRP X8, 0xA35000
	0x036CBEE8 LDR X8, [X8 + 0xBB8]
	0x036CBEEC LDR X0, [X8]
	0x036CBEF0 BL 0x1C16F10
	0x036CBEF4 MOV X1, X21
	0x036CBEF8 MOV W2, W20
	0x036CBEFC MOV X3, X31
	0x036CBF00 MOV X22, X0
	0x036CBF04 BL 0x366E898
	0x036CBF08 STR X22, [X19 + 0x10]
	0x036CBF0C CBZ X22, 0x36CBFE4
	0x036CBF10 LDR X8, [X22]
	0x036CBF14 ADRP X20, 0xA31000
	0x036CBF18 MOV X0, X22
	0x036CBF1C LDP X9, X1, [X8 + 0x178]
	0x036CBF20 LDR X20, [X20 + 0x788]
	0x036CBF24 BLR X9
	0x036CBF28 LDR X8, [X20]
	0x036CBF2C MOV W20, W0
	0x036CBF30 MOV X0, X8
	0x036CBF34 BL 0x1C16F10
	0x036CBF38 MOVZ W2, 0x1
	0x036CBF3C MOVZ W3, 0x6
	0x036CBF40 MOV W1, W20
	0x036CBF44 MOV X4, X31
	0x036CBF48 MOV X21, X0
	0x036CBF4C BL 0x36AC13C
	0x036CBF50 STR X21, [X19 + 0x18]
	0x036CBF54 LDP X20, X19, [X31 + 0x20]
	0x036CBF58 LDP X22, X21, [X31 + 0x10]
	0x036CBF5C MOV X0, X31
	0x036CBF60 LDR X30, [X31], #0x30
	0x036CBF64 B 0x3692290
	0x036CBF68 ADRP X0, 0xA2D000
	0x036CBF6C LDR X0, [X0 + 0x528]
	0x036CBF70 BL 0x1C16D08
	0x036CBF74 BL 0x1C16F10
	0x036CBF78 MOV X19, X0
	0x036CBF7C ADRP X0, 0xA74000
	0x036CBF80 LDR X0, [X0 + 0xE00]
	0x036CBF84 BL 0x1C16D08
	0x036CBF88 MOV X1, X0
	0x036CBF8C MOV X0, X19
	0x036CBF90 MOV X2, X31
	0x036CBF94 BL 0x330E100
	0x036CBF98 B 0x36CBFCC
	0x036CBF9C ADRP X0, 0xA30000
	0x036CBFA0 LDR X0, [X0 + 0x760]
	0x036CBFA4 BL 0x1C16D08
	0x036CBFA8 BL 0x1C16F10
	0x036CBFAC MOV X19, X0
	0x036CBFB0 ADRP X0, 0xA72000
	0x036CBFB4 LDR X0, [X0 + 0x7C8]
	0x036CBFB8 BL 0x1C16D08
	0x036CBFBC MOV X1, X0
	0x036CBFC0 MOV X0, X19
	0x036CBFC4 MOV X2, X31
	0x036CBFC8 BL 0x3316014
	0x036CBFCC ADRP X0, 0xA74000
	0x036CBFD0 LDR X0, [X0 + 0xE08]
	0x036CBFD4 BL 0x1C16D08
	0x036CBFD8 MOV X1, X0
	0x036CBFDC MOV X0, X19
	0x036CBFE0 BL 0x1C16DEC
	0x036CBFE4 BL 0x1C16F20
	0x036CBFE8 LDR X0, [X0 + 0x18]
	0x036CBFEC RET
	0x036CBFF0 MOVN W1, 0x80000000
	0x036CBFF4 B 0x36CBFF8
	0x036CBFF8 STR X30, [X31 - 0x20]!
	0x036CBFFC STP X20, X19, [X31 + 0x10]
	0x036CC000 TBNZ X1, 0x1F, 0x36CC05C
	0x036CC004 MOV X19, X0
	0x036CC008 MOV X0, X31
	0x036CC00C MOV W20, W1
	0x036CC010 BL 0x3692290
	0x036CC014 LDR X0, [X19 + 0x18]
	0x036CC018 CBZ X0, 0x36CC0A4
	0x036CC01C LDRB W8, [X19 + 0x20]
	0x036CC020 CBNZ W8, 0x36CC04C
	0x036CC024 LDR X1, [X19 + 0x10]
	0x036CC028 MOV X2, X31
	0x036CC02C BL 0x36C2A18
	0x036CC030 LDR X0, [X19 + 0x18]
	0x036CC034 CBZ X0, 0x36CC0F4
	0x036CC038 MOV W1, W20
	0x036CC03C MOV X2, X31
	0x036CC040 BL 0x36C2D70
	0x036CC044 MOVZ W8, 0x1
	0x036CC048 STRB W8, [X19 + 0x20]
	0x036CC04C LDP X20, X19, [X31 + 0x10]
	0x036CC050 MOV X0, X31
	0x036CC054 LDR X30, [X31], #0x20
	0x036CC058 B 0x3692290
	0x036CC05C ADRP X0, 0xA2F000
	0x036CC060 LDR X0, [X0 + 0x760]
	0x036CC064 BL 0x1C16D08
	0x036CC068 BL 0x1C16F10
	0x036CC06C MOV X19, X0
	0x036CC070 ADRP X0, 0xA73000
	0x036CC074 LDR X0, [X0 + 0xE10]
	0x036CC078 BL 0x1C16D08
	0x036CC07C MOV X1, X0
	0x036CC080 MOV X0, X19
	0x036CC084 MOV X2, X31
	0x036CC088 BL 0x3316014
	0x036CC08C ADRP X0, 0xA73000
	0x036CC090 LDR X0, [X0 + 0xE18]
	0x036CC094 BL 0x1C16D08
	0x036CC098 MOV X1, X0
	0x036CC09C MOV X0, X19
	0x036CC0A0 BL 0x1C16DEC
	0x036CC0A4 ADRP X0, 0xA73000
	0x036CC0A8 LDR X0, [X0 + 0xE20]
	0x036CC0AC BL 0x1C16D08
	0x036CC0B0 MOV X1, X31
	0x036CC0B4 BL 0x320A1E4
	0x036CC0B8 MOV X19, X0
	0x036CC0BC ADRP X0, 0xA27000
	0x036CC0C0 LDR X0, [X0 + 0x5B0]
	0x036CC0C4 BL 0x1C16D08
	0x036CC0C8 BL 0x1C16F10
	0x036CC0CC MOV X1, X19
	0x036CC0D0 MOV X2, X31
	0x036CC0D4 MOV X20, X0
	0x036CC0D8 BL 0x337DF1C
	0x036CC0DC ADRP X0, 0xA73000
	0x036CC0E0 LDR X0, [X0 + 0xE18]
	0x036CC0E4 BL 0x1C16D08
	0x036CC0E8 MOV X1, X0
	0x036CC0EC MOV X0, X20
	0x036CC0F0 BL 0x1C16DEC
	0x036CC0F4 BL 0x1C16F20
	0x036CC0F8 CMP W1, 0x1
	0x036CC0FC MOV X20, X0
	0x036CC100 B.NE 0x36CC16C
	0x036CC104 MOV X0, X20
	0x036CC108 BL 0x3EB1AD0
	0x036CC10C MOV X20, X0
	0x036CC110 ADRP X0, 0xA65000
	0x036CC114 LDR X0, [X0 + 0xD8]
	0x036CC118 BL 0x1C16D08
	0x036CC11C LDR X8, [X20]
	0x036CC120 LDR X1, [X8]
	0x036CC124 BL 0x1C17270
	0x036CC128 TBZ X0, 0x0, 0x36CC144
	0x036CC12C LDR X20, [X20]
	0x036CC130 BL 0x3EB1AE0
	0x036CC134 MOV X0, X19
	0x036CC138 BL 0x36CC178
	0x036CC13C MOV X0, X20
	0x036CC140 BL 0x1C16F18
	0x036CC144 MOVZ W0, 0x8
	0x036CC148 BL 0x3EB1AF0
	0x036CC14C LDR X8, [X20]
	0x036CC150 STR X8, [X0]
	0x036CC154 ADRP X1, 0x7E8000
	0x036CC158 ADD X1, X1, 0xE58
	0x036CC15C MOV X2, X31
	0x036CC160 BL 0x3EB1B00
	0x036CC164 MOV X20, X0
	0x036CC168 BL 0x3EB1AE0
	0x036CC16C MOV X0, X20
	0x036CC170 BL 0x1D2C690
	0x036CC174 BL 0x1990590
	0x036CC178 STP X30, X21, [X31 - 0x20]!
	0x036CC17C STP X20, X19, [X31 + 0x10]
	0x036CC180 ADRP X20, 0xD14000
	0x036CC184 LDRB W8, [X20 + 0xA51]
	0x036CC188 MOV X19, X0
	0x036CC18C TBNZ X8, 0x0, 0x36CC1A4
	0x036CC190 ADRP X0, 0xA30000
	0x036CC194 LDR X0, [X0 + 0x788]
	0x036CC198 BL 0x1C16CF4
	0x036CC19C MOVZ W8, 0x1
	0x036CC1A0 STRB W8, [X20 + 0xA51]
	0x036CC1A4 MOV X0, X31
	0x036CC1A8 BL 0x3692290
	0x036CC1AC LDR X0, [X19 + 0x18]
	0x036CC1B0 CBZ X0, 0x36CC1C0
	0x036CC1B4 MOV X1, X31
	0x036CC1B8 BL 0x36AC3C8
	0x036CC1BC STR X31, [X19 + 0x18]
	0x036CC1C0 LDR X0, [X19 + 0x10]
	0x036CC1C4 STRB W31, [X19 + 0x20]
	0x036CC1C8 CBZ X0, 0x36CC238
	0x036CC1CC LDR X8, [X0]
	0x036CC1D0 ADRP X20, 0xA30000
	0x036CC1D4 LDP X9, X1, [X8 + 0x178]
	0x036CC1D8 LDR X20, [X20 + 0x788]
	0x036CC1DC BLR X9
	0x036CC1E0 LDR X8, [X20]
	0x036CC1E4 MOV W21, W0
	0x036CC1E8 MOV X0, X8
	0x036CC1EC BL 0x1C16F10
	0x036CC1F0 MOVZ W2, 0x1
	0x036CC1F4 MOVZ W3, 0x6
	0x036CC1F8 MOV W1, W21
	0x036CC1FC MOV X4, X31
	0x036CC200 MOV X20, X0
	0x036CC204 BL 0x36AC13C
	0x036CC208 LDRB W8, [X19 + 0x21]
	0x036CC20C STR X20, [X19 + 0x18]
	0x036CC210 CBZ W8, 0x36CC228
	0x036CC214 CBZ X20, 0x36CC238
	0x036CC218 MOVZ W1, 0x1
	0x036CC21C MOV X0, X20
	0x036CC220 MOV X2, X31
	0x036CC224 BL 0x36BF258
	0x036CC228 LDP X20, X19, [X31 + 0x10]
	0x036CC22C MOV X0, X31
	0x036CC230 LDP X30, X21, [X31], #0x20
	0x036CC234 B 0x3692290
	0x036CC238 BL 0x1C16F20
	0x036CC23C STR X30, [X31 - 0x20]!
	0x036CC240 STP X20, X19, [X31 + 0x10]
	0x036CC244 ADRP X20, 0xD14000
	0x036CC248 LDRB W8, [X20 + 0xA52]
	0x036CC24C MOV X19, X0
	0x036CC250 TBNZ X8, 0x0, 0x36CC268
	0x036CC254 ADRP X0, 0xA65000
	0x036CC258 LDR X0, [X0 + 0x510]
	0x036CC25C BL 0x1C16CF4
	0x036CC260 MOVZ W8, 0x1
	0x036CC264 STRB W8, [X20 + 0xA52]
	0x036CC268 MOV X0, X31
	0x036CC26C BL 0x3692290
	0x036CC270 LDRB W8, [X19 + 0x20]
	0x036CC274 CBZ W8, 0x36CC2C4
	0x036CC278 LDR X0, [X19 + 0x18]
	0x036CC27C CBZ X0, 0x36CC314
	0x036CC280 ADRP X19, 0xA65000
	0x036CC284 LDR X19, [X19 + 0x510]
	0x036CC288 MOV X1, X31
	0x036CC28C BL 0x36C2184
	0x036CC290 LDR X8, [X19]
	0x036CC294 MOV X19, X0
	0x036CC298 MOV X0, X8
	0x036CC29C BL 0x1C16F10
	0x036CC2A0 MOV X1, X19
	0x036CC2A4 MOV X20, X0
	0x036CC2A8 BL 0x36CB4E8
	0x036CC2AC MOV X0, X31
	0x036CC2B0 BL 0x3692290
	0x036CC2B4 MOV X0, X20
	0x036CC2B8 LDP X20, X19, [X31 + 0x10]
	0x036CC2BC LDR X30, [X31], #0x20
	0x036CC2C0 RET
	0x036CC2C4 ADRP X0, 0xA73000
	0x036CC2C8 LDR X0, [X0 + 0xE28]
	0x036CC2CC BL 0x1C16D08
	0x036CC2D0 MOV X1, X31
	0x036CC2D4 BL 0x320A1E4
	0x036CC2D8 MOV X19, X0
	0x036CC2DC ADRP X0, 0xA27000
	0x036CC2E0 LDR X0, [X0 + 0x5B0]
	0x036CC2E4 BL 0x1C16D08
	0x036CC2E8 BL 0x1C16F10
	0x036CC2EC MOV X1, X19
	0x036CC2F0 MOV X2, X31
	0x036CC2F4 MOV X20, X0
	0x036CC2F8 BL 0x337DF1C
	0x036CC2FC ADRP X0, 0xA73000
	0x036CC300 LDR X0, [X0 + 0xE30]
	0x036CC304 BL 0x1C16D08
	0x036CC308 MOV X1, X0
	0x036CC30C MOV X0, X20
	0x036CC310 BL 0x1C16DEC
	0x036CC314 BL 0x1C16F20
	0x036CC318 STP X30, X23, [X31 - 0x30]!
	0x036CC31C STP X22, X21, [X31 + 0x10]
	0x036CC320 STP X20, X19, [X31 + 0x20]
	0x036CC324 ADRP X23, 0xD14000
	0x036CC328 ADRP X22, 0xA73000
	0x036CC32C LDRB W8, [X23 + 0xA53]
	0x036CC330 LDR X22, [X22 + 0x10]
	0x036CC334 MOV W21, W2
	0x036CC338 MOV X20, X1
	0x036CC33C MOV X19, X0
	0x036CC340 TBNZ X8, 0x0, 0x36CC370
	0x036CC344 ADRP X0, 0xA73000
	0x036CC348 LDR X0, [X0 + 0xE38]
	0x036CC34C BL 0x1C16CF4
	0x036CC350 ADRP X0, 0xA73000
	0x036CC354 LDR X0, [X0 + 0xE40]
	0x036CC358 BL 0x1C16CF4
	0x036CC35C ADRP X0, 0xA73000
	0x036CC360 LDR X0, [X0 + 0x10]
	0x036CC364 BL 0x1C16CF4
	0x036CC368 MOVZ W8, 0x1
	0x036CC36C STRB W8, [X23 + 0xA53]
	0x036CC370 AND W1, W21, 0x1
	0x036CC374 MOV X0, X19
	0x036CC378 MOV X2, X31
	0x036CC37C BL 0x3224F78
	0x036CC380 STR X20, [X19 + 0x10]
	0x036CC384 LDR X0, [X22]
	0x036CC388 LDR W8, [X0 + 0xE0]
	0x036CC38C CBNZ W8, 0x36CC398
	0x036CC390 BL 0x1C16DFC
	0x036CC394 LDR X0, [X22]
	0x036CC398 LDR X8, [X0 + 0xB8]
	0x036CC39C LDRB W8, [X8]
	0x036CC3A0 CBZ W8, 0x36CC3CC
	0x036CC3A4 ADRP X8, 0xA73000
	0x036CC3A8 LDR X8, [X8 + 0xE40]
	0x036CC3AC ADRP X20, 0xA73000
	0x036CC3B0 LDR X0, [X8]
	0x036CC3B4 LDR X20, [X20 + 0xE38]
	0x036CC3B8 BL 0x1C16F10
	0x036CC3BC LDR X1, [X20]
	0x036CC3C0 MOV X20, X0
	0x036CC3C4 BL 0x2AA4804
	0x036CC3C8 STR X20, [X19 + 0x28]
	0x036CC3CC LDP X20, X19, [X31 + 0x20]
	0x036CC3D0 LDP X22, X21, [X31 + 0x10]
	0x036CC3D4 LDP X30, X23, [X31], #0x30
	0x036CC3D8 RET
	0x036CC3DC SUB X31, X31, 0xB0
	0x036CC3E0 STP X29, X30, [X31 + 0x50]
	0x036CC3E4 STP X28, X27, [X31 + 0x60]
	0x036CC3E8 STP X26, X25, [X31 + 0x70]
	0x036CC3EC STP X24, X23, [X31 + 0x80]
	0x036CC3F0 STP X22, X21, [X31 + 0x90]
	0x036CC3F4 STP X20, X19, [X31 + 0xA0]
	0x036CC3F8 ADRP X20, 0xD14000
	0x036CC3FC ADRP X23, 0xA30000
	0x036CC400 LDRB W8, [X20 + 0xA54]
	0x036CC404 LDR X23, [X23 + 0x788]
	0x036CC408 MOV X19, X0
	0x036CC40C TBNZ X8, 0x0, 0x36CC4A8
	0x036CC410 ADRP X0, 0xA73000
	0x036CC414 LDR X0, [X0 + 0xE48]
	0x036CC418 BL 0x1C16CF4
	0x036CC41C ADRP X0, 0xA68000
	0x036CC420 LDR X0, [X0 + 0x670]
	0x036CC424 BL 0x1C16CF4
	0x036CC428 ADRP X0, 0xA68000
	0x036CC42C LDR X0, [X0 + 0x678]
	0x036CC430 BL 0x1C16CF4
	0x036CC434 ADRP X0, 0xA68000
	0x036CC438 LDR X0, [X0 + 0x680]
	0x036CC43C BL 0x1C16CF4
	0x036CC440 ADRP X0, 0xA68000
	0x036CC444 LDR X0, [X0 + 0x690]
	0x036CC448 BL 0x1C16CF4
	0x036CC44C ADRP X0, 0xA68000
	0x036CC450 LDR X0, [X0 + 0x638]
	0x036CC454 BL 0x1C16CF4
	0x036CC458 ADRP X0, 0xA68000
	0x036CC45C LDR X0, [X0 + 0x640]
	0x036CC460 BL 0x1C16CF4
	0x036CC464 ADRP X0, 0xA73000
	0x036CC468 LDR X0, [X0 + 0x10]
	0x036CC46C BL 0x1C16CF4
	0x036CC470 ADRP X0, 0xA30000
	0x036CC474 LDR X0, [X0 + 0x788]
	0x036CC478 BL 0x1C16CF4
	0x036CC47C ADRP X0, 0xA27000
	0x036CC480 LDR X0, [X0 + 0x8F0]
	0x036CC484 BL 0x1C16CF4
	0x036CC488 ADRP X0, 0xA73000
	0x036CC48C LDR X0, [X0 + 0xE50]
	0x036CC490 BL 0x1C16CF4
	0x036CC494 ADRP X0, 0xA73000
	0x036CC498 LDR X0, [X0 + 0xE58]
	0x036CC49C BL 0x1C16CF4
	0x036CC4A0 MOVZ W8, 0x1
	0x036CC4A4 STRB W8, [X20 + 0xA54]
	0x036CC4A8 LDR X0, [X23]
	0x036CC4AC STRB W31, [X31 + 0x48]
	0x036CC4B0 STP X31, X31, [X31 + 0x30]
	0x036CC4B4 STR X31, [X31 + 0x40]
	0x036CC4B8 STR W31, [X31 + 0x4C]
	0x036CC4BC LDR W8, [X0 + 0xE0]
	0x036CC4C0 LDR X20, [X19 + 0x10]
	0x036CC4C4 CBNZ W8, 0x36CC4CC
	0x036CC4C8 BL 0x1C16DFC
	0x036CC4CC ADD X2, X31, 0x4C
	0x036CC4D0 MOV X0, X20
	0x036CC4D4 MOV W1, W31
	0x036CC4D8 MOV X3, X31
	0x036CC4DC BL 0x36C1D98
	0x036CC4E0 LDR X0, [X19 + 0x10]
	0x036CC4E4 ADD X2, X31, 0x4C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X22, 0xD16000
	015 Move W8, [X22+2633]
	016 Move W19, W2
	017 Move X21, X1
	018 Move X20, X0
	019 Move [X31+72], X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xA36000
	025 Move X0, [X0+3000]
	026 Call 0x1C17CF4
	027 Move X0, 0xA32000
	028 Move X0, [X0+1928]
	029 Call 0x1C17CF4
	030 Move X0, 0xA73000
	031 Move X0, [X0+3624]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2633], W8
	035 Move X0, X31
	036 Move [X31+56], X31
	037 Move [X31+64], X31
	038 Move [X31+48], X31
	039 Call Logging.get_On
	040 Move W8, [X20+44]
	041 Compare W8, 0
	042 JumpIfNotEqual {274}
	043 Compare X21, 0
	044 JumpIfEqual {299}
	045 Move X8, 0xA73000
	046 Move X8, [X8+3624]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move W0, W19
	053 Move X1, X31
	054 Call ValidationHelper.ValidateTcpPort, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {311}
	059 Move W8, [X20+24]
	060 Compare W8, 0
	061 JumpIfNotEqual {323}
	062 Move X0, X21
	063 Move X1, X31
	064 Call Dns.GetHostAddresses, X0
	065 Add X8, X31, 72
	066 Add X9, X31, 56
	067 Add X10, X31, 48
	068 Add X11, X31, 64
	069 Move [X31+56], X31
	070 Move [X31+64], X31
	071 Move [X31+8], X31
	072 Move [X31+16], X8
	073 Move [X31+24], X9
	074 Move [X31+32], X10
	075 Move [X31+40], X11
	076 Move [X31+48], X31
	077 Move X8, [X20+16]
	078 Move X20, X0
	079 Compare X8, 0
	080 JumpIfNotEqual {123}
	081 Move X22, 0xA32000
	082 Move X22, [X22+1928]
	083 Move X0, [X22]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X31
	089 Call Socket.get_OSSupportsIPv4
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {103}
	094 Move X0, [X22]
	095 Call 0x1C17F10
	096 Move X21, X0
	097 Move W1, 2
	098 Move W2, 1
	099 Move W3, 6
	100 Move X4, X31
	101 Call Socket..ctor, X0, X1, X2, X3
	102 Move [X31+48], X21
	103 Move X0, [X22]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X31
	109 Call Socket.get_OSSupportsIPv6
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {123}
	114 Move X0, [X22]
	115 Call 0x1C17F10
	116 Move X21, X0
	117 Move W1, 23
	118 Move W2, 1
	119 Move W3, 6
	120 Move X4, X31
	121 Call Socket..ctor, X0, X1, X2, X3
	122 Move [X31+56], X21
	123 Compare X20, 0
	124 JumpIfEqual {336}
	125 Move X8, [X20+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X28, 0xA36000
	128 Move X21, 0xA29000
	129 Move X22, 0xA52000
	130 Move X23, 0xA73000
	131 Move X24, 0xA32000
	132 Move X28, [X28+3000]
	133 Move X21, [X21+2000]
	134 Move X22, [X22+3000]
	135 Move X23, [X23+3672]
	136 Move X24, [X24+3512]
	137 Move X27, X31
	138 And X8, X8, 0
	139 Add X29, X20, 32
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X8, [X31+72]
	142 Move X25, [X29]
	143 Move X8, [X8+16]
	144 Compare X8, 0
	145 JumpIfEqual {164}
	146 Compare X25, 0
	147 JumpIfEqual {203}
	148 Move X0, X25
	149 Move X1, X31
	150 Call IPAddress.get_AddressFamily, X0
	151 Move X8, [X31+72]
	152 Move W8, [X8+40]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, [X28]
	155 Call 0x1C17F10
	156 Move X26, X0
	157 Move X1, X25
	158 Move W2, W19
	159 Move X3, X31
	160 Call IPEndPoint..ctor, X0, X1, X2
	161 Move X0, [X31+72]
	162 Move X1, X26
	163 Call TcpClient.Connect, X0, X1
	164 Compare X25, 0
	165 JumpIfEqual {204}
	166 Move X0, X25
	167 Move X1, X31
	168 Call IPAddress.get_AddressFamily, X0
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, [X31+48]
	171 Compare X0, 0
	172 JumpIfEqual {185}
	173 Move X1, X25
	174 Move W2, W19
	175 Move X3, X31
	176 Call Socket.Connect, X0, X1, X2
	177 Move X8, [X31+48]
	178 Move X0, [X31+56]
	179 Move X9, [X31+72]
	180 Move [X9+16], X8
	181 Compare X0, 0
	182 JumpIfEqual {200}
	183 Move X1, X31
	184 Call Socket.Close, X0
	185 Move X0, [X31+56]
	186 Compare X0, 0
	187 JumpIfEqual {200}
	188 Move X1, X25
	189 Move W2, W19
	190 Move X3, X31
	191 Call Socket.Connect, X0, X1, X2
	192 Move X0, [X31+48]
	193 Move X8, [X31+56]
	194 Move X9, [X31+72]
	195 Move [X9+16], X8
	196 Compare X0, 0
	197 JumpIfEqual {200}
	198 Move X1, X31
	199 Call Socket.Close, X0
	200 Move X0, X25
	201 Move X1, X31
	202 Call IPAddress.get_AddressFamily, X0
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Move X26, X1
	206 Move X25, X0
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X0, X25
	209 Call 0x3EB2AD0
	210 Move X25, X0
	211 Move X0, X21
	212 Call 0x1C17D08
	213 Move X8, [X25]
	214 Move X1, [X8]
	215 Call 0x1C18270
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {338}
	220 Move X25, [X25]
	221 Call 0x3EB2AE0
	222 Move X0, X22
	223 Call 0x1C17D08
	224 Compare X25, 0
	225 JumpIfEqual {228}
	226 Move X8, [X25]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, X23
	229 Call 0x1C17D08
	230 Compare X25, 0
	231 JumpIfEqual {234}
	232 Move X8, [X25]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X0, X24
	235 Call 0x1C17D08
	236 Compare X25, 0
	237 JumpIfEqual {246}
	238 Move X8, [X25]
	239 Move W9, [X0+304]
	240 Move W10, [X8+304]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X8, [X8+200]
	243 Add X8, X8, X9
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move [X31+64], X25
	247 Move W8, [X20+24]
	248 Add X27, X27, 1
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, [X31+72]
	251 Move W9, 1
	252 Move [X8+40], W0
	253 Move X8, [X31+72]
	254 Move W9, 1
	255 Move [X8+24], W9
	256 Add X0, X31, 8
	257 Call 0x1BC84D0
	258 Move X0, X31
	259 Call Logging.get_On
	260 Move X20, [X31+160]
	261 Move X19, [X31+168]
	262 Move X22, [X31+144]
	263 Move X21, [X31+152]
	264 Move X24, [X31+128]
	265 Move X23, [X31+136]
	266 Move X26, [X31+112]
	267 Move X25, [X31+120]
	268 Move X28, [X31+96]
	269 Move X27, [X31+104]
	270 Move X29, [X31+80]
	271 Move X30, [X31+88]
	272 Add X31, X31, 176
	273 Return 
	274 Move X0, X20
	275 Move X1, X31
	276 Call "il2cpp_vm_object_is_inst", X0
	277 Move X19, X0
	278 Call 0x19913C0
	279 Move X8, [X19]
	280 Move X0, X19
	281 Move X9, [X8+744]
	282 Move X1, [X8+752]
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move X19, X0
	285 Move X0, 0xA51000
	286 Move X0, [X0+1208]
	287 Call 0x1C17D08
	288 Call 0x1C17F10
	289 Move X1, X19
	290 Move X2, X31
	291 Move X20, X0
	292 Call ObjectDisposedException..ctor, X0, X1
	293 Move X0, 0xA74000
	294 Move X0, [X0+3504]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Call 0x1C17DEC
	299 Move X0, 0xA2D000
	300 Move X0, [X0+1320]
	301 Call 0x1C17D08
	302 Call 0x1C17F10
	303 Move X19, X0
	304 Move X0, 0xA74000
	305 Move X0, [X0+3488]
	306 Call 0x1C17D08
	307 Move X1, X0
	308 Move X0, X19
	309 Move X2, X31
	310 Call ArgumentNullException..ctor, X0, X1
	311 Move X0, 0xA30000
	312 Move X0, [X0+1888]
	313 Call 0x1C17D08
	314 Call 0x1C17F10
	315 Move X19, X0
	316 Move X0, 0xA72000
	317 Move X0, [X0+1992]
	318 Call 0x1C17D08
	319 Move X1, X0
	320 Move X0, X19
	321 Move X2, X31
	322 Call ArgumentOutOfRangeException..ctor, X0, X1
	323 Move X0, 0xA66000
	324 Move X0, [X0+216]
	325 Call 0x1C17D08
	326 Call 0x1C17F10
	327 Move W1, 0x2748
	328 Move X19, X0
	329 Call SocketException..ctor, X0, X1
	330 Move X0, 0xA74000
	331 Move X0, [X0+3504]
	332 Call 0x1C17D08
	333 Move X1, X0
	334 Move X0, X19
	335 Call 0x1C17DEC
	336 Call 0x1C17F20
	337 Call 0x1C17F28
	338 Move W0, 8
	339 Call 0x3EB2AF0
	340 Move X8, [X25]
	341 Move [X0], X8
	342 Move X1, 0x7E9000
	343 Add X1, X1, 3672
	344 Move X2, X31
	345 Call 0x3EB2B00
	346 Move X0, X25
	347 Call 0x1C17F18
	348 Move X25, X0
	349 Move W26, W1
	350 Call 0x3EB2AE0
	351 Move X25, X0
	352 Move W26, W1
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X0, X25
	355 Call 0x3EB2AD0
	356 Move X19, X0
	357 Move X0, 0xA28000
	358 Move X0, [X0+2000]
	359 Call 0x1C17D08
	360 Move X8, [X19]
	361 Move X1, [X8]
	362 Call 0x1C18270
	363 Move TEMP, X0
	364 And TEMP, TEMP, 1
	365 Compare TEMP, 1
	366 JumpIfNotEqual {399}
	367 Move X19, [X19]
	368 Call 0x3EB2AE0
	369 Move X0, 0xA51000
	370 Move X0, [X0+3000]
	371 Call 0x1C17D08
	372 Compare X19, 0
	373 JumpIfEqual {376}
	374 Move X8, [X19]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move X0, 0xA72000
	377 Move X0, [X0+3672]
	378 Call 0x1C17D08
	379 Compare X19, 0
	380 JumpIfEqual {383}
	381 Move X8, [X19]
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move X0, 0xA31000
	384 Move X0, [X0+3512]
	385 Call 0x1C17D08
	386 Compare X19, 0
	387 JumpIfEqual {396}
	388 Move X8, [X19]
	389 Move W9, [X0+304]
	390 Move W10, [X8+304]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X8, [X8+200]
	393 Add X8, X8, X9
	394 NotImplemented "Instruction LDUR not yet implemented."
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move [X31+64], X19
	397 Move X0, X19
	398 Call 0x1C17F18
	399 Move W0, 8
	400 Call 0x3EB2AF0
	401 Move X8, [X19]
	402 Move [X0], X8
	403 Move X1, 0x7E9000
	404 Add X1, X1, 3672
	405 Move X2, X31
	406 Call 0x3EB2B00
	407 Move X25, X0
	408 Move W26, W1
	409 Move X26, X1
	410 Move X25, X0
	411 Call 0x3EB2AE0
	412 Move W8, 1
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move X0, X25
	415 Call 0x3EB2AD0
	416 Move X8, [X0]
	417 Move [X31+8], X8
	418 Call 0x3EB2AE0
	419 Move X25, X0
	420 Add X0, X31, 8
	421 Call 0x1BC84D0
	422 Move X0, X25
	423 Call 0x1D2D690
	424 Call 0x1991590

Method: System.Void Connect(System.Net.IPEndPoint remoteEP)

Disassembly:
	0x036CC53C CBZ X0, 0x36CC7F4
	0x036CC540 LDR W8, [X0 + 0x18]
	0x036CC544 CMP W8, 0x0
	0x036CC548 B.LE 0x36CC724
	0x036CC54C CMP W26, 0xA
	0x036CC550 B.EQ 0x36CC634
	0x036CC554 CMP W8, 0x1
	0x036CC558 B.NE 0x36CC584
	0x036CC55C LDR X2, [X27]
	0x036CC560 MOV W1, W31
	0x036CC564 BL 0x301BCCC
	0x036CC568 MOV X21, X0
	0x036CC56C MOV X0, X31
	0x036CC570 BL 0x33E3C68
	0x036CC574 CMP X0, X21
	0x036CC578 B.EQ 0x36CC724
	0x036CC57C LDR X0, [X19 + 0x20]
	0x036CC580 CBZ X0, 0x36CC808
	0x036CC584 LDR X1, [X22]
	0x036CC588 ADD X8, X31, 0x18
	0x036CC58C BL 0x301CB58
	0x036CC590 LDUR V0, [X31 + 0x18]
	0x036CC594 LDR X8, [X31 + 0x28]
	0x036CC598 ADD W26, W26, 0x1
	0x036CC59C STR V0, [X31 + 0x3]
	0x036CC5A0 STR X8, [X31 + 0x40]
	0x036CC5A4 LDR X1, [X25]
	0x036CC5A8 ADD X0, X31, 0x30
	0x036CC5AC BL 0x2BC4350
	0x036CC5B0 TBZ X0, 0x0, 0x36CC5D8
	0x036CC5B4 LDR X0, [X23]
	0x036CC5B8 LDR X21, [X31 + 0x40]
	0x036CC5BC LDR W8, [X0 + 0xE0]
	0x036CC5C0 CBNZ W8, 0x36CC5C8
	0x036CC5C4 BL 0x1C16DFC
	0x036CC5C8 MOV X0, X21
	0x036CC5CC MOV X1, X31
	0x036CC5D0 BL 0x36C59FC
	0x036CC5D4 B 0x36CC5A4
	0x036CC5D8 MOV X21, X31
	0x036CC5DC MOVZ W29, 0xF
	0x036CC5E0 LDR X1, [X24]
	0x036CC5E4 ADD X0, X31, 0x30
	0x036CC5E8 BL 0x2BC434C
	0x036CC5EC CBNZ X21, 0x36CC7F8
	0x036CC5F0 CMP W29, 0xF
	0x036CC5F4 B.EQ 0x36CC5FC
	0x036CC5F8 CBNZ W29, 0x36CC754
	0x036CC5FC LDR X0, [X19 + 0x20]
	0x036CC600 STRB W28, [X19 + 0x30]
	0x036CC604 MOVZ W1, 0x64
	0x036CC608 MOV X2, X31
	0x036CC60C BL 0x33DEF0C
	0x036CC610 B 0x36CC538
	0x036CC614 B 0x36CC618
	0x036CC618 CMP W1, 0x1
	0x036CC61C B.NE 0x36CC7D4
	0x036CC620 BL 0x3EB1AD0
	0x036CC624 LDR X21, [X0]
	0x036CC628 BL 0x3EB1AE0
	0x036CC62C MOV W29, W31
	0x036CC630 B 0x36CC5E0
	0x036CC634 ADRP X21, 0xA73000
	0x036CC638 LDR X21, [X21 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, X31
	006 Move X20, X1
	007 Call Logging.get_On
	008 Move W8, [X19+44]
	009 Compare W8, 0
	010 JumpIfNotEqual {27}
	011 Compare X20, 0
	012 JumpIfEqual {52}
	013 Move X0, [X19+16]
	014 Compare X0, 0
	015 JumpIfEqual {70}
	016 Move X1, X20
	017 Move X2, X31
	018 Call Socket.Connect, X0, X1
	019 Move W8, 1
	020 Move [X19+24], W8
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X0, X31
	024 Move X30, [X31+32]
	025 Call Logging.get_On
	026 Return 
	027 Move X0, X19
	028 Move X1, X31
	029 Call "il2cpp_vm_object_is_inst", X0
	030 Move X19, X0
	031 Call 0x19913C0
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+744]
	035 Move X1, [X8+752]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X19, X0
	038 Move X0, 0xA51000
	039 Move X0, [X0+1208]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X1, X19
	043 Move X2, X31
	044 Move X20, X0
	045 Call ObjectDisposedException..ctor, X0, X1
	046 Move X0, 0xA74000
	047 Move X0, [X0+3512]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X20
	051 Call 0x1C17DEC
	052 Move X0, 0xA2D000
	053 Move X0, [X0+1320]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Move X0, 0xA73000
	058 Move X0, [X0+4032]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call ArgumentNullException..ctor, X0, X1
	064 Move X0, 0xA74000
	065 Move X0, [X0+3512]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC
	070 Call 0x1C17F20

Method: System.IAsyncResult BeginConnect(System.String host, System.Int32 port, System.AsyncCallback requestCallback, System.Object state)

Disassembly:
	0x036CC63C LDR X0, [X21]
	0x036CC640 LDR W8, [X0 + 0xE0]
	0x036CC644 CBNZ W8, 0x36CC650
	0x036CC648 BL 0x1C16DFC
	0x036CC64C LDR X0, [X21]
	0x036CC650 LDR X8, [X0 + 0xB8]
	0x036CC654 LDRB W8, [X8]
	0x036CC658 CBZ W8, 0x36CC724
	0x036CC65C ADRP X8, 0xA27000
	0x036CC660 LDR X8, [X8 + 0x8F0]
	0x036CC664 LDR X0, [X8]
	0x036CC668 BL 0x1C16F10
	0x036CC66C MOV X21, X0
	0x036CC670 MOV X1, X31
	0x036CC674 BL 0x3231AC4
	0x036CC678 CBZ X21, 0x36CC86C
	0x036CC67C ADRP X8, 0xA73000
	0x036CC680 LDR X8, [X8 + 0xE58]
	0x036CC684 LDR X1, [X8]
	0x036CC688 MOV X0, X21
	0x036CC68C MOV X2, X31
	0x036CC690 BL 0x32338A8
	0x036CC694 LDR X0, [X19 + 0x20]
	0x036CC698 CBZ X0, 0x36CC870
	0x036CC69C LDR X1, [X22]
	0x036CC6A0 ADD X8, X31, 0x18
	0x036CC6A4 BL 0x301CB58

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, X0
	008 Move X0, X31
	009 Move X19, X4
	010 Move X20, X3
	011 Move W21, W2
	012 Move X22, X1
	013 Call Logging.get_On
	014 Move X0, [X23+16]
	015 Compare X0, 0
	016 JumpIfEqual {34}
	017 Move X1, X22
	018 Move W2, W21
	019 Move X3, X20
	020 Move X4, X19
	021 Move X5, X31
	022 Call Socket.BeginConnect, X0, X1, X2, X3, X4
	023 Move X19, X0
	024 Move X0, X31
	025 Call Logging.get_On
	026 Move X0, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Return X0
	034 Call 0x1C17F20

Method: System.IAsyncResult BeginConnect(System.Net.IPAddress address, System.Int32 port, System.AsyncCallback requestCallback, System.Object state)

Disassembly:
	0x036CC6A8 LDUR V0, [X31 + 0x18]
	0x036CC6AC LDR X8, [X31 + 0x28]
	0x036CC6B0 ADRP X26, 0xA73000
	0x036CC6B4 LDR X26, [X26 + 0xE50]
	0x036CC6B8 STR V0, [X31 + 0x3]
	0x036CC6BC STR X8, [X31 + 0x40]
	0x036CC6C0 ADRP X27, 0xA73000
	0x036CC6C4 LDR X27, [X27 + 0xE48]
	0x036CC6C8 LDR X1, [X25]
	0x036CC6CC ADD X0, X31, 0x30
	0x036CC6D0 BL 0x2BC4350
	0x036CC6D4 TBZ X0, 0x0, 0x36CC730
	0x036CC6D8 LDR X22, [X31 + 0x40]
	0x036CC6DC LDR X1, [X26]
	0x036CC6E0 MOV X0, X21
	0x036CC6E4 MOV X2, X31
	0x036CC6E8 BL 0x32338A8
	0x036CC6EC LDR X0, [X19 + 0x28]
	0x036CC6F0 CBZ X0, 0x36CC800
	0x036CC6F4 LDR X2, [X27]
	0x036CC6F8 MOV X1, X22
	0x036CC6FC BL 0x2AA5018
	0x036CC700 CBZ X0, 0x36CC804
	0x036CC704 LDR X8, [X0]
	0x036CC708 LDP X9, X1, [X8 + 0x168]
	0x036CC70C BLR X9
	0x036CC710 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, X0
	008 Move X0, X31
	009 Move X19, X4
	010 Move X20, X3
	011 Move W21, W2
	012 Move X22, X1
	013 Call Logging.get_On
	014 Move X0, [X23+16]
	015 Compare X0, 0
	016 JumpIfEqual {34}
	017 Move X1, X22
	018 Move W2, W21
	019 Move X3, X20
	020 Move X4, X19
	021 Move X5, X31
	022 Call Socket.BeginConnect, X0, X1, X2, X3, X4
	023 Move X19, X0
	024 Move X0, X31
	025 Call Logging.get_On
	026 Move X0, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Void EndConnect(System.IAsyncResult asyncResult)

Disassembly:
	0x036CC714 MOV X0, X21
	0x036CC718 MOV X2, X31
	0x036CC71C BL 0x32338A8
	0x036CC720 B 0x36CC6C8
	0x036CC724 MOV X21, X31
	0x036CC728 MOVZ W29, 0x2
	0x036CC72C B 0x36CC758
	0x036CC730 MOV X22, X31
	0x036CC734 MOVZ W29, 0x9
	0x036CC738 LDR X1, [X24]
	0x036CC73C ADD X0, X31, 0x30
	0x036CC740 BL 0x2BC434C
	0x036CC744 CBNZ X22, 0x36CC874
	0x036CC748 CMP W29, 0x9
	0x036CC74C B.EQ 0x36CC814
	0x036CC750 CBZ W29, 0x36CC814
	0x036CC754 MOV X21, X31
	0x036CC758 LDRB W8, [X31 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, X31
	006 Move X20, X1
	007 Call Logging.get_On
	008 Move X0, [X19+16]
	009 Compare X0, 0
	010 JumpIfEqual {22}
	011 Move X1, X20
	012 Move X2, X31
	013 Call Socket.EndConnect, X0, X1
	014 Move W8, 1
	015 Move [X19+24], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X0, X31
	019 Move X30, [X31+32]
	020 Call Logging.get_On
	021 Return 
	022 Call 0x1C17F20

Method: System.Threading.Tasks.Task ConnectAsync(System.Net.IPAddress address, System.Int32 port)

Disassembly:
	0x036CC75C CBZ W8, 0x36CC76C
	0x036CC760 MOV X0, X20
	0x036CC764 MOV X1, X31
	0x036CC768 BL 0x33E14E4
	0x036CC76C CBNZ X21, 0x36CC80C
	0x036CC770 ORR W8, W29, 0x2
	0x036CC774 CMP W8, 0x2
	0x036CC778 B.NE 0x36CC7B0
	0x036CC77C LDR X0, [X23]
	0x036CC780 LDR X19, [X19 + 0x10]
	0x036CC784 LDR W8, [X0 + 0xE0]
	0x036CC788 CBNZ W8, 0x36CC790
	0x036CC78C BL 0x1C16DFC
	0x036CC790 ADD X1, X31, 0x4C
	0x036CC794 MOV X0, X19
	0x036CC798 MOV X2, X31
	0x036CC79C BL 0x36C5684
	0x036CC7A0 LDR W8, [X31 + 0x4C]
	0x036CC7A4 CMP W8, 0x0
	0x036CC7A8 CSET W8, EQ
	0x036CC7AC B 0x36CC7B0
	0x036CC7B0 LDP X20, X19, [X31 + 0xA0]
	0x036CC7B4 LDP X22, X21, [X31 + 0x90]
	0x036CC7B8 LDP X24, X23, [X31 + 0x80]
	0x036CC7BC LDP X26, X25, [X31 + 0x70]
	0x036CC7C0 LDP X28, X27, [X31 + 0x60]
	0x036CC7C4 LDP X29, X30, [X31 + 0x50]
	0x036CC7C8 AND W0, W8, 0x1
	0x036CC7CC ADD X31, X31, 0xB0
	0x036CC7D0 RET
	0x036CC7D4 STP X0, X1, [X31 + 0x8]
	0x036CC7D8 MOV X21, X31
	0x036CC7DC LDR X1, [X24]
	0x036CC7E0 ADD X0, X31, 0x30
	0x036CC7E4 BL 0x2BC434C
	0x036CC7E8 CBZ X21, 0x36CC934
	0x036CC7EC MOV X0, X21
	0x036CC7F0 BL 0x1C16F18
	0x036CC7F4 BL 0x1C16F20
	0x036CC7F8 MOV X0, X21
	0x036CC7FC BL 0x1C16F18
	0x036CC800 BL 0x1C16F20
	0x036CC804 BL 0x1C16F20
	0x036CC808 BL 0x1C16F20
	0x036CC80C MOV X0, X21
	0x036CC810 BL 0x1C16F18
	0x036CC814 MOV X0, X21
	0x036CC818 MOV X1, X31
	0x036CC81C BL 0x3233888
	0x036CC820 LDR X8, [X21]
	0x036CC824 LDP X9, X1, [X8 + 0x168]
	0x036CC828 MOV X0, X21
	0x036CC82C BLR X9
	0x036CC830 MOV X21, X0
	0x036CC834 ADRP X0, 0xA27000
	0x036CC838 LDR X0, [X0 + 0x7D0]
	0x036CC83C BL 0x1C16D08
	0x036CC840 BL 0x1C16F10
	0x036CC844 MOV X22, X0
	0x036CC848 MOV X1, X21
	0x036CC84C MOV X2, X31
	0x036CC850 BL 0x33B2C70
	0x036CC854 ADRP X0, 0xA73000
	0x036CC858 LDR X0, [X0 + 0xE60]
	0x036CC85C BL 0x1C16D08
	0x036CC860 MOV X1, X0
	0x036CC864 MOV X0, X22
	0x036CC868 BL 0x1C16DEC
	0x036CC86C BL 0x1C16F20
	0x036CC870 BL 0x1C16F20
	0x036CC874 MOV X0, X22
	0x036CC878 BL 0x1C16F18
	0x036CC87C STP X0, X1, [X31 + 0x8]
	0x036CC880 B 0x36CC7DC
	0x036CC884 B 0x36CC930
	0x036CC888 B 0x36CC930
	0x036CC88C B 0x36CC930
	0x036CC890 B 0x36CC930
	0x036CC894 B 0x36CC930
	0x036CC898 B 0x36CC930
	0x036CC89C B 0x36CC930
	0x036CC8A0 B 0x36CC930
	0x036CC8A4 B 0x36CC930
	0x036CC8A8 B 0x36CC930
	0x036CC8AC B 0x36CC930
	0x036CC8B0 B 0x36CC930
	0x036CC8B4 B 0x36CC930
	0x036CC8B8 B 0x36CC930
	0x036CC8BC B 0x36CC8D4
	0x036CC8C0 B 0x36CC8D4
	0x036CC8C4 B 0x36CC8D4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xD15000
	011 Move X22, 0xA29000
	012 Move W8, [X23+2634]
	013 Move X22, [X22+1976]
	014 Move W19, W2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0xA73000
	022 Move X0, [X0+4056]
	023 Call 0x1C17CF4
	024 Move X0, 0xA74000
	025 Move X0, [X0+3520]
	026 Call 0x1C17CF4
	027 Move X0, 0xA74000
	028 Move X0, [X0+3528]
	029 Call 0x1C17CF4
	030 Move X0, 0xA29000
	031 Move X0, [X0+1976]
	032 Call 0x1C17CF4
	033 Move X0, 0xA74000
	034 Move X0, [X0+3536]
	035 Call 0x1C17CF4
	036 Move X0, 0xA74000
	037 Move X0, [X0+3544]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+2634], W8
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X23, 0xD0D000
	047 Move W8, [X23+3867]
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, 0xA29000
	051 Move X0, [X0+1976]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+3867], W8
	055 Move X0, [X22]
	056 Move X26, 0xA74000
	057 Move X23, 0xA74000
	058 Move X25, 0xA73000
	059 Move X24, 0xA74000
	060 Move W8, [X0+224]
	061 Move X26, [X26+3520]
	062 Move X23, [X23+3536]
	063 Move X25, [X25+4056]
	064 Move X24, [X24+3544]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X22]
	069 Move X8, [X0+184]
	070 Move X0, [X26]
	071 Move X22, [X8+40]
	072 Call 0x1C17F10
	073 Move X2, [X23]
	074 Move X1, X21
	075 Move X3, X31
	076 Move X23, X0
	077 Call 0x2D42148, X0, X1, X2
	078 Move X0, [X25]
	079 Call 0x1C17F10
	080 Move X2, [X24]
	081 Move X1, X21
	082 Move X3, X31
	083 Move X24, X0
	084 Call Action`1<Object>..ctor, X0, X1, X2
	085 Compare X22, 0
	086 JumpIfEqual {107}
	087 Move X8, 0xA74000
	088 Move X8, [X8+3528]
	089 Move X0, X22
	090 Move X1, X23
	091 Move X2, X24
	092 Move X6, [X8]
	093 Move X3, X20
	094 Move W4, W19
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X22, [X31+48]
	098 Move X21, [X31+56]
	099 Move X24, [X31+32]
	100 Move X23, [X31+40]
	101 Move X26, [X31+16]
	102 Move X25, [X31+24]
	103 Move X5, X31
	104 Move X30, [X31+80]
	105 Call 0x229C348, X0, X1, X2, X3, X4, X5
	106 Return X0
	107 Call 0x1C17F20

Method: System.Threading.Tasks.Task ConnectAsync(System.String host, System.Int32 port)

Disassembly:
	0x036CC8C8 B 0x36CC8D4
	0x036CC8CC B 0x36CC8D4
	0x036CC8D0 B 0x36CC8D4
	0x036CC8D4 MOV X8, X1
	0x036CC8D8 CMP W8, 0x1
	0x036CC8DC STP X0, X1, [X31 + 0x8]
	0x036CC8E0 B.NE 0x36CC8FC
	0x036CC8E4 LDR X0, [X31 + 0x8]
	0x036CC8E8 BL 0x3EB1AD0
	0x036CC8EC LDR X22, [X0]
	0x036CC8F0 BL 0x3EB1AE0
	0x036CC8F4 MOV W29, W31
	0x036CC8F8 B 0x36CC738
	0x036CC8FC MOV X22, X31
	0x036CC900 LDR X1, [X24]
	0x036CC904 ADD X0, X31, 0x30
	0x036CC908 BL 0x2BC434C
	0x036CC90C CBZ X22, 0x36CC934
	0x036CC910 MOV X0, X22
	0x036CC914 BL 0x1C16F18
	0x036CC918 STP X0, X1, [X31 + 0x8]
	0x036CC91C B 0x36CC900
	0x036CC920 B 0x36CC930
	0x036CC924 B 0x36CC930
	0x036CC928 B 0x36CC930
	0x036CC92C B 0x36CC930
	0x036CC930 STP X0, X1, [X31 + 0x8]
	0x036CC934 LDR X8, [X31 + 0x10]
	0x036CC938 CMP W8, 0x1
	0x036CC93C B.NE 0x36CC958
	0x036CC940 LDR X0, [X31 + 0x8]
	0x036CC944 BL 0x3EB1AD0
	0x036CC948 LDR X21, [X0]
	0x036CC94C BL 0x3EB1AE0
	0x036CC950 MOV W29, W31
	0x036CC954 B 0x36CC758
	0x036CC958 MOV X21, X31
	0x036CC95C B 0x36CC964
	0x036CC960 STR X0, [X31 + 0x8]
	0x036CC964 LDRB W8, [X31 + 0x48]
	0x036CC968 CBZ W8, 0x36CC978
	0x036CC96C MOV X0, X20
	0x036CC970 MOV X1, X31
	0x036CC974 BL 0x33E14E4
	0x036CC978 CBNZ X21, 0x36CC984
	0x036CC97C LDR X0, [X31 + 0x8]
	0x036CC980 BL 0x1D2C690
	0x036CC984 MOV X0, X21
	0x036CC988 BL 0x1C16F18
	0x036CC98C BL 0x1990590
	0x036CC990 SUB X31, X31, 0x70
	0x036CC994 STP X30, X21, [X31 + 0x50]
	0x036CC998 STP X20, X19, [X31 + 0x60]
	0x036CC99C ADRP X20, 0xD14000
	0x036CC9A0 LDRB W8, [X20 + 0xA55]
	0x036CC9A4 MOV X19, X0
	0x036CC9A8 STR X0, [X31 + 0x48]
	0x036CC9AC TBNZ X8, 0x0, 0x36CCA00
	0x036CC9B0 ADRP X0, 0xA73000
	0x036CC9B4 LDR X0, [X0 + 0xE68]
	0x036CC9B8 BL 0x1C16CF4
	0x036CC9BC ADRP X0, 0xA68000
	0x036CC9C0 LDR X0, [X0 + 0x628]
	0x036CC9C4 BL 0x1C16CF4
	0x036CC9C8 ADRP X0, 0xA68000
	0x036CC9CC LDR X0, [X0 + 0x630]
	0x036CC9D0 BL 0x1C16CF4
	0x036CC9D4 ADRP X0, 0xA68000
	0x036CC9D8 LDR X0, [X0 + 0x650]
	0x036CC9DC BL 0x1C16CF4
	0x036CC9E0 ADRP X0, 0xA73000
	0x036CC9E4 LDR X0, [X0 + 0x10]
	0x036CC9E8 BL 0x1C16CF4
	0x036CC9EC ADRP X0, 0xA59000
	0x036CC9F0 LDR X0, [X0 + 0x808]
	0x036CC9F4 BL 0x1C16CF4
	0x036CC9F8 MOVZ W8, 0x1
	0x036CC9FC STRB W8, [X20 + 0xA55]
	0x036CCA00 STR X31, [X31 + 0x38]
	0x036CCA04 STRB W31, [X31 + 0x34]
	0x036CCA08 MOV X20, X19
	0x036CCA0C LDR X8, [X20 + 0x20]!
	0x036CCA10 CBNZ X8, 0x36CCA48
	0x036CCA14 ADRP X8, 0xA68000
	0x036CCA18 LDR X8, [X8 + 0x650]
	0x036CCA1C LDR X0, [X8]
	0x036CCA20 BL 0x1C16F10
	0x036CCA24 ADRP X8, 0xA68000
	0x036CCA28 LDR X8, [X8 + 0x630]
	0x036CCA2C MOV X21, X0
	0x036CCA30 LDR X1, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xD15000
	011 Move X22, 0xA29000
	012 Move W8, [X23+2635]
	013 Move X22, [X22+1976]
	014 Move W19, W2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0xA73000
	022 Move X0, [X0+4056]
	023 Call 0x1C17CF4
	024 Move X0, 0xA74000
	025 Move X0, [X0+3552]
	026 Call 0x1C17CF4
	027 Move X0, 0xA74000
	028 Move X0, [X0+3560]
	029 Call 0x1C17CF4
	030 Move X0, 0xA29000
	031 Move X0, [X0+1976]
	032 Call 0x1C17CF4
	033 Move X0, 0xA74000
	034 Move X0, [X0+3568]
	035 Call 0x1C17CF4
	036 Move X0, 0xA74000
	037 Move X0, [X0+3544]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+2635], W8
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X23, 0xD0D000
	047 Move W8, [X23+3867]
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, 0xA29000
	051 Move X0, [X0+1976]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+3867], W8
	055 Move X0, [X22]
	056 Move X26, 0xA74000
	057 Move X23, 0xA74000
	058 Move X25, 0xA73000
	059 Move X24, 0xA74000
	060 Move W8, [X0+224]
	061 Move X26, [X26+3552]
	062 Move X23, [X23+3568]
	063 Move X25, [X25+4056]
	064 Move X24, [X24+3544]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X22]
	069 Move X8, [X0+184]
	070 Move X0, [X26]
	071 Move X22, [X8+40]
	072 Call 0x1C17F10
	073 Move X2, [X23]
	074 Move X1, X21
	075 Move X3, X31
	076 Move X23, X0
	077 Call 0x2D42148, X0, X1, X2
	078 Move X0, [X25]
	079 Call 0x1C17F10
	080 Move X2, [X24]
	081 Move X1, X21
	082 Move X3, X31
	083 Move X24, X0
	084 Call Action`1<Object>..ctor, X0, X1, X2
	085 Compare X22, 0
	086 JumpIfEqual {107}
	087 Move X8, 0xA74000
	088 Move X8, [X8+3560]
	089 Move X0, X22
	090 Move X1, X23
	091 Move X2, X24
	092 Move X6, [X8]
	093 Move X3, X20
	094 Move W4, W19
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X22, [X31+48]
	098 Move X21, [X31+56]
	099 Move X24, [X31+32]
	100 Move X23, [X31+40]
	101 Move X26, [X31+16]
	102 Move X25, [X31+24]
	103 Move X5, X31
	104 Move X30, [X31+80]
	105 Call 0x229C348, X0, X1, X2, X3, X4, X5
	106 Return X0
	107 Call 0x1C17F20

Method: System.Net.Sockets.NetworkStream GetStream()

Disassembly:
	0x036CCA34 BL 0x301B7C4
	0x036CCA38 MOV X0, X20
	0x036CCA3C MOV X1, X21
	0x036CCA40 MOV X2, X31
	0x036CCA44 BL 0x1C24138
	0x036CCA48 ADD X8, X31, 0x48
	0x036CCA4C ADD X9, X31, 0x38
	0x036CCA50 ADD X10, X31, 0x34
	0x036CCA54 ADD X11, X31, 0x44
	0x036CCA58 STRB W31, [X31 + 0x44]
	0x036CCA5C STP X31, X8, [X31 + 0x8]
	0x036CCA60 STP X9, X10, [X31 + 0x18]
	0x036CCA64 STR X11, [X31 + 0x28]
	0x036CCA68 ADD X1, X31, 0x44
	0x036CCA6C MOV X0, X19
	0x036CCA70 MOV X2, X31
	0x036CCA74 BL 0x32BF948
	0x036CCA78 ADD X0, X31, 0x8
	0x036CCA7C BL 0x1BC7564
	0x036CCA80 LDP X20, X19, [X31 + 0x60]
	0x036CCA84 LDP X30, X21, [X31 + 0x50]
	0x036CCA88 ADD X31, X31, 0x70
	0x036CCA8C RET
	0x036CCA90 CMP W1, 0x1
	0x036CCA94 MOV X19, X0
	0x036CCA98 B.NE 0x36CCAB8
	0x036CCA9C MOV X0, X19
	0x036CCAA0 BL 0x3EB1AD0
	0x036CCAA4 LDR X8, [X0]
	0x036CCAA8 STR X8, [X31 + 0x8]
	0x036CCAAC BL 0x3EB1AE0
	0x036CCAB0 B 0x36CCA78
	0x036CCAB4 MOV X19, X0
	0x036CCAB8 ADD X0, X31, 0x8
	0x036CCABC BL 0x1BC7564
	0x036CCAC0 MOV X0, X19
	0x036CCAC4 BL 0x1D2C690
	0x036CCAC8 BL 0x1990590
	0x036CCACC STR X30, [X31 - 0x30]!
	0x036CCAD0 STP X22, X21, [X31 + 0x10]
	0x036CCAD4 STP X20, X19, [X31 + 0x20]
	0x036CCAD8 ADRP X19, 0xD14000
	0x036CCADC LDRB W8, [X19 + 0xA56]
	0x036CCAE0 MOV X20, X0
	0x036CCAE4 TBNZ X8, 0x0, 0x36CCB2C
	0x036CCAE8 ADRP X0, 0xA73000
	0x036CCAEC LDR X0, [X0 + 0xE70]
	0x036CCAF0 BL 0x1C16CF4
	0x036CCAF4 ADRP X0, 0xA73000
	0x036CCAF8 LDR X0, [X0 + 0xE78]
	0x036CCAFC BL 0x1C16CF4
	0x036CCB00 ADRP X0, 0xA73000
	0x036CCB04 LDR X0, [X0 + 0xE80]
	0x036CCB08 BL 0x1C16CF4
	0x036CCB0C ADRP X0, 0xA68000
	0x036CCB10 LDR X0, [X0 + 0x638]
	0x036CCB14 BL 0x1C16CF4
	0x036CCB18 ADRP X0, 0xA73000
	0x036CCB1C LDR X0, [X0 + 0x10]
	0x036CCB20 BL 0x1C16CF4
	0x036CCB24 MOVZ W8, 0x1
	0x036CCB28 STRB W8, [X19 + 0xA56]
	0x036CCB2C LDR X19, [X20 + 0x20]
	0x036CCB30 STRB W31, [X31 + 0xC]
	0x036CCB34 ADD X1, X31, 0xC
	0x036CCB38 MOV X0, X19
	0x036CCB3C MOV X2, X31
	0x036CCB40 BL 0x33DE64C
	0x036CCB44 MOV X0, X31
	0x036CCB48 BL 0x33E3C68
	0x036CCB4C MOV X21, X0
	0x036CCB50 LDR X0, [X20 + 0x20]
	0x036CCB54 CBZ X0, 0x36CCC30
	0x036CCB58 ADRP X8, 0xA73000
	0x036CCB5C LDR X8, [X8 + 0xE80]
	0x036CCB60 LDR X2, [X8]
	0x036CCB64 MOV X1, X21
	0x036CCB68 BL 0x301D7A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD15000
	006 Move W8, [X20+2636]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA72000
	013 Move X0, [X0+2280]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2636], W8
	017 Move X0, X31
	018 Call Logging.get_On
	019 Move W8, [X19+44]
	020 Compare W8, 0
	021 JumpIfNotEqual {49}
	022 Move X20, [X19+16]
	023 Compare X20, 0
	024 JumpIfEqual {68}
	025 Move W8, [X20+82]
	026 Compare W8, 0
	027 JumpIfEqual {69}
	028 Move X8, [X19+32]
	029 Compare X8, 0
	030 JumpIfNotEqual {41}
	031 Move X8, 0xA72000
	032 Move X8, [X8+2280]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move W2, 1
	036 Move X1, X20
	037 Move X3, X31
	038 Move X21, X0
	039 Call NetworkStream..ctor, X0, X1, X2
	040 Move [X19+32], X21
	041 Move X0, X31
	042 Call Logging.get_On
	043 Move X0, [X19+32]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Move X0, X19
	050 Move X1, X31
	051 Call "il2cpp_vm_object_is_inst", X0
	052 Move X19, X0
	053 Call 0x19913C0
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+744]
	057 Move X1, [X8+752]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X19, X0
	060 Move X0, 0xA51000
	061 Move X0, [X0+1208]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X1, X19
	065 Move X2, X31
	066 Move X20, X0
	067 Call ObjectDisposedException..ctor, X0, X1
	068 Call 0x1C17F20
	069 Move X0, 0xA74000
	070 Move X0, [X0+1760]
	071 Call 0x1C17D08
	072 Move X1, X31
	073 Call SR.GetString, X0
	074 Move X19, X0
	075 Move X0, 0xA28000
	076 Move X0, [X0+1456]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X19
	080 Move X2, X31
	081 Move X20, X0
	082 Call InvalidOperationException..ctor, X0, X1
	083 Move X0, 0xA74000
	084 Move X0, [X0+3576]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Call 0x1C17DEC

Method: System.Void Close()

Disassembly:
	0x036CCB6C ADRP X22, 0xA73000
	0x036CCB70 LDR X22, [X22 + 0x10]
	0x036CCB74 LDR X0, [X22]
	0x036CCB78 LDR W8, [X0 + 0xE0]
	0x036CCB7C CBNZ W8, 0x36CCB88
	0x036CCB80 BL 0x1C16DFC
	0x036CCB84 LDR X0, [X22]
	0x036CCB88 LDR X8, [X0 + 0xB8]
	0x036CCB8C LDRB W8, [X8]
	0x036CCB90 CBZ W8, 0x36CCBD4
	0x036CCB94 LDR X0, [X20 + 0x20]
	0x036CCB98 CBZ X0, 0x36CCC34
	0x036CCB9C ADRP X8, 0xA73000
	0x036CCBA0 LDR X8, [X8 + 0xE78]
	0x036CCBA4 LDR X2, [X8]
	0x036CCBA8 MOV X1, X21
	0x036CCBAC BL 0x301CD00
	0x036CCBB0 ADDS W31, W0, 0x1
	0x036CCBB4 B.NE 0x36CCBD4
	0x036CCBB8 LDR X0, [X20 + 0x28]
	0x036CCBBC CBZ X0, 0x36CCC3C
	0x036CCBC0 ADRP X8, 0xA73000
	0x036CCBC4 LDR X8, [X8 + 0xE70]
	0x036CCBC8 LDR X2, [X8]
	0x036CCBCC MOV X1, X21
	0x036CCBD0 BL 0x2AA64F8
	0x036CCBD4 LDRB W8, [X20 + 0x30]
	0x036CCBD8 CBZ W8, 0x36CCBEC
	0x036CCBDC LDR X0, [X20 + 0x20]
	0x036CCBE0 CBZ X0, 0x36CCC38
	0x036CCBE4 LDR W8, [X0 + 0x18]
	0x036CCBE8 CBZ W8, 0x36CCBF4
	0x036CCBEC MOV X21, X31
	0x036CCBF0 B 0x36CCC00
	0x036CCBF4 MOV X1, X31
	0x036CCBF8 BL 0x33E2640
	0x036CCBFC MOV X21, X31
	0x036CCC00 LDRB W8, [X31 + 0xC]
	0x036CCC04 CBZ W8, 0x36CCC14
	0x036CCC08 MOV X0, X19
	0x036CCC0C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD15000
	006 Move X20, 0xA28000
	007 Move W8, [X21+2637]
	008 Move X20, [X20+3584]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA28000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2637], W8
	019 Move X0, X31
	020 Call Logging.get_On
	021 Move X8, [X19]
	022 Move X1, [X20]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call Logging.get_On
	048 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x036CCC10 BL 0x33E14E4
	0x036CCC14 CBNZ X21, 0x36CCC28
	0x036CCC18 LDP X20, X19, [X31 + 0x20]
	0x036CCC1C LDP X22, X21, [X31 + 0x10]
	0x036CCC20 LDR X30, [X31], #0x30
	0x036CCC24 RET
	0x036CCC28 MOV X0, X21
	0x036CCC2C BL 0x1C16F18
	0x036CCC30 BL 0x1C16F20
	0x036CCC34 BL 0x1C16F20
	0x036CCC38 BL 0x1C16F20
	0x036CCC3C BL 0x1C16F20
	0x036CCC40 B 0x36CCC64
	0x036CCC44 B 0x36CCC64
	0x036CCC48 B 0x36CCC64
	0x036CCC4C B 0x36CCC64
	0x036CCC50 B 0x36CCC64
	0x036CCC54 B 0x36CCC64
	0x036CCC58 B 0x36CCC64
	0x036CCC5C B 0x36CCC64
	0x036CCC60 B 0x36CCC64
	0x036CCC64 MOV X20, X0
	0x036CCC68 CMP W1, 0x1
	0x036CCC6C B.NE 0x36CCC84
	0x036CCC70 MOV X0, X20
	0x036CCC74 BL 0x3EB1AD0
	0x036CCC78 LDR X21, [X0]
	0x036CCC7C BL 0x3EB1AE0
	0x036CCC80 B 0x36CCC00
	0x036CCC84 MOV X21, X31
	0x036CCC88 B 0x36CCC90
	0x036CCC8C MOV X20, X0
	0x036CCC90 LDRB W8, [X31 + 0xC]
	0x036CCC94 CBZ W8, 0x36CCCA4
	0x036CCC98 MOV X0, X19
	0x036CCC9C MOV X1, X31
	0x036CCCA0 BL 0x33E14E4
	0x036CCCA4 CBNZ X21, 0x36CCCB0
	0x036CCCA8 MOV X0, X20
	0x036CCCAC BL 0x1D2C690
	0x036CCCB0 MOV X0, X21
	0x036CCCB4 BL 0x1C16F18
	0x036CCCB8 BL 0x1990590
	0x036CCCBC STR X30, [X31 - 0x30]!
	0x036CCCC0 STP X22, X21, [X31 + 0x10]
	0x036CCCC4 STP X20, X19, [X31 + 0x20]
	0x036CCCC8 ADRP X21, 0xD14000
	0x036CCCCC ADRP X22, 0xA73000
	0x036CCCD0 ADRP X20, 0xA5B000
	0x036CCCD4 ADRP X19, 0xA73000
	0x036CCCD8 LDRB W8, [X21 + 0xA57]
	0x036CCCDC LDR X22, [X22 + 0xE88]
	0x036CCCE0 LDR X20, [X20 + 0xA08]
	0x036CCCE4 LDR X19, [X19 + 0x10]
	0x036CCCE8 TBNZ X8, 0x0, 0x36CCD18
	0x036CCCEC ADRP X0, 0xA73000
	0x036CCCF0 LDR X0, [X0 + 0x10]
	0x036CCCF4 BL 0x1C16CF4
	0x036CCCF8 ADRP X0, 0xA5B000
	0x036CCCFC LDR X0, [X0 + 0xA08]
	0x036CCD00 BL 0x1C16CF4
	0x036CCD04 ADRP X0, 0xA73000
	0x036CCD08 LDR X0, [X0 + 0xE88]
	0x036CCD0C BL 0x1C16CF4
	0x036CCD10 MOVZ W8, 0x1
	0x036CCD14 STRB W8, [X21 + 0xA57]
	0x036CCD18 LDR X0, [X22]
	0x036CCD1C MOV X1, X31
	0x036CCD20 BL 0x33C19D0
	0x036CCD24 LDR X1, [X20]
	0x036CCD28 MOV X2, X31
	0x036CCD2C BL 0x321BA08
	0x036CCD30 LDR X8, [X19]
	0x036CCD34 LDP X20, X19, [X31 + 0x20]
	0x036CCD38 LDP X22, X21, [X31 + 0x10]
	0x036CCD3C AND W9, W0, 0x1
	0x036CCD40 LDR X8, [X8 + 0xB8]
	0x036CCD44 STRB W9, [X8]
	0x036CCD48 LDR X30, [X31], #0x30
	0x036CCD4C RET
	0x036CCD50 LDR X0, [X0 + 0x30]
	0x036CCD54 RET
	0x036CCD58 STR X1, [X0 + 0x30]
	0x036CCD5C RET
	0x036CCD60 LDR W0, [X0 + 0x38]
	0x036CCD64 RET
	0x036CCD68 STR W1, [X0 + 0x38]
	0x036CCD6C RET
	0x036CCD70 STR W1, [X0 + 0x3C]
	0x036CCD74 RET
	0x036CCD78 STR X1, [X0 + 0x18]
	0x036CCD7C RET
	0x036CCD80 LDR W0, [X0 + 0x40]
	0x036CCD84 RET
	0x036CCD88 STR W1, [X0 + 0x40]
	0x036CCD8C RET
	0x036CCD90 STR W1, [X0 + 0x44]
	0x036CCD94 RET
	0x036CCD98 LDR X0, [X0 + 0x48]
	0x036CCD9C RET
	0x036CCDA0 STR X1, [X0 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD15000
	007 Move W8, [X21+2638]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA2F000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move X0, 0xA28000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2638], W8
	022 Move X0, X31
	023 Call Logging.get_On
	024 Move W8, [X19+44]
	025 Compare W8, 0
	026 JumpIfNotEqual {80}
	027 Move TEMP, X20
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {78}
	031 Move X20, [X19+32]
	032 Compare X20, 0
	033 JumpIfEqual {50}
	034 Move X10, 0xA28000
	035 Move X8, [X20]
	036 Move X10, [X10+3584]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X20
	048 Move W2, W31
	049 Call 0x1C5D788
	050 Move X20, [X19+16]
	051 Compare X20, 0
	052 JumpIfEqual {68}
	053 Move W1, 2
	054 Move X0, X20
	055 Move X2, X31
	056 Call Socket.InternalShutdown, X0, X1
	057 Move X0, X20
	058 Move X1, X31
	059 Call Socket.Close, X0
	060 Move [X19+16], X31
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, 0xA2F000
	069 Move X8, [X8+3088]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X19
	076 Move X1, X31
	077 Call GC.SuppressFinalize, X0
	078 Move W8, 1
	079 Move [X19+44], W8
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X0, X31
	085 Move X30, [X31+48]
	086 Call Logging.get_On
	087 Return 
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X22, X0
	090 Move X0, X22
	091 Call 0x3EB2AD0
	092 Move X21, [X0]
	093 Call 0x3EB2AE0
	094 Move X0, X20
	095 Move X1, X31
	096 Call Socket.Close, X0
	097 Move [X19+16], X31
	098 Compare X21, 0
	099 JumpIfEqual {68}
	100 Move X0, X21
	101 Call 0x1C17F18
	102 Move X21, X31
	103 Move X22, X0
	104 Move X0, X20
	105 Move X1, X31
	106 Call Socket.Close, X0
	107 Move [X19+16], X31
	108 Compare X21, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X22
	111 Call 0x1D2D690
	112 Move X0, X21
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x036CCDA4 RET
	0x036CCDA8 MOV X1, X31
	0x036CCDAC B 0x362E388
	0x036CCDB0 MOVZ W8, 0x1

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+392]
	004 Move X2, [X8+400]
	005 CallNoReturn X3

Method: System.Void Finalize()

Disassembly:
	0x036CCDB4 MOV X1, X31
	0x036CCDB8 STRB W8, [X0 + 0x10]
	0x036CCDBC B 0x33CB4DC
	0x036CCDC0 MOVZ W8, 0x1
	0x036CCDC4 STRB W8, [X0 + 0x10]
	0x036CCDC8 TBZ X1, 0x0, 0x36CCDD0
	0x036CCDCC B 0x1C16D44
	0x036CCDD0 RET
	0x036CCDD4 STP X30, X21, [X31 - 0x20]!
	0x036CCDD8 STP X20, X19, [X31 + 0x10]
	0x036CCDDC ADRP X21, 0xD14000
	0x036CCDE0 ADRP X20, 0xA2E000
	0x036CCDE4 LDRB W8, [X21 + 0xA59]
	0x036CCDE8 LDR X20, [X20 + 0xC10]
	0x036CCDEC MOV X19, X0
	0x036CCDF0 TBNZ X8, 0x0, 0x36CCE08
	0x036CCDF4 ADRP X0, 0xA2E000
	0x036CCDF8 LDR X0, [X0 + 0xC10]
	0x036CCDFC BL 0x1C16CF4
	0x036CCE00 MOVZ W8, 0x1
	0x036CCE04 STRB W8, [X21 + 0xA59]
	0x036CCE08 MOVZ W8, 0x1
	0x036CCE0C STRB W8, [X19 + 0x10]
	0x036CCE10 BL 0x1C16D44
	0x036CCE14 LDR X0, [X20]
	0x036CCE18 LDR W8, [X0 + 0xE0]
	0x036CCE1C CBNZ W8, 0x36CCE24
	0x036CCE20 BL 0x1C16DFC
	0x036CCE24 MOV X0, X19
	0x036CCE28 LDP X20, X19, [X31 + 0x10]
	0x036CCE2C MOV X1, X31
	0x036CCE30 LDP X30, X21, [X31], #0x20
	0x036CCE34 B 0x33B3E9C
	0x036CCE38 LDR X0, [X0 + 0x20]
	0x036CCE3C RET
	0x036CCE40 STR X1, [X0 + 0x20]
	0x036CCE44 RET
	0x036CCE48 STP X30, X21, [X31 - 0x20]!
	0x036CCE4C STP X20, X19, [X31 + 0x10]
	0x036CCE50 LDRB W8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+392]
	008 Move X2, [X8+400]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void initialize()

Disassembly:
	0x036CBBAC LDR X1, [X20]
	0x036CBBB0 LDRH W9, [X8 + 0x12E]
	0x036CBBB4 CBZ X9, 0x36CBBD8
	0x036CBBB8 LDR X10, [X8 + 0xB0]
	0x036CBBBC ADD X10, X10, 0x8
	0x036CBBC0 LDUR X11, [X10 - 0x8]
	0x036CBBC4 CMP X11, X1
	0x036CBBC8 B.EQ 0x36CBBE8
	0x036CBBCC SUBS X9, X9, 0x1
	0x036CBBD0 ADD X10, X10, 0x10
	0x036CBBD4 B.NE 0x36CBBC0
	0x036CBBD8 MOV X0, X19
	0x036CBBDC MOV W2, W31
	0x036CBBE0 BL 0x1C5C788
	0x036CBBE4 B 0x36CBBF4
	0x036CBBE8 LDRSW X9, [X10]
	0x036CBBEC ADD X8, X8, X9, 0x4, LSL
	0x036CBBF0 ADD X0, X8, 0x138
	0x036CBBF4 LDP X8, X1, [X0]
	0x036CBBF8 MOV X0, X19
	0x036CBBFC BLR X8
	0x036CBC00 LDP X20, X19, [X31 + 0x10]
	0x036CBC04 MOV X0, X31
	0x036CBC08 LDP X30, X21, [X31], #0x20
	0x036CBC0C B 0x3692290
	0x036CBC10 STR X30, [X31 - 0x30]!
	0x036CBC14 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD16000
	006 Move X21, 0xA32000
	007 Move W8, [X20+2639]
	008 Move X21, [X21+1928]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA32000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2639], W8
	019 Move X0, [X21]
	020 Move W20, [X19+40]
	021 Call 0x1C17F10
	022 Move W2, 1
	023 Move W3, 6
	024 Move W1, W20
	025 Move X4, X31
	026 Move X21, X0
	027 Call Socket..ctor, X0, X1, X2, X3
	028 Move [X19+16], X21
	029 Move [X19+24], W31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

