Type: System.Net.Sockets.NetworkStream

Method: System.Void .ctor(System.Net.Sockets.Socket socket)

Disassembly:
	0x036BB54C LDP X20, X19, [X31 + 0x30]
	0x036BB550 LDP X22, X21, [X31 + 0x20]
	0x036BB554 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move W2, 3
	002 Move W3, W31

Method: System.Void .ctor(System.Net.Sockets.Socket socket, System.Boolean ownsSocket)

Disassembly:
	0x036ADB1C TBZ X0, 0x0, 0x36ADBB0
	0x036ADB20 LDR X0, [X24 + 0x50]
	0x036ADB24 CBZ X0, 0x36ADBE4

ISIL:
	001 And W3, W2, 1
	002 Move W2, 3
	003 Call NetworkStream..ctor, X0, X1, X2, X3
	004 Return 

Method: System.Void .ctor(System.Net.Sockets.Socket socket, System.IO.FileAccess access, System.Boolean ownsSocket)

Disassembly:
	0x036BB558 LDR X30, [X31], #0x40
	0x036BB55C RET
	0x036BB560 MOV X0, X22
	0x036BB564 MOV X1, X31
	0x036BB568 BL 0x33BE520
	0x036BB56C MOV X19, X0
	0x036BB570 BL 0x19903C0
	0x036BB574 LDR X8, [X19]
	0x036BB578 MOV X0, X19
	0x036BB57C LDR X9, [X8 + 0x2E8]
	0x036BB580 LDR X1, [X8 + 0x2F0]
	0x036BB584 BLR X9
	0x036BB588 MOV X19, X0
	0x036BB58C ADRP X0, 0xA61000
	0x036BB590 LDR X0, [X0 + 0x4B8]
	0x036BB594 BL 0x1C16D08
	0x036BB598 BL 0x1C16F10
	0x036BB59C MOV X1, X19
	0x036BB5A0 MOV X2, X31
	0x036BB5A4 MOV X20, X0
	0x036BB5A8 BL 0x338C448
	0x036BB5AC ADRP X0, 0xA84000
	0x036BB5B0 LDR X0, [X0 + 0x788]
	0x036BB5B4 BL 0x1C16D08
	0x036BB5B8 MOV X1, X0
	0x036BB5BC MOV X0, X20
	0x036BB5C0 BL 0x1C16DEC
	0x036BB5C4 ADRP X0, 0xA38000
	0x036BB5C8 LDR X0, [X0 + 0x5B0]
	0x036BB5CC BL 0x1C16D08
	0x036BB5D0 BL 0x1C16F10
	0x036BB5D4 MOV X19, X0
	0x036BB5D8 ADRP X0, 0xA84000
	0x036BB5DC LDR X0, [X0 + 0xC0]
	0x036BB5E0 BL 0x1C16D08
	0x036BB5E4 MOV X1, X0
	0x036BB5E8 MOV X0, X19
	0x036BB5EC MOV X2, X31
	0x036BB5F0 BL 0x337DF1C
	0x036BB5F4 B 0x36BB67C
	0x036BB5F8 ADRP X0, 0xA3D000
	0x036BB5FC LDR X0, [X0 + 0x528]
	0x036BB600 BL 0x1C16D08
	0x036BB604 BL 0x1C16F10
	0x036BB608 MOV X19, X0
	0x036BB60C ADRP X0, 0xA63000
	0x036BB610 LDR X0, [X0 + 0xF48]
	0x036BB614 BL 0x1C16D08
	0x036BB618 MOV X1, X0
	0x036BB61C MOV X0, X19
	0x036BB620 MOV X2, X31
	0x036BB624 BL 0x330E100
	0x036BB628 B 0x36BB67C
	0x036BB62C ADRP X0, 0xA40000
	0x036BB630 LDR X0, [X0 + 0x760]
	0x036BB634 BL 0x1C16D08
	0x036BB638 BL 0x1C16F10
	0x036BB63C MOV X19, X0
	0x036BB640 ADRP X0, 0xA67000
	0x036BB644 LDR X0, [X0 + 0xD90]
	0x036BB648 B 0x36BB668
	0x036BB64C ADRP X0, 0xA40000
	0x036BB650 LDR X0, [X0 + 0x760]
	0x036BB654 BL 0x1C16D08
	0x036BB658 BL 0x1C16F10
	0x036BB65C MOV X19, X0
	0x036BB660 ADRP X0, 0xA63000
	0x036BB664 LDR X0, [X0 + 0xF90]
	0x036BB668 BL 0x1C16D08
	0x036BB66C MOV X1, X0
	0x036BB670 MOV X0, X19
	0x036BB674 MOV X2, X31
	0x036BB678 BL 0x3316014
	0x036BB67C ADRP X0, 0xA84000
	0x036BB680 LDR X0, [X0 + 0x788]
	0x036BB684 BL 0x1C16D08
	0x036BB688 MOV X1, X0
	0x036BB68C MOV X0, X19
	0x036BB690 BL 0x1C16DEC
	0x036BB694 BL 0x1C16F20
	0x036BB698 MOV W20, W1
	0x036BB69C B 0x36BB6A4
	0x036BB6A0 MOV X20, X1
	0x036BB6A4 CMP W20, 0x1
	0x036BB6A8 B.NE 0x36BB7B0
	0x036BB6AC BL 0x3EB1AD0
	0x036BB6B0 LDR X19, [X0]
	0x036BB6B4 BL 0x3EB1AE0
	0x036BB6B8 ADRP X0, 0xA38000
	0x036BB6BC LDR X0, [X0 + 0x7D0]
	0x036BB6C0 BL 0x1C16D08
	0x036BB6C4 CBZ X19, 0x36BB67C
	0x036BB6C8 LDR X8, [X19]
	0x036BB6CC LDRB W9, [X0 + 0x130]
	0x036BB6D0 LDRB W10, [X8 + 0x130]
	0x036BB6D4 CMP W10, W9
	0x036BB6D8 B.CC 0x36BB67C
	0x036BB6DC LDR X8, [X8 + 0xC8]
	0x036BB6E0 ADD X8, X8, X9, 0x3, LSL
	0x036BB6E4 LDUR X8, [X8 - 0x8]
	0x036BB6E8 CMP X8, X0
	0x036BB6EC B.NE 0x36BB67C
	0x036BB6F0 ADRP X0, 0xA41000
	0x036BB6F4 LDR X0, [X0 + 0xDB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD26000
	009 Move X23, 0xA68000
	010 Move W8, [X24+2487]
	011 Move X23, [X23+3344]
	012 Move W22, W3
	013 Move W20, W2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA68000
	021 Move X0, [X0+3344]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2487], W8
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W8, TEMP
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X19+52], W8
	030 Move [X19+60], D0
	031 Move X0, [X23]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Call Stream..ctor, X0
	039 Compare X21, 0
	040 JumpIfEqual {68}
	041 Move W8, [X21+80]
	042 Compare W8, 0
	043 JumpIfEqual {80}
	044 Move W8, [X21+82]
	045 Compare W8, 0
	046 JumpIfEqual {87}
	047 Move W8, [X21+36]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 And W8, W22, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X19+40], X21
	052 Move [X19+48], W8
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, 1
	055 Move [X19+49], W8
	056 Move W8, 1
	057 Move [X19+50], W8
	058 Move W8, 257
	059 NotImplemented "Instruction STURH not yet implemented."
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X30, [X31+64]
	067 Return 
	068 Move X0, 0xA3E000
	069 Move X0, [X0+1320]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xA85000
	074 Move X0, [X0+1744]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call ArgumentNullException..ctor, X0, X1
	080 Move X0, 0xA67000
	081 Move X0, [X0+1960]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xA85000
	086 Move X0, [X0+1752]
	087 Move X0, 0xA67000
	088 Move X0, [X0+1960]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0xA85000
	093 Move X0, [X0+1760]
	094 Move X0, 0xA67000
	095 Move X0, [X0+1960]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X19, X0
	099 Move X0, 0xA85000
	100 Move X0, [X0+1768]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Move X2, X31
	105 Call IOException..ctor, X0, X1
	106 Move X0, 0xA85000
	107 Move X0, [X0+1776]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Call 0x1C17DEC

Method: System.Boolean get_CanRead()

Disassembly:
	0x036BB6F8 BL 0x1C16D08
	0x036BB6FC LDR X8, [X19]

ISIL:
	001 Move W0, [X0+49]
	002 Return X0

Method: System.Boolean get_CanSeek()

Disassembly:
	0x036BB700 LDRB W9, [X0 + 0x130]
	0x036BB704 LDRB W10, [X8 + 0x130]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x036BB708 CMP W10, W9
	0x036BB70C B.CC 0x36BB724

ISIL:
	001 Move W0, [X0+50]
	002 Return X0

Method: System.Boolean get_CanTimeout()

Disassembly:
	0x036BB710 LDR X8, [X8 + 0xC8]
	0x036BB714 ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Int32 get_ReadTimeout()

Disassembly:
	0x036BB718 LDUR X8, [X8 - 0x8]
	0x036BB71C CMP X8, X0
	0x036BB720 B.EQ 0x36BB67C
	0x036BB724 MOV X0, X19
	0x036BB728 BL 0x19903C0
	0x036BB72C LDR X8, [X19]
	0x036BB730 MOV X0, X19
	0x036BB734 LDP X9, X1, [X8 + 0x188]
	0x036BB738 BLR X9
	0x036BB73C MOV X20, X0
	0x036BB740 ADRP X0, 0xA84000
	0x036BB744 LDR X0, [X0 + 0x790]
	0x036BB748 BL 0x1C16D08
	0x036BB74C MOV X1, X20
	0x036BB750 MOV X2, X31
	0x036BB754 BL 0x32094D4
	0x036BB758 MOV X20, X0
	0x036BB75C ADRP X0, 0xA66000
	0x036BB760 LDR X0, [X0 + 0x7A8]
	0x036BB764 BL 0x1C16D08
	0x036BB768 BL 0x1C16F10
	0x036BB76C MOV X1, X20
	0x036BB770 MOV X2, X19
	0x036BB774 MOV X3, X31
	0x036BB778 MOV X21, X0
	0x036BB77C BL 0x32E2390
	0x036BB780 ADRP X0, 0xA84000
	0x036BB784 LDR X0, [X0 + 0x788]
	0x036BB788 BL 0x1C16D08
	0x036BB78C MOV X1, X0
	0x036BB790 MOV X0, X21
	0x036BB794 BL 0x1C16DEC
	0x036BB798 B 0x36BB79C
	0x036BB79C CMP W1, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD26000
	005 Move W8, [X20+2488]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA39000
	012 Move X0, [X0+1880]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2488], W8
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfEqual {39}
	019 Move W1, 0xFFFF
	020 Move W2, 0x1006
	021 Call Socket.GetSocketOption, X0, X1, X2
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X8, 0xA39000
	025 Move X8, [X8+1880]
	026 Move X9, [X0]
	027 Move X1, [X8]
	028 Move X8, [X9+64]
	029 Move X9, [X1+64]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Call 0x1C17E08
	032 Move W8, [X0]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSINV not yet implemented."
	037 Move X30, [X31+32]
	038 Return X0
	039 Call 0x1C17F20
	040 Call 0x1C181E0

Method: System.Void set_ReadTimeout(System.Int32 value)

Disassembly:
	0x036BB93C LDR X8, [X19]
	0x036BB940 MOV X0, X19
	0x036BB944 LDR X9, [X8 + 0x2E8]
	0x036BB948 LDR X1, [X8 + 0x2F0]
	0x036BB94C BLR X9
	0x036BB950 MOV X19, X0
	0x036BB954 ADRP X0, 0xA61000
	0x036BB958 LDR X0, [X0 + 0x4B8]
	0x036BB95C BL 0x1C16D08
	0x036BB960 BL 0x1C16F10
	0x036BB964 MOV X1, X19
	0x036BB968 MOV X2, X31
	0x036BB96C MOV X20, X0
	0x036BB970 BL 0x338C448
	0x036BB974 ADRP X0, 0xA84000
	0x036BB978 LDR X0, [X0 + 0x7A0]
	0x036BB97C BL 0x1C16D08
	0x036BB980 MOV X1, X0
	0x036BB984 MOV X0, X20
	0x036BB988 BL 0x1C16DEC
	0x036BB98C ADRP X0, 0xA38000
	0x036BB990 LDR X0, [X0 + 0x5B0]
	0x036BB994 BL 0x1C16D08
	0x036BB998 BL 0x1C16F10
	0x036BB99C MOV X19, X0
	0x036BB9A0 ADRP X0, 0xA84000
	0x036BB9A4 LDR X0, [X0 + 0xC0]
	0x036BB9A8 BL 0x1C16D08
	0x036BB9AC MOV X1, X0
	0x036BB9B0 MOV X0, X19
	0x036BB9B4 MOV X2, X31
	0x036BB9B8 BL 0x337DF1C
	0x036BB9BC ADRP X0, 0xA84000

ISIL:
	001 Move W2, W1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W2, 1
	004 Move W1, W31
	005 Move W3, W31
	006 Move [X31-32], X30
	007 Move [X31+16], X20
	008 Move [X31+24], X19
	009 Move X0, 0xA41000
	010 Move X0, [X0+1888]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0xA43000
	015 Move X0, [X0+3784]
	016 Call 0x1C17D08
	017 Move X20, X0
	018 Move X0, 0xA85000
	019 Move X0, [X0+1808]
	020 Call 0x1C17D08
	021 Move X2, X0
	022 Move X0, X19
	023 Move X1, X20
	024 Move X3, X31
	025 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	026 Move X0, 0xA85000
	027 Move X0, [X0+1816]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC

Method: System.Int32 get_WriteTimeout()

Disassembly:
	0x036BBB84 LDR X0, [X0 + 0x4E0]
	0x036BBB88 BL 0x1C16D08
	0x036BBB8C MOV X1, X0
	0x036BBB90 MOV X0, X19
	0x036BBB94 MOV X2, X31
	0x036BBB98 BL 0x3316014
	0x036BBB9C ADRP X0, 0xA84000
	0x036BBBA0 LDR X0, [X0 + 0x7A8]
	0x036BBBA4 BL 0x1C16D08
	0x036BBBA8 MOV X1, X0
	0x036BBBAC MOV X0, X19
	0x036BBBB0 BL 0x1C16DEC
	0x036BBBB4 STP X30, X21, [X31 - 0x20]!
	0x036BBBB8 STP X20, X19, [X31 + 0x10]
	0x036BBBBC LDRB W21, [X0 + 0x38]
	0x036BBBC0 MOV X19, X0
	0x036BBBC4 MOV W20, W1
	0x036BBBC8 BL 0x1C16D44
	0x036BBBCC BL 0x1C16D44
	0x036BBBD0 MOVZ W8, 0x1
	0x036BBBD4 BIC W9, W20, W21, 0x0
	0x036BBBD8 STRB W8, [X19 + 0x38]
	0x036BBBDC TBZ X9, 0x0, 0x36BBC10
	0x036BBBE0 LDRB W8, [X19 + 0x30]
	0x036BBBE4 STURH W31, [X19 + 0x31]
	0x036BBBE8 CBZ W8, 0x36BBC10
	0x036BBBEC LDR X0, [X19 + 0x28]
	0x036BBBF0 CBZ X0, 0x36BBC28
	0x036BBBF4 MOVZ W1, 0x2
	0x036BBBF8 BL 0x36BBC2C
	0x036BBBFC LDR X0, [X19 + 0x28]
	0x036BBC00 CBZ X0, 0x36BBC28
	0x036BBC04 LDR W8, [X19 + 0x34]
	0x036BBC08 STR W8, [X0 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD26000
	005 Move W8, [X20+2489]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA39000
	012 Move X0, [X0+1880]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2489], W8
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfEqual {39}
	019 Move W1, 0xFFFF
	020 Move W2, 0x1005
	021 Call Socket.GetSocketOption, X0, X1, X2
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X8, 0xA39000
	025 Move X8, [X8+1880]
	026 Move X9, [X0]
	027 Move X1, [X8]
	028 Move X8, [X9+64]
	029 Move X9, [X1+64]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Call 0x1C17E08
	032 Move W8, [X0]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSINV not yet implemented."
	037 Move X30, [X31+32]
	038 Return X0
	039 Call 0x1C17F20
	040 Call 0x1C181E0

Method: System.Void set_WriteTimeout(System.Int32 value)

Disassembly:
	0x036BBC0C BL 0x36AAC20
	0x036BBC10 AND W1, W20, 0x1
	0x036BBC14 MOV X0, X19
	0x036BBC18 LDP X20, X19, [X31 + 0x10]
	0x036BBC1C MOV X2, X31
	0x036BBC20 LDP X30, X21, [X31], #0x20
	0x036BBC24 B 0x32F02C8
	0x036BBC28 BL 0x1C16F20
	0x036BBC2C SUB X31, X31, 0x30
	0x036BBC30 STP X30, X21, [X31 + 0x10]
	0x036BBC34 STP X20, X19, [X31 + 0x20]
	0x036BBC38 ADRP X21, 0xD25000
	0x036BBC3C LDRB W8, [X21 + 0x9D3]
	0x036BBC40 MOV W19, W1
	0x036BBC44 MOV X20, X0
	0x036BBC48 TBNZ X8, 0x0, 0x36BBC60
	0x036BBC4C ADRP X0, 0xA41000
	0x036BBC50 LDR X0, [X0 + 0x788]
	0x036BBC54 BL 0x1C16CF4
	0x036BBC58 MOVZ W8, 0x1
	0x036BBC5C STRB W8, [X21 + 0x9D3]
	0x036BBC60 STR W31, [X31 + 0xC]
	0x036BBC64 LDRB W8, [X20 + 0x52]
	0x036BBC68 CBZ W8, 0x36BBCA4
	0x036BBC6C LDR W8, [X20 + 0x54]
	0x036BBC70 CMP W8, 0x1
	0x036BBC74 B.EQ 0x36BBCA4
	0x036BBC78 ADRP X8, 0xA41000
	0x036BBC7C LDR X8, [X8 + 0x788]
	0x036BBC80 LDR X20, [X20 + 0x30]
	0x036BBC84 LDR X0, [X8]
	0x036BBC88 LDR W8, [X0 + 0xE0]
	0x036BBC8C CBNZ W8, 0x36BBC94

ISIL:
	001 Move W2, W1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W2, 1
	004 Move W1, 1
	005 Move W3, W31
	006 Call NetworkStream.SetSocketTimeoutOption, X0, X1, X2, X3
	007 Return 
	008 Move [X31-32], X30
	009 Move [X31+16], X20
	010 Move [X31+24], X19
	011 Move X0, 0xA41000
	012 Move X0, [X0+1888]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0xA43000
	017 Move X0, [X0+3784]
	018 Call 0x1C17D08
	019 Move X20, X0
	020 Move X0, 0xA85000
	021 Move X0, [X0+1808]
	022 Call 0x1C17D08
	023 Move X2, X0
	024 Move X0, X19
	025 Move X1, X20
	026 Move X3, X31
	027 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	028 Move X0, 0xA85000
	029 Move X0, [X0+1840]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: System.Int64 get_Length()

Disassembly:
	0x036BBC90 BL 0x1C16DFC
	0x036BBC94 ADD X2, X31, 0xC
	0x036BBC98 MOV X0, X20
	0x036BBC9C MOV W1, W19
	0x036BBCA0 BL 0x36C1584
	0x036BBCA4 LDP X20, X19, [X31 + 0x20]
	0x036BBCA8 LDP X30, X21, [X31 + 0x10]
	0x036BBCAC ADD X31, X31, 0x30
	0x036BBCB0 RET
	0x036BBCB4 STR W1, [X0 + 0x1C]
	0x036BBCB8 B 0x36AAC20
	0x036BBCBC STP X30, X21, [X31 - 0x20]!
	0x036BBCC0 STP X20, X19, [X31 + 0x10]
	0x036BBCC4 LDR X8, [X0]
	0x036BBCC8 MOV X19, X0
	0x036BBCCC LDR X9, [X8 + 0x288]
	0x036BBCD0 LDR X2, [X8 + 0x290]
	0x036BBCD4 MOV W1, W31
	0x036BBCD8 BLR X9

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA39000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA81000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA85000
	016 Move X0, [X0+1848]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Int64 get_Position()

Disassembly:
	0x036BBCDC MOV X0, X19
	0x036BBCE0 LDP X20, X19, [X31 + 0x10]
	0x036BBCE4 MOV X1, X31
	0x036BBCE8 LDP X30, X21, [X31], #0x20
	0x036BBCEC B 0x33CB4DC
	0x036BBCF0 CMP W1, 0x1
	0x036BBCF4 MOV X21, X0
	0x036BBCF8 B.NE 0x36BBD28
	0x036BBCFC MOV X0, X21
	0x036BBD00 BL 0x3EB1AD0
	0x036BBD04 LDR X20, [X0]
	0x036BBD08 BL 0x3EB1AE0
	0x036BBD0C MOV X0, X19
	0x036BBD10 MOV X1, X31
	0x036BBD14 BL 0x33CB4DC
	0x036BBD18 CBNZ X20, 0x36BBD30
	0x036BBD1C LDP X20, X19, [X31 + 0x10]
	0x036BBD20 LDP X30, X21, [X31], #0x20
	0x036BBD24 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA39000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA81000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA85000
	016 Move X0, [X0+1856]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x036BBD28 MOV X20, X31
	0x036BBD2C B 0x36BBD3C
	0x036BBD30 MOV X0, X20
	0x036BBD34 BL 0x1C16F18
	0x036BBD38 MOV X21, X0
	0x036BBD3C MOV X0, X19
	0x036BBD40 MOV X1, X31
	0x036BBD44 BL 0x33CB4DC
	0x036BBD48 CBNZ X20, 0x36BBD54
	0x036BBD4C MOV X0, X21
	0x036BBD50 BL 0x1D2C690
	0x036BBD54 MOV X0, X20
	0x036BBD58 BL 0x1C16F18
	0x036BBD5C BL 0x1990590
	0x036BBD60 STR X30, [X31 - 0x50]!
	0x036BBD64 STP X26, X25, [X31 + 0x10]
	0x036BBD68 STP X24, X23, [X31 + 0x20]
	0x036BBD6C STP X22, X21, [X31 + 0x30]
	0x036BBD70 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA39000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA81000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA85000
	016 Move X0, [X0+1864]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x036BBD74 LDR X8, [X0]
	0x036BBD78 MOV X23, X1
	0x036BBD7C MOV X19, X5
	0x036BBD80 MOV X20, X4
	0x036BBD84 LDP X9, X8, [X8 + 0x1A8]
	0x036BBD88 MOV W21, W3
	0x036BBD8C MOV W22, W2
	0x036BBD90 MOV X24, X0
	0x036BBD94 MOV X1, X8
	0x036BBD98 BLR X9
	0x036BBD9C LDRB W26, [X24 + 0x38]
	0x036BBDA0 MOV W25, W0
	0x036BBDA4 BL 0x1C16D44
	0x036BBDA8 CBNZ W26, 0x36BBE10
	0x036BBDAC TBZ X25, 0x0, 0x36BBE74
	0x036BBDB0 CBZ X23, 0x36BBEA8
	0x036BBDB4 LDR X8, [X23 + 0x18]
	0x036BBDB8 MOV W9, W22
	0x036BBDBC CMP X9, W8, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA39000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA81000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA85000
	016 Move X0, [X0+1872]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x036BBDC0 B.GT 0x36BBEDC
	0x036BBDC4 MOV W9, W21
	0x036BBDC8 SUB W8, W8, W22
	0x036BBDCC CMP X9, W8, SXTW
	0x036BBDD0 B.GT 0x36BBEFC
	0x036BBDD4 LDR X0, [X24 + 0x28]
	0x036BBDD8 CBZ X0, 0x36BBF44
	0x036BBDDC MOV X1, X23
	0x036BBDE0 MOV W2, W22
	0x036BBDE4 MOV W3, W21
	0x036BBDE8 MOV W4, W31
	0x036BBDEC MOV X5, X20
	0x036BBDF0 MOV X6, X19
	0x036BBDF4 BL 0x36BC064
	0x036BBDF8 LDP X20, X19, [X31 + 0x40]
	0x036BBDFC LDP X22, X21, [X31 + 0x30]
	0x036BBE00 LDP X24, X23, [X31 + 0x20]
	0x036BBE04 LDP X26, X25, [X31 + 0x10]
	0x036BBE08 LDR X30, [X31], #0x50
	0x036BBE0C RET
	0x036BBE10 MOV X0, X24
	0x036BBE14 MOV X1, X31
	0x036BBE18 BL 0x33BE520
	0x036BBE1C MOV X19, X0
	0x036BBE20 BL 0x19903C0
	0x036BBE24 LDR X8, [X19]
	0x036BBE28 MOV X0, X19
	0x036BBE2C LDR X9, [X8 + 0x2E8]
	0x036BBE30 LDR X1, [X8 + 0x2F0]
	0x036BBE34 BLR X9
	0x036BBE38 MOV X19, X0
	0x036BBE3C ADRP X0, 0xA61000
	0x036BBE40 LDR X0, [X0 + 0x4B8]
	0x036BBE44 BL 0x1C16D08
	0x036BBE48 BL 0x1C16F10
	0x036BBE4C MOV X1, X19
	0x036BBE50 MOV X2, X31
	0x036BBE54 MOV X20, X0
	0x036BBE58 BL 0x338C448
	0x036BBE5C ADRP X0, 0xA84000
	0x036BBE60 LDR X0, [X0 + 0x7B0]
	0x036BBE64 BL 0x1C16D08
	0x036BBE68 MOV X1, X0
	0x036BBE6C MOV X0, X20
	0x036BBE70 BL 0x1C16DEC
	0x036BBE74 ADRP X0, 0xA38000
	0x036BBE78 LDR X0, [X0 + 0x5B0]
	0x036BBE7C BL 0x1C16D08
	0x036BBE80 BL 0x1C16F10
	0x036BBE84 MOV X19, X0
	0x036BBE88 ADRP X0, 0xA84000
	0x036BBE8C LDR X0, [X0 + 0xA0]
	0x036BBE90 BL 0x1C16D08
	0x036BBE94 MOV X1, X0
	0x036BBE98 MOV X0, X19
	0x036BBE9C MOV X2, X31
	0x036BBEA0 BL 0x337DF1C
	0x036BBEA4 B 0x36BBF2C
	0x036BBEA8 ADRP X0, 0xA3D000
	0x036BBEAC LDR X0, [X0 + 0x528]
	0x036BBEB0 BL 0x1C16D08
	0x036BBEB4 BL 0x1C16F10
	0x036BBEB8 MOV X19, X0
	0x036BBEBC ADRP X0, 0xA63000
	0x036BBEC0 LDR X0, [X0 + 0xF48]
	0x036BBEC4 BL 0x1C16D08
	0x036BBEC8 MOV X1, X0
	0x036BBECC MOV X0, X19
	0x036BBED0 MOV X2, X31
	0x036BBED4 BL 0x330E100
	0x036BBED8 B 0x36BBF2C
	0x036BBEDC ADRP X0, 0xA40000
	0x036BBEE0 LDR X0, [X0 + 0x760]
	0x036BBEE4 BL 0x1C16D08
	0x036BBEE8 BL 0x1C16F10
	0x036BBEEC MOV X19, X0
	0x036BBEF0 ADRP X0, 0xA67000
	0x036BBEF4 LDR X0, [X0 + 0xD90]
	0x036BBEF8 B 0x36BBF18
	0x036BBEFC ADRP X0, 0xA40000
	0x036BBF00 LDR X0, [X0 + 0x760]
	0x036BBF04 BL 0x1C16D08
	0x036BBF08 BL 0x1C16F10
	0x036BBF0C MOV X19, X0
	0x036BBF10 ADRP X0, 0xA63000
	0x036BBF14 LDR X0, [X0 + 0xF90]
	0x036BBF18 BL 0x1C16D08
	0x036BBF1C MOV X1, X0
	0x036BBF20 MOV X0, X19
	0x036BBF24 MOV X2, X31
	0x036BBF28 BL 0x3316014
	0x036BBF2C ADRP X0, 0xA84000
	0x036BBF30 LDR X0, [X0 + 0x7B0]
	0x036BBF34 BL 0x1C16D08
	0x036BBF38 MOV X1, X0
	0x036BBF3C MOV X0, X19
	0x036BBF40 BL 0x1C16DEC
	0x036BBF44 BL 0x1C16F20
	0x036BBF48 MOV W20, W1
	0x036BBF4C B 0x36BBF54
	0x036BBF50 MOV X20, X1
	0x036BBF54 CMP W20, 0x1
	0x036BBF58 B.NE 0x36BC060
	0x036BBF5C BL 0x3EB1AD0
	0x036BBF60 LDR X19, [X0]
	0x036BBF64 BL 0x3EB1AE0
	0x036BBF68 ADRP X0, 0xA38000
	0x036BBF6C LDR X0, [X0 + 0x7D0]
	0x036BBF70 BL 0x1C16D08
	0x036BBF74 CBZ X19, 0x36BBF2C
	0x036BBF78 LDR X8, [X19]
	0x036BBF7C LDRB W9, [X0 + 0x130]
	0x036BBF80 LDRB W10, [X8 + 0x130]
	0x036BBF84 CMP W10, W9
	0x036BBF88 B.CC 0x36BBF2C
	0x036BBF8C LDR X8, [X8 + 0xC8]
	0x036BBF90 ADD X8, X8, X9, 0x3, LSL
	0x036BBF94 LDUR X8, [X8 - 0x8]
	0x036BBF98 CMP X8, X0
	0x036BBF9C B.NE 0x36BBF2C
	0x036BBFA0 ADRP X0, 0xA41000
	0x036BBFA4 LDR X0, [X0 + 0xDB8]
	0x036BBFA8 BL 0x1C16D08
	0x036BBFAC LDR X8, [X19]
	0x036BBFB0 LDRB W9, [X0 + 0x130]
	0x036BBFB4 LDRB W10, [X8 + 0x130]
	0x036BBFB8 CMP W10, W9
	0x036BBFBC B.CC 0x36BBFD4
	0x036BBFC0 LDR X8, [X8 + 0xC8]
	0x036BBFC4 ADD X8, X8, X9, 0x3, LSL
	0x036BBFC8 LDUR X8, [X8 - 0x8]
	0x036BBFCC CMP X8, X0
	0x036BBFD0 B.EQ 0x36BBF2C
	0x036BBFD4 MOV X0, X19
	0x036BBFD8 BL 0x19903C0
	0x036BBFDC LDR X8, [X19]
	0x036BBFE0 MOV X0, X19
	0x036BBFE4 LDP X9, X1, [X8 + 0x188]
	0x036BBFE8 BLR X9
	0x036BBFEC MOV X20, X0
	0x036BBFF0 ADRP X0, 0xA84000
	0x036BBFF4 LDR X0, [X0 + 0x760]
	0x036BBFF8 BL 0x1C16D08
	0x036BBFFC MOV X1, X20
	0x036BC000 MOV X2, X31
	0x036BC004 BL 0x32094D4
	0x036BC008 MOV X20, X0
	0x036BC00C ADRP X0, 0xA65000
	0x036BC010 LDR X0, [X0 + 0x7A8]
	0x036BC014 BL 0x1C16D08
	0x036BC018 BL 0x1C16F10
	0x036BC01C MOV X1, X20
	0x036BC020 MOV X2, X19
	0x036BC024 MOV X3, X31
	0x036BC028 MOV X21, X0
	0x036BC02C BL 0x32E2390
	0x036BC030 ADRP X0, 0xA83000
	0x036BC034 LDR X0, [X0 + 0x7B0]
	0x036BC038 BL 0x1C16D08
	0x036BC03C MOV X1, X0
	0x036BC040 MOV X0, X21
	0x036BC044 BL 0x1C16DEC
	0x036BC048 B 0x36BC04C
	0x036BC04C CMP W1, W20
	0x036BC050 B.NE 0x36BC060
	0x036BC054 BL 0x3EB1AD0
	0x036BC058 BL 0x3EB1AE0
	0x036BC05C B 0x36BBF2C
	0x036BC060 BL 0x1D2C690
	0x036BC064 SUB X31, X31, 0x30
	0x036BC068 STR X30, [X31 + 0x10]
	0x036BC06C STP X20, X19, [X31 + 0x20]
	0x036BC070 MOV X7, X6
	0x036BC074 MOV X6, X5
	0x036BC078 ADD X5, X31, 0x1C
	0x036BC07C STR W31, [X31 + 0x1C]
	0x036BC080 BL 0x36C1148
	0x036BC084 LDR W19, [X31 + 0x1C]
	0x036BC088 CBZ W19, 0x36BC094
	0x036BC08C CMP W19, 0x3E5
	0x036BC090 B.NE 0x36BC0A4
	0x036BC094 LDP X20, X19, [X31 + 0x20]
	0x036BC098 LDR X30, [X31 + 0x10]
	0x036BC09C ADD X31, X31, 0x30
	0x036BC0A0 RET
	0x036BC0A4 ADRP X0, 0xA75000
	0x036BC0A8 LDR X0, [X0 + 0xD8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0]
	009 Move X21, X1
	010 Move W19, W3
	011 Move W20, W2
	012 Move X9, [X8+424]
	013 Move X8, [X8+432]
	014 Move X22, X0
	015 Move X1, X8
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move W24, [X22+56]
	018 Move W23, W0
	019 Call 0x1C17D44
	020 Compare W24, 0
	021 JumpIfNotEqual {50}
	022 Move TEMP, X23
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {75}
	026 Compare X21, 0
	027 JumpIfEqual {87}
	028 Move X8, [X21+24]
	029 Move W9, W20
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W9, W19
	032 Subtract W8, W8, W20
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X22+40]
	035 Compare X0, 0
	036 JumpIfEqual {124}
	037 Move X1, X21
	038 Move W2, W20
	039 Move W3, W19
	040 Move W4, W31
	041 Call Socket.Receive, X0, X1, X2, X3, X4
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X30, [X31+64]
	049 Return X0
	050 Move X0, X22
	051 Move X1, X31
	052 Call "il2cpp_vm_object_is_inst", X0
	053 Move X19, X0
	054 Call 0x19913C0
	055 Move X8, [X19]
	056 Move X0, X19
	057 Move X9, [X8+744]
	058 Move X1, [X8+752]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X19, X0
	061 Move X0, 0xA62000
	062 Move X0, [X0+1208]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X1, X19
	066 Move X2, X31
	067 Move X20, X0
	068 Call ObjectDisposedException..ctor, X0, X1
	069 Move X0, 0xA85000
	070 Move X0, [X0+1880]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X20
	074 Call 0x1C17DEC
	075 Move X0, 0xA39000
	076 Move X0, [X0+1456]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xA85000
	081 Move X0, [X0+160]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call InvalidOperationException..ctor, X0, X1
	087 Move X0, 0xA3E000
	088 Move X0, [X0+1320]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0xA64000
	093 Move X0, [X0+3912]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call ArgumentNullException..ctor, X0, X1
	099 Move X0, 0xA41000
	100 Move X0, [X0+1888]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0xA68000
	105 Move X0, [X0+3472]
	106 Move X0, 0xA41000
	107 Move X0, [X0+1888]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0xA64000
	112 Move X0, [X0+3984]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call ArgumentOutOfRangeException..ctor, X0, X1
	118 Move X0, 0xA85000
	119 Move X0, [X0+1880]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Call 0x1C17DEC
	124 Call 0x1C17F20
	125 Move W20, W1
	126 Move X20, X1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Call 0x3EB2AD0
	129 Move X19, [X0]
	130 Call 0x3EB2AE0
	131 Move X0, 0xA39000
	132 Move X0, [X0+2000]
	133 Call 0x1C17D08
	134 Compare X19, 0
	135 JumpIfEqual {118}
	136 Move X8, [X19]
	137 Move W9, [X0+304]
	138 Move W10, [X8+304]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X8+200]
	141 Add X8, X8, X9
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, 0xA42000
	145 Move X0, [X0+3512]
	146 Call 0x1C17D08
	147 Move X8, [X19]
	148 Move W9, [X0+304]
	149 Move W10, [X8+304]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, [X8+200]
	152 Add X8, X8, X9
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, X19
	156 Call 0x19913C0
	157 Move X8, [X19]
	158 Move X0, X19
	159 Move X9, [X8+392]
	160 Move X1, [X8+400]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X20, X0
	163 Move X0, 0xA84000
	164 Move X0, [X0+1888]
	165 Call 0x1C17D08
	166 Move X1, X20
	167 Move X2, X31
	168 Call SR.Format, X0, X1
	169 Move X20, X0
	170 Move X0, 0xA66000
	171 Move X0, [X0+1960]
	172 Call 0x1C17D08
	173 Call 0x1C17F10
	174 Move X1, X20
	175 Move X2, X19
	176 Move X3, X31
	177 Move X21, X0
	178 Call IOException..ctor, X0, X1, X2
	179 Move X0, 0xA84000
	180 Move X0, [X0+1880]
	181 Call 0x1C17D08
	182 Move X1, X0
	183 Move X0, X21
	184 Call 0x1C17DEC
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Call 0x3EB2AD0
	187 Call 0x3EB2AE0
	188 Call 0x1D2D690

Method: System.Int32 Read(System.Span`1<System.Byte> destination)

Disassembly:
	0x036BC10C LDP X20, X19, [X31 + 0x10]
	0x036BC110 LDP X30, X21, [X31], #0x20
	0x036BC114 RET
	0x036BC118 MOV X0, X20
	0x036BC11C MOV X1, X31
	0x036BC120 BL 0x33BE520
	0x036BC124 MOV X19, X0
	0x036BC128 BL 0x19903C0
	0x036BC12C LDR X8, [X19]
	0x036BC130 MOV X0, X19
	0x036BC134 LDR X9, [X8 + 0x2E8]
	0x036BC138 LDR X1, [X8 + 0x2F0]
	0x036BC13C BLR X9
	0x036BC140 MOV X19, X0
	0x036BC144 ADRP X0, 0xA60000
	0x036BC148 LDR X0, [X0 + 0x4B8]
	0x036BC14C BL 0x1C16D08
	0x036BC150 BL 0x1C16F10
	0x036BC154 MOV X1, X19
	0x036BC158 MOV X2, X31
	0x036BC15C MOV X20, X0
	0x036BC160 BL 0x338C448
	0x036BC164 ADRP X0, 0xA83000
	0x036BC168 LDR X0, [X0 + 0x7C0]
	0x036BC16C BL 0x1C16D08
	0x036BC170 MOV X1, X0
	0x036BC174 MOV X0, X20
	0x036BC178 BL 0x1C16DEC
	0x036BC17C ADRP X0, 0xA3C000
	0x036BC180 LDR X0, [X0 + 0x528]
	0x036BC184 BL 0x1C16D08
	0x036BC188 BL 0x1C16F10
	0x036BC18C MOV X19, X0
	0x036BC190 ADRP X0, 0xA62000
	0x036BC194 LDR X0, [X0 + 0xDD0]
	0x036BC198 BL 0x1C16D08
	0x036BC19C MOV X1, X0
	0x036BC1A0 MOV X0, X19
	0x036BC1A4 MOV X2, X31
	0x036BC1A8 BL 0x330E100
	0x036BC1AC B 0x36BC2C8
	0x036BC1B0 BL 0x1C16F20
	0x036BC1B4 MOV W20, W1
	0x036BC1B8 B 0x36BC1C0
	0x036BC1BC MOV X20, X1
	0x036BC1C0 CMP W20, 0x1
	0x036BC1C4 B.NE 0x36BC2E0
	0x036BC1C8 BL 0x3EB1AD0
	0x036BC1CC LDR X19, [X0]
	0x036BC1D0 BL 0x3EB1AE0
	0x036BC1D4 ADRP X0, 0xA37000
	0x036BC1D8 LDR X0, [X0 + 0x7D0]
	0x036BC1DC BL 0x1C16D08
	0x036BC1E0 CBZ X19, 0x36BC2C8
	0x036BC1E4 LDR X8, [X19]
	0x036BC1E8 LDRB W9, [X0 + 0x130]
	0x036BC1EC LDRB W10, [X8 + 0x130]
	0x036BC1F0 CMP W10, W9
	0x036BC1F4 B.CC 0x36BC2C8
	0x036BC1F8 LDR X8, [X8 + 0xC8]
	0x036BC1FC ADD X8, X8, X9, 0x3, LSL
	0x036BC200 LDUR X8, [X8 - 0x8]
	0x036BC204 CMP X8, X0
	0x036BC208 B.NE 0x36BC2C8
	0x036BC20C ADRP X0, 0xA40000
	0x036BC210 LDR X0, [X0 + 0xDB8]
	0x036BC214 BL 0x1C16D08
	0x036BC218 LDR X8, [X19]
	0x036BC21C LDRB W9, [X0 + 0x130]
	0x036BC220 LDRB W10, [X8 + 0x130]
	0x036BC224 CMP W10, W9
	0x036BC228 B.CC 0x36BC240
	0x036BC22C LDR X8, [X8 + 0xC8]
	0x036BC230 ADD X8, X8, X9, 0x3, LSL
	0x036BC234 LDUR X8, [X8 - 0x8]
	0x036BC238 CMP X8, X0
	0x036BC23C B.EQ 0x36BC2C8
	0x036BC240 MOV X0, X19
	0x036BC244 BL 0x19903C0
	0x036BC248 LDR X8, [X19]
	0x036BC24C MOV X0, X19
	0x036BC250 LDP X9, X1, [X8 + 0x188]
	0x036BC254 BLR X9
	0x036BC258 MOV X20, X0
	0x036BC25C ADRP X0, 0xA83000
	0x036BC260 LDR X0, [X0 + 0x760]
	0x036BC264 BL 0x1C16D08
	0x036BC268 MOV X1, X20
	0x036BC26C MOV X2, X31
	0x036BC270 BL 0x32094D4
	0x036BC274 MOV X20, X0
	0x036BC278 ADRP X0, 0xA65000
	0x036BC27C LDR X0, [X0 + 0x7A8]
	0x036BC280 BL 0x1C16D08
	0x036BC284 BL 0x1C16F10
	0x036BC288 MOV X1, X20
	0x036BC28C MOV X2, X19
	0x036BC290 MOV X3, X31
	0x036BC294 MOV X21, X0
	0x036BC298 BL 0x32E2390
	0x036BC29C ADRP X0, 0xA83000
	0x036BC2A0 LDR X0, [X0 + 0x7C0]
	0x036BC2A4 BL 0x1C16D08
	0x036BC2A8 MOV X1, X0
	0x036BC2AC MOV X0, X21
	0x036BC2B0 BL 0x1C16DEC
	0x036BC2B4 B 0x36BC2B8
	0x036BC2B8 CMP W1, W20
	0x036BC2BC B.NE 0x36BC2E0
	0x036BC2C0 BL 0x3EB1AD0
	0x036BC2C4 BL 0x3EB1AE0
	0x036BC2C8 ADRP X0, 0xA83000
	0x036BC2CC LDR X0, [X0 + 0x7C0]
	0x036BC2D0 BL 0x1C16D08
	0x036BC2D4 MOV X1, X0
	0x036BC2D8 MOV X0, X19
	0x036BC2DC BL 0x1C16DEC
	0x036BC2E0 BL 0x1D2C690
	0x036BC2E4 STR X30, [X31 - 0x20]!
	0x036BC2E8 STP X20, X19, [X31 + 0x10]
	0x036BC2EC ADD X2, X31, 0xC
	0x036BC2F0 STR W31, [X31 + 0xC]
	0x036BC2F4 BL 0x36C12D4
	0x036BC2F8 LDR W19, [X31 + 0xC]
	0x036BC2FC CBNZ W19, 0x36BC30C
	0x036BC300 LDP X20, X19, [X31 + 0x10]
	0x036BC304 LDR X30, [X31], #0x20
	0x036BC308 RET
	0x036BC30C ADRP X0, 0xA75000
	0x036BC310 LDR X0, [X0 + 0xD8]
	0x036BC314 BL 0x1C16D08
	0x036BC318 BL 0x1C16F10
	0x036BC31C MOV W1, W19
	0x036BC320 MOV X2, X31
	0x036BC324 MOV X20, X0
	0x036BC328 BL 0x36CA10C
	0x036BC32C ADRP X0, 0xA83000
	0x036BC330 LDR X0, [X0 + 0x7C8]
	0x036BC334 BL 0x1C16D08
	0x036BC338 MOV X1, X0
	0x036BC33C MOV X0, X20
	0x036BC340 BL 0x1C16DEC
	0x036BC344 STR X30, [X31 - 0x50]!
	0x036BC348 STP X26, X25, [X31 + 0x10]
	0x036BC34C STP X24, X23, [X31 + 0x20]
	0x036BC350 STP X22, X21, [X31 + 0x30]
	0x036BC354 STP X20, X19, [X31 + 0x40]
	0x036BC358 LDR X8, [X0]
	0x036BC35C MOV X23, X1
	0x036BC360 MOV X19, X5

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD25000
	009 Move X22, 0xA84000
	010 Move X23, 0xA38000
	011 Move W8, [X24+2490]
	012 Move X22, [X22+1904]
	013 Move X23, [X23+1728]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA84000
	022 Move X0, [X0+1904]
	023 Call 0x1C17CF4
	024 Move X0, 0xA38000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2490], W8
	029 Move X0, X21
	030 Move X1, X31
	031 Move [X31+12], W31
	032 Call "il2cpp_vm_object_is_inst", X0
	033 Move X8, [X23]
	034 Move X23, [X22]
	035 Move X22, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X23
	042 Move X1, X31
	043 Call Type.GetTypeFromHandle, X0
	044 Move X1, X0
	045 Move X0, X22
	046 Move X2, X31
	047 Call Type.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {57}
	052 Move X0, X21
	053 Move X1, X20
	054 Move X2, X19
	055 Move X3, X31
	056 Call Stream.Read, X0, X1
	057 Move W22, [X21+56]
	058 Call 0x1C17D44
	059 Compare W22, 0
	060 JumpIfNotEqual {89}
	061 Move X8, [X21]
	062 Move X0, X21
	063 Move X9, [X8+424]
	064 Move X1, [X8+432]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {114}
	070 Move X0, [X21+40]
	071 Compare X0, 0
	072 JumpIfEqual {132}
	073 Add X4, X31, 12
	074 Move X1, X20
	075 Move X2, X19
	076 Move W3, W31
	077 Call Socket.Receive, X0, X1, X2, X3
	078 Move W19, [X31+12]
	079 Compare W19, 0
	080 JumpIfNotEqual {133}
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Return X0
	089 Move X0, X21
	090 Move X1, X31
	091 Call "il2cpp_vm_object_is_inst", X0
	092 Move X19, X0
	093 Call 0x19913C0
	094 Move X8, [X19]
	095 Move X0, X19
	096 Move X9, [X8+744]
	097 Move X1, [X8+752]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X19, X0
	100 Move X0, 0xA61000
	101 Move X0, [X0+1208]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X1, X19
	105 Move X2, X31
	106 Move X20, X0
	107 Call ObjectDisposedException..ctor, X0, X1
	108 Move X0, 0xA84000
	109 Move X0, [X0+1912]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC
	114 Move X0, 0xA38000
	115 Move X0, [X0+1456]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xA84000
	120 Move X0, [X0+160]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call InvalidOperationException..ctor, X0, X1
	126 Move X0, 0xA84000
	127 Move X0, [X0+1912]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC
	132 Call 0x1C17F20
	133 Move X0, 0xA76000
	134 Move X0, [X0+216]
	135 Call 0x1C17D08
	136 Call 0x1C17F10
	137 Move W1, W19
	138 Move X2, X31
	139 Move X20, X0
	140 Call SocketException..ctor, X0, X1
	141 Move X0, X20
	142 Call 0x19913C0
	143 Move X8, [X20]
	144 Move X0, X20
	145 Move X9, [X8+392]
	146 Move X1, [X8+400]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X19, X0
	149 Move X0, 0xA84000
	150 Move X0, [X0+1888]
	151 Call 0x1C17D08
	152 Move X1, X19
	153 Move X2, X31
	154 Call SR.Format, X0, X1
	155 Move X19, X0
	156 Move X0, 0xA66000
	157 Move X0, [X0+1960]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X1, X19
	161 Move X2, X20
	162 Move X3, X31
	163 Move X21, X0
	164 Call IOException..ctor, X0, X1, X2
	165 Move X0, 0xA84000
	166 Move X0, [X0+1912]
	167 Call 0x1C17D08
	168 Move X1, X0
	169 Move X0, X21
	170 Call 0x1C17DEC

Method: System.Int32 ReadByte()

Disassembly:
	0x036BC464 BL 0x1C16F10
	0x036BC468 MOV X19, X0
	0x036BC46C ADRP X0, 0xA83000
	0x036BC470 LDR X0, [X0 + 0xC0]
	0x036BC474 BL 0x1C16D08
	0x036BC478 MOV X1, X0
	0x036BC47C MOV X0, X19
	0x036BC480 MOV X2, X31
	0x036BC484 BL 0x337DF1C
	0x036BC488 B 0x36BC510
	0x036BC48C ADRP X0, 0xA3C000
	0x036BC490 LDR X0, [X0 + 0x528]
	0x036BC494 BL 0x1C16D08
	0x036BC498 BL 0x1C16F10
	0x036BC49C MOV X19, X0
	0x036BC4A0 ADRP X0, 0xA62000
	0x036BC4A4 LDR X0, [X0 + 0xF48]
	0x036BC4A8 BL 0x1C16D08
	0x036BC4AC MOV X1, X0
	0x036BC4B0 MOV X0, X19
	0x036BC4B4 MOV X2, X31
	0x036BC4B8 BL 0x330E100
	0x036BC4BC B 0x36BC510
	0x036BC4C0 ADRP X0, 0xA3F000
	0x036BC4C4 LDR X0, [X0 + 0x760]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD25000
	005 Move W8, [X20+2491]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA66000
	012 Move X0, [X0+2104]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2491], W8
	016 Move [X31+12], W31
	017 Move X8, [X19]
	018 Add X1, X31, 12
	019 Move W2, 1
	020 Move X0, X19
	021 Move X9, [X8+872]
	022 Move X3, [X8+880]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move W8, [X31+12]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSINV not yet implemented."
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x036BC4C8 BL 0x1C16D08
	0x036BC4CC BL 0x1C16F10
	0x036BC4D0 MOV X19, X0
	0x036BC4D4 ADRP X0, 0xA66000
	0x036BC4D8 LDR X0, [X0 + 0xD90]
	0x036BC4DC B 0x36BC4FC
	0x036BC4E0 ADRP X0, 0xA3F000
	0x036BC4E4 LDR X0, [X0 + 0x760]
	0x036BC4E8 BL 0x1C16D08
	0x036BC4EC BL 0x1C16F10
	0x036BC4F0 MOV X19, X0
	0x036BC4F4 ADRP X0, 0xA62000
	0x036BC4F8 LDR X0, [X0 + 0xF90]
	0x036BC4FC BL 0x1C16D08
	0x036BC500 MOV X1, X0
	0x036BC504 MOV X0, X19
	0x036BC508 MOV X2, X31
	0x036BC50C BL 0x3316014
	0x036BC510 ADRP X0, 0xA83000
	0x036BC514 LDR X0, [X0 + 0x7D0]
	0x036BC518 BL 0x1C16D08
	0x036BC51C MOV X1, X0
	0x036BC520 MOV X0, X19
	0x036BC524 BL 0x1C16DEC
	0x036BC528 BL 0x1C16F20
	0x036BC52C MOV W20, W1
	0x036BC530 B 0x36BC538
	0x036BC534 MOV X20, X1
	0x036BC538 CMP W20, 0x1
	0x036BC53C B.NE 0x36BC644
	0x036BC540 BL 0x3EB1AD0
	0x036BC544 LDR X19, [X0]
	0x036BC548 BL 0x3EB1AE0
	0x036BC54C ADRP X0, 0xA37000
	0x036BC550 LDR X0, [X0 + 0x7D0]
	0x036BC554 BL 0x1C16D08
	0x036BC558 CBZ X19, 0x36BC510
	0x036BC55C LDR X8, [X19]
	0x036BC560 LDRB W9, [X0 + 0x130]
	0x036BC564 LDRB W10, [X8 + 0x130]
	0x036BC568 CMP W10, W9
	0x036BC56C B.CC 0x36BC510
	0x036BC570 LDR X8, [X8 + 0xC8]
	0x036BC574 ADD X8, X8, X9, 0x3, LSL
	0x036BC578 LDUR X8, [X8 - 0x8]
	0x036BC57C CMP X8, X0
	0x036BC580 B.NE 0x36BC510
	0x036BC584 ADRP X0, 0xA40000
	0x036BC588 LDR X0, [X0 + 0xDB8]
	0x036BC58C BL 0x1C16D08
	0x036BC590 LDR X8, [X19]
	0x036BC594 LDRB W9, [X0 + 0x130]
	0x036BC598 LDRB W10, [X8 + 0x130]
	0x036BC59C CMP W10, W9
	0x036BC5A0 B.CC 0x36BC5B8
	0x036BC5A4 LDR X8, [X8 + 0xC8]
	0x036BC5A8 ADD X8, X8, X9, 0x3, LSL
	0x036BC5AC LDUR X8, [X8 - 0x8]
	0x036BC5B0 CMP X8, X0
	0x036BC5B4 B.EQ 0x36BC510
	0x036BC5B8 MOV X0, X19
	0x036BC5BC BL 0x19903C0
	0x036BC5C0 LDR X8, [X19]
	0x036BC5C4 MOV X0, X19
	0x036BC5C8 LDP X9, X1, [X8 + 0x188]
	0x036BC5CC BLR X9
	0x036BC5D0 MOV X20, X0
	0x036BC5D4 ADRP X0, 0xA83000
	0x036BC5D8 LDR X0, [X0 + 0x790]
	0x036BC5DC BL 0x1C16D08
	0x036BC5E0 MOV X1, X20
	0x036BC5E4 MOV X2, X31
	0x036BC5E8 BL 0x32094D4
	0x036BC5EC MOV X20, X0
	0x036BC5F0 ADRP X0, 0xA65000
	0x036BC5F4 LDR X0, [X0 + 0x7A8]
	0x036BC5F8 BL 0x1C16D08
	0x036BC5FC BL 0x1C16F10
	0x036BC600 MOV X1, X20
	0x036BC604 MOV X2, X19
	0x036BC608 MOV X3, X31
	0x036BC60C MOV X21, X0
	0x036BC610 BL 0x32E2390
	0x036BC614 ADRP X0, 0xA83000
	0x036BC618 LDR X0, [X0 + 0x7D0]
	0x036BC61C BL 0x1C16D08
	0x036BC620 MOV X1, X0
	0x036BC624 MOV X0, X21
	0x036BC628 BL 0x1C16DEC
	0x036BC62C B 0x36BC630
	0x036BC630 CMP W1, W20
	0x036BC634 B.NE 0x36BC644
	0x036BC638 BL 0x3EB1AD0
	0x036BC63C BL 0x3EB1AE0
	0x036BC640 B 0x36BC510
	0x036BC644 BL 0x1D2C690
	0x036BC648 SUB X31, X31, 0x30
	0x036BC64C STR X30, [X31 + 0x10]
	0x036BC650 STP X20, X19, [X31 + 0x20]
	0x036BC654 MOV X7, X6
	0x036BC658 MOV X6, X5
	0x036BC65C ADD X5, X31, 0x1C
	0x036BC660 STR W31, [X31 + 0x1C]
	0x036BC664 BL 0x36C0E4C
	0x036BC668 LDR W19, [X31 + 0x1C]
	0x036BC66C CBZ W19, 0x36BC678
	0x036BC670 CMP W19, 0x3E5
	0x036BC674 B.NE 0x36BC688
	0x036BC678 LDP X20, X19, [X31 + 0x20]
	0x036BC67C LDR X30, [X31 + 0x10]
	0x036BC680 ADD X31, X31, 0x30
	0x036BC684 RET
	0x036BC688 ADRP X0, 0xA75000
	0x036BC68C LDR X0, [X0 + 0xD8]
	0x036BC690 BL 0x1C16D08
	0x036BC694 BL 0x1C16F10
	0x036BC698 MOV W1, W19
	0x036BC69C MOV X2, X31
	0x036BC6A0 MOV X20, X0
	0x036BC6A4 BL 0x36CA10C
	0x036BC6A8 ADRP X0, 0xA83000
	0x036BC6AC LDR X0, [X0 + 0x7D8]
	0x036BC6B0 BL 0x1C16D08
	0x036BC6B4 MOV X1, X0
	0x036BC6B8 MOV X0, X20
	0x036BC6BC BL 0x1C16DEC
	0x036BC6C0 STP X30, X21, [X31 - 0x20]!
	0x036BC6C4 STP X20, X19, [X31 + 0x10]
	0x036BC6C8 LDRB W21, [X0 + 0x38]
	0x036BC6CC MOV X20, X0
	0x036BC6D0 MOV X19, X1
	0x036BC6D4 BL 0x1C16D44
	0x036BC6D8 CBNZ W21, 0x36BC6FC
	0x036BC6DC CBZ X19, 0x36BC760
	0x036BC6E0 LDR X0, [X20 + 0x28]
	0x036BC6E4 CBZ X0, 0x36BC794
	0x036BC6E8 MOV X1, X19
	0x036BC6EC BL 0x36BC8C8
	0x036BC6F0 LDP X20, X19, [X31 + 0x10]
	0x036BC6F4 LDP X30, X21, [X31], #0x20
	0x036BC6F8 RET
	0x036BC6FC MOV X0, X20
	0x036BC700 MOV X1, X31
	0x036BC704 BL 0x33BE520
	0x036BC708 MOV X19, X0
	0x036BC70C BL 0x19903C0
	0x036BC710 LDR X8, [X19]
	0x036BC714 MOV X0, X19
	0x036BC718 LDR X9, [X8 + 0x2E8]
	0x036BC71C LDR X1, [X8 + 0x2F0]
	0x036BC720 BLR X9
	0x036BC724 MOV X19, X0
	0x036BC728 ADRP X0, 0xA60000
	0x036BC72C LDR X0, [X0 + 0x4B8]
	0x036BC730 BL 0x1C16D08
	0x036BC734 BL 0x1C16F10
	0x036BC738 MOV X1, X19
	0x036BC73C MOV X2, X31
	0x036BC740 MOV X20, X0
	0x036BC744 BL 0x338C448
	0x036BC748 ADRP X0, 0xA83000
	0x036BC74C LDR X0, [X0 + 0x7E0]
	0x036BC750 BL 0x1C16D08
	0x036BC754 MOV X1, X0
	0x036BC758 MOV X0, X20
	0x036BC75C BL 0x1C16DEC
	0x036BC760 ADRP X0, 0xA3C000
	0x036BC764 LDR X0, [X0 + 0x528]
	0x036BC768 BL 0x1C16D08
	0x036BC76C BL 0x1C16F10
	0x036BC770 MOV X19, X0
	0x036BC774 ADRP X0, 0xA62000
	0x036BC778 LDR X0, [X0 + 0xDD0]
	0x036BC77C BL 0x1C16D08
	0x036BC780 MOV X1, X0
	0x036BC784 MOV X0, X19
	0x036BC788 MOV X2, X31
	0x036BC78C BL 0x330E100
	0x036BC790 B 0x36BC8AC
	0x036BC794 BL 0x1C16F20
	0x036BC798 MOV W20, W1
	0x036BC79C B 0x36BC7A4
	0x036BC7A0 MOV X20, X1
	0x036BC7A4 CMP W20, 0x1
	0x036BC7A8 B.NE 0x36BC8C4
	0x036BC7AC BL 0x3EB1AD0
	0x036BC7B0 LDR X19, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0]
	009 Move X21, X1
	010 Move W19, W3
	011 Move W20, W2
	012 Move X9, [X8+472]
	013 Move X8, [X8+480]
	014 Move X22, X0
	015 Move X1, X8
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move W24, [X22+56]
	018 Move W23, W0
	019 Call 0x1C17D44
	020 Compare W24, 0
	021 JumpIfNotEqual {50}
	022 Move TEMP, X23
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {75}
	026 Compare X21, 0
	027 JumpIfEqual {87}
	028 Move X8, [X21+24]
	029 Move W9, W20
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W9, W19
	032 Subtract W8, W8, W20
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X22+40]
	035 Compare X0, 0
	036 JumpIfEqual {124}
	037 Move X1, X21
	038 Move W2, W20
	039 Move W3, W19
	040 Move W4, W31
	041 Call Socket.Send, X0, X1, X2, X3, X4
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X30, [X31+64]
	049 Return 
	050 Move X0, X22
	051 Move X1, X31
	052 Call "il2cpp_vm_object_is_inst", X0
	053 Move X19, X0
	054 Call 0x19913C0
	055 Move X8, [X19]
	056 Move X0, X19
	057 Move X9, [X8+744]
	058 Move X1, [X8+752]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X19, X0
	061 Move X0, 0xA61000
	062 Move X0, [X0+1208]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X1, X19
	066 Move X2, X31
	067 Move X20, X0
	068 Call ObjectDisposedException..ctor, X0, X1
	069 Move X0, 0xA84000
	070 Move X0, [X0+1928]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X20
	074 Call 0x1C17DEC
	075 Move X0, 0xA38000
	076 Move X0, [X0+1456]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xA84000
	081 Move X0, [X0+192]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call InvalidOperationException..ctor, X0, X1
	087 Move X0, 0xA3D000
	088 Move X0, [X0+1320]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0xA63000
	093 Move X0, [X0+3912]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call ArgumentNullException..ctor, X0, X1
	099 Move X0, 0xA40000
	100 Move X0, [X0+1888]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0xA67000
	105 Move X0, [X0+3472]
	106 Move X0, 0xA40000
	107 Move X0, [X0+1888]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0xA63000
	112 Move X0, [X0+3984]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call ArgumentOutOfRangeException..ctor, X0, X1
	118 Move X0, 0xA84000
	119 Move X0, [X0+1928]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Call 0x1C17DEC
	124 Call 0x1C17F20
	125 Move W20, W1
	126 Move X20, X1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Call 0x3EB2AD0
	129 Move X19, [X0]
	130 Call 0x3EB2AE0
	131 Move X0, 0xA38000
	132 Move X0, [X0+2000]
	133 Call 0x1C17D08
	134 Compare X19, 0
	135 JumpIfEqual {118}
	136 Move X8, [X19]
	137 Move W9, [X0+304]
	138 Move W10, [X8+304]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X8+200]
	141 Add X8, X8, X9
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, 0xA41000
	145 Move X0, [X0+3512]
	146 Call 0x1C17D08
	147 Move X8, [X19]
	148 Move W9, [X0+304]
	149 Move W10, [X8+304]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, [X8+200]
	152 Add X8, X8, X9
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, X19
	156 Call 0x19913C0
	157 Move X8, [X19]
	158 Move X0, X19
	159 Move X9, [X8+392]
	160 Move X1, [X8+400]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X20, X0
	163 Move X0, 0xA84000
	164 Move X0, [X0+1936]
	165 Call 0x1C17D08
	166 Move X1, X20
	167 Move X2, X31
	168 Call SR.Format, X0, X1
	169 Move X20, X0
	170 Move X0, 0xA66000
	171 Move X0, [X0+1960]
	172 Call 0x1C17D08
	173 Call 0x1C17F10
	174 Move X1, X20
	175 Move X2, X19
	176 Move X3, X31
	177 Move X21, X0
	178 Call IOException..ctor, X0, X1, X2
	179 Move X0, 0xA84000
	180 Move X0, [X0+1928]
	181 Call 0x1C17D08
	182 Move X1, X0
	183 Move X0, X21
	184 Call 0x1C17DEC
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Call 0x3EB2AD0
	187 Call 0x3EB2AE0
	188 Call 0x1D2D690

Method: System.Void Write(System.ReadOnlySpan`1<System.Byte> source)

Disassembly:
	0x036BC814 ADD X8, X8, X9, 0x3, LSL
	0x036BC818 LDUR X8, [X8 - 0x8]
	0x036BC81C CMP X8, X0
	0x036BC820 B.EQ 0x36BC8AC
	0x036BC824 MOV X0, X19
	0x036BC828 BL 0x19903C0
	0x036BC82C LDR X8, [X19]
	0x036BC830 MOV X0, X19
	0x036BC834 LDP X9, X1, [X8 + 0x188]
	0x036BC838 BLR X9
	0x036BC83C MOV X20, X0
	0x036BC840 ADRP X0, 0xA83000
	0x036BC844 LDR X0, [X0 + 0x790]
	0x036BC848 BL 0x1C16D08
	0x036BC84C MOV X1, X20
	0x036BC850 MOV X2, X31
	0x036BC854 BL 0x32094D4
	0x036BC858 MOV X20, X0
	0x036BC85C ADRP X0, 0xA65000
	0x036BC860 LDR X0, [X0 + 0x7A8]
	0x036BC864 BL 0x1C16D08
	0x036BC868 BL 0x1C16F10
	0x036BC86C MOV X1, X20
	0x036BC870 MOV X2, X19
	0x036BC874 MOV X3, X31
	0x036BC878 MOV X21, X0
	0x036BC87C BL 0x32E2390
	0x036BC880 ADRP X0, 0xA83000
	0x036BC884 LDR X0, [X0 + 0x7E0]
	0x036BC888 BL 0x1C16D08
	0x036BC88C MOV X1, X0
	0x036BC890 MOV X0, X21
	0x036BC894 BL 0x1C16DEC
	0x036BC898 B 0x36BC89C
	0x036BC89C CMP W1, W20
	0x036BC8A0 B.NE 0x36BC8C4
	0x036BC8A4 BL 0x3EB1AD0
	0x036BC8A8 BL 0x3EB1AE0
	0x036BC8AC ADRP X0, 0xA83000
	0x036BC8B0 LDR X0, [X0 + 0x7E0]
	0x036BC8B4 BL 0x1C16D08
	0x036BC8B8 MOV X1, X0
	0x036BC8BC MOV X0, X19
	0x036BC8C0 BL 0x1C16DEC
	0x036BC8C4 BL 0x1D2C690
	0x036BC8C8 STR X30, [X31 - 0x20]!
	0x036BC8CC STP X20, X19, [X31 + 0x10]
	0x036BC8D0 ADD X2, X31, 0xC
	0x036BC8D4 STR W31, [X31 + 0xC]
	0x036BC8D8 BL 0x36C1058
	0x036BC8DC LDR W19, [X31 + 0xC]
	0x036BC8E0 CBNZ W19, 0x36BC8F0
	0x036BC8E4 LDP X20, X19, [X31 + 0x10]
	0x036BC8E8 LDR X30, [X31], #0x20
	0x036BC8EC RET
	0x036BC8F0 ADRP X0, 0xA75000
	0x036BC8F4 LDR X0, [X0 + 0xD8]
	0x036BC8F8 BL 0x1C16D08
	0x036BC8FC BL 0x1C16F10
	0x036BC900 MOV W1, W19
	0x036BC904 MOV X2, X31
	0x036BC908 MOV X20, X0
	0x036BC90C BL 0x36CA10C
	0x036BC910 ADRP X0, 0xA83000
	0x036BC914 LDR X0, [X0 + 0x7E8]
	0x036BC918 BL 0x1C16D08
	0x036BC91C MOV X1, X0
	0x036BC920 MOV X0, X20
	0x036BC924 BL 0x1C16DEC
	0x036BC928 SUB X31, X31, 0x50
	0x036BC92C STP X30, X25, [X31 + 0x10]
	0x036BC930 STP X24, X23, [X31 + 0x20]
	0x036BC934 STP X22, X21, [X31 + 0x30]
	0x036BC938 STP X20, X19, [X31 + 0x40]
	0x036BC93C ADRP X24, 0xD24000
	0x036BC940 LDRB W8, [X24 + 0x9BE]
	0x036BC944 MOV X19, X4
	0x036BC948 MOV W21, W3
	0x036BC94C MOV W22, W2
	0x036BC950 MOV X20, X1
	0x036BC954 MOV X23, X0
	0x036BC958 TBNZ X8, 0x0, 0x36BC97C
	0x036BC95C ADRP X0, 0xA66000
	0x036BC960 LDR X0, [X0 + 0xE58]
	0x036BC964 BL 0x1C16CF4
	0x036BC968 ADRP X0, 0xA83000
	0x036BC96C LDR X0, [X0 + 0x7F0]
	0x036BC970 BL 0x1C16CF4
	0x036BC974 MOVZ W8, 0x1
	0x036BC978 STRB W8, [X24 + 0x9BE]
	0x036BC97C STP X31, X31, [X31]
	0x036BC980 LDR X8, [X23]
	0x036BC984 MOV X0, X23
	0x036BC988 LDP X9, X1, [X8 + 0x1A8]
	0x036BC98C BLR X9
	0x036BC990 LDRB W25, [X23 + 0x38]
	0x036BC994 MOV W24, W0
	0x036BC998 BL 0x1C16D44
	0x036BC99C CBNZ W25, 0x36BCA3C
	0x036BC9A0 TBZ X24, 0x0, 0x36BCAA0
	0x036BC9A4 CBZ X20, 0x36BCAD4
	0x036BC9A8 LDR X8, [X20 + 0x18]
	0x036BC9AC MOV W24, W22
	0x036BC9B0 CMP X24, W8, SXTW
	0x036BC9B4 B.GT 0x36BCB08
	0x036BC9B8 MOV W25, W21
	0x036BC9BC SUB W9, W8, W22
	0x036BC9C0 CMP X25, W9, SXTW
	0x036BC9C4 B.GT 0x36BCB28
	0x036BC9C8 LDR X23, [X23 + 0x28]
	0x036BC9CC CMP W8, W22
	0x036BC9D0 B.CC 0x36BC9DC
	0x036BC9D4 CMP W9, W21
	0x036BC9D8 B.CS 0x36BC9E4
	0x036BC9DC MOV X0, X31
	0x036BC9E0 BL 0x339D6EC
	0x036BC9E4 CBZ X23, 0x36BCB70
	0x036BC9E8 BFM X24, X25, 0x20, 0x1F
	0x036BC9EC MOVZ W4, 0x1
	0x036BC9F0 MOV X0, X23
	0x036BC9F4 MOV X1, X20
	0x036BC9F8 MOV X2, X24
	0x036BC9FC MOV W3, W31
	0x036BCA00 MOV X5, X19
	0x036BCA04 BL 0x36BCC98
	0x036BCA08 ADRP X8, 0xA83000
	0x036BCA0C LDR X8, [X8 + 0x7F0]
	0x036BCA10 STP X0, X1, [X31]
	0x036BCA14 LDR X8, [X8]
	0x036BCA18 ADD X0, X31, 0x0
	0x036BCA1C MOV X1, X8
	0x036BCA20 BL 0x27906D4
	0x036BCA24 LDP X20, X19, [X31 + 0x40]
	0x036BCA28 LDP X22, X21, [X31 + 0x30]
	0x036BCA2C LDP X24, X23, [X31 + 0x20]
	0x036BCA30 LDP X30, X25, [X31 + 0x10]
	0x036BCA34 ADD X31, X31, 0x50
	0x036BCA38 RET
	0x036BCA3C MOV X0, X23
	0x036BCA40 MOV X1, X31
	0x036BCA44 BL 0x33BE520
	0x036BCA48 MOV X19, X0
	0x036BCA4C BL 0x19903C0
	0x036BCA50 LDR X8, [X19]
	0x036BCA54 MOV X0, X19
	0x036BCA58 LDR X9, [X8 + 0x2E8]
	0x036BCA5C LDR X1, [X8 + 0x2F0]
	0x036BCA60 BLR X9
	0x036BCA64 MOV X19, X0
	0x036BCA68 ADRP X0, 0xA60000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD25000
	009 Move X22, 0xA84000
	010 Move X23, 0xA38000
	011 Move W8, [X24+2492]
	012 Move X22, [X22+1904]
	013 Move X23, [X23+1728]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA84000
	022 Move X0, [X0+1904]
	023 Call 0x1C17CF4
	024 Move X0, 0xA38000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2492], W8
	029 Move X0, X21
	030 Move X1, X31
	031 Move [X31+12], W31
	032 Call "il2cpp_vm_object_is_inst", X0
	033 Move X8, [X23]
	034 Move X23, [X22]
	035 Move X22, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X23
	042 Move X1, X31
	043 Call Type.GetTypeFromHandle, X0
	044 Move X1, X0
	045 Move X0, X22
	046 Move X2, X31
	047 Call Type.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {57}
	052 Move X0, X21
	053 Move X1, X20
	054 Move X2, X19
	055 Move X3, X31
	056 Call Stream.Write, X0, X1
	057 Move W22, [X21+56]
	058 Call 0x1C17D44
	059 Compare W22, 0
	060 JumpIfNotEqual {89}
	061 Move X8, [X21]
	062 Move X0, X21
	063 Move X9, [X8+472]
	064 Move X1, [X8+480]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {114}
	070 Move X0, [X21+40]
	071 Compare X0, 0
	072 JumpIfEqual {132}
	073 Add X4, X31, 12
	074 Move X1, X20
	075 Move X2, X19
	076 Move W3, W31
	077 Call Socket.Send, X0, X1, X2, X3
	078 Move W19, [X31+12]
	079 Compare W19, 0
	080 JumpIfNotEqual {133}
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Return 
	089 Move X0, X21
	090 Move X1, X31
	091 Call "il2cpp_vm_object_is_inst", X0
	092 Move X19, X0
	093 Call 0x19913C0
	094 Move X8, [X19]
	095 Move X0, X19
	096 Move X9, [X8+744]
	097 Move X1, [X8+752]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X19, X0
	100 Move X0, 0xA61000
	101 Move X0, [X0+1208]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X1, X19
	105 Move X2, X31
	106 Move X20, X0
	107 Call ObjectDisposedException..ctor, X0, X1
	108 Move X0, 0xA84000
	109 Move X0, [X0+1952]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC
	114 Move X0, 0xA38000
	115 Move X0, [X0+1456]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xA84000
	120 Move X0, [X0+192]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call InvalidOperationException..ctor, X0, X1
	126 Move X0, 0xA84000
	127 Move X0, [X0+1952]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC
	132 Call 0x1C17F20
	133 Move X0, 0xA76000
	134 Move X0, [X0+216]
	135 Call 0x1C17D08
	136 Call 0x1C17F10
	137 Move W1, W19
	138 Move X2, X31
	139 Move X20, X0
	140 Call SocketException..ctor, X0, X1
	141 Move X0, X20
	142 Call 0x19913C0
	143 Move X8, [X20]
	144 Move X0, X20
	145 Move X9, [X8+392]
	146 Move X1, [X8+400]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X19, X0
	149 Move X0, 0xA84000
	150 Move X0, [X0+1936]
	151 Call 0x1C17D08
	152 Move X1, X19
	153 Move X2, X31
	154 Call SR.Format, X0, X1
	155 Move X19, X0
	156 Move X0, 0xA66000
	157 Move X0, [X0+1960]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X1, X19
	161 Move X2, X20
	162 Move X3, X31
	163 Move X21, X0
	164 Call IOException..ctor, X0, X1, X2
	165 Move X0, 0xA84000
	166 Move X0, [X0+1952]
	167 Call 0x1C17D08
	168 Move X1, X0
	169 Move X0, X21
	170 Call 0x1C17DEC

Method: System.Void WriteByte(System.Byte value)

Disassembly:
	0x036BCAF8 MOV X0, X19
	0x036BCAFC MOV X2, X31
	0x036BCB00 BL 0x330E100
	0x036BCB04 B 0x36BCB58
	0x036BCB08 ADRP X0, 0xA3F000
	0x036BCB0C LDR X0, [X0 + 0x760]
	0x036BCB10 BL 0x1C16D08
	0x036BCB14 BL 0x1C16F10
	0x036BCB18 MOV X19, X0
	0x036BCB1C ADRP X0, 0xA66000
	0x036BCB20 LDR X0, [X0 + 0xD90]
	0x036BCB24 B 0x36BCB44
	0x036BCB28 ADRP X0, 0xA3F000
	0x036BCB2C LDR X0, [X0 + 0x760]
	0x036BCB30 BL 0x1C16D08
	0x036BCB34 BL 0x1C16F10
	0x036BCB38 MOV X19, X0
	0x036BCB3C ADRP X0, 0xA62000
	0x036BCB40 LDR X0, [X0 + 0xF90]
	0x036BCB44 BL 0x1C16D08
	0x036BCB48 MOV X1, X0
	0x036BCB4C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD25000
	005 Move W8, [X20+2493]
	006 Move X19, X0
	007 Move [X31+12], W1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA66000
	013 Move X0, [X0+2120]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2493], W8
	017 Move X8, [X19]
	018 Add X1, X31, 12
	019 Move W2, 1
	020 Move X0, X19
	021 Move X9, [X8+920]
	022 Move X3, [X8+928]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: System.Void Close(System.Int32 timeout)

Disassembly:
	0x036BCB50 MOV X2, X31
	0x036BCB54 BL 0x3316014
	0x036BCB58 ADRP X0, 0xA83000
	0x036BCB5C LDR X0, [X0 + 0x7F8]
	0x036BCB60 BL 0x1C16D08
	0x036BCB64 MOV X1, X0
	0x036BCB68 MOV X0, X19
	0x036BCB6C BL 0x1C16DEC
	0x036BCB70 BL 0x1C16F20
	0x036BCB74 MOV X20, X1
	0x036BCB78 B 0x36BCB88
	0x036BCB7C B 0x36BCB84
	0x036BCB80 B 0x36BCB84
	0x036BCB84 MOV W20, W1
	0x036BCB88 CMP W20, 0x1
	0x036BCB8C B.NE 0x36BCC94
	0x036BCB90 BL 0x3EB1AD0
	0x036BCB94 LDR X19, [X0]
	0x036BCB98 BL 0x3EB1AE0
	0x036BCB9C ADRP X0, 0xA37000
	0x036BCBA0 LDR X0, [X0 + 0x7D0]
	0x036BCBA4 BL 0x1C16D08
	0x036BCBA8 CBZ X19, 0x36BCB58
	0x036BCBAC LDR X8, [X19]
	0x036BCBB0 LDRB W9, [X0 + 0x130]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add W31, W1, 2
	004 Move [X0+52], W1
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call Stream.Dispose, X0
	009 Return 
	010 Move X0, 0xA40000
	011 Move X0, [X0+1888]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0xA72000
	016 Move X0, [X0+1248]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call ArgumentOutOfRangeException..ctor, X0, X1
	022 Move X0, 0xA84000
	023 Move X0, [X0+1960]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x036BCBB4 LDRB W10, [X8 + 0x130]
	0x036BCBB8 CMP W10, W9
	0x036BCBBC B.CC 0x36BCB58
	0x036BCBC0 LDR X8, [X8 + 0xC8]
	0x036BCBC4 ADD X8, X8, X9, 0x3, LSL
	0x036BCBC8 LDUR X8, [X8 - 0x8]
	0x036BCBCC CMP X8, X0
	0x036BCBD0 B.NE 0x36BCB58
	0x036BCBD4 ADRP X0, 0xA40000
	0x036BCBD8 LDR X0, [X0 + 0xDB8]
	0x036BCBDC BL 0x1C16D08
	0x036BCBE0 LDR X8, [X19]
	0x036BCBE4 LDRB W9, [X0 + 0x130]
	0x036BCBE8 LDRB W10, [X8 + 0x130]
	0x036BCBEC CMP W10, W9
	0x036BCBF0 B.CC 0x36BCC08
	0x036BCBF4 LDR X8, [X8 + 0xC8]
	0x036BCBF8 ADD X8, X8, X9, 0x3, LSL
	0x036BCBFC LDUR X8, [X8 - 0x8]
	0x036BCC00 CMP X8, X0
	0x036BCC04 B.EQ 0x36BCB58
	0x036BCC08 MOV X0, X19
	0x036BCC0C BL 0x19903C0
	0x036BCC10 LDR X8, [X19]
	0x036BCC14 MOV X0, X19
	0x036BCC18 LDP X9, X1, [X8 + 0x188]
	0x036BCC1C BLR X9
	0x036BCC20 MOV X20, X0
	0x036BCC24 ADRP X0, 0xA83000
	0x036BCC28 LDR X0, [X0 + 0x760]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+56]
	006 Move X19, X0
	007 Move W20, W1
	008 Call 0x1C17D44
	009 Call 0x1C17D44
	010 Move W8, 1
	011 NotImplemented "Instruction BIC not yet implemented."
	012 Move [X19+56], W8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {32}
	017 Move W8, [X19+48]
	018 NotImplemented "Instruction STURH not yet implemented."
	019 Compare W8, 0
	020 JumpIfEqual {32}
	021 Move X0, [X19+40]
	022 Compare X0, 0
	023 JumpIfEqual {41}
	024 Move W1, 2
	025 Call Socket.InternalShutdown, X0, X1
	026 Move X0, [X19+40]
	027 Compare X0, 0
	028 JumpIfEqual {41}
	029 Move W8, [X19+52]
	030 Move [X0+28], W8
	031 Call Socket.Dispose, X0
	032 And W1, W20, 1
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X2, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call Stream.Dispose, X0, X1
	040 Return 
	041 Call 0x1C17F20

Method: System.Void Finalize()

Disassembly:
	0x036BCCBC LDRB W8, [X24 + 0x9C3]
	0x036BCCC0 LDR X25, [X25 + 0x7D8]
	0x036BCCC4 MOV W21, W4
	0x036BCCC8 MOV W19, W3
	0x036BCCCC MOV X22, X2
	0x036BCCD0 MOV X23, X1
	0x036BCCD4 MOV X20, X0
	0x036BCCD8 TBNZ X8, 0x0, 0x36BCD68
	0x036BCCDC ADRP X0, 0xA3F000
	0x036BCCE0 LDR X0, [X0 + 0x7D8]
	0x036BCCE4 BL 0x1C16CF4
	0x036BCCE8 ADRP X0, 0xA83000
	0x036BCCEC LDR X0, [X0 + 0x800]
	0x036BCCF0 BL 0x1C16CF4
	0x036BCCF4 ADRP X0, 0xA83000
	0x036BCCF8 LDR X0, [X0 + 0x808]
	0x036BCCFC BL 0x1C16CF4
	0x036BCD00 ADRP X0, 0xA83000
	0x036BCD04 LDR X0, [X0 + 0x810]
	0x036BCD08 BL 0x1C16CF4
	0x036BCD0C ADRP X0, 0xA83000
	0x036BCD10 LDR X0, [X0 + 0x818]
	0x036BCD14 BL 0x1C16CF4
	0x036BCD18 ADRP X0, 0xA6A000
	0x036BCD1C LDR X0, [X0 + 0xCC8]
	0x036BCD20 BL 0x1C16CF4
	0x036BCD24 ADRP X0, 0xA38000
	0x036BCD28 LDR X0, [X0 + 0x7B8]
	0x036BCD2C BL 0x1C16CF4
	0x036BCD30 ADRP X0, 0xA83000
	0x036BCD34 LDR X0, [X0 + 0x820]
	0x036BCD38 BL 0x1C16CF4
	0x036BCD3C ADRP X0, 0xA83000
	0x036BCD40 LDR X0, [X0 + 0x828]
	0x036BCD44 BL 0x1C16CF4
	0x036BCD48 ADRP X0, 0xA83000
	0x036BCD4C LDR X0, [X0 + 0x830]
	0x036BCD50 BL 0x1C16CF4
	0x036BCD54 ADRP X0, 0xA6A000
	0x036BCD58 LDR X0, [X0 + 0xD20]
	0x036BCD5C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+648]
	008 Move X2, [X8+656]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036BCD60 MOVZ W8, 0x1
	0x036BCD64 STRB W8, [X24 + 0x9C3]
	0x036BCD68 LDR X0, [X25]
	0x036BCD6C LDR W8, [X0 + 0xE0]
	0x036BCD70 CBNZ W8, 0x36BCD78
	0x036BCD74 BL 0x1C16DFC
	0x036BCD78 ADD X0, X31, 0x8
	0x036BCD7C MOV X1, X31
	0x036BCD80 BL 0x33DD2B0
	0x036BCD84 TBZ X0, 0x0, 0x36BCDBC
	0x036BCD88 ADRP X8, 0xA38000
	0x036BCD8C LDR X8, [X8 + 0x7B8]
	0x036BCD90 ADRP X20, 0xA6A000
	0x036BCD94 LDR X19, [X31 + 0x8]
	0x036BCD98 LDR X0, [X8]
	0x036BCD9C LDR W8, [X0 + 0xE0]
	0x036BCDA0 LDR X20, [X20 + 0xCC8]
	0x036BCDA4 CBNZ W8, 0x36BCDAC
	0x036BCDA8 BL 0x1C16DFC
	0x036BCDAC LDR X1, [X20]
	0x036BCDB0 MOV X0, X19
	0x036BCDB4 BL 0x2299598
	0x036BCDB8 B 0x36BCF44
	0x036BCDBC ADRP X27, 0xA83000
	0x036BCDC0 LDR X27, [X27 + 0x830]
	0x036BCDC4 ADD X24, X20, 0x10
	0x036BCDC8 LDR X0, [X27]
	0x036BCDCC LDR W8, [X0 + 0xE0]
	0x036BCDD0 CBNZ W8, 0x36BCDDC
	0x036BCDD4 BL 0x1C16DFC
	0x036BCDD8 LDR X0, [X27]
	0x036BCDDC LDR X8, [X0 + 0xB8]
	0x036BCDE0 ADRP X28, 0xA83000
	0x036BCDE4 LDR X25, [X8 + 0x10]
	0x036BCDE8 LDR X28, [X28 + 0x818]
	0x036BCDEC CBNZ X25, 0x36BCE40
	0x036BCDF0 LDR W8, [X0 + 0xE0]
	0x036BCDF4 CBNZ W8, 0x36BCE00
	0x036BCDF8 BL 0x1C16DFC
	0x036BCDFC LDR X0, [X27]
	0x036BCE00 ADRP X9, 0xA83000
	0x036BCE04 LDR X8, [X0 + 0xB8]
	0x036BCE08 LDR X9, [X9 + 0x800]
	0x036BCE0C LDR X26, [X8]
	0x036BCE10 LDR X0, [X9]
	0x036BCE14 BL 0x1C16F10
	0x036BCE18 ADRP X8, 0xA83000
	0x036BCE1C LDR X8, [X8 + 0x820]
	0x036BCE20 MOV X1, X26
	0x036BCE24 MOV X3, X31
	0x036BCE28 MOV X25, X0
	0x036BCE2C LDR X2, [X8]
	0x036BCE30 BL 0x2D27AA8
	0x036BCE34 LDR X8, [X27]
	0x036BCE38 LDR X8, [X8 + 0xB8]
	0x036BCE3C STR X25, [X8 + 0x10]
	0x036BCE40 LDR X2, [X28]
	0x036BCE44 MOV X0, X24
	0x036BCE48 MOV X1, X25
	0x036BCE4C BL 0x2212A40
	0x036BCE50 CBZ X0, 0x36BCF7C
	0x036BCE54 MOV X8, X0
	0x036BCE58 LDR X0, [X27]
	0x036BCE5C ADD X24, X8, 0x28
	0x036BCE60 LDR W9, [X0 + 0xE0]
	0x036BCE64 CBNZ W9, 0x36BCE70
	0x036BCE68 BL 0x1C16DFC
	0x036BCE6C LDR X0, [X27]
	0x036BCE70 LDR X8, [X0 + 0xB8]
	0x036BCE74 LDR X25, [X8 + 0x18]
	0x036BCE78 CBNZ X25, 0x36BCECC
	0x036BCE7C LDR W8, [X0 + 0xE0]
	0x036BCE80 CBNZ W8, 0x36BCE8C
	0x036BCE84 BL 0x1C16DFC
	0x036BCE88 LDR X0, [X27]
	0x036BCE8C ADRP X9, 0xA83000
	0x036BCE90 LDR X8, [X0 + 0xB8]
	0x036BCE94 LDR X9, [X9 + 0x808]
	0x036BCE98 LDR X26, [X8]
	0x036BCE9C LDR X0, [X9]
	0x036BCEA0 BL 0x1C16F10
	0x036BCEA4 ADRP X8, 0xA83000
	0x036BCEA8 LDR X8, [X8 + 0x828]
	0x036BCEAC MOV X1, X26
	0x036BCEB0 MOV X3, X31
	0x036BCEB4 MOV X25, X0
	0x036BCEB8 LDR X2, [X8]
	0x036BCEBC BL 0x2D27AA8
	0x036BCEC0 LDR X8, [X27]
	0x036BCEC4 LDR X8, [X8 + 0xB8]
	0x036BCEC8 STR X25, [X8 + 0x18]
	0x036BCECC ADRP X8, 0xA83000
	0x036BCED0 LDR X8, [X8 + 0x810]
	0x036BCED4 MOV X0, X24
	0x036BCED8 MOV X1, X25
	0x036BCEDC LDR X2, [X8]
	0x036BCEE0 BL 0x2212A40
	0x036BCEE4 CBZ X0, 0x36BCF7C
	0x036BCEE8 MOV X1, X31
	0x036BCEEC MOV X24, X0
	0x036BCEF0 BL 0x36C6278
	0x036BCEF4 TBZ X0, 0x0, 0x36BCF30
	0x036BCEF8 MOV X0, X24
	0x036BCEFC MOV X1, X23
	0x036BCF00 MOV X2, X22
	0x036BCF04 MOV X3, X31
	0x036BCF08 BL 0x36CCF7C
	0x036BCF0C AND W8, W21, 0x1
	0x036BCF10 MOV X0, X24
	0x036BCF14 MOV X1, X20
	0x036BCF18 MOV X2, X31
	0x036BCF1C STR W19, [X24 + 0x44]
	0x036BCF20 STRB W8, [X24 + 0x9A]
	0x036BCF24 BL 0x36C6848
	0x036BCF28 MOV X19, X0
	0x036BCF2C B 0x36BCF5C
	0x036BCF30 MOV X0, X20
	0x036BCF34 MOV X1, X23
	0x036BCF38 MOV X2, X22
	0x036BCF3C MOV W3, W19
	0x036BCF40 BL 0x36BE0E0
	0x036BCF44 MOV X19, X0
	0x036BCF48 CBNZ X0, 0x36BCF58
	0x036BCF4C MOVZ W0, 0x26
	0x036BCF50 MOV X1, X31
	0x036BCF54 BL 0x338F3E0
	0x036BCF58 MOVZ X1, 0x10000
	0x036BCF5C MOV X0, X19
	0x036BCF60 LDP X20, X19, [X31 + 0x50]
	0x036BCF64 LDP X22, X21, [X31 + 0x40]
	0x036BCF68 LDP X24, X23, [X31 + 0x30]
	0x036BCF6C LDP X26, X25, [X31 + 0x20]
	0x036BCF70 LDP X28, X27, [X31 + 0x10]
	0x036BCF74 LDR X30, [X31], #0x60
	0x036BCF78 RET
	0x036BCF7C BL 0x1C16F20
	0x036BCF80 STR X30, [X31 - 0x40]!
	0x036BCF84 STP X24, X23, [X31 + 0x10]
	0x036BCF88 STP X22, X21, [X31 + 0x20]
	0x036BCF8C STP X20, X19, [X31 + 0x30]
	0x036BCF90 LDR X8, [X0]
	0x036BCF94 MOV X21, X1
	0x036BCF98 MOV X19, X3
	0x036BCF9C MOV X20, X2
	0x036BCFA0 LDP X9, X8, [X8 + 0x1A8]
	0x036BCFA4 MOV X22, X0
	0x036BCFA8 MOV X1, X8
	0x036BCFAC BLR X9
	0x036BCFB0 LDRB W24, [X22 + 0x38]
	0x036BCFB4 MOV W23, W0
	0x036BCFB8 BL 0x1C16D44
	0x036BCFBC CBNZ W24, 0x36BCFF8
	0x036BCFC0 TBZ X23, 0x0, 0x36BD05C
	0x036BCFC4 LDR X0, [X22 + 0x28]
	0x036BCFC8 CBZ X0, 0x36BD090
	0x036BCFCC MOVZ W4, 0x1
	0x036BCFD0 MOV X1, X21
	0x036BCFD4 MOV X2, X20
	0x036BCFD8 MOV W3, W31
	0x036BCFDC MOV X5, X19
	0x036BCFE0 BL 0x36BCC98
	0x036BCFE4 LDP X20, X19, [X31 + 0x30]
	0x036BCFE8 LDP X22, X21, [X31 + 0x20]
	0x036BCFEC LDP X24, X23, [X31 + 0x10]
	0x036BCFF0 LDR X30, [X31], #0x40
	0x036BCFF4 RET
	0x036BCFF8 MOV X0, X22
	0x036BCFFC MOV X1, X31
	0x036BD000 BL 0x33BE520
	0x036BD004 MOV X19, X0
	0x036BD008 BL 0x19903C0
	0x036BD00C LDR X8, [X19]
	0x036BD010 MOV X0, X19
	0x036BD014 LDR X9, [X8 + 0x2E8]
	0x036BD018 LDR X1, [X8 + 0x2F0]
	0x036BD01C BLR X9
	0x036BD020 MOV X19, X0
	0x036BD024 ADRP X0, 0xA5F000
	0x036BD028 LDR X0, [X0 + 0x4B8]
	0x036BD02C BL 0x1C16D08
	0x036BD030 BL 0x1C16F10
	0x036BD034 MOV X1, X19
	0x036BD038 MOV X2, X31
	0x036BD03C MOV X20, X0
	0x036BD040 BL 0x338C448
	0x036BD044 ADRP X0, 0xA82000
	0x036BD048 LDR X0, [X0 + 0x838]
	0x036BD04C BL 0x1C16D08
	0x036BD050 MOV X1, X0
	0x036BD054 MOV X0, X20
	0x036BD058 BL 0x1C16DEC
	0x036BD05C ADRP X0, 0xA36000
	0x036BD060 LDR X0, [X0 + 0x5B0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X0]
	011 Move X23, X1
	012 Move X19, X5
	013 Move X20, X4
	014 Move X9, [X8+424]
	015 Move X8, [X8+432]
	016 Move W21, W3
	017 Move W22, W2
	018 Move X24, X0
	019 Move X1, X8
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move W26, [X24+56]
	022 Move W25, W0
	023 Call 0x1C17D44
	024 Compare W26, 0
	025 JumpIfNotEqual {58}
	026 Move TEMP, X25
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {83}
	030 Compare X23, 0
	031 JumpIfEqual {95}
	032 Move X8, [X23+24]
	033 Move W9, W22
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, W21
	036 Subtract W8, W8, W22
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X24+40]
	039 Compare X0, 0
	040 JumpIfEqual {132}
	041 Move X1, X23
	042 Move W2, W22
	043 Move W3, W21
	044 Move W4, W31
	045 Move X5, X20
	046 Move X6, X19
	047 Call Socket.BeginReceive, X0, X1, X2, X3, X4, X5, X6
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X24, [X31+32]
	053 Move X23, [X31+40]
	054 Move X26, [X31+16]
	055 Move X25, [X31+24]
	056 Move X30, [X31+80]
	057 Return X0
	058 Move X0, X24
	059 Move X1, X31
	060 Call "il2cpp_vm_object_is_inst", X0
	061 Move X19, X0
	062 Call 0x19913C0
	063 Move X8, [X19]
	064 Move X0, X19
	065 Move X9, [X8+744]
	066 Move X1, [X8+752]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X19, X0
	069 Move X0, 0xA61000
	070 Move X0, [X0+1208]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X1, X19
	074 Move X2, X31
	075 Move X20, X0
	076 Call ObjectDisposedException..ctor, X0, X1
	077 Move X0, 0xA84000
	078 Move X0, [X0+1968]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X20
	082 Call 0x1C17DEC
	083 Move X0, 0xA38000
	084 Move X0, [X0+1456]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0xA84000
	089 Move X0, [X0+160]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Move X2, X31
	094 Call InvalidOperationException..ctor, X0, X1
	095 Move X0, 0xA3D000
	096 Move X0, [X0+1320]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xA63000
	101 Move X0, [X0+3912]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call ArgumentNullException..ctor, X0, X1
	107 Move X0, 0xA40000
	108 Move X0, [X0+1888]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0xA67000
	113 Move X0, [X0+3472]
	114 Move X0, 0xA40000
	115 Move X0, [X0+1888]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xA63000
	120 Move X0, [X0+3984]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call ArgumentOutOfRangeException..ctor, X0, X1
	126 Move X0, 0xA84000
	127 Move X0, [X0+1968]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC
	132 Call 0x1C17F20
	133 Move W20, W1
	134 Move X20, X1
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Call 0x3EB2AD0
	137 Move X19, [X0]
	138 Call 0x3EB2AE0
	139 Move X0, 0xA38000
	140 Move X0, [X0+2000]
	141 Call 0x1C17D08
	142 Compare X19, 0
	143 JumpIfEqual {126}
	144 Move X8, [X19]
	145 Move W9, [X0+304]
	146 Move W10, [X8+304]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, [X8+200]
	149 Add X8, X8, X9
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, 0xA41000
	153 Move X0, [X0+3512]
	154 Call 0x1C17D08
	155 Move X8, [X19]
	156 Move W9, [X0+304]
	157 Move W10, [X8+304]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, [X8+200]
	160 Add X8, X8, X9
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X19
	164 Call 0x19913C0
	165 Move X8, [X19]
	166 Move X0, X19
	167 Move X9, [X8+392]
	168 Move X1, [X8+400]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X20, X0
	171 Move X0, 0xA84000
	172 Move X0, [X0+1888]
	173 Call 0x1C17D08
	174 Move X1, X20
	175 Move X2, X31
	176 Call SR.Format, X0, X1
	177 Move X20, X0
	178 Move X0, 0xA65000
	179 Move X0, [X0+1960]
	180 Call 0x1C17D08
	181 Call 0x1C17F10
	182 Move X1, X20
	183 Move X2, X19
	184 Move X3, X31
	185 Move X21, X0
	186 Call IOException..ctor, X0, X1, X2
	187 Move X0, 0xA83000
	188 Move X0, [X0+1968]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X21
	192 Call 0x1C17DEC
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Call 0x3EB2AD0
	195 Call 0x3EB2AE0
	196 Call 0x1D2D690

Method: System.Int32 EndRead(System.IAsyncResult asyncResult)

Disassembly:
	0x036BD0DC ADD X8, X8, X9, 0x3, LSL
	0x036BD0E0 LDUR X8, [X8 - 0x8]
	0x036BD0E4 CMP X8, X0
	0x036BD0E8 B.NE 0x36BD1A8
	0x036BD0EC ADRP X0, 0xA3F000
	0x036BD0F0 LDR X0, [X0 + 0xDB8]
	0x036BD0F4 BL 0x1C16D08
	0x036BD0F8 LDR X8, [X19]
	0x036BD0FC LDRB W9, [X0 + 0x130]
	0x036BD100 LDRB W10, [X8 + 0x130]
	0x036BD104 CMP W10, W9
	0x036BD108 B.CC 0x36BD120
	0x036BD10C LDR X8, [X8 + 0xC8]
	0x036BD110 ADD X8, X8, X9, 0x3, LSL
	0x036BD114 LDUR X8, [X8 - 0x8]
	0x036BD118 CMP X8, X0
	0x036BD11C B.EQ 0x36BD1A8
	0x036BD120 MOV X0, X19
	0x036BD124 BL 0x19903C0
	0x036BD128 LDR X8, [X19]
	0x036BD12C MOV X0, X19
	0x036BD130 LDP X9, X1, [X8 + 0x188]
	0x036BD134 BLR X9
	0x036BD138 MOV X20, X0
	0x036BD13C ADRP X0, 0xA82000
	0x036BD140 LDR X0, [X0 + 0x760]
	0x036BD144 BL 0x1C16D08
	0x036BD148 MOV X1, X20
	0x036BD14C MOV X2, X31
	0x036BD150 BL 0x32094D4
	0x036BD154 MOV X20, X0
	0x036BD158 ADRP X0, 0xA64000
	0x036BD15C LDR X0, [X0 + 0x7A8]
	0x036BD160 BL 0x1C16D08
	0x036BD164 BL 0x1C16F10
	0x036BD168 MOV X1, X20
	0x036BD16C MOV X2, X19
	0x036BD170 MOV X3, X31
	0x036BD174 MOV X21, X0
	0x036BD178 BL 0x32E2390
	0x036BD17C ADRP X0, 0xA82000
	0x036BD180 LDR X0, [X0 + 0x838]
	0x036BD184 BL 0x1C16D08
	0x036BD188 MOV X1, X0
	0x036BD18C MOV X0, X21
	0x036BD190 BL 0x1C16DEC
	0x036BD194 B 0x36BD198
	0x036BD198 CMP W1, W20
	0x036BD19C B.NE 0x36BD1C0
	0x036BD1A0 BL 0x3EB1AD0
	0x036BD1A4 BL 0x3EB1AE0
	0x036BD1A8 ADRP X0, 0xA82000
	0x036BD1AC LDR X0, [X0 + 0x838]
	0x036BD1B0 BL 0x1C16D08
	0x036BD1B4 MOV X1, X0
	0x036BD1B8 MOV X0, X19
	0x036BD1BC BL 0x1C16DEC
	0x036BD1C0 BL 0x1D2C690
	0x036BD1C4 SUB X31, X31, 0x50
	0x036BD1C8 STP X30, X25, [X31 + 0x10]
	0x036BD1CC STP X24, X23, [X31 + 0x20]
	0x036BD1D0 STP X22, X21, [X31 + 0x30]
	0x036BD1D4 STP X20, X19, [X31 + 0x40]
	0x036BD1D8 ADRP X24, 0xD23000
	0x036BD1DC LDRB W8, [X24 + 0x9BF]
	0x036BD1E0 MOV X19, X4
	0x036BD1E4 MOV W21, W3
	0x036BD1E8 MOV W22, W2
	0x036BD1EC MOV X20, X1
	0x036BD1F0 MOV X23, X0
	0x036BD1F4 TBNZ X8, 0x0, 0x36BD218
	0x036BD1F8 ADRP X0, 0xA65000
	0x036BD1FC LDR X0, [X0 + 0xEA0]
	0x036BD200 BL 0x1C16CF4
	0x036BD204 ADRP X0, 0xA60000
	0x036BD208 LDR X0, [X0 + 0xE40]
	0x036BD20C BL 0x1C16CF4
	0x036BD210 MOVZ W8, 0x1
	0x036BD214 STRB W8, [X24 + 0x9BF]
	0x036BD218 STP X31, X31, [X31]
	0x036BD21C LDR X8, [X23]
	0x036BD220 MOV X0, X23
	0x036BD224 LDP X9, X1, [X8 + 0x1D8]
	0x036BD228 BLR X9
	0x036BD22C LDRB W25, [X23 + 0x38]
	0x036BD230 MOV W24, W0
	0x036BD234 BL 0x1C16D44
	0x036BD238 CBNZ W25, 0x36BD2E4
	0x036BD23C TBZ X24, 0x0, 0x36BD348
	0x036BD240 CBZ X20, 0x36BD37C
	0x036BD244 LDR X8, [X20 + 0x18]
	0x036BD248 MOV W24, W22
	0x036BD24C CMP X24, W8, SXTW
	0x036BD250 B.GT 0x36BD3B0
	0x036BD254 MOV W25, W21
	0x036BD258 SUB W9, W8, W22
	0x036BD25C CMP X25, W9, SXTW
	0x036BD260 B.GT 0x36BD3D0
	0x036BD264 LDR X23, [X23 + 0x28]
	0x036BD268 CMP W8, W22
	0x036BD26C B.CC 0x36BD278
	0x036BD270 CMP W9, W21
	0x036BD274 B.CS 0x36BD280
	0x036BD278 MOV X0, X31
	0x036BD27C BL 0x339D6EC
	0x036BD280 CBZ X23, 0x36BD404
	0x036BD284 BFM X24, X25, 0x20, 0x1F
	0x036BD288 MOV X0, X23
	0x036BD28C MOV X1, X20
	0x036BD290 MOV X2, X24
	0x036BD294 MOV W3, W31
	0x036BD298 MOV X4, X19
	0x036BD29C BL 0x36BD544
	0x036BD2A0 ADRP X8, 0xA60000
	0x036BD2A4 LDR X8, [X8 + 0xE40]
	0x036BD2A8 STP X0, X1, [X31]
	0x036BD2AC LDR X8, [X8]
	0x036BD2B0 LDR W9, [X8 + 0xE0]
	0x036BD2B4 CBNZ W9, 0x36BD2C0
	0x036BD2B8 MOV X0, X8
	0x036BD2BC BL 0x1C16DFC
	0x036BD2C0 ADD X0, X31, 0x0
	0x036BD2C4 MOV X1, X31
	0x036BD2C8 BL 0x33ED6CC
	0x036BD2CC LDP X20, X19, [X31 + 0x40]
	0x036BD2D0 LDP X22, X21, [X31 + 0x30]
	0x036BD2D4 LDP X24, X23, [X31 + 0x20]
	0x036BD2D8 LDP X30, X25, [X31 + 0x10]
	0x036BD2DC ADD X31, X31, 0x50
	0x036BD2E0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+56]
	006 Move X20, X0
	007 Move X19, X1
	008 Call 0x1C17D44
	009 Compare W21, 0
	010 JumpIfNotEqual {23}
	011 Compare X19, 0
	012 JumpIfEqual {48}
	013 Move X0, [X20+40]
	014 Compare X0, 0
	015 JumpIfEqual {60}
	016 Move X1, X19
	017 Call Socket.EndReceive, X0, X1
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return X0
	023 Move X0, X20
	024 Move X1, X31
	025 Call "il2cpp_vm_object_is_inst", X0
	026 Move X19, X0
	027 Call 0x19913C0
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+744]
	031 Move X1, [X8+752]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X19, X0
	034 Move X0, 0xA60000
	035 Move X0, [X0+1208]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X1, X19
	039 Move X2, X31
	040 Move X20, X0
	041 Call ObjectDisposedException..ctor, X0, X1
	042 Move X0, 0xA83000
	043 Move X0, [X0+1984]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X20
	047 Call 0x1C17DEC
	048 Move X0, 0xA3C000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0xA62000
	054 Move X0, [X0+3536]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Call 0x1C17F20
	061 Move W20, W1
	062 Move X20, X1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Call 0x3EB2AD0
	065 Move X19, [X0]
	066 Call 0x3EB2AE0
	067 Move X0, 0xA37000
	068 Move X0, [X0+2000]
	069 Call 0x1C17D08
	070 Compare X19, 0
	071 JumpIfEqual {124}
	072 Move X8, [X19]
	073 Move W9, [X0+304]
	074 Move W10, [X8+304]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X8+200]
	077 Add X8, X8, X9
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, 0xA40000
	081 Move X0, [X0+3512]
	082 Call 0x1C17D08
	083 Move X8, [X19]
	084 Move W9, [X0+304]
	085 Move W10, [X8+304]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X8+200]
	088 Add X8, X8, X9
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, X19
	092 Call 0x19913C0
	093 Move X8, [X19]
	094 Move X0, X19
	095 Move X9, [X8+392]
	096 Move X1, [X8+400]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X20, X0
	099 Move X0, 0xA83000
	100 Move X0, [X0+1888]
	101 Call 0x1C17D08
	102 Move X1, X20
	103 Move X2, X31
	104 Call SR.Format, X0, X1
	105 Move X20, X0
	106 Move X0, 0xA65000
	107 Move X0, [X0+1960]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X1, X20
	111 Move X2, X19
	112 Move X3, X31
	113 Move X21, X0
	114 Call IOException..ctor, X0, X1, X2
	115 Move X0, 0xA83000
	116 Move X0, [X0+1984]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X21
	120 Call 0x1C17DEC
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Call 0x3EB2AD0
	123 Call 0x3EB2AE0
	124 Move X0, 0xA83000
	125 Move X0, [X0+1984]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Call 0x1C17DEC
	130 Call 0x1D2D690

Method: System.IAsyncResult BeginWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036BD344 BL 0x1C16DEC
	0x036BD348 ADRP X0, 0xA36000
	0x036BD34C LDR X0, [X0 + 0x5B0]
	0x036BD350 BL 0x1C16D08
	0x036BD354 BL 0x1C16F10
	0x036BD358 MOV X19, X0
	0x036BD35C ADRP X0, 0xA82000
	0x036BD360 LDR X0, [X0 + 0xC0]
	0x036BD364 BL 0x1C16D08
	0x036BD368 MOV X1, X0
	0x036BD36C MOV X0, X19
	0x036BD370 MOV X2, X31
	0x036BD374 BL 0x337DF1C
	0x036BD378 B 0x36BD528
	0x036BD37C ADRP X0, 0xA3B000
	0x036BD380 LDR X0, [X0 + 0x528]
	0x036BD384 BL 0x1C16D08
	0x036BD388 BL 0x1C16F10
	0x036BD38C MOV X19, X0
	0x036BD390 ADRP X0, 0xA61000
	0x036BD394 LDR X0, [X0 + 0xF48]
	0x036BD398 BL 0x1C16D08
	0x036BD39C MOV X1, X0
	0x036BD3A0 MOV X0, X19
	0x036BD3A4 MOV X2, X31
	0x036BD3A8 BL 0x330E100
	0x036BD3AC B 0x36BD528
	0x036BD3B0 ADRP X0, 0xA3E000
	0x036BD3B4 LDR X0, [X0 + 0x760]
	0x036BD3B8 BL 0x1C16D08
	0x036BD3BC BL 0x1C16F10
	0x036BD3C0 MOV X19, X0
	0x036BD3C4 ADRP X0, 0xA65000
	0x036BD3C8 LDR X0, [X0 + 0xD90]
	0x036BD3CC B 0x36BD3EC
	0x036BD3D0 ADRP X0, 0xA3E000
	0x036BD3D4 LDR X0, [X0 + 0x760]
	0x036BD3D8 BL 0x1C16D08
	0x036BD3DC BL 0x1C16F10
	0x036BD3E0 MOV X19, X0
	0x036BD3E4 ADRP X0, 0xA61000
	0x036BD3E8 LDR X0, [X0 + 0xF90]
	0x036BD3EC BL 0x1C16D08
	0x036BD3F0 MOV X1, X0
	0x036BD3F4 MOV X0, X19
	0x036BD3F8 MOV X2, X31
	0x036BD3FC BL 0x3316014
	0x036BD400 B 0x36BD528
	0x036BD404 BL 0x1C16F20
	0x036BD408 B 0x36BD41C
	0x036BD40C MOV X20, X1
	0x036BD410 B 0x36BD420
	0x036BD414 B 0x36BD41C
	0x036BD418 B 0x36BD41C
	0x036BD41C MOV W20, W1
	0x036BD420 CMP W20, 0x1
	0x036BD424 B.NE 0x36BD540
	0x036BD428 BL 0x3EB1AD0
	0x036BD42C LDR X19, [X0]
	0x036BD430 BL 0x3EB1AE0
	0x036BD434 ADRP X0, 0xA36000
	0x036BD438 LDR X0, [X0 + 0x7D0]
	0x036BD43C BL 0x1C16D08
	0x036BD440 CBZ X19, 0x36BD528
	0x036BD444 LDR X8, [X19]
	0x036BD448 LDRB W9, [X0 + 0x130]
	0x036BD44C LDRB W10, [X8 + 0x130]
	0x036BD450 CMP W10, W9
	0x036BD454 B.CC 0x36BD528
	0x036BD458 LDR X8, [X8 + 0xC8]
	0x036BD45C ADD X8, X8, X9, 0x3, LSL
	0x036BD460 LDUR X8, [X8 - 0x8]
	0x036BD464 CMP X8, X0
	0x036BD468 B.NE 0x36BD528
	0x036BD46C ADRP X0, 0xA3F000
	0x036BD470 LDR X0, [X0 + 0xDB8]
	0x036BD474 BL 0x1C16D08
	0x036BD478 LDR X8, [X19]
	0x036BD47C LDRB W9, [X0 + 0x130]
	0x036BD480 LDRB W10, [X8 + 0x130]
	0x036BD484 CMP W10, W9
	0x036BD488 B.CC 0x36BD4A0
	0x036BD48C LDR X8, [X8 + 0xC8]
	0x036BD490 ADD X8, X8, X9, 0x3, LSL
	0x036BD494 LDUR X8, [X8 - 0x8]
	0x036BD498 CMP X8, X0
	0x036BD49C B.EQ 0x36BD528
	0x036BD4A0 MOV X0, X19
	0x036BD4A4 BL 0x19903C0
	0x036BD4A8 LDR X8, [X19]
	0x036BD4AC MOV X0, X19
	0x036BD4B0 LDP X9, X1, [X8 + 0x188]
	0x036BD4B4 BLR X9
	0x036BD4B8 MOV X20, X0
	0x036BD4BC ADRP X0, 0xA82000
	0x036BD4C0 LDR X0, [X0 + 0x790]
	0x036BD4C4 BL 0x1C16D08
	0x036BD4C8 MOV X1, X20
	0x036BD4CC MOV X2, X31
	0x036BD4D0 BL 0x32094D4
	0x036BD4D4 MOV X20, X0
	0x036BD4D8 ADRP X0, 0xA64000
	0x036BD4DC LDR X0, [X0 + 0x7A8]
	0x036BD4E0 BL 0x1C16D08
	0x036BD4E4 BL 0x1C16F10
	0x036BD4E8 MOV X1, X20
	0x036BD4EC MOV X2, X19
	0x036BD4F0 MOV X3, X31
	0x036BD4F4 MOV X21, X0
	0x036BD4F8 BL 0x32E2390
	0x036BD4FC ADRP X0, 0xA82000
	0x036BD500 LDR X0, [X0 + 0x840]
	0x036BD504 BL 0x1C16D08
	0x036BD508 MOV X1, X0
	0x036BD50C MOV X0, X21
	0x036BD510 BL 0x1C16DEC
	0x036BD514 B 0x36BD518
	0x036BD518 CMP W1, W20
	0x036BD51C B.NE 0x36BD540
	0x036BD520 BL 0x3EB1AD0
	0x036BD524 BL 0x3EB1AE0
	0x036BD528 ADRP X0, 0xA82000
	0x036BD52C LDR X0, [X0 + 0x840]
	0x036BD530 BL 0x1C16D08
	0x036BD534 MOV X1, X0
	0x036BD538 MOV X0, X19
	0x036BD53C BL 0x1C16DEC
	0x036BD540 BL 0x1D2C690
	0x036BD544 SUB X31, X31, 0x60
	0x036BD548 STP X30, X27, [X31 + 0x10]
	0x036BD54C STP X26, X25, [X31 + 0x20]
	0x036BD550 STP X24, X23, [X31 + 0x30]
	0x036BD554 STP X22, X21, [X31 + 0x40]
	0x036BD558 STP X20, X19, [X31 + 0x50]
	0x036BD55C ADRP X23, 0xD23000
	0x036BD560 STR X4, [X31 + 0x8]
	0x036BD564 ADRP X24, 0xA3E000
	0x036BD568 LDRB W8, [X23 + 0x9C5]
	0x036BD56C LDR X24, [X24 + 0x7D8]
	0x036BD570 MOV W19, W3
	0x036BD574 MOV X21, X2
	0x036BD578 MOV X22, X1
	0x036BD57C MOV X20, X0
	0x036BD580 TBNZ X8, 0x0, 0x36BD604
	0x036BD584 ADRP X0, 0xA3E000
	0x036BD588 LDR X0, [X0 + 0x7D8]
	0x036BD58C BL 0x1C16CF4
	0x036BD590 ADRP X0, 0xA82000
	0x036BD594 LDR X0, [X0 + 0x800]
	0x036BD598 BL 0x1C16CF4
	0x036BD59C ADRP X0, 0xA82000
	0x036BD5A0 LDR X0, [X0 + 0x808]
	0x036BD5A4 BL 0x1C16CF4
	0x036BD5A8 ADRP X0, 0xA82000
	0x036BD5AC LDR X0, [X0 + 0x810]
	0x036BD5B0 BL 0x1C16CF4
	0x036BD5B4 ADRP X0, 0xA82000
	0x036BD5B8 LDR X0, [X0 + 0x818]
	0x036BD5BC BL 0x1C16CF4
	0x036BD5C0 ADRP X0, 0xA82000
	0x036BD5C4 LDR X0, [X0 + 0x848]
	0x036BD5C8 BL 0x1C16CF4
	0x036BD5CC ADRP X0, 0xA37000
	0x036BD5D0 LDR X0, [X0 + 0x7B8]
	0x036BD5D4 BL 0x1C16CF4
	0x036BD5D8 ADRP X0, 0xA82000
	0x036BD5DC LDR X0, [X0 + 0x850]
	0x036BD5E0 BL 0x1C16CF4
	0x036BD5E4 ADRP X0, 0xA82000
	0x036BD5E8 LDR X0, [X0 + 0x858]
	0x036BD5EC BL 0x1C16CF4
	0x036BD5F0 ADRP X0, 0xA82000
	0x036BD5F4 LDR X0, [X0 + 0x830]
	0x036BD5F8 BL 0x1C16CF4
	0x036BD5FC MOVZ W8, 0x1
	0x036BD600 STRB W8, [X23 + 0x9C5]
	0x036BD604 LDR X0, [X24]
	0x036BD608 LDR W8, [X0 + 0xE0]
	0x036BD60C CBNZ W8, 0x36BD614
	0x036BD610 BL 0x1C16DFC
	0x036BD614 ADD X0, X31, 0x8
	0x036BD618 MOV X1, X31
	0x036BD61C BL 0x33DD2B0
	0x036BD620 TBZ X0, 0x0, 0x36BD650
	0x036BD624 ADRP X8, 0xA37000
	0x036BD628 LDR X8, [X8 + 0x7B8]
	0x036BD62C LDR X19, [X31 + 0x8]
	0x036BD630 LDR X0, [X8]
	0x036BD634 LDR W8, [X0 + 0xE0]
	0x036BD638 CBNZ W8, 0x36BD640
	0x036BD63C BL 0x1C16DFC
	0x036BD640 MOV X0, X19
	0x036BD644 MOV X1, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X0]
	011 Move X23, X1
	012 Move X19, X5
	013 Move X20, X4
	014 Move X9, [X8+472]
	015 Move X8, [X8+480]
	016 Move W21, W3
	017 Move W22, W2
	018 Move X24, X0
	019 Move X1, X8
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move W26, [X24+56]
	022 Move W25, W0
	023 Call 0x1C17D44
	024 Compare W26, 0
	025 JumpIfNotEqual {58}
	026 Move TEMP, X25
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {83}
	030 Compare X23, 0
	031 JumpIfEqual {95}
	032 Move X8, [X23+24]
	033 Move W9, W22
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, W21
	036 Subtract W8, W8, W22
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X24+40]
	039 Compare X0, 0
	040 JumpIfEqual {132}
	041 Move X1, X23
	042 Move W2, W22
	043 Move W3, W21
	044 Move W4, W31
	045 Move X5, X20
	046 Move X6, X19
	047 Call Socket.BeginSend, X0, X1, X2, X3, X4, X5, X6
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X24, [X31+32]
	053 Move X23, [X31+40]
	054 Move X26, [X31+16]
	055 Move X25, [X31+24]
	056 Move X30, [X31+80]
	057 Return X0
	058 Move X0, X24
	059 Move X1, X31
	060 Call "il2cpp_vm_object_is_inst", X0
	061 Move X19, X0
	062 Call 0x19913C0
	063 Move X8, [X19]
	064 Move X0, X19
	065 Move X9, [X8+744]
	066 Move X1, [X8+752]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X19, X0
	069 Move X0, 0xA60000
	070 Move X0, [X0+1208]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X1, X19
	074 Move X2, X31
	075 Move X20, X0
	076 Call ObjectDisposedException..ctor, X0, X1
	077 Move X0, 0xA83000
	078 Move X0, [X0+2000]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X20
	082 Call 0x1C17DEC
	083 Move X0, 0xA37000
	084 Move X0, [X0+1456]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0xA83000
	089 Move X0, [X0+192]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Move X2, X31
	094 Call InvalidOperationException..ctor, X0, X1
	095 Move X0, 0xA3C000
	096 Move X0, [X0+1320]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xA62000
	101 Move X0, [X0+3912]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call ArgumentNullException..ctor, X0, X1
	107 Move X0, 0xA3F000
	108 Move X0, [X0+1888]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0xA66000
	113 Move X0, [X0+3472]
	114 Move X0, 0xA3F000
	115 Move X0, [X0+1888]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xA62000
	120 Move X0, [X0+3984]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call ArgumentOutOfRangeException..ctor, X0, X1
	126 Move X0, 0xA83000
	127 Move X0, [X0+2000]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC
	132 Call 0x1C17F20
	133 Move W20, W1
	134 Move X20, X1
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Call 0x3EB2AD0
	137 Move X19, [X0]
	138 Call 0x3EB2AE0
	139 Move X0, 0xA37000
	140 Move X0, [X0+2000]
	141 Call 0x1C17D08
	142 Compare X19, 0
	143 JumpIfEqual {126}
	144 Move X8, [X19]
	145 Move W9, [X0+304]
	146 Move W10, [X8+304]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, [X8+200]
	149 Add X8, X8, X9
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, 0xA40000
	153 Move X0, [X0+3512]
	154 Call 0x1C17D08
	155 Move X8, [X19]
	156 Move W9, [X0+304]
	157 Move W10, [X8+304]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, [X8+200]
	160 Add X8, X8, X9
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X19
	164 Call 0x19913C0
	165 Move X8, [X19]
	166 Move X0, X19
	167 Move X9, [X8+392]
	168 Move X1, [X8+400]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X20, X0
	171 Move X0, 0xA83000
	172 Move X0, [X0+1936]
	173 Call 0x1C17D08
	174 Move X1, X20
	175 Move X2, X31
	176 Call SR.Format, X0, X1
	177 Move X20, X0
	178 Move X0, 0xA65000
	179 Move X0, [X0+1960]
	180 Call 0x1C17D08
	181 Call 0x1C17F10
	182 Move X1, X20
	183 Move X2, X19
	184 Move X3, X31
	185 Move X21, X0
	186 Call IOException..ctor, X0, X1, X2
	187 Move X0, 0xA83000
	188 Move X0, [X0+2000]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X21
	192 Call 0x1C17DEC
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Call 0x3EB2AD0
	195 Call 0x3EB2AE0
	196 Call 0x1D2D690

Method: System.Void EndWrite(System.IAsyncResult asyncResult)

Disassembly:
	0x036BD6C0 LDR X2, [X8]
	0x036BD6C4 BL 0x2D27AA8
	0x036BD6C8 LDR X8, [X26]
	0x036BD6CC LDR X8, [X8 + 0xB8]
	0x036BD6D0 STR X24, [X8 + 0x30]
	0x036BD6D4 LDR X2, [X27]
	0x036BD6D8 MOV X0, X23
	0x036BD6DC MOV X1, X24
	0x036BD6E0 BL 0x2212A40
	0x036BD6E4 CBZ X0, 0x36BD830
	0x036BD6E8 MOV X8, X0
	0x036BD6EC LDR X0, [X26]
	0x036BD6F0 ADD X23, X8, 0x30
	0x036BD6F4 LDR W9, [X0 + 0xE0]
	0x036BD6F8 CBNZ W9, 0x36BD704
	0x036BD6FC BL 0x1C16DFC
	0x036BD700 LDR X0, [X26]
	0x036BD704 LDR X8, [X0 + 0xB8]
	0x036BD708 LDR X24, [X8 + 0x38]
	0x036BD70C CBNZ X24, 0x36BD760
	0x036BD710 LDR W8, [X0 + 0xE0]
	0x036BD714 CBNZ W8, 0x36BD720
	0x036BD718 BL 0x1C16DFC
	0x036BD71C LDR X0, [X26]
	0x036BD720 ADRP X9, 0xA82000
	0x036BD724 LDR X8, [X0 + 0xB8]
	0x036BD728 LDR X9, [X9 + 0x808]
	0x036BD72C LDR X25, [X8]
	0x036BD730 LDR X0, [X9]
	0x036BD734 BL 0x1C16F10
	0x036BD738 ADRP X8, 0xA82000
	0x036BD73C LDR X8, [X8 + 0x858]
	0x036BD740 MOV X1, X25
	0x036BD744 MOV X3, X31
	0x036BD748 MOV X24, X0
	0x036BD74C LDR X2, [X8]
	0x036BD750 BL 0x2D27AA8
	0x036BD754 LDR X8, [X26]
	0x036BD758 LDR X8, [X8 + 0xB8]
	0x036BD75C STR X24, [X8 + 0x38]
	0x036BD760 ADRP X8, 0xA82000
	0x036BD764 LDR X8, [X8 + 0x810]
	0x036BD768 MOV X0, X23
	0x036BD76C MOV X1, X24
	0x036BD770 LDR X2, [X8]
	0x036BD774 BL 0x2212A40
	0x036BD778 CBZ X0, 0x36BD830
	0x036BD77C MOV X1, X31
	0x036BD780 MOV X23, X0
	0x036BD784 BL 0x36C6278
	0x036BD788 TBZ X0, 0x0, 0x36BD7E4
	0x036BD78C ADRP X8, 0xA82000
	0x036BD790 LDR X8, [X8 + 0x848]
	0x036BD794 MOV X0, X22
	0x036BD798 MOV X1, X21
	0x036BD79C LDR X2, [X8]
	0x036BD7A0 BL 0x2218AE4
	0x036BD7A4 MOV X2, X0
	0x036BD7A8 MOV X3, X1
	0x036BD7AC MOV X0, X23
	0x036BD7B0 MOV X1, X2
	0x036BD7B4 MOV X2, X3
	0x036BD7B8 MOV X3, X31
	0x036BD7BC BL 0x36CCF7C
	0x036BD7C0 MOVZ W8, 0x1
	0x036BD7C4 MOV X0, X23
	0x036BD7C8 MOV X1, X20
	0x036BD7CC MOV X2, X31
	0x036BD7D0 STR W19, [X23 + 0x44]
	0x036BD7D4 STRB W8, [X23 + 0x9A]
	0x036BD7D8 BL 0x36C6A48
	0x036BD7DC MOV X19, X0
	0x036BD7E0 B 0x36BD810
	0x036BD7E4 MOV X0, X20
	0x036BD7E8 MOV X1, X22
	0x036BD7EC MOV X2, X21
	0x036BD7F0 MOV W3, W19
	0x036BD7F4 BL 0x36BE4C0
	0x036BD7F8 MOV X19, X0
	0x036BD7FC CBNZ X0, 0x36BD80C
	0x036BD800 MOVZ W0, 0x26
	0x036BD804 MOV X1, X31
	0x036BD808 BL 0x338F3E0
	0x036BD80C MOVZ W1, 0x10000
	0x036BD810 MOV X0, X19
	0x036BD814 LDP X20, X19, [X31 + 0x50]
	0x036BD818 LDP X22, X21, [X31 + 0x40]
	0x036BD81C LDP X24, X23, [X31 + 0x30]
	0x036BD820 LDP X26, X25, [X31 + 0x20]
	0x036BD824 LDP X30, X27, [X31 + 0x10]
	0x036BD828 ADD X31, X31, 0x60
	0x036BD82C RET
	0x036BD830 BL 0x1C16F20
	0x036BD834 STR X30, [X31 - 0x40]!
	0x036BD838 STP X24, X23, [X31 + 0x10]
	0x036BD83C STP X22, X21, [X31 + 0x20]
	0x036BD840 STP X20, X19, [X31 + 0x30]
	0x036BD844 LDR X8, [X0]
	0x036BD848 MOV X21, X1
	0x036BD84C MOV X19, X3
	0x036BD850 MOV X20, X2
	0x036BD854 LDP X9, X8, [X8 + 0x1D8]
	0x036BD858 MOV X22, X0
	0x036BD85C MOV X1, X8
	0x036BD860 BLR X9
	0x036BD864 LDRB W24, [X22 + 0x38]
	0x036BD868 MOV W23, W0
	0x036BD86C BL 0x1C16D44
	0x036BD870 CBNZ W24, 0x36BD8A8
	0x036BD874 TBZ X23, 0x0, 0x36BD90C
	0x036BD878 LDR X0, [X22 + 0x28]
	0x036BD87C CBZ X0, 0x36BD940
	0x036BD880 MOV X1, X21
	0x036BD884 MOV X2, X20
	0x036BD888 MOV W3, W31
	0x036BD88C MOV X4, X19
	0x036BD890 BL 0x36BD544
	0x036BD894 LDP X20, X19, [X31 + 0x30]
	0x036BD898 LDP X22, X21, [X31 + 0x20]
	0x036BD89C LDP X24, X23, [X31 + 0x10]
	0x036BD8A0 LDR X30, [X31], #0x40
	0x036BD8A4 RET
	0x036BD8A8 MOV X0, X22
	0x036BD8AC MOV X1, X31
	0x036BD8B0 BL 0x33BE520
	0x036BD8B4 MOV X19, X0
	0x036BD8B8 BL 0x19903C0
	0x036BD8BC LDR X8, [X19]
	0x036BD8C0 MOV X0, X19
	0x036BD8C4 LDR X9, [X8 + 0x2E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+56]
	006 Move X20, X0
	007 Move X19, X1
	008 Call 0x1C17D44
	009 Compare W21, 0
	010 JumpIfNotEqual {23}
	011 Compare X19, 0
	012 JumpIfEqual {48}
	013 Move X0, [X20+40]
	014 Compare X0, 0
	015 JumpIfEqual {60}
	016 Move X1, X19
	017 Call Socket.EndSend, X0, X1
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 
	023 Move X0, X20
	024 Move X1, X31
	025 Call "il2cpp_vm_object_is_inst", X0
	026 Move X19, X0
	027 Call 0x19913C0
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+744]
	031 Move X1, [X8+752]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X19, X0
	034 Move X0, 0xA60000
	035 Move X0, [X0+1208]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X1, X19
	039 Move X2, X31
	040 Move X20, X0
	041 Call ObjectDisposedException..ctor, X0, X1
	042 Move X0, 0xA83000
	043 Move X0, [X0+2016]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X20
	047 Call 0x1C17DEC
	048 Move X0, 0xA3C000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0xA62000
	054 Move X0, [X0+3536]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Call 0x1C17F20
	061 Move W20, W1
	062 Move X20, X1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Call 0x3EB2AD0
	065 Move X19, [X0]
	066 Call 0x3EB2AE0
	067 Move X0, 0xA37000
	068 Move X0, [X0+2000]
	069 Call 0x1C17D08
	070 Compare X19, 0
	071 JumpIfEqual {124}
	072 Move X8, [X19]
	073 Move W9, [X0+304]
	074 Move W10, [X8+304]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X8+200]
	077 Add X8, X8, X9
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, 0xA40000
	081 Move X0, [X0+3512]
	082 Call 0x1C17D08
	083 Move X8, [X19]
	084 Move W9, [X0+304]
	085 Move W10, [X8+304]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X8+200]
	088 Add X8, X8, X9
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, X19
	092 Call 0x19913C0
	093 Move X8, [X19]
	094 Move X0, X19
	095 Move X9, [X8+392]
	096 Move X1, [X8+400]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X20, X0
	099 Move X0, 0xA83000
	100 Move X0, [X0+1936]
	101 Call 0x1C17D08
	102 Move X1, X20
	103 Move X2, X31
	104 Call SR.Format, X0, X1
	105 Move X20, X0
	106 Move X0, 0xA65000
	107 Move X0, [X0+1960]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X1, X20
	111 Move X2, X19
	112 Move X3, X31
	113 Move X21, X0
	114 Call IOException..ctor, X0, X1, X2
	115 Move X0, 0xA83000
	116 Move X0, [X0+2016]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X21
	120 Call 0x1C17DEC
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Call 0x3EB2AD0
	123 Call 0x3EB2AE0
	124 Move X0, 0xA83000
	125 Move X0, [X0+2016]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Call 0x1C17DEC
	130 Call 0x1D2D690

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036BD928 BL 0x1C16D08
	0x036BD92C MOV X1, X0
	0x036BD930 MOV X0, X19
	0x036BD934 MOV X2, X31
	0x036BD938 BL 0x337DF1C
	0x036BD93C B 0x36BDA58
	0x036BD940 BL 0x1C16F20
	0x036BD944 MOV W20, W1
	0x036BD948 B 0x36BD950
	0x036BD94C MOV X20, X1
	0x036BD950 CMP W20, 0x1
	0x036BD954 B.NE 0x36BDA70
	0x036BD958 BL 0x3EB1AD0
	0x036BD95C LDR X19, [X0]
	0x036BD960 BL 0x3EB1AE0
	0x036BD964 ADRP X0, 0xA36000
	0x036BD968 LDR X0, [X0 + 0x7D0]
	0x036BD96C BL 0x1C16D08
	0x036BD970 CBZ X19, 0x36BDA58
	0x036BD974 LDR X8, [X19]
	0x036BD978 LDRB W9, [X0 + 0x130]
	0x036BD97C LDRB W10, [X8 + 0x130]
	0x036BD980 CMP W10, W9
	0x036BD984 B.CC 0x36BDA58
	0x036BD988 LDR X8, [X8 + 0xC8]
	0x036BD98C ADD X8, X8, X9, 0x3, LSL
	0x036BD990 LDUR X8, [X8 - 0x8]
	0x036BD994 CMP X8, X0
	0x036BD998 B.NE 0x36BDA58
	0x036BD99C ADRP X0, 0xA3F000
	0x036BD9A0 LDR X0, [X0 + 0xDB8]
	0x036BD9A4 BL 0x1C16D08
	0x036BD9A8 LDR X8, [X19]
	0x036BD9AC LDRB W9, [X0 + 0x130]
	0x036BD9B0 LDRB W10, [X8 + 0x130]
	0x036BD9B4 CMP W10, W9
	0x036BD9B8 B.CC 0x36BD9D0
	0x036BD9BC LDR X8, [X8 + 0xC8]
	0x036BD9C0 ADD X8, X8, X9, 0x3, LSL
	0x036BD9C4 LDUR X8, [X8 - 0x8]
	0x036BD9C8 CMP X8, X0
	0x036BD9CC B.EQ 0x36BDA58
	0x036BD9D0 MOV X0, X19
	0x036BD9D4 BL 0x19903C0
	0x036BD9D8 LDR X8, [X19]
	0x036BD9DC MOV X0, X19
	0x036BD9E0 LDP X9, X1, [X8 + 0x188]
	0x036BD9E4 BLR X9
	0x036BD9E8 MOV X20, X0
	0x036BD9EC ADRP X0, 0xA82000
	0x036BD9F0 LDR X0, [X0 + 0x790]
	0x036BD9F4 BL 0x1C16D08
	0x036BD9F8 MOV X1, X20
	0x036BD9FC MOV X2, X31
	0x036BDA00 BL 0x32094D4
	0x036BDA04 MOV X20, X0
	0x036BDA08 ADRP X0, 0xA64000
	0x036BDA0C LDR X0, [X0 + 0x7A8]
	0x036BDA10 BL 0x1C16D08
	0x036BDA14 BL 0x1C16F10
	0x036BDA18 MOV X1, X20
	0x036BDA1C MOV X2, X19
	0x036BDA20 MOV X3, X31
	0x036BDA24 MOV X21, X0
	0x036BDA28 BL 0x32E2390
	0x036BDA2C ADRP X0, 0xA82000
	0x036BDA30 LDR X0, [X0 + 0x860]
	0x036BDA34 BL 0x1C16D08
	0x036BDA38 MOV X1, X0
	0x036BDA3C MOV X0, X21
	0x036BDA40 BL 0x1C16DEC
	0x036BDA44 B 0x36BDA48
	0x036BDA48 CMP W1, W20
	0x036BDA4C B.NE 0x36BDA70
	0x036BDA50 BL 0x3EB1AD0
	0x036BDA54 BL 0x3EB1AE0
	0x036BDA58 ADRP X0, 0xA82000
	0x036BDA5C LDR X0, [X0 + 0x860]
	0x036BDA60 BL 0x1C16D08
	0x036BDA64 MOV X1, X0
	0x036BDA68 MOV X0, X19
	0x036BDA6C BL 0x1C16DEC
	0x036BDA70 BL 0x1D2C690
	0x036BDA74 RET
	0x036BDA78 STR X30, [X31 - 0x20]!
	0x036BDA7C STP X20, X19, [X31 + 0x10]
	0x036BDA80 ADRP X20, 0xD23000
	0x036BDA84 ADRP X19, 0xA37000
	0x036BDA88 LDRB W8, [X20 + 0x9C0]
	0x036BDA8C LDR X19, [X19 + 0x7B8]
	0x036BDA90 TBNZ X8, 0x0, 0x36BDAA8
	0x036BDA94 ADRP X0, 0xA37000
	0x036BDA98 LDR X0, [X0 + 0x7B8]
	0x036BDA9C BL 0x1C16CF4
	0x036BDAA0 MOVZ W8, 0x1
	0x036BDAA4 STRB W8, [X20 + 0x9C0]
	0x036BDAA8 LDR X0, [X19]
	0x036BDAAC LDR W8, [X0 + 0xE0]
	0x036BDAB0 CBNZ W8, 0x36BDAB8
	0x036BDAB4 BL 0x1C16DFC
	0x036BDAB8 ADRP X20, 0xD1B000
	0x036BDABC LDRB W8, [X20 + 0xF1D]
	0x036BDAC0 CBNZ W8, 0x36BDAD8
	0x036BDAC4 ADRP X0, 0xA37000
	0x036BDAC8 LDR X0, [X0 + 0x7B8]
	0x036BDACC BL 0x1C16CF4
	0x036BDAD0 MOVZ W8, 0x1
	0x036BDAD4 STRB W8, [X20 + 0xF1D]
	0x036BDAD8 LDR X0, [X19]
	0x036BDADC LDR W8, [X0 + 0xE0]
	0x036BDAE0 CBNZ W8, 0x36BDAEC
	0x036BDAE4 BL 0x1C16DFC
	0x036BDAE8 LDR X0, [X19]
	0x036BDAEC LDR X8, [X0 + 0xB8]
	0x036BDAF0 LDP X20, X19, [X31 + 0x10]
	0x036BDAF4 LDR X0, [X8 + 0x30]
	0x036BDAF8 LDR X30, [X31], #0x20
	0x036BDAFC RET
	0x036BDB00 STP X30, X19, [X31 - 0x10]!
	0x036BDB04 ADRP X0, 0xA36000
	0x036BDB08 LDR X0, [X0 + 0xB40]
	0x036BDB0C BL 0x1C16D08
	0x036BDB10 BL 0x1C16F10
	0x036BDB14 MOV X19, X0
	0x036BDB18 ADRP X0, 0xA7E000
	0x036BDB1C LDR X0, [X0 + 0x308]
	0x036BDB20 BL 0x1C16D08
	0x036BDB24 MOV X1, X0
	0x036BDB28 MOV X0, X19
	0x036BDB2C MOV X2, X31
	0x036BDB30 BL 0x3379A44
	0x036BDB34 ADRP X0, 0xA82000
	0x036BDB38 LDR X0, [X0 + 0x868]
	0x036BDB3C BL 0x1C16D08
	0x036BDB40 MOV X1, X0
	0x036BDB44 MOV X0, X19
	0x036BDB48 BL 0x1C16DEC
	0x036BDB4C STR X30, [X31 - 0x40]!
	0x036BDB50 STP X24, X23, [X31 + 0x10]
	0x036BDB54 STP X22, X21, [X31 + 0x20]
	0x036BDB58 STP X20, X19, [X31 + 0x30]
	0x036BDB5C ADRP X24, 0xD23000
	0x036BDB60 LDRB W8, [X24 + 0x9D4]
	0x036BDB64 MOV W19, W4
	0x036BDB68 MOV W20, W3
	0x036BDB6C MOV W21, W2
	0x036BDB70 MOV W22, W1
	0x036BDB74 MOV X23, X0
	0x036BDB78 TBNZ X8, 0x0, 0x36BDB90
	0x036BDB7C ADRP X0, 0xA3F000
	0x036BDB80 LDR X0, [X0 + 0x788]
	0x036BDB84 BL 0x1C16CF4
	0x036BDB88 MOVZ W8, 0x1
	0x036BDB8C STRB W8, [X24 + 0x9D4]
	0x036BDB90 STR W31, [X31 + 0xC]
	0x036BDB94 LDR W8, [X23 + 0x54]
	0x036BDB98 CMP W8, 0x1
	0x036BDB9C B.NE 0x36BDBF8
	0x036BDBA0 LDRB W8, [X23 + 0x18]
	0x036BDBA4 CBZ W8, 0x36BDBF8
	0x036BDBA8 TBNZ X19, 0x0, 0x36BDC40
	0x036BDBAC MOV X0, X23
	0x036BDBB0 MOV X1, X31
	0x036BDBB4 BL 0x33BE520
	0x036BDBB8 MOV X19, X0
	0x036BDBBC BL 0x19903C0
	0x036BDBC0 LDR X8, [X19]
	0x036BDBC4 MOV X0, X19
	0x036BDBC8 LDP X9, X1, [X8 + 0x168]
	0x036BDBCC BLR X9
	0x036BDBD0 MOV X19, X0
	0x036BDBD4 ADRP X0, 0xA5F000
	0x036BDBD8 LDR X0, [X0 + 0x4B8]
	0x036BDBDC BL 0x1C16D08
	0x036BDBE0 BL 0x1C16F10
	0x036BDBE4 MOV X1, X19
	0x036BDBE8 MOV X2, X31
	0x036BDBEC MOV X20, X0
	0x036BDBF0 BL 0x338C448
	0x036BDBF4 B 0x36BDC74
	0x036BDBF8 ADRP X8, 0xA3F000
	0x036BDBFC LDR X8, [X8 + 0x788]
	0x036BDC00 LDR X23, [X23 + 0x30]
	0x036BDC04 LDR X0, [X8]
	0x036BDC08 LDR W8, [X0 + 0xE0]
	0x036BDC0C CBNZ W8, 0x36BDC14
	0x036BDC10 BL 0x1C16DFC
	0x036BDC14 ADD X6, X31, 0xC
	0x036BDC18 MOV X0, X23
	0x036BDC1C MOV W1, W22
	0x036BDC20 MOV W2, W21
	0x036BDC24 MOV X3, X31
	0x036BDC28 MOV X4, X31
	0x036BDC2C MOV W5, W20
	0x036BDC30 BL 0x36C16A8
	0x036BDC34 TBNZ X19, 0x0, 0x36BDC40
	0x036BDC38 LDR W19, [X31 + 0xC]
	0x036BDC3C CBNZ W19, 0x36BDC54
	0x036BDC40 LDP X20, X19, [X31 + 0x30]
	0x036BDC44 LDP X22, X21, [X31 + 0x20]
	0x036BDC48 LDP X24, X23, [X31 + 0x10]
	0x036BDC4C LDR X30, [X31], #0x40
	0x036BDC50 RET
	0x036BDC54 ADRP X0, 0xA74000
	0x036BDC58 LDR X0, [X0 + 0xD8]
	0x036BDC5C BL 0x1C16D08
	0x036BDC60 BL 0x1C16F10
	0x036BDC64 MOV W1, W19
	0x036BDC68 MOV X2, X31
	0x036BDC6C MOV X20, X0
	0x036BDC70 BL 0x36C6F04
	0x036BDC74 ADRP X0, 0xA82000
	0x036BDC78 LDR X0, [X0 + 0x870]
	0x036BDC7C BL 0x1C16D08
	0x036BDC80 MOV X1, X0
	0x036BDC84 MOV X0, X20
	0x036BDC88 BL 0x1C16DEC
	0x036BDC8C STP X30, X21, [X31 - 0x20]!
	0x036BDC90 STP X20, X19, [X31 + 0x10]
	0x036BDC94 LDR X20, [X0 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xD24000
	011 Move W8, [X24+2494]
	012 Move X19, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X20, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA66000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move X0, 0xA83000
	025 Move X0, [X0+2032]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2494], W8
	029 Move [X31], X31
	030 Move [X31+8], X31
	031 Move X8, [X23]
	032 Move X0, X23
	033 Move X9, [X8+424]
	034 Move X1, [X8+432]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move W25, [X23+56]
	037 Move W24, W0
	038 Call 0x1C17D44
	039 Compare W25, 0
	040 JumpIfNotEqual {86}
	041 Move TEMP, X24
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {111}
	045 Compare X20, 0
	046 JumpIfEqual {123}
	047 Move X8, [X20+24]
	048 Move W24, W22
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W25, W21
	051 Subtract W9, W8, W22
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X23, [X23+40]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X31
	057 Call ThrowHelper.ThrowArgumentOutOfRangeException
	058 Compare X23, 0
	059 JumpIfEqual {160}
	060 NotImplemented "Instruction BFM not yet implemented."
	061 Move W4, 1
	062 Move X0, X23
	063 Move X1, X20
	064 Move X2, X24
	065 Move W3, W31
	066 Move X5, X19
	067 Call Socket.ReceiveAsync, X0, X1, X2, X3, X4
	068 Move X8, 0xA83000
	069 Move X8, [X8+2032]
	070 Move [X31], X0
	071 Move [X31+8], X1
	072 Move X8, [X8]
	073 Add X0, X31, 0
	074 Move X1, X8
	075 Call 0x27916D4, X0
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X24, [X31+32]
	081 Move X23, [X31+40]
	082 Move X30, [X31+16]
	083 Move X25, [X31+24]
	084 Add X31, X31, 80
	085 Return X0
	086 Move X0, X23
	087 Move X1, X31
	088 Call "il2cpp_vm_object_is_inst", X0
	089 Move X19, X0
	090 Call 0x19913C0
	091 Move X8, [X19]
	092 Move X0, X19
	093 Move X9, [X8+744]
	094 Move X1, [X8+752]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X19, X0
	097 Move X0, 0xA60000
	098 Move X0, [X0+1208]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X1, X19
	102 Move X2, X31
	103 Move X20, X0
	104 Call ObjectDisposedException..ctor, X0, X1
	105 Move X0, 0xA83000
	106 Move X0, [X0+2040]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X20
	110 Call 0x1C17DEC
	111 Move X0, 0xA37000
	112 Move X0, [X0+1456]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X19, X0
	116 Move X0, 0xA83000
	117 Move X0, [X0+160]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X19
	121 Move X2, X31
	122 Call InvalidOperationException..ctor, X0, X1
	123 Move X0, 0xA3C000
	124 Move X0, [X0+1320]
	125 Call 0x1C17D08
	126 Call 0x1C17F10
	127 Move X19, X0
	128 Move X0, 0xA62000
	129 Move X0, [X0+3912]
	130 Call 0x1C17D08
	131 Move X1, X0
	132 Move X0, X19
	133 Move X2, X31
	134 Call ArgumentNullException..ctor, X0, X1
	135 Move X0, 0xA3F000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X19, X0
	140 Move X0, 0xA66000
	141 Move X0, [X0+3472]
	142 Move X0, 0xA3F000
	143 Move X0, [X0+1888]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0xA62000
	148 Move X0, [X0+3984]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X19
	152 Move X2, X31
	153 Call ArgumentOutOfRangeException..ctor, X0, X1
	154 Move X0, 0xA83000
	155 Move X0, [X0+2040]
	156 Call 0x1C17D08
	157 Move X1, X0
	158 Move X0, X19
	159 Call 0x1C17DEC
	160 Call 0x1C17F20
	161 Move X20, X1
	162 Move W20, W1
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Call 0x3EB2AD0
	165 Move X19, [X0]
	166 Call 0x3EB2AE0
	167 Move X0, 0xA37000
	168 Move X0, [X0+2000]
	169 Call 0x1C17D08
	170 Compare X19, 0
	171 JumpIfEqual {154}
	172 Move X8, [X19]
	173 Move W9, [X0+304]
	174 Move W10, [X8+304]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X8, [X8+200]
	177 Add X8, X8, X9
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, 0xA40000
	181 Move X0, [X0+3512]
	182 Call 0x1C17D08
	183 Move X8, [X19]
	184 Move W9, [X0+304]
	185 Move W10, [X8+304]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X8, [X8+200]
	188 Add X8, X8, X9
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, X19
	192 Call 0x19913C0
	193 Move X8, [X19]
	194 Move X0, X19
	195 Move X9, [X8+392]
	196 Move X1, [X8+400]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X20, X0
	199 Move X0, 0xA83000
	200 Move X0, [X0+1888]
	201 Call 0x1C17D08
	202 Move X1, X20
	203 Move X2, X31
	204 Call SR.Format, X0, X1
	205 Move X20, X0
	206 Move X0, 0xA65000
	207 Move X0, [X0+1960]
	208 Call 0x1C17D08
	209 Call 0x1C17F10
	210 Move X1, X20
	211 Move X2, X19
	212 Move X3, X31
	213 Move X21, X0
	214 Call IOException..ctor, X0, X1, X2
	215 Move X0, 0xA83000
	216 Move X0, [X0+2040]
	217 Call 0x1C17D08
	218 Move X1, X0
	219 Move X0, X21
	220 Call 0x1C17DEC
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Call 0x3EB2AD0
	223 Call 0x3EB2AE0
	224 Call 0x1D2D690

Method: System.Threading.Tasks.ValueTask`1<System.Int32> ReadAsync(System.Memory`1<System.Byte> buffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036BDF80 MOV X1, X24
	0x036BDF84 MOV X2, X20
	0x036BDF88 MOV X3, X19
	0x036BDF8C BL 0x36AB450
	0x036BDF90 LDR X8, [X25]
	0x036BDF94 MOV X19, X0
	0x036BDF98 LDR W9, [X8 + 0xE0]
	0x036BDF9C CBNZ W9, 0x36BDFA8
	0x036BDFA0 MOV X0, X8
	0x036BDFA4 BL 0x1C16DFC
	0x036BDFA8 BL 0x1C16D44
	0x036BDFAC MOV X0, X19
	0x036BDFB0 LDP X20, X19, [X31 + 0x30]
	0x036BDFB4 LDP X22, X21, [X31 + 0x20]
	0x036BDFB8 LDP X24, X23, [X31 + 0x10]
	0x036BDFBC LDP X30, X25, [X31], #0x40
	0x036BDFC0 RET
	0x036BDFC4 MOV X0, X21
	0x036BDFC8 MOV X1, X31
	0x036BDFCC BL 0x33BE520
	0x036BDFD0 MOV X19, X0
	0x036BDFD4 BL 0x19903C0
	0x036BDFD8 LDR X8, [X19]
	0x036BDFDC MOV X0, X19
	0x036BDFE0 LDR X9, [X8 + 0x2E8]
	0x036BDFE4 LDR X1, [X8 + 0x2F0]
	0x036BDFE8 BLR X9
	0x036BDFEC MOV X19, X0
	0x036BDFF0 ADRP X0, 0xA5F000
	0x036BDFF4 LDR X0, [X0 + 0x4B8]
	0x036BDFF8 BL 0x1C16D08
	0x036BDFFC BL 0x1C16F10
	0x036BE000 MOV X1, X19
	0x036BE004 MOV X2, X31
	0x036BE008 MOV X20, X0
	0x036BE00C BL 0x338C448
	0x036BE010 B 0x36BE0C8
	0x036BE014 ADRP X0, 0xA3A000
	0x036BE018 LDR X0, [X0 + 0x528]
	0x036BE01C BL 0x1C16D08
	0x036BE020 BL 0x1C16F10
	0x036BE024 MOV X19, X0
	0x036BE028 ADRP X0, 0xA7F000
	0x036BE02C LDR X0, [X0 + 0x738]
	0x036BE030 BL 0x1C16D08
	0x036BE034 MOV X1, X0
	0x036BE038 MOV X0, X19
	0x036BE03C MOV X2, X31
	0x036BE040 BL 0x330E100
	0x036BE044 B 0x36BE078
	0x036BE048 ADRP X0, 0xA3D000
	0x036BE04C LDR X0, [X0 + 0x760]
	0x036BE050 BL 0x1C16D08
	0x036BE054 BL 0x1C16F10
	0x036BE058 MOV X19, X0
	0x036BE05C ADRP X0, 0xA7F000
	0x036BE060 LDR X0, [X0 + 0x7C8]
	0x036BE064 BL 0x1C16D08
	0x036BE068 MOV X1, X0
	0x036BE06C MOV X0, X19
	0x036BE070 MOV X2, X31
	0x036BE074 BL 0x3316014
	0x036BE078 ADRP X0, 0xA81000
	0x036BE07C LDR X0, [X0 + 0x890]
	0x036BE080 BL 0x1C16D08
	0x036BE084 MOV X1, X0
	0x036BE088 MOV X0, X19
	0x036BE08C BL 0x1C16DEC
	0x036BE090 ADRP X0, 0xA81000
	0x036BE094 LDR X0, [X0 + 0x898]
	0x036BE098 BL 0x1C16D08
	0x036BE09C MOV X1, X31
	0x036BE0A0 BL 0x320A1E4
	0x036BE0A4 MOV X19, X0
	0x036BE0A8 ADRP X0, 0xA35000
	0x036BE0AC LDR X0, [X0 + 0xB40]
	0x036BE0B0 BL 0x1C16D08
	0x036BE0B4 BL 0x1C16F10
	0x036BE0B8 MOV X1, X19
	0x036BE0BC MOV X2, X31
	0x036BE0C0 MOV X20, X0
	0x036BE0C4 BL 0x3379A44
	0x036BE0C8 ADRP X0, 0xA81000
	0x036BE0CC LDR X0, [X0 + 0x890]
	0x036BE0D0 BL 0x1C16D08
	0x036BE0D4 MOV X1, X0
	0x036BE0D8 MOV X0, X20
	0x036BE0DC BL 0x1C16DEC
	0x036BE0E0 SUB X31, X31, 0x70
	0x036BE0E4 STP X30, X27, [X31 + 0x20]
	0x036BE0E8 STP X26, X25, [X31 + 0x30]
	0x036BE0EC STP X24, X23, [X31 + 0x40]
	0x036BE0F0 STP X22, X21, [X31 + 0x50]
	0x036BE0F4 STP X20, X19, [X31 + 0x60]
	0x036BE0F8 ADRP X23, 0xD22000
	0x036BE0FC STP X1, X2, [X31 + 0x10]
	0x036BE100 ADRP X26, 0xA68000
	0x036BE104 ADRP X25, 0xA68000
	0x036BE108 LDRB W8, [X23 + 0x9C4]
	0x036BE10C LDR X26, [X26 + 0xD10]
	0x036BE110 LDR X25, [X25 + 0xD08]
	0x036BE114 MOV W19, W3
	0x036BE118 MOV X21, X2
	0x036BE11C MOV X22, X1
	0x036BE120 MOV X20, X0
	0x036BE124 TBNZ X8, 0x0, 0x36BE1FC
	0x036BE128 ADRP X0, 0xA60000
	0x036BE12C LDR X0, [X0 + 0xD50]
	0x036BE130 BL 0x1C16CF4
	0x036BE134 ADRP X0, 0xA60000
	0x036BE138 LDR X0, [X0 + 0xD68]
	0x036BE13C BL 0x1C16CF4
	0x036BE140 ADRP X0, 0xA68000
	0x036BE144 LDR X0, [X0 + 0xCF0]
	0x036BE148 BL 0x1C16CF4
	0x036BE14C ADRP X0, 0xA68000
	0x036BE150 LDR X0, [X0 + 0xCF8]
	0x036BE154 BL 0x1C16CF4
	0x036BE158 ADRP X0, 0xA68000
	0x036BE15C LDR X0, [X0 + 0xD00]
	0x036BE160 BL 0x1C16CF4
	0x036BE164 ADRP X0, 0xA5D000
	0x036BE168 LDR X0, [X0 + 0x5B0]
	0x036BE16C BL 0x1C16CF4
	0x036BE170 ADRP X0, 0xA5D000
	0x036BE174 LDR X0, [X0 + 0x720]
	0x036BE178 BL 0x1C16CF4
	0x036BE17C ADRP X0, 0xA68000
	0x036BE180 LDR X0, [X0 + 0xD08]
	0x036BE184 BL 0x1C16CF4
	0x036BE188 ADRP X0, 0xA60000
	0x036BE18C LDR X0, [X0 + 0x2D8]
	0x036BE190 BL 0x1C16CF4
	0x036BE194 ADRP X0, 0xA68000
	0x036BE198 LDR X0, [X0 + 0xD10]
	0x036BE19C BL 0x1C16CF4
	0x036BE1A0 ADRP X0, 0xA81000
	0x036BE1A4 LDR X0, [X0 + 0x8A0]
	0x036BE1A8 BL 0x1C16CF4
	0x036BE1AC ADRP X0, 0xA40000
	0x036BE1B0 LDR X0, [X0 + 0xD20]
	0x036BE1B4 BL 0x1C16CF4
	0x036BE1B8 ADRP X0, 0xA41000
	0x036BE1BC LDR X0, [X0 + 0x78]
	0x036BE1C0 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0]
	009 Move X21, X1
	010 Move X19, X3
	011 Move X20, X2
	012 Move X9, [X8+424]
	013 Move X8, [X8+432]
	014 Move X22, X0
	015 Move X1, X8
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move W24, [X22+56]
	018 Move W23, W0
	019 Call 0x1C17D44
	020 Compare W24, 0
	021 JumpIfNotEqual {43}
	022 Move TEMP, X23
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {68}
	026 Move X0, [X22+40]
	027 Compare X0, 0
	028 JumpIfEqual {80}
	029 Move W4, 1
	030 Move X1, X21
	031 Move X2, X20
	032 Move W3, W31
	033 Move X5, X19
	034 Call Socket.ReceiveAsync, X0, X1, X2, X3, X4
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X30, [X31+64]
	042 Return X0
	043 Move X0, X22
	044 Move X1, X31
	045 Call "il2cpp_vm_object_is_inst", X0
	046 Move X19, X0
	047 Call 0x19913C0
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+744]
	051 Move X1, [X8+752]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X19, X0
	054 Move X0, 0xA5F000
	055 Move X0, [X0+1208]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X2, X31
	060 Move X20, X0
	061 Call ObjectDisposedException..ctor, X0, X1
	062 Move X0, 0xA82000
	063 Move X0, [X0+2104]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X20
	067 Call 0x1C17DEC
	068 Move X0, 0xA36000
	069 Move X0, [X0+1456]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xA82000
	074 Move X0, [X0+160]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call InvalidOperationException..ctor, X0, X1
	080 Call 0x1C17F20
	081 Move W20, W1
	082 Move X20, X1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Call 0x3EB2AD0
	085 Move X19, [X0]
	086 Call 0x3EB2AE0
	087 Move X0, 0xA36000
	088 Move X0, [X0+2000]
	089 Call 0x1C17D08
	090 Compare X19, 0
	091 JumpIfEqual {144}
	092 Move X8, [X19]
	093 Move W9, [X0+304]
	094 Move W10, [X8+304]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, [X8+200]
	097 Add X8, X8, X9
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, 0xA3F000
	101 Move X0, [X0+3512]
	102 Call 0x1C17D08
	103 Move X8, [X19]
	104 Move W9, [X0+304]
	105 Move W10, [X8+304]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X8+200]
	108 Add X8, X8, X9
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X19
	112 Call 0x19913C0
	113 Move X8, [X19]
	114 Move X0, X19
	115 Move X9, [X8+392]
	116 Move X1, [X8+400]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X20, X0
	119 Move X0, 0xA82000
	120 Move X0, [X0+1888]
	121 Call 0x1C17D08
	122 Move X1, X20
	123 Move X2, X31
	124 Call SR.Format, X0, X1
	125 Move X20, X0
	126 Move X0, 0xA64000
	127 Move X0, [X0+1960]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X1, X20
	131 Move X2, X19
	132 Move X3, X31
	133 Move X21, X0
	134 Call IOException..ctor, X0, X1, X2
	135 Move X0, 0xA82000
	136 Move X0, [X0+2104]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X21
	140 Call 0x1C17DEC
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Call 0x3EB2AD0
	143 Call 0x3EB2AE0
	144 Move X0, 0xA82000
	145 Move X0, [X0+2104]
	146 Call 0x1C17D08
	147 Move X1, X0
	148 Move X0, X19
	149 Call 0x1C17DEC
	150 Call 0x1D2D690

Method: System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036BE1C4 ADRP X0, 0xA81000
	0x036BE1C8 LDR X0, [X0 + 0x8A8]
	0x036BE1CC BL 0x1C16CF4
	0x036BE1D0 ADRP X0, 0xA81000
	0x036BE1D4 LDR X0, [X0 + 0x8B0]
	0x036BE1D8 BL 0x1C16CF4
	0x036BE1DC ADRP X0, 0xA81000
	0x036BE1E0 LDR X0, [X0 + 0x8B8]
	0x036BE1E4 BL 0x1C16CF4
	0x036BE1E8 ADRP X0, 0xA81000
	0x036BE1EC LDR X0, [X0 + 0x830]
	0x036BE1F0 BL 0x1C16CF4
	0x036BE1F4 MOVZ W8, 0x1
	0x036BE1F8 STRB W8, [X23 + 0x9C4]
	0x036BE1FC ADRP X24, 0xA41000
	0x036BE200 ADRP X23, 0xA81000
	0x036BE204 LDR X24, [X24 + 0x78]
	0x036BE208 LDR X23, [X23 + 0x8A0]
	0x036BE20C LDR X2, [X26]
	0x036BE210 ADRP X27, 0xA81000
	0x036BE214 LDR X27, [X27 + 0x830]
	0x036BE218 MOV X0, X22
	0x036BE21C MOV X1, X21
	0x036BE220 STP X31, X31, [X31]
	0x036BE224 BL 0x319DCE0
	0x036BE228 LDR X3, [X25]
	0x036BE22C ADD X2, X31, 0x0
	0x036BE230 BL 0x2218D10
	0x036BE234 TBZ X0, 0x0, 0x36BE304
	0x036BE238 LDR X0, [X24]
	0x036BE23C ADRP X22, 0xA5D000
	0x036BE240 LDR X22, [X22 + 0x5B0]
	0x036BE244 BL 0x1C16F10
	0x036BE248 LDR X2, [X23]
	0x036BE24C MOV X1, X20
	0x036BE250 MOV X21, X0
	0x036BE254 BL 0x267A960
	0x036BE258 LDR X0, [X22]
	0x036BE25C LDR W8, [X0 + 0xE0]
	0x036BE260 CBNZ W8, 0x36BE268
	0x036BE264 BL 0x1C16DFC
	0x036BE268 LDR X0, [X27]
	0x036BE26C LDR X22, [X31]
	0x036BE270 LDP W24, W23, [X31 + 0x8]
	0x036BE274 LDR W8, [X0 + 0xE0]
	0x036BE278 CBNZ W8, 0x36BE284
	0x036BE27C BL 0x1C16DFC
	0x036BE280 LDR X0, [X27]
	0x036BE284 LDR X8, [X0 + 0xB8]
	0x036BE288 LDR X25, [X8 + 0x20]
	0x036BE28C CBNZ X25, 0x36BE2E0
	0x036BE290 LDR W8, [X0 + 0xE0]
	0x036BE294 CBNZ W8, 0x36BE2A0
	0x036BE298 BL 0x1C16DFC
	0x036BE29C LDR X0, [X27]
	0x036BE2A0 ADRP X9, 0xA5D000
	0x036BE2A4 LDR X8, [X0 + 0xB8]
	0x036BE2A8 LDR X9, [X9 + 0x720]
	0x036BE2AC LDR X26, [X8]
	0x036BE2B0 LDR X0, [X9]
	0x036BE2B4 BL 0x1C16F10
	0x036BE2B8 ADRP X8, 0xA81000
	0x036BE2BC LDR X8, [X8 + 0x8B0]
	0x036BE2C0 MOV X1, X26
	0x036BE2C4 MOV X3, X31
	0x036BE2C8 MOV X25, X0
	0x036BE2CC LDR X2, [X8]
	0x036BE2D0 BL 0x3316570
	0x036BE2D4 LDR X8, [X27]
	0x036BE2D8 LDR X8, [X8 + 0xB8]
	0x036BE2DC STR X25, [X8 + 0x20]
	0x036BE2E0 CBZ X20, 0x36BE4BC
	0x036BE2E4 MOV X0, X20
	0x036BE2E8 MOV X1, X22
	0x036BE2EC MOV W2, W24
	0x036BE2F0 MOV W3, W23
	0x036BE2F4 MOV W4, W19
	0x036BE2F8 MOV X5, X25
	0x036BE2FC MOV X6, X21
	0x036BE300 B 0x36BE494
	0x036BE304 ADRP X8, 0xA60000
	0x036BE308 LDR X8, [X8 + 0xD68]
	0x036BE30C ADRP X21, 0xA60000
	0x036BE310 LDR X0, [X8]
	0x036BE314 LDR W8, [X0 + 0xE0]
	0x036BE318 LDR X21, [X21 + 0xD50]
	0x036BE31C CBNZ W8, 0x36BE324
	0x036BE320 BL 0x1C16DFC
	0x036BE324 LDR X21, [X21]
	0x036BE328 LDR X0, [X21 + 0x20]
	0x036BE32C LDRB W8, [X0 + 0x135]
	0x036BE330 TBNZ X8, 0x0, 0x36BE338
	0x036BE334 BL 0x1C5C684
	0x036BE338 LDR X8, [X0 + 0xC0]
	0x036BE33C LDR X0, [X8 + 0x8]
	0x036BE340 LDRB W8, [X0 + 0x135]
	0x036BE344 TBNZ X8, 0x0, 0x36BE34C
	0x036BE348 BL 0x1C5C684
	0x036BE34C LDR W8, [X0 + 0xE0]
	0x036BE350 CBNZ W8, 0x36BE358
	0x036BE354 BL 0x1C16DFC
	0x036BE358 LDR X0, [X21 + 0x20]
	0x036BE35C LDRB W8, [X0 + 0x135]
	0x036BE360 TBNZ X8, 0x0, 0x36BE368
	0x036BE364 BL 0x1C5C684
	0x036BE368 LDR X8, [X0 + 0xC0]
	0x036BE36C ADRP X25, 0xA60000
	0x036BE370 LDR X0, [X8 + 0x8]
	0x036BE374 LDRB W8, [X0 + 0x135]
	0x036BE378 LDR X25, [X25 + 0x2D8]
	0x036BE37C TBNZ X8, 0x0, 0x36BE384
	0x036BE380 BL 0x1C5C684
	0x036BE384 LDR X8, [X0 + 0xB8]
	0x036BE388 LDR X1, [X25]
	0x036BE38C ADD X0, X31, 0x10
	0x036BE390 LDR X21, [X8]
	0x036BE394 BL 0x319DCF0
	0x036BE398 CBZ X21, 0x36BE4BC
	0x036BE39C LDR X8, [X21]
	0x036BE3A0 MOV W1, W0
	0x036BE3A4 MOV X0, X21
	0x036BE3A8 LDP X9, X2, [X8 + 0x178]
	0x036BE3AC BLR X9
	0x036BE3B0 LDR X8, [X24]
	0x036BE3B4 MOV X22, X0
	0x036BE3B8 MOV X0, X8
	0x036BE3BC BL 0x1C16F10
	0x036BE3C0 LDR X2, [X23]
	0x036BE3C4 MOV X1, X20
	0x036BE3C8 MOV X21, X0
	0x036BE3CC BL 0x267A960
	0x036BE3D0 LDR X1, [X25]
	0x036BE3D4 ADD X0, X31, 0x10
	0x036BE3D8 BL 0x319DCF0
	0x036BE3DC LDR X8, [X27]
	0x036BE3E0 MOV W23, W0
	0x036BE3E4 LDR W9, [X8 + 0xE0]
	0x036BE3E8 CBNZ W9, 0x36BE3F8
	0x036BE3EC MOV X0, X8
	0x036BE3F0 BL 0x1C16DFC
	0x036BE3F4 LDR X8, [X27]
	0x036BE3F8 LDR X9, [X8 + 0xB8]
	0x036BE3FC LDR X24, [X9 + 0x28]
	0x036BE400 CBNZ X24, 0x36BE458
	0x036BE404 LDR W9, [X8 + 0xE0]
	0x036BE408 CBNZ W9, 0x36BE418
	0x036BE40C MOV X0, X8
	0x036BE410 BL 0x1C16DFC
	0x036BE414 LDR X8, [X27]
	0x036BE418 ADRP X9, 0xA5D000
	0x036BE41C LDR X8, [X8 + 0xB8]
	0x036BE420 LDR X9, [X9 + 0x720]
	0x036BE424 LDR X25, [X8]
	0x036BE428 LDR X0, [X9]
	0x036BE42C BL 0x1C16F10
	0x036BE430 ADRP X8, 0xA81000
	0x036BE434 LDR X8, [X8 + 0x8B8]
	0x036BE438 MOV X1, X25
	0x036BE43C MOV X3, X31
	0x036BE440 MOV X24, X0
	0x036BE444 LDR X2, [X8]
	0x036BE448 BL 0x3316570
	0x036BE44C LDR X8, [X27]
	0x036BE450 LDR X8, [X8 + 0xB8]
	0x036BE454 STR X24, [X8 + 0x28]
	0x036BE458 ADRP X8, 0xA81000
	0x036BE45C LDP X1, X2, [X31 + 0x10]
	0x036BE460 LDR X8, [X8 + 0x8A8]
	0x036BE464 MOV X0, X21
	0x036BE468 MOV X3, X22
	0x036BE46C LDR X4, [X8]
	0x036BE470 BL 0x229E7A8
	0x036BE474 CBZ X20, 0x36BE4BC
	0x036BE478 MOV X6, X0
	0x036BE47C MOV X0, X20
	0x036BE480 MOV X1, X22
	0x036BE484 MOV W2, W31
	0x036BE488 MOV W3, W23
	0x036BE48C MOV W4, W19
	0x036BE490 MOV X5, X24
	0x036BE494 BL 0x36BC064
	0x036BE498 CBZ X21, 0x36BE4BC
	0x036BE49C LDR X0, [X21 + 0x10]
	0x036BE4A0 LDP X20, X19, [X31 + 0x60]
	0x036BE4A4 LDP X22, X21, [X31 + 0x50]
	0x036BE4A8 LDP X24, X23, [X31 + 0x40]
	0x036BE4AC LDP X26, X25, [X31 + 0x30]
	0x036BE4B0 LDP X30, X27, [X31 + 0x20]
	0x036BE4B4 ADD X31, X31, 0x70
	0x036BE4B8 RET
	0x036BE4BC BL 0x1C16F20
	0x036BE4C0 SUB X31, X31, 0x80
	0x036BE4C4 STP X30, X27, [X31 + 0x30]
	0x036BE4C8 STP X26, X25, [X31 + 0x40]
	0x036BE4CC STP X24, X23, [X31 + 0x50]
	0x036BE4D0 STP X22, X21, [X31 + 0x60]
	0x036BE4D4 STP X20, X19, [X31 + 0x70]
	0x036BE4D8 ADRP X23, 0xD22000
	0x036BE4DC STP X1, X2, [X31 + 0x20]
	0x036BE4E0 ADRP X25, 0xA68000
	0x036BE4E4 LDRB W8, [X23 + 0x9C6]
	0x036BE4E8 LDR X25, [X25 + 0xD08]
	0x036BE4EC MOV W19, W3
	0x036BE4F0 MOV X21, X2
	0x036BE4F4 MOV X22, X1
	0x036BE4F8 MOV X20, X0
	0x036BE4FC TBNZ X8, 0x0, 0x36BE5EC
	0x036BE500 ADRP X0, 0xA60000
	0x036BE504 LDR X0, [X0 + 0xD50]
	0x036BE508 BL 0x1C16CF4
	0x036BE50C ADRP X0, 0xA60000
	0x036BE510 LDR X0, [X0 + 0xD68]
	0x036BE514 BL 0x1C16CF4
	0x036BE518 ADRP X0, 0xA68000
	0x036BE51C LDR X0, [X0 + 0xCF0]
	0x036BE520 BL 0x1C16CF4
	0x036BE524 ADRP X0, 0xA68000
	0x036BE528 LDR X0, [X0 + 0xCF8]
	0x036BE52C BL 0x1C16CF4
	0x036BE530 ADRP X0, 0xA68000
	0x036BE534 LDR X0, [X0 + 0xD00]
	0x036BE538 BL 0x1C16CF4
	0x036BE53C ADRP X0, 0xA5D000
	0x036BE540 LDR X0, [X0 + 0x5B0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xD23000
	011 Move W8, [X24+2495]
	012 Move X19, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X20, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA65000
	022 Move X0, [X0+3744]
	023 Call 0x1C17CF4
	024 Move X0, 0xA60000
	025 Move X0, [X0+3648]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2495], W8
	029 Move [X31], X31
	030 Move [X31+8], X31
	031 Move X8, [X23]
	032 Move X0, X23
	033 Move X9, [X8+472]
	034 Move X1, [X8+480]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move W25, [X23+56]
	037 Move W24, W0
	038 Call 0x1C17D44
	039 Compare W25, 0
	040 JumpIfNotEqual {90}
	041 Move TEMP, X24
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {115}
	045 Compare X20, 0
	046 JumpIfEqual {127}
	047 Move X8, [X20+24]
	048 Move W24, W22
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W25, W21
	051 Subtract W9, W8, W22
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X23, [X23+40]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X31
	057 Call ThrowHelper.ThrowArgumentOutOfRangeException
	058 Compare X23, 0
	059 JumpIfEqual {158}
	060 NotImplemented "Instruction BFM not yet implemented."
	061 Move X0, X23
	062 Move X1, X20
	063 Move X2, X24
	064 Move W3, W31
	065 Move X4, X19
	066 Call Socket.SendAsyncForNetworkStream, X0, X1, X2, X3
	067 Move X8, 0xA60000
	068 Move X8, [X8+3648]
	069 Move [X31], X0
	070 Move [X31+8], X1
	071 Move X8, [X8]
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Add X0, X31, 0
	078 Move X1, X31
	079 Call ValueTask.AsTask, X0
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X24, [X31+32]
	085 Move X23, [X31+40]
	086 Move X30, [X31+16]
	087 Move X25, [X31+24]
	088 Add X31, X31, 80
	089 Return X0
	090 Move X0, X23
	091 Move X1, X31
	092 Call "il2cpp_vm_object_is_inst", X0
	093 Move X19, X0
	094 Call 0x19913C0
	095 Move X8, [X19]
	096 Move X0, X19
	097 Move X9, [X8+744]
	098 Move X1, [X8+752]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X19, X0
	101 Move X0, 0xA5F000
	102 Move X0, [X0+1208]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X1, X19
	106 Move X2, X31
	107 Move X20, X0
	108 Call ObjectDisposedException..ctor, X0, X1
	109 Move X0, 0xA82000
	110 Move X0, [X0+2112]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X20
	114 Call 0x1C17DEC
	115 Move X0, 0xA36000
	116 Move X0, [X0+1456]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X19, X0
	120 Move X0, 0xA82000
	121 Move X0, [X0+192]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X19
	125 Move X2, X31
	126 Call InvalidOperationException..ctor, X0, X1
	127 Move X0, 0xA3B000
	128 Move X0, [X0+1320]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X19, X0
	132 Move X0, 0xA61000
	133 Move X0, [X0+3912]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Move X2, X31
	138 Call ArgumentNullException..ctor, X0, X1
	139 Move X0, 0xA3E000
	140 Move X0, [X0+1888]
	141 Call 0x1C17D08
	142 Call 0x1C17F10
	143 Move X19, X0
	144 Move X0, 0xA65000
	145 Move X0, [X0+3472]
	146 Move X0, 0xA3E000
	147 Move X0, [X0+1888]
	148 Call 0x1C17D08
	149 Call 0x1C17F10
	150 Move X19, X0
	151 Move X0, 0xA61000
	152 Move X0, [X0+3984]
	153 Call 0x1C17D08
	154 Move X1, X0
	155 Move X0, X19
	156 Move X2, X31
	157 Call ArgumentOutOfRangeException..ctor, X0, X1
	158 Call 0x1C17F20
	159 Move X20, X1
	160 Move W20, W1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Call 0x3EB2AD0
	163 Move X19, [X0]
	164 Call 0x3EB2AE0
	165 Move X0, 0xA36000
	166 Move X0, [X0+2000]
	167 Call 0x1C17D08
	168 Compare X19, 0
	169 JumpIfEqual {222}
	170 Move X8, [X19]
	171 Move W9, [X0+304]
	172 Move W10, [X8+304]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X8, [X8+200]
	175 Add X8, X8, X9
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, 0xA3F000
	179 Move X0, [X0+3512]
	180 Call 0x1C17D08
	181 Move X8, [X19]
	182 Move W9, [X0+304]
	183 Move W10, [X8+304]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X8, [X8+200]
	186 Add X8, X8, X9
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X19
	190 Call 0x19913C0
	191 Move X8, [X19]
	192 Move X0, X19
	193 Move X9, [X8+392]
	194 Move X1, [X8+400]
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X20, X0
	197 Move X0, 0xA82000
	198 Move X0, [X0+1936]
	199 Call 0x1C17D08
	200 Move X1, X20
	201 Move X2, X31
	202 Call SR.Format, X0, X1
	203 Move X20, X0
	204 Move X0, 0xA64000
	205 Move X0, [X0+1960]
	206 Call 0x1C17D08
	207 Call 0x1C17F10
	208 Move X1, X20
	209 Move X2, X19
	210 Move X3, X31
	211 Move X21, X0
	212 Call IOException..ctor, X0, X1, X2
	213 Move X0, 0xA82000
	214 Move X0, [X0+2112]
	215 Call 0x1C17D08
	216 Move X1, X0
	217 Move X0, X21
	218 Call 0x1C17DEC
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Call 0x3EB2AD0
	221 Call 0x3EB2AE0
	222 Move X0, 0xA82000
	223 Move X0, [X0+2112]
	224 Call 0x1C17D08
	225 Move X1, X0
	226 Move X0, X19
	227 Call 0x1C17DEC
	228 Call 0x1D2D690

Method: System.Threading.Tasks.ValueTask WriteAsync(System.ReadOnlyMemory`1<System.Byte> buffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036BE834 LDR X9, [X8 + 0xB8]
	0x036BE838 LDR X24, [X9 + 0x48]
	0x036BE83C CBNZ X24, 0x36BE894
	0x036BE840 LDR W9, [X8 + 0xE0]
	0x036BE844 CBNZ W9, 0x36BE854
	0x036BE848 MOV X0, X8
	0x036BE84C BL 0x1C16DFC
	0x036BE850 LDR X8, [X27]
	0x036BE854 ADRP X9, 0xA5D000
	0x036BE858 LDR X8, [X8 + 0xB8]
	0x036BE85C LDR X9, [X9 + 0x720]
	0x036BE860 LDR X25, [X8]
	0x036BE864 LDR X0, [X9]
	0x036BE868 BL 0x1C16F10
	0x036BE86C ADRP X8, 0xA81000
	0x036BE870 LDR X8, [X8 + 0x8D0]
	0x036BE874 MOV X1, X25
	0x036BE878 MOV X3, X31
	0x036BE87C MOV X24, X0
	0x036BE880 LDR X2, [X8]
	0x036BE884 BL 0x3316570
	0x036BE888 LDR X8, [X27]
	0x036BE88C LDR X8, [X8 + 0xB8]
	0x036BE890 STR X24, [X8 + 0x48]
	0x036BE894 ADRP X8, 0xA81000
	0x036BE898 LDR X8, [X8 + 0x8C0]
	0x036BE89C MOV X0, X21
	0x036BE8A0 MOV X1, X22
	0x036BE8A4 LDR X2, [X8]
	0x036BE8A8 BL 0x229E5F8
	0x036BE8AC CBZ X20, 0x36BE8F4
	0x036BE8B0 MOV X6, X0
	0x036BE8B4 MOV X0, X20
	0x036BE8B8 MOV X1, X22
	0x036BE8BC MOV W2, W31
	0x036BE8C0 MOV W3, W23
	0x036BE8C4 MOV W4, W19
	0x036BE8C8 MOV X5, X24
	0x036BE8CC BL 0x36BC648
	0x036BE8D0 CBZ X21, 0x36BE8F4
	0x036BE8D4 LDR X0, [X21 + 0x10]
	0x036BE8D8 LDP X20, X19, [X31 + 0x70]
	0x036BE8DC LDP X22, X21, [X31 + 0x60]
	0x036BE8E0 LDP X24, X23, [X31 + 0x50]
	0x036BE8E4 LDP X26, X25, [X31 + 0x40]
	0x036BE8E8 LDP X30, X27, [X31 + 0x30]
	0x036BE8EC ADD X31, X31, 0x80
	0x036BE8F0 RET
	0x036BE8F4 BL 0x1C16F20
	0x036BE8F8 SUB X31, X31, 0x50
	0x036BE8FC STR X30, [X31 + 0x20]
	0x036BE900 STP X22, X21, [X31 + 0x30]
	0x036BE904 STP X20, X19, [X31 + 0x40]
	0x036BE908 ADRP X21, 0xD22000
	0x036BE90C LDRB W8, [X21 + 0x9C7]
	0x036BE910 MOV X19, X1
	0x036BE914 MOV X20, X0
	0x036BE918 TBNZ X8, 0x0, 0x36BE960
	0x036BE91C ADRP X0, 0xA81000
	0x036BE920 LDR X0, [X0 + 0x8D8]
	0x036BE924 BL 0x1C16CF4
	0x036BE928 ADRP X0, 0xA81000
	0x036BE92C LDR X0, [X0 + 0x8E0]
	0x036BE930 BL 0x1C16CF4
	0x036BE934 ADRP X0, 0xA81000
	0x036BE938 LDR X0, [X0 + 0x8E8]
	0x036BE93C BL 0x1C16CF4
	0x036BE940 ADRP X0, 0xA3E000
	0x036BE944 LDR X0, [X0 + 0x788]
	0x036BE948 BL 0x1C16CF4
	0x036BE94C ADRP X0, 0xA81000
	0x036BE950 LDR X0, [X0 + 0x8F0]
	0x036BE954 BL 0x1C16CF4
	0x036BE958 MOVZ W8, 0x1
	0x036BE95C STRB W8, [X21 + 0x9C7]
	0x036BE960 STRB W31, [X31 + 0x2C]
	0x036BE964 STP X31, X31, [X31 + 0x8]
	0x036BE968 STR X31, [X31 + 0x18]
	0x036BE96C CBZ X19, 0x36BEA4C
	0x036BE970 ADRP X8, 0xA81000
	0x036BE974 LDR X8, [X8 + 0x8F0]
	0x036BE978 LDR W22, [X19 + 0x40]
	0x036BE97C LDR X21, [X19 + 0x30]
	0x036BE980 ADD X1, X31, 0x2C
	0x036BE984 LDR X2, [X8]
	0x036BE988 ADD X8, X31, 0x8
	0x036BE98C MOV X0, X19
	0x036BE990 BL 0x2695F7C
	0x036BE994 LDRB W8, [X31 + 0x2C]
	0x036BE998 CBZ W8, 0x36BE9AC
	0x036BE99C CBZ X20, 0x36BEA4C
	0x036BE9A0 MOV X0, X20
	0x036BE9A4 MOV X1, X19
	0x036BE9A8 BL 0x36BEA50
	0x036BE9AC ADRP X19, 0xA81000
	0x036BE9B0 LDR X19, [X19 + 0x8E8]
	0x036BE9B4 CBZ W22, 0x36BEA10
	0x036BE9B8 ADRP X8, 0xA3E000
	0x036BE9BC LDR X8, [X8 + 0x788]
	0x036BE9C0 LDR X0, [X8]
	0x036BE9C4 LDR W8, [X0 + 0xE0]
	0x036BE9C8 CBNZ W8, 0x36BE9D0
	0x036BE9CC BL 0x1C16DFC
	0x036BE9D0 ADRP X20, 0xA81000
	0x036BE9D4 LDR X20, [X20 + 0x8D8]
	0x036BE9D8 MOV W0, W22
	0x036BE9DC MOV W1, W31
	0x036BE9E0 BL 0x36BEA90
	0x036BE9E4 LDR X8, [X19]
	0x036BE9E8 MOV X19, X0
	0x036BE9EC LDR W9, [X8 + 0xE0]
	0x036BE9F0 CBNZ W9, 0x36BE9FC
	0x036BE9F4 MOV X0, X8
	0x036BE9F8 BL 0x1C16DFC
	0x036BE9FC LDR X2, [X20]
	0x036BEA00 ADD X0, X31, 0x8
	0x036BEA04 MOV X1, X19
	0x036BEA08 BL 0x26324C8
	0x036BEA0C B 0x36BEA38
	0x036BEA10 LDR X0, [X19]
	0x036BEA14 LDR W8, [X0 + 0xE0]
	0x036BEA18 CBNZ W8, 0x36BEA20
	0x036BEA1C BL 0x1C16DFC
	0x036BEA20 ADRP X8, 0xA81000
	0x036BEA24 LDR X8, [X8 + 0x8E0]
	0x036BEA28 ADD X0, X31, 0x8
	0x036BEA2C MOV X1, X21
	0x036BEA30 LDR X2, [X8]
	0x036BEA34 BL 0x26322B0
	0x036BEA38 LDP X20, X19, [X31 + 0x40]
	0x036BEA3C LDP X22, X21, [X31 + 0x30]
	0x036BEA40 LDR X30, [X31 + 0x20]
	0x036BEA44 ADD X31, X31, 0x50
	0x036BEA48 RET
	0x036BEA4C BL 0x1C16F20
	0x036BEA50 STR X30, [X31 - 0x20]!
	0x036BEA54 STP X20, X19, [X31 + 0x10]
	0x036BEA58 CBZ X1, 0x36BEA8C
	0x036BEA5C STR X31, [X1 + 0x30]
	0x036BEA60 STP X31, X31, [X1 + 0x88]
	0x036BEA64 STR X31, [X1 + 0x80]
	0x036BEA68 STRB W31, [X1 + 0x98]
	0x036BEA6C LDR X20, [X0 + 0x10]
	0x036BEA70 MOV X19, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0]
	009 Move X21, X1
	010 Move X19, X3
	011 Move X20, X2
	012 Move X9, [X8+472]
	013 Move X8, [X8+480]
	014 Move X22, X0
	015 Move X1, X8
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move W24, [X22+56]
	018 Move W23, W0
	019 Call 0x1C17D44
	020 Compare W24, 0
	021 JumpIfNotEqual {42}
	022 Move TEMP, X23
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {67}
	026 Move X0, [X22+40]
	027 Compare X0, 0
	028 JumpIfEqual {79}
	029 Move X1, X21
	030 Move X2, X20
	031 Move W3, W31
	032 Move X4, X19
	033 Call Socket.SendAsyncForNetworkStream, X0, X1, X2, X3
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Return X0
	042 Move X0, X22
	043 Move X1, X31
	044 Call "il2cpp_vm_object_is_inst", X0
	045 Move X19, X0
	046 Call 0x19913C0
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X9, [X8+744]
	050 Move X1, [X8+752]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X19, X0
	053 Move X0, 0xA5F000
	054 Move X0, [X0+1208]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X1, X19
	058 Move X2, X31
	059 Move X20, X0
	060 Call ObjectDisposedException..ctor, X0, X1
	061 Move X0, 0xA82000
	062 Move X0, [X0+2144]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X20
	066 Call 0x1C17DEC
	067 Move X0, 0xA36000
	068 Move X0, [X0+1456]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X19, X0
	072 Move X0, 0xA82000
	073 Move X0, [X0+192]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call InvalidOperationException..ctor, X0, X1
	079 Call 0x1C17F20
	080 Move W20, W1
	081 Move X20, X1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Call 0x3EB2AD0
	084 Move X19, [X0]
	085 Call 0x3EB2AE0
	086 Move X0, 0xA36000
	087 Move X0, [X0+2000]
	088 Call 0x1C17D08
	089 Compare X19, 0
	090 JumpIfEqual {143}
	091 Move X8, [X19]
	092 Move W9, [X0+304]
	093 Move W10, [X8+304]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X8+200]
	096 Add X8, X8, X9
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, 0xA3F000
	100 Move X0, [X0+3512]
	101 Call 0x1C17D08
	102 Move X8, [X19]
	103 Move W9, [X0+304]
	104 Move W10, [X8+304]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X8, [X8+200]
	107 Add X8, X8, X9
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X19
	111 Call 0x19913C0
	112 Move X8, [X19]
	113 Move X0, X19
	114 Move X9, [X8+392]
	115 Move X1, [X8+400]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X20, X0
	118 Move X0, 0xA82000
	119 Move X0, [X0+1936]
	120 Call 0x1C17D08
	121 Move X1, X20
	122 Move X2, X31
	123 Call SR.Format, X0, X1
	124 Move X20, X0
	125 Move X0, 0xA64000
	126 Move X0, [X0+1960]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X1, X20
	130 Move X2, X19
	131 Move X3, X31
	132 Move X21, X0
	133 Call IOException..ctor, X0, X1, X2
	134 Move X0, 0xA82000
	135 Move X0, [X0+2144]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X21
	139 Call 0x1C17DEC
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Call 0x3EB2AD0
	142 Call 0x3EB2AE0
	143 Move X0, 0xA82000
	144 Move X0, [X0+2144]
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X19
	148 Call 0x1C17DEC
	149 Call 0x1D2D690

Method: System.Void Flush()

Disassembly:
	0x036BEA74 CBZ X20, 0x36BEA8C

ISIL:
	001 Return 

Method: System.Threading.Tasks.Task FlushAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036BEA78 BL 0x1C16D44
	0x036BEA7C STR X19, [X20 + 0x10]
	0x036BEA80 LDP X20, X19, [X31 + 0x10]
	0x036BEA84 LDR X30, [X31], #0x20
	0x036BEA88 RET
	0x036BEA8C BL 0x1C16F20
	0x036BEA90 STR X30, [X31 - 0x30]!
	0x036BEA94 STP X22, X21, [X31 + 0x10]
	0x036BEA98 STP X20, X19, [X31 + 0x20]
	0x036BEA9C ADRP X19, 0xD22000
	0x036BEAA0 ADRP X22, 0xA73000
	0x036BEAA4 LDRB W8, [X19 + 0x9C9]
	0x036BEAA8 LDR X22, [X22 + 0xD8]
	0x036BEAAC MOV W20, W1
	0x036BEAB0 MOV W21, W0
	0x036BEAB4 TBNZ X8, 0x0, 0x36BEAE4
	0x036BEAB8 ADRP X0, 0xA63000
	0x036BEABC LDR X0, [X0 + 0x7A8]
	0x036BEAC0 BL 0x1C16CF4
	0x036BEAC4 ADRP X0, 0xA73000
	0x036BEAC8 LDR X0, [X0 + 0xD8]
	0x036BEACC BL 0x1C16CF4
	0x036BEAD0 ADRP X0, 0xA81000
	0x036BEAD4 LDR X0, [X0 + 0x8F8]
	0x036BEAD8 BL 0x1C16CF4
	0x036BEADC MOVZ W8, 0x1
	0x036BEAE0 STRB W8, [X19 + 0x9C9]
	0x036BEAE4 LDR X0, [X22]
	0x036BEAE8 BL 0x1C16F10
	0x036BEAEC MOV W1, W21
	0x036BEAF0 MOV X2, X31
	0x036BEAF4 MOV X19, X0
	0x036BEAF8 BL 0x36C6F04
	0x036BEAFC TBZ X20, 0x0, 0x36BEB60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD23000
	005 Move X19, 0xA37000
	006 Move W8, [X20+2496]
	007 Move X19, [X19+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA37000
	013 Move X0, [X0+1976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2496], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xD1B000
	023 Move W8, [X20+3869]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0xA37000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3869], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, [X8+48]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x036BEB00 CBZ X19, 0x36BEB74
	0x036BEB04 LDR X8, [X19]
	0x036BEB08 MOV X0, X19
	0x036BEB0C LDP X9, X1, [X8 + 0x188]
	0x036BEB10 BLR X9
	0x036BEB14 ADRP X8, 0xA81000
	0x036BEB18 LDR X8, [X8 + 0x8F8]
	0x036BEB1C MOV X1, X0
	0x036BEB20 MOV X2, X31
	0x036BEB24 LDR X8, [X8]
	0x036BEB28 MOV X0, X8
	0x036BEB2C BL 0x32094D4
	0x036BEB30 ADRP X8, 0xA63000
	0x036BEB34 LDR X8, [X8 + 0x7A8]
	0x036BEB38 MOV X20, X0
	0x036BEB3C LDR X8, [X8]
	0x036BEB40 MOV X0, X8
	0x036BEB44 BL 0x1C16F10
	0x036BEB48 MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA36000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA7E000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA82000
	016 Move X0, [X0+2152]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void SetSocketTimeoutOption(System.Net.Sockets.SocketShutdown mode, System.Int32 timeout, System.Boolean silent)

Disassembly:
	0x036BB9C0 LDR X0, [X0 + 0x7A0]
	0x036BB9C4 BL 0x1C16D08
	0x036BB9C8 MOV X1, X0
	0x036BB9CC MOV X0, X19
	0x036BB9D0 BL 0x1C16DEC
	0x036BB9D4 BL 0x1C16F20
	0x036BB9D8 ADRP X0, 0xA76000
	0x036BB9DC LDR X0, [X0 + 0xD8]
	0x036BB9E0 BL 0x1C16D08
	0x036BB9E4 BL 0x1C16F10
	0x036BB9E8 MOV W1, W19
	0x036BB9EC MOV X2, X31
	0x036BB9F0 MOV X20, X0
	0x036BB9F4 BL 0x36C6F04
	0x036BB9F8 MOV X0, X20
	0x036BB9FC BL 0x19903C0
	0x036BBA00 LDR X8, [X20]
	0x036BBA04 MOV X0, X20
	0x036BBA08 LDP X9, X1, [X8 + 0x188]
	0x036BBA0C BLR X9
	0x036BBA10 MOV X19, X0
	0x036BBA14 ADRP X0, 0xA84000
	0x036BBA18 LDR X0, [X0 + 0x790]
	0x036BBA1C BL 0x1C16D08
	0x036BBA20 MOV X1, X19
	0x036BBA24 MOV X2, X31
	0x036BBA28 BL 0x32094D4
	0x036BBA2C MOV X19, X0
	0x036BBA30 ADRP X0, 0xA66000
	0x036BBA34 LDR X0, [X0 + 0x7A8]
	0x036BBA38 BL 0x1C16D08
	0x036BBA3C BL 0x1C16F10
	0x036BBA40 MOV X1, X19
	0x036BBA44 MOV X2, X20
	0x036BBA48 MOV X3, X31
	0x036BBA4C MOV X21, X0
	0x036BBA50 BL 0x32E2390
	0x036BBA54 ADRP X0, 0xA84000
	0x036BBA58 LDR X0, [X0 + 0x7A0]
	0x036BBA5C BL 0x1C16D08
	0x036BBA60 MOV X1, X0
	0x036BBA64 MOV X0, X21
	0x036BBA68 BL 0x1C16DEC
	0x036BBA6C SUB X31, X31, 0x40
	0x036BBA70 STP X30, X23, [X31 + 0x10]
	0x036BBA74 STP X22, X21, [X31 + 0x20]
	0x036BBA78 STP X20, X19, [X31 + 0x30]
	0x036BBA7C ADRP X22, 0xD25000
	0x036BBA80 STP X1, X2, [X31]
	0x036BBA84 ADRP X23, 0xA82000
	0x036BBA88 LDRB W8, [X22 + 0x9F6]
	0x036BBA8C LDR X23, [X23 + 0x328]
	0x036BBA90 MOV X19, X4
	0x036BBA94 MOV W20, W3
	0x036BBA98 MOV X21, X0
	0x036BBA9C TBNZ X8, 0x0, 0x36BBAB4
	0x036BBAA0 ADRP X0, 0xA82000
	0x036BBAA4 LDR X0, [X0 + 0x328]
	0x036BBAA8 BL 0x1C16CF4
	0x036BBAAC MOVZ W8, 0x1
	0x036BBAB0 STRB W8, [X22 + 0x9F6]
	0x036BBAB4 LDR X1, [X23]
	0x036BBAB8 ADD X0, X31, 0x0
	0x036BBABC BL 0x25BE934
	0x036BBAC0 CBZ X0, 0x36BBAF4
	0x036BBAC4 LDR W3, [X0 + 0x18]
	0x036BBAC8 MOV X1, X0
	0x036BBACC MOV X0, X21
	0x036BBAD0 MOV W2, W31
	0x036BBAD4 MOV W4, W20
	0x036BBAD8 MOV X5, X19
	0x036BBADC BL 0x36C0450
	0x036BBAE0 LDP X20, X19, [X31 + 0x30]
	0x036BBAE4 LDP X22, X21, [X31 + 0x20]
	0x036BBAE8 LDP X30, X23, [X31 + 0x10]
	0x036BBAEC ADD X31, X31, 0x40
	0x036BBAF0 RET
	0x036BBAF4 BL 0x1C16F20
	0x036BBAF8 STR X30, [X31 - 0x20]!
	0x036BBAFC STP X20, X19, [X31 + 0x10]
	0x036BBB00 ADRP X20, 0xD25000
	0x036BBB04 LDRB W8, [X20 + 0x9BD]
	0x036BBB08 MOV X19, X0
	0x036BBB0C STRB W1, [X31 + 0xC]
	0x036BBB10 TBNZ X8, 0x0, 0x36BBB28
	0x036BBB14 ADRP X0, 0xA66000
	0x036BBB18 LDR X0, [X0 + 0x848]
	0x036BBB1C BL 0x1C16CF4
	0x036BBB20 MOVZ W8, 0x1
	0x036BBB24 STRB W8, [X20 + 0x9BD]
	0x036BBB28 LDR X8, [X19]
	0x036BBB2C ADD X1, X31, 0xC
	0x036BBB30 MOVZ W2, 0x1
	0x036BBB34 MOV X0, X19
	0x036BBB38 LDR X9, [X8 + 0x398]
	0x036BBB3C LDR X3, [X8 + 0x3A0]
	0x036BBB40 BLR X9
	0x036BBB44 LDP X20, X19, [X31 + 0x10]
	0x036BBB48 LDR X30, [X31], #0x20
	0x036BBB4C RET
	0x036BBB50 STP X30, X19, [X31 - 0x10]!
	0x036BBB54 ADDS W31, W1, 0x2
	0x036BBB58 B.LE 0x36BBB6C
	0x036BBB5C STR W1, [X0 + 0x34]
	0x036BBB60 MOV X1, X31
	0x036BBB64 LDP X30, X19, [X31], #0x10
	0x036BBB68 B 0x32F02B8
	0x036BBB6C ADRP X0, 0xA40000
	0x036BBB70 LDR X0, [X0 + 0x760]
	0x036BBB74 BL 0x1C16D08
	0x036BBB78 BL 0x1C16F10
	0x036BBB7C MOV X19, X0
	0x036BBB80 ADRP X0, 0xA72000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X23, 0xD26000
	012 Move X25, 0xA83000
	013 Move W8, [X23+2497]
	014 Move X25, [X25+1128]
	015 Move W20, W3
	016 Move W22, W2
	017 Move W21, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0xA39000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X0, 0xA39000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0xA83000
	030 Move X0, [X0+1128]
	031 Call 0x1C17CF4
	032 Move X0, 0xA85000
	033 Move X0, [X0+1824]
	034 Call 0x1C17CF4
	035 Move X0, 0xA85000
	036 Move X0, [X0+1832]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+2497], W8
	040 Move X0, [X25]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X31
	046 Call NetEventSource.get_IsEnabled
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {88}
	051 Move X8, 0xA85000
	052 Move X8, [X8+1824]
	053 Add X1, X31, 28
	054 And W26, W20, 1
	055 Move [X31+28], W21
	056 Move X0, [X8]
	057 Call 0x1C17E04
	058 Move X8, 0xA39000
	059 Move X8, [X8+1880]
	060 Move X23, X0
	061 Add X1, X31, 24
	062 Move [X31+24], W22
	063 Move X0, [X8]
	064 Call 0x1C17E04
	065 Move X8, 0xA39000
	066 Move X8, [X8+2904]
	067 Move X24, X0
	068 Add X1, X31, 12
	069 Move [X31+12], W26
	070 Move X0, [X8]
	071 Call 0x1C17E04
	072 Move X8, [X25]
	073 Move X25, X0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X8, 0xA85000
	080 Move X8, [X8+1832]
	081 Move X0, X19
	082 Move X1, X23
	083 Move X2, X24
	084 Move X4, [X8]
	085 Move X3, X25
	086 Move X5, X31
	087 Call NetEventSource.Enter, X0, X1, X2, X3, X4
	088 Subtract W8, W21, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction BIC not yet implemented."
	091 Move W8, [X19+64]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, [X19+40]
	094 Compare X0, 0
	095 JumpIfEqual {127}
	096 And W4, W20, 1
	097 Move W1, 0xFFFF
	098 Move W2, 0x1005
	099 Move W3, W22
	100 Call Socket.SetSocketOption, X0, X1, X2, X3, X4
	101 Move [X19+64], W22
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Compare W21, 0
	104 JumpIfNotEqual {116}
	105 Move W8, [X19+60]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, [X19+40]
	108 Compare X0, 0
	109 JumpIfEqual {127}
	110 And W4, W20, 1
	111 Move W1, 0xFFFF
	112 Move W2, 0x1006
	113 Move W3, W22
	114 Call Socket.SetSocketOption, X0, X1, X2, X3, X4
	115 Move [X19+60], W22
	116 Move X20, [X31+80]
	117 Move X19, [X31+88]
	118 Move X22, [X31+64]
	119 Move X21, [X31+72]
	120 Move X24, [X31+48]
	121 Move X23, [X31+56]
	122 Move X26, [X31+32]
	123 Move X25, [X31+40]
	124 Move X30, [X31+16]
	125 Add X31, X31, 96
	126 Return 
	127 Call 0x1C17F20

Method: System.Net.Sockets.Socket get_InternalSocket()

Disassembly:
	0x036BEC8C MOV X19, X0
	0x036BEC90 LDR W9, [X8 + 0xE0]
	0x036BEC94 CBNZ W9, 0x36BECA0
	0x036BEC98 MOV X0, X8
	0x036BEC9C BL 0x1C16DFC
	0x036BECA0 LDR X2, [X20]
	0x036BECA4 ADD X0, X31, 0x20
	0x036BECA8 MOV X1, X19
	0x036BECAC BL 0x2630308
	0x036BECB0 B 0x36BECDC
	0x036BECB4 LDR X0, [X19]
	0x036BECB8 LDR W8, [X0 + 0xE0]
	0x036BECBC CBNZ W8, 0x36BECC4
	0x036BECC0 BL 0x1C16DFC
	0x036BECC4 ADRP X8, 0xA64000
	0x036BECC8 LDR X8, [X8 + 0xE30]
	0x036BECCC ADD X0, X31, 0x20
	0x036BECD0 MOV W1, W23
	0x036BECD4 LDR X2, [X8]
	0x036BECD8 BL 0x26300F0
	0x036BECDC LDP X20, X19, [X31 + 0x70]
	0x036BECE0 LDP X22, X21, [X31 + 0x60]
	0x036BECE4 LDP X24, X23, [X31 + 0x50]
	0x036BECE8 LDR X30, [X31 + 0x40]
	0x036BECEC ADD X31, X31, 0x80
	0x036BECF0 RET
	0x036BECF4 BL 0x1C16F20
	0x036BECF8 STP X30, X21, [X31 - 0x20]!
	0x036BECFC STP X20, X19, [X31 + 0x10]
	0x036BED00 CBZ X1, 0x36BED40
	0x036BED04 STP X31, X31, [X1 + 0x80]
	0x036BED08 STRH W31, [X1 + 0x98]
	0x036BED0C STR X31, [X1 + 0x90]
	0x036BED10 LDR X20, [X0 + 0x10]
	0x036BED14 MOV X19, X1
	0x036BED18 CBZ X20, 0x36BED40
	0x036BED1C ANDS W31, W2, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, [X0+40]
	006 Move W21, [X0+56]
	007 Move X19, X0
	008 Call 0x1C17D44
	009 Compare X20, 0
	010 JumpIfEqual {19}
	011 Compare W21, 0
	012 JumpIfNotEqual {19}
	013 Move X0, X20
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return X0
	019 Move X0, X19
	020 Move X1, X31
	021 Call "il2cpp_vm_object_is_inst", X0
	022 Move X19, X0
	023 Call 0x19913C0
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+744]
	027 Move X1, [X8+752]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X19, X0
	030 Move X0, 0xA5F000
	031 Move X0, [X0+1208]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X1, X19
	035 Move X2, X31
	036 Move X20, X0
	037 Call ObjectDisposedException..ctor, X0, X1
	038 Move X0, 0xA82000
	039 Move X0, [X0+2168]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X20
	043 Call 0x1C17DEC

