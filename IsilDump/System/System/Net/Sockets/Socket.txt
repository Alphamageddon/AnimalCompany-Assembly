Type: System.Net.Sockets.Socket

Method: System.Threading.Tasks.Task ConnectAsync(System.Net.IPAddress address, System.Int32 port)

Disassembly:
	0x036BED20 MOVZ W8, 0x20
	0x036BED24 MOVZ W9, 0x18
	0x036BED28 CSEL X21, X9, X8, NE
	0x036BED2C BL 0x1C16D44
	0x036BED30 STR X19, [X20, X21, LSL]
	0x036BED34 LDP X20, X19, [X31 + 0x10]
	0x036BED38 LDP X30, X21, [X31], #0x20
	0x036BED3C RET
	0x036BED40 BL 0x1C16F20
	0x036BED44 STR X30, [X31 - 0x40]!
	0x036BED48 STP X24, X23, [X31 + 0x10]
	0x036BED4C STP X22, X21, [X31 + 0x20]
	0x036BED50 STP X20, X19, [X31 + 0x30]
	0x036BED54 ADRP X19, 0xD22000
	0x036BED58 ADRP X22, 0xA3E000
	0x036BED5C LDRB W8, [X19 + 0x9D1]
	0x036BED60 LDR X22, [X22 + 0x788]
	0x036BED64 TBNZ X8, 0x0, 0x36BED88
	0x036BED68 ADRP X0, 0xA81000
	0x036BED6C LDR X0, [X0 + 0x18]
	0x036BED70 BL 0x1C16CF4
	0x036BED74 ADRP X0, 0xA3E000
	0x036BED78 LDR X0, [X0 + 0x788]
	0x036BED7C BL 0x1C16CF4
	0x036BED80 MOVZ W8, 0x1
	0x036BED84 STRB W8, [X19 + 0x9D1]
	0x036BED88 LDR X0, [X22]
	0x036BED8C LDR W8, [X0 + 0xE0]
	0x036BED90 CBNZ W8, 0x36BED9C
	0x036BED94 BL 0x1C16DFC
	0x036BED98 LDR X0, [X22]
	0x036BED9C LDR X8, [X0 + 0xB8]
	0x036BEDA0 LDRB W19, [X8 + 0x3B]
	0x036BEDA4 BL 0x1C16D44
	0x036BEDA8 CBNZ W19, 0x36BEF10
	0x036BEDAC LDR X0, [X22]
	0x036BEDB0 LDR W8, [X0 + 0xE0]
	0x036BEDB4 CBNZ W8, 0x36BEDBC
	0x036BEDB8 BL 0x1C16DFC
	0x036BEDBC BL 0x36C13C4
	0x036BEDC0 MOV X19, X0
	0x036BEDC4 STRB W31, [X31 + 0xC]
	0x036BEDC8 ADD X1, X31, 0xC
	0x036BEDCC MOV X2, X31
	0x036BEDD0 BL 0x33DE64C
	0x036BEDD4 LDR X0, [X22]
	0x036BEDD8 LDR W8, [X0 + 0xE0]
	0x036BEDDC CBNZ W8, 0x36BEDE8
	0x036BEDE0 BL 0x1C16DFC
	0x036BEDE4 LDR X0, [X22]
	0x036BEDE8 LDR X8, [X0 + 0xB8]
	0x036BEDEC LDRB W20, [X8 + 0x3B]
	0x036BEDF0 BL 0x1C16D44
	0x036BEDF4 CBZ W20, 0x36BEE00
	0x036BEDF8 MOV X21, X31
	0x036BEDFC B 0x36BEEF8
	0x036BEE00 LDR X0, [X22]
	0x036BEE04 LDR W8, [X0 + 0xE0]
	0x036BEE08 CBNZ W8, 0x36BEE10
	0x036BEE0C BL 0x1C16DFC
	0x036BEE10 MOV W0, W31
	0x036BEE14 BL 0x36C1490
	0x036BEE18 MOV W21, W0
	0x036BEE1C MOVZ W0, 0x1
	0x036BEE20 BL 0x36C1490
	0x036BEE24 MOV W20, W0
	0x036BEE28 TBZ X0, 0x0, 0x36BEEA8
	0x036BEE2C LDR X0, [X22]
	0x036BEE30 LDR W8, [X0 + 0xE0]
	0x036BEE34 CBNZ W8, 0x36BEE3C
	0x036BEE38 BL 0x1C16DFC
	0x036BEE3C BL 0x1C16D44
	0x036BEE40 LDR X8, [X22]
	0x036BEE44 MOVZ W9, 0x1
	0x036BEE48 ADRP X23, 0xA81000
	0x036BEE4C LDR X8, [X8 + 0xB8]
	0x036BEE50 STRB W9, [X8 + 0x3A]
	0x036BEE54 LDR X23, [X23 + 0x18]
	0x036BEE58 LDR X0, [X23]
	0x036BEE5C LDR W8, [X0 + 0xE0]
	0x036BEE60 CBNZ W8, 0x36BEE68
	0x036BEE64 BL 0x1C16DFC
	0x036BEE68 ADRP X24, 0xD22000
	0x036BEE6C LDRB W8, [X24 + 0xA17]
	0x036BEE70 CBNZ W8, 0x36BEE88

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xD23000
	010 Move X24, 0xA41000
	011 Move X22, 0xA82000
	012 Move X25, 0xA82000
	013 Move W8, [X23+2498]
	014 Move X24, [X24+2304]
	015 Move X22, [X22+2176]
	016 Move X25, [X25+2096]
	017 Move W19, W2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0xA5E000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0xA82000
	028 Move X0, [X0+2176]
	029 Call 0x1C17CF4
	030 Move X0, 0xA41000
	031 Move X0, [X0+1776]
	032 Call 0x1C17CF4
	033 Move X0, 0xA41000
	034 Move X0, [X0+2304]
	035 Call 0x1C17CF4
	036 Move X0, 0xA82000
	037 Move X0, [X0+2184]
	038 Call 0x1C17CF4
	039 Move X0, 0xA82000
	040 Move X0, [X0+2096]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+2498], W8
	044 Move X0, [X24]
	045 Call 0x1C17F10
	046 Move X2, [X22]
	047 Move X1, X21
	048 Move X22, X0
	049 Call TaskCompletionSource`1<Boolean>..ctor, X0, X1
	050 Move X0, [X25]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X25]
	056 Move X8, [X0+184]
	057 Move X23, [X8+8]
	058 Compare X23, 0
	059 JumpIfNotEqual {81}
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X25]
	065 Move X9, 0xA5E000
	066 Move X8, [X0+184]
	067 Move X9, [X9+1824]
	068 Move X24, [X8]
	069 Move X0, [X9]
	070 Call 0x1C17F10
	071 Move X8, 0xA82000
	072 Move X8, [X8+2184]
	073 Move X1, X24
	074 Move X3, X31
	075 Move X23, X0
	076 Move X2, [X8]
	077 Call AsyncCallback..ctor, X0, X1, X2
	078 Move X8, [X25]
	079 Move X8, [X8+184]
	080 Move [X8+8], X23
	081 Compare X21, 0
	082 JumpIfEqual {101}
	083 Move X0, X21
	084 Move X1, X20
	085 Move W2, W19
	086 Move X3, X23
	087 Move X4, X22
	088 Call Socket.BeginConnect, X0, X1, X2, X3, X4
	089 Compare X22, 0
	090 JumpIfEqual {101}
	091 Move X0, [X22+16]
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X22, [X31+32]
	095 Move X21, [X31+40]
	096 Move X24, [X31+16]
	097 Move X23, [X31+24]
	098 Move X30, [X31+64]
	099 Move X25, [X31+72]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Threading.Tasks.ValueTask`1<System.Int32> ReceiveAsync(System.Memory`1<System.Byte> buffer, System.Net.Sockets.SocketFlags socketFlags, System.Boolean fromNetworkStream, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036BDC98 LDRB W21, [X0 + 0x38]
	0x036BDC9C MOV X19, X0
	0x036BDCA0 BL 0x1C16D44
	0x036BDCA4 CBZ X20, 0x36BDCBC
	0x036BDCA8 CBNZ W21, 0x36BDCBC
	0x036BDCAC MOV X0, X20
	0x036BDCB0 LDP X20, X19, [X31 + 0x10]
	0x036BDCB4 LDP X30, X21, [X31], #0x20
	0x036BDCB8 RET
	0x036BDCBC MOV X0, X19
	0x036BDCC0 MOV X1, X31
	0x036BDCC4 BL 0x33BE520
	0x036BDCC8 MOV X19, X0
	0x036BDCCC BL 0x19903C0
	0x036BDCD0 LDR X8, [X19]
	0x036BDCD4 MOV X0, X19
	0x036BDCD8 LDR X9, [X8 + 0x2E8]
	0x036BDCDC LDR X1, [X8 + 0x2F0]
	0x036BDCE0 BLR X9
	0x036BDCE4 MOV X19, X0
	0x036BDCE8 ADRP X0, 0xA5F000
	0x036BDCEC LDR X0, [X0 + 0x4B8]
	0x036BDCF0 BL 0x1C16D08
	0x036BDCF4 BL 0x1C16F10
	0x036BDCF8 MOV X1, X19
	0x036BDCFC MOV X2, X31
	0x036BDD00 MOV X20, X0
	0x036BDD04 BL 0x338C448
	0x036BDD08 ADRP X0, 0xA82000
	0x036BDD0C LDR X0, [X0 + 0x878]
	0x036BDD10 BL 0x1C16D08
	0x036BDD14 MOV X1, X0
	0x036BDD18 MOV X0, X20
	0x036BDD1C BL 0x1C16DEC
	0x036BDD20 STP X30, X25, [X31 - 0x40]!
	0x036BDD24 STP X24, X23, [X31 + 0x10]
	0x036BDD28 STP X22, X21, [X31 + 0x20]
	0x036BDD2C STP X20, X19, [X31 + 0x30]
	0x036BDD30 ADRP X23, 0xD23000
	0x036BDD34 ADRP X24, 0xA41000
	0x036BDD38 ADRP X22, 0xA82000
	0x036BDD3C ADRP X25, 0xA82000
	0x036BDD40 LDRB W8, [X23 + 0x9C2]
	0x036BDD44 LDR X24, [X24 + 0x900]
	0x036BDD48 LDR X22, [X22 + 0x880]
	0x036BDD4C LDR X25, [X25 + 0x830]
	0x036BDD50 MOV W19, W2
	0x036BDD54 MOV X20, X1
	0x036BDD58 MOV X21, X0
	0x036BDD5C TBNZ X8, 0x0, 0x36BDDB0
	0x036BDD60 ADRP X0, 0xA5E000
	0x036BDD64 LDR X0, [X0 + 0x720]
	0x036BDD68 BL 0x1C16CF4
	0x036BDD6C ADRP X0, 0xA82000
	0x036BDD70 LDR X0, [X0 + 0x880]
	0x036BDD74 BL 0x1C16CF4
	0x036BDD78 ADRP X0, 0xA41000
	0x036BDD7C LDR X0, [X0 + 0x6F0]
	0x036BDD80 BL 0x1C16CF4
	0x036BDD84 ADRP X0, 0xA41000
	0x036BDD88 LDR X0, [X0 + 0x900]
	0x036BDD8C BL 0x1C16CF4
	0x036BDD90 ADRP X0, 0xA82000
	0x036BDD94 LDR X0, [X0 + 0x888]
	0x036BDD98 BL 0x1C16CF4
	0x036BDD9C ADRP X0, 0xA82000
	0x036BDDA0 LDR X0, [X0 + 0x830]
	0x036BDDA4 BL 0x1C16CF4
	0x036BDDA8 MOVZ W8, 0x1
	0x036BDDAC STRB W8, [X23 + 0x9C2]
	0x036BDDB0 LDR X0, [X24]
	0x036BDDB4 BL 0x1C16F10
	0x036BDDB8 LDR X2, [X22]
	0x036BDDBC MOV X1, X21
	0x036BDDC0 MOV X22, X0
	0x036BDDC4 BL 0x2679F2C
	0x036BDDC8 LDR X0, [X25]
	0x036BDDCC LDR W8, [X0 + 0xE0]
	0x036BDDD0 CBNZ W8, 0x36BDDDC
	0x036BDDD4 BL 0x1C16DFC
	0x036BDDD8 LDR X0, [X25]
	0x036BDDDC LDR X8, [X0 + 0xB8]
	0x036BDDE0 LDR X23, [X8 + 0x8]
	0x036BDDE4 CBNZ X23, 0x36BDE38
	0x036BDDE8 LDR W8, [X0 + 0xE0]
	0x036BDDEC CBNZ W8, 0x36BDDF8
	0x036BDDF0 BL 0x1C16DFC
	0x036BDDF4 LDR X0, [X25]
	0x036BDDF8 ADRP X9, 0xA5E000
	0x036BDDFC LDR X8, [X0 + 0xB8]
	0x036BDE00 LDR X9, [X9 + 0x720]
	0x036BDE04 LDR X24, [X8]
	0x036BDE08 LDR X0, [X9]
	0x036BDE0C BL 0x1C16F10
	0x036BDE10 ADRP X8, 0xA82000
	0x036BDE14 LDR X8, [X8 + 0x888]
	0x036BDE18 MOV X1, X24
	0x036BDE1C MOV X3, X31
	0x036BDE20 MOV X23, X0
	0x036BDE24 LDR X2, [X8]
	0x036BDE28 BL 0x3316570
	0x036BDE2C LDR X8, [X25]
	0x036BDE30 LDR X8, [X8 + 0xB8]
	0x036BDE34 STR X23, [X8 + 0x8]
	0x036BDE38 CBZ X21, 0x36BDE70
	0x036BDE3C MOV X0, X21
	0x036BDE40 MOV X1, X20
	0x036BDE44 MOV W2, W19
	0x036BDE48 MOV X3, X23
	0x036BDE4C MOV X4, X22
	0x036BDE50 BL 0x36BDE74
	0x036BDE54 CBZ X22, 0x36BDE70
	0x036BDE58 LDR X0, [X22 + 0x10]
	0x036BDE5C LDP X20, X19, [X31 + 0x30]
	0x036BDE60 LDP X22, X21, [X31 + 0x20]
	0x036BDE64 LDP X24, X23, [X31 + 0x10]
	0x036BDE68 LDP X30, X25, [X31], #0x40
	0x036BDE6C RET
	0x036BDE70 BL 0x1C16F20
	0x036BDE74 STP X30, X25, [X31 - 0x40]!
	0x036BDE78 STP X24, X23, [X31 + 0x10]
	0x036BDE7C STP X22, X21, [X31 + 0x20]
	0x036BDE80 STP X20, X19, [X31 + 0x30]
	0x036BDE84 ADRP X24, 0xD23000
	0x036BDE88 ADRP X25, 0xA3F000
	0x036BDE8C LDRB W8, [X24 + 0x9CF]
	0x036BDE90 LDR X25, [X25 + 0x788]
	0x036BDE94 MOV X19, X4
	0x036BDE98 MOV X20, X3
	0x036BDE9C MOV W22, W2
	0x036BDEA0 MOV X23, X1
	0x036BDEA4 MOV X21, X0
	0x036BDEA8 TBNZ X8, 0x0, 0x36BDED8
	0x036BDEAC ADRP X0, 0xA43000
	0x036BDEB0 LDR X0, [X0 + 0xBB8]
	0x036BDEB4 BL 0x1C16CF4
	0x036BDEB8 ADRP X0, 0xA3F000
	0x036BDEBC LDR X0, [X0 + 0x788]
	0x036BDEC0 BL 0x1C16CF4
	0x036BDEC4 ADRP X0, 0xA80000
	0x036BDEC8 LDR X0, [X0 + 0xE28]
	0x036BDECC BL 0x1C16CF4
	0x036BDED0 MOVZ W8, 0x1
	0x036BDED4 STRB W8, [X24 + 0x9CF]
	0x036BDED8 LDR X0, [X25]
	0x036BDEDC LDR W8, [X0 + 0xE0]
	0x036BDEE0 CBNZ W8, 0x36BDEE8
	0x036BDEE4 BL 0x1C16DFC
	0x036BDEE8 BL 0x1C16D44
	0x036BDEEC LDR W8, [X21 + 0x54]
	0x036BDEF0 CMP W8, 0x1
	0x036BDEF4 B.EQ 0x36BDFC4
	0x036BDEF8 CBZ X23, 0x36BE014
	0x036BDEFC ADRP X8, 0xA80000
	0x036BDF00 LDR X8, [X8 + 0xE28]
	0x036BDF04 LDR X0, [X8]
	0x036BDF08 LDR W8, [X0 + 0xE0]
	0x036BDF0C CBNZ W8, 0x36BDF14
	0x036BDF10 BL 0x1C16DFC
	0x036BDF14 MOV W0, W22
	0x036BDF18 MOV X1, X31
	0x036BDF1C BL 0x367E800
	0x036BDF20 TBZ X0, 0x0, 0x36BE048
	0x036BDF24 MOV X0, X23
	0x036BDF28 MOV X1, X31
	0x036BDF2C BL 0x366D604
	0x036BDF30 LDR W8, [X21 + 0x20]
	0x036BDF34 CMP W8, W0
	0x036BDF38 B.EQ 0x36BDF58
	0x036BDF3C CMP W0, 0x2
	0x036BDF40 B.NE 0x36BE090
	0x036BDF44 CMP W8, 0x17
	0x036BDF48 B.NE 0x36BE090
	0x036BDF4C MOV X0, X21
	0x036BDF50 BL 0x36BF538
	0x036BDF54 TBZ X0, 0x0, 0x36BE090
	0x036BDF58 ADRP X8, 0xA43000
	0x036BDF5C LDR X8, [X8 + 0xBB8]
	0x036BDF60 LDR X0, [X8]
	0x036BDF64 BL 0x1C16F10
	0x036BDF68 MOV X1, X23
	0x036BDF6C MOV W2, W22
	0x036BDF70 MOV X3, X31
	0x036BDF74 MOV X24, X0
	0x036BDF78 BL 0x366E898
	0x036BDF7C MOV X0, X21

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0xD24000
	013 Move [X31+8], X5
	014 Move X25, 0xA3F000
	015 Move W8, [X24+2499]
	016 Move X25, [X25+2008]
	017 Move W21, W4
	018 Move W19, W3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {61}
	026 Move X0, 0xA3F000
	027 Move X0, [X0+2008]
	028 Call 0x1C17CF4
	029 Move X0, 0xA83000
	030 Move X0, [X0+2048]
	031 Call 0x1C17CF4
	032 Move X0, 0xA83000
	033 Move X0, [X0+2056]
	034 Call 0x1C17CF4
	035 Move X0, 0xA83000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xA83000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xA6A000
	042 Move X0, [X0+3272]
	043 Call 0x1C17CF4
	044 Move X0, 0xA38000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xA83000
	048 Move X0, [X0+2080]
	049 Call 0x1C17CF4
	050 Move X0, 0xA83000
	051 Move X0, [X0+2088]
	052 Call 0x1C17CF4
	053 Move X0, 0xA83000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xA6A000
	057 Move X0, [X0+3360]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X24+2499], W8
	061 Move X0, [X25]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Add X0, X31, 8
	067 Move X1, X31
	068 Call CancellationToken.get_IsCancellationRequested, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {86}
	073 Move X8, 0xA38000
	074 Move X8, [X8+1976]
	075 Move X20, 0xA6A000
	076 Move X19, [X31+8]
	077 Move X0, [X8]
	078 Move W8, [X0+224]
	079 Move X20, [X20+3272]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X1, [X20]
	084 Move X0, X19
	085 Call 0x229A598, X0
	086 Move X27, 0xA83000
	087 Move X27, [X27+2096]
	088 Add X24, X20, 16
	089 Move X0, [X27]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X27]
	095 Move X8, [X0+184]
	096 Move X28, 0xA83000
	097 Move X25, [X8+16]
	098 Move X28, [X28+2072]
	099 Compare X25, 0
	100 JumpIfNotEqual {122}
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X27]
	106 Move X9, 0xA83000
	107 Move X8, [X0+184]
	108 Move X9, [X9+2048]
	109 Move X26, [X8]
	110 Move X0, [X9]
	111 Call 0x1C17F10
	112 Move X8, 0xA83000
	113 Move X8, [X8+2080]
	114 Move X1, X26
	115 Move X3, X31
	116 Move X25, X0
	117 Move X2, [X8]
	118 Call Func`1<Object>..ctor, X0, X1, X2
	119 Move X8, [X27]
	120 Move X8, [X8+184]
	121 Move [X8+16], X25
	122 Move X2, [X28]
	123 Move X0, X24
	124 Move X1, X25
	125 Call 0x2213A40, X0, X1
	126 Compare X0, 0
	127 JumpIfEqual {214}
	128 Move X8, X0
	129 Move X0, [X27]
	130 Add X24, X8, 40
	131 Move W9, [X0+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X27]
	136 Move X8, [X0+184]
	137 Move X25, [X8+24]
	138 Compare X25, 0
	139 JumpIfNotEqual {161}
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {145}
	143 Call 0x1C17DFC
	144 Move X0, [X27]
	145 Move X9, 0xA83000
	146 Move X8, [X0+184]
	147 Move X9, [X9+2056]
	148 Move X26, [X8]
	149 Move X0, [X9]
	150 Call 0x1C17F10
	151 Move X8, 0xA83000
	152 Move X8, [X8+2088]
	153 Move X1, X26
	154 Move X3, X31
	155 Move X25, X0
	156 Move X2, [X8]
	157 Call Func`1<Object>..ctor, X0, X1, X2
	158 Move X8, [X27]
	159 Move X8, [X8+184]
	160 Move [X8+24], X25
	161 Move X8, 0xA83000
	162 Move X8, [X8+2064]
	163 Move X0, X24
	164 Move X1, X25
	165 Move X2, [X8]
	166 Call 0x2213A40, X0, X1
	167 Compare X0, 0
	168 JumpIfEqual {214}
	169 Move X1, X31
	170 Move X24, X0
	171 Call AwaitableSocketAsyncEventArgs.Reserve, X0
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {189}
	176 Move X0, X24
	177 Move X1, X23
	178 Move X2, X22
	179 Move X3, X31
	180 Call SocketAsyncEventArgs.SetBuffer, X0, X1
	181 And W8, W21, 1
	182 Move X0, X24
	183 Move X1, X20
	184 Move X2, X31
	185 Move [X24+68], W19
	186 Move [X24+154], W8
	187 Call AwaitableSocketAsyncEventArgs.ReceiveAsync, X0, X1
	188 Move X19, X0
	189 Move X0, X20
	190 Move X1, X23
	191 Move X2, X22
	192 Move W3, W19
	193 Call Socket.ReceiveAsyncApm, X0, X1, X2
	194 Move X19, X0
	195 Compare X0, 0
	196 JumpIfNotEqual {200}
	197 Move W0, 38
	198 Move X1, X31
	199 Call ThrowHelper.ThrowArgumentNullException, X0
	200 Move X1, 0x10000
	201 Move X0, X19
	202 Move X20, [X31+80]
	203 Move X19, [X31+88]
	204 Move X22, [X31+64]
	205 Move X21, [X31+72]
	206 Move X24, [X31+48]
	207 Move X23, [X31+56]
	208 Move X26, [X31+32]
	209 Move X25, [X31+40]
	210 Move X28, [X31+16]
	211 Move X27, [X31+24]
	212 Move X30, [X31+96]
	213 Return X0
	214 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int32> ReceiveAsyncApm(System.Memory`1<System.Byte> buffer, System.Net.Sockets.SocketFlags socketFlags)

Disassembly:
	0x036BF0E0 BL 0x36BF618
	0x036BF0E4 LDP X30, X19, [X31], #0x10
	0x036BF0E8 RET
	0x036BF0EC CMP W1, 0x1
	0x036BF0F0 MOV X19, X0
	0x036BF0F4 B.NE 0x36BF150
	0x036BF0F8 MOV X0, X19
	0x036BF0FC BL 0x3EB1AD0
	0x036BF100 MOV X19, X0
	0x036BF104 ADRP X0, 0xA72000
	0x036BF108 LDR X0, [X0 + 0xD8]
	0x036BF10C BL 0x1C16D08
	0x036BF110 LDR X8, [X19]
	0x036BF114 LDR X1, [X8]
	0x036BF118 BL 0x1C17270
	0x036BF11C TBZ X0, 0x0, 0x36BF128
	0x036BF120 LDP X30, X19, [X31], #0x10
	0x036BF124 B 0x3EB1AE0
	0x036BF128 MOVZ W0, 0x8
	0x036BF12C BL 0x3EB1AF0
	0x036BF130 LDR X8, [X19]
	0x036BF134 STR X8, [X0]
	0x036BF138 ADRP X1, 0x7F5000
	0x036BF13C ADD X1, X1, 0xE58
	0x036BF140 MOV X2, X31
	0x036BF144 BL 0x3EB1B00
	0x036BF148 MOV X19, X0
	0x036BF14C BL 0x3EB1AE0
	0x036BF150 MOV X0, X19
	0x036BF154 BL 0x1D2C690
	0x036BF158 BL 0x1990590
	0x036BF15C STR X30, [X31 - 0x20]!
	0x036BF160 STP X20, X19, [X31 + 0x10]
	0x036BF164 ADRP X20, 0xD21000
	0x036BF168 ADRP X19, 0xA3D000
	0x036BF16C LDRB W8, [X20 + 0x9CB]
	0x036BF170 LDR X19, [X19 + 0x788]
	0x036BF174 TBNZ X8, 0x0, 0x36BF18C
	0x036BF178 ADRP X0, 0xA3D000
	0x036BF17C LDR X0, [X0 + 0x788]
	0x036BF180 BL 0x1C16CF4
	0x036BF184 MOVZ W8, 0x1
	0x036BF188 STRB W8, [X20 + 0x9CB]
	0x036BF18C LDR X0, [X19]
	0x036BF190 LDR W8, [X0 + 0xE0]
	0x036BF194 CBNZ W8, 0x36BF19C
	0x036BF198 BL 0x1C16DFC
	0x036BF19C BL 0x36BED44
	0x036BF1A0 LDR X8, [X19]
	0x036BF1A4 LDR X8, [X8 + 0xB8]
	0x036BF1A8 LDRB W19, [X8 + 0x38]
	0x036BF1AC BL 0x1C16D44
	0x036BF1B0 MOV W0, W19
	0x036BF1B4 LDP X20, X19, [X31 + 0x10]
	0x036BF1B8 LDR X30, [X31], #0x20
	0x036BF1BC RET
	0x036BF1C0 STR X30, [X31 - 0x20]!
	0x036BF1C4 STP X20, X19, [X31 + 0x10]
	0x036BF1C8 ADRP X20, 0xD21000
	0x036BF1CC ADRP X19, 0xA3D000
	0x036BF1D0 LDRB W8, [X20 + 0x9CC]
	0x036BF1D4 LDR X19, [X19 + 0x788]
	0x036BF1D8 TBNZ X8, 0x0, 0x36BF1F0
	0x036BF1DC ADRP X0, 0xA3D000
	0x036BF1E0 LDR X0, [X0 + 0x788]
	0x036BF1E4 BL 0x1C16CF4
	0x036BF1E8 MOVZ W8, 0x1
	0x036BF1EC STRB W8, [X20 + 0x9CC]
	0x036BF1F0 LDR X0, [X19]
	0x036BF1F4 LDR W8, [X0 + 0xE0]
	0x036BF1F8 CBNZ W8, 0x36BF200
	0x036BF1FC BL 0x1C16DFC
	0x036BF200 BL 0x36BED44
	0x036BF204 LDR X8, [X19]
	0x036BF208 LDR X8, [X8 + 0xB8]
	0x036BF20C LDRB W19, [X8 + 0x3A]
	0x036BF210 BL 0x1C16D44
	0x036BF214 MOV W0, W19
	0x036BF218 LDP X20, X19, [X31 + 0x10]
	0x036BF21C LDR X30, [X31], #0x20
	0x036BF220 RET
	0x036BF224 STR X30, [X31 - 0x10]!
	0x036BF228 LDR X8, [X0 + 0x30]
	0x036BF22C CBZ X8, 0x36BF23C
	0x036BF230 LDR X0, [X8 + 0x10]
	0x036BF234 LDR X30, [X31], #0x10
	0x036BF238 RET
	0x036BF23C BL 0x1C16F20
	0x036BF240 LDR W0, [X0 + 0x20]
	0x036BF244 RET
	0x036BF248 LDR W0, [X0 + 0x24]
	0x036BF24C RET
	0x036BF250 LDR W0, [X0 + 0x28]
	0x036BF254 RET
	0x036BF258 STR X30, [X31 - 0x20]!
	0x036BF25C STP X20, X19, [X31 + 0x10]
	0x036BF260 LDRB W8, [X0 + 0x51]
	0x036BF264 CBNZ W8, 0x36BF280
	0x036BF268 LDP X20, X19, [X31 + 0x10]
	0x036BF26C AND W3, W1, 0x1
	0x036BF270 MOVZ W1, 0xFFFF
	0x036BF274 MOVN W2, 0x4
	0x036BF278 LDR X30, [X31], #0x20
	0x036BF27C B 0x36BF2D0
	0x036BF280 ADRP X0, 0xA80000
	0x036BF284 LDR X0, [X0 + 0x918]
	0x036BF288 BL 0x1C16D08
	0x036BF28C MOV X1, X31
	0x036BF290 BL 0x320A1E4
	0x036BF294 MOV X19, X0
	0x036BF298 ADRP X0, 0xA34000
	0x036BF29C LDR X0, [X0 + 0x5B0]
	0x036BF2A0 BL 0x1C16D08
	0x036BF2A4 BL 0x1C16F10
	0x036BF2A8 MOV X1, X19
	0x036BF2AC MOV X2, X31
	0x036BF2B0 MOV X20, X0
	0x036BF2B4 BL 0x337DF1C
	0x036BF2B8 ADRP X0, 0xA80000
	0x036BF2BC LDR X0, [X0 + 0x920]
	0x036BF2C0 BL 0x1C16D08
	0x036BF2C4 MOV X1, X0
	0x036BF2C8 MOV X0, X20
	0x036BF2CC BL 0x1C16DEC
	0x036BF2D0 STR X30, [X31 - 0x40]!
	0x036BF2D4 STP X24, X23, [X31 + 0x10]
	0x036BF2D8 STP X22, X21, [X31 + 0x20]
	0x036BF2DC STP X20, X19, [X31 + 0x30]
	0x036BF2E0 ADRP X24, 0xD21000
	0x036BF2E4 ADRP X23, 0xA3D000
	0x036BF2E8 LDRB W8, [X24 + 0xA09]
	0x036BF2EC LDR X23, [X23 + 0x788]
	0x036BF2F0 MOV W19, W3
	0x036BF2F4 MOV W20, W2
	0x036BF2F8 MOV W21, W1
	0x036BF2FC MOV X22, X0
	0x036BF300 TBNZ X8, 0x0, 0x36BF318
	0x036BF304 ADRP X0, 0xA3D000
	0x036BF308 LDR X0, [X0 + 0x788]
	0x036BF30C BL 0x1C16CF4
	0x036BF310 MOVZ W8, 0x1
	0x036BF314 STRB W8, [X24 + 0xA09]
	0x036BF318 MOV X0, X22
	0x036BF31C STR W31, [X31 + 0xC]
	0x036BF320 BL 0x36C19E0
	0x036BF324 LDR X0, [X23]
	0x036BF328 LDR X22, [X22 + 0x30]
	0x036BF32C LDR W8, [X0 + 0xE0]
	0x036BF330 CBNZ W8, 0x36BF338
	0x036BF334 BL 0x1C16DFC
	0x036BF338 ADD X6, X31, 0xC
	0x036BF33C MOV X0, X22
	0x036BF340 MOV W1, W21
	0x036BF344 MOV W2, W20
	0x036BF348 MOV X3, X31
	0x036BF34C MOV X4, X31
	0x036BF350 MOV W5, W19
	0x036BF354 BL 0x36C16A8
	0x036BF358 LDR W19, [X31 + 0xC]
	0x036BF35C CBNZ W19, 0x36BF374
	0x036BF360 LDP X20, X19, [X31 + 0x30]
	0x036BF364 LDP X22, X21, [X31 + 0x20]
	0x036BF368 LDP X24, X23, [X31 + 0x10]
	0x036BF36C LDR X30, [X31], #0x40
	0x036BF370 RET
	0x036BF374 MOVZ W8, 0x2726
	0x036BF378 CMP W19, W8
	0x036BF37C B.NE 0x36BF3B4
	0x036BF380 ADRP X0, 0xA3C000
	0x036BF384 LDR X0, [X0 + 0x578]
	0x036BF388 BL 0x1C16D08
	0x036BF38C BL 0x1C16F10
	0x036BF390 MOV X1, X31
	0x036BF394 MOV X19, X0
	0x036BF398 BL 0x3315C64
	0x036BF39C ADRP X0, 0xA80000
	0x036BF3A0 LDR X0, [X0 + 0x928]
	0x036BF3A4 BL 0x1C16D08
	0x036BF3A8 MOV X1, X0
	0x036BF3AC MOV X0, X19
	0x036BF3B0 BL 0x1C16DEC
	0x036BF3B4 ADRP X0, 0xA72000
	0x036BF3B8 LDR X0, [X0 + 0xD8]
	0x036BF3BC BL 0x1C16D08
	0x036BF3C0 BL 0x1C16F10
	0x036BF3C4 MOV W1, W19
	0x036BF3C8 MOV X2, X31
	0x036BF3CC MOV X20, X0
	0x036BF3D0 BL 0x36C6F04
	0x036BF3D4 ADRP X0, 0xA80000
	0x036BF3D8 LDR X0, [X0 + 0x928]
	0x036BF3DC BL 0x1C16D08
	0x036BF3E0 MOV X1, X0
	0x036BF3E4 MOV X0, X20
	0x036BF3E8 BL 0x1C16DEC
	0x036BF3EC ADDS W31, W1, 0x2
	0x036BF3F0 B.LE 0x36BF408
	0x036BF3F4 ADDS W31, W1, 0x1
	0x036BF3F8 CSEL W3, W31, W1, EQ
	0x036BF3FC MOVZ W1, 0xFFFF
	0x036BF400 MOVZ W2, 0x1006
	0x036BF404 B 0x36BF2D0
	0x036BF408 STP X30, X19, [X31 - 0x10]!
	0x036BF40C ADRP X0, 0xA3C000
	0x036BF410 LDR X0, [X0 + 0x760]
	0x036BF414 BL 0x1C16D08
	0x036BF418 BL 0x1C16F10
	0x036BF41C MOV X19, X0
	0x036BF420 ADRP X0, 0xA3E000
	0x036BF424 LDR X0, [X0 + 0xEC8]
	0x036BF428 BL 0x1C16D08
	0x036BF42C MOV X1, X0
	0x036BF430 MOV X0, X19
	0x036BF434 MOV X2, X31
	0x036BF438 BL 0x3316014
	0x036BF43C ADRP X0, 0xA80000
	0x036BF440 LDR X0, [X0 + 0x930]
	0x036BF444 BL 0x1C16D08
	0x036BF448 MOV X1, X0
	0x036BF44C MOV X0, X19
	0x036BF450 BL 0x1C16DEC
	0x036BF454 ADDS W31, W1, 0x2
	0x036BF458 B.LE 0x36BF470
	0x036BF45C ADDS W31, W1, 0x1
	0x036BF460 CSEL W3, W31, W1, EQ
	0x036BF464 MOVZ W1, 0xFFFF
	0x036BF468 MOVZ W2, 0x1005
	0x036BF46C B 0x36BF2D0
	0x036BF470 STP X30, X19, [X31 - 0x10]!
	0x036BF474 ADRP X0, 0xA3C000
	0x036BF478 LDR X0, [X0 + 0x760]
	0x036BF47C BL 0x1C16D08
	0x036BF480 BL 0x1C16F10
	0x036BF484 MOV X19, X0
	0x036BF488 ADRP X0, 0xA3E000
	0x036BF48C LDR X0, [X0 + 0xEC8]
	0x036BF490 BL 0x1C16D08
	0x036BF494 MOV X1, X0
	0x036BF498 MOV X0, X19
	0x036BF49C MOV X2, X31
	0x036BF4A0 BL 0x3316014
	0x036BF4A4 ADRP X0, 0xA80000
	0x036BF4A8 LDR X0, [X0 + 0x938]
	0x036BF4AC BL 0x1C16D08
	0x036BF4B0 MOV X1, X0
	0x036BF4B4 MOV X0, X19
	0x036BF4B8 BL 0x1C16DEC
	0x036BF4BC STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X23, 0xD22000
	013 Move [X31+16], X1
	014 Move [X31+24], X2
	015 Move X26, 0xA68000
	016 Move X25, 0xA68000
	017 Move W8, [X23+2500]
	018 Move X26, [X26+3344]
	019 Move X25, [X25+3336]
	020 Move W19, W3
	021 Move X21, X2
	022 Move X22, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {81}
	028 Move X0, 0xA60000
	029 Move X0, [X0+3408]
	030 Call 0x1C17CF4
	031 Move X0, 0xA60000
	032 Move X0, [X0+3432]
	033 Call 0x1C17CF4
	034 Move X0, 0xA68000
	035 Move X0, [X0+3312]
	036 Call 0x1C17CF4
	037 Move X0, 0xA68000
	038 Move X0, [X0+3320]
	039 Call 0x1C17CF4
	040 Move X0, 0xA68000
	041 Move X0, [X0+3328]
	042 Call 0x1C17CF4
	043 Move X0, 0xA5D000
	044 Move X0, [X0+1456]
	045 Call 0x1C17CF4
	046 Move X0, 0xA5D000
	047 Move X0, [X0+1824]
	048 Call 0x1C17CF4
	049 Move X0, 0xA68000
	050 Move X0, [X0+3336]
	051 Call 0x1C17CF4
	052 Move X0, 0xA60000
	053 Move X0, [X0+728]
	054 Call 0x1C17CF4
	055 Move X0, 0xA68000
	056 Move X0, [X0+3344]
	057 Call 0x1C17CF4
	058 Move X0, 0xA81000
	059 Move X0, [X0+2208]
	060 Call 0x1C17CF4
	061 Move X0, 0xA40000
	062 Move X0, [X0+3360]
	063 Call 0x1C17CF4
	064 Move X0, 0xA41000
	065 Move X0, [X0+120]
	066 Call 0x1C17CF4
	067 Move X0, 0xA81000
	068 Move X0, [X0+2216]
	069 Call 0x1C17CF4
	070 Move X0, 0xA81000
	071 Move X0, [X0+2224]
	072 Call 0x1C17CF4
	073 Move X0, 0xA81000
	074 Move X0, [X0+2232]
	075 Call 0x1C17CF4
	076 Move X0, 0xA81000
	077 Move X0, [X0+2096]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X23+2500], W8
	081 Move X24, 0xA41000
	082 Move X23, 0xA81000
	083 Move X24, [X24+120]
	084 Move X23, [X23+2208]
	085 Move X2, [X26]
	086 Move X27, 0xA81000
	087 Move X27, [X27+2096]
	088 Move X0, X22
	089 Move X1, X21
	090 Move [X31], X31
	091 Move [X31+8], X31
	092 Call 0x319ECE0, X0
	093 Move X3, [X25]
	094 Add X2, X31, 0
	095 Call 0x2219D10, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {156}
	100 Move X0, [X24]
	101 Move X22, 0xA5D000
	102 Move X22, [X22+1456]
	103 Call 0x1C17F10
	104 Move X2, [X23]
	105 Move X1, X20
	106 Move X21, X0
	107 Call TaskCompletionSource`1<Int32>..ctor, X0, X1
	108 Move X0, [X22]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, [X27]
	114 Move X22, [X31]
	115 Move W24, [X31+8]
	116 Move W23, [X31+12]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X27]
	122 Move X8, [X0+184]
	123 Move X25, [X8+32]
	124 Compare X25, 0
	125 JumpIfNotEqual {147}
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X27]
	131 Move X9, 0xA5D000
	132 Move X8, [X0+184]
	133 Move X9, [X9+1824]
	134 Move X26, [X8]
	135 Move X0, [X9]
	136 Call 0x1C17F10
	137 Move X8, 0xA81000
	138 Move X8, [X8+2224]
	139 Move X1, X26
	140 Move X3, X31
	141 Move X25, X0
	142 Move X2, [X8]
	143 Call AsyncCallback..ctor, X0, X1, X2
	144 Move X8, [X27]
	145 Move X8, [X8+184]
	146 Move [X8+32], X25
	147 Compare X20, 0
	148 JumpIfEqual {293}
	149 Move X0, X20
	150 Move X1, X22
	151 Move W2, W24
	152 Move W3, W23
	153 Move W4, W19
	154 Move X5, X25
	155 Move X6, X21
	156 Move X8, 0xA60000
	157 Move X8, [X8+3432]
	158 Move X21, 0xA60000
	159 Move X0, [X8]
	160 Move W8, [X0+224]
	161 Move X21, [X21+3408]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X21, [X21]
	166 Move X0, [X21+32]
	167 Move W8, [X0+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {173}
	172 Call 0x1C5D684
	173 Move X8, [X0+192]
	174 Move X0, [X8+8]
	175 Move W8, [X0+309]
	176 Move TEMP, X8
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {181}
	180 Call 0x1C5D684
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, [X21+32]
	186 Move W8, [X0+309]
	187 Move TEMP, X8
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {192}
	191 Call 0x1C5D684
	192 Move X8, [X0+192]
	193 Move X25, 0xA60000
	194 Move X0, [X8+8]
	195 Move W8, [X0+309]
	196 Move X25, [X25+728]
	197 Move TEMP, X8
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {202}
	201 Call 0x1C5D684
	202 Move X8, [X0+184]
	203 Move X1, [X25]
	204 Add X0, X31, 16
	205 Move X21, [X8]
	206 Call 0x319ECF0, X0
	207 Compare X21, 0
	208 JumpIfEqual {293}
	209 Move X8, [X21]
	210 Move W1, W0
	211 Move X0, X21
	212 Move X9, [X8+376]
	213 Move X2, [X8+384]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X8, [X24]
	216 Move X22, X0
	217 Move X0, X8
	218 Call 0x1C17F10
	219 Move X2, [X23]
	220 Move X1, X20
	221 Move X21, X0
	222 Call TaskCompletionSource`1<Int32>..ctor, X0, X1
	223 Move X1, [X25]
	224 Add X0, X31, 16
	225 Call 0x319ECF0, X0
	226 Move X8, [X27]
	227 Move W23, W0
	228 Move W9, [X8+224]
	229 Compare W9, 0
	230 JumpIfNotEqual {234}
	231 Move X0, X8
	232 Call 0x1C17DFC
	233 Move X8, [X27]
	234 Move X9, [X8+184]
	235 Move X24, [X9+40]
	236 Compare X24, 0
	237 JumpIfNotEqual {260}
	238 Move W9, [X8+224]
	239 Compare W9, 0
	240 JumpIfNotEqual {244}
	241 Move X0, X8
	242 Call 0x1C17DFC
	243 Move X8, [X27]
	244 Move X9, 0xA5D000
	245 Move X8, [X8+184]
	246 Move X9, [X9+1824]
	247 Move X25, [X8]
	248 Move X0, [X9]
	249 Call 0x1C17F10
	250 Move X8, 0xA81000
	251 Move X8, [X8+2232]
	252 Move X1, X25
	253 Move X3, X31
	254 Move X24, X0
	255 Move X2, [X8]
	256 Call AsyncCallback..ctor, X0, X1, X2
	257 Move X8, [X27]
	258 Move X8, [X8+184]
	259 Move [X8+40], X24
	260 Move X8, 0xA81000
	261 Move X1, [X31+16]
	262 Move X2, [X31+24]
	263 Move X8, [X8+2216]
	264 Move X0, X21
	265 Move X3, X22
	266 Move X4, [X8]
	267 Call 0x229F7A8, X0, X1, X2
	268 Compare X20, 0
	269 JumpIfEqual {293}
	270 Move X6, X0
	271 Move X0, X20
	272 Move X1, X22
	273 Move W2, W31
	274 Move W3, W23
	275 Move W4, W19
	276 Move X5, X24
	277 Call Socket.BeginReceive, X0, X1, X2, X3, X4, X5, X6
	278 Compare X21, 0
	279 JumpIfEqual {293}
	280 Move X0, [X21+16]
	281 Move X20, [X31+96]
	282 Move X19, [X31+104]
	283 Move X22, [X31+80]
	284 Move X21, [X31+88]
	285 Move X24, [X31+64]
	286 Move X23, [X31+72]
	287 Move X26, [X31+48]
	288 Move X25, [X31+56]
	289 Move X30, [X31+32]
	290 Move X27, [X31+40]
	291 Add X31, X31, 112
	292 Return X0
	293 Call 0x1C17F20

Method: System.Threading.Tasks.ValueTask SendAsyncForNetworkStream(System.ReadOnlyMemory`1<System.Byte> buffer, System.Net.Sockets.SocketFlags socketFlags, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036BE544 BL 0x1C16CF4
	0x036BE548 ADRP X0, 0xA5D000
	0x036BE54C LDR X0, [X0 + 0x720]
	0x036BE550 BL 0x1C16CF4
	0x036BE554 ADRP X0, 0xA68000
	0x036BE558 LDR X0, [X0 + 0xD08]
	0x036BE55C BL 0x1C16CF4
	0x036BE560 ADRP X0, 0xA69000
	0x036BE564 LDR X0, [X0 + 0x1F0]
	0x036BE568 BL 0x1C16CF4
	0x036BE56C ADRP X0, 0xA68000
	0x036BE570 LDR X0, [X0 + 0xD80]
	0x036BE574 BL 0x1C16CF4
	0x036BE578 ADRP X0, 0xA68000
	0x036BE57C LDR X0, [X0 + 0xD60]
	0x036BE580 BL 0x1C16CF4
	0x036BE584 ADRP X0, 0xA64000
	0x036BE588 LDR X0, [X0 + 0x2F8]
	0x036BE58C BL 0x1C16CF4
	0x036BE590 ADRP X0, 0xA81000
	0x036BE594 LDR X0, [X0 + 0x8A0]
	0x036BE598 BL 0x1C16CF4
	0x036BE59C ADRP X0, 0xA40000
	0x036BE5A0 LDR X0, [X0 + 0xD20]
	0x036BE5A4 BL 0x1C16CF4
	0x036BE5A8 ADRP X0, 0xA41000
	0x036BE5AC LDR X0, [X0 + 0x78]
	0x036BE5B0 BL 0x1C16CF4
	0x036BE5B4 ADRP X0, 0xA81000
	0x036BE5B8 LDR X0, [X0 + 0x8C0]
	0x036BE5BC BL 0x1C16CF4
	0x036BE5C0 ADRP X0, 0xA81000
	0x036BE5C4 LDR X0, [X0 + 0x8C8]
	0x036BE5C8 BL 0x1C16CF4
	0x036BE5CC ADRP X0, 0xA81000
	0x036BE5D0 LDR X0, [X0 + 0x8D0]
	0x036BE5D4 BL 0x1C16CF4
	0x036BE5D8 ADRP X0, 0xA81000
	0x036BE5DC LDR X0, [X0 + 0x830]
	0x036BE5E0 BL 0x1C16CF4
	0x036BE5E4 MOVZ W8, 0x1
	0x036BE5E8 STRB W8, [X23 + 0x9C6]
	0x036BE5EC ADRP X24, 0xA41000
	0x036BE5F0 ADRP X23, 0xA81000
	0x036BE5F4 ADRP X27, 0xA81000
	0x036BE5F8 LDR X24, [X24 + 0x78]
	0x036BE5FC LDR X23, [X23 + 0x8A0]
	0x036BE600 LDR X27, [X27 + 0x830]
	0x036BE604 LDR X3, [X25]
	0x036BE608 ADD X2, X31, 0x10
	0x036BE60C MOV X0, X22
	0x036BE610 MOV X1, X21
	0x036BE614 STP X31, X31, [X31 + 0x10]
	0x036BE618 STP X31, X31, [X31]
	0x036BE61C BL 0x2218D10
	0x036BE620 TBZ X0, 0x0, 0x36BE6F0
	0x036BE624 LDR X0, [X24]
	0x036BE628 ADRP X22, 0xA5D000
	0x036BE62C LDR X22, [X22 + 0x5B0]
	0x036BE630 BL 0x1C16F10
	0x036BE634 LDR X2, [X23]
	0x036BE638 MOV X1, X20
	0x036BE63C MOV X21, X0
	0x036BE640 BL 0x267A960
	0x036BE644 LDR X0, [X22]
	0x036BE648 LDR W8, [X0 + 0xE0]
	0x036BE64C CBNZ W8, 0x36BE654
	0x036BE650 BL 0x1C16DFC
	0x036BE654 LDR X0, [X27]
	0x036BE658 LDR X22, [X31 + 0x10]
	0x036BE65C LDP W24, W23, [X31 + 0x18]
	0x036BE660 LDR W8, [X0 + 0xE0]
	0x036BE664 CBNZ W8, 0x36BE670
	0x036BE668 BL 0x1C16DFC
	0x036BE66C LDR X0, [X27]
	0x036BE670 LDR X8, [X0 + 0xB8]
	0x036BE674 LDR X25, [X8 + 0x40]
	0x036BE678 CBNZ X25, 0x36BE6CC
	0x036BE67C LDR W8, [X0 + 0xE0]
	0x036BE680 CBNZ W8, 0x36BE68C
	0x036BE684 BL 0x1C16DFC
	0x036BE688 LDR X0, [X27]
	0x036BE68C ADRP X9, 0xA5D000
	0x036BE690 LDR X8, [X0 + 0xB8]
	0x036BE694 LDR X9, [X9 + 0x720]
	0x036BE698 LDR X26, [X8]
	0x036BE69C LDR X0, [X9]
	0x036BE6A0 BL 0x1C16F10
	0x036BE6A4 ADRP X8, 0xA81000
	0x036BE6A8 LDR X8, [X8 + 0x8C8]
	0x036BE6AC MOV X1, X26
	0x036BE6B0 MOV X3, X31
	0x036BE6B4 MOV X25, X0
	0x036BE6B8 LDR X2, [X8]
	0x036BE6BC BL 0x3316570
	0x036BE6C0 LDR X8, [X27]
	0x036BE6C4 LDR X8, [X8 + 0xB8]
	0x036BE6C8 STR X25, [X8 + 0x40]
	0x036BE6CC CBZ X20, 0x36BE8F4
	0x036BE6D0 MOV X0, X20
	0x036BE6D4 MOV X1, X22
	0x036BE6D8 MOV W2, W24
	0x036BE6DC MOV W3, W23
	0x036BE6E0 MOV W4, W19
	0x036BE6E4 MOV X5, X25
	0x036BE6E8 MOV X6, X21
	0x036BE6EC B 0x36BE8CC
	0x036BE6F0 ADRP X8, 0xA60000
	0x036BE6F4 LDR X8, [X8 + 0xD68]
	0x036BE6F8 ADRP X21, 0xA60000
	0x036BE6FC LDR X0, [X8]
	0x036BE700 LDR W8, [X0 + 0xE0]
	0x036BE704 LDR X21, [X21 + 0xD50]
	0x036BE708 CBNZ W8, 0x36BE710
	0x036BE70C BL 0x1C16DFC
	0x036BE710 LDR X21, [X21]
	0x036BE714 LDR X0, [X21 + 0x20]
	0x036BE718 LDRB W8, [X0 + 0x135]
	0x036BE71C TBNZ X8, 0x0, 0x36BE724
	0x036BE720 BL 0x1C5C684
	0x036BE724 LDR X8, [X0 + 0xC0]
	0x036BE728 LDR X0, [X8 + 0x8]
	0x036BE72C LDRB W8, [X0 + 0x135]
	0x036BE730 TBNZ X8, 0x0, 0x36BE738
	0x036BE734 BL 0x1C5C684
	0x036BE738 LDR W8, [X0 + 0xE0]
	0x036BE73C CBNZ W8, 0x36BE744
	0x036BE740 BL 0x1C16DFC
	0x036BE744 LDR X0, [X21 + 0x20]
	0x036BE748 LDRB W8, [X0 + 0x135]
	0x036BE74C TBNZ X8, 0x0, 0x36BE754
	0x036BE750 BL 0x1C5C684
	0x036BE754 LDR X8, [X0 + 0xC0]
	0x036BE758 ADRP X25, 0xA69000
	0x036BE75C LDR X0, [X8 + 0x8]
	0x036BE760 LDRB W8, [X0 + 0x135]
	0x036BE764 LDR X25, [X25 + 0x1F0]
	0x036BE768 TBNZ X8, 0x0, 0x36BE770
	0x036BE76C BL 0x1C5C684
	0x036BE770 LDR X8, [X0 + 0xB8]
	0x036BE774 LDR X1, [X25]
	0x036BE778 ADD X0, X31, 0x20
	0x036BE77C LDR X21, [X8]
	0x036BE780 BL 0x25BCEEC
	0x036BE784 CBZ X21, 0x36BE8F4
	0x036BE788 LDR X8, [X21]
	0x036BE78C MOV W1, W0
	0x036BE790 MOV X0, X21
	0x036BE794 LDP X9, X2, [X8 + 0x178]
	0x036BE798 BLR X9
	0x036BE79C ADRP X8, 0xA68000
	0x036BE7A0 LDR X8, [X8 + 0xD80]
	0x036BE7A4 MOV X22, X0
	0x036BE7A8 ADD X0, X31, 0x20
	0x036BE7AC LDR X1, [X8]
	0x036BE7B0 BL 0x25D7918
	0x036BE7B4 ADRP X8, 0xA64000
	0x036BE7B8 LDR X8, [X8 + 0x2F8]
	0x036BE7BC STP X0, X1, [X31]
	0x036BE7C0 MOV X0, X22
	0x036BE7C4 LDR X8, [X8]
	0x036BE7C8 MOV X1, X8
	0x036BE7CC BL 0x25FB4C0
	0x036BE7D0 ADRP X8, 0xA68000
	0x036BE7D4 LDR X8, [X8 + 0xD60]
	0x036BE7D8 MOV X2, X0
	0x036BE7DC MOV X4, X1
	0x036BE7E0 ADD X0, X31, 0x0
	0x036BE7E4 LDR X3, [X8]
	0x036BE7E8 MOV X1, X2
	0x036BE7EC MOV X2, X4
	0x036BE7F0 BL 0x25BE5D8
	0x036BE7F4 LDR X0, [X24]
	0x036BE7F8 BL 0x1C16F10
	0x036BE7FC LDR X2, [X23]
	0x036BE800 MOV X1, X20
	0x036BE804 MOV X21, X0
	0x036BE808 BL 0x267A960
	0x036BE80C LDR X1, [X25]
	0x036BE810 ADD X0, X31, 0x20
	0x036BE814 BL 0x25BCEEC
	0x036BE818 LDR X8, [X27]
	0x036BE81C MOV W23, W0
	0x036BE820 LDR W9, [X8 + 0xE0]
	0x036BE824 CBNZ W9, 0x36BE834
	0x036BE828 MOV X0, X8
	0x036BE82C BL 0x1C16DFC
	0x036BE830 LDR X8, [X27]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0xD23000
	013 Move [X31+8], X4
	014 Move X24, 0xA3E000
	015 Move W8, [X23+2501]
	016 Move X24, [X24+2008]
	017 Move W19, W3
	018 Move X21, X2
	019 Move X22, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {57}
	025 Move X0, 0xA3E000
	026 Move X0, [X0+2008]
	027 Call 0x1C17CF4
	028 Move X0, 0xA82000
	029 Move X0, [X0+2048]
	030 Call 0x1C17CF4
	031 Move X0, 0xA82000
	032 Move X0, [X0+2056]
	033 Call 0x1C17CF4
	034 Move X0, 0xA82000
	035 Move X0, [X0+2064]
	036 Call 0x1C17CF4
	037 Move X0, 0xA82000
	038 Move X0, [X0+2072]
	039 Call 0x1C17CF4
	040 Move X0, 0xA82000
	041 Move X0, [X0+2120]
	042 Call 0x1C17CF4
	043 Move X0, 0xA37000
	044 Move X0, [X0+1976]
	045 Call 0x1C17CF4
	046 Move X0, 0xA82000
	047 Move X0, [X0+2128]
	048 Call 0x1C17CF4
	049 Move X0, 0xA82000
	050 Move X0, [X0+2136]
	051 Call 0x1C17CF4
	052 Move X0, 0xA82000
	053 Move X0, [X0+2096]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+2501], W8
	057 Move X0, [X24]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add X0, X31, 8
	063 Move X1, X31
	064 Call CancellationToken.get_IsCancellationRequested, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {80}
	069 Move X8, 0xA37000
	070 Move X8, [X8+1976]
	071 Move X19, [X31+8]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X19
	078 Move X1, X31
	079 Call Task.FromCanceled, X0
	080 Move X26, 0xA82000
	081 Move X26, [X26+2096]
	082 Add X23, X20, 16
	083 Move X0, [X26]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {89}
	087 Call 0x1C17DFC
	088 Move X0, [X26]
	089 Move X8, [X0+184]
	090 Move X27, 0xA82000
	091 Move X24, [X8+48]
	092 Move X27, [X27+2072]
	093 Compare X24, 0
	094 JumpIfNotEqual {116}
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X26]
	100 Move X9, 0xA82000
	101 Move X8, [X0+184]
	102 Move X9, [X9+2048]
	103 Move X25, [X8]
	104 Move X0, [X9]
	105 Call 0x1C17F10
	106 Move X8, 0xA82000
	107 Move X8, [X8+2128]
	108 Move X1, X25
	109 Move X3, X31
	110 Move X24, X0
	111 Move X2, [X8]
	112 Call Func`1<Object>..ctor, X0, X1, X2
	113 Move X8, [X26]
	114 Move X8, [X8+184]
	115 Move [X8+48], X24
	116 Move X2, [X27]
	117 Move X0, X23
	118 Move X1, X24
	119 Call 0x2213A40, X0, X1
	120 Compare X0, 0
	121 JumpIfEqual {216}
	122 Move X8, X0
	123 Move X0, [X26]
	124 Add X23, X8, 48
	125 Move W9, [X0+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {130}
	128 Call 0x1C17DFC
	129 Move X0, [X26]
	130 Move X8, [X0+184]
	131 Move X24, [X8+56]
	132 Compare X24, 0
	133 JumpIfNotEqual {155}
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {139}
	137 Call 0x1C17DFC
	138 Move X0, [X26]
	139 Move X9, 0xA82000
	140 Move X8, [X0+184]
	141 Move X9, [X9+2056]
	142 Move X25, [X8]
	143 Move X0, [X9]
	144 Call 0x1C17F10
	145 Move X8, 0xA82000
	146 Move X8, [X8+2136]
	147 Move X1, X25
	148 Move X3, X31
	149 Move X24, X0
	150 Move X2, [X8]
	151 Call Func`1<Object>..ctor, X0, X1, X2
	152 Move X8, [X26]
	153 Move X8, [X8+184]
	154 Move [X8+56], X24
	155 Move X8, 0xA82000
	156 Move X8, [X8+2064]
	157 Move X0, X23
	158 Move X1, X24
	159 Move X2, [X8]
	160 Call 0x2213A40, X0, X1
	161 Compare X0, 0
	162 JumpIfEqual {216}
	163 Move X1, X31
	164 Move X23, X0
	165 Call AwaitableSocketAsyncEventArgs.Reserve, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {191}
	170 Move X8, 0xA82000
	171 Move X8, [X8+2120]
	172 Move X0, X22
	173 Move X1, X21
	174 Move X2, [X8]
	175 Call 0x2219AE4, X0
	176 Move X2, X0
	177 Move X3, X1
	178 Move X0, X23
	179 Move X1, X2
	180 Move X2, X3
	181 Move X3, X31
	182 Call SocketAsyncEventArgs.SetBuffer, X0, X1
	183 Move W8, 1
	184 Move X0, X23
	185 Move X1, X20
	186 Move X2, X31
	187 Move [X23+68], W19
	188 Move [X23+154], W8
	189 Call AwaitableSocketAsyncEventArgs.SendAsyncForNetworkStream, X0, X1
	190 Move X19, X0
	191 Move X0, X20
	192 Move X1, X22
	193 Move X2, X21
	194 Move W3, W19
	195 Call Socket.SendAsyncApm, X0, X1, X2
	196 Move X19, X0
	197 Compare X0, 0
	198 JumpIfNotEqual {202}
	199 Move W0, 38
	200 Move X1, X31
	201 Call ThrowHelper.ThrowArgumentNullException, X0
	202 Move W1, 0x10000
	203 Move X0, X19
	204 Move X20, [X31+80]
	205 Move X19, [X31+88]
	206 Move X22, [X31+64]
	207 Move X21, [X31+72]
	208 Move X24, [X31+48]
	209 Move X23, [X31+56]
	210 Move X26, [X31+32]
	211 Move X25, [X31+40]
	212 Move X30, [X31+16]
	213 Move X27, [X31+24]
	214 Add X31, X31, 96
	215 Return X0
	216 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int32> SendAsyncApm(System.ReadOnlyMemory`1<System.Byte> buffer, System.Net.Sockets.SocketFlags socketFlags)

Disassembly:
	0x036BF4C0 STP X20, X19, [X31 + 0x10]
	0x036BF4C4 LDR W8, [X0 + 0x20]
	0x036BF4C8 CMP W8, 0x2
	0x036BF4CC B.NE 0x36BF4E8
	0x036BF4D0 LDP X20, X19, [X31 + 0x10]
	0x036BF4D4 AND W3, W1, 0x1
	0x036BF4D8 MOVZ W2, 0xE
	0x036BF4DC MOV W1, W31
	0x036BF4E0 LDR X30, [X31], #0x20
	0x036BF4E4 B 0x36BF2D0
	0x036BF4E8 ADRP X0, 0xA80000
	0x036BF4EC LDR X0, [X0 + 0x898]
	0x036BF4F0 BL 0x1C16D08
	0x036BF4F4 MOV X1, X31
	0x036BF4F8 BL 0x320A1E4
	0x036BF4FC MOV X19, X0
	0x036BF500 ADRP X0, 0xA34000
	0x036BF504 LDR X0, [X0 + 0xB40]
	0x036BF508 BL 0x1C16D08
	0x036BF50C BL 0x1C16F10
	0x036BF510 MOV X1, X19
	0x036BF514 MOV X2, X31
	0x036BF518 MOV X20, X0
	0x036BF51C BL 0x3379A44
	0x036BF520 ADRP X0, 0xA80000
	0x036BF524 LDR X0, [X0 + 0x940]
	0x036BF528 BL 0x1C16D08
	0x036BF52C MOV X1, X0
	0x036BF530 MOV X0, X20
	0x036BF534 BL 0x1C16DEC
	0x036BF538 STR X30, [X31 - 0x20]!
	0x036BF53C STP X20, X19, [X31 + 0x10]
	0x036BF540 ADRP X20, 0xD21000
	0x036BF544 LDRB W8, [X20 + 0x9CD]
	0x036BF548 MOV X19, X0
	0x036BF54C TBNZ X8, 0x0, 0x36BF564
	0x036BF550 ADRP X0, 0xA34000
	0x036BF554 LDR X0, [X0 + 0x758]
	0x036BF558 BL 0x1C16CF4
	0x036BF55C MOVZ W8, 0x1
	0x036BF560 STRB W8, [X20 + 0x9CD]
	0x036BF564 LDR W8, [X19 + 0x20]
	0x036BF568 CMP W8, 0x17
	0x036BF56C B.NE 0x36BF5C0
	0x036BF570 MOVZ W1, 0x29
	0x036BF574 MOVZ W2, 0x1B
	0x036BF578 MOV X0, X19
	0x036BF57C BL 0x36BA7A0
	0x036BF580 CBZ X0, 0x36BF610
	0x036BF584 ADRP X8, 0xA34000
	0x036BF588 LDR X8, [X8 + 0x758]
	0x036BF58C LDR X9, [X0]
	0x036BF590 LDR X1, [X8]
	0x036BF594 LDR X8, [X9 + 0x40]
	0x036BF598 LDR X9, [X1 + 0x40]
	0x036BF59C CMP X8, X9
	0x036BF5A0 B.NE 0x36BF614
	0x036BF5A4 BL 0x1C16E08
	0x036BF5A8 LDR W8, [X0]
	0x036BF5AC LDP X20, X19, [X31 + 0x10]
	0x036BF5B0 CMP W8, 0x0
	0x036BF5B4 CSET W0, EQ
	0x036BF5B8 LDR X30, [X31], #0x20
	0x036BF5BC RET
	0x036BF5C0 ADRP X0, 0xA80000
	0x036BF5C4 LDR X0, [X0 + 0x898]
	0x036BF5C8 BL 0x1C16D08
	0x036BF5CC MOV X1, X31
	0x036BF5D0 BL 0x320A1E4
	0x036BF5D4 MOV X19, X0
	0x036BF5D8 ADRP X0, 0xA34000
	0x036BF5DC LDR X0, [X0 + 0xB40]
	0x036BF5E0 BL 0x1C16D08
	0x036BF5E4 BL 0x1C16F10
	0x036BF5E8 MOV X1, X19
	0x036BF5EC MOV X2, X31
	0x036BF5F0 MOV X20, X0
	0x036BF5F4 BL 0x3379A44
	0x036BF5F8 ADRP X0, 0xA80000
	0x036BF5FC LDR X0, [X0 + 0x948]
	0x036BF600 BL 0x1C16D08
	0x036BF604 MOV X1, X0
	0x036BF608 MOV X0, X20
	0x036BF60C BL 0x1C16DEC
	0x036BF610 BL 0x1C16F20
	0x036BF614 BL 0x1C171E0
	0x036BF618 STR X30, [X31 - 0x20]!
	0x036BF61C STP X20, X19, [X31 + 0x10]
	0x036BF620 LDR W8, [X0 + 0x20]
	0x036BF624 CMP W8, 0x17
	0x036BF628 B.NE 0x36BF648
	0x036BF62C LDP X20, X19, [X31 + 0x10]
	0x036BF630 ORN W8, W31, W1, 0x0
	0x036BF634 AND W3, W8, 0x1
	0x036BF638 MOVZ W1, 0x29
	0x036BF63C MOVZ W2, 0x1B
	0x036BF640 LDR X30, [X31], #0x20
	0x036BF644 B 0x36BF2D0
	0x036BF648 ADRP X0, 0xA80000
	0x036BF64C LDR X0, [X0 + 0x898]
	0x036BF650 BL 0x1C16D08
	0x036BF654 MOV X1, X31
	0x036BF658 BL 0x320A1E4
	0x036BF65C MOV X19, X0
	0x036BF660 ADRP X0, 0xA34000
	0x036BF664 LDR X0, [X0 + 0xB40]
	0x036BF668 BL 0x1C16D08
	0x036BF66C BL 0x1C16F10
	0x036BF670 MOV X1, X19
	0x036BF674 MOV X2, X31
	0x036BF678 MOV X20, X0
	0x036BF67C BL 0x3379A44
	0x036BF680 ADRP X0, 0xA80000
	0x036BF684 LDR X0, [X0 + 0x950]
	0x036BF688 BL 0x1C16D08
	0x036BF68C MOV X1, X0
	0x036BF690 MOV X0, X20
	0x036BF694 BL 0x1C16DEC
	0x036BF698 LDR W8, [X0 + 0x20]
	0x036BF69C CMP W8, 0x17
	0x036BF6A0 B.NE 0x36BF6A8
	0x036BF6A4 B 0x36BF538
	0x036BF6A8 MOV W0, W31
	0x036BF6AC RET
	0x036BF6B0 LDR W9, [X0 + 0x20]
	0x036BF6B4 CMP W9, W1
	0x036BF6B8 B.NE 0x36BF6C4
	0x036BF6BC MOVZ W0, 0x1
	0x036BF6C0 RET
	0x036BF6C4 MOV X8, X0
	0x036BF6C8 CMP W1, 0x2
	0x036BF6CC MOV W0, W31
	0x036BF6D0 B.NE 0x36BF6E4
	0x036BF6D4 CMP W9, 0x17
	0x036BF6D8 B.NE 0x36BF6E4
	0x036BF6DC MOV X0, X8
	0x036BF6E0 B 0x36BF538
	0x036BF6E4 RET
	0x036BF6E8 STR X30, [X31 - 0x60]!
	0x036BF6EC STP X28, X27, [X31 + 0x10]
	0x036BF6F0 STP X26, X25, [X31 + 0x20]
	0x036BF6F4 STP X24, X23, [X31 + 0x30]
	0x036BF6F8 STP X22, X21, [X31 + 0x40]
	0x036BF6FC STP X20, X19, [X31 + 0x50]
	0x036BF700 ADRP X22, 0xD21000
	0x036BF704 ADRP X25, 0xA3D000
	0x036BF708 LDRB W8, [X22 + 0x9CE]
	0x036BF70C LDR X25, [X25 + 0x788]
	0x036BF710 MOV W20, W2
	0x036BF714 MOV X21, X1
	0x036BF718 MOV X19, X0
	0x036BF71C TBNZ X8, 0x0, 0x36BF74C
	0x036BF720 ADRP X0, 0xA41000
	0x036BF724 LDR X0, [X0 + 0xBB8]
	0x036BF728 BL 0x1C16CF4
	0x036BF72C ADRP X0, 0xA3D000
	0x036BF730 LDR X0, [X0 + 0x788]
	0x036BF734 BL 0x1C16CF4
	0x036BF738 ADRP X0, 0xA7E000
	0x036BF73C LDR X0, [X0 + 0xE28]
	0x036BF740 BL 0x1C16CF4
	0x036BF744 MOVZ W8, 0x1
	0x036BF748 STRB W8, [X22 + 0x9CE]
	0x036BF74C LDR X0, [X25]
	0x036BF750 LDR W8, [X0 + 0xE0]
	0x036BF754 CBNZ W8, 0x36BF75C
	0x036BF758 BL 0x1C16DFC
	0x036BF75C BL 0x1C16D44
	0x036BF760 LDR W8, [X19 + 0x54]
	0x036BF764 CMP W8, 0x1
	0x036BF768 B.EQ 0x36BF8DC
	0x036BF76C CBZ X21, 0x36BF92C
	0x036BF770 LDR X8, [X21 + 0x18]
	0x036BF774 CBZ X8, 0x36BF960
	0x036BF778 ADRP X8, 0xA7E000
	0x036BF77C LDR X8, [X8 + 0xE28]
	0x036BF780 LDR X0, [X8]
	0x036BF784 LDR W8, [X0 + 0xE0]
	0x036BF788 CBNZ W8, 0x36BF790
	0x036BF78C BL 0x1C16DFC
	0x036BF790 MOV W0, W20
	0x036BF794 MOV X1, X31
	0x036BF798 BL 0x367E800
	0x036BF79C TBZ X0, 0x0, 0x36BF96C
	0x036BF7A0 LDR W8, [X19 + 0x20]
	0x036BF7A4 CMP W8, 0x2
	0x036BF7A8 B.EQ 0x36BF7B4
	0x036BF7AC CMP W8, 0x17
	0x036BF7B0 B.NE 0x36BFA0C
	0x036BF7B4 LDR W8, [X21 + 0x18]
	0x036BF7B8 CMP W8, 0x1
	0x036BF7BC B.LT 0x36BF8A8
	0x036BF7C0 ADRP X27, 0xA41000
	0x036BF7C4 ADRP X22, 0xA34000
	0x036BF7C8 LDR X27, [X27 + 0xBB8]
	0x036BF7CC LDR X22, [X22 + 0x7D0]
	0x036BF7D0 MOV X26, X31
	0x036BF7D4 MOV X23, X31
	0x036BF7D8 ADD X28, X21, 0x20
	0x036BF7DC CMP W26, W8
	0x036BF7E0 B.CS 0x36BFA04
	0x036BF7E4 LDR X24, [X28, X26, LSL #3]
	0x036BF7E8 CBZ X24, 0x36BFA08
	0x036BF7EC MOV X0, X24
	0x036BF7F0 MOV X1, X31
	0x036BF7F4 BL 0x366D604
	0x036BF7F8 LDR W8, [X19 + 0x20]
	0x036BF7FC CMP W8, W0
	0x036BF800 B.EQ 0x36BF820
	0x036BF804 CMP W0, 0x2
	0x036BF808 B.NE 0x36BF894
	0x036BF80C CMP W8, 0x17
	0x036BF810 B.NE 0x36BF894
	0x036BF814 MOV X0, X19
	0x036BF818 BL 0x36BF538
	0x036BF81C TBZ X0, 0x0, 0x36BF894
	0x036BF820 LDR X0, [X27]
	0x036BF824 BL 0x1C16F10
	0x036BF828 MOV X23, X0
	0x036BF82C MOV X1, X24
	0x036BF830 MOV W2, W20
	0x036BF834 MOV X3, X31
	0x036BF838 BL 0x366E898
	0x036BF83C MOV X0, X19
	0x036BF840 MOV X1, X23
	0x036BF844 BL 0x36BFAC4
	0x036BF848 B 0x36BF8A8
	0x036BF84C CMP W1, 0x1
	0x036BF850 MOV X23, X0
	0x036BF854 B.NE 0x36BFAA8
	0x036BF858 MOV X0, X23
	0x036BF85C BL 0x3EB1AD0
	0x036BF860 MOV X23, X0
	0x036BF864 MOV X0, X22
	0x036BF868 BL 0x1C16D08
	0x036BF86C LDR X8, [X23]
	0x036BF870 LDR X1, [X8]
	0x036BF874 BL 0x1C17270
	0x036BF878 TBZ X0, 0x0, 0x36BFA74
	0x036BF87C LDR X23, [X23]
	0x036BF880 BL 0x3EB1AE0
	0x036BF884 MOV X0, X23
	0x036BF888 MOV X1, X31
	0x036BF88C BL 0x367E11C
	0x036BF890 TBNZ X0, 0x0, 0x36BFA94
	0x036BF894 LDR W8, [X21 + 0x18]
	0x036BF898 ADD X26, X26, 0x1
	0x036BF89C CMP W26, W8
	0x036BF8A0 B.LT 0x36BF7DC
	0x036BF8A4 CBNZ X23, 0x36BFA5C
	0x036BF8A8 LDRB W8, [X19 + 0x52]
	0x036BF8AC CBZ W8, 0x36BF9B4
	0x036BF8B0 LDR X0, [X25]
	0x036BF8B4 LDR W8, [X0 + 0xE0]
	0x036BF8B8 CBNZ W8, 0x36BF8C0
	0x036BF8BC BL 0x1C16DFC
	0x036BF8C0 LDP X20, X19, [X31 + 0x50]
	0x036BF8C4 LDP X22, X21, [X31 + 0x40]
	0x036BF8C8 LDP X24, X23, [X31 + 0x30]
	0x036BF8CC LDP X26, X25, [X31 + 0x20]
	0x036BF8D0 LDP X28, X27, [X31 + 0x10]
	0x036BF8D4 LDR X30, [X31], #0x60
	0x036BF8D8 B 0x1C16D44
	0x036BF8DC MOV X0, X19
	0x036BF8E0 MOV X1, X31
	0x036BF8E4 BL 0x33BE520
	0x036BF8E8 MOV X19, X0
	0x036BF8EC BL 0x19903C0
	0x036BF8F0 LDR X8, [X19]
	0x036BF8F4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X23, 0xD22000
	013 Move [X31+32], X1
	014 Move [X31+40], X2
	015 Move X25, 0xA68000
	016 Move W8, [X23+2502]
	017 Move X25, [X25+3336]
	018 Move W19, W3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {85}
	026 Move X0, 0xA60000
	027 Move X0, [X0+3408]
	028 Call 0x1C17CF4
	029 Move X0, 0xA60000
	030 Move X0, [X0+3432]
	031 Call 0x1C17CF4
	032 Move X0, 0xA68000
	033 Move X0, [X0+3312]
	034 Call 0x1C17CF4
	035 Move X0, 0xA68000
	036 Move X0, [X0+3320]
	037 Call 0x1C17CF4
	038 Move X0, 0xA68000
	039 Move X0, [X0+3328]
	040 Call 0x1C17CF4
	041 Move X0, 0xA5D000
	042 Move X0, [X0+1456]
	043 Call 0x1C17CF4
	044 Move X0, 0xA5D000
	045 Move X0, [X0+1824]
	046 Call 0x1C17CF4
	047 Move X0, 0xA68000
	048 Move X0, [X0+3336]
	049 Call 0x1C17CF4
	050 Move X0, 0xA69000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xA68000
	054 Move X0, [X0+3456]
	055 Call 0x1C17CF4
	056 Move X0, 0xA68000
	057 Move X0, [X0+3424]
	058 Call 0x1C17CF4
	059 Move X0, 0xA64000
	060 Move X0, [X0+760]
	061 Call 0x1C17CF4
	062 Move X0, 0xA81000
	063 Move X0, [X0+2208]
	064 Call 0x1C17CF4
	065 Move X0, 0xA40000
	066 Move X0, [X0+3360]
	067 Call 0x1C17CF4
	068 Move X0, 0xA41000
	069 Move X0, [X0+120]
	070 Call 0x1C17CF4
	071 Move X0, 0xA81000
	072 Move X0, [X0+2240]
	073 Call 0x1C17CF4
	074 Move X0, 0xA81000
	075 Move X0, [X0+2248]
	076 Call 0x1C17CF4
	077 Move X0, 0xA81000
	078 Move X0, [X0+2256]
	079 Call 0x1C17CF4
	080 Move X0, 0xA81000
	081 Move X0, [X0+2096]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X23+2502], W8
	085 Move X24, 0xA41000
	086 Move X23, 0xA81000
	087 Move X27, 0xA81000
	088 Move X24, [X24+120]
	089 Move X23, [X23+2208]
	090 Move X27, [X27+2096]
	091 Move X3, [X25]
	092 Add X2, X31, 16
	093 Move X0, X22
	094 Move X1, X21
	095 Move [X31+16], X31
	096 Move [X31+24], X31
	097 Move [X31], X31
	098 Move [X31+8], X31
	099 Call 0x2219D10, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {160}
	104 Move X0, [X24]
	105 Move X22, 0xA5D000
	106 Move X22, [X22+1456]
	107 Call 0x1C17F10
	108 Move X2, [X23]
	109 Move X1, X20
	110 Move X21, X0
	111 Call TaskCompletionSource`1<Int32>..ctor, X0, X1
	112 Move X0, [X22]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, [X27]
	118 Move X22, [X31+16]
	119 Move W24, [X31+24]
	120 Move W23, [X31+28]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X27]
	126 Move X8, [X0+184]
	127 Move X25, [X8+64]
	128 Compare X25, 0
	129 JumpIfNotEqual {151}
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X27]
	135 Move X9, 0xA5D000
	136 Move X8, [X0+184]
	137 Move X9, [X9+1824]
	138 Move X26, [X8]
	139 Move X0, [X9]
	140 Call 0x1C17F10
	141 Move X8, 0xA81000
	142 Move X8, [X8+2248]
	143 Move X1, X26
	144 Move X3, X31
	145 Move X25, X0
	146 Move X2, [X8]
	147 Call AsyncCallback..ctor, X0, X1, X2
	148 Move X8, [X27]
	149 Move X8, [X8+184]
	150 Move [X8+64], X25
	151 Compare X20, 0
	152 JumpIfEqual {316}
	153 Move X0, X20
	154 Move X1, X22
	155 Move W2, W24
	156 Move W3, W23
	157 Move W4, W19
	158 Move X5, X25
	159 Move X6, X21
	160 Move X8, 0xA60000
	161 Move X8, [X8+3432]
	162 Move X21, 0xA60000
	163 Move X0, [X8]
	164 Move W8, [X0+224]
	165 Move X21, [X21+3408]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X21, [X21]
	170 Move X0, [X21+32]
	171 Move W8, [X0+309]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {177}
	176 Call 0x1C5D684
	177 Move X8, [X0+192]
	178 Move X0, [X8+8]
	179 Move W8, [X0+309]
	180 Move TEMP, X8
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {185}
	184 Call 0x1C5D684
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, [X21+32]
	190 Move W8, [X0+309]
	191 Move TEMP, X8
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfEqual {196}
	195 Call 0x1C5D684
	196 Move X8, [X0+192]
	197 Move X25, 0xA69000
	198 Move X0, [X8+8]
	199 Move W8, [X0+309]
	200 Move X25, [X25+496]
	201 Move TEMP, X8
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {206}
	205 Call 0x1C5D684
	206 Move X8, [X0+184]
	207 Move X1, [X25]
	208 Add X0, X31, 32
	209 Move X21, [X8]
	210 Call 0x25BDEEC, X0
	211 Compare X21, 0
	212 JumpIfEqual {316}
	213 Move X8, [X21]
	214 Move W1, W0
	215 Move X0, X21
	216 Move X9, [X8+376]
	217 Move X2, [X8+384]
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Move X8, 0xA68000
	220 Move X8, [X8+3456]
	221 Move X22, X0
	222 Add X0, X31, 32
	223 Move X1, [X8]
	224 Call 0x25D8918
	225 Move X8, 0xA64000
	226 Move X8, [X8+760]
	227 Move [X31], X0
	228 Move [X31+8], X1
	229 Move X0, X22
	230 Move X8, [X8]
	231 Move X1, X8
	232 Call 0x25FC4C0, X0
	233 Move X8, 0xA68000
	234 Move X8, [X8+3424]
	235 Move X2, X0
	236 Move X4, X1
	237 Add X0, X31, 0
	238 Move X3, [X8]
	239 Move X1, X2
	240 Move X2, X4
	241 Call 0x25BF5D8, X0, X1
	242 Move X0, [X24]
	243 Call 0x1C17F10
	244 Move X2, [X23]
	245 Move X1, X20
	246 Move X21, X0
	247 Call TaskCompletionSource`1<Int32>..ctor, X0, X1
	248 Move X1, [X25]
	249 Add X0, X31, 32
	250 Call 0x25BDEEC, X0
	251 Move X8, [X27]
	252 Move W23, W0
	253 Move W9, [X8+224]
	254 Compare W9, 0
	255 JumpIfNotEqual {259}
	256 Move X0, X8
	257 Call 0x1C17DFC
	258 Move X8, [X27]
	259 Move X9, [X8+184]
	260 Move X24, [X9+72]
	261 Compare X24, 0
	262 JumpIfNotEqual {285}
	263 Move W9, [X8+224]
	264 Compare W9, 0
	265 JumpIfNotEqual {269}
	266 Move X0, X8
	267 Call 0x1C17DFC
	268 Move X8, [X27]
	269 Move X9, 0xA5D000
	270 Move X8, [X8+184]
	271 Move X9, [X9+1824]
	272 Move X25, [X8]
	273 Move X0, [X9]
	274 Call 0x1C17F10
	275 Move X8, 0xA81000
	276 Move X8, [X8+2256]
	277 Move X1, X25
	278 Move X3, X31
	279 Move X24, X0
	280 Move X2, [X8]
	281 Call AsyncCallback..ctor, X0, X1, X2
	282 Move X8, [X27]
	283 Move X8, [X8+184]
	284 Move [X8+72], X24
	285 Move X8, 0xA81000
	286 Move X8, [X8+2240]
	287 Move X0, X21
	288 Move X1, X22
	289 Move X2, [X8]
	290 Call 0x229F5F8, X0, X1
	291 Compare X20, 0
	292 JumpIfEqual {316}
	293 Move X6, X0
	294 Move X0, X20
	295 Move X1, X22
	296 Move W2, W31
	297 Move W3, W23
	298 Move W4, W19
	299 Move X5, X24
	300 Call Socket.BeginSend, X0, X1, X2, X3, X4, X5, X6
	301 Compare X21, 0
	302 JumpIfEqual {316}
	303 Move X0, [X21+16]
	304 Move X20, [X31+112]
	305 Move X19, [X31+120]
	306 Move X22, [X31+96]
	307 Move X21, [X31+104]
	308 Move X24, [X31+80]
	309 Move X23, [X31+88]
	310 Move X26, [X31+64]
	311 Move X25, [X31+72]
	312 Move X30, [X31+48]
	313 Move X27, [X31+56]
	314 Add X31, X31, 128
	315 Return X0
	316 Call 0x1C17F20

Method: System.Void CompleteAccept(System.Net.Sockets.Socket s, System.Net.Sockets.Socket/TaskSocketAsyncEventArgs`1<System.Net.Sockets.Socket> saea)

Disassembly:
	0x036BF8F8 LDR X9, [X8 + 0x2E8]
	0x036BF8FC LDR X1, [X8 + 0x2F0]
	0x036BF900 BLR X9
	0x036BF904 MOV X19, X0
	0x036BF908 ADRP X0, 0xA5D000
	0x036BF90C LDR X0, [X0 + 0x4B8]
	0x036BF910 BL 0x1C16D08
	0x036BF914 BL 0x1C16F10
	0x036BF918 MOV X1, X19
	0x036BF91C MOV X2, X31
	0x036BF920 MOV X20, X0
	0x036BF924 BL 0x338C448
	0x036BF928 B 0x36BFA44
	0x036BF92C ADRP X0, 0xA39000
	0x036BF930 LDR X0, [X0 + 0x528]
	0x036BF934 BL 0x1C16D08
	0x036BF938 BL 0x1C16F10
	0x036BF93C MOV X19, X0
	0x036BF940 ADRP X0, 0xA80000
	0x036BF944 LDR X0, [X0 + 0x958]
	0x036BF948 BL 0x1C16D08
	0x036BF94C MOV X1, X0
	0x036BF950 MOV X0, X19
	0x036BF954 MOV X2, X31
	0x036BF958 BL 0x330E100
	0x036BF95C B 0x36BF99C
	0x036BF960 ADRP X0, 0xA80000
	0x036BF964 LDR X0, [X0 + 0x960]
	0x036BF968 B 0x36BF9BC
	0x036BF96C ADRP X0, 0xA3C000
	0x036BF970 LDR X0, [X0 + 0x760]
	0x036BF974 BL 0x1C16D08
	0x036BF978 BL 0x1C16F10
	0x036BF97C MOV X19, X0
	0x036BF980 ADRP X0, 0xA7E000
	0x036BF984 LDR X0, [X0 + 0x7C8]
	0x036BF988 BL 0x1C16D08
	0x036BF98C MOV X1, X0
	0x036BF990 MOV X0, X19
	0x036BF994 MOV X2, X31
	0x036BF998 BL 0x3316014
	0x036BF99C ADRP X0, 0xA80000
	0x036BF9A0 LDR X0, [X0 + 0x968]
	0x036BF9A4 BL 0x1C16D08
	0x036BF9A8 MOV X1, X0
	0x036BF9AC MOV X0, X19
	0x036BF9B0 BL 0x1C16DEC
	0x036BF9B4 ADRP X0, 0xA80000
	0x036BF9B8 LDR X0, [X0 + 0x970]
	0x036BF9BC BL 0x1C16D08
	0x036BF9C0 MOV X1, X31
	0x036BF9C4 BL 0x320A1E4
	0x036BF9C8 MOV X19, X0
	0x036BF9CC ADRP X0, 0xA3C000
	0x036BF9D0 LDR X0, [X0 + 0x578]
	0x036BF9D4 BL 0x1C16D08
	0x036BF9D8 BL 0x1C16F10
	0x036BF9DC MOV X20, X0
	0x036BF9E0 ADRP X0, 0xA80000
	0x036BF9E4 LDR X0, [X0 + 0x958]
	0x036BF9E8 BL 0x1C16D08
	0x036BF9EC MOV X2, X0
	0x036BF9F0 MOV X0, X20
	0x036BF9F4 MOV X1, X19
	0x036BF9F8 MOV X3, X31
	0x036BF9FC BL 0x330E16C
	0x036BFA00 B 0x36BFA44
	0x036BFA04 BL 0x1C16F28
	0x036BFA08 BL 0x1C16F20
	0x036BFA0C ADRP X0, 0xA80000
	0x036BFA10 LDR X0, [X0 + 0x898]
	0x036BFA14 BL 0x1C16D08
	0x036BFA18 MOV X1, X31
	0x036BFA1C BL 0x320A1E4
	0x036BFA20 MOV X19, X0
	0x036BFA24 ADRP X0, 0xA34000
	0x036BFA28 LDR X0, [X0 + 0xB40]
	0x036BFA2C BL 0x1C16D08
	0x036BFA30 BL 0x1C16F10
	0x036BFA34 MOV X1, X19
	0x036BFA38 MOV X2, X31
	0x036BFA3C MOV X20, X0
	0x036BFA40 BL 0x3379A44
	0x036BFA44 ADRP X0, 0xA80000
	0x036BFA48 LDR X0, [X0 + 0x968]
	0x036BFA4C BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0xD22000
	008 Move W8, [X21+2503]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xA81000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move X0, 0xA81000
	019 Move X0, [X0+2272]
	020 Call 0x1C17CF4
	021 Move X0, 0xA81000
	022 Move X0, [X0+2280]
	023 Call 0x1C17CF4
	024 Move X0, 0xA3E000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move X0, 0xA81000
	028 Move X0, [X0+2288]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2503], W8
	032 Move [X31+44], W31
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Compare X19, 0
	037 JumpIfEqual {100}
	038 Move X8, 0xA81000
	039 Move X8, [X8+2288]
	040 Move W22, [X19+64]
	041 Move X21, [X19+48]
	042 Add X1, X31, 44
	043 Move X2, [X8]
	044 Add X8, X31, 8
	045 Move X0, X19
	046 Call TaskSocketAsyncEventArgs`1<Object>.GetCompletionResponsibility, X0, X1
	047 Move W8, [X31+44]
	048 Compare W8, 0
	049 JumpIfEqual {55}
	050 Compare X20, 0
	051 JumpIfEqual {100}
	052 Move X0, X20
	053 Move X1, X19
	054 Call Socket.ReturnSocketAsyncEventArgs, X0, X1
	055 Move X19, 0xA81000
	056 Move X19, [X19+2280]
	057 Compare W22, 0
	058 JumpIfEqual {82}
	059 Move X8, 0xA3E000
	060 Move X8, [X8+1928]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X20, 0xA81000
	067 Move X20, [X20+2264]
	068 Move W0, W22
	069 Move W1, W31
	070 Call Socket.GetException, X0, X1
	071 Move X8, [X19]
	072 Move X19, X0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X2, [X20]
	079 Add X0, X31, 8
	080 Move X1, X19
	081 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	082 Move X0, [X19]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X8, 0xA81000
	088 Move X8, [X8+2272]
	089 Add X0, X31, 8
	090 Move X1, X21
	091 Move X2, [X8]
	092 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	093 Move X20, [X31+64]
	094 Move X19, [X31+72]
	095 Move X22, [X31+48]
	096 Move X21, [X31+56]
	097 Move X30, [X31+32]
	098 Add X31, X31, 80
	099 Return 
	100 Call 0x1C17F20

Method: System.Void CompleteSendReceive(System.Net.Sockets.Socket s, System.Net.Sockets.Socket/Int32TaskSocketAsyncEventArgs saea, System.Boolean isReceive)

Disassembly:
	0x036BFB78 LDR X21, [X21 + 0x788]
	0x036BFB7C BLR X9
	0x036BFB80 LDR X8, [X21]
	0x036BFB84 STR W31, [X31 + 0xC]
	0x036BFB88 LDR X21, [X19 + 0x30]
	0x036BFB8C LDRB W25, [X19 + 0x50]
	0x036BFB90 LDR W9, [X8 + 0xE0]
	0x036BFB94 MOV X22, X0
	0x036BFB98 CBNZ W9, 0x36BFBA4
	0x036BFB9C MOV X0, X8
	0x036BFBA0 BL 0x1C16DFC
	0x036BFBA4 CMP W25, 0x0
	0x036BFBA8 CSET W3, NE
	0x036BFBAC ADD X2, X31, 0xC
	0x036BFBB0 MOV X0, X21
	0x036BFBB4 MOV X1, X22
	0x036BFBB8 BL 0x36C3028
	0x036BFBBC LDR W8, [X31 + 0xC]
	0x036BFBC0 MOVZ W9, 0x2733
	0x036BFBC4 CMP W8, W9
	0x036BFBC8 B.EQ 0x36BFBD0
	0x036BFBCC CBNZ W8, 0x36BFD5C
	0x036BFBD0 STR X20, [X19 + 0x38]
	0x036BFBD4 CBNZ W8, 0x36BFD5C
	0x036BFBD8 LDR W8, [X19 + 0x24]
	0x036BFBDC MOVZ W21, 0x1
	0x036BFBE0 MOV X9, X19
	0x036BFBE4 CMP W8, 0x2
	0x036BFBE8 CSEL X22, X19, X31, EQ
	0x036BFBEC MOVZ W8, 0x1
	0x036BFBF0 B.NE 0x36BFD38
	0x036BFBF4 TBZ X24, 0x0, 0x36BFC04
	0x036BFBF8 MOVZ W8, 0x1
	0x036BFBFC MOV X22, X19
	0x036BFC00 B 0x36BFD30
	0x036BFC04 ADRP X24, 0xA41000
	0x036BFC08 LDR X24, [X24 + 0x968]
	0x036BFC0C LDR X20, [X23 + 0x10]
	0x036BFC10 LDR X0, [X24]
	0x036BFC14 LDR W8, [X0 + 0xE0]
	0x036BFC18 CBNZ W8, 0x36BFC20
	0x036BFC1C BL 0x1C16DFC
	0x036BFC20 CBZ X20, 0x36BFD98
	0x036BFC24 LDR X8, [X24]
	0x036BFC28 LDR X9, [X20]
	0x036BFC2C MOV X0, X20
	0x036BFC30 LDR X8, [X8 + 0xB8]
	0x036BFC34 LDR X1, [X8]
	0x036BFC38 LDP X8, X2, [X9 + 0x138]
	0x036BFC3C BLR X8
	0x036BFC40 TBZ X0, 0x0, 0x36BFCF8
	0x036BFC44 MOV W8, W31
	0x036BFC48 B 0x36BFD30
	0x036BFC4C LDR W8, [X19 + 0x24]
	0x036BFC50 CMP W8, 0x2
	0x036BFC54 B.EQ 0x36BFCD0
	0x036BFC58 ADRP X22, 0xA41000
	0x036BFC5C LDR X22, [X22 + 0x968]
	0x036BFC60 LDR X21, [X20 + 0x10]
	0x036BFC64 LDR X0, [X22]
	0x036BFC68 LDR W8, [X0 + 0xE0]
	0x036BFC6C CBNZ W8, 0x36BFC74
	0x036BFC70 BL 0x1C16DFC
	0x036BFC74 CBZ X21, 0x36BFD98
	0x036BFC78 LDR X8, [X22]
	0x036BFC7C LDR X9, [X21]
	0x036BFC80 MOV X0, X21
	0x036BFC84 LDR X8, [X8 + 0xB8]
	0x036BFC88 LDR X1, [X8]
	0x036BFC8C LDP X8, X2, [X9 + 0x138]
	0x036BFC90 BLR X8
	0x036BFC94 TBNZ X0, 0x0, 0x36BFE04
	0x036BFC98 LDR X0, [X22]
	0x036BFC9C LDR X21, [X20 + 0x10]
	0x036BFCA0 LDR W8, [X0 + 0xE0]
	0x036BFCA4 CBNZ W8, 0x36BFCAC
	0x036BFCA8 BL 0x1C16DFC
	0x036BFCAC CBZ X21, 0x36BFD98
	0x036BFCB0 LDR X8, [X22]
	0x036BFCB4 LDR X9, [X21]
	0x036BFCB8 MOV X0, X21
	0x036BFCBC LDR X8, [X8 + 0xB8]
	0x036BFCC0 LDR X1, [X8 + 0x20]
	0x036BFCC4 LDP X8, X2, [X9 + 0x138]
	0x036BFCC8 BLR X8
	0x036BFCCC TBNZ X0, 0x0, 0x36BFE04
	0x036BFCD0 LDRB W8, [X19 + 0x19]
	0x036BFCD4 CBNZ W8, 0x36BFDD0
	0x036BFCD8 MOV X0, X19
	0x036BFCDC MOV X1, X20
	0x036BFCE0 BL 0x36C2B88
	0x036BFCE4 CBZ X0, 0x36BFD98
	0x036BFCE8 MOV W24, W31
	0x036BFCEC MOV X23, X20
	0x036BFCF0 MOV X20, X0
	0x036BFCF4 B 0x36BFB68

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X22, 0xD22000
	010 Move W8, [X22+2504]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xA64000
	019 Move X0, [X0+3648]
	020 Call 0x1C17CF4
	021 Move X0, 0xA64000
	022 Move X0, [X0+3632]
	023 Call 0x1C17CF4
	024 Move X0, 0xA64000
	025 Move X0, [X0+3488]
	026 Call 0x1C17CF4
	027 Move X0, 0xA3E000
	028 Move X0, [X0+1928]
	029 Call 0x1C17CF4
	030 Move X0, 0xA81000
	031 Move X0, [X0+2304]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2504], W8
	035 Move [X31+76], W31
	036 Move [X31+32], X31
	037 Move [X31+40], X31
	038 Move [X31+48], X31
	039 Compare X19, 0
	040 JumpIfEqual {112}
	041 Move X8, 0xA81000
	042 Move X8, [X8+2304]
	043 Move W22, [X19+64]
	044 Move W23, [X19+56]
	045 Move W24, [X19+153]
	046 Move X2, [X8]
	047 Add X8, X31, 8
	048 Add X1, X31, 76
	049 Move X0, X19
	050 Call 0x2696E34, X0, X1
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X8, [X31+24]
	053 Move W9, [X31+76]
	054 Move [X31+2], V0
	055 Move [X31+48], X8
	056 Compare W9, 0
	057 JumpIfEqual {64}
	058 Compare X21, 0
	059 JumpIfEqual {112}
	060 And W2, W20, 1
	061 Move X0, X21
	062 Move X1, X19
	063 Call Socket.ReturnSocketAsyncEventArgs, X0, X1, X2
	064 Move X19, 0xA64000
	065 Move X19, [X19+3488]
	066 Compare W22, 0
	067 JumpIfEqual {92}
	068 Move X8, 0xA3E000
	069 Move X8, [X8+1928]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X20, 0xA64000
	076 Move X20, [X20+3648]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move W0, W22
	080 Call Socket.GetException, X0, X1
	081 Move X8, [X19]
	082 Move X19, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X2, [X20]
	089 Add X0, X31, 32
	090 Move X1, X19
	091 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	092 Move X0, [X19]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X8, 0xA64000
	098 Move X8, [X8+3632]
	099 Add X0, X31, 32
	100 Move W1, W23
	101 Move X2, [X8]
	102 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	103 Move X20, [X31+112]
	104 Move X19, [X31+120]
	105 Move X22, [X31+96]
	106 Move X21, [X31+104]
	107 Move X24, [X31+80]
	108 Move X23, [X31+88]
	109 Move X30, [X31+64]
	110 Add X31, X31, 128
	111 Return 
	112 Call 0x1C17F20

Method: System.Exception GetException(System.Net.Sockets.SocketError error, System.Boolean wrapExceptionsInIOExceptions = False)

Disassembly:
	0x036BFA90 BL 0x3EB1B00
	0x036BFA94 MOV X0, X23
	0x036BFA98 BL 0x1C16F18
	0x036BFA9C B 0x36BFAA0
	0x036BFAA0 MOV X23, X0
	0x036BFAA4 BL 0x3EB1AE0
	0x036BFAA8 MOV X0, X23
	0x036BFAAC BL 0x1D2C690
	0x036BFAB0 BL 0x1990590
	0x036BFAB4 LDR W8, [X0 + 0x54]
	0x036BFAB8 CMP W8, 0x1
	0x036BFABC CSET W0, EQ
	0x036BFAC0 RET
	0x036BFAC4 SUB X31, X31, 0x50
	0x036BFAC8 STP X30, X25, [X31 + 0x10]
	0x036BFACC STP X24, X23, [X31 + 0x20]
	0x036BFAD0 STP X22, X21, [X31 + 0x30]
	0x036BFAD4 STP X20, X19, [X31 + 0x40]
	0x036BFAD8 ADRP X21, 0xD21000
	0x036BFADC LDRB W8, [X21 + 0x9E8]
	0x036BFAE0 MOV X20, X1
	0x036BFAE4 MOV X19, X0
	0x036BFAE8 TBNZ X8, 0x0, 0x36BFB18
	0x036BFAEC ADRP X0, 0xA41000
	0x036BFAF0 LDR X0, [X0 + 0x968]
	0x036BFAF4 BL 0x1C16CF4
	0x036BFAF8 ADRP X0, 0xA41000
	0x036BFAFC LDR X0, [X0 + 0xBB8]
	0x036BFB00 BL 0x1C16CF4
	0x036BFB04 ADRP X0, 0xA3D000
	0x036BFB08 LDR X0, [X0 + 0x788]
	0x036BFB0C BL 0x1C16CF4
	0x036BFB10 MOVZ W8, 0x1
	0x036BFB14 STRB W8, [X21 + 0x9E8]
	0x036BFB18 MOV X0, X19
	0x036BFB1C BL 0x36C19E0
	0x036BFB20 CBZ X20, 0x36BFD9C
	0x036BFB24 ADRP X8, 0xA41000
	0x036BFB28 LDR X8, [X8 + 0xBB8]
	0x036BFB2C LDR X9, [X20]
	0x036BFB30 LDR X8, [X8]
	0x036BFB34 LDRB W11, [X9 + 0x130]
	0x036BFB38 LDRB W10, [X8 + 0x130]
	0x036BFB3C CMP W11, W10
	0x036BFB40 B.CC 0x36BFB58
	0x036BFB44 LDR X9, [X9 + 0xC8]
	0x036BFB48 ADD X9, X9, X10, 0x3, LSL
	0x036BFB4C LDUR X9, [X9 - 0x8]
	0x036BFB50 CMP X9, X8
	0x036BFB54 B.EQ 0x36BFC4C
	0x036BFB58 LDRB W8, [X19 + 0x19]
	0x036BFB5C CBNZ W8, 0x36BFDD0
	0x036BFB60 MOV X23, X31
	0x036BFB64 MOVZ W24, 0x1
	0x036BFB68 LDR X8, [X20]
	0x036BFB6C ADRP X21, 0xA3D000
	0x036BFB70 MOV X0, X20
	0x036BFB74 LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD22000
	007 Move X22, 0xA73000
	008 Move W8, [X19+2505]
	009 Move X22, [X22+216]
	010 Move W20, W1
	011 Move W21, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xA63000
	017 Move X0, [X0+1960]
	018 Call 0x1C17CF4
	019 Move X0, 0xA73000
	020 Move X0, [X0+216]
	021 Call 0x1C17CF4
	022 Move X0, 0xA81000
	023 Move X0, [X0+2296]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+2505], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move W1, W21
	030 Move X2, X31
	031 Move X19, X0
	032 Call SocketException..ctor, X0, X1
	033 Move TEMP, X20
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {63}
	037 Compare X19, 0
	038 JumpIfEqual {70}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X9, [X8+392]
	042 Move X1, [X8+400]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, 0xA81000
	045 Move X8, [X8+2296]
	046 Move X1, X0
	047 Move X2, X31
	048 Move X8, [X8]
	049 Move X0, X8
	050 Call SR.Format, X0, X1
	051 Move X8, 0xA63000
	052 Move X8, [X8+1960]
	053 Move X20, X0
	054 Move X8, [X8]
	055 Move X0, X8
	056 Call 0x1C17F10
	057 Move X1, X20
	058 Move X2, X19
	059 Move X3, X31
	060 Move X21, X0
	061 Call IOException..ctor, X0, X1, X2
	062 Move X19, X21
	063 Move X0, X19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C17F20

Method: System.Void ReturnSocketAsyncEventArgs(System.Net.Sockets.Socket/Int32TaskSocketAsyncEventArgs saea, System.Boolean isReceive)

Disassembly:
	0x036BFCF8 LDR X0, [X24]
	0x036BFCFC LDR X20, [X23 + 0x10]
	0x036BFD00 LDR W8, [X0 + 0xE0]
	0x036BFD04 CBNZ W8, 0x36BFD0C
	0x036BFD08 BL 0x1C16DFC
	0x036BFD0C CBZ X20, 0x36BFD98
	0x036BFD10 LDR X8, [X24]
	0x036BFD14 LDR X9, [X20]
	0x036BFD18 MOV X0, X20
	0x036BFD1C LDR X8, [X8 + 0xB8]
	0x036BFD20 LDR X1, [X8 + 0x20]
	0x036BFD24 LDP X8, X2, [X9 + 0x138]
	0x036BFD28 BLR X8
	0x036BFD2C EOR W8, W0, 0x1
	0x036BFD30 MOV X9, X22
	0x036BFD34 CBZ X22, 0x36BFD98
	0x036BFD38 AND W8, W8, 0x1
	0x036BFD3C STRB W8, [X9 + 0x52]
	0x036BFD40 STRB W21, [X19 + 0x51]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {26}
	007 Move [X1+128], X31
	008 Move [X1+136], X31
	009 NotImplemented "Instruction STRH not yet implemented."
	010 Move [X1+144], X31
	011 Move X20, [X0+16]
	012 Move X19, X1
	013 Compare X20, 0
	014 JumpIfEqual {26}
	015 And W31, W2, 1
	016 Move W8, 32
	017 Move W9, 24
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 Call 0x1C17D44
	020 Move [X20], X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return 
	026 Call 0x1C17F20

Method: System.Void ReturnSocketAsyncEventArgs(System.Net.Sockets.Socket/TaskSocketAsyncEventArgs`1<System.Net.Sockets.Socket> saea)

Disassembly:
	0x036BFA50 MOV X1, X0
	0x036BFA54 MOV X0, X20
	0x036BFA58 BL 0x1C16DEC
	0x036BFA5C ADRP X0, 0xA80000
	0x036BFA60 LDR X0, [X0 + 0x968]
	0x036BFA64 BL 0x1C16D08
	0x036BFA68 MOV X1, X0
	0x036BFA6C MOV X0, X23
	0x036BFA70 BL 0x1C16DEC
	0x036BFA74 MOVZ W0, 0x8
	0x036BFA78 BL 0x3EB1AF0
	0x036BFA7C LDR X8, [X23]
	0x036BFA80 STR X8, [X0]
	0x036BFA84 ADRP X1, 0x7F5000
	0x036BFA88 ADD X1, X1, 0xE58
	0x036BFA8C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {21}
	006 Move [X1+48], X31
	007 Move [X1+136], X31
	008 Move [X1+144], X31
	009 Move [X1+128], X31
	010 Move [X1+152], W31
	011 Move X20, [X0+16]
	012 Move X19, X1
	013 Compare X20, 0
	014 JumpIfEqual {21}
	015 Call 0x1C17D44
	016 Move [X20+16], X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 
	021 Call 0x1C17F20

Method: System.Void .ctor(System.Net.Sockets.AddressFamily addressFamily, System.Net.Sockets.SocketType socketType, System.Net.Sockets.ProtocolType protocolType)

Disassembly:
	0x036AD13C BL 0x3EB1B00
	0x036AD140 B 0x36AD21C
	0x036AD144 B 0x36AD17C
	0x036AD148 MOV X20, X1
	0x036AD14C MOV X21, X0
	0x036AD150 B 0x36AD160
	0x036AD154 MOV X20, X1
	0x036AD158 MOV X21, X0
	0x036AD15C BL 0x3EB1AE0
	0x036AD160 MOV X0, X21
	0x036AD164 B 0x36AD180
	0x036AD168 B 0x36AD17C
	0x036AD16C B 0x36AD17C
	0x036AD170 B 0x36AD17C
	0x036AD174 B 0x36AD17C
	0x036AD178 B 0x36AD17C
	0x036AD17C MOV X20, X1
	0x036AD180 CMP W20, 0x1
	0x036AD184 B.NE 0x36AD1F4
	0x036AD188 BL 0x3EB1AD0
	0x036AD18C MOV X20, X0
	0x036AD190 ADRP X0, 0xA46000
	0x036AD194 LDR X0, [X0 + 0x7D0]
	0x036AD198 BL 0x1C16D08
	0x036AD19C LDR X8, [X20]
	0x036AD1A0 LDR X1, [X8]
	0x036AD1A4 BL 0x1C17270
	0x036AD1A8 TBZ X0, 0x0, 0x36AD1FC
	0x036AD1AC LDR X20, [X20]
	0x036AD1B0 BL 0x3EB1AE0
	0x036AD1B4 MOVN W8, 0x1
	0x036AD1B8 STR W8, [X19], #0x8
	0x036AD1BC ADRP X0, 0xA91000
	0x036AD1C0 LDR X0, [X0 + 0xF58]
	0x036AD1C4 BL 0x1C16D08
	0x036AD1C8 LDR W8, [X0 + 0xE0]
	0x036AD1CC CBNZ W8, 0x36AD1D4
	0x036AD1D0 BL 0x1C16DFC
	0x036AD1D4 ADRP X0, 0xA92000
	0x036AD1D8 LDR X0, [X0 + 0x80]
	0x036AD1DC BL 0x1C16D08
	0x036AD1E0 MOV X2, X0
	0x036AD1E4 MOV X0, X19
	0x036AD1E8 MOV X1, X20
	0x036AD1EC BL 0x26324C8
	0x036AD1F0 B 0x36AD02C
	0x036AD1F4 MOV X19, X0
	0x036AD1F8 B 0x36AD224
	0x036AD1FC MOVZ W0, 0x8
	0x036AD200 BL 0x3EB1AF0
	0x036AD204 LDR X8, [X20]
	0x036AD208 STR X8, [X0]
	0x036AD20C ADRP X1, 0x807000
	0x036AD210 ADD X1, X1, 0xE58
	0x036AD214 MOV X2, X31
	0x036AD218 BL 0x3EB1B00
	0x036AD21C MOV X19, X0
	0x036AD220 BL 0x3EB1AE0
	0x036AD224 MOV X0, X19
	0x036AD228 BL 0x1D2C690
	0x036AD22C BL 0x1990590
	0x036AD230 STR X30, [X31 - 0x20]!
	0x036AD234 STP X20, X19, [X31 + 0x10]
	0x036AD238 ADRP X20, 0xD33000
	0x036AD23C LDRB W8, [X20 + 0x953]
	0x036AD240 MOV X19, X0
	0x036AD244 STR X1, [X31 + 0x8]
	0x036AD248 TBNZ X8, 0x0, 0x36AD260
	0x036AD24C ADRP X0, 0xA4E000
	0x036AD250 LDR X0, [X0 + 0x7D8]
	0x036AD254 BL 0x1C16CF4
	0x036AD258 MOVZ W8, 0x1
	0x036AD25C STRB W8, [X20 + 0x953]
	0x036AD260 MOV X0, X19
	0x036AD264 BL 0x36ACC30
	0x036AD268 TBNZ X0, 0x0, 0x36AD29C
	0x036AD26C LDR X8, [X19 + 0x78]
	0x036AD270 CBNZ X8, 0x36AD29C
	0x036AD274 ADRP X8, 0xA4E000
	0x036AD278 LDR X8, [X8 + 0x7D8]
	0x036AD27C LDR X0, [X8]
	0x036AD280 LDR W8, [X0 + 0xE0]
	0x036AD284 CBNZ W8, 0x36AD28C
	0x036AD288 BL 0x1C16DFC
	0x036AD28C ADD X0, X31, 0x8
	0x036AD290 MOV X1, X31
	0x036AD294 BL 0x33DD2B0
	0x036AD298 TBZ X0, 0x0, 0x36AD2AC
	0x036AD29C ADD X2, X19, 0x78
	0x036AD2A0 MOVZ W1, 0x1
	0x036AD2A4 MOV X0, X19
	0x036AD2A8 BL 0x36B053C
	0x036AD2AC LDP X20, X19, [X31 + 0x10]
	0x036AD2B0 LDR X30, [X31], #0x20
	0x036AD2B4 RET
	0x036AD2B8 STR X30, [X31 - 0x40]!
	0x036AD2BC STP X24, X23, [X31 + 0x10]
	0x036AD2C0 STP X22, X21, [X31 + 0x20]
	0x036AD2C4 STP X20, X19, [X31 + 0x30]
	0x036AD2C8 ADRP X24, 0xD33000
	0x036AD2CC LDRB W8, [X24 + 0x967]
	0x036AD2D0 MOV X20, X4
	0x036AD2D4 MOV X22, X3
	0x036AD2D8 MOV X21, X2
	0x036AD2DC MOV X23, X1
	0x036AD2E0 MOV X19, X0
	0x036AD2E4 TBNZ X8, 0x0, 0x36AD308
	0x036AD2E8 ADRP X0, 0xA8D000
	0x036AD2EC LDR X0, [X0 + 0x168]
	0x036AD2F0 BL 0x1C16CF4
	0x036AD2F4 ADRP X0, 0xA4E000
	0x036AD2F8 LDR X0, [X0 + 0x558]
	0x036AD2FC BL 0x1C16CF4
	0x036AD300 MOVZ W8, 0x1
	0x036AD304 STRB W8, [X24 + 0x967]
	0x036AD308 MOV X0, X19
	0x036AD30C MOV X1, X23
	0x036AD310 MOV X2, X21
	0x036AD314 BL 0x36AD49C
	0x036AD318 STR X22, [X19 + 0x90]
	0x036AD31C CBZ X21, 0x36AD41C
	0x036AD320 LDR X0, [X21 + 0x10]
	0x036AD324 CBZ X0, 0x36AD41C
	0x036AD328 MOV X1, X31
	0x036AD32C BL 0x369C230
	0x036AD330 AND W8, W0, 0x1
	0x036AD334 STRB W8, [X19 + 0x61]
	0x036AD338 LDR X8, [X21 + 0x10]
	0x036AD33C CBZ X8, 0x36AD41C
	0x036AD340 LDRB W8, [X8 + 0xC8]
	0x036AD344 CBZ W8, 0x36AD354
	0x036AD348 LDR X8, [X21 + 0x28]
	0x036AD34C CMP X8, 0x0
	0x036AD350 CSET W8, EQ
	0x036AD354 STRB W8, [X19 + 0x62]
	0x036AD358 CBNZ W8, 0x36AD38C
	0x036AD35C EOR W8, W0, 0x1
	0x036AD360 TBNZ X8, 0x0, 0x36AD38C
	0x036AD364 LDR X8, [X21 + 0x28]
	0x036AD368 CBNZ X8, 0x36AD38C
	0x036AD36C ADRP X8, 0xA4E000
	0x036AD370 LDR X8, [X8 + 0x558]
	0x036AD374 LDR X0, [X8]
	0x036AD378 BL 0x1C16F10
	0x036AD37C MOV X1, X31
	0x036AD380 MOV X21, X0
	0x036AD384 BL 0x32E23B4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0xD34000
	013 Move X26, 0xA76000
	014 Move X25, 0xA50000
	015 Move W8, [X23+2506]
	016 Move X26, [X26+3760]
	017 Move X25, [X25+1928]
	018 Move W20, W3
	019 Move W21, W2
	020 Move W22, W1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xA93000
	027 Move X0, [X0+16]
	028 Call 0x1C17CF4
	029 Move X0, 0xA76000
	030 Move X0, [X0+3760]
	031 Call 0x1C17CF4
	032 Move X0, 0xA93000
	033 Move X0, [X0+24]
	034 Call 0x1C17CF4
	035 Move X0, 0xA50000
	036 Move X0, [X0+1928]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+2506], W8
	040 Move X0, [X26]
	041 Move X24, 0xA93000
	042 Move X24, [X24+16]
	043 Move [X31+12], W31
	044 Call 0x1C17F10
	045 Move W1, 1
	046 Move W2, 1
	047 Move X3, X31
	048 Move X23, X0
	049 Move W27, 1
	050 Call SemaphoreSlim..ctor, X0, X1, X2
	051 Move [X19+64], X23
	052 Move X0, [X26]
	053 Call 0x1C17F10
	054 Move W1, 1
	055 Move W2, 1
	056 Move X3, X31
	057 Move X23, X0
	058 Call SemaphoreSlim..ctor, X0, X1, X2
	059 Move X0, X19
	060 Move X1, X31
	061 Move [X19+72], X23
	062 Move [X19+80], W27
	063 Call Object..ctor, X0
	064 Move X0, X31
	065 Call Logging.get_On
	066 Move X8, [X25]
	067 And W23, W0, 1
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Call 0x1C17D44
	074 Move X8, [X25]
	075 Move X8, [X8+184]
	076 Move [X8+60], W23
	077 Call 0x1C17D44
	078 Call Socket.InitializeSockets
	079 Add X3, X31, 12
	080 Move W0, W22
	081 Move W1, W21
	082 Move W2, W20
	083 Call 0x1C880E4
	084 Move X8, [X24]
	085 Move X24, X0
	086 Move X0, X8
	087 Call 0x1C17F10
	088 Move W2, 1
	089 Move X1, X24
	090 Move X3, X31
	091 Move X23, X0
	092 Call SafeSocketHandle..ctor, X0, X1, X2
	093 Move [X19+48], X23
	094 Compare X23, 0
	095 JumpIfEqual {158}
	096 Move X8, [X23]
	097 Move X0, X23
	098 Move X9, [X8+392]
	099 Move X1, [X8+400]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {159}
	105 Move X23, 0xA93000
	106 Move X23, [X23+24]
	107 Move [X19+32], W22
	108 Move [X19+36], W21
	109 Move [X19+40], W20
	110 Move X0, [X23]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X20, 0xD34000
	116 Move W8, [X20+2583]
	117 Compare W8, 0
	118 JumpIfNotEqual {124}
	119 Move X0, 0xA93000
	120 Move X0, [X0+24]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X20+2583], W8
	124 Move X0, [X23]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {130}
	128 Call 0x1C17DFC
	129 Move X0, [X23]
	130 Move X8, [X0+184]
	131 Move X8, [X8]
	132 Compare X8, 0
	133 JumpIfEqual {158}
	134 Move W1, [X8+20]
	135 Add W31, W1, 1
	136 Move X0, X19
	137 Call Socket.SetIPProtectionLevel, X0, X1
	138 Move X0, X19
	139 Call Socket.SocketDefaults, X0
	140 Move X0, [X25]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Call 0x1C17D44
	146 Move X20, [X31+80]
	147 Move X19, [X31+88]
	148 Move X22, [X31+64]
	149 Move X21, [X31+72]
	150 Move X24, [X31+48]
	151 Move X23, [X31+56]
	152 Move X26, [X31+32]
	153 Move X25, [X31+40]
	154 Move X30, [X31+16]
	155 Move X27, [X31+24]
	156 Add X31, X31, 96
	157 Return 
	158 Call 0x1C17F20
	159 Move X0, 0xA85000
	160 Move X0, [X0+216]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X1, X31
	164 Move X19, X0
	165 Call SocketException..ctor, X0
	166 Move X0, 0xA93000
	167 Move X0, [X0+32]
	168 Call 0x1C17D08
	169 Move X1, X0
	170 Move X0, X19
	171 Call 0x1C17DEC

Method: System.Boolean get_OSSupportsIPv4()

Disassembly:
	0x036C015C LDR X0, [X28]
	0x036C0160 LDR W8, [X0 + 0xE0]
	0x036C0164 CBNZ W8, 0x36C016C
	0x036C0168 BL 0x1C16DFC
	0x036C016C UBFM X20, X25, 0x20, 0x3F
	0x036C0170 TBNZ X20, 0x1F, 0x36C02AC
	0x036C0174 LDR X0, [X28]
	0x036C0178 LDR W8, [X0 + 0xE0]
	0x036C017C CBNZ W8, 0x36C0184
	0x036C0180 BL 0x1C16DFC
	0x036C0184 CBZ X26, 0x36C02F8
	0x036C0188 LDR W8, [X26 + 0x18]
	0x036C018C SUB W8, W8, W25
	0x036C0190 CMP W8, W20
	0x036C0194 B.LT 0x36C02AC
	0x036C0198 LDR X0, [X28]
	0x036C019C LDR X21, [X31 + 0x40]
	0x036C01A0 LDR W8, [X0 + 0xE0]
	0x036C01A4 CBNZ W8, 0x36C01AC
	0x036C01A8 BL 0x1C16DFC
	0x036C01AC MOVZ W1, 0x3
	0x036C01B0 MOV X0, X26
	0x036C01B4 MOV X2, X31
	0x036C01B8 BL 0x32C0780
	0x036C01BC CBZ X21, 0x36C02F4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD21000
	005 Move X19, 0xA3D000
	006 Move W8, [X20+2507]
	007 Move X19, [X19+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA3D000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2507], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call Socket.InitializeSockets
	023 Move X8, [X19]
	024 Move X8, [X8+184]
	025 Move W19, [X8+56]
	026 Call 0x1C17D44
	027 Move W0, W19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Boolean get_OSSupportsIPv6()

Disassembly:
	0x036C01C0 LDR W8, [X21 + 0x18]
	0x036C01C4 CMP W24, W8
	0x036C01C8 B.CS 0x36C0300
	0x036C01CC ADD X8, X21, W24, 0x3, SXTW
	0x036C01D0 STR X0, [X8 + 0x20]
	0x036C01D4 LDR X0, [X28]
	0x036C01D8 LDR W8, [X0 + 0xE0]
	0x036C01DC CBNZ W8, 0x36C01E4
	0x036C01E0 BL 0x1C16DFC
	0x036C01E4 SXTW X8, W24
	0x036C01E8 ADDS X21, X23, X8, 0x4, LSL
	0x036C01EC B.EQ 0x36C02FC
	0x036C01F0 STR W20, [X21]
	0x036C01F4 LDR X0, [X29]
	0x036C01F8 LDR W8, [X0 + 0xE0]
	0x036C01FC CBNZ W8, 0x36C0204
	0x036C0200 BL 0x1C16DFC
	0x036C0204 LDR X2, [X19]
	0x036C0208 MOV X0, X26
	0x036C020C MOV W1, W25
	0x036C0210 BL 0x22160F0
	0x036C0214 STR X0, [X21 + 0x8]
	0x036C0218 LDR W25, [X31 + 0x4C]
	0x036C021C ADD W24, W24, 0x1
	0x036C0220 CMP W24, W25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD21000
	005 Move X19, 0xA3D000
	006 Move W8, [X20+2508]
	007 Move X19, [X19+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA3D000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2508], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call Socket.InitializeSockets
	023 Move X8, [X19]
	024 Move X8, [X8+184]
	025 Move W19, [X8+58]
	026 Call 0x1C17D44
	027 Move W0, W19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.IntPtr get_Handle()

Disassembly:
	0x036C0224 B.LT 0x36C00E4
	0x036C0228 LDR W21, [X31 + 0xC]
	0x036C022C LDR X26, [X31]
	0x036C0230 ADRP X8, 0xA3C000
	0x036C0234 LDR X8, [X8 + 0x788]
	0x036C0238 LDR X22, [X26 + 0x30]
	0x036C023C LDRB W19, [X26 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+16]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Net.Sockets.AddressFamily get_AddressFamily()

Disassembly:
	0x036C0240 LDR X0, [X8]
	0x036C0244 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Net.Sockets.SocketType get_SocketType()

Disassembly:
	0x036C0248 CBNZ W8, 0x36C0250
	0x036C024C BL 0x1C16DFC

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Net.Sockets.ProtocolType get_ProtocolType()

Disassembly:
	0x036C0250 CMP W19, 0x0
	0x036C0254 CSET W5, NE

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_ExclusiveAddressUse(System.Boolean value)

Disassembly:
	0x036C0258 ADD X4, X31, 0x48
	0x036C025C MOV X0, X22
	0x036C0260 MOV X1, X23
	0x036C0264 MOV W2, W25
	0x036C0268 MOV W3, W21
	0x036C026C BL 0x36C4B7C
	0x036C0270 LDR X24, [X31 + 0x10]
	0x036C0274 MOV W20, W0
	0x036C0278 ADD X0, X31, 0x18
	0x036C027C BL 0x1BC71C0
	0x036C0280 LDR W8, [X31 + 0x48]
	0x036C0284 MOV W0, W20
	0x036C0288 LDP X20, X19, [X31 + 0xA0]
	0x036C028C LDP X22, X21, [X31 + 0x90]
	0x036C0290 STR W8, [X24]
	0x036C0294 LDP X24, X23, [X31 + 0x80]
	0x036C0298 LDP X26, X25, [X31 + 0x70]
	0x036C029C LDP X28, X27, [X31 + 0x60]
	0x036C02A0 LDP X29, X30, [X31 + 0x50]
	0x036C02A4 ADD X31, X31, 0xB0
	0x036C02A8 RET
	0x036C02AC ADRP X0, 0xA3B000
	0x036C02B0 LDR X0, [X0 + 0x760]
	0x036C02B4 BL 0x1C16D08
	0x036C02B8 BL 0x1C16F10
	0x036C02BC MOV X20, X0
	0x036C02C0 ADRP X0, 0xA7F000
	0x036C02C4 LDR X0, [X0 + 0x9A8]
	0x036C02C8 BL 0x1C16D08
	0x036C02CC MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+81]
	005 Compare W8, 0
	006 JumpIfNotEqual {15}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 And W3, W1, 1
	010 Move W1, 0xFFFF
	011 Move TEMP, 4
	012 Not TEMP
	013 Move W2, TEMP
	014 Move X30, [X31+32]
	015 Move X0, 0xA80000
	016 Move X0, [X0+2328]
	017 Call 0x1C17D08
	018 Move X1, X31
	019 Call SR.GetString, X0
	020 Move X19, X0
	021 Move X0, 0xA34000
	022 Move X0, [X0+1456]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidOperationException..ctor, X0, X1
	029 Move X0, 0xA80000
	030 Move X0, [X0+2336]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Void set_ReceiveTimeout(System.Int32 value)

Disassembly:
	0x036C03EC BL 0x3EB1AE0
	0x036C03F0 CBZ X21, 0x36C0428
	0x036C03F4 MOV X0, X21
	0x036C03F8 BL 0x1C16F18
	0x036C03FC B 0x36C0404
	0x036C0400 CBNZ X21, 0x36C0430
	0x036C0404 MOV X20, X0
	0x036C0408 MOVZ W8, 0x1
	0x036C040C CMP W1, W8
	0x036C0410 B.NE 0x36C043C
	0x036C0414 MOV X0, X20
	0x036C0418 BL 0x3EB1AD0
	0x036C041C LDR X8, [X0]
	0x036C0420 STR X8, [X31 + 0x18]
	0x036C0424 BL 0x3EB1AE0
	0x036C0428 MOV W20, W31
	0x036C042C B 0x36C0278
	0x036C0430 MOV X0, X21
	0x036C0434 BL 0x1C16F18
	0x036C0438 MOV X20, X0
	0x036C043C ADD X0, X31, 0x18
	0x036C0440 BL 0x1BC71C0
	0x036C0444 MOV X0, X20
	0x036C0448 BL 0x1D2C690
	0x036C044C BL 0x1990590
	0x036C0450 SUB X31, X31, 0x70

ISIL:
	001 Add W31, W1, 2
	002 Add W31, W1, 1
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Move W1, 0xFFFF
	005 Move W2, 0x1006
	006 Call Socket.SetSocketOption, X0, X1, X2, X3
	007 Return 
	008 Move [X31-16], X30
	009 Move [X31-8], X19
	010 Move X0, 0xA3C000
	011 Move X0, [X0+1888]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0xA3E000
	016 Move X0, [X0+3784]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call ArgumentOutOfRangeException..ctor, X0, X1
	022 Move X0, 0xA80000
	023 Move X0, [X0+2352]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_SendTimeout(System.Int32 value)

Disassembly:
	0x036C0454 STP X29, X30, [X31 + 0x10]
	0x036C0458 STP X28, X27, [X31 + 0x20]
	0x036C045C STP X26, X25, [X31 + 0x30]
	0x036C0460 STP X24, X23, [X31 + 0x40]
	0x036C0464 STP X22, X21, [X31 + 0x50]
	0x036C0468 STP X20, X19, [X31 + 0x60]
	0x036C046C ADRP X25, 0xD20000
	0x036C0470 LDRB W8, [X25 + 0x9FE]
	0x036C0474 MOV X19, X5
	0x036C0478 MOV W20, W4
	0x036C047C MOV W21, W3
	0x036C0480 MOV W22, W2
	0x036C0484 MOV X23, X1
	0x036C0488 MOV X24, X0
	0x036C048C TBNZ X8, 0x0, 0x36C04A4
	0x036C0490 ADRP X0, 0xA3C000
	0x036C0494 LDR X0, [X0 + 0x788]
	0x036C0498 BL 0x1C16CF4
	0x036C049C MOVZ W8, 0x1
	0x036C04A0 STRB W8, [X25 + 0x9FE]
	0x036C04A4 MOV X0, X24
	0x036C04A8 STR W31, [X31 + 0xC]
	0x036C04AC BL 0x36C19E0
	0x036C04B0 MOV X1, X23
	0x036C04B4 BL 0x36C3D18
	0x036C04B8 MOV X1, X23

ISIL:
	001 Add W31, W1, 2
	002 Add W31, W1, 1
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Move W1, 0xFFFF
	005 Move W2, 0x1005
	006 Call Socket.SetSocketOption, X0, X1, X2, X3
	007 Return 
	008 Move [X31-16], X30
	009 Move [X31-8], X19
	010 Move X0, 0xA3C000
	011 Move X0, [X0+1888]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0xA3E000
	016 Move X0, [X0+3784]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call ArgumentOutOfRangeException..ctor, X0, X1
	022 Move X0, 0xA80000
	023 Move X0, [X0+2360]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void set_DontFragment(System.Boolean value)

Disassembly:
	0x036C04BC MOV W2, W22
	0x036C04C0 MOV W3, W21
	0x036C04C4 BL 0x36C3D6C
	0x036C04C8 MOV W25, W31
	0x036C04CC CBZ W21, 0x36C0564
	0x036C04D0 ADD X28, X23, 0x20
	0x036C04D4 CBZ X23, 0x36C04E8
	0x036C04D8 LDR W8, [X23 + 0x18]
	0x036C04DC CMP W8, 0x0
	0x036C04E0 CSEL X29, X31, X28, EQ
	0x036C04E4 B 0x36C04EC
	0x036C04E8 MOV X29, X31
	0x036C04EC ADRP X8, 0xA3C000
	0x036C04F0 LDR X8, [X8 + 0x788]
	0x036C04F4 LDR X26, [X24 + 0x30]
	0x036C04F8 LDRB W27, [X24 + 0x50]
	0x036C04FC LDR X0, [X8]
	0x036C0500 LDR W8, [X0 + 0xE0]
	0x036C0504 CBNZ W8, 0x36C050C
	0x036C0508 BL 0x1C16DFC
	0x036C050C CMP W27, 0x0
	0x036C0510 ADD W8, W25, W22
	0x036C0514 CSET W5, NE
	0x036C0518 ADD X1, X29, W8, SXTW
	0x036C051C SUB W2, W21, W25
	0x036C0520 ADD X4, X31, 0xC
	0x036C0524 MOV X0, X26
	0x036C0528 MOV W3, W20
	0x036C052C BL 0x36C4A3C
	0x036C0530 LDR W8, [X31 + 0xC]
	0x036C0534 MOVN W9, 0x2732

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+32]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X20, [X31+16]
	007 Move X19, [X31+24]
	008 And W3, W1, 1
	009 Move W2, 14
	010 Move W1, W31
	011 Move X30, [X31+32]
	012 Call Socket.SetSocketOption, X0, X1, X2, X3
	013 Return 
	014 Move X0, 0xA80000
	015 Move X0, [X0+2200]
	016 Call 0x1C17D08
	017 Move X1, X31
	018 Call SR.GetString, X0
	019 Move X19, X0
	020 Move X0, 0xA34000
	021 Move X0, [X0+2880]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X1, X19
	025 Move X2, X31
	026 Move X20, X0
	027 Call NotSupportedException..ctor, X0, X1
	028 Move X0, 0xA80000
	029 Move X0, [X0+2368]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X20
	033 Call 0x1C17DEC

Method: System.Boolean get_DualMode()

Disassembly:
	0x036C0538 ADD W25, W0, W25
	0x036C053C ADD W9, W8, W9
	0x036C0540 CMP W9, 0x2
	0x036C0544 STR W8, [X19]
	0x036C0548 B.CC 0x36C0550
	0x036C054C CBNZ W8, 0x36C056C
	0x036C0550 CMP W25, W21
	0x036C0554 MOVZ W8, 0x1
	0x036C0558 STRB W8, [X24 + 0x52]
	0x036C055C B.LT 0x36C04D4
	0x036C0560 B 0x36C0570
	0x036C0564 STR W31, [X19]
	0x036C0568 B 0x36C0570
	0x036C056C STURH W31, [X24 + 0x51]
	0x036C0570 MOV W0, W25
	0x036C0574 LDP X20, X19, [X31 + 0x60]
	0x036C0578 LDP X22, X21, [X31 + 0x50]
	0x036C057C LDP X24, X23, [X31 + 0x40]
	0x036C0580 LDP X26, X25, [X31 + 0x30]
	0x036C0584 LDP X28, X27, [X31 + 0x20]
	0x036C0588 LDP X29, X30, [X31 + 0x10]
	0x036C058C ADD X31, X31, 0x70
	0x036C0590 RET
	0x036C0594 STR X30, [X31 - 0x10]!
	0x036C0598 MOV W4, W2
	0x036C059C CBZ X1, 0x36C05B4
	0x036C05A0 LDR W3, [X1 + 0x18]
	0x036C05A4 CBZ X0, 0x36C05BC
	0x036C05A8 MOV W2, W31
	0x036C05AC LDR X30, [X31], #0x10
	0x036C05B0 B 0x36BB0AC
	0x036C05B4 MOV W3, W31
	0x036C05B8 CBNZ X0, 0x36C05A8
	0x036C05BC BL 0x1C16F20
	0x036C05C0 STR X30, [X31 - 0x10]!
	0x036C05C4 CBZ X1, 0x36C05E0
	0x036C05C8 LDR W3, [X1 + 0x18]
	0x036C05CC CBZ X0, 0x36C05E8
	0x036C05D0 MOV W2, W31
	0x036C05D4 MOV W4, W31
	0x036C05D8 LDR X30, [X31], #0x10
	0x036C05DC B 0x36BB0AC
	0x036C05E0 MOV W3, W31
	0x036C05E4 CBNZ X0, 0x36C05D0
	0x036C05E8 BL 0x1C16F20
	0x036C05EC STR X30, [X31 - 0x50]!
	0x036C05F0 STP X26, X25, [X31 + 0x10]
	0x036C05F4 STP X24, X23, [X31 + 0x20]
	0x036C05F8 STP X22, X21, [X31 + 0x30]
	0x036C05FC STP X20, X19, [X31 + 0x40]
	0x036C0600 ADRP X25, 0xD20000
	0x036C0604 LDRB W8, [X25 + 0x9F2]
	0x036C0608 MOV X20, X5
	0x036C060C MOV W21, W4
	0x036C0610 MOV W22, W3
	0x036C0614 MOV W23, W2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD21000
	005 Move W8, [X20+2509]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA34000
	012 Move X0, [X0+1880]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2509], W8
	016 Move W8, [X19+32]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W1, 41
	019 Move W2, 27
	020 Move X0, X19
	021 Call Socket.GetSocketOption, X0, X1, X2
	022 Compare X0, 0
	023 JumpIfEqual {59}
	024 Move X8, 0xA34000
	025 Move X8, [X8+1880]
	026 Move X9, [X0]
	027 Move X1, [X8]
	028 Move X8, [X9+64]
	029 Move X9, [X1+64]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Call 0x1C17E08
	032 Move W8, [X0]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X30, [X31+32]
	038 Return X0
	039 Move X0, 0xA80000
	040 Move X0, [X0+2200]
	041 Call 0x1C17D08
	042 Move X1, X31
	043 Call SR.GetString, X0
	044 Move X19, X0
	045 Move X0, 0xA34000
	046 Move X0, [X0+2880]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X1, X19
	050 Move X2, X31
	051 Move X20, X0
	052 Call NotSupportedException..ctor, X0, X1
	053 Move X0, 0xA80000
	054 Move X0, [X0+2376]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X20
	058 Call 0x1C17DEC
	059 Call 0x1C17F20
	060 Call 0x1C181E0

Method: System.Void set_DualMode(System.Boolean value)

Disassembly:
	0x036C0618 MOV X24, X1
	0x036C061C MOV X19, X0
	0x036C0620 TBNZ X8, 0x0, 0x36C0638
	0x036C0624 ADRP X0, 0xA3C000
	0x036C0628 LDR X0, [X0 + 0x788]
	0x036C062C BL 0x1C16CF4
	0x036C0630 MOVZ W8, 0x1
	0x036C0634 STRB W8, [X25 + 0x9F2]
	0x036C0638 ADRP X25, 0xA3C000
	0x036C063C LDR X25, [X25 + 0x788]
	0x036C0640 MOV X0, X19
	0x036C0644 STR W31, [X31 + 0xC]
	0x036C0648 BL 0x36C19E0
	0x036C064C MOV X1, X24
	0x036C0650 BL 0x36C3D18
	0x036C0654 MOV X1, X24
	0x036C0658 MOV W2, W23
	0x036C065C MOV W3, W22
	0x036C0660 BL 0x36C3D6C
	0x036C0664 CBZ X24, 0x36C0678
	0x036C0668 LDR W8, [X24 + 0x18]
	0x036C066C CBZ W8, 0x36C0678
	0x036C0670 ADD X26, X24, 0x20
	0x036C0674 B 0x36C067C
	0x036C0678 MOV X26, X31
	0x036C067C LDR X0, [X25]
	0x036C0680 LDR X24, [X19 + 0x30]
	0x036C0684 LDRB W25, [X19 + 0x50]
	0x036C0688 LDR W8, [X0 + 0xE0]
	0x036C068C CBNZ W8, 0x36C0694
	0x036C0690 BL 0x1C16DFC
	0x036C0694 CMP W25, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+32]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X20, [X31+16]
	007 Move X19, [X31+24]
	008 NotImplemented "Instruction ORN not yet implemented."
	009 And W3, W8, 1
	010 Move W1, 41
	011 Move W2, 27
	012 Move X30, [X31+32]
	013 Call Socket.SetSocketOption, X0, X1, X2, X3
	014 Return 
	015 Move X0, 0xA80000
	016 Move X0, [X0+2200]
	017 Call 0x1C17D08
	018 Move X1, X31
	019 Call SR.GetString, X0
	020 Move X19, X0
	021 Move X0, 0xA34000
	022 Move X0, [X0+2880]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call NotSupportedException..ctor, X0, X1
	029 Move X0, 0xA80000
	030 Move X0, [X0+2384]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Boolean get_IsDualMode()

Disassembly:
	0x036C0698 CSET W5, NE
	0x036C069C ADD X1, X26, W23, SXTW
	0x036C06A0 ADD X4, X31, 0xC
	0x036C06A4 MOV X0, X24
	0x036C06A8 MOV W2, W22
	0x036C06AC MOV W3, W21

ISIL:
	001 Move W8, [X0+32]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Call Socket.get_DualMode, X0
	004 Return X0
	005 Move W0, W31
	006 Return X0

Method: System.Boolean CanTryAddressFamily(System.Net.Sockets.AddressFamily family)

Disassembly:
	0x036C06B0 BL 0x36C3E90
	0x036C06B4 LDR W9, [X31 + 0xC]
	0x036C06B8 MOV W8, W0
	0x036C06BC CMP W9, 0x0
	0x036C06C0 CSEL W0, W31, W0, EQ
	0x036C06C4 STR W9, [X20]
	0x036C06C8 CBZ W9, 0x36C06E8
	0x036C06CC MOVZ W10, 0x2733
	0x036C06D0 CMP W9, W10
	0x036C06D4 B.EQ 0x36C06E8
	0x036C06D8 MOVZ W8, 0x2734
	0x036C06DC CMP W9, W8
	0x036C06E0 B.NE 0x36C06F8
	0x036C06E4 MOV W8, W0

ISIL:
	001 Move W9, [X0+32]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 Move X8, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, W31
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X0, X8
	010 Call Socket.get_DualMode, X0
	011 Return X0
	012 Return X0

Method: System.Void Connect(System.Net.IPAddress[] addresses, System.Int32 port)

Disassembly:
	0x036C06E8 MOVZ W9, 0x1
	0x036C06EC MOV W0, W8
	0x036C06F0 STRB W9, [X19 + 0x52]
	0x036C06F4 B 0x36C06FC
	0x036C06F8 STURH W31, [X19 + 0x51]
	0x036C06FC LDP X20, X19, [X31 + 0x40]
	0x036C0700 LDP X22, X21, [X31 + 0x30]
	0x036C0704 LDP X24, X23, [X31 + 0x20]
	0x036C0708 LDP X26, X25, [X31 + 0x10]
	0x036C070C LDR X30, [X31], #0x50
	0x036C0710 RET
	0x036C0714 STR X30, [X31 - 0x20]!
	0x036C0718 STP X20, X19, [X31 + 0x10]
	0x036C071C ADD X3, X31, 0xC
	0x036C0720 STR W31, [X31 + 0xC]
	0x036C0724 BL 0x36C0774
	0x036C0728 LDR W19, [X31 + 0xC]
	0x036C072C CBNZ W19, 0x36C073C
	0x036C0730 LDP X20, X19, [X31 + 0x10]
	0x036C0734 LDR X30, [X31], #0x20
	0x036C0738 RET
	0x036C073C ADRP X0, 0xA71000
	0x036C0740 LDR X0, [X0 + 0xD8]
	0x036C0744 BL 0x1C16D08
	0x036C0748 BL 0x1C16F10
	0x036C074C MOV W1, W19
	0x036C0750 MOV X2, X31
	0x036C0754 MOV X20, X0
	0x036C0758 BL 0x36CA10C
	0x036C075C ADRP X0, 0xA7F000
	0x036C0760 LDR X0, [X0 + 0x9C8]
	0x036C0764 BL 0x1C16D08
	0x036C0768 MOV X1, X0
	0x036C076C MOV X0, X20
	0x036C0770 BL 0x1C16DEC
	0x036C0774 SUB X31, X31, 0xB0
	0x036C0778 STP X29, X30, [X31 + 0x50]
	0x036C077C STP X28, X27, [X31 + 0x60]
	0x036C0780 STP X26, X25, [X31 + 0x70]
	0x036C0784 STP X24, X23, [X31 + 0x80]
	0x036C0788 STP X22, X21, [X31 + 0x90]
	0x036C078C STP X20, X19, [X31 + 0xA0]
	0x036C0790 ADRP X19, 0xD20000
	0x036C0794 LDRB W8, [X19 + 0x9F4]
	0x036C0798 MOV X24, X3
	0x036C079C MOV W21, W2
	0x036C07A0 MOV X22, X1
	0x036C07A4 MOV X25, X0
	0x036C07A8 TBNZ X8, 0x0, 0x36C0838
	0x036C07AC ADRP X0, 0xA66000
	0x036C07B0 LDR X0, [X0 + 0xCF0]
	0x036C07B4 BL 0x1C16CF4
	0x036C07B8 ADRP X0, 0xA66000
	0x036C07BC LDR X0, [X0 + 0xCF8]
	0x036C07C0 BL 0x1C16CF4
	0x036C07C4 ADRP X0, 0xA66000
	0x036C07C8 LDR X0, [X0 + 0xD00]
	0x036C07CC BL 0x1C16CF4
	0x036C07D0 ADRP X0, 0xA5B000
	0x036C07D4 LDR X0, [X0 + 0x5B0]
	0x036C07D8 BL 0x1C16CF4
	0x036C07DC ADRP X0, 0xA75000
	0x036C07E0 LDR X0, [X0 + 0xC78]
	0x036C07E4 BL 0x1C16CF4
	0x036C07E8 ADRP X0, 0xA7F000
	0x036C07EC LDR X0, [X0 + 0x988]
	0x036C07F0 BL 0x1C16CF4
	0x036C07F4 ADRP X0, 0xA7F000
	0x036C07F8 LDR X0, [X0 + 0x990]
	0x036C07FC BL 0x1C16CF4
	0x036C0800 ADRP X0, 0xA7F000
	0x036C0804 LDR X0, [X0 + 0x998]
	0x036C0808 BL 0x1C16CF4
	0x036C080C ADRP X0, 0xA5B000
	0x036C0810 LDR X0, [X0 + 0x850]
	0x036C0814 BL 0x1C16CF4
	0x036C0818 ADRP X0, 0xA3C000
	0x036C081C LDR X0, [X0 + 0x788]
	0x036C0820 BL 0x1C16CF4
	0x036C0824 ADRP X0, 0xA7F000
	0x036C0828 LDR X0, [X0 + 0x9A0]
	0x036C082C BL 0x1C16CF4
	0x036C0830 MOVZ W8, 0x1
	0x036C0834 STRB W8, [X19 + 0x9F4]
	0x036C0838 MOV X0, X25
	0x036C083C STP X31, X31, [X31 + 0x40]
	0x036C0840 STR W31, [X31 + 0x3C]
	0x036C0844 BL 0x36C19E0
	0x036C0848 CBZ X22, 0x36C0BC8
	0x036C084C ADRP X19, 0xA7F000
	0x036C0850 LDR X8, [X22]
	0x036C0854 LDR X19, [X19 + 0x988]
	0x036C0858 LDRH W9, [X8 + 0x12E]
	0x036C085C LDR X1, [X19]
	0x036C0860 CBZ X9, 0x36C0884
	0x036C0864 LDR X10, [X8 + 0xB0]
	0x036C0868 ADD X10, X10, 0x8
	0x036C086C LDUR X11, [X10 - 0x8]
	0x036C0870 CMP X11, X1
	0x036C0874 B.EQ 0x36C0894
	0x036C0878 SUBS X9, X9, 0x1
	0x036C087C ADD X10, X10, 0x10
	0x036C0880 B.NE 0x36C086C
	0x036C0884 MOV X0, X22
	0x036C0888 MOV W2, W31
	0x036C088C BL 0x1C5C788
	0x036C0890 B 0x36C08A0
	0x036C0894 LDRSW X9, [X10]
	0x036C0898 ADD X8, X8, X9, 0x4, LSL
	0x036C089C ADD X0, X8, 0x138
	0x036C08A0 LDP X8, X1, [X0]
	0x036C08A4 MOV X0, X22
	0x036C08A8 BLR X8
	0x036C08AC CBZ W0, 0x36C0BC8
	0x036C08B0 LDR X8, [X22]
	0x036C08B4 LDR X1, [X19]
	0x036C08B8 ADRP X20, 0xA75000
	0x036C08BC ADRP X19, 0xA7F000
	0x036C08C0 LDRH W9, [X8 + 0x12E]
	0x036C08C4 LDR X20, [X20 + 0xC78]
	0x036C08C8 LDR X19, [X19 + 0x9A0]
	0x036C08CC CBZ X9, 0x36C08F0
	0x036C08D0 LDR X10, [X8 + 0xB0]
	0x036C08D4 ADD X10, X10, 0x8
	0x036C08D8 LDUR X11, [X10 - 0x8]
	0x036C08DC CMP X11, X1
	0x036C08E0 B.EQ 0x36C0900
	0x036C08E4 SUBS X9, X9, 0x1
	0x036C08E8 ADD X10, X10, 0x10
	0x036C08EC B.NE 0x36C08D8
	0x036C08F0 MOV X0, X22
	0x036C08F4 MOV W2, W31
	0x036C08F8 BL 0x1C5C788
	0x036C08FC B 0x36C090C
	0x036C0900 LDRSW X9, [X10]
	0x036C0904 ADD X8, X8, X9, 0x4, LSL
	0x036C0908 ADD X0, X8, 0x138
	0x036C090C LDP X8, X1, [X0]
	0x036C0910 MOV X0, X22
	0x036C0914 BLR X8
	0x036C0918 LDR X8, [X20]
	0x036C091C MOV W23, W0
	0x036C0920 STR W0, [X31 + 0x4C]
	0x036C0924 MOV W1, W23
	0x036C0928 MOV X0, X8
	0x036C092C BL 0x1C16D6C
	0x036C0930 STR X0, [X31 + 0x40]
	0x036C0934 LDR X0, [X19]
	0x036C0938 ADD X8, X31, 0x3C
	0x036C093C ADD X9, X31, 0x40
	0x036C0940 STP X31, X8, [X31 + 0x18]
	0x036C0944 ADD X8, X31, 0x4C
	0x036C0948 STP X9, X8, [X31 + 0x28]
	0x036C094C MOV W1, W23
	0x036C0950 BL 0x1C16D6C
	0x036C0954 STP X25, X24, [X31 + 0x8]
	0x036C0958 CBZ X0, 0x36C0970
	0x036C095C LDR W8, [X0 + 0x18]
	0x036C0960 ADD X9, X0, 0x20
	0x036C0964 CMP W8, 0x0
	0x036C0968 CSEL X23, X31, X9, EQ
	0x036C096C B 0x36C0974
	0x036C0970 MOV X23, X31
	0x036C0974 LDR W25, [X31 + 0x4C]
	0x036C0978 CMP W25, 0x1
	0x036C097C B.LT 0x36C0AF0
	0x036C0980 STR W21, [X31 + 0x4]
	0x036C0984 ADRP X27, 0xA7F000
	0x036C0988 ADRP X28, 0xA5B000
	0x036C098C ADRP X29, 0xA5B000
	0x036C0990 ADRP X19, 0xA7F000
	0x036C0994 LDR X27, [X27 + 0x990]
	0x036C0998 LDR X28, [X28 + 0x5B0]
	0x036C099C LDR X29, [X29 + 0x850]
	0x036C09A0 LDR X19, [X19 + 0x998]
	0x036C09A4 MOV W24, W31
	0x036C09A8 LDR X8, [X22]
	0x036C09AC LDR X1, [X27]
	0x036C09B0 LDRH W9, [X8 + 0x12E]
	0x036C09B4 CBZ X9, 0x36C09D8
	0x036C09B8 LDR X10, [X8 + 0xB0]
	0x036C09BC ADD X10, X10, 0x8
	0x036C09C0 LDUR X11, [X10 - 0x8]
	0x036C09C4 CMP X11, X1
	0x036C09C8 B.EQ 0x36C09E8
	0x036C09CC SUBS X9, X9, 0x1
	0x036C09D0 ADD X10, X10, 0x10
	0x036C09D4 B.NE 0x36C09C0
	0x036C09D8 MOV X0, X22
	0x036C09DC MOV W2, W31
	0x036C09E0 BL 0x1C5C788
	0x036C09E4 B 0x36C09F4
	0x036C09E8 LDRSW X9, [X10]
	0x036C09EC ADD X8, X8, X9, 0x4, LSL
	0x036C09F0 ADD X0, X8, 0x138
	0x036C09F4 LDP X8, X2, [X0]
	0x036C09F8 MOV X0, X22
	0x036C09FC MOV W1, W24
	0x036C0A00 BLR X8
	0x036C0A04 MOV X26, X0
	0x036C0A08 LDR X0, [X28]
	0x036C0A0C MOV X25, X1
	0x036C0A10 LDR W8, [X0 + 0xE0]
	0x036C0A14 CBNZ W8, 0x36C0A1C
	0x036C0A18 BL 0x1C16DFC
	0x036C0A1C TBNZ X25, 0x1F, 0x36C0B70
	0x036C0A20 LDR X0, [X28]
	0x036C0A24 LDR W8, [X0 + 0xE0]
	0x036C0A28 CBNZ W8, 0x36C0A30
	0x036C0A2C BL 0x1C16DFC
	0x036C0A30 UBFM X20, X25, 0x20, 0x3F
	0x036C0A34 TBNZ X20, 0x1F, 0x36C0B70
	0x036C0A38 LDR X0, [X28]
	0x036C0A3C LDR W8, [X0 + 0xE0]
	0x036C0A40 CBNZ W8, 0x36C0A48
	0x036C0A44 BL 0x1C16DFC
	0x036C0A48 CBZ X26, 0x36C0BBC
	0x036C0A4C LDR W8, [X26 + 0x18]
	0x036C0A50 SUB W8, W8, W25
	0x036C0A54 CMP W8, W20
	0x036C0A58 B.LT 0x36C0B70
	0x036C0A5C LDR X0, [X28]
	0x036C0A60 LDR X21, [X31 + 0x40]
	0x036C0A64 LDR W8, [X0 + 0xE0]
	0x036C0A68 CBNZ W8, 0x36C0A70
	0x036C0A6C BL 0x1C16DFC
	0x036C0A70 MOVZ W1, 0x3
	0x036C0A74 MOV X0, X26
	0x036C0A78 MOV X2, X31
	0x036C0A7C BL 0x32C0780
	0x036C0A80 CBZ X21, 0x36C0BB8
	0x036C0A84 LDR W8, [X21 + 0x18]
	0x036C0A88 CMP W24, W8
	0x036C0A8C B.CS 0x36C0BC4
	0x036C0A90 ADD X8, X21, W24, 0x3, SXTW
	0x036C0A94 STR X0, [X8 + 0x20]
	0x036C0A98 LDR X0, [X28]
	0x036C0A9C LDR W8, [X0 + 0xE0]
	0x036C0AA0 CBNZ W8, 0x36C0AA8
	0x036C0AA4 BL 0x1C16DFC
	0x036C0AA8 SXTW X8, W24
	0x036C0AAC ADDS X21, X23, X8, 0x4, LSL
	0x036C0AB0 B.EQ 0x36C0BC0

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xD21000
	013 Move X25, 0xA3D000
	014 Move W8, [X22+2510]
	015 Move X25, [X25+1928]
	016 Move W20, W2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xA41000
	024 Move X0, [X0+3000]
	025 Call 0x1C17CF4
	026 Move X0, 0xA3D000
	027 Move X0, [X0+1928]
	028 Call 0x1C17CF4
	029 Move X0, 0xA7E000
	030 Move X0, [X0+3624]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2510], W8
	034 Move X0, [X25]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Call 0x1C17D44
	040 Move W8, [X19+84]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare X21, 0
	043 JumpIfEqual {168}
	044 Move X8, [X21+24]
	045 Compare X8, 0
	046 JumpIfEqual {180}
	047 Move X8, 0xA7E000
	048 Move X8, [X8+3624]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W0, W20
	055 Move X1, X31
	056 Call ValidationHelper.ValidateTcpPort, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {182}
	061 Move W8, [X19+32]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X21+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X27, 0xA41000
	067 Move X22, 0xA34000
	068 Move X27, [X27+3000]
	069 Move X22, [X22+2000]
	070 Move X26, X31
	071 Move X23, X31
	072 Add X28, X21, 32
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X24, [X28]
	075 Compare X24, 0
	076 JumpIfEqual {220}
	077 Move X0, X24
	078 Move X1, X31
	079 Call IPAddress.get_AddressFamily, X0
	080 Move W8, [X19+32]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X19
	085 Call Socket.get_DualMode, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {123}
	090 Move X0, [X27]
	091 Call 0x1C17F10
	092 Move X23, X0
	093 Move X1, X24
	094 Move W2, W20
	095 Move X3, X31
	096 Call IPEndPoint..ctor, X0, X1, X2
	097 Move X0, X19
	098 Move X1, X23
	099 Call Socket.Connect, X0, X1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X23, X0
	102 Move X0, X23
	103 Call 0x3EB2AD0
	104 Move X23, X0
	105 Move X0, X22
	106 Call 0x1C17D08
	107 Move X8, [X23]
	108 Move X1, [X8]
	109 Call 0x1C18270
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {247}
	114 Move X23, [X23]
	115 Call 0x3EB2AE0
	116 Move X0, X23
	117 Move X1, X31
	118 Call NclUtilities.IsFatal, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {255}
	123 Move W8, [X21+24]
	124 Add X26, X26, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Compare X23, 0
	127 JumpIfNotEqual {241}
	128 Move W8, [X19+82]
	129 Compare W8, 0
	130 JumpIfEqual {200}
	131 Move X0, [X25]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X20, [X31+80]
	137 Move X19, [X31+88]
	138 Move X22, [X31+64]
	139 Move X21, [X31+72]
	140 Move X24, [X31+48]
	141 Move X23, [X31+56]
	142 Move X26, [X31+32]
	143 Move X25, [X31+40]
	144 Move X28, [X31+16]
	145 Move X27, [X31+24]
	146 Move X30, [X31+96]
	147 Call 0x1C17D44
	148 Return 
	149 Move X0, X19
	150 Move X1, X31
	151 Call "il2cpp_vm_object_is_inst", X0
	152 Move X19, X0
	153 Call 0x19913C0
	154 Move X8, [X19]
	155 Move X0, X19
	156 Move X9, [X8+744]
	157 Move X1, [X8+752]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X19, X0
	160 Move X0, 0xA5D000
	161 Move X0, [X0+1208]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X1, X19
	165 Move X2, X31
	166 Move X20, X0
	167 Call ObjectDisposedException..ctor, X0, X1
	168 Move X0, 0xA39000
	169 Move X0, [X0+1320]
	170 Call 0x1C17D08
	171 Call 0x1C17F10
	172 Move X19, X0
	173 Move X0, 0xA80000
	174 Move X0, [X0+2392]
	175 Call 0x1C17D08
	176 Move X1, X0
	177 Move X0, X19
	178 Move X2, X31
	179 Call ArgumentNullException..ctor, X0, X1
	180 Move X0, 0xA80000
	181 Move X0, [X0+2400]
	182 Move X0, 0xA3C000
	183 Move X0, [X0+1888]
	184 Call 0x1C17D08
	185 Call 0x1C17F10
	186 Move X19, X0
	187 Move X0, 0xA7E000
	188 Move X0, [X0+1992]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X19
	192 Move X2, X31
	193 Call ArgumentOutOfRangeException..ctor, X0, X1
	194 Move X0, 0xA80000
	195 Move X0, [X0+2408]
	196 Call 0x1C17D08
	197 Move X1, X0
	198 Move X0, X19
	199 Call 0x1C17DEC
	200 Move X0, 0xA80000
	201 Move X0, [X0+2416]
	202 Call 0x1C17D08
	203 Move X1, X31
	204 Call SR.GetString, X0
	205 Move X19, X0
	206 Move X0, 0xA3C000
	207 Move X0, [X0+1400]
	208 Call 0x1C17D08
	209 Call 0x1C17F10
	210 Move X20, X0
	211 Move X0, 0xA80000
	212 Move X0, [X0+2392]
	213 Call 0x1C17D08
	214 Move X2, X0
	215 Move X0, X20
	216 Move X1, X19
	217 Move X3, X31
	218 Call ArgumentException..ctor, X0, X1, X2
	219 Call 0x1C17F28
	220 Call 0x1C17F20
	221 Move X0, 0xA80000
	222 Move X0, [X0+2200]
	223 Call 0x1C17D08
	224 Move X1, X31
	225 Call SR.GetString, X0
	226 Move X19, X0
	227 Move X0, 0xA34000
	228 Move X0, [X0+2880]
	229 Call 0x1C17D08
	230 Call 0x1C17F10
	231 Move X1, X19
	232 Move X2, X31
	233 Move X20, X0
	234 Call NotSupportedException..ctor, X0, X1
	235 Move X0, 0xA80000
	236 Move X0, [X0+2408]
	237 Call 0x1C17D08
	238 Move X1, X0
	239 Move X0, X20
	240 Call 0x1C17DEC
	241 Move X0, 0xA80000
	242 Move X0, [X0+2408]
	243 Call 0x1C17D08
	244 Move X1, X0
	245 Move X0, X23
	246 Call 0x1C17DEC
	247 Move W0, 8
	248 Call 0x3EB2AF0
	249 Move X8, [X23]
	250 Move [X0], X8
	251 Move X1, 0x7F5000
	252 Add X1, X1, 3672
	253 Move X2, X31
	254 Call 0x3EB2B00
	255 Move X0, X23
	256 Call 0x1C17F18
	257 Move X23, X0
	258 Call 0x3EB2AE0
	259 Move X0, X23
	260 Call 0x1D2D690
	261 Call 0x1991590

Method: System.Int32 Send(System.Byte[] buffer)

Disassembly:
	0x036C0E20 BL 0x1C16D08
	0x036C0E24 MOV X1, X0
	0x036C0E28 MOV X0, X19
	0x036C0E2C MOV X2, X31
	0x036C0E30 BL 0x337DF1C
	0x036C0E34 ADRP X0, 0xA7F000
	0x036C0E38 LDR X0, [X0 + 0x9D8]
	0x036C0E3C BL 0x1C16D08
	0x036C0E40 MOV X1, X0
	0x036C0E44 MOV X0, X19
	0x036C0E48 BL 0x1C16DEC

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {12}
	004 Move W3, [X1+24]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move W2, W31
	008 Move W4, W31
	009 Move X30, [X31+16]
	010 Call Socket.Send, X0, X1, X2, X3, X4
	011 Return X0
	012 Move W3, W31
	013 Compare X0, 0
	014 JumpIfNotEqual {7}
	015 Call 0x1C17F20

Method: System.Int32 Send(System.Collections.Generic.IList`1<System.ArraySegment`1<System.Byte>> buffers, System.Net.Sockets.SocketFlags socketFlags)

Disassembly:
	0x036C0E4C STP X30, X27, [X31 - 0x50]!
	0x036C0E50 STP X26, X25, [X31 + 0x10]
	0x036C0E54 STP X24, X23, [X31 + 0x20]
	0x036C0E58 STP X22, X21, [X31 + 0x30]
	0x036C0E5C STP X20, X19, [X31 + 0x40]
	0x036C0E60 ADRP X20, 0xD20000
	0x036C0E64 LDRB W8, [X20 + 0xA01]
	0x036C0E68 MOV X24, X7
	0x036C0E6C MOV X26, X6
	0x036C0E70 MOV X27, X5
	0x036C0E74 MOV W21, W4
	0x036C0E78 MOV W22, W3
	0x036C0E7C MOV W23, W2
	0x036C0E80 MOV X25, X1
	0x036C0E84 MOV X19, X0
	0x036C0E88 TBNZ X8, 0x0, 0x36C0EDC
	0x036C0E8C ADRP X0, 0xA7F000
	0x036C0E90 LDR X0, [X0 + 0x9E8]
	0x036C0E94 BL 0x1C16CF4
	0x036C0E98 ADRP X0, 0xA7F000
	0x036C0E9C LDR X0, [X0 + 0x9F0]
	0x036C0EA0 BL 0x1C16CF4
	0x036C0EA4 ADRP X0, 0xA7F000
	0x036C0EA8 LDR X0, [X0 + 0x9F8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Add X3, X31, 12
	005 Move [X31+12], W31
	006 Call Socket.Send, X0, X1, X2, X3
	007 Move W19, [X31+12]
	008 Compare W19, 0
	009 JumpIfNotEqual {14}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return X0
	014 Move X0, 0xA72000
	015 Move X0, [X0+216]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move W1, W19
	019 Move X2, X31
	020 Move X20, X0
	021 Call SocketException..ctor, X0, X1
	022 Move X0, 0xA80000
	023 Move X0, [X0+2432]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X20
	027 Call 0x1C17DEC

Method: System.Int32 Send(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags)

Disassembly:
	0x036BC7B4 BL 0x3EB1AE0
	0x036BC7B8 ADRP X0, 0xA37000
	0x036BC7BC LDR X0, [X0 + 0x7D0]
	0x036BC7C0 BL 0x1C16D08
	0x036BC7C4 CBZ X19, 0x36BC8AC
	0x036BC7C8 LDR X8, [X19]
	0x036BC7CC LDRB W9, [X0 + 0x130]
	0x036BC7D0 LDRB W10, [X8 + 0x130]
	0x036BC7D4 CMP W10, W9
	0x036BC7D8 B.CC 0x36BC8AC
	0x036BC7DC LDR X8, [X8 + 0xC8]
	0x036BC7E0 ADD X8, X8, X9, 0x3, LSL
	0x036BC7E4 LDUR X8, [X8 - 0x8]
	0x036BC7E8 CMP X8, X0
	0x036BC7EC B.NE 0x36BC8AC
	0x036BC7F0 ADRP X0, 0xA40000
	0x036BC7F4 LDR X0, [X0 + 0xDB8]
	0x036BC7F8 BL 0x1C16D08
	0x036BC7FC LDR X8, [X19]
	0x036BC800 LDRB W9, [X0 + 0x130]
	0x036BC804 LDRB W10, [X8 + 0x130]
	0x036BC808 CMP W10, W9
	0x036BC80C B.CC 0x36BC824
	0x036BC810 LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Add X5, X31, 12
	005 Move [X31+12], W31
	006 Call Socket.Send, X0, X1, X2, X3, X4, X5
	007 Move W19, [X31+12]
	008 Compare W19, 0
	009 JumpIfNotEqual {14}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return X0
	014 Move X0, 0xA76000
	015 Move X0, [X0+216]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move W1, W19
	019 Move X2, X31
	020 Move X20, X0
	021 Call SocketException..ctor, X0, X1
	022 Move X0, 0xA84000
	023 Move X0, [X0+1944]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X20
	027 Call 0x1C17DEC

Method: System.Int32 Receive(System.Byte[] buffer, System.Net.Sockets.SocketFlags socketFlags)

Disassembly:
	0x036C1594 LDRB W8, [X22 + 0xA0E]
	0x036C1598 MOV X20, X2
	0x036C159C MOV W21, W1
	0x036C15A0 MOV X19, X0
	0x036C15A4 TBNZ X8, 0x0, 0x36C15BC
	0x036C15A8 ADRP X0, 0xA3B000
	0x036C15AC LDR X0, [X0 + 0x788]
	0x036C15B0 BL 0x1C16CF4
	0x036C15B4 MOVZ W8, 0x1
	0x036C15B8 STRB W8, [X22 + 0xA0E]
	0x036C15BC STRB W31, [X31 + 0xC]

ISIL:
	001 Move [X31-16], X30
	002 Move W4, W2
	003 Compare X1, 0
	004 JumpIfEqual {12}
	005 Move W3, [X1+24]
	006 Compare X0, 0
	007 JumpIfEqual {15}
	008 Move W2, W31
	009 Move X30, [X31+16]
	010 Call Socket.Receive, X0, X1, X2, X3, X4
	011 Return X0
	012 Move W3, W31
	013 Compare X0, 0
	014 JumpIfNotEqual {8}
	015 Call 0x1C17F20

Method: System.Int32 Receive(System.Byte[] buffer)

Disassembly:
	0x036C15C0 CBZ X19, 0x36C162C
	0x036C15C4 ADD X1, X31, 0xC
	0x036C15C8 MOV X0, X19
	0x036C15CC MOV X2, X31
	0x036C15D0 BL 0x32BF948
	0x036C15D4 ADRP X8, 0xA3B000
	0x036C15D8 LDR X8, [X8 + 0x788]
	0x036C15DC LDR X22, [X19 + 0x10]
	0x036C15E0 LDR X0, [X8]
	0x036C15E4 LDR W8, [X0 + 0xE0]
	0x036C15E8 CBNZ W8, 0x36C15F0

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {12}
	004 Move W3, [X1+24]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move W2, W31
	008 Move W4, W31
	009 Move X30, [X31+16]
	010 Call Socket.Receive, X0, X1, X2, X3, X4
	011 Return X0
	012 Move W3, W31
	013 Compare X0, 0
	014 JumpIfNotEqual {7}
	015 Call 0x1C17F20

Method: System.Int32 Receive(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags)

Disassembly:
	0x036BC0AC BL 0x1C16D08
	0x036BC0B0 BL 0x1C16F10
	0x036BC0B4 MOV W1, W19
	0x036BC0B8 MOV X2, X31
	0x036BC0BC MOV X20, X0
	0x036BC0C0 BL 0x36CA10C
	0x036BC0C4 ADRP X0, 0xA83000
	0x036BC0C8 LDR X0, [X0 + 0x7B8]
	0x036BC0CC BL 0x1C16D08
	0x036BC0D0 MOV X1, X0
	0x036BC0D4 MOV X0, X20
	0x036BC0D8 BL 0x1C16DEC
	0x036BC0DC STP X30, X21, [X31 - 0x20]!
	0x036BC0E0 STP X20, X19, [X31 + 0x10]
	0x036BC0E4 LDRB W21, [X0 + 0x38]
	0x036BC0E8 MOV X20, X0
	0x036BC0EC MOV X19, X1
	0x036BC0F0 BL 0x1C16D44
	0x036BC0F4 CBNZ W21, 0x36BC118
	0x036BC0F8 CBZ X19, 0x36BC17C
	0x036BC0FC LDR X0, [X20 + 0x28]
	0x036BC100 CBZ X0, 0x36BC1B0
	0x036BC104 MOV X1, X19
	0x036BC108 BL 0x36BC2E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Add X5, X31, 12
	005 Move [X31+12], W31
	006 Call Socket.Receive, X0, X1, X2, X3, X4, X5
	007 Move W19, [X31+12]
	008 Compare W19, 0
	009 JumpIfNotEqual {14}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return X0
	014 Move X0, 0xA76000
	015 Move X0, [X0+216]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move W1, W19
	019 Move X2, X31
	020 Move X20, X0
	021 Call SocketException..ctor, X0, X1
	022 Move X0, 0xA84000
	023 Move X0, [X0+1896]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X20
	027 Call 0x1C17DEC

Method: System.Int32 Receive(System.Collections.Generic.IList`1<System.ArraySegment`1<System.Byte>> buffers, System.Net.Sockets.SocketFlags socketFlags)

Disassembly:
	0x036C1714 LDR X8, [X8 + 0x788]
	0x036C1718 LDR X26, [X19 + 0x10]
	0x036C171C LDR X0, [X8]
	0x036C1720 LDR W8, [X0 + 0xE0]
	0x036C1724 CBNZ W8, 0x36C172C
	0x036C1728 BL 0x1C16DFC
	0x036C172C MOV X0, X26
	0x036C1730 MOV W1, W25
	0x036C1734 MOV W2, W24
	0x036C1738 MOV X3, X23
	0x036C173C MOV X4, X22
	0x036C1740 MOV W5, W21
	0x036C1744 MOV X6, X20
	0x036C1748 BL 0x1C86DD8
	0x036C174C LDRB W8, [X31 + 0xC]
	0x036C1750 CBZ W8, 0x36C1768
	0x036C1754 MOV X20, X31
	0x036C1758 MOV X0, X19
	0x036C175C MOV X1, X31
	0x036C1760 BL 0x32BFAB4
	0x036C1764 CBNZ X20, 0x36C1784
	0x036C1768 LDP X20, X19, [X31 + 0x40]
	0x036C176C LDP X22, X21, [X31 + 0x30]
	0x036C1770 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Add X3, X31, 12
	005 Move [X31+12], W31
	006 Call Socket.Receive, X0, X1, X2, X3
	007 Move W19, [X31+12]
	008 Compare W19, 0
	009 JumpIfNotEqual {14}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return X0
	014 Move X0, 0xA71000
	015 Move X0, [X0+216]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move W1, W19
	019 Move X2, X31
	020 Move X20, X0
	021 Call SocketException..ctor, X0, X1
	022 Move X0, 0xA7F000
	023 Move X0, [X0+2504]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X20
	027 Call 0x1C17DEC

Method: System.Int32 IOControl(System.Net.Sockets.IOControlCode ioControlCode, System.Byte[] optionInValue, System.Byte[] optionOutValue)

Disassembly:
	0x036C1CCC LDR X22, [X19 + 0x10]

ISIL:
No ISIL was generated
Method: System.Void SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel level)

Disassembly:
	0x036BFFA4 LDUR X11, [X10 - 0x8]
	0x036BFFA8 CMP X11, X1
	0x036BFFAC B.EQ 0x36BFFCC
	0x036BFFB0 SUBS X9, X9, 0x1
	0x036BFFB4 ADD X10, X10, 0x10
	0x036BFFB8 B.NE 0x36BFFA4
	0x036BFFBC MOV X0, X22
	0x036BFFC0 MOV W2, W31
	0x036BFFC4 BL 0x1C5C788
	0x036BFFC8 B 0x36BFFD8
	0x036BFFCC LDRSW X9, [X10]
	0x036BFFD0 ADD X8, X8, X9, 0x4, LSL
	0x036BFFD4 ADD X0, X8, 0x138
	0x036BFFD8 LDP X8, X1, [X0]
	0x036BFFDC MOV X0, X22
	0x036BFFE0 BLR X8
	0x036BFFE4 CBZ W0, 0x36C0338
	0x036BFFE8 LDR X8, [X22]
	0x036BFFEC LDR X1, [X19]
	0x036BFFF0 ADRP X20, 0xA76000
	0x036BFFF4 ADRP X19, 0xA80000
	0x036BFFF8 LDRH W9, [X8 + 0x12E]
	0x036BFFFC LDR X20, [X20 + 0xC78]
	0x036C0000 LDR X19, [X19 + 0x9A0]
	0x036C0004 CBZ X9, 0x36C0028
	0x036C0008 LDR X10, [X8 + 0xB0]
	0x036C000C ADD X10, X10, 0x8
	0x036C0010 LDUR X11, [X10 - 0x8]
	0x036C0014 CMP X11, X1
	0x036C0018 B.EQ 0x36C0038
	0x036C001C SUBS X9, X9, 0x1
	0x036C0020 ADD X10, X10, 0x10
	0x036C0024 B.NE 0x36C0010
	0x036C0028 MOV X0, X22
	0x036C002C MOV W2, W31
	0x036C0030 BL 0x1C5C788
	0x036C0034 B 0x36C0044
	0x036C0038 LDRSW X9, [X10]
	0x036C003C ADD X8, X8, X9, 0x4, LSL
	0x036C0040 ADD X0, X8, 0x138
	0x036C0044 LDP X8, X1, [X0]
	0x036C0048 MOV X0, X22
	0x036C004C BLR X8
	0x036C0050 LDR X8, [X20]
	0x036C0054 MOV W23, W0
	0x036C0058 STR W0, [X31 + 0x4C]
	0x036C005C MOV W1, W23
	0x036C0060 MOV X0, X8
	0x036C0064 BL 0x1C16D6C
	0x036C0068 STR X0, [X31 + 0x40]
	0x036C006C LDR X0, [X19]
	0x036C0070 ADD X8, X31, 0x3C
	0x036C0074 ADD X9, X31, 0x40
	0x036C0078 STP X31, X8, [X31 + 0x18]
	0x036C007C ADD X8, X31, 0x4C
	0x036C0080 STP X9, X8, [X31 + 0x28]
	0x036C0084 MOV W1, W23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Add W31, W1, 1
	005 Move W8, [X0+32]
	006 Move W3, W1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W1, W31
	010 Move W1, 41
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move W2, 23
	014 Move X30, [X31+32]
	015 Call Socket.SetSocketOption, X0, X1, X2, X3
	016 Return 
	017 Move X0, 0xA81000
	018 Move X0, [X0+2312]
	019 Call 0x1C17D08
	020 Move X1, X31
	021 Call SR.GetString, X0
	022 Move X19, X0
	023 Move X0, 0xA3C000
	024 Move X0, [X0+1400]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X20, X0
	028 Move X0, 0xA80000
	029 Move X0, [X0+1712]
	030 Call 0x1C17D08
	031 Move X2, X0
	032 Move X0, X20
	033 Move X1, X19
	034 Move X3, X31
	035 Call ArgumentException..ctor, X0, X1, X2
	036 Move X0, 0xA80000
	037 Move X0, [X0+2200]
	038 Call 0x1C17D08
	039 Move X1, X31
	040 Call SR.GetString, X0
	041 Move X19, X0
	042 Move X0, 0xA34000
	043 Move X0, [X0+2880]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X1, X19
	047 Move X2, X31
	048 Move X20, X0
	049 Call NotSupportedException..ctor, X0, X1
	050 Move X0, 0xA80000
	051 Move X0, [X0+2320]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Call 0x1C17DEC

Method: System.IAsyncResult BeginConnect(System.Net.IPAddress address, System.Int32 port, System.AsyncCallback requestCallback, System.Object state)

Disassembly:
	0x036BEE74 ADRP X0, 0xA81000
	0x036BEE78 LDR X0, [X0 + 0x18]
	0x036BEE7C BL 0x1C16CF4
	0x036BEE80 MOVZ W8, 0x1
	0x036BEE84 STRB W8, [X24 + 0xA17]
	0x036BEE88 LDR X0, [X23]
	0x036BEE8C LDR W8, [X0 + 0xE0]
	0x036BEE90 CBNZ W8, 0x36BEE9C
	0x036BEE94 BL 0x1C16DFC
	0x036BEE98 LDR X0, [X23]
	0x036BEE9C LDR X8, [X0 + 0xB8]
	0x036BEEA0 LDR X8, [X8]
	0x036BEEA4 CBZ X8, 0x36BEF2C
	0x036BEEA8 LDR X0, [X22]
	0x036BEEAC LDR W8, [X0 + 0xE0]
	0x036BEEB0 CBNZ W8, 0x36BEEB8
	0x036BEEB4 BL 0x1C16DFC
	0x036BEEB8 BL 0x1C16D44
	0x036BEEBC LDR X8, [X22]
	0x036BEEC0 AND W9, W21, 0x1
	0x036BEEC4 LDR X8, [X8 + 0xB8]
	0x036BEEC8 STRB W9, [X8 + 0x38]
	0x036BEECC BL 0x1C16D44
	0x036BEED0 LDR X8, [X22]
	0x036BEED4 AND W9, W20, 0x1
	0x036BEED8 LDR X8, [X8 + 0xB8]
	0x036BEEDC STRB W9, [X8 + 0x39]
	0x036BEEE0 BL 0x1C16D44
	0x036BEEE4 LDR X8, [X22]
	0x036BEEE8 MOVZ W9, 0x1
	0x036BEEEC MOV X21, X31
	0x036BEEF0 LDR X8, [X8 + 0xB8]
	0x036BEEF4 STRB W9, [X8 + 0x3B]
	0x036BEEF8 LDRB W8, [X31 + 0xC]
	0x036BEEFC CBZ W8, 0x36BEF0C
	0x036BEF00 MOV X0, X19
	0x036BEF04 MOV X1, X31
	0x036BEF08 BL 0x33E14E4
	0x036BEF0C CBNZ X21, 0x36BEF24
	0x036BEF10 LDP X20, X19, [X31 + 0x30]
	0x036BEF14 LDP X22, X21, [X31 + 0x20]
	0x036BEF18 LDP X24, X23, [X31 + 0x10]
	0x036BEF1C LDR X30, [X31], #0x40
	0x036BEF20 RET
	0x036BEF24 MOV X0, X21
	0x036BEF28 BL 0x1C16F18
	0x036BEF2C BL 0x1C16F20
	0x036BEF30 B 0x36BEF48
	0x036BEF34 B 0x36BEF48
	0x036BEF38 B 0x36BEF48
	0x036BEF3C B 0x36BEF48
	0x036BEF40 B 0x36BEF48
	0x036BEF44 B 0x36BEF48
	0x036BEF48 MOV X20, X0
	0x036BEF4C CMP W1, 0x1
	0x036BEF50 B.NE 0x36BEF68
	0x036BEF54 MOV X0, X20
	0x036BEF58 BL 0x3EB1AD0
	0x036BEF5C LDR X21, [X0]
	0x036BEF60 BL 0x3EB1AE0
	0x036BEF64 B 0x36BEEF8
	0x036BEF68 MOV X21, X31
	0x036BEF6C B 0x36BEF74
	0x036BEF70 MOV X20, X0
	0x036BEF74 LDRB W8, [X31 + 0xC]
	0x036BEF78 CBZ W8, 0x36BEF88
	0x036BEF7C MOV X0, X19
	0x036BEF80 MOV X1, X31
	0x036BEF84 BL 0x33E14E4
	0x036BEF88 CBNZ X21, 0x36BEF94
	0x036BEF8C MOV X0, X20
	0x036BEF90 BL 0x1D2C690
	0x036BEF94 MOV X0, X21
	0x036BEF98 BL 0x1C16F18
	0x036BEF9C BL 0x1990590
	0x036BEFA0 B 0x1C870E4
	0x036BEFA4 STR X30, [X31 - 0x20]!
	0x036BEFA8 STP X20, X19, [X31 + 0x10]
	0x036BEFAC ADDS W31, W1, 0x1
	0x036BEFB0 B.EQ 0x36BEFE8
	0x036BEFB4 LDR W8, [X0 + 0x20]
	0x036BEFB8 MOV W3, W1
	0x036BEFBC CMP W8, 0x17
	0x036BEFC0 B.EQ 0x36BEFD4
	0x036BEFC4 CMP W8, 0x2
	0x036BEFC8 B.NE 0x36BF038
	0x036BEFCC MOV W1, W31
	0x036BEFD0 B 0x36BEFD8
	0x036BEFD4 MOVZ W1, 0x29
	0x036BEFD8 LDP X20, X19, [X31 + 0x10]
	0x036BEFDC MOVZ W2, 0x17
	0x036BEFE0 LDR X30, [X31], #0x20
	0x036BEFE4 B 0x36BF2D0
	0x036BEFE8 ADRP X0, 0xA81000
	0x036BEFEC LDR X0, [X0 + 0x908]
	0x036BEFF0 BL 0x1C16D08
	0x036BEFF4 MOV X1, X31
	0x036BEFF8 BL 0x320A1E4
	0x036BEFFC MOV X19, X0
	0x036BF000 ADRP X0, 0xA3C000
	0x036BF004 LDR X0, [X0 + 0x578]
	0x036BF008 BL 0x1C16D08
	0x036BF00C BL 0x1C16F10
	0x036BF010 MOV X20, X0
	0x036BF014 ADRP X0, 0xA80000
	0x036BF018 LDR X0, [X0 + 0x6B0]
	0x036BF01C BL 0x1C16D08
	0x036BF020 MOV X2, X0
	0x036BF024 MOV X0, X20
	0x036BF028 MOV X1, X19
	0x036BF02C MOV X3, X31
	0x036BF030 BL 0x330E16C
	0x036BF034 B 0x36BF070
	0x036BF038 ADRP X0, 0xA80000
	0x036BF03C LDR X0, [X0 + 0x898]
	0x036BF040 BL 0x1C16D08
	0x036BF044 MOV X1, X31
	0x036BF048 BL 0x320A1E4
	0x036BF04C MOV X19, X0
	0x036BF050 ADRP X0, 0xA34000
	0x036BF054 LDR X0, [X0 + 0xB40]
	0x036BF058 BL 0x1C16D08
	0x036BF05C BL 0x1C16F10
	0x036BF060 MOV X1, X19
	0x036BF064 MOV X2, X31
	0x036BF068 MOV X20, X0
	0x036BF06C BL 0x3379A44
	0x036BF070 ADRP X0, 0xA80000
	0x036BF074 LDR X0, [X0 + 0x910]
	0x036BF078 BL 0x1C16D08
	0x036BF07C MOV X1, X0
	0x036BF080 MOV X0, X20
	0x036BF084 BL 0x1C16DEC
	0x036BF088 STP X30, X19, [X31 - 0x10]!
	0x036BF08C LDR W8, [X0 + 0x20]
	0x036BF090 MOV X19, X0
	0x036BF094 CMP W8, 0x17
	0x036BF098 B.EQ 0x36BF0CC
	0x036BF09C CMP W8, 0x2
	0x036BF0A0 B.NE 0x36BF0E4
	0x036BF0A4 MOV X0, X19
	0x036BF0A8 MOV W1, W31
	0x036BF0AC BL 0x36BF4BC
	0x036BF0B0 LDR W8, [X19 + 0x28]
	0x036BF0B4 CMP W8, 0x6
	0x036BF0B8 B.NE 0x36BF0E4
	0x036BF0BC MOV X0, X19
	0x036BF0C0 MOV W1, W31
	0x036BF0C4 BL 0x36AC388
	0x036BF0C8 B 0x36BF0E4
	0x036BF0CC LDR W8, [X19 + 0x24]
	0x036BF0D0 CMP W8, 0x3
	0x036BF0D4 B.EQ 0x36BF0E4
	0x036BF0D8 MOVZ W1, 0x1
	0x036BF0DC MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xD23000
	010 Move X25, 0xA3F000
	011 Move W8, [X24+2511]
	012 Move X25, [X25+1928]
	013 Move X19, X4
	014 Move X20, X3
	015 Move W22, W2
	016 Move X23, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xA43000
	023 Move X0, [X0+3000]
	024 Call 0x1C17CF4
	025 Move X0, 0xA3F000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move X0, 0xA80000
	029 Move X0, [X0+3624]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+2511], W8
	033 Move X0, [X25]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Call 0x1C17D44
	039 Move W8, [X21+84]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Compare X23, 0
	042 JumpIfEqual {121}
	043 Move X8, 0xA80000
	044 Move X8, [X8+3624]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move W0, W22
	051 Move X1, X31
	052 Call ValidationHelper.ValidateTcpPort, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {133}
	057 Move X0, X23
	058 Move X1, X31
	059 Call IPAddress.get_AddressFamily, X0
	060 Move W8, [X21+32]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X21
	065 Call Socket.get_DualMode, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {151}
	070 Move X8, 0xA43000
	071 Move X8, [X8+3000]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X1, X23
	075 Move W2, W22
	076 Move X3, X31
	077 Move X24, X0
	078 Call IPEndPoint..ctor, X0, X1, X2
	079 Move X0, X21
	080 Move X1, X24
	081 Move X2, X20
	082 Move X3, X19
	083 Call Socket.BeginConnect, X0, X1, X2, X3
	084 Move X8, [X25]
	085 Move X19, X0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Call 0x1C17D44
	092 Move X0, X19
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X30, [X31+64]
	100 Move X25, [X31+72]
	101 Return X0
	102 Move X0, X21
	103 Move X1, X31
	104 Call "il2cpp_vm_object_is_inst", X0
	105 Move X19, X0
	106 Call 0x19913C0
	107 Move X8, [X19]
	108 Move X0, X19
	109 Move X9, [X8+744]
	110 Move X1, [X8+752]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X19, X0
	113 Move X0, 0xA5F000
	114 Move X0, [X0+1208]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X1, X19
	118 Move X2, X31
	119 Move X20, X0
	120 Call ObjectDisposedException..ctor, X0, X1
	121 Move X0, 0xA3A000
	122 Move X0, [X0+1320]
	123 Call 0x1C17D08
	124 Call 0x1C17F10
	125 Move X19, X0
	126 Move X0, 0xA7F000
	127 Move X0, [X0+1848]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Move X2, X31
	132 Call ArgumentNullException..ctor, X0, X1
	133 Move X0, 0xA3D000
	134 Move X0, [X0+1888]
	135 Call 0x1C17D08
	136 Call 0x1C17F10
	137 Move X19, X0
	138 Move X0, 0xA7F000
	139 Move X0, [X0+1992]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Move X2, X31
	144 Call ArgumentOutOfRangeException..ctor, X0, X1
	145 Move X0, 0xA81000
	146 Move X0, [X0+2192]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Call 0x1C17DEC
	151 Move X0, 0xA81000
	152 Move X0, [X0+2200]
	153 Call 0x1C17D08
	154 Move X1, X31
	155 Call SR.GetString, X0
	156 Move X19, X0
	157 Move X0, 0xA35000
	158 Move X0, [X0+2880]
	159 Call 0x1C17D08
	160 Call 0x1C17F10
	161 Move X1, X19
	162 Move X2, X31
	163 Move X20, X0
	164 Call NotSupportedException..ctor, X0, X1
	165 Move X0, 0xA81000
	166 Move X0, [X0+2192]
	167 Call 0x1C17D08
	168 Move X1, X0
	169 Move X0, X20
	170 Call 0x1C17DEC

Method: System.IAsyncResult BeginSend(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036BD648 BL 0x33EE044
	0x036BD64C B 0x36BD7F8
	0x036BD650 ADRP X26, 0xA82000
	0x036BD654 LDR X26, [X26 + 0x830]
	0x036BD658 ADD X23, X20, 0x10
	0x036BD65C LDR X0, [X26]
	0x036BD660 LDR W8, [X0 + 0xE0]
	0x036BD664 CBNZ W8, 0x36BD670
	0x036BD668 BL 0x1C16DFC
	0x036BD66C LDR X0, [X26]
	0x036BD670 LDR X8, [X0 + 0xB8]
	0x036BD674 ADRP X27, 0xA82000
	0x036BD678 LDR X24, [X8 + 0x30]
	0x036BD67C LDR X27, [X27 + 0x818]
	0x036BD680 CBNZ X24, 0x36BD6D4
	0x036BD684 LDR W8, [X0 + 0xE0]
	0x036BD688 CBNZ W8, 0x36BD694
	0x036BD68C BL 0x1C16DFC
	0x036BD690 LDR X0, [X26]
	0x036BD694 ADRP X9, 0xA82000
	0x036BD698 LDR X8, [X0 + 0xB8]
	0x036BD69C LDR X9, [X9 + 0x800]
	0x036BD6A0 LDR X25, [X8]
	0x036BD6A4 LDR X0, [X9]
	0x036BD6A8 BL 0x1C16F10
	0x036BD6AC ADRP X8, 0xA82000
	0x036BD6B0 LDR X8, [X8 + 0x850]
	0x036BD6B4 MOV X1, X25
	0x036BD6B8 MOV X3, X31
	0x036BD6BC MOV X24, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X7, X6
	006 Move X6, X5
	007 Add X5, X31, 28
	008 Move [X31+28], W31
	009 Call Socket.BeginSend, X0, X1, X2, X3, X4, X5, X6, X7
	010 Move W19, [X31+28]
	011 Compare W19, 0
	012 JumpIfEqual {14}
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, [X31+32]
	015 Move X19, [X31+40]
	016 Move X30, [X31+16]
	017 Add X31, X31, 48
	018 Return X0
	019 Move X0, 0xA75000
	020 Move X0, [X0+216]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move W1, W19
	024 Move X2, X31
	025 Move X20, X0
	026 Call SocketException..ctor, X0, X1
	027 Move X0, 0xA83000
	028 Move X0, [X0+2008]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X20
	032 Call 0x1C17DEC

Method: System.Int32 EndSend(System.IAsyncResult asyncResult)

Disassembly:
	0x036BD8C8 LDR X1, [X8 + 0x2F0]
	0x036BD8CC BLR X9
	0x036BD8D0 MOV X19, X0
	0x036BD8D4 ADRP X0, 0xA5F000
	0x036BD8D8 LDR X0, [X0 + 0x4B8]
	0x036BD8DC BL 0x1C16D08
	0x036BD8E0 BL 0x1C16F10
	0x036BD8E4 MOV X1, X19
	0x036BD8E8 MOV X2, X31
	0x036BD8EC MOV X20, X0
	0x036BD8F0 BL 0x338C448
	0x036BD8F4 ADRP X0, 0xA82000
	0x036BD8F8 LDR X0, [X0 + 0x860]
	0x036BD8FC BL 0x1C16D08
	0x036BD900 MOV X1, X0
	0x036BD904 MOV X0, X20
	0x036BD908 BL 0x1C16DEC
	0x036BD90C ADRP X0, 0xA36000
	0x036BD910 LDR X0, [X0 + 0x5B0]
	0x036BD914 BL 0x1C16D08
	0x036BD918 BL 0x1C16F10
	0x036BD91C MOV X19, X0
	0x036BD920 ADRP X0, 0xA82000
	0x036BD924 LDR X0, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Add X2, X31, 12
	005 Move [X31+12], W31
	006 Call Socket.EndSend, X0, X1, X2
	007 Move W19, [X31+12]
	008 Compare W19, 0
	009 JumpIfNotEqual {14}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return X0
	014 Move X0, 0xA75000
	015 Move X0, [X0+216]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move W1, W19
	019 Move X2, X31
	020 Move X20, X0
	021 Call SocketException..ctor, X0, X1
	022 Move X0, 0xA83000
	023 Move X0, [X0+2024]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X20
	027 Call 0x1C17DEC

Method: System.IAsyncResult BeginReceive(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036BD064 BL 0x1C16D08
	0x036BD068 BL 0x1C16F10
	0x036BD06C MOV X19, X0
	0x036BD070 ADRP X0, 0xA82000
	0x036BD074 LDR X0, [X0 + 0xA0]
	0x036BD078 BL 0x1C16D08
	0x036BD07C MOV X1, X0
	0x036BD080 MOV X0, X19
	0x036BD084 MOV X2, X31
	0x036BD088 BL 0x337DF1C
	0x036BD08C B 0x36BD1A8
	0x036BD090 BL 0x1C16F20
	0x036BD094 MOV W20, W1
	0x036BD098 B 0x36BD0A0
	0x036BD09C MOV X20, X1
	0x036BD0A0 CMP W20, 0x1
	0x036BD0A4 B.NE 0x36BD1C0
	0x036BD0A8 BL 0x3EB1AD0
	0x036BD0AC LDR X19, [X0]
	0x036BD0B0 BL 0x3EB1AE0
	0x036BD0B4 ADRP X0, 0xA36000
	0x036BD0B8 LDR X0, [X0 + 0x7D0]
	0x036BD0BC BL 0x1C16D08
	0x036BD0C0 CBZ X19, 0x36BD1A8
	0x036BD0C4 LDR X8, [X19]
	0x036BD0C8 LDRB W9, [X0 + 0x130]
	0x036BD0CC LDRB W10, [X8 + 0x130]
	0x036BD0D0 CMP W10, W9
	0x036BD0D4 B.CC 0x36BD1A8
	0x036BD0D8 LDR X8, [X8 + 0xC8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X7, X6
	006 Move X6, X5
	007 Add X5, X31, 28
	008 Move [X31+28], W31
	009 Call Socket.BeginReceive, X0, X1, X2, X3, X4, X5, X6, X7
	010 Move W19, [X31+28]
	011 Compare W19, 0
	012 JumpIfEqual {14}
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, [X31+32]
	015 Move X19, [X31+40]
	016 Move X30, [X31+16]
	017 Add X31, X31, 48
	018 Return X0
	019 Move X0, 0xA75000
	020 Move X0, [X0+216]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move W1, W19
	024 Move X2, X31
	025 Move X20, X0
	026 Call SocketException..ctor, X0, X1
	027 Move X0, 0xA83000
	028 Move X0, [X0+1976]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X20
	032 Call 0x1C17DEC

Method: System.Int32 EndReceive(System.IAsyncResult asyncResult)

Disassembly:
	0x036BD2E4 MOV X0, X23
	0x036BD2E8 MOV X1, X31
	0x036BD2EC BL 0x33BE520
	0x036BD2F0 MOV X19, X0
	0x036BD2F4 BL 0x19903C0
	0x036BD2F8 LDR X8, [X19]
	0x036BD2FC MOV X0, X19
	0x036BD300 LDR X9, [X8 + 0x2E8]
	0x036BD304 LDR X1, [X8 + 0x2F0]
	0x036BD308 BLR X9
	0x036BD30C MOV X19, X0
	0x036BD310 ADRP X0, 0xA5F000
	0x036BD314 LDR X0, [X0 + 0x4B8]
	0x036BD318 BL 0x1C16D08
	0x036BD31C BL 0x1C16F10
	0x036BD320 MOV X1, X19
	0x036BD324 MOV X2, X31
	0x036BD328 MOV X20, X0
	0x036BD32C BL 0x338C448
	0x036BD330 ADRP X0, 0xA82000
	0x036BD334 LDR X0, [X0 + 0x840]
	0x036BD338 BL 0x1C16D08
	0x036BD33C MOV X1, X0
	0x036BD340 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Add X2, X31, 12
	005 Move [X31+12], W31
	006 Call Socket.EndReceive, X0, X1, X2
	007 Move W19, [X31+12]
	008 Compare W19, 0
	009 JumpIfNotEqual {14}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return X0
	014 Move X0, 0xA75000
	015 Move X0, [X0+216]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move W1, W19
	019 Move X2, X31
	020 Move X20, X0
	021 Call SocketException..ctor, X0, X1
	022 Move X0, 0xA83000
	023 Move X0, [X0+1992]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X20
	027 Call 0x1C17DEC

Method: System.Object get_InternalSyncObject()

Disassembly:
	0x036C23C4 MOV X0, X21
	0x036C23C8 BL 0x1C16F18
	0x036C23CC MOV X21, X31
	0x036C23D0 B 0x36C23DC
	0x036C23D4 BL 0x1C16F20
	0x036C23D8 MOV X20, X0
	0x036C23DC CBNZ X19, 0x36C23E4
	0x036C23E0 BL 0x1C16F20
	0x036C23E4 MOV X0, X19
	0x036C23E8 MOV X1, X31
	0x036C23EC BL 0x36CCACC
	0x036C23F0 CBNZ X21, 0x36C23FC
	0x036C23F4 MOV X0, X20
	0x036C23F8 BL 0x1D2C690
	0x036C23FC MOV X0, X21
	0x036C2400 BL 0x1C16F18
	0x036C2404 BL 0x1990590
	0x036C2408 STR X30, [X31 - 0x30]!
	0x036C240C STP X22, X21, [X31 + 0x10]
	0x036C2410 STP X20, X19, [X31 + 0x20]
	0x036C2414 ADRP X22, 0xD1E000
	0x036C2418 ADRP X21, 0xA3A000
	0x036C241C LDRB W8, [X22 + 0x9DF]
	0x036C2420 LDR X21, [X21 + 0x788]
	0x036C2424 MOV X19, X1
	0x036C2428 MOV X20, X0
	0x036C242C TBNZ X8, 0x0, 0x36C2444
	0x036C2430 ADRP X0, 0xA3A000
	0x036C2434 LDR X0, [X0 + 0x788]
	0x036C2438 BL 0x1C16CF4
	0x036C243C MOVZ W8, 0x1
	0x036C2440 STRB W8, [X22 + 0x9DF]
	0x036C2444 MOV X0, X20
	0x036C2448 BL 0x36C19E0
	0x036C244C LDR X0, [X21]
	0x036C2450 STR W31, [X31 + 0xC]
	0x036C2454 LDR X21, [X20 + 0x30]
	0x036C2458 LDRB W22, [X20 + 0x50]
	0x036C245C LDR W8, [X0 + 0xE0]
	0x036C2460 CBNZ W8, 0x36C2468
	0x036C2464 BL 0x1C16DFC
	0x036C2468 CMP W22, 0x0
	0x036C246C CSET W2, NE
	0x036C2470 ADD X1, X31, 0xC
	0x036C2474 MOV X0, X21
	0x036C2478 BL 0x36C22B8
	0x036C247C LDR W8, [X31 + 0xC]
	0x036C2480 CBNZ W8, 0x36C24C8
	0x036C2484 CBZ X19, 0x36C2518
	0x036C2488 LDR V0, [X20 + 0x20]
	0x036C248C MOVZ W9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD1F000
	005 Move X20, 0xA3B000
	006 Move W8, [X19+2512]
	007 Move X20, [X20+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xA38000
	013 Move X0, [X0+3264]
	014 Call 0x1C17CF4
	015 Move X0, 0xA3B000
	016 Move X0, [X0+1928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2512], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X8, [X8+48]
	028 Compare X8, 0
	029 JumpIfNotEqual {50}
	030 Move X8, 0xA38000
	031 Move X8, [X8+3264]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X19, X0
	036 Call Object..ctor, X0
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X1, X19
	045 Move X2, X31
	046 Move X3, X31
	047 Add X0, X8, 48
	048 Call Interlocked.CompareExchange, X0, X1, X2
	049 Move X0, [X20]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X20]
	055 Move X8, [X0+184]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X0, [X8+48]
	059 Move X30, [X31+32]
	060 Return X0

Method: System.Boolean get_CleanedUp()

Disassembly:
	0x036C0AB4 STR W20, [X21]
	0x036C0AB8 LDR X0, [X29]
	0x036C0ABC LDR W8, [X0 + 0xE0]
	0x036C0AC0 CBNZ W8, 0x36C0AC8

ISIL:
	001 Move W8, [X0+84]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void InitializeSockets()

Disassembly:
	0x036BFD44 LDP X20, X19, [X31 + 0x40]
	0x036BFD48 LDP X22, X21, [X31 + 0x30]
	0x036BFD4C LDP X24, X23, [X31 + 0x20]
	0x036BFD50 LDP X30, X25, [X31 + 0x10]
	0x036BFD54 ADD X31, X31, 0x50
	0x036BFD58 RET
	0x036BFD5C MOV W20, W8
	0x036BFD60 LDRB W8, [X19 + 0x18]
	0x036BFD64 CBZ W8, 0x36BFD74
	0x036BFD68 MOVZ W8, 0x2714
	0x036BFD6C MOVZ W20, 0x2714
	0x036BFD70 STR W8, [X31 + 0xC]
	0x036BFD74 ADRP X0, 0xA72000
	0x036BFD78 LDR X0, [X0 + 0xD8]
	0x036BFD7C BL 0x1C16D08
	0x036BFD80 BL 0x1C16F10
	0x036BFD84 MOV X19, X0
	0x036BFD88 MOV W1, W20
	0x036BFD8C MOV X2, X31
	0x036BFD90 BL 0x36C6F04
	0x036BFD94 B 0x36BFDEC
	0x036BFD98 BL 0x1C16F20
	0x036BFD9C ADRP X0, 0xA39000
	0x036BFDA0 LDR X0, [X0 + 0x528]
	0x036BFDA4 BL 0x1C16D08
	0x036BFDA8 BL 0x1C16F10
	0x036BFDAC MOV X19, X0
	0x036BFDB0 ADRP X0, 0xA7F000
	0x036BFDB4 LDR X0, [X0 + 0xFC0]
	0x036BFDB8 BL 0x1C16D08
	0x036BFDBC MOV X1, X0
	0x036BFDC0 MOV X0, X19
	0x036BFDC4 MOV X2, X31
	0x036BFDC8 BL 0x330E100
	0x036BFDCC B 0x36BFDEC
	0x036BFDD0 ADRP X0, 0xA34000
	0x036BFDD4 LDR X0, [X0 + 0x5B0]
	0x036BFDD8 BL 0x1C16D08
	0x036BFDDC BL 0x1C16F10
	0x036BFDE0 MOV X1, X31
	0x036BFDE4 MOV X19, X0
	0x036BFDE8 BL 0x337DEC0
	0x036BFDEC ADRP X0, 0xA80000
	0x036BFDF0 LDR X0, [X0 + 0x978]
	0x036BFDF4 BL 0x1C16D08
	0x036BFDF8 MOV X1, X0
	0x036BFDFC MOV X0, X19
	0x036BFE00 BL 0x1C16DEC
	0x036BFE04 ADRP X0, 0xA72000
	0x036BFE08 LDR X0, [X0 + 0xD8]
	0x036BFE0C BL 0x1C16D08
	0x036BFE10 BL 0x1C16F10
	0x036BFE14 MOV X19, X0
	0x036BFE18 MOVZ W1, 0x2741
	0x036BFE1C B 0x36BFD8C
	0x036BFE20 STR X30, [X31 - 0x10]!
	0x036BFE24 CBZ X1, 0x36BFE40
	0x036BFE28 LDR W3, [X1 + 0x18]
	0x036BFE2C CBZ X0, 0x36BFE48
	0x036BFE30 MOV W2, W31
	0x036BFE34 MOV W4, W31
	0x036BFE38 LDR X30, [X31], #0x10
	0x036BFE3C B 0x36BB7B4
	0x036BFE40 MOV W3, W31
	0x036BFE44 CBNZ X0, 0x36BFE30
	0x036BFE48 BL 0x1C16F20
	0x036BFE4C STR X30, [X31 - 0x20]!
	0x036BFE50 STP X20, X19, [X31 + 0x10]
	0x036BFE54 ADD X3, X31, 0xC
	0x036BFE58 STR W31, [X31 + 0xC]
	0x036BFE5C BL 0x36BFEAC
	0x036BFE60 LDR W19, [X31 + 0xC]
	0x036BFE64 CBNZ W19, 0x36BFE74
	0x036BFE68 LDP X20, X19, [X31 + 0x10]
	0x036BFE6C LDR X30, [X31], #0x20
	0x036BFE70 RET
	0x036BFE74 ADRP X0, 0xA72000
	0x036BFE78 LDR X0, [X0 + 0xD8]
	0x036BFE7C BL 0x1C16D08
	0x036BFE80 BL 0x1C16F10
	0x036BFE84 MOV W1, W19
	0x036BFE88 MOV X2, X31
	0x036BFE8C MOV X20, X0
	0x036BFE90 BL 0x36CA10C
	0x036BFE94 ADRP X0, 0xA80000
	0x036BFE98 LDR X0, [X0 + 0x980]
	0x036BFE9C BL 0x1C16D08
	0x036BFEA0 MOV X1, X0
	0x036BFEA4 MOV X0, X20
	0x036BFEA8 BL 0x1C16DEC
	0x036BFEAC SUB X31, X31, 0xB0
	0x036BFEB0 STP X29, X30, [X31 + 0x50]
	0x036BFEB4 STP X28, X27, [X31 + 0x60]
	0x036BFEB8 STP X26, X25, [X31 + 0x70]
	0x036BFEBC STP X24, X23, [X31 + 0x80]
	0x036BFEC0 STP X22, X21, [X31 + 0x90]
	0x036BFEC4 STP X20, X19, [X31 + 0xA0]
	0x036BFEC8 ADRP X19, 0xD21000
	0x036BFECC LDRB W8, [X19 + 0x9FF]
	0x036BFED0 MOV X24, X3
	0x036BFED4 MOV W21, W2
	0x036BFED8 MOV X22, X1
	0x036BFEDC MOV X26, X0
	0x036BFEE0 TBNZ X8, 0x0, 0x36BFF70
	0x036BFEE4 ADRP X0, 0xA67000
	0x036BFEE8 LDR X0, [X0 + 0xCF0]
	0x036BFEEC BL 0x1C16CF4
	0x036BFEF0 ADRP X0, 0xA67000
	0x036BFEF4 LDR X0, [X0 + 0xCF8]
	0x036BFEF8 BL 0x1C16CF4
	0x036BFEFC ADRP X0, 0xA67000
	0x036BFF00 LDR X0, [X0 + 0xD00]
	0x036BFF04 BL 0x1C16CF4
	0x036BFF08 ADRP X0, 0xA5C000
	0x036BFF0C LDR X0, [X0 + 0x5B0]
	0x036BFF10 BL 0x1C16CF4
	0x036BFF14 ADRP X0, 0xA76000
	0x036BFF18 LDR X0, [X0 + 0xC78]
	0x036BFF1C BL 0x1C16CF4
	0x036BFF20 ADRP X0, 0xA80000
	0x036BFF24 LDR X0, [X0 + 0x988]
	0x036BFF28 BL 0x1C16CF4
	0x036BFF2C ADRP X0, 0xA80000
	0x036BFF30 LDR X0, [X0 + 0x990]
	0x036BFF34 BL 0x1C16CF4
	0x036BFF38 ADRP X0, 0xA80000
	0x036BFF3C LDR X0, [X0 + 0x998]
	0x036BFF40 BL 0x1C16CF4
	0x036BFF44 ADRP X0, 0xA5C000
	0x036BFF48 LDR X0, [X0 + 0x850]
	0x036BFF4C BL 0x1C16CF4
	0x036BFF50 ADRP X0, 0xA3D000
	0x036BFF54 LDR X0, [X0 + 0x788]
	0x036BFF58 BL 0x1C16CF4
	0x036BFF5C ADRP X0, 0xA80000
	0x036BFF60 LDR X0, [X0 + 0x9A0]
	0x036BFF64 BL 0x1C16CF4
	0x036BFF68 MOVZ W8, 0x1
	0x036BFF6C STRB W8, [X19 + 0x9FF]
	0x036BFF70 MOV X0, X26
	0x036BFF74 STP X31, X31, [X31 + 0x40]
	0x036BFF78 STR W31, [X31 + 0x3C]
	0x036BFF7C BL 0x36C19E0
	0x036BFF80 CBZ X22, 0x36C0304
	0x036BFF84 ADRP X19, 0xA80000
	0x036BFF88 LDR X8, [X22]
	0x036BFF8C LDR X19, [X19 + 0x988]
	0x036BFF90 LDRH W9, [X8 + 0x12E]
	0x036BFF94 LDR X1, [X19]
	0x036BFF98 CBZ X9, 0x36BFFBC
	0x036BFF9C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xD22000
	009 Move X22, 0xA3E000
	010 Move W8, [X19+2513]
	011 Move X22, [X22+1928]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA81000
	017 Move X0, [X0+24]
	018 Call 0x1C17CF4
	019 Move X0, 0xA3E000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+2513], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move W19, [X8+59]
	032 Call 0x1C17D44
	033 Compare W19, 0
	034 JumpIfNotEqual {138}
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Call Socket.get_InternalSyncObject
	041 Move X19, X0
	042 Move [X31+12], W31
	043 Add X1, X31, 12
	044 Move X2, X31
	045 Call Monitor.Enter, X0, X1
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X22]
	052 Move X8, [X0+184]
	053 Move W20, [X8+59]
	054 Call 0x1C17D44
	055 Compare W20, 0
	056 JumpIfEqual {58}
	057 Move X21, X31
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W0, W31
	064 Call Socket.IsProtocolSupported, X0
	065 Move W21, W0
	066 Move W0, 1
	067 Call Socket.IsProtocolSupported, X0
	068 Move W20, W0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {109}
	073 Move X0, [X22]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Call 0x1C17D44
	079 Move X8, [X22]
	080 Move W9, 1
	081 Move X23, 0xA81000
	082 Move X8, [X8+184]
	083 Move [X8+58], W9
	084 Move X23, [X23+24]
	085 Move X0, [X23]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X24, 0xD22000
	091 Move W8, [X24+2583]
	092 Compare W8, 0
	093 JumpIfNotEqual {99}
	094 Move X0, 0xA81000
	095 Move X0, [X0+24]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X24+2583], W8
	099 Move X0, [X23]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X23]
	105 Move X8, [X0+184]
	106 Move X8, [X8]
	107 Compare X8, 0
	108 JumpIfEqual {148}
	109 Move X0, [X22]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Call 0x1C17D44
	115 Move X8, [X22]
	116 And W9, W21, 1
	117 Move X8, [X8+184]
	118 Move [X8+56], W9
	119 Call 0x1C17D44
	120 Move X8, [X22]
	121 And W9, W20, 1
	122 Move X8, [X8+184]
	123 Move [X8+57], W9
	124 Call 0x1C17D44
	125 Move X8, [X22]
	126 Move W9, 1
	127 Move X21, X31
	128 Move X8, [X8+184]
	129 Move [X8+59], W9
	130 Move W8, [X31+12]
	131 Compare W8, 0
	132 JumpIfEqual {136}
	133 Move X0, X19
	134 Move X1, X31
	135 Call Monitor.Exit, X0
	136 Compare X21, 0
	137 JumpIfNotEqual {146}
	138 Move X20, [X31+48]
	139 Move X19, [X31+56]
	140 Move X22, [X31+32]
	141 Move X21, [X31+40]
	142 Move X24, [X31+16]
	143 Move X23, [X31+24]
	144 Move X30, [X31+64]
	145 Return 
	146 Move X0, X21
	147 Call 0x1C17F18
	148 Call 0x1C17F20
	149 Move X20, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X20
	152 Call 0x3EB2AD0
	153 Move X21, [X0]
	154 Call 0x3EB2AE0
	155 Move X21, X31
	156 Move X20, X0
	157 Move W8, [X31+12]
	158 Compare W8, 0
	159 JumpIfEqual {163}
	160 Move X0, X19
	161 Move X1, X31
	162 Call Monitor.Exit, X0
	163 Compare X21, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X20
	166 Call 0x1D2D690
	167 Move X0, X21
	168 Call 0x1C17F18
	169 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x036ABC20 MOVZ W0, 0x2
	0x036ABC24 MOV X1, X21
	0x036ABC28 BL 0x36A9D98
	0x036ABC2C STR X0, [X19 + 0x38]
	0x036ABC30 LDR W8, [X31 + 0x18]
	0x036ABC34 SUB W8, W8, 0x1
	0x036ABC38 STR W8, [X31 + 0x18]
	0x036ABC3C B 0x36ABDCC
	0x036ABC40 CMP W20, 0x19
	0x036ABC44 B.NE 0x36ABA8C
	0x036ABC48 LDR W8, [X31 + 0x18]
	0x036ABC4C ADD X9, X31, 0x8
	0x036ABC50 SUB W8, W8, 0x1
	0x036ABC54 STR W8, [X31 + 0x18]
	0x036ABC58 LDR X0, [X9, W8, SXTW]
	0x036ABC5C BL 0x1C16F18
	0x036ABC60 MOVZ W0, 0x8
	0x036ABC64 BL 0x3EB1AF0
	0x036ABC68 LDR X8, [X21]
	0x036ABC6C STR X8, [X0]
	0x036ABC70 ADRP X1, 0x809000
	0x036ABC74 ADD X1, X1, 0xE58
	0x036ABC78 MOV X2, X31
	0x036ABC7C BL 0x3EB1B00
	0x036ABC80 B 0x36AC0A8
	0x036ABC84 BL 0x1C16F20
	0x036ABC88 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD36000
	006 Move X20, 0xA50000
	007 Move W8, [X21+2514]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA50000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2514], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Finalize()

Disassembly:
	0x036C24E4 LDR X0, [X0 + 0xD8]
	0x036C24E8 BL 0x1C16D08
	0x036C24EC BL 0x1C16F10
	0x036C24F0 MOV W1, W19
	0x036C24F4 MOV X2, X31
	0x036C24F8 MOV X20, X0
	0x036C24FC BL 0x36C6F04
	0x036C2500 ADRP X0, 0xA7D000
	0x036C2504 LDR X0, [X0 + 0xA48]
	0x036C2508 BL 0x1C16D08
	0x036C250C MOV X1, X0
	0x036C2510 MOV X0, X20
	0x036C2514 BL 0x1C16DEC
	0x036C2518 BL 0x1C16F20
	0x036C251C STR X30, [X31 - 0x40]!
	0x036C2520 STP X24, X23, [X31 + 0x10]
	0x036C2524 STP X22, X21, [X31 + 0x20]
	0x036C2528 STP X20, X19, [X31 + 0x30]
	0x036C252C ADRP X20, 0xD1E000
	0x036C2530 LDRB W8, [X20 + 0x9E0]
	0x036C2534 MOV X21, X2
	0x036C2538 MOV X22, X1
	0x036C253C MOV X19, X0
	0x036C2540 TBNZ X8, 0x0, 0x36C2570
	0x036C2544 ADRP X0, 0xA7D000
	0x036C2548 LDR X0, [X0 + 0x9F0]
	0x036C254C BL 0x1C16CF4
	0x036C2550 ADRP X0, 0xA7C000
	0x036C2554 LDR X0, [X0 + 0xFB8]
	0x036C2558 BL 0x1C16CF4
	0x036C255C ADRP X0, 0xA3A000
	0x036C2560 LDR X0, [X0 + 0x788]
	0x036C2564 BL 0x1C16CF4
	0x036C2568 MOVZ W8, 0x1
	0x036C256C STRB W8, [X20 + 0x9E0]
	0x036C2570 MOV X0, X19
	0x036C2574 BL 0x36C19E0
	0x036C2578 LDRB W8, [X19 + 0x51]
	0x036C257C CBZ W8, 0x36C2648
	0x036C2580 LDRB W8, [X19 + 0x19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+392]
	008 Move X2, [X8+400]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void InternalShutdown(System.Net.Sockets.SocketShutdown how)

Disassembly:
	0x036BCC2C BL 0x1C16D08
	0x036BCC30 MOV X1, X20
	0x036BCC34 MOV X2, X31
	0x036BCC38 BL 0x32094D4
	0x036BCC3C MOV X20, X0
	0x036BCC40 ADRP X0, 0xA65000
	0x036BCC44 LDR X0, [X0 + 0x7A8]
	0x036BCC48 BL 0x1C16D08
	0x036BCC4C BL 0x1C16F10
	0x036BCC50 MOV X1, X20
	0x036BCC54 MOV X2, X19
	0x036BCC58 MOV X3, X31
	0x036BCC5C MOV X21, X0
	0x036BCC60 BL 0x32E2390
	0x036BCC64 ADRP X0, 0xA83000
	0x036BCC68 LDR X0, [X0 + 0x7F8]
	0x036BCC6C BL 0x1C16D08
	0x036BCC70 MOV X1, X0
	0x036BCC74 MOV X0, X21
	0x036BCC78 BL 0x1C16DEC
	0x036BCC7C B 0x36BCC80
	0x036BCC80 CMP W1, W20
	0x036BCC84 B.NE 0x36BCC94
	0x036BCC88 BL 0x3EB1AD0
	0x036BCC8C BL 0x3EB1AE0
	0x036BCC90 B 0x36BCB58
	0x036BCC94 BL 0x1D2C690
	0x036BCC98 STR X30, [X31 - 0x60]!
	0x036BCC9C STP X28, X27, [X31 + 0x10]
	0x036BCCA0 STP X26, X25, [X31 + 0x20]
	0x036BCCA4 STP X24, X23, [X31 + 0x30]
	0x036BCCA8 STP X22, X21, [X31 + 0x40]
	0x036BCCAC STP X20, X19, [X31 + 0x50]
	0x036BCCB0 ADRP X24, 0xD24000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD25000
	007 Move W8, [X21+2515]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA41000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2515], W8
	019 Move [X31+12], W31
	020 Move W8, [X20+82]
	021 Compare W8, 0
	022 JumpIfEqual {37}
	023 Move W8, [X20+84]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, 0xA41000
	026 Move X8, [X8+1928]
	027 Move X20, [X20+48]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X2, X31, 12
	034 Move X0, X20
	035 Move W1, W19
	036 Call Socket.Shutdown_internal, X0, X1, X2
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return 

Method: System.Void SetSocketOption(System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, System.Int32 optionValue, System.Boolean silent)

Disassembly:
	0x036BEB4C MOV X2, X19
	0x036BEB50 MOV X3, X31
	0x036BEB54 MOV X21, X0
	0x036BEB58 BL 0x32E2390
	0x036BEB5C MOV X19, X21
	0x036BEB60 MOV X0, X19
	0x036BEB64 LDP X20, X19, [X31 + 0x20]
	0x036BEB68 LDP X22, X21, [X31 + 0x10]
	0x036BEB6C LDR X30, [X31], #0x30
	0x036BEB70 RET
	0x036BEB74 BL 0x1C16F20
	0x036BEB78 SUB X31, X31, 0x80
	0x036BEB7C STR X30, [X31 + 0x40]
	0x036BEB80 STP X24, X23, [X31 + 0x50]
	0x036BEB84 STP X22, X21, [X31 + 0x60]
	0x036BEB88 STP X20, X19, [X31 + 0x70]
	0x036BEB8C ADRP X22, 0xD22000
	0x036BEB90 LDRB W8, [X22 + 0x9C8]
	0x036BEB94 MOV W20, W2
	0x036BEB98 MOV X19, X1
	0x036BEB9C MOV X21, X0
	0x036BEBA0 TBNZ X8, 0x0, 0x36BEBE8
	0x036BEBA4 ADRP X0, 0xA64000
	0x036BEBA8 LDR X0, [X0 + 0xE40]
	0x036BEBAC BL 0x1C16CF4
	0x036BEBB0 ADRP X0, 0xA64000
	0x036BEBB4 LDR X0, [X0 + 0xE30]
	0x036BEBB8 BL 0x1C16CF4
	0x036BEBBC ADRP X0, 0xA64000
	0x036BEBC0 LDR X0, [X0 + 0xDA0]
	0x036BEBC4 BL 0x1C16CF4
	0x036BEBC8 ADRP X0, 0xA3E000
	0x036BEBCC LDR X0, [X0 + 0x788]
	0x036BEBD0 BL 0x1C16CF4
	0x036BEBD4 ADRP X0, 0xA81000
	0x036BEBD8 LDR X0, [X0 + 0x900]
	0x036BEBDC BL 0x1C16CF4
	0x036BEBE0 MOVZ W8, 0x1
	0x036BEBE4 STRB W8, [X22 + 0x9C8]
	0x036BEBE8 STRB W31, [X31 + 0x4C]
	0x036BEBEC STP X31, X31, [X31 + 0x20]
	0x036BEBF0 STR X31, [X31 + 0x30]
	0x036BEBF4 CBZ X19, 0x36BECF4
	0x036BEBF8 ADRP X8, 0xA81000
	0x036BEBFC LDR X8, [X8 + 0x900]
	0x036BEC00 LDR W22, [X19 + 0x40]
	0x036BEC04 LDR W23, [X19 + 0x38]
	0x036BEC08 LDRB W24, [X19 + 0x99]
	0x036BEC0C LDR X2, [X8]
	0x036BEC10 ADD X8, X31, 0x8
	0x036BEC14 ADD X1, X31, 0x4C
	0x036BEC18 MOV X0, X19
	0x036BEC1C BL 0x2695E34
	0x036BEC20 LDUR V0, [X31 + 0x8]
	0x036BEC24 LDR X8, [X31 + 0x18]
	0x036BEC28 LDRB W9, [X31 + 0x4C]
	0x036BEC2C STR V0, [X31 + 0x2]
	0x036BEC30 STR X8, [X31 + 0x30]
	0x036BEC34 CBZ W9, 0x36BEC4C
	0x036BEC38 CBZ X21, 0x36BECF4
	0x036BEC3C AND W2, W20, 0x1
	0x036BEC40 MOV X0, X21
	0x036BEC44 MOV X1, X19
	0x036BEC48 BL 0x36BECF8
	0x036BEC4C ADRP X19, 0xA64000
	0x036BEC50 LDR X19, [X19 + 0xDA0]
	0x036BEC54 CBZ W22, 0x36BECB4
	0x036BEC58 ADRP X8, 0xA3E000
	0x036BEC5C LDR X8, [X8 + 0x788]
	0x036BEC60 LDR X0, [X8]
	0x036BEC64 LDR W8, [X0 + 0xE0]
	0x036BEC68 CBNZ W8, 0x36BEC70
	0x036BEC6C BL 0x1C16DFC
	0x036BEC70 ADRP X20, 0xA64000
	0x036BEC74 LDR X20, [X20 + 0xE40]
	0x036BEC78 CMP W24, 0x0
	0x036BEC7C CSET W1, NE
	0x036BEC80 MOV W0, W22
	0x036BEC84 BL 0x36BEA90
	0x036BEC88 LDR X8, [X19]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD23000
	009 Move W8, [X24+2516]
	010 Move W19, W4
	011 Move W20, W3
	012 Move W21, W2
	013 Move W22, W1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA3F000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2516], W8
	024 Move [X31+12], W31
	025 Move W8, [X23+84]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W8, [X23+24]
	028 Compare W8, 0
	029 JumpIfEqual {53}
	030 Move TEMP, X19
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {76}
	034 Move X0, X23
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Move X19, X0
	038 Call 0x19913C0
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X9, [X8+360]
	042 Move X1, [X8+368]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X19, X0
	045 Move X0, 0xA5F000
	046 Move X0, [X0+1208]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X1, X19
	050 Move X2, X31
	051 Move X20, X0
	052 Call ObjectDisposedException..ctor, X0, X1
	053 Move X8, 0xA3F000
	054 Move X8, [X8+1928]
	055 Move X23, [X23+48]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add X6, X31, 12
	062 Move X0, X23
	063 Move W1, W22
	064 Move W2, W21
	065 Move X3, X31
	066 Move X4, X31
	067 Move W5, W20
	068 Call Socket.SetSocketOption_internal, X0, X1, X2, X3, X4, X5, X6
	069 Move TEMP, X19
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {76}
	073 Move W19, [X31+12]
	074 Compare W19, 0
	075 JumpIfNotEqual {84}
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move X30, [X31+64]
	083 Return 
	084 Move X0, 0xA74000
	085 Move X0, [X0+216]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move W1, W19
	089 Move X2, X31
	090 Move X20, X0
	091 Call SocketException..ctor, X0, X1
	092 Move X0, 0xA82000
	093 Move X0, [X0+2160]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X20
	097 Call 0x1C17DEC

Method: System.Void .ctor(System.Net.Sockets.AddressFamily family, System.Net.Sockets.SocketType type, System.Net.Sockets.ProtocolType proto, System.Net.Sockets.SafeSocketHandle safe_handle)

Disassembly:
	0x036C27FC ADRP X24, 0xA5C000
	0x036C2800 LDRB W8, [X25 + 0x9E1]
	0x036C2804 LDR X23, [X23 + 0xA68]
	0x036C2808 LDR X24, [X24 + 0xDD0]
	0x036C280C MOV X21, X3
	0x036C2810 MOV X19, X2
	0x036C2814 MOV X20, X1
	0x036C2818 MOV X22, X0
	0x036C281C TBNZ X8, 0x0, 0x36C284C
	0x036C2820 ADRP X0, 0xA7D000
	0x036C2824 LDR X0, [X0 + 0xA70]
	0x036C2828 BL 0x1C16CF4
	0x036C282C ADRP X0, 0xA7D000
	0x036C2830 LDR X0, [X0 + 0xA68]
	0x036C2834 BL 0x1C16CF4
	0x036C2838 ADRP X0, 0xA5C000
	0x036C283C LDR X0, [X0 + 0xDD0]
	0x036C2840 BL 0x1C16CF4
	0x036C2844 MOVZ W8, 0x1
	0x036C2848 STRB W8, [X25 + 0x9E1]
	0x036C284C MOV X0, X22
	0x036C2850 BL 0x36C19E0
	0x036C2854 LDR X2, [X23]
	0x036C2858 LDR X3, [X24]
	0x036C285C MOV X1, X21
	0x036C2860 BL 0x36C28D8
	0x036C2864 CBZ X0, 0x36C28D4
	0x036C2868 LDRB W8, [X0 + 0x29]
	0x036C286C MOV X21, X0
	0x036C2870 CBNZ W8, 0x36C2890
	0x036C2874 MOV X0, X21
	0x036C2878 MOV X1, X31
	0x036C287C BL 0x362E3EC
	0x036C2880 CBZ X0, 0x36C28D4
	0x036C2884 LDR X8, [X0]
	0x036C2888 LDP X9, X1, [X8 + 0x1D8]
	0x036C288C BLR X9
	0x036C2890 ADRP X22, 0xA7D000
	0x036C2894 LDR X22, [X22 + 0xA70]
	0x036C2898 MOV X0, X21
	0x036C289C MOV X1, X31
	0x036C28A0 BL 0x36CD1E8
	0x036C28A4 LDR X1, [X22]
	0x036C28A8 ADD X0, X21, 0x50
	0x036C28AC BL 0x319E584
	0x036C28B0 STR X0, [X20]
	0x036C28B4 LDR W8, [X21 + 0xA0]
	0x036C28B8 LDP X24, X23, [X31 + 0x10]
	0x036C28BC STR W8, [X19]
	0x036C28C0 LDR X0, [X21 + 0x98]
	0x036C28C4 LDP X20, X19, [X31 + 0x30]
	0x036C28C8 LDP X22, X21, [X31 + 0x20]
	0x036C28CC LDP X30, X25, [X31], #0x40
	0x036C28D0 RET
	0x036C28D4 BL 0x1C16F20
	0x036C28D8 STR X30, [X31 - 0x30]!
	0x036C28DC STP X22, X21, [X31 + 0x10]
	0x036C28E0 STP X20, X19, [X31 + 0x20]
	0x036C28E4 ADRP X22, 0xD1E000
	0x036C28E8 LDRB W8, [X22 + 0xA10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0xD1F000
	012 Move X26, 0xA61000
	013 Move X25, 0xA3B000
	014 Move W8, [X24+2517]
	015 Move X26, [X26+3760]
	016 Move X25, [X25+1928]
	017 Move X19, X4
	018 Move W20, W3
	019 Move W22, W2
	020 Move W23, W1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0xA61000
	027 Move X0, [X0+3760]
	028 Call 0x1C17CF4
	029 Move X0, 0xA3B000
	030 Move X0, [X0+1928]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+2517], W8
	034 Move X0, [X26]
	035 Call 0x1C17F10
	036 Move W1, 1
	037 Move W2, 1
	038 Move X3, X31
	039 Move X24, X0
	040 Move W27, 1
	041 Call SemaphoreSlim..ctor, X0, X1, X2
	042 Move [X21+64], X24
	043 Move X0, [X26]
	044 Call 0x1C17F10
	045 Move W1, 1
	046 Move W2, 1
	047 Move X3, X31
	048 Move X24, X0
	049 Call SemaphoreSlim..ctor, X0, X1, X2
	050 Move X0, X21
	051 Move X1, X31
	052 Move [X21+72], X24
	053 Move [X21+80], W27
	054 Call Object..ctor, X0
	055 Move [X21+32], W23
	056 Move [X21+36], W22
	057 Move [X21+40], W20
	058 Move [X21+48], X19
	059 Move [X21+82], W27
	060 Move X0, [X25]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X24, [X31+32]
	070 Move X23, [X31+40]
	071 Move X26, [X31+16]
	072 Move X25, [X31+24]
	073 Move X30, [X31+80]
	074 Move X27, [X31+88]
	075 Call Socket.InitializeSockets
	076 Return 

Method: System.Void SocketDefaults()

Disassembly:
	0x036C0088 BL 0x1C16D6C
	0x036C008C STR X24, [X31 + 0x10]
	0x036C0090 CBZ X0, 0x36C00A8
	0x036C0094 LDR W8, [X0 + 0x18]
	0x036C0098 ADD X9, X0, 0x20
	0x036C009C CMP W8, 0x0
	0x036C00A0 CSEL X23, X31, X9, EQ
	0x036C00A4 B 0x36C00AC
	0x036C00A8 MOV X23, X31
	0x036C00AC LDR W25, [X31 + 0x4C]
	0x036C00B0 CMP W25, 0x1
	0x036C00B4 B.LT 0x36C0230
	0x036C00B8 STR X26, [X31]
	0x036C00BC STR W21, [X31 + 0xC]
	0x036C00C0 ADRP X27, 0xA7F000
	0x036C00C4 ADRP X28, 0xA5B000
	0x036C00C8 ADRP X29, 0xA5B000
	0x036C00CC ADRP X19, 0xA7F000
	0x036C00D0 LDR X27, [X27 + 0x990]
	0x036C00D4 LDR X28, [X28 + 0x5B0]
	0x036C00D8 LDR X29, [X29 + 0x850]
	0x036C00DC LDR X19, [X19 + 0x998]
	0x036C00E0 MOV W24, W31
	0x036C00E4 LDR X8, [X22]
	0x036C00E8 LDR X1, [X27]
	0x036C00EC LDRH W9, [X8 + 0x12E]
	0x036C00F0 CBZ X9, 0x36C0114
	0x036C00F4 LDR X10, [X8 + 0xB0]
	0x036C00F8 ADD X10, X10, 0x8
	0x036C00FC LDUR X11, [X10 - 0x8]
	0x036C0100 CMP X11, X1
	0x036C0104 B.EQ 0x36C0124
	0x036C0108 SUBS X9, X9, 0x1
	0x036C010C ADD X10, X10, 0x10
	0x036C0110 B.NE 0x36C00FC
	0x036C0114 MOV X0, X22
	0x036C0118 MOV W2, W31
	0x036C011C BL 0x1C5C788
	0x036C0120 B 0x36C0130
	0x036C0124 LDRSW X9, [X10]
	0x036C0128 ADD X8, X8, X9, 0x4, LSL
	0x036C012C ADD X0, X8, 0x138
	0x036C0130 LDP X8, X2, [X0]
	0x036C0134 MOV X0, X22
	0x036C0138 MOV W1, W24
	0x036C013C BLR X8
	0x036C0140 MOV X26, X0
	0x036C0144 LDR X0, [X28]
	0x036C0148 MOV X25, X1
	0x036C014C LDR W8, [X0 + 0xE0]
	0x036C0150 CBNZ W8, 0x36C0158
	0x036C0154 BL 0x1C16DFC
	0x036C0158 TBNZ X25, 0x1F, 0x36C02AC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X0, X19
	008 Move W1, W31
	009 Call Socket.set_DontFragment, X0, X1
	010 Move W8, [X19+40]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, X19
	013 Move W1, W31
	014 Call Socket.set_NoDelay, X0, X1
	015 Move W8, [X19+36]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W1, 1
	018 Move X0, X19
	019 Call Socket.set_DualMode, X0, X1
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X19, X0
	025 Move X0, X19
	026 Call 0x3EB2AD0
	027 Move X19, X0
	028 Move X0, 0xA72000
	029 Move X0, [X0+216]
	030 Call 0x1C17D08
	031 Move X8, [X19]
	032 Move X1, [X8]
	033 Call 0x1C18270
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {42}
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Call 0x3EB2AE0
	041 Return 
	042 Move W0, 8
	043 Call 0x3EB2AF0
	044 Move X8, [X19]
	045 Move [X0], X8
	046 Move X1, 0x7F5000
	047 Add X1, X1, 3672
	048 Move X2, X31
	049 Call 0x3EB2B00
	050 Move X19, X0
	051 Call 0x3EB2AE0
	052 Move X0, X19
	053 Call 0x1D2D690
	054 Call 0x1991590

Method: System.IntPtr Socket_icall(System.Net.Sockets.AddressFamily family, System.Net.Sockets.SocketType type, System.Net.Sockets.ProtocolType proto, out System.Int32 error)

Disassembly:
	0x036BFFA0 ADD X10, X10, 0x8

ISIL:
	001 Call 0x1C880E4
	002 Return X0

Method: System.Boolean get_IsBound()

Disassembly:
	0x036C28EC MOV X19, X3
	0x036C28F0 MOV X20, X2

ISIL:
	001 Move W0, [X0+81]
	002 Return X0

Method: System.Net.EndPoint get_LocalEndPoint()

Disassembly:
	0x036C28F4 MOV X21, X1
	0x036C28F8 TBNZ X8, 0x0, 0x36C2910
	0x036C28FC ADRP X0, 0xA7C000
	0x036C2900 LDR X0, [X0 + 0xFB8]
	0x036C2904 BL 0x1C16CF4
	0x036C2908 MOVZ W8, 0x1
	0x036C290C STRB W8, [X22 + 0xA10]
	0x036C2910 CBZ X21, 0x36C295C
	0x036C2914 ADRP X8, 0xA7C000
	0x036C2918 LDR X8, [X8 + 0xFB8]
	0x036C291C LDR X9, [X21]
	0x036C2920 LDR X8, [X8]
	0x036C2924 CMP X9, X8
	0x036C2928 B.NE 0x36C2980
	0x036C292C ADD X0, X21, 0xA8
	0x036C2930 MOVZ W1, 0x1
	0x036C2934 MOV W2, W31
	0x036C2938 MOV X3, X31
	0x036C293C BL 0x33E7AB4
	0x036C2940 CMP W0, 0x1
	0x036C2944 B.EQ 0x36C29B8
	0x036C2948 MOV X0, X21
	0x036C294C LDP X20, X19, [X31 + 0x20]
	0x036C2950 LDP X22, X21, [X31 + 0x10]
	0x036C2954 LDR X30, [X31], #0x30
	0x036C2958 RET
	0x036C295C ADRP X0, 0xA36000
	0x036C2960 LDR X0, [X0 + 0x528]
	0x036C2964 BL 0x1C16D08
	0x036C2968 BL 0x1C16F10
	0x036C296C MOV X1, X19
	0x036C2970 MOV X2, X31
	0x036C2974 MOV X20, X0
	0x036C2978 BL 0x330E100
	0x036C297C B 0x36C29F8
	0x036C2980 ADRP X0, 0xA39000
	0x036C2984 LDR X0, [X0 + 0x578]
	0x036C2988 BL 0x1C16D08
	0x036C298C BL 0x1C16F10
	0x036C2990 MOV X20, X0
	0x036C2994 ADRP X0, 0xA65000
	0x036C2998 LDR X0, [X0 + 0x618]
	0x036C299C BL 0x1C16D08
	0x036C29A0 MOV X1, X0
	0x036C29A4 MOV X0, X20
	0x036C29A8 MOV X2, X19
	0x036C29AC MOV X3, X31
	0x036C29B0 BL 0x330E16C
	0x036C29B4 B 0x36C29F8
	0x036C29B8 ADRP X0, 0xA7D000
	0x036C29BC LDR X0, [X0 + 0xA78]
	0x036C29C0 BL 0x1C16D08
	0x036C29C4 MOV X1, X0
	0x036C29C8 MOV X0, X20
	0x036C29CC MOV X2, X31
	0x036C29D0 BL 0x321B938
	0x036C29D4 MOV X19, X0
	0x036C29D8 ADRP X0, 0xA31000
	0x036C29DC LDR X0, [X0 + 0x5B0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD1F000
	007 Move W8, [X20+2518]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA3B000
	014 Move X0, [X0+1928]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2518], W8
	018 Move X0, X19
	019 Move [X31+12], W31
	020 Call Socket.ThrowIfDisposedAndClosed, X0
	021 Move X8, [X19+56]
	022 Compare X8, 0
	023 JumpIfEqual {48}
	024 Move X8, 0xA3B000
	025 Move X8, [X8+1928]
	026 Move X20, [X19+48]
	027 Move W21, [X19+32]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X2, X31, 12
	034 Move X0, X20
	035 Move W1, W21
	036 Call Socket.LocalEndPoint_internal, X0, X1, X2
	037 Move W8, [X31+12]
	038 Compare W8, 0
	039 JumpIfNotEqual {55}
	040 Move X1, X0
	041 Move X0, [X19+56]
	042 Compare X0, 0
	043 JumpIfEqual {70}
	044 Move X8, [X0]
	045 Move X9, [X8+408]
	046 Move X2, [X8+416]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X0, X31
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move X21, [X31+24]
	053 Add X31, X31, 48
	054 Return X0
	055 Move X0, 0xA70000
	056 Move X0, [X0+216]
	057 Move W19, W8
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move W1, W19
	061 Move X2, X31
	062 Move X20, X0
	063 Call SocketException..ctor, X0, X1
	064 Move X0, 0xA7E000
	065 Move X0, [X0+2584]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X20
	069 Call 0x1C17DEC
	070 Call 0x1C17F20

Method: System.Net.SocketAddress LocalEndPoint_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Int32 family, out System.Int32 error)

Disassembly:
	0x036C2A64 CBZ X19, 0x36C2B18
	0x036C2A68 ADRP X8, 0xA3E000
	0x036C2A6C LDR X8, [X8 + 0xBB8]
	0x036C2A70 LDR X9, [X19]
	0x036C2A74 LDR X8, [X8]
	0x036C2A78 LDRB W11, [X9 + 0x130]
	0x036C2A7C LDRB W10, [X8 + 0x130]
	0x036C2A80 CMP W11, W10
	0x036C2A84 B.CC 0x36C2AB0
	0x036C2A88 LDR X9, [X9 + 0xC8]
	0x036C2A8C ADD X9, X9, X10, 0x3, LSL
	0x036C2A90 LDUR X9, [X9 - 0x8]
	0x036C2A94 CMP X9, X8
	0x036C2A98 B.NE 0x36C2AB0
	0x036C2A9C MOV X0, X20
	0x036C2AA0 MOV X1, X19
	0x036C2AA4 BL 0x36C2B88
	0x036C2AA8 MOV X19, X0
	0x036C2AAC CBZ X0, 0x36C2B84
	0x036C2AB0 LDR X8, [X19]
	0x036C2AB4 ADRP X22, 0xA3A000
	0x036C2AB8 LDR X21, [X20 + 0x30]
	0x036C2ABC MOV X0, X19
	0x036C2AC0 LDP X9, X1, [X8 + 0x188]
	0x036C2AC4 LDR X22, [X22 + 0x788]
	0x036C2AC8 BLR X9
	0x036C2ACC LDR X8, [X22]
	0x036C2AD0 MOV X22, X0
	0x036C2AD4 LDR W9, [X8 + 0xE0]
	0x036C2AD8 CBNZ W9, 0x36C2AE4
	0x036C2ADC MOV X0, X8
	0x036C2AE0 BL 0x1C16DFC
	0x036C2AE4 ADD X2, X31, 0xC
	0x036C2AE8 MOV X0, X21
	0x036C2AEC MOV X1, X22
	0x036C2AF0 BL 0x36C2C48
	0x036C2AF4 LDR W21, [X31 + 0xC]
	0x036C2AF8 CBNZ W21, 0x36C2B4C
	0x036C2AFC MOVZ W8, 0x1
	0x036C2B00 STRB W8, [X20 + 0x51]
	0x036C2B04 STR X19, [X20 + 0x38]
	0x036C2B08 LDP X20, X19, [X31 + 0x20]
	0x036C2B0C LDP X22, X21, [X31 + 0x10]
	0x036C2B10 LDR X30, [X31], #0x30
	0x036C2B14 RET
	0x036C2B18 ADRP X0, 0xA36000
	0x036C2B1C LDR X0, [X0 + 0x528]
	0x036C2B20 BL 0x1C16D08
	0x036C2B24 BL 0x1C16F10
	0x036C2B28 MOV X19, X0
	0x036C2B2C ADRP X0, 0xA7D000
	0x036C2B30 LDR X0, [X0 + 0xA88]
	0x036C2B34 BL 0x1C16D08
	0x036C2B38 MOV X1, X0
	0x036C2B3C MOV X0, X19
	0x036C2B40 MOV X2, X31
	0x036C2B44 BL 0x330E100
	0x036C2B48 B 0x36C2B6C
	0x036C2B4C ADRP X0, 0xA6F000
	0x036C2B50 LDR X0, [X0 + 0xD8]
	0x036C2B54 BL 0x1C16D08
	0x036C2B58 BL 0x1C16F10
	0x036C2B5C MOV W1, W21
	0x036C2B60 MOV X2, X31
	0x036C2B64 MOV X19, X0
	0x036C2B68 BL 0x36C6F04
	0x036C2B6C ADRP X0, 0xA7D000
	0x036C2B70 LDR X0, [X0 + 0xA90]
	0x036C2B74 BL 0x1C16D08
	0x036C2B78 MOV X1, X0
	0x036C2B7C MOV X0, X19
	0x036C2B80 BL 0x1C16DEC
	0x036C2B84 BL 0x1C16F20
	0x036C2B88 STP X30, X21, [X31 - 0x20]!
	0x036C2B8C STP X20, X19, [X31 + 0x10]
	0x036C2B90 ADRP X21, 0xD1E000
	0x036C2B94 LDRB W8, [X21 + 0xA12]
	0x036C2B98 MOV X19, X1
	0x036C2B9C MOV X20, X0
	0x036C2BA0 TBNZ X8, 0x0, 0x36C2BB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1F000
	007 Move W8, [X22+2519]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA3B000
	016 Move X0, [X0+1928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2519], W8
	020 Move [X31+12], W31
	021 Compare X19, 0
	022 JumpIfEqual {56}
	023 Add X1, X31, 12
	024 Move X0, X19
	025 Move X2, X31
	026 Call SafeHandle.DangerousAddRef, X0, X1
	027 Move X8, 0xA3B000
	028 Move X8, [X8+1928]
	029 Move X22, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Move W1, W21
	037 Move X2, X20
	038 Call 0x1C87AD0
	039 Move W8, [X31+12]
	040 Move X21, X0
	041 Compare W8, 0
	042 JumpIfEqual {49}
	043 Move X20, X31
	044 Move X0, X19
	045 Move X1, X31
	046 Call SafeHandle.DangerousRelease, X0
	047 Compare X20, 0
	048 JumpIfNotEqual {72}
	049 Move X0, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0
	056 Call 0x1C17F20
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X21
	060 Call 0x3EB2AD0
	061 Move X20, [X0]
	062 Call 0x3EB2AE0
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {69}
	066 Compare X19, 0
	067 JumpIfEqual {75}
	068 Move X21, X31
	069 Move X21, X31
	070 Compare X20, 0
	071 JumpIfEqual {49}
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Move X20, X31
	075 Call 0x1C17F20
	076 Move X21, X0
	077 Move W8, [X31+12]
	078 Compare W8, 0
	079 JumpIfEqual {86}
	080 Compare X19, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17F20
	083 Move X0, X19
	084 Move X1, X31
	085 Call SafeHandle.DangerousRelease, X0
	086 Compare X20, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X21
	089 Call 0x1D2D690
	090 Move X0, X20
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.Net.SocketAddress LocalEndPoint_icall(System.IntPtr socket, System.Int32 family, out System.Int32 error)

Disassembly:
	0x036C2BA4 ADRP X0, 0xA3E000

ISIL:
	001 Call 0x1C87AD0
	002 Return X0

Method: System.Boolean get_Blocking()

Disassembly:
	0x036C2BA8 LDR X0, [X0 + 0xBB8]
	0x036C2BAC BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_Blocking(System.Boolean value)

Disassembly:
	0x036C2BB0 MOVZ W8, 0x1
	0x036C2BB4 STRB W8, [X21 + 0xA12]
	0x036C2BB8 LDR W8, [X20 + 0x20]
	0x036C2BBC CMP W8, 0x17
	0x036C2BC0 B.NE 0x36C2C34
	0x036C2BC4 MOV X0, X20
	0x036C2BC8 BL 0x36BF538
	0x036C2BCC TBZ X0, 0x0, 0x36C2C34
	0x036C2BD0 CBZ X19, 0x36C2C44
	0x036C2BD4 LDR X8, [X19]
	0x036C2BD8 MOV X0, X19
	0x036C2BDC LDP X9, X1, [X8 + 0x178]
	0x036C2BE0 BLR X9
	0x036C2BE4 CMP W0, 0x2
	0x036C2BE8 B.NE 0x36C2C34
	0x036C2BEC LDR X0, [X19 + 0x10]
	0x036C2BF0 CBZ X0, 0x36C2C44
	0x036C2BF4 MOV X1, X31
	0x036C2BF8 BL 0x366DD6C
	0x036C2BFC ADRP X8, 0xA3E000
	0x036C2C00 LDR W19, [X19 + 0x18]
	0x036C2C04 LDR X8, [X8 + 0xBB8]
	0x036C2C08 MOV X20, X0
	0x036C2C0C LDR X8, [X8]
	0x036C2C10 MOV X0, X8
	0x036C2C14 BL 0x1C16F10
	0x036C2C18 MOV X1, X20
	0x036C2C1C MOV W2, W19
	0x036C2C20 MOV X3, X31
	0x036C2C24 MOV X21, X0
	0x036C2C28 BL 0x366E898
	0x036C2C2C MOV X0, X21
	0x036C2C30 B 0x36C2C38
	0x036C2C34 MOV X0, X19
	0x036C2C38 LDP X20, X19, [X31 + 0x10]
	0x036C2C3C LDP X30, X21, [X31], #0x20
	0x036C2C40 RET
	0x036C2C44 BL 0x1C16F20
	0x036C2C48 STR X30, [X31 - 0x30]!
	0x036C2C4C STP X22, X21, [X31 + 0x10]
	0x036C2C50 STP X20, X19, [X31 + 0x20]
	0x036C2C54 ADRP X22, 0xD1E000
	0x036C2C58 LDRB W8, [X22 + 0x9E4]
	0x036C2C5C MOV X20, X2
	0x036C2C60 MOV X21, X1
	0x036C2C64 MOV X19, X0
	0x036C2C68 TBNZ X8, 0x0, 0x36C2C80
	0x036C2C6C ADRP X0, 0xA3A000
	0x036C2C70 LDR X0, [X0 + 0x788]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1F000
	007 Move X21, 0xA3B000
	008 Move W8, [X22+2520]
	009 Move X21, [X21+1928]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA3B000
	017 Move X0, [X0+1928]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2520], W8
	021 Move X0, X19
	022 Move [X31+12], W31
	023 Call Socket.ThrowIfDisposedAndClosed, X0
	024 Move X0, [X21]
	025 Move X21, [X19+48]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 And W22, W20, 1
	031 Add X2, X31, 12
	032 Move X0, X21
	033 Move W1, W22
	034 Call Socket.Blocking_internal, X0, X1, X2
	035 Move W20, [X31+12]
	036 Compare W20, 0
	037 JumpIfNotEqual {45}
	038 Move [X19+80], W22
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, 0xA70000
	046 Move X0, [X0+216]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move W1, W20
	050 Move X2, X31
	051 Move X19, X0
	052 Call SocketException..ctor, X0, X1
	053 Move X0, 0xA7E000
	054 Move X0, [X0+2600]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Call 0x1C17DEC

Method: System.Void Blocking_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Boolean block, out System.Int32 error)

Disassembly:
	0x036C2C74 BL 0x1C16CF4
	0x036C2C78 MOVZ W8, 0x1
	0x036C2C7C STRB W8, [X22 + 0x9E4]
	0x036C2C80 STRB W31, [X31 + 0xC]
	0x036C2C84 CBZ X19, 0x36C2CF0
	0x036C2C88 ADD X1, X31, 0xC
	0x036C2C8C MOV X0, X19
	0x036C2C90 MOV X2, X31
	0x036C2C94 BL 0x32BF948
	0x036C2C98 ADRP X8, 0xA3A000
	0x036C2C9C LDR X8, [X8 + 0x788]
	0x036C2CA0 LDR X22, [X19 + 0x10]
	0x036C2CA4 LDR X0, [X8]
	0x036C2CA8 LDR W8, [X0 + 0xE0]
	0x036C2CAC CBNZ W8, 0x36C2CB4
	0x036C2CB0 BL 0x1C16DFC
	0x036C2CB4 MOV X0, X22
	0x036C2CB8 MOV X1, X21
	0x036C2CBC MOV X2, X20
	0x036C2CC0 BL 0x1C859C4
	0x036C2CC4 LDRB W8, [X31 + 0xC]
	0x036C2CC8 CBZ W8, 0x36C2CE0
	0x036C2CCC MOV X20, X31
	0x036C2CD0 MOV X0, X19
	0x036C2CD4 MOV X1, X31
	0x036C2CD8 BL 0x32BFAB4
	0x036C2CDC CBNZ X20, 0x36C2CF4
	0x036C2CE0 LDP X20, X19, [X31 + 0x20]
	0x036C2CE4 LDP X22, X21, [X31 + 0x10]
	0x036C2CE8 LDR X30, [X31], #0x30
	0x036C2CEC RET
	0x036C2CF0 BL 0x1C16F20
	0x036C2CF4 MOV X0, X20
	0x036C2CF8 BL 0x1C16F18
	0x036C2CFC B 0x36C2D00
	0x036C2D00 MOV X21, X0
	0x036C2D04 CMP W1, 0x1
	0x036C2D08 B.NE 0x36C2D2C
	0x036C2D0C MOV X0, X21
	0x036C2D10 BL 0x3EB1AD0
	0x036C2D14 LDR X20, [X0]
	0x036C2D18 BL 0x3EB1AE0
	0x036C2D1C LDRB W8, [X31 + 0xC]
	0x036C2D20 CBZ W8, 0x36C2CDC
	0x036C2D24 CBNZ X19, 0x36C2CD0
	0x036C2D28 BL 0x1C16F20
	0x036C2D2C MOV X20, X31
	0x036C2D30 B 0x36C2D38
	0x036C2D34 MOV X21, X0
	0x036C2D38 LDRB W8, [X31 + 0xC]
	0x036C2D3C CBZ W8, 0x36C2D54
	0x036C2D40 CBNZ X19, 0x36C2D48
	0x036C2D44 BL 0x1C16F20
	0x036C2D48 MOV X0, X19
	0x036C2D4C MOV X1, X31
	0x036C2D50 BL 0x32BFAB4
	0x036C2D54 CBNZ X20, 0x36C2D60
	0x036C2D58 MOV X0, X21
	0x036C2D5C BL 0x1D2C690
	0x036C2D60 MOV X0, X20
	0x036C2D64 BL 0x1C16F18
	0x036C2D68 BL 0x1990590
	0x036C2D6C B 0x1C859C4
	0x036C2D70 SUB X31, X31, 0x30
	0x036C2D74 STP X30, X21, [X31 + 0x10]
	0x036C2D78 STP X20, X19, [X31 + 0x20]
	0x036C2D7C ADRP X21, 0xD1E000
	0x036C2D80 LDRB W8, [X21 + 0x9E5]
	0x036C2D84 MOV W20, W1
	0x036C2D88 MOV X19, X0
	0x036C2D8C TBNZ X8, 0x0, 0x36C2DA4
	0x036C2D90 ADRP X0, 0xA3A000
	0x036C2D94 LDR X0, [X0 + 0x788]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1F000
	007 Move W8, [X22+2521]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA3B000
	016 Move X0, [X0+1928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2521], W8
	020 Move [X31+12], W31
	021 Compare X19, 0
	022 JumpIfEqual {54}
	023 Add X1, X31, 12
	024 Move X0, X19
	025 Move X2, X31
	026 Call SafeHandle.DangerousAddRef, X0, X1
	027 Move X8, 0xA3B000
	028 Move X8, [X8+1928]
	029 Move X22, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 And W1, W21, 1
	036 Move X0, X22
	037 Move X2, X20
	038 Call 0x1C86CCC
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfEqual {48}
	042 Move X20, X31
	043 Move X0, X19
	044 Move X1, X31
	045 Call SafeHandle.DangerousRelease, X0
	046 Compare X20, 0
	047 JumpIfNotEqual {55}
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20
	055 Move X0, X20
	056 Call 0x1C17F18
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X21
	060 Call 0x3EB2AD0
	061 Move X20, [X0]
	062 Call 0x3EB2AE0
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {46}
	066 Compare X19, 0
	067 JumpIfNotEqual {43}
	068 Call 0x1C17F20
	069 Move X20, X31
	070 Move X21, X0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {80}
	074 Compare X19, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17F20
	077 Move X0, X19
	078 Move X1, X31
	079 Call SafeHandle.DangerousRelease, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X21
	083 Call 0x1D2D690
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: System.Void Blocking_icall(System.IntPtr socket, System.Boolean block, out System.Int32 error)

Disassembly:
	0x036C2D98 BL 0x1C16CF4
	0x036C2D9C MOVZ W8, 0x1

ISIL:
	001 And W1, W1, 1
	002 Call 0x1C86CCC
	003 Return 

Method: System.Boolean get_Connected()

Disassembly:
	0x036C2DA0 STRB W8, [X21 + 0x9E5]
	0x036C2DA4 MOV X0, X19

ISIL:
	001 Move W0, [X0+82]
	002 Return X0

Method: System.Void set_NoDelay(System.Boolean value)

Disassembly:
	0x036AD388 STR X21, [X19 + 0x58]
	0x036AD38C LDR X8, [X19 + 0x40]
	0x036AD390 CBZ X8, 0x36AD41C
	0x036AD394 LDRB W8, [X8 + 0x80]
	0x036AD398 STRB W8, [X19 + 0x98]
	0x036AD39C CBZ X20, 0x36AD3BC
	0x036AD3A0 LDR X0, [X20 + 0x50]
	0x036AD3A4 MOV X1, X31
	0x036AD3A8 MOV X2, X31
	0x036AD3AC BL 0x339D0E0
	0x036AD3B0 TBZ X0, 0x0, 0x36AD408
	0x036AD3B4 LDR X20, [X20 + 0x50]
	0x036AD3B8 B 0x36AD3D0
	0x036AD3BC MOV X0, X31
	0x036AD3C0 MOV X1, X31
	0x036AD3C4 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X19, X0
	006 Call Socket.ThrowIfDisposedAndClosed, X0
	007 Move X0, X19
	008 Call Socket.ThrowIfUdp, X0
	009 Compare X19, 0
	010 JumpIfEqual {20}
	011 And W3, W20, 1
	012 Move X0, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move W1, 6
	016 Move W2, 1
	017 Move X30, [X31+32]
	018 Call Socket.SetSocketOption, X0, X1, X2, X3
	019 Return 
	020 Call 0x1C17F20

Method: System.Net.EndPoint get_RemoteEndPoint()

Disassembly:
	0x036C2DF8 LDP X30, X21, [X31 + 0x10]
	0x036C2DFC ADD X31, X31, 0x30
	0x036C2E00 RET
	0x036C2E04 ADRP X0, 0xA6F000
	0x036C2E08 LDR X0, [X0 + 0xD8]
	0x036C2E0C BL 0x1C16D08
	0x036C2E10 BL 0x1C16F10
	0x036C2E14 MOV X19, X0
	0x036C2E18 MOVZ W1, 0x2726
	0x036C2E1C B 0x36C2E38
	0x036C2E20 ADRP X0, 0xA6F000
	0x036C2E24 LDR X0, [X0 + 0xD8]
	0x036C2E28 BL 0x1C16D08
	0x036C2E2C BL 0x1C16F10
	0x036C2E30 MOV X19, X0
	0x036C2E34 MOV W1, W20
	0x036C2E38 MOV X2, X31
	0x036C2E3C BL 0x36C6F04
	0x036C2E40 ADRP X0, 0xA7D000
	0x036C2E44 LDR X0, [X0 + 0xA98]
	0x036C2E48 BL 0x1C16D08
	0x036C2E4C MOV X1, X0
	0x036C2E50 MOV X0, X19
	0x036C2E54 BL 0x1C16DEC
	0x036C2E58 STR X30, [X31 - 0x30]!
	0x036C2E5C STP X22, X21, [X31 + 0x10]
	0x036C2E60 STP X20, X19, [X31 + 0x20]
	0x036C2E64 ADRP X22, 0xD1E000
	0x036C2E68 LDRB W8, [X22 + 0x9E6]
	0x036C2E6C MOV X20, X2
	0x036C2E70 MOV W21, W1
	0x036C2E74 MOV X19, X0
	0x036C2E78 TBNZ X8, 0x0, 0x36C2E90
	0x036C2E7C ADRP X0, 0xA3A000
	0x036C2E80 LDR X0, [X0 + 0x788]
	0x036C2E84 BL 0x1C16CF4
	0x036C2E88 MOVZ W8, 0x1
	0x036C2E8C STRB W8, [X22 + 0x9E6]
	0x036C2E90 STRB W31, [X31 + 0xC]
	0x036C2E94 CBZ X19, 0x36C2F00
	0x036C2E98 ADD X1, X31, 0xC
	0x036C2E9C MOV X0, X19
	0x036C2EA0 MOV X2, X31
	0x036C2EA4 BL 0x32BF948
	0x036C2EA8 ADRP X8, 0xA3A000
	0x036C2EAC LDR X8, [X8 + 0x788]
	0x036C2EB0 LDR X22, [X19 + 0x10]
	0x036C2EB4 LDR X0, [X8]
	0x036C2EB8 LDR W8, [X0 + 0xE0]
	0x036C2EBC CBNZ W8, 0x36C2EC4
	0x036C2EC0 BL 0x1C16DFC
	0x036C2EC4 MOV X0, X22
	0x036C2EC8 MOV W1, W21
	0x036C2ECC MOV X2, X20
	0x036C2ED0 BL 0x1C86220
	0x036C2ED4 LDRB W8, [X31 + 0xC]
	0x036C2ED8 CBZ W8, 0x36C2EF0
	0x036C2EDC MOV X20, X31
	0x036C2EE0 MOV X0, X19
	0x036C2EE4 MOV X1, X31
	0x036C2EE8 BL 0x32BFAB4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD1F000
	007 Move W8, [X20+2522]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA3B000
	014 Move X0, [X0+1928]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2522], W8
	018 Move X0, X19
	019 Move [X31+12], W31
	020 Call Socket.ThrowIfDisposedAndClosed, X0
	021 Move W8, [X19+82]
	022 Compare W8, 0
	023 JumpIfEqual {51}
	024 Move X8, [X19+56]
	025 Compare X8, 0
	026 JumpIfEqual {51}
	027 Move X8, 0xA3B000
	028 Move X8, [X8+1928]
	029 Move X20, [X19+48]
	030 Move W21, [X19+32]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X2, X31, 12
	037 Move X0, X20
	038 Move W1, W21
	039 Call Socket.RemoteEndPoint_internal, X0, X1, X2
	040 Move W8, [X31+12]
	041 Compare W8, 0
	042 JumpIfNotEqual {58}
	043 Move X1, X0
	044 Move X0, [X19+56]
	045 Compare X0, 0
	046 JumpIfEqual {73}
	047 Move X8, [X0]
	048 Move X9, [X8+408]
	049 Move X2, [X8+416]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, X31
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Add X31, X31, 48
	057 Return X0
	058 Move X0, 0xA70000
	059 Move X0, [X0+216]
	060 Move W19, W8
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move W1, W19
	064 Move X2, X31
	065 Move X20, X0
	066 Call SocketException..ctor, X0, X1
	067 Move X0, 0xA7E000
	068 Move X0, [X0+2616]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X20
	072 Call 0x1C17DEC
	073 Call 0x1C17F20

Method: System.Net.SocketAddress RemoteEndPoint_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Int32 family, out System.Int32 error)

Disassembly:
	0x036C2EEC CBNZ X20, 0x36C2F04
	0x036C2EF0 LDP X20, X19, [X31 + 0x20]
	0x036C2EF4 LDP X22, X21, [X31 + 0x10]
	0x036C2EF8 LDR X30, [X31], #0x30
	0x036C2EFC RET
	0x036C2F00 BL 0x1C16F20
	0x036C2F04 MOV X0, X20
	0x036C2F08 BL 0x1C16F18
	0x036C2F0C B 0x36C2F10
	0x036C2F10 MOV X21, X0
	0x036C2F14 CMP W1, 0x1
	0x036C2F18 B.NE 0x36C2F3C
	0x036C2F1C MOV X0, X21
	0x036C2F20 BL 0x3EB1AD0
	0x036C2F24 LDR X20, [X0]
	0x036C2F28 BL 0x3EB1AE0
	0x036C2F2C LDRB W8, [X31 + 0xC]
	0x036C2F30 CBZ W8, 0x36C2EEC
	0x036C2F34 CBNZ X19, 0x36C2EE0
	0x036C2F38 BL 0x1C16F20
	0x036C2F3C MOV X20, X31
	0x036C2F40 B 0x36C2F48
	0x036C2F44 MOV X21, X0
	0x036C2F48 LDRB W8, [X31 + 0xC]
	0x036C2F4C CBZ W8, 0x36C2F64
	0x036C2F50 CBNZ X19, 0x36C2F58
	0x036C2F54 BL 0x1C16F20
	0x036C2F58 MOV X0, X19
	0x036C2F5C MOV X1, X31
	0x036C2F60 BL 0x32BFAB4
	0x036C2F64 CBNZ X20, 0x36C2F70
	0x036C2F68 MOV X0, X21
	0x036C2F6C BL 0x1D2C690
	0x036C2F70 MOV X0, X20
	0x036C2F74 BL 0x1C16F18
	0x036C2F78 BL 0x1990590
	0x036C2F7C B 0x1C86220
	0x036C2F80 STP X30, X23, [X31 - 0x30]!
	0x036C2F84 STP X22, X21, [X31 + 0x10]
	0x036C2F88 STP X20, X19, [X31 + 0x20]
	0x036C2F8C ADRP X22, 0xD1E000
	0x036C2F90 ADRP X23, 0xA3E000
	0x036C2F94 LDRB W8, [X22 + 0x9E7]
	0x036C2F98 LDR X23, [X23 + 0xBB8]
	0x036C2F9C MOV W20, W2
	0x036C2FA0 MOV X21, X1
	0x036C2FA4 MOV X19, X0
	0x036C2FA8 TBNZ X8, 0x0, 0x36C2FC0
	0x036C2FAC ADRP X0, 0xA3E000
	0x036C2FB0 LDR X0, [X0 + 0xBB8]
	0x036C2FB4 BL 0x1C16CF4
	0x036C2FB8 MOVZ W8, 0x1
	0x036C2FBC STRB W8, [X22 + 0x9E7]
	0x036C2FC0 LDR X0, [X23]
	0x036C2FC4 BL 0x1C16F10
	0x036C2FC8 MOV X1, X21
	0x036C2FCC MOV W2, W20
	0x036C2FD0 MOV X3, X31
	0x036C2FD4 MOV X22, X0
	0x036C2FD8 BL 0x366E898
	0x036C2FDC MOV X0, X19
	0x036C2FE0 MOV X1, X22
	0x036C2FE4 LDP X20, X19, [X31 + 0x20]
	0x036C2FE8 LDP X22, X21, [X31 + 0x10]
	0x036C2FEC LDP X30, X23, [X31], #0x30
	0x036C2FF0 B 0x36BFAC4
	0x036C2FF4 STR X30, [X31 - 0x20]!
	0x036C2FF8 STP X20, X19, [X31 + 0x10]
	0x036C2FFC MOV X20, X0
	0x036C3000 MOV X0, X1
	0x036C3004 MOV X1, X31
	0x036C3008 MOV W19, W2
	0x036C300C BL 0x369B574
	0x036C3010 MOV X1, X0
	0x036C3014 MOV X0, X20
	0x036C3018 MOV W2, W19
	0x036C301C LDP X20, X19, [X31 + 0x10]
	0x036C3020 LDR X30, [X31], #0x20
	0x036C3024 B 0x36BF6E8
	0x036C3028 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1F000
	007 Move W8, [X22+2523]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA3B000
	016 Move X0, [X0+1928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2523], W8
	020 Move [X31+12], W31
	021 Compare X19, 0
	022 JumpIfEqual {56}
	023 Add X1, X31, 12
	024 Move X0, X19
	025 Move X2, X31
	026 Call SafeHandle.DangerousAddRef, X0, X1
	027 Move X8, 0xA3B000
	028 Move X8, [X8+1928]
	029 Move X22, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Move W1, W21
	037 Move X2, X20
	038 Call 0x1C87BA8
	039 Move W8, [X31+12]
	040 Move X21, X0
	041 Compare W8, 0
	042 JumpIfEqual {49}
	043 Move X20, X31
	044 Move X0, X19
	045 Move X1, X31
	046 Call SafeHandle.DangerousRelease, X0
	047 Compare X20, 0
	048 JumpIfNotEqual {72}
	049 Move X0, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0
	056 Call 0x1C17F20
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X21
	060 Call 0x3EB2AD0
	061 Move X20, [X0]
	062 Call 0x3EB2AE0
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {69}
	066 Compare X19, 0
	067 JumpIfEqual {75}
	068 Move X21, X31
	069 Move X21, X31
	070 Compare X20, 0
	071 JumpIfEqual {49}
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Move X20, X31
	075 Call 0x1C17F20
	076 Move X21, X0
	077 Move W8, [X31+12]
	078 Compare W8, 0
	079 JumpIfEqual {86}
	080 Compare X19, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17F20
	083 Move X0, X19
	084 Move X1, X31
	085 Call SafeHandle.DangerousRelease, X0
	086 Compare X20, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X21
	089 Call 0x1D2D690
	090 Move X0, X20
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.Net.SocketAddress RemoteEndPoint_icall(System.IntPtr socket, System.Int32 family, out System.Int32 error)

Disassembly:
	0x036C302C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Call 0x1C87BA8
	002 Return X0

Method: System.Boolean Poll(System.Int32 microSeconds, System.Net.Sockets.SelectMode mode)

Disassembly:
	0x036AA87C BL 0x33E14E4
	0x036AA880 CBNZ X20, 0x36AA894
	0x036AA884 LDP X20, X19, [X31 + 0x20]
	0x036AA888 LDP X30, X21, [X31 + 0x10]
	0x036AA88C ADD X31, X31, 0x30
	0x036AA890 RET
	0x036AA894 MOV X0, X20
	0x036AA898 BL 0x1C16F18
	0x036AA89C CMP W1, 0x1
	0x036AA8A0 MOV X21, X0
	0x036AA8A4 B.NE 0x36AA8BC
	0x036AA8A8 MOV X0, X21
	0x036AA8AC BL 0x3EB1AD0
	0x036AA8B0 LDR X20, [X0]
	0x036AA8B4 BL 0x3EB1AE0
	0x036AA8B8 B 0x36AA86C
	0x036AA8BC MOV X20, X31
	0x036AA8C0 B 0x36AA8C8
	0x036AA8C4 MOV X21, X0
	0x036AA8C8 LDRB W8, [X31 + 0xC]
	0x036AA8CC CBZ W8, 0x36AA8DC
	0x036AA8D0 MOV X0, X19
	0x036AA8D4 MOV X1, X31
	0x036AA8D8 BL 0x33E14E4
	0x036AA8DC CBNZ X20, 0x36AA8E8
	0x036AA8E0 MOV X0, X21
	0x036AA8E4 BL 0x1D2C690
	0x036AA8E8 MOV X0, X20
	0x036AA8EC BL 0x1C16F18
	0x036AA8F0 BL 0x1990590
	0x036AA8F4 STRH W31, [X0 + 0x18]
	0x036AA8F8 STR X31, [X0 + 0x10]
	0x036AA8FC RET
	0x036AA900 SUB X31, X31, 0x30
	0x036AA904 STP X30, X21, [X31 + 0x10]
	0x036AA908 STP X20, X19, [X31 + 0x20]
	0x036AA90C MOV W20, W1
	0x036AA910 MOV X19, X0
	0x036AA914 STRB W31, [X31 + 0xC]
	0x036AA918 ADD X1, X31, 0xC
	0x036AA91C MOV X2, X31
	0x036AA920 BL 0x33DE64C
	0x036AA924 MOV X0, X19
	0x036AA928 BL 0x36AA9C8
	0x036AA92C TBZ X20, 0x0, 0x36AA938
	0x036AA930 MOV X0, X19
	0x036AA934 BL 0x36AA83C
	0x036AA938 MOV X20, X31
	0x036AA93C LDRB W8, [X31 + 0xC]
	0x036AA940 CBZ W8, 0x36AA950
	0x036AA944 MOV X0, X19
	0x036AA948 MOV X1, X31
	0x036AA94C BL 0x33E14E4
	0x036AA950 CBNZ X20, 0x36AA964
	0x036AA954 LDP X20, X19, [X31 + 0x20]
	0x036AA958 LDP X30, X21, [X31 + 0x10]
	0x036AA95C ADD X31, X31, 0x30
	0x036AA960 RET
	0x036AA964 MOV X0, X20
	0x036AA968 BL 0x1C16F18
	0x036AA96C B 0x36AA970
	0x036AA970 MOV X21, X0
	0x036AA974 CMP W1, 0x1
	0x036AA978 B.NE 0x36AA990
	0x036AA97C MOV X0, X21
	0x036AA980 BL 0x3EB1AD0
	0x036AA984 LDR X20, [X0]
	0x036AA988 BL 0x3EB1AE0
	0x036AA98C B 0x36AA93C
	0x036AA990 MOV X20, X31
	0x036AA994 B 0x36AA99C
	0x036AA998 MOV X21, X0
	0x036AA99C LDRB W8, [X31 + 0xC]
	0x036AA9A0 CBZ W8, 0x36AA9B0
	0x036AA9A4 MOV X0, X19
	0x036AA9A8 MOV X1, X31
	0x036AA9AC BL 0x33E14E4
	0x036AA9B0 CBNZ X20, 0x36AA9BC
	0x036AA9B4 MOV X0, X21
	0x036AA9B8 BL 0x1D2C690
	0x036AA9BC MOV X0, X20
	0x036AA9C0 BL 0x1C16F18
	0x036AA9C4 BL 0x1990590
	0x036AA9C8 STR X30, [X31 - 0x30]!
	0x036AA9CC STP X22, X21, [X31 + 0x10]
	0x036AA9D0 STP X20, X19, [X31 + 0x20]
	0x036AA9D4 MOV X19, X0
	0x036AA9D8 STRB W31, [X31 + 0xC]
	0x036AA9DC ADD X1, X31, 0xC
	0x036AA9E0 MOV X2, X31
	0x036AA9E4 BL 0x33DE64C
	0x036AA9E8 LDR X0, [X19 + 0x20]
	0x036AA9EC CBZ X0, 0x36AA9FC
	0x036AA9F0 MOV X1, X31
	0x036AA9F4 BL 0x32F02B8
	0x036AA9F8 STR X31, [X19 + 0x20]
	0x036AA9FC LDR X0, [X19 + 0x30]
	0x036AAA00 CBZ X0, 0x36AAA10
	0x036AAA04 MOV X1, X31
	0x036AAA08 BL 0x35EF314
	0x036AAA0C STR X31, [X19 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD37000
	007 Move W8, [X22+2524]
	008 Move W20, W2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA4A000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0xA53000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2524], W8
	023 Move X0, X19
	024 Move [X31+12], W31
	025 Call Socket.ThrowIfDisposedAndClosed, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, 0xA53000
	028 Move X8, [X8+1928]
	029 Move X22, [X19+48]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Add X3, X31, 12
	036 Move X0, X22
	037 Move W1, W20
	038 Move W2, W21
	039 Call Socket.Poll_internal, X0, X1, X2, X3
	040 Move W8, [X31+12]
	041 Compare W8, 0
	042 JumpIfNotEqual {98}
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Move W21, W0
	046 NotImplemented "Instruction ORN not yet implemented."
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {73}
	051 Move W8, [X19+82]
	052 Compare W8, 0
	053 JumpIfNotEqual {73}
	054 Move W1, 0xFFFF
	055 Move W2, 0x1007
	056 Move X0, X19
	057 Call Socket.GetSocketOption, X0, X1, X2
	058 Compare X0, 0
	059 JumpIfEqual {113}
	060 Move X8, 0xA4A000
	061 Move X8, [X8+1880]
	062 Move X9, [X0]
	063 Move X1, [X8]
	064 Move X8, [X9+64]
	065 Move X9, [X1+64]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Call 0x1C17E08
	068 Move W8, [X0]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Move W8, 1
	072 Move [X19+82], W8
	073 And W0, W21, 1
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Return X0
	080 Move X0, 0xA4A000
	081 Move X0, [X0+2880]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xA95000
	086 Move X0, [X0+3896]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call NotSupportedException..ctor, X0, X1
	092 Move X0, 0xA95000
	093 Move X0, [X0+3904]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC
	098 Move X0, 0xA88000
	099 Move X0, [X0+216]
	100 Move W19, W8
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move W1, W19
	104 Move X2, X31
	105 Move X20, X0
	106 Call SocketException..ctor, X0, X1
	107 Move X0, 0xA95000
	108 Move X0, [X0+3904]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X20
	112 Call 0x1C17DEC
	113 Call 0x1C17F20
	114 Call 0x1C181E0

Method: System.Boolean Poll_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Net.Sockets.SelectMode mode, System.Int32 timeout, out System.Int32 error)

Disassembly:
	0x036C3030 STP X20, X19, [X31 + 0x20]
	0x036C3034 ADRP X23, 0xD1D000
	0x036C3038 LDRB W8, [X23 + 0x9EE]
	0x036C303C MOV W22, W3
	0x036C3040 MOV X20, X2
	0x036C3044 MOV X21, X1
	0x036C3048 MOV X19, X0
	0x036C304C TBNZ X8, 0x0, 0x36C3064
	0x036C3050 ADRP X0, 0xA39000
	0x036C3054 LDR X0, [X0 + 0x788]
	0x036C3058 BL 0x1C16CF4
	0x036C305C MOVZ W8, 0x1
	0x036C3060 STRB W8, [X23 + 0x9EE]
	0x036C3064 CBZ X19, 0x36C30BC
	0x036C3068 MOV X0, X19
	0x036C306C MOV X1, X31
	0x036C3070 BL 0x36CC990
	0x036C3074 ADRP X8, 0xA39000
	0x036C3078 LDR X8, [X8 + 0x788]
	0x036C307C LDR X23, [X19 + 0x10]
	0x036C3080 LDR X0, [X8]
	0x036C3084 LDR W8, [X0 + 0xE0]
	0x036C3088 CBNZ W8, 0x36C3090
	0x036C308C BL 0x1C16DFC
	0x036C3090 AND W3, W22, 0x1
	0x036C3094 MOV X0, X23
	0x036C3098 MOV X1, X21
	0x036C309C MOV X2, X20
	0x036C30A0 BL 0x1C85DC4
	0x036C30A4 MOV X0, X19
	0x036C30A8 LDP X20, X19, [X31 + 0x20]
	0x036C30AC LDP X22, X21, [X31 + 0x10]
	0x036C30B0 MOV X1, X31
	0x036C30B4 LDP X30, X23, [X31], #0x30
	0x036C30B8 B 0x36CCACC
	0x036C30BC BL 0x1C16F20
	0x036C30C0 B 0x36C30C4
	0x036C30C4 MOV X21, X0
	0x036C30C8 CMP W1, 0x1
	0x036C30CC B.NE 0x36C3104
	0x036C30D0 MOV X0, X21
	0x036C30D4 BL 0x3EB1AD0
	0x036C30D8 LDR X20, [X0]
	0x036C30DC BL 0x3EB1AE0
	0x036C30E0 CBZ X19, 0x36C310C
	0x036C30E4 MOV X0, X19
	0x036C30E8 MOV X1, X31
	0x036C30EC BL 0x36CCACC
	0x036C30F0 CBNZ X20, 0x36C3110
	0x036C30F4 LDP X20, X19, [X31 + 0x20]
	0x036C30F8 LDP X22, X21, [X31 + 0x10]
	0x036C30FC LDP X30, X23, [X31], #0x30
	0x036C3100 RET
	0x036C3104 MOV X20, X31
	0x036C3108 B 0x36C311C
	0x036C310C BL 0x1C16F20
	0x036C3110 MOV X0, X20
	0x036C3114 BL 0x1C16F18
	0x036C3118 MOV X21, X0
	0x036C311C CBNZ X19, 0x36C3124
	0x036C3120 BL 0x1C16F20
	0x036C3124 MOV X0, X19
	0x036C3128 MOV X1, X31
	0x036C312C BL 0x36CCACC
	0x036C3130 CBNZ X20, 0x36C313C
	0x036C3134 MOV X0, X21
	0x036C3138 BL 0x1D2C690
	0x036C313C MOV X0, X20
	0x036C3140 BL 0x1C16F18
	0x036C3144 BL 0x1990590
	0x036C3148 STP X30, X25, [X31 - 0x40]!
	0x036C314C STP X24, X23, [X31 + 0x10]
	0x036C3150 STP X22, X21, [X31 + 0x20]
	0x036C3154 STP X20, X19, [X31 + 0x30]
	0x036C3158 ADRP X19, 0xD1D000
	0x036C315C ADRP X25, 0xA7C000
	0x036C3160 LDRB W8, [X19 + 0x9E9]
	0x036C3164 LDR X25, [X25 + 0xAA0]
	0x036C3168 MOV X22, X4
	0x036C316C MOV X23, X3
	0x036C3170 MOV W21, W2
	0x036C3174 MOV X20, X1
	0x036C3178 MOV X24, X0
	0x036C317C TBNZ X8, 0x0, 0x36C31D0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD1E000
	009 Move W8, [X23+2525]
	010 Move X20, X3
	011 Move W21, W2
	012 Move W22, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA3A000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2525], W8
	023 Move [X31+12], W31
	024 Compare X19, 0
	025 JumpIfEqual {62}
	026 Add X1, X31, 12
	027 Move X0, X19
	028 Move X2, X31
	029 Call SafeHandle.DangerousAddRef, X0, X1
	030 Move X8, 0xA3A000
	031 Move X8, [X8+1928]
	032 Move X23, [X19+16]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X23
	039 Move W1, W22
	040 Move W2, W21
	041 Move X3, X20
	042 Call 0x1C87298
	043 Move W8, [X31+12]
	044 Move W21, W0
	045 Compare W8, 0
	046 JumpIfEqual {53}
	047 Move X20, X31
	048 Move X0, X19
	049 Move X1, X31
	050 Call SafeHandle.DangerousRelease, X0
	051 Compare X20, 0
	052 JumpIfNotEqual {78}
	053 And W0, W21, 1
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Move X23, [X31+24]
	060 Add X31, X31, 64
	061 Return X0
	062 Call 0x1C17F20
	063 Move X21, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X21
	066 Call 0x3EB2AD0
	067 Move X20, [X0]
	068 Call 0x3EB2AE0
	069 Move W8, [X31+12]
	070 Compare W8, 0
	071 JumpIfEqual {75}
	072 Compare X19, 0
	073 JumpIfEqual {81}
	074 Move W21, W31
	075 Move W21, W31
	076 Compare X20, 0
	077 JumpIfEqual {53}
	078 Move X0, X20
	079 Call 0x1C17F18
	080 Move X20, X31
	081 Call 0x1C17F20
	082 Move X21, X0
	083 Move W8, [X31+12]
	084 Compare W8, 0
	085 JumpIfEqual {92}
	086 Compare X19, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17F20
	089 Move X0, X19
	090 Move X1, X31
	091 Call SafeHandle.DangerousRelease, X0
	092 Compare X20, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X21
	095 Call 0x1D2D690
	096 Move X0, X20
	097 Call 0x1C17F18
	098 Call 0x1991590

Method: System.Boolean Poll_icall(System.IntPtr socket, System.Net.Sockets.SelectMode mode, System.Int32 timeout, out System.Int32 error)

Disassembly:
	0x036C3180 ADRP X0, 0xA7C000

ISIL:
	001 Call 0x1C87298
	002 Return X0

Method: System.Net.Sockets.Socket Accept()

Disassembly:
	0x036C3184 LDR X0, [X0 + 0xAA8]
	0x036C3188 BL 0x1C16CF4
	0x036C318C ADRP X0, 0xA7B000
	0x036C3190 LDR X0, [X0 + 0xFB8]
	0x036C3194 BL 0x1C16CF4
	0x036C3198 ADRP X0, 0xA38000
	0x036C319C LDR X0, [X0 + 0x7E8]
	0x036C31A0 BL 0x1C16CF4
	0x036C31A4 ADRP X0, 0xA7C000
	0x036C31A8 LDR X0, [X0 + 0xAB0]
	0x036C31AC BL 0x1C16CF4
	0x036C31B0 ADRP X0, 0xA7C000
	0x036C31B4 LDR X0, [X0 + 0xAB8]
	0x036C31B8 BL 0x1C16CF4
	0x036C31BC ADRP X0, 0xA7C000
	0x036C31C0 LDR X0, [X0 + 0xAA0]
	0x036C31C4 BL 0x1C16CF4
	0x036C31C8 MOVZ W8, 0x1
	0x036C31CC STRB W8, [X19 + 0x9E9]
	0x036C31D0 LDR X0, [X25]
	0x036C31D4 BL 0x1C16F10
	0x036C31D8 MOV X1, X31
	0x036C31DC MOV X19, X0
	0x036C31E0 BL 0x36CA750
	0x036C31E4 MOV X0, X24
	0x036C31E8 BL 0x36C19E0
	0x036C31EC CBZ X20, 0x36C3324
	0x036C31F0 LDR W8, [X24 + 0x20]
	0x036C31F4 CMP W8, 0x2
	0x036C31F8 B.EQ 0x36C3204
	0x036C31FC CMP W8, 0x17
	0x036C3200 B.NE 0x36C33C0
	0x036C3204 SUB W8, W21, 0x1
	0x036C3208 MOVZ W9, 0xFFFF
	0x036C320C CMP W8, W9
	0x036C3210 B.CS 0x36C3358
	0x036C3214 LDRB W8, [X24 + 0x19]
	0x036C3218 CBNZ W8, 0x36C33A0
	0x036C321C ADRP X8, 0xA7B000
	0x036C3220 LDR X8, [X8 + 0xFB8]
	0x036C3224 LDR X0, [X8]
	0x036C3228 BL 0x1C16F10
	0x036C322C MOVZ W4, 0x1
	0x036C3230 MOV X1, X24
	0x036C3234 MOV X2, X23
	0x036C3238 MOV X3, X22
	0x036C323C MOV X5, X31
	0x036C3240 MOV X25, X0
	0x036C3244 BL 0x36CD130
	0x036C3248 CBZ X25, 0x36C3320
	0x036C324C STR W21, [X25 + 0x80]
	0x036C3250 CBZ X19, 0x36C3320
	0x036C3254 ADRP X21, 0xA7C000
	0x036C3258 ADRP X23, 0xA7C000
	0x036C325C ADRP X22, 0xA38000
	0x036C3260 LDR X21, [X21 + 0xAA8]
	0x036C3264 LDR X23, [X23 + 0xAB8]
	0x036C3268 LDR X22, [X22 + 0x7E8]
	0x036C326C MOV X0, X20
	0x036C3270 MOV X1, X31
	0x036C3274 STR X25, [X19 + 0x10]
	0x036C3278 BL 0x369B774
	0x036C327C LDR X8, [X21]
	0x036C3280 MOV X20, X0
	0x036C3284 MOV X0, X8
	0x036C3288 BL 0x1C16F10
	0x036C328C LDR X2, [X23]
	0x036C3290 MOV X1, X19
	0x036C3294 MOV X3, X31
	0x036C3298 MOV X21, X0
	0x036C329C BL 0x2A6B948
	0x036C32A0 LDR X0, [X22]
	0x036C32A4 LDR W8, [X0 + 0xE0]
	0x036C32A8 CBNZ W8, 0x36C32B0
	0x036C32AC BL 0x1C16DFC
	0x036C32B0 ADRP X23, 0xD16000
	0x036C32B4 LDRB W8, [X23 + 0x88D]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xD1E000
	011 Move X25, 0xA3A000
	012 Move W8, [X20+2526]
	013 Move X25, [X25+1928]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA3A000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2526], W8
	024 Move X0, X19
	025 Call Socket.ThrowIfDisposedAndClosed, X0
	026 Move X0, [X25]
	027 Move [X31+12], W31
	028 Move X20, [X19+48]
	029 Move W21, [X19+80]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Add X1, X31, 12
	037 Move X0, X20
	038 Call Socket.Accept_internal, X0, X1, X2
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfNotEqual {72}
	042 Move X21, X0
	043 Move X0, [X25]
	044 Move W22, [X19+32]
	045 Move W23, [X19+36]
	046 Move W24, [X19+40]
	047 Call 0x1C17F10
	048 Move W1, W22
	049 Move W2, W23
	050 Move W3, W24
	051 Move X4, X21
	052 Move X20, X0
	053 Call Socket..ctor, X0, X1, X2, X3, X4
	054 Compare X20, 0
	055 JumpIfEqual {94}
	056 Move X8, [X19+56]
	057 Move X0, X20
	058 Move [X20+56], X8
	059 Move W1, [X19+80]
	060 Call Socket.set_Blocking, X0, X1
	061 Move X0, X20
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X22, [X31+48]
	065 Move X21, [X31+56]
	066 Move X24, [X31+32]
	067 Move X23, [X31+40]
	068 Move X30, [X31+16]
	069 Move X25, [X31+24]
	070 Add X31, X31, 80
	071 Return X0
	072 Move [X31+8], W8
	073 Move W8, [X19+24]
	074 Compare W8, 0
	075 JumpIfEqual {80}
	076 Move W9, 0x2714
	077 Move W8, 0x2714
	078 Move [X31+8], W8
	079 Move [X31+12], W9
	080 Move X0, 0xA6F000
	081 Move X0, [X0+216]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move W1, [X31+8]
	085 Move X2, X31
	086 Move X19, X0
	087 Call SocketException..ctor, X0, X1
	088 Move X0, 0xA7D000
	089 Move X0, [X0+2624]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Call 0x1C17DEC
	094 Call 0x1C17F20

Method: System.Void Accept(System.Net.Sockets.Socket acceptSocket)

Disassembly:
	0x036C3408 STR X30, [X31 - 0x40]!
	0x036C340C STP X24, X23, [X31 + 0x10]
	0x036C3410 STP X22, X21, [X31 + 0x20]
	0x036C3414 STP X20, X19, [X31 + 0x30]
	0x036C3418 ADRP X20, 0xD1D000
	0x036C341C LDRB W8, [X20 + 0x9EC]
	0x036C3420 MOV X19, X0
	0x036C3424 TBNZ X8, 0x0, 0x36C3490
	0x036C3428 ADRP X0, 0xA38000
	0x036C342C LDR X0, [X0 + 0x578]
	0x036C3430 BL 0x1C16CF4
	0x036C3434 ADRP X0, 0xA7C000
	0x036C3438 LDR X0, [X0 + 0x9F0]
	0x036C343C BL 0x1C16CF4
	0x036C3440 ADRP X0, 0xA3D000
	0x036C3444 LDR X0, [X0 + 0x968]
	0x036C3448 BL 0x1C16CF4
	0x036C344C ADRP X0, 0xA3D000
	0x036C3450 LDR X0, [X0 + 0xBB8]
	0x036C3454 BL 0x1C16CF4
	0x036C3458 ADRP X0, 0xA7C000
	0x036C345C LDR X0, [X0 + 0x10]
	0x036C3460 BL 0x1C16CF4
	0x036C3464 ADRP X0, 0xA6E000
	0x036C3468 LDR X0, [X0 + 0xD8]
	0x036C346C BL 0x1C16CF4
	0x036C3470 ADRP X0, 0xA39000
	0x036C3474 LDR X0, [X0 + 0x788]
	0x036C3478 BL 0x1C16CF4
	0x036C347C ADRP X0, 0xA7C000
	0x036C3480 LDR X0, [X0 + 0x970]
	0x036C3484 BL 0x1C16CF4
	0x036C3488 MOVZ W8, 0x1
	0x036C348C STRB W8, [X20 + 0x9EC]
	0x036C3490 CBZ X19, 0x36C3840
	0x036C3494 LDR X20, [X19 + 0x48]
	0x036C3498 CBZ X20, 0x36C3840
	0x036C349C ADRP X8, 0xA3D000
	0x036C34A0 LDR X8, [X8 + 0xBB8]
	0x036C34A4 LDR X9, [X20]
	0x036C34A8 LDR X8, [X8]
	0x036C34AC LDRB W11, [X9 + 0x130]
	0x036C34B0 LDRB W10, [X8 + 0x130]
	0x036C34B4 CMP W11, W10
	0x036C34B8 B.CC 0x36C34D0
	0x036C34BC LDR X9, [X9 + 0xC8]
	0x036C34C0 ADD X9, X9, X10, 0x3, LSL
	0x036C34C4 LDUR X9, [X9 - 0x8]
	0x036C34C8 CMP X9, X8
	0x036C34CC B.EQ 0x36C35F8
	0x036C34D0 LDR X8, [X20]
	0x036C34D4 LDR X21, [X19 + 0x30]
	0x036C34D8 MOV X0, X20
	0x036C34DC LDP X9, X1, [X8 + 0x178]
	0x036C34E0 BLR X9
	0x036C34E4 CBZ X21, 0x36C3840
	0x036C34E8 LDR W8, [X21 + 0x20]
	0x036C34EC CMP W8, W0
	0x036C34F0 B.NE 0x36C35B0
	0x036C34F4 STR W31, [X31 + 0xC]
	0x036C34F8 LDR X0, [X19 + 0x30]
	0x036C34FC CBZ X0, 0x36C3840
	0x036C3500 LDRB W8, [X0 + 0x58]
	0x036C3504 CBZ W8, 0x36C36C4
	0x036C3508 LDR X8, [X0 + 0x30]
	0x036C350C STRB W31, [X0 + 0x58]
	0x036C3510 CBZ X8, 0x36C3840
	0x036C3514 MOV X0, X8
	0x036C3518 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1E000
	007 Move X21, 0xA3A000
	008 Move W8, [X22+2527]
	009 Move X21, [X21+1928]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA3A000
	017 Move X0, [X0+1928]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2527], W8
	021 Move X0, X20
	022 Call Socket.ThrowIfDisposedAndClosed, X0
	023 Move X0, [X21]
	024 Move [X31+12], W31
	025 Move X21, [X20+48]
	026 Move W22, [X20+80]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Add X1, X31, 12
	034 Move X0, X21
	035 Call Socket.Accept_internal, X0, X1, X2
	036 Move W8, [X31+12]
	037 Compare W8, 0
	038 JumpIfNotEqual {59}
	039 Compare X19, 0
	040 JumpIfEqual {80}
	041 Move V0, [X20+32]
	042 Move W9, 1
	043 Move [X19+32], D0
	044 Move W8, [X20+40]
	045 Move [X19+48], X0
	046 Move [X19+82], W9
	047 Move X0, X19
	048 Move [X19+40], W8
	049 Move X8, [X20+56]
	050 Move [X19+56], X8
	051 Move W1, [X20+80]
	052 Call Socket.set_Blocking, X0, X1
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return 
	059 Move W19, W8
	060 Move W8, [X20+24]
	061 Compare W8, 0
	062 JumpIfEqual {66}
	063 Move W8, 0x2714
	064 Move W19, 0x2714
	065 Move [X31+12], W8
	066 Move X0, 0xA6F000
	067 Move X0, [X0+216]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move W1, W19
	071 Move X2, X31
	072 Move X20, X0
	073 Call SocketException..ctor, X0, X1
	074 Move X0, 0xA7D000
	075 Move X0, [X0+2632]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X20
	079 Call 0x1C17DEC
	080 Call 0x1C17F20

Method: System.IAsyncResult BeginAccept(System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036C351C BL 0x32C02C4
	0x036C3520 LDR X24, [X19 + 0x30]
	0x036C3524 CBZ X24, 0x36C3840
	0x036C3528 ADRP X8, 0xA39000
	0x036C352C LDR X8, [X8 + 0x788]
	0x036C3530 LDP W22, W21, [X24 + 0x20]
	0x036C3534 LDR W23, [X24 + 0x28]
	0x036C3538 LDR X0, [X8]
	0x036C353C LDR W8, [X0 + 0xE0]
	0x036C3540 CBNZ W8, 0x36C3548
	0x036C3544 BL 0x1C16DFC
	0x036C3548 ADD X3, X31, 0xC
	0x036C354C MOV W0, W22
	0x036C3550 MOV W1, W21
	0x036C3554 MOV W2, W23
	0x036C3558 BL 0x1C870E4
	0x036C355C ADRP X8, 0xA7C000
	0x036C3560 LDR X8, [X8 + 0x10]
	0x036C3564 MOV X21, X0
	0x036C3568 LDR X8, [X8]
	0x036C356C MOV X0, X8
	0x036C3570 BL 0x1C16F10
	0x036C3574 MOVZ W2, 0x1
	0x036C3578 MOV X1, X21
	0x036C357C MOV X3, X31
	0x036C3580 MOV X22, X0
	0x036C3584 BL 0x36CC318
	0x036C3588 STR X22, [X24 + 0x30]
	0x036C358C LDR W21, [X31 + 0xC]
	0x036C3590 CBZ W21, 0x36C36BC
	0x036C3594 ADRP X8, 0xA6E000
	0x036C3598 LDR X8, [X8 + 0xD8]
	0x036C359C LDR X0, [X8]
	0x036C35A0 BL 0x1C16F10
	0x036C35A4 MOV X20, X0
	0x036C35A8 MOV W1, W21
	0x036C35AC B 0x36C3688
	0x036C35B0 CMP W0, 0x2
	0x036C35B4 B.NE 0x36C35CC
	0x036C35B8 CMP W8, 0x17
	0x036C35BC B.NE 0x36C35CC
	0x036C35C0 MOV X0, X21
	0x036C35C4 BL 0x36BF538
	0x036C35C8 TBNZ X0, 0x0, 0x36C34F4
	0x036C35CC ADRP X8, 0xA38000
	0x036C35D0 LDR X8, [X8 + 0x578]
	0x036C35D4 LDR X0, [X8]
	0x036C35D8 BL 0x1C16F10
	0x036C35DC ADRP X8, 0xA7C000
	0x036C35E0 LDR X8, [X8 + 0x970]
	0x036C35E4 MOV X2, X31
	0x036C35E8 MOV X20, X0
	0x036C35EC LDR X1, [X8]
	0x036C35F0 BL 0x3314A68
	0x036C35F4 B 0x36C3690
	0x036C35F8 ADRP X22, 0xA3D000
	0x036C35FC LDR X22, [X22 + 0x968]
	0x036C3600 LDR X21, [X20 + 0x10]
	0x036C3604 LDR X0, [X22]
	0x036C3608 LDR W8, [X0 + 0xE0]
	0x036C360C CBNZ W8, 0x36C3614
	0x036C3610 BL 0x1C16DFC
	0x036C3614 CBZ X21, 0x36C3840
	0x036C3618 LDR X8, [X22]
	0x036C361C LDR X9, [X21]
	0x036C3620 MOV X0, X21
	0x036C3624 LDR X8, [X8 + 0xB8]
	0x036C3628 LDR X1, [X8]
	0x036C362C LDP X8, X2, [X9 + 0x138]
	0x036C3630 BLR X8
	0x036C3634 TBNZ X0, 0x0, 0x36C3670
	0x036C3638 LDR X0, [X22]
	0x036C363C LDR X21, [X20 + 0x10]
	0x036C3640 LDR W8, [X0 + 0xE0]
	0x036C3644 CBNZ W8, 0x36C364C
	0x036C3648 BL 0x1C16DFC
	0x036C364C CBZ X21, 0x36C3840
	0x036C3650 LDR X8, [X22]
	0x036C3654 LDR X9, [X21]
	0x036C3658 MOV X0, X21
	0x036C365C LDR X8, [X8 + 0xB8]
	0x036C3660 LDR X1, [X8 + 0x20]
	0x036C3664 LDP X8, X2, [X9 + 0x138]
	0x036C3668 BLR X8
	0x036C366C TBZ X0, 0x0, 0x36C3824
	0x036C3670 ADRP X8, 0xA6E000
	0x036C3674 LDR X8, [X8 + 0xD8]
	0x036C3678 LDR X0, [X8]
	0x036C367C BL 0x1C16F10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD1E000
	009 Move W8, [X20+2528]
	010 Move X21, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xA7D000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move X0, 0xA7C000
	021 Move X0, [X0+4024]
	022 Call 0x1C17CF4
	023 Move X0, 0xA3A000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2528], W8
	028 Move X0, X19
	029 Call Socket.ThrowIfDisposedAndClosed, X0
	030 Move W8, [X19+81]
	031 Compare W8, 0
	032 JumpIfEqual {89}
	033 Move W8, [X19+25]
	034 Compare W8, 0
	035 JumpIfEqual {89}
	036 Move X8, 0xA7C000
	037 Move X8, [X8+4024]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X1, X19
	041 Move X2, X22
	042 Move X3, X21
	043 Move W4, W31
	044 Move X5, X31
	045 Move X20, X0
	046 Call SocketAsyncResult..ctor, X0, X1, X2, X3, X4
	047 Compare X20, 0
	048 JumpIfEqual {102}
	049 Move X23, 0xA3A000
	050 Move X24, 0xA7D000
	051 Move X21, [X19+64]
	052 Move X23, [X23+1928]
	053 Move X24, [X24+2544]
	054 Move X0, X20
	055 Move X1, X31
	056 Call SocketAsyncResult.get_Handle, X0
	057 Move X8, [X23]
	058 Move X22, X0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {65}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X8, [X23]
	065 Move X8, [X8+184]
	066 Move X0, [X24]
	067 Move X23, [X8+72]
	068 Call 0x1C17F10
	069 Move W1, 1
	070 Move X2, X23
	071 Move X3, X20
	072 Move X4, X31
	073 Move X24, X0
	074 Call IOSelectorJob..ctor, X0, X1, X2, X3
	075 Move X0, X19
	076 Move X1, X21
	077 Move X2, X22
	078 Move X3, X24
	079 Call Socket.QueueIOSelectorJob, X0, X1, X2, X3
	080 Move X0, X20
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Return X0
	089 Move X0, 0xA31000
	090 Move X0, [X0+1456]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X1, X31
	094 Move X19, X0
	095 Call InvalidOperationException..ctor, X0
	096 Move X0, 0xA7D000
	097 Move X0, [X0+2640]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC
	102 Call 0x1C17F20

Method: System.Net.Sockets.Socket EndAccept(System.IAsyncResult asyncResult)

Disassembly:
	0x036C37BC MOV X0, X20
	0x036C37C0 MOV X1, X22
	0x036C37C4 MOV X2, X31
	0x036C37C8 BL 0x362E680
	0x036C37CC MOVZ W0, 0x1
	0x036C37D0 B 0x36C36A8
	0x036C37D4 CBZ X8, 0x36C3840
	0x036C37D8 MOVZ W9, 0x101
	0x036C37DC MOVZ W1, 0x1
	0x036C37E0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move X3, X1
	005 Add X1, X31, 8
	006 Add X2, X31, 28
	007 Move [X31+28], W31
	008 Call Socket.EndAccept, X0, X1, X2, X3
	009 Move X30, [X31+16]
	010 Add X31, X31, 32
	011 Return X0

Method: System.Net.Sockets.Socket EndAccept(out System.Byte[] buffer, out System.Int32 bytesTransferred, System.IAsyncResult asyncResult)

Disassembly:
	0x036C37E4 MOV X2, X31
	0x036C37E8 STURH W9, [X8 + 0x51]
	0x036C37EC BL 0x36CD28C
	0x036C37F0 B 0x36C36A4
	0x036C37F4 ADRP X8, 0xA6E000
	0x036C37F8 LDR X8, [X8 + 0xD8]
	0x036C37FC LDR X0, [X8]
	0x036C3800 BL 0x1C16F10
	0x036C3804 MOV W1, W20
	0x036C3808 MOV X2, X31
	0x036C380C MOV X21, X0
	0x036C3810 BL 0x36C6F04
	0x036C3814 MOVZ W2, 0x1
	0x036C3818 MOV X0, X19
	0x036C381C MOV X1, X21
	0x036C3820 B 0x36C369C
	0x036C3824 LDR X0, [X19 + 0x30]
	0x036C3828 CBZ X0, 0x36C3840
	0x036C382C MOV X1, X20
	0x036C3830 BL 0x36C2B88
	0x036C3834 MOV X20, X0
	0x036C3838 STR X0, [X19 + 0x48]
	0x036C383C CBNZ X0, 0x36C34D0
	0x036C3840 BL 0x1C16F20
	0x036C3844 STP X30, X27, [X31 - 0x50]!
	0x036C3848 STP X26, X25, [X31 + 0x10]
	0x036C384C STP X24, X23, [X31 + 0x20]
	0x036C3850 STP X22, X21, [X31 + 0x30]
	0x036C3854 STP X20, X19, [X31 + 0x40]
	0x036C3858 ADRP X20, 0xD1D000
	0x036C385C LDRB W8, [X20 + 0x9EB]
	0x036C3860 MOV X19, X0
	0x036C3864 TBNZ X8, 0x0, 0x36C3888
	0x036C3868 ADRP X0, 0xA3D000
	0x036C386C LDR X0, [X0 + 0xBB8]
	0x036C3870 BL 0x1C16CF4
	0x036C3874 ADRP X0, 0xA39000
	0x036C3878 LDR X0, [X0 + 0x788]
	0x036C387C BL 0x1C16CF4
	0x036C3880 MOVZ W8, 0x1
	0x036C3884 STRB W8, [X20 + 0x9EB]
	0x036C3888 CBZ X19, 0x36C3A10
	0x036C388C LDR X8, [X19 + 0x78]
	0x036C3890 CBZ X8, 0x36C3A10
	0x036C3894 ADRP X26, 0xA3D000
	0x036C3898 ADRP X27, 0xA39000
	0x036C389C ADRP X20, 0xA30000
	0x036C38A0 LDRSW X25, [X19 + 0x94]
	0x036C38A4 LDR X26, [X26 + 0xBB8]
	0x036C38A8 LDR X27, [X27 + 0x788]
	0x036C38AC LDR X20, [X20 + 0x7D0]
	0x036C38B0 MOV X21, X31
	0x036C38B4 LDR X9, [X8 + 0x18]
	0x036C38B8 CMP X25, W9, SXTW
	0x036C38BC B.GE 0x36C39DC
	0x036C38C0 LDR W10, [X19 + 0x94]
	0x036C38C4 CMP W25, W9
	0x036C38C8 ADD W10, W10, 0x1
	0x036C38CC STR W10, [X19 + 0x94]
	0x036C38D0 B.CS 0x36C3970
	0x036C38D4 ADD X8, X8, X25, 0x3, LSL

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD1E000
	010 Move X23, 0xA7D000
	011 Move X24, 0xA5C000
	012 Move W8, [X25+2529]
	013 Move X23, [X23+2664]
	014 Move X24, [X24+3536]
	015 Move X21, X3
	016 Move X19, X2
	017 Move X20, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xA7D000
	024 Move X0, [X0+2672]
	025 Call 0x1C17CF4
	026 Move X0, 0xA7D000
	027 Move X0, [X0+2664]
	028 Call 0x1C17CF4
	029 Move X0, 0xA5C000
	030 Move X0, [X0+3536]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+2529], W8
	034 Move X0, X22
	035 Call Socket.ThrowIfDisposedAndClosed, X0
	036 Move X2, [X23]
	037 Move X3, [X24]
	038 Move X1, X21
	039 Call Socket.ValidateEndIAsyncResult, X0, X1, X2, X3
	040 Compare X0, 0
	041 JumpIfEqual {76}
	042 Move W8, [X0+41]
	043 Move X21, X0
	044 Compare W8, 0
	045 JumpIfNotEqual {55}
	046 Move X0, X21
	047 Move X1, X31
	048 Call IOAsyncResult.get_AsyncWaitHandle, X0
	049 Compare X0, 0
	050 JumpIfEqual {76}
	051 Move X8, [X0]
	052 Move X9, [X8+472]
	053 Move X1, [X8+480]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X22, 0xA7D000
	056 Move X22, [X22+2672]
	057 Move X0, X21
	058 Move X1, X31
	059 Call SocketAsyncResult.CheckIfThrowDelayedException, X0
	060 Move X1, [X22]
	061 Add X0, X21, 80
	062 Call 0x319F584, X0
	063 Move [X20], X0
	064 Move W8, [X21+160]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move [X19], W8
	068 Move X0, [X21+152]
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Return X0
	076 Call 0x1C17F20

Method: System.Net.Sockets.SafeSocketHandle Accept_internal(System.Net.Sockets.SafeSocketHandle safeHandle, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C32B8 CBNZ W8, 0x36C32D0
	0x036C32BC ADRP X0, 0xA38000
	0x036C32C0 LDR X0, [X0 + 0x7E8]
	0x036C32C4 BL 0x1C16CF4
	0x036C32C8 MOVZ W8, 0x1
	0x036C32CC STRB W8, [X23 + 0x88D]
	0x036C32D0 LDR X0, [X22]
	0x036C32D4 LDR W8, [X0 + 0xE0]
	0x036C32D8 CBNZ W8, 0x36C32E4
	0x036C32DC BL 0x1C16DFC
	0x036C32E0 LDR X0, [X22]
	0x036C32E4 CBZ X20, 0x36C3320
	0x036C32E8 ADRP X9, 0xA7C000
	0x036C32EC LDR X8, [X0 + 0xB8]
	0x036C32F0 LDR X9, [X9 + 0xAB0]
	0x036C32F4 MOV X0, X20
	0x036C32F8 MOV X1, X21
	0x036C32FC LDR X2, [X8 + 0x8]
	0x036C3300 LDR X3, [X9]
	0x036C3304 BL 0x269F610
	0x036C3308 LDR X0, [X19 + 0x10]
	0x036C330C LDP X20, X19, [X31 + 0x30]
	0x036C3310 LDP X22, X21, [X31 + 0x20]
	0x036C3314 LDP X24, X23, [X31 + 0x10]
	0x036C3318 LDP X30, X25, [X31], #0x40
	0x036C331C RET
	0x036C3320 BL 0x1C16F20
	0x036C3324 ADRP X0, 0xA35000
	0x036C3328 LDR X0, [X0 + 0x528]
	0x036C332C BL 0x1C16D08
	0x036C3330 BL 0x1C16F10
	0x036C3334 MOV X19, X0
	0x036C3338 ADRP X0, 0xA7B000
	0x036C333C LDR X0, [X0 + 0x528]
	0x036C3340 BL 0x1C16D08
	0x036C3344 MOV X1, X0
	0x036C3348 MOV X0, X19
	0x036C334C MOV X2, X31
	0x036C3350 BL 0x330E100
	0x036C3354 B 0x36C33F0
	0x036C3358 ADRP X0, 0xA38000
	0x036C335C LDR X0, [X0 + 0x760]
	0x036C3360 BL 0x1C16D08
	0x036C3364 BL 0x1C16F10
	0x036C3368 MOV X19, X0
	0x036C336C ADRP X0, 0xA7A000
	0x036C3370 LDR X0, [X0 + 0x7C8]
	0x036C3374 BL 0x1C16D08
	0x036C3378 MOV X20, X0
	0x036C337C ADRP X0, 0xA7C000
	0x036C3380 LDR X0, [X0 + 0xAC0]
	0x036C3384 BL 0x1C16D08
	0x036C3388 MOV X2, X0
	0x036C338C MOV X0, X19
	0x036C3390 MOV X1, X20
	0x036C3394 MOV X3, X31
	0x036C3398 BL 0x3311888
	0x036C339C B 0x36C33F0
	0x036C33A0 ADRP X0, 0xA30000
	0x036C33A4 LDR X0, [X0 + 0x5B0]
	0x036C33A8 BL 0x1C16D08
	0x036C33AC BL 0x1C16F10
	0x036C33B0 MOV X1, X31
	0x036C33B4 MOV X19, X0
	0x036C33B8 BL 0x337DEC0
	0x036C33BC B 0x36C33F0
	0x036C33C0 ADRP X0, 0xA30000
	0x036C33C4 LDR X0, [X0 + 0xB40]
	0x036C33C8 BL 0x1C16D08
	0x036C33CC BL 0x1C16F10
	0x036C33D0 MOV X19, X0
	0x036C33D4 ADRP X0, 0xA7C000
	0x036C33D8 LDR X0, [X0 + 0xAC8]
	0x036C33DC BL 0x1C16D08
	0x036C33E0 MOV X1, X0
	0x036C33E4 MOV X0, X19
	0x036C33E8 MOV X2, X31
	0x036C33EC BL 0x3379A44
	0x036C33F0 ADRP X0, 0xA7C000
	0x036C33F4 LDR X0, [X0 + 0xAD0]
	0x036C33F8 BL 0x1C16D08
	0x036C33FC MOV X1, X0
	0x036C3400 MOV X0, X19
	0x036C3404 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1E000
	007 Move W8, [X22+2530]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA7D000
	016 Move X0, [X0+16]
	017 Call 0x1C17CF4
	018 Move X0, 0xA3A000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2530], W8
	023 Compare X19, 0
	024 JumpIfEqual {60}
	025 Move X0, X19
	026 Move X1, X31
	027 Call SafeSocketHandle.RegisterForBlockingSyscall, X0
	028 Move X8, 0xA3A000
	029 Move X8, [X8+1928]
	030 Move X22, [X19+16]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 And W2, W21, 1
	037 Move X0, X22
	038 Move X1, X20
	039 Call 0x1C868B0
	040 Move X8, 0xA7D000
	041 Move X8, [X8+16]
	042 Move X21, X0
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X20, X0
	046 Move W2, 1
	047 Move X1, X21
	048 Move X3, X31
	049 Call SafeSocketHandle..ctor, X0, X1, X2
	050 Move X0, X19
	051 Move X1, X31
	052 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	053 Move X0, X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Call 0x1C17F20
	061 Move X20, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X20
	064 Call 0x3EB2AD0
	065 Move X21, [X0]
	066 Call 0x3EB2AE0
	067 Compare X19, 0
	068 JumpIfEqual {78}
	069 Move X0, X19
	070 Move X1, X31
	071 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	072 Move X20, X31
	073 Compare X21, 0
	074 JumpIfEqual {53}
	075 Move X0, X21
	076 Call 0x1C17F18
	077 Move X21, X31
	078 Call 0x1C17F20
	079 Move X20, X0
	080 Compare X19, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17F20
	083 Move X0, X19
	084 Move X1, X31
	085 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	086 Compare X21, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X20
	089 Call 0x1D2D690
	090 Move X0, X21
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.IntPtr Accept_icall(System.IntPtr sock, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C3A10 BL 0x1C16F20
	0x036C3A14 MOVZ W0, 0x8

ISIL:
	001 And W2, W2, 1
	002 Call 0x1C868B0
	003 Return X0

Method: System.Void Bind(System.Net.EndPoint localEP)

Disassembly:
	0x036C3A18 BL 0x3EB1AF0
	0x036C3A1C LDR X8, [X21]
	0x036C3A20 STR X8, [X0]
	0x036C3A24 ADRP X1, 0x7F1000
	0x036C3A28 ADD X1, X1, 0xE58
	0x036C3A2C MOV X2, X31
	0x036C3A30 BL 0x3EB1B00
	0x036C3A34 B 0x36C3A38
	0x036C3A38 MOV X21, X0
	0x036C3A3C BL 0x3EB1AE0
	0x036C3A40 MOV X0, X21
	0x036C3A44 BL 0x1D2C690
	0x036C3A48 BL 0x1990590
	0x036C3A4C AND W3, W3, 0x1
	0x036C3A50 B 0x1C85DC4
	0x036C3A54 STR X30, [X31 - 0x30]!
	0x036C3A58 STP X22, X21, [X31 + 0x10]
	0x036C3A5C STP X20, X19, [X31 + 0x20]
	0x036C3A60 ADRP X22, 0xD1D000
	0x036C3A64 ADRP X21, 0xA39000
	0x036C3A68 LDRB W8, [X22 + 0x9EF]
	0x036C3A6C LDR X21, [X21 + 0x788]
	0x036C3A70 MOV W20, W1
	0x036C3A74 MOV X19, X0
	0x036C3A78 TBNZ X8, 0x0, 0x36C3A90
	0x036C3A7C ADRP X0, 0xA39000
	0x036C3A80 LDR X0, [X0 + 0x788]
	0x036C3A84 BL 0x1C16CF4
	0x036C3A88 MOVZ W8, 0x1
	0x036C3A8C STRB W8, [X22 + 0x9EF]
	0x036C3A90 MOV X0, X19
	0x036C3A94 BL 0x36C19E0
	0x036C3A98 LDR X0, [X21]
	0x036C3A9C STR W31, [X31 + 0xC]
	0x036C3AA0 LDR X21, [X19 + 0x30]
	0x036C3AA4 LDR W8, [X0 + 0xE0]
	0x036C3AA8 CBNZ W8, 0x36C3AB0
	0x036C3AAC BL 0x1C16DFC
	0x036C3AB0 AND W1, W20, 0x1
	0x036C3AB4 ADD X2, X31, 0xC
	0x036C3AB8 MOV X0, X21
	0x036C3ABC BL 0x36C3B3C
	0x036C3AC0 LDR W20, [X31 + 0xC]
	0x036C3AC4 CBNZ W20, 0x36C3ADC
	0x036C3AC8 STRB W31, [X19 + 0x52]
	0x036C3ACC LDP X20, X19, [X31 + 0x20]
	0x036C3AD0 LDP X22, X21, [X31 + 0x10]
	0x036C3AD4 LDR X30, [X31], #0x30
	0x036C3AD8 RET
	0x036C3ADC CMP W20, 0x32
	0x036C3AE0 B.NE 0x36C3B04
	0x036C3AE4 ADRP X0, 0xA5B000
	0x036C3AE8 LDR X0, [X0 + 0xC50]
	0x036C3AEC BL 0x1C16D08
	0x036C3AF0 BL 0x1C16F10
	0x036C3AF4 MOV X1, X31
	0x036C3AF8 MOV X19, X0
	0x036C3AFC BL 0x338E344
	0x036C3B00 B 0x36C3B24
	0x036C3B04 ADRP X0, 0xA6E000
	0x036C3B08 LDR X0, [X0 + 0xD8]
	0x036C3B0C BL 0x1C16D08
	0x036C3B10 BL 0x1C16F10
	0x036C3B14 MOV W1, W20
	0x036C3B18 MOV X2, X31
	0x036C3B1C MOV X19, X0
	0x036C3B20 BL 0x36C6F04
	0x036C3B24 ADRP X0, 0xA7C000
	0x036C3B28 LDR X0, [X0 + 0xAD8]
	0x036C3B2C BL 0x1C16D08
	0x036C3B30 MOV X1, X0
	0x036C3B34 MOV X0, X19
	0x036C3B38 BL 0x1C16DEC
	0x036C3B3C STR X30, [X31 - 0x30]!
	0x036C3B40 STP X22, X21, [X31 + 0x10]
	0x036C3B44 STP X20, X19, [X31 + 0x20]
	0x036C3B48 ADRP X22, 0xD1D000
	0x036C3B4C LDRB W8, [X22 + 0x9F1]
	0x036C3B50 MOV X20, X2
	0x036C3B54 MOV W21, W1
	0x036C3B58 MOV X19, X0
	0x036C3B5C TBNZ X8, 0x0, 0x36C3B74
	0x036C3B60 ADRP X0, 0xA39000
	0x036C3B64 LDR X0, [X0 + 0x788]
	0x036C3B68 BL 0x1C16CF4
	0x036C3B6C MOVZ W8, 0x1
	0x036C3B70 STRB W8, [X22 + 0x9F1]
	0x036C3B74 STRB W31, [X31 + 0xC]
	0x036C3B78 CBZ X19, 0x36C3BE4
	0x036C3B7C ADD X1, X31, 0xC
	0x036C3B80 MOV X0, X19
	0x036C3B84 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD1E000
	007 Move W8, [X21+2531]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA3E000
	015 Move X0, [X0+3000]
	016 Call 0x1C17CF4
	017 Move X0, 0xA3A000
	018 Move X0, [X0+1928]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2531], W8
	022 Move X0, X20
	023 Move [X31+12], W31
	024 Call Socket.ThrowIfDisposedAndClosed, X0
	025 Compare X19, 0
	026 JumpIfEqual {75}
	027 Move X8, 0xA3E000
	028 Move X8, [X8+3000]
	029 Move X9, [X19]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X20
	039 Move X1, X19
	040 Call Socket.RemapIPEndPoint, X0, X1
	041 Move X19, X0
	042 Compare X0, 0
	043 JumpIfEqual {101}
	044 Move X8, [X19]
	045 Move X22, 0xA3A000
	046 Move X21, [X20+48]
	047 Move X0, X19
	048 Move X9, [X8+392]
	049 Move X1, [X8+400]
	050 Move X22, [X22+1928]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X22]
	053 Move X22, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Add X2, X31, 12
	060 Move X0, X21
	061 Move X1, X22
	062 Call Socket.Bind_internal, X0, X1, X2
	063 Move W21, [X31+12]
	064 Compare W21, 0
	065 JumpIfNotEqual {87}
	066 Move W8, 1
	067 Move [X20+81], W8
	068 Move [X20+56], X19
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Move X0, 0xA36000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xA7D000
	081 Move X0, [X0+2696]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, 0xA6F000
	088 Move X0, [X0+216]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move W1, W21
	092 Move X2, X31
	093 Move X19, X0
	094 Call SocketException..ctor, X0, X1
	095 Move X0, 0xA7D000
	096 Move X0, [X0+2704]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X19
	100 Call 0x1C17DEC
	101 Call 0x1C17F20

Method: System.Void Bind_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Net.SocketAddress sa, out System.Int32 error)

Disassembly:
	0x036C3C48 CBNZ X20, 0x36C3C54
	0x036C3C4C MOV X0, X21
	0x036C3C50 BL 0x1D2C690
	0x036C3C54 MOV X0, X20
	0x036C3C58 BL 0x1C16F18
	0x036C3C5C BL 0x1990590
	0x036C3C60 STP X30, X23, [X31 - 0x30]!
	0x036C3C64 STP X22, X21, [X31 + 0x10]
	0x036C3C68 STP X20, X19, [X31 + 0x20]
	0x036C3C6C ADRP X23, 0xD1D000
	0x036C3C70 ADRP X21, 0xA7C000
	0x036C3C74 ADRP X22, 0xA5B000
	0x036C3C78 LDRB W8, [X23 + 0x9F0]
	0x036C3C7C LDR X21, [X21 + 0xAE0]
	0x036C3C80 LDR X22, [X22 + 0xDD0]
	0x036C3C84 MOV X19, X1
	0x036C3C88 MOV X20, X0
	0x036C3C8C TBNZ X8, 0x0, 0x36C3CB0
	0x036C3C90 ADRP X0, 0xA7C000
	0x036C3C94 LDR X0, [X0 + 0xAE0]
	0x036C3C98 BL 0x1C16CF4
	0x036C3C9C ADRP X0, 0xA5B000
	0x036C3CA0 LDR X0, [X0 + 0xDD0]
	0x036C3CA4 BL 0x1C16CF4
	0x036C3CA8 MOVZ W8, 0x1
	0x036C3CAC STRB W8, [X23 + 0x9F0]
	0x036C3CB0 MOV X0, X20
	0x036C3CB4 BL 0x36C19E0
	0x036C3CB8 LDR X2, [X21]
	0x036C3CBC LDR X3, [X22]
	0x036C3CC0 MOV X1, X19
	0x036C3CC4 BL 0x36C28D8
	0x036C3CC8 CBZ X0, 0x36C3D0C
	0x036C3CCC LDRB W8, [X0 + 0x29]
	0x036C3CD0 MOV X19, X0
	0x036C3CD4 CBNZ W8, 0x36C3CF4
	0x036C3CD8 MOV X0, X19
	0x036C3CDC MOV X1, X31
	0x036C3CE0 BL 0x362E3EC
	0x036C3CE4 CBZ X0, 0x36C3D0C
	0x036C3CE8 LDR X8, [X0]
	0x036C3CEC LDP X9, X1, [X8 + 0x1D8]
	0x036C3CF0 BLR X9
	0x036C3CF4 MOV X0, X19
	0x036C3CF8 LDP X20, X19, [X31 + 0x20]
	0x036C3CFC LDP X22, X21, [X31 + 0x10]
	0x036C3D00 MOV X1, X31
	0x036C3D04 LDP X30, X23, [X31], #0x30
	0x036C3D08 B 0x36CD1E8
	0x036C3D0C BL 0x1C16F20
	0x036C3D10 AND W1, W1, 0x1
	0x036C3D14 B 0x1C86058
	0x036C3D18 CBZ X1, 0x36C3D20
	0x036C3D1C RET
	0x036C3D20 STP X30, X19, [X31 - 0x10]!
	0x036C3D24 ADRP X0, 0xA35000
	0x036C3D28 LDR X0, [X0 + 0x528]
	0x036C3D2C BL 0x1C16D08
	0x036C3D30 BL 0x1C16F10
	0x036C3D34 MOV X19, X0
	0x036C3D38 ADRP X0, 0xA5B000
	0x036C3D3C LDR X0, [X0 + 0xF48]
	0x036C3D40 BL 0x1C16D08
	0x036C3D44 MOV X1, X0
	0x036C3D48 MOV X0, X19
	0x036C3D4C MOV X2, X31
	0x036C3D50 BL 0x330E100
	0x036C3D54 ADRP X0, 0xA7C000
	0x036C3D58 LDR X0, [X0 + 0xAE8]
	0x036C3D5C BL 0x1C16D08
	0x036C3D60 MOV X1, X0
	0x036C3D64 MOV X0, X19
	0x036C3D68 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1E000
	007 Move W8, [X22+2532]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA3A000
	016 Move X0, [X0+1928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2532], W8
	020 Move [X31+12], W31
	021 Compare X19, 0
	022 JumpIfEqual {54}
	023 Add X1, X31, 12
	024 Move X0, X19
	025 Move X2, X31
	026 Call SafeHandle.DangerousAddRef, X0, X1
	027 Move X8, 0xA3A000
	028 Move X8, [X8+1928]
	029 Move X22, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Move X1, X21
	037 Move X2, X20
	038 Call 0x1C869C4
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfEqual {48}
	042 Move X20, X31
	043 Move X0, X19
	044 Move X1, X31
	045 Call SafeHandle.DangerousRelease, X0
	046 Compare X20, 0
	047 JumpIfNotEqual {55}
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20
	055 Move X0, X20
	056 Call 0x1C17F18
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X21
	060 Call 0x3EB2AD0
	061 Move X20, [X0]
	062 Call 0x3EB2AE0
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {46}
	066 Compare X19, 0
	067 JumpIfNotEqual {43}
	068 Call 0x1C17F20
	069 Move X20, X31
	070 Move X21, X0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {80}
	074 Compare X19, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17F20
	077 Move X0, X19
	078 Move X1, X31
	079 Call SafeHandle.DangerousRelease, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X21
	083 Call 0x1D2D690
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: System.Void Bind_icall(System.IntPtr sock, System.Net.SocketAddress sa, out System.Int32 error)

Disassembly:
	0x036C3D6C STR X30, [X31 - 0x20]!

ISIL:
	001 Call 0x1C869C4
	002 Return 

Method: System.Void Listen(System.Int32 backlog)

Disassembly:
	0x036C3D70 STP X20, X19, [X31 + 0x10]
	0x036C3D74 TBNZ X2, 0x1F, 0x36C3DA0
	0x036C3D78 CBZ X1, 0x36C3DD0
	0x036C3D7C LDR W8, [X1 + 0x18]
	0x036C3D80 SUBS W8, W8, W2
	0x036C3D84 B.LT 0x36C3DD4
	0x036C3D88 TBNZ X3, 0x1F, 0x36C3E04
	0x036C3D8C CMP W8, W3
	0x036C3D90 B.LT 0x36C3E34
	0x036C3D94 LDP X20, X19, [X31 + 0x10]
	0x036C3D98 LDR X30, [X31], #0x20
	0x036C3D9C RET
	0x036C3DA0 ADRP X0, 0xA38000
	0x036C3DA4 LDR X0, [X0 + 0x760]
	0x036C3DA8 BL 0x1C16D08
	0x036C3DAC BL 0x1C16F10
	0x036C3DB0 MOV X19, X0
	0x036C3DB4 ADRP X0, 0xA5F000
	0x036C3DB8 LDR X0, [X0 + 0xD90]
	0x036C3DBC BL 0x1C16D08
	0x036C3DC0 MOV X20, X0
	0x036C3DC4 ADRP X0, 0xA7C000
	0x036C3DC8 LDR X0, [X0 + 0xAF0]
	0x036C3DCC B 0x36C3E60
	0x036C3DD0 BL 0x1C16F20
	0x036C3DD4 ADRP X0, 0xA38000
	0x036C3DD8 LDR X0, [X0 + 0x760]
	0x036C3DDC BL 0x1C16D08
	0x036C3DE0 BL 0x1C16F10
	0x036C3DE4 MOV X19, X0
	0x036C3DE8 ADRP X0, 0xA5F000
	0x036C3DEC LDR X0, [X0 + 0xD90]
	0x036C3DF0 BL 0x1C16D08
	0x036C3DF4 MOV X20, X0
	0x036C3DF8 ADRP X0, 0xA7C000
	0x036C3DFC LDR X0, [X0 + 0xAF8]
	0x036C3E00 B 0x36C3E60
	0x036C3E04 ADRP X0, 0xA38000
	0x036C3E08 LDR X0, [X0 + 0x760]
	0x036C3E0C BL 0x1C16D08
	0x036C3E10 BL 0x1C16F10
	0x036C3E14 MOV X19, X0
	0x036C3E18 ADRP X0, 0xA5B000
	0x036C3E1C LDR X0, [X0 + 0xF90]
	0x036C3E20 BL 0x1C16D08
	0x036C3E24 MOV X20, X0
	0x036C3E28 ADRP X0, 0xA7C000
	0x036C3E2C LDR X0, [X0 + 0xB00]
	0x036C3E30 B 0x36C3E60
	0x036C3E34 ADRP X0, 0xA38000
	0x036C3E38 LDR X0, [X0 + 0x760]
	0x036C3E3C BL 0x1C16D08
	0x036C3E40 BL 0x1C16F10
	0x036C3E44 MOV X19, X0
	0x036C3E48 ADRP X0, 0xA5B000
	0x036C3E4C LDR X0, [X0 + 0xF90]
	0x036C3E50 BL 0x1C16D08
	0x036C3E54 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD1E000
	007 Move W8, [X21+2533]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA3A000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2533], W8
	019 Move X0, X19
	020 Move [X31+12], W31
	021 Call Socket.ThrowIfDisposedAndClosed, X0
	022 Move W8, [X19+81]
	023 Compare W8, 0
	024 JumpIfEqual {48}
	025 Move X8, 0xA3A000
	026 Move X8, [X8+1928]
	027 Move X21, [X19+48]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X2, X31, 12
	034 Move X0, X21
	035 Move W1, W20
	036 Call Socket.Listen_internal, X0, X1, X2
	037 Move W20, [X31+12]
	038 Compare W20, 0
	039 JumpIfNotEqual {54}
	040 Move W8, 1
	041 Move [X19+25], W8
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Add X31, X31, 48
	047 Return 
	048 Move X0, 0xA6F000
	049 Move X0, [X0+216]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move W1, 0x2726
	054 Move X0, 0xA6F000
	055 Move X0, [X0+216]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move W1, W20
	060 Move X2, X31
	061 Call SocketException..ctor, X0, X1
	062 Move X0, 0xA7D000
	063 Move X0, [X0+2712]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: System.Void Listen_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Int32 backlog, out System.Int32 error)

Disassembly:
	0x036C3E58 ADRP X0, 0xA7C000
	0x036C3E5C LDR X0, [X0 + 0xB08]
	0x036C3E60 BL 0x1C16D08
	0x036C3E64 MOV X2, X0
	0x036C3E68 MOV X0, X19
	0x036C3E6C MOV X1, X20
	0x036C3E70 MOV X3, X31
	0x036C3E74 BL 0x3311888
	0x036C3E78 ADRP X0, 0xA7C000
	0x036C3E7C LDR X0, [X0 + 0xB10]
	0x036C3E80 BL 0x1C16D08
	0x036C3E84 MOV X1, X0
	0x036C3E88 MOV X0, X19
	0x036C3E8C BL 0x1C16DEC
	0x036C3E90 STP X30, X25, [X31 - 0x40]!
	0x036C3E94 STP X24, X23, [X31 + 0x10]
	0x036C3E98 STP X22, X21, [X31 + 0x20]
	0x036C3E9C STP X20, X19, [X31 + 0x30]
	0x036C3EA0 ADRP X25, 0xD1D000
	0x036C3EA4 LDRB W8, [X25 + 0x9FB]
	0x036C3EA8 MOV W23, W5
	0x036C3EAC MOV X20, X4
	0x036C3EB0 MOV W21, W3
	0x036C3EB4 MOV W22, W2
	0x036C3EB8 MOV X24, X1
	0x036C3EBC MOV X19, X0
	0x036C3EC0 TBNZ X8, 0x0, 0x36C3ED8
	0x036C3EC4 ADRP X0, 0xA39000
	0x036C3EC8 LDR X0, [X0 + 0x788]
	0x036C3ECC BL 0x1C16CF4
	0x036C3ED0 MOVZ W8, 0x1
	0x036C3ED4 STRB W8, [X25 + 0x9FB]
	0x036C3ED8 CBZ X19, 0x36C3F48
	0x036C3EDC MOV X0, X19
	0x036C3EE0 MOV X1, X31
	0x036C3EE4 BL 0x36CC990
	0x036C3EE8 ADRP X8, 0xA39000
	0x036C3EEC LDR X8, [X8 + 0x788]
	0x036C3EF0 LDR X25, [X19 + 0x10]
	0x036C3EF4 LDR X0, [X8]
	0x036C3EF8 LDR W8, [X0 + 0xE0]
	0x036C3EFC CBNZ W8, 0x36C3F04
	0x036C3F00 BL 0x1C16DFC
	0x036C3F04 AND W5, W23, 0x1
	0x036C3F08 MOV X0, X25
	0x036C3F0C MOV X1, X24
	0x036C3F10 MOV W2, W22
	0x036C3F14 MOV W3, W21
	0x036C3F18 MOV X4, X20
	0x036C3F1C BL 0x1C86494
	0x036C3F20 MOV W20, W0
	0x036C3F24 MOV X0, X19
	0x036C3F28 MOV X1, X31
	0x036C3F2C BL 0x36CCACC
	0x036C3F30 MOV W0, W20
	0x036C3F34 LDP X20, X19, [X31 + 0x30]
	0x036C3F38 LDP X22, X21, [X31 + 0x20]
	0x036C3F3C LDP X24, X23, [X31 + 0x10]
	0x036C3F40 LDP X30, X25, [X31], #0x40
	0x036C3F44 RET
	0x036C3F48 BL 0x1C16F20
	0x036C3F4C B 0x36C3F54
	0x036C3F50 B 0x36C3F54
	0x036C3F54 MOV X20, X0
	0x036C3F58 CMP W1, 0x1
	0x036C3F5C B.NE 0x36C3F8C
	0x036C3F60 MOV X0, X20
	0x036C3F64 BL 0x3EB1AD0
	0x036C3F68 LDR X21, [X0]
	0x036C3F6C BL 0x3EB1AE0
	0x036C3F70 CBZ X19, 0x36C3F94
	0x036C3F74 MOV X0, X19
	0x036C3F78 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1E000
	007 Move W8, [X22+2534]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA3A000
	016 Move X0, [X0+1928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2534], W8
	020 Move [X31+12], W31
	021 Compare X19, 0
	022 JumpIfEqual {54}
	023 Add X1, X31, 12
	024 Move X0, X19
	025 Move X2, X31
	026 Call SafeHandle.DangerousAddRef, X0, X1
	027 Move X8, 0xA3A000
	028 Move X8, [X8+1928]
	029 Move X22, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Move W1, W21
	037 Move X2, X20
	038 Call 0x1C87220
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfEqual {48}
	042 Move X20, X31
	043 Move X0, X19
	044 Move X1, X31
	045 Call SafeHandle.DangerousRelease, X0
	046 Compare X20, 0
	047 JumpIfNotEqual {55}
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20
	055 Move X0, X20
	056 Call 0x1C17F18
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X21
	060 Call 0x3EB2AD0
	061 Move X20, [X0]
	062 Call 0x3EB2AE0
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {46}
	066 Compare X19, 0
	067 JumpIfNotEqual {43}
	068 Call 0x1C17F20
	069 Move X20, X31
	070 Move X21, X0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {80}
	074 Compare X19, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17F20
	077 Move X0, X19
	078 Move X1, X31
	079 Call SafeHandle.DangerousRelease, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X21
	083 Call 0x1D2D690
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: System.Void Listen_icall(System.IntPtr sock, System.Int32 backlog, out System.Int32 error)

Disassembly:
	0x036C3F7C BL 0x36CCACC

ISIL:
	001 Call 0x1C87220
	002 Return 

Method: System.Void Connect(System.Net.IPAddress address, System.Int32 port)

Disassembly:
	0x036C3F80 CBNZ X21, 0x36C3F98
	0x036C3F84 MOV W20, W31
	0x036C3F88 B 0x36C3F30
	0x036C3F8C MOV X21, X31
	0x036C3F90 B 0x36C3FA4
	0x036C3F94 BL 0x1C16F20
	0x036C3F98 MOV X0, X21
	0x036C3F9C BL 0x1C16F18
	0x036C3FA0 MOV X20, X0
	0x036C3FA4 CBNZ X19, 0x36C3FAC
	0x036C3FA8 BL 0x1C16F20
	0x036C3FAC MOV X0, X19
	0x036C3FB0 MOV X1, X31
	0x036C3FB4 BL 0x36CCACC
	0x036C3FB8 CBNZ X21, 0x36C3FC4
	0x036C3FBC MOV X0, X20
	0x036C3FC0 BL 0x1D2C690
	0x036C3FC4 MOV X0, X21
	0x036C3FC8 BL 0x1C16F18
	0x036C3FCC BL 0x1990590
	0x036C3FD0 SUB X31, X31, 0xB0
	0x036C3FD4 STR X30, [X31 + 0x50]
	0x036C3FD8 STP X28, X27, [X31 + 0x60]
	0x036C3FDC STP X26, X25, [X31 + 0x70]
	0x036C3FE0 STP X24, X23, [X31 + 0x80]
	0x036C3FE4 STP X22, X21, [X31 + 0x90]
	0x036C3FE8 STP X20, X19, [X31 + 0xA0]
	0x036C3FEC ADRP X28, 0xD1D000
	0x036C3FF0 ADRP X27, 0xA5B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD1E000
	008 Move X23, 0xA3E000
	009 Move W8, [X22+2535]
	010 Move X23, [X23+3000]
	011 Move W20, W2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA3E000
	019 Move X0, [X0+3000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2535], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X21
	026 Move W2, W20
	027 Move X3, X31
	028 Move X22, X0
	029 Call IPEndPoint..ctor, X0, X1, X2
	030 Move X0, X19
	031 Move X1, X22
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call Socket.Connect, X0, X1
	039 Return 

Method: System.Void Connect(System.String host, System.Int32 port)

Disassembly:
	0x036C3FF4 LDRB W8, [X28 + 0x9F3]
	0x036C3FF8 LDR X27, [X27 + 0x2D0]
	0x036C3FFC MOV X20, X6
	0x036C4000 MOV W21, W5
	0x036C4004 MOV W22, W4
	0x036C4008 MOV W24, W3
	0x036C400C MOV X25, X2
	0x036C4010 MOV X23, X1
	0x036C4014 MOV X19, X0
	0x036C4018 UBFM X26, X2, 0x20, 0x3F
	0x036C401C TBNZ X8, 0x0, 0x36C404C
	0x036C4020 ADRP X0, 0xA7B000
	0x036C4024 LDR X0, [X0 + 0xB18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Call Dns.GetHostAddresses, X0
	009 Move X1, X0
	010 Move X0, X20
	011 Move W2, W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Call Socket.Connect, X0, X1, X2
	016 Return 

Method: System.Void Connect(System.Net.EndPoint remoteEP)

Disassembly:
	0x036C0AC4 BL 0x1C16DFC
	0x036C0AC8 LDR X2, [X19]
	0x036C0ACC MOV X0, X26
	0x036C0AD0 MOV W1, W25
	0x036C0AD4 BL 0x22160F0
	0x036C0AD8 STR X0, [X21 + 0x8]
	0x036C0ADC LDR W25, [X31 + 0x4C]
	0x036C0AE0 ADD W24, W24, 0x1
	0x036C0AE4 CMP W24, W25
	0x036C0AE8 B.LT 0x36C09A8
	0x036C0AEC LDR W21, [X31 + 0x4]
	0x036C0AF0 ADRP X8, 0xA3C000
	0x036C0AF4 LDR X8, [X8 + 0x788]
	0x036C0AF8 LDR X9, [X31 + 0x8]
	0x036C0AFC LDR X0, [X8]
	0x036C0B00 LDR X22, [X9 + 0x30]
	0x036C0B04 LDRB W19, [X9 + 0x50]
	0x036C0B08 LDR W8, [X0 + 0xE0]
	0x036C0B0C CBNZ W8, 0x36C0B14
	0x036C0B10 BL 0x1C16DFC
	0x036C0B14 CMP W19, 0x0
	0x036C0B18 CSET W5, NE
	0x036C0B1C ADD X4, X31, 0x48
	0x036C0B20 MOV X0, X22
	0x036C0B24 MOV X1, X23
	0x036C0B28 MOV W2, W25
	0x036C0B2C MOV W3, W21
	0x036C0B30 BL 0x36C41D8
	0x036C0B34 LDR X24, [X31 + 0x10]
	0x036C0B38 MOV W20, W0
	0x036C0B3C ADD X0, X31, 0x18
	0x036C0B40 BL 0x1BC71C0
	0x036C0B44 LDR W8, [X31 + 0x48]
	0x036C0B48 MOV W0, W20
	0x036C0B4C LDP X20, X19, [X31 + 0xA0]
	0x036C0B50 LDP X22, X21, [X31 + 0x90]
	0x036C0B54 STR W8, [X24]
	0x036C0B58 LDP X24, X23, [X31 + 0x80]
	0x036C0B5C LDP X26, X25, [X31 + 0x70]
	0x036C0B60 LDP X28, X27, [X31 + 0x60]
	0x036C0B64 LDP X29, X30, [X31 + 0x50]
	0x036C0B68 ADD X31, X31, 0xB0
	0x036C0B6C RET
	0x036C0B70 ADRP X0, 0xA3B000
	0x036C0B74 LDR X0, [X0 + 0x760]
	0x036C0B78 BL 0x1C16D08
	0x036C0B7C BL 0x1C16F10
	0x036C0B80 MOV X20, X0
	0x036C0B84 ADRP X0, 0xA7F000
	0x036C0B88 LDR X0, [X0 + 0x9A8]
	0x036C0B8C BL 0x1C16D08
	0x036C0B90 MOV X1, X0
	0x036C0B94 MOV X0, X20
	0x036C0B98 MOV X2, X31
	0x036C0B9C BL 0x3316014
	0x036C0BA0 ADRP X0, 0xA7F000
	0x036C0BA4 LDR X0, [X0 + 0x9D0]
	0x036C0BA8 BL 0x1C16D08
	0x036C0BAC MOV X1, X0
	0x036C0BB0 MOV X0, X20
	0x036C0BB4 BL 0x1C16DEC
	0x036C0BB8 BL 0x1C16F20
	0x036C0BBC BL 0x1C16F20
	0x036C0BC0 BL 0x1C16F20
	0x036C0BC4 BL 0x1C16F28
	0x036C0BC8 ADRP X0, 0xA38000
	0x036C0BCC LDR X0, [X0 + 0x528]
	0x036C0BD0 BL 0x1C16D08
	0x036C0BD4 BL 0x1C16F10
	0x036C0BD8 MOV X19, X0
	0x036C0BDC ADRP X0, 0xA7F000
	0x036C0BE0 LDR X0, [X0 + 0x9B8]
	0x036C0BE4 BL 0x1C16D08
	0x036C0BE8 MOV X1, X0
	0x036C0BEC MOV X0, X19
	0x036C0BF0 MOV X2, X31
	0x036C0BF4 BL 0x330E100
	0x036C0BF8 ADRP X0, 0xA7F000
	0x036C0BFC LDR X0, [X0 + 0x9D0]
	0x036C0C00 BL 0x1C16D08
	0x036C0C04 MOV X1, X0
	0x036C0C08 MOV X0, X19
	0x036C0C0C BL 0x1C16DEC
	0x036C0C10 B 0x36C0C44
	0x036C0C14 B 0x36C0C44
	0x036C0C18 MOV X20, X0
	0x036C0C1C B 0x36C0C54
	0x036C0C20 B 0x36C0C44
	0x036C0C24 B 0x36C0C44
	0x036C0C28 B 0x36C0C44
	0x036C0C2C B 0x36C0C44
	0x036C0C30 B 0x36C0C44
	0x036C0C34 B 0x36C0C44
	0x036C0C38 B 0x36C0C44
	0x036C0C3C B 0x36C0C44
	0x036C0C40 B 0x36C0C44
	0x036C0C44 MOV X20, X0
	0x036C0C48 B 0x36C0C50
	0x036C0C4C MOV X20, X0
	0x036C0C50 LDR X24, [X31 + 0x10]
	0x036C0C54 CMP W1, 0x1
	0x036C0C58 B.NE 0x36C0C84
	0x036C0C5C MOV X0, X20
	0x036C0C60 BL 0x3EB1AD0
	0x036C0C64 LDR X21, [X0]
	0x036C0C68 BL 0x3EB1AE0
	0x036C0C6C CBZ X21, 0x36C0CA4
	0x036C0C70 MOV X0, X21
	0x036C0C74 BL 0x1C16F18
	0x036C0C78 B 0x36C0C80
	0x036C0C7C CBNZ X21, 0x36C0CAC
	0x036C0C80 MOV X20, X0
	0x036C0C84 MOVZ W8, 0x1
	0x036C0C88 CMP W1, W8
	0x036C0C8C B.NE 0x36C0CB8
	0x036C0C90 MOV X0, X20
	0x036C0C94 BL 0x3EB1AD0
	0x036C0C98 LDR X8, [X0]
	0x036C0C9C STR X8, [X31 + 0x18]
	0x036C0CA0 BL 0x3EB1AE0
	0x036C0CA4 MOV W20, W31
	0x036C0CA8 B 0x36C0B3C
	0x036C0CAC MOV X0, X21
	0x036C0CB0 BL 0x1C16F18
	0x036C0CB4 MOV X20, X0
	0x036C0CB8 ADD X0, X31, 0x18
	0x036C0CBC BL 0x1BC71C0
	0x036C0CC0 MOV X0, X20
	0x036C0CC4 BL 0x1D2C690
	0x036C0CC8 BL 0x1990590
	0x036C0CCC B 0x36C0CD0
	0x036C0CD0 SUB X31, X31, 0x40
	0x036C0CD4 STP X30, X23, [X31 + 0x10]
	0x036C0CD8 STP X22, X21, [X31 + 0x20]
	0x036C0CDC STP X20, X19, [X31 + 0x30]
	0x036C0CE0 ADRP X23, 0xD20000
	0x036C0CE4 LDRB W8, [X23 + 0xA0B]
	0x036C0CE8 MOV X19, X3
	0x036C0CEC MOV X20, X2
	0x036C0CF0 MOV W21, W1
	0x036C0CF4 MOV X22, X0
	0x036C0CF8 TBNZ X8, 0x0, 0x36C0D10
	0x036C0CFC ADRP X0, 0xA3C000
	0x036C0D00 LDR X0, [X0 + 0x788]
	0x036C0D04 BL 0x1C16CF4
	0x036C0D08 MOVZ W8, 0x1
	0x036C0D0C STRB W8, [X23 + 0xA0B]
	0x036C0D10 STR W31, [X31 + 0xC]
	0x036C0D14 LDR W8, [X22 + 0x54]
	0x036C0D18 CMP W8, 0x1
	0x036C0D1C B.EQ 0x36C0D80
	0x036C0D20 ADRP X8, 0xA3C000
	0x036C0D24 LDR X8, [X8 + 0x788]
	0x036C0D28 LDR X22, [X22 + 0x30]
	0x036C0D2C LDR X0, [X8]
	0x036C0D30 LDR W8, [X0 + 0xE0]
	0x036C0D34 CBNZ W8, 0x36C0D3C
	0x036C0D38 BL 0x1C16DFC
	0x036C0D3C ADD X4, X31, 0xC
	0x036C0D40 MOV X0, X22
	0x036C0D44 MOV W1, W21
	0x036C0D48 MOV X2, X20
	0x036C0D4C MOV X3, X19
	0x036C0D50 BL 0x36C5528
	0x036C0D54 LDR W19, [X31 + 0xC]
	0x036C0D58 CMP W19, 0x0
	0x036C0D5C CSEL W0, W0, W31, EQ
	0x036C0D60 CBNZ W19, 0x36C0DCC
	0x036C0D64 ADDS W31, W0, 0x1
	0x036C0D68 B.EQ 0x36C0E04
	0x036C0D6C LDP X20, X19, [X31 + 0x30]
	0x036C0D70 LDP X22, X21, [X31 + 0x20]
	0x036C0D74 LDP X30, X23, [X31 + 0x10]
	0x036C0D78 ADD X31, X31, 0x40
	0x036C0D7C RET
	0x036C0D80 MOV X0, X22
	0x036C0D84 MOV X1, X31
	0x036C0D88 BL 0x33BE520
	0x036C0D8C MOV X19, X0
	0x036C0D90 BL 0x19903C0
	0x036C0D94 LDR X8, [X19]
	0x036C0D98 MOV X0, X19
	0x036C0D9C LDP X9, X1, [X8 + 0x168]
	0x036C0DA0 BLR X9
	0x036C0DA4 MOV X19, X0
	0x036C0DA8 ADRP X0, 0xA5C000
	0x036C0DAC LDR X0, [X0 + 0x4B8]
	0x036C0DB0 BL 0x1C16D08
	0x036C0DB4 BL 0x1C16F10
	0x036C0DB8 MOV X1, X19
	0x036C0DBC MOV X2, X31
	0x036C0DC0 MOV X20, X0
	0x036C0DC4 BL 0x338C448
	0x036C0DC8 B 0x36C0DEC
	0x036C0DCC ADRP X0, 0xA71000
	0x036C0DD0 LDR X0, [X0 + 0xD8]
	0x036C0DD4 BL 0x1C16D08
	0x036C0DD8 BL 0x1C16F10
	0x036C0DDC MOV W1, W19
	0x036C0DE0 MOV X2, X31
	0x036C0DE4 MOV X20, X0
	0x036C0DE8 BL 0x36C6F04
	0x036C0DEC ADRP X0, 0xA7F000
	0x036C0DF0 LDR X0, [X0 + 0x9D8]
	0x036C0DF4 BL 0x1C16D08
	0x036C0DF8 MOV X1, X0
	0x036C0DFC MOV X0, X20
	0x036C0E00 BL 0x1C16DEC
	0x036C0E04 ADRP X0, 0xA33000
	0x036C0E08 LDR X0, [X0 + 0x5B0]
	0x036C0E0C BL 0x1C16D08
	0x036C0E10 BL 0x1C16F10
	0x036C0E14 MOV X19, X0
	0x036C0E18 ADRP X0, 0xA7F000
	0x036C0E1C LDR X0, [X0 + 0x9E0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xD21000
	011 Move W8, [X21+2536]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA41000
	019 Move X0, [X0+2408]
	020 Call 0x1C17CF4
	021 Move X0, 0xA41000
	022 Move X0, [X0+3000]
	023 Call 0x1C17CF4
	024 Move X0, 0xA3D000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2536], W8
	029 Move X0, X19
	030 Call Socket.ThrowIfDisposedAndClosed, X0
	031 Compare X20, 0
	032 JumpIfEqual {219}
	033 Move X8, 0xA41000
	034 Move X8, [X8+3000]
	035 Move X9, [X20]
	036 Move X8, [X8]
	037 Move W11, [X9+304]
	038 Move W10, [X8+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X9, [X9+200]
	041 Add X9, X9, X10
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X19+25]
	045 Compare W8, 0
	046 JumpIfNotEqual {231}
	047 Move X23, X31
	048 Move W24, 1
	049 Move X8, [X20]
	050 Move X21, 0xA3D000
	051 Move X0, X20
	052 Move X9, [X8+392]
	053 Move X1, [X8+400]
	054 Move X21, [X21+1928]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X21]
	057 Move [X31+12], W31
	058 Move X21, [X19+48]
	059 Move W25, [X19+80]
	060 Move W9, [X8+224]
	061 Move X22, X0
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Add X2, X31, 12
	069 Move X0, X21
	070 Move X1, X22
	071 Call Socket.Connect_internal, X0, X1, X2, X3
	072 Move W8, [X31+12]
	073 Move W9, 0x2733
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare W8, 0
	076 JumpIfNotEqual {203}
	077 Move [X19+56], X20
	078 Compare W8, 0
	079 JumpIfNotEqual {203}
	080 Move W8, [X19+36]
	081 Move W21, 1
	082 Move X9, X19
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Move W8, 1
	086 Move TEMP, X24
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {92}
	090 Move W8, 1
	091 Move X22, X19
	092 Move X24, 0xA41000
	093 Move X24, [X24+2408]
	094 Move X20, [X23+16]
	095 Move X0, [X24]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Compare X20, 0
	101 JumpIfEqual {218}
	102 Move X8, [X24]
	103 Move X9, [X20]
	104 Move X0, X20
	105 Move X8, [X8+184]
	106 Move X1, [X8]
	107 Move X8, [X9+312]
	108 Move X2, [X9+320]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {170}
	114 Move W8, W31
	115 Move W8, [X19+36]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X22, 0xA41000
	118 Move X22, [X22+2408]
	119 Move X21, [X20+16]
	120 Move X0, [X22]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Compare X21, 0
	126 JumpIfEqual {218}
	127 Move X8, [X22]
	128 Move X9, [X21]
	129 Move X0, X21
	130 Move X8, [X8+184]
	131 Move X1, [X8]
	132 Move X8, [X9+312]
	133 Move X2, [X9+320]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {244}
	139 Move X0, [X22]
	140 Move X21, [X20+16]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Compare X21, 0
	146 JumpIfEqual {218}
	147 Move X8, [X22]
	148 Move X9, [X21]
	149 Move X0, X21
	150 Move X8, [X8+184]
	151 Move X1, [X8+32]
	152 Move X8, [X9+312]
	153 Move X2, [X9+320]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {244}
	159 Move W8, [X19+25]
	160 Compare W8, 0
	161 JumpIfNotEqual {231}
	162 Move X0, X19
	163 Move X1, X20
	164 Call Socket.RemapIPEndPoint, X0, X1
	165 Compare X0, 0
	166 JumpIfEqual {218}
	167 Move W24, W31
	168 Move X23, X20
	169 Move X20, X0
	170 Move X0, [X24]
	171 Move X20, [X23+16]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Compare X20, 0
	177 JumpIfEqual {218}
	178 Move X8, [X24]
	179 Move X9, [X20]
	180 Move X0, X20
	181 Move X8, [X8+184]
	182 Move X1, [X8+32]
	183 Move X8, [X9+312]
	184 Move X2, [X9+320]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Xor W8, W0, 1
	187 Move X9, X22
	188 Compare X22, 0
	189 JumpIfEqual {218}
	190 And W8, W8, 1
	191 Move [X9+82], W8
	192 Move [X19+81], W21
	193 Move X20, [X31+64]
	194 Move X19, [X31+72]
	195 Move X22, [X31+48]
	196 Move X21, [X31+56]
	197 Move X24, [X31+32]
	198 Move X23, [X31+40]
	199 Move X30, [X31+16]
	200 Move X25, [X31+24]
	201 Add X31, X31, 80
	202 Return 
	203 Move W20, W8
	204 Move W8, [X19+24]
	205 Compare W8, 0
	206 JumpIfEqual {210}
	207 Move W8, 0x2714
	208 Move W20, 0x2714
	209 Move [X31+12], W8
	210 Move X0, 0xA72000
	211 Move X0, [X0+216]
	212 Call 0x1C17D08
	213 Call 0x1C17F10
	214 Move X19, X0
	215 Move W1, W20
	216 Move X2, X31
	217 Call SocketException..ctor, X0, X1
	218 Call 0x1C17F20
	219 Move X0, 0xA39000
	220 Move X0, [X0+1320]
	221 Call 0x1C17D08
	222 Call 0x1C17F10
	223 Move X19, X0
	224 Move X0, 0xA7F000
	225 Move X0, [X0+4032]
	226 Call 0x1C17D08
	227 Move X1, X0
	228 Move X0, X19
	229 Move X2, X31
	230 Call ArgumentNullException..ctor, X0, X1
	231 Move X0, 0xA34000
	232 Move X0, [X0+1456]
	233 Call 0x1C17D08
	234 Call 0x1C17F10
	235 Move X1, X31
	236 Move X19, X0
	237 Call InvalidOperationException..ctor, X0
	238 Move X0, 0xA80000
	239 Move X0, [X0+2424]
	240 Call 0x1C17D08
	241 Move X1, X0
	242 Move X0, X19
	243 Call 0x1C17DEC
	244 Move X0, 0xA72000
	245 Move X0, [X0+216]
	246 Call 0x1C17D08
	247 Call 0x1C17F10
	248 Move X19, X0
	249 Move W1, 0x2741

Method: System.IAsyncResult BeginConnect(System.String host, System.Int32 port, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036C4148 STURH W31, [X19 + 0x51]
	0x036C414C MOV W0, W21
	0x036C4150 LDP X20, X19, [X31 + 0xA0]
	0x036C4154 LDP X22, X21, [X31 + 0x90]
	0x036C4158 LDP X24, X23, [X31 + 0x80]
	0x036C415C LDP X26, X25, [X31 + 0x70]
	0x036C4160 LDP X28, X27, [X31 + 0x60]
	0x036C4164 LDR X30, [X31 + 0x50]
	0x036C4168 ADD X31, X31, 0xB0
	0x036C416C RET
	0x036C4170 B 0x36C4174
	0x036C4174 MOV X22, X0
	0x036C4178 CMP W1, 0x1
	0x036C417C B.NE 0x36C41A8
	0x036C4180 MOV X0, X22
	0x036C4184 BL 0x3EB1AD0
	0x036C4188 LDR X21, [X0]
	0x036C418C BL 0x3EB1AE0
	0x036C4190 ADD X0, X31, 0x30
	0x036C4194 MOV X1, X31
	0x036C4198 BL 0x335E4B0
	0x036C419C CBZ X21, 0x36C4120
	0x036C41A0 MOV X0, X21
	0x036C41A4 BL 0x1C16F18
	0x036C41A8 MOV X21, X31
	0x036C41AC B 0x36C41B4
	0x036C41B0 MOV X22, X0
	0x036C41B4 ADD X0, X31, 0x30
	0x036C41B8 MOV X1, X31
	0x036C41BC BL 0x335E4B0
	0x036C41C0 CBNZ X21, 0x36C41CC
	0x036C41C4 MOV X0, X22
	0x036C41C8 BL 0x1D2C690
	0x036C41CC MOV X0, X21
	0x036C41D0 BL 0x1C16F18
	0x036C41D4 BL 0x1990590
	0x036C41D8 STP X30, X25, [X31 - 0x40]!
	0x036C41DC STP X24, X23, [X31 + 0x10]
	0x036C41E0 STP X22, X21, [X31 + 0x20]
	0x036C41E4 STP X20, X19, [X31 + 0x30]
	0x036C41E8 ADRP X25, 0xD1C000
	0x036C41EC LDRB W8, [X25 + 0x9FA]
	0x036C41F0 MOV W23, W5
	0x036C41F4 MOV X20, X4
	0x036C41F8 MOV W21, W3
	0x036C41FC MOV W22, W2
	0x036C4200 MOV X24, X1
	0x036C4204 MOV X19, X0
	0x036C4208 TBNZ X8, 0x0, 0x36C4220
	0x036C420C ADRP X0, 0xA38000
	0x036C4210 LDR X0, [X0 + 0x788]
	0x036C4214 BL 0x1C16CF4
	0x036C4218 MOVZ W8, 0x1
	0x036C421C STRB W8, [X25 + 0x9FA]
	0x036C4220 CBZ X19, 0x36C4290
	0x036C4224 MOV X0, X19
	0x036C4228 MOV X1, X31
	0x036C422C BL 0x36CC990
	0x036C4230 ADRP X8, 0xA38000
	0x036C4234 LDR X8, [X8 + 0x788]
	0x036C4238 LDR X25, [X19 + 0x10]
	0x036C423C LDR X0, [X8]
	0x036C4240 LDR W8, [X0 + 0xE0]
	0x036C4244 CBNZ W8, 0x36C424C
	0x036C4248 BL 0x1C16DFC
	0x036C424C AND W5, W23, 0x1
	0x036C4250 MOV X0, X25
	0x036C4254 MOV X1, X24
	0x036C4258 MOV W2, W22
	0x036C425C MOV W3, W21
	0x036C4260 MOV X4, X20
	0x036C4264 BL 0x1C863E4
	0x036C4268 MOV W20, W0
	0x036C426C MOV X0, X19
	0x036C4270 MOV X1, X31
	0x036C4274 BL 0x36CCACC
	0x036C4278 MOV W0, W20
	0x036C427C LDP X20, X19, [X31 + 0x30]
	0x036C4280 LDP X22, X21, [X31 + 0x20]
	0x036C4284 LDP X24, X23, [X31 + 0x10]
	0x036C4288 LDP X30, X25, [X31], #0x40
	0x036C428C RET
	0x036C4290 BL 0x1C16F20
	0x036C4294 B 0x36C429C
	0x036C4298 B 0x36C429C
	0x036C429C MOV X20, X0
	0x036C42A0 CMP W1, 0x1
	0x036C42A4 B.NE 0x36C42D4
	0x036C42A8 MOV X0, X20
	0x036C42AC BL 0x3EB1AD0
	0x036C42B0 LDR X21, [X0]
	0x036C42B4 BL 0x3EB1AE0
	0x036C42B8 CBZ X19, 0x36C42DC
	0x036C42BC MOV X0, X19
	0x036C42C0 MOV X1, X31
	0x036C42C4 BL 0x36CCACC
	0x036C42C8 CBNZ X21, 0x36C42E0
	0x036C42CC MOV W20, W31
	0x036C42D0 B 0x36C4278
	0x036C42D4 MOV X21, X31
	0x036C42D8 B 0x36C42EC
	0x036C42DC BL 0x1C16F20
	0x036C42E0 MOV X0, X21
	0x036C42E4 BL 0x1C16F18
	0x036C42E8 MOV X20, X0
	0x036C42EC CBNZ X19, 0x36C42F4
	0x036C42F0 BL 0x1C16F20
	0x036C42F4 MOV X0, X19
	0x036C42F8 MOV X1, X31
	0x036C42FC BL 0x36CCACC
	0x036C4300 CBNZ X21, 0x36C430C
	0x036C4304 MOV X0, X20
	0x036C4308 BL 0x1D2C690
	0x036C430C MOV X0, X21
	0x036C4310 BL 0x1C16F18
	0x036C4314 BL 0x1990590
	0x036C4318 SUB X31, X31, 0x50
	0x036C431C STR X30, [X31 + 0x10]
	0x036C4320 STP X24, X23, [X31 + 0x20]
	0x036C4324 STP X22, X21, [X31 + 0x30]
	0x036C4328 STP X20, X19, [X31 + 0x40]
	0x036C432C ADRP X21, 0xD1C000
	0x036C4330 LDRB W8, [X21 + 0x9F7]
	0x036C4334 MOV X20, X1
	0x036C4338 MOV X19, X0
	0x036C433C TBNZ X8, 0x0, 0x36C436C
	0x036C4340 ADRP X0, 0xA7B000
	0x036C4344 LDR X0, [X0 + 0x9F0]
	0x036C4348 BL 0x1C16CF4
	0x036C434C ADRP X0, 0xA7B000
	0x036C4350 LDR X0, [X0 + 0xB20]
	0x036C4354 BL 0x1C16CF4
	0x036C4358 ADRP X0, 0xA38000
	0x036C435C LDR X0, [X0 + 0x788]
	0x036C4360 BL 0x1C16CF4
	0x036C4364 MOVZ W8, 0x1
	0x036C4368 STRB W8, [X21 + 0x9F7]
	0x036C436C MOV X0, X19
	0x036C4370 BL 0x36C19E0
	0x036C4374 CBZ X20, 0x36C44C4
	0x036C4378 ADRP X8, 0xA7B000
	0x036C437C LDR X8, [X8 + 0xB20]
	0x036C4380 LDUR V0, [X20 + 0x58]
	0x036C4384 ADD X0, X31, 0x0
	0x036C4388 MOV X1, X31
	0x036C438C LDR X3, [X8]
	0x036C4390 MOV X2, X31
	0x036C4394 STR V0, [X31]
	0x036C4398 BL 0x319E7D0
	0x036C439C LDR X21, [X20 + 0x78]
	0x036C43A0 TBZ X0, 0x0, 0x36C43A8
	0x036C43A4 CBZ X21, 0x36C44C8
	0x036C43A8 ADRP X22, 0xA38000
	0x036C43AC LDR X22, [X22 + 0x788]
	0x036C43B0 LDR X0, [X22]
	0x036C43B4 LDR W8, [X0 + 0xE0]
	0x036C43B8 CBNZ W8, 0x36C43C4
	0x036C43BC BL 0x1C16DFC
	0x036C43C0 LDR X0, [X22]
	0x036C43C4 LDR X8, [X0 + 0xB8]
	0x036C43C8 ADRP X23, 0xA7B000
	0x036C43CC LDR X2, [X8 + 0x78]
	0x036C43D0 LDR X23, [X23 + 0x9F0]
	0x036C43D4 CBZ X21, 0x36C441C
	0x036C43D8 MOVZ W4, 0xA
	0x036C43DC MOV X0, X19
	0x036C43E0 MOV X1, X20
	0x036C43E4 MOV X3, X20
	0x036C43E8 BL 0x36C4510
	0x036C43EC LDR X0, [X20 + 0x28]
	0x036C43F0 CBZ X0, 0x36C44C4
	0x036C43F4 LDR X8, [X20 + 0x78]
	0x036C43F8 MOV X1, X31
	0x036C43FC STR X8, [X0 + 0x88]
	0x036C4400 LDR X21, [X19 + 0x40]
	0x036C4404 BL 0x36CD068

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0xD1D000
	010 Move X25, 0xA7C000
	011 Move W8, [X19+2537]
	012 Move X25, [X25+2720]
	013 Move X22, X4
	014 Move X23, X3
	015 Move W21, W2
	016 Move X20, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0xA7C000
	023 Move X0, [X0+2728]
	024 Call 0x1C17CF4
	025 Move X0, 0xA7B000
	026 Move X0, [X0+4024]
	027 Call 0x1C17CF4
	028 Move X0, 0xA38000
	029 Move X0, [X0+2024]
	030 Call 0x1C17CF4
	031 Move X0, 0xA7C000
	032 Move X0, [X0+2736]
	033 Call 0x1C17CF4
	034 Move X0, 0xA7C000
	035 Move X0, [X0+2744]
	036 Call 0x1C17CF4
	037 Move X0, 0xA7C000
	038 Move X0, [X0+2720]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X19+2537], W8
	042 Move X0, [X25]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X19, X0
	046 Call <>c__DisplayClass240_0..ctor, X0
	047 Move X0, X24
	048 Call Socket.ThrowIfDisposedAndClosed, X0
	049 Compare X20, 0
	050 JumpIfEqual {136}
	051 Move W8, [X24+32]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract W8, W21, 1
	055 Move W9, 0xFFFF
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, [X24+25]
	058 Compare W8, 0
	059 JumpIfNotEqual {165}
	060 Move X8, 0xA7B000
	061 Move X8, [X8+4024]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move W4, 1
	065 Move X1, X24
	066 Move X2, X23
	067 Move X3, X22
	068 Move X5, X31
	069 Move X25, X0
	070 Call SocketAsyncResult..ctor, X0, X1, X2, X3, X4
	071 Compare X25, 0
	072 JumpIfEqual {135}
	073 Move [X25+128], W21
	074 Compare X19, 0
	075 JumpIfEqual {135}
	076 Move X21, 0xA7C000
	077 Move X23, 0xA7C000
	078 Move X22, 0xA38000
	079 Move X21, [X21+2728]
	080 Move X23, [X23+2744]
	081 Move X22, [X22+2024]
	082 Move X0, X20
	083 Move X1, X31
	084 Move [X19+16], X25
	085 Call Dns.GetHostAddressesAsync, X0
	086 Move X8, [X21]
	087 Move X20, X0
	088 Move X0, X8
	089 Call 0x1C17F10
	090 Move X2, [X23]
	091 Move X1, X19
	092 Move X3, X31
	093 Move X21, X0
	094 Call Action`1<Object>..ctor, X0, X1, X2
	095 Move X0, [X22]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X23, 0xD16000
	101 Move W8, [X23+2189]
	102 Compare W8, 0
	103 JumpIfNotEqual {109}
	104 Move X0, 0xA38000
	105 Move X0, [X0+2024]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X23+2189], W8
	109 Move X0, [X22]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {115}
	113 Call 0x1C17DFC
	114 Move X0, [X22]
	115 Compare X20, 0
	116 JumpIfEqual {135}
	117 Move X9, 0xA7C000
	118 Move X8, [X0+184]
	119 Move X9, [X9+2736]
	120 Move X0, X20
	121 Move X1, X21
	122 Move X2, [X8+8]
	123 Move X3, [X9]
	124 Call Task`1<Object>.ContinueWith, X0, X1, X2
	125 Move X0, [X19+16]
	126 Move X20, [X31+48]
	127 Move X19, [X31+56]
	128 Move X22, [X31+32]
	129 Move X21, [X31+40]
	130 Move X24, [X31+16]
	131 Move X23, [X31+24]
	132 Move X30, [X31+64]
	133 Move X25, [X31+72]
	134 Return X0
	135 Call 0x1C17F20
	136 Move X0, 0xA35000
	137 Move X0, [X0+1320]
	138 Call 0x1C17D08
	139 Call 0x1C17F10
	140 Move X19, X0
	141 Move X0, 0xA7B000
	142 Move X0, [X0+1320]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Move X2, X31
	147 Call ArgumentNullException..ctor, X0, X1
	148 Move X0, 0xA38000
	149 Move X0, [X0+1888]
	150 Call 0x1C17D08
	151 Call 0x1C17F10
	152 Move X19, X0
	153 Move X0, 0xA7A000
	154 Move X0, [X0+1992]
	155 Call 0x1C17D08
	156 Move X20, X0
	157 Move X0, 0xA7C000
	158 Move X0, [X0+2752]
	159 Call 0x1C17D08
	160 Move X2, X0
	161 Move X0, X19
	162 Move X1, X20
	163 Move X3, X31
	164 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	165 Move X0, 0xA30000
	166 Move X0, [X0+1456]
	167 Call 0x1C17D08
	168 Call 0x1C17F10
	169 Move X1, X31
	170 Move X19, X0
	171 Call InvalidOperationException..ctor, X0
	172 Move X0, 0xA30000
	173 Move X0, [X0+2880]
	174 Call 0x1C17D08
	175 Call 0x1C17F10
	176 Move X19, X0
	177 Move X0, 0xA7C000
	178 Move X0, [X0+2760]
	179 Call 0x1C17D08
	180 Move X1, X0
	181 Move X0, X19
	182 Move X2, X31
	183 Call NotSupportedException..ctor, X0, X1
	184 Move X0, 0xA7C000
	185 Move X0, [X0+2768]
	186 Call 0x1C17D08
	187 Move X1, X0
	188 Move X0, X19
	189 Call 0x1C17DEC

Method: System.IAsyncResult BeginConnect(System.Net.EndPoint remoteEP, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036AC450 LDRB W8, [X20 + 0x939]
	0x036AC454 MOV X19, X0
	0x036AC458 TBNZ X8, 0x0, 0x36AC4F4
	0x036AC45C ADRP X0, 0xA93000
	0x036AC460 LDR X0, [X0 + 0x28]
	0x036AC464 BL 0x1C16CF4
	0x036AC468 ADRP X0, 0xA93000
	0x036AC46C LDR X0, [X0 + 0x30]
	0x036AC470 BL 0x1C16CF4
	0x036AC474 ADRP X0, 0xA51000
	0x036AC478 LDR X0, [X0 + 0x188]
	0x036AC47C BL 0x1C16CF4
	0x036AC480 ADRP X0, 0xA51000
	0x036AC484 LDR X0, [X0 + 0xE0]
	0x036AC488 BL 0x1C16CF4
	0x036AC48C ADRP X0, 0xA8E000
	0x036AC490 LDR X0, [X0 + 0x298]
	0x036AC494 BL 0x1C16CF4
	0x036AC498 ADRP X0, 0xA8E000
	0x036AC49C LDR X0, [X0 + 0x2B0]
	0x036AC4A0 BL 0x1C16CF4
	0x036AC4A4 ADRP X0, 0xA8E000
	0x036AC4A8 LDR X0, [X0 + 0x2B8]
	0x036AC4AC BL 0x1C16CF4
	0x036AC4B0 ADRP X0, 0xA93000
	0x036AC4B4 LDR X0, [X0 + 0x38]
	0x036AC4B8 BL 0x1C16CF4
	0x036AC4BC ADRP X0, 0xA91000
	0x036AC4C0 LDR X0, [X0 + 0x8E8]
	0x036AC4C4 BL 0x1C16CF4
	0x036AC4C8 ADRP X0, 0xA8E000
	0x036AC4CC LDR X0, [X0 + 0x308]
	0x036AC4D0 BL 0x1C16CF4
	0x036AC4D4 ADRP X0, 0xA49000
	0x036AC4D8 LDR X0, [X0 + 0xA28]
	0x036AC4DC BL 0x1C16CF4
	0x036AC4E0 ADRP X0, 0xA93000
	0x036AC4E4 LDR X0, [X0 + 0x40]
	0x036AC4E8 BL 0x1C16CF4
	0x036AC4EC MOVZ W8, 0x1
	0x036AC4F0 STRB W8, [X20 + 0x939]
	0x036AC4F4 STP X31, X31, [X31 + 0x30]
	0x036AC4F8 STP X31, X31, [X31 + 0x20]
	0x036AC4FC STR W31, [X31 + 0x18]
	0x036AC500 ADRP X24, 0xA51000
	0x036AC504 LDR W8, [X19]
	0x036AC508 LDR X23, [X19 + 0x20]
	0x036AC50C LDR X24, [X24 + 0xE0]
	0x036AC510 CBZ W8, 0x36AC534
	0x036AC514 CMP W8, 0x1
	0x036AC518 B.NE 0x36AC610
	0x036AC51C LDUR V0, [X19 + 0x58]
	0x036AC520 MOVN W8, 0x0
	0x036AC524 STR V0, [X31 + 0x2]
	0x036AC528 STP X31, X31, [X19 + 0x58]
	0x036AC52C STR W8, [X19]
	0x036AC530 B 0x36AC5F0
	0x036AC534 LDUR V0, [X19 + 0x48]
	0x036AC538 MOVN W8, 0x0
	0x036AC53C STR V0, [X31 + 0x3]
	0x036AC540 STP X31, X31, [X19 + 0x48]
	0x036AC544 STR W8, [X19]
	0x036AC548 ADD X0, X31, 0x30
	0x036AC54C MOV X1, X31
	0x036AC550 BL 0x32C40F0
	0x036AC554 CBZ X23, 0x36AC800
	0x036AC558 LDR X8, [X23 + 0x38]
	0x036AC55C CBZ X8, 0x36AC804
	0x036AC560 LDRB W8, [X8 + 0x2C]
	0x036AC564 CBZ W8, 0x36AC7B4
	0x036AC568 LDR X8, [X19 + 0x28]
	0x036AC56C CBZ X8, 0x36AC818
	0x036AC570 LDR X21, [X8 + 0x10]
	0x036AC574 ADRP X8, 0xA93000
	0x036AC578 LDR X22, [X19 + 0x40]
	0x036AC57C LDR X8, [X8 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD35000
	008 Move W8, [X23+2538]
	009 Move X20, X3
	010 Move X21, X2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA93000
	018 Move X0, [X0+4024]
	019 Call 0x1C17CF4
	020 Move X0, 0xA51000
	021 Move X0, [X0+1928]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2538], W8
	025 Move X0, X22
	026 Call Socket.ThrowIfDisposedAndClosed, X0
	027 Compare X19, 0
	028 JumpIfEqual {63}
	029 Move W8, [X22+25]
	030 Compare W8, 0
	031 JumpIfNotEqual {75}
	032 Move X8, 0xA93000
	033 Move X8, [X8+4024]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move W4, 1
	037 Move X1, X22
	038 Move X2, X21
	039 Move X3, X20
	040 Move X5, X31
	041 Move X23, X0
	042 Call SocketAsyncResult..ctor, X0, X1, X2, X3, X4
	043 Compare X23, 0
	044 JumpIfEqual {88}
	045 Move X8, 0xA51000
	046 Move X8, [X8+1928]
	047 Move [X23+72], X19
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X23
	054 Call Socket.BeginSConnect, X0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X0, X23
	060 Move X30, [X31+48]
	061 Move X23, [X31+56]
	062 Return X0
	063 Move X0, 0xA4D000
	064 Move X0, [X0+1320]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X19, X0
	068 Move X0, 0xA93000
	069 Move X0, [X0+4032]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Move X2, X31
	074 Call ArgumentNullException..ctor, X0, X1
	075 Move X0, 0xA48000
	076 Move X0, [X0+1456]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X31
	080 Move X19, X0
	081 Call InvalidOperationException..ctor, X0
	082 Move X0, 0xA93000
	083 Move X0, [X0+4040]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Call 0x1C17DEC
	088 Call 0x1C17F20

Method: System.Boolean BeginMConnect(System.Net.Sockets.SocketAsyncResult sockares)

Disassembly:
	0x036C4844 MOV W24, W2
	0x036C4848 MOV X25, X1
	0x036C484C MOV X19, X0
	0x036C4850 TBNZ X8, 0x0, 0x36C4868
	0x036C4854 ADRP X0, 0xA38000
	0x036C4858 LDR X0, [X0 + 0x788]
	0x036C485C BL 0x1C16CF4
	0x036C4860 MOVZ W8, 0x1
	0x036C4864 STRB W8, [X26 + 0x9FD]
	0x036C4868 CBZ X19, 0x36C48E0
	0x036C486C MOV X0, X19
	0x036C4870 MOV X1, X31
	0x036C4874 BL 0x36CC990
	0x036C4878 ADRP X8, 0xA38000
	0x036C487C LDR X8, [X8 + 0x788]
	0x036C4880 LDR X26, [X19 + 0x10]
	0x036C4884 LDR X0, [X8]
	0x036C4888 LDR W8, [X0 + 0xE0]
	0x036C488C CBNZ W8, 0x36C4894
	0x036C4890 BL 0x1C16DFC
	0x036C4894 AND W6, W23, 0x1
	0x036C4898 MOV X0, X26
	0x036C489C MOV X1, X25
	0x036C48A0 MOV W2, W24
	0x036C48A4 MOV W3, W22
	0x036C48A8 MOV X4, X21
	0x036C48AC MOV X5, X20
	0x036C48B0 BL 0x1C8653C
	0x036C48B4 MOV W20, W0
	0x036C48B8 MOV X0, X19
	0x036C48BC MOV X1, X31
	0x036C48C0 BL 0x36CCACC
	0x036C48C4 MOV W0, W20
	0x036C48C8 LDP X20, X19, [X31 + 0x40]
	0x036C48CC LDP X22, X21, [X31 + 0x30]
	0x036C48D0 LDP X24, X23, [X31 + 0x20]
	0x036C48D4 LDP X26, X25, [X31 + 0x10]
	0x036C48D8 LDR X30, [X31], #0x50
	0x036C48DC RET
	0x036C48E0 BL 0x1C16F20
	0x036C48E4 B 0x36C48EC
	0x036C48E8 B 0x36C48EC
	0x036C48EC MOV X20, X0
	0x036C48F0 CMP W1, 0x1
	0x036C48F4 B.NE 0x36C4924
	0x036C48F8 MOV X0, X20
	0x036C48FC BL 0x3EB1AD0
	0x036C4900 LDR X21, [X0]
	0x036C4904 BL 0x3EB1AE0
	0x036C4908 CBZ X19, 0x36C492C
	0x036C490C MOV X0, X19
	0x036C4910 MOV X1, X31
	0x036C4914 BL 0x36CCACC
	0x036C4918 CBNZ X21, 0x36C4930
	0x036C491C MOV W20, W31
	0x036C4920 B 0x36C48C4
	0x036C4924 MOV X21, X31
	0x036C4928 B 0x36C493C
	0x036C492C BL 0x1C16F20
	0x036C4930 MOV X0, X21
	0x036C4934 BL 0x1C16F18
	0x036C4938 MOV X20, X0
	0x036C493C CBNZ X19, 0x36C4944
	0x036C4940 BL 0x1C16F20
	0x036C4944 MOV X0, X19
	0x036C4948 MOV X1, X31
	0x036C494C BL 0x36CCACC
	0x036C4950 CBNZ X21, 0x36C495C
	0x036C4954 MOV X0, X20
	0x036C4958 BL 0x1D2C690
	0x036C495C MOV X0, X21
	0x036C4960 BL 0x1C16F18
	0x036C4964 BL 0x1990590
	0x036C4968 STR X30, [X31 - 0x20]!
	0x036C496C STP X20, X19, [X31 + 0x10]
	0x036C4970 MOV X20, X2
	0x036C4974 MOV X19, X1
	0x036C4978 BL 0x36C19E0
	0x036C497C CBZ X19, 0x36C49E8
	0x036C4980 ADD X0, X19, 0xA8
	0x036C4984 MOVZ W1, 0x1
	0x036C4988 MOV W2, W31
	0x036C498C MOV X3, X31
	0x036C4990 BL 0x33E7AB4
	0x036C4994 CMP W0, 0x1
	0x036C4998 B.EQ 0x36C49EC
	0x036C499C LDRB W8, [X19 + 0x29]
	0x036C49A0 CBNZ W8, 0x36C49C0
	0x036C49A4 MOV X0, X19
	0x036C49A8 MOV X1, X31
	0x036C49AC BL 0x362E3EC
	0x036C49B0 CBZ X0, 0x36C49E8
	0x036C49B4 LDR X8, [X0]
	0x036C49B8 LDP X9, X1, [X8 + 0x1D8]
	0x036C49BC BLR X9
	0x036C49C0 MOV X0, X19
	0x036C49C4 MOV X1, X31
	0x036C49C8 BL 0x36CD1E8
	0x036C49CC CBZ X20, 0x36C49E8
	0x036C49D0 LDR X8, [X19 + 0x48]
	0x036C49D4 STR X8, [X20 + 0x18]
	0x036C49D8 LDR W0, [X19 + 0xA0]
	0x036C49DC LDP X20, X19, [X31 + 0x10]
	0x036C49E0 LDR X30, [X31], #0x20
	0x036C49E4 RET
	0x036C49E8 BL 0x1C16F20
	0x036C49EC ADRP X0, 0xA2F000
	0x036C49F0 LDR X0, [X0 + 0x5B0]
	0x036C49F4 BL 0x1C16D08
	0x036C49F8 BL 0x1C16F10
	0x036C49FC MOV X19, X0
	0x036C4A00 ADRP X0, 0xA7B000
	0x036C4A04 LDR X0, [X0 + 0xB38]
	0x036C4A08 BL 0x1C16D08
	0x036C4A0C MOV X1, X0
	0x036C4A10 MOV X0, X19
	0x036C4A14 MOV X2, X31
	0x036C4A18 BL 0x337DF1C
	0x036C4A1C ADRP X0, 0xA7B000
	0x036C4A20 LDR X0, [X0 + 0xB40]
	0x036C4A24 BL 0x1C16D08
	0x036C4A28 MOV X1, X0
	0x036C4A2C MOV X0, X19
	0x036C4A30 BL 0x1C16DEC
	0x036C4A34 AND W6, W6, 0x1
	0x036C4A38 B 0x1C8653C
	0x036C4A3C STP X30, X25, [X31 - 0x40]!
	0x036C4A40 STP X24, X23, [X31 + 0x10]
	0x036C4A44 STP X22, X21, [X31 + 0x20]
	0x036C4A48 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xD1D000
	012 Move W8, [X20+2539]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xA3D000
	019 Move X0, [X0+3000]
	020 Call 0x1C17CF4
	021 Move X0, 0xA39000
	022 Move X0, [X0+1928]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2539], W8
	026 Compare X19, 0
	027 JumpIfEqual {124}
	028 Move X8, [X19+120]
	029 Compare X8, 0
	030 JumpIfEqual {124}
	031 Move X26, 0xA3D000
	032 Move X27, 0xA39000
	033 Move X20, 0xA30000
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Move X26, [X26+3000]
	036 Move X27, [X27+1928]
	037 Move X20, [X20+2000]
	038 Move X21, X31
	039 Move X9, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W10, [X19+148]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add W10, W10, 1
	044 Move [X19+148], W10
	045 Add X8, X8, X25
	046 Move W22, [X19+128]
	047 Move X24, [X8+32]
	048 Move X0, [X26]
	049 Call 0x1C17F10
	050 Move X23, X0
	051 Move X1, X24
	052 Move W2, W22
	053 Move X3, X31
	054 Call IPEndPoint..ctor, X0, X1, X2
	055 Move [X19+72], X23
	056 Compare X23, 0
	057 JumpIfEqual {88}
	058 Move X8, [X23]
	059 Move X22, [X19+48]
	060 Move X9, [X8+376]
	061 Move X1, [X8+384]
	062 Move X0, X23
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X22, 0
	065 JumpIfEqual {89}
	066 Move W8, [X22+32]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, [X27]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X19
	074 Call Socket.BeginSConnect, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, X22
	078 Call Socket.get_DualMode, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {68}
	083 Move X8, [X19+120]
	084 Add X25, X25, 1
	085 Compare X8, 0
	086 JumpIfNotEqual {39}
	087 Call 0x1C17F28
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 Move X21, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X21
	093 Call 0x3EB2AD0
	094 Move X21, X0
	095 Move X0, X20
	096 Call 0x1C17D08
	097 Move X8, [X21]
	098 Move X1, [X8]
	099 Call 0x1C18270
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {125}
	104 Move X21, [X21]
	105 Call 0x3EB2AE0
	106 Move W2, 1
	107 Move X0, X19
	108 Move X1, X21
	109 Move X3, X31
	110 Call SocketAsyncResult.Complete, X0, X1, X2
	111 Move W0, W31
	112 Move X20, [X31+64]
	113 Move X19, [X31+72]
	114 Move X22, [X31+48]
	115 Move X21, [X31+56]
	116 Move X24, [X31+32]
	117 Move X23, [X31+40]
	118 Move X26, [X31+16]
	119 Move X25, [X31+24]
	120 And W0, W0, 1
	121 Move X30, [X31+80]
	122 Move X27, [X31+88]
	123 Return X0
	124 Call 0x1C17F20
	125 Move W0, 8
	126 Call 0x3EB2AF0
	127 Move X8, [X21]
	128 Move [X0], X8
	129 Move X1, 0x7F1000
	130 Add X1, X1, 3672
	131 Move X2, X31
	132 Call 0x3EB2B00
	133 Move X21, X0
	134 Call 0x3EB2AE0
	135 Move X0, X21
	136 Call 0x1D2D690
	137 Call 0x1991590

Method: System.Boolean BeginSConnect(System.Net.Sockets.SocketAsyncResult sockares)

Disassembly:
	0x036C4408 LDR X8, [X22]
	0x036C440C LDR X20, [X20 + 0x28]
	0x036C4410 LDR X8, [X8 + 0xB8]
	0x036C4414 LDR X22, [X8 + 0x88]
	0x036C4418 B 0x36C446C
	0x036C441C MOVZ W4, 0x2
	0x036C4420 MOV X0, X19
	0x036C4424 MOV X1, X20
	0x036C4428 MOV X3, X20
	0x036C442C BL 0x36C4510
	0x036C4430 LDR X8, [X20 + 0x28]
	0x036C4434 CBZ X8, 0x36C44C4
	0x036C4438 LDUR V0, [X20 + 0x58]
	0x036C443C STR V0, [X8 + 0x5]
	0x036C4440 LDR X0, [X20 + 0x28]
	0x036C4444 CBZ X0, 0x36C44C4
	0x036C4448 LDR V0, [X20 + 0x68]
	0x036C444C MOV X1, X31
	0x036C4450 STR D0, [X0 + 0x60]
	0x036C4454 LDR X21, [X19 + 0x40]
	0x036C4458 BL 0x36CD068
	0x036C445C LDR X8, [X22]
	0x036C4460 LDR X20, [X20 + 0x28]
	0x036C4464 LDR X8, [X8 + 0xB8]
	0x036C4468 LDR X22, [X8 + 0x80]
	0x036C446C LDR X8, [X23]
	0x036C4470 MOV X23, X0
	0x036C4474 MOV X0, X8
	0x036C4478 BL 0x1C16F10
	0x036C447C MOVZ W1, 0x1
	0x036C4480 MOV X2, X22
	0x036C4484 MOV X3, X20
	0x036C4488 MOV X4, X31
	0x036C448C MOV X24, X0
	0x036C4490 BL 0x362E5F8
	0x036C4494 MOV X0, X19
	0x036C4498 MOV X1, X21
	0x036C449C MOV X2, X23
	0x036C44A0 MOV X3, X24
	0x036C44A4 BL 0x36C2680
	0x036C44A8 LDP X20, X19, [X31 + 0x40]
	0x036C44AC LDP X22, X21, [X31 + 0x30]
	0x036C44B0 LDP X24, X23, [X31 + 0x20]
	0x036C44B4 LDR X30, [X31 + 0x10]
	0x036C44B8 MOVZ W0, 0x1
	0x036C44BC ADD X31, X31, 0x50
	0x036C44C0 RET
	0x036C44C4 BL 0x1C16F20
	0x036C44C8 ADRP X0, 0xA3A000
	0x036C44CC LDR X0, [X0 + 0xA18]
	0x036C44D0 BL 0x1C16D08
	0x036C44D4 BL 0x1C16F10
	0x036C44D8 MOV X19, X0
	0x036C44DC ADRP X0, 0xA7B000
	0x036C44E0 LDR X0, [X0 + 0xB28]
	0x036C44E4 BL 0x1C16D08
	0x036C44E8 MOV X1, X0
	0x036C44EC MOV X0, X19
	0x036C44F0 MOV X2, X31
	0x036C44F4 BL 0x33803F4
	0x036C44F8 ADRP X0, 0xA7B000
	0x036C44FC LDR X0, [X0 + 0xB30]
	0x036C4500 BL 0x1C16D08
	0x036C4504 MOV X1, X0
	0x036C4508 MOV X0, X19
	0x036C450C BL 0x1C16DEC
	0x036C4510 STP X30, X21, [X31 - 0x20]!
	0x036C4514 STP X20, X19, [X31 + 0x10]
	0x036C4518 CBZ X1, 0x36C4588
	0x036C451C MOV X21, X0
	0x036C4520 LDR X0, [X1 + 0x28]
	0x036C4524 MOV X19, X1
	0x036C4528 CBZ X0, 0x36C4588
	0x036C452C MOV X1, X21
	0x036C4530 MOV X5, X31
	0x036C4534 MOV W20, W4
	0x036C4538 BL 0x36CD07C
	0x036C453C LDR X8, [X19 + 0x30]
	0x036C4540 CBZ X8, 0x36C4550
	0x036C4544 LDR X9, [X19 + 0x28]
	0x036C4548 CBZ X9, 0x36C4588
	0x036C454C STR X8, [X9 + 0x70]
	0x036C4550 MOV W1, W20
	0x036C4554 STR X21, [X19 + 0x20]
	0x036C4558 BL 0x36C5958
	0x036C455C MOV W1, W0
	0x036C4560 MOV X0, X19
	0x036C4564 MOV X2, X31
	0x036C4568 BL 0x36CCE48
	0x036C456C STR W31, [X19 + 0x40]
	0x036C4570 MOV X0, X19
	0x036C4574 LDP X20, X19, [X31 + 0x10]
	0x036C4578 MOV W1, W31
	0x036C457C MOV X2, X31
	0x036C4580 LDP X30, X21, [X31], #0x20
	0x036C4584 B 0x36C9928
	0x036C4588 BL 0x1C16F20
	0x036C458C AND W5, W5, 0x1
	0x036C4590 B 0x1C863E4
	0x036C4594 AND W5, W5, 0x1
	0x036C4598 B 0x1C86494
	0x036C459C SUB X31, X31, 0xC0
	0x036C45A0 STP X29, X30, [X31 + 0x60]
	0x036C45A4 STP X28, X27, [X31 + 0x70]
	0x036C45A8 STP X26, X25, [X31 + 0x80]
	0x036C45AC STP X24, X23, [X31 + 0x90]
	0x036C45B0 STP X22, X21, [X31 + 0xA0]
	0x036C45B4 STP X20, X19, [X31 + 0xB0]
	0x036C45B8 ADRP X27, 0xD1C000
	0x036C45BC LDRB W8, [X27 + 0x9FC]
	0x036C45C0 MOV X21, X7
	0x036C45C4 MOV X20, X6
	0x036C45C8 MOV W22, W5
	0x036C45CC MOV W23, W4
	0x036C45D0 MOV W25, W3
	0x036C45D4 MOV X26, X2
	0x036C45D8 MOV X24, X1
	0x036C45DC MOV X19, X0
	0x036C45E0 TBNZ X8, 0x0, 0x36C4610
	0x036C45E4 ADRP X0, 0xA7B000
	0x036C45E8 LDR X0, [X0 + 0xB18]
	0x036C45EC BL 0x1C16CF4
	0x036C45F0 ADRP X0, 0xA5A000
	0x036C45F4 LDR X0, [X0 + 0x2D0]
	0x036C45F8 BL 0x1C16CF4
	0x036C45FC ADRP X0, 0xA38000
	0x036C4600 LDR X0, [X0 + 0x788]
	0x036C4604 BL 0x1C16CF4
	0x036C4608 MOVZ W8, 0x1
	0x036C460C STRB W8, [X27 + 0x9FC]
	0x036C4610 STR X31, [X31 + 0x58]
	0x036C4614 STR W31, [X31 + 0x54]
	0x036C4618 STP X31, X31, [X31 + 0x30]
	0x036C461C STR X31, [X31 + 0x40]
	0x036C4620 STP X31, X31, [X31 + 0x20]
	0x036C4624 LDR X0, [X20]
	0x036C4628 CBZ X0, 0x36C47AC
	0x036C462C LDR X8, [X0]
	0x036C4630 ADRP X28, 0xA5A000
	0x036C4634 UBFM X27, X26, 0x20, 0x3F
	0x036C4638 LDP X9, X1, [X8 + 0x188]
	0x036C463C LDR X28, [X28 + 0x2D0]
	0x036C4640 BLR X9
	0x036C4644 LDR X28, [X28]
	0x036C4648 AND W8, W27, 0x7FFFFFFF
	0x036C464C SUBS W8, W8, W25
	0x036C4650 STR X0, [X31 + 0x58]
	0x036C4654 B.CC 0x36C4660
	0x036C4658 CMP W8, W23
	0x036C465C B.CS 0x36C4668
	0x036C4660 MOV X0, X31
	0x036C4664 BL 0x339D6EC
	0x036C4668 LDR X0, [X28 + 0x20]
	0x036C466C ADRP X29, 0xA7B000
	0x036C4670 ADRP X28, 0xA38000
	0x036C4674 LDRB W8, [X0 + 0x135]
	0x036C4678 LDR X29, [X29 + 0xB18]
	0x036C467C LDR X28, [X28 + 0x788]
	0x036C4680 TBNZ X8, 0x0, 0x36C4688
	0x036C4684 BL 0x1C5C684
	0x036C4688 LDR X1, [X29]
	0x036C468C AND W8, W27, 0x80000000
	0x036C4690 ADD W9, W26, W25
	0x036C4694 ORR W8, W8, W23, 0x0
	0x036C4698 BFM X9, X8, 0x20, 0x1F
	0x036C469C ADD X8, X31, 0x8
	0x036C46A0 ADD X0, X31, 0x20
	0x036C46A4 STP X24, X9, [X31 + 0x20]
	0x036C46A8 BL 0x319E2B4
	0x036C46AC LDUR V0, [X31 + 0x8]
	0x036C46B0 LDR X8, [X31 + 0x18]
	0x036C46B4 LDR X0, [X28]
	0x036C46B8 STR V0, [X31 + 0x3]
	0x036C46BC STR X8, [X31 + 0x40]
	0x036C46C0 LDR X24, [X19 + 0x30]
	0x036C46C4 LDR X25, [X31 + 0x30]
	0x036C46C8 LDR W8, [X0 + 0xE0]
	0x036C46CC LDRB W26, [X19 + 0x50]
	0x036C46D0 CBNZ W8, 0x36C46D8
	0x036C46D4 BL 0x1C16DFC
	0x036C46D8 CMP W26, 0x0
	0x036C46DC CSET W6, NE
	0x036C46E0 ADD X4, X31, 0x58
	0x036C46E4 ADD X5, X31, 0x54
	0x036C46E8 MOV X0, X24
	0x036C46EC MOV X1, X25
	0x036C46F0 MOV W2, W23
	0x036C46F4 MOV W3, W22
	0x036C46F8 BL 0x36C4818
	0x036C46FC MOV W22, W0
	0x036C4700 ADD X0, X31, 0x30
	0x036C4704 MOV X1, X31
	0x036C4708 BL 0x335E4B0
	0x036C470C LDR W8, [X31 + 0x54]
	0x036C4710 STR W8, [X21]
	0x036C4714 CBZ W8, 0x36C475C
	0x036C4718 MOVZ W9, 0x2733
	0x036C471C CMP W8, W9
	0x036C4720 B.EQ 0x36C473C
	0x036C4724 MOVZ W9, 0x2734
	0x036C4728 CMP W8, W9
	0x036C472C B.EQ 0x36C4754
	0x036C4730 MOV W22, W31
	0x036C4734 STRB W31, [X19 + 0x52]
	0x036C4738 B 0x36C4788
	0x036C473C LDRB W8, [X19 + 0x50]
	0x036C4740 CBZ W8, 0x36C4754
	0x036C4744 MOVZ W8, 0x274C
	0x036C4748 MOV W22, W31
	0x036C474C STR W8, [X21]
	0x036C4750 B 0x36C4788
	0x036C4754 MOV W22, W31
	0x036C4758 B 0x36C4788
	0x036C475C MOVZ W8, 0x101
	0x036C4760 STURH W8, [X19 + 0x51]
	0x036C4764 LDR X1, [X31 + 0x58]
	0x036C4768 LDR X0, [X20]
	0x036C476C CBZ X1, 0x36C4784
	0x036C4770 CBZ X0, 0x36C47AC
	0x036C4774 LDR X8, [X0]
	0x036C4778 LDP X9, X2, [X8 + 0x198]
	0x036C477C BLR X9
	0x036C4780 STR X0, [X20]
	0x036C4784 STR X0, [X19 + 0x38]
	0x036C4788 MOV W0, W22
	0x036C478C LDP X20, X19, [X31 + 0xB0]
	0x036C4790 LDP X22, X21, [X31 + 0xA0]
	0x036C4794 LDP X24, X23, [X31 + 0x90]
	0x036C4798 LDP X26, X25, [X31 + 0x80]
	0x036C479C LDP X28, X27, [X31 + 0x70]
	0x036C47A0 LDP X29, X30, [X31 + 0x60]
	0x036C47A4 ADD X31, X31, 0xC0
	0x036C47A8 RET
	0x036C47AC BL 0x1C16F20
	0x036C47B0 B 0x36C47B4
	0x036C47B4 MOV X23, X0
	0x036C47B8 CMP W1, 0x1
	0x036C47BC B.NE 0x36C47E8
	0x036C47C0 MOV X0, X23
	0x036C47C4 BL 0x3EB1AD0
	0x036C47C8 LDR X22, [X0]
	0x036C47CC BL 0x3EB1AE0
	0x036C47D0 ADD X0, X31, 0x30
	0x036C47D4 MOV X1, X31
	0x036C47D8 BL 0x335E4B0
	0x036C47DC CBZ X22, 0x36C470C
	0x036C47E0 MOV X0, X22
	0x036C47E4 BL 0x1C16F18
	0x036C47E8 MOV X22, X31
	0x036C47EC B 0x36C47F4
	0x036C47F0 MOV X23, X0
	0x036C47F4 ADD X0, X31, 0x30
	0x036C47F8 MOV X1, X31
	0x036C47FC BL 0x335E4B0
	0x036C4800 CBNZ X22, 0x36C480C
	0x036C4804 MOV X0, X23
	0x036C4808 BL 0x1D2C690
	0x036C480C MOV X0, X22
	0x036C4810 BL 0x1C16F18
	0x036C4814 BL 0x1990590
	0x036C4818 STR X30, [X31 - 0x50]!
	0x036C481C STP X26, X25, [X31 + 0x10]
	0x036C4820 STP X24, X23, [X31 + 0x20]
	0x036C4824 STP X22, X21, [X31 + 0x30]
	0x036C4828 STP X20, X19, [X31 + 0x40]
	0x036C482C ADRP X26, 0xD1C000
	0x036C4830 LDRB W8, [X26 + 0x9FD]
	0x036C4834 MOV W23, W6
	0x036C4838 MOV X20, X5
	0x036C483C MOV X21, X4
	0x036C4840 MOV W22, W3

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD1D000
	009 Move W8, [X20+2540]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0xA38000
	016 Move X0, [X0+1400]
	017 Call 0x1C17CF4
	018 Move X0, 0xA7C000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move X0, 0xA3D000
	022 Move X0, [X0+2408]
	023 Call 0x1C17CF4
	024 Move X0, 0xA3D000
	025 Move X0, [X0+3000]
	026 Call 0x1C17CF4
	027 Move X0, 0xA7C000
	028 Move X0, [X0+16]
	029 Call 0x1C17CF4
	030 Move X0, 0xA6E000
	031 Move X0, [X0+216]
	032 Call 0x1C17CF4
	033 Move X0, 0xA39000
	034 Move X0, [X0+1928]
	035 Call 0x1C17CF4
	036 Move X0, 0xA7C000
	037 Move X0, [X0+2416]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2540], W8
	041 Compare X19, 0
	042 JumpIfEqual {310}
	043 Move X20, [X19+72]
	044 Compare X20, 0
	045 JumpIfEqual {310}
	046 Move X8, 0xA3D000
	047 Move X8, [X8+3000]
	048 Move X9, [X20]
	049 Move X8, [X8]
	050 Move W11, [X9+304]
	051 Move W10, [X8+304]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X9, [X9+200]
	054 Add X9, X9, X10
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X20]
	058 Move X21, [X19+48]
	059 Move X0, X20
	060 Move X9, [X8+376]
	061 Move X1, [X8+384]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X21, 0
	064 JumpIfEqual {310}
	065 Move W8, [X21+32]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X31+12], W31
	068 Move X0, [X19+48]
	069 Compare X0, 0
	070 JumpIfEqual {310}
	071 Move W8, [X0+88]
	072 Compare W8, 0
	073 JumpIfEqual {205}
	074 Move X8, [X0+48]
	075 Move [X0+88], W31
	076 Compare X8, 0
	077 JumpIfEqual {310}
	078 Move X0, X8
	079 Move X1, X31
	080 Call SafeHandle.Dispose, X0
	081 Move X24, [X19+48]
	082 Compare X24, 0
	083 JumpIfEqual {310}
	084 Move X8, 0xA39000
	085 Move X8, [X8+1928]
	086 Move W22, [X24+32]
	087 Move W21, [X24+36]
	088 Move W23, [X24+40]
	089 Move X0, [X8]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Add X3, X31, 12
	095 Move W0, W22
	096 Move W1, W21
	097 Move W2, W23
	098 Call 0x1C880E4
	099 Move X8, 0xA7C000
	100 Move X8, [X8+16]
	101 Move X21, X0
	102 Move X8, [X8]
	103 Move X0, X8
	104 Call 0x1C17F10
	105 Move W2, 1
	106 Move X1, X21
	107 Move X3, X31
	108 Move X22, X0
	109 Call SafeSocketHandle..ctor, X0, X1, X2
	110 Move [X24+48], X22
	111 Move W21, [X31+12]
	112 Compare W21, 0
	113 JumpIfEqual {202}
	114 Move X8, 0xA6E000
	115 Move X8, [X8+216]
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move W1, W21
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X21
	123 Call Socket.get_DualMode, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {67}
	128 Move X8, 0xA38000
	129 Move X8, [X8+1400]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X8, 0xA7C000
	133 Move X8, [X8+2416]
	134 Move X2, X31
	135 Move X20, X0
	136 Move X1, [X8]
	137 Call ArgumentException..ctor, X0, X1
	138 Move X22, 0xA3D000
	139 Move X22, [X22+2408]
	140 Move X21, [X20+16]
	141 Move X0, [X22]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Compare X21, 0
	147 JumpIfEqual {310}
	148 Move X8, [X22]
	149 Move X9, [X21]
	150 Move X0, X21
	151 Move X8, [X8+184]
	152 Move X1, [X8]
	153 Move X8, [X9+312]
	154 Move X2, [X9+320]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {180}
	160 Move X0, [X22]
	161 Move X21, [X20+16]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Compare X21, 0
	167 JumpIfEqual {310}
	168 Move X8, [X22]
	169 Move X9, [X21]
	170 Move X0, X21
	171 Move X8, [X8+184]
	172 Move X1, [X8+32]
	173 Move X8, [X9+312]
	174 Move X2, [X9+320]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {301}
	180 Move X8, 0xA6E000
	181 Move X8, [X8+216]
	182 Move X0, [X8]
	183 Call 0x1C17F10
	184 Move X20, X0
	185 Move W1, 0x2741
	186 Move X2, X31
	187 Call SocketException..ctor, X0, X1
	188 Move W2, 1
	189 Move X0, X19
	190 Move X1, X20
	191 Move X3, X31
	192 Call SocketAsyncResult.Complete, X0, X1, X2
	193 Move W0, W31
	194 Move X20, [X31+48]
	195 Move X19, [X31+56]
	196 Move X22, [X31+32]
	197 Move X21, [X31+40]
	198 Move X24, [X31+16]
	199 Move X23, [X31+24]
	200 Move X30, [X31+64]
	201 Return X0
	202 Move X0, [X19+48]
	203 Compare X0, 0
	204 JumpIfEqual {310}
	205 Move W23, [X0+80]
	206 Compare W23, 0
	207 JumpIfEqual {213}
	208 Move W1, W31
	209 Call Socket.set_Blocking, X0, X1
	210 Move X0, [X19+48]
	211 Compare X0, 0
	212 JumpIfEqual {310}
	213 Move X8, [X20]
	214 Move X21, [X0+48]
	215 Move X0, X20
	216 Move X9, [X8+392]
	217 Move X1, [X8+400]
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Move X22, 0xA39000
	220 Move X22, [X22+1928]
	221 Move X20, X0
	222 Move X8, [X22]
	223 Move W9, [X8+224]
	224 Compare W9, 0
	225 JumpIfNotEqual {228}
	226 Move X0, X8
	227 Call 0x1C17DFC
	228 Add X2, X31, 12
	229 Move X0, X21
	230 Move X1, X20
	231 Move W3, W31
	232 Call Socket.Connect_internal, X0, X1, X2, X3
	233 Compare W23, 0
	234 JumpIfEqual {240}
	235 Move X0, [X19+48]
	236 Compare X0, 0
	237 JumpIfEqual {310}
	238 Move W1, 1
	239 Call Socket.set_Blocking, X0, X1
	240 Move W20, [X31+12]
	241 Move X8, [X19+48]
	242 Compare W20, 0
	243 JumpIfEqual {282}
	244 Compare X8, 0
	245 JumpIfEqual {310}
	246 Move TEMP, 0x2732
	247 Not TEMP
	248 Move W9, TEMP
	249 Add W9, W20, W9
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction STURH not yet implemented."
	252 Move W9, 1
	253 Move X0, X19
	254 Move X1, X31
	255 Move [X8+88], W9
	256 Call SocketAsyncResult.get_Handle, X0
	257 Move X8, [X22]
	258 Move X20, X0
	259 Move W9, [X8+224]
	260 Compare W9, 0
	261 JumpIfNotEqual {265}
	262 Move X0, X8
	263 Call 0x1C17DFC
	264 Move X8, [X22]
	265 Move X9, 0xA7C000
	266 Move X8, [X8+184]
	267 Move X9, [X9+2544]
	268 Move X21, [X8+96]
	269 Move X0, [X9]
	270 Call 0x1C17F10
	271 Move W1, 2
	272 Move X2, X21
	273 Move X3, X19
	274 Move X4, X31
	275 Move X22, X0
	276 Call IOSelectorJob..ctor, X0, X1, X2, X3
	277 Move X0, X20
	278 Move X1, X22
	279 Move X2, X31
	280 Call IOSelector.Add, X0, X1
	281 Move W0, 1
	282 Compare X8, 0
	283 JumpIfEqual {310}
	284 Move W9, 257
	285 Move W1, 1
	286 Move X0, X19
	287 Move X2, X31
	288 NotImplemented "Instruction STURH not yet implemented."
	289 Call SocketAsyncResult.Complete, X0, X1
	290 Move X8, 0xA6E000
	291 Move X8, [X8+216]
	292 Move X0, [X8]
	293 Call 0x1C17F10
	294 Move W1, W20
	295 Move X2, X31
	296 Move X21, X0
	297 Call SocketException..ctor, X0, X1
	298 Move W2, 1
	299 Move X0, X19
	300 Move X1, X21
	301 Move X0, [X19+48]
	302 Compare X0, 0
	303 JumpIfEqual {310}
	304 Move X1, X20
	305 Call Socket.RemapIPEndPoint, X0, X1
	306 Move X20, X0
	307 Move [X19+72], X0
	308 Compare X0, 0
	309 JumpIfNotEqual {57}
	310 Call 0x1C17F20

Method: System.Void EndConnect(System.IAsyncResult asyncResult)

Disassembly:
	0x036AC670 LDR W8, [X0 + 0xE0]
	0x036AC674 CBNZ W8, 0x36AC680
	0x036AC678 BL 0x1C16DFC
	0x036AC67C LDR X0, [X21]
	0x036AC680 LDR X8, [X0 + 0xB8]
	0x036AC684 LDR X1, [X8 + 0x20]
	0x036AC688 MOV X0, X20
	0x036AC68C MOV X2, X31
	0x036AC690 BL 0x321BA08
	0x036AC694 TBZ X0, 0x0, 0x36AC760
	0x036AC698 LDRB W8, [X19 + 0x30]
	0x036AC69C CBZ W8, 0x36AC6A8
	0x036AC6A0 LDR X8, [X23 + 0x30]
	0x036AC6A4 CBNZ X8, 0x36AC768
	0x036AC6A8 LDR X8, [X23 + 0x48]
	0x036AC6AC CBZ X8, 0x36AC824
	0x036AC6B0 LDRB W9, [X8 + 0x32]
	0x036AC6B4 CBZ W9, 0x36AC568
	0x036AC6B8 LDR X20, [X23 + 0x38]
	0x036AC6BC CBNZ X20, 0x36AC6F4
	0x036AC6C0 LDR X9, [X19 + 0x28]
	0x036AC6C4 CBZ X9, 0x36AC82C
	0x036AC6C8 LDR X22, [X8 + 0x10]
	0x036AC6CC ADRP X8, 0xA93000
	0x036AC6D0 LDR X21, [X9 + 0x10]
	0x036AC6D4 LDR X8, [X8 + 0x40]
	0x036AC6D8 LDR X0, [X8]
	0x036AC6DC BL 0x1C16F10
	0x036AC6E0 MOV X20, X0
	0x036AC6E4 MOV X1, X31
	0x036AC6E8 BL 0x33BDD8C
	0x036AC6EC STP X21, X22, [X20 + 0x10]
	0x036AC6F0 STR X20, [X23 + 0x38]
	0x036AC6F4 LDP X2, X1, [X19 + 0x38]
	0x036AC6F8 MOV X0, X20
	0x036AC6FC BL 0x36ACB54
	0x036AC700 CBZ X0, 0x36AC828
	0x036AC704 MOV W1, W31
	0x036AC708 MOV X2, X31
	0x036AC70C BL 0x33ED3A0
	0x036AC710 STP X0, X1, [X31 + 0x30]
	0x036AC714 ADD X0, X31, 0x30
	0x036AC718 MOV X1, X31
	0x036AC71C BL 0x32C40D4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD35000
	008 Move X21, 0xA93000
	009 Move X22, 0xA73000
	010 Move W8, [X23+2541]
	011 Move X21, [X21+4048]
	012 Move X22, [X22+3536]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA73000
	020 Move X0, [X0+3536]
	021 Call 0x1C17CF4
	022 Move X0, 0xA93000
	023 Move X0, [X0+4048]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2541], W8
	027 Move X0, X20
	028 Call Socket.ThrowIfDisposedAndClosed, X0
	029 Move X2, [X21]
	030 Move X3, [X22]
	031 Move X1, X19
	032 Call Socket.ValidateEndIAsyncResult, X0, X1, X2, X3
	033 Compare X0, 0
	034 JumpIfEqual {58}
	035 Move W8, [X0+41]
	036 Move X19, X0
	037 Compare W8, 0
	038 JumpIfNotEqual {48}
	039 Move X0, X19
	040 Move X1, X31
	041 Call IOAsyncResult.get_AsyncWaitHandle, X0
	042 Compare X0, 0
	043 JumpIfEqual {58}
	044 Move X8, [X0]
	045 Move X9, [X8+472]
	046 Move X1, [X8+480]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Call SocketAsyncResult.CheckIfThrowDelayedException, X0
	057 Return 
	058 Call 0x1C17F20

Method: System.Void Connect_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Net.SocketAddress sa, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C4028 BL 0x1C16CF4
	0x036C402C ADRP X0, 0xA5A000
	0x036C4030 LDR X0, [X0 + 0x2D0]
	0x036C4034 BL 0x1C16CF4
	0x036C4038 ADRP X0, 0xA38000
	0x036C403C LDR X0, [X0 + 0x788]
	0x036C4040 BL 0x1C16CF4
	0x036C4044 MOVZ W8, 0x1
	0x036C4048 STRB W8, [X28 + 0x9F3]
	0x036C404C MOV X0, X19
	0x036C4050 STR W31, [X31 + 0x5C]
	0x036C4054 STP X31, X31, [X31 + 0x30]
	0x036C4058 STR X31, [X31 + 0x40]
	0x036C405C BL 0x36C19E0
	0x036C4060 LDR X27, [X27]
	0x036C4064 AND W8, W26, 0x7FFFFFFF
	0x036C4068 SUBS W8, W8, W24
	0x036C406C B.CC 0x36C4078
	0x036C4070 CMP W8, W22
	0x036C4074 B.CS 0x36C4080
	0x036C4078 MOV X0, X31
	0x036C407C BL 0x339D6EC
	0x036C4080 LDR X0, [X27 + 0x20]
	0x036C4084 ADRP X28, 0xA7B000
	0x036C4088 ADRP X27, 0xA38000
	0x036C408C LDRB W8, [X0 + 0x135]
	0x036C4090 LDR X28, [X28 + 0xB18]
	0x036C4094 LDR X27, [X27 + 0x788]
	0x036C4098 TBNZ X8, 0x0, 0x36C40A0
	0x036C409C BL 0x1C5C684
	0x036C40A0 LDR X1, [X28]
	0x036C40A4 AND W8, W26, 0x80000000
	0x036C40A8 ADD W9, W25, W24
	0x036C40AC ORR W8, W8, W22, 0x0
	0x036C40B0 BFM X9, X8, 0x20, 0x1F
	0x036C40B4 ADD X8, X31, 0x8
	0x036C40B8 ADD X0, X31, 0x20
	0x036C40BC STP X23, X9, [X31 + 0x20]
	0x036C40C0 BL 0x319E2B4
	0x036C40C4 LDUR V0, [X31 + 0x8]
	0x036C40C8 LDR X8, [X31 + 0x18]
	0x036C40CC LDR X0, [X27]
	0x036C40D0 STR V0, [X31 + 0x3]
	0x036C40D4 STR X8, [X31 + 0x40]
	0x036C40D8 LDR X23, [X19 + 0x30]
	0x036C40DC LDR X24, [X31 + 0x30]
	0x036C40E0 LDR W8, [X0 + 0xE0]
	0x036C40E4 LDRB W25, [X19 + 0x50]
	0x036C40E8 CBNZ W8, 0x36C40F0
	0x036C40EC BL 0x1C16DFC
	0x036C40F0 CMP W25, 0x0
	0x036C40F4 CSET W5, NE
	0x036C40F8 ADD X4, X31, 0x5C
	0x036C40FC MOV X0, X23
	0x036C4100 MOV X1, X24
	0x036C4104 MOV W2, W22
	0x036C4108 MOV W3, W21
	0x036C410C BL 0x36C3E90
	0x036C4110 MOV W21, W0
	0x036C4114 ADD X0, X31, 0x30
	0x036C4118 MOV X1, X31
	0x036C411C BL 0x335E4B0
	0x036C4120 LDR W8, [X31 + 0x5C]
	0x036C4124 MOVN W9, 0x2732
	0x036C4128 ADD W9, W8, W9
	0x036C412C CMP W9, 0x2
	0x036C4130 STR W8, [X20]
	0x036C4134 B.CC 0x36C413C
	0x036C4138 CBNZ W8, 0x36C4148
	0x036C413C MOVZ W8, 0x1
	0x036C4140 STRB W8, [X19 + 0x52]
	0x036C4144 B 0x36C414C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD1D000
	008 Move W8, [X23+2542]
	009 Move W22, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xA39000
	018 Move X0, [X0+1928]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2542], W8
	022 Compare X19, 0
	023 JumpIfEqual {50}
	024 Move X0, X19
	025 Move X1, X31
	026 Call SafeSocketHandle.RegisterForBlockingSyscall, X0
	027 Move X8, 0xA39000
	028 Move X8, [X8+1928]
	029 Move X23, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 And W3, W22, 1
	036 Move X0, X23
	037 Move X1, X21
	038 Move X2, X20
	039 Call 0x1C86DC4
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	049 Return 
	050 Call 0x1C17F20
	051 Move X21, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X21
	054 Call 0x3EB2AD0
	055 Move X20, [X0]
	056 Call 0x3EB2AE0
	057 Compare X19, 0
	058 JumpIfEqual {72}
	059 Move X0, X19
	060 Move X1, X31
	061 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	062 Compare X20, 0
	063 JumpIfNotEqual {73}
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return 
	071 Move X20, X31
	072 Call 0x1C17F20
	073 Move X0, X20
	074 Call 0x1C17F18
	075 Move X21, X0
	076 Compare X19, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17F20
	079 Move X0, X19
	080 Move X1, X31
	081 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	082 Compare X20, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X21
	085 Call 0x1D2D690
	086 Move X0, X20
	087 Call 0x1C17F18
	088 Call 0x1991590

Method: System.Void Connect_icall(System.IntPtr sock, System.Net.SocketAddress sa, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C4A4C ADRP X25, 0xD1C000
	0x036C4A50 LDRB W8, [X25 + 0xA05]

ISIL:
	001 And W3, W3, 1
	002 Call 0x1C86DC4
	003 Return 

Method: System.Void Disconnect(System.Boolean reuseSocket)

Disassembly:
	0x036C4A54 MOV W23, W5
	0x036C4A58 MOV X20, X4
	0x036C4A5C MOV W21, W3
	0x036C4A60 MOV W22, W2
	0x036C4A64 MOV X24, X1
	0x036C4A68 MOV X19, X0
	0x036C4A6C TBNZ X8, 0x0, 0x36C4A84
	0x036C4A70 ADRP X0, 0xA38000
	0x036C4A74 LDR X0, [X0 + 0x788]
	0x036C4A78 BL 0x1C16CF4
	0x036C4A7C MOVZ W8, 0x1
	0x036C4A80 STRB W8, [X25 + 0xA05]
	0x036C4A84 CBZ X19, 0x36C4AF4
	0x036C4A88 MOV X0, X19
	0x036C4A8C MOV X1, X31
	0x036C4A90 BL 0x36CC990
	0x036C4A94 ADRP X8, 0xA38000
	0x036C4A98 LDR X8, [X8 + 0x788]
	0x036C4A9C LDR X25, [X19 + 0x10]
	0x036C4AA0 LDR X0, [X8]
	0x036C4AA4 LDR W8, [X0 + 0xE0]
	0x036C4AA8 CBNZ W8, 0x36C4AB0
	0x036C4AAC BL 0x1C16DFC
	0x036C4AB0 AND W5, W23, 0x1
	0x036C4AB4 MOV X0, X25
	0x036C4AB8 MOV X1, X24
	0x036C4ABC MOV W2, W22
	0x036C4AC0 MOV W3, W21
	0x036C4AC4 MOV X4, X20
	0x036C4AC8 BL 0x1C86D30
	0x036C4ACC MOV W20, W0
	0x036C4AD0 MOV X0, X19
	0x036C4AD4 MOV X1, X31
	0x036C4AD8 BL 0x36CCACC
	0x036C4ADC MOV W0, W20
	0x036C4AE0 LDP X20, X19, [X31 + 0x30]
	0x036C4AE4 LDP X22, X21, [X31 + 0x20]
	0x036C4AE8 LDP X24, X23, [X31 + 0x10]
	0x036C4AEC LDP X30, X25, [X31], #0x40
	0x036C4AF0 RET
	0x036C4AF4 BL 0x1C16F20
	0x036C4AF8 B 0x36C4B00
	0x036C4AFC B 0x36C4B00
	0x036C4B00 MOV X20, X0
	0x036C4B04 CMP W1, 0x1
	0x036C4B08 B.NE 0x36C4B38
	0x036C4B0C MOV X0, X20
	0x036C4B10 BL 0x3EB1AD0
	0x036C4B14 LDR X21, [X0]
	0x036C4B18 BL 0x3EB1AE0
	0x036C4B1C CBZ X19, 0x36C4B40
	0x036C4B20 MOV X0, X19
	0x036C4B24 MOV X1, X31
	0x036C4B28 BL 0x36CCACC
	0x036C4B2C CBNZ X21, 0x36C4B44
	0x036C4B30 MOV W20, W31
	0x036C4B34 B 0x36C4ADC
	0x036C4B38 MOV X21, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1D000
	007 Move X21, 0xA39000
	008 Move W8, [X22+2543]
	009 Move X21, [X21+1928]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA39000
	017 Move X0, [X0+1928]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2543], W8
	021 Move X0, X19
	022 Call Socket.ThrowIfDisposedAndClosed, X0
	023 Move X0, [X21]
	024 Move [X31+12], W31
	025 Move X21, [X19+48]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 And W1, W20, 1
	031 Add X2, X31, 12
	032 Move X0, X21
	033 Call Socket.Disconnect_internal, X0, X1, X2
	034 Move W20, [X31+12]
	035 Compare W20, 0
	036 JumpIfNotEqual {44}
	037 Move [X19+82], W31
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, 0xA5B000
	046 Move X0, [X0+3152]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X19, X0
	051 Call PlatformNotSupportedException..ctor, X0
	052 Move X0, 0xA6E000
	053 Move X0, [X0+216]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move W1, W20
	057 Move X2, X31
	058 Move X19, X0
	059 Call SocketException..ctor, X0, X1
	060 Move X0, 0xA7C000
	061 Move X0, [X0+2776]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC

Method: System.Void EndDisconnect(System.IAsyncResult asyncResult)

Disassembly:
	0x036C4C60 MOV X0, X19
	0x036C4C64 MOV X1, X31
	0x036C4C68 BL 0x36CCACC
	0x036C4C6C CBNZ X21, 0x36C4C84
	0x036C4C70 MOV W20, W31
	0x036C4C74 B 0x36C4C1C
	0x036C4C78 MOV X21, X31
	0x036C4C7C B 0x36C4C90
	0x036C4C80 BL 0x1C16F20
	0x036C4C84 MOV X0, X21
	0x036C4C88 BL 0x1C16F18
	0x036C4C8C MOV X20, X0
	0x036C4C90 CBNZ X19, 0x36C4C98
	0x036C4C94 BL 0x1C16F20
	0x036C4C98 MOV X0, X19
	0x036C4C9C MOV X1, X31
	0x036C4CA0 BL 0x36CCACC
	0x036C4CA4 CBNZ X21, 0x36C4CB0
	0x036C4CA8 MOV X0, X20
	0x036C4CAC BL 0x1D2C690
	0x036C4CB0 MOV X0, X21
	0x036C4CB4 BL 0x1C16F18
	0x036C4CB8 BL 0x1990590
	0x036C4CBC SUB X31, X31, 0x60
	0x036C4CC0 STR X30, [X31 + 0x10]
	0x036C4CC4 STP X26, X25, [X31 + 0x20]
	0x036C4CC8 STP X24, X23, [X31 + 0x30]
	0x036C4CCC STP X22, X21, [X31 + 0x40]
	0x036C4CD0 STP X20, X19, [X31 + 0x50]
	0x036C4CD4 ADRP X21, 0xD1C000
	0x036C4CD8 LDRB W8, [X21 + 0xA00]
	0x036C4CDC MOV X20, X1
	0x036C4CE0 MOV X19, X0
	0x036C4CE4 TBNZ X8, 0x0, 0x36C4D38
	0x036C4CE8 ADRP X0, 0xA7B000
	0x036C4CEC LDR X0, [X0 + 0x9E8]
	0x036C4CF0 BL 0x1C16CF4
	0x036C4CF4 ADRP X0, 0xA7B000
	0x036C4CF8 LDR X0, [X0 + 0x9F0]
	0x036C4CFC BL 0x1C16CF4
	0x036C4D00 ADRP X0, 0xA7B000
	0x036C4D04 LDR X0, [X0 + 0xB20]
	0x036C4D08 BL 0x1C16CF4
	0x036C4D0C ADRP X0, 0xA38000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD1D000
	008 Move X21, 0xA7C000
	009 Move X22, 0xA5B000
	010 Move W8, [X23+2544]
	011 Move X21, [X21+2784]
	012 Move X22, [X22+3536]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA7C000
	020 Move X0, [X0+2784]
	021 Call 0x1C17CF4
	022 Move X0, 0xA5B000
	023 Move X0, [X0+3536]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2544], W8
	027 Move X0, X20
	028 Call Socket.ThrowIfDisposedAndClosed, X0
	029 Move X2, [X21]
	030 Move X3, [X22]
	031 Move X1, X19
	032 Call Socket.ValidateEndIAsyncResult, X0, X1, X2, X3
	033 Compare X0, 0
	034 JumpIfEqual {58}
	035 Move W8, [X0+41]
	036 Move X19, X0
	037 Compare W8, 0
	038 JumpIfNotEqual {48}
	039 Move X0, X19
	040 Move X1, X31
	041 Call IOAsyncResult.get_AsyncWaitHandle, X0
	042 Compare X0, 0
	043 JumpIfEqual {58}
	044 Move X8, [X0]
	045 Move X9, [X8+472]
	046 Move X1, [X8+480]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Call SocketAsyncResult.CheckIfThrowDelayedException, X0
	057 Return 
	058 Call 0x1C17F20

Method: System.Void Disconnect_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Boolean reuse, out System.Int32 error)

Disassembly:
	0x036C4B3C B 0x36C4B50
	0x036C4B40 BL 0x1C16F20
	0x036C4B44 MOV X0, X21
	0x036C4B48 BL 0x1C16F18
	0x036C4B4C MOV X20, X0
	0x036C4B50 CBNZ X19, 0x36C4B58
	0x036C4B54 BL 0x1C16F20
	0x036C4B58 MOV X0, X19
	0x036C4B5C MOV X1, X31
	0x036C4B60 BL 0x36CCACC
	0x036C4B64 CBNZ X21, 0x36C4B70
	0x036C4B68 MOV X0, X20
	0x036C4B6C BL 0x1D2C690
	0x036C4B70 MOV X0, X21
	0x036C4B74 BL 0x1C16F18
	0x036C4B78 BL 0x1990590
	0x036C4B7C STP X30, X25, [X31 - 0x40]!
	0x036C4B80 STP X24, X23, [X31 + 0x10]
	0x036C4B84 STP X22, X21, [X31 + 0x20]
	0x036C4B88 STP X20, X19, [X31 + 0x30]
	0x036C4B8C ADRP X25, 0xD1C000
	0x036C4B90 LDRB W8, [X25 + 0xA04]
	0x036C4B94 MOV W23, W5
	0x036C4B98 MOV X20, X4
	0x036C4B9C MOV W21, W3
	0x036C4BA0 MOV W22, W2
	0x036C4BA4 MOV X24, X1
	0x036C4BA8 MOV X19, X0
	0x036C4BAC TBNZ X8, 0x0, 0x36C4BC4
	0x036C4BB0 ADRP X0, 0xA38000
	0x036C4BB4 LDR X0, [X0 + 0x788]
	0x036C4BB8 BL 0x1C16CF4
	0x036C4BBC MOVZ W8, 0x1
	0x036C4BC0 STRB W8, [X25 + 0xA04]
	0x036C4BC4 CBZ X19, 0x36C4C34
	0x036C4BC8 MOV X0, X19
	0x036C4BCC MOV X1, X31
	0x036C4BD0 BL 0x36CC990
	0x036C4BD4 ADRP X8, 0xA38000
	0x036C4BD8 LDR X8, [X8 + 0x788]
	0x036C4BDC LDR X25, [X19 + 0x10]
	0x036C4BE0 LDR X0, [X8]
	0x036C4BE4 LDR W8, [X0 + 0xE0]
	0x036C4BE8 CBNZ W8, 0x36C4BF0
	0x036C4BEC BL 0x1C16DFC
	0x036C4BF0 AND W5, W23, 0x1
	0x036C4BF4 MOV X0, X25
	0x036C4BF8 MOV X1, X24
	0x036C4BFC MOV W2, W22
	0x036C4C00 MOV W3, W21
	0x036C4C04 MOV X4, X20
	0x036C4C08 BL 0x1C86C80
	0x036C4C0C MOV W20, W0
	0x036C4C10 MOV X0, X19
	0x036C4C14 MOV X1, X31
	0x036C4C18 BL 0x36CCACC
	0x036C4C1C MOV W0, W20
	0x036C4C20 LDP X20, X19, [X31 + 0x30]
	0x036C4C24 LDP X22, X21, [X31 + 0x20]
	0x036C4C28 LDP X24, X23, [X31 + 0x10]
	0x036C4C2C LDP X30, X25, [X31], #0x40
	0x036C4C30 RET
	0x036C4C34 BL 0x1C16F20
	0x036C4C38 B 0x36C4C40
	0x036C4C3C B 0x36C4C40
	0x036C4C40 MOV X20, X0
	0x036C4C44 CMP W1, 0x1
	0x036C4C48 B.NE 0x36C4C78
	0x036C4C4C MOV X0, X20
	0x036C4C50 BL 0x3EB1AD0
	0x036C4C54 LDR X21, [X0]
	0x036C4C58 BL 0x3EB1AE0
	0x036C4C5C CBZ X19, 0x36C4C80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1D000
	007 Move W8, [X22+2545]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA39000
	016 Move X0, [X0+1928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2545], W8
	020 Move [X31+12], W31
	021 Compare X19, 0
	022 JumpIfEqual {54}
	023 Add X1, X31, 12
	024 Move X0, X19
	025 Move X2, X31
	026 Call SafeHandle.DangerousAddRef, X0, X1
	027 Move X8, 0xA39000
	028 Move X8, [X8+1928]
	029 Move X22, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 And W1, W21, 1
	036 Move X0, X22
	037 Move X2, X20
	038 Call 0x1C87058
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfEqual {48}
	042 Move X20, X31
	043 Move X0, X19
	044 Move X1, X31
	045 Call SafeHandle.DangerousRelease, X0
	046 Compare X20, 0
	047 JumpIfNotEqual {55}
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20
	055 Move X0, X20
	056 Call 0x1C17F18
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X21
	060 Call 0x3EB2AD0
	061 Move X20, [X0]
	062 Call 0x3EB2AE0
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {46}
	066 Compare X19, 0
	067 JumpIfNotEqual {43}
	068 Call 0x1C17F20
	069 Move X20, X31
	070 Move X21, X0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {80}
	074 Compare X19, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17F20
	077 Move X0, X19
	078 Move X1, X31
	079 Call SafeHandle.DangerousRelease, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X21
	083 Call 0x1D2D690
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: System.Void Disconnect_icall(System.IntPtr sock, System.Boolean reuse, out System.Int32 error)

Disassembly:
	0x036C4D10 LDR X0, [X0 + 0x788]
	0x036C4D14 BL 0x1C16CF4

ISIL:
	001 And W1, W1, 1
	002 Call 0x1C87058
	003 Return 

Method: System.Int32 Receive(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036C15EC BL 0x1C16DFC
	0x036C15F0 MOV X0, X22
	0x036C15F4 MOV W1, W21
	0x036C15F8 MOV X2, X20
	0x036C15FC BL 0x1C8706C
	0x036C1600 LDRB W8, [X31 + 0xC]
	0x036C1604 CBZ W8, 0x36C161C
	0x036C1608 MOV X20, X31
	0x036C160C MOV X0, X19
	0x036C1610 MOV X1, X31
	0x036C1614 BL 0x32BFAB4
	0x036C1618 CBNZ X20, 0x36C1630
	0x036C161C LDP X20, X19, [X31 + 0x20]
	0x036C1620 LDP X22, X21, [X31 + 0x10]
	0x036C1624 LDR X30, [X31], #0x30
	0x036C1628 RET
	0x036C162C BL 0x1C16F20
	0x036C1630 MOV X0, X20
	0x036C1634 BL 0x1C16F18
	0x036C1638 B 0x36C163C
	0x036C163C MOV X21, X0
	0x036C1640 CMP W1, 0x1
	0x036C1644 B.NE 0x36C1668
	0x036C1648 MOV X0, X21
	0x036C164C BL 0x3EB1AD0
	0x036C1650 LDR X20, [X0]
	0x036C1654 BL 0x3EB1AE0
	0x036C1658 LDRB W8, [X31 + 0xC]
	0x036C165C CBZ W8, 0x36C1618
	0x036C1660 CBNZ X19, 0x36C160C
	0x036C1664 BL 0x1C16F20
	0x036C1668 MOV X20, X31
	0x036C166C B 0x36C1674
	0x036C1670 MOV X21, X0
	0x036C1674 LDRB W8, [X31 + 0xC]
	0x036C1678 CBZ W8, 0x36C1690
	0x036C167C CBNZ X19, 0x36C1684
	0x036C1680 BL 0x1C16F20
	0x036C1684 MOV X0, X19
	0x036C1688 MOV X1, X31
	0x036C168C BL 0x32BFAB4
	0x036C1690 CBNZ X20, 0x36C169C
	0x036C1694 MOV X0, X21
	0x036C1698 BL 0x1D2C690
	0x036C169C MOV X0, X20
	0x036C16A0 BL 0x1C16F18
	0x036C16A4 BL 0x1990590
	0x036C16A8 STR X30, [X31 - 0x50]!
	0x036C16AC STP X26, X25, [X31 + 0x10]
	0x036C16B0 STP X24, X23, [X31 + 0x20]
	0x036C16B4 STP X22, X21, [X31 + 0x30]
	0x036C16B8 STP X20, X19, [X31 + 0x40]
	0x036C16BC ADRP X26, 0xD1F000
	0x036C16C0 LDRB W8, [X26 + 0xA0A]
	0x036C16C4 MOV X20, X6
	0x036C16C8 MOV W21, W5
	0x036C16CC MOV X22, X4
	0x036C16D0 MOV X23, X3
	0x036C16D4 MOV W24, W2
	0x036C16D8 MOV W25, W1
	0x036C16DC MOV X19, X0
	0x036C16E0 TBNZ X8, 0x0, 0x36C16F8
	0x036C16E4 ADRP X0, 0xA3B000
	0x036C16E8 LDR X0, [X0 + 0x788]
	0x036C16EC BL 0x1C16CF4
	0x036C16F0 MOVZ W8, 0x1
	0x036C16F4 STRB W8, [X26 + 0xA0A]
	0x036C16F8 STRB W31, [X31 + 0xC]
	0x036C16FC CBZ X19, 0x36C1780
	0x036C1700 ADD X1, X31, 0xC
	0x036C1704 MOV X0, X19
	0x036C1708 MOV X2, X31
	0x036C170C BL 0x32BF948
	0x036C1710 ADRP X8, 0xA3B000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xD20000
	011 Move W8, [X25+2546]
	012 Move X20, X5
	013 Move W21, W4
	014 Move W22, W3
	015 Move W23, W2
	016 Move X24, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xA3C000
	023 Move X0, [X0+1928]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+2546], W8
	027 Move X25, 0xA3C000
	028 Move X25, [X25+1928]
	029 Move X0, X19
	030 Move [X31+12], W31
	031 Call Socket.ThrowIfDisposedAndClosed, X0
	032 Move X1, X24
	033 Call Socket.ThrowIfBufferNull, X0, X1
	034 Move X1, X24
	035 Move W2, W23
	036 Move W3, W22
	037 Call Socket.ThrowIfBufferOutOfRange, X0, X1, X2, X3
	038 Compare X24, 0
	039 JumpIfEqual {44}
	040 Move W8, [X24+24]
	041 Compare W8, 0
	042 JumpIfEqual {44}
	043 Add X26, X24, 32
	044 Move X26, X31
	045 Move X0, [X25]
	046 Move X24, [X19+48]
	047 Move W25, [X19+80]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Add X1, X26, W23
	055 Add X4, X31, 12
	056 Move X0, X24
	057 Move W2, W22
	058 Move W3, W21
	059 Call Socket.Receive_internal, X0, X1, X2, X3, X4, X5
	060 Move W9, [X31+12]
	061 Move W8, W0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Move [X20], W9
	065 Compare W9, 0
	066 JumpIfEqual {72}
	067 Move W10, 0x2733
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, 0x2734
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, W0
	072 Move W9, 1
	073 Move W0, W8
	074 Move [X19+82], W9
	075 NotImplemented "Instruction STURH not yet implemented."
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X24, [X31+32]
	081 Move X23, [X31+40]
	082 Move X26, [X31+16]
	083 Move X25, [X31+24]
	084 Move X30, [X31+80]
	085 Return X0

Method: System.Int32 Receive(System.Memory`1<System.Byte> buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036C4FD0 LDR X0, [X0 + 0xB18]
	0x036C4FD4 BL 0x1C16CF4
	0x036C4FD8 ADRP X0, 0xA5A000
	0x036C4FDC LDR X0, [X0 + 0x2D0]
	0x036C4FE0 BL 0x1C16CF4
	0x036C4FE4 ADRP X0, 0xA38000
	0x036C4FE8 LDR X0, [X0 + 0x788]
	0x036C4FEC BL 0x1C16CF4
	0x036C4FF0 ADRP X0, 0xA7B000
	0x036C4FF4 LDR X0, [X0 + 0xB60]
	0x036C4FF8 BL 0x1C16CF4
	0x036C4FFC ADRP X0, 0xA7B000
	0x036C5000 LDR X0, [X0 + 0xB58]
	0x036C5004 BL 0x1C16CF4
	0x036C5008 MOVZ W8, 0x1
	0x036C500C STRB W8, [X22 + 0xA02]
	0x036C5010 LDR X0, [X20]
	0x036C5014 STP X31, X31, [X31 + 0x30]
	0x036C5018 STR X31, [X31 + 0x40]
	0x036C501C STP X31, X31, [X31 + 0x20]
	0x036C5020 BL 0x1C16F10
	0x036C5024 MOV X1, X31
	0x036C5028 MOV X20, X0
	0x036C502C BL 0x36CA874
	0x036C5030 CBZ X20, 0x36C52DC
	0x036C5034 STR W21, [X20 + 0x10]
	0x036C5038 CBZ X19, 0x36C5204
	0x036C503C ADRP X8, 0xA59000
	0x036C5040 LDP W23, W21, [X19 + 0x5C]
	0x036C5044 LDR X8, [X8 + 0x2D0]
	0x036C5048 LDR W22, [X19 + 0x64]
	0x036C504C LDR X24, [X8]
	0x036C5050 AND W8, W23, 0x7FFFFFFF
	0x036C5054 SUBS W8, W8, W21
	0x036C5058 B.CC 0x36C5064
	0x036C505C CMP W8, W22
	0x036C5060 B.CS 0x36C506C
	0x036C5064 MOV X0, X31
	0x036C5068 BL 0x339D6EC
	0x036C506C LDR X0, [X24 + 0x20]
	0x036C5070 LDR X24, [X19 + 0x50]
	0x036C5074 LDR W25, [X19 + 0x58]
	0x036C5078 LDRB W8, [X0 + 0x135]
	0x036C507C TBNZ X8, 0x0, 0x36C5084
	0x036C5080 BL 0x1C5C684
	0x036C5084 ADRP X8, 0xA7A000
	0x036C5088 LDR X8, [X8 + 0xB18]
	0x036C508C AND W9, W23, 0x80000000
	0x036C5090 ADD W10, W25, W21
	0x036C5094 ORR W9, W9, W22, 0x0
	0x036C5098 LDR X1, [X8]
	0x036C509C BFM X10, X9, 0x20, 0x1F
	0x036C50A0 STP X24, X10, [X31 + 0x20]
	0x036C50A4 ADD X8, X31, 0x8
	0x036C50A8 ADD X0, X31, 0x20
	0x036C50AC BL 0x319E2B4
	0x036C50B0 LDUR V0, [X31 + 0x8]
	0x036C50B4 LDR X8, [X31 + 0x18]
	0x036C50B8 STR V0, [X31 + 0x3]
	0x036C50BC STR X8, [X31 + 0x40]
	0x036C50C0 LDR X8, [X19 + 0x30]
	0x036C50C4 CBZ X8, 0x36C5208
	0x036C50C8 ADRP X9, 0xA37000
	0x036C50CC LDR X9, [X9 + 0x788]
	0x036C50D0 LDR X24, [X8 + 0x30]
	0x036C50D4 LDR X23, [X31 + 0x30]
	0x036C50D8 LDP W22, W21, [X19 + 0x64]
	0x036C50DC LDR X0, [X9]
	0x036C50E0 LDR W8, [X0 + 0xE0]
	0x036C50E4 CBNZ W8, 0x36C50EC
	0x036C50E8 BL 0x1C16DFC
	0x036C50EC ADD X4, X19, 0xA4
	0x036C50F0 MOV X0, X24
	0x036C50F4 MOV X1, X23
	0x036C50F8 MOV W2, W22
	0x036C50FC MOV W3, W21
	0x036C5100 MOV W5, W31
	0x036C5104 BL 0x36C4A3C
	0x036C5108 MOV W21, W0
	0x036C510C MOV X22, X31
	0x036C5110 ADD X0, X31, 0x30
	0x036C5114 MOV X1, X31
	0x036C5118 BL 0x335E4B0
	0x036C511C CBNZ X22, 0x36C520C
	0x036C5120 LDR W8, [X19 + 0xA4]
	0x036C5124 LDR W1, [X20 + 0x10]
	0x036C5128 CBNZ W8, 0x36C51E0
	0x036C512C ADD W1, W1, W21
	0x036C5130 STR W1, [X20 + 0x10]
	0x036C5134 LDP W8, W10, [X19 + 0x60]
	0x036C5138 LDR X9, [X19 + 0x30]
	0x036C513C ADD W11, W8, W21
	0x036C5140 SUB W8, W10, W21
	0x036C5144 STP W11, W8, [X19 + 0x60]
	0x036C5148 CBZ X9, 0x36C52DC
	0x036C514C LDR W9, [X9 + 0x54]
	0x036C5150 CMP W9, 0x1
	0x036C5154 B.EQ 0x36C51E0
	0x036C5158 CMP W8, 0x1
	0x036C515C B.LT 0x36C51DC
	0x036C5160 MOV X0, X19
	0x036C5164 MOV X1, X31
	0x036C5168 BL 0x36CD068
	0x036C516C ADRP X8, 0xA7A000
	0x036C5170 LDR X8, [X8 + 0x9E8]
	0x036C5174 MOV X21, X0
	0x036C5178 LDR X8, [X8]
	0x036C517C MOV X0, X8
	0x036C5180 BL 0x1C16F10
	0x036C5184 ADRP X8, 0xA7A000
	0x036C5188 LDR X8, [X8 + 0xB60]
	0x036C518C MOV X1, X20
	0x036C5190 MOV X3, X31
	0x036C5194 MOV X22, X0
	0x036C5198 LDR X2, [X8]
	0x036C519C BL 0x362E274
	0x036C51A0 ADRP X8, 0xA7A000
	0x036C51A4 LDR X8, [X8 + 0x9F0]
	0x036C51A8 LDR X0, [X8]
	0x036C51AC BL 0x1C16F10
	0x036C51B0 MOVZ W1, 0x2
	0x036C51B4 MOV X2, X22
	0x036C51B8 MOV X3, X19
	0x036C51BC MOV X4, X31
	0x036C51C0 MOV X20, X0
	0x036C51C4 BL 0x362E5F8
	0x036C51C8 MOV X0, X21
	0x036C51CC MOV X1, X20
	0x036C51D0 MOV X2, X31
	0x036C51D4 BL 0x362E680

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X30
	003 Move [X31+96], X28
	004 Move [X31+104], X27
	005 Move [X31+112], X26
	006 Move [X31+120], X25
	007 Move [X31+128], X24
	008 Move [X31+136], X23
	009 Move [X31+144], X22
	010 Move [X31+152], X21
	011 Move [X31+160], X20
	012 Move [X31+168], X19
	013 Move X28, 0xD1D000
	014 Move X27, 0xA5B000
	015 Move W8, [X28+2547]
	016 Move X27, [X27+720]
	017 Move X20, X6
	018 Move W21, W5
	019 Move W22, W4
	020 Move W24, W3
	021 Move X25, X2
	022 Move X23, X1
	023 Move X19, X0
	024 Move X26, X2
	025 ShiftRight X26, 32
	026 And X26, X26, 0x7FFFFFFF
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0xA7B000
	032 Move X0, [X0+2840]
	033 Call 0x1C17CF4
	034 Move X0, 0xA5A000
	035 Move X0, [X0+720]
	036 Call 0x1C17CF4
	037 Move X0, 0xA38000
	038 Move X0, [X0+1928]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X28+2547], W8
	042 Move X0, X19
	043 Move [X31+92], W31
	044 Move [X31+48], X31
	045 Move [X31+56], X31
	046 Move [X31+64], X31
	047 Call Socket.ThrowIfDisposedAndClosed, X0
	048 Move X27, [X27]
	049 And W8, W26, 0x7FFFFFFF
	050 Subtract W8, W8, W24
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X31
	053 Call ThrowHelper.ThrowArgumentOutOfRangeException
	054 Move X0, [X27+32]
	055 Move X28, 0xA7B000
	056 Move X27, 0xA38000
	057 Move W8, [X0+309]
	058 Move X28, [X28+2840]
	059 Move X27, [X27+1928]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X1, [X28]
	066 And W8, W26, 0x80000000
	067 Add W9, W25, W24
	068 Or W8, W8, W22
	069 NotImplemented "Instruction BFM not yet implemented."
	070 Add X8, X31, 8
	071 Add X0, X31, 32
	072 Move [X31+32], X23
	073 Move [X31+40], X9
	074 Call 0x319F2B4, X0
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move X8, [X31+24]
	077 Move X0, [X27]
	078 Move [X31+3], V0
	079 Move [X31+64], X8
	080 Move X23, [X19+48]
	081 Move X24, [X31+48]
	082 Move W8, [X0+224]
	083 Move W25, [X19+80]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSET not yet implemented."
	089 Add X4, X31, 92
	090 Move X0, X23
	091 Move X1, X24
	092 Move W2, W22
	093 Move W3, W21
	094 Call Socket.Receive_internal, X0, X1, X2, X3, X4, X5
	095 Move W21, W0
	096 Add X0, X31, 48
	097 Move X1, X31
	098 Call MemoryHandle.Dispose, X0
	099 Move W8, [X31+92]
	100 Move TEMP, 0x2732
	101 Not TEMP
	102 Move W9, TEMP
	103 Add W9, W8, W9
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move [X20], W8
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Move W8, 1
	109 Move [X19+82], W8
	110 NotImplemented "Instruction STURH not yet implemented."
	111 Move W0, W21
	112 Move X20, [X31+160]
	113 Move X19, [X31+168]
	114 Move X22, [X31+144]
	115 Move X21, [X31+152]
	116 Move X24, [X31+128]
	117 Move X23, [X31+136]
	118 Move X26, [X31+112]
	119 Move X25, [X31+120]
	120 Move X28, [X31+96]
	121 Move X27, [X31+104]
	122 Move X30, [X31+80]
	123 Add X31, X31, 176
	124 Return X0
	125 Move X22, X0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, X22
	128 Call 0x3EB2AD0
	129 Move X21, [X0]
	130 Call 0x3EB2AE0
	131 Add X0, X31, 48
	132 Move X1, X31
	133 Call MemoryHandle.Dispose, X0
	134 Compare X21, 0
	135 JumpIfEqual {99}
	136 Move X0, X21
	137 Call 0x1C17F18
	138 Move X21, X31
	139 Move X22, X0
	140 Add X0, X31, 48
	141 Move X1, X31
	142 Call MemoryHandle.Dispose, X0
	143 Compare X21, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X22
	146 Call 0x1D2D690
	147 Move X0, X21
	148 Call 0x1C17F18
	149 Call 0x1991590

Method: System.Int32 Receive(System.Collections.Generic.IList`1<System.ArraySegment`1<System.Byte>> buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036C1774 LDP X26, X25, [X31 + 0x10]
	0x036C1778 LDR X30, [X31], #0x50
	0x036C177C RET
	0x036C1780 BL 0x1C16F20
	0x036C1784 MOV X0, X20
	0x036C1788 BL 0x1C16F18
	0x036C178C B 0x36C1790
	0x036C1790 MOV X21, X0
	0x036C1794 CMP W1, 0x1
	0x036C1798 B.NE 0x36C17BC
	0x036C179C MOV X0, X21
	0x036C17A0 BL 0x3EB1AD0
	0x036C17A4 LDR X20, [X0]
	0x036C17A8 BL 0x3EB1AE0
	0x036C17AC LDRB W8, [X31 + 0xC]
	0x036C17B0 CBZ W8, 0x36C1764
	0x036C17B4 CBNZ X19, 0x36C1758
	0x036C17B8 BL 0x1C16F20
	0x036C17BC MOV X20, X31
	0x036C17C0 B 0x36C17C8
	0x036C17C4 MOV X21, X0
	0x036C17C8 LDRB W8, [X31 + 0xC]
	0x036C17CC CBZ W8, 0x36C17E4
	0x036C17D0 CBNZ X19, 0x36C17D8
	0x036C17D4 BL 0x1C16F20
	0x036C17D8 MOV X0, X19
	0x036C17DC MOV X1, X31
	0x036C17E0 BL 0x32BFAB4
	0x036C17E4 CBNZ X20, 0x36C17F0
	0x036C17E8 MOV X0, X21
	0x036C17EC BL 0x1D2C690
	0x036C17F0 MOV X0, X20
	0x036C17F4 BL 0x1C16F18
	0x036C17F8 BL 0x1990590
	0x036C17FC STP X30, X27, [X31 - 0x50]!
	0x036C1800 STP X26, X25, [X31 + 0x10]
	0x036C1804 STP X24, X23, [X31 + 0x20]
	0x036C1808 STP X22, X21, [X31 + 0x30]
	0x036C180C STP X20, X19, [X31 + 0x40]
	0x036C1810 ADRP X24, 0xD1F000
	0x036C1814 ADRP X26, 0xA61000
	0x036C1818 ADRP X25, 0xA3B000
	0x036C181C LDRB W8, [X24 + 0x9D5]
	0x036C1820 LDR X26, [X26 + 0xEB0]
	0x036C1824 LDR X25, [X25 + 0x788]
	0x036C1828 MOV X19, X4
	0x036C182C MOV W20, W3
	0x036C1830 MOV W22, W2
	0x036C1834 MOV W23, W1
	0x036C1838 MOV X21, X0
	0x036C183C TBNZ X8, 0x0, 0x36C1860
	0x036C1840 ADRP X0, 0xA61000
	0x036C1844 LDR X0, [X0 + 0xEB0]
	0x036C1848 BL 0x1C16CF4
	0x036C184C ADRP X0, 0xA3B000
	0x036C1850 LDR X0, [X0 + 0x788]
	0x036C1854 BL 0x1C16CF4
	0x036C1858 MOVZ W8, 0x1
	0x036C185C STRB W8, [X24 + 0x9D5]
	0x036C1860 LDR X0, [X26]
	0x036C1864 BL 0x1C16F10
	0x036C1868 MOVZ W1, 0x1
	0x036C186C MOVZ W2, 0x1
	0x036C1870 MOV X3, X31
	0x036C1874 MOV X24, X0
	0x036C1878 MOVZ W27, 0x1
	0x036C187C BL 0x33E1550
	0x036C1880 STR X24, [X21 + 0x40]
	0x036C1884 LDR X0, [X26]
	0x036C1888 BL 0x1C16F10
	0x036C188C MOVZ W1, 0x1
	0x036C1890 MOVZ W2, 0x1
	0x036C1894 MOV X3, X31
	0x036C1898 MOV X24, X0
	0x036C189C BL 0x33E1550
	0x036C18A0 MOV X0, X21
	0x036C18A4 MOV X1, X31
	0x036C18A8 STR X24, [X21 + 0x48]
	0x036C18AC STRB W27, [X21 + 0x50]
	0x036C18B0 BL 0x33BDD8C
	0x036C18B4 STP W23, W22, [X21 + 0x20]
	0x036C18B8 STR W20, [X21 + 0x28]
	0x036C18BC STR X19, [X21 + 0x30]
	0x036C18C0 STRB W27, [X21 + 0x52]
	0x036C18C4 LDR X0, [X25]
	0x036C18C8 LDR W8, [X0 + 0xE0]
	0x036C18CC CBNZ W8, 0x36C18D4
	0x036C18D0 BL 0x1C16DFC
	0x036C18D4 LDP X20, X19, [X31 + 0x40]
	0x036C18D8 LDP X22, X21, [X31 + 0x30]
	0x036C18DC LDP X24, X23, [X31 + 0x20]
	0x036C18E0 LDP X26, X25, [X31 + 0x10]
	0x036C18E4 LDP X30, X27, [X31], #0x50
	0x036C18E8 B 0x36BED44
	0x036C18EC LDRB W0, [X0 + 0x51]
	0x036C18F0 RET
	0x036C18F4 SUB X31, X31, 0x30
	0x036C18F8 STP X30, X21, [X31 + 0x10]
	0x036C18FC STP X20, X19, [X31 + 0x20]
	0x036C1900 ADRP X20, 0xD1F000
	0x036C1904 LDRB W8, [X20 + 0x9D6]
	0x036C1908 MOV X19, X0
	0x036C190C TBNZ X8, 0x0, 0x36C1924
	0x036C1910 ADRP X0, 0xA3B000
	0x036C1914 LDR X0, [X0 + 0x788]
	0x036C1918 BL 0x1C16CF4
	0x036C191C MOVZ W8, 0x1
	0x036C1920 STRB W8, [X20 + 0x9D6]
	0x036C1924 MOV X0, X19
	0x036C1928 STR W31, [X31 + 0xC]
	0x036C192C BL 0x36C19E0
	0x036C1930 LDR X8, [X19 + 0x38]
	0x036C1934 CBZ X8, 0x36C198C
	0x036C1938 ADRP X8, 0xA3B000
	0x036C193C LDR X8, [X8 + 0x788]
	0x036C1940 LDR X20, [X19 + 0x30]
	0x036C1944 LDR W21, [X19 + 0x20]
	0x036C1948 LDR X0, [X8]
	0x036C194C LDR W8, [X0 + 0xE0]
	0x036C1950 CBNZ W8, 0x36C1958
	0x036C1954 BL 0x1C16DFC
	0x036C1958 ADD X2, X31, 0xC
	0x036C195C MOV X0, X20
	0x036C1960 MOV W1, W21
	0x036C1964 BL 0x36C1A64
	0x036C1968 LDR W8, [X31 + 0xC]
	0x036C196C CBNZ W8, 0x36C19A0
	0x036C1970 MOV X1, X0
	0x036C1974 LDR X0, [X19 + 0x38]
	0x036C1978 CBZ X0, 0x36C19DC
	0x036C197C LDR X8, [X0]
	0x036C1980 LDP X9, X2, [X8 + 0x198]
	0x036C1984 BLR X9
	0x036C1988 B 0x36C1990
	0x036C198C MOV X0, X31
	0x036C1990 LDP X20, X19, [X31 + 0x20]
	0x036C1994 LDP X30, X21, [X31 + 0x10]
	0x036C1998 ADD X31, X31, 0x30
	0x036C199C RET
	0x036C19A0 ADRP X0, 0xA70000
	0x036C19A4 LDR X0, [X0 + 0xD8]
	0x036C19A8 MOV W19, W8
	0x036C19AC BL 0x1C16D08
	0x036C19B0 BL 0x1C16F10
	0x036C19B4 MOV W1, W19
	0x036C19B8 MOV X2, X31
	0x036C19BC MOV X20, X0
	0x036C19C0 BL 0x36C6F04
	0x036C19C4 ADRP X0, 0xA7E000
	0x036C19C8 LDR X0, [X0 + 0xA18]
	0x036C19CC BL 0x1C16D08
	0x036C19D0 MOV X1, X0
	0x036C19D4 MOV X0, X20
	0x036C19D8 BL 0x1C16DEC
	0x036C19DC BL 0x1C16F20
	0x036C19E0 STR X30, [X31 - 0x20]!
	0x036C19E4 STP X20, X19, [X31 + 0x10]
	0x036C19E8 LDR W8, [X0 + 0x54]
	0x036C19EC CMP W8, 0x1
	0x036C19F0 B.NE 0x36C19FC
	0x036C19F4 LDRB W8, [X0 + 0x18]
	0x036C19F8 CBNZ W8, 0x36C1A08
	0x036C19FC LDP X20, X19, [X31 + 0x10]
	0x036C1A00 LDR X30, [X31], #0x20
	0x036C1A04 RET
	0x036C1A08 MOV X1, X31
	0x036C1A0C BL 0x33BE520
	0x036C1A10 MOV X19, X0
	0x036C1A14 BL 0x19903C0
	0x036C1A18 LDR X8, [X19]
	0x036C1A1C MOV X0, X19
	0x036C1A20 LDP X9, X1, [X8 + 0x168]
	0x036C1A24 BLR X9
	0x036C1A28 MOV X19, X0
	0x036C1A2C ADRP X0, 0xA5B000
	0x036C1A30 LDR X0, [X0 + 0x4B8]
	0x036C1A34 BL 0x1C16D08
	0x036C1A38 BL 0x1C16F10
	0x036C1A3C MOV X1, X19
	0x036C1A40 MOV X2, X31
	0x036C1A44 MOV X20, X0
	0x036C1A48 BL 0x338C448
	0x036C1A4C ADRP X0, 0xA7E000
	0x036C1A50 LDR X0, [X0 + 0xA20]
	0x036C1A54 BL 0x1C16D08
	0x036C1A58 MOV X1, X0
	0x036C1A5C MOV X0, X20
	0x036C1A60 BL 0x1C16DEC
	0x036C1A64 STR X30, [X31 - 0x30]!
	0x036C1A68 STP X22, X21, [X31 + 0x10]
	0x036C1A6C STP X20, X19, [X31 + 0x20]
	0x036C1A70 ADRP X22, 0xD1F000
	0x036C1A74 LDRB W8, [X22 + 0x9D7]
	0x036C1A78 MOV X20, X2
	0x036C1A7C MOV W21, W1
	0x036C1A80 MOV X19, X0
	0x036C1A84 TBNZ X8, 0x0, 0x36C1A9C
	0x036C1A88 ADRP X0, 0xA3B000
	0x036C1A8C LDR X0, [X0 + 0x788]
	0x036C1A90 BL 0x1C16CF4
	0x036C1A94 MOVZ W8, 0x1
	0x036C1A98 STRB W8, [X22 + 0x9D7]
	0x036C1A9C STRB W31, [X31 + 0xC]
	0x036C1AA0 CBZ X19, 0x36C1B14
	0x036C1AA4 ADD X1, X31, 0xC
	0x036C1AA8 MOV X0, X19
	0x036C1AAC MOV X2, X31
	0x036C1AB0 BL 0x32BF948
	0x036C1AB4 ADRP X8, 0xA3B000
	0x036C1AB8 LDR X8, [X8 + 0x788]
	0x036C1ABC LDR X22, [X19 + 0x10]
	0x036C1AC0 LDR X0, [X8]
	0x036C1AC4 LDR W8, [X0 + 0xE0]
	0x036C1AC8 CBNZ W8, 0x36C1AD0
	0x036C1ACC BL 0x1C16DFC
	0x036C1AD0 MOV X0, X22
	0x036C1AD4 MOV W1, W21
	0x036C1AD8 MOV X2, X20
	0x036C1ADC BL 0x1C86AD0
	0x036C1AE0 LDRB W8, [X31 + 0xC]
	0x036C1AE4 MOV X21, X0
	0x036C1AE8 CBZ W8, 0x36C1B00
	0x036C1AEC MOV X20, X31
	0x036C1AF0 MOV X0, X19
	0x036C1AF4 MOV X1, X31
	0x036C1AF8 BL 0x32BFAB4
	0x036C1AFC CBNZ X20, 0x36C1B58
	0x036C1B00 MOV X0, X21
	0x036C1B04 LDP X20, X19, [X31 + 0x20]
	0x036C1B08 LDP X22, X21, [X31 + 0x10]
	0x036C1B0C LDR X30, [X31], #0x30
	0x036C1B10 RET
	0x036C1B14 BL 0x1C16F20
	0x036C1B18 B 0x36C1B20
	0x036C1B1C B 0x36C1B20
	0x036C1B20 MOV X21, X0
	0x036C1B24 CMP W1, 0x1
	0x036C1B28 B.NE 0x36C1B60
	0x036C1B2C MOV X0, X21
	0x036C1B30 BL 0x3EB1AD0
	0x036C1B34 LDR X20, [X0]
	0x036C1B38 BL 0x3EB1AE0
	0x036C1B3C LDRB W8, [X31 + 0xC]
	0x036C1B40 CBZ W8, 0x36C1B50
	0x036C1B44 CBZ X19, 0x36C1B68
	0x036C1B48 MOV X21, X31
	0x036C1B4C B 0x36C1AF0
	0x036C1B50 MOV X21, X31
	0x036C1B54 CBZ X20, 0x36C1B00
	0x036C1B58 MOV X0, X20
	0x036C1B5C BL 0x1C16F18
	0x036C1B60 MOV X20, X31
	0x036C1B64 B 0x36C1B70
	0x036C1B68 BL 0x1C16F20
	0x036C1B6C MOV X21, X0
	0x036C1B70 LDRB W8, [X31 + 0xC]
	0x036C1B74 CBZ W8, 0x36C1B8C
	0x036C1B78 CBNZ X19, 0x36C1B80
	0x036C1B7C BL 0x1C16F20
	0x036C1B80 MOV X0, X19
	0x036C1B84 MOV X1, X31
	0x036C1B88 BL 0x32BFAB4
	0x036C1B8C CBNZ X20, 0x36C1B98
	0x036C1B90 MOV X0, X21
	0x036C1B94 BL 0x1D2C690
	0x036C1B98 MOV X0, X20
	0x036C1B9C BL 0x1C16F18
	0x036C1BA0 BL 0x1990590
	0x036C1BA4 B 0x1C86AD0
	0x036C1BA8 LDRB W0, [X0 + 0x50]
	0x036C1BAC RET
	0x036C1BB0 STR X30, [X31 - 0x30]!
	0x036C1BB4 STP X22, X21, [X31 + 0x10]
	0x036C1BB8 STP X20, X19, [X31 + 0x20]
	0x036C1BBC ADRP X22, 0xD1F000
	0x036C1BC0 ADRP X21, 0xA3B000
	0x036C1BC4 LDRB W8, [X22 + 0x9D8]
	0x036C1BC8 LDR X21, [X21 + 0x788]
	0x036C1BCC MOV W20, W1
	0x036C1BD0 MOV X19, X0
	0x036C1BD4 TBNZ X8, 0x0, 0x36C1BEC
	0x036C1BD8 ADRP X0, 0xA3B000
	0x036C1BDC LDR X0, [X0 + 0x788]
	0x036C1BE0 BL 0x1C16CF4
	0x036C1BE4 MOVZ W8, 0x1
	0x036C1BE8 STRB W8, [X22 + 0x9D8]
	0x036C1BEC MOV X0, X19
	0x036C1BF0 STR W31, [X31 + 0xC]
	0x036C1BF4 BL 0x36C19E0
	0x036C1BF8 LDR X0, [X21]
	0x036C1BFC LDR X21, [X19 + 0x30]
	0x036C1C00 LDR W8, [X0 + 0xE0]
	0x036C1C04 CBNZ W8, 0x36C1C0C
	0x036C1C08 BL 0x1C16DFC
	0x036C1C0C AND W22, W20, 0x1
	0x036C1C10 ADD X2, X31, 0xC
	0x036C1C14 MOV X0, X21
	0x036C1C18 MOV W1, W22
	0x036C1C1C BL 0x36C1C74
	0x036C1C20 LDR W20, [X31 + 0xC]
	0x036C1C24 CBNZ W20, 0x36C1C3C
	0x036C1C28 STRB W22, [X19 + 0x50]
	0x036C1C2C LDP X20, X19, [X31 + 0x20]
	0x036C1C30 LDP X22, X21, [X31 + 0x10]
	0x036C1C34 LDR X30, [X31], #0x30
	0x036C1C38 RET
	0x036C1C3C ADRP X0, 0xA70000
	0x036C1C40 LDR X0, [X0 + 0xD8]
	0x036C1C44 BL 0x1C16D08
	0x036C1C48 BL 0x1C16F10
	0x036C1C4C MOV W1, W20
	0x036C1C50 MOV X2, X31
	0x036C1C54 MOV X19, X0
	0x036C1C58 BL 0x36C6F04
	0x036C1C5C ADRP X0, 0xA7E000
	0x036C1C60 LDR X0, [X0 + 0xA28]
	0x036C1C64 BL 0x1C16D08
	0x036C1C68 MOV X1, X0
	0x036C1C6C MOV X0, X19
	0x036C1C70 BL 0x1C16DEC
	0x036C1C74 STR X30, [X31 - 0x30]!
	0x036C1C78 STP X22, X21, [X31 + 0x10]
	0x036C1C7C STP X20, X19, [X31 + 0x20]
	0x036C1C80 ADRP X22, 0xD1F000
	0x036C1C84 LDRB W8, [X22 + 0x9D9]
	0x036C1C88 MOV X20, X2
	0x036C1C8C MOV W21, W1
	0x036C1C90 MOV X19, X0
	0x036C1C94 TBNZ X8, 0x0, 0x36C1CAC
	0x036C1C98 ADRP X0, 0xA3B000
	0x036C1C9C LDR X0, [X0 + 0x788]
	0x036C1CA0 BL 0x1C16CF4
	0x036C1CA4 MOVZ W8, 0x1
	0x036C1CA8 STRB W8, [X22 + 0x9D9]
	0x036C1CAC STRB W31, [X31 + 0xC]
	0x036C1CB0 CBZ X19, 0x36C1D1C
	0x036C1CB4 ADD X1, X31, 0xC
	0x036C1CB8 MOV X0, X19
	0x036C1CBC MOV X2, X31
	0x036C1CC0 BL 0x32BF948
	0x036C1CC4 ADRP X8, 0xA3B000
	0x036C1CC8 LDR X8, [X8 + 0x788]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0xD20000
	015 Move W8, [X19+2548]
	016 Move X24, X3
	017 Move W21, W2
	018 Move X22, X1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0xA66000
	025 Move X0, [X0+3312]
	026 Call 0x1C17CF4
	027 Move X0, 0xA66000
	028 Move X0, [X0+3320]
	029 Call 0x1C17CF4
	030 Move X0, 0xA66000
	031 Move X0, [X0+3328]
	032 Call 0x1C17CF4
	033 Move X0, 0xA5B000
	034 Move X0, [X0+1456]
	035 Call 0x1C17CF4
	036 Move X0, 0xA75000
	037 Move X0, [X0+3192]
	038 Call 0x1C17CF4
	039 Move X0, 0xA7F000
	040 Move X0, [X0+2440]
	041 Call 0x1C17CF4
	042 Move X0, 0xA7F000
	043 Move X0, [X0+2448]
	044 Call 0x1C17CF4
	045 Move X0, 0xA7F000
	046 Move X0, [X0+2456]
	047 Call 0x1C17CF4
	048 Move X0, 0xA5B000
	049 Move X0, [X0+2128]
	050 Call 0x1C17CF4
	051 Move X0, 0xA3C000
	052 Move X0, [X0+1928]
	053 Call 0x1C17CF4
	054 Move X0, 0xA7F000
	055 Move X0, [X0+2464]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+2548], W8
	059 Move X0, X25
	060 Move [X31+64], X31
	061 Move [X31+72], X31
	062 Move [X31+60], W31
	063 Call Socket.ThrowIfDisposedAndClosed, X0
	064 Compare X22, 0
	065 JumpIfEqual {308}
	066 Move X19, 0xA7F000
	067 Move X8, [X22]
	068 Move X19, [X19+2440]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X1, [X19]
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X22
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X22
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare W0, 0
	090 JumpIfEqual {308}
	091 Move X8, [X22]
	092 Move X1, [X19]
	093 Move X20, 0xA75000
	094 Move X19, 0xA7F000
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X20, [X20+3192]
	097 Move X19, [X19+2464]
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move X0, X22
	107 Move W2, W31
	108 Call 0x1C5D788
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X1, [X0+8]
	114 Move X0, X22
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, [X20]
	117 Move W23, W0
	118 Move [X31+76], W0
	119 Move W1, W23
	120 Move X0, X8
	121 Call 0x1C17D6C
	122 Move [X31+64], X0
	123 Move X0, [X19]
	124 Add X8, X31, 60
	125 Add X9, X31, 64
	126 Move [X31+24], X31
	127 Move [X31+32], X8
	128 Add X8, X31, 76
	129 Move [X31+40], X9
	130 Move [X31+48], X8
	131 Move W1, W23
	132 Call 0x1C17D6C
	133 Move [X31+8], X25
	134 Move [X31+16], X24
	135 Compare X0, 0
	136 JumpIfEqual {141}
	137 Move W8, [X0+24]
	138 Add X9, X0, 32
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CSEL not yet implemented."
	141 Move X23, X31
	142 Move W25, [X31+76]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move [X31+4], W21
	145 Move X27, 0xA7F000
	146 Move X28, 0xA5B000
	147 Move X29, 0xA5B000
	148 Move X19, 0xA7F000
	149 Move X27, [X27+2448]
	150 Move X28, [X28+1456]
	151 Move X29, [X29+2128]
	152 Move X19, [X19+2456]
	153 Move W24, W31
	154 Move X8, [X22]
	155 Move X1, [X27]
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 Compare X9, 0
	158 JumpIfEqual {165}
	159 Move X10, [X8+176]
	160 Add X10, X10, 8
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Subtract X9, X9, 1
	164 Add X10, X10, 16
	165 Move X0, X22
	166 Move W2, W31
	167 Call 0x1C5D788
	168 NotImplemented "Instruction LDRSW not yet implemented."
	169 Add X8, X8, X9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X2, [X0+8]
	173 Move X0, X22
	174 Move W1, W24
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X26, X0
	177 Move X0, [X28]
	178 Move X25, X1
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move TEMP, X25
	184 And TEMP, TEMP, -2147483648
	185 Compare TEMP, -2147483648
	186 JumpIfEqual {286}
	187 Move X0, [X28]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X20, X25
	193 ShiftRight X20, 32
	194 And X20, X20, 0x7FFFFFFF
	195 Move TEMP, X20
	196 And TEMP, TEMP, -2147483648
	197 Compare TEMP, -2147483648
	198 JumpIfEqual {286}
	199 Move X0, [X28]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Compare X26, 0
	205 JumpIfEqual {305}
	206 Move W8, [X26+24]
	207 Subtract W8, W8, W25
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X0, [X28]
	210 Move X21, [X31+64]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move W1, 3
	216 Move X0, X26
	217 Move X2, X31
	218 Call GCHandle.Alloc, X0, X1
	219 Compare X21, 0
	220 JumpIfEqual {304}
	221 Move W8, [X21+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Add X8, X21, W24
	224 Move [X8+32], X0
	225 Move X0, [X28]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X8, W24
	231 Add X21, X23, X8
	232 Move [X21], W20
	233 Move X0, [X29]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X2, [X19]
	239 Move X0, X26
	240 Move W1, W25
	241 Call 0x22170F0, X0, X1
	242 Move [X21+8], X0
	243 Move W25, [X31+76]
	244 Add W24, W24, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move W21, [X31+4]
	247 Move X8, 0xA3C000
	248 Move X8, [X8+1928]
	249 Move X9, [X31+8]
	250 Move X0, [X8]
	251 Move X22, [X9+48]
	252 Move W19, [X9+80]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 NotImplemented "Instruction CMP not yet implemented."
	258 NotImplemented "Instruction CSET not yet implemented."
	259 Add X4, X31, 72
	260 Move X0, X22
	261 Move X1, X23
	262 Move W2, W25
	263 Move W3, W21
	264 Call Socket.Receive_internal, X0, X1, X2, X3, X4, X5
	265 Move X24, [X31+16]
	266 Move W20, W0
	267 Add X0, X31, 24
	268 Call 0x1BC81C0
	269 Move W8, [X31+72]
	270 Move W0, W20
	271 Move X20, [X31+160]
	272 Move X19, [X31+168]
	273 Move X22, [X31+144]
	274 Move X21, [X31+152]
	275 Move [X24], W8
	276 Move X24, [X31+128]
	277 Move X23, [X31+136]
	278 Move X26, [X31+112]
	279 Move X25, [X31+120]
	280 Move X28, [X31+96]
	281 Move X27, [X31+104]
	282 Move X29, [X31+80]
	283 Move X30, [X31+88]
	284 Add X31, X31, 176
	285 Return X0
	286 Move X0, 0xA3B000
	287 Move X0, [X0+1888]
	288 Call 0x1C17D08
	289 Call 0x1C17F10
	290 Move X20, X0
	291 Move X0, 0xA7F000
	292 Move X0, [X0+2472]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X20
	296 Move X2, X31
	297 Call ArgumentOutOfRangeException..ctor, X0, X1
	298 Move X0, 0xA7F000
	299 Move X0, [X0+2512]
	300 Call 0x1C17D08
	301 Move X1, X0
	302 Move X0, X20
	303 Call 0x1C17DEC
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Call 0x1C17F28
	308 Move X0, 0xA38000
	309 Move X0, [X0+1320]
	310 Call 0x1C17D08
	311 Call 0x1C17F10
	312 Move X19, X0
	313 Move X0, 0xA7F000
	314 Move X0, [X0+2488]
	315 Call 0x1C17D08
	316 Move X1, X0
	317 Move X0, X19
	318 Move X2, X31
	319 Call ArgumentNullException..ctor, X0, X1
	320 Move X0, 0xA7F000
	321 Move X0, [X0+2512]
	322 Call 0x1C17D08
	323 Move X1, X0
	324 Move X0, X19
	325 Call 0x1C17DEC
	326 Move X20, X0
	327 Move X20, X0
	328 Move X20, X0
	329 Move X24, [X31+16]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X20
	332 Call 0x3EB2AD0
	333 Move X21, [X0]
	334 Call 0x3EB2AE0
	335 Compare X21, 0
	336 JumpIfEqual {349}
	337 Move X0, X21
	338 Call 0x1C17F18
	339 Compare X21, 0
	340 JumpIfNotEqual {350}
	341 Move X20, X0
	342 Move W8, 1
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X0, X20
	345 Call 0x3EB2AD0
	346 Move X8, [X0]
	347 Move [X31+24], X8
	348 Call 0x3EB2AE0
	349 Move W20, W31
	350 Move X0, X21
	351 Call 0x1C17F18
	352 Move X20, X0
	353 Add X0, X31, 24
	354 Call 0x1BC81C0
	355 Move X0, X20
	356 Call 0x1D2D690
	357 Call 0x1991590

Method: System.Int32 Receive(System.Span`1<System.Byte> buffer, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036BC364 MOV X20, X4
	0x036BC368 LDP X9, X8, [X8 + 0x1D8]
	0x036BC36C MOV W21, W3
	0x036BC370 MOV W22, W2
	0x036BC374 MOV X24, X0
	0x036BC378 MOV X1, X8
	0x036BC37C BLR X9
	0x036BC380 LDRB W26, [X24 + 0x38]
	0x036BC384 MOV W25, W0
	0x036BC388 BL 0x1C16D44
	0x036BC38C CBNZ W26, 0x36BC3F4
	0x036BC390 TBZ X25, 0x0, 0x36BC458
	0x036BC394 CBZ X23, 0x36BC48C
	0x036BC398 LDR X8, [X23 + 0x18]
	0x036BC39C MOV W9, W22
	0x036BC3A0 CMP X9, W8, SXTW
	0x036BC3A4 B.GT 0x36BC4C0
	0x036BC3A8 MOV W9, W21
	0x036BC3AC SUB W8, W8, W22
	0x036BC3B0 CMP X9, W8, SXTW
	0x036BC3B4 B.GT 0x36BC4E0
	0x036BC3B8 LDR X0, [X24 + 0x28]
	0x036BC3BC CBZ X0, 0x36BC528
	0x036BC3C0 MOV X1, X23
	0x036BC3C4 MOV W2, W22
	0x036BC3C8 MOV W3, W21
	0x036BC3CC MOV W4, W31
	0x036BC3D0 MOV X5, X20
	0x036BC3D4 MOV X6, X19
	0x036BC3D8 BL 0x36BC648
	0x036BC3DC LDP X20, X19, [X31 + 0x40]
	0x036BC3E0 LDP X22, X21, [X31 + 0x30]
	0x036BC3E4 LDP X24, X23, [X31 + 0x20]
	0x036BC3E8 LDP X26, X25, [X31 + 0x10]
	0x036BC3EC LDR X30, [X31], #0x50
	0x036BC3F0 RET
	0x036BC3F4 MOV X0, X24
	0x036BC3F8 MOV X1, X31
	0x036BC3FC BL 0x33BE520
	0x036BC400 MOV X19, X0
	0x036BC404 BL 0x19903C0
	0x036BC408 LDR X8, [X19]
	0x036BC40C MOV X0, X19
	0x036BC410 LDR X9, [X8 + 0x2E8]
	0x036BC414 LDR X1, [X8 + 0x2F0]
	0x036BC418 BLR X9
	0x036BC41C MOV X19, X0
	0x036BC420 ADRP X0, 0xA60000
	0x036BC424 LDR X0, [X0 + 0x4B8]
	0x036BC428 BL 0x1C16D08
	0x036BC42C BL 0x1C16F10
	0x036BC430 MOV X1, X19
	0x036BC434 MOV X2, X31
	0x036BC438 MOV X20, X0
	0x036BC43C BL 0x338C448
	0x036BC440 ADRP X0, 0xA83000
	0x036BC444 LDR X0, [X0 + 0x7D0]
	0x036BC448 BL 0x1C16D08
	0x036BC44C MOV X1, X0
	0x036BC450 MOV X0, X20
	0x036BC454 BL 0x1C16DEC
	0x036BC458 ADRP X0, 0xA37000
	0x036BC45C LDR X0, [X0 + 0x5B0]
	0x036BC460 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xD25000
	011 Move X25, 0xA38000
	012 Move W8, [X24+2549]
	013 Move X25, [X25+1560]
	014 Move X21, X4
	015 Move W22, W3
	016 Move X19, X2
	017 Move X20, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xA38000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0xA84000
	027 Move X0, [X0+1920]
	028 Call 0x1C17CF4
	029 Move X0, 0xA67000
	030 Move X0, [X0+2344]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+2549], W8
	034 Move X0, [X25]
	035 Move W1, W19
	036 Call 0x1C17D6C
	037 Compare X0, 0
	038 JumpIfEqual {78}
	039 Move W3, [X0+24]
	040 Move X25, 0xA84000
	041 Move X25, [X25+1920]
	042 Move X24, X0
	043 Move X0, X23
	044 Move X1, X24
	045 Move W2, W31
	046 Move W4, W22
	047 Move X5, X21
	048 Call Socket.Receive, X0, X1, X2, X3, X4, X5
	049 Move X22, [X25]
	050 Move W21, W0
	051 Move X8, [X22+56]
	052 Compare X8, 0
	053 JumpIfNotEqual {57}
	054 Move X0, X22
	055 Call 0x1C5D6E0
	056 Move X8, [X22+56]
	057 Move X9, [X24+24]
	058 Add X10, X24, 32
	059 Move [X31], X10
	060 Add X0, X31, 0
	061 Move [X31+8], W9
	062 Move [X31+12], W31
	063 Move X3, [X8+32]
	064 Move X1, X20
	065 Move X2, X19
	066 Call 0x25BF5D8, X0, X1
	067 Move W0, W21
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X24, [X31+32]
	073 Move X23, [X31+40]
	074 Move X30, [X31+16]
	075 Move X25, [X31+24]
	076 Add X31, X31, 80
	077 Return X0
	078 Call 0x1C17F20

Method: System.Int32 Send(System.ReadOnlySpan`1<System.Byte> buffer, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036BCA6C LDR X0, [X0 + 0x4B8]
	0x036BCA70 BL 0x1C16D08
	0x036BCA74 BL 0x1C16F10
	0x036BCA78 MOV X1, X19
	0x036BCA7C MOV X2, X31
	0x036BCA80 MOV X20, X0
	0x036BCA84 BL 0x338C448
	0x036BCA88 ADRP X0, 0xA83000
	0x036BCA8C LDR X0, [X0 + 0x7F8]
	0x036BCA90 BL 0x1C16D08
	0x036BCA94 MOV X1, X0
	0x036BCA98 MOV X0, X20
	0x036BCA9C BL 0x1C16DEC
	0x036BCAA0 ADRP X0, 0xA37000
	0x036BCAA4 LDR X0, [X0 + 0x5B0]
	0x036BCAA8 BL 0x1C16D08
	0x036BCAAC BL 0x1C16F10
	0x036BCAB0 MOV X19, X0
	0x036BCAB4 ADRP X0, 0xA83000
	0x036BCAB8 LDR X0, [X0 + 0xA0]
	0x036BCABC BL 0x1C16D08
	0x036BCAC0 MOV X1, X0
	0x036BCAC4 MOV X0, X19
	0x036BCAC8 MOV X2, X31
	0x036BCACC BL 0x337DF1C
	0x036BCAD0 B 0x36BCB58
	0x036BCAD4 ADRP X0, 0xA3C000
	0x036BCAD8 LDR X0, [X0 + 0x528]
	0x036BCADC BL 0x1C16D08
	0x036BCAE0 BL 0x1C16F10
	0x036BCAE4 MOV X19, X0
	0x036BCAE8 ADRP X0, 0xA62000
	0x036BCAEC LDR X0, [X0 + 0xF48]
	0x036BCAF0 BL 0x1C16D08
	0x036BCAF4 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD25000
	009 Move [X31], X1
	010 Move [X31+8], X2
	011 Move X23, 0xA82000
	012 Move W8, [X22+2550]
	013 Move X23, [X23+808]
	014 Move X19, X4
	015 Move W20, W3
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA82000
	022 Move X0, [X0+808]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2550], W8
	026 Move X1, [X23]
	027 Add X0, X31, 0
	028 Call 0x25BF934, X0
	029 Compare X0, 0
	030 JumpIfEqual {46}
	031 Move W3, [X0+24]
	032 Move X1, X0
	033 Move X0, X21
	034 Move W2, W31
	035 Move W4, W20
	036 Move X5, X19
	037 Call Socket.Send, X0, X1, X2, X3, X4, X5
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X22, [X31+32]
	041 Move X21, [X31+40]
	042 Move X30, [X31+16]
	043 Move X23, [X31+24]
	044 Add X31, X31, 64
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs e)

Disassembly:
	0x036C5318 B 0x1C86C80
	0x036C531C AND W5, W5, 0x1
	0x036C5320 B 0x1C86D30
	0x036C5324 STP X30, X23, [X31 - 0x30]!
	0x036C5328 STP X22, X21, [X31 + 0x10]
	0x036C532C STP X20, X19, [X31 + 0x20]
	0x036C5330 ADRP X23, 0xD1B000
	0x036C5334 ADRP X21, 0xA7A000
	0x036C5338 ADRP X22, 0xA79000
	0x036C533C LDRB W8, [X23 + 0xA06]
	0x036C5340 LDR X21, [X21 + 0xB68]
	0x036C5344 LDR X22, [X22 + 0x218]
	0x036C5348 MOV X19, X1
	0x036C534C MOV X20, X0
	0x036C5350 TBNZ X8, 0x0, 0x36C5374
	0x036C5354 ADRP X0, 0xA79000
	0x036C5358 LDR X0, [X0 + 0x218]
	0x036C535C BL 0x1C16CF4
	0x036C5360 ADRP X0, 0xA7A000
	0x036C5364 LDR X0, [X0 + 0xB68]
	0x036C5368 BL 0x1C16CF4
	0x036C536C MOVZ W8, 0x1
	0x036C5370 STRB W8, [X23 + 0xA06]
	0x036C5374 MOV X0, X20
	0x036C5378 BL 0x36C19E0
	0x036C537C LDR X2, [X21]
	0x036C5380 LDR X3, [X22]
	0x036C5384 MOV X1, X19
	0x036C5388 BL 0x36C28D8
	0x036C538C CBZ X0, 0x36C53D8
	0x036C5390 LDRB W8, [X0 + 0x29]
	0x036C5394 MOV X19, X0
	0x036C5398 CBNZ W8, 0x36C53B8
	0x036C539C MOV X0, X19
	0x036C53A0 MOV X1, X31
	0x036C53A4 BL 0x362E3EC
	0x036C53A8 CBZ X0, 0x36C53D8
	0x036C53AC LDR X8, [X0]
	0x036C53B0 LDP X9, X1, [X8 + 0x1D8]
	0x036C53B4 BLR X9
	0x036C53B8 MOV X0, X19
	0x036C53BC MOV X1, X31
	0x036C53C0 BL 0x36CD1E8
	0x036C53C4 LDR W0, [X19 + 0xA0]
	0x036C53C8 LDP X20, X19, [X31 + 0x20]
	0x036C53CC LDP X22, X21, [X31 + 0x10]
	0x036C53D0 LDP X30, X23, [X31], #0x30
	0x036C53D4 RET
	0x036C53D8 BL 0x1C16F20
	0x036C53DC STR X30, [X31 - 0x40]!
	0x036C53E0 STP X24, X23, [X31 + 0x10]
	0x036C53E4 STP X22, X21, [X31 + 0x20]
	0x036C53E8 STP X20, X19, [X31 + 0x30]
	0x036C53EC ADRP X24, 0xD1B000
	0x036C53F0 LDRB W8, [X24 + 0xA08]
	0x036C53F4 MOV X20, X4
	0x036C53F8 MOV X21, X3
	0x036C53FC MOV W22, W2
	0x036C5400 MOV W23, W1
	0x036C5404 MOV X19, X0
	0x036C5408 TBNZ X8, 0x0, 0x36C5420
	0x036C540C ADRP X0, 0xA37000
	0x036C5410 LDR X0, [X0 + 0x788]
	0x036C5414 BL 0x1C16CF4
	0x036C5418 MOVZ W8, 0x1
	0x036C541C STRB W8, [X24 + 0xA08]
	0x036C5420 STRB W31, [X31 + 0xC]
	0x036C5424 CBZ X19, 0x36C549C
	0x036C5428 ADD X1, X31, 0xC
	0x036C542C MOV X0, X19
	0x036C5430 MOV X2, X31
	0x036C5434 BL 0x32BF948
	0x036C5438 ADRP X8, 0xA37000
	0x036C543C LDR X8, [X8 + 0x788]
	0x036C5440 LDR X24, [X19 + 0x10]
	0x036C5444 LDR X0, [X8]
	0x036C5448 LDR W8, [X0 + 0xE0]
	0x036C544C CBNZ W8, 0x36C5454
	0x036C5450 BL 0x1C16DFC
	0x036C5454 MOV X0, X24
	0x036C5458 MOV W1, W23
	0x036C545C MOV W2, W22
	0x036C5460 MOV X3, X21
	0x036C5464 MOV X4, X20
	0x036C5468 BL 0x1C860D0
	0x036C546C LDRB W8, [X31 + 0xC]
	0x036C5470 CBZ W8, 0x36C5488
	0x036C5474 MOV X20, X31
	0x036C5478 MOV X0, X19
	0x036C547C MOV X1, X31
	0x036C5480 BL 0x32BFAB4
	0x036C5484 CBNZ X20, 0x36C54A0
	0x036C5488 LDP X20, X19, [X31 + 0x30]
	0x036C548C LDP X22, X21, [X31 + 0x20]
	0x036C5490 LDP X24, X23, [X31 + 0x10]
	0x036C5494 LDR X30, [X31], #0x40
	0x036C5498 RET
	0x036C549C BL 0x1C16F20
	0x036C54A0 MOV X0, X20
	0x036C54A4 BL 0x1C16F18
	0x036C54A8 B 0x36C54AC
	0x036C54AC MOV X21, X0
	0x036C54B0 CMP W1, 0x1
	0x036C54B4 B.NE 0x36C54D8
	0x036C54B8 MOV X0, X21
	0x036C54BC BL 0x3EB1AD0
	0x036C54C0 LDR X20, [X0]
	0x036C54C4 BL 0x3EB1AE0
	0x036C54C8 LDRB W8, [X31 + 0xC]
	0x036C54CC CBZ W8, 0x36C5484
	0x036C54D0 CBNZ X19, 0x36C5478
	0x036C54D4 BL 0x1C16F20
	0x036C54D8 MOV X20, X31
	0x036C54DC B 0x36C54E4
	0x036C54E0 MOV X21, X0
	0x036C54E4 LDRB W8, [X31 + 0xC]
	0x036C54E8 CBZ W8, 0x36C5500
	0x036C54EC CBNZ X19, 0x36C54F4
	0x036C54F0 BL 0x1C16F20
	0x036C54F4 MOV X0, X19
	0x036C54F8 MOV X1, X31
	0x036C54FC BL 0x32BFAB4
	0x036C5500 CBNZ X20, 0x36C550C
	0x036C5504 MOV X0, X21
	0x036C5508 BL 0x1D2C690
	0x036C550C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0xD1C000
	010 Move W8, [X21+2551]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xA7B000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move X0, 0xA7B000
	021 Move X0, [X0+2848]
	022 Call 0x1C17CF4
	023 Move X0, 0xA38000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2551], W8
	028 Move X0, X19
	029 Call Socket.ThrowIfDisposedAndClosed, X0
	030 Compare X20, 0
	031 JumpIfEqual {126}
	032 Move X8, 0xA7B000
	033 Move X8, [X8+2848]
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Add X0, X31, 0
	036 Move X1, X31
	037 Move X3, [X8]
	038 Move X2, X31
	039 Move [X31], V0
	040 Call 0x319F7D0, X0, X1
	041 Move X21, [X20+120]
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 Compare X21, 0
	047 JumpIfEqual {127}
	048 Move X22, 0xA38000
	049 Move X22, [X22+1928]
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X22]
	056 Move X8, [X0+184]
	057 Move X23, 0xA7B000
	058 Move X2, [X8+120]
	059 Move X23, [X23+2544]
	060 Compare X21, 0
	061 JumpIfEqual {79}
	062 Move W4, 10
	063 Move X0, X19
	064 Move X1, X20
	065 Move X3, X20
	066 Call Socket.InitSocketAsyncEventArgs, X0, X1, X2, X3, X4
	067 Move X0, [X20+40]
	068 Compare X0, 0
	069 JumpIfEqual {126}
	070 Move X8, [X20+120]
	071 Move X1, X31
	072 Move [X0+136], X8
	073 Move X21, [X19+64]
	074 Call SocketAsyncResult.get_Handle, X0
	075 Move X8, [X22]
	076 Move X20, [X20+40]
	077 Move X8, [X8+184]
	078 Move X22, [X8+136]
	079 Move W4, 2
	080 Move X0, X19
	081 Move X1, X20
	082 Move X3, X20
	083 Call Socket.InitSocketAsyncEventArgs, X0, X1, X2, X3, X4
	084 Move X8, [X20+40]
	085 Compare X8, 0
	086 JumpIfEqual {126}
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move [X8+5], V0
	089 Move X0, [X20+40]
	090 Compare X0, 0
	091 JumpIfEqual {126}
	092 Move V0, [X20+104]
	093 Move X1, X31
	094 Move [X0+96], D0
	095 Move X21, [X19+64]
	096 Call SocketAsyncResult.get_Handle, X0
	097 Move X8, [X22]
	098 Move X20, [X20+40]
	099 Move X8, [X8+184]
	100 Move X22, [X8+128]
	101 Move X8, [X23]
	102 Move X23, X0
	103 Move X0, X8
	104 Call 0x1C17F10
	105 Move W1, 1
	106 Move X2, X22
	107 Move X3, X20
	108 Move X4, X31
	109 Move X24, X0
	110 Call IOSelectorJob..ctor, X0, X1, X2, X3
	111 Move X0, X19
	112 Move X1, X21
	113 Move X2, X23
	114 Move X3, X24
	115 Call Socket.QueueIOSelectorJob, X0, X1, X2, X3
	116 Move X20, [X31+64]
	117 Move X19, [X31+72]
	118 Move X22, [X31+48]
	119 Move X21, [X31+56]
	120 Move X24, [X31+32]
	121 Move X23, [X31+40]
	122 Move X30, [X31+16]
	123 Move W0, 1
	124 Add X31, X31, 80
	125 Return X0
	126 Call 0x1C17F20
	127 Move X0, 0xA3A000
	128 Move X0, [X0+2584]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X19, X0
	132 Move X0, 0xA7B000
	133 Move X0, [X0+2856]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Move X2, X31
	138 Call NullReferenceException..ctor, X0, X1
	139 Move X0, 0xA7B000
	140 Move X0, [X0+2864]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X19
	144 Call 0x1C17DEC

Method: System.IAsyncResult BeginReceive(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036C2148 MOV X21, X0
	0x036C214C LDRB W8, [X31 + 0xC]
	0x036C2150 CBZ W8, 0x36C2168
	0x036C2154 CBNZ X19, 0x36C215C
	0x036C2158 BL 0x1C16F20
	0x036C215C MOV X0, X19
	0x036C2160 MOV X1, X31
	0x036C2164 BL 0x32BFAB4
	0x036C2168 CBNZ X20, 0x36C2174
	0x036C216C MOV X0, X21
	0x036C2170 BL 0x1D2C690
	0x036C2174 MOV X0, X20
	0x036C2178 BL 0x1C16F18
	0x036C217C BL 0x1990590
	0x036C2180 B 0x1C86298
	0x036C2184 SUB X31, X31, 0x50
	0x036C2188 STP X30, X25, [X31 + 0x10]
	0x036C218C STP X24, X23, [X31 + 0x20]
	0x036C2190 STP X22, X21, [X31 + 0x30]
	0x036C2194 STP X20, X19, [X31 + 0x40]
	0x036C2198 ADRP X20, 0xD1E000
	0x036C219C ADRP X25, 0xA3A000
	0x036C21A0 LDRB W8, [X20 + 0x9DE]
	0x036C21A4 LDR X25, [X25 + 0x788]
	0x036C21A8 MOV X19, X0
	0x036C21AC TBNZ X8, 0x0, 0x36C21C4
	0x036C21B0 ADRP X0, 0xA3A000
	0x036C21B4 LDR X0, [X0 + 0x788]
	0x036C21B8 BL 0x1C16CF4
	0x036C21BC MOVZ W8, 0x1
	0x036C21C0 STRB W8, [X20 + 0x9DE]
	0x036C21C4 MOV X0, X19
	0x036C21C8 BL 0x36C19E0
	0x036C21CC LDR X0, [X25]
	0x036C21D0 STR W31, [X31 + 0xC]
	0x036C21D4 LDR X20, [X19 + 0x30]
	0x036C21D8 LDRB W21, [X19 + 0x50]
	0x036C21DC LDR W8, [X0 + 0xE0]
	0x036C21E0 CBNZ W8, 0x36C21E8
	0x036C21E4 BL 0x1C16DFC
	0x036C21E8 CMP W21, 0x0
	0x036C21EC CSET W2, NE
	0x036C21F0 ADD X1, X31, 0xC
	0x036C21F4 MOV X0, X20
	0x036C21F8 BL 0x36C22B8
	0x036C21FC LDR W8, [X31 + 0xC]
	0x036C2200 CBNZ W8, 0x36C2264
	0x036C2204 MOV X21, X0
	0x036C2208 LDR X0, [X25]
	0x036C220C LDP W22, W23, [X19 + 0x20]
	0x036C2210 LDR W24, [X19 + 0x28]
	0x036C2214 BL 0x1C16F10
	0x036C2218 MOV W1, W22
	0x036C221C MOV W2, W23
	0x036C2220 MOV W3, W24
	0x036C2224 MOV X4, X21
	0x036C2228 MOV X20, X0
	0x036C222C BL 0x36C17FC
	0x036C2230 CBZ X20, 0x36C22B4
	0x036C2234 LDR X8, [X19 + 0x38]
	0x036C2238 MOV X0, X20
	0x036C223C STR X8, [X20 + 0x38]
	0x036C2240 LDRB W1, [X19 + 0x50]
	0x036C2244 BL 0x36C1BB0
	0x036C2248 MOV X0, X20
	0x036C224C LDP X20, X19, [X31 + 0x40]
	0x036C2250 LDP X22, X21, [X31 + 0x30]
	0x036C2254 LDP X24, X23, [X31 + 0x20]
	0x036C2258 LDP X30, X25, [X31 + 0x10]
	0x036C225C ADD X31, X31, 0x50
	0x036C2260 RET
	0x036C2264 STR W8, [X31 + 0x8]
	0x036C2268 LDRB W8, [X19 + 0x18]
	0x036C226C CBZ W8, 0x36C227C
	0x036C2270 MOVZ W9, 0x2714
	0x036C2274 MOVZ W8, 0x2714
	0x036C2278 STP W8, W9, [X31 + 0x8]
	0x036C227C ADRP X0, 0xA6F000
	0x036C2280 LDR X0, [X0 + 0xD8]
	0x036C2284 BL 0x1C16D08
	0x036C2288 BL 0x1C16F10
	0x036C228C LDR W1, [X31 + 0x8]
	0x036C2290 MOV X2, X31
	0x036C2294 MOV X19, X0
	0x036C2298 BL 0x36C6F04
	0x036C229C ADRP X0, 0xA7D000
	0x036C22A0 LDR X0, [X0 + 0xA40]
	0x036C22A4 BL 0x1C16D08
	0x036C22A8 MOV X1, X0
	0x036C22AC MOV X0, X19
	0x036C22B0 BL 0x1C16DEC
	0x036C22B4 BL 0x1C16F20
	0x036C22B8 STR X30, [X31 - 0x30]!
	0x036C22BC STP X22, X21, [X31 + 0x10]
	0x036C22C0 STP X20, X19, [X31 + 0x20]
	0x036C22C4 ADRP X22, 0xD1E000
	0x036C22C8 LDRB W8, [X22 + 0x9E2]
	0x036C22CC MOV W21, W2
	0x036C22D0 MOV X20, X1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0xD1F000
	014 Move X28, 0xA7D000
	015 Move X27, 0xA7E000
	016 Move W8, [X29+2552]
	017 Move X28, [X28+4024]
	018 Move X27, [X27+2552]
	019 Move X24, X7
	020 Move X26, X6
	021 Move X22, X5
	022 Move W20, W4
	023 Move W21, W3
	024 Move W23, W2
	025 Move X25, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {45}
	031 Move X0, 0xA7E000
	032 Move X0, [X0+2544]
	033 Call 0x1C17CF4
	034 Move X0, 0xA7E000
	035 Move X0, [X0+2552]
	036 Call 0x1C17CF4
	037 Move X0, 0xA7D000
	038 Move X0, [X0+4024]
	039 Call 0x1C17CF4
	040 Move X0, 0xA3B000
	041 Move X0, [X0+1928]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X29+2552], W8
	045 Move X0, X19
	046 Call Socket.ThrowIfDisposedAndClosed, X0
	047 Move X1, X25
	048 Call Socket.ThrowIfBufferNull, X0, X1
	049 Move X1, X25
	050 Move W2, W23
	051 Move W3, W21
	052 Call Socket.ThrowIfBufferOutOfRange, X0, X1, X2, X3
	053 Move [X22], W31
	054 Move X0, [X28]
	055 Call 0x1C17F10
	056 Move W4, 2
	057 Move X1, X19
	058 Move X2, X26
	059 Move X3, X24
	060 Move X5, X31
	061 Move X22, X0
	062 Call SocketAsyncResult..ctor, X0, X1, X2, X3, X4
	063 Move X1, [X27]
	064 Move X0, X25
	065 Call 0x319EBA8, X0
	066 Compare X22, 0
	067 JumpIfEqual {118}
	068 Move [X22+80], X0
	069 Move [X22+88], X1
	070 Move [X22+96], W23
	071 Move [X22+100], W21
	072 Move [X22+104], W20
	073 Move X23, 0xA3B000
	074 Move X24, 0xA7E000
	075 Move X20, [X19+64]
	076 Move X23, [X23+1928]
	077 Move X24, [X24+2544]
	078 Move X0, X22
	079 Move X1, X31
	080 Call SocketAsyncResult.get_Handle, X0
	081 Move X8, [X23]
	082 Move X21, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X23]
	089 Move X8, [X8+184]
	090 Move X0, [X24]
	091 Move X23, [X8+128]
	092 Call 0x1C17F10
	093 Move W1, 1
	094 Move X2, X23
	095 Move X3, X22
	096 Move X4, X31
	097 Move X24, X0
	098 Call IOSelectorJob..ctor, X0, X1, X2, X3
	099 Move X0, X19
	100 Move X1, X20
	101 Move X2, X21
	102 Move X3, X24
	103 Call Socket.QueueIOSelectorJob, X0, X1, X2, X3
	104 Move X0, X22
	105 Move X20, [X31+80]
	106 Move X19, [X31+88]
	107 Move X22, [X31+64]
	108 Move X21, [X31+72]
	109 Move X24, [X31+48]
	110 Move X23, [X31+56]
	111 Move X26, [X31+32]
	112 Move X25, [X31+40]
	113 Move X28, [X31+16]
	114 Move X27, [X31+24]
	115 Move X29, [X31+96]
	116 Move X30, [X31+104]
	117 Return X0
	118 Call 0x1C17F20

Method: System.Int32 EndReceive(System.IAsyncResult asyncResult, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036C22D4 MOV X19, X0
	0x036C22D8 TBNZ X8, 0x0, 0x36C22FC
	0x036C22DC ADRP X0, 0xA7D000
	0x036C22E0 LDR X0, [X0 + 0x10]
	0x036C22E4 BL 0x1C16CF4
	0x036C22E8 ADRP X0, 0xA3A000
	0x036C22EC LDR X0, [X0 + 0x788]
	0x036C22F0 BL 0x1C16CF4
	0x036C22F4 MOVZ W8, 0x1
	0x036C22F8 STRB W8, [X22 + 0x9E2]
	0x036C22FC CBZ X19, 0x36C2380
	0x036C2300 MOV X0, X19
	0x036C2304 MOV X1, X31
	0x036C2308 BL 0x36CC990
	0x036C230C ADRP X8, 0xA3A000
	0x036C2310 LDR X8, [X8 + 0x788]
	0x036C2314 LDR X22, [X19 + 0x10]
	0x036C2318 LDR X0, [X8]
	0x036C231C LDR W8, [X0 + 0xE0]
	0x036C2320 CBNZ W8, 0x36C2328
	0x036C2324 BL 0x1C16DFC
	0x036C2328 AND W2, W21, 0x1
	0x036C232C MOV X0, X22
	0x036C2330 MOV X1, X20
	0x036C2334 BL 0x1C858B0
	0x036C2338 ADRP X8, 0xA7D000
	0x036C233C LDR X8, [X8 + 0x10]
	0x036C2340 MOV X21, X0
	0x036C2344 LDR X0, [X8]
	0x036C2348 BL 0x1C16F10
	0x036C234C MOV X20, X0
	0x036C2350 MOVZ W2, 0x1
	0x036C2354 MOV X1, X21
	0x036C2358 MOV X3, X31
	0x036C235C BL 0x36CC318
	0x036C2360 MOV X0, X19
	0x036C2364 MOV X1, X31
	0x036C2368 BL 0x36CCACC
	0x036C236C MOV X0, X20
	0x036C2370 LDP X20, X19, [X31 + 0x20]
	0x036C2374 LDP X22, X21, [X31 + 0x10]
	0x036C2378 LDR X30, [X31], #0x30
	0x036C237C RET
	0x036C2380 BL 0x1C16F20
	0x036C2384 B 0x36C2390
	0x036C2388 B 0x36C2390
	0x036C238C B 0x36C2390
	0x036C2390 MOV X20, X0
	0x036C2394 CMP W1, 0x1
	0x036C2398 B.NE 0x36C23CC
	0x036C239C MOV X0, X20
	0x036C23A0 BL 0x3EB1AD0
	0x036C23A4 LDR X21, [X0]
	0x036C23A8 BL 0x3EB1AE0
	0x036C23AC CBZ X19, 0x36C23D4
	0x036C23B0 MOV X0, X19
	0x036C23B4 MOV X1, X31
	0x036C23B8 BL 0x36CCACC
	0x036C23BC MOV X20, X31
	0x036C23C0 CBZ X21, 0x36C236C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD1F000
	009 Move X22, 0xA7E000
	010 Move X23, 0xA5D000
	011 Move W8, [X24+2553]
	012 Move X22, [X22+2576]
	013 Move X23, [X23+3536]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA5D000
	022 Move X0, [X0+3536]
	023 Call 0x1C17CF4
	024 Move X0, 0xA7E000
	025 Move X0, [X0+2576]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2553], W8
	029 Move X0, X19
	030 Call Socket.ThrowIfDisposedAndClosed, X0
	031 Move X2, [X22]
	032 Move X3, [X23]
	033 Move X1, X21
	034 Call Socket.ValidateEndIAsyncResult, X0, X1, X2, X3
	035 Compare X0, 0
	036 JumpIfEqual {74}
	037 Move W8, [X0+41]
	038 Move X21, X0
	039 Compare W8, 0
	040 JumpIfNotEqual {50}
	041 Move X0, X21
	042 Move X1, X31
	043 Call IOAsyncResult.get_AsyncWaitHandle, X0
	044 Compare X0, 0
	045 JumpIfEqual {74}
	046 Move X8, [X0]
	047 Move X9, [X8+472]
	048 Move X1, [X8+480]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, X21
	051 Move X1, X31
	052 Call SocketAsyncResult.get_ErrorCode, X0
	053 Move TEMP, 0x2732
	054 Not TEMP
	055 Move W8, TEMP
	056 Add W8, W0, W8
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X20], W0
	059 Compare W0, 0
	060 JumpIfNotEqual {64}
	061 Move X0, X21
	062 Move X1, X31
	063 Call SocketAsyncResult.CheckIfThrowDelayedException, X0
	064 Move [X19+82], W31
	065 Move W0, [X21+160]
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Int32 Receive_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Net.Sockets.Socket/WSABUF* bufarray, System.Int32 count, System.Net.Sockets.SocketFlags flags, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C51D8 B 0x36C51EC
	0x036C51DC STR W1, [X19 + 0xA0]
	0x036C51E0 MOV X0, X19
	0x036C51E4 MOV X2, X31
	0x036C51E8 BL 0x36C9BD4
	0x036C51EC LDP X20, X19, [X31 + 0x80]
	0x036C51F0 LDP X22, X21, [X31 + 0x70]
	0x036C51F4 LDP X24, X23, [X31 + 0x60]
	0x036C51F8 LDP X30, X25, [X31 + 0x50]
	0x036C51FC ADD X31, X31, 0x90
	0x036C5200 RET
	0x036C5204 BL 0x1C16F20
	0x036C5208 BL 0x1C16F20
	0x036C520C MOV X0, X22
	0x036C5210 BL 0x1C16F18
	0x036C5214 B 0x36C521C
	0x036C5218 B 0x36C521C
	0x036C521C MOV X22, X1
	0x036C5220 MOV X21, X0
	0x036C5224 CMP W22, 0x1
	0x036C5228 B.NE 0x36C524C
	0x036C522C MOV X0, X21
	0x036C5230 BL 0x3EB1AD0
	0x036C5234 LDR X8, [X0]
	0x036C5238 STR X8, [X31]
	0x036C523C BL 0x3EB1AE0
	0x036C5240 LDR X22, [X31]
	0x036C5244 MOV W21, W31
	0x036C5248 B 0x36C5110
	0x036C524C STR X31, [X31]
	0x036C5250 ADD X0, X31, 0x30
	0x036C5254 MOV X1, X31
	0x036C5258 BL 0x335E4B0
	0x036C525C LDR X8, [X31]
	0x036C5260 CBZ X8, 0x36C528C
	0x036C5264 LDR X0, [X31]
	0x036C5268 BL 0x1C16F18
	0x036C526C MOV X22, X1
	0x036C5270 MOV X21, X0
	0x036C5274 B 0x36C5250
	0x036C5278 B 0x36C5284
	0x036C527C B 0x36C5284
	0x036C5280 B 0x36C5284
	0x036C5284 MOV X22, X1
	0x036C5288 MOV X21, X0
	0x036C528C CMP W22, 0x1
	0x036C5290 B.NE 0x36C5308
	0x036C5294 MOV X0, X21
	0x036C5298 BL 0x3EB1AD0
	0x036C529C MOV X20, X0
	0x036C52A0 ADRP X0, 0xA2E000
	0x036C52A4 LDR X0, [X0 + 0x7D0]
	0x036C52A8 BL 0x1C16D08
	0x036C52AC LDR X8, [X20]
	0x036C52B0 LDR X1, [X8]
	0x036C52B4 BL 0x1C17270
	0x036C52B8 TBZ X0, 0x0, 0x36C52E0
	0x036C52BC LDR X20, [X20]
	0x036C52C0 BL 0x3EB1AE0
	0x036C52C4 CBZ X19, 0x36C52DC
	0x036C52C8 MOV X0, X19
	0x036C52CC MOV X1, X20
	0x036C52D0 MOV X2, X31
	0x036C52D4 BL 0x36C89B4
	0x036C52D8 B 0x36C51EC
	0x036C52DC BL 0x1C16F20
	0x036C52E0 MOVZ W0, 0x8
	0x036C52E4 BL 0x3EB1AF0
	0x036C52E8 LDR X8, [X20]
	0x036C52EC STR X8, [X0]
	0x036C52F0 ADRP X1, 0x7EF000
	0x036C52F4 ADD X1, X1, 0xE58
	0x036C52F8 MOV X2, X31
	0x036C52FC BL 0x3EB1B00
	0x036C5300 MOV X21, X0
	0x036C5304 BL 0x3EB1AE0
	0x036C5308 MOV X0, X21
	0x036C530C BL 0x1D2C690
	0x036C5310 BL 0x1990590
	0x036C5314 AND W5, W5, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD1C000
	010 Move W8, [X25+2554]
	011 Move W23, W5
	012 Move X20, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X24, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA38000
	022 Move X0, [X0+1928]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2554], W8
	026 Compare X19, 0
	027 JumpIfEqual {60}
	028 Move X0, X19
	029 Move X1, X31
	030 Call SafeSocketHandle.RegisterForBlockingSyscall, X0
	031 Move X8, 0xA38000
	032 Move X8, [X8+1928]
	033 Move X25, [X19+16]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 And W5, W23, 1
	040 Move X0, X25
	041 Move X1, X24
	042 Move W2, W22
	043 Move W3, W21
	044 Move X4, X20
	045 Call 0x1C873E4
	046 Move W20, W0
	047 Move X0, X19
	048 Move X1, X31
	049 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	050 Move W0, W20
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X30, [X31+64]
	058 Move X25, [X31+72]
	059 Return X0
	060 Call 0x1C17F20
	061 Move X20, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X20
	064 Call 0x3EB2AD0
	065 Move X21, [X0]
	066 Call 0x3EB2AE0
	067 Compare X19, 0
	068 JumpIfEqual {76}
	069 Move X0, X19
	070 Move X1, X31
	071 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	072 Compare X21, 0
	073 JumpIfNotEqual {77}
	074 Move W20, W31
	075 Move X21, X31
	076 Call 0x1C17F20
	077 Move X0, X21
	078 Call 0x1C17F18
	079 Move X20, X0
	080 Compare X19, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17F20
	083 Move X0, X19
	084 Move X1, X31
	085 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	086 Compare X21, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X20
	089 Call 0x1D2D690
	090 Move X0, X21
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.Int32 Receive_array_icall(System.IntPtr sock, System.Net.Sockets.Socket/WSABUF* bufarray, System.Int32 count, System.Net.Sockets.SocketFlags flags, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C558C LDR X24, [X19 + 0x10]
	0x036C5590 LDR X0, [X8]

ISIL:
	001 And W5, W5, 1
	002 Call 0x1C873E4
	003 Return X0

Method: System.Int32 Receive_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Byte* buffer, System.Int32 count, System.Net.Sockets.SocketFlags flags, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C4E90 CBNZ W9, 0x36C4EA0
	0x036C4E94 MOV X0, X8
	0x036C4E98 BL 0x1C16DFC
	0x036C4E9C LDR X8, [X26]
	0x036C4EA0 ADRP X9, 0xA7B000
	0x036C4EA4 LDR X8, [X8 + 0xB8]
	0x036C4EA8 LDR X9, [X9 + 0x9E8]
	0x036C4EAC LDR X24, [X8]
	0x036C4EB0 LDR X0, [X9]
	0x036C4EB4 BL 0x1C16F10
	0x036C4EB8 ADRP X8, 0xA7B000
	0x036C4EBC LDR X8, [X8 + 0xB48]
	0x036C4EC0 MOV X1, X24
	0x036C4EC4 MOV X3, X31
	0x036C4EC8 MOV X23, X0
	0x036C4ECC LDR X2, [X8]
	0x036C4ED0 BL 0x362E274
	0x036C4ED4 LDR X8, [X26]
	0x036C4ED8 LDR X8, [X8 + 0xB8]
	0x036C4EDC STR X23, [X8 + 0x50]
	0x036C4EE0 LDR X0, [X25]
	0x036C4EE4 LDR X20, [X20 + 0x28]
	0x036C4EE8 BL 0x1C16F10
	0x036C4EEC MOVZ W1, 0x2
	0x036C4EF0 MOV X2, X23
	0x036C4EF4 MOV X3, X20
	0x036C4EF8 MOV X4, X31
	0x036C4EFC MOV X24, X0
	0x036C4F00 BL 0x362E5F8
	0x036C4F04 MOV X0, X19
	0x036C4F08 MOV X1, X21
	0x036C4F0C MOV X2, X22
	0x036C4F10 MOV X3, X24
	0x036C4F14 BL 0x36C2680
	0x036C4F18 LDP X20, X19, [X31 + 0x50]
	0x036C4F1C LDP X22, X21, [X31 + 0x40]
	0x036C4F20 LDP X24, X23, [X31 + 0x30]
	0x036C4F24 LDP X26, X25, [X31 + 0x20]
	0x036C4F28 LDR X30, [X31 + 0x10]
	0x036C4F2C MOVZ W0, 0x1
	0x036C4F30 ADD X31, X31, 0x60
	0x036C4F34 RET
	0x036C4F38 BL 0x1C16F20
	0x036C4F3C ADRP X0, 0xA3A000
	0x036C4F40 LDR X0, [X0 + 0xA18]
	0x036C4F44 BL 0x1C16D08
	0x036C4F48 BL 0x1C16F10
	0x036C4F4C MOV X19, X0
	0x036C4F50 ADRP X0, 0xA7B000
	0x036C4F54 LDR X0, [X0 + 0xB28]
	0x036C4F58 BL 0x1C16D08
	0x036C4F5C MOV X1, X0
	0x036C4F60 MOV X0, X19
	0x036C4F64 MOV X2, X31
	0x036C4F68 BL 0x33803F4
	0x036C4F6C ADRP X0, 0xA7B000
	0x036C4F70 LDR X0, [X0 + 0xB50]
	0x036C4F74 BL 0x1C16D08
	0x036C4F78 MOV X1, X0
	0x036C4F7C MOV X0, X19
	0x036C4F80 BL 0x1C16DEC
	0x036C4F84 SUB X31, X31, 0x90
	0x036C4F88 STP X30, X25, [X31 + 0x50]
	0x036C4F8C STP X24, X23, [X31 + 0x60]
	0x036C4F90 STP X22, X21, [X31 + 0x70]
	0x036C4F94 STP X20, X19, [X31 + 0x80]
	0x036C4F98 ADRP X22, 0xD1C000
	0x036C4F9C ADRP X20, 0xA7B000
	0x036C4FA0 LDRB W8, [X22 + 0xA02]
	0x036C4FA4 LDR X20, [X20 + 0xB58]
	0x036C4FA8 MOV W21, W1
	0x036C4FAC MOV X19, X0
	0x036C4FB0 TBNZ X8, 0x0, 0x36C5010
	0x036C4FB4 ADRP X0, 0xA7B000
	0x036C4FB8 LDR X0, [X0 + 0x9E8]
	0x036C4FBC BL 0x1C16CF4
	0x036C4FC0 ADRP X0, 0xA7B000
	0x036C4FC4 LDR X0, [X0 + 0x9F0]
	0x036C4FC8 BL 0x1C16CF4
	0x036C4FCC ADRP X0, 0xA7B000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD1D000
	010 Move W8, [X25+2555]
	011 Move W23, W5
	012 Move X20, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X24, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA39000
	022 Move X0, [X0+1928]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2555], W8
	026 Compare X19, 0
	027 JumpIfEqual {60}
	028 Move X0, X19
	029 Move X1, X31
	030 Call SafeSocketHandle.RegisterForBlockingSyscall, X0
	031 Move X8, 0xA39000
	032 Move X8, [X8+1928]
	033 Move X25, [X19+16]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 And W5, W23, 1
	040 Move X0, X25
	041 Move X1, X24
	042 Move W2, W22
	043 Move W3, W21
	044 Move X4, X20
	045 Call 0x1C87494
	046 Move W20, W0
	047 Move X0, X19
	048 Move X1, X31
	049 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	050 Move W0, W20
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X30, [X31+64]
	058 Move X25, [X31+72]
	059 Return X0
	060 Call 0x1C17F20
	061 Move X20, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X20
	064 Call 0x3EB2AD0
	065 Move X21, [X0]
	066 Call 0x3EB2AE0
	067 Compare X19, 0
	068 JumpIfEqual {76}
	069 Move X0, X19
	070 Move X1, X31
	071 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	072 Compare X21, 0
	073 JumpIfNotEqual {77}
	074 Move W20, W31
	075 Move X21, X31
	076 Call 0x1C17F20
	077 Move X0, X21
	078 Call 0x1C17F18
	079 Move X20, X0
	080 Compare X19, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17F20
	083 Move X0, X19
	084 Move X1, X31
	085 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	086 Compare X21, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X20
	089 Call 0x1D2D690
	090 Move X0, X21
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.Int32 Receive_icall(System.IntPtr sock, System.Byte* buffer, System.Int32 count, System.Net.Sockets.SocketFlags flags, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C5594 LDR W8, [X0 + 0xE0]
	0x036C5598 CBNZ W8, 0x36C55A0

ISIL:
	001 And W5, W5, 1
	002 Call 0x1C87494
	003 Return X0

Method: System.Int32 ReceiveFrom(System.Memory`1<System.Byte> buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036C559C BL 0x1C16DFC
	0x036C55A0 MOV X0, X24
	0x036C55A4 MOV W1, W23
	0x036C55A8 MOV X2, X22
	0x036C55AC MOV X3, X21
	0x036C55B0 MOV X4, X20
	0x036C55B4 BL 0x1C873DC
	0x036C55B8 LDRB W8, [X31 + 0xC]
	0x036C55BC MOV W21, W0
	0x036C55C0 CBZ W8, 0x36C55D8
	0x036C55C4 MOV X20, X31
	0x036C55C8 MOV X0, X19
	0x036C55CC MOV X1, X31
	0x036C55D0 BL 0x32BFAB4
	0x036C55D4 CBNZ X20, 0x36C5634
	0x036C55D8 MOV W0, W21
	0x036C55DC LDP X20, X19, [X31 + 0x30]
	0x036C55E0 LDP X22, X21, [X31 + 0x20]
	0x036C55E4 LDP X24, X23, [X31 + 0x10]
	0x036C55E8 LDR X30, [X31], #0x40
	0x036C55EC RET
	0x036C55F0 BL 0x1C16F20
	0x036C55F4 B 0x36C55FC
	0x036C55F8 B 0x36C55FC
	0x036C55FC MOV X21, X0
	0x036C5600 CMP W1, 0x1
	0x036C5604 B.NE 0x36C563C
	0x036C5608 MOV X0, X21
	0x036C560C BL 0x3EB1AD0
	0x036C5610 LDR X20, [X0]
	0x036C5614 BL 0x3EB1AE0
	0x036C5618 LDRB W8, [X31 + 0xC]
	0x036C561C CBZ W8, 0x36C562C
	0x036C5620 CBZ X19, 0x36C5644
	0x036C5624 MOV W21, W31
	0x036C5628 B 0x36C55C8
	0x036C562C MOV W21, W31
	0x036C5630 CBZ X20, 0x36C55D8
	0x036C5634 MOV X0, X20
	0x036C5638 BL 0x1C16F18
	0x036C563C MOV X20, X31
	0x036C5640 B 0x36C564C
	0x036C5644 BL 0x1C16F20
	0x036C5648 MOV X21, X0
	0x036C564C LDRB W8, [X31 + 0xC]
	0x036C5650 CBZ W8, 0x36C5668
	0x036C5654 CBNZ X19, 0x36C565C
	0x036C5658 BL 0x1C16F20
	0x036C565C MOV X0, X19
	0x036C5660 MOV X1, X31
	0x036C5664 BL 0x32BFAB4
	0x036C5668 CBNZ X20, 0x36C5674
	0x036C566C MOV X0, X21
	0x036C5670 BL 0x1D2C690
	0x036C5674 MOV X0, X20
	0x036C5678 BL 0x1C16F18
	0x036C567C BL 0x1990590
	0x036C5680 B 0x1C873DC
	0x036C5684 B 0x1C85D44
	0x036C5688 SUB X31, X31, 0x30
	0x036C568C STP X30, X21, [X31 + 0x10]
	0x036C5690 STP X20, X19, [X31 + 0x20]
	0x036C5694 ADRP X21, 0xD1B000
	0x036C5698 LDRB W8, [X21 + 0xA0D]
	0x036C569C MOV W19, W1
	0x036C56A0 MOV X20, X0
	0x036C56A4 TBNZ X8, 0x0, 0x36C56BC
	0x036C56A8 ADRP X0, 0xA37000
	0x036C56AC LDR X0, [X0 + 0x788]
	0x036C56B0 BL 0x1C16CF4
	0x036C56B4 MOVZ W8, 0x1
	0x036C56B8 STRB W8, [X21 + 0xA0D]
	0x036C56BC MOV X0, X20
	0x036C56C0 STR W31, [X31 + 0xC]
	0x036C56C4 BL 0x36C19E0
	0x036C56C8 LDRB W8, [X20 + 0x52]
	0x036C56CC CBZ W8, 0x36C5720
	0x036C56D0 ADRP X8, 0xA37000
	0x036C56D4 LDR X8, [X8 + 0x788]
	0x036C56D8 LDR X20, [X20 + 0x30]
	0x036C56DC LDR X0, [X8]
	0x036C56E0 LDR W8, [X0 + 0xE0]
	0x036C56E4 CBNZ W8, 0x36C56EC
	0x036C56E8 BL 0x1C16DFC
	0x036C56EC ADD X2, X31, 0xC
	0x036C56F0 MOV X0, X20
	0x036C56F4 MOV W1, W19
	0x036C56F8 BL 0x36C1584
	0x036C56FC LDR W19, [X31 + 0xC]
	0x036C5700 CBZ W19, 0x36C5710
	0x036C5704 MOVZ W8, 0x2749
	0x036C5708 CMP W19, W8
	0x036C570C B.NE 0x36C5758
	0x036C5710 LDP X20, X19, [X31 + 0x20]
	0x036C5714 LDP X30, X21, [X31 + 0x10]
	0x036C5718 ADD X31, X31, 0x30
	0x036C571C RET
	0x036C5720 ADRP X0, 0xA6C000
	0x036C5724 LDR X0, [X0 + 0xD8]
	0x036C5728 BL 0x1C16D08
	0x036C572C BL 0x1C16F10
	0x036C5730 MOVZ W1, 0x2749
	0x036C5734 MOV X2, X31
	0x036C5738 MOV X19, X0
	0x036C573C BL 0x36C6F04
	0x036C5740 ADRP X0, 0xA7A000
	0x036C5744 LDR X0, [X0 + 0xB70]
	0x036C5748 BL 0x1C16D08
	0x036C574C MOV X1, X0
	0x036C5750 MOV X0, X19
	0x036C5754 BL 0x1C16DEC
	0x036C5758 ADRP X0, 0xA6C000
	0x036C575C LDR X0, [X0 + 0xD8]
	0x036C5760 BL 0x1C16D08
	0x036C5764 BL 0x1C16F10
	0x036C5768 MOV W1, W19
	0x036C576C MOV X2, X31
	0x036C5770 MOV X20, X0
	0x036C5774 BL 0x36C6F04
	0x036C5778 ADRP X0, 0xA7A000
	0x036C577C LDR X0, [X0 + 0xB70]
	0x036C5780 BL 0x1C16D08
	0x036C5784 MOV X1, X0
	0x036C5788 MOV X0, X20
	0x036C578C BL 0x1C16DEC
	0x036C5790 B 0x1C8706C
	0x036C5794 STP X30, X19, [X31 - 0x10]!
	0x036C5798 LDR W8, [X0 + 0x54]
	0x036C579C CMP W8, 0x1
	0x036C57A0 B.EQ 0x36C57E8
	0x036C57A4 MOV X19, X0
	0x036C57A8 LDR X0, [X0 + 0x30]
	0x036C57AC LDRB W8, [X19 + 0x52]
	0x036C57B0 MOVZ W9, 0x1
	0x036C57B4 STR W9, [X19 + 0x54]
	0x036C57B8 STRB W31, [X19 + 0x52]
	0x036C57BC CBZ X0, 0x36C57E8
	0x036C57C0 STRB W9, [X19 + 0x18]
	0x036C57C4 CBZ W8, 0x36C57DC
	0x036C57C8 LDR X1, [X0 + 0x10]
	0x036C57CC MOV X0, X19
	0x036C57D0 BL 0x36C57F4
	0x036C57D4 LDR X0, [X19 + 0x30]
	0x036C57D8 CBZ X0, 0x36C57F0
	0x036C57DC MOV X1, X31
	0x036C57E0 LDP X30, X19, [X31], #0x10
	0x036C57E4 B 0x32C02C4
	0x036C57E8 LDP X30, X19, [X31], #0x10
	0x036C57EC RET
	0x036C57F0 BL 0x1C16F20
	0x036C57F4 SUB X31, X31, 0x40
	0x036C57F8 STP X30, X23, [X31 + 0x10]
	0x036C57FC STP X22, X21, [X31 + 0x20]
	0x036C5800 STP X20, X19, [X31 + 0x30]
	0x036C5804 ADRP X21, 0xD1B000
	0x036C5808 LDRB W8, [X21 + 0xA0F]
	0x036C580C MOV X19, X1
	0x036C5810 MOV X20, X0
	0x036C5814 TBNZ X8, 0x0, 0x36C5838

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X27, 0xD1C000
	015 Move W8, [X27+2556]
	016 Move X21, X7
	017 Move X20, X6
	018 Move W22, W5
	019 Move W23, W4
	020 Move W25, W3
	021 Move X26, X2
	022 Move X24, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0xA7B000
	029 Move X0, [X0+2840]
	030 Call 0x1C17CF4
	031 Move X0, 0xA5A000
	032 Move X0, [X0+720]
	033 Call 0x1C17CF4
	034 Move X0, 0xA38000
	035 Move X0, [X0+1928]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X27+2556], W8
	039 Move [X31+88], X31
	040 Move [X31+84], W31
	041 Move [X31+48], X31
	042 Move [X31+56], X31
	043 Move [X31+64], X31
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move X0, [X20]
	047 Compare X0, 0
	048 JumpIfEqual {157}
	049 Move X8, [X0]
	050 Move X28, 0xA5A000
	051 Move X27, X26
	052 ShiftRight X27, 32
	053 And X27, X27, 0x7FFFFFFF
	054 Move X9, [X8+392]
	055 Move X1, [X8+400]
	056 Move X28, [X28+720]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X28, [X28]
	059 And W8, W27, 0x7FFFFFFF
	060 Subtract W8, W8, W25
	061 Move [X31+88], X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X31
	064 Call ThrowHelper.ThrowArgumentOutOfRangeException
	065 Move X0, [X28+32]
	066 Move X29, 0xA7B000
	067 Move X28, 0xA38000
	068 Move W8, [X0+309]
	069 Move X29, [X29+2840]
	070 Move X28, [X28+1928]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Move X1, [X29]
	077 And W8, W27, 0x80000000
	078 Add W9, W26, W25
	079 Or W8, W8, W23
	080 NotImplemented "Instruction BFM not yet implemented."
	081 Add X8, X31, 8
	082 Add X0, X31, 32
	083 Move [X31+32], X24
	084 Move [X31+40], X9
	085 Call 0x319F2B4, X0
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Move X8, [X31+24]
	088 Move X0, [X28]
	089 Move [X31+3], V0
	090 Move [X31+64], X8
	091 Move X24, [X19+48]
	092 Move X25, [X31+48]
	093 Move W8, [X0+224]
	094 Move W26, [X19+80]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSET not yet implemented."
	100 Add X4, X31, 88
	101 Add X5, X31, 84
	102 Move X0, X24
	103 Move X1, X25
	104 Move W2, W23
	105 Move W3, W22
	106 Call Socket.ReceiveFrom_internal, X0, X1, X2, X3, X4, X5, X6
	107 Move W22, W0
	108 Add X0, X31, 48
	109 Move X1, X31
	110 Call MemoryHandle.Dispose, X0
	111 Move W8, [X31+84]
	112 Move [X21], W8
	113 Compare W8, 0
	114 JumpIfEqual {128}
	115 Move W9, 0x2733
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W9, 0x2734
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W22, W31
	120 Move [X19+82], W31
	121 Move W8, [X19+80]
	122 Compare W8, 0
	123 JumpIfEqual {127}
	124 Move W8, 0x274C
	125 Move W22, W31
	126 Move [X21], W8
	127 Move W22, W31
	128 Move W8, 257
	129 NotImplemented "Instruction STURH not yet implemented."
	130 Move X1, [X31+88]
	131 Move X0, [X20]
	132 Compare X1, 0
	133 JumpIfEqual {141}
	134 Compare X0, 0
	135 JumpIfEqual {157}
	136 Move X8, [X0]
	137 Move X9, [X8+408]
	138 Move X2, [X8+416]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move [X20], X0
	141 Move [X19+56], X0
	142 Move W0, W22
	143 Move X20, [X31+176]
	144 Move X19, [X31+184]
	145 Move X22, [X31+160]
	146 Move X21, [X31+168]
	147 Move X24, [X31+144]
	148 Move X23, [X31+152]
	149 Move X26, [X31+128]
	150 Move X25, [X31+136]
	151 Move X28, [X31+112]
	152 Move X27, [X31+120]
	153 Move X29, [X31+96]
	154 Move X30, [X31+104]
	155 Add X31, X31, 192
	156 Return X0
	157 Call 0x1C17F20
	158 Move X23, X0
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X0, X23
	161 Call 0x3EB2AD0
	162 Move X22, [X0]
	163 Call 0x3EB2AE0
	164 Add X0, X31, 48
	165 Move X1, X31
	166 Call MemoryHandle.Dispose, X0
	167 Compare X22, 0
	168 JumpIfEqual {111}
	169 Move X0, X22
	170 Call 0x1C17F18
	171 Move X22, X31
	172 Move X23, X0
	173 Add X0, X31, 48
	174 Move X1, X31
	175 Call MemoryHandle.Dispose, X0
	176 Compare X22, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X23
	179 Call 0x1D2D690
	180 Move X0, X22
	181 Call 0x1C17F18
	182 Call 0x1991590

Method: System.Int32 EndReceiveFrom_internal(System.Net.Sockets.SocketAsyncResult sockares, System.Net.Sockets.SocketAsyncEventArgs ares)

Disassembly:
	0x036C5968 MOVZ W8, 0xD3F
	0x036C596C LSRV W8, W8, W1
	0x036C5970 TBZ X8, 0x0, 0x36C598C
	0x036C5974 ADRP X8, 0xFFFFFFFFFD4D2000
	0x036C5978 ADD X8, X8, 0x7CC
	0x036C597C LDR W0, [X8, W1, SXTW]
	0x036C5980 LDP X20, X19, [X31 + 0x10]
	0x036C5984 LDR X30, [X31], #0x20
	0x036C5988 RET
	0x036C598C STR W1, [X31 + 0xC]
	0x036C5990 ADRP X0, 0xA7A000
	0x036C5994 LDR X0, [X0 + 0xB78]
	0x036C5998 BL 0x1C16D08
	0x036C599C ADD X1, X31, 0xC
	0x036C59A0 BL 0x1C16E04
	0x036C59A4 MOV X19, X0
	0x036C59A8 ADRP X0, 0xA7A000
	0x036C59AC LDR X0, [X0 + 0xB80]
	0x036C59B0 BL 0x1C16D08
	0x036C59B4 MOV X1, X19
	0x036C59B8 MOV X2, X31
	0x036C59BC BL 0x321EFD0
	0x036C59C0 MOV X19, X0
	0x036C59C4 ADRP X0, 0xA37000
	0x036C59C8 LDR X0, [X0 + 0x758]
	0x036C59CC BL 0x1C16D08
	0x036C59D0 BL 0x1C16F10
	0x036C59D4 MOV X1, X19
	0x036C59D8 MOV X2, X31
	0x036C59DC MOV X20, X0
	0x036C59E0 BL 0x33802E4
	0x036C59E4 ADRP X0, 0xA7A000
	0x036C59E8 LDR X0, [X0 + 0xB88]
	0x036C59EC BL 0x1C16D08
	0x036C59F0 MOV X1, X0
	0x036C59F4 MOV X0, X20
	0x036C59F8 BL 0x1C16DEC
	0x036C59FC B 0x1C874E8
	0x036C5A00 STR X30, [X31 - 0x20]!
	0x036C5A04 STP X20, X19, [X31 + 0x10]
	0x036C5A08 ADRP X20, 0xD1B000
	0x036C5A0C ADRP X19, 0xA37000
	0x036C5A10 LDRB W8, [X20 + 0xA13]
	0x036C5A14 LDR X19, [X19 + 0x788]
	0x036C5A18 TBNZ X8, 0x0, 0x36C5A30
	0x036C5A1C ADRP X0, 0xA37000
	0x036C5A20 LDR X0, [X0 + 0x788]
	0x036C5A24 BL 0x1C16CF4
	0x036C5A28 MOVZ W8, 0x1
	0x036C5A2C STRB W8, [X20 + 0xA13]
	0x036C5A30 LDR X0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X2
	005 Move X19, X1
	006 Call Socket.ThrowIfDisposedAndClosed, X0
	007 Compare X19, 0
	008 JumpIfEqual {39}
	009 Add X0, X19, 168
	010 Move W1, 1
	011 Move W2, W31
	012 Move X3, X31
	013 Call Interlocked.CompareExchange, X0, X1, X2
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W8, [X19+41]
	016 Compare W8, 0
	017 JumpIfNotEqual {27}
	018 Move X0, X19
	019 Move X1, X31
	020 Call IOAsyncResult.get_AsyncWaitHandle, X0
	021 Compare X0, 0
	022 JumpIfEqual {39}
	023 Move X8, [X0]
	024 Move X9, [X8+472]
	025 Move X1, [X8+480]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X0, X19
	028 Move X1, X31
	029 Call SocketAsyncResult.CheckIfThrowDelayedException, X0
	030 Compare X20, 0
	031 JumpIfEqual {39}
	032 Move X8, [X19+72]
	033 Move [X20+24], X8
	034 Move W0, [X19+160]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0
	039 Call 0x1C17F20
	040 Move X0, 0xA2F000
	041 Move X0, [X0+1456]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xA7B000
	046 Move X0, [X0+2872]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call InvalidOperationException..ctor, X0, X1
	052 Move X0, 0xA7B000
	053 Move X0, [X0+2880]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 ReceiveFrom_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Byte* buffer, System.Int32 count, System.Net.Sockets.SocketFlags flags, ref System.Net.SocketAddress sockaddr, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C5818 ADRP X0, 0xA7A000
	0x036C581C LDR X0, [X0 + 0x6F8]
	0x036C5820 BL 0x1C16CF4
	0x036C5824 ADRP X0, 0xA37000
	0x036C5828 LDR X0, [X0 + 0x788]
	0x036C582C BL 0x1C16CF4
	0x036C5830 MOVZ W8, 0x1
	0x036C5834 STRB W8, [X21 + 0xA0F]
	0x036C5838 STR W31, [X31 + 0xC]
	0x036C583C LDRB W8, [X20 + 0x52]
	0x036C5840 CBZ W8, 0x36C5944
	0x036C5844 LDR W8, [X20 + 0x1C]
	0x036C5848 CMP W8, 0x1
	0x036C584C B.LT 0x36C5944
	0x036C5850 ADRP X22, 0xA37000
	0x036C5854 LDR X22, [X22 + 0x788]
	0x036C5858 LDR X0, [X22]
	0x036C585C LDR W8, [X0 + 0xE0]
	0x036C5860 CBNZ W8, 0x36C5868
	0x036C5864 BL 0x1C16DFC
	0x036C5868 ADD X2, X31, 0xC
	0x036C586C MOV X0, X19
	0x036C5870 MOV W1, W31
	0x036C5874 BL 0x1C8706C
	0x036C5878 LDR W8, [X31 + 0xC]
	0x036C587C CBNZ W8, 0x36C5944
	0x036C5880 LDR W21, [X20 + 0x1C]
	0x036C5884 MOVZ W8, 0x4DD3
	0x036C5888 MOVK W8, 0x10620000
	0x036C588C SMADDL X8, X21, X8, X31
	0x036C5890 UBFM X9, X8, 0x3F, 0x3F
	0x036C5894 SBFM X8, X8, 0x26, 0x3F
	0x036C5898 ADD W20, W8, W9
	0x036C589C MOVZ W8, 0x3E8
	0x036C58A0 MSUB W23, W20, W8, W21
	0x036C58A4 CMP W23, 0x1
	0x036C58A8 B.LT 0x36C58E8
	0x036C58AC LDR X0, [X22]
	0x036C58B0 LDR W8, [X0 + 0xE0]
	0x036C58B4 CBNZ W8, 0x36C58BC
	0x036C58B8 BL 0x1C16DFC
	0x036C58BC MOVZ W8, 0x3E8
	0x036C58C0 MUL W2, W23, W8
	0x036C58C4 ADD X3, X31, 0xC
	0x036C58C8 MOV X0, X19
	0x036C58CC MOV W1, W31
	0x036C58D0 BL 0x1C86298
	0x036C58D4 CMP W21, 0x3E8
	0x036C58D8 B.LT 0x36C5944
	0x036C58DC LDR W8, [X31 + 0xC]
	0x036C58E0 CBZ W8, 0x36C58F0
	0x036C58E4 B 0x36C5944
	0x036C58E8 CMP W21, 0x3E8
	0x036C58EC B.LT 0x36C5944
	0x036C58F0 ADRP X8, 0xA7A000
	0x036C58F4 LDR X8, [X8 + 0x6F8]
	0x036C58F8 LDR X0, [X8]
	0x036C58FC BL 0x1C16F10
	0x036C5900 MOVZ W1, 0x1
	0x036C5904 MOV W2, W20
	0x036C5908 MOV X3, X31
	0x036C590C MOV X21, X0
	0x036C5910 BL 0x36CAA38
	0x036C5914 LDR X0, [X22]
	0x036C5918 LDR W8, [X0 + 0xE0]
	0x036C591C CBNZ W8, 0x36C5924
	0x036C5920 BL 0x1C16DFC
	0x036C5924 ADD X6, X31, 0xC
	0x036C5928 MOVZ W1, 0xFFFF
	0x036C592C MOVZ W2, 0x80
	0x036C5930 MOV X0, X19
	0x036C5934 MOV X3, X21
	0x036C5938 MOV X4, X31
	0x036C593C MOV W5, W31
	0x036C5940 BL 0x1C86DD8
	0x036C5944 LDP X20, X19, [X31 + 0x30]
	0x036C5948 LDP X22, X21, [X31 + 0x20]
	0x036C594C LDP X30, X23, [X31 + 0x10]
	0x036C5950 ADD X31, X31, 0x40
	0x036C5954 RET
	0x036C5958 STR X30, [X31 - 0x20]!
	0x036C595C STP X20, X19, [X31 + 0x10]
	0x036C5960 CMP W1, 0xC
	0x036C5964 B.CS 0x36C598C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xD1C000
	011 Move W8, [X26+2557]
	012 Move W23, W6
	013 Move X20, X5
	014 Move X21, X4
	015 Move W22, W3
	016 Move W24, W2
	017 Move X25, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA38000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+2557], W8
	028 Compare X19, 0
	029 JumpIfEqual {64}
	030 Move X0, X19
	031 Move X1, X31
	032 Call SafeSocketHandle.RegisterForBlockingSyscall, X0
	033 Move X8, 0xA38000
	034 Move X8, [X8+1928]
	035 Move X26, [X19+16]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 And W6, W23, 1
	042 Move X0, X26
	043 Move X1, X25
	044 Move W2, W24
	045 Move W3, W22
	046 Move X4, X21
	047 Move X5, X20
	048 Call 0x1C8753C
	049 Move W20, W0
	050 Move X0, X19
	051 Move X1, X31
	052 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	053 Move W0, W20
	054 Move X20, [X31+64]
	055 Move X19, [X31+72]
	056 Move X22, [X31+48]
	057 Move X21, [X31+56]
	058 Move X24, [X31+32]
	059 Move X23, [X31+40]
	060 Move X26, [X31+16]
	061 Move X25, [X31+24]
	062 Move X30, [X31+80]
	063 Return X0
	064 Call 0x1C17F20
	065 Move X20, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X20
	068 Call 0x3EB2AD0
	069 Move X21, [X0]
	070 Call 0x3EB2AE0
	071 Compare X19, 0
	072 JumpIfEqual {80}
	073 Move X0, X19
	074 Move X1, X31
	075 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	076 Compare X21, 0
	077 JumpIfNotEqual {81}
	078 Move W20, W31
	079 Move X21, X31
	080 Call 0x1C17F20
	081 Move X0, X21
	082 Call 0x1C17F18
	083 Move X20, X0
	084 Compare X19, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17F20
	087 Move X0, X19
	088 Move X1, X31
	089 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	090 Compare X21, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X20
	093 Call 0x1D2D690
	094 Move X0, X21
	095 Call 0x1C17F18
	096 Call 0x1991590

Method: System.Int32 ReceiveFrom_icall(System.IntPtr sock, System.Byte* buffer, System.Int32 count, System.Net.Sockets.SocketFlags flags, ref System.Net.SocketAddress sockaddr, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C5A34 LDR W8, [X0 + 0xE0]
	0x036C5A38 CBNZ W8, 0x36C5A40

ISIL:
	001 And W6, W6, 1
	002 Call 0x1C8753C
	003 Return X0

Method: System.Int32 Send(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036C1450 LDR X8, [X0 + 0xB8]
	0x036C1454 MOV X1, X19
	0x036C1458 MOV X2, X31
	0x036C145C MOV X3, X31
	0x036C1460 ADD X0, X8, 0x30
	0x036C1464 BL 0x33EB118
	0x036C1468 LDR X0, [X20]
	0x036C146C LDR W8, [X0 + 0xE0]
	0x036C1470 CBNZ W8, 0x36C147C
	0x036C1474 BL 0x1C16DFC
	0x036C1478 LDR X0, [X20]
	0x036C147C LDR X8, [X0 + 0xB8]
	0x036C1480 LDP X20, X19, [X31 + 0x10]
	0x036C1484 LDR X0, [X8 + 0x30]
	0x036C1488 LDR X30, [X31], #0x20
	0x036C148C RET
	0x036C1490 STP X30, X21, [X31 - 0x20]!
	0x036C1494 STP X20, X19, [X31 + 0x10]
	0x036C1498 ADRP X20, 0xD1F000
	0x036C149C ADRP X21, 0xA3B000
	0x036C14A0 LDRB W8, [X20 + 0xA14]
	0x036C14A4 LDR X21, [X21 + 0x788]
	0x036C14A8 MOV W19, W0
	0x036C14AC TBNZ X8, 0x0, 0x36C14C4
	0x036C14B0 ADRP X0, 0xA3B000
	0x036C14B4 LDR X0, [X0 + 0x788]
	0x036C14B8 BL 0x1C16CF4
	0x036C14BC MOVZ W8, 0x1
	0x036C14C0 STRB W8, [X20 + 0xA14]
	0x036C14C4 LDR X0, [X21]
	0x036C14C8 LDR W8, [X0 + 0xE0]
	0x036C14CC CBNZ W8, 0x36C14D4
	0x036C14D0 BL 0x1C16DFC
	0x036C14D4 MOV W0, W19
	0x036C14D8 LDP X20, X19, [X31 + 0x10]
	0x036C14DC LDP X30, X21, [X31], #0x20
	0x036C14E0 B 0x1C4CAE4
	0x036C14E4 STP X30, X21, [X31 - 0x20]!
	0x036C14E8 STP X20, X19, [X31 + 0x10]
	0x036C14EC LDR X8, [X0]
	0x036C14F0 MOV X19, X0
	0x036C14F4 LDP X9, X2, [X8 + 0x188]
	0x036C14F8 MOV W1, W31
	0x036C14FC BLR X9
	0x036C1500 MOV X0, X19
	0x036C1504 LDP X20, X19, [X31 + 0x10]
	0x036C1508 MOV X1, X31
	0x036C150C LDP X30, X21, [X31], #0x20
	0x036C1510 B 0x33CB4DC
	0x036C1514 CMP W1, 0x1
	0x036C1518 MOV X21, X0
	0x036C151C B.NE 0x36C154C
	0x036C1520 MOV X0, X21
	0x036C1524 BL 0x3EB1AD0
	0x036C1528 LDR X20, [X0]
	0x036C152C BL 0x3EB1AE0
	0x036C1530 MOV X0, X19
	0x036C1534 MOV X1, X31
	0x036C1538 BL 0x33CB4DC
	0x036C153C CBNZ X20, 0x36C1554
	0x036C1540 LDP X20, X19, [X31 + 0x10]
	0x036C1544 LDP X30, X21, [X31], #0x20
	0x036C1548 RET
	0x036C154C MOV X20, X31
	0x036C1550 B 0x36C1560
	0x036C1554 MOV X0, X20
	0x036C1558 BL 0x1C16F18
	0x036C155C MOV X21, X0
	0x036C1560 MOV X0, X19
	0x036C1564 MOV X1, X31
	0x036C1568 BL 0x33CB4DC
	0x036C156C CBNZ X20, 0x36C1578
	0x036C1570 MOV X0, X21
	0x036C1574 BL 0x1D2C690
	0x036C1578 MOV X0, X20
	0x036C157C BL 0x1C16F18
	0x036C1580 BL 0x1990590
	0x036C1584 STR X30, [X31 - 0x30]!
	0x036C1588 STP X22, X21, [X31 + 0x10]
	0x036C158C STP X20, X19, [X31 + 0x20]
	0x036C1590 ADRP X22, 0xD1F000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X25, 0xD20000
	015 Move W8, [X25+2558]
	016 Move X19, X5
	017 Move W20, W4
	018 Move W21, W3
	019 Move W22, W2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xA3C000
	027 Move X0, [X0+1928]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+2558], W8
	031 Move X0, X24
	032 Move [X31+12], W31
	033 Call Socket.ThrowIfDisposedAndClosed, X0
	034 Move X1, X23
	035 Call Socket.ThrowIfBufferNull, X0, X1
	036 Move X1, X23
	037 Move W2, W22
	038 Move W3, W21
	039 Call Socket.ThrowIfBufferOutOfRange, X0, X1, X2, X3
	040 Move W25, W31
	041 Compare W21, 0
	042 JumpIfEqual {81}
	043 Add X28, X23, 32
	044 Compare X23, 0
	045 JumpIfEqual {49}
	046 Move W8, [X23+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Move X29, X31
	050 Move X8, 0xA3C000
	051 Move X8, [X8+1928]
	052 Move X26, [X24+48]
	053 Move W27, [X24+80]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add W8, W25, W22
	061 NotImplemented "Instruction CSET not yet implemented."
	062 Add X1, X29, W8
	063 Subtract W2, W21, W25
	064 Add X4, X31, 12
	065 Move X0, X26
	066 Move W3, W20
	067 Call Socket.Send_internal, X0, X1, X2, X3, X4, X5
	068 Move W8, [X31+12]
	069 Move TEMP, 0x2732
	070 Not TEMP
	071 Move W9, TEMP
	072 Add W25, W0, W25
	073 Add W9, W8, W9
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X19], W8
	076 Compare W8, 0
	077 JumpIfNotEqual {82}
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W8, 1
	080 Move [X24+82], W8
	081 Move [X19], W31
	082 NotImplemented "Instruction STURH not yet implemented."
	083 Move W0, W25
	084 Move X20, [X31+96]
	085 Move X19, [X31+104]
	086 Move X22, [X31+80]
	087 Move X21, [X31+88]
	088 Move X24, [X31+64]
	089 Move X23, [X31+72]
	090 Move X26, [X31+48]
	091 Move X25, [X31+56]
	092 Move X28, [X31+32]
	093 Move X27, [X31+40]
	094 Move X29, [X31+16]
	095 Move X30, [X31+24]
	096 Add X31, X31, 112
	097 Return X0

Method: System.Int32 Send(System.Collections.Generic.IList`1<System.ArraySegment`1<System.Byte>> buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036C0EAC BL 0x1C16CF4
	0x036C0EB0 ADRP X0, 0xA7E000
	0x036C0EB4 LDR X0, [X0 + 0xFB8]
	0x036C0EB8 BL 0x1C16CF4
	0x036C0EBC ADRP X0, 0xA7F000
	0x036C0EC0 LDR X0, [X0 + 0xA00]
	0x036C0EC4 BL 0x1C16CF4
	0x036C0EC8 ADRP X0, 0xA7F000
	0x036C0ECC LDR X0, [X0 + 0x830]
	0x036C0ED0 BL 0x1C16CF4
	0x036C0ED4 MOVZ W8, 0x1
	0x036C0ED8 STRB W8, [X20 + 0xA01]
	0x036C0EDC MOV X0, X19
	0x036C0EE0 BL 0x36C19E0
	0x036C0EE4 MOV X1, X25
	0x036C0EE8 BL 0x36C3D18
	0x036C0EEC MOV X1, X25
	0x036C0EF0 MOV W2, W23
	0x036C0EF4 MOV W3, W22
	0x036C0EF8 BL 0x36C3D6C
	0x036C0EFC LDRB W8, [X19 + 0x52]
	0x036C0F00 CBZ W8, 0x36C102C
	0x036C0F04 ADRP X8, 0xA7E000
	0x036C0F08 LDR X8, [X8 + 0xFB8]
	0x036C0F0C STR W31, [X27]
	0x036C0F10 ADRP X27, 0xA7F000
	0x036C0F14 LDR X0, [X8]
	0x036C0F18 LDR X27, [X27 + 0x9F8]
	0x036C0F1C BL 0x1C16F10
	0x036C0F20 MOVZ W4, 0x4
	0x036C0F24 MOV X1, X19
	0x036C0F28 MOV X2, X26
	0x036C0F2C MOV X3, X24
	0x036C0F30 MOV X5, X31
	0x036C0F34 MOV X20, X0
	0x036C0F38 BL 0x36CD130
	0x036C0F3C LDR X1, [X27]
	0x036C0F40 MOV X0, X25
	0x036C0F44 BL 0x319DBA8
	0x036C0F48 CBZ X20, 0x36C1054
	0x036C0F4C STP X0, X1, [X20 + 0x50]
	0x036C0F50 STP W23, W22, [X20 + 0x60]
	0x036C0F54 STR W21, [X20 + 0x68]
	0x036C0F58 ADRP X25, 0xA7F000
	0x036C0F5C LDR X21, [X19 + 0x48]
	0x036C0F60 LDR X25, [X25 + 0x830]
	0x036C0F64 MOV X0, X20
	0x036C0F68 MOV X1, X31
	0x036C0F6C BL 0x36CD068
	0x036C0F70 LDR X8, [X25]
	0x036C0F74 MOV X22, X0
	0x036C0F78 LDR W9, [X8 + 0xE0]
	0x036C0F7C CBNZ W9, 0x36C0F8C
	0x036C0F80 MOV X0, X8
	0x036C0F84 BL 0x1C16DFC
	0x036C0F88 LDR X8, [X25]
	0x036C0F8C LDR X9, [X8 + 0xB8]
	0x036C0F90 ADRP X26, 0xA7F000
	0x036C0F94 LDR X23, [X9 + 0x58]
	0x036C0F98 LDR X26, [X26 + 0x9F0]
	0x036C0F9C CBNZ X23, 0x36C0FF4
	0x036C0FA0 LDR W9, [X8 + 0xE0]
	0x036C0FA4 CBNZ W9, 0x36C0FB4
	0x036C0FA8 MOV X0, X8
	0x036C0FAC BL 0x1C16DFC
	0x036C0FB0 LDR X8, [X25]
	0x036C0FB4 ADRP X9, 0xA7F000
	0x036C0FB8 LDR X8, [X8 + 0xB8]
	0x036C0FBC LDR X9, [X9 + 0x9E8]
	0x036C0FC0 LDR X24, [X8]
	0x036C0FC4 LDR X0, [X9]
	0x036C0FC8 BL 0x1C16F10
	0x036C0FCC ADRP X8, 0xA7F000
	0x036C0FD0 LDR X8, [X8 + 0xA00]
	0x036C0FD4 MOV X1, X24
	0x036C0FD8 MOV X3, X31
	0x036C0FDC MOV X23, X0
	0x036C0FE0 LDR X2, [X8]
	0x036C0FE4 BL 0x362E274
	0x036C0FE8 LDR X8, [X25]
	0x036C0FEC LDR X8, [X8 + 0xB8]
	0x036C0FF0 STR X23, [X8 + 0x58]
	0x036C0FF4 LDR X0, [X26]
	0x036C0FF8 BL 0x1C16F10
	0x036C0FFC MOVZ W1, 0x2
	0x036C1000 MOV X2, X23
	0x036C1004 MOV X3, X20
	0x036C1008 MOV X4, X31
	0x036C100C MOV X24, X0
	0x036C1010 BL 0x362E5F8
	0x036C1014 MOV X0, X19
	0x036C1018 MOV X1, X21
	0x036C101C MOV X2, X22
	0x036C1020 MOV X3, X24
	0x036C1024 BL 0x36C2680
	0x036C1028 B 0x36C1038
	0x036C102C MOVZ W8, 0x2749
	0x036C1030 MOV X20, X31
	0x036C1034 STR W8, [X27]
	0x036C1038 MOV X0, X20
	0x036C103C LDP X20, X19, [X31 + 0x40]
	0x036C1040 LDP X22, X21, [X31 + 0x30]
	0x036C1044 LDP X24, X23, [X31 + 0x20]
	0x036C1048 LDP X26, X25, [X31 + 0x10]
	0x036C104C LDP X30, X27, [X31], #0x50
	0x036C1050 RET
	0x036C1054 BL 0x1C16F20
	0x036C1058 STR X30, [X31 - 0x40]!
	0x036C105C STP X24, X23, [X31 + 0x10]
	0x036C1060 STP X22, X21, [X31 + 0x20]
	0x036C1064 STP X20, X19, [X31 + 0x30]
	0x036C1068 ADRP X24, 0xD1F000
	0x036C106C ADRP X22, 0xA7E000
	0x036C1070 ADRP X23, 0xA5D000
	0x036C1074 LDRB W8, [X24 + 0xA03]
	0x036C1078 LDR X22, [X22 + 0xA08]
	0x036C107C LDR X23, [X23 + 0xDD0]
	0x036C1080 MOV X20, X2
	0x036C1084 MOV X21, X1
	0x036C1088 MOV X19, X0
	0x036C108C TBNZ X8, 0x0, 0x36C10B0
	0x036C1090 ADRP X0, 0xA5D000
	0x036C1094 LDR X0, [X0 + 0xDD0]
	0x036C1098 BL 0x1C16CF4
	0x036C109C ADRP X0, 0xA7E000
	0x036C10A0 LDR X0, [X0 + 0xA08]
	0x036C10A4 BL 0x1C16CF4
	0x036C10A8 MOVZ W8, 0x1
	0x036C10AC STRB W8, [X24 + 0xA03]
	0x036C10B0 MOV X0, X19
	0x036C10B4 BL 0x36C19E0
	0x036C10B8 LDR X2, [X22]
	0x036C10BC LDR X3, [X23]
	0x036C10C0 MOV X1, X21
	0x036C10C4 BL 0x36C28D8
	0x036C10C8 CBZ X0, 0x36C1144
	0x036C10CC LDRB W8, [X0 + 0x29]
	0x036C10D0 MOV X21, X0
	0x036C10D4 CBNZ W8, 0x36C10F4
	0x036C10D8 MOV X0, X21
	0x036C10DC MOV X1, X31
	0x036C10E0 BL 0x362E3EC
	0x036C10E4 CBZ X0, 0x36C1144
	0x036C10E8 LDR X8, [X0]
	0x036C10EC LDP X9, X1, [X8 + 0x1D8]
	0x036C10F0 BLR X9
	0x036C10F4 MOV X0, X21
	0x036C10F8 MOV X1, X31
	0x036C10FC BL 0x36CD168
	0x036C1100 MOVN W8, 0x2732
	0x036C1104 ADD W8, W0, W8
	0x036C1108 CMP W8, 0x2
	0x036C110C STR W0, [X20]
	0x036C1110 B.CC 0x36C112C
	0x036C1114 CBNZ W0, 0x36C1128
	0x036C1118 MOV X0, X21
	0x036C111C MOV X1, X31
	0x036C1120 BL 0x36CD1E8
	0x036C1124 B 0x36C112C
	0x036C1128 STRB W31, [X19 + 0x52]
	0x036C112C LDR W0, [X21 + 0xA0]
	0x036C1130 LDP X20, X19, [X31 + 0x30]
	0x036C1134 LDP X22, X21, [X31 + 0x20]
	0x036C1138 LDP X24, X23, [X31 + 0x10]
	0x036C113C LDR X30, [X31], #0x40
	0x036C1140 RET
	0x036C1144 BL 0x1C16F20
	0x036C1148 STP X29, X30, [X31 - 0x60]!
	0x036C114C STP X28, X27, [X31 + 0x10]
	0x036C1150 STP X26, X25, [X31 + 0x20]
	0x036C1154 STP X24, X23, [X31 + 0x30]
	0x036C1158 STP X22, X21, [X31 + 0x40]
	0x036C115C STP X20, X19, [X31 + 0x50]
	0x036C1160 ADRP X29, 0xD1F000
	0x036C1164 ADRP X28, 0xA7D000
	0x036C1168 ADRP X27, 0xA7E000
	0x036C116C LDRB W8, [X29 + 0x9F8]
	0x036C1170 LDR X28, [X28 + 0xFB8]
	0x036C1174 LDR X27, [X27 + 0x9F8]
	0x036C1178 MOV X24, X7
	0x036C117C MOV X26, X6
	0x036C1180 MOV X22, X5
	0x036C1184 MOV W20, W4
	0x036C1188 MOV W21, W3
	0x036C118C MOV W23, W2
	0x036C1190 MOV X25, X1
	0x036C1194 MOV X19, X0
	0x036C1198 TBNZ X8, 0x0, 0x36C11D4
	0x036C119C ADRP X0, 0xA7E000
	0x036C11A0 LDR X0, [X0 + 0x9F0]
	0x036C11A4 BL 0x1C16CF4
	0x036C11A8 ADRP X0, 0xA7E000
	0x036C11AC LDR X0, [X0 + 0x9F8]
	0x036C11B0 BL 0x1C16CF4
	0x036C11B4 ADRP X0, 0xA7D000
	0x036C11B8 LDR X0, [X0 + 0xFB8]
	0x036C11BC BL 0x1C16CF4
	0x036C11C0 ADRP X0, 0xA3B000
	0x036C11C4 LDR X0, [X0 + 0x788]
	0x036C11C8 BL 0x1C16CF4
	0x036C11CC MOVZ W8, 0x1
	0x036C11D0 STRB W8, [X29 + 0x9F8]
	0x036C11D4 MOV X0, X19
	0x036C11D8 BL 0x36C19E0
	0x036C11DC MOV X1, X25
	0x036C11E0 BL 0x36C3D18
	0x036C11E4 MOV X1, X25
	0x036C11E8 MOV W2, W23
	0x036C11EC MOV W3, W21
	0x036C11F0 BL 0x36C3D6C
	0x036C11F4 STR W31, [X22]
	0x036C11F8 LDR X0, [X28]
	0x036C11FC BL 0x1C16F10
	0x036C1200 MOVZ W4, 0x2
	0x036C1204 MOV X1, X19
	0x036C1208 MOV X2, X26
	0x036C120C MOV X3, X24
	0x036C1210 MOV X5, X31
	0x036C1214 MOV X22, X0
	0x036C1218 BL 0x36CD130
	0x036C121C LDR X1, [X27]
	0x036C1220 MOV X0, X25
	0x036C1224 BL 0x319DBA8
	0x036C1228 CBZ X22, 0x36C12D0
	0x036C122C STP X0, X1, [X22 + 0x50]
	0x036C1230 STP W23, W21, [X22 + 0x60]
	0x036C1234 STR W20, [X22 + 0x68]
	0x036C1238 ADRP X23, 0xA3B000
	0x036C123C ADRP X24, 0xA7E000
	0x036C1240 LDR X20, [X19 + 0x40]
	0x036C1244 LDR X23, [X23 + 0x788]
	0x036C1248 LDR X24, [X24 + 0x9F0]
	0x036C124C MOV X0, X22
	0x036C1250 MOV X1, X31
	0x036C1254 BL 0x36CD068
	0x036C1258 LDR X8, [X23]
	0x036C125C MOV X21, X0
	0x036C1260 LDR W9, [X8 + 0xE0]
	0x036C1264 CBNZ W9, 0x36C1274
	0x036C1268 MOV X0, X8
	0x036C126C BL 0x1C16DFC
	0x036C1270 LDR X8, [X23]
	0x036C1274 LDR X8, [X8 + 0xB8]
	0x036C1278 LDR X0, [X24]
	0x036C127C LDR X23, [X8 + 0x80]
	0x036C1280 BL 0x1C16F10
	0x036C1284 MOVZ W1, 0x1
	0x036C1288 MOV X2, X23
	0x036C128C MOV X3, X22
	0x036C1290 MOV X4, X31
	0x036C1294 MOV X24, X0
	0x036C1298 BL 0x362E5F8
	0x036C129C MOV X0, X19
	0x036C12A0 MOV X1, X20
	0x036C12A4 MOV X2, X21
	0x036C12A8 MOV X3, X24
	0x036C12AC BL 0x36C2680
	0x036C12B0 MOV X0, X22
	0x036C12B4 LDP X20, X19, [X31 + 0x50]
	0x036C12B8 LDP X22, X21, [X31 + 0x40]
	0x036C12BC LDP X24, X23, [X31 + 0x30]
	0x036C12C0 LDP X26, X25, [X31 + 0x20]
	0x036C12C4 LDP X28, X27, [X31 + 0x10]
	0x036C12C8 LDP X29, X30, [X31], #0x60
	0x036C12CC RET
	0x036C12D0 BL 0x1C16F20
	0x036C12D4 STR X30, [X31 - 0x40]!
	0x036C12D8 STP X24, X23, [X31 + 0x10]
	0x036C12DC STP X22, X21, [X31 + 0x20]
	0x036C12E0 STP X20, X19, [X31 + 0x30]
	0x036C12E4 ADRP X24, 0xD1F000
	0x036C12E8 ADRP X22, 0xA7E000
	0x036C12EC ADRP X23, 0xA5D000
	0x036C12F0 LDRB W8, [X24 + 0x9F9]
	0x036C12F4 LDR X22, [X22 + 0xA10]
	0x036C12F8 LDR X23, [X23 + 0xDD0]
	0x036C12FC MOV X20, X2
	0x036C1300 MOV X21, X1
	0x036C1304 MOV X19, X0
	0x036C1308 TBNZ X8, 0x0, 0x36C132C
	0x036C130C ADRP X0, 0xA5D000
	0x036C1310 LDR X0, [X0 + 0xDD0]
	0x036C1314 BL 0x1C16CF4
	0x036C1318 ADRP X0, 0xA7E000
	0x036C131C LDR X0, [X0 + 0xA10]
	0x036C1320 BL 0x1C16CF4
	0x036C1324 MOVZ W8, 0x1
	0x036C1328 STRB W8, [X24 + 0x9F9]
	0x036C132C MOV X0, X19
	0x036C1330 BL 0x36C19E0
	0x036C1334 LDR X2, [X22]
	0x036C1338 LDR X3, [X23]
	0x036C133C MOV X1, X21
	0x036C1340 BL 0x36C28D8
	0x036C1344 CBZ X0, 0x36C13C0
	0x036C1348 LDRB W8, [X0 + 0x29]
	0x036C134C MOV X21, X0
	0x036C1350 CBNZ W8, 0x36C1370
	0x036C1354 MOV X0, X21
	0x036C1358 MOV X1, X31
	0x036C135C BL 0x362E3EC
	0x036C1360 CBZ X0, 0x36C13C0
	0x036C1364 LDR X8, [X0]
	0x036C1368 LDP X9, X1, [X8 + 0x1D8]
	0x036C136C BLR X9
	0x036C1370 MOV X0, X21
	0x036C1374 MOV X1, X31
	0x036C1378 BL 0x36CD168
	0x036C137C MOVN W8, 0x2732
	0x036C1380 ADD W8, W0, W8
	0x036C1384 CMP W8, 0x2
	0x036C1388 STR W0, [X20]
	0x036C138C B.CC 0x36C13A8
	0x036C1390 CBNZ W0, 0x36C13A4
	0x036C1394 MOV X0, X21
	0x036C1398 MOV X1, X31
	0x036C139C BL 0x36CD1E8
	0x036C13A0 B 0x36C13A8
	0x036C13A4 STRB W31, [X19 + 0x52]
	0x036C13A8 LDR W0, [X21 + 0xA0]
	0x036C13AC LDP X20, X19, [X31 + 0x30]
	0x036C13B0 LDP X22, X21, [X31 + 0x20]
	0x036C13B4 LDP X24, X23, [X31 + 0x10]
	0x036C13B8 LDR X30, [X31], #0x40
	0x036C13BC RET
	0x036C13C0 BL 0x1C16F20
	0x036C13C4 STR X30, [X31 - 0x20]!
	0x036C13C8 STP X20, X19, [X31 + 0x10]
	0x036C13CC ADRP X19, 0xD1F000
	0x036C13D0 ADRP X20, 0xA3B000
	0x036C13D4 LDRB W8, [X19 + 0x9D0]
	0x036C13D8 LDR X20, [X20 + 0x788]
	0x036C13DC TBNZ X8, 0x0, 0x36C1400
	0x036C13E0 ADRP X0, 0xA38000
	0x036C13E4 LDR X0, [X0 + 0xCC0]
	0x036C13E8 BL 0x1C16CF4
	0x036C13EC ADRP X0, 0xA3B000
	0x036C13F0 LDR X0, [X0 + 0x788]
	0x036C13F4 BL 0x1C16CF4
	0x036C13F8 MOVZ W8, 0x1
	0x036C13FC STRB W8, [X19 + 0x9D0]
	0x036C1400 LDR X0, [X20]
	0x036C1404 LDR W8, [X0 + 0xE0]
	0x036C1408 CBNZ W8, 0x36C1414
	0x036C140C BL 0x1C16DFC
	0x036C1410 LDR X0, [X20]
	0x036C1414 LDR X8, [X0 + 0xB8]
	0x036C1418 LDR X8, [X8 + 0x30]
	0x036C141C CBNZ X8, 0x36C146C
	0x036C1420 ADRP X8, 0xA38000
	0x036C1424 LDR X8, [X8 + 0xCC0]
	0x036C1428 LDR X0, [X8]
	0x036C142C BL 0x1C16F10
	0x036C1430 MOV X1, X31
	0x036C1434 MOV X19, X0
	0x036C1438 BL 0x33BDD8C
	0x036C143C LDR X0, [X20]
	0x036C1440 LDR W8, [X0 + 0xE0]
	0x036C1444 CBNZ W8, 0x36C1450
	0x036C1448 BL 0x1C16DFC
	0x036C144C LDR X0, [X20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0xD21000
	015 Move W8, [X19+2559]
	016 Move X24, X3
	017 Move W21, W2
	018 Move X22, X1
	019 Move X26, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0xA67000
	025 Move X0, [X0+3312]
	026 Call 0x1C17CF4
	027 Move X0, 0xA67000
	028 Move X0, [X0+3320]
	029 Call 0x1C17CF4
	030 Move X0, 0xA67000
	031 Move X0, [X0+3328]
	032 Call 0x1C17CF4
	033 Move X0, 0xA5C000
	034 Move X0, [X0+1456]
	035 Call 0x1C17CF4
	036 Move X0, 0xA76000
	037 Move X0, [X0+3192]
	038 Call 0x1C17CF4
	039 Move X0, 0xA80000
	040 Move X0, [X0+2440]
	041 Call 0x1C17CF4
	042 Move X0, 0xA80000
	043 Move X0, [X0+2448]
	044 Call 0x1C17CF4
	045 Move X0, 0xA80000
	046 Move X0, [X0+2456]
	047 Call 0x1C17CF4
	048 Move X0, 0xA5C000
	049 Move X0, [X0+2128]
	050 Call 0x1C17CF4
	051 Move X0, 0xA3D000
	052 Move X0, [X0+1928]
	053 Call 0x1C17CF4
	054 Move X0, 0xA80000
	055 Move X0, [X0+2464]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+2559], W8
	059 Move X0, X26
	060 Move [X31+64], X31
	061 Move [X31+72], X31
	062 Move [X31+60], W31
	063 Call Socket.ThrowIfDisposedAndClosed, X0
	064 Compare X22, 0
	065 JumpIfEqual {308}
	066 Move X19, 0xA80000
	067 Move X8, [X22]
	068 Move X19, [X19+2440]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X1, [X19]
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X22
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X22
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare W0, 0
	090 JumpIfEqual {320}
	091 Move X8, [X22]
	092 Move X1, [X19]
	093 Move X20, 0xA76000
	094 Move X19, 0xA80000
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X20, [X20+3192]
	097 Move X19, [X19+2464]
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move X0, X22
	107 Move W2, W31
	108 Call 0x1C5D788
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X1, [X0+8]
	114 Move X0, X22
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, [X20]
	117 Move W23, W0
	118 Move [X31+76], W0
	119 Move W1, W23
	120 Move X0, X8
	121 Call 0x1C17D6C
	122 Move [X31+64], X0
	123 Move X0, [X19]
	124 Add X8, X31, 60
	125 Add X9, X31, 64
	126 Move [X31+24], X31
	127 Move [X31+32], X8
	128 Add X8, X31, 76
	129 Move [X31+40], X9
	130 Move [X31+48], X8
	131 Move W1, W23
	132 Call 0x1C17D6C
	133 Move [X31+16], X24
	134 Compare X0, 0
	135 JumpIfEqual {140}
	136 Move W8, [X0+24]
	137 Add X9, X0, 32
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSEL not yet implemented."
	140 Move X23, X31
	141 Move W25, [X31+76]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X31], X26
	144 Move [X31+12], W21
	145 Move X27, 0xA7F000
	146 Move X28, 0xA5B000
	147 Move X29, 0xA5B000
	148 Move X19, 0xA7F000
	149 Move X27, [X27+2448]
	150 Move X28, [X28+1456]
	151 Move X29, [X29+2128]
	152 Move X19, [X19+2456]
	153 Move W24, W31
	154 Move X8, [X22]
	155 Move X1, [X27]
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 Compare X9, 0
	158 JumpIfEqual {165}
	159 Move X10, [X8+176]
	160 Add X10, X10, 8
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Subtract X9, X9, 1
	164 Add X10, X10, 16
	165 Move X0, X22
	166 Move W2, W31
	167 Call 0x1C5D788
	168 NotImplemented "Instruction LDRSW not yet implemented."
	169 Add X8, X8, X9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X2, [X0+8]
	173 Move X0, X22
	174 Move W1, W24
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X26, X0
	177 Move X0, [X28]
	178 Move X25, X1
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move TEMP, X25
	184 And TEMP, TEMP, -2147483648
	185 Compare TEMP, -2147483648
	186 JumpIfEqual {286}
	187 Move X0, [X28]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X20, X25
	193 ShiftRight X20, 32
	194 And X20, X20, 0x7FFFFFFF
	195 Move TEMP, X20
	196 And TEMP, TEMP, -2147483648
	197 Compare TEMP, -2147483648
	198 JumpIfEqual {286}
	199 Move X0, [X28]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Compare X26, 0
	205 JumpIfEqual {305}
	206 Move W8, [X26+24]
	207 Subtract W8, W8, W25
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X0, [X28]
	210 Move X21, [X31+64]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move W1, 3
	216 Move X0, X26
	217 Move X2, X31
	218 Call GCHandle.Alloc, X0, X1
	219 Compare X21, 0
	220 JumpIfEqual {304}
	221 Move W8, [X21+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Add X8, X21, W24
	224 Move [X8+32], X0
	225 Move X0, [X28]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X8, W24
	231 Add X21, X23, X8
	232 Move [X21], W20
	233 Move X0, [X29]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X2, [X19]
	239 Move X0, X26
	240 Move W1, W25
	241 Call 0x22170F0, X0, X1
	242 Move [X21+8], X0
	243 Move W25, [X31+76]
	244 Add W24, W24, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move W21, [X31+12]
	247 Move X26, [X31]
	248 Move X8, 0xA3C000
	249 Move X8, [X8+1928]
	250 Move X22, [X26+48]
	251 Move W19, [X26+80]
	252 Move X0, [X8]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 NotImplemented "Instruction CMP not yet implemented."
	258 NotImplemented "Instruction CSET not yet implemented."
	259 Add X4, X31, 72
	260 Move X0, X22
	261 Move X1, X23
	262 Move W2, W25
	263 Move W3, W21
	264 Call Socket.Send_internal, X0, X1, X2, X3, X4, X5
	265 Move X24, [X31+16]
	266 Move W20, W0
	267 Add X0, X31, 24
	268 Call 0x1BC81C0
	269 Move W8, [X31+72]
	270 Move W0, W20
	271 Move X20, [X31+160]
	272 Move X19, [X31+168]
	273 Move X22, [X31+144]
	274 Move X21, [X31+152]
	275 Move [X24], W8
	276 Move X24, [X31+128]
	277 Move X23, [X31+136]
	278 Move X26, [X31+112]
	279 Move X25, [X31+120]
	280 Move X28, [X31+96]
	281 Move X27, [X31+104]
	282 Move X29, [X31+80]
	283 Move X30, [X31+88]
	284 Add X31, X31, 176
	285 Return X0
	286 Move X0, 0xA3B000
	287 Move X0, [X0+1888]
	288 Call 0x1C17D08
	289 Call 0x1C17F10
	290 Move X20, X0
	291 Move X0, 0xA7F000
	292 Move X0, [X0+2472]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X20
	296 Move X2, X31
	297 Call ArgumentOutOfRangeException..ctor, X0, X1
	298 Move X0, 0xA7F000
	299 Move X0, [X0+2480]
	300 Call 0x1C17D08
	301 Move X1, X0
	302 Move X0, X20
	303 Call 0x1C17DEC
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Call 0x1C17F28
	308 Move X0, 0xA38000
	309 Move X0, [X0+1320]
	310 Call 0x1C17D08
	311 Call 0x1C17F10
	312 Move X19, X0
	313 Move X0, 0xA7F000
	314 Move X0, [X0+2488]
	315 Call 0x1C17D08
	316 Move X1, X0
	317 Move X0, X19
	318 Move X2, X31
	319 Call ArgumentNullException..ctor, X0, X1
	320 Move X0, 0xA3B000
	321 Move X0, [X0+1400]
	322 Call 0x1C17D08
	323 Call 0x1C17F10
	324 Move X19, X0
	325 Move X0, 0xA7F000
	326 Move X0, [X0+2496]
	327 Call 0x1C17D08
	328 Move X20, X0
	329 Move X0, 0xA7F000
	330 Move X0, [X0+2488]
	331 Call 0x1C17D08
	332 Move X2, X0
	333 Move X0, X19
	334 Move X1, X20
	335 Move X3, X31
	336 Call ArgumentException..ctor, X0, X1, X2
	337 Move X0, 0xA7F000
	338 Move X0, [X0+2480]
	339 Call 0x1C17D08
	340 Move X1, X0
	341 Move X0, X19
	342 Call 0x1C17DEC
	343 Move X20, X0
	344 Move X20, X0
	345 Move X20, X0
	346 Move X24, [X31+16]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X0, X20
	349 Call 0x3EB2AD0
	350 Move X21, [X0]
	351 Call 0x3EB2AE0
	352 Compare X21, 0
	353 JumpIfEqual {366}
	354 Move X0, X21
	355 Call 0x1C17F18
	356 Compare X21, 0
	357 JumpIfNotEqual {367}
	358 Move X20, X0
	359 Move W8, 1
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move X0, X20
	362 Call 0x3EB2AD0
	363 Move X8, [X0]
	364 Move [X31+24], X8
	365 Call 0x3EB2AE0
	366 Move W20, W31
	367 Move X0, X21
	368 Call 0x1C17F18
	369 Move X20, X0
	370 Add X0, X31, 24
	371 Call 0x1BC81C0
	372 Move X0, X20
	373 Call 0x1D2D690
	374 Call 0x1991590

Method: System.Boolean SendAsync(System.Net.Sockets.SocketAsyncEventArgs e)

Disassembly:
	0x036C5CBC BL 0x2D0EF74
	0x036C5CC0 LDR X8, [X22]
	0x036C5CC4 LDR X8, [X8 + 0xB8]
	0x036C5CC8 STR X20, [X8 + 0x8]
	0x036C5CCC LDR X8, [X21]
	0x036C5CD0 LDR X0, [X24]
	0x036C5CD4 LDR X8, [X8 + 0xB8]
	0x036C5CD8 LDR X19, [X8]
	0x036C5CDC BL 0x1C16F10
	0x036C5CE0 LDR X2, [X26]
	0x036C5CE4 MOV X1, X19
	0x036C5CE8 MOV X3, X31
	0x036C5CEC MOV X20, X0
	0x036C5CF0 BL 0x2D0EF74
	0x036C5CF4 LDR X8, [X22]
	0x036C5CF8 LDR X8, [X8 + 0xB8]
	0x036C5CFC STR X20, [X8 + 0x10]
	0x036C5D00 LDR X0, [X29]
	0x036C5D04 BL 0x1C16F10
	0x036C5D08 LDR X1, [X28]
	0x036C5D0C MOV X19, X0
	0x036C5D10 BL 0x2695F70
	0x036C5D14 LDR X8, [X22]
	0x036C5D18 LDR X8, [X8 + 0xB8]
	0x036C5D1C STR X19, [X8 + 0x18]
	0x036C5D20 ADRP X8, 0xA7A000
	0x036C5D24 LDR X8, [X8 + 0xB98]
	0x036C5D28 LDR X0, [X8]
	0x036C5D2C BL 0x1C16F10
	0x036C5D30 MOV X1, X31
	0x036C5D34 MOV X19, X0
	0x036C5D38 BL 0x36C6128
	0x036C5D3C LDR X8, [X22]
	0x036C5D40 LDR X8, [X8 + 0xB8]
	0x036C5D44 STR X19, [X8 + 0x20]
	0x036C5D48 ADRP X8, 0xA2F000
	0x036C5D4C LDR X8, [X8 + 0x7B8]
	0x036C5D50 LDR X0, [X8]
	0x036C5D54 LDR W8, [X0 + 0xE0]
	0x036C5D58 CBNZ W8, 0x36C5D60
	0x036C5D5C BL 0x1C16DFC
	0x036C5D60 ADRP X8, 0xA61000
	0x036C5D64 LDR X8, [X8 + 0xCD0]
	0x036C5D68 MOV W0, W31
	0x036C5D6C LDR X1, [X8]
	0x036C5D70 BL 0x229A250
	0x036C5D74 LDR X8, [X22]
	0x036C5D78 LDR X8, [X8 + 0xB8]
	0x036C5D7C STR X0, [X8 + 0x28]
	0x036C5D80 LDR X8, [X21]
	0x036C5D84 LDR X0, [X23]
	0x036C5D88 LDR X8, [X8 + 0xB8]
	0x036C5D8C LDR X19, [X8]
	0x036C5D90 BL 0x1C16F10
	0x036C5D94 ADRP X8, 0xA7A000
	0x036C5D98 LDR X8, [X8 + 0xC08]
	0x036C5D9C MOV X1, X19
	0x036C5DA0 MOV X3, X31
	0x036C5DA4 MOV X20, X0
	0x036C5DA8 LDR X2, [X8]
	0x036C5DAC BL 0x3316570
	0x036C5DB0 LDR X8, [X22]
	0x036C5DB4 LDR X8, [X8 + 0xB8]
	0x036C5DB8 STR X20, [X8 + 0x40]
	0x036C5DBC LDR X8, [X21]
	0x036C5DC0 LDR X0, [X25]
	0x036C5DC4 LDR X8, [X8 + 0xB8]
	0x036C5DC8 LDR X19, [X8]
	0x036C5DCC BL 0x1C16F10
	0x036C5DD0 ADRP X8, 0xA7A000
	0x036C5DD4 LDR X8, [X8 + 0xC10]
	0x036C5DD8 MOV X1, X19
	0x036C5DDC MOV X3, X31
	0x036C5DE0 MOV X20, X0
	0x036C5DE4 LDR X2, [X8]
	0x036C5DE8 BL 0x362E274
	0x036C5DEC LDR X8, [X22]
	0x036C5DF0 LDR X8, [X8 + 0xB8]
	0x036C5DF4 STR X20, [X8 + 0x48]
	0x036C5DF8 LDR X8, [X21]
	0x036C5DFC LDR X0, [X25]
	0x036C5E00 LDR X8, [X8 + 0xB8]
	0x036C5E04 LDR X19, [X8]
	0x036C5E08 BL 0x1C16F10
	0x036C5E0C ADRP X8, 0xA7A000
	0x036C5E10 LDR X8, [X8 + 0xC18]
	0x036C5E14 MOV X1, X19
	0x036C5E18 MOV X3, X31
	0x036C5E1C MOV X20, X0
	0x036C5E20 LDR X2, [X8]
	0x036C5E24 BL 0x362E274
	0x036C5E28 LDR X8, [X22]
	0x036C5E2C LDR X8, [X8 + 0xB8]
	0x036C5E30 STR X20, [X8 + 0x50]
	0x036C5E34 LDR X8, [X21]
	0x036C5E38 LDR X0, [X23]
	0x036C5E3C LDR X8, [X8 + 0xB8]
	0x036C5E40 LDR X19, [X8]
	0x036C5E44 BL 0x1C16F10
	0x036C5E48 ADRP X8, 0xA7A000
	0x036C5E4C LDR X8, [X8 + 0xC20]
	0x036C5E50 MOV X1, X19
	0x036C5E54 MOV X3, X31
	0x036C5E58 MOV X20, X0
	0x036C5E5C LDR X2, [X8]
	0x036C5E60 BL 0x3316570
	0x036C5E64 LDR X8, [X22]
	0x036C5E68 LDR X8, [X8 + 0xB8]
	0x036C5E6C STR X20, [X8 + 0x58]
	0x036C5E70 LDR X8, [X21]
	0x036C5E74 LDR X0, [X25]
	0x036C5E78 LDR X8, [X8 + 0xB8]
	0x036C5E7C LDR X19, [X8]
	0x036C5E80 BL 0x1C16F10
	0x036C5E84 ADRP X8, 0xA7A000
	0x036C5E88 LDR X8, [X8 + 0xC28]
	0x036C5E8C MOV X1, X19
	0x036C5E90 MOV X3, X31
	0x036C5E94 MOV X20, X0
	0x036C5E98 LDR X2, [X8]
	0x036C5E9C BL 0x362E274
	0x036C5EA0 LDR X8, [X22]
	0x036C5EA4 LDR X8, [X8 + 0xB8]
	0x036C5EA8 STR X20, [X8 + 0x60]
	0x036C5EAC LDR X8, [X21]
	0x036C5EB0 LDR X0, [X23]
	0x036C5EB4 LDR X8, [X8 + 0xB8]
	0x036C5EB8 LDR X19, [X8]
	0x036C5EBC BL 0x1C16F10
	0x036C5EC0 ADRP X8, 0xA7A000
	0x036C5EC4 LDR X8, [X8 + 0xC30]
	0x036C5EC8 MOV X1, X19
	0x036C5ECC MOV X3, X31
	0x036C5ED0 MOV X20, X0
	0x036C5ED4 LDR X2, [X8]
	0x036C5ED8 BL 0x3316570
	0x036C5EDC LDR X8, [X22]
	0x036C5EE0 LDR X8, [X8 + 0xB8]
	0x036C5EE4 STR X20, [X8 + 0x68]
	0x036C5EE8 LDR X8, [X21]
	0x036C5EEC LDR X0, [X25]
	0x036C5EF0 LDR X8, [X8 + 0xB8]
	0x036C5EF4 LDR X19, [X8]
	0x036C5EF8 BL 0x1C16F10
	0x036C5EFC ADRP X8, 0xA7A000
	0x036C5F00 LDR X8, [X8 + 0xC38]
	0x036C5F04 MOV X1, X19
	0x036C5F08 MOV X3, X31
	0x036C5F0C MOV X20, X0
	0x036C5F10 LDR X2, [X8]
	0x036C5F14 BL 0x362E274
	0x036C5F18 LDR X8, [X22]
	0x036C5F1C LDR X8, [X8 + 0xB8]
	0x036C5F20 STR X20, [X8 + 0x70]
	0x036C5F24 LDR X8, [X21]
	0x036C5F28 LDR X0, [X23]
	0x036C5F2C LDR X8, [X8 + 0xB8]
	0x036C5F30 LDR X19, [X8]
	0x036C5F34 BL 0x1C16F10
	0x036C5F38 ADRP X8, 0xA7A000
	0x036C5F3C LDR X8, [X8 + 0xBB8]
	0x036C5F40 MOV X1, X19
	0x036C5F44 MOV X3, X31
	0x036C5F48 MOV X20, X0
	0x036C5F4C LDR X2, [X8]
	0x036C5F50 BL 0x3316570
	0x036C5F54 LDR X8, [X22]
	0x036C5F58 LDR X8, [X8 + 0xB8]
	0x036C5F5C STR X20, [X8 + 0x78]
	0x036C5F60 LDR X8, [X21]
	0x036C5F64 LDR X0, [X25]
	0x036C5F68 LDR X8, [X8 + 0xB8]
	0x036C5F6C LDR X19, [X8]
	0x036C5F70 BL 0x1C16F10
	0x036C5F74 ADRP X8, 0xA7A000
	0x036C5F78 LDR X8, [X8 + 0xBC0]
	0x036C5F7C MOV X1, X19
	0x036C5F80 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0xD1C000
	012 Move W8, [X21+2560]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xA7B000
	020 Move X0, [X0+2536]
	021 Call 0x1C17CF4
	022 Move X0, 0xA7B000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move X0, 0xA7B000
	026 Move X0, [X0+2848]
	027 Call 0x1C17CF4
	028 Move X0, 0xA38000
	029 Move X0, [X0+1928]
	030 Call 0x1C17CF4
	031 Move X0, 0xA7B000
	032 Move X0, [X0+2888]
	033 Call 0x1C17CF4
	034 Move X0, 0xA7B000
	035 Move X0, [X0+2096]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2560], W8
	039 Move X0, X19
	040 Call Socket.ThrowIfDisposedAndClosed, X0
	041 Compare X20, 0
	042 JumpIfEqual {183}
	043 Move X8, 0xA7B000
	044 Move X8, [X8+2848]
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Add X0, X31, 0
	047 Move X1, X31
	048 Move X3, [X8]
	049 Move X2, X31
	050 Move [X31], V0
	051 Call 0x319F7D0, X0, X1
	052 Move X21, [X20+120]
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {59}
	057 Compare X21, 0
	058 JumpIfEqual {184}
	059 Move X22, 0xA38000
	060 Move X22, [X22+1928]
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X22]
	067 Move X8, [X0+184]
	068 Move X25, 0xA7B000
	069 Move X2, [X8+160]
	070 Move X25, [X25+2544]
	071 Compare X21, 0
	072 JumpIfEqual {103}
	073 Move W4, 11
	074 Move X0, X19
	075 Move X1, X20
	076 Move X3, X20
	077 Call Socket.InitSocketAsyncEventArgs, X0, X1, X2, X3, X4
	078 Move X0, [X20+40]
	079 Compare X0, 0
	080 JumpIfEqual {183}
	081 Move X8, [X20+120]
	082 Move X1, X31
	083 Move [X0+136], X8
	084 Move X21, [X19+72]
	085 Call SocketAsyncResult.get_Handle, X0
	086 Move X8, [X22]
	087 Move X20, [X20+40]
	088 Move X23, X0
	089 Move X8, [X8+184]
	090 Move X22, [X8+168]
	091 Move X8, [X25]
	092 Move X0, X8
	093 Call 0x1C17F10
	094 Move W1, 2
	095 Move X2, X22
	096 Move X3, X20
	097 Move X4, X31
	098 Move X24, X0
	099 Call IOSelectorJob..ctor, X0, X1, X2, X3
	100 Move X0, X19
	101 Move X1, X21
	102 Move X2, X23
	103 Move W4, 4
	104 Move X0, X19
	105 Move X1, X20
	106 Move X3, X20
	107 Call Socket.InitSocketAsyncEventArgs, X0, X1, X2, X3, X4
	108 Move X8, [X20+40]
	109 Compare X8, 0
	110 JumpIfEqual {183}
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 Move [X8+5], V0
	113 Move X0, [X20+40]
	114 Compare X0, 0
	115 JumpIfEqual {183}
	116 Move V0, [X20+104]
	117 Move X1, X31
	118 Move [X0+96], D0
	119 Move X21, [X19+72]
	120 Call SocketAsyncResult.get_Handle, X0
	121 Move X26, 0xA7B000
	122 Move X26, [X26+2096]
	123 Move X22, X0
	124 Move X8, [X26]
	125 Move W9, [X8+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {131}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X8, [X26]
	131 Move X9, [X8+184]
	132 Move X23, [X9+80]
	133 Compare X23, 0
	134 JumpIfNotEqual {157}
	135 Move W9, [X8+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {141}
	138 Move X0, X8
	139 Call 0x1C17DFC
	140 Move X8, [X26]
	141 Move X9, 0xA7B000
	142 Move X8, [X8+184]
	143 Move X9, [X9+2536]
	144 Move X24, [X8]
	145 Move X0, [X9]
	146 Call 0x1C17F10
	147 Move X8, 0xA7B000
	148 Move X8, [X8+2888]
	149 Move X1, X24
	150 Move X3, X31
	151 Move X23, X0
	152 Move X2, [X8]
	153 Call IOAsyncCallback..ctor, X0, X1, X2
	154 Move X8, [X26]
	155 Move X8, [X8+184]
	156 Move [X8+80], X23
	157 Move X0, [X25]
	158 Move X20, [X20+40]
	159 Call 0x1C17F10
	160 Move W1, 2
	161 Move X2, X23
	162 Move X3, X20
	163 Move X4, X31
	164 Move X24, X0
	165 Call IOSelectorJob..ctor, X0, X1, X2, X3
	166 Move X0, X19
	167 Move X1, X21
	168 Move X2, X22
	169 Move X3, X24
	170 Call Socket.QueueIOSelectorJob, X0, X1, X2, X3
	171 Move X20, [X31+80]
	172 Move X19, [X31+88]
	173 Move X22, [X31+64]
	174 Move X21, [X31+72]
	175 Move X24, [X31+48]
	176 Move X23, [X31+56]
	177 Move X26, [X31+32]
	178 Move X25, [X31+40]
	179 Move X30, [X31+16]
	180 Move W0, 1
	181 Add X31, X31, 96
	182 Return X0
	183 Call 0x1C17F20
	184 Move X0, 0xA3A000
	185 Move X0, [X0+2584]
	186 Call 0x1C17D08
	187 Call 0x1C17F10
	188 Move X19, X0
	189 Move X0, 0xA7B000
	190 Move X0, [X0+2856]
	191 Call 0x1C17D08
	192 Move X1, X0
	193 Move X0, X19
	194 Move X2, X31
	195 Call NullReferenceException..ctor, X0, X1
	196 Move X0, 0xA7B000
	197 Move X0, [X0+2896]
	198 Call 0x1C17D08
	199 Move X1, X0
	200 Move X0, X19
	201 Call 0x1C17DEC

Method: System.IAsyncResult BeginSend(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x036C1E4C LDR X20, [X19 + 0x30]
	0x036C1E50 LDR W21, [X19 + 0x20]
	0x036C1E54 LDR X0, [X8]
	0x036C1E58 LDR W8, [X0 + 0xE0]
	0x036C1E5C CBNZ W8, 0x36C1E64
	0x036C1E60 BL 0x1C16DFC
	0x036C1E64 ADD X2, X31, 0xC
	0x036C1E68 MOV X0, X20
	0x036C1E6C MOV W1, W21
	0x036C1E70 BL 0x36C1EEC
	0x036C1E74 LDR W8, [X31 + 0xC]
	0x036C1E78 CBNZ W8, 0x36C1EAC
	0x036C1E7C MOV X1, X0
	0x036C1E80 LDR X0, [X19 + 0x38]
	0x036C1E84 CBZ X0, 0x36C1EE8
	0x036C1E88 LDR X8, [X0]
	0x036C1E8C LDP X9, X2, [X8 + 0x198]
	0x036C1E90 BLR X9
	0x036C1E94 B 0x36C1E9C
	0x036C1E98 MOV X0, X31
	0x036C1E9C LDP X20, X19, [X31 + 0x20]
	0x036C1EA0 LDP X30, X21, [X31 + 0x10]
	0x036C1EA4 ADD X31, X31, 0x30
	0x036C1EA8 RET
	0x036C1EAC ADRP X0, 0xA70000
	0x036C1EB0 LDR X0, [X0 + 0xD8]
	0x036C1EB4 MOV W19, W8
	0x036C1EB8 BL 0x1C16D08
	0x036C1EBC BL 0x1C16F10
	0x036C1EC0 MOV W1, W19
	0x036C1EC4 MOV X2, X31
	0x036C1EC8 MOV X20, X0
	0x036C1ECC BL 0x36C6F04
	0x036C1ED0 ADRP X0, 0xA7E000
	0x036C1ED4 LDR X0, [X0 + 0xA38]
	0x036C1ED8 BL 0x1C16D08
	0x036C1EDC MOV X1, X0
	0x036C1EE0 MOV X0, X20
	0x036C1EE4 BL 0x1C16DEC
	0x036C1EE8 BL 0x1C16F20
	0x036C1EEC STR X30, [X31 - 0x30]!
	0x036C1EF0 STP X22, X21, [X31 + 0x10]
	0x036C1EF4 STP X20, X19, [X31 + 0x20]
	0x036C1EF8 ADRP X22, 0xD1F000
	0x036C1EFC LDRB W8, [X22 + 0x9DB]
	0x036C1F00 MOV X20, X2
	0x036C1F04 MOV W21, W1
	0x036C1F08 MOV X19, X0
	0x036C1F0C TBNZ X8, 0x0, 0x36C1F24
	0x036C1F10 ADRP X0, 0xA3B000
	0x036C1F14 LDR X0, [X0 + 0x788]
	0x036C1F18 BL 0x1C16CF4
	0x036C1F1C MOVZ W8, 0x1
	0x036C1F20 STRB W8, [X22 + 0x9DB]
	0x036C1F24 STRB W31, [X31 + 0xC]
	0x036C1F28 CBZ X19, 0x36C1F9C
	0x036C1F2C ADD X1, X31, 0xC
	0x036C1F30 MOV X0, X19
	0x036C1F34 MOV X2, X31
	0x036C1F38 BL 0x32BF948
	0x036C1F3C ADRP X8, 0xA3B000
	0x036C1F40 LDR X8, [X8 + 0x788]
	0x036C1F44 LDR X22, [X19 + 0x10]
	0x036C1F48 LDR X0, [X8]
	0x036C1F4C LDR W8, [X0 + 0xE0]
	0x036C1F50 CBNZ W8, 0x36C1F58
	0x036C1F54 BL 0x1C16DFC
	0x036C1F58 MOV X0, X22
	0x036C1F5C MOV W1, W21
	0x036C1F60 MOV X2, X20
	0x036C1F64 BL 0x1C86BA8
	0x036C1F68 LDRB W8, [X31 + 0xC]
	0x036C1F6C MOV X21, X0
	0x036C1F70 CBZ W8, 0x36C1F88
	0x036C1F74 MOV X20, X31
	0x036C1F78 MOV X0, X19
	0x036C1F7C MOV X1, X31
	0x036C1F80 BL 0x32BFAB4
	0x036C1F84 CBNZ X20, 0x36C1FE0
	0x036C1F88 MOV X0, X21
	0x036C1F8C LDP X20, X19, [X31 + 0x20]
	0x036C1F90 LDP X22, X21, [X31 + 0x10]
	0x036C1F94 LDR X30, [X31], #0x30
	0x036C1F98 RET
	0x036C1F9C BL 0x1C16F20
	0x036C1FA0 B 0x36C1FA8
	0x036C1FA4 B 0x36C1FA8
	0x036C1FA8 MOV X21, X0
	0x036C1FAC CMP W1, 0x1
	0x036C1FB0 B.NE 0x36C1FE8
	0x036C1FB4 MOV X0, X21
	0x036C1FB8 BL 0x3EB1AD0
	0x036C1FBC LDR X20, [X0]
	0x036C1FC0 BL 0x3EB1AE0
	0x036C1FC4 LDRB W8, [X31 + 0xC]
	0x036C1FC8 CBZ W8, 0x36C1FD8
	0x036C1FCC CBZ X19, 0x36C1FF0
	0x036C1FD0 MOV X21, X31
	0x036C1FD4 B 0x36C1F78
	0x036C1FD8 MOV X21, X31
	0x036C1FDC CBZ X20, 0x36C1F88
	0x036C1FE0 MOV X0, X20
	0x036C1FE4 BL 0x1C16F18
	0x036C1FE8 MOV X20, X31
	0x036C1FEC B 0x36C1FF8
	0x036C1FF0 BL 0x1C16F20
	0x036C1FF4 MOV X21, X0
	0x036C1FF8 LDRB W8, [X31 + 0xC]
	0x036C1FFC CBZ W8, 0x36C2014
	0x036C2000 CBNZ X19, 0x36C2008
	0x036C2004 BL 0x1C16F20
	0x036C2008 MOV X0, X19
	0x036C200C MOV X1, X31
	0x036C2010 BL 0x32BFAB4
	0x036C2014 CBNZ X20, 0x36C2020
	0x036C2018 MOV X0, X21
	0x036C201C BL 0x1D2C690
	0x036C2020 MOV X0, X20
	0x036C2024 BL 0x1C16F18
	0x036C2028 BL 0x1990590
	0x036C202C B 0x1C86BA8
	0x036C2030 SUB X31, X31, 0x40
	0x036C2034 STP X30, X23, [X31 + 0x10]
	0x036C2038 STP X22, X21, [X31 + 0x20]
	0x036C203C STP X20, X19, [X31 + 0x30]
	0x036C2040 ADRP X23, 0xD1E000
	0x036C2044 LDRB W8, [X23 + 0x9DD]
	0x036C2048 MOV X20, X3
	0x036C204C MOV W21, W2
	0x036C2050 MOV W22, W1
	0x036C2054 MOV X19, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xD20000
	012 Move W8, [X20+2561]
	013 Move X24, X7
	014 Move X26, X6
	015 Move X27, X5
	016 Move W21, W4
	017 Move W22, W3
	018 Move W23, W2
	019 Move X25, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {45}
	025 Move X0, 0xA7F000
	026 Move X0, [X0+2536]
	027 Call 0x1C17CF4
	028 Move X0, 0xA7F000
	029 Move X0, [X0+2544]
	030 Call 0x1C17CF4
	031 Move X0, 0xA7F000
	032 Move X0, [X0+2552]
	033 Call 0x1C17CF4
	034 Move X0, 0xA7E000
	035 Move X0, [X0+4024]
	036 Call 0x1C17CF4
	037 Move X0, 0xA7F000
	038 Move X0, [X0+2560]
	039 Call 0x1C17CF4
	040 Move X0, 0xA7F000
	041 Move X0, [X0+2096]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2561], W8
	045 Move X0, X19
	046 Call Socket.ThrowIfDisposedAndClosed, X0
	047 Move X1, X25
	048 Call Socket.ThrowIfBufferNull, X0, X1
	049 Move X1, X25
	050 Move W2, W23
	051 Move W3, W22
	052 Call Socket.ThrowIfBufferOutOfRange, X0, X1, X2, X3
	053 Move W8, [X19+82]
	054 Compare W8, 0
	055 JumpIfEqual {135}
	056 Move X8, 0xA7E000
	057 Move X8, [X8+4024]
	058 Move [X27], W31
	059 Move X27, 0xA7F000
	060 Move X0, [X8]
	061 Move X27, [X27+2552]
	062 Call 0x1C17F10
	063 Move W4, 4
	064 Move X1, X19
	065 Move X2, X26
	066 Move X3, X24
	067 Move X5, X31
	068 Move X20, X0
	069 Call SocketAsyncResult..ctor, X0, X1, X2, X3, X4
	070 Move X1, [X27]
	071 Move X0, X25
	072 Call 0x319EBA8, X0
	073 Compare X20, 0
	074 JumpIfEqual {150}
	075 Move [X20+80], X0
	076 Move [X20+88], X1
	077 Move [X20+96], W23
	078 Move [X20+100], W22
	079 Move [X20+104], W21
	080 Move X25, 0xA7F000
	081 Move X21, [X19+72]
	082 Move X25, [X25+2096]
	083 Move X0, X20
	084 Move X1, X31
	085 Call SocketAsyncResult.get_Handle, X0
	086 Move X8, [X25]
	087 Move X22, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X8, [X25]
	094 Move X9, [X8+184]
	095 Move X26, 0xA7F000
	096 Move X23, [X9+88]
	097 Move X26, [X26+2544]
	098 Compare X23, 0
	099 JumpIfNotEqual {122}
	100 Move W9, [X8+224]
	101 Compare W9, 0
	102 JumpIfNotEqual {106}
	103 Move X0, X8
	104 Call 0x1C17DFC
	105 Move X8, [X25]
	106 Move X9, 0xA7F000
	107 Move X8, [X8+184]
	108 Move X9, [X9+2536]
	109 Move X24, [X8]
	110 Move X0, [X9]
	111 Call 0x1C17F10
	112 Move X8, 0xA7F000
	113 Move X8, [X8+2560]
	114 Move X1, X24
	115 Move X3, X31
	116 Move X23, X0
	117 Move X2, [X8]
	118 Call IOAsyncCallback..ctor, X0, X1, X2
	119 Move X8, [X25]
	120 Move X8, [X8+184]
	121 Move [X8+88], X23
	122 Move X0, [X26]
	123 Call 0x1C17F10
	124 Move W1, 2
	125 Move X2, X23
	126 Move X3, X20
	127 Move X4, X31
	128 Move X24, X0
	129 Call IOSelectorJob..ctor, X0, X1, X2, X3
	130 Move X0, X19
	131 Move X1, X21
	132 Move X2, X22
	133 Move X3, X24
	134 Call Socket.QueueIOSelectorJob, X0, X1, X2, X3
	135 Move W8, 0x2749
	136 Move X20, X31
	137 Move [X27], W8
	138 Move X0, X20
	139 Move X20, [X31+64]
	140 Move X19, [X31+72]
	141 Move X22, [X31+48]
	142 Move X21, [X31+56]
	143 Move X24, [X31+32]
	144 Move X23, [X31+40]
	145 Move X26, [X31+16]
	146 Move X25, [X31+24]
	147 Move X30, [X31+80]
	148 Move X27, [X31+88]
	149 Return X0
	150 Call 0x1C17F20

Method: System.Void BeginSendCallback(System.Net.Sockets.SocketAsyncResult sockares, System.Int32 sent_so_far)

Disassembly:
	0x036C5F84 MOV X20, X0
	0x036C5F88 LDR X2, [X8]
	0x036C5F8C BL 0x362E274
	0x036C5F90 LDR X8, [X22]
	0x036C5F94 LDR X8, [X8 + 0xB8]
	0x036C5F98 STR X20, [X8 + 0x80]
	0x036C5F9C LDR X8, [X21]
	0x036C5FA0 LDR X0, [X25]
	0x036C5FA4 LDR X8, [X8 + 0xB8]
	0x036C5FA8 LDR X19, [X8]
	0x036C5FAC BL 0x1C16F10
	0x036C5FB0 ADRP X8, 0xA7A000
	0x036C5FB4 LDR X8, [X8 + 0xBC8]
	0x036C5FB8 MOV X1, X19
	0x036C5FBC MOV X3, X31
	0x036C5FC0 MOV X20, X0
	0x036C5FC4 LDR X2, [X8]
	0x036C5FC8 BL 0x362E274
	0x036C5FCC LDR X8, [X22]
	0x036C5FD0 LDR X8, [X8 + 0xB8]
	0x036C5FD4 STR X20, [X8 + 0x88]
	0x036C5FD8 LDR X8, [X21]
	0x036C5FDC LDR X0, [X23]
	0x036C5FE0 LDR X8, [X8 + 0xB8]
	0x036C5FE4 LDR X19, [X8]
	0x036C5FE8 BL 0x1C16F10
	0x036C5FEC ADRP X8, 0xA7A000
	0x036C5FF0 LDR X8, [X8 + 0xBD0]
	0x036C5FF4 MOV X1, X19
	0x036C5FF8 MOV X3, X31
	0x036C5FFC MOV X20, X0
	0x036C6000 LDR X2, [X8]
	0x036C6004 BL 0x3316570
	0x036C6008 LDR X8, [X22]
	0x036C600C LDR X8, [X8 + 0xB8]
	0x036C6010 STR X20, [X8 + 0x90]
	0x036C6014 LDR X8, [X21]
	0x036C6018 LDR X0, [X25]
	0x036C601C LDR X8, [X8 + 0xB8]
	0x036C6020 LDR X19, [X8]
	0x036C6024 BL 0x1C16F10
	0x036C6028 ADRP X8, 0xA79000
	0x036C602C LDR X8, [X8 + 0xBD8]
	0x036C6030 MOV X1, X19
	0x036C6034 MOV X3, X31
	0x036C6038 MOV X20, X0
	0x036C603C LDR X2, [X8]
	0x036C6040 BL 0x362E274
	0x036C6044 LDR X8, [X22]
	0x036C6048 LDR X8, [X8 + 0xB8]
	0x036C604C STR X20, [X8 + 0x98]
	0x036C6050 LDR X8, [X21]
	0x036C6054 LDR X0, [X23]
	0x036C6058 LDR X8, [X8 + 0xB8]
	0x036C605C LDR X19, [X8]
	0x036C6060 BL 0x1C16F10
	0x036C6064 ADRP X8, 0xA79000
	0x036C6068 LDR X8, [X8 + 0xBE0]
	0x036C606C MOV X1, X19
	0x036C6070 MOV X3, X31
	0x036C6074 MOV X20, X0
	0x036C6078 LDR X2, [X8]
	0x036C607C BL 0x3316570
	0x036C6080 LDR X8, [X22]
	0x036C6084 LDR X8, [X8 + 0xB8]
	0x036C6088 STR X20, [X8 + 0xA0]
	0x036C608C LDR X8, [X21]
	0x036C6090 LDR X0, [X25]
	0x036C6094 LDR X8, [X8 + 0xB8]
	0x036C6098 LDR X19, [X8]
	0x036C609C BL 0x1C16F10
	0x036C60A0 ADRP X8, 0xA79000
	0x036C60A4 LDR X8, [X8 + 0xBE8]
	0x036C60A8 MOV X1, X19
	0x036C60AC MOV X3, X31
	0x036C60B0 MOV X20, X0
	0x036C60B4 LDR X2, [X8]
	0x036C60B8 BL 0x362E274
	0x036C60BC LDR X8, [X22]
	0x036C60C0 LDR X8, [X8 + 0xB8]
	0x036C60C4 STR X20, [X8 + 0xA8]
	0x036C60C8 LDR X8, [X21]
	0x036C60CC LDR X0, [X23]
	0x036C60D0 LDR X8, [X8 + 0xB8]
	0x036C60D4 LDR X19, [X8]
	0x036C60D8 BL 0x1C16F10
	0x036C60DC ADRP X8, 0xA79000
	0x036C60E0 LDR X8, [X8 + 0xBF0]
	0x036C60E4 MOV X1, X19
	0x036C60E8 MOV X3, X31
	0x036C60EC MOV X20, X0
	0x036C60F0 LDR X2, [X8]
	0x036C60F4 BL 0x3316570
	0x036C60F8 LDR X8, [X22]
	0x036C60FC LDP X22, X21, [X31 + 0x40]
	0x036C6100 LDP X24, X23, [X31 + 0x30]
	0x036C6104 LDP X26, X25, [X31 + 0x20]
	0x036C6108 LDR X8, [X8 + 0xB8]
	0x036C610C LDP X28, X27, [X31 + 0x10]
	0x036C6110 STR X20, [X8 + 0xB0]
	0x036C6114 LDP X20, X19, [X31 + 0x50]
	0x036C6118 LDP X29, X30, [X31], #0x60
	0x036C611C RET
	0x036C6120 MOV X1, X31
	0x036C6124 B 0x33BDD8C
	0x036C6128 STP X30, X21, [X31 - 0x20]!
	0x036C612C STP X20, X19, [X31 + 0x10]
	0x036C6130 ADRP X20, 0xD1A000
	0x036C6134 ADRP X21, 0xA79000
	0x036C6138 LDRB W8, [X20 + 0xA18]
	0x036C613C LDR X21, [X21 + 0xC40]
	0x036C6140 MOV X19, X0
	0x036C6144 TBNZ X8, 0x0, 0x36C615C
	0x036C6148 ADRP X0, 0xA79000
	0x036C614C LDR X0, [X0 + 0xC40]
	0x036C6150 BL 0x1C16CF4
	0x036C6154 MOVZ W8, 0x1
	0x036C6158 STRB W8, [X20 + 0xA18]
	0x036C615C LDR X1, [X21]
	0x036C6160 MOV X0, X19
	0x036C6164 LDP X20, X19, [X31 + 0x10]
	0x036C6168 LDP X30, X21, [X31], #0x20
	0x036C616C B 0x2695E28
	0x036C6170 STP X30, X21, [X31 - 0x20]!
	0x036C6174 STP X20, X19, [X31 + 0x10]
	0x036C6178 ADRP X21, 0xD1A000
	0x036C617C ADRP X20, 0xA79000
	0x036C6180 LDRB W8, [X21 + 0xA19]
	0x036C6184 LDR X20, [X20 + 0xC48]
	0x036C6188 MOV X19, X0
	0x036C618C TBNZ X8, 0x0, 0x36C61A4
	0x036C6190 ADRP X0, 0xA79000
	0x036C6194 LDR X0, [X0 + 0xC48]
	0x036C6198 BL 0x1C16CF4
	0x036C619C MOVZ W8, 0x1
	0x036C61A0 STRB W8, [X21 + 0xA19]
	0x036C61A4 LDR X0, [X20]
	0x036C61A8 LDR W8, [X0 + 0xE0]
	0x036C61AC CBNZ W8, 0x36C61B8
	0x036C61B0 BL 0x1C16DFC
	0x036C61B4 LDR X0, [X20]
	0x036C61B8 LDR X8, [X0 + 0xB8]
	0x036C61BC MOV X0, X19
	0x036C61C0 MOV W1, W31
	0x036C61C4 LDR X8, [X8 + 0x10]
	0x036C61C8 STR X8, [X19 + 0x80]
	0x036C61CC LDP X20, X19, [X31 + 0x10]
	0x036C61D0 LDP X30, X21, [X31], #0x20
	0x036C61D4 B 0x36C61D8
	0x036C61D8 STR X30, [X31 - 0x30]!
	0x036C61DC STP X22, X21, [X31 + 0x10]
	0x036C61E0 STP X20, X19, [X31 + 0x20]
	0x036C61E4 ADRP X20, 0xD1A000
	0x036C61E8 ADRP X22, 0xA78000
	0x036C61EC ADRP X21, 0xA59000
	0x036C61F0 LDRB W8, [X20 + 0xA58]
	0x036C61F4 LDR X22, [X22 + 0xFB8]
	0x036C61F8 LDR X21, [X21 + 0x158]
	0x036C61FC MOV X19, X0
	0x036C6200 TBNZ X8, 0x0, 0x36C6224
	0x036C6204 ADRP X0, 0xA59000
	0x036C6208 LDR X0, [X0 + 0x158]
	0x036C620C BL 0x1C16CF4
	0x036C6210 ADRP X0, 0xA78000
	0x036C6214 LDR X0, [X0 + 0xFB8]
	0x036C6218 BL 0x1C16CF4
	0x036C621C MOVZ W8, 0x1
	0x036C6220 STRB W8, [X20 + 0xA58]
	0x036C6224 LDR X0, [X22]
	0x036C6228 BL 0x1C16F10
	0x036C622C MOV X1, X31
	0x036C6230 MOV X20, X0
	0x036C6234 BL 0x362E388
	0x036C6238 STR X20, [X19 + 0x28]
	0x036C623C LDR X0, [X21]
	0x036C6240 LDR W8, [X0 + 0xE0]
	0x036C6244 CBNZ W8, 0x36C624C
	0x036C6248 BL 0x1C16DFC
	0x036C624C MOV X0, X19
	0x036C6250 LDP X20, X19, [X31 + 0x20]
	0x036C6254 LDP X22, X21, [X31 + 0x10]
	0x036C6258 MOV X1, X31
	0x036C625C LDR X30, [X31], #0x30
	0x036C6260 B 0x33671B0
	0x036C6264 LDRB W0, [X0 + 0x9A]
	0x036C6268 RET
	0x036C626C AND W8, W1, 0x1
	0x036C6270 STRB W8, [X0 + 0x9A]
	0x036C6274 RET
	0x036C6278 STP X30, X21, [X31 - 0x20]!
	0x036C627C STP X20, X19, [X31 + 0x10]
	0x036C6280 ADRP X21, 0xD1A000
	0x036C6284 ADRP X20, 0xA79000
	0x036C6288 LDRB W8, [X21 + 0xA1A]
	0x036C628C LDR X20, [X20 + 0xC48]
	0x036C6290 MOV X19, X0
	0x036C6294 TBNZ X8, 0x0, 0x36C62AC
	0x036C6298 ADRP X0, 0xA79000
	0x036C629C LDR X0, [X0 + 0xC48]
	0x036C62A0 BL 0x1C16CF4
	0x036C62A4 MOVZ W8, 0x1
	0x036C62A8 STRB W8, [X21 + 0xA1A]
	0x036C62AC LDR X0, [X20]
	0x036C62B0 LDR W8, [X0 + 0xE0]
	0x036C62B4 CBNZ W8, 0x36C62C0
	0x036C62B8 BL 0x1C16DFC
	0x036C62BC LDR X0, [X20]
	0x036C62C0 LDR X8, [X0 + 0xB8]
	0x036C62C4 ADD X0, X19, 0x80
	0x036C62C8 MOV X1, X31
	0x036C62CC LDR X2, [X8 + 0x10]
	0x036C62D0 BL 0x1C24138
	0x036C62D4 LDR X8, [X20]
	0x036C62D8 LDP X20, X19, [X31 + 0x10]
	0x036C62DC LDR X8, [X8 + 0xB8]
	0x036C62E0 LDR X8, [X8 + 0x10]
	0x036C62E4 CMP X8, X0
	0x036C62E8 CSET W0, EQ
	0x036C62EC LDP X30, X21, [X31], #0x20
	0x036C62F0 RET
	0x036C62F4 STP X30, X21, [X31 - 0x20]!
	0x036C62F8 STP X20, X19, [X31 + 0x10]
	0x036C62FC ADRP X21, 0xD1A000
	0x036C6300 ADRP X20, 0xA79000
	0x036C6304 LDRB W8, [X21 + 0xA1B]
	0x036C6308 LDR X20, [X20 + 0xC48]
	0x036C630C MOV X19, X0
	0x036C6310 TBNZ X8, 0x0, 0x36C6328

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X22, 0xD1C000
	011 Move X20, 0xA7B000
	012 Move W8, [X22+2562]
	013 Move X20, [X20+2904]
	014 Move W21, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0xA7B000
	021 Move X0, [X0+2536]
	022 Call 0x1C17CF4
	023 Move X0, 0xA7B000
	024 Move X0, [X0+2544]
	025 Call 0x1C17CF4
	026 Move X0, 0xA7B000
	027 Move X0, [X0+2840]
	028 Call 0x1C17CF4
	029 Move X0, 0xA5A000
	030 Move X0, [X0+720]
	031 Call 0x1C17CF4
	032 Move X0, 0xA38000
	033 Move X0, [X0+1928]
	034 Call 0x1C17CF4
	035 Move X0, 0xA7B000
	036 Move X0, [X0+2912]
	037 Call 0x1C17CF4
	038 Move X0, 0xA7B000
	039 Move X0, [X0+2904]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+2562], W8
	043 Move X0, [X20]
	044 Move [X31+48], X31
	045 Move [X31+56], X31
	046 Move [X31+64], X31
	047 Move [X31+32], X31
	048 Move [X31+40], X31
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X20, X0
	052 Call <>c__DisplayClass298_0..ctor, X0
	053 Compare X20, 0
	054 JumpIfEqual {233}
	055 Move [X20+16], W21
	056 Compare X19, 0
	057 JumpIfEqual {184}
	058 Move X8, 0xA59000
	059 Move W23, [X19+92]
	060 Move W21, [X19+96]
	061 Move X8, [X8+720]
	062 Move W22, [X19+100]
	063 Move X24, [X8]
	064 And W8, W23, 0x7FFFFFFF
	065 Subtract W8, W8, W21
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X31
	068 Call ThrowHelper.ThrowArgumentOutOfRangeException
	069 Move X0, [X24+32]
	070 Move X24, [X19+80]
	071 Move W25, [X19+88]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move X8, 0xA7A000
	079 Move X8, [X8+2840]
	080 And W9, W23, 0x80000000
	081 Add W10, W25, W21
	082 Or W9, W9, W22
	083 Move X1, [X8]
	084 NotImplemented "Instruction BFM not yet implemented."
	085 Move [X31+32], X24
	086 Move [X31+40], X10
	087 Add X8, X31, 8
	088 Add X0, X31, 32
	089 Call 0x319F2B4, X0
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 Move X8, [X31+24]
	092 Move [X31+3], V0
	093 Move [X31+64], X8
	094 Move X8, [X19+48]
	095 Compare X8, 0
	096 JumpIfEqual {185}
	097 Move X9, 0xA37000
	098 Move X9, [X9+1928]
	099 Move X24, [X8+48]
	100 Move X23, [X31+48]
	101 Move W22, [X19+100]
	102 Move W21, [X19+104]
	103 Move X0, [X9]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Add X4, X19, 164
	109 Move X0, X24
	110 Move X1, X23
	111 Move W2, W22
	112 Move W3, W21
	113 Move W5, W31
	114 Call Socket.Send_internal, X0, X1, X2, X3, X4, X5
	115 Move W21, W0
	116 Move X22, X31
	117 Add X0, X31, 48
	118 Move X1, X31
	119 Call MemoryHandle.Dispose, X0
	120 Compare X22, 0
	121 JumpIfNotEqual {186}
	122 Move W8, [X19+164]
	123 Move W1, [X20+16]
	124 Compare W8, 0
	125 JumpIfNotEqual {171}
	126 Add W1, W1, W21
	127 Move [X20+16], W1
	128 Move W8, [X19+96]
	129 Move W10, [X19+100]
	130 Move X9, [X19+48]
	131 Add W11, W8, W21
	132 Subtract W8, W10, W21
	133 Move [X19+96], W11
	134 Move [X19+100], W8
	135 Compare X9, 0
	136 JumpIfEqual {233}
	137 Move W9, [X9+84]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X19
	141 Move X1, X31
	142 Call SocketAsyncResult.get_Handle, X0
	143 Move X8, 0xA7A000
	144 Move X8, [X8+2536]
	145 Move X21, X0
	146 Move X8, [X8]
	147 Move X0, X8
	148 Call 0x1C17F10
	149 Move X8, 0xA7A000
	150 Move X8, [X8+2912]
	151 Move X1, X20
	152 Move X3, X31
	153 Move X22, X0
	154 Move X2, [X8]
	155 Call IOAsyncCallback..ctor, X0, X1, X2
	156 Move X8, 0xA7A000
	157 Move X8, [X8+2544]
	158 Move X0, [X8]
	159 Call 0x1C17F10
	160 Move W1, 2
	161 Move X2, X22
	162 Move X3, X19
	163 Move X4, X31
	164 Move X20, X0
	165 Call IOSelectorJob..ctor, X0, X1, X2, X3
	166 Move X0, X21
	167 Move X1, X20
	168 Move X2, X31
	169 Call IOSelector.Add, X0, X1
	170 Move [X19+160], W1
	171 Move X0, X19
	172 Move X2, X31
	173 Call SocketAsyncResult.Complete, X0, X1
	174 Move X20, [X31+128]
	175 Move X19, [X31+136]
	176 Move X22, [X31+112]
	177 Move X21, [X31+120]
	178 Move X24, [X31+96]
	179 Move X23, [X31+104]
	180 Move X30, [X31+80]
	181 Move X25, [X31+88]
	182 Add X31, X31, 144
	183 Return 
	184 Call 0x1C17F20
	185 Call 0x1C17F20
	186 Move X0, X22
	187 Call 0x1C17F18
	188 Move X22, X1
	189 Move X21, X0
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, X21
	192 Call 0x3EB2AD0
	193 Move X8, [X0]
	194 Move [X31], X8
	195 Call 0x3EB2AE0
	196 Move X22, [X31]
	197 Move W21, W31
	198 Move [X31], X31
	199 Add X0, X31, 48
	200 Move X1, X31
	201 Call MemoryHandle.Dispose, X0
	202 Move X8, [X31]
	203 Compare X8, 0
	204 JumpIfEqual {211}
	205 Move X0, [X31]
	206 Call 0x1C17F18
	207 Move X22, X1
	208 Move X21, X0
	209 Move X22, X1
	210 Move X21, X0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X0, X21
	213 Call 0x3EB2AD0
	214 Move X20, X0
	215 Move X0, 0xA2E000
	216 Move X0, [X0+2000]
	217 Call 0x1C17D08
	218 Move X8, [X20]
	219 Move X1, [X8]
	220 Call 0x1C18270
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {234}
	225 Move X20, [X20]
	226 Call 0x3EB2AE0
	227 Compare X19, 0
	228 JumpIfEqual {233}
	229 Move X0, X19
	230 Move X1, X20
	231 Move X2, X31
	232 Call SocketAsyncResult.Complete, X0, X1
	233 Call 0x1C17F20
	234 Move W0, 8
	235 Call 0x3EB2AF0
	236 Move X8, [X20]
	237 Move [X0], X8
	238 Move X1, 0x7EF000
	239 Add X1, X1, 3672
	240 Move X2, X31
	241 Call 0x3EB2B00
	242 Move X21, X0
	243 Call 0x3EB2AE0
	244 Move X0, X21
	245 Call 0x1D2D690
	246 Call 0x1991590

Method: System.Int32 EndSend(System.IAsyncResult asyncResult, out System.Net.Sockets.SocketError errorCode)

Disassembly:
	0x036C2058 TBNZ X8, 0x0, 0x36C2070
	0x036C205C ADRP X0, 0xA3A000
	0x036C2060 LDR X0, [X0 + 0x788]
	0x036C2064 BL 0x1C16CF4
	0x036C2068 MOVZ W8, 0x1
	0x036C206C STRB W8, [X23 + 0x9DD]
	0x036C2070 STRB W31, [X31 + 0xC]
	0x036C2074 CBZ X19, 0x36C20F0
	0x036C2078 ADD X1, X31, 0xC
	0x036C207C MOV X0, X19
	0x036C2080 MOV X2, X31
	0x036C2084 BL 0x32BF948
	0x036C2088 ADRP X8, 0xA3A000
	0x036C208C LDR X8, [X8 + 0x788]
	0x036C2090 LDR X23, [X19 + 0x10]
	0x036C2094 LDR X0, [X8]
	0x036C2098 LDR W8, [X0 + 0xE0]
	0x036C209C CBNZ W8, 0x36C20A4
	0x036C20A0 BL 0x1C16DFC
	0x036C20A4 MOV X0, X23
	0x036C20A8 MOV W1, W22
	0x036C20AC MOV W2, W21
	0x036C20B0 MOV X3, X20
	0x036C20B4 BL 0x1C86298
	0x036C20B8 LDRB W8, [X31 + 0xC]
	0x036C20BC MOV W21, W0
	0x036C20C0 CBZ W8, 0x36C20D8
	0x036C20C4 MOV X20, X31
	0x036C20C8 MOV X0, X19
	0x036C20CC MOV X1, X31
	0x036C20D0 BL 0x32BFAB4
	0x036C20D4 CBNZ X20, 0x36C2134
	0x036C20D8 AND W0, W21, 0x1
	0x036C20DC LDP X20, X19, [X31 + 0x30]
	0x036C20E0 LDP X22, X21, [X31 + 0x20]
	0x036C20E4 LDP X30, X23, [X31 + 0x10]
	0x036C20E8 ADD X31, X31, 0x40
	0x036C20EC RET
	0x036C20F0 BL 0x1C16F20
	0x036C20F4 B 0x36C20FC
	0x036C20F8 B 0x36C20FC
	0x036C20FC MOV X21, X0
	0x036C2100 CMP W1, 0x1
	0x036C2104 B.NE 0x36C213C
	0x036C2108 MOV X0, X21
	0x036C210C BL 0x3EB1AD0
	0x036C2110 LDR X20, [X0]
	0x036C2114 BL 0x3EB1AE0
	0x036C2118 LDRB W8, [X31 + 0xC]
	0x036C211C CBZ W8, 0x36C212C
	0x036C2120 CBZ X19, 0x36C2144
	0x036C2124 MOV W21, W31
	0x036C2128 B 0x36C20C8
	0x036C212C MOV W21, W31
	0x036C2130 CBZ X20, 0x36C20D8
	0x036C2134 MOV X0, X20
	0x036C2138 BL 0x1C16F18
	0x036C213C MOV X20, X31
	0x036C2140 B 0x36C214C
	0x036C2144 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD1F000
	009 Move X22, 0xA7E000
	010 Move X23, 0xA5D000
	011 Move W8, [X24+2563]
	012 Move X22, [X22+2568]
	013 Move X23, [X23+3536]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA5D000
	022 Move X0, [X0+3536]
	023 Call 0x1C17CF4
	024 Move X0, 0xA7E000
	025 Move X0, [X0+2568]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2563], W8
	029 Move X0, X19
	030 Call Socket.ThrowIfDisposedAndClosed, X0
	031 Move X2, [X22]
	032 Move X3, [X23]
	033 Move X1, X21
	034 Call Socket.ValidateEndIAsyncResult, X0, X1, X2, X3
	035 Compare X0, 0
	036 JumpIfEqual {74}
	037 Move W8, [X0+41]
	038 Move X21, X0
	039 Compare W8, 0
	040 JumpIfNotEqual {50}
	041 Move X0, X21
	042 Move X1, X31
	043 Call IOAsyncResult.get_AsyncWaitHandle, X0
	044 Compare X0, 0
	045 JumpIfEqual {74}
	046 Move X8, [X0]
	047 Move X9, [X8+472]
	048 Move X1, [X8+480]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, X21
	051 Move X1, X31
	052 Call SocketAsyncResult.get_ErrorCode, X0
	053 Move TEMP, 0x2732
	054 Not TEMP
	055 Move W8, TEMP
	056 Add W8, W0, W8
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X20], W0
	059 Compare W0, 0
	060 JumpIfNotEqual {64}
	061 Move X0, X21
	062 Move X1, X31
	063 Call SocketAsyncResult.CheckIfThrowDelayedException, X0
	064 Move [X19+82], W31
	065 Move W0, [X21+160]
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Int32 Send_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Net.Sockets.Socket/WSABUF* bufarray, System.Int32 count, System.Net.Sockets.SocketFlags flags, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C5B7C BL 0x1C16CF4
	0x036C5B80 ADRP X0, 0xA7A000
	0x036C5B84 LDR X0, [X0 + 0xBF0]
	0x036C5B88 BL 0x1C16CF4
	0x036C5B8C ADRP X0, 0xA7A000
	0x036C5B90 LDR X0, [X0 + 0xBF8]
	0x036C5B94 BL 0x1C16CF4
	0x036C5B98 ADRP X0, 0xA7A000
	0x036C5B9C LDR X0, [X0 + 0xC00]
	0x036C5BA0 BL 0x1C16CF4
	0x036C5BA4 ADRP X0, 0xA7A000
	0x036C5BA8 LDR X0, [X0 + 0xC08]
	0x036C5BAC BL 0x1C16CF4
	0x036C5BB0 ADRP X0, 0xA7A000
	0x036C5BB4 LDR X0, [X0 + 0xC10]
	0x036C5BB8 BL 0x1C16CF4
	0x036C5BBC ADRP X0, 0xA7A000
	0x036C5BC0 LDR X0, [X0 + 0xC18]
	0x036C5BC4 BL 0x1C16CF4
	0x036C5BC8 ADRP X0, 0xA7A000
	0x036C5BCC LDR X0, [X0 + 0xC20]
	0x036C5BD0 BL 0x1C16CF4
	0x036C5BD4 ADRP X0, 0xA7A000
	0x036C5BD8 LDR X0, [X0 + 0xC28]
	0x036C5BDC BL 0x1C16CF4
	0x036C5BE0 ADRP X0, 0xA7A000
	0x036C5BE4 LDR X0, [X0 + 0xC30]
	0x036C5BE8 BL 0x1C16CF4
	0x036C5BEC ADRP X0, 0xA7A000
	0x036C5BF0 LDR X0, [X0 + 0xC38]
	0x036C5BF4 BL 0x1C16CF4
	0x036C5BF8 ADRP X0, 0xA7A000
	0x036C5BFC LDR X0, [X0 + 0x830]
	0x036C5C00 BL 0x1C16CF4
	0x036C5C04 MOVZ W8, 0x1
	0x036C5C08 STRB W8, [X19 + 0xA15]
	0x036C5C0C ADRP X24, 0xA7A000
	0x036C5C10 ADRP X20, 0xA7A000
	0x036C5C14 LDR X24, [X24 + 0xB90]
	0x036C5C18 LDR X20, [X20 + 0xBB0]
	0x036C5C1C LDR X0, [X21]
	0x036C5C20 ADRP X22, 0xA37000
	0x036C5C24 ADRP X27, 0xA7A000
	0x036C5C28 ADRP X26, 0xA7A000
	0x036C5C2C ADRP X29, 0xA7A000
	0x036C5C30 ADRP X28, 0xA7A000
	0x036C5C34 LDR X22, [X22 + 0x788]
	0x036C5C38 LDR X27, [X27 + 0xBF8]
	0x036C5C3C LDR X26, [X26 + 0xC00]
	0x036C5C40 LDR W8, [X0 + 0xE0]
	0x036C5C44 LDR X29, [X29 + 0xBA8]
	0x036C5C48 LDR X28, [X28 + 0xBA0]
	0x036C5C4C CBNZ W8, 0x36C5C58
	0x036C5C50 BL 0x1C16DFC
	0x036C5C54 LDR X0, [X21]
	0x036C5C58 ADRP X23, 0xA56000
	0x036C5C5C ADRP X25, 0xA7A000
	0x036C5C60 LDR X23, [X23 + 0x720]
	0x036C5C64 LDR X25, [X25 + 0x9E8]
	0x036C5C68 LDR X8, [X0 + 0xB8]
	0x036C5C6C LDR X0, [X24]
	0x036C5C70 LDR X19, [X8]
	0x036C5C74 BL 0x1C16F10
	0x036C5C78 LDR X2, [X20]
	0x036C5C7C MOV X1, X19
	0x036C5C80 MOV X3, X31
	0x036C5C84 MOV X20, X0
	0x036C5C88 BL 0x2D0EF74
	0x036C5C8C LDR X8, [X22]
	0x036C5C90 LDR X8, [X8 + 0xB8]
	0x036C5C94 STR X20, [X8]
	0x036C5C98 LDR X8, [X21]
	0x036C5C9C LDR X0, [X24]
	0x036C5CA0 LDR X8, [X8 + 0xB8]
	0x036C5CA4 LDR X19, [X8]
	0x036C5CA8 BL 0x1C16F10
	0x036C5CAC LDR X2, [X27]
	0x036C5CB0 MOV X1, X19
	0x036C5CB4 MOV X3, X31
	0x036C5CB8 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD1C000
	010 Move W8, [X25+2564]
	011 Move W23, W5
	012 Move X20, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X24, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA38000
	022 Move X0, [X0+1928]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2564], W8
	026 Compare X19, 0
	027 JumpIfEqual {60}
	028 Move X0, X19
	029 Move X1, X31
	030 Call SafeSocketHandle.RegisterForBlockingSyscall, X0
	031 Move X8, 0xA38000
	032 Move X8, [X8+1928]
	033 Move X25, [X19+16]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 And W5, W23, 1
	040 Move X0, X25
	041 Move X1, X24
	042 Move W2, W22
	043 Move W3, W21
	044 Move X4, X20
	045 Call 0x1C87C80
	046 Move W20, W0
	047 Move X0, X19
	048 Move X1, X31
	049 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	050 Move W0, W20
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X30, [X31+64]
	058 Move X25, [X31+72]
	059 Return X0
	060 Call 0x1C17F20
	061 Move X20, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X20
	064 Call 0x3EB2AD0
	065 Move X21, [X0]
	066 Call 0x3EB2AE0
	067 Compare X19, 0
	068 JumpIfEqual {76}
	069 Move X0, X19
	070 Move X1, X31
	071 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	072 Compare X21, 0
	073 JumpIfNotEqual {77}
	074 Move W20, W31
	075 Move X21, X31
	076 Call 0x1C17F20
	077 Move X0, X21
	078 Call 0x1C17F18
	079 Move X20, X0
	080 Compare X19, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17F20
	083 Move X0, X19
	084 Move X1, X31
	085 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	086 Compare X21, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X20
	089 Call 0x1D2D690
	090 Move X0, X21
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.Int32 Send_array_icall(System.IntPtr sock, System.Net.Sockets.Socket/WSABUF* bufarray, System.Int32 count, System.Net.Sockets.SocketFlags flags, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C6314 ADRP X0, 0xA79000
	0x036C6318 LDR X0, [X0 + 0xC48]

ISIL:
	001 And W5, W5, 1
	002 Call 0x1C87C80
	003 Return X0

Method: System.Int32 Send_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Byte* buffer, System.Int32 count, System.Net.Sockets.SocketFlags flags, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C5A3C BL 0x1C16DFC
	0x036C5A40 BL 0x36BF15C
	0x036C5A44 LDR X8, [X19]
	0x036C5A48 MOV W19, W0
	0x036C5A4C LDR W9, [X8 + 0xE0]
	0x036C5A50 CBNZ W9, 0x36C5A5C
	0x036C5A54 MOV X0, X8
	0x036C5A58 BL 0x1C16DFC
	0x036C5A5C BL 0x36BF1C0
	0x036C5A60 TBZ X0, 0x0, 0x36C5A74
	0x036C5A64 ANDS W31, W19, 0x1
	0x036C5A68 MOVZ W8, 0x2
	0x036C5A6C CSEL W0, W31, W8, NE
	0x036C5A70 B 0x36C5A78
	0x036C5A74 AND W0, W19, 0x1
	0x036C5A78 LDP X20, X19, [X31 + 0x10]
	0x036C5A7C LDR X30, [X31], #0x20
	0x036C5A80 RET
	0x036C5A84 B 0x1C4CAE4
	0x036C5A88 STP X29, X30, [X31 - 0x60]!
	0x036C5A8C STP X28, X27, [X31 + 0x10]
	0x036C5A90 STP X26, X25, [X31 + 0x20]
	0x036C5A94 STP X24, X23, [X31 + 0x30]
	0x036C5A98 STP X22, X21, [X31 + 0x40]
	0x036C5A9C STP X20, X19, [X31 + 0x50]
	0x036C5AA0 ADRP X19, 0xD1B000
	0x036C5AA4 ADRP X21, 0xA7A000
	0x036C5AA8 LDRB W8, [X19 + 0xA15]
	0x036C5AAC LDR X21, [X21 + 0x830]
	0x036C5AB0 TBNZ X8, 0x0, 0x36C5C0C
	0x036C5AB4 ADRP X0, 0xA56000
	0x036C5AB8 LDR X0, [X0 + 0x720]
	0x036C5ABC BL 0x1C16CF4
	0x036C5AC0 ADRP X0, 0xA7A000
	0x036C5AC4 LDR X0, [X0 + 0xB90]
	0x036C5AC8 BL 0x1C16CF4
	0x036C5ACC ADRP X0, 0xA7A000
	0x036C5AD0 LDR X0, [X0 + 0x9E8]
	0x036C5AD4 BL 0x1C16CF4
	0x036C5AD8 ADRP X0, 0xA7A000
	0x036C5ADC LDR X0, [X0 + 0xB98]
	0x036C5AE0 BL 0x1C16CF4
	0x036C5AE4 ADRP X0, 0xA37000
	0x036C5AE8 LDR X0, [X0 + 0x788]
	0x036C5AEC BL 0x1C16CF4
	0x036C5AF0 ADRP X0, 0xA7A000
	0x036C5AF4 LDR X0, [X0 + 0xBA0]
	0x036C5AF8 BL 0x1C16CF4
	0x036C5AFC ADRP X0, 0xA7A000
	0x036C5B00 LDR X0, [X0 + 0xBA8]
	0x036C5B04 BL 0x1C16CF4
	0x036C5B08 ADRP X0, 0xA61000
	0x036C5B0C LDR X0, [X0 + 0xCD0]
	0x036C5B10 BL 0x1C16CF4
	0x036C5B14 ADRP X0, 0xA2F000
	0x036C5B18 LDR X0, [X0 + 0x7B8]
	0x036C5B1C BL 0x1C16CF4
	0x036C5B20 ADRP X0, 0xA7A000
	0x036C5B24 LDR X0, [X0 + 0xBB0]
	0x036C5B28 BL 0x1C16CF4
	0x036C5B2C ADRP X0, 0xA7A000
	0x036C5B30 LDR X0, [X0 + 0xBB8]
	0x036C5B34 BL 0x1C16CF4
	0x036C5B38 ADRP X0, 0xA7A000
	0x036C5B3C LDR X0, [X0 + 0xBC0]
	0x036C5B40 BL 0x1C16CF4
	0x036C5B44 ADRP X0, 0xA7A000
	0x036C5B48 LDR X0, [X0 + 0xBC8]
	0x036C5B4C BL 0x1C16CF4
	0x036C5B50 ADRP X0, 0xA7A000
	0x036C5B54 LDR X0, [X0 + 0xBD0]
	0x036C5B58 BL 0x1C16CF4
	0x036C5B5C ADRP X0, 0xA7A000
	0x036C5B60 LDR X0, [X0 + 0xBD8]
	0x036C5B64 BL 0x1C16CF4
	0x036C5B68 ADRP X0, 0xA7A000
	0x036C5B6C LDR X0, [X0 + 0xBE0]
	0x036C5B70 BL 0x1C16CF4
	0x036C5B74 ADRP X0, 0xA7A000
	0x036C5B78 LDR X0, [X0 + 0xBE8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD1C000
	010 Move W8, [X25+2565]
	011 Move W23, W5
	012 Move X20, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X24, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA38000
	022 Move X0, [X0+1928]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2565], W8
	026 Compare X19, 0
	027 JumpIfEqual {60}
	028 Move X0, X19
	029 Move X1, X31
	030 Call SafeSocketHandle.RegisterForBlockingSyscall, X0
	031 Move X8, 0xA38000
	032 Move X8, [X8+1928]
	033 Move X25, [X19+16]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 And W5, W23, 1
	040 Move X0, X25
	041 Move X1, X24
	042 Move W2, W22
	043 Move W3, W21
	044 Move X4, X20
	045 Call 0x1C87D30
	046 Move W20, W0
	047 Move X0, X19
	048 Move X1, X31
	049 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	050 Move W0, W20
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X30, [X31+64]
	058 Move X25, [X31+72]
	059 Return X0
	060 Call 0x1C17F20
	061 Move X20, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X20
	064 Call 0x3EB2AD0
	065 Move X21, [X0]
	066 Call 0x3EB2AE0
	067 Compare X19, 0
	068 JumpIfEqual {76}
	069 Move X0, X19
	070 Move X1, X31
	071 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	072 Compare X21, 0
	073 JumpIfNotEqual {77}
	074 Move W20, W31
	075 Move X21, X31
	076 Call 0x1C17F20
	077 Move X0, X21
	078 Call 0x1C17F18
	079 Move X20, X0
	080 Compare X19, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17F20
	083 Move X0, X19
	084 Move X1, X31
	085 Call SafeSocketHandle.UnRegisterForBlockingSyscall, X0
	086 Compare X21, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X20
	089 Call 0x1D2D690
	090 Move X0, X21
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.Int32 Send_icall(System.IntPtr sock, System.Byte* buffer, System.Int32 count, System.Net.Sockets.SocketFlags flags, out System.Int32 error, System.Boolean blocking)

Disassembly:
	0x036C631C BL 0x1C16CF4
	0x036C6320 MOVZ W8, 0x1

ISIL:
	001 And W5, W5, 1
	002 Call 0x1C87D30
	003 Return X0

Method: System.Int32 EndSendTo(System.IAsyncResult asyncResult)

Disassembly:
	0x036C6324 STRB W8, [X21 + 0xA1B]
	0x036C6328 LDRH W8, [X19 + 0x98]
	0x036C632C ADD W8, W8, 0x1
	0x036C6330 STRH W8, [X19 + 0x98]
	0x036C6334 LDR X0, [X20]
	0x036C6338 LDR W8, [X0 + 0xE0]
	0x036C633C CBNZ W8, 0x36C6348
	0x036C6340 BL 0x1C16DFC
	0x036C6344 LDR X0, [X20]
	0x036C6348 LDR X8, [X0 + 0xB8]
	0x036C634C LDR X20, [X8 + 0x10]
	0x036C6350 BL 0x1C16D44
	0x036C6354 STR X20, [X19 + 0x80]
	0x036C6358 LDP X20, X19, [X31 + 0x10]
	0x036C635C LDP X30, X21, [X31], #0x20
	0x036C6360 RET
	0x036C6364 STP X30, X27, [X31 - 0x50]!
	0x036C6368 STP X26, X25, [X31 + 0x10]
	0x036C636C STP X24, X23, [X31 + 0x20]
	0x036C6370 STP X22, X21, [X31 + 0x30]
	0x036C6374 STP X20, X19, [X31 + 0x40]
	0x036C6378 ADRP X20, 0xD1A000
	0x036C637C LDRB W8, [X20 + 0xA1C]
	0x036C6380 MOV X19, X0
	0x036C6384 TBNZ X8, 0x0, 0x36C63D8
	0x036C6388 ADRP X0, 0xA79000
	0x036C638C LDR X0, [X0 + 0xC48]
	0x036C6390 BL 0x1C16CF4
	0x036C6394 ADRP X0, 0xA5F000
	0x036C6398 LDR X0, [X0 + 0x948]
	0x036C639C BL 0x1C16CF4
	0x036C63A0 ADRP X0, 0xA55000
	0x036C63A4 LDR X0, [X0 + 0x580]
	0x036C63A8 BL 0x1C16CF4
	0x036C63AC ADRP X0, 0xA79000
	0x036C63B0 LDR X0, [X0 + 0xC50]
	0x036C63B4 BL 0x1C16CF4
	0x036C63B8 ADRP X0, 0xA79000
	0x036C63BC LDR X0, [X0 + 0xC58]
	0x036C63C0 BL 0x1C16CF4
	0x036C63C4 ADRP X0, 0xA79000
	0x036C63C8 LDR X0, [X0 + 0xC60]
	0x036C63CC BL 0x1C16CF4
	0x036C63D0 MOVZ W8, 0x1
	0x036C63D4 STRB W8, [X20 + 0xA1C]
	0x036C63D8 MOV X21, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD1B000
	008 Move X21, 0xA7A000
	009 Move X22, 0xA79000
	010 Move W8, [X23+2566]
	011 Move X21, [X21+2920]
	012 Move X22, [X22+536]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA79000
	020 Move X0, [X0+536]
	021 Call 0x1C17CF4
	022 Move X0, 0xA7A000
	023 Move X0, [X0+2920]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2566], W8
	027 Move X0, X20
	028 Call Socket.ThrowIfDisposedAndClosed, X0
	029 Move X2, [X21]
	030 Move X3, [X22]
	031 Move X1, X19
	032 Call Socket.ValidateEndIAsyncResult, X0, X1, X2, X3
	033 Compare X0, 0
	034 JumpIfEqual {59}
	035 Move W8, [X0+41]
	036 Move X19, X0
	037 Compare W8, 0
	038 JumpIfNotEqual {48}
	039 Move X0, X19
	040 Move X1, X31
	041 Call IOAsyncResult.get_AsyncWaitHandle, X0
	042 Compare X0, 0
	043 JumpIfEqual {59}
	044 Move X8, [X0]
	045 Move X9, [X8+472]
	046 Move X1, [X8+480]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X0, X19
	049 Move X1, X31
	050 Call SocketAsyncResult.CheckIfThrowDelayedException, X0
	051 Move W0, [X19+160]
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return X0
	059 Call 0x1C17F20

Method: System.Object GetSocketOption(System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName)

Disassembly:
	0x036BB7A0 B.NE 0x36BB7B0
	0x036BB7A4 BL 0x3EB1AD0
	0x036BB7A8 BL 0x3EB1AE0
	0x036BB7AC B 0x36BB67C
	0x036BB7B0 BL 0x1D2C690
	0x036BB7B4 STR X30, [X31 - 0x20]!
	0x036BB7B8 STP X20, X19, [X31 + 0x10]
	0x036BB7BC ADD X5, X31, 0xC
	0x036BB7C0 STR W31, [X31 + 0xC]
	0x036BB7C4 BL 0x36C0450
	0x036BB7C8 LDR W19, [X31 + 0xC]
	0x036BB7CC CBNZ W19, 0x36BB7DC
	0x036BB7D0 LDP X20, X19, [X31 + 0x10]
	0x036BB7D4 LDR X30, [X31], #0x20
	0x036BB7D8 RET
	0x036BB7DC ADRP X0, 0xA76000
	0x036BB7E0 LDR X0, [X0 + 0xD8]
	0x036BB7E4 BL 0x1C16D08
	0x036BB7E8 BL 0x1C16F10
	0x036BB7EC MOV W1, W19
	0x036BB7F0 MOV X2, X31
	0x036BB7F4 MOV X20, X0
	0x036BB7F8 BL 0x36CA10C
	0x036BB7FC ADRP X0, 0xA84000
	0x036BB800 LDR X0, [X0 + 0x798]
	0x036BB804 BL 0x1C16D08
	0x036BB808 MOV X1, X0
	0x036BB80C MOV X0, X20
	0x036BB810 BL 0x1C16DEC
	0x036BB814 STR X30, [X31 - 0x40]!
	0x036BB818 STP X24, X23, [X31 + 0x10]
	0x036BB81C STP X22, X21, [X31 + 0x20]
	0x036BB820 STP X20, X19, [X31 + 0x30]
	0x036BB824 ADRP X24, 0xD25000
	0x036BB828 ADRP X22, 0xA84000
	0x036BB82C ADRP X23, 0xA38000
	0x036BB830 LDRB W8, [X24 + 0x9BC]
	0x036BB834 LDR X22, [X22 + 0x770]
	0x036BB838 LDR X23, [X23 + 0x6C0]
	0x036BB83C MOV X19, X2
	0x036BB840 MOV X20, X1
	0x036BB844 MOV X21, X0
	0x036BB848 TBNZ X8, 0x0, 0x36BB86C
	0x036BB84C ADRP X0, 0xA84000
	0x036BB850 LDR X0, [X0 + 0x770]
	0x036BB854 BL 0x1C16CF4
	0x036BB858 ADRP X0, 0xA38000
	0x036BB85C LDR X0, [X0 + 0x6C0]
	0x036BB860 BL 0x1C16CF4
	0x036BB864 MOVZ W8, 0x1
	0x036BB868 STRB W8, [X24 + 0x9BC]
	0x036BB86C MOV X0, X21
	0x036BB870 MOV X1, X31
	0x036BB874 STR W31, [X31 + 0xC]
	0x036BB878 BL 0x33BE520
	0x036BB87C LDR X8, [X23]
	0x036BB880 LDR X23, [X22]
	0x036BB884 MOV X22, X0
	0x036BB888 LDR W9, [X8 + 0xE0]
	0x036BB88C CBNZ W9, 0x36BB898
	0x036BB890 MOV X0, X8
	0x036BB894 BL 0x1C16DFC
	0x036BB898 MOV X0, X23
	0x036BB89C MOV X1, X31
	0x036BB8A0 BL 0x338C698
	0x036BB8A4 MOV X1, X0
	0x036BB8A8 MOV X0, X22
	0x036BB8AC MOV X2, X31
	0x036BB8B0 BL 0x3395F0C
	0x036BB8B4 TBZ X0, 0x0, 0x36BB8D0
	0x036BB8B8 MOV X0, X21
	0x036BB8BC MOV X1, X20
	0x036BB8C0 MOV X2, X19
	0x036BB8C4 MOV X3, X31
	0x036BB8C8 BL 0x32F2000
	0x036BB8CC B 0x36BB914
	0x036BB8D0 LDRB W22, [X21 + 0x38]
	0x036BB8D4 BL 0x1C16D44
	0x036BB8D8 CBNZ W22, 0x36BB928
	0x036BB8DC LDR X8, [X21]
	0x036BB8E0 MOV X0, X21
	0x036BB8E4 LDP X9, X1, [X8 + 0x1D8]
	0x036BB8E8 BLR X9
	0x036BB8EC TBZ X0, 0x0, 0x36BB98C
	0x036BB8F0 LDR X0, [X21 + 0x28]
	0x036BB8F4 CBZ X0, 0x36BB9D4
	0x036BB8F8 ADD X4, X31, 0xC
	0x036BB8FC MOV X1, X20
	0x036BB900 MOV X2, X19
	0x036BB904 MOV W3, W31
	0x036BB908 BL 0x36BBA6C
	0x036BB90C LDR W19, [X31 + 0xC]
	0x036BB910 CBNZ W19, 0x36BB9D8
	0x036BB914 LDP X20, X19, [X31 + 0x30]
	0x036BB918 LDP X22, X21, [X31 + 0x20]
	0x036BB91C LDP X24, X23, [X31 + 0x10]
	0x036BB920 LDR X30, [X31], #0x40
	0x036BB924 RET
	0x036BB928 MOV X0, X21
	0x036BB92C MOV X1, X31
	0x036BB930 BL 0x33BE520
	0x036BB934 MOV X19, X0
	0x036BB938 BL 0x19903C0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0xD26000
	009 Move X22, 0xA42000
	010 Move W8, [X23+2567]
	011 Move X22, [X22+1928]
	012 Move W19, W2
	013 Move W20, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xA39000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xA85000
	023 Move X0, [X0+1784]
	024 Call 0x1C17CF4
	025 Move X0, 0xA85000
	026 Move X0, [X0+1792]
	027 Call 0x1C17CF4
	028 Move X0, 0xA42000
	029 Move X0, [X0+1928]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+2567], W8
	033 Move X0, X21
	034 Move [X31+28], W31
	035 Move [X31+16], X31
	036 Call Socket.ThrowIfDisposedAndClosed, X0
	037 Move X0, [X22]
	038 Move X21, [X21+48]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Add X3, X31, 16
	044 Add X4, X31, 28
	045 Move X0, X21
	046 Move W1, W20
	047 Move W2, W19
	048 Call Socket.GetSocketOption_obj_internal, X0, X1, X2, X3, X4
	049 Move W20, [X31+28]
	050 Compare W20, 0
	051 JumpIfNotEqual {96}
	052 Subtract W8, W19, 12
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X31+16]
	055 Compare X0, 0
	056 JumpIfEqual {74}
	057 Move X9, 0xA85000
	058 Move X9, [X9+1792]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X31+16]
	061 Compare X0, 0
	062 JumpIfEqual {74}
	063 Move X9, 0xA85000
	064 Move X9, [X9+1784]
	065 Move X8, [X0]
	066 Move X1, [X9]
	067 Move W10, [X8+304]
	068 Move W9, [X1+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X8+200]
	071 Add X8, X8, X9
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X30, [X31+32]
	079 Move X23, [X31+40]
	080 Add X31, X31, 80
	081 Return X0
	082 Move X0, [X31+16]
	083 Compare X0, 0
	084 JumpIfEqual {74}
	085 Move X19, 0xA39000
	086 Move X19, [X19+1880]
	087 Move X9, [X0]
	088 Move X8, [X19]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Call 0x1C17E08
	091 Move W8, [X0]
	092 Move X0, [X19]
	093 Add X1, X31, 12
	094 Move [X31+12], W8
	095 Call 0x1C17E04
	096 Move X0, 0xA77000
	097 Move X0, [X0+216]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move W1, W20
	101 Move X2, X31
	102 Move X19, X0
	103 Call SocketException..ctor, X0, X1
	104 Move X0, 0xA85000
	105 Move X0, [X0+1800]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Call 0x1C17DEC
	110 Call 0x1C181E0

Method: System.Void GetSocketOption_obj_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Net.Sockets.SocketOptionLevel level, System.Net.Sockets.SocketOptionName name, out System.Object obj_val, out System.Int32 error)

Disassembly:
	0x036C63DC ADRP X22, 0xA79000
	0x036C63E0 LDR X20, [X21 + 0x80]!
	0x036C63E4 LDR X22, [X22 + 0xC48]
	0x036C63E8 CBNZ X20, 0x36C641C
	0x036C63EC LDR X0, [X22]
	0x036C63F0 LDR W8, [X0 + 0xE0]
	0x036C63F4 CBNZ W8, 0x36C6400
	0x036C63F8 BL 0x1C16DFC
	0x036C63FC LDR X0, [X22]
	0x036C6400 LDR X8, [X0 + 0xB8]
	0x036C6404 MOV X0, X21
	0x036C6408 MOV X2, X31
	0x036C640C LDR X1, [X8 + 0x8]
	0x036C6410 BL 0x1C24138
	0x036C6414 MOV X20, X0
	0x036C6418 CBZ X0, 0x36C6554
	0x036C641C LDR X21, [X19 + 0x48]
	0x036C6420 STR X31, [X19 + 0x48]
	0x036C6424 LDR X0, [X22]
	0x036C6428 LDR W8, [X0 + 0xE0]
	0x036C642C CBNZ W8, 0x36C6438
	0x036C6430 BL 0x1C16DFC
	0x036C6434 LDR X0, [X22]
	0x036C6438 LDR X8, [X0 + 0xB8]
	0x036C643C LDR X22, [X19 + 0x88]
	0x036C6440 LDR X8, [X8 + 0x8]
	0x036C6444 STR X8, [X19 + 0x80]
	0x036C6448 CBZ X22, 0x36C652C
	0x036C644C ADRP X25, 0xA79000
	0x036C6450 LDR X25, [X25 + 0xC60]
	0x036C6454 STR X31, [X19 + 0x88]
	0x036C6458 LDR X0, [X25]
	0x036C645C LDR W8, [X0 + 0xE0]
	0x036C6460 CBNZ W8, 0x36C646C
	0x036C6464 BL 0x1C16DFC
	0x036C6468 LDR X0, [X25]
	0x036C646C LDR X8, [X0 + 0xB8]
	0x036C6470 ADRP X27, 0xA79000
	0x036C6474 ADRP X26, 0xA55000
	0x036C6478 LDR X23, [X8 + 0x8]
	0x036C647C LDR X27, [X27 + 0xC50]
	0x036C6480 LDR X26, [X26 + 0x580]
	0x036C6484 CBNZ X23, 0x36C64D8
	0x036C6488 LDR W8, [X0 + 0xE0]
	0x036C648C CBNZ W8, 0x36C6498
	0x036C6490 BL 0x1C16DFC
	0x036C6494 LDR X0, [X25]
	0x036C6498 ADRP X9, 0xA5F000
	0x036C649C LDR X8, [X0 + 0xB8]
	0x036C64A0 LDR X9, [X9 + 0x948]
	0x036C64A4 LDR X24, [X8]
	0x036C64A8 LDR X0, [X9]
	0x036C64AC BL 0x1C16F10
	0x036C64B0 ADRP X8, 0xA79000
	0x036C64B4 LDR X8, [X8 + 0xC58]
	0x036C64B8 MOV X1, X24
	0x036C64BC MOV X3, X31
	0x036C64C0 MOV X23, X0
	0x036C64C4 LDR X2, [X8]
	0x036C64C8 BL 0x33E1224
	0x036C64CC LDR X8, [X25]
	0x036C64D0 LDR X8, [X8 + 0xB8]
	0x036C64D4 STR X23, [X8 + 0x8]
	0x036C64D8 LDR X3, [X27]
	0x036C64DC MOV X0, X19
	0x036C64E0 MOV X1, X20
	0x036C64E4 MOV X2, X21
	0x036C64E8 BL 0x229E824
	0x036C64EC LDR X8, [X26]
	0x036C64F0 MOV X19, X0
	0x036C64F4 LDR W9, [X8 + 0xE0]
	0x036C64F8 CBNZ W9, 0x36C6504
	0x036C64FC MOV X0, X8
	0x036C6500 BL 0x1C16DFC
	0x036C6504 MOV X0, X22
	0x036C6508 MOV X1, X23
	0x036C650C MOV X2, X19
	0x036C6510 LDP X20, X19, [X31 + 0x40]
	0x036C6514 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD1B000
	009 Move W8, [X24+2568]
	010 Move X20, X4
	011 Move X21, X3
	012 Move W22, W2
	013 Move W23, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA37000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2568], W8
	024 Move [X31+12], W31
	025 Compare X19, 0
	026 JumpIfEqual {62}
	027 Add X1, X31, 12
	028 Move X0, X19
	029 Move X2, X31
	030 Call SafeHandle.DangerousAddRef, X0, X1
	031 Move X8, 0xA37000
	032 Move X8, [X8+1928]
	033 Move X24, [X19+16]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X24
	040 Move W1, W23
	041 Move W2, W22
	042 Move X3, X21
	043 Move X4, X20
	044 Call 0x1C870D0
	045 Move W8, [X31+12]
	046 Compare W8, 0
	047 JumpIfEqual {54}
	048 Move X20, X31
	049 Move X0, X19
	050 Move X1, X31
	051 Call SafeHandle.DangerousRelease, X0
	052 Compare X20, 0
	053 JumpIfNotEqual {63}
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Return 
	062 Call 0x1C17F20
	063 Move X0, X20
	064 Call 0x1C17F18
	065 Move X21, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X21
	068 Call 0x3EB2AD0
	069 Move X20, [X0]
	070 Call 0x3EB2AE0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {52}
	074 Compare X19, 0
	075 JumpIfNotEqual {49}
	076 Call 0x1C17F20
	077 Move X20, X31
	078 Move X21, X0
	079 Move W8, [X31+12]
	080 Compare W8, 0
	081 JumpIfEqual {88}
	082 Compare X19, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17F20
	085 Move X0, X19
	086 Move X1, X31
	087 Call SafeHandle.DangerousRelease, X0
	088 Compare X20, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X21
	091 Call 0x1D2D690
	092 Move X0, X20
	093 Call 0x1C17F18
	094 Call 0x1991590

Method: System.Void GetSocketOption_obj_icall(System.IntPtr socket, System.Net.Sockets.SocketOptionLevel level, System.Net.Sockets.SocketOptionName name, out System.Object obj_val, out System.Int32 error)

Disassembly:
	0x036C6518 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Call 0x1C870D0
	002 Return 

Method: System.Void SetSocketOption(System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, System.Boolean optionValue)

Disassembly:
	0x036C651C LDP X26, X25, [X31 + 0x10]
	0x036C6520 MOV X3, X31

ISIL:
	001 And W3, W3, 1
	002 Call Socket.SetSocketOption, X0, X1, X2, X3
	003 Return 

Method: System.Void SetSocketOption(System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, System.Int32 optionValue)

Disassembly:
	0x036C02D0 MOV X0, X20
	0x036C02D4 MOV X2, X31
	0x036C02D8 BL 0x3316014
	0x036C02DC ADRP X0, 0xA7F000
	0x036C02E0 LDR X0, [X0 + 0x9B0]
	0x036C02E4 BL 0x1C16D08
	0x036C02E8 MOV X1, X0
	0x036C02EC MOV X0, X20
	0x036C02F0 BL 0x1C16DEC
	0x036C02F4 BL 0x1C16F20
	0x036C02F8 BL 0x1C16F20
	0x036C02FC BL 0x1C16F20
	0x036C0300 BL 0x1C16F28
	0x036C0304 ADRP X0, 0xA38000
	0x036C0308 LDR X0, [X0 + 0x528]
	0x036C030C BL 0x1C16D08
	0x036C0310 BL 0x1C16F10
	0x036C0314 MOV X19, X0
	0x036C0318 ADRP X0, 0xA7F000
	0x036C031C LDR X0, [X0 + 0x9B8]
	0x036C0320 BL 0x1C16D08
	0x036C0324 MOV X1, X0
	0x036C0328 MOV X0, X19
	0x036C032C MOV X2, X31
	0x036C0330 BL 0x330E100
	0x036C0334 B 0x36C037C
	0x036C0338 ADRP X0, 0xA3B000
	0x036C033C LDR X0, [X0 + 0x578]
	0x036C0340 BL 0x1C16D08
	0x036C0344 BL 0x1C16F10
	0x036C0348 MOV X19, X0
	0x036C034C ADRP X0, 0xA7F000
	0x036C0350 LDR X0, [X0 + 0x9C0]
	0x036C0354 BL 0x1C16D08
	0x036C0358 MOV X20, X0
	0x036C035C ADRP X0, 0xA7F000
	0x036C0360 LDR X0, [X0 + 0x9B8]
	0x036C0364 BL 0x1C16D08
	0x036C0368 MOV X2, X0
	0x036C036C MOV X0, X19
	0x036C0370 MOV X1, X20
	0x036C0374 MOV X3, X31
	0x036C0378 BL 0x330E16C
	0x036C037C ADRP X0, 0xA7F000
	0x036C0380 LDR X0, [X0 + 0x9B0]
	0x036C0384 BL 0x1C16D08
	0x036C0388 MOV X1, X0
	0x036C038C MOV X0, X19
	0x036C0390 BL 0x1C16DEC
	0x036C0394 B 0x36C03C8
	0x036C0398 B 0x36C03C8
	0x036C039C MOV X20, X0
	0x036C03A0 B 0x36C03D8
	0x036C03A4 B 0x36C03C8
	0x036C03A8 B 0x36C03C8
	0x036C03AC B 0x36C03C8
	0x036C03B0 B 0x36C03C8
	0x036C03B4 B 0x36C03C8
	0x036C03B8 B 0x36C03C8
	0x036C03BC B 0x36C03C8
	0x036C03C0 B 0x36C03C8
	0x036C03C4 B 0x36C03C8
	0x036C03C8 MOV X20, X0
	0x036C03CC B 0x36C03D4
	0x036C03D0 MOV X20, X0
	0x036C03D4 LDR X24, [X31 + 0x10]
	0x036C03D8 CMP W1, 0x1
	0x036C03DC B.NE 0x36C0408
	0x036C03E0 MOV X0, X20
	0x036C03E4 BL 0x3EB1AD0
	0x036C03E8 LDR X21, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD21000
	009 Move X23, 0xA3D000
	010 Move W8, [X24+2569]
	011 Move X23, [X23+1928]
	012 Move W19, W3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA3D000
	021 Move X0, [X0+1928]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2569], W8
	025 Move X0, X22
	026 Move [X31+12], W31
	027 Call Socket.ThrowIfDisposedAndClosed, X0
	028 Move X0, [X23]
	029 Move X22, [X22+48]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X6, X31, 12
	035 Move X0, X22
	036 Move W1, W21
	037 Move W2, W20
	038 Move X3, X31
	039 Move X4, X31
	040 Move W5, W19
	041 Call Socket.SetSocketOption_internal, X0, X1, X2, X3, X4, X5, X6
	042 Move W19, [X31+12]
	043 Compare W19, 0
	044 JumpIfNotEqual {53}
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X24, [X31+16]
	050 Move X23, [X31+24]
	051 Move X30, [X31+64]
	052 Return 
	053 Move W8, 0x2726
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, 0xA3C000
	056 Move X0, [X0+1400]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X19, X0
	061 Call ArgumentException..ctor, X0
	062 Move X0, 0xA80000
	063 Move X0, [X0+2344]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC
	068 Move X0, 0xA72000
	069 Move X0, [X0+216]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move W1, W19
	073 Move X2, X31
	074 Move X20, X0
	075 Call SocketException..ctor, X0, X1
	076 Move X0, 0xA80000
	077 Move X0, [X0+2344]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X20
	081 Call 0x1C17DEC

Method: System.Void SetSocketOption_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Net.Sockets.SocketOptionLevel level, System.Net.Sockets.SocketOptionName name, System.Object obj_val, System.Byte[] byte_val, System.Int32 int_val, out System.Int32 error)

Disassembly:
	0x036C26A8 MOV X21, X1
	0x036C26AC MOV X19, X0
	0x036C26B0 TBNZ X8, 0x0, 0x36C26E0
	0x036C26B4 ADRP X0, 0xA3D000
	0x036C26B8 LDR X0, [X0 + 0x710]
	0x036C26BC BL 0x1C16CF4
	0x036C26C0 ADRP X0, 0xA7D000
	0x036C26C4 LDR X0, [X0 + 0xA60]
	0x036C26C8 BL 0x1C16CF4
	0x036C26CC ADRP X0, 0xA7D000
	0x036C26D0 LDR X0, [X0 + 0xA58]
	0x036C26D4 BL 0x1C16CF4
	0x036C26D8 MOVZ W8, 0x1
	0x036C26DC STRB W8, [X20 + 0xA11]
	0x036C26E0 LDR X0, [X24]
	0x036C26E4 BL 0x1C16F10
	0x036C26E8 MOV X1, X31
	0x036C26EC MOV X20, X0
	0x036C26F0 BL 0x36CA920
	0x036C26F4 CBZ X20, 0x36C27B8
	0x036C26F8 STP X19, X23, [X20 + 0x10]
	0x036C26FC STR X22, [X20 + 0x20]
	0x036C2700 CBZ X21, 0x36C27B8
	0x036C2704 MOV X0, X21
	0x036C2708 MOV X1, X31
	0x036C270C BL 0x33E20D8
	0x036C2710 CBZ X0, 0x36C27B8
	0x036C2714 MOV X1, X31
	0x036C2718 MOV X21, X0
	0x036C271C BL 0x33ED11C
	0x036C2720 TBZ X0, 0x0, 0x36C2750
	0x036C2724 LDR W8, [X19 + 0x54]
	0x036C2728 CMP W8, 0x1
	0x036C272C B.NE 0x36C279C
	0x036C2730 LDR X0, [X20 + 0x18]
	0x036C2734 CBZ X0, 0x36C27B8
	0x036C2738 LDP X20, X19, [X31 + 0x30]
	0x036C273C LDP X22, X21, [X31 + 0x20]
	0x036C2740 LDP X24, X23, [X31 + 0x10]
	0x036C2744 MOV X1, X31
	0x036C2748 LDR X30, [X31], #0x40
	0x036C274C B 0x362E660
	0x036C2750 ADRP X8, 0xA3D000
	0x036C2754 LDR X8, [X8 + 0x710]
	0x036C2758 LDR X0, [X8]
	0x036C275C BL 0x1C16F10
	0x036C2760 ADRP X8, 0xA7D000
	0x036C2764 LDR X8, [X8 + 0xA60]
	0x036C2768 MOV X1, X20
	0x036C276C MOV X3, X31
	0x036C2770 MOV X19, X0
	0x036C2774 LDR X2, [X8]
	0x036C2778 BL 0x2A6B948
	0x036C277C MOV X0, X21
	0x036C2780 MOV X1, X19
	0x036C2784 LDP X20, X19, [X31 + 0x30]
	0x036C2788 LDP X22, X21, [X31 + 0x20]
	0x036C278C LDP X24, X23, [X31 + 0x10]
	0x036C2790 MOV X2, X31
	0x036C2794 LDR X30, [X31], #0x40
	0x036C2798 B 0x33F3F94
	0x036C279C LDP X1, X0, [X20 + 0x18]
	0x036C27A0 LDP X20, X19, [X31 + 0x30]
	0x036C27A4 LDP X22, X21, [X31 + 0x20]
	0x036C27A8 LDP X24, X23, [X31 + 0x10]
	0x036C27AC MOV X2, X31
	0x036C27B0 LDR X30, [X31], #0x40
	0x036C27B4 B 0x362E680
	0x036C27B8 BL 0x1C16F20
	0x036C27BC SUB X31, X31, 0x20
	0x036C27C0 STP X31, X30, [X31 + 0x8]
	0x036C27C4 MOV X3, X1
	0x036C27C8 ADD X1, X31, 0x8
	0x036C27CC ADD X2, X31, 0x1C
	0x036C27D0 STR W31, [X31 + 0x1C]
	0x036C27D4 BL 0x36C27E4
	0x036C27D8 LDR X30, [X31 + 0x10]
	0x036C27DC ADD X31, X31, 0x20
	0x036C27E0 RET
	0x036C27E4 STP X30, X25, [X31 - 0x40]!
	0x036C27E8 STP X24, X23, [X31 + 0x10]
	0x036C27EC STP X22, X21, [X31 + 0x20]
	0x036C27F0 STP X20, X19, [X31 + 0x30]
	0x036C27F4 ADRP X25, 0xD1E000
	0x036C27F8 ADRP X23, 0xA7D000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xD1F000
	011 Move W8, [X26+2570]
	012 Move X20, X6
	013 Move W21, W5
	014 Move X22, X4
	015 Move X23, X3
	016 Move W24, W2
	017 Move W25, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA3B000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+2570], W8
	028 Move [X31+12], W31
	029 Compare X19, 0
	030 JumpIfEqual {70}
	031 Add X1, X31, 12
	032 Move X0, X19
	033 Move X2, X31
	034 Call SafeHandle.DangerousAddRef, X0, X1
	035 Move X8, 0xA3B000
	036 Move X8, [X8+1928]
	037 Move X26, [X19+16]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X26
	044 Move W1, W25
	045 Move W2, W24
	046 Move X3, X23
	047 Move X4, X22
	048 Move W5, W21
	049 Move X6, X20
	050 Call 0x1C87DD8
	051 Move W8, [X31+12]
	052 Compare W8, 0
	053 JumpIfEqual {60}
	054 Move X20, X31
	055 Move X0, X19
	056 Move X1, X31
	057 Call SafeHandle.DangerousRelease, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {71}
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X24, [X31+32]
	065 Move X23, [X31+40]
	066 Move X26, [X31+16]
	067 Move X25, [X31+24]
	068 Move X30, [X31+80]
	069 Return 
	070 Call 0x1C17F20
	071 Move X0, X20
	072 Call 0x1C17F18
	073 Move X21, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X21
	076 Call 0x3EB2AD0
	077 Move X20, [X0]
	078 Call 0x3EB2AE0
	079 Move W8, [X31+12]
	080 Compare W8, 0
	081 JumpIfEqual {58}
	082 Compare X19, 0
	083 JumpIfNotEqual {55}
	084 Call 0x1C17F20
	085 Move X20, X31
	086 Move X21, X0
	087 Move W8, [X31+12]
	088 Compare W8, 0
	089 JumpIfEqual {96}
	090 Compare X19, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17F20
	093 Move X0, X19
	094 Move X1, X31
	095 Call SafeHandle.DangerousRelease, X0
	096 Compare X20, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X21
	099 Call 0x1D2D690
	100 Move X0, X20
	101 Call 0x1C17F18
	102 Call 0x1991590

Method: System.Void SetSocketOption_icall(System.IntPtr socket, System.Net.Sockets.SocketOptionLevel level, System.Net.Sockets.SocketOptionName name, System.Object obj_val, System.Byte[] byte_val, System.Int32 int_val, out System.Int32 error)

Disassembly:
	0x036C6524 LDP X30, X27, [X31], #0x50

ISIL:
	001 Call 0x1C87DD8
	002 Return 

Method: System.Int32 IOControl(System.Int32 ioControlCode, System.Byte[] optionInValue, System.Byte[] optionOutValue)

Disassembly:
	0x036C1CD0 LDR X0, [X8]
	0x036C1CD4 LDR W8, [X0 + 0xE0]
	0x036C1CD8 CBNZ W8, 0x36C1CE0
	0x036C1CDC BL 0x1C16DFC
	0x036C1CE0 AND W1, W21, 0x1
	0x036C1CE4 MOV X0, X22
	0x036C1CE8 MOV X2, X20
	0x036C1CEC BL 0x1C85CCC
	0x036C1CF0 LDRB W8, [X31 + 0xC]
	0x036C1CF4 CBZ W8, 0x36C1D0C
	0x036C1CF8 MOV X20, X31
	0x036C1CFC MOV X0, X19
	0x036C1D00 MOV X1, X31
	0x036C1D04 BL 0x32BFAB4
	0x036C1D08 CBNZ X20, 0x36C1D20
	0x036C1D0C LDP X20, X19, [X31 + 0x20]
	0x036C1D10 LDP X22, X21, [X31 + 0x10]
	0x036C1D14 LDR X30, [X31], #0x30
	0x036C1D18 RET
	0x036C1D1C BL 0x1C16F20
	0x036C1D20 MOV X0, X20
	0x036C1D24 BL 0x1C16F18
	0x036C1D28 B 0x36C1D2C
	0x036C1D2C MOV X21, X0
	0x036C1D30 CMP W1, 0x1
	0x036C1D34 B.NE 0x36C1D58
	0x036C1D38 MOV X0, X21
	0x036C1D3C BL 0x3EB1AD0
	0x036C1D40 LDR X20, [X0]
	0x036C1D44 BL 0x3EB1AE0
	0x036C1D48 LDRB W8, [X31 + 0xC]
	0x036C1D4C CBZ W8, 0x36C1D08
	0x036C1D50 CBNZ X19, 0x36C1CFC
	0x036C1D54 BL 0x1C16F20
	0x036C1D58 MOV X20, X31
	0x036C1D5C B 0x36C1D64
	0x036C1D60 MOV X21, X0
	0x036C1D64 LDRB W8, [X31 + 0xC]
	0x036C1D68 CBZ W8, 0x36C1D80
	0x036C1D6C CBNZ X19, 0x36C1D74
	0x036C1D70 BL 0x1C16F20
	0x036C1D74 MOV X0, X19
	0x036C1D78 MOV X1, X31
	0x036C1D7C BL 0x32BFAB4
	0x036C1D80 CBNZ X20, 0x36C1D8C
	0x036C1D84 MOV X0, X21
	0x036C1D88 BL 0x1D2C690
	0x036C1D8C MOV X0, X20
	0x036C1D90 BL 0x1C16F18
	0x036C1D94 BL 0x1990590
	0x036C1D98 AND W1, W1, 0x1
	0x036C1D9C B 0x1C85CCC
	0x036C1DA0 LDRB W0, [X0 + 0x52]
	0x036C1DA4 RET
	0x036C1DA8 STP X30, X19, [X31 - 0x10]!
	0x036C1DAC LDR W8, [X0 + 0x28]
	0x036C1DB0 CMP W8, 0x11
	0x036C1DB4 B.EQ 0x36C1DC0
	0x036C1DB8 LDP X30, X19, [X31], #0x10
	0x036C1DBC RET
	0x036C1DC0 ADRP X0, 0xA70000
	0x036C1DC4 LDR X0, [X0 + 0xD8]
	0x036C1DC8 BL 0x1C16D08
	0x036C1DCC BL 0x1C16F10
	0x036C1DD0 MOVZ W1, 0x273A
	0x036C1DD4 MOV X2, X31
	0x036C1DD8 MOV X19, X0
	0x036C1DDC BL 0x36C6F04
	0x036C1DE0 ADRP X0, 0xA7E000
	0x036C1DE4 LDR X0, [X0 + 0xA30]
	0x036C1DE8 BL 0x1C16D08
	0x036C1DEC MOV X1, X0
	0x036C1DF0 MOV X0, X19
	0x036C1DF4 BL 0x1C16DEC
	0x036C1DF8 SUB X31, X31, 0x30
	0x036C1DFC STP X30, X21, [X31 + 0x10]
	0x036C1E00 STP X20, X19, [X31 + 0x20]
	0x036C1E04 ADRP X20, 0xD1F000
	0x036C1E08 LDRB W8, [X20 + 0x9DA]
	0x036C1E0C MOV X19, X0
	0x036C1E10 TBNZ X8, 0x0, 0x36C1E28
	0x036C1E14 ADRP X0, 0xA3B000
	0x036C1E18 LDR X0, [X0 + 0x788]
	0x036C1E1C BL 0x1C16CF4
	0x036C1E20 MOVZ W8, 0x1
	0x036C1E24 STRB W8, [X20 + 0x9DA]
	0x036C1E28 MOV X0, X19
	0x036C1E2C STR W31, [X31 + 0xC]
	0x036C1E30 BL 0x36C19E0
	0x036C1E34 LDRB W8, [X19 + 0x52]
	0x036C1E38 CBZ W8, 0x36C1E98
	0x036C1E3C LDR X8, [X19 + 0x38]
	0x036C1E40 CBZ X8, 0x36C1E98
	0x036C1E44 ADRP X8, 0xA3B000
	0x036C1E48 LDR X8, [X8 + 0x788]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD20000
	009 Move W8, [X23+2571]
	010 Move X19, X3
	011 Move X20, X2
	012 Move W21, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA3C000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2571], W8
	023 Move [X31+12], W31
	024 Move W8, [X22+84]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0xA3C000
	027 Move X8, [X8+1928]
	028 Move X22, [X22+48]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X4, X31, 12
	035 Move X0, X22
	036 Move W1, W21
	037 Move X2, X20
	038 Move X3, X19
	039 Call Socket.IOControl_internal, X0, X1, X2, X3, X4
	040 Move W19, [X31+12]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Compare W19, 0
	044 JumpIfNotEqual {73}
	045 Add W31, W0, 1
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 Move X23, [X31+24]
	052 Add X31, X31, 64
	053 Return X0
	054 Move X0, X22
	055 Move X1, X31
	056 Call "il2cpp_vm_object_is_inst", X0
	057 Move X19, X0
	058 Call 0x19913C0
	059 Move X8, [X19]
	060 Move X0, X19
	061 Move X9, [X8+360]
	062 Move X1, [X8+368]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X19, X0
	065 Move X0, 0xA5C000
	066 Move X0, [X0+1208]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X1, X19
	070 Move X2, X31
	071 Move X20, X0
	072 Call ObjectDisposedException..ctor, X0, X1
	073 Move X0, 0xA71000
	074 Move X0, [X0+216]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move W1, W19
	078 Move X2, X31
	079 Move X20, X0
	080 Call SocketException..ctor, X0, X1
	081 Move X0, 0xA7F000
	082 Move X0, [X0+2520]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X20
	086 Call 0x1C17DEC
	087 Move X0, 0xA33000
	088 Move X0, [X0+1456]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0xA7F000
	093 Move X0, [X0+2528]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call InvalidOperationException..ctor, X0, X1
	099 Move X0, 0xA7F000
	100 Move X0, [X0+2520]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Call 0x1C17DEC

Method: System.Int32 IOControl_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Int32 ioctl_code, System.Byte[] input, System.Byte[] output, out System.Int32 error)

Disassembly:
	0x036C6528 B 0x33E1324
	0x036C652C MOV X0, X19
	0x036C6530 MOV X1, X20
	0x036C6534 MOV X2, X21
	0x036C6538 LDP X20, X19, [X31 + 0x40]
	0x036C653C LDP X22, X21, [X31 + 0x30]
	0x036C6540 LDP X24, X23, [X31 + 0x20]
	0x036C6544 LDP X26, X25, [X31 + 0x10]
	0x036C6548 MOV W3, W31
	0x036C654C LDP X30, X27, [X31], #0x50
	0x036C6550 B 0x36C656C
	0x036C6554 LDP X20, X19, [X31 + 0x40]
	0x036C6558 LDP X22, X21, [X31 + 0x30]
	0x036C655C LDP X24, X23, [X31 + 0x20]
	0x036C6560 LDP X26, X25, [X31 + 0x10]
	0x036C6564 LDP X30, X27, [X31], #0x50
	0x036C6568 RET
	0x036C656C STR X30, [X31 - 0x40]!
	0x036C6570 STP X24, X23, [X31 + 0x10]
	0x036C6574 STP X22, X21, [X31 + 0x20]
	0x036C6578 STP X20, X19, [X31 + 0x30]
	0x036C657C ADRP X21, 0xD1A000
	0x036C6580 LDRB W8, [X21 + 0xA21]
	0x036C6584 MOV W22, W3
	0x036C6588 MOV X19, X2
	0x036C658C MOV X20, X1
	0x036C6590 MOV X23, X0
	0x036C6594 TBNZ X8, 0x0, 0x36C660C
	0x036C6598 ADRP X0, 0xA35000
	0x036C659C LDR X0, [X0 + 0x7D8]
	0x036C65A0 BL 0x1C16CF4
	0x036C65A4 ADRP X0, 0xA39000
	0x036C65A8 LDR X0, [X0 + 0x4A0]
	0x036C65AC BL 0x1C16CF4
	0x036C65B0 ADRP X0, 0xA67000
	0x036C65B4 LDR X0, [X0 + 0x378]
	0x036C65B8 BL 0x1C16CF4
	0x036C65BC ADRP X0, 0xA35000
	0x036C65C0 LDR X0, [X0 + 0x7E8]
	0x036C65C4 BL 0x1C16CF4
	0x036C65C8 ADRP X0, 0xA2E000
	0x036C65CC LDR X0, [X0 + 0x7B8]
	0x036C65D0 BL 0x1C16CF4
	0x036C65D4 ADRP X0, 0xA79000
	0x036C65D8 LDR X0, [X0 + 0xC68]
	0x036C65DC BL 0x1C16CF4
	0x036C65E0 ADRP X0, 0xA79000
	0x036C65E4 LDR X0, [X0 + 0xC70]
	0x036C65E8 BL 0x1C16CF4
	0x036C65EC ADRP X0, 0xA79000
	0x036C65F0 LDR X0, [X0 + 0xC78]
	0x036C65F4 BL 0x1C16CF4
	0x036C65F8 ADRP X0, 0xA79000
	0x036C65FC LDR X0, [X0 + 0xC60]
	0x036C6600 BL 0x1C16CF4
	0x036C6604 MOVZ W8, 0x1
	0x036C6608 STRB W8, [X21 + 0xA21]
	0x036C660C LDR X21, [X23 + 0x90]
	0x036C6610 STR X31, [X23 + 0x90]
	0x036C6614 CBZ X21, 0x36C672C
	0x036C6618 ADRP X8, 0xA67000
	0x036C661C LDR X8, [X8 + 0x378]
	0x036C6620 LDR X9, [X21]
	0x036C6624 LDR X8, [X8]
	0x036C6628 LDRB W11, [X9 + 0x130]
	0x036C662C LDRB W10, [X8 + 0x130]
	0x036C6630 CMP W11, W10
	0x036C6634 B.CC 0x36C664C
	0x036C6638 LDR X9, [X9 + 0xC8]
	0x036C663C ADD X9, X9, X10, 0x3, LSL
	0x036C6640 LDUR X9, [X9 - 0x8]
	0x036C6644 CMP X9, X8
	0x036C6648 B.EQ 0x36C6784
	0x036C664C ADRP X22, 0xA2E000
	0x036C6650 LDR X22, [X22 + 0x7B8]
	0x036C6654 LDR X0, [X22]
	0x036C6658 LDR W8, [X0 + 0xE0]
	0x036C665C CBNZ W8, 0x36C6664
	0x036C6660 BL 0x1C16DFC
	0x036C6664 ADRP X23, 0xD12000
	0x036C6668 LDRB W8, [X23 + 0xF1B]
	0x036C666C CBNZ W8, 0x36C6684
	0x036C6670 ADRP X0, 0xA2E000
	0x036C6674 LDR X0, [X0 + 0x7B8]
	0x036C6678 BL 0x1C16CF4
	0x036C667C MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD1B000
	009 Move W8, [X24+2572]
	010 Move X20, X4
	011 Move X21, X3
	012 Move X22, X2
	013 Move W23, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA37000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2572], W8
	024 Move [X31+12], W31
	025 Compare X19, 0
	026 JumpIfEqual {64}
	027 Add X1, X31, 12
	028 Move X0, X19
	029 Move X2, X31
	030 Call SafeHandle.DangerousAddRef, X0, X1
	031 Move X8, 0xA37000
	032 Move X8, [X8+1928]
	033 Move X24, [X19+16]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X24
	040 Move W1, W23
	041 Move X2, X22
	042 Move X3, X21
	043 Move X4, X20
	044 Call 0x1C883DC
	045 Move W8, [X31+12]
	046 Move W21, W0
	047 Compare W8, 0
	048 JumpIfEqual {55}
	049 Move X20, X31
	050 Move X0, X19
	051 Move X1, X31
	052 Call SafeHandle.DangerousRelease, X0
	053 Compare X20, 0
	054 JumpIfNotEqual {80}
	055 Move W0, W21
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Return X0
	064 Call 0x1C17F20
	065 Move X21, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X21
	068 Call 0x3EB2AD0
	069 Move X20, [X0]
	070 Call 0x3EB2AE0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Compare X19, 0
	075 JumpIfEqual {83}
	076 Move W21, W31
	077 Move W21, W31
	078 Compare X20, 0
	079 JumpIfEqual {55}
	080 Move X0, X20
	081 Call 0x1C17F18
	082 Move X20, X31
	083 Call 0x1C17F20
	084 Move X21, X0
	085 Move W8, [X31+12]
	086 Compare W8, 0
	087 JumpIfEqual {94}
	088 Compare X19, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17F20
	091 Move X0, X19
	092 Move X1, X31
	093 Call SafeHandle.DangerousRelease, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X21
	097 Call 0x1D2D690
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Int32 IOControl_icall(System.IntPtr sock, System.Int32 ioctl_code, System.Byte[] input, System.Byte[] output, out System.Int32 error)

Disassembly:
	0x036C6680 STRB W8, [X23 + 0xF1B]

ISIL:
	001 Call 0x1C883DC
	002 Return X0

Method: System.Void Close()

Disassembly:
	0x036AD3C8 BL 0x339D0E0
	0x036AD3CC TBZ X0, 0x0, 0x36AD408

ISIL:
	001 Move [X0+28], W31
	002 Call Socket.Dispose, X0
	003 Return 

Method: System.Void Close(System.Int32 timeout)

Disassembly:
	0x036BCCB4 STR X5, [X31 + 0x8]
	0x036BCCB8 ADRP X25, 0xA3F000

ISIL:
	001 Move [X0+28], W1
	002 Call Socket.Dispose, X0
	003 Return 

Method: System.Void Close_icall(System.IntPtr socket, out System.Int32 error)

Disassembly:
	0x036C6684 LDR X0, [X22]

ISIL:
	001 Call 0x1C86D44
	002 Return 

Method: System.Void Shutdown(System.Net.Sockets.SocketShutdown how)

Disassembly:
	0x036C6688 ADRP X23, 0xA35000
	0x036C668C LDR W8, [X0 + 0xE0]
	0x036C6690 LDR X23, [X23 + 0x7D8]
	0x036C6694 CBNZ W8, 0x36C66A0
	0x036C6698 BL 0x1C16DFC
	0x036C669C LDR X0, [X22]
	0x036C66A0 LDR X8, [X23]
	0x036C66A4 LDR X9, [X0 + 0xB8]
	0x036C66A8 LDR W10, [X8 + 0xE0]
	0x036C66AC LDR X22, [X9 + 0x28]
	0x036C66B0 CBNZ W10, 0x36C66BC
	0x036C66B4 MOV X0, X8
	0x036C66B8 BL 0x1C16DFC
	0x036C66BC MOV X0, X31
	0x036C66C0 BL 0x33DD2A8
	0x036C66C4 CBZ X22, 0x36C6844
	0x036C66C8 ADRP X9, 0xA35000
	0x036C66CC LDR X9, [X9 + 0x7E8]
	0x036C66D0 LDR X8, [X21]
	0x036C66D4 LDR X1, [X9]
	0x036C66D8 LDRB W10, [X8 + 0x130]
	0x036C66DC LDRB W9, [X1 + 0x130]
	0x036C66E0 CMP W10, W9
	0x036C66E4 B.CC 0x36C683C
	0x036C66E8 LDR X8, [X8 + 0xC8]
	0x036C66EC ADD X8, X8, X9, 0x3, LSL
	0x036C66F0 LDUR X8, [X8 - 0x8]
	0x036C66F4 CMP X8, X1
	0x036C66F8 B.NE 0x36C683C
	0x036C66FC MOV X3, X0
	0x036C6700 MOV X0, X22
	0x036C6704 MOV X1, X20
	0x036C6708 MOV X2, X19
	0x036C670C MOV X5, X21
	0x036C6710 LDP X20, X19, [X31 + 0x30]
	0x036C6714 LDP X22, X21, [X31 + 0x20]
	0x036C6718 LDP X24, X23, [X31 + 0x10]
	0x036C671C MOVZ W4, 0x8
	0x036C6720 MOV X6, X31
	0x036C6724 LDR X30, [X31], #0x40
	0x036C6728 B 0x33F96F0
	0x036C672C TBZ X22, 0x0, 0x36C675C
	0x036C6730 ADRP X8, 0xA79000
	0x036C6734 LDR X8, [X8 + 0xC68]
	0x036C6738 MOV X0, X20
	0x036C673C MOV X1, X19
	0x036C6740 LDP X20, X19, [X31 + 0x30]
	0x036C6744 LDR X3, [X8]
	0x036C6748 LDP X22, X21, [X31 + 0x20]
	0x036C674C LDP X24, X23, [X31 + 0x10]
	0x036C6750 MOVZ W2, 0x1
	0x036C6754 LDR X30, [X31], #0x40
	0x036C6758 B 0x229CB40
	0x036C675C CBZ X20, 0x36C6844
	0x036C6760 LDR X3, [X20 + 0x18]
	0x036C6764 LDR X0, [X20 + 0x40]
	0x036C6768 LDR X2, [X20 + 0x28]
	0x036C676C MOV X1, X19
	0x036C6770 LDP X20, X19, [X31 + 0x30]
	0x036C6774 LDP X22, X21, [X31 + 0x20]
	0x036C6778 LDP X24, X23, [X31 + 0x10]
	0x036C677C LDR X30, [X31], #0x40
	0x036C6780 BR X3
	0x036C6784 ADRP X24, 0xA79000
	0x036C6788 LDR X24, [X24 + 0xC60]
	0x036C678C LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD1B000
	007 Move W8, [X21+2573]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA37000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2573], W8
	019 Move X0, X20
	020 Move [X31+12], W31
	021 Call Socket.ThrowIfDisposedAndClosed, X0
	022 Move W8, [X20+82]
	023 Compare W8, 0
	024 JumpIfEqual {48}
	025 Move X8, 0xA37000
	026 Move X8, [X8+1928]
	027 Move X20, [X20+48]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X2, X31, 12
	034 Move X0, X20
	035 Move W1, W19
	036 Call Socket.Shutdown_internal, X0, X1, X2
	037 Move W19, [X31+12]
	038 Compare W19, 0
	039 JumpIfEqual {42}
	040 Move W8, 0x2749
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Add X31, X31, 48
	047 Return 
	048 Move X0, 0xA6C000
	049 Move X0, [X0+216]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move W1, 0x2749
	053 Move X2, X31
	054 Move X19, X0
	055 Call SocketException..ctor, X0, X1
	056 Move X0, 0xA7A000
	057 Move X0, [X0+2928]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC
	062 Move X0, 0xA6C000
	063 Move X0, [X0+216]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move W1, W19
	067 Move X2, X31
	068 Move X20, X0
	069 Call SocketException..ctor, X0, X1
	070 Move X0, 0xA7A000
	071 Move X0, [X0+2928]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X20
	075 Call 0x1C17DEC

Method: System.Void Shutdown_internal(System.Net.Sockets.SafeSocketHandle safeHandle, System.Net.Sockets.SocketShutdown how, out System.Int32 error)

Disassembly:
	0x036C2584 CBZ W8, 0x36C2648
	0x036C2588 ADRP X8, 0xA7C000
	0x036C258C LDR X8, [X8 + 0xFB8]
	0x036C2590 LDR X0, [X8]
	0x036C2594 BL 0x1C16F10
	0x036C2598 MOV X1, X19
	0x036C259C MOV X2, X22
	0x036C25A0 MOV X3, X21
	0x036C25A4 MOV W4, W31
	0x036C25A8 MOV X5, X31
	0x036C25AC MOV X20, X0
	0x036C25B0 BL 0x36CD130
	0x036C25B4 CBZ X20, 0x36C267C
	0x036C25B8 ADRP X23, 0xA3A000
	0x036C25BC ADRP X24, 0xA7D000
	0x036C25C0 LDR X21, [X19 + 0x40]
	0x036C25C4 LDR X23, [X23 + 0x788]
	0x036C25C8 LDR X24, [X24 + 0x9F0]
	0x036C25CC MOV X0, X20
	0x036C25D0 MOV X1, X31
	0x036C25D4 BL 0x36CD068
	0x036C25D8 LDR X8, [X23]
	0x036C25DC MOV X22, X0
	0x036C25E0 LDR W9, [X8 + 0xE0]
	0x036C25E4 CBNZ W9, 0x36C25F4
	0x036C25E8 MOV X0, X8
	0x036C25EC BL 0x1C16DFC
	0x036C25F0 LDR X8, [X23]
	0x036C25F4 LDR X8, [X8 + 0xB8]
	0x036C25F8 LDR X0, [X24]
	0x036C25FC LDR X23, [X8 + 0x48]
	0x036C2600 BL 0x1C16F10
	0x036C2604 MOVZ W1, 0x1
	0x036C2608 MOV X2, X23
	0x036C260C MOV X3, X20
	0x036C2610 MOV X4, X31
	0x036C2614 MOV X24, X0
	0x036C2618 BL 0x362E5F8
	0x036C261C MOV X0, X19
	0x036C2620 MOV X1, X21
	0x036C2624 MOV X2, X22
	0x036C2628 MOV X3, X24
	0x036C262C BL 0x36C2680
	0x036C2630 MOV X0, X20
	0x036C2634 LDP X20, X19, [X31 + 0x30]
	0x036C2638 LDP X22, X21, [X31 + 0x20]
	0x036C263C LDP X24, X23, [X31 + 0x10]
	0x036C2640 LDR X30, [X31], #0x40
	0x036C2644 RET
	0x036C2648 ADRP X0, 0xA31000
	0x036C264C LDR X0, [X0 + 0x5B0]
	0x036C2650 BL 0x1C16D08
	0x036C2654 BL 0x1C16F10
	0x036C2658 MOV X1, X31
	0x036C265C MOV X19, X0
	0x036C2660 BL 0x337DEC0
	0x036C2664 ADRP X0, 0xA7D000
	0x036C2668 LDR X0, [X0 + 0xA50]
	0x036C266C BL 0x1C16D08
	0x036C2670 MOV X1, X0
	0x036C2674 MOV X0, X19
	0x036C2678 BL 0x1C16DEC
	0x036C267C BL 0x1C16F20
	0x036C2680 STR X30, [X31 - 0x40]!
	0x036C2684 STP X24, X23, [X31 + 0x10]
	0x036C2688 STP X22, X21, [X31 + 0x20]
	0x036C268C STP X20, X19, [X31 + 0x30]
	0x036C2690 ADRP X20, 0xD1E000
	0x036C2694 ADRP X24, 0xA7D000
	0x036C2698 LDRB W8, [X20 + 0xA11]
	0x036C269C LDR X24, [X24 + 0xA58]
	0x036C26A0 MOV X23, X3
	0x036C26A4 MOV X22, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1F000
	007 Move W8, [X22+2574]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA3B000
	016 Move X0, [X0+1928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2574], W8
	020 Move [X31+12], W31
	021 Compare X19, 0
	022 JumpIfEqual {54}
	023 Add X1, X31, 12
	024 Move X0, X19
	025 Move X2, X31
	026 Call SafeHandle.DangerousAddRef, X0, X1
	027 Move X8, 0xA3B000
	028 Move X8, [X8+1928]
	029 Move X22, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Move W1, W21
	037 Move X2, X20
	038 Call 0x1C8806C
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfEqual {48}
	042 Move X20, X31
	043 Move X0, X19
	044 Move X1, X31
	045 Call SafeHandle.DangerousRelease, X0
	046 Compare X20, 0
	047 JumpIfNotEqual {55}
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20
	055 Move X0, X20
	056 Call 0x1C17F18
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X21
	060 Call 0x3EB2AD0
	061 Move X20, [X0]
	062 Call 0x3EB2AE0
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {46}
	066 Compare X19, 0
	067 JumpIfNotEqual {43}
	068 Call 0x1C17F20
	069 Move X20, X31
	070 Move X21, X0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {80}
	074 Compare X19, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17F20
	077 Move X0, X19
	078 Move X1, X31
	079 Call SafeHandle.DangerousRelease, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X21
	083 Call 0x1D2D690
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: System.Void Shutdown_icall(System.IntPtr socket, System.Net.Sockets.SocketShutdown how, out System.Int32 error)

Disassembly:
	0x036C6790 LDR W8, [X0 + 0xE0]

ISIL:
	001 Call 0x1C8806C
	002 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x036C6794 CBNZ W8, 0x36C67A0
	0x036C6798 BL 0x1C16DFC
	0x036C679C LDR X0, [X24]
	0x036C67A0 LDR X8, [X0 + 0xB8]
	0x036C67A4 LDR X22, [X8 + 0x10]
	0x036C67A8 CBNZ X22, 0x36C67FC
	0x036C67AC LDR W8, [X0 + 0xE0]
	0x036C67B0 CBNZ W8, 0x36C67BC
	0x036C67B4 BL 0x1C16DFC
	0x036C67B8 LDR X0, [X24]
	0x036C67BC ADRP X9, 0xA39000
	0x036C67C0 LDR X8, [X0 + 0xB8]
	0x036C67C4 LDR X9, [X9 + 0x4A0]
	0x036C67C8 LDR X23, [X8]
	0x036C67CC LDR X0, [X9]
	0x036C67D0 BL 0x1C16F10
	0x036C67D4 ADRP X8, 0xA79000
	0x036C67D8 LDR X8, [X8 + 0xC78]
	0x036C67DC MOV X1, X23
	0x036C67E0 MOV X3, X31
	0x036C67E4 MOV X22, X0
	0x036C67E8 LDR X2, [X8]
	0x036C67EC BL 0x33DCEF0
	0x036C67F0 LDR X8, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+84]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X19, X0
	006 Move X0, [X0+48]
	007 Move W8, [X19+82]
	008 Move W9, 1
	009 Move [X19+84], W9
	010 Move [X19+82], W31
	011 Compare X0, 0
	012 JumpIfEqual {27}
	013 Move [X19+24], W9
	014 Compare W8, 0
	015 JumpIfEqual {22}
	016 Move X1, [X0+16]
	017 Move X0, X19
	018 Call Socket.Linger, X0, X1
	019 Move X0, [X19+48]
	020 Compare X0, 0
	021 JumpIfEqual {30}
	022 Move X1, X31
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Call SafeHandle.Dispose, X0
	026 Return 
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return 
	030 Call 0x1C17F20

Method: System.Void Linger(System.IntPtr handle)

Disassembly:
	0x036C67F4 LDR X8, [X8 + 0xB8]
	0x036C67F8 STR X22, [X8 + 0x10]
	0x036C67FC ADRP X8, 0xA79000
	0x036C6800 LDR X8, [X8 + 0xC70]
	0x036C6804 MOV X0, X20
	0x036C6808 MOV X1, X19
	0x036C680C LDR X2, [X8]
	0x036C6810 BL 0x229E5F8
	0x036C6814 LDR X8, [X21]
	0x036C6818 MOV X2, X0
	0x036C681C MOV X0, X21
	0x036C6820 MOV X1, X22
	0x036C6824 LDP X4, X3, [X8 + 0x188]
	0x036C6828 LDP X20, X19, [X31 + 0x30]
	0x036C682C LDP X22, X21, [X31 + 0x20]
	0x036C6830 LDP X24, X23, [X31 + 0x10]
	0x036C6834 LDR X30, [X31], #0x40
	0x036C6838 BR X4
	0x036C683C MOV X0, X21
	0x036C6840 BL 0x1C171E0
	0x036C6844 BL 0x1C16F20
	0x036C6848 STP X30, X21, [X31 - 0x20]!
	0x036C684C STP X20, X19, [X31 + 0x10]
	0x036C6850 ADRP X21, 0xD1A000
	0x036C6854 LDRB W8, [X21 + 0xA1D]
	0x036C6858 MOV X20, X1
	0x036C685C MOV X19, X0
	0x036C6860 TBNZ X8, 0x0, 0x36C68A8
	0x036C6864 ADRP X0, 0xA60000
	0x036C6868 LDR X0, [X0 + 0xCE8]
	0x036C686C BL 0x1C16CF4
	0x036C6870 ADRP X0, 0xA2E000
	0x036C6874 LDR X0, [X0 + 0x7B8]
	0x036C6878 BL 0x1C16CF4
	0x036C687C ADRP X0, 0xA60000
	0x036C6880 LDR X0, [X0 + 0xD18]
	0x036C6884 BL 0x1C16CF4
	0x036C6888 ADRP X0, 0xA60000
	0x036C688C LDR X0, [X0 + 0xD20]
	0x036C6890 BL 0x1C16CF4
	0x036C6894 ADRP X0, 0xA79000
	0x036C6898 LDR X0, [X0 + 0xC80]
	0x036C689C BL 0x1C16CF4
	0x036C68A0 MOVZ W8, 0x1
	0x036C68A4 STRB W8, [X21 + 0xA1D]
	0x036C68A8 CBZ X20, 0x36C6958
	0x036C68AC MOV X0, X20
	0x036C68B0 MOV X1, X19
	0x036C68B4 MOV X2, X31
	0x036C68B8 BL 0x36C4318
	0x036C68BC TBZ X0, 0x0, 0x36C68D0
	0x036C68C0 LDRH W8, [X19 + 0x98]
	0x036C68C4 MOVZ X1, 0x10000
	0x036C68C8 BFM X1, X8, 0x20, 0xF
	0x036C68CC B 0x36C6948
	0x036C68D0 LDR W21, [X19 + 0x38]
	0x036C68D4 LDR W20, [X19 + 0x40]
	0x036C68D8 MOV X0, X19
	0x036C68DC BL 0x36C62F4
	0x036C68E0 CBZ W20, 0x36C6940
	0x036C68E4 MOV X0, X19
	0x036C68E8 MOV W1, W20
	0x036C68EC BL 0x36C695C
	0x036C68F0 ADRP X8, 0xA2E000
	0x036C68F4 LDR X8, [X8 + 0x7B8]
	0x036C68F8 MOV X19, X0
	0x036C68FC LDR X8, [X8]
	0x036C6900 LDR W9, [X8 + 0xE0]
	0x036C6904 CBNZ W9, 0x36C6910
	0x036C6908 MOV X0, X8
	0x036C690C BL 0x1C16DFC
	0x036C6910 ADRP X8, 0xA60000
	0x036C6914 LDR X8, [X8 + 0xCE8]
	0x036C6918 MOV X0, X19
	0x036C691C LDR X1, [X8]
	0x036C6920 BL 0x2299DFC
	0x036C6924 MOV X19, X0
	0x036C6928 CBNZ X0, 0x36C6938
	0x036C692C MOVZ W0, 0x26
	0x036C6930 MOV X1, X31
	0x036C6934 BL 0x338F3E0
	0x036C6938 MOVZ X1, 0x10000
	0x036C693C B 0x36C6948
	0x036C6940 MOV X19, X31
	0x036C6944 ORR X1, X21, 0x1FFFFFFFFFFFF
	0x036C6948 MOV X0, X19
	0x036C694C LDP X20, X19, [X31 + 0x10]
	0x036C6950 LDP X30, X21, [X31], #0x20
	0x036C6954 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD1B000
	009 Move W8, [X21+2575]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA7A000
	017 Move X0, [X0+1784]
	018 Call 0x1C17CF4
	019 Move X0, 0xA37000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2575], W8
	024 Move [X31+12], W31
	025 Move W8, [X20+82]
	026 Compare W8, 0
	027 JumpIfEqual {94}
	028 Move W8, [X20+28]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X22, 0xA37000
	031 Move X22, [X22+1928]
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X2, X31, 12
	038 Move X0, X19
	039 Move W1, W31
	040 Call 0x1C8806C
	041 Move W8, [X31+12]
	042 Compare W8, 0
	043 JumpIfNotEqual {94}
	044 Move W21, [X20+28]
	045 Move W8, 0x4DD3
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction SMADDL not yet implemented."
	048 Move X9, X8
	049 ShiftRight X9, 63
	050 And X9, X9, 0x7FFFFFFF
	051 NotImplemented "Instruction SBFM not yet implemented."
	052 Add W20, W8, W9
	053 Move W8, 1000
	054 NotImplemented "Instruction MSUB not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X22]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move W8, 1000
	062 Multiply W2, W23, W8
	063 Add X3, X31, 12
	064 Move X0, X19
	065 Move W1, W31
	066 Call 0x1C87298
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X31+12]
	069 Compare W8, 0
	070 JumpIfEqual {72}
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, 0xA7A000
	073 Move X8, [X8+1784]
	074 Move X0, [X8]
	075 Call 0x1C17F10
	076 Move W1, 1
	077 Move W2, W20
	078 Move X3, X31
	079 Move X21, X0
	080 Call LingerOption..ctor, X0, X1, X2
	081 Move X0, [X22]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Add X6, X31, 12
	087 Move W1, 0xFFFF
	088 Move W2, 128
	089 Move X0, X19
	090 Move X3, X21
	091 Move X4, X31
	092 Move W5, W31
	093 Call 0x1C87DD8
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X30, [X31+16]
	099 Move X23, [X31+24]
	100 Add X31, X31, 64
	101 Return 

Method: System.Void ThrowIfDisposedAndClosed()

Disassembly:
	0x036C29E0 BL 0x1C16D08
	0x036C29E4 BL 0x1C16F10
	0x036C29E8 MOV X1, X19
	0x036C29EC MOV X2, X31
	0x036C29F0 MOV X20, X0
	0x036C29F4 BL 0x337DF1C
	0x036C29F8 ADRP X0, 0xA7D000
	0x036C29FC LDR X0, [X0 + 0xA80]
	0x036C2A00 BL 0x1C16D08
	0x036C2A04 MOV X1, X0
	0x036C2A08 MOV X0, X20
	0x036C2A0C BL 0x1C16DEC
	0x036C2A10 AND W2, W2, 0x1
	0x036C2A14 B 0x1C858B0
	0x036C2A18 STR X30, [X31 - 0x30]!
	0x036C2A1C STP X22, X21, [X31 + 0x10]
	0x036C2A20 STP X20, X19, [X31 + 0x20]
	0x036C2A24 ADRP X21, 0xD1E000
	0x036C2A28 LDRB W8, [X21 + 0x9E3]
	0x036C2A2C MOV X19, X1
	0x036C2A30 MOV X20, X0
	0x036C2A34 TBNZ X8, 0x0, 0x36C2A58
	0x036C2A38 ADRP X0, 0xA3E000
	0x036C2A3C LDR X0, [X0 + 0xBB8]
	0x036C2A40 BL 0x1C16CF4
	0x036C2A44 ADRP X0, 0xA3A000
	0x036C2A48 LDR X0, [X0 + 0x788]
	0x036C2A4C BL 0x1C16CF4
	0x036C2A50 MOVZ W8, 0x1
	0x036C2A54 STRB W8, [X21 + 0x9E3]
	0x036C2A58 MOV X0, X20
	0x036C2A5C STR W31, [X31 + 0xC]
	0x036C2A60 BL 0x36C19E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+84]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, [X0+24]
	007 Compare W8, 0
	008 JumpIfNotEqual {13}
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 
	013 Move X1, X31
	014 Call "il2cpp_vm_object_is_inst", X0
	015 Move X19, X0
	016 Call 0x19913C0
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+360]
	020 Move X1, [X8+368]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X19, X0
	023 Move X0, 0xA5B000
	024 Move X0, [X0+1208]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X1, X19
	028 Move X2, X31
	029 Move X20, X0
	030 Call ObjectDisposedException..ctor, X0, X1
	031 Move X0, 0xA7E000
	032 Move X0, [X0+2592]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X20
	036 Call 0x1C17DEC

Method: System.Void ThrowIfBufferNull(System.Byte[] buffer)

Disassembly:
	0x036C4D18 ADRP X0, 0xA7B000
	0x036C4D1C LDR X0, [X0 + 0xB48]
	0x036C4D20 BL 0x1C16CF4
	0x036C4D24 ADRP X0, 0xA7B000
	0x036C4D28 LDR X0, [X0 + 0x830]
	0x036C4D2C BL 0x1C16CF4
	0x036C4D30 MOVZ W8, 0x1
	0x036C4D34 STRB W8, [X21 + 0xA00]
	0x036C4D38 MOV X0, X19
	0x036C4D3C BL 0x36C19E0
	0x036C4D40 CBZ X20, 0x36C4F38
	0x036C4D44 ADRP X8, 0xA7B000
	0x036C4D48 LDR X8, [X8 + 0xB20]
	0x036C4D4C LDUR V0, [X20 + 0x58]
	0x036C4D50 ADD X0, X31, 0x0
	0x036C4D54 MOV X1, X31
	0x036C4D58 LDR X3, [X8]
	0x036C4D5C MOV X2, X31
	0x036C4D60 STR V0, [X31]
	0x036C4D64 BL 0x319E7D0
	0x036C4D68 LDR X21, [X20 + 0x78]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {4}
	003 Return 
	004 Move [X31-16], X30
	005 Move [X31-8], X19
	006 Move X0, 0xA35000
	007 Move X0, [X0+1320]
	008 Call 0x1C17D08
	009 Call 0x1C17F10
	010 Move X19, X0
	011 Move X0, 0xA5B000
	012 Move X0, [X0+3912]
	013 Call 0x1C17D08
	014 Move X1, X0
	015 Move X0, X19
	016 Move X2, X31
	017 Call ArgumentNullException..ctor, X0, X1
	018 Move X0, 0xA7C000
	019 Move X0, [X0+2792]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Call 0x1C17DEC

Method: System.Void ThrowIfBufferOutOfRange(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x036C4D6C TBZ X0, 0x0, 0x36C4D74
	0x036C4D70 CBZ X21, 0x36C4F3C
	0x036C4D74 ADRP X22, 0xA38000
	0x036C4D78 LDR X22, [X22 + 0x788]
	0x036C4D7C LDR X0, [X22]
	0x036C4D80 LDR W8, [X0 + 0xE0]
	0x036C4D84 CBNZ W8, 0x36C4D90
	0x036C4D88 BL 0x1C16DFC
	0x036C4D8C LDR X0, [X22]
	0x036C4D90 LDR X8, [X0 + 0xB8]
	0x036C4D94 ADRP X25, 0xA7B000
	0x036C4D98 LDR X2, [X8 + 0xA0]
	0x036C4D9C LDR X25, [X25 + 0x9F0]
	0x036C4DA0 CBZ X21, 0x36C4E1C
	0x036C4DA4 MOVZ W4, 0xB
	0x036C4DA8 MOV X0, X19
	0x036C4DAC MOV X1, X20
	0x036C4DB0 MOV X3, X20
	0x036C4DB4 BL 0x36C4510
	0x036C4DB8 LDR X0, [X20 + 0x28]
	0x036C4DBC CBZ X0, 0x36C4F38
	0x036C4DC0 LDR X8, [X20 + 0x78]
	0x036C4DC4 MOV X1, X31
	0x036C4DC8 STR X8, [X0 + 0x88]
	0x036C4DCC LDR X21, [X19 + 0x48]
	0x036C4DD0 BL 0x36CD068
	0x036C4DD4 LDR X8, [X22]
	0x036C4DD8 LDR X20, [X20 + 0x28]
	0x036C4DDC MOV X23, X0
	0x036C4DE0 LDR X8, [X8 + 0xB8]
	0x036C4DE4 LDR X22, [X8 + 0xA8]
	0x036C4DE8 LDR X8, [X25]
	0x036C4DEC MOV X0, X8
	0x036C4DF0 BL 0x1C16F10
	0x036C4DF4 MOVZ W1, 0x2
	0x036C4DF8 MOV X2, X22
	0x036C4DFC MOV X3, X20
	0x036C4E00 MOV X4, X31
	0x036C4E04 MOV X24, X0
	0x036C4E08 BL 0x362E5F8
	0x036C4E0C MOV X0, X19
	0x036C4E10 MOV X1, X21
	0x036C4E14 MOV X2, X23
	0x036C4E18 B 0x36C4F10
	0x036C4E1C MOVZ W4, 0x4
	0x036C4E20 MOV X0, X19
	0x036C4E24 MOV X1, X20
	0x036C4E28 MOV X3, X20
	0x036C4E2C BL 0x36C4510
	0x036C4E30 LDR X8, [X20 + 0x28]
	0x036C4E34 CBZ X8, 0x36C4F38
	0x036C4E38 LDUR V0, [X20 + 0x58]
	0x036C4E3C STR V0, [X8 + 0x5]
	0x036C4E40 LDR X0, [X20 + 0x28]
	0x036C4E44 CBZ X0, 0x36C4F38
	0x036C4E48 LDR V0, [X20 + 0x68]
	0x036C4E4C MOV X1, X31
	0x036C4E50 STR D0, [X0 + 0x60]
	0x036C4E54 LDR X21, [X19 + 0x48]
	0x036C4E58 BL 0x36CD068
	0x036C4E5C ADRP X26, 0xA7B000
	0x036C4E60 LDR X26, [X26 + 0x830]
	0x036C4E64 MOV X22, X0
	0x036C4E68 LDR X8, [X26]
	0x036C4E6C LDR W9, [X8 + 0xE0]
	0x036C4E70 CBNZ W9, 0x36C4E80
	0x036C4E74 MOV X0, X8
	0x036C4E78 BL 0x1C16DFC
	0x036C4E7C LDR X8, [X26]
	0x036C4E80 LDR X9, [X8 + 0xB8]
	0x036C4E84 LDR X23, [X9 + 0x50]
	0x036C4E88 CBNZ X23, 0x36C4EE0
	0x036C4E8C LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X2
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {21}
	008 Compare X1, 0
	009 JumpIfEqual {32}
	010 Move W8, [X1+24]
	011 Subtract W8, W8, W2
	012 Move TEMP, X3
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {44}
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 
	021 Move X0, 0xA38000
	022 Move X0, [X0+1888]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xA5F000
	027 Move X0, [X0+3472]
	028 Call 0x1C17D08
	029 Move X20, X0
	030 Move X0, 0xA7C000
	031 Move X0, [X0+2800]
	032 Call 0x1C17F20
	033 Move X0, 0xA38000
	034 Move X0, [X0+1888]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Move X0, 0xA5F000
	039 Move X0, [X0+3472]
	040 Call 0x1C17D08
	041 Move X20, X0
	042 Move X0, 0xA7C000
	043 Move X0, [X0+2808]
	044 Move X0, 0xA38000
	045 Move X0, [X0+1888]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0xA5B000
	050 Move X0, [X0+3984]
	051 Call 0x1C17D08
	052 Move X20, X0
	053 Move X0, 0xA7C000
	054 Move X0, [X0+2816]
	055 Move X0, 0xA38000
	056 Move X0, [X0+1888]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0xA5B000
	061 Move X0, [X0+3984]
	062 Call 0x1C17D08
	063 Move X20, X0
	064 Move X0, 0xA7C000
	065 Move X0, [X0+2824]
	066 Call 0x1C17D08
	067 Move X2, X0
	068 Move X0, X19
	069 Move X1, X20
	070 Move X3, X31
	071 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	072 Move X0, 0xA7C000
	073 Move X0, [X0+2832]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Call 0x1C17DEC

Method: System.Void ThrowIfUdp()

Disassembly:
	0x036C2DA8 STR W31, [X31 + 0xC]
	0x036C2DAC BL 0x36C19E0
	0x036C2DB0 LDRB W8, [X19 + 0x51]
	0x036C2DB4 CBZ W8, 0x36C2E04
	0x036C2DB8 ADRP X8, 0xA3A000
	0x036C2DBC LDR X8, [X8 + 0x788]
	0x036C2DC0 LDR X21, [X19 + 0x30]
	0x036C2DC4 LDR X0, [X8]
	0x036C2DC8 LDR W8, [X0 + 0xE0]
	0x036C2DCC CBNZ W8, 0x36C2DD4
	0x036C2DD0 BL 0x1C16DFC
	0x036C2DD4 ADD X2, X31, 0xC
	0x036C2DD8 MOV X0, X21
	0x036C2DDC MOV W1, W20
	0x036C2DE0 BL 0x36C2E58
	0x036C2DE4 LDR W20, [X31 + 0xC]
	0x036C2DE8 CBNZ W20, 0x36C2E20
	0x036C2DEC MOVZ W8, 0x1
	0x036C2DF0 STRB W8, [X19 + 0x19]
	0x036C2DF4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+40]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X30, [X31+16]
	006 Move X19, [X31+24]
	007 Return 
	008 Move X0, 0xA70000
	009 Move X0, [X0+216]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move W1, 0x273A
	013 Move X2, X31
	014 Move X19, X0
	015 Call SocketException..ctor, X0, X1
	016 Move X0, 0xA7E000
	017 Move X0, [X0+2608]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Call 0x1C17DEC

Method: System.Net.Sockets.SocketAsyncResult ValidateEndIAsyncResult(System.IAsyncResult ares, System.String methodName, System.String argName)

Disassembly:
	0x036C38D8 LDR W22, [X19 + 0x80]
	0x036C38DC LDR X24, [X8 + 0x20]
	0x036C38E0 LDR X0, [X26]
	0x036C38E4 BL 0x1C16F10
	0x036C38E8 MOV X23, X0
	0x036C38EC MOV X1, X24
	0x036C38F0 MOV W2, W22
	0x036C38F4 MOV X3, X31
	0x036C38F8 BL 0x366E898
	0x036C38FC STR X23, [X19 + 0x48]
	0x036C3900 CBZ X23, 0x36C3978
	0x036C3904 LDR X8, [X23]
	0x036C3908 LDR X22, [X19 + 0x30]
	0x036C390C LDP X9, X1, [X8 + 0x178]
	0x036C3910 MOV X0, X23
	0x036C3914 BLR X9
	0x036C3918 CBZ X22, 0x36C3980
	0x036C391C LDR W8, [X22 + 0x20]
	0x036C3920 CMP W8, W0
	0x036C3924 B.NE 0x36C3944
	0x036C3928 LDR X0, [X27]
	0x036C392C LDR W8, [X0 + 0xE0]
	0x036C3930 CBNZ W8, 0x36C3938
	0x036C3934 BL 0x1C16DFC
	0x036C3938 MOV X0, X19
	0x036C393C BL 0x36C3408
	0x036C3940 B 0x36C39F4
	0x036C3944 CMP W0, 0x2
	0x036C3948 B.NE 0x36C3960
	0x036C394C CMP W8, 0x17
	0x036C3950 B.NE 0x36C3960
	0x036C3954 MOV X0, X22
	0x036C3958 BL 0x36BF538
	0x036C395C TBNZ X0, 0x0, 0x36C3928
	0x036C3960 LDR X8, [X19 + 0x78]
	0x036C3964 ADD X25, X25, 0x1
	0x036C3968 CBNZ X8, 0x36C38B4
	0x036C396C B 0x36C3A10
	0x036C3970 BL 0x1C16F28
	0x036C3974 B 0x36C3A14
	0x036C3978 BL 0x1C16F20
	0x036C397C B 0x36C3A34
	0x036C3980 BL 0x1C16F20
	0x036C3984 B 0x36C3A34
	0x036C3988 B 0x36C39A0
	0x036C398C B 0x36C39A0
	0x036C3990 B 0x36C39A0
	0x036C3994 B 0x36C39A0
	0x036C3998 B 0x36C39A0
	0x036C399C B 0x36C39A0
	0x036C39A0 MOV X21, X0
	0x036C39A4 CMP W1, 0x1
	0x036C39A8 B.NE 0x36C3A40
	0x036C39AC MOV X0, X21
	0x036C39B0 BL 0x3EB1AD0
	0x036C39B4 MOV X21, X0
	0x036C39B8 MOV X0, X20
	0x036C39BC BL 0x1C16D08
	0x036C39C0 LDR X8, [X21]
	0x036C39C4 LDR X1, [X8]
	0x036C39C8 BL 0x1C17270
	0x036C39CC TBZ X0, 0x0, 0x36C3A14
	0x036C39D0 LDR X21, [X21]
	0x036C39D4 BL 0x3EB1AE0
	0x036C39D8 B 0x36C3960
	0x036C39DC MOVZ W2, 0x1
	0x036C39E0 MOV X0, X19
	0x036C39E4 MOV X1, X21
	0x036C39E8 MOV X3, X31
	0x036C39EC BL 0x36CD298
	0x036C39F0 MOV W0, W31
	0x036C39F4 LDP X20, X19, [X31 + 0x40]
	0x036C39F8 LDP X22, X21, [X31 + 0x30]
	0x036C39FC LDP X24, X23, [X31 + 0x20]
	0x036C3A00 LDP X26, X25, [X31 + 0x10]
	0x036C3A04 AND W0, W0, 0x1
	0x036C3A08 LDP X30, X27, [X31], #0x50
	0x036C3A0C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD1E000
	007 Move W8, [X22+2576]
	008 Move X19, X3
	009 Move X20, X2
	010 Move X21, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA7C000
	016 Move X0, [X0+4024]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2576], W8
	020 Compare X21, 0
	021 JumpIfEqual {40}
	022 Move X8, 0xA7C000
	023 Move X8, [X8+4024]
	024 Move X9, [X21]
	025 Move X8, [X8]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X0, X21, 168
	028 Move W1, 1
	029 Move W2, W31
	030 Move X3, X31
	031 Call Interlocked.CompareExchange, X0, X1, X2
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X21
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return X0
	040 Move X0, 0xA36000
	041 Move X0, [X0+1320]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X1, X19
	045 Move X2, X31
	046 Move X20, X0
	047 Call ArgumentNullException..ctor, X0, X1
	048 Move X0, 0xA39000
	049 Move X0, [X0+1400]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X20, X0
	053 Move X0, 0xA65000
	054 Move X0, [X0+1560]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X20
	058 Move X2, X19
	059 Move X3, X31
	060 Call ArgumentException..ctor, X0, X1, X2
	061 Move X0, 0xA7D000
	062 Move X0, [X0+2680]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X20
	066 Move X2, X31
	067 Call String.Concat, X0, X1
	068 Move X19, X0
	069 Move X0, 0xA31000
	070 Move X0, [X0+1456]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X1, X19
	074 Move X2, X31
	075 Move X20, X0
	076 Call InvalidOperationException..ctor, X0, X1
	077 Move X0, 0xA7D000
	078 Move X0, [X0+2688]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X20
	082 Call 0x1C17DEC

Method: System.Void QueueIOSelectorJob(System.Threading.SemaphoreSlim sem, System.IntPtr handle, System.IOSelectorJob job)

Disassembly:
	0x036C3680 MOV X20, X0
	0x036C3684 MOVZ W1, 0x2741
	0x036C3688 MOV X2, X31
	0x036C368C BL 0x36C6F04
	0x036C3690 MOVZ W2, 0x1
	0x036C3694 MOV X0, X19
	0x036C3698 MOV X1, X20
	0x036C369C MOV X3, X31
	0x036C36A0 BL 0x36CD298
	0x036C36A4 MOV W0, W31
	0x036C36A8 LDP X20, X19, [X31 + 0x30]
	0x036C36AC LDP X22, X21, [X31 + 0x20]
	0x036C36B0 LDP X24, X23, [X31 + 0x10]
	0x036C36B4 LDR X30, [X31], #0x40
	0x036C36B8 RET
	0x036C36BC LDR X0, [X19 + 0x30]
	0x036C36C0 CBZ X0, 0x36C3840
	0x036C36C4 LDRB W23, [X0 + 0x50]
	0x036C36C8 CBZ W23, 0x36C36DC
	0x036C36CC MOV W1, W31
	0x036C36D0 BL 0x36C1BB0
	0x036C36D4 LDR X0, [X19 + 0x30]
	0x036C36D8 CBZ X0, 0x36C3840
	0x036C36DC LDR X8, [X20]
	0x036C36E0 LDR X21, [X0 + 0x30]
	0x036C36E4 MOV X0, X20
	0x036C36E8 LDP X9, X1, [X8 + 0x188]
	0x036C36EC BLR X9
	0x036C36F0 ADRP X22, 0xA39000
	0x036C36F4 LDR X22, [X22 + 0x788]
	0x036C36F8 MOV X20, X0
	0x036C36FC LDR X8, [X22]
	0x036C3700 LDR W9, [X8 + 0xE0]
	0x036C3704 CBNZ W9, 0x36C3710
	0x036C3708 MOV X0, X8
	0x036C370C BL 0x1C16DFC
	0x036C3710 ADD X2, X31, 0xC
	0x036C3714 MOV X0, X21
	0x036C3718 MOV X1, X20
	0x036C371C MOV W3, W31
	0x036C3720 BL 0x36C3028
	0x036C3724 CBZ W23, 0x36C3738
	0x036C3728 LDR X0, [X19 + 0x30]
	0x036C372C CBZ X0, 0x36C3840
	0x036C3730 MOVZ W1, 0x1
	0x036C3734 BL 0x36C1BB0
	0x036C3738 LDR W20, [X31 + 0xC]
	0x036C373C LDR X8, [X19 + 0x30]
	0x036C3740 CBZ W20, 0x36C37D4
	0x036C3744 CBZ X8, 0x36C3840
	0x036C3748 MOVN W9, 0x2732
	0x036C374C ADD W9, W20, W9
	0x036C3750 CMP W9, 0x2
	0x036C3754 STURH W31, [X8 + 0x51]
	0x036C3758 B.CS 0x36C37F4
	0x036C375C MOVZ W9, 0x1
	0x036C3760 MOV X0, X19
	0x036C3764 MOV X1, X31
	0x036C3768 STRB W9, [X8 + 0x58]
	0x036C376C BL 0x36CD068
	0x036C3770 LDR X8, [X22]
	0x036C3774 MOV X20, X0
	0x036C3778 LDR W9, [X8 + 0xE0]
	0x036C377C CBNZ W9, 0x36C378C
	0x036C3780 MOV X0, X8
	0x036C3784 BL 0x1C16DFC
	0x036C3788 LDR X8, [X22]
	0x036C378C ADRP X9, 0xA7C000
	0x036C3790 LDR X8, [X8 + 0xB8]
	0x036C3794 LDR X9, [X9 + 0x9F0]
	0x036C3798 LDR X21, [X8 + 0x60]
	0x036C379C LDR X0, [X9]
	0x036C37A0 BL 0x1C16F10
	0x036C37A4 MOVZ W1, 0x2
	0x036C37A8 MOV X2, X21
	0x036C37AC MOV X3, X19
	0x036C37B0 MOV X4, X31
	0x036C37B4 MOV X22, X0
	0x036C37B8 BL 0x362E5F8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD1E000
	009 Move X24, 0xA7D000
	010 Move W8, [X20+2577]
	011 Move X24, [X24+2648]
	012 Move X23, X3
	013 Move X22, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xA3D000
	021 Move X0, [X0+1808]
	022 Call 0x1C17CF4
	023 Move X0, 0xA7D000
	024 Move X0, [X0+2656]
	025 Call 0x1C17CF4
	026 Move X0, 0xA7D000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2577], W8
	031 Move X0, [X24]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call <>c__DisplayClass355_0..ctor, X0
	036 Compare X20, 0
	037 JumpIfEqual {105}
	038 Move [X20+16], X19
	039 Move [X20+24], X23
	040 Move [X20+32], X22
	041 Compare X21, 0
	042 JumpIfEqual {105}
	043 Move X0, X21
	044 Move X1, X31
	045 Call SemaphoreSlim.WaitAsync, X0
	046 Compare X0, 0
	047 JumpIfEqual {105}
	048 Move X1, X31
	049 Move X21, X0
	050 Call Task.get_IsCompleted, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {70}
	055 Move W8, [X19+84]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X20+24]
	058 Compare X0, 0
	059 JumpIfEqual {105}
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X1, X31
	067 Move X30, [X31+64]
	068 Call IOSelectorJob.MarkDisposed, X0
	069 Return 
	070 Move X8, 0xA3D000
	071 Move X8, [X8+1808]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X8, 0xA7D000
	075 Move X8, [X8+2656]
	076 Move X1, X20
	077 Move X3, X31
	078 Move X19, X0
	079 Move X2, [X8]
	080 Call Action`1<Object>..ctor, X0, X1, X2
	081 Move X0, X21
	082 Move X1, X19
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X2, X31
	090 Move X30, [X31+64]
	091 Call Task.ContinueWith, X0, X1
	092 Return 
	093 Move X1, [X20+24]
	094 Move X0, [X20+32]
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X2, X31
	102 Move X30, [X31+64]
	103 Call IOSelector.Add, X0, X1
	104 Return 
	105 Call 0x1C17F20

Method: System.Void InitSocketAsyncEventArgs(System.Net.Sockets.SocketAsyncEventArgs e, System.AsyncCallback callback, System.Object state, System.Net.Sockets.SocketOperation operation)

Disassembly:
	0x036C5510 BL 0x1C16F18
	0x036C5514 BL 0x1990590
	0x036C5518 B 0x1C860D0
	0x036C551C AND W3, W3, 0x1
	0x036C5520 B 0x36BF2D0
	0x036C5524 B 0x1C86DD8
	0x036C5528 STR X30, [X31 - 0x40]!
	0x036C552C STP X24, X23, [X31 + 0x10]
	0x036C5530 STP X22, X21, [X31 + 0x20]
	0x036C5534 STP X20, X19, [X31 + 0x30]
	0x036C5538 ADRP X24, 0xD1B000
	0x036C553C LDRB W8, [X24 + 0xA0C]
	0x036C5540 MOV X20, X4
	0x036C5544 MOV X21, X3
	0x036C5548 MOV X22, X2
	0x036C554C MOV W23, W1
	0x036C5550 MOV X19, X0
	0x036C5554 TBNZ X8, 0x0, 0x36C556C
	0x036C5558 ADRP X0, 0xA37000
	0x036C555C LDR X0, [X0 + 0x788]
	0x036C5560 BL 0x1C16CF4
	0x036C5564 MOVZ W8, 0x1
	0x036C5568 STRB W8, [X24 + 0xA0C]
	0x036C556C STRB W31, [X31 + 0xC]
	0x036C5570 CBZ X19, 0x36C55F0
	0x036C5574 ADD X1, X31, 0xC
	0x036C5578 MOV X0, X19
	0x036C557C MOV X2, X31
	0x036C5580 BL 0x32BF948
	0x036C5584 ADRP X8, 0xA37000
	0x036C5588 LDR X8, [X8 + 0x788]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {40}
	007 Move X21, X0
	008 Move X0, [X1+40]
	009 Move X19, X1
	010 Compare X0, 0
	011 JumpIfEqual {40}
	012 Move X1, X21
	013 Move X5, X31
	014 Move W20, W4
	015 Call SocketAsyncResult.Init, X0, X1, X2, X3, X4
	016 Move X8, [X19+48]
	017 Compare X8, 0
	018 JumpIfEqual {23}
	019 Move X9, [X19+40]
	020 Compare X9, 0
	021 JumpIfEqual {40}
	022 Move [X9+112], X8
	023 Move W1, W20
	024 Move [X19+32], X21
	025 Call Socket.SocketOperationToSocketAsyncOperation, X0, X1
	026 Move W1, W0
	027 Move X0, X19
	028 Move X2, X31
	029 Call SocketAsyncEventArgs.SetLastOperation, X0, X1
	030 Move [X19+64], W31
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W1, W31
	035 Move X2, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call SocketAsyncEventArgs.SetBytesTransferred, X0, X1
	039 Return 
	040 Call 0x1C17F20

Method: System.Net.Sockets.SocketAsyncOperation SocketOperationToSocketAsyncOperation(System.Net.Sockets.SocketOperation op)

Disassembly:
	0x036C6958 BL 0x1C16F20
	0x036C695C STR X30, [X31 - 0x30]!
	0x036C6960 STP X22, X21, [X31 + 0x10]
	0x036C6964 STP X20, X19, [X31 + 0x20]
	0x036C6968 ADRP X19, 0xD1A000
	0x036C696C ADRP X22, 0xA6B000
	0x036C6970 LDRB W8, [X19 + 0xA22]
	0x036C6974 LDR X22, [X22 + 0xD8]
	0x036C6978 MOV W21, W1
	0x036C697C MOV X20, X0
	0x036C6980 TBNZ X8, 0x0, 0x36C69B0
	0x036C6984 ADRP X0, 0xA5B000
	0x036C6988 LDR X0, [X0 + 0x7A8]
	0x036C698C BL 0x1C16CF4
	0x036C6990 ADRP X0, 0xA6B000
	0x036C6994 LDR X0, [X0 + 0xD8]
	0x036C6998 BL 0x1C16CF4
	0x036C699C ADRP X0, 0xA79000
	0x036C69A0 LDR X0, [X0 + 0x760]
	0x036C69A4 BL 0x1C16CF4
	0x036C69A8 MOVZ W8, 0x1
	0x036C69AC STRB W8, [X19 + 0xA22]
	0x036C69B0 LDR X0, [X22]
	0x036C69B4 BL 0x1C16F10
	0x036C69B8 MOV W1, W21
	0x036C69BC MOV X2, X31
	0x036C69C0 MOV X19, X0
	0x036C69C4 BL 0x3661664
	0x036C69C8 LDRB W8, [X20 + 0x9A]
	0x036C69CC CBZ W8, 0x36C6A30
	0x036C69D0 CBZ X19, 0x36C6A44
	0x036C69D4 LDR X8, [X19]
	0x036C69D8 ADRP X20, 0xA79000
	0x036C69DC ADRP X21, 0xA5B000
	0x036C69E0 MOV X0, X19
	0x036C69E4 LDP X9, X1, [X8 + 0x188]
	0x036C69E8 LDR X20, [X20 + 0x760]
	0x036C69EC LDR X21, [X21 + 0x7A8]
	0x036C69F0 BLR X9
	0x036C69F4 LDR X8, [X20]
	0x036C69F8 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, 3391
	006 NotImplemented "Instruction LSRV not yet implemented."
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {18}
	011 Move X8, -45277184
	012 Add X8, X8, 1996
	013 Move W0, [X8]
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return X0
	018 Move [X31+12], W1
	019 Move X0, 0xA7A000
	020 Move X0, [X0+2936]
	021 Call 0x1C17D08
	022 Add X1, X31, 12
	023 Call 0x1C17E04
	024 Move X19, X0
	025 Move X0, 0xA7A000
	026 Move X0, [X0+2944]
	027 Call 0x1C17D08
	028 Move X1, X19
	029 Move X2, X31
	030 Call String.Format, X0, X1
	031 Move X19, X0
	032 Move X0, 0xA37000
	033 Move X0, [X0+1880]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X1, X19
	037 Move X2, X31
	038 Move X20, X0
	039 Call NotImplementedException..ctor, X0, X1
	040 Move X0, 0xA7A000
	041 Move X0, [X0+2952]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X20
	045 Call 0x1C17DEC

Method: System.Net.IPEndPoint RemapIPEndPoint(System.Net.IPEndPoint input)

Disassembly:
	0x036C3B88 BL 0x32BF948
	0x036C3B8C ADRP X8, 0xA39000
	0x036C3B90 LDR X8, [X8 + 0x788]
	0x036C3B94 LDR X22, [X19 + 0x10]
	0x036C3B98 LDR X0, [X8]
	0x036C3B9C LDR W8, [X0 + 0xE0]
	0x036C3BA0 CBNZ W8, 0x36C3BA8
	0x036C3BA4 BL 0x1C16DFC
	0x036C3BA8 AND W1, W21, 0x1
	0x036C3BAC MOV X0, X22
	0x036C3BB0 MOV X2, X20
	0x036C3BB4 BL 0x1C86058
	0x036C3BB8 LDRB W8, [X31 + 0xC]
	0x036C3BBC CBZ W8, 0x36C3BD4
	0x036C3BC0 MOV X20, X31
	0x036C3BC4 MOV X0, X19
	0x036C3BC8 MOV X1, X31
	0x036C3BCC BL 0x32BFAB4
	0x036C3BD0 CBNZ X20, 0x36C3BE8
	0x036C3BD4 LDP X20, X19, [X31 + 0x20]
	0x036C3BD8 LDP X22, X21, [X31 + 0x10]
	0x036C3BDC LDR X30, [X31], #0x30
	0x036C3BE0 RET
	0x036C3BE4 BL 0x1C16F20
	0x036C3BE8 MOV X0, X20
	0x036C3BEC BL 0x1C16F18
	0x036C3BF0 B 0x36C3BF4
	0x036C3BF4 MOV X21, X0
	0x036C3BF8 CMP W1, 0x1
	0x036C3BFC B.NE 0x36C3C20
	0x036C3C00 MOV X0, X21
	0x036C3C04 BL 0x3EB1AD0
	0x036C3C08 LDR X20, [X0]
	0x036C3C0C BL 0x3EB1AE0
	0x036C3C10 LDRB W8, [X31 + 0xC]
	0x036C3C14 CBZ W8, 0x36C3BD0
	0x036C3C18 CBNZ X19, 0x36C3BC4
	0x036C3C1C BL 0x1C16F20
	0x036C3C20 MOV X20, X31
	0x036C3C24 B 0x36C3C2C
	0x036C3C28 MOV X21, X0
	0x036C3C2C LDRB W8, [X31 + 0xC]
	0x036C3C30 CBZ W8, 0x36C3C48
	0x036C3C34 CBNZ X19, 0x36C3C3C
	0x036C3C38 BL 0x1C16F20
	0x036C3C3C MOV X0, X19
	0x036C3C40 MOV X1, X31
	0x036C3C44 BL 0x32BFAB4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD1E000
	006 Move W8, [X21+2578]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA3E000
	014 Move X0, [X0+3000]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2578], W8
	018 Move W8, [X20+32]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X20
	021 Call Socket.get_DualMode, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {52}
	026 Compare X19, 0
	027 JumpIfEqual {58}
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+376]
	031 Move X1, [X8+384]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X19+16]
	035 Compare X0, 0
	036 JumpIfEqual {58}
	037 Move X1, X31
	038 Call IPAddress.MapToIPv6, X0
	039 Move X8, 0xA3E000
	040 Move W19, [X19+24]
	041 Move X8, [X8+3000]
	042 Move X20, X0
	043 Move X8, [X8]
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, X20
	047 Move W2, W19
	048 Move X3, X31
	049 Move X21, X0
	050 Call IPEndPoint..ctor, X0, X1, X2
	051 Move X0, X21
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void cancel_blocking_socket_operation(System.Threading.Thread thread)

Disassembly:
	0x036C69FC MOV X2, X31

ISIL:
	001 Call 0x1C884E8
	002 Return 

Method: System.Int32 get_FamilyHint()

Disassembly:
	0x036C6A00 MOV X0, X8
	0x036C6A04 BL 0x32094D4
	0x036C6A08 LDR X8, [X21]
	0x036C6A0C MOV X20, X0
	0x036C6A10 MOV X0, X8
	0x036C6A14 BL 0x1C16F10
	0x036C6A18 MOV X1, X20
	0x036C6A1C MOV X2, X19
	0x036C6A20 MOV X3, X31
	0x036C6A24 MOV X21, X0
	0x036C6A28 BL 0x32E2390
	0x036C6A2C MOV X19, X21
	0x036C6A30 MOV X0, X19
	0x036C6A34 LDP X20, X19, [X31 + 0x20]
	0x036C6A38 LDP X22, X21, [X31 + 0x10]
	0x036C6A3C LDR X30, [X31], #0x30
	0x036C6A40 RET
	0x036C6A44 BL 0x1C16F20
	0x036C6A48 STP X30, X21, [X31 - 0x20]!
	0x036C6A4C STP X20, X19, [X31 + 0x10]
	0x036C6A50 ADRP X21, 0xD1A000
	0x036C6A54 LDRB W8, [X21 + 0xA1E]
	0x036C6A58 MOV X20, X1
	0x036C6A5C MOV X19, X0
	0x036C6A60 TBNZ X8, 0x0, 0x36C6A78
	0x036C6A64 ADRP X0, 0xA2E000
	0x036C6A68 LDR X0, [X0 + 0x7B8]
	0x036C6A6C BL 0x1C16CF4
	0x036C6A70 MOVZ W8, 0x1
	0x036C6A74 STRB W8, [X21 + 0xA1E]
	0x036C6A78 CBZ X20, 0x36C6B18
	0x036C6A7C MOV X0, X20
	0x036C6A80 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD1B000
	005 Move X19, 0xA37000
	006 Move W8, [X20+2579]
	007 Move X19, [X19+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA37000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2579], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call Socket.get_OSSupportsIPv4
	023 Move X8, [X19]
	024 Move W19, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Call Socket.get_OSSupportsIPv6
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {38}
	035 And W31, W19, 1
	036 Move W8, 2
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 And W0, W19, 1
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Boolean IsProtocolSupported_internal(System.Net.NetworkInformation.NetworkInterfaceComponent networkInterface)

Disassembly:
	0x036C6A84 MOV X2, X31

ISIL:
	001 Call 0x1C4DAE4
	002 Return X0

Method: System.Boolean IsProtocolSupported(System.Net.NetworkInformation.NetworkInterfaceComponent networkInterface)

Disassembly:
	0x036C2490 STR D0, [X19 + 0x20]
	0x036C2494 LDR W8, [X20 + 0x28]
	0x036C2498 STR X0, [X19 + 0x30]
	0x036C249C STRB W9, [X19 + 0x52]
	0x036C24A0 MOV X0, X19
	0x036C24A4 STR W8, [X19 + 0x28]
	0x036C24A8 LDR X8, [X20 + 0x38]
	0x036C24AC STR X8, [X19 + 0x38]
	0x036C24B0 LDRB W1, [X20 + 0x50]
	0x036C24B4 BL 0x36C1BB0
	0x036C24B8 LDP X20, X19, [X31 + 0x20]
	0x036C24BC LDP X22, X21, [X31 + 0x10]
	0x036C24C0 LDR X30, [X31], #0x30
	0x036C24C4 RET
	0x036C24C8 MOV W19, W8
	0x036C24CC LDRB W8, [X20 + 0x18]
	0x036C24D0 CBZ W8, 0x36C24E0
	0x036C24D4 MOVZ W8, 0x2714
	0x036C24D8 MOVZ W19, 0x2714
	0x036C24DC STR W8, [X31 + 0xC]
	0x036C24E0 ADRP X0, 0xA6F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD1F000
	006 Move X21, 0xA3B000
	007 Move W8, [X20+2580]
	008 Move X21, [X21+1928]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA3B000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2580], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x1C4DAE4
	030 Return X0

Method: System.Void .cctor()

Disassembly:
	0x036C6A88 BL 0x36C4CBC
	0x036C6A8C TBZ X0, 0x0, 0x36C6A9C
	0x036C6A90 LDRH W8, [X19 + 0x98]
	0x036C6A94 ORR X1, X8, 0x1FFFF
	0x036C6A98 B 0x36C6B08
	0x036C6A9C LDR W20, [X19 + 0x40]
	0x036C6AA0 MOV X0, X19
	0x036C6AA4 BL 0x36C62F4
	0x036C6AA8 CBZ W20, 0x36C6B00
	0x036C6AAC MOV X0, X19
	0x036C6AB0 MOV W1, W20
	0x036C6AB4 BL 0x36C695C
	0x036C6AB8 ADRP X8, 0xA2E000
	0x036C6ABC LDR X8, [X8 + 0x7B8]
	0x036C6AC0 MOV X19, X0
	0x036C6AC4 LDR X8, [X8]
	0x036C6AC8 LDR W9, [X8 + 0xE0]
	0x036C6ACC CBNZ W9, 0x36C6AD8
	0x036C6AD0 MOV X0, X8
	0x036C6AD4 BL 0x1C16DFC
	0x036C6AD8 MOV X0, X19
	0x036C6ADC MOV X1, X31
	0x036C6AE0 BL 0x33EDAC4
	0x036C6AE4 MOV X19, X0
	0x036C6AE8 CBNZ X0, 0x36C6AF8
	0x036C6AEC MOVZ W0, 0x26
	0x036C6AF0 MOV X1, X31
	0x036C6AF4 BL 0x338F3E0
	0x036C6AF8 MOVZ W1, 0x10000
	0x036C6AFC B 0x36C6B08
	0x036C6B00 MOV X19, X31
	0x036C6B04 MOV X1, X31
	0x036C6B08 MOV X0, X19
	0x036C6B0C LDP X20, X19, [X31 + 0x10]
	0x036C6B10 LDP X30, X21, [X31], #0x20
	0x036C6B14 RET
	0x036C6B18 BL 0x1C16F20
	0x036C6B1C STP X30, X21, [X31 - 0x20]!
	0x036C6B20 STP X20, X19, [X31 + 0x10]
	0x036C6B24 ADRP X21, 0xD1A000
	0x036C6B28 LDRB W8, [X21 + 0xA1F]
	0x036C6B2C MOV W20, W1
	0x036C6B30 MOV X19, X0
	0x036C6B34 TBNZ X8, 0x0, 0x36C6B4C
	0x036C6B38 ADRP X0, 0xA79000
	0x036C6B3C LDR X0, [X0 + 0xC48]
	0x036C6B40 BL 0x1C16CF4
	0x036C6B44 MOVZ W8, 0x1
	0x036C6B48 STRB W8, [X21 + 0xA1F]
	0x036C6B4C LDRH W8, [X19 + 0x98]
	0x036C6B50 CMP W8, W20, UXTH
	0x036C6B54 B.NE 0x36C6BAC
	0x036C6B58 ADRP X21, 0xA79000
	0x036C6B5C LDR X21, [X21 + 0xC48]
	0x036C6B60 LDR X20, [X19 + 0x80]
	0x036C6B64 LDR X0, [X21]
	0x036C6B68 LDR W8, [X0 + 0xE0]
	0x036C6B6C CBNZ W8, 0x36C6B78
	0x036C6B70 BL 0x1C16DFC
	0x036C6B74 LDR X0, [X21]
	0x036C6B78 LDR X8, [X0 + 0xB8]
	0x036C6B7C LDR X8, [X8 + 0x8]
	0x036C6B80 CMP X20, X8
	0x036C6B84 B.EQ 0x36C6B90
	0x036C6B88 MOV W0, W31
	0x036C6B8C B 0x36C6BA0
	0x036C6B90 LDR W8, [X19 + 0x40]
	0x036C6B94 CMP W8, 0x0
	0x036C6B98 MOVZ W8, 0x1
	0x036C6B9C CINC W0, W8, NE
	0x036C6BA0 LDP X20, X19, [X31 + 0x10]
	0x036C6BA4 LDP X30, X21, [X31], #0x20
	0x036C6BA8 RET
	0x036C6BAC BL 0x36C6BB0
	0x036C6BB0 STP X30, X19, [X31 - 0x10]!
	0x036C6BB4 ADRP X0, 0xA2D000
	0x036C6BB8 LDR X0, [X0 + 0x5B0]
	0x036C6BBC BL 0x1C16D08
	0x036C6BC0 BL 0x1C16F10
	0x036C6BC4 MOV X19, X0
	0x036C6BC8 ADRP X0, 0xA79000
	0x036C6BCC LDR X0, [X0 + 0xC88]
	0x036C6BD0 BL 0x1C16D08
	0x036C6BD4 MOV X1, X0
	0x036C6BD8 MOV X0, X19
	0x036C6BDC MOV X2, X31
	0x036C6BE0 BL 0x337DF1C
	0x036C6BE4 ADRP X0, 0xA79000
	0x036C6BE8 LDR X0, [X0 + 0xC90]
	0x036C6BEC BL 0x1C16D08
	0x036C6BF0 MOV X1, X0
	0x036C6BF4 MOV X0, X19
	0x036C6BF8 BL 0x1C16DEC
	0x036C6BFC STP X30, X25, [X31 - 0x40]!
	0x036C6C00 STP X24, X23, [X31 + 0x10]
	0x036C6C04 STP X22, X21, [X31 + 0x20]
	0x036C6C08 STP X20, X19, [X31 + 0x30]
	0x036C6C0C ADRP X24, 0xD1A000
	0x036C6C10 LDRB W8, [X24 + 0xA20]
	0x036C6C14 MOV W22, W4
	0x036C6C18 MOV W23, W3
	0x036C6C1C MOV X19, X2
	0x036C6C20 MOV X20, X1
	0x036C6C24 MOV X21, X0
	0x036C6C28 TBNZ X8, 0x0, 0x36C6C70
	0x036C6C2C ADRP X0, 0xA79000
	0x036C6C30 LDR X0, [X0 + 0xC48]
	0x036C6C34 BL 0x1C16CF4
	0x036C6C38 ADRP X0, 0xA55000
	0x036C6C3C LDR X0, [X0 + 0x580]
	0x036C6C40 BL 0x1C16CF4
	0x036C6C44 ADRP X0, 0xA5F000
	0x036C6C48 LDR X0, [X0 + 0x958]
	0x036C6C4C BL 0x1C16CF4
	0x036C6C50 ADRP X0, 0xA35000
	0x036C6C54 LDR X0, [X0 + 0x7E8]
	0x036C6C58 BL 0x1C16CF4
	0x036C6C5C ADRP X0, 0xA2D000
	0x036C6C60 LDR X0, [X0 + 0x6C0]
	0x036C6C64 BL 0x1C16CF4
	0x036C6C68 MOVZ W8, 0x1
	0x036C6C6C STRB W8, [X24 + 0xA20]
	0x036C6C70 LDRH W8, [X21 + 0x98]
	0x036C6C74 CMP W8, W23, UXTH
	0x036C6C78 B.NE 0x36C6E04
	0x036C6C7C TBZ X22, 0x1, 0x36C6CA4
	0x036C6C80 ADRP X8, 0xA55000
	0x036C6C84 LDR X8, [X8 + 0x580]
	0x036C6C88 LDR X0, [X8]
	0x036C6C8C LDR W8, [X0 + 0xE0]
	0x036C6C90 CBNZ W8, 0x36C6C98
	0x036C6C94 BL 0x1C16DFC
	0x036C6C98 MOV X0, X31
	0x036C6C9C BL 0x33DD730
	0x036C6CA0 STR X0, [X21 + 0x88]
	0x036C6CA4 ADRP X25, 0xA79000
	0x036C6CA8 LDR X25, [X25 + 0xC48]
	0x036C6CAC TBZ X22, 0x0, 0x36C6D80
	0x036C6CB0 MOV X0, X31
	0x036C6CB4 BL 0x33DD700
	0x036C6CB8 CBZ X0, 0x36C6D14
	0x036C6CBC MOV X1, X31
	0x036C6CC0 MOV X22, X0
	0x036C6CC4 BL 0x33BE520
	0x036C6CC8 ADRP X8, 0xA2D000
	0x036C6CCC LDR X8, [X8 + 0x6C0]
	0x036C6CD0 ADRP X9, 0xA5F000
	0x036C6CD4 MOV X23, X0
	0x036C6CD8 LDR X8, [X8]
	0x036C6CDC LDR X9, [X9 + 0x958]
	0x036C6CE0 LDR W10, [X8 + 0xE0]
	0x036C6CE4 LDR X24, [X9]
	0x036C6CE8 CBNZ W10, 0x36C6CF4
	0x036C6CEC MOV X0, X8
	0x036C6CF0 BL 0x1C16DFC
	0x036C6CF4 MOV X0, X24
	0x036C6CF8 MOV X1, X31
	0x036C6CFC BL 0x338C698
	0x036C6D00 MOV X1, X0
	0x036C6D04 MOV X0, X23
	0x036C6D08 MOV X2, X31
	0x036C6D0C BL 0x3395F0C
	0x036C6D10 TBNZ X0, 0x0, 0x36C6D7C
	0x036C6D14 ADRP X23, 0xA35000
	0x036C6D18 LDR X23, [X23 + 0x7E8]
	0x036C6D1C LDR X0, [X23]
	0x036C6D20 LDR W8, [X0 + 0xE0]
	0x036C6D24 CBNZ W8, 0x36C6D2C
	0x036C6D28 BL 0x1C16DFC
	0x036C6D2C MOV X0, X31
	0x036C6D30 BL 0x33F4008
	0x036C6D34 ADRP X24, 0xD13000
	0x036C6D38 LDRB W8, [X24 + 0x88D]
	0x036C6D3C MOV X22, X0
	0x036C6D40 CBNZ W8, 0x36C6D58
	0x036C6D44 ADRP X0, 0xA35000
	0x036C6D48 LDR X0, [X0 + 0x7E8]
	0x036C6D4C BL 0x1C16CF4
	0x036C6D50 MOVZ W8, 0x1
	0x036C6D54 STRB W8, [X24 + 0x88D]
	0x036C6D58 LDR X0, [X23]
	0x036C6D5C LDR W8, [X0 + 0xE0]
	0x036C6D60 CBNZ W8, 0x36C6D6C
	0x036C6D64 BL 0x1C16DFC
	0x036C6D68 LDR X0, [X23]
	0x036C6D6C LDR X8, [X0 + 0xB8]
	0x036C6D70 LDR X8, [X8 + 0x8]
	0x036C6D74 CMP X22, X8
	0x036C6D78 B.EQ 0x36C6D80
	0x036C6D7C STR X22, [X21 + 0x90]
	0x036C6D80 ADD X0, X21, 0x80
	0x036C6D84 MOV X1, X20
	0x036C6D88 MOV X2, X31
	0x036C6D8C STR X19, [X21 + 0x48]
	0x036C6D90 BL 0x1C24138
	0x036C6D94 LDR X8, [X25]
	0x036C6D98 MOV X22, X0
	0x036C6D9C LDR W9, [X8 + 0xE0]
	0x036C6DA0 CBNZ W9, 0x36C6DB0
	0x036C6DA4 MOV X0, X8
	0x036C6DA8 BL 0x1C16DFC
	0x036C6DAC LDR X8, [X25]
	0x036C6DB0 LDR X8, [X8 + 0xB8]
	0x036C6DB4 LDR X8, [X8 + 0x8]
	0x036C6DB8 CMP X8, X22
	0x036C6DBC B.EQ 0x36C6DD8
	0x036C6DC0 CBNZ X22, 0x36C6E08
	0x036C6DC4 LDP X20, X19, [X31 + 0x30]
	0x036C6DC8 LDP X22, X21, [X31 + 0x20]
	0x036C6DCC LDP X24, X23, [X31 + 0x10]
	0x036C6DD0 LDP X30, X25, [X31], #0x40
	0x036C6DD4 RET
	0x036C6DD8 STR X31, [X21 + 0x88]
	0x036C6DDC STR X31, [X21 + 0x48]
	0x036C6DE0 MOV X0, X21
	0x036C6DE4 MOV X1, X20
	0x036C6DE8 MOV X2, X19
	0x036C6DEC LDP X20, X19, [X31 + 0x30]
	0x036C6DF0 LDP X22, X21, [X31 + 0x20]
	0x036C6DF4 LDP X24, X23, [X31 + 0x10]
	0x036C6DF8 MOVZ W3, 0x1
	0x036C6DFC LDP X30, X25, [X31], #0x40
	0x036C6E00 B 0x36C656C
	0x036C6E04 BL 0x36C6BB0
	0x036C6E08 BL 0x36C6E0C
	0x036C6E0C STP X30, X19, [X31 - 0x10]!
	0x036C6E10 ADRP X0, 0xA2D000
	0x036C6E14 LDR X0, [X0 + 0x5B0]
	0x036C6E18 BL 0x1C16D08
	0x036C6E1C BL 0x1C16F10
	0x036C6E20 MOV X19, X0
	0x036C6E24 ADRP X0, 0xA79000
	0x036C6E28 LDR X0, [X0 + 0xC98]
	0x036C6E2C BL 0x1C16D08
	0x036C6E30 MOV X1, X0
	0x036C6E34 MOV X0, X19
	0x036C6E38 MOV X2, X31
	0x036C6E3C BL 0x337DF1C
	0x036C6E40 ADRP X0, 0xA79000
	0x036C6E44 LDR X0, [X0 + 0xCA0]
	0x036C6E48 BL 0x1C16D08
	0x036C6E4C MOV X1, X0
	0x036C6E50 MOV X0, X19
	0x036C6E54 BL 0x1C16DEC
	0x036C6E58 STP X30, X21, [X31 - 0x20]!
	0x036C6E5C STP X20, X19, [X31 + 0x10]
	0x036C6E60 LDRH W8, [X0 + 0x98]
	0x036C6E64 CMP W8, W1, UXTH
	0x036C6E68 B.NE 0x36C6E90
	0x036C6E6C LDR W20, [X0 + 0x40]
	0x036C6E70 LDR W21, [X0 + 0x38]
	0x036C6E74 MOV X19, X0
	0x036C6E78 BL 0x36C62F4
	0x036C6E7C CBNZ W20, 0x36C6E94
	0x036C6E80 LDP X20, X19, [X31 + 0x10]
	0x036C6E84 MOV W0, W21
	0x036C6E88 LDP X30, X21, [X31], #0x20
	0x036C6E8C RET
	0x036C6E90 BL 0x36C6BB0
	0x036C6E94 MOV X0, X19
	0x036C6E98 MOV W1, W20
	0x036C6E9C BL 0x36C6EA0
	0x036C6EA0 STP X30, X19, [X31 - 0x10]!
	0x036C6EA4 BL 0x36C695C
	0x036C6EA8 MOV X19, X0
	0x036C6EAC ADRP X0, 0xA79000
	0x036C6EB0 LDR X0, [X0 + 0xCA8]
	0x036C6EB4 BL 0x1C16D08
	0x036C6EB8 MOV X1, X0
	0x036C6EBC MOV X0, X19
	0x036C6EC0 BL 0x1C16DEC
	0x036C6EC4 STR X30, [X31 - 0x20]!
	0x036C6EC8 STP X20, X19, [X31 + 0x10]
	0x036C6ECC LDRH W8, [X0 + 0x98]
	0x036C6ED0 CMP W8, W1, UXTH
	0x036C6ED4 B.NE 0x36C6EF4
	0x036C6ED8 LDR W20, [X0 + 0x40]
	0x036C6EDC MOV X19, X0
	0x036C6EE0 BL 0x36C62F4
	0x036C6EE4 CBNZ W20, 0x36C6EF8
	0x036C6EE8 LDP X20, X19, [X31 + 0x10]
	0x036C6EEC LDR X30, [X31], #0x20
	0x036C6EF0 RET
	0x036C6EF4 BL 0x36C6BB0
	0x036C6EF8 MOV X0, X19
	0x036C6EFC MOV W1, W20
	0x036C6F00 BL 0x36C6EA0
	0x036C6F04 MOV X2, X31
	0x036C6F08 B 0x3661664
	0x036C6F0C STR X30, [X31 - 0x40]!
	0x036C6F10 STP X24, X23, [X31 + 0x10]
	0x036C6F14 STP X22, X21, [X31 + 0x20]
	0x036C6F18 STP X20, X19, [X31 + 0x30]
	0x036C6F1C ADRP X19, 0xD1A000
	0x036C6F20 ADRP X21, 0xA79000
	0x036C6F24 LDRB W8, [X19 + 0xA23]
	0x036C6F28 LDR X21, [X21 + 0xC48]
	0x036C6F2C TBNZ X8, 0x0, 0x36C6F74
	0x036C6F30 ADRP X0, 0xA57000
	0x036C6F34 LDR X0, [X0 + 0xE48]
	0x036C6F38 BL 0x1C16CF4
	0x036C6F3C ADRP X0, 0xA79000
	0x036C6F40 LDR X0, [X0 + 0xC48]
	0x036C6F44 BL 0x1C16CF4
	0x036C6F48 ADRP X0, 0xA79000
	0x036C6F4C LDR X0, [X0 + 0xCB0]
	0x036C6F50 BL 0x1C16CF4
	0x036C6F54 ADRP X0, 0xA79000
	0x036C6F58 LDR X0, [X0 + 0xCB8]
	0x036C6F5C BL 0x1C16CF4
	0x036C6F60 ADRP X0, 0xA79000
	0x036C6F64 LDR X0, [X0 + 0xC60]
	0x036C6F68 BL 0x1C16CF4
	0x036C6F6C MOVZ W8, 0x1
	0x036C6F70 STRB W8, [X19 + 0xA23]
	0x036C6F74 LDR X0, [X21]
	0x036C6F78 BL 0x1C16F10
	0x036C6F7C MOV X19, X0
	0x036C6F80 BL 0x36C6170
	0x036C6F84 CBZ X19, 0x36C7044
	0x036C6F88 STR X31, [X19 + 0x80]
	0x036C6F8C LDR X8, [X21]
	0x036C6F90 ADRP X23, 0xA79000
	0x036C6F94 ADRP X24, 0xA57000
	0x036C6F98 ADRP X20, 0xA79000
	0x036C6F9C LDR X8, [X8 + 0xB8]
	0x036C6FA0 LDR X23, [X23 + 0xC60]
	0x036C6FA4 ADRP X22, 0xA79000
	0x036C6FA8 STR X19, [X8]
	0x036C6FAC LDR X0, [X23]
	0x036C6FB0 LDR W8, [X0 + 0xE0]
	0x036C6FB4 LDR X24, [X24 + 0xE48]
	0x036C6FB8 LDR X20, [X20 + 0xCB0]
	0x036C6FBC LDR X22, [X22 + 0xCB8]
	0x036C6FC0 CBNZ W8, 0x36C6FCC
	0x036C6FC4 BL 0x1C16DFC
	0x036C6FC8 LDR X0, [X23]
	0x036C6FCC LDR X8, [X0 + 0xB8]
	0x036C6FD0 LDR X0, [X24]
	0x036C6FD4 LDR X19, [X8]
	0x036C6FD8 BL 0x1C16F10
	0x036C6FDC LDR X2, [X20]
	0x036C6FE0 MOV X1, X19
	0x036C6FE4 MOV X3, X31
	0x036C6FE8 MOV X20, X0
	0x036C6FEC BL 0x2A6B948
	0x036C6FF0 LDR X8, [X21]
	0x036C6FF4 LDR X8, [X8 + 0xB8]
	0x036C6FF8 STR X20, [X8 + 0x8]
	0x036C6FFC LDR X8, [X23]
	0x036C7000 LDR X0, [X24]
	0x036C7004 LDR X8, [X8 + 0xB8]
	0x036C7008 LDR X19, [X8]
	0x036C700C BL 0x1C16F10
	0x036C7010 LDR X2, [X22]
	0x036C7014 MOV X1, X19
	0x036C7018 MOV X3, X31
	0x036C701C MOV X20, X0
	0x036C7020 BL 0x2A6B948
	0x036C7024 LDR X8, [X21]
	0x036C7028 LDP X22, X21, [X31 + 0x20]
	0x036C702C LDP X24, X23, [X31 + 0x10]
	0x036C7030 LDR X8, [X8 + 0xB8]
	0x036C7034 STR X20, [X8 + 0x10]
	0x036C7038 LDP X20, X19, [X31 + 0x30]
	0x036C703C LDR X30, [X31], #0x40
	0x036C7040 RET
	0x036C7044 BL 0x1C16F20
	0x036C7048 STR X30, [X31 - 0x20]!
	0x036C704C STP X20, X19, [X31 + 0x10]
	0x036C7050 ADRP X19, 0xD19000
	0x036C7054 ADRP X20, 0xA78000
	0x036C7058 LDRB W8, [X19 + 0xA24]
	0x036C705C LDR X20, [X20 + 0xC60]
	0x036C7060 TBNZ X8, 0x0, 0x36C7078
	0x036C7064 ADRP X0, 0xA78000
	0x036C7068 LDR X0, [X0 + 0xC60]
	0x036C706C BL 0x1C16CF4
	0x036C7070 MOVZ W8, 0x1
	0x036C7074 STRB W8, [X19 + 0xA24]
	0x036C7078 LDR X0, [X20]
	0x036C707C BL 0x1C16F10
	0x036C7080 MOV X1, X31
	0x036C7084 MOV X19, X0
	0x036C7088 BL 0x33BDD8C
	0x036C708C LDR X8, [X20]
	0x036C7090 LDR X8, [X8 + 0xB8]
	0x036C7094 STR X19, [X8]
	0x036C7098 LDP X20, X19, [X31 + 0x10]
	0x036C709C LDR X30, [X31], #0x20
	0x036C70A0 RET
	0x036C70A4 MOV X1, X31
	0x036C70A8 B 0x33BDD8C
	0x036C70AC STR X30, [X31 - 0x20]!
	0x036C70B0 STP X20, X19, [X31 + 0x10]
	0x036C70B4 ADRP X20, 0xD19000
	0x036C70B8 LDRB W8, [X20 + 0xA25]
	0x036C70BC MOV X19, X1
	0x036C70C0 TBNZ X8, 0x0, 0x36C70FC
	0x036C70C4 ADRP X0, 0xA78000
	0x036C70C8 LDR X0, [X0 + 0xCC0]
	0x036C70CC BL 0x1C16CF4
	0x036C70D0 ADRP X0, 0xA78000
	0x036C70D4 LDR X0, [X0 + 0xCC8]
	0x036C70D8 BL 0x1C16CF4
	0x036C70DC ADRP X0, 0xA78000
	0x036C70E0 LDR X0, [X0 + 0xCD0]
	0x036C70E4 BL 0x1C16CF4
	0x036C70E8 ADRP X0, 0xA78000
	0x036C70EC LDR X0, [X0 + 0xCD8]
	0x036C70F0 BL 0x1C16CF4
	0x036C70F4 MOVZ W8, 0x1
	0x036C70F8 STRB W8, [X20 + 0xA25]
	0x036C70FC CBZ X19, 0x36C7150
	0x036C7100 ADRP X9, 0xA78000
	0x036C7104 LDR X9, [X9 + 0xCD8]
	0x036C7108 LDR X8, [X19]
	0x036C710C LDR X1, [X9]
	0x036C7110 LDRB W10, [X8 + 0x130]
	0x036C7114 LDRB W9, [X1 + 0x130]
	0x036C7118 CMP W10, W9
	0x036C711C B.CC 0x36C7154

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0xD1B000
	014 Move X21, 0xA7A000
	015 Move W8, [X19+2581]
	016 Move X21, [X21+2096]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {107}
	021 Move X0, 0xA56000
	022 Move X0, [X0+1824]
	023 Call 0x1C17CF4
	024 Move X0, 0xA7A000
	025 Move X0, [X0+2960]
	026 Call 0x1C17CF4
	027 Move X0, 0xA7A000
	028 Move X0, [X0+2536]
	029 Call 0x1C17CF4
	030 Move X0, 0xA7A000
	031 Move X0, [X0+2968]
	032 Call 0x1C17CF4
	033 Move X0, 0xA37000
	034 Move X0, [X0+1928]
	035 Call 0x1C17CF4
	036 Move X0, 0xA7A000
	037 Move X0, [X0+2976]
	038 Call 0x1C17CF4
	039 Move X0, 0xA7A000
	040 Move X0, [X0+2984]
	041 Call 0x1C17CF4
	042 Move X0, 0xA61000
	043 Move X0, [X0+3280]
	044 Call 0x1C17CF4
	045 Move X0, 0xA2F000
	046 Move X0, [X0+1976]
	047 Call 0x1C17CF4
	048 Move X0, 0xA7A000
	049 Move X0, [X0+2992]
	050 Call 0x1C17CF4
	051 Move X0, 0xA7A000
	052 Move X0, [X0+3000]
	053 Call 0x1C17CF4
	054 Move X0, 0xA7A000
	055 Move X0, [X0+3008]
	056 Call 0x1C17CF4
	057 Move X0, 0xA7A000
	058 Move X0, [X0+3016]
	059 Call 0x1C17CF4
	060 Move X0, 0xA7A000
	061 Move X0, [X0+3024]
	062 Call 0x1C17CF4
	063 Move X0, 0xA7A000
	064 Move X0, [X0+3032]
	065 Call 0x1C17CF4
	066 Move X0, 0xA7A000
	067 Move X0, [X0+3040]
	068 Call 0x1C17CF4
	069 Move X0, 0xA7A000
	070 Move X0, [X0+3048]
	071 Call 0x1C17CF4
	072 Move X0, 0xA7A000
	073 Move X0, [X0+3056]
	074 Call 0x1C17CF4
	075 Move X0, 0xA7A000
	076 Move X0, [X0+3064]
	077 Call 0x1C17CF4
	078 Move X0, 0xA7A000
	079 Move X0, [X0+3072]
	080 Call 0x1C17CF4
	081 Move X0, 0xA7A000
	082 Move X0, [X0+3080]
	083 Call 0x1C17CF4
	084 Move X0, 0xA7A000
	085 Move X0, [X0+3088]
	086 Call 0x1C17CF4
	087 Move X0, 0xA7A000
	088 Move X0, [X0+3096]
	089 Call 0x1C17CF4
	090 Move X0, 0xA7A000
	091 Move X0, [X0+3104]
	092 Call 0x1C17CF4
	093 Move X0, 0xA7A000
	094 Move X0, [X0+3112]
	095 Call 0x1C17CF4
	096 Move X0, 0xA7A000
	097 Move X0, [X0+3120]
	098 Call 0x1C17CF4
	099 Move X0, 0xA7A000
	100 Move X0, [X0+3128]
	101 Call 0x1C17CF4
	102 Move X0, 0xA7A000
	103 Move X0, [X0+2096]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X19+2581], W8
	107 Move X24, 0xA7A000
	108 Move X20, 0xA7A000
	109 Move X24, [X24+2960]
	110 Move X20, [X20+2992]
	111 Move X0, [X21]
	112 Move X22, 0xA37000
	113 Move X27, 0xA7A000
	114 Move X26, 0xA7A000
	115 Move X29, 0xA7A000
	116 Move X28, 0xA7A000
	117 Move X22, [X22+1928]
	118 Move X27, [X27+3064]
	119 Move X26, [X26+3072]
	120 Move W8, [X0+224]
	121 Move X29, [X29+2984]
	122 Move X28, [X28+2976]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X21]
	127 Move X23, 0xA56000
	128 Move X25, 0xA7A000
	129 Move X23, [X23+1824]
	130 Move X25, [X25+2536]
	131 Move X8, [X0+184]
	132 Move X0, [X24]
	133 Move X19, [X8]
	134 Call 0x1C17F10
	135 Move X2, [X20]
	136 Move X1, X19
	137 Move X3, X31
	138 Move X20, X0
	139 Call 0x2D0FF74, X0, X1, X2
	140 Move X8, [X22]
	141 Move X8, [X8+184]
	142 Move [X8], X20
	143 Move X8, [X21]
	144 Move X0, [X24]
	145 Move X8, [X8+184]
	146 Move X19, [X8]
	147 Call 0x1C17F10
	148 Move X2, [X27]
	149 Move X1, X19
	150 Move X3, X31
	151 Move X20, X0
	152 Call 0x2D0FF74, X0, X1, X2
	153 Move X8, [X22]
	154 Move X8, [X8+184]
	155 Move [X8+8], X20
	156 Move X8, [X21]
	157 Move X0, [X24]
	158 Move X8, [X8+184]
	159 Move X19, [X8]
	160 Call 0x1C17F10
	161 Move X2, [X26]
	162 Move X1, X19
	163 Move X3, X31
	164 Move X20, X0
	165 Call 0x2D0FF74, X0, X1, X2
	166 Move X8, [X22]
	167 Move X8, [X8+184]
	168 Move [X8+16], X20
	169 Move X0, [X29]
	170 Call 0x1C17F10
	171 Move X1, [X28]
	172 Move X19, X0
	173 Call TaskSocketAsyncEventArgs`1<Object>..ctor, X0
	174 Move X8, [X22]
	175 Move X8, [X8+184]
	176 Move [X8+24], X19
	177 Move X8, 0xA7A000
	178 Move X8, [X8+2968]
	179 Move X0, [X8]
	180 Call 0x1C17F10
	181 Move X1, X31
	182 Move X19, X0
	183 Call Int32TaskSocketAsyncEventArgs..ctor, X0
	184 Move X8, [X22]
	185 Move X8, [X8+184]
	186 Move [X8+32], X19
	187 Move X8, 0xA2F000
	188 Move X8, [X8+1976]
	189 Move X0, [X8]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X8, 0xA61000
	195 Move X8, [X8+3280]
	196 Move W0, W31
	197 Move X1, [X8]
	198 Call Task.FromResult, X0
	199 Move X8, [X22]
	200 Move X8, [X8+184]
	201 Move [X8+40], X0
	202 Move X8, [X21]
	203 Move X0, [X23]
	204 Move X8, [X8+184]
	205 Move X19, [X8]
	206 Call 0x1C17F10
	207 Move X8, 0xA7A000
	208 Move X8, [X8+3080]
	209 Move X1, X19
	210 Move X3, X31
	211 Move X20, X0
	212 Move X2, [X8]
	213 Call AsyncCallback..ctor, X0, X1, X2
	214 Move X8, [X22]
	215 Move X8, [X8+184]
	216 Move [X8+64], X20
	217 Move X8, [X21]
	218 Move X0, [X25]
	219 Move X8, [X8+184]
	220 Move X19, [X8]
	221 Call 0x1C17F10
	222 Move X8, 0xA7A000
	223 Move X8, [X8+3088]
	224 Move X1, X19
	225 Move X3, X31
	226 Move X20, X0
	227 Move X2, [X8]
	228 Call IOAsyncCallback..ctor, X0, X1, X2
	229 Move X8, [X22]
	230 Move X8, [X8+184]
	231 Move [X8+72], X20
	232 Move X8, [X21]
	233 Move X0, [X25]
	234 Move X8, [X8+184]
	235 Move X19, [X8]
	236 Call 0x1C17F10
	237 Move X8, 0xA7A000
	238 Move X8, [X8+3096]
	239 Move X1, X19
	240 Move X3, X31
	241 Move X20, X0
	242 Move X2, [X8]
	243 Call IOAsyncCallback..ctor, X0, X1, X2
	244 Move X8, [X22]
	245 Move X8, [X8+184]
	246 Move [X8+80], X20
	247 Move X8, [X21]
	248 Move X0, [X23]
	249 Move X8, [X8+184]
	250 Move X19, [X8]
	251 Call 0x1C17F10
	252 Move X8, 0xA7A000
	253 Move X8, [X8+3104]
	254 Move X1, X19
	255 Move X3, X31
	256 Move X20, X0
	257 Move X2, [X8]
	258 Call AsyncCallback..ctor, X0, X1, X2
	259 Move X8, [X22]
	260 Move X8, [X8+184]
	261 Move [X8+88], X20
	262 Move X8, [X21]
	263 Move X0, [X25]
	264 Move X8, [X8+184]
	265 Move X19, [X8]
	266 Call 0x1C17F10
	267 Move X8, 0xA7A000
	268 Move X8, [X8+3112]
	269 Move X1, X19
	270 Move X3, X31
	271 Move X20, X0
	272 Move X2, [X8]
	273 Call IOAsyncCallback..ctor, X0, X1, X2
	274 Move X8, [X22]
	275 Move X8, [X8+184]
	276 Move [X8+96], X20
	277 Move X8, [X21]
	278 Move X0, [X23]
	279 Move X8, [X8+184]
	280 Move X19, [X8]
	281 Call 0x1C17F10
	282 Move X8, 0xA7A000
	283 Move X8, [X8+3120]
	284 Move X1, X19
	285 Move X3, X31
	286 Move X20, X0
	287 Move X2, [X8]
	288 Call AsyncCallback..ctor, X0, X1, X2
	289 Move X8, [X22]
	290 Move X8, [X8+184]
	291 Move [X8+104], X20
	292 Move X8, [X21]
	293 Move X0, [X25]
	294 Move X8, [X8+184]
	295 Move X19, [X8]
	296 Call 0x1C17F10
	297 Move X8, 0xA7A000
	298 Move X8, [X8+3128]
	299 Move X1, X19
	300 Move X3, X31
	301 Move X20, X0
	302 Move X2, [X8]
	303 Call IOAsyncCallback..ctor, X0, X1, X2
	304 Move X8, [X22]
	305 Move X8, [X8+184]
	306 Move [X8+112], X20
	307 Move X8, [X21]
	308 Move X0, [X23]
	309 Move X8, [X8+184]
	310 Move X19, [X8]
	311 Call 0x1C17F10
	312 Move X8, 0xA7A000
	313 Move X8, [X8+3000]
	314 Move X1, X19
	315 Move X3, X31
	316 Move X20, X0
	317 Move X2, [X8]
	318 Call AsyncCallback..ctor, X0, X1, X2
	319 Move X8, [X22]
	320 Move X8, [X8+184]
	321 Move [X8+120], X20
	322 Move X8, [X21]
	323 Move X0, [X25]
	324 Move X8, [X8+184]
	325 Move X19, [X8]
	326 Call 0x1C17F10
	327 Move X8, 0xA7A000
	328 Move X8, [X8+3008]
	329 Move X1, X19
	330 Move X3, X31
	331 Move X20, X0
	332 Move X2, [X8]
	333 Call IOAsyncCallback..ctor, X0, X1, X2
	334 Move X8, [X22]
	335 Move X8, [X8+184]
	336 Move [X8+128], X20
	337 Move X8, [X21]
	338 Move X0, [X25]
	339 Move X8, [X8+184]
	340 Move X19, [X8]
	341 Call 0x1C17F10
	342 Move X8, 0xA7A000
	343 Move X8, [X8+3016]
	344 Move X1, X19
	345 Move X3, X31
	346 Move X20, X0
	347 Move X2, [X8]
	348 Call IOAsyncCallback..ctor, X0, X1, X2
	349 Move X8, [X22]
	350 Move X8, [X8+184]
	351 Move [X8+136], X20
	352 Move X8, [X21]
	353 Move X0, [X23]
	354 Move X8, [X8+184]
	355 Move X19, [X8]
	356 Call 0x1C17F10
	357 Move X8, 0xA7A000
	358 Move X8, [X8+3024]
	359 Move X1, X19
	360 Move X3, X31
	361 Move X20, X0
	362 Move X2, [X8]
	363 Call AsyncCallback..ctor, X0, X1, X2
	364 Move X8, [X22]
	365 Move X8, [X8+184]
	366 Move [X8+144], X20
	367 Move X8, [X21]
	368 Move X0, [X25]
	369 Move X8, [X8+184]
	370 Move X19, [X8]
	371 Call 0x1C17F10
	372 Move X8, 0xA79000
	373 Move X8, [X8+3032]
	374 Move X1, X19
	375 Move X3, X31
	376 Move X20, X0
	377 Move X2, [X8]
	378 Call IOAsyncCallback..ctor, X0, X1, X2
	379 Move X8, [X22]
	380 Move X8, [X8+184]
	381 Move [X8+152], X20
	382 Move X8, [X21]
	383 Move X0, [X23]
	384 Move X8, [X8+184]
	385 Move X19, [X8]
	386 Call 0x1C17F10
	387 Move X8, 0xA79000
	388 Move X8, [X8+3040]
	389 Move X1, X19
	390 Move X3, X31
	391 Move X20, X0
	392 Move X2, [X8]
	393 Call AsyncCallback..ctor, X0, X1, X2
	394 Move X8, [X22]
	395 Move X8, [X8+184]
	396 Move [X8+160], X20
	397 Move X8, [X21]
	398 Move X0, [X25]
	399 Move X8, [X8+184]
	400 Move X19, [X8]
	401 Call 0x1C17F10
	402 Move X8, 0xA79000
	403 Move X8, [X8+3048]
	404 Move X1, X19
	405 Move X3, X31
	406 Move X20, X0
	407 Move X2, [X8]
	408 Call IOAsyncCallback..ctor, X0, X1, X2
	409 Move X8, [X22]
	410 Move X8, [X8+184]
	411 Move [X8+168], X20
	412 Move X8, [X21]
	413 Move X0, [X23]
	414 Move X8, [X8+184]
	415 Move X19, [X8]
	416 Call 0x1C17F10
	417 Move X8, 0xA79000
	418 Move X8, [X8+3056]
	419 Move X1, X19
	420 Move X3, X31
	421 Move X20, X0
	422 Move X2, [X8]
	423 Call AsyncCallback..ctor, X0, X1, X2
	424 Move X8, [X22]
	425 Move X22, [X31+64]
	426 Move X21, [X31+72]
	427 Move X24, [X31+48]
	428 Move X23, [X31+56]
	429 Move X26, [X31+32]
	430 Move X25, [X31+40]
	431 Move X8, [X8+184]
	432 Move X28, [X31+16]
	433 Move X27, [X31+24]
	434 Move [X8+176], X20
	435 Move X20, [X31+80]
	436 Move X19, [X31+88]
	437 Move X29, [X31+96]
	438 Move X30, [X31+104]
	439 Return 

