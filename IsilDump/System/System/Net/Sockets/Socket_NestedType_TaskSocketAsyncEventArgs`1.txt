Type: System.Net.Sockets.Socket/TaskSocketAsyncEventArgs`1

Method: System.Void .ctor()

Disassembly:
	0x02696E28 LDP X30, X23, [X31], #0x30
	0x02696E2C B 0x33EEC14
	0x02696E30 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move W1, W31
	002 Move X2, X31
	003 Call SocketAsyncEventArgs..ctor, X0, X1
	004 Return 

Method: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<TResult> GetCompletionResponsibility(out System.Boolean responsibleForReturningToPool)

Disassembly:
	0x02696E34 STP X22, X21, [X31 + 0x10]
	0x02696E38 STP X20, X19, [X31 + 0x20]
	0x02696E3C ADRP X23, 0x1D44000
	0x02696E40 ADRP X22, 0x1A5E000
	0x02696E44 LDRB W8, [X23 + 0x2C2]
	0x02696E48 LDR X22, [X22 + 0x7B8]
	0x02696E4C MOV X19, X2
	0x02696E50 MOV X21, X1
	0x02696E54 MOV X20, X0
	0x02696E58 TBNZ X8, 0x0, 0x2696E70
	0x02696E5C ADRP X0, 0x1A5E000
	0x02696E60 LDR X0, [X0 + 0x7B8]
	0x02696E64 BL 0x1C16CF4
	0x02696E68 MOVZ W8, 0x1
	0x02696E6C STRB W8, [X23 + 0x2C2]
	0x02696E70 LDR X0, [X22]
	0x02696E74 LDR W8, [X0 + 0xE0]
	0x02696E78 CBNZ W8, 0x2696E80
	0x02696E7C BL 0x1C16DFC
	0x02696E80 MOV X0, X20
	0x02696E84 MOV W1, W31
	0x02696E88 MOV W2, W31
	0x02696E8C MOV X3, X31
	0x02696E90 MOV X4, X31
	0x02696E94 BL 0x33EEB10
	0x02696E98 STP X21, X19, [X20 + 0x50]
	0x02696E9C LDP X20, X19, [X31 + 0x20]
	0x02696EA0 LDP X22, X21, [X31 + 0x10]
	0x02696EA4 LDP X30, X23, [X31], #0x30
	0x02696EA8 RET
	0x02696EAC STR X30, [X31 - 0x50]!
	0x02696EB0 STP X26, X25, [X31 + 0x10]
	0x02696EB4 STP X24, X23, [X31 + 0x20]
	0x02696EB8 STP X22, X21, [X31 + 0x30]
	0x02696EBC STP X20, X19, [X31 + 0x40]
	0x02696EC0 ADRP X26, 0x1D44000
	0x02696EC4 ADRP X25, 0x1A5E000
	0x02696EC8 LDRB W8, [X26 + 0x2C3]
	0x02696ECC LDR X25, [X25 + 0x7B8]
	0x02696ED0 MOV X22, X5
	0x02696ED4 MOV W24, W4
	0x02696ED8 MOV X19, X3
	0x02696EDC MOV X20, X2
	0x02696EE0 MOV W23, W1
	0x02696EE4 MOV X21, X0
	0x02696EE8 TBNZ X8, 0x0, 0x2696F00
	0x02696EEC ADRP X0, 0x1A5E000
	0x02696EF0 LDR X0, [X0 + 0x7B8]
	0x02696EF4 BL 0x1C16CF4
	0x02696EF8 MOVZ W8, 0x1
	0x02696EFC STRB W8, [X26 + 0x2C3]
	0x02696F00 LDR X0, [X25]
	0x02696F04 LDR W8, [X0 + 0xE0]
	0x02696F08 CBNZ W8, 0x2696F10
	0x02696F0C BL 0x1C16DFC
	0x02696F10 AND W1, W23, 0x1
	0x02696F14 MOV X0, X21
	0x02696F18 MOV W2, W24
	0x02696F1C MOV X3, X22
	0x02696F20 MOV X4, X31
	0x02696F24 BL 0x33EEB10
	0x02696F28 TBNZ X23, 0x0, 0x2696F30
	0x02696F2C STP X20, X19, [X21 + 0x50]
	0x02696F30 LDP X20, X19, [X31 + 0x40]
	0x02696F34 LDP X22, X21, [X31 + 0x30]
	0x02696F38 LDP X24, X23, [X31 + 0x20]
	0x02696F3C LDP X26, X25, [X31 + 0x10]
	0x02696F40 LDR X30, [X31], #0x50
	0x02696F44 RET
	0x02696F48 SUB X31, X31, 0x50
	0x02696F4C STP X30, X25, [X31 + 0x10]
	0x02696F50 STP X24, X23, [X31 + 0x20]
	0x02696F54 STP X22, X21, [X31 + 0x30]
	0x02696F58 STP X20, X19, [X31 + 0x40]
	0x02696F5C ADRP X24, 0x1D44000
	0x02696F60 ADRP X25, 0x1A5E000
	0x02696F64 LDRB W8, [X24 + 0x2C4]
	0x02696F68 LDR X25, [X25 + 0x7B8]
	0x02696F6C MOV W19, W4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, X2
	008 Move X22, X1
	009 Move X19, X0
	010 Move X20, X8
	011 Move [X31], X31
	012 Move [X31+8], X31
	013 Move [X31+16], X31
	014 Move [X31+44], W31
	015 Add X1, X31, 44
	016 Move X2, X31
	017 Call Monitor.Enter, X0, X1
	018 Move W8, [X19+152]
	019 Move W9, 1
	020 Move [X22], W8
	021 Move [X19+152], W9
	022 Move X8, [X21+32]
	023 Move X8, [X8+192]
	024 Move X0, [X8+24]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X21+32]
	036 Add X22, X19, 128
	037 Move X8, [X8+192]
	038 Move X1, [X8+16]
	039 Move X0, X22
	040 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	041 Move X8, [X22+16]
	042 Move V0, [X22]
	043 Move X21, X31
	044 Move [X31+16], X8
	045 Move [X31], V0
	046 Move W8, [X31+44]
	047 Compare W8, 0
	048 JumpIfEqual {52}
	049 Move X0, X19
	050 Move X1, X31
	051 Call Monitor.Exit, X0
	052 Compare X21, 0
	053 JumpIfNotEqual {65}
	054 Move X8, [X31+16]
	055 Move V0, [X31]
	056 Move X22, [X31+48]
	057 Move X21, [X31+56]
	058 Move X30, [X31+32]
	059 Move [X20+16], X8
	060 Move [X20], V0
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Add X31, X31, 80
	064 Return X0
	065 Move X0, X21
	066 Call 0x1C17F18
	067 Move X22, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X22
	070 Call 0x3EB2AD0
	071 Move X21, [X0]
	072 Call 0x3EB2AE0
	073 Move X21, X31
	074 Move X22, X0
	075 Move W8, [X31+44]
	076 Compare W8, 0
	077 JumpIfEqual {81}
	078 Move X0, X19
	079 Move X1, X31
	080 Call Monitor.Exit, X0
	081 Compare X21, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X22
	084 Call 0x1D2D690
	085 Move X0, X21
	086 Call 0x1C17F18
	087 Call 0x1991590

