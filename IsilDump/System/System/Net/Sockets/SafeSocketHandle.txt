Type: System.Net.Sockets.SafeSocketHandle

Method: System.Void .ctor(System.IntPtr preexistingHandle, System.Boolean ownsHandle)

Disassembly:
	0x036CD318 LDRB W8, [X20 + 0xA5F]
	0x036CD31C MOV X19, X1
	0x036CD320 TBNZ X8, 0x0, 0x36CD338
	0x036CD324 ADRP X0, 0xA71000
	0x036CD328 LDR X0, [X0 + 0xFB8]
	0x036CD32C BL 0x1C16CF4
	0x036CD330 MOVZ W8, 0x1
	0x036CD334 STRB W8, [X20 + 0xA5F]
	0x036CD338 CBZ X19, 0x36CD378
	0x036CD33C ADRP X8, 0xA71000
	0x036CD340 LDR X8, [X8 + 0xFB8]
	0x036CD344 LDR X1, [X8]
	0x036CD348 LDR X8, [X19]
	0x036CD34C CMP X8, X1
	0x036CD350 B.NE 0x36CD37C
	0x036CD354 LDR X8, [X19 + 0x10]
	0x036CD358 CBZ X8, 0x36CD378
	0x036CD35C LDR X3, [X8 + 0x18]
	0x036CD360 LDR X0, [X8 + 0x40]
	0x036CD364 LDR X2, [X8 + 0x28]
	0x036CD368 MOV X1, X19
	0x036CD36C LDP X20, X19, [X31 + 0x10]
	0x036CD370 LDR X30, [X31], #0x20
	0x036CD374 BR X3
	0x036CD378 BL 0x1C16F20
	0x036CD37C MOV X0, X19
	0x036CD380 BL 0x1C171E0
	0x036CD384 STR X30, [X31 - 0x20]!
	0x036CD388 STP X20, X19, [X31 + 0x10]
	0x036CD38C ADRP X19, 0xD13000
	0x036CD390 ADRP X20, 0xA28000
	0x036CD394 LDRB W8, [X19 + 0xA60]
	0x036CD398 LDR X20, [X20 + 0x9B8]
	0x036CD39C TBNZ X8, 0x0, 0x36CD3B4
	0x036CD3A0 ADRP X0, 0xA28000
	0x036CD3A4 LDR X0, [X0 + 0x9B8]
	0x036CD3A8 BL 0x1C16CF4
	0x036CD3AC MOVZ W8, 0x1
	0x036CD3B0 STRB W8, [X19 + 0xA60]
	0x036CD3B4 LDR X0, [X20]
	0x036CD3B8 MOVZ W1, 0x80
	0x036CD3BC BL 0x1C16D6C
	0x036CD3C0 CBZ X0, 0x36CD568
	0x036CD3C4 LDR W8, [X0 + 0x18]
	0x036CD3C8 MOV X9, X31
	0x036CD3CC ADD X10, X0, 0x50
	0x036CD3D0 MOVZ W11, 0x1
	0x036CD3D4 ADD X12, X9, 0x30
	0x036CD3D8 CMP X12, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD14000
	008 Move X22, 0xA73000
	009 Move W8, [X23+2643]
	010 Move X22, [X22+16]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA73000
	019 Move X0, [X0+3640]
	020 Call 0x1C17CF4
	021 Move X0, 0xA73000
	022 Move X0, [X0+3648]
	023 Call 0x1C17CF4
	024 Move X0, 0xA73000
	025 Move X0, [X0+16]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2643], W8
	029 And W1, W21, 1
	030 Move X0, X19
	031 Move X2, X31
	032 Call SafeHandleMinusOneIsInvalid..ctor, X0, X1
	033 Move [X19+16], X20
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X22]
	040 Move X8, [X0+184]
	041 Move W8, [X8]
	042 Compare W8, 0
	043 JumpIfEqual {54}
	044 Move X8, 0xA73000
	045 Move X8, [X8+3648]
	046 Move X20, 0xA73000
	047 Move X0, [X8]
	048 Move X20, [X20+3640]
	049 Call 0x1C17F10
	050 Move X1, [X20]
	051 Move X20, X0
	052 Call Dictionary`2<Object, Object>..ctor, X0
	053 Move [X19+40], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Return 

Method: System.Boolean ReleaseHandle()

Disassembly:
	0x036CD3DC B.CS 0x36CD564
	0x036CD3E0 STRB W11, [X10, X9, LSL]
	0x036CD3E4 ADD X9, X9, 0x1
	0x036CD3E8 CMP X9, 0xA
	0x036CD3EC B.NE 0x36CD3D4
	0x036CD3F0 MOV X9, X31
	0x036CD3F4 ADD X10, X0, 0x61
	0x036CD3F8 MOVZ W11, 0x1
	0x036CD3FC ADD X12, X9, 0x41
	0x036CD400 CMP X12, X8
	0x036CD404 B.CS 0x36CD564
	0x036CD408 STRB W11, [X10, X9, LSL]
	0x036CD40C ADD X9, X9, 0x1
	0x036CD410 CMP X9, 0x1A
	0x036CD414 B.NE 0x36CD3FC
	0x036CD418 CMP W8, 0x61
	0x036CD41C MOVZ W11, 0x61
	0x036CD420 CSEL X11, X8, X11, HI
	0x036CD424 MOV X9, X31
	0x036CD428 ADD X10, X0, 0x81
	0x036CD42C SUB X11, X11, 0x61
	0x036CD430 MOVZ W12, 0x1
	0x036CD434 CMP X11, X9
	0x036CD438 B.EQ 0x36CD564
	0x036CD43C STRB W12, [X10, X9, LSL]
	0x036CD440 ADD X9, X9, 0x1
	0x036CD444 CMP X9, 0x1A
	0x036CD448 B.NE 0x36CD434
	0x036CD44C CMP W8, 0x21
	0x036CD450 B.LS 0x36CD564
	0x036CD454 MOVZ W9, 0x1
	0x036CD458 CMP W8, 0x23
	0x036CD45C STRB W9, [X0 + 0x41]
	0x036CD460 B.LS 0x36CD564
	0x036CD464 CMP W8, 0x24
	0x036CD468 STRB W9, [X0 + 0x43]
	0x036CD46C B.EQ 0x36CD564
	0x036CD470 MOVZ W9, 0x1
	0x036CD474 CMP W8, 0x25
	0x036CD478 STRB W9, [X0 + 0x44]
	0x036CD47C B.LS 0x36CD564
	0x036CD480 CMP W8, 0x26
	0x036CD484 STRB W9, [X0 + 0x45]
	0x036CD488 B.EQ 0x36CD564
	0x036CD48C MOVZ W9, 0x1
	0x036CD490 CMP W8, 0x27
	0x036CD494 STRB W9, [X0 + 0x46]
	0x036CD498 B.LS 0x36CD564
	0x036CD49C CMP W8, 0x2A
	0x036CD4A0 STRB W9, [X0 + 0x47]
	0x036CD4A4 B.LS 0x36CD564
	0x036CD4A8 MOVZ W9, 0x1
	0x036CD4AC CMP W8, 0x2B
	0x036CD4B0 STRB W9, [X0 + 0x4A]
	0x036CD4B4 B.EQ 0x36CD564
	0x036CD4B8 CMP W8, 0x2D
	0x036CD4BC STRB W9, [X0 + 0x4B]
	0x036CD4C0 B.LS 0x36CD564
	0x036CD4C4 MOVZ W9, 0x1
	0x036CD4C8 CMP W8, 0x2F
	0x036CD4CC STRB W9, [X0 + 0x4D]
	0x036CD4D0 B.LS 0x36CD564
	0x036CD4D4 CMP W8, 0x3D
	0x036CD4D8 STRB W9, [X0 + 0x4F]
	0x036CD4DC B.LS 0x36CD564
	0x036CD4E0 MOVZ W9, 0x1
	0x036CD4E4 CMP W8, 0x3F
	0x036CD4E8 STRB W9, [X0 + 0x5D]
	0x036CD4EC B.LS 0x36CD564
	0x036CD4F0 CMP W8, 0x5E
	0x036CD4F4 STRB W9, [X0 + 0x5F]
	0x036CD4F8 B.LS 0x36CD564
	0x036CD4FC MOVZ W9, 0x1
	0x036CD500 CMP W8, 0x5F
	0x036CD504 STRB W9, [X0 + 0x7E]
	0x036CD508 B.EQ 0x36CD564
	0x036CD50C CMP W8, 0x60
	0x036CD510 STRB W9, [X0 + 0x7F]
	0x036CD514 B.LS 0x36CD564
	0x036CD518 MOVZ W9, 0x1
	0x036CD51C CMP W8, 0x7B
	0x036CD520 STRB W9, [X0 + 0x80]
	0x036CD524 B.LS 0x36CD564
	0x036CD528 CMP W8, 0x7C
	0x036CD52C STRB W9, [X0 + 0x9B]
	0x036CD530 B.EQ 0x36CD564
	0x036CD534 MOVZ W9, 0x1
	0x036CD538 CMP W8, 0x7D
	0x036CD53C STRB W9, [X0 + 0x9C]
	0x036CD540 B.LS 0x36CD564
	0x036CD544 CMP W8, 0x7E
	0x036CD548 STRB W9, [X0 + 0x9D]
	0x036CD54C B.EQ 0x36CD564
	0x036CD550 LDP X20, X19, [X31 + 0x10]
	0x036CD554 MOVZ W8, 0x1
	0x036CD558 STRB W8, [X0 + 0x9E]
	0x036CD55C LDR X30, [X31], #0x20
	0x036CD560 RET
	0x036CD564 BL 0x1C16F28
	0x036CD568 BL 0x1C16F20
	0x036CD56C STR X30, [X31 - 0x20]!
	0x036CD570 STP X20, X19, [X31 + 0x10]
	0x036CD574 ADRP X19, 0xD13000
	0x036CD578 ADRP X20, 0xA28000
	0x036CD57C LDRB W8, [X19 + 0xA61]
	0x036CD580 LDR X20, [X20 + 0x9B8]
	0x036CD584 TBNZ X8, 0x0, 0x36CD59C
	0x036CD588 ADRP X0, 0xA28000
	0x036CD58C LDR X0, [X0 + 0x9B8]
	0x036CD590 BL 0x1C16CF4
	0x036CD594 MOVZ W8, 0x1
	0x036CD598 STRB W8, [X19 + 0xA61]
	0x036CD59C LDR X0, [X20]
	0x036CD5A0 MOVZ W1, 0x80
	0x036CD5A4 BL 0x1C16D6C
	0x036CD5A8 CBZ X0, 0x36CD6A8
	0x036CD5AC LDR X8, [X0 + 0x18]
	0x036CD5B0 MOV X10, X31
	0x036CD5B4 ADD X11, X0, 0x21
	0x036CD5B8 MOVZ W13, 0x1
	0x036CD5BC AND X9, X8, 0x0
	0x036CD5C0 CMP X9, 0x1
	0x036CD5C4 CSINC X12, X9, X31, HI
	0x036CD5C8 SUB X12, X12, 0x1
	0x036CD5CC CMP X12, X10
	0x036CD5D0 B.EQ 0x36CD6A4
	0x036CD5D4 STRB W13, [X11, X10, LSL]
	0x036CD5D8 ADD X10, X10, 0x1
	0x036CD5DC CMP X10, 0x9
	0x036CD5E0 B.NE 0x36CD5CC
	0x036CD5E4 CMP W8, 0xB
	0x036CD5E8 B.LS 0x36CD6A4
	0x036CD5EC MOVZ W10, 0x1
	0x036CD5F0 CMP W8, 0xC
	0x036CD5F4 STRB W10, [X0 + 0x2B]
	0x036CD5F8 B.EQ 0x36CD6A4
	0x036CD5FC CMP W8, 0xE
	0x036CD600 MOVZ W12, 0xE
	0x036CD604 CSEL X12, X9, X12, HI
	0x036CD608 MOV X11, X31
	0x036CD60C SUB X12, X12, 0xE
	0x036CD610 ADD X13, X0, 0x2E
	0x036CD614 STRB W10, [X0 + 0x2C]
	0x036CD618 CMP X12, X11
	0x036CD61C B.EQ 0x36CD6A4
	0x036CD620 STRB W10, [X13, X11, LSL]
	0x036CD624 ADD X11, X11, 0x1
	0x036CD628 CMP X11, 0x14
	0x036CD62C B.NE 0x36CD618
	0x036CD630 CMP W8, 0x23
	0x036CD634 MOVZ W12, 0x23
	0x036CD638 CSEL X12, X9, X12, HI
	0x036CD63C MOV X10, X31
	0x036CD640 ADD X11, X0, 0x43
	0x036CD644 SUB X12, X12, 0x23
	0x036CD648 MOVZ W13, 0x1
	0x036CD64C CMP X12, X10
	0x036CD650 B.EQ 0x36CD6A4
	0x036CD654 STRB W13, [X11, X10, LSL]
	0x036CD658 ADD X10, X10, 0x1
	0x036CD65C CMP X10, 0x39
	0x036CD660 B.NE 0x36CD64C
	0x036CD664 CMP W8, 0x5D
	0x036CD668 MOVZ W11, 0x5D
	0x036CD66C CSEL X9, X9, X11, HI
	0x036CD670 MOV X10, X31
	0x036CD674 ADD X8, X0, 0x7D
	0x036CD678 SUB X9, X9, 0x5D
	0x036CD67C MOVZ W11, 0x1
	0x036CD680 CMP X9, X10
	0x036CD684 B.EQ 0x36CD6A4
	0x036CD688 STRB W11, [X8, X10, LSL]
	0x036CD68C ADD X10, X10, 0x1
	0x036CD690 CMP X10, 0x23
	0x036CD694 B.NE 0x36CD680
	0x036CD698 LDP X20, X19, [X31 + 0x10]
	0x036CD69C LDR X30, [X31], #0x20
	0x036CD6A0 RET
	0x036CD6A4 BL 0x1C16F28
	0x036CD6A8 BL 0x1C16F20
	0x036CD6AC STR X30, [X31 - 0x20]!
	0x036CD6B0 STP X20, X19, [X31 + 0x10]
	0x036CD6B4 ADRP X19, 0xD13000
	0x036CD6B8 ADRP X20, 0xA28000
	0x036CD6BC LDRB W8, [X19 + 0xA62]
	0x036CD6C0 LDR X20, [X20 + 0x9B8]
	0x036CD6C4 TBNZ X8, 0x0, 0x36CD6DC
	0x036CD6C8 ADRP X0, 0xA28000
	0x036CD6CC LDR X0, [X0 + 0x9B8]
	0x036CD6D0 BL 0x1C16CF4
	0x036CD6D4 MOVZ W8, 0x1
	0x036CD6D8 STRB W8, [X19 + 0xA62]
	0x036CD6DC LDR X0, [X20]
	0x036CD6E0 MOVZ W1, 0x80
	0x036CD6E4 BL 0x1C16D6C
	0x036CD6E8 CBZ X0, 0x36CD7E8
	0x036CD6EC LDR X8, [X0 + 0x18]
	0x036CD6F0 MOV X10, X31
	0x036CD6F4 ADD X11, X0, 0x21
	0x036CD6F8 MOVZ W13, 0x1
	0x036CD6FC AND X9, X8, 0x0
	0x036CD700 CMP X9, 0x1
	0x036CD704 CSINC X12, X9, X31, HI
	0x036CD708 SUB X12, X12, 0x1
	0x036CD70C CMP X12, X10
	0x036CD710 B.EQ 0x36CD7E4
	0x036CD714 STRB W13, [X11, X10, LSL]
	0x036CD718 ADD X10, X10, 0x1
	0x036CD71C CMP X10, 0x8
	0x036CD720 B.NE 0x36CD70C
	0x036CD724 CMP W8, 0xB
	0x036CD728 B.LS 0x36CD7E4
	0x036CD72C MOVZ W10, 0x1
	0x036CD730 CMP W8, 0xC
	0x036CD734 STRB W10, [X0 + 0x2B]
	0x036CD738 B.EQ 0x36CD7E4
	0x036CD73C CMP W8, 0xE
	0x036CD740 MOVZ W12, 0xE
	0x036CD744 CSEL X12, X9, X12, HI
	0x036CD748 MOV X11, X31
	0x036CD74C SUB X12, X12, 0xE
	0x036CD750 ADD X13, X0, 0x2E
	0x036CD754 STRB W10, [X0 + 0x2C]
	0x036CD758 CMP X12, X11
	0x036CD75C B.EQ 0x36CD7E4
	0x036CD760 STRB W10, [X13, X11, LSL]
	0x036CD764 ADD X11, X11, 0x1
	0x036CD768 CMP X11, 0x12
	0x036CD76C B.NE 0x36CD758
	0x036CD770 CMP W8, 0x21
	0x036CD774 MOVZ W12, 0x21
	0x036CD778 CSEL X12, X9, X12, HI
	0x036CD77C MOV X10, X31
	0x036CD780 ADD X11, X0, 0x41
	0x036CD784 SUB X12, X12, 0x21
	0x036CD788 MOVZ W13, 0x1
	0x036CD78C CMP X12, X10
	0x036CD790 B.EQ 0x36CD7E4
	0x036CD794 STRB W13, [X11, X10, LSL]
	0x036CD798 ADD X10, X10, 0x1
	0x036CD79C CMP X10, 0x3A
	0x036CD7A0 B.NE 0x36CD78C
	0x036CD7A4 CMP W8, 0x5E
	0x036CD7A8 MOVZ W11, 0x5E
	0x036CD7AC CSEL X9, X9, X11, HI
	0x036CD7B0 MOV X10, X31
	0x036CD7B4 ADD X8, X0, 0x7E
	0x036CD7B8 SUB X9, X9, 0x5E
	0x036CD7BC MOVZ W11, 0x1
	0x036CD7C0 CMP X9, X10
	0x036CD7C4 B.EQ 0x36CD7E4
	0x036CD7C8 STRB W11, [X8, X10, LSL]
	0x036CD7CC ADD X10, X10, 0x1
	0x036CD7D0 CMP X10, 0x22
	0x036CD7D4 B.NE 0x36CD7C0
	0x036CD7D8 LDP X20, X19, [X31 + 0x10]
	0x036CD7DC LDR X30, [X31], #0x20
	0x036CD7E0 RET
	0x036CD7E4 BL 0x1C16F28
	0x036CD7E8 BL 0x1C16F20
	0x036CD7EC STR X30, [X31 - 0x20]!
	0x036CD7F0 STP X20, X19, [X31 + 0x10]
	0x036CD7F4 ADRP X19, 0xD13000
	0x036CD7F8 ADRP X20, 0xA28000
	0x036CD7FC LDRB W8, [X19 + 0xA63]
	0x036CD800 LDR X20, [X20 + 0x9B8]
	0x036CD804 TBNZ X8, 0x0, 0x36CD81C
	0x036CD808 ADRP X0, 0xA28000
	0x036CD80C LDR X0, [X0 + 0x9B8]
	0x036CD810 BL 0x1C16CF4
	0x036CD814 MOVZ W8, 0x1
	0x036CD818 STRB W8, [X19 + 0xA63]
	0x036CD81C LDR X0, [X20]
	0x036CD820 MOVZ W1, 0x80
	0x036CD824 BL 0x1C16D6C
	0x036CD828 CBZ X0, 0x36CD890
	0x036CD82C LDR W8, [X0 + 0x18]
	0x036CD830 MOV X9, X31
	0x036CD834 ADD X10, X0, 0x41
	0x036CD838 MOVZ W11, 0x1
	0x036CD83C ADD X12, X9, 0x21
	0x036CD840 CMP X12, X8
	0x036CD844 B.CS 0x36CD88C
	0x036CD848 STRB W11, [X10, X9, LSL]
	0x036CD84C ADD X9, X9, 0x1
	0x036CD850 CMP X9, 0x19
	0x036CD854 B.NE 0x36CD83C
	0x036CD858 MOV X9, X31
	0x036CD85C ADD X10, X0, 0x5B
	0x036CD860 MOVZ W11, 0x1
	0x036CD864 ADD X12, X9, 0x3B
	0x036CD868 CMP X12, X8
	0x036CD86C B.CS 0x36CD88C
	0x036CD870 STRB W11, [X10, X9, LSL]
	0x036CD874 ADD X9, X9, 0x1
	0x036CD878 CMP X9, 0x44
	0x036CD87C B.NE 0x36CD864
	0x036CD880 LDP X20, X19, [X31 + 0x10]
	0x036CD884 LDR X30, [X31], #0x20
	0x036CD888 RET
	0x036CD88C BL 0x1C16F28
	0x036CD890 BL 0x1C16F20
	0x036CD894 STR X30, [X31 - 0x20]!
	0x036CD898 STP X20, X19, [X31 + 0x10]
	0x036CD89C ADRP X19, 0xD13000
	0x036CD8A0 ADRP X20, 0xA28000
	0x036CD8A4 LDRB W8, [X19 + 0xA64]
	0x036CD8A8 LDR X20, [X20 + 0x9B8]
	0x036CD8AC TBNZ X8, 0x0, 0x36CD8C4
	0x036CD8B0 ADRP X0, 0xA28000
	0x036CD8B4 LDR X0, [X0 + 0x9B8]
	0x036CD8B8 BL 0x1C16CF4
	0x036CD8BC MOVZ W8, 0x1
	0x036CD8C0 STRB W8, [X19 + 0xA64]
	0x036CD8C4 LDR X0, [X20]
	0x036CD8C8 MOVZ W1, 0x80
	0x036CD8CC BL 0x1C16D6C
	0x036CD8D0 CBZ X0, 0x36CD98C
	0x036CD8D4 LDR X8, [X0 + 0x18]
	0x036CD8D8 MOVZ W11, 0x21
	0x036CD8DC MOV X9, X31
	0x036CD8E0 ADD X10, X0, 0x41
	0x036CD8E4 AND X12, X8, 0x0
	0x036CD8E8 CMP X12, 0x21
	0x036CD8EC CSEL X11, X12, X11, HI
	0x036CD8F0 SUB X11, X11, 0x21
	0x036CD8F4 MOVZ W12, 0x1
	0x036CD8F8 CMP X11, X9
	0x036CD8FC B.EQ 0x36CD988
	0x036CD900 STRB W12, [X10, X9, LSL]
	0x036CD904 ADD X9, X9, 0x1
	0x036CD908 CMP X9, 0x5E
	0x036CD90C B.NE 0x36CD8F8
	0x036CD910 CMP W8, 0x28
	0x036CD914 B.LS 0x36CD988
	0x036CD918 CMP W8, 0x29
	0x036CD91C STRB W31, [X0 + 0x48]
	0x036CD920 B.EQ 0x36CD988
	0x036CD924 CMP W8, 0x3C
	0x036CD928 STRB W31, [X0 + 0x49]
	0x036CD92C B.LS 0x36CD988
	0x036CD930 CMP W8, 0x3E
	0x036CD934 STRB W31, [X0 + 0x5C]
	0x036CD938 B.LS 0x36CD988
	0x036CD93C CMP W8, 0x40
	0x036CD940 STRB W31, [X0 + 0x5E]
	0x036CD944 B.LS 0x36CD988
	0x036CD948 CMP W8, 0x5C
	0x036CD94C STRB W31, [X0 + 0x60]
	0x036CD950 STRB W31, [X0 + 0x4C]
	0x036CD954 STRH W31, [X0 + 0x5A]
	0x036CD958 B.LS 0x36CD988
	0x036CD95C CMP W8, 0x5D
	0x036CD960 STRB W31, [X0 + 0x42]
	0x036CD964 STRB W31, [X0 + 0x4F]
	0x036CD968 STURH W31, [X0 + 0x7B]
	0x036CD96C B.EQ 0x36CD988
	0x036CD970 LDP X20, X19, [X31 + 0x10]
	0x036CD974 STRB W31, [X0 + 0x7D]
	0x036CD978 STRB W31, [X0 + 0x5F]
	0x036CD97C STRB W31, [X0 + 0x5D]
	0x036CD980 LDR X30, [X31], #0x20
	0x036CD984 RET
	0x036CD988 BL 0x1C16F28
	0x036CD98C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0xD14000
	015 Move X23, 0xA30000
	016 Move W8, [X20+2644]
	017 Move X23, [X23+1928]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {61}
	023 Move X0, 0xA73000
	024 Move X0, [X0+3656]
	025 Call 0x1C17CF4
	026 Move X0, 0xA68000
	027 Move X0, [X0+1648]
	028 Call 0x1C17CF4
	029 Move X0, 0xA68000
	030 Move X0, [X0+1656]
	031 Call 0x1C17CF4
	032 Move X0, 0xA68000
	033 Move X0, [X0+1664]
	034 Call 0x1C17CF4
	035 Move X0, 0xA68000
	036 Move X0, [X0+1680]
	037 Call 0x1C17CF4
	038 Move X0, 0xA68000
	039 Move X0, [X0+1592]
	040 Call 0x1C17CF4
	041 Move X0, 0xA68000
	042 Move X0, [X0+1600]
	043 Call 0x1C17CF4
	044 Move X0, 0xA73000
	045 Move X0, [X0+16]
	046 Call 0x1C17CF4
	047 Move X0, 0xA30000
	048 Move X0, [X0+1928]
	049 Call 0x1C17CF4
	050 Move X0, 0xA27000
	051 Move X0, [X0+2288]
	052 Call 0x1C17CF4
	053 Move X0, 0xA73000
	054 Move X0, [X0+3664]
	055 Call 0x1C17CF4
	056 Move X0, 0xA73000
	057 Move X0, [X0+3672]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2644], W8
	061 Move X0, [X23]
	062 Move [X31+72], W31
	063 Move [X31+48], X31
	064 Move [X31+56], X31
	065 Move [X31+64], X31
	066 Move [X31+76], W31
	067 Move W8, [X0+224]
	068 Move X20, [X19+16]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Add X2, X31, 76
	073 Move X0, X20
	074 Move W1, W31
	075 Move X3, X31
	076 Call Socket.Blocking_icall, X0, X1, X2
	077 Move X0, [X19+16]
	078 Add X2, X31, 76
	079 Move W1, 2
	080 Move X3, X31
	081 Call Socket.Shutdown_icall, X0, X1, X2
	082 Move X20, [X19+32]
	083 Compare X20, 0
	084 JumpIfEqual {253}
	085 Move [X31+72], W31
	086 Add X1, X31, 72
	087 Move X0, X20
	088 Move X2, X31
	089 Call Monitor.Enter, X0, X1
	090 Move X27, 0xA68000
	091 Move X22, 0xA68000
	092 Move X25, 0xA68000
	093 Move X24, 0xA68000
	094 Move X27, [X27+1600]
	095 Move X22, [X22+1680]
	096 Move X25, [X25+1656]
	097 Move X24, [X24+1648]
	098 Move W26, W31
	099 Move W28, 1
	100 Move X0, [X19+32]
	101 Compare X0, 0
	102 JumpIfEqual {291}
	103 Move W8, [X0+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X2, [X27]
	108 Move W1, W31
	109 Call List`1<Object>.get_Item, X0, X1
	110 Move X21, X0
	111 Move X0, X31
	112 Call Thread.get_CurrentThread
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, [X19+32]
	115 Compare X0, 0
	116 JumpIfEqual {296}
	117 Move X1, [X22]
	118 Add X8, X31, 24
	119 Call List`1<Object>.GetEnumerator, X0
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 Move X8, [X31+40]
	122 Add W26, W26, 1
	123 Move [X31+3], V0
	124 Move [X31+64], X8
	125 Move X1, [X25]
	126 Add X0, X31, 48
	127 Call Enumerator<Object>.MoveNext, X0
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {141}
	132 Move X0, [X23]
	133 Move X21, [X31+64]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X21
	139 Move X1, X31
	140 Call Socket.cancel_blocking_socket_operation, X0
	141 Move X21, X31
	142 Move W29, 15
	143 Move X1, [X24]
	144 Add X0, X31, 48
	145 Call Enumerator<Object>.Dispose, X0
	146 Compare X21, 0
	147 JumpIfNotEqual {292}
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Compare W29, 0
	150 JumpIfNotEqual {242}
	151 Move X0, [X19+32]
	152 Move [X19+48], W28
	153 Move W1, 100
	154 Move X2, X31
	155 Call Monitor.Wait, X0, X1
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Call 0x3EB2AD0
	158 Move X21, [X0]
	159 Call 0x3EB2AE0
	160 Move W29, W31
	161 Move X21, 0xA73000
	162 Move X21, [X21+16]
	163 Move X0, [X21]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {169}
	167 Call 0x1C17DFC
	168 Move X0, [X21]
	169 Move X8, [X0+184]
	170 Move W8, [X8]
	171 Compare W8, 0
	172 JumpIfEqual {230}
	173 Move X8, 0xA27000
	174 Move X8, [X8+2288]
	175 Move X0, [X8]
	176 Call 0x1C17F10
	177 Move X21, X0
	178 Move X1, X31
	179 Call StringBuilder..ctor, X0
	180 Compare X21, 0
	181 JumpIfEqual {322}
	182 Move X8, 0xA73000
	183 Move X8, [X8+3672]
	184 Move X1, [X8]
	185 Move X0, X21
	186 Move X2, X31
	187 Call StringBuilder.AppendLine, X0, X1
	188 Move X0, [X19+32]
	189 Compare X0, 0
	190 JumpIfEqual {323}
	191 Move X1, [X22]
	192 Add X8, X31, 24
	193 Call List`1<Object>.GetEnumerator, X0
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 Move X8, [X31+40]
	196 Move X26, 0xA73000
	197 Move X26, [X26+3664]
	198 Move [X31+3], V0
	199 Move [X31+64], X8
	200 Move X27, 0xA73000
	201 Move X27, [X27+3656]
	202 Move X1, [X25]
	203 Add X0, X31, 48
	204 Call Enumerator<Object>.MoveNext, X0
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {232}
	209 Move X22, [X31+64]
	210 Move X1, [X26]
	211 Move X0, X21
	212 Move X2, X31
	213 Call StringBuilder.AppendLine, X0, X1
	214 Move X0, [X19+40]
	215 Compare X0, 0
	216 JumpIfEqual {294}
	217 Move X2, [X27]
	218 Move X1, X22
	219 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	220 Compare X0, 0
	221 JumpIfEqual {295}
	222 Move X8, [X0]
	223 Move X9, [X8+360]
	224 Move X1, [X8+368]
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move X1, X0
	227 Move X0, X21
	228 Move X2, X31
	229 Call StringBuilder.AppendLine, X0, X1
	230 Move X21, X31
	231 Move W29, 2
	232 Move X22, X31
	233 Move W29, 9
	234 Move X1, [X24]
	235 Add X0, X31, 48
	236 Call Enumerator<Object>.Dispose, X0
	237 Compare X22, 0
	238 JumpIfNotEqual {324}
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Compare W29, 0
	241 JumpIfEqual {299}
	242 Move X21, X31
	243 Move W8, [X31+72]
	244 Compare W8, 0
	245 JumpIfEqual {249}
	246 Move X0, X20
	247 Move X1, X31
	248 Call Monitor.Exit, X0
	249 Compare X21, 0
	250 JumpIfNotEqual {297}
	251 Or W8, W29, 2
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, [X23]
	254 Move X19, [X19+16]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Add X1, X31, 76
	260 Move X0, X19
	261 Move X2, X31
	262 Call Socket.Close_icall, X0, X1
	263 Move W8, [X31+76]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 NotImplemented "Instruction CSET not yet implemented."
	266 Move X20, [X31+160]
	267 Move X19, [X31+168]
	268 Move X22, [X31+144]
	269 Move X21, [X31+152]
	270 Move X24, [X31+128]
	271 Move X23, [X31+136]
	272 Move X26, [X31+112]
	273 Move X25, [X31+120]
	274 Move X28, [X31+96]
	275 Move X27, [X31+104]
	276 Move X29, [X31+80]
	277 Move X30, [X31+88]
	278 And W0, W8, 1
	279 Add X31, X31, 176
	280 Return X0
	281 Move [X31+8], X0
	282 Move [X31+16], X1
	283 Move X21, X31
	284 Move X1, [X24]
	285 Add X0, X31, 48
	286 Call Enumerator<Object>.Dispose, X0
	287 Compare X21, 0
	288 JumpIfEqual {349}
	289 Move X0, X21
	290 Call 0x1C17F18
	291 Call 0x1C17F20
	292 Move X0, X21
	293 Call 0x1C17F18
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Move X0, X21
	298 Call 0x1C17F18
	299 Move X0, X21
	300 Move X1, X31
	301 Call StringBuilder.AppendLine, X0
	302 Move X8, [X21]
	303 Move X9, [X8+360]
	304 Move X1, [X8+368]
	305 Move X0, X21
	306 NotImplemented "Instruction BLR not yet implemented."
	307 Move X21, X0
	308 Move X0, 0xA27000
	309 Move X0, [X0+2000]
	310 Call 0x1C17D08
	311 Call 0x1C17F10
	312 Move X22, X0
	313 Move X1, X21
	314 Move X2, X31
	315 Call Exception..ctor, X0, X1
	316 Move X0, 0xA73000
	317 Move X0, [X0+3680]
	318 Call 0x1C17D08
	319 Move X1, X0
	320 Move X0, X22
	321 Call 0x1C17DEC
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Move X0, X22
	325 Call 0x1C17F18
	326 Move [X31+8], X0
	327 Move [X31+16], X1
	328 Move X8, X1
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move [X31+8], X0
	331 Move [X31+16], X1
	332 Move X0, [X31+8]
	333 Call 0x3EB2AD0
	334 Move X22, [X0]
	335 Call 0x3EB2AE0
	336 Move W29, W31
	337 Move X22, X31
	338 Move X1, [X24]
	339 Add X0, X31, 48
	340 Call Enumerator<Object>.Dispose, X0
	341 Compare X22, 0
	342 JumpIfEqual {349}
	343 Move X0, X22
	344 Call 0x1C17F18
	345 Move [X31+8], X0
	346 Move [X31+16], X1
	347 Move [X31+8], X0
	348 Move [X31+16], X1
	349 Move X8, [X31+16]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move X0, [X31+8]
	352 Call 0x3EB2AD0
	353 Move X21, [X0]
	354 Call 0x3EB2AE0
	355 Move W29, W31
	356 Move X21, X31
	357 Move [X31+8], X0
	358 Move W8, [X31+72]
	359 Compare W8, 0
	360 JumpIfEqual {364}
	361 Move X0, X20
	362 Move X1, X31
	363 Call Monitor.Exit, X0
	364 Compare X21, 0
	365 JumpIfNotEqual {368}
	366 Move X0, [X31+8]
	367 Call 0x1D2D690
	368 Move X0, X21
	369 Call 0x1C17F18
	370 Call 0x1991590

Method: System.Void RegisterForBlockingSyscall()

Disassembly:
	0x036CD990 STR X30, [X31 - 0x20]!
	0x036CD994 STP X20, X19, [X31 + 0x10]
	0x036CD998 ADRP X19, 0xD13000
	0x036CD99C ADRP X20, 0xA28000
	0x036CD9A0 LDRB W8, [X19 + 0xA65]
	0x036CD9A4 LDR X20, [X20 + 0x9B8]
	0x036CD9A8 TBNZ X8, 0x0, 0x36CD9C0
	0x036CD9AC ADRP X0, 0xA28000
	0x036CD9B0 LDR X0, [X0 + 0x9B8]
	0x036CD9B4 BL 0x1C16CF4
	0x036CD9B8 MOVZ W8, 0x1
	0x036CD9BC STRB W8, [X19 + 0xA65]
	0x036CD9C0 LDR X0, [X20]
	0x036CD9C4 MOVZ W1, 0x80
	0x036CD9C8 BL 0x1C16D6C
	0x036CD9CC CBZ X0, 0x36CDB00
	0x036CD9D0 LDR X8, [X0 + 0x18]
	0x036CD9D4 MOV X10, X31
	0x036CD9D8 ADD X11, X0, 0x21
	0x036CD9DC MOVZ W13, 0x1
	0x036CD9E0 AND X9, X8, 0x0
	0x036CD9E4 CMP X9, 0x1
	0x036CD9E8 CSINC X12, X9, X31, HI
	0x036CD9EC SUB X12, X12, 0x1
	0x036CD9F0 CMP X12, X10
	0x036CD9F4 B.EQ 0x36CDAFC
	0x036CD9F8 STRB W13, [X11, X10, LSL]
	0x036CD9FC ADD X10, X10, 0x1
	0x036CDA00 CMP X10, 0x8
	0x036CDA04 B.NE 0x36CD9F0
	0x036CDA08 CMP W8, 0xB
	0x036CDA0C B.LS 0x36CDAFC
	0x036CDA10 MOVZ W10, 0x1
	0x036CDA14 CMP W8, 0xC
	0x036CDA18 STRB W10, [X0 + 0x2B]
	0x036CDA1C B.EQ 0x36CDAFC
	0x036CDA20 CMP W8, 0xE
	0x036CDA24 MOVZ W12, 0xE
	0x036CDA28 CSEL X12, X9, X12, HI
	0x036CDA2C MOV X11, X31
	0x036CDA30 SUB X12, X12, 0xE
	0x036CDA34 ADD X13, X0, 0x2E
	0x036CDA38 STRB W10, [X0 + 0x2C]
	0x036CDA3C CMP X12, X11
	0x036CDA40 B.EQ 0x36CDAFC
	0x036CDA44 STRB W10, [X13, X11, LSL]
	0x036CDA48 ADD X11, X11, 0x1
	0x036CDA4C CMP X11, 0x12
	0x036CDA50 B.NE 0x36CDA3C
	0x036CDA54 CMP W8, 0x21
	0x036CDA58 MOVZ W12, 0x21
	0x036CDA5C CSEL X12, X9, X12, HI
	0x036CDA60 MOV X10, X31
	0x036CDA64 ADD X11, X0, 0x41
	0x036CDA68 SUB X12, X12, 0x21
	0x036CDA6C MOVZ W13, 0x1
	0x036CDA70 CMP X12, X10
	0x036CDA74 B.EQ 0x36CDAFC
	0x036CDA78 STRB W13, [X11, X10, LSL]
	0x036CDA7C ADD X10, X10, 0x1
	0x036CDA80 CMP X10, 0x7
	0x036CDA84 B.NE 0x36CDA70
	0x036CDA88 CMP W8, 0x2A
	0x036CDA8C MOVZ W12, 0x2A
	0x036CDA90 CSEL X12, X9, X12, HI
	0x036CDA94 MOV X10, X31
	0x036CDA98 ADD X11, X0, 0x4A
	0x036CDA9C SUB X12, X12, 0x2A
	0x036CDAA0 MOVZ W13, 0x1
	0x036CDAA4 CMP X12, X10
	0x036CDAA8 B.EQ 0x36CDAFC
	0x036CDAAC STRB W13, [X11, X10, LSL]
	0x036CDAB0 ADD X10, X10, 0x1
	0x036CDAB4 CMP X10, 0x32
	0x036CDAB8 B.NE 0x36CDAA4
	0x036CDABC CMP W8, 0x5D
	0x036CDAC0 MOVZ W11, 0x5D
	0x036CDAC4 CSEL X9, X9, X11, HI
	0x036CDAC8 MOV X10, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X21
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X20, 0xD14000
	007 Move W8, [X20+2645]
	008 Move X19, X0
	009 Move [X31+72], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xA73000
	015 Move X0, [X0+3688]
	016 Call 0x1C17CF4
	017 Move X0, 0xA68000
	018 Move X0, [X0+1576]
	019 Call 0x1C17CF4
	020 Move X0, 0xA68000
	021 Move X0, [X0+1584]
	022 Call 0x1C17CF4
	023 Move X0, 0xA68000
	024 Move X0, [X0+1616]
	025 Call 0x1C17CF4
	026 Move X0, 0xA73000
	027 Move X0, [X0+16]
	028 Call 0x1C17CF4
	029 Move X0, 0xA59000
	030 Move X0, [X0+2056]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2645], W8
	034 Move [X31+56], X31
	035 Move [X31+52], W31
	036 Move X20, X19
	037 Add X20, X20, 32
	038 Move X8, [X20]
	039 Compare X8, 0
	040 JumpIfNotEqual {54}
	041 Move X8, 0xA68000
	042 Move X8, [X8+1616]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X8, 0xA68000
	046 Move X8, [X8+1584]
	047 Move X21, X0
	048 Move X1, [X8]
	049 Call List`1<Object>..ctor, X0
	050 Move X0, X20
	051 Move X1, X21
	052 Move X2, X31
	053 Call 0x1C25138
	054 Add X8, X31, 72
	055 Add X9, X31, 56
	056 Add X10, X31, 52
	057 Add X11, X31, 68
	058 Move [X31+68], W31
	059 Move [X31+8], X31
	060 Move [X31+16], X8
	061 Move [X31+24], X9
	062 Move [X31+32], X10
	063 Move [X31+40], X11
	064 Add X1, X31, 68
	065 Move X0, X19
	066 Move X2, X31
	067 Call SafeHandle.DangerousAddRef, X0, X1
	068 Add X0, X31, 8
	069 Call 0x1BC8564
	070 Move X20, [X31+96]
	071 Move X19, [X31+104]
	072 Move X30, [X31+80]
	073 Move X21, [X31+88]
	074 Add X31, X31, 112
	075 Return 
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X19, X0
	078 Move X0, X19
	079 Call 0x3EB2AD0
	080 Move X8, [X0]
	081 Move [X31+8], X8
	082 Call 0x3EB2AE0
	083 Move X19, X0
	084 Add X0, X31, 8
	085 Call 0x1BC8564
	086 Move X0, X19
	087 Call 0x1D2D690
	088 Call 0x1991590

Method: System.Void UnRegisterForBlockingSyscall()

Disassembly:
	0x036CDACC ADD X8, X0, 0x7D
	0x036CDAD0 SUB X9, X9, 0x5D
	0x036CDAD4 MOVZ W11, 0x1
	0x036CDAD8 CMP X9, X10
	0x036CDADC B.EQ 0x36CDAFC
	0x036CDAE0 STRB W11, [X8, X10, LSL]
	0x036CDAE4 ADD X10, X10, 0x1
	0x036CDAE8 CMP X10, 0x23
	0x036CDAEC B.NE 0x36CDAD8
	0x036CDAF0 LDP X20, X19, [X31 + 0x10]
	0x036CDAF4 LDR X30, [X31], #0x20
	0x036CDAF8 RET
	0x036CDAFC BL 0x1C16F28
	0x036CDB00 BL 0x1C16F20
	0x036CDB04 STP X30, X21, [X31 - 0x20]!
	0x036CDB08 STP X20, X19, [X31 + 0x10]
	0x036CDB0C ADRP X21, 0xD13000
	0x036CDB10 ADRP X20, 0xA72000
	0x036CDB14 LDRB W8, [X21 + 0xA66]
	0x036CDB18 LDR X20, [X20 + 0xEC0]
	0x036CDB1C MOV W19, W0
	0x036CDB20 TBNZ X8, 0x0, 0x36CDB38
	0x036CDB24 ADRP X0, 0xA72000
	0x036CDB28 LDR X0, [X0 + 0xEC0]
	0x036CDB2C BL 0x1C16CF4
	0x036CDB30 MOVZ W8, 0x1
	0x036CDB34 STRB W8, [X21 + 0xA66]
	0x036CDB38 LDR X0, [X20]
	0x036CDB3C LDR W8, [X0 + 0xE0]
	0x036CDB40 CBNZ W8, 0x36CDB4C
	0x036CDB44 BL 0x1C16DFC
	0x036CDB48 LDR X0, [X20]
	0x036CDB4C LDR X8, [X0 + 0xB8]
	0x036CDB50 LDRH W9, [X8 + 0x38]
	0x036CDB54 CMP W9, W19, UXTH
	0x036CDB58 B.EQ 0x36CDB9C
	0x036CDB5C LDR W9, [X0 + 0xE0]
	0x036CDB60 CBNZ W9, 0x36CDB70
	0x036CDB64 BL 0x1C16DFC
	0x036CDB68 LDR X0, [X20]
	0x036CDB6C LDR X8, [X0 + 0xB8]
	0x036CDB70 LDRH W9, [X8 + 0x36]
	0x036CDB74 CMP W9, W19, UXTH
	0x036CDB78 B.EQ 0x36CDB9C
	0x036CDB7C LDR W9, [X0 + 0xE0]
	0x036CDB80 CBNZ W9, 0x36CDB90
	0x036CDB84 BL 0x1C16DFC
	0x036CDB88 LDR X0, [X20]
	0x036CDB8C LDR X8, [X0 + 0xB8]
	0x036CDB90 LDRH W9, [X8 + 0x3A]
	0x036CDB94 CMP W9, W19, UXTH
	0x036CDB98 B.NE 0x36CDBAC
	0x036CDB9C MOVZ W0, 0x1
	0x036CDBA0 LDP X20, X19, [X31 + 0x10]
	0x036CDBA4 LDP X30, X21, [X31], #0x20
	0x036CDBA8 RET
	0x036CDBAC LDR W9, [X0 + 0xE0]
	0x036CDBB0 CBNZ W9, 0x36CDBC0
	0x036CDBB4 BL 0x1C16DFC
	0x036CDBB8 LDR X8, [X20]
	0x036CDBBC LDR X8, [X8 + 0xB8]
	0x036CDBC0 LDRH W8, [X8 + 0x3C]
	0x036CDBC4 CMP W8, W19, UXTH
	0x036CDBC8 CSET W0, EQ
	0x036CDBCC B 0x36CDBA0
	0x036CDBD0 STP X30, X21, [X31 - 0x20]!
	0x036CDBD4 STP X20, X19, [X31 + 0x10]
	0x036CDBD8 ADRP X21, 0xD13000
	0x036CDBDC ADRP X19, 0xA72000
	0x036CDBE0 ADRP X20, 0xA2F000
	0x036CDBE4 LDRB W8, [X21 + 0xA67]
	0x036CDBE8 LDR X19, [X19 + 0xEC0]
	0x036CDBEC LDR X20, [X20 + 0x8D8]
	0x036CDBF0 TBNZ X8, 0x0, 0x36CDCB0
	0x036CDBF4 ADRP X0, 0xA2F000
	0x036CDBF8 LDR X0, [X0 + 0x8D8]
	0x036CDBFC BL 0x1C16CF4
	0x036CDC00 ADRP X0, 0xA72000
	0x036CDC04 LDR X0, [X0 + 0xEC0]
	0x036CDC08 BL 0x1C16CF4
	0x036CDC0C ADRP X0, 0xA26000
	0x036CDC10 LDR X0, [X0 + 0xAC8]
	0x036CDC14 BL 0x1C16CF4
	0x036CDC18 ADRP X0, 0xA5B000
	0x036CDC1C LDR X0, [X0 + 0x5F0]
	0x036CDC20 BL 0x1C16CF4
	0x036CDC24 ADRP X0, 0xA5B000
	0x036CDC28 LDR X0, [X0 + 0x600]
	0x036CDC2C BL 0x1C16CF4
	0x036CDC30 ADRP X0, 0xA5B000
	0x036CDC34 LDR X0, [X0 + 0x640]
	0x036CDC38 BL 0x1C16CF4
	0x036CDC3C ADRP X0, 0xA5B000
	0x036CDC40 LDR X0, [X0 + 0x648]
	0x036CDC44 BL 0x1C16CF4
	0x036CDC48 ADRP X0, 0xA5B000
	0x036CDC4C LDR X0, [X0 + 0x650]
	0x036CDC50 BL 0x1C16CF4
	0x036CDC54 ADRP X0, 0xA5B000
	0x036CDC58 LDR X0, [X0 + 0x658]
	0x036CDC5C BL 0x1C16CF4
	0x036CDC60 ADRP X0, 0xA5B000
	0x036CDC64 LDR X0, [X0 + 0x6A0]
	0x036CDC68 BL 0x1C16CF4
	0x036CDC6C ADRP X0, 0xA5B000
	0x036CDC70 LDR X0, [X0 + 0x6D8]
	0x036CDC74 BL 0x1C16CF4
	0x036CDC78 ADRP X0, 0xA5B000
	0x036CDC7C LDR X0, [X0 + 0x700]
	0x036CDC80 BL 0x1C16CF4
	0x036CDC84 ADRP X0, 0xA5B000
	0x036CDC88 LDR X0, [X0 + 0x750]
	0x036CDC8C BL 0x1C16CF4
	0x036CDC90 ADRP X0, 0xA5B000
	0x036CDC94 LDR X0, [X0 + 0x758]
	0x036CDC98 BL 0x1C16CF4
	0x036CDC9C ADRP X0, 0xA5B000
	0x036CDCA0 LDR X0, [X0 + 0x760]
	0x036CDCA4 BL 0x1C16CF4
	0x036CDCA8 MOVZ W8, 0x1
	0x036CDCAC STRB W8, [X21 + 0xA67]
	0x036CDCB0 BL 0x36CD384
	0x036CDCB4 LDR X8, [X19]
	0x036CDCB8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD14000
	007 Move W8, [X19+2646]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xA73000
	014 Move X0, [X0+3696]
	015 Call 0x1C17CF4
	016 Move X0, 0xA73000
	017 Move X0, [X0+3704]
	018 Call 0x1C17CF4
	019 Move X0, 0xA73000
	020 Move X0, [X0+3712]
	021 Call 0x1C17CF4
	022 Move X0, 0xA68000
	023 Move X0, [X0+1592]
	024 Call 0x1C17CF4
	025 Move X0, 0xA73000
	026 Move X0, [X0+16]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+2646], W8
	030 Move X19, [X20+32]
	031 Move [X31+12], W31
	032 Add X1, X31, 12
	033 Move X0, X19
	034 Move X2, X31
	035 Call Monitor.Enter, X0, X1
	036 Move X0, X31
	037 Call Thread.get_CurrentThread
	038 Move X21, X0
	039 Move X0, [X20+32]
	040 Compare X0, 0
	041 JumpIfEqual {105}
	042 Move X8, 0xA73000
	043 Move X8, [X8+3712]
	044 Move X2, [X8]
	045 Move X1, X21
	046 Call List`1<Object>.Remove, X0, X1
	047 Move X22, 0xA73000
	048 Move X22, [X22+16]
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X22]
	055 Move X8, [X0+184]
	056 Move W8, [X8]
	057 Compare W8, 0
	058 JumpIfEqual {76}
	059 Move X0, [X20+32]
	060 Compare X0, 0
	061 JumpIfEqual {106}
	062 Move X8, 0xA73000
	063 Move X8, [X8+3704]
	064 Move X2, [X8]
	065 Move X1, X21
	066 Call List`1<Object>.IndexOf, X0, X1
	067 Add W31, W0, 1
	068 Move X0, [X20+40]
	069 Compare X0, 0
	070 JumpIfEqual {108}
	071 Move X8, 0xA73000
	072 Move X8, [X8+3696]
	073 Move X2, [X8]
	074 Move X1, X21
	075 Call Dictionary`2<Object, Object>.Remove, X0, X1
	076 Move W8, [X20+48]
	077 Compare W8, 0
	078 JumpIfEqual {85}
	079 Move X0, [X20+32]
	080 Compare X0, 0
	081 JumpIfEqual {107}
	082 Move W8, [X0+24]
	083 Compare W8, 0
	084 JumpIfEqual {86}
	085 Move X21, X31
	086 Move X1, X31
	087 Call Monitor.Pulse, X0
	088 Move X21, X31
	089 Move W8, [X31+12]
	090 Compare W8, 0
	091 JumpIfEqual {95}
	092 Move X0, X19
	093 Move X1, X31
	094 Call Monitor.Exit, X0
	095 Compare X21, 0
	096 JumpIfNotEqual {103}
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Return 
	103 Move X0, X21
	104 Call 0x1C17F18
	105 Call 0x1C17F20
	106 Call 0x1C17F20
	107 Call 0x1C17F20
	108 Call 0x1C17F20
	109 Move X20, X0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X20
	112 Call 0x3EB2AD0
	113 Move X21, [X0]
	114 Call 0x3EB2AE0
	115 Move X21, X31
	116 Move X20, X0
	117 Move W8, [X31+12]
	118 Compare W8, 0
	119 JumpIfEqual {123}
	120 Move X0, X19
	121 Move X1, X31
	122 Call Monitor.Exit, X0
	123 Compare X21, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X20
	126 Call 0x1D2D690
	127 Move X0, X21
	128 Call 0x1C17F18
	129 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x036CDCBC STR X0, [X8]
	0x036CDCC0 BL 0x36CD56C
	0x036CDCC4 LDR X8, [X19]
	0x036CDCC8 LDR X8, [X8 + 0xB8]
	0x036CDCCC STR X0, [X8 + 0x8]
	0x036CDCD0 BL 0x36CD6AC
	0x036CDCD4 LDR X8, [X19]
	0x036CDCD8 LDR X8, [X8 + 0xB8]
	0x036CDCDC STR X0, [X8 + 0x10]
	0x036CDCE0 BL 0x36CD7EC
	0x036CDCE4 LDR X8, [X19]
	0x036CDCE8 LDR X8, [X8 + 0xB8]
	0x036CDCEC STR X0, [X8 + 0x18]
	0x036CDCF0 BL 0x36CD894
	0x036CDCF4 LDR X8, [X19]
	0x036CDCF8 LDR X8, [X8 + 0xB8]
	0x036CDCFC STR X0, [X8 + 0x20]
	0x036CDD00 BL 0x36CD990
	0x036CDD04 LDR X8, [X19]
	0x036CDD08 ADRP X9, 0xFFFFFFFFFD41E000
	0x036CDD0C LDR V0, [X9 + 0x61]
	0x036CDD10 ADRP X9, 0xFFFFFFFFFD420000
	0x036CDD14 LDR X8, [X8 + 0xB8]
	0x036CDD18 MOVZ W1, 0x1
	0x036CDD1C STUR V0, [X8 + 0x34]
	0x036CDD20 LDR V0, [X9 + 0x650]
	0x036CDD24 MOVZ W9, 0x7F
	0x036CDD28 STR W9, [X8 + 0x30]
	0x036CDD2C MOVZ W9, 0x5D
	0x036CDD30 MOVK W9, 0x2C0000
	0x036CDD34 STR W9, [X8 + 0x4C]
	0x036CDD38 MOVZ W9, 0x2E
	0x036CDD3C STR X0, [X8 + 0x28]
	0x036CDD40 STUR D0, [X8 + 0x44]
	0x036CDD44 STRH W9, [X8 + 0x50]
	0x036CDD48 LDR X0, [X20]
	0x036CDD4C BL 0x1C16D6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD14000
	007 Move X22, 0xA73000
	008 Move X20, 0xA5B000
	009 Move X19, 0xA73000
	010 Move W8, [X21+2647]
	011 Move X22, [X22+3720]
	012 Move X20, [X20+2568]
	013 Move X19, [X19+16]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA73000
	019 Move X0, [X0+16]
	020 Call 0x1C17CF4
	021 Move X0, 0xA5B000
	022 Move X0, [X0+2568]
	023 Call 0x1C17CF4
	024 Move X0, 0xA73000
	025 Move X0, [X0+3720]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2647], W8
	029 Move X0, [X22]
	030 Move X1, X31
	031 Call Environment.GetEnvironmentVariable, X0
	032 Move X1, [X20]
	033 Move X2, X31
	034 Call String.op_Equality, X0, X1
	035 Move X8, [X19]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 And W9, W0, 1
	041 Move X8, [X8+184]
	042 Move [X8], W9
	043 Move X30, [X31+48]
	044 Return 

