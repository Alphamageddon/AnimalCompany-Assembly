Type: System.Net.NetworkStreamWrapper

Method: System.Void .ctor(System.Net.Sockets.TcpClient client)

Disassembly:
	0x0367E708 CBZ W8, 0x367E718
	0x0367E70C MOV X0, X19
	0x0367E710 MOV X1, X31
	0x0367E714 BL 0x33E14E4
	0x0367E718 CBNZ X20, 0x367E724
	0x0367E71C MOV X0, X22
	0x0367E720 BL 0x1D2C690
	0x0367E724 MOV X0, X20
	0x0367E728 BL 0x1C16F18
	0x0367E72C BL 0x1990590
	0x0367E730 STR X30, [X31 - 0x10]!
	0x0367E734 MOV X0, X31
	0x0367E738 BL 0x369B748
	0x0367E73C MOV X1, X31
	0x0367E740 LDR X30, [X31], #0x10
	0x0367E744 B 0x369B48C
	0x0367E748 STR X30, [X31 - 0x20]!
	0x0367E74C STP X20, X19, [X31 + 0x10]
	0x0367E750 ADRP X19, 0xD62000
	0x0367E754 ADRP X20, 0xABF000
	0x0367E758 LDRB W8, [X19 + 0x7CA]
	0x0367E75C LDR X20, [X20 + 0xE60]
	0x0367E760 TBNZ X8, 0x0, 0x367E784
	0x0367E764 ADRP X0, 0xABF000
	0x0367E768 LDR X0, [X0 + 0xE60]
	0x0367E76C BL 0x1C16CF4
	0x0367E770 ADRP X0, 0xA7B000
	0x0367E774 LDR X0, [X0 + 0xCC0]
	0x0367E778 BL 0x1C16CF4
	0x0367E77C MOVZ W8, 0x1
	0x0367E780 STRB W8, [X19 + 0x7CA]
	0x0367E784 LDR X8, [X20]
	0x0367E788 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD63000
	007 Move X22, 0xAA5000
	008 Move W8, [X21+1983]
	009 Move X22, [X22+3344]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAA5000
	017 Move X0, [X0+3344]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1983], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Call Stream..ctor, X0
	029 Move [X19+40], X20
	030 Compare X20, 0
	031 JumpIfEqual {42}
	032 Move X0, X20
	033 Move X1, X31
	034 Call TcpClient.GetStream, X0
	035 Move [X19+48], X0
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 
	042 Call 0x1C17F20

Method: System.Boolean get_UsingSecureStream()

Disassembly:
	0x0367E78C LDR X0, [X8 + 0x8]
	0x0367E790 CBNZ X0, 0x367E7D8
	0x0367E794 ADRP X8, 0xA7B000
	0x0367E798 LDR X8, [X8 + 0xCC0]
	0x0367E79C LDR X0, [X8]
	0x0367E7A0 BL 0x1C16F10
	0x0367E7A4 MOV X1, X31
	0x0367E7A8 MOV X19, X0
	0x0367E7AC BL 0x33BDD8C
	0x0367E7B0 LDR X8, [X20]
	0x0367E7B4 MOV X1, X19
	0x0367E7B8 MOV X2, X31
	0x0367E7BC MOV X3, X31
	0x0367E7C0 LDR X8, [X8 + 0xB8]
	0x0367E7C4 ADD X0, X8, 0x8
	0x0367E7C8 BL 0x33EB118
	0x0367E7CC LDR X8, [X20]
	0x0367E7D0 LDR X8, [X8 + 0xB8]
	0x0367E7D4 LDR X0, [X8 + 0x8]
	0x0367E7D8 LDP X20, X19, [X31 + 0x10]
	0x0367E7DC LDR X30, [X31], #0x20
	0x0367E7E0 RET
	0x0367E7E4 CBZ X0, 0x367E7F8
	0x0367E7E8 LDR W8, [X0 + 0x10]
	0x0367E7EC CMP W8, 0x0
	0x0367E7F0 CSET W0, EQ
	0x0367E7F4 RET
	0x0367E7F8 MOVZ W0, 0x1
	0x0367E7FC RET
	0x0367E800 CMP W0, 0x10000
	0x0367E804 CSET W0, CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD63000
	005 Move W8, [X20+1984]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xAC0000
	012 Move X0, [X0+2288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1984], W8
	016 Move X8, [X19+48]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X10, 0xAC0000
	020 Move X10, [X10+2288]
	021 Move X9, [X8]
	022 Move X8, [X10]
	023 Move W11, [X9+304]
	024 Move W10, [X8+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Net.IPAddress get_ServerAddress()

Disassembly:
	0x0367E808 RET
	0x0367E80C STR X30, [X31 - 0x40]!
	0x0367E810 STP X24, X23, [X31 + 0x10]
	0x0367E814 STP X22, X21, [X31 + 0x20]
	0x0367E818 STP X20, X19, [X31 + 0x30]
	0x0367E81C ADRP X23, 0xD62000
	0x0367E820 ADRP X24, 0xA75000
	0x0367E824 ADRP X20, 0xABF000
	0x0367E828 ADRP X22, 0xA7E000
	0x0367E82C ADRP X19, 0xABF000
	0x0367E830 ADRP X21, 0xABF000
	0x0367E834 LDRB W8, [X23 + 0x7CB]
	0x0367E838 LDR X24, [X24 + 0xAC8]
	0x0367E83C LDR X20, [X20 + 0xE28]
	0x0367E840 LDR X22, [X22 + 0x8D8]
	0x0367E844 LDR X19, [X19 + 0xEA8]
	0x0367E848 LDR X21, [X21 + 0xEB0]
	0x0367E84C TBNZ X8, 0x0, 0x367E894
	0x0367E850 ADRP X0, 0xA7E000
	0x0367E854 LDR X0, [X0 + 0x8D8]
	0x0367E858 BL 0x1C16CF4
	0x0367E85C ADRP X0, 0xA75000
	0x0367E860 LDR X0, [X0 + 0xAC8]
	0x0367E864 BL 0x1C16CF4
	0x0367E868 ADRP X0, 0xABF000
	0x0367E86C LDR X0, [X0 + 0xEA8]
	0x0367E870 BL 0x1C16CF4
	0x0367E874 ADRP X0, 0xABF000
	0x0367E878 LDR X0, [X0 + 0xEB0]
	0x0367E87C BL 0x1C16CF4
	0x0367E880 ADRP X0, 0xABF000
	0x0367E884 LDR X0, [X0 + 0xE28]
	0x0367E888 BL 0x1C16CF4
	0x0367E88C MOVZ W8, 0x1
	0x0367E890 STRB W8, [X23 + 0x7CB]
	0x0367E894 LDR X0, [X24]
	0x0367E898 MOV W1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD63000
	005 Move W8, [X20+1985]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA83000
	012 Move X0, [X0+3000]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1985], W8
	016 Move X8, [X19+40]
	017 Compare X8, 0
	018 JumpIfEqual {42}
	019 Move X0, [X8+16]
	020 Compare X0, 0
	021 JumpIfEqual {42}
	022 Move X1, X31
	023 Call Socket.get_RemoteEndPoint, X0
	024 Compare X0, 0
	025 JumpIfEqual {42}
	026 Move X9, 0xA83000
	027 Move X9, [X9+3000]
	028 Move X8, [X0]
	029 Move X1, [X9]
	030 Move W10, [X8+304]
	031 Move W9, [X1+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X8+200]
	034 Add X8, X8, X9
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X0+16]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1C17F20
	043 Call 0x1C181E0

Method: System.Net.Sockets.Socket get_Socket()

Disassembly:
	0x0367E89C BL 0x1C16D6C
	0x0367E8A0 LDR X8, [X20]
	0x0367E8A4 MOVZ W1, 0x4
	0x0367E8A8 LDR X8, [X8 + 0xB8]
	0x0367E8AC STR X0, [X8]
	0x0367E8B0 LDR X0, [X22]
	0x0367E8B4 BL 0x1C16D6C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+16]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Net.Sockets.NetworkStream get_NetworkStream()

Disassembly:
	0x0367E8B8 LDR X1, [X19]
	0x0367E8BC MOV X2, X31

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_NetworkStream(System.Net.Sockets.NetworkStream value)

Disassembly:
	0x0367E8C0 MOV X19, X0
	0x0367E8C4 BL 0x32C5BD8

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Boolean get_CanRead()

Disassembly:
	0x0367E8C8 LDR X8, [X20]
	0x0367E8CC MOVZ W1, 0x16
	0x0367E8D0 LDR X8, [X8 + 0xB8]
	0x0367E8D4 STR X19, [X8 + 0x8]
	0x0367E8D8 LDR X0, [X22]
	0x0367E8DC BL 0x1C16D6C
	0x0367E8E0 LDR X1, [X21]
	0x0367E8E4 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+424]
	007 Move X1, [X8+432]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean get_CanSeek()

Disassembly:
	0x0367E8E8 MOV X19, X0
	0x0367E8EC BL 0x32C5BD8
	0x0367E8F0 LDR X8, [X20]
	0x0367E8F4 LDP X22, X21, [X31 + 0x20]
	0x0367E8F8 LDP X24, X23, [X31 + 0x10]
	0x0367E8FC LDR X8, [X8 + 0xB8]
	0x0367E900 STR X19, [X8 + 0x10]
	0x0367E904 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+440]
	007 Move X1, [X8+448]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean get_CanWrite()

Disassembly:
	0x0367E908 LDR X30, [X31], #0x40
	0x0367E90C RET
	0x0367E910 MOVZ W8, 0x10
	0x0367E914 MOV X2, X31
	0x0367E918 MOV X3, X31
	0x0367E91C STR W8, [X0 + 0x8C]
	0x0367E920 B 0x337DF40
	0x0367E924 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+472]
	007 Move X1, [X8+480]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean get_CanTimeout()

Disassembly:
	0x0367E928 STP X22, X21, [X31 + 0x10]
	0x0367E92C STP X20, X19, [X31 + 0x20]
	0x0367E930 ADRP X22, 0xD62000
	0x0367E934 ADRP X21, 0xABF000
	0x0367E938 LDRB W8, [X22 + 0x81A]
	0x0367E93C LDR X21, [X21 + 0xEB8]
	0x0367E940 MOV W20, W1
	0x0367E944 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+456]
	007 Move X1, [X8+464]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 get_ReadTimeout()

Disassembly:
	0x0367E948 TBNZ X8, 0x0, 0x367E96C
	0x0367E94C ADRP X0, 0xA77000
	0x0367E950 LDR X0, [X0 + 0xC48]
	0x0367E954 BL 0x1C16CF4
	0x0367E958 ADRP X0, 0xABF000
	0x0367E95C LDR X0, [X0 + 0xEB8]
	0x0367E960 BL 0x1C16CF4
	0x0367E964 MOVZ W8, 0x1
	0x0367E968 STRB W8, [X22 + 0x81A]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+536]
	007 Move X1, [X8+544]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_ReadTimeout(System.Int32 value)

Disassembly:
	0x0367E96C LDR X0, [X21]
	0x0367E970 ADRP X21, 0xA77000
	0x0367E974 LDR W8, [X0 + 0xE0]
	0x0367E978 LDR X21, [X21 + 0xC48]
	0x0367E97C CBNZ W8, 0x367E984
	0x0367E980 BL 0x1C16DFC
	0x0367E984 MOV W0, W20
	0x0367E988 BL 0x367FFC8
	0x0367E98C MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+552]
	007 Move X2, [X8+560]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Int32 get_WriteTimeout()

Disassembly:
	0x0367E990 BL 0x320A1E4
	0x0367E994 MOV X20, X0
	0x0367E998 MOV X0, X19
	0x0367E99C MOV X1, X31
	0x0367E9A0 BL 0x320A1E4
	0x0367E9A4 LDR X8, [X21]
	0x0367E9A8 MOV X19, X0
	0x0367E9AC LDR W9, [X8 + 0xE0]
	0x0367E9B0 CBNZ W9, 0x367E9BC

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+568]
	007 Move X1, [X8+576]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_WriteTimeout(System.Int32 value)

Disassembly:
	0x0367E9B4 MOV X0, X8
	0x0367E9B8 BL 0x1C16DFC
	0x0367E9BC MOV X0, X31
	0x0367E9C0 BL 0x33387A0
	0x0367E9C4 MOV X1, X19
	0x0367E9C8 MOV X2, X20
	0x0367E9CC LDP X20, X19, [X31 + 0x20]
	0x0367E9D0 LDP X22, X21, [X31 + 0x10]
	0x0367E9D4 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+584]
	007 Move X2, [X8+592]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Int64 get_Length()

Disassembly:
	0x0367E9D8 LDR X30, [X31], #0x30
	0x0367E9DC B 0x3227D04
	0x0367E9E0 STR X30, [X31 - 0x30]!
	0x0367E9E4 STP X22, X21, [X31 + 0x10]
	0x0367E9E8 STP X20, X19, [X31 + 0x20]
	0x0367E9EC ADRP X20, 0xD62000
	0x0367E9F0 LDRB W8, [X20 + 0x7D1]
	0x0367E9F4 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+488]
	007 Move X1, [X8+496]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int64 get_Position()

Disassembly:
	0x0367E9F8 TBNZ X8, 0x0, 0x367EA34
	0x0367E9FC ADRP X0, 0xA77000
	0x0367EA00 LDR X0, [X0 + 0xC48]
	0x0367EA04 BL 0x1C16CF4
	0x0367EA08 ADRP X0, 0xABF000
	0x0367EA0C LDR X0, [X0 + 0xEC0]
	0x0367EA10 BL 0x1C16CF4
	0x0367EA14 ADRP X0, 0xA75000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+504]
	007 Move X1, [X8+512]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x0367EA18 LDR X0, [X0 + 0x9D0]
	0x0367EA1C BL 0x1C16CF4
	0x0367EA20 ADRP X0, 0xA75000
	0x0367EA24 LDR X0, [X0 + 0x6C0]
	0x0367EA28 BL 0x1C16CF4
	0x0367EA2C MOVZ W8, 0x1
	0x0367EA30 STRB W8, [X20 + 0x7D1]
	0x0367EA34 LDR X8, [X19 + 0x18]
	0x0367EA38 CBNZ X8, 0x367EB38

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+520]
	007 Move X2, [X8+528]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x0367EA3C ADRP X8, 0xA75000
	0x0367EA40 LDR X8, [X8 + 0x6C0]
	0x0367EA44 LDR X20, [X19 + 0x20]
	0x0367EA48 LDR X0, [X8]
	0x0367EA4C LDR W8, [X0 + 0xE0]
	0x0367EA50 CBNZ W8, 0x367EA58
	0x0367EA54 BL 0x1C16DFC
	0x0367EA58 MOV X0, X20
	0x0367EA5C MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+824]
	007 Move X3, [X8+832]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x0367EA60 MOV X2, X31
	0x0367EA64 BL 0x3395F0C
	0x0367EA68 TBZ X0, 0x0, 0x367EB38
	0x0367EA6C STRB W31, [X31 + 0xC]
	0x0367EA70 ADD X1, X31, 0xC
	0x0367EA74 MOV X0, X19
	0x0367EA78 MOV X2, X31
	0x0367EA7C BL 0x33DE64C
	0x0367EA80 LDR X8, [X19 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+856]
	007 Move X4, [X8+864]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x0367EA84 CBNZ X8, 0x367EB1C
	0x0367EA88 ADRP X8, 0xA75000
	0x0367EA8C LDR X20, [X19 + 0x20]
	0x0367EA90 LDR X8, [X8 + 0x9D0]
	0x0367EA94 LDR X0, [X8]
	0x0367EA98 MOV W1, W31
	0x0367EA9C BL 0x1C16D6C
	0x0367EAA0 ADRP X8, 0xA77000
	0x0367EAA4 LDR X8, [X8 + 0xC48]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+904]
	007 Move X4, [X8+912]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x0367EAA8 MOV X21, X0
	0x0367EAAC LDR X0, [X8]
	0x0367EAB0 LDR W8, [X0 + 0xE0]
	0x0367EAB4 CBNZ W8, 0x367EABC
	0x0367EAB8 BL 0x1C16DFC
	0x0367EABC MOV X0, X31
	0x0367EAC0 BL 0x3338524
	0x0367EAC4 MOV X4, X0
	0x0367EAC8 MOVZ W1, 0x234
	0x0367EACC MOV X0, X20
	0x0367EAD0 MOV X2, X31
	0x0367EAD4 MOV X3, X21
	0x0367EAD8 MOV X5, X31
	0x0367EADC BL 0x33A6480
	0x0367EAE0 MOV X20, X0
	0x0367EAE4 CBZ X0, 0x367EB4C
	0x0367EAE8 ADRP X22, 0xABF000
	0x0367EAEC LDR X22, [X22 + 0xEC0]
	0x0367EAF0 LDR X21, [X22]
	0x0367EAF4 MOV X0, X20
	0x0367EAF8 MOV X1, X21
	0x0367EAFC BL 0x1C16E00
	0x0367EB00 CBZ X0, 0x367EB5C
	0x0367EB04 STR X0, [X19 + 0x18]
	0x0367EB08 LDR X21, [X22]
	0x0367EB0C MOV X0, X20
	0x0367EB10 MOV X1, X21
	0x0367EB14 BL 0x1C16E00
	0x0367EB18 CBZ X0, 0x367EB68
	0x0367EB1C MOV X20, X31
	0x0367EB20 LDRB W8, [X31 + 0xC]
	0x0367EB24 CBZ W8, 0x367EB34
	0x0367EB28 MOV X0, X19
	0x0367EB2C MOV X1, X31
	0x0367EB30 BL 0x33E14E4
	0x0367EB34 CBNZ X20, 0x367EB54
	0x0367EB38 LDR X0, [X19 + 0x18]
	0x0367EB3C LDP X20, X19, [X31 + 0x20]
	0x0367EB40 LDP X22, X21, [X31 + 0x10]
	0x0367EB44 LDR X30, [X31], #0x30
	0x0367EB48 RET
	0x0367EB4C STR X31, [X19 + 0x18]
	0x0367EB50 B 0x367EB20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X19, X0
	007 Move TEMP, X1
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call NetworkStreamWrapper.CloseSocket, X0
	013 And W1, W20, 1
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X2, X31
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Call Stream.Dispose, X0, X1
	021 Return 
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X21, X0
	024 Move X0, X21
	025 Call 0x3EB2AD0
	026 Move X20, [X0]
	027 Call 0x3EB2AE0
	028 Move W1, 1
	029 Move X0, X19
	030 Move X2, X31
	031 Call Stream.Dispose, X0, X1
	032 Compare X20, 0
	033 JumpIfNotEqual {40}
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 
	039 Move X20, X31
	040 Move X0, X20
	041 Call 0x1C17F18
	042 Move X21, X0
	043 Move W1, 1
	044 Move X0, X19
	045 Move X2, X31
	046 Call Stream.Dispose, X0, X1
	047 Compare X20, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X21
	050 Call 0x1D2D690
	051 Move X0, X20
	052 Call 0x1C17F18
	053 Call 0x1991590

Method: System.Void CloseSocket()

Disassembly:
	0x0367C0B4 BL 0x1C16DFC
	0x0367C0B8 ADRP X24, 0xAC1000
	0x0367C0BC LDR X24, [X24 + 0xDB0]
	0x0367C0C0 MOV X0, X31
	0x0367C0C4 BL 0x366A368
	0x0367C0C8 TBZ X0, 0x0, 0x367C0F0
	0x0367C0CC LDR X0, [X23]
	0x0367C0D0 LDR W8, [X0 + 0xE0]
	0x0367C0D4 CBNZ W8, 0x367C0DC
	0x0367C0D8 BL 0x1C16DFC
	0x0367C0DC LDR X2, [X24]
	0x0367C0E0 MOV X0, X20
	0x0367C0E4 MOV X1, X19
	0x0367C0E8 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+48]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X8, [X0]
	008 Move X9, [X8+632]
	009 Move X1, [X8+640]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, [X19+40]
	012 Compare X0, 0
	013 JumpIfEqual {19}
	014 Move X1, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call TcpClient.Dispose, X0
	018 Return 
	019 Call 0x1C17F20

Method: System.Void Close(System.Int32 timeout)

Disassembly:
	0x0367EB54 MOV X0, X20
	0x0367EB58 BL 0x1C16F18
	0x0367EB5C MOV X0, X20
	0x0367EB60 MOV X1, X21
	0x0367EB64 BL 0x1C171E0
	0x0367EB68 MOV X0, X20
	0x0367EB6C MOV X1, X21
	0x0367EB70 BL 0x1C171E0
	0x0367EB74 B 0x367EB80
	0x0367EB78 B 0x367EB80
	0x0367EB7C B 0x367EB80
	0x0367EB80 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+48]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X2, X31
	008 Call NetworkStream.Close, X0, X1
	009 Move X0, [X19+40]
	010 Compare X0, 0
	011 JumpIfEqual {17}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TcpClient.Dispose, X0
	016 Return 
	017 Call 0x1C17F20

Method: System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x0367EB84 CMP W1, 0x1
	0x0367EB88 B.NE 0x367EBA0
	0x0367EB8C MOV X0, X21
	0x0367EB90 BL 0x3EB1AD0
	0x0367EB94 LDR X20, [X0]
	0x0367EB98 BL 0x3EB1AE0
	0x0367EB9C B 0x367EB20
	0x0367EBA0 MOV X20, X31
	0x0367EBA4 B 0x367EBAC

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X7, [X8+696]
	007 Move X6, [X8+704]
	008 Move X30, [X31+16]
	009 CallNoReturn X7
	010 Call 0x1C17F20

Method: System.Int32 EndRead(System.IAsyncResult asyncResult)

Disassembly:
	0x0367EBA8 MOV X21, X0
	0x0367EBAC LDRB W8, [X31 + 0xC]
	0x0367EBB0 CBZ W8, 0x367EBC0
	0x0367EBB4 MOV X0, X19
	0x0367EBB8 MOV X1, X31
	0x0367EBBC BL 0x33E14E4
	0x0367EBC0 CBNZ X20, 0x367EBCC
	0x0367EBC4 MOV X0, X21
	0x0367EBC8 BL 0x1D2C690

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+712]
	007 Move X2, [X8+720]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0367EBCC MOV X0, X20
	0x0367EBD0 BL 0x1C16F18
	0x0367EBD4 BL 0x1990590
	0x0367EBD8 STR X1, [X0 + 0x18]
	0x0367EBDC RET
	0x0367EBE0 STP X30, X21, [X31 - 0x20]!
	0x0367EBE4 STP X20, X19, [X31 + 0x10]
	0x0367EBE8 MOV X20, X1
	0x0367EBEC MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X6, [X8+728]
	007 Move X5, [X8+736]
	008 Move X30, [X31+16]
	009 CallNoReturn X6
	010 Call 0x1C17F20

Method: System.IAsyncResult BeginWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x0367EBF0 MOV X19, X2
	0x0367EBF4 MOV X21, X0
	0x0367EBF8 BL 0x33BDD8C
	0x0367EBFC STP X20, X19, [X21 + 0x10]
	0x0367EC00 LDP X20, X19, [X31 + 0x10]
	0x0367EC04 LDP X30, X21, [X31], #0x20
	0x0367EC08 RET
	0x0367EC0C STP X30, X21, [X31 - 0x20]!
	0x0367EC10 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X7, [X8+760]
	007 Move X6, [X8+768]
	008 Move X30, [X31+16]
	009 CallNoReturn X7
	010 Call 0x1C17F20

Method: System.Void EndWrite(System.IAsyncResult asyncResult)

Disassembly:
	0x0367EC14 LDR X8, [X2 + 0x8]
	0x0367EC18 STP X1, X2, [X0 + 0x20]
	0x0367EC1C MOV X19, X0
	0x0367EC20 MOV X20, X1
	0x0367EC24 STR X8, [X0 + 0x10]
	0x0367EC28 LDRB W21, [X2 + 0x52]
	0x0367EC2C STR X0, [X0 + 0x40]
	0x0367EC30 MOV X0, X2
	0x0367EC34 BL 0x1C16D84

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+776]
	007 Move X2, [X8+784]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0367EC38 TBZ X0, 0x0, 0x367EC54
	0x0367EC3C CMP W21, 0x2
	0x0367EC40 B.NE 0x367EC58
	0x0367EC44 ADRP X8, 0xFFFFFFFFFE548000
	0x0367EC48 ADD X8, X8, 0x73C
	0x0367EC4C STR X8, [X19 + 0x18]
	0x0367EC50 B 0x367EC68
	0x0367EC54 CBZ X20, 0x367EC80
	0x0367EC58 LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X6, [X8+792]
	007 Move X5, [X8+800]
	008 Move X30, [X31+16]
	009 CallNoReturn X6
	010 Call 0x1C17F20

Method: System.Void Flush()

Disassembly:
	0x0367EC5C LDR X9, [X19 + 0x20]
	0x0367EC60 STR X8, [X19 + 0x18]
	0x0367EC64 STR X9, [X19 + 0x40]
	0x0367EC68 ADRP X8, 0xFFFFFFFFFE548000
	0x0367EC6C ADD X8, X8, 0x6E4
	0x0367EC70 STR X8, [X19 + 0x38]
	0x0367EC74 LDP X20, X19, [X31 + 0x10]
	0x0367EC78 LDP X30, X21, [X31], #0x20
	0x0367EC7C RET

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+664]
	007 Move X1, [X8+672]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Threading.Tasks.Task FlushAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0367EC80 ADRP X1, 0xFFFFFFFFFD49D000
	0x0367EC84 ADD X1, X1, 0xEE3
	0x0367EC88 MOV X0, X31
	0x0367EC8C BL 0x1C16F3C
	0x0367EC90 MOV X1, X31
	0x0367EC94 BL 0x1C16DEC
	0x0367EC98 LDR X8, [X0 + 0x40]
	0x0367EC9C LDR X4, [X0 + 0x18]
	0x0367ECA0 LDR X3, [X0 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+680]
	007 Move X2, [X8+688]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x0367ECA4 MOV X0, X8
	0x0367ECA8 BR X4
	0x0367ECAC STR X30, [X31 - 0x40]!
	0x0367ECB0 STP X24, X23, [X31 + 0x10]
	0x0367ECB4 STP X22, X21, [X31 + 0x20]
	0x0367ECB8 STP X20, X19, [X31 + 0x30]
	0x0367ECBC MOV X19, X1
	0x0367ECC0 MOV X1, X31
	0x0367ECC4 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+840]
	007 Move X2, [X8+848]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void SetSocketTimeoutOption(System.Int32 timeout)

Disassembly:
	0x0367A9F8 B.CC 0x367AA10
	0x0367A9FC LDR X8, [X8 + 0xC8]
	0x0367AA00 ADD X8, X8, X9, 0x3, LSL
	0x0367AA04 LDUR X8, [X8 - 0x8]
	0x0367AA08 CMP X8, X1
	0x0367AA0C B.EQ 0x367AB04
	0x0367AA10 MOV X0, X20
	0x0367AA14 BL 0x1C171E0
	0x0367AA18 ADRP X8, 0xAC3000
	0x0367AA1C LDR X8, [X8 + 0xD50]
	0x0367AA20 LDR X0, [X8]
	0x0367AA24 BL 0x1C16F10
	0x0367AA28 MOV X1, X31
	0x0367AA2C MOV X20, X0
	0x0367AA30 BL 0x33BDD8C
	0x0367AA34 MOVN W8, 0x0
	0x0367AA38 STR W8, [X20 + 0x10]
	0x0367AA3C B 0x367AB28
	0x0367AA40 ADRP X8, 0xAC3000
	0x0367AA44 LDR X8, [X8 + 0xD60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+48]
	006 Compare X0, 0
	007 JumpIfEqual {24}
	008 Move X8, [X0]
	009 Move W19, W1
	010 Move X9, [X8+552]
	011 Move X2, [X8+560]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X0, [X20+48]
	014 Compare X0, 0
	015 JumpIfEqual {24}
	016 Move X8, [X0]
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X3, [X8+584]
	021 Move X2, [X8+592]
	022 Move X30, [X31+32]
	023 CallNoReturn X3
	024 Call 0x1C17F20

