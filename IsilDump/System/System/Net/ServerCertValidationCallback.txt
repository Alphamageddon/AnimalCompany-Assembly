Type: System.Net.ServerCertValidationCallback

Method: System.Void .ctor(System.Net.Security.RemoteCertificateValidationCallback validationCallback)

Disassembly:
	0x03697914 LDR X1, [X26]
	0x03697918 MOV X0, X20
	0x0369791C BL 0x1C16E00
	0x03697920 MOV X20, X0
	0x03697924 CBZ X0, 0x3697980
	0x03697928 LDR X8, [X20]
	0x0369792C LDR X1, [X26]
	0x03697930 LDRH W9, [X8 + 0x12E]
	0x03697934 CBZ X9, 0x3697958
	0x03697938 LDR X10, [X8 + 0xB0]
	0x0369793C ADD X10, X10, 0x8
	0x03697940 LDUR X11, [X10 - 0x8]
	0x03697944 CMP X11, X1
	0x03697948 B.EQ 0x3697968
	0x0369794C SUBS X9, X9, 0x1
	0x03697950 ADD X10, X10, 0x10
	0x03697954 B.NE 0x3697940
	0x03697958 MOV X0, X20
	0x0369795C MOV W2, W31
	0x03697960 BL 0x1C5C788
	0x03697964 B 0x3697974
	0x03697968 LDRSW X9, [X10]
	0x0369796C ADD X8, X8, X9, 0x4, LSL
	0x03697970 ADD X0, X8, 0x138
	0x03697974 LDP X8, X1, [X0]
	0x03697978 MOV X0, X20
	0x0369797C BLR X8
	0x03697980 CBNZ X21, 0x36979AC
	0x03697984 MOV X23, X31
	0x03697988 CMP W22, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD4A000
	007 Move X21, 0xA85000
	008 Move W8, [X22+2179]
	009 Move X21, [X21+1408]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA85000
	017 Move X0, [X0+1408]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2179], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move [X19+16], X20
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call ExecutionContext.Capture
	032 Move [X19+24], X0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Net.Security.RemoteCertificateValidationCallback get_ValidationCallback()

Disassembly:
	0x0369798C B.NE 0x36979A4
	0x03697990 MOV X0, X24

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void Callback(System.Object state)

Disassembly:
	0x03697994 BL 0x3EB1AD0
	0x03697998 LDR X20, [X0]
	0x0369799C BL 0x3EB1AE0
	0x036979A0 B 0x36977F4
	0x036979A4 MOV X20, X31
	0x036979A8 B 0x36979C4
	0x036979AC MOV X0, X21
	0x036979B0 BL 0x1C16F18
	0x036979B4 MOV X22, X1
	0x036979B8 MOV X24, X0
	0x036979BC B 0x3697914
	0x036979C0 MOV X24, X0
	0x036979C4 LDRB W8, [X31 + 0xC]
	0x036979C8 CBZ W8, 0x36979D8
	0x036979CC MOV X0, X19
	0x036979D0 MOV X1, X31
	0x036979D4 BL 0x33E14E4
	0x036979D8 CBNZ X20, 0x36979E4
	0x036979DC MOV X0, X24
	0x036979E0 BL 0x1D2C690
	0x036979E4 MOV X0, X20
	0x036979E8 BL 0x1C16F18
	0x036979EC BL 0x1990590
	0x036979F0 STP X30, X21, [X31 - 0x20]!
	0x036979F4 STP X20, X19, [X31 + 0x10]
	0x036979F8 ADRP X19, 0xD49000
	0x036979FC ADRP X21, 0xA62000
	0x03697A00 ADRP X20, 0xAA7000
	0x03697A04 LDRB W8, [X19 + 0x88A]
	0x03697A08 LDR X21, [X21 + 0xCC0]
	0x03697A0C LDR X20, [X20 + 0x598]
	0x03697A10 TBNZ X8, 0x0, 0x3697A34
	0x03697A14 ADRP X0, 0xAA7000
	0x03697A18 LDR X0, [X0 + 0x598]
	0x03697A1C BL 0x1C16CF4
	0x03697A20 ADRP X0, 0xA62000
	0x03697A24 LDR X0, [X0 + 0xCC0]
	0x03697A28 BL 0x1C16CF4
	0x03697A2C MOVZ W8, 0x1
	0x03697A30 STRB W8, [X19 + 0x88A]
	0x03697A34 LDR X0, [X21]
	0x03697A38 BL 0x1C16F10
	0x03697A3C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD4A000
	006 Move W8, [X21+2180]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAA8000
	014 Move X0, [X0+1416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2180], W8
	018 Compare X19, 0
	019 JumpIfEqual {49}
	020 Move X9, 0xAA8000
	021 Move X9, [X9+1416]
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20+16]
	032 Compare X8, 0
	033 JumpIfEqual {49}
	034 Move W4, [X19+40]
	035 Move X2, [X19+24]
	036 Move X3, [X19+32]
	037 Move X1, [X19+16]
	038 Move X9, [X8+24]
	039 Move X0, [X8+64]
	040 Move X5, [X8+40]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 And W8, W0, 1
	043 Move [X19+44], W8
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Call 0x1C17F20
	050 Move X0, X19
	051 Call 0x1C181E0

Method: System.Boolean Invoke(System.Object request, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Security.Cryptography.X509Certificates.X509Chain chain, System.Net.Security.SslPolicyErrors sslPolicyErrors)

Disassembly:
	0x03697A40 MOV X19, X0
	0x03697A44 BL 0x33BDD8C
	0x03697A48 LDR X8, [X20]
	0x03697A4C LDR X8, [X8 + 0xB8]
	0x03697A50 STP X19, X31, [X8 + 0x8]
	0x03697A54 LDP X20, X19, [X31 + 0x10]
	0x03697A58 LDP X30, X21, [X31], #0x20
	0x03697A5C RET
	0x03697A60 STR X30, [X31 - 0x30]!
	0x03697A64 STP X22, X21, [X31 + 0x10]
	0x03697A68 STP X20, X19, [X31 + 0x20]
	0x03697A6C ADRP X22, 0xD49000
	0x03697A70 LDRB W8, [X22 + 0x88B]
	0x03697A74 MOV X19, X3
	0x03697A78 MOV X20, X2
	0x03697A7C MOV X21, X1
	0x03697A80 TBNZ X8, 0x0, 0x3697A98
	0x03697A84 ADRP X0, 0xAA6000
	0x03697A88 LDR X0, [X0 + 0xA68]
	0x03697A8C BL 0x1C16CF4
	0x03697A90 MOVZ W8, 0x1
	0x03697A94 STRB W8, [X22 + 0x88B]
	0x03697A98 CBZ X21, 0x3697AF4
	0x03697A9C CBZ X19, 0x3697AF4
	0x03697AA0 MOV X0, X21
	0x03697AA4 MOV X1, X31
	0x03697AA8 BL 0x322B8DC
	0x03697AAC CBZ X0, 0x3697B08
	0x03697AB0 MOV X1, X31
	0x03697AB4 BL 0x322B5E4
	0x03697AB8 CBZ X0, 0x3697B08
	0x03697ABC ADRP X8, 0xAA6000
	0x03697AC0 LDR X8, [X8 + 0xA68]
	0x03697AC4 MOVZ W2, 0x4
	0x03697AC8 MOV X3, X31
	0x03697ACC LDR X1, [X8]
	0x03697AD0 BL 0x322BD40
	0x03697AD4 ADDS W31, W0, 0x1
	0x03697AD8 B.EQ 0x3697AF4
	0x03697ADC MOV X0, X20
	0x03697AE0 MOV X1, X19
	0x03697AE4 LDP X20, X19, [X31 + 0x20]
	0x03697AE8 LDP X22, X21, [X31 + 0x10]
	0x03697AEC LDR X30, [X31], #0x30
	0x03697AF0 B 0x3697B0C
	0x03697AF4 LDP X20, X19, [X31 + 0x20]
	0x03697AF8 LDP X22, X21, [X31 + 0x10]
	0x03697AFC MOV X0, X31
	0x03697B00 LDR X30, [X31], #0x30
	0x03697B04 RET
	0x03697B08 BL 0x1C16F20
	0x03697B0C STR X30, [X31 - 0x30]!
	0x03697B10 STP X22, X21, [X31 + 0x10]
	0x03697B14 STP X20, X19, [X31 + 0x20]
	0x03697B18 ADRP X21, 0xD49000
	0x03697B1C LDRB W8, [X21 + 0x88D]
	0x03697B20 MOV X19, X1
	0x03697B24 MOV X20, X0
	0x03697B28 TBNZ X8, 0x0, 0x3697BAC
	0x03697B2C ADRP X0, 0xAA2000
	0x03697B30 LDR X0, [X0 + 0x820]
	0x03697B34 BL 0x1C16CF4
	0x03697B38 ADRP X0, 0xA65000
	0x03697B3C LDR X0, [X0 + 0x9E8]
	0x03697B40 BL 0x1C16CF4
	0x03697B44 ADRP X0, 0xA84000
	0x03697B48 LDR X0, [X0 + 0xB88]
	0x03697B4C BL 0x1C16CF4
	0x03697B50 ADRP X0, 0xAA2000
	0x03697B54 LDR X0, [X0 + 0x828]
	0x03697B58 BL 0x1C16CF4
	0x03697B5C ADRP X0, 0xA5C000
	0x03697B60 LDR X0, [X0 + 0xAC8]
	0x03697B64 BL 0x1C16CF4
	0x03697B68 ADRP X0, 0xA90000
	0x03697B6C LDR X0, [X0 + 0x7F8]
	0x03697B70 BL 0x1C16CF4
	0x03697B74 ADRP X0, 0xAA6000
	0x03697B78 LDR X0, [X0 + 0xA68]
	0x03697B7C BL 0x1C16CF4
	0x03697B80 ADRP X0, 0xA65000
	0x03697B84 LDR X0, [X0 + 0x988]
	0x03697B88 BL 0x1C16CF4
	0x03697B8C ADRP X0, 0xA97000
	0x03697B90 LDR X0, [X0 + 0x850]
	0x03697B94 BL 0x1C16CF4
	0x03697B98 ADRP X0, 0xA5C000
	0x03697B9C LDR X0, [X0 + 0x988]
	0x03697BA0 BL 0x1C16CF4
	0x03697BA4 MOVZ W8, 0x1
	0x03697BA8 STRB W8, [X21 + 0x88D]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0xD4A000
	013 Move W8, [X24+2181]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X23, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xAA8000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move X0, 0xA8F000
	027 Move X0, [X0+2376]
	028 Call 0x1C17CF4
	029 Move X0, 0xA85000
	030 Move X0, [X0+1408]
	031 Call 0x1C17CF4
	032 Move X0, 0xAA8000
	033 Move X0, [X0+1424]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+2181], W8
	037 Move X0, [X22+24]
	038 Compare X0, 0
	039 JumpIfEqual {91}
	040 Move X24, 0xAA8000
	041 Move X26, 0xA8F000
	042 Move X27, 0xAA8000
	043 Move X28, 0xA85000
	044 Move X24, [X24+1416]
	045 Move X26, [X26+2376]
	046 Move X27, [X27+1424]
	047 Move X28, [X28+1408]
	048 Move X1, X31
	049 Call ExecutionContext.CreateCopy, X0
	050 Move X8, [X24]
	051 Move X25, X0
	052 Move X0, X8
	053 Call 0x1C17F10
	054 Move X1, X31
	055 Move X24, X0
	056 Call Object..ctor, X0
	057 Move [X24+16], X23
	058 Move [X24+24], X21
	059 Move [X24+32], X20
	060 Move [X24+40], W19
	061 Move X0, [X26]
	062 Call 0x1C17F10
	063 Move X2, [X27]
	064 Move X1, X22
	065 Move X3, X31
	066 Move X19, X0
	067 Call ContextCallback..ctor, X0, X1, X2
	068 Move X0, [X28]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X25
	074 Move X1, X19
	075 Move X2, X24
	076 Move X3, X31
	077 Call ExecutionContext.Run, X0, X1, X2
	078 Move W0, [X24+44]
	079 Move X20, [X31+80]
	080 Move X19, [X31+88]
	081 Move X22, [X31+64]
	082 Move X21, [X31+72]
	083 Move X24, [X31+48]
	084 Move X23, [X31+56]
	085 Move X26, [X31+32]
	086 Move X25, [X31+40]
	087 Move X28, [X31+16]
	088 Move X27, [X31+24]
	089 Move X30, [X31+96]
	090 Return X0
	091 Move X8, [X22+16]
	092 Compare X8, 0
	093 JumpIfEqual {113}
	094 Move X6, [X8+24]
	095 Move X0, [X8+64]
	096 Move X5, [X8+40]
	097 Move X1, X23
	098 Move X2, X21
	099 Move X3, X20
	100 Move W4, W19
	101 Move X20, [X31+80]
	102 Move X19, [X31+88]
	103 Move X22, [X31+64]
	104 Move X21, [X31+72]
	105 Move X24, [X31+48]
	106 Move X23, [X31+56]
	107 Move X26, [X31+32]
	108 Move X25, [X31+40]
	109 Move X28, [X31+16]
	110 Move X27, [X31+24]
	111 Move X30, [X31+96]
	112 CallNoReturn X6
	113 Call 0x1C17F20

