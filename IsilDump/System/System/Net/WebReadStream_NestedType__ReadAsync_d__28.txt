Type: System.Net.WebReadStream/<ReadAsync>d__28

Method: System.Void MoveNext()

Disassembly:
	0x036B2F80 ADRP X20, 0xA44000
	0x036B2F84 LDRB W8, [X21 + 0x971]
	0x036B2F88 LDR X20, [X20 + 0x280]
	0x036B2F8C MOV X19, X0
	0x036B2F90 TBNZ X8, 0x0, 0x36B2FB4
	0x036B2F94 ADRP X0, 0xA8D000
	0x036B2F98 LDR X0, [X0 + 0x378]
	0x036B2F9C BL 0x1C16CF4
	0x036B2FA0 ADRP X0, 0xA44000
	0x036B2FA4 LDR X0, [X0 + 0x280]
	0x036B2FA8 BL 0x1C16CF4
	0x036B2FAC MOVZ W8, 0x1
	0x036B2FB0 STRB W8, [X21 + 0x971]
	0x036B2FB4 LDR X0, [X20]
	0x036B2FB8 MOVI V0.2D, 0x0
	0x036B2FBC STR X31, [X31 + 0x70]
	0x036B2FC0 STP V0, V0, [X31 + 0x50]
	0x036B2FC4 STP V0, V0, [X31 + 0x30]
	0x036B2FC8 STR V0, [X31 + 0x2]
	0x036B2FCC STR X19, [X31 + 0x40]
	0x036B2FD0 ADRP X19, 0xA8D000
	0x036B2FD4 LDR W8, [X0 + 0xE0]
	0x036B2FD8 LDR X19, [X19 + 0x378]
	0x036B2FDC CBNZ W8, 0x36B2FE4
	0x036B2FE0 BL 0x1C16DFC
	0x036B2FE4 ADD X8, X31, 0x8
	0x036B2FE8 MOV X0, X31
	0x036B2FEC BL 0x32C4770
	0x036B2FF0 LDUR V0, [X31 + 0x8]
	0x036B2FF4 LDR X9, [X31 + 0x18]
	0x036B2FF8 LDR X2, [X19]
	0x036B2FFC ADD X8, X31, 0x20
	0x036B3000 ORR X19, X8, 0xF
	0x036B3004 MOVN W10, 0x0
	0x036B3008 ADD X1, X31, 0x20
	0x036B300C MOV X0, X19
	0x036B3010 STUR V0, [X31 + 0x28]
	0x036B3014 STR X9, [X31 + 0x38]
	0x036B3018 STR W10, [X31 + 0x20]
	0x036B301C BL 0x21966B8
	0x036B3020 MOV X0, X19
	0x036B3024 MOV X1, X31
	0x036B3028 BL 0x32C47F8
	0x036B302C LDP X20, X19, [X31 + 0x90]
	0x036B3030 LDP X30, X21, [X31 + 0x80]
	0x036B3034 ADD X31, X31, 0xA0
	0x036B3038 RET
	0x036B303C STR X30, [X31 - 0x30]!
	0x036B3040 STP X22, X21, [X31 + 0x10]
	0x036B3044 STP X20, X19, [X31 + 0x20]
	0x036B3048 ADRP X22, 0xD2D000
	0x036B304C ADRP X21, 0xA40000
	0x036B3050 ADRP X19, 0xA8C000
	0x036B3054 ADRP X20, 0xA41000
	0x036B3058 LDRB W8, [X22 + 0x972]
	0x036B305C LDR X21, [X21 + 0xB40]
	0x036B3060 LDR X19, [X19 + 0xA0]
	0x036B3064 LDR X20, [X20 + 0x7B8]
	0x036B3068 TBNZ X8, 0x0, 0x36B30A4
	0x036B306C ADRP X0, 0xA40000
	0x036B3070 LDR X0, [X0 + 0xB40]
	0x036B3074 BL 0x1C16CF4
	0x036B3078 ADRP X0, 0xA73000
	0x036B307C LDR X0, [X0 + 0xCE8]
	0x036B3080 BL 0x1C16CF4
	0x036B3084 ADRP X0, 0xA41000
	0x036B3088 LDR X0, [X0 + 0x7B8]
	0x036B308C BL 0x1C16CF4
	0x036B3090 ADRP X0, 0xA8C000
	0x036B3094 LDR X0, [X0 + 0xA0]
	0x036B3098 BL 0x1C16CF4
	0x036B309C MOVZ W8, 0x1
	0x036B30A0 STRB W8, [X22 + 0x972]
	0x036B30A4 LDR X0, [X21]
	0x036B30A8 ADRP X21, 0xA73000
	0x036B30AC LDR X21, [X21 + 0xCE8]
	0x036B30B0 BL 0x1C16F10
	0x036B30B4 LDR X1, [X19]
	0x036B30B8 MOV X2, X31
	0x036B30BC MOV X19, X0
	0x036B30C0 BL 0x3379A44
	0x036B30C4 LDR X0, [X20]
	0x036B30C8 LDR W8, [X0 + 0xE0]
	0x036B30CC CBNZ W8, 0x36B30D4
	0x036B30D0 BL 0x1C16DFC
	0x036B30D4 LDR X1, [X21]
	0x036B30D8 MOV X0, X19
	0x036B30DC LDP X20, X19, [X31 + 0x20]
	0x036B30E0 LDP X22, X21, [X31 + 0x10]
	0x036B30E4 LDR X30, [X31], #0x30
	0x036B30E8 B 0x2299DFC
	0x036B30EC STP X30, X19, [X31 - 0x10]!
	0x036B30F0 ADRP X0, 0xA40000
	0x036B30F4 LDR X0, [X0 + 0x5B0]
	0x036B30F8 BL 0x1C16D08
	0x036B30FC BL 0x1C16F10
	0x036B3100 MOV X1, X31
	0x036B3104 MOV X19, X0
	0x036B3108 BL 0x337DEC0
	0x036B310C ADRP X0, 0xA8C000
	0x036B3110 LDR X0, [X0 + 0x380]
	0x036B3114 BL 0x1C16D08
	0x036B3118 MOV X1, X0
	0x036B311C MOV X0, X19
	0x036B3120 BL 0x1C16DEC
	0x036B3124 STP X30, X21, [X31 - 0x20]!
	0x036B3128 STP X20, X19, [X31 + 0x10]
	0x036B312C LDRB W8, [X1]
	0x036B3130 CBZ W8, 0x36B3140
	0x036B3134 LDP X20, X19, [X31 + 0x10]
	0x036B3138 LDP X30, X21, [X31], #0x20
	0x036B313C RET
	0x036B3140 MOVZ W8, 0x1
	0x036B3144 STRB W8, [X1]
	0x036B3148 LDRB W8, [X0 + 0x62]
	0x036B314C MOV X20, X1
	0x036B3150 MOV X19, X0
	0x036B3154 CBZ W8, 0x36B3174
	0x036B3158 MOV X0, X19
	0x036B315C BL 0x36B2F70
	0x036B3160 CBZ X0, 0x36B31EC
	0x036B3164 LDP X20, X19, [X31 + 0x10]
	0x036B3168 MOV X1, X31
	0x036B316C LDP X30, X21, [X31], #0x20
	0x036B3170 B 0x33F2EC4
	0x036B3174 LDRB W8, [X19 + 0x61]
	0x036B3178 CBZ W8, 0x36B31D0
	0x036B317C LDRB W8, [X19 + 0x60]
	0x036B3180 CBNZ W8, 0x36B31D0
	0x036B3184 LDR X0, [X19 + 0x40]
	0x036B3188 CBZ X0, 0x36B31EC
	0x036B318C LDR X8, [X0]
	0x036B3190 LDR X9, [X8 + 0x208]
	0x036B3194 LDR X1, [X8 + 0x210]
	0x036B3198 BLR X9
	0x036B319C LDRB W8, [X19 + 0x62]
	0x036B31A0 CBNZ W8, 0x36B31C8
	0x036B31A4 LDR X8, [X19 + 0x50]
	0x036B31A8 CBZ X8, 0x36B31EC
	0x036B31AC ADDS X31, X0, 0x1
	0x036B31B0 B.EQ 0x36B31C8
	0x036B31B4 LDRB W8, [X8 + 0x30]
	0x036B31B8 CBNZ W8, 0x36B31C8
	0x036B31BC LDR X8, [X19 + 0x70]
	0x036B31C0 CMP X8, X0
	0x036B31C4 B.NE 0x36B31F0
	0x036B31C8 MOVZ W8, 0x1
	0x036B31CC STRB W8, [X20]
	0x036B31D0 LDR X0, [X19 + 0x50]
	0x036B31D4 CBZ X0, 0x36B31EC
	0x036B31D8 MOV X1, X19
	0x036B31DC LDP X20, X19, [X31 + 0x10]
	0x036B31E0 MOV X2, X31
	0x036B31E4 LDP X30, X21, [X31], #0x20
	0x036B31E8 B 0x36B0910
	0x036B31EC BL 0x1C16F20
	0x036B31F0 ADRP X0, 0xA6E000
	0x036B31F4 LDR X0, [X0 + 0x7A8]
	0x036B31F8 BL 0x1C16D08
	0x036B31FC BL 0x1C16F10
	0x036B3200 MOV X21, X0
	0x036B3204 ADRP X0, 0xA8C000
	0x036B3208 LDR X0, [X0 + 0x388]
	0x036B320C BL 0x1C16D08
	0x036B3210 MOV X1, X0
	0x036B3214 MOV X0, X21
	0x036B3218 MOV X2, X31
	0x036B321C BL 0x32E16BC
	0x036B3220 MOVZ W8, 0x1
	0x036B3224 STRB W8, [X19 + 0x28]
	0x036B3228 STRB W8, [X20]
	0x036B322C ADRP X0, 0xA6B000
	0x036B3230 LDR X0, [X0 + 0x330]
	0x036B3234 BL 0x1C16D08
	0x036B3238 BL 0x1C16F10
	0x036B323C MOV X20, X0
	0x036B3240 ADRP X0, 0xA8C000
	0x036B3244 LDR X0, [X0 + 0x390]
	0x036B3248 BL 0x1C16D08
	0x036B324C MOV X1, X0
	0x036B3250 MOVZ W2, 0x6
	0x036B3254 MOV X0, X20
	0x036B3258 MOV W3, W31
	0x036B325C MOV X4, X21
	0x036B3260 MOV X5, X31
	0x036B3264 BL 0x367FD90
	0x036B3268 LDR X21, [X19 + 0x50]
	0x036B326C MOV X0, X21
	0x036B3270 BL 0x19903C0
	0x036B3274 MOV X0, X21
	0x036B3278 MOV X1, X19
	0x036B327C MOV X2, X20
	0x036B3280 BL 0x36B0910
	0x036B3284 ADRP X0, 0xA8C000
	0x036B3288 LDR X0, [X0 + 0x398]
	0x036B328C BL 0x1C16D08
	0x036B3290 MOV X1, X0
	0x036B3294 MOV X0, X20
	0x036B3298 BL 0x1C16DEC
	0x036B329C STR X30, [X31 - 0x20]!
	0x036B32A0 STP X20, X19, [X31 + 0x10]
	0x036B32A4 ADRP X19, 0xD2D000
	0x036B32A8 ADRP X20, 0xA40000
	0x036B32AC LDRB W8, [X19 + 0x973]
	0x036B32B0 LDR X20, [X20 + 0x618]
	0x036B32B4 TBNZ X8, 0x0, 0x36B32D8
	0x036B32B8 ADRP X0, 0xA40000
	0x036B32BC LDR X0, [X0 + 0x618]
	0x036B32C0 BL 0x1C16CF4
	0x036B32C4 ADRP X0, 0xA8C000
	0x036B32C8 LDR X0, [X0 + 0x70]
	0x036B32CC BL 0x1C16CF4
	0x036B32D0 MOVZ W8, 0x1
	0x036B32D4 STRB W8, [X19 + 0x973]
	0x036B32D8 LDR X0, [X20]
	0x036B32DC MOVZ W1, 0x2
	0x036B32E0 BL 0x1C16D6C
	0x036B32E4 CBZ X0, 0x36B332C
	0x036B32E8 LDR W8, [X0 + 0x18]
	0x036B32EC CBZ W8, 0x36B3328
	0x036B32F0 MOVZ W9, 0xD
	0x036B32F4 CMP W8, 0x1
	0x036B32F8 STRB W9, [X0 + 0x20]
	0x036B32FC B.EQ 0x36B3328
	0x036B3300 ADRP X8, 0xA8C000
	0x036B3304 LDR X8, [X8 + 0x70]
	0x036B3308 MOVZ W9, 0xA
	0x036B330C STRB W9, [X0 + 0x21]
	0x036B3310 LDP X20, X19, [X31 + 0x10]
	0x036B3314 LDR X8, [X8]
	0x036B3318 LDR X8, [X8 + 0xB8]
	0x036B331C STR X0, [X8]
	0x036B3320 LDR X30, [X31], #0x20
	0x036B3324 RET
	0x036B3328 BL 0x1C16F28
	0x036B332C BL 0x1C16F20
	0x036B3330 SUB X31, X31, 0x40
	0x036B3334 STP X30, X23, [X31 + 0x10]
	0x036B3338 STP X22, X21, [X31 + 0x20]
	0x036B333C STP X20, X19, [X31 + 0x30]
	0x036B3340 ADRP X20, 0xD2D000
	0x036B3344 LDRB W8, [X20 + 0x974]
	0x036B3348 MOV X19, X0
	0x036B334C TBNZ X8, 0x0, 0x36B3370
	0x036B3350 ADRP X0, 0xA8C000
	0x036B3354 LDR X0, [X0 + 0x3A0]
	0x036B3358 BL 0x1C16CF4
	0x036B335C ADRP X0, 0xA43000
	0x036B3360 LDR X0, [X0 + 0x280]
	0x036B3364 BL 0x1C16CF4
	0x036B3368 MOVZ W8, 0x1
	0x036B336C STRB W8, [X20 + 0x974]
	0x036B3370 STP X31, X31, [X31]
	0x036B3374 ADRP X23, 0xA43000
	0x036B3378 LDR W8, [X19]
	0x036B337C LDR X20, [X19 + 0x20]
	0x036B3380 LDR X23, [X23 + 0x280]
	0x036B3384 CBZ W8, 0x36B3428
	0x036B3388 CBZ X20, 0x36B3498
	0x036B338C ADD X0, X20, 0x84
	0x036B3390 MOVZ W1, 0x1
	0x036B3394 MOV W2, W31
	0x036B3398 MOV X3, X31
	0x036B339C BL 0x33E7AB4
	0x036B33A0 CBNZ W0, 0x36B3460
	0x036B33A4 LDR X0, [X20 + 0x50]
	0x036B33A8 CBZ X0, 0x36B34A4
	0x036B33AC LDR X1, [X19 + 0x28]
	0x036B33B0 BL 0x36AD230
	0x036B33B4 LDRB W8, [X20 + 0x62]
	0x036B33B8 CBZ W8, 0x36B344C
	0x036B33BC LDR X1, [X19 + 0x28]
	0x036B33C0 MOV X0, X20
	0x036B33C4 BL 0x36B2EA0
	0x036B33C8 CBZ X0, 0x36B34A8
	0x036B33CC MOV W1, W31
	0x036B33D0 MOV X2, X31
	0x036B33D4 BL 0x33ED3A0
	0x036B33D8 STP X0, X1, [X31]
	0x036B33DC ADD X0, X31, 0x0
	0x036B33E0 MOV X1, X31
	0x036B33E4 BL 0x32C40D4
	0x036B33E8 TBNZ X0, 0x0, 0x36B343C
	0x036B33EC STR W31, [X19]
	0x036B33F0 LDR V0, [X31]
	0x036B33F4 STR V0, [X19 + 0x3]
	0x036B33F8 LDR X0, [X23]
	0x036B33FC LDR W8, [X0 + 0xE0]
	0x036B3400 CBNZ W8, 0x36B3408
	0x036B3404 BL 0x1C16DFC
	0x036B3408 ADRP X8, 0xA8C000
	0x036B340C LDR X8, [X8 + 0x3A0]
	0x036B3410 ADD X0, X19, 0x8
	0x036B3414 LDR X3, [X8]
	0x036B3418 ADD X1, X31, 0x0
	0x036B341C MOV X2, X19
	0x036B3420 BL 0x218C0F0
	0x036B3424 B 0x36B3484
	0x036B3428 LDR V0, [X19 + 0x3]
	0x036B342C MOVN W8, 0x0
	0x036B3430 STR V0, [X31]
	0x036B3434 STP X31, X31, [X19 + 0x30]
	0x036B3438 STR W8, [X19]
	0x036B343C ADD X0, X31, 0x0
	0x036B3440 MOV X1, X31
	0x036B3444 BL 0x32C40F0
	0x036B3448 CBZ X20, 0x36B34A0
	0x036B344C LDR X0, [X20 + 0x50]
	0x036B3450 CBZ X0, 0x36B349C
	0x036B3454 MOV X1, X20
	0x036B3458 MOV X2, X31
	0x036B345C BL 0x36B0910
	0x036B3460 MOVN W8, 0x1
	0x036B3464 STR W8, [X19], #0x8
	0x036B3468 LDR X0, [X23]
	0x036B346C LDR W8, [X0 + 0xE0]
	0x036B3470 CBNZ W8, 0x36B3478
	0x036B3474 BL 0x1C16DFC
	0x036B3478 MOV X0, X19
	0x036B347C MOV X1, X31
	0x036B3480 BL 0x32C4864
	0x036B3484 LDP X20, X19, [X31 + 0x30]
	0x036B3488 LDP X22, X21, [X31 + 0x20]
	0x036B348C LDP X30, X23, [X31 + 0x10]
	0x036B3490 ADD X31, X31, 0x40
	0x036B3494 RET
	0x036B3498 BL 0x1C16F20
	0x036B349C BL 0x1C16F20
	0x036B34A0 BL 0x1C16F20
	0x036B34A4 BL 0x1C16F20
	0x036B34A8 BL 0x1C16F20
	0x036B34AC B 0x36B34BC
	0x036B34B0 B 0x36B34BC
	0x036B34B4 B 0x36B34BC
	0x036B34B8 B 0x36B34BC
	0x036B34BC MOV X21, X0
	0x036B34C0 B 0x36B34CC
	0x036B34C4 B 0x36B35B4
	0x036B34C8 MOV X21, X0
	0x036B34CC CMP W1, 0x1
	0x036B34D0 B.EQ 0x36B34FC
	0x036B34D4 MOVZ W8, 0x1
	0x036B34D8 CMP W1, W8
	0x036B34DC B.NE 0x36B35B8
	0x036B34E0 MOV X0, X21
	0x036B34E4 BL 0x3EB1AD0
	0x036B34E8 LDR X22, [X0]
	0x036B34EC BL 0x3EB1AE0
	0x036B34F0 CBZ X22, 0x36B3448
	0x036B34F4 MOV X0, X22
	0x036B34F8 BL 0x1C16F18
	0x036B34FC MOV X0, X21
	0x036B3500 BL 0x3EB1AD0
	0x036B3504 MOV X21, X0
	0x036B3508 ADRP X0, 0xA40000
	0x036B350C LDR X0, [X0 + 0x7D0]
	0x036B3510 BL 0x1C16D08
	0x036B3514 LDR X8, [X21]
	0x036B3518 LDR X1, [X8]
	0x036B351C BL 0x1C17270
	0x036B3520 TBZ X0, 0x0, 0x36B3534
	0x036B3524 LDR X21, [X21]
	0x036B3528 BL 0x3EB1AE0
	0x036B352C CBNZ X20, 0x36B3558
	0x036B3530 BL 0x1C16F20
	0x036B3534 MOVZ W0, 0x8
	0x036B3538 BL 0x3EB1AF0
	0x036B353C LDR X8, [X21]
	0x036B3540 STR X8, [X0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X20, 0xD2F000
	008 Move W8, [X20+2405]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0xA8E000
	015 Move X0, [X0+792]
	016 Call 0x1C17CF4
	017 Move X0, 0xA8E000
	018 Move X0, [X0+800]
	019 Call 0x1C17CF4
	020 Move X0, 0xA71000
	021 Move X0, [X0+3632]
	022 Call 0x1C17CF4
	023 Move X0, 0xA71000
	024 Move X0, [X0+3488]
	025 Call 0x1C17CF4
	026 Move X0, 0xA76000
	027 Move X0, [X0+696]
	028 Call 0x1C17CF4
	029 Move X0, 0xA76000
	030 Move X0, [X0+704]
	031 Call 0x1C17CF4
	032 Move X0, 0xA76000
	033 Move X0, [X0+712]
	034 Call 0x1C17CF4
	035 Move X0, 0xA76000
	036 Move X0, [X0+720]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2405], W8
	040 Move [X31+48], X31
	041 Move [X31+56], X31
	042 Move [X31+32], X31
	043 Move [X31+40], X31
	044 Move [X31+24], W31
	045 Move W21, [X19]
	046 Move X20, [X19+32]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X20, 0
	049 JumpIfEqual {210}
	050 Move X0, [X20+40]
	051 Compare X0, 0
	052 JumpIfEqual {211}
	053 Move X1, [X19+40]
	054 Call WebOperation.ThrowIfDisposed, X0, X1
	055 Move X9, [X19+48]
	056 Compare X9, 0
	057 JumpIfEqual {212}
	058 Move W8, [X19+56]
	059 Move TEMP, X8
	060 And TEMP, TEMP, -2147483648
	061 Compare TEMP, -2147483648
	062 JumpIfEqual {230}
	063 Move W9, [X9+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W10, [X19+60]
	066 Move TEMP, X10
	067 And TEMP, TEMP, -2147483648
	068 Compare TEMP, -2147483648
	069 JumpIfEqual {248}
	070 Subtract W8, W9, W8
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X22, 0xA70000
	073 Move X22, [X22+3488]
	074 Compare W21, 0
	075 JumpIfEqual {85}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move V0, [X19+5]
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W8, TEMP
	081 Move [X31+2], V0
	082 Move [X19+80], X31
	083 Move [X19+88], X31
	084 Move [X19], W8
	085 Move V0, [X19+4]
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W8, TEMP
	089 Move [X31+3], V0
	090 Move [X19+64], X31
	091 Move [X19+72], X31
	092 Move [X19], W8
	093 Compare X20, 0
	094 JumpIfEqual {266}
	095 Move X8, [X20]
	096 Move X4, [X19+40]
	097 Move X1, [X19+48]
	098 Move W2, [X19+56]
	099 Move W3, [X19+60]
	100 Move X9, [X8+952]
	101 Move X5, [X8+960]
	102 Move X0, X20
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Compare X0, 0
	105 JumpIfEqual {267}
	106 Move X8, 0xA75000
	107 Move X8, [X8+720]
	108 Move X2, [X8]
	109 Move W1, W31
	110 Call Task`1<Int32>.ConfigureAwait, X0, X1
	111 Move X8, 0xA75000
	112 Move X8, [X8+712]
	113 Move [X31+48], X0
	114 Move [X31+56], X1
	115 Move X8, [X8]
	116 Add X0, X31, 48
	117 Move X1, X8
	118 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {179}
	123 Move X8, 0xA75000
	124 Move X8, [X8+704]
	125 Move X1, [X8]
	126 Add X0, X31, 48
	127 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	128 Move W21, W0
	129 Compare W0, 0
	130 JumpIfNotEqual {157}
	131 Compare X20, 0
	132 JumpIfEqual {268}
	133 Move X8, [X20]
	134 Move X1, [X19+40]
	135 Move X9, [X8+968]
	136 Move X2, [X8+976]
	137 Move X0, X20
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Compare X0, 0
	140 JumpIfEqual {269}
	141 Move W1, W31
	142 Move X2, X31
	143 Call Task.ConfigureAwait, X0, X1
	144 Move [X31+32], X0
	145 Move [X31+40], X1
	146 Add X0, X31, 32
	147 Move X1, X31
	148 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {194}
	153 Add X0, X31, 32
	154 Move X1, X31
	155 Call ConfiguredTaskAwaiter.GetResult, X0
	156 Move W21, W31
	157 Move TEMP, 1
	158 Not TEMP
	159 Move W8, TEMP
	160 Move [X19+8], W8
	161 Move X0, [X22]
	162 Move X20, 0xA70000
	163 Move W8, [X0+224]
	164 Move X20, [X20+3632]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X2, [X20]
	169 Move X0, X19
	170 Move W1, W21
	171 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	172 Move X20, [X31+96]
	173 Move X19, [X31+104]
	174 Move X22, [X31+80]
	175 Move X21, [X31+88]
	176 Move X30, [X31+64]
	177 Add X31, X31, 112
	178 Return 
	179 Move [X19], W31
	180 Move V0, [X31+3]
	181 Move [X19+4], V0
	182 Move X0, [X22]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X8, 0xA8D000
	188 Move X8, [X8+800]
	189 Add X0, X19, 8
	190 Move X3, [X8]
	191 Add X1, X31, 48
	192 Move X2, X19
	193 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	194 Move W8, 1
	195 Move [X19], W8
	196 Move V0, [X31+2]
	197 Move [X19+5], V0
	198 Move X0, [X22]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X8, 0xA8D000
	204 Move X8, [X8+792]
	205 Add X0, X19, 8
	206 Move X3, [X8]
	207 Add X1, X31, 32
	208 Move X2, X19
	209 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	210 Call 0x1C17F20
	211 Call 0x1C17F20
	212 Move X0, 0xA46000
	213 Move X0, [X0+1320]
	214 Call 0x1C17D08
	215 Call 0x1C17F10
	216 Move X20, X0
	217 Move X0, 0xA6C000
	218 Move X0, [X0+3912]
	219 Call 0x1C17D08
	220 Move X1, X0
	221 Move X0, X20
	222 Move X2, X31
	223 Call ArgumentNullException..ctor, X0, X1
	224 Move X0, 0xA8D000
	225 Move X0, [X0+808]
	226 Call 0x1C17D08
	227 Move X1, X0
	228 Move X0, X20
	229 Call 0x1C17DEC
	230 Move X0, 0xA49000
	231 Move X0, [X0+1888]
	232 Call 0x1C17D08
	233 Call 0x1C17F10
	234 Move X20, X0
	235 Move X0, 0xA70000
	236 Move X0, [X0+3472]
	237 Call 0x1C17D08
	238 Move X1, X0
	239 Move X0, X20
	240 Move X2, X31
	241 Call ArgumentOutOfRangeException..ctor, X0, X1
	242 Move X0, 0xA8D000
	243 Move X0, [X0+808]
	244 Call 0x1C17D08
	245 Move X1, X0
	246 Move X0, X20
	247 Call 0x1C17DEC
	248 Move X0, 0xA49000
	249 Move X0, [X0+1888]
	250 Call 0x1C17D08
	251 Call 0x1C17F10
	252 Move X20, X0
	253 Move X0, 0xA6C000
	254 Move X0, [X0+3984]
	255 Call 0x1C17D08
	256 Move X1, X0
	257 Move X0, X20
	258 Move X2, X31
	259 Call ArgumentOutOfRangeException..ctor, X0, X1
	260 Move X0, 0xA8D000
	261 Move X0, [X0+808]
	262 Call 0x1C17D08
	263 Move X1, X0
	264 Move X0, X20
	265 Call 0x1C17DEC
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Move X20, X0
	271 Move W22, W31
	272 Move X20, X0
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move W22, W31
	275 Move W8, 1
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X0, X20
	278 Call 0x3EB2AD0
	279 Move X21, [X0]
	280 Call 0x3EB2AE0
	281 Compare X21, 0
	282 JumpIfEqual {364}
	283 Move X0, X21
	284 Call 0x1C17F18
	285 Move X0, X20
	286 Call 0x3EB2AD0
	287 Move X20, X0
	288 Move X0, 0xA49000
	289 Move X0, [X0+2216]
	290 Call 0x1C17D08
	291 Move X8, [X20]
	292 Move X1, [X8]
	293 Call 0x1C18270
	294 Move W21, W0
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {309}
	299 Move X20, [X20]
	300 Move [X31+8], X20
	301 Call 0x3EB2AE0
	302 Move [X31+24], W31
	303 Move TEMP, X21
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {327}
	307 Move X0, X20
	308 Call 0x1C17F18
	309 Move X0, 0xA41000
	310 Move X0, [X0+2000]
	311 Call 0x1C17D08
	312 Move X8, [X20]
	313 Move X1, [X8]
	314 Call 0x1C18270
	315 Move TEMP, X0
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfEqual {299}
	319 Move W0, 8
	320 Call 0x3EB2AF0
	321 Move X8, [X20]
	322 Move [X0], X8
	323 Move X1, 0x802000
	324 Add X1, X1, 3672
	325 Move X2, X31
	326 Call 0x3EB2B00
	327 Move X0, X20
	328 Call 0x1C17F18
	329 Move X20, X0
	330 Move X20, X0
	331 Move W22, 1
	332 Compare X21, 0
	333 JumpIfNotEqual {335}
	334 Move X20, X0
	335 Move X0, X21
	336 Call 0x1C17F18
	337 Move X21, X1
	338 Move X20, X0
	339 Call 0x3EB2AE0
	340 Move W22, W31
	341 Move W1, W21
	342 Move X20, X0
	343 Move W22, W31
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X0, X20
	346 Call 0x3EB2AD0
	347 Move X20, X0
	348 Move X0, 0xA41000
	349 Move X0, [X0+2000]
	350 Call 0x1C17D08
	351 Move X8, [X20]
	352 Move X1, [X8]
	353 Call 0x1C18270
	354 Move TEMP, X0
	355 And TEMP, TEMP, 1
	356 Compare TEMP, 1
	357 JumpIfNotEqual {385}
	358 Move X8, [X20]
	359 Add X9, X31, 8
	360 Move [X9], X8
	361 Add W22, W22, 1
	362 Move [X31+24], W22
	363 Call 0x3EB2AE0
	364 Add X8, X31, 8
	365 Add X8, X8, W22
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 Move TEMP, 1
	368 Not TEMP
	369 Move W8, TEMP
	370 Move [X19+8], W8
	371 Move X0, 0xA70000
	372 Move X0, [X0+3488]
	373 Call 0x1C17D08
	374 Move W8, [X0+224]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Move X0, 0xA70000
	379 Move X0, [X0+3648]
	380 Call 0x1C17D08
	381 Move X2, X0
	382 Move X0, X19
	383 Move X1, X20
	384 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	385 Move W0, 8
	386 Call 0x3EB2AF0
	387 Move X8, [X20]
	388 Move [X0], X8
	389 Move X1, 0x802000
	390 Add X1, X1, 3672
	391 Move X2, X31
	392 Call 0x3EB2B00
	393 Move X20, X0
	394 Call 0x3EB2AE0
	395 Move X0, X20
	396 Call 0x1D2D690
	397 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B3544 ADRP X1, 0x801000
	0x036B3548 ADD X1, X1, 0xE58
	0x036B354C MOV X2, X31
	0x036B3550 BL 0x3EB1B00
	0x036B3554 B 0x36B3644
	0x036B3558 LDR X0, [X20 + 0x50]
	0x036B355C CBNZ X0, 0x36B3564
	0x036B3560 BL 0x1C16F20
	0x036B3564 MOV X1, X20
	0x036B3568 MOV X2, X21
	0x036B356C BL 0x36B0910
	0x036B3570 MOV X0, X21
	0x036B3574 BL 0x1C16F18
	0x036B3578 B 0x36B3580
	0x036B357C B 0x36B3580
	0x036B3580 MOV X21, X0
	0x036B3584 B 0x36B34D4
	0x036B3588 B 0x36B35B4
	0x036B358C CBZ X22, 0x36B35B4
	0x036B3590 MOV X0, X22
	0x036B3594 BL 0x1C16F18
	0x036B3598 MOV X22, X1
	0x036B359C MOV X21, X0
	0x036B35A0 BL 0x3EB1AE0
	0x036B35A4 MOV W1, W22
	0x036B35A8 B 0x36B34D4
	0x036B35AC B 0x36B35B4
	0x036B35B0 B 0x36B35B4
	0x036B35B4 MOV X21, X0
	0x036B35B8 CMP W1, 0x1
	0x036B35BC B.NE 0x36B364C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD2E000
	007 Move X21, 0xA70000
	008 Move W8, [X22+2406]
	009 Move X21, [X21+3488]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA70000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xA70000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2406], W8
	024 Move X0, [X21]
	025 Move X21, 0xA70000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3656]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Int32>.SetStateMachine, X0, X1
	040 Return 

