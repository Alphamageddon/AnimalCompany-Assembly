Type: System.Net.WebReadStream

Method: System.Net.WebOperation get_Operation()

Disassembly:
	0x036B2458 BL 0x1C16F18
	0x036B245C MOV X21, X1

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.IO.Stream get_InnerStream()

Disassembly:
	0x036B2460 MOV X20, X0
	0x036B2464 BL 0x3EB1AE0

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void .ctor(System.Net.WebOperation operation, System.IO.Stream innerStream)

Disassembly:
	0x036B2468 MOV W22, W31
	0x036B246C MOV W1, W21
	0x036B2470 B 0x36B2374
	0x036B2474 MOV X20, X0
	0x036B2478 MOV W22, W31
	0x036B247C CMP W1, 0x1
	0x036B2480 B.NE 0x36B2538
	0x036B2484 MOV X0, X20
	0x036B2488 BL 0x3EB1AD0
	0x036B248C MOV X20, X0
	0x036B2490 ADRP X0, 0xA41000
	0x036B2494 LDR X0, [X0 + 0x7D0]
	0x036B2498 BL 0x1C16D08
	0x036B249C LDR X8, [X20]
	0x036B24A0 LDR X1, [X8]
	0x036B24A4 BL 0x1C17270
	0x036B24A8 TBZ X0, 0x0, 0x36B2510
	0x036B24AC LDR X8, [X20]
	0x036B24B0 ADD X9, X31, 0x8
	0x036B24B4 STR X8, [X9, W22, UXTW]
	0x036B24B8 ADD W22, W22, 0x1
	0x036B24BC STR W22, [X31 + 0x18]
	0x036B24C0 BL 0x3EB1AE0
	0x036B24C4 ADD X8, X31, 0x8
	0x036B24C8 ADD X8, X8, W22, 0x3, UXTW
	0x036B24CC LDUR X20, [X8 - 0x8]
	0x036B24D0 MOVN W8, 0x1
	0x036B24D4 STR W8, [X19], #0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD2F000
	008 Move X23, 0xA71000
	009 Move W8, [X22+2398]
	010 Move X23, [X23+3344]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA71000
	019 Move X0, [X0+3344]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2398], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Call Stream..ctor, X0
	031 Move [X20+40], X21
	032 Move [X20+48], X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return 

Method: System.Int64 get_Length()

Disassembly:
	0x036B24D8 ADRP X0, 0xA70000
	0x036B24DC LDR X0, [X0 + 0xDA0]
	0x036B24E0 BL 0x1C16D08
	0x036B24E4 LDR W8, [X0 + 0xE0]
	0x036B24E8 CBNZ W8, 0x36B24F0
	0x036B24EC BL 0x1C16DFC
	0x036B24F0 ADRP X0, 0xA70000
	0x036B24F4 LDR X0, [X0 + 0xE40]
	0x036B24F8 BL 0x1C16D08
	0x036B24FC MOV X2, X0
	0x036B2500 MOV X0, X19
	0x036B2504 MOV X1, X20
	0x036B2508 BL 0x2630308
	0x036B250C B 0x36B21A0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA42000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xA8E000
	011 Move X0, [X0+704]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Int64 get_Position()

Disassembly:
	0x036B2510 MOVZ W0, 0x8
	0x036B2514 BL 0x3EB1AF0
	0x036B2518 LDR X8, [X20]
	0x036B251C STR X8, [X0]
	0x036B2520 ADRP X1, 0x802000
	0x036B2524 ADD X1, X1, 0xE58
	0x036B2528 MOV X2, X31
	0x036B252C BL 0x3EB1B00
	0x036B2530 MOV X20, X0
	0x036B2534 BL 0x3EB1AE0
	0x036B2538 MOV X0, X20
	0x036B253C BL 0x1D2C690
	0x036B2540 BL 0x1990590
	0x036B2544 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA42000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xA8E000
	011 Move X0, [X0+712]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x036B2548 STP X22, X21, [X31 + 0x10]
	0x036B254C STP X20, X19, [X31 + 0x20]
	0x036B2550 ADRP X22, 0xD2E000
	0x036B2554 ADRP X21, 0xA70000
	0x036B2558 LDRB W8, [X22 + 0x966]
	0x036B255C LDR X21, [X21 + 0xDA0]
	0x036B2560 MOV X19, X1
	0x036B2564 MOV X20, X0
	0x036B2568 TBNZ X8, 0x0, 0x36B258C
	0x036B256C ADRP X0, 0xA70000
	0x036B2570 LDR X0, [X0 + 0xE48]
	0x036B2574 BL 0x1C16CF4
	0x036B2578 ADRP X0, 0xA70000
	0x036B257C LDR X0, [X0 + 0xDA0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA42000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xA8E000
	011 Move X0, [X0+720]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Boolean get_CanSeek()

Disassembly:
	0x036B2580 BL 0x1C16CF4
	0x036B2584 MOVZ W8, 0x1

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanRead()

Disassembly:
	0x036B2588 STRB W8, [X22 + 0x966]
	0x036B258C LDR X0, [X21]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x036B2590 ADRP X21, 0xA70000
	0x036B2594 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x036B2598 LDR X21, [X21 + 0xE48]
	0x036B259C CBNZ W8, 0x36B25A4
	0x036B25A0 BL 0x1C16DFC
	0x036B25A4 LDR X2, [X21]
	0x036B25A8 ADD X0, X20, 0x8
	0x036B25AC MOV X1, X19
	0x036B25B0 LDP X20, X19, [X31 + 0x20]
	0x036B25B4 LDP X22, X21, [X31 + 0x10]
	0x036B25B8 LDR X30, [X31], #0x30
	0x036B25BC B 0x2630068
	0x036B25C0 LDR X0, [X0 + 0x90]
	0x036B25C4 RET
	0x036B25C8 LDRB W0, [X0 + 0x98]
	0x036B25CC RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA42000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xA8E000
	011 Move X0, [X0+728]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x036B25D0 MOV W0, W31
	0x036B25D4 RET
	0x036B25D8 MOVZ W0, 0x1
	0x036B25DC RET
	0x036B25E0 STR X30, [X31 - 0x10]!
	0x036B25E4 LDR X8, [X0 + 0x50]
	0x036B25E8 CBZ X8, 0x36B2610
	0x036B25EC LDR X8, [X8 + 0x28]
	0x036B25F0 CBZ X8, 0x36B25FC
	0x036B25F4 MOVZ W0, 0x1
	0x036B25F8 B 0x36B2608
	0x036B25FC LDR X8, [X0 + 0x58]
	0x036B2600 CMP X8, 0x0
	0x036B2604 CSET W0, NE

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA42000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xA8E000
	011 Move X0, [X0+736]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x036B2608 LDR X30, [X31], #0x10
	0x036B260C RET
	0x036B2610 BL 0x1C16F20
	0x036B2614 STR X30, [X31 - 0x10]!
	0x036B2618 LDR X8, [X0 + 0x50]
	0x036B261C CBZ X8, 0x36B2654
	0x036B2620 LDR X8, [X8 + 0x28]
	0x036B2624 CBZ X8, 0x36B2630
	0x036B2628 LDR W0, [X8 + 0x1C]
	0x036B262C B 0x36B264C
	0x036B2630 LDR X0, [X0 + 0x58]
	0x036B2634 CBZ X0, 0x36B2648
	0x036B2638 LDR X8, [X0]
	0x036B263C LDP X9, X1, [X8 + 0x1E8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA42000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xA8E000
	011 Move X0, [X0+744]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Flush()

Disassembly:
	0x036B2640 BLR X9
	0x036B2644 B 0x36B264C
	0x036B2648 MOVN W0, 0x0
	0x036B264C LDR X30, [X31], #0x10
	0x036B2650 RET
	0x036B2654 BL 0x1C16F20
	0x036B2658 STP X30, X21, [X31 - 0x20]!
	0x036B265C STP X20, X19, [X31 + 0x10]
	0x036B2660 ADRP X20, 0xD2E000
	0x036B2664 LDRB W8, [X20 + 0x968]
	0x036B2668 MOV X19, X0
	0x036B266C TBNZ X8, 0x0, 0x36B2684
	0x036B2670 ADRP X0, 0xA8C000
	0x036B2674 LDR X0, [X0 + 0xB20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA42000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xA8E000
	011 Move X0, [X0+752]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Exception GetException(System.Exception e)

Disassembly:
	0x036B2678 BL 0x1C16CF4
	0x036B267C MOVZ W8, 0x1
	0x036B2680 STRB W8, [X20 + 0x968]
	0x036B2684 LDR X8, [X19 + 0x50]
	0x036B2688 CBZ X8, 0x36B2728
	0x036B268C LDR X0, [X8 + 0x28]
	0x036B2690 CBZ X0, 0x36B26A0
	0x036B2694 LDP X20, X19, [X31 + 0x10]
	0x036B2698 LDP X30, X21, [X31], #0x20
	0x036B269C RET
	0x036B26A0 LDR X0, [X19 + 0x58]
	0x036B26A4 CBZ X0, 0x36B2694
	0x036B26A8 LDR X8, [X0]
	0x036B26AC LDP X9, X1, [X8 + 0x1E8]
	0x036B26B0 BLR X9
	0x036B26B4 CBZ X0, 0x36B2694
	0x036B26B8 LDR X0, [X19 + 0x58]
	0x036B26BC CBZ X0, 0x36B2728
	0x036B26C0 LDR X8, [X0]
	0x036B26C4 LDR X9, [X8 + 0x3B8]
	0x036B26C8 LDR X1, [X8 + 0x3C0]
	0x036B26CC BLR X9
	0x036B26D0 LDR X8, [X19 + 0x58]
	0x036B26D4 CBZ X8, 0x36B2728
	0x036B26D8 LDR X9, [X8]
	0x036B26DC MOV X19, X0
	0x036B26E0 MOV X0, X8
	0x036B26E4 LDP X10, X1, [X9 + 0x1E8]
	0x036B26E8 BLR X10
	0x036B26EC ADRP X8, 0xA8C000
	0x036B26F0 LDR X8, [X8 + 0xB20]
	0x036B26F4 MOV X20, X0
	0x036B26F8 LDR X8, [X8]
	0x036B26FC MOV X0, X8
	0x036B2700 BL 0x1C16F10
	0x036B2704 MOV X1, X19
	0x036B2708 MOV W2, W31
	0x036B270C MOV W3, W20
	0x036B2710 MOV W4, W31
	0x036B2714 MOV X5, X31
	0x036B2718 MOV X21, X0
	0x036B271C BL 0x368503C
	0x036B2720 MOV X0, X21
	0x036B2724 B 0x36B2694
	0x036B2728 BL 0x1C16F20
	0x036B272C SUB X31, X31, 0x90
	0x036B2730 STR X30, [X31 + 0x60]
	0x036B2734 STP X22, X21, [X31 + 0x70]
	0x036B2738 STP X20, X19, [X31 + 0x80]
	0x036B273C ADRP X22, 0xD2E000
	0x036B2740 ADRP X21, 0xA44000
	0x036B2744 LDRB W8, [X22 + 0x969]
	0x036B2748 LDR X21, [X21 + 0x280]
	0x036B274C MOV X19, X1
	0x036B2750 MOV X20, X0
	0x036B2754 TBNZ X8, 0x0, 0x36B2778
	0x036B2758 ADRP X0, 0xA8D000
	0x036B275C LDR X0, [X0 + 0x330]
	0x036B2760 BL 0x1C16CF4
	0x036B2764 ADRP X0, 0xA44000
	0x036B2768 LDR X0, [X0 + 0x280]
	0x036B276C BL 0x1C16CF4
	0x036B2770 MOVZ W8, 0x1
	0x036B2774 STRB W8, [X22 + 0x969]
	0x036B2778 LDR X0, [X21]
	0x036B277C MOVI V0.2D, 0x0
	0x036B2780 STP V0, V0, [X31 + 0x40]
	0x036B2784 STP V0, V0, [X31 + 0x20]
	0x036B2788 STP X20, X19, [X31 + 0x40]
	0x036B278C ADRP X19, 0xA8D000
	0x036B2790 LDR W8, [X0 + 0xE0]
	0x036B2794 LDR X19, [X19 + 0x330]
	0x036B2798 CBNZ W8, 0x36B27A0
	0x036B279C BL 0x1C16DFC
	0x036B27A0 ADD X8, X31, 0x8
	0x036B27A4 MOV X0, X31
	0x036B27A8 BL 0x32C4770
	0x036B27AC LDUR V0, [X31 + 0x8]
	0x036B27B0 LDR X9, [X31 + 0x18]
	0x036B27B4 LDR X2, [X19]
	0x036B27B8 ADD X8, X31, 0x20
	0x036B27BC ORR X19, X8, 0xF
	0x036B27C0 MOVN W10, 0x0
	0x036B27C4 ADD X1, X31, 0x20
	0x036B27C8 MOV X0, X19
	0x036B27CC STUR V0, [X31 + 0x28]
	0x036B27D0 STR X9, [X31 + 0x38]
	0x036B27D4 STR W10, [X31 + 0x20]
	0x036B27D8 BL 0x21961B8
	0x036B27DC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD2F000
	007 Move X21, 0xA6A000
	008 Move W8, [X22+2399]
	009 Move X21, [X21+2952]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xA6A000
	017 Move X0, [X0+2952]
	018 Call 0x1C17CF4
	019 Move X0, 0xA6B000
	020 Move X0, [X0+1208]
	021 Call 0x1C17CF4
	022 Move X0, 0xA4A000
	023 Move X0, [X0+2216]
	024 Call 0x1C17CF4
	025 Move X0, 0xA6D000
	026 Move X0, [X0+816]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2399], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Call HttpWebRequest.FlattenException, X0
	038 Move X19, X0
	039 Compare X0, 0
	040 JumpIfEqual {52}
	041 Move X8, 0xA6D000
	042 Move X8, [X8+816]
	043 Move X9, [X19]
	044 Move X8, [X8]
	045 Move W11, [X9+304]
	046 Move W10, [X8+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, [X9+200]
	049 Add X9, X9, X10
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X20+40]
	053 Compare X0, 0
	054 JumpIfEqual {102}
	055 Call WebOperation.get_Aborted, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {73}
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X0, X31
	070 Move X30, [X31+48]
	071 Call HttpWebRequest.CreateRequestAbortedException
	072 Return X0
	073 Compare X19, 0
	074 JumpIfEqual {95}
	075 Move X9, 0xA4A000
	076 Move X9, [X9+2216]
	077 Move X8, [X19]
	078 Move X10, [X9]
	079 Move W9, [X8+304]
	080 Move W11, [X10+304]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X12, [X8+200]
	083 Add X11, X12, X11
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X10, 0xA6B000
	087 Move X10, [X10+1208]
	088 Move X10, [X10]
	089 Move W11, [X10+304]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, [X8+200]
	092 Add X8, X8, X11
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X19
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Return X0
	102 Call 0x1C17F20

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x036B27E0 MOV X1, X31
	0x036B27E4 BL 0x32C47F8
	0x036B27E8 LDP X20, X19, [X31 + 0x80]
	0x036B27EC LDP X22, X21, [X31 + 0x70]
	0x036B27F0 LDR X30, [X31 + 0x60]
	0x036B27F4 ADD X31, X31, 0x90
	0x036B27F8 RET
	0x036B27FC SUB X31, X31, 0x40
	0x036B2800 STP X30, X23, [X31 + 0x10]
	0x036B2804 STP X22, X21, [X31 + 0x20]
	0x036B2808 STP X20, X19, [X31 + 0x30]
	0x036B280C ADRP X23, 0xD2E000
	0x036B2810 LDRB W8, [X23 + 0x96A]
	0x036B2814 MOV W19, W3
	0x036B2818 MOV W20, W2
	0x036B281C MOV X21, X1
	0x036B2820 MOV X22, X0
	0x036B2824 STR X4, [X31 + 0x8]
	0x036B2828 TBNZ X8, 0x0, 0x36B2858
	0x036B282C ADRP X0, 0xA49000
	0x036B2830 LDR X0, [X0 + 0x7D8]
	0x036B2834 BL 0x1C16CF4
	0x036B2838 ADRP X0, 0xA42000
	0x036B283C LDR X0, [X0 + 0x7B8]
	0x036B2840 BL 0x1C16CF4
	0x036B2844 ADRP X0, 0xA8C000
	0x036B2848 LDR X0, [X0 + 0xA88]
	0x036B284C BL 0x1C16CF4
	0x036B2850 MOVZ W8, 0x1
	0x036B2854 STRB W8, [X23 + 0x96A]
	0x036B2858 CBZ X21, 0x36B2948
	0x036B285C TBNZ X20, 0x1F, 0x36B297C
	0x036B2860 LDR W8, [X21 + 0x18]
	0x036B2864 SUBS W8, W8, W20
	0x036B2868 B.LT 0x36B297C
	0x036B286C TBNZ X19, 0x1F, 0x36B299C
	0x036B2870 CMP W8, W19
	0x036B2874 B.LT 0x36B299C
	0x036B2878 ADRP X8, 0xA49000
	0x036B287C LDR X8, [X8 + 0x7D8]
	0x036B2880 LDR X0, [X8]
	0x036B2884 LDR W8, [X0 + 0xE0]
	0x036B2888 CBNZ W8, 0x36B2890
	0x036B288C BL 0x1C16DFC
	0x036B2890 ADD X0, X31, 0x8
	0x036B2894 MOV X1, X31
	0x036B2898 BL 0x33DD2B0
	0x036B289C TBZ X0, 0x0, 0x36B28CC
	0x036B28A0 ADRP X8, 0xA42000
	0x036B28A4 LDR X8, [X8 + 0x7B8]
	0x036B28A8 LDR X19, [X31 + 0x8]
	0x036B28AC LDR X0, [X8]
	0x036B28B0 LDR W8, [X0 + 0xE0]
	0x036B28B4 CBNZ W8, 0x36B28BC
	0x036B28B8 BL 0x1C16DFC
	0x036B28BC MOV X0, X19
	0x036B28C0 MOV X1, X31
	0x036B28C4 BL 0x33EE044
	0x036B28C8 B 0x36B2934
	0x036B28CC LDR X0, [X22 + 0x50]
	0x036B28D0 CBZ X0, 0x36B29D0
	0x036B28D4 LDR X1, [X31 + 0x8]
	0x036B28D8 BL 0x36AD230
	0x036B28DC LDR X8, [X22 + 0x50]
	0x036B28E0 CBZ X8, 0x36B29D0
	0x036B28E4 LDR X8, [X8 + 0x28]
	0x036B28E8 CBNZ X8, 0x36B29D4
	0x036B28EC ADRP X8, 0xA8C000
	0x036B28F0 LDR X8, [X8 + 0xA88]
	0x036B28F4 LDR X0, [X8]
	0x036B28F8 BL 0x1C16F10
	0x036B28FC MOV X23, X0
	0x036B2900 BL 0x36A97D4
	0x036B2904 ADD X0, X22, 0x68
	0x036B2908 MOV X1, X23
	0x036B290C MOV X2, X31
	0x036B2910 BL 0x1C24138
	0x036B2914 CBNZ X0, 0x36B2A08
	0x036B2918 LDR X5, [X31 + 0x8]
	0x036B291C MOV X0, X22
	0x036B2920 MOV X1, X21
	0x036B2924 MOV W2, W20
	0x036B2928 MOV W3, W19
	0x036B292C MOV X4, X23
	0x036B2930 BL 0x36B2A58
	0x036B2934 LDP X20, X19, [X31 + 0x30]
	0x036B2938 LDP X22, X21, [X31 + 0x20]
	0x036B293C LDP X30, X23, [X31 + 0x10]
	0x036B2940 ADD X31, X31, 0x40
	0x036B2944 RET
	0x036B2948 ADRP X0, 0xA46000
	0x036B294C LDR X0, [X0 + 0x528]
	0x036B2950 BL 0x1C16D08
	0x036B2954 BL 0x1C16F10
	0x036B2958 MOV X19, X0
	0x036B295C ADRP X0, 0xA6C000
	0x036B2960 LDR X0, [X0 + 0xF48]
	0x036B2964 BL 0x1C16D08
	0x036B2968 MOV X1, X0
	0x036B296C MOV X0, X19
	0x036B2970 MOV X2, X31
	0x036B2974 BL 0x330E100
	0x036B2978 B 0x36B29F0
	0x036B297C ADRP X0, 0xA49000
	0x036B2980 LDR X0, [X0 + 0x760]
	0x036B2984 BL 0x1C16D08
	0x036B2988 BL 0x1C16F10
	0x036B298C MOV X19, X0
	0x036B2990 ADRP X0, 0xA70000
	0x036B2994 LDR X0, [X0 + 0xD90]
	0x036B2998 B 0x36B29B8
	0x036B299C ADRP X0, 0xA49000
	0x036B29A0 LDR X0, [X0 + 0x760]
	0x036B29A4 BL 0x1C16D08
	0x036B29A8 BL 0x1C16F10
	0x036B29AC MOV X19, X0
	0x036B29B0 ADRP X0, 0xA69000
	0x036B29B4 LDR X0, [X0 + 0x648]
	0x036B29B8 BL 0x1C16D08
	0x036B29BC MOV X1, X0
	0x036B29C0 MOV X0, X19
	0x036B29C4 MOV X2, X31
	0x036B29C8 BL 0x3316014
	0x036B29CC B 0x36B29F0
	0x036B29D0 BL 0x1C16F20
	0x036B29D4 ADRP X0, 0xA41000
	0x036B29D8 LDR X0, [X0 + 0x5B0]
	0x036B29DC BL 0x1C16D08
	0x036B29E0 BL 0x1C16F10
	0x036B29E4 MOV X1, X31
	0x036B29E8 MOV X19, X0
	0x036B29EC BL 0x337DEC0
	0x036B29F0 ADRP X0, 0xA8D000
	0x036B29F4 LDR X0, [X0 + 0x338]
	0x036B29F8 BL 0x1C16D08
	0x036B29FC MOV X1, X0
	0x036B2A00 MOV X0, X19
	0x036B2A04 BL 0x1C16DEC
	0x036B2A08 ADRP X0, 0xA8B000
	0x036B2A0C LDR X0, [X0 + 0xC60]
	0x036B2A10 BL 0x1C16D08
	0x036B2A14 MOV X1, X31
	0x036B2A18 BL 0x320A1E4
	0x036B2A1C MOV X19, X0
	0x036B2A20 ADRP X0, 0xA41000
	0x036B2A24 LDR X0, [X0 + 0x5B0]
	0x036B2A28 BL 0x1C16D08
	0x036B2A2C BL 0x1C16F10
	0x036B2A30 MOV X1, X19
	0x036B2A34 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD2F000
	008 Move W8, [X23+2400]
	009 Move W20, W3
	010 Move W21, W2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA4A000
	018 Move X0, [X0+2008]
	019 Call 0x1C17CF4
	020 Move X0, 0xA75000
	021 Move X0, [X0+3264]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2400], W8
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+424]
	028 Move X1, [X8+432]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {82}
	034 Move X0, [X19+40]
	035 Compare X0, 0
	036 JumpIfEqual {94}
	037 Call WebOperation.ThrowIfClosedOrDisposed, X0
	038 Compare X22, 0
	039 JumpIfEqual {95}
	040 Move TEMP, X21
	041 And TEMP, TEMP, -2147483648
	042 Compare TEMP, -2147483648
	043 JumpIfEqual {107}
	044 Move W8, [X22+24]
	045 Subtract W8, W8, W21
	046 Move TEMP, X20
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {114}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, 0xA4A000
	052 Move X8, [X8+2008]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X31
	059 Call CancellationToken.get_None
	060 Move X8, [X19]
	061 Move X4, X0
	062 Move X9, [X8+728]
	063 Move X5, [X8+736]
	064 Move X0, X19
	065 Move X1, X22
	066 Move W2, W21
	067 Move W3, W20
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare X0, 0
	070 JumpIfEqual {132}
	071 Move X8, 0xA75000
	072 Move X8, [X8+3264]
	073 Move X1, [X8]
	074 Call Task`1<Int32>.get_Result, X0
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Return X0
	082 Move X0, 0xA42000
	083 Move X0, [X0+2880]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0xA8E000
	088 Move X0, [X0+160]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Move X2, X31
	093 Call NotSupportedException..ctor, X0, X1
	094 Call 0x1C17F20
	095 Move X0, 0xA47000
	096 Move X0, [X0+1320]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xA6D000
	101 Move X0, [X0+3912]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call ArgumentNullException..ctor, X0, X1
	107 Move X0, 0xA4A000
	108 Move X0, [X0+1888]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0xA71000
	113 Move X0, [X0+3472]
	114 Move X0, 0xA4A000
	115 Move X0, [X0+1888]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xA6D000
	120 Move X0, [X0+3984]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call ArgumentOutOfRangeException..ctor, X0, X1
	126 Move X0, 0xA8E000
	127 Move X0, [X0+760]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC
	132 Call 0x1C17F20
	133 Move X20, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X20
	136 Call 0x3EB2AD0
	137 Move X20, X0
	138 Move X0, 0xA42000
	139 Move X0, [X0+2000]
	140 Call 0x1C17D08
	141 Move X8, [X20]
	142 Move X1, [X8]
	143 Call 0x1C18270
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {154}
	148 Move X20, [X20]
	149 Call 0x3EB2AE0
	150 Move X0, X19
	151 Move X1, X20
	152 Call WebReadStream.GetException, X0, X1
	153 Move X19, X0
	154 Move W0, 8
	155 Call 0x3EB2AF0
	156 Move X8, [X20]
	157 Move [X0], X8
	158 Move X1, 0x803000
	159 Add X1, X1, 3672
	160 Move X2, X31
	161 Call 0x3EB2B00
	162 Move X20, X0
	163 Call 0x3EB2AE0
	164 Move X0, X20
	165 Call 0x1D2D690
	166 Call 0x1991590

Method: System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.AsyncCallback cb, System.Object state)

Disassembly:
	0x036B2A38 MOV X20, X0
	0x036B2A3C BL 0x337DF1C
	0x036B2A40 ADRP X0, 0xA8D000
	0x036B2A44 LDR X0, [X0 + 0x338]
	0x036B2A48 BL 0x1C16D08
	0x036B2A4C MOV X1, X0
	0x036B2A50 MOV X0, X20
	0x036B2A54 BL 0x1C16DEC
	0x036B2A58 SUB X31, X31, 0xD0
	0x036B2A5C STR X30, [X31 + 0x80]
	0x036B2A60 STP X26, X25, [X31 + 0x90]
	0x036B2A64 STP X24, X23, [X31 + 0xA0]
	0x036B2A68 STP X22, X21, [X31 + 0xB0]
	0x036B2A6C STP X20, X19, [X31 + 0xC0]
	0x036B2A70 ADRP X26, 0xD2E000
	0x036B2A74 ADRP X25, 0xA44000
	0x036B2A78 LDRB W8, [X26 + 0x96B]
	0x036B2A7C LDR X25, [X25 + 0x280]
	0x036B2A80 MOV X19, X5
	0x036B2A84 MOV X20, X4
	0x036B2A88 MOV W21, W3
	0x036B2A8C MOV W22, W2
	0x036B2A90 MOV X23, X1
	0x036B2A94 MOV X24, X0
	0x036B2A98 TBNZ X8, 0x0, 0x36B2ABC
	0x036B2A9C ADRP X0, 0xA8D000
	0x036B2AA0 LDR X0, [X0 + 0x340]
	0x036B2AA4 BL 0x1C16CF4
	0x036B2AA8 ADRP X0, 0xA44000
	0x036B2AAC LDR X0, [X0 + 0x280]
	0x036B2AB0 BL 0x1C16CF4
	0x036B2AB4 MOVZ W8, 0x1
	0x036B2AB8 STRB W8, [X26 + 0x96B]
	0x036B2ABC LDR X0, [X25]
	0x036B2AC0 MOVI V0.2D, 0x0
	0x036B2AC4 STP V0, V0, [X31 + 0x40]
	0x036B2AC8 STP V0, V0, [X31 + 0x60]
	0x036B2ACC STP V0, V0, [X31 + 0x20]
	0x036B2AD0 STP X24, X23, [X31 + 0x40]
	0x036B2AD4 STP W22, W21, [X31 + 0x50]
	0x036B2AD8 STP X19, X20, [X31 + 0x58]
	0x036B2ADC ADRP X19, 0xA8D000
	0x036B2AE0 LDR W8, [X0 + 0xE0]
	0x036B2AE4 LDR X19, [X19 + 0x340]
	0x036B2AE8 CBNZ W8, 0x36B2AF0
	0x036B2AEC BL 0x1C16DFC
	0x036B2AF0 ADD X8, X31, 0x8
	0x036B2AF4 MOV X0, X31
	0x036B2AF8 BL 0x32C4770
	0x036B2AFC LDUR V0, [X31 + 0x8]
	0x036B2B00 LDR X9, [X31 + 0x18]
	0x036B2B04 LDR X2, [X19]
	0x036B2B08 ADD X8, X31, 0x20
	0x036B2B0C ORR X19, X8, 0xF
	0x036B2B10 MOVN W10, 0x0
	0x036B2B14 ADD X1, X31, 0x20
	0x036B2B18 MOV X0, X19
	0x036B2B1C STUR V0, [X31 + 0x28]
	0x036B2B20 STR X9, [X31 + 0x38]
	0x036B2B24 STR W10, [X31 + 0x20]
	0x036B2B28 BL 0x21965B8
	0x036B2B2C MOV X0, X19
	0x036B2B30 MOV X1, X31
	0x036B2B34 BL 0x32C47F8
	0x036B2B38 LDP X20, X19, [X31 + 0xC0]
	0x036B2B3C LDP X22, X21, [X31 + 0xB0]
	0x036B2B40 LDP X24, X23, [X31 + 0xA0]
	0x036B2B44 LDP X26, X25, [X31 + 0x90]
	0x036B2B48 LDR X30, [X31 + 0x80]
	0x036B2B4C ADD X31, X31, 0xD0
	0x036B2B50 RET
	0x036B2B54 SUB X31, X31, 0xC0
	0x036B2B58 STP X30, X25, [X31 + 0x80]
	0x036B2B5C STP X24, X23, [X31 + 0x90]
	0x036B2B60 STP X22, X21, [X31 + 0xA0]
	0x036B2B64 STP X20, X19, [X31 + 0xB0]
	0x036B2B68 ADRP X25, 0xD2E000
	0x036B2B6C ADRP X24, 0xA44000
	0x036B2B70 LDRB W8, [X25 + 0x96C]
	0x036B2B74 LDR X24, [X24 + 0x280]
	0x036B2B78 MOV X19, X4
	0x036B2B7C MOV W20, W3
	0x036B2B80 MOV W21, W2
	0x036B2B84 MOV X23, X1
	0x036B2B88 MOV X22, X0
	0x036B2B8C TBNZ X8, 0x0, 0x36B2BB0
	0x036B2B90 ADRP X0, 0xA8D000
	0x036B2B94 LDR X0, [X0 + 0x348]
	0x036B2B98 BL 0x1C16CF4
	0x036B2B9C ADRP X0, 0xA44000
	0x036B2BA0 LDR X0, [X0 + 0x280]
	0x036B2BA4 BL 0x1C16CF4
	0x036B2BA8 MOVZ W8, 0x1
	0x036B2BAC STRB W8, [X25 + 0x96C]
	0x036B2BB0 LDR X0, [X24]
	0x036B2BB4 MOVI V0.2D, 0x0
	0x036B2BB8 STR X31, [X31 + 0x70]
	0x036B2BBC STP V0, V0, [X31 + 0x40]
	0x036B2BC0 STR V0, [X31 + 0x6]
	0x036B2BC4 STP V0, V0, [X31 + 0x20]
	0x036B2BC8 STR X23, [X31 + 0x58]
	0x036B2BCC STR W21, [X31 + 0x60]
	0x036B2BD0 STR W20, [X31 + 0x50]
	0x036B2BD4 STP X22, X19, [X31 + 0x40]
	0x036B2BD8 ADRP X19, 0xA8D000
	0x036B2BDC LDR W8, [X0 + 0xE0]
	0x036B2BE0 LDR X19, [X19 + 0x348]
	0x036B2BE4 CBNZ W8, 0x36B2BEC
	0x036B2BE8 BL 0x1C16DFC
	0x036B2BEC ADD X8, X31, 0x8
	0x036B2BF0 MOV X0, X31
	0x036B2BF4 BL 0x32C4770

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD2F000
	010 Move W8, [X25+2401]
	011 Move X19, X5
	012 Move X20, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA4A000
	022 Move X0, [X0+2008]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2401], W8
	026 Move X8, [X24]
	027 Move X0, X24
	028 Move X9, [X8+424]
	029 Move X1, [X8+432]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {83}
	035 Move X0, [X24+40]
	036 Compare X0, 0
	037 JumpIfEqual {95}
	038 Call WebOperation.ThrowIfClosedOrDisposed, X0
	039 Compare X23, 0
	040 JumpIfEqual {96}
	041 Move TEMP, X22
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfEqual {108}
	045 Move W8, [X23+24]
	046 Subtract W8, W8, W22
	047 Move TEMP, X21
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {115}
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, 0xA4A000
	053 Move X8, [X8+2008]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X31
	060 Call CancellationToken.get_None
	061 Move X8, [X24]
	062 Move X4, X0
	063 Move X0, X24
	064 Move X1, X23
	065 Move X9, [X8+728]
	066 Move X5, [X8+736]
	067 Move W2, W22
	068 Move W3, W21
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X1, X20
	071 Move X2, X19
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X3, X31
	079 Move X30, [X31+64]
	080 Move X25, [X31+72]
	081 Call TaskToApm.Begin, X0, X1, X2
	082 Return X0
	083 Move X0, 0xA42000
	084 Move X0, [X0+2880]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0xA8E000
	089 Move X0, [X0+160]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Move X2, X31
	094 Call NotSupportedException..ctor, X0, X1
	095 Call 0x1C17F20
	096 Move X0, 0xA47000
	097 Move X0, [X0+1320]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X19, X0
	101 Move X0, 0xA6D000
	102 Move X0, [X0+3912]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Move X2, X31
	107 Call ArgumentNullException..ctor, X0, X1
	108 Move X0, 0xA4A000
	109 Move X0, [X0+1888]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xA71000
	114 Move X0, [X0+3472]
	115 Move X0, 0xA4A000
	116 Move X0, [X0+1888]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X19, X0
	120 Move X0, 0xA6D000
	121 Move X0, [X0+3984]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X19
	125 Move X2, X31
	126 Call ArgumentOutOfRangeException..ctor, X0, X1
	127 Move X0, 0xA8E000
	128 Move X0, [X0+768]
	129 Call 0x1C17D08
	130 Move X1, X0
	131 Move X0, X19
	132 Call 0x1C17DEC

Method: System.Int32 EndRead(System.IAsyncResult r)

Disassembly:
	0x036B2BF8 LDUR V0, [X31 + 0x8]
	0x036B2BFC LDR X9, [X31 + 0x18]
	0x036B2C00 LDR X2, [X19]
	0x036B2C04 ADD X8, X31, 0x20
	0x036B2C08 ORR X19, X8, 0xF
	0x036B2C0C MOVN W10, 0x0
	0x036B2C10 ADD X1, X31, 0x20
	0x036B2C14 MOV X0, X19
	0x036B2C18 STUR V0, [X31 + 0x28]
	0x036B2C1C STR X9, [X31 + 0x38]
	0x036B2C20 STR W10, [X31 + 0x20]
	0x036B2C24 BL 0x21963B8
	0x036B2C28 MOV X0, X19
	0x036B2C2C MOV X1, X31
	0x036B2C30 BL 0x32C47F8
	0x036B2C34 LDP X20, X19, [X31 + 0xB0]
	0x036B2C38 LDP X22, X21, [X31 + 0xA0]
	0x036B2C3C LDP X24, X23, [X31 + 0x90]
	0x036B2C40 LDP X30, X25, [X31 + 0x80]
	0x036B2C44 ADD X31, X31, 0xC0
	0x036B2C48 RET
	0x036B2C4C ADDS X31, X1, 0x1
	0x036B2C50 B.EQ 0x36B2C60
	0x036B2C54 SUB X8, X1, X2
	0x036B2C58 CMP X8, X3
	0x036B2C5C B.LT 0x36B2C64
	0x036B2C60 RET
	0x036B2C64 STP X30, X21, [X31 - 0x20]!
	0x036B2C68 STP X20, X19, [X31 + 0x10]
	0x036B2C6C MOVZ W8, 0x1
	0x036B2C70 STR X31, [X0 + 0x58]
	0x036B2C74 STRB W8, [X0 + 0x28]
	0x036B2C78 ADRP X8, 0xA8B000
	0x036B2C7C LDR X8, [X8 + 0xCD8]
	0x036B2C80 MOV X19, X0
	0x036B2C84 MOV X0, X8
	0x036B2C88 BL 0x1C16D08
	0x036B2C8C BL 0x1C16F10
	0x036B2C90 MOV X20, X0
	0x036B2C94 ADRP X0, 0xA8D000
	0x036B2C98 LDR X0, [X0 + 0x350]
	0x036B2C9C BL 0x1C16D08
	0x036B2CA0 MOV X1, X0
	0x036B2CA4 MOV X0, X20
	0x036B2CA8 MOV X2, X31
	0x036B2CAC BL 0x36792F8
	0x036B2CB0 LDR X21, [X19 + 0x50]
	0x036B2CB4 MOV X0, X21
	0x036B2CB8 BL 0x19903C0
	0x036B2CBC MOV X0, X21
	0x036B2CC0 MOV X1, X19
	0x036B2CC4 MOV X2, X20
	0x036B2CC8 BL 0x36B0910
	0x036B2CCC ADRP X0, 0xA8D000
	0x036B2CD0 LDR X0, [X0 + 0x358]
	0x036B2CD4 BL 0x1C16D08
	0x036B2CD8 MOV X1, X0
	0x036B2CDC MOV X0, X20
	0x036B2CE0 BL 0x1C16DEC
	0x036B2CE4 STR X31, [X0 + 0x58]
	0x036B2CE8 RET
	0x036B2CEC SUB X31, X31, 0xA0
	0x036B2CF0 STP X30, X23, [X31 + 0x70]
	0x036B2CF4 STP X22, X21, [X31 + 0x80]
	0x036B2CF8 STP X20, X19, [X31 + 0x90]
	0x036B2CFC ADRP X23, 0xD2E000
	0x036B2D00 ADRP X22, 0xA44000
	0x036B2D04 LDRB W8, [X23 + 0x96E]
	0x036B2D08 LDR X22, [X22 + 0x280]
	0x036B2D0C MOV X19, X2
	0x036B2D10 MOV W21, W1
	0x036B2D14 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD2F000
	006 Move W8, [X21+2402]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA71000
	014 Move X0, [X0+3520]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2402], W8
	018 Compare X20, 0
	019 JumpIfEqual {30}
	020 Move X8, 0xA71000
	021 Move X8, [X8+3520]
	022 Move X1, [X8]
	023 Move X0, X20
	024 Call 0x229CB30, X0
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0
	030 Move X0, 0xA47000
	031 Move X0, [X0+1320]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0xA6F000
	036 Move X0, [X0+936]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call ArgumentNullException..ctor, X0, X1
	042 Move X0, 0xA8E000
	043 Move X0, [X0+776]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, X0
	050 Move X0, X20
	051 Call 0x3EB2AD0
	052 Move X20, X0
	053 Move X0, 0xA42000
	054 Move X0, [X0+2000]
	055 Call 0x1C17D08
	056 Move X8, [X20]
	057 Move X1, [X8]
	058 Call 0x1C18270
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {69}
	063 Move X20, [X20]
	064 Call 0x3EB2AE0
	065 Move X0, X19
	066 Move X1, X20
	067 Call WebReadStream.GetException, X0, X1
	068 Move X19, X0
	069 Move W0, 8
	070 Call 0x3EB2AF0
	071 Move X8, [X20]
	072 Move [X0], X8
	073 Move X1, 0x803000
	074 Add X1, X1, 3672
	075 Move X2, X31
	076 Call 0x3EB2B00
	077 Move X20, X0
	078 Call 0x3EB2AE0
	079 Move X0, X20
	080 Call 0x1D2D690
	081 Call 0x1991590

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B2D18 TBNZ X8, 0x0, 0x36B2D3C
	0x036B2D1C ADRP X0, 0xA8D000
	0x036B2D20 LDR X0, [X0 + 0x360]
	0x036B2D24 BL 0x1C16CF4
	0x036B2D28 ADRP X0, 0xA44000
	0x036B2D2C LDR X0, [X0 + 0x280]
	0x036B2D30 BL 0x1C16CF4
	0x036B2D34 MOVZ W8, 0x1
	0x036B2D38 STRB W8, [X23 + 0x96E]
	0x036B2D3C LDR X0, [X22]
	0x036B2D40 AND W8, W21, 0x1
	0x036B2D44 MOVI V0.2D, 0x0
	0x036B2D48 STR X31, [X31 + 0x60]
	0x036B2D4C STP V0, V0, [X31 + 0x40]
	0x036B2D50 STP V0, V0, [X31 + 0x20]
	0x036B2D54 STRB W8, [X31 + 0x50]
	0x036B2D58 STP X20, X19, [X31 + 0x40]
	0x036B2D5C ADRP X19, 0xA8D000
	0x036B2D60 LDR W8, [X0 + 0xE0]
	0x036B2D64 LDR X19, [X19 + 0x360]
	0x036B2D68 CBNZ W8, 0x36B2D70
	0x036B2D6C BL 0x1C16DFC
	0x036B2D70 ADD X8, X31, 0x8
	0x036B2D74 MOV X0, X31
	0x036B2D78 BL 0x32C4770
	0x036B2D7C LDUR V0, [X31 + 0x8]
	0x036B2D80 LDR X9, [X31 + 0x18]
	0x036B2D84 LDR X2, [X19]
	0x036B2D88 ADD X8, X31, 0x20
	0x036B2D8C ORR X19, X8, 0xF
	0x036B2D90 MOVN W10, 0x0
	0x036B2D94 ADD X1, X31, 0x20
	0x036B2D98 MOV X0, X19
	0x036B2D9C STUR V0, [X31 + 0x28]
	0x036B2DA0 STR X9, [X31 + 0x38]
	0x036B2DA4 STR W10, [X31 + 0x20]
	0x036B2DA8 BL 0x21964B8
	0x036B2DAC MOV X0, X19
	0x036B2DB0 MOV X1, X31
	0x036B2DB4 BL 0x32C47F8
	0x036B2DB8 LDP X20, X19, [X31 + 0x90]
	0x036B2DBC LDP X22, X21, [X31 + 0x80]
	0x036B2DC0 LDP X30, X23, [X31 + 0x70]
	0x036B2DC4 ADD X31, X31, 0xA0
	0x036B2DC8 RET
	0x036B2DCC SUB X31, X31, 0xA0
	0x036B2DD0 STR X30, [X31 + 0x70]
	0x036B2DD4 STP X22, X21, [X31 + 0x80]
	0x036B2DD8 STP X20, X19, [X31 + 0x90]
	0x036B2DDC ADRP X22, 0xD2E000
	0x036B2DE0 ADRP X21, 0xA44000
	0x036B2DE4 LDRB W8, [X22 + 0x96F]
	0x036B2DE8 LDR X21, [X21 + 0x280]
	0x036B2DEC MOV X19, X1
	0x036B2DF0 MOV X20, X0
	0x036B2DF4 TBNZ X8, 0x0, 0x36B2E18
	0x036B2DF8 ADRP X0, 0xA8D000
	0x036B2DFC LDR X0, [X0 + 0x368]
	0x036B2E00 BL 0x1C16CF4
	0x036B2E04 ADRP X0, 0xA44000
	0x036B2E08 LDR X0, [X0 + 0x280]
	0x036B2E0C BL 0x1C16CF4
	0x036B2E10 MOVZ W8, 0x1
	0x036B2E14 STRB W8, [X22 + 0x96F]
	0x036B2E18 LDR X0, [X21]
	0x036B2E1C MOVI V0.2D, 0x0
	0x036B2E20 STP V0, V0, [X31 + 0x50]
	0x036B2E24 STP V0, V0, [X31 + 0x30]
	0x036B2E28 STR V0, [X31 + 0x2]
	0x036B2E2C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xD2F000
	011 Move X24, 0xA71000
	012 Move W8, [X25+2403]
	013 Move X24, [X24+3488]
	014 Move X19, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X23, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xA71000
	024 Move X0, [X0+3496]
	025 Call 0x1C17CF4
	026 Move X0, 0xA8E000
	027 Move X0, [X0+784]
	028 Call 0x1C17CF4
	029 Move X0, 0xA71000
	030 Move X0, [X0+3512]
	031 Call 0x1C17CF4
	032 Move X0, 0xA71000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+2403], W8
	037 Move X0, [X24]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+64], V0
	040 Move [X31+72], V0
	041 Move [X31+96], V0
	042 Move [X31+104], V0
	043 Move [X31+32], V0
	044 Move [X31+40], V0
	045 Move [X31+72], X19
	046 Move [X31+80], X23
	047 Move [X31+88], W21
	048 Move [X31+92], W20
	049 Move [X31+64], X22
	050 Move X21, 0xA71000
	051 Move X19, 0xA8E000
	052 Move X20, 0xA71000
	053 Move W8, [X0+224]
	054 Move X21, [X21+3496]
	055 Move X19, [X19+784]
	056 Move X20, [X20+3512]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X21]
	061 Add X8, X31, 8
	062 Call AsyncTaskMethodBuilder`1<Int32>.Create
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move X9, [X31+24]
	065 Move X2, [X19]
	066 Add X8, X31, 32
	067 Or X19, X8, 15
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W10, TEMP
	071 Add X1, X31, 32
	072 Move X0, X19
	073 Move [X31+40], V0
	074 Move [X31+56], X9
	075 Move [X31+32], W10
	076 Call AsyncTaskMethodBuilder`1<Int32>.Start, X0, X1
	077 Move X1, [X20]
	078 Move X0, X19
	079 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	080 Move X20, [X31+176]
	081 Move X19, [X31+184]
	082 Move X22, [X31+160]
	083 Move X21, [X31+168]
	084 Move X24, [X31+144]
	085 Move X23, [X31+152]
	086 Move X30, [X31+128]
	087 Move X25, [X31+136]
	088 Add X31, X31, 192
	089 Return X0

Method: System.Threading.Tasks.Task`1<System.Int32> ProcessReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Threading.Tasks.Task FinishReading(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B2E30 ADRP X19, 0xA8D000
	0x036B2E34 LDR W8, [X0 + 0xE0]
	0x036B2E38 LDR X19, [X19 + 0x368]
	0x036B2E3C CBNZ W8, 0x36B2E44
	0x036B2E40 BL 0x1C16DFC
	0x036B2E44 ADD X8, X31, 0x8
	0x036B2E48 MOV X0, X31
	0x036B2E4C BL 0x32C4770
	0x036B2E50 LDUR V0, [X31 + 0x8]
	0x036B2E54 LDR X9, [X31 + 0x18]
	0x036B2E58 LDR X2, [X19]
	0x036B2E5C ADD X8, X31, 0x20
	0x036B2E60 ORR X19, X8, 0xF
	0x036B2E64 MOVN W10, 0x0
	0x036B2E68 ADD X1, X31, 0x20
	0x036B2E6C MOV X0, X19
	0x036B2E70 STUR V0, [X31 + 0x28]
	0x036B2E74 STR X9, [X31 + 0x38]
	0x036B2E78 STR W10, [X31 + 0x20]
	0x036B2E7C BL 0x21968B8
	0x036B2E80 MOV X0, X19
	0x036B2E84 MOV X1, X31
	0x036B2E88 BL 0x32C47F8
	0x036B2E8C LDP X20, X19, [X31 + 0x90]
	0x036B2E90 LDP X22, X21, [X31 + 0x80]
	0x036B2E94 LDR X30, [X31 + 0x70]
	0x036B2E98 ADD X31, X31, 0xA0
	0x036B2E9C RET
	0x036B2EA0 SUB X31, X31, 0x90
	0x036B2EA4 STR X30, [X31 + 0x60]
	0x036B2EA8 STP X22, X21, [X31 + 0x70]
	0x036B2EAC STP X20, X19, [X31 + 0x80]
	0x036B2EB0 ADRP X22, 0xD2E000
	0x036B2EB4 ADRP X21, 0xA44000
	0x036B2EB8 LDRB W8, [X22 + 0x970]
	0x036B2EBC LDR X21, [X21 + 0x280]
	0x036B2EC0 MOV X19, X1
	0x036B2EC4 MOV X20, X0
	0x036B2EC8 TBNZ X8, 0x0, 0x36B2EEC
	0x036B2ECC ADRP X0, 0xA8D000
	0x036B2ED0 LDR X0, [X0 + 0x370]
	0x036B2ED4 BL 0x1C16CF4
	0x036B2ED8 ADRP X0, 0xA44000
	0x036B2EDC LDR X0, [X0 + 0x280]
	0x036B2EE0 BL 0x1C16CF4
	0x036B2EE4 MOVZ W8, 0x1
	0x036B2EE8 STRB W8, [X22 + 0x970]
	0x036B2EEC LDR X0, [X21]
	0x036B2EF0 MOVI V0.2D, 0x0
	0x036B2EF4 STP V0, V0, [X31 + 0x40]
	0x036B2EF8 STP V0, V0, [X31 + 0x20]
	0x036B2EFC STP X20, X19, [X31 + 0x40]
	0x036B2F00 ADRP X19, 0xA8D000
	0x036B2F04 LDR W8, [X0 + 0xE0]
	0x036B2F08 LDR X19, [X19 + 0x370]
	0x036B2F0C CBNZ W8, 0x36B2F14
	0x036B2F10 BL 0x1C16DFC
	0x036B2F14 ADD X8, X31, 0x8
	0x036B2F18 MOV X0, X31
	0x036B2F1C BL 0x32C4770
	0x036B2F20 LDUR V0, [X31 + 0x8]
	0x036B2F24 LDR X9, [X31 + 0x18]
	0x036B2F28 LDR X2, [X19]
	0x036B2F2C ADD X8, X31, 0x20
	0x036B2F30 ORR X19, X8, 0xF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD2F000
	006 Move W8, [X21+2404]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA43000
	014 Move X0, [X0+1976]
	015 Call 0x1C17CF4
	016 Move X0, 0xA8D000
	017 Move X0, [X0+1536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2404], W8
	021 Move X0, [X20+40]
	022 Compare X0, 0
	023 JumpIfEqual {77}
	024 Move X1, X19
	025 Call WebOperation.ThrowIfDisposed, X0, X1
	026 Move X0, [X20+48]
	027 Compare X0, 0
	028 JumpIfEqual {40}
	029 Move X9, 0xA8D000
	030 Move X9, [X9+1536]
	031 Move X8, [X0]
	032 Move X9, [X9]
	033 Move W11, [X8+304]
	034 Move W10, [X9+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X11, [X8+200]
	037 Add X10, X11, X10
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X19, 0xA43000
	041 Move X19, [X19+1976]
	042 Move X0, [X19]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X20, 0xD27000
	048 Move W8, [X20+3869]
	049 Compare W8, 0
	050 JumpIfNotEqual {56}
	051 Move X0, 0xA43000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+3869], W8
	056 Move X0, [X19]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X19]
	062 Move X8, [X0+184]
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X0, [X8+48]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return X0
	069 Move X3, [X8+968]
	070 Move X2, [X8+976]
	071 Move X1, X19
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 CallNoReturn X3
	077 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x036B2F34 MOVN W10, 0x0
	0x036B2F38 ADD X1, X31, 0x20
	0x036B2F3C MOV X0, X19
	0x036B2F40 STUR V0, [X31 + 0x28]
	0x036B2F44 STR X9, [X31 + 0x38]
	0x036B2F48 STR W10, [X31 + 0x20]
	0x036B2F4C BL 0x21967B8
	0x036B2F50 MOV X0, X19
	0x036B2F54 MOV X1, X31
	0x036B2F58 BL 0x32C47F8
	0x036B2F5C LDP X20, X19, [X31 + 0x80]
	0x036B2F60 LDP X22, X21, [X31 + 0x70]
	0x036B2F64 LDR X30, [X31 + 0x60]
	0x036B2F68 ADD X31, X31, 0x90
	0x036B2F6C RET
	0x036B2F70 SUB X31, X31, 0xA0
	0x036B2F74 STP X30, X21, [X31 + 0x80]
	0x036B2F78 STP X20, X19, [X31 + 0x90]
	0x036B2F7C ADRP X21, 0xD2E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X19, X0
	006 Move TEMP, X1
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {20}
	010 Move W8, [X19+56]
	011 Compare W8, 0
	012 JumpIfNotEqual {20}
	013 Move X0, [X19+48]
	014 Move W8, 1
	015 Move [X19+56], W8
	016 Compare X0, 0
	017 JumpIfEqual {20}
	018 Move X1, X31
	019 Call Stream.Dispose, X0
	020 And W1, W20, 1
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, X31
	025 Move X30, [X31+32]
	026 Call Stream.Dispose, X0, X1
	027 Return 

