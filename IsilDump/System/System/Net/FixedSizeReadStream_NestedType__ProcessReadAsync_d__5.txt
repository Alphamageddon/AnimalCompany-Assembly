Type: System.Net.FixedSizeReadStream/<ProcessReadAsync>d__5

Method: System.Void MoveNext()

Disassembly:
	0x0369C9F4 MOV X1, X31
	0x0369C9F8 BL 0x322B860
	0x0369C9FC STR X0, [X20 + 0x90]
	0x0369CA00 LDR X1, [X21]
	0x0369CA04 MOV X2, X31
	0x0369CA08 BL 0x3226EF8
	0x0369CA0C TBZ X0, 0x0, 0x369CAD8
	0x0369CA10 ADRP X8, 0xA80000
	0x0369CA14 LDR X0, [X20 + 0x90]
	0x0369CA18 LDR X8, [X8 + 0x4D0]
	0x0369CA1C MOV X2, X31
	0x0369CA20 LDR X1, [X8]
	0x0369CA24 BL 0x3226EF8
	0x0369CA28 TBZ X0, 0x0, 0x369CAD8
	0x0369CA2C ADRP X8, 0xA80000
	0x0369CA30 LDR X0, [X20 + 0x90]
	0x0369CA34 LDR X8, [X8 + 0x4D8]
	0x0369CA38 MOV X2, X31
	0x0369CA3C LDR X1, [X8]
	0x0369CA40 BL 0x3226EF8
	0x0369CA44 TBZ X0, 0x0, 0x369CAD8
	0x0369CA48 ADRP X8, 0xA80000
	0x0369CA4C LDR X0, [X20 + 0x90]
	0x0369CA50 LDR X8, [X8 + 0x4E0]
	0x0369CA54 MOV X2, X31
	0x0369CA58 LDR X1, [X8]
	0x0369CA5C BL 0x3226EF8
	0x0369CA60 TBZ X0, 0x0, 0x369CAD8
	0x0369CA64 ADRP X8, 0xA80000
	0x0369CA68 LDR X0, [X20 + 0x90]
	0x0369CA6C LDR X8, [X8 + 0x4C8]
	0x0369CA70 MOV X2, X31
	0x0369CA74 LDR X1, [X8]
	0x0369CA78 BL 0x3226EF8
	0x0369CA7C TBZ X0, 0x0, 0x369CAD8
	0x0369CA80 ADRP X8, 0xA9E000
	0x0369CA84 LDR X0, [X20 + 0x90]
	0x0369CA88 LDR X8, [X8 + 0x218]
	0x0369CA8C MOV X2, X31
	0x0369CA90 LDR X1, [X8]
	0x0369CA94 BL 0x3226EF8
	0x0369CA98 TBZ X0, 0x0, 0x369CAD8
	0x0369CA9C ADRP X8, 0xA9E000
	0x0369CAA0 LDR X0, [X20 + 0x90]
	0x0369CAA4 LDR X8, [X8 + 0x220]
	0x0369CAA8 MOV X2, X31
	0x0369CAAC LDR X1, [X8]
	0x0369CAB0 BL 0x3226EF8
	0x0369CAB4 TBZ X0, 0x0, 0x369CAD8
	0x0369CAB8 ADRP X8, 0xA9E000
	0x0369CABC LDR X0, [X20 + 0x90]
	0x0369CAC0 LDR X8, [X8 + 0x228]
	0x0369CAC4 MOV X2, X31
	0x0369CAC8 LDR X1, [X8]
	0x0369CACC BL 0x3226EF8
	0x0369CAD0 TBZ X0, 0x0, 0x369CAD8
	0x0369CAD4 STR X19, [X20 + 0x90]
	0x0369CAD8 LDP X20, X19, [X31 + 0x10]
	0x0369CADC LDP X30, X21, [X31], #0x20
	0x0369CAE0 RET
	0x0369CAE4 ADRP X0, 0xA5F000
	0x0369CAE8 LDR X0, [X0 + 0x578]
	0x0369CAEC BL 0x1C16D08
	0x0369CAF0 BL 0x1C16F10
	0x0369CAF4 MOV X19, X0
	0x0369CAF8 ADRP X0, 0xAA2000
	0x0369CAFC LDR X0, [X0 + 0x480]
	0x0369CB00 BL 0x1C16D08
	0x0369CB04 MOV X20, X0
	0x0369CB08 ADRP X0, 0xA61000
	0x0369CB0C LDR X0, [X0 + 0xEC8]
	0x0369CB10 BL 0x1C16D08
	0x0369CB14 MOV X2, X0
	0x0369CB18 MOV X0, X19
	0x0369CB1C MOV X1, X20
	0x0369CB20 MOV X3, X31
	0x0369CB24 BL 0x330E16C
	0x0369CB28 ADRP X0, 0xAA2000
	0x0369CB2C LDR X0, [X0 + 0x7C0]
	0x0369CB30 BL 0x1C16D08
	0x0369CB34 MOV X1, X0
	0x0369CB38 MOV X0, X19
	0x0369CB3C BL 0x1C16DEC
	0x0369CB40 BL 0x1C16F20
	0x0369CB44 AND W8, W1, 0x1
	0x0369CB48 STRB W8, [X0 + 0xA1]
	0x0369CB4C RET
	0x0369CB50 LDR X0, [X0 + 0xA8]
	0x0369CB54 RET
	0x0369CB58 STR X30, [X31 - 0x30]!
	0x0369CB5C STP X22, X21, [X31 + 0x10]
	0x0369CB60 STP X20, X19, [X31 + 0x20]
	0x0369CB64 ADRP X22, 0xD44000
	0x0369CB68 ADRP X21, 0xA9E000
	0x0369CB6C LDRB W8, [X22 + 0x8BB]
	0x0369CB70 LDR X21, [X21 + 0x168]
	0x0369CB74 MOV X19, X1
	0x0369CB78 MOV X20, X0
	0x0369CB7C TBNZ X8, 0x0, 0x369CB94
	0x0369CB80 ADRP X0, 0xA9E000
	0x0369CB84 LDR X0, [X0 + 0x168]
	0x0369CB88 BL 0x1C16CF4
	0x0369CB8C MOVZ W8, 0x1
	0x0369CB90 STRB W8, [X22 + 0x8BB]
	0x0369CB94 LDR X0, [X21]
	0x0369CB98 LDR W8, [X0 + 0xE0]
	0x0369CB9C CBNZ W8, 0x369CBA8
	0x0369CBA0 BL 0x1C16DFC
	0x0369CBA4 LDR X0, [X21]
	0x0369CBA8 LDR X8, [X0 + 0xB8]
	0x0369CBAC MOV X0, X19
	0x0369CBB0 MOV X2, X31
	0x0369CBB4 LDR X1, [X8 + 0x8]
	0x0369CBB8 BL 0x339D0E0
	0x0369CBBC TBZ X0, 0x0, 0x369CBEC
	0x0369CBC0 LDR X0, [X21]
	0x0369CBC4 LDR W8, [X0 + 0xE0]
	0x0369CBC8 CBNZ W8, 0x369CBD4
	0x0369CBCC BL 0x1C16DFC
	0x0369CBD0 LDR X0, [X21]
	0x0369CBD4 LDR X8, [X0 + 0xB8]
	0x0369CBD8 MOV X0, X19
	0x0369CBDC MOV X2, X31
	0x0369CBE0 LDR X1, [X8 + 0x10]
	0x0369CBE4 BL 0x339D0E0
	0x0369CBE8 TBNZ X0, 0x0, 0x369CC08
	0x0369CBEC MOVZ W8, 0x1
	0x0369CBF0 STRB W8, [X20 + 0xB0]
	0x0369CBF4 STR X19, [X20 + 0xA8]
	0x0369CBF8 LDP X20, X19, [X31 + 0x20]
	0x0369CBFC LDP X22, X21, [X31 + 0x10]
	0x0369CC00 LDR X30, [X31], #0x30
	0x0369CC04 RET
	0x0369CC08 ADRP X0, 0xA5F000
	0x0369CC0C LDR X0, [X0 + 0x578]
	0x0369CC10 BL 0x1C16D08
	0x0369CC14 BL 0x1C16F10
	0x0369CC18 MOV X19, X0
	0x0369CC1C ADRP X0, 0xAA2000
	0x0369CC20 LDR X0, [X0 + 0x7C8]
	0x0369CC24 BL 0x1C16D08
	0x0369CC28 MOV X20, X0
	0x0369CC2C ADRP X0, 0xA61000
	0x0369CC30 LDR X0, [X0 + 0xEC8]
	0x0369CC34 BL 0x1C16D08
	0x0369CC38 MOV X2, X0
	0x0369CC3C MOV X0, X19
	0x0369CC40 MOV X1, X20
	0x0369CC44 MOV X3, X31
	0x0369CC48 BL 0x330E16C
	0x0369CC4C ADRP X0, 0xAA2000
	0x0369CC50 LDR X0, [X0 + 0x7D0]
	0x0369CC54 BL 0x1C16D08
	0x0369CC58 MOV X1, X0
	0x0369CC5C MOV X0, X19
	0x0369CC60 BL 0x1C16DEC
	0x0369CC64 LDR X0, [X0 + 0xC0]
	0x0369CC68 RET
	0x0369CC6C STR X30, [X31 - 0x20]!
	0x0369CC70 STP X20, X19, [X31 + 0x10]
	0x0369CC74 MOV X19, X1
	0x0369CC78 MOV X20, X0
	0x0369CC7C BL 0x369C1D4
	0x0369CC80 STR X19, [X20 + 0xC0]
	0x0369CC84 STR X31, [X20 + 0xD0]
	0x0369CC88 MOV X0, X20
	0x0369CC8C LDP X20, X19, [X31 + 0x10]
	0x0369CC90 LDR X30, [X31], #0x20
	0x0369CC94 B 0x369CC98
	0x0369CC98 STR X30, [X31 - 0x30]!
	0x0369CC9C STP X22, X21, [X31 + 0x10]
	0x0369CCA0 STP X20, X19, [X31 + 0x20]
	0x0369CCA4 ADRP X19, 0xD44000
	0x0369CCA8 LDRB W8, [X19 + 0x8BE]
	0x0369CCAC MOV X20, X0
	0x0369CCB0 TBNZ X8, 0x0, 0x369CCC8
	0x0369CCB4 ADRP X0, 0xA85000
	0x0369CCB8 LDR X0, [X0 + 0x230]
	0x0369CCBC BL 0x1C16CF4
	0x0369CCC0 MOVZ W8, 0x1
	0x0369CCC4 STRB W8, [X19 + 0x8BE]
	0x0369CCC8 LDR X19, [X20 + 0x110]
	0x0369CCCC STRB W31, [X31 + 0xC]
	0x0369CCD0 ADD X1, X31, 0xC
	0x0369CCD4 MOV X0, X19
	0x0369CCD8 MOV X2, X31
	0x0369CCDC BL 0x33DE64C
	0x0369CCE0 LDRB W8, [X20 + 0x30]
	0x0369CCE4 CBZ W8, 0x369CD24
	0x0369CCE8 ADRP X8, 0xA85000
	0x0369CCEC LDR X8, [X8 + 0x230]
	0x0369CCF0 LDR X21, [X20 + 0x28]
	0x0369CCF4 LDR X22, [X20 + 0xC0]
	0x0369CCF8 LDR X0, [X8]
	0x0369CCFC LDR W8, [X0 + 0xE0]
	0x0369CD00 CBNZ W8, 0x369CD08
	0x0369CD04 BL 0x1C16DFC
	0x0369CD08 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD45000
	009 Move W8, [X20+2223]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0xAA3000
	016 Move X0, [X0+1896]
	017 Call 0x1C17CF4
	018 Move X0, 0xA87000
	019 Move X0, [X0+3632]
	020 Call 0x1C17CF4
	021 Move X0, 0xA87000
	022 Move X0, [X0+3488]
	023 Call 0x1C17CF4
	024 Move X0, 0xA60000
	025 Move X0, [X0+2008]
	026 Call 0x1C17CF4
	027 Move X0, 0xA8C000
	028 Move X0, [X0+696]
	029 Call 0x1C17CF4
	030 Move X0, 0xA8C000
	031 Move X0, [X0+704]
	032 Call 0x1C17CF4
	033 Move X0, 0xA8C000
	034 Move X0, [X0+712]
	035 Call 0x1C17CF4
	036 Move X0, 0xA58000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move X0, 0xA8C000
	040 Move X0, [X0+720]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+2223], W8
	044 Move [X31], X31
	045 Move [X31+8], X31
	046 Move X22, 0xA87000
	047 Move W8, [X19]
	048 Move X23, [X19+40]
	049 Move X22, [X22+3488]
	050 Compare W8, 0
	051 JumpIfEqual {124}
	052 Move X8, 0xA60000
	053 Move X8, [X8+2008]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Add X0, X19, 32
	060 Move X1, X31
	061 Call CancellationToken.ThrowIfCancellationRequested, X0
	062 Compare X23, 0
	063 JumpIfEqual {167}
	064 Move X8, [X23+64]
	065 Move X9, [X23+72]
	066 Subtract X20, X8, X9
	067 Move X8, 0xA58000
	068 Move X8, [X8+1448]
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X20
	076 Move X1, X21
	077 Move X2, X31
	078 Call Math.Min, X0, X1
	079 Move X3, X0
	080 Move X0, [X23+48]
	081 Compare X0, 0
	082 JumpIfEqual {168}
	083 Move X8, [X0]
	084 Move X1, [X19+56]
	085 Move X4, [X19+32]
	086 Move W2, [X19+64]
	087 Move X9, [X8+728]
	088 Move X5, [X8+736]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {169}
	092 Move X8, 0xA8C000
	093 Move X8, [X8+720]
	094 Move X2, [X8]
	095 Move W1, W31
	096 Call Task`1<Int32>.ConfigureAwait, X0, X1
	097 Move X8, 0xA8C000
	098 Move X8, [X8+712]
	099 Move [X31], X0
	100 Move [X31+8], X1
	101 Move X8, [X8]
	102 Add X0, X31, 0
	103 Move X1, X8
	104 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {132}
	109 Move [X19], W31
	110 Move V0, [X31]
	111 Move [X19+72], V0
	112 Move X0, [X22]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X8, 0xAA3000
	118 Move X8, [X8+1896]
	119 Add X0, X19, 8
	120 Move X3, [X8]
	121 Add X1, X31, 0
	122 Move X2, X19
	123 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move TEMP, 0
	126 Not TEMP
	127 Move W8, TEMP
	128 Move [X31], V0
	129 Move [X19+72], X31
	130 Move [X19+80], X31
	131 Move [X19], W8
	132 Move X8, 0xA8C000
	133 Move X8, [X8+704]
	134 Move X1, [X8]
	135 Add X0, X31, 0
	136 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	137 Move W20, W0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Compare X23, 0
	140 JumpIfEqual {170}
	141 Move X8, [X23+72]
	142 Add X8, X8, W20
	143 Move [X23+72], X8
	144 Move TEMP, 1
	145 Not TEMP
	146 Move W8, TEMP
	147 Move [X19+8], W8
	148 Move X0, [X22]
	149 Move X21, 0xA87000
	150 Move W8, [X0+224]
	151 Move X21, [X21+3632]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X2, [X21]
	156 Move X0, X19
	157 Move W1, W20
	158 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X30, [X31+16]
	164 Move X23, [X31+24]
	165 Add X31, X31, 64
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Move X20, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X20
	174 Call 0x3EB2AD0
	175 Move X20, X0
	176 Move X0, 0xA58000
	177 Move X0, [X0+2000]
	178 Call 0x1C17D08
	179 Move X8, [X20]
	180 Move X1, [X8]
	181 Call 0x1C18270
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {206}
	186 Move X20, [X20]
	187 Call 0x3EB2AE0
	188 Move TEMP, 1
	189 Not TEMP
	190 Move W8, TEMP
	191 Move [X19+8], W8
	192 Move X0, 0xA87000
	193 Move X0, [X0+3488]
	194 Call 0x1C17D08
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X0, 0xA87000
	200 Move X0, [X0+3648]
	201 Call 0x1C17D08
	202 Move X2, X0
	203 Move X0, X19
	204 Move X1, X20
	205 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	206 Move W0, 8
	207 Call 0x3EB2AF0
	208 Move X8, [X20]
	209 Move [X0], X8
	210 Move X1, 0x819000
	211 Add X1, X1, 3672
	212 Move X2, X31
	213 Call 0x3EB2B00
	214 Move X20, X0
	215 Call 0x3EB2AE0
	216 Move X0, X20
	217 Call 0x1D2D690
	218 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0369CD0C MOV X1, X22
	0x0369CD10 BL 0x369D018
	0x0369CD14 MOV X21, X31
	0x0369CD18 STR X0, [X20 + 0xD0]
	0x0369CD1C STRB W31, [X20 + 0x30]
	0x0369CD20 B 0x369CD30
	0x0369CD24 LDR X8, [X20 + 0xD0]
	0x0369CD28 CBZ X8, 0x369CCE8
	0x0369CD2C MOV X21, X31
	0x0369CD30 LDRB W8, [X31 + 0xC]
	0x0369CD34 CBZ W8, 0x369CD44
	0x0369CD38 MOV X0, X19
	0x0369CD3C MOV X1, X31
	0x0369CD40 BL 0x33E14E4
	0x0369CD44 CBNZ X21, 0x369CD5C
	0x0369CD48 LDR X0, [X20 + 0xD0]
	0x0369CD4C LDP X20, X19, [X31 + 0x20]
	0x0369CD50 LDP X22, X21, [X31 + 0x10]
	0x0369CD54 LDR X30, [X31], #0x30
	0x0369CD58 RET
	0x0369CD5C MOV X0, X21
	0x0369CD60 BL 0x1C16F18
	0x0369CD64 B 0x369CD6C
	0x0369CD68 B 0x369CD6C
	0x0369CD6C MOV X22, X0
	0x0369CD70 CMP W1, 0x1
	0x0369CD74 B.NE 0x369CD8C
	0x0369CD78 MOV X0, X22
	0x0369CD7C BL 0x3EB1AD0
	0x0369CD80 LDR X21, [X0]
	0x0369CD84 BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD45000
	007 Move X21, 0xA87000
	008 Move W8, [X22+2224]
	009 Move X21, [X21+3488]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA87000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xA87000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2224], W8
	024 Move X0, [X21]
	025 Move X21, 0xA87000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3656]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Int32>.SetStateMachine, X0, X1
	040 Return 

