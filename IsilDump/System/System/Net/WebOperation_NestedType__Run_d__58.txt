Type: System.Net.WebOperation/<Run>d__58

Method: System.Void MoveNext()

Disassembly:
	0x036B1C9C B.NE 0x36B1D0C
	0x036B1CA0 MOV X0, X20
	0x036B1CA4 BL 0x3EB1AD0
	0x036B1CA8 MOV X20, X0
	0x036B1CAC ADRP X0, 0xA42000
	0x036B1CB0 LDR X0, [X0 + 0x7D0]
	0x036B1CB4 BL 0x1C16D08
	0x036B1CB8 LDR X8, [X20]
	0x036B1CBC LDR X1, [X8]
	0x036B1CC0 BL 0x1C17270
	0x036B1CC4 TBZ X0, 0x0, 0x36B1CE4
	0x036B1CC8 LDR X20, [X20]
	0x036B1CCC BL 0x3EB1AE0
	0x036B1CD0 MOV X0, X19
	0x036B1CD4 MOV X1, X20
	0x036B1CD8 BL 0x36B1678
	0x036B1CDC MOV X19, X0
	0x036B1CE0 B 0x36B1C7C
	0x036B1CE4 MOVZ W0, 0x8
	0x036B1CE8 BL 0x3EB1AF0
	0x036B1CEC LDR X8, [X20]
	0x036B1CF0 STR X8, [X0]
	0x036B1CF4 ADRP X1, 0x803000
	0x036B1CF8 ADD X1, X1, 0xE58
	0x036B1CFC MOV X2, X31
	0x036B1D00 BL 0x3EB1B00
	0x036B1D04 MOV X20, X0
	0x036B1D08 BL 0x3EB1AE0
	0x036B1D0C MOV X0, X20
	0x036B1D10 BL 0x1D2C690
	0x036B1D14 BL 0x1990590
	0x036B1D18 SUB X31, X31, 0xC0
	0x036B1D1C STP X30, X25, [X31 + 0x80]
	0x036B1D20 STP X24, X23, [X31 + 0x90]
	0x036B1D24 STP X22, X21, [X31 + 0xA0]
	0x036B1D28 STP X20, X19, [X31 + 0xB0]
	0x036B1D2C ADRP X25, 0xD2F000
	0x036B1D30 ADRP X24, 0xA71000
	0x036B1D34 LDRB W8, [X25 + 0x963]
	0x036B1D38 LDR X24, [X24 + 0xDA0]
	0x036B1D3C MOV X19, X4
	0x036B1D40 MOV W20, W3
	0x036B1D44 MOV W21, W2
	0x036B1D48 MOV X23, X1
	0x036B1D4C MOV X22, X0
	0x036B1D50 TBNZ X8, 0x0, 0x36B1D8C
	0x036B1D54 ADRP X0, 0xA71000
	0x036B1D58 LDR X0, [X0 + 0xDA8]
	0x036B1D5C BL 0x1C16CF4
	0x036B1D60 ADRP X0, 0xA8E000
	0x036B1D64 LDR X0, [X0 + 0x310]
	0x036B1D68 BL 0x1C16CF4
	0x036B1D6C ADRP X0, 0xA71000
	0x036B1D70 LDR X0, [X0 + 0xDB8]
	0x036B1D74 BL 0x1C16CF4
	0x036B1D78 ADRP X0, 0xA71000
	0x036B1D7C LDR X0, [X0 + 0xDA0]
	0x036B1D80 BL 0x1C16CF4
	0x036B1D84 MOVZ W8, 0x1
	0x036B1D88 STRB W8, [X25 + 0x963]
	0x036B1D8C LDR X0, [X24]
	0x036B1D90 MOVI V0.2D, 0x0
	0x036B1D94 STP V0, V0, [X31 + 0x40]
	0x036B1D98 STP V0, V0, [X31 + 0x60]
	0x036B1D9C STP V0, V0, [X31 + 0x20]
	0x036B1DA0 STP X19, X23, [X31 + 0x48]
	0x036B1DA4 STP W21, W20, [X31 + 0x58]
	0x036B1DA8 STR X22, [X31 + 0x40]
	0x036B1DAC ADRP X21, 0xA71000
	0x036B1DB0 ADRP X19, 0xA8E000
	0x036B1DB4 ADRP X20, 0xA71000
	0x036B1DB8 LDR W8, [X0 + 0xE0]
	0x036B1DBC LDR X21, [X21 + 0xDA8]
	0x036B1DC0 LDR X19, [X19 + 0x310]
	0x036B1DC4 LDR X20, [X20 + 0xDB8]
	0x036B1DC8 CBNZ W8, 0x36B1DD0
	0x036B1DCC BL 0x1C16DFC
	0x036B1DD0 LDR X0, [X21]
	0x036B1DD4 ADD X8, X31, 0x8
	0x036B1DD8 BL 0x263005C
	0x036B1DDC LDUR V0, [X31 + 0x8]
	0x036B1DE0 LDR X9, [X31 + 0x18]
	0x036B1DE4 LDR X2, [X19]
	0x036B1DE8 ADD X8, X31, 0x20
	0x036B1DEC ORR X19, X8, 0xF
	0x036B1DF0 MOVN W10, 0x0
	0x036B1DF4 ADD X1, X31, 0x20
	0x036B1DF8 MOV X0, X19
	0x036B1DFC STUR V0, [X31 + 0x28]
	0x036B1E00 STR X9, [X31 + 0x38]
	0x036B1E04 STR W10, [X31 + 0x20]
	0x036B1E08 BL 0x1FAE0D4
	0x036B1E0C LDR X1, [X20]
	0x036B1E10 MOV X0, X19
	0x036B1E14 BL 0x2630070
	0x036B1E18 LDP X20, X19, [X31 + 0xB0]
	0x036B1E1C LDP X22, X21, [X31 + 0xA0]
	0x036B1E20 LDP X24, X23, [X31 + 0x90]
	0x036B1E24 LDP X30, X25, [X31 + 0x80]
	0x036B1E28 ADD X31, X31, 0xC0
	0x036B1E2C RET
	0x036B1E30 STP X30, X21, [X31 - 0x20]!
	0x036B1E34 STP X20, X19, [X31 + 0x10]
	0x036B1E38 ADRP X21, 0xD2F000
	0x036B1E3C LDRB W8, [X21 + 0x964]
	0x036B1E40 MOV X19, X1
	0x036B1E44 MOV X20, X0
	0x036B1E48 TBNZ X8, 0x0, 0x36B1E6C
	0x036B1E4C ADRP X0, 0xA43000
	0x036B1E50 LDR X0, [X0 + 0x7B8]
	0x036B1E54 BL 0x1C16CF4
	0x036B1E58 ADRP X0, 0xA8D000
	0x036B1E5C LDR X0, [X0 + 0x600]
	0x036B1E60 BL 0x1C16CF4
	0x036B1E64 MOVZ W8, 0x1
	0x036B1E68 STRB W8, [X21 + 0x964]
	0x036B1E6C LDR X0, [X20 + 0x28]
	0x036B1E70 CBZ X0, 0x36B1F30
	0x036B1E74 MOV X1, X19
	0x036B1E78 BL 0x36AC0BC
	0x036B1E7C LDR X0, [X20 + 0x30]
	0x036B1E80 CBZ X0, 0x36B1EB8
	0x036B1E84 ADRP X9, 0xA8D000
	0x036B1E88 LDR X9, [X9 + 0x600]
	0x036B1E8C LDR X8, [X0]
	0x036B1E90 LDR X9, [X9]
	0x036B1E94 LDRB W11, [X8 + 0x130]
	0x036B1E98 LDRB W10, [X9 + 0x130]
	0x036B1E9C CMP W11, W10
	0x036B1EA0 B.CC 0x36B1EB8
	0x036B1EA4 LDR X11, [X8 + 0xC8]
	0x036B1EA8 ADD X10, X11, X10, 0x3, LSL
	0x036B1EAC LDUR X10, [X10 - 0x8]
	0x036B1EB0 CMP X10, X9
	0x036B1EB4 B.EQ 0x36B1F18
	0x036B1EB8 ADRP X19, 0xA43000
	0x036B1EBC LDR X19, [X19 + 0x7B8]
	0x036B1EC0 LDR X0, [X19]
	0x036B1EC4 LDR W8, [X0 + 0xE0]
	0x036B1EC8 CBNZ W8, 0x36B1ED0
	0x036B1ECC BL 0x1C16DFC
	0x036B1ED0 ADRP X20, 0xD27000
	0x036B1ED4 LDRB W8, [X20 + 0xF1D]
	0x036B1ED8 CBNZ W8, 0x36B1EF0
	0x036B1EDC ADRP X0, 0xA43000
	0x036B1EE0 LDR X0, [X0 + 0x7B8]
	0x036B1EE4 BL 0x1C16CF4
	0x036B1EE8 MOVZ W8, 0x1
	0x036B1EEC STRB W8, [X20 + 0xF1D]
	0x036B1EF0 LDR X0, [X19]
	0x036B1EF4 LDR W8, [X0 + 0xE0]
	0x036B1EF8 CBNZ W8, 0x36B1F04
	0x036B1EFC BL 0x1C16DFC
	0x036B1F00 LDR X0, [X19]
	0x036B1F04 LDR X8, [X0 + 0xB8]
	0x036B1F08 LDP X20, X19, [X31 + 0x10]
	0x036B1F0C LDR X0, [X8 + 0x30]
	0x036B1F10 LDP X30, X21, [X31], #0x20
	0x036B1F14 RET
	0x036B1F18 LDR X3, [X8 + 0x3C8]
	0x036B1F1C LDR X2, [X8 + 0x3D0]
	0x036B1F20 MOV X1, X19
	0x036B1F24 LDP X20, X19, [X31 + 0x10]
	0x036B1F28 LDP X30, X21, [X31], #0x20
	0x036B1F2C BR X3
	0x036B1F30 BL 0x1C16F20
	0x036B1F34 STR X30, [X31 - 0x20]!
	0x036B1F38 STP X20, X19, [X31 + 0x10]
	0x036B1F3C MOV W20, W1
	0x036B1F40 MOV X19, X0
	0x036B1F44 TBZ X1, 0x0, 0x36B1F68
	0x036B1F48 LDRB W8, [X19 + 0x38]
	0x036B1F4C CBNZ W8, 0x36B1F68
	0x036B1F50 LDR X0, [X19 + 0x30]
	0x036B1F54 MOVZ W8, 0x1
	0x036B1F58 STRB W8, [X19 + 0x38]
	0x036B1F5C CBZ X0, 0x36B1F68
	0x036B1F60 MOV X1, X31
	0x036B1F64 BL 0x32F02B8
	0x036B1F68 AND W1, W20, 0x1
	0x036B1F6C MOV X0, X19
	0x036B1F70 LDP X20, X19, [X31 + 0x10]
	0x036B1F74 MOV X2, X31
	0x036B1F78 LDR X30, [X31], #0x20
	0x036B1F7C B 0x32F02C8
	0x036B1F80 SUB X31, X31, 0x70
	0x036B1F84 STR X30, [X31 + 0x40]
	0x036B1F88 STP X22, X21, [X31 + 0x50]
	0x036B1F8C STP X20, X19, [X31 + 0x60]
	0x036B1F90 ADRP X20, 0xD2F000
	0x036B1F94 LDRB W8, [X20 + 0x965]
	0x036B1F98 MOV X19, X0
	0x036B1F9C TBNZ X8, 0x0, 0x36B2008
	0x036B1FA0 ADRP X0, 0xA8E000
	0x036B1FA4 LDR X0, [X0 + 0x318]
	0x036B1FA8 BL 0x1C16CF4
	0x036B1FAC ADRP X0, 0xA8E000
	0x036B1FB0 LDR X0, [X0 + 0x320]
	0x036B1FB4 BL 0x1C16CF4
	0x036B1FB8 ADRP X0, 0xA71000
	0x036B1FBC LDR X0, [X0 + 0xE30]
	0x036B1FC0 BL 0x1C16CF4
	0x036B1FC4 ADRP X0, 0xA71000
	0x036B1FC8 LDR X0, [X0 + 0xDA0]
	0x036B1FCC BL 0x1C16CF4
	0x036B1FD0 ADRP X0, 0xA76000
	0x036B1FD4 LDR X0, [X0 + 0x2B8]
	0x036B1FD8 BL 0x1C16CF4
	0x036B1FDC ADRP X0, 0xA76000
	0x036B1FE0 LDR X0, [X0 + 0x2C0]
	0x036B1FE4 BL 0x1C16CF4
	0x036B1FE8 ADRP X0, 0xA76000
	0x036B1FEC LDR X0, [X0 + 0x2C8]
	0x036B1FF0 BL 0x1C16CF4
	0x036B1FF4 ADRP X0, 0xA76000
	0x036B1FF8 LDR X0, [X0 + 0x2D0]
	0x036B1FFC BL 0x1C16CF4
	0x036B2000 MOVZ W8, 0x1
	0x036B2004 STRB W8, [X20 + 0x965]
	0x036B2008 STP X31, X31, [X31 + 0x30]
	0x036B200C STP X31, X31, [X31 + 0x20]
	0x036B2010 STR W31, [X31 + 0x18]
	0x036B2014 LDR W21, [X19]
	0x036B2018 LDR X20, [X19 + 0x20]
	0x036B201C CMP W21, 0x2
	0x036B2020 B.CC 0x36B2068
	0x036B2024 CBZ X20, 0x36B2230
	0x036B2028 LDR X0, [X20 + 0x28]
	0x036B202C CBZ X0, 0x36B2234
	0x036B2030 LDR X1, [X19 + 0x28]
	0x036B2034 BL 0x36AC0BC
	0x036B2038 LDR X9, [X19 + 0x30]
	0x036B203C CBZ X9, 0x36B2238
	0x036B2040 LDR W8, [X19 + 0x38]
	0x036B2044 TBNZ X8, 0x1F, 0x36B2280
	0x036B2048 LDR W9, [X9 + 0x18]
	0x036B204C CMP W8, W9
	0x036B2050 B.GT 0x36B2280
	0x036B2054 LDR W10, [X19 + 0x3C]
	0x036B2058 TBNZ X10, 0x1F, 0x36B22C8
	0x036B205C SUB W8, W9, W8
	0x036B2060 CMP W8, W10
	0x036B2064 B.LT 0x36B22C8
	0x036B2068 ADRP X22, 0xA70000
	0x036B206C LDR X22, [X22 + 0xDA0]
	0x036B2070 CBZ W21, 0x36B2094
	0x036B2074 CMP W21, 0x1
	0x036B2078 B.NE 0x36B20AC
	0x036B207C LDR V0, [X19 + 0x5]
	0x036B2080 MOVN W8, 0x0
	0x036B2084 STR V0, [X31 + 0x2]
	0x036B2088 STP X31, X31, [X19 + 0x50]
	0x036B208C STR W8, [X19]
	0x036B2090 B 0x36B2160
	0x036B2094 LDR V0, [X19 + 0x4]
	0x036B2098 MOVN W8, 0x0
	0x036B209C STR V0, [X31 + 0x3]
	0x036B20A0 STP X31, X31, [X19 + 0x40]
	0x036B20A4 STR W8, [X19]
	0x036B20A8 B 0x36B2104
	0x036B20AC CBZ X20, 0x36B2310
	0x036B20B0 LDR X8, [X20]
	0x036B20B4 LDP X4, X1, [X19 + 0x28]
	0x036B20B8 LDP W2, W3, [X19 + 0x38]
	0x036B20BC LDR X9, [X8 + 0x3B8]
	0x036B20C0 LDR X5, [X8 + 0x3C0]
	0x036B20C4 MOV X0, X20
	0x036B20C8 BLR X9
	0x036B20CC CBZ X0, 0x36B2314
	0x036B20D0 ADRP X8, 0xA75000
	0x036B20D4 LDR X8, [X8 + 0x2D0]
	0x036B20D8 LDR X2, [X8]
	0x036B20DC MOV W1, W31
	0x036B20E0 BL 0x269D3A8
	0x036B20E4 ADRP X8, 0xA75000
	0x036B20E8 LDR X8, [X8 + 0x2C8]
	0x036B20EC STP X0, X1, [X31 + 0x30]
	0x036B20F0 LDR X8, [X8]
	0x036B20F4 ADD X0, X31, 0x30
	0x036B20F8 MOV X1, X8
	0x036B20FC BL 0x2998978
	0x036B2100 TBZ X0, 0x0, 0x36B21B4
	0x036B2104 ADRP X8, 0xA75000
	0x036B2108 LDR X8, [X8 + 0x2C0]
	0x036B210C LDR X1, [X8]
	0x036B2110 ADD X0, X31, 0x30
	0x036B2114 BL 0x29989C4
	0x036B2118 MOV W21, W0
	0x036B211C CBNZ W0, 0x36B2170
	0x036B2120 CBZ X20, 0x36B2318
	0x036B2124 LDR X8, [X20]
	0x036B2128 LDR X1, [X19 + 0x28]
	0x036B212C LDR X9, [X8 + 0x3C8]
	0x036B2130 LDR X2, [X8 + 0x3D0]
	0x036B2134 MOV X0, X20
	0x036B2138 BLR X9
	0x036B213C CBZ X0, 0x36B231C
	0x036B2140 MOV W1, W31
	0x036B2144 MOV X2, X31
	0x036B2148 BL 0x33ED3A0
	0x036B214C STP X0, X1, [X31 + 0x20]
	0x036B2150 ADD X0, X31, 0x20
	0x036B2154 MOV X1, X31
	0x036B2158 BL 0x32C40D4
	0x036B215C TBZ X0, 0x0, 0x36B21F0
	0x036B2160 ADD X0, X31, 0x20
	0x036B2164 MOV X1, X31
	0x036B2168 BL 0x32C40F0
	0x036B216C MOV W21, W31
	0x036B2170 MOVN W8, 0x1
	0x036B2174 STR W8, [X19], #0x8
	0x036B2178 LDR X0, [X22]
	0x036B217C ADRP X20, 0xA70000
	0x036B2180 LDR W8, [X0 + 0xE0]
	0x036B2184 LDR X20, [X20 + 0xE30]
	0x036B2188 CBNZ W8, 0x36B2190
	0x036B218C BL 0x1C16DFC
	0x036B2190 LDR X2, [X20]
	0x036B2194 MOV X0, X19
	0x036B2198 MOV W1, W21
	0x036B219C BL 0x26300F0
	0x036B21A0 LDP X20, X19, [X31 + 0x60]
	0x036B21A4 LDP X22, X21, [X31 + 0x50]
	0x036B21A8 LDR X30, [X31 + 0x40]
	0x036B21AC ADD X31, X31, 0x70
	0x036B21B0 RET
	0x036B21B4 STR W31, [X19]
	0x036B21B8 LDR V0, [X31 + 0x3]
	0x036B21BC STR V0, [X19 + 0x4]
	0x036B21C0 LDR X0, [X22]
	0x036B21C4 LDR W8, [X0 + 0xE0]
	0x036B21C8 CBNZ W8, 0x36B21D0
	0x036B21CC BL 0x1C16DFC
	0x036B21D0 ADRP X8, 0xA8D000
	0x036B21D4 LDR X8, [X8 + 0x320]
	0x036B21D8 ADD X0, X19, 0x8
	0x036B21DC LDR X3, [X8]
	0x036B21E0 ADD X1, X31, 0x30
	0x036B21E4 MOV X2, X19
	0x036B21E8 BL 0x1FAC734
	0x036B21EC B 0x36B21A0
	0x036B21F0 MOVZ W8, 0x1
	0x036B21F4 STR W8, [X19]
	0x036B21F8 LDR V0, [X31 + 0x2]
	0x036B21FC STR V0, [X19 + 0x5]
	0x036B2200 LDR X0, [X22]
	0x036B2204 LDR W8, [X0 + 0xE0]
	0x036B2208 CBNZ W8, 0x36B2210
	0x036B220C BL 0x1C16DFC
	0x036B2210 ADRP X8, 0xA8D000
	0x036B2214 LDR X8, [X8 + 0x318]
	0x036B2218 ADD X0, X19, 0x8
	0x036B221C LDR X3, [X8]
	0x036B2220 ADD X1, X31, 0x20
	0x036B2224 MOV X2, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0xD30000
	008 Move W8, [X20+2397]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0xA8F000
	015 Move X0, [X0+656]
	016 Call 0x1C17CF4
	017 Move X0, 0xA8F000
	018 Move X0, [X0+664]
	019 Call 0x1C17CF4
	020 Move X0, 0xA8E000
	021 Move X0, [X0+2584]
	022 Call 0x1C17CF4
	023 Move X0, 0xA8E000
	024 Move X0, [X0+2608]
	025 Call 0x1C17CF4
	026 Move X0, 0xA8E000
	027 Move X0, [X0+2624]
	028 Call 0x1C17CF4
	029 Move X0, 0xA8E000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xA8F000
	033 Move X0, [X0+640]
	034 Call 0x1C17CF4
	035 Move X0, 0xA8F000
	036 Move X0, [X0+672]
	037 Call 0x1C17CF4
	038 Move X0, 0xA8F000
	039 Move X0, [X0+680]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+2397], W8
	043 Move [X31+16], X31
	044 Move [X31+24], X31
	045 Move [X31], X31
	046 Move [X31+8], X31
	047 Move W8, [X19]
	048 Move X20, [X19+40]
	049 Compare W8, 0
	050 JumpIfEqual {69}
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move V0, [X19+5]
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Move [X31], V0
	058 Move [X19+80], X31
	059 Move [X19+88], X31
	060 Move [X19], W8
	061 Move V0, [X19+5]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Move [X31], V0
	066 Move [X19+80], X31
	067 Move [X19+88], X31
	068 Move [X19], W8
	069 Move V0, [X19+4]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Move [X31+1], V0
	074 Move [X19+64], X31
	075 Move [X19+72], X31
	076 Move [X19], W8
	077 Compare X20, 0
	078 JumpIfEqual {269}
	079 Move X0, X20
	080 Call WebOperation.ThrowIfClosedOrDisposed, X0
	081 Move X0, [X20+56]
	082 Compare X0, 0
	083 JumpIfEqual {270}
	084 Move X21, [X20+24]
	085 Move X1, X31
	086 Call CancellationTokenSource.get_Token, X0
	087 Compare X21, 0
	088 JumpIfEqual {271}
	089 Move X2, X0
	090 Move X0, X21
	091 Move X1, X20
	092 Call WebConnection.InitConnection, X0, X1, X2
	093 Compare X0, 0
	094 JumpIfEqual {272}
	095 Move X8, 0xA8E000
	096 Move X8, [X8+2656]
	097 Move X2, [X8]
	098 Move W1, W31
	099 Call Task`1<Object>.ConfigureAwait, X0, X1
	100 Move X8, 0xA8E000
	101 Move X8, [X8+2624]
	102 Move [X31+16], X0
	103 Move [X31+24], X1
	104 Move X8, [X8]
	105 Add X0, X31, 16
	106 Move X1, X8
	107 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {241}
	112 Move X8, 0xA8E000
	113 Move X8, [X8+2608]
	114 Add X0, X31, 16
	115 Move X1, [X8]
	116 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	117 Move [X19+48], X0
	118 Compare X20, 0
	119 JumpIfEqual {265}
	120 Move X0, X20
	121 Call WebOperation.ThrowIfClosedOrDisposed, X0
	122 Move X21, [X19+48]
	123 Move X0, [X20+56]
	124 Move [X20+96], X21
	125 Compare X0, 0
	126 JumpIfEqual {266}
	127 Move X1, X31
	128 Call CancellationTokenSource.get_Token, X0
	129 Move X1, X0
	130 Compare X21, 0
	131 JumpIfEqual {267}
	132 Move X0, X21
	133 Call WebRequestStream.Initialize, X0, X1
	134 Compare X0, 0
	135 JumpIfEqual {268}
	136 Move W1, W31
	137 Move X2, X31
	138 Call Task.ConfigureAwait, X0, X1
	139 Move [X31], X0
	140 Move [X31+8], X1
	141 Add X0, X31, 0
	142 Move X1, X31
	143 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {230}
	148 Add X0, X31, 0
	149 Move X1, X31
	150 Call ConfiguredTaskAwaiter.GetResult, X0
	151 Compare X20, 0
	152 JumpIfEqual {260}
	153 Move X0, X20
	154 Call WebOperation.ThrowIfClosedOrDisposed, X0
	155 Move X0, [X20+64]
	156 Compare X0, 0
	157 JumpIfEqual {261}
	158 Move X8, 0xA8F000
	159 Move X1, [X19+48]
	160 Move X8, [X8+640]
	161 Move X2, [X8]
	162 Call WebCompletionSource`1<Object>.TrySetCompleted, X0, X1
	163 Move X8, 0xA8F000
	164 Move X22, [X19+48]
	165 Move X8, [X8+680]
	166 Move X0, [X8]
	167 Call 0x1C17F10
	168 Move X21, X0
	169 Move X1, X22
	170 Call WebResponseStream..ctor, X0, X1
	171 Move [X19+56], X21
	172 Move X0, [X20+56]
	173 Move [X20+104], X21
	174 Compare X0, 0
	175 JumpIfEqual {262}
	176 Move X1, X31
	177 Call CancellationTokenSource.get_Token, X0
	178 Move X1, X0
	179 Compare X21, 0
	180 JumpIfEqual {263}
	181 Move X0, X21
	182 Call WebResponseStream.InitReadAsync, X0, X1
	183 Compare X0, 0
	184 JumpIfEqual {264}
	185 Move W1, W31
	186 Move X2, X31
	187 Call Task.ConfigureAwait, X0, X1
	188 Move [X31], X0
	189 Move [X31+8], X1
	190 Add X0, X31, 0
	191 Move X1, X31
	192 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {219}
	197 Add X0, X31, 0
	198 Move X1, X31
	199 Call ConfiguredTaskAwaiter.GetResult, X0
	200 Compare X20, 0
	201 JumpIfEqual {258}
	202 Move X0, [X20+80]
	203 Compare X0, 0
	204 JumpIfEqual {259}
	205 Move X8, 0xA8F000
	206 Move X1, [X19+56]
	207 Move X8, [X8+672]
	208 Move X2, [X8]
	209 Call WebCompletionSource`1<Object>.TrySetCompleted, X0, X1
	210 Move [X19+48], X31
	211 Move [X19+56], X31
	212 Move TEMP, 1
	213 Not TEMP
	214 Move W8, TEMP
	215 Move [X19+8], W8
	216 Move X0, X19
	217 Move X1, X31
	218 Call AsyncVoidMethodBuilder.SetResult, X0
	219 Move W8, 2
	220 Move [X19], W8
	221 Move V0, [X31]
	222 Move X8, 0xA8F000
	223 Add X0, X19, 8
	224 Move [X19+5], V0
	225 Move X8, [X8+664]
	226 Move X3, [X8]
	227 Add X1, X31, 0
	228 Move X2, X19
	229 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	230 Move W8, 1
	231 Move [X19], W8
	232 Move V0, [X31]
	233 Move X8, 0xA8F000
	234 Add X0, X19, 8
	235 Move [X19+5], V0
	236 Move X8, [X8+664]
	237 Move X3, [X8]
	238 Add X1, X31, 0
	239 Move X2, X19
	240 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	241 Move [X19], W31
	242 Move V0, [X31+1]
	243 Move X8, 0xA8F000
	244 Add X0, X19, 8
	245 Move [X19+4], V0
	246 Move X8, [X8+656]
	247 Move X3, [X8]
	248 Add X1, X31, 16
	249 Move X2, X19
	250 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X30, [X31+32]
	256 Add X31, X31, 80
	257 Return 
	258 Call 0x1C17F20
	259 Call 0x1C17F20
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Call 0x1C17F20
	273 Move X21, X0
	274 Move X21, X0
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X0, X21
	277 Call 0x3EB2AD0
	278 Move X21, X0
	279 Move X0, 0xA4A000
	280 Move X0, [X0+2216]
	281 Call 0x1C17D08
	282 Move X8, [X21]
	283 Move X1, [X8]
	284 Call 0x1C18270
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {290}
	289 Move W22, 11
	290 Move X0, 0xA42000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X21]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {314}
	300 Move W22, 12
	301 Move X21, [X21]
	302 Call 0x3EB2AE0
	303 NotImplemented "Instruction CMP not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Compare X20, 0
	306 JumpIfEqual {322}
	307 Move X0, X20
	308 Move X1, X21
	309 Call WebOperation.SetError, X0, X1
	310 Compare X20, 0
	311 JumpIfEqual {323}
	312 Move X0, X20
	313 Call WebOperation.SetCanceled, X0
	314 Move W0, 8
	315 Call 0x3EB2AF0
	316 Move X8, [X21]
	317 Move [X0], X8
	318 Move X1, 0x803000
	319 Add X1, X1, 3672
	320 Move X2, X31
	321 Call 0x3EB2B00
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Move X21, X0
	325 Move X20, X1
	326 Move X21, X0
	327 Call 0x3EB2AE0
	328 Move W1, W20
	329 Move W8, 1
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X21
	332 Call 0x3EB2AD0
	333 Move X20, X0
	334 Move X0, 0xA42000
	335 Move X0, [X0+2000]
	336 Call 0x1C17D08
	337 Move X8, [X20]
	338 Move X1, [X8]
	339 Call 0x1C18270
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {354}
	344 Move X20, [X20]
	345 Call 0x3EB2AE0
	346 Move TEMP, 1
	347 Not TEMP
	348 Move W8, TEMP
	349 Move [X19+8], W8
	350 Move X0, X19
	351 Move X1, X20
	352 Move X2, X31
	353 Call AsyncVoidMethodBuilder.SetException, X0, X1
	354 Move W0, 8
	355 Call 0x3EB2AF0
	356 Move X8, [X20]
	357 Move [X0], X8
	358 Move X1, 0x803000
	359 Add X1, X1, 3672
	360 Move X2, X31
	361 Call 0x3EB2B00
	362 Move X21, X0
	363 Call 0x3EB2AE0
	364 Move X0, X21
	365 Call 0x1D2D690
	366 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B244C MOV X20, X0
	0x036B2450 B 0x36B247C
	0x036B2454 MOV X0, X21

ISIL:
	001 Add X0, X0, 8
	002 Move X2, X31
	003 Call AsyncVoidMethodBuilder.SetStateMachine, X0, X1
	004 Return 

