Type: System.Net.CaseInsensitiveAscii

Method: System.Int32 GetHashCode(System.Object myObject)

Disassembly:
	0x03683954 BL 0x367DF94
	0x03683958 MOV X19, X0
	0x0368395C ADRP X0, 0xABB000
	0x03683960 LDR X0, [X0 + 0xB8]
	0x03683964 BL 0x1C16D08
	0x03683968 MOV X1, X0
	0x0368396C MOV X0, X19
	0x03683970 BL 0x1C16DEC
	0x03683974 STP X30, X19, [X31 - 0x10]!
	0x03683978 BL 0x367DF94
	0x0368397C MOV X19, X0
	0x03683980 ADRP X0, 0xABB000
	0x03683984 LDR X0, [X0 + 0xC0]
	0x03683988 BL 0x1C16D08
	0x0368398C MOV X1, X0
	0x03683990 MOV X0, X19
	0x03683994 BL 0x1C16DEC
	0x03683998 STP X30, X19, [X31 - 0x10]!
	0x0368399C BL 0x367DF94
	0x036839A0 MOV X19, X0
	0x036839A4 ADRP X0, 0xABB000
	0x036839A8 LDR X0, [X0 + 0xC8]
	0x036839AC BL 0x1C16D08
	0x036839B0 MOV X1, X0
	0x036839B4 MOV X0, X19
	0x036839B8 BL 0x1C16DEC
	0x036839BC STP X30, X19, [X31 - 0x10]!
	0x036839C0 BL 0x367DF94
	0x036839C4 MOV X19, X0
	0x036839C8 ADRP X0, 0xABB000
	0x036839CC LDR X0, [X0 + 0xD0]
	0x036839D0 BL 0x1C16D08
	0x036839D4 MOV X1, X0
	0x036839D8 MOV X0, X19
	0x036839DC BL 0x1C16DEC
	0x036839E0 STP X30, X19, [X31 - 0x10]!
	0x036839E4 BL 0x367DF94
	0x036839E8 MOV X19, X0
	0x036839EC ADRP X0, 0xABB000
	0x036839F0 LDR X0, [X0 + 0xD8]
	0x036839F4 BL 0x1C16D08
	0x036839F8 MOV X1, X0
	0x036839FC MOV X0, X19
	0x03683A00 BL 0x1C16DEC
	0x03683A04 STP X30, X19, [X31 - 0x10]!
	0x03683A08 BL 0x367DF94
	0x03683A0C MOV X19, X0
	0x03683A10 ADRP X0, 0xABB000
	0x03683A14 LDR X0, [X0 + 0xE0]
	0x03683A18 BL 0x1C16D08
	0x03683A1C MOV X1, X0
	0x03683A20 MOV X0, X19
	0x03683A24 BL 0x1C16DEC
	0x03683A28 STP X30, X19, [X31 - 0x10]!
	0x03683A2C BL 0x367DF94
	0x03683A30 MOV X19, X0
	0x03683A34 ADRP X0, 0xABB000
	0x03683A38 LDR X0, [X0 + 0xE8]
	0x03683A3C BL 0x1C16D08
	0x03683A40 MOV X1, X0
	0x03683A44 MOV X0, X19
	0x03683A48 BL 0x1C16DEC
	0x03683A4C STP X30, X19, [X31 - 0x10]!
	0x03683A50 BL 0x367DF94
	0x03683A54 MOV X19, X0
	0x03683A58 ADRP X0, 0xABB000
	0x03683A5C LDR X0, [X0 + 0xF0]
	0x03683A60 BL 0x1C16D08
	0x03683A64 MOV X1, X0
	0x03683A68 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD5E000
	007 Move W8, [X20+2038]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xABB000
	014 Move X0, [X0+3784]
	015 Call 0x1C17CF4
	016 Move X0, 0xA73000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2038], W8
	021 Compare X19, 0
	022 JumpIfEqual {74}
	023 Move X8, 0xA73000
	024 Move X8, [X8+632]
	025 Move X9, [X19]
	026 Move X8, [X8]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Compare X19, 0
	030 JumpIfEqual {81}
	031 Move W20, [X19+16]
	032 Compare W20, 0
	033 JumpIfEqual {74}
	034 Move X21, 0xABB000
	035 Move X21, [X21+3784]
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Move X0, X19
	044 Move W1, W31
	045 Move X2, X31
	046 Move X22, [X8+8]
	047 Call String.get_Chars, X0, X1
	048 Compare X22, 0
	049 JumpIfEqual {81}
	050 Move W9, [X22+24]
	051 And W8, W0, 255
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X9, [X21]
	054 Add X8, X22, W8
	055 Move W21, [X8+32]
	056 Subtract W1, W20, 1
	057 Move X9, [X9+184]
	058 Move X0, X19
	059 Move X2, X31
	060 Move X22, [X9+8]
	061 Call String.get_Chars, X0, X1
	062 Compare X22, 0
	063 JumpIfEqual {81}
	064 Move W9, [X22+24]
	065 And W8, W0, 255
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X8, X22, W8
	068 Move W8, [X8+32]
	069 Move W9, W21
	070 ShiftRight W9, 8
	071 And W9, W9, 127
	072 NotImplemented "Instruction BFM not yet implemented."
	073 Xor W0, W9, W20
	074 Move W0, W31
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0
	081 Call 0x1C17F20
	082 Call 0x1C17F28

Method: System.Int32 Compare(System.Object firstObject, System.Object secondObject)

Disassembly:
	0x03683A6C BL 0x1C16DEC
	0x03683A70 STP X30, X19, [X31 - 0x10]!
	0x03683A74 BL 0x367E038
	0x03683A78 MOV X19, X0
	0x03683A7C ADRP X0, 0xABB000
	0x03683A80 LDR X0, [X0 + 0xF8]
	0x03683A84 BL 0x1C16D08
	0x03683A88 MOV X1, X0
	0x03683A8C MOV X0, X19
	0x03683A90 BL 0x1C16DEC
	0x03683A94 STP X30, X19, [X31 - 0x10]!
	0x03683A98 BL 0x367E038
	0x03683A9C MOV X19, X0
	0x03683AA0 ADRP X0, 0xABB000
	0x03683AA4 LDR X0, [X0 + 0x100]
	0x03683AA8 BL 0x1C16D08
	0x03683AAC MOV X1, X0
	0x03683AB0 MOV X0, X19
	0x03683AB4 BL 0x1C16DEC
	0x03683AB8 STP X30, X19, [X31 - 0x10]!
	0x03683ABC BL 0x367E038
	0x03683AC0 MOV X19, X0
	0x03683AC4 ADRP X0, 0xABB000
	0x03683AC8 LDR X0, [X0 + 0x108]
	0x03683ACC BL 0x1C16D08
	0x03683AD0 MOV X1, X0
	0x03683AD4 MOV X0, X19
	0x03683AD8 BL 0x1C16DEC
	0x03683ADC STP X30, X19, [X31 - 0x10]!
	0x03683AE0 BL 0x367E038
	0x03683AE4 MOV X19, X0
	0x03683AE8 ADRP X0, 0xABB000
	0x03683AEC LDR X0, [X0 + 0x110]
	0x03683AF0 BL 0x1C16D08
	0x03683AF4 MOV X1, X0
	0x03683AF8 MOV X0, X19
	0x03683AFC BL 0x1C16DEC
	0x03683B00 STP X30, X23, [X31 - 0x30]!
	0x03683B04 STP X22, X21, [X31 + 0x10]
	0x03683B08 STP X20, X19, [X31 + 0x20]
	0x03683B0C ADRP X20, 0xD5D000
	0x03683B10 LDRB W8, [X20 + 0x802]
	0x03683B14 MOV X19, X0
	0x03683B18 TBNZ X8, 0x0, 0x3683B84
	0x03683B1C ADRP X0, 0xA98000
	0x03683B20 LDR X0, [X0 + 0x580]
	0x03683B24 BL 0x1C16CF4
	0x03683B28 ADRP X0, 0xABB000
	0x03683B2C LDR X0, [X0 + 0x118]
	0x03683B30 BL 0x1C16CF4
	0x03683B34 ADRP X0, 0xABB000
	0x03683B38 LDR X0, [X0 + 0x120]
	0x03683B3C BL 0x1C16CF4
	0x03683B40 ADRP X0, 0xABB000
	0x03683B44 LDR X0, [X0 + 0x128]
	0x03683B48 BL 0x1C16CF4
	0x03683B4C ADRP X0, 0xA71000
	0x03683B50 LDR X0, [X0 + 0x7B8]
	0x03683B54 BL 0x1C16CF4
	0x03683B58 ADRP X0, 0xABB000
	0x03683B5C LDR X0, [X0 + 0x130]
	0x03683B60 BL 0x1C16CF4
	0x03683B64 ADRP X0, 0xABB000
	0x03683B68 LDR X0, [X0 + 0x138]
	0x03683B6C BL 0x1C16CF4
	0x03683B70 ADRP X0, 0xABB000
	0x03683B74 LDR X0, [X0 + 0x140]
	0x03683B78 BL 0x1C16CF4
	0x03683B7C MOVZ W8, 0x1
	0x03683B80 STRB W8, [X20 + 0x802]
	0x03683B84 LDR X8, [X19]
	0x03683B88 LDR X1, [X8 + 0x260]
	0x03683B8C LDR X9, [X8 + 0x258]
	0x03683B90 MOV X0, X19
	0x03683B94 BLR X9
	0x03683B98 MOV X20, X0
	0x03683B9C ADRP X8, 0xA98000
	0x03683BA0 LDR X8, [X8 + 0x580]
	0x03683BA4 LDR X0, [X8]
	0x03683BA8 LDR W8, [X0 + 0xE0]
	0x03683BAC CBNZ W8, 0x3683BB4
	0x03683BB0 BL 0x1C16DFC
	0x03683BB4 ADRP X23, 0xABB000
	0x03683BB8 ADRP X22, 0xA71000
	0x03683BBC LDR X23, [X23 + 0x118]
	0x03683BC0 LDR X22, [X22 + 0x7B8]
	0x03683BC4 MOV X0, X31
	0x03683BC8 BL 0x33E5220
	0x03683BCC TBZ X0, 0x0, 0x3683CB8
	0x03683BD0 LDR X8, [X19]
	0x03683BD4 MOV X0, X19
	0x03683BD8 LDR X9, [X8 + 0x248]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xD5E000
	011 Move X22, 0xA73000
	012 Move W8, [X21+2039]
	013 Move X22, [X22+632]
	014 Move X20, X2
	015 Move X19, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xABB000
	021 Move X0, [X0+3784]
	022 Call 0x1C17CF4
	023 Move X0, 0xA73000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2039], W8
	028 Move X8, [X22]
	029 Compare X19, 0
	030 JumpIfEqual {34}
	031 Move X9, [X19]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Compare X20, 0
	035 JumpIfEqual {39}
	036 Move X9, [X20]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Compare X19, 0
	040 JumpIfEqual {86}
	041 Compare X20, 0
	042 JumpIfEqual {88}
	043 Move W8, [X19+16]
	044 Move W9, [X20+16]
	045 Subtract W21, W8, W9
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X24, 0xABB000
	050 Move X24, [X24+3784]
	051 Move W22, W31
	052 Move X0, [X24]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X24]
	058 Move X8, [X0+184]
	059 Move X0, X19
	060 Move W1, W22
	061 Move X2, X31
	062 Move X25, [X8+8]
	063 Call String.get_Chars, X0, X1
	064 Compare X25, 0
	065 JumpIfEqual {101}
	066 Move W8, [X25+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X24]
	069 Add X9, X25, W0
	070 Move W25, [X9+32]
	071 Move X0, X20
	072 Move X8, [X8+184]
	073 Move W1, W22
	074 Move X2, X31
	075 Move X26, [X8+8]
	076 Call String.get_Chars, X0, X1
	077 Compare X26, 0
	078 JumpIfEqual {101}
	079 Move W8, [X26+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X8, X26, W0
	082 Move W8, [X8+32]
	083 Subtract W8, W25, W8
	084 Add W22, W22, 1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSINV not yet implemented."
	088 Move W21, 1
	089 Move W21, W8
	090 Move W0, W21
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X24, [X31+32]
	096 Move X23, [X31+40]
	097 Move X26, [X31+16]
	098 Move X25, [X31+24]
	099 Move X30, [X31+80]
	100 Return X0
	101 Call 0x1C17F20
	102 Call 0x1C17F28

Method: System.Int32 FastGetHashCode(System.String myString)

Disassembly:
	0x03683BDC LDR X1, [X8 + 0x250]
	0x03683BE0 BLR X9
	0x03683BE4 TBNZ X0, 0x0, 0x3683C00
	0x03683BE8 LDR X8, [X19]
	0x03683BEC MOV X0, X19
	0x03683BF0 LDR X9, [X8 + 0x228]
	0x03683BF4 LDR X1, [X8 + 0x230]
	0x03683BF8 BLR X9
	0x03683BFC CBZ X0, 0x3683C4C
	0x03683C00 ADRP X8, 0xABB000
	0x03683C04 LDR X8, [X8 + 0x138]
	0x03683C08 LDR X0, [X8]
	0x03683C0C BL 0x1C16F10
	0x03683C10 MOV X1, X31
	0x03683C14 MOV X21, X0
	0x03683C18 BL 0x33BDD8C
	0x03683C1C CBZ X21, 0x3683D0C
	0x03683C20 STR X19, [X21 + 0x18]
	0x03683C24 BL 0x3683D8C
	0x03683C28 STR X0, [X21 + 0x10]
	0x03683C2C LDR X0, [X23]
	0x03683C30 BL 0x1C16F10
	0x03683C34 ADRP X8, 0xABB000
	0x03683C38 LDR X8, [X8 + 0x130]
	0x03683C3C MOV X20, X0
	0x03683C40 MOV X1, X21
	0x03683C44 LDR X2, [X8]
	0x03683C48 B 0x3683CD4
	0x03683C4C CBZ X20, 0x3683CB8
	0x03683C50 ADRP X10, 0xABB000
	0x03683C54 LDR X8, [X20]
	0x03683C58 LDR X10, [X10 + 0x120]
	0x03683C5C LDRH W9, [X8 + 0x12E]
	0x03683C60 LDR X1, [X10]
	0x03683C64 CBZ X9, 0x3683C88
	0x03683C68 LDR X10, [X8 + 0xB0]
	0x03683C6C ADD X10, X10, 0x8
	0x03683C70 LDUR X11, [X10 - 0x8]
	0x03683C74 CMP X11, X1
	0x03683C78 B.EQ 0x3683C98
	0x03683C7C SUBS X9, X9, 0x1
	0x03683C80 ADD X10, X10, 0x10
	0x03683C84 B.NE 0x3683C70
	0x03683C88 MOVZ W2, 0x2
	0x03683C8C MOV X0, X20
	0x03683C90 BL 0x1C5C788
	0x03683C94 B 0x3683CA8
	0x03683C98 LDR W9, [X10]
	0x03683C9C ADD W9, W9, 0x2
	0x03683CA0 ADD X8, X8, W9, 0x4, SXTW
	0x03683CA4 ADD X0, X8, 0x138
	0x03683CA8 LDP X8, X1, [X0]
	0x03683CAC MOV X0, X20
	0x03683CB0 BLR X8
	0x03683CB4 CBNZ X0, 0x3683C00
	0x03683CB8 LDR X0, [X23]
	0x03683CBC ADRP X20, 0xABB000
	0x03683CC0 LDR X20, [X20 + 0x140]
	0x03683CC4 BL 0x1C16F10
	0x03683CC8 LDR X2, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD5E000
	007 Move W8, [X20+2040]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xABB000
	014 Move X0, [X0+3784]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2040], W8
	018 Compare X19, 0
	019 JumpIfEqual {70}
	020 Move W20, [X19+16]
	021 Compare W20, 0
	022 JumpIfEqual {63}
	023 Move X21, 0xABB000
	024 Move X21, [X21+3784]
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X0, X19
	033 Move W1, W31
	034 Move X2, X31
	035 Move X22, [X8+8]
	036 Call String.get_Chars, X0, X1
	037 Compare X22, 0
	038 JumpIfEqual {70}
	039 Move W9, [X22+24]
	040 And W8, W0, 255
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X9, [X21]
	043 Add X8, X22, W8
	044 Move W21, [X8+32]
	045 Subtract W1, W20, 1
	046 Move X9, [X9+184]
	047 Move X0, X19
	048 Move X2, X31
	049 Move X22, [X9+8]
	050 Call String.get_Chars, X0, X1
	051 Compare X22, 0
	052 JumpIfEqual {70}
	053 Move W9, [X22+24]
	054 And W8, W0, 255
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X8, X22, W8
	057 Move W8, [X8+32]
	058 Move W9, W21
	059 ShiftRight W9, 8
	060 And W9, W9, 127
	061 NotImplemented "Instruction BFM not yet implemented."
	062 Xor W0, W9, W20
	063 Move W0, W31
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C17F20
	071 Call 0x1C17F28

Method: System.Boolean Equals(System.Object firstObject, System.Object secondObject)

Disassembly:
	0x03683CCC MOV X20, X0
	0x03683CD0 MOV X1, X19
	0x03683CD4 MOV X3, X31
	0x03683CD8 BL 0x2D27AA8
	0x03683CDC LDR X0, [X22]
	0x03683CE0 LDR W8, [X0 + 0xE0]
	0x03683CE4 CBNZ W8, 0x3683CEC
	0x03683CE8 BL 0x1C16DFC
	0x03683CEC ADRP X8, 0xABB000
	0x03683CF0 LDR X8, [X8 + 0x128]
	0x03683CF4 MOV X0, X20
	0x03683CF8 LDP X20, X19, [X31 + 0x20]
	0x03683CFC LDP X22, X21, [X31 + 0x10]
	0x03683D00 LDR X1, [X8]
	0x03683D04 LDP X30, X23, [X31], #0x30
	0x03683D08 B 0x229A7D4
	0x03683D0C BL 0x1C16F20
	0x03683D10 CMP W1, 0x1
	0x03683D14 MOV X20, X0
	0x03683D18 B.NE 0x3683D78
	0x03683D1C MOV X0, X20
	0x03683D20 BL 0x3EB1AD0
	0x03683D24 MOV X20, X0
	0x03683D28 ADRP X0, 0xA79000
	0x03683D2C LDR X0, [X0 + 0x758]
	0x03683D30 BL 0x1C16D08
	0x03683D34 LDR X8, [X20]
	0x03683D38 LDR X1, [X8]
	0x03683D3C BL 0x1C17270
	0x03683D40 TBZ X0, 0x0, 0x3683D50
	0x03683D44 BL 0x3EB1AE0
	0x03683D48 MOV X20, X31
	0x03683D4C B 0x3683B9C
	0x03683D50 MOVZ W0, 0x8
	0x03683D54 BL 0x3EB1AF0
	0x03683D58 LDR X8, [X20]
	0x03683D5C STR X8, [X0]
	0x03683D60 ADRP X1, 0x831000
	0x03683D64 ADD X1, X1, 0xE58
	0x03683D68 MOV X2, X31
	0x03683D6C BL 0x3EB1B00
	0x03683D70 MOV X20, X0
	0x03683D74 BL 0x3EB1AE0
	0x03683D78 MOV X0, X20
	0x03683D7C BL 0x1D2C690
	0x03683D80 BL 0x1990590
	0x03683D84 MOV X1, X31
	0x03683D88 B 0x33BDD8C
	0x03683D8C STR X30, [X31 - 0x20]!
	0x03683D90 STP X20, X19, [X31 + 0x10]
	0x03683D94 ADRP X19, 0xD5D000
	0x03683D98 ADRP X20, 0xAA0000
	0x03683D9C LDRB W8, [X19 + 0x804]
	0x03683DA0 LDR X20, [X20 + 0xA40]
	0x03683DA4 TBNZ X8, 0x0, 0x3683DBC
	0x03683DA8 ADRP X0, 0xAA0000
	0x03683DAC LDR X0, [X0 + 0xA40]
	0x03683DB0 BL 0x1C16CF4
	0x03683DB4 MOVZ W8, 0x1
	0x03683DB8 STRB W8, [X19 + 0x804]
	0x03683DBC LDR X0, [X20]
	0x03683DC0 LDR W8, [X0 + 0xE0]
	0x03683DC4 CBNZ W8, 0x3683DCC
	0x03683DC8 BL 0x1C16DFC
	0x03683DCC LDP X20, X19, [X31 + 0x10]
	0x03683DD0 MOV X0, X31
	0x03683DD4 LDR X30, [X31], #0x20
	0x03683DD8 B 0x326CC64
	0x03683DDC STP X30, X23, [X31 - 0x30]!
	0x03683DE0 STP X22, X21, [X31 + 0x10]
	0x03683DE4 STP X20, X19, [X31 + 0x20]
	0x03683DE8 ADRP X20, 0xD5D000
	0x03683DEC LDRB W8, [X20 + 0x803]
	0x03683DF0 MOV X19, X0
	0x03683DF4 TBNZ X8, 0x0, 0x3683E60
	0x03683DF8 ADRP X0, 0xA98000
	0x03683DFC LDR X0, [X0 + 0x580]
	0x03683E00 BL 0x1C16CF4
	0x03683E04 ADRP X0, 0xABB000
	0x03683E08 LDR X0, [X0 + 0x148]
	0x03683E0C BL 0x1C16CF4
	0x03683E10 ADRP X0, 0xABB000
	0x03683E14 LDR X0, [X0 + 0x120]
	0x03683E18 BL 0x1C16CF4
	0x03683E1C ADRP X0, 0xABB000
	0x03683E20 LDR X0, [X0 + 0x150]
	0x03683E24 BL 0x1C16CF4
	0x03683E28 ADRP X0, 0xA71000
	0x03683E2C LDR X0, [X0 + 0x7B8]
	0x03683E30 BL 0x1C16CF4
	0x03683E34 ADRP X0, 0xABB000
	0x03683E38 LDR X0, [X0 + 0x158]
	0x03683E3C BL 0x1C16CF4
	0x03683E40 ADRP X0, 0xABB000
	0x03683E44 LDR X0, [X0 + 0x160]
	0x03683E48 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xD5E000
	010 Move X22, 0xA73000
	011 Move W8, [X21+2041]
	012 Move X22, [X22+632]
	013 Move X20, X2
	014 Move X19, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xABB000
	020 Move X0, [X0+3784]
	021 Call 0x1C17CF4
	022 Move X0, 0xA73000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2041], W8
	027 Move X8, [X22]
	028 Compare X19, 0
	029 JumpIfEqual {33}
	030 Move X9, [X19]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Compare X20, 0
	034 JumpIfEqual {93}
	035 Move X9, [X20]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Or X8, X19, X20
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Compare X19, 0
	042 JumpIfEqual {96}
	043 Compare X20, 0
	044 JumpIfEqual {96}
	045 Move W21, [X19+16]
	046 Move W8, [X20+16]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X1, X19
	049 Call CaseInsensitiveAscii.FastGetHashCode, X0, X1
	050 Move X1, X20
	051 Move W22, W0
	052 Call CaseInsensitiveAscii.FastGetHashCode, X0, X1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X22, 0xABB000
	055 Move X22, [X22+3784]
	056 Move W23, W21
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X22]
	059 Subtract W21, W23, 1
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Move X8, [X0+184]
	066 Move X0, X19
	067 Move W1, W21
	068 Move X2, X31
	069 Move X24, [X8+8]
	070 Call String.get_Chars, X0, X1
	071 Compare X24, 0
	072 JumpIfEqual {105}
	073 Move W8, [X24+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, [X22]
	076 Add X9, X24, W0
	077 Move W24, [X9+32]
	078 Move X0, X20
	079 Move X8, [X8+184]
	080 Move W1, W21
	081 Move X2, X31
	082 Move X25, [X8+8]
	083 Call String.get_Chars, X0, X1
	084 Compare X25, 0
	085 JumpIfEqual {105}
	086 Move W8, [X25+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X25, W0
	089 Move W8, [X8+32]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSET not yet implemented."
	095 Move W0, W31
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X30, [X31+64]
	103 Move X25, [X31+72]
	104 Return X0
	105 Call 0x1C17F20
	106 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03683E4C ADRP X0, 0xABB000
	0x03683E50 LDR X0, [X0 + 0x168]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03683E54 BL 0x1C16CF4
	0x03683E58 MOVZ W8, 0x1
	0x03683E5C STRB W8, [X20 + 0x803]
	0x03683E60 LDR X8, [X19]
	0x03683E64 LDR X1, [X8 + 0x260]
	0x03683E68 LDR X9, [X8 + 0x258]
	0x03683E6C MOV X0, X19
	0x03683E70 BLR X9
	0x03683E74 MOV X20, X0
	0x03683E78 ADRP X8, 0xA98000
	0x03683E7C LDR X8, [X8 + 0x580]
	0x03683E80 LDR X0, [X8]
	0x03683E84 LDR W8, [X0 + 0xE0]
	0x03683E88 CBNZ W8, 0x3683E90
	0x03683E8C BL 0x1C16DFC
	0x03683E90 ADRP X23, 0xABB000
	0x03683E94 ADRP X22, 0xA71000
	0x03683E98 LDR X23, [X23 + 0x148]
	0x03683E9C LDR X22, [X22 + 0x7B8]
	0x03683EA0 MOV X0, X31
	0x03683EA4 BL 0x33E5220
	0x03683EA8 TBZ X0, 0x0, 0x3683F94
	0x03683EAC LDR X8, [X19]
	0x03683EB0 MOV X0, X19
	0x03683EB4 LDR X9, [X8 + 0x248]
	0x03683EB8 LDR X1, [X8 + 0x250]
	0x03683EBC BLR X9
	0x03683EC0 TBNZ X0, 0x0, 0x3683EDC
	0x03683EC4 LDR X8, [X19]
	0x03683EC8 MOV X0, X19
	0x03683ECC LDR X9, [X8 + 0x228]
	0x03683ED0 LDR X1, [X8 + 0x230]
	0x03683ED4 BLR X9
	0x03683ED8 CBZ X0, 0x3683F28
	0x03683EDC ADRP X8, 0xABB000
	0x03683EE0 LDR X8, [X8 + 0x160]
	0x03683EE4 LDR X0, [X8]
	0x03683EE8 BL 0x1C16F10
	0x03683EEC MOV X1, X31
	0x03683EF0 MOV X21, X0
	0x03683EF4 BL 0x33BDD8C
	0x03683EF8 CBZ X21, 0x3683FE8
	0x03683EFC STR X19, [X21 + 0x18]
	0x03683F00 BL 0x3683D8C
	0x03683F04 STR X0, [X21 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD5E000
	007 Move X20, 0xABB000
	008 Move X22, 0xA71000
	009 Move X21, 0xABC000
	010 Move W8, [X19+2042]
	011 Move X20, [X20+3784]
	012 Move X22, [X22+1560]
	013 Move X21, [X21+32]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA71000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xABB000
	022 Move X0, [X0+3784]
	023 Call 0x1C17CF4
	024 Move X0, 0xABC000
	025 Move X0, [X0+32]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+2042], W8
	029 Move X0, [X20]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X19, X0
	033 Call Object..ctor, X0
	034 Move X8, [X20]
	035 Move W1, 256
	036 Move X8, [X8+184]
	037 Move [X8], X19
	038 Move X0, [X22]
	039 Call 0x1C17D6C
	040 Move X1, [X21]
	041 Move X2, X31
	042 Move X19, X0
	043 Call RuntimeHelpers.InitializeArray, X0, X1
	044 Move X8, [X20]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X8, [X8+184]
	048 Move [X8+8], X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+48]
	052 Return 

