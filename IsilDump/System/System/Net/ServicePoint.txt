Type: System.Net.ServicePoint

Method: System.Void .ctor(System.Net.ServicePointManager/SPKey key, System.Uri uri, System.Int32 connectionLimit, System.Int32 maxIdleTime)

Disassembly:
	0x036A5FE8 MOVZ W8, 0x1
	0x036A5FEC STRB W8, [X20 + 0x8FE]
	0x036A5FF0 LDR X0, [X19]
	0x036A5FF4 LDR W8, [X0 + 0xE0]
	0x036A5FF8 CBNZ W8, 0x36A6004
	0x036A5FFC BL 0x1C16DFC
	0x036A6000 LDR X0, [X19]
	0x036A6004 LDR X8, [X0 + 0xB8]
	0x036A6008 LDP X20, X19, [X31 + 0x10]
	0x036A600C LDRB W0, [X8 + 0x20]
	0x036A6010 LDR X30, [X31], #0x20
	0x036A6014 RET
	0x036A6018 STR X30, [X31 - 0x20]!
	0x036A601C STP X20, X19, [X31 + 0x10]
	0x036A6020 ADRP X20, 0xD3A000
	0x036A6024 ADRP X19, 0xA7B000
	0x036A6028 LDRB W8, [X20 + 0x8FF]
	0x036A602C LDR X19, [X19 + 0x230]
	0x036A6030 TBNZ X8, 0x0, 0x36A6048
	0x036A6034 ADRP X0, 0xA7B000
	0x036A6038 LDR X0, [X0 + 0x230]
	0x036A603C BL 0x1C16CF4
	0x036A6040 MOVZ W8, 0x1
	0x036A6044 STRB W8, [X20 + 0x8FF]
	0x036A6048 LDR X0, [X19]
	0x036A604C LDR W8, [X0 + 0xE0]
	0x036A6050 CBNZ W8, 0x36A605C
	0x036A6054 BL 0x1C16DFC
	0x036A6058 LDR X0, [X19]
	0x036A605C LDR X8, [X0 + 0xB8]
	0x036A6060 LDP X20, X19, [X31 + 0x10]
	0x036A6064 LDR W0, [X8 + 0x1C]
	0x036A6068 LDR X30, [X31], #0x20
	0x036A606C RET
	0x036A6070 STR X30, [X31 - 0x20]!
	0x036A6074 STP X20, X19, [X31 + 0x10]
	0x036A6078 ADRP X20, 0xD3A000
	0x036A607C ADRP X19, 0xA7B000
	0x036A6080 LDRB W8, [X20 + 0x900]
	0x036A6084 LDR X19, [X19 + 0x230]
	0x036A6088 TBNZ X8, 0x0, 0x36A60A0
	0x036A608C ADRP X0, 0xA7B000
	0x036A6090 LDR X0, [X0 + 0x230]
	0x036A6094 BL 0x1C16CF4
	0x036A6098 MOVZ W8, 0x1
	0x036A609C STRB W8, [X20 + 0x900]
	0x036A60A0 LDR X0, [X19]
	0x036A60A4 LDR W8, [X0 + 0xE0]
	0x036A60A8 CBNZ W8, 0x36A60B4
	0x036A60AC BL 0x1C16DFC
	0x036A60B0 LDR X0, [X19]
	0x036A60B4 LDR X8, [X0 + 0xB8]
	0x036A60B8 LDP X20, X19, [X31 + 0x10]
	0x036A60BC LDR W0, [X8 + 0x24]
	0x036A60C0 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xD3C000
	011 Move X24, 0xA54000
	012 Move X25, 0xA99000
	013 Move W8, [X26+2295]
	014 Move X24, [X24+3264]
	015 Call 0x3EB26BC
	016 Return 
	017 Move W19, W4
	018 Move W21, W3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0xA54000
	027 Move X0, [X0+3264]
	028 Call 0x1C17CF4
	029 Move X0, 0xA99000
	030 Move X0, [X0+3120]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+2295], W8
	034 Move W8, 1
	035 Move [X20+49], W8
	036 Move X0, [X24]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X24, X0
	040 Call Object..ctor, X0
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move X0, X20
	043 Move X1, X31
	044 Move [X20+56], X24
	045 Move [X20+96], D0
	046 Call Object..ctor, X0
	047 Move [X20+104], X23
	048 Move [X20+16], X22
	049 Move [X20+120], W21
	050 Move [X20+124], W19
	051 Move X0, [X25]
	052 Call 0x1C17F10
	053 Move X1, X20
	054 Move W2, W21
	055 Move W3, W19
	056 Move X22, X0
	057 Call ServicePointScheduler..ctor, X0, X1, X2, X3
	058 Move [X20+112], X22
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X24, [X31+32]
	064 Move X23, [X31+40]
	065 Move X26, [X31+16]
	066 Move X25, [X31+24]
	067 Move X30, [X31+80]
	068 Return 

Method: System.Net.ServicePointManager/SPKey get_Key()

Disassembly:
	0x036A629C BL 0x1C16DFC
	0x036A62A0 LDR X0, [X20]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Net.ServicePointScheduler get_Scheduler()

Disassembly:
	0x036A62A4 LDR X8, [X0 + 0xB8]
	0x036A62A8 LDR X0, [X8]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_Scheduler(System.Net.ServicePointScheduler value)

Disassembly:
	0x036A62AC CBZ X0, 0x36A64B0
	0x036A62B0 ADRP X8, 0xA98000

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.Uri get_Address()

Disassembly:
	0x036A62B4 LDR X8, [X8 + 0xCB8]
	0x036A62B8 LDR X1, [X8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Int32 get_ConnectionLimit()

Disassembly:
	0x036A62BC BL 0x2987308
	0x036A62C0 MOV X20, X0

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Version get_ProtocolVersion()

Disassembly:
	0x036A62C4 CBZ X0, 0x36A64B4
	0x036A62C8 ADRP X10, 0xA98000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Expect100Continue(System.Boolean value)

Disassembly:
	0x036A62CC LDR X8, [X20]
	0x036A62D0 LDR X10, [X10 + 0xCC0]
	0x036A62D4 LDRH W9, [X8 + 0x12E]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+49], W8
	003 Return 

Method: System.Boolean get_UseNagleAlgorithm()

Disassembly:
	0x036A62D8 LDR X1, [X10]
	0x036A62DC CBZ X9, 0x36A6300

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_UseNagleAlgorithm(System.Boolean value)

Disassembly:
	0x036A62E0 LDR X10, [X8 + 0xB0]
	0x036A62E4 ADD X10, X10, 0x8
	0x036A62E8 LDUR X11, [X10 - 0x8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+64], W8
	003 Return 

Method: System.Boolean get_SendContinue()

Disassembly:
	0x036A0568 MOVZ W2, 0x1
	0x036A056C MOV X0, X20
	0x036A0570 MOV X1, X21
	0x036A0574 BL 0x36A00C8
	0x036A0578 MOV X21, X0
	0x036A057C MOV X24, X1
	0x036A0580 TBZ X25, 0x0, 0x36A05B8
	0x036A0584 LDRB W8, [X20 + 0x179]
	0x036A0588 CBNZ W8, 0x36A059C
	0x036A058C ADD X0, X20, 0x150
	0x036A0590 BL 0x36A076C
	0x036A0594 ADD X0, X20, 0x160
	0x036A0598 BL 0x36A076C
	0x036A059C MOVZ W1, 0x1
	0x036A05A0 B 0x36A05BC
	0x036A05A4 CMP W22, 0x12C
	0x036A05A8 B.GE 0x36A063C
	0x036A05AC MOV W23, W31
	0x036A05B0 MOVZ W8, 0x1
	0x036A05B4 B 0x36A0660
	0x036A05B8 MOV W1, W31
	0x036A05BC CMP W22, 0x130
	0x036A05C0 CSET W8, NE
	0x036A05C4 ORR W23, W8, W23, 0x0
	0x036A05C8 CBZ X24, 0x36A067C
	0x036A05CC LDRB W8, [X20 + 0x178]
	0x036A05D0 CBZ W8, 0x36A0614
	0x036A05D4 LDR X0, [X20 + 0xE0]
	0x036A05D8 CBZ X0, 0x36A05E8
	0x036A05DC MOV X1, X31
	0x036A05E0 BL 0x36AE328
	0x036A05E4 STR X31, [X20 + 0xE0]
	0x036A05E8 ADRP X8, 0xA9E000
	0x036A05EC LDR X8, [X8 + 0x998]
	0x036A05F0 MOV X0, X19
	0x036A05F4 MOV W1, W31
	0x036A05F8 MOV W2, W23
	0x036A05FC LDR X5, [X8]
	0x036A0600 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD41000
	005 Move W8, [X20+2296]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA9B000
	012 Move X0, [X0+360]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2296], W8
	016 Move W8, [X19+49]
	017 Compare W8, 0
	018 JumpIfEqual {28}
	019 Move X0, [X19+32]
	020 Move X1, X31
	021 Move X2, X31
	022 Call Version.op_Equality, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {33}
	027 Move W0, 1
	028 Move W0, W31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Move X20, 0xA9B000
	034 Move X20, [X20+360]
	035 Move X19, [X19+32]
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X2, X31
	047 Move X1, [X8+16]
	048 Move X30, [X31+32]
	049 Call Version.op_Equality, X0, X1
	050 Return X0

Method: System.Void set_SendContinue(System.Boolean value)

Disassembly:
	0x036A62EC CMP X11, X1
	0x036A62F0 B.EQ 0x36A6310
	0x036A62F4 SUBS X9, X9, 0x1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+49], W8
	003 Return 

Method: System.Void SetTcpKeepAlive(System.Boolean enabled, System.Int32 keepAliveTime, System.Int32 keepAliveInterval)

Disassembly:
	0x036A62F8 ADD X10, X10, 0x10
	0x036A62FC B.NE 0x36A62E8
	0x036A6300 MOV X0, X20
	0x036A6304 MOV W2, W31
	0x036A6308 BL 0x1C5C788
	0x036A630C B 0x36A631C
	0x036A6310 LDRSW X9, [X10]
	0x036A6314 ADD X8, X8, X9, 0x4, LSL
	0x036A6318 ADD X0, X8, 0x138
	0x036A631C LDP X8, X1, [X0]
	0x036A6320 MOV X0, X20
	0x036A6324 BLR X8
	0x036A6328 ADRP X23, 0xA4D000
	0x036A632C LDR X23, [X23 + 0xE00]
	0x036A6330 MOV X20, X0
	0x036A6334 CBZ X0, 0x36A64B8
	0x036A6338 ADRP X22, 0xA4D000
	0x036A633C ADRP X24, 0xA98000
	0x036A6340 LDR X22, [X22 + 0xE18]
	0x036A6344 LDR X24, [X24 + 0xCC8]
	0x036A6348 LDR X8, [X20]
	0x036A634C LDR X1, [X22]
	0x036A6350 LDRH W9, [X8 + 0x12E]
	0x036A6354 CBZ X9, 0x36A6378
	0x036A6358 LDR X10, [X8 + 0xB0]
	0x036A635C ADD X10, X10, 0x8
	0x036A6360 LDUR X11, [X10 - 0x8]
	0x036A6364 CMP X11, X1
	0x036A6368 B.EQ 0x36A6388
	0x036A636C SUBS X9, X9, 0x1
	0x036A6370 ADD X10, X10, 0x10
	0x036A6374 B.NE 0x36A6360
	0x036A6378 MOV X0, X20
	0x036A637C MOV W2, W31
	0x036A6380 BL 0x1C5C788
	0x036A6384 B 0x36A6394
	0x036A6388 LDRSW X9, [X10]
	0x036A638C ADD X8, X8, X9, 0x4, LSL
	0x036A6390 ADD X0, X8, 0x138
	0x036A6394 LDP X8, X1, [X0]
	0x036A6398 MOV X0, X20
	0x036A639C BLR X8
	0x036A63A0 TBZ X0, 0x0, 0x36A640C
	0x036A63A4 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {10}
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 And W8, W1, 1
	013 Move [X0+80], W8
	014 Move [X0+84], W2
	015 Move [X0+88], W3
	016 Move X30, [X31+32]
	017 Return 
	018 Move X0, 0xA56000
	019 Move X0, [X0+1888]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xA99000
	024 Move X0, [X0+3176]
	025 Move X0, 0xA56000
	026 Move X0, [X0+1888]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0xA99000
	031 Move X0, [X0+3184]
	032 Call 0x1C17D08
	033 Move X20, X0
	034 Move X0, 0xA99000
	035 Move X0, [X0+3192]
	036 Call 0x1C17D08
	037 Move X2, X0
	038 Move X0, X19
	039 Move X1, X20
	040 Move X3, X31
	041 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	042 Move X0, 0xA99000
	043 Move X0, [X0+3200]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC

Method: System.Void KeepAliveSetup(System.Net.Sockets.Socket socket)

Disassembly:
	0x036A63A8 LDR X1, [X24]
	0x036A63AC LDRH W9, [X8 + 0x12E]
	0x036A63B0 CBZ X9, 0x36A63D4
	0x036A63B4 LDR X10, [X8 + 0xB0]
	0x036A63B8 ADD X10, X10, 0x8
	0x036A63BC LDUR X11, [X10 - 0x8]
	0x036A63C0 CMP X11, X1
	0x036A63C4 B.EQ 0x36A63E4
	0x036A63C8 SUBS X9, X9, 0x1
	0x036A63CC ADD X10, X10, 0x10
	0x036A63D0 B.NE 0x36A63BC
	0x036A63D4 MOV X0, X20
	0x036A63D8 MOV W2, W31
	0x036A63DC BL 0x1C5C788
	0x036A63E0 B 0x36A63F0
	0x036A63E4 LDRSW X9, [X10]
	0x036A63E8 ADD X8, X8, X9, 0x4, LSL
	0x036A63EC ADD X0, X8, 0x138
	0x036A63F0 LDP X8, X1, [X0]
	0x036A63F4 MOV X0, X20
	0x036A63F8 BLR X8
	0x036A63FC CBZ X0, 0x36A64A4
	0x036A6400 MOV X1, X21
	0x036A6404 BL 0x36A5AA0
	0x036A6408 B 0x36A6348
	0x036A640C MOV X22, X31
	0x036A6410 CBZ X20, 0x36A646C
	0x036A6414 LDR X8, [X20]
	0x036A6418 LDR X1, [X23]
	0x036A641C LDRH W9, [X8 + 0x12E]
	0x036A6420 CBZ X9, 0x36A6444
	0x036A6424 LDR X10, [X8 + 0xB0]
	0x036A6428 ADD X10, X10, 0x8
	0x036A642C LDUR X11, [X10 - 0x8]
	0x036A6430 CMP X11, X1
	0x036A6434 B.EQ 0x36A6454
	0x036A6438 SUBS X9, X9, 0x1
	0x036A643C ADD X10, X10, 0x10
	0x036A6440 B.NE 0x36A642C
	0x036A6444 MOV X0, X20
	0x036A6448 MOV W2, W31
	0x036A644C BL 0x1C5C788
	0x036A6450 B 0x36A6460
	0x036A6454 LDRSW X9, [X10]
	0x036A6458 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD3B000
	006 Move W8, [X21+2297]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA4E000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2297], W8
	018 Move W8, [X20+80]
	019 Compare W8, 0
	020 JumpIfEqual {52}
	021 Move X8, 0xA4E000
	022 Move X8, [X8+1560]
	023 Move W1, 12
	024 Move X0, [X8]
	025 Call 0x1C17D6C
	026 Move W1, [X20+80]
	027 Move W2, W31
	028 Move X21, X0
	029 Call ServicePoint.PutBytes, X0, X1, X2
	030 Move W1, [X20+84]
	031 Move W2, 4
	032 Move X0, X21
	033 Call ServicePoint.PutBytes, X0, X1, X2
	034 Move W1, [X20+88]
	035 Move W2, 8
	036 Move X0, X21
	037 Call ServicePoint.PutBytes, X0, X1, X2
	038 Compare X19, 0
	039 JumpIfEqual {57}
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W1, 4
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 Move X2, X21
	046 Move X3, X31
	047 Move X4, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call Socket.IOControl, X0, X1, X2, X3
	051 Return 
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Call 0x1C17F20

Method: System.Void PutBytes(System.Byte[] bytes, System.UInt32 v, System.Int32 offset)

Disassembly:
	0x036A645C ADD X0, X8, 0x138
	0x036A6460 LDP X8, X1, [X0]
	0x036A6464 MOV X0, X20
	0x036A6468 BLR X8
	0x036A646C CBNZ X22, 0x36A64BC
	0x036A6470 MOV X20, X31
	0x036A6474 LDRB W8, [X31 + 0x1C]
	0x036A6478 CBZ W8, 0x36A6488
	0x036A647C MOV X0, X19
	0x036A6480 MOV X1, X31
	0x036A6484 BL 0x33E14E4
	0x036A6488 CBNZ X20, 0x36A64A8
	0x036A648C LDP X20, X19, [X31 + 0x40]
	0x036A6490 LDP X22, X21, [X31 + 0x30]
	0x036A6494 LDP X24, X23, [X31 + 0x20]
	0x036A6498 LDR X30, [X31 + 0x10]
	0x036A649C ADD X31, X31, 0x50
	0x036A64A0 RET
	0x036A64A4 BL 0x1C16F20
	0x036A64A8 MOV X0, X20
	0x036A64AC BL 0x1C16F18
	0x036A64B0 BL 0x1C16F20
	0x036A64B4 BL 0x1C16F20
	0x036A64B8 BL 0x1C16F20
	0x036A64BC MOV X0, X22
	0x036A64C0 BL 0x1C16F18
	0x036A64C4 B 0x36A64F0
	0x036A64C8 B 0x36A64D8
	0x036A64CC B 0x36A64D8
	0x036A64D0 B 0x36A64D8
	0x036A64D4 B 0x36A64D8
	0x036A64D8 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {35}
	004 Move W8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add X8, X0, W2
	007 Move [X8+32], W1
	008 Move W9, [X0+24]
	009 Add W8, W2, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W9, W1
	012 ShiftRight W9, 8
	013 And W9, W9, 0x7FFFFFFF
	014 Add X8, X0, W8
	015 Move [X8+32], W9
	016 Move W9, [X0+24]
	017 Add W8, W2, 2
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W9, W1
	020 ShiftRight W9, 16
	021 And W9, W9, 0x7FFFFFFF
	022 Add X8, X0, W8
	023 Move [X8+32], W9
	024 Move W9, [X0+24]
	025 Add W8, W2, 3
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W9, W1
	028 ShiftRight W9, 24
	029 And W9, W9, 0x7FFFFFFF
	030 Add X8, X0, W8
	031 Move [X8+32], W9
	032 Move X30, [X31+16]
	033 Return 
	034 Call 0x1C17F28
	035 Call 0x1C17F20

Method: System.Boolean get_UsesProxy()

Disassembly:
	0x036A64DC STR X1, [X31 + 0x8]
	0x036A64E0 B 0x36A6578

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_UsesProxy(System.Boolean value)

Disassembly:
	0x036A64E4 B 0x36A64F0
	0x036A64E8 B 0x36A64F0
	0x036A64EC B 0x36A64F0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+48], W8
	003 Return 

Method: System.Boolean get_UseConnect()

Disassembly:
	0x036A64F0 MOV X21, X0
	0x036A64F4 CMP W1, 0x1

ISIL:
	001 Move W0, [X0+50]
	002 Return X0

Method: System.Void set_UseConnect(System.Boolean value)

Disassembly:
	0x036A64F8 B.NE 0x36A6510
	0x036A64FC MOV X0, X21
	0x036A6500 BL 0x3EB1AD0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+50], W8
	003 Return 

Method: System.Boolean get_HasTimedOut()

Disassembly:
	0x036A6504 LDR X22, [X0]
	0x036A6508 BL 0x3EB1AE0
	0x036A650C B 0x36A6410
	0x036A6510 STR X1, [X31 + 0x8]
	0x036A6514 MOV X22, X31
	0x036A6518 CBZ X20, 0x36A6574
	0x036A651C LDR X8, [X20]
	0x036A6520 LDR X1, [X23]
	0x036A6524 LDRH W9, [X8 + 0x12E]
	0x036A6528 CBZ X9, 0x36A654C
	0x036A652C LDR X10, [X8 + 0xB0]
	0x036A6530 ADD X10, X10, 0x8
	0x036A6534 LDUR X11, [X10 - 0x8]
	0x036A6538 CMP X11, X1
	0x036A653C B.EQ 0x36A655C
	0x036A6540 SUBS X9, X9, 0x1
	0x036A6544 ADD X10, X10, 0x10
	0x036A6548 B.NE 0x36A6534
	0x036A654C MOV X0, X20
	0x036A6550 MOV W2, W31
	0x036A6554 BL 0x1C5C788
	0x036A6558 B 0x36A6568
	0x036A655C LDRSW X9, [X10]
	0x036A6560 ADD X8, X8, X9, 0x4, LSL
	0x036A6564 ADD X0, X8, 0x138
	0x036A6568 LDP X8, X1, [X0]
	0x036A656C MOV X0, X20
	0x036A6570 BLR X8
	0x036A6574 CBNZ X22, 0x36A65A0
	0x036A6578 LDR X8, [X31 + 0x8]
	0x036A657C CMP W8, 0x1
	0x036A6580 B.NE 0x36A6598
	0x036A6584 MOV X0, X21
	0x036A6588 BL 0x3EB1AD0
	0x036A658C LDR X20, [X0]
	0x036A6590 BL 0x3EB1AE0
	0x036A6594 B 0x36A6474
	0x036A6598 MOV X20, X31
	0x036A659C B 0x36A65BC
	0x036A65A0 MOV X0, X22
	0x036A65A4 BL 0x1C16F18
	0x036A65A8 MOV X21, X0
	0x036A65AC STR X1, [X31 + 0x8]
	0x036A65B0 CBNZ X20, 0x36A651C
	0x036A65B4 B 0x36A6574
	0x036A65B8 MOV X21, X0
	0x036A65BC LDRB W8, [X31 + 0x1C]
	0x036A65C0 CBZ W8, 0x36A65D0
	0x036A65C4 MOV X0, X19
	0x036A65C8 MOV X1, X31
	0x036A65CC BL 0x33E14E4
	0x036A65D0 CBNZ X20, 0x36A65DC
	0x036A65D4 MOV X0, X21
	0x036A65D8 BL 0x1D2C690
	0x036A65DC MOV X0, X20
	0x036A65E0 BL 0x1C16F18
	0x036A65E4 BL 0x1990590
	0x036A65E8 SUB X31, X31, 0x30
	0x036A65EC STP X30, X21, [X31 + 0x10]
	0x036A65F0 STP X20, X19, [X31 + 0x20]
	0x036A65F4 ADRP X21, 0xD3A000
	0x036A65F8 ADRP X20, 0xA7B000
	0x036A65FC LDRB W8, [X21 + 0x905]
	0x036A6600 LDR X20, [X20 + 0x230]
	0x036A6604 MOV X19, X0
	0x036A6608 TBNZ X8, 0x0, 0x36A662C
	0x036A660C ADRP X0, 0xA98000
	0x036A6610 LDR X0, [X0 + 0xCD0]
	0x036A6614 BL 0x1C16CF4
	0x036A6618 ADRP X0, 0xA7B000
	0x036A661C LDR X0, [X0 + 0x230]
	0x036A6620 BL 0x1C16CF4
	0x036A6624 MOVZ W8, 0x1
	0x036A6628 STRB W8, [X21 + 0x905]
	0x036A662C LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD3B000
	006 Move X20, 0xA7C000
	007 Move W8, [X21+2298]
	008 Move X20, [X20+560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xA4F000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move X0, 0xA7C000
	018 Move X0, [X0+560]
	019 Call 0x1C17CF4
	020 Move X0, 0xA50000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2298], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X21, 0xD3B000
	031 Move W8, [X21+2336]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0xA7C000
	035 Move X0, [X0+560]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2336], W8
	039 Move X0, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move W20, [X8+28]
	047 Add W31, W20, 1
	048 Move X8, 0xA50000
	049 Move X8, [X8+1392]
	050 Move X21, 0xA4F000
	051 Move X19, [X19+24]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Move X21, [X21+2544]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 NotImplemented "Instruction SCVTF not yet implemented."
	059 Move X0, X31
	060 Call TimeSpan.FromMilliseconds, V0
	061 Move X8, [X21]
	062 Move X20, X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X1, X20
	070 Move X2, X31
	071 Call DateTime.op_Addition, X0, X1
	072 Move X19, X0
	073 Move X0, X31
	074 Call DateTime.get_UtcNow
	075 Move X1, X0
	076 Move X0, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X2, X31
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Call DateTime.op_LessThan, X0, X1
	083 Return X0
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move W0, W31
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Return X0

Method: System.Net.IPHostEntry get_HostEntry()

Disassembly:
	0x036A6630 STR X31, [X31 + 0x8]
	0x036A6634 LDR W8, [X0 + 0xE0]
	0x036A6638 CBNZ W8, 0x36A6644
	0x036A663C BL 0x1C16DFC
	0x036A6640 LDR X0, [X20]
	0x036A6644 CBZ X19, 0x36A667C
	0x036A6648 LDR X8, [X0 + 0xB8]
	0x036A664C LDR X0, [X8]
	0x036A6650 CBZ X0, 0x36A667C
	0x036A6654 ADRP X8, 0xA98000
	0x036A6658 LDR X8, [X8 + 0xCD0]
	0x036A665C LDR X1, [X19 + 0x68]
	0x036A6660 ADD X2, X31, 0x8
	0x036A6664 LDR X3, [X8]
	0x036A6668 BL 0x2985528
	0x036A666C LDP X20, X19, [X31 + 0x20]
	0x036A6670 LDP X30, X21, [X31 + 0x10]
	0x036A6674 ADD X31, X31, 0x30
	0x036A6678 RET
	0x036A667C BL 0x1C16F20
	0x036A6680 STP X30, X21, [X31 - 0x20]!
	0x036A6684 STP X20, X19, [X31 + 0x10]
	0x036A6688 ADRP X21, 0xD3A000
	0x036A668C ADRP X20, 0xA4F000
	0x036A6690 LDRB W8, [X21 + 0x906]
	0x036A6694 LDR X20, [X20 + 0xA28]
	0x036A6698 MOV X19, X0
	0x036A669C TBNZ X8, 0x0, 0x36A66B4
	0x036A66A0 ADRP X0, 0xA4F000
	0x036A66A4 LDR X0, [X0 + 0xA28]
	0x036A66A8 BL 0x1C16CF4
	0x036A66AC MOVZ W8, 0x1
	0x036A66B0 STRB W8, [X21 + 0x906]
	0x036A66B4 LDR X0, [X20]
	0x036A66B8 LDR X19, [X19 + 0x18]
	0x036A66BC LDR W8, [X0 + 0xE0]
	0x036A66C0 CBNZ W8, 0x36A66C8
	0x036A66C4 BL 0x1C16DFC
	0x036A66C8 MOV X0, X19
	0x036A66CC LDP X20, X19, [X31 + 0x10]
	0x036A66D0 MOV X1, X31
	0x036A66D4 MOV X2, X31
	0x036A66D8 LDP X30, X21, [X31], #0x20
	0x036A66DC B 0x361A090
	0x036A66E0 STR X30, [X31 - 0x30]!
	0x036A66E4 STP X22, X21, [X31 + 0x10]
	0x036A66E8 STP X20, X19, [X31 + 0x20]
	0x036A66EC ADRP X20, 0xD3A000
	0x036A66F0 LDRB W8, [X20 + 0x907]
	0x036A66F4 MOV X19, X0
	0x036A66F8 TBNZ X8, 0x0, 0x36A6710
	0x036A66FC ADRP X0, 0xA4F000
	0x036A6700 LDR X0, [X0 + 0xA28]
	0x036A6704 BL 0x1C16CF4
	0x036A6708 MOVZ W8, 0x1
	0x036A670C STRB W8, [X20 + 0x907]
	0x036A6710 LDR X0, [X19 + 0x10]
	0x036A6714 CBZ X0, 0x36A67B0
	0x036A6718 LDR X8, [X0]
	0x036A671C ADRP X20, 0xA4F000
	0x036A6720 LDRB W22, [X19 + 0x20]
	0x036A6724 LDP X9, X1, [X8 + 0x158]
	0x036A6728 LDR X20, [X20 + 0xA28]
	0x036A672C BLR X9
	0x036A6730 LDR X8, [X20]
	0x036A6734 LDR X21, [X19 + 0x18]
	0x036A6738 MOV W20, W0
	0x036A673C LDR W9, [X8 + 0xE0]
	0x036A6740 CBNZ W9, 0x36A674C
	0x036A6744 MOV X0, X8
	0x036A6748 BL 0x1C16DFC
	0x036A674C MOV X0, X21
	0x036A6750 MOV X1, X31
	0x036A6754 MOV X2, X31
	0x036A6758 BL 0x361A090
	0x036A675C TBZ X0, 0x0, 0x36A6778
	0x036A6760 LDR X0, [X19 + 0x18]
	0x036A6764 CBZ X0, 0x36A67B0
	0x036A6768 LDR X8, [X0]
	0x036A676C LDP X9, X1, [X8 + 0x158]
	0x036A6770 BLR X9
	0x036A6774 B 0x36A677C
	0x036A6778 MOV W0, W31
	0x036A677C UBFM W8, W22, 0x1B, 0x1A
	0x036A6780 SUB W8, W8, W22
	0x036A6784 ADD W8, W8, W20
	0x036A6788 UBFM W9, W8, 0x1B, 0x1A
	0x036A678C LDP X20, X19, [X31 + 0x20]
	0x036A6790 LDP X22, X21, [X31 + 0x10]
	0x036A6794 SUB W8, W9, W8
	0x036A6798 MOVZ W9, 0x7489
	0x036A679C ADD W8, W8, W0
	0x036A67A0 MOVK W9, 0xA0000
	0x036A67A4 ADD W0, W8, W9
	0x036A67A8 LDR X30, [X31], #0x30
	0x036A67AC RET
	0x036A67B0 BL 0x1C16F20
	0x036A67B4 STP X30, X21, [X31 - 0x20]!
	0x036A67B8 STP X20, X19, [X31 + 0x10]
	0x036A67BC ADRP X21, 0xD3A000
	0x036A67C0 LDRB W8, [X21 + 0x908]
	0x036A67C4 MOV X19, X1
	0x036A67C8 MOV X20, X0
	0x036A67CC TBNZ X8, 0x0, 0x36A67E4
	0x036A67D0 ADRP X0, 0xA98000
	0x036A67D4 LDR X0, [X0 + 0x7F8]
	0x036A67D8 BL 0x1C16CF4
	0x036A67DC MOVZ W8, 0x1
	0x036A67E0 STRB W8, [X21 + 0x908]
	0x036A67E4 CBZ X19, 0x36A6864
	0x036A67E8 ADRP X8, 0xA98000
	0x036A67EC LDR X8, [X8 + 0x7F8]
	0x036A67F0 LDR X9, [X19]
	0x036A67F4 LDR X8, [X8]
	0x036A67F8 LDRB W11, [X9 + 0x130]
	0x036A67FC LDRB W10, [X8 + 0x130]
	0x036A6800 CMP W11, W10
	0x036A6804 B.CC 0x36A68A4
	0x036A6808 LDR X9, [X9 + 0xC8]
	0x036A680C ADD X9, X9, X10, 0x3, LSL
	0x036A6810 LDUR X9, [X9 - 0x8]
	0x036A6814 CMP X9, X8
	0x036A6818 B.NE 0x36A68A4
	0x036A681C LDR X0, [X20 + 0x10]
	0x036A6820 CBZ X0, 0x36A68A4
	0x036A6824 LDR X8, [X0]
	0x036A6828 LDR X1, [X19 + 0x10]
	0x036A682C LDP X9, X2, [X8 + 0x138]
	0x036A6830 BLR X9
	0x036A6834 TBZ X0, 0x0, 0x36A6864
	0x036A6838 LDRB W8, [X20 + 0x20]
	0x036A683C LDRB W9, [X19 + 0x20]
	0x036A6840 CMP W8, W9
	0x036A6844 B.NE 0x36A6864
	0x036A6848 MOV X0, X20
	0x036A684C BL 0x36A6680
	0x036A6850 MOV W21, W0
	0x036A6854 MOV X0, X19
	0x036A6858 BL 0x36A6680
	0x036A685C EOR W8, W21, W0, 0x0
	0x036A6860 TBZ X8, 0x0, 0x36A6874
	0x036A6864 MOV W0, W31
	0x036A6868 LDP X20, X19, [X31 + 0x10]
	0x036A686C LDP X30, X21, [X31], #0x20
	0x036A6870 RET
	0x036A6874 MOV X0, X20
	0x036A6878 BL 0x36A6680
	0x036A687C TBZ X0, 0x0, 0x36A689C
	0x036A6880 LDR X0, [X20 + 0x18]
	0x036A6884 CBZ X0, 0x36A68A4
	0x036A6888 LDR X8, [X0]
	0x036A688C LDR X1, [X19 + 0x18]
	0x036A6890 LDP X9, X2, [X8 + 0x138]
	0x036A6894 BLR X9
	0x036A6898 TBZ X0, 0x0, 0x36A6864
	0x036A689C MOVZ W0, 0x1
	0x036A68A0 B 0x36A6868
	0x036A68A4 BL 0x1C16F20
	0x036A68A8 LDR X0, [X0 + 0x10]
	0x036A68AC RET
	0x036A68B0 STR X1, [X0 + 0x10]
	0x036A68B4 RET
	0x036A68B8 LDR W0, [X0 + 0x1C]
	0x036A68BC RET
	0x036A68C0 STP X30, X27, [X31 - 0x50]!
	0x036A68C4 STP X26, X25, [X31 + 0x10]
	0x036A68C8 STP X24, X23, [X31 + 0x20]
	0x036A68CC STP X22, X21, [X31 + 0x30]
	0x036A68D0 STP X20, X19, [X31 + 0x40]
	0x036A68D4 ADRP X26, 0xD3A000
	0x036A68D8 ADRP X27, 0xA98000
	0x036A68DC ADRP X25, 0xA98000
	0x036A68E0 ADRP X24, 0xA98000
	0x036A68E4 ADRP X23, 0xA98000
	0x036A68E8 ADRP X22, 0xA98000
	0x036A68EC LDRB W8, [X26 + 0x916]
	0x036A68F0 LDR X27, [X27 + 0xC40]
	0x036A68F4 LDR X25, [X25 + 0xCD8]
	0x036A68F8 LDR X24, [X24 + 0xCE0]
	0x036A68FC LDR X23, [X23 + 0xCE8]
	0x036A6900 LDR X22, [X22 + 0xCF0]
	0x036A6904 MOV X20, X2
	0x036A6908 MOV X21, X1
	0x036A690C MOV X19, X0
	0x036A6910 TBNZ X8, 0x0, 0x36A6958
	0x036A6914 ADRP X0, 0xA98000
	0x036A6918 LDR X0, [X0 + 0xC40]
	0x036A691C BL 0x1C16CF4
	0x036A6920 ADRP X0, 0xA98000
	0x036A6924 LDR X0, [X0 + 0xCF0]
	0x036A6928 BL 0x1C16CF4
	0x036A692C ADRP X0, 0xA98000
	0x036A6930 LDR X0, [X0 + 0xCE0]
	0x036A6934 BL 0x1C16CF4
	0x036A6938 ADRP X0, 0xA98000
	0x036A693C LDR X0, [X0 + 0xCE8]
	0x036A6940 BL 0x1C16CF4
	0x036A6944 ADRP X0, 0xA98000
	0x036A6948 LDR X0, [X0 + 0xCD8]
	0x036A694C BL 0x1C16CF4
	0x036A6950 MOVZ W8, 0x1
	0x036A6954 STRB W8, [X26 + 0x916]
	0x036A6958 LDR X8, [X27]
	0x036A695C MOV X0, X19
	0x036A6960 MOV X1, X31
	0x036A6964 LDR X8, [X8 + 0xB8]
	0x036A6968 LDR W9, [X8]
	0x036A696C ADD W9, W9, 0x1
	0x036A6970 STR W9, [X8]
	0x036A6974 STR W9, [X19 + 0x20]
	0x036A6978 BL 0x33BDD8C
	0x036A697C STP X21, X20, [X19 + 0x10]
	0x036A6980 LDR X0, [X25]
	0x036A6984 BL 0x1C16F10
	0x036A6988 LDR X1, [X24]
	0x036A698C MOV X20, X0
	0x036A6990 BL 0x2EECE50
	0x036A6994 STR X20, [X19 + 0x28]
	0x036A6998 LDR X0, [X23]
	0x036A699C BL 0x1C16F10
	0x036A69A0 LDR X1, [X22]
	0x036A69A4 MOV X20, X0
	0x036A69A8 BL 0x2EECE50
	0x036A69AC STR X20, [X19 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD3B000
	009 Move W8, [X20+2299]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xA4F000
	016 Move X0, [X0+2544]
	017 Call 0x1C17CF4
	018 Move X0, 0xA8E000
	019 Move X0, [X0+2952]
	020 Call 0x1C17CF4
	021 Move X0, 0xA5B000
	022 Move X0, [X0+2408]
	023 Call 0x1C17CF4
	024 Move X0, 0xA99000
	025 Move X0, [X0+1816]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2299], W8
	029 Move X20, [X19+56]
	030 Move [X31+12], W31
	031 Add X1, X31, 12
	032 Move X0, X20
	033 Move X2, X31
	034 Call Monitor.Enter, X0, X1
	035 Move X0, [X19+16]
	036 Compare X0, 0
	037 JumpIfEqual {163}
	038 Move X1, X31
	039 Call Uri.get_Host, X0
	040 Move X21, X0
	041 Move X0, [X19+16]
	042 Compare X0, 0
	043 JumpIfEqual {164}
	044 Move X1, X31
	045 Call Uri.get_HostNameType, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X19+16]
	048 Compare X0, 0
	049 JumpIfEqual {165}
	050 Move X1, X31
	051 Call Uri.get_HostNameType, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X23, [X19+40]
	054 Compare X23, 0
	055 JumpIfNotEqual {123}
	056 Move X0, [X19+16]
	057 Compare X0, 0
	058 JumpIfEqual {166}
	059 Move X1, X31
	060 Call Uri.get_HostNameType, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare X21, 0
	063 JumpIfEqual {173}
	064 Move W8, [X21+16]
	065 Subtract W2, W8, 2
	066 Move W1, 1
	067 Move X0, X21
	068 Move X3, X31
	069 Call String.Substring, X0, X1, X2
	070 Move X21, X0
	071 Move X8, 0xA99000
	072 Move X8, [X8+1816]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move X23, X0
	076 Move X1, X31
	077 Call IPHostEntry..ctor, X0
	078 Move [X19+40], X23
	079 Move X8, 0xA8E000
	080 Move X8, [X8+2952]
	081 Move X0, [X8]
	082 Move W1, 1
	083 Call 0x1C17D6C
	084 Move X8, 0xA5B000
	085 Move X8, [X8+2408]
	086 Move X24, X0
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X21
	093 Move X1, X31
	094 Call IPAddress.Parse, X0
	095 Compare X24, 0
	096 JumpIfEqual {167}
	097 Move X21, X0
	098 Compare X0, 0
	099 JumpIfEqual {106}
	100 Move X8, [X24]
	101 Move X1, [X8+64]
	102 Move X0, X21
	103 Call 0x1C17E00
	104 Compare X0, 0
	105 JumpIfEqual {170}
	106 Move W8, [X24+24]
	107 Compare W8, 0
	108 JumpIfEqual {168}
	109 Move [X24+32], X21
	110 Compare X23, 0
	111 JumpIfEqual {169}
	112 Move [X23+32], X24
	113 Move X23, [X19+40]
	114 Move X0, X19
	115 Call ServicePoint.get_HasTimedOut, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {145}
	120 Move X23, [X19+40]
	121 Compare X23, 0
	122 JumpIfEqual {145}
	123 Move X22, X31
	124 Move W21, 5
	125 Move W8, [X31+12]
	126 Compare W8, 0
	127 JumpIfEqual {131}
	128 Move X0, X20
	129 Move X1, X31
	130 Call Monitor.Exit, X0
	131 Compare X22, 0
	132 JumpIfNotEqual {161}
	133 Or W8, W21, 8
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X23, [X19+40]
	136 Move X0, X23
	137 Move X20, [X31+48]
	138 Move X19, [X31+56]
	139 Move X22, [X31+32]
	140 Move X21, [X31+40]
	141 Move X24, [X31+16]
	142 Move X23, [X31+24]
	143 Move X30, [X31+64]
	144 Return X0
	145 Move X8, 0xA4F000
	146 Move X8, [X8+2544]
	147 Move X0, [X8]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X31
	153 Call DateTime.get_UtcNow
	154 Move [X19+24], X0
	155 Move X0, X21
	156 Call Dns.GetHostEntry, X0
	157 Move X22, X31
	158 Move X23, X31
	159 Move [X19+40], X0
	160 Move W21, 8
	161 Move X0, X22
	162 Call 0x1C17F18
	163 Call 0x1C17F20
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Call 0x1C17F20
	168 Call 0x1C17F28
	169 Call 0x1C17F20
	170 Call 0x1C17F44
	171 Move X1, X31
	172 Call 0x1C17DEC
	173 Call 0x1C17F20
	174 Move X22, X1
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X21, X0
	177 Move X0, X21
	178 Call 0x3EB2AD0
	179 Move X21, X0
	180 Move X0, 0xA54000
	181 Move X0, [X0+3264]
	182 Call 0x1C17D08
	183 Move X8, [X21]
	184 Move X1, [X8]
	185 Call 0x1C18270
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {193}
	190 Call 0x3EB2AE0
	191 Move X22, X31
	192 Move X23, X31
	193 Move W0, 8
	194 Call 0x3EB2AF0
	195 Move X8, [X21]
	196 Move [X0], X8
	197 Move X1, 0x80F000
	198 Add X1, X1, 3672
	199 Move X2, X31
	200 Call 0x3EB2B00
	201 Move X22, X1
	202 Move X21, X0
	203 Call 0x3EB2AE0
	204 Move X22, X1
	205 Move X21, X0
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X0, X21
	208 Call 0x3EB2AD0
	209 Move X22, [X0]
	210 Call 0x3EB2AE0
	211 Move W21, W31
	212 Move X23, X31
	213 Move X22, X31
	214 Move X21, X0
	215 Move W8, [X31+12]
	216 Compare W8, 0
	217 JumpIfEqual {221}
	218 Move X0, X20
	219 Move X1, X31
	220 Call Monitor.Exit, X0
	221 Compare X22, 0
	222 JumpIfNotEqual {225}
	223 Move X0, X21
	224 Call 0x1D2D690
	225 Move X0, X22
	226 Call 0x1C17F18
	227 Call 0x1991590

Method: System.Void SetVersion(System.Version version)

Disassembly:
	0x036A69B0 LDP X20, X19, [X31 + 0x40]
	0x036A69B4 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void SendRequest(System.Net.WebOperation operation, System.String groupName)

Disassembly:
	0x0369E8A8 LDR X1, [X8]
	0x0369E8AC BL 0x2850DA0
	0x0369E8B0 LDR X0, [X19 + 0xE8]
	0x0369E8B4 CBZ X0, 0x369E8C8
	0x0369E8B8 LDR X8, [X0]
	0x0369E8BC LDP X9, X1, [X8 + 0x1C8]
	0x0369E8C0 BLR X9
	0x0369E8C4 STR X31, [X19 + 0xE8]
	0x0369E8C8 LDP X20, X19, [X31 + 0x10]
	0x0369E8CC LDR X30, [X31], #0x20
	0x0369E8D0 RET
	0x0369E8D4 CMP W1, 0x1
	0x0369E8D8 MOV X19, X0
	0x0369E8DC B.NE 0x369E93C
	0x0369E8E0 MOV X0, X19
	0x0369E8E4 BL 0x3EB1AD0
	0x0369E8E8 MOV X19, X0
	0x0369E8EC ADRP X0, 0xA5B000
	0x0369E8F0 LDR X0, [X0 + 0xCC0]
	0x0369E8F4 BL 0x1C16D08
	0x0369E8F8 LDR X8, [X19]
	0x0369E8FC LDR X1, [X8]
	0x0369E900 BL 0x1C17270
	0x0369E904 TBZ X0, 0x0, 0x369E914
	0x0369E908 LDP X20, X19, [X31 + 0x10]
	0x0369E90C LDR X30, [X31], #0x20
	0x0369E910 B 0x3EB1AE0
	0x0369E914 MOVZ W0, 0x8
	0x0369E918 BL 0x3EB1AF0
	0x0369E91C LDR X8, [X19]
	0x0369E920 STR X8, [X0]
	0x0369E924 ADRP X1, 0x816000
	0x0369E928 ADD X1, X1, 0xE58
	0x0369E92C MOV X2, X31
	0x0369E930 BL 0x3EB1B00
	0x0369E934 MOV X19, X0
	0x0369E938 BL 0x3EB1AE0
	0x0369E93C MOV X0, X19
	0x0369E940 BL 0x1D2C690
	0x0369E944 BL 0x1990590
	0x0369E948 STP X30, X19, [X31 - 0x10]!
	0x0369E94C ADRP X0, 0xA7F000
	0x0369E950 LDR X0, [X0 + 0x2E0]
	0x0369E954 BL 0x1C16D08
	0x0369E958 BL 0x1C16F10
	0x0369E95C MOV X1, X31
	0x0369E960 MOV X19, X0
	0x0369E964 BL 0x329F08C
	0x0369E968 ADRP X0, 0xAA0000
	0x0369E96C LDR X0, [X0 + 0x900]
	0x0369E970 BL 0x1C16D08
	0x0369E974 MOV X1, X0
	0x0369E978 MOV X0, X19
	0x0369E97C BL 0x1C16DEC
	0x0369E980 STP X30, X19, [X31 - 0x10]!
	0x0369E984 ADRP X0, 0xA7F000
	0x0369E988 LDR X0, [X0 + 0x2E0]
	0x0369E98C BL 0x1C16D08
	0x0369E990 BL 0x1C16F10
	0x0369E994 MOV X1, X31
	0x0369E998 MOV X19, X0
	0x0369E99C BL 0x329F08C
	0x0369E9A0 ADRP X0, 0xAA0000
	0x0369E9A4 LDR X0, [X0 + 0x908]
	0x0369E9A8 BL 0x1C16D08
	0x0369E9AC MOV X1, X0
	0x0369E9B0 MOV X0, X19
	0x0369E9B4 BL 0x1C16DEC
	0x0369E9B8 LDR X8, [X0 + 0x58]
	0x0369E9BC CBZ X8, 0x369E9D0
	0x0369E9C0 LDR X4, [X8 + 0x18]
	0x0369E9C4 LDR X0, [X8 + 0x40]
	0x0369E9C8 LDR X3, [X8 + 0x28]
	0x0369E9CC BR X4
	0x0369E9D0 RET
	0x0369E9D4 STP X30, X21, [X31 - 0x20]!
	0x0369E9D8 STP X20, X19, [X31 + 0x10]
	0x0369E9DC ADRP X20, 0xD42000
	0x0369E9E0 ADRP X21, 0xA7E000
	0x0369E9E4 LDRB W8, [X20 + 0x8CD]
	0x0369E9E8 LDR X21, [X21 + 0x4D0]
	0x0369E9EC MOV X19, X0
	0x0369E9F0 TBNZ X8, 0x0, 0x369EA14
	0x0369E9F4 ADRP X0, 0xA7E000
	0x0369E9F8 LDR X0, [X0 + 0x4D0]
	0x0369E9FC BL 0x1C16CF4
	0x0369EA00 ADRP X0, 0xA9C000
	0x0369EA04 LDR X0, [X0 + 0x190]
	0x0369EA08 BL 0x1C16CF4
	0x0369EA0C MOVZ W8, 0x1
	0x0369EA10 STRB W8, [X20 + 0x8CD]
	0x0369EA14 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X2
	007 Move X21, X1
	008 Move X19, X0
	009 Move [X31+12], W31
	010 Add X1, X31, 12
	011 Move X2, X31
	012 Call Monitor.Enter, X0, X1
	013 Move W8, [X19+92]
	014 Compare W8, 0
	015 JumpIfNotEqual {39}
	016 Move X0, [X19+112]
	017 Compare X0, 0
	018 JumpIfEqual {56}
	019 Move X1, X21
	020 Move X2, X20
	021 Call ServicePointScheduler.SendRequest, X0, X1, X2
	022 Move X20, X31
	023 Move W8, [X31+12]
	024 Compare W8, 0
	025 JumpIfEqual {29}
	026 Move X0, X19
	027 Move X1, X31
	028 Call Monitor.Exit, X0
	029 Compare X20, 0
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move X21, [X31+24]
	035 Add X31, X31, 48
	036 Return 
	037 Move X0, X20
	038 Call 0x1C17F18
	039 Move X0, 0xAA1000
	040 Move X0, [X0+2104]
	041 Call 0x1C17D08
	042 Move X20, X0
	043 Move X0, 0xA56000
	044 Move X0, [X0+1728]
	045 Call 0x1C17D08
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Call Type.GetTypeFromHandle, X0
	053 Compare X0, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17F20
	056 Call 0x1C17F20
	057 Move X8, [X0]
	058 Move X1, [X8+752]
	059 Move X9, [X8+744]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X20, X0
	062 Move X0, 0xA7F000
	063 Move X0, [X0+1208]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X21, X0
	067 Move X1, X20
	068 Move X2, X31
	069 Call ObjectDisposedException..ctor, X0, X1
	070 Move X0, 0xAA1000
	071 Move X0, [X0+2112]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X21
	075 Call 0x1C17DEC
	076 Move X21, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X21
	079 Call 0x3EB2AD0
	080 Move X20, [X0]
	081 Call 0x3EB2AE0
	082 Move X20, X31
	083 Move X21, X0
	084 Move W8, [X31+12]
	085 Compare W8, 0
	086 JumpIfEqual {90}
	087 Move X0, X19
	088 Move X1, X31
	089 Call Monitor.Exit, X0
	090 Compare X20, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X21
	093 Call 0x1D2D690
	094 Move X0, X20
	095 Call 0x1C17F18
	096 Call 0x1991590

Method: System.Boolean CloseConnectionGroup(System.String connectionGroupName)

Disassembly:
	0x036A6AA0 ADRP X20, 0xA50000
	0x036A6AA4 LDRB W8, [X21 + 0x90B]
	0x036A6AA8 LDR X20, [X20 + 0x280]
	0x036A6AAC MOV X19, X0
	0x036A6AB0 TBNZ X8, 0x0, 0x36A6AD4
	0x036A6AB4 ADRP X0, 0xA98000
	0x036A6AB8 LDR X0, [X0 + 0xD00]
	0x036A6ABC BL 0x1C16CF4
	0x036A6AC0 ADRP X0, 0xA50000
	0x036A6AC4 LDR X0, [X0 + 0x280]
	0x036A6AC8 BL 0x1C16CF4
	0x036A6ACC MOVZ W8, 0x1
	0x036A6AD0 STRB W8, [X21 + 0x90B]
	0x036A6AD4 LDR X0, [X20]
	0x036A6AD8 MOVI V0.2D, 0x0
	0x036A6ADC STP V0, V0, [X31 + 0x60]
	0x036A6AE0 STP V0, V0, [X31 + 0x40]
	0x036A6AE4 STP V0, V0, [X31 + 0x20]
	0x036A6AE8 STR X19, [X31 + 0x40]
	0x036A6AEC ADRP X19, 0xA98000
	0x036A6AF0 LDR W8, [X0 + 0xE0]
	0x036A6AF4 LDR X19, [X19 + 0xD00]
	0x036A6AF8 CBNZ W8, 0x36A6B00
	0x036A6AFC BL 0x1C16DFC
	0x036A6B00 ADD X8, X31, 0x8
	0x036A6B04 MOV X0, X31
	0x036A6B08 BL 0x32C4770
	0x036A6B0C LDUR V0, [X31 + 0x8]
	0x036A6B10 LDR X9, [X31 + 0x18]
	0x036A6B14 LDR X2, [X19]
	0x036A6B18 ADD X8, X31, 0x20
	0x036A6B1C ORR X19, X8, 0xF
	0x036A6B20 MOVN W10, 0x0
	0x036A6B24 ADD X1, X31, 0x20
	0x036A6B28 MOV X0, X19
	0x036A6B2C STUR V0, [X31 + 0x28]
	0x036A6B30 STR X9, [X31 + 0x38]
	0x036A6B34 STR W10, [X31 + 0x20]
	0x036A6B38 BL 0x2195BB8
	0x036A6B3C MOV X0, X19
	0x036A6B40 MOV X1, X31
	0x036A6B44 BL 0x32C47F8
	0x036A6B48 LDP X20, X19, [X31 + 0x90]
	0x036A6B4C LDP X30, X21, [X31 + 0x80]
	0x036A6B50 ADD X31, X31, 0xA0
	0x036A6B54 RET
	0x036A6B58 STP X30, X27, [X31 - 0x50]!
	0x036A6B5C STP X26, X25, [X31 + 0x10]
	0x036A6B60 STP X24, X23, [X31 + 0x20]
	0x036A6B64 STP X22, X21, [X31 + 0x30]
	0x036A6B68 STP X20, X19, [X31 + 0x40]
	0x036A6B6C ADRP X20, 0xD3A000
	0x036A6B70 LDRB W8, [X20 + 0x90C]
	0x036A6B74 MOV X19, X0
	0x036A6B78 TBNZ X8, 0x0, 0x36A6BD8
	0x036A6B7C ADRP X0, 0xA98000
	0x036A6B80 LDR X0, [X0 + 0xD08]
	0x036A6B84 BL 0x1C16CF4
	0x036A6B88 ADRP X0, 0xA98000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Move [X31+12], W31
	009 Add X1, X31, 12
	010 Move X2, X31
	011 Call Monitor.Enter, X0, X1
	012 Move W8, [X19+92]
	013 Compare W8, 0
	014 JumpIfEqual {17}
	015 Move X20, X31
	016 Move W21, 1
	017 Move X0, [X19+112]
	018 Compare X0, 0
	019 JumpIfEqual {41}
	020 Move X1, X20
	021 Call ServicePointScheduler.CloseConnectionGroup, X0, X1
	022 Move W21, W0
	023 Move X20, X31
	024 Move W8, [X31+12]
	025 Compare W8, 0
	026 JumpIfEqual {30}
	027 Move X0, X19
	028 Move X1, X31
	029 Call Monitor.Exit, X0
	030 Compare X20, 0
	031 JumpIfNotEqual {39}
	032 And W0, W21, 1
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Add X31, X31, 48
	038 Return X0
	039 Move X0, X20
	040 Call 0x1C17F18
	041 Call 0x1C17F20
	042 Move X21, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X21
	045 Call 0x3EB2AD0
	046 Move X20, [X0]
	047 Call 0x3EB2AE0
	048 Move W21, W31
	049 Move X20, X31
	050 Move X21, X0
	051 Move W8, [X31+12]
	052 Compare W8, 0
	053 JumpIfEqual {57}
	054 Move X0, X19
	055 Move X1, X31
	056 Call Monitor.Exit, X0
	057 Compare X20, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X21
	060 Call 0x1D2D690
	061 Move X0, X20
	062 Call 0x1C17F18
	063 Call 0x1991590

Method: System.Void FreeServicePoint()

Disassembly:
	0x036A6C9C LDR X0, [X19 + 0x30]
	0x036A6CA0 CBZ X0, 0x36A6D10
	0x036A6CA4 LDR X2, [X26]
	0x036A6CA8 MOV X1, X21

ISIL:
	001 Move W8, 1
	002 Move [X0+92], W8
	003 Move [X0+112], X31
	004 Return 

Method: System.Void UpdateServerCertificate(System.Security.Cryptography.X509Certificates.X509Certificate certificate)

Disassembly:
	0x036A6CAC BL 0x2AA5018
	0x036A6CB0 CBZ X0, 0x36A6D10
	0x036A6CB4 BL 0x36A6D18
	0x036A6CB8 TBZ X0, 0x0, 0x36A6CD0
	0x036A6CBC LDR X0, [X19 + 0x30]
	0x036A6CC0 CBZ X0, 0x36A6D10
	0x036A6CC4 LDR X2, [X27]
	0x036A6CC8 MOV X1, X21
	0x036A6CCC BL 0x2AA64F8
	0x036A6CD0 LDR W8, [X20 + 0x18]
	0x036A6CD4 ADD X23, X23, 0x1
	0x036A6CD8 CMP X23, W8, SXTW
	0x036A6CDC B.LT 0x36A6C78

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Compare X1, 0
	005 JumpIfEqual {12}
	006 Move X8, [X1]
	007 Move X0, X1
	008 Move X9, [X8+504]
	009 Move X8, [X8+512]
	010 Move X1, X8
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X0, X31
	013 Move [X19+128], X0
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Void UpdateClientCertificate(System.Security.Cryptography.X509Certificates.X509Certificate certificate)

Disassembly:
	0x036A6CE0 LDR X0, [X19 + 0x30]
	0x036A6CE4 CBZ X0, 0x36A6D10
	0x036A6CE8 LDR X1, [X22]
	0x036A6CEC BL 0x2AA4E88
	0x036A6CF0 CBNZ W0, 0x36A6CF8
	0x036A6CF4 STR X31, [X19 + 0x30]
	0x036A6CF8 LDP X20, X19, [X31 + 0x40]
	0x036A6CFC LDP X22, X21, [X31 + 0x30]
	0x036A6D00 LDP X24, X23, [X31 + 0x20]
	0x036A6D04 LDP X26, X25, [X31 + 0x10]
	0x036A6D08 LDP X30, X27, [X31], #0x50
	0x036A6D0C RET
	0x036A6D10 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Compare X1, 0
	005 JumpIfEqual {12}
	006 Move X8, [X1]
	007 Move X0, X1
	008 Move X9, [X8+504]
	009 Move X8, [X8+512]
	010 Move X1, X8
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X0, X31
	013 Move [X19+136], X0
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Boolean CallEndPointDelegate(System.Net.Sockets.Socket sock, System.Net.IPEndPoint remote)

Disassembly:
	0x036A6D14 BL 0x1C16F28
	0x036A6D18 STR X30, [X31 - 0x20]!
	0x036A6D1C STP X20, X19, [X31 + 0x10]
	0x036A6D20 ADRP X20, 0xD3A000
	0x036A6D24 LDRB W8, [X20 + 0x917]
	0x036A6D28 MOV X19, X0
	0x036A6D2C TBNZ X8, 0x0, 0x36A6D50
	0x036A6D30 ADRP X0, 0xA98000
	0x036A6D34 LDR X0, [X0 + 0xD28]
	0x036A6D38 BL 0x1C16CF4
	0x036A6D3C ADRP X0, 0xA98000
	0x036A6D40 LDR X0, [X0 + 0xD30]
	0x036A6D44 BL 0x1C16CF4
	0x036A6D48 MOVZ W8, 0x1
	0x036A6D4C STRB W8, [X20 + 0x917]
	0x036A6D50 LDR X8, [X19 + 0x28]
	0x036A6D54 CBZ X8, 0x36A6D88
	0x036A6D58 LDR W8, [X8 + 0x18]
	0x036A6D5C CBZ W8, 0x36A6D68
	0x036A6D60 MOV W0, W31
	0x036A6D64 B 0x36A6D7C
	0x036A6D68 LDR X8, [X19 + 0x30]
	0x036A6D6C CBZ X8, 0x36A6D88
	0x036A6D70 LDR W8, [X8 + 0x18]
	0x036A6D74 CMP W8, 0x0
	0x036A6D78 CSET W0, EQ
	0x036A6D7C LDP X20, X19, [X31 + 0x10]
	0x036A6D80 LDR X30, [X31], #0x20
	0x036A6D84 RET
	0x036A6D88 BL 0x1C16F20
	0x036A6D8C SUB X31, X31, 0xA0
	0x036A6D90 STR X30, [X31 + 0x60]
	0x036A6D94 STP X24, X23, [X31 + 0x70]
	0x036A6D98 STP X22, X21, [X31 + 0x80]
	0x036A6D9C STP X20, X19, [X31 + 0x90]
	0x036A6DA0 ADRP X20, 0xD3A000
	0x036A6DA4 LDRB W8, [X20 + 0x90D]
	0x036A6DA8 MOV X19, X0
	0x036A6DAC TBNZ X8, 0x0, 0x36A6DF4
	0x036A6DB0 ADRP X0, 0xA98000
	0x036A6DB4 LDR X0, [X0 + 0xD38]
	0x036A6DB8 BL 0x1C16CF4
	0x036A6DBC ADRP X0, 0xA98000
	0x036A6DC0 LDR X0, [X0 + 0xD40]
	0x036A6DC4 BL 0x1C16CF4
	0x036A6DC8 ADRP X0, 0xA98000
	0x036A6DCC LDR X0, [X0 + 0xD48]
	0x036A6DD0 BL 0x1C16CF4
	0x036A6DD4 ADRP X0, 0xA98000
	0x036A6DD8 LDR X0, [X0 + 0xD50]
	0x036A6DDC BL 0x1C16CF4
	0x036A6DE0 ADRP X0, 0xA98000
	0x036A6DE4 LDR X0, [X0 + 0xD58]
	0x036A6DE8 BL 0x1C16CF4
	0x036A6DEC MOVZ W8, 0x1
	0x036A6DF0 STRB W8, [X20 + 0x90D]
	0x036A6DF4 MOVI V0.2D, 0x0
	0x036A6DF8 STR X31, [X31 + 0x50]
	0x036A6DFC STP V0, V0, [X31 + 0x30]
	0x036A6E00 LDR X0, [X19 + 0x20]
	0x036A6E04 CBZ X0, 0x36A6EE4
	0x036A6E08 ADRP X23, 0xA98000
	0x036A6E0C ADRP X24, 0xA98000
	0x036A6E10 ADRP X22, 0xA98000
	0x036A6E14 LDR X23, [X23 + 0xD38]
	0x036A6E18 LDR X24, [X24 + 0xD48]
	0x036A6E1C LDR X22, [X22 + 0xD40]
	0x036A6E20 MOV X1, X31
	0x036A6E24 BL 0x36A8490
	0x036A6E28 LDR X1, [X19 + 0x28]
	0x036A6E2C MOV X0, X19
	0x036A6E30 BL 0x36A6F1C
	0x036A6E34 LDR X9, [X19 + 0x30]
	0x036A6E38 MOV W20, W0
	0x036A6E3C CBZ X9, 0x36A6E94
	0x036A6E40 LDR X1, [X23]
	0x036A6E44 ADD X8, X31, 0x8
	0x036A6E48 MOV X0, X9
	0x036A6E4C BL 0x2AA54BC
	0x036A6E50 LDUR V0, [X31 + 0x8]
	0x036A6E54 LDUR V1, [X31 + 0x18]
	0x036A6E58 LDR X8, [X31 + 0x28]
	0x036A6E5C STP V0, V1, [X31 + 0x30]
	0x036A6E60 STR X8, [X31 + 0x50]
	0x036A6E64 LDR X1, [X24]
	0x036A6E68 ADD X0, X31, 0x30
	0x036A6E6C BL 0x2C0A728
	0x036A6E70 TBZ X0, 0x0, 0x36A6E88
	0x036A6E74 LDR X1, [X31 + 0x48]
	0x036A6E78 MOV X0, X19
	0x036A6E7C BL 0x36A6F1C
	0x036A6E80 ORR W20, W20, W0, 0x0
	0x036A6E84 B 0x36A6E64
	0x036A6E88 LDR X1, [X22]
	0x036A6E8C ADD X0, X31, 0x30
	0x036A6E90 BL 0x2C0A83C
	0x036A6E94 TBNZ X20, 0x0, 0x36A6E28
	0x036A6E98 B 0x36A6ECC
	0x036A6E9C B 0x36A6EA0
	0x036A6EA0 CMP W1, 0x1
	0x036A6EA4 B.NE 0x36A6EE8
	0x036A6EA8 BL 0x3EB1AD0
	0x036A6EAC LDR X21, [X0]
	0x036A6EB0 BL 0x3EB1AE0
	0x036A6EB4 LDR X1, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0+72]
	010 Compare X8, 0
	011 JumpIfEqual {56}
	012 Move X23, 0xA8C000
	013 Move X23, [X23+216]
	014 Move X19, X2
	015 Move X20, X0
	016 Move X21, X1
	017 Move W22, W31
	018 Move W25, 0x80000000
	019 Move X0, [X8+64]
	020 Move X9, [X8+24]
	021 Move X4, [X8+40]
	022 Move X1, X20
	023 Move X2, X19
	024 Move W3, W22
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X1, X0
	027 Compare X1, 0
	028 JumpIfEqual {56}
	029 Compare X21, 0
	030 JumpIfEqual {34}
	031 Move X0, X21
	032 Move X2, X31
	033 Call Socket.Bind, X0, X1
	034 Call 0x1C17F20
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X24, X0
	037 Move X0, X24
	038 Call 0x3EB2AD0
	039 Move X24, X0
	040 Move X0, X23
	041 Call 0x1C17D08
	042 Move X8, [X24]
	043 Move X1, [X8]
	044 Call 0x1C18270
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {66}
	049 Call 0x3EB2AE0
	050 Add W22, W22, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X20+72]
	053 Compare X8, 0
	054 JumpIfNotEqual {19}
	055 Call 0x1C17F20
	056 Move W0, 1
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Move X25, [X31+72]
	065 Return X0
	066 Move W0, 8
	067 Call 0x3EB2AF0
	068 Move X8, [X24]
	069 Move [X0], X8
	070 Move X1, 0x80F000
	071 Add X1, X1, 3672
	072 Move X2, X31
	073 Call 0x3EB2B00
	074 Call 0x1C17F30
	075 Move X19, X0
	076 Move X0, 0xA99000
	077 Move X0, [X0+3232]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Call 0x1C17DEC
	082 Move X24, X0
	083 Call 0x3EB2AE0
	084 Move X0, X24
	085 Call 0x1D2D690
	086 Move X24, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X24
	089 Call 0x3EB2AD0
	090 Move X19, X0
	091 Move X0, 0xA54000
	092 Move X0, [X0+3264]
	093 Call 0x1C17D08
	094 Move X8, [X19]
	095 Move X1, [X8]
	096 Call 0x1C18270
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {103}
	101 Call 0x3EB2AE0
	102 Move W0, W31
	103 Move W0, 8
	104 Call 0x3EB2AF0
	105 Move X8, [X19]
	106 Move [X0], X8
	107 Move X1, 0x80F000
	108 Add X1, X1, 3672
	109 Move X2, X31
	110 Call 0x3EB2B00
	111 Move X24, X0
	112 Call 0x3EB2AE0
	113 Call 0x1991590

