Type: System.Net.CommandStream

Method: System.Void .ctor(System.Net.Sockets.TcpClient client)

Disassembly:
	0x0366FE20 BL 0x1C16DEC
	0x0366FE24 MOV X20, X0
	0x0366FE28 BL 0x3EB1AE0
	0x0366FE2C MOV X0, X20
	0x0366FE30 BL 0x1D2C690
	0x0366FE34 BL 0x1990590
	0x0366FE38 STP X30, X21, [X31 - 0x20]!
	0x0366FE3C STP X20, X19, [X31 + 0x10]
	0x0366FE40 ADRP X21, 0xD71000
	0x0366FE44 LDRB W8, [X21 + 0x772]
	0x0366FE48 MOV X20, X1
	0x0366FE4C MOV X19, X0
	0x0366FE50 TBNZ X8, 0x0, 0x366FE68
	0x0366FE54 ADRP X0, 0xACE000
	0x0366FE58 LDR X0, [X0 + 0x860]
	0x0366FE5C BL 0x1C16CF4
	0x0366FE60 MOVZ W8, 0x1
	0x0366FE64 STRB W8, [X21 + 0x772]
	0x0366FE68 LDR X8, [X19 + 0x50]
	0x0366FE6C CBZ X8, 0x366FF94
	0x0366FE70 LDRSW X9, [X19 + 0x58]
	0x0366FE74 LDR W10, [X8 + 0x18]
	0x0366FE78 CMP W9, W10
	0x0366FE7C B.GE 0x366FF40
	0x0366FE80 ADDS W31, W9, 0x1
	0x0366FE84 STRH W31, [X19 + 0x5C]
	0x0366FE88 B.EQ 0x366FECC
	0x0366FE8C CMP W9, W10
	0x0366FE90 B.CS 0x366FF98
	0x0366FE94 ADD X8, X8, X9, 0x3, LSL
	0x0366FE98 LDR X2, [X19 + 0x60]
	0x0366FE9C LDR X21, [X8 + 0x20]
	0x0366FEA0 CBNZ X2, 0x366FED8
	0x0366FEA4 CBZ X21, 0x366FF94
	0x0366FEA8 ADRP X8, 0xACE000
	0x0366FEAC LDR X0, [X21 + 0x10]
	0x0366FEB0 LDR X8, [X8 + 0x860]
	0x0366FEB4 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD72000
	007 Move X22, 0xA87000
	008 Move W8, [X21+1898]
	009 Move X22, [X22+632]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA87000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1898], W8
	021 Move X8, [X22]
	022 Move X0, X31
	023 Move X8, [X8+184]
	024 Move X8, [X8]
	025 Move [X19+112], X8
	026 Call Encoding.get_UTF8
	027 Move [X19+120], X0
	028 Move X0, X19
	029 Move X1, X20
	030 Move X2, X31
	031 Call NetworkStreamWrapper..ctor, X0, X1
	032 Move X0, [X19+120]
	033 Compare X0, 0
	034 JumpIfEqual {46}
	035 Move X8, [X0]
	036 Move X9, [X8+824]
	037 Move X1, [X8+832]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move [X19+128], X0
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return 
	046 Call 0x1C17F20

Method: System.Void Abort(System.Exception e)

Disassembly:
	0x0366FEB8 LDR X1, [X8]
	0x0366FEBC BL 0x321BA08
	0x0366FEC0 TBNZ X0, 0x0, 0x366FF20
	0x0366FEC4 LDR X2, [X19 + 0x60]
	0x0366FEC8 B 0x366FED8
	0x0366FECC LDR X2, [X19 + 0x60]
	0x0366FED0 CBZ X2, 0x366FF94
	0x0366FED4 MOV X21, X31
	0x0366FED8 LDR X8, [X19]
	0x0366FEDC MOV X0, X19
	0x0366FEE0 MOV X1, X21
	0x0366FEE4 MOV W3, W31
	0x0366FEE8 LDR X9, [X8 + 0x3E8]
	0x0366FEEC LDR X5, [X8 + 0x3F0]
	0x0366FEF0 MOV X4, X20
	0x0366FEF4 BLR X9
	0x0366FEF8 CMP W0, 0x4
	0x0366FEFC B.HI 0x366FF40
	0x0366FF00 ADRP X9, 0xFFFFFFFFFD528000
	0x0366FF04 MOV W8, W0
	0x0366FF08 ADD X9, X9, 0x794
	0x0366FF0C ADR X10, 0x14
	0x0366FF10 LDRB W11, [X9, X8, LSL]
	0x0366FF14 ADD X10, X10, X11, 0x2, LSL
	0x0366FF18 MOVZ W0, 0x1
	0x0366FF1C BR X10
	0x0366FF20 LDR W8, [X19 + 0x58]
	0x0366FF24 MOVZ W9, 0x101
	0x0366FF28 MOV W0, W31
	0x0366FF2C STR X31, [X19 + 0x60]
	0x0366FF30 ADD W8, W8, 0x1
	0x0366FF34 STRH W9, [X19 + 0x5C]
	0x0366FF38 STR W8, [X19 + 0x58]
	0x0366FF3C B 0x366FF44
	0x0366FF40 MOV W0, W31
	0x0366FF44 LDP X20, X19, [X31 + 0x10]
	0x0366FF48 LDP X30, X21, [X31], #0x20
	0x0366FF4C RET
	0x0366FF50 MOVZ W8, 0x1
	0x0366FF54 MOV W0, W31
	0x0366FF58 STR X31, [X19 + 0x60]
	0x0366FF5C STRB W8, [X19 + 0x5C]
	0x0366FF60 B 0x366FF44
	0x0366FF64 LDRB W8, [X19 + 0x48]
	0x0366FF68 MOVZ W0, 0x1
	0x0366FF6C STR X31, [X19 + 0x60]
	0x0366FF70 STRB W0, [X19 + 0x5C]
	0x0366FF74 CBZ W8, 0x366FF44
	0x0366FF78 MOV X0, X19
	0x0366FF7C BL 0x366F2DC
	0x0366FF80 LDR X1, [X20]
	0x0366FF84 MOV X0, X19
	0x0366FF88 BL 0x366F134
	0x0366FF8C MOVZ W0, 0x1
	0x0366FF90 B 0x366FF44
	0x0366FF94 BL 0x1C16F20
	0x0366FF98 BL 0x1C16F28
	0x0366FF9C ADRP X0, 0xA86000
	0x0366FFA0 LDR X20, [X19 + 0x68]
	0x0366FFA4 LDR X0, [X0 + 0x278]
	0x0366FFA8 BL 0x1C16D08
	0x0366FFAC LDR X8, [X0 + 0xB8]
	0x0366FFB0 MOV X0, X20
	0x0366FFB4 MOV X2, X31
	0x0366FFB8 LDR X1, [X8]
	0x0366FFBC BL 0x3226EF8
	0x0366FFC0 TBZ X0, 0x0, 0x366FFEC
	0x0366FFC4 ADRP X0, 0xAAF000
	0x0366FFC8 LDR X21, [X19 + 0x68]
	0x0366FFCC LDR X0, [X0 + 0x330]
	0x0366FFD0 BL 0x1C16D08
	0x0366FFD4 BL 0x1C16F10
	0x0366FFD8 MOV X1, X21
	0x0366FFDC MOV X2, X31
	0x0366FFE0 MOV X20, X0
	0x0366FFE4 BL 0x367E910
	0x0366FFE8 B 0x367000C
	0x0366FFEC ADRP X0, 0xACE000
	0x0366FFF0 LDR X0, [X0 + 0x880]
	0x0366FFF4 BL 0x1C16D08
	0x0366FFF8 MOVZ W2, 0xB
	0x0366FFFC MOV X1, X0
	0x03670000 MOV X3, X31
	0x03670004 BL 0x366F7C4
	0x03670008 MOV X20, X0
	0x0367000C LDR X8, [X19]
	0x03670010 MOV X0, X19
	0x03670014 MOV X1, X20
	0x03670018 LDR X9, [X8 + 0x3B8]
	0x0367001C LDR X2, [X8 + 0x3C0]
	0x03670020 BLR X9
	0x03670024 ADRP X0, 0xACD000
	0x03670028 LDR X0, [X0 + 0x888]
	0x0367002C BL 0x1C16D08
	0x03670030 MOV X1, X0
	0x03670034 MOV X0, X20
	0x03670038 BL 0x1C16DEC
	0x0367003C MOV W0, W31
	0x03670040 RET
	0x03670044 STP X30, X21, [X31 - 0x20]!
	0x03670048 STP X20, X19, [X31 + 0x10]
	0x0367004C ADRP X19, 0xD70000
	0x03670050 LDRB W8, [X19 + 0x773]
	0x03670054 MOV X20, X0
	0x03670058 TBNZ X8, 0x0, 0x367007C
	0x0367005C ADRP X0, 0xAAB000
	0x03670060 LDR X0, [X0 + 0x718]
	0x03670064 BL 0x1C16CF4
	0x03670068 ADRP X0, 0xACD000
	0x0367006C LDR X0, [X0 + 0x868]
	0x03670070 BL 0x1C16CF4
	0x03670074 MOVZ W8, 0x1
	0x03670078 STRB W8, [X19 + 0x773]
	0x0367007C CBZ X20, 0x36702D4
	0x03670080 ADRP X10, 0xAAB000
	0x03670084 LDR X8, [X20]
	0x03670088 LDR X10, [X10 + 0x718]
	0x0367008C LDRH W9, [X8 + 0x12E]
	0x03670090 LDR X1, [X10]
	0x03670094 CBZ X9, 0x36700B8
	0x03670098 LDR X10, [X8 + 0xB0]
	0x0367009C ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD72000
	007 Move X21, 0xACF000
	008 Move W8, [X22+1899]
	009 Move X21, [X21+1128]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xACF000
	017 Move X0, [X0+1128]
	018 Call 0x1C17CF4
	019 Move X0, 0xACF000
	020 Move X0, [X0+2064]
	021 Call 0x1C17CF4
	022 Move X0, 0xAC9000
	023 Move X0, [X0+2816]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1899], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Call NetEventSource.get_IsEnabled
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {50}
	037 Move X0, [X21]
	038 Move X22, 0xACF000
	039 Move X21, 0xAC9000
	040 Move W8, [X0+224]
	041 Move X22, [X22+2064]
	042 Move X21, [X21+2816]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X1, [X22]
	047 Move X2, [X21]
	048 Move X0, X19
	049 Call NetEventSource.Info, X0, X1, X2
	050 Move [X31+12], W31
	051 Add X1, X31, 12
	052 Move X0, X19
	053 Move X2, X31
	054 Call Monitor.Enter, X0, X1
	055 Move W8, [X19+73]
	056 Compare W8, 0
	057 JumpIfEqual {60}
	058 Move X21, X31
	059 Move W22, 4
	060 Move W8, 1
	061 Move X21, X31
	062 Move [X19+73], W8
	063 Move W22, 5
	064 Move W8, [X31+12]
	065 Compare W8, 0
	066 JumpIfEqual {70}
	067 Move X0, X19
	068 Move X1, X31
	069 Call Monitor.Exit, X0
	070 Compare X21, 0
	071 JumpIfNotEqual {91}
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Compare W22, 0
	074 JumpIfNotEqual {85}
	075 Move X0, X19
	076 Move W1, W31
	077 Move X2, X31
	078 Call NetworkStreamWrapper.Close, X0, X1
	079 Move X21, X31
	080 Move X0, X19
	081 Move X1, X20
	082 Call CommandStream.InvokeRequestCallback, X0, X1
	083 Compare X21, 0
	084 JumpIfNotEqual {91}
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Return 
	091 Move X0, X21
	092 Call 0x1C17F18
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X22, X0
	095 Move X0, X22
	096 Call 0x3EB2AD0
	097 Move X21, [X0]
	098 Call 0x3EB2AE0
	099 Move X21, X31
	100 Move X22, X0
	101 Compare X20, 0
	102 JumpIfNotEqual {106}
	103 Move X0, X19
	104 Move X1, X31
	105 Call CommandStream.InvokeRequestCallback, X0, X1
	106 Move X0, X19
	107 Move X1, X20
	108 Call CommandStream.InvokeRequestCallback, X0, X1
	109 Compare X21, 0
	110 JumpIfEqual {130}
	111 Move X0, X21
	112 Call 0x1C17F18
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X22, X0
	115 Move X0, X22
	116 Call 0x3EB2AD0
	117 Move X21, [X0]
	118 Call 0x3EB2AE0
	119 Move W22, W31
	120 Move X21, X31
	121 Move X22, X0
	122 Move W8, [X31+12]
	123 Compare W8, 0
	124 JumpIfEqual {128}
	125 Move X0, X19
	126 Move X1, X31
	127 Call Monitor.Exit, X0
	128 Compare X21, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X22
	131 Call 0x1D2D690
	132 Move X0, X21
	133 Call 0x1C17F18
	134 Call 0x1991590

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x036700A0 LDUR X11, [X10 - 0x8]
	0x036700A4 CMP X11, X1
	0x036700A8 B.EQ 0x36700C8
	0x036700AC SUBS X9, X9, 0x1
	0x036700B0 ADD X10, X10, 0x10
	0x036700B4 B.NE 0x36700A0
	0x036700B8 MOVZ W2, 0x2
	0x036700BC MOV X0, X20
	0x036700C0 BL 0x1C5C788
	0x036700C4 B 0x36700D8
	0x036700C8 LDR W9, [X10]
	0x036700CC ADD W9, W9, 0x2
	0x036700D0 ADD X8, X8, W9, 0x4, SXTW
	0x036700D4 ADD X0, X8, 0x138
	0x036700D8 LDP X8, X1, [X0]
	0x036700DC MOV X0, X20
	0x036700E0 BLR X8
	0x036700E4 MOV X19, X0
	0x036700E8 CBZ X0, 0x367017C
	0x036700EC ADRP X9, 0xACD000
	0x036700F0 LDR X9, [X9 + 0x868]
	0x036700F4 LDR X8, [X19]
	0x036700F8 LDR X1, [X9]
	0x036700FC LDRB W10, [X8 + 0x130]
	0x03670100 LDRB W9, [X1 + 0x130]
	0x03670104 CMP W10, W9
	0x03670108 B.CC 0x3670174
	0x0367010C LDR X8, [X8 + 0xC8]
	0x03670110 ADD X8, X8, X9, 0x3, LSL
	0x03670114 LDUR X8, [X8 - 0x8]
	0x03670118 CMP X8, X1
	0x0367011C B.NE 0x3670174
	0x03670120 LDR X0, [X19 + 0x28]
	0x03670124 CBZ X0, 0x3670180
	0x03670128 LDR X8, [X0]
	0x0367012C LDR X9, [X8 + 0x2C8]
	0x03670130 LDR X2, [X8 + 0x2D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD71000
	006 Move X20, 0xACE000
	007 Move W8, [X21+1900]
	008 Move X20, [X20+1128]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xACE000
	015 Move X0, [X0+1128]
	016 Call 0x1C17CF4
	017 Move X0, 0xACE000
	018 Move X0, [X0+2072]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1900], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call NetEventSource.get_IsEnabled
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {43}
	032 Move X0, [X20]
	033 Move X20, 0xACE000
	034 Move W8, [X0+224]
	035 Move X20, [X20+2072]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X2, [X20]
	040 Move X0, X19
	041 Move X1, X31
	042 Call NetEventSource.Info, X0, X1, X2
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X1, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]

Method: System.Void InvokeRequestCallback(System.Object obj)

Disassembly:
	0x03670134 MOV X1, X20
	0x03670138 BLR X9
	0x0367013C MOV W20, W0
	0x03670140 CBNZ W0, 0x3670154
	0x03670144 LDR X0, [X19 + 0x28]
	0x03670148 CBZ X0, 0x3670188
	0x0367014C MOV X1, X31
	0x03670150 BL 0x367B0B4
	0x03670154 LDR X0, [X19 + 0x28]
	0x03670158 CBZ X0, 0x3670184
	0x0367015C MOV X1, X19
	0x03670160 MOV W2, W20
	0x03670164 BL 0x367030C
	0x03670168 LDP X20, X19, [X31 + 0x10]
	0x0367016C LDP X30, X21, [X31], #0x20
	0x03670170 RET
	0x03670174 MOV X0, X19
	0x03670178 BL 0x1C171E0
	0x0367017C BL 0x1C16F20
	0x03670180 BL 0x1C16F20
	0x03670184 BL 0x1C16F20
	0x03670188 BL 0x1C16F20
	0x0367018C B 0x3670194
	0x03670190 B 0x3670194
	0x03670194 MOV X21, X1
	0x03670198 MOV X20, X0
	0x0367019C CMP W21, 0x1
	0x036701A0 B.NE 0x3670274
	0x036701A4 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD71000
	006 Move W8, [X21+1901]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xACE000
	014 Move X0, [X0+2080]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1901], W8
	018 Move X0, [X20+64]
	019 Compare X0, 0
	020 JumpIfEqual {34}
	021 Move X8, 0xACE000
	022 Move X8, [X8+2080]
	023 Move X1, [X8]
	024 Move X8, [X0]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X1, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call FtpWebRequest.RequestCallback, X0, X1
	033 Return 
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 
	039 Call 0x1C181E0

Method: System.Boolean get_RecoverableFailure()

Disassembly:
	0x036701A8 BL 0x3EB1AD0
	0x036701AC MOV X20, X0

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void MarkAsRecoverableFailure()

Disassembly:
	0x036701B0 ADRP X0, 0xAB1000
	0x036701B4 LDR X0, [X0 + 0x7A8]
	0x036701B8 BL 0x1C16D08
	0x036701BC LDR X8, [X20]
	0x036701C0 LDR X1, [X8]
	0x036701C4 BL 0x1C17270

ISIL:
	001 Move W8, [X0+88]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 1
	004 Move [X0+56], W8
	005 Return 

Method: System.IO.Stream SubmitRequest(System.Net.WebRequest request, System.Boolean isAsync, System.Boolean readInitalResponseOnConnect)

Disassembly:
	0x036701C8 MOV W21, W0
	0x036701CC TBZ X0, 0x0, 0x36701E8
	0x036701D0 LDR X20, [X20]
	0x036701D4 BL 0x3EB1AE0
	0x036701D8 TBZ X21, 0x0, 0x3670228
	0x036701DC LDR X8, [X19 + 0x28]
	0x036701E0 CBNZ X8, 0x3670230
	0x036701E4 BL 0x1C16F20
	0x036701E8 ADRP X0, 0xA89000
	0x036701EC LDR X0, [X0 + 0xCC0]
	0x036701F0 BL 0x1C16D08
	0x036701F4 LDR X8, [X20]
	0x036701F8 LDR X1, [X8]
	0x036701FC BL 0x1C17270
	0x03670200 TBNZ X0, 0x0, 0x36701D0
	0x03670204 MOVZ W0, 0x8
	0x03670208 BL 0x3EB1AF0
	0x0367020C LDR X8, [X20]
	0x03670210 STR X8, [X0]
	0x03670214 ADRP X1, 0x844000
	0x03670218 ADD X1, X1, 0xE58
	0x0367021C MOV X2, X31
	0x03670220 BL 0x3EB1B00
	0x03670224 B 0x36702F8
	0x03670228 MOV X0, X20
	0x0367022C BL 0x1C16F18
	0x03670230 LDR W9, [X8 + 0x58]
	0x03670234 CMP W9, 0x1
	0x03670238 B.GT 0x3670244
	0x0367023C MOVZ W9, 0x1
	0x03670240 STRB W9, [X8 + 0x38]
	0x03670244 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move X22, X1
	008 Move W20, W3
	009 Move W21, W2
	010 Move X9, [X8+968]
	011 Move X8, [X8+976]
	012 Move X19, X0
	013 Move X1, X8
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X8, [X19]
	016 Move X0, X19
	017 Move X1, X22
	018 Move X9, [X8+984]
	019 Move X2, [X8+992]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X2, X0
	022 And W3, W21, 1
	023 Move X0, X19
	024 Move X1, X22
	025 Call CommandStream.InitCommandPipeline, X0, X1, X2, X3
	026 Move TEMP, X20
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {35}
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W8, TEMP
	033 Move [X19+93], W31
	034 Move [X19+88], W8
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Call CommandStream.ContinueCommandPipeline, X0
	042 Return X0

Method: System.Void ClearState()

Disassembly:
	0x036707AC BL 0x3EB1AD0
	0x036707B0 MOV X20, X0
	0x036707B4 ADRP X0, 0xAB1000
	0x036707B8 LDR X0, [X0 + 0x7A8]

ISIL:
	001 Move X1, X31
	002 Move X2, X31
	003 Move W3, W31
	004 Call CommandStream.InitCommandPipeline, X0, X1, X2, X3
	005 Return 

Method: System.Net.CommandStream/PipelineEntry[] BuildCommandsList(System.Net.WebRequest request)

Disassembly:
	0x036707BC BL 0x1C16D08
	0x036707C0 LDR X8, [X20]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Exception GenerateException(System.String message, System.Net.WebExceptionStatus status, System.Exception innerException)

Disassembly:
	0x036707C4 LDR X1, [X8]
	0x036707C8 BL 0x1C17270
	0x036707CC TBZ X0, 0x0, 0x36707F4
	0x036707D0 LDR X20, [X20]
	0x036707D4 BL 0x3EB1AE0
	0x036707D8 LDR W8, [X19 + 0x58]
	0x036707DC CMP W8, 0x1
	0x036707E0 B.GT 0x36707EC
	0x036707E4 MOVZ W8, 0x1
	0x036707E8 STRB W8, [X19 + 0x38]
	0x036707EC MOV X0, X20
	0x036707F0 BL 0x1C16F18
	0x036707F4 ADRP X0, 0xA89000
	0x036707F8 LDR X0, [X0 + 0xCC0]
	0x036707FC BL 0x1C16D08
	0x03670800 LDR X8, [X20]
	0x03670804 LDR X1, [X8]
	0x03670808 BL 0x1C17270
	0x0367080C TBZ X0, 0x0, 0x3670820
	0x03670810 LDR X19, [X20]
	0x03670814 BL 0x3EB1AE0
	0x03670818 MOV X0, X19
	0x0367081C BL 0x1C16F18
	0x03670820 MOVZ W0, 0x8
	0x03670824 BL 0x3EB1AF0
	0x03670828 LDR X8, [X20]
	0x0367082C STR X8, [X0]
	0x03670830 ADRP X1, 0x844000
	0x03670834 ADD X1, X1, 0xE58
	0x03670838 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD71000
	008 Move X23, 0xAAF000
	009 Move W8, [X22+1902]
	010 Move X23, [X23+816]
	011 Move X20, X3
	012 Move W19, W2
	013 Move X21, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAAF000
	019 Move X0, [X0+816]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1902], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X21
	026 Move X2, X20
	027 Move W3, W19
	028 Move X4, X31
	029 Move X5, X31
	030 Move X22, X0
	031 Call WebException..ctor, X0, X1, X2, X3, X4
	032 Move X0, X22
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return X0

Method: System.Exception GenerateException(System.Net.FtpStatusCode code, System.String statusDescription, System.Exception innerException)

Disassembly:
	0x0367083C BL 0x3EB1B00
	0x03670840 MOV X20, X0
	0x03670844 BL 0x3EB1AE0
	0x03670848 MOV X0, X20
	0x0367084C BL 0x1D2C690
	0x03670850 BL 0x1990590
	0x03670854 SUB X31, X31, 0x30
	0x03670858 STP X30, X21, [X31 + 0x10]
	0x0367085C STP X20, X19, [X31 + 0x20]
	0x03670860 ADRP X19, 0xD70000
	0x03670864 LDRB W8, [X19 + 0x774]
	0x03670868 MOV X20, X0
	0x0367086C TBNZ X8, 0x0, 0x3670890
	0x03670870 ADRP X0, 0xACD000
	0x03670874 LDR X0, [X0 + 0x828]
	0x03670878 BL 0x1C16CF4
	0x0367087C ADRP X0, 0xAAB000
	0x03670880 LDR X0, [X0 + 0x718]
	0x03670884 BL 0x1C16CF4
	0x03670888 MOVZ W8, 0x1
	0x0367088C STRB W8, [X19 + 0x774]
	0x03670890 STR X31, [X31 + 0x8]
	0x03670894 CBZ X20, 0x3670AD0
	0x03670898 ADRP X10, 0xAAB000
	0x0367089C LDR X8, [X20]
	0x036708A0 LDR X10, [X10 + 0x718]
	0x036708A4 LDRH W9, [X8 + 0x12E]
	0x036708A8 LDR X1, [X10]
	0x036708AC CBZ X9, 0x36708D0
	0x036708B0 LDR X10, [X8 + 0xB0]
	0x036708B4 ADD X10, X10, 0x8
	0x036708B8 LDUR X11, [X10 - 0x8]
	0x036708BC CMP X11, X1
	0x036708C0 B.EQ 0x36708E0
	0x036708C4 SUBS X9, X9, 0x1
	0x036708C8 ADD X10, X10, 0x10
	0x036708CC B.NE 0x36708B8
	0x036708D0 MOVZ W2, 0x2
	0x036708D4 MOV X0, X20
	0x036708D8 BL 0x1C5C788
	0x036708DC B 0x36708F0
	0x036708E0 LDR W9, [X10]
	0x036708E4 ADD W9, W9, 0x2
	0x036708E8 ADD X8, X8, W9, 0x4, SXTW
	0x036708EC ADD X0, X8, 0x138
	0x036708F0 LDP X8, X1, [X0]
	0x036708F4 MOV X0, X20
	0x036708F8 BLR X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD71000
	009 Move X23, 0xACE000
	010 Move X22, 0xAAF000
	011 Move W8, [X24+1903]
	012 Move X23, [X23+2136]
	013 Move X22, [X22+816]
	014 Move X19, X3
	015 Move X20, X2
	016 Move W21, W1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xAAF000
	022 Move X0, [X0+816]
	023 Call 0x1C17CF4
	024 Move X0, 0xACE000
	025 Move X0, [X0+2136]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1903], W8
	029 Move W0, W21
	030 Move X1, X20
	031 Move X2, X31
	032 Call NetRes.GetWebStatusCodeString, X0, X1
	033 Move X8, [X23]
	034 Move X1, X0
	035 Move X2, X31
	036 Move X0, X8
	037 Call SR.Format, X0, X1
	038 Move X8, [X22]
	039 Move X20, X0
	040 Move X0, X8
	041 Call 0x1C17F10
	042 Move W3, 7
	043 Move X1, X20
	044 Move X2, X19
	045 Move X4, X31
	046 Move X5, X31
	047 Move X21, X0
	048 Call WebException..ctor, X0, X1, X2, X3, X4
	049 Move X0, X21
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Return X0

Method: System.Void InitCommandPipeline(System.Net.WebRequest request, System.Net.CommandStream/PipelineEntry[] commands, System.Boolean isAsync)

Disassembly:
	0x03670248 BL 0x1C16F18
	0x0367024C B 0x367026C
	0x03670250 B 0x367026C
	0x03670254 B 0x367026C
	0x03670258 MOV X21, X1
	0x0367025C MOV X20, X0
	0x03670260 BL 0x3EB1AE0
	0x03670264 B 0x3670274
	0x03670268 B 0x367026C
	0x0367026C MOV X21, X1
	0x03670270 MOV X20, X0
	0x03670274 CMP W21, 0x1
	0x03670278 B.NE 0x3670300
	0x0367027C MOV X0, X20
	0x03670280 BL 0x3EB1AD0
	0x03670284 MOV X20, X0
	0x03670288 ADRP X0, 0xA83000
	0x0367028C LDR X0, [X0 + 0x7D0]
	0x03670290 BL 0x1C16D08
	0x03670294 LDR X8, [X20]
	0x03670298 LDR X1, [X8]
	0x0367029C BL 0x1C17270
	0x036702A0 TBZ X0, 0x0, 0x36702D8
	0x036702A4 LDR X20, [X20]
	0x036702A8 BL 0x3EB1AE0
	0x036702AC CBZ X19, 0x36702D4
	0x036702B0 LDR X0, [X19 + 0x28]
	0x036702B4 CBZ X0, 0x36702D4
	0x036702B8 LDR X8, [X0]
	0x036702BC MOV X1, X20
	0x036702C0 LDP X20, X19, [X31 + 0x10]
	0x036702C4 LDR X3, [X8 + 0x3B8]
	0x036702C8 LDR X2, [X8 + 0x3C0]
	0x036702CC LDP X30, X21, [X31], #0x20
	0x036702D0 BR X3
	0x036702D4 BL 0x1C16F20
	0x036702D8 MOVZ W0, 0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD71000
	009 Move X23, 0xA86000
	010 Move W8, [X24+1904]
	011 Move X23, [X23+632]
	012 Move W22, W3
	013 Move X21, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA86000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1904], W8
	025 And W8, W22, 1
	026 Move W9, 257
	027 Move [X19+80], X21
	028 Move [X19+88], W31
	029 Move [X19+64], X20
	030 Move [X19+73], W31
	031 Move [X19+96], X31
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Move [X19+72], W8
	034 Move [X19+56], W31
	035 Move X8, [X23]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X8, [X8+184]
	041 Move X8, [X8]
	042 Move [X19+104], X8
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X30, [X31+64]
	046 Return 

Method: System.Void CheckContinuePipeline()

Disassembly:
	0x036708FC MOV X19, X0
	0x03670900 CBZ X0, 0x3670984
	0x03670904 ADRP X9, 0xACD000
	0x03670908 LDR X9, [X9 + 0x828]
	0x0367090C LDR X8, [X19]
	0x03670910 LDR X1, [X9]
	0x03670914 LDRB W10, [X8 + 0x130]
	0x03670918 LDRB W9, [X1 + 0x130]
	0x0367091C CMP W10, W9
	0x03670920 B.CC 0x367097C
	0x03670924 LDR X8, [X8 + 0xC8]
	0x03670928 ADD X8, X8, X9, 0x3, LSL
	0x0367092C LDUR X8, [X8 - 0x8]
	0x03670930 CMP X8, X1
	0x03670934 B.NE 0x367097C
	0x03670938 LDR X8, [X19]
	0x0367093C LDR X9, [X8 + 0x308]
	0x03670940 LDR X2, [X8 + 0x310]
	0x03670944 MOV X0, X19
	0x03670948 MOV X1, X20
	0x0367094C BLR X9
	0x03670950 STR X31, [X31 + 0x8]
	0x03670954 ADD X1, X31, 0x8
	0x03670958 MOV X0, X19
	0x0367095C BL 0x366F9C0
	0x03670960 TBNZ X0, 0x0, 0x367096C
	0x03670964 MOV X0, X19
	0x03670968 BL 0x366F2DC
	0x0367096C LDP X20, X19, [X31 + 0x20]
	0x03670970 LDP X30, X21, [X31 + 0x10]
	0x03670974 ADD X31, X31, 0x30
	0x03670978 RET
	0x0367097C MOV X0, X19
	0x03670980 BL 0x1C171E0
	0x03670984 BL 0x1C16F20
	0x03670988 B 0x367098C
	0x0367098C MOV X21, X1
	0x03670990 MOV X20, X0
	0x03670994 B 0x3670A78
	0x03670998 MOV X21, X1
	0x0367099C CMP W21, 0x1
	0x036709A0 MOV X20, X0
	0x036709A4 B.NE 0x3670A78
	0x036709A8 MOV X0, X20
	0x036709AC BL 0x3EB1AD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+72]
	005 Compare W8, 0
	006 JumpIfNotEqual {9}
	007 Move X19, X0
	008 Call CommandStream.ContinueCommandPipeline, X0
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, X0
	015 Move X0, X20
	016 Call 0x3EB2AD0
	017 Move X20, X0
	018 Move X0, 0xA84000
	019 Move X0, [X0+2000]
	020 Call 0x1C17D08
	021 Move X8, [X20]
	022 Move X1, [X8]
	023 Call 0x1C18270
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {39}
	028 Move X20, [X20]
	029 Call 0x3EB2AE0
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X1, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X3, [X8+952]
	036 Move X2, [X8+960]
	037 Move X30, [X31+32]
	038 CallNoReturn X3
	039 Move W0, 8
	040 Call 0x3EB2AF0
	041 Move X8, [X20]
	042 Move [X0], X8
	043 Move X1, 0x845000
	044 Add X1, X1, 3672
	045 Move X2, X31
	046 Call 0x3EB2B00
	047 Move X20, X0
	048 Call 0x3EB2AE0
	049 Move X0, X20
	050 Call 0x1D2D690
	051 Call 0x1991590

Method: System.IO.Stream ContinueCommandPipeline()

Disassembly:
	0x036702DC BL 0x3EB1AF0
	0x036702E0 LDR X8, [X20]
	0x036702E4 STR X8, [X0]
	0x036702E8 ADRP X1, 0x844000
	0x036702EC ADD X1, X1, 0xE58
	0x036702F0 MOV X2, X31
	0x036702F4 BL 0x3EB1B00
	0x036702F8 MOV X20, X0
	0x036702FC BL 0x3EB1AE0
	0x03670300 MOV X0, X20
	0x03670304 BL 0x1D2C690
	0x03670308 BL 0x1990590
	0x0367030C SUB X31, X31, 0x50
	0x03670310 STP X30, X25, [X31 + 0x10]
	0x03670314 STP X24, X23, [X31 + 0x20]
	0x03670318 STP X22, X21, [X31 + 0x30]
	0x0367031C STP X20, X19, [X31 + 0x40]
	0x03670320 ADRP X22, 0xD70000
	0x03670324 LDRB W8, [X22 + 0x776]
	0x03670328 MOV W21, W2
	0x0367032C MOV X20, X1
	0x03670330 MOV X19, X0
	0x03670334 TBNZ X8, 0x0, 0x3670394
	0x03670338 ADRP X0, 0xA8C000
	0x0367033C LDR X0, [X0 + 0x8D8]
	0x03670340 BL 0x1C16CF4
	0x03670344 ADRP X0, 0xACD000
	0x03670348 LDR X0, [X0 + 0x828]
	0x0367034C BL 0x1C16CF4
	0x03670350 ADRP X0, 0xACD000
	0x03670354 LDR X0, [X0 + 0x468]
	0x03670358 BL 0x1C16CF4
	0x0367035C ADRP X0, 0xA83000
	0x03670360 LDR X0, [X0 + 0x9D0]
	0x03670364 BL 0x1C16CF4
	0x03670368 ADRP X0, 0xA85000
	0x0367036C LDR X0, [X0 + 0x278]
	0x03670370 BL 0x1C16CF4
	0x03670374 ADRP X0, 0xACD000
	0x03670378 LDR X0, [X0 + 0x890]
	0x0367037C BL 0x1C16CF4
	0x03670380 ADRP X0, 0xACD000
	0x03670384 LDR X0, [X0 + 0x898]
	0x03670388 BL 0x1C16CF4
	0x0367038C MOVZ W8, 0x1
	0x03670390 STRB W8, [X22 + 0x776]
	0x03670394 MOVN W8, 0x0
	0x03670398 STR X31, [X31]
	0x0367039C STP W31, W8, [X31 + 0x8]
	0x036703A0 CBZ X20, 0x3670738
	0x036703A4 LDR W8, [X20 + 0x18]
	0x036703A8 STR W8, [X31 + 0x8]
	0x036703AC LDR X1, [X19 + 0x70]
	0x036703B0 CBZ X1, 0x3670738
	0x036703B4 ADRP X23, 0xACD000
	0x036703B8 ADRP X24, 0xA8C000
	0x036703BC ADRP X25, 0xA85000
	0x036703C0 LDR X23, [X23 + 0x828]
	0x036703C4 LDR X24, [X24 + 0x8D8]
	0x036703C8 LDR X25, [X25 + 0x278]
	0x036703CC LDR W8, [X1 + 0x10]
	0x036703D0 CMP W8, 0x1
	0x036703D4 B.LT 0x367048C
	0x036703D8 LDR X8, [X20 + 0x10]
	0x036703DC CBZ X8, 0x3670738
	0x036703E0 LDR X0, [X8 + 0x20]
	0x036703E4 CBZ X0, 0x3670738
	0x036703E8 MOV X2, X31
	0x036703EC BL 0x32333E0
	0x036703F0 LDR X8, [X25]
	0x036703F4 LDR X9, [X19]
	0x036703F8 ADD X2, X31, 0x8
	0x036703FC ADD X3, X31, 0xC
	0x03670400 LDR X8, [X8 + 0xB8]
	0x03670404 MOV X0, X19
	0x03670408 LDR X8, [X8]
	0x0367040C STR X8, [X19 + 0x70]
	0x03670410 LDR X1, [X20 + 0x10]
	0x03670414 LDR X8, [X9 + 0x3F8]
	0x03670418 LDR X4, [X9 + 0x400]
	0x0367041C BLR X8
	0x03670420 TBZ X0, 0x0, 0x367073C
	0x03670424 LDR W8, [X31 + 0xC]
	0x03670428 TBZ X8, 0x1F, 0x36705EC
	0x0367042C LDR W8, [X31 + 0x8]
	0x03670430 LDR X21, [X20 + 0x20]
	0x03670434 STR W8, [X20 + 0x18]
	0x03670438 LDRB W8, [X19 + 0x48]
	0x0367043C CBNZ W8, 0x36705A4
	0x03670440 CBZ X21, 0x3670774
	0x03670444 LDR X8, [X19]
	0x03670448 LDR W3, [X21 + 0x18]
	0x0367044C LDR X9, [X8 + 0x358]
	0x03670450 LDR X4, [X8 + 0x360]
	0x03670454 MOV X0, X19
	0x03670458 MOV X1, X21
	0x0367045C MOV W2, W31
	0x03670460 BLR X9
	0x03670464 MOV W21, W0
	0x03670468 CBNZ W0, 0x3670478
	0x0367046C MOV X0, X19
	0x03670470 MOV X1, X31
	0x03670474 BL 0x367B0B4
	0x03670478 LDR W8, [X20 + 0x18]
	0x0367047C STR W8, [X31 + 0x8]
	0x03670480 LDR X1, [X19 + 0x70]
	0x03670484 CBNZ X1, 0x36703CC
	0x03670488 B 0x3670738
	0x0367048C CMP W21, 0x0
	0x03670490 B.LE 0x367073C
	0x03670494 LDR X0, [X19 + 0x80]
	0x03670498 CBZ X0, 0x3670738
	0x0367049C LDR X8, [X0]
	0x036704A0 LDR X1, [X20 + 0x20]
	0x036704A4 MOV W2, W31
	0x036704A8 MOV W3, W21
	0x036704AC LDP X9, X4, [X8 + 0x188]
	0x036704B0 BLR X9
	0x036704B4 LDR X8, [X24]
	0x036704B8 MOV W1, W0
	0x036704BC MOV X0, X8
	0x036704C0 BL 0x1C16D6C
	0x036704C4 LDR X8, [X19 + 0x80]
	0x036704C8 CBZ X8, 0x3670738
	0x036704CC LDR X9, [X8]
	0x036704D0 LDR X1, [X20 + 0x20]
	0x036704D4 MOV X22, X0
	0x036704D8 MOV X0, X8
	0x036704DC LDP X10, X7, [X9 + 0x1C8]
	0x036704E0 MOV W2, W31
	0x036704E4 MOV W3, W21
	0x036704E8 MOV X4, X22
	0x036704EC MOV W5, W31
	0x036704F0 MOV W6, W31
	0x036704F4 BLR X10
	0x036704F8 MOV W3, W0
	0x036704FC MOV X0, X31
	0x03670500 MOV X1, X22
	0x03670504 MOV W2, W31
	0x03670508 MOV X4, X31
	0x0367050C BL 0x322EAE4
	0x03670510 LDR X8, [X20 + 0x10]
	0x03670514 CBZ X8, 0x3670738
	0x03670518 MOV X21, X0
	0x0367051C LDR X0, [X8 + 0x20]
	0x03670520 CBZ X0, 0x3670738
	0x03670524 MOV X1, X21
	0x03670528 MOV X2, X31
	0x0367052C BL 0x32333E0
	0x03670530 LDR X8, [X19]
	0x03670534 LDR X1, [X20 + 0x10]
	0x03670538 ADD X2, X31, 0x8
	0x0367053C ADD X3, X31, 0xC
	0x03670540 LDR X9, [X8 + 0x3F8]
	0x03670544 LDR X4, [X8 + 0x400]
	0x03670548 MOV X0, X19
	0x0367054C BLR X9
	0x03670550 TBZ X0, 0x0, 0x367073C
	0x03670554 LDR W8, [X31 + 0xC]
	0x03670558 TBNZ X8, 0x1F, 0x367042C
	0x0367055C LDR X8, [X20 + 0x10]
	0x03670560 CBZ X8, 0x3670738
	0x03670564 LDR X0, [X8 + 0x20]
	0x03670568 CBZ X0, 0x3670738
	0x0367056C MOV X1, X31
	0x03670570 BL 0x323260C
	0x03670574 LDR W8, [X31 + 0xC]
	0x03670578 SUB W2, W0, W8
	0x0367057C CMP W2, 0x1
	0x03670580 B.LT 0x3670428
	0x03670584 CBZ X21, 0x3670738
	0x03670588 LDR W8, [X21 + 0x10]
	0x0367058C MOV X0, X21
	0x03670590 MOV X3, X31
	0x03670594 SUB W1, W8, W2
	0x03670598 BL 0x3228DE4
	0x0367059C STR X0, [X19 + 0x70]
	0x036705A0 B 0x3670424
	0x036705A4 CBZ X21, 0x3670778
	0x036705A8 LDR X0, [X23]
	0x036705AC LDR W8, [X0 + 0xE0]
	0x036705B0 CBNZ W8, 0x36705BC
	0x036705B4 BL 0x1C16DFC
	0x036705B8 LDR X0, [X23]
	0x036705BC LDR X8, [X0 + 0xB8]
	0x036705C0 LDR X9, [X19]
	0x036705C4 LDR W3, [X21 + 0x18]
	0x036705C8 LDR X4, [X8 + 0x8]
	0x036705CC LDR X8, [X9 + 0x2B8]
	0x036705D0 LDR X6, [X9 + 0x2C0]
	0x036705D4 MOV X0, X19
	0x036705D8 MOV X1, X21
	0x036705DC MOV W2, W31
	0x036705E0 MOV X5, X20
	0x036705E4 BLR X8
	0x036705E8 B 0x3670720
	0x036705EC LDR X8, [X20 + 0x10]
	0x036705F0 CBZ X8, 0x3670738
	0x036705F4 LDR X0, [X8 + 0x20]
	0x036705F8 CBZ X0, 0x3670738
	0x036705FC LDR X8, [X0]
	0x03670600 LDP X9, X1, [X8 + 0x168]
	0x03670604 BLR X9
	0x03670608 CBZ X0, 0x3670738
	0x0367060C LDR W2, [X31 + 0xC]
	0x03670610 LDR X22, [X20 + 0x10]
	0x03670614 MOV W1, W31
	0x03670618 MOV X3, X31
	0x0367061C MOV X21, X0
	0x03670620 BL 0x3228DE4
	0x03670624 CBZ X22, 0x3670738
	0x03670628 STR X0, [X22 + 0x18]
	0x0367062C ADRP X23, 0xACD000
	0x03670630 LDR X23, [X23 + 0x468]
	0x03670634 LDR X0, [X23]
	0x03670638 LDR W8, [X0 + 0xE0]
	0x0367063C CBNZ W8, 0x3670644
	0x03670640 BL 0x1C16DFC
	0x03670644 BL 0x366A368
	0x03670648 TBZ X0, 0x0, 0x36706F0
	0x0367064C ADRP X8, 0xA83000
	0x03670650 LDR X8, [X8 + 0x9D0]
	0x03670654 MOVZ W1, 0x1
	0x03670658 LDR X0, [X8]
	0x0367065C BL 0x1C16D6C
	0x03670660 LDR W8, [X31 + 0xC]
	0x03670664 MOV X22, X0
	0x03670668 MOV X0, X21
	0x0367066C MOV W1, W31
	0x03670670 SUB W2, W8, 0x2
	0x03670674 MOV X3, X31
	0x03670678 BL 0x3228DE4
	0x0367067C CBZ X22, 0x3670738
	0x03670680 MOV X21, X0
	0x03670684 CBZ X0, 0x367069C
	0x03670688 LDR X8, [X22]
	0x0367068C MOV X0, X21
	0x03670690 LDR X1, [X8 + 0x40]
	0x03670694 BL 0x1C16E00
	0x03670698 CBZ X0, 0x3670780
	0x0367069C LDR W8, [X22 + 0x18]
	0x036706A0 CBZ W8, 0x367077C
	0x036706A4 STR X21, [X22 + 0x20]
	0x036706A8 ADRP X8, 0xACD000
	0x036706AC LDR X8, [X8 + 0x890]
	0x036706B0 MOV X1, X22
	0x036706B4 MOV X2, X31
	0x036706B8 LDR X0, [X8]
	0x036706BC BL 0x32C2F6C
	0x036706C0 LDR X8, [X23]
	0x036706C4 MOV X21, X0
	0x036706C8 LDR W9, [X8 + 0xE0]
	0x036706CC CBNZ W9, 0x36706D8
	0x036706D0 MOV X0, X8
	0x036706D4 BL 0x1C16DFC
	0x036706D8 ADRP X8, 0xACD000
	0x036706DC LDR X8, [X8 + 0x898]
	0x036706E0 MOV X0, X19
	0x036706E4 MOV X1, X21
	0x036706E8 LDR X2, [X8]
	0x036706EC BL 0x366A3CC
	0x036706F0 LDRB W8, [X19 + 0x48]
	0x036706F4 CBZ W8, 0x3670720
	0x036706F8 LDR X8, [X20 + 0x10]
	0x036706FC CBZ X8, 0x3670704
	0x03670700 STR X8, [X19 + 0x60]
	0x03670704 ADD X1, X31, 0x0
	0x03670708 MOV X0, X19
	0x0367070C STR X31, [X31]
	0x03670710 BL 0x366FE38
	0x03670714 TBNZ X0, 0x0, 0x3670720
	0x03670718 MOV X0, X19
	0x0367071C BL 0x366F2DC
	0x03670720 LDP X20, X19, [X31 + 0x40]
	0x03670724 LDP X22, X21, [X31 + 0x30]
	0x03670728 LDP X24, X23, [X31 + 0x20]
	0x0367072C LDP X30, X25, [X31 + 0x10]
	0x03670730 ADD X31, X31, 0x50
	0x03670734 RET
	0x03670738 BL 0x1C16F20
	0x0367073C ADRP X0, 0xACD000
	0x03670740 LDR X0, [X0 + 0x880]
	0x03670744 BL 0x1C16D08
	0x03670748 MOVZ W2, 0xB
	0x0367074C MOV X1, X0
	0x03670750 MOV X3, X31
	0x03670754 BL 0x366F7C4
	0x03670758 MOV X19, X0
	0x0367075C ADRP X0, 0xACD000
	0x03670760 LDR X0, [X0 + 0x8A0]
	0x03670764 BL 0x1C16D08
	0x03670768 MOV X1, X0
	0x0367076C MOV X0, X19
	0x03670770 BL 0x1C16DEC
	0x03670774 BL 0x1C16F20
	0x03670778 BL 0x1C16F20
	0x0367077C BL 0x1C16F28
	0x03670780 BL 0x1C16F44
	0x03670784 MOV X1, X31
	0x03670788 BL 0x1C16DEC
	0x0367078C B 0x367079C
	0x03670790 B 0x367079C
	0x03670794 B 0x367079C
	0x03670798 B 0x367079C
	0x0367079C MOV X20, X0
	0x036707A0 CMP W1, 0x1
	0x036707A4 B.NE 0x3670848
	0x036707A8 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xD71000
	014 Move W8, [X20+1905]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xACE000
	021 Move X0, [X0+2088]
	022 Call 0x1C17CF4
	023 Move X0, 0xACE000
	024 Move X0, [X0+1128]
	025 Call 0x1C17CF4
	026 Move X0, 0xA84000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xACE000
	030 Move X0, [X0+2096]
	031 Call 0x1C17CF4
	032 Move X0, 0xACE000
	033 Move X0, [X0+2104]
	034 Call 0x1C17CF4
	035 Move X0, 0xACE000
	036 Move X0, [X0+2112]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1905], W8
	040 Move X23, 0xACE000
	041 Move X24, 0xA84000
	042 Move X23, [X23+1128]
	043 Move X24, [X24+2512]
	044 Move [X31+24], X31
	045 Move [X31+12], W31
	046 Move X26, 0xACE000
	047 Move X27, 0xACE000
	048 Move X28, 0xACE000
	049 Move W25, [X19+72]
	050 Move X26, [X26+2096]
	051 Move X27, [X27+2112]
	052 Move X28, [X28+2104]
	053 Move X8, [X19+80]
	054 Compare X8, 0
	055 JumpIfEqual {267}
	056 Move W9, [X19+88]
	057 Move W10, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W11, [X19+93]
	060 Compare W11, 0
	061 JumpIfEqual {202}
	062 Move TEMP, X9
	063 And TEMP, TEMP, -2147483648
	064 Compare TEMP, -2147483648
	065 JumpIfEqual {269}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X8, X8, X9
	068 Move X8, [X8+32]
	069 Compare X8, 0
	070 JumpIfEqual {267}
	071 Move X0, [X19+120]
	072 Compare X0, 0
	073 JumpIfEqual {267}
	074 Move X9, [X0]
	075 Move X1, [X8+16]
	076 Move X8, [X9+616]
	077 Move X2, [X9+624]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X8, [X23]
	080 Move X20, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {87}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X8, [X23]
	087 Move X8, [X8+184]
	088 Move X0, [X8]
	089 Compare X0, 0
	090 JumpIfEqual {267}
	091 Move X1, X31
	092 Call EventSource.IsEnabled, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {190}
	097 Move X8, [X19+80]
	098 Compare X8, 0
	099 JumpIfEqual {267}
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Move W10, [X8+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X8, X8, X9
	104 Move X8, [X8+32]
	105 Compare X8, 0
	106 JumpIfEqual {267}
	107 Move X0, [X8+16]
	108 Compare X0, 0
	109 JumpIfEqual {267}
	110 Move W8, [X0+16]
	111 Move W1, W31
	112 Move X3, X31
	113 Subtract W2, W8, 2
	114 Call String.Substring, X0, X1, X2
	115 Move X8, [X19+80]
	116 Compare X8, 0
	117 JumpIfEqual {267}
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Move W10, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X8, X8, X9
	122 Move X8, [X8+32]
	123 Compare X8, 0
	124 JumpIfEqual {267}
	125 Move W8, [X8+24]
	126 Move X21, X0
	127 Move TEMP, X8
	128 And TEMP, TEMP, 8
	129 Compare TEMP, 8
	130 JumpIfNotEqual {147}
	131 Compare X21, 0
	132 JumpIfEqual {267}
	133 Move W1, 32
	134 Move X0, X21
	135 Move X2, X31
	136 Call String.IndexOf, X0, X1
	137 Add W31, W0, 1
	138 Move W2, W0
	139 Move X0, X21
	140 Move W1, W31
	141 Move X3, X31
	142 Call String.Substring, X0, X1, X2
	143 Move X1, [X28]
	144 Move X2, X31
	145 Call String.Concat, X0, X1
	146 Move X21, X0
	147 Move X0, [X23]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Call NetEventSource.get_IsEnabled
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {190}
	157 Move X0, [X24]
	158 Move W1, 1
	159 Call 0x1C17D6C
	160 Compare X0, 0
	161 JumpIfEqual {267}
	162 Move X22, X0
	163 Compare X21, 0
	164 JumpIfEqual {171}
	165 Move X8, [X22]
	166 Move X0, X21
	167 Move X1, [X8+64]
	168 Call 0x1C17E00
	169 Compare X0, 0
	170 JumpIfEqual {283}
	171 Move W8, [X22+24]
	172 Compare W8, 0
	173 JumpIfEqual {268}
	174 Move [X22+32], X21
	175 Move X0, [X26]
	176 Move X1, X22
	177 Move X2, X31
	178 Call FormattableStringFactory.Create, X0, X1
	179 Move X8, [X23]
	180 Move X21, X0
	181 Move W9, [X8+224]
	182 Compare W9, 0
	183 JumpIfNotEqual {186}
	184 Move X0, X8
	185 Call 0x1C17DFC
	186 Move X2, [X27]
	187 Move X0, X19
	188 Move X1, X21
	189 Call NetEventSource.Info, X0, X1, X2
	190 Compare W25, 0
	191 JumpIfNotEqual {232}
	192 Compare X20, 0
	193 JumpIfEqual {282}
	194 Move X8, [X19]
	195 Move W3, [X20+24]
	196 Move X9, [X8+904]
	197 Move X4, [X8+912]
	198 Move X0, X19
	199 Move X1, X20
	200 Move W2, W31
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Add X1, X31, 24
	203 Move X0, X19
	204 Move [X31+24], X31
	205 Call CommandStream.PostSendCommandProcessing, X0, X1
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {53}
	210 Move X0, [X31+24]
	211 Move [X31+12], W31
	212 Add X1, X31, 12
	213 Move X0, X19
	214 Move X2, X31
	215 Call Monitor.Enter, X0, X1
	216 Move X8, [X19]
	217 Move X1, [X8+640]
	218 Move X9, [X8+632]
	219 Move X0, X19
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move X21, X31
	222 Move W8, [X31+12]
	223 Compare W8, 0
	224 JumpIfEqual {228}
	225 Move X0, X19
	226 Move X1, X31
	227 Call Monitor.Exit, X0
	228 Compare X21, 0
	229 JumpIfEqual {253}
	230 Move X0, X21
	231 Call 0x1C17F18
	232 Compare X20, 0
	233 JumpIfEqual {286}
	234 Move X21, 0xACE000
	235 Move X21, [X21+2088]
	236 Move X0, [X21]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {242}
	240 Call 0x1C17DFC
	241 Move X0, [X21]
	242 Move X8, [X0+184]
	243 Move X9, [X19]
	244 Move W3, [X20+24]
	245 Move X4, [X8]
	246 Move X8, [X9+760]
	247 Move X6, [X9+768]
	248 Move X0, X19
	249 Move X1, X20
	250 Move W2, W31
	251 Move X5, X19
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X0, X31
	254 Move X20, [X31+96]
	255 Move X19, [X31+104]
	256 Move X22, [X31+80]
	257 Move X21, [X31+88]
	258 Move X24, [X31+64]
	259 Move X23, [X31+72]
	260 Move X26, [X31+48]
	261 Move X25, [X31+56]
	262 Move X28, [X31+32]
	263 Move X27, [X31+40]
	264 Move X30, [X31+16]
	265 Add X31, X31, 112
	266 Return X0
	267 Call 0x1C17F20
	268 Call 0x1C17F28
	269 Move X0, 0xACE000
	270 Move X0, [X0+2120]
	271 Call 0x1C17D08
	272 Call 0x1C17F10
	273 Move X1, X31
	274 Move X19, X0
	275 Call InternalException..ctor, X0
	276 Move X0, 0xACE000
	277 Move X0, [X0+2128]
	278 Call 0x1C17D08
	279 Move X1, X0
	280 Move X0, X19
	281 Call 0x1C17DEC
	282 Call 0x1C17F20
	283 Call 0x1C17F44
	284 Move X1, X31
	285 Call 0x1C17DEC
	286 Call 0x1C17F20
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X20, X0
	289 Move X0, X20
	290 Call 0x3EB2AD0
	291 Move X21, [X0]
	292 Call 0x3EB2AE0
	293 Move X21, X31
	294 Move X20, X0
	295 Move W8, [X31+12]
	296 Compare W8, 0
	297 JumpIfEqual {301}
	298 Move X0, X19
	299 Move X1, X31
	300 Call Monitor.Exit, X0
	301 Compare X21, 0
	302 JumpIfEqual {352}
	303 Move X0, X21
	304 Call 0x1C17F18
	305 Move X20, X0
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X0, X20
	308 Call 0x3EB2AD0
	309 Move X20, X0
	310 Move X0, 0xAB2000
	311 Move X0, [X0+1960]
	312 Call 0x1C17D08
	313 Move X8, [X20]
	314 Move X1, [X8]
	315 Call 0x1C18270
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfNotEqual {328}
	320 Move X20, [X20]
	321 Call 0x3EB2AE0
	322 Move W8, [X19+88]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move W8, 1
	325 Move [X19+56], W8
	326 Move X0, X20
	327 Call 0x1C17F18
	328 Move X0, 0xA8A000
	329 Move X0, [X0+3264]
	330 Call 0x1C17D08
	331 Move X8, [X20]
	332 Move X1, [X8]
	333 Call 0x1C18270
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {342}
	338 Move X19, [X20]
	339 Call 0x3EB2AE0
	340 Move X0, X19
	341 Call 0x1C17F18
	342 Move W0, 8
	343 Call 0x3EB2AF0
	344 Move X8, [X20]
	345 Move [X0], X8
	346 Move X1, 0x845000
	347 Add X1, X1, 3672
	348 Move X2, X31
	349 Call 0x3EB2B00
	350 Move X20, X0
	351 Call 0x3EB2AE0
	352 Move X0, X20
	353 Call 0x1D2D690
	354 Call 0x1991590

Method: System.Boolean PostSendCommandProcessing(ref System.IO.Stream stream)

Disassembly:
	0x036709C0 LDR X8, [X20]
	0x036709C4 LDR X1, [X8]
	0x036709C8 BL 0x1C17270
	0x036709CC TBZ X0, 0x0, 0x36709D8
	0x036709D0 MOVZ W21, 0x3
	0x036709D4 B 0x36709F8
	0x036709D8 ADRP X0, 0xA89000
	0x036709DC LDR X0, [X0 + 0xCC0]
	0x036709E0 BL 0x1C16D08
	0x036709E4 LDR X8, [X20]
	0x036709E8 LDR X1, [X8]
	0x036709EC BL 0x1C17270
	0x036709F0 TBZ X0, 0x0, 0x3670A20
	0x036709F4 MOVZ W21, 0x4
	0x036709F8 LDR X20, [X20]
	0x036709FC BL 0x3EB1AE0
	0x03670A00 CMP W21, 0x3
	0x03670A04 B.EQ 0x3670A18
	0x03670A08 CMP W21, 0x4
	0x03670A0C B.NE 0x367096C
	0x03670A10 MOV X0, X20
	0x03670A14 BL 0x1C16F18
	0x03670A18 CBNZ X19, 0x3670A44
	0x03670A1C BL 0x1C16F20
	0x03670A20 MOVZ W0, 0x8
	0x03670A24 BL 0x3EB1AF0
	0x03670A28 LDR X8, [X20]
	0x03670A2C STR X8, [X0]
	0x03670A30 ADRP X1, 0x844000
	0x03670A34 ADD X1, X1, 0xE58
	0x03670A38 MOV X2, X31
	0x03670A3C BL 0x3EB1B00
	0x03670A40 B 0x3670AF4
	0x03670A44 LDR W8, [X19 + 0x58]
	0x03670A48 CMP W8, 0x1
	0x03670A4C B.GT 0x3670A58
	0x03670A50 MOVZ W8, 0x1
	0x03670A54 STRB W8, [X19 + 0x38]
	0x03670A58 MOV X0, X20
	0x03670A5C BL 0x1C16F18
	0x03670A60 B 0x367098C
	0x03670A64 B 0x367098C
	0x03670A68 B 0x367098C
	0x03670A6C MOV X21, X1
	0x03670A70 MOV X20, X0
	0x03670A74 BL 0x3EB1AE0
	0x03670A78 CMP W21, 0x1
	0x03670A7C B.NE 0x3670AFC
	0x03670A80 MOV X0, X20
	0x03670A84 BL 0x3EB1AD0
	0x03670A88 MOV X20, X0
	0x03670A8C ADRP X0, 0xA83000
	0x03670A90 LDR X0, [X0 + 0x7D0]
	0x03670A94 BL 0x1C16D08
	0x03670A98 LDR X8, [X20]
	0x03670A9C LDR X1, [X8]
	0x03670AA0 BL 0x1C17270
	0x03670AA4 TBZ X0, 0x0, 0x3670AD4
	0x03670AA8 LDR X20, [X20]
	0x03670AAC BL 0x3EB1AE0
	0x03670AB0 CBZ X19, 0x3670AD0
	0x03670AB4 LDR X8, [X19]
	0x03670AB8 MOV X0, X19
	0x03670ABC MOV X1, X20
	0x03670AC0 LDR X9, [X8 + 0x3B8]
	0x03670AC4 LDR X2, [X8 + 0x3C0]
	0x03670AC8 BLR X9
	0x03670ACC B 0x367096C
	0x03670AD0 BL 0x1C16F20
	0x03670AD4 MOVZ W0, 0x8
	0x03670AD8 BL 0x3EB1AF0
	0x03670ADC LDR X8, [X20]
	0x03670AE0 STR X8, [X0]
	0x03670AE4 ADRP X1, 0x844000
	0x03670AE8 ADD X1, X1, 0xE58
	0x03670AEC MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+92]
	008 Move X19, X0
	009 Move X20, X1
	010 Compare W8, 0
	011 JumpIfEqual {28}
	012 Move W21, [X19+72]
	013 Move W22, [X19+88]
	014 Move X23, [X19+80]
	015 Move X0, X19
	016 Call CommandStream.ReceiveCommandResponse, X0
	017 Compare W21, 0
	018 JumpIfEqual {27}
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move W0, 1
	024 Move X30, [X31+48]
	025 Move X23, [X31+56]
	026 Return X0
	027 Move [X19+96], X0
	028 Move X0, X19
	029 Move X1, X20
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Call CommandStream.PostReadCommandProcessing, X0, X1
	037 Return X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, X0
	040 Move X0, X21
	041 Call 0x3EB2AD0
	042 Move X21, X0
	043 Move X0, 0xA8A000
	044 Move X0, [X0+3264]
	045 Call 0x1C17D08
	046 Move X8, [X21]
	047 Move X1, [X8]
	048 Call 0x1C18270
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {83}
	053 Move X21, [X21]
	054 Call 0x3EB2AE0
	055 Move TEMP, X22
	056 And TEMP, TEMP, -2147483648
	057 Compare TEMP, -2147483648
	058 JumpIfEqual {80}
	059 Compare X23, 0
	060 JumpIfEqual {82}
	061 Move W8, [X23+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X23, X22
	065 Move X8, [X8+32]
	066 Compare X8, 0
	067 JumpIfEqual {82}
	068 Move X0, 0xACE000
	069 Move X22, [X8+16]
	070 Move X0, [X0+2144]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X22
	074 Move X2, X31
	075 Call String.op_Inequality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {28}
	080 Move X0, X21
	081 Call 0x1C17F18
	082 Call 0x1C17F20
	083 Move W0, 8
	084 Call 0x3EB2AF0
	085 Move X8, [X21]
	086 Move [X0], X8
	087 Move X1, 0x845000
	088 Add X1, X1, 3672
	089 Move X2, X31
	090 Call 0x3EB2B00
	091 Call 0x1C17F28
	092 Move X21, X0
	093 Call 0x3EB2AE0
	094 Move X0, X21
	095 Call 0x1D2D690
	096 Call 0x1991590

Method: System.Boolean PostReadCommandProcessing(ref System.IO.Stream stream)

Disassembly:
	0x03670E38 ADRP X9, 0xACD000
	0x03670E3C LDR X9, [X9 + 0x8C0]
	0x03670E40 LDR X8, [X0]
	0x03670E44 LDR X1, [X9]
	0x03670E48 LDRB W10, [X8 + 0x130]
	0x03670E4C LDRB W9, [X1 + 0x130]
	0x03670E50 CMP W10, W9
	0x03670E54 B.CC 0x3670E6C
	0x03670E58 LDR X8, [X8 + 0xC8]
	0x03670E5C ADD X8, X8, X9, 0x3, LSL
	0x03670E60 LDUR X8, [X8 - 0x8]
	0x03670E64 CMP X8, X1
	0x03670E68 B.EQ 0x3670E74
	0x03670E6C BL 0x1C171E0
	0x03670E70 MOV X0, X31
	0x03670E74 LDP X20, X19, [X31 + 0x10]
	0x03670E78 LDR X30, [X31], #0x20
	0x03670E7C RET
	0x03670E80 BL 0x1C16F20
	0x03670E84 STP X30, X21, [X31 - 0x20]!
	0x03670E88 STP X20, X19, [X31 + 0x10]
	0x03670E8C ADRP X21, 0xD70000
	0x03670E90 LDRB W8, [X21 + 0x77B]
	0x03670E94 MOV X19, X1
	0x03670E98 MOV X20, X0
	0x03670E9C TBNZ X8, 0x0, 0x3670EB4
	0x03670EA0 ADRP X0, 0xAB3000
	0x03670EA4 LDR X0, [X0 + 0xD60]
	0x03670EA8 BL 0x1C16CF4
	0x03670EAC MOVZ W8, 0x1
	0x03670EB0 STRB W8, [X21 + 0x77B]
	0x03670EB4 LDR X21, [X20 + 0xB8]
	0x03670EB8 CBNZ X21, 0x3670EE4
	0x03670EBC ADRP X8, 0xAB3000
	0x03670EC0 LDR X8, [X8 + 0xD60]
	0x03670EC4 LDR X0, [X8]
	0x03670EC8 BL 0x1C16F10
	0x03670ECC MOV X1, X31
	0x03670ED0 MOV X2, X31
	0x03670ED4 MOV X21, X0
	0x03670ED8 BL 0x33D571C
	0x03670EDC STR X21, [X20 + 0xB8]
	0x03670EE0 CBZ X21, 0x3670F00
	0x03670EE4 LDR X8, [X21]
	0x03670EE8 MOV X1, X19
	0x03670EEC LDP X20, X19, [X31 + 0x10]
	0x03670EF0 MOV X0, X21
	0x03670EF4 LDP X3, X2, [X8 + 0x1A8]
	0x03670EF8 LDP X30, X21, [X31], #0x20
	0x03670EFC BR X3
	0x03670F00 BL 0x1C16F20
	0x03670F04 STP X30, X23, [X31 - 0x30]!
	0x03670F08 STP X22, X21, [X31 + 0x10]
	0x03670F0C STP X20, X19, [X31 + 0x20]
	0x03670F10 ADRP X22, 0xD70000
	0x03670F14 ADRP X23, 0xA85000
	0x03670F18 ADRP X21, 0xACD000
	0x03670F1C LDRB W8, [X22 + 0x77C]
	0x03670F20 LDR X23, [X23 + 0x278]
	0x03670F24 LDR X21, [X21 + 0x828]
	0x03670F28 MOV X19, X1
	0x03670F2C MOV X20, X0
	0x03670F30 TBNZ X8, 0x0, 0x3670F54
	0x03670F34 ADRP X0, 0xACD000
	0x03670F38 LDR X0, [X0 + 0x828]
	0x03670F3C BL 0x1C16CF4
	0x03670F40 ADRP X0, 0xA85000
	0x03670F44 LDR X0, [X0 + 0x278]
	0x03670F48 BL 0x1C16CF4
	0x03670F4C MOVZ W8, 0x1
	0x03670F50 STRB W8, [X22 + 0x77C]
	0x03670F54 LDR X8, [X23]
	0x03670F58 MOVN X9, 0x0
	0x03670F5C LDR X8, [X8 + 0xB8]
	0x03670F60 LDR X8, [X8]
	0x03670F64 STP X8, X9, [X20 + 0xC0]
	0x03670F68 LDR X0, [X21]
	0x03670F6C LDR W8, [X0 + 0xE0]
	0x03670F70 CBNZ W8, 0x3670F78
	0x03670F74 BL 0x1C16DFC
	0x03670F78 MOV X0, X20
	0x03670F7C MOV X1, X19
	0x03670F80 LDP X20, X19, [X31 + 0x20]
	0x03670F84 LDP X22, X21, [X31 + 0x10]
	0x03670F88 LDP X30, X23, [X31], #0x30
	0x03670F8C B 0x366EE20
	0x03670F90 STP X30, X19, [X31 - 0x10]!
	0x03670F94 LDR X0, [X0 + 0x88]
	0x03670F98 CBZ X0, 0x3670FA4
	0x03670F9C MOV X1, X31
	0x03670FA0 BL 0x36AC3C8
	0x03670FA4 LDP X30, X19, [X31], #0x10
	0x03670FA8 RET
	0x03670FAC CMP W1, 0x1
	0x03670FB0 MOV X19, X0
	0x03670FB4 B.NE 0x3671010
	0x03670FB8 MOV X0, X19
	0x03670FBC BL 0x3EB1AD0
	0x03670FC0 MOV X19, X0
	0x03670FC4 ADRP X0, 0xAAC000
	0x03670FC8 LDR X0, [X0 + 0x4B8]
	0x03670FCC BL 0x1C16D08
	0x03670FD0 LDR X8, [X19]
	0x03670FD4 LDR X1, [X8]
	0x03670FD8 BL 0x1C17270
	0x03670FDC TBZ X0, 0x0, 0x3670FE8
	0x03670FE0 LDP X30, X19, [X31], #0x10
	0x03670FE4 B 0x3EB1AE0
	0x03670FE8 MOVZ W0, 0x8
	0x03670FEC BL 0x3EB1AF0
	0x03670FF0 LDR X8, [X19]
	0x03670FF4 STR X8, [X0]
	0x03670FF8 ADRP X1, 0x844000
	0x03670FFC ADD X1, X1, 0xE58
	0x03671000 MOV X2, X31
	0x03671004 BL 0x3EB1B00
	0x03671008 MOV X19, X0
	0x0367100C BL 0x3EB1AE0
	0x03671010 MOV X0, X19
	0x03671014 BL 0x1D2C690
	0x03671018 BL 0x1990590
	0x0367101C STP X30, X21, [X31 - 0x20]!
	0x03671020 STP X20, X19, [X31 + 0x10]
	0x03671024 ADRP X19, 0xD6F000
	0x03671028 LDRB W8, [X19 + 0x77D]
	0x0367102C MOV X21, X0
	0x03671030 TBNZ X8, 0x0, 0x3671060
	0x03671034 ADRP X0, 0xACC000
	0x03671038 LDR X0, [X0 + 0x8C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD71000
	006 Move W8, [X21+1906]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xACE000
	014 Move X0, [X0+2144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1906], W8
	018 Move X8, [X19+80]
	019 Compare X8, 0
	020 JumpIfEqual {95}
	021 NotImplemented "Instruction LDRSW not yet implemented."
	022 Move W10, [X8+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add W31, W9, 1
	025 NotImplemented "Instruction STRH not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X8, X8, X9
	028 Move X2, [X19+96]
	029 Move X21, [X8+32]
	030 Compare X2, 0
	031 JumpIfNotEqual {49}
	032 Compare X21, 0
	033 JumpIfEqual {95}
	034 Move X8, 0xACE000
	035 Move X0, [X21+16]
	036 Move X8, [X8+2144]
	037 Move X2, X31
	038 Move X1, [X8]
	039 Call String.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {66}
	044 Move X2, [X19+96]
	045 Move X2, [X19+96]
	046 Compare X2, 0
	047 JumpIfEqual {95}
	048 Move X21, X31
	049 Move X8, [X19]
	050 Move X0, X19
	051 Move X1, X21
	052 Move W3, W31
	053 Move X9, [X8+1000]
	054 Move X5, [X8+1008]
	055 Move X4, X20
	056 NotImplemented "Instruction BLR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, -44924928
	059 Move W8, W0
	060 Add X9, X9, 1940
	061 NotImplemented "Instruction ADR not yet implemented."
	062 Move W11, [X9]
	063 Add X10, X10, X11
	064 Move W0, 1
	065 CallNoReturn X10
	066 Move W8, [X19+88]
	067 Move W9, 257
	068 Move W0, W31
	069 Move [X19+96], X31
	070 Add W8, W8, 1
	071 NotImplemented "Instruction STRH not yet implemented."
	072 Move [X19+88], W8
	073 Move W0, W31
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return X0
	079 Move W8, 1
	080 Move W0, W31
	081 Move [X19+96], X31
	082 Move [X19+92], W8
	083 Move W8, [X19+72]
	084 Move W0, 1
	085 Move [X19+96], X31
	086 Move [X19+92], W0
	087 Compare W8, 0
	088 JumpIfEqual {74}
	089 Move X0, X19
	090 Call CommandStream.ContinueCommandPipeline, X0
	091 Move X1, [X20]
	092 Move X0, X19
	093 Call CommandStream.InvokeRequestCallback, X0, X1
	094 Move W0, 1
	095 Call 0x1C17F20
	096 Call 0x1C17F28
	097 Move X0, 0xA86000
	098 Move X20, [X19+104]
	099 Move X0, [X0+632]
	100 Call 0x1C17D08
	101 Move X8, [X0+184]
	102 Move X0, X20
	103 Move X2, X31
	104 Move X1, [X8]
	105 Call String.op_Inequality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {119}
	110 Move X0, 0xAAF000
	111 Move X21, [X19+104]
	112 Move X0, [X0+816]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X1, X21
	116 Move X2, X31
	117 Move X20, X0
	118 Call WebException..ctor, X0, X1
	119 Move X0, 0xACE000
	120 Move X0, [X0+2176]
	121 Call 0x1C17D08
	122 Move W2, 11
	123 Move X1, X0
	124 Move X3, X31
	125 Call CommandStream.GenerateException, X0, X1, X2, X3
	126 Move X20, X0
	127 Move X8, [X19]
	128 Move X0, X19
	129 Move X1, X20
	130 Move X9, [X8+952]
	131 Move X2, [X8+960]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X0, 0xACD000
	134 Move X0, [X0+2184]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X20
	138 Call 0x1C17DEC

Method: System.Net.CommandStream/PipelineInstruction PipelineCallback(System.Net.CommandStream/PipelineEntry entry, System.Net.ResponseDescription response, System.Boolean timeout, ref System.IO.Stream stream)

Disassembly:
	0x0367103C BL 0x1C16CF4
	0x03671040 ADRP X0, 0xAAA000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void ReadCallback(System.IAsyncResult asyncResult)

Disassembly:
	0x03671044 LDR X0, [X0 + 0x718]
	0x03671048 BL 0x1C16CF4
	0x0367104C ADRP X0, 0xA8F000
	0x03671050 LDR X0, [X0 + 0xBB8]
	0x03671054 BL 0x1C16CF4
	0x03671058 MOVZ W8, 0x1
	0x0367105C STRB W8, [X19 + 0x77D]
	0x03671060 CBZ X21, 0x367132C
	0x03671064 ADRP X10, 0xAAA000
	0x03671068 LDR X8, [X21]
	0x0367106C LDR X10, [X10 + 0x718]
	0x03671070 LDRH W9, [X8 + 0x12E]
	0x03671074 LDR X1, [X10]
	0x03671078 CBZ X9, 0x367109C
	0x0367107C LDR X10, [X8 + 0xB0]
	0x03671080 ADD X10, X10, 0x8
	0x03671084 LDUR X11, [X10 - 0x8]
	0x03671088 CMP X11, X1
	0x0367108C B.EQ 0x36710AC
	0x03671090 SUBS X9, X9, 0x1
	0x03671094 ADD X10, X10, 0x10
	0x03671098 B.NE 0x3671084
	0x0367109C MOVZ W2, 0x2
	0x036710A0 MOV X0, X21
	0x036710A4 BL 0x1C5C788
	0x036710A8 B 0x36710BC
	0x036710AC LDR W9, [X10]
	0x036710B0 ADD W9, W9, 0x2
	0x036710B4 ADD X8, X8, W9, 0x4, SXTW
	0x036710B8 ADD X0, X8, 0x138
	0x036710BC LDP X8, X1, [X0]
	0x036710C0 MOV X0, X21
	0x036710C4 BLR X8
	0x036710C8 CBZ X0, 0x367132C
	0x036710CC ADRP X9, 0xACC000
	0x036710D0 LDR X9, [X9 + 0x8C8]
	0x036710D4 LDR X8, [X0]
	0x036710D8 MOV X20, X0
	0x036710DC LDR X1, [X9]
	0x036710E0 LDRB W10, [X8 + 0x130]
	0x036710E4 LDRB W9, [X1 + 0x130]
	0x036710E8 CMP W10, W9
	0x036710EC B.CC 0x36711B0
	0x036710F0 LDR X8, [X8 + 0xC8]
	0x036710F4 ADD X8, X8, X9, 0x3, LSL
	0x036710F8 LDUR X8, [X8 - 0x8]
	0x036710FC CMP X8, X1
	0x03671100 B.NE 0x36711B0
	0x03671104 LDR X19, [X20 + 0x88]
	0x03671108 CBZ X19, 0x36711BC
	0x0367110C MOV X0, X19
	0x03671110 MOV X1, X21
	0x03671114 MOV X2, X31
	0x03671118 BL 0x36C27BC
	0x0367111C STR X0, [X20 + 0x88]
	0x03671120 MOV X0, X20
	0x03671124 MOV X1, X31
	0x03671128 BL 0x367D808
	0x0367112C MOV X21, X0
	0x03671130 LDR X0, [X20 + 0x88]
	0x03671134 CBZ X0, 0x36711C0
	0x03671138 MOV X1, X31
	0x0367113C BL 0x36C1DF8
	0x03671140 CBZ X0, 0x36711C4
	0x03671144 ADRP X9, 0xA8F000
	0x03671148 LDR X9, [X9 + 0xBB8]
	0x0367114C LDR X8, [X0]
	0x03671150 LDR X1, [X9]
	0x03671154 LDRB W10, [X8 + 0x130]
	0x03671158 LDRB W9, [X1 + 0x130]
	0x0367115C CMP W10, W9
	0x03671160 B.CC 0x36711B8
	0x03671164 LDR X8, [X8 + 0xC8]
	0x03671168 ADD X8, X8, X9, 0x3, LSL
	0x0367116C LDUR X8, [X8 - 0x8]
	0x03671170 CMP X8, X1
	0x03671174 B.NE 0x36711B8
	0x03671178 CBZ X21, 0x36711C8
	0x0367117C LDR X8, [X21]
	0x03671180 LDR X1, [X0 + 0x10]
	0x03671184 LDP X9, X2, [X8 + 0x138]
	0x03671188 MOV X0, X21
	0x0367118C BLR X9
	0x03671190 TBZ X0, 0x0, 0x36711CC
	0x03671194 MOV X0, X20
	0x03671198 BL 0x366F2DC
	0x0367119C MOV X0, X19
	0x036711A0 LDP X20, X19, [X31 + 0x10]
	0x036711A4 MOV X1, X31
	0x036711A8 LDP X30, X21, [X31], #0x20
	0x036711AC B 0x36AC3C8
	0x036711B0 MOV X0, X20
	0x036711B4 BL 0x1C171E0
	0x036711B8 BL 0x1C171E0
	0x036711BC BL 0x1C16F20
	0x036711C0 BL 0x1C16F20
	0x036711C4 BL 0x1C16F20
	0x036711C8 BL 0x1C16F20
	0x036711CC LDR X0, [X20 + 0x88]
	0x036711D0 CBNZ X0, 0x36711D8
	0x036711D4 BL 0x1C16F20
	0x036711D8 MOV X1, X31
	0x036711DC BL 0x36AC3C8
	0x036711E0 ADRP X0, 0xAAD000
	0x036711E4 LDR X0, [X0 + 0x330]
	0x036711E8 BL 0x1C16D08
	0x036711EC BL 0x1C16F10
	0x036711F0 MOV X21, X0
	0x036711F4 ADRP X0, 0xACC000
	0x036711F8 LDR X0, [X0 + 0x8D0]
	0x036711FC BL 0x1C16D08
	0x03671200 MOV X1, X0
	0x03671204 MOVZ W2, 0x7
	0x03671208 MOV X0, X21
	0x0367120C MOV X3, X31
	0x03671210 BL 0x367A0D4
	0x03671214 ADRP X0, 0xACC000
	0x03671218 LDR X0, [X0 + 0x8D8]
	0x0367121C BL 0x1C16D08
	0x03671220 MOV X1, X0
	0x03671224 MOV X0, X21
	0x03671228 BL 0x1C16DEC
	0x0367122C MOV X21, X0
	0x03671230 B 0x3671258
	0x03671234 B 0x3671254
	0x03671238 B 0x3671254
	0x0367123C B 0x3671254
	0x03671240 B 0x3671254
	0x03671244 B 0x3671254
	0x03671248 B 0x3671254
	0x0367124C B 0x3671254
	0x03671250 B 0x3671254
	0x03671254 MOV X21, X0
	0x03671258 CMP W1, 0x1
	0x0367125C B.NE 0x36712F0
	0x03671260 MOV X0, X21
	0x03671264 BL 0x3EB1AD0
	0x03671268 MOV X21, X0
	0x0367126C ADRP X0, 0xA82000
	0x03671270 LDR X0, [X0 + 0x7D0]
	0x03671274 BL 0x1C16D08
	0x03671278 LDR X8, [X21]
	0x0367127C LDR X1, [X8]
	0x03671280 BL 0x1C17270
	0x03671284 TBZ X0, 0x0, 0x36712B0
	0x03671288 LDR X21, [X21]
	0x0367128C BL 0x3EB1AE0
	0x03671290 MOV X0, X20
	0x03671294 MOV X1, X31
	0x03671298 BL 0x367B0B4
	0x0367129C MOV X0, X20
	0x036712A0 MOV X1, X21
	0x036712A4 BL 0x366F134
	0x036712A8 MOV X20, X31
	0x036712AC B 0x367130C
	0x036712B0 MOVZ W0, 0x8
	0x036712B4 BL 0x3EB1AF0
	0x036712B8 LDR X8, [X21]
	0x036712BC STR X8, [X0]
	0x036712C0 ADRP X1, 0x843000
	0x036712C4 ADD X1, X1, 0xE58
	0x036712C8 MOV X2, X31
	0x036712CC BL 0x3EB1B00
	0x036712D0 B 0x36712D8
	0x036712D4 B 0x36712D8
	0x036712D8 MOV X21, X0
	0x036712DC B 0x36712F0
	0x036712E0 MOV X20, X1
	0x036712E4 MOV X21, X0
	0x036712E8 BL 0x3EB1AE0
	0x036712EC MOV W1, W20
	0x036712F0 MOVZ W8, 0x1
	0x036712F4 CMP W1, W8
	0x036712F8 B.NE 0x3671338
	0x036712FC MOV X0, X21
	0x03671300 BL 0x3EB1AD0
	0x03671304 LDR X20, [X0]
	0x03671308 BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xD70000
	006 Move W8, [X19+1907]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xAAB000
	013 Move X0, [X0+1816]
	014 Call 0x1C17CF4
	015 Move X0, 0xACD000
	016 Move X0, [X0+2152]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1907], W8
	020 Compare X20, 0
	021 JumpIfEqual {181}
	022 Move X10, 0xAAB000
	023 Move X8, [X20]
	024 Move X10, [X10+1816]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 2
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 2
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X19, X0
	047 Compare X0, 0
	048 JumpIfEqual {89}
	049 Move X9, 0xACD000
	050 Move X9, [X9+2152]
	051 Move X8, [X19]
	052 Move X1, [X9]
	053 Move W10, [X8+304]
	054 Move W9, [X1+304]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X8+200]
	057 Add X8, X8, X9
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X19+40]
	061 Compare X0, 0
	062 JumpIfEqual {90}
	063 Move X8, [X0]
	064 Move X9, [X8+712]
	065 Move X2, [X8+720]
	066 Move X1, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move W20, W0
	069 Compare W0, 0
	070 JumpIfNotEqual {76}
	071 Move X0, [X19+40]
	072 Compare X0, 0
	073 JumpIfEqual {92}
	074 Move X1, X31
	075 Call NetworkStreamWrapper.CloseSocket, X0
	076 Move X0, [X19+40]
	077 Compare X0, 0
	078 JumpIfEqual {91}
	079 Move X1, X19
	080 Move W2, W20
	081 Call CommandStream.ReceiveCommandResponseCallback, X0, X1, X2
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Return 
	087 Move X0, X19
	088 Call 0x1C181E0
	089 Call 0x1C17F20
	090 Call 0x1C17F20
	091 Call 0x1C17F20
	092 Call 0x1C17F20
	093 Move X21, X1
	094 Move X20, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X20
	097 Call 0x3EB2AD0
	098 Move X20, X0
	099 Move X0, 0xAB1000
	100 Move X0, [X0+1960]
	101 Call 0x1C17D08
	102 Move X8, [X20]
	103 Move X1, [X8]
	104 Call 0x1C18270
	105 Move W21, W0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {120}
	110 Move X20, [X20]
	111 Call 0x3EB2AE0
	112 Move TEMP, X21
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {138}
	116 Move X8, [X19+40]
	117 Compare X8, 0
	118 JumpIfNotEqual {140}
	119 Call 0x1C17F20
	120 Move X0, 0xA89000
	121 Move X0, [X0+3264]
	122 Call 0x1C17D08
	123 Move X8, [X20]
	124 Move X1, [X8]
	125 Call 0x1C18270
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {110}
	130 Move W0, 8
	131 Call 0x3EB2AF0
	132 Move X8, [X20]
	133 Move [X0], X8
	134 Move X1, 0x844000
	135 Add X1, X1, 3672
	136 Move X2, X31
	137 Call 0x3EB2B00
	138 Move X0, X20
	139 Call 0x1C17F18
	140 Move W9, [X8+88]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W9, 1
	143 Move [X8+56], W9
	144 Move X0, X20
	145 Call 0x1C17F18
	146 Move X21, X1
	147 Move X20, X0
	148 Call 0x3EB2AE0
	149 Move X21, X1
	150 Move X20, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X20
	153 Call 0x3EB2AD0
	154 Move X20, X0
	155 Move X0, 0xA83000
	156 Move X0, [X0+2000]
	157 Call 0x1C17D08
	158 Move X8, [X20]
	159 Move X1, [X8]
	160 Call 0x1C18270
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {182}
	165 Move X20, [X20]
	166 Call 0x3EB2AE0
	167 Compare X19, 0
	168 JumpIfEqual {181}
	169 Move X0, [X19+40]
	170 Compare X0, 0
	171 JumpIfEqual {181}
	172 Move X8, [X0]
	173 Move X1, X20
	174 Move X20, [X31+16]
	175 Move X19, [X31+24]
	176 Move X3, [X8+952]
	177 Move X2, [X8+960]
	178 Move X30, [X31+32]
	179 Move X21, [X31+40]
	180 CallNoReturn X3
	181 Call 0x1C17F20
	182 Move W0, 8
	183 Call 0x3EB2AF0
	184 Move X8, [X20]
	185 Move [X0], X8
	186 Move X1, 0x844000
	187 Add X1, X1, 3672
	188 Move X2, X31
	189 Call 0x3EB2B00
	190 Move X20, X0
	191 Call 0x3EB2AE0
	192 Move X0, X20
	193 Call 0x1D2D690
	194 Call 0x1991590

Method: System.Void WriteCallback(System.IAsyncResult asyncResult)

Disassembly:
	0x03671854 LDR X8, [X8]
	0x03671858 MOV X0, X8
	0x0367185C BL 0x1C16F10
	0x03671860 MOV X1, X21
	0x03671864 MOV X2, X23
	0x03671868 MOV X3, X24
	0x0367186C MOV X4, X25
	0x03671870 MOV X22, X0
	0x03671874 BL 0x366C554
	0x03671878 LDRB W8, [X20 + 0x48]
	0x0367187C CBZ W8, 0x36718C0
	0x03671880 STR X22, [X20 + 0x98]
	0x03671884 ADRP X19, 0xACC000
	0x03671888 LDR X19, [X19 + 0x8C8]
	0x0367188C LDR X0, [X19]
	0x03671890 LDR W8, [X0 + 0xE0]
	0x03671894 CBNZ W8, 0x367189C
	0x03671898 BL 0x1C16DFC
	0x0367189C CBZ X22, 0x367196C
	0x036718A0 LDR X8, [X19]
	0x036718A4 MOV X0, X22
	0x036718A8 MOV X2, X20
	0x036718AC LDR X8, [X8 + 0xB8]
	0x036718B0 LDR X1, [X8 + 0x10]
	0x036718B4 BL 0x366C720
	0x036718B8 MOVZ W0, 0x2
	0x036718BC B 0x3671920
	0x036718C0 CBZ X22, 0x367196C
	0x036718C4 MOV X0, X22
	0x036718C8 BL 0x366C620
	0x036718CC MOV X21, X22
	0x036718D0 LDR X22, [X20 + 0x40]
	0x036718D4 MOV X0, X20
	0x036718D8 BL 0x3671980
	0x036718DC LDR X8, [X27]
	0x036718E0 MOV W20, W0
	0x036718E4 MOV X0, X8
	0x036718E8 BL 0x1C16F10
	0x036718EC MOV X23, X0
	0x036718F0 CBZ X22, 0x3671904
	0x036718F4 LDR X1, [X26]
	0x036718F8 LDR X8, [X22]
	0x036718FC CMP X8, X1
	0x03671900 B.NE 0x3671978
	0x03671904 MOV X0, X23
	0x03671908 MOV X1, X21
	0x0367190C MOV X2, X22
	0x03671910 MOV W3, W20
	0x03671914 BL 0x3671A18
	0x03671918 STR X23, [X19]
	0x0367191C MOVZ W0, 0x4
	0x03671920 LDP X20, X19, [X31 + 0x40]
	0x03671924 LDP X22, X21, [X31 + 0x30]
	0x03671928 LDP X24, X23, [X31 + 0x20]
	0x0367192C LDP X26, X25, [X31 + 0x10]
	0x03671930 LDP X30, X27, [X31], #0x50
	0x03671934 RET
	0x03671938 ADRP X0, 0xACC000
	0x0367193C LDR X0, [X0 + 0x848]
	0x03671940 BL 0x1C16D08
	0x03671944 BL 0x1C16F10
	0x03671948 MOV X1, X31
	0x0367194C MOV X19, X0
	0x03671950 BL 0x367A644
	0x03671954 ADRP X0, 0xACC000
	0x03671958 LDR X0, [X0 + 0x8F8]
	0x0367195C BL 0x1C16D08
	0x03671960 MOV X1, X0
	0x03671964 MOV X0, X19
	0x03671968 BL 0x1C16DEC
	0x0367196C BL 0x1C16F20
	0x03671970 MOV X0, X21
	0x03671974 BL 0x1C171E0
	0x03671978 MOV X0, X22
	0x0367197C BL 0x1C171E0
	0x03671980 STR X30, [X31 - 0x20]!
	0x03671984 STP X20, X19, [X31 + 0x10]
	0x03671988 ADRP X20, 0xD6F000
	0x0367198C LDRB W8, [X20 + 0x794]
	0x03671990 MOV X19, X0
	0x03671994 TBNZ X8, 0x0, 0x36719AC
	0x03671998 ADRP X0, 0xACC000
	0x0367199C LDR X0, [X0 + 0x820]
	0x036719A0 BL 0x1C16CF4
	0x036719A4 MOVZ W8, 0x1
	0x036719A8 STRB W8, [X20 + 0x794]
	0x036719AC LDR X19, [X19 + 0x40]
	0x036719B0 CBZ X19, 0x36719CC
	0x036719B4 ADRP X8, 0xACC000
	0x036719B8 LDR X8, [X8 + 0x820]
	0x036719BC LDR X9, [X19]
	0x036719C0 LDR X8, [X8]
	0x036719C4 CMP X9, X8
	0x036719C8 B.EQ 0x36719DC
	0x036719CC MOVN W0, 0x0
	0x036719D0 LDP X20, X19, [X31 + 0x10]
	0x036719D4 LDR X30, [X31], #0x20
	0x036719D8 RET
	0x036719DC LDR X0, [X19 + 0x38]
	0x036719E0 CBZ X0, 0x3671A14
	0x036719E4 MOV X1, X31
	0x036719E8 BL 0x3676720
	0x036719EC TBZ X0, 0x0, 0x36719F8
	0x036719F0 MOVZ W0, 0x1
	0x036719F4 B 0x36719D0
	0x036719F8 LDR X0, [X19 + 0x38]
	0x036719FC CBZ X0, 0x3671A14
	0x03671A00 MOV X1, X31
	0x03671A04 BL 0x367672C
	0x03671A08 TBZ X0, 0x0, 0x36719CC
	0x03671A0C MOV W0, W31
	0x03671A10 B 0x36719D0
	0x03671A14 BL 0x1C16F20
	0x03671A18 STR X30, [X31 - 0x40]!
	0x03671A1C STP X24, X23, [X31 + 0x10]
	0x03671A20 STP X22, X21, [X31 + 0x20]
	0x03671A24 STP X20, X19, [X31 + 0x30]
	0x03671A28 ADRP X24, 0xD6F000
	0x03671A2C ADRP X23, 0xAB1000
	0x03671A30 LDRB W8, [X24 + 0x796]
	0x03671A34 LDR X23, [X23 + 0xD10]
	0x03671A38 MOV W22, W3
	0x03671A3C MOV X19, X2
	0x03671A40 MOV X21, X1
	0x03671A44 MOV X20, X0
	0x03671A48 TBNZ X8, 0x0, 0x3671A78
	0x03671A4C ADRP X0, 0xACC000
	0x03671A50 LDR X0, [X0 + 0x468]
	0x03671A54 BL 0x1C16CF4
	0x03671A58 ADRP X0, 0xAB1000
	0x03671A5C LDR X0, [X0 + 0xD10]
	0x03671A60 BL 0x1C16CF4
	0x03671A64 ADRP X0, 0xAB4000
	0x03671A68 LDR X0, [X0 + 0xBF0]
	0x03671A6C BL 0x1C16CF4
	0x03671A70 MOVZ W8, 0x1
	0x03671A74 STRB W8, [X24 + 0x796]
	0x03671A78 LDR X0, [X23]
	0x03671A7C ADRP X23, 0xACC000
	0x03671A80 LDR W8, [X0 + 0xE0]
	0x03671A84 LDR X23, [X23 + 0x468]
	0x03671A88 CBNZ W8, 0x3671A90
	0x03671A8C BL 0x1C16DFC
	0x03671A90 MOV X0, X20
	0x03671A94 MOV X1, X31
	0x03671A98 BL 0x32F27B0
	0x03671A9C LDR X0, [X23]
	0x03671AA0 LDR W8, [X0 + 0xE0]
	0x03671AA4 CBNZ W8, 0x3671AAC
	0x03671AA8 BL 0x1C16DFC
	0x03671AAC BL 0x366A368
	0x03671AB0 TBZ X0, 0x0, 0x3671ADC
	0x03671AB4 LDR X0, [X23]
	0x03671AB8 ADRP X23, 0xAB4000
	0x03671ABC LDR W8, [X0 + 0xE0]
	0x03671AC0 LDR X23, [X23 + 0xBF0]
	0x03671AC4 CBNZ W8, 0x3671ACC
	0x03671AC8 BL 0x1C16DFC
	0x03671ACC LDR X2, [X23]
	0x03671AD0 MOV X0, X20
	0x03671AD4 MOV X1, X31
	0x03671AD8 BL 0x366A3CC
	0x03671ADC MOVZ W8, 0x101
	0x03671AE0 STRH W8, [X20 + 0x38]
	0x03671AE4 CBZ W22, 0x3671AF8
	0x03671AE8 CMP W22, 0x1
	0x03671AEC B.NE 0x3671AFC
	0x03671AF0 STRB W31, [X20 + 0x39]
	0x03671AF4 B 0x3671AFC
	0x03671AF8 STRB W31, [X20 + 0x38]
	0x03671AFC STP X19, X21, [X20 + 0x28]
	0x03671B00 LDP X20, X19, [X31 + 0x30]
	0x03671B04 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD70000
	007 Move W8, [X19+1908]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xACD000
	014 Move X0, [X0+2088]
	015 Call 0x1C17CF4
	016 Move X0, 0xAAB000
	017 Move X0, [X0+1816]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+1908], W8
	021 Move [X31+8], X31
	022 Compare X20, 0
	023 JumpIfEqual {167}
	024 Move X10, 0xAAB000
	025 Move X8, [X20]
	026 Move X10, [X10+1816]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 2
	038 Move X0, X20
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 2
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X20
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X19, X0
	049 Compare X0, 0
	050 JumpIfEqual {86}
	051 Move X9, 0xACD000
	052 Move X9, [X9+2088]
	053 Move X8, [X19]
	054 Move X1, [X9]
	055 Move W10, [X8+304]
	056 Move W9, [X1+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X8+200]
	059 Add X8, X8, X9
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X19]
	063 Move X9, [X8+776]
	064 Move X2, [X8+784]
	065 Move X0, X19
	066 Move X1, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move [X31+8], X31
	069 Add X1, X31, 8
	070 Move X0, X19
	071 Call CommandStream.PostSendCommandProcessing, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {78}
	076 Move X0, X19
	077 Call CommandStream.ContinueCommandPipeline, X0
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Add X31, X31, 48
	083 Return 
	084 Move X0, X19
	085 Call 0x1C181E0
	086 Call 0x1C17F20
	087 Move X21, X1
	088 Move X20, X0
	089 Move X21, X1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X20, X0
	092 Move X0, X20
	093 Call 0x3EB2AD0
	094 Move X20, X0
	095 Move X0, 0xAB1000
	096 Move X0, [X0+1960]
	097 Call 0x1C17D08
	098 Move X8, [X20]
	099 Move X1, [X8]
	100 Call 0x1C18270
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {106}
	105 Move W21, 3
	106 Move X0, 0xA89000
	107 Move X0, [X0+3264]
	108 Call 0x1C17D08
	109 Move X8, [X20]
	110 Move X1, [X8]
	111 Call 0x1C18270
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {126}
	116 Move W21, 4
	117 Move X20, [X20]
	118 Call 0x3EB2AE0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X20
	122 Call 0x1C17F18
	123 Compare X19, 0
	124 JumpIfNotEqual {134}
	125 Call 0x1C17F20
	126 Move W0, 8
	127 Call 0x3EB2AF0
	128 Move X8, [X20]
	129 Move [X0], X8
	130 Move X1, 0x844000
	131 Add X1, X1, 3672
	132 Move X2, X31
	133 Call 0x3EB2B00
	134 Move W8, [X19+88]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move W8, 1
	137 Move [X19+56], W8
	138 Move X0, X20
	139 Call 0x1C17F18
	140 Move X21, X1
	141 Move X20, X0
	142 Call 0x3EB2AE0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X20
	145 Call 0x3EB2AD0
	146 Move X20, X0
	147 Move X0, 0xA83000
	148 Move X0, [X0+2000]
	149 Call 0x1C17D08
	150 Move X8, [X20]
	151 Move X1, [X8]
	152 Call 0x1C18270
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {168}
	157 Move X20, [X20]
	158 Call 0x3EB2AE0
	159 Compare X19, 0
	160 JumpIfEqual {167}
	161 Move X8, [X19]
	162 Move X0, X19
	163 Move X1, X20
	164 Move X9, [X8+952]
	165 Move X2, [X8+960]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Call 0x1C17F20
	168 Move W0, 8
	169 Call 0x3EB2AF0
	170 Move X8, [X20]
	171 Move [X0], X8
	172 Move X1, 0x844000
	173 Add X1, X1, 3672
	174 Move X2, X31
	175 Call 0x3EB2B00
	176 Move X20, X0
	177 Call 0x3EB2AE0
	178 Move X0, X20
	179 Call 0x1D2D690
	180 Call 0x1991590

Method: System.Text.Encoding get_Encoding()

Disassembly:
	0x03671B08 LDP X24, X23, [X31 + 0x10]
	0x03671B0C LDR X30, [X31], #0x40

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_Encoding(System.Text.Encoding value)

Disassembly:
	0x03671B10 RET
	0x03671B14 STP X30, X21, [X31 - 0x20]!
	0x03671B18 STP X20, X19, [X31 + 0x10]
	0x03671B1C ADRP X21, 0xD6F000
	0x03671B20 ADRP X20, 0xA83000
	0x03671B24 LDRB W8, [X21 + 0x781]
	0x03671B28 LDR X20, [X20 + 0x9F0]
	0x03671B2C MOV X19, X0
	0x03671B30 TBNZ X8, 0x0, 0x3671B48
	0x03671B34 ADRP X0, 0xA83000
	0x03671B38 LDR X0, [X0 + 0x9F0]
	0x03671B3C BL 0x1C16CF4
	0x03671B40 MOVZ W8, 0x1
	0x03671B44 STRB W8, [X21 + 0x781]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move [X0+120], X1
	004 Compare X1, 0
	005 JumpIfEqual {17}
	006 Move X8, [X1]
	007 Move X19, X0
	008 Move X0, X1
	009 Move X9, [X8+824]
	010 Move X8, [X8+832]
	011 Move X1, X8
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move [X19+128], X0
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20

Method: System.Boolean CheckValid(System.Net.ResponseDescription response, ref System.Int32 validThrough, ref System.Int32 completeLength)

Disassembly:
	0x03671B48 MOVN X8, 0x0
	0x03671B4C STR X8, [X19 + 0xC8]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Net.ResponseDescription ReceiveCommandResponse()

Disassembly:
	0x03670AF0 BL 0x3EB1B00
	0x03670AF4 MOV X20, X0
	0x03670AF8 BL 0x3EB1AE0
	0x03670AFC MOV X0, X20
	0x03670B00 BL 0x1D2C690
	0x03670B04 BL 0x1990590
	0x03670B08 LDR X0, [X0 + 0x78]
	0x03670B0C RET
	0x03670B10 STP X30, X19, [X31 - 0x10]!
	0x03670B14 STR X1, [X0 + 0x78]
	0x03670B18 CBZ X1, 0x3670B44
	0x03670B1C LDR X8, [X1]
	0x03670B20 MOV X19, X0
	0x03670B24 MOV X0, X1
	0x03670B28 LDR X9, [X8 + 0x338]
	0x03670B2C LDR X8, [X8 + 0x340]
	0x03670B30 MOV X1, X8
	0x03670B34 BLR X9
	0x03670B38 STR X0, [X19 + 0x80]
	0x03670B3C LDP X30, X19, [X31], #0x10
	0x03670B40 RET
	0x03670B44 BL 0x1C16F20
	0x03670B48 MOV W0, W31
	0x03670B4C RET
	0x03670B50 STP X30, X23, [X31 - 0x30]!
	0x03670B54 STP X22, X21, [X31 + 0x10]
	0x03670B58 STP X20, X19, [X31 + 0x20]
	0x03670B5C ADRP X23, 0xD70000
	0x03670B60 ADRP X22, 0xACD000
	0x03670B64 ADRP X21, 0xA83000
	0x03670B68 LDRB W8, [X23 + 0x779]
	0x03670B6C LDR X22, [X22 + 0x8A8]
	0x03670B70 LDR X21, [X21 + 0x618]
	0x03670B74 MOV X20, X1
	0x03670B78 MOV X19, X0
	0x03670B7C TBNZ X8, 0x0, 0x3670BA0
	0x03670B80 ADRP X0, 0xA83000
	0x03670B84 LDR X0, [X0 + 0x618]
	0x03670B88 BL 0x1C16CF4
	0x03670B8C ADRP X0, 0xACD000
	0x03670B90 LDR X0, [X0 + 0x8A8]
	0x03670B94 BL 0x1C16CF4
	0x03670B98 MOVZ W8, 0x1
	0x03670B9C STRB W8, [X23 + 0x779]
	0x03670BA0 MOV X0, X19
	0x03670BA4 MOV X1, X31
	0x03670BA8 BL 0x33BDD8C
	0x03670BAC STR X20, [X19 + 0x28]
	0x03670BB0 LDR X0, [X22]
	0x03670BB4 BL 0x1C16F10
	0x03670BB8 MOV X20, X0
	0x03670BBC BL 0x3670D74
	0x03670BC0 STR X20, [X19 + 0x10]
	0x03670BC4 LDR X0, [X21]
	0x03670BC8 MOVZ W1, 0x400
	0x03670BCC BL 0x1C16D6C
	0x03670BD0 STR X0, [X19 + 0x20]
	0x03670BD4 STR W31, [X19 + 0x18]
	0x03670BD8 LDP X20, X19, [X31 + 0x20]
	0x03670BDC LDP X22, X21, [X31 + 0x10]
	0x03670BE0 LDP X30, X23, [X31], #0x30
	0x03670BE4 RET
	0x03670BE8 STP X30, X23, [X31 - 0x30]!
	0x03670BEC STP X22, X21, [X31 + 0x10]
	0x03670BF0 STP X20, X19, [X31 + 0x20]
	0x03670BF4 ADRP X23, 0xD70000
	0x03670BF8 ADRP X22, 0xAAB000
	0x03670BFC ADRP X19, 0xACD000
	0x03670C00 ADRP X20, 0xACD000
	0x03670C04 ADRP X21, 0xACD000
	0x03670C08 LDRB W8, [X23 + 0x777]
	0x03670C0C LDR X22, [X22 + 0x720]
	0x03670C10 LDR X19, [X19 + 0x8B0]
	0x03670C14 LDR X20, [X20 + 0x828]
	0x03670C18 LDR X21, [X21 + 0x8B8]
	0x03670C1C TBNZ X8, 0x0, 0x3670C58
	0x03670C20 ADRP X0, 0xAAB000
	0x03670C24 LDR X0, [X0 + 0x720]
	0x03670C28 BL 0x1C16CF4
	0x03670C2C ADRP X0, 0xACD000
	0x03670C30 LDR X0, [X0 + 0x8B8]
	0x03670C34 BL 0x1C16CF4
	0x03670C38 ADRP X0, 0xACD000
	0x03670C3C LDR X0, [X0 + 0x8B0]
	0x03670C40 BL 0x1C16CF4
	0x03670C44 ADRP X0, 0xACD000
	0x03670C48 LDR X0, [X0 + 0x828]
	0x03670C4C BL 0x1C16CF4
	0x03670C50 MOVZ W8, 0x1
	0x03670C54 STRB W8, [X23 + 0x777]
	0x03670C58 LDR X0, [X22]
	0x03670C5C BL 0x1C16F10
	0x03670C60 LDR X2, [X19]
	0x03670C64 MOV X1, X31
	0x03670C68 MOV X3, X31
	0x03670C6C MOV X19, X0
	0x03670C70 BL 0x3316570
	0x03670C74 LDR X8, [X20]
	0x03670C78 LDR X8, [X8 + 0xB8]
	0x03670C7C STR X19, [X8]
	0x03670C80 LDR X0, [X22]
	0x03670C84 BL 0x1C16F10
	0x03670C88 LDR X2, [X21]
	0x03670C8C MOV X1, X31
	0x03670C90 MOV X3, X31
	0x03670C94 MOV X19, X0
	0x03670C98 BL 0x3316570
	0x03670C9C LDR X8, [X20]
	0x03670CA0 LDP X22, X21, [X31 + 0x10]
	0x03670CA4 LDR X8, [X8 + 0xB8]
	0x03670CA8 STR X19, [X8 + 0x8]
	0x03670CAC LDP X20, X19, [X31 + 0x20]
	0x03670CB0 LDP X30, X23, [X31], #0x30
	0x03670CB4 RET
	0x03670CB8 STR X30, [X31 - 0x20]!
	0x03670CBC STP X20, X19, [X31 + 0x10]
	0x03670CC0 MOV X19, X1
	0x03670CC4 MOV X1, X31
	0x03670CC8 MOV X20, X0
	0x03670CCC BL 0x33BDD8C
	0x03670CD0 STR X19, [X20 + 0x10]
	0x03670CD4 LDP X20, X19, [X31 + 0x10]
	0x03670CD8 LDR X30, [X31], #0x20
	0x03670CDC RET
	0x03670CE0 STP X30, X21, [X31 - 0x20]!
	0x03670CE4 STP X20, X19, [X31 + 0x10]
	0x03670CE8 MOV X20, X1
	0x03670CEC MOV X1, X31
	0x03670CF0 MOV W19, W2
	0x03670CF4 MOV X21, X0
	0x03670CF8 BL 0x33BDD8C
	0x03670CFC STR X20, [X21 + 0x10]
	0x03670D00 STR W19, [X21 + 0x18]
	0x03670D04 LDP X20, X19, [X31 + 0x10]
	0x03670D08 LDP X30, X21, [X31], #0x20
	0x03670D0C RET
	0x03670D10 LDR W8, [X0 + 0x14]
	0x03670D14 SUB W8, W8, 0x64
	0x03670D18 CMP W8, 0x64
	0x03670D1C CSET W0, CC
	0x03670D20 RET
	0x03670D24 LDR W8, [X0 + 0x14]
	0x03670D28 SUB W8, W8, 0xC8
	0x03670D2C CMP W8, 0x64
	0x03670D30 CSET W0, CC
	0x03670D34 RET
	0x03670D38 LDR W8, [X0 + 0x14]
	0x03670D3C SUB W8, W8, 0x190
	0x03670D40 CMP W8, 0x64
	0x03670D44 CSET W0, CC
	0x03670D48 RET
	0x03670D4C LDR W8, [X0 + 0x14]
	0x03670D50 SUB W8, W8, 0x1F4
	0x03670D54 CMP W8, 0x64
	0x03670D58 CSET W0, CC
	0x03670D5C RET
	0x03670D60 LDR W8, [X0 + 0x14]
	0x03670D64 SUB W8, W8, 0x64
	0x03670D68 CMP W8, 0x1F3
	0x03670D6C CSET W0, HI
	0x03670D70 RET
	0x03670D74 STP X30, X21, [X31 - 0x20]!
	0x03670D78 STP X20, X19, [X31 + 0x10]
	0x03670D7C ADRP X21, 0xD70000
	0x03670D80 ADRP X20, 0xA83000
	0x03670D84 LDRB W8, [X21 + 0x778]
	0x03670D88 LDR X20, [X20 + 0x8F0]
	0x03670D8C MOV X19, X0
	0x03670D90 TBNZ X8, 0x0, 0x3670DA8
	0x03670D94 ADRP X0, 0xA83000
	0x03670D98 LDR X0, [X0 + 0x8F0]
	0x03670D9C BL 0x1C16CF4
	0x03670DA0 MOVZ W8, 0x1
	0x03670DA4 STRB W8, [X21 + 0x778]
	0x03670DA8 MOVN W8, 0x0
	0x03670DAC STR W8, [X19 + 0x14]
	0x03670DB0 LDR X0, [X20]
	0x03670DB4 BL 0x1C16F10
	0x03670DB8 MOV X1, X31
	0x03670DBC MOV X20, X0
	0x03670DC0 BL 0x3231AC4
	0x03670DC4 STR X20, [X19 + 0x20]
	0x03670DC8 MOV X0, X19
	0x03670DCC LDP X20, X19, [X31 + 0x10]
	0x03670DD0 MOV X1, X31
	0x03670DD4 LDP X30, X21, [X31], #0x20
	0x03670DD8 B 0x33BDD8C
	0x03670DDC STR X30, [X31 - 0x20]!
	0x03670DE0 STP X20, X19, [X31 + 0x10]
	0x03670DE4 ADRP X20, 0xD70000
	0x03670DE8 LDRB W8, [X20 + 0x77A]
	0x03670DEC MOV X19, X0
	0x03670DF0 TBNZ X8, 0x0, 0x3670E08
	0x03670DF4 ADRP X0, 0xACD000
	0x03670DF8 LDR X0, [X0 + 0x8C0]
	0x03670DFC BL 0x1C16CF4
	0x03670E00 MOVZ W8, 0x1
	0x03670E04 STRB W8, [X20 + 0x77A]
	0x03670E08 LDR X0, [X19 + 0xB8]
	0x03670E0C CBZ X0, 0x3670E74
	0x03670E10 LDR X8, [X0]
	0x03670E14 LDP X9, X1, [X8 + 0x188]
	0x03670E18 BLR X9
	0x03670E1C TBZ X0, 0x0, 0x3670E70
	0x03670E20 LDR X0, [X19 + 0xB8]
	0x03670E24 CBZ X0, 0x3670E80
	0x03670E28 LDR X8, [X0]
	0x03670E2C LDP X9, X1, [X8 + 0x198]
	0x03670E30 BLR X9
	0x03670E34 CBZ X0, 0x3670E74

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD71000
	007 Move X21, 0xACE000
	008 Move W8, [X20+1909]
	009 Move X21, [X21+2152]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xACE000
	016 Move X0, [X0+2088]
	017 Call 0x1C17CF4
	018 Move X0, 0xACE000
	019 Move X0, [X0+2152]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1909], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X20, X0
	027 Call ReceiveState..ctor, X0, X1
	028 Move X8, [X19+112]
	029 Compare X8, 0
	030 JumpIfEqual {98}
	031 Move W8, [X8+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W2, TEMP
	036 Move X0, X19
	037 Move X1, X20
	038 Call CommandStream.ReceiveCommandResponseCallback, X0, X1, X2
	039 Compare X20, 0
	040 JumpIfEqual {99}
	041 Move X0, [X20+16]
	042 Move W8, [X19+72]
	043 Compare W8, 0
	044 JumpIfEqual {76}
	045 Compare X20, 0
	046 JumpIfEqual {100}
	047 Move X21, [X20+32]
	048 Compare X21, 0
	049 JumpIfEqual {101}
	050 Move X22, 0xACE000
	051 Move X22, [X22+2088]
	052 Move X0, [X22]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X22]
	058 Move X8, [X0+184]
	059 Move X9, [X19]
	060 Move W3, [X21+24]
	061 Move X4, [X8+8]
	062 Move X8, [X9+696]
	063 Move X6, [X9+704]
	064 Move X0, X19
	065 Move X1, X21
	066 Move W2, W31
	067 Move X5, X20
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X0, X31
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return X0
	076 Compare X20, 0
	077 JumpIfEqual {102}
	078 Move X1, [X20+32]
	079 Compare X1, 0
	080 JumpIfEqual {103}
	081 Move X8, [X19]
	082 Move W3, [X1+24]
	083 Move X9, [X8+856]
	084 Move X4, [X8+864]
	085 Move X0, X19
	086 Move W2, W31
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W21, W0
	089 Compare W0, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X19
	092 Move X1, X31
	093 Call NetworkStreamWrapper.CloseSocket, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move W2, W21
	097 Call CommandStream.ReceiveCommandResponseCallback, X0, X1, X2
	098 Call 0x1C17F20
	099 Call 0x1C17F20
	100 Call 0x1C17F20
	101 Call 0x1C17F20
	102 Call 0x1C17F20
	103 Call 0x1C17F20
	104 Move X21, X1
	105 Move X20, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, X20
	108 Call 0x3EB2AD0
	109 Move X20, X0
	110 Move X0, 0xAB2000
	111 Move X0, [X0+1960]
	112 Call 0x1C17D08
	113 Move X8, [X20]
	114 Move X1, [X8]
	115 Call 0x1C18270
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {121}
	120 Move W21, 7
	121 Move X0, 0xA8A000
	122 Move X0, [X0+3264]
	123 Call 0x1C17D08
	124 Move X8, [X20]
	125 Move X1, [X8]
	126 Call 0x1C18270
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {144}
	131 Move W21, 8
	132 Move X20, [X20]
	133 Call 0x3EB2AE0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X20
	137 Call 0x1C17F18
	138 Move W8, [X19+88]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move W8, 1
	141 Move [X19+56], W8
	142 Move X0, X20
	143 Call 0x1C17F18
	144 Move W0, 8
	145 Call 0x3EB2AF0
	146 Move X8, [X20]
	147 Move [X0], X8
	148 Move X1, 0x845000
	149 Add X1, X1, 3672
	150 Move X2, X31
	151 Call 0x3EB2B00
	152 Move X21, X1
	153 Move X20, X0
	154 Call 0x3EB2AE0
	155 Move X21, X1
	156 Move X20, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3EB2AD0
	160 Move X19, X0
	161 Move X0, 0xA84000
	162 Move X0, [X0+2000]
	163 Call 0x1C17D08
	164 Move X8, [X19]
	165 Move X1, [X8]
	166 Call 0x1C18270
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {188}
	171 Move X19, [X19]
	172 Call 0x3EB2AE0
	173 Move X0, 0xAAF000
	174 Move X0, [X0+816]
	175 Call 0x1C17D08
	176 Compare X19, 0
	177 JumpIfEqual {196}
	178 Move X8, [X19]
	179 Move W9, [X0+304]
	180 Move W10, [X8+304]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, [X8+200]
	183 Add X8, X8, X9
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X19
	187 Call 0x1C17F18
	188 Move W0, 8
	189 Call 0x3EB2AF0
	190 Move X8, [X19]
	191 Move [X0], X8
	192 Move X1, 0x845000
	193 Add X1, X1, 3672
	194 Move X2, X31
	195 Call 0x3EB2B00
	196 Move X0, 0xACE000
	197 Move X0, [X0+2160]
	198 Call 0x1C17D08
	199 Move W2, 3
	200 Move X1, X0
	201 Move X3, X19
	202 Call CommandStream.GenerateException, X0, X1, X2, X3
	203 Move X19, X0
	204 Move X0, 0xACE000
	205 Move X0, [X0+2168]
	206 Call 0x1C17D08
	207 Move X1, X0
	208 Move X0, X19
	209 Call 0x1C17DEC
	210 Move X20, X0
	211 Call 0x3EB2AE0
	212 Move X0, X20
	213 Call 0x1D2D690
	214 Call 0x1991590

Method: System.Void ReceiveCommandResponseCallback(System.Net.ReceiveState state, System.Int32 bytesRead)

Disassembly:
	0x0367130C CBZ X19, 0x367132C
	0x03671310 MOV X0, X19
	0x03671314 MOV X1, X31
	0x03671318 BL 0x36AC3C8
	0x0367131C CBNZ X20, 0x3671330
	0x03671320 LDP X20, X19, [X31 + 0x10]
	0x03671324 LDP X30, X21, [X31], #0x20
	0x03671328 RET
	0x0367132C BL 0x1C16F20
	0x03671330 MOV X0, X20
	0x03671334 BL 0x1C16F18
	0x03671338 MOV X20, X31
	0x0367133C B 0x3671344
	0x03671340 MOV X21, X0
	0x03671344 CBNZ X19, 0x367134C
	0x03671348 BL 0x1C16F20
	0x0367134C MOV X0, X19
	0x03671350 MOV X1, X31
	0x03671354 BL 0x36AC3C8
	0x03671358 CBNZ X20, 0x3671364
	0x0367135C MOV X0, X21
	0x03671360 BL 0x1D2C690
	0x03671364 MOV X0, X20
	0x03671368 BL 0x1C16F18
	0x0367136C BL 0x1990590
	0x03671370 STR X30, [X31 - 0x20]!
	0x03671374 STP X20, X19, [X31 + 0x10]
	0x03671378 ADRP X19, 0xD6F000
	0x0367137C LDRB W8, [X19 + 0x77E]
	0x03671380 MOV X20, X0
	0x03671384 TBNZ X8, 0x0, 0x36713A8
	0x03671388 ADRP X0, 0xACC000
	0x0367138C LDR X0, [X0 + 0x8C8]
	0x03671390 BL 0x1C16CF4
	0x03671394 ADRP X0, 0xAAA000
	0x03671398 LDR X0, [X0 + 0x718]
	0x0367139C BL 0x1C16CF4
	0x036713A0 MOVZ W8, 0x1
	0x036713A4 STRB W8, [X19 + 0x77E]
	0x036713A8 CBZ X20, 0x36714EC
	0x036713AC ADRP X10, 0xAAA000
	0x036713B0 LDR X8, [X20]
	0x036713B4 LDR X10, [X10 + 0x718]
	0x036713B8 LDRH W9, [X8 + 0x12E]
	0x036713BC LDR X1, [X10]
	0x036713C0 CBZ X9, 0x36713E4
	0x036713C4 LDR X10, [X8 + 0xB0]
	0x036713C8 ADD X10, X10, 0x8
	0x036713CC LDUR X11, [X10 - 0x8]
	0x036713D0 CMP X11, X1
	0x036713D4 B.EQ 0x36713F4
	0x036713D8 SUBS X9, X9, 0x1
	0x036713DC ADD X10, X10, 0x10
	0x036713E0 B.NE 0x36713CC
	0x036713E4 MOVZ W2, 0x2
	0x036713E8 MOV X0, X20
	0x036713EC BL 0x1C5C788
	0x036713F0 B 0x3671404
	0x036713F4 LDR W9, [X10]
	0x036713F8 ADD W9, W9, 0x2
	0x036713FC ADD X8, X8, W9, 0x4, SXTW
	0x03671400 ADD X0, X8, 0x138
	0x03671404 LDP X8, X1, [X0]
	0x03671408 MOV X0, X20
	0x0367140C BLR X8
	0x03671410 MOV X19, X0
	0x03671414 CBZ X0, 0x367147C
	0x03671418 ADRP X9, 0xACC000
	0x0367141C LDR X9, [X9 + 0x8C8]
	0x03671420 LDR X8, [X19]
	0x03671424 LDR X1, [X9]
	0x03671428 LDRB W10, [X8 + 0x130]
	0x0367142C LDRB W9, [X1 + 0x130]
	0x03671430 CMP W10, W9
	0x03671434 B.CC 0x3671474
	0x03671438 LDR X8, [X8 + 0xC8]
	0x0367143C ADD X8, X8, X9, 0x3, LSL
	0x03671440 LDUR X8, [X8 - 0x8]
	0x03671444 CMP X8, X1
	0x03671448 B.NE 0x3671474
	0x0367144C LDR X0, [X19 + 0x88]
	0x03671450 CBZ X0, 0x3671480
	0x03671454 MOV X1, X20
	0x03671458 MOV X2, X31
	0x0367145C BL 0x36AB670
	0x03671460 MOV X0, X19
	0x03671464 BL 0x366F2DC
	0x03671468 LDP X20, X19, [X31 + 0x10]
	0x0367146C LDR X30, [X31], #0x20
	0x03671470 RET
	0x03671474 MOV X0, X19
	0x03671478 BL 0x1C171E0
	0x0367147C BL 0x1C16F20
	0x03671480 BL 0x1C16F20
	0x03671484 B 0x367148C
	0x03671488 B 0x367148C
	0x0367148C MOV X20, X0
	0x03671490 CMP W1, 0x1
	0x03671494 B.NE 0x3671518
	0x03671498 MOV X0, X20
	0x0367149C BL 0x3EB1AD0
	0x036714A0 MOV X20, X0
	0x036714A4 ADRP X0, 0xA82000
	0x036714A8 LDR X0, [X0 + 0x7D0]
	0x036714AC BL 0x1C16D08
	0x036714B0 LDR X8, [X20]
	0x036714B4 LDR X1, [X8]
	0x036714B8 BL 0x1C17270
	0x036714BC TBZ X0, 0x0, 0x36714F0
	0x036714C0 LDR X20, [X20]
	0x036714C4 BL 0x3EB1AE0
	0x036714C8 CBZ X19, 0x36714EC
	0x036714CC MOV X0, X19
	0x036714D0 MOV X1, X31
	0x036714D4 BL 0x367B0B4
	0x036714D8 MOV X0, X19
	0x036714DC MOV X1, X20
	0x036714E0 LDP X20, X19, [X31 + 0x10]
	0x036714E4 LDR X30, [X31], #0x20
	0x036714E8 B 0x366F134
	0x036714EC BL 0x1C16F20
	0x036714F0 MOVZ W0, 0x8
	0x036714F4 BL 0x3EB1AF0
	0x036714F8 LDR X8, [X20]
	0x036714FC STR X8, [X0]
	0x03671500 ADRP X1, 0x843000
	0x03671504 ADD X1, X1, 0xE58
	0x03671508 MOV X2, X31
	0x0367150C BL 0x3EB1B00
	0x03671510 MOV X20, X0
	0x03671514 BL 0x3EB1AE0
	0x03671518 MOV X0, X20
	0x0367151C BL 0x1D2C690
	0x03671520 BL 0x1990590
	0x03671524 STR X30, [X31 - 0x20]!
	0x03671528 STP X20, X19, [X31 + 0x10]
	0x0367152C ADRP X19, 0xD6F000
	0x03671530 LDRB W8, [X19 + 0x77F]
	0x03671534 MOV X20, X0
	0x03671538 TBNZ X8, 0x0, 0x367155C
	0x0367153C ADRP X0, 0xACC000
	0x03671540 LDR X0, [X0 + 0x8C8]
	0x03671544 BL 0x1C16CF4
	0x03671548 ADRP X0, 0xAAA000
	0x0367154C LDR X0, [X0 + 0x718]
	0x03671550 BL 0x1C16CF4
	0x03671554 MOVZ W8, 0x1
	0x03671558 STRB W8, [X19 + 0x77F]
	0x0367155C CBZ X20, 0x36716B4
	0x03671560 ADRP X10, 0xAAA000
	0x03671564 LDR X8, [X20]
	0x03671568 LDR X10, [X10 + 0x718]
	0x0367156C LDRH W9, [X8 + 0x12E]
	0x03671570 LDR X1, [X10]
	0x03671574 CBZ X9, 0x3671598
	0x03671578 LDR X10, [X8 + 0xB0]
	0x0367157C ADD X10, X10, 0x8
	0x03671580 LDUR X11, [X10 - 0x8]
	0x03671584 CMP X11, X1
	0x03671588 B.EQ 0x36715A8
	0x0367158C SUBS X9, X9, 0x1
	0x03671590 ADD X10, X10, 0x10
	0x03671594 B.NE 0x3671580
	0x03671598 MOVZ W2, 0x2
	0x0367159C MOV X0, X20
	0x036715A0 BL 0x1C5C788
	0x036715A4 B 0x36715B8
	0x036715A8 LDR W9, [X10]
	0x036715AC ADD W9, W9, 0x2
	0x036715B0 ADD X8, X8, W9, 0x4, SXTW
	0x036715B4 ADD X0, X8, 0x138
	0x036715B8 LDP X8, X1, [X0]
	0x036715BC MOV X0, X20
	0x036715C0 BLR X8
	0x036715C4 MOV X19, X0
	0x036715C8 CBZ X0, 0x3671640
	0x036715CC ADRP X9, 0xACC000
	0x036715D0 LDR X9, [X9 + 0x8C8]
	0x036715D4 LDR X8, [X19]
	0x036715D8 LDR X1, [X9]
	0x036715DC LDRB W10, [X8 + 0x130]
	0x036715E0 LDRB W9, [X1 + 0x130]
	0x036715E4 CMP W10, W9
	0x036715E8 B.CC 0x3671638
	0x036715EC LDR X8, [X8 + 0xC8]
	0x036715F0 ADD X8, X8, X9, 0x3, LSL
	0x036715F4 LDUR X8, [X8 - 0x8]
	0x036715F8 CMP X8, X1
	0x036715FC B.NE 0x3671638
	0x03671600 LDR X8, [X19 + 0x98]
	0x03671604 CBZ X8, 0x3671644
	0x03671608 LDR X0, [X8 + 0x48]
	0x0367160C CBZ X0, 0x3671648
	0x03671610 LDR X8, [X0]
	0x03671614 LDR X9, [X8 + 0x3E8]
	0x03671618 LDR X2, [X8 + 0x3F0]
	0x0367161C MOV X1, X20
	0x03671620 BLR X9
	0x03671624 MOV X0, X19
	0x03671628 BL 0x366F2DC
	0x0367162C LDP X20, X19, [X31 + 0x10]
	0x03671630 LDR X30, [X31], #0x20
	0x03671634 RET
	0x03671638 MOV X0, X19
	0x0367163C BL 0x1C171E0
	0x03671640 BL 0x1C16F20
	0x03671644 BL 0x1C16F20
	0x03671648 BL 0x1C16F20
	0x0367164C B 0x3671654
	0x03671650 B 0x3671654
	0x03671654 MOV X20, X0
	0x03671658 CMP W1, 0x1
	0x0367165C B.NE 0x36716E0
	0x03671660 MOV X0, X20
	0x03671664 BL 0x3EB1AD0
	0x03671668 MOV X20, X0
	0x0367166C ADRP X0, 0xA82000
	0x03671670 LDR X0, [X0 + 0x7D0]
	0x03671674 BL 0x1C16D08
	0x03671678 LDR X8, [X20]
	0x0367167C LDR X1, [X8]
	0x03671680 BL 0x1C17270
	0x03671684 TBZ X0, 0x0, 0x36716B8
	0x03671688 LDR X20, [X20]
	0x0367168C BL 0x3EB1AE0
	0x03671690 CBZ X19, 0x36716B4
	0x03671694 MOV X0, X19
	0x03671698 MOV X1, X31
	0x0367169C BL 0x367B0B4
	0x036716A0 MOV X0, X19
	0x036716A4 MOV X1, X20
	0x036716A8 LDP X20, X19, [X31 + 0x10]
	0x036716AC LDR X30, [X31], #0x20
	0x036716B0 B 0x366F134
	0x036716B4 BL 0x1C16F20
	0x036716B8 MOVZ W0, 0x8
	0x036716BC BL 0x3EB1AF0
	0x036716C0 LDR X8, [X20]
	0x036716C4 STR X8, [X0]
	0x036716C8 ADRP X1, 0x843000
	0x036716CC ADD X1, X1, 0xE58
	0x036716D0 MOV X2, X31
	0x036716D4 BL 0x3EB1B00
	0x036716D8 MOV X20, X0
	0x036716DC BL 0x3EB1AE0
	0x036716E0 MOV X0, X20
	0x036716E4 BL 0x1D2C690
	0x036716E8 BL 0x1990590
	0x036716EC STP X30, X27, [X31 - 0x50]!
	0x036716F0 STP X26, X25, [X31 + 0x10]
	0x036716F4 STP X24, X23, [X31 + 0x20]
	0x036716F8 STP X22, X21, [X31 + 0x30]
	0x036716FC STP X20, X19, [X31 + 0x40]
	0x03671700 ADRP X21, 0xD6F000
	0x03671704 LDRB W8, [X21 + 0x780]
	0x03671708 MOV X19, X1
	0x0367170C MOV X20, X0
	0x03671710 TBNZ X8, 0x0, 0x3671758
	0x03671714 ADRP X0, 0xACC000
	0x03671718 LDR X0, [X0 + 0x8C8]
	0x0367171C BL 0x1C16CF4
	0x03671720 ADRP X0, 0xACC000
	0x03671724 LDR X0, [X0 + 0x8E0]
	0x03671728 BL 0x1C16CF4
	0x0367172C ADRP X0, 0xACC000
	0x03671730 LDR X0, [X0 + 0x820]
	0x03671734 BL 0x1C16CF4
	0x03671738 ADRP X0, 0xACC000
	0x0367173C LDR X0, [X0 + 0x8E8]
	0x03671740 BL 0x1C16CF4
	0x03671744 ADRP X0, 0xACC000
	0x03671748 LDR X0, [X0 + 0x8F0]
	0x0367174C BL 0x1C16CF4
	0x03671750 MOVZ W8, 0x1
	0x03671754 STRB W8, [X21 + 0x780]
	0x03671758 LDR X23, [X20 + 0x88]
	0x0367175C CBZ X23, 0x3671938
	0x03671760 ADRP X27, 0xACC000
	0x03671764 ADRP X26, 0xACC000
	0x03671768 LDR X22, [X20 + 0x98]
	0x0367176C LDR X27, [X27 + 0x8E0]
	0x03671770 LDR X26, [X26 + 0x820]
	0x03671774 CBZ X22, 0x36717CC
	0x03671778 LDR X21, [X20 + 0x40]
	0x0367177C MOV X0, X20
	0x03671780 BL 0x3671980
	0x03671784 LDR X8, [X27]
	0x03671788 MOV W23, W0
	0x0367178C MOV X0, X8
	0x03671790 BL 0x1C16F10
	0x03671794 MOV X24, X0
	0x03671798 CBZ X21, 0x36717AC
	0x0367179C LDR X1, [X26]
	0x036717A0 LDR X8, [X21]
	0x036717A4 CMP X8, X1
	0x036717A8 B.NE 0x3671970
	0x036717AC MOV X0, X24
	0x036717B0 MOV X1, X22
	0x036717B4 MOV X2, X21
	0x036717B8 MOV W3, W23
	0x036717BC BL 0x3671A18
	0x036717C0 STR X24, [X19]
	0x036717C4 STR X31, [X20 + 0x98]
	0x036717C8 B 0x367191C
	0x036717CC ADRP X8, 0xACC000
	0x036717D0 LDR X8, [X8 + 0x8E8]
	0x036717D4 LDR X0, [X8]
	0x036717D8 BL 0x1C16F10
	0x036717DC MOVZ W2, 0x1
	0x036717E0 MOV X1, X23
	0x036717E4 MOV X3, X31
	0x036717E8 MOV X21, X0
	0x036717EC BL 0x36ACB1C
	0x036717F0 MOV X0, X20
	0x036717F4 MOV X1, X31
	0x036717F8 BL 0x367D78C
	0x036717FC TBZ X0, 0x0, 0x36718D0
	0x03671800 LDR X22, [X20 + 0x40]
	0x03671804 CBZ X22, 0x367196C
	0x03671808 LDR X1, [X26]
	0x0367180C LDR X8, [X22]
	0x03671810 CMP X8, X1
	0x03671814 B.NE 0x3671978
	0x03671818 LDR X8, [X22]
	0x0367181C LDR X23, [X20 + 0x88]
	0x03671820 MOV X0, X22
	0x03671824 LDP X9, X1, [X8 + 0x1D8]
	0x03671828 BLR X9
	0x0367182C CBZ X0, 0x367196C
	0x03671830 MOV X1, X31
	0x03671834 BL 0x361C394
	0x03671838 MOV X24, X0
	0x0367183C MOV X0, X22
	0x03671840 MOV X1, X31
	0x03671844 BL 0x367C944
	0x03671848 ADRP X8, 0xACC000
	0x0367184C LDR X8, [X8 + 0x8F0]
	0x03671850 MOV X25, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xD70000
	011 Move W8, [X22+1910]
	012 Move W21, W2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xA8C000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0xACD000
	023 Move X0, [X0+2088]
	024 Call 0x1C17CF4
	025 Move X0, 0xACD000
	026 Move X0, [X0+1128]
	027 Call 0x1C17CF4
	028 Move X0, 0xA83000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0xA85000
	032 Move X0, [X0+632]
	033 Call 0x1C17CF4
	034 Move X0, 0xACD000
	035 Move X0, [X0+2192]
	036 Call 0x1C17CF4
	037 Move X0, 0xACD000
	038 Move X0, [X0+2200]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+1910], W8
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W8, TEMP
	045 Move [X31], X31
	046 Move [X31+8], W31
	047 Move [X31+12], W8
	048 Compare X20, 0
	049 JumpIfEqual {326}
	050 Move W8, [X20+24]
	051 Move [X31+8], W8
	052 Move X1, [X19+112]
	053 Compare X1, 0
	054 JumpIfEqual {326}
	055 Move X23, 0xACD000
	056 Move X24, 0xA8C000
	057 Move X25, 0xA85000
	058 Move X23, [X23+2088]
	059 Move X24, [X24+2264]
	060 Move X25, [X25+632]
	061 Move W8, [X1+16]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X20+16]
	064 Compare X8, 0
	065 JumpIfEqual {326}
	066 Move X0, [X8+32]
	067 Compare X0, 0
	068 JumpIfEqual {326}
	069 Move X2, X31
	070 Call StringBuilder.Append, X0, X1
	071 Move X8, [X25]
	072 Move X9, [X19]
	073 Add X2, X31, 8
	074 Add X3, X31, 12
	075 Move X8, [X8+184]
	076 Move X0, X19
	077 Move X8, [X8]
	078 Move [X19+112], X8
	079 Move X1, [X20+16]
	080 Move X8, [X9+1016]
	081 Move X4, [X9+1024]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {327}
	087 Move W8, [X31+12]
	088 Move TEMP, X8
	089 And TEMP, TEMP, -2147483648
	090 Compare TEMP, -2147483648
	091 JumpIfNotEqual {220}
	092 Move W8, [X31+8]
	093 Move X21, [X20+32]
	094 Move [X20+24], W8
	095 Move W8, [X19+72]
	096 Compare W8, 0
	097 JumpIfNotEqual {201}
	098 Compare X21, 0
	099 JumpIfEqual {341}
	100 Move X8, [X19]
	101 Move W3, [X21+24]
	102 Move X9, [X8+856]
	103 Move X4, [X8+864]
	104 Move X0, X19
	105 Move X1, X21
	106 Move W2, W31
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move W21, W0
	109 Compare W0, 0
	110 JumpIfNotEqual {114}
	111 Move X0, X19
	112 Move X1, X31
	113 Call NetworkStreamWrapper.CloseSocket, X0
	114 Move W8, [X20+24]
	115 Move [X31+8], W8
	116 Move X1, [X19+112]
	117 Compare X1, 0
	118 JumpIfNotEqual {61}
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, [X19+128]
	121 Compare X0, 0
	122 JumpIfEqual {326}
	123 Move X8, [X0]
	124 Move X1, [X20+32]
	125 Move W2, W31
	126 Move W3, W21
	127 Move X9, [X8+392]
	128 Move X4, [X8+400]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X24]
	131 Move W1, W0
	132 Move X0, X8
	133 Call 0x1C17D6C
	134 Move X8, [X19+128]
	135 Compare X8, 0
	136 JumpIfEqual {326}
	137 Move X9, [X8]
	138 Move X1, [X20+32]
	139 Move X22, X0
	140 Move X0, X8
	141 Move X10, [X9+456]
	142 Move X7, [X9+464]
	143 Move W2, W31
	144 Move W3, W21
	145 Move X4, X22
	146 Move W5, W31
	147 Move W6, W31
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W3, W0
	150 Move X0, X31
	151 Move X1, X22
	152 Move W2, W31
	153 Move X4, X31
	154 Call String.CreateString, X0, X1, X2, X3
	155 Move X8, [X20+16]
	156 Compare X8, 0
	157 JumpIfEqual {326}
	158 Move X21, X0
	159 Move X0, [X8+32]
	160 Compare X0, 0
	161 JumpIfEqual {326}
	162 Move X1, X21
	163 Move X2, X31
	164 Call StringBuilder.Append, X0, X1
	165 Move X8, [X19]
	166 Move X1, [X20+16]
	167 Add X2, X31, 8
	168 Add X3, X31, 12
	169 Move X9, [X8+1016]
	170 Move X4, [X8+1024]
	171 Move X0, X19
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {327}
	177 Move W8, [X31+12]
	178 Move TEMP, X8
	179 And TEMP, TEMP, -2147483648
	180 Compare TEMP, -2147483648
	181 JumpIfEqual {92}
	182 Move X8, [X20+16]
	183 Compare X8, 0
	184 JumpIfEqual {326}
	185 Move X0, [X8+32]
	186 Compare X0, 0
	187 JumpIfEqual {326}
	188 Move X1, X31
	189 Call StringBuilder.get_Length, X0
	190 Move W8, [X31+12]
	191 Subtract W2, W0, W8
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Compare X21, 0
	194 JumpIfEqual {326}
	195 Move W8, [X21+16]
	196 Move X0, X21
	197 Move X3, X31
	198 Subtract W1, W8, W2
	199 Call String.Substring, X0, X1, X2
	200 Move [X19+112], X0
	201 Compare X21, 0
	202 JumpIfEqual {342}
	203 Move X0, [X23]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {209}
	207 Call 0x1C17DFC
	208 Move X0, [X23]
	209 Move X8, [X0+184]
	210 Move X9, [X19]
	211 Move W3, [X21+24]
	212 Move X4, [X8+8]
	213 Move X8, [X9+696]
	214 Move X6, [X9+704]
	215 Move X0, X19
	216 Move X1, X21
	217 Move W2, W31
	218 Move X5, X20
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, [X20+16]
	221 Compare X8, 0
	222 JumpIfEqual {326}
	223 Move X0, [X8+32]
	224 Compare X0, 0
	225 JumpIfEqual {326}
	226 Move X8, [X0]
	227 Move X9, [X8+360]
	228 Move X1, [X8+368]
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Compare X0, 0
	231 JumpIfEqual {326}
	232 Move W2, [X31+12]
	233 Move X22, [X20+16]
	234 Move W1, W31
	235 Move X3, X31
	236 Move X21, X0
	237 Call String.Substring, X0, X1, X2
	238 Compare X22, 0
	239 JumpIfEqual {326}
	240 Move [X22+24], X0
	241 Move X23, 0xACD000
	242 Move X23, [X23+1128]
	243 Move X0, [X23]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Call NetEventSource.get_IsEnabled
	249 Move TEMP, X0
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfNotEqual {299}
	253 Move X8, 0xA83000
	254 Move X8, [X8+2512]
	255 Move W1, 1
	256 Move X0, [X8]
	257 Call 0x1C17D6C
	258 Move W8, [X31+12]
	259 Move X22, X0
	260 Move X0, X21
	261 Move W1, W31
	262 Subtract W2, W8, 2
	263 Move X3, X31
	264 Call String.Substring, X0, X1, X2
	265 Compare X22, 0
	266 JumpIfEqual {326}
	267 Move X21, X0
	268 Compare X0, 0
	269 JumpIfEqual {276}
	270 Move X8, [X22]
	271 Move X0, X21
	272 Move X1, [X8+64]
	273 Call 0x1C17E00
	274 Compare X0, 0
	275 JumpIfEqual {344}
	276 Move W8, [X22+24]
	277 Compare W8, 0
	278 JumpIfEqual {343}
	279 Move [X22+32], X21
	280 Move X8, 0xACD000
	281 Move X8, [X8+2192]
	282 Move X1, X22
	283 Move X2, X31
	284 Move X0, [X8]
	285 Call FormattableStringFactory.Create, X0, X1
	286 Move X8, [X23]
	287 Move X21, X0
	288 Move W9, [X8+224]
	289 Compare W9, 0
	290 JumpIfNotEqual {293}
	291 Move X0, X8
	292 Call 0x1C17DFC
	293 Move X8, 0xACD000
	294 Move X8, [X8+2200]
	295 Move X0, X19
	296 Move X1, X21
	297 Move X2, [X8]
	298 Call NetEventSource.Info, X0, X1, X2
	299 Move W8, [X19+72]
	300 Compare W8, 0
	301 JumpIfEqual {316}
	302 Move X8, [X20+16]
	303 Compare X8, 0
	304 JumpIfEqual {306}
	305 Move [X19+96], X8
	306 Add X1, X31, 0
	307 Move X0, X19
	308 Move [X31], X31
	309 Call CommandStream.PostReadCommandProcessing, X0, X1
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfEqual {316}
	314 Move X0, X19
	315 Call CommandStream.ContinueCommandPipeline, X0
	316 Move X20, [X31+64]
	317 Move X19, [X31+72]
	318 Move X22, [X31+48]
	319 Move X21, [X31+56]
	320 Move X24, [X31+32]
	321 Move X23, [X31+40]
	322 Move X30, [X31+16]
	323 Move X25, [X31+24]
	324 Add X31, X31, 80
	325 Return 
	326 Call 0x1C17F20
	327 Move X0, 0xACD000
	328 Move X0, [X0+2176]
	329 Call 0x1C17D08
	330 Move W2, 11
	331 Move X1, X0
	332 Move X3, X31
	333 Call CommandStream.GenerateException, X0, X1, X2, X3
	334 Move X19, X0
	335 Move X0, 0xACD000
	336 Move X0, [X0+2208]
	337 Call 0x1C17D08
	338 Move X1, X0
	339 Move X0, X19
	340 Call 0x1C17DEC
	341 Call 0x1C17F20
	342 Call 0x1C17F20
	343 Call 0x1C17F28
	344 Call 0x1C17F44
	345 Move X1, X31
	346 Call 0x1C17DEC
	347 Move X20, X0
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X0, X20
	350 Call 0x3EB2AD0
	351 Move X20, X0
	352 Move X0, 0xAB1000
	353 Move X0, [X0+1960]
	354 Call 0x1C17D08
	355 Move X8, [X20]
	356 Move X1, [X8]
	357 Call 0x1C18270
	358 Move TEMP, X0
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {370}
	362 Move X20, [X20]
	363 Call 0x3EB2AE0
	364 Move W8, [X19+88]
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move W8, 1
	367 Move [X19+56], W8
	368 Move X0, X20
	369 Call 0x1C17F18
	370 Move X0, 0xA89000
	371 Move X0, [X0+3264]
	372 Call 0x1C17D08
	373 Move X8, [X20]
	374 Move X1, [X8]
	375 Call 0x1C18270
	376 Move TEMP, X0
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfNotEqual {384}
	380 Move X19, [X20]
	381 Call 0x3EB2AE0
	382 Move X0, X19
	383 Call 0x1C17F18
	384 Move W0, 8
	385 Call 0x3EB2AF0
	386 Move X8, [X20]
	387 Move [X0], X8
	388 Move X1, 0x844000
	389 Add X1, X1, 3672
	390 Move X2, X31
	391 Call 0x3EB2B00
	392 Move X20, X0
	393 Call 0x3EB2AE0
	394 Move X0, X20
	395 Call 0x1D2D690
	396 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03671BE8 BL 0x1C16CF4
	0x03671BEC ADRP X0, 0xACC000
	0x03671BF0 LDR X0, [X0 + 0x908]
	0x03671BF4 BL 0x1C16CF4
	0x03671BF8 ADRP X0, 0xACC000
	0x03671BFC LDR X0, [X0 + 0x820]
	0x03671C00 BL 0x1C16CF4
	0x03671C04 ADRP X0, 0xACC000
	0x03671C08 LDR X0, [X0 + 0x468]
	0x03671C0C BL 0x1C16CF4
	0x03671C10 ADRP X0, 0xA82000
	0x03671C14 LDR X0, [X0 + 0x9D0]
	0x03671C18 BL 0x1C16CF4
	0x03671C1C ADRP X0, 0xA82000
	0x03671C20 LDR X0, [X0 + 0x8F0]
	0x03671C24 BL 0x1C16CF4
	0x03671C28 ADRP X0, 0xACC000
	0x03671C2C LDR X0, [X0 + 0x8F0]
	0x03671C30 BL 0x1C16CF4
	0x03671C34 ADRP X0, 0xACC000
	0x03671C38 LDR X0, [X0 + 0x910]
	0x03671C3C BL 0x1C16CF4
	0x03671C40 ADRP X0, 0xACC000
	0x03671C44 LDR X0, [X0 + 0x900]
	0x03671C48 BL 0x1C16CF4
	0x03671C4C ADRP X0, 0xACC000
	0x03671C50 LDR X0, [X0 + 0x918]
	0x03671C54 BL 0x1C16CF4
	0x03671C58 ADRP X0, 0xACC000
	0x03671C5C LDR X0, [X0 + 0x920]
	0x03671C60 BL 0x1C16CF4
	0x03671C64 ADRP X0, 0xACC000
	0x03671C68 LDR X0, [X0 + 0x928]
	0x03671C6C BL 0x1C16CF4
	0x03671C70 ADRP X0, 0xACC000
	0x03671C74 LDR X0, [X0 + 0x930]
	0x03671C78 BL 0x1C16CF4
	0x03671C7C ADRP X0, 0xACC000
	0x03671C80 LDR X0, [X0 + 0x938]
	0x03671C84 BL 0x1C16CF4
	0x03671C88 ADRP X0, 0xACC000
	0x03671C8C LDR X0, [X0 + 0x940]
	0x03671C90 BL 0x1C16CF4
	0x03671C94 ADRP X0, 0xACC000
	0x03671C98 LDR X0, [X0 + 0x948]
	0x03671C9C BL 0x1C16CF4
	0x03671CA0 ADRP X0, 0xACC000
	0x03671CA4 LDR X0, [X0 + 0x950]
	0x03671CA8 BL 0x1C16CF4
	0x03671CAC ADRP X0, 0xACC000
	0x03671CB0 LDR X0, [X0 + 0x958]
	0x03671CB4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD70000
	008 Move X22, 0xAAB000
	009 Move X19, 0xACD000
	010 Move X20, 0xACD000
	011 Move X21, 0xACD000
	012 Move W8, [X23+1911]
	013 Move X22, [X22+1824]
	014 Move X19, [X19+2224]
	015 Move X20, [X20+2088]
	016 Move X21, [X21+2232]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xAAB000
	022 Move X0, [X0+1824]
	023 Call 0x1C17CF4
	024 Move X0, 0xACD000
	025 Move X0, [X0+2232]
	026 Call 0x1C17CF4
	027 Move X0, 0xACD000
	028 Move X0, [X0+2224]
	029 Call 0x1C17CF4
	030 Move X0, 0xACD000
	031 Move X0, [X0+2088]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+1911], W8
	035 Move X0, [X22]
	036 Call 0x1C17F10
	037 Move X2, [X19]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X19, X0
	041 Call AsyncCallback..ctor, X0, X1, X2
	042 Move X8, [X20]
	043 Move X8, [X8+184]
	044 Move [X8], X19
	045 Move X0, [X22]
	046 Call 0x1C17F10
	047 Move X2, [X21]
	048 Move X1, X31
	049 Move X3, X31
	050 Move X19, X0
	051 Call AsyncCallback..ctor, X0, X1, X2
	052 Move X8, [X20]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X8, [X8+184]
	056 Move [X8+8], X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

