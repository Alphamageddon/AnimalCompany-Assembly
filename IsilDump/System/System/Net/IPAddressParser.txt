Type: System.Net.IPAddressParser

Method: System.Net.IPAddress Parse(System.ReadOnlySpan`1<System.Char> ipSpan, System.Boolean tryParse)

Disassembly:
	0x0366E07C LDR X0, [X0 + 0x20]
	0x0366E080 BL 0x1C16CF4
	0x0366E084 ADRP X0, 0xAB4000
	0x0366E088 LDR X0, [X0 + 0x28]
	0x0366E08C BL 0x1C16CF4
	0x0366E090 MOVZ W8, 0x1
	0x0366E094 STRB W8, [X24 + 0x763]
	0x0366E098 LDR X2, [X23]
	0x0366E09C MOV X0, X22
	0x0366E0A0 MOV X1, X21
	0x0366E0A4 STR X31, [X31 + 0x8]
	0x0366E0A8 STR W21, [X31 + 0x1C]
	0x0366E0AC BL 0x2218CF8
	0x0366E0B0 ADD X2, X31, 0x1C
	0x0366E0B4 MOV W1, W31
	0x0366E0B8 MOV X3, X31
	0x0366E0BC BL 0x3626BD4
	0x0366E0C0 LDR W8, [X31 + 0x1C]
	0x0366E0C4 CMP W8, W21
	0x0366E0C8 B.NE 0x366E0DC
	0x0366E0CC TBNZ X0, 0x0, 0x366E0DC
	0x0366E0D0 MOV W21, W31
	0x0366E0D4 MOV W0, W31
	0x0366E0D8 B 0x366E194
	0x0366E0DC ADD X4, X31, 0x8
	0x0366E0E0 MOV X0, X22
	0x0366E0E4 MOV X1, X21
	0x0366E0E8 MOV X2, X20
	0x0366E0EC MOV W3, W31
	0x0366E0F0 MOV X5, X31
	0x0366E0F4 STR X31, [X31 + 0x8]
	0x0366E0F8 BL 0x3626F04
	0x0366E0FC LDR X0, [X31 + 0x8]
	0x0366E100 MOV X1, X31
	0x0366E104 BL 0x32277A8
	0x0366E108 TBZ X0, 0x0, 0x366E118
	0x0366E10C MOV W21, W31
	0x0366E110 MOVZ W0, 0x1
	0x0366E114 B 0x366E194
	0x0366E118 LDR X0, [X31 + 0x8]
	0x0366E11C CBZ X0, 0x366E1B0
	0x0366E120 LDR W8, [X0 + 0x10]
	0x0366E124 CMP W8, 0x2
	0x0366E128 B.LT 0x366E0D0
	0x0366E12C MOV X21, X31
	0x0366E130 MOVZ W20, 0x1
	0x0366E134 MOVZ W22, 0xA
	0x0366E138 MOVN W23, 0x0
	0x0366E13C MOV W1, W20
	0x0366E140 MOV X2, X31
	0x0366E144 BL 0x3222A1C
	0x0366E148 SUB W8, W0, 0x30
	0x0366E14C AND W8, W8, 0xFFFF
	0x0366E150 CMP W8, 0x9
	0x0366E154 B.HI 0x366E188
	0x0366E158 MUL X9, X21, X22
	0x0366E15C ADD X9, X9, W0, UXTH
	0x0366E160 SUB X21, X9, 0x30
	0x0366E164 CMP X21, X23
	0x0366E168 B.GT 0x366E188
	0x0366E16C LDR X0, [X31 + 0x8]
	0x0366E170 CBZ X0, 0x366E1B0
	0x0366E174 LDR W8, [X0 + 0x10]
	0x0366E178 ADD W20, W20, 0x1
	0x0366E17C CMP W20, W8
	0x0366E180 B.LT 0x366E13C
	0x0366E184 B 0x366E110
	0x0366E188 CMP W8, 0x9
	0x0366E18C MOV W21, W31
	0x0366E190 CSET W0, HI
	0x0366E194 STR W21, [X19]
	0x0366E198 LDP X20, X19, [X31 + 0x40]
	0x0366E19C LDP X22, X21, [X31 + 0x30]
	0x0366E1A0 LDP X24, X23, [X31 + 0x20]
	0x0366E1A4 LDR X30, [X31 + 0x10]
	0x0366E1A8 ADD X31, X31, 0x50
	0x0366E1AC RET
	0x0366E1B0 BL 0x1C16F20
	0x0366E1B4 SUB X31, X31, 0x40
	0x0366E1B8 STP X30, X23, [X31 + 0x10]
	0x0366E1BC STP X22, X21, [X31 + 0x20]
	0x0366E1C0 STP X20, X19, [X31 + 0x30]
	0x0366E1C4 ADRP X23, 0xD72000
	0x0366E1C8 ADRP X22, 0xAB4000
	0x0366E1CC LDRB W8, [X23 + 0x762]
	0x0366E1D0 LDR X22, [X22 + 0x20]
	0x0366E1D4 MOV X19, X2
	0x0366E1D8 MOV X20, X1
	0x0366E1DC MOV X21, X0
	0x0366E1E0 TBNZ X8, 0x0, 0x366E204
	0x0366E1E4 ADRP X0, 0xAB4000
	0x0366E1E8 LDR X0, [X0 + 0x20]
	0x0366E1EC BL 0x1C16CF4
	0x0366E1F0 ADRP X0, 0xAB4000
	0x0366E1F4 LDR X0, [X0 + 0x28]
	0x0366E1F8 BL 0x1C16CF4
	0x0366E1FC MOVZ W8, 0x1
	0x0366E200 STRB W8, [X23 + 0x762]
	0x0366E204 LDR X2, [X22]
	0x0366E208 MOV X0, X21
	0x0366E20C MOV X1, X20
	0x0366E210 STR W20, [X31 + 0xC]
	0x0366E214 BL 0x2218CF8
	0x0366E218 ADD X2, X31, 0xC
	0x0366E21C MOVZ W3, 0x1
	0x0366E220 MOV W1, W31
	0x0366E224 MOV X4, X31
	0x0366E228 BL 0x35F48BC
	0x0366E22C LDR W8, [X31 + 0xC]
	0x0366E230 ADDS X31, X0, 0x1
	0x0366E234 CSET W9, NE
	0x0366E238 REV W10, W0
	0x0366E23C CMP W8, W20

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 32
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X22, 0xD73000
	013 Move W19, W2
	014 Move X20, X1
	015 Move [X29-8], X8
	016 Move W8, [X22+1887]
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xA93000
	023 Move X0, [X0+2408]
	024 Call 0x1C17CF4
	025 Move X0, 0xAD0000
	026 Move X0, [X0+1896]
	027 Call 0x1C17CF4
	028 Move X0, 0xACE000
	029 Move X0, [X0+1048]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+1887], W8
	033 Move W2, 58
	034 Move X0, X21
	035 Move X1, X20
	036 Move X3, X31
	037 Move [X29-12], W31
	038 Move [X29-24], X31
	039 Call MemoryExtensions.Contains, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {71}
	044 Add X8, X31, 0
	045 Subtract X22, X8, 16
	046 Add X31, X22, 0
	047 Move W1, 16
	048 Move X0, X22
	049 Move X2, X31
	050 Move [X8-16], X31
	051 Move [X8-8], X31
	052 Call SpanHelpers.ClearWithoutReferences, X0, X1
	053 Subtract X4, X29, 12
	054 Move X0, X21
	055 Move X1, X20
	056 Move X2, X22
	057 Call IPAddressParser.Ipv6StringToAddress, X0, X1, X2, X3
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {87}
	062 Move X8, 0xA93000
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move X8, [X8+2408]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X1, X22
	068 Move W3, W20
	069 Move X19, X0
	070 Call IPAddress..ctor, X0, X1, X2, X3
	071 Subtract X2, X29, 24
	072 Move X0, X21
	073 Move X1, X20
	074 Call IPAddressParser.Ipv4StringToAddress, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {87}
	079 Move X8, 0xA93000
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 Move X8, [X8+2408]
	082 Move X0, [X8]
	083 Call 0x1C17F10
	084 Move X1, X20
	085 Move X19, X0
	086 Call IPAddress..ctor, X0, X1
	087 Move TEMP, X19
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {105}
	091 Move X19, X31
	092 Move X8, [X23+40]
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X19
	096 Add X31, X29, 0
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X23, [X31+16]
	102 Move X29, [X31+64]
	103 Move X30, [X31+72]
	104 Return X0
	105 Move X0, 0xAC4000
	106 Move X0, [X0+216]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move W1, 0x2726
	110 Move X2, X31
	111 Move X19, X0
	112 Call SocketException..ctor, X0, X1
	113 Move X0, 0xAB3000
	114 Move X0, [X0+3080]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X20, X0
	118 Move X0, 0xAD0000
	119 Move X0, [X0+1864]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X20
	123 Move X2, X19
	124 Move X3, X31
	125 Call FormatException..ctor, X0, X1, X2
	126 Move X0, 0xAD0000
	127 Move X0, [X0+1904]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X20
	131 Call 0x1C17DEC
	132 Call 0x3EB2B20

Method: System.String IPv4AddressToString(System.UInt32 address)

Disassembly:
	0x0366E718 BFM W8, W9, 0x10, 0xF
	0x0366E71C REV W0, W8
	0x0366E720 LDR X30, [X31], #0x10
	0x0366E724 RET
	0x0366E728 BL 0x1C16F20
	0x0366E72C BL 0x1C16F28
	0x0366E730 SUB X31, X31, 0x20
	0x0366E734 STR X30, [X31 + 0x10]
	0x0366E738 ADD X8, X31, 0x0
	0x0366E73C MOV W2, W31
	0x0366E740 ORR X8, X8, 0xF
	0x0366E744 STR X31, [X31]
	0x0366E748 AND W9, W0, 0xF
	0x0366E74C MOVZ W11, 0x30
	0x0366E750 BFM W11, W0, 0x0, 0x3
	0x0366E754 ADD W12, W9, 0x57
	0x0366E758 CMP W9, 0xA
	0x0366E75C UBFM W10, W0, 0x4, 0xF
	0x0366E760 CSEL W9, W11, W12, CC
	0x0366E764 STRH W9, [X8 - 0x2]!
	0x0366E768 ADD W2, W2, 0x1
	0x0366E76C MOV W0, W10
	0x0366E770 CBNZ W10, 0x366E748
	0x0366E774 CBZ X1, 0x366E794

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 Add X1, X31, 0
	007 Move [X31+40], X8
	008 Move [X31+8], X31
	009 Move [X31+16], X31
	010 Move [X31], X31
	011 Move [X31+22], X31
	012 Call IPAddressParser.IPv4AddressToStringHelper, X0, X1
	013 Move W3, W0
	014 Add X1, X31, 0
	015 Move X0, X31
	016 Move W2, W31
	017 Move X4, X31
	018 Call String.CreateString, X0, X1, X2, X3
	019 Move X8, [X19+40]
	020 Move X9, [X31+40]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X30, [X31+48]
	023 Move X19, [X31+56]
	024 Add X31, X31, 64
	025 Return X0
	026 Call 0x3EB2B20

Method: System.Void IPv4AddressToString(System.UInt32 address, System.Text.StringBuilder destination)

Disassembly:
	0x0366F300 MOV X19, X0
	0x0366F304 TBNZ X8, 0x0, 0x366F358
	0x0366F308 ADRP X0, 0xACE000
	0x0366F30C LDR X0, [X0 + 0x828]
	0x0366F310 BL 0x1C16CF4
	0x0366F314 ADRP X0, 0xACE000
	0x0366F318 LDR X0, [X0 + 0x468]
	0x0366F31C BL 0x1C16CF4
	0x0366F320 ADRP X0, 0xA84000
	0x0366F324 LDR X0, [X0 + 0x9D0]
	0x0366F328 BL 0x1C16CF4
	0x0366F32C ADRP X0, 0xACE000
	0x0366F330 LDR X0, [X0 + 0x830]
	0x0366F334 BL 0x1C16CF4
	0x0366F338 ADRP X0, 0xACE000
	0x0366F33C LDR X0, [X0 + 0x838]
	0x0366F340 BL 0x1C16CF4
	0x0366F344 ADRP X0, 0xACE000
	0x0366F348 LDR X0, [X0 + 0x840]
	0x0366F34C BL 0x1C16CF4
	0x0366F350 MOVZ W8, 0x1
	0x0366F354 STRB W8, [X20 + 0x771]
	0x0366F358 ADRP X23, 0xACE000
	0x0366F35C ADRP X24, 0xA84000
	0x0366F360 LDR X23, [X23 + 0x468]
	0x0366F364 LDR X24, [X24 + 0x9D0]
	0x0366F368 STR X31, [X31 + 0x18]
	0x0366F36C STRB W31, [X31 + 0xC]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Move X19, X1
	008 Add X1, X31, 0
	009 Move [X31+40], X8
	010 Move [X31+8], X31
	011 Move [X31+16], X31
	012 Move [X31], X31
	013 Move [X31+22], X31
	014 Call IPAddressParser.IPv4AddressToStringHelper, X0, X1
	015 Compare X19, 0
	016 JumpIfEqual {30}
	017 Move W2, W0
	018 Add X1, X31, 0
	019 Move X0, X19
	020 Move X3, X31
	021 Call StringBuilder.Append, X0, X1, X2
	022 Move X8, [X20+40]
	023 Move X9, [X31+40]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+64]
	026 Move X19, [X31+72]
	027 Move X30, [X31+48]
	028 Add X31, X31, 80
	029 Return 
	030 Call 0x1C17F20
	031 Call 0x3EB2B20

Method: System.Int32 IPv4AddressToStringHelper(System.UInt32 address, System.Char* addressString)

Disassembly:
	0x0366F264 LDR X23, [X23 + 0x278]
	0x0366F268 MOV W22, W3
	0x0366F26C MOV X21, X2
	0x0366F270 MOV X20, X1
	0x0366F274 MOV X19, X0
	0x0366F278 TBNZ X8, 0x0, 0x366F290
	0x0366F27C ADRP X0, 0xA86000
	0x0366F280 LDR X0, [X0 + 0x278]
	0x0366F284 BL 0x1C16CF4
	0x0366F288 MOVZ W8, 0x1
	0x0366F28C STRB W8, [X24 + 0x770]
	0x0366F290 AND W8, W22, 0x1
	0x0366F294 MOVZ W9, 0x101
	0x0366F298 STR X21, [X19 + 0x50]
	0x0366F29C STR W31, [X19 + 0x58]
	0x0366F2A0 STR X20, [X19 + 0x40]
	0x0366F2A4 STRB W31, [X19 + 0x49]
	0x0366F2A8 STR X31, [X19 + 0x60]
	0x0366F2AC STRH W9, [X19 + 0x5C]
	0x0366F2B0 STRB W8, [X19 + 0x48]
	0x0366F2B4 STRB W31, [X19 + 0x38]
	0x0366F2B8 LDR X8, [X23]
	0x0366F2BC LDP X22, X21, [X31 + 0x20]
	0x0366F2C0 LDP X24, X23, [X31 + 0x10]
	0x0366F2C4 LDR X8, [X8 + 0xB8]
	0x0366F2C8 LDR X8, [X8]
	0x0366F2CC STR X8, [X19 + 0x68]
	0x0366F2D0 LDP X20, X19, [X31 + 0x30]
	0x0366F2D4 LDR X30, [X31], #0x40
	0x0366F2D8 RET
	0x0366F2DC SUB X31, X31, 0x70
	0x0366F2E0 STR X30, [X31 + 0x10]
	0x0366F2E4 STP X28, X27, [X31 + 0x20]
	0x0366F2E8 STP X26, X25, [X31 + 0x30]
	0x0366F2EC STP X24, X23, [X31 + 0x40]
	0x0366F2F0 STP X22, X21, [X31 + 0x50]
	0x0366F2F4 STP X20, X19, [X31 + 0x60]
	0x0366F2F8 ADRP X20, 0xD71000
	0x0366F2FC LDRB W8, [X20 + 0x771]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W0
	007 And W0, W0, 255
	008 Add X2, X31, 12
	009 Move X19, X1
	010 Move [X31+12], W31
	011 Call IPAddressParser.FormatIPv4AddressNumber, X0, X1, X2
	012 NotImplemented "Instruction LDRSW not yet implemented."
	013 Move W21, 46
	014 Move W0, W20
	015 ShiftRight W0, 8
	016 And W0, W0, 0x7FFF
	017 Add X2, X31, 12
	018 Add W9, W8, 1
	019 Move X1, X19
	020 Move [X31+12], W9
	021 NotImplemented "Instruction STRH not yet implemented."
	022 Call IPAddressParser.FormatIPv4AddressNumber, X0, X1, X2
	023 NotImplemented "Instruction LDRSW not yet implemented."
	024 Move W0, W20
	025 ShiftRight W0, 16
	026 And W0, W0, 0x7FFFFF
	027 Add X2, X31, 12
	028 Move X1, X19
	029 Add W9, W8, 1
	030 Move [X31+12], W9
	031 NotImplemented "Instruction STRH not yet implemented."
	032 Call IPAddressParser.FormatIPv4AddressNumber, X0, X1, X2
	033 NotImplemented "Instruction LDRSW not yet implemented."
	034 Move W0, W20
	035 ShiftRight W0, 24
	036 And W0, W0, 0x7FFFFFFF
	037 Add X2, X31, 12
	038 Move X1, X19
	039 Add W9, W8, 1
	040 Move [X31+12], W9
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Call IPAddressParser.FormatIPv4AddressNumber, X0, X1, X2
	043 Move W0, [X31+12]
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+16]
	047 Move X21, [X31+24]
	048 Add X31, X31, 48
	049 Return X0

Method: System.String IPv6AddressToString(System.UInt16[] address, System.UInt32 scopeId)

Disassembly:
	0x0366E704 LDR W8, [X0 + 0x18]
	0x0366E708 CMP W8, 0x7
	0x0366E70C B.LS 0x366E72C
	0x0366E710 LDRH W8, [X0 + 0x2E]
	0x0366E714 LDRH W9, [X0 + 0x2C]

ISIL:
	001 Move [X31-16], X30
	002 Call IPAddressParser.IPv6AddressToStringHelper, X0, X1
	003 Move X1, X31
	004 Move X30, [X31+16]
	005 Call StringBuilderCache.GetStringAndRelease, X0
	006 Return X0

Method: System.Text.StringBuilder IPv6AddressToStringHelper(System.UInt16[] address, System.UInt32 scopeId)

Disassembly:
	0x0366F428 B.CS 0x366F650
	0x0366F42C ADD X8, X8, X9, 0x3, LSL
	0x0366F430 LDR X8, [X8 + 0x20]
	0x0366F434 CBZ X8, 0x366F64C
	0x0366F438 LDR X0, [X8 + 0x10]
	0x0366F43C CBZ X0, 0x366F64C
	0x0366F440 LDR W8, [X0 + 0x10]
	0x0366F444 MOV W1, W31
	0x0366F448 MOV X3, X31
	0x0366F44C SUB W2, W8, 0x2
	0x0366F450 BL 0x3228DE4
	0x0366F454 LDR X8, [X19 + 0x50]
	0x0366F458 CBZ X8, 0x366F64C
	0x0366F45C LDRSW X9, [X19 + 0x58]
	0x0366F460 LDR W10, [X8 + 0x18]
	0x0366F464 CMP W9, W10
	0x0366F468 B.CS 0x366F650
	0x0366F46C ADD X8, X8, X9, 0x3, LSL
	0x0366F470 LDR X8, [X8 + 0x20]
	0x0366F474 CBZ X8, 0x366F64C
	0x0366F478 LDRB W8, [X8 + 0x18]
	0x0366F47C MOV X21, X0
	0x0366F480 TBZ X8, 0x3, 0x366F4C4
	0x0366F484 CBZ X21, 0x366F64C
	0x0366F488 MOVZ W1, 0x20
	0x0366F48C MOV X0, X21
	0x0366F490 MOV X2, X31
	0x0366F494 BL 0x322BD98
	0x0366F498 ADDS W31, W0, 0x1
	0x0366F49C B.EQ 0x366F4C4
	0x0366F4A0 MOV W2, W0
	0x0366F4A4 MOV X0, X21
	0x0366F4A8 MOV W1, W31
	0x0366F4AC MOV X3, X31
	0x0366F4B0 BL 0x3228DE4
	0x0366F4B4 LDR X1, [X28]
	0x0366F4B8 MOV X2, X31
	0x0366F4BC BL 0x321B938
	0x0366F4C0 MOV X21, X0
	0x0366F4C4 LDR X0, [X23]
	0x0366F4C8 LDR W8, [X0 + 0xE0]
	0x0366F4CC CBNZ W8, 0x366F4D4
	0x0366F4D0 BL 0x1C16DFC
	0x0366F4D4 BL 0x366A368
	0x0366F4D8 TBZ X0, 0x0, 0x366F54C
	0x0366F4DC LDR X0, [X24]
	0x0366F4E0 MOVZ W1, 0x1
	0x0366F4E4 BL 0x1C16D6C
	0x0366F4E8 CBZ X0, 0x366F64C
	0x0366F4EC MOV X22, X0
	0x0366F4F0 CBZ X21, 0x366F508
	0x0366F4F4 LDR X8, [X22]
	0x0366F4F8 MOV X0, X21
	0x0366F4FC LDR X1, [X8 + 0x40]
	0x0366F500 BL 0x1C16E00
	0x0366F504 CBZ X0, 0x366F68C
	0x0366F508 LDR W8, [X22 + 0x18]
	0x0366F50C CBZ W8, 0x366F650
	0x0366F510 STR X21, [X22 + 0x20]
	0x0366F514 LDR X0, [X26]
	0x0366F518 MOV X1, X22
	0x0366F51C MOV X2, X31
	0x0366F520 BL 0x32C2F6C
	0x0366F524 LDR X8, [X23]
	0x0366F528 MOV X21, X0
	0x0366F52C LDR W9, [X8 + 0xE0]
	0x0366F530 CBNZ W9, 0x366F53C
	0x0366F534 MOV X0, X8
	0x0366F538 BL 0x1C16DFC
	0x0366F53C LDR X2, [X27]
	0x0366F540 MOV X0, X19
	0x0366F544 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD72000
	007 Move X20, 0xACF000
	008 Move W8, [X22+1888]
	009 Move X20, [X20+1976]
	010 Move W19, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xACF000
	017 Move X0, [X0+1976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1888], W8
	021 Move W0, 65
	022 Move X1, X31
	023 Call StringBuilderCache.Acquire, X0
	024 Move X1, [X20]
	025 Move X20, X0
	026 Move X0, X21
	027 Call ReadOnlySpan`1<UInt16>.op_Implicit, X0
	028 Move X2, X31
	029 Call IPv6AddressHelper.ShouldHaveIpv4Embedded, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {60}
	034 Move W2, 6
	035 Move X0, X21
	036 Move W1, W31
	037 Move X3, X20
	038 Call IPAddressParser.AppendSections, X0, X1, X2, X3
	039 Compare X20, 0
	040 JumpIfEqual {85}
	041 Move X0, X20
	042 Move X1, X31
	043 Call StringBuilder.get_Length, X0
	044 Subtract W1, W0, 1
	045 Move X0, X20
	046 Move X2, X31
	047 Call StringBuilder.get_Chars, X0, X1
	048 And W8, W0, 0xFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W1, 58
	051 Move X0, X20
	052 Move X2, X31
	053 Call StringBuilder.Append, X0, X1
	054 Move X0, X21
	055 Call IPAddressParser.ExtractIPv4Address, X0
	056 Move X1, X20
	057 Call IPAddressParser.IPv4AddressToString, X0, X1
	058 Compare W19, 0
	059 JumpIfNotEqual {67}
	060 Move W2, 8
	061 Move X0, X21
	062 Move W1, W31
	063 Move X3, X20
	064 Call IPAddressParser.AppendSections, X0, X1, X2, X3
	065 Compare W19, 0
	066 JumpIfEqual {78}
	067 Compare X20, 0
	068 JumpIfEqual {85}
	069 Move W1, 37
	070 Move X0, X20
	071 Move X2, X31
	072 Call StringBuilder.Append, X0, X1
	073 Compare X0, 0
	074 JumpIfEqual {85}
	075 Move W1, W19
	076 Move X2, X31
	077 Call StringBuilder.Append, X0, X1
	078 Move X0, X20
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Void FormatIPv4AddressNumber(System.Int32 number, System.Char* addressString, ref System.Int32 offset)

Disassembly:
	0x0366F370 ADRP X26, 0xACE000
	0x0366F374 ADRP X27, 0xACE000
	0x0366F378 ADRP X28, 0xACE000
	0x0366F37C LDRB W25, [X19 + 0x48]
	0x0366F380 LDR X26, [X26 + 0x830]
	0x0366F384 LDR X27, [X27 + 0x840]
	0x0366F388 LDR X28, [X28 + 0x838]
	0x0366F38C LDR X8, [X19 + 0x50]
	0x0366F390 CBZ X8, 0x366F64C
	0x0366F394 LDR W9, [X19 + 0x58]
	0x0366F398 LDR W10, [X8 + 0x18]
	0x0366F39C CMP W9, W10
	0x0366F3A0 B.GE 0x366F590
	0x0366F3A4 LDRB W11, [X19 + 0x5D]
	0x0366F3A8 CBZ W11, 0x366F574
	0x0366F3AC TBNZ X9, 0x1F, 0x366F654
	0x0366F3B0 CMP W9, W10
	0x0366F3B4 B.CS 0x366F650
	0x0366F3B8 ADD X8, X8, X9, 0x3, LSL
	0x0366F3BC LDR X8, [X8 + 0x20]
	0x0366F3C0 CBZ X8, 0x366F64C
	0x0366F3C4 LDR X0, [X19 + 0x78]
	0x0366F3C8 CBZ X0, 0x366F64C
	0x0366F3CC LDR X9, [X0]
	0x0366F3D0 LDR X1, [X8 + 0x10]
	0x0366F3D4 LDR X8, [X9 + 0x268]
	0x0366F3D8 LDR X2, [X9 + 0x270]
	0x0366F3DC BLR X8
	0x0366F3E0 LDR X8, [X23]
	0x0366F3E4 MOV X20, X0
	0x0366F3E8 LDR W9, [X8 + 0xE0]
	0x0366F3EC CBNZ W9, 0x366F3FC
	0x0366F3F0 MOV X0, X8
	0x0366F3F4 BL 0x1C16DFC
	0x0366F3F8 LDR X8, [X23]
	0x0366F3FC LDR X8, [X8 + 0xB8]
	0x0366F400 LDR X0, [X8]
	0x0366F404 CBZ X0, 0x366F64C
	0x0366F408 MOV X1, X31
	0x0366F40C BL 0x334F914
	0x0366F410 TBZ X0, 0x0, 0x366F54C
	0x0366F414 LDR X8, [X19 + 0x50]
	0x0366F418 CBZ X8, 0x366F64C
	0x0366F41C LDRSW X9, [X19 + 0x58]
	0x0366F420 LDR W10, [X8 + 0x18]
	0x0366F424 CMP W9, W10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD72000
	007 Move W8, [X22+1889]
	008 Move X21, X2
	009 Move X19, X1
	010 Move W20, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA85000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1889], W8
	020 Move X22, 0xA85000
	021 Move X22, [X22+1448]
	022 Move [X31+12], W31
	023 Move W10, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, 1
	026 Move W9, 3
	027 NotImplemented "Instruction CINC not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Add W8, W10, W8
	031 Move [X21], W8
	032 Subtract W21, W8, 1
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Add X2, X31, 12
	039 Move W1, 10
	040 Move W0, W20
	041 Move X3, X31
	042 Call Math.DivRem, X0, X1, X2
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move W20, W0
	045 Add W8, W8, 48
	046 NotImplemented "Instruction STRH not yet implemented."
	047 Subtract W21, W21, 1
	048 Compare W0, 0
	049 JumpIfNotEqual {33}
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 

Method: System.Boolean Ipv4StringToAddress(System.ReadOnlySpan`1<System.Char> ipSpan, out System.Int64 address)

Disassembly:
	0x0366F1B4 CMP W8, 0x1
	0x0366F1B8 B.GT 0x366F1C4
	0x0366F1BC MOVZ W8, 0x1
	0x0366F1C0 STRB W8, [X0 + 0x38]
	0x0366F1C4 RET
	0x0366F1C8 STR X30, [X31 - 0x30]!
	0x0366F1CC STP X22, X21, [X31 + 0x10]
	0x0366F1D0 STP X20, X19, [X31 + 0x20]
	0x0366F1D4 LDR X8, [X0]
	0x0366F1D8 MOV X22, X1
	0x0366F1DC MOV W20, W3
	0x0366F1E0 MOV W21, W2
	0x0366F1E4 LDR X9, [X8 + 0x3C8]
	0x0366F1E8 LDR X8, [X8 + 0x3D0]
	0x0366F1EC MOV X19, X0
	0x0366F1F0 MOV X1, X8
	0x0366F1F4 BLR X9
	0x0366F1F8 LDR X8, [X19]
	0x0366F1FC MOV X0, X19
	0x0366F200 MOV X1, X22
	0x0366F204 LDR X9, [X8 + 0x3D8]
	0x0366F208 LDR X2, [X8 + 0x3E0]
	0x0366F20C BLR X9
	0x0366F210 MOV X2, X0
	0x0366F214 AND W3, W21, 0x1
	0x0366F218 MOV X0, X19
	0x0366F21C MOV X1, X22
	0x0366F220 BL 0x366F248
	0x0366F224 TBZ X20, 0x0, 0x366F234
	0x0366F228 MOVN W8, 0x0
	0x0366F22C STRB W31, [X19 + 0x5D]
	0x0366F230 STR W8, [X19 + 0x58]
	0x0366F234 MOV X0, X19
	0x0366F238 LDP X20, X19, [X31 + 0x20]
	0x0366F23C LDP X22, X21, [X31 + 0x10]
	0x0366F240 LDR X30, [X31], #0x30
	0x0366F244 B 0x366F2DC
	0x0366F248 STR X30, [X31 - 0x40]!
	0x0366F24C STP X24, X23, [X31 + 0x10]
	0x0366F250 STP X22, X21, [X31 + 0x20]
	0x0366F254 STP X20, X19, [X31 + 0x30]
	0x0366F258 ADRP X24, 0xD71000
	0x0366F25C ADRP X23, 0xA86000
	0x0366F260 LDRB W8, [X24 + 0x770]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD72000
	009 Move X22, 0xAB4000
	010 Move W8, [X23+1890]
	011 Move X22, [X22+32]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xAB4000
	020 Move X0, [X0+32]
	021 Call 0x1C17CF4
	022 Move X0, 0xAB4000
	023 Move X0, [X0+40]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1890], W8
	027 Move X2, [X22]
	028 Move X0, X21
	029 Move X1, X20
	030 Move [X31+12], W20
	031 Call MemoryMarshal.GetReference, X0
	032 Add X2, X31, 12
	033 Move W3, 1
	034 Move W1, W31
	035 Move X4, X31
	036 Call IPv4AddressHelper.ParseNonCanonical, X0, X1, X2, X3
	037 Move W8, [X31+12]
	038 Add X31, X0, 1
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction REV not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 And W0, W9, W8
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Move [X19], X8
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 Move X23, [X31+24]
	052 Add X31, X31, 64
	053 Return X0

Method: System.Boolean Ipv6StringToAddress(System.ReadOnlySpan`1<System.Char> ipSpan, System.UInt16* numbers, System.Int32 numbersLength, out System.UInt32 scope)

Disassembly:
	0x0366F040 BL 0x1C16F18
	0x0366F044 CMP W1, 0x1
	0x0366F048 MOV X22, X0
	0x0366F04C B.NE 0x366F068
	0x0366F050 MOV X0, X22
	0x0366F054 BL 0x3EB1AD0
	0x0366F058 LDR X21, [X0]
	0x0366F05C BL 0x3EB1AE0
	0x0366F060 MOV W22, W31
	0x0366F064 B 0x366EF8C
	0x0366F068 MOV X21, X31
	0x0366F06C B 0x366F074
	0x0366F070 MOV X22, X0
	0x0366F074 LDRB W8, [X31 + 0xC]
	0x0366F078 CBZ W8, 0x366F088
	0x0366F07C MOV X0, X19
	0x0366F080 MOV X1, X31
	0x0366F084 BL 0x33E14E4
	0x0366F088 CBNZ X21, 0x366F094
	0x0366F08C MOV X0, X22
	0x0366F090 BL 0x1D2C690
	0x0366F094 MOV X0, X21
	0x0366F098 BL 0x1C16F18
	0x0366F09C BL 0x1990590
	0x0366F0A0 STP X30, X21, [X31 - 0x20]!
	0x0366F0A4 STP X20, X19, [X31 + 0x10]
	0x0366F0A8 ADRP X21, 0xD71000
	0x0366F0AC ADRP X20, 0xACE000
	0x0366F0B0 LDRB W8, [X21 + 0x76C]
	0x0366F0B4 LDR X20, [X20 + 0x468]
	0x0366F0B8 MOV X19, X0
	0x0366F0BC TBNZ X8, 0x0, 0x366F0E0
	0x0366F0C0 ADRP X0, 0xACE000
	0x0366F0C4 LDR X0, [X0 + 0x468]
	0x0366F0C8 BL 0x1C16CF4
	0x0366F0CC ADRP X0, 0xACE000
	0x0366F0D0 LDR X0, [X0 + 0x818]
	0x0366F0D4 BL 0x1C16CF4
	0x0366F0D8 MOVZ W8, 0x1
	0x0366F0DC STRB W8, [X21 + 0x76C]
	0x0366F0E0 LDR X0, [X20]
	0x0366F0E4 LDR W8, [X0 + 0xE0]
	0x0366F0E8 CBNZ W8, 0x366F0F0
	0x0366F0EC BL 0x1C16DFC
	0x0366F0F0 BL 0x366A368
	0x0366F0F4 TBZ X0, 0x0, 0x366F120
	0x0366F0F8 LDR X0, [X20]
	0x0366F0FC ADRP X20, 0xACE000
	0x0366F100 LDR W8, [X0 + 0xE0]
	0x0366F104 LDR X20, [X20 + 0x818]
	0x0366F108 CBNZ W8, 0x366F110
	0x0366F10C BL 0x1C16DFC
	0x0366F110 LDR X2, [X20]
	0x0366F114 MOV X0, X19
	0x0366F118 MOV X1, X31
	0x0366F11C BL 0x366A3CC
	0x0366F120 MOV X0, X19
	0x0366F124 LDP X20, X19, [X31 + 0x10]
	0x0366F128 MOV X1, X31
	0x0366F12C LDP X30, X21, [X31], #0x20
	0x0366F130 B 0x366F134
	0x0366F134 STP X30, X21, [X31 - 0x20]!
	0x0366F138 STP X20, X19, [X31 + 0x10]
	0x0366F13C ADRP X21, 0xD71000
	0x0366F140 LDRB W8, [X21 + 0x76D]
	0x0366F144 MOV X19, X1
	0x0366F148 MOV X20, X0
	0x0366F14C TBNZ X8, 0x0, 0x366F164
	0x0366F150 ADRP X0, 0xACE000
	0x0366F154 LDR X0, [X0 + 0x820]
	0x0366F158 BL 0x1C16CF4
	0x0366F15C MOVZ W8, 0x1
	0x0366F160 STRB W8, [X21 + 0x76D]
	0x0366F164 LDR X0, [X20 + 0x40]
	0x0366F168 CBZ X0, 0x366F198
	0x0366F16C ADRP X8, 0xACE000
	0x0366F170 LDR X8, [X8 + 0x820]
	0x0366F174 LDR X1, [X8]
	0x0366F178 LDR X8, [X0]
	0x0366F17C CMP X8, X1
	0x0366F180 B.NE 0x366F1A4
	0x0366F184 MOV X1, X19
	0x0366F188 LDP X20, X19, [X31 + 0x10]
	0x0366F18C MOV X2, X31
	0x0366F190 LDP X30, X21, [X31], #0x20
	0x0366F194 B 0x367B5D4
	0x0366F198 LDP X20, X19, [X31 + 0x10]
	0x0366F19C LDP X30, X21, [X31], #0x20
	0x0366F1A0 RET
	0x0366F1A4 BL 0x1C171E0
	0x0366F1A8 LDRB W0, [X0 + 0x38]
	0x0366F1AC RET
	0x0366F1B0 LDR W8, [X0 + 0x58]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0xD72000
	010 Move X23, 0xAB4000
	011 Move W8, [X24+1891]
	012 Move X23, [X23+32]
	013 Move X19, X4
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xAB4000
	022 Move X0, [X0+32]
	023 Call 0x1C17CF4
	024 Move X0, 0xAB4000
	025 Move X0, [X0+40]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1891], W8
	029 Move X2, [X23]
	030 Move X0, X22
	031 Move X1, X21
	032 Move [X31+8], X31
	033 Move [X31+28], W21
	034 Call MemoryMarshal.GetReference, X0
	035 Add X2, X31, 28
	036 Move W1, W31
	037 Move X3, X31
	038 Call IPv6AddressHelper.IsValidStrict, X0, X1, X2
	039 Move W8, [X31+28]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {47}
	045 Move W21, W31
	046 Move W0, W31
	047 Add X4, X31, 8
	048 Move X0, X22
	049 Move X1, X21
	050 Move X2, X20
	051 Move W3, W31
	052 Move X5, X31
	053 Move [X31+8], X31
	054 Call IPv6AddressHelper.Parse, X0, X1, X2, X3
	055 Move X0, [X31+8]
	056 Move X1, X31
	057 Call String.IsNullOrEmpty, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {64}
	062 Move W21, W31
	063 Move W0, 1
	064 Move X0, [X31+8]
	065 Compare X0, 0
	066 JumpIfEqual {104}
	067 Move W8, [X0+16]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X21, X31
	070 Move W20, 1
	071 Move W22, 10
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W23, TEMP
	075 Move W1, W20
	076 Move X2, X31
	077 Call String.get_Chars, X0, X1
	078 Subtract W8, W0, 48
	079 And W8, W8, 0xFFFF
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Multiply X9, X21, X22
	082 Add X9, X9, W0
	083 Subtract X21, X9, 48
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X31+8]
	086 Compare X0, 0
	087 JumpIfEqual {104}
	088 Move W8, [X0+16]
	089 Add W20, W20, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W21, W31
	093 NotImplemented "Instruction CSET not yet implemented."
	094 Move [X19], W21
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X22, [X31+48]
	098 Move X21, [X31+56]
	099 Move X24, [X31+32]
	100 Move X23, [X31+40]
	101 Move X30, [X31+16]
	102 Add X31, X31, 80
	103 Return X0
	104 Call 0x1C17F20

Method: System.Void AppendSections(System.UInt16[] address, System.Int32 fromInclusive, System.Int32 toExclusive, System.Text.StringBuilder buffer)

Disassembly:
	0x0366F548 BL 0x366A3CC
	0x0366F54C CBNZ W25, 0x366F5DC
	0x0366F550 CBZ X20, 0x366F688
	0x0366F554 LDR X8, [X19]
	0x0366F558 LDR W3, [X20 + 0x18]
	0x0366F55C LDR X9, [X8 + 0x388]
	0x0366F560 LDR X4, [X8 + 0x390]
	0x0366F564 MOV X0, X19
	0x0366F568 MOV X1, X20
	0x0366F56C MOV W2, W31
	0x0366F570 BLR X9
	0x0366F574 ADD X1, X31, 0x18
	0x0366F578 MOV X0, X19
	0x0366F57C STR X31, [X31 + 0x18]
	0x0366F580 BL 0x366F9C0
	0x0366F584 TBZ X0, 0x0, 0x366F38C
	0x0366F588 LDR X0, [X31 + 0x18]
	0x0366F58C B 0x366F62C
	0x0366F590 STRB W31, [X31 + 0xC]
	0x0366F594 ADD X1, X31, 0xC
	0x0366F598 MOV X0, X19
	0x0366F59C MOV X2, X31
	0x0366F5A0 BL 0x33DE64C
	0x0366F5A4 LDR X8, [X19]
	0x0366F5A8 LDR X1, [X8 + 0x280]
	0x0366F5AC LDR X9, [X8 + 0x278]
	0x0366F5B0 MOV X0, X19
	0x0366F5B4 BLR X9
	0x0366F5B8 MOV X21, X31
	0x0366F5BC LDRB W8, [X31 + 0xC]
	0x0366F5C0 CBZ W8, 0x366F5D0
	0x0366F5C4 MOV X0, X19
	0x0366F5C8 MOV X1, X31
	0x0366F5CC BL 0x33E14E4
	0x0366F5D0 CBZ X21, 0x366F628
	0x0366F5D4 MOV X0, X21
	0x0366F5D8 BL 0x1C16F18
	0x0366F5DC CBZ X20, 0x366F698
	0x0366F5E0 ADRP X21, 0xACE000
	0x0366F5E4 LDR X21, [X21 + 0x828]
	0x0366F5E8 LDR X0, [X21]
	0x0366F5EC LDR W8, [X0 + 0xE0]
	0x0366F5F0 CBNZ W8, 0x366F5FC
	0x0366F5F4 BL 0x1C16DFC
	0x0366F5F8 LDR X0, [X21]
	0x0366F5FC LDR X8, [X0 + 0xB8]
	0x0366F600 LDR X9, [X19]
	0x0366F604 LDR W3, [X20 + 0x18]
	0x0366F608 LDR X4, [X8]
	0x0366F60C LDR X8, [X9 + 0x2F8]
	0x0366F610 LDR X6, [X9 + 0x300]
	0x0366F614 MOV X0, X19
	0x0366F618 MOV X1, X20
	0x0366F61C MOV W2, W31
	0x0366F620 MOV X5, X19
	0x0366F624 BLR X8
	0x0366F628 MOV X0, X31
	0x0366F62C LDP X20, X19, [X31 + 0x60]
	0x0366F630 LDP X22, X21, [X31 + 0x50]
	0x0366F634 LDP X24, X23, [X31 + 0x40]
	0x0366F638 LDP X26, X25, [X31 + 0x30]
	0x0366F63C LDP X28, X27, [X31 + 0x20]
	0x0366F640 LDR X30, [X31 + 0x10]
	0x0366F644 ADD X31, X31, 0x70
	0x0366F648 RET
	0x0366F64C BL 0x1C16F20
	0x0366F650 BL 0x1C16F28
	0x0366F654 ADRP X0, 0xACE000
	0x0366F658 LDR X0, [X0 + 0x848]
	0x0366F65C BL 0x1C16D08
	0x0366F660 BL 0x1C16F10
	0x0366F664 MOV X1, X31
	0x0366F668 MOV X19, X0
	0x0366F66C BL 0x367A644
	0x0366F670 ADRP X0, 0xACE000
	0x0366F674 LDR X0, [X0 + 0x850]
	0x0366F678 BL 0x1C16D08
	0x0366F67C MOV X1, X0
	0x0366F680 MOV X0, X19
	0x0366F684 BL 0x1C16DEC
	0x0366F688 BL 0x1C16F20
	0x0366F68C BL 0x1C16F44
	0x0366F690 MOV X1, X31
	0x0366F694 BL 0x1C16DEC
	0x0366F698 BL 0x1C16F20
	0x0366F69C B 0x366F6F4
	0x0366F6A0 B 0x366F6F4
	0x0366F6A4 CMP W1, 0x1
	0x0366F6A8 MOV X20, X0
	0x0366F6AC B.NE 0x366F6C4
	0x0366F6B0 MOV X0, X20
	0x0366F6B4 BL 0x3EB1AD0
	0x0366F6B8 LDR X21, [X0]
	0x0366F6BC BL 0x3EB1AE0
	0x0366F6C0 B 0x366F5BC
	0x0366F6C4 MOV X21, X31
	0x0366F6C8 B 0x366F6D0
	0x0366F6CC MOV X20, X0
	0x0366F6D0 LDRB W8, [X31 + 0xC]
	0x0366F6D4 CBZ W8, 0x366F6E4
	0x0366F6D8 MOV X0, X19
	0x0366F6DC MOV X1, X31
	0x0366F6E0 BL 0x33E14E4
	0x0366F6E4 CBZ X21, 0x366F7A0
	0x0366F6E8 MOV X0, X21
	0x0366F6EC BL 0x1C16F18
	0x0366F6F0 B 0x366F6F4
	0x0366F6F4 MOV X20, X0
	0x0366F6F8 CMP W1, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xD72000
	012 Move W8, [X23+1892]
	013 Move X19, X3
	014 Move W22, W2
	015 Move W21, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xACF000
	022 Move X0, [X0+1984]
	023 Call 0x1C17CF4
	024 Move X0, 0xA92000
	025 Move X0, [X0+2456]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1892], W8
	029 Subtract W23, W22, W21
	030 Add X25, X20, W21
	031 Compare X20, 0
	032 JumpIfEqual {40}
	033 Move W8, [X20+24]
	034 Subtract W8, W8, W21
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X31
	037 Call ThrowHelper.ThrowArgumentOutOfRangeException
	038 Add X0, X25, 32
	039 Move W1, W23
	040 Or W8, W23, W21
	041 Compare W8, 0
	042 JumpIfEqual {45}
	043 Move X0, X31
	044 Call ThrowHelper.ThrowArgumentOutOfRangeException
	045 Move X0, X31
	046 Move X1, X31
	047 Move X2, X31
	048 Call IPv6AddressHelper.FindCompressionRange, X0
	049 Move X23, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move W9, W23
	053 Move X9, W9
	054 Move W8, W31
	055 Add X25, X25, 32
	056 Subtract X26, X9, W21
	057 Move W27, W21
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {68}
	062 Compare X19, 0
	063 JumpIfEqual {130}
	064 Move W1, 58
	065 Move X0, X19
	066 Move X2, X31
	067 Call StringBuilder.Append, X0, X1
	068 Compare X20, 0
	069 JumpIfEqual {130}
	070 Move W8, [X20+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Move X1, X19
	074 Call IPAddressParser.AppendHex, X0, X1
	075 Add W27, W27, 1
	076 Subtract X26, X26, 1
	077 Move W8, 1
	078 Move TEMP, X23
	079 And TEMP, TEMP, -2147483648
	080 Compare TEMP, -2147483648
	081 JumpIfEqual {94}
	082 Compare X19, 0
	083 JumpIfEqual {130}
	084 Move X8, 0xA92000
	085 Move X8, [X8+2456]
	086 Move X0, X19
	087 Move X2, X31
	088 Move X21, X23
	089 ShiftRight X21, 32
	090 And X21, X21, 0x7FFFFFFF
	091 Move X1, [X8]
	092 Call StringBuilder.Append, X0, X1
	093 Move W24, W31
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, W22
	096 Add X9, X20, W21
	097 Add X22, X9, 32
	098 Subtract X23, X8, W21
	099 Move TEMP, X24
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {109}
	103 Compare X19, 0
	104 JumpIfEqual {130}
	105 Move W1, 58
	106 Move X0, X19
	107 Move X2, X31
	108 Call StringBuilder.Append, X0, X1
	109 Compare X20, 0
	110 JumpIfEqual {130}
	111 Move W8, [X20+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X1, X19
	115 Call IPAddressParser.AppendHex, X0, X1
	116 Add W21, W21, 1
	117 Subtract X23, X23, 1
	118 Move W24, 1
	119 Move X20, [X31+64]
	120 Move X19, [X31+72]
	121 Move X22, [X31+48]
	122 Move X21, [X31+56]
	123 Move X24, [X31+32]
	124 Move X23, [X31+40]
	125 Move X26, [X31+16]
	126 Move X25, [X31+24]
	127 Move X30, [X31+80]
	128 Move X27, [X31+88]
	129 Return 
	130 Call 0x1C17F20
	131 Call 0x1C17F28

Method: System.Void AppendHex(System.UInt16 value, System.Text.StringBuilder buffer)

Disassembly:
	0x0366F730 LDR W8, [X19 + 0x58]
	0x0366F734 CMP W8, 0x1
	0x0366F738 B.GT 0x366F744
	0x0366F73C MOVZ W8, 0x1
	0x0366F740 STRB W8, [X19 + 0x38]
	0x0366F744 MOV X0, X20
	0x0366F748 BL 0x1C16F18
	0x0366F74C ADRP X0, 0xA8A000
	0x0366F750 LDR X0, [X0 + 0xCC0]
	0x0366F754 BL 0x1C16D08
	0x0366F758 LDR X8, [X20]
	0x0366F75C LDR X1, [X8]
	0x0366F760 BL 0x1C17270
	0x0366F764 TBZ X0, 0x0, 0x366F778
	0x0366F768 LDR X19, [X20]
	0x0366F76C BL 0x3EB1AE0
	0x0366F770 MOV X0, X19
	0x0366F774 BL 0x1C16F18
	0x0366F778 MOVZ W0, 0x8
	0x0366F77C BL 0x3EB1AF0
	0x0366F780 LDR X8, [X20]
	0x0366F784 STR X8, [X0]
	0x0366F788 ADRP X1, 0x845000
	0x0366F78C ADD X1, X1, 0xE58
	0x0366F790 MOV X2, X31
	0x0366F794 BL 0x3EB1B00

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Add X8, X31, 0
	004 Move W2, W31
	005 Or X8, X8, 15
	006 Move [X31], X31
	007 And W9, W0, 15
	008 Move W11, 48
	009 NotImplemented "Instruction BFM not yet implemented."
	010 Add W12, W9, 87
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W10, W0
	013 ShiftRight W10, 4
	014 And W10, W10, 0x7FFF
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 NotImplemented "Instruction STRH not yet implemented."
	017 Add W2, W2, 1
	018 Move W0, W10
	019 Compare W10, 0
	020 JumpIfNotEqual {7}
	021 Compare X1, 0
	022 JumpIfEqual {30}
	023 Move X0, X1
	024 Move X1, X8
	025 Move X3, X31
	026 Call StringBuilder.Append, X0, X1, X2
	027 Move X30, [X31+16]
	028 Add X31, X31, 32
	029 Return 
	030 Call 0x1C17F20

Method: System.UInt32 ExtractIPv4Address(System.UInt16[] address)

Disassembly:
	0x0366F6FC B.NE 0x366F7A0
	0x0366F700 MOV X0, X20
	0x0366F704 BL 0x3EB1AD0
	0x0366F708 MOV X20, X0
	0x0366F70C ADRP X0, 0xAB2000
	0x0366F710 LDR X0, [X0 + 0x7A8]
	0x0366F714 BL 0x1C16D08
	0x0366F718 LDR X8, [X20]
	0x0366F71C LDR X1, [X8]
	0x0366F720 BL 0x1C17270
	0x0366F724 TBZ X0, 0x0, 0x366F74C
	0x0366F728 LDR X20, [X20]
	0x0366F72C BL 0x3EB1AE0

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Move W8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 NotImplemented "Instruction BFM not yet implemented."
	009 NotImplemented "Instruction REV not yet implemented."
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20
	013 Call 0x1C17F28

Method: System.UInt16 Reverse(System.UInt16 number)

Disassembly:
	0x0366F798 MOV X20, X0
	0x0366F79C BL 0x3EB1AE0
	0x0366F7A0 MOV X0, X20

ISIL:
	001 NotImplemented "Instruction REV not yet implemented."
	002 Move W0, W8
	003 ShiftRight W0, 16
	004 And W0, W0, 0x7FFFFFFF
	005 Return X0

