Type: System.UriHelper

Method: System.Boolean TestForSubPath(System.Char* pMe, System.UInt16 meLength, System.Char* pShe, System.UInt16 sheLength, System.Boolean ignoreCase)

Disassembly:
	0x0362B7E4 LDR X2, [X31 + 0x50]
	0x0362B7E8 MOV W0, W20
	0x0362B7EC MOV X1, X21
	0x0362B7F0 BL 0x362A6B4
	0x0362B7F4 LDR W8, [X31 + 0x30]
	0x0362B7F8 MOV W19, W31
	0x0362B7FC ADD W25, W25, 0x1
	0x0362B800 SUB W8, W8, 0x1
	0x0362B804 STR W8, [X31 + 0x30]
	0x0362B808 B 0x362B7A8
	0x0362B80C LDR X0, [X31 + 0x38]
	0x0362B810 MOVZ W28, 0xFF7E
	0x0362B814 CBNZ X0, 0x362B830
	0x0362B818 ADRP X8, 0xAC8000
	0x0362B81C LDR X8, [X8 + 0x618]
	0x0362B820 SUB W1, W23, W25
	0x0362B824 LDR X0, [X8]
	0x0362B828 BL 0x1C16D6C
	0x0362B82C CBZ X0, 0x362BBF8
	0x0362B830 LDR W8, [X0 + 0x18]
	0x0362B834 CBZ W8, 0x362BBF4
	0x0362B838 ADD W25, W25, 0x3
	0x0362B83C CMP W25, W23
	0x0362B840 STR X0, [X31 + 0x38]
	0x0362B844 STRB W20, [X0 + 0x20]
	0x0362B848 B.GE 0x362B8D4
	0x0362B84C MOVZ W19, 0x1
	0x0362B850 LDRH W8, [X24, W25, SXTW]
	0x0362B854 CMP W8, 0x25
	0x0362B858 B.NE 0x362B8DC
	0x0362B85C ADD W8, W25, 0x2
	0x0362B860 CMP W8, W23
	0x0362B864 B.GE 0x362B8DC
	0x0362B868 ADRP X9, 0xB10000
	0x0362B86C LDR X9, [X9 + 0x58]
	0x0362B870 LDRH W22, [X24, W8, SXTW]
	0x0362B874 LDR X0, [X9]
	0x0362B878 ADD W9, W25, 0x1
	0x0362B87C LDRH W20, [X24, W9, SXTW]
	0x0362B880 LDR W9, [X0 + 0xE0]
	0x0362B884 CBNZ W9, 0x362B88C
	0x0362B888 BL 0x1C16DFC
	0x0362B88C MOV W0, W20
	0x0362B890 MOV W1, W22
	0x0362B894 BL 0x362A090
	0x0362B898 SUB W8, W0, 0x80
	0x0362B89C CMP W28, W8, UXTH
	0x0362B8A0 B.CC 0x362B8DC
	0x0362B8A4 LDR X9, [X31 + 0x38]
	0x0362B8A8 LDR W8, [X9 + 0x18]
	0x0362B8AC CMP W19, W8
	0x0362B8B0 B.CS 0x362BBE0
	0x0362B8B4 ADD W20, W19, 0x1
	0x0362B8B8 ADD W25, W25, 0x3
	0x0362B8BC ADD X8, X9, W19, SXTW
	0x0362B8C0 CMP W25, W23
	0x0362B8C4 MOV W19, W20
	0x0362B8C8 STRB W0, [X8 + 0x20]
	0x0362B8CC B.LT 0x362B850
	0x0362B8D0 B 0x362B8E0
	0x0362B8D4 MOVZ W20, 0x1
	0x0362B8D8 B 0x362B8E0
	0x0362B8DC MOV W20, W19
	0x0362B8E0 MOV X0, X31
	0x0362B8E4 BL 0x3241948
	0x0362B8E8 CBZ X0, 0x362BBF0
	0x0362B8EC LDR X8, [X0]
	0x0362B8F0 LDP X9, X1, [X8 + 0x1E8]
	0x0362B8F4 BLR X9
	0x0362B8F8 MOV X22, X0
	0x0362B8FC CBZ X0, 0x362B934
	0x0362B900 ADRP X9, 0xAF7000
	0x0362B904 LDR X8, [X22]
	0x0362B908 LDR X9, [X9 + 0x3F8]
	0x0362B90C LDRB W10, [X8 + 0x130]
	0x0362B910 LDR X1, [X9]
	0x0362B914 LDRB W9, [X1 + 0x130]
	0x0362B918 CMP W10, W9
	0x0362B91C B.CC 0x362BBE4
	0x0362B920 LDR X8, [X8 + 0xC8]
	0x0362B924 ADD X8, X8, X9, 0x3, LSL
	0x0362B928 LDUR X8, [X8 - 0x8]
	0x0362B92C CMP X8, X1
	0x0362B930 B.NE 0x362BBE4
	0x0362B934 ADRP X8, 0xAF7000
	0x0362B938 LDR X8, [X8 + 0x368]
	0x0362B93C LDR X0, [X8]
	0x0362B940 BL 0x1C16F10
	0x0362B944 ADRP X8, 0xAC8000
	0x0362B948 LDR X8, [X8 + 0x988]
	0x0362B94C MOV X28, X0
	0x0362B950 LDR X1, [X8]
	0x0362B954 MOV X2, X31
	0x0362B958 BL 0x322F374
	0x0362B95C CBZ X22, 0x362BBEC
	0x0362B960 MOV X0, X22
	0x0362B964 MOV X1, X28
	0x0362B968 MOV X2, X31
	0x0362B96C BL 0x3243820
	0x0362B970 ADRP X8, 0xAF7000
	0x0362B974 LDR X8, [X8 + 0x648]
	0x0362B978 LDR X0, [X8]
	0x0362B97C BL 0x1C16F10
	0x0362B980 ADRP X8, 0xAC8000
	0x0362B984 LDR X8, [X8 + 0x988]
	0x0362B988 MOV X28, X0
	0x0362B98C LDR X1, [X8]
	0x0362B990 MOV X2, X31
	0x0362B994 BL 0x33FE644
	0x0362B998 MOV X0, X22
	0x0362B99C MOV X1, X28
	0x0362B9A0 MOV X2, X31
	0x0362B9A4 BL 0x32438DC
	0x0362B9A8 ADRP X8, 0xAD1000
	0x0362B9AC LDR X8, [X8 + 0x8D8]
	0x0362B9B0 LDR X19, [X31 + 0x38]
	0x0362B9B4 LDR X0, [X8]
	0x0362B9B8 LDR W1, [X19 + 0x18]
	0x0362B9BC BL 0x1C16D6C
	0x0362B9C0 LDR X8, [X22]
	0x0362B9C4 MOV X28, X0
	0x0362B9C8 LDR X9, [X8 + 0x2E8]
	0x0362B9CC LDR X6, [X8 + 0x2F0]
	0x0362B9D0 MOV X0, X22
	0x0362B9D4 MOV X1, X19
	0x0362B9D8 MOV W2, W31
	0x0362B9DC MOV W3, W20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0xDB6000
	015 Move W8, [X20+1258]
	016 Move W21, W4
	017 Move W23, W3
	018 Move X22, X2
	019 Move W19, W1
	020 Move [X31+8], X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xACB000
	026 Move X0, [X0+368]
	027 Call 0x1C17CF4
	028 Move X0, 0xACB000
	029 Move X0, [X0+3144]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1258], W8
	033 And W31, W19, 0xFFFF
	034 Move W26, W31
	035 And W31, W23, 0xFFFF
	036 Subtract W8, W23, 1
	037 Subtract W9, W19, 1
	038 And W8, W8, 0xFFFF
	039 Move X20, [X31+8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X27, X31
	043 Move W26, W31
	044 Move W28, 1
	045 And X29, X8, 0xFFFF
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W0, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move TEMP, X21
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {96}
	058 Move X8, 0xACB000
	059 Move X8, [X8+3144]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X31
	066 Call CultureInfo.get_InvariantCulture
	067 Move X8, 0xACB000
	068 Move X8, [X8+368]
	069 Move X25, X0
	070 Move X8, [X8]
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move W0, W24
	077 Move X1, X25
	078 Move X2, X31
	079 Call Char.ToLower, X0, X1
	080 And W24, W0, 0xFFFF
	081 Move X0, X31
	082 Call CultureInfo.get_InvariantCulture
	083 Move X1, X0
	084 Move W0, W23
	085 Move X2, X31
	086 Call Char.ToLower, X0, X1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 And W8, W28, W8
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {119}
	095 Move W28, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 And W28, W28, W8
	099 Add X27, X27, 1
	100 Add W26, W26, 1
	101 Add X20, X20, 2
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X22, X22, 2
	104 Move W26, W27
	105 And W8, W26, 0xFFFF
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X31+8]
	108 And X9, X19, 0xFFFF
	109 Subtract X9, X9, W26
	110 Move W0, 1
	111 Add X8, X8, W26
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X8, X8, 2
	118 Move W0, 1
	119 Move W0, W31
	120 Move X20, [X31+96]
	121 Move X19, [X31+104]
	122 Move X22, [X31+80]
	123 Move X21, [X31+88]
	124 Move X24, [X31+64]
	125 Move X23, [X31+72]
	126 Move X26, [X31+48]
	127 Move X25, [X31+56]
	128 Move X28, [X31+32]
	129 Move X27, [X31+40]
	130 Move X29, [X31+16]
	131 Move X30, [X31+24]
	132 Add X31, X31, 112
	133 Return X0

Method: System.Char[] EscapeString(System.String input, System.Int32 start, System.Int32 end, System.Char[] dest, ref System.Int32 destPos, System.Boolean isUriString, System.Char force1, System.Char force2, System.Char rsvd)

Disassembly:
	0x0362B9E0 MOV X4, X28
	0x0362B9E4 MOV W5, W31
	0x0362B9E8 BLR X9
	0x0362B9EC ADRP X8, 0xB10000
	0x0362B9F0 LDR X8, [X8 + 0x58]
	0x0362B9F4 MOV W22, W0
	0x0362B9F8 LDR X0, [X8]
	0x0362B9FC LDR W8, [X0 + 0xE0]
	0x0362BA00 CBNZ W8, 0x362BA08
	0x0362BA04 BL 0x1C16DFC
	0x0362BA08 LDR W8, [X31 + 0x24]
	0x0362BA0C LDR X2, [X31 + 0x50]
	0x0362BA10 LDR X5, [X31 + 0x38]
	0x0362BA14 MOV X0, X29
	0x0362BA18 AND W7, W8, 0x1
	0x0362BA1C LDR W8, [X31 + 0x34]
	0x0362BA20 MOV X1, X21
	0x0362BA24 MOV X3, X28
	0x0362BA28 MOV W4, W22
	0x0362BA2C MOV W6, W20
	0x0362BA30 STRB W8, [X31]
	0x0362BA34 BL 0x362A1D8
	0x0362BA38 MOV W19, W31
	0x0362BA3C CMP W25, W23
	0x0362BA40 MOV W28, W25
	0x0362BA44 B.NE 0x362B43C
	0x0362BA48 B 0x362BB14
	0x0362BA4C MOVZ W8, 0x1
	0x0362BA50 B 0x362B720
	0x0362BA54 CBZ X21, 0x362BBFC
	0x0362BA58 ADRP X9, 0xAD1000
	0x0362BA5C LDR W8, [X21 + 0x18]
	0x0362BA60 LDR X9, [X9 + 0x8D8]
	0x0362BA64 ADD W1, W8, 0x5A
	0x0362BA68 LDR X0, [X9]
	0x0362BA6C BL 0x1C16D6C
	0x0362BA70 CBZ X0, 0x362BA84
	0x0362BA74 LDR W8, [X0 + 0x18]
	0x0362BA78 CBZ W8, 0x362BA84
	0x0362BA7C ADD X8, X0, 0x20
	0x0362BA80 B 0x362BA88
	0x0362BA84 MOV X8, X31
	0x0362BA88 LDR X9, [X31 + 0x50]
	0x0362BA8C MOVZ W10, 0x1E
	0x0362BA90 MOVZ W19, 0x1
	0x0362BA94 MOV X21, X0
	0x0362BA98 LDR W9, [X9]
	0x0362BA9C STR W10, [X31 + 0x30]
	0x0362BAA0 CMP W9, 0x1
	0x0362BAA4 B.LT 0x362B414
	0x0362BAA8 LDRH W10, [X29], #0x2
	0x0362BAAC SUBS X9, X9, 0x1
	0x0362BAB0 MOVZ W19, 0x1
	0x0362BAB4 STRH W10, [X8], #0x2
	0x0362BAB8 B.NE 0x362BAA8
	0x0362BABC MOVZ W8, 0x1E
	0x0362BAC0 STR W8, [X31 + 0x30]
	0x0362BAC4 MOV X21, X0
	0x0362BAC8 B 0x362B414
	0x0362BACC LDR W11, [X31 + 0x20]
	0x0362BAD0 CMP W11, W23
	0x0362BAD4 B.GE 0x362BB10
	0x0362BAD8 LDR X8, [X31 + 0x50]
	0x0362BADC LDR X21, [X31 + 0x18]
	0x0362BAE0 SXTW X10, W23
	0x0362BAE4 ADD X9, X24, W11, 0x1, SXTW
	0x0362BAE8 LDR W8, [X8]
	0x0362BAEC SUB X10, X10, W11, SXTW
	0x0362BAF0 LDRH W11, [X9], #0x2
	0x0362BAF4 SUBS X10, X10, 0x1
	0x0362BAF8 STRH W11, [X29, W8, SXTW]
	0x0362BAFC ADD W8, W8, 0x1
	0x0362BB00 B.NE 0x362BAF0
	0x0362BB04 LDR X9, [X31 + 0x50]
	0x0362BB08 STR W8, [X9]
	0x0362BB0C B 0x362BB14
	0x0362BB10 LDR X21, [X31 + 0x18]
	0x0362BB14 MOV X0, X21
	0x0362BB18 LDP X20, X19, [X31 + 0xB0]
	0x0362BB1C LDP X22, X21, [X31 + 0xA0]
	0x0362BB20 LDP X24, X23, [X31 + 0x90]
	0x0362BB24 LDP X26, X25, [X31 + 0x80]
	0x0362BB28 LDP X28, X27, [X31 + 0x70]
	0x0362BB2C LDP X29, X30, [X31 + 0x60]
	0x0362BB30 ADD X31, X31, 0xC0
	0x0362BB34 RET
	0x0362BB38 ADRP X0, 0xB10000
	0x0362BB3C LDR X0, [X0 + 0x568]
	0x0362BB40 BL 0x1C16D08
	0x0362BB44 MOV X1, X31
	0x0362BB48 BL 0x320A1E4
	0x0362BB4C MOV X20, X0
	0x0362BB50 ADRP X0, 0xB10000
	0x0362BB54 LDR X0, [X0 + 0xD8]
	0x0362BB58 BL 0x1C16D08
	0x0362BB5C BL 0x1C16F10
	0x0362BB60 MOV X21, X0
	0x0362BB64 MOV X1, X20
	0x0362BB68 MOV X2, X31
	0x0362BB6C BL 0x33674A0
	0x0362BB70 ADRP X0, 0xB10000
	0x0362BB74 LDR X0, [X0 + 0x598]
	0x0362BB78 BL 0x1C16D08
	0x0362BB7C MOV X1, X0
	0x0362BB80 MOV X0, X21
	0x0362BB84 BL 0x1C16DEC
	0x0362BB88 BL 0x1C16F28
	0x0362BB8C BL 0x1C16F20
	0x0362BB90 ADRP X0, 0xB10000
	0x0362BB94 LDR X0, [X0 + 0x568]
	0x0362BB98 BL 0x1C16D08
	0x0362BB9C MOV X1, X31
	0x0362BBA0 BL 0x320A1E4
	0x0362BBA4 MOV X20, X0
	0x0362BBA8 ADRP X0, 0xB10000
	0x0362BBAC LDR X0, [X0 + 0xD8]
	0x0362BBB0 BL 0x1C16D08
	0x0362BBB4 BL 0x1C16F10
	0x0362BBB8 MOV X21, X0
	0x0362BBBC MOV X1, X20
	0x0362BBC0 MOV X2, X31
	0x0362BBC4 BL 0x33674A0
	0x0362BBC8 ADRP X0, 0xB10000
	0x0362BBCC LDR X0, [X0 + 0x598]
	0x0362BBD0 BL 0x1C16D08
	0x0362BBD4 MOV X1, X0
	0x0362BBD8 MOV X0, X21
	0x0362BBDC BL 0x1C16DEC
	0x0362BBE0 BL 0x1C16F28
	0x0362BBE4 MOV X0, X22
	0x0362BBE8 BL 0x1C171E0
	0x0362BBEC BL 0x1C16F20
	0x0362BBF0 BL 0x1C16F20
	0x0362BBF4 BL 0x1C16F28
	0x0362BBF8 BL 0x1C16F20
	0x0362BBFC BL 0x1C16F20
	0x0362BC00 MOV X21, X31
	0x0362BC04 B 0x362BC68
	0x0362BC08 B 0x362BC68
	0x0362BC0C B 0x362BC68
	0x0362BC10 B 0x362BC64
	0x0362BC14 B 0x362BC64
	0x0362BC18 B 0x362BC64
	0x0362BC1C B 0x362BC64
	0x0362BC20 B 0x362BC68
	0x0362BC24 B 0x362BC68
	0x0362BC28 B 0x362BC68
	0x0362BC2C B 0x362BC68
	0x0362BC30 B 0x362BC64
	0x0362BC34 B 0x362BC68
	0x0362BC38 B 0x362BC68
	0x0362BC3C B 0x362BC64
	0x0362BC40 B 0x362BC68
	0x0362BC44 B 0x362BC68
	0x0362BC48 B 0x362BC68
	0x0362BC4C B 0x362BC64
	0x0362BC50 B 0x362BC64
	0x0362BC54 B 0x362BC64
	0x0362BC58 B 0x362BC64
	0x0362BC5C B 0x362BC64
	0x0362BC60 B 0x362BC64
	0x0362BC64 LDR X21, [X31 + 0x40]
	0x0362BC68 CMP W1, 0x1
	0x0362BC6C B.NE 0x362BC8C
	0x0362BC70 BL 0x3EB1AD0
	0x0362BC74 LDR X20, [X0]
	0x0362BC78 BL 0x3EB1AE0
	0x0362BC7C CBZ X20, 0x362BB14
	0x0362BC80 MOV X0, X20
	0x0362BC84 BL 0x1C16F18
	0x0362BC88 CBNZ X20, 0x362BC90
	0x0362BC8C BL 0x1D2C690
	0x0362BC90 MOV X0, X20
	0x0362BC94 BL 0x1C16F18
	0x0362BC98 BL 0x1990590
	0x0362BC9C STR X30, [X31 - 0x20]!
	0x0362BCA0 STP X20, X19, [X31 + 0x10]
	0x0362BCA4 ADRP X20, 0xDB5000
	0x0362BCA8 ADRP X19, 0xB10000
	0x0362BCAC LDRB W8, [X20 + 0x4F6]
	0x0362BCB0 LDR X19, [X19 + 0x48]
	0x0362BCB4 TBNZ X8, 0x0, 0x362BCCC
	0x0362BCB8 ADRP X0, 0xB10000
	0x0362BCBC LDR X0, [X0 + 0x48]
	0x0362BCC0 BL 0x1C16CF4
	0x0362BCC4 MOVZ W8, 0x1
	0x0362BCC8 STRB W8, [X20 + 0x4F6]
	0x0362BCCC LDR X0, [X19]
	0x0362BCD0 LDR W8, [X0 + 0xE0]
	0x0362BCD4 CBNZ W8, 0x362BCE0
	0x0362BCD8 BL 0x1C16DFC
	0x0362BCDC LDR X0, [X19]
	0x0362BCE0 LDR X8, [X0 + 0xB8]
	0x0362BCE4 LDP X20, X19, [X31 + 0x10]
	0x0362BCE8 LDR W8, [X8 + 0x90]
	0x0362BCEC CMP W8, 0x3
	0x0362BCF0 CSET W0, LT
	0x0362BCF4 LDR X30, [X31], #0x20
	0x0362BCF8 RET
	0x0362BCFC STP X30, X21, [X31 - 0x20]!
	0x0362BD00 STP X20, X19, [X31 + 0x10]
	0x0362BD04 ADRP X21, 0xDB5000
	0x0362BD08 ADRP X20, 0xACA000
	0x0362BD0C LDRB W8, [X21 + 0x4F3]
	0x0362BD10 LDR X20, [X20 + 0xA28]
	0x0362BD14 MOV W19, W0
	0x0362BD18 TBNZ X8, 0x0, 0x362BD3C
	0x0362BD1C ADRP X0, 0xACA000
	0x0362BD20 LDR X0, [X0 + 0xA28]
	0x0362BD24 BL 0x1C16CF4
	0x0362BD28 ADRP X0, 0xB10000
	0x0362BD2C LDR X0, [X0 + 0x580]
	0x0362BD30 BL 0x1C16CF4
	0x0362BD34 MOVZ W8, 0x1
	0x0362BD38 STRB W8, [X21 + 0x4F3]
	0x0362BD3C LDR X0, [X20]
	0x0362BD40 LDR W8, [X0 + 0xE0]
	0x0362BD44 CBNZ W8, 0x362BD4C
	0x0362BD48 BL 0x1C16DFC
	0x0362BD4C MOV W0, W19
	0x0362BD50 MOV X1, X31
	0x0362BD54 BL 0x361D66C
	0x0362BD58 TBZ X0, 0x0, 0x362BD64
	0x0362BD5C MOVZ W0, 0x1
	0x0362BD60 B 0x362BD88
	0x0362BD64 ADRP X8, 0xB10000
	0x0362BD68 LDR X8, [X8 + 0x580]
	0x0362BD6C LDR X0, [X8]
	0x0362BD70 CBZ X0, 0x362BD94
	0x0362BD74 MOV W1, W19
	0x0362BD78 MOV X2, X31
	0x0362BD7C BL 0x322BD98
	0x0362BD80 ORN W8, W31, W0, 0x0
	0x0362BD84 UBFM W0, W8, 0x1F, 0x1F
	0x0362BD88 LDP X20, X19, [X31 + 0x10]
	0x0362BD8C LDP X30, X21, [X31], #0x20
	0x0362BD90 RET
	0x0362BD94 BL 0x1C16F20
	0x0362BD98 STR X30, [X31 - 0x30]!
	0x0362BD9C STP X22, X21, [X31 + 0x10]
	0x0362BDA0 STP X20, X19, [X31 + 0x20]
	0x0362BDA4 ADRP X21, 0xDB5000
	0x0362BDA8 ADRP X22, 0xAD1000
	0x0362BDAC ADRP X19, 0xB10000
	0x0362BDB0 ADRP X20, 0xB10000
	0x0362BDB4 LDRB W8, [X21 + 0x4F4]
	0x0362BDB8 LDR X22, [X22 + 0x8D8]
	0x0362BDBC LDR X19, [X19 + 0x5A0]
	0x0362BDC0 LDR X20, [X20 + 0x58]
	0x0362BDC4 TBNZ X8, 0x0, 0x362BDF4
	0x0362BDC8 ADRP X0, 0xAD1000
	0x0362BDCC LDR X0, [X0 + 0x8D8]
	0x0362BDD0 BL 0x1C16CF4
	0x0362BDD4 ADRP X0, 0xB10000
	0x0362BDD8 LDR X0, [X0 + 0x5A0]
	0x0362BDDC BL 0x1C16CF4
	0x0362BDE0 ADRP X0, 0xB10000
	0x0362BDE4 LDR X0, [X0 + 0x58]
	0x0362BDE8 BL 0x1C16CF4
	0x0362BDEC MOVZ W8, 0x1
	0x0362BDF0 STRB W8, [X21 + 0x4F4]
	0x0362BDF4 LDR X0, [X22]
	0x0362BDF8 MOVZ W1, 0x10
	0x0362BDFC BL 0x1C16D6C
	0x0362BE00 LDR X1, [X19]
	0x0362BE04 MOV X2, X31
	0x0362BE08 MOV X19, X0
	0x0362BE0C BL 0x32C5BD8
	0x0362BE10 LDR X8, [X20]
	0x0362BE14 LDP X22, X21, [X31 + 0x10]
	0x0362BE18 LDR X8, [X8 + 0xB8]
	0x0362BE1C STR X19, [X8]
	0x0362BE20 LDP X20, X19, [X31 + 0x20]
	0x0362BE24 LDR X30, [X31], #0x30
	0x0362BE28 RET
	0x0362BE2C LDR X0, [X0 + 0x20]
	0x0362BE30 RET
	0x0362BE34 LDR W0, [X0 + 0x1C]
	0x0362BE38 RET
	0x0362BE3C RET
	0x0362BE40 STP X30, X19, [X31 - 0x10]!
	0x0362BE44 CBZ X1, 0x362BE64
	0x0362BE48 MOV X0, X1
	0x0362BE4C MOV X1, X31
	0x0362BE50 MOV X19, X2
	0x0362BE54 BL 0x361EAB4
	0x0362BE58 STR X0, [X19]
	0x0362BE5C LDP X30, X19, [X31], #0x10
	0x0362BE60 RET
	0x0362BE64 BL 0x1C16F20
	0x0362BE68 SUB X31, X31, 0x40
	0x0362BE6C STP X30, X23, [X31 + 0x10]
	0x0362BE70 STP X22, X21, [X31 + 0x20]
	0x0362BE74 STP X20, X19, [X31 + 0x30]
	0x0362BE78 ADRP X23, 0xDB5000
	0x0362BE7C LDRB W8, [X23 + 0x4F5]
	0x0362BE80 MOV X19, X3
	0x0362BE84 MOV X20, X2
	0x0362BE88 MOV X21, X1
	0x0362BE8C MOV X22, X0
	0x0362BE90 TBNZ X8, 0x0, 0x362BEA8
	0x0362BE94 ADRP X0, 0xACA000
	0x0362BE98 LDR X0, [X0 + 0xA28]
	0x0362BE9C BL 0x1C16CF4
	0x0362BEA0 MOVZ W8, 0x1
	0x0362BEA4 STRB W8, [X23 + 0x4F5]
	0x0362BEA8 STR X31, [X31 + 0x8]
	0x0362BEAC CBZ X21, 0x362BF6C
	0x0362BEB0 MOV X0, X21
	0x0362BEB4 MOV X1, X31
	0x0362BEB8 BL 0x3618010
	0x0362BEBC TBNZ X0, 0x0, 0x362BF70
	0x0362BEC0 MOV X0, X21
	0x0362BEC4 MOV X1, X31
	0x0362BEC8 BL 0x3619A24
	0x0362BECC TBZ X0, 0x0, 0x362BFF4
	0x0362BED0 ADRP X22, 0xACA000
	0x0362BED4 LDR X22, [X22 + 0xA28]
	0x0362BED8 STR X31, [X31 + 0x8]
	0x0362BEDC STRB W31, [X31 + 0x4]
	0x0362BEE0 LDR X0, [X22]
	0x0362BEE4 LDR W8, [X0 + 0xE0]
	0x0362BEE8 CBNZ W8, 0x362BEF0
	0x0362BEEC BL 0x1C16DFC
	0x0362BEF0 ADD X2, X31, 0x8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 64
	015 Move [X29-32], W7
	016 Move [X29-28], W6
	017 Move [X29-36], W5
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move X8, [X23+40]
	020 Move X22, 0xDB6000
	021 Move X19, X4
	022 Move X20, X3
	023 Move [X29-8], X8
	024 Move W8, [X22+1259]
	025 Move W26, W2
	026 Move W24, W1
	027 Move X21, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0xAC9000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move X0, 0xB11000
	036 Move X0, [X0+88]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+1259], W8
	040 Subtract W8, W26, W24
	041 Move W9, 0xFFF0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X27, X31, 160
	044 Add X31, X27, 0
	045 Move W2, 160
	046 Move X0, X27
	047 Move W1, W31
	048 Call 0x3EB2B10
	049 Compare X21, 0
	050 JumpIfEqual {54}
	051 Move X0, X31
	052 Call RuntimeHelpers.get_OffsetToStringData
	053 Add X21, X21, W0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move [X29-48], X23
	057 Move X23, 0xB11000
	058 Move W28, W24
	059 Move [X29-24], W8
	060 Move X23, [X23+88]
	061 Move [X29-52], W24
	062 Move [X29-20], W26
	063 Add X22, X21, W28
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 And W8, W8, 0xFFFF
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move W3, 3
	076 Move W4, 120
	077 Move X0, X21
	078 Move X1, X20
	079 Move W2, W28
	080 Move X5, X19
	081 Move W6, W24
	082 Call UriHelper.EnsureDestinationSize, X0, X1, X2, X3, X4, X5, X6
	083 Add W25, W28, 2
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X20, X0
	086 Move X0, [X23]
	087 Add W26, W28, 1
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move W0, W22
	095 Move W1, W24
	096 Call UriHelper.EscapedAscii, X0, X1
	097 NotImplemented "Instruction ORN not yet implemented."
	098 And W31, W8, 0xFFFF
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add W9, W8, 1
	101 Move [X19], W9
	102 Compare X20, 0
	103 JumpIfEqual {335}
	104 Move W10, [X20+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add X12, X20, X8
	107 Add W11, W8, 2
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move W13, 37
	110 NotImplemented "Instruction STRH not yet implemented."
	111 Move [X19], W11
	112 Move X12, W26
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Add X9, X20, W9
	115 Add W8, W8, 3
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction STRH not yet implemented."
	118 Move [X19], W8
	119 Move X8, W25
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Add X9, X20, W11
	122 Move W28, W25
	123 NotImplemented "Instruction STRH not yet implemented."
	124 Move X8, 0xAC9000
	125 Move X8, [X8+1448]
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Subtract W25, W26, W28
	132 Move W1, 39
	133 Move W0, W25
	134 Move X2, X31
	135 Move [X29-12], W24
	136 Call Math.Min, X0, X1
	137 Move W8, W0
	138 ShiftRight W8, 16
	139 And W8, W8, 0x7FFF
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction SXTH not yet implemented."
	142 Move W8, 1
	143 Add W10, W8, W28
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add W24, W8, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 NotImplemented "Instruction SXTH not yet implemented."
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, [X23]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {251}
	165 Move W0, W25
	166 Call UriHelper.IsReservedUnreservedOrHash, X0
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {257}
	171 Move W24, 1
	172 Move W8, 1
	173 Move X0, [X23]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move W0, 37
	179 Move X1, X20
	180 Move X2, X19
	181 Call UriHelper.EscapeAsciiChar, X0, X1, X2
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 Move W24, W8
	184 Subtract W10, W28, 1
	185 Add W9, W10, W8
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move [X29-16], W10
	188 Move W9, W9
	189 ShiftRight W9, 10
	190 And W9, W9, 0x7FFFFFFF
	191 NotImplemented "Instruction CMP not yet implemented."
	192 And W9, W24, 0xFFFF
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Add W24, W24, 1
	196 Move X0, [X23]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 Add W8, W24, W24
	203 Move W3, W8
	204 ShiftRight W3, 30
	205 And W3, W3, 0x1FFFFFFF
	206 Move W4, 480
	207 Move X0, X21
	208 Move X1, X20
	209 Move W2, W28
	210 Move X5, X19
	211 Call UriHelper.EnsureDestinationSize, X0, X1, X2, X3, X4, X5, X6
	212 Move X20, X0
	213 Move X0, X31
	214 Call Encoding.get_UTF8
	215 Compare X0, 0
	216 JumpIfEqual {335}
	217 Move X8, [X0]
	218 NotImplemented "Instruction SXTH not yet implemented."
	219 Move W4, 160
	220 Move X1, X22
	221 Move X9, [X8+664]
	222 Move X5, [X8+672]
	223 Move W2, W24
	224 Move X3, X27
	225 NotImplemented "Instruction BLR not yet implemented."
	226 And W31, W0, 0xFFFF
	227 Move W8, W0
	228 ShiftRight W8, 16
	229 And W8, W8, 0x7FFF
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W26, W31
	232 NotImplemented "Instruction SXTH not yet implemented."
	233 Move X0, [X23]
	234 Move W22, [X27]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move W0, W22
	240 Move X1, X20
	241 Move X2, X19
	242 Call UriHelper.EscapeAsciiChar, X0, X1, X2
	243 Add W8, W26, 1
	244 NotImplemented "Instruction SXTH not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move W26, [X29-20]
	247 Move W8, [X29-16]
	248 Add W8, W8, W24
	249 Add W24, W28, W24
	250 Move W28, W8
	251 Move W0, W25
	252 Call UriHelper.IsUnreserved, X0
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfEqual {276}
	257 Move X0, [X23]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move W3, 3
	263 Move W4, 120
	264 Move X0, X21
	265 Move X1, X20
	266 Move W2, W28
	267 Move X5, X19
	268 Move W6, W24
	269 Call UriHelper.EnsureDestinationSize, X0, X1, X2, X3, X4, X5, X6
	270 Move X20, X0
	271 Move W0, W25
	272 Move X1, X20
	273 Move X2, X19
	274 Call UriHelper.EscapeAsciiChar, X0, X1, X2
	275 Add W24, W28, 1
	276 Add W28, W28, 1
	277 NotImplemented "Instruction CMP not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Compare X20, 0
	282 JumpIfEqual {297}
	283 Move X0, [X23]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move X0, X21
	289 Move X1, X20
	290 Move W2, W28
	291 Move W3, W31
	292 Move W4, W31
	293 Move X5, X19
	294 Move W6, W24
	295 Call UriHelper.EnsureDestinationSize, X0, X1, X2, X3, X4, X5, X6
	296 Move X20, X0
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 Move X8, [X23+40]
	299 NotImplemented "Instruction LDUR not yet implemented."
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X0, X20
	302 Add X31, X29, 0
	303 Move X20, [X31+80]
	304 Move X19, [X31+88]
	305 Move X22, [X31+64]
	306 Move X21, [X31+72]
	307 Move X24, [X31+48]
	308 Move X23, [X31+56]
	309 Move X26, [X31+32]
	310 Move X25, [X31+40]
	311 Move X28, [X31+16]
	312 Move X27, [X31+24]
	313 Move X29, [X31+96]
	314 Move X30, [X31+104]
	315 Return X0
	316 Move X0, 0xB11000
	317 Move X0, [X0+1384]
	318 Call 0x1C17D08
	319 Move X1, X31
	320 Call SR.GetString, X0
	321 Move X19, X0
	322 Move X0, 0xB11000
	323 Move X0, [X0+216]
	324 Call 0x1C17D08
	325 Call 0x1C17F10
	326 Move X1, X19
	327 Move X20, X0
	328 Call UriFormatException..ctor, X0, X1
	329 Move X0, 0xB11000
	330 Move X0, [X0+1392]
	331 Call 0x1C17D08
	332 Move X1, X0
	333 Move X0, X20
	334 Call 0x1C17DEC
	335 Call 0x1C17F20
	336 Call 0x1C17F28
	337 Move X0, 0xB11000
	338 Move X0, [X0+296]
	339 Call 0x3EB2B20

Method: System.Char[] EnsureDestinationSize(System.Char* pStr, System.Char[] dest, System.Int32 currentInputPos, System.Int16 charsToAdd, System.Int16 minReallocateChars, ref System.Int32 destPos, System.Int32 prevInputPos)

Disassembly:
	0x0362BEF4 ADD X3, X31, 0x4
	0x0362BEF8 MOV X0, X21
	0x0362BEFC MOV X1, X20
	0x0362BF00 MOV X4, X19
	0x0362BF04 MOV X5, X31
	0x0362BF08 BL 0x3619BBC
	0x0362BF0C LDR X8, [X19]
	0x0362BF10 MOV X20, X0
	0x0362BF14 MOV X0, X31
	0x0362BF18 CBNZ X8, 0x362BF58
	0x0362BF1C LDR X0, [X22]
	0x0362BF20 LDR W8, [X0 + 0xE0]
	0x0362BF24 CBNZ W8, 0x362BF2C
	0x0362BF28 BL 0x1C16DFC
	0x0362BF2C MOV X0, X20
	0x0362BF30 MOV X1, X31
	0x0362BF34 MOV X2, X31
	0x0362BF38 BL 0x361A090
	0x0362BF3C TBZ X0, 0x0, 0x362BF54
	0x0362BF40 CBZ X20, 0x362BF6C
	0x0362BF44 MOV X0, X20
	0x0362BF48 MOV X1, X31
	0x0362BF4C BL 0x361A77C
	0x0362BF50 B 0x362BF58
	0x0362BF54 LDR X0, [X31 + 0x8]
	0x0362BF58 LDP X20, X19, [X31 + 0x30]
	0x0362BF5C LDP X22, X21, [X31 + 0x20]
	0x0362BF60 LDP X30, X23, [X31 + 0x10]
	0x0362BF64 ADD X31, X31, 0x40
	0x0362BF68 RET
	0x0362BF6C BL 0x1C16F20
	0x0362BF70 ADRP X0, 0xAC8000
	0x0362BF74 LDR X0, [X0 + 0x9D0]
	0x0362BF78 BL 0x1C16D08
	0x0362BF7C MOVZ W1, 0x1
	0x0362BF80 BL 0x1C16D6C
	0x0362BF84 MOV X19, X0
	0x0362BF88 MOV X0, X22
	0x0362BF8C MOV X1, X31
	0x0362BF90 BL 0x33BE520
	0x0362BF94 MOV X20, X0
	0x0362BF98 BL 0x19903C0
	0x0362BF9C LDR X8, [X20]
	0x0362BFA0 MOV X0, X20
	0x0362BFA4 LDR X9, [X8 + 0x2E8]
	0x0362BFA8 LDR X1, [X8 + 0x2F0]
	0x0362BFAC BLR X9
	0x0362BFB0 MOV X20, X0
	0x0362BFB4 MOV X0, X19
	0x0362BFB8 BL 0x19903C0
	0x0362BFBC MOV X0, X19
	0x0362BFC0 MOV X1, X20
	0x0362BFC4 BL 0x19980B4
	0x0362BFC8 MOV X0, X19
	0x0362BFCC MOV X1, X31
	0x0362BFD0 MOV X2, X20
	0x0362BFD4 BL 0x1993444
	0x0362BFD8 ADRP X0, 0xB10000
	0x0362BFDC LDR X0, [X0 + 0x268]
	0x0362BFE0 BL 0x1C16D08
	0x0362BFE4 MOV X1, X19
	0x0362BFE8 MOV X2, X31
	0x0362BFEC BL 0x320A16C
	0x0362BFF0 B 0x362C008
	0x0362BFF4 ADRP X0, 0xB10000
	0x0362BFF8 LDR X0, [X0 + 0x150]
	0x0362BFFC BL 0x1C16D08
	0x0362C000 MOV X1, X31
	0x0362C004 BL 0x320A1E4
	0x0362C008 MOV X19, X0
	0x0362C00C ADRP X0, 0xAC7000
	0x0362C010 LDR X0, [X0 + 0x5B0]
	0x0362C014 BL 0x1C16D08
	0x0362C018 BL 0x1C16F10
	0x0362C01C MOV X1, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xDB6000
	011 Move W8, [X26+1260]
	012 Move W21, W6
	013 Move X19, X5
	014 Move W24, W4
	015 Move W25, W3
	016 Move W20, W2
	017 Move X23, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xAD2000
	024 Move X0, [X0+2264]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+1260], W8
	028 Move W8, [X19]
	029 Compare X23, 0
	030 JumpIfEqual {36}
	031 Move W9, [X23+24]
	032 Add W10, W20, W25
	033 Subtract W10, W10, W21
	034 Add W10, W10, W8
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, 0xAD2000
	037 Move X9, [X9+2264]
	038 Move X0, [X9]
	039 Add W9, W20, W24
	040 Subtract W9, W9, W21
	041 Add W1, W9, W8
	042 Call 0x1C17D6C
	043 Move X24, X0
	044 Compare X23, 0
	045 JumpIfEqual {58}
	046 Move W8, [X19]
	047 Compare W8, 0
	048 JumpIfEqual {58}
	049 Move W4, W8
	050 ShiftRight W4, 31
	051 And W4, W4, 0x3FFFFFFF
	052 Move X0, X23
	053 Move W1, W31
	054 Move X2, X24
	055 Move W3, W31
	056 Move X5, X31
	057 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	058 Move X23, X24
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, [X19]
	061 Add W9, W8, 1
	062 Compare X23, 0
	063 JumpIfEqual {84}
	064 Move W10, [X23+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Add W21, W21, 1
	068 Add X8, X23, W8
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction STRH not yet implemented."
	071 Move W8, W9
	072 Move [X19], W9
	073 Move X0, X23
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move X30, [X31+80]
	083 Return X0
	084 Move [X19], W9
	085 Call 0x1C17F20
	086 Add W8, W8, 1
	087 Move [X19], W8
	088 Call 0x1C17F28

Method: System.Char[] UnescapeString(System.String input, System.Int32 start, System.Int32 end, System.Char[] dest, ref System.Int32 destPosition, System.Char rsvd1, System.Char rsvd2, System.Char rsvd3, System.UnescapeMode unescapeMode, System.UriParser syntax, System.Boolean isQuery)

Disassembly:
	0x0362C208 BL 0x1993444
	0x0362C20C ADRP X0, 0xB0F000
	0x0362C210 LDR X0, [X0 + 0x268]
	0x0362C214 BL 0x1C16D08
	0x0362C218 MOV X1, X19
	0x0362C21C MOV X2, X31
	0x0362C220 BL 0x320A16C
	0x0362C224 B 0x362C23C
	0x0362C228 ADRP X0, 0xB0F000
	0x0362C22C LDR X0, [X0 + 0x150]
	0x0362C230 BL 0x1C16D08
	0x0362C234 MOV X1, X31
	0x0362C238 BL 0x320A1E4
	0x0362C23C MOV X19, X0
	0x0362C240 ADRP X0, 0xAC7000
	0x0362C244 LDR X0, [X0 + 0x5B0]
	0x0362C248 BL 0x1C16D08
	0x0362C24C BL 0x1C16F10
	0x0362C250 MOV X1, X19
	0x0362C254 MOV X2, X31
	0x0362C258 MOV X20, X0
	0x0362C25C BL 0x337DF1C
	0x0362C260 ADRP X0, 0xB0F000
	0x0362C264 LDR X0, [X0 + 0x5B0]
	0x0362C268 BL 0x1C16D08
	0x0362C26C MOV X1, X0
	0x0362C270 MOV X0, X20
	0x0362C274 BL 0x1C16DEC
	0x0362C278 CBZ X1, 0x362C288
	0x0362C27C MOV X0, X1
	0x0362C280 MOV X1, X31
	0x0362C284 B 0x362467C
	0x0362C288 STR X30, [X31 - 0x10]!
	0x0362C28C BL 0x1C16F20
	0x0362C290 STP X30, X25, [X31 - 0x40]!
	0x0362C294 STP X24, X23, [X31 + 0x10]
	0x0362C298 STP X22, X21, [X31 + 0x20]
	0x0362C29C STP X20, X19, [X31 + 0x30]
	0x0362C2A0 ADRP X20, 0xDB4000
	0x0362C2A4 ADRP X19, 0xAF8000
	0x0362C2A8 LDRB W8, [X20 + 0x4F7]
	0x0362C2AC LDR X19, [X19 + 0xA48]
	0x0362C2B0 TBNZ X8, 0x0, 0x362C3C4
	0x0362C2B4 ADRP X0, 0xAF8000
	0x0362C2B8 LDR X0, [X0 + 0xA48]
	0x0362C2BC BL 0x1C16CF4
	0x0362C2C0 ADRP X0, 0xB0F000
	0x0362C2C4 LDR X0, [X0 + 0x5B8]
	0x0362C2C8 BL 0x1C16CF4
	0x0362C2CC ADRP X0, 0xB0F000
	0x0362C2D0 LDR X0, [X0 + 0x5C0]
	0x0362C2D4 BL 0x1C16CF4
	0x0362C2D8 ADRP X0, 0xB0F000
	0x0362C2DC LDR X0, [X0 + 0x5C8]
	0x0362C2E0 BL 0x1C16CF4
	0x0362C2E4 ADRP X0, 0xB0F000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xDB5000
	015 Move W27, [X31+128]
	016 Move X28, [X31+120]
	017 Move W8, [X19+1261]
	018 Move W29, [X31+112]
	019 Move W20, W6
	020 Move W21, W5
	021 Move X22, X4
	022 Move X23, X3
	023 Move W24, W2
	024 Move W25, W1
	025 Move X26, X0
	026 Move [X31+12], W7
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0xB10000
	032 Move X0, [X0+88]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+1261], W8
	036 Move X19, 0xB10000
	037 Move X19, [X19+88]
	038 Compare X26, 0
	039 JumpIfEqual {43}
	040 Move X0, X31
	041 Call RuntimeHelpers.get_OffsetToStringData
	042 Add X26, X26, W0
	043 Move X0, [X19]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move [X31+120], X28
	049 Move [X31+112], W29
	050 And W8, W27, 1
	051 Move X0, X26
	052 Move W1, W25
	053 Move W2, W24
	054 Move X3, X23
	055 Move X4, X22
	056 Move W5, W21
	057 Move W6, W20
	058 Move W7, [X31+12]
	059 Move X20, [X31+96]
	060 Move X19, [X31+104]
	061 Move X22, [X31+80]
	062 Move X21, [X31+88]
	063 Move X24, [X31+64]
	064 Move X23, [X31+72]
	065 Move X26, [X31+48]
	066 Move X25, [X31+56]
	067 Move X28, [X31+32]
	068 Move X27, [X31+40]
	069 Move X29, [X31+16]
	070 Move X30, [X31+24]
	071 Move [X31+128], W8
	072 Add X31, X31, 112

Method: System.Char[] UnescapeString(System.Char* pStr, System.Int32 start, System.Int32 end, System.Char[] dest, ref System.Int32 destPosition, System.Char rsvd1, System.Char rsvd2, System.Char rsvd3, System.UnescapeMode unescapeMode, System.UriParser syntax, System.Boolean isQuery)

Disassembly:
	0x0362C2E8 LDR X0, [X0 + 0x5D0]
	0x0362C2EC BL 0x1C16CF4
	0x0362C2F0 ADRP X0, 0xB0F000
	0x0362C2F4 LDR X0, [X0 + 0x48]
	0x0362C2F8 BL 0x1C16CF4
	0x0362C2FC ADRP X0, 0xB0F000
	0x0362C300 LDR X0, [X0 + 0x5D8]
	0x0362C304 BL 0x1C16CF4
	0x0362C308 ADRP X0, 0xB0F000
	0x0362C30C LDR X0, [X0 + 0x5E0]
	0x0362C310 BL 0x1C16CF4
	0x0362C314 ADRP X0, 0xB04000
	0x0362C318 LDR X0, [X0 + 0xDE8]
	0x0362C31C BL 0x1C16CF4
	0x0362C320 ADRP X0, 0xAD0000
	0x0362C324 LDR X0, [X0 + 0x3A8]
	0x0362C328 BL 0x1C16CF4
	0x0362C32C ADRP X0, 0xB03000
	0x0362C330 LDR X0, [X0 + 0x5E8]
	0x0362C334 BL 0x1C16CF4
	0x0362C338 ADRP X0, 0xB0F000
	0x0362C33C LDR X0, [X0 + 0x5E8]
	0x0362C340 BL 0x1C16CF4
	0x0362C344 ADRP X0, 0xB0F000
	0x0362C348 LDR X0, [X0 + 0x5F0]
	0x0362C34C BL 0x1C16CF4
	0x0362C350 ADRP X0, 0xB0F000
	0x0362C354 LDR X0, [X0 + 0x5F8]
	0x0362C358 BL 0x1C16CF4
	0x0362C35C ADRP X0, 0xB0F000
	0x0362C360 LDR X0, [X0 + 0x600]
	0x0362C364 BL 0x1C16CF4
	0x0362C368 ADRP X0, 0xB0F000
	0x0362C36C LDR X0, [X0 + 0x608]
	0x0362C370 BL 0x1C16CF4
	0x0362C374 ADRP X0, 0xB0F000
	0x0362C378 LDR X0, [X0 + 0x610]
	0x0362C37C BL 0x1C16CF4
	0x0362C380 ADRP X0, 0xB0F000
	0x0362C384 LDR X0, [X0 + 0x618]
	0x0362C388 BL 0x1C16CF4
	0x0362C38C ADRP X0, 0xB0F000
	0x0362C390 LDR X0, [X0 + 0x620]
	0x0362C394 BL 0x1C16CF4
	0x0362C398 ADRP X0, 0xB0F000
	0x0362C39C LDR X0, [X0 + 0x628]
	0x0362C3A0 BL 0x1C16CF4
	0x0362C3A4 ADRP X0, 0xB0F000
	0x0362C3A8 LDR X0, [X0 + 0x630]
	0x0362C3AC BL 0x1C16CF4
	0x0362C3B0 ADRP X0, 0xB05000
	0x0362C3B4 LDR X0, [X0 + 0x4C8]
	0x0362C3B8 BL 0x1C16CF4
	0x0362C3BC MOVZ W8, 0x1
	0x0362C3C0 STRB W8, [X20 + 0x4F7]
	0x0362C3C4 LDR X0, [X19]
	0x0362C3C8 ADRP X21, 0xB0F000
	0x0362C3CC ADRP X25, 0xB0F000
	0x0362C3D0 ADRP X20, 0xB0F000
	0x0362C3D4 ADRP X22, 0xB0F000
	0x0362C3D8 ADRP X23, 0xB03000
	0x0362C3DC LDR X21, [X21 + 0x48]
	0x0362C3E0 LDR W8, [X0 + 0xE0]
	0x0362C3E4 LDR X25, [X25 + 0x5D0]
	0x0362C3E8 LDR X20, [X20 + 0x5C0]
	0x0362C3EC LDR X22, [X22 + 0x5B8]
	0x0362C3F0 LDR X23, [X23 + 0x5E8]
	0x0362C3F4 CBNZ W8, 0x362C400
	0x0362C3F8 BL 0x1C16DFC
	0x0362C3FC LDR X0, [X19]
	0x0362C400 LDR X8, [X0 + 0xB8]
	0x0362C404 LDR X9, [X21]
	0x0362C408 MOVZ W24, 0xE71
	0x0362C40C MOVZ W19, 0xF5D
	0x0362C410 LDRB W8, [X8]
	0x0362C414 LDR X9, [X9 + 0xB8]
	0x0362C418 MOVK W24, 0x17E00000
	0x0362C41C MOVK W19, 0x15E00000
	0x0362C420 CMP W8, 0x0
	0x0362C424 MOVZ W8, 0x2
	0x0362C428 CINC W8, W8, NE
	0x0362C42C STR W8, [X9 + 0x90]
	0x0362C430 BL 0x362BC9C
	0x0362C434 LDR X8, [X21]
	0x0362C438 MOVZ W10, 0x10C
	0x0362C43C ORR W9, W19, 0x20
	0x0362C440 ORR W10, W24, W10, 0x0
	0x0362C444 LDR X8, [X8 + 0xB8]
	0x0362C448 ANDS W31, W0, 0x1
	0x0362C44C CSEL W9, W10, W9, NE
	0x0362C450 STR W9, [X8 + 0x94]
	0x0362C454 BL 0x362BC9C
	0x0362C458 LDR X8, [X21]
	0x0362C45C MOVZ W9, 0x2FD1
	0x0362C460 MOVK W9, 0x17F00000
	0x0362C464 ORR W10, W9, 0x20
	0x0362C468 LDR X8, [X8 + 0xB8]
	0x0362C46C ANDS W31, W0, 0x1
	0x0362C470 CSEL W9, W9, W10, NE
	0x0362C474 STR W9, [X8 + 0x98]
	0x0362C478 LDR X0, [X25]
	0x0362C47C BL 0x1C16F10
	0x0362C480 LDR X2, [X20]
	0x0362C484 MOVZ W1, 0x19
	0x0362C488 MOV X19, X0
	0x0362C48C BL 0x2AA481C
	0x0362C490 LDR X8, [X21]
	0x0362C494 LDR X8, [X8 + 0xB8]
	0x0362C498 STR X19, [X8]
	0x0362C49C LDR X0, [X25]
	0x0362C4A0 BL 0x1C16F10
	0x0362C4A4 LDR X2, [X20]
	0x0362C4A8 MOVZ W1, 0x19
	0x0362C4AC MOV X19, X0
	0x0362C4B0 BL 0x2AA481C
	0x0362C4B4 LDR X8, [X21]
	0x0362C4B8 LDR X8, [X8 + 0xB8]
	0x0362C4BC STR X19, [X8 + 0x8]
	0x0362C4C0 LDR X0, [X22]
	0x0362C4C4 LDR W20, [X8 + 0x94]
	0x0362C4C8 BL 0x1C16F10
	0x0362C4CC LDR X1, [X23]
	0x0362C4D0 MOVZ W2, 0x50
	0x0362C4D4 MOV W3, W20
	0x0362C4D8 MOV X19, X0
	0x0362C4DC BL 0x362CA0C
	0x0362C4E0 LDR X8, [X21]
	0x0362C4E4 LDR X8, [X8 + 0xB8]
	0x0362C4E8 STR X19, [X8 + 0x10]
	0x0362C4EC CBZ X19, 0x362CA08
	0x0362C4F0 LDR X0, [X8]
	0x0362C4F4 CBZ X0, 0x362CA08
	0x0362C4F8 ADRP X23, 0xB0F000
	0x0362C4FC LDR X23, [X23 + 0x5C8]
	0x0362C500 LDR X1, [X19 + 0x20]
	0x0362C504 MOV X2, X19
	0x0362C508 LDR X3, [X23]
	0x0362C50C BL 0x2AA5084
	0x0362C510 LDR X8, [X21]
	0x0362C514 LDR X8, [X8 + 0xB8]
	0x0362C518 LDR X8, [X8 + 0x10]
	0x0362C51C CBZ X8, 0x362CA08
	0x0362C520 LDR X0, [X22]
	0x0362C524 ADRP X19, 0xB05000
	0x0362C528 LDR W20, [X8 + 0x10]
	0x0362C52C LDR X19, [X19 + 0x4C8]
	0x0362C530 BL 0x1C16F10
	0x0362C534 LDR X1, [X19]
	0x0362C538 MOVZ W2, 0x1BB
	0x0362C53C MOV W3, W20
	0x0362C540 MOV X19, X0
	0x0362C544 BL 0x362CA0C
	0x0362C548 LDR X8, [X21]
	0x0362C54C LDR X8, [X8 + 0xB8]
	0x0362C550 STR X19, [X8 + 0x18]
	0x0362C554 CBZ X19, 0x362CA08
	0x0362C558 LDR X0, [X8]
	0x0362C55C CBZ X0, 0x362CA08
	0x0362C560 LDR X1, [X19 + 0x20]
	0x0362C564 LDR X3, [X23]
	0x0362C568 ADRP X25, 0xAD0000
	0x0362C56C LDR X25, [X25 + 0x3A8]
	0x0362C570 MOV X2, X19
	0x0362C574 BL 0x2AA5084
	0x0362C578 LDR X8, [X21]
	0x0362C57C LDR X0, [X22]
	0x0362C580 LDR X8, [X8 + 0xB8]
	0x0362C584 LDR W20, [X8 + 0x94]
	0x0362C588 BL 0x1C16F10
	0x0362C58C LDR X1, [X25]
	0x0362C590 MOVZ W2, 0x50
	0x0362C594 MOV W3, W20
	0x0362C598 MOV X19, X0
	0x0362C59C BL 0x362CA0C
	0x0362C5A0 LDR X8, [X21]
	0x0362C5A4 LDR X8, [X8 + 0xB8]
	0x0362C5A8 STR X19, [X8 + 0x20]
	0x0362C5AC CBZ X19, 0x362CA08
	0x0362C5B0 LDR X0, [X8]
	0x0362C5B4 CBZ X0, 0x362CA08
	0x0362C5B8 LDR X1, [X19 + 0x20]
	0x0362C5BC LDR X3, [X23]
	0x0362C5C0 ADRP X25, 0xB04000
	0x0362C5C4 LDR X25, [X25 + 0xDE8]
	0x0362C5C8 MOV X2, X19
	0x0362C5CC BL 0x2AA5084
	0x0362C5D0 LDR X8, [X21]
	0x0362C5D4 LDR X0, [X22]
	0x0362C5D8 LDR X8, [X8 + 0xB8]
	0x0362C5DC LDR W20, [X8 + 0x94]
	0x0362C5E0 BL 0x1C16F10
	0x0362C5E4 LDR X1, [X25]
	0x0362C5E8 MOVZ W2, 0x1BB
	0x0362C5EC MOV W3, W20
	0x0362C5F0 MOV X19, X0
	0x0362C5F4 BL 0x362CA0C
	0x0362C5F8 LDR X8, [X21]
	0x0362C5FC LDR X8, [X8 + 0xB8]
	0x0362C600 STR X19, [X8 + 0x28]
	0x0362C604 CBZ X19, 0x362CA08
	0x0362C608 LDR X0, [X8]
	0x0362C60C CBZ X0, 0x362CA08
	0x0362C610 LDR X1, [X19 + 0x20]
	0x0362C614 LDR X3, [X23]
	0x0362C618 ADRP X20, 0xB0F000
	0x0362C61C LDR X20, [X20 + 0x600]
	0x0362C620 MOV X2, X19
	0x0362C624 BL 0x2AA5084
	0x0362C628 LDR X0, [X22]
	0x0362C62C BL 0x1C16F10
	0x0362C630 LDR X1, [X20]
	0x0362C634 MOVZ W3, 0xF5D
	0x0362C638 MOVZ W2, 0x15
	0x0362C63C MOVK W3, 0x15E00000
	0x0362C640 MOV X19, X0
	0x0362C644 BL 0x362CA0C
	0x0362C648 LDR X8, [X21]
	0x0362C64C LDR X8, [X8 + 0xB8]
	0x0362C650 STR X19, [X8 + 0x30]
	0x0362C654 CBZ X19, 0x362CA08
	0x0362C658 LDR X0, [X8]
	0x0362C65C CBZ X0, 0x362CA08
	0x0362C660 LDR X1, [X19 + 0x20]
	0x0362C664 LDR X3, [X23]
	0x0362C668 ADRP X25, 0xB0F000
	0x0362C66C LDR X25, [X25 + 0x620]
	0x0362C670 MOV X2, X19
	0x0362C674 BL 0x2AA5084
	0x0362C678 LDR X8, [X21]
	0x0362C67C LDR X0, [X22]
	0x0362C680 LDR X8, [X8 + 0xB8]
	0x0362C684 LDR W20, [X8 + 0x98]
	0x0362C688 BL 0x1C16F10
	0x0362C68C LDR X1, [X25]
	0x0362C690 MOVN W2, 0x0
	0x0362C694 MOV W3, W20
	0x0362C698 MOV X19, X0
	0x0362C69C BL 0x362CA0C
	0x0362C6A0 LDR X8, [X21]
	0x0362C6A4 LDR X8, [X8 + 0xB8]
	0x0362C6A8 STR X19, [X8 + 0x38]
	0x0362C6AC CBZ X19, 0x362CA08
	0x0362C6B0 LDR X0, [X8]
	0x0362C6B4 CBZ X0, 0x362CA08
	0x0362C6B8 LDR X1, [X19 + 0x20]
	0x0362C6BC LDR X3, [X23]
	0x0362C6C0 ADRP X20, 0xB0F000
	0x0362C6C4 LDR X20, [X20 + 0x618]
	0x0362C6C8 MOVZ W25, 0xF5D
	0x0362C6CC MOV X2, X19
	0x0362C6D0 MOVK W25, 0x14200000
	0x0362C6D4 BL 0x2AA5084
	0x0362C6D8 LDR X0, [X22]
	0x0362C6DC BL 0x1C16F10
	0x0362C6E0 LDR X1, [X20]
	0x0362C6E4 MOVZ W3, 0xF5D
	0x0362C6E8 MOVZ W2, 0x46
	0x0362C6EC MOVK W3, 0x14200000
	0x0362C6F0 MOV X19, X0
	0x0362C6F4 BL 0x362CA0C
	0x0362C6F8 LDR X8, [X21]
	0x0362C6FC LDR X8, [X8 + 0xB8]
	0x0362C700 STR X19, [X8 + 0x40]
	0x0362C704 CBZ X19, 0x362CA08
	0x0362C708 LDR X0, [X8]
	0x0362C70C CBZ X0, 0x362CA08
	0x0362C710 LDR X1, [X19 + 0x20]
	0x0362C714 LDR X3, [X23]
	0x0362C718 ADRP X20, 0xB0F000
	0x0362C71C LDR X20, [X20 + 0x610]
	0x0362C720 MOV X2, X19
	0x0362C724 BL 0x2AA5084
	0x0362C728 LDR X0, [X22]
	0x0362C72C BL 0x1C16F10
	0x0362C730 LDR X1, [X20]
	0x0362C734 MOVZ W3, 0xF5D
	0x0362C738 MOVZ W2, 0x77
	0x0362C73C MOVK W3, 0x14200000
	0x0362C740 MOV X19, X0
	0x0362C744 BL 0x362CA0C
	0x0362C748 LDR X8, [X21]
	0x0362C74C LDR X8, [X8 + 0xB8]
	0x0362C750 STR X19, [X8 + 0x48]
	0x0362C754 CBZ X19, 0x362CA08
	0x0362C758 LDR X0, [X8]
	0x0362C75C CBZ X0, 0x362CA08
	0x0362C760 LDR X1, [X19 + 0x20]
	0x0362C764 LDR X3, [X23]
	0x0362C768 ADRP X20, 0xB0F000
	0x0362C76C LDR X20, [X20 + 0x5F0]
	0x0362C770 MOV X2, X19
	0x0362C774 BL 0x2AA5084
	0x0362C778 LDR X0, [X22]
	0x0362C77C BL 0x1C16F10
	0x0362C780 LDR X1, [X20]
	0x0362C784 MOVZ W3, 0x50
	0x0362C788 MOVN W2, 0x0
	0x0362C78C MOVK W3, 0x10000000
	0x0362C790 MOV X19, X0
	0x0362C794 BL 0x362CA0C
	0x0362C798 LDR X8, [X21]
	0x0362C79C LDR X8, [X8 + 0xB8]
	0x0362C7A0 STR X19, [X8 + 0x50]
	0x0362C7A4 CBZ X19, 0x362CA08
	0x0362C7A8 LDR X0, [X8]
	0x0362C7AC CBZ X0, 0x362CA08
	0x0362C7B0 LDR X1, [X19 + 0x20]
	0x0362C7B4 LDR X3, [X23]
	0x0362C7B8 ADRP X20, 0xB0F000
	0x0362C7BC LDR X20, [X20 + 0x630]
	0x0362C7C0 MOV X2, X19
	0x0362C7C4 BL 0x2AA5084
	0x0362C7C8 LDR X0, [X22]
	0x0362C7CC BL 0x1C16F10
	0x0362C7D0 LDR X1, [X20]
	0x0362C7D4 MOVZ W3, 0x4FFC
	0x0362C7D8 MOVZ W2, 0x19
	0x0362C7DC MOVK W3, 0x14000000
	0x0362C7E0 MOV X19, X0
	0x0362C7E4 BL 0x362CA0C
	0x0362C7E8 LDR X8, [X21]
	0x0362C7EC LDR X8, [X8 + 0xB8]
	0x0362C7F0 STR X19, [X8 + 0x58]
	0x0362C7F4 CBZ X19, 0x362CA08
	0x0362C7F8 LDR X0, [X8]
	0x0362C7FC CBZ X0, 0x362CA08
	0x0362C800 LDR X1, [X19 + 0x20]
	0x0362C804 LDR X3, [X23]
	0x0362C808 MOV X2, X19
	0x0362C80C BL 0x2AA5084
	0x0362C810 LDR X8, [X21]
	0x0362C814 LDR X8, [X8 + 0xB8]
	0x0362C818 LDR X8, [X8 + 0x50]
	0x0362C81C CBZ X8, 0x362CA08
	0x0362C820 LDR X0, [X22]
	0x0362C824 ADRP X19, 0xB0F000
	0x0362C828 LDR W20, [X8 + 0x10]
	0x0362C82C LDR X19, [X19 + 0x5F8]
	0x0362C830 BL 0x1C16F10
	0x0362C834 LDR X1, [X19]
	0x0362C838 MOVN W2, 0x0
	0x0362C83C MOV W3, W20
	0x0362C840 MOV X19, X0
	0x0362C844 BL 0x362CA0C
	0x0362C848 LDR X8, [X21]
	0x0362C84C LDR X8, [X8 + 0xB8]
	0x0362C850 STR X19, [X8 + 0x60]
	0x0362C854 CBZ X19, 0x362CA08
	0x0362C858 LDR X0, [X8]
	0x0362C85C CBZ X0, 0x362CA08
	0x0362C860 LDR X1, [X19 + 0x20]
	0x0362C864 LDR X3, [X23]
	0x0362C868 ADRP X20, 0xB0F000
	0x0362C86C LDR X20, [X20 + 0x5E8]
	0x0362C870 MOV X2, X19
	0x0362C874 BL 0x2AA5084
	0x0362C878 LDR X0, [X22]
	0x0362C87C BL 0x1C16F10
	0x0362C880 LDR X1, [X20]
	0x0362C884 MOVZ W3, 0xF5D
	0x0362C888 MOVZ W2, 0x17
	0x0362C88C MOVK W3, 0x14200000
	0x0362C890 MOV X19, X0
	0x0362C894 BL 0x362CA0C
	0x0362C898 LDR X8, [X21]
	0x0362C89C LDR X8, [X8 + 0xB8]
	0x0362C8A0 STR X19, [X8 + 0x68]
	0x0362C8A4 CBZ X19, 0x362CA08
	0x0362C8A8 LDR X0, [X8]
	0x0362C8AC CBZ X0, 0x362CA08
	0x0362C8B0 LDR X1, [X19 + 0x20]
	0x0362C8B4 LDR X3, [X23]
	0x0362C8B8 ADRP X20, 0xB0F000
	0x0362C8BC LDR X20, [X20 + 0x608]
	0x0362C8C0 MOV X2, X19
	0x0362C8C4 BL 0x2AA5084
	0x0362C8C8 LDR X0, [X22]
	0x0362C8CC BL 0x1C16F10
	0x0362C8D0 LDR X1, [X20]
	0x0362C8D4 ADD W3, W25, 0xA0
	0x0362C8D8 MOVZ W2, 0x185
	0x0362C8DC MOV X19, X0
	0x0362C8E0 BL 0x362CA0C
	0x0362C8E4 LDR X8, [X21]
	0x0362C8E8 LDR X8, [X8 + 0xB8]
	0x0362C8EC STR X19, [X8 + 0x70]
	0x0362C8F0 CBZ X19, 0x362CA08
	0x0362C8F4 LDR X0, [X8]
	0x0362C8F8 CBZ X0, 0x362CA08
	0x0362C8FC LDR X1, [X19 + 0x20]
	0x0362C900 LDR X3, [X23]
	0x0362C904 ADRP X20, 0xB0F000
	0x0362C908 LDR X20, [X20 + 0x628]
	0x0362C90C MOV X2, X19
	0x0362C910 BL 0x2AA5084
	0x0362C914 LDR X0, [X22]
	0x0362C918 BL 0x1C16F10
	0x0362C91C LDR X1, [X20]
	0x0362C920 ADD W3, W24, 0x8
	0x0362C924 MOVZ W2, 0x328
	0x0362C928 MOV X19, X0
	0x0362C92C BL 0x362CA0C
	0x0362C930 LDR X8, [X21]
	0x0362C934 LDR X8, [X8 + 0xB8]
	0x0362C938 STR X19, [X8 + 0x78]
	0x0362C93C CBZ X19, 0x362CA08
	0x0362C940 LDR X0, [X8]
	0x0362C944 CBZ X0, 0x362CA08
	0x0362C948 LDR X1, [X19 + 0x20]
	0x0362C94C LDR X3, [X23]
	0x0362C950 ADRP X20, 0xB0F000
	0x0362C954 LDR X20, [X20 + 0x5E0]
	0x0362C958 MOV X2, X19
	0x0362C95C BL 0x2AA5084
	0x0362C960 LDR X0, [X22]
	0x0362C964 BL 0x1C16F10
	0x0362C968 LDR X1, [X20]
	0x0362C96C MOVZ W3, 0xE71
	0x0362C970 MOVN W2, 0x0
	0x0362C974 MOVK W3, 0x17E00000
	0x0362C978 MOV X19, X0
	0x0362C97C BL 0x362CA0C
	0x0362C980 LDR X8, [X21]
	0x0362C984 LDR X8, [X8 + 0xB8]
	0x0362C988 STR X19, [X8 + 0x80]
	0x0362C98C CBZ X19, 0x362CA08
	0x0362C990 LDR X0, [X8]
	0x0362C994 CBZ X0, 0x362CA08
	0x0362C998 LDR X1, [X19 + 0x20]
	0x0362C99C LDR X3, [X23]
	0x0362C9A0 ADRP X20, 0xB0F000
	0x0362C9A4 LDR X20, [X20 + 0x5D8]
	0x0362C9A8 MOV X2, X19
	0x0362C9AC BL 0x2AA5084
	0x0362C9B0 LDR X0, [X22]
	0x0362C9B4 BL 0x1C16F10
	0x0362C9B8 LDR X1, [X20]
	0x0362C9BC MOVZ W3, 0x2FD1
	0x0362C9C0 MOVN W2, 0x0
	0x0362C9C4 MOVK W3, 0x17D00000
	0x0362C9C8 MOV X19, X0
	0x0362C9CC BL 0x362CA0C
	0x0362C9D0 LDR X8, [X21]
	0x0362C9D4 LDR X8, [X8 + 0xB8]
	0x0362C9D8 STR X19, [X8 + 0x88]
	0x0362C9DC CBZ X19, 0x362CA08
	0x0362C9E0 LDR X0, [X8]
	0x0362C9E4 CBZ X0, 0x362CA08
	0x0362C9E8 LDR X1, [X19 + 0x20]
	0x0362C9EC LDR X3, [X23]
	0x0362C9F0 MOV X2, X19
	0x0362C9F4 LDP X20, X19, [X31 + 0x30]
	0x0362C9F8 LDP X22, X21, [X31 + 0x20]
	0x0362C9FC LDP X24, X23, [X31 + 0x10]
	0x0362CA00 LDP X30, X25, [X31], #0x40
	0x0362CA04 B 0x2AA5084
	0x0362CA08 BL 0x1C16F20
	0x0362CA0C STR X30, [X31 - 0x40]!
	0x0362CA10 STP X24, X23, [X31 + 0x10]
	0x0362CA14 STP X22, X21, [X31 + 0x20]
	0x0362CA18 STP X20, X19, [X31 + 0x30]
	0x0362CA1C ADRP X23, 0xDB4000
	0x0362CA20 ADRP X24, 0xB0F000
	0x0362CA24 LDRB W8, [X23 + 0x4FB]
	0x0362CA28 LDR X24, [X24 + 0x48]
	0x0362CA2C MOV W22, W3
	0x0362CA30 MOV W19, W2
	0x0362CA34 MOV X21, X1
	0x0362CA38 MOV X20, X0
	0x0362CA3C TBNZ X8, 0x0, 0x362CA54
	0x0362CA40 ADRP X0, 0xB0F000
	0x0362CA44 LDR X0, [X0 + 0x48]
	0x0362CA48 BL 0x1C16CF4
	0x0362CA4C MOVZ W8, 0x1
	0x0362CA50 STRB W8, [X23 + 0x4FB]
	0x0362CA54 LDR X0, [X24]
	0x0362CA58 LDR W8, [X0 + 0xE0]
	0x0362CA5C CBNZ W8, 0x362CA64
	0x0362CA60 BL 0x1C16DFC
	0x0362CA64 ORR W1, W22, 0x60000
	0x0362CA68 MOV X0, X20
	0x0362CA6C BL 0x362CAF8
	0x0362CA70 STR X21, [X20 + 0x20]
	0x0362CA74 STR W19, [X20 + 0x1C]
	0x0362CA78 LDP X20, X19, [X31 + 0x30]
	0x0362CA7C LDP X22, X21, [X31 + 0x20]
	0x0362CA80 LDP X24, X23, [X31 + 0x10]
	0x0362CA84 LDR X30, [X31], #0x40
	0x0362CA88 RET
	0x0362CA8C LDR W0, [X0 + 0x10]
	0x0362CA90 RET
	0x0362CA94 STR X30, [X31 - 0x30]!
	0x0362CA98 STP X22, X21, [X31 + 0x10]
	0x0362CA9C STP X20, X19, [X31 + 0x20]
	0x0362CAA0 MOV W19, W2
	0x0362CAA4 MOV W20, W1
	0x0362CAA8 MOV X21, X0
	0x0362CAAC TBZ X1, 0x19, 0x362CAD0
	0x0362CAB0 LDRB W22, [X21 + 0x18]
	0x0362CAB4 BL 0x1C16D44
	0x0362CAB8 CBZ W22, 0x362CAD0
	0x0362CABC LDP W22, W21, [X21 + 0x10]
	0x0362CAC0 BL 0x1C16D44
	0x0362CAC4 AND W8, W22, 0xFDFFFFFF
	0x0362CAC8 ORR W8, W8, W21, 0x0
	0x0362CACC B 0x362CAD4
	0x0362CAD0 LDR W8, [X21 + 0x10]
	0x0362CAD4 AND W8, W8, W20, 0x0
	0x0362CAD8 CMP W8, W19
	0x0362CADC LDP X20, X19, [X31 + 0x20]
	0x0362CAE0 LDP X22, X21, [X31 + 0x10]
	0x0362CAE4 CSET W0, EQ
	0x0362CAE8 LDR X30, [X31], #0x30
	0x0362CAEC RET
	0x0362CAF0 MOV W2, W1
	0x0362CAF4 B 0x362CA94
	0x0362CAF8 STR X30, [X31 - 0x30]!
	0x0362CAFC STP X22, X21, [X31 + 0x10]
	0x0362CB00 STP X20, X19, [X31 + 0x20]
	0x0362CB04 ADRP X22, 0xDB4000
	0x0362CB08 ADRP X21, 0xAC9000
	0x0362CB0C LDRB W8, [X22 + 0x4F8]
	0x0362CB10 LDR X21, [X21 + 0x278]
	0x0362CB14 MOV W20, W1
	0x0362CB18 MOV X19, X0
	0x0362CB1C TBNZ X8, 0x0, 0x362CB34
	0x0362CB20 ADRP X0, 0xAC9000
	0x0362CB24 LDR X0, [X0 + 0x278]
	0x0362CB28 BL 0x1C16CF4
	0x0362CB2C MOVZ W8, 0x1
	0x0362CB30 STRB W8, [X22 + 0x4F8]
	0x0362CB34 MOV X0, X19
	0x0362CB38 MOV X1, X31
	0x0362CB3C BL 0x33BDD8C
	0x0362CB40 STR W20, [X19 + 0x10]
	0x0362CB44 LDR X8, [X21]
	0x0362CB48 LDP X22, X21, [X31 + 0x10]
	0x0362CB4C LDR X8, [X8 + 0xB8]
	0x0362CB50 LDR X8, [X8]
	0x0362CB54 STR X8, [X19 + 0x20]
	0x0362CB58 LDP X20, X19, [X31 + 0x20]
	0x0362CB5C LDR X30, [X31], #0x30
	0x0362CB60 RET
	0x0362CB64 SUB X31, X31, 0x40
	0x0362CB68 STR X30, [X31 + 0x10]
	0x0362CB6C STP X22, X21, [X31 + 0x20]
	0x0362CB70 STP X20, X19, [X31 + 0x30]
	0x0362CB74 ADRP X20, 0xDB4000
	0x0362CB78 ADRP X22, 0xB0F000
	0x0362CB7C LDRB W8, [X20 + 0x4F9]
	0x0362CB80 LDR X22, [X22 + 0x48]
	0x0362CB84 MOV X19, X0
	0x0362CB88 TBNZ X8, 0x0, 0x362CBE8
	0x0362CB8C ADRP X0, 0xB0F000
	0x0362CB90 LDR X0, [X0 + 0x5B8]
	0x0362CB94 BL 0x1C16CF4
	0x0362CB98 ADRP X0, 0xB0F000
	0x0362CB9C LDR X0, [X0 + 0x458]
	0x0362CBA0 BL 0x1C16CF4
	0x0362CBA4 ADRP X0, 0xB0F000
	0x0362CBA8 LDR X0, [X0 + 0x5C0]
	0x0362CBAC BL 0x1C16CF4
	0x0362CBB0 ADRP X0, 0xB0F000
	0x0362CBB4 LDR X0, [X0 + 0x638]
	0x0362CBB8 BL 0x1C16CF4
	0x0362CBBC ADRP X0, 0xB0F000
	0x0362CBC0 LDR X0, [X0 + 0x5C8]
	0x0362CBC4 BL 0x1C16CF4
	0x0362CBC8 ADRP X0, 0xB0F000
	0x0362CBCC LDR X0, [X0 + 0x5D0]
	0x0362CBD0 BL 0x1C16CF4
	0x0362CBD4 ADRP X0, 0xB0F000
	0x0362CBD8 LDR X0, [X0 + 0x48]
	0x0362CBDC BL 0x1C16CF4
	0x0362CBE0 MOVZ W8, 0x1
	0x0362CBE4 STRB W8, [X20 + 0x4F9]
	0x0362CBE8 LDR X0, [X22]
	0x0362CBEC STRB W31, [X31 + 0xC]
	0x0362CBF0 STR X31, [X31 + 0x18]
	0x0362CBF4 LDR W8, [X0 + 0xE0]
	0x0362CBF8 CBNZ W8, 0x362CC04
	0x0362CBFC BL 0x1C16DFC
	0x0362CC00 LDR X0, [X22]
	0x0362CC04 LDR X8, [X0 + 0xB8]
	0x0362CC08 LDR X0, [X8]
	0x0362CC0C CBZ X0, 0x362CDB0
	0x0362CC10 ADRP X20, 0xB0F000
	0x0362CC14 LDR X20, [X20 + 0x458]
	0x0362CC18 ADD X2, X31, 0x18
	0x0362CC1C MOV X1, X19
	0x0362CC20 LDR X3, [X20]
	0x0362CC24 BL 0x2AA6B2C
	0x0362CC28 LDR X21, [X31 + 0x18]
	0x0362CC2C CBNZ X21, 0x362CD98
	0x0362CC30 LDR X0, [X22]
	0x0362CC34 LDR W8, [X0 + 0xE0]
	0x0362CC38 CBNZ W8, 0x362CC44
	0x0362CC3C BL 0x1C16DFC
	0x0362CC40 LDR X0, [X22]
	0x0362CC44 LDR X8, [X0 + 0xB8]
	0x0362CC48 LDR X0, [X8 + 0x8]
	0x0362CC4C CBZ X0, 0x362CDB0
	0x0362CC50 LDR X3, [X20]
	0x0362CC54 ADD X2, X31, 0x18
	0x0362CC58 MOV X1, X19
	0x0362CC5C BL 0x2AA6B2C
	0x0362CC60 LDR X21, [X31 + 0x18]
	0x0362CC64 CBNZ X21, 0x362CD98
	0x0362CC68 LDR X0, [X22]
	0x0362CC6C LDR W8, [X0 + 0xE0]
	0x0362CC70 CBNZ W8, 0x362CC7C
	0x0362CC74 BL 0x1C16DFC
	0x0362CC78 LDR X0, [X22]
	0x0362CC7C LDR X8, [X0 + 0xB8]
	0x0362CC80 LDR X20, [X8]
	0x0362CC84 STRB W31, [X31 + 0xC]
	0x0362CC88 ADD X1, X31, 0xC
	0x0362CC8C MOV X0, X20
	0x0362CC90 MOV X2, X31
	0x0362CC94 BL 0x33DE64C
	0x0362CC98 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move [X31+92], W7
	015 Move [X31+72], W6
	016 Move [X31+76], W5
	017 Move [X31+80], X4
	018 Move X21, 0xDB5000
	019 Move X20, 0xACA000
	020 Move W8, [X21+1262]
	021 Move X19, [X31+200]
	022 Move X20, [X20+2600]
	023 Move X22, X3
	024 Move W23, W2
	025 Move W28, W1
	026 Move X24, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {57}
	031 Move X0, 0xAC8000
	032 Move X0, [X0+1560]
	033 Call 0x1C17CF4
	034 Move X0, 0xAD1000
	035 Move X0, [X0+2264]
	036 Call 0x1C17CF4
	037 Move X0, 0xAF7000
	038 Move X0, [X0+1608]
	039 Call 0x1C17CF4
	040 Move X0, 0xAF7000
	041 Move X0, [X0+872]
	042 Call 0x1C17CF4
	043 Move X0, 0xAF7000
	044 Move X0, [X0+1016]
	045 Call 0x1C17CF4
	046 Move X0, 0xB10000
	047 Move X0, [X0+88]
	048 Call 0x1C17CF4
	049 Move X0, 0xACA000
	050 Move X0, [X0+2600]
	051 Call 0x1C17CF4
	052 Move X0, 0xAC8000
	053 Move X0, [X0+2440]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+1262], W8
	057 Move X0, [X20]
	058 Move W26, [X31+192]
	059 Move W20, [X31+208]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X31
	066 Call Uri.IriParsingStatic, X0
	067 And W9, W26, 3
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, 10
	070 Move [X31+44], W9
	071 Move [X31+48], W31
	072 NotImplemented "Instruction CSET not yet implemented."
	073 NotImplemented "Instruction BICS not yet implemented."
	074 And W8, W9, W0
	075 Move [X31+52], W8
	076 NotImplemented "Instruction CSET not yet implemented."
	077 And W31, W26, 1
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move W19, W31
	080 Xor W10, W20, 1
	081 Or W27, W8, W9
	082 Move W25, W28
	083 Move X21, X22
	084 Move [X31+56], X31
	085 Move [X31+36], W20
	086 Move [X31+40], W10
	087 Move [X31+24], X22
	088 Move [X31+32], W28
	089 Compare X21, 0
	090 JumpIfEqual {95}
	091 Move W8, [X21+24]
	092 Add X9, X21, 32
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSEL not yet implemented."
	095 Move X29, X31
	096 Move W8, [X31+44]
	097 Move [X31+64], X21
	098 Compare W8, 0
	099 JumpIfEqual {503}
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move TEMP, X26
	104 And TEMP, TEMP, 2
	105 Compare TEMP, 2
	106 JumpIfNotEqual {311}
	107 Add W21, W25, 2
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, 0xB10000
	110 Move X8, [X8+88]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move X0, [X8]
	113 Add W8, W25, 1
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move W0, W20
	120 Move W1, W22
	121 Call UriHelper.EscapedAscii, X0, X1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W20, W0
	124 NotImplemented "Instruction ORN not yet implemented."
	125 And W31, W8, 0xFFFF
	126 And W8, W20, 0xFFFF
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W20, 37
	129 Move TEMP, X27
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {161}
	133 Move W8, [X31+92]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, 1
	136 Move W9, [X31+76]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W9, [X31+72]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move TEMP, X26
	141 And TEMP, TEMP, 4
	142 Compare TEMP, 4
	143 JumpIfEqual {161}
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move W8, 1
	146 Subtract W9, W20, 127
	147 And W9, W9, 0xFFFF
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W21, W25
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W20, 37
	153 And W31, W8, 0xFFFF
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W20, 0xFFFF
	156 Move W20, 0xFFFF
	157 Move TEMP, X26
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {473}
	161 Move W21, W25
	162 Add W25, W21, 1
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move W9, [X31+92]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move W9, [X31+76]
	167 And W8, W20, 0xFFFF
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W9, [X31+72]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move TEMP, X26
	172 And TEMP, TEMP, 4
	173 Compare TEMP, 4
	174 JumpIfEqual {211}
	175 Move X8, 0xB10000
	176 Move X8, [X8+88]
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 And W8, W20, 0xFFFF
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract W8, W20, 127
	185 And W8, W8, 0xFFFF
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract W8, W20, 59
	188 Move W9, 0xFFFD
	189 And W8, W8, 0xFFFF
	190 And W9, W20, W9
	191 Subtract W10, W20, 35
	192 NotImplemented "Instruction CMP not yet implemented."
	193 And W10, W10, 0xFFFF
	194 NotImplemented "Instruction CSET not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction CSET not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 And W8, W8, W9
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {162}
	203 And W8, W20, 0xFFFF
	204 Subtract W8, W8, 43
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W9, 1
	207 NotImplemented "Instruction LSLV not yet implemented."
	208 Move X9, 19
	209 NotImplemented "Instruction MOVK not yet implemented."
	210 And X31, X8, X9
	211 Move W8, [X31+52]
	212 Compare W8, 0
	213 JumpIfEqual {276}
	214 And W8, W20, 0xFFFF
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract W8, W20, 160
	217 Move W8, W8
	218 ShiftRight W8, 5
	219 And W8, W8, 0x7FFF
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add W8, W20, 1792
	222 And W8, W8, 0xFFFF
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Add W8, W20, 528
	225 Move W9, [X31+40]
	226 And W8, W8, 0xFFFF
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction CSET not yet implemented."
	229 Or W8, W8, W9
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 Invalid "Jump target not found in method."
	234 Add W8, W20, 0x2000
	235 Move W8, W8
	236 ShiftRight W8, 8
	237 And W8, W8, 0x7FFF
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X8, 0xB10000
	240 Move X8, [X8+88]
	241 Move X0, [X8]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 And W8, W20, 0xFFFF
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract W8, W20, 127
	249 And W8, W8, 0xFFFF
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Subtract W8, W20, 59
	252 Move W9, 0xFFFD
	253 And W8, W8, 0xFFFF
	254 And W9, W20, W9
	255 Subtract W10, W20, 35
	256 NotImplemented "Instruction CMP not yet implemented."
	257 And W10, W10, 0xFFFF
	258 NotImplemented "Instruction CSET not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 NotImplemented "Instruction CSET not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 And W8, W8, W9
	263 Move TEMP, X8
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfEqual {162}
	267 And W8, W20, 0xFFFF
	268 Subtract W8, W8, 43
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move W9, 1
	271 NotImplemented "Instruction LSLV not yet implemented."
	272 Move X9, 19
	273 NotImplemented "Instruction MOVK not yet implemented."
	274 And X31, X8, X9
	275 Move W20, W31
	276 Move W8, W19
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X9, [X31+80]
	279 Move X11, W25
	280 Add X10, X24, W28
	281 Subtract X11, X11, W28
	282 Move W9, [X9]
	283 NotImplemented "Instruction LDRH not yet implemented."
	284 Subtract X11, X11, 1
	285 NotImplemented "Instruction STRH not yet implemented."
	286 Add W9, W9, 1
	287 Move X10, [X31+80]
	288 Move W28, W25
	289 Move [X10], W9
	290 Move X21, [X31+64]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move TEMP, X8
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfEqual {313}
	296 And W8, W20, 0xFFFF
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X10, [X31+80]
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Add W9, W8, 1
	301 Move [X10], W9
	302 Compare X21, 0
	303 JumpIfEqual {554}
	304 Move W9, [X21+24]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move W19, W31
	307 Add X8, X21, X8
	308 Add W25, W25, 3
	309 NotImplemented "Instruction STRH not yet implemented."
	310 Move W28, W25
	311 Move W8, 1
	312 Move W20, 37
	313 Move W8, [X31+48]
	314 And W31, W8, 255
	315 Move X8, 0xB10000
	316 Move X8, [X8+88]
	317 NotImplemented "Instruction LDRH not yet implemented."
	318 Move X0, [X8]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X2, [X31+80]
	324 Move W0, W20
	325 Move X1, X21
	326 Call UriHelper.EscapeAsciiChar, X0, X1, X2
	327 Move W8, [X31+48]
	328 Move W19, W31
	329 Add W25, W25, 1
	330 Subtract W8, W8, 1
	331 Move [X31+48], W8
	332 Move X0, [X31+56]
	333 Move W28, 0xFF7E
	334 Compare X0, 0
	335 JumpIfNotEqual {343}
	336 Move X8, 0xAC8000
	337 Move X8, [X8+1560]
	338 Subtract W1, W23, W25
	339 Move X0, [X8]
	340 Call 0x1C17D6C
	341 Compare X0, 0
	342 JumpIfEqual {581}
	343 Move W8, [X0+24]
	344 Compare W8, 0
	345 JumpIfEqual {580}
	346 Add W25, W25, 3
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move [X31+56], X0
	349 Move [X0+32], W20
	350 Move W19, 1
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Add W8, W25, 2
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X9, 0xB10000
	356 Move X9, [X9+88]
	357 NotImplemented "Instruction LDRH not yet implemented."
	358 Move X0, [X9]
	359 Add W9, W25, 1
	360 NotImplemented "Instruction LDRH not yet implemented."
	361 Move W9, [X0+224]
	362 Compare W9, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move W0, W20
	366 Move W1, W22
	367 Call UriHelper.EscapedAscii, X0, X1
	368 Subtract W8, W0, 128
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X9, [X31+56]
	371 Move W8, [X9+24]
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Add W20, W19, 1
	374 Add W25, W25, 3
	375 Add X8, X9, W19
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move W19, W20
	378 Move [X8+32], W0
	379 Move W20, 1
	380 Move W20, W19
	381 Move X0, X31
	382 Call Encoding.get_UTF8
	383 Compare X0, 0
	384 JumpIfEqual {579}
	385 Move X8, [X0]
	386 Move X9, [X8+488]
	387 Move X1, [X8+496]
	388 NotImplemented "Instruction BLR not yet implemented."
	389 Move X22, X0
	390 Compare X0, 0
	391 JumpIfEqual {403}
	392 Move X9, 0xAF7000
	393 Move X8, [X22]
	394 Move X9, [X9+1016]
	395 Move W10, [X8+304]
	396 Move X1, [X9]
	397 Move W9, [X1+304]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X8, [X8+200]
	400 Add X8, X8, X9
	401 NotImplemented "Instruction LDUR not yet implemented."
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X8, 0xAF7000
	404 Move X8, [X8+872]
	405 Move X0, [X8]
	406 Call 0x1C17F10
	407 Move X8, 0xAC8000
	408 Move X8, [X8+2440]
	409 Move X28, X0
	410 Move X1, [X8]
	411 Move X2, X31
	412 Call EncoderReplacementFallback..ctor, X0, X1
	413 Compare X22, 0
	414 JumpIfEqual {578}
	415 Move X0, X22
	416 Move X1, X28
	417 Move X2, X31
	418 Call Encoding.set_EncoderFallback, X0, X1
	419 Move X8, 0xAF7000
	420 Move X8, [X8+1608]
	421 Move X0, [X8]
	422 Call 0x1C17F10
	423 Move X8, 0xAC8000
	424 Move X8, [X8+2440]
	425 Move X28, X0
	426 Move X1, [X8]
	427 Move X2, X31
	428 Call DecoderReplacementFallback..ctor, X0, X1
	429 Move X0, X22
	430 Move X1, X28
	431 Move X2, X31
	432 Call Encoding.set_DecoderFallback, X0, X1
	433 Move X8, 0xAD1000
	434 Move X8, [X8+2264]
	435 Move X19, [X31+56]
	436 Move X0, [X8]
	437 Move W1, [X19+24]
	438 Call 0x1C17D6C
	439 Move X8, [X22]
	440 Move X28, X0
	441 Move X9, [X8+744]
	442 Move X6, [X8+752]
	443 Move X0, X22
	444 Move X1, X19
	445 Move W2, W31
	446 Move W3, W20
	447 Move X4, X28
	448 Move W5, W31
	449 NotImplemented "Instruction BLR not yet implemented."
	450 Move X8, 0xB10000
	451 Move X8, [X8+88]
	452 Move W22, W0
	453 Move X0, [X8]
	454 Move W8, [X0+224]
	455 Compare W8, 0
	456 JumpIfNotEqual {458}
	457 Call 0x1C17DFC
	458 Move W8, [X31+36]
	459 Move X2, [X31+80]
	460 Move X5, [X31+56]
	461 Move X0, X29
	462 And W7, W8, 1
	463 Move W8, [X31+52]
	464 Move X1, X21
	465 Move X3, X28
	466 Move W4, W22
	467 Move W6, W20
	468 Move [X31], W8
	469 Call UriHelper.MatchUTF8Sequence, X0, X1, X2, X3, X4, X5, X6, X7, X8
	470 Move W19, W31
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move W28, W25
	473 Move W8, 1
	474 Compare X21, 0
	475 JumpIfEqual {582}
	476 Move X9, 0xAD1000
	477 Move W8, [X21+24]
	478 Move X9, [X9+2264]
	479 Add W1, W8, 90
	480 Move X0, [X9]
	481 Call 0x1C17D6C
	482 Compare X0, 0
	483 JumpIfEqual {488}
	484 Move W8, [X0+24]
	485 Compare W8, 0
	486 JumpIfEqual {488}
	487 Add X8, X0, 32
	488 Move X8, X31
	489 Move X9, [X31+80]
	490 Move W10, 30
	491 Move W19, 1
	492 Move X21, X0
	493 Move W9, [X9]
	494 Move [X31+48], W10
	495 NotImplemented "Instruction CMP not yet implemented."
	496 NotImplemented "Instruction LDRH not yet implemented."
	497 Subtract X9, X9, 1
	498 Move W19, 1
	499 NotImplemented "Instruction STRH not yet implemented."
	500 Move W8, 30
	501 Move [X31+48], W8
	502 Move X21, X0
	503 Move W11, [X31+32]
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X8, [X31+80]
	506 Move X21, [X31+24]
	507 Move X10, W23
	508 Add X9, X24, W11
	509 Move W8, [X8]
	510 Subtract X10, X10, W11
	511 NotImplemented "Instruction LDRH not yet implemented."
	512 Subtract X10, X10, 1
	513 NotImplemented "Instruction STRH not yet implemented."
	514 Add W8, W8, 1
	515 Move X9, [X31+80]
	516 Move [X9], W8
	517 Move X21, [X31+24]
	518 Move X0, X21
	519 Move X20, [X31+176]
	520 Move X19, [X31+184]
	521 Move X22, [X31+160]
	522 Move X21, [X31+168]
	523 Move X24, [X31+144]
	524 Move X23, [X31+152]
	525 Move X26, [X31+128]
	526 Move X25, [X31+136]
	527 Move X28, [X31+112]
	528 Move X27, [X31+120]
	529 Move X29, [X31+96]
	530 Move X30, [X31+104]
	531 Add X31, X31, 192
	532 Return X0
	533 Move X0, 0xB10000
	534 Move X0, [X0+1384]
	535 Call 0x1C17D08
	536 Move X1, X31
	537 Call SR.GetString, X0
	538 Move X20, X0
	539 Move X0, 0xB10000
	540 Move X0, [X0+216]
	541 Call 0x1C17D08
	542 Call 0x1C17F10
	543 Move X21, X0
	544 Move X1, X20
	545 Move X2, X31
	546 Call FormatException..ctor, X0, X1
	547 Move X0, 0xB10000
	548 Move X0, [X0+1432]
	549 Call 0x1C17D08
	550 Move X1, X0
	551 Move X0, X21
	552 Call 0x1C17DEC
	553 Call 0x1C17F28
	554 Call 0x1C17F20
	555 Move X0, 0xB10000
	556 Move X0, [X0+1384]
	557 Call 0x1C17D08
	558 Move X1, X31
	559 Call SR.GetString, X0
	560 Move X20, X0
	561 Move X0, 0xB10000
	562 Move X0, [X0+216]
	563 Call 0x1C17D08
	564 Call 0x1C17F10
	565 Move X21, X0
	566 Move X1, X20
	567 Move X2, X31
	568 Call FormatException..ctor, X0, X1
	569 Move X0, 0xB10000
	570 Move X0, [X0+1432]
	571 Call 0x1C17D08
	572 Move X1, X0
	573 Move X0, X21
	574 Call 0x1C17DEC
	575 Call 0x1C17F28
	576 Move X0, X22
	577 Call 0x1C181E0
	578 Call 0x1C17F20
	579 Call 0x1C17F20
	580 Call 0x1C17F28
	581 Call 0x1C17F20
	582 Call 0x1C17F20
	583 Move X21, X31
	584 Move X21, [X31+64]
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Call 0x3EB2AD0
	587 Move X20, [X0]
	588 Call 0x3EB2AE0
	589 Compare X20, 0
	590 JumpIfEqual {518}
	591 Move X0, X20
	592 Call 0x1C17F18
	593 Compare X20, 0
	594 JumpIfNotEqual {596}
	595 Call 0x1D2D690
	596 Move X0, X20
	597 Call 0x1C17F18
	598 Call 0x1991590

Method: System.Void MatchUTF8Sequence(System.Char* pDest, System.Char[] dest, ref System.Int32 destOffset, System.Char[] unescapedChars, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteCount, System.Boolean isQuery, System.Boolean iriParsing)

Disassembly:
	0x0362B1D8 LDR X8, [X8 + 0x590]
	0x0362B1DC LDR X0, [X8]
	0x0362B1E0 CBZ X0, 0x362B204
	0x0362B1E4 MOV W1, W19
	0x0362B1E8 MOV X2, X31
	0x0362B1EC BL 0x322BD98
	0x0362B1F0 ORN W8, W31, W0, 0x0
	0x0362B1F4 UBFM W0, W8, 0x1F, 0x1F
	0x0362B1F8 LDP X20, X19, [X31 + 0x10]
	0x0362B1FC LDP X30, X21, [X31], #0x20
	0x0362B200 RET
	0x0362B204 BL 0x1C16F20
	0x0362B208 SUB X31, X31, 0x70
	0x0362B20C STP X29, X30, [X31 + 0x10]
	0x0362B210 STP X28, X27, [X31 + 0x20]
	0x0362B214 STP X26, X25, [X31 + 0x30]
	0x0362B218 STP X24, X23, [X31 + 0x40]
	0x0362B21C STP X22, X21, [X31 + 0x50]
	0x0362B220 STP X20, X19, [X31 + 0x60]
	0x0362B224 ADRP X19, 0xDB5000
	0x0362B228 LDRB W27, [X31 + 0x80]
	0x0362B22C LDR X28, [X31 + 0x78]
	0x0362B230 LDRB W8, [X19 + 0x4ED]
	0x0362B234 LDR W29, [X31 + 0x70]
	0x0362B238 MOV W20, W6
	0x0362B23C MOV W21, W5
	0x0362B240 MOV X22, X4
	0x0362B244 MOV X23, X3
	0x0362B248 MOV W24, W2
	0x0362B24C MOV W25, W1
	0x0362B250 MOV X26, X0
	0x0362B254 STR W7, [X31 + 0xC]
	0x0362B258 TBNZ X8, 0x0, 0x362B270
	0x0362B25C ADRP X0, 0xB10000
	0x0362B260 LDR X0, [X0 + 0x58]
	0x0362B264 BL 0x1C16CF4
	0x0362B268 MOVZ W8, 0x1
	0x0362B26C STRB W8, [X19 + 0x4ED]
	0x0362B270 ADRP X19, 0xB10000
	0x0362B274 LDR X19, [X19 + 0x58]
	0x0362B278 CBZ X26, 0x362B288
	0x0362B27C MOV X0, X31
	0x0362B280 BL 0x32C1424
	0x0362B284 ADD X26, X26, W0, SXTW
	0x0362B288 LDR X0, [X19]
	0x0362B28C LDR W8, [X0 + 0xE0]
	0x0362B290 CBNZ W8, 0x362B298
	0x0362B294 BL 0x1C16DFC
	0x0362B298 STR X28, [X31 + 0x78]
	0x0362B29C STR W29, [X31 + 0x70]
	0x0362B2A0 AND W8, W27, 0x1
	0x0362B2A4 MOV X0, X26
	0x0362B2A8 MOV W1, W25
	0x0362B2AC MOV W2, W24
	0x0362B2B0 MOV X3, X23
	0x0362B2B4 MOV X4, X22
	0x0362B2B8 MOV W5, W21
	0x0362B2BC MOV W6, W20
	0x0362B2C0 LDR W7, [X31 + 0xC]
	0x0362B2C4 LDP X20, X19, [X31 + 0x60]
	0x0362B2C8 LDP X22, X21, [X31 + 0x50]
	0x0362B2CC LDP X24, X23, [X31 + 0x40]
	0x0362B2D0 LDP X26, X25, [X31 + 0x30]
	0x0362B2D4 LDP X28, X27, [X31 + 0x20]
	0x0362B2D8 LDP X29, X30, [X31 + 0x10]
	0x0362B2DC STRB W8, [X31 + 0x80]
	0x0362B2E0 ADD X31, X31, 0x70
	0x0362B2E4 B 0x362B2E8
	0x0362B2E8 SUB X31, X31, 0xC0
	0x0362B2EC STP X29, X30, [X31 + 0x60]
	0x0362B2F0 STP X28, X27, [X31 + 0x70]
	0x0362B2F4 STP X26, X25, [X31 + 0x80]
	0x0362B2F8 STP X24, X23, [X31 + 0x90]
	0x0362B2FC STP X22, X21, [X31 + 0xA0]
	0x0362B300 STP X20, X19, [X31 + 0xB0]
	0x0362B304 STR W7, [X31 + 0x5C]
	0x0362B308 STP W6, W5, [X31 + 0x48]
	0x0362B30C STR X4, [X31 + 0x50]
	0x0362B310 ADRP X21, 0xDB5000
	0x0362B314 ADRP X20, 0xACA000
	0x0362B318 LDRB W8, [X21 + 0x4EE]
	0x0362B31C LDR X19, [X31 + 0xC8]
	0x0362B320 LDR X20, [X20 + 0xA28]
	0x0362B324 MOV X22, X3
	0x0362B328 MOV W23, W2
	0x0362B32C MOV W28, W1
	0x0362B330 MOV X24, X0
	0x0362B334 TBNZ X8, 0x0, 0x362B3A0
	0x0362B338 ADRP X0, 0xAC8000
	0x0362B33C LDR X0, [X0 + 0x618]
	0x0362B340 BL 0x1C16CF4
	0x0362B344 ADRP X0, 0xAD1000
	0x0362B348 LDR X0, [X0 + 0x8D8]
	0x0362B34C BL 0x1C16CF4
	0x0362B350 ADRP X0, 0xAF7000
	0x0362B354 LDR X0, [X0 + 0x648]
	0x0362B358 BL 0x1C16CF4
	0x0362B35C ADRP X0, 0xAF7000
	0x0362B360 LDR X0, [X0 + 0x368]
	0x0362B364 BL 0x1C16CF4
	0x0362B368 ADRP X0, 0xAF7000
	0x0362B36C LDR X0, [X0 + 0x3F8]
	0x0362B370 BL 0x1C16CF4
	0x0362B374 ADRP X0, 0xB10000
	0x0362B378 LDR X0, [X0 + 0x58]
	0x0362B37C BL 0x1C16CF4
	0x0362B380 ADRP X0, 0xACA000
	0x0362B384 LDR X0, [X0 + 0xA28]
	0x0362B388 BL 0x1C16CF4
	0x0362B38C ADRP X0, 0xAC8000
	0x0362B390 LDR X0, [X0 + 0x988]
	0x0362B394 BL 0x1C16CF4
	0x0362B398 MOVZ W8, 0x1
	0x0362B39C STRB W8, [X21 + 0x4EE]
	0x0362B3A0 LDR X0, [X20]
	0x0362B3A4 LDR W26, [X31 + 0xC0]
	0x0362B3A8 LDRB W20, [X31 + 0xD0]
	0x0362B3AC LDR W8, [X0 + 0xE0]
	0x0362B3B0 CBNZ W8, 0x362B3B8
	0x0362B3B4 BL 0x1C16DFC
	0x0362B3B8 MOV X0, X19
	0x0362B3BC MOV X1, X31
	0x0362B3C0 BL 0x3617DDC
	0x0362B3C4 AND W9, W26, 0x3
	0x0362B3C8 CMP W9, 0x3
	0x0362B3CC MOVZ W8, 0xA
	0x0362B3D0 STP W9, W31, [X31 + 0x2C]
	0x0362B3D4 CSET W9, EQ
	0x0362B3D8 BICS W31, W8, W26, 0x0
	0x0362B3DC AND W8, W9, W0, 0x0
	0x0362B3E0 STR W8, [X31 + 0x34]
	0x0362B3E4 CSET W8, EQ
	0x0362B3E8 ANDS W31, W26, 0x1
	0x0362B3EC CSET W9, EQ
	0x0362B3F0 MOV W19, W31
	0x0362B3F4 EOR W10, W20, 0x1
	0x0362B3F8 ORR W27, W8, W9, 0x0
	0x0362B3FC MOV W25, W28
	0x0362B400 MOV X21, X22
	0x0362B404 STR X31, [X31 + 0x38]
	0x0362B408 STP W20, W10, [X31 + 0x24]
	0x0362B40C STR X22, [X31 + 0x18]
	0x0362B410 STR W28, [X31 + 0x20]
	0x0362B414 CBZ X21, 0x362B42C
	0x0362B418 LDR W8, [X21 + 0x18]
	0x0362B41C ADD X9, X21, 0x20
	0x0362B420 CMP W8, 0x0
	0x0362B424 CSEL X29, X31, X9, EQ
	0x0362B428 B 0x362B430
	0x0362B42C MOV X29, X31
	0x0362B430 LDR W8, [X31 + 0x2C]
	0x0362B434 STR X21, [X31 + 0x40]
	0x0362B438 CBZ W8, 0x362BACC
	0x0362B43C CMP W25, W23
	0x0362B440 B.GE 0x362B718
	0x0362B444 LDRH W20, [X24, W25, SXTW]
	0x0362B448 CMP W20, 0x25
	0x0362B44C B.NE 0x362B4BC
	0x0362B450 TBZ X26, 0x1, 0x362B7B0
	0x0362B454 ADD W21, W25, 0x2
	0x0362B458 CMP W21, W23
	0x0362B45C B.GE 0x362B510
	0x0362B460 ADRP X8, 0xB10000
	0x0362B464 LDR X8, [X8 + 0x58]
	0x0362B468 LDRH W22, [X24, W21, SXTW]
	0x0362B46C LDR X0, [X8]
	0x0362B470 ADD W8, W25, 0x1
	0x0362B474 LDRH W20, [X24, W8, SXTW]
	0x0362B478 LDR W8, [X0 + 0xE0]
	0x0362B47C CBNZ W8, 0x362B484
	0x0362B480 BL 0x1C16DFC
	0x0362B484 MOV W0, W20
	0x0362B488 MOV W1, W22
	0x0362B48C BL 0x362A090
	0x0362B490 CMP W26, 0x8
	0x0362B494 MOV W20, W0
	0x0362B498 ORN W8, W31, W0, 0x0
	0x0362B49C B.GE 0x362B528
	0x0362B4A0 ANDS W31, W8, 0xFFFF
	0x0362B4A4 B.EQ 0x362B540
	0x0362B4A8 AND W8, W20, 0xFFFF
	0x0362B4AC CMP W8, 0x25
	0x0362B4B0 B.NE 0x362B55C
	0x0362B4B4 MOVZ W20, 0x25
	0x0362B4B8 B 0x362B54C
	0x0362B4BC TBNZ X27, 0x0, 0x362B548
	0x0362B4C0 LDR W8, [X31 + 0x5C]
	0x0362B4C4 CMP W20, W8, UXTH
	0x0362B4C8 MOVZ W8, 0x1
	0x0362B4CC B.EQ 0x362B720
	0x0362B4D0 LDR W9, [X31 + 0x4C]
	0x0362B4D4 CMP W20, W9, UXTH
	0x0362B4D8 B.EQ 0x362B720
	0x0362B4DC LDR W9, [X31 + 0x48]
	0x0362B4E0 CMP W20, W9, UXTH
	0x0362B4E4 B.EQ 0x362B720
	0x0362B4E8 TBNZ X26, 0x2, 0x362B548
	0x0362B4EC CMP W20, 0x20
	0x0362B4F0 MOVZ W8, 0x1
	0x0362B4F4 B.CC 0x362B720
	0x0362B4F8 SUB W9, W20, 0x7F
	0x0362B4FC AND W9, W9, 0xFFFF
	0x0362B500 CMP W9, 0x21
	0x0362B504 MOV W21, W25
	0x0362B508 B.CS 0x362B54C
	0x0362B50C B 0x362B720
	0x0362B510 CMP W26, 0x8
	0x0362B514 B.LT 0x362B7B0
	0x0362B518 CMP W26, 0x18
	0x0362B51C B.GE 0x362BB38
	0x0362B520 MOVZ W20, 0x25
	0x0362B524 B 0x362B548
	0x0362B528 ANDS W31, W8, 0xFFFF
	0x0362B52C B.NE 0x362B71C
	0x0362B530 CMP W26, 0x18
	0x0362B534 B.GE 0x362BB90
	0x0362B538 MOVZ W20, 0xFFFF
	0x0362B53C B 0x362B548
	0x0362B540 MOVZ W20, 0xFFFF
	0x0362B544 TBNZ X26, 0x0, 0x362BA4C
	0x0362B548 MOV W21, W25
	0x0362B54C ADD W25, W21, 0x1
	0x0362B550 CMP W25, W23
	0x0362B554 B.LT 0x362B444
	0x0362B558 B 0x362B71C
	0x0362B55C LDR W9, [X31 + 0x5C]
	0x0362B560 CMP W8, W9, UXTH
	0x0362B564 B.EQ 0x362B54C
	0x0362B568 LDR W9, [X31 + 0x4C]
	0x0362B56C AND W8, W20, 0xFFFF
	0x0362B570 CMP W8, W9, UXTH
	0x0362B574 B.EQ 0x362B54C
	0x0362B578 LDR W9, [X31 + 0x48]
	0x0362B57C CMP W8, W9, UXTH
	0x0362B580 B.EQ 0x362B54C
	0x0362B584 TBNZ X26, 0x2, 0x362B61C
	0x0362B588 ADRP X8, 0xB10000
	0x0362B58C LDR X8, [X8 + 0x58]
	0x0362B590 LDR X0, [X8]
	0x0362B594 LDR W8, [X0 + 0xE0]
	0x0362B598 CBNZ W8, 0x362B5A0
	0x0362B59C BL 0x1C16DFC
	0x0362B5A0 AND W8, W20, 0xFFFF
	0x0362B5A4 CMP W8, 0x20
	0x0362B5A8 B.CC 0x362B54C
	0x0362B5AC SUB W8, W20, 0x7F
	0x0362B5B0 AND W8, W8, 0xFFFF
	0x0362B5B4 CMP W8, 0x21
	0x0362B5B8 B.CC 0x362B54C
	0x0362B5BC SUB W8, W20, 0x3B
	0x0362B5C0 MOVZ W9, 0xFFFD
	0x0362B5C4 AND W8, W8, 0xFFFF
	0x0362B5C8 AND W9, W20, W9, 0x0
	0x0362B5CC SUB W10, W20, 0x23
	0x0362B5D0 CMP W8, 0x6
	0x0362B5D4 AND W10, W10, 0xFFFF
	0x0362B5D8 CSET W8, CC
	0x0362B5DC CMP W9, 0x3C
	0x0362B5E0 CSET W9, NE
	0x0362B5E4 CMP W10, 0x4
	0x0362B5E8 B.CC 0x362B54C
	0x0362B5EC AND W8, W8, W9, 0x0
	0x0362B5F0 TBNZ X8, 0x0, 0x362B54C
	0x0362B5F4 AND W8, W20, 0xFFFF
	0x0362B5F8 SUB W8, W8, 0x2B
	0x0362B5FC CMP W8, 0x31
	0x0362B600 B.HI 0x362B61C
	0x0362B604 MOVZ W9, 0x1
	0x0362B608 LSLV X8, X9, X8
	0x0362B60C MOVZ X9, 0x13
	0x0362B610 MOVK X9, 0x20000
	0x0362B614 ANDS X31, X8, X9, 0x0
	0x0362B618 B.NE 0x362B54C
	0x0362B61C LDR W8, [X31 + 0x34]
	0x0362B620 CBZ W8, 0x362B71C
	0x0362B624 AND W8, W20, 0xFFFF
	0x0362B628 CMP W8, 0x9F
	0x0362B62C B.LS 0x362B680
	0x0362B630 SUB W8, W20, 0xA0
	0x0362B634 UBFM W8, W8, 0x5, 0xF
	0x0362B638 CMP W8, 0x6BB
	0x0362B63C B.CC 0x362B71C
	0x0362B640 ADD W8, W20, 0x700
	0x0362B644 AND W8, W8, 0xFFFF
	0x0362B648 CMP W8, 0x4D0
	0x0362B64C B.CC 0x362B71C
	0x0362B650 ADD W8, W20, 0x210
	0x0362B654 LDR W9, [X31 + 0x28]
	0x0362B658 AND W8, W8, 0xFFFF
	0x0362B65C CMP W8, 0x200
	0x0362B660 CSET W8, CC
	0x0362B664 ORR W8, W8, W9, 0x0
	0x0362B668 TBNZ X8, 0x0, 0x362B678
	0x0362B66C ADD W8, W20, 0x2000
	0x0362B670 UBFM W8, W8, 0x8, 0xF
	0x0362B674 CMP W8, 0x19
	0x0362B678 B.CS 0x362B54C
	0x0362B67C B 0x362B71C
	0x0362B680 ADRP X8, 0xB10000
	0x0362B684 LDR X8, [X8 + 0x58]
	0x0362B688 LDR X0, [X8]
	0x0362B68C LDR W8, [X0 + 0xE0]
	0x0362B690 CBNZ W8, 0x362B698
	0x0362B694 BL 0x1C16DFC
	0x0362B698 AND W8, W20, 0xFFFF
	0x0362B69C CMP W8, 0x20
	0x0362B6A0 B.CC 0x362B54C
	0x0362B6A4 SUB W8, W20, 0x7F
	0x0362B6A8 AND W8, W8, 0xFFFF
	0x0362B6AC CMP W8, 0x21
	0x0362B6B0 B.CC 0x362B54C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0xDB6000
	015 Move W8, [X19+1263]
	016 Move W23, W6
	017 Move X20, X5
	018 Move W28, W4
	019 Move X21, X2
	020 Move X22, X1
	021 Move [X31+16], W7
	022 Move [X31+24], X0
	023 Move [X31+48], X3
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {40}
	028 Move X0, 0xACB000
	029 Move X0, [X0+368]
	030 Call 0x1C17CF4
	031 Move X0, 0xB11000
	032 Move X0, [X0+88]
	033 Call 0x1C17CF4
	034 Move X0, 0xACB000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X3, [X31+48]
	038 Move W8, 1
	039 Move [X19+1263], W8
	040 Compare X3, 0
	041 JumpIfEqual {46}
	042 Move W8, [X3+24]
	043 Compare W8, 0
	044 JumpIfEqual {46}
	045 Add X29, X3, 32
	046 Move X29, X31
	047 Move [X31+8], W23
	048 Move X26, 0xB11000
	049 Move X26, [X26+88]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W24, W31
	052 Move W8, [X31+176]
	053 Move W27, W31
	054 Move [X31+20], W28
	055 Move [X31+32], X29
	056 Move [X31+60], W8
	057 Move W8, [X31+16]
	058 Xor W8, W8, 1
	059 Move [X31+12], W8
	060 Move X8, 0xACB000
	061 Move X8, [X8+368]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move W0, W19
	069 Move X1, X31
	070 Call Char.IsHighSurrogate, X0
	071 Move W19, W0
	072 Move X0, X31
	073 Call Encoding.get_UTF8
	074 Compare X0, 0
	075 JumpIfEqual {342}
	076 Move X8, [X0]
	077 Move X1, [X31+48]
	078 And W31, W19, 1
	079 Move W2, W27
	080 Move X9, [X8+584]
	081 Move X4, [X8+592]
	082 Move W8, 1
	083 NotImplemented "Instruction CINC not yet implemented."
	084 Move [X31+72], W19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Compare X0, 0
	087 JumpIfEqual {342}
	088 Move X8, W27
	089 Move W25, [X0+24]
	090 Move [X31+64], X8
	091 Move W8, [X31+60]
	092 Move X29, X0
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {120}
	097 Move W8, [X31+72]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {244}
	102 Move X8, [X31+48]
	103 Move [X31+76], W31
	104 Compare X8, 0
	105 JumpIfEqual {342}
	106 Move W9, [X8+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add W8, W27, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X9, [X31+48]
	111 Add X2, X31, 76
	112 Add X9, X9, 32
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X8, [X31+64]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Move W8, [X31+16]
	117 And W3, W8, 1
	118 Call IriHelper.CheckIriUnicodeRange, X0, X1, X2, X3
	119 Move [X31+44], W0
	120 Move [X31+44], W31
	121 Compare X20, 0
	122 JumpIfEqual {342}
	123 Move X8, [X20+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X9, [X29+24]
	126 Compare W9, 0
	127 JumpIfEqual {341}
	128 Add X10, X20, W24
	129 Move W19, [X10+32]
	130 Move W10, [X29+32]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract W11, W8, W24
	134 Move W10, W31
	135 NotImplemented "Instruction CSEL not yet implemented."
	136 Move TEMP, 0
	137 Not TEMP
	138 Move W23, TEMP
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Add W12, W24, W10
	142 Add X13, X29, W10
	143 Add X12, X20, W12
	144 Move W12, [X12+32]
	145 Move W13, [X13+32]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W10, W10, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add W23, W23, 1
	150 Move X0, [X26]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move W0, W19
	156 Move X1, X22
	157 Move X2, X21
	158 Add W24, W24, 1
	159 Call UriHelper.EscapeAsciiChar, X0, X1, X2
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, [X26]
	163 Add X8, X20, W24
	164 Move W19, [X8+32]
	165 Move W9, [X0+224]
	166 Compare W9, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move W0, W19
	170 Move X1, X22
	171 Move X2, X21
	172 Call UriHelper.EscapeAsciiChar, X0, X1, X2
	173 Compare W23, 0
	174 JumpIfEqual {179}
	175 Move W8, [X20+24]
	176 Add W24, W24, 1
	177 Subtract W23, W23, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add W24, W24, 1
	180 Move W8, [X31+60]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {226}
	185 Move W8, [X31+44]
	186 Move TEMP, X8
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {280}
	190 Move X8, 0xACB000
	191 Move X8, [X8+2600]
	192 Move X9, [X31+32]
	193 Move X10, [X31+64]
	194 Move X0, [X8]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move W0, W19
	201 Move X1, X31
	202 Call Uri.IsBidiControlCharacter, X0
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {298}
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 Move X11, [X31+24]
	209 Move X29, [X31+32]
	210 Move X10, [X31+64]
	211 Add W8, W9, 1
	212 Move [X21], W8
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 NotImplemented "Instruction STRH not yet implemented."
	215 Move W10, [X31+72]
	216 Move TEMP, X10
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {225}
	220 Add W9, W9, 2
	221 Move [X21], W9
	222 Add W27, W27, 1
	223 NotImplemented "Instruction LDRH not yet implemented."
	224 NotImplemented "Instruction STRH not yet implemented."
	225 Move W28, [X31+20]
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Move X11, [X31+24]
	228 Move X29, [X31+32]
	229 Move X10, [X31+64]
	230 Add W8, W9, 1
	231 Move [X21], W8
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 NotImplemented "Instruction STRH not yet implemented."
	234 Move W10, [X31+72]
	235 Move TEMP, X10
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {303}
	239 Add W9, W9, 2
	240 Move [X21], W9
	241 Add W27, W27, 1
	242 NotImplemented "Instruction LDRH not yet implemented."
	243 NotImplemented "Instruction STRH not yet implemented."
	244 Move X9, [X31+48]
	245 Compare X9, 0
	246 JumpIfEqual {342}
	247 Move W8, [X9+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X8, [X31+64]
	250 Add X8, X9, X8
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Subtract W9, W8, 160
	253 Move W9, W9
	254 ShiftRight W9, 5
	255 And W9, W9, 0x7FFF
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move W9, 1
	258 Move [X31+44], W9
	259 Add W9, W8, 1792
	260 And W9, W9, 0xFFFF
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Add W9, W8, 528
	263 And W9, W9, 0xFFFF
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move W9, [X31+12]
	266 NotImplemented "Instruction CSET not yet implemented."
	267 Move [X31+44], W10
	268 Or W9, W10, W9
	269 Move TEMP, X9
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfEqual {121}
	273 Add W8, W8, 0x2000
	274 Move W8, W8
	275 ShiftRight W8, 8
	276 And W8, W8, 0x7FFF
	277 NotImplemented "Instruction CMP not yet implemented."
	278 NotImplemented "Instruction CSET not yet implemented."
	279 Move [X31+44], W8
	280 And X8, X9, 0
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X23, X31
	283 Add X28, X29, 32
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X0, [X26]
	286 Move W19, [X28]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move W0, W19
	292 Move X1, X22
	293 Move X2, X21
	294 Call UriHelper.EscapeAsciiChar, X0, X1, X2
	295 Move W8, [X29+24]
	296 Add X23, X23, 1
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move W8, [X31+72]
	299 Move W28, [X31+20]
	300 Move X29, [X31+32]
	301 And W8, W8, 1
	302 Add W27, W27, W8
	303 Add W27, W27, 1
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Add W24, W24, W25
	306 Move W25, [X31+8]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Compare X20, 0
	309 JumpIfEqual {342}
	310 Add X8, X20, W24
	311 Add X23, X8, 32
	312 Move W8, [X20+24]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X0, [X26]
	315 Move W19, [X23]
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move W0, W19
	321 Move X1, X22
	322 Move X2, X21
	323 Call UriHelper.EscapeAsciiChar, X0, X1, X2
	324 Add W24, W24, 1
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Add X23, X23, 1
	327 Move X20, [X31+160]
	328 Move X19, [X31+168]
	329 Move X22, [X31+144]
	330 Move X21, [X31+152]
	331 Move X24, [X31+128]
	332 Move X23, [X31+136]
	333 Move X26, [X31+112]
	334 Move X25, [X31+120]
	335 Move X28, [X31+96]
	336 Move X27, [X31+104]
	337 Move X29, [X31+80]
	338 Move X30, [X31+88]
	339 Add X31, X31, 176
	340 Return 
	341 Call 0x1C17F28
	342 Call 0x1C17F20

Method: System.Void EscapeAsciiChar(System.Char ch, System.Char[] to, ref System.Int32 pos)

Disassembly:
	0x0362B6B4 SUB W8, W20, 0x3B
	0x0362B6B8 MOVZ W9, 0xFFFD
	0x0362B6BC AND W8, W8, 0xFFFF
	0x0362B6C0 AND W9, W20, W9, 0x0
	0x0362B6C4 SUB W10, W20, 0x23
	0x0362B6C8 CMP W8, 0x6
	0x0362B6CC AND W10, W10, 0xFFFF
	0x0362B6D0 CSET W8, CC
	0x0362B6D4 CMP W9, 0x3C
	0x0362B6D8 CSET W9, NE
	0x0362B6DC CMP W10, 0x4
	0x0362B6E0 B.CC 0x362B54C
	0x0362B6E4 AND W8, W8, W9, 0x0
	0x0362B6E8 TBNZ X8, 0x0, 0x362B54C
	0x0362B6EC AND W8, W20, 0xFFFF
	0x0362B6F0 SUB W8, W8, 0x2B
	0x0362B6F4 CMP W8, 0x31
	0x0362B6F8 B.HI 0x362B71C
	0x0362B6FC MOVZ W9, 0x1
	0x0362B700 LSLV X8, X9, X8
	0x0362B704 MOVZ X9, 0x13
	0x0362B708 MOVK X9, 0x20000
	0x0362B70C ANDS X31, X8, X9, 0x0
	0x0362B710 B.NE 0x362B54C
	0x0362B714 B 0x362B71C
	0x0362B718 MOV W20, W31
	0x0362B71C MOV W8, W19
	0x0362B720 CMP W28, W25
	0x0362B724 B.GE 0x362B75C
	0x0362B728 LDR X9, [X31 + 0x50]
	0x0362B72C SXTW X11, W25
	0x0362B730 ADD X10, X24, W28, 0x1, SXTW
	0x0362B734 SUB X11, X11, W28, SXTW
	0x0362B738 LDR W9, [X9]
	0x0362B73C LDRH W12, [X10], #0x2
	0x0362B740 SUBS X11, X11, 0x1
	0x0362B744 STRH W12, [X29, W9, SXTW]
	0x0362B748 ADD W9, W9, 0x1
	0x0362B74C B.NE 0x362B73C
	0x0362B750 LDR X10, [X31 + 0x50]
	0x0362B754 MOV W28, W25
	0x0362B758 STR W9, [X10]
	0x0362B75C LDR X21, [X31 + 0x40]
	0x0362B760 CMP W25, W23
	0x0362B764 B.EQ 0x362BB14
	0x0362B768 TBNZ X8, 0x0, 0x362B7BC
	0x0362B76C AND W8, W20, 0xFFFF
	0x0362B770 CMP W8, 0x7F
	0x0362B774 B.HI 0x362B80C
	0x0362B778 LDR X10, [X31 + 0x50]
	0x0362B77C LDRSW X8, [X10]
	0x0362B780 ADD W9, W8, 0x1
	0x0362B784 STR W9, [X10]
	0x0362B788 CBZ X21, 0x362BB8C
	0x0362B78C LDR W9, [X21 + 0x18]
	0x0362B790 CMP W8, W9
	0x0362B794 B.CS 0x362BB88
	0x0362B798 MOV W19, W31
	0x0362B79C ADD X8, X21, X8, 0x1, LSL
	0x0362B7A0 ADD W25, W25, 0x3
	0x0362B7A4 STRH W20, [X8 + 0x20]
	0x0362B7A8 MOV W28, W25
	0x0362B7AC B 0x362B43C
	0x0362B7B0 MOVZ W8, 0x1
	0x0362B7B4 MOVZ W20, 0x25
	0x0362B7B8 B 0x362B720

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xDB6000
	008 Move W8, [X22+1264]
	009 Move X20, X2
	010 Move X19, X1
	011 Move W21, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB11000
	017 Move X0, [X0+88]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1264], W8
	021 NotImplemented "Instruction LDRSW not yet implemented."
	022 Add W22, W8, 1
	023 Move [X20], W22
	024 Compare X19, 0
	025 JumpIfEqual {75}
	026 Move W9, [X19+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X23, 0xB11000
	029 Move X23, [X23+88]
	030 Add X9, X19, X8
	031 Move W10, 37
	032 Add W8, W8, 2
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Move [X20], W8
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X23]
	041 Move X8, [X0+184]
	042 Move X8, [X8]
	043 Compare X8, 0
	044 JumpIfEqual {75}
	045 Move W10, [X8+24]
	046 And W11, W21, 0xFFFF
	047 Move W12, W11
	048 ShiftRight W12, 4
	049 And W12, W12, 127
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W9, [X19+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X12, X8, W12
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Add X13, X19, W22
	056 And W11, W11, 15
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction STRH not yet implemented."
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add W13, W12, 1
	061 Move [X20], W13
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X8, W11
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Add X9, X19, X12
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 NotImplemented "Instruction STRH not yet implemented."
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Return 
	074 Call 0x1C17F28
	075 Call 0x1C17F20

Method: System.Char EscapedAscii(System.Char digit, System.Char next)

Disassembly:
	0x0362B090 BL 0x361D66C
	0x0362B094 TBZ X0, 0x0, 0x362B0A0
	0x0362B098 MOVZ W0, 0x1
	0x0362B09C B 0x362B0F0
	0x0362B0A0 ADRP X8, 0xB10000
	0x0362B0A4 LDR X8, [X8 + 0x48]
	0x0362B0A8 LDR X0, [X8]
	0x0362B0AC LDR W8, [X0 + 0xE0]
	0x0362B0B0 CBNZ W8, 0x362B0B8
	0x0362B0B4 BL 0x1C16DFC
	0x0362B0B8 BL 0x362BC9C
	0x0362B0BC TBZ X0, 0x0, 0x362B0CC
	0x0362B0C0 ADRP X8, 0xB10000
	0x0362B0C4 LDR X8, [X8 + 0x578]
	0x0362B0C8 B 0x362B0D4
	0x0362B0CC ADRP X8, 0xB10000
	0x0362B0D0 LDR X8, [X8 + 0x580]
	0x0362B0D4 LDR X0, [X8]
	0x0362B0D8 CBZ X0, 0x362B0FC
	0x0362B0DC MOV W1, W19
	0x0362B0E0 MOV X2, X31
	0x0362B0E4 BL 0x322BD98
	0x0362B0E8 ORN W8, W31, W0, 0x0
	0x0362B0EC UBFM W0, W8, 0x1F, 0x1F
	0x0362B0F0 LDP X20, X19, [X31 + 0x10]
	0x0362B0F4 LDP X30, X21, [X31], #0x20
	0x0362B0F8 RET
	0x0362B0FC BL 0x1C16F20
	0x0362B100 STP X30, X21, [X31 - 0x20]!
	0x0362B104 STP X20, X19, [X31 + 0x10]
	0x0362B108 ADRP X21, 0xDB5000
	0x0362B10C ADRP X20, 0xB10000
	0x0362B110 LDRB W8, [X21 + 0x4F1]
	0x0362B114 LDR X20, [X20 + 0x58]
	0x0362B118 MOV W19, W0
	0x0362B11C TBNZ X8, 0x0, 0x362B158
	0x0362B120 ADRP X0, 0xB10000
	0x0362B124 LDR X0, [X0 + 0x58]
	0x0362B128 BL 0x1C16CF4
	0x0362B12C ADRP X0, 0xB10000
	0x0362B130 LDR X0, [X0 + 0x48]
	0x0362B134 BL 0x1C16CF4
	0x0362B138 ADRP X0, 0xB10000
	0x0362B13C LDR X0, [X0 + 0x588]
	0x0362B140 BL 0x1C16CF4
	0x0362B144 ADRP X0, 0xB10000
	0x0362B148 LDR X0, [X0 + 0x590]

ISIL:
	001 Subtract W9, W0, 48
	002 And W8, W9, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 And W8, W0, 0xFFFF
	005 Subtract W10, W8, 65
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, 0xFFFF
	008 Move W11, 1
	009 NotImplemented "Instruction LSLV not yet implemented."
	010 And X31, X10, 0x3F0000003F
	011 And W8, W0, 0xFFFF
	012 Move W11, 3999
	013 Move W12, 4031
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Subtract W10, W1, 48
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W8, W0, W11
	019 And W13, W10, 0xFFFF
	020 Add W8, W8, 10
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 And W8, W1, 0xFFFF
	024 Subtract W11, W8, 65
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, 0xFFFF
	027 Move W12, 1
	028 NotImplemented "Instruction LSLV not yet implemented."
	029 And X31, X11, 0x3F0000003F
	030 And W8, W1, 0xFFFF
	031 Move TEMP, 96
	032 Not TEMP
	033 Move W11, TEMP
	034 Move TEMP, 64
	035 Not TEMP
	036 Move W12, TEMP
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Add W11, W1, W11
	040 Add W11, W11, 10
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Add W8, W8, W9
	044 Move W0, W8
	045 Return X0

Method: System.Boolean IsNotSafeForUnescape(System.Char ch)

Disassembly:
	0x0362B14C BL 0x1C16CF4
	0x0362B150 MOVZ W8, 0x1
	0x0362B154 STRB W8, [X21 + 0x4F1]
	0x0362B158 LDR X0, [X20]
	0x0362B15C LDR W8, [X0 + 0xE0]
	0x0362B160 CBNZ W8, 0x362B168
	0x0362B164 BL 0x1C16DFC
	0x0362B168 MOV W0, W19
	0x0362B16C BL 0x362B020
	0x0362B170 TBZ X0, 0x0, 0x362B17C
	0x0362B174 MOVZ W0, 0x1
	0x0362B178 B 0x362B1F8
	0x0362B17C ADRP X8, 0xB10000
	0x0362B180 LDR X8, [X8 + 0x48]
	0x0362B184 LDR X0, [X8]
	0x0362B188 LDR W8, [X0 + 0xE0]
	0x0362B18C CBNZ W8, 0x362B194
	0x0362B190 BL 0x1C16DFC
	0x0362B194 BL 0x362BC9C
	0x0362B198 TBZ X0, 0x0, 0x362B1D4
	0x0362B19C ADRP X8, 0xB10000
	0x0362B1A0 LDR X8, [X8 + 0x588]
	0x0362B1A4 LDR X0, [X8]
	0x0362B1A8 CBZ X0, 0x362B204
	0x0362B1AC MOV W1, W19
	0x0362B1B0 MOV X2, X31
	0x0362B1B4 BL 0x322BD98
	0x0362B1B8 AND W8, W19, 0xFFFF
	0x0362B1BC CMP W0, 0x0
	0x0362B1C0 CSET W9, GE
	0x0362B1C4 CMP W8, 0x23
	0x0362B1C8 CSET W8, EQ
	0x0362B1CC ORR W0, W8, W9, 0x0
	0x0362B1D0 B 0x362B1F8
	0x0362B1D4 ADRP X8, 0xB10000

ISIL:
	001 And W8, W0, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 1
	004 Subtract W9, W0, 127
	005 And W9, W9, 0xFFFF
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Subtract W8, W0, 59
	008 Move W9, 0xFFFD
	009 And W8, W8, 0xFFFF
	010 Subtract W10, W0, 35
	011 And W11, W0, W9
	012 NotImplemented "Instruction CMP not yet implemented."
	013 And W12, W10, 0xFFFF
	014 NotImplemented "Instruction CSET not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, 1
	019 And W9, W9, W10
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {33}
	024 Subtract W8, W0, 43
	025 And W9, W8, 0xFFFF
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, 19
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction LSRV not yet implemented."
	030 And W0, W8, 1
	031 Return X0
	032 Move W8, W31
	033 Move W0, W8
	034 Return X0

Method: System.Boolean IsReservedUnreservedOrHash(System.Char c)

Disassembly:
	0x0362C100 BL 0x320A1E4
	0x0362C104 MOV X20, X0
	0x0362C108 ADRP X0, 0xACF000
	0x0362C10C LDR X0, [X0 + 0x760]
	0x0362C110 BL 0x1C16D08
	0x0362C114 BL 0x1C16F10
	0x0362C118 MOV X21, X0
	0x0362C11C ADRP X0, 0xB0F000
	0x0362C120 LDR X0, [X0 + 0x248]
	0x0362C124 BL 0x1C16D08
	0x0362C128 MOV X1, X0
	0x0362C12C MOV X0, X21
	0x0362C130 MOV X2, X19
	0x0362C134 MOV X3, X20
	0x0362C138 MOV X4, X31
	0x0362C13C BL 0x3312C8C
	0x0362C140 ADRP X0, 0xB0F000
	0x0362C144 LDR X0, [X0 + 0x5B0]
	0x0362C148 BL 0x1C16D08
	0x0362C14C MOV X1, X0
	0x0362C150 MOV X0, X21
	0x0362C154 BL 0x1C16DEC
	0x0362C158 ADRP X0, 0xACF000
	0x0362C15C LDR X0, [X0 + 0x760]
	0x0362C160 BL 0x1C16D08
	0x0362C164 BL 0x1C16F10
	0x0362C168 MOV X19, X0
	0x0362C16C ADRP X0, 0xAF6000
	0x0362C170 LDR X0, [X0 + 0xA0]
	0x0362C174 BL 0x1C16D08
	0x0362C178 MOV X1, X0
	0x0362C17C MOV X0, X19
	0x0362C180 MOV X2, X31
	0x0362C184 BL 0x3316014
	0x0362C188 ADRP X0, 0xB0F000
	0x0362C18C LDR X0, [X0 + 0x5B0]
	0x0362C190 BL 0x1C16D08
	0x0362C194 MOV X1, X0
	0x0362C198 MOV X0, X19
	0x0362C19C BL 0x1C16DEC
	0x0362C1A0 BL 0x1C16F20
	0x0362C1A4 ADRP X0, 0xAC7000
	0x0362C1A8 LDR X0, [X0 + 0x9D0]
	0x0362C1AC BL 0x1C16D08
	0x0362C1B0 MOVZ W1, 0x1
	0x0362C1B4 BL 0x1C16D6C
	0x0362C1B8 MOV X19, X0
	0x0362C1BC MOV X0, X21
	0x0362C1C0 MOV X1, X31
	0x0362C1C4 BL 0x33BE520
	0x0362C1C8 MOV X20, X0
	0x0362C1CC BL 0x19903C0
	0x0362C1D0 LDR X8, [X20]
	0x0362C1D4 MOV X0, X20
	0x0362C1D8 LDR X9, [X8 + 0x2E8]
	0x0362C1DC LDR X1, [X8 + 0x2F0]
	0x0362C1E0 BLR X9
	0x0362C1E4 MOV X20, X0
	0x0362C1E8 MOV X0, X19
	0x0362C1EC BL 0x19903C0
	0x0362C1F0 MOV X0, X19
	0x0362C1F4 MOV X1, X20
	0x0362C1F8 BL 0x19980B4
	0x0362C1FC MOV X0, X19
	0x0362C200 MOV X1, X31
	0x0362C204 MOV X2, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB5000
	006 Move X20, 0xB10000
	007 Move W8, [X21+1265]
	008 Move X20, [X20+88]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB10000
	015 Move X0, [X0+88]
	016 Call 0x1C17CF4
	017 Move X0, 0xB10000
	018 Move X0, [X0+72]
	019 Call 0x1C17CF4
	020 Move X0, 0xB10000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move X0, 0xB10000
	024 Move X0, [X0+1424]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1265], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, W19
	034 Call UriHelper.IsUnreserved, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Move W0, 1
	040 Move X8, 0xB10000
	041 Move X8, [X8+72]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Call UriParser.get_ShouldUseLegacyV2Quirks
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {66}
	052 Move X8, 0xB10000
	053 Move X8, [X8+1416]
	054 Move X0, [X8]
	055 Compare X0, 0
	056 JumpIfEqual {83}
	057 Move W1, W19
	058 Move X2, X31
	059 Call String.IndexOf, X0, X1
	060 And W8, W19, 0xFFFF
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 Or W0, W8, W9
	066 Move X8, 0xB10000
	067 Move X8, [X8+1424]
	068 Move X0, [X8]
	069 Compare X0, 0
	070 JumpIfEqual {83}
	071 Move W1, W19
	072 Move X2, X31
	073 Call String.IndexOf, X0, X1
	074 NotImplemented "Instruction ORN not yet implemented."
	075 Move W0, W8
	076 ShiftRight W0, 31
	077 And W0, W0, 0x7FFFFFFF
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return X0
	083 Call 0x1C17F20

Method: System.Boolean IsUnreserved(System.Char c)

Disassembly:
	0x0362C020 MOV X2, X31
	0x0362C024 MOV X20, X0
	0x0362C028 BL 0x337DF1C
	0x0362C02C ADRP X0, 0xB0F000
	0x0362C030 LDR X0, [X0 + 0x5A8]
	0x0362C034 BL 0x1C16D08
	0x0362C038 MOV X1, X0
	0x0362C03C MOV X0, X20
	0x0362C040 BL 0x1C16DEC
	0x0362C044 CBZ X1, 0x362C058
	0x0362C048 MOV X0, X1
	0x0362C04C MOV X1, X2
	0x0362C050 MOV X2, X31
	0x0362C054 B 0x3624F3C
	0x0362C058 STR X30, [X31 - 0x10]!
	0x0362C05C BL 0x1C16F20
	0x0362C060 STR X30, [X31 - 0x30]!
	0x0362C064 STP X22, X21, [X31 + 0x10]
	0x0362C068 STP X20, X19, [X31 + 0x20]
	0x0362C06C ORR W8, W31, 0x80000001
	0x0362C070 MOV W20, W2
	0x0362C074 CMP W2, W8
	0x0362C078 B.CS 0x362C0D4
	0x0362C07C MOV W19, W3
	0x0362C080 CMP W3, 0x4
	0x0362C084 B.CS 0x362C158
	0x0362C088 MOV X22, X1
	0x0362C08C CBZ X1, 0x362C1A0
	0x0362C090 MOV X21, X0
	0x0362C094 MOV X0, X22
	0x0362C098 MOV X1, X31
	0x0362C09C BL 0x3618010
	0x0362C0A0 TBNZ X0, 0x0, 0x362C1A4
	0x0362C0A4 MOV X0, X22
	0x0362C0A8 MOV X1, X31
	0x0362C0AC BL 0x3619A24
	0x0362C0B0 TBZ X0, 0x0, 0x362C228
	0x0362C0B4 MOV X0, X22
	0x0362C0B8 MOV W1, W20
	0x0362C0BC MOV W2, W19
	0x0362C0C0 LDP X20, X19, [X31 + 0x20]
	0x0362C0C4 LDP X22, X21, [X31 + 0x10]
	0x0362C0C8 MOV X3, X31
	0x0362C0CC LDR X30, [X31], #0x30
	0x0362C0D0 B 0x361DA70
	0x0362C0D4 STR W20, [X31 + 0xC]
	0x0362C0D8 ADRP X0, 0xB0F000
	0x0362C0DC LDR X0, [X0 + 0x238]
	0x0362C0E0 BL 0x1C16D08
	0x0362C0E4 ADD X1, X31, 0xC
	0x0362C0E8 BL 0x1C16E04
	0x0362C0EC MOV X19, X0
	0x0362C0F0 ADRP X0, 0xB0F000
	0x0362C0F4 LDR X0, [X0 + 0x240]
	0x0362C0F8 BL 0x1C16D08
	0x0362C0FC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB5000
	006 Move X20, 0xACA000
	007 Move W8, [X21+1266]
	008 Move X20, [X20+2600]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB10000
	015 Move X0, [X0+72]
	016 Call 0x1C17CF4
	017 Move X0, 0xACA000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0xB10000
	021 Move X0, [X0+1400]
	022 Call 0x1C17CF4
	023 Move X0, 0xB10000
	024 Move X0, [X0+1408]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1266], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, W19
	034 Move X1, X31
	035 Call Uri.IsAsciiLetterOrDigit, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {41}
	040 Move W0, 1
	041 Move X8, 0xB10000
	042 Move X8, [X8+72]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Call UriParser.get_ShouldUseLegacyV2Quirks
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {55}
	053 Move X8, 0xB10000
	054 Move X8, [X8+1400]
	055 Move X8, 0xB10000
	056 Move X8, [X8+1408]
	057 Move X0, [X8]
	058 Compare X0, 0
	059 JumpIfEqual {72}
	060 Move W1, W19
	061 Move X2, X31
	062 Call String.IndexOf, X0, X1
	063 NotImplemented "Instruction ORN not yet implemented."
	064 Move W0, W8
	065 ShiftRight W0, 31
	066 And W0, W0, 0x7FFFFFFF
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Return X0
	072 Call 0x1C17F20

Method: System.Boolean Is3986Unreserved(System.Char c)

Disassembly:
	0x0362CCFC LDR W8, [X0 + 0xE0]
	0x0362CD00 CBNZ W8, 0x362CD0C
	0x0362CD04 BL 0x1C16DFC
	0x0362CD08 LDR X0, [X22]
	0x0362CD0C LDR X8, [X0 + 0xB8]
	0x0362CD10 STR X21, [X8 + 0x8]
	0x0362CD14 ADRP X8, 0xB0F000
	0x0362CD18 LDR X8, [X8 + 0x5B8]
	0x0362CD1C LDR X0, [X8]
	0x0362CD20 BL 0x1C16F10
	0x0362CD24 MOV X21, X0
	0x0362CD28 MOVZ W3, 0xFFE
	0x0362CD2C MOVN W2, 0x0
	0x0362CD30 MOVK W3, 0x14F10000
	0x0362CD34 MOV X1, X19
	0x0362CD38 BL 0x362CA0C
	0x0362CD3C LDR X0, [X22]
	0x0362CD40 STR X21, [X31 + 0x18]
	0x0362CD44 LDR W8, [X0 + 0xE0]
	0x0362CD48 CBNZ W8, 0x362CD54
	0x0362CD4C BL 0x1C16DFC
	0x0362CD50 LDR X0, [X22]
	0x0362CD54 LDR X8, [X0 + 0xB8]
	0x0362CD58 LDR X0, [X8 + 0x8]
	0x0362CD5C CBZ X0, 0x362CDC0
	0x0362CD60 ADRP X8, 0xB0F000
	0x0362CD64 LDR X2, [X31 + 0x18]
	0x0362CD68 LDR X8, [X8 + 0x5C8]
	0x0362CD6C LDR X3, [X8]
	0x0362CD70 MOV X1, X19
	0x0362CD74 BL 0x2AA5084
	0x0362CD78 LDR X21, [X31 + 0x18]
	0x0362CD7C MOV X19, X31
	0x0362CD80 LDRB W8, [X31 + 0xC]
	0x0362CD84 CBZ W8, 0x362CD94
	0x0362CD88 MOV X0, X20
	0x0362CD8C MOV X1, X31
	0x0362CD90 BL 0x33E14E4
	0x0362CD94 CBNZ X19, 0x362CDB4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB5000
	006 Move X20, 0xACA000
	007 Move W8, [X21+1267]
	008 Move X20, [X20+2600]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xACA000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0xB10000
	018 Move X0, [X0+1408]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1267], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W0, W19
	028 Move X1, X31
	029 Call Uri.IsAsciiLetterOrDigit, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {35}
	034 Move W0, 1
	035 Move X8, 0xB10000
	036 Move X8, [X8+1408]
	037 Move X0, [X8]
	038 Compare X0, 0
	039 JumpIfEqual {52}
	040 Move W1, W19
	041 Move X2, X31
	042 Call String.IndexOf, X0, X1
	043 NotImplemented "Instruction ORN not yet implemented."
	044 Move W0, W8
	045 ShiftRight W0, 31
	046 And W0, W0, 0x7FFFFFFF
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0362CD98 MOV X0, X21
	0x0362CD9C LDP X20, X19, [X31 + 0x30]
	0x0362CDA0 LDP X22, X21, [X31 + 0x20]
	0x0362CDA4 LDR X30, [X31 + 0x10]
	0x0362CDA8 ADD X31, X31, 0x40
	0x0362CDAC RET
	0x0362CDB0 BL 0x1C16F20
	0x0362CDB4 MOV X0, X19
	0x0362CDB8 BL 0x1C16F18
	0x0362CDBC BL 0x1C16F20
	0x0362CDC0 BL 0x1C16F20
	0x0362CDC4 B 0x362CDD8
	0x0362CDC8 B 0x362CDD8
	0x0362CDCC B 0x362CDD8
	0x0362CDD0 B 0x362CDD8
	0x0362CDD4 B 0x362CDD8
	0x0362CDD8 MOV X21, X0
	0x0362CDDC CMP W1, 0x1
	0x0362CDE0 B.NE 0x362CDFC
	0x0362CDE4 MOV X0, X21
	0x0362CDE8 BL 0x3EB1AD0
	0x0362CDEC LDR X19, [X0]
	0x0362CDF0 BL 0x3EB1AE0
	0x0362CDF4 MOV X21, X31
	0x0362CDF8 B 0x362CD80
	0x0362CDFC MOV X19, X31
	0x0362CE00 B 0x362CE08
	0x0362CE04 MOV X21, X0
	0x0362CE08 LDRB W8, [X31 + 0xC]
	0x0362CE0C CBZ W8, 0x362CE1C
	0x0362CE10 MOV X0, X20
	0x0362CE14 MOV X1, X31
	0x0362CE18 BL 0x33E14E4
	0x0362CE1C CBNZ X19, 0x362CE28
	0x0362CE20 MOV X0, X21
	0x0362CE24 BL 0x1D2C690
	0x0362CE28 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDB5000
	007 Move X22, 0xAD1000
	008 Move X19, 0xB10000
	009 Move X20, 0xB10000
	010 Move W8, [X21+1268]
	011 Move X22, [X22+2264]
	012 Move X19, [X19+1440]
	013 Move X20, [X20+88]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xAD1000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0xB10000
	022 Move X0, [X0+1440]
	023 Call 0x1C17CF4
	024 Move X0, 0xB10000
	025 Move X0, [X0+88]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1268], W8
	029 Move X0, [X22]
	030 Move W1, 16
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

