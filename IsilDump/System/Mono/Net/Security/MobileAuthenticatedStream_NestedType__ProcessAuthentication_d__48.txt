Type: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__48

Method: System.Void MoveNext()

Disassembly:
	0x035ED1AC LDR X20, [X31 + 0x68]
	0x035ED1B0 MOVN W8, 0x1
	0x035ED1B4 LDR W19, [X19 + 0x10]
	0x035ED1B8 ADRP X21, 0xB35000
	0x035ED1BC STR W8, [X20], #0x8
	0x035ED1C0 LDR X0, [X22]
	0x035ED1C4 LDR W8, [X0 + 0xE0]
	0x035ED1C8 LDR X21, [X21 + 0xE30]
	0x035ED1CC CBNZ W8, 0x35ED1D4
	0x035ED1D0 BL 0x1C16DFC
	0x035ED1D4 LDR X2, [X21]
	0x035ED1D8 MOV X0, X20
	0x035ED1DC MOV W1, W19
	0x035ED1E0 BL 0x26300F0
	0x035ED1E4 LDP X20, X19, [X31 + 0x80]
	0x035ED1E8 LDP X22, X21, [X31 + 0x70]
	0x035ED1EC LDR X30, [X31 + 0x60]
	0x035ED1F0 ADD X31, X31, 0x90
	0x035ED1F4 RET
	0x035ED1F8 BL 0x1C16F20
	0x035ED1FC MOV X21, X0
	0x035ED200 MOV W20, W1
	0x035ED204 ADD X0, X31, 0x0
	0x035ED208 BL 0x1BC4B64
	0x035ED20C B 0x35ED22C
	0x035ED210 B 0x35ED218
	0x035ED214 B 0x35ED218
	0x035ED218 MOV X21, X0
	0x035ED21C MOV W20, W1
	0x035ED220 B 0x35ED22C
	0x035ED224 MOV X20, X1
	0x035ED228 MOV X21, X0
	0x035ED22C CMP W20, 0x1
	0x035ED230 B.NE 0x35ED2D0
	0x035ED234 MOV X0, X21
	0x035ED238 BL 0x3EB1AD0
	0x035ED23C MOV X19, X0
	0x035ED240 ADRP X0, 0xB06000
	0x035ED244 LDR X0, [X0 + 0x7D0]
	0x035ED248 BL 0x1C16D08
	0x035ED24C LDR X8, [X19]
	0x035ED250 LDR X1, [X8]
	0x035ED254 BL 0x1C17270
	0x035ED258 TBZ X0, 0x0, 0x35ED2A8
	0x035ED25C LDR X19, [X19]
	0x035ED260 BL 0x3EB1AE0
	0x035ED264 LDR X20, [X31 + 0x68]
	0x035ED268 MOVN W8, 0x1
	0x035ED26C ADRP X0, 0xB35000
	0x035ED270 STR W8, [X20], #0x8
	0x035ED274 LDR X0, [X0 + 0xDA0]
	0x035ED278 BL 0x1C16D08
	0x035ED27C LDR W8, [X0 + 0xE0]
	0x035ED280 CBNZ W8, 0x35ED288
	0x035ED284 BL 0x1C16DFC
	0x035ED288 ADRP X0, 0xB35000
	0x035ED28C LDR X0, [X0 + 0xE40]
	0x035ED290 BL 0x1C16D08
	0x035ED294 MOV X2, X0
	0x035ED298 MOV X0, X20
	0x035ED29C MOV X1, X19
	0x035ED2A0 BL 0x2630308
	0x035ED2A4 B 0x35ED1E4
	0x035ED2A8 MOVZ W0, 0x8
	0x035ED2AC BL 0x3EB1AF0
	0x035ED2B0 LDR X8, [X19]
	0x035ED2B4 STR X8, [X0]
	0x035ED2B8 ADRP X1, 0x8C7000
	0x035ED2BC ADD X1, X1, 0xE58
	0x035ED2C0 MOV X2, X31
	0x035ED2C4 BL 0x3EB1B00
	0x035ED2C8 MOV X21, X0
	0x035ED2CC BL 0x3EB1AE0
	0x035ED2D0 MOV X0, X21
	0x035ED2D4 BL 0x1D2C690
	0x035ED2D8 BL 0x1990590
	0x035ED2DC STR X30, [X31 - 0x30]!
	0x035ED2E0 STP X22, X21, [X31 + 0x10]
	0x035ED2E4 STP X20, X19, [X31 + 0x20]
	0x035ED2E8 ADRP X22, 0xDF3000
	0x035ED2EC ADRP X21, 0xB35000
	0x035ED2F0 LDRB W8, [X22 + 0x2C4]
	0x035ED2F4 LDR X21, [X21 + 0xDA0]
	0x035ED2F8 MOV X19, X1
	0x035ED2FC MOV X20, X0
	0x035ED300 TBNZ X8, 0x0, 0x35ED324
	0x035ED304 ADRP X0, 0xB35000
	0x035ED308 LDR X0, [X0 + 0xE48]
	0x035ED30C BL 0x1C16CF4
	0x035ED310 ADRP X0, 0xB35000
	0x035ED314 LDR X0, [X0 + 0xDA0]
	0x035ED318 BL 0x1C16CF4
	0x035ED31C MOVZ W8, 0x1
	0x035ED320 STRB W8, [X22 + 0x2C4]
	0x035ED324 LDR X0, [X21]
	0x035ED328 ADRP X21, 0xB35000
	0x035ED32C LDR W8, [X0 + 0xE0]
	0x035ED330 LDR X21, [X21 + 0xE48]
	0x035ED334 CBNZ W8, 0x35ED33C
	0x035ED338 BL 0x1C16DFC
	0x035ED33C LDR X2, [X21]
	0x035ED340 ADD X0, X20, 0x8
	0x035ED344 MOV X1, X19
	0x035ED348 LDP X20, X19, [X31 + 0x20]
	0x035ED34C LDP X22, X21, [X31 + 0x10]
	0x035ED350 LDR X30, [X31], #0x30
	0x035ED354 B 0x2630068
	0x035ED358 MOV X1, X31
	0x035ED35C B 0x33BDD8C
	0x035ED360 STR X30, [X31 - 0x10]!
	0x035ED364 LDR X8, [X0 + 0x10]
	0x035ED368 CBZ X8, 0x35ED3A4
	0x035ED36C LDR X9, [X8 + 0x60]
	0x035ED370 CBZ X9, 0x35ED3A4
	0x035ED374 LDR X8, [X8 + 0x28]
	0x035ED378 CBZ X8, 0x35ED3A4
	0x035ED37C LDR X10, [X8]
	0x035ED380 LDP W12, W11, [X9 + 0x18]
	0x035ED384 LDR W3, [X0 + 0x18]
	0x035ED388 LDR X1, [X9 + 0x10]
	0x035ED38C LDR X5, [X10 + 0x358]
	0x035ED390 LDR X4, [X10 + 0x360]
	0x035ED394 ADD W2, W12, W11
	0x035ED398 MOV X0, X8
	0x035ED39C LDR X30, [X31], #0x10
	0x035ED3A0 BR X5
	0x035ED3A4 BL 0x1C16F20
	0x035ED3A8 SUB X31, X31, 0x60
	0x035ED3AC STR X30, [X31 + 0x10]
	0x035ED3B0 STP X26, X25, [X31 + 0x20]
	0x035ED3B4 STP X24, X23, [X31 + 0x30]
	0x035ED3B8 STP X22, X21, [X31 + 0x40]
	0x035ED3BC STP X20, X19, [X31 + 0x50]
	0x035ED3C0 ADRP X20, 0xDF3000
	0x035ED3C4 LDRB W8, [X20 + 0x2C5]
	0x035ED3C8 MOV X19, X0
	0x035ED3CC TBNZ X8, 0x0, 0x35ED480
	0x035ED3D0 ADRP X0, 0xB4C000
	0x035ED3D4 LDR X0, [X0 + 0x698]
	0x035ED3D8 BL 0x1C16CF4
	0x035ED3DC ADRP X0, 0xB35000
	0x035ED3E0 LDR X0, [X0 + 0xE30]
	0x035ED3E4 BL 0x1C16CF4
	0x035ED3E8 ADRP X0, 0xB35000
	0x035ED3EC LDR X0, [X0 + 0xDA0]
	0x035ED3F0 BL 0x1C16CF4
	0x035ED3F4 ADRP X0, 0xB0E000
	0x035ED3F8 LDR X0, [X0 + 0x7D8]
	0x035ED3FC BL 0x1C16CF4
	0x035ED400 ADRP X0, 0xB3A000
	0x035ED404 LDR X0, [X0 + 0x2B8]
	0x035ED408 BL 0x1C16CF4
	0x035ED40C ADRP X0, 0xB3A000
	0x035ED410 LDR X0, [X0 + 0x2C0]
	0x035ED414 BL 0x1C16CF4
	0x035ED418 ADRP X0, 0xB3A000
	0x035ED41C LDR X0, [X0 + 0x2C8]
	0x035ED420 BL 0x1C16CF4
	0x035ED424 ADRP X0, 0xB4C000
	0x035ED428 LDR X0, [X0 + 0x6A0]
	0x035ED42C BL 0x1C16CF4
	0x035ED430 ADRP X0, 0xB06000
	0x035ED434 LDR X0, [X0 + 0x5A8]
	0x035ED438 BL 0x1C16CF4
	0x035ED43C ADRP X0, 0xB3A000
	0x035ED440 LDR X0, [X0 + 0x2D0]
	0x035ED444 BL 0x1C16CF4
	0x035ED448 ADRP X0, 0xB4C000
	0x035ED44C LDR X0, [X0 + 0x6A8]
	0x035ED450 BL 0x1C16CF4
	0x035ED454 ADRP X0, 0xB07000
	0x035ED458 LDR X0, [X0 + 0x7B8]
	0x035ED45C BL 0x1C16CF4
	0x035ED460 ADRP X0, 0xB4C000
	0x035ED464 LDR X0, [X0 + 0x6B0]
	0x035ED468 BL 0x1C16CF4
	0x035ED46C ADRP X0, 0xB4C000
	0x035ED470 LDR X0, [X0 + 0x6B8]
	0x035ED474 BL 0x1C16CF4
	0x035ED478 MOVZ W8, 0x1
	0x035ED47C STRB W8, [X20 + 0x2C5]
	0x035ED480 STP X31, X31, [X31]
	0x035ED484 ADRP X22, 0xB35000
	0x035ED488 LDR W8, [X19]
	0x035ED48C LDR X23, [X19 + 0x20]
	0x035ED490 LDR X22, [X22 + 0xDA0]
	0x035ED494 CBZ W8, 0x35ED5A0
	0x035ED498 ADRP X8, 0xB4C000
	0x035ED49C LDR X8, [X8 + 0x6B8]
	0x035ED4A0 LDR X0, [X8]
	0x035ED4A4 BL 0x1C16F10
	0x035ED4A8 MOV X20, X0
	0x035ED4AC MOV X1, X31
	0x035ED4B0 BL 0x33BDD8C
	0x035ED4B4 CBZ X20, 0x35ED6F4
	0x035ED4B8 LDR X8, [X19 + 0x20]
	0x035ED4BC ADRP X9, 0xB0E000
	0x035ED4C0 LDR X9, [X9 + 0x7D8]
	0x035ED4C4 STR X8, [X20 + 0x10]
	0x035ED4C8 LDR X0, [X9]
	0x035ED4CC LDR W8, [X0 + 0xE0]
	0x035ED4D0 CBNZ W8, 0x35ED4D8
	0x035ED4D4 BL 0x1C16DFC
	0x035ED4D8 ADD X0, X19, 0x28
	0x035ED4DC MOV X1, X31
	0x035ED4E0 BL 0x33DDC30
	0x035ED4E4 CBZ X23, 0x35ED6F8
	0x035ED4E8 LDR X8, [X23 + 0x60]
	0x035ED4EC CBZ X8, 0x35ED6FC
	0x035ED4F0 LDR X9, [X8 + 0x10]
	0x035ED4F4 CBZ X9, 0x35ED700
	0x035ED4F8 ADRP X10, 0xB06000
	0x035ED4FC LDR X10, [X10 + 0x5A8]
	0x035ED500 LDP W24, W26, [X8 + 0x18]
	0x035ED504 LDR W25, [X9 + 0x18]
	0x035ED508 LDR W21, [X19 + 0x30]
	0x035ED50C LDR X0, [X10]
	0x035ED510 LDR W8, [X0 + 0xE0]
	0x035ED514 CBNZ W8, 0x35ED51C
	0x035ED518 BL 0x1C16DFC
	0x035ED51C ADD W8, W26, W24
	0x035ED520 SUB W0, W25, W8
	0x035ED524 MOV W1, W21
	0x035ED528 MOV X2, X31
	0x035ED52C BL 0x337EE94
	0x035ED530 MOV W3, W0
	0x035ED534 STR W0, [X20 + 0x18]
	0x035ED538 CBZ W0, 0x35ED704
	0x035ED53C LDRB W8, [X19 + 0x34]
	0x035ED540 CBZ W8, 0x35ED5B8
	0x035ED544 ADRP X8, 0xB4C000
	0x035ED548 LDR X8, [X8 + 0x6A0]
	0x035ED54C LDR X0, [X8]
	0x035ED550 BL 0x1C16F10
	0x035ED554 ADRP X8, 0xB4C000
	0x035ED558 LDR X8, [X8 + 0x6B0]
	0x035ED55C MOV X21, X0
	0x035ED560 LDR X2, [X8]
	0x035ED564 MOV X1, X20
	0x035ED568 MOV X3, X31
	0x035ED56C BL 0x2D27710
	0x035ED570 ADRP X8, 0xB07000
	0x035ED574 LDR X8, [X8 + 0x7B8]
	0x035ED578 LDR X0, [X8]
	0x035ED57C LDR W8, [X0 + 0xE0]
	0x035ED580 CBNZ W8, 0x35ED588
	0x035ED584 BL 0x1C16DFC
	0x035ED588 ADRP X8, 0xB4C000
	0x035ED58C LDR X8, [X8 + 0x6A8]
	0x035ED590 LDR X1, [X8]
	0x035ED594 MOV X0, X21
	0x035ED598 BL 0x229A71C
	0x035ED59C B 0x35ED5E8
	0x035ED5A0 LDUR V0, [X19 + 0x38]
	0x035ED5A4 MOVN W8, 0x0
	0x035ED5A8 STR V0, [X31]
	0x035ED5AC STP X31, X31, [X19 + 0x38]
	0x035ED5B0 STR W8, [X19]
	0x035ED5B4 B 0x35ED620
	0x035ED5B8 LDR X8, [X23 + 0x60]
	0x035ED5BC CBZ X8, 0x35ED744
	0x035ED5C0 LDR X0, [X23 + 0x28]
	0x035ED5C4 CBZ X0, 0x35ED748
	0x035ED5C8 LDR X9, [X0]
	0x035ED5CC LDP W11, W10, [X8 + 0x18]
	0x035ED5D0 LDR X1, [X8 + 0x10]
	0x035ED5D4 LDR X4, [X19 + 0x28]
	0x035ED5D8 LDR X8, [X9 + 0x2D8]
	0x035ED5DC LDR X5, [X9 + 0x2E0]
	0x035ED5E0 ADD W2, W11, W10
	0x035ED5E4 BLR X8
	0x035ED5E8 CBZ X0, 0x35ED738
	0x035ED5EC ADRP X8, 0xB3A000
	0x035ED5F0 LDR X8, [X8 + 0x2D0]
	0x035ED5F4 LDR X2, [X8]
	0x035ED5F8 MOV W1, W31
	0x035ED5FC BL 0x269D3A8
	0x035ED600 ADRP X8, 0xB3A000
	0x035ED604 LDR X8, [X8 + 0x2C8]
	0x035ED608 STP X0, X1, [X31]
	0x035ED60C LDR X8, [X8]
	0x035ED610 ADD X0, X31, 0x0
	0x035ED614 MOV X1, X8
	0x035ED618 BL 0x2998978
	0x035ED61C TBZ X0, 0x0, 0x35ED6A0
	0x035ED620 ADRP X8, 0xB3A000
	0x035ED624 LDR X8, [X8 + 0x2C0]
	0x035ED628 LDR X1, [X8]
	0x035ED62C ADD X0, X31, 0x0
	0x035ED630 BL 0x29989C4
	0x035ED634 MOV W20, W0
	0x035ED638 TBNZ X0, 0x1F, 0x35ED66C
	0x035ED63C CBZ X23, 0x35ED73C
	0x035ED640 LDR X8, [X23 + 0x60]
	0x035ED644 CBZ X8, 0x35ED740
	0x035ED648 LDP W9, W10, [X8 + 0x1C]
	0x035ED64C ADD W11, W9, W20
	0x035ED650 ADD W9, W10, W20
	0x035ED654 STP W11, W9, [X8 + 0x1C]
	0x035ED658 CBNZ W20, 0x35ED66C
	0x035ED65C MOVZ W10, 0x1
	0x035ED660 CMP W9, 0x0
	0x035ED664 STRB W10, [X8 + 0x24]
	0x035ED668 CSINV W20, W31, W31, LE
	0x035ED66C MOVN W8, 0x1
	0x035ED670 STR W8, [X19], #0x8
	0x035ED674 LDR X0, [X22]
	0x035ED678 ADRP X21, 0xB35000
	0x035ED67C LDR W8, [X0 + 0xE0]
	0x035ED680 LDR X21, [X21 + 0xE30]
	0x035ED684 CBNZ W8, 0x35ED68C
	0x035ED688 BL 0x1C16DFC
	0x035ED68C LDR X2, [X21]
	0x035ED690 MOV X0, X19
	0x035ED694 MOV W1, W20
	0x035ED698 BL 0x26300F0
	0x035ED69C B 0x35ED6D8
	0x035ED6A0 STR W31, [X19]
	0x035ED6A4 LDR V0, [X31]
	0x035ED6A8 STUR V0, [X19 + 0x38]
	0x035ED6AC LDR X0, [X22]
	0x035ED6B0 LDR W8, [X0 + 0xE0]
	0x035ED6B4 CBNZ W8, 0x35ED6BC
	0x035ED6B8 BL 0x1C16DFC
	0x035ED6BC ADRP X8, 0xB4C000
	0x035ED6C0 LDR X8, [X8 + 0x698]
	0x035ED6C4 ADD X0, X19, 0x8
	0x035ED6C8 LDR X3, [X8]
	0x035ED6CC ADD X1, X31, 0x0
	0x035ED6D0 MOV X2, X19
	0x035ED6D4 BL 0x1FAC0F8
	0x035ED6D8 LDP X20, X19, [X31 + 0x50]
	0x035ED6DC LDP X22, X21, [X31 + 0x40]
	0x035ED6E0 LDP X24, X23, [X31 + 0x30]
	0x035ED6E4 LDP X26, X25, [X31 + 0x20]
	0x035ED6E8 LDR X30, [X31 + 0x10]
	0x035ED6EC ADD X31, X31, 0x60
	0x035ED6F0 RET
	0x035ED6F4 BL 0x1C16F20
	0x035ED6F8 BL 0x1C16F20
	0x035ED6FC BL 0x1C16F20
	0x035ED700 BL 0x1C16F20
	0x035ED704 ADRP X0, 0xB06000
	0x035ED708 LDR X0, [X0 + 0x5B0]
	0x035ED70C BL 0x1C16D08
	0x035ED710 BL 0x1C16F10
	0x035ED714 MOV X20, X0
	0x035ED718 MOV X1, X31
	0x035ED71C BL 0x337DEC0
	0x035ED720 ADRP X0, 0xB4C000
	0x035ED724 LDR X0, [X0 + 0x6C0]
	0x035ED728 BL 0x1C16D08
	0x035ED72C MOV X1, X0
	0x035ED730 MOV X0, X20
	0x035ED734 BL 0x1C16DEC
	0x035ED738 BL 0x1C16F20
	0x035ED73C BL 0x1C16F20
	0x035ED740 BL 0x1C16F20
	0x035ED744 BL 0x1C16F20
	0x035ED748 BL 0x1C16F20
	0x035ED74C B 0x35ED79C
	0x035ED750 B 0x35ED79C
	0x035ED754 B 0x35ED79C
	0x035ED758 B 0x35ED79C
	0x035ED75C B 0x35ED79C
	0x035ED760 B 0x35ED79C
	0x035ED764 B 0x35ED79C
	0x035ED768 B 0x35ED79C
	0x035ED76C B 0x35ED79C
	0x035ED770 B 0x35ED79C
	0x035ED774 B 0x35ED79C
	0x035ED778 B 0x35ED79C
	0x035ED77C B 0x35ED79C
	0x035ED780 B 0x35ED79C
	0x035ED784 B 0x35ED79C
	0x035ED788 B 0x35ED79C
	0x035ED78C B 0x35ED79C
	0x035ED790 B 0x35ED79C
	0x035ED794 B 0x35ED79C
	0x035ED798 B 0x35ED79C
	0x035ED79C MOV X20, X0
	0x035ED7A0 CMP W1, 0x1
	0x035ED7A4 B.NE 0x35ED840
	0x035ED7A8 MOV X0, X20
	0x035ED7AC BL 0x3EB1AD0
	0x035ED7B0 MOV X20, X0
	0x035ED7B4 ADRP X0, 0xB06000
	0x035ED7B8 LDR X0, [X0 + 0x7D0]
	0x035ED7BC BL 0x1C16D08
	0x035ED7C0 LDR X8, [X20]
	0x035ED7C4 LDR X1, [X8]
	0x035ED7C8 BL 0x1C17270
	0x035ED7CC TBZ X0, 0x0, 0x35ED818
	0x035ED7D0 LDR X20, [X20]
	0x035ED7D4 BL 0x3EB1AE0
	0x035ED7D8 MOVN W8, 0x1
	0x035ED7DC STR W8, [X19], #0x8
	0x035ED7E0 ADRP X0, 0xB35000
	0x035ED7E4 LDR X0, [X0 + 0xDA0]
	0x035ED7E8 BL 0x1C16D08
	0x035ED7EC LDR W8, [X0 + 0xE0]
	0x035ED7F0 CBNZ W8, 0x35ED7F8
	0x035ED7F4 BL 0x1C16DFC
	0x035ED7F8 ADRP X0, 0xB35000
	0x035ED7FC LDR X0, [X0 + 0xE40]
	0x035ED800 BL 0x1C16D08
	0x035ED804 MOV X2, X0
	0x035ED808 MOV X0, X19
	0x035ED80C MOV X1, X20
	0x035ED810 BL 0x2630308
	0x035ED814 B 0x35ED6D8
	0x035ED818 MOVZ W0, 0x8
	0x035ED81C BL 0x3EB1AF0
	0x035ED820 LDR X8, [X20]
	0x035ED824 STR X8, [X0]
	0x035ED828 ADRP X1, 0x8C7000
	0x035ED82C ADD X1, X1, 0xE58
	0x035ED830 MOV X2, X31
	0x035ED834 BL 0x3EB1B00
	0x035ED838 MOV X20, X0
	0x035ED83C BL 0x3EB1AE0
	0x035ED840 MOV X0, X20
	0x035ED844 BL 0x1D2C690
	0x035ED848 BL 0x1990590
	0x035ED84C STR X30, [X31 - 0x30]!
	0x035ED850 STP X22, X21, [X31 + 0x10]
	0x035ED854 STP X20, X19, [X31 + 0x20]
	0x035ED858 ADRP X22, 0xDF3000
	0x035ED85C ADRP X21, 0xB35000
	0x035ED860 LDRB W8, [X22 + 0x2C6]
	0x035ED864 LDR X21, [X21 + 0xDA0]
	0x035ED868 MOV X19, X1
	0x035ED86C MOV X20, X0
	0x035ED870 TBNZ X8, 0x0, 0x35ED894
	0x035ED874 ADRP X0, 0xB35000
	0x035ED878 LDR X0, [X0 + 0xE48]
	0x035ED87C BL 0x1C16CF4
	0x035ED880 ADRP X0, 0xB35000
	0x035ED884 LDR X0, [X0 + 0xDA0]
	0x035ED888 BL 0x1C16CF4
	0x035ED88C MOVZ W8, 0x1
	0x035ED890 STRB W8, [X22 + 0x2C6]
	0x035ED894 LDR X0, [X21]
	0x035ED898 ADRP X21, 0xB35000
	0x035ED89C LDR W8, [X0 + 0xE0]
	0x035ED8A0 LDR X21, [X21 + 0xE48]
	0x035ED8A4 CBNZ W8, 0x35ED8AC
	0x035ED8A8 BL 0x1C16DFC
	0x035ED8AC LDR X2, [X21]
	0x035ED8B0 ADD X0, X20, 0x8
	0x035ED8B4 MOV X1, X19
	0x035ED8B8 LDP X20, X19, [X31 + 0x20]
	0x035ED8BC LDP X22, X21, [X31 + 0x10]
	0x035ED8C0 LDR X30, [X31], #0x30
	0x035ED8C4 B 0x2630068
	0x035ED8C8 SUB X31, X31, 0x40
	0x035ED8CC STR X30, [X31 + 0x10]
	0x035ED8D0 STP X22, X21, [X31 + 0x20]
	0x035ED8D4 STP X20, X19, [X31 + 0x30]
	0x035ED8D8 ADRP X20, 0xDF3000
	0x035ED8DC LDRB W8, [X20 + 0x2C7]
	0x035ED8E0 MOV X19, X0
	0x035ED8E4 TBNZ X8, 0x0, 0x35ED938
	0x035ED8E8 ADRP X0, 0xB07000
	0x035ED8EC LDR X0, [X0 + 0xE70]
	0x035ED8F0 BL 0x1C16CF4
	0x035ED8F4 ADRP X0, 0xB4C000
	0x035ED8F8 LDR X0, [X0 + 0x6C8]
	0x035ED8FC BL 0x1C16CF4
	0x035ED900 ADRP X0, 0xB09000
	0x035ED904 LDR X0, [X0 + 0x280]
	0x035ED908 BL 0x1C16CF4
	0x035ED90C ADRP X0, 0xB0E000
	0x035ED910 LDR X0, [X0 + 0x7D8]
	0x035ED914 BL 0x1C16CF4
	0x035ED918 ADRP X0, 0xB4C000
	0x035ED91C LDR X0, [X0 + 0x6D0]
	0x035ED920 BL 0x1C16CF4
	0x035ED924 ADRP X0, 0xB07000
	0x035ED928 LDR X0, [X0 + 0x7B8]
	0x035ED92C BL 0x1C16CF4
	0x035ED930 MOVZ W8, 0x1
	0x035ED934 STRB W8, [X20 + 0x2C7]
	0x035ED938 STP X31, X31, [X31]
	0x035ED93C ADRP X22, 0xB09000
	0x035ED940 LDR W8, [X19]
	0x035ED944 LDR X20, [X19 + 0x28]
	0x035ED948 LDR X22, [X22 + 0x280]
	0x035ED94C CBZ W8, 0x35ED9E4
	0x035ED950 ADRP X8, 0xB0E000
	0x035ED954 LDR X8, [X8 + 0x7D8]
	0x035ED958 LDR X0, [X8]
	0x035ED95C LDR W8, [X0 + 0xE0]
	0x035ED960 CBNZ W8, 0x35ED968
	0x035ED964 BL 0x1C16DFC
	0x035ED968 ADD X0, X19, 0x20
	0x035ED96C MOV X1, X31
	0x035ED970 BL 0x33DDC30
	0x035ED974 CBZ X20, 0x35EDAD4
	0x035ED978 LDR X8, [X20 + 0x68]
	0x035ED97C CBZ X8, 0x35EDAD8
	0x035ED980 LDR W3, [X8 + 0x1C]
	0x035ED984 CBZ W3, 0x35EDA60
	0x035ED988 LDRB W9, [X19 + 0x30]
	0x035ED98C CBZ W9, 0x35ED9FC
	0x035ED990 ADRP X8, 0xB07000
	0x035ED994 LDR X8, [X8 + 0xE70]
	0x035ED998 LDR X0, [X8]
	0x035ED99C BL 0x1C16F10
	0x035ED9A0 ADRP X8, 0xB4C000
	0x035ED9A4 LDR X8, [X8 + 0x6D0]
	0x035ED9A8 MOV X21, X0
	0x035ED9AC LDR X2, [X8]
	0x035ED9B0 MOV X1, X20
	0x035ED9B4 MOV X3, X31
	0x035ED9B8 BL 0x3314368
	0x035ED9BC ADRP X8, 0xB07000
	0x035ED9C0 LDR X8, [X8 + 0x7B8]
	0x035ED9C4 LDR X0, [X8]
	0x035ED9C8 LDR W8, [X0 + 0xE0]
	0x035ED9CC CBNZ W8, 0x35ED9D4
	0x035ED9D0 BL 0x1C16DFC
	0x035ED9D4 MOV X0, X21
	0x035ED9D8 MOV X1, X31
	0x035ED9DC BL 0x33F4BC4
	0x035ED9E0 B 0x35EDA14
	0x035ED9E4 LDUR V0, [X19 + 0x38]
	0x035ED9E8 MOVN W8, 0x0
	0x035ED9EC STR V0, [X31]
	0x035ED9F0 STP X31, X31, [X19 + 0x38]
	0x035ED9F4 STR W8, [X19]
	0x035ED9F8 B 0x35EDA38
	0x035ED9FC LDR X0, [X20 + 0x28]
	0x035EDA00 CBZ X0, 0x35EDAE8
	0x035EDA04 LDR X1, [X8 + 0x10]
	0x035EDA08 LDR W2, [X8 + 0x18]
	0x035EDA0C MOV X4, X31
	0x035EDA10 BL 0x32F1690
	0x035EDA14 CBZ X0, 0x35EDAE4
	0x035EDA18 MOV W1, W31
	0x035EDA1C MOV X2, X31
	0x035EDA20 BL 0x33ED3A0
	0x035EDA24 STP X0, X1, [X31]
	0x035EDA28 ADD X0, X31, 0x0
	0x035EDA2C MOV X1, X31
	0x035EDA30 BL 0x32C40D4
	0x035EDA34 TBZ X0, 0x0, 0x35EDA98
	0x035EDA38 ADD X0, X31, 0x0
	0x035EDA3C MOV X1, X31
	0x035EDA40 BL 0x32C40F0
	0x035EDA44 CBZ X20, 0x35EDADC
	0x035EDA48 LDR X8, [X20 + 0x68]
	0x035EDA4C CBZ X8, 0x35EDAE0
	0x035EDA50 LDP W10, W9, [X8 + 0x1C]
	0x035EDA54 STR X31, [X8 + 0x18]
	0x035EDA58 ADD W9, W10, W9
	0x035EDA5C STR W9, [X8 + 0x20]
	0x035EDA60 MOVN W8, 0x1
	0x035EDA64 STR W8, [X19], #0x8
	0x035EDA68 LDR X0, [X22]
	0x035EDA6C LDR W8, [X0 + 0xE0]
	0x035EDA70 CBNZ W8, 0x35EDA78
	0x035EDA74 BL 0x1C16DFC
	0x035EDA78 MOV X0, X19
	0x035EDA7C MOV X1, X31
	0x035EDA80 BL 0x32C4864
	0x035EDA84 LDP X20, X19, [X31 + 0x30]
	0x035EDA88 LDP X22, X21, [X31 + 0x20]
	0x035EDA8C LDR X30, [X31 + 0x10]
	0x035EDA90 ADD X31, X31, 0x40
	0x035EDA94 RET
	0x035EDA98 STR W31, [X19]
	0x035EDA9C LDR V0, [X31]
	0x035EDAA0 STUR V0, [X19 + 0x38]
	0x035EDAA4 LDR X0, [X22]
	0x035EDAA8 LDR W8, [X0 + 0xE0]
	0x035EDAAC CBNZ W8, 0x35EDAB4
	0x035EDAB0 BL 0x1C16DFC
	0x035EDAB4 ADRP X8, 0xB4C000
	0x035EDAB8 LDR X8, [X8 + 0x6C8]
	0x035EDABC ADD X0, X19, 0x8
	0x035EDAC0 LDR X3, [X8]
	0x035EDAC4 ADD X1, X31, 0x0
	0x035EDAC8 MOV X2, X19

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X20, 0xDF4000
	010 Move W8, [X20+705]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0xB4D000
	017 Move X0, [X0+1592]
	018 Call 0x1C17CF4
	019 Move X0, 0xB4D000
	020 Move X0, [X0+1600]
	021 Call 0x1C17CF4
	022 Move X0, 0xB0A000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xB4D000
	026 Move X0, [X0+1608]
	027 Call 0x1C17CF4
	028 Move X0, 0xB4D000
	029 Move X0, [X0+1616]
	030 Call 0x1C17CF4
	031 Move X0, 0xB4D000
	032 Move X0, [X0+1624]
	033 Call 0x1C17CF4
	034 Move X0, 0xB4D000
	035 Move X0, [X0+792]
	036 Call 0x1C17CF4
	037 Move X0, 0xB4D000
	038 Move X0, [X0+1632]
	039 Call 0x1C17CF4
	040 Move X0, 0xB35000
	041 Move X0, [X0+2448]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+705], W8
	045 Move [X31+76], W31
	046 Move [X31+48], X31
	047 Move [X31+56], X31
	048 Move W8, [X19]
	049 Move [X31+104], W31
	050 Move [X31+108], W8
	051 Move X9, [X19+40]
	052 Move [X31+80], X31
	053 Move [X31+88], X9
	054 Compare W8, 0
	055 JumpIfEqual {101}
	056 Move X0, [X19+32]
	057 Compare X0, 0
	058 JumpIfEqual {341}
	059 Move X8, [X0]
	060 Move X9, [X8+376]
	061 Move X1, [X8+384]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W8, W0
	064 Move X0, [X19+32]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {102}
	069 Compare X0, 0
	070 JumpIfEqual {406}
	071 Move X8, [X0]
	072 Move X9, [X8+488]
	073 Move X1, [X8+496]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X0, 0
	076 JumpIfNotEqual {166}
	077 Move X8, [X19+32]
	078 Compare X8, 0
	079 JumpIfEqual {432}
	080 Move X8, [X8+16]
	081 Compare X8, 0
	082 JumpIfNotEqual {166}
	083 Move X0, 0xB0F000
	084 Move X0, [X0+1400]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X20, X0
	088 Move X0, 0xB4D000
	089 Move X0, [X0+1640]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Move X2, X31
	094 Call ArgumentException..ctor, X0, X1
	095 Move X0, 0xB4D000
	096 Move X0, [X0+1648]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X20
	100 Call 0x1C17DEC
	101 Move X22, X31
	102 Compare X0, 0
	103 JumpIfEqual {407}
	104 Move X8, [X0]
	105 Move X9, [X8+456]
	106 Move X1, [X8+464]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Compare X0, 0
	109 JumpIfEqual {408}
	110 Move X0, [X19+32]
	111 Compare X0, 0
	112 JumpIfEqual {426}
	113 Move X8, [X0]
	114 Move X9, [X8+456]
	115 Move X1, [X8+464]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Compare X0, 0
	118 JumpIfEqual {427}
	119 Move W8, [X0+16]
	120 Compare W8, 0
	121 JumpIfNotEqual {155}
	122 Move X21, 0xB4D000
	123 Move X21, [X21+792]
	124 Move X20, [X19+32]
	125 Move X0, [X21]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X21]
	131 Move X0, [X0+184]
	132 Move X1, X31
	133 Call Interlocked.Increment, X0
	134 Move [X31+104], W0
	135 Move X0, X31
	136 Call NumberFormatInfo.get_InvariantInfo
	137 Move X1, X0
	138 Add X0, X31, 104
	139 Move X2, X31
	140 Call Int32.ToString, X0, X1
	141 Move X1, X0
	142 Move X8, 0xB35000
	143 Move X8, [X8+2448]
	144 Move X0, [X8]
	145 Move X2, X31
	146 Call String.Concat, X0, X1
	147 Move X1, X0
	148 Compare X20, 0
	149 JumpIfEqual {433}
	150 Move X8, [X20]
	151 Move X9, [X8+472]
	152 Move X2, [X8+480]
	153 Move X0, X20
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X0, [X19+32]
	156 Compare X0, 0
	157 JumpIfEqual {428}
	158 Move X8, [X0]
	159 Move X20, [X31+88]
	160 Move X9, [X8+456]
	161 Move X1, [X8+464]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Compare X20, 0
	164 JumpIfEqual {429}
	165 Move [X20+160], X0
	166 Move X20, [X31+88]
	167 Compare X20, 0
	168 JumpIfEqual {342}
	169 Move X0, [X20+64]
	170 Compare X0, 0
	171 JumpIfEqual {175}
	172 Move X1, X31
	173 Call ExceptionDispatchInfo.Throw, X0
	174 Move X20, [X31+88]
	175 Move X8, 0xB4D000
	176 Move X8, [X8+1592]
	177 Move W21, [X19+48]
	178 Move X0, [X8]
	179 Call 0x1C17F10
	180 Move X22, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction CSET not yet implemented."
	183 Move X1, X20
	184 Call AsyncProtocolRequest..ctor, X0, X1, X2
	185 Move X8, [X31+88]
	186 Compare X8, 0
	187 JumpIfEqual {343}
	188 Add X0, X8, 72
	189 Move X1, X22
	190 Move X2, X31
	191 Call 0x1C25138
	192 Compare X0, 0
	193 JumpIfNotEqual {345}
	194 Move X8, [X31+88]
	195 Compare X8, 0
	196 JumpIfEqual {359}
	197 Add X0, X8, 80
	198 Move X1, X22
	199 Move X2, X31
	200 Call 0x1C25138
	201 Compare X0, 0
	202 JumpIfNotEqual {374}
	203 Move X8, [X31+88]
	204 Compare X8, 0
	205 JumpIfEqual {387}
	206 Add X0, X8, 88
	207 Move X1, X22
	208 Move X2, X31
	209 Call 0x1C25138
	210 Compare X0, 0
	211 JumpIfNotEqual {392}
	212 Move W8, [X31+108]
	213 Move X24, 0xB0A000
	214 Move X24, [X24+640]
	215 Add X9, X31, 108
	216 Add X10, X31, 88
	217 Add X11, X31, 80
	218 Add X12, X31, 76
	219 Move [X31+8], X31
	220 Move [X31+16], X9
	221 Move [X31+24], X10
	222 Move [X31+32], X11
	223 Move [X31+40], X12
	224 Compare W8, 0
	225 JumpIfEqual {325}
	226 Move X8, [X31+88]
	227 Compare X8, 0
	228 JumpIfEqual {344}
	229 Move X0, [X8+112]
	230 Move [X31+76], W31
	231 Move [X31+80], X0
	232 Add X1, X31, 76
	233 Move X2, X31
	234 Call Monitor.Enter, X0, X1
	235 Move X8, [X31+88]
	236 Compare X8, 0
	237 JumpIfEqual {358}
	238 Move X9, [X8+56]
	239 Compare X9, 0
	240 JumpIfNotEqual {360}
	241 Move X0, [X8+96]
	242 Compare X0, 0
	243 JumpIfEqual {373}
	244 Call BufferOffsetSize2.Reset, X0
	245 Move X8, [X31+88]
	246 Compare X8, 0
	247 JumpIfEqual {388}
	248 Move X0, [X8+104]
	249 Compare X0, 0
	250 JumpIfEqual {391}
	251 Call BufferOffsetSize2.Reset, X0
	252 Move X20, [X31+88]
	253 Compare X20, 0
	254 JumpIfEqual {405}
	255 Move X8, [X20]
	256 Move X1, [X19+32]
	257 Move X9, [X8+1000]
	258 Move X2, [X8+1008]
	259 Move X0, X20
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move X21, X31
	262 Move [X20+56], X0
	263 Move W23, 20
	264 Move W8, [X31+108]
	265 Move TEMP, X8
	266 And TEMP, TEMP, -2147483648
	267 Compare TEMP, -2147483648
	268 JumpIfNotEqual {275}
	269 Move W8, [X31+76]
	270 Compare W8, 0
	271 JumpIfEqual {275}
	272 Move X0, [X31+80]
	273 Move X1, X31
	274 Call Monitor.Exit, X0
	275 Compare X21, 0
	276 JumpIfNotEqual {389}
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Compare W23, 0
	279 JumpIfNotEqual {524}
	280 Move W8, [X31+108]
	281 Compare W8, 0
	282 JumpIfEqual {325}
	283 Compare X22, 0
	284 JumpIfEqual {430}
	285 Move X1, [X19+56]
	286 Move X0, X22
	287 Call AsyncProtocolRequest.StartOperation, X0, X1
	288 Compare X0, 0
	289 JumpIfEqual {431}
	290 Move X8, 0xB4D000
	291 Move X8, [X8+1632]
	292 Move X2, [X8]
	293 Move W1, W31
	294 Call Task`1<Object>.ConfigureAwait, X0, X1
	295 Move X8, 0xB4D000
	296 Move X8, [X8+1624]
	297 Move [X31+48], X0
	298 Move [X31+56], X1
	299 Move X8, [X8]
	300 Add X0, X31, 48
	301 Move X1, X8
	302 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {334}
	307 Move [X31+108], W31
	308 Move [X19], W31
	309 Move V0, [X31+3]
	310 Move [X19+4], V0
	311 Move X0, [X24]
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Move X8, 0xB4D000
	317 Move X8, [X8+1600]
	318 Add X0, X19, 8
	319 Move X3, [X8]
	320 Add X1, X31, 48
	321 Move X2, X19
	322 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	323 Move X20, X31
	324 Move W23, 26
	325 Move V0, [X19+4]
	326 Move TEMP, 0
	327 Not TEMP
	328 Move W8, TEMP
	329 Move [X31+3], V0
	330 Move [X19+64], X31
	331 Move [X19+72], X31
	332 Move [X31+108], W8
	333 Move [X19], W8
	334 Move X8, 0xB4D000
	335 Move X8, [X8+1616]
	336 Add X0, X31, 48
	337 Move X1, [X8]
	338 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	339 Move X20, X0
	340 Move W23, 29
	341 Call 0x1C17F20
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Move X0, 0xB4D000
	346 Move X0, [X0+792]
	347 Call 0x1C17D08
	348 Move W8, [X0+224]
	349 Compare W8, 0
	350 JumpIfNotEqual {352}
	351 Call 0x1C17DFC
	352 Call MobileAuthenticatedStream.GetInvalidNestedCallException
	353 Move X0, 0xB4D000
	354 Move X0, [X0+1648]
	355 Call 0x1C17D08
	356 Move X1, X0
	357 Call 0x1C17DEC
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Move X0, 0xB07000
	361 Move X0, [X0+1456]
	362 Call 0x1C17D08
	363 Call 0x1C17F10
	364 Move X20, X0
	365 Move X1, X31
	366 Call InvalidOperationException..ctor, X0
	367 Move X0, 0xB4D000
	368 Move X0, [X0+1648]
	369 Call 0x1C17D08
	370 Move X1, X0
	371 Move X0, X20
	372 Call 0x1C17DEC
	373 Call 0x1C17F20
	374 Move X0, 0xB4D000
	375 Move X0, [X0+792]
	376 Call 0x1C17D08
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {381}
	380 Call 0x1C17DFC
	381 Call MobileAuthenticatedStream.GetInvalidNestedCallException
	382 Move X0, 0xB4D000
	383 Move X0, [X0+1648]
	384 Call 0x1C17D08
	385 Move X1, X0
	386 Call 0x1C17DEC
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Move X0, X21
	390 Call 0x1C17F18
	391 Call 0x1C17F20
	392 Move X0, 0xB4D000
	393 Move X0, [X0+792]
	394 Call 0x1C17D08
	395 Move W8, [X0+224]
	396 Compare W8, 0
	397 JumpIfNotEqual {399}
	398 Call 0x1C17DFC
	399 Call MobileAuthenticatedStream.GetInvalidNestedCallException
	400 Move X0, 0xB4D000
	401 Move X0, [X0+1648]
	402 Call 0x1C17D08
	403 Move X1, X0
	404 Call 0x1C17DEC
	405 Call 0x1C17F20
	406 Call 0x1C17F20
	407 Call 0x1C17F20
	408 Move X0, 0xB0F000
	409 Move X0, [X0+1400]
	410 Call 0x1C17D08
	411 Call 0x1C17F10
	412 Move X20, X0
	413 Move X0, 0xB4D000
	414 Move X0, [X0+1656]
	415 Call 0x1C17D08
	416 Move X1, X0
	417 Move X0, X20
	418 Move X2, X31
	419 Call ArgumentException..ctor, X0, X1
	420 Move X0, 0xB4D000
	421 Move X0, [X0+1648]
	422 Call 0x1C17D08
	423 Move X1, X0
	424 Move X0, X20
	425 Call 0x1C17DEC
	426 Call 0x1C17F20
	427 Call 0x1C17F20
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F20
	431 Call 0x1C17F20
	432 Call 0x1C17F20
	433 Call 0x1C17F20
	434 Move X20, X1
	435 Move X23, X0
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move X0, X23
	438 Call 0x3EB2AD0
	439 Move X20, X0
	440 Move X0, 0xB07000
	441 Move X0, [X0+2000]
	442 Call 0x1C17D08
	443 Move X8, [X20]
	444 Move X1, [X8]
	445 Call 0x1C18270
	446 Move TEMP, X0
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfNotEqual {481}
	450 Move X20, [X20]
	451 Call 0x3EB2AE0
	452 Move X21, [X31+88]
	453 Move X0, 0xB4D000
	454 Move X0, [X0+792]
	455 Call 0x1C17D08
	456 Move W8, [X0+224]
	457 Compare W8, 0
	458 JumpIfNotEqual {460}
	459 Call 0x1C17DFC
	460 Move X0, X20
	461 Call MobileAuthenticatedStream.GetSSPIException, X0
	462 Compare X21, 0
	463 JumpIfEqual {489}
	464 Move X1, X31
	465 Call ExceptionDispatchInfo.Capture, X0
	466 Move X20, X0
	467 Add X0, X21, 64
	468 Move X1, X20
	469 Move X2, X31
	470 Call 0x1C25138
	471 NotImplemented "Instruction CMP not yet implemented."
	472 NotImplemented "Instruction CSEL not yet implemented."
	473 Move X0, 0xB4D000
	474 Move X0, [X0+1056]
	475 Call 0x1C17D08
	476 Call 0x1C17F10
	477 Move X20, X0
	478 Move X1, X31
	479 Call Object..ctor, X0
	480 Move [X20+24], X21
	481 Move W0, 8
	482 Call 0x3EB2AF0
	483 Move X8, [X20]
	484 Move [X0], X8
	485 Move X1, 0x8C8000
	486 Add X1, X1, 3672
	487 Move X2, X31
	488 Call 0x3EB2B00
	489 Call 0x1C17F20
	490 Move X20, X1
	491 Move X23, X0
	492 Call 0x3EB2AE0
	493 Move X20, X1
	494 Move X23, X0
	495 Move X20, X1
	496 Move X23, X0
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Move X0, X23
	499 Call 0x3EB2AD0
	500 Move X21, [X0]
	501 Call 0x3EB2AE0
	502 Move W23, W31
	503 Move X21, X31
	504 Move W8, [X31+108]
	505 Move TEMP, X8
	506 And TEMP, TEMP, -2147483648
	507 Compare TEMP, -2147483648
	508 JumpIfNotEqual {515}
	509 Move W8, [X31+76]
	510 Compare W8, 0
	511 JumpIfEqual {515}
	512 Move X0, [X31+80]
	513 Move X1, X31
	514 Call Monitor.Exit, X0
	515 Compare X21, 0
	516 JumpIfNotEqual {559}
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X0, X23
	519 Call 0x3EB2AD0
	520 Move X8, [X0]
	521 Move [X31+8], X8
	522 Call 0x3EB2AE0
	523 Move W23, W31
	524 Move X20, X31
	525 Add X0, X31, 8
	526 Call 0x1BC59BC
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Compare W23, 0
	529 JumpIfNotEqual {549}
	530 Compare X20, 0
	531 JumpIfEqual {558}
	532 Move X0, [X20+24]
	533 Compare X0, 0
	534 JumpIfEqual {537}
	535 Move X1, X31
	536 Call ExceptionDispatchInfo.Throw, X0
	537 Move TEMP, 1
	538 Not TEMP
	539 Move W8, TEMP
	540 Move [X19+8], W8
	541 Move X0, [X24]
	542 Move W8, [X0+224]
	543 Compare W8, 0
	544 JumpIfNotEqual {546}
	545 Call 0x1C17DFC
	546 Move X0, X19
	547 Move X1, X31
	548 Call AsyncTaskMethodBuilder.SetResult, X0
	549 Move X20, [X31+144]
	550 Move X19, [X31+152]
	551 Move X22, [X31+128]
	552 Move X21, [X31+136]
	553 Move X24, [X31+112]
	554 Move X23, [X31+120]
	555 Move X30, [X31+96]
	556 Add X31, X31, 160
	557 Return 
	558 Call 0x1C17F20
	559 Move X0, X21
	560 Call 0x1C17F18
	561 Move X20, X1
	562 Move X23, X0
	563 Add X0, X31, 8
	564 Call 0x1BC59BC
	565 Move X20, X1
	566 Move X23, X0
	567 Move X20, X1
	568 Move X23, X0
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move X0, X23
	571 Call 0x3EB2AD0
	572 Move X20, X0
	573 Move X0, 0xB07000
	574 Move X0, [X0+2000]
	575 Call 0x1C17D08
	576 Move X8, [X20]
	577 Move X1, [X8]
	578 Call 0x1C18270
	579 Move TEMP, X0
	580 And TEMP, TEMP, 1
	581 Compare TEMP, 1
	582 JumpIfNotEqual {600}
	583 Move X20, [X20]
	584 Call 0x3EB2AE0
	585 Move TEMP, 1
	586 Not TEMP
	587 Move W8, TEMP
	588 Move [X19+8], W8
	589 Move X0, 0xB0A000
	590 Move X0, [X0+640]
	591 Call 0x1C17D08
	592 Move W8, [X0+224]
	593 Compare W8, 0
	594 JumpIfNotEqual {596}
	595 Call 0x1C17DFC
	596 Move X0, X19
	597 Move X1, X20
	598 Move X2, X31
	599 Call AsyncTaskMethodBuilder.SetException, X0, X1
	600 Move W0, 8
	601 Call 0x3EB2AF0
	602 Move X8, [X20]
	603 Move [X0], X8
	604 Move X1, 0x8C8000
	605 Add X1, X1, 3672
	606 Move X2, X31
	607 Call 0x3EB2B00
	608 Move X23, X0
	609 Call 0x3EB2AE0
	610 Move X0, X23
	611 Call 0x1D2D690
	612 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035EDACC BL 0x218BE84
	0x035EDAD0 B 0x35EDA84
	0x035EDAD4 BL 0x1C16F20
	0x035EDAD8 BL 0x1C16F20
	0x035EDADC BL 0x1C16F20
	0x035EDAE0 BL 0x1C16F20
	0x035EDAE4 BL 0x1C16F20
	0x035EDAE8 BL 0x1C16F20
	0x035EDAEC B 0x35EDB20
	0x035EDAF0 B 0x35EDB20
	0x035EDAF4 B 0x35EDB20
	0x035EDAF8 B 0x35EDB20
	0x035EDAFC B 0x35EDB20
	0x035EDB00 B 0x35EDB20
	0x035EDB04 B 0x35EDB20
	0x035EDB08 B 0x35EDB20
	0x035EDB0C B 0x35EDB20
	0x035EDB10 B 0x35EDB20
	0x035EDB14 B 0x35EDB20
	0x035EDB18 B 0x35EDB20
	0x035EDB1C B 0x35EDB20
	0x035EDB20 MOV X20, X0
	0x035EDB24 CMP W1, 0x1
	0x035EDB28 B.NE 0x35EDBB8
	0x035EDB2C MOV X0, X20
	0x035EDB30 BL 0x3EB1AD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDF4000
	007 Move X22, 0xB0A000
	008 Move W8, [X21+706]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB0A000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+706], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

