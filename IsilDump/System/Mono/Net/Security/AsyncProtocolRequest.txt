Type: Mono.Net.Security.AsyncProtocolRequest

Method: Mono.Net.Security.MobileAuthenticatedStream get_Parent()

Disassembly:
	0x035E8C68 STP X19, X20, [X31 + 0x40]
	0x035E8C6C ADRP X19, 0xB51000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean get_RunSynchronously()

Disassembly:
	0x035E8C70 LDR W8, [X0 + 0xE0]
	0x035E8C74 LDR X19, [X19 + 0x4A0]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x035E8C78 CBNZ W8, 0x35E8C80
	0x035E8C7C BL 0x1C16DFC
	0x035E8C80 ADD X8, X31, 0x8
	0x035E8C84 MOV X0, X31
	0x035E8C88 BL 0x32C4770
	0x035E8C8C LDUR V0, [X31 + 0x8]
	0x035E8C90 LDR X9, [X31 + 0x18]
	0x035E8C94 LDR X2, [X19]
	0x035E8C98 ADD X8, X31, 0x20

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X31
	003 Call "il2cpp_vm_object_is_inst", X0
	004 Compare X0, 0
	005 JumpIfEqual {11}
	006 Move X8, [X0]
	007 Move X2, [X8+424]
	008 Move X1, [X8+432]
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

Method: System.Int32 get_UserResult()

Disassembly:
	0x035E8C9C ORR X19, X8, 0xF
	0x035E8CA0 MOVN W10, 0x0

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Void set_UserResult(System.Int32 value)

Disassembly:
	0x035E8CA4 ADD X1, X31, 0x20
	0x035E8CA8 MOV X0, X19

ISIL:
	001 Move [X0+28], W1
	002 Return 

Method: System.Void .ctor(Mono.Net.Security.MobileAuthenticatedStream parent, System.Boolean sync)

Disassembly:
	0x035E8CAC STUR V0, [X31 + 0x28]
	0x035E8CB0 STR X9, [X31 + 0x38]
	0x035E8CB4 STR W10, [X31 + 0x20]
	0x035E8CB8 BL 0x21953B8
	0x035E8CBC MOV X0, X19
	0x035E8CC0 MOV X1, X31
	0x035E8CC4 BL 0x32C47F8
	0x035E8CC8 LDP X20, X19, [X31 + 0x90]
	0x035E8CCC LDP X22, X21, [X31 + 0x80]
	0x035E8CD0 LDP X30, X23, [X31 + 0x70]
	0x035E8CD4 ADD X31, X31, 0xA0
	0x035E8CD8 RET
	0x035E8CDC STR X30, [X31 - 0x30]!
	0x035E8CE0 STP X22, X21, [X31 + 0x10]
	0x035E8CE4 STP X20, X19, [X31 + 0x20]
	0x035E8CE8 ADRP X21, 0xDF8000
	0x035E8CEC ADRP X22, 0xB0E000
	0x035E8CF0 LDRB W8, [X21 + 0x2A4]
	0x035E8CF4 LDR X22, [X22 + 0x280]
	0x035E8CF8 MOV X19, X1
	0x035E8CFC MOV X20, X0
	0x035E8D00 TBNZ X8, 0x0, 0x35E8D18
	0x035E8D04 ADRP X0, 0xB0E000
	0x035E8D08 LDR X0, [X0 + 0x280]
	0x035E8D0C BL 0x1C16CF4
	0x035E8D10 MOVZ W8, 0x1
	0x035E8D14 STRB W8, [X21 + 0x2A4]
	0x035E8D18 LDR X0, [X22]
	0x035E8D1C LDR W8, [X0 + 0xE0]
	0x035E8D20 CBNZ W8, 0x35E8D28
	0x035E8D24 BL 0x1C16DFC
	0x035E8D28 ADD X0, X20, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xDF9000
	008 Move X22, 0xB12000
	009 Move W8, [X23+668]
	010 Move X22, [X22+3264]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB12000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+668], W8
	023 Move X0, [X22]
	024 And W22, W21, 1
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X21, X0
	028 Call Object..ctor, X0
	029 Move X0, X19
	030 Move X1, X31
	031 Move [X19+48], X21
	032 Call Object..ctor, X0
	033 Move [X19+16], X20
	034 Move [X19+24], W22
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Return 

Method: System.Void RequestRead(System.Int32 size)

Disassembly:
	0x035E8D2C MOV X1, X19
	0x035E8D30 LDP X20, X19, [X31 + 0x20]
	0x035E8D34 LDP X22, X21, [X31 + 0x10]
	0x035E8D38 MOV X2, X31
	0x035E8D3C LDR X30, [X31], #0x30
	0x035E8D40 B 0x32C477C
	0x035E8D44 SUB X31, X31, 0x40
	0x035E8D48 STR X30, [X31 + 0x10]
	0x035E8D4C STP X22, X21, [X31 + 0x20]
	0x035E8D50 STP X20, X19, [X31 + 0x30]
	0x035E8D54 ADRP X20, 0xDF8000
	0x035E8D58 LDRB W8, [X20 + 0x2A5]
	0x035E8D5C MOV X19, X0
	0x035E8D60 TBNZ X8, 0x0, 0x35E8DE4
	0x035E8D64 ADRP X0, 0xB51000
	0x035E8D68 LDR X0, [X0 + 0x4A8]
	0x035E8D6C BL 0x1C16CF4
	0x035E8D70 ADRP X0, 0xB51000
	0x035E8D74 LDR X0, [X0 + 0x4B0]
	0x035E8D78 BL 0x1C16CF4
	0x035E8D7C ADRP X0, 0xB51000
	0x035E8D80 LDR X0, [X0 + 0x3F8]
	0x035E8D84 BL 0x1C16CF4
	0x035E8D88 ADRP X0, 0xB3F000
	0x035E8D8C LDR X0, [X0 + 0x2B8]
	0x035E8D90 BL 0x1C16CF4
	0x035E8D94 ADRP X0, 0xB3F000
	0x035E8D98 LDR X0, [X0 + 0x2C0]
	0x035E8D9C BL 0x1C16CF4
	0x035E8DA0 ADRP X0, 0xB3F000
	0x035E8DA4 LDR X0, [X0 + 0x2C8]
	0x035E8DA8 BL 0x1C16CF4
	0x035E8DAC ADRP X0, 0xB12000
	0x035E8DB0 LDR X0, [X0 + 0x5F0]
	0x035E8DB4 BL 0x1C16CF4
	0x035E8DB8 ADRP X0, 0xB0C000
	0x035E8DBC LDR X0, [X0 + 0x470]
	0x035E8DC0 BL 0x1C16CF4
	0x035E8DC4 ADRP X0, 0xB0E000
	0x035E8DC8 LDR X0, [X0 + 0xEF8]
	0x035E8DCC BL 0x1C16CF4
	0x035E8DD0 ADRP X0, 0xB3F000
	0x035E8DD4 LDR X0, [X0 + 0x2D0]
	0x035E8DD8 BL 0x1C16CF4
	0x035E8DDC MOVZ W8, 0x1
	0x035E8DE0 STRB W8, [X20 + 0x2A5]
	0x035E8DE4 STP X31, X31, [X31]
	0x035E8DE8 ADRP X21, 0xB51000
	0x035E8DEC LDR W8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+48]
	007 Move W22, W1
	008 Move X21, X0
	009 Move [X31+12], W31
	010 Add X1, X31, 12
	011 Move X0, X19
	012 Move X2, X31
	013 Call Monitor.Enter, X0, X1
	014 Move W8, [X21+36]
	015 Move X20, X31
	016 Add W8, W8, W22
	017 Move [X21+36], W8
	018 Move W8, [X31+12]
	019 Compare W8, 0
	020 JumpIfEqual {24}
	021 Move X0, X19
	022 Move X1, X31
	023 Call Monitor.Exit, X0
	024 Compare X20, 0
	025 JumpIfNotEqual {32}
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return 
	032 Move X0, X20
	033 Call 0x1C17F18
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X21, X0
	036 Move X0, X21
	037 Call 0x3EB2AD0
	038 Move X20, [X0]
	039 Call 0x3EB2AE0
	040 Move X20, X31
	041 Move X21, X0
	042 Move W8, [X31+12]
	043 Compare W8, 0
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Monitor.Exit, X0
	048 Compare X20, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X21
	051 Call 0x1D2D690
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Call 0x1991590

Method: System.Void RequestWrite()

Disassembly:
	0x035E8DF0 LDR X22, [X19 + 0x20]
	0x035E8DF4 LDR X21, [X21 + 0x3F8]
	0x035E8DF8 CBZ W8, 0x35E8E1C

ISIL:
	001 Move W8, 1
	002 Move [X0+40], W8
	003 Return 

Method: System.Threading.Tasks.Task`1<Mono.Net.Security.AsyncProtocolResult> StartOperation(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035E8DFC STR X31, [X19 + 0x30]
	0x035E8E00 CBZ X22, 0x35E8E34
	0x035E8E04 ADD X0, X22, 0x24
	0x035E8E08 MOV W1, W31
	0x035E8E0C MOV X2, X31
	0x035E8E10 BL 0x33E9064
	0x035E8E14 MOV W2, W0
	0x035E8E18 B 0x35E8F1C
	0x035E8E1C LDR V0, [X19 + 0x4]
	0x035E8E20 MOVN W8, 0x0
	0x035E8E24 STR V0, [X31]
	0x035E8E28 STP X31, X31, [X19 + 0x40]
	0x035E8E2C STR W8, [X19]
	0x035E8E30 B 0x35E8E8C
	0x035E8E34 BL 0x1C16F20
	0x035E8E38 B 0x35E9030
	0x035E8E3C B 0x35E9030
	0x035E8E40 LDR X0, [X22 + 0x10]
	0x035E8E44 CBZ X0, 0x35E8FCC
	0x035E8E48 LDRB W1, [X22 + 0x18]
	0x035E8E4C LDR X3, [X19 + 0x28]
	0x035E8E50 BL 0x35E90E0
	0x035E8E54 CBZ X0, 0x35E8FC8
	0x035E8E58 ADRP X8, 0xB3F000
	0x035E8E5C LDR X8, [X8 + 0x2D0]
	0x035E8E60 LDR X2, [X8]
	0x035E8E64 MOV W1, W31
	0x035E8E68 BL 0x269D3A8
	0x035E8E6C ADRP X8, 0xB3F000
	0x035E8E70 LDR X8, [X8 + 0x2C8]
	0x035E8E74 STP X0, X1, [X31]
	0x035E8E78 LDR X8, [X8]
	0x035E8E7C ADD X0, X31, 0x0
	0x035E8E80 MOV X1, X8
	0x035E8E84 BL 0x2998978
	0x035E8E88 TBZ X0, 0x0, 0x35E8F7C
	0x035E8E8C ADRP X8, 0xB3F000
	0x035E8E90 LDR X8, [X8 + 0x2C0]
	0x035E8E94 LDR X1, [X8]
	0x035E8E98 ADD X0, X31, 0x0
	0x035E8E9C BL 0x29989C4
	0x035E8EA0 ADRP X9, 0xB0C000
	0x035E8EA4 LDR X9, [X9 + 0x470]
	0x035E8EA8 MOV W20, W0
	0x035E8EAC CMP W0, 0x0
	0x035E8EB0 B.LE 0x35E8F30
	0x035E8EB4 LDR W8, [X19 + 0x38]
	0x035E8EB8 CMP W20, W8
	0x035E8EBC B.GT 0x35E8FD0
	0x035E8EC0 LDR X10, [X19 + 0x30]
	0x035E8EC4 ANDS W31, W10, 0xFF
	0x035E8EC8 B.EQ 0x35E8EF0
	0x035E8ECC LDR X2, [X9]
	0x035E8ED0 UBFM X8, X10, 0x20, 0x3F
	0x035E8ED4 ADD W1, W20, W8
	0x035E8ED8 STR X31, [X31 + 0x18]
	0x035E8EDC ADD X0, X31, 0x18
	0x035E8EE0 BL 0x24341FC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0xDF9000
	008 Move X21, 0xB52000
	009 Move W8, [X22+669]
	010 Move X21, [X21+976]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB52000
	018 Move X0, [X0+984]
	019 Call 0x1C17CF4
	020 Move X0, 0xB52000
	021 Move X0, [X0+992]
	022 Call 0x1C17CF4
	023 Move X0, 0xB52000
	024 Move X0, [X0+1000]
	025 Call 0x1C17CF4
	026 Move X0, 0xB52000
	027 Move X0, [X0+976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+669], W8
	031 Move X0, [X21]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+32], V0
	034 Move [X31+40], V0
	035 Move [X31], V0
	036 Move [X31+8], V0
	037 Move [X31+32], X20
	038 Move [X31+40], X19
	039 Move X19, 0xB52000
	040 Move X21, 0xB52000
	041 Move X20, 0xB52000
	042 Move W8, [X0+224]
	043 Move X19, [X19+984]
	044 Move X21, [X21+992]
	045 Move X20, [X20+1000]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, [X19]
	050 Add X8, X31, 0
	051 Or X19, X8, 15
	052 Move X8, X19
	053 Call AsyncTaskMethodBuilder`1<Object>.Create
	054 Move X2, [X21]
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W8, TEMP
	058 Add X1, X31, 0
	059 Move X0, X19
	060 Move [X31], W8
	061 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	062 Move X1, [X20]
	063 Move X0, X19
	064 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	065 Move X20, [X31+96]
	066 Move X19, [X31+104]
	067 Move X22, [X31+80]
	068 Move X21, [X31+88]
	069 Move X30, [X31+64]
	070 Add X31, X31, 112
	071 Return X0

Method: System.Threading.Tasks.Task ProcessOperation(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035E8EE4 LDR X9, [X31 + 0x18]
	0x035E8EE8 LDR W8, [X19 + 0x38]
	0x035E8EEC B 0x35E8EF4
	0x035E8EF0 MOV X9, X31
	0x035E8EF4 SUB W8, W8, W20
	0x035E8EF8 STR X9, [X19 + 0x30]
	0x035E8EFC STR W8, [X19 + 0x38]
	0x035E8F00 CBZ X22, 0x35E9004
	0x035E8F04 ADD X0, X22, 0x24
	0x035E8F08 MOV W1, W31
	0x035E8F0C MOV X2, X31
	0x035E8F10 BL 0x33E9064
	0x035E8F14 LDR W8, [X19 + 0x38]
	0x035E8F18 ADD W2, W8, W0
	0x035E8F1C CMP W2, 0x0
	0x035E8F20 STR W2, [X19 + 0x38]
	0x035E8F24 B.GT 0x35E8E40
	0x035E8F28 LDR X20, [X19 + 0x30]
	0x035E8F2C B 0x35E8F48
	0x035E8F30 LDR X2, [X9]
	0x035E8F34 STR X31, [X31 + 0x18]
	0x035E8F38 ADD X0, X31, 0x18
	0x035E8F3C MOV W1, W20
	0x035E8F40 BL 0x24341FC
	0x035E8F44 LDR X20, [X31 + 0x18]
	0x035E8F48 MOVN W8, 0x1
	0x035E8F4C STR W8, [X19], #0x8
	0x035E8F50 LDR X0, [X21]
	0x035E8F54 ADRP X21, 0xB51000
	0x035E8F58 LDR W8, [X0 + 0xE0]
	0x035E8F5C LDR X21, [X21 + 0x4B0]
	0x035E8F60 CBNZ W8, 0x35E8F68
	0x035E8F64 BL 0x1C16DFC
	0x035E8F68 LDR X2, [X21]
	0x035E8F6C MOV X0, X19
	0x035E8F70 MOV X1, X20
	0x035E8F74 BL 0x24DA9F8
	0x035E8F78 B 0x35E8FB4
	0x035E8F7C STR W31, [X19]
	0x035E8F80 LDR V0, [X31]
	0x035E8F84 STR V0, [X19 + 0x4]
	0x035E8F88 LDR X0, [X21]
	0x035E8F8C LDR W8, [X0 + 0xE0]
	0x035E8F90 CBNZ W8, 0x35E8F98
	0x035E8F94 BL 0x1C16DFC
	0x035E8F98 ADRP X8, 0xB51000
	0x035E8F9C LDR X8, [X8 + 0x4A8]
	0x035E8FA0 ADD X0, X19, 0x8
	0x035E8FA4 LDR X3, [X8]
	0x035E8FA8 ADD X1, X31, 0x0
	0x035E8FAC MOV X2, X19
	0x035E8FB0 BL 0x1FA9294
	0x035E8FB4 LDP X20, X19, [X31 + 0x30]
	0x035E8FB8 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X22, 0xDF9000
	008 Move X21, 0xB0F000
	009 Move W8, [X22+670]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB52000
	018 Move X0, [X0+1008]
	019 Call 0x1C17CF4
	020 Move X0, 0xB0F000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+670], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+112], X31
	028 Move [X31+80], V0
	029 Move [X31+88], V0
	030 Move [X31+48], V0
	031 Move [X31+56], V0
	032 Move [X31+2], V0
	033 Move [X31+64], X19
	034 Move [X31+72], X20
	035 Move X19, 0xB52000
	036 Move W8, [X0+224]
	037 Move X19, [X19+1008]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X8, X31, 8
	042 Move X0, X31
	043 Call AsyncTaskMethodBuilder.Create
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X9, [X31+24]
	046 Move X2, [X19]
	047 Add X8, X31, 32
	048 Or X19, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X19
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+32], W10
	057 Call AsyncTaskMethodBuilder.Start, X0, X1
	058 Move X0, X19
	059 Move X1, X31
	060 Call AsyncTaskMethodBuilder.get_Task, X0
	061 Move X20, [X31+160]
	062 Move X19, [X31+168]
	063 Move X22, [X31+144]
	064 Move X21, [X31+152]
	065 Move X30, [X31+128]
	066 Add X31, X31, 176
	067 Return X0

Method: System.Threading.Tasks.Task`1<System.Nullable`1<System.Int32>> InnerRead(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035E8FBC LDR X30, [X31 + 0x10]
	0x035E8FC0 ADD X31, X31, 0x40
	0x035E8FC4 RET
	0x035E8FC8 BL 0x1C16F20
	0x035E8FCC BL 0x1C16F20
	0x035E8FD0 ADRP X0, 0xB0B000
	0x035E8FD4 LDR X0, [X0 + 0x5B0]
	0x035E8FD8 BL 0x1C16D08
	0x035E8FDC BL 0x1C16F10
	0x035E8FE0 MOV X20, X0
	0x035E8FE4 MOV X1, X31
	0x035E8FE8 BL 0x337DEC0
	0x035E8FEC ADRP X0, 0xB51000
	0x035E8FF0 LDR X0, [X0 + 0x4B8]
	0x035E8FF4 BL 0x1C16D08
	0x035E8FF8 MOV X1, X0
	0x035E8FFC MOV X0, X20
	0x035E9000 BL 0x1C16DEC
	0x035E9004 BL 0x1C16F20
	0x035E9008 B 0x35E9030
	0x035E900C B 0x35E9030
	0x035E9010 B 0x35E9030
	0x035E9014 B 0x35E9030
	0x035E9018 B 0x35E9030
	0x035E901C B 0x35E9030
	0x035E9020 B 0x35E9030
	0x035E9024 B 0x35E9030
	0x035E9028 B 0x35E9030
	0x035E902C B 0x35E9030
	0x035E9030 MOV X20, X0
	0x035E9034 CMP W1, 0x1
	0x035E9038 B.NE 0x35E90D4
	0x035E903C MOV X0, X20
	0x035E9040 BL 0x3EB1AD0
	0x035E9044 MOV X20, X0
	0x035E9048 ADRP X0, 0xB0A000
	0x035E904C LDR X0, [X0 + 0x7D0]
	0x035E9050 BL 0x1C16D08
	0x035E9054 LDR X8, [X20]
	0x035E9058 LDR X1, [X8]
	0x035E905C BL 0x1C17270
	0x035E9060 TBZ X0, 0x0, 0x35E90AC
	0x035E9064 LDR X20, [X20]
	0x035E9068 BL 0x3EB1AE0
	0x035E906C MOVN W8, 0x1
	0x035E9070 STR W8, [X19], #0x8
	0x035E9074 ADRP X0, 0xB50000
	0x035E9078 LDR X0, [X0 + 0x3F8]
	0x035E907C BL 0x1C16D08
	0x035E9080 LDR W8, [X0 + 0xE0]
	0x035E9084 CBNZ W8, 0x35E908C
	0x035E9088 BL 0x1C16DFC
	0x035E908C ADRP X0, 0xB50000
	0x035E9090 LDR X0, [X0 + 0x4C0]
	0x035E9094 BL 0x1C16D08
	0x035E9098 MOV X2, X0
	0x035E909C MOV X0, X19
	0x035E90A0 MOV X1, X20
	0x035E90A4 BL 0x24DAC10
	0x035E90A8 B 0x35E8FB4
	0x035E90AC MOVZ W0, 0x8
	0x035E90B0 BL 0x3EB1AF0
	0x035E90B4 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X22, 0xDF9000
	008 Move X21, 0xB52000
	009 Move W8, [X22+671]
	010 Move X21, [X21+1016]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB52000
	018 Move X0, [X0+1024]
	019 Call 0x1C17CF4
	020 Move X0, 0xB52000
	021 Move X0, [X0+1032]
	022 Call 0x1C17CF4
	023 Move X0, 0xB51000
	024 Move X0, [X0+1040]
	025 Call 0x1C17CF4
	026 Move X0, 0xB51000
	027 Move X0, [X0+1016]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+671], W8
	031 Move X0, [X21]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move [X31+64], X20
	039 Move [X31+72], X19
	040 Move X21, 0xB51000
	041 Move X19, 0xB51000
	042 Move X20, 0xB51000
	043 Move W8, [X0+224]
	044 Move X21, [X21+1024]
	045 Move X19, [X19+1032]
	046 Move X20, [X20+1040]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X21]
	051 Add X8, X31, 8
	052 Call 0x24DB964
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X9, [X31+24]
	055 Move X2, [X19]
	056 Add X8, X31, 32
	057 Or X19, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X19
	063 Move [X31+40], V0
	064 Move [X31+56], X9
	065 Move [X31+32], W10
	066 Call 0x1FAA4A8, X0, X1
	067 Move X1, [X20]
	068 Move X0, X19
	069 Call 0x24DB978, X0
	070 Move X20, [X31+144]
	071 Move X19, [X31+152]
	072 Move X22, [X31+128]
	073 Move X21, [X31+136]
	074 Move X30, [X31+112]
	075 Add X31, X31, 160
	076 Return X0

Method: Mono.Net.Security.AsyncOperationStatus Run(Mono.Net.Security.AsyncOperationStatus status)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String ToString()

Disassembly:
	0x035E90B8 STR X8, [X0]
	0x035E90BC ADRP X1, 0x8CB000
	0x035E90C0 ADD X1, X1, 0xE58
	0x035E90C4 MOV X2, X31
	0x035E90C8 BL 0x3EB1B00
	0x035E90CC MOV X20, X0
	0x035E90D0 BL 0x3EB1AE0
	0x035E90D4 MOV X0, X20
	0x035E90D8 BL 0x1D2C690
	0x035E90DC BL 0x1990590
	0x035E90E0 SUB X31, X31, 0xB0
	0x035E90E4 STR X30, [X31 + 0x70]
	0x035E90E8 STP X24, X23, [X31 + 0x80]
	0x035E90EC STP X22, X21, [X31 + 0x90]
	0x035E90F0 STP X20, X19, [X31 + 0xA0]
	0x035E90F4 ADRP X24, 0xDF7000
	0x035E90F8 ADRP X23, 0xB39000
	0x035E90FC LDRB W8, [X24 + 0x2BD]
	0x035E9100 LDR X23, [X23 + 0xDA0]
	0x035E9104 MOV X19, X3
	0x035E9108 MOV W20, W2
	0x035E910C MOV W22, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDF8000
	006 Move X20, 0xB51000
	007 Move W8, [X21+672]
	008 Move X20, [X20+1048]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB51000
	015 Move X0, [X0+1048]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+672], W8
	019 Move X0, X19
	020 Call AsyncProtocolRequest.get_Name, X0
	021 Move X8, [X20]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X1, X0
	025 Move X2, X31
	026 Move X0, X8
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call String.Format, X0, X1
	030 Return X0

