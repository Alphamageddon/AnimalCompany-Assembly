Type: Mono.Net.Security.MobileAuthenticatedStream

Method: System.Void .ctor(System.IO.Stream innerStream, System.Boolean leaveInnerStreamOpen, System.Net.Security.SslStream owner, Mono.Security.Interface.MonoTlsSettings settings, Mono.Net.Security.MobileTlsProvider provider)

Disassembly:
	0x035E8244 MOV X1, X31
	0x035E8248 BL 0x33BDD8C
	0x035E824C STR W22, [X21 + 0x10]
	0x035E8250 MOVN W8, 0x1
	0x035E8254 STR W8, [X19], #0x8
	0x035E8258 LDR X0, [X23]
	0x035E825C ADRP X20, 0xB51000
	0x035E8260 LDR W8, [X0 + 0xE0]
	0x035E8264 LDR X20, [X20 + 0x430]
	0x035E8268 CBNZ W8, 0x35E8270
	0x035E826C BL 0x1C16DFC
	0x035E8270 LDR X2, [X20]
	0x035E8274 MOV X0, X19
	0x035E8278 MOV X1, X21
	0x035E827C BL 0x26322B0
	0x035E8280 LDP X20, X19, [X31 + 0x30]
	0x035E8284 LDP X22, X21, [X31 + 0x20]
	0x035E8288 LDP X30, X23, [X31 + 0x10]
	0x035E828C ADD X31, X31, 0x40
	0x035E8290 RET
	0x035E8294 BL 0x1C16F20
	0x035E8298 BL 0x1C16F20
	0x035E829C ADRP X0, 0xB0B000
	0x035E82A0 LDR X0, [X0 + 0x5B0]
	0x035E82A4 BL 0x1C16D08
	0x035E82A8 BL 0x1C16F10
	0x035E82AC MOV X20, X0
	0x035E82B0 MOV X1, X31
	0x035E82B4 BL 0x337DEC0
	0x035E82B8 ADRP X0, 0xB51000
	0x035E82BC LDR X0, [X0 + 0x438]
	0x035E82C0 BL 0x1C16D08
	0x035E82C4 MOV X1, X0
	0x035E82C8 MOV X0, X20
	0x035E82CC BL 0x1C16DEC
	0x035E82D0 BL 0x1C16F20
	0x035E82D4 B 0x35E8300
	0x035E82D8 B 0x35E8300
	0x035E82DC B 0x35E8300
	0x035E82E0 B 0x35E82E8
	0x035E82E4 B 0x35E82E8
	0x035E82E8 MOV X22, X1
	0x035E82EC MOV X21, X0
	0x035E82F0 B 0x35E83E4
	0x035E82F4 B 0x35E8300
	0x035E82F8 B 0x35E8300
	0x035E82FC B 0x35E8300
	0x035E8300 MOV X22, X1
	0x035E8304 MOV X21, X0
	0x035E8308 CMP W22, 0x1
	0x035E830C B.NE 0x35E83E4
	0x035E8310 MOV X0, X21
	0x035E8314 BL 0x3EB1AD0
	0x035E8318 MOV X21, X0
	0x035E831C ADRP X0, 0xB0B000
	0x035E8320 LDR X0, [X0 + 0x7D0]
	0x035E8324 BL 0x1C16D08
	0x035E8328 LDR X8, [X21]
	0x035E832C LDR X1, [X8]
	0x035E8330 BL 0x1C17270
	0x035E8334 TBZ X0, 0x0, 0x35E8398
	0x035E8338 LDR X21, [X21]
	0x035E833C BL 0x3EB1AE0
	0x035E8340 CBZ X20, 0x35E83BC
	0x035E8344 LDR X22, [X20 + 0x10]
	0x035E8348 CBZ X22, 0x35E83C0
	0x035E834C MOV X0, X21
	0x035E8350 MOV X1, X31
	0x035E8354 BL 0x32C2380
	0x035E8358 MOV X20, X0
	0x035E835C ADD X0, X22, 0x40
	0x035E8360 MOV X1, X20
	0x035E8364 MOV X2, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0xDF9000
	012 Move X25, 0xB12000
	013 Move X27, 0xB52000
	014 Move W8, [X26+688]
	015 Move X25, [X25+3264]
	016 Move X27, [X27+792]
	017 Move X20, X5
	018 Move X21, X4
	019 Move X22, X3
	020 Move W24, W2
	021 Move X23, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0xB52000
	028 Move X0, [X0+920]
	029 Call 0x1C17CF4
	030 Move X0, 0xB52000
	031 Move X0, [X0+792]
	032 Call 0x1C17CF4
	033 Move X0, 0xB12000
	034 Move X0, [X0+3264]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X26+688], W8
	038 Move X0, [X25]
	039 Move X26, 0xB52000
	040 Move X26, [X26+920]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X25, X0
	044 Call Object..ctor, X0
	045 Move [X19+112], X25
	046 Move X0, [X27]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X27]
	052 Move X8, [X0+184]
	053 And W2, W24, 1
	054 Move X0, X19
	055 Move X1, X23
	056 Move W9, [X8+4]
	057 Move X3, X31
	058 Add W9, W9, 1
	059 Move [X8+4], W9
	060 Move [X19+168], W9
	061 Call AuthenticatedStream..ctor, X0, X1, X2
	062 Move [X19+136], X22
	063 Move [X19+144], X21
	064 Move [X19+152], X20
	065 Move X0, [X26]
	066 Call 0x1C17F10
	067 Move W1, 0x4074
	068 Move X20, X0
	069 Call BufferOffsetSize2..ctor, X0, X1
	070 Move [X19+96], X20
	071 Move X0, [X26]
	072 Call 0x1C17F10
	073 Move W1, 0x4000
	074 Move X20, X0
	075 Call BufferOffsetSize2..ctor, X0, X1
	076 Move [X19+104], X20
	077 Move [X19+128], W31
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X30, [X31+80]
	087 Move X27, [X31+88]
	088 Return 

Method: System.Net.Security.SslStream get_SslStream()

Disassembly:
	0x035EB9F8 CBZ X0, 0x35EBA04
	0x035EB9FC LDR X8, [X20 + 0x40]

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: Mono.Security.Interface.MonoTlsSettings get_Settings()

Disassembly:
	0x035EBA00 CBZ X8, 0x35EBA10
	0x035EBA04 MOV X20, X31

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: Mono.Net.Security.MobileTlsProvider get_Provider()

Disassembly:
	0x035EBA08 MOV W21, W31
	0x035EBA0C B 0x35EBA24

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.String get_TargetHost()

Disassembly:
	0x035EBA10 LDR X8, [X0]
	0x035EBA14 LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_TargetHost(System.String value)

Disassembly:
	0x035EBA18 BLR X9
	0x035EBA1C MOV W21, W0

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: System.Void CheckThrow(System.Boolean authSuccessCheck, System.Boolean shutdownCheck = False)

Disassembly:
	0x035EBA20 MOV X20, X31
	0x035EBA24 LDRB W8, [X31 + 0xC]
	0x035EBA28 CBZ W8, 0x35EBA38
	0x035EBA2C MOV X0, X19
	0x035EBA30 MOV X1, X31
	0x035EBA34 BL 0x33E14E4
	0x035EBA38 CBNZ X20, 0x35EBA50
	0x035EBA3C AND W0, W21, 0x1
	0x035EBA40 LDP X20, X19, [X31 + 0x20]
	0x035EBA44 LDP X30, X21, [X31 + 0x10]
	0x035EBA48 ADD X31, X31, 0x30
	0x035EBA4C RET
	0x035EBA50 MOV X0, X20
	0x035EBA54 BL 0x1C16F18
	0x035EBA58 B 0x35EBA5C
	0x035EBA5C MOV X21, X0
	0x035EBA60 CMP W1, 0x1
	0x035EBA64 B.NE 0x35EBA7C
	0x035EBA68 MOV X0, X21
	0x035EBA6C BL 0x3EB1AD0
	0x035EBA70 LDR X20, [X0]
	0x035EBA74 BL 0x3EB1AE0
	0x035EBA78 B 0x35EBA08
	0x035EBA7C MOV X20, X31
	0x035EBA80 B 0x35EBA88
	0x035EBA84 MOV X21, X0
	0x035EBA88 LDRB W8, [X31 + 0xC]
	0x035EBA8C CBZ W8, 0x35EBA9C
	0x035EBA90 MOV X0, X19
	0x035EBA94 MOV X1, X31
	0x035EBA98 BL 0x33E14E4
	0x035EBA9C CBNZ X20, 0x35EBAA8
	0x035EBAA0 MOV X0, X21
	0x035EBAA4 BL 0x1D2C690
	0x035EBAA8 MOV X0, X20
	0x035EBAAC BL 0x1C16F18
	0x035EBAB0 BL 0x1990590
	0x035EBAB4 STR X30, [X31 - 0x40]!
	0x035EBAB8 STP X24, X23, [X31 + 0x10]
	0x035EBABC STP X22, X21, [X31 + 0x20]
	0x035EBAC0 STP X20, X19, [X31 + 0x30]
	0x035EBAC4 ADRP X21, 0xDF5000
	0x035EBAC8 LDRB W8, [X21 + 0x2BF]
	0x035EBACC MOV W20, W1
	0x035EBAD0 MOV X19, X0
	0x035EBAD4 TBNZ X8, 0x0, 0x35EBAF8
	0x035EBAD8 ADRP X0, 0xB31000
	0x035EBADC LDR X0, [X0 + 0x4B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+64]
	007 Move W20, W2
	008 Move W21, W1
	009 Compare X0, 0
	010 JumpIfEqual {13}
	011 Move X1, X31
	012 Call ExceptionDispatchInfo.Throw, X0
	013 Move TEMP, X21
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {26}
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+952]
	020 Move X1, [X8+960]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {38}
	026 Move TEMP, X20
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {33}
	030 Move W8, [X19+124]
	031 Compare W8, 0
	032 JumpIfNotEqual {45}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Move X0, 0xB09000
	039 Move X0, [X0+1456]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Move X0, 0xB4F000
	044 Move X0, [X0+1416]
	045 Move X0, 0xB09000
	046 Move X0, [X0+1456]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0xB4F000
	051 Move X0, [X0+1424]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call InvalidOperationException..ctor, X0, X1
	057 Move X0, 0xB4F000
	058 Move X0, [X0+1432]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Call 0x1C17DEC

Method: System.Exception GetSSPIException(System.Exception e)

Disassembly:
	0x035E9A68 MOV X0, X22
	0x035E9A6C BL 0x1C16F18
	0x035E9A70 ADRP X0, 0xB50000
	0x035E9A74 LDR X0, [X0 + 0x318]
	0x035E9A78 BL 0x1C16D08
	0x035E9A7C LDR W8, [X0 + 0xE0]
	0x035E9A80 CBNZ W8, 0x35E9A88
	0x035E9A84 BL 0x1C16DFC
	0x035E9A88 BL 0x35EAC5C
	0x035E9A8C ADRP X0, 0xB50000
	0x035E9A90 LDR X0, [X0 + 0x500]
	0x035E9A94 BL 0x1C16D08
	0x035E9A98 MOV X1, X0
	0x035E9A9C BL 0x1C16DEC
	0x035E9AA0 BL 0x1C16F20
	0x035E9AA4 BL 0x1C16F20
	0x035E9AA8 B 0x35E9AC0
	0x035E9AAC B 0x35E9AC0
	0x035E9AB0 B 0x35E9AC0
	0x035E9AB4 B 0x35E9AC0
	0x035E9AB8 B 0x35E9AC0
	0x035E9ABC B 0x35E9AC0
	0x035E9AC0 MOV X21, X0
	0x035E9AC4 CMP W1, 0x1
	0x035E9AC8 B.NE 0x35E9AE4
	0x035E9ACC MOV X0, X21
	0x035E9AD0 BL 0x3EB1AD0
	0x035E9AD4 LDR X22, [X0]
	0x035E9AD8 BL 0x3EB1AE0
	0x035E9ADC MOV X21, X31
	0x035E9AE0 B 0x35E9A3C
	0x035E9AE4 MOV X22, X31
	0x035E9AE8 B 0x35E9AF0
	0x035E9AEC MOV X21, X0
	0x035E9AF0 LDRB W8, [X31 + 0xC]
	0x035E9AF4 CBZ W8, 0x35E9B04
	0x035E9AF8 MOV X0, X19
	0x035E9AFC MOV X1, X31
	0x035E9B00 BL 0x33E14E4
	0x035E9B04 CBNZ X22, 0x35E9B10
	0x035E9B08 MOV X0, X21
	0x035E9B0C BL 0x1D2C690
	0x035E9B10 MOV X0, X22
	0x035E9B14 BL 0x1C16F18
	0x035E9B18 BL 0x1990590
	0x035E9B1C STR X30, [X31 - 0x30]!
	0x035E9B20 STP X22, X21, [X31 + 0x10]
	0x035E9B24 STP X20, X19, [X31 + 0x20]
	0x035E9B28 ADRP X22, 0xDF7000
	0x035E9B2C LDRB W8, [X22 + 0x2A9]
	0x035E9B30 MOV X21, X2
	0x035E9B34 MOV X19, X1
	0x035E9B38 MOV X20, X0
	0x035E9B3C TBNZ X8, 0x0, 0x35E9B54
	0x035E9B40 ADRP X0, 0xB50000
	0x035E9B44 LDR X0, [X0 + 0x508]
	0x035E9B48 BL 0x1C16CF4
	0x035E9B4C MOVZ W8, 0x1
	0x035E9B50 STRB W8, [X22 + 0x2A9]
	0x035E9B54 ADRP X8, 0xB50000
	0x035E9B58 LDR X8, [X8 + 0x508]
	0x035E9B5C CBZ X21, 0x35E9B98
	0x035E9B60 LDR X0, [X21 + 0x78]
	0x035E9B64 LDR X1, [X8]
	0x035E9B68 CBZ X0, 0x35E9BC4
	0x035E9B6C LDR X8, [X0]
	0x035E9B70 LDRB W9, [X1 + 0x130]
	0x035E9B74 LDRB W10, [X8 + 0x130]
	0x035E9B78 CMP W10, W9
	0x035E9B7C B.CC 0x35E9B94
	0x035E9B80 LDR X8, [X8 + 0xC8]
	0x035E9B84 ADD X8, X8, X9, 0x3, LSL
	0x035E9B88 LDUR X8, [X8 - 0x8]
	0x035E9B8C CMP X8, X1
	0x035E9B90 B.EQ 0x35E9BEC
	0x035E9B94 BL 0x1C171E0
	0x035E9B98 LDR X0, [X8]
	0x035E9B9C BL 0x1C16F10
	0x035E9BA0 MOV X1, X20
	0x035E9BA4 MOV X2, X19
	0x035E9BA8 MOV X3, X31
	0x035E9BAC MOV W4, W31
	0x035E9BB0 MOV X5, X31
	0x035E9BB4 MOV X21, X0
	0x035E9BB8 BL 0x35E9BFC
	0x035E9BBC MOV X0, X21
	0x035E9BC0 B 0x35E9BEC
	0x035E9BC4 MOV X0, X1
	0x035E9BC8 BL 0x1C16F10
	0x035E9BCC MOV X1, X20
	0x035E9BD0 MOV X2, X19
	0x035E9BD4 MOV X3, X21
	0x035E9BD8 MOV W4, W31
	0x035E9BDC MOV X5, X31
	0x035E9BE0 MOV X22, X0
	0x035E9BE4 BL 0x35E9BFC
	0x035E9BE8 MOV X0, X22
	0x035E9BEC LDP X20, X19, [X31 + 0x20]
	0x035E9BF0 LDP X22, X21, [X31 + 0x10]
	0x035E9BF4 LDR X30, [X31], #0x30
	0x035E9BF8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDF8000
	005 Move W8, [X20+689]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {31}
	011 Move X0, 0xB51000
	012 Move X0, [X0+1168]
	013 Call 0x1C17CF4
	014 Move X0, 0xB39000
	015 Move X0, [X0+1960]
	016 Call 0x1C17CF4
	017 Move X0, 0xB0B000
	018 Move X0, [X0+2880]
	019 Call 0x1C17CF4
	020 Move X0, 0xB34000
	021 Move X0, [X0+1208]
	022 Call 0x1C17CF4
	023 Move X0, 0xB13000
	024 Move X0, [X0+2216]
	025 Call 0x1C17CF4
	026 Move X0, 0xB51000
	027 Move X0, [X0+1176]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+689], W8
	031 Compare X19, 0
	032 JumpIfEqual {80}
	033 Move X9, 0xB13000
	034 Move X9, [X9+2216]
	035 Move X8, [X19]
	036 Move X10, [X9]
	037 Move W9, [X8+304]
	038 Move W11, [X10+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X12, [X8+200]
	041 Add X11, X12, X11
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X10, 0xB39000
	045 Move X10, [X10+1960]
	046 Move X10, [X10]
	047 Move W11, [X10+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X12, [X8+200]
	050 Add X11, X12, X11
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X10, 0xB34000
	054 Move X10, [X10+1208]
	055 Move X10, [X10]
	056 Move W11, [X10+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X12, [X8+200]
	059 Add X11, X12, X11
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X10, 0xB51000
	063 Move X10, [X10+1168]
	064 Move X0, [X10]
	065 Move W10, [X0+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X11, [X8+200]
	068 Add X10, X11, X10
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X10, 0xB0B000
	072 Move X10, [X10+2880]
	073 Move X10, [X10]
	074 Move W11, [X10+304]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X8+200]
	077 Add X8, X8, X11
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, 0xB51000
	081 Move X8, [X8+1168]
	082 Move X0, [X8]
	083 Move X20, 0xB51000
	084 Move X20, [X20+1176]
	085 Call 0x1C17F10
	086 Move X1, [X20]
	087 Move X2, X19
	088 Move X3, X31
	089 Move X20, X0
	090 Call AuthenticationException..ctor, X0, X1, X2
	091 Move X19, X20
	092 Move X0, X19
	093 Move X20, [X31+16]
	094 Move X19, [X31+24]
	095 Move X30, [X31+32]
	096 Return X0

Method: System.Exception GetIOException(System.Exception e, System.String message)

Disassembly:
	0x035EBAE0 BL 0x1C16CF4
	0x035EBAE4 ADRP X0, 0xB4E000
	0x035EBAE8 LDR X0, [X0 + 0x620]
	0x035EBAEC BL 0x1C16CF4
	0x035EBAF0 MOVZ W8, 0x1
	0x035EBAF4 STRB W8, [X21 + 0x2BF]
	0x035EBAF8 LDR X21, [X19 + 0x70]
	0x035EBAFC STRB W31, [X31 + 0xC]
	0x035EBB00 ADD X1, X31, 0xC
	0x035EBB04 MOV X0, X21
	0x035EBB08 MOV X2, X31
	0x035EBB0C BL 0x33DE64C
	0x035EBB10 ADRP X8, 0xB31000
	0x035EBB14 LDR X8, [X8 + 0x4B8]
	0x035EBB18 LDR X0, [X8]
	0x035EBB1C BL 0x1C16F10
	0x035EBB20 ADRP X8, 0xB4E000
	0x035EBB24 LDR X8, [X8 + 0x620]
	0x035EBB28 MOV X22, X0
	0x035EBB2C LDR X1, [X8]
	0x035EBB30 MOV X2, X31
	0x035EBB34 BL 0x338C448
	0x035EBB38 MOV X0, X22
	0x035EBB3C MOV X1, X31
	0x035EBB40 BL 0x32C2380
	0x035EBB44 MOV X1, X0
	0x035EBB48 ADD X0, X19, 0x40
	0x035EBB4C MOV X2, X31
	0x035EBB50 BL 0x1C24138
	0x035EBB54 LDR X0, [X19 + 0x38]
	0x035EBB58 CBZ X0, 0x35EBB6C
	0x035EBB5C BL 0x35EBC88
	0x035EBB60 MOV X22, X31
	0x035EBB64 STR X31, [X19 + 0x38]
	0x035EBB68 B 0x35EBB70
	0x035EBB6C MOV X22, X31
	0x035EBB70 LDRB W8, [X31 + 0xC]
	0x035EBB74 CBZ W8, 0x35EBB84
	0x035EBB78 MOV X0, X21
	0x035EBB7C MOV X1, X31
	0x035EBB80 BL 0x33E14E4
	0x035EBB84 CBNZ X22, 0x35EBBAC
	0x035EBB88 AND W1, W20, 0x1
	0x035EBB8C MOV X0, X19
	0x035EBB90 MOV X2, X31
	0x035EBB94 BL 0x36DE090
	0x035EBB98 LDP X20, X19, [X31 + 0x30]
	0x035EBB9C LDP X22, X21, [X31 + 0x20]
	0x035EBBA0 LDP X24, X23, [X31 + 0x10]
	0x035EBBA4 LDR X30, [X31], #0x40
	0x035EBBA8 RET
	0x035EBBAC MOV X0, X22
	0x035EBBB0 BL 0x1C16F18
	0x035EBBB4 B 0x35EBBCC
	0x035EBBB8 B 0x35EBBCC
	0x035EBBBC MOV X23, X1
	0x035EBBC0 MOV X24, X0
	0x035EBBC4 B 0x35EBC0C
	0x035EBBC8 B 0x35EBBCC
	0x035EBBCC MOV X24, X0
	0x035EBBD0 CMP W1, 0x1
	0x035EBBD4 B.NE 0x35EBBEC
	0x035EBBD8 MOV X0, X24
	0x035EBBDC BL 0x3EB1AD0
	0x035EBBE0 LDR X22, [X0]
	0x035EBBE4 BL 0x3EB1AE0
	0x035EBBE8 B 0x35EBB70
	0x035EBBEC MOV X22, X31
	0x035EBBF0 LDRB W8, [X31 + 0xC]
	0x035EBBF4 MOV W23, W1
	0x035EBBF8 CBZ W8, 0x35EBC08
	0x035EBBFC MOV X0, X21
	0x035EBC00 MOV X1, X31
	0x035EBC04 BL 0x33E14E4
	0x035EBC08 CBNZ X22, 0x35EBC4C
	0x035EBC0C MOVZ W8, 0x1
	0x035EBC10 CMP W23, W8
	0x035EBC14 B.NE 0x35EBC44
	0x035EBC18 MOV X0, X24
	0x035EBC1C BL 0x3EB1AD0
	0x035EBC20 LDR X21, [X0]
	0x035EBC24 BL 0x3EB1AE0
	0x035EBC28 AND W1, W20, 0x1
	0x035EBC2C MOV X0, X19
	0x035EBC30 MOV X2, X31
	0x035EBC34 BL 0x36DE090
	0x035EBC38 CBZ X21, 0x35EBB98
	0x035EBC3C MOV X0, X21
	0x035EBC40 BL 0x1C16F18
	0x035EBC44 MOV X21, X31
	0x035EBC48 B 0x35EBC60
	0x035EBC4C MOV X0, X22
	0x035EBC50 BL 0x1C16F18
	0x035EBC54 MOV X24, X0
	0x035EBC58 B 0x35EBBF0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDF6000
	006 Move W8, [X21+690]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xB4F000
	014 Move X0, [X0+1168]
	015 Call 0x1C17CF4
	016 Move X0, 0xB37000
	017 Move X0, [X0+1960]
	018 Call 0x1C17CF4
	019 Move X0, 0xB09000
	020 Move X0, [X0+2880]
	021 Call 0x1C17CF4
	022 Move X0, 0xB32000
	023 Move X0, [X0+1208]
	024 Call 0x1C17CF4
	025 Move X0, 0xB11000
	026 Move X0, [X0+2216]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+690], W8
	030 Move X10, 0xB37000
	031 Move X10, [X10+1960]
	032 Compare X19, 0
	033 JumpIfEqual {79}
	034 Move X9, 0xB11000
	035 Move X9, [X9+2216]
	036 Move X8, [X19]
	037 Move X11, [X9]
	038 Move W9, [X8+304]
	039 Move W12, [X11+304]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X13, [X8+200]
	042 Add X12, X13, X12
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X10]
	046 Move W10, [X0+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X11, [X8+200]
	049 Add X10, X11, X10
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X10, 0xB32000
	053 Move X10, [X10+1208]
	054 Move X10, [X10]
	055 Move W11, [X10+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X12, [X8+200]
	058 Add X11, X12, X11
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X10, 0xB4F000
	062 Move X10, [X10+1168]
	063 Move X10, [X10]
	064 Move W11, [X10+304]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X12, [X8+200]
	067 Add X11, X12, X11
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X10, 0xB09000
	071 Move X10, [X10+2880]
	072 Move X10, [X10]
	073 Move W11, [X10+304]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, [X8+200]
	076 Add X8, X8, X11
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X10]
	080 Call 0x1C17F10
	081 Move X1, X20
	082 Move X2, X19
	083 Move X3, X31
	084 Move X21, X0
	085 Call IOException..ctor, X0, X1, X2
	086 Move X19, X21
	087 Move X0, X19
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X30, [X31+32]
	091 Move X21, [X31+40]
	092 Return X0

Method: System.Exception GetInternalError()

Disassembly:
	0x035EBC5C MOV X24, X0
	0x035EBC60 AND W1, W20, 0x1
	0x035EBC64 MOV X0, X19
	0x035EBC68 MOV X2, X31
	0x035EBC6C BL 0x36DE090
	0x035EBC70 CBNZ X21, 0x35EBC7C
	0x035EBC74 MOV X0, X24
	0x035EBC78 BL 0x1D2C690
	0x035EBC7C MOV X0, X21
	0x035EBC80 BL 0x1C16F18
	0x035EBC84 BL 0x1990590
	0x035EBC88 STP X30, X21, [X31 - 0x20]!
	0x035EBC8C STP X20, X19, [X31 + 0x10]
	0x035EBC90 ADRP X21, 0xDF5000
	0x035EBC94 ADRP X20, 0xB0F000
	0x035EBC98 LDRB W8, [X21 + 0x2CA]
	0x035EBC9C LDR X20, [X20 + 0xC10]
	0x035EBCA0 MOV X19, X0
	0x035EBCA4 TBNZ X8, 0x0, 0x35EBCBC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB09000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xB4F000
	009 Move X0, [X0+1440]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0xB4F000
	016 Move X0, [X0+1448]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Exception GetInvalidNestedCallException()

Disassembly:
	0x035EBCA8 ADRP X0, 0xB0F000
	0x035EBCAC LDR X0, [X0 + 0xC10]
	0x035EBCB0 BL 0x1C16CF4
	0x035EBCB4 MOVZ W8, 0x1
	0x035EBCB8 STRB W8, [X21 + 0x2CA]
	0x035EBCBC LDR X8, [X19]
	0x035EBCC0 MOVZ W1, 0x1
	0x035EBCC4 MOV X0, X19
	0x035EBCC8 LDR X9, [X8 + 0x238]
	0x035EBCCC LDR X2, [X8 + 0x240]
	0x035EBCD0 BLR X9
	0x035EBCD4 LDR X0, [X20]
	0x035EBCD8 LDR W8, [X0 + 0xE0]
	0x035EBCDC CBNZ W8, 0x35EBCE4
	0x035EBCE0 BL 0x1C16DFC
	0x035EBCE4 MOV X0, X19
	0x035EBCE8 LDP X20, X19, [X31 + 0x10]
	0x035EBCEC MOV X1, X31
	0x035EBCF0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB09000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xB4F000
	009 Move X0, [X0+1456]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0xB4F000
	016 Move X0, [X0+1464]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Runtime.ExceptionServices.ExceptionDispatchInfo SetException(System.Exception e)

Disassembly:
	0x035E9490 MOV X1, X0
	0x035E9494 BL 0x1C16DEC
	0x035E9498 ADRP X0, 0xB50000
	0x035E949C LDR X0, [X0 + 0x318]
	0x035E94A0 BL 0x1C16D08
	0x035E94A4 LDR W8, [X0 + 0xE0]
	0x035E94A8 CBNZ W8, 0x35E94B0
	0x035E94AC BL 0x1C16DFC
	0x035E94B0 BL 0x35EAC5C
	0x035E94B4 ADRP X0, 0xB50000
	0x035E94B8 LDR X0, [X0 + 0x4E0]
	0x035E94BC BL 0x1C16D08
	0x035E94C0 MOV X1, X0
	0x035E94C4 BL 0x1C16DEC
	0x035E94C8 ADRP X0, 0xB50000
	0x035E94CC LDR X0, [X0 + 0x318]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, X1
	006 Move X1, X31
	007 Call ExceptionDispatchInfo.Capture, X0
	008 Move X20, X0
	009 Add X0, X19, 64
	010 Move X1, X20
	011 Move X2, X31
	012 Call 0x1C25138
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return X0

Method: System.Void AuthenticateAsClient(System.String targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, System.Boolean checkCertificateRevocation)

Disassembly:
	0x035EBCF4 B 0x33B3E9C
	0x035EBCF8 STR X30, [X31 - 0x10]!
	0x035EBCFC LDR X0, [X0 + 0x28]
	0x035EBD00 CBZ X0, 0x35EBD18
	0x035EBD04 LDR X8, [X0]
	0x035EBD08 LDR X2, [X8 + 0x298]
	0x035EBD0C LDR X1, [X8 + 0x2A0]
	0x035EBD10 LDR X30, [X31], #0x10
	0x035EBD14 BR X2
	0x035EBD18 BL 0x1C16F20
	0x035EBD1C SUB X31, X31, 0x30
	0x035EBD20 STP X30, X21, [X31 + 0x10]
	0x035EBD24 STP X20, X19, [X31 + 0x20]
	0x035EBD28 LDR X19, [X0 + 0x70]
	0x035EBD2C MOV X20, X0
	0x035EBD30 STRB W31, [X31 + 0xC]
	0x035EBD34 ADD X1, X31, 0xC
	0x035EBD38 MOV X0, X19
	0x035EBD3C MOV X2, X31
	0x035EBD40 BL 0x33DE64C
	0x035EBD44 MOVZ W1, 0x1
	0x035EBD48 MOV X0, X20
	0x035EBD4C MOV W2, W31
	0x035EBD50 BL 0x35EAA20
	0x035EBD54 MOV X0, X20
	0x035EBD58 BL 0x35EBDF8
	0x035EBD5C MOV X21, X0
	0x035EBD60 MOV X20, X31
	0x035EBD64 LDRB W8, [X31 + 0xC]
	0x035EBD68 CBZ W8, 0x35EBD78
	0x035EBD6C MOV X0, X19
	0x035EBD70 MOV X1, X31
	0x035EBD74 BL 0x33E14E4
	0x035EBD78 CBNZ X20, 0x35EBD90
	0x035EBD7C MOV X0, X21
	0x035EBD80 LDP X20, X19, [X31 + 0x20]
	0x035EBD84 LDP X30, X21, [X31 + 0x10]
	0x035EBD88 ADD X31, X31, 0x30
	0x035EBD8C RET
	0x035EBD90 MOV X0, X20
	0x035EBD94 BL 0x1C16F18
	0x035EBD98 B 0x35EBD9C
	0x035EBD9C MOV X21, X0
	0x035EBDA0 CMP W1, 0x1
	0x035EBDA4 B.NE 0x35EBDC0
	0x035EBDA8 MOV X0, X21
	0x035EBDAC BL 0x3EB1AD0
	0x035EBDB0 LDR X20, [X0]
	0x035EBDB4 BL 0x3EB1AE0
	0x035EBDB8 MOV X21, X31
	0x035EBDBC B 0x35EBD64
	0x035EBDC0 MOV X20, X31
	0x035EBDC4 B 0x35EBDCC
	0x035EBDC8 MOV X21, X0
	0x035EBDCC LDRB W8, [X31 + 0xC]
	0x035EBDD0 CBZ W8, 0x35EBDE0
	0x035EBDD4 MOV X0, X19
	0x035EBDD8 MOV X1, X31
	0x035EBDDC BL 0x33E14E4
	0x035EBDE0 CBNZ X20, 0x35EBDEC
	0x035EBDE4 MOV X0, X21
	0x035EBDE8 BL 0x1D2C690
	0x035EBDEC MOV X0, X20
	0x035EBDF0 BL 0x1C16F18
	0x035EBDF4 BL 0x1990590
	0x035EBDF8 SUB X31, X31, 0x30
	0x035EBDFC STP X30, X21, [X31 + 0x10]
	0x035EBE00 STP X20, X19, [X31 + 0x20]
	0x035EBE04 LDR X19, [X0 + 0x70]
	0x035EBE08 MOV X20, X0
	0x035EBE0C STRB W31, [X31 + 0xC]
	0x035EBE10 ADD X1, X31, 0xC
	0x035EBE14 MOV X0, X19
	0x035EBE18 MOV X2, X31
	0x035EBE1C BL 0x33DE64C
	0x035EBE20 LDR X0, [X20 + 0x40]
	0x035EBE24 CBZ X0, 0x35EBE30
	0x035EBE28 MOV X1, X31
	0x035EBE2C BL 0x32C2440
	0x035EBE30 LDR X0, [X20 + 0x38]
	0x035EBE34 CBZ X0, 0x35EBE48
	0x035EBE38 LDRB W8, [X0 + 0x28]
	0x035EBE3C CBZ W8, 0x35EBE54
	0x035EBE40 LDR X21, [X0 + 0x50]
	0x035EBE44 B 0x35EBE64
	0x035EBE48 MOV X20, X31
	0x035EBE4C MOV X21, X31
	0x035EBE50 B 0x35EBE68
	0x035EBE54 LDR X8, [X0]
	0x035EBE58 LDP X9, X1, [X8 + 0x1C8]
	0x035EBE5C BLR X9
	0x035EBE60 MOV X21, X0
	0x035EBE64 MOV X20, X31
	0x035EBE68 LDRB W8, [X31 + 0xC]
	0x035EBE6C CBZ W8, 0x35EBE7C
	0x035EBE70 MOV X0, X19
	0x035EBE74 MOV X1, X31
	0x035EBE78 BL 0x33E14E4
	0x035EBE7C CBNZ X20, 0x35EBE94
	0x035EBE80 MOV X0, X21
	0x035EBE84 LDP X20, X19, [X31 + 0x20]
	0x035EBE88 LDP X30, X21, [X31 + 0x10]
	0x035EBE8C ADD X31, X31, 0x30
	0x035EBE90 RET
	0x035EBE94 MOV X0, X20
	0x035EBE98 BL 0x1C16F18
	0x035EBE9C B 0x35EBEA0
	0x035EBEA0 MOV X21, X0
	0x035EBEA4 CMP W1, 0x1
	0x035EBEA8 B.NE 0x35EBEC0
	0x035EBEAC MOV X0, X21
	0x035EBEB0 BL 0x3EB1AD0
	0x035EBEB4 LDR X20, [X0]
	0x035EBEB8 BL 0x3EB1AE0
	0x035EBEBC B 0x35EBE4C
	0x035EBEC0 MOV X20, X31
	0x035EBEC4 B 0x35EBECC
	0x035EBEC8 MOV X21, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xDF6000
	010 Move X25, 0xB4F000
	011 Move W8, [X20+691]
	012 Move X25, [X25+1472]
	013 Move W21, W4
	014 Move W22, W3
	015 Move X23, X2
	016 Move X24, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xB11000
	023 Move X0, [X0+2008]
	024 Call 0x1C17CF4
	025 Move X0, 0xB4F000
	026 Move X0, [X0+1472]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+691], W8
	030 Move X0, [X25]
	031 Call 0x1C17F10
	032 Move X20, X0
	033 Call MonoSslClientAuthenticationOptions..ctor, X0
	034 Compare X20, 0
	035 JumpIfEqual {93}
	036 Move X8, [X20]
	037 Move X25, 0xB11000
	038 Move X0, X20
	039 Move X1, X24
	040 Move X9, [X8+472]
	041 Move X2, [X8+480]
	042 Move X25, [X25+2008]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X20]
	045 Move X0, X20
	046 Move X1, X23
	047 Move X9, [X8+536]
	048 Move X2, [X8+544]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X20]
	051 Move X0, X20
	052 Move W1, W22
	053 Move X9, [X8+408]
	054 Move X2, [X8+416]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X20]
	057 And W1, W21, 1
	058 Move X0, X20
	059 Move X9, [X8+440]
	060 Move X2, [X8+448]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X20]
	063 Move X0, X20
	064 Move W1, W31
	065 Move X9, [X8+424]
	066 Move X2, [X8+432]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X0, [X25]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X31
	074 Call CancellationToken.get_None
	075 Move X3, X0
	076 Move W1, 1
	077 Move X0, X19
	078 Move X2, X20
	079 Call MobileAuthenticatedStream.ProcessAuthentication, X0, X1, X2, X3
	080 Compare X0, 0
	081 JumpIfEqual {94}
	082 Move X1, X31
	083 Call Task.Wait, X0
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Move X25, [X31+72]
	092 Return 
	093 Call 0x1C17F20
	094 Call 0x1C17F20
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X19, X0
	097 Move X0, X19
	098 Call 0x3EB2AD0
	099 Move X19, X0
	100 Move X0, 0xB09000
	101 Move X0, [X0+2000]
	102 Call 0x1C17D08
	103 Move X8, [X19]
	104 Move X1, [X8]
	105 Call 0x1C18270
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {126}
	110 Move X19, [X19]
	111 Call 0x3EB2AE0
	112 Move X0, 0xB31000
	113 Move X0, [X0+2952]
	114 Call 0x1C17D08
	115 Call 0x19913D0
	116 Move X0, X19
	117 Move X1, X31
	118 Call HttpWebRequest.FlattenException, X0
	119 Move X19, X0
	120 Move X0, 0xB4F000
	121 Move X0, [X0+1480]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X19
	125 Call 0x1C17DEC
	126 Move W0, 8
	127 Call 0x3EB2AF0
	128 Move X8, [X19]
	129 Move [X0], X8
	130 Move X1, 0x8CA000
	131 Add X1, X1, 3672
	132 Move X2, X31
	133 Call 0x3EB2B00
	134 Move X19, X0
	135 Call 0x3EB2AE0
	136 Move X0, X19
	137 Call 0x1D2D690
	138 Call 0x1991590

Method: System.Void AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, System.Boolean clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, System.Boolean checkCertificateRevocation)

Disassembly:
	0x035EC020 RET
	0x035EC024 STR X30, [X31 - 0x10]!
	0x035EC028 LDR X0, [X0 + 0x28]
	0x035EC02C CBZ X0, 0x35EC040
	0x035EC030 LDR X8, [X0]
	0x035EC034 LDP X2, X1, [X8 + 0x1E8]
	0x035EC038 LDR X30, [X31], #0x10
	0x035EC03C BR X2
	0x035EC040 BL 0x1C16F20
	0x035EC044 STR X30, [X31 - 0x10]!
	0x035EC048 LDR X0, [X0 + 0x28]
	0x035EC04C CBZ X0, 0x35EC060
	0x035EC050 LDR X8, [X0]
	0x035EC054 LDP X2, X1, [X8 + 0x1F8]
	0x035EC058 LDR X30, [X31], #0x10
	0x035EC05C BR X2
	0x035EC060 BL 0x1C16F20
	0x035EC064 STP X30, X19, [X31 - 0x10]!
	0x035EC068 ADRP X0, 0xB07000
	0x035EC06C LDR X0, [X0 + 0xB40]
	0x035EC070 BL 0x1C16D08
	0x035EC074 BL 0x1C16F10
	0x035EC078 MOV X1, X31
	0x035EC07C MOV X19, X0
	0x035EC080 BL 0x3380310
	0x035EC084 ADRP X0, 0xB4D000
	0x035EC088 LDR X0, [X0 + 0x630]
	0x035EC08C BL 0x1C16D08
	0x035EC090 MOV X1, X0
	0x035EC094 MOV X0, X19
	0x035EC098 BL 0x1C16DEC
	0x035EC09C STR X30, [X31 - 0x10]!
	0x035EC0A0 LDR X0, [X0 + 0x28]
	0x035EC0A4 CBZ X0, 0x35EC0BC
	0x035EC0A8 LDR X8, [X0]
	0x035EC0AC LDR X2, [X8 + 0x218]
	0x035EC0B0 LDR X1, [X8 + 0x220]
	0x035EC0B4 LDR X30, [X31], #0x10
	0x035EC0B8 BR X2
	0x035EC0BC BL 0x1C16F20
	0x035EC0C0 STR X30, [X31 - 0x10]!
	0x035EC0C4 LDR X0, [X0 + 0x28]
	0x035EC0C8 CBZ X0, 0x35EC0E0
	0x035EC0CC LDR X8, [X0]
	0x035EC0D0 LDR X3, [X8 + 0x228]
	0x035EC0D4 LDR X2, [X8 + 0x230]
	0x035EC0D8 LDR X30, [X31], #0x10
	0x035EC0DC BR X3
	0x035EC0E0 BL 0x1C16F20
	0x035EC0E4 STR X30, [X31 - 0x10]!
	0x035EC0E8 LDR X0, [X0 + 0x28]
	0x035EC0EC CBZ X0, 0x35EC104
	0x035EC0F0 LDR X8, [X0]
	0x035EC0F4 LDR X2, [X8 + 0x238]
	0x035EC0F8 LDR X1, [X8 + 0x240]
	0x035EC0FC LDR X30, [X31], #0x10
	0x035EC100 BR X2
	0x035EC104 BL 0x1C16F20
	0x035EC108 STR X30, [X31 - 0x10]!
	0x035EC10C LDR X0, [X0 + 0x28]
	0x035EC110 CBZ X0, 0x35EC128
	0x035EC114 LDR X8, [X0]
	0x035EC118 LDR X3, [X8 + 0x248]
	0x035EC11C LDR X2, [X8 + 0x250]
	0x035EC120 LDR X30, [X31], #0x10
	0x035EC124 BR X3
	0x035EC128 BL 0x1C16F20
	0x035EC12C STR X30, [X31 - 0x20]!
	0x035EC130 STP X20, X19, [X31 + 0x10]
	0x035EC134 ADRP X19, 0xDF4000
	0x035EC138 ADRP X20, 0xB4D000
	0x035EC13C LDRB W8, [X19 + 0x2C0]
	0x035EC140 LDR X20, [X20 + 0x318]
	0x035EC144 TBNZ X8, 0x0, 0x35EC15C
	0x035EC148 ADRP X0, 0xB4D000
	0x035EC14C LDR X0, [X0 + 0x318]
	0x035EC150 BL 0x1C16CF4
	0x035EC154 MOVZ W8, 0x1
	0x035EC158 STRB W8, [X19 + 0x2C0]
	0x035EC15C LDR X8, [X20]
	0x035EC160 LDP X20, X19, [X31 + 0x10]
	0x035EC164 MOVZ W9, 0x7B
	0x035EC168 LDR X8, [X8 + 0xB8]
	0x035EC16C STR W9, [X8]
	0x035EC170 LDR X30, [X31], #0x20
	0x035EC174 RET
	0x035EC178 STR X30, [X31 - 0x10]!
	0x035EC17C LDR X8, [X0 + 0x68]
	0x035EC180 CBZ X8, 0x35EC1A8
	0x035EC184 LDR X0, [X0 + 0x28]
	0x035EC188 CBZ X0, 0x35EC1A8
	0x035EC18C LDR X9, [X0]
	0x035EC190 LDP W2, W3, [X8 + 0x18]
	0x035EC194 LDR X1, [X8 + 0x10]
	0x035EC198 LDR X5, [X9 + 0x388]
	0x035EC19C LDR X4, [X9 + 0x390]
	0x035EC1A0 LDR X30, [X31], #0x10
	0x035EC1A4 BR X5
	0x035EC1A8 BL 0x1C16F20
	0x035EC1AC SUB X31, X31, 0xA0
	0x035EC1B0 STR X30, [X31 + 0x60]
	0x035EC1B4 STP X24, X23, [X31 + 0x70]
	0x035EC1B8 STP X22, X21, [X31 + 0x80]
	0x035EC1BC STP X20, X19, [X31 + 0x90]
	0x035EC1C0 ADRP X20, 0xDF4000
	0x035EC1C4 LDRB W8, [X20 + 0x2C1]
	0x035EC1C8 MOV X19, X0
	0x035EC1CC TBNZ X8, 0x0, 0x35EC244
	0x035EC1D0 ADRP X0, 0xB4D000
	0x035EC1D4 LDR X0, [X0 + 0x638]
	0x035EC1D8 BL 0x1C16CF4
	0x035EC1DC ADRP X0, 0xB4D000
	0x035EC1E0 LDR X0, [X0 + 0x640]
	0x035EC1E4 BL 0x1C16CF4
	0x035EC1E8 ADRP X0, 0xB0A000
	0x035EC1EC LDR X0, [X0 + 0x280]
	0x035EC1F0 BL 0x1C16CF4
	0x035EC1F4 ADRP X0, 0xB4D000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xDF5000
	010 Move X25, 0xB4E000
	011 Move W8, [X20+692]
	012 Move X25, [X25+1504]
	013 Move W21, W4
	014 Move W22, W3
	015 Move W23, W2
	016 Move X24, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xB10000
	023 Move X0, [X0+2008]
	024 Call 0x1C17CF4
	025 Move X0, 0xB4E000
	026 Move X0, [X0+1504]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+692], W8
	030 Move X0, [X25]
	031 Call 0x1C17F10
	032 Move X20, X0
	033 Call MonoSslServerAuthenticationOptions..ctor, X0
	034 Compare X20, 0
	035 JumpIfEqual {93}
	036 Move X8, [X20]
	037 Move X25, 0xB10000
	038 Move X0, X20
	039 Move X1, X24
	040 Move X9, [X8+504]
	041 Move X2, [X8+512]
	042 Move X25, [X25+2008]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X20]
	045 And W1, W23, 1
	046 Move X0, X20
	047 Move X9, [X8+568]
	048 Move X2, [X8+576]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X20]
	051 Move X0, X20
	052 Move W1, W22
	053 Move X9, [X8+408]
	054 Move X2, [X8+416]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X20]
	057 And W1, W21, 1
	058 Move X0, X20
	059 Move X9, [X8+440]
	060 Move X2, [X8+448]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X20]
	063 Move X0, X20
	064 Move W1, W31
	065 Move X9, [X8+424]
	066 Move X2, [X8+432]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X0, [X25]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X31
	074 Call CancellationToken.get_None
	075 Move X3, X0
	076 Move W1, 1
	077 Move X0, X19
	078 Move X2, X20
	079 Call MobileAuthenticatedStream.ProcessAuthentication, X0, X1, X2, X3
	080 Compare X0, 0
	081 JumpIfEqual {94}
	082 Move X1, X31
	083 Call Task.Wait, X0
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Move X25, [X31+72]
	092 Return 
	093 Call 0x1C17F20
	094 Call 0x1C17F20
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X19, X0
	097 Move X0, X19
	098 Call 0x3EB2AD0
	099 Move X19, X0
	100 Move X0, 0xB08000
	101 Move X0, [X0+2000]
	102 Call 0x1C17D08
	103 Move X8, [X19]
	104 Move X1, [X8]
	105 Call 0x1C18270
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {126}
	110 Move X19, [X19]
	111 Call 0x3EB2AE0
	112 Move X0, 0xB30000
	113 Move X0, [X0+2952]
	114 Call 0x1C17D08
	115 Call 0x19913D0
	116 Move X0, X19
	117 Move X1, X31
	118 Call HttpWebRequest.FlattenException, X0
	119 Move X19, X0
	120 Move X0, 0xB4E000
	121 Move X0, [X0+1512]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X19
	125 Call 0x1C17DEC
	126 Move W0, 8
	127 Call 0x3EB2AF0
	128 Move X8, [X19]
	129 Move [X0], X8
	130 Move X1, 0x8C9000
	131 Add X1, X1, 3672
	132 Move X2, X31
	133 Call 0x3EB2B00
	134 Move X19, X0
	135 Call 0x3EB2AE0
	136 Move X0, X19
	137 Call 0x1D2D690
	138 Call 0x1991590

Method: System.Threading.Tasks.Task AuthenticateAsClientAsync(System.String targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, System.Boolean checkCertificateRevocation)

Disassembly:
	0x035EC25C CBZ W8, 0x35EC2EC
	0x035EC260 LDR X0, [X19 + 0x20]
	0x035EC264 CBZ X0, 0x35EC5FC
	0x035EC268 LDR X8, [X0]
	0x035EC26C LDP X9, X1, [X8 + 0x178]
	0x035EC270 BLR X9
	0x035EC274 MOV W8, W0
	0x035EC278 LDR X0, [X19 + 0x20]
	0x035EC27C TBZ X8, 0x0, 0x35EC2F4
	0x035EC280 CBZ X0, 0x35EC6F4
	0x035EC284 LDR X8, [X0]
	0x035EC288 LDP X9, X1, [X8 + 0x1E8]
	0x035EC28C BLR X9
	0x035EC290 CBNZ X0, 0x35EC3C0
	0x035EC294 LDR X8, [X19 + 0x20]
	0x035EC298 CBZ X8, 0x35EC75C
	0x035EC29C LDR X8, [X8 + 0x10]
	0x035EC2A0 CBNZ X8, 0x35EC3C0
	0x035EC2A4 ADRP X0, 0xB0F000
	0x035EC2A8 LDR X0, [X0 + 0x578]
	0x035EC2AC BL 0x1C16D08
	0x035EC2B0 BL 0x1C16F10
	0x035EC2B4 MOV X20, X0
	0x035EC2B8 ADRP X0, 0xB4D000
	0x035EC2BC LDR X0, [X0 + 0x668]
	0x035EC2C0 BL 0x1C16D08
	0x035EC2C4 MOV X1, X0
	0x035EC2C8 MOV X0, X20
	0x035EC2CC MOV X2, X31
	0x035EC2D0 BL 0x3314A68
	0x035EC2D4 ADRP X0, 0xB4D000
	0x035EC2D8 LDR X0, [X0 + 0x670]
	0x035EC2DC BL 0x1C16D08
	0x035EC2E0 MOV X1, X0
	0x035EC2E4 MOV X0, X20
	0x035EC2E8 BL 0x1C16DEC
	0x035EC2EC MOV X22, X31
	0x035EC2F0 B 0x35EC45C
	0x035EC2F4 CBZ X0, 0x35EC6F8
	0x035EC2F8 LDR X8, [X0]
	0x035EC2FC LDP X9, X1, [X8 + 0x1C8]
	0x035EC300 BLR X9
	0x035EC304 CBZ X0, 0x35EC6FC
	0x035EC308 LDR X0, [X19 + 0x20]
	0x035EC30C CBZ X0, 0x35EC744
	0x035EC310 LDR X8, [X0]
	0x035EC314 LDP X9, X1, [X8 + 0x1C8]
	0x035EC318 BLR X9
	0x035EC31C CBZ X0, 0x35EC748
	0x035EC320 LDR W8, [X0 + 0x10]
	0x035EC324 CBNZ W8, 0x35EC3A0
	0x035EC328 ADRP X21, 0xB4D000
	0x035EC32C LDR X21, [X21 + 0x318]
	0x035EC330 LDR X20, [X19 + 0x20]
	0x035EC334 LDR X0, [X21]
	0x035EC338 LDR W8, [X0 + 0xE0]
	0x035EC33C CBNZ W8, 0x35EC348
	0x035EC340 BL 0x1C16DFC
	0x035EC344 LDR X0, [X21]
	0x035EC348 LDR X0, [X0 + 0xB8]
	0x035EC34C MOV X1, X31
	0x035EC350 BL 0x33EB14C
	0x035EC354 STR W0, [X31 + 0x68]
	0x035EC358 MOV X0, X31
	0x035EC35C BL 0x333AB78
	0x035EC360 MOV X1, X0
	0x035EC364 ADD X0, X31, 0x68
	0x035EC368 MOV X2, X31
	0x035EC36C BL 0x337B824
	0x035EC370 MOV X1, X0
	0x035EC374 ADRP X8, 0xB35000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xDF5000
	010 Move X25, 0xB4E000
	011 Move W8, [X20+693]
	012 Move X25, [X25+1472]
	013 Move W21, W4
	014 Move W22, W3
	015 Move X23, X2
	016 Move X24, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xB10000
	023 Move X0, [X0+2008]
	024 Call 0x1C17CF4
	025 Move X0, 0xB4E000
	026 Move X0, [X0+1472]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+693], W8
	030 Move X0, [X25]
	031 Call 0x1C17F10
	032 Move X20, X0
	033 Call MonoSslClientAuthenticationOptions..ctor, X0
	034 Compare X20, 0
	035 JumpIfEqual {89}
	036 Move X8, [X20]
	037 Move X25, 0xB10000
	038 Move X0, X20
	039 Move X1, X24
	040 Move X9, [X8+472]
	041 Move X2, [X8+480]
	042 Move X25, [X25+2008]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X20]
	045 Move X0, X20
	046 Move X1, X23
	047 Move X9, [X8+536]
	048 Move X2, [X8+544]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X20]
	051 Move X0, X20
	052 Move W1, W22
	053 Move X9, [X8+408]
	054 Move X2, [X8+416]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X20]
	057 And W1, W21, 1
	058 Move X0, X20
	059 Move X9, [X8+440]
	060 Move X2, [X8+448]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X20]
	063 Move X0, X20
	064 Move W1, W31
	065 Move X9, [X8+424]
	066 Move X2, [X8+432]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X0, [X25]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X31
	074 Call CancellationToken.get_None
	075 Move X3, X0
	076 Move X0, X19
	077 Move X2, X20
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move W1, W31
	085 Move X30, [X31+64]
	086 Move X25, [X31+72]
	087 Call MobileAuthenticatedStream.ProcessAuthentication, X0, X1, X2, X3
	088 Return X0
	089 Call 0x1C17F20

Method: System.Threading.Tasks.Task ProcessAuthentication(System.Boolean runSynchronously, Mono.Net.Security.MonoSslAuthenticationOptions options, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035EBF30 STR X30, [X31 - 0x10]!
	0x035EBF34 LDR X0, [X0 + 0x28]
	0x035EBF38 CBZ X0, 0x35EBF50
	0x035EBF3C LDR X8, [X0]
	0x035EBF40 LDR X3, [X8 + 0x348]
	0x035EBF44 LDR X2, [X8 + 0x350]
	0x035EBF48 LDR X30, [X31], #0x10
	0x035EBF4C BR X3
	0x035EBF50 BL 0x1C16F20
	0x035EBF54 STP X30, X19, [X31 - 0x10]!
	0x035EBF58 LDR X8, [X0]
	0x035EBF5C MOV X19, X0
	0x035EBF60 LDR X9, [X8 + 0x3B8]
	0x035EBF64 LDR X1, [X8 + 0x3C0]
	0x035EBF68 BLR X9
	0x035EBF6C TBZ X0, 0x0, 0x35EBF88
	0x035EBF70 LDR X0, [X19 + 0x28]
	0x035EBF74 CBZ X0, 0x35EBF94
	0x035EBF78 LDR X8, [X0]
	0x035EBF7C LDP X2, X1, [X8 + 0x1A8]
	0x035EBF80 LDP X30, X19, [X31], #0x10
	0x035EBF84 BR X2
	0x035EBF88 MOV W0, W31
	0x035EBF8C LDP X30, X19, [X31], #0x10
	0x035EBF90 RET
	0x035EBF94 BL 0x1C16F20
	0x035EBF98 STR X30, [X31 - 0x10]!
	0x035EBF9C LDR X0, [X0 + 0x28]
	0x035EBFA0 CBZ X0, 0x35EBFB4
	0x035EBFA4 LDR X8, [X0]
	0x035EBFA8 LDP X2, X1, [X8 + 0x1C8]
	0x035EBFAC LDR X30, [X31], #0x10
	0x035EBFB0 BR X2
	0x035EBFB4 BL 0x1C16F20
	0x035EBFB8 STR X30, [X31 - 0x20]!
	0x035EBFBC STP X20, X19, [X31 + 0x10]
	0x035EBFC0 LDR X8, [X0]
	0x035EBFC4 MOV X19, X0
	0x035EBFC8 LDR X9, [X8 + 0x3B8]
	0x035EBFCC LDR X1, [X8 + 0x3C0]
	0x035EBFD0 BLR X9
	0x035EBFD4 LDR X8, [X19 + 0x28]
	0x035EBFD8 CBZ X8, 0x35EC018
	0x035EBFDC LDR X9, [X8]
	0x035EBFE0 MOV W20, W0
	0x035EBFE4 MOV X0, X8
	0x035EBFE8 LDP X10, X1, [X9 + 0x1D8]
	0x035EBFEC BLR X10
	0x035EBFF0 AND W8, W20, W0, 0x0
	0x035EBFF4 TBZ X8, 0x0, 0x35EC008
	0x035EBFF8 LDRB W8, [X19 + 0x7C]
	0x035EBFFC CMP W8, 0x0
	0x035EC000 CSET W0, EQ
	0x035EC004 B 0x35EC00C
	0x035EC008 MOV W0, W31
	0x035EC00C LDP X20, X19, [X31 + 0x10]
	0x035EC010 LDR X30, [X31], #0x20
	0x035EC014 RET
	0x035EC018 BL 0x1C16F20
	0x035EC01C MOV W0, W31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xDF6000
	010 Move X23, 0xB0C000
	011 Move W8, [X24+694]
	012 Move X23, [X23+640]
	013 Move X19, X3
	014 Move X20, X2
	015 Move W22, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xB4F000
	022 Move X0, [X0+1496]
	023 Call 0x1C17CF4
	024 Move X0, 0xB0C000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+694], W8
	029 Move X0, [X23]
	030 And W8, W22, 1
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+6], V0
	035 Move [X31+32], V0
	036 Move [X31+40], V0
	037 Move [X31+80], W8
	038 Move [X31+64], X20
	039 Move [X31+72], X21
	040 Move [X31+88], X19
	041 Move X19, 0xB4F000
	042 Move W8, [X0+224]
	043 Move X19, [X19+1496]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X19]
	053 Add X8, X31, 32
	054 Or X19, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X19
	060 Move [X31+40], V0
	061 Move [X31+56], X9
	062 Move [X31+32], W10
	063 Call AsyncTaskMethodBuilder.Start, X0, X1
	064 Move X0, X19
	065 Move X1, X31
	066 Call AsyncTaskMethodBuilder.get_Task, X0
	067 Move X20, [X31+160]
	068 Move X19, [X31+168]
	069 Move X22, [X31+144]
	070 Move X21, [X31+152]
	071 Move X24, [X31+128]
	072 Move X23, [X31+136]
	073 Move X30, [X31+112]
	074 Add X31, X31, 176
	075 Return X0

Method: Mono.Net.Security.MobileTlsContext CreateContext(Mono.Net.Security.MonoSslAuthenticationOptions options)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x035EC378 LDR X8, [X8 + 0x990]
	0x035EC37C LDR X0, [X8]
	0x035EC380 MOV X2, X31
	0x035EC384 BL 0x321B938
	0x035EC388 MOV X1, X0
	0x035EC38C CBZ X20, 0x35EC760
	0x035EC390 LDR X8, [X20]
	0x035EC394 LDP X9, X2, [X8 + 0x1D8]
	0x035EC398 MOV X0, X20
	0x035EC39C BLR X9
	0x035EC3A0 LDR X0, [X19 + 0x20]
	0x035EC3A4 CBZ X0, 0x35EC74C
	0x035EC3A8 LDR X8, [X0]
	0x035EC3AC LDR X20, [X31 + 0x58]
	0x035EC3B0 LDP X9, X1, [X8 + 0x1C8]
	0x035EC3B4 BLR X9
	0x035EC3B8 CBZ X20, 0x35EC750
	0x035EC3BC STR X0, [X20 + 0xA0]
	0x035EC3C0 LDR X20, [X31 + 0x58]
	0x035EC3C4 CBZ X20, 0x35EC600
	0x035EC3C8 LDR X0, [X20 + 0x40]
	0x035EC3CC CBZ X0, 0x35EC3DC
	0x035EC3D0 MOV X1, X31
	0x035EC3D4 BL 0x32C2440
	0x035EC3D8 LDR X20, [X31 + 0x58]
	0x035EC3DC ADRP X8, 0xB4D000
	0x035EC3E0 LDR X8, [X8 + 0x638]
	0x035EC3E4 LDRB W21, [X19 + 0x30]
	0x035EC3E8 LDR X0, [X8]
	0x035EC3EC BL 0x1C16F10
	0x035EC3F0 MOV X22, X0
	0x035EC3F4 CMP W21, 0x0
	0x035EC3F8 CSET W2, NE
	0x035EC3FC MOV X1, X20
	0x035EC400 BL 0x35E7CAC
	0x035EC404 LDR X8, [X31 + 0x58]
	0x035EC408 CBZ X8, 0x35EC604
	0x035EC40C ADD X0, X8, 0x48
	0x035EC410 MOV X1, X22
	0x035EC414 MOV X2, X31
	0x035EC418 BL 0x1C24138
	0x035EC41C CBNZ X0, 0x35EC60C
	0x035EC420 LDR X8, [X31 + 0x58]
	0x035EC424 CBZ X8, 0x35EC640
	0x035EC428 ADD X0, X8, 0x50
	0x035EC42C MOV X1, X22
	0x035EC430 MOV X2, X31
	0x035EC434 BL 0x1C24138
	0x035EC438 CBNZ X0, 0x35EC67C
	0x035EC43C LDR X8, [X31 + 0x58]
	0x035EC440 CBZ X8, 0x35EC6AC
	0x035EC444 ADD X0, X8, 0x58
	0x035EC448 MOV X1, X22
	0x035EC44C MOV X2, X31
	0x035EC450 BL 0x1C24138
	0x035EC454 CBNZ X0, 0x35EC6C0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xDF5000
	010 Move X25, 0xB4E000
	011 Move X24, 0xB10000
	012 Move W8, [X23+695]
	013 Move X25, [X25+1528]
	014 Move X24, [X24+2008]
	015 Move W20, W3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xB4E000
	024 Move X0, [X0+1528]
	025 Call 0x1C17CF4
	026 Move X0, 0xB10000
	027 Move X0, [X0+2008]
	028 Call 0x1C17CF4
	029 Move X0, 0xB3B000
	030 Move X0, [X0+3264]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+695], W8
	034 Move X0, [X25]
	035 Call 0x1C17F10
	036 Move W2, 1
	037 Move X1, X19
	038 Move X3, X22
	039 Move W4, W21
	040 Move W5, W20
	041 Move X23, X0
	042 Call AsyncReadOrWriteRequest..ctor, X0, X1, X2, X3, X4, X5
	043 Move X0, [X24]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X31
	049 Call CancellationToken.get_None
	050 Move X3, X0
	051 Move X0, X19
	052 Move W1, W31
	053 Move X2, X23
	054 Call MobileAuthenticatedStream.StartOperation, X0, X1, X2, X3
	055 Compare X0, 0
	056 JumpIfEqual {70}
	057 Move X8, 0xB3B000
	058 Move X8, [X8+3264]
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X1, [X8]
	066 Move X30, [X31+64]
	067 Move X25, [X31+72]
	068 Call Task`1<Int32>.get_Result, X0
	069 Return X0
	070 Call 0x1C17F20

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x035EC56C ADD X0, X31, 0x30
	0x035EC570 MOV X1, X8
	0x035EC574 BL 0x2998B64
	0x035EC578 TBNZ X0, 0x0, 0x35EC5DC
	0x035EC57C STR W31, [X31 + 0x6C]
	0x035EC580 STR W31, [X19]
	0x035EC584 LDR V0, [X31 + 0x3]
	0x035EC588 STR V0, [X19 + 0x4]
	0x035EC58C LDR X0, [X24]
	0x035EC590 LDR W8, [X0 + 0xE0]
	0x035EC594 CBNZ W8, 0x35EC59C
	0x035EC598 BL 0x1C16DFC
	0x035EC59C ADRP X8, 0xB4D000
	0x035EC5A0 LDR X8, [X8 + 0x640]
	0x035EC5A4 ADD X0, X19, 0x8
	0x035EC5A8 LDR X3, [X8]
	0x035EC5AC ADD X1, X31, 0x30
	0x035EC5B0 MOV X2, X19
	0x035EC5B4 BL 0x2185754
	0x035EC5B8 MOV X20, X31
	0x035EC5BC MOVZ W23, 0x1A
	0x035EC5C0 B 0x35EC988
	0x035EC5C4 LDR V0, [X19 + 0x4]
	0x035EC5C8 MOVN W8, 0x0
	0x035EC5CC STR V0, [X31 + 0x3]
	0x035EC5D0 STP X31, X31, [X19 + 0x40]
	0x035EC5D4 STR W8, [X31 + 0x6C]
	0x035EC5D8 STR W8, [X19]
	0x035EC5DC ADRP X8, 0xB4D000
	0x035EC5E0 LDR X8, [X8 + 0x650]
	0x035EC5E4 ADD X0, X31, 0x30
	0x035EC5E8 LDR X1, [X8]
	0x035EC5EC BL 0x2998BB0
	0x035EC5F0 MOV X20, X0
	0x035EC5F4 MOVZ W23, 0x1D
	0x035EC5F8 B 0x35EC988
	0x035EC5FC BL 0x1C16F20
	0x035EC600 BL 0x1C16F20
	0x035EC604 BL 0x1C16F20
	0x035EC608 BL 0x1C16F20
	0x035EC60C ADRP X0, 0xB4D000
	0x035EC610 LDR X0, [X0 + 0x318]
	0x035EC614 BL 0x1C16D08
	0x035EC618 LDR W8, [X0 + 0xE0]
	0x035EC61C CBNZ W8, 0x35EC624
	0x035EC620 BL 0x1C16DFC
	0x035EC624 BL 0x35EACA8
	0x035EC628 ADRP X0, 0xB4D000
	0x035EC62C LDR X0, [X0 + 0x670]
	0x035EC630 BL 0x1C16D08
	0x035EC634 MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xDF5000
	010 Move X25, 0xB4E000
	011 Move X24, 0xB10000
	012 Move W8, [X23+696]
	013 Move X25, [X25+1544]
	014 Move X24, [X24+2008]
	015 Move W20, W3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xB4E000
	024 Move X0, [X0+1544]
	025 Call 0x1C17CF4
	026 Move X0, 0xB10000
	027 Move X0, [X0+2008]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+696], W8
	031 Move X0, [X25]
	032 Call 0x1C17F10
	033 Move W2, 1
	034 Move X1, X19
	035 Move X3, X22
	036 Move W4, W21
	037 Move W5, W20
	038 Move X23, X0
	039 Call AsyncReadOrWriteRequest..ctor, X0, X1, X2, X3, X4, X5
	040 Move X0, [X24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X31
	046 Call CancellationToken.get_None
	047 Move X3, X0
	048 Move W1, 1
	049 Move X0, X19
	050 Move X2, X23
	051 Call MobileAuthenticatedStream.StartOperation, X0, X1, X2, X3
	052 Compare X0, 0
	053 JumpIfEqual {65}
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X1, X31
	061 Move X30, [X31+64]
	062 Move X25, [X31+72]
	063 Call Task.Wait, X0
	064 Return 
	065 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035EC638 BL 0x1C16DEC
	0x035EC63C BL 0x1C16F20
	0x035EC640 BL 0x1C16F20
	0x035EC644 ADRP X0, 0xB07000
	0x035EC648 LDR X0, [X0 + 0x5B0]
	0x035EC64C BL 0x1C16D08
	0x035EC650 BL 0x1C16F10
	0x035EC654 MOV X20, X0
	0x035EC658 MOV X1, X31
	0x035EC65C BL 0x337DEC0
	0x035EC660 ADRP X0, 0xB4D000
	0x035EC664 LDR X0, [X0 + 0x670]
	0x035EC668 BL 0x1C16D08
	0x035EC66C MOV X1, X0
	0x035EC670 MOV X0, X20
	0x035EC674 BL 0x1C16DEC
	0x035EC678 BL 0x1C16F20
	0x035EC67C ADRP X0, 0xB4D000
	0x035EC680 LDR X0, [X0 + 0x318]
	0x035EC684 BL 0x1C16D08
	0x035EC688 LDR W8, [X0 + 0xE0]
	0x035EC68C CBNZ W8, 0x35EC694
	0x035EC690 BL 0x1C16DFC
	0x035EC694 BL 0x35EACA8
	0x035EC698 ADRP X0, 0xB4D000
	0x035EC69C LDR X0, [X0 + 0x670]
	0x035EC6A0 BL 0x1C16D08
	0x035EC6A4 MOV X1, X0
	0x035EC6A8 BL 0x1C16DEC
	0x035EC6AC BL 0x1C16F20
	0x035EC6B0 BL 0x1C16F20
	0x035EC6B4 MOV X0, X21
	0x035EC6B8 BL 0x1C16F18
	0x035EC6BC BL 0x1C16F20
	0x035EC6C0 ADRP X0, 0xB4D000
	0x035EC6C4 LDR X0, [X0 + 0x318]
	0x035EC6C8 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDF5000
	010 Move X25, 0xB4E000
	011 Move W8, [X24+697]
	012 Move X25, [X25+1528]
	013 Move X19, X4
	014 Move W21, W3
	015 Move W22, W2
	016 Move X23, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xB4E000
	023 Move X0, [X0+1528]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+697], W8
	027 Move X0, [X25]
	028 Call 0x1C17F10
	029 Move X1, X20
	030 Move W2, W31
	031 Move X3, X23
	032 Move W4, W22
	033 Move W5, W21
	034 Move X24, X0
	035 Call AsyncReadOrWriteRequest..ctor, X0, X1, X2, X3, X4, X5
	036 Move X0, X20
	037 Move X2, X24
	038 Move X3, X19
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X22, [X31+32]
	042 Move X21, [X31+40]
	043 Move X24, [X31+16]
	044 Move X23, [X31+24]
	045 Move W1, W31
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]
	048 Call MobileAuthenticatedStream.StartOperation, X0, X1, X2, X3
	049 Return X0

Method: System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035EC6CC LDR W8, [X0 + 0xE0]
	0x035EC6D0 CBNZ W8, 0x35EC6D8
	0x035EC6D4 BL 0x1C16DFC
	0x035EC6D8 BL 0x35EACA8
	0x035EC6DC ADRP X0, 0xB4D000
	0x035EC6E0 LDR X0, [X0 + 0x670]
	0x035EC6E4 BL 0x1C16D08
	0x035EC6E8 MOV X1, X0
	0x035EC6EC BL 0x1C16DEC
	0x035EC6F0 BL 0x1C16F20
	0x035EC6F4 BL 0x1C16F20
	0x035EC6F8 BL 0x1C16F20
	0x035EC6FC ADRP X0, 0xB0F000
	0x035EC700 LDR X0, [X0 + 0x578]
	0x035EC704 BL 0x1C16D08
	0x035EC708 BL 0x1C16F10
	0x035EC70C MOV X20, X0
	0x035EC710 ADRP X0, 0xB4D000
	0x035EC714 LDR X0, [X0 + 0x678]
	0x035EC718 BL 0x1C16D08
	0x035EC71C MOV X1, X0
	0x035EC720 MOV X0, X20
	0x035EC724 MOV X2, X31
	0x035EC728 BL 0x3314A68
	0x035EC72C ADRP X0, 0xB4D000
	0x035EC730 LDR X0, [X0 + 0x670]
	0x035EC734 BL 0x1C16D08
	0x035EC738 MOV X1, X0
	0x035EC73C MOV X0, X20
	0x035EC740 BL 0x1C16DEC
	0x035EC744 BL 0x1C16F20
	0x035EC748 BL 0x1C16F20
	0x035EC74C BL 0x1C16F20
	0x035EC750 BL 0x1C16F20
	0x035EC754 BL 0x1C16F20
	0x035EC758 BL 0x1C16F20
	0x035EC75C BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDF5000
	010 Move X25, 0xB4E000
	011 Move W8, [X24+698]
	012 Move X25, [X25+1544]
	013 Move X19, X4
	014 Move W21, W3
	015 Move W22, W2
	016 Move X23, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xB4E000
	023 Move X0, [X0+1544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+698], W8
	027 Move X0, [X25]
	028 Call 0x1C17F10
	029 Move X1, X20
	030 Move W2, W31
	031 Move X3, X23
	032 Move W4, W22
	033 Move W5, W21
	034 Move X24, X0
	035 Call AsyncReadOrWriteRequest..ctor, X0, X1, X2, X3, X4, X5
	036 Move X0, X20
	037 Move X2, X24
	038 Move X3, X19
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X22, [X31+32]
	042 Move X21, [X31+40]
	043 Move X24, [X31+16]
	044 Move X23, [X31+24]
	045 Move W1, 1
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]
	048 Call MobileAuthenticatedStream.StartOperation, X0, X1, X2, X3
	049 Return X0

Method: System.Threading.Tasks.Task`1<System.Int32> StartOperation(Mono.Net.Security.MobileAuthenticatedStream/OperationType type, Mono.Net.Security.AsyncProtocolRequest asyncRequest, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035EC458 LDR W8, [X31 + 0x6C]
	0x035EC45C ADRP X24, 0xB0A000
	0x035EC460 LDR X24, [X24 + 0x280]
	0x035EC464 ADD X9, X31, 0x6C
	0x035EC468 ADD X10, X31, 0x58
	0x035EC46C ADD X11, X31, 0x50
	0x035EC470 ADD X12, X31, 0x4C
	0x035EC474 STP X31, X9, [X31 + 0x8]
	0x035EC478 STP X10, X11, [X31 + 0x18]
	0x035EC47C STR X12, [X31 + 0x28]
	0x035EC480 CBZ W8, 0x35EC5C4
	0x035EC484 LDR X8, [X31 + 0x58]
	0x035EC488 CBZ X8, 0x35EC608
	0x035EC48C LDR X0, [X8 + 0x70]
	0x035EC490 STRB W31, [X31 + 0x4C]
	0x035EC494 STR X0, [X31 + 0x50]
	0x035EC498 ADD X1, X31, 0x4C
	0x035EC49C MOV X2, X31
	0x035EC4A0 BL 0x33DE64C
	0x035EC4A4 LDR X8, [X31 + 0x58]
	0x035EC4A8 CBZ X8, 0x35EC63C
	0x035EC4AC LDR X9, [X8 + 0x38]
	0x035EC4B0 CBNZ X9, 0x35EC644
	0x035EC4B4 LDR X0, [X8 + 0x60]
	0x035EC4B8 CBZ X0, 0x35EC678
	0x035EC4BC BL 0x35E7A98
	0x035EC4C0 LDR X8, [X31 + 0x58]
	0x035EC4C4 CBZ X8, 0x35EC6B0
	0x035EC4C8 LDR X0, [X8 + 0x68]
	0x035EC4CC CBZ X0, 0x35EC6BC
	0x035EC4D0 BL 0x35E7A98
	0x035EC4D4 LDR X20, [X31 + 0x58]
	0x035EC4D8 CBZ X20, 0x35EC6F0
	0x035EC4DC LDR X8, [X20]
	0x035EC4E0 LDR X1, [X19 + 0x20]
	0x035EC4E4 LDR X9, [X8 + 0x3E8]
	0x035EC4E8 LDR X2, [X8 + 0x3F0]
	0x035EC4EC MOV X0, X20
	0x035EC4F0 BLR X9
	0x035EC4F4 MOV X21, X31
	0x035EC4F8 STR X0, [X20 + 0x38]
	0x035EC4FC MOVZ W23, 0x14
	0x035EC500 LDR W8, [X31 + 0x6C]
	0x035EC504 TBZ X8, 0x1F, 0x35EC51C
	0x035EC508 LDRB W8, [X31 + 0x4C]
	0x035EC50C CBZ W8, 0x35EC51C
	0x035EC510 LDR X0, [X31 + 0x50]
	0x035EC514 MOV X1, X31
	0x035EC518 BL 0x33E14E4
	0x035EC51C CBNZ X21, 0x35EC6B4
	0x035EC520 CMP W23, 0x14
	0x035EC524 B.EQ 0x35EC52C
	0x035EC528 CBNZ W23, 0x35EC984
	0x035EC52C LDR W8, [X31 + 0x6C]
	0x035EC530 CBZ W8, 0x35EC5C4
	0x035EC534 CBZ X22, 0x35EC754
	0x035EC538 LDR X1, [X19 + 0x38]
	0x035EC53C MOV X0, X22
	0x035EC540 BL 0x35E7DFC
	0x035EC544 CBZ X0, 0x35EC758
	0x035EC548 ADRP X8, 0xB4D000
	0x035EC54C LDR X8, [X8 + 0x660]
	0x035EC550 LDR X2, [X8]
	0x035EC554 MOV W1, W31
	0x035EC558 BL 0x269F5D4
	0x035EC55C ADRP X8, 0xB4D000
	0x035EC560 LDR X8, [X8 + 0x658]
	0x035EC564 STP X0, X1, [X31 + 0x30]
	0x035EC568 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xDF5000
	010 Move X23, 0xB37000
	011 Move W8, [X24+699]
	012 Move X23, [X23+3488]
	013 Move X19, X3
	014 Move X20, X2
	015 Move W21, W1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xB37000
	022 Move X0, [X0+3496]
	023 Call 0x1C17CF4
	024 Move X0, 0xB4E000
	025 Move X0, [X0+1536]
	026 Call 0x1C17CF4
	027 Move X0, 0xB37000
	028 Move X0, [X0+3512]
	029 Call 0x1C17CF4
	030 Move X0, 0xB37000
	031 Move X0, [X0+3488]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+699], W8
	035 Move X0, [X23]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+64], V0
	038 Move [X31+72], V0
	039 Move [X31+6], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move [X31+64], X22
	043 Move [X31+72], W21
	044 Move [X31+80], X20
	045 Move [X31+88], X19
	046 Move X21, 0xB37000
	047 Move X19, 0xB4E000
	048 Move X20, 0xB37000
	049 Move W8, [X0+224]
	050 Move X21, [X21+3496]
	051 Move X19, [X19+1536]
	052 Move X20, [X20+3512]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Add X8, X31, 8
	058 Call AsyncTaskMethodBuilder`1<Int32>.Create
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X9, [X31+24]
	061 Move X2, [X19]
	062 Add X8, X31, 32
	063 Or X19, X8, 15
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W10, TEMP
	067 Add X1, X31, 32
	068 Move X0, X19
	069 Move [X31+40], V0
	070 Move [X31+56], X9
	071 Move [X31+32], W10
	072 Call AsyncTaskMethodBuilder`1<Int32>.Start, X0, X1
	073 Move X1, [X20]
	074 Move X0, X19
	075 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	076 Move X20, [X31+160]
	077 Move X19, [X31+168]
	078 Move X22, [X31+144]
	079 Move X21, [X31+152]
	080 Move X24, [X31+128]
	081 Move X23, [X31+136]
	082 Move X30, [X31+112]
	083 Add X31, X31, 176
	084 Return X0

Method: System.Int32 InternalRead(System.Byte[] buffer, System.Int32 offset, System.Int32 size, out System.Boolean outWantMore)

Disassembly:
	0x035E68C4 LDP X20, X19, [X31 + 0x40]
	0x035E68C8 LDP X22, X21, [X31 + 0x30]
	0x035E68CC LDP X24, X23, [X31 + 0x20]
	0x035E68D0 LDP X26, X25, [X31 + 0x10]
	0x035E68D4 LDR X30, [X31], #0x50
	0x035E68D8 B 0x35E7244
	0x035E68DC SUB X31, X31, 0x80
	0x035E68E0 STP X29, X30, [X31 + 0x20]
	0x035E68E4 STP X28, X27, [X31 + 0x30]
	0x035E68E8 STP X26, X25, [X31 + 0x40]
	0x035E68EC STP X24, X23, [X31 + 0x50]
	0x035E68F0 STP X22, X21, [X31 + 0x60]
	0x035E68F4 STP X20, X19, [X31 + 0x70]
	0x035E68F8 ADRP X21, 0xDFA000
	0x035E68FC LDRB W8, [X21 + 0x292]
	0x035E6900 MOV X19, X7
	0x035E6904 MOV X20, X6
	0x035E6908 MOV X24, X4
	0x035E690C MOV X25, X2
	0x035E6910 MOV X23, X1
	0x035E6914 TBNZ X8, 0x0, 0x35E695C
	0x035E6918 ADRP X0, 0xB53000
	0x035E691C LDR X0, [X0 + 0x388]
	0x035E6920 BL 0x1C16CF4
	0x035E6924 ADRP X0, 0xB53000
	0x035E6928 LDR X0, [X0 + 0x338]
	0x035E692C BL 0x1C16CF4
	0x035E6930 ADRP X0, 0xB53000
	0x035E6934 LDR X0, [X0 + 0x340]
	0x035E6938 BL 0x1C16CF4
	0x035E693C ADRP X0, 0xB0D000
	0x035E6940 LDR X0, [X0 + 0x988]
	0x035E6944 BL 0x1C16CF4
	0x035E6948 ADRP X0, 0xB53000
	0x035E694C LDR X0, [X0 + 0x390]
	0x035E6950 BL 0x1C16CF4
	0x035E6954 MOVZ W8, 0x1
	0x035E6958 STRB W8, [X21 + 0x292]
	0x035E695C BL 0x35E1D34
	0x035E6960 CBZ X0, 0x35E6EE4
	0x035E6964 LDR X8, [X0 + 0x20]
	0x035E6968 CBZ X8, 0x35E6EE4
	0x035E696C LDR X9, [X8 + 0x18]
	0x035E6970 LDR X0, [X8 + 0x40]
	0x035E6974 LDR X1, [X8 + 0x28]
	0x035E6978 BLR X9
	0x035E697C STP X0, X1, [X31 + 0x10]
	0x035E6980 LDR X0, [X20]
	0x035E6984 CBZ X0, 0x35E6EE4
	0x035E6988 MOV X1, X31
	0x035E698C BL 0x3658640
	0x035E6990 CBZ X0, 0x35E69CC
	0x035E6994 ADRP X8, 0xB53000
	0x035E6998 LDR X9, [X0]
	0x035E699C LDR X8, [X8 + 0x338]
	0x035E69A0 MOV X22, X0
	0x035E69A4 LDRB W11, [X9 + 0x130]
	0x035E69A8 LDR X8, [X8]
	0x035E69AC LDRB W10, [X8 + 0x130]
	0x035E69B0 CMP W11, W10
	0x035E69B4 B.CC 0x35E69CC
	0x035E69B8 LDR X9, [X9 + 0xC8]
	0x035E69BC ADD X9, X9, X10, 0x3, LSL
	0x035E69C0 LDUR X9, [X9 - 0x8]
	0x035E69C4 CMP X9, X8
	0x035E69C8 B.EQ 0x35E6BA0
	0x035E69CC CBZ X24, 0x35E6BF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+72]
	006 Move X19, X4
	007 Move W5, W3
	008 Move W4, W2
	009 Move X20, X0
	010 Move X3, X1
	011 Compare X8, 0
	012 JumpIfNotEqual {14}
	013 Move X8, [X20+80]
	014 Move X2, [X20+96]
	015 Move X1, X8
	016 Call MobileAuthenticatedStream.InternalRead, X0, X1, X2, X3, X4, X5
	017 Move X8, X0
	018 ShiftRight X8, 32
	019 And X8, X8, 0
	020 Move [X19], W8
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X21, X0
	028 Move X0, X21
	029 Call 0x3EB2AD0
	030 Move X21, X0
	031 Move X0, 0xB0E000
	032 Move X0, [X0+2000]
	033 Call 0x1C17D08
	034 Move X8, [X21]
	035 Move X1, [X8]
	036 Call 0x1C18270
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {66}
	041 Move X21, [X21]
	042 Call 0x3EB2AE0
	043 Move X0, 0xB54000
	044 Move X0, [X0+792]
	045 Call 0x1C17D08
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, 0xB54000
	051 Move X0, [X0+816]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X21
	055 Call MobileAuthenticatedStream.GetIOException, X0, X1
	056 Move X1, X31
	057 Call ExceptionDispatchInfo.Capture, X0
	058 Move X1, X0
	059 Add X0, X20, 64
	060 Move X2, X31
	061 Call 0x1C25138
	062 Move W8, W31
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W0, TEMP
	066 Move W0, 8
	067 Call 0x3EB2AF0
	068 Move X8, [X21]
	069 Move [X0], X8
	070 Move X1, 0x8CF000
	071 Add X1, X1, 3672
	072 Move X2, X31
	073 Call 0x3EB2B00
	074 Move X21, X0
	075 Call 0x3EB2AE0
	076 Move X0, X21
	077 Call 0x1D2D690
	078 Call 0x1991590

Method: System.ValueTuple`2<System.Int32, System.Boolean> InternalRead(Mono.Net.Security.AsyncProtocolRequest asyncRequest, Mono.Net.Security.BufferOffsetSize internalBuffer, System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x035EC760 BL 0x1C16F20
	0x035EC764 B 0x35ECA24
	0x035EC768 B 0x35ECA24
	0x035EC76C B 0x35ECA24
	0x035EC770 B 0x35ECA24
	0x035EC774 B 0x35ECA24
	0x035EC778 B 0x35ECA24
	0x035EC77C B 0x35EC808
	0x035EC780 B 0x35ECA24
	0x035EC784 B 0x35ECA24
	0x035EC788 B 0x35ECA24
	0x035EC78C B 0x35EC808
	0x035EC790 B 0x35EC808
	0x035EC794 B 0x35EC808
	0x035EC798 B 0x35ECA24
	0x035EC79C B 0x35ECA24
	0x035EC7A0 B 0x35ECA24
	0x035EC7A4 B 0x35ECA24
	0x035EC7A8 B 0x35ECA24
	0x035EC7AC B 0x35ECA24
	0x035EC7B0 B 0x35ECA24
	0x035EC7B4 B 0x35ECA24
	0x035EC7B8 B 0x35ECA24
	0x035EC7BC B 0x35EC808
	0x035EC7C0 B 0x35EC918
	0x035EC7C4 B 0x35EC918
	0x035EC7C8 B 0x35ECA24
	0x035EC7CC B 0x35EC918
	0x035EC7D0 B 0x35ECA24
	0x035EC7D4 B 0x35ECA24
	0x035EC7D8 B 0x35EC918
	0x035EC7DC B 0x35ECA24
	0x035EC7E0 B 0x35EC918
	0x035EC7E4 B 0x35EC918
	0x035EC7E8 B 0x35ECA24
	0x035EC7EC B 0x35EC904
	0x035EC7F0 B 0x35ECA24
	0x035EC7F4 B 0x35ECA24
	0x035EC7F8 B 0x35ECA24
	0x035EC7FC B 0x35ECA24
	0x035EC800 B 0x35ECA24
	0x035EC804 B 0x35ECA24
	0x035EC808 MOV X20, X1
	0x035EC80C MOV X23, X0
	0x035EC810 CMP W20, 0x1
	0x035EC814 B.NE 0x35EC964
	0x035EC818 MOV X0, X23
	0x035EC81C BL 0x3EB1AD0
	0x035EC820 MOV X20, X0
	0x035EC824 ADRP X0, 0xB07000
	0x035EC828 LDR X0, [X0 + 0x7D0]
	0x035EC82C BL 0x1C16D08
	0x035EC830 LDR X8, [X20]
	0x035EC834 LDR X1, [X8]
	0x035EC838 BL 0x1C17270
	0x035EC83C TBZ X0, 0x0, 0x35EC8B8
	0x035EC840 LDR X20, [X20]
	0x035EC844 BL 0x3EB1AE0
	0x035EC848 LDR X21, [X31 + 0x58]
	0x035EC84C ADRP X0, 0xB4D000
	0x035EC850 LDR X0, [X0 + 0x318]
	0x035EC854 BL 0x1C16D08
	0x035EC858 LDR W8, [X0 + 0xE0]
	0x035EC85C CBNZ W8, 0x35EC864
	0x035EC860 BL 0x1C16DFC
	0x035EC864 MOV X0, X20
	0x035EC868 BL 0x35E8A68
	0x035EC86C CBZ X21, 0x35EC8DC
	0x035EC870 MOV X1, X31
	0x035EC874 BL 0x32C2380
	0x035EC878 MOV X20, X0
	0x035EC87C ADD X0, X21, 0x40
	0x035EC880 MOV X1, X20
	0x035EC884 MOV X2, X31
	0x035EC888 BL 0x1C24138
	0x035EC88C CMP X0, 0x0
	0x035EC890 CSEL X21, X20, X0, EQ
	0x035EC894 ADRP X0, 0xB4D000
	0x035EC898 LDR X0, [X0 + 0x420]
	0x035EC89C BL 0x1C16D08
	0x035EC8A0 BL 0x1C16F10
	0x035EC8A4 MOV X20, X0
	0x035EC8A8 MOV X1, X31
	0x035EC8AC BL 0x33BDD8C
	0x035EC8B0 STR X21, [X20 + 0x18]
	0x035EC8B4 B 0x35EC5F4
	0x035EC8B8 MOVZ W0, 0x8
	0x035EC8BC BL 0x3EB1AF0
	0x035EC8C0 LDR X8, [X20]
	0x035EC8C4 STR X8, [X0]
	0x035EC8C8 ADRP X1, 0x8C8000
	0x035EC8CC ADD X1, X1, 0xE58
	0x035EC8D0 MOV X2, X31
	0x035EC8D4 BL 0x3EB1B00

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xDF5000
	011 Move W8, [X24+700]
	012 Move W19, W5
	013 Move W21, W4
	014 Move X22, X3
	015 Move X20, X2
	016 Move X23, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xB08000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move X0, 0xB4E000
	025 Move X0, [X0+696]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+700], W8
	029 Compare X23, 0
	030 JumpIfEqual {98}
	031 Compare X20, 0
	032 JumpIfEqual {111}
	033 Move X25, 0xB4E000
	034 Move W24, [X20+28]
	035 Move X25, [X25+696]
	036 Compare W24, 0
	037 JumpIfNotEqual {41}
	038 Move W8, [X20+36]
	039 Compare W8, 0
	040 JumpIfEqual {89}
	041 Move X8, 0xB08000
	042 Move X8, [X8+1448]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W0, W24
	049 Move W1, W19
	050 Move X2, X31
	051 Call Math.Min, X0, X1
	052 Move X8, [X20+16]
	053 Move W1, [X20+24]
	054 Move W23, W0
	055 Move X2, X22
	056 Move X0, X8
	057 Move W3, W21
	058 Move W4, W23
	059 Move X5, X31
	060 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	061 Move W8, [X20+24]
	062 Move W9, [X20+28]
	063 Move W10, [X20+36]
	064 Add X0, X31, 8
	065 Move W1, W23
	066 Add W8, W8, W23
	067 Subtract W9, W9, W23
	068 Move [X20+24], W8
	069 Move [X20+28], W9
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X3, [X25]
	072 NotImplemented "Instruction CSET not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 And W2, W9, W8
	076 Move [X31+8], X31
	077 Call ValueTuple`2<Int32, Boolean>..ctor, X0, X1, X2
	078 Move X0, [X31+8]
	079 Move X20, [X31+64]
	080 Move X19, [X31+72]
	081 Move X22, [X31+48]
	082 Move X21, [X31+56]
	083 Move X24, [X31+32]
	084 Move X23, [X31+40]
	085 Move X30, [X31+16]
	086 Move X25, [X31+24]
	087 Add X31, X31, 80
	088 Return X0
	089 Move X0, X23
	090 Move W1, W19
	091 Move [X20+24], X31
	092 Call AsyncProtocolRequest.RequestRead, X0, X1
	093 Move X3, [X25]
	094 Move [X31+8], X31
	095 Add X0, X31, 8
	096 Move W2, 1
	097 Move W1, W31
	098 Move X0, 0xB08000
	099 Move X0, [X0+1456]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X1, X31
	103 Move X19, X0
	104 Call InvalidOperationException..ctor, X0
	105 Move X0, 0xB4E000
	106 Move X0, [X0+1552]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC
	111 Call 0x1C17F20

Method: System.Boolean InternalWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x035E63E4 CBNZ X25, 0x35E64BC
	0x035E63E8 B 0x35E64C8
	0x035E63EC BL 0x1C16F20
	0x035E63F0 B 0x35E65F4
	0x035E63F4 BL 0x1C16F20
	0x035E63F8 B 0x35E65F4
	0x035E63FC BL 0x1C16F20
	0x035E6400 B 0x35E65F4
	0x035E6404 BL 0x1C16F20
	0x035E6408 B 0x35E65F4
	0x035E640C BL 0x1C16F20
	0x035E6410 B 0x35E65FC
	0x035E6414 BL 0x1C16F20
	0x035E6418 B 0x35E65F4
	0x035E641C BL 0x1C16F20
	0x035E6420 B 0x35E65F4
	0x035E6424 BL 0x1C16F20
	0x035E6428 B 0x35E65F4
	0x035E642C B 0x35E6478
	0x035E6430 B 0x35E6478
	0x035E6434 B 0x35E6478
	0x035E6438 B 0x35E6478
	0x035E643C MOV X26, X0
	0x035E6440 MOV X25, X31
	0x035E6444 B 0x35E647C
	0x035E6448 B 0x35E6478
	0x035E644C MOV X26, X0
	0x035E6450 B 0x35E647C
	0x035E6454 B 0x35E6478
	0x035E6458 B 0x35E6478
	0x035E645C B 0x35E6478
	0x035E6460 B 0x35E6478
	0x035E6464 B 0x35E6478
	0x035E6468 B 0x35E6478
	0x035E646C B 0x35E6478
	0x035E6470 B 0x35E6478
	0x035E6474 B 0x35E6478
	0x035E6478 MOV X26, X0
	0x035E647C CMP W1, 0x1
	0x035E6480 B.NE 0x35E6524
	0x035E6484 MOV X0, X26
	0x035E6488 BL 0x3EB1AD0
	0x035E648C MOV X26, X0
	0x035E6490 ADRP X0, 0xB13000
	0x035E6494 LDR X0, [X0 + 0xCC0]
	0x035E6498 BL 0x1C16D08
	0x035E649C LDR X8, [X26]
	0x035E64A0 LDR X1, [X8]
	0x035E64A4 BL 0x1C17270
	0x035E64A8 TBZ X0, 0x0, 0x35E64E8
	0x035E64AC BL 0x3EB1AE0
	0x035E64B0 MOV X27, X31
	0x035E64B4 MOVZ W24, 0xF
	0x035E64B8 CBZ X25, 0x35E64C8
	0x035E64BC MOV X0, X25
	0x035E64C0 MOV X1, X31
	0x035E64C4 BL 0x3658810
	0x035E64C8 CBNZ X27, 0x35E65EC
	0x035E64CC CMP W24, 0xF
	0x035E64D0 B.EQ 0x35E64D8
	0x035E64D4 CBNZ W24, 0x35E6550
	0x035E64D8 LDR X0, [X20 + 0x48]
	0x035E64DC ADD W22, W22, 0x1
	0x035E64E0 CBNZ X0, 0x35E6294
	0x035E64E4 B 0x35E659C
	0x035E64E8 MOVZ W0, 0x8
	0x035E64EC BL 0x3EB1AF0
	0x035E64F0 LDR X8, [X26]
	0x035E64F4 STR X8, [X0]
	0x035E64F8 ADRP X1, 0x8CE000
	0x035E64FC ADD X1, X1, 0xE58
	0x035E6500 MOV X2, X31
	0x035E6504 BL 0x3EB1B00
	0x035E6508 B 0x35E65F4
	0x035E650C MOV X26, X0
	0x035E6510 B 0x35E6524
	0x035E6514 MOV X27, X1
	0x035E6518 MOV X26, X0
	0x035E651C BL 0x3EB1AE0
	0x035E6520 MOV W1, W27
	0x035E6524 MOVZ W8, 0x1
	0x035E6528 CMP W1, W8
	0x035E652C B.NE 0x35E65F4
	0x035E6530 MOV X0, X26
	0x035E6534 BL 0x3EB1AD0
	0x035E6538 LDR X27, [X0]
	0x035E653C BL 0x3EB1AE0
	0x035E6540 MOV W24, W31
	0x035E6544 CBNZ X25, 0x35E64BC
	0x035E6548 B 0x35E64C8
	0x035E654C MOV X21, X31
	0x035E6550 MOV X0, X21
	0x035E6554 LDP X20, X19, [X31 + 0x50]
	0x035E6558 LDP X22, X21, [X31 + 0x40]
	0x035E655C LDP X24, X23, [X31 + 0x30]
	0x035E6560 LDP X26, X25, [X31 + 0x20]
	0x035E6564 LDP X28, X27, [X31 + 0x10]
	0x035E6568 LDP X29, X30, [X31], #0x60
	0x035E656C RET
	0x035E6570 LDR X0, [X20 + 0x48]
	0x035E6574 CBZ X0, 0x35E659C
	0x035E6578 LDP X20, X19, [X31 + 0x50]
	0x035E657C LDP X22, X21, [X31 + 0x40]
	0x035E6580 LDP X24, X23, [X31 + 0x30]
	0x035E6584 LDP X26, X25, [X31 + 0x20]
	0x035E6588 LDP X28, X27, [X31 + 0x10]
	0x035E658C MOV W1, W31
	0x035E6590 MOV X2, X31
	0x035E6594 LDP X29, X30, [X31], #0x60
	0x035E6598 B 0x3657B14
	0x035E659C BL 0x1C16F20
	0x035E65A0 ADRP X0, 0xB53000
	0x035E65A4 LDR X0, [X0 + 0x220]
	0x035E65A8 BL 0x1C16D08
	0x035E65AC BL 0x1C16F10
	0x035E65B0 MOV X19, X0
	0x035E65B4 ADRP X0, 0xB53000
	0x035E65B8 LDR X0, [X0 + 0x358]
	0x035E65BC BL 0x1C16D08
	0x035E65C0 MOV X2, X0
	0x035E65C4 MOVZ W1, 0x50
	0x035E65C8 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+128]
	008 Move X19, X0
	009 Subtract W8, W8, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X9, -44363776
	012 Add X9, X9, 3586
	013 NotImplemented "Instruction ADR not yet implemented."
	014 Move W11, [X9]
	015 Add X10, X10, X11
	016 Move W20, W3
	017 Move W21, W2
	018 Move X22, X1
	019 CallNoReturn X10
	020 Move X23, [X19+72]
	021 Move X23, [X19+88]
	022 Move X0, [X19+56]
	023 Compare X0, 0
	024 JumpIfEqual {62}
	025 Move X8, [X0]
	026 Move X23, [X19+80]
	027 Move X1, [X8+544]
	028 Move X9, [X8+536]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare X23, 0
	031 JumpIfNotEqual {34}
	032 Move W8, [X19+128]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X2, [X19+104]
	035 Move X0, X19
	036 Move X1, X23
	037 Move X3, X22
	038 Move W4, W21
	039 Move W5, W20
	040 Call MobileAuthenticatedStream.InternalWrite, X0, X1, X2, X3, X4, X5
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 And W0, W0, 1
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return X0
	049 Move X0, 0xB54000
	050 Move X0, [X0+792]
	051 Call 0x1C17D08
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Call MobileAuthenticatedStream.GetInternalError
	057 Move X0, 0xB54000
	058 Move X0, [X0+800]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Call 0x1C17DEC
	062 Call 0x1C17F20
	063 Move X0, 0xB54000
	064 Move X0, [X0+792]
	065 Call 0x1C17D08
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Call MobileAuthenticatedStream.GetInternalError
	071 Move X0, 0xB54000
	072 Move X0, [X0+800]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Call 0x1C17DEC
	076 Move X20, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X20
	079 Call 0x3EB2AD0
	080 Move X20, X0
	081 Move X0, 0xB0E000
	082 Move X0, [X0+2000]
	083 Call 0x1C17D08
	084 Move X8, [X20]
	085 Move X1, [X8]
	086 Call 0x1C18270
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {113}
	091 Move X20, [X20]
	092 Call 0x3EB2AE0
	093 Move X0, 0xB54000
	094 Move X0, [X0+792]
	095 Call 0x1C17D08
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, 0xB54000
	101 Move X0, [X0+808]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X20
	105 Call MobileAuthenticatedStream.GetIOException, X0, X1
	106 Move X1, X31
	107 Call ExceptionDispatchInfo.Capture, X0
	108 Move X1, X0
	109 Add X0, X19, 64
	110 Move X2, X31
	111 Call 0x1C25138
	112 Move W0, W31
	113 Move W0, 8
	114 Call 0x3EB2AF0
	115 Move X8, [X20]
	116 Move [X0], X8
	117 Move X1, 0x8CF000
	118 Add X1, X1, 3672
	119 Move X2, X31
	120 Call 0x3EB2B00
	121 Move X20, X0
	122 Call 0x3EB2AE0
	123 Move X0, X20
	124 Call 0x1D2D690
	125 Call 0x1991590

Method: System.Boolean InternalWrite(Mono.Net.Security.AsyncProtocolRequest asyncRequest, Mono.Net.Security.BufferOffsetSize2 internalBuffer, System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x035EC8D8 B 0x35ECAB8
	0x035EC8DC BL 0x1C16F20
	0x035EC8E0 B 0x35EC904
	0x035EC8E4 B 0x35EC904
	0x035EC8E8 B 0x35EC904
	0x035EC8EC B 0x35EC904
	0x035EC8F0 B 0x35EC904
	0x035EC8F4 MOV X20, X1
	0x035EC8F8 MOV X23, X0
	0x035EC8FC BL 0x3EB1AE0
	0x035EC900 B 0x35EC964
	0x035EC904 MOV X20, X1
	0x035EC908 MOV X23, X0
	0x035EC90C B 0x35EC964
	0x035EC910 B 0x35ECA24
	0x035EC914 B 0x35EC918
	0x035EC918 MOV X20, X1
	0x035EC91C MOV X23, X0
	0x035EC920 CMP W20, 0x1
	0x035EC924 B.NE 0x35EC940
	0x035EC928 MOV X0, X23
	0x035EC92C BL 0x3EB1AD0
	0x035EC930 LDR X21, [X0]
	0x035EC934 BL 0x3EB1AE0
	0x035EC938 MOV W23, W31
	0x035EC93C B 0x35EC500
	0x035EC940 MOV X21, X31
	0x035EC944 LDR W8, [X31 + 0x6C]
	0x035EC948 TBZ X8, 0x1F, 0x35EC960
	0x035EC94C LDRB W8, [X31 + 0x4C]
	0x035EC950 CBZ W8, 0x35EC960
	0x035EC954 LDR X0, [X31 + 0x50]
	0x035EC958 MOV X1, X31
	0x035EC95C BL 0x33E14E4
	0x035EC960 CBNZ X21, 0x35EC9F0
	0x035EC964 CMP W20, 0x1
	0x035EC968 B.NE 0x35ECA00
	0x035EC96C MOV X0, X23
	0x035EC970 BL 0x3EB1AD0
	0x035EC974 LDR X8, [X0]
	0x035EC978 STR X8, [X31 + 0x8]
	0x035EC97C BL 0x3EB1AE0
	0x035EC980 MOV W23, W31
	0x035EC984 MOV X20, X31
	0x035EC988 ADD X0, X31, 0x8
	0x035EC98C BL 0x1BC49BC
	0x035EC990 CMP W23, 0x1D
	0x035EC994 B.EQ 0x35EC99C
	0x035EC998 CBNZ W23, 0x35EC9D4
	0x035EC99C CBZ X20, 0x35EC9EC
	0x035EC9A0 LDR X0, [X20 + 0x18]
	0x035EC9A4 CBZ X0, 0x35EC9B0
	0x035EC9A8 MOV X1, X31
	0x035EC9AC BL 0x32C2440
	0x035EC9B0 MOVN W8, 0x1
	0x035EC9B4 STR W8, [X19], #0x8
	0x035EC9B8 LDR X0, [X24]
	0x035EC9BC LDR W8, [X0 + 0xE0]
	0x035EC9C0 CBNZ W8, 0x35EC9C8
	0x035EC9C4 BL 0x1C16DFC
	0x035EC9C8 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W19, W5
	008 Move W20, W4
	009 Move X21, X3
	010 Move X22, X2
	011 Compare X1, 0
	012 JumpIfEqual {23}
	013 Compare X22, 0
	014 JumpIfEqual {71}
	015 Move X23, X1
	016 Move X0, X22
	017 Move X1, X21
	018 Move W2, W20
	019 Move W3, W19
	020 Call BufferOffsetSize2.AppendData, X0, X1, X2, X3
	021 Move W0, 1
	022 Move [X23+40], W0
	023 Move X8, [X0+64]
	024 Compare X8, 0
	025 JumpIfEqual {27}
	026 Move W0, W31
	027 Add X0, X0, 120
	028 Move W1, 1
	029 Move X2, X31
	030 Call Interlocked.Exchange, X0, X1
	031 Compare X22, 0
	032 JumpIfEqual {71}
	033 Compare W0, 0
	034 JumpIfEqual {56}
	035 Move X8, [X22+16]
	036 Compare X8, 0
	037 JumpIfEqual {71}
	038 Move W9, [X22+24]
	039 Move W10, [X22+28]
	040 Move W8, [X8+24]
	041 Add W9, W10, W9
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, 0xB08000
	044 Move X0, [X0+1456]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X1, X31
	048 Move X19, X0
	049 Call InvalidOperationException..ctor, X0
	050 Move X0, 0xB4E000
	051 Move X0, [X0+1560]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call 0x1C17DEC
	056 Move X0, X22
	057 Call BufferOffsetSize2.Reset, X0
	058 Move X0, X22
	059 Move X1, X21
	060 Move W2, W20
	061 Move W3, W19
	062 Call BufferOffsetSize2.AppendData, X0, X1, X2, X3
	063 Move W0, 1
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int32> InnerRead(System.Boolean sync, System.Int32 requestedSize, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035EA0E0 LDP X30, X21, [X31], #0x20
	0x035EA0E4 RET
	0x035EA0E8 BL 0x1C16F20
	0x035EA0EC STP X30, X21, [X31 - 0x20]!
	0x035EA0F0 STP X20, X19, [X31 + 0x10]
	0x035EA0F4 ADRP X20, 0xDF6000
	0x035EA0F8 ADRP X21, 0xB4F000
	0x035EA0FC LDRB W8, [X20 + 0x2DD]
	0x035EA100 LDR X21, [X21 + 0x548]
	0x035EA104 MOV X19, X0
	0x035EA108 TBNZ X8, 0x0, 0x35EA138
	0x035EA10C ADRP X0, 0xB4F000
	0x035EA110 LDR X0, [X0 + 0x518]
	0x035EA114 BL 0x1C16CF4
	0x035EA118 ADRP X0, 0xB4F000
	0x035EA11C LDR X0, [X0 + 0x550]
	0x035EA120 BL 0x1C16CF4
	0x035EA124 ADRP X0, 0xB4F000
	0x035EA128 LDR X0, [X0 + 0x548]
	0x035EA12C BL 0x1C16CF4
	0x035EA130 MOVZ W8, 0x1
	0x035EA134 STRB W8, [X20 + 0x2DD]
	0x035EA138 LDR X0, [X21]
	0x035EA13C BL 0x1C16F10
	0x035EA140 MOV X1, X31
	0x035EA144 MOV X20, X0
	0x035EA148 BL 0x33BDD8C
	0x035EA14C CBZ X20, 0x35EA19C
	0x035EA150 STR X19, [X20 + 0x10]
	0x035EA154 CBZ X19, 0x35EA18C
	0x035EA158 ADRP X8, 0xB4F000
	0x035EA15C LDR X8, [X8 + 0x518]
	0x035EA160 ADRP X19, 0xB4F000
	0x035EA164 LDR X0, [X8]
	0x035EA168 LDR X19, [X19 + 0x550]
	0x035EA16C BL 0x1C16F10
	0x035EA170 LDR X2, [X19]
	0x035EA174 MOV X1, X20
	0x035EA178 MOV X3, X31
	0x035EA17C MOV X19, X0
	0x035EA180 BL 0x362542C
	0x035EA184 MOV X0, X19
	0x035EA188 B 0x35EA190
	0x035EA18C MOV X0, X31
	0x035EA190 LDP X20, X19, [X31 + 0x10]
	0x035EA194 LDP X30, X21, [X31], #0x20
	0x035EA198 RET
	0x035EA19C BL 0x1C16F20
	0x035EA1A0 MOV X1, X31
	0x035EA1A4 B 0x33BDD8C
	0x035EA1A8 STP X30, X19, [X31 - 0x10]!
	0x035EA1AC CBZ X1, 0x35EA1D8
	0x035EA1B0 MOV X19, X1
	0x035EA1B4 MOV X0, X1
	0x035EA1B8 MOV X1, X31
	0x035EA1BC BL 0x3352004
	0x035EA1C0 CBZ W0, 0x35EA1D8
	0x035EA1C4 MOV X0, X19
	0x035EA1C8 MOV W1, W31
	0x035EA1CC MOV X2, X31
	0x035EA1D0 LDP X30, X19, [X31], #0x10
	0x035EA1D4 B 0x3657B14
	0x035EA1D8 MOV X0, X31
	0x035EA1DC LDP X30, X19, [X31], #0x10
	0x035EA1E0 RET
	0x035EA1E4 LDR X0, [X0 + 0x18]
	0x035EA1E8 RET
	0x035EA1EC STR X30, [X31 - 0x20]!
	0x035EA1F0 STP X20, X19, [X31 + 0x10]
	0x035EA1F4 LDR X20, [X0 + 0x30]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xDF7000
	010 Move X23, 0xB39000
	011 Move W8, [X24+701]
	012 Move X23, [X23+3488]
	013 Move X19, X3
	014 Move W20, W2
	015 Move W22, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xB39000
	022 Move X0, [X0+3496]
	023 Call 0x1C17CF4
	024 Move X0, 0xB50000
	025 Move X0, [X0+1224]
	026 Call 0x1C17CF4
	027 Move X0, 0xB39000
	028 Move X0, [X0+3512]
	029 Call 0x1C17CF4
	030 Move X0, 0xB39000
	031 Move X0, [X0+3488]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+701], W8
	035 Move X0, [X23]
	036 And W8, W22, 1
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+96], X31
	039 Move [X31+64], V0
	040 Move [X31+72], V0
	041 Move [X31+32], V0
	042 Move [X31+40], V0
	043 Move [X31+84], W8
	044 Move [X31+80], W20
	045 Move [X31+64], X21
	046 Move [X31+72], X19
	047 Move X21, 0xB39000
	048 Move X19, 0xB50000
	049 Move X20, 0xB39000
	050 Move W8, [X0+224]
	051 Move X21, [X21+3496]
	052 Move X19, [X19+1224]
	053 Move X20, [X20+3512]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, [X21]
	058 Add X8, X31, 8
	059 Call AsyncTaskMethodBuilder`1<Int32>.Create
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move X9, [X31+24]
	062 Move X2, [X19]
	063 Add X8, X31, 32
	064 Or X19, X8, 15
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W10, TEMP
	068 Add X1, X31, 32
	069 Move X0, X19
	070 Move [X31+40], V0
	071 Move [X31+56], X9
	072 Move [X31+32], W10
	073 Call AsyncTaskMethodBuilder`1<Int32>.Start, X0, X1
	074 Move X1, [X20]
	075 Move X0, X19
	076 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X30, [X31+112]
	084 Add X31, X31, 176
	085 Return X0

Method: System.Threading.Tasks.Task InnerWrite(System.Boolean sync, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035E9BFC STP X30, X25, [X31 - 0x40]!
	0x035E9C00 STP X24, X23, [X31 + 0x10]
	0x035E9C04 STP X22, X21, [X31 + 0x20]
	0x035E9C08 STP X20, X19, [X31 + 0x30]
	0x035E9C0C ADRP X25, 0xDF7000
	0x035E9C10 LDRB W8, [X25 + 0x2AB]
	0x035E9C14 MOV X21, X5
	0x035E9C18 MOV W24, W4
	0x035E9C1C MOV X20, X3
	0x035E9C20 MOV X23, X2
	0x035E9C24 MOV X22, X1
	0x035E9C28 MOV X19, X0
	0x035E9C2C TBNZ X8, 0x0, 0x35E9C98
	0x035E9C30 ADRP X0, 0xB50000
	0x035E9C34 LDR X0, [X0 + 0x510]
	0x035E9C38 BL 0x1C16CF4
	0x035E9C3C ADRP X0, 0xB50000
	0x035E9C40 LDR X0, [X0 + 0x518]
	0x035E9C44 BL 0x1C16CF4
	0x035E9C48 ADRP X0, 0xB50000
	0x035E9C4C LDR X0, [X0 + 0x378]
	0x035E9C50 BL 0x1C16CF4
	0x035E9C54 ADRP X0, 0xB14000
	0x035E9C58 LDR X0, [X0 + 0x170]
	0x035E9C5C BL 0x1C16CF4
	0x035E9C60 ADRP X0, 0xB0E000
	0x035E9C64 LDR X0, [X0 + 0xBF0]
	0x035E9C68 BL 0x1C16CF4
	0x035E9C6C ADRP X0, 0xB38000
	0x035E9C70 LDR X0, [X0 + 0x230]
	0x035E9C74 BL 0x1C16CF4
	0x035E9C78 ADRP X0, 0xB50000
	0x035E9C7C LDR X0, [X0 + 0x520]
	0x035E9C80 BL 0x1C16CF4
	0x035E9C84 ADRP X0, 0xB50000
	0x035E9C88 LDR X0, [X0 + 0x528]
	0x035E9C8C BL 0x1C16CF4
	0x035E9C90 MOVZ W8, 0x1
	0x035E9C94 STRB W8, [X25 + 0x2AB]
	0x035E9C98 MOV X0, X19
	0x035E9C9C MOV X1, X31
	0x035E9CA0 BL 0x33BDD8C
	0x035E9CA4 CBZ X20, 0x35E9CB4
	0x035E9CA8 TBNZ X24, 0x0, 0x35E9CC4
	0x035E9CAC CBNZ X23, 0x35E9D00
	0x035E9CB0 B 0x35E9CE0
	0x035E9CB4 MOV X0, X31
	0x035E9CB8 BL 0x31FD854
	0x035E9CBC MOV X20, X0
	0x035E9CC0 TBZ X24, 0x0, 0x35E9CAC
	0x035E9CC4 CBZ X20, 0x35E9E5C
	0x035E9CC8 MOV X0, X20
	0x035E9CCC MOV X1, X19
	0x035E9CD0 MOV X2, X31
	0x035E9CD4 BL 0x31FD8CC
	0x035E9CD8 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0xDF8000
	009 Move X22, 0xB0E000
	010 Move W8, [X23+702]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move W21, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB51000
	020 Move X0, [X0+1184]
	021 Call 0x1C17CF4
	022 Move X0, 0xB0E000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+702], W8
	027 Move X0, [X22]
	028 And W8, W21, 1
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+96], X31
	031 Move [X31+64], V0
	032 Move [X31+72], V0
	033 Move [X31+32], V0
	034 Move [X31+40], V0
	035 Move [X31+80], W8
	036 Move [X31+64], X19
	037 Move [X31+72], X20
	038 Move X19, 0xB51000
	039 Move W8, [X0+224]
	040 Move X19, [X19+1184]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X19]
	050 Add X8, X31, 32
	051 Or X19, X8, 15
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W10, TEMP
	055 Add X1, X31, 32
	056 Move X0, X19
	057 Move [X31+40], V0
	058 Move [X31+56], X9
	059 Move [X31+32], W10
	060 Call AsyncTaskMethodBuilder.Start, X0, X1
	061 Move X0, X19
	062 Move X1, X31
	063 Call AsyncTaskMethodBuilder.get_Task, X0
	064 Move X20, [X31+144]
	065 Move X19, [X31+152]
	066 Move X22, [X31+128]
	067 Move X21, [X31+136]
	068 Move X30, [X31+112]
	069 Move X23, [X31+120]
	070 Add X31, X31, 160
	071 Return X0

Method: Mono.Net.Security.AsyncOperationStatus ProcessHandshake(Mono.Net.Security.AsyncOperationStatus status, System.Boolean renegotiate)

Disassembly:
	0x035EA298 ADRP X0, 0xB0F000
	0x035EA29C LDR X0, [X0 + 0xCC0]
	0x035EA2A0 BL 0x1C16D08
	0x035EA2A4 LDR X8, [X20]
	0x035EA2A8 LDR X1, [X8]
	0x035EA2AC BL 0x1C17270
	0x035EA2B0 TBZ X0, 0x0, 0x35EA2D4
	0x035EA2B4 LDR X20, [X20]
	0x035EA2B8 BL 0x3EB1AE0
	0x035EA2BC LDR X8, [X19 + 0x38]
	0x035EA2C0 CBZ X8, 0x35EA2CC
	0x035EA2C4 MOVZ W9, 0x1
	0x035EA2C8 STRB W9, [X8 + 0x44]
	0x035EA2CC MOV X0, X20
	0x035EA2D0 BL 0x1C16F18
	0x035EA2D4 MOVZ W0, 0x8
	0x035EA2D8 BL 0x3EB1AF0
	0x035EA2DC LDR X8, [X20]
	0x035EA2E0 STR X8, [X0]
	0x035EA2E4 ADRP X1, 0x8CA000
	0x035EA2E8 ADD X1, X1, 0xE58
	0x035EA2EC MOV X2, X31
	0x035EA2F0 BL 0x3EB1B00
	0x035EA2F4 MOV X20, X0
	0x035EA2F8 BL 0x3EB1AE0
	0x035EA2FC MOV X0, X20
	0x035EA300 BL 0x1D2C690
	0x035EA304 BL 0x1990590
	0x035EA308 SUB X31, X31, 0x30
	0x035EA30C STP X30, X21, [X31 + 0x10]
	0x035EA310 STP X20, X19, [X31 + 0x20]
	0x035EA314 MOV X20, X4
	0x035EA318 STR X4, [X31 + 0x8]
	0x035EA31C AND W2, W2, 0x1
	0x035EA320 ADD X4, X31, 0x8
	0x035EA324 BL 0x35EA3D4
	0x035EA328 MOV X21, X0
	0x035EA32C LDR X0, [X31 + 0x8]
	0x035EA330 MOV X19, X31
	0x035EA334 CMP X0, X20
	0x035EA338 B.EQ 0x35EA36C
	0x035EA33C CBZ X0, 0x35EA370
	0x035EA340 MOV X1, X31
	0x035EA344 BL 0x365883C
	0x035EA348 B 0x35EA370
	0x035EA34C CMP W1, 0x1
	0x035EA350 MOV X21, X0
	0x035EA354 B.NE 0x35EA39C
	0x035EA358 MOV X0, X21
	0x035EA35C BL 0x3EB1AD0
	0x035EA360 LDR X19, [X0]
	0x035EA364 BL 0x3EB1AE0
	0x035EA368 MOV X21, X31
	0x035EA36C CBZ X20, 0x35EA388
	0x035EA370 CBNZ X19, 0x35EA394
	0x035EA374 MOV X0, X21
	0x035EA378 LDP X20, X19, [X31 + 0x20]
	0x035EA37C LDP X30, X21, [X31 + 0x10]
	0x035EA380 ADD X31, X31, 0x30
	0x035EA384 RET
	0x035EA388 LDR X0, [X31 + 0x8]
	0x035EA38C CBNZ X0, 0x35EA340
	0x035EA390 B 0x35EA370
	0x035EA394 MOV X0, X19
	0x035EA398 BL 0x1C16F18
	0x035EA39C MOV X19, X31
	0x035EA3A0 B 0x35EA3A8
	0x035EA3A4 MOV X21, X0
	0x035EA3A8 CBNZ X20, 0x35EA3BC
	0x035EA3AC LDR X0, [X31 + 0x8]
	0x035EA3B0 CBZ X0, 0x35EA3BC
	0x035EA3B4 MOV X1, X31
	0x035EA3B8 BL 0x365883C
	0x035EA3BC CBNZ X19, 0x35EA3C8
	0x035EA3C0 MOV X0, X21
	0x035EA3C4 BL 0x1D2C690
	0x035EA3C8 MOV X0, X19
	0x035EA3CC BL 0x1C16F18
	0x035EA3D0 BL 0x1990590
	0x035EA3D4 SUB X31, X31, 0x80
	0x035EA3D8 STR X30, [X31 + 0x20]
	0x035EA3DC STP X28, X27, [X31 + 0x30]
	0x035EA3E0 STP X26, X25, [X31 + 0x40]
	0x035EA3E4 STP X24, X23, [X31 + 0x50]
	0x035EA3E8 STP X22, X21, [X31 + 0x60]
	0x035EA3EC STP X20, X19, [X31 + 0x70]
	0x035EA3F0 ADRP X26, 0xDF6000
	0x035EA3F4 LDRB W8, [X26 + 0x2AD]
	0x035EA3F8 MOV W25, W6
	0x035EA3FC MOV X22, X5
	0x035EA400 MOV X21, X4
	0x035EA404 MOV X20, X3
	0x035EA408 MOV W24, W2
	0x035EA40C MOV X23, X1
	0x035EA410 MOV X19, X0
	0x035EA414 STR W6, [X31 + 0x2C]
	0x035EA418 TBNZ X8, 0x0, 0x35EA46C
	0x035EA41C ADRP X0, 0xB4F000
	0x035EA420 LDR X0, [X0 + 0x558]
	0x035EA424 BL 0x1C16CF4
	0x035EA428 ADRP X0, 0xB4F000
	0x035EA42C LDR X0, [X0 + 0x560]
	0x035EA430 BL 0x1C16CF4
	0x035EA434 ADRP X0, 0xB4F000
	0x035EA438 LDR X0, [X0 + 0x568]
	0x035EA43C BL 0x1C16CF4
	0x035EA440 ADRP X0, 0xB37000
	0x035EA444 LDR X0, [X0 + 0x230]
	0x035EA448 BL 0x1C16CF4
	0x035EA44C ADRP X0, 0xB4F000
	0x035EA450 LDR X0, [X0 + 0x570]
	0x035EA454 BL 0x1C16CF4
	0x035EA458 ADRP X0, 0xB4F000
	0x035EA45C LDR X0, [X0 + 0x578]
	0x035EA460 BL 0x1C16CF4
	0x035EA464 MOVZ W8, 0x1
	0x035EA468 STRB W8, [X26 + 0x2AD]
	0x035EA46C STR W31, [X31 + 0x28]
	0x035EA470 LDR X8, [X19 + 0x38]
	0x035EA474 CBZ X8, 0x35EA498
	0x035EA478 LDR X0, [X19 + 0x40]
	0x035EA47C CBZ X0, 0x35EA7D8
	0x035EA480 MOV X1, X31
	0x035EA484 BL 0x369CDF8
	0x035EA488 CBZ X0, 0x35EA7D8
	0x035EA48C MOV X1, X20
	0x035EA490 MOV X2, X31
	0x035EA494 BL 0x36A5CAC
	0x035EA498 ADRP X27, 0xB4F000
	0x035EA49C ADRP X26, 0xB4F000
	0x035EA4A0 LDR X27, [X27 + 0x568]
	0x035EA4A4 LDR X26, [X26 + 0x578]
	0x035EA4A8 CBZ X20, 0x35EA580
	0x035EA4AC MOV X0, X23
	0x035EA4B0 MOV X1, X31
	0x035EA4B4 BL 0x32277A8
	0x035EA4B8 TBNZ X0, 0x0, 0x35EA4F0
	0x035EA4BC CBZ X23, 0x35EA7D8
	0x035EA4C0 MOVZ W1, 0x3A
	0x035EA4C4 MOV X0, X23
	0x035EA4C8 MOV X2, X31
	0x035EA4CC BL 0x322BD98
	0x035EA4D0 CMP W0, 0x1
	0x035EA4D4 B.LT 0x35EA4F0
	0x035EA4D8 MOV W2, W0
	0x035EA4DC MOV X0, X23
	0x035EA4E0 MOV W1, W31
	0x035EA4E4 MOV X3, X31
	0x035EA4E8 BL 0x3228DE4
	0x035EA4EC MOV X23, X0
	0x035EA4F0 ADRP X25, 0xB37000
	0x035EA4F4 LDR X25, [X25 + 0x230]
	0x035EA4F8 LDR X0, [X25]
	0x035EA4FC LDR W8, [X0 + 0xE0]
	0x035EA500 CBNZ W8, 0x35EA508
	0x035EA504 BL 0x1C16DFC
	0x035EA508 ADRP X28, 0xDF6000
	0x035EA50C LDRB W8, [X28 + 0x2F7]
	0x035EA510 CBNZ W8, 0x35EA528
	0x035EA514 ADRP X0, 0xB37000
	0x035EA518 LDR X0, [X0 + 0x230]
	0x035EA51C BL 0x1C16CF4
	0x035EA520 MOVZ W8, 0x1
	0x035EA524 STRB W8, [X28 + 0x2F7]
	0x035EA528 LDR X0, [X25]
	0x035EA52C ADRP X28, 0xB4F000
	0x035EA530 LDR W8, [X0 + 0xE0]
	0x035EA534 LDR X28, [X28 + 0x570]
	0x035EA538 CBNZ W8, 0x35EA544
	0x035EA53C BL 0x1C16DFC
	0x035EA540 LDR X0, [X25]
	0x035EA544 LDR X8, [X0 + 0xB8]
	0x035EA548 LDR X0, [X28]
	0x035EA54C LDR X25, [X8 + 0x8]
	0x035EA550 STR W31, [X31 + 0x28]
	0x035EA554 LDR W8, [X0 + 0xE0]
	0x035EA558 CBNZ W8, 0x35EA560
	0x035EA55C BL 0x1C16DFC
	0x035EA560 LDR X8, [X19 + 0x28]
	0x035EA564 CBZ X8, 0x35EA5B0
	0x035EA568 LDR X8, [X19 + 0x18]
	0x035EA56C CBZ X8, 0x35EA578
	0x035EA570 LDRB W8, [X8 + 0x76]
	0x035EA574 CBZ W8, 0x35EA5B0
	0x035EA578 MOVZ W5, 0x1
	0x035EA57C B 0x35EA5B4
	0x035EA580 ORR W20, W25, 0x1
	0x035EA584 STR W20, [X31 + 0x2C]
	0x035EA588 LDR X8, [X19 + 0x28]
	0x035EA58C CBZ X8, 0x35EA654
	0x035EA590 MOV X0, X19
	0x035EA594 MOV X1, X31
	0x035EA598 MOV X2, X31
	0x035EA59C MOV W3, W20
	0x035EA5A0 BL 0x35EA7DC
	0x035EA5A4 MOV W19, W0
	0x035EA5A8 EOR W21, W0, 0x1
	0x035EA5AC B 0x35EA65C
	0x035EA5B0 MOV W5, W31
	0x035EA5B4 LDR X0, [X19 + 0x20]
	0x035EA5B8 CBZ X0, 0x35EA7D8
	0x035EA5BC LDR X8, [X0]
	0x035EA5C0 ADD X10, X31, 0x28
	0x035EA5C4 AND W3, W24, 0x1
	0x035EA5C8 ADD X7, X31, 0x2C
	0x035EA5CC LDP X9, X8, [X8 + 0x1F8]
	0x035EA5D0 MOV X1, X19
	0x035EA5D4 MOV X2, X23
	0x035EA5D8 MOV X4, X22
	0x035EA5DC MOV X6, X21
	0x035EA5E0 STP X10, X8, [X31]
	0x035EA5E4 BLR X9
	0x035EA5E8 LDP W22, W3, [X31 + 0x28]
	0x035EA5EC MOV W23, W0
	0x035EA5F0 CBNZ W22, 0x35EA604
	0x035EA5F4 CBZ W3, 0x35EA604
	0x035EA5F8 MOVZ W22, 0x10B
	0x035EA5FC MOVK W22, 0x800B0000
	0x035EA600 STR W22, [X31 + 0x28]
	0x035EA604 CBZ X25, 0x35EA64C
	0x035EA608 ADRP X28, 0xB4F000
	0x035EA60C LDR X28, [X28 + 0x558]
	0x035EA610 LDR X8, [X25]
	0x035EA614 LDR X9, [X28]
	0x035EA618 LDRB W11, [X8 + 0x130]
	0x035EA61C LDRB W10, [X9 + 0x130]
	0x035EA620 CMP W11, W10
	0x035EA624 B.CC 0x35EA63C
	0x035EA628 LDR X11, [X8 + 0xC8]
	0x035EA62C ADD X10, X11, X10, 0x3, LSL
	0x035EA630 LDUR X10, [X10 - 0x8]
	0x035EA634 CMP X10, X9
	0x035EA638 B.EQ 0x35EA7CC
	0x035EA63C LDR X23, [X19 + 0x40]
	0x035EA640 CBZ X23, 0x35EA690
	0x035EA644 LDR X24, [X23 + 0xD0]
	0x035EA648 B 0x35EA694
	0x035EA64C MOV W22, W31
	0x035EA650 B 0x35EA74C
	0x035EA654 MOV W19, W31
	0x035EA658 MOV W21, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+112]
	007 Move W22, W2
	008 Move W21, W1
	009 Move X20, X0
	010 Move [X31+12], W31
	011 Add X1, X31, 12
	012 Move X0, X19
	013 Move X2, X31
	014 Call Monitor.Enter, X0, X1
	015 Move W8, [X20+128]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X9, -44380160
	018 Add X9, X9, 3592
	019 NotImplemented "Instruction ADR not yet implemented."
	020 Move W11, [X9]
	021 Add X10, X10, X11
	022 CallNoReturn X10
	023 Compare W21, 0
	024 JumpIfEqual {60}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20+56]
	027 Compare X0, 0
	028 JumpIfEqual {136}
	029 Move X8, [X0]
	030 Move X9, [X8+424]
	031 Move X1, [X8+432]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {79}
	037 Move X0, [X20+56]
	038 Compare X0, 0
	039 JumpIfEqual {178}
	040 Move X8, [X0]
	041 Move X9, [X8+440]
	042 Move X1, [X8+448]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move W8, 2
	045 Move W21, 3
	046 Move [X20+128], W8
	047 Move TEMP, X22
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {150}
	051 Move W8, 1
	052 Move TEMP, X22
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {163}
	056 Move W8, 3
	057 Move [X20+128], W8
	058 Compare W21, 0
	059 JumpIfNotEqual {25}
	060 Move X0, [X20+56]
	061 Move TEMP, X22
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {71}
	065 Compare X0, 0
	066 JumpIfEqual {176}
	067 Move X8, [X0]
	068 Move X1, [X8+560]
	069 Move X9, [X8+552]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X0, 0
	072 JumpIfEqual {177}
	073 Move X8, [X0]
	074 Move X9, [X8+408]
	075 Move X1, [X8+416]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X20, X31
	078 Move W21, 1
	079 Move W21, 1
	080 Move X0, [X20+64]
	081 Compare X0, 0
	082 JumpIfEqual {86}
	083 Move X1, X31
	084 Call ExceptionDispatchInfo.Throw, X0
	085 Move X20, X31
	086 Move X20, X31
	087 Move W8, [X31+12]
	088 Compare W8, 0
	089 JumpIfEqual {93}
	090 Move X0, X19
	091 Move X1, X31
	092 Call Monitor.Exit, X0
	093 Compare X20, 0
	094 JumpIfNotEqual {102}
	095 Move W0, W21
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Return X0
	102 Move X0, X20
	103 Call 0x1C17F18
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, 0xB38000
	106 Move X0, [X0+1960]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X20, X0
	110 Move X0, 0xB50000
	111 Move X0, [X0+1240]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X20
	115 Move X2, X31
	116 Call IOException..ctor, X0, X1
	117 Move X0, 0xB50000
	118 Move X0, [X0+1248]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X20
	122 Call 0x1C17DEC
	123 Move X0, 0xB0A000
	124 Move X0, [X0+1456]
	125 Call 0x1C17D08
	126 Call 0x1C17F10
	127 Move X20, X0
	128 Move X1, X31
	129 Call InvalidOperationException..ctor, X0
	130 Move X0, 0xB50000
	131 Move X0, [X0+1248]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X20
	135 Call 0x1C17DEC
	136 Call 0x1C17F20
	137 Move X0, 0xB50000
	138 Move X0, [X0+792]
	139 Call 0x1C17D08
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Call MobileAuthenticatedStream.GetInternalError
	145 Move X0, 0xB50000
	146 Move X0, [X0+1248]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Call 0x1C17DEC
	150 Move X0, 0xB50000
	151 Move X0, [X0+792]
	152 Call 0x1C17D08
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Call MobileAuthenticatedStream.GetInternalError
	158 Move X0, 0xB50000
	159 Move X0, [X0+1248]
	160 Call 0x1C17D08
	161 Move X1, X0
	162 Call 0x1C17DEC
	163 Move X0, 0xB50000
	164 Move X0, [X0+792]
	165 Call 0x1C17D08
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Call MobileAuthenticatedStream.GetInternalError
	171 Move X0, 0xB50000
	172 Move X0, [X0+1248]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Call 0x1C17DEC
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Call 0x1C17F20
	179 Move X22, X1
	180 Move X21, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X21
	183 Call 0x3EB2AD0
	184 Move X21, X0
	185 Move X0, 0xB0A000
	186 Move X0, [X0+2000]
	187 Call 0x1C17D08
	188 Move X8, [X21]
	189 Move X1, [X8]
	190 Call 0x1C18270
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {217}
	195 Move X21, [X21]
	196 Call 0x3EB2AE0
	197 Move X0, 0xB50000
	198 Move X0, [X0+792]
	199 Call 0x1C17D08
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X21
	205 Call MobileAuthenticatedStream.GetSSPIException, X0
	206 Move X1, X31
	207 Call ExceptionDispatchInfo.Capture, X0
	208 Move X1, X0
	209 Add X0, X20, 64
	210 Move X2, X31
	211 Call 0x1C25138
	212 Move X0, X20
	213 Move X1, X31
	214 Call Stream.Dispose, X0
	215 Move X0, X21
	216 Call 0x1C17F18
	217 Move W0, 8
	218 Call 0x3EB2AF0
	219 Move X8, [X21]
	220 Move [X0], X8
	221 Move X1, 0x8CB000
	222 Add X1, X1, 3672
	223 Move X2, X31
	224 Call 0x3EB2B00
	225 Move X22, X1
	226 Move X21, X0
	227 Call 0x3EB2AE0
	228 Move X22, X1
	229 Move X21, X0
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X0, X21
	232 Call 0x3EB2AD0
	233 Move X20, [X0]
	234 Call 0x3EB2AE0
	235 Move W21, W31
	236 Move X20, X31
	237 Move X21, X0
	238 Move W8, [X31+12]
	239 Compare W8, 0
	240 JumpIfEqual {244}
	241 Move X0, X19
	242 Move X1, X31
	243 Call Monitor.Exit, X0
	244 Compare X20, 0
	245 JumpIfNotEqual {248}
	246 Move X0, X21
	247 Call 0x1D2D690
	248 Move X0, X20
	249 Call 0x1C17F18
	250 Call 0x1991590

Method: System.ValueTuple`2<System.Int32, System.Boolean> ProcessRead(Mono.Net.Security.BufferOffsetSize userBuffer)

Disassembly:
	0x035EA7DC SUB X31, X31, 0x40
	0x035EA7E0 STP X30, X23, [X31 + 0x10]
	0x035EA7E4 STP X22, X21, [X31 + 0x20]
	0x035EA7E8 STP X20, X19, [X31 + 0x30]
	0x035EA7EC ADRP X23, 0xDF6000
	0x035EA7F0 LDRB W8, [X23 + 0x2AE]
	0x035EA7F4 MOV W19, W3
	0x035EA7F8 MOV X20, X2
	0x035EA7FC MOV X21, X1
	0x035EA800 MOV X22, X0
	0x035EA804 TBNZ X8, 0x0, 0x35EA81C
	0x035EA808 ADRP X0, 0xB4F000
	0x035EA80C LDR X0, [X0 + 0x580]
	0x035EA810 BL 0x1C16CF4
	0x035EA814 MOVZ W8, 0x1
	0x035EA818 STRB W8, [X23 + 0x2AE]
	0x035EA81C STR X31, [X31 + 0x8]
	0x035EA820 LDR X1, [X22 + 0x40]
	0x035EA824 CBNZ X1, 0x35EA858
	0x035EA828 LDR X0, [X22 + 0x10]
	0x035EA82C CBZ X0, 0x35EA854
	0x035EA830 ADRP X8, 0xB4F000
	0x035EA834 LDR X8, [X8 + 0x580]
	0x035EA838 ADD X1, X31, 0x8
	0x035EA83C LDR X2, [X8]
	0x035EA840 BL 0x285052C
	0x035EA844 LDR X8, [X31 + 0x8]
	0x035EA848 ANDS W31, W0, 0x1
	0x035EA84C CSEL X1, X8, X31, NE
	0x035EA850 B 0x35EA858
	0x035EA854 MOV X1, X31
	0x035EA858 LDR X0, [X22 + 0x28]
	0x035EA85C CBZ X0, 0x35EA88C
	0x035EA860 MOV X2, X21
	0x035EA864 MOV X3, X20
	0x035EA868 MOV W4, W19
	0x035EA86C MOV X5, X31
	0x035EA870 BL 0x3696A40
	0x035EA874 LDP X20, X19, [X31 + 0x30]
	0x035EA878 LDP X22, X21, [X31 + 0x20]
	0x035EA87C LDP X30, X23, [X31 + 0x10]
	0x035EA880 AND W0, W0, 0x1
	0x035EA884 ADD X31, X31, 0x40
	0x035EA888 RET
	0x035EA88C BL 0x1C16F20
	0x035EA890 MOV W0, W31
	0x035EA894 RET
	0x035EA898 STR X30, [X31 - 0x40]!
	0x035EA89C STP X24, X23, [X31 + 0x10]
	0x035EA8A0 STP X22, X21, [X31 + 0x20]
	0x035EA8A4 STP X20, X19, [X31 + 0x30]
	0x035EA8A8 ADRP X24, 0xDF6000
	0x035EA8AC LDRB W8, [X24 + 0x2AF]
	0x035EA8B0 MOV W19, W4
	0x035EA8B4 MOV X20, X3
	0x035EA8B8 MOV X21, X2
	0x035EA8BC MOV X23, X1
	0x035EA8C0 MOV X22, X0
	0x035EA8C4 TBNZ X8, 0x0, 0x35EA8E8
	0x035EA8C8 ADRP X0, 0xB31000
	0x035EA8CC LDR X0, [X0 + 0xB88]
	0x035EA8D0 BL 0x1C16CF4
	0x035EA8D4 ADRP X0, 0xB47000
	0x035EA8D8 LDR X0, [X0 + 0x508]
	0x035EA8DC BL 0x1C16CF4
	0x035EA8E0 MOVZ W8, 0x1
	0x035EA8E4 STRB W8, [X24 + 0x2AF]
	0x035EA8E8 CBZ X23, 0x35EA9B4
	0x035EA8EC ADRP X9, 0xB47000
	0x035EA8F0 LDR X9, [X9 + 0x508]
	0x035EA8F4 LDR X8, [X23]
	0x035EA8F8 LDR X10, [X9]
	0x035EA8FC LDRB W9, [X8 + 0x130]
	0x035EA900 LDRB W11, [X10 + 0x130]
	0x035EA904 CMP W9, W11
	0x035EA908 B.CC 0x35EA920
	0x035EA90C LDR X12, [X8 + 0xC8]
	0x035EA910 ADD X11, X12, X11, 0x3, LSL
	0x035EA914 LDUR X11, [X11 - 0x8]
	0x035EA918 CMP X11, X10
	0x035EA91C B.EQ 0x35EA954
	0x035EA920 ADRP X10, 0xB31000
	0x035EA924 LDR X10, [X10 + 0xB88]
	0x035EA928 LDR X10, [X10]
	0x035EA92C LDRB W11, [X10 + 0x130]
	0x035EA930 CMP W9, W11
	0x035EA934 B.CC 0x35EA94C
	0x035EA938 LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+112]
	007 Move X21, X1
	008 Move X20, X0
	009 Move [X31+12], W31
	010 Add X1, X31, 12
	011 Move X0, X19
	012 Move X2, X31
	013 Call Monitor.Enter, X0, X1
	014 Move W8, [X20+128]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W8, 4
	017 Move [X20+128], W8
	018 Compare X21, 0
	019 JumpIfEqual {69}
	020 Move X0, [X20+56]
	021 Compare X0, 0
	022 JumpIfEqual {70}
	023 Move X8, [X0]
	024 Move X1, [X21+16]
	025 Move W2, [X21+24]
	026 Move W3, [X21+28]
	027 Move X9, [X8+488]
	028 Move X4, [X8+496]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X21, X0
	031 Move X0, [X20+64]
	032 Compare X0, 0
	033 JumpIfEqual {36}
	034 Move X1, X31
	035 Call ExceptionDispatchInfo.Throw, X0
	036 Move W8, 2
	037 Move X22, X31
	038 Move [X20+128], W8
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfEqual {45}
	042 Move X0, X19
	043 Move X1, X31
	044 Call Monitor.Exit, X0
	045 Compare X22, 0
	046 JumpIfNotEqual {54}
	047 Move X0, X21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0
	054 Move X0, X22
	055 Call 0x1C17F18
	056 Move X0, 0xB50000
	057 Move X0, [X0+792]
	058 Call 0x1C17D08
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Call MobileAuthenticatedStream.GetInternalError
	064 Move X0, 0xB50000
	065 Move X0, [X0+1272]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Call 0x1C17DEC
	069 Call 0x1C17F20
	070 Call 0x1C17F20
	071 Move X21, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X21
	074 Call 0x3EB2AD0
	075 Move X22, [X0]
	076 Call 0x3EB2AE0
	077 Move X21, X31
	078 Move X22, X31
	079 Move X21, X0
	080 Move W8, [X31+12]
	081 Compare W8, 0
	082 JumpIfEqual {86}
	083 Move X0, X19
	084 Move X1, X31
	085 Call Monitor.Exit, X0
	086 Compare X22, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X21
	089 Call 0x1D2D690
	090 Move X0, X22
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.ValueTuple`2<System.Int32, System.Boolean> ProcessWrite(Mono.Net.Security.BufferOffsetSize userBuffer)

Disassembly:
	0x035EA9BC LDR X8, [X8 + 0x10]
	0x035EA9C0 CBZ X8, 0x35EA9F4
	0x035EA9C4 LDR X6, [X8 + 0x18]
	0x035EA9C8 LDR X0, [X8 + 0x40]
	0x035EA9CC LDR X5, [X8 + 0x28]
	0x035EA9D0 MOV X1, X23
	0x035EA9D4 MOV X2, X21
	0x035EA9D8 MOV X3, X20
	0x035EA9DC MOV W4, W19
	0x035EA9E0 LDP X20, X19, [X31 + 0x30]
	0x035EA9E4 LDP X22, X21, [X31 + 0x20]
	0x035EA9E8 LDP X24, X23, [X31 + 0x10]
	0x035EA9EC LDR X30, [X31], #0x40
	0x035EA9F0 BR X6
	0x035EA9F4 BL 0x1C16F20
	0x035EA9F8 LDR X0, [X0 + 0x88]
	0x035EA9FC RET
	0x035EAA00 LDR X0, [X0 + 0x90]
	0x035EAA04 RET
	0x035EAA08 LDR X0, [X0 + 0x98]
	0x035EAA0C RET
	0x035EAA10 LDR X0, [X0 + 0xA0]
	0x035EAA14 RET
	0x035EAA18 STR X1, [X0 + 0xA0]
	0x035EAA1C RET
	0x035EAA20 STP X30, X21, [X31 - 0x20]!
	0x035EAA24 STP X20, X19, [X31 + 0x10]
	0x035EAA28 MOV X19, X0
	0x035EAA2C LDR X0, [X0 + 0x40]
	0x035EAA30 MOV W20, W2
	0x035EAA34 MOV W21, W1
	0x035EAA38 CBZ X0, 0x35EAA44
	0x035EAA3C MOV X1, X31
	0x035EAA40 BL 0x32C2440
	0x035EAA44 TBZ X21, 0x0, 0x35EAA60
	0x035EAA48 LDR X8, [X19]
	0x035EAA4C MOV X0, X19
	0x035EAA50 LDR X9, [X8 + 0x3B8]
	0x035EAA54 LDR X1, [X8 + 0x3C0]
	0x035EAA58 BLR X9
	0x035EAA5C TBZ X0, 0x0, 0x35EAA78
	0x035EAA60 TBZ X20, 0x0, 0x35EAA6C
	0x035EAA64 LDRB W8, [X19 + 0x7C]
	0x035EAA68 CBNZ W8, 0x35EAA98
	0x035EAA6C LDP X20, X19, [X31 + 0x10]
	0x035EAA70 LDP X30, X21, [X31], #0x20
	0x035EAA74 RET
	0x035EAA78 ADRP X0, 0xB09000
	0x035EAA7C LDR X0, [X0 + 0x5B0]
	0x035EAA80 BL 0x1C16D08
	0x035EAA84 BL 0x1C16F10
	0x035EAA88 MOV X19, X0
	0x035EAA8C ADRP X0, 0xB4F000
	0x035EAA90 LDR X0, [X0 + 0x588]
	0x035EAA94 B 0x35EAAB4
	0x035EAA98 ADRP X0, 0xB09000
	0x035EAA9C LDR X0, [X0 + 0x5B0]
	0x035EAAA0 BL 0x1C16D08
	0x035EAAA4 BL 0x1C16F10
	0x035EAAA8 MOV X19, X0
	0x035EAAAC ADRP X0, 0xB4F000
	0x035EAAB0 LDR X0, [X0 + 0x590]
	0x035EAAB4 BL 0x1C16D08
	0x035EAAB8 MOV X1, X0
	0x035EAABC MOV X0, X19
	0x035EAAC0 MOV X2, X31
	0x035EAAC4 BL 0x337DF1C
	0x035EAAC8 ADRP X0, 0xB4F000
	0x035EAACC LDR X0, [X0 + 0x598]
	0x035EAAD0 BL 0x1C16D08
	0x035EAAD4 MOV X1, X0
	0x035EAAD8 MOV X0, X19
	0x035EAADC BL 0x1C16DEC
	0x035EAAE0 STP X30, X21, [X31 - 0x20]!
	0x035EAAE4 STP X20, X19, [X31 + 0x10]
	0x035EAAE8 ADRP X21, 0xDF6000
	0x035EAAEC LDRB W8, [X21 + 0x2B2]
	0x035EAAF0 MOV X20, X1
	0x035EAAF4 MOV X19, X0
	0x035EAAF8 TBNZ X8, 0x0, 0x35EAB40
	0x035EAAFC ADRP X0, 0xB4F000
	0x035EAB00 LDR X0, [X0 + 0x490]
	0x035EAB04 BL 0x1C16CF4
	0x035EAB08 ADRP X0, 0xB37000
	0x035EAB0C LDR X0, [X0 + 0x7A8]
	0x035EAB10 BL 0x1C16CF4
	0x035EAB14 ADRP X0, 0xB09000
	0x035EAB18 LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+112]
	007 Move X21, X1
	008 Move X20, X0
	009 Move [X31+12], W31
	010 Add X1, X31, 12
	011 Move X0, X19
	012 Move X2, X31
	013 Call Monitor.Enter, X0, X1
	014 Move W8, [X20+128]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W8, 5
	017 Move [X20+128], W8
	018 Compare X21, 0
	019 JumpIfEqual {69}
	020 Move X0, [X20+56]
	021 Compare X0, 0
	022 JumpIfEqual {70}
	023 Move X8, [X0]
	024 Move X1, [X21+16]
	025 Move W2, [X21+24]
	026 Move W3, [X21+28]
	027 Move X9, [X8+504]
	028 Move X4, [X8+512]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X21, X0
	031 Move X0, [X20+64]
	032 Compare X0, 0
	033 JumpIfEqual {36}
	034 Move X1, X31
	035 Call ExceptionDispatchInfo.Throw, X0
	036 Move W8, 2
	037 Move X22, X31
	038 Move [X20+128], W8
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfEqual {45}
	042 Move X0, X19
	043 Move X1, X31
	044 Call Monitor.Exit, X0
	045 Compare X22, 0
	046 JumpIfNotEqual {54}
	047 Move X0, X21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0
	054 Move X0, X22
	055 Call 0x1C17F18
	056 Move X0, 0xB50000
	057 Move X0, [X0+792]
	058 Call 0x1C17D08
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Call MobileAuthenticatedStream.GetInternalError
	064 Move X0, 0xB50000
	065 Move X0, [X0+1280]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Call 0x1C17DEC
	069 Call 0x1C17F20
	070 Call 0x1C17F20
	071 Move X21, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X21
	074 Call 0x3EB2AD0
	075 Move X22, [X0]
	076 Call 0x3EB2AE0
	077 Move X21, X31
	078 Move X22, X31
	079 Move X21, X0
	080 Move W8, [X31+12]
	081 Compare W8, 0
	082 JumpIfEqual {86}
	083 Move X0, X19
	084 Move X1, X31
	085 Call Monitor.Exit, X0
	086 Compare X22, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X21
	089 Call 0x1D2D690
	090 Move X0, X22
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.Boolean get_IsAuthenticated()

Disassembly:
	0x035EC9CC MOV X1, X31
	0x035EC9D0 BL 0x32C4864
	0x035EC9D4 LDP X20, X19, [X31 + 0x90]
	0x035EC9D8 LDP X22, X21, [X31 + 0x80]
	0x035EC9DC LDP X24, X23, [X31 + 0x70]
	0x035EC9E0 LDR X30, [X31 + 0x60]
	0x035EC9E4 ADD X31, X31, 0xA0
	0x035EC9E8 RET
	0x035EC9EC BL 0x1C16F20
	0x035EC9F0 MOV X0, X21
	0x035EC9F4 BL 0x1C16F18
	0x035EC9F8 MOV X20, X1
	0x035EC9FC MOV X23, X0
	0x035ECA00 ADD X0, X31, 0x8
	0x035ECA04 BL 0x1BC49BC
	0x035ECA08 B 0x35ECA2C
	0x035ECA0C MOV X20, X1
	0x035ECA10 MOV X23, X0
	0x035ECA14 B 0x35EC944
	0x035ECA18 B 0x35ECA24
	0x035ECA1C B 0x35ECA24
	0x035ECA20 B 0x35ECA24
	0x035ECA24 MOV X20, X1
	0x035ECA28 MOV X23, X0
	0x035ECA2C CMP W20, 0x1
	0x035ECA30 B.NE 0x35ECAC0
	0x035ECA34 MOV X0, X23
	0x035ECA38 BL 0x3EB1AD0
	0x035ECA3C MOV X20, X0
	0x035ECA40 ADRP X0, 0xB07000
	0x035ECA44 LDR X0, [X0 + 0x7D0]
	0x035ECA48 BL 0x1C16D08
	0x035ECA4C LDR X8, [X20]
	0x035ECA50 LDR X1, [X8]
	0x035ECA54 BL 0x1C17270
	0x035ECA58 TBZ X0, 0x0, 0x35ECA98
	0x035ECA5C LDR X20, [X20]
	0x035ECA60 BL 0x3EB1AE0
	0x035ECA64 MOVN W8, 0x1
	0x035ECA68 STR W8, [X19], #0x8
	0x035ECA6C ADRP X0, 0xB0A000
	0x035ECA70 LDR X0, [X0 + 0x280]
	0x035ECA74 BL 0x1C16D08
	0x035ECA78 LDR W8, [X0 + 0xE0]
	0x035ECA7C CBNZ W8, 0x35ECA84
	0x035ECA80 BL 0x1C16DFC
	0x035ECA84 MOV X0, X19
	0x035ECA88 MOV X1, X20
	0x035ECA8C MOV X2, X31
	0x035ECA90 BL 0x32C4908
	0x035ECA94 B 0x35EC9D4
	0x035ECA98 MOVZ W0, 0x8
	0x035ECA9C BL 0x3EB1AF0
	0x035ECAA0 LDR X8, [X20]
	0x035ECAA4 STR X8, [X0]
	0x035ECAA8 ADRP X1, 0x8C8000
	0x035ECAAC ADD X1, X1, 0xE58
	0x035ECAB0 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+112]
	007 Move X20, X0
	008 Move [X31+12], W31
	009 Add X1, X31, 12
	010 Move X0, X19
	011 Move X2, X31
	012 Call Monitor.Enter, X0, X1
	013 Move X0, [X20+56]
	014 Compare X0, 0
	015 JumpIfEqual {19}
	016 Move X8, [X20+64]
	017 Compare X8, 0
	018 JumpIfEqual {21}
	019 Move X20, X31
	020 Move W21, W31
	021 Move X8, [X0]
	022 Move X9, [X8+392]
	023 Move X1, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move W21, W0
	026 Move X20, X31
	027 Move W8, [X31+12]
	028 Compare W8, 0
	029 JumpIfEqual {33}
	030 Move X0, X19
	031 Move X1, X31
	032 Call Monitor.Exit, X0
	033 Compare X20, 0
	034 JumpIfNotEqual {42}
	035 And W0, W21, 1
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Move X21, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X21
	047 Call 0x3EB2AD0
	048 Move X20, [X0]
	049 Call 0x3EB2AE0
	050 Move X20, X31
	051 Move X21, X0
	052 Move W8, [X31+12]
	053 Compare W8, 0
	054 JumpIfEqual {58}
	055 Move X0, X19
	056 Move X1, X31
	057 Call Monitor.Exit, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X21
	061 Call 0x1D2D690
	062 Move X0, X20
	063 Call 0x1C17F18
	064 Call 0x1991590

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x035ECAB4 BL 0x3EB1B00
	0x035ECAB8 MOV X23, X0
	0x035ECABC BL 0x3EB1AE0
	0x035ECAC0 MOV X0, X23
	0x035ECAC4 BL 0x1D2C690
	0x035ECAC8 BL 0x1990590
	0x035ECACC STR X30, [X31 - 0x30]!
	0x035ECAD0 STP X22, X21, [X31 + 0x10]
	0x035ECAD4 STP X20, X19, [X31 + 0x20]
	0x035ECAD8 ADRP X21, 0xDF4000
	0x035ECADC ADRP X22, 0xB0A000
	0x035ECAE0 LDRB W8, [X21 + 0x2C2]
	0x035ECAE4 LDR X22, [X22 + 0x280]
	0x035ECAE8 MOV X19, X1
	0x035ECAEC MOV X20, X0
	0x035ECAF0 TBNZ X8, 0x0, 0x35ECB08
	0x035ECAF4 ADRP X0, 0xB0A000
	0x035ECAF8 LDR X0, [X0 + 0x280]
	0x035ECAFC BL 0x1C16CF4
	0x035ECB00 MOVZ W8, 0x1
	0x035ECB04 STRB W8, [X21 + 0x2C2]
	0x035ECB08 LDR X0, [X22]
	0x035ECB0C LDR W8, [X0 + 0xE0]
	0x035ECB10 CBNZ W8, 0x35ECB18
	0x035ECB14 BL 0x1C16DFC
	0x035ECB18 ADD X0, X20, 0x8
	0x035ECB1C MOV X1, X19
	0x035ECB20 LDP X20, X19, [X31 + 0x20]
	0x035ECB24 LDP X22, X21, [X31 + 0x10]
	0x035ECB28 MOV X2, X31
	0x035ECB2C LDR X30, [X31], #0x30
	0x035ECB30 B 0x32C477C
	0x035ECB34 SUB X31, X31, 0x90
	0x035ECB38 STP X30, X0, [X31 + 0x60]
	0x035ECB3C STP X22, X21, [X31 + 0x70]
	0x035ECB40 STP X20, X19, [X31 + 0x80]
	0x035ECB44 ADRP X20, 0xDF4000
	0x035ECB48 LDRB W8, [X20 + 0x2C3]
	0x035ECB4C MOV X19, X0
	0x035ECB50 TBNZ X8, 0x0, 0x35ECBB0
	0x035ECB54 ADRP X0, 0xB4D000
	0x035ECB58 LDR X0, [X0 + 0x680]
	0x035ECB5C BL 0x1C16CF4
	0x035ECB60 ADRP X0, 0xB36000
	0x035ECB64 LDR X0, [X0 + 0xE30]
	0x035ECB68 BL 0x1C16CF4
	0x035ECB6C ADRP X0, 0xB36000
	0x035ECB70 LDR X0, [X0 + 0xDA0]
	0x035ECB74 BL 0x1C16CF4
	0x035ECB78 ADRP X0, 0xB4D000
	0x035ECB7C LDR X0, [X0 + 0x648]
	0x035ECB80 BL 0x1C16CF4
	0x035ECB84 ADRP X0, 0xB4D000
	0x035ECB88 LDR X0, [X0 + 0x650]
	0x035ECB8C BL 0x1C16CF4
	0x035ECB90 ADRP X0, 0xB4D000
	0x035ECB94 LDR X0, [X0 + 0x658]
	0x035ECB98 BL 0x1C16CF4
	0x035ECB9C ADRP X0, 0xB4D000
	0x035ECBA0 LDR X0, [X0 + 0x660]
	0x035ECBA4 BL 0x1C16CF4
	0x035ECBA8 MOVZ W8, 0x1
	0x035ECBAC STRB W8, [X20 + 0x2C3]
	0x035ECBB0 STRB W31, [X31 + 0x44]
	0x035ECBB4 STP X31, X31, [X31 + 0x30]
	0x035ECBB8 LDR W8, [X19]
	0x035ECBBC STR W8, [X31 + 0x5C]
	0x035ECBC0 LDR X0, [X19 + 0x20]
	0x035ECBC4 STP X31, X0, [X31 + 0x48]
	0x035ECBC8 CBZ W8, 0x35ECCE8
	0x035ECBCC CBZ X0, 0x35ECE7C
	0x035ECBD0 LDR W8, [X19 + 0x28]
	0x035ECBD4 CMP W8, 0x0
	0x035ECBD8 CSET W2, NE
	0x035ECBDC MOVZ W1, 0x1
	0x035ECBE0 BL 0x35EAA20
	0x035ECBE4 LDR X8, [X31 + 0x68]
	0x035ECBE8 LDR W10, [X8 + 0x28]
	0x035ECBEC CBZ W10, 0x35ECC84
	0x035ECBF0 LDR X9, [X31 + 0x50]
	0x035ECBF4 CMP W10, 0x2
	0x035ECBF8 B.NE 0x35ECCD0
	0x035ECBFC CBZ X9, 0x35ECEA8
	0x035ECC00 LDR X1, [X8 + 0x30]
	0x035ECC04 ADD X0, X9, 0x48
	0x035ECC08 MOV X2, X31
	0x035ECC0C BL 0x1C24138
	0x035ECC10 CBNZ X0, 0x35ECEB0
	0x035ECC14 LDR X8, [X31 + 0x50]
	0x035ECC18 CBZ X8, 0x35ECF10
	0x035ECC1C LDR X9, [X31 + 0x68]
	0x035ECC20 ADD X0, X8, 0x50
	0x035ECC24 LDR X1, [X9 + 0x30]
	0x035ECC28 MOV X2, X31
	0x035ECC2C BL 0x1C24138
	0x035ECC30 CBNZ X0, 0x35ECF14
	0x035ECC34 LDR X8, [X31 + 0x50]
	0x035ECC38 CBZ X8, 0x35ECF44
	0x035ECC3C LDR X9, [X31 + 0x68]
	0x035ECC40 ADD X0, X8, 0x58
	0x035ECC44 LDR X1, [X9 + 0x30]
	0x035ECC48 MOV X2, X31
	0x035ECC4C BL 0x1C24138
	0x035ECC50 CBZ X0, 0x35ECCE8
	0x035ECC54 ADRP X0, 0xB4D000
	0x035ECC58 LDR X0, [X0 + 0x318]
	0x035ECC5C BL 0x1C16D08
	0x035ECC60 LDR W8, [X0 + 0xE0]
	0x035ECC64 CBNZ W8, 0x35ECC6C
	0x035ECC68 BL 0x1C16DFC
	0x035ECC6C BL 0x35EACA8
	0x035ECC70 ADRP X0, 0xB4D000
	0x035ECC74 LDR X0, [X0 + 0x688]
	0x035ECC78 BL 0x1C16D08
	0x035ECC7C MOV X1, X0
	0x035ECC80 BL 0x1C16DEC
	0x035ECC84 LDR X9, [X31 + 0x50]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xDF5000
	009 Move W8, [X21+703]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB31000
	017 Move X0, [X0+1208]
	018 Call 0x1C17CF4
	019 Move X0, 0xB4E000
	020 Move X0, [X0+1568]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+703], W8
	024 Move X21, [X19+112]
	025 Move [X31+12], W31
	026 Add X1, X31, 12
	027 Move X0, X21
	028 Move X2, X31
	029 Call Monitor.Enter, X0, X1
	030 Move X8, 0xB31000
	031 Move X8, [X8+1208]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X8, 0xB4E000
	035 Move X8, [X8+1568]
	036 Move X22, X0
	037 Move X1, [X8]
	038 Move X2, X31
	039 Call ObjectDisposedException..ctor, X0, X1
	040 Move X0, X22
	041 Move X1, X31
	042 Call ExceptionDispatchInfo.Capture, X0
	043 Move X1, X0
	044 Add X0, X19, 64
	045 Move X2, X31
	046 Call 0x1C25138
	047 Move X0, [X19+56]
	048 Compare X0, 0
	049 JumpIfEqual {53}
	050 Call MobileTlsContext.Dispose, X0
	051 Move X22, X31
	052 Move [X19+56], X31
	053 Move X22, X31
	054 Move W8, [X31+12]
	055 Compare W8, 0
	056 JumpIfEqual {60}
	057 Move X0, X21
	058 Move X1, X31
	059 Call Monitor.Exit, X0
	060 Compare X22, 0
	061 JumpIfNotEqual {74}
	062 And W1, W20, 1
	063 Move X0, X19
	064 Move X2, X31
	065 Call AuthenticatedStream.Dispose, X0, X1
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Return 
	074 Move X0, X22
	075 Call 0x1C17F18
	076 Move X23, X1
	077 Move X24, X0
	078 Move X24, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X24
	081 Call 0x3EB2AD0
	082 Move X22, [X0]
	083 Call 0x3EB2AE0
	084 Move X22, X31
	085 Move W8, [X31+12]
	086 Move W23, W1
	087 Compare W8, 0
	088 JumpIfEqual {92}
	089 Move X0, X21
	090 Move X1, X31
	091 Call Monitor.Exit, X0
	092 Compare X22, 0
	093 JumpIfNotEqual {109}
	094 Move W8, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X24
	097 Call 0x3EB2AD0
	098 Move X21, [X0]
	099 Call 0x3EB2AE0
	100 And W1, W20, 1
	101 Move X0, X19
	102 Move X2, X31
	103 Call AuthenticatedStream.Dispose, X0, X1
	104 Compare X21, 0
	105 JumpIfEqual {66}
	106 Move X0, X21
	107 Call 0x1C17F18
	108 Move X21, X31
	109 Move X0, X22
	110 Call 0x1C17F18
	111 Move X24, X0
	112 Move X24, X0
	113 And W1, W20, 1
	114 Move X0, X19
	115 Move X2, X31
	116 Call AuthenticatedStream.Dispose, X0, X1
	117 Compare X21, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X24
	120 Call 0x1D2D690
	121 Move X0, X21
	122 Call 0x1C17F18
	123 Call 0x1991590

Method: System.Void Flush()

Disassembly:
	0x035ECCF8 ADD X9, X31, 0x50
	0x035ECCFC ADD X10, X31, 0x48
	0x035ECD00 STP X31, X8, [X31]
	0x035ECD04 STP X9, X10, [X31 + 0x10]
	0x035ECD08 ADD X8, X31, 0x44
	0x035ECD0C ADD X9, X31, 0x68
	0x035ECD10 STP X8, X9, [X31 + 0x20]
	0x035ECD14 CBZ W11, 0x35ECD5C
	0x035ECD18 LDR X8, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+664]
	007 Move X1, [X8+672]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Certificate get_LocalCertificate()

Disassembly:
	0x035ECD1C CBZ X8, 0x35ECE80
	0x035ECD20 LDR X0, [X8 + 0x70]
	0x035ECD24 STRB W31, [X31 + 0x44]
	0x035ECD28 STR X0, [X31 + 0x48]
	0x035ECD2C ADD X1, X31, 0x44
	0x035ECD30 MOV X2, X31
	0x035ECD34 BL 0x33DE64C
	0x035ECD38 LDR X8, [X31 + 0x68]
	0x035ECD3C LDR W9, [X8 + 0x28]
	0x035ECD40 LDR X8, [X31 + 0x50]
	0x035ECD44 CBZ W9, 0x35ECD7C
	0x035ECD48 CBZ X8, 0x35ECE94
	0x035ECD4C LDR X0, [X8 + 0x68]
	0x035ECD50 CBZ X0, 0x35ECE98
	0x035ECD54 BL 0x35E7A98
	0x035ECD58 B 0x35ECD8C
	0x035ECD5C LDR X8, [X31 + 0x68]
	0x035ECD60 MOVN W9, 0x0
	0x035ECD64 LDR V0, [X8 + 0x4]
	0x035ECD68 STR V0, [X31 + 0x3]
	0x035ECD6C STP X31, X31, [X8 + 0x40]
	0x035ECD70 STR W9, [X31 + 0x5C]
	0x035ECD74 STR W9, [X8]
	0x035ECD78 B 0x35ECE0C
	0x035ECD7C CBZ X8, 0x35ECEA0
	0x035ECD80 LDR X0, [X8 + 0x60]
	0x035ECD84 CBZ X0, 0x35ECEA4
	0x035ECD88 BL 0x35E7A98
	0x035ECD8C MOV X19, X31
	0x035ECD90 MOVZ W20, 0x14
	0x035ECD94 LDR W8, [X31 + 0x5C]
	0x035ECD98 TBZ X8, 0x1F, 0x35ECDB0
	0x035ECD9C LDRB W8, [X31 + 0x44]
	0x035ECDA0 CBZ W8, 0x35ECDB0
	0x035ECDA4 LDR X0, [X31 + 0x48]
	0x035ECDA8 MOV X1, X31
	0x035ECDAC BL 0x33E14E4
	0x035ECDB0 CBNZ X19, 0x35ECE84
	0x035ECDB4 CMP W20, 0x14
	0x035ECDB8 B.EQ 0x35ECDC0
	0x035ECDBC CBNZ W20, 0x35ED180
	0x035ECDC0 LDR X8, [X31 + 0x68]
	0x035ECDC4 LDR X0, [X8 + 0x30]
	0x035ECDC8 CBZ X0, 0x35ECE8C
	0x035ECDCC LDR X1, [X8 + 0x38]
	0x035ECDD0 BL 0x35E7DFC
	0x035ECDD4 CBZ X0, 0x35ECE90
	0x035ECDD8 ADRP X8, 0xB4D000
	0x035ECDDC LDR X8, [X8 + 0x660]
	0x035ECDE0 LDR X2, [X8]
	0x035ECDE4 MOV W1, W31
	0x035ECDE8 BL 0x269F5D4
	0x035ECDEC ADRP X8, 0xB4D000
	0x035ECDF0 LDR X8, [X8 + 0x658]
	0x035ECDF4 STP X0, X1, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+112]
	007 Move X20, X0
	008 Move [X31+12], W31
	009 Add X1, X31, 12
	010 Move X0, X19
	011 Move X2, X31
	012 Call Monitor.Enter, X0, X1
	013 Move W1, 1
	014 Move X0, X20
	015 Move W2, W31
	016 Call MobileAuthenticatedStream.CheckThrow, X0, X1, X2
	017 Move X0, X20
	018 Call MobileAuthenticatedStream.get_InternalLocalCertificate, X0
	019 Move X21, X0
	020 Move X20, X31
	021 Move W8, [X31+12]
	022 Compare W8, 0
	023 JumpIfEqual {27}
	024 Move X0, X19
	025 Move X1, X31
	026 Call Monitor.Exit, X0
	027 Compare X20, 0
	028 JumpIfNotEqual {36}
	029 Move X0, X21
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Add X31, X31, 48
	035 Return X0
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X21
	041 Call 0x3EB2AD0
	042 Move X20, [X0]
	043 Call 0x3EB2AE0
	044 Move X21, X31
	045 Move X20, X31
	046 Move X21, X0
	047 Move W8, [X31+12]
	048 Compare W8, 0
	049 JumpIfEqual {53}
	050 Move X0, X19
	051 Move X1, X31
	052 Call Monitor.Exit, X0
	053 Compare X20, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X21
	056 Call 0x1D2D690
	057 Move X0, X20
	058 Call 0x1C17F18
	059 Call 0x1991590

Method: System.Security.Cryptography.X509Certificates.X509Certificate get_InternalLocalCertificate()

Disassembly:
	0x035ECDF8 LDR X8, [X8]
	0x035ECDFC ADD X0, X31, 0x30
	0x035ECE00 MOV X1, X8
	0x035ECE04 BL 0x2998B64
	0x035ECE08 TBZ X0, 0x0, 0x35ECE2C
	0x035ECE0C ADRP X8, 0xB4D000
	0x035ECE10 LDR X8, [X8 + 0x650]
	0x035ECE14 ADD X0, X31, 0x30
	0x035ECE18 LDR X1, [X8]
	0x035ECE1C BL 0x2998BB0
	0x035ECE20 MOV X19, X0
	0x035ECE24 MOVZ W20, 0x19
	0x035ECE28 B 0x35ED184
	0x035ECE2C LDR X19, [X31 + 0x68]
	0x035ECE30 STR W31, [X31 + 0x5C]
	0x035ECE34 STR W31, [X19]
	0x035ECE38 LDR V0, [X31 + 0x3]
	0x035ECE3C MOV X2, X19
	0x035ECE40 STR V0, [X19 + 0x4]
	0x035ECE44 LDR X0, [X22]
	0x035ECE48 LDR W8, [X0 + 0xE0]
	0x035ECE4C CBNZ W8, 0x35ECE58
	0x035ECE50 BL 0x1C16DFC
	0x035ECE54 LDR X2, [X31 + 0x68]
	0x035ECE58 ADRP X8, 0xB4D000
	0x035ECE5C LDR X8, [X8 + 0x680]
	0x035ECE60 ADD X0, X19, 0x8
	0x035ECE64 LDR X3, [X8]
	0x035ECE68 ADD X1, X31, 0x30
	0x035ECE6C BL 0x1FACB5C
	0x035ECE70 MOV X19, X31
	0x035ECE74 MOVZ W20, 0x16
	0x035ECE78 B 0x35ED184
	0x035ECE7C BL 0x1C16F20
	0x035ECE80 BL 0x1C16F20
	0x035ECE84 MOV X0, X19
	0x035ECE88 BL 0x1C16F18
	0x035ECE8C BL 0x1C16F20
	0x035ECE90 BL 0x1C16F20
	0x035ECE94 BL 0x1C16F20
	0x035ECE98 BL 0x1C16F20
	0x035ECE9C BL 0x1C16F20
	0x035ECEA0 BL 0x1C16F20
	0x035ECEA4 BL 0x1C16F20
	0x035ECEA8 BL 0x1C16F20
	0x035ECEAC BL 0x1C16F20
	0x035ECEB0 ADRP X0, 0xB4D000
	0x035ECEB4 LDR X0, [X0 + 0x318]
	0x035ECEB8 BL 0x1C16D08
	0x035ECEBC LDR W8, [X0 + 0xE0]
	0x035ECEC0 CBNZ W8, 0x35ECEC8
	0x035ECEC4 BL 0x1C16DFC
	0x035ECEC8 BL 0x35EACA8
	0x035ECECC ADRP X0, 0xB4D000
	0x035ECED0 LDR X0, [X0 + 0x688]
	0x035ECED4 BL 0x1C16D08
	0x035ECED8 MOV X1, X0
	0x035ECEDC BL 0x1C16DEC
	0x035ECEE0 ADRP X0, 0xB4D000
	0x035ECEE4 LDR X0, [X0 + 0x318]
	0x035ECEE8 BL 0x1C16D08
	0x035ECEEC LDR W8, [X0 + 0xE0]
	0x035ECEF0 CBNZ W8, 0x35ECEF8
	0x035ECEF4 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+112]
	007 Move X20, X0
	008 Move [X31+12], W31
	009 Add X1, X31, 12
	010 Move X0, X19
	011 Move X2, X31
	012 Call Monitor.Enter, X0, X1
	013 Move X0, [X20+64]
	014 Compare X0, 0
	015 JumpIfEqual {18}
	016 Move X1, X31
	017 Call ExceptionDispatchInfo.Throw, X0
	018 Move X0, [X20+56]
	019 Compare X0, 0
	020 JumpIfEqual {25}
	021 Move W8, [X0+40]
	022 Compare W8, 0
	023 JumpIfEqual {27}
	024 Move X21, [X0+80]
	025 Move X20, X31
	026 Move X21, X31
	027 Move X8, [X0]
	028 Move X9, [X8+456]
	029 Move X1, [X8+464]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X21, X0
	032 Move X20, X31
	033 Move W8, [X31+12]
	034 Compare W8, 0
	035 JumpIfEqual {39}
	036 Move X0, X19
	037 Move X1, X31
	038 Call Monitor.Exit, X0
	039 Compare X20, 0
	040 JumpIfNotEqual {48}
	041 Move X0, X21
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Add X31, X31, 48
	047 Return X0
	048 Move X0, X20
	049 Call 0x1C17F18
	050 Move X21, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X21
	053 Call 0x3EB2AD0
	054 Move X20, [X0]
	055 Call 0x3EB2AE0
	056 Move X20, X31
	057 Move X21, X0
	058 Move W8, [X31+12]
	059 Compare W8, 0
	060 JumpIfEqual {64}
	061 Move X0, X19
	062 Move X1, X31
	063 Call Monitor.Exit, X0
	064 Compare X20, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X21
	067 Call 0x1D2D690
	068 Move X0, X20
	069 Call 0x1C17F18
	070 Call 0x1991590

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x035ECEF8 BL 0x35EACA8
	0x035ECEFC ADRP X0, 0xB4D000
	0x035ECF00 LDR X0, [X0 + 0x688]
	0x035ECF04 BL 0x1C16D08
	0x035ECF08 MOV X1, X0
	0x035ECF0C BL 0x1C16DEC
	0x035ECF10 BL 0x1C16F20
	0x035ECF14 ADRP X0, 0xB4D000
	0x035ECF18 LDR X0, [X0 + 0x318]
	0x035ECF1C BL 0x1C16D08
	0x035ECF20 LDR W8, [X0 + 0xE0]
	0x035ECF24 CBNZ W8, 0x35ECF2C
	0x035ECF28 BL 0x1C16DFC
	0x035ECF2C BL 0x35EACA8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB08000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB4E000
	011 Move X0, [X0+1576]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x035ECF30 ADRP X0, 0xB4D000
	0x035ECF34 LDR X0, [X0 + 0x688]
	0x035ECF38 BL 0x1C16D08
	0x035ECF3C MOV X1, X0
	0x035ECF40 BL 0x1C16DEC
	0x035ECF44 BL 0x1C16F20
	0x035ECF48 B 0x35ED224
	0x035ECF4C B 0x35ED224
	0x035ECF50 B 0x35ED224

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+840]
	007 Move X2, [X8+848]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Boolean get_CanRead()

Disassembly:
	0x035ECF54 B 0x35ED224
	0x035ECF58 B 0x35ED224
	0x035ECF5C B 0x35ED218
	0x035ECF60 B 0x35ED218
	0x035ECF64 B 0x35ED218
	0x035ECF68 B 0x35ED218
	0x035ECF6C B 0x35ED218
	0x035ECF70 B 0x35ED218
	0x035ECF74 B 0x35ED218
	0x035ECF78 B 0x35ED218
	0x035ECF7C B 0x35ECFB0
	0x035ECF80 B 0x35ED218
	0x035ECF84 B 0x35ED218
	0x035ECF88 B 0x35ED010
	0x035ECF8C B 0x35ECFB0
	0x035ECF90 B 0x35ED010
	0x035ECF94 B 0x35ED010

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+952]
	006 Move X1, [X8+960]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {21}
	012 Move X0, [X19+40]
	013 Compare X0, 0
	014 JumpIfEqual {25}
	015 Move X8, [X0]
	016 Move X2, [X8+424]
	017 Move X1, [X8+432]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 CallNoReturn X2
	021 Move W0, W31
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return X0
	025 Call 0x1C17F20

Method: System.Boolean get_CanTimeout()

Disassembly:
	0x035ECF98 B 0x35ED010
	0x035ECF9C B 0x35ECFB0
	0x035ECFA0 B 0x35ED010
	0x035ECFA4 B 0x35ECFB0
	0x035ECFA8 B 0x35ED010
	0x035ECFAC B 0x35ED224
	0x035ECFB0 MOV X21, X0
	0x035ECFB4 CMP W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+456]
	007 Move X1, [X8+464]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean get_CanWrite()

Disassembly:
	0x035ECFB8 B.NE 0x35ECFD4
	0x035ECFBC MOV X0, X21
	0x035ECFC0 BL 0x3EB1AD0
	0x035ECFC4 LDR X19, [X0]
	0x035ECFC8 BL 0x3EB1AE0
	0x035ECFCC MOV W20, W31
	0x035ECFD0 B 0x35ECD94
	0x035ECFD4 MOV X19, X31
	0x035ECFD8 LDR W8, [X31 + 0x5C]
	0x035ECFDC MOV W20, W1
	0x035ECFE0 TBZ X8, 0x1F, 0x35ECFF8
	0x035ECFE4 LDRB W8, [X31 + 0x44]
	0x035ECFE8 CBZ W8, 0x35ECFF8
	0x035ECFEC LDR X0, [X31 + 0x48]
	0x035ECFF0 MOV X1, X31
	0x035ECFF4 BL 0x33E14E4
	0x035ECFF8 CBZ X19, 0x35ED018
	0x035ECFFC MOV X0, X19
	0x035ED000 BL 0x1C16F18
	0x035ED004 MOV X21, X0
	0x035ED008 B 0x35ECFD8
	0x035ED00C B 0x35ED010
	0x035ED010 MOV X21, X0
	0x035ED014 MOV W20, W1
	0x035ED018 CMP W20, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+952]
	007 Move X1, [X8+960]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19+40]
	010 Compare X8, 0
	011 JumpIfEqual {31}
	012 Move X9, [X8]
	013 Move W20, W0
	014 Move X0, X8
	015 Move X10, [X9+472]
	016 Move X1, [X9+480]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 And W8, W20, W0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {26}
	023 Move W8, [X19+124]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move W0, W31
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean get_CanSeek()

Disassembly:
	0x035ED01C B.NE 0x35ED15C
	0x035ED020 MOV X0, X21

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int64 get_Length()

Disassembly:
	0x035ED024 BL 0x3EB1AD0
	0x035ED028 MOV X19, X0
	0x035ED02C ADRP X0, 0xB06000
	0x035ED030 LDR X0, [X0 + 0x7D0]
	0x035ED034 BL 0x1C16D08
	0x035ED038 LDR X8, [X19]
	0x035ED03C LDR X1, [X8]
	0x035ED040 BL 0x1C17270

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+488]
	007 Move X1, [X8+496]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int64 get_Position()

Disassembly:
	0x035ED044 TBZ X0, 0x0, 0x35ED0F8
	0x035ED048 LDR X19, [X19]
	0x035ED04C BL 0x3EB1AE0
	0x035ED050 LDR X8, [X31 + 0x68]
	0x035ED054 LDR X0, [X8 + 0x30]
	0x035ED058 CBZ X0, 0x35ED11C
	0x035ED05C LDR X21, [X31 + 0x50]
	0x035ED060 BL 0x35E7C78

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+504]
	007 Move X1, [X8+512]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x035ED064 MOV X20, X0
	0x035ED068 ADRP X0, 0xB4C000
	0x035ED06C LDR X0, [X0 + 0x690]
	0x035ED070 BL 0x1C16D08
	0x035ED074 MOV X1, X0
	0x035ED078 MOV X0, X20
	0x035ED07C MOV X2, X31
	0x035ED080 BL 0x321B938
	0x035ED084 MOV X20, X0
	0x035ED088 ADRP X0, 0xB4C000
	0x035ED08C LDR X0, [X0 + 0x318]
	0x035ED090 BL 0x1C16D08
	0x035ED094 LDR W8, [X0 + 0xE0]
	0x035ED098 CBNZ W8, 0x35ED0A0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB07000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB4D000
	011 Move X0, [X0+1584]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Int32 get_ReadTimeout()

Disassembly:
	0x035ED09C BL 0x1C16DFC
	0x035ED0A0 MOV X0, X19
	0x035ED0A4 MOV X1, X20
	0x035ED0A8 BL 0x35EAAE0
	0x035ED0AC CBZ X21, 0x35ED120
	0x035ED0B0 MOV X1, X31
	0x035ED0B4 BL 0x32C2380
	0x035ED0B8 MOV X19, X0
	0x035ED0BC ADD X0, X21, 0x40

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+536]
	007 Move X1, [X8+544]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_ReadTimeout(System.Int32 value)

Disassembly:
	0x035ED0C0 MOV X1, X19
	0x035ED0C4 MOV X2, X31
	0x035ED0C8 BL 0x1C24138
	0x035ED0CC CMP X0, 0x0
	0x035ED0D0 CSEL X20, X19, X0, EQ
	0x035ED0D4 ADRP X0, 0xB4C000
	0x035ED0D8 LDR X0, [X0 + 0x420]
	0x035ED0DC BL 0x1C16D08
	0x035ED0E0 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+552]
	007 Move X2, [X8+560]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Int32 get_WriteTimeout()

Disassembly:
	0x035ED0E4 MOV X19, X0
	0x035ED0E8 MOV X1, X31
	0x035ED0EC BL 0x33BDD8C
	0x035ED0F0 STR X20, [X19 + 0x18]
	0x035ED0F4 B 0x35ECE24
	0x035ED0F8 MOVZ W0, 0x8
	0x035ED0FC BL 0x3EB1AF0
	0x035ED100 LDR X8, [X19]
	0x035ED104 STR X8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+568]
	007 Move X1, [X8+576]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_WriteTimeout(System.Int32 value)

Disassembly:
	0x035ED108 ADRP X1, 0x8C7000
	0x035ED10C ADD X1, X1, 0xE58
	0x035ED110 MOV X2, X31
	0x035ED114 BL 0x3EB1B00
	0x035ED118 B 0x35ED2C8
	0x035ED11C BL 0x1C16F20
	0x035ED120 BL 0x1C16F20
	0x035ED124 B 0x35ED138
	0x035ED128 B 0x35ED138

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+584]
	007 Move X2, [X8+592]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x035ED12C B 0x35ED138
	0x035ED130 B 0x35ED138
	0x035ED134 B 0x35ED138
	0x035ED138 MOV X21, X0
	0x035ED13C MOV W20, W1
	0x035ED140 B 0x35ED15C
	0x035ED144 MOV X20, X1
	0x035ED148 MOV X21, X0
	0x035ED14C BL 0x3EB1AE0
	0x035ED150 B 0x35ED15C
	0x035ED154 MOV X20, X1
	0x035ED158 MOV X21, X0
	0x035ED15C MOVZ W8, 0x1
	0x035ED160 CMP W20, W8
	0x035ED164 B.NE 0x35ED204
	0x035ED168 MOV X0, X21
	0x035ED16C BL 0x3EB1AD0
	0x035ED170 LDR X8, [X0]
	0x035ED174 STR X8, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDF4000
	005 Move X20, 0xB4D000
	006 Move W8, [X19+704]
	007 Move X20, [X20+792]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB4D000
	013 Move X0, [X0+792]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+704], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 123
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void <InnerWrite>b__67_0()

Disassembly:
	0x035ED178 BL 0x3EB1AE0
	0x035ED17C MOV W20, W31
	0x035ED180 MOV X19, X31
	0x035ED184 ADD X0, X31, 0x0
	0x035ED188 BL 0x1BC4B64
	0x035ED18C CMP W20, 0x19
	0x035ED190 B.EQ 0x35ED198
	0x035ED194 CBNZ W20, 0x35ED1E4
	0x035ED198 CBZ X19, 0x35ED1F8
	0x035ED19C LDR X0, [X19 + 0x18]
	0x035ED1A0 CBZ X0, 0x35ED1AC
	0x035ED1A4 MOV X1, X31
	0x035ED1A8 BL 0x32C2440

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Compare X8, 0
	004 JumpIfEqual {16}
	005 Move X0, [X0+40]
	006 Compare X0, 0
	007 JumpIfEqual {16}
	008 Move X9, [X0]
	009 Move W2, [X8+24]
	010 Move W3, [X8+28]
	011 Move X1, [X8+16]
	012 Move X5, [X9+904]
	013 Move X4, [X9+912]
	014 Move X30, [X31+16]
	015 CallNoReturn X5
	016 Call 0x1C17F20

