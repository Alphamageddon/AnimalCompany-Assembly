Type: Mono.Net.Security.AsyncProtocolRequest/<InnerRead>d__25

Method: System.Void MoveNext()

Disassembly:
	0x035E9D44 STR X0, [X19 + 0x28]
	0x035E9D48 LDR X0, [X20 + 0x18]
	0x035E9D4C BL 0x35EA0EC
	0x035E9D50 STR X0, [X19 + 0x30]
	0x035E9D54 LDURH W8, [X20 + 0x73]
	0x035E9D58 CMP W8, 0xFF
	0x035E9D5C CSET W9, HI
	0x035E9D60 CMP X21, 0x0
	0x035E9D64 CSET W10, NE
	0x035E9D68 ANDS W31, W8, 0xFF
	0x035E9D6C CSEL W22, W10, W9, EQ
	0x035E9D70 CBNZ X21, 0x35E9D84
	0x035E9D74 CBNZ W22, 0x35E9DE8
	0x035E9D78 B 0x35E9E48
	0x035E9D7C CBZ X21, 0x35E9E48
	0x035E9D80 MOV W22, W31
	0x035E9D84 LDR X8, [X21 + 0x20]
	0x035E9D88 LDR X9, [X19 + 0x28]
	0x035E9D8C STR X8, [X19 + 0x40]
	0x035E9D90 CBNZ X9, 0x35E9DA0
	0x035E9D94 CBZ X8, 0x35E9E5C
	0x035E9D98 LDR X8, [X8 + 0x138]
	0x035E9D9C STR X8, [X19 + 0x28]
	0x035E9DA0 LDR X8, [X19 + 0x30]
	0x035E9DA4 CBNZ X8, 0x35E9DD8
	0x035E9DA8 ADRP X8, 0xB50000
	0x035E9DAC LDR X8, [X8 + 0x518]
	0x035E9DB0 LDR X0, [X8]
	0x035E9DB4 BL 0x1C16F10
	0x035E9DB8 ADRP X8, 0xB50000
	0x035E9DBC LDR X8, [X8 + 0x510]
	0x035E9DC0 MOV X1, X31
	0x035E9DC4 MOV X3, X31
	0x035E9DC8 MOV X21, X0
	0x035E9DCC LDR X2, [X8]
	0x035E9DD0 BL 0x362542C
	0x035E9DD4 STR X21, [X19 + 0x30]
	0x035E9DD8 CMP X20, 0x0
	0x035E9DDC CSET W8, EQ
	0x035E9DE0 ORR W8, W8, W22, 0x0
	0x035E9DE4 TBZ X8, 0x0, 0x35E9E48
	0x035E9DE8 LDR X8, [X19 + 0x28]
	0x035E9DEC CBNZ X8, 0x35E9E48
	0x035E9DF0 ADRP X20, 0xB38000
	0x035E9DF4 LDR X20, [X20 + 0x230]
	0x035E9DF8 LDR X0, [X20]
	0x035E9DFC LDR W8, [X0 + 0xE0]
	0x035E9E00 CBNZ W8, 0x35E9E08
	0x035E9E04 BL 0x1C16DFC
	0x035E9E08 ADRP X21, 0xDF7000
	0x035E9E0C LDRB W8, [X21 + 0x2F6]
	0x035E9E10 CBNZ W8, 0x35E9E28
	0x035E9E14 ADRP X0, 0xB38000
	0x035E9E18 LDR X0, [X0 + 0x230]
	0x035E9E1C BL 0x1C16CF4
	0x035E9E20 MOVZ W8, 0x1
	0x035E9E24 STRB W8, [X21 + 0x2F6]
	0x035E9E28 LDR X0, [X20]
	0x035E9E2C LDR W8, [X0 + 0xE0]
	0x035E9E30 CBNZ W8, 0x35E9E3C
	0x035E9E34 BL 0x1C16DFC
	0x035E9E38 LDR X0, [X20]
	0x035E9E3C LDR X8, [X0 + 0xB8]
	0x035E9E40 LDR X8, [X8 + 0x30]
	0x035E9E44 STR X8, [X19 + 0x28]
	0x035E9E48 LDP X20, X19, [X31 + 0x30]
	0x035E9E4C LDP X22, X21, [X31 + 0x20]
	0x035E9E50 LDP X24, X23, [X31 + 0x10]
	0x035E9E54 LDP X30, X25, [X31], #0x40
	0x035E9E58 RET
	0x035E9E5C BL 0x1C16F20
	0x035E9E60 STP X30, X23, [X31 - 0x30]!
	0x035E9E64 STP X22, X21, [X31 + 0x10]
	0x035E9E68 STP X20, X19, [X31 + 0x20]
	0x035E9E6C ADRP X23, 0xDF7000
	0x035E9E70 ADRP X22, 0xB50000
	0x035E9E74 LDRB W8, [X23 + 0x2AA]
	0x035E9E78 LDR X22, [X22 + 0x508]
	0x035E9E7C MOV X20, X2
	0x035E9E80 MOV X19, X1
	0x035E9E84 MOV X21, X0
	0x035E9E88 TBNZ X8, 0x0, 0x35E9EA0
	0x035E9E8C ADRP X0, 0xB50000
	0x035E9E90 LDR X0, [X0 + 0x508]
	0x035E9E94 BL 0x1C16CF4
	0x035E9E98 MOVZ W8, 0x1
	0x035E9E9C STRB W8, [X23 + 0x2AA]
	0x035E9EA0 LDR X0, [X22]
	0x035E9EA4 LDR X23, [X19]
	0x035E9EA8 BL 0x1C16F10
	0x035E9EAC MOVZ W4, 0x1
	0x035E9EB0 MOV X1, X31
	0x035E9EB4 MOV X2, X21
	0x035E9EB8 MOV X3, X23
	0x035E9EBC MOV X5, X20
	0x035E9EC0 MOV X22, X0
	0x035E9EC4 BL 0x35E9BFC
	0x035E9EC8 CBZ X22, 0x35E9EE8
	0x035E9ECC LDR X8, [X22 + 0x18]
	0x035E9ED0 MOV X0, X22
	0x035E9ED4 LDP X22, X21, [X31 + 0x10]
	0x035E9ED8 STR X8, [X19]
	0x035E9EDC LDP X20, X19, [X31 + 0x20]
	0x035E9EE0 LDP X30, X23, [X31], #0x30
	0x035E9EE4 RET
	0x035E9EE8 BL 0x1C16F20
	0x035E9EEC SUB X31, X31, 0x30
	0x035E9EF0 STP X30, X21, [X31 + 0x10]
	0x035E9EF4 STP X20, X19, [X31 + 0x20]
	0x035E9EF8 ADRP X19, 0xDF7000
	0x035E9EFC ADRP X20, 0xB50000
	0x035E9F00 LDRB W8, [X19 + 0x2CD]
	0x035E9F04 LDR X20, [X20 + 0x378]
	0x035E9F08 TBNZ X8, 0x0, 0x35E9F20
	0x035E9F0C ADRP X0, 0xB50000
	0x035E9F10 LDR X0, [X0 + 0x378]
	0x035E9F14 BL 0x1C16CF4
	0x035E9F18 MOVZ W8, 0x1
	0x035E9F1C STRB W8, [X19 + 0x2CD]
	0x035E9F20 LDR X0, [X20]
	0x035E9F24 LDR W8, [X0 + 0xE0]
	0x035E9F28 CBNZ W8, 0x35E9F34
	0x035E9F2C BL 0x1C16DFC
	0x035E9F30 LDR X0, [X20]
	0x035E9F34 LDR X8, [X0 + 0xB8]
	0x035E9F38 LDR X19, [X8]
	0x035E9F3C STRB W31, [X31 + 0xC]
	0x035E9F40 ADD X1, X31, 0xC
	0x035E9F44 MOV X0, X19
	0x035E9F48 MOV X2, X31
	0x035E9F4C BL 0x33DE64C
	0x035E9F50 LDR X0, [X20]
	0x035E9F54 LDR W8, [X0 + 0xE0]
	0x035E9F58 CBNZ W8, 0x35E9F60
	0x035E9F5C BL 0x1C16DFC
	0x035E9F60 BL 0x35EE0C8
	0x035E9F64 LDR X8, [X20]
	0x035E9F68 MOV X20, X31
	0x035E9F6C LDR X8, [X8 + 0xB8]
	0x035E9F70 LDR X21, [X8 + 0x10]
	0x035E9F74 LDRB W8, [X31 + 0xC]
	0x035E9F78 CBZ W8, 0x35E9F88
	0x035E9F7C MOV X0, X19
	0x035E9F80 MOV X1, X31
	0x035E9F84 BL 0x33E14E4
	0x035E9F88 CBNZ X20, 0x35E9FA0
	0x035E9F8C MOV X0, X21
	0x035E9F90 LDP X20, X19, [X31 + 0x20]
	0x035E9F94 LDP X30, X21, [X31 + 0x10]
	0x035E9F98 ADD X31, X31, 0x30
	0x035E9F9C RET
	0x035E9FA0 MOV X0, X20
	0x035E9FA4 BL 0x1C16F18
	0x035E9FA8 CMP W1, 0x1
	0x035E9FAC MOV X21, X0
	0x035E9FB0 B.NE 0x35E9FCC
	0x035E9FB4 MOV X0, X21
	0x035E9FB8 BL 0x3EB1AD0
	0x035E9FBC LDR X20, [X0]
	0x035E9FC0 BL 0x3EB1AE0
	0x035E9FC4 MOV X21, X31
	0x035E9FC8 B 0x35E9F74
	0x035E9FCC MOV X20, X31
	0x035E9FD0 B 0x35E9FD8
	0x035E9FD4 MOV X21, X0
	0x035E9FD8 LDRB W8, [X31 + 0xC]
	0x035E9FDC CBZ W8, 0x35E9FEC
	0x035E9FE0 MOV X0, X19
	0x035E9FE4 MOV X1, X31
	0x035E9FE8 BL 0x33E14E4
	0x035E9FEC CBNZ X20, 0x35E9FF8
	0x035E9FF0 MOV X0, X21
	0x035E9FF4 BL 0x1D2C690
	0x035E9FF8 MOV X0, X20
	0x035E9FFC BL 0x1C16F18
	0x035EA000 BL 0x1990590
	0x035EA004 STP X30, X21, [X31 - 0x20]!
	0x035EA008 STP X20, X19, [X31 + 0x10]
	0x035EA00C ADRP X20, 0xDF6000
	0x035EA010 ADRP X21, 0xB4F000
	0x035EA014 LDRB W8, [X20 + 0x2AC]
	0x035EA018 LDR X21, [X21 + 0x530]
	0x035EA01C MOV X19, X0
	0x035EA020 TBNZ X8, 0x0, 0x35EA05C
	0x035EA024 ADRP X0, 0xB47000
	0x035EA028 LDR X0, [X0 + 0x500]
	0x035EA02C BL 0x1C16CF4
	0x035EA030 ADRP X0, 0xB4F000
	0x035EA034 LDR X0, [X0 + 0x538]
	0x035EA038 BL 0x1C16CF4
	0x035EA03C ADRP X0, 0xB4F000
	0x035EA040 LDR X0, [X0 + 0x540]
	0x035EA044 BL 0x1C16CF4
	0x035EA048 ADRP X0, 0xB4F000
	0x035EA04C LDR X0, [X0 + 0x530]
	0x035EA050 BL 0x1C16CF4
	0x035EA054 MOVZ W8, 0x1
	0x035EA058 STRB W8, [X20 + 0x2AC]
	0x035EA05C LDR X0, [X21]
	0x035EA060 BL 0x1C16F10
	0x035EA064 MOV X1, X31
	0x035EA068 MOV X20, X0
	0x035EA06C BL 0x33BDD8C
	0x035EA070 CBZ X20, 0x35EA0E8
	0x035EA074 STR X19, [X20 + 0x10]
	0x035EA078 CBZ X19, 0x35EA0E8
	0x035EA07C LDR X8, [X19 + 0x10]
	0x035EA080 CBZ X8, 0x35EA0D8
	0x035EA084 ADRP X8, 0xB47000
	0x035EA088 LDR X8, [X8 + 0x500]
	0x035EA08C ADRP X19, 0xB4F000
	0x035EA090 ADRP X21, 0xB4F000
	0x035EA094 LDR X0, [X8]
	0x035EA098 LDR X19, [X19 + 0x540]
	0x035EA09C LDR X21, [X21 + 0x538]
	0x035EA0A0 BL 0x1C16F10
	0x035EA0A4 LDR X2, [X19]
	0x035EA0A8 MOV X1, X20
	0x035EA0AC MOV X3, X31
	0x035EA0B0 MOV X19, X0
	0x035EA0B4 BL 0x36DE290
	0x035EA0B8 LDR X0, [X21]
	0x035EA0BC BL 0x1C16F10
	0x035EA0C0 MOV X1, X19
	0x035EA0C4 MOV X2, X31
	0x035EA0C8 MOV X20, X0
	0x035EA0CC BL 0x3696914
	0x035EA0D0 MOV X0, X20
	0x035EA0D4 B 0x35EA0DC
	0x035EA0D8 MOV X0, X31
	0x035EA0DC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xDF8000
	008 Move W8, [X20+677]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {46}
	014 Move X0, 0xB51000
	015 Move X0, [X0+1192]
	016 Call 0x1C17CF4
	017 Move X0, 0xB51000
	018 Move X0, [X0+1200]
	019 Call 0x1C17CF4
	020 Move X0, 0xB51000
	021 Move X0, [X0+1016]
	022 Call 0x1C17CF4
	023 Move X0, 0xB3F000
	024 Move X0, [X0+696]
	025 Call 0x1C17CF4
	026 Move X0, 0xB3F000
	027 Move X0, [X0+704]
	028 Call 0x1C17CF4
	029 Move X0, 0xB3F000
	030 Move X0, [X0+712]
	031 Call 0x1C17CF4
	032 Move X0, 0xB12000
	033 Move X0, [X0+1520]
	034 Call 0x1C17CF4
	035 Move X0, 0xB0C000
	036 Move X0, [X0+1136]
	037 Call 0x1C17CF4
	038 Move X0, 0xB0E000
	039 Move X0, [X0+3832]
	040 Call 0x1C17CF4
	041 Move X0, 0xB3F000
	042 Move X0, [X0+720]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+677], W8
	046 Move [X31], X31
	047 Move [X31+8], X31
	048 Move X21, 0xB51000
	049 Move W8, [X19]
	050 Move X22, [X19+32]
	051 Move X21, [X21+1016]
	052 Compare W8, 0
	053 JumpIfEqual {62}
	054 Move [X19+48], X31
	055 Compare X22, 0
	056 JumpIfEqual {70}
	057 Add X0, X22, 36
	058 Move W1, W31
	059 Move X2, X31
	060 Call Interlocked.Exchange, X0, X1
	061 Move W2, W0
	062 Move V0, [X19+4]
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W8, TEMP
	066 Move [X31], V0
	067 Move [X19+64], X31
	068 Move [X19+72], X31
	069 Move [X19], W8
	070 Call 0x1C17F20
	071 Move X0, [X22+16]
	072 Compare X0, 0
	073 JumpIfEqual {178}
	074 Move W1, [X22+24]
	075 Move X3, [X19+40]
	076 Call MobileAuthenticatedStream.InnerRead, X0, X1, X2, X3
	077 Compare X0, 0
	078 JumpIfEqual {177}
	079 Move X8, 0xB3F000
	080 Move X8, [X8+720]
	081 Move X2, [X8]
	082 Move W1, W31
	083 Call Task`1<Int32>.ConfigureAwait, X0, X1
	084 Move X8, 0xB3F000
	085 Move X8, [X8+712]
	086 Move [X31], X0
	087 Move [X31+8], X1
	088 Move X8, [X8]
	089 Add X0, X31, 0
	090 Move X1, X8
	091 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {155}
	096 Move X8, 0xB3F000
	097 Move X8, [X8+704]
	098 Move X1, [X8]
	099 Add X0, X31, 0
	100 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	101 Move X9, 0xB0C000
	102 Move X9, [X9+1136]
	103 Move W20, W0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W8, [X19+56]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X10, [X19+48]
	108 And W31, W10, 255
	109 Move X2, [X9]
	110 Move X8, X10
	111 ShiftRight X8, 32
	112 And X8, X8, 0x7FFFFFFF
	113 Add W1, W20, W8
	114 Move [X31+24], X31
	115 Add X0, X31, 24
	116 Call Nullable`1<Int32>..ctor, X0, X1
	117 Move X9, [X31+24]
	118 Move W8, [X19+56]
	119 Move X9, X31
	120 Subtract W8, W8, W20
	121 Move [X19+48], X9
	122 Move [X19+56], W8
	123 Compare X22, 0
	124 JumpIfEqual {192}
	125 Add X0, X22, 36
	126 Move W1, W31
	127 Move X2, X31
	128 Call Interlocked.Exchange, X0, X1
	129 Move W8, [X19+56]
	130 Add W2, W8, W0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X19+56], W2
	133 Move X20, [X19+48]
	134 Move X2, [X9]
	135 Move [X31+24], X31
	136 Add X0, X31, 24
	137 Move W1, W20
	138 Call Nullable`1<Int32>..ctor, X0, X1
	139 Move X20, [X31+24]
	140 Move TEMP, 1
	141 Not TEMP
	142 Move W8, TEMP
	143 Move [X19+8], W8
	144 Move X0, [X21]
	145 Move X21, 0xB51000
	146 Move W8, [X0+224]
	147 Move X21, [X21+1200]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X2, [X21]
	152 Move X0, X19
	153 Move X1, X20
	154 Call 0x24DB9F8, X0, X1
	155 Move [X19], W31
	156 Move V0, [X31]
	157 Move [X19+4], V0
	158 Move X0, [X21]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X8, 0xB51000
	164 Move X8, [X8+1192]
	165 Add X0, X19, 8
	166 Move X3, [X8]
	167 Add X1, X31, 0
	168 Move X2, X19
	169 Call 0x1FAA294, X0, X1, X2
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X22, [X31+32]
	173 Move X21, [X31+40]
	174 Move X30, [X31+16]
	175 Add X31, X31, 64
	176 Return 
	177 Call 0x1C17F20
	178 Call 0x1C17F20
	179 Move X0, 0xB0B000
	180 Move X0, [X0+1456]
	181 Call 0x1C17D08
	182 Call 0x1C17F10
	183 Move X20, X0
	184 Move X1, X31
	185 Call InvalidOperationException..ctor, X0
	186 Move X0, 0xB51000
	187 Move X0, [X0+1208]
	188 Call 0x1C17D08
	189 Move X1, X0
	190 Move X0, X20
	191 Call 0x1C17DEC
	192 Call 0x1C17F20
	193 Move X20, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X20
	196 Call 0x3EB2AD0
	197 Move X20, X0
	198 Move X0, 0xB0A000
	199 Move X0, [X0+2000]
	200 Call 0x1C17D08
	201 Move X8, [X20]
	202 Move X1, [X8]
	203 Call 0x1C18270
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {228}
	208 Move X20, [X20]
	209 Call 0x3EB2AE0
	210 Move TEMP, 1
	211 Not TEMP
	212 Move W8, TEMP
	213 Move [X19+8], W8
	214 Move X0, 0xB50000
	215 Move X0, [X0+1016]
	216 Call 0x1C17D08
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, 0xB50000
	222 Move X0, [X0+1216]
	223 Call 0x1C17D08
	224 Move X2, X0
	225 Move X0, X19
	226 Move X1, X20
	227 Call 0x24DBC10, X0, X1
	228 Move W0, 8
	229 Call 0x3EB2AF0
	230 Move X8, [X20]
	231 Move [X0], X8
	232 Move X1, 0x8CB000
	233 Add X1, X1, 3672
	234 Move X2, X31
	235 Call 0x3EB2B00
	236 Move X20, X0
	237 Call 0x3EB2AE0
	238 Move X0, X20
	239 Call 0x1D2D690
	240 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035EA1F8 MOV X19, X5
	0x035EA1FC CBZ X20, 0x35EA214
	0x035EA200 LDR X8, [X20 + 0x18]
	0x035EA204 LDR X0, [X20 + 0x40]
	0x035EA208 LDR X5, [X20 + 0x28]
	0x035EA20C BLR X8
	0x035EA210 B 0x35EA218
	0x035EA214 MOV X0, X31
	0x035EA218 CMP X20, 0x0
	0x035EA21C STR X0, [X19]
	0x035EA220 LDP X20, X19, [X31 + 0x10]
	0x035EA224 CSET W8, NE
	0x035EA228 MOV W0, W8
	0x035EA22C LDR X30, [X31], #0x20
	0x035EA230 RET
	0x035EA234 STR X30, [X31 - 0x20]!
	0x035EA238 STP X20, X19, [X31 + 0x10]
	0x035EA23C MOV X19, X0
	0x035EA240 AND W2, W2, 0x1
	0x035EA244 MOV X5, X31
	0x035EA248 MOV W6, W31
	0x035EA24C BL 0x35EA308
	0x035EA250 LDR X8, [X19 + 0x38]
	0x035EA254 CBZ X8, 0x35EA274
	0x035EA258 CBZ X0, 0x35EA26C
	0x035EA25C LDRB W9, [X0 + 0x10]
	0x035EA260 CBZ W9, 0x35EA26C
	0x035EA264 LDRB W9, [X0 + 0x11]
	0x035EA268 B 0x35EA270
	0x035EA26C MOVZ W9, 0x1
	0x035EA270 STRB W9, [X8 + 0x44]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDF7000
	007 Move X21, 0xB50000
	008 Move W8, [X22+678]
	009 Move X21, [X21+1016]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB50000
	017 Move X0, [X0+1232]
	018 Call 0x1C17CF4
	019 Move X0, 0xB50000
	020 Move X0, [X0+1016]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+678], W8
	024 Move X0, [X21]
	025 Move X21, 0xB50000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1232]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call 0x24DB970, X0, X1
	040 Return 

