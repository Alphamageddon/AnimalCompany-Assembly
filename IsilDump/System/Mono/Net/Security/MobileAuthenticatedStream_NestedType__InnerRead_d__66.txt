Type: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66

Method: System.Void MoveNext()

Disassembly:
	0x035EE3A8 MOV X3, X31
	0x035EE3AC BL 0x338036C
	0x035EE3B0 ADRP X0, 0xB4B000
	0x035EE3B4 LDR X0, [X0 + 0x730]
	0x035EE3B8 BL 0x1C16D08
	0x035EE3BC MOV X1, X0
	0x035EE3C0 MOV X0, X21
	0x035EE3C4 BL 0x1C16DEC
	0x035EE3C8 MOVZ W0, 0x8
	0x035EE3CC BL 0x3EB1AF0
	0x035EE3D0 LDR X8, [X20]
	0x035EE3D4 STR X8, [X0]
	0x035EE3D8 ADRP X1, 0x8C6000
	0x035EE3DC ADD X1, X1, 0xE58
	0x035EE3E0 MOV X2, X31
	0x035EE3E4 BL 0x3EB1B00
	0x035EE3E8 B 0x35EE404
	0x035EE3EC B 0x35EE404
	0x035EE3F0 MOV X21, X1
	0x035EE3F4 MOV X20, X0
	0x035EE3F8 BL 0x3EB1AE0
	0x035EE3FC B 0x35EE40C
	0x035EE400 B 0x35EE404
	0x035EE404 MOV X21, X1
	0x035EE408 MOV X20, X0
	0x035EE40C CMP W21, 0x1
	0x035EE410 B.NE 0x35EE428
	0x035EE414 MOV X0, X20
	0x035EE418 BL 0x3EB1AD0
	0x035EE41C LDR X21, [X0]
	0x035EE420 BL 0x3EB1AE0
	0x035EE424 B 0x35EE29C
	0x035EE428 MOV X21, X31
	0x035EE42C B 0x35EE434
	0x035EE430 MOV X20, X0
	0x035EE434 LDRB W8, [X31 + 0xC]
	0x035EE438 CBZ W8, 0x35EE448
	0x035EE43C MOV X0, X19
	0x035EE440 MOV X1, X31
	0x035EE444 BL 0x33E14E4
	0x035EE448 CBNZ X21, 0x35EE454
	0x035EE44C MOV X0, X20
	0x035EE450 BL 0x1D2C690
	0x035EE454 MOV X0, X21
	0x035EE458 BL 0x1C16F18
	0x035EE45C BL 0x1990590
	0x035EE460 SUB X31, X31, 0x30
	0x035EE464 STP X30, X21, [X31 + 0x10]
	0x035EE468 STP X20, X19, [X31 + 0x20]
	0x035EE46C ADRP X19, 0xDF2000
	0x035EE470 ADRP X21, 0xB4B000
	0x035EE474 LDRB W8, [X19 + 0x2D0]
	0x035EE478 LDR X21, [X21 + 0x378]
	0x035EE47C TBNZ X8, 0x0, 0x35EE4C4
	0x035EE480 ADRP X0, 0xB4B000
	0x035EE484 LDR X0, [X0 + 0x738]
	0x035EE488 BL 0x1C16CF4
	0x035EE48C ADRP X0, 0xB4B000
	0x035EE490 LDR X0, [X0 + 0x740]
	0x035EE494 BL 0x1C16CF4
	0x035EE498 ADRP X0, 0xB4B000
	0x035EE49C LDR X0, [X0 + 0x748]
	0x035EE4A0 BL 0x1C16CF4
	0x035EE4A4 ADRP X0, 0xB4B000
	0x035EE4A8 LDR X0, [X0 + 0x750]
	0x035EE4AC BL 0x1C16CF4
	0x035EE4B0 ADRP X0, 0xB4B000
	0x035EE4B4 LDR X0, [X0 + 0x378]
	0x035EE4B8 BL 0x1C16CF4
	0x035EE4BC MOVZ W8, 0x1
	0x035EE4C0 STRB W8, [X19 + 0x2D0]
	0x035EE4C4 LDR X0, [X21]
	0x035EE4C8 LDR W8, [X0 + 0xE0]
	0x035EE4CC CBNZ W8, 0x35EE4D8
	0x035EE4D0 BL 0x1C16DFC
	0x035EE4D4 LDR X0, [X21]
	0x035EE4D8 LDR X8, [X0 + 0xB8]
	0x035EE4DC LDR X19, [X8]
	0x035EE4E0 STRB W31, [X31 + 0xC]
	0x035EE4E4 ADD X1, X31, 0xC
	0x035EE4E8 MOV X0, X19
	0x035EE4EC MOV X2, X31
	0x035EE4F0 BL 0x33DE64C
	0x035EE4F4 LDR X0, [X21]
	0x035EE4F8 LDR W8, [X0 + 0xE0]
	0x035EE4FC CBNZ W8, 0x35EE508
	0x035EE500 BL 0x1C16DFC
	0x035EE504 LDR X0, [X21]
	0x035EE508 LDR X8, [X0 + 0xB8]
	0x035EE50C LDR X8, [X8 + 0x18]
	0x035EE510 CBNZ X8, 0x35EE5B4
	0x035EE514 ADRP X8, 0xB4B000
	0x035EE518 LDR X8, [X8 + 0x748]
	0x035EE51C LDR X0, [X8]
	0x035EE520 BL 0x1C16F10
	0x035EE524 ADRP X8, 0xB4B000
	0x035EE528 LDR X8, [X8 + 0x740]
	0x035EE52C MOV X20, X0
	0x035EE530 LDR X1, [X8]
	0x035EE534 BL 0x2AA4804
	0x035EE538 LDR X0, [X21]
	0x035EE53C LDR W8, [X0 + 0xE0]
	0x035EE540 CBNZ W8, 0x35EE54C
	0x035EE544 BL 0x1C16DFC
	0x035EE548 LDR X0, [X21]
	0x035EE54C LDR X8, [X0 + 0xB8]
	0x035EE550 STR X20, [X8 + 0x18]
	0x035EE554 ADRP X8, 0xB4B000
	0x035EE558 LDR X8, [X8 + 0x750]
	0x035EE55C LDR X0, [X8]
	0x035EE560 BL 0x1C16F10
	0x035EE564 ADRP X8, 0xB4B000
	0x035EE568 LDR X8, [X8 + 0x738]
	0x035EE56C MOV X20, X0
	0x035EE570 LDR X1, [X8]
	0x035EE574 BL 0x29E4EA4
	0x035EE578 LDR X8, [X21]
	0x035EE57C LDR X8, [X8 + 0xB8]
	0x035EE580 STR X20, [X8 + 0x20]
	0x035EE584 BL 0x35E1D34
	0x035EE588 MOV X8, X0
	0x035EE58C LDR X0, [X21]
	0x035EE590 LDR W9, [X0 + 0xE0]
	0x035EE594 CBZ X8, 0x35EE5A8
	0x035EE598 CBNZ W9, 0x35EE5A0
	0x035EE59C BL 0x1C16DFC
	0x035EE5A0 BL 0x35EED38
	0x035EE5A4 B 0x35EE5B4
	0x035EE5A8 CBNZ W9, 0x35EE5B0
	0x035EE5AC BL 0x1C16DFC
	0x035EE5B0 BL 0x35EEE78
	0x035EE5B4 MOV X20, X31
	0x035EE5B8 LDRB W8, [X31 + 0xC]
	0x035EE5BC CBZ W8, 0x35EE5CC
	0x035EE5C0 MOV X0, X19
	0x035EE5C4 MOV X1, X31
	0x035EE5C8 BL 0x33E14E4
	0x035EE5CC CBNZ X20, 0x35EE5E0
	0x035EE5D0 LDP X20, X19, [X31 + 0x20]
	0x035EE5D4 LDP X30, X21, [X31 + 0x10]
	0x035EE5D8 ADD X31, X31, 0x30
	0x035EE5DC RET
	0x035EE5E0 MOV X0, X20
	0x035EE5E4 BL 0x1C16F18
	0x035EE5E8 B 0x35EE5F8
	0x035EE5EC B 0x35EE5F8
	0x035EE5F0 B 0x35EE5F8
	0x035EE5F4 B 0x35EE5F8
	0x035EE5F8 MOV X21, X0
	0x035EE5FC CMP W1, 0x1
	0x035EE600 B.NE 0x35EE618
	0x035EE604 MOV X0, X21
	0x035EE608 BL 0x3EB1AD0
	0x035EE60C LDR X20, [X0]
	0x035EE610 BL 0x3EB1AE0
	0x035EE614 B 0x35EE5B8
	0x035EE618 MOV X20, X31
	0x035EE61C B 0x35EE624
	0x035EE620 MOV X21, X0
	0x035EE624 LDRB W8, [X31 + 0xC]
	0x035EE628 CBZ W8, 0x35EE638
	0x035EE62C MOV X0, X19
	0x035EE630 MOV X1, X31
	0x035EE634 BL 0x33E14E4
	0x035EE638 CBNZ X20, 0x35EE644
	0x035EE63C MOV X0, X21
	0x035EE640 BL 0x1D2C690
	0x035EE644 MOV X0, X20
	0x035EE648 BL 0x1C16F18
	0x035EE64C BL 0x1990590
	0x035EE650 STP X30, X21, [X31 - 0x20]!
	0x035EE654 STP X20, X19, [X31 + 0x10]
	0x035EE658 ADRP X19, 0xDF2000
	0x035EE65C ADRP X21, 0xB4B000
	0x035EE660 ADRP X20, 0xB33000
	0x035EE664 LDRB W8, [X19 + 0x2D3]
	0x035EE668 LDR X21, [X21 + 0x758]
	0x035EE66C LDR X20, [X20 + 0xCA0]
	0x035EE670 TBNZ X8, 0x0, 0x35EE6C4
	0x035EE674 ADRP X0, 0xB4B000
	0x035EE678 LDR X0, [X0 + 0x378]
	0x035EE67C BL 0x1C16CF4
	0x035EE680 ADRP X0, 0xB4B000
	0x035EE684 LDR X0, [X0 + 0x760]
	0x035EE688 BL 0x1C16CF4
	0x035EE68C ADRP X0, 0xB33000
	0x035EE690 LDR X0, [X0 + 0xCA0]
	0x035EE694 BL 0x1C16CF4
	0x035EE698 ADRP X0, 0xB4B000
	0x035EE69C LDR X0, [X0 + 0x768]
	0x035EE6A0 BL 0x1C16CF4
	0x035EE6A4 ADRP X0, 0xB4B000
	0x035EE6A8 LDR X0, [X0 + 0x758]
	0x035EE6AC BL 0x1C16CF4
	0x035EE6B0 ADRP X0, 0xB4B000
	0x035EE6B4 LDR X0, [X0 + 0x370]
	0x035EE6B8 BL 0x1C16CF4
	0x035EE6BC MOVZ W8, 0x1
	0x035EE6C0 STRB W8, [X19 + 0x2D3]
	0x035EE6C4 LDR X0, [X21]
	0x035EE6C8 MOV X1, X31
	0x035EE6CC BL 0x33C19D0
	0x035EE6D0 MOV X1, X31
	0x035EE6D4 MOV X19, X0
	0x035EE6D8 BL 0x32277A8
	0x035EE6DC LDR X1, [X20]
	0x035EE6E0 ANDS W31, W0, 0x1
	0x035EE6E4 MOV X2, X31
	0x035EE6E8 CSEL X19, X1, X19, NE
	0x035EE6EC MOV X0, X19
	0x035EE6F0 BL 0x321BA08
	0x035EE6F4 TBNZ X0, 0x0, 0x35EE714
	0x035EE6F8 ADRP X8, 0xB4B000
	0x035EE6FC LDR X8, [X8 + 0x768]
	0x035EE700 MOV X0, X19
	0x035EE704 MOV X2, X31
	0x035EE708 LDR X1, [X8]
	0x035EE70C BL 0x321BA08
	0x035EE710 TBZ X0, 0x0, 0x35EE748
	0x035EE714 BL 0x35E1D34
	0x035EE718 CBZ X0, 0x35EE790
	0x035EE71C ADRP X8, 0xB4B000
	0x035EE720 LDR X8, [X8 + 0x760]
	0x035EE724 LDR X0, [X8]
	0x035EE728 BL 0x1C16F10
	0x035EE72C MOV X1, X31
	0x035EE730 MOV X19, X0
	0x035EE734 BL 0x31FD668
	0x035EE738 MOV X0, X19
	0x035EE73C LDP X20, X19, [X31 + 0x10]
	0x035EE740 LDP X30, X21, [X31], #0x20
	0x035EE744 RET
	0x035EE748 ADRP X8, 0xB4B000
	0x035EE74C LDR X8, [X8 + 0x370]
	0x035EE750 MOV X0, X19
	0x035EE754 MOV X2, X31
	0x035EE758 LDR X1, [X8]
	0x035EE75C BL 0x321BA08
	0x035EE760 TBNZ X0, 0x0, 0x35EE71C
	0x035EE764 ADRP X8, 0xB4B000
	0x035EE768 LDR X8, [X8 + 0x378]
	0x035EE76C LDR X0, [X8]
	0x035EE770 LDR W8, [X0 + 0xE0]
	0x035EE774 CBNZ W8, 0x35EE77C
	0x035EE778 BL 0x1C16DFC
	0x035EE77C MOV X0, X19
	0x035EE780 LDP X20, X19, [X31 + 0x10]
	0x035EE784 MOVZ W1, 0x1
	0x035EE788 LDP X30, X21, [X31], #0x20
	0x035EE78C B 0x35EE7D8
	0x035EE790 ADRP X0, 0xB05000
	0x035EE794 LDR X0, [X0 + 0xB40]
	0x035EE798 BL 0x1C16D08
	0x035EE79C BL 0x1C16F10
	0x035EE7A0 MOV X19, X0
	0x035EE7A4 ADRP X0, 0xB4B000
	0x035EE7A8 LDR X0, [X0 + 0x728]
	0x035EE7AC BL 0x1C16D08
	0x035EE7B0 MOV X1, X0
	0x035EE7B4 MOV X0, X19
	0x035EE7B8 MOV X2, X31
	0x035EE7BC BL 0x3379A44
	0x035EE7C0 ADRP X0, 0xB4B000
	0x035EE7C4 LDR X0, [X0 + 0x770]
	0x035EE7C8 BL 0x1C16D08
	0x035EE7CC MOV X1, X0
	0x035EE7D0 MOV X0, X19
	0x035EE7D4 BL 0x1C16DEC
	0x035EE7D8 SUB X31, X31, 0x50
	0x035EE7DC STP X30, X23, [X31 + 0x20]
	0x035EE7E0 STP X22, X21, [X31 + 0x30]
	0x035EE7E4 STP X20, X19, [X31 + 0x40]
	0x035EE7E8 ADRP X19, 0xDF2000
	0x035EE7EC ADRP X23, 0xB4B000
	0x035EE7F0 LDRB W8, [X19 + 0x2CF]
	0x035EE7F4 LDR X23, [X23 + 0x378]
	0x035EE7F8 MOV W21, W1
	0x035EE7FC MOV X20, X0
	0x035EE800 TBNZ X8, 0x0, 0x35EE884
	0x035EE804 ADRP X0, 0xB4B000
	0x035EE808 LDR X0, [X0 + 0x718]
	0x035EE80C BL 0x1C16CF4
	0x035EE810 ADRP X0, 0xB4B000
	0x035EE814 LDR X0, [X0 + 0x778]
	0x035EE818 BL 0x1C16CF4
	0x035EE81C ADRP X0, 0xB4B000
	0x035EE820 LDR X0, [X0 + 0x780]
	0x035EE824 BL 0x1C16CF4
	0x035EE828 ADRP X0, 0xB4B000
	0x035EE82C LDR X0, [X0 + 0x788]
	0x035EE830 BL 0x1C16CF4
	0x035EE834 ADRP X0, 0xB4B000
	0x035EE838 LDR X0, [X0 + 0x790]
	0x035EE83C BL 0x1C16CF4
	0x035EE840 ADRP X0, 0xB4B000
	0x035EE844 LDR X0, [X0 + 0x378]
	0x035EE848 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0xDF3000
	012 Move W8, [X20+709]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {62}
	018 Move X0, 0xB4C000
	019 Move X0, [X0+1688]
	020 Call 0x1C17CF4
	021 Move X0, 0xB35000
	022 Move X0, [X0+3632]
	023 Call 0x1C17CF4
	024 Move X0, 0xB35000
	025 Move X0, [X0+3488]
	026 Call 0x1C17CF4
	027 Move X0, 0xB0E000
	028 Move X0, [X0+2008]
	029 Call 0x1C17CF4
	030 Move X0, 0xB3A000
	031 Move X0, [X0+696]
	032 Call 0x1C17CF4
	033 Move X0, 0xB3A000
	034 Move X0, [X0+704]
	035 Call 0x1C17CF4
	036 Move X0, 0xB3A000
	037 Move X0, [X0+712]
	038 Call 0x1C17CF4
	039 Move X0, 0xB4C000
	040 Move X0, [X0+1696]
	041 Call 0x1C17CF4
	042 Move X0, 0xB06000
	043 Move X0, [X0+1448]
	044 Call 0x1C17CF4
	045 Move X0, 0xB3A000
	046 Move X0, [X0+720]
	047 Call 0x1C17CF4
	048 Move X0, 0xB4C000
	049 Move X0, [X0+1704]
	050 Call 0x1C17CF4
	051 Move X0, 0xB07000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move X0, 0xB4C000
	055 Move X0, [X0+1712]
	056 Call 0x1C17CF4
	057 Move X0, 0xB4C000
	058 Move X0, [X0+1720]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+709], W8
	062 Move [X31], X31
	063 Move [X31+8], X31
	064 Move X22, 0xB35000
	065 Move W8, [X19]
	066 Move X23, [X19+32]
	067 Move X22, [X22+3488]
	068 Compare W8, 0
	069 JumpIfEqual {145}
	070 Move X8, 0xB4C000
	071 Move X8, [X8+1720]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X20, X0
	075 Move X1, X31
	076 Call Object..ctor, X0
	077 Compare X20, 0
	078 JumpIfEqual {255}
	079 Move X8, [X19+32]
	080 Move X9, 0xB0E000
	081 Move X9, [X9+2008]
	082 Move [X20+16], X8
	083 Move X0, [X9]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Add X0, X19, 40
	089 Move X1, X31
	090 Call CancellationToken.ThrowIfCancellationRequested, X0
	091 Compare X23, 0
	092 JumpIfEqual {256}
	093 Move X8, [X23+96]
	094 Compare X8, 0
	095 JumpIfEqual {257}
	096 Move X9, [X8+16]
	097 Compare X9, 0
	098 JumpIfEqual {258}
	099 Move X10, 0xB06000
	100 Move X10, [X10+1448]
	101 Move W24, [X8+24]
	102 Move W26, [X8+28]
	103 Move W25, [X9+24]
	104 Move W21, [X19+48]
	105 Move X0, [X10]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Add W8, W26, W24
	111 Subtract W0, W25, W8
	112 Move W1, W21
	113 Move X2, X31
	114 Call Math.Min, X0, X1
	115 Move W3, W0
	116 Move [X20+24], W0
	117 Compare W0, 0
	118 JumpIfEqual {259}
	119 Move W8, [X19+52]
	120 Compare W8, 0
	121 JumpIfEqual {153}
	122 Move X8, 0xB4C000
	123 Move X8, [X8+1696]
	124 Move X0, [X8]
	125 Call 0x1C17F10
	126 Move X8, 0xB4C000
	127 Move X8, [X8+1712]
	128 Move X21, X0
	129 Move X2, [X8]
	130 Move X1, X20
	131 Move X3, X31
	132 Call Func`1<Int32>..ctor, X0, X1, X2
	133 Move X8, 0xB07000
	134 Move X8, [X8+1976]
	135 Move X0, [X8]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X8, 0xB4C000
	141 Move X8, [X8+1704]
	142 Move X1, [X8]
	143 Move X0, X21
	144 Call 0x229B71C, X0
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 Move TEMP, 0
	147 Not TEMP
	148 Move W8, TEMP
	149 Move [X31], V0
	150 Move [X19+56], X31
	151 Move [X19+64], X31
	152 Move [X19], W8
	153 Move X8, [X23+96]
	154 Compare X8, 0
	155 JumpIfEqual {275}
	156 Move X0, [X23+40]
	157 Compare X0, 0
	158 JumpIfEqual {276}
	159 Move X9, [X0]
	160 Move W11, [X8+24]
	161 Move W10, [X8+28]
	162 Move X1, [X8+16]
	163 Move X4, [X19+40]
	164 Move X8, [X9+728]
	165 Move X5, [X9+736]
	166 Add W2, W11, W10
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X0, 0
	169 JumpIfEqual {272}
	170 Move X8, 0xB3A000
	171 Move X8, [X8+720]
	172 Move X2, [X8]
	173 Move W1, W31
	174 Call Task`1<Int32>.ConfigureAwait, X0, X1
	175 Move X8, 0xB3A000
	176 Move X8, [X8+712]
	177 Move [X31], X0
	178 Move [X31+8], X1
	179 Move X8, [X8]
	180 Add X0, X31, 0
	181 Move X1, X8
	182 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {229}
	187 Move X8, 0xB3A000
	188 Move X8, [X8+704]
	189 Move X1, [X8]
	190 Add X0, X31, 0
	191 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	192 Move W20, W0
	193 Move TEMP, X0
	194 And TEMP, TEMP, -2147483648
	195 Compare TEMP, -2147483648
	196 JumpIfEqual {214}
	197 Compare X23, 0
	198 JumpIfEqual {273}
	199 Move X8, [X23+96]
	200 Compare X8, 0
	201 JumpIfEqual {274}
	202 Move W9, [X8+28]
	203 Move W10, [X8+32]
	204 Add W11, W9, W20
	205 Add W9, W10, W20
	206 Move [X8+28], W11
	207 Move [X8+32], W9
	208 Compare W20, 0
	209 JumpIfNotEqual {214}
	210 Move W10, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move [X8+36], W10
	213 NotImplemented "Instruction CSINV not yet implemented."
	214 Move TEMP, 1
	215 Not TEMP
	216 Move W8, TEMP
	217 Move [X19+8], W8
	218 Move X0, [X22]
	219 Move X21, 0xB35000
	220 Move W8, [X0+224]
	221 Move X21, [X21+3632]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X2, [X21]
	226 Move X0, X19
	227 Move W1, W20
	228 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	229 Move [X19], W31
	230 Move V0, [X31]
	231 Move [X19+56], V0
	232 Move X0, [X22]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {237}
	236 Call 0x1C17DFC
	237 Move X8, 0xB4C000
	238 Move X8, [X8+1688]
	239 Add X0, X19, 8
	240 Move X3, [X8]
	241 Add X1, X31, 0
	242 Move X2, X19
	243 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	244 Move X20, [X31+80]
	245 Move X19, [X31+88]
	246 Move X22, [X31+64]
	247 Move X21, [X31+72]
	248 Move X24, [X31+48]
	249 Move X23, [X31+56]
	250 Move X26, [X31+32]
	251 Move X25, [X31+40]
	252 Move X30, [X31+16]
	253 Add X31, X31, 96
	254 Return 
	255 Call 0x1C17F20
	256 Call 0x1C17F20
	257 Call 0x1C17F20
	258 Call 0x1C17F20
	259 Move X0, 0xB06000
	260 Move X0, [X0+1456]
	261 Call 0x1C17D08
	262 Call 0x1C17F10
	263 Move X20, X0
	264 Move X1, X31
	265 Call InvalidOperationException..ctor, X0
	266 Move X0, 0xB4C000
	267 Move X0, [X0+1728]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Call 0x1C17DEC
	272 Call 0x1C17F20
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Move X20, X0
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X0, X20
	280 Call 0x3EB2AD0
	281 Move X20, X0
	282 Move X0, 0xB06000
	283 Move X0, [X0+2000]
	284 Call 0x1C17D08
	285 Move X8, [X20]
	286 Move X1, [X8]
	287 Call 0x1C18270
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfNotEqual {312}
	292 Move X20, [X20]
	293 Call 0x3EB2AE0
	294 Move TEMP, 1
	295 Not TEMP
	296 Move W8, TEMP
	297 Move [X19+8], W8
	298 Move X0, 0xB35000
	299 Move X0, [X0+3488]
	300 Call 0x1C17D08
	301 Move W8, [X0+224]
	302 Compare W8, 0
	303 JumpIfNotEqual {305}
	304 Call 0x1C17DFC
	305 Move X0, 0xB35000
	306 Move X0, [X0+3648]
	307 Call 0x1C17D08
	308 Move X2, X0
	309 Move X0, X19
	310 Move X1, X20
	311 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	312 Move W0, 8
	313 Call 0x3EB2AF0
	314 Move X8, [X20]
	315 Move [X0], X8
	316 Move X1, 0x8C7000
	317 Add X1, X1, 3672
	318 Move X2, X31
	319 Call 0x3EB2B00
	320 Move X20, X0
	321 Call 0x3EB2AE0
	322 Move X0, X20
	323 Call 0x1D2D690
	324 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035EE84C ADRP X0, 0xB4B000
	0x035EE850 LDR X0, [X0 + 0x798]
	0x035EE854 BL 0x1C16CF4
	0x035EE858 ADRP X0, 0xB4B000
	0x035EE85C LDR X0, [X0 + 0x7A0]
	0x035EE860 BL 0x1C16CF4
	0x035EE864 ADRP X0, 0xB0D000
	0x035EE868 LDR X0, [X0 + 0x5C8]
	0x035EE86C BL 0x1C16CF4
	0x035EE870 ADRP X0, 0xB05000
	0x035EE874 LDR X0, [X0 + 0x6C0]
	0x035EE878 BL 0x1C16CF4
	0x035EE87C MOVZ W8, 0x1
	0x035EE880 STRB W8, [X19 + 0x2CF]
	0x035EE884 LDR X0, [X23]
	0x035EE888 STP X31, X31, [X31 + 0x8]
	0x035EE88C LDR W8, [X0 + 0xE0]
	0x035EE890 CBNZ W8, 0x35EE89C
	0x035EE894 BL 0x1C16DFC
	0x035EE898 LDR X0, [X23]
	0x035EE89C LDR X8, [X0 + 0xB8]
	0x035EE8A0 LDR X19, [X8]
	0x035EE8A4 STRB W31, [X31 + 0x1C]
	0x035EE8A8 ADD X1, X31, 0x1C
	0x035EE8AC MOV X0, X19
	0x035EE8B0 MOV X2, X31
	0x035EE8B4 BL 0x33DE64C
	0x035EE8B8 LDR X0, [X23]
	0x035EE8BC LDR W8, [X0 + 0xE0]
	0x035EE8C0 CBNZ W8, 0x35EE8C8
	0x035EE8C4 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDF3000
	007 Move X21, 0xB35000
	008 Move W8, [X22+710]
	009 Move X21, [X21+3488]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB35000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xB35000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+710], W8
	024 Move X0, [X21]
	025 Move X21, 0xB35000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3656]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Int32>.SetStateMachine, X0, X1
	040 Return 

