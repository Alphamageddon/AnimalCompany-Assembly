Type: Mono.Net.Security.AsyncProtocolRequest/<ProcessOperation>d__24

Method: System.Void MoveNext()

Disassembly:
	0x035E954C BL 0x1C16D08
	0x035E9550 LDR X8, [X21]
	0x035E9554 LDR X1, [X8]
	0x035E9558 BL 0x1C17270
	0x035E955C TBZ X0, 0x0, 0x35E95B4
	0x035E9560 LDR X21, [X21]
	0x035E9564 BL 0x3EB1AE0
	0x035E9568 ADRP X0, 0xB50000
	0x035E956C LDR X0, [X0 + 0x318]
	0x035E9570 BL 0x1C16D08
	0x035E9574 LDR W8, [X0 + 0xE0]
	0x035E9578 CBNZ W8, 0x35E9580
	0x035E957C BL 0x1C16DFC
	0x035E9580 MOV X0, X21
	0x035E9584 BL 0x35E8A68
	0x035E9588 MOV X1, X31
	0x035E958C BL 0x32C2380
	0x035E9590 MOV X1, X0
	0x035E9594 ADD X0, X20, 0x40
	0x035E9598 MOV X2, X31
	0x035E959C BL 0x1C24138
	0x035E95A0 MOV X0, X20
	0x035E95A4 MOV X1, X31
	0x035E95A8 BL 0x32F02B8
	0x035E95AC MOV X0, X21
	0x035E95B0 BL 0x1C16F18
	0x035E95B4 MOVZ W0, 0x8
	0x035E95B8 BL 0x3EB1AF0
	0x035E95BC LDR X8, [X21]
	0x035E95C0 STR X8, [X0]
	0x035E95C4 ADRP X1, 0x8CB000
	0x035E95C8 ADD X1, X1, 0xE58
	0x035E95CC MOV X2, X31
	0x035E95D0 BL 0x3EB1B00
	0x035E95D4 B 0x35E95FC
	0x035E95D8 B 0x35E95FC
	0x035E95DC B 0x35E95FC
	0x035E95E0 B 0x35E95FC
	0x035E95E4 MOV X22, X1
	0x035E95E8 MOV X21, X0
	0x035E95EC BL 0x3EB1AE0
	0x035E95F0 B 0x35E9604
	0x035E95F4 B 0x35E95FC
	0x035E95F8 B 0x35E95FC
	0x035E95FC MOV X22, X1
	0x035E9600 MOV X21, X0
	0x035E9604 CMP W22, 0x1
	0x035E9608 B.NE 0x35E9624
	0x035E960C MOV X0, X21
	0x035E9610 BL 0x3EB1AD0
	0x035E9614 LDR X20, [X0]
	0x035E9618 BL 0x3EB1AE0
	0x035E961C MOV W21, W31
	0x035E9620 B 0x35E93AC
	0x035E9624 MOV X20, X31
	0x035E9628 B 0x35E9630
	0x035E962C MOV X21, X0
	0x035E9630 LDRB W8, [X31 + 0xC]
	0x035E9634 CBZ W8, 0x35E9644
	0x035E9638 MOV X0, X19
	0x035E963C MOV X1, X31
	0x035E9640 BL 0x33E14E4
	0x035E9644 CBNZ X20, 0x35E9650
	0x035E9648 MOV X0, X21
	0x035E964C BL 0x1D2C690
	0x035E9650 MOV X0, X20
	0x035E9654 BL 0x1C16F18
	0x035E9658 BL 0x1990590
	0x035E965C LDR X0, [X0 + 0x38]
	0x035E9660 RET
	0x035E9664 LDR W0, [X0 + 0x40]
	0x035E9668 RET
	0x035E966C STR W1, [X0 + 0x40]
	0x035E9670 RET
	0x035E9674 STR X30, [X31 - 0x50]!
	0x035E9678 STP X26, X25, [X31 + 0x10]
	0x035E967C STP X24, X23, [X31 + 0x20]
	0x035E9680 STP X22, X21, [X31 + 0x30]
	0x035E9684 STP X20, X19, [X31 + 0x40]
	0x035E9688 ADRP X26, 0xDF7000
	0x035E968C ADRP X25, 0xB50000
	0x035E9690 LDRB W8, [X26 + 0x2A7]
	0x035E9694 LDR X25, [X25 + 0x4E8]
	0x035E9698 MOV W19, W5
	0x035E969C MOV W21, W4
	0x035E96A0 MOV X22, X3
	0x035E96A4 MOV W24, W2
	0x035E96A8 MOV X23, X1
	0x035E96AC MOV X20, X0
	0x035E96B0 TBNZ X8, 0x0, 0x35E96C8
	0x035E96B4 ADRP X0, 0xB50000
	0x035E96B8 LDR X0, [X0 + 0x4E8]
	0x035E96BC BL 0x1C16CF4
	0x035E96C0 MOVZ W8, 0x1
	0x035E96C4 STRB W8, [X26 + 0x2A7]
	0x035E96C8 AND W2, W24, 0x1
	0x035E96CC MOV X0, X20
	0x035E96D0 MOV X1, X23
	0x035E96D4 BL 0x35E7CAC
	0x035E96D8 LDR X0, [X25]
	0x035E96DC BL 0x1C16F10
	0x035E96E0 MOV X1, X22
	0x035E96E4 MOV W2, W21
	0x035E96E8 MOV W3, W19
	0x035E96EC MOV X23, X0
	0x035E96F0 BL 0x35E7890
	0x035E96F4 STR X23, [X20 + 0x38]
	0x035E96F8 LDP X20, X19, [X31 + 0x40]
	0x035E96FC LDP X22, X21, [X31 + 0x30]
	0x035E9700 LDP X24, X23, [X31 + 0x20]
	0x035E9704 LDP X26, X25, [X31 + 0x10]
	0x035E9708 LDR X30, [X31], #0x50
	0x035E970C RET
	0x035E9710 STP X30, X21, [X31 - 0x20]!
	0x035E9714 STP X20, X19, [X31 + 0x10]
	0x035E9718 ADRP X21, 0xDF7000
	0x035E971C ADRP X20, 0xB50000
	0x035E9720 LDRB W8, [X21 + 0x2A8]
	0x035E9724 LDR X20, [X20 + 0x4F0]
	0x035E9728 MOV X19, X0
	0x035E972C TBNZ X8, 0x0, 0x35E9744
	0x035E9730 ADRP X0, 0xB50000
	0x035E9734 LDR X0, [X0 + 0x4F0]
	0x035E9738 BL 0x1C16CF4
	0x035E973C MOVZ W8, 0x1
	0x035E9740 STRB W8, [X21 + 0x2A8]
	0x035E9744 MOV X0, X19
	0x035E9748 BL 0x35E7C78
	0x035E974C LDR X8, [X20]
	0x035E9750 LDR X2, [X19 + 0x38]
	0x035E9754 LDP X20, X19, [X31 + 0x10]
	0x035E9758 MOV X1, X0
	0x035E975C MOV X0, X8
	0x035E9760 MOV X3, X31
	0x035E9764 LDP X30, X21, [X31], #0x20
	0x035E9768 B 0x3227BD4
	0x035E976C AND W2, W2, 0x1
	0x035E9770 B 0x35E9674
	0x035E9774 STP X30, X19, [X31 - 0x10]!
	0x035E9778 MOV X19, X0
	0x035E977C LDR X0, [X0 + 0x10]
	0x035E9780 CBZ X0, 0x35E97D8
	0x035E9784 LDR X1, [X19 + 0x38]
	0x035E9788 BL 0x35E97DC
	0x035E978C TBNZ X0, 0x1F, 0x35E97C4
	0x035E9790 LDR W8, [X19 + 0x40]
	0x035E9794 LDR X9, [X19 + 0x38]
	0x035E9798 ADD W8, W8, W0
	0x035E979C STR W8, [X19 + 0x40]
	0x035E97A0 CBZ X9, 0x35E97D8
	0x035E97A4 LDP W10, W11, [X9 + 0x18]
	0x035E97A8 ADD W10, W10, W0
	0x035E97AC SUB W11, W11, W0
	0x035E97B0 STP W10, W11, [X9 + 0x18]
	0x035E97B4 TBZ X0, 0x0, 0x35E97C8
	0x035E97B8 CBNZ W8, 0x35E97C8
	0x035E97BC MOVZ W0, 0x1
	0x035E97C0 B 0x35E97D0
	0x035E97C4 MOVN W8, 0x0
	0x035E97C8 STR W8, [X19 + 0x1C]
	0x035E97CC MOVZ W0, 0x3
	0x035E97D0 LDP X30, X19, [X31], #0x10
	0x035E97D4 RET
	0x035E97D8 BL 0x1C16F20
	0x035E97DC STR X30, [X31 - 0x30]!
	0x035E97E0 STP X22, X21, [X31 + 0x10]
	0x035E97E4 STP X20, X19, [X31 + 0x20]
	0x035E97E8 LDR X19, [X0 + 0x70]
	0x035E97EC MOV X21, X1
	0x035E97F0 MOV X20, X0
	0x035E97F4 STRB W31, [X31 + 0xC]
	0x035E97F8 ADD X1, X31, 0xC
	0x035E97FC MOV X0, X19
	0x035E9800 MOV X2, X31
	0x035E9804 BL 0x33DE64C
	0x035E9808 LDR W8, [X20 + 0x80]
	0x035E980C CMP W8, 0x2
	0x035E9810 B.NE 0x35E9890
	0x035E9814 MOVZ W8, 0x4
	0x035E9818 STR W8, [X20 + 0x80]
	0x035E981C CBZ X21, 0x35E98C0
	0x035E9820 LDR X0, [X20 + 0x38]
	0x035E9824 CBZ X0, 0x35E98C4
	0x035E9828 LDR X8, [X0]
	0x035E982C LDR X1, [X21 + 0x10]
	0x035E9830 LDP W2, W3, [X21 + 0x18]
	0x035E9834 LDP X9, X4, [X8 + 0x1E8]
	0x035E9838 BLR X9
	0x035E983C MOV X21, X0
	0x035E9840 LDR X0, [X20 + 0x40]
	0x035E9844 CBZ X0, 0x35E9850
	0x035E9848 MOV X1, X31
	0x035E984C BL 0x32C2440
	0x035E9850 MOVZ W8, 0x2
	0x035E9854 MOV X22, X31
	0x035E9858 STR W8, [X20 + 0x80]
	0x035E985C LDRB W8, [X31 + 0xC]
	0x035E9860 CBZ W8, 0x35E9870
	0x035E9864 MOV X0, X19
	0x035E9868 MOV X1, X31
	0x035E986C BL 0x33E14E4
	0x035E9870 CBNZ X22, 0x35E9888
	0x035E9874 MOV X0, X21
	0x035E9878 LDP X20, X19, [X31 + 0x20]
	0x035E987C LDP X22, X21, [X31 + 0x10]
	0x035E9880 LDR X30, [X31], #0x30
	0x035E9884 RET
	0x035E9888 MOV X0, X22
	0x035E988C BL 0x1C16F18
	0x035E9890 ADRP X0, 0xB50000
	0x035E9894 LDR X0, [X0 + 0x318]
	0x035E9898 BL 0x1C16D08
	0x035E989C LDR W8, [X0 + 0xE0]
	0x035E98A0 CBNZ W8, 0x35E98A8
	0x035E98A4 BL 0x1C16DFC
	0x035E98A8 BL 0x35EAC5C
	0x035E98AC ADRP X0, 0xB50000
	0x035E98B0 LDR X0, [X0 + 0x4F8]
	0x035E98B4 BL 0x1C16D08
	0x035E98B8 MOV X1, X0
	0x035E98BC BL 0x1C16DEC
	0x035E98C0 BL 0x1C16F20
	0x035E98C4 BL 0x1C16F20
	0x035E98C8 B 0x35E98E0
	0x035E98CC B 0x35E98E0
	0x035E98D0 B 0x35E98E0
	0x035E98D4 B 0x35E98E0
	0x035E98D8 B 0x35E98E0
	0x035E98DC B 0x35E98E0
	0x035E98E0 MOV X21, X0
	0x035E98E4 CMP W1, 0x1
	0x035E98E8 B.NE 0x35E9904
	0x035E98EC MOV X0, X21
	0x035E98F0 BL 0x3EB1AD0
	0x035E98F4 LDR X22, [X0]
	0x035E98F8 BL 0x3EB1AE0
	0x035E98FC MOV X21, X31
	0x035E9900 B 0x35E985C
	0x035E9904 MOV X22, X31
	0x035E9908 B 0x35E9910
	0x035E990C MOV X21, X0
	0x035E9910 LDRB W8, [X31 + 0xC]
	0x035E9914 CBZ W8, 0x35E9924
	0x035E9918 MOV X0, X19
	0x035E991C MOV X1, X31
	0x035E9920 BL 0x33E14E4
	0x035E9924 CBNZ X22, 0x35E9930
	0x035E9928 MOV X0, X21
	0x035E992C BL 0x1D2C690
	0x035E9930 MOV X0, X22
	0x035E9934 BL 0x1C16F18
	0x035E9938 BL 0x1990590
	0x035E993C AND W2, W2, 0x1
	0x035E9940 B 0x35E9674
	0x035E9944 STP X30, X19, [X31 - 0x10]!
	0x035E9948 LDR X1, [X0 + 0x38]
	0x035E994C CBZ X1, 0x35E99B8
	0x035E9950 LDR W8, [X1 + 0x1C]
	0x035E9954 MOV X19, X0
	0x035E9958 CBZ W8, 0x35E999C
	0x035E995C LDR X0, [X19 + 0x10]
	0x035E9960 CBZ X0, 0x35E99B8
	0x035E9964 BL 0x35E99BC
	0x035E9968 TBNZ X0, 0x1F, 0x35E99A4
	0x035E996C LDR W8, [X19 + 0x40]
	0x035E9970 LDR X9, [X19 + 0x38]
	0x035E9974 ADD W8, W8, W0
	0x035E9978 STR W8, [X19 + 0x40]
	0x035E997C CBZ X9, 0x35E99B8
	0x035E9980 LDP W10, W11, [X9 + 0x18]
	0x035E9984 ADD W10, W10, W0
	0x035E9988 SUB W11, W11, W0
	0x035E998C STP W10, W11, [X9 + 0x18]
	0x035E9990 TBZ X0, 0x0, 0x35E99A8
	0x035E9994 MOVZ W0, 0x1
	0x035E9998 B 0x35E99B0
	0x035E999C LDR W8, [X19 + 0x40]
	0x035E99A0 B 0x35E99A8
	0x035E99A4 MOVN W8, 0x0
	0x035E99A8 STR W8, [X19 + 0x1C]
	0x035E99AC MOVZ W0, 0x3
	0x035E99B0 LDP X30, X19, [X31], #0x10
	0x035E99B4 RET
	0x035E99B8 BL 0x1C16F20
	0x035E99BC STR X30, [X31 - 0x30]!
	0x035E99C0 STP X22, X21, [X31 + 0x10]
	0x035E99C4 STP X20, X19, [X31 + 0x20]
	0x035E99C8 LDR X19, [X0 + 0x70]
	0x035E99CC MOV X21, X1
	0x035E99D0 MOV X20, X0
	0x035E99D4 STRB W31, [X31 + 0xC]
	0x035E99D8 ADD X1, X31, 0xC
	0x035E99DC MOV X0, X19
	0x035E99E0 MOV X2, X31
	0x035E99E4 BL 0x33DE64C
	0x035E99E8 LDR W8, [X20 + 0x80]
	0x035E99EC CMP W8, 0x2
	0x035E99F0 B.NE 0x35E9A70
	0x035E99F4 MOVZ W8, 0x5
	0x035E99F8 STR W8, [X20 + 0x80]
	0x035E99FC CBZ X21, 0x35E9AA0
	0x035E9A00 LDR X0, [X20 + 0x38]
	0x035E9A04 CBZ X0, 0x35E9AA4
	0x035E9A08 LDR X8, [X0]
	0x035E9A0C LDR X1, [X21 + 0x10]
	0x035E9A10 LDP W2, W3, [X21 + 0x18]
	0x035E9A14 LDP X9, X4, [X8 + 0x1F8]
	0x035E9A18 BLR X9
	0x035E9A1C MOV X21, X0
	0x035E9A20 LDR X0, [X20 + 0x40]
	0x035E9A24 CBZ X0, 0x35E9A30
	0x035E9A28 MOV X1, X31
	0x035E9A2C BL 0x32C2440
	0x035E9A30 MOVZ W8, 0x2
	0x035E9A34 MOV X22, X31
	0x035E9A38 STR W8, [X20 + 0x80]
	0x035E9A3C LDRB W8, [X31 + 0xC]
	0x035E9A40 CBZ W8, 0x35E9A50
	0x035E9A44 MOV X0, X19
	0x035E9A48 MOV X1, X31
	0x035E9A4C BL 0x33E14E4
	0x035E9A50 CBNZ X22, 0x35E9A68
	0x035E9A54 MOV X0, X21
	0x035E9A58 LDP X20, X19, [X31 + 0x20]
	0x035E9A5C LDP X22, X21, [X31 + 0x10]
	0x035E9A60 LDR X30, [X31], #0x30
	0x035E9A64 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xDF8000
	006 Move W8, [X20+675]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {44}
	012 Move X0, 0xB51000
	013 Move X0, [X0+1104]
	014 Call 0x1C17CF4
	015 Move X0, 0xB51000
	016 Move X0, [X0+1112]
	017 Call 0x1C17CF4
	018 Move X0, 0xB0E000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move X0, 0xB13000
	022 Move X0, [X0+2008]
	023 Call 0x1C17CF4
	024 Move X0, 0xB51000
	025 Move X0, [X0+1120]
	026 Call 0x1C17CF4
	027 Move X0, 0xB51000
	028 Move X0, [X0+1128]
	029 Call 0x1C17CF4
	030 Move X0, 0xB51000
	031 Move X0, [X0+1136]
	032 Call 0x1C17CF4
	033 Move X0, 0xB12000
	034 Move X0, [X0+1520]
	035 Call 0x1C17CF4
	036 Move X0, 0xB0E000
	037 Move X0, [X0+3832]
	038 Call 0x1C17CF4
	039 Move X0, 0xB51000
	040 Move X0, [X0+1144]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+675], W8
	044 Move [X31+16], X31
	045 Move [X31+24], X31
	046 Move [X31], X31
	047 Move [X31+8], X31
	048 Move W8, [X19]
	049 Move X20, [X19+40]
	050 Compare W8, 0
	051 JumpIfEqual {61}
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Move [X31], V0
	058 Move [X19+72], X31
	059 Move [X19+80], X31
	060 Move [X19], W8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Move [X31+1], V0
	066 Move [X19+56], X31
	067 Move [X19+64], X31
	068 Move [X19], W8
	069 Move W8, W31
	070 Move X8, 0xB13000
	071 Move X8, [X8+2008]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Add X0, X19, 32
	078 Move X1, X31
	079 Call CancellationToken.ThrowIfCancellationRequested, X0
	080 Compare X20, 0
	081 JumpIfEqual {231}
	082 Move X1, [X19+32]
	083 Move X0, X20
	084 Call AsyncProtocolRequest.InnerRead, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {232}
	087 Move X8, 0xB51000
	088 Move X8, [X8+1144]
	089 Move X2, [X8]
	090 Move W1, W31
	091 Call 0x2697BA8, X0, X1
	092 Move X8, 0xB51000
	093 Move X8, [X8+1136]
	094 Move [X31+16], X0
	095 Move [X31+24], X1
	096 Move X8, [X8]
	097 Add X0, X31, 16
	098 Move X1, X8
	099 Call 0x2999398, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {177}
	104 Move X8, 0xB51000
	105 Move X8, [X8+1128]
	106 Move X1, [X8]
	107 Add X0, X31, 16
	108 Call 0x29993E4, X0
	109 And W31, W0, 255
	110 Move X8, X0
	111 ShiftRight X8, 32
	112 And X8, X8, 0x7FFFFFFF
	113 Compare X8, 0
	114 JumpIfNotEqual {117}
	115 Move W8, 2
	116 Move [X19+48], W8
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {235}
	121 Move W1, [X19+48]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Compare X20, 0
	124 JumpIfEqual {217}
	125 Move X8, [X20]
	126 Move X9, [X8+376]
	127 Move X2, [X8+384]
	128 Move X0, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move [X19+52], W0
	131 Add X0, X20, 40
	132 Move W1, W31
	133 Move X2, X31
	134 Call Interlocked.Exchange, X0, X1
	135 Compare W0, 0
	136 JumpIfEqual {160}
	137 Move X0, [X20+16]
	138 Compare X0, 0
	139 JumpIfEqual {234}
	140 Move W1, [X20+24]
	141 Move X2, [X19+32]
	142 Call MobileAuthenticatedStream.InnerWrite, X0, X1, X2
	143 Compare X0, 0
	144 JumpIfEqual {233}
	145 Move W1, W31
	146 Move X2, X31
	147 Call Task.ConfigureAwait, X0, X1
	148 Move [X31], X0
	149 Move [X31+8], X1
	150 Add X0, X31, 0
	151 Move X1, X31
	152 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {194}
	157 Add X0, X31, 0
	158 Move X1, X31
	159 Call ConfiguredTaskAwaiter.GetResult, X0
	160 Move W8, [X19+52]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X19+48], W8
	163 Move TEMP, 1
	164 Not TEMP
	165 Move W8, TEMP
	166 Move [X19+8], W8
	167 Move X8, 0xB0E000
	168 Move X8, [X8+640]
	169 Move X0, [X8]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X19
	175 Move X1, X31
	176 Call AsyncTaskMethodBuilder.SetResult, X0
	177 Move [X19], W31
	178 Move V0, [X31+1]
	179 Move X8, 0xB0E000
	180 Move [X19+56], V0
	181 Move X8, [X8+640]
	182 Move X0, [X8]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X8, 0xB51000
	188 Move X8, [X8+1104]
	189 Add X0, X19, 8
	190 Move X3, [X8]
	191 Add X1, X31, 16
	192 Move X2, X19
	193 Call 0x2186564, X0, X1, X2
	194 Move W8, 1
	195 Move [X19], W8
	196 Move V0, [X31]
	197 Move X8, 0xB0E000
	198 Move [X19+72], V0
	199 Move X8, [X8+640]
	200 Move X0, [X8]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X8, 0xB51000
	206 Move X8, [X8+1112]
	207 Add X0, X19, 8
	208 Move X3, [X8]
	209 Add X1, X31, 0
	210 Move X2, X19
	211 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	212 Move X20, [X31+48]
	213 Move X19, [X31+56]
	214 Move X30, [X31+32]
	215 Add X31, X31, 64
	216 Return 
	217 Call 0x1C17F20
	218 Move X0, 0xB0B000
	219 Move X0, [X0+1456]
	220 Call 0x1C17D08
	221 Call 0x1C17F10
	222 Move X20, X0
	223 Move X1, X31
	224 Call InvalidOperationException..ctor, X0
	225 Move X0, 0xB51000
	226 Move X0, [X0+1152]
	227 Call 0x1C17D08
	228 Move X1, X0
	229 Move X0, X20
	230 Call 0x1C17DEC
	231 Call 0x1C17F20
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Move X0, 0xB39000
	236 Move X0, [X0+1960]
	237 Call 0x1C17D08
	238 Call 0x1C17F10
	239 Move X20, X0
	240 Move X0, 0xB51000
	241 Move X0, [X0+1160]
	242 Call 0x1C17D08
	243 Move X1, X0
	244 Move X0, X20
	245 Move X2, X31
	246 Call IOException..ctor, X0, X1
	247 Move X0, 0xB51000
	248 Move X0, [X0+1152]
	249 Call 0x1C17D08
	250 Move X1, X0
	251 Move X0, X20
	252 Call 0x1C17DEC
	253 Move X20, X0
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X0, X20
	256 Call 0x3EB2AD0
	257 Move X20, X0
	258 Move X0, 0xB0B000
	259 Move X0, [X0+2000]
	260 Call 0x1C17D08
	261 Move X8, [X20]
	262 Move X1, [X8]
	263 Call 0x1C18270
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {286}
	268 Move X20, [X20]
	269 Call 0x3EB2AE0
	270 Move X0, 0xB51000
	271 Move X0, [X0+792]
	272 Call 0x1C17D08
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X0, X20
	278 Call MobileAuthenticatedStream.GetSSPIException, X0
	279 Move X20, X0
	280 Move X0, 0xB51000
	281 Move X0, [X0+1152]
	282 Call 0x1C17D08
	283 Move X1, X0
	284 Move X0, X20
	285 Call 0x1C17DEC
	286 Move W0, 8
	287 Call 0x3EB2AF0
	288 Move X8, [X20]
	289 Move [X0], X8
	290 Move X1, 0x8CC000
	291 Add X1, X1, 3672
	292 Move X2, X31
	293 Call 0x3EB2B00
	294 Move X20, X0
	295 Move [X31+40], X1
	296 Move X20, X0
	297 Move [X31+40], X1
	298 Call 0x3EB2AE0
	299 Move X1, [X31+40]
	300 Move X20, X0
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X0, X20
	303 Call 0x3EB2AD0
	304 Move X20, X0
	305 Move X0, 0xB0B000
	306 Move X0, [X0+2000]
	307 Call 0x1C17D08
	308 Move X8, [X20]
	309 Move X1, [X8]
	310 Call 0x1C18270
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {332}
	315 Move X20, [X20]
	316 Call 0x3EB2AE0
	317 Move TEMP, 1
	318 Not TEMP
	319 Move W8, TEMP
	320 Move [X19+8], W8
	321 Move X0, 0xB0E000
	322 Move X0, [X0+640]
	323 Call 0x1C17D08
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X0, X19
	329 Move X1, X20
	330 Move X2, X31
	331 Call AsyncTaskMethodBuilder.SetException, X0, X1
	332 Move W0, 8
	333 Call 0x3EB2AF0
	334 Move X8, [X20]
	335 Move [X0], X8
	336 Move X1, 0x8CC000
	337 Add X1, X1, 3672
	338 Move X2, X31
	339 Call 0x3EB2B00
	340 Move X20, X0
	341 Call 0x3EB2AE0
	342 Move X0, X20
	343 Call 0x1D2D690
	344 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035E9CDC CBNZ X23, 0x35E9D00
	0x035E9CE0 ADRP X8, 0xB50000
	0x035E9CE4 LDR X8, [X8 + 0x378]
	0x035E9CE8 LDR X0, [X8]
	0x035E9CEC LDR W8, [X0 + 0xE0]
	0x035E9CF0 CBNZ W8, 0x35E9CF8
	0x035E9CF4 BL 0x1C16DFC
	0x035E9CF8 BL 0x35E9EEC
	0x035E9CFC MOV X23, X0
	0x035E9D00 STP X20, X23, [X19 + 0x18]
	0x035E9D04 STR X21, [X19 + 0x38]
	0x035E9D08 CBZ X22, 0x35E9D38
	0x035E9D0C ADRP X8, 0xB50000
	0x035E9D10 LDR X8, [X8 + 0x528]
	0x035E9D14 ADRP X23, 0xB50000
	0x035E9D18 LDR X0, [X8]
	0x035E9D1C LDR X23, [X23 + 0x520]
	0x035E9D20 BL 0x1C16F10
	0x035E9D24 LDR X2, [X23]
	0x035E9D28 MOV X1, X22
	0x035E9D2C MOV X23, X0
	0x035E9D30 BL 0x2850290
	0x035E9D34 STR X23, [X19 + 0x10]
	0x035E9D38 CBZ X20, 0x35E9D7C
	0x035E9D3C MOV X0, X20
	0x035E9D40 BL 0x35EA004

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDF8000
	007 Move X22, 0xB0E000
	008 Move W8, [X21+676]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB0E000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+676], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

