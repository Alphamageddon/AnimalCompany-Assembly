Type: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67

Method: System.Void MoveNext()

Disassembly:
	0x035EE8C8 BL 0x35EE460
	0x035EE8CC LDR X8, [X23]
	0x035EE8D0 LDR X8, [X8 + 0xB8]
	0x035EE8D4 LDR X0, [X8 + 0x18]
	0x035EE8D8 CBZ X0, 0x35EEAD8
	0x035EE8DC ADRP X8, 0xB4B000
	0x035EE8E0 LDR X8, [X8 + 0x778]
	0x035EE8E4 LDR X3, [X8]
	0x035EE8E8 ADD X2, X31, 0x10
	0x035EE8EC MOV X1, X20
	0x035EE8F0 BL 0x2AA6B2C
	0x035EE8F4 TBZ X0, 0x0, 0x35EEA38
	0x035EE8F8 LDR X0, [X23]
	0x035EE8FC LDR W8, [X0 + 0xE0]
	0x035EE900 CBNZ W8, 0x35EE90C
	0x035EE904 BL 0x1C16DFC
	0x035EE908 LDR X0, [X23]
	0x035EE90C LDR X8, [X31 + 0x10]
	0x035EE910 CBZ X8, 0x35EEB30
	0x035EE914 LDR X9, [X0 + 0xB8]
	0x035EE918 LDR X0, [X9 + 0x20]
	0x035EE91C CBZ X0, 0x35EEB34
	0x035EE920 LDP X1, X2, [X8 + 0x10]
	0x035EE924 ADRP X8, 0xB4B000
	0x035EE928 LDR X8, [X8 + 0x780]
	0x035EE92C LDR X4, [X8]
	0x035EE930 ADD X3, X31, 0x8
	0x035EE934 BL 0x29E7178
	0x035EE938 TBNZ X0, 0x0, 0x35EEA2C
	0x035EE93C LDR X8, [X31 + 0x10]
	0x035EE940 CBZ X8, 0x35EEB3C
	0x035EE944 ADRP X9, 0xB05000
	0x035EE948 LDR X9, [X9 + 0x6C0]
	0x035EE94C LDR X22, [X8 + 0x20]
	0x035EE950 LDR X0, [X9]
	0x035EE954 LDR W9, [X0 + 0xE0]
	0x035EE958 CBNZ W9, 0x35EE960
	0x035EE95C BL 0x1C16DFC
	0x035EE960 ADRP X8, 0xB0D000
	0x035EE964 ADRP X9, 0xB4B000
	0x035EE968 LDR X8, [X8 + 0x5C8]
	0x035EE96C LDR X9, [X9 + 0x790]
	0x035EE970 LDR X2, [X8]
	0x035EE974 LDR X3, [X9]
	0x035EE978 MOV X0, X22
	0x035EE97C MOV W1, W31
	0x035EE980 BL 0x1C170BC
	0x035EE984 MOV X22, X0
	0x035EE988 MOV X1, X31
	0x035EE98C MOV X2, X31
	0x035EE990 BL 0x3395194
	0x035EE994 AND W8, W0, W21, 0x0
	0x035EE998 TBNZ X8, 0x0, 0x35EEB40
	0x035EE99C MOVZ W1, 0x1
	0x035EE9A0 MOV X0, X22
	0x035EE9A4 MOV X2, X31
	0x035EE9A8 BL 0x33A7048
	0x035EE9AC CBZ X0, 0x35EEA74
	0x035EE9B0 ADRP X9, 0xB4B000
	0x035EE9B4 LDR X9, [X9 + 0x788]
	0x035EE9B8 LDR X8, [X0]
	0x035EE9BC LDR X1, [X9]
	0x035EE9C0 LDRB W10, [X8 + 0x130]
	0x035EE9C4 LDRB W9, [X1 + 0x130]
	0x035EE9C8 CMP W10, W9
	0x035EE9CC B.CC 0x35EEB38
	0x035EE9D0 LDR X8, [X8 + 0xC8]
	0x035EE9D4 ADD X8, X8, X9, 0x3, LSL
	0x035EE9D8 LDUR X8, [X8 - 0x8]
	0x035EE9DC CMP X8, X1
	0x035EE9E0 B.NE 0x35EEB38
	0x035EE9E4 LDR X8, [X23]
	0x035EE9E8 STR X0, [X31 + 0x8]
	0x035EE9EC LDR W9, [X8 + 0xE0]
	0x035EE9F0 CBNZ W9, 0x35EEA00
	0x035EE9F4 MOV X0, X8
	0x035EE9F8 BL 0x1C16DFC
	0x035EE9FC LDR X8, [X23]
	0x035EEA00 LDR X9, [X31 + 0x10]
	0x035EEA04 CBZ X9, 0x35EEB4C
	0x035EEA08 LDR X8, [X8 + 0xB8]
	0x035EEA0C LDR X0, [X8 + 0x20]
	0x035EEA10 CBZ X0, 0x35EEB50
	0x035EEA14 ADRP X8, 0xB4B000
	0x035EEA18 LDR X3, [X31 + 0x8]
	0x035EEA1C LDP X1, X2, [X9 + 0x10]
	0x035EEA20 LDR X8, [X8 + 0x718]
	0x035EEA24 LDR X4, [X8]
	0x035EEA28 BL 0x29E576C
	0x035EEA2C LDR X20, [X31 + 0x8]
	0x035EEA30 MOV X21, X31
	0x035EEA34 B 0x35EEA44
	0x035EEA38 TBNZ X21, 0x0, 0x35EEADC
	0x035EEA3C MOV X21, X31
	0x035EEA40 MOV X20, X31
	0x035EEA44 LDRB W8, [X31 + 0x1C]
	0x035EEA48 CBZ W8, 0x35EEA58
	0x035EEA4C MOV X0, X19
	0x035EEA50 MOV X1, X31
	0x035EEA54 BL 0x33E14E4
	0x035EEA58 CBNZ X21, 0x35EEAD0
	0x035EEA5C MOV X0, X20
	0x035EEA60 LDP X20, X19, [X31 + 0x40]
	0x035EEA64 LDP X22, X21, [X31 + 0x30]
	0x035EEA68 LDP X30, X23, [X31 + 0x20]
	0x035EEA6C ADD X31, X31, 0x50
	0x035EEA70 RET
	0x035EEA74 STR X31, [X31 + 0x8]
	0x035EEA78 TBZ X21, 0x0, 0x35EEA3C
	0x035EEA7C ADRP X0, 0xB4B000
	0x035EEA80 LDR X0, [X0 + 0x7A8]
	0x035EEA84 BL 0x1C16D08
	0x035EEA88 MOV X1, X20
	0x035EEA8C MOV X2, X31
	0x035EEA90 BL 0x321EFD0
	0x035EEA94 MOV X20, X0
	0x035EEA98 ADRP X0, 0xB05000
	0x035EEA9C LDR X0, [X0 + 0xB40]
	0x035EEAA0 BL 0x1C16D08
	0x035EEAA4 BL 0x1C16F10
	0x035EEAA8 MOV X21, X0
	0x035EEAAC MOV X1, X20
	0x035EEAB0 MOV X2, X31
	0x035EEAB4 BL 0x3379A44
	0x035EEAB8 ADRP X0, 0xB4B000
	0x035EEABC LDR X0, [X0 + 0x790]
	0x035EEAC0 BL 0x1C16D08
	0x035EEAC4 MOV X1, X0
	0x035EEAC8 MOV X0, X21
	0x035EEACC BL 0x1C16DEC
	0x035EEAD0 MOV X0, X21
	0x035EEAD4 BL 0x1C16F18
	0x035EEAD8 BL 0x1C16F20
	0x035EEADC ADRP X0, 0xB4B000
	0x035EEAE0 LDR X0, [X0 + 0x7A8]
	0x035EEAE4 BL 0x1C16D08
	0x035EEAE8 MOV X1, X20
	0x035EEAEC MOV X2, X31
	0x035EEAF0 BL 0x321EFD0
	0x035EEAF4 MOV X20, X0
	0x035EEAF8 ADRP X0, 0xB05000
	0x035EEAFC LDR X0, [X0 + 0xB40]
	0x035EEB00 BL 0x1C16D08
	0x035EEB04 BL 0x1C16F10
	0x035EEB08 MOV X21, X0
	0x035EEB0C MOV X1, X20
	0x035EEB10 MOV X2, X31
	0x035EEB14 BL 0x3379A44
	0x035EEB18 ADRP X0, 0xB4B000
	0x035EEB1C LDR X0, [X0 + 0x790]
	0x035EEB20 BL 0x1C16D08
	0x035EEB24 MOV X1, X0
	0x035EEB28 MOV X0, X21
	0x035EEB2C BL 0x1C16DEC
	0x035EEB30 BL 0x1C16F20
	0x035EEB34 BL 0x1C16F20
	0x035EEB38 BL 0x1C171E0
	0x035EEB3C BL 0x1C16F20
	0x035EEB40 LDR X20, [X31 + 0x10]
	0x035EEB44 CBNZ X20, 0x35EEB54
	0x035EEB48 BL 0x1C16F20
	0x035EEB4C BL 0x1C16F20
	0x035EEB50 BL 0x1C16F20
	0x035EEB54 ADRP X0, 0xB4B000
	0x035EEB58 LDR X0, [X0 + 0x7A0]
	0x035EEB5C BL 0x1C16D08
	0x035EEB60 LDR X20, [X20 + 0x20]
	0x035EEB64 ADRP X0, 0xB4B000
	0x035EEB68 LDR X0, [X0 + 0x7B0]
	0x035EEB6C BL 0x1C16D08
	0x035EEB70 MOV X1, X20
	0x035EEB74 MOV X2, X31
	0x035EEB78 BL 0x321EFD0
	0x035EEB7C MOV X20, X0
	0x035EEB80 ADRP X0, 0xB05000
	0x035EEB84 LDR X0, [X0 + 0xB40]
	0x035EEB88 BL 0x1C16D08
	0x035EEB8C BL 0x1C16F10
	0x035EEB90 MOV X21, X0
	0x035EEB94 MOV X1, X20
	0x035EEB98 MOV X2, X31
	0x035EEB9C BL 0x3379A44
	0x035EEBA0 ADRP X0, 0xB4B000
	0x035EEBA4 LDR X0, [X0 + 0x790]
	0x035EEBA8 BL 0x1C16D08
	0x035EEBAC MOV X1, X0
	0x035EEBB0 MOV X0, X21
	0x035EEBB4 BL 0x1C16DEC
	0x035EEBB8 B 0x35EECDC
	0x035EEBBC B 0x35EECDC
	0x035EEBC0 B 0x35EECDC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xDF3000
	008 Move W8, [X20+711]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xB07000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0xB4C000
	018 Move X0, [X0+1736]
	019 Call 0x1C17CF4
	020 Move X0, 0xB09000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xB0E000
	024 Move X0, [X0+2008]
	025 Call 0x1C17CF4
	026 Move X0, 0xB4C000
	027 Move X0, [X0+1744]
	028 Call 0x1C17CF4
	029 Move X0, 0xB07000
	030 Move X0, [X0+1976]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+711], W8
	034 Move [X31], X31
	035 Move [X31+8], X31
	036 Move X22, 0xB09000
	037 Move W8, [X19]
	038 Move X20, [X19+40]
	039 Move X22, [X22+640]
	040 Compare W8, 0
	041 JumpIfEqual {84}
	042 Move X8, 0xB0E000
	043 Move X8, [X8+2008]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X0, X19, 32
	050 Move X1, X31
	051 Call CancellationToken.ThrowIfCancellationRequested, X0
	052 Compare X20, 0
	053 JumpIfEqual {160}
	054 Move X8, [X20+104]
	055 Compare X8, 0
	056 JumpIfEqual {161}
	057 Move W3, [X8+28]
	058 Compare W3, 0
	059 JumpIfEqual {126}
	060 Move W9, [X19+48]
	061 Compare W9, 0
	062 JumpIfEqual {92}
	063 Move X8, 0xB07000
	064 Move X8, [X8+3696]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X8, 0xB4C000
	068 Move X8, [X8+1744]
	069 Move X21, X0
	070 Move X2, [X8]
	071 Move X1, X20
	072 Move X3, X31
	073 Call Action..ctor, X0, X1, X2
	074 Move X8, 0xB07000
	075 Move X8, [X8+1976]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X21
	082 Move X1, X31
	083 Call Task.Run, X0
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Move TEMP, 0
	086 Not TEMP
	087 Move W8, TEMP
	088 Move [X31], V0
	089 Move [X19+56], X31
	090 Move [X19+64], X31
	091 Move [X19], W8
	092 Move X0, [X20+40]
	093 Compare X0, 0
	094 JumpIfEqual {165}
	095 Move X1, [X8+16]
	096 Move W2, [X8+24]
	097 Move X4, X31
	098 Call Stream.WriteAsync, X0, X1, X2, X3
	099 Compare X0, 0
	100 JumpIfEqual {164}
	101 Move W1, W31
	102 Move X2, X31
	103 Call Task.ConfigureAwait, X0, X1
	104 Move [X31], X0
	105 Move [X31+8], X1
	106 Add X0, X31, 0
	107 Move X1, X31
	108 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {145}
	113 Add X0, X31, 0
	114 Move X1, X31
	115 Call ConfiguredTaskAwaiter.GetResult, X0
	116 Compare X20, 0
	117 JumpIfEqual {162}
	118 Move X8, [X20+104]
	119 Compare X8, 0
	120 JumpIfEqual {163}
	121 Move W10, [X8+28]
	122 Move W9, [X8+32]
	123 Move [X8+24], X31
	124 Add W9, W10, W9
	125 Move [X8+32], W9
	126 Move TEMP, 1
	127 Not TEMP
	128 Move W8, TEMP
	129 Move [X19+8], W8
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X19
	136 Move X1, X31
	137 Call AsyncTaskMethodBuilder.SetResult, X0
	138 Move X20, [X31+48]
	139 Move X19, [X31+56]
	140 Move X22, [X31+32]
	141 Move X21, [X31+40]
	142 Move X30, [X31+16]
	143 Add X31, X31, 64
	144 Return 
	145 Move [X19], W31
	146 Move V0, [X31]
	147 Move [X19+56], V0
	148 Move X0, [X22]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X8, 0xB4C000
	154 Move X8, [X8+1736]
	155 Add X0, X19, 8
	156 Move X3, [X8]
	157 Add X1, X31, 0
	158 Move X2, X19
	159 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 Call 0x1C17F20
	163 Call 0x1C17F20
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Move X20, X0
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, X20
	169 Call 0x3EB2AD0
	170 Move X20, X0
	171 Move X0, 0xB06000
	172 Move X0, [X0+2000]
	173 Call 0x1C17D08
	174 Move X8, [X20]
	175 Move X1, [X8]
	176 Call 0x1C18270
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {198}
	181 Move X20, [X20]
	182 Call 0x3EB2AE0
	183 Move TEMP, 1
	184 Not TEMP
	185 Move W8, TEMP
	186 Move [X19+8], W8
	187 Move X0, 0xB09000
	188 Move X0, [X0+640]
	189 Call 0x1C17D08
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X0, X19
	195 Move X1, X20
	196 Move X2, X31
	197 Call AsyncTaskMethodBuilder.SetException, X0, X1
	198 Move W0, 8
	199 Call 0x3EB2AF0
	200 Move X8, [X20]
	201 Move [X0], X8
	202 Move X1, 0x8C7000
	203 Add X1, X1, 3672
	204 Move X2, X31
	205 Call 0x3EB2B00
	206 Move X20, X0
	207 Call 0x3EB2AE0
	208 Move X0, X20
	209 Call 0x1D2D690
	210 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035EEBC4 B 0x35EECDC
	0x035EEBC8 B 0x35EECDC
	0x035EEBCC B 0x35EECDC
	0x035EEBD0 B 0x35EECDC
	0x035EEBD4 B 0x35EECDC
	0x035EEBD8 B 0x35EECDC
	0x035EEBDC B 0x35EECDC
	0x035EEBE0 B 0x35EECDC
	0x035EEBE4 B 0x35EECDC
	0x035EEBE8 B 0x35EECDC
	0x035EEBEC B 0x35EECDC
	0x035EEBF0 B 0x35EECDC
	0x035EEBF4 B 0x35EECDC
	0x035EEBF8 B 0x35EECDC
	0x035EEBFC B 0x35EECDC
	0x035EEC00 MOV X21, X1
	0x035EEC04 CMP W21, 0x1
	0x035EEC08 MOV X20, X0
	0x035EEC0C B.NE 0x35EECE4
	0x035EEC10 MOV X0, X20
	0x035EEC14 BL 0x3EB1AD0
	0x035EEC18 MOV X20, X0
	0x035EEC1C ADRP X0, 0xB05000
	0x035EEC20 LDR X0, [X0 + 0x7D0]
	0x035EEC24 BL 0x1C16D08
	0x035EEC28 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDF3000
	007 Move X22, 0xB09000
	008 Move W8, [X21+712]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB09000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+712], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

