Type: Mono.Net.Security.AsyncReadOrWriteRequest

Method: Mono.Net.Security.BufferOffsetSize get_UserBuffer()

Disassembly:
	0x035EA65C LDR X2, [X27]
	0x035EA660 ADD X0, X31, 0x18

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Int32 get_CurrentSize()

Disassembly:
	0x035EA664 MOV W1, W20
	0x035EA668 STR X31, [X31 + 0x18]

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_CurrentSize(System.Int32 value)

Disassembly:
	0x035EA66C BL 0x24345B8
	0x035EA670 LDR X0, [X26]

ISIL:
	001 Move [X0+64], W1
	002 Return 

Method: System.Void .ctor(Mono.Net.Security.MobileAuthenticatedStream parent, System.Boolean sync, System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x035EA674 BL 0x1C16F10
	0x035EA678 LDR X4, [X31 + 0x18]
	0x035EA67C MOV X20, X0
	0x035EA680 AND W1, W19, 0x1
	0x035EA684 AND W2, W21, 0x1
	0x035EA688 MOV W3, W31
	0x035EA68C B 0x35EA7A0
	0x035EA690 MOV X24, X31
	0x035EA694 ADRP X10, 0xB4F000
	0x035EA698 LDR X10, [X10 + 0x560]
	0x035EA69C LDRH W9, [X8 + 0x12E]
	0x035EA6A0 LDR X1, [X10]
	0x035EA6A4 CBZ X9, 0x35EA6C8
	0x035EA6A8 LDR X10, [X8 + 0xB0]
	0x035EA6AC ADD X10, X10, 0x8
	0x035EA6B0 LDUR X11, [X10 - 0x8]
	0x035EA6B4 CMP X11, X1
	0x035EA6B8 B.EQ 0x35EA6D8
	0x035EA6BC SUBS X9, X9, 0x1
	0x035EA6C0 ADD X10, X10, 0x10
	0x035EA6C4 B.NE 0x35EA6B0
	0x035EA6C8 MOV X0, X25
	0x035EA6CC MOV W2, W31
	0x035EA6D0 BL 0x1C5C788
	0x035EA6D4 B 0x35EA6E4
	0x035EA6D8 LDRSW X9, [X10]
	0x035EA6DC ADD X8, X8, X9, 0x4, LSL
	0x035EA6E0 ADD X0, X8, 0x138
	0x035EA6E4 LDP X8, X5, [X0]
	0x035EA6E8 MOV X0, X25
	0x035EA6EC MOV X1, X24
	0x035EA6F0 MOV X2, X20
	0x035EA6F4 MOV X3, X23
	0x035EA6F8 MOV W4, W22
	0x035EA6FC BLR X8
	0x035EA700 TBZ X0, 0x0, 0x35EA710
	0x035EA704 MOV W22, W31
	0x035EA708 MOVZ W23, 0x1
	0x035EA70C B 0x35EA74C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xDF7000
	011 Move X25, 0xB50000
	012 Move W8, [X26+679]
	013 Move X25, [X25+1256]
	014 Move W19, W5
	015 Move W21, W4
	016 Move X22, X3
	017 Move W24, W2
	018 Move X23, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xB50000
	025 Move X0, [X0+1256]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+679], W8
	029 And W2, W24, 1
	030 Move X0, X20
	031 Move X1, X23
	032 Call AsyncProtocolRequest..ctor, X0, X1, X2
	033 Move X0, [X25]
	034 Call 0x1C17F10
	035 Move X1, X22
	036 Move W2, W21
	037 Move W3, W19
	038 Move X23, X0
	039 Call BufferOffsetSize..ctor, X0, X1, X2, X3
	040 Move [X20+56], X23
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X22, [X31+48]
	044 Move X21, [X31+56]
	045 Move X24, [X31+32]
	046 Move X23, [X31+40]
	047 Move X26, [X31+16]
	048 Move X25, [X31+24]
	049 Move X30, [X31+80]
	050 Return 

Method: System.String ToString()

Disassembly:
	0x035EA710 LDR X9, [X25]
	0x035EA714 LDR X8, [X28]
	0x035EA718 LDRB W11, [X9 + 0x130]
	0x035EA71C LDRB W10, [X8 + 0x130]
	0x035EA720 CMP W11, W10
	0x035EA724 B.CS 0x35EA734
	0x035EA728 MOV W23, W31
	0x035EA72C MOVZ W22, 0x1
	0x035EA730 B 0x35EA74C
	0x035EA734 LDR X9, [X9 + 0xC8]
	0x035EA738 MOV W23, W31
	0x035EA73C ADD X9, X9, X10, 0x3, LSL
	0x035EA740 LDUR X9, [X9 - 0x8]
	0x035EA744 CMP X9, X8
	0x035EA748 CSET W22, NE
	0x035EA74C LDR X8, [X19 + 0x28]
	0x035EA750 CBZ X8, 0x35EA770
	0x035EA754 LDR W3, [X31 + 0x2C]
	0x035EA758 LDR X2, [X21]
	0x035EA75C MOV X0, X19
	0x035EA760 MOV X1, X20
	0x035EA764 BL 0x35EA7DC
	0x035EA768 MOV W23, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDF7000
	006 Move X20, 0xB50000
	007 Move W8, [X21+680]
	008 Move X20, [X20+1264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB50000
	015 Move X0, [X0+1264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+680], W8
	019 Move X0, X19
	020 Call AsyncProtocolRequest.get_Name, X0
	021 Move X8, [X20]
	022 Move X2, [X19+56]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X1, X0
	026 Move X0, X8
	027 Move X3, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call String.Format, X0, X1, X2
	031 Return X0

