Type: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__57

Method: System.Void MoveNext()

Disassembly:
	0x035EDB34 MOV X20, X0
	0x035EDB38 ADRP X0, 0xB06000
	0x035EDB3C LDR X0, [X0 + 0x7D0]
	0x035EDB40 BL 0x1C16D08
	0x035EDB44 LDR X8, [X20]
	0x035EDB48 LDR X1, [X8]
	0x035EDB4C BL 0x1C17270
	0x035EDB50 TBZ X0, 0x0, 0x35EDB90
	0x035EDB54 LDR X20, [X20]
	0x035EDB58 BL 0x3EB1AE0
	0x035EDB5C MOVN W8, 0x1
	0x035EDB60 STR W8, [X19], #0x8
	0x035EDB64 ADRP X0, 0xB09000
	0x035EDB68 LDR X0, [X0 + 0x280]
	0x035EDB6C BL 0x1C16D08
	0x035EDB70 LDR W8, [X0 + 0xE0]
	0x035EDB74 CBNZ W8, 0x35EDB7C
	0x035EDB78 BL 0x1C16DFC
	0x035EDB7C MOV X0, X19
	0x035EDB80 MOV X1, X20
	0x035EDB84 MOV X2, X31
	0x035EDB88 BL 0x32C4908
	0x035EDB8C B 0x35EDA84
	0x035EDB90 MOVZ W0, 0x8
	0x035EDB94 BL 0x3EB1AF0
	0x035EDB98 LDR X8, [X20]
	0x035EDB9C STR X8, [X0]
	0x035EDBA0 ADRP X1, 0x8C7000
	0x035EDBA4 ADD X1, X1, 0xE58
	0x035EDBA8 MOV X2, X31
	0x035EDBAC BL 0x3EB1B00
	0x035EDBB0 MOV X20, X0
	0x035EDBB4 BL 0x3EB1AE0
	0x035EDBB8 MOV X0, X20
	0x035EDBBC BL 0x1D2C690
	0x035EDBC0 BL 0x1990590
	0x035EDBC4 STR X30, [X31 - 0x30]!
	0x035EDBC8 STP X22, X21, [X31 + 0x10]
	0x035EDBCC STP X20, X19, [X31 + 0x20]
	0x035EDBD0 ADRP X21, 0xDF3000
	0x035EDBD4 ADRP X22, 0xB09000
	0x035EDBD8 LDRB W8, [X21 + 0x2C8]
	0x035EDBDC LDR X22, [X22 + 0x280]
	0x035EDBE0 MOV X19, X1
	0x035EDBE4 MOV X20, X0
	0x035EDBE8 TBNZ X8, 0x0, 0x35EDC00
	0x035EDBEC ADRP X0, 0xB09000
	0x035EDBF0 LDR X0, [X0 + 0x280]
	0x035EDBF4 BL 0x1C16CF4
	0x035EDBF8 MOVZ W8, 0x1
	0x035EDBFC STRB W8, [X21 + 0x2C8]
	0x035EDC00 LDR X0, [X22]
	0x035EDC04 LDR W8, [X0 + 0xE0]
	0x035EDC08 CBNZ W8, 0x35EDC10
	0x035EDC0C BL 0x1C16DFC
	0x035EDC10 ADD X0, X20, 0x8
	0x035EDC14 MOV X1, X19
	0x035EDC18 LDP X20, X19, [X31 + 0x20]
	0x035EDC1C LDP X22, X21, [X31 + 0x10]
	0x035EDC20 MOV X2, X31
	0x035EDC24 LDR X30, [X31], #0x30
	0x035EDC28 B 0x32C477C
	0x035EDC2C LDR X0, [X0 + 0x20]
	0x035EDC30 RET
	0x035EDC34 LDRB W0, [X0 + 0x28]
	0x035EDC38 RET
	0x035EDC3C LDR X0, [X0 + 0x30]
	0x035EDC40 RET
	0x035EDC44 LDR X0, [X0 + 0x38]
	0x035EDC48 RET
	0x035EDC4C LDRB W0, [X0 + 0x40]
	0x035EDC50 RET
	0x035EDC54 LDR X0, [X0 + 0x48]
	0x035EDC58 RET
	0x035EDC5C LDR X0, [X0 + 0x50]
	0x035EDC60 RET
	0x035EDC64 STR X1, [X0 + 0x50]
	0x035EDC68 RET
	0x035EDC6C RET
	0x035EDC70 STP X30, X21, [X31 - 0x20]!
	0x035EDC74 STP X20, X19, [X31 + 0x10]
	0x035EDC78 LDR X8, [X0]
	0x035EDC7C MOV X19, X0
	0x035EDC80 LDR X9, [X8 + 0x238]
	0x035EDC84 LDR X2, [X8 + 0x240]
	0x035EDC88 MOV W1, W31
	0x035EDC8C BLR X9
	0x035EDC90 MOV X0, X19
	0x035EDC94 LDP X20, X19, [X31 + 0x10]
	0x035EDC98 MOV X1, X31
	0x035EDC9C LDP X30, X21, [X31], #0x20
	0x035EDCA0 B 0x33CB4DC
	0x035EDCA4 CMP W1, 0x1
	0x035EDCA8 MOV X21, X0
	0x035EDCAC B.NE 0x35EDCDC
	0x035EDCB0 MOV X0, X21
	0x035EDCB4 BL 0x3EB1AD0
	0x035EDCB8 LDR X20, [X0]
	0x035EDCBC BL 0x3EB1AE0
	0x035EDCC0 MOV X0, X19
	0x035EDCC4 MOV X1, X31
	0x035EDCC8 BL 0x33CB4DC
	0x035EDCCC CBNZ X20, 0x35EDCE4
	0x035EDCD0 LDP X20, X19, [X31 + 0x10]
	0x035EDCD4 LDP X30, X21, [X31], #0x20
	0x035EDCD8 RET
	0x035EDCDC MOV X20, X31
	0x035EDCE0 B 0x35EDCF0
	0x035EDCE4 MOV X0, X20
	0x035EDCE8 BL 0x1C16F18
	0x035EDCEC MOV X21, X0
	0x035EDCF0 MOV X0, X19
	0x035EDCF4 MOV X1, X31
	0x035EDCF8 BL 0x33CB4DC
	0x035EDCFC CBNZ X20, 0x35EDD08
	0x035EDD00 MOV X0, X21
	0x035EDD04 BL 0x1D2C690
	0x035EDD08 MOV X0, X20
	0x035EDD0C BL 0x1C16F18
	0x035EDD10 BL 0x1990590
	0x035EDD14 LDR X0, [X0 + 0x10]
	0x035EDD18 RET
	0x035EDD1C MOV X1, X31
	0x035EDD20 B 0x33BDD8C
	0x035EDD24 LDR X0, [X0 + 0x18]
	0x035EDD28 RET
	0x035EDD2C MOV W0, W31
	0x035EDD30 RET
	0x035EDD34 STR X30, [X31 - 0x10]!
	0x035EDD38 LDR X0, [X0 + 0x18]
	0x035EDD3C CBZ X0, 0x35EDD4C
	0x035EDD40 MOV X2, X31
	0x035EDD44 LDR X30, [X31], #0x10
	0x035EDD48 B 0x36DDC24
	0x035EDD4C BL 0x1C16F20
	0x035EDD50 STR X30, [X31 - 0x10]!
	0x035EDD54 LDR X0, [X0 + 0x18]
	0x035EDD58 CBZ X0, 0x35EDD68
	0x035EDD5C MOV X2, X31
	0x035EDD60 LDR X30, [X31], #0x10
	0x035EDD64 B 0x36DDCC0
	0x035EDD68 BL 0x1C16F20
	0x035EDD6C STR X30, [X31 - 0x10]!
	0x035EDD70 LDR X8, [X0 + 0x18]
	0x035EDD74 CBZ X8, 0x35EDD84
	0x035EDD78 LDR W0, [X8 + 0x18]
	0x035EDD7C LDR X30, [X31], #0x10
	0x035EDD80 RET
	0x035EDD84 BL 0x1C16F20
	0x035EDD88 STR X30, [X31 - 0x10]!
	0x035EDD8C LDR X8, [X0 + 0x18]
	0x035EDD90 CBZ X8, 0x35EDDA0
	0x035EDD94 STR W1, [X8 + 0x18]
	0x035EDD98 LDR X30, [X31], #0x10
	0x035EDD9C RET
	0x035EDDA0 BL 0x1C16F20
	0x035EDDA4 STR X30, [X31 - 0x10]!
	0x035EDDA8 LDR X8, [X0 + 0x18]
	0x035EDDAC CBZ X8, 0x35EDDBC
	0x035EDDB0 LDR X0, [X8 + 0x30]
	0x035EDDB4 LDR X30, [X31], #0x10
	0x035EDDB8 RET
	0x035EDDBC BL 0x1C16F20
	0x035EDDC0 STR X30, [X31 - 0x10]!
	0x035EDDC4 LDR X8, [X0 + 0x18]
	0x035EDDC8 CBZ X8, 0x35EDDD8
	0x035EDDCC STR X1, [X8 + 0x30]
	0x035EDDD0 LDR X30, [X31], #0x10
	0x035EDDD4 RET
	0x035EDDD8 BL 0x1C16F20
	0x035EDDDC STP X30, X19, [X31 - 0x10]!
	0x035EDDE0 ADRP X0, 0xB06000
	0x035EDDE4 LDR X0, [X0 + 0xB40]
	0x035EDDE8 BL 0x1C16D08
	0x035EDDEC BL 0x1C16F10
	0x035EDDF0 MOV X1, X31
	0x035EDDF4 MOV X19, X0
	0x035EDDF8 BL 0x3380310
	0x035EDDFC ADRP X0, 0xB4C000
	0x035EDE00 LDR X0, [X0 + 0x6D8]
	0x035EDE04 BL 0x1C16D08
	0x035EDE08 MOV X1, X0
	0x035EDE0C MOV X0, X19
	0x035EDE10 BL 0x1C16DEC
	0x035EDE14 STP X30, X19, [X31 - 0x10]!
	0x035EDE18 ADRP X0, 0xB06000
	0x035EDE1C LDR X0, [X0 + 0xB40]
	0x035EDE20 BL 0x1C16D08
	0x035EDE24 BL 0x1C16F10
	0x035EDE28 MOV X1, X31
	0x035EDE2C MOV X19, X0
	0x035EDE30 BL 0x3380310
	0x035EDE34 ADRP X0, 0xB4C000
	0x035EDE38 LDR X0, [X0 + 0x6E0]
	0x035EDE3C BL 0x1C16D08
	0x035EDE40 MOV X1, X0
	0x035EDE44 MOV X0, X19
	0x035EDE48 BL 0x1C16DEC
	0x035EDE4C STR X30, [X31 - 0x10]!
	0x035EDE50 LDR X8, [X0 + 0x18]
	0x035EDE54 CBZ X8, 0x35EDE64
	0x035EDE58 LDR X0, [X8 + 0x38]
	0x035EDE5C LDR X30, [X31], #0x10
	0x035EDE60 RET
	0x035EDE64 BL 0x1C16F20
	0x035EDE68 STR X30, [X31 - 0x10]!
	0x035EDE6C LDR X8, [X0 + 0x18]
	0x035EDE70 CBZ X8, 0x35EDE80
	0x035EDE74 STR X1, [X8 + 0x38]
	0x035EDE78 LDR X30, [X31], #0x10
	0x035EDE7C RET
	0x035EDE80 BL 0x1C16F20
	0x035EDE84 STP X30, X19, [X31 - 0x10]!
	0x035EDE88 ADRP X0, 0xB06000
	0x035EDE8C LDR X0, [X0 + 0xB40]
	0x035EDE90 BL 0x1C16D08
	0x035EDE94 BL 0x1C16F10
	0x035EDE98 MOV X1, X31
	0x035EDE9C MOV X19, X0
	0x035EDEA0 BL 0x3380310
	0x035EDEA4 ADRP X0, 0xB4C000
	0x035EDEA8 LDR X0, [X0 + 0x6E8]
	0x035EDEAC BL 0x1C16D08
	0x035EDEB0 MOV X1, X0
	0x035EDEB4 MOV X0, X19
	0x035EDEB8 BL 0x1C16DEC
	0x035EDEBC STP X30, X19, [X31 - 0x10]!
	0x035EDEC0 ADRP X0, 0xB06000
	0x035EDEC4 LDR X0, [X0 + 0xB40]
	0x035EDEC8 BL 0x1C16D08
	0x035EDECC BL 0x1C16F10
	0x035EDED0 MOV X1, X31
	0x035EDED4 MOV X19, X0
	0x035EDED8 BL 0x3380310
	0x035EDEDC ADRP X0, 0xB4C000
	0x035EDEE0 LDR X0, [X0 + 0x6F0]
	0x035EDEE4 BL 0x1C16D08
	0x035EDEE8 MOV X1, X0
	0x035EDEEC MOV X0, X19
	0x035EDEF0 BL 0x1C16DEC
	0x035EDEF4 LDR X0, [X0 + 0x18]
	0x035EDEF8 RET
	0x035EDEFC MOVZ W0, 0x1
	0x035EDF00 RET
	0x035EDF04 STR X30, [X31 - 0x10]!
	0x035EDF08 LDR X0, [X0 + 0x18]
	0x035EDF0C CBZ X0, 0x35EDF1C
	0x035EDF10 MOV X2, X31
	0x035EDF14 LDR X30, [X31], #0x10
	0x035EDF18 B 0x36DDDB0
	0x035EDF1C BL 0x1C16F20
	0x035EDF20 STR X30, [X31 - 0x10]!
	0x035EDF24 LDR X0, [X0 + 0x18]
	0x035EDF28 CBZ X0, 0x35EDF38
	0x035EDF2C MOV X2, X31
	0x035EDF30 LDR X30, [X31], #0x10
	0x035EDF34 B 0x36DDE4C
	0x035EDF38 BL 0x1C16F20
	0x035EDF3C STR X30, [X31 - 0x10]!
	0x035EDF40 LDR X8, [X0 + 0x18]
	0x035EDF44 CBZ X8, 0x35EDF54
	0x035EDF48 LDR W0, [X8 + 0x14]
	0x035EDF4C LDR X30, [X31], #0x10
	0x035EDF50 RET
	0x035EDF54 BL 0x1C16F20
	0x035EDF58 STR X30, [X31 - 0x10]!
	0x035EDF5C LDR X8, [X0 + 0x18]
	0x035EDF60 CBZ X8, 0x35EDF70
	0x035EDF64 STR W1, [X8 + 0x14]
	0x035EDF68 LDR X30, [X31], #0x10
	0x035EDF6C RET
	0x035EDF70 BL 0x1C16F20
	0x035EDF74 STR X30, [X31 - 0x10]!
	0x035EDF78 LDR X8, [X0 + 0x18]
	0x035EDF7C CBZ X8, 0x35EDF8C
	0x035EDF80 LDRB W0, [X8 + 0x1D]
	0x035EDF84 LDR X30, [X31], #0x10
	0x035EDF88 RET
	0x035EDF8C BL 0x1C16F20
	0x035EDF90 STR X30, [X31 - 0x10]!
	0x035EDF94 LDR X8, [X0 + 0x18]
	0x035EDF98 CBZ X8, 0x35EDFAC
	0x035EDF9C AND W9, W1, 0x1
	0x035EDFA0 STRB W9, [X8 + 0x1D]
	0x035EDFA4 LDR X30, [X31], #0x10
	0x035EDFA8 RET
	0x035EDFAC BL 0x1C16F20
	0x035EDFB0 STP X30, X19, [X31 - 0x10]!
	0x035EDFB4 ADRP X0, 0xB06000
	0x035EDFB8 LDR X0, [X0 + 0xB40]
	0x035EDFBC BL 0x1C16D08
	0x035EDFC0 BL 0x1C16F10
	0x035EDFC4 MOV X1, X31
	0x035EDFC8 MOV X19, X0
	0x035EDFCC BL 0x3380310
	0x035EDFD0 ADRP X0, 0xB4C000
	0x035EDFD4 LDR X0, [X0 + 0x6F8]
	0x035EDFD8 BL 0x1C16D08
	0x035EDFDC MOV X1, X0
	0x035EDFE0 MOV X0, X19
	0x035EDFE4 BL 0x1C16DEC
	0x035EDFE8 STP X30, X19, [X31 - 0x10]!
	0x035EDFEC ADRP X0, 0xB06000
	0x035EDFF0 LDR X0, [X0 + 0xB40]
	0x035EDFF4 BL 0x1C16D08
	0x035EDFF8 BL 0x1C16F10
	0x035EDFFC MOV X1, X31
	0x035EE000 MOV X19, X0
	0x035EE004 BL 0x3380310
	0x035EE008 ADRP X0, 0xB4B000
	0x035EE00C LDR X0, [X0 + 0x700]
	0x035EE010 BL 0x1C16D08
	0x035EE014 MOV X1, X0
	0x035EE018 MOV X0, X19
	0x035EE01C BL 0x1C16DEC
	0x035EE020 STR X30, [X31 - 0x10]!
	0x035EE024 LDR X8, [X0 + 0x18]
	0x035EE028 CBZ X8, 0x35EE038
	0x035EE02C LDR X0, [X8 + 0x20]
	0x035EE030 LDR X30, [X31], #0x10
	0x035EE034 RET
	0x035EE038 BL 0x1C16F20
	0x035EE03C STR X30, [X31 - 0x10]!
	0x035EE040 LDR X8, [X0 + 0x18]
	0x035EE044 CBZ X8, 0x35EE054
	0x035EE048 STR X1, [X8 + 0x20]
	0x035EE04C LDR X30, [X31], #0x10
	0x035EE050 RET
	0x035EE054 BL 0x1C16F20
	0x035EE058 STP X30, X19, [X31 - 0x10]!
	0x035EE05C ADRP X0, 0xB05000
	0x035EE060 LDR X0, [X0 + 0xB40]
	0x035EE064 BL 0x1C16D08
	0x035EE068 BL 0x1C16F10
	0x035EE06C MOV X1, X31
	0x035EE070 MOV X19, X0
	0x035EE074 BL 0x3380310
	0x035EE078 ADRP X0, 0xB4B000
	0x035EE07C LDR X0, [X0 + 0x708]
	0x035EE080 BL 0x1C16D08
	0x035EE084 MOV X1, X0
	0x035EE088 MOV X0, X19
	0x035EE08C BL 0x1C16DEC
	0x035EE090 STP X30, X19, [X31 - 0x10]!
	0x035EE094 ADRP X0, 0xB05000
	0x035EE098 LDR X0, [X0 + 0xB40]
	0x035EE09C BL 0x1C16D08
	0x035EE0A0 BL 0x1C16F10
	0x035EE0A4 MOV X1, X31
	0x035EE0A8 MOV X19, X0
	0x035EE0AC BL 0x3380310
	0x035EE0B0 ADRP X0, 0xB4B000
	0x035EE0B4 LDR X0, [X0 + 0x710]
	0x035EE0B8 BL 0x1C16D08
	0x035EE0BC MOV X1, X0
	0x035EE0C0 MOV X0, X19
	0x035EE0C4 BL 0x1C16DEC
	0x035EE0C8 STR X30, [X31 - 0x30]!
	0x035EE0CC STP X22, X21, [X31 + 0x10]
	0x035EE0D0 STP X20, X19, [X31 + 0x20]
	0x035EE0D4 ADRP X19, 0xDF2000
	0x035EE0D8 ADRP X22, 0xB4B000
	0x035EE0DC LDRB W8, [X19 + 0x2CE]
	0x035EE0E0 LDR X22, [X22 + 0x378]
	0x035EE0E4 TBNZ X8, 0x0, 0x35EE120
	0x035EE0E8 ADRP X0, 0xB4B000
	0x035EE0EC LDR X0, [X0 + 0x718]
	0x035EE0F0 BL 0x1C16CF4
	0x035EE0F4 ADRP X0, 0xB4B000
	0x035EE0F8 LDR X0, [X0 + 0x720]
	0x035EE0FC BL 0x1C16CF4
	0x035EE100 ADRP X0, 0xB4B000
	0x035EE104 LDR X0, [X0 + 0x378]
	0x035EE108 BL 0x1C16CF4
	0x035EE10C ADRP X0, 0xB4B000
	0x035EE110 LDR X0, [X0 + 0x1D0]
	0x035EE114 BL 0x1C16CF4
	0x035EE118 MOVZ W8, 0x1
	0x035EE11C STRB W8, [X19 + 0x2CE]
	0x035EE120 LDR X0, [X22]
	0x035EE124 LDR W8, [X0 + 0xE0]
	0x035EE128 CBNZ W8, 0x35EE134
	0x035EE12C BL 0x1C16DFC
	0x035EE130 LDR X0, [X22]
	0x035EE134 LDR X8, [X0 + 0xB8]
	0x035EE138 LDR X19, [X8]
	0x035EE13C STRB W31, [X31 + 0xC]
	0x035EE140 ADD X1, X31, 0xC
	0x035EE144 MOV X0, X19
	0x035EE148 MOV X2, X31
	0x035EE14C BL 0x33DE64C
	0x035EE150 LDR X0, [X22]
	0x035EE154 LDR W8, [X0 + 0xE0]
	0x035EE158 CBNZ W8, 0x35EE164
	0x035EE15C BL 0x1C16DFC
	0x035EE160 LDR X0, [X22]
	0x035EE164 LDR X8, [X0 + 0xB8]
	0x035EE168 LDRB W8, [X8 + 0x8]
	0x035EE16C CBZ W8, 0x35EE178
	0x035EE170 MOV X21, X31
	0x035EE174 B 0x35EE29C
	0x035EE178 ADRP X8, 0xB4B000
	0x035EE17C LDR X8, [X8 + 0x1D0]
	0x035EE180 LDR X0, [X8]
	0x035EE184 LDR W8, [X0 + 0xE0]
	0x035EE188 CBNZ W8, 0x35EE190
	0x035EE18C BL 0x1C16DFC
	0x035EE190 BL 0x35E0FDC
	0x035EE194 LDR X0, [X22]
	0x035EE198 LDR W8, [X0 + 0xE0]
	0x035EE19C CBNZ W8, 0x35EE1A4
	0x035EE1A0 BL 0x1C16DFC
	0x035EE1A4 BL 0x35EE460
	0x035EE1A8 LDR X0, [X22]
	0x035EE1AC LDR W8, [X0 + 0xE0]
	0x035EE1B0 CBNZ W8, 0x35EE1B8
	0x035EE1B4 BL 0x1C16DFC
	0x035EE1B8 BL 0x35EE650
	0x035EE1BC MOV X20, X0
	0x035EE1C0 CBZ X0, 0x35EE2CC
	0x035EE1C4 LDR X0, [X22]
	0x035EE1C8 LDR W8, [X0 + 0xE0]
	0x035EE1CC CBNZ W8, 0x35EE1D8
	0x035EE1D0 BL 0x1C16DFC
	0x035EE1D4 LDR X0, [X22]
	0x035EE1D8 LDR X8, [X0 + 0xB8]
	0x035EE1DC LDR X9, [X20]
	0x035EE1E0 LDR X21, [X8 + 0x20]
	0x035EE1E4 LDP X8, X1, [X9 + 0x178]
	0x035EE1E8 MOV X0, X20
	0x035EE1EC BLR X8
	0x035EE1F0 CBZ X21, 0x35EE314
	0x035EE1F4 ADRP X8, 0xB4B000
	0x035EE1F8 LDR X8, [X8 + 0x720]
	0x035EE1FC MOV X2, X0
	0x035EE200 MOV X4, X1
	0x035EE204 LDR X3, [X8]
	0x035EE208 MOV X0, X21
	0x035EE20C MOV X1, X2
	0x035EE210 MOV X2, X4
	0x035EE214 BL 0x29E5978
	0x035EE218 TBNZ X0, 0x0, 0x35EE274
	0x035EE21C LDR X0, [X22]
	0x035EE220 LDR W8, [X0 + 0xE0]
	0x035EE224 CBNZ W8, 0x35EE230
	0x035EE228 BL 0x1C16DFC
	0x035EE22C LDR X0, [X22]
	0x035EE230 LDR X8, [X0 + 0xB8]
	0x035EE234 LDR X9, [X20]
	0x035EE238 LDR X21, [X8 + 0x20]
	0x035EE23C LDP X8, X1, [X9 + 0x178]
	0x035EE240 MOV X0, X20
	0x035EE244 BLR X8
	0x035EE248 CBZ X21, 0x35EE318
	0x035EE24C ADRP X8, 0xB4B000
	0x035EE250 LDR X8, [X8 + 0x718]
	0x035EE254 MOV X2, X0
	0x035EE258 MOV X3, X1
	0x035EE25C LDR X4, [X8]
	0x035EE260 MOV X0, X21
	0x035EE264 MOV X1, X2
	0x035EE268 MOV X2, X3
	0x035EE26C MOV X3, X20
	0x035EE270 BL 0x29E576C
	0x035EE274 LDR X0, [X22]
	0x035EE278 LDR W8, [X0 + 0xE0]
	0x035EE27C CBNZ W8, 0x35EE288
	0x035EE280 BL 0x1C16DFC
	0x035EE284 LDR X0, [X22]
	0x035EE288 LDR X8, [X0 + 0xB8]
	0x035EE28C MOVZ W9, 0x1
	0x035EE290 MOV X21, X31
	0x035EE294 STR X20, [X8 + 0x10]
	0x035EE298 STRB W9, [X8 + 0x8]
	0x035EE29C LDRB W8, [X31 + 0xC]
	0x035EE2A0 CBZ W8, 0x35EE2B0
	0x035EE2A4 MOV X0, X19
	0x035EE2A8 MOV X1, X31
	0x035EE2AC BL 0x33E14E4
	0x035EE2B0 CBNZ X21, 0x35EE2C4
	0x035EE2B4 LDP X20, X19, [X31 + 0x20]
	0x035EE2B8 LDP X22, X21, [X31 + 0x10]
	0x035EE2BC LDR X30, [X31], #0x30
	0x035EE2C0 RET
	0x035EE2C4 MOV X0, X21
	0x035EE2C8 BL 0x1C16F18
	0x035EE2CC ADRP X0, 0xB05000
	0x035EE2D0 LDR X0, [X0 + 0xB40]
	0x035EE2D4 BL 0x1C16D08
	0x035EE2D8 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X0
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X20, 0xDF4000
	009 Move W8, [X20+707]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0xB4D000
	016 Move X0, [X0+1664]
	017 Call 0x1C17CF4
	018 Move X0, 0xB36000
	019 Move X0, [X0+3632]
	020 Call 0x1C17CF4
	021 Move X0, 0xB36000
	022 Move X0, [X0+3488]
	023 Call 0x1C17CF4
	024 Move X0, 0xB4D000
	025 Move X0, [X0+1608]
	026 Call 0x1C17CF4
	027 Move X0, 0xB4D000
	028 Move X0, [X0+1616]
	029 Call 0x1C17CF4
	030 Move X0, 0xB4D000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move X0, 0xB4D000
	034 Move X0, [X0+1632]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+707], W8
	038 Move [X31+68], W31
	039 Move [X31+48], X31
	040 Move [X31+56], X31
	041 Move W8, [X19]
	042 Move [X31+92], W8
	043 Move X0, [X19+32]
	044 Move [X31+72], X31
	045 Move [X31+80], X0
	046 Compare W8, 0
	047 JumpIfEqual {132}
	048 Compare X0, 0
	049 JumpIfEqual {254}
	050 Move W8, [X19+40]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Move W1, 1
	054 Call MobileAuthenticatedStream.CheckThrow, X0, X1, X2
	055 Move X8, [X31+104]
	056 Move W10, [X8+40]
	057 Compare W10, 0
	058 JumpIfEqual {102}
	059 Move X9, [X31+80]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {265}
	063 Move X1, [X8+48]
	064 Add X0, X9, 72
	065 Move X2, X31
	066 Call 0x1C25138
	067 Compare X0, 0
	068 JumpIfNotEqual {267}
	069 Move X8, [X31+80]
	070 Compare X8, 0
	071 JumpIfEqual {293}
	072 Move X9, [X31+104]
	073 Add X0, X8, 80
	074 Move X1, [X9+48]
	075 Move X2, X31
	076 Call 0x1C25138
	077 Compare X0, 0
	078 JumpIfNotEqual {294}
	079 Move X8, [X31+80]
	080 Compare X8, 0
	081 JumpIfEqual {307}
	082 Move X9, [X31+104]
	083 Add X0, X8, 88
	084 Move X1, [X9+48]
	085 Move X2, X31
	086 Call 0x1C25138
	087 Compare X0, 0
	088 JumpIfEqual {132}
	089 Move X0, 0xB4D000
	090 Move X0, [X0+792]
	091 Call 0x1C17D08
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Call MobileAuthenticatedStream.GetInvalidNestedCallException
	097 Move X0, 0xB4D000
	098 Move X0, [X0+1672]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Call 0x1C17DEC
	102 Move X9, [X31+80]
	103 Compare X9, 0
	104 JumpIfEqual {262}
	105 Move X1, [X8+48]
	106 Add X0, X9, 80
	107 Move X2, X31
	108 Call 0x1C25138
	109 Compare X0, 0
	110 JumpIfEqual {132}
	111 Move X0, 0xB4D000
	112 Move X0, [X0+792]
	113 Call 0x1C17D08
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Call MobileAuthenticatedStream.GetInvalidNestedCallException
	119 Move X0, 0xB4D000
	120 Move X0, [X0+1672]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Call 0x1C17DEC
	124 Compare X9, 0
	125 JumpIfEqual {266}
	126 Move X1, [X8+48]
	127 Add X0, X9, 88
	128 Move X2, X31
	129 Call 0x1C25138
	130 Compare X0, 0
	131 JumpIfNotEqual {280}
	132 Move X22, 0xB36000
	133 Move X22, [X22+3488]
	134 Move W11, [X31+92]
	135 Add X8, X31, 92
	136 Add X9, X31, 80
	137 Add X10, X31, 72
	138 Move [X31], X31
	139 Move [X31+8], X8
	140 Move [X31+16], X9
	141 Move [X31+24], X10
	142 Add X8, X31, 68
	143 Add X9, X31, 104
	144 Move [X31+32], X8
	145 Move [X31+40], X9
	146 Compare W11, 0
	147 JumpIfEqual {168}
	148 Move X8, [X31+80]
	149 Compare X8, 0
	150 JumpIfEqual {255}
	151 Move X0, [X8+112]
	152 Move [X31+68], W31
	153 Move [X31+72], X0
	154 Add X1, X31, 68
	155 Move X2, X31
	156 Call Monitor.Enter, X0, X1
	157 Move X8, [X31+104]
	158 Move W9, [X8+40]
	159 Move X8, [X31+80]
	160 Compare W9, 0
	161 JumpIfEqual {178}
	162 Compare X8, 0
	163 JumpIfEqual {260}
	164 Move X0, [X8+104]
	165 Compare X0, 0
	166 JumpIfEqual {261}
	167 Call BufferOffsetSize2.Reset, X0
	168 Move X8, [X31+104]
	169 Move TEMP, 0
	170 Not TEMP
	171 Move W9, TEMP
	172 Move V0, [X8+4]
	173 Move [X31+3], V0
	174 Move [X8+64], X31
	175 Move [X8+72], X31
	176 Move [X31+92], W9
	177 Move [X8], W9
	178 Compare X8, 0
	179 JumpIfEqual {263}
	180 Move X0, [X8+96]
	181 Compare X0, 0
	182 JumpIfEqual {264}
	183 Call BufferOffsetSize2.Reset, X0
	184 Move X19, X31
	185 Move W20, 20
	186 Move W8, [X31+92]
	187 Move TEMP, X8
	188 And TEMP, TEMP, -2147483648
	189 Compare TEMP, -2147483648
	190 JumpIfNotEqual {197}
	191 Move W8, [X31+68]
	192 Compare W8, 0
	193 JumpIfEqual {197}
	194 Move X0, [X31+72]
	195 Move X1, X31
	196 Call Monitor.Exit, X0
	197 Compare X19, 0
	198 JumpIfNotEqual {256}
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Compare W20, 0
	201 JumpIfNotEqual {420}
	202 Move X8, [X31+104]
	203 Move X0, [X8+48]
	204 Compare X0, 0
	205 JumpIfEqual {258}
	206 Move X1, [X8+56]
	207 Call AsyncProtocolRequest.StartOperation, X0, X1
	208 Compare X0, 0
	209 JumpIfEqual {259}
	210 Move X8, 0xB4D000
	211 Move X8, [X8+1632]
	212 Move X2, [X8]
	213 Move W1, W31
	214 Call Task`1<Object>.ConfigureAwait, X0, X1
	215 Move X8, 0xB4D000
	216 Move X8, [X8+1624]
	217 Move [X31+48], X0
	218 Move [X31+56], X1
	219 Move X8, [X8]
	220 Add X0, X31, 48
	221 Move X1, X8
	222 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {234}
	227 Move X8, 0xB4D000
	228 Move X8, [X8+1616]
	229 Add X0, X31, 48
	230 Move X1, [X8]
	231 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	232 Move X19, X0
	233 Move W20, 25
	234 Move X19, [X31+104]
	235 Move [X31+92], W31
	236 Move [X19], W31
	237 Move V0, [X31+3]
	238 Move X2, X19
	239 Move [X19+4], V0
	240 Move X0, [X22]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {246}
	244 Call 0x1C17DFC
	245 Move X2, [X31+104]
	246 Move X8, 0xB4D000
	247 Move X8, [X8+1664]
	248 Add X0, X19, 8
	249 Move X3, [X8]
	250 Add X1, X31, 48
	251 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	252 Move X19, X31
	253 Move W20, 22
	254 Call 0x1C17F20
	255 Call 0x1C17F20
	256 Move X0, X19
	257 Call 0x1C17F18
	258 Call 0x1C17F20
	259 Call 0x1C17F20
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Move X0, 0xB4D000
	268 Move X0, [X0+792]
	269 Call 0x1C17D08
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Call MobileAuthenticatedStream.GetInvalidNestedCallException
	275 Move X0, 0xB4D000
	276 Move X0, [X0+1672]
	277 Call 0x1C17D08
	278 Move X1, X0
	279 Call 0x1C17DEC
	280 Move X0, 0xB4D000
	281 Move X0, [X0+792]
	282 Call 0x1C17D08
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Call MobileAuthenticatedStream.GetInvalidNestedCallException
	288 Move X0, 0xB4D000
	289 Move X0, [X0+1672]
	290 Call 0x1C17D08
	291 Move X1, X0
	292 Call 0x1C17DEC
	293 Call 0x1C17F20
	294 Move X0, 0xB4D000
	295 Move X0, [X0+792]
	296 Call 0x1C17D08
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Call MobileAuthenticatedStream.GetInvalidNestedCallException
	302 Move X0, 0xB4D000
	303 Move X0, [X0+1672]
	304 Call 0x1C17D08
	305 Move X1, X0
	306 Call 0x1C17DEC
	307 Call 0x1C17F20
	308 Move X21, X0
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X0, X21
	311 Call 0x3EB2AD0
	312 Move X19, [X0]
	313 Call 0x3EB2AE0
	314 Move W20, W31
	315 Move X19, X31
	316 Move W8, [X31+92]
	317 Move W20, W1
	318 Move TEMP, X8
	319 And TEMP, TEMP, -2147483648
	320 Compare TEMP, -2147483648
	321 JumpIfNotEqual {328}
	322 Move W8, [X31+68]
	323 Compare W8, 0
	324 JumpIfEqual {328}
	325 Move X0, [X31+72]
	326 Move X1, X31
	327 Call Monitor.Exit, X0
	328 Compare X19, 0
	329 JumpIfEqual {335}
	330 Move X0, X19
	331 Call 0x1C17F18
	332 Move X21, X0
	333 Move X21, X0
	334 Move W20, W1
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move X0, X21
	337 Call 0x3EB2AD0
	338 Move X19, X0
	339 Move X0, 0xB06000
	340 Move X0, [X0+2000]
	341 Call 0x1C17D08
	342 Move X8, [X19]
	343 Move X1, [X8]
	344 Call 0x1C18270
	345 Move TEMP, X0
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfNotEqual {395}
	349 Move X19, [X19]
	350 Call 0x3EB2AE0
	351 Move X8, [X31+104]
	352 Move X0, [X8+48]
	353 Compare X0, 0
	354 JumpIfEqual {403}
	355 Move X21, [X31+80]
	356 Call AsyncProtocolRequest.get_Name, X0
	357 Move X20, X0
	358 Move X0, 0xB4C000
	359 Move X0, [X0+1680]
	360 Call 0x1C17D08
	361 Move X1, X0
	362 Move X0, X20
	363 Move X2, X31
	364 Call String.Concat, X0, X1
	365 Move X20, X0
	366 Move X0, 0xB4C000
	367 Move X0, [X0+792]
	368 Call 0x1C17D08
	369 Move W8, [X0+224]
	370 Compare W8, 0
	371 JumpIfNotEqual {373}
	372 Call 0x1C17DFC
	373 Move X0, X19
	374 Move X1, X20
	375 Call MobileAuthenticatedStream.GetIOException, X0, X1
	376 Compare X21, 0
	377 JumpIfEqual {404}
	378 Move X1, X31
	379 Call ExceptionDispatchInfo.Capture, X0
	380 Move X19, X0
	381 Add X0, X21, 64
	382 Move X1, X19
	383 Move X2, X31
	384 Call 0x1C25138
	385 NotImplemented "Instruction CMP not yet implemented."
	386 NotImplemented "Instruction CSEL not yet implemented."
	387 Move X0, 0xB4C000
	388 Move X0, [X0+1056]
	389 Call 0x1C17D08
	390 Call 0x1C17F10
	391 Move X19, X0
	392 Move X1, X31
	393 Call Object..ctor, X0
	394 Move [X19+24], X20
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X19]
	398 Move [X0], X8
	399 Move X1, 0x8C7000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Move X21, X0
	406 Move W20, W1
	407 Move X20, X1
	408 Move X21, X0
	409 Call 0x3EB2AE0
	410 Move X20, X1
	411 Move X21, X0
	412 Move W8, 1
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move X0, X21
	415 Call 0x3EB2AD0
	416 Move X8, [X0]
	417 Move [X31], X8
	418 Call 0x3EB2AE0
	419 Move W20, W31
	420 Move X19, X31
	421 Add X0, X31, 0
	422 Call 0x1BC5B64
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Compare W20, 0
	425 JumpIfNotEqual {450}
	426 Compare X19, 0
	427 JumpIfEqual {457}
	428 Move X0, [X19+24]
	429 Compare X0, 0
	430 JumpIfEqual {433}
	431 Move X1, X31
	432 Call ExceptionDispatchInfo.Throw, X0
	433 Move X20, [X31+104]
	434 Move TEMP, 1
	435 Not TEMP
	436 Move W8, TEMP
	437 Move W19, [X19+16]
	438 Move X21, 0xB35000
	439 Move [X20+8], W8
	440 Move X0, [X22]
	441 Move W8, [X0+224]
	442 Move X21, [X21+3632]
	443 Compare W8, 0
	444 JumpIfNotEqual {446}
	445 Call 0x1C17DFC
	446 Move X2, [X21]
	447 Move X0, X20
	448 Move W1, W19
	449 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	450 Move X20, [X31+128]
	451 Move X19, [X31+136]
	452 Move X22, [X31+112]
	453 Move X21, [X31+120]
	454 Move X30, [X31+96]
	455 Add X31, X31, 144
	456 Return 
	457 Call 0x1C17F20
	458 Move X21, X0
	459 Move W20, W1
	460 Add X0, X31, 0
	461 Call 0x1BC5B64
	462 Move X21, X0
	463 Move W20, W1
	464 Move X20, X1
	465 Move X21, X0
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move X0, X21
	468 Call 0x3EB2AD0
	469 Move X19, X0
	470 Move X0, 0xB06000
	471 Move X0, [X0+2000]
	472 Call 0x1C17D08
	473 Move X8, [X19]
	474 Move X1, [X8]
	475 Call 0x1C18270
	476 Move TEMP, X0
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfNotEqual {501}
	480 Move X19, [X19]
	481 Call 0x3EB2AE0
	482 Move X20, [X31+104]
	483 Move TEMP, 1
	484 Not TEMP
	485 Move W8, TEMP
	486 Move X0, 0xB35000
	487 Move [X20+8], W8
	488 Move X0, [X0+3488]
	489 Call 0x1C17D08
	490 Move W8, [X0+224]
	491 Compare W8, 0
	492 JumpIfNotEqual {494}
	493 Call 0x1C17DFC
	494 Move X0, 0xB35000
	495 Move X0, [X0+3648]
	496 Call 0x1C17D08
	497 Move X2, X0
	498 Move X0, X20
	499 Move X1, X19
	500 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	501 Move W0, 8
	502 Call 0x3EB2AF0
	503 Move X8, [X19]
	504 Move [X0], X8
	505 Move X1, 0x8C7000
	506 Add X1, X1, 3672
	507 Move X2, X31
	508 Call 0x3EB2B00
	509 Move X21, X0
	510 Call 0x3EB2AE0
	511 Move X0, X21
	512 Call 0x1D2D690
	513 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035EE2DC MOV X20, X0
	0x035EE2E0 ADRP X0, 0xB4B000
	0x035EE2E4 LDR X0, [X0 + 0x728]
	0x035EE2E8 BL 0x1C16D08
	0x035EE2EC MOV X1, X0
	0x035EE2F0 MOV X0, X20
	0x035EE2F4 MOV X2, X31
	0x035EE2F8 BL 0x3379A44
	0x035EE2FC ADRP X0, 0xB4B000
	0x035EE300 LDR X0, [X0 + 0x730]
	0x035EE304 BL 0x1C16D08
	0x035EE308 MOV X1, X0
	0x035EE30C MOV X0, X20
	0x035EE310 BL 0x1C16DEC
	0x035EE314 BL 0x1C16F20
	0x035EE318 BL 0x1C16F20
	0x035EE31C B 0x35EE404
	0x035EE320 B 0x35EE33C
	0x035EE324 B 0x35EE404
	0x035EE328 B 0x35EE404
	0x035EE32C B 0x35EE404
	0x035EE330 B 0x35EE404
	0x035EE334 B 0x35EE404
	0x035EE338 B 0x35EE404
	0x035EE33C MOV X21, X1
	0x035EE340 MOV X20, X0
	0x035EE344 CMP W21, 0x1
	0x035EE348 B.NE 0x35EE40C
	0x035EE34C MOV X0, X20
	0x035EE350 BL 0x3EB1AD0
	0x035EE354 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDF3000
	007 Move X21, 0xB35000
	008 Move W8, [X22+708]
	009 Move X21, [X21+3488]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB35000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xB35000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+708], W8
	024 Move X0, [X21]
	025 Move X21, 0xB35000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3656]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Int32>.SetStateMachine, X0, X1
	040 Return 

