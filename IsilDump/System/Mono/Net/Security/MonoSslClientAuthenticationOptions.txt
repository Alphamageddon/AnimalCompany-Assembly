Type: Mono.Net.Security.MonoSslClientAuthenticationOptions

Method: System.Net.Security.SslClientAuthenticationOptions get_Options()

Disassembly:
	0x035EED24 MOV X0, X20
	0x035EED28 BL 0x1D2C690

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Boolean get_ServerMode()

Disassembly:
	0x035EED2C MOV X0, X21
	0x035EED30 BL 0x1C16F18

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x035EBECC LDRB W8, [X31 + 0xC]
	0x035EBED0 CBZ W8, 0x35EBEE0
	0x035EBED4 MOV X0, X19
	0x035EBED8 MOV X1, X31
	0x035EBEDC BL 0x33E14E4
	0x035EBEE0 CBNZ X20, 0x35EBEEC
	0x035EBEE4 MOV X0, X21
	0x035EBEE8 BL 0x1D2C690
	0x035EBEEC MOV X0, X20
	0x035EBEF0 BL 0x1C16F18
	0x035EBEF4 BL 0x1990590
	0x035EBEF8 STP X30, X19, [X31 - 0x10]!
	0x035EBEFC ADRP X0, 0xB08000
	0x035EBF00 LDR X0, [X0 + 0xB40]
	0x035EBF04 BL 0x1C16D08
	0x035EBF08 BL 0x1C16F10
	0x035EBF0C MOV X1, X31
	0x035EBF10 MOV X19, X0
	0x035EBF14 BL 0x3380310
	0x035EBF18 ADRP X0, 0xB4E000
	0x035EBF1C LDR X0, [X0 + 0x628]
	0x035EBF20 BL 0x1C16D08
	0x035EBF24 MOV X1, X0
	0x035EBF28 MOV X0, X19
	0x035EBF2C BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDF6000
	006 Move X20, 0xB4F000
	007 Move W8, [X21+715]
	008 Move X20, [X20+1488]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB4F000
	015 Move X0, [X0+1488]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+715], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call SslClientAuthenticationOptions..ctor, X0
	027 Move [X19+24], X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Void set_CertificateRevocationCheckMode(System.Security.Cryptography.X509Certificates.X509RevocationMode value)

Disassembly:
	0x035EED34 BL 0x1990590
	0x035EED38 STR X30, [X31 - 0x40]!
	0x035EED3C STP X24, X23, [X31 + 0x10]
	0x035EED40 STP X22, X21, [X31 + 0x20]
	0x035EED44 STP X20, X19, [X31 + 0x30]
	0x035EED48 ADRP X19, 0xDF2000
	0x035EED4C ADRP X22, 0xB4B000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call SslClientAuthenticationOptions.set_CertificateRevocationCheckMode, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void set_EncryptionPolicy(System.Net.Security.EncryptionPolicy value)

Disassembly:
	0x035EED50 LDRB W8, [X19 + 0x2D1]
	0x035EED54 LDR X22, [X22 + 0x378]
	0x035EED58 TBNZ X8, 0x0, 0x35EEDB8
	0x035EED5C ADRP X0, 0xB4B000
	0x035EED60 LDR X0, [X0 + 0x7C0]
	0x035EED64 BL 0x1C16CF4
	0x035EED68 ADRP X0, 0xB4B000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call SslClientAuthenticationOptions.set_EncryptionPolicy, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Security.Authentication.SslProtocols get_EnabledSslProtocols()

Disassembly:
	0x035EED6C LDR X0, [X0 + 0x378]
	0x035EED70 BL 0x1C16CF4
	0x035EED74 ADRP X0, 0xB4B000
	0x035EED78 LDR X0, [X0 + 0x7C8]
	0x035EED7C BL 0x1C16CF4
	0x035EED80 ADRP X0, 0xB4B000
	0x035EED84 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_EnabledSslProtocols(System.Security.Authentication.SslProtocols value)

Disassembly:
	0x035EED88 BL 0x1C16CF4
	0x035EED8C ADRP X0, 0xB4B000
	0x035EED90 LDR X0, [X0 + 0x7D8]
	0x035EED94 BL 0x1C16CF4
	0x035EED98 ADRP X0, 0xB33000
	0x035EED9C LDR X0, [X0 + 0xCA0]
	0x035EEDA0 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+24], W1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.String get_TargetHost()

Disassembly:
	0x035EEDA4 ADRP X0, 0xB4B000
	0x035EEDA8 LDR X0, [X0 + 0x370]
	0x035EEDAC BL 0x1C16CF4
	0x035EEDB0 MOVZ W8, 0x1
	0x035EEDB4 STRB W8, [X19 + 0x2D1]
	0x035EEDB8 LDR X0, [X22]
	0x035EEDBC ADRP X24, 0xB4B000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+48]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_TargetHost(System.String value)

Disassembly:
	0x035EEDC0 ADRP X23, 0xB4B000
	0x035EEDC4 ADRP X19, 0xB4B000
	0x035EEDC8 LDR W8, [X0 + 0xE0]
	0x035EEDCC LDR X24, [X24 + 0x7D0]
	0x035EEDD0 LDR X23, [X23 + 0x7D8]
	0x035EEDD4 LDR X19, [X19 + 0x7C8]
	0x035EEDD8 CBNZ W8, 0x35EEDE4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+48], X1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.Boolean get_ClientCertificateRequired()

Disassembly:
	0x035EEDDC BL 0x1C16DFC
	0x035EEDE0 LDR X0, [X22]
	0x035EEDE4 LDR X8, [X0 + 0xB8]
	0x035EEDE8 LDR X0, [X24]
	0x035EEDEC LDP X20, X21, [X8 + 0x28]
	0x035EEDF0 BL 0x1C16F10
	0x035EEDF4 LDR X3, [X23]
	0x035EEDF8 LDR X4, [X19]
	0x035EEDFC MOV X1, X20
	0x035EEE00 MOV X2, X21
	0x035EEE04 MOV X19, X0
	0x035EEE08 BL 0x2702D48
	0x035EEE0C LDR X8, [X22]
	0x035EEE10 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB06000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB4C000
	011 Move X0, [X0+1752]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void set_ClientCertificateRequired(System.Boolean value)

Disassembly:
	0x035EEE14 LDR X0, [X8 + 0x18]
	0x035EEE18 CBZ X0, 0x35EEE74
	0x035EEE1C ADRP X8, 0xB33000
	0x035EEE20 ADRP X20, 0xB4B000
	0x035EEE24 LDR X8, [X8 + 0xCA0]
	0x035EEE28 LDR X20, [X20 + 0x7C0]
	0x035EEE2C MOV X2, X19
	0x035EEE30 LDR X1, [X8]
	0x035EEE34 LDR X3, [X20]
	0x035EEE38 BL 0x2AA5098
	0x035EEE3C LDR X8, [X22]
	0x035EEE40 LDR X8, [X8 + 0xB8]
	0x035EEE44 LDR X0, [X8 + 0x18]
	0x035EEE48 CBZ X0, 0x35EEE74

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB06000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB4C000
	011 Move X0, [X0+1760]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Security.Cryptography.X509Certificates.X509CertificateCollection get_ClientCertificates()

Disassembly:
	0x035EEE4C ADRP X8, 0xB4B000
	0x035EEE50 LDR X8, [X8 + 0x370]
	0x035EEE54 LDR X3, [X20]
	0x035EEE58 MOV X2, X19
	0x035EEE5C LDP X20, X19, [X31 + 0x30]
	0x035EEE60 LDR X1, [X8]
	0x035EEE64 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+56]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_ClientCertificates(System.Security.Cryptography.X509Certificates.X509CertificateCollection value)

Disassembly:
	0x035EEE68 LDP X24, X23, [X31 + 0x10]
	0x035EEE6C LDR X30, [X31], #0x40
	0x035EEE70 B 0x2AA5098
	0x035EEE74 BL 0x1C16F20
	0x035EEE78 STP X30, X19, [X31 - 0x10]!
	0x035EEE7C ADRP X19, 0xDF2000
	0x035EEE80 LDRB W8, [X19 + 0x2D2]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+56], X1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Certificate get_ServerCertificate()

Disassembly:
	0x035EEE84 TBNZ X8, 0x0, 0x35EEEC0
	0x035EEE88 ADRP X0, 0xB4B000
	0x035EEE8C LDR X0, [X0 + 0x7C0]
	0x035EEE90 BL 0x1C16CF4
	0x035EEE94 ADRP X0, 0xB4B000
	0x035EEE98 LDR X0, [X0 + 0x378]
	0x035EEE9C BL 0x1C16CF4
	0x035EEEA0 ADRP X0, 0xB33000
	0x035EEEA4 LDR X0, [X0 + 0xCA0]
	0x035EEEA8 BL 0x1C16CF4
	0x035EEEAC ADRP X0, 0xB4B000
	0x035EEEB0 LDR X0, [X0 + 0x768]
	0x035EEEB4 BL 0x1C16CF4
	0x035EEEB8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB06000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB4C000
	011 Move X0, [X0+1768]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void set_ServerCertificate(System.Security.Cryptography.X509Certificates.X509Certificate value)

Disassembly:
	0x035EEEBC STRB W8, [X19 + 0x2D2]
	0x035EEEC0 LDP X30, X19, [X31], #0x10
	0x035EEEC4 RET
	0x035EEEC8 STR X30, [X31 - 0x20]!
	0x035EEECC STP X20, X19, [X31 + 0x10]
	0x035EEED0 ADRP X19, 0xDF2000
	0x035EEED4 ADRP X20, 0xB4B000
	0x035EEED8 LDRB W8, [X19 + 0x2D4]
	0x035EEEDC LDR X20, [X20 + 0x378]
	0x035EEEE0 TBNZ X8, 0x0, 0x35EEEF8
	0x035EEEE4 ADRP X0, 0xB4B000
	0x035EEEE8 LDR X0, [X0 + 0x378]
	0x035EEEEC BL 0x1C16CF4
	0x035EEEF0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB06000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB4C000
	011 Move X0, [X0+1776]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

