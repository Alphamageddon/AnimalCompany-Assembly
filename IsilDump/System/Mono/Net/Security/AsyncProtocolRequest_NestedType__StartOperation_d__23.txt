Type: Mono.Net.Security.AsyncProtocolRequest/<StartOperation>d__23

Method: System.Void MoveNext()

Disassembly:
	0x035E9110 MOV X21, X0
	0x035E9114 TBNZ X8, 0x0, 0x35E9150
	0x035E9118 ADRP X0, 0xB39000
	0x035E911C LDR X0, [X0 + 0xDA8]
	0x035E9120 BL 0x1C16CF4
	0x035E9124 ADRP X0, 0xB50000
	0x035E9128 LDR X0, [X0 + 0x4C8]
	0x035E912C BL 0x1C16CF4
	0x035E9130 ADRP X0, 0xB39000
	0x035E9134 LDR X0, [X0 + 0xDB8]
	0x035E9138 BL 0x1C16CF4
	0x035E913C ADRP X0, 0xB39000
	0x035E9140 LDR X0, [X0 + 0xDA0]
	0x035E9144 BL 0x1C16CF4
	0x035E9148 MOVZ W8, 0x1
	0x035E914C STRB W8, [X24 + 0x2BD]
	0x035E9150 LDR X0, [X23]
	0x035E9154 AND W8, W22, 0x1
	0x035E9158 MOVI V0.2D, 0x0
	0x035E915C STR X31, [X31 + 0x60]
	0x035E9160 STP V0, V0, [X31 + 0x40]
	0x035E9164 STP V0, V0, [X31 + 0x20]
	0x035E9168 STRB W8, [X31 + 0x54]
	0x035E916C STR W20, [X31 + 0x50]
	0x035E9170 STP X21, X19, [X31 + 0x40]
	0x035E9174 ADRP X21, 0xB39000
	0x035E9178 ADRP X19, 0xB50000
	0x035E917C ADRP X20, 0xB39000
	0x035E9180 LDR W8, [X0 + 0xE0]
	0x035E9184 LDR X21, [X21 + 0xDA8]
	0x035E9188 LDR X19, [X19 + 0x4C8]
	0x035E918C LDR X20, [X20 + 0xDB8]
	0x035E9190 CBNZ W8, 0x35E9198
	0x035E9194 BL 0x1C16DFC
	0x035E9198 LDR X0, [X21]
	0x035E919C ADD X8, X31, 0x8
	0x035E91A0 BL 0x263005C
	0x035E91A4 LDUR V0, [X31 + 0x8]
	0x035E91A8 LDR X9, [X31 + 0x18]
	0x035E91AC LDR X2, [X19]
	0x035E91B0 ADD X8, X31, 0x20
	0x035E91B4 ORR X19, X8, 0xF
	0x035E91B8 MOVN W10, 0x0
	0x035E91BC ADD X1, X31, 0x20
	0x035E91C0 MOV X0, X19
	0x035E91C4 STUR V0, [X31 + 0x28]
	0x035E91C8 STR X9, [X31 + 0x38]
	0x035E91CC STR W10, [X31 + 0x20]
	0x035E91D0 BL 0x1FADCD4
	0x035E91D4 LDR X1, [X20]
	0x035E91D8 MOV X0, X19
	0x035E91DC BL 0x2630070
	0x035E91E0 LDP X20, X19, [X31 + 0xA0]
	0x035E91E4 LDP X22, X21, [X31 + 0x90]
	0x035E91E8 LDP X24, X23, [X31 + 0x80]
	0x035E91EC LDR X30, [X31 + 0x70]
	0x035E91F0 ADD X31, X31, 0xB0
	0x035E91F4 RET
	0x035E91F8 STR X30, [X31 - 0x30]!
	0x035E91FC STP X22, X21, [X31 + 0x10]
	0x035E9200 STP X20, X19, [X31 + 0x20]
	0x035E9204 ADRP X22, 0xDF7000
	0x035E9208 ADRP X21, 0xB50000
	0x035E920C LDRB W8, [X22 + 0x2A6]
	0x035E9210 LDR X21, [X21 + 0x3F8]
	0x035E9214 MOV X19, X1
	0x035E9218 MOV X20, X0
	0x035E921C TBNZ X8, 0x0, 0x35E9240
	0x035E9220 ADRP X0, 0xB50000
	0x035E9224 LDR X0, [X0 + 0x4D0]
	0x035E9228 BL 0x1C16CF4
	0x035E922C ADRP X0, 0xB50000
	0x035E9230 LDR X0, [X0 + 0x3F8]
	0x035E9234 BL 0x1C16CF4
	0x035E9238 MOVZ W8, 0x1
	0x035E923C STRB W8, [X22 + 0x2A6]
	0x035E9240 LDR X0, [X21]
	0x035E9244 ADRP X21, 0xB50000
	0x035E9248 LDR W8, [X0 + 0xE0]
	0x035E924C LDR X21, [X21 + 0x4D0]
	0x035E9250 CBNZ W8, 0x35E9258
	0x035E9254 BL 0x1C16DFC
	0x035E9258 LDR X2, [X21]
	0x035E925C ADD X0, X20, 0x8
	0x035E9260 MOV X1, X19
	0x035E9264 LDP X20, X19, [X31 + 0x20]
	0x035E9268 LDP X22, X21, [X31 + 0x10]
	0x035E926C LDR X30, [X31], #0x30
	0x035E9270 B 0x24DA970
	0x035E9274 AND W2, W2, 0x1
	0x035E9278 B 0x35E7CAC
	0x035E927C STR X30, [X31 - 0x10]!
	0x035E9280 LDR X0, [X0 + 0x10]
	0x035E9284 CBZ X0, 0x35E9294
	0x035E9288 MOV W2, W31
	0x035E928C LDR X30, [X31], #0x10
	0x035E9290 B 0x35E9298
	0x035E9294 BL 0x1C16F20
	0x035E9298 STR X30, [X31 - 0x30]!
	0x035E929C STP X22, X21, [X31 + 0x10]
	0x035E92A0 STP X20, X19, [X31 + 0x20]
	0x035E92A4 LDR X19, [X0 + 0x70]
	0x035E92A8 MOV W22, W2
	0x035E92AC MOV W21, W1
	0x035E92B0 MOV X20, X0
	0x035E92B4 STRB W31, [X31 + 0xC]
	0x035E92B8 ADD X1, X31, 0xC
	0x035E92BC MOV X0, X19
	0x035E92C0 MOV X2, X31
	0x035E92C4 BL 0x33DE64C
	0x035E92C8 LDR W8, [X20 + 0x80]
	0x035E92CC CMP W8, 0x3
	0x035E92D0 B.HI 0x35E9468
	0x035E92D4 ADRP X9, 0xFFFFFFFFFD5AD000
	0x035E92D8 ADD X9, X9, 0xE08
	0x035E92DC ADR X10, 0x10
	0x035E92E0 LDRB W11, [X9, X8, LSL]
	0x035E92E4 ADD X10, X10, X11, 0x2, LSL
	0x035E92E8 BR X10
	0x035E92EC CBZ W21, 0x35E9350
	0x035E92F0 CMP W21, 0x1
	0x035E92F4 B.NE 0x35E93E0
	0x035E92F8 LDR X0, [X20 + 0x38]
	0x035E92FC CBZ X0, 0x35E9464
	0x035E9300 LDR X8, [X0]
	0x035E9304 LDP X9, X1, [X8 + 0x1A8]
	0x035E9308 BLR X9
	0x035E930C TBZ X0, 0x0, 0x35E938C
	0x035E9310 LDR X0, [X20 + 0x38]
	0x035E9314 CBZ X0, 0x35E9500
	0x035E9318 LDR X8, [X0]
	0x035E931C LDP X9, X1, [X8 + 0x1B8]
	0x035E9320 BLR X9
	0x035E9324 MOVZ W8, 0x2
	0x035E9328 MOVZ W21, 0x3
	0x035E932C STR W8, [X20 + 0x80]
	0x035E9330 B 0x35E9390
	0x035E9334 TBNZ X22, 0x0, 0x35E9498
	0x035E9338 MOVZ W8, 0x1
	0x035E933C B 0x35E9348
	0x035E9340 TBZ X22, 0x0, 0x35E94C8
	0x035E9344 MOVZ W8, 0x3
	0x035E9348 STR W8, [X20 + 0x80]
	0x035E934C CBNZ W21, 0x35E92F0
	0x035E9350 LDR X0, [X20 + 0x38]
	0x035E9354 TBZ X22, 0x0, 0x35E9370
	0x035E9358 CBZ X0, 0x35E94F8
	0x035E935C LDR X8, [X0]
	0x035E9360 LDR X1, [X8 + 0x230]
	0x035E9364 LDR X9, [X8 + 0x228]
	0x035E9368 BLR X9
	0x035E936C B 0x35E9380
	0x035E9370 CBZ X0, 0x35E94FC
	0x035E9374 LDR X8, [X0]
	0x035E9378 LDP X9, X1, [X8 + 0x198]
	0x035E937C BLR X9
	0x035E9380 MOV X20, X31
	0x035E9384 MOVZ W21, 0x1
	0x035E9388 B 0x35E93AC
	0x035E938C MOVZ W21, 0x1
	0x035E9390 LDR X0, [X20 + 0x40]
	0x035E9394 CBZ X0, 0x35E93A8
	0x035E9398 MOV X1, X31
	0x035E939C BL 0x32C2440
	0x035E93A0 MOV X20, X31
	0x035E93A4 B 0x35E93AC
	0x035E93A8 MOV X20, X31
	0x035E93AC LDRB W8, [X31 + 0xC]
	0x035E93B0 CBZ W8, 0x35E93C0
	0x035E93B4 MOV X0, X19
	0x035E93B8 MOV X1, X31
	0x035E93BC BL 0x33E14E4
	0x035E93C0 CBNZ X20, 0x35E93D8
	0x035E93C4 MOV W0, W21
	0x035E93C8 LDP X20, X19, [X31 + 0x20]
	0x035E93CC LDP X22, X21, [X31 + 0x10]
	0x035E93D0 LDR X30, [X31], #0x30
	0x035E93D4 RET
	0x035E93D8 MOV X0, X20
	0x035E93DC BL 0x1C16F18
	0x035E93E0 CMP W21, 0x2
	0x035E93E4 B.NE 0x35E9430
	0x035E93E8 ADRP X0, 0xB38000
	0x035E93EC LDR X0, [X0 + 0x7A8]
	0x035E93F0 BL 0x1C16D08
	0x035E93F4 BL 0x1C16F10
	0x035E93F8 MOV X20, X0
	0x035E93FC ADRP X0, 0xB50000
	0x035E9400 LDR X0, [X0 + 0x4D8]
	0x035E9404 BL 0x1C16D08
	0x035E9408 MOV X1, X0
	0x035E940C MOV X0, X20
	0x035E9410 MOV X2, X31
	0x035E9414 BL 0x32E16BC
	0x035E9418 ADRP X0, 0xB50000
	0x035E941C LDR X0, [X0 + 0x4E0]
	0x035E9420 BL 0x1C16D08
	0x035E9424 MOV X1, X0
	0x035E9428 MOV X0, X20
	0x035E942C BL 0x1C16DEC
	0x035E9430 ADRP X0, 0xB0A000
	0x035E9434 LDR X0, [X0 + 0x5B0]
	0x035E9438 BL 0x1C16D08
	0x035E943C BL 0x1C16F10
	0x035E9440 MOV X20, X0
	0x035E9444 MOV X1, X31
	0x035E9448 BL 0x337DEC0
	0x035E944C ADRP X0, 0xB50000
	0x035E9450 LDR X0, [X0 + 0x4E0]
	0x035E9454 BL 0x1C16D08
	0x035E9458 MOV X1, X0
	0x035E945C MOV X0, X20
	0x035E9460 BL 0x1C16DEC
	0x035E9464 BL 0x1C16F20
	0x035E9468 ADRP X0, 0xB50000
	0x035E946C LDR X0, [X0 + 0x318]
	0x035E9470 BL 0x1C16D08
	0x035E9474 LDR W8, [X0 + 0xE0]
	0x035E9478 CBNZ W8, 0x35E9480
	0x035E947C BL 0x1C16DFC
	0x035E9480 BL 0x35EAC5C
	0x035E9484 ADRP X0, 0xB50000
	0x035E9488 LDR X0, [X0 + 0x4E0]
	0x035E948C BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xDF8000
	009 Move W8, [X20+673]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB51000
	016 Move X0, [X0+1056]
	017 Call 0x1C17CF4
	018 Move X0, 0xB51000
	019 Move X0, [X0+1064]
	020 Call 0x1C17CF4
	021 Move X0, 0xB51000
	022 Move X0, [X0+1072]
	023 Call 0x1C17CF4
	024 Move X0, 0xB51000
	025 Move X0, [X0+976]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+673], W8
	029 Move [X31], X31
	030 Move [X31+8], X31
	031 Move X23, 0xB51000
	032 Move W8, [X19]
	033 Move X20, [X19+32]
	034 Move X23, [X23+976]
	035 Compare W8, 0
	036 JumpIfEqual {78}
	037 Compare X20, 0
	038 JumpIfEqual {124}
	039 Add X0, X20, 32
	040 Move W1, 1
	041 Move W2, W31
	042 Move X3, X31
	043 Call Interlocked.CompareExchange, X0, X1, X2
	044 Compare W0, 0
	045 JumpIfNotEqual {125}
	046 Move X1, [X19+40]
	047 Move X0, X20
	048 Call AsyncProtocolRequest.ProcessOperation, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {138}
	051 Move W1, W31
	052 Move X2, X31
	053 Call Task.ConfigureAwait, X0, X1
	054 Move [X31], X0
	055 Move [X31+8], X1
	056 Add X0, X31, 0
	057 Move X1, X31
	058 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {86}
	063 Move [X19], W31
	064 Move V0, [X31]
	065 Move [X19+3], V0
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X8, 0xB51000
	072 Move X8, [X8+1064]
	073 Add X0, X19, 8
	074 Move X3, [X8]
	075 Add X1, X31, 0
	076 Move X2, X19
	077 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	078 Move V0, [X19+3]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W8, TEMP
	082 Move [X31], V0
	083 Move [X19+48], X31
	084 Move [X19+56], X31
	085 Move [X19], W8
	086 Add X0, X31, 0
	087 Move X1, X31
	088 Call ConfiguredTaskAwaiter.GetResult, X0
	089 Compare X20, 0
	090 JumpIfEqual {123}
	091 Move X8, 0xB51000
	092 Move X8, [X8+1056]
	093 Move W22, [X20+28]
	094 Move X0, [X8]
	095 Call 0x1C17F10
	096 Move X21, X0
	097 Move X1, X31
	098 Call Object..ctor, X0
	099 Move [X21+16], W22
	100 Move TEMP, 1
	101 Not TEMP
	102 Move W8, TEMP
	103 Move [X19+8], W8
	104 Move X0, [X23]
	105 Move X20, 0xB51000
	106 Move W8, [X0+224]
	107 Move X20, [X20+1072]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X2, [X20]
	112 Move X0, X19
	113 Move X1, X21
	114 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X30, [X31+16]
	120 Move X23, [X31+24]
	121 Add X31, X31, 64
	122 Return 
	123 Call 0x1C17F20
	124 Call 0x1C17F20
	125 Move X0, 0xB0B000
	126 Move X0, [X0+1456]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X20, X0
	130 Move X1, X31
	131 Call InvalidOperationException..ctor, X0
	132 Move X0, 0xB51000
	133 Move X0, [X0+1080]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X20
	137 Call 0x1C17DEC
	138 Call 0x1C17F20
	139 Move X22, X1
	140 Move X21, X0
	141 Move X22, X1
	142 Move X21, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X21
	145 Call 0x3EB2AD0
	146 Move X21, X0
	147 Move X0, 0xB0B000
	148 Move X0, [X0+2000]
	149 Call 0x1C17D08
	150 Move X8, [X21]
	151 Move X1, [X8]
	152 Call 0x1C18270
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {182}
	157 Move X21, [X21]
	158 Call 0x3EB2AE0
	159 Compare X20, 0
	160 JumpIfEqual {190}
	161 Move X22, [X20+16]
	162 Compare X22, 0
	163 JumpIfEqual {191}
	164 Move X0, X21
	165 Move X1, X31
	166 Call ExceptionDispatchInfo.Capture, X0
	167 Move X20, X0
	168 Add X0, X22, 64
	169 Move X1, X20
	170 Move X2, X31
	171 Call 0x1C25138
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction CSEL not yet implemented."
	174 Move X0, 0xB51000
	175 Move X0, [X0+1056]
	176 Call 0x1C17D08
	177 Call 0x1C17F10
	178 Move X21, X0
	179 Move X1, X31
	180 Call Object..ctor, X0
	181 Move [X21+24], X20
	182 Move W0, 8
	183 Call 0x3EB2AF0
	184 Move X8, [X21]
	185 Move [X0], X8
	186 Move X1, 0x8CC000
	187 Add X1, X1, 3672
	188 Move X2, X31
	189 Call 0x3EB2B00
	190 Call 0x1C17F20
	191 Call 0x1C17F20
	192 Move X22, X1
	193 Move X21, X0
	194 Call 0x3EB2AE0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X21
	197 Call 0x3EB2AD0
	198 Move X20, X0
	199 Move X0, 0xB0B000
	200 Move X0, [X0+2000]
	201 Call 0x1C17D08
	202 Move X8, [X20]
	203 Move X1, [X8]
	204 Call 0x1C18270
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {229}
	209 Move X20, [X20]
	210 Call 0x3EB2AE0
	211 Move TEMP, 1
	212 Not TEMP
	213 Move W8, TEMP
	214 Move [X19+8], W8
	215 Move X0, 0xB51000
	216 Move X0, [X0+976]
	217 Call 0x1C17D08
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X0, 0xB51000
	223 Move X0, [X0+1088]
	224 Call 0x1C17D08
	225 Move X2, X0
	226 Move X0, X19
	227 Move X1, X20
	228 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	229 Move W0, 8
	230 Call 0x3EB2AF0
	231 Move X8, [X20]
	232 Move [X0], X8
	233 Move X1, 0x8CC000
	234 Add X1, X1, 3672
	235 Move X2, X31
	236 Call 0x3EB2B00
	237 Move X21, X0
	238 Call 0x3EB2AE0
	239 Move X0, X21
	240 Call 0x1D2D690
	241 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035E94D0 BL 0x1C16D08
	0x035E94D4 LDR W8, [X0 + 0xE0]
	0x035E94D8 CBNZ W8, 0x35E94E0
	0x035E94DC BL 0x1C16DFC
	0x035E94E0 BL 0x35EAC5C
	0x035E94E4 ADRP X0, 0xB50000
	0x035E94E8 LDR X0, [X0 + 0x4E0]
	0x035E94EC BL 0x1C16D08
	0x035E94F0 MOV X1, X0
	0x035E94F4 BL 0x1C16DEC
	0x035E94F8 BL 0x1C16F20
	0x035E94FC BL 0x1C16F20
	0x035E9500 BL 0x1C16F20
	0x035E9504 B 0x35E95FC
	0x035E9508 B 0x35E95FC
	0x035E950C B 0x35E95FC
	0x035E9510 B 0x35E95FC
	0x035E9514 B 0x35E95FC
	0x035E9518 B 0x35E9528
	0x035E951C B 0x35E9528
	0x035E9520 B 0x35E95FC
	0x035E9524 B 0x35E95FC
	0x035E9528 MOV X22, X1
	0x035E952C MOV X21, X0
	0x035E9530 CMP W22, 0x1
	0x035E9534 B.NE 0x35E9604
	0x035E9538 MOV X0, X21
	0x035E953C BL 0x3EB1AD0
	0x035E9540 MOV X21, X0
	0x035E9544 ADRP X0, 0xB0A000
	0x035E9548 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDF8000
	007 Move X21, 0xB51000
	008 Move W8, [X22+674]
	009 Move X21, [X21+976]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB51000
	017 Move X0, [X0+1096]
	018 Call 0x1C17CF4
	019 Move X0, 0xB51000
	020 Move X0, [X0+976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+674], W8
	024 Move X0, [X21]
	025 Move X21, 0xB51000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1096]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

