Type: Mono.SystemCertificateProvider

Method: Mono.X509PalImpl GetX509Pal()

Disassembly:
	0x035E1834 LDR X8, [X19]
	0x035E1838 LDR X1, [X8]
	0x035E183C BL 0x1C17270
	0x035E1840 TBNZ X0, 0x0, 0x35E18C4
	0x035E1844 MOVZ W0, 0x8
	0x035E1848 BL 0x3EB1AF0
	0x035E184C LDR X8, [X19]
	0x035E1850 STR X8, [X0]
	0x035E1854 ADRP X1, 0x8D3000
	0x035E1858 ADD X1, X1, 0xE58
	0x035E185C MOV X2, X31
	0x035E1860 BL 0x3EB1B00
	0x035E1864 B 0x35E18FC
	0x035E1868 MOV X19, X0
	0x035E186C BL 0x3EB1AE0
	0x035E1870 B 0x35E1904
	0x035E1874 B 0x35E1890
	0x035E1878 B 0x35E1890
	0x035E187C B 0x35E1890
	0x035E1880 B 0x35E1890

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE00000
	005 Move X20, 0xB59000
	006 Move W8, [X19+618]
	007 Move X20, [X20+424]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB59000
	013 Move X0, [X0+424]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+618], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call X509PalImplMono..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Void EnsureInitialized()

Disassembly:
	0x035E18DC MOVZ W0, 0x8
	0x035E18E0 BL 0x3EB1AF0
	0x035E18E4 LDR X8, [X19]
	0x035E18E8 STR X8, [X0]
	0x035E18EC ADRP X1, 0x8D3000
	0x035E18F0 ADD X1, X1, 0xE58
	0x035E18F4 MOV X2, X31
	0x035E18F8 BL 0x3EB1B00
	0x035E18FC MOV X19, X0
	0x035E1900 BL 0x3EB1AE0
	0x035E1904 MOV X0, X19
	0x035E1908 BL 0x1D2C690
	0x035E190C BL 0x1990590
	0x035E1910 STR X30, [X31 - 0x30]!
	0x035E1914 STP X22, X21, [X31 + 0x10]
	0x035E1918 STP X20, X19, [X31 + 0x20]
	0x035E191C ADRP X21, 0xDFF000
	0x035E1920 ADRP X22, 0xB12000
	0x035E1924 ADRP X19, 0xB58000
	0x035E1928 ADRP X20, 0xB58000
	0x035E192C LDRB W8, [X21 + 0x27A]
	0x035E1930 LDR X22, [X22 + 0x618]
	0x035E1934 LDR X19, [X19 + 0x1F8]
	0x035E1938 LDR X20, [X20 + 0x1B0]
	0x035E193C TBNZ X8, 0x0, 0x35E196C
	0x035E1940 ADRP X0, 0xB12000
	0x035E1944 LDR X0, [X0 + 0x618]
	0x035E1948 BL 0x1C16CF4
	0x035E194C ADRP X0, 0xB58000
	0x035E1950 LDR X0, [X0 + 0x1F8]
	0x035E1954 BL 0x1C16CF4
	0x035E1958 ADRP X0, 0xB58000
	0x035E195C LDR X0, [X0 + 0x1B0]
	0x035E1960 BL 0x1C16CF4
	0x035E1964 MOVZ W8, 0x1
	0x035E1968 STRB W8, [X21 + 0x27A]
	0x035E196C LDR X0, [X22]
	0x035E1970 MOVZ W1, 0x9
	0x035E1974 BL 0x1C16D6C
	0x035E1978 LDR X1, [X19]
	0x035E197C MOV X2, X31
	0x035E1980 MOV X19, X0
	0x035E1984 BL 0x32C5BD8
	0x035E1988 LDR X8, [X20]
	0x035E198C LDP X22, X21, [X31 + 0x10]
	0x035E1990 LDR X8, [X8 + 0xB8]
	0x035E1994 STR X19, [X8]
	0x035E1998 LDP X20, X19, [X31 + 0x20]
	0x035E199C LDR X30, [X31], #0x30
	0x035E19A0 RET
	0x035E19A4 MOV X1, X31
	0x035E19A8 B 0x33A51F0
	0x035E19AC STR X30, [X31 - 0x30]!
	0x035E19B0 STP X22, X21, [X31 + 0x10]
	0x035E19B4 STP X20, X19, [X31 + 0x20]
	0x035E19B8 ADRP X22, 0xDFF000
	0x035E19BC LDRB W8, [X22 + 0x27B]
	0x035E19C0 MOV X19, X2
	0x035E19C4 MOV X20, X1
	0x035E19C8 MOV X21, X0
	0x035E19CC TBNZ X8, 0x0, 0x35E19E4
	0x035E19D0 ADRP X0, 0xB12000
	0x035E19D4 LDR X0, [X0 + 0xE00]
	0x035E19D8 BL 0x1C16CF4
	0x035E19DC MOVZ W8, 0x1
	0x035E19E0 STRB W8, [X22 + 0x27B]
	0x035E19E4 CBZ X20, 0x35E1AB8
	0x035E19E8 ADRP X22, 0xB12000
	0x035E19EC LDR X22, [X22 + 0xE00]
	0x035E19F0 MOV X0, X20
	0x035E19F4 MOV X1, X31
	0x035E19F8 BL 0x3657BAC
	0x035E19FC MOV X20, X0
	0x035E1A00 CBZ X0, 0x35E1ABC
	0x035E1A04 MOV X0, X20
	0x035E1A08 MOV X1, X31
	0x035E1A0C BL 0x3657FB0
	0x035E1A10 TBZ X0, 0x0, 0x35E1A34
	0x035E1A14 MOV X0, X20
	0x035E1A18 MOV X1, X31
	0x035E1A1C BL 0x3657CD8
	0x035E1A20 MOV X1, X0
	0x035E1A24 MOV X0, X21
	0x035E1A28 MOV X2, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xE00000
	007 Move X21, 0xB59000
	008 Move W8, [X19+619]
	009 Move X21, [X21+440]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB59000
	015 Move X0, [X0+440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+619], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X21]
	025 Move X8, [X0+184]
	026 Move X19, [X8+16]
	027 Move [X31+12], W31
	028 Add X1, X31, 12
	029 Move X0, X19
	030 Move X2, X31
	031 Call Monitor.Enter, X0, X1
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X0, [X0+184]
	039 Move W1, 1
	040 Move W2, W31
	041 Move X3, X31
	042 Call Interlocked.CompareExchange, X0, X1, X2
	043 Compare W0, 0
	044 JumpIfEqual {46}
	045 Move X20, X31
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Call SystemCertificateProvider.GetX509Pal
	052 Move X8, [X21]
	053 Move X20, X31
	054 Move X8, [X8+184]
	055 Move [X8+8], X0
	056 Move W8, [X31+12]
	057 Compare W8, 0
	058 JumpIfEqual {62}
	059 Move X0, X19
	060 Move X1, X31
	061 Call Monitor.Exit, X0
	062 Compare X20, 0
	063 JumpIfNotEqual {70}
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X30, [X31+16]
	067 Move X21, [X31+24]
	068 Add X31, X31, 48
	069 Return 
	070 Move X0, X20
	071 Call 0x1C17F18
	072 Move X21, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X21
	075 Call 0x3EB2AD0
	076 Move X20, [X0]
	077 Call 0x3EB2AE0
	078 Move X20, X31
	079 Move X21, X0
	080 Move W8, [X31+12]
	081 Compare W8, 0
	082 JumpIfEqual {86}
	083 Move X0, X19
	084 Move X1, X31
	085 Call Monitor.Exit, X0
	086 Compare X20, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X21
	089 Call 0x1D2D690
	090 Move X0, X20
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: Mono.X509PalImpl get_X509Pal()

Disassembly:
	0x035E1A2C BL 0x35E1B84
	0x035E1A30 B 0x35E1A04
	0x035E1A34 MOV X19, X31
	0x035E1A38 LDR X1, [X22]
	0x035E1A3C MOV X0, X20
	0x035E1A40 BL 0x1C16E00
	0x035E1A44 CBZ X0, 0x35E1AA4
	0x035E1A48 LDR X8, [X0]
	0x035E1A4C LDR X1, [X22]
	0x035E1A50 MOV X20, X0
	0x035E1A54 LDRH W9, [X8 + 0x12E]
	0x035E1A58 CBZ X9, 0x35E1A7C
	0x035E1A5C LDR X10, [X8 + 0xB0]
	0x035E1A60 ADD X10, X10, 0x8
	0x035E1A64 LDUR X11, [X10 - 0x8]
	0x035E1A68 CMP X11, X1
	0x035E1A6C B.EQ 0x35E1A8C
	0x035E1A70 SUBS X9, X9, 0x1
	0x035E1A74 ADD X10, X10, 0x10
	0x035E1A78 B.NE 0x35E1A64
	0x035E1A7C MOV X0, X20
	0x035E1A80 MOV W2, W31
	0x035E1A84 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE00000
	005 Move X19, 0xB59000
	006 Move W8, [X20+620]
	007 Move X19, [X19+440]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB59000
	013 Move X0, [X0+440]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+620], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call SystemCertificateProvider.EnsureInitialized
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8+8]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Security.Cryptography.X509Certificates.X509CertificateImpl Import(System.Byte[] data, Mono.CertificateImportFlags importFlags = 0)

Disassembly:
	0x035E1A88 B 0x35E1A98
	0x035E1A8C LDRSW X9, [X10]
	0x035E1A90 ADD X8, X8, X9, 0x4, LSL
	0x035E1A94 ADD X0, X8, 0x138
	0x035E1A98 LDP X8, X1, [X0]
	0x035E1A9C MOV X0, X20
	0x035E1AA0 BLR X8
	0x035E1AA4 CBNZ X19, 0x35E1AC0
	0x035E1AA8 LDP X20, X19, [X31 + 0x20]
	0x035E1AAC LDP X22, X21, [X31 + 0x10]
	0x035E1AB0 LDR X30, [X31], #0x30
	0x035E1AB4 RET
	0x035E1AB8 BL 0x1C16F20
	0x035E1ABC BL 0x1C16F20
	0x035E1AC0 MOV X0, X19
	0x035E1AC4 BL 0x1C16F18
	0x035E1AC8 B 0x35E1AD4
	0x035E1ACC B 0x35E1AD4
	0x035E1AD0 B 0x35E1AD4
	0x035E1AD4 MOV X21, X0
	0x035E1AD8 CMP W1, 0x1
	0x035E1ADC B.NE 0x35E1AF4
	0x035E1AE0 MOV X0, X21
	0x035E1AE4 BL 0x3EB1AD0
	0x035E1AE8 LDR X19, [X0]
	0x035E1AEC BL 0x3EB1AE0
	0x035E1AF0 B 0x35E1A38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {36}
	006 Move X8, [X1+24]
	007 Move X19, X1
	008 Compare X8, 0
	009 JumpIfEqual {36}
	010 Move W20, W2
	011 Move TEMP, X2
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {25}
	015 Call SystemCertificateProvider.get_X509Pal, X0
	016 Compare X0, 0
	017 JumpIfEqual {41}
	018 Move X8, [X0]
	019 Move X1, X19
	020 Move X9, [X8+376]
	021 Move X2, [X8+384]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfNotEqual {37}
	025 Move TEMP, X20
	026 And TEMP, TEMP, 2
	027 Compare TEMP, 2
	028 JumpIfEqual {36}
	029 Call SystemCertificateProvider.get_X509Pal, X0
	030 Compare X0, 0
	031 JumpIfEqual {41}
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X0, X31
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0
	041 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509CertificateImpl Mono.ISystemCertificateProvider.Import(System.Byte[] data, Microsoft.Win32.SafeHandles.SafePasswordHandle password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags, Mono.CertificateImportFlags importFlags)

Disassembly:
	0x035E1CE8 MOV X23, X0

ISIL:
No ISIL was generated
Method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl Import(System.Byte[] data, Microsoft.Win32.SafeHandles.SafePasswordHandle password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags, Mono.CertificateImportFlags importFlags = 0)

Disassembly:
	0x035E1CEC MOV X0, X8
	0x035E1CF0 BL 0x1C16F10
	0x035E1CF4 MOV X1, X23
	0x035E1CF8 MOV X2, X31
	0x035E1CFC MOV X24, X0
	0x035E1D00 BL 0x326AF10
	0x035E1D04 MOV X0, X20
	0x035E1D08 MOV X1, X24
	0x035E1D0C MOV X2, X19
	0x035E1D10 BL 0x35E1B84
	0x035E1D14 MOV X0, X21
	0x035E1D18 MOV X1, X31
	0x035E1D1C ADD W22, W22, 0x1
	0x035E1D20 BL 0x3658278
	0x035E1D24 CMP W22, W0
	0x035E1D28 B.LT 0x35E1CD4
	0x035E1D2C B 0x35E1C7C
	0x035E1D30 BL 0x1C16F20
	0x035E1D34 STR X30, [X31 - 0x20]!
	0x035E1D38 STP X20, X19, [X31 + 0x10]
	0x035E1D3C ADRP X19, 0xDFF000
	0x035E1D40 ADRP X20, 0xB58000
	0x035E1D44 LDRB W8, [X19 + 0x27D]
	0x035E1D48 LDR X20, [X20 + 0x200]
	0x035E1D4C TBNZ X8, 0x0, 0x35E1D7C
	0x035E1D50 ADRP X0, 0xB58000
	0x035E1D54 LDR X0, [X0 + 0x208]
	0x035E1D58 BL 0x1C16CF4
	0x035E1D5C ADRP X0, 0xB3A000
	0x035E1D60 LDR X0, [X0 + 0x850]
	0x035E1D64 BL 0x1C16CF4
	0x035E1D68 ADRP X0, 0xB58000
	0x035E1D6C LDR X0, [X0 + 0x200]
	0x035E1D70 BL 0x1C16CF4
	0x035E1D74 MOVZ W8, 0x1
	0x035E1D78 STRB W8, [X19 + 0x27D]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {46}
	008 Move X8, [X1+24]
	009 Move X21, X1
	010 Compare X8, 0
	011 JumpIfEqual {46}
	012 Move W22, W4
	013 Move W19, W3
	014 Move X20, X2
	015 Move TEMP, X4
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {31}
	019 Call SystemCertificateProvider.get_X509Pal, X0
	020 Compare X0, 0
	021 JumpIfEqual {53}
	022 Move X8, [X0]
	023 Move X1, X21
	024 Move X2, X20
	025 Move W3, W19
	026 Move X9, [X8+392]
	027 Move X4, [X8+400]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X0, 0
	030 JumpIfNotEqual {47}
	031 Move TEMP, X22
	032 And TEMP, TEMP, 2
	033 Compare TEMP, 2
	034 JumpIfEqual {46}
	035 Call SystemCertificateProvider.get_X509Pal, X0
	036 Compare X0, 0
	037 JumpIfEqual {53}
	038 Move X1, X21
	039 Move X2, X20
	040 Move W3, W19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X0, X31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509CertificateImpl Mono.ISystemCertificateProvider.Import(System.Security.Cryptography.X509Certificates.X509Certificate cert, Mono.CertificateImportFlags importFlags)

Disassembly:
	0x035E1DF0 LDP X20, X19, [X31 + 0x10]

ISIL:
No ISIL was generated
Method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl Import(System.Security.Cryptography.X509Certificates.X509Certificate cert, Mono.CertificateImportFlags importFlags = 0)

Disassembly:
	0x035E1DF4 LDR X30, [X31], #0x20
	0x035E1DF8 RET
	0x035E1DFC UBFM X8, X0, 0x20, 0x3F
	0x035E1E00 CBNZ W8, 0x35E1E08
	0x035E1E04 RET
	0x035E1E08 SUB X31, X31, 0x30
	0x035E1E0C STP X30, X21, [X31 + 0x10]
	0x035E1E10 STP X20, X19, [X31 + 0x20]
	0x035E1E14 STR W8, [X31 + 0xC]
	0x035E1E18 ADRP X0, 0xB58000
	0x035E1E1C LDR X0, [X0 + 0x210]
	0x035E1E20 MOV W19, W3
	0x035E1E24 MOV X20, X2
	0x035E1E28 BL 0x1C16D08
	0x035E1E2C ADD X1, X31, 0xC
	0x035E1E30 BL 0x1C16E04
	0x035E1E34 MOV X21, X0
	0x035E1E38 ADRP X0, 0xB58000
	0x035E1E3C LDR X0, [X0 + 0x218]
	0x035E1E40 BL 0x1C16D08
	0x035E1E44 MOV X1, X20
	0x035E1E48 MOV X2, X21
	0x035E1E4C MOV X3, X31
	0x035E1E50 BL 0x3227BD4
	0x035E1E54 MOV X20, X0
	0x035E1E58 ADRP X0, 0xB58000
	0x035E1E5C LDR X0, [X0 + 0x220]
	0x035E1E60 BL 0x1C16D08
	0x035E1E64 BL 0x1C16F10
	0x035E1E68 MOV W1, W19
	0x035E1E6C MOV X2, X20
	0x035E1E70 MOV X3, X31
	0x035E1E74 MOV X21, X0
	0x035E1E78 BL 0x31FDB0C
	0x035E1E7C ADRP X0, 0xB58000
	0x035E1E80 LDR X0, [X0 + 0x228]
	0x035E1E84 BL 0x1C16D08
	0x035E1E88 MOV X1, X0
	0x035E1E8C MOV X0, X21
	0x035E1E90 BL 0x1C16DEC
	0x035E1E94 CBNZ W2, 0x35E1EA4
	0x035E1E98 MOV X2, X3
	0x035E1E9C MOV W3, W4
	0x035E1EA0 B 0x35E1DFC
	0x035E1EA4 STR X30, [X31 - 0x30]!
	0x035E1EA8 STP X22, X21, [X31 + 0x10]
	0x035E1EAC STP X20, X19, [X31 + 0x20]
	0x035E1EB0 UBFM X21, X0, 0x20, 0x3F
	0x035E1EB4 MOV W0, W2
	0x035E1EB8 MOV W1, W4
	0x035E1EBC MOV X19, X3
	0x035E1EC0 MOV W22, W2
	0x035E1EC4 BL 0x35E1F64
	0x035E1EC8 MOV W20, W0
	0x035E1ECC STR W21, [X31 + 0xC]
	0x035E1ED0 ADRP X0, 0xB58000
	0x035E1ED4 LDR X0, [X0 + 0x210]
	0x035E1ED8 BL 0x1C16D08
	0x035E1EDC ADD X1, X31, 0xC
	0x035E1EE0 BL 0x1C16E04
	0x035E1EE4 MOV X21, X0
	0x035E1EE8 STR W22, [X31 + 0x8]
	0x035E1EEC ADRP X0, 0xB58000
	0x035E1EF0 LDR X0, [X0 + 0x230]
	0x035E1EF4 BL 0x1C16D08
	0x035E1EF8 ADD X1, X31, 0x8
	0x035E1EFC BL 0x1C16E04
	0x035E1F00 MOV X22, X0
	0x035E1F04 ADRP X0, 0xB58000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE00000
	006 Move W8, [X21+621]
	007 Move W20, W2
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB59000
	014 Move X0, [X0+456]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+621], W8
	018 Compare X19, 0
	019 JumpIfEqual {88}
	020 Move X0, [X19+16]
	021 Compare X0, 0
	022 JumpIfEqual {83}
	023 Move X21, 0xB59000
	024 Move X21, [X21+456]
	025 Move X8, [X0]
	026 Move X9, [X21]
	027 Move W11, [X8+304]
	028 Move W10, [X9+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X11, [X8+200]
	031 Add X10, X11, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move TEMP, X20
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {48}
	038 Call SystemCertificateProvider.get_X509Pal, X0
	039 Compare X0, 0
	040 JumpIfEqual {88}
	041 Move X8, [X0]
	042 Move X1, X19
	043 Move X9, [X8+408]
	044 Move X2, [X8+416]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfNotEqual {83}
	048 Move TEMP, X20
	049 And TEMP, TEMP, 2
	050 Compare TEMP, 2
	051 JumpIfEqual {68}
	052 Call SystemCertificateProvider.get_X509Pal, X0
	053 Move X8, [X19]
	054 Move X20, X0
	055 Move X0, X19
	056 Move X9, [X8+504]
	057 Move X1, [X8+512]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X20, 0
	060 JumpIfEqual {88}
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X1, X0
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Call X509PalImpl.ImportFallback, X0, X1
	067 Return X0
	068 Move X0, X31
	069 Move X9, [X8+408]
	070 Move X1, [X8+416]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X0, 0
	073 JumpIfEqual {83}
	074 Move X8, [X0]
	075 Move X1, [X21]
	076 Move W10, [X8+304]
	077 Move W9, [X1+304]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, [X8+200]
	080 Add X8, X8, X9
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 Return X0
	088 Call 0x1C17F20
	089 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x035E1F08 LDR X0, [X0 + 0x238]
	0x035E1F0C BL 0x1C16D08

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x035E1F10 MOV X1, X19
	0x035E1F14 MOV X2, X21
	0x035E1F18 MOV X3, X22
	0x035E1F1C MOV X4, X31
	0x035E1F20 BL 0x3227C18
	0x035E1F24 MOV X19, X0
	0x035E1F28 ADRP X0, 0xB58000
	0x035E1F2C LDR X0, [X0 + 0x220]
	0x035E1F30 BL 0x1C16D08
	0x035E1F34 BL 0x1C16F10
	0x035E1F38 MOV W1, W20
	0x035E1F3C MOV X2, X19
	0x035E1F40 MOV X3, X31
	0x035E1F44 MOV X21, X0
	0x035E1F48 BL 0x31FDB0C
	0x035E1F4C ADRP X0, 0xB58000
	0x035E1F50 LDR X0, [X0 + 0x240]
	0x035E1F54 BL 0x1C16D08
	0x035E1F58 MOV X1, X0
	0x035E1F5C MOV X0, X21
	0x035E1F60 BL 0x1C16DEC
	0x035E1F64 ADDS W31, W0, 0x1
	0x035E1F68 B.EQ 0x35E1F98
	0x035E1F6C MOV W8, W0
	0x035E1F70 TBNZ X0, 0x0, 0x35E1FA0
	0x035E1F74 TBNZ X8, 0x1, 0x35E1FA8
	0x035E1F78 TBNZ X8, 0x2, 0x35E1FB0
	0x035E1F7C TBNZ X8, 0x3, 0x35E1F98

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xE00000
	006 Move X21, 0xB19000
	007 Move X20, 0xB59000
	008 Move W8, [X19+622]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+440]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB19000
	016 Move X0, [X0+3264]
	017 Call 0x1C17CF4
	018 Move X0, 0xB59000
	019 Move X0, [X0+440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+622], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8+16], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

