Type: Mono.Http.NtlmSession

Method: System.Void .ctor()

Disassembly:
	0x035F0C60 LDR W8, [X0 + 0xE0]
	0x035F0C64 CBNZ W8, 0x35F0C6C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Net.Authorization Authenticate(System.String challenge, System.Net.WebRequest webRequest, System.Net.ICredentials credentials)

Disassembly:
	0x035F0C68 BL 0x1C16DFC
	0x035F0C6C MOV X0, X19
	0x035F0C70 MOV W2, W31
	0x035F0C74 BL 0x35F0D1C
	0x035F0C78 STR X0, [X31 + 0x8]
	0x035F0C7C CBZ X0, 0x35F0CC4
	0x035F0C80 LDR X0, [X20]
	0x035F0C84 LDR W8, [X0 + 0xE0]
	0x035F0C88 CBNZ W8, 0x35F0C94
	0x035F0C8C BL 0x1C16DFC
	0x035F0C90 LDR X0, [X20]
	0x035F0C94 LDR X8, [X0 + 0xB8]
	0x035F0C98 LDR X0, [X8 + 0x8]
	0x035F0C9C CBZ X0, 0x35F0D18
	0x035F0CA0 ADRP X8, 0xB49000
	0x035F0CA4 LDR X2, [X31 + 0x8]
	0x035F0CA8 LDR X8, [X8 + 0x898]
	0x035F0CAC MOV X1, X19
	0x035F0CB0 LDR X3, [X8]
	0x035F0CB4 BL 0x298539C
	0x035F0CB8 LDR X0, [X31 + 0x8]
	0x035F0CBC B 0x35F0CC4
	0x035F0CC0 MOV X0, X31
	0x035F0CC4 LDP X20, X19, [X31 + 0x10]
	0x035F0CC8 LDR X30, [X31], #0x20
	0x035F0CCC RET
	0x035F0CD0 ADRP X0, 0xB08000
	0x035F0CD4 LDR X0, [X0 + 0x528]
	0x035F0CD8 BL 0x1C16D08
	0x035F0CDC BL 0x1C16F10
	0x035F0CE0 MOV X19, X0
	0x035F0CE4 ADRP X0, 0xB49000
	0x035F0CE8 LDR X0, [X0 + 0x928]
	0x035F0CEC BL 0x1C16D08
	0x035F0CF0 MOV X1, X0
	0x035F0CF4 MOV X0, X19
	0x035F0CF8 MOV X2, X31
	0x035F0CFC BL 0x330E100
	0x035F0D00 ADRP X0, 0xB49000
	0x035F0D04 LDR X0, [X0 + 0x930]
	0x035F0D08 BL 0x1C16D08
	0x035F0D0C MOV X1, X0
	0x035F0D10 MOV X0, X19
	0x035F0D14 BL 0x1C16DEC
	0x035F0D18 BL 0x1C16F20
	0x035F0D1C STR X30, [X31 - 0x20]!
	0x035F0D20 STP X20, X19, [X31 + 0x10]
	0x035F0D24 ADRP X20, 0xDF0000
	0x035F0D28 LDRB W8, [X20 + 0x2E7]
	0x035F0D2C MOV X19, X0
	0x035F0D30 TBNZ X8, 0x0, 0x35F0E44
	0x035F0D34 ADRP X0, 0xB49000
	0x035F0D38 LDR X0, [X0 + 0x8B8]
	0x035F0D3C BL 0x1C16CF4
	0x035F0D40 ADRP X0, 0xB49000
	0x035F0D44 LDR X0, [X0 + 0x8C0]
	0x035F0D48 BL 0x1C16CF4
	0x035F0D4C ADRP X0, 0xB31000
	0x035F0D50 LDR X0, [X0 + 0x6B0]
	0x035F0D54 BL 0x1C16CF4
	0x035F0D58 ADRP X0, 0xB49000
	0x035F0D5C LDR X0, [X0 + 0x8C8]
	0x035F0D60 BL 0x1C16CF4
	0x035F0D64 ADRP X0, 0xB31000
	0x035F0D68 LDR X0, [X0 + 0x6E0]
	0x035F0D6C BL 0x1C16CF4
	0x035F0D70 ADRP X0, 0xB49000
	0x035F0D74 LDR X0, [X0 + 0x8D0]
	0x035F0D78 BL 0x1C16CF4
	0x035F0D7C ADRP X0, 0xB31000
	0x035F0D80 LDR X0, [X0 + 0x6C0]
	0x035F0D84 BL 0x1C16CF4
	0x035F0D88 ADRP X0, 0xB49000
	0x035F0D8C LDR X0, [X0 + 0x8D8]
	0x035F0D90 BL 0x1C16CF4
	0x035F0D94 ADRP X0, 0xB49000
	0x035F0D98 LDR X0, [X0 + 0x8E0]
	0x035F0D9C BL 0x1C16CF4
	0x035F0DA0 ADRP X0, 0xB33000
	0x035F0DA4 LDR X0, [X0 + 0x5C8]
	0x035F0DA8 BL 0x1C16CF4
	0x035F0DAC ADRP X0, 0xB33000
	0x035F0DB0 LDR X0, [X0 + 0x650]
	0x035F0DB4 BL 0x1C16CF4
	0x035F0DB8 ADRP X0, 0xB49000
	0x035F0DBC LDR X0, [X0 + 0x8E8]
	0x035F0DC0 BL 0x1C16CF4
	0x035F0DC4 ADRP X0, 0xB49000
	0x035F0DC8 LDR X0, [X0 + 0x8F0]
	0x035F0DCC BL 0x1C16CF4
	0x035F0DD0 ADRP X0, 0xB49000
	0x035F0DD4 LDR X0, [X0 + 0x8F8]
	0x035F0DD8 BL 0x1C16CF4
	0x035F0DDC ADRP X0, 0xB49000
	0x035F0DE0 LDR X0, [X0 + 0x900]
	0x035F0DE4 BL 0x1C16CF4
	0x035F0DE8 ADRP X0, 0xB49000
	0x035F0DEC LDR X0, [X0 + 0x908]
	0x035F0DF0 BL 0x1C16CF4
	0x035F0DF4 ADRP X0, 0xB49000
	0x035F0DF8 LDR X0, [X0 + 0x910]
	0x035F0DFC BL 0x1C16CF4
	0x035F0E00 ADRP X0, 0xB33000
	0x035F0E04 LDR X0, [X0 + 0x770]
	0x035F0E08 BL 0x1C16CF4
	0x035F0E0C ADRP X0, 0xB49000
	0x035F0E10 LDR X0, [X0 + 0x918]
	0x035F0E14 BL 0x1C16CF4
	0x035F0E18 ADRP X0, 0xB30000
	0x035F0E1C LDR X0, [X0 + 0xD80]
	0x035F0E20 BL 0x1C16CF4
	0x035F0E24 ADRP X0, 0xB31000
	0x035F0E28 LDR X0, [X0 + 0x228]
	0x035F0E2C BL 0x1C16CF4
	0x035F0E30 ADRP X0, 0xB49000
	0x035F0E34 LDR X0, [X0 + 0x920]
	0x035F0E38 BL 0x1C16CF4
	0x035F0E3C MOVZ W8, 0x1
	0x035F0E40 STRB W8, [X20 + 0x2E7]
	0x035F0E44 MOV X0, X19
	0x035F0E48 MOV X1, X31
	0x035F0E4C BL 0x3626318
	0x035F0E50 MOVZ W8, 0x80DD
	0x035F0E54 MOVK W8, 0x75160000
	0x035F0E58 CMP W0, W8
	0x035F0E5C B.HI 0x35F0EB4
	0x035F0E60 MOVZ W8, 0xB021
	0x035F0E64 MOVK W8, 0x55D80000
	0x035F0E68 CMP W0, W8
	0x035F0E6C B.HI 0x35F0F18
	0x035F0E70 MOVZ W8, 0x710B
	0x035F0E74 MOVK W8, 0x3A50000
	0x035F0E78 CMP W0, W8
	0x035F0E7C B.EQ 0x35F0FC8
	0x035F0E80 MOVZ W8, 0xB021
	0x035F0E84 MOVK W8, 0x55D80000
	0x035F0E88 CMP W0, W8
	0x035F0E8C B.NE 0x35F0FC0
	0x035F0E90 ADRP X8, 0xB49000
	0x035F0E94 LDR X8, [X8 + 0x8F0]
	0x035F0E98 MOV X0, X19
	0x035F0E9C MOV X2, X31
	0x035F0EA0 LDR X1, [X8]
	0x035F0EA4 BL 0x321BA08
	0x035F0EA8 ADRP X8, 0xB30000
	0x035F0EAC LDR X8, [X8 + 0xD80]
	0x035F0EB0 B 0x35F10C0
	0x035F0EB4 MOVZ W8, 0x1663
	0x035F0EB8 MOVK W8, 0xB4300000
	0x035F0EBC CMP W0, W8
	0x035F0EC0 B.HI 0x35F0F6C
	0x035F0EC4 MOVZ W8, 0x2236
	0x035F0EC8 MOVK W8, 0x953B0000
	0x035F0ECC CMP W0, W8
	0x035F0ED0 B.EQ 0x35F0FEC
	0x035F0ED4 MOVZ W8, 0x2034
	0x035F0ED8 MOVK W8, 0x9DCF0000
	0x035F0EDC CMP W0, W8
	0x035F0EE0 B.EQ 0x35F1010
	0x035F0EE4 MOVZ W8, 0x1663
	0x035F0EE8 MOVK W8, 0xB4300000
	0x035F0EEC CMP W0, W8
	0x035F0EF0 B.NE 0x35F0FC0
	0x035F0EF4 ADRP X8, 0xB49000
	0x035F0EF8 LDR X8, [X8 + 0x900]
	0x035F0EFC MOV X0, X19
	0x035F0F00 MOV X2, X31
	0x035F0F04 LDR X1, [X8]
	0x035F0F08 BL 0x321BA08
	0x035F0F0C ADRP X8, 0xB49000
	0x035F0F10 LDR X8, [X8 + 0x8C0]
	0x035F0F14 B 0x35F10C0
	0x035F0F18 MOVZ W8, 0x62EF
	0x035F0F1C MOVK W8, 0x5BEE0000
	0x035F0F20 CMP W0, W8
	0x035F0F24 B.EQ 0x35F1034
	0x035F0F28 MOVZ W8, 0x7EFD
	0x035F0F2C MOVK W8, 0x5F350000
	0x035F0F30 CMP W0, W8
	0x035F0F34 B.EQ 0x35F1058
	0x035F0F38 MOVZ W8, 0x80DD
	0x035F0F3C MOVK W8, 0x75160000
	0x035F0F40 CMP W0, W8
	0x035F0F44 B.NE 0x35F0FC0
	0x035F0F48 ADRP X8, 0xB49000
	0x035F0F4C LDR X8, [X8 + 0x8F8]
	0x035F0F50 MOV X0, X19
	0x035F0F54 MOV X2, X31
	0x035F0F58 LDR X1, [X8]
	0x035F0F5C BL 0x321BA08
	0x035F0F60 ADRP X8, 0xB31000
	0x035F0F64 LDR X8, [X8 + 0x228]
	0x035F0F68 B 0x35F10C0
	0x035F0F6C MOVZ W8, 0x3360
	0x035F0F70 MOVK W8, 0xB85A0000
	0x035F0F74 CMP W0, W8
	0x035F0F78 B.EQ 0x35F107C
	0x035F0F7C MOVZ W8, 0x3EB4
	0x035F0F80 MOVK W8, 0xCCB30000
	0x035F0F84 CMP W0, W8
	0x035F0F88 B.EQ 0x35F10A0
	0x035F0F8C MOVZ W8, 0x8DE9
	0x035F0F90 MOVK W8, 0xE2740000
	0x035F0F94 CMP W0, W8
	0x035F0F98 B.NE 0x35F0FC0
	0x035F0F9C ADRP X8, 0xB49000
	0x035F0FA0 LDR X8, [X8 + 0x920]
	0x035F0FA4 MOV X0, X19
	0x035F0FA8 MOV X2, X31
	0x035F0FAC LDR X1, [X8]
	0x035F0FB0 BL 0x321BA08
	0x035F0FB4 ADRP X8, 0xB49000
	0x035F0FB8 LDR X8, [X8 + 0x8E8]
	0x035F0FBC B 0x35F10C0
	0x035F0FC0 MOV X0, X31
	0x035F0FC4 B 0x35F10CC
	0x035F0FC8 ADRP X8, 0xB49000
	0x035F0FCC LDR X8, [X8 + 0x8C8]
	0x035F0FD0 MOV X0, X19
	0x035F0FD4 MOV X2, X31
	0x035F0FD8 LDR X1, [X8]
	0x035F0FDC BL 0x321BA08
	0x035F0FE0 ADRP X8, 0xB33000
	0x035F0FE4 LDR X8, [X8 + 0x770]
	0x035F0FE8 B 0x35F10C0
	0x035F0FEC ADRP X8, 0xB49000
	0x035F0FF0 LDR X8, [X8 + 0x908]
	0x035F0FF4 MOV X0, X19
	0x035F0FF8 MOV X2, X31
	0x035F0FFC LDR X1, [X8]
	0x035F1000 BL 0x321BA08
	0x035F1004 ADRP X8, 0xB30000
	0x035F1008 LDR X8, [X8 + 0x6C0]
	0x035F100C B 0x35F10C0
	0x035F1010 ADRP X8, 0xB48000
	0x035F1014 LDR X8, [X8 + 0x918]
	0x035F1018 MOV X0, X19
	0x035F101C MOV X2, X31
	0x035F1020 LDR X1, [X8]
	0x035F1024 BL 0x321BA08
	0x035F1028 ADRP X8, 0xB48000
	0x035F102C LDR X8, [X8 + 0x8D8]
	0x035F1030 B 0x35F10C0
	0x035F1034 ADRP X8, 0xB48000
	0x035F1038 LDR X8, [X8 + 0x910]
	0x035F103C MOV X0, X19
	0x035F1040 MOV X2, X31
	0x035F1044 LDR X1, [X8]
	0x035F1048 BL 0x321BA08
	0x035F104C ADRP X8, 0xB32000
	0x035F1050 LDR X8, [X8 + 0x650]
	0x035F1054 B 0x35F10C0
	0x035F1058 ADRP X8, 0xB48000
	0x035F105C LDR X8, [X8 + 0x8E0]
	0x035F1060 MOV X0, X19
	0x035F1064 MOV X2, X31
	0x035F1068 LDR X1, [X8]
	0x035F106C BL 0x321BA08
	0x035F1070 ADRP X8, 0xB30000
	0x035F1074 LDR X8, [X8 + 0x6E0]
	0x035F1078 B 0x35F10C0
	0x035F107C ADRP X8, 0xB48000
	0x035F1080 LDR X8, [X8 + 0x8B8]
	0x035F1084 MOV X0, X19
	0x035F1088 MOV X2, X31
	0x035F108C LDR X1, [X8]
	0x035F1090 BL 0x321BA08
	0x035F1094 ADRP X8, 0xB32000
	0x035F1098 LDR X8, [X8 + 0x5C8]
	0x035F109C B 0x35F10C0
	0x035F10A0 ADRP X8, 0xB48000
	0x035F10A4 LDR X8, [X8 + 0x8D0]
	0x035F10A8 MOV X0, X19
	0x035F10AC MOV X2, X31
	0x035F10B0 LDR X1, [X8]
	0x035F10B4 BL 0x321BA08
	0x035F10B8 ADRP X8, 0xB30000
	0x035F10BC LDR X8, [X8 + 0x6B0]
	0x035F10C0 LDR X8, [X8]
	0x035F10C4 ANDS W31, W0, 0x1
	0x035F10C8 CSEL X0, X8, X31, NE
	0x035F10CC LDP X20, X19, [X31 + 0x10]
	0x035F10D0 LDR X30, [X31], #0x20
	0x035F10D4 RET
	0x035F10D8 STP X29, X30, [X31 - 0x60]!
	0x035F10DC STP X28, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xDF1000
	010 Move W8, [X23+734]
	011 Move X21, X3
	012 Move X22, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0xB4A000
	020 Move X0, [X0+2080]
	021 Call 0x1C17CF4
	022 Move X0, 0xB0D000
	023 Move X0, [X0+2536]
	024 Call 0x1C17CF4
	025 Move X0, 0xB2C000
	026 Move X0, [X0+2952]
	027 Call 0x1C17CF4
	028 Move X0, 0xB4A000
	029 Move X0, [X0+2088]
	030 Call 0x1C17CF4
	031 Move X0, 0xB06000
	032 Move X0, [X0+632]
	033 Call 0x1C17CF4
	034 Move X0, 0xB4A000
	035 Move X0, [X0+2096]
	036 Call 0x1C17CF4
	037 Move X0, 0xB4A000
	038 Move X0, [X0+2104]
	039 Call 0x1C17CF4
	040 Move X0, 0xB4A000
	041 Move X0, [X0+2112]
	042 Call 0x1C17CF4
	043 Move X0, 0xB34000
	044 Move X0, [X0+2640]
	045 Call 0x1C17CF4
	046 Move X0, 0xB04000
	047 Move X0, [X0+2440]
	048 Call 0x1C17CF4
	049 Move X0, 0xB4A000
	050 Move X0, [X0+2120]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X23+734], W8
	054 Compare X22, 0
	055 JumpIfEqual {67}
	056 Move X9, 0xB2C000
	057 Move X9, [X9+2952]
	058 Move X8, [X22]
	059 Move X9, [X9]
	060 Move W11, [X8+304]
	061 Move W10, [X9+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X11, [X8+200]
	064 Add X10, X11, X10
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X31
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 Return X0
	077 Move X9, [X8+472]
	078 Move X1, [X8+480]
	079 Move X0, X22
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare X21, 0
	082 JumpIfEqual {315}
	083 Move X9, 0xB4A000
	084 Move X8, [X21]
	085 Move X9, [X9+2088]
	086 Move X10, 0xB34000
	087 Move X22, X0
	088 Move X1, [X9]
	089 Move X10, [X10+2640]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X23, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X21
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X3, [X0+8]
	108 Move X0, X21
	109 Move X1, X22
	110 Move X2, X23
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {67}
	114 Move X1, X31
	115 Move X23, X0
	116 Call NetworkCredential.get_UserName, X0
	117 Move X22, X0
	118 Move X0, X23
	119 Move X1, X31
	120 Call NetworkCredential.get_Domain, X0
	121 Move X21, X0
	122 Move X0, X23
	123 Move X1, X31
	124 Call NetworkCredential.get_Password, X0
	125 Compare X22, 0
	126 JumpIfEqual {67}
	127 Move X25, 0xB04000
	128 Move X25, [X25+2440]
	129 Move X23, X0
	130 Move X0, X22
	131 Move X2, X31
	132 Move X1, [X25]
	133 Call String.op_Equality, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {67}
	138 Move X0, X21
	139 Move X1, X31
	140 Call String.IsNullOrEmpty, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {171}
	145 Move W1, 92
	146 Move X0, X22
	147 Move X2, X31
	148 Call String.IndexOf, X0, X1
	149 Move W24, W0
	150 Add W31, W0, 1
	151 Move W1, 47
	152 Move X0, X22
	153 Move X2, X31
	154 Call String.IndexOf, X0, X1
	155 Move W24, W0
	156 Move TEMP, X24
	157 And TEMP, TEMP, -2147483648
	158 Compare TEMP, -2147483648
	159 JumpIfEqual {171}
	160 Move X0, X22
	161 Move W1, W31
	162 Move W2, W24
	163 Move X3, X31
	164 Call String.Substring, X0, X1, X2
	165 Move X21, X0
	166 Add W1, W24, 1
	167 Move X0, X22
	168 Move X2, X31
	169 Call String.Substring, X0, X1
	170 Move X22, X0
	171 Move X8, [X19+16]
	172 Compare X8, 0
	173 JumpIfEqual {219}
	174 Move W8, [X8+16]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Compare X20, 0
	177 JumpIfEqual {274}
	178 Move X8, 0xB0D000
	179 Move X8, [X8+2536]
	180 Move X0, [X8]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X20
	186 Move X1, X31
	187 Call Convert.FromBase64String, X0
	188 Move X8, 0xB4A000
	189 Move X8, [X8+2104]
	190 Move X20, X0
	191 Move X8, [X8]
	192 Move X0, X8
	193 Call 0x1C17F10
	194 Move X1, X20
	195 Move X2, X31
	196 Move X24, X0
	197 Call Type2Message..ctor, X0, X1
	198 Move X8, 0xB4A000
	199 Move X25, [X25]
	200 Move X8, [X8+2112]
	201 Move X0, [X8]
	202 Call 0x1C17F10
	203 Move X1, X24
	204 Move X2, X31
	205 Move X20, X0
	206 Call Type3Message..ctor, X0, X1
	207 Compare X20, 0
	208 JumpIfEqual {315}
	209 NotImplemented "Instruction CMP not yet implemented."
	210 NotImplemented "Instruction CSEL not yet implemented."
	211 Move X0, X20
	212 Move X1, X21
	213 Move X2, X31
	214 Move [X20+56], X22
	215 Move [X20+64], X8
	216 Call Type3Message.set_Domain, X0, X1
	217 Move [X19+16], X20
	218 Move W21, 1
	219 Move X8, 0xB4A000
	220 Move X8, [X8+2096]
	221 Move X0, [X8]
	222 Call 0x1C17F10
	223 Move X1, X31
	224 Move X20, X0
	225 Call Type1Message..ctor, X0
	226 Compare X20, 0
	227 JumpIfEqual {315}
	228 Move X0, X20
	229 Move X1, X21
	230 Move X2, X31
	231 Call Type1Message.set_Domain, X0, X1
	232 Move X1, [X25]
	233 Move X0, X20
	234 Move X2, X31
	235 Call Type1Message.set_Host, X0, X1
	236 Move W8, [X20+20]
	237 Move W21, W31
	238 Or W8, W8, 0x80000
	239 Move [X20+20], W8
	240 Move [X19+16], X20
	241 Compare X20, 0
	242 JumpIfEqual {255}
	243 Move X8, 0xB06000
	244 Move X8, [X8+632]
	245 Move X0, X20
	246 Move X2, X31
	247 Move X8, [X8]
	248 Move X8, [X8+184]
	249 Move X1, [X8]
	250 Call String.op_Equality, X0, X1
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {275}
	255 Move X8, 0xB4A000
	256 Move X8, [X8+2096]
	257 Move X0, [X8]
	258 Call 0x1C17F10
	259 Move X1, X31
	260 Move X20, X0
	261 Call Type1Message..ctor, X0
	262 Compare X20, 0
	263 JumpIfEqual {315}
	264 Move X0, X20
	265 Move X1, X21
	266 Move X2, X31
	267 Call Type1Message.set_Domain, X0, X1
	268 Move X1, [X25]
	269 Move X0, X20
	270 Move X2, X31
	271 Call Type1Message.set_Host, X0, X1
	272 Move W21, W31
	273 Move [X19+16], X20
	274 Move [X19+16], X31
	275 Move X20, [X19+16]
	276 Move W21, 1
	277 Compare X20, 0
	278 JumpIfEqual {315}
	279 Move X8, [X20]
	280 Move X0, X20
	281 Move X9, [X8+392]
	282 Move X1, [X8+400]
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move X8, 0xB0C000
	285 Move X8, [X8+2536]
	286 Move X19, X0
	287 Move X8, [X8]
	288 Move W9, [X8+224]
	289 Compare W9, 0
	290 JumpIfNotEqual {293}
	291 Move X0, X8
	292 Call 0x1C17DFC
	293 Move X0, X19
	294 Move X1, X31
	295 Call Convert.ToBase64String, X0
	296 Move X8, 0xB49000
	297 Move X8, [X8+2120]
	298 Move X1, X0
	299 Move X2, X31
	300 Move X8, [X8]
	301 Move X0, X8
	302 Call String.Concat, X0, X1
	303 Move X8, 0xB49000
	304 Move X8, [X8+2080]
	305 Move X19, X0
	306 Move X8, [X8]
	307 Move X0, X8
	308 Call 0x1C17F10
	309 Move X1, X19
	310 Move W2, W21
	311 Move X3, X31
	312 Move X20, X0
	313 Call Authorization..ctor, X0, X1, X2
	314 Move X0, X20
	315 Call 0x1C17F20

