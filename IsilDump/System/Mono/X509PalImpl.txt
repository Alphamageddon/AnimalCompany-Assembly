Type: Mono.X509PalImpl

Method: System.Security.Cryptography.X509Certificates.X509CertificateImpl Import(System.Byte[] data)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl Import(System.Byte[] data, Microsoft.Win32.SafeHandles.SafePasswordHandle password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl Import(System.Security.Cryptography.X509Certificates.X509Certificate cert)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Byte[] PEM(System.String type, System.Byte[] data)

Disassembly:
	0x035E22C8 MOV X0, X2
	0x035E22CC BL 0x1C16D84
	0x035E22D0 TBZ X0, 0x0, 0x35E22E8
	0x035E22D4 CMP W21, 0x9
	0x035E22D8 B.NE 0x35E2304
	0x035E22DC ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E22E0 ADD X8, X8, 0x574
	0x035E22E4 B 0x35E22F8
	0x035E22E8 CMP W21, 0x8
	0x035E22EC B.NE 0x35E2300
	0x035E22F0 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E22F4 ADD X8, X8, 0x530
	0x035E22F8 STR X8, [X19 + 0x18]
	0x035E22FC B 0x35E2314
	0x035E2300 CBZ X20, 0x35E232C
	0x035E2304 LDR X8, [X19 + 0x10]
	0x035E2308 LDR X9, [X19 + 0x20]
	0x035E230C STR X8, [X19 + 0x18]
	0x035E2310 STR X9, [X19 + 0x40]
	0x035E2314 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E2318 ADD X8, X8, 0x484
	0x035E231C STR X8, [X19 + 0x38]
	0x035E2320 LDP X20, X19, [X31 + 0x10]
	0x035E2324 LDP X30, X21, [X31], #0x20
	0x035E2328 RET
	0x035E232C ADRP X1, 0xFFFFFFFFFD539000
	0x035E2330 ADD X1, X1, 0xEE3
	0x035E2334 MOV X0, X31
	0x035E2338 BL 0x1C16F3C
	0x035E233C MOV X1, X31
	0x035E2340 BL 0x1C16DEC
	0x035E2344 LDP X8, X9, [X31]
	0x035E2348 LDR X10, [X0 + 0x18]
	0x035E234C LDR X11, [X0 + 0x28]
	0x035E2350 LDR X0, [X0 + 0x40]
	0x035E2354 STR X8, [X31]
	0x035E2358 STP X9, X11, [X31 + 0x8]
	0x035E235C BR X10
	0x035E2360 STP X30, X21, [X31 - 0x20]!
	0x035E2364 STP X20, X19, [X31 + 0x10]
	0x035E2368 LDR X8, [X2 + 0x8]
	0x035E236C STP X1, X2, [X0 + 0x20]
	0x035E2370 MOV X19, X0
	0x035E2374 MOV X20, X1
	0x035E2378 STR X8, [X0 + 0x10]
	0x035E237C LDRB W21, [X2 + 0x52]
	0x035E2380 STR X0, [X0 + 0x40]
	0x035E2384 MOV X0, X2
	0x035E2388 BL 0x1C16D84
	0x035E238C TBZ X0, 0x0, 0x35E23A4
	0x035E2390 CMP W21, 0x3
	0x035E2394 B.NE 0x35E23C0
	0x035E2398 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E239C ADD X8, X8, 0x668
	0x035E23A0 B 0x35E23B4
	0x035E23A4 CMP W21, 0x2
	0x035E23A8 B.NE 0x35E23BC
	0x035E23AC ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E23B0 ADD X8, X8, 0x640
	0x035E23B4 STR X8, [X19 + 0x18]
	0x035E23B8 B 0x35E23D0
	0x035E23BC CBZ X20, 0x35E23E8
	0x035E23C0 LDR X8, [X19 + 0x10]
	0x035E23C4 LDR X9, [X19 + 0x20]
	0x035E23C8 STR X8, [X19 + 0x18]
	0x035E23CC STR X9, [X19 + 0x40]
	0x035E23D0 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E23D4 ADD X8, X8, 0x5D8
	0x035E23D8 STR X8, [X19 + 0x38]
	0x035E23DC LDP X20, X19, [X31 + 0x10]
	0x035E23E0 LDP X30, X21, [X31], #0x20
	0x035E23E4 RET
	0x035E23E8 ADRP X1, 0xFFFFFFFFFD539000
	0x035E23EC ADD X1, X1, 0xEE3
	0x035E23F0 MOV X0, X31
	0x035E23F4 BL 0x1C16F3C
	0x035E23F8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDFF000
	007 Move W8, [X21+629]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB1B000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move X0, 0xB40000
	018 Move X0, [X0+400]
	019 Call 0x1C17CF4
	020 Move X0, 0xB40000
	021 Move X0, [X0+408]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+629], W8
	025 Move X0, X31
	026 Call Encoding.get_ASCII
	027 Compare X0, 0
	028 JumpIfEqual {89}
	029 Move X8, [X0]
	030 Move X21, 0xB40000
	031 Move X22, 0xB40000
	032 Move X1, X20
	033 Move X9, [X8+888]
	034 Move X2, [X8+896]
	035 Move X21, [X21+400]
	036 Move X22, [X22+408]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X21]
	039 Move X20, X0
	040 Move X1, X19
	041 Move X2, X31
	042 Move X0, X8
	043 Call String.Format, X0, X1
	044 Move X8, [X22]
	045 Move X21, X0
	046 Move X1, X19
	047 Move X2, X31
	048 Move X0, X8
	049 Call String.Format, X0, X1
	050 Compare X20, 0
	051 JumpIfEqual {89}
	052 Move X19, X0
	053 Move X0, X20
	054 Move X1, X21
	055 Move X2, X31
	056 Call String.IndexOf, X0, X1
	057 Compare X21, 0
	058 JumpIfEqual {89}
	059 Move W8, [X21+16]
	060 Move X22, 0xB1B000
	061 Move X22, [X22+2536]
	062 Move X1, X19
	063 Add W21, W8, W0
	064 Move X0, X20
	065 Move W2, W21
	066 Move X3, X31
	067 Call String.IndexOf, X0, X1, X2
	068 Subtract W2, W0, W21
	069 Move X0, X20
	070 Move W1, W21
	071 Move X3, X31
	072 Call String.Substring, X0, X1, X2
	073 Move X8, [X22]
	074 Move X19, X0
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X1, X31
	086 Move X30, [X31+48]
	087 Call Convert.FromBase64String, X0
	088 Return X0
	089 Call 0x1C17F20

Method: System.Byte[] ConvertData(System.Byte[] data)

Disassembly:
	0x035E23FC BL 0x1C16DEC
	0x035E2400 LDR X8, [X0 + 0x40]
	0x035E2404 LDR X5, [X0 + 0x18]
	0x035E2408 LDR X4, [X0 + 0x28]
	0x035E240C MOV X0, X8
	0x035E2410 BR X5
	0x035E2414 MOV X1, X31
	0x035E2418 B 0x33BDD8C
	0x035E241C STP X30, X21, [X31 - 0x20]!
	0x035E2420 STP X20, X19, [X31 + 0x10]
	0x035E2424 LDR X8, [X2 + 0x8]
	0x035E2428 STP X1, X2, [X0 + 0x20]
	0x035E242C MOV X19, X0
	0x035E2430 MOV X20, X1
	0x035E2434 STR X8, [X0 + 0x10]
	0x035E2438 LDRB W21, [X2 + 0x52]
	0x035E243C STR X0, [X0 + 0x40]
	0x035E2440 MOV X0, X2
	0x035E2444 BL 0x1C16D84
	0x035E2448 TBZ X0, 0x0, 0x35E2460
	0x035E244C CBNZ W21, 0x35E2464
	0x035E2450 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E2454 ADD X8, X8, 0xF7C
	0x035E2458 STR X8, [X19 + 0x18]
	0x035E245C B 0x35E2474
	0x035E2460 CBZ X20, 0x35E248C
	0x035E2464 LDR X8, [X19 + 0x10]
	0x035E2468 LDR X9, [X19 + 0x20]
	0x035E246C STR X8, [X19 + 0x18]
	0x035E2470 STR X9, [X19 + 0x40]
	0x035E2474 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E2478 ADD X8, X8, 0xF30
	0x035E247C STR X8, [X19 + 0x38]
	0x035E2480 LDP X20, X19, [X31 + 0x10]
	0x035E2484 LDP X30, X21, [X31], #0x20
	0x035E2488 RET
	0x035E248C ADRP X1, 0xFFFFFFFFFD539000
	0x035E2490 ADD X1, X1, 0xEE3
	0x035E2494 MOV X0, X31
	0x035E2498 BL 0x1C16F3C
	0x035E249C MOV X1, X31
	0x035E24A0 BL 0x1C16DEC
	0x035E24A4 LDR X8, [X0 + 0x40]
	0x035E24A8 LDR X2, [X0 + 0x18]
	0x035E24AC LDR X1, [X0 + 0x28]
	0x035E24B0 MOV X0, X8
	0x035E24B4 BR X2
	0x035E24B8 STP X30, X21, [X31 - 0x20]!
	0x035E24BC STP X20, X19, [X31 + 0x10]
	0x035E24C0 LDR X8, [X2 + 0x8]
	0x035E24C4 STP X1, X2, [X0 + 0x20]
	0x035E24C8 MOV X19, X0
	0x035E24CC MOV X20, X1
	0x035E24D0 STR X8, [X0 + 0x10]
	0x035E24D4 LDRB W21, [X2 + 0x52]
	0x035E24D8 STR X0, [X0 + 0x40]
	0x035E24DC MOV X0, X2
	0x035E24E0 BL 0x1C16D84
	0x035E24E4 TBZ X0, 0x0, 0x35E24FC
	0x035E24E8 CMP W21, 0x2
	0x035E24EC B.NE 0x35E2518
	0x035E24F0 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E24F4 ADD X8, X8, 0xC
	0x035E24F8 B 0x35E250C
	0x035E24FC CMP W21, 0x1
	0x035E2500 B.NE 0x35E2514
	0x035E2504 ADRP X8, 0xFFFFFFFFFE5E0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDFF000
	005 Move W8, [X20+630]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB58000
	012 Move X0, [X0+432]
	013 Call 0x1C17CF4
	014 Move X0, 0xB3F000
	015 Move X0, [X0+3288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+630], W8
	019 Compare X19, 0
	020 JumpIfEqual {41}
	021 Move X8, [X19+24]
	022 Compare X8, 0
	023 JumpIfEqual {41}
	024 Compare W8, 0
	025 JumpIfEqual {46}
	026 Move W8, [X19+32]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, 0xB58000
	029 Move X8, [X8+432]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, 0xB3F000
	036 Move X8, [X8+3288]
	037 Move X0, [X8]
	038 Move X1, X19
	039 Call X509PalImpl.PEM, X0, X1
	040 Move X19, X0
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F28
	047 Move X20, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X20
	050 Call 0x3EB2AD0
	051 Move X20, X0
	052 Move X0, 0xB18000
	053 Move X0, [X0+3264]
	054 Call 0x1C17D08
	055 Move X8, [X20]
	056 Move X1, [X8]
	057 Call 0x1C18270
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {63}
	062 Call 0x3EB2AE0
	063 Move W0, 8
	064 Call 0x3EB2AF0
	065 Move X8, [X20]
	066 Move [X0], X8
	067 Move X1, 0x8D3000
	068 Add X1, X1, 3672
	069 Move X2, X31
	070 Call 0x3EB2B00
	071 Move X20, X0
	072 Call 0x3EB2AE0
	073 Move X0, X20
	074 Call 0x1D2D690
	075 Call 0x1991590

Method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl ImportFallback(System.Byte[] data)

Disassembly:
	0x035E1AF4 MOV X19, X31
	0x035E1AF8 B 0x35E1B00
	0x035E1AFC MOV X21, X0
	0x035E1B00 LDR X1, [X22]
	0x035E1B04 MOV X0, X20
	0x035E1B08 BL 0x1C16E00
	0x035E1B0C MOV X20, X0
	0x035E1B10 CBZ X0, 0x35E1B6C
	0x035E1B14 LDR X8, [X20]
	0x035E1B18 LDR X1, [X22]
	0x035E1B1C LDRH W9, [X8 + 0x12E]
	0x035E1B20 CBZ X9, 0x35E1B44
	0x035E1B24 LDR X10, [X8 + 0xB0]
	0x035E1B28 ADD X10, X10, 0x8
	0x035E1B2C LDUR X11, [X10 - 0x8]
	0x035E1B30 CMP X11, X1
	0x035E1B34 B.EQ 0x35E1B54
	0x035E1B38 SUBS X9, X9, 0x1
	0x035E1B3C ADD X10, X10, 0x10
	0x035E1B40 B.NE 0x35E1B2C
	0x035E1B44 MOV X0, X20
	0x035E1B48 MOV W2, W31
	0x035E1B4C BL 0x1C5C788
	0x035E1B50 B 0x35E1B60
	0x035E1B54 LDRSW X9, [X10]
	0x035E1B58 ADD X8, X8, X9, 0x4, LSL
	0x035E1B5C ADD X0, X8, 0x138
	0x035E1B60 LDP X8, X1, [X0]
	0x035E1B64 MOV X0, X20
	0x035E1B68 BLR X8
	0x035E1B6C CBNZ X19, 0x35E1B78
	0x035E1B70 MOV X0, X21
	0x035E1B74 BL 0x1D2C690
	0x035E1B78 MOV X0, X19
	0x035E1B7C BL 0x1C16F18
	0x035E1B80 BL 0x1990590
	0x035E1B84 STP X30, X25, [X31 - 0x40]!
	0x035E1B88 STP X24, X23, [X31 + 0x10]
	0x035E1B8C STP X22, X21, [X31 + 0x20]
	0x035E1B90 STP X20, X19, [X31 + 0x30]
	0x035E1B94 ADRP X22, 0xDFF000
	0x035E1B98 LDRB W8, [X22 + 0x27C]
	0x035E1B9C MOV X19, X2
	0x035E1BA0 MOV X21, X1
	0x035E1BA4 MOV X20, X0
	0x035E1BA8 TBNZ X8, 0x0, 0x35E1BCC
	0x035E1BAC ADRP X0, 0xB58000
	0x035E1BB0 LDR X0, [X0 + 0x1C8]
	0x035E1BB4 BL 0x1C16CF4
	0x035E1BB8 ADRP X0, 0xB42000
	0x035E1BBC LDR X0, [X0 + 0x9A8]
	0x035E1BC0 BL 0x1C16CF4
	0x035E1BC4 MOVZ W8, 0x1
	0x035E1BC8 STRB W8, [X22 + 0x27C]
	0x035E1BCC CBZ X21, 0x35E1D30
	0x035E1BD0 LDR X8, [X21]
	0x035E1BD4 MOV X0, X21
	0x035E1BD8 LDP X9, X1, [X8 + 0x1F8]
	0x035E1BDC BLR X9
	0x035E1BE0 MOV X23, X0
	0x035E1BE4 CBZ X0, 0x35E1BFC
	0x035E1BE8 LDR W8, [X23 + 0x18]
	0x035E1BEC ADD X9, X23, 0x20
	0x035E1BF0 CMP W8, 0x0
	0x035E1BF4 CSEL X22, X31, X9, EQ
	0x035E1BF8 B 0x35E1C00
	0x035E1BFC MOV X22, X31
	0x035E1C00 BL 0x35E1D34
	0x035E1C04 CBZ X0, 0x35E1D30
	0x035E1C08 CBZ X23, 0x35E1D30
	0x035E1C0C LDR X24, [X0 + 0x78]
	0x035E1C10 LDR W0, [X23 + 0x18]
	0x035E1C14 MOV X1, X31
	0x035E1C18 BL 0x33C6930
	0x035E1C1C CBZ X24, 0x35E1D30
	0x035E1C20 MOV X3, X0
	0x035E1C24 LDR X8, [X24 + 0x18]
	0x035E1C28 LDR X0, [X24 + 0x40]
	0x035E1C2C LDR X5, [X24 + 0x28]
	0x035E1C30 MOV X1, X20
	0x035E1C34 MOV X2, X22
	0x035E1C38 MOV X4, X19
	0x035E1C3C BLR X8
	0x035E1C40 LDR X0, [X21 + 0x10]
	0x035E1C44 CBZ X0, 0x35E1C7C
	0x035E1C48 ADRP X9, 0xB58000
	0x035E1C4C LDR X9, [X9 + 0x1C8]
	0x035E1C50 LDR X8, [X0]
	0x035E1C54 LDR X9, [X9]
	0x035E1C58 LDRB W11, [X8 + 0x130]
	0x035E1C5C LDRB W10, [X9 + 0x130]
	0x035E1C60 CMP W11, W10
	0x035E1C64 B.CC 0x35E1C7C
	0x035E1C68 LDR X11, [X8 + 0xC8]
	0x035E1C6C ADD X10, X11, X10, 0x3, LSL
	0x035E1C70 LDUR X10, [X10 - 0x8]
	0x035E1C74 CMP X10, X9
	0x035E1C78 B.EQ 0x35E1C90
	0x035E1C7C LDP X20, X19, [X31 + 0x30]
	0x035E1C80 LDP X22, X21, [X31 + 0x20]
	0x035E1C84 LDP X24, X23, [X31 + 0x10]
	0x035E1C88 LDP X30, X25, [X31], #0x40
	0x035E1C8C RET
	0x035E1C90 LDR X9, [X8 + 0x2F8]
	0x035E1C94 LDR X1, [X8 + 0x300]
	0x035E1C98 BLR X9
	0x035E1C9C CBZ X0, 0x35E1C7C
	0x035E1CA0 MOV X1, X31
	0x035E1CA4 MOV X21, X0
	0x035E1CA8 BL 0x3658278
	0x035E1CAC CMP W0, 0x1
	0x035E1CB0 B.LT 0x35E1C7C
	0x035E1CB4 MOV X0, X21
	0x035E1CB8 MOV X1, X31
	0x035E1CBC BL 0x3658278
	0x035E1CC0 CMP W0, 0x1
	0x035E1CC4 B.LT 0x35E1C7C
	0x035E1CC8 ADRP X25, 0xB42000
	0x035E1CCC LDR X25, [X25 + 0x9A8]
	0x035E1CD0 MOV W22, W31
	0x035E1CD4 MOV X0, X21
	0x035E1CD8 MOV W1, W22
	0x035E1CDC MOV X2, X31
	0x035E1CE0 BL 0x36582C0
	0x035E1CE4 LDR X8, [X25]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE00000
	007 Move X20, 0xB59000
	008 Move W8, [X21+631]
	009 Move X20, [X20+432]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB13000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xB43000
	019 Move X0, [X0+2368]
	020 Call 0x1C17CF4
	021 Move X0, 0xB59000
	022 Move X0, [X0+448]
	023 Call 0x1C17CF4
	024 Move X0, 0xB59000
	025 Move X0, [X0+432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+631], W8
	029 Move X0, [X20]
	030 Move X20, 0xB43000
	031 Move X21, 0xB59000
	032 Move W8, [X0+224]
	033 Move X20, [X20+2368]
	034 Move X21, [X21+448]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X22, 0xB13000
	039 Move X22, [X22+3584]
	040 Move X0, X19
	041 Call X509PalImpl.ConvertData, X0
	042 Move X8, [X20]
	043 Move X20, X0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X2, X31
	048 Move X19, X0
	049 Call SafePasswordHandle..ctor, X0, X1
	050 Move X0, [X21]
	051 Call 0x1C17F10
	052 Move X21, X0
	053 Move X1, X20
	054 Move X2, X19
	055 Move W3, W31
	056 Move X4, X31
	057 Call X509Certificate2ImplMono..ctor, X0, X1, X2, X3
	058 Move X20, X31
	059 Compare X19, 0
	060 JumpIfEqual {82}
	061 Move X8, [X19]
	062 Move X1, [X22]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X19
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X20, 0
	083 JumpIfNotEqual {91}
	084 Move X0, X21
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Return X0
	091 Move X0, X20
	092 Call 0x1C17F18
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X21, X0
	095 Move X0, X21
	096 Call 0x3EB2AD0
	097 Move X20, [X0]
	098 Call 0x3EB2AE0
	099 Move X21, X31
	100 Compare X19, 0
	101 JumpIfNotEqual {61}
	102 Move X20, X31
	103 Move X21, X0
	104 Compare X19, 0
	105 JumpIfEqual {127}
	106 Move X8, [X19]
	107 Move X1, [X22]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X19
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Compare X20, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X21
	130 Call 0x1D2D690
	131 Move X0, X20
	132 Call 0x1C17F18
	133 Call 0x1991590

Method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl ImportFallback(System.Byte[] data, Microsoft.Win32.SafeHandles.SafePasswordHandle password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags)

Disassembly:
	0x035E1D7C LDR X8, [X20]
	0x035E1D80 LDR X8, [X8 + 0xB8]
	0x035E1D84 LDR X0, [X8]
	0x035E1D88 CBNZ X0, 0x35E1DF0
	0x035E1D8C BL 0x1C99814
	0x035E1D90 MOV X1, X31
	0x035E1D94 MOV X2, X31
	0x035E1D98 MOV X19, X0
	0x035E1D9C BL 0x33BE5B0
	0x035E1DA0 MOV W8, W0
	0x035E1DA4 MOV X0, X31
	0x035E1DA8 TBNZ X8, 0x0, 0x35E1DF0
	0x035E1DAC ADRP X8, 0xB3A000
	0x035E1DB0 LDR X8, [X8 + 0x850]
	0x035E1DB4 LDR X0, [X8]
	0x035E1DB8 LDR W8, [X0 + 0xE0]
	0x035E1DBC CBNZ W8, 0x35E1DC4
	0x035E1DC0 BL 0x1C16DFC
	0x035E1DC4 ADRP X8, 0xB58000
	0x035E1DC8 LDR X8, [X8 + 0x208]
	0x035E1DCC MOV X0, X19
	0x035E1DD0 LDR X1, [X8]
	0x035E1DD4 BL 0x22157DC
	0x035E1DD8 LDR X8, [X20]
	0x035E1DDC LDR X8, [X8 + 0xB8]
	0x035E1DE0 STR X0, [X8]
	0x035E1DE4 LDR X8, [X20]
	0x035E1DE8 LDR X8, [X8 + 0xB8]
	0x035E1DEC LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE00000
	008 Move X23, 0xB59000
	009 Move W8, [X22+632]
	010 Move X23, [X23+448]
	011 Move W19, W3
	012 Move X20, X2
	013 Move X21, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB59000
	019 Move X0, [X0+448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+632], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X21
	026 Move X2, X20
	027 Move W3, W19
	028 Move X4, X31
	029 Move X22, X0
	030 Call X509Certificate2ImplMono..ctor, X0, X1, X2, X3
	031 Move X0, X22
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return X0

Method: System.Boolean get_SupportsLegacyBasicConstraintsExtension()

Disassembly:
	0x035E2508 ADD X8, X8, 0xFE8
	0x035E250C STR X8, [X19 + 0x18]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(System.Byte[] rawData)

Disassembly:
	0x035E2510 B 0x35E2528
	0x035E2514 CBZ X20, 0x35E2540
	0x035E2518 LDR X8, [X19 + 0x10]
	0x035E251C LDR X9, [X19 + 0x20]
	0x035E2520 STR X8, [X19 + 0x18]
	0x035E2524 STR X9, [X19 + 0x40]
	0x035E2528 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E252C ADD X8, X8, 0xF90
	0x035E2530 STR X8, [X19 + 0x38]
	0x035E2534 LDP X20, X19, [X31 + 0x10]
	0x035E2538 LDP X30, X21, [X31], #0x20
	0x035E253C RET
	0x035E2540 ADRP X1, 0xFFFFFFFFFD539000
	0x035E2544 ADD X1, X1, 0xEE3
	0x035E2548 MOV X0, X31
	0x035E254C BL 0x1C16F3C
	0x035E2550 MOV X1, X31
	0x035E2554 BL 0x1C16DEC
	0x035E2558 LDR X8, [X0 + 0x40]
	0x035E255C LDR X4, [X0 + 0x18]
	0x035E2560 LDR X3, [X0 + 0x28]
	0x035E2564 MOV X0, X8
	0x035E2568 BR X4
	0x035E256C STP X30, X21, [X31 - 0x20]!
	0x035E2570 STP X20, X19, [X31 + 0x10]
	0x035E2574 LDR X8, [X2 + 0x8]
	0x035E2578 STP X1, X2, [X0 + 0x20]
	0x035E257C MOV X19, X0
	0x035E2580 MOV X20, X1
	0x035E2584 STR X8, [X0 + 0x10]
	0x035E2588 LDRB W21, [X2 + 0x52]
	0x035E258C STR X0, [X0 + 0x40]
	0x035E2590 MOV X0, X2
	0x035E2594 BL 0x1C16D84
	0x035E2598 TBZ X0, 0x0, 0x35E25B0
	0x035E259C CMP W21, 0x2
	0x035E25A0 B.NE 0x35E25CC
	0x035E25A4 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E25A8 ADD X8, X8, 0xB4
	0x035E25AC B 0x35E25C0
	0x035E25B0 CMP W21, 0x1
	0x035E25B4 B.NE 0x35E25C8
	0x035E25B8 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E25BC ADD X8, X8, 0x90
	0x035E25C0 STR X8, [X19 + 0x18]
	0x035E25C4 B 0x35E25DC
	0x035E25C8 CBZ X20, 0x35E25F4
	0x035E25CC LDR X8, [X19 + 0x10]
	0x035E25D0 LDR X9, [X19 + 0x20]
	0x035E25D4 STR X8, [X19 + 0x18]
	0x035E25D8 STR X9, [X19 + 0x40]
	0x035E25DC ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E25E0 ADD X8, X8, 0x30
	0x035E25E4 STR X8, [X19 + 0x38]
	0x035E25E8 LDP X20, X19, [X31 + 0x10]
	0x035E25EC LDP X30, X21, [X31], #0x20
	0x035E25F0 RET
	0x035E25F4 ADRP X1, 0xFFFFFFFFFD539000
	0x035E25F8 ADD X1, X1, 0xEE3
	0x035E25FC MOV X0, X31
	0x035E2600 BL 0x1C16F3C
	0x035E2604 MOV X1, X31
	0x035E2608 BL 0x1C16DEC
	0x035E260C LDR X8, [X0 + 0x40]
	0x035E2610 LDR X4, [X0 + 0x18]
	0x035E2614 LDR X3, [X0 + 0x28]
	0x035E2618 MOV X0, X8
	0x035E261C BR X4
	0x035E2620 STP X30, X21, [X31 - 0x20]!
	0x035E2624 STP X20, X19, [X31 + 0x10]
	0x035E2628 LDR X8, [X2 + 0x8]
	0x035E262C STP X1, X2, [X0 + 0x20]
	0x035E2630 MOV X19, X0
	0x035E2634 MOV X20, X1
	0x035E2638 STR X8, [X0 + 0x10]
	0x035E263C LDRB W21, [X2 + 0x52]
	0x035E2640 STR X0, [X0 + 0x40]
	0x035E2644 MOV X0, X2
	0x035E2648 BL 0x1C16D84
	0x035E264C TBZ X0, 0x0, 0x35E2664
	0x035E2650 CMP W21, 0x5
	0x035E2654 B.NE 0x35E2680
	0x035E2658 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E265C ADD X8, X8, 0x188
	0x035E2660 B 0x35E2674
	0x035E2664 CMP W21, 0x4
	0x035E2668 B.NE 0x35E267C
	0x035E266C ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E2670 ADD X8, X8, 0x158
	0x035E2674 STR X8, [X19 + 0x18]
	0x035E2678 B 0x35E2690
	0x035E267C CBZ X20, 0x35E26A8
	0x035E2680 LDR X8, [X19 + 0x10]
	0x035E2684 LDR X9, [X19 + 0x20]
	0x035E2688 STR X8, [X19 + 0x18]
	0x035E268C STR X9, [X19 + 0x40]
	0x035E2690 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E2694 ADD X8, X8, 0xD8
	0x035E2698 STR X8, [X19 + 0x38]
	0x035E269C LDP X20, X19, [X31 + 0x10]
	0x035E26A0 LDP X30, X21, [X31], #0x20
	0x035E26A4 RET
	0x035E26A8 ADRP X1, 0xFFFFFFFFFD539000
	0x035E26AC ADD X1, X1, 0xEE3
	0x035E26B0 MOV X0, X31
	0x035E26B4 BL 0x1C16F3C
	0x035E26B8 MOV X1, X31
	0x035E26BC BL 0x1C16DEC
	0x035E26C0 LDR X8, [X0 + 0x40]
	0x035E26C4 LDR X7, [X0 + 0x18]
	0x035E26C8 LDR X6, [X0 + 0x28]
	0x035E26CC MOV X0, X8
	0x035E26D0 BR X7
	0x035E26D4 STP X30, X21, [X31 - 0x20]!
	0x035E26D8 STP X20, X19, [X31 + 0x10]
	0x035E26DC LDR X8, [X2 + 0x8]
	0x035E26E0 STP X1, X2, [X0 + 0x20]
	0x035E26E4 MOV X19, X0
	0x035E26E8 MOV X20, X1
	0x035E26EC STR X8, [X0 + 0x10]
	0x035E26F0 LDRB W21, [X2 + 0x52]
	0x035E26F4 STR X0, [X0 + 0x40]
	0x035E26F8 MOV X0, X2
	0x035E26FC BL 0x1C16D84
	0x035E2700 TBZ X0, 0x0, 0x35E2718
	0x035E2704 CMP W21, 0x5
	0x035E2708 B.NE 0x35E2734
	0x035E270C ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E2710 ADD X8, X8, 0x274
	0x035E2714 B 0x35E2728
	0x035E2718 CMP W21, 0x4
	0x035E271C B.NE 0x35E2730
	0x035E2720 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E2724 ADD X8, X8, 0x244
	0x035E2728 STR X8, [X19 + 0x18]
	0x035E272C B 0x35E2744
	0x035E2730 CBZ X20, 0x35E275C
	0x035E2734 LDR X8, [X19 + 0x10]
	0x035E2738 LDR X9, [X19 + 0x20]
	0x035E273C STR X8, [X19 + 0x18]
	0x035E2740 STR X9, [X19 + 0x40]
	0x035E2744 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E2748 ADD X8, X8, 0x1C4
	0x035E274C STR X8, [X19 + 0x38]
	0x035E2750 LDP X20, X19, [X31 + 0x10]
	0x035E2754 LDP X30, X21, [X31], #0x20
	0x035E2758 RET
	0x035E275C ADRP X1, 0xFFFFFFFFFD539000
	0x035E2760 ADD X1, X1, 0xEE3
	0x035E2764 MOV X0, X31
	0x035E2768 BL 0x1C16F3C
	0x035E276C MOV X1, X31
	0x035E2770 BL 0x1C16DEC
	0x035E2774 LDR X8, [X0 + 0x40]
	0x035E2778 LDR X7, [X0 + 0x18]
	0x035E277C LDR X6, [X0 + 0x28]
	0x035E2780 MOV X0, X8
	0x035E2784 BR X7
	0x035E2788 STP X30, X21, [X31 - 0x20]!
	0x035E278C STP X20, X19, [X31 + 0x10]
	0x035E2790 LDR X8, [X2 + 0x8]
	0x035E2794 STP X1, X2, [X0 + 0x20]
	0x035E2798 MOV X19, X0
	0x035E279C MOV X20, X1
	0x035E27A0 STR X8, [X0 + 0x10]
	0x035E27A4 LDRB W21, [X2 + 0x52]
	0x035E27A8 STR X0, [X0 + 0x40]
	0x035E27AC MOV X0, X2
	0x035E27B0 BL 0x1C16D84
	0x035E27B4 TBZ X0, 0x0, 0x35E27CC
	0x035E27B8 CMP W21, 0x1
	0x035E27BC B.NE 0x35E27D4
	0x035E27C0 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E27C4 ADD X8, X8, 0x318
	0x035E27C8 B 0x35E27F0
	0x035E27CC CBZ W21, 0x35E27E8
	0x035E27D0 CBZ X20, 0x35E280C
	0x035E27D4 LDR X8, [X19 + 0x10]
	0x035E27D8 LDR X9, [X19 + 0x20]
	0x035E27DC STR X8, [X19 + 0x18]
	0x035E27E0 STR X9, [X19 + 0x40]
	0x035E27E4 B 0x35E27F4
	0x035E27E8 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E27EC ADD X8, X8, 0x2F8
	0x035E27F0 STR X8, [X19 + 0x18]
	0x035E27F4 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E27F8 ADD X8, X8, 0x2B0
	0x035E27FC STR X8, [X19 + 0x38]
	0x035E2800 LDP X20, X19, [X31 + 0x10]
	0x035E2804 LDP X30, X21, [X31], #0x20
	0x035E2808 RET
	0x035E280C ADRP X1, 0xFFFFFFFFFD539000
	0x035E2810 ADD X1, X1, 0xEE3
	0x035E2814 MOV X0, X31
	0x035E2818 BL 0x1C16F3C
	0x035E281C MOV X1, X31
	0x035E2820 BL 0x1C16DEC
	0x035E2824 LDR X8, [X0 + 0x40]
	0x035E2828 LDR X3, [X0 + 0x18]
	0x035E282C LDR X2, [X0 + 0x28]
	0x035E2830 MOV X0, X8
	0x035E2834 BR X3
	0x035E2838 STP X30, X21, [X31 - 0x20]!
	0x035E283C STP X20, X19, [X31 + 0x10]
	0x035E2840 LDR X8, [X2 + 0x8]
	0x035E2844 STP X1, X2, [X0 + 0x20]
	0x035E2848 MOV X19, X0
	0x035E284C MOV X20, X1
	0x035E2850 STR X8, [X0 + 0x10]
	0x035E2854 LDRB W21, [X2 + 0x52]
	0x035E2858 STR X0, [X0 + 0x40]
	0x035E285C MOV X0, X2
	0x035E2860 BL 0x1C16D84
	0x035E2864 TBZ X0, 0x0, 0x35E2880
	0x035E2868 CMP W21, 0x4
	0x035E286C B.NE 0x35E2884
	0x035E2870 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E2874 ADD X8, X8, 0x3AC
	0x035E2878 STR X8, [X19 + 0x18]
	0x035E287C B 0x35E2894
	0x035E2880 CBZ X20, 0x35E28AC
	0x035E2884 LDR X8, [X19 + 0x10]
	0x035E2888 LDR X9, [X19 + 0x20]
	0x035E288C STR X8, [X19 + 0x18]
	0x035E2890 STR X9, [X19 + 0x40]
	0x035E2894 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E2898 ADD X8, X8, 0x334
	0x035E289C STR X8, [X19 + 0x38]
	0x035E28A0 LDP X20, X19, [X31 + 0x10]
	0x035E28A4 LDP X30, X21, [X31], #0x20
	0x035E28A8 RET
	0x035E28AC ADRP X1, 0xFFFFFFFFFD539000
	0x035E28B0 ADD X1, X1, 0xEE3
	0x035E28B4 MOV X0, X31
	0x035E28B8 BL 0x1C16F3C
	0x035E28BC MOV X1, X31
	0x035E28C0 BL 0x1C16DEC
	0x035E28C4 LDR X8, [X0 + 0x40]
	0x035E28C8 LDR X6, [X0 + 0x18]
	0x035E28CC LDR X5, [X0 + 0x28]
	0x035E28D0 MOV X0, X8
	0x035E28D4 BR X6
	0x035E28D8 STP X30, X21, [X31 - 0x20]!
	0x035E28DC STP X20, X19, [X31 + 0x10]
	0x035E28E0 LDR X8, [X2 + 0x8]
	0x035E28E4 STP X1, X2, [X0 + 0x20]
	0x035E28E8 MOV X19, X0
	0x035E28EC MOV X20, X1
	0x035E28F0 STR X8, [X0 + 0x10]
	0x035E28F4 LDRB W21, [X2 + 0x52]
	0x035E28F8 STR X0, [X0 + 0x40]
	0x035E28FC MOV X0, X2
	0x035E2900 BL 0x1C16D84
	0x035E2904 TBZ X0, 0x0, 0x35E291C
	0x035E2908 CMP W21, 0x2
	0x035E290C B.NE 0x35E2938

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDFF000
	005 Move W8, [X19+633]
	006 Move X20, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xB3F000
	012 Move X0, [X0+2968]
	013 Call 0x1C17CF4
	014 Move X0, 0xB58000
	015 Move X0, [X0+472]
	016 Call 0x1C17CF4
	017 Move X0, 0xB58000
	018 Move X0, [X0+432]
	019 Call 0x1C17CF4
	020 Move X0, 0xB58000
	021 Move X0, [X0+480]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+633], W8
	025 Compare X20, 0
	026 JumpIfEqual {167}
	027 Move X8, [X20+24]
	028 Compare X8, 0
	029 JumpIfEqual {167}
	030 Compare W8, 0
	031 JumpIfEqual {185}
	032 Move W8, [X20+32]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, 0xB3F000
	035 Move X8, [X8+2968]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X1, X20
	040 Move X2, X31
	041 Call ASN1..ctor, X0, X1
	042 Compare X19, 0
	043 JumpIfEqual {187}
	044 Move X0, X19
	045 Move X1, X31
	046 Call ASN1.get_Count, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X19
	049 Move W1, W31
	050 Move X2, X31
	051 Call ASN1.get_Item, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {189}
	054 Move W8, [X0+16]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W1, 1
	057 Move X0, X19
	058 Move X2, X31
	059 Call ASN1.get_Item, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {192}
	062 Move W8, [X0+16]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W1, 2
	065 Move X0, X19
	066 Move X2, X31
	067 Call ASN1.get_Item, X0, X1
	068 Compare X0, 0
	069 JumpIfEqual {194}
	070 Move W8, [X0+16]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X19
	073 Move X1, X31
	074 Call ASN1.get_Count, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X19
	077 Move W1, W31
	078 Move X2, X31
	079 Call ASN1.get_Item, X0, X1
	080 Compare X0, 0
	081 JumpIfEqual {190}
	082 Move W8, [X0+16]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W1, 1
	085 Move X0, X19
	086 Move X2, X31
	087 Call ASN1.get_Item, X0, X1
	088 Compare X0, 0
	089 JumpIfEqual {193}
	090 Move W8, [X0+16]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W1, 2
	093 Move X0, X19
	094 Move X2, X31
	095 Call ASN1.get_Item, X0, X1
	096 Compare X0, 0
	097 JumpIfEqual {195}
	098 Move W8, [X0+16]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W8, 3
	101 Move X0, X31
	102 Call Encoding.get_ASCII
	103 Compare X0, 0
	104 JumpIfEqual {186}
	105 Move X8, [X0]
	106 Move X1, X20
	107 Move X9, [X8+888]
	108 Move X2, [X8+896]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {186}
	112 Move X8, 0xB58000
	113 Move X8, [X8+480]
	114 Move X2, X31
	115 Move X1, [X8]
	116 Call String.IndexOf, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, -2147483648
	119 Compare TEMP, -2147483648
	120 JumpIfEqual {159}
	121 Move W8, 1
	122 Move X0, X19
	123 Move X1, X31
	124 Call ASN1.get_Count, X0
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X19
	127 Move W1, W31
	128 Move X2, X31
	129 Call ASN1.get_Item, X0, X1
	130 Compare X0, 0
	131 JumpIfEqual {188}
	132 Move W8, [X0+16]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X19
	135 Move W1, W31
	136 Move X2, X31
	137 Call ASN1.get_Item, X0, X1
	138 Move X20, 0xB58000
	139 Move X20, [X20+432]
	140 Move X19, X0
	141 Move X0, [X20]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Compare X19, 0
	147 JumpIfEqual {191}
	148 Move X8, [X20]
	149 Move X8, [X8+184]
	150 Move X1, [X8]
	151 Move X0, X19
	152 Move X2, X31
	153 Call ASN1.CompareValue, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {237}
	158 Move W8, 5
	159 Move X8, 0xB58000
	160 Move X8, [X8+472]
	161 Move X0, [X8]
	162 Call 0x1C17F10
	163 Move X1, X20
	164 Move X2, X31
	165 Call AuthenticodeDeformatter..ctor, X0, X1
	166 Move W8, 6
	167 Move X0, 0xB1A000
	168 Move X0, [X0+1400]
	169 Call 0x1C17D08
	170 Call 0x1C17F10
	171 Move X19, X0
	172 Move X0, 0xB58000
	173 Move X0, [X0+488]
	174 Call 0x1C17D08
	175 Move X1, X0
	176 Move X0, X19
	177 Move X2, X31
	178 Call ArgumentException..ctor, X0, X1
	179 Move X0, 0xB58000
	180 Move X0, [X0+496]
	181 Call 0x1C17D08
	182 Move X1, X0
	183 Move X0, X19
	184 Call 0x1C17DEC
	185 Call 0x1C17F28
	186 Call 0x1C17F20
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 Call 0x1C17F20
	190 Call 0x1C17F20
	191 Call 0x1C17F20
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Call 0x1C17F20
	195 Call 0x1C17F20
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X19, X0
	198 Move X0, X19
	199 Call 0x3EB2AD0
	200 Move X19, X0
	201 Move X0, 0xB18000
	202 Move X0, [X0+3264]
	203 Call 0x1C17D08
	204 Move X8, [X19]
	205 Move X1, [X8]
	206 Call 0x1C18270
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {236}
	211 Move W0, 8
	212 Call 0x3EB2AF0
	213 Move X8, [X19]
	214 Move [X0], X8
	215 Move X1, 0x8D3000
	216 Add X1, X1, 3672
	217 Move X2, X31
	218 Call 0x3EB2B00
	219 Move X19, X0
	220 Call 0x3EB2AE0
	221 Move X19, X0
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X0, X19
	224 Call 0x3EB2AD0
	225 Move X19, X0
	226 Move X0, 0xB12000
	227 Move X0, [X0+2000]
	228 Call 0x1C17D08
	229 Move X8, [X19]
	230 Move X1, [X8]
	231 Call 0x1C18270
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {243}
	236 Call 0x3EB2AE0
	237 Move W8, W31
	238 Move X20, [X31+16]
	239 Move X19, [X31+24]
	240 Move W0, W8
	241 Move X30, [X31+32]
	242 Return X0
	243 Move W0, 8
	244 Call 0x3EB2AF0
	245 Move X8, [X19]
	246 Move [X0], X8
	247 Move X1, 0x8D3000
	248 Add X1, X1, 3672
	249 Move X2, X31
	250 Call 0x3EB2B00
	251 Move X19, X0
	252 Call 0x3EB2AE0
	253 Move X0, X19
	254 Call 0x1D2D690
	255 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x035E22C0 LDRB W21, [X2 + 0x52]
	0x035E22C4 STR X0, [X0 + 0x40]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x035E2910 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E2914 ADD X8, X8, 0x464
	0x035E2918 B 0x35E292C
	0x035E291C CMP W21, 0x1
	0x035E2920 B.NE 0x35E2934
	0x035E2924 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E2928 ADD X8, X8, 0x440
	0x035E292C STR X8, [X19 + 0x18]
	0x035E2930 B 0x35E2948
	0x035E2934 CBZ X20, 0x35E2960
	0x035E2938 LDR X8, [X19 + 0x10]
	0x035E293C LDR X9, [X19 + 0x20]
	0x035E2940 STR X8, [X19 + 0x18]
	0x035E2944 STR X9, [X19 + 0x40]
	0x035E2948 ADRP X8, 0xFFFFFFFFFE5E1000
	0x035E294C ADD X8, X8, 0x3E0
	0x035E2950 STR X8, [X19 + 0x38]
	0x035E2954 LDP X20, X19, [X31 + 0x10]
	0x035E2958 LDP X30, X21, [X31], #0x20
	0x035E295C RET
	0x035E2960 ADRP X1, 0xFFFFFFFFFD539000
	0x035E2964 ADD X1, X1, 0xEE3
	0x035E2968 MOV X0, X31
	0x035E296C BL 0x1C16F3C
	0x035E2970 MOV X1, X31
	0x035E2974 BL 0x1C16DEC
	0x035E2978 LDR X8, [X0 + 0x40]
	0x035E297C LDR X4, [X0 + 0x18]
	0x035E2980 LDR X3, [X0 + 0x28]
	0x035E2984 MOV X0, X8
	0x035E2988 BR X4
	0x035E298C STP X30, X21, [X31 - 0x20]!
	0x035E2990 STP X20, X19, [X31 + 0x10]
	0x035E2994 LDR X8, [X2 + 0x8]
	0x035E2998 STP X1, X2, [X0 + 0x20]
	0x035E299C MOV X19, X0
	0x035E29A0 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDFF000
	007 Move X22, 0xB12000
	008 Move X19, 0xB58000
	009 Move X20, 0xB58000
	010 Move W8, [X21+634]
	011 Move X22, [X22+1560]
	012 Move X19, [X19+504]
	013 Move X20, [X20+432]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xB12000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xB58000
	022 Move X0, [X0+504]
	023 Call 0x1C17CF4
	024 Move X0, 0xB58000
	025 Move X0, [X0+432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+634], W8
	029 Move X0, [X22]
	030 Move W1, 9
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

