Type: Mono.Unity.UnityTlsContext

Method: System.Void .ctor(Mono.Net.Security.MobileAuthenticatedStream parent, Mono.Net.Security.MonoSslAuthenticationOptions options)

Disassembly:
	0x035E4BF0 CBZ X0, 0x35E4C6C
	0x035E4BF4 LDR X8, [X0 + 0x88]
	0x035E4BF8 CBZ X8, 0x35E4C6C
	0x035E4BFC LDR X1, [X19 + 0x60]
	0x035E4C00 LDR X9, [X8 + 0x18]
	0x035E4C04 LDR X0, [X8 + 0x40]
	0x035E4C08 LDR X2, [X8 + 0x28]
	0x035E4C0C BLR X9
	0x035E4C10 BL 0x35E1D34
	0x035E4C14 CBZ X0, 0x35E4C6C
	0x035E4C18 LDR X8, [X0 + 0x48]
	0x035E4C1C CBZ X8, 0x35E4C6C
	0x035E4C20 LDR X1, [X19 + 0x68]
	0x035E4C24 LDR X9, [X8 + 0x18]
	0x035E4C28 LDR X0, [X8 + 0x40]
	0x035E4C2C LDR X2, [X8 + 0x28]
	0x035E4C30 BLR X9
	0x035E4C34 BL 0x35E1D34
	0x035E4C38 CBZ X0, 0x35E4C6C
	0x035E4C3C LDR X8, [X0 + 0x108]
	0x035E4C40 CBZ X8, 0x35E4C6C
	0x035E4C44 LDR X1, [X19 + 0x58]
	0x035E4C48 LDR X9, [X8 + 0x18]
	0x035E4C4C LDR X0, [X8 + 0x40]
	0x035E4C50 LDR X2, [X8 + 0x28]
	0x035E4C54 BLR X9
	0x035E4C58 STR X31, [X19 + 0x58]
	0x035E4C5C STRB W31, [X19 + 0xA9]
	0x035E4C60 LDP X30, X19, [X31 + 0x10]
	0x035E4C64 ADD X31, X31, 0x20
	0x035E4C68 RET
	0x035E4C6C BL 0x1C16F20
	0x035E4C70 STR X30, [X31 - 0x10]!
	0x035E4C74 LDR X8, [X0 + 0x20]
	0x035E4C78 CBZ X8, 0x35E4C88
	0x035E4C7C LDR X0, [X8 + 0x90]
	0x035E4C80 LDR X30, [X31], #0x10
	0x035E4C84 RET
	0x035E4C88 BL 0x1C16F20
	0x035E4C8C STP X30, X19, [X31 - 0x10]!
	0x035E4C90 MOV X19, X0
	0x035E4C94 TBZ X1, 0x0, 0x35E4CB8
	0x035E4C98 LDR X8, [X19]
	0x035E4C9C LDR X1, [X8 + 0x210]
	0x035E4CA0 LDR X9, [X8 + 0x208]
	0x035E4CA4 MOV X0, X19
	0x035E4CA8 BLR X9
	0x035E4CAC STP X31, X31, [X19 + 0x90]
	0x035E4CB0 STRH W31, [X19 + 0xA8]
	0x035E4CB4 STR X31, [X19 + 0xA0]
	0x035E4CB8 ADD X0, X19, 0xC0
	0x035E4CBC MOV X1, X31
	0x035E4CC0 BL 0x32C0794
	0x035E4CC4 LDP X30, X19, [X31], #0x10
	0x035E4CC8 RET
	0x035E4CCC B 0x35E4CD0
	0x035E4CD0 CMP W1, 0x1
	0x035E4CD4 B.NE 0x35E4CF4
	0x035E4CD8 BL 0x3EB1AD0
	0x035E4CDC LDR X19, [X0]
	0x035E4CE0 BL 0x3EB1AE0
	0x035E4CE4 CBZ X19, 0x35E4CC4
	0x035E4CE8 MOV X0, X19
	0x035E4CEC BL 0x1C16F18
	0x035E4CF0 CBNZ X19, 0x35E4CF8
	0x035E4CF4 BL 0x1D2C690
	0x035E4CF8 MOV X0, X19
	0x035E4CFC BL 0x1C16F18
	0x035E4D00 BL 0x1990590
	0x035E4D04 SUB X31, X31, 0x40
	0x035E4D08 STR X30, [X31 + 0x10]
	0x035E4D0C STP X22, X21, [X31 + 0x20]
	0x035E4D10 STP X20, X19, [X31 + 0x30]
	0x035E4D14 ADRP X20, 0xDFC000
	0x035E4D18 LDRB W8, [X20 + 0x284]
	0x035E4D1C MOV X19, X0
	0x035E4D20 TBNZ X8, 0x0, 0x35E4D44
	0x035E4D24 ADRP X0, 0xB55000
	0x035E4D28 LDR X0, [X0 + 0x2E8]
	0x035E4D2C BL 0x1C16CF4
	0x035E4D30 ADRP X0, 0xB55000
	0x035E4D34 LDR X0, [X0 + 0x2F0]
	0x035E4D38 BL 0x1C16CF4
	0x035E4D3C MOVZ W8, 0x1
	0x035E4D40 STRB W8, [X20 + 0x284]
	0x035E4D44 STP X31, X31, [X31]
	0x035E4D48 LDR X8, [X19 + 0x20]
	0x035E4D4C CBZ X8, 0x35E4E7C
	0x035E4D50 LDR X8, [X8 + 0x90]
	0x035E4D54 CBZ X8, 0x35E4E68
	0x035E4D58 LDR X8, [X8 + 0x68]
	0x035E4D5C CBZ X8, 0x35E4E68
	0x035E4D60 ADRP X9, 0xB55000
	0x035E4D64 LDR X9, [X9 + 0x2F0]
	0x035E4D68 LDR W1, [X8 + 0x18]
	0x035E4D6C LDR X0, [X9]
	0x035E4D70 BL 0x1C16D6C
	0x035E4D74 CBZ X0, 0x35E4E7C
	0x035E4D78 LDR W8, [X0 + 0x18]
	0x035E4D7C MOV X20, X0
	0x035E4D80 UBFM X9, X8, 0x20, 0x1F
	0x035E4D84 CMP X9, 0x1
	0x035E4D88 B.LT 0x35E4DDC
	0x035E4D8C LDR X10, [X19 + 0x20]
	0x035E4D90 MOV X9, X31
	0x035E4D94 SXTW X11, W8
	0x035E4D98 ADD X12, X20, 0x20
	0x035E4D9C CBZ X10, 0x35E4E7C
	0x035E4DA0 LDR X13, [X10 + 0x90]
	0x035E4DA4 CBZ X13, 0x35E4E7C
	0x035E4DA8 LDR X13, [X13 + 0x68]
	0x035E4DAC CBZ X13, 0x35E4E7C
	0x035E4DB0 LDR W14, [X13 + 0x18]
	0x035E4DB4 CMP X9, X14
	0x035E4DB8 B.CS 0x35E4E80
	0x035E4DBC CMP X9, X8
	0x035E4DC0 B.CS 0x35E4E80
	0x035E4DC4 ADD X13, X13, X9, 0x1, LSL
	0x035E4DC8 LDRH W13, [X13 + 0x20]
	0x035E4DCC STR W13, [X12, X9, LSL #2]
	0x035E4DD0 ADD X9, X9, 0x1
	0x035E4DD4 CMP X11, X9
	0x035E4DD8 B.NE 0x35E4D9C
	0x035E4DDC BL 0x35E1D34
	0x035E4DE0 CBZ X0, 0x35E4E7C
	0x035E4DE4 LDR X8, [X0 + 0x20]
	0x035E4DE8 CBZ X8, 0x35E4E7C
	0x035E4DEC LDR X9, [X8 + 0x18]
	0x035E4DF0 LDR X0, [X8 + 0x40]
	0x035E4DF4 LDR X1, [X8 + 0x28]
	0x035E4DF8 BLR X9
	0x035E4DFC STP X0, X1, [X31]
	0x035E4E00 LDR W8, [X20 + 0x18]
	0x035E4E04 ADD X9, X20, 0x20
	0x035E4E08 CMP W8, 0x0
	0x035E4E0C CSEL X21, X31, X9, EQ
	0x035E4E10 BL 0x35E1D34
	0x035E4E14 CBZ X0, 0x35E4E7C
	0x035E4E18 LDR X22, [X0 + 0xD0]
	0x035E4E1C LDR W0, [X20 + 0x18]
	0x035E4E20 LDR X19, [X19 + 0x58]
	0x035E4E24 MOV X1, X31
	0x035E4E28 BL 0x33C6930
	0x035E4E2C CBZ X22, 0x35E4E7C
	0x035E4E30 MOV X3, X0
	0x035E4E34 LDR X8, [X22 + 0x18]
	0x035E4E38 LDR X0, [X22 + 0x40]
	0x035E4E3C LDR X5, [X22 + 0x28]
	0x035E4E40 ADD X4, X31, 0x0
	0x035E4E44 MOV X1, X19
	0x035E4E48 MOV X2, X21
	0x035E4E4C BLR X8
	0x035E4E50 ADRP X8, 0xB55000
	0x035E4E54 LDP X0, X1, [X31]
	0x035E4E58 LDR X8, [X8 + 0x2E8]
	0x035E4E5C MOVZ W3, 0x28
	0x035E4E60 LDR X2, [X8]
	0x035E4E64 BL 0x35E1DFC
	0x035E4E68 LDP X20, X19, [X31 + 0x30]
	0x035E4E6C LDP X22, X21, [X31 + 0x20]
	0x035E4E70 LDR X30, [X31 + 0x10]
	0x035E4E74 ADD X31, X31, 0x40
	0x035E4E78 RET
	0x035E4E7C BL 0x1C16F20
	0x035E4E80 BL 0x1C16F28
	0x035E4E84 SUB X31, X31, 0x30
	0x035E4E88 STR X30, [X31 + 0x10]
	0x035E4E8C STP X20, X19, [X31 + 0x20]
	0x035E4E90 ADRP X20, 0xDFC000
	0x035E4E94 LDRB W8, [X20 + 0x285]
	0x035E4E98 MOV X19, X0
	0x035E4E9C TBNZ X8, 0x0, 0x35E4EB4
	0x035E4EA0 ADRP X0, 0xB55000
	0x035E4EA4 LDR X0, [X0 + 0x2F8]
	0x035E4EA8 BL 0x1C16CF4
	0x035E4EAC MOVZ W8, 0x1
	0x035E4EB0 STRB W8, [X20 + 0x285]
	0x035E4EB4 STR X31, [X19 + 0xC8]
	0x035E4EB8 BL 0x35E1D34
	0x035E4EBC CBZ X0, 0x35E4FD0
	0x035E4EC0 LDR X8, [X0 + 0x20]
	0x035E4EC4 CBZ X8, 0x35E4FD0
	0x035E4EC8 LDR X9, [X8 + 0x18]
	0x035E4ECC LDR X0, [X8 + 0x40]
	0x035E4ED0 LDR X1, [X8 + 0x28]
	0x035E4ED4 BLR X9
	0x035E4ED8 STP X0, X1, [X31]
	0x035E4EDC BL 0x35E1D34
	0x035E4EE0 CBZ X0, 0x35E4FD0
	0x035E4EE4 LDR X8, [X0 + 0xE8]
	0x035E4EE8 CBZ X8, 0x35E4FD0
	0x035E4EEC LDR X1, [X19 + 0x58]
	0x035E4EF0 LDR X9, [X8 + 0x18]
	0x035E4EF4 LDR X0, [X8 + 0x40]
	0x035E4EF8 LDR X3, [X8 + 0x28]
	0x035E4EFC ADD X2, X31, 0x0
	0x035E4F00 BLR X9
	0x035E4F04 LDR W8, [X31 + 0x4]
	0x035E4F08 MOVZ W9, 0x1
	0x035E4F0C MOVK W9, 0x100000
	0x035E4F10 CMP W8, W9
	0x035E4F14 B.NE 0x35E4F20
	0x035E4F18 MOV W0, W31
	0x035E4F1C B 0x35E4FC0
	0x035E4F20 LDR X8, [X19 + 0xC8]
	0x035E4F24 CBNZ X8, 0x35E4FD4
	0x035E4F28 ADRP X8, 0xB55000
	0x035E4F2C MOV W2, W0
	0x035E4F30 LDP X0, X1, [X31]
	0x035E4F34 LDR X8, [X8 + 0x2F8]
	0x035E4F38 MOVZ W9, 0x80000000
	0x035E4F3C CMP W2, W9
	0x035E4F40 LDR X8, [X8]
	0x035E4F44 B.NE 0x35E4FB0
	0x035E4F48 LDRB W9, [X19 + 0x28]
	0x035E4F4C CBZ W9, 0x35E4FB0
	0x035E4F50 MOVZ W3, 0x28
	0x035E4F54 MOV X2, X8
	0x035E4F58 BL 0x35E1DFC
	0x035E4F5C MOV X0, X19
	0x035E4F60 MOV X1, X31
	0x035E4F64 MOV X2, X31
	0x035E4F68 BL 0x35E4FF0
	0x035E4F6C TBNZ X0, 0x0, 0x35E4FBC
	0x035E4F70 ADRP X0, 0xB55000
	0x035E4F74 LDR X0, [X0 + 0x220]
	0x035E4F78 BL 0x1C16D08
	0x035E4F7C BL 0x1C16F10
	0x035E4F80 MOV X19, X0
	0x035E4F84 ADRP X0, 0xB55000
	0x035E4F88 LDR X0, [X0 + 0x300]
	0x035E4F8C BL 0x1C16D08
	0x035E4F90 MOV X2, X0
	0x035E4F94 MOVZ W1, 0x28
	0x035E4F98 MOV X0, X19
	0x035E4F9C MOV X3, X31
	0x035E4FA0 BL 0x31FDB0C
	0x035E4FA4 ADRP X0, 0xB55000
	0x035E4FA8 LDR X0, [X0 + 0x308]
	0x035E4FAC B 0x35E4FE0
	0x035E4FB0 MOVZ W4, 0x28
	0x035E4FB4 MOV X3, X8
	0x035E4FB8 BL 0x35E1E94
	0x035E4FBC MOVZ W0, 0x1
	0x035E4FC0 LDP X20, X19, [X31 + 0x20]
	0x035E4FC4 LDR X30, [X31 + 0x10]
	0x035E4FC8 ADD X31, X31, 0x30
	0x035E4FCC RET
	0x035E4FD0 BL 0x1C16F20
	0x035E4FD4 ADRP X0, 0xB55000
	0x035E4FD8 LDR X0, [X0 + 0x308]
	0x035E4FDC MOV X19, X8
	0x035E4FE0 BL 0x1C16D08
	0x035E4FE4 MOV X1, X0
	0x035E4FE8 MOV X0, X19
	0x035E4FEC BL 0x1C16DEC
	0x035E4FF0 STR X30, [X31 - 0x10]!
	0x035E4FF4 MOV X8, X0
	0x035E4FF8 LDR X0, [X0 + 0x10]
	0x035E4FFC CBZ X0, 0x35E503C
	0x035E5000 MOV X4, X2
	0x035E5004 MOV X3, X1
	0x035E5008 LDRB W2, [X8 + 0x28]
	0x035E500C LDR X1, [X8 + 0x30]
	0x035E5010 BL 0x35EA234
	0x035E5014 CBZ X0, 0x35E5034
	0x035E5018 LDRB W8, [X0 + 0x10]
	0x035E501C CBZ W8, 0x35E5030
	0x035E5020 LDRB W8, [X0 + 0x11]
	0x035E5024 CMP W8, 0x0
	0x035E5028 CSET W0, EQ
	0x035E502C B 0x35E5034
	0x035E5030 MOV W0, W31
	0x035E5034 LDR X30, [X31], #0x10
	0x035E5038 RET
	0x035E503C BL 0x1C16F20
	0x035E5040 SUB X31, X31, 0x40
	0x035E5044 STR X30, [X31 + 0x10]
	0x035E5048 STP X22, X21, [X31 + 0x20]
	0x035E504C STP X20, X19, [X31 + 0x30]
	0x035E5050 ADRP X20, 0xDFB000
	0x035E5054 LDRB W8, [X20 + 0x286]
	0x035E5058 MOV X19, X0
	0x035E505C TBNZ X8, 0x0, 0x35E5074
	0x035E5060 ADRP X0, 0xB54000
	0x035E5064 LDR X0, [X0 + 0x310]
	0x035E5068 BL 0x1C16CF4
	0x035E506C MOVZ W8, 0x1
	0x035E5070 STRB W8, [X20 + 0x286]
	0x035E5074 BL 0x35E1D34
	0x035E5078 CBZ X0, 0x35E5160
	0x035E507C LDR X8, [X0 + 0x20]
	0x035E5080 CBZ X8, 0x35E5160
	0x035E5084 LDR X9, [X8 + 0x18]
	0x035E5088 LDR X0, [X8 + 0x40]
	0x035E508C LDR X1, [X8 + 0x28]
	0x035E5090 BLR X9
	0x035E5094 STP X0, X1, [X31]
	0x035E5098 BL 0x35E1D34
	0x035E509C CBZ X0, 0x35E5160
	0x035E50A0 LDR X8, [X0 + 0xD8]
	0x035E50A4 CBZ X8, 0x35E5160
	0x035E50A8 LDR X1, [X19 + 0x58]
	0x035E50AC LDR X9, [X8 + 0x18]
	0x035E50B0 LDR X0, [X8 + 0x40]
	0x035E50B4 LDR X3, [X8 + 0x28]
	0x035E50B8 ADD X2, X31, 0x0
	0x035E50BC BLR X9
	0x035E50C0 MOV W20, W0
	0x035E50C4 BL 0x35E1D34
	0x035E50C8 CBZ X0, 0x35E5160
	0x035E50CC LDR X8, [X0 + 0xE0]
	0x035E50D0 CBZ X8, 0x35E5160
	0x035E50D4 LDR X1, [X19 + 0x58]
	0x035E50D8 LDR X9, [X8 + 0x18]
	0x035E50DC LDR X0, [X8 + 0x40]
	0x035E50E0 LDR X3, [X8 + 0x28]
	0x035E50E4 ADRP X21, 0xB54000
	0x035E50E8 LDR X21, [X21 + 0x310]
	0x035E50EC ADD X2, X31, 0x0
	0x035E50F0 BLR X9
	0x035E50F4 LDR X8, [X21]
	0x035E50F8 MOV W22, W0
	0x035E50FC MOV X0, X8
	0x035E5100 BL 0x1C16F10
	0x035E5104 MOV X1, X31
	0x035E5108 MOV X21, X0
	0x035E510C BL 0x31FD4F8
	0x035E5110 CBZ X21, 0x35E5160
	0x035E5114 CMP W22, 0x3
	0x035E5118 STRH W20, [X21 + 0x10]
	0x035E511C B.HI 0x35E5130
	0x035E5120 ADRP X8, 0xFFFFFFFFFD5B2000
	0x035E5124 ADD X8, X8, 0x270
	0x035E5128 LDR W8, [X8, W22, SXTW]
	0x035E512C B 0x35E5134
	0x035E5130 MOV W8, W31
	0x035E5134 STR W8, [X21 + 0x14]
	0x035E5138 LDR X8, [X19 + 0x38]
	0x035E513C MOVZ W9, 0x1
	0x035E5140 LDR X30, [X31 + 0x10]
	0x035E5144 STR X8, [X21 + 0x18]
	0x035E5148 STR X21, [X19 + 0xA0]
	0x035E514C STRB W9, [X19 + 0xA8]
	0x035E5150 LDP X20, X19, [X31 + 0x30]
	0x035E5154 LDP X22, X21, [X31 + 0x20]
	0x035E5158 ADD X31, X31, 0x40
	0x035E515C RET
	0x035E5160 BL 0x1C16F20
	0x035E5164 CMP W0, 0x3
	0x035E5168 B.HI 0x35E517C
	0x035E516C ADRP X8, 0xFFFFFFFFFD5B2000
	0x035E5170 ADD X8, X8, 0x270
	0x035E5174 LDR W0, [X8, W0, SXTW]
	0x035E5178 RET
	0x035E517C MOV W0, W31
	0x035E5180 RET
	0x035E5184 STR X30, [X31 - 0x40]!
	0x035E5188 STP X24, X23, [X31 + 0x10]
	0x035E518C STP X22, X21, [X31 + 0x20]
	0x035E5190 STP X20, X19, [X31 + 0x30]
	0x035E5194 ADRP X23, 0xDFB000
	0x035E5198 LDRB W8, [X23 + 0x288]
	0x035E519C MOV X20, X3
	0x035E51A0 MOV X21, X2
	0x035E51A4 MOV X22, X1
	0x035E51A8 MOV X19, X0
	0x035E51AC TBNZ X8, 0x0, 0x35E51D0
	0x035E51B0 ADRP X0, 0xB0E000
	0x035E51B4 LDR X0, [X0 + 0x618]
	0x035E51B8 BL 0x1C16CF4
	0x035E51BC ADRP X0, 0xB36000
	0x035E51C0 LDR X0, [X0 + 0x850]
	0x035E51C4 BL 0x1C16CF4
	0x035E51C8 MOVZ W8, 0x1
	0x035E51CC STRB W8, [X23 + 0x288]
	0x035E51D0 LDR X23, [X19 + 0xB0]
	0x035E51D4 CBZ X23, 0x35E51F0
	0x035E51D8 MOV X0, X21
	0x035E51DC MOV X1, X31
	0x035E51E0 BL 0x33C6940
	0x035E51E4 LDR W8, [X23 + 0x18]
	0x035E51E8 CMP W0, W8
	0x035E51EC B.LE 0x35E5214
	0x035E51F0 MOV X0, X21
	0x035E51F4 MOV X1, X31
	0x035E51F8 BL 0x33C6940
	0x035E51FC MOV W1, W0
	0x035E5200 ADRP X8, 0xB0E000
	0x035E5204 LDR X8, [X8 + 0x618]
	0x035E5208 LDR X0, [X8]
	0x035E520C BL 0x1C16D6C
	0x035E5210 STR X0, [X19 + 0xB0]
	0x035E5214 MOV X0, X22
	0x035E5218 MOV X1, X31
	0x035E521C BL 0x33C693C
	0x035E5220 LDR X23, [X19 + 0xB0]
	0x035E5224 MOV X22, X0
	0x035E5228 MOV X0, X21
	0x035E522C MOV X1, X31
	0x035E5230 BL 0x33C6940
	0x035E5234 ADRP X8, 0xB36000
	0x035E5238 LDR X8, [X8 + 0x850]
	0x035E523C MOV W24, W0
	0x035E5240 LDR X0, [X8]
	0x035E5244 LDR W8, [X0 + 0xE0]
	0x035E5248 CBNZ W8, 0x35E5250
	0x035E524C BL 0x1C16DFC
	0x035E5250 MOV X0, X22
	0x035E5254 MOV X1, X23
	0x035E5258 MOV W2, W31
	0x035E525C MOV W3, W24
	0x035E5260 MOV X4, X31
	0x035E5264 BL 0x32C0C8C
	0x035E5268 LDR X22, [X19 + 0x20]
	0x035E526C LDR X23, [X19 + 0xB0]
	0x035E5270 MOV X0, X21
	0x035E5274 MOV X1, X31
	0x035E5278 BL 0x33C6940
	0x035E527C CBZ X22, 0x35E52EC
	0x035E5280 MOV W3, W0
	0x035E5284 MOV X0, X22
	0x035E5288 MOV X1, X23
	0x035E528C MOV W2, W31
	0x035E5290 BL 0x35E53E4
	0x035E5294 TBNZ X0, 0x0, 0x35E52D4
	0x035E5298 BL 0x35E1D34
	0x035E529C CBZ X0, 0x35E52F0
	0x035E52A0 LDR X8, [X0 + 0x28]
	0x035E52A4 CBZ X8, 0x35E52F4
	0x035E52A8 LDR X0, [X8 + 0x40]
	0x035E52AC LDR X9, [X8 + 0x18]
	0x035E52B0 LDR X3, [X8 + 0x28]
	0x035E52B4 MOVZ W2, 0x3
	0x035E52B8 MOVK W2, 0x100000
	0x035E52BC MOV X1, X20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X22, 0xDFD000
	013 Move W8, [X22+640]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0xB56000
	022 Move X0, [X0+592]
	023 Call 0x1C17CF4
	024 Move X0, 0xB56000
	025 Move X0, [X0+600]
	026 Call 0x1C17CF4
	027 Move X0, 0xB56000
	028 Move X0, [X0+608]
	029 Call 0x1C17CF4
	030 Move X0, 0xB56000
	031 Move X0, [X0+616]
	032 Call 0x1C17CF4
	033 Move X0, 0xB56000
	034 Move X0, [X0+624]
	035 Call 0x1C17CF4
	036 Move X0, 0xB56000
	037 Move X0, [X0+632]
	038 Call 0x1C17CF4
	039 Move X0, 0xB56000
	040 Move X0, [X0+640]
	041 Call 0x1C17CF4
	042 Move X0, 0xB56000
	043 Move X0, [X0+648]
	044 Call 0x1C17CF4
	045 Move X0, 0xB56000
	046 Move X0, [X0+656]
	047 Call 0x1C17CF4
	048 Move X0, 0xB56000
	049 Move X0, [X0+664]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+640], W8
	053 Move X26, X19
	054 Move X0, X19
	055 Move X1, X21
	056 Move X2, X20
	057 Move [X31+16], X31
	058 Move [X31+24], X31
	059 Move [X26+88], X31
	060 Move [X19+96], X31
	061 Move [X19+104], X31
	062 Call MobileTlsContext..ctor, X0, X1, X2
	063 Move X0, X19
	064 Move X1, X31
	065 Call GCHandle.Alloc, X0
	066 Move [X19+192], X0
	067 Call UnityTls.get_NativeInterface
	068 Compare X0, 0
	069 JumpIfEqual {463}
	070 Move X8, [X0+32]
	071 Compare X8, 0
	072 JumpIfEqual {463}
	073 Move X9, [X8+24]
	074 Move X0, [X8+64]
	075 Move X1, [X8+40]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move [X31+32], X0
	078 Move [X31+40], X1
	079 Compare X20, 0
	080 JumpIfEqual {463}
	081 Move X8, [X20]
	082 Move X0, X20
	083 Move X9, [X8+392]
	084 Move X1, [X8+400]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 NotImplemented "Instruction ORN not yet implemented."
	087 And W31, W8, 192
	088 Move X21, X31
	089 And W31, W8, 768
	090 Move W21, 1
	091 Move W8, 3072
	092 NotImplemented "Instruction BICS not yet implemented."
	093 NotImplemented "Instruction CSET not yet implemented."
	094 Move X21, X8
	095 ShiftRight X21, 63
	096 And X21, X21, 0x3FFFFFFF
	097 Move X8, [X20]
	098 Move X25, 0xB56000
	099 Move X25, [X25+648]
	100 Move X22, 0xB56000
	101 Move X9, [X8+392]
	102 Move X1, [X8+400]
	103 Move X24, 0xB56000
	104 Move X23, 0xB56000
	105 Move X22, [X22+600]
	106 Move X24, [X24+656]
	107 Move X23, [X23+616]
	108 Move X0, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 NotImplemented "Instruction ORN not yet implemented."
	111 And W31, W8, 3072
	112 Move X8, 2
	113 And W31, W8, 768
	114 Move X8, 1
	115 Move W8, 192
	116 NotImplemented "Instruction BICS not yet implemented."
	117 NotImplemented "Instruction CSET not yet implemented."
	118 Move X8, X8
	119 ShiftRight X8, 31
	120 And X8, X8, 0x3FFFFFFF
	121 Move X0, [X25]
	122 Or X21, X8, X21
	123 Call 0x1C17F10
	124 Move X2, [X22]
	125 Move X1, X31
	126 Move X22, X0
	127 Call unitytls_tlsctx_read_callback..ctor, X0, X1, X2
	128 Move [X19+112], X22
	129 Move X0, [X24]
	130 Call 0x1C17F10
	131 Move X2, [X23]
	132 Move X1, X31
	133 Move X22, X0
	134 Call unitytls_tlsctx_write_callback..ctor, X0, X1, X2
	135 Move X0, [X19+192]
	136 Move X27, [X19+112]
	137 Move X1, X31
	138 Move [X19+120], X22
	139 Call IntPtr.op_Explicit, X0
	140 Move X8, [X20]
	141 Move X23, X0
	142 Move X0, X20
	143 Move X9, [X8+376]
	144 Move X1, [X8+384]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {334}
	150 Move X8, [X20]
	151 Move X0, X20
	152 Move X9, [X8+488]
	153 Move X1, [X8+496]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Add X1, X31, 32
	156 Add X2, X31, 24
	157 Add X3, X31, 16
	158 Add X24, X31, 24
	159 Add X25, X31, 16
	160 Call UnityTlsContext.ExtractNativeKeyAndChainFromManagedCertificate, X0, X1, X2, X3
	161 Move [X31+72], X31
	162 Move [X31+80], X24
	163 Move [X31+88], X25
	164 Call UnityTls.get_NativeInterface
	165 Compare X0, 0
	166 JumpIfEqual {274}
	167 Move X8, [X0+88]
	168 Compare X8, 0
	169 JumpIfEqual {275}
	170 Move X1, [X31+24]
	171 Move X0, [X8+64]
	172 Move X9, [X8+24]
	173 Move X3, [X8+40]
	174 Add X2, X31, 32
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X24, X0
	177 Call UnityTls.get_NativeInterface
	178 Compare X0, 0
	179 JumpIfEqual {276}
	180 Move X8, [X0+48]
	181 Compare X8, 0
	182 JumpIfEqual {277}
	183 Move X1, [X31+16]
	184 Move X0, [X8+64]
	185 Move X9, [X8+24]
	186 Move X3, [X8+40]
	187 Add X2, X31, 32
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move X8, 0xB56000
	190 Move X25, X0
	191 Move X0, [X31+32]
	192 Move X1, [X31+40]
	193 Move X8, [X8+632]
	194 Move X2, [X8]
	195 Move W3, 80
	196 Call Debug.CheckAndThrow, X0, X1, X2
	197 Call UnityTls.get_NativeInterface
	198 Compare X0, 0
	199 JumpIfEqual {278}
	200 Move X8, [X0+160]
	201 Compare X8, 0
	202 JumpIfEqual {279}
	203 Move X9, [X8+24]
	204 Move X0, [X8+64]
	205 Move [X31+48], X27
	206 Move [X31+56], X22
	207 Move [X31+64], X23
	208 Move X6, [X8+40]
	209 Add X2, X31, 48
	210 Add X5, X31, 32
	211 Move X1, X21
	212 Move X3, X24
	213 Move X4, X25
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move W8, [X19+64]
	216 Move [X19+88], X0
	217 Compare W8, 0
	218 JumpIfEqual {272}
	219 Call UnityTls.get_NativeInterface
	220 Compare X0, 0
	221 JumpIfEqual {280}
	222 Move X8, [X0+104]
	223 Compare X8, 0
	224 JumpIfEqual {281}
	225 Move X0, [X8+64]
	226 Move X9, [X8+24]
	227 Move X2, [X8+40]
	228 Add X1, X31, 32
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X24, X0
	231 Call UnityTls.get_NativeInterface
	232 Compare X0, 0
	233 JumpIfEqual {282}
	234 Move X8, [X0+88]
	235 Compare X8, 0
	236 JumpIfEqual {283}
	237 Move X0, [X8+64]
	238 Move X9, [X8+24]
	239 Move X3, [X8+40]
	240 Add X2, X31, 32
	241 Move X1, X24
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Move X25, X0
	244 Call UnityTls.get_NativeInterface
	245 Compare X0, 0
	246 JumpIfEqual {286}
	247 Move X8, [X0+176]
	248 Compare X8, 0
	249 JumpIfEqual {289}
	250 Move X1, [X26]
	251 Move X0, [X8+64]
	252 Move X9, [X8+24]
	253 Move X4, [X8+40]
	254 Add X3, X31, 32
	255 Move X2, X25
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X25, X31
	258 Move W26, W31
	259 Call UnityTls.get_NativeInterface
	260 Compare X0, 0
	261 JumpIfEqual {284}
	262 Move X8, [X0+136]
	263 Compare X8, 0
	264 JumpIfEqual {285}
	265 Move X0, [X8+64]
	266 Move X9, [X8+24]
	267 Move X2, [X8+40]
	268 Move X1, X24
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X25, 0
	271 JumpIfNotEqual {287}
	272 Add X0, X31, 72
	273 Call 0x1BC58B4
	274 Call 0x1C17F20
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Call 0x1C17F20
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Move X0, X25
	288 Call 0x1C17F18
	289 Call 0x1C17F20
	290 Move X26, X1
	291 Move X25, X0
	292 Move X26, X1
	293 Move X25, X0
	294 Move X24, X31
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X0, X25
	297 Call 0x3EB2AD0
	298 Move X8, [X0]
	299 Move [X31+8], X8
	300 Call 0x3EB2AE0
	301 Move X25, [X31+8]
	302 Move W26, 1
	303 Move [X31+8], X31
	304 Call UnityTls.get_NativeInterface
	305 Compare X0, 0
	306 JumpIfEqual {320}
	307 Move X8, [X0+136]
	308 Compare X8, 0
	309 JumpIfEqual {321}
	310 Move X0, [X8+64]
	311 Move X9, [X8+24]
	312 Move X2, [X8+40]
	313 Move X1, X24
	314 NotImplemented "Instruction BLR not yet implemented."
	315 Move X8, [X31+8]
	316 Compare X8, 0
	317 JumpIfEqual {326}
	318 Move X0, [X31+8]
	319 Call 0x1C17F18
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Move X26, X1
	323 Move X25, X0
	324 Move X26, X1
	325 Move X25, X0
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X0, X25
	328 Call 0x3EB2AD0
	329 Move X8, [X0]
	330 Move [X31+72], X8
	331 Call 0x3EB2AE0
	332 Add X0, X31, 72
	333 Call 0x1BC58B4
	334 Move X0, X31
	335 Call Encoding.get_UTF8
	336 Move X8, [X20]
	337 Move X24, X0
	338 Move X0, X20
	339 Move X9, [X8+456]
	340 Move X1, [X8+464]
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Compare X24, 0
	343 JumpIfEqual {463}
	344 Move X8, [X24]
	345 Move X1, X0
	346 Move X0, X24
	347 Move X9, [X8+616]
	348 Move X2, [X8+624]
	349 NotImplemented "Instruction BLR not yet implemented."
	350 Move X24, X0
	351 Compare X0, 0
	352 JumpIfEqual {357}
	353 Move W8, [X24+24]
	354 Add X9, X24, 32
	355 NotImplemented "Instruction CMP not yet implemented."
	356 NotImplemented "Instruction CSEL not yet implemented."
	357 Move X20, X31
	358 Call UnityTls.get_NativeInterface
	359 Compare X0, 0
	360 JumpIfEqual {463}
	361 Compare X24, 0
	362 JumpIfEqual {463}
	363 Move X25, [X0+168]
	364 Move W0, [X24+24]
	365 Move X1, X31
	366 Call IntPtr.op_Explicit, X0
	367 Compare X25, 0
	368 JumpIfEqual {463}
	369 Move X4, X0
	370 Move X8, [X25+24]
	371 Move X0, [X25+64]
	372 Move [X31+72], X27
	373 Move [X31+80], X22
	374 Move [X31+88], X23
	375 Move X6, [X25+40]
	376 Move X22, 0xB55000
	377 Move X23, 0xB55000
	378 Move X22, [X22+640]
	379 Move X23, [X23+592]
	380 Add X2, X31, 72
	381 Add X5, X31, 32
	382 Move X1, X21
	383 Move X3, X20
	384 NotImplemented "Instruction BLR not yet implemented."
	385 Move [X19+88], X0
	386 Move X0, [X22]
	387 Call 0x1C17F10
	388 Move X2, [X23]
	389 Move X1, X31
	390 Move X20, X0
	391 Call unitytls_tlsctx_certificate_callback..ctor, X0, X1, X2
	392 Move [X19+128], X20
	393 Call UnityTls.get_NativeInterface
	394 Compare X0, 0
	395 JumpIfEqual {463}
	396 Move X22, [X0+184]
	397 Move X0, [X19+192]
	398 Move X20, [X19+88]
	399 Move X21, [X19+128]
	400 Move X1, X31
	401 Call IntPtr.op_Explicit, X0
	402 Compare X22, 0
	403 JumpIfEqual {463}
	404 Move X3, X0
	405 Move X8, [X22+24]
	406 Move X0, [X22+64]
	407 Move X5, [X22+40]
	408 Add X4, X31, 32
	409 Move X1, X20
	410 Move X2, X21
	411 NotImplemented "Instruction BLR not yet implemented."
	412 Move X8, 0xB55000
	413 Move X8, [X8+664]
	414 Move X20, 0xB55000
	415 Move X0, [X8]
	416 Move X20, [X20+608]
	417 Call 0x1C17F10
	418 Move X2, [X20]
	419 Move X1, X31
	420 Move X20, X0
	421 Call unitytls_tlsctx_x509verify_callback..ctor, X0, X1, X2
	422 Move [X19+136], X20
	423 Call UnityTls.get_NativeInterface
	424 Compare X0, 0
	425 JumpIfEqual {463}
	426 Move X22, [X0+200]
	427 Move X0, [X19+192]
	428 Move X20, [X19+88]
	429 Move X21, [X19+136]
	430 Move X1, X31
	431 Call IntPtr.op_Explicit, X0
	432 Compare X22, 0
	433 JumpIfEqual {463}
	434 Move X3, X0
	435 Move X8, [X22+24]
	436 Move X0, [X22+64]
	437 Move X5, [X22+40]
	438 Move X22, 0xB55000
	439 Move X22, [X22+624]
	440 Add X4, X31, 32
	441 Move X1, X20
	442 Move X2, X21
	443 NotImplemented "Instruction BLR not yet implemented."
	444 Move X0, [X31+32]
	445 Move X1, [X31+40]
	446 Move X2, [X22]
	447 Move W3, 80
	448 Call Debug.CheckAndThrow, X0, X1, X2
	449 Move W8, 1
	450 Move [X19+169], W8
	451 Move X20, [X31+160]
	452 Move X19, [X31+168]
	453 Move X22, [X31+144]
	454 Move X21, [X31+152]
	455 Move X24, [X31+128]
	456 Move X23, [X31+136]
	457 Move X26, [X31+112]
	458 Move X25, [X31+120]
	459 Move X30, [X31+96]
	460 Move X27, [X31+104]
	461 Add X31, X31, 176
	462 Return 
	463 Call 0x1C17F20
	464 Move X25, X0
	465 Add X0, X31, 72
	466 Call 0x1BC58B4
	467 Move X0, X25
	468 Call 0x1D2D690
	469 Call 0x1991590

Method: System.Void ExtractNativeKeyAndChainFromManagedCertificate(System.Security.Cryptography.X509Certificates.X509Certificate cert, Mono.Unity.UnityTls/unitytls_errorstate* errorState, out Mono.Unity.UnityTls/unitytls_x509list* nativeCertChain, out Mono.Unity.UnityTls/unitytls_key* nativeKey)

Disassembly:
	0x035E546C MOV X1, X23
	0x035E5470 MOV X3, X22
	0x035E5474 MOV W4, W21
	0x035E5478 MOV W5, W20
	0x035E547C BL 0x35EB8D8
	0x035E5480 LDP X20, X19, [X31 + 0x20]
	0x035E5484 LDP X22, X21, [X31 + 0x10]
	0x035E5488 AND W0, W0, 0x1
	0x035E548C LDP X30, X23, [X31], #0x30
	0x035E5490 RET
	0x035E5494 ADRP X0, 0xB54000
	0x035E5498 LDR X0, [X0 + 0x318]
	0x035E549C BL 0x1C16D08
	0x035E54A0 LDR W8, [X0 + 0xE0]
	0x035E54A4 CBNZ W8, 0x35E54AC
	0x035E54A8 BL 0x1C16DFC
	0x035E54AC BL 0x35EAC5C
	0x035E54B0 ADRP X0, 0xB54000
	0x035E54B4 LDR X0, [X0 + 0x320]
	0x035E54B8 BL 0x1C16D08
	0x035E54BC MOV X1, X0
	0x035E54C0 BL 0x1C16DEC
	0x035E54C4 BL 0x1C16F20
	0x035E54C8 ADRP X0, 0xB54000
	0x035E54CC LDR X0, [X0 + 0x318]
	0x035E54D0 BL 0x1C16D08
	0x035E54D4 LDR W8, [X0 + 0xE0]
	0x035E54D8 CBNZ W8, 0x35E54E0
	0x035E54DC BL 0x1C16DFC
	0x035E54E0 BL 0x35EAC5C
	0x035E54E4 ADRP X0, 0xB54000
	0x035E54E8 LDR X0, [X0 + 0x320]
	0x035E54EC BL 0x1C16D08
	0x035E54F0 MOV X1, X0
	0x035E54F4 BL 0x1C16DEC
	0x035E54F8 B 0x35E550C
	0x035E54FC B 0x35E550C
	0x035E5500 B 0x35E550C
	0x035E5504 B 0x35E550C
	0x035E5508 B 0x35E550C
	0x035E550C MOV X20, X0
	0x035E5510 CMP W1, 0x1
	0x035E5514 B.NE 0x35E55C0
	0x035E5518 MOV X0, X20
	0x035E551C BL 0x3EB1AD0
	0x035E5520 MOV X20, X0
	0x035E5524 ADRP X0, 0xB0E000
	0x035E5528 LDR X0, [X0 + 0x7D0]
	0x035E552C BL 0x1C16D08
	0x035E5530 LDR X8, [X20]
	0x035E5534 LDR X1, [X8]
	0x035E5538 BL 0x1C17270
	0x035E553C TBZ X0, 0x0, 0x35E5598
	0x035E5540 LDR X20, [X20]
	0x035E5544 BL 0x3EB1AE0
	0x035E5548 ADRP X0, 0xB54000
	0x035E554C LDR X0, [X0 + 0x318]
	0x035E5550 BL 0x1C16D08
	0x035E5554 LDR W8, [X0 + 0xE0]
	0x035E5558 CBNZ W8, 0x35E5560
	0x035E555C BL 0x1C16DFC
	0x035E5560 ADRP X0, 0xB54000
	0x035E5564 LDR X0, [X0 + 0x328]
	0x035E5568 BL 0x1C16D08
	0x035E556C MOV X1, X0
	0x035E5570 MOV X0, X20
	0x035E5574 BL 0x35EAAE0
	0x035E5578 MOV X1, X31
	0x035E557C BL 0x32C2380
	0x035E5580 MOV X1, X0
	0x035E5584 ADD X0, X19, 0x40
	0x035E5588 MOV X2, X31
	0x035E558C BL 0x1C24138
	0x035E5590 MOV W0, W31
	0x035E5594 B 0x35E5480
	0x035E5598 MOVZ W0, 0x8
	0x035E559C BL 0x3EB1AF0
	0x035E55A0 LDR X8, [X20]
	0x035E55A4 STR X8, [X0]
	0x035E55A8 ADRP X1, 0x8CF000
	0x035E55AC ADD X1, X1, 0xE58
	0x035E55B0 MOV X2, X31
	0x035E55B4 BL 0x3EB1B00
	0x035E55B8 MOV X20, X0
	0x035E55BC BL 0x3EB1AE0
	0x035E55C0 MOV X0, X20
	0x035E55C4 BL 0x1D2C690
	0x035E55C8 BL 0x1990590
	0x035E55CC STR X30, [X31 - 0x40]!
	0x035E55D0 STP X24, X23, [X31 + 0x10]
	0x035E55D4 STP X22, X21, [X31 + 0x20]
	0x035E55D8 STP X20, X19, [X31 + 0x30]
	0x035E55DC ADRP X21, 0xDFB000
	0x035E55E0 LDRB W8, [X21 + 0x28A]
	0x035E55E4 MOV X20, X3
	0x035E55E8 MOV X22, X2
	0x035E55EC MOV X23, X1
	0x035E55F0 MOV X19, X0
	0x035E55F4 TBNZ X8, 0x0, 0x35E5618
	0x035E55F8 ADRP X0, 0xB0E000
	0x035E55FC LDR X0, [X0 + 0x618]
	0x035E5600 BL 0x1C16CF4
	0x035E5604 ADRP X0, 0xB36000
	0x035E5608 LDR X0, [X0 + 0x850]
	0x035E560C BL 0x1C16CF4
	0x035E5610 MOVZ W8, 0x1
	0x035E5614 STRB W8, [X21 + 0x28A]
	0x035E5618 STRB W31, [X31 + 0xC]
	0x035E561C LDR X21, [X19 + 0xB8]
	0x035E5620 CBZ X21, 0x35E563C
	0x035E5624 MOV X0, X22
	0x035E5628 MOV X1, X31
	0x035E562C BL 0x33C6940
	0x035E5630 LDR W8, [X21 + 0x18]
	0x035E5634 CMP W0, W8
	0x035E5638 B.LE 0x35E5668
	0x035E563C MOV X0, X22
	0x035E5640 MOV X1, X31
	0x035E5644 BL 0x33C6940
	0x035E5648 MOV W1, W0
	0x035E564C ADRP X8, 0xB0E000
	0x035E5650 LDR X8, [X8 + 0x618]
	0x035E5654 LDR X0, [X8]
	0x035E5658 BL 0x1C16D6C
	0x035E565C MOV X21, X0
	0x035E5660 STR X0, [X19 + 0xB8]
	0x035E5664 B 0x35E566C
	0x035E5668 LDR X21, [X19 + 0xB8]
	0x035E566C LDR X24, [X19 + 0x20]
	0x035E5670 MOV X0, X22
	0x035E5674 MOV X1, X31
	0x035E5678 BL 0x33C6940
	0x035E567C CBZ X24, 0x35E57B8
	0x035E5680 MOV W3, W0
	0x035E5684 ADD X4, X31, 0xC
	0x035E5688 MOV X0, X24
	0x035E568C MOV X1, X21
	0x035E5690 MOV W2, W31
	0x035E5694 BL 0x35E58C4
	0x035E5698 MOV W21, W0
	0x035E569C TBNZ X0, 0x1F, 0x35E56FC
	0x035E56A0 CBZ W21, 0x35E572C
	0x035E56A4 LDR X24, [X19 + 0xB8]
	0x035E56A8 MOV X0, X23
	0x035E56AC MOV X1, X31
	0x035E56B0 BL 0x33C693C
	0x035E56B4 MOV X23, X0
	0x035E56B8 MOV X0, X22
	0x035E56BC MOV X1, X31
	0x035E56C0 BL 0x33C6940
	0x035E56C4 ADRP X8, 0xB36000
	0x035E56C8 LDR X8, [X8 + 0x850]
	0x035E56CC MOV W22, W0
	0x035E56D0 LDR X0, [X8]
	0x035E56D4 LDR W8, [X0 + 0xE0]
	0x035E56D8 CBNZ W8, 0x35E56E0
	0x035E56DC BL 0x1C16DFC
	0x035E56E0 MOV X0, X24
	0x035E56E4 MOV W1, W31
	0x035E56E8 MOV X2, X23
	0x035E56EC MOV W3, W22
	0x035E56F0 MOV X4, X31
	0x035E56F4 BL 0x32C0B14
	0x035E56F8 B 0x35E5798
	0x035E56FC BL 0x35E1D34
	0x035E5700 CBZ X0, 0x35E57BC
	0x035E5704 LDR X8, [X0 + 0x28]
	0x035E5708 CBZ X8, 0x35E57C0
	0x035E570C LDR X0, [X8 + 0x40]
	0x035E5710 LDR X9, [X8 + 0x18]
	0x035E5714 LDR X3, [X8 + 0x28]
	0x035E5718 MOVZ W2, 0x2
	0x035E571C MOVK W2, 0x100000
	0x035E5720 MOV X1, X20
	0x035E5724 BLR X9
	0x035E5728 B 0x35E5798
	0x035E572C LDRB W8, [X31 + 0xC]
	0x035E5730 CBZ W8, 0x35E5764
	0x035E5734 BL 0x35E1D34
	0x035E5738 CBZ X0, 0x35E57C4
	0x035E573C LDR X8, [X0 + 0x28]
	0x035E5740 CBZ X8, 0x35E57C8
	0x035E5744 LDR X0, [X8 + 0x40]
	0x035E5748 LDR X9, [X8 + 0x18]
	0x035E574C LDR X3, [X8 + 0x28]
	0x035E5750 MOVZ W2, 0x1
	0x035E5754 MOVK W2, 0x100000
	0x035E5758 MOV X1, X20
	0x035E575C BLR X9
	0x035E5760 B 0x35E5798
	0x035E5764 MOVZ W8, 0x1
	0x035E5768 STRB W8, [X19 + 0xAA]
	0x035E576C BL 0x35E1D34
	0x035E5770 CBZ X0, 0x35E57CC
	0x035E5774 LDR X8, [X0 + 0x28]
	0x035E5778 CBZ X8, 0x35E57D0
	0x035E577C LDR X0, [X8 + 0x40]
	0x035E5780 LDR X9, [X8 + 0x18]
	0x035E5784 LDR X3, [X8 + 0x28]
	0x035E5788 MOVZ W2, 0x2
	0x035E578C MOVK W2, 0x100000
	0x035E5790 MOV X1, X20
	0x035E5794 BLR X9
	0x035E5798 MOV W0, W21
	0x035E579C MOV X1, X31
	0x035E57A0 BL 0x33C6930
	0x035E57A4 LDP X20, X19, [X31 + 0x30]
	0x035E57A8 LDP X22, X21, [X31 + 0x20]
	0x035E57AC LDP X24, X23, [X31 + 0x10]
	0x035E57B0 LDR X30, [X31], #0x40
	0x035E57B4 RET
	0x035E57B8 BL 0x1C16F20
	0x035E57BC BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDFC000
	009 Move W8, [X23+641]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB55000
	019 Move X0, [X0+672]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+641], W8
	023 Compare X22, 0
	024 JumpIfEqual {121}
	025 Move X8, 0xB55000
	026 Move X8, [X8+672]
	027 Move X9, [X22]
	028 Move X8, [X8]
	029 Move W11, [X9+304]
	030 Move W10, [X8+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X9+200]
	033 Add X9, X9, X10
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X22
	037 Move X1, X31
	038 Call X509Certificate2.get_PrivateKey, X0
	039 Compare X0, 0
	040 JumpIfEqual {104}
	041 Move [X20], X31
	042 Move [X19], X31
	043 Call UnityTls.get_NativeInterface
	044 Compare X0, 0
	045 JumpIfEqual {139}
	046 Move X8, [X0+104]
	047 Compare X8, 0
	048 JumpIfEqual {140}
	049 Move X0, [X8+64]
	050 Move X9, [X8+24]
	051 Move X2, [X8+40]
	052 Move X1, X21
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move [X20], X0
	055 Move X1, X22
	056 Move X2, X21
	057 Call CertHelper.AddCertificateToNativeChain, X0, X1, X2
	058 Move X0, X22
	059 Move X1, X31
	060 Call X509Certificate2.get_PrivateKey, X0
	061 Move X1, X31
	062 Call PrivateKeyInfo.Encode, X0
	063 Move X23, X0
	064 Compare X0, 0
	065 JumpIfEqual {70}
	066 Move W8, [X23+24]
	067 Add X9, X23, 32
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 Move X22, X31
	071 Call UnityTls.get_NativeInterface
	072 Compare X0, 0
	073 JumpIfEqual {141}
	074 Compare X23, 0
	075 JumpIfEqual {142}
	076 Move X24, [X0+56]
	077 Move W0, [X23+24]
	078 Move X1, X31
	079 Call IntPtr.op_Explicit, X0
	080 Move X23, X0
	081 Move W0, W31
	082 Move X1, X31
	083 Call IntPtr.op_Explicit, X0
	084 Compare X24, 0
	085 JumpIfEqual {143}
	086 Move X4, X0
	087 Move X0, [X24+64]
	088 Move X8, [X24+24]
	089 Move X6, [X24+40]
	090 Move X1, X22
	091 Move X2, X23
	092 Move X3, X31
	093 Move X5, X21
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move [X19], X0
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X30, [X31+64]
	103 Return 
	104 Move X0, 0xB17000
	105 Move X0, [X0+1400]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X19, X0
	109 Move X0, 0xB55000
	110 Move X0, [X0+680]
	111 Call 0x1C17D08
	112 Move X20, X0
	113 Move X0, 0xB3F000
	114 Move X0, [X0+2432]
	115 Call 0x1C17D08
	116 Move X2, X0
	117 Move X0, X19
	118 Move X1, X20
	119 Move X3, X31
	120 Call ArgumentException..ctor, X0, X1, X2
	121 Move X0, 0xB14000
	122 Move X0, [X0+1320]
	123 Call 0x1C17D08
	124 Call 0x1C17F10
	125 Move X19, X0
	126 Move X0, 0xB3F000
	127 Move X0, [X0+2432]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Move X2, X31
	132 Call ArgumentNullException..ctor, X0, X1
	133 Move X0, 0xB55000
	134 Move X0, [X0+688]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Call 0x1C17DEC
	139 Call 0x1C17F20
	140 Call 0x1C17F20
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 Call 0x1C17F20
	144 Move X21, X0
	145 Move X21, X0
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W23, 1
	148 Move X0, X21
	149 Call 0x3EB2AD0
	150 Move X22, [X0]
	151 Call 0x3EB2AE0
	152 Compare X22, 0
	153 JumpIfEqual {96}
	154 Move X0, X22
	155 Call 0x1C17F18
	156 Compare X22, 0
	157 JumpIfNotEqual {159}
	158 Move X21, X0
	159 Move X0, X22
	160 Call 0x1C17F18
	161 Move X21, X0
	162 Move W23, 1
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, X21
	165 Call 0x3EB2AD0
	166 Move X21, X0
	167 Move X0, 0xB15000
	168 Move X0, [X0+3264]
	169 Call 0x1C17D08
	170 Move X8, [X21]
	171 Move X1, [X8]
	172 Call 0x1C18270
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {205}
	177 Move X21, [X21]
	178 Call 0x3EB2AE0
	179 Call UnityTls.get_NativeInterface
	180 Move X22, X0
	181 Call 0x19913C0
	182 Move X22, [X22+136]
	183 Move X20, [X20]
	184 Move X0, X22
	185 Call 0x19913C0
	186 Move X8, [X22+24]
	187 Move X0, [X22+64]
	188 Move X2, [X22+40]
	189 Move X1, X20
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Call UnityTls.get_NativeInterface
	192 Move X20, X0
	193 Call 0x19913C0
	194 Move X20, [X20+72]
	195 Move X19, [X19]
	196 Move X0, X20
	197 Call 0x19913C0
	198 Move X8, [X20+24]
	199 Move X0, [X20+64]
	200 Move X2, [X20+40]
	201 Move X1, X19
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X0, X21
	204 Call 0x1C17F18
	205 Move W0, 8
	206 Call 0x3EB2AF0
	207 Move X8, [X21]
	208 Move [X0], X8
	209 Move X1, 0x8D0000
	210 Add X1, X1, 3672
	211 Move X2, X31
	212 Call 0x3EB2B00
	213 Move X21, X0
	214 Call 0x3EB2AE0
	215 Move X0, X21
	216 Call 0x1D2D690
	217 Call 0x1991590

Method: System.Boolean get_IsAuthenticated()

Disassembly:
	0x035E57C0 BL 0x1C16F20
	0x035E57C4 BL 0x1C16F20

ISIL:
	001 Move W0, [X0+168]
	002 Return X0

Method: System.Security.Cryptography.X509Certificates.X509Certificate get_LocalClientCertificate()

Disassembly:
	0x035E57C8 BL 0x1C16F20
	0x035E57CC BL 0x1C16F20

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Security.Cryptography.X509Certificates.X509Certificate2 get_RemoteCertificate()

Disassembly:
	0x035E57D0 BL 0x1C16F20
	0x035E57D4 B 0x35E5808

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.ValueTuple`2<System.Int32, System.Boolean> Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x035E57D8 B 0x35E5808
	0x035E57DC B 0x35E5808
	0x035E57E0 B 0x35E5808
	0x035E57E4 B 0x35E5808
	0x035E57E8 B 0x35E5808
	0x035E57EC B 0x35E5808
	0x035E57F0 B 0x35E5808
	0x035E57F4 B 0x35E5808
	0x035E57F8 B 0x35E5808
	0x035E57FC B 0x35E5808
	0x035E5800 B 0x35E5808
	0x035E5804 B 0x35E5808
	0x035E5808 MOV X21, X0
	0x035E580C CMP W1, 0x1
	0x035E5810 B.NE 0x35E58B8
	0x035E5814 MOV X0, X21
	0x035E5818 BL 0x3EB1AD0
	0x035E581C MOV X21, X0
	0x035E5820 ADRP X0, 0xB0E000
	0x035E5824 LDR X0, [X0 + 0x7D0]
	0x035E5828 BL 0x1C16D08
	0x035E582C LDR X8, [X21]
	0x035E5830 LDR X1, [X8]
	0x035E5834 BL 0x1C17270
	0x035E5838 TBZ X0, 0x0, 0x35E5890
	0x035E583C LDR X21, [X21]
	0x035E5840 BL 0x3EB1AE0
	0x035E5844 BL 0x35E1D34
	0x035E5848 CBZ X0, 0x35E588C
	0x035E584C LDR X8, [X0 + 0x28]
	0x035E5850 CBZ X8, 0x35E588C
	0x035E5854 LDR X9, [X8 + 0x18]
	0x035E5858 LDR X0, [X8 + 0x40]
	0x035E585C LDR X3, [X8 + 0x28]
	0x035E5860 MOVZ W2, 0x4
	0x035E5864 MOVK W2, 0x100000
	0x035E5868 MOV X1, X20
	0x035E586C BLR X9
	0x035E5870 LDR X8, [X19 + 0xC8]
	0x035E5874 CBNZ X8, 0x35E587C
	0x035E5878 STR X21, [X19 + 0xC8]
	0x035E587C MOV W0, W31
	0x035E5880 MOV X1, X31
	0x035E5884 BL 0x33C6930
	0x035E5888 B 0x35E57A4
	0x035E588C BL 0x1C16F20
	0x035E5890 MOVZ W0, 0x8
	0x035E5894 BL 0x3EB1AF0
	0x035E5898 LDR X8, [X21]
	0x035E589C STR X8, [X0]
	0x035E58A0 ADRP X1, 0x8CF000
	0x035E58A4 ADD X1, X1, 0xE58
	0x035E58A8 MOV X2, X31
	0x035E58AC BL 0x3EB1B00
	0x035E58B0 MOV X21, X0
	0x035E58B4 BL 0x3EB1AE0
	0x035E58B8 MOV X0, X21
	0x035E58BC BL 0x1D2C690
	0x035E58C0 BL 0x1990590
	0x035E58C4 STP X30, X21, [X31 - 0x20]!
	0x035E58C8 STP X20, X19, [X31 + 0x10]
	0x035E58CC LDR X8, [X0 + 0x48]
	0x035E58D0 MOV X19, X4
	0x035E58D4 MOV W5, W3
	0x035E58D8 MOV W4, W2
	0x035E58DC MOV X20, X0
	0x035E58E0 MOV X3, X1
	0x035E58E4 CBNZ X8, 0x35E58EC
	0x035E58E8 LDR X8, [X20 + 0x50]
	0x035E58EC LDR X2, [X20 + 0x60]
	0x035E58F0 MOV X1, X8
	0x035E58F4 BL 0x35EB760
	0x035E58F8 UBFM X8, X0, 0x20, 0x20
	0x035E58FC STRB W8, [X19]
	0x035E5900 LDP X20, X19, [X31 + 0x10]
	0x035E5904 LDP X30, X21, [X31], #0x20
	0x035E5908 RET
	0x035E590C CMP W1, 0x1
	0x035E5910 MOV X21, X0
	0x035E5914 B.NE 0x35E59C4
	0x035E5918 MOV X0, X21
	0x035E591C BL 0x3EB1AD0
	0x035E5920 MOV X21, X0
	0x035E5924 ADRP X0, 0xB0E000
	0x035E5928 LDR X0, [X0 + 0x7D0]
	0x035E592C BL 0x1C16D08
	0x035E5930 LDR X8, [X21]
	0x035E5934 LDR X1, [X8]
	0x035E5938 BL 0x1C17270
	0x035E593C TBZ X0, 0x0, 0x35E599C
	0x035E5940 LDR X21, [X21]
	0x035E5944 BL 0x3EB1AE0
	0x035E5948 ADRP X0, 0xB54000
	0x035E594C LDR X0, [X0 + 0x318]
	0x035E5950 BL 0x1C16D08
	0x035E5954 LDR W8, [X0 + 0xE0]
	0x035E5958 CBNZ W8, 0x35E5960
	0x035E595C BL 0x1C16DFC
	0x035E5960 ADRP X0, 0xB54000
	0x035E5964 LDR X0, [X0 + 0x330]
	0x035E5968 BL 0x1C16D08
	0x035E596C MOV X1, X0
	0x035E5970 MOV X0, X21
	0x035E5974 BL 0x35EAAE0
	0x035E5978 MOV X1, X31
	0x035E597C BL 0x32C2380
	0x035E5980 MOV X1, X0
	0x035E5984 ADD X0, X20, 0x40
	0x035E5988 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0xDFC000
	010 Move W8, [X23+642]
	011 Move W19, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB55000
	020 Move X0, [X0+696]
	021 Call 0x1C17CF4
	022 Move X0, 0xB55000
	023 Move X0, [X0+704]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+642], W8
	027 Move [X20+200], X31
	028 Call UnityTls.get_NativeInterface
	029 Compare X0, 0
	030 JumpIfEqual {119}
	031 Move X8, [X0+32]
	032 Compare X8, 0
	033 JumpIfEqual {119}
	034 Move X9, [X8+24]
	035 Move X0, [X8+64]
	036 Move X1, [X8+40]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move [X31], X0
	039 Move [X31+8], X1
	040 Compare X22, 0
	041 JumpIfEqual {46}
	042 Move W8, [X22+24]
	043 Compare W8, 0
	044 JumpIfEqual {46}
	045 Add X23, X22, 32
	046 Move X23, X31
	047 Call UnityTls.get_NativeInterface
	048 Compare X0, 0
	049 JumpIfEqual {119}
	050 Move X24, [X0+240]
	051 Move X22, [X20+88]
	052 Move W0, W19
	053 Move X1, X31
	054 Call IntPtr.op_Explicit, X0
	055 Compare X24, 0
	056 JumpIfEqual {119}
	057 Move X3, X0
	058 Move X8, [X24+24]
	059 Move X0, [X24+64]
	060 Move X5, [X24+40]
	061 Add X2, X23, W21
	062 Add X4, X31, 0
	063 Move X1, X22
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X1, X31
	066 Call IntPtr.op_Explicit, X0
	067 Move X21, [X20+200]
	068 Compare X21, 0
	069 JumpIfNotEqual {120}
	070 Move W8, [X31+4]
	071 Move W9, 1
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 Move W1, W0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare W8, 0
	077 JumpIfNotEqual {91}
	078 Move X8, 0xB55000
	079 Move X8, [X8+696]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X31+24], X31
	082 NotImplemented "Instruction CSET not yet implemented."
	083 Move X3, [X8]
	084 Add X0, X31, 24
	085 Move X8, 0xB55000
	086 Move X8, [X8+696]
	087 Move [X31+24], X31
	088 Add X0, X31, 24
	089 Move W2, 1
	090 Move X3, [X8]
	091 Move W8, [X20+170]
	092 Compare W8, 0
	093 JumpIfNotEqual {101}
	094 Move X8, 0xB55000
	095 Move X0, [X31]
	096 Move X1, [X31+8]
	097 Move X8, [X8+704]
	098 Move W3, 80
	099 Move X2, [X8]
	100 Call Debug.CheckAndThrow, X0, X1, X2
	101 Move X8, 0xB55000
	102 Move X8, [X8+696]
	103 Add X0, X31, 24
	104 Move W1, W31
	105 Move W2, W31
	106 Move X3, [X8]
	107 Move [X31+24], X31
	108 Call ValueTuple`2<Int32, Boolean>..ctor, X0, X1, X2
	109 Move X30, [X31+16]
	110 Move X0, [X31+24]
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Add X31, X31, 80
	118 Return X0
	119 Call 0x1C17F20
	120 Move X0, 0xB55000
	121 Move X0, [X0+712]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X21
	125 Call 0x1C17DEC

Method: System.ValueTuple`2<System.Int32, System.Boolean> Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x035E598C BL 0x1C24138
	0x035E5990 MOV W8, W31
	0x035E5994 MOVN W0, 0x0
	0x035E5998 B 0x35E58FC
	0x035E599C MOVZ W0, 0x8
	0x035E59A0 BL 0x3EB1AF0
	0x035E59A4 LDR X8, [X21]
	0x035E59A8 STR X8, [X0]
	0x035E59AC ADRP X1, 0x8CF000
	0x035E59B0 ADD X1, X1, 0xE58
	0x035E59B4 MOV X2, X31
	0x035E59B8 BL 0x3EB1B00
	0x035E59BC MOV X21, X0
	0x035E59C0 BL 0x3EB1AE0
	0x035E59C4 MOV X0, X21
	0x035E59C8 BL 0x1D2C690
	0x035E59CC BL 0x1990590
	0x035E59D0 SUB X31, X31, 0x60
	0x035E59D4 STR X30, [X31 + 0x10]
	0x035E59D8 STP X26, X25, [X31 + 0x20]
	0x035E59DC STP X24, X23, [X31 + 0x30]
	0x035E59E0 STP X22, X21, [X31 + 0x40]
	0x035E59E4 STP X20, X19, [X31 + 0x50]
	0x035E59E8 ADRP X22, 0xDFB000
	0x035E59EC ADRP X20, 0xB54000
	0x035E59F0 LDRB W8, [X22 + 0x28C]
	0x035E59F4 LDR X20, [X20 + 0x338]
	0x035E59F8 MOV X21, X1
	0x035E59FC MOV X19, X0
	0x035E5A00 TBNZ X8, 0x0, 0x35E5A30
	0x035E5A04 ADRP X0, 0xB0E000
	0x035E5A08 LDR X0, [X0 + 0xE00]
	0x035E5A0C BL 0x1C16CF4
	0x035E5A10 ADRP X0, 0xB54000
	0x035E5A14 LDR X0, [X0 + 0x338]
	0x035E5A18 BL 0x1C16CF4
	0x035E5A1C ADRP X0, 0xB54000
	0x035E5A20 LDR X0, [X0 + 0x340]
	0x035E5A24 BL 0x1C16CF4
	0x035E5A28 MOVZ W8, 0x1
	0x035E5A2C STRB W8, [X22 + 0x28C]
	0x035E5A30 LDR X0, [X20]
	0x035E5A34 STR W31, [X31 + 0x8]
	0x035E5A38 BL 0x1C16F10
	0x035E5A3C MOV X20, X0
	0x035E5A40 MOV X1, X21
	0x035E5A44 MOV W2, W31
	0x035E5A48 BL 0x35E5DF4
	0x035E5A4C ADRP X8, 0xB54000
	0x035E5A50 LDR X8, [X8 + 0x340]
	0x035E5A54 ADRP X25, 0xB0E000
	0x035E5A58 LDR X0, [X8]
	0x035E5A5C LDR X25, [X25 + 0xE00]
	0x035E5A60 BL 0x1C16F10
	0x035E5A64 MOV X21, X0
	0x035E5A68 MOV X1, X20
	0x035E5A6C MOV X2, X31
	0x035E5A70 BL 0x3658748
	0x035E5A74 CBZ X21, 0x35E5BD0
	0x035E5A78 MOV X0, X21
	0x035E5A7C MOV X1, X31
	0x035E5A80 BL 0x36587B8
	0x035E5A84 CBZ X0, 0x35E5BD4
	0x035E5A88 MOV W1, W31
	0x035E5A8C MOV X2, X31
	0x035E5A90 BL 0x3658F78
	0x035E5A94 CBZ X0, 0x35E5BE0
	0x035E5A98 LDR X1, [X0 + 0x10]
	0x035E5A9C STR X1, [X19 + 0x98]
	0x035E5AA0 MOV X0, X19
	0x035E5AA4 MOV X2, X21
	0x035E5AA8 BL 0x35E4FF0
	0x035E5AAC ANDS W31, W0, 0x1
	0x035E5AB0 MOVZ W8, 0x8
	0x035E5AB4 MOV W26, W31
	0x035E5AB8 MOV X22, X31
	0x035E5ABC CSEL W24, W31, W8, NE
	0x035E5AC0 MOVZ W23, 0x3
	0x035E5AC4 LDR X8, [X21]
	0x035E5AC8 LDR X1, [X25]
	0x035E5ACC LDRH W9, [X8 + 0x12E]
	0x035E5AD0 CBZ X9, 0x35E5AF4
	0x035E5AD4 LDR X10, [X8 + 0xB0]
	0x035E5AD8 ADD X10, X10, 0x8
	0x035E5ADC LDUR X11, [X10 - 0x8]
	0x035E5AE0 CMP X11, X1
	0x035E5AE4 B.EQ 0x35E5B04
	0x035E5AE8 SUBS X9, X9, 0x1
	0x035E5AEC ADD X10, X10, 0x10
	0x035E5AF0 B.NE 0x35E5ADC
	0x035E5AF4 MOV X0, X21
	0x035E5AF8 MOV W2, W31
	0x035E5AFC BL 0x1C5C788
	0x035E5B00 B 0x35E5B10
	0x035E5B04 LDRSW X9, [X10]
	0x035E5B08 ADD X8, X8, X9, 0x4, LSL
	0x035E5B0C ADD X0, X8, 0x138
	0x035E5B10 LDP X8, X1, [X0]
	0x035E5B14 MOV X0, X21
	0x035E5B18 BLR X8
	0x035E5B1C CBNZ X22, 0x35E5BE4
	0x035E5B20 MOV X21, X31
	0x035E5B24 TBZ X26, 0x0, 0x35E5B30
	0x035E5B28 MOV W23, W31
	0x035E5B2C MOV X22, X21
	0x035E5B30 CBZ X20, 0x35E5B8C
	0x035E5B34 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0xDFC000
	010 Move W8, [X23+643]
	011 Move W19, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB55000
	020 Move X0, [X0+696]
	021 Call 0x1C17CF4
	022 Move X0, 0xB55000
	023 Move X0, [X0+720]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+643], W8
	027 Move [X20+200], X31
	028 Call UnityTls.get_NativeInterface
	029 Compare X0, 0
	030 JumpIfEqual {116}
	031 Move X8, [X0+32]
	032 Compare X8, 0
	033 JumpIfEqual {116}
	034 Move X9, [X8+24]
	035 Move X0, [X8+64]
	036 Move X1, [X8+40]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move [X31], X0
	039 Move [X31+8], X1
	040 Compare X22, 0
	041 JumpIfEqual {46}
	042 Move W8, [X22+24]
	043 Compare W8, 0
	044 JumpIfEqual {46}
	045 Add X23, X22, 32
	046 Move X23, X31
	047 Call UnityTls.get_NativeInterface
	048 Compare X0, 0
	049 JumpIfEqual {116}
	050 Move X24, [X0+248]
	051 Move X22, [X20+88]
	052 Move W0, W19
	053 Move X1, X31
	054 Call IntPtr.op_Explicit, X0
	055 Compare X24, 0
	056 JumpIfEqual {116}
	057 Move X3, X0
	058 Move X8, [X24+24]
	059 Move X0, [X24+64]
	060 Move X5, [X24+40]
	061 Add X2, X23, W21
	062 Add X4, X31, 0
	063 Move X1, X22
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X1, X31
	066 Call IntPtr.op_Explicit, X0
	067 Move X20, [X20+200]
	068 Compare X20, 0
	069 JumpIfNotEqual {117}
	070 Move W8, [X31+4]
	071 Move W9, 1
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 Move W1, W0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare W8, 0
	077 JumpIfNotEqual {91}
	078 Move X8, 0xB55000
	079 Move X8, [X8+696]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X31+24], X31
	082 NotImplemented "Instruction CSET not yet implemented."
	083 Move X3, [X8]
	084 Add X0, X31, 24
	085 Move X8, 0xB55000
	086 Move X8, [X8+696]
	087 Move [X31+24], X31
	088 Add X0, X31, 24
	089 Move W2, 1
	090 Move X3, [X8]
	091 Move X8, 0xB55000
	092 Move X0, [X31]
	093 Move X1, [X31+8]
	094 Move X8, [X8+720]
	095 Move W3, 80
	096 Move X2, [X8]
	097 Call Debug.CheckAndThrow, X0, X1, X2
	098 Move X8, 0xB55000
	099 Move X8, [X8+696]
	100 Add X0, X31, 24
	101 Move W1, W31
	102 Move W2, W31
	103 Move X3, [X8]
	104 Move [X31+24], X31
	105 Call ValueTuple`2<Int32, Boolean>..ctor, X0, X1, X2
	106 Move X30, [X31+16]
	107 Move X0, [X31+24]
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Add X31, X31, 80
	115 Return X0
	116 Call 0x1C17F20
	117 Move X0, 0xB55000
	118 Move X0, [X0+728]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X20
	122 Call 0x1C17DEC

Method: System.Void Renegotiate()

Disassembly:
	0x035E5B38 LDR X1, [X25]
	0x035E5B3C LDRH W9, [X8 + 0x12E]
	0x035E5B40 CBZ X9, 0x35E5B64
	0x035E5B44 LDR X10, [X8 + 0xB0]
	0x035E5B48 ADD X10, X10, 0x8
	0x035E5B4C LDUR X11, [X10 - 0x8]
	0x035E5B50 CMP X11, X1
	0x035E5B54 B.EQ 0x35E5B74
	0x035E5B58 SUBS X9, X9, 0x1
	0x035E5B5C ADD X10, X10, 0x10
	0x035E5B60 B.NE 0x35E5B4C
	0x035E5B64 MOV X0, X20
	0x035E5B68 MOV W2, W31
	0x035E5B6C BL 0x1C5C788

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB0F000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB55000
	011 Move X0, [X0+736]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Boolean PendingRenegotiation()

Disassembly:
	0x035E5B70 B 0x35E5B80
	0x035E5B74 LDRSW X9, [X10]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void Shutdown()

Disassembly:
	0x035E5B78 ADD X8, X8, X9, 0x4, LSL
	0x035E5B7C ADD X0, X8, 0x138
	0x035E5B80 LDP X8, X1, [X0]
	0x035E5B84 MOV X0, X20
	0x035E5B88 BLR X8
	0x035E5B8C CBNZ X22, 0x35E5BD8
	0x035E5B90 CBNZ W23, 0x35E5BB0
	0x035E5B94 MOVN X8, 0x0
	0x035E5B98 LDR X9, [X19 + 0xC8]
	0x035E5B9C CBNZ X9, 0x35E5BAC
	0x035E5BA0 ADD X9, X31, 0x0
	0x035E5BA4 LDR X8, [X9, X8, LSL #3]
	0x035E5BA8 STR X8, [X19 + 0xC8]
	0x035E5BAC MOVN W24, 0x0
	0x035E5BB0 MOV W0, W24
	0x035E5BB4 LDP X20, X19, [X31 + 0x50]
	0x035E5BB8 LDP X22, X21, [X31 + 0x40]
	0x035E5BBC LDP X24, X23, [X31 + 0x30]
	0x035E5BC0 LDP X26, X25, [X31 + 0x20]
	0x035E5BC4 LDR X30, [X31 + 0x10]
	0x035E5BC8 ADD X31, X31, 0x60
	0x035E5BCC RET
	0x035E5BD0 BL 0x1C16F20
	0x035E5BD4 BL 0x1C16F20
	0x035E5BD8 MOV X0, X22
	0x035E5BDC BL 0x1C16F18
	0x035E5BE0 BL 0x1C16F20
	0x035E5BE4 MOV X0, X22
	0x035E5BE8 BL 0x1C16F18
	0x035E5BEC B 0x35E5BF8
	0x035E5BF0 B 0x35E5BF8
	0x035E5BF4 B 0x35E5BF8
	0x035E5BF8 MOV X23, X1
	0x035E5BFC MOV X22, X0
	0x035E5C00 CMP W23, 0x1
	0x035E5C04 B.NE 0x35E5C34
	0x035E5C08 MOV X0, X22
	0x035E5C0C BL 0x3EB1AD0
	0x035E5C10 LDR X8, [X0]
	0x035E5C14 STR X8, [X31 + 0x18]
	0x035E5C18 BL 0x3EB1AE0
	0x035E5C1C LDR X22, [X31 + 0x18]
	0x035E5C20 MOV W24, W31
	0x035E5C24 MOV W23, W31
	0x035E5C28 MOVZ W26, 0x1
	0x035E5C2C CBNZ X21, 0x35E5AC4
	0x035E5C30 B 0x35E5B1C
	0x035E5C34 STR X31, [X31 + 0x18]
	0x035E5C38 CBZ X21, 0x35E5C94
	0x035E5C3C LDR X8, [X21]
	0x035E5C40 LDR X1, [X25]
	0x035E5C44 LDRH W9, [X8 + 0x12E]
	0x035E5C48 CBZ X9, 0x35E5C6C
	0x035E5C4C LDR X10, [X8 + 0xB0]
	0x035E5C50 ADD X10, X10, 0x8
	0x035E5C54 LDUR X11, [X10 - 0x8]
	0x035E5C58 CMP X11, X1
	0x035E5C5C B.EQ 0x35E5C7C
	0x035E5C60 SUBS X9, X9, 0x1
	0x035E5C64 ADD X10, X10, 0x10
	0x035E5C68 B.NE 0x35E5C54
	0x035E5C6C MOV X0, X21

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31], X31
	005 Move [X31+8], X31
	006 Move X8, [X0+32]
	007 Compare X8, 0
	008 JumpIfEqual {79}
	009 Move X8, [X8+144]
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfEqual {40}
	013 Move W8, [X8+72]
	014 Compare W8, 0
	015 JumpIfEqual {40}
	016 Call UnityTls.get_NativeInterface
	017 Compare X0, 0
	018 JumpIfEqual {79}
	019 Move X8, [X0+32]
	020 Compare X8, 0
	021 JumpIfEqual {79}
	022 Move X9, [X8+24]
	023 Move X0, [X8+64]
	024 Move X1, [X8+40]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move [X31], X0
	027 Move [X31+8], X1
	028 Call UnityTls.get_NativeInterface
	029 Compare X0, 0
	030 JumpIfEqual {79}
	031 Move X8, [X0+256]
	032 Compare X8, 0
	033 JumpIfEqual {79}
	034 Move X1, [X19+88]
	035 Move X9, [X8+24]
	036 Move X0, [X8+64]
	037 Move X3, [X8+40]
	038 Add X2, X31, 0
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Call UnityTls.get_NativeInterface
	041 Compare X0, 0
	042 JumpIfEqual {79}
	043 Move X8, [X0+136]
	044 Compare X8, 0
	045 JumpIfEqual {79}
	046 Move X1, [X19+96]
	047 Move X9, [X8+24]
	048 Move X0, [X8+64]
	049 Move X2, [X8+40]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Call UnityTls.get_NativeInterface
	052 Compare X0, 0
	053 JumpIfEqual {79}
	054 Move X8, [X0+72]
	055 Compare X8, 0
	056 JumpIfEqual {79}
	057 Move X1, [X19+104]
	058 Move X9, [X8+24]
	059 Move X0, [X8+64]
	060 Move X2, [X8+40]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Call UnityTls.get_NativeInterface
	063 Compare X0, 0
	064 JumpIfEqual {79}
	065 Move X8, [X0+264]
	066 Compare X8, 0
	067 JumpIfEqual {79}
	068 Move X1, [X19+88]
	069 Move X9, [X8+24]
	070 Move X0, [X8+64]
	071 Move X2, [X8+40]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move [X19+88], X31
	074 Move [X19+169], W31
	075 Move X30, [X31+16]
	076 Move X19, [X31+24]
	077 Add X31, X31, 32
	078 Return 
	079 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x035E5C8C MOV X0, X21
	0x035E5C90 BLR X8
	0x035E5C94 LDR X8, [X31 + 0x18]
	0x035E5C98 CBZ X8, 0x35E5CBC
	0x035E5C9C LDR X0, [X31 + 0x18]
	0x035E5CA0 BL 0x1C16F18
	0x035E5CA4 MOV X23, X1
	0x035E5CA8 MOV X22, X0
	0x035E5CAC CBNZ X21, 0x35E5C3C
	0x035E5CB0 B 0x35E5C94
	0x035E5CB4 MOV X23, X1
	0x035E5CB8 MOV X22, X0
	0x035E5CBC MOV W24, W31
	0x035E5CC0 B 0x35E5CDC
	0x035E5CC4 B 0x35E5CC8
	0x035E5CC8 MOV X23, X1
	0x035E5CCC MOV X22, X0
	0x035E5CD0 B 0x35E5D5C
	0x035E5CD4 MOV X23, X1
	0x035E5CD8 MOV X22, X0
	0x035E5CDC CMP W23, 0x1
	0x035E5CE0 B.NE 0x35E5CF8
	0x035E5CE4 MOV X0, X22
	0x035E5CE8 BL 0x3EB1AD0
	0x035E5CEC LDR X21, [X0]
	0x035E5CF0 BL 0x3EB1AE0
	0x035E5CF4 B 0x35E5B28
	0x035E5CF8 MOV X21, X31
	0x035E5CFC CBZ X20, 0x35E5D58
	0x035E5D00 LDR X8, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {17}
	008 Move X8, [X19]
	009 Move X1, [X8+528]
	010 Move X9, [X8+520]
	011 Move X0, X19
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move [X19+144], X31
	014 Move [X19+152], X31
	015 NotImplemented "Instruction STRH not yet implemented."
	016 Move [X19+160], X31
	017 Add X0, X19, 192
	018 Move X1, X31
	019 Call GCHandle.Free, X0
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Call 0x3EB2AD0
	025 Move X19, [X0]
	026 Call 0x3EB2AE0
	027 Compare X19, 0
	028 JumpIfEqual {20}
	029 Move X0, X19
	030 Call 0x1C17F18
	031 Compare X19, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1D2D690
	034 Move X0, X19
	035 Call 0x1C17F18
	036 Call 0x1991590

Method: System.Void StartHandshake()

Disassembly:
	0x035E5D04 LDR X1, [X25]
	0x035E5D08 LDRH W9, [X8 + 0x12E]
	0x035E5D0C CBZ X9, 0x35E5D30
	0x035E5D10 LDR X10, [X8 + 0xB0]
	0x035E5D14 ADD X10, X10, 0x8
	0x035E5D18 LDUR X11, [X10 - 0x8]
	0x035E5D1C CMP X11, X1
	0x035E5D20 B.EQ 0x35E5D40
	0x035E5D24 SUBS X9, X9, 0x1
	0x035E5D28 ADD X10, X10, 0x10
	0x035E5D2C B.NE 0x35E5D18
	0x035E5D30 MOV X0, X20
	0x035E5D34 MOV W2, W31
	0x035E5D38 BL 0x1C5C788
	0x035E5D3C B 0x35E5D4C
	0x035E5D40 LDRSW X9, [X10]
	0x035E5D44 ADD X8, X8, X9, 0x4, LSL
	0x035E5D48 ADD X0, X8, 0x138
	0x035E5D4C LDP X8, X1, [X0]
	0x035E5D50 MOV X0, X20
	0x035E5D54 BLR X8
	0x035E5D58 CBNZ X21, 0x35E5DC8
	0x035E5D5C CMP W23, 0x1
	0x035E5D60 B.NE 0x35E5DE8
	0x035E5D64 MOV X0, X22
	0x035E5D68 BL 0x3EB1AD0
	0x035E5D6C MOV X20, X0
	0x035E5D70 ADRP X0, 0xB0E000
	0x035E5D74 LDR X0, [X0 + 0x7D0]
	0x035E5D78 BL 0x1C16D08
	0x035E5D7C LDR X8, [X20]
	0x035E5D80 LDR X1, [X8]
	0x035E5D84 BL 0x1C17270
	0x035E5D88 TBZ X0, 0x0, 0x35E5DA8
	0x035E5D8C LDR X8, [X20]
	0x035E5D90 MOVZ W9, 0x1
	0x035E5D94 STR W9, [X31 + 0x8]
	0x035E5D98 STR X8, [X31]
	0x035E5D9C BL 0x3EB1AE0
	0x035E5DA0 MOV X8, X31
	0x035E5DA4 B 0x35E5B98
	0x035E5DA8 MOVZ W0, 0x8
	0x035E5DAC BL 0x3EB1AF0
	0x035E5DB0 LDR X8, [X20]
	0x035E5DB4 STR X8, [X0]
	0x035E5DB8 ADRP X1, 0x8CF000
	0x035E5DBC ADD X1, X1, 0xE58
	0x035E5DC0 MOV X2, X31
	0x035E5DC4 BL 0x3EB1B00
	0x035E5DC8 MOV X0, X21
	0x035E5DCC BL 0x1C16F18
	0x035E5DD0 MOV X23, X1
	0x035E5DD4 MOV X22, X0
	0x035E5DD8 CBNZ X20, 0x35E5D00
	0x035E5DDC B 0x35E5D58
	0x035E5DE0 MOV X22, X0
	0x035E5DE4 BL 0x3EB1AE0
	0x035E5DE8 MOV X0, X22
	0x035E5DEC BL 0x1D2C690
	0x035E5DF0 BL 0x1990590
	0x035E5DF4 STP X30, X23, [X31 - 0x30]!
	0x035E5DF8 STP X22, X21, [X31 + 0x10]
	0x035E5DFC STP X20, X19, [X31 + 0x20]
	0x035E5E00 ADRP X23, 0xDFB000
	0x035E5E04 ADRP X22, 0xB54000
	0x035E5E08 LDRB W8, [X23 + 0x295]
	0x035E5E0C LDR X22, [X22 + 0x348]
	0x035E5E10 MOV W21, W2
	0x035E5E14 MOV X20, X1
	0x035E5E18 MOV X19, X0
	0x035E5E1C TBNZ X8, 0x0, 0x35E5E34
	0x035E5E20 ADRP X0, 0xB54000
	0x035E5E24 LDR X0, [X0 + 0x348]
	0x035E5E28 BL 0x1C16CF4
	0x035E5E2C MOVZ W8, 0x1
	0x035E5E30 STRB W8, [X23 + 0x295]
	0x035E5E34 LDR X0, [X22]
	0x035E5E38 AND W22, W21, 0x1
	0x035E5E3C BL 0x1C16F10
	0x035E5E40 MOV X1, X31
	0x035E5E44 MOV X21, X0
	0x035E5E48 BL 0x3659860
	0x035E5E4C MOV X0, X19
	0x035E5E50 MOV X1, X31
	0x035E5E54 STR X21, [X19 + 0x20]
	0x035E5E58 BL 0x36597A8
	0x035E5E5C STP X31, X20, [X19 + 0x10]
	0x035E5E60 STRB W22, [X19 + 0x30]
	0x035E5E64 LDP X20, X19, [X31 + 0x20]
	0x035E5E68 LDP X22, X21, [X31 + 0x10]
	0x035E5E6C LDP X30, X23, [X31], #0x30
	0x035E5E70 RET
	0x035E5E74 STR X30, [X31 - 0x40]!
	0x035E5E78 STP X24, X23, [X31 + 0x10]
	0x035E5E7C STP X22, X21, [X31 + 0x20]
	0x035E5E80 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xDFC000
	008 Move W8, [X20+644]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xB55000
	015 Move X0, [X0+744]
	016 Call 0x1C17CF4
	017 Move X0, 0xB55000
	018 Move X0, [X0+752]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+644], W8
	022 Move [X31], X31
	023 Move [X31+8], X31
	024 Move X8, [X19+32]
	025 Compare X8, 0
	026 JumpIfEqual {114}
	027 Move X8, [X8+144]
	028 Compare X8, 0
	029 JumpIfEqual {107}
	030 Move X8, [X8+104]
	031 Compare X8, 0
	032 JumpIfEqual {107}
	033 Move X9, 0xB55000
	034 Move X9, [X9+752]
	035 Move W1, [X8+24]
	036 Move X0, [X9]
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {114}
	040 Move W8, [X0+24]
	041 Move X20, X0
	042 Move X9, X8
	043 ShiftRight X9, 32
	044 And X9, X9, 0x7FFFFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X10, [X19+32]
	047 Move X9, X31
	048 Move X11, W8
	049 Add X12, X20, 32
	050 Compare X10, 0
	051 JumpIfEqual {114}
	052 Move X13, [X10+144]
	053 Compare X13, 0
	054 JumpIfEqual {114}
	055 Move X13, [X13+104]
	056 Compare X13, 0
	057 JumpIfEqual {114}
	058 Move W14, [X13+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X13, X13, X9
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move [X12], W13
	064 Add X9, X9, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Call UnityTls.get_NativeInterface
	067 Compare X0, 0
	068 JumpIfEqual {114}
	069 Move X8, [X0+32]
	070 Compare X8, 0
	071 JumpIfEqual {114}
	072 Move X9, [X8+24]
	073 Move X0, [X8+64]
	074 Move X1, [X8+40]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move [X31], X0
	077 Move [X31+8], X1
	078 Move W8, [X20+24]
	079 Add X9, X20, 32
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 Call UnityTls.get_NativeInterface
	083 Compare X0, 0
	084 JumpIfEqual {114}
	085 Move X22, [X0+208]
	086 Move W0, [X20+24]
	087 Move X19, [X19+88]
	088 Move X1, X31
	089 Call IntPtr.op_Explicit, X0
	090 Compare X22, 0
	091 JumpIfEqual {114}
	092 Move X3, X0
	093 Move X8, [X22+24]
	094 Move X0, [X22+64]
	095 Move X5, [X22+40]
	096 Add X4, X31, 0
	097 Move X1, X19
	098 Move X2, X21
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X8, 0xB55000
	101 Move X0, [X31]
	102 Move X1, [X31+8]
	103 Move X8, [X8+744]
	104 Move W3, 40
	105 Move X2, [X8]
	106 Call Debug.CheckAndThrow, X0, X1, X2
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X30, [X31+16]
	112 Add X31, X31, 64
	113 Return 
	114 Call 0x1C17F20
	115 Call 0x1C17F28

Method: System.Boolean ProcessHandshake()

Disassembly:
	0x035E5E84 ADRP X23, 0xDFB000
	0x035E5E88 LDRB W8, [X23 + 0x28E]
	0x035E5E8C LDR X20, [X31 + 0x40]
	0x035E5E90 MOV X21, X7
	0x035E5E94 MOV X22, X6
	0x035E5E98 MOV X19, X0
	0x035E5E9C TBNZ X8, 0x0, 0x35E5EB4
	0x035E5EA0 ADRP X0, 0xB54000
	0x035E5EA4 LDR X0, [X0 + 0x350]
	0x035E5EA8 BL 0x1C16CF4
	0x035E5EAC MOVZ W8, 0x1
	0x035E5EB0 STRB W8, [X23 + 0x28E]
	0x035E5EB4 LDR X8, [X19 + 0x98]
	0x035E5EB8 CBZ X8, 0x35E5FD8
	0x035E5EBC MOV X0, X19
	0x035E5EC0 MOV X1, X31
	0x035E5EC4 BL 0x35E6138
	0x035E5EC8 STR X0, [X19 + 0x90]
	0x035E5ECC CBZ X0, 0x35E5F8C
	0x035E5ED0 BL 0x35E1D34
	0x035E5ED4 CBZ X0, 0x35E6024
	0x035E5ED8 LDR X8, [X0 + 0x88]
	0x035E5EDC CBZ X8, 0x35E6028
	0x035E5EE0 ADD X24, X19, 0x60
	0x035E5EE4 LDR X0, [X8 + 0x40]
	0x035E5EE8 LDR X1, [X24]
	0x035E5EEC LDR X9, [X8 + 0x18]
	0x035E5EF0 LDR X2, [X8 + 0x28]
	0x035E5EF4 BLR X9
	0x035E5EF8 BL 0x35E1D34
	0x035E5EFC CBZ X0, 0x35E602C
	0x035E5F00 LDR X8, [X0 + 0x48]
	0x035E5F04 CBZ X8, 0x35E6030
	0x035E5F08 ADD X23, X19, 0x68
	0x035E5F0C LDR X0, [X8 + 0x40]
	0x035E5F10 LDR X1, [X23]
	0x035E5F14 LDR X9, [X8 + 0x18]
	0x035E5F18 LDR X2, [X8 + 0x28]
	0x035E5F1C BLR X9
	0x035E5F20 LDR X0, [X19 + 0x90]
	0x035E5F24 MOV X1, X20
	0x035E5F28 MOV X2, X24
	0x035E5F2C MOV X3, X23
	0x035E5F30 BL 0x35E446C
	0x035E5F34 BL 0x35E1D34
	0x035E5F38 CBZ X0, 0x35E6034
	0x035E5F3C LDR X8, [X0 + 0x58]
	0x035E5F40 CBZ X8, 0x35E6038
	0x035E5F44 LDR X1, [X24]
	0x035E5F48 LDR X0, [X8 + 0x40]
	0x035E5F4C LDR X9, [X8 + 0x18]
	0x035E5F50 LDR X3, [X8 + 0x28]
	0x035E5F54 MOV X2, X20
	0x035E5F58 BLR X9
	0x035E5F5C STR X0, [X22]
	0x035E5F60 BL 0x35E1D34
	0x035E5F64 CBZ X0, 0x35E603C
	0x035E5F68 LDR X8, [X0 + 0x30]
	0x035E5F6C CBZ X8, 0x35E6040
	0x035E5F70 LDR X1, [X23]
	0x035E5F74 LDR X0, [X8 + 0x40]
	0x035E5F78 LDR X9, [X8 + 0x18]
	0x035E5F7C LDR X3, [X8 + 0x28]
	0x035E5F80 MOV X2, X20
	0x035E5F84 BLR X9
	0x035E5F88 B 0x35E5FA8
	0x035E5F8C BL 0x35E1D34
	0x035E5F90 CBZ X0, 0x35E6044
	0x035E5F94 LDR X8, [X0 + 0x10]
	0x035E5F98 STR X8, [X22]
	0x035E5F9C BL 0x35E1D34
	0x035E5FA0 CBZ X0, 0x35E6048
	0x035E5FA4 LDR X0, [X0 + 0x10]
	0x035E5FA8 ADRP X8, 0xB54000
	0x035E5FAC LDR X8, [X8 + 0x350]
	0x035E5FB0 STR X0, [X21]
	0x035E5FB4 LDP X0, X1, [X20]
	0x035E5FB8 LDR X2, [X8]
	0x035E5FBC MOVZ W3, 0x28
	0x035E5FC0 BL 0x35E1DFC
	0x035E5FC4 LDP X20, X19, [X31 + 0x30]
	0x035E5FC8 LDP X22, X21, [X31 + 0x20]
	0x035E5FCC LDP X24, X23, [X31 + 0x10]
	0x035E5FD0 LDR X30, [X31], #0x40
	0x035E5FD4 RET
	0x035E5FD8 ADRP X0, 0xB54000
	0x035E5FDC LDR X0, [X0 + 0x220]
	0x035E5FE0 BL 0x1C16D08
	0x035E5FE4 BL 0x1C16F10
	0x035E5FE8 MOV X21, X0
	0x035E5FEC ADRP X0, 0xB54000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xDFC000
	006 Move W8, [X20+645]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB55000
	013 Move X0, [X0+760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+645], W8
	017 Move [X19+200], X31
	018 Call UnityTls.get_NativeInterface
	019 Compare X0, 0
	020 JumpIfEqual {96}
	021 Move X8, [X0+32]
	022 Compare X8, 0
	023 JumpIfEqual {96}
	024 Move X9, [X8+24]
	025 Move X0, [X8+64]
	026 Move X1, [X8+40]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move [X31], X0
	029 Move [X31+8], X1
	030 Call UnityTls.get_NativeInterface
	031 Compare X0, 0
	032 JumpIfEqual {96}
	033 Move X8, [X0+232]
	034 Compare X8, 0
	035 JumpIfEqual {96}
	036 Move X1, [X19+88]
	037 Move X9, [X8+24]
	038 Move X0, [X8+64]
	039 Move X3, [X8+40]
	040 Add X2, X31, 0
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move W8, [X31+4]
	043 Move W9, 1
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W0, W31
	047 Move X8, [X19+200]
	048 Compare X8, 0
	049 JumpIfNotEqual {97}
	050 Move X8, 0xB55000
	051 Move W2, W0
	052 Move X0, [X31]
	053 Move X1, [X31+8]
	054 Move X8, [X8+760]
	055 Move W9, 0x80000000
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X8]
	058 Move W9, [X19+40]
	059 Compare W9, 0
	060 JumpIfEqual {87}
	061 Move W3, 40
	062 Move X2, X8
	063 Call Debug.CheckAndThrow, X0, X1, X2
	064 Move X0, X19
	065 Move X1, X31
	066 Move X2, X31
	067 Call MobileTlsContext.ValidateCertificate, X0, X1, X2
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {90}
	072 Move X0, 0xB55000
	073 Move X0, [X0+544]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0xB55000
	078 Move X0, [X0+768]
	079 Call 0x1C17D08
	080 Move X2, X0
	081 Move W1, 40
	082 Move X0, X19
	083 Move X3, X31
	084 Call TlsException..ctor, X0, X1, X2
	085 Move X0, 0xB55000
	086 Move X0, [X0+776]
	087 Move W4, 40
	088 Move X3, X8
	089 Call Debug.CheckAndThrow, X0, X1, X2, X3
	090 Move W0, 1
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X30, [X31+16]
	094 Add X31, X31, 48
	095 Return X0
	096 Call 0x1C17F20
	097 Move X0, 0xB55000
	098 Move X0, [X0+776]
	099 Move X19, X8
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Void FinishHandshake()

Disassembly:
	0x035E6040 BL 0x1C16F20
	0x035E6044 BL 0x1C16F20
	0x035E6048 BL 0x1C16F20
	0x035E604C B 0x35E6088
	0x035E6050 B 0x35E6088
	0x035E6054 B 0x35E6088
	0x035E6058 B 0x35E6088
	0x035E605C B 0x35E6088
	0x035E6060 B 0x35E6088
	0x035E6064 B 0x35E6088
	0x035E6068 B 0x35E6088
	0x035E606C B 0x35E6088
	0x035E6070 B 0x35E6088
	0x035E6074 B 0x35E6088
	0x035E6078 B 0x35E6088
	0x035E607C B 0x35E6088
	0x035E6080 B 0x35E6088
	0x035E6084 B 0x35E6088
	0x035E6088 MOV X21, X0
	0x035E608C CMP W1, 0x1
	0x035E6090 B.NE 0x35E612C
	0x035E6094 MOV X0, X21
	0x035E6098 BL 0x3EB1AD0
	0x035E609C MOV X21, X0
	0x035E60A0 ADRP X0, 0xB0D000
	0x035E60A4 LDR X0, [X0 + 0x7D0]
	0x035E60A8 BL 0x1C16D08
	0x035E60AC LDR X8, [X21]
	0x035E60B0 LDR X1, [X8]
	0x035E60B4 BL 0x1C17270
	0x035E60B8 TBZ X0, 0x0, 0x35E6104
	0x035E60BC LDR X21, [X21]
	0x035E60C0 BL 0x3EB1AE0
	0x035E60C4 BL 0x35E1D34
	0x035E60C8 CBZ X0, 0x35E6100
	0x035E60CC LDR X8, [X0 + 0x28]
	0x035E60D0 CBZ X8, 0x35E6100
	0x035E60D4 LDR X9, [X8 + 0x18]
	0x035E60D8 LDR X0, [X8 + 0x40]
	0x035E60DC LDR X3, [X8 + 0x28]
	0x035E60E0 MOVZ W2, 0x4
	0x035E60E4 MOVK W2, 0x100000
	0x035E60E8 MOV X1, X20
	0x035E60EC BLR X9
	0x035E60F0 LDR X8, [X19 + 0xC8]
	0x035E60F4 CBNZ X8, 0x35E5FC4
	0x035E60F8 STR X21, [X19 + 0xC8]
	0x035E60FC B 0x35E5FC4
	0x035E6100 BL 0x1C16F20
	0x035E6104 MOVZ W0, 0x8
	0x035E6108 BL 0x3EB1AF0
	0x035E610C LDR X8, [X21]
	0x035E6110 STR X8, [X0]
	0x035E6114 ADRP X1, 0x8CE000
	0x035E6118 ADD X1, X1, 0xE58
	0x035E611C MOV X2, X31
	0x035E6120 BL 0x3EB1B00
	0x035E6124 MOV X21, X0
	0x035E6128 BL 0x3EB1AE0
	0x035E612C MOV X0, X21
	0x035E6130 BL 0x1D2C690
	0x035E6134 BL 0x1990590
	0x035E6138 STP X29, X30, [X31 - 0x60]!
	0x035E613C STP X28, X27, [X31 + 0x10]
	0x035E6140 STP X26, X25, [X31 + 0x20]
	0x035E6144 STP X24, X23, [X31 + 0x30]
	0x035E6148 STP X22, X21, [X31 + 0x40]
	0x035E614C STP X20, X19, [X31 + 0x50]
	0x035E6150 ADRP X21, 0xDFA000
	0x035E6154 LDRB W8, [X21 + 0x2C9]
	0x035E6158 MOV X19, X1
	0x035E615C MOV X20, X0
	0x035E6160 TBNZ X8, 0x0, 0x35E6190

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xDFB000
	008 Move W8, [X20+646]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB54000
	015 Move X0, [X0+784]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+646], W8
	019 Call UnityTls.get_NativeInterface
	020 Compare X0, 0
	021 JumpIfEqual {86}
	022 Move X8, [X0+32]
	023 Compare X8, 0
	024 JumpIfEqual {86}
	025 Move X9, [X8+24]
	026 Move X0, [X8+64]
	027 Move X1, [X8+40]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move [X31], X0
	030 Move [X31+8], X1
	031 Call UnityTls.get_NativeInterface
	032 Compare X0, 0
	033 JumpIfEqual {86}
	034 Move X8, [X0+216]
	035 Compare X8, 0
	036 JumpIfEqual {86}
	037 Move X1, [X19+88]
	038 Move X9, [X8+24]
	039 Move X0, [X8+64]
	040 Move X3, [X8+40]
	041 Add X2, X31, 0
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move W20, W0
	044 Call UnityTls.get_NativeInterface
	045 Compare X0, 0
	046 JumpIfEqual {86}
	047 Move X8, [X0+224]
	048 Compare X8, 0
	049 JumpIfEqual {86}
	050 Move X1, [X19+88]
	051 Move X9, [X8+24]
	052 Move X0, [X8+64]
	053 Move X3, [X8+40]
	054 Move X21, 0xB54000
	055 Move X21, [X21+784]
	056 Add X2, X31, 0
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X8, [X21]
	059 Move W22, W0
	060 Move X0, X8
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X21, X0
	064 Call MonoTlsConnectionInfo..ctor, X0
	065 Compare X21, 0
	066 JumpIfEqual {86}
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction STRH not yet implemented."
	069 Move X8, -44359680
	070 Add X8, X8, 624
	071 Move W8, [X8]
	072 Move W8, W31
	073 Move [X21+20], W8
	074 Move X8, [X19+56]
	075 Move W9, 1
	076 Move X30, [X31+16]
	077 Move [X21+24], X8
	078 Move [X19+160], X21
	079 Move [X19+168], W9
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Add X31, X31, 64
	085 Return 
	086 Call 0x1C17F20

Method: System.IntPtr WriteCallback(System.Void* userData, System.Byte* data, System.IntPtr bufferLen, Mono.Unity.UnityTls/unitytls_errorstate* errorState)

Disassembly:
	0x035E48E8 STR X31, [X31 + 0x18]
	0x035E48EC CSET W2, LT
	0x035E48F0 LDR X3, [X8]
	0x035E48F4 ADD X0, X31, 0x18
	0x035E48F8 B 0x35E4954
	0x035E48FC ADRP X8, 0xB55000
	0x035E4900 LDR X8, [X8 + 0x2B8]
	0x035E4904 STR X31, [X31 + 0x18]
	0x035E4908 ADD X0, X31, 0x18
	0x035E490C MOVZ W2, 0x1
	0x035E4910 LDR X3, [X8]
	0x035E4914 B 0x35E4954
	0x035E4918 LDRB W8, [X20 + 0xAA]
	0x035E491C CBNZ W8, 0x35E4938
	0x035E4920 ADRP X8, 0xB55000
	0x035E4924 LDP X0, X1, [X31]
	0x035E4928 LDR X8, [X8 + 0x2C0]
	0x035E492C MOVZ W3, 0x50
	0x035E4930 LDR X2, [X8]
	0x035E4934 BL 0x35E1DFC
	0x035E4938 ADRP X8, 0xB55000
	0x035E493C LDR X8, [X8 + 0x2B8]
	0x035E4940 ADD X0, X31, 0x18
	0x035E4944 MOV W1, W31
	0x035E4948 MOV W2, W31
	0x035E494C LDR X3, [X8]
	0x035E4950 STR X31, [X31 + 0x18]
	0x035E4954 BL 0x279EBD0
	0x035E4958 LDP X30, X0, [X31 + 0x10]
	0x035E495C LDP X20, X19, [X31 + 0x40]
	0x035E4960 LDP X22, X21, [X31 + 0x30]
	0x035E4964 LDP X24, X23, [X31 + 0x20]
	0x035E4968 ADD X31, X31, 0x50
	0x035E496C RET
	0x035E4970 BL 0x1C16F20
	0x035E4974 ADRP X0, 0xB55000
	0x035E4978 LDR X0, [X0 + 0x2C8]
	0x035E497C BL 0x1C16D08
	0x035E4980 MOV X1, X0
	0x035E4984 MOV X0, X21
	0x035E4988 BL 0x1C16DEC
	0x035E498C SUB X31, X31, 0x50
	0x035E4990 STR X30, [X31 + 0x10]
	0x035E4994 STP X24, X23, [X31 + 0x20]
	0x035E4998 STP X22, X21, [X31 + 0x30]
	0x035E499C STP X20, X19, [X31 + 0x40]
	0x035E49A0 ADRP X23, 0xDFC000
	0x035E49A4 LDRB W8, [X23 + 0x283]
	0x035E49A8 MOV W19, W3
	0x035E49AC MOV W21, W2

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDFD000
	009 Move W8, [X23+647]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB56000
	019 Move X0, [X0+584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+647], W8
	023 Move X0, X22
	024 Move X1, X31
	025 Call IntPtr.op_Explicit, X0
	026 Move X1, X31
	027 Call GCHandle.op_Explicit, X0
	028 Move [X31+8], X0
	029 Add X0, X31, 8
	030 Move X1, X31
	031 Call GCHandle.get_Target, X0
	032 Compare X0, 0
	033 JumpIfEqual {58}
	034 Move X9, 0xB56000
	035 Move X9, [X9+584]
	036 Move X8, [X0]
	037 Move X1, [X9]
	038 Move W10, [X8+304]
	039 Move W9, [X1+304]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X8+200]
	042 Add X8, X8, X9
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X1, X21
	046 Move X2, X20
	047 Move X3, X19
	048 Call UnityTlsContext.WriteCallback, X0, X1, X2, X3
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 Add X31, X31, 64
	056 Return X0
	057 Call 0x1C181E0
	058 Call 0x1C17F20

Method: System.IntPtr WriteCallback(System.Byte* data, System.IntPtr bufferLen, Mono.Unity.UnityTls/unitytls_errorstate* errorState)

Disassembly:
	0x035E6184 BL 0x1C16CF4
	0x035E6188 MOVZ W8, 0x1
	0x035E618C STRB W8, [X21 + 0x2C9]
	0x035E6190 LDR X8, [X20 + 0x20]
	0x035E6194 CBZ X8, 0x35E659C
	0x035E6198 LDR X8, [X8 + 0x90]
	0x035E619C CBZ X8, 0x35E659C
	0x035E61A0 LDRB W8, [X8 + 0x58]
	0x035E61A4 CBZ W8, 0x35E61BC
	0x035E61A8 LDR X8, [X20]
	0x035E61AC MOV X0, X20
	0x035E61B0 LDP X9, X1, [X8 + 0x188]
	0x035E61B4 BLR X9
	0x035E61B8 TBZ X0, 0x0, 0x35E654C
	0x035E61BC LDR X8, [X20]
	0x035E61C0 MOV X0, X20
	0x035E61C4 LDP X9, X1, [X8 + 0x1D8]
	0x035E61C8 BLR X9
	0x035E61CC CBZ X0, 0x35E65A0
	0x035E61D0 LDR X8, [X20]
	0x035E61D4 LDR X23, [X20 + 0x10]
	0x035E61D8 LDR X22, [X20 + 0x30]
	0x035E61DC LDR X21, [X20 + 0x48]
	0x035E61E0 LDP X9, X1, [X8 + 0x188]
	0x035E61E4 MOV X0, X20
	0x035E61E8 BLR X9
	0x035E61EC TBZ X0, 0x0, 0x35E6208
	0x035E61F0 LDR X8, [X20]
	0x035E61F4 MOV X0, X20
	0x035E61F8 LDP X9, X1, [X8 + 0x1D8]
	0x035E61FC BLR X9
	0x035E6200 MOV X3, X0
	0x035E6204 B 0x35E620C
	0x035E6208 MOV X3, X31
	0x035E620C CBZ X23, 0x35E659C
	0x035E6210 LDR X8, [X23 + 0x30]
	0x035E6214 CBZ X8, 0x35E624C
	0x035E6218 LDR X6, [X8 + 0x18]
	0x035E621C LDR X0, [X8 + 0x40]
	0x035E6220 LDR X5, [X8 + 0x28]
	0x035E6224 MOV X1, X22
	0x035E6228 MOV X2, X21
	0x035E622C MOV X4, X19
	0x035E6230 LDP X20, X19, [X31 + 0x50]
	0x035E6234 LDP X22, X21, [X31 + 0x40]
	0x035E6238 LDP X24, X23, [X31 + 0x30]
	0x035E623C LDP X26, X25, [X31 + 0x20]
	0x035E6240 LDP X28, X27, [X31 + 0x10]
	0x035E6244 LDP X29, X30, [X31], #0x60
	0x035E6248 BR X6
	0x035E624C LDR X0, [X20 + 0x48]
	0x035E6250 CBZ X0, 0x35E654C
	0x035E6254 MOV X1, X31
	0x035E6258 BL 0x3352004
	0x035E625C CBZ W0, 0x35E654C
	0x035E6260 CBZ X19, 0x35E6570
	0x035E6264 LDR X8, [X19 + 0x18]
	0x035E6268 CBZ X8, 0x35E6570
	0x035E626C LDR X0, [X20 + 0x48]
	0x035E6270 CBZ X0, 0x35E659C
	0x035E6274 ADRP X28, 0xB53000
	0x035E6278 ADRP X29, 0xB53000
	0x035E627C ADRP X23, 0xB46000
	0x035E6280 LDR X28, [X28 + 0x2A0]
	0x035E6284 LDR X29, [X29 + 0x340]
	0x035E6288 LDR X23, [X23 + 0x260]
	0x035E628C MOV W22, W31
	0x035E6290 MOV X21, X31
	0x035E6294 MOV X1, X31
	0x035E6298 BL 0x3352004
	0x035E629C CMP W22, W0
	0x035E62A0 B.GE 0x35E654C
	0x035E62A4 LDR X0, [X20 + 0x48]
	0x035E62A8 CBZ X0, 0x35E659C
	0x035E62AC MOV W1, W22
	0x035E62B0 MOV X2, X31
	0x035E62B4 BL 0x3657B14
	0x035E62B8 CBZ X0, 0x35E64D8
	0x035E62BC LDR X9, [X0]
	0x035E62C0 LDR X8, [X28]
	0x035E62C4 MOV X26, X0
	0x035E62C8 LDRB W11, [X9 + 0x130]
	0x035E62CC LDRB W10, [X8 + 0x130]
	0x035E62D0 CMP W11, W10
	0x035E62D4 B.CC 0x35E64D8
	0x035E62D8 LDR X9, [X9 + 0xC8]
	0x035E62DC ADD X9, X9, X10, 0x3, LSL
	0x035E62E0 LDUR X9, [X9 - 0x8]
	0x035E62E4 CMP X9, X8
	0x035E62E8 B.NE 0x35E64D8
	0x035E62EC LDR X0, [X29]
	0x035E62F0 BL 0x1C16F10
	0x035E62F4 MOV X25, X0
	0x035E62F8 MOV X1, X31
	0x035E62FC BL 0x365869C
	0x035E6300 CBZ X25, 0x35E640C
	0x035E6304 MOV X0, X25
	0x035E6308 MOV X1, X31
	0x035E630C BL 0x36587E4
	0x035E6310 CBZ X0, 0x35E6414
	0x035E6314 MOV W1, W31
	0x035E6318 MOV X2, X31
	0x035E631C BL 0x365CE74
	0x035E6320 MOV X0, X25
	0x035E6324 MOV X1, X31
	0x035E6328 BL 0x36587E4
	0x035E632C CBZ X0, 0x35E641C
	0x035E6330 MOVZ W1, 0x40
	0x035E6334 MOV X2, X31
	0x035E6338 BL 0x365CEDC
	0x035E633C MOV X0, X25
	0x035E6340 MOV X1, X26
	0x035E6344 MOV X2, X31
	0x035E6348 BL 0x3657430
	0x035E634C MOV X0, X25
	0x035E6350 MOV X1, X31
	0x035E6354 BL 0x36587B8
	0x035E6358 CBZ X0, 0x35E6424
	0x035E635C MOV X1, X31
	0x035E6360 BL 0x3658F30
	0x035E6364 CBZ W0, 0x35E64B0
	0x035E6368 MOV W27, W31
	0x035E636C MOV X0, X25
	0x035E6370 MOV X1, X31
	0x035E6374 BL 0x36587B8
	0x035E6378 CBZ X0, 0x35E63EC
	0x035E637C MOV X1, X31
	0x035E6380 BL 0x3658F30
	0x035E6384 CMP W27, W0
	0x035E6388 B.GE 0x35E64B0
	0x035E638C MOV X0, X25
	0x035E6390 MOV X1, X31
	0x035E6394 BL 0x36587B8
	0x035E6398 CBZ X0, 0x35E63FC
	0x035E639C MOV W1, W27
	0x035E63A0 MOV X2, X31
	0x035E63A4 BL 0x3658F78
	0x035E63A8 CBZ X0, 0x35E6404
	0x035E63AC LDR X0, [X0 + 0x10]
	0x035E63B0 CBZ X0, 0x35E63F4
	0x035E63B4 MOV X1, X31
	0x035E63B8 BL 0x326B63C
	0x035E63BC MOV X1, X0
	0x035E63C0 LDR X2, [X23]
	0x035E63C4 MOV X0, X19
	0x035E63C8 BL 0x22E75A0
	0x035E63CC ADDS W31, W0, 0x1
	0x035E63D0 ADD W27, W27, 0x1
	0x035E63D4 B.EQ 0x35E636C
	0x035E63D8 MOV X27, X31
	0x035E63DC MOVZ W24, 0x14
	0x035E63E0 MOV X21, X26

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDFB000
	009 Move W8, [X23+648]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xB0E000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xB36000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+648], W8
	026 Move X23, [X19+176]
	027 Compare X23, 0
	028 JumpIfEqual {34}
	029 Move X0, X21
	030 Move X1, X31
	031 Call IntPtr.op_Explicit, X0
	032 Move W8, [X23+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X21
	035 Move X1, X31
	036 Call IntPtr.op_Explicit, X0
	037 Move W1, W0
	038 Move X8, 0xB0E000
	039 Move X8, [X8+1560]
	040 Move X0, [X8]
	041 Call 0x1C17D6C
	042 Move [X19+176], X0
	043 Move X0, X22
	044 Move X1, X31
	045 Call IntPtr.op_Explicit, X0
	046 Move X23, [X19+176]
	047 Move X22, X0
	048 Move X0, X21
	049 Move X1, X31
	050 Call IntPtr.op_Explicit, X0
	051 Move X8, 0xB36000
	052 Move X8, [X8+2128]
	053 Move W24, W0
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X22
	060 Move X1, X23
	061 Move W2, W31
	062 Move W3, W24
	063 Move X4, X31
	064 Call Marshal.Copy, X0, X1, X2, X3
	065 Move X22, [X19+32]
	066 Move X23, [X19+176]
	067 Move X0, X21
	068 Move X1, X31
	069 Call IntPtr.op_Explicit, X0
	070 Compare X22, 0
	071 JumpIfEqual {107}
	072 Move W3, W0
	073 Move X0, X22
	074 Move X1, X23
	075 Move W2, W31
	076 Call MobileAuthenticatedStream.InternalWrite, X0, X1, X2, X3
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {98}
	081 Call UnityTls.get_NativeInterface
	082 Compare X0, 0
	083 JumpIfEqual {108}
	084 Move X8, [X0+40]
	085 Compare X8, 0
	086 JumpIfEqual {109}
	087 Move X0, [X8+64]
	088 Move X9, [X8+24]
	089 Move X3, [X8+40]
	090 Move W2, 3
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 Move X1, X20
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W0, W31
	095 Move X1, X31
	096 Call IntPtr.op_Explicit, X0
	097 Move X21, X0
	098 Move X0, X21
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X24, [X31+16]
	104 Move X23, [X31+24]
	105 Move X30, [X31+64]
	106 Return X0
	107 Call 0x1C17F20
	108 Call 0x1C17F20
	109 Call 0x1C17F20
	110 Move X21, X0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X21
	113 Call 0x3EB2AD0
	114 Move X21, X0
	115 Move X0, 0xB0E000
	116 Move X0, [X0+2000]
	117 Call 0x1C17D08
	118 Move X8, [X21]
	119 Move X1, [X8]
	120 Call 0x1C18270
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {156}
	125 Move X21, [X21]
	126 Call 0x3EB2AE0
	127 Call UnityTls.get_NativeInterface
	128 Compare X0, 0
	129 JumpIfEqual {155}
	130 Move X8, [X0+40]
	131 Compare X8, 0
	132 JumpIfEqual {155}
	133 Move X9, [X8+24]
	134 Move X0, [X8+64]
	135 Move X3, [X8+40]
	136 Move W2, 4
	137 NotImplemented "Instruction MOVK not yet implemented."
	138 Move X1, X20
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X8, [X19+200]
	141 Compare X8, 0
	142 JumpIfNotEqual {144}
	143 Move [X19+200], X21
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X22, [X31+32]
	147 Move X21, [X31+40]
	148 Move X24, [X31+16]
	149 Move X23, [X31+24]
	150 Move W0, W31
	151 Move X1, X31
	152 Move X30, [X31+64]
	153 Call IntPtr.op_Explicit, X0
	154 Return X0
	155 Call 0x1C17F20
	156 Move W0, 8
	157 Call 0x3EB2AF0
	158 Move X8, [X21]
	159 Move [X0], X8
	160 Move X1, 0x8CF000
	161 Add X1, X1, 3672
	162 Move X2, X31
	163 Call 0x3EB2B00
	164 Move X21, X0
	165 Call 0x3EB2AE0
	166 Move X0, X21
	167 Call 0x1D2D690
	168 Call 0x1991590

Method: System.IntPtr ReadCallback(System.Void* userData, System.Byte* buffer, System.IntPtr bufferLen, Mono.Unity.UnityTls/unitytls_errorstate* errorState)

Disassembly:
	0x035E49B0 MOV X22, X1
	0x035E49B4 MOV X20, X0
	0x035E49B8 TBNZ X8, 0x0, 0x35E49DC
	0x035E49BC ADRP X0, 0xB55000
	0x035E49C0 LDR X0, [X0 + 0x2B8]
	0x035E49C4 BL 0x1C16CF4
	0x035E49C8 ADRP X0, 0xB55000
	0x035E49CC LDR X0, [X0 + 0x2D0]
	0x035E49D0 BL 0x1C16CF4
	0x035E49D4 MOVZ W8, 0x1
	0x035E49D8 STRB W8, [X23 + 0x283]
	0x035E49DC STR X31, [X20 + 0xC8]
	0x035E49E0 BL 0x35E1D34
	0x035E49E4 CBZ X0, 0x35E4B1C
	0x035E49E8 LDR X8, [X0 + 0x20]
	0x035E49EC CBZ X8, 0x35E4B1C
	0x035E49F0 LDR X9, [X8 + 0x18]
	0x035E49F4 LDR X0, [X8 + 0x40]
	0x035E49F8 LDR X1, [X8 + 0x28]
	0x035E49FC BLR X9
	0x035E4A00 STP X0, X1, [X31]
	0x035E4A04 CBZ X22, 0x35E4A18
	0x035E4A08 LDR W8, [X22 + 0x18]
	0x035E4A0C CBZ W8, 0x35E4A18
	0x035E4A10 ADD X23, X22, 0x20
	0x035E4A14 B 0x35E4A1C
	0x035E4A18 MOV X23, X31
	0x035E4A1C BL 0x35E1D34
	0x035E4A20 CBZ X0, 0x35E4B1C
	0x035E4A24 LDR X24, [X0 + 0xF8]
	0x035E4A28 LDR X22, [X20 + 0x58]
	0x035E4A2C MOV W0, W19
	0x035E4A30 MOV X1, X31
	0x035E4A34 BL 0x33C6930
	0x035E4A38 CBZ X24, 0x35E4B1C
	0x035E4A3C MOV X3, X0
	0x035E4A40 LDR X8, [X24 + 0x18]
	0x035E4A44 LDR X0, [X24 + 0x40]
	0x035E4A48 LDR X5, [X24 + 0x28]
	0x035E4A4C ADD X2, X23, W21, SXTW
	0x035E4A50 ADD X4, X31, 0x0
	0x035E4A54 MOV X1, X22
	0x035E4A58 BLR X8
	0x035E4A5C MOV X1, X31
	0x035E4A60 BL 0x33C6940
	0x035E4A64 LDR X20, [X20 + 0xC8]
	0x035E4A68 CBNZ X20, 0x35E4B20
	0x035E4A6C LDR W8, [X31 + 0x4]
	0x035E4A70 MOVZ W9, 0x1
	0x035E4A74 MOVK W9, 0x100000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDFD000
	009 Move W8, [X23+649]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB56000
	019 Move X0, [X0+584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+649], W8
	023 Move X0, X22
	024 Move X1, X31
	025 Call IntPtr.op_Explicit, X0
	026 Move X1, X31
	027 Call GCHandle.op_Explicit, X0
	028 Move [X31+8], X0
	029 Add X0, X31, 8
	030 Move X1, X31
	031 Call GCHandle.get_Target, X0
	032 Compare X0, 0
	033 JumpIfEqual {58}
	034 Move X9, 0xB56000
	035 Move X9, [X9+584]
	036 Move X8, [X0]
	037 Move X1, [X9]
	038 Move W10, [X8+304]
	039 Move W9, [X1+304]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X8+200]
	042 Add X8, X8, X9
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X1, X21
	046 Move X2, X20
	047 Move X3, X19
	048 Call UnityTlsContext.ReadCallback, X0, X1, X2, X3
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 Add X31, X31, 64
	056 Return X0
	057 Call 0x1C181E0
	058 Call 0x1C17F20

Method: System.IntPtr ReadCallback(System.Byte* buffer, System.IntPtr bufferLen, Mono.Unity.UnityTls/unitytls_errorstate* errorState)

Disassembly:
	0x035E65CC MOV X3, X31
	0x035E65D0 BL 0x31FDB0C
	0x035E65D4 ADRP X0, 0xB53000
	0x035E65D8 LDR X0, [X0 + 0x368]
	0x035E65DC BL 0x1C16D08
	0x035E65E0 MOV X1, X0
	0x035E65E4 MOV X0, X19
	0x035E65E8 BL 0x1C16DEC
	0x035E65EC MOV X0, X27
	0x035E65F0 BL 0x1C16F18
	0x035E65F4 MOV X27, X31
	0x035E65F8 B 0x35E6600
	0x035E65FC MOV X26, X0
	0x035E6600 CBZ X25, 0x35E6610
	0x035E6604 MOV X0, X25
	0x035E6608 MOV X1, X31
	0x035E660C BL 0x3658810
	0x035E6610 CBNZ X27, 0x35E661C
	0x035E6614 MOV X0, X26
	0x035E6618 BL 0x1D2C690
	0x035E661C MOV X0, X27
	0x035E6620 BL 0x1C16F18
	0x035E6624 BL 0x1990590
	0x035E6628 BL 0x1990590
	0x035E662C ADDS W31, W0, 0x1
	0x035E6630 B.EQ 0x35E663C
	0x035E6634 CBNZ W0, 0x35E6644
	0x035E6638 RET
	0x035E663C MOVZ W0, 0x4
	0x035E6640 RET
	0x035E6644 UBFM W8, W0, 0x1, 0x1F
	0x035E6648 AND W8, W8, 0x2
	0x035E664C ORR W9, W8, 0x4
	0x035E6650 CMP W0, 0x4
	0x035E6654 CSEL W0, W8, W9, EQ
	0x035E6658 RET
	0x035E665C ADDS W31, W0, 0x1
	0x035E6660 B.EQ 0x35E666C
	0x035E6664 CBNZ W0, 0x35E6674
	0x035E6668 RET
	0x035E666C MOVZ W0, 0x20
	0x035E6670 RET
	0x035E6674 UBFM W8, W0, 0x1, 0x1F
	0x035E6678 AND W9, W0, 0x1
	0x035E667C UBFM W10, W0, 0x1D, 0x1C
	0x035E6680 ANDS W31, W0, 0x8
	0x035E6684 BFM W9, W8, 0x1E, 0x0
	0x035E6688 AND W8, W10, 0x20
	0x035E668C MOVZ W10, 0x20
	0x035E6690 CSEL W8, W8, W10, EQ
	0x035E6694 ORR W0, W9, W8, 0x0
	0x035E6698 RET
	0x035E669C STR X30, [X31 - 0x30]!
	0x035E66A0 STP X22, X21, [X31 + 0x10]
	0x035E66A4 STP X20, X19, [X31 + 0x20]
	0x035E66A8 MOV W19, W2
	0x035E66AC CBZ X0, 0x35E66E8
	0x035E66B0 MOV X20, X3
	0x035E66B4 MOV X21, X1
	0x035E66B8 MOV X22, X0
	0x035E66BC BL 0x35E1D34
	0x035E66C0 CBZ X0, 0x35E66FC
	0x035E66C4 LDR X8, [X0 + 0x70]
	0x035E66C8 CBZ X8, 0x35E66FC
	0x035E66CC LDR X9, [X8 + 0x18]
	0x035E66D0 LDR X0, [X8 + 0x40]
	0x035E66D4 LDR X4, [X8 + 0x28]
	0x035E66D8 MOV X1, X22
	0x035E66DC MOV X2, X21
	0x035E66E0 MOV X3, X20
	0x035E66E4 BLR X9
	0x035E66E8 MOV W0, W19
	0x035E66EC LDP X20, X19, [X31 + 0x20]
	0x035E66F0 LDP X22, X21, [X31 + 0x10]
	0x035E66F4 LDR X30, [X31], #0x30
	0x035E66F8 RET
	0x035E66FC BL 0x1C16F20
	0x035E6700 STR X30, [X31 - 0x20]!
	0x035E6704 STP X20, X19, [X31 + 0x10]
	0x035E6708 ADRP X19, 0xDFA000
	0x035E670C ADRP X20, 0xB53000
	0x035E6710 LDRB W8, [X19 + 0x28F]
	0x035E6714 LDR X20, [X20 + 0x370]
	0x035E6718 TBNZ X8, 0x0, 0x35E6730
	0x035E671C ADRP X0, 0xB53000
	0x035E6720 LDR X0, [X0 + 0x370]
	0x035E6724 BL 0x1C16CF4
	0x035E6728 MOVZ W8, 0x1
	0x035E672C STRB W8, [X19 + 0x28F]
	0x035E6730 LDR X0, [X20]
	0x035E6734 LDP X20, X19, [X31 + 0x10]
	0x035E6738 LDR X30, [X31], #0x20
	0x035E673C RET
	0x035E6740 STR X30, [X31 - 0x20]!
	0x035E6744 STP X20, X19, [X31 + 0x10]
	0x035E6748 ADRP X20, 0xDFA000
	0x035E674C ADRP X19, 0xB53000
	0x035E6750 LDRB W8, [X20 + 0x290]
	0x035E6754 LDR X19, [X19 + 0x378]
	0x035E6758 TBNZ X8, 0x0, 0x35E6770
	0x035E675C ADRP X0, 0xB53000
	0x035E6760 LDR X0, [X0 + 0x378]
	0x035E6764 BL 0x1C16CF4
	0x035E6768 MOVZ W8, 0x1
	0x035E676C STRB W8, [X20 + 0x290]
	0x035E6770 LDR X0, [X19]
	0x035E6774 LDR W8, [X0 + 0xE0]
	0x035E6778 CBNZ W8, 0x35E6784
	0x035E677C BL 0x1C16DFC
	0x035E6780 LDR X0, [X19]
	0x035E6784 LDR X8, [X0 + 0xB8]
	0x035E6788 LDP X20, X19, [X31 + 0x10]
	0x035E678C LDP X0, X1, [X8 + 0x28]
	0x035E6790 LDR X30, [X31], #0x20
	0x035E6794 RET
	0x035E6798 MOVZ W0, 0x1
	0x035E679C RET
	0x035E67A0 MOVZ W0, 0x1
	0x035E67A4 RET
	0x035E67A8 MOVZ W0, 0x1
	0x035E67AC RET
	0x035E67B0 MOVZ W0, 0x1
	0x035E67B4 RET
	0x035E67B8 MOVZ W0, 0xFC0
	0x035E67BC RET
	0x035E67C0 STP X30, X25, [X31 - 0x40]!
	0x035E67C4 STP X24, X23, [X31 + 0x10]
	0x035E67C8 STP X22, X21, [X31 + 0x20]
	0x035E67CC STP X20, X19, [X31 + 0x30]
	0x035E67D0 ADRP X24, 0xDFA000
	0x035E67D4 ADRP X25, 0xB53000
	0x035E67D8 LDRB W8, [X24 + 0x291]
	0x035E67DC LDR X25, [X25 + 0x380]
	0x035E67E0 MOV X19, X4
	0x035E67E4 MOV W23, W3
	0x035E67E8 MOV X22, X2
	0x035E67EC MOV X21, X1
	0x035E67F0 MOV X20, X0
	0x035E67F4 TBNZ X8, 0x0, 0x35E680C
	0x035E67F8 ADRP X0, 0xB53000
	0x035E67FC LDR X0, [X0 + 0x380]
	0x035E6800 BL 0x1C16CF4
	0x035E6804 MOVZ W8, 0x1
	0x035E6808 STRB W8, [X24 + 0x291]
	0x035E680C LDR X0, [X25]
	0x035E6810 BL 0x1C16F10
	0x035E6814 AND W2, W23, 0x1
	0x035E6818 MOV X1, X22
	0x035E681C MOV X3, X21
	0x035E6820 MOV X4, X19
	0x035E6824 MOV X5, X20
	0x035E6828 MOV X24, X0
	0x035E682C BL 0x35E6848
	0x035E6830 MOV X0, X24
	0x035E6834 LDP X20, X19, [X31 + 0x30]
	0x035E6838 LDP X22, X21, [X31 + 0x20]
	0x035E683C LDP X24, X23, [X31 + 0x10]
	0x035E6840 LDP X30, X25, [X31], #0x40
	0x035E6844 RET
	0x035E6848 STR X30, [X31 - 0x50]!
	0x035E684C STP X26, X25, [X31 + 0x10]
	0x035E6850 STP X24, X23, [X31 + 0x20]
	0x035E6854 STP X22, X21, [X31 + 0x30]
	0x035E6858 STP X20, X19, [X31 + 0x40]
	0x035E685C ADRP X25, 0xDFA000
	0x035E6860 ADRP X26, 0xB53000
	0x035E6864 LDRB W8, [X25 + 0x293]
	0x035E6868 LDR X26, [X26 + 0x318]
	0x035E686C MOV X19, X5
	0x035E6870 MOV X20, X4
	0x035E6874 MOV X21, X3
	0x035E6878 MOV W23, W2
	0x035E687C MOV X22, X1
	0x035E6880 MOV X24, X0
	0x035E6884 TBNZ X8, 0x0, 0x35E689C
	0x035E6888 ADRP X0, 0xB53000
	0x035E688C LDR X0, [X0 + 0x318]
	0x035E6890 BL 0x1C16CF4
	0x035E6894 MOVZ W8, 0x1
	0x035E6898 STRB W8, [X25 + 0x293]
	0x035E689C LDR X0, [X26]
	0x035E68A0 LDR W8, [X0 + 0xE0]
	0x035E68A4 CBNZ W8, 0x35E68AC
	0x035E68A8 BL 0x1C16DFC
	0x035E68AC AND W2, W23, 0x1
	0x035E68B0 MOV X0, X24
	0x035E68B4 MOV X1, X22
	0x035E68B8 MOV X3, X21
	0x035E68BC MOV X4, X20
	0x035E68C0 MOV X5, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xDFB000
	009 Move W8, [X21+650]
	010 Move X20, X3
	011 Move X22, X2
	012 Move X23, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xB0E000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xB36000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+650], W8
	026 Move [X31+12], W31
	027 Move X21, [X19+184]
	028 Compare X21, 0
	029 JumpIfEqual {35}
	030 Move X0, X22
	031 Move X1, X31
	032 Call IntPtr.op_Explicit, X0
	033 Move W8, [X21+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X22
	036 Move X1, X31
	037 Call IntPtr.op_Explicit, X0
	038 Move W1, W0
	039 Move X8, 0xB0E000
	040 Move X8, [X8+1560]
	041 Move X0, [X8]
	042 Call 0x1C17D6C
	043 Move X21, X0
	044 Move [X19+184], X0
	045 Move X21, [X19+184]
	046 Move X24, [X19+32]
	047 Move X0, X22
	048 Move X1, X31
	049 Call IntPtr.op_Explicit, X0
	050 Compare X24, 0
	051 JumpIfEqual {142}
	052 Move W3, W0
	053 Add X4, X31, 12
	054 Move X0, X24
	055 Move X1, X21
	056 Move W2, W31
	057 Call MobileAuthenticatedStream.InternalRead, X0, X1, X2, X3, X4
	058 Move W21, W0
	059 Move TEMP, X0
	060 And TEMP, TEMP, -2147483648
	061 Compare TEMP, -2147483648
	062 JumpIfEqual {87}
	063 Compare W21, 0
	064 JumpIfEqual {100}
	065 Move X24, [X19+184]
	066 Move X0, X23
	067 Move X1, X31
	068 Call IntPtr.op_Explicit, X0
	069 Move X23, X0
	070 Move X0, X22
	071 Move X1, X31
	072 Call IntPtr.op_Explicit, X0
	073 Move X8, 0xB36000
	074 Move X8, [X8+2128]
	075 Move W22, W0
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X24
	082 Move W1, W31
	083 Move X2, X23
	084 Move W3, W22
	085 Move X4, X31
	086 Call Marshal.Copy, X0, X1, X2, X3
	087 Call UnityTls.get_NativeInterface
	088 Compare X0, 0
	089 JumpIfEqual {143}
	090 Move X8, [X0+40]
	091 Compare X8, 0
	092 JumpIfEqual {144}
	093 Move X0, [X8+64]
	094 Move X9, [X8+24]
	095 Move X3, [X8+40]
	096 Move W2, 2
	097 NotImplemented "Instruction MOVK not yet implemented."
	098 Move X1, X20
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move W8, [X31+12]
	101 Compare W8, 0
	102 JumpIfEqual {116}
	103 Call UnityTls.get_NativeInterface
	104 Compare X0, 0
	105 JumpIfEqual {145}
	106 Move X8, [X0+40]
	107 Compare X8, 0
	108 JumpIfEqual {146}
	109 Move X0, [X8+64]
	110 Move X9, [X8+24]
	111 Move X3, [X8+40]
	112 Move W2, 1
	113 NotImplemented "Instruction MOVK not yet implemented."
	114 Move X1, X20
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move W8, 1
	117 Move [X19+170], W8
	118 Call UnityTls.get_NativeInterface
	119 Compare X0, 0
	120 JumpIfEqual {147}
	121 Move X8, [X0+40]
	122 Compare X8, 0
	123 JumpIfEqual {148}
	124 Move X0, [X8+64]
	125 Move X9, [X8+24]
	126 Move X3, [X8+40]
	127 Move W2, 2
	128 NotImplemented "Instruction MOVK not yet implemented."
	129 Move X1, X20
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move W0, W21
	132 Move X1, X31
	133 Call IntPtr.op_Explicit, X0
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move X30, [X31+64]
	141 Return X0
	142 Call 0x1C17F20
	143 Call 0x1C17F20
	144 Call 0x1C17F20
	145 Call 0x1C17F20
	146 Call 0x1C17F20
	147 Call 0x1C17F20
	148 Call 0x1C17F20
	149 Move X21, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X21
	152 Call 0x3EB2AD0
	153 Move X21, X0
	154 Move X0, 0xB0E000
	155 Move X0, [X0+2000]
	156 Call 0x1C17D08
	157 Move X8, [X21]
	158 Move X1, [X8]
	159 Call 0x1C18270
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {187}
	164 Move X21, [X21]
	165 Call 0x3EB2AE0
	166 Call UnityTls.get_NativeInterface
	167 Compare X0, 0
	168 JumpIfEqual {186}
	169 Move X8, [X0+40]
	170 Compare X8, 0
	171 JumpIfEqual {186}
	172 Move X9, [X8+24]
	173 Move X0, [X8+64]
	174 Move X3, [X8+40]
	175 Move W2, 4
	176 NotImplemented "Instruction MOVK not yet implemented."
	177 Move X1, X20
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X8, [X19+200]
	180 Compare X8, 0
	181 JumpIfNotEqual {183}
	182 Move [X19+200], X21
	183 Move W0, W31
	184 Move X1, X31
	185 Call IntPtr.op_Explicit, X0
	186 Call 0x1C17F20
	187 Move W0, 8
	188 Call 0x3EB2AF0
	189 Move X8, [X21]
	190 Move [X0], X8
	191 Move X1, 0x8CF000
	192 Add X1, X1, 3672
	193 Move X2, X31
	194 Call 0x3EB2B00
	195 Move X21, X0
	196 Call 0x3EB2AE0
	197 Move X0, X21
	198 Call 0x1D2D690
	199 Call 0x1991590

Method: Mono.Unity.UnityTls/unitytls_x509verify_result VerifyCallback(System.Void* userData, Mono.Unity.UnityTls/unitytls_x509list_ref chain, Mono.Unity.UnityTls/unitytls_errorstate* errorState)

Disassembly:
	0x035E4A78 MOV W1, W0
	0x035E4A7C CMP W8, W9
	0x035E4A80 B.EQ 0x35E4AB0
	0x035E4A84 CMP W8, 0xA
	0x035E4A88 B.EQ 0x35E4AE4
	0x035E4A8C CBNZ W8, 0x35E4ACC
	0x035E4A90 ADRP X8, 0xB55000
	0x035E4A94 LDR X8, [X8 + 0x2B8]
	0x035E4A98 CMP W1, W19
	0x035E4A9C STR X31, [X31 + 0x18]
	0x035E4AA0 CSET W2, LT
	0x035E4AA4 LDR X3, [X8]
	0x035E4AA8 ADD X0, X31, 0x18
	0x035E4AAC B 0x35E4B00
	0x035E4AB0 ADRP X8, 0xB55000
	0x035E4AB4 LDR X8, [X8 + 0x2B8]
	0x035E4AB8 STR X31, [X31 + 0x18]
	0x035E4ABC ADD X0, X31, 0x18
	0x035E4AC0 MOVZ W2, 0x1
	0x035E4AC4 LDR X3, [X8]
	0x035E4AC8 B 0x35E4B00
	0x035E4ACC ADRP X8, 0xB55000
	0x035E4AD0 LDP X0, X1, [X31]
	0x035E4AD4 LDR X8, [X8 + 0x2D0]
	0x035E4AD8 MOVZ W3, 0x50
	0x035E4ADC LDR X2, [X8]
	0x035E4AE0 BL 0x35E1DFC
	0x035E4AE4 ADRP X8, 0xB55000
	0x035E4AE8 LDR X8, [X8 + 0x2B8]
	0x035E4AEC ADD X0, X31, 0x18
	0x035E4AF0 MOV W1, W31
	0x035E4AF4 MOV W2, W31
	0x035E4AF8 LDR X3, [X8]
	0x035E4AFC STR X31, [X31 + 0x18]
	0x035E4B00 BL 0x279EBD0
	0x035E4B04 LDP X30, X0, [X31 + 0x10]
	0x035E4B08 LDP X20, X19, [X31 + 0x40]
	0x035E4B0C LDP X22, X21, [X31 + 0x30]
	0x035E4B10 LDP X24, X23, [X31 + 0x20]
	0x035E4B14 ADD X31, X31, 0x50
	0x035E4B18 RET
	0x035E4B1C BL 0x1C16F20
	0x035E4B20 ADRP X0, 0xB55000
	0x035E4B24 LDR X0, [X0 + 0x2D8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDFD000
	007 Move W8, [X21+651]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB56000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+651], W8
	019 Move X0, X20
	020 Move X1, X31
	021 Call IntPtr.op_Explicit, X0
	022 Move X1, X31
	023 Call GCHandle.op_Explicit, X0
	024 Move [X31+8], X0
	025 Add X0, X31, 8
	026 Move X1, X31
	027 Call GCHandle.get_Target, X0
	028 Compare X0, 0
	029 JumpIfEqual {50}
	030 Move X9, 0xB56000
	031 Move X9, [X9+584]
	032 Move X8, [X0]
	033 Move X1, [X9]
	034 Move W10, [X8+304]
	035 Move W9, [X1+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X8+200]
	038 Add X8, X8, X9
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X1, X19
	042 Call UnityTlsContext.VerifyCallback, X0, X1, X2
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Add X31, X31, 48
	048 Return X0
	049 Call 0x1C181E0
	050 Call 0x1C17F20

Method: Mono.Unity.UnityTls/unitytls_x509verify_result VerifyCallback(Mono.Unity.UnityTls/unitytls_x509list_ref chain, Mono.Unity.UnityTls/unitytls_errorstate* errorState)

Disassembly:
	0x035E69D0 MOV X0, X24
	0x035E69D4 MOV X1, X31
	0x035E69D8 BL 0x3352004
	0x035E69DC CBZ W0, 0x35E6BF4
	0x035E69E0 MOV X22, X31
	0x035E69E4 MOVZ W26, 0x1
	0x035E69E8 MOV X0, X25
	0x035E69EC MOV X1, X31
	0x035E69F0 BL 0x32277A8
	0x035E69F4 TBZ X0, 0x0, 0x35E6A10
	0x035E69F8 ADRP X8, 0xB0D000
	0x035E69FC LDR X8, [X8 + 0x988]
	0x035E6A00 CMP X25, 0x0
	0x035E6A04 LDR X8, [X8]
	0x035E6A08 CSEL X25, X8, X25, EQ
	0x035E6A0C B 0x35E6A44
	0x035E6A10 CBZ X25, 0x35E6EE4
	0x035E6A14 MOVZ W1, 0x3A
	0x035E6A18 MOV X0, X25
	0x035E6A1C MOV X2, X31
	0x035E6A20 BL 0x322BD98
	0x035E6A24 CMP W0, 0x1
	0x035E6A28 B.LT 0x35E6A44
	0x035E6A2C MOV W2, W0
	0x035E6A30 MOV X0, X25
	0x035E6A34 MOV W1, W31
	0x035E6A38 MOV X3, X31
	0x035E6A3C BL 0x3228DE4
	0x035E6A40 MOV X25, X0
	0x035E6A44 BL 0x35E1D34
	0x035E6A48 CBZ X0, 0x35E6EE4
	0x035E6A4C LDR X8, [X0 + 0x68]
	0x035E6A50 CBZ X8, 0x35E6EE4
	0x035E6A54 LDR X9, [X8 + 0x18]
	0x035E6A58 LDR X0, [X8 + 0x40]
	0x035E6A5C LDR X2, [X8 + 0x28]
	0x035E6A60 ADD X1, X31, 0x10
	0x035E6A64 BLR X9
	0x035E6A68 STR X0, [X31 + 0x8]
	0x035E6A6C CBZ W26, 0x35E6AD4
	0x035E6A70 BL 0x35E1D34
	0x035E6A74 CBZ X0, 0x35E6F38
	0x035E6A78 LDR X8, [X0 + 0x68]
	0x035E6A7C CBZ X8, 0x35E6F3C
	0x035E6A80 LDR X0, [X8 + 0x40]
	0x035E6A84 LDR X9, [X8 + 0x18]
	0x035E6A88 LDR X2, [X8 + 0x28]
	0x035E6A8C ADD X1, X31, 0x10
	0x035E6A90 BLR X9
	0x035E6A94 MOV X22, X0
	0x035E6A98 ADD X2, X31, 0x10
	0x035E6A9C MOV X1, X24
	0x035E6AA0 BL 0x35E19AC
	0x035E6AA4 BL 0x35E1D34
	0x035E6AA8 CBZ X0, 0x35E6F40
	0x035E6AAC LDR X8, [X0 + 0x58]
	0x035E6AB0 CBZ X8, 0x35E6F44
	0x035E6AB4 LDR X0, [X8 + 0x40]
	0x035E6AB8 LDR X9, [X8 + 0x18]
	0x035E6ABC LDR X3, [X8 + 0x28]
	0x035E6AC0 ADD X2, X31, 0x10
	0x035E6AC4 MOV X1, X22
	0x035E6AC8 BLR X9
	0x035E6ACC MOV X24, X0
	0x035E6AD0 B 0x35E6ADC
	0x035E6AD4 LDR X24, [X22 + 0x18]
	0x035E6AD8 MOV X22, X31
	0x035E6ADC MOV X0, X31
	0x035E6AE0 BL 0x3241948
	0x035E6AE4 CBZ X0, 0x35E6EF0
	0x035E6AE8 LDR X8, [X0]
	0x035E6AEC LDR X9, [X8 + 0x268]
	0x035E6AF0 LDR X2, [X8 + 0x270]
	0x035E6AF4 MOV X1, X25
	0x035E6AF8 BLR X9
	0x035E6AFC CBZ X23, 0x35E6EF4
	0x035E6B00 LDR X8, [X23 + 0x18]
	0x035E6B04 CBZ X8, 0x35E6EF8
	0x035E6B08 LDR X8, [X8 + 0x30]
	0x035E6B0C MOV X25, X0
	0x035E6B10 CBZ X8, 0x35E6B98
	0x035E6B14 BL 0x35E1D34
	0x035E6B18 CBZ X0, 0x35E6EFC
	0x035E6B1C LDR X8, [X0 + 0x68]
	0x035E6B20 CBZ X8, 0x35E6F00
	0x035E6B24 LDR X0, [X8 + 0x40]
	0x035E6B28 LDR X9, [X8 + 0x18]
	0x035E6B2C LDR X2, [X8 + 0x28]
	0x035E6B30 ADD X1, X31, 0x10
	0x035E6B34 BLR X9
	0x035E6B38 LDR X8, [X23 + 0x18]
	0x035E6B3C MOV X26, X0
	0x035E6B40 CBZ X8, 0x35E6F04
	0x035E6B44 LDR X1, [X8 + 0x30]
	0x035E6B48 ADD X2, X31, 0x10
	0x035E6B4C MOV X0, X26
	0x035E6B50 BL 0x35E19AC
	0x035E6B54 BL 0x35E1D34
	0x035E6B58 CBZ X0, 0x35E6F08
	0x035E6B5C LDR X8, [X0 + 0x58]
	0x035E6B60 CBZ X8, 0x35E6F10
	0x035E6B64 LDR X0, [X8 + 0x40]
	0x035E6B68 LDR X9, [X8 + 0x18]
	0x035E6B6C LDR X3, [X8 + 0x28]
	0x035E6B70 ADD X2, X31, 0x10
	0x035E6B74 MOV X1, X26
	0x035E6B78 BLR X9
	0x035E6B7C MOV X23, X0
	0x035E6B80 CBZ X25, 0x35E6C08
	0x035E6B84 LDR W8, [X25 + 0x18]
	0x035E6B88 ADD X9, X25, 0x20
	0x035E6B8C CMP W8, 0x0
	0x035E6B90 CSEL X27, X31, X9, EQ
	0x035E6B94 B 0x35E6C0C
	0x035E6B98 MOVZ W23, 0x80000000
	0x035E6B9C B 0x35E6CCC
	0x035E6BA0 BL 0x35E1D34
	0x035E6BA4 CBZ X0, 0x35E6EE4
	0x035E6BA8 LDR X26, [X0 + 0x60]
	0x035E6BAC LDR X21, [X22 + 0x18]
	0x035E6BB0 MOV W0, W31
	0x035E6BB4 MOV X1, X31
	0x035E6BB8 BL 0x33C6930
	0x035E6BBC CBZ X26, 0x35E6EE4
	0x035E6BC0 MOV X2, X0
	0x035E6BC4 LDR X8, [X26 + 0x18]
	0x035E6BC8 LDR X0, [X26 + 0x40]
	0x035E6BCC LDR X4, [X26 + 0x28]
	0x035E6BD0 ADD X3, X31, 0x10
	0x035E6BD4 MOV X1, X21
	0x035E6BD8 BLR X8
	0x035E6BDC MOV X21, X0
	0x035E6BE0 BL 0x35E1D34
	0x035E6BE4 CBZ X0, 0x35E6EE4
	0x035E6BE8 LDR X8, [X0 + 0x10]
	0x035E6BEC CMP X21, X8
	0x035E6BF0 B.NE 0x35E6EDC
	0x035E6BF4 LDR W9, [X19]
	0x035E6BF8 MOV W8, W31
	0x035E6BFC ORR W9, W9, 0x1
	0x035E6C00 STR W9, [X19]
	0x035E6C04 B 0x35E6EB8
	0x035E6C08 MOV X27, X31
	0x035E6C0C BL 0x35E1D34
	0x035E6C10 CBZ X0, 0x35E6F20
	0x035E6C14 CBZ X25, 0x35E6F24
	0x035E6C18 LDR X21, [X0 + 0x98]
	0x035E6C1C LDR W0, [X25 + 0x18]
	0x035E6C20 MOV X1, X31
	0x035E6C24 BL 0x33C6930
	0x035E6C28 ADRP X8, 0xB53000
	0x035E6C2C LDR X8, [X8 + 0x390]
	0x035E6C30 MOV X28, X0
	0x035E6C34 LDR X0, [X8]
	0x035E6C38 BL 0x1C16F10
	0x035E6C3C ADRP X8, 0xB53000
	0x035E6C40 LDR X8, [X8 + 0x388]
	0x035E6C44 MOV X29, X0
	0x035E6C48 LDR X2, [X8]
	0x035E6C4C MOV X1, X31
	0x035E6C50 BL 0x35E1FD4
	0x035E6C54 CBZ X21, 0x35E6F28
	0x035E6C58 LDR X0, [X21 + 0x40]
	0x035E6C5C LDR X8, [X21 + 0x18]
	0x035E6C60 LDR X9, [X21 + 0x28]
	0x035E6C64 LDR X21, [X31 + 0x8]
	0x035E6C68 ADD X7, X31, 0x10
	0x035E6C6C MOV X1, X24
	0x035E6C70 MOV X2, X23
	0x035E6C74 MOV X3, X27
	0x035E6C78 MOV X4, X28
	0x035E6C7C MOV X5, X29
	0x035E6C80 MOV X6, X21
	0x035E6C84 STR X9, [X31]
	0x035E6C88 BLR X8
	0x035E6C8C MOV W23, W0
	0x035E6C90 MOV X27, X31
	0x035E6C94 MOVZ W28, 0xE
	0x035E6C98 BL 0x35E1D34
	0x035E6C9C CBZ X0, 0x35E6F0C
	0x035E6CA0 LDR X8, [X0 + 0x88]
	0x035E6CA4 CBZ X8, 0x35E6F14
	0x035E6CA8 LDR X0, [X8 + 0x40]
	0x035E6CAC LDR X9, [X8 + 0x18]
	0x035E6CB0 LDR X2, [X8 + 0x28]
	0x035E6CB4 MOV X1, X26
	0x035E6CB8 BLR X9
	0x035E6CBC CBNZ X27, 0x35E6F18
	0x035E6CC0 CMP W28, 0xE
	0x035E6CC4 B.EQ 0x35E6D64
	0x035E6CC8 CBNZ W28, 0x35E6D70
	0x035E6CCC CBZ X25, 0x35E6CE4
	0x035E6CD0 LDR W8, [X25 + 0x18]
	0x035E6CD4 ADD X9, X25, 0x20
	0x035E6CD8 CMP W8, 0x0
	0x035E6CDC CSEL X26, X31, X9, EQ
	0x035E6CE0 B 0x35E6CE8
	0x035E6CE4 MOV X26, X31
	0x035E6CE8 BL 0x35E1D34
	0x035E6CEC CBZ X0, 0x35E6F2C
	0x035E6CF0 CBZ X25, 0x35E6F30
	0x035E6CF4 LDR X21, [X0 + 0x90]
	0x035E6CF8 LDR W0, [X25 + 0x18]
	0x035E6CFC MOV X1, X31
	0x035E6D00 BL 0x33C6930
	0x035E6D04 ADRP X8, 0xB53000
	0x035E6D08 LDR X8, [X8 + 0x390]
	0x035E6D0C MOV X25, X0
	0x035E6D10 LDR X0, [X8]
	0x035E6D14 BL 0x1C16F10
	0x035E6D18 ADRP X8, 0xB53000
	0x035E6D1C LDR X8, [X8 + 0x388]
	0x035E6D20 MOV X27, X0
	0x035E6D24 LDR X2, [X8]
	0x035E6D28 MOV X1, X31
	0x035E6D2C BL 0x35E1FD4
	0x035E6D30 CBZ X21, 0x35E6F34
	0x035E6D34 LDR X0, [X21 + 0x40]
	0x035E6D38 LDR X8, [X21 + 0x18]
	0x035E6D3C LDR X7, [X21 + 0x28]
	0x035E6D40 LDR X21, [X31 + 0x8]
	0x035E6D44 ADD X6, X31, 0x10
	0x035E6D48 MOV X1, X24
	0x035E6D4C MOV X2, X26
	0x035E6D50 MOV X3, X25
	0x035E6D54 MOV X4, X27
	0x035E6D58 MOV X5, X21
	0x035E6D5C BLR X8
	0x035E6D60 MOV W23, W0
	0x035E6D64 MOV X24, X31
	0x035E6D68 MOVZ W28, 0x12
	0x035E6D6C B 0x35E6D74
	0x035E6D70 MOV X24, X31
	0x035E6D74 BL 0x35E1D34
	0x035E6D78 CBZ X0, 0x35E6EE4
	0x035E6D7C LDR X8, [X0 + 0x88]
	0x035E6D80 CBZ X8, 0x35E6EE4
	0x035E6D84 LDR X9, [X8 + 0x18]
	0x035E6D88 LDR X0, [X8 + 0x40]
	0x035E6D8C LDR X2, [X8 + 0x28]
	0x035E6D90 MOV X1, X22
	0x035E6D94 BLR X9
	0x035E6D98 CBNZ X24, 0x35E6EE8
	0x035E6D9C CMP W28, 0x12
	0x035E6DA0 B.EQ 0x35E6DA8
	0x035E6DA4 CBNZ W28, 0x35E6EB8
	0x035E6DA8 LDR X0, [X20]
	0x035E6DAC CBZ X0, 0x35E6DB8
	0x035E6DB0 MOV X1, X31
	0x035E6DB4 BL 0x365883C
	0x035E6DB8 BL 0x35E1D34
	0x035E6DBC CBZ X0, 0x35E6EE4
	0x035E6DC0 LDR X8, [X0 + 0x58]
	0x035E6DC4 CBZ X8, 0x35E6EE4
	0x035E6DC8 LDR X9, [X8 + 0x18]
	0x035E6DCC LDR X0, [X8 + 0x40]
	0x035E6DD0 LDR X3, [X8 + 0x28]
	0x035E6DD4 ADD X2, X31, 0x10
	0x035E6DD8 MOV X1, X21
	0x035E6DDC BLR X9
	0x035E6DE0 ADRP X8, 0xB53000
	0x035E6DE4 LDR X8, [X8 + 0x338]
	0x035E6DE8 MOV X22, X0
	0x035E6DEC LDR X8, [X8]
	0x035E6DF0 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X22, 0xDFB000
	012 Move X20, 0xB54000
	013 Move W8, [X22+652]
	014 Move X20, [X20+824]
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xB0E000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0xB54000
	025 Move X0, [X0+824]
	026 Call 0x1C17CF4
	027 Move X0, 0xB54000
	028 Move X0, [X0+832]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+652], W8
	032 Move X0, [X20]
	033 Move [X31+8], W31
	034 Call 0x1C17F10
	035 Move X20, X0
	036 Move X1, X21
	037 Move W2, W31
	038 Call X509ChainImplUnityTls..ctor, X0, X1, X2
	039 Move X8, 0xB54000
	040 Move X8, [X8+832]
	041 Move X25, 0xB0E000
	042 Move X0, [X8]
	043 Move X25, [X25+3584]
	044 Call 0x1C17F10
	045 Move X21, X0
	046 Move X1, X20
	047 Move X2, X31
	048 Call X509Chain..ctor, X0, X1
	049 Compare X21, 0
	050 JumpIfEqual {153}
	051 Move X0, X21
	052 Move X1, X31
	053 Call X509Chain.get_ChainElements, X0
	054 Compare X0, 0
	055 JumpIfEqual {154}
	056 Move W1, W31
	057 Move X2, X31
	058 Call X509ChainElementCollection.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {157}
	061 Move X1, [X0+16]
	062 Move [X19+152], X1
	063 Move X0, X19
	064 Move X2, X21
	065 Call MobileTlsContext.ValidateCertificate, X0, X1, X2
	066 And W31, W0, 1
	067 Move W8, 8
	068 Move W26, W31
	069 Move X22, X31
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Move W23, 3
	072 Move X8, [X21]
	073 Move X1, [X25]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X21
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X21
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X22, 0
	094 JumpIfNotEqual {158}
	095 Move X21, X31
	096 Move TEMP, X26
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {102}
	100 Move W23, W31
	101 Move X22, X21
	102 Compare X20, 0
	103 JumpIfEqual {125}
	104 Move X8, [X20]
	105 Move X1, [X25]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X20
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X20
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X22, 0
	126 JumpIfNotEqual {155}
	127 Compare W23, 0
	128 JumpIfNotEqual {141}
	129 Move TEMP, 0
	130 Not TEMP
	131 Move X8, TEMP
	132 Move X9, [X19+200]
	133 Compare X9, 0
	134 JumpIfNotEqual {138}
	135 Add X9, X31, 0
	136 Move X8, [X9]
	137 Move [X19+200], X8
	138 Move TEMP, 0
	139 Not TEMP
	140 Move W24, TEMP
	141 Move W0, W24
	142 Move X20, [X31+80]
	143 Move X19, [X31+88]
	144 Move X22, [X31+64]
	145 Move X21, [X31+72]
	146 Move X24, [X31+48]
	147 Move X23, [X31+56]
	148 Move X26, [X31+32]
	149 Move X25, [X31+40]
	150 Move X30, [X31+16]
	151 Add X31, X31, 96
	152 Return X0
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Move X0, X22
	156 Call 0x1C17F18
	157 Call 0x1C17F20
	158 Move X0, X22
	159 Call 0x1C17F18
	160 Move X23, X1
	161 Move X22, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X22
	164 Call 0x3EB2AD0
	165 Move X8, [X0]
	166 Move [X31+24], X8
	167 Call 0x3EB2AE0
	168 Move X22, [X31+24]
	169 Move W24, W31
	170 Move W23, W31
	171 Move W26, 1
	172 Compare X21, 0
	173 JumpIfNotEqual {72}
	174 Move [X31+24], X31
	175 Compare X21, 0
	176 JumpIfEqual {198}
	177 Move X8, [X21]
	178 Move X1, [X25]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X21
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X21
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X8, [X31+24]
	199 Compare X8, 0
	200 JumpIfEqual {209}
	201 Move X0, [X31+24]
	202 Call 0x1C17F18
	203 Move X23, X1
	204 Move X22, X0
	205 Compare X21, 0
	206 JumpIfNotEqual {177}
	207 Move X23, X1
	208 Move X22, X0
	209 Move W24, W31
	210 Move X23, X1
	211 Move X22, X0
	212 Move X23, X1
	213 Move X22, X0
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X0, X22
	216 Call 0x3EB2AD0
	217 Move X21, [X0]
	218 Call 0x3EB2AE0
	219 Move X21, X31
	220 Compare X20, 0
	221 JumpIfEqual {243}
	222 Move X8, [X20]
	223 Move X1, [X25]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move X0, X20
	234 Move W2, W31
	235 Call 0x1C5D788
	236 NotImplemented "Instruction LDRSW not yet implemented."
	237 Add X8, X8, X9
	238 Add X0, X8, 312
	239 Move X8, [X0]
	240 Move X1, [X0+8]
	241 Move X0, X20
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Compare X21, 0
	244 JumpIfNotEqual {273}
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X0, X22
	247 Call 0x3EB2AD0
	248 Move X20, X0
	249 Move X0, 0xB0E000
	250 Move X0, [X0+2000]
	251 Call 0x1C17D08
	252 Move X8, [X20]
	253 Move X1, [X8]
	254 Call 0x1C18270
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfNotEqual {265}
	259 Move X8, [X20]
	260 Move W9, 1
	261 Move [X31+8], W9
	262 Move [X31], X8
	263 Call 0x3EB2AE0
	264 Move X8, X31
	265 Move W0, 8
	266 Call 0x3EB2AF0
	267 Move X8, [X20]
	268 Move [X0], X8
	269 Move X1, 0x8CF000
	270 Add X1, X1, 3672
	271 Move X2, X31
	272 Call 0x3EB2B00
	273 Move X0, X21
	274 Call 0x1C17F18
	275 Move X23, X1
	276 Move X22, X0
	277 Compare X20, 0
	278 JumpIfNotEqual {222}
	279 Move X22, X0
	280 Call 0x3EB2AE0
	281 Move X0, X22
	282 Call 0x1D2D690
	283 Call 0x1991590

Method: System.Void CertificateCallback(System.Void* userData, Mono.Unity.UnityTls/unitytls_tlsctx* ctx, System.Byte* cn, System.IntPtr cnLen, Mono.Unity.UnityTls/unitytls_x509name* caList, System.IntPtr caListLen, Mono.Unity.UnityTls/unitytls_x509list_ref* chain, Mono.Unity.UnityTls/unitytls_key_ref* key, Mono.Unity.UnityTls/unitytls_errorstate* errorState)

Disassembly:
	0x035E4B28 BL 0x1C16D08
	0x035E4B2C MOV X1, X0
	0x035E4B30 MOV X0, X20
	0x035E4B34 BL 0x1C16DEC
	0x035E4B38 STP X30, X19, [X31 - 0x10]!
	0x035E4B3C ADRP X0, 0xB0F000
	0x035E4B40 LDR X0, [X0 + 0xB40]
	0x035E4B44 BL 0x1C16D08
	0x035E4B48 BL 0x1C16F10
	0x035E4B4C MOV X1, X31
	0x035E4B50 MOV X19, X0
	0x035E4B54 BL 0x3380310
	0x035E4B58 ADRP X0, 0xB55000
	0x035E4B5C LDR X0, [X0 + 0x2E0]
	0x035E4B60 BL 0x1C16D08
	0x035E4B64 MOV X1, X0
	0x035E4B68 MOV X0, X19
	0x035E4B6C BL 0x1C16DEC
	0x035E4B70 MOV W0, W31
	0x035E4B74 RET
	0x035E4B78 SUB X31, X31, 0x20
	0x035E4B7C STP X30, X19, [X31 + 0x10]
	0x035E4B80 STP X31, X31, [X31]
	0x035E4B84 LDR X8, [X0 + 0x20]
	0x035E4B88 CBZ X8, 0x35E4C6C
	0x035E4B8C LDR X8, [X8 + 0x90]
	0x035E4B90 MOV X19, X0
	0x035E4B94 CBZ X8, 0x35E4BEC
	0x035E4B98 LDRB W8, [X8 + 0x48]
	0x035E4B9C CBZ W8, 0x35E4BEC
	0x035E4BA0 BL 0x35E1D34
	0x035E4BA4 CBZ X0, 0x35E4C6C
	0x035E4BA8 LDR X8, [X0 + 0x20]
	0x035E4BAC CBZ X8, 0x35E4C6C
	0x035E4BB0 LDR X9, [X8 + 0x18]
	0x035E4BB4 LDR X0, [X8 + 0x40]
	0x035E4BB8 LDR X1, [X8 + 0x28]
	0x035E4BBC BLR X9
	0x035E4BC0 STP X0, X1, [X31]
	0x035E4BC4 BL 0x35E1D34
	0x035E4BC8 CBZ X0, 0x35E4C6C
	0x035E4BCC LDR X8, [X0 + 0x100]
	0x035E4BD0 CBZ X8, 0x35E4C6C
	0x035E4BD4 LDR X1, [X19 + 0x58]
	0x035E4BD8 LDR X9, [X8 + 0x18]
	0x035E4BDC LDR X0, [X8 + 0x40]
	0x035E4BE0 LDR X3, [X8 + 0x28]
	0x035E4BE4 ADD X2, X31, 0x0
	0x035E4BE8 BLR X9
	0x035E4BEC BL 0x35E1D34

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xDFD000
	008 Move W8, [X22+653]
	009 Move X19, X7
	010 Move X20, X6
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB56000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+653], W8
	021 Move X0, X21
	022 Move X1, X31
	023 Call IntPtr.op_Explicit, X0
	024 Move X1, X31
	025 Call GCHandle.op_Explicit, X0
	026 Move [X31+24], X0
	027 Add X0, X31, 24
	028 Move X1, X31
	029 Call GCHandle.get_Target, X0
	030 Compare X0, 0
	031 JumpIfEqual {56}
	032 Move X9, 0xB56000
	033 Move X9, [X9+584]
	034 Move X8, [X0]
	035 Move X1, [X9]
	036 Move W10, [X8+304]
	037 Move W9, [X1+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X8+200]
	040 Add X8, X8, X9
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X31+64]
	044 Move X6, X20
	045 Move X7, X19
	046 Move [X31], X8
	047 Call UnityTlsContext.CertificateCallback, X0, X1, X2, X3, X4, X5, X6, X7, X8
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 64
	054 Return 
	055 Call 0x1C181E0
	056 Call 0x1C17F20

Method: System.Void CertificateCallback(Mono.Unity.UnityTls/unitytls_tlsctx* ctx, System.Byte* cn, System.IntPtr cnLen, Mono.Unity.UnityTls/unitytls_x509name* caList, System.IntPtr caListLen, Mono.Unity.UnityTls/unitytls_x509list_ref* chain, Mono.Unity.UnityTls/unitytls_key_ref* key, Mono.Unity.UnityTls/unitytls_errorstate* errorState)

Disassembly:
	0x035E6E74 MOVZ W11, 0x20
	0x035E6E78 CSEL W10, W12, W10, EQ
	0x035E6E7C ANDS W31, W23, 0x8
	0x035E6E80 CSEL W8, W8, W11, EQ
	0x035E6E84 ORR W1, W9, W8, 0x0
	0x035E6E88 STR W10, [X19]
	0x035E6E8C CBZ X21, 0x35E6EE4
	0x035E6E90 LDR X8, [X21]
	0x035E6E94 MOV X0, X21
	0x035E6E98 LDP X9, X2, [X8 + 0x1C8]
	0x035E6E9C BLR X9
	0x035E6EA0 CBZ W23, 0x35E6EAC
	0x035E6EA4 MOV W8, W31
	0x035E6EA8 B 0x35E6EB8
	0x035E6EAC LDR W8, [X31 + 0x14]
	0x035E6EB0 CMP W8, 0x0
	0x035E6EB4 CSET W8, EQ
	0x035E6EB8 LDP X20, X19, [X31 + 0x70]
	0x035E6EBC LDP X22, X21, [X31 + 0x60]
	0x035E6EC0 LDP X24, X23, [X31 + 0x50]
	0x035E6EC4 LDP X26, X25, [X31 + 0x40]
	0x035E6EC8 LDP X28, X27, [X31 + 0x30]
	0x035E6ECC LDP X29, X30, [X31 + 0x20]
	0x035E6ED0 AND W0, W8, 0x1
	0x035E6ED4 ADD X31, X31, 0x80
	0x035E6ED8 RET
	0x035E6EDC MOV W26, W31
	0x035E6EE0 B 0x35E69E8
	0x035E6EE4 BL 0x1C16F20
	0x035E6EE8 MOV X0, X24
	0x035E6EEC BL 0x1C16F18
	0x035E6EF0 BL 0x1C16F20
	0x035E6EF4 BL 0x1C16F20
	0x035E6EF8 BL 0x1C16F20
	0x035E6EFC BL 0x1C16F20
	0x035E6F00 BL 0x1C16F20
	0x035E6F04 BL 0x1C16F20
	0x035E6F08 BL 0x1C16F20
	0x035E6F0C BL 0x1C16F20
	0x035E6F10 BL 0x1C16F20
	0x035E6F14 BL 0x1C16F20
	0x035E6F18 MOV X0, X27
	0x035E6F1C BL 0x1C16F18
	0x035E6F20 BL 0x1C16F20
	0x035E6F24 BL 0x1C16F20
	0x035E6F28 BL 0x1C16F20
	0x035E6F2C BL 0x1C16F20
	0x035E6F30 BL 0x1C16F20
	0x035E6F34 BL 0x1C16F20
	0x035E6F38 BL 0x1C16F20
	0x035E6F3C BL 0x1C16F20
	0x035E6F40 BL 0x1C16F20
	0x035E6F44 BL 0x1C16F20
	0x035E6F48 B 0x35E6FA8
	0x035E6F4C B 0x35E6FA8
	0x035E6F50 B 0x35E6FA8
	0x035E6F54 B 0x35E6FB0
	0x035E6F58 B 0x35E6FB0
	0x035E6F5C B 0x35E6FC4
	0x035E6F60 B 0x35E6FC4
	0x035E6F64 B 0x35E6FC4
	0x035E6F68 B 0x35E6FC4
	0x035E6F6C B 0x35E7018
	0x035E6F70 B 0x35E7018
	0x035E6F74 B 0x35E7018
	0x035E6F78 B 0x35E7018
	0x035E6F7C B 0x35E7074
	0x035E6F80 B 0x35E7074
	0x035E6F84 B 0x35E7074
	0x035E6F88 B 0x35E7074
	0x035E6F8C B 0x35E707C
	0x035E6F90 B 0x35E707C
	0x035E6F94 B 0x35E6FA8
	0x035E6F98 B 0x35E6FA8
	0x035E6F9C B 0x35E6FA8
	0x035E6FA0 B 0x35E6FA8
	0x035E6FA4 B 0x35E6FA8
	0x035E6FA8 MOV X29, X0
	0x035E6FAC B 0x35E6FB8
	0x035E6FB0 MOV X29, X0
	0x035E6FB4 MOV X22, X31
	0x035E6FB8 MOV W28, W1
	0x035E6FBC B 0x35E70E0
	0x035E6FC0 B 0x35E6FC4
	0x035E6FC4 MOV X29, X0
	0x035E6FC8 MOV W28, W1
	0x035E6FCC CMP W1, 0x1
	0x035E6FD0 B.NE 0x35E70E4
	0x035E6FD4 MOV X0, X29
	0x035E6FD8 BL 0x3EB1AD0
	0x035E6FDC LDR X24, [X0]
	0x035E6FE0 BL 0x3EB1AE0
	0x035E6FE4 CBNZ X24, 0x35E6FF0
	0x035E6FE8 LDR X21, [X31 + 0x8]
	0x035E6FEC B 0x35E6D64
	0x035E6FF0 MOV X0, X24
	0x035E6FF4 BL 0x1C16F18
	0x035E6FF8 B 0x35E7000
	0x035E6FFC CBNZ X24, 0x35E700C
	0x035E7000 MOV X29, X0
	0x035E7004 MOV W28, W1
	0x035E7008 B 0x35E70E4
	0x035E700C MOV X0, X24
	0x035E7010 BL 0x1C16F18
	0x035E7014 B 0x35E7018
	0x035E7018 MOV X29, X0
	0x035E701C MOV W28, W1
	0x035E7020 CMP W1, 0x1
	0x035E7024 MOVZ W27, 0x1
	0x035E7028 B.NE 0x35E708C
	0x035E702C MOV X0, X29
	0x035E7030 BL 0x3EB1AD0
	0x035E7034 LDR X23, [X0]
	0x035E7038 BL 0x3EB1AE0
	0x035E703C CBNZ X23, 0x35E7050
	0x035E7040 MOV X27, X31
	0x035E7044 MOVZ W23, 0x80000000
	0x035E7048 MOVZ W28, 0xE
	0x035E704C B 0x35E70AC
	0x035E7050 MOV X0, X23
	0x035E7054 BL 0x1C16F18
	0x035E7058 B 0x35E7060
	0x035E705C CBNZ X23, 0x35E706C
	0x035E7060 MOV X29, X0
	0x035E7064 MOV W28, W1
	0x035E7068 B 0x35E708C
	0x035E706C MOV X0, X23
	0x035E7070 BL 0x1C16F18
	0x035E7074 MOV X29, X0
	0x035E7078 B 0x35E7084
	0x035E707C MOV X29, X0
	0x035E7080 MOV X26, X31
	0x035E7084 MOV W28, W1
	0x035E7088 MOVZ W27, 0x1
	0x035E708C CMP W28, W27
	0x035E7090 B.NE 0x35E70B4
	0x035E7094 MOV X0, X29
	0x035E7098 BL 0x3EB1AD0
	0x035E709C LDR X27, [X0]
	0x035E70A0 BL 0x3EB1AE0
	0x035E70A4 MOV W28, W31
	0x035E70A8 MOVZ W23, 0x80000000
	0x035E70AC LDR X21, [X31 + 0x8]
	0x035E70B0 B 0x35E6C98
	0x035E70B4 MOV X27, X31
	0x035E70B8 BL 0x35E1D34
	0x035E70BC CBZ X0, 0x35E7158
	0x035E70C0 LDR X8, [X0 + 0x88]
	0x035E70C4 CBZ X8, 0x35E715C
	0x035E70C8 LDR X0, [X8 + 0x40]
	0x035E70CC LDR X9, [X8 + 0x18]
	0x035E70D0 LDR X2, [X8 + 0x28]
	0x035E70D4 MOV X1, X26
	0x035E70D8 BLR X9
	0x035E70DC CBNZ X27, 0x35E7160
	0x035E70E0 MOVZ W23, 0x80000000
	0x035E70E4 CMP W28, 0x1
	0x035E70E8 B.EQ 0x35E7114
	0x035E70EC MOVZ W8, 0x1
	0x035E70F0 CMP W28, W8
	0x035E70F4 B.NE 0x35E7150
	0x035E70F8 MOV X0, X29
	0x035E70FC BL 0x3EB1AD0
	0x035E7100 LDR X24, [X0]
	0x035E7104 BL 0x3EB1AE0
	0x035E7108 LDR X21, [X31 + 0x8]
	0x035E710C MOV W28, W31
	0x035E7110 B 0x35E6D74
	0x035E7114 MOV X0, X29
	0x035E7118 BL 0x3EB1AD0
	0x035E711C MOV X24, X0
	0x035E7120 ADRP X0, 0xB12000
	0x035E7124 LDR X0, [X0 + 0xCC0]
	0x035E7128 BL 0x1C16D08
	0x035E712C LDR X8, [X24]
	0x035E7130 LDR X1, [X8]
	0x035E7134 BL 0x1C17270

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDFB000
	009 Move W8, [X23+654]
	010 Move X20, [X31+64]
	011 Move X21, X7
	012 Move X22, X6
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB54000
	019 Move X0, [X0+848]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+654], W8
	023 Move X8, [X19+152]
	024 Compare X8, 0
	025 JumpIfEqual {111}
	026 Move X0, X19
	027 Move X1, X31
	028 Call MobileTlsContext.SelectClientCertificate, X0, X1
	029 Move [X19+144], X0
	030 Compare X0, 0
	031 JumpIfEqual {86}
	032 Call UnityTls.get_NativeInterface
	033 Compare X0, 0
	034 JumpIfEqual {130}
	035 Move X8, [X0+136]
	036 Compare X8, 0
	037 JumpIfEqual {131}
	038 Add X24, X19, 96
	039 Move X0, [X8+64]
	040 Move X1, [X24]
	041 Move X9, [X8+24]
	042 Move X2, [X8+40]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Call UnityTls.get_NativeInterface
	045 Compare X0, 0
	046 JumpIfEqual {132}
	047 Move X8, [X0+72]
	048 Compare X8, 0
	049 JumpIfEqual {133}
	050 Add X23, X19, 104
	051 Move X0, [X8+64]
	052 Move X1, [X23]
	053 Move X9, [X8+24]
	054 Move X2, [X8+40]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X0, [X19+144]
	057 Move X1, X20
	058 Move X2, X24
	059 Move X3, X23
	060 Call UnityTlsContext.ExtractNativeKeyAndChainFromManagedCertificate, X0, X1, X2, X3
	061 Call UnityTls.get_NativeInterface
	062 Compare X0, 0
	063 JumpIfEqual {134}
	064 Move X8, [X0+88]
	065 Compare X8, 0
	066 JumpIfEqual {135}
	067 Move X1, [X24]
	068 Move X0, [X8+64]
	069 Move X9, [X8+24]
	070 Move X3, [X8+40]
	071 Move X2, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move [X22], X0
	074 Call UnityTls.get_NativeInterface
	075 Compare X0, 0
	076 JumpIfEqual {136}
	077 Move X8, [X0+48]
	078 Compare X8, 0
	079 JumpIfEqual {137}
	080 Move X1, [X23]
	081 Move X0, [X8+64]
	082 Move X9, [X8+24]
	083 Move X3, [X8+40]
	084 Move X2, X20
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Call UnityTls.get_NativeInterface
	087 Compare X0, 0
	088 JumpIfEqual {138}
	089 Move X8, [X0+16]
	090 Move [X22], X8
	091 Call UnityTls.get_NativeInterface
	092 Compare X0, 0
	093 JumpIfEqual {139}
	094 Move X0, [X0+16]
	095 Move X8, 0xB54000
	096 Move X8, [X8+848]
	097 Move [X21], X0
	098 Move X0, [X20]
	099 Move X1, [X20+8]
	100 Move X2, [X8]
	101 Move W3, 40
	102 Call Debug.CheckAndThrow, X0, X1, X2
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 Move X30, [X31+64]
	110 Return 
	111 Move X0, 0xB54000
	112 Move X0, [X0+544]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X21, X0
	116 Move X0, 0xB54000
	117 Move X0, [X0+856]
	118 Call 0x1C17D08
	119 Move X2, X0
	120 Move W1, 80
	121 Move X0, X21
	122 Move X3, X31
	123 Call TlsException..ctor, X0, X1, X2
	124 Move X0, 0xB53000
	125 Move X0, [X0+864]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X21
	129 Call 0x1C17DEC
	130 Call 0x1C17F20
	131 Call 0x1C17F20
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Call 0x1C17F20
	135 Call 0x1C17F20
	136 Call 0x1C17F20
	137 Call 0x1C17F20
	138 Call 0x1C17F20
	139 Call 0x1C17F20
	140 Move X21, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X21
	143 Call 0x3EB2AD0
	144 Move X21, X0
	145 Move X0, 0xB0D000
	146 Move X0, [X0+2000]
	147 Call 0x1C17D08
	148 Move X8, [X21]
	149 Move X1, [X8]
	150 Call 0x1C18270
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {175}
	155 Move X21, [X21]
	156 Call 0x3EB2AE0
	157 Call UnityTls.get_NativeInterface
	158 Compare X0, 0
	159 JumpIfEqual {174}
	160 Move X8, [X0+40]
	161 Compare X8, 0
	162 JumpIfEqual {174}
	163 Move X9, [X8+24]
	164 Move X0, [X8+64]
	165 Move X3, [X8+40]
	166 Move W2, 4
	167 NotImplemented "Instruction MOVK not yet implemented."
	168 Move X1, X20
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X8, [X19+200]
	171 Compare X8, 0
	172 JumpIfNotEqual {103}
	173 Move [X19+200], X21
	174 Call 0x1C17F20
	175 Move W0, 8
	176 Call 0x3EB2AF0
	177 Move X8, [X21]
	178 Move [X0], X8
	179 Move X1, 0x8CE000
	180 Add X1, X1, 3672
	181 Move X2, X31
	182 Call 0x3EB2B00
	183 Move X21, X0
	184 Call 0x3EB2AE0
	185 Move X0, X21
	186 Call 0x1D2D690
	187 Call 0x1991590

