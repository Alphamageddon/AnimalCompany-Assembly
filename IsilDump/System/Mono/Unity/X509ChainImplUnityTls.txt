Type: Mono.Unity.X509ChainImplUnityTls

Method: System.Void .ctor(Mono.Unity.UnityTls/unitytls_x509list_ref nativeCertificateChain, System.Boolean reverseOrder = False)

Disassembly:
	0x035E6DF4 BL 0x1C16F10
	0x035E6DF8 MOVZ W2, 0x1
	0x035E6DFC MOV X1, X22
	0x035E6E00 MOV X21, X0
	0x035E6E04 BL 0x35E5DF4
	0x035E6E08 ADRP X8, 0xB53000
	0x035E6E0C LDR X8, [X8 + 0x340]
	0x035E6E10 LDR X0, [X8]
	0x035E6E14 BL 0x1C16F10
	0x035E6E18 MOV X1, X21
	0x035E6E1C MOV X2, X31
	0x035E6E20 MOV X22, X0
	0x035E6E24 BL 0x3658748
	0x035E6E28 ADDS W31, W23, 0x1
	0x035E6E2C STR X22, [X20]
	0x035E6E30 B.EQ 0x35E6E44
	0x035E6E34 CBNZ W23, 0x35E6E54
	0x035E6E38 MOV W1, W31
	0x035E6E3C STR W31, [X19]
	0x035E6E40 B 0x35E6E8C
	0x035E6E44 MOVZ W8, 0x4
	0x035E6E48 STR W8, [X19]
	0x035E6E4C MOVZ W1, 0x20
	0x035E6E50 B 0x35E6E8C
	0x035E6E54 UBFM W8, W23, 0x1, 0x1F
	0x035E6E58 AND W9, W23, 0x1
	0x035E6E5C UBFM W10, W23, 0x1D, 0x1C
	0x035E6E60 AND W12, W8, 0x2
	0x035E6E64 CMP W23, 0x4
	0x035E6E68 BFM W9, W8, 0x1E, 0x0
	0x035E6E6C AND W8, W10, 0x20
	0x035E6E70 ORR W10, W12, 0x4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xDFB000
	008 Move X22, 0xB54000
	009 Move W8, [X23+661]
	010 Move X22, [X22+840]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB54000
	019 Move X0, [X0+840]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+661], W8
	023 Move X0, [X22]
	024 And W22, W21, 1
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X21, X0
	028 Call X509ChainPolicy..ctor, X0
	029 Move X0, X19
	030 Move X1, X31
	031 Move [X19+32], X21
	032 Call X509ChainImpl..ctor, X0
	033 Move [X19+16], X31
	034 Move [X19+24], X20
	035 Move [X19+48], W22
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Return 

Method: System.Boolean get_IsValid()

Disassembly:
	0x035E83D0 B 0x35E82E8
	0x035E83D4 B 0x35E82E8
	0x035E83D8 MOV X22, X1
	0x035E83DC MOV X21, X0
	0x035E83E0 BL 0x3EB1AE0
	0x035E83E4 CMP W22, 0x1
	0x035E83E8 B.NE 0x35E8484
	0x035E83EC MOV X0, X21
	0x035E83F0 BL 0x3EB1AD0
	0x035E83F4 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+24]
	004 Call UnityTls.get_NativeInterface
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move X8, [X0+16]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Call 0x1C17F20

Method: Mono.Unity.UnityTls/unitytls_x509list_ref get_NativeCertificateChain()

Disassembly:
	0x035E83F8 ADRP X0, 0xB0B000
	0x035E83FC LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection get_ChainElements()

Disassembly:
	0x035E8400 BL 0x1C16D08
	0x035E8404 LDR X8, [X20]
	0x035E8408 LDR X1, [X8]
	0x035E840C BL 0x1C17270
	0x035E8410 TBZ X0, 0x0, 0x35E845C
	0x035E8414 LDR X20, [X20]
	0x035E8418 BL 0x3EB1AE0
	0x035E841C MOVN W8, 0x1
	0x035E8420 STR W8, [X19], #0x8
	0x035E8424 ADRP X0, 0xB51000
	0x035E8428 LDR X0, [X0 + 0x3D0]
	0x035E842C BL 0x1C16D08
	0x035E8430 LDR W8, [X0 + 0xE0]
	0x035E8434 CBNZ W8, 0x35E843C
	0x035E8438 BL 0x1C16DFC
	0x035E843C ADRP X0, 0xB51000
	0x035E8440 LDR X0, [X0 + 0x440]
	0x035E8444 BL 0x1C16D08
	0x035E8448 MOV X2, X0
	0x035E844C MOV X0, X19
	0x035E8450 MOV X1, X20
	0x035E8454 BL 0x26324C8
	0x035E8458 B 0x35E8280
	0x035E845C MOVZ W0, 0x8
	0x035E8460 BL 0x3EB1AF0
	0x035E8464 LDR X8, [X20]
	0x035E8468 STR X8, [X0]
	0x035E846C ADRP X1, 0x8CC000
	0x035E8470 ADD X1, X1, 0xE58
	0x035E8474 MOV X2, X31
	0x035E8478 BL 0x3EB1B00
	0x035E847C MOV X21, X0
	0x035E8480 BL 0x3EB1AE0
	0x035E8484 MOV X0, X21
	0x035E8488 BL 0x1D2C690
	0x035E848C BL 0x1990590
	0x035E8490 STR X30, [X31 - 0x20]!
	0x035E8494 STP X20, X19, [X31 + 0x10]
	0x035E8498 MOV X19, X0
	0x035E849C MOV X0, X1
	0x035E84A0 MOV X1, X31
	0x035E84A4 BL 0x32C2380
	0x035E84A8 MOV X20, X0
	0x035E84AC ADD X0, X19, 0x40
	0x035E84B0 MOV X1, X20
	0x035E84B4 MOV X2, X31
	0x035E84B8 BL 0x1C24138
	0x035E84BC CMP X0, 0x0
	0x035E84C0 CSEL X0, X20, X0, EQ
	0x035E84C4 LDP X20, X19, [X31 + 0x10]
	0x035E84C8 LDR X30, [X31], #0x20
	0x035E84CC RET
	0x035E84D0 STR X30, [X31 - 0x30]!
	0x035E84D4 STP X22, X21, [X31 + 0x10]
	0x035E84D8 STP X20, X19, [X31 + 0x20]
	0x035E84DC ADRP X22, 0xDF8000
	0x035E84E0 ADRP X21, 0xB51000
	0x035E84E4 LDRB W8, [X22 + 0x2A2]
	0x035E84E8 LDR X21, [X21 + 0x3D0]
	0x035E84EC MOV X19, X1
	0x035E84F0 MOV X20, X0
	0x035E84F4 TBNZ X8, 0x0, 0x35E8518
	0x035E84F8 ADRP X0, 0xB51000
	0x035E84FC LDR X0, [X0 + 0x448]
	0x035E8500 BL 0x1C16CF4
	0x035E8504 ADRP X0, 0xB51000
	0x035E8508 LDR X0, [X0 + 0x3D0]
	0x035E850C BL 0x1C16CF4
	0x035E8510 MOVZ W8, 0x1
	0x035E8514 STRB W8, [X22 + 0x2A2]
	0x035E8518 LDR X0, [X21]
	0x035E851C ADRP X21, 0xB51000
	0x035E8520 LDR W8, [X0 + 0xE0]
	0x035E8524 LDR X21, [X21 + 0x448]
	0x035E8528 CBNZ W8, 0x35E8530
	0x035E852C BL 0x1C16DFC
	0x035E8530 LDR X2, [X21]
	0x035E8534 ADD X0, X20, 0x8
	0x035E8538 MOV X1, X19
	0x035E853C LDP X20, X19, [X31 + 0x20]
	0x035E8540 LDP X22, X21, [X31 + 0x10]
	0x035E8544 LDR X30, [X31], #0x30
	0x035E8548 B 0x2632228
	0x035E854C SUB X31, X31, 0x40
	0x035E8550 STR X30, [X31 + 0x20]
	0x035E8554 STP X20, X19, [X31 + 0x30]
	0x035E8558 ADRP X20, 0xDF8000
	0x035E855C LDRB W8, [X20 + 0x2A3]
	0x035E8560 MOV X19, X0
	0x035E8564 TBNZ X8, 0x0, 0x35E85E8
	0x035E8568 ADRP X0, 0xB51000
	0x035E856C LDR X0, [X0 + 0x450]
	0x035E8570 BL 0x1C16CF4
	0x035E8574 ADRP X0, 0xB51000
	0x035E8578 LDR X0, [X0 + 0x458]
	0x035E857C BL 0x1C16CF4
	0x035E8580 ADRP X0, 0xB0E000
	0x035E8584 LDR X0, [X0 + 0x280]
	0x035E8588 BL 0x1C16CF4
	0x035E858C ADRP X0, 0xB13000
	0x035E8590 LDR X0, [X0 + 0x7D8]
	0x035E8594 BL 0x1C16CF4
	0x035E8598 ADRP X0, 0xB51000
	0x035E859C LDR X0, [X0 + 0x460]
	0x035E85A0 BL 0x1C16CF4
	0x035E85A4 ADRP X0, 0xB51000
	0x035E85A8 LDR X0, [X0 + 0x468]
	0x035E85AC BL 0x1C16CF4
	0x035E85B0 ADRP X0, 0xB51000
	0x035E85B4 LDR X0, [X0 + 0x470]
	0x035E85B8 BL 0x1C16CF4
	0x035E85BC ADRP X0, 0xB12000
	0x035E85C0 LDR X0, [X0 + 0x5F0]
	0x035E85C4 BL 0x1C16CF4
	0x035E85C8 ADRP X0, 0xB0E000
	0x035E85CC LDR X0, [X0 + 0xEF8]
	0x035E85D0 BL 0x1C16CF4
	0x035E85D4 ADRP X0, 0xB51000
	0x035E85D8 LDR X0, [X0 + 0x478]
	0x035E85DC BL 0x1C16CF4
	0x035E85E0 MOVZ W8, 0x1
	0x035E85E4 STRB W8, [X20 + 0x2A3]
	0x035E85E8 STP X31, X31, [X31 + 0x10]
	0x035E85EC STP X31, X31, [X31]
	0x035E85F0 LDR W8, [X19]
	0x035E85F4 LDR X20, [X19 + 0x28]
	0x035E85F8 CBZ W8, 0x35E861C
	0x035E85FC CMP W8, 0x1
	0x035E8600 B.NE 0x35E8634
	0x035E8604 LDUR V0, [X19 + 0x48]
	0x035E8608 MOVN W8, 0x0
	0x035E860C STR V0, [X31]
	0x035E8610 STP X31, X31, [X19 + 0x48]
	0x035E8614 STR W8, [X19]
	0x035E8618 B 0x35E874C
	0x035E861C LDUR V0, [X19 + 0x38]
	0x035E8620 MOVN W8, 0x0
	0x035E8624 STR V0, [X31 + 0x1]
	0x035E8628 STP X31, X31, [X19 + 0x38]
	0x035E862C STR W8, [X19]
	0x035E8630 B 0x35E86A8
	0x035E8634 MOV W8, W31
	0x035E8638 B 0x35E875C
	0x035E863C ADRP X8, 0xB13000
	0x035E8640 LDR X8, [X8 + 0x7D8]
	0x035E8644 LDR X0, [X8]
	0x035E8648 LDR W8, [X0 + 0xE0]
	0x035E864C CBNZ W8, 0x35E8654
	0x035E8650 BL 0x1C16DFC
	0x035E8654 ADD X0, X19, 0x20
	0x035E8658 MOV X1, X31
	0x035E865C BL 0x33DDC30
	0x035E8660 CBZ X20, 0x35E8868
	0x035E8664 LDR X1, [X19 + 0x20]
	0x035E8668 MOV X0, X20
	0x035E866C BL 0x35E7FBC
	0x035E8670 CBZ X0, 0x35E886C
	0x035E8674 ADRP X8, 0xB51000
	0x035E8678 LDR X8, [X8 + 0x478]
	0x035E867C LDR X2, [X8]
	0x035E8680 MOV W1, W31
	0x035E8684 BL 0x2696BA8
	0x035E8688 ADRP X8, 0xB51000
	0x035E868C LDR X8, [X8 + 0x470]
	0x035E8690 STP X0, X1, [X31 + 0x10]
	0x035E8694 LDR X8, [X8]
	0x035E8698 ADD X0, X31, 0x10
	0x035E869C MOV X1, X8
	0x035E86A0 BL 0x2998398
	0x035E86A4 TBZ X0, 0x0, 0x35E8798
	0x035E86A8 ADRP X8, 0xB51000
	0x035E86AC LDR X8, [X8 + 0x468]
	0x035E86B0 LDR X1, [X8]
	0x035E86B4 ADD X0, X31, 0x10
	0x035E86B8 BL 0x29983E4
	0x035E86BC ANDS W31, W0, 0xFF
	0x035E86C0 B.EQ 0x35E86DC
	0x035E86C4 UBFM X8, X0, 0x20, 0x3F
	0x035E86C8 CBNZ X8, 0x35E86D8
	0x035E86CC MOVZ W8, 0x2

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xDF9000
	013 Move W8, [X20+662]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xB0C000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0xB52000
	023 Move X0, [X0+672]
	024 Call 0x1C17CF4
	025 Move X0, 0xB52000
	026 Move X0, [X0+928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+662], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call X509ChainImpl.ThrowIfContextInvalid, X0
	033 Move X20, [X19+16]
	034 Compare X20, 0
	035 JumpIfNotEqual {196}
	036 Move X25, 0xB52000
	037 Move X25, [X25+928]
	038 Move X0, [X25]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call X509ChainElementCollection..ctor, X0
	043 Move [X19+16], X20
	044 Call UnityTls.get_NativeInterface
	045 Compare X0, 0
	046 JumpIfEqual {209}
	047 Move X8, [X0+32]
	048 Compare X8, 0
	049 JumpIfEqual {209}
	050 Move X9, [X8+24]
	051 Move X0, [X8+64]
	052 Move X1, [X8+40]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move [X31], X0
	055 Move [X31+8], X1
	056 Call UnityTls.get_NativeInterface
	057 Compare X0, 0
	058 JumpIfEqual {209}
	059 Move X21, [X0+96]
	060 Move X20, [X19+24]
	061 Move W0, W31
	062 Move X1, X31
	063 Call IntPtr.op_Explicit, X0
	064 Compare X21, 0
	065 JumpIfEqual {209}
	066 Move X2, X0
	067 Move X8, [X21+24]
	068 Move X0, [X21+64]
	069 Move X4, [X21+40]
	070 Add X3, X31, 0
	071 Move X1, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X21, X0
	074 Call UnityTls.get_NativeInterface
	075 Compare X0, 0
	076 JumpIfEqual {209}
	077 Move X26, 0xB0C000
	078 Move X27, 0xB52000
	079 Move X26, [X26+1560]
	080 Move X27, [X27+672]
	081 Move W20, 1
	082 Move X8, [X0+16]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Call UnityTls.get_NativeInterface
	085 Compare X0, 0
	086 JumpIfEqual {209}
	087 Move X22, [X0+80]
	088 Move W0, W31
	089 Move X1, X31
	090 Call IntPtr.op_Explicit, X0
	091 Compare X22, 0
	092 JumpIfEqual {209}
	093 Move X3, X0
	094 Move X8, [X22+24]
	095 Move X0, [X22+64]
	096 Move X5, [X22+40]
	097 Add X4, X31, 0
	098 Move X1, X21
	099 Move X2, X31
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X1, X31
	102 Move X22, X0
	103 Call IntPtr.op_Explicit, X0
	104 Move X8, [X26]
	105 Move W1, W0
	106 Move X0, X8
	107 Call 0x1C17D6C
	108 Move X23, X0
	109 Compare X0, 0
	110 JumpIfEqual {115}
	111 Move W8, [X23+24]
	112 Compare W8, 0
	113 JumpIfEqual {115}
	114 Add X24, X23, 32
	115 Move X24, X31
	116 Call UnityTls.get_NativeInterface
	117 Compare X0, 0
	118 JumpIfEqual {209}
	119 Move X8, [X0+80]
	120 Compare X8, 0
	121 JumpIfEqual {209}
	122 Move X9, [X8+24]
	123 Move X0, [X8+64]
	124 Move X5, [X8+40]
	125 Add X4, X31, 0
	126 Move X1, X21
	127 Move X2, X24
	128 Move X3, X22
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X0, [X27]
	131 Move X21, [X19+16]
	132 Call 0x1C17F10
	133 Move X1, X23
	134 Move X2, X31
	135 Move X22, X0
	136 Call X509Certificate2..ctor, X0, X1
	137 Compare X21, 0
	138 JumpIfEqual {209}
	139 Move X0, X21
	140 Move X1, X22
	141 Move X2, X31
	142 Call X509ChainElementCollection.Add, X0, X1
	143 Call UnityTls.get_NativeInterface
	144 Compare X0, 0
	145 JumpIfEqual {209}
	146 Move X22, [X0+96]
	147 Move X21, [X19+24]
	148 Move W0, W20
	149 Move X1, X31
	150 Call IntPtr.op_Explicit, X0
	151 Compare X22, 0
	152 JumpIfEqual {209}
	153 Move X2, X0
	154 Move X8, [X22+24]
	155 Move X0, [X22+64]
	156 Move X4, [X22+40]
	157 Add X3, X31, 0
	158 Move X1, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X21, X0
	161 Add W20, W20, 1
	162 Call UnityTls.get_NativeInterface
	163 Compare X0, 0
	164 JumpIfNotEqual {82}
	165 Move W8, [X19+48]
	166 Compare W8, 0
	167 JumpIfEqual {195}
	168 Move X0, [X25]
	169 Call 0x1C17F10
	170 Move X1, X31
	171 Move X20, X0
	172 Call X509ChainElementCollection..ctor, X0
	173 Move X0, [X19+16]
	174 Compare X0, 0
	175 JumpIfEqual {209}
	176 Move X1, X31
	177 Call X509ChainElementCollection.get_Count, X0
	178 Subtract W21, W0, 1
	179 Move X0, [X19+16]
	180 Compare X0, 0
	181 JumpIfEqual {209}
	182 Move W1, W21
	183 Move X2, X31
	184 Call X509ChainElementCollection.get_Item, X0, X1
	185 Compare X0, 0
	186 JumpIfEqual {209}
	187 Compare X20, 0
	188 JumpIfEqual {209}
	189 Move X1, [X0+16]
	190 Move X0, X20
	191 Move X2, X31
	192 Call X509ChainElementCollection.Add, X0, X1
	193 Subtract W21, W21, 1
	194 Move [X19+16], X20
	195 Move X20, [X19+16]
	196 Move X0, X20
	197 Move X20, [X31+80]
	198 Move X19, [X31+88]
	199 Move X22, [X31+64]
	200 Move X21, [X31+72]
	201 Move X24, [X31+48]
	202 Move X23, [X31+56]
	203 Move X26, [X31+32]
	204 Move X25, [X31+40]
	205 Move X30, [X31+16]
	206 Move X27, [X31+24]
	207 Add X31, X31, 96
	208 Return X0
	209 Call 0x1C17F20

Method: System.Void AddStatus(System.Security.Cryptography.X509Certificates.X509ChainStatusFlags error)

Disassembly:
	0x035E86D0 STR W8, [X19 + 0x30]
	0x035E86D4 B 0x35E86DC
	0x035E86D8 TBNZ X0, 0x0, 0x35E8878
	0x035E86DC LDR W1, [X19 + 0x30]
	0x035E86E0 CMP W1, 0x2
	0x035E86E4 B.HI 0x35E8834
	0x035E86E8 CBZ X20, 0x35E8830
	0x035E86EC LDR X8, [X20]
	0x035E86F0 LDP X9, X2, [X8 + 0x178]
	0x035E86F4 MOV X0, X20
	0x035E86F8 BLR X9
	0x035E86FC STR W0, [X19 + 0x34]
	0x035E8700 ADD X0, X20, 0x28
	0x035E8704 MOV W1, W31
	0x035E8708 MOV X2, X31
	0x035E870C BL 0x33E9064
	0x035E8710 CBZ W0, 0x35E8758
	0x035E8714 LDR X0, [X20 + 0x10]
	0x035E8718 CBZ X0, 0x35E8874
	0x035E871C LDRB W1, [X20 + 0x18]
	0x035E8720 LDR X2, [X19 + 0x20]
	0x035E8724 BL 0x35E8BFC
	0x035E8728 CBZ X0, 0x35E8870
	0x035E872C MOV W1, W31
	0x035E8730 MOV X2, X31
	0x035E8734 BL 0x33ED3A0
	0x035E8738 STP X0, X1, [X31]
	0x035E873C ADD X0, X31, 0x0
	0x035E8740 MOV X1, X31
	0x035E8744 BL 0x32C40D4
	0x035E8748 TBZ X0, 0x0, 0x35E87DC
	0x035E874C ADD X0, X31, 0x0
	0x035E8750 MOV X1, X31
	0x035E8754 BL 0x32C40F0
	0x035E8758 LDR W8, [X19 + 0x34]
	0x035E875C CMP W8, 0x3
	0x035E8760 STR W8, [X19 + 0x30]
	0x035E8764 B.NE 0x35E863C
	0x035E8768 MOVN W8, 0x1
	0x035E876C STR W8, [X19], #0x8
	0x035E8770 ADRP X8, 0xB0E000
	0x035E8774 LDR X8, [X8 + 0x280]
	0x035E8778 LDR X0, [X8]
	0x035E877C LDR W8, [X0 + 0xE0]
	0x035E8780 CBNZ W8, 0x35E8788
	0x035E8784 BL 0x1C16DFC
	0x035E8788 MOV X0, X19
	0x035E878C MOV X1, X31
	0x035E8790 BL 0x32C4864
	0x035E8794 B 0x35E8820
	0x035E8798 STR W31, [X19]
	0x035E879C LDR V0, [X31 + 0x1]
	0x035E87A0 ADRP X8, 0xB0E000
	0x035E87A4 STUR V0, [X19 + 0x38]
	0x035E87A8 LDR X8, [X8 + 0x280]
	0x035E87AC LDR X0, [X8]
	0x035E87B0 LDR W8, [X0 + 0xE0]
	0x035E87B4 CBNZ W8, 0x35E87BC
	0x035E87B8 BL 0x1C16DFC
	0x035E87BC ADRP X8, 0xB51000
	0x035E87C0 LDR X8, [X8 + 0x450]
	0x035E87C4 ADD X0, X19, 0x8
	0x035E87C8 LDR X3, [X8]
	0x035E87CC ADD X1, X31, 0x10
	0x035E87D0 MOV X2, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xDF9000
	007 Move W8, [X19+663]
	008 Move W20, W1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB52000
	015 Move X0, [X0+936]
	016 Call 0x1C17CF4
	017 Move X0, 0xB52000
	018 Move X0, [X0+944]
	019 Call 0x1C17CF4
	020 Move X0, 0xB52000
	021 Move X0, [X0+952]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+663], W8
	025 Move X19, [X21+40]
	026 Compare X19, 0
	027 JumpIfNotEqual {38}
	028 Move X8, 0xB52000
	029 Move X8, [X8+952]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X8, 0xB52000
	033 Move X8, [X8+944]
	034 Move X19, X0
	035 Move X1, [X8]
	036 Call List`1<X509ChainStatus>..ctor, X0
	037 Move [X21+40], X19
	038 Add X0, X31, 0
	039 Move W1, W20
	040 Move X2, X31
	041 Move [X31], X31
	042 Move [X31+8], X31
	043 Call X509ChainStatus..ctor, X0, X1
	044 Compare X19, 0
	045 JumpIfEqual {76}
	046 Move X9, 0xB52000
	047 Move X9, [X9+936]
	048 Move W10, [X19+28]
	049 Move X1, [X31]
	050 Move X2, [X31+8]
	051 Move X8, [X19+16]
	052 Move X9, [X9]
	053 Add W10, W10, 1
	054 Move [X19+28], W10
	055 Compare X8, 0
	056 JumpIfEqual {76}
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Move W11, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add W9, W10, 1
	061 Add X8, X8, X10
	062 Move [X19+24], W9
	063 Move [X8+32], X1
	064 Move [X8+40], X2
	065 Move X8, [X9+32]
	066 Move X0, X19
	067 Move X8, [X8+192]
	068 Move X3, [X8+112]
	069 Call List`1<X509ChainStatus>.AddWithResize, X0, X1
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X30, [X31+16]
	073 Move X21, [X31+24]
	074 Add X31, X31, 48
	075 Return 
	076 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509ChainPolicy get_ChainPolicy()

Disassembly:
	0x035E87D4 BL 0x2185564
	0x035E87D8 B 0x35E8820

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Boolean Build(System.Security.Cryptography.X509Certificates.X509Certificate2 certificate)

Disassembly:
	0x035E87DC MOVZ W8, 0x1
	0x035E87E0 STR W8, [X19]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void Reset()

Disassembly:
	0x035E87E4 LDR V0, [X31]
	0x035E87E8 ADRP X8, 0xB0E000
	0x035E87EC STUR V0, [X19 + 0x48]
	0x035E87F0 LDR X8, [X8 + 0x280]
	0x035E87F4 LDR X0, [X8]
	0x035E87F8 LDR W8, [X0 + 0xE0]
	0x035E87FC CBNZ W8, 0x35E8804
	0x035E8800 BL 0x1C16DFC
	0x035E8804 ADRP X8, 0xB51000
	0x035E8808 LDR X8, [X8 + 0x458]
	0x035E880C ADD X0, X19, 0x8
	0x035E8810 LDR X3, [X8]
	0x035E8814 ADD X1, X31, 0x0
	0x035E8818 MOV X2, X19
	0x035E881C BL 0x218BA28
	0x035E8820 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {18}
	006 Move X19, X0
	007 Call UnityTls.get_NativeInterface
	008 Compare X0, 0
	009 JumpIfEqual {21}
	010 Move X8, [X0+16]
	011 Move X0, [X19+16]
	012 Move [X19+24], X8
	013 Compare X0, 0
	014 JumpIfEqual {21}
	015 Move X1, X31
	016 Call X509ChainElementCollection.Clear, X0
	017 Move [X19+16], X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x035E8824 LDR X30, [X31 + 0x20]
	0x035E8828 ADD X31, X31, 0x40
	0x035E882C RET
	0x035E8830 BL 0x1C16F20
	0x035E8834 ADRP X0, 0xB0B000
	0x035E8838 LDR X0, [X0 + 0x5B0]
	0x035E883C BL 0x1C16D08
	0x035E8840 BL 0x1C16F10
	0x035E8844 MOV X20, X0
	0x035E8848 MOV X1, X31
	0x035E884C BL 0x337DEC0
	0x035E8850 ADRP X0, 0xB51000
	0x035E8854 LDR X0, [X0 + 0x480]
	0x035E8858 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move W20, W1
	006 Move X19, X0
	007 Move X9, [X8+472]
	008 Move X8, [X8+480]
	009 Move X1, X8
	010 NotImplemented "Instruction BLR not yet implemented."
	011 And W1, W20, 1
	012 Move X0, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X2, X31
	016 Move X30, [X31+32]
	017 Call X509ChainImpl.Dispose, X0, X1
	018 Return 

