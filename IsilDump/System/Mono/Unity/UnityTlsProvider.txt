Type: Mono.Unity.UnityTlsProvider

Method: System.String get_Name()

Disassembly:
	0x035E7700 LDR X0, [X0 + 0x3B0]
	0x035E7704 BL 0x1C16CF4
	0x035E7708 ADRP X0, 0xB52000
	0x035E770C LDR X0, [X0 + 0x3B8]
	0x035E7710 BL 0x1C16CF4
	0x035E7714 MOVZ W8, 0x1
	0x035E7718 STRB W8, [X19 + 0x297]
	0x035E771C LDR X19, [X21 + 0x28]
	0x035E7720 CBNZ X19, 0x35E774C
	0x035E7724 ADRP X8, 0xB52000
	0x035E7728 LDR X8, [X8 + 0x3B8]
	0x035E772C LDR X0, [X8]
	0x035E7730 BL 0x1C16F10
	0x035E7734 ADRP X8, 0xB52000
	0x035E7738 LDR X8, [X8 + 0x3B0]
	0x035E773C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDFA000
	005 Move X20, 0xB53000
	006 Move W8, [X19+655]
	007 Move X20, [X20+880]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB53000
	013 Move X0, [X0+880]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+655], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Guid get_ID()

Disassembly:
	0x035E7740 LDR X1, [X8]
	0x035E7744 BL 0x30D6964
	0x035E7748 STR X19, [X21 + 0x28]
	0x035E774C ADD X0, X31, 0x0
	0x035E7750 MOV W1, W20
	0x035E7754 MOV X2, X31
	0x035E7758 STP X31, X31, [X31]
	0x035E775C BL 0x365A050
	0x035E7760 CBZ X19, 0x35E77D0
	0x035E7764 ADRP X9, 0xB52000
	0x035E7768 LDR X9, [X9 + 0x3A8]
	0x035E776C LDR W10, [X19 + 0x1C]
	0x035E7770 LDP X1, X2, [X31]
	0x035E7774 LDR X8, [X19 + 0x10]
	0x035E7778 LDR X9, [X9]
	0x035E777C ADD W10, W10, 0x1
	0x035E7780 STR W10, [X19 + 0x1C]
	0x035E7784 CBZ X8, 0x35E77D0
	0x035E7788 LDRSW X10, [X19 + 0x18]
	0x035E778C LDR W11, [X8 + 0x18]
	0x035E7790 CMP W10, W11
	0x035E7794 B.CS 0x35E77AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDFA000
	005 Move X19, 0xB53000
	006 Move W8, [X20+656]
	007 Move X19, [X19+888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB53000
	013 Move X0, [X0+888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+656], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+40]
	027 Move X1, [X8+48]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Boolean get_SupportsSslStream()

Disassembly:
	0x035E7798 ADD W9, W10, 0x1
	0x035E779C ADD X8, X8, X10, 0x4, LSL

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_SupportsMonoExtensions()

Disassembly:
	0x035E77A0 STR W9, [X19 + 0x18]
	0x035E77A4 STP X1, X2, [X8 + 0x20]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_SupportsConnectionInfo()

Disassembly:
	0x035E77A8 B 0x35E77C0
	0x035E77AC LDR X8, [X9 + 0x20]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_SupportsCleanShutdown()

Disassembly:
	0x035E77B0 MOV X0, X19
	0x035E77B4 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Security.Authentication.SslProtocols get_SupportedProtocols()

Disassembly:
	0x035E77B8 LDR X3, [X8 + 0x70]
	0x035E77BC BL 0x30D7170

ISIL:
	001 Move W0, 4032
	002 Return X0

Method: Mono.Net.Security.MobileAuthenticatedStream CreateSslStream(System.Net.Security.SslStream sslStream, System.IO.Stream innerStream, System.Boolean leaveInnerStreamOpen, Mono.Security.Interface.MonoTlsSettings settings)

Disassembly:
	0x035E77C0 LDP X20, X19, [X31 + 0x20]
	0x035E77C4 LDP X30, X21, [X31 + 0x10]
	0x035E77C8 ADD X31, X31, 0x30
	0x035E77CC RET
	0x035E77D0 BL 0x1C16F20
	0x035E77D4 LDR X0, [X0 + 0x20]
	0x035E77D8 RET
	0x035E77DC MOV W0, W31
	0x035E77E0 RET
	0x035E77E4 STP X30, X19, [X31 - 0x10]!
	0x035E77E8 LDR X8, [X0 + 0x10]
	0x035E77EC CBZ X8, 0x35E7818
	0x035E77F0 MOV X19, X0
	0x035E77F4 BL 0x35E1D34
	0x035E77F8 CBZ X0, 0x35E7820
	0x035E77FC LDR X8, [X0 + 0x10]
	0x035E7800 LDR X0, [X19 + 0x10]
	0x035E7804 STR X8, [X19 + 0x18]
	0x035E7808 CBZ X0, 0x35E7820
	0x035E780C MOV X1, X31
	0x035E7810 BL 0x3659244
	0x035E7814 STR X31, [X19 + 0x10]
	0x035E7818 LDP X30, X19, [X31], #0x10
	0x035E781C RET
	0x035E7820 BL 0x1C16F20
	0x035E7824 STR X30, [X31 - 0x20]!
	0x035E7828 STP X20, X19, [X31 + 0x10]
	0x035E782C LDR X8, [X0]
	0x035E7830 MOV W20, W1
	0x035E7834 MOV X19, X0
	0x035E7838 LDP X9, X8, [X8 + 0x1D8]
	0x035E783C MOV X1, X8
	0x035E7840 BLR X9
	0x035E7844 AND W1, W20, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDFA000
	010 Move X25, 0xB53000
	011 Move W8, [X24+657]
	012 Move X25, [X25+896]
	013 Move X19, X4
	014 Move W23, W3
	015 Move X22, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xB53000
	023 Move X0, [X0+896]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+657], W8
	027 Move X0, [X25]
	028 Call 0x1C17F10
	029 And W2, W23, 1
	030 Move X1, X22
	031 Move X3, X21
	032 Move X4, X19
	033 Move X5, X20
	034 Move X24, X0
	035 Call UnityTlsStream..ctor, X0, X1, X2, X3, X4, X5
	036 Move X0, X24
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]
	044 Move X25, [X31+72]
	045 Return X0

Method: Mono.Unity.UnityTls/unitytls_x509verify_result x509verify_callback(System.Void* userData, Mono.Unity.UnityTls/unitytls_x509_ref cert, Mono.Unity.UnityTls/unitytls_x509verify_result result, Mono.Unity.UnityTls/unitytls_errorstate* errorState)

Disassembly:
	0x035E769C B.PL 0x35E766C
	0x035E76A0 STR X20, [X19 + 0x10]
	0x035E76A4 B 0x35E76AC
	0x035E76A8 LDR X20, [X19 + 0x10]
	0x035E76AC MOV X0, X20
	0x035E76B0 LDP X20, X19, [X31 + 0x50]
	0x035E76B4 LDP X22, X21, [X31 + 0x40]
	0x035E76B8 LDP X24, X23, [X31 + 0x30]
	0x035E76BC LDP X26, X25, [X31 + 0x20]
	0x035E76C0 LDP X30, X27, [X31 + 0x10]
	0x035E76C4 ADD X31, X31, 0x60
	0x035E76C8 RET
	0x035E76CC BL 0x1C16F20
	0x035E76D0 SUB X31, X31, 0x30
	0x035E76D4 STP X30, X21, [X31 + 0x10]
	0x035E76D8 STP X20, X19, [X31 + 0x20]
	0x035E76DC ADRP X19, 0xDF9000
	0x035E76E0 LDRB W8, [X19 + 0x297]
	0x035E76E4 MOV W20, W1
	0x035E76E8 MOV X21, X0
	0x035E76EC TBNZ X8, 0x0, 0x35E771C
	0x035E76F0 ADRP X0, 0xB52000
	0x035E76F4 LDR X0, [X0 + 0x3A8]
	0x035E76F8 BL 0x1C16CF4
	0x035E76FC ADRP X0, 0xB52000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W2
	007 Compare X0, 0
	008 JumpIfEqual {25}
	009 Move X20, X3
	010 Move X21, X1
	011 Move X22, X0
	012 Call UnityTls.get_NativeInterface
	013 Compare X0, 0
	014 JumpIfEqual {32}
	015 Move X8, [X0+112]
	016 Compare X8, 0
	017 JumpIfEqual {32}
	018 Move X9, [X8+24]
	019 Move X0, [X8+64]
	020 Move X4, [X8+40]
	021 Move X1, X22
	022 Move X2, X21
	023 Move X3, X20
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move W0, W19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Boolean ValidateCertificate(Mono.Net.Security.ChainValidationHelper validator, System.String targetHost, System.Boolean serverMode, System.Security.Cryptography.X509Certificates.X509CertificateCollection certificates, System.Boolean wantsChain, ref System.Security.Cryptography.X509Certificates.X509Chain chain, ref System.Net.Security.SslPolicyErrors errors, ref System.Int32 status11)

Disassembly:
	0x035E78DC LDP X20, X19, [X31 + 0x20]
	0x035E78E0 LDP X22, X21, [X31 + 0x10]
	0x035E78E4 LDR X30, [X31], #0x30
	0x035E78E8 RET
	0x035E78EC ADRP X0, 0xB14000
	0x035E78F0 LDR X0, [X0 + 0x760]
	0x035E78F4 BL 0x1C16D08
	0x035E78F8 BL 0x1C16F10
	0x035E78FC MOV X19, X0
	0x035E7900 ADRP X0, 0xB37000
	0x035E7904 LDR X0, [X0 + 0xF90]
	0x035E7908 B 0x35E795C
	0x035E790C ADRP X0, 0xB11000
	0x035E7910 LDR X0, [X0 + 0x528]
	0x035E7914 BL 0x1C16D08
	0x035E7918 BL 0x1C16F10
	0x035E791C MOV X19, X0
	0x035E7920 ADRP X0, 0xB37000
	0x035E7924 LDR X0, [X0 + 0xF48]
	0x035E7928 BL 0x1C16D08
	0x035E792C MOV X1, X0
	0x035E7930 MOV X0, X19
	0x035E7934 MOV X2, X31
	0x035E7938 BL 0x330E100
	0x035E793C B 0x35E7970
	0x035E7940 ADRP X0, 0xB14000
	0x035E7944 LDR X0, [X0 + 0x760]
	0x035E7948 BL 0x1C16D08
	0x035E794C BL 0x1C16F10
	0x035E7950 MOV X19, X0
	0x035E7954 ADRP X0, 0xB3B000
	0x035E7958 LDR X0, [X0 + 0xD90]
	0x035E795C BL 0x1C16D08
	0x035E7960 MOV X1, X0
	0x035E7964 MOV X0, X19
	0x035E7968 MOV X2, X31
	0x035E796C BL 0x3316014
	0x035E7970 ADRP X0, 0xB52000
	0x035E7974 LDR X0, [X0 + 0x3C0]
	0x035E7978 BL 0x1C16D08
	0x035E797C MOV X1, X0
	0x035E7980 MOV X0, X19
	0x035E7984 BL 0x1C16DEC
	0x035E7988 STR X30, [X31 - 0x30]!
	0x035E798C STP X22, X21, [X31 + 0x10]
	0x035E7990 STP X20, X19, [X31 + 0x20]
	0x035E7994 ADRP X20, 0xDF9000
	0x035E7998 ADRP X22, 0xB0C000
	0x035E799C ADRP X21, 0xB52000
	0x035E79A0 LDRB W8, [X20 + 0x298]
	0x035E79A4 LDR X22, [X22 + 0x758]
	0x035E79A8 LDR X21, [X21 + 0x3C8]
	0x035E79AC MOV X19, X0
	0x035E79B0 TBNZ X8, 0x0, 0x35E79D4
	0x035E79B4 ADRP X0, 0xB0C000
	0x035E79B8 LDR X0, [X0 + 0x758]
	0x035E79BC BL 0x1C16CF4
	0x035E79C0 ADRP X0, 0xB52000
	0x035E79C4 LDR X0, [X0 + 0x3C8]
	0x035E79C8 BL 0x1C16CF4
	0x035E79CC MOVZ W8, 0x1
	0x035E79D0 STRB W8, [X20 + 0x298]
	0x035E79D4 LDR W8, [X19 + 0x18]
	0x035E79D8 LDR X0, [X22]
	0x035E79DC ADD X1, X31, 0xC
	0x035E79E0 STR W8, [X31 + 0xC]
	0x035E79E4 BL 0x1C16E04
	0x035E79E8 MOV X20, X0
	0x035E79EC LDR W8, [X19 + 0x1C]
	0x035E79F0 LDR X0, [X22]
	0x035E79F4 ADD X1, X31, 0x8
	0x035E79F8 STR W8, [X31 + 0x8]
	0x035E79FC BL 0x1C16E04
	0x035E7A00 LDR X8, [X21]
	0x035E7A04 MOV X2, X0
	0x035E7A08 MOV X1, X20
	0x035E7A0C MOV X3, X31
	0x035E7A10 MOV X0, X8
	0x035E7A14 BL 0x3227BD4
	0x035E7A18 LDP X20, X19, [X31 + 0x20]
	0x035E7A1C LDP X22, X21, [X31 + 0x10]
	0x035E7A20 LDR X30, [X31], #0x30
	0x035E7A24 RET
	0x035E7A28 STR X30, [X31 - 0x30]!
	0x035E7A2C STP X22, X21, [X31 + 0x10]
	0x035E7A30 STP X20, X19, [X31 + 0x20]
	0x035E7A34 ADRP X21, 0xDF9000
	0x035E7A38 ADRP X22, 0xB0C000
	0x035E7A3C LDRB W8, [X21 + 0x299]
	0x035E7A40 LDR X22, [X22 + 0x618]
	0x035E7A44 MOV W19, W1
	0x035E7A48 MOV X20, X0
	0x035E7A4C TBNZ X8, 0x0, 0x35E7A64
	0x035E7A50 ADRP X0, 0xB0C000
	0x035E7A54 LDR X0, [X0 + 0x618]
	0x035E7A58 BL 0x1C16CF4
	0x035E7A5C MOVZ W8, 0x1
	0x035E7A60 STRB W8, [X21 + 0x299]
	0x035E7A64 LDR X0, [X22]
	0x035E7A68 MOV W1, W19
	0x035E7A6C BL 0x1C16D6C
	0x035E7A70 MOV X1, X0
	0x035E7A74 MOV X0, X20
	0x035E7A78 MOV W2, W31
	0x035E7A7C MOV W3, W31
	0x035E7A80 BL 0x35E7890
	0x035E7A84 STR W19, [X20 + 0x28]
	0x035E7A88 LDP X20, X19, [X31 + 0x20]
	0x035E7A8C LDP X22, X21, [X31 + 0x10]
	0x035E7A90 LDR X30, [X31], #0x30
	0x035E7A94 RET
	0x035E7A98 STP X30, X21, [X31 - 0x20]!
	0x035E7A9C STP X20, X19, [X31 + 0x10]
	0x035E7AA0 ADRP X21, 0xDF9000
	0x035E7AA4 ADRP X20, 0xB0C000
	0x035E7AA8 LDRB W8, [X21 + 0x29A]
	0x035E7AAC LDR X20, [X20 + 0x618]
	0x035E7AB0 MOV X19, X0
	0x035E7AB4 TBNZ X8, 0x0, 0x35E7ACC
	0x035E7AB8 ADRP X0, 0xB0C000
	0x035E7ABC LDR X0, [X0 + 0x618]
	0x035E7AC0 BL 0x1C16CF4
	0x035E7AC4 MOVZ W8, 0x1
	0x035E7AC8 STRB W8, [X21 + 0x29A]
	0x035E7ACC STR X31, [X19 + 0x18]
	0x035E7AD0 STR W31, [X19 + 0x20]
	0x035E7AD4 LDR W1, [X19 + 0x28]
	0x035E7AD8 LDR X0, [X20]
	0x035E7ADC BL 0x1C16D6C
	0x035E7AE0 STR X0, [X19 + 0x10]
	0x035E7AE4 STRB W31, [X19 + 0x24]
	0x035E7AE8 LDP X20, X19, [X31 + 0x10]
	0x035E7AEC LDP X30, X21, [X31], #0x20
	0x035E7AF0 RET
	0x035E7AF4 STP X30, X21, [X31 - 0x20]!
	0x035E7AF8 STP X20, X19, [X31 + 0x10]
	0x035E7AFC ADRP X21, 0xDF9000
	0x035E7B00 LDRB W8, [X21 + 0x29B]
	0x035E7B04 MOV W20, W1
	0x035E7B08 MOV X19, X0
	0x035E7B0C TBNZ X8, 0x0, 0x35E7B24
	0x035E7B10 ADRP X0, 0xB0C000
	0x035E7B14 LDR X0, [X0 + 0x618]
	0x035E7B18 BL 0x1C16CF4
	0x035E7B1C MOVZ W8, 0x1
	0x035E7B20 STRB W8, [X21 + 0x29B]
	0x035E7B24 LDR X8, [X19 + 0x10]
	0x035E7B28 CBZ X8, 0x35E7BA4
	0x035E7B2C LDP W10, W11, [X19 + 0x18]
	0x035E7B30 LDR W8, [X8 + 0x18]
	0x035E7B34 ADD W9, W11, W10
	0x035E7B38 SUB W9, W8, W9
	0x035E7B3C CMP W9, W20
	0x035E7B40 B.GE 0x35E7B98
	0x035E7B44 ADRP X12, 0xB0C000
	0x035E7B48 LDR X12, [X12 + 0x618]
	0x035E7B4C ORR W10, W10, W11, 0x0
	0x035E7B50 LDR X0, [X12]
	0x035E7B54 CBZ W10, 0x35E7B8C
	0x035E7B58 SUB W9, W20, W9
	0x035E7B5C ADD W1, W9, W8
	0x035E7B60 BL 0x1C16D6C
	0x035E7B64 LDR X8, [X19 + 0x10]
	0x035E7B68 CBZ X8, 0x35E7BA4
	0x035E7B6C MOV X20, X0
	0x035E7B70 MOV X0, X8
	0x035E7B74 MOV X1, X20
	0x035E7B78 MOV W2, W31
	0x035E7B7C MOV X3, X31
	0x035E7B80 BL 0x339FC34
	0x035E7B84 STR X20, [X19 + 0x10]
	0x035E7B88 B 0x35E7B98
	0x035E7B8C MOV W1, W20
	0x035E7B90 BL 0x1C16D6C
	0x035E7B94 STR X0, [X19 + 0x10]
	0x035E7B98 LDP X20, X19, [X31 + 0x10]
	0x035E7B9C LDP X30, X21, [X31], #0x20
	0x035E7BA0 RET
	0x035E7BA4 BL 0x1C16F20
	0x035E7BA8 STR X30, [X31 - 0x30]!
	0x035E7BAC STP X22, X21, [X31 + 0x10]
	0x035E7BB0 STP X20, X19, [X31 + 0x20]
	0x035E7BB4 MOV X21, X1
	0x035E7BB8 MOV W1, W3
	0x035E7BBC MOV W19, W3
	0x035E7BC0 MOV W20, W2
	0x035E7BC4 MOV X22, X0
	0x035E7BC8 BL 0x35E7AF4
	0x035E7BCC LDP W8, W9, [X22 + 0x18]
	0x035E7BD0 LDR X2, [X22 + 0x10]
	0x035E7BD4 MOV X0, X21
	0x035E7BD8 MOV W1, W20
	0x035E7BDC ADD W3, W9, W8
	0x035E7BE0 MOV W4, W19
	0x035E7BE4 MOV X5, X31
	0x035E7BE8 BL 0x33A8A9C
	0x035E7BEC LDR W8, [X22 + 0x1C]
	0x035E7BF0 ADD W8, W8, W19
	0x035E7BF4 STR W8, [X22 + 0x1C]
	0x035E7BF8 LDP X20, X19, [X31 + 0x20]
	0x035E7BFC LDP X22, X21, [X31 + 0x10]
	0x035E7C00 LDR X30, [X31], #0x30
	0x035E7C04 RET
	0x035E7C08 LDR W0, [X0 + 0x10]
	0x035E7C0C RET
	0x035E7C10 LDR X0, [X0 + 0x18]
	0x035E7C14 RET
	0x035E7C18 STR X30, [X31 - 0x20]!
	0x035E7C1C STP X20, X19, [X31 + 0x10]
	0x035E7C20 MOV W19, W1
	0x035E7C24 MOV X1, X31
	0x035E7C28 MOV X20, X0
	0x035E7C2C BL 0x33BDD8C
	0x035E7C30 STR W19, [X20 + 0x10]
	0x035E7C34 LDP X20, X19, [X31 + 0x10]
	0x035E7C38 LDR X30, [X31], #0x20
	0x035E7C3C RET
	0x035E7C40 STR X30, [X31 - 0x20]!
	0x035E7C44 STP X20, X19, [X31 + 0x10]
	0x035E7C48 MOV X19, X1
	0x035E7C4C MOV X1, X31
	0x035E7C50 MOV X20, X0
	0x035E7C54 BL 0x33BDD8C
	0x035E7C58 STR X19, [X20 + 0x18]
	0x035E7C5C LDP X20, X19, [X31 + 0x10]
	0x035E7C60 LDR X30, [X31], #0x20
	0x035E7C64 RET
	0x035E7C68 LDR X0, [X0 + 0x10]
	0x035E7C6C RET
	0x035E7C70 LDRB W0, [X0 + 0x18]
	0x035E7C74 RET
	0x035E7C78 STR X30, [X31 - 0x10]!
	0x035E7C7C MOV X1, X31
	0x035E7C80 BL 0x33BE520
	0x035E7C84 CBZ X0, 0x35E7C98
	0x035E7C88 LDR X8, [X0]
	0x035E7C8C LDP X2, X1, [X8 + 0x1A8]
	0x035E7C90 LDR X30, [X31], #0x10
	0x035E7C94 BR X2
	0x035E7C98 BL 0x1C16F20
	0x035E7C9C LDR W0, [X0 + 0x1C]
	0x035E7CA0 RET
	0x035E7CA4 STR W1, [X0 + 0x1C]
	0x035E7CA8 RET
	0x035E7CAC STP X30, X23, [X31 - 0x30]!
	0x035E7CB0 STP X22, X21, [X31 + 0x10]
	0x035E7CB4 STP X20, X19, [X31 + 0x20]
	0x035E7CB8 ADRP X23, 0xDF9000
	0x035E7CBC ADRP X22, 0xB12000
	0x035E7CC0 LDRB W8, [X23 + 0x29C]
	0x035E7CC4 LDR X22, [X22 + 0xCC0]
	0x035E7CC8 MOV W21, W2
	0x035E7CCC MOV X20, X1
	0x035E7CD0 MOV X19, X0
	0x035E7CD4 TBNZ X8, 0x0, 0x35E7CEC
	0x035E7CD8 ADRP X0, 0xB12000
	0x035E7CDC LDR X0, [X0 + 0xCC0]
	0x035E7CE0 BL 0x1C16CF4
	0x035E7CE4 MOVZ W8, 0x1
	0x035E7CE8 STRB W8, [X23 + 0x29C]
	0x035E7CEC LDR X0, [X22]
	0x035E7CF0 AND W22, W21, 0x1
	0x035E7CF4 BL 0x1C16F10
	0x035E7CF8 MOV X1, X31
	0x035E7CFC MOV X21, X0
	0x035E7D00 BL 0x33BDD8C
	0x035E7D04 MOV X0, X19
	0x035E7D08 MOV X1, X31
	0x035E7D0C STR X21, [X19 + 0x30]
	0x035E7D10 BL 0x33BDD8C
	0x035E7D14 STR X20, [X19 + 0x10]
	0x035E7D18 STRB W22, [X19 + 0x18]
	0x035E7D1C LDP X20, X19, [X31 + 0x20]
	0x035E7D20 LDP X22, X21, [X31 + 0x10]
	0x035E7D24 LDP X30, X23, [X31], #0x30
	0x035E7D28 RET
	0x035E7D2C STR X30, [X31 - 0x30]!
	0x035E7D30 STP X22, X21, [X31 + 0x10]
	0x035E7D34 STP X20, X19, [X31 + 0x20]
	0x035E7D38 LDR X19, [X0 + 0x30]
	0x035E7D3C MOV W22, W1
	0x035E7D40 MOV X21, X0
	0x035E7D44 STRB W31, [X31 + 0xC]
	0x035E7D48 ADD X1, X31, 0xC
	0x035E7D4C MOV X0, X19
	0x035E7D50 MOV X2, X31
	0x035E7D54 BL 0x33DE64C
	0x035E7D58 LDR W8, [X21 + 0x24]
	0x035E7D5C MOV X20, X31
	0x035E7D60 ADD W8, W8, W22
	0x035E7D64 STR W8, [X21 + 0x24]
	0x035E7D68 LDRB W8, [X31 + 0xC]
	0x035E7D6C CBZ W8, 0x35E7D7C
	0x035E7D70 MOV X0, X19
	0x035E7D74 MOV X1, X31
	0x035E7D78 BL 0x33E14E4
	0x035E7D7C CBNZ X20, 0x35E7D90
	0x035E7D80 LDP X20, X19, [X31 + 0x20]
	0x035E7D84 LDP X22, X21, [X31 + 0x10]
	0x035E7D88 LDR X30, [X31], #0x30
	0x035E7D8C RET
	0x035E7D90 MOV X0, X20
	0x035E7D94 BL 0x1C16F18
	0x035E7D98 CMP W1, 0x1
	0x035E7D9C MOV X21, X0
	0x035E7DA0 B.NE 0x35E7DB8
	0x035E7DA4 MOV X0, X21
	0x035E7DA8 BL 0x3EB1AD0
	0x035E7DAC LDR X20, [X0]
	0x035E7DB0 BL 0x3EB1AE0
	0x035E7DB4 B 0x35E7D68
	0x035E7DB8 MOV X20, X31
	0x035E7DBC B 0x35E7DC4
	0x035E7DC0 MOV X21, X0
	0x035E7DC4 LDRB W8, [X31 + 0xC]
	0x035E7DC8 CBZ W8, 0x35E7DD8
	0x035E7DCC MOV X0, X19
	0x035E7DD0 MOV X1, X31
	0x035E7DD4 BL 0x33E14E4
	0x035E7DD8 CBNZ X20, 0x35E7DE4
	0x035E7DDC MOV X0, X21
	0x035E7DE0 BL 0x1D2C690
	0x035E7DE4 MOV X0, X20
	0x035E7DE8 BL 0x1C16F18
	0x035E7DEC BL 0x1990590
	0x035E7DF0 MOVZ W8, 0x1
	0x035E7DF4 STR W8, [X0 + 0x28]
	0x035E7DF8 RET
	0x035E7DFC SUB X31, X31, 0x70
	0x035E7E00 STR X30, [X31 + 0x40]
	0x035E7E04 STP X22, X21, [X31 + 0x50]
	0x035E7E08 STP X20, X19, [X31 + 0x60]
	0x035E7E0C ADRP X22, 0xDF9000
	0x035E7E10 ADRP X21, 0xB52000
	0x035E7E14 LDRB W8, [X22 + 0x29D]
	0x035E7E18 LDR X21, [X21 + 0x3D0]
	0x035E7E1C MOV X19, X1
	0x035E7E20 MOV X20, X0
	0x035E7E24 TBNZ X8, 0x0, 0x35E7E60
	0x035E7E28 ADRP X0, 0xB52000
	0x035E7E2C LDR X0, [X0 + 0x3D8]
	0x035E7E30 BL 0x1C16CF4
	0x035E7E34 ADRP X0, 0xB52000
	0x035E7E38 LDR X0, [X0 + 0x3E0]
	0x035E7E3C BL 0x1C16CF4
	0x035E7E40 ADRP X0, 0xB52000
	0x035E7E44 LDR X0, [X0 + 0x3E8]
	0x035E7E48 BL 0x1C16CF4
	0x035E7E4C ADRP X0, 0xB52000
	0x035E7E50 LDR X0, [X0 + 0x3D0]
	0x035E7E54 BL 0x1C16CF4
	0x035E7E58 MOVZ W8, 0x1
	0x035E7E5C STRB W8, [X22 + 0x29D]
	0x035E7E60 LDR X0, [X21]
	0x035E7E64 MOVI V0.2D, 0x0
	0x035E7E68 STP V0, V0, [X31 + 0x20]
	0x035E7E6C STP V0, V0, [X31]
	0x035E7E70 STP X20, X19, [X31 + 0x20]
	0x035E7E74 ADRP X19, 0xB52000
	0x035E7E78 ADRP X21, 0xB52000
	0x035E7E7C ADRP X20, 0xB52000
	0x035E7E80 LDR W8, [X0 + 0xE0]
	0x035E7E84 LDR X19, [X19 + 0x3D8]
	0x035E7E88 LDR X21, [X21 + 0x3E0]
	0x035E7E8C LDR X20, [X20 + 0x3E8]
	0x035E7E90 CBNZ W8, 0x35E7E98
	0x035E7E94 BL 0x1C16DFC
	0x035E7E98 LDR X0, [X19]
	0x035E7E9C ADD X8, X31, 0x0
	0x035E7EA0 ORR X19, X8, 0xF
	0x035E7EA4 MOV X8, X19
	0x035E7EA8 BL 0x263221C
	0x035E7EAC LDR X2, [X21]
	0x035E7EB0 MOVN W8, 0x0
	0x035E7EB4 ADD X1, X31, 0x0
	0x035E7EB8 MOV X0, X19
	0x035E7EBC STR W8, [X31]
	0x035E7EC0 BL 0x1FCC314
	0x035E7EC4 LDR X1, [X20]
	0x035E7EC8 MOV X0, X19
	0x035E7ECC BL 0x2632230
	0x035E7ED0 LDP X20, X19, [X31 + 0x60]
	0x035E7ED4 LDP X22, X21, [X31 + 0x50]
	0x035E7ED8 LDR X30, [X31 + 0x40]
	0x035E7EDC ADD X31, X31, 0x70
	0x035E7EE0 RET
	0x035E7EE4 SUB X31, X31, 0xB0
	0x035E7EE8 STR X30, [X31 + 0x80]
	0x035E7EEC STP X22, X21, [X31 + 0x90]
	0x035E7EF0 STP X20, X19, [X31 + 0xA0]
	0x035E7EF4 ADRP X22, 0xDF9000
	0x035E7EF8 ADRP X21, 0xB0F000
	0x035E7EFC LDRB W8, [X22 + 0x29E]
	0x035E7F00 LDR X21, [X21 + 0x280]
	0x035E7F04 MOV X19, X1
	0x035E7F08 MOV X20, X0
	0x035E7F0C TBNZ X8, 0x0, 0x35E7F30
	0x035E7F10 ADRP X0, 0xB52000
	0x035E7F14 LDR X0, [X0 + 0x3F0]
	0x035E7F18 BL 0x1C16CF4
	0x035E7F1C ADRP X0, 0xB0F000
	0x035E7F20 LDR X0, [X0 + 0x280]
	0x035E7F24 BL 0x1C16CF4
	0x035E7F28 MOVZ W8, 0x1
	0x035E7F2C STRB W8, [X22 + 0x29E]
	0x035E7F30 LDR X0, [X21]
	0x035E7F34 MOVI V0.2D, 0x0
	0x035E7F38 STR X31, [X31 + 0x70]
	0x035E7F3C STP V0, V0, [X31 + 0x50]
	0x035E7F40 STP V0, V0, [X31 + 0x30]
	0x035E7F44 STR V0, [X31 + 0x2]
	0x035E7F48 STP X19, X20, [X31 + 0x40]
	0x035E7F4C ADRP X19, 0xB52000
	0x035E7F50 LDR W8, [X0 + 0xE0]
	0x035E7F54 LDR X19, [X19 + 0x3F0]
	0x035E7F58 CBNZ W8, 0x35E7F60
	0x035E7F5C BL 0x1C16DFC
	0x035E7F60 ADD X8, X31, 0x8
	0x035E7F64 MOV X0, X31
	0x035E7F68 BL 0x32C4770
	0x035E7F6C LDUR V0, [X31 + 0x8]
	0x035E7F70 LDR X9, [X31 + 0x18]
	0x035E7F74 LDR X2, [X19]
	0x035E7F78 ADD X8, X31, 0x20
	0x035E7F7C ORR X19, X8, 0xF
	0x035E7F80 MOVN W10, 0x0
	0x035E7F84 ADD X1, X31, 0x20
	0x035E7F88 MOV X0, X19
	0x035E7F8C STUR V0, [X31 + 0x28]
	0x035E7F90 STR X9, [X31 + 0x38]
	0x035E7F94 STR W10, [X31 + 0x20]
	0x035E7F98 BL 0x21910B8
	0x035E7F9C MOV X0, X19
	0x035E7FA0 MOV X1, X31
	0x035E7FA4 BL 0x32C47F8
	0x035E7FA8 LDP X20, X19, [X31 + 0xA0]
	0x035E7FAC LDP X22, X21, [X31 + 0x90]
	0x035E7FB0 LDR X30, [X31 + 0x80]
	0x035E7FB4 ADD X31, X31, 0xB0
	0x035E7FB8 RET
	0x035E7FBC SUB X31, X31, 0xA0
	0x035E7FC0 STR X30, [X31 + 0x70]
	0x035E7FC4 STP X22, X21, [X31 + 0x80]
	0x035E7FC8 STP X20, X19, [X31 + 0x90]
	0x035E7FCC ADRP X22, 0xDF9000
	0x035E7FD0 ADRP X21, 0xB52000
	0x035E7FD4 LDRB W8, [X22 + 0x29F]
	0x035E7FD8 LDR X21, [X21 + 0x3F8]
	0x035E7FDC MOV X19, X1
	0x035E7FE0 MOV X20, X0
	0x035E7FE4 TBNZ X8, 0x0, 0x35E8020
	0x035E7FE8 ADRP X0, 0xB52000
	0x035E7FEC LDR X0, [X0 + 0x400]
	0x035E7FF0 BL 0x1C16CF4
	0x035E7FF4 ADRP X0, 0xB52000
	0x035E7FF8 LDR X0, [X0 + 0x408]
	0x035E7FFC BL 0x1C16CF4
	0x035E8000 ADRP X0, 0xB51000
	0x035E8004 LDR X0, [X0 + 0x410]
	0x035E8008 BL 0x1C16CF4
	0x035E800C ADRP X0, 0xB51000
	0x035E8010 LDR X0, [X0 + 0x3F8]
	0x035E8014 BL 0x1C16CF4
	0x035E8018 MOVZ W8, 0x1
	0x035E801C STRB W8, [X22 + 0x29F]
	0x035E8020 LDR X0, [X21]
	0x035E8024 MOVI V0.2D, 0x0
	0x035E8028 STP V0, V0, [X31 + 0x50]
	0x035E802C STP V0, V0, [X31 + 0x30]
	0x035E8030 STR V0, [X31 + 0x2]
	0x035E8034 STP X20, X19, [X31 + 0x40]
	0x035E8038 ADRP X21, 0xB51000
	0x035E803C ADRP X19, 0xB51000
	0x035E8040 ADRP X20, 0xB51000
	0x035E8044 LDR W8, [X0 + 0xE0]
	0x035E8048 LDR X21, [X21 + 0x400]
	0x035E804C LDR X19, [X19 + 0x408]
	0x035E8050 LDR X20, [X20 + 0x410]
	0x035E8054 CBNZ W8, 0x35E805C
	0x035E8058 BL 0x1C16DFC
	0x035E805C LDR X0, [X21]
	0x035E8060 ADD X8, X31, 0x8
	0x035E8064 BL 0x24DA964
	0x035E8068 LDUR V0, [X31 + 0x8]
	0x035E806C LDR X9, [X31 + 0x18]
	0x035E8070 LDR X2, [X19]
	0x035E8074 ADD X8, X31, 0x20
	0x035E8078 ORR X19, X8, 0xF
	0x035E807C MOVN W10, 0x0
	0x035E8080 ADD X1, X31, 0x20
	0x035E8084 MOV X0, X19
	0x035E8088 STUR V0, [X31 + 0x28]
	0x035E808C STR X9, [X31 + 0x38]
	0x035E8090 STR W10, [X31 + 0x20]
	0x035E8094 BL 0x1FA94A8
	0x035E8098 LDR X1, [X20]
	0x035E809C MOV X0, X19
	0x035E80A0 BL 0x24DA978
	0x035E80A4 LDP X20, X19, [X31 + 0x90]
	0x035E80A8 LDP X22, X21, [X31 + 0x80]
	0x035E80AC LDR X30, [X31 + 0x70]
	0x035E80B0 ADD X31, X31, 0xA0
	0x035E80B4 RET
	0x035E80B8 STP X30, X21, [X31 - 0x20]!
	0x035E80BC STP X20, X19, [X31 + 0x10]
	0x035E80C0 ADRP X21, 0xDF8000
	0x035E80C4 ADRP X20, 0xB51000
	0x035E80C8 LDRB W8, [X21 + 0x2A0]
	0x035E80CC LDR X20, [X20 + 0x418]
	0x035E80D0 MOV X19, X0
	0x035E80D4 TBNZ X8, 0x0, 0x35E80EC
	0x035E80D8 ADRP X0, 0xB51000
	0x035E80DC LDR X0, [X0 + 0x418]
	0x035E80E0 BL 0x1C16CF4
	0x035E80E4 MOVZ W8, 0x1
	0x035E80E8 STRB W8, [X21 + 0x2A0]
	0x035E80EC MOV X0, X19
	0x035E80F0 BL 0x35E7C78
	0x035E80F4 LDR X8, [X20]
	0x035E80F8 LDP X20, X19, [X31 + 0x10]
	0x035E80FC MOV X1, X0
	0x035E8100 MOV X2, X31
	0x035E8104 MOV X0, X8
	0x035E8108 LDP X30, X21, [X31], #0x20
	0x035E810C B 0x321EFD0
	0x035E8110 SUB X31, X31, 0x40
	0x035E8114 STP X30, X23, [X31 + 0x10]
	0x035E8118 STP X22, X21, [X31 + 0x20]
	0x035E811C STP X20, X19, [X31 + 0x30]
	0x035E8120 ADRP X20, 0xDF8000
	0x035E8124 LDRB W8, [X20 + 0x2A1]
	0x035E8128 MOV X19, X0
	0x035E812C TBNZ X8, 0x0, 0x35E8168
	0x035E8130 ADRP X0, 0xB51000
	0x035E8134 LDR X0, [X0 + 0x420]
	0x035E8138 BL 0x1C16CF4
	0x035E813C ADRP X0, 0xB51000
	0x035E8140 LDR X0, [X0 + 0x428]
	0x035E8144 BL 0x1C16CF4
	0x035E8148 ADRP X0, 0xB51000
	0x035E814C LDR X0, [X0 + 0x430]
	0x035E8150 BL 0x1C16CF4
	0x035E8154 ADRP X0, 0xB51000
	0x035E8158 LDR X0, [X0 + 0x3D0]
	0x035E815C BL 0x1C16CF4
	0x035E8160 MOVZ W8, 0x1
	0x035E8164 STRB W8, [X20 + 0x2A1]
	0x035E8168 STP X31, X31, [X31]
	0x035E816C ADRP X23, 0xB51000
	0x035E8170 LDR W8, [X19]
	0x035E8174 LDR X20, [X19 + 0x20]
	0x035E8178 LDR X23, [X23 + 0x3D0]
	0x035E817C CBZ W8, 0x35E8208
	0x035E8180 CBZ X20, 0x35E8298
	0x035E8184 ADD X0, X20, 0x20
	0x035E8188 MOVZ W1, 0x1
	0x035E818C MOV W2, W31
	0x035E8190 MOV X3, X31
	0x035E8194 BL 0x33E7AB4
	0x035E8198 CBNZ W0, 0x35E829C
	0x035E819C LDR X1, [X19 + 0x28]
	0x035E81A0 MOV X0, X20
	0x035E81A4 BL 0x35E7EE4
	0x035E81A8 CBZ X0, 0x35E82D0
	0x035E81AC MOV W1, W31
	0x035E81B0 MOV X2, X31
	0x035E81B4 BL 0x33ED3A0
	0x035E81B8 STP X0, X1, [X31]
	0x035E81BC ADD X0, X31, 0x0
	0x035E81C0 MOV X1, X31
	0x035E81C4 BL 0x32C40D4
	0x035E81C8 TBNZ X0, 0x0, 0x35E821C
	0x035E81CC STR W31, [X19]
	0x035E81D0 LDR V0, [X31]
	0x035E81D4 STR V0, [X19 + 0x3]
	0x035E81D8 LDR X0, [X23]
	0x035E81DC LDR W8, [X0 + 0xE0]
	0x035E81E0 CBNZ W8, 0x35E81E8
	0x035E81E4 BL 0x1C16DFC
	0x035E81E8 ADRP X8, 0xB51000
	0x035E81EC LDR X8, [X8 + 0x428]
	0x035E81F0 ADD X0, X19, 0x8
	0x035E81F4 LDR X3, [X8]
	0x035E81F8 ADD X1, X31, 0x0
	0x035E81FC MOV X2, X19
	0x035E8200 BL 0x1FC69B0
	0x035E8204 B 0x35E8280
	0x035E8208 LDR V0, [X19 + 0x3]
	0x035E820C MOVN W8, 0x0
	0x035E8210 STR V0, [X31]
	0x035E8214 STP X31, X31, [X19 + 0x30]
	0x035E8218 STR W8, [X19]
	0x035E821C ADD X0, X31, 0x0
	0x035E8220 MOV X1, X31
	0x035E8224 BL 0x32C40F0
	0x035E8228 CBZ X20, 0x35E8294
	0x035E822C ADRP X8, 0xB51000
	0x035E8230 LDR X8, [X8 + 0x420]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0xDFA000
	015 Move W8, [X21+658]
	016 Move X19, X7
	017 Move X20, X6
	018 Move X24, X4
	019 Move X25, X2
	020 Move X23, X1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0xB53000
	026 Move X0, [X0+904]
	027 Call 0x1C17CF4
	028 Move X0, 0xB53000
	029 Move X0, [X0+824]
	030 Call 0x1C17CF4
	031 Move X0, 0xB53000
	032 Move X0, [X0+832]
	033 Call 0x1C17CF4
	034 Move X0, 0xB0D000
	035 Move X0, [X0+2440]
	036 Call 0x1C17CF4
	037 Move X0, 0xB53000
	038 Move X0, [X0+912]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+658], W8
	042 Call UnityTls.get_NativeInterface
	043 Compare X0, 0
	044 JumpIfEqual {441}
	045 Move X8, [X0+32]
	046 Compare X8, 0
	047 JumpIfEqual {441}
	048 Move X9, [X8+24]
	049 Move X0, [X8+64]
	050 Move X1, [X8+40]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move [X31+16], X0
	053 Move [X31+24], X1
	054 Move X0, [X20]
	055 Compare X0, 0
	056 JumpIfEqual {441}
	057 Move X1, X31
	058 Call X509Chain.get_Impl, X0
	059 Compare X0, 0
	060 JumpIfEqual {73}
	061 Move X8, 0xB53000
	062 Move X9, [X0]
	063 Move X8, [X8+824]
	064 Move X22, X0
	065 Move W11, [X9+304]
	066 Move X8, [X8]
	067 Move W10, [X8+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X9+200]
	070 Add X9, X9, X10
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Compare X24, 0
	074 JumpIfEqual {231}
	075 Move X0, X24
	076 Move X1, X31
	077 Call CollectionBase.get_Count, X0
	078 Compare W0, 0
	079 JumpIfEqual {231}
	080 Move X22, X31
	081 Move W26, 1
	082 Move X0, X25
	083 Move X1, X31
	084 Call String.IsNullOrEmpty, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {94}
	089 Move X8, 0xB0D000
	090 Move X8, [X8+2440]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X8]
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Compare X25, 0
	095 JumpIfEqual {441}
	096 Move W1, 58
	097 Move X0, X25
	098 Move X2, X31
	099 Call String.IndexOf, X0, X1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W2, W0
	102 Move X0, X25
	103 Move W1, W31
	104 Move X3, X31
	105 Call String.Substring, X0, X1, X2
	106 Move X25, X0
	107 Call UnityTls.get_NativeInterface
	108 Compare X0, 0
	109 JumpIfEqual {441}
	110 Move X8, [X0+104]
	111 Compare X8, 0
	112 JumpIfEqual {441}
	113 Move X9, [X8+24]
	114 Move X0, [X8+64]
	115 Move X2, [X8+40]
	116 Add X1, X31, 16
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move [X31+8], X0
	119 Compare W26, 0
	120 JumpIfEqual {149}
	121 Call UnityTls.get_NativeInterface
	122 Compare X0, 0
	123 JumpIfEqual {462}
	124 Move X8, [X0+104]
	125 Compare X8, 0
	126 JumpIfEqual {463}
	127 Move X0, [X8+64]
	128 Move X9, [X8+24]
	129 Move X2, [X8+40]
	130 Add X1, X31, 16
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X22, X0
	133 Add X2, X31, 16
	134 Move X1, X24
	135 Call CertHelper.AddCertificatesToNativeChain, X0, X1, X2
	136 Call UnityTls.get_NativeInterface
	137 Compare X0, 0
	138 JumpIfEqual {464}
	139 Move X8, [X0+88]
	140 Compare X8, 0
	141 JumpIfEqual {465}
	142 Move X0, [X8+64]
	143 Move X9, [X8+24]
	144 Move X3, [X8+40]
	145 Add X2, X31, 16
	146 Move X1, X22
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X24, X0
	149 Move X24, [X22+24]
	150 Move X22, X31
	151 Move X0, X31
	152 Call Encoding.get_UTF8
	153 Compare X0, 0
	154 JumpIfEqual {444}
	155 Move X8, [X0]
	156 Move X9, [X8+616]
	157 Move X2, [X8+624]
	158 Move X1, X25
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X23, 0
	161 JumpIfEqual {445}
	162 Move X8, [X23+24]
	163 Compare X8, 0
	164 JumpIfEqual {446}
	165 Move X8, [X8+48]
	166 Move X25, X0
	167 Compare X8, 0
	168 JumpIfEqual {207}
	169 Call UnityTls.get_NativeInterface
	170 Compare X0, 0
	171 JumpIfEqual {447}
	172 Move X8, [X0+104]
	173 Compare X8, 0
	174 JumpIfEqual {448}
	175 Move X0, [X8+64]
	176 Move X9, [X8+24]
	177 Move X2, [X8+40]
	178 Add X1, X31, 16
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X8, [X23+24]
	181 Move X26, X0
	182 Compare X8, 0
	183 JumpIfEqual {449}
	184 Move X1, [X8+48]
	185 Add X2, X31, 16
	186 Move X0, X26
	187 Call CertHelper.AddCertificatesToNativeChain, X0, X1, X2
	188 Call UnityTls.get_NativeInterface
	189 Compare X0, 0
	190 JumpIfEqual {450}
	191 Move X8, [X0+88]
	192 Compare X8, 0
	193 JumpIfEqual {452}
	194 Move X0, [X8+64]
	195 Move X9, [X8+24]
	196 Move X3, [X8+40]
	197 Add X2, X31, 16
	198 Move X1, X26
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X23, X0
	201 Compare X25, 0
	202 JumpIfEqual {235}
	203 Move W8, [X25+24]
	204 Add X9, X25, 32
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CSEL not yet implemented."
	207 Move W23, 0x80000000
	208 Call UnityTls.get_NativeInterface
	209 Compare X0, 0
	210 JumpIfEqual {441}
	211 Move X26, [X0+96]
	212 Move X21, [X22+24]
	213 Move W0, W31
	214 Move X1, X31
	215 Call IntPtr.op_Explicit, X0
	216 Compare X26, 0
	217 JumpIfEqual {441}
	218 Move X2, X0
	219 Move X8, [X26+24]
	220 Move X0, [X26+64]
	221 Move X4, [X26+40]
	222 Add X3, X31, 16
	223 Move X1, X21
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X21, X0
	226 Call UnityTls.get_NativeInterface
	227 Compare X0, 0
	228 JumpIfEqual {441}
	229 Move X8, [X0+16]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W9, [X19]
	232 Move W8, W31
	233 Or W9, W9, 1
	234 Move [X19], W9
	235 Move X27, X31
	236 Call UnityTls.get_NativeInterface
	237 Compare X0, 0
	238 JumpIfEqual {456}
	239 Compare X25, 0
	240 JumpIfEqual {457}
	241 Move X21, [X0+152]
	242 Move W0, [X25+24]
	243 Move X1, X31
	244 Call IntPtr.op_Explicit, X0
	245 Move X8, 0xB53000
	246 Move X8, [X8+912]
	247 Move X28, X0
	248 Move X0, [X8]
	249 Call 0x1C17F10
	250 Move X8, 0xB53000
	251 Move X8, [X8+904]
	252 Move X29, X0
	253 Move X2, [X8]
	254 Move X1, X31
	255 Call unitytls_x509verify_callback..ctor, X0, X1, X2
	256 Compare X21, 0
	257 JumpIfEqual {458}
	258 Move X0, [X21+64]
	259 Move X8, [X21+24]
	260 Move X9, [X21+40]
	261 Move X21, [X31+8]
	262 Add X7, X31, 16
	263 Move X1, X24
	264 Move X2, X23
	265 Move X3, X27
	266 Move X4, X28
	267 Move X5, X29
	268 Move X6, X21
	269 Move [X31], X9
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move W23, W0
	272 Move X27, X31
	273 Move W28, 14
	274 Call UnityTls.get_NativeInterface
	275 Compare X0, 0
	276 JumpIfEqual {451}
	277 Move X8, [X0+136]
	278 Compare X8, 0
	279 JumpIfEqual {453}
	280 Move X0, [X8+64]
	281 Move X9, [X8+24]
	282 Move X2, [X8+40]
	283 Move X1, X26
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Compare X27, 0
	286 JumpIfNotEqual {454}
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Compare W28, 0
	289 JumpIfNotEqual {333}
	290 Compare X25, 0
	291 JumpIfEqual {296}
	292 Move W8, [X25+24]
	293 Add X9, X25, 32
	294 NotImplemented "Instruction CMP not yet implemented."
	295 NotImplemented "Instruction CSEL not yet implemented."
	296 Move X26, X31
	297 Call UnityTls.get_NativeInterface
	298 Compare X0, 0
	299 JumpIfEqual {459}
	300 Compare X25, 0
	301 JumpIfEqual {460}
	302 Move X21, [X0+144]
	303 Move W0, [X25+24]
	304 Move X1, X31
	305 Call IntPtr.op_Explicit, X0
	306 Move X8, 0xB53000
	307 Move X8, [X8+912]
	308 Move X25, X0
	309 Move X0, [X8]
	310 Call 0x1C17F10
	311 Move X8, 0xB53000
	312 Move X8, [X8+904]
	313 Move X27, X0
	314 Move X2, [X8]
	315 Move X1, X31
	316 Call unitytls_x509verify_callback..ctor, X0, X1, X2
	317 Compare X21, 0
	318 JumpIfEqual {461}
	319 Move X0, [X21+64]
	320 Move X8, [X21+24]
	321 Move X7, [X21+40]
	322 Move X21, [X31+8]
	323 Add X6, X31, 16
	324 Move X1, X24
	325 Move X2, X26
	326 Move X3, X25
	327 Move X4, X27
	328 Move X5, X21
	329 NotImplemented "Instruction BLR not yet implemented."
	330 Move W23, W0
	331 Move X24, X31
	332 Move W28, 18
	333 Move X24, X31
	334 Call UnityTls.get_NativeInterface
	335 Compare X0, 0
	336 JumpIfEqual {441}
	337 Move X8, [X0+136]
	338 Compare X8, 0
	339 JumpIfEqual {441}
	340 Move X9, [X8+24]
	341 Move X0, [X8+64]
	342 Move X2, [X8+40]
	343 Move X1, X22
	344 NotImplemented "Instruction BLR not yet implemented."
	345 Compare X24, 0
	346 JumpIfNotEqual {442}
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Compare W28, 0
	349 JumpIfNotEqual {425}
	350 Move X0, [X20]
	351 Compare X0, 0
	352 JumpIfEqual {355}
	353 Move X1, X31
	354 Call X509Chain.Dispose, X0
	355 Call UnityTls.get_NativeInterface
	356 Compare X0, 0
	357 JumpIfEqual {441}
	358 Move X8, [X0+88]
	359 Compare X8, 0
	360 JumpIfEqual {441}
	361 Move X9, [X8+24]
	362 Move X0, [X8+64]
	363 Move X3, [X8+40]
	364 Add X2, X31, 16
	365 Move X1, X21
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Move X8, 0xB53000
	368 Move X8, [X8+824]
	369 Move X22, X0
	370 Move X8, [X8]
	371 Move X0, X8
	372 Call 0x1C17F10
	373 Move W2, 1
	374 Move X1, X22
	375 Move X21, X0
	376 Call X509ChainImplUnityTls..ctor, X0, X1, X2
	377 Move X8, 0xB53000
	378 Move X8, [X8+832]
	379 Move X0, [X8]
	380 Call 0x1C17F10
	381 Move X1, X21
	382 Move X2, X31
	383 Move X22, X0
	384 Call X509Chain..ctor, X0, X1
	385 Add W31, W23, 1
	386 Move [X20], X22
	387 Compare W23, 0
	388 JumpIfNotEqual {394}
	389 Move W1, W31
	390 Move [X19], W31
	391 Move W8, 4
	392 Move [X19], W8
	393 Move W1, 32
	394 Move W8, W23
	395 ShiftRight W8, 1
	396 And W8, W8, 0x7FFFFFFF
	397 And W9, W23, 1
	398 Move W10, W23
	399 ShiftRight W10, 29
	400 And W10, W10, 0xFFFFFFF
	401 And W12, W8, 2
	402 NotImplemented "Instruction CMP not yet implemented."
	403 NotImplemented "Instruction BFM not yet implemented."
	404 And W8, W10, 32
	405 Or W10, W12, 4
	406 Move W11, 32
	407 NotImplemented "Instruction CSEL not yet implemented."
	408 And W31, W23, 8
	409 NotImplemented "Instruction CSEL not yet implemented."
	410 Or W1, W9, W8
	411 Move [X19], W10
	412 Compare X21, 0
	413 JumpIfEqual {441}
	414 Move X8, [X21]
	415 Move X0, X21
	416 Move X9, [X8+456]
	417 Move X2, [X8+464]
	418 NotImplemented "Instruction BLR not yet implemented."
	419 Compare W23, 0
	420 JumpIfEqual {422}
	421 Move W8, W31
	422 Move W8, [X31+20]
	423 NotImplemented "Instruction CMP not yet implemented."
	424 NotImplemented "Instruction CSET not yet implemented."
	425 Move X20, [X31+112]
	426 Move X19, [X31+120]
	427 Move X22, [X31+96]
	428 Move X21, [X31+104]
	429 Move X24, [X31+80]
	430 Move X23, [X31+88]
	431 Move X26, [X31+64]
	432 Move X25, [X31+72]
	433 Move X28, [X31+48]
	434 Move X27, [X31+56]
	435 Move X29, [X31+32]
	436 Move X30, [X31+40]
	437 And W0, W8, 1
	438 Add X31, X31, 128
	439 Return X0
	440 Move W26, W31
	441 Call 0x1C17F20
	442 Move X0, X24
	443 Call 0x1C17F18
	444 Call 0x1C17F20
	445 Call 0x1C17F20
	446 Call 0x1C17F20
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Call 0x1C17F20
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Move X0, X27
	455 Call 0x1C17F18
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Call 0x1C17F20
	465 Call 0x1C17F20
	466 Move X29, X0
	467 Move X29, X0
	468 Move X22, X31
	469 Move W28, W1
	470 Move X29, X0
	471 Move W28, W1
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Move X0, X29
	474 Call 0x3EB2AD0
	475 Move X24, [X0]
	476 Call 0x3EB2AE0
	477 Compare X24, 0
	478 JumpIfNotEqual {480}
	479 Move X21, [X31+8]
	480 Move X0, X24
	481 Call 0x1C17F18
	482 Compare X24, 0
	483 JumpIfNotEqual {486}
	484 Move X29, X0
	485 Move W28, W1
	486 Move X0, X24
	487 Call 0x1C17F18
	488 Move X29, X0
	489 Move W28, W1
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move W27, 1
	492 Move X0, X29
	493 Call 0x3EB2AD0
	494 Move X23, [X0]
	495 Call 0x3EB2AE0
	496 Compare X23, 0
	497 JumpIfNotEqual {501}
	498 Move X27, X31
	499 Move W23, 0x80000000
	500 Move W28, 14
	501 Move X0, X23
	502 Call 0x1C17F18
	503 Compare X23, 0
	504 JumpIfNotEqual {507}
	505 Move X29, X0
	506 Move W28, W1
	507 Move X0, X23
	508 Call 0x1C17F18
	509 Move X29, X0
	510 Move X29, X0
	511 Move X26, X31
	512 Move W28, W1
	513 Move W27, 1
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move X0, X29
	516 Call 0x3EB2AD0
	517 Move X27, [X0]
	518 Call 0x3EB2AE0
	519 Move W28, W31
	520 Move W23, 0x80000000
	521 Move X21, [X31+8]
	522 Move X27, X31
	523 Call UnityTls.get_NativeInterface
	524 Compare X0, 0
	525 JumpIfEqual {566}
	526 Move X8, [X0+136]
	527 Compare X8, 0
	528 JumpIfEqual {567}
	529 Move X0, [X8+64]
	530 Move X9, [X8+24]
	531 Move X2, [X8+40]
	532 Move X1, X26
	533 NotImplemented "Instruction BLR not yet implemented."
	534 Compare X27, 0
	535 JumpIfNotEqual {568}
	536 Move W23, 0x80000000
	537 NotImplemented "Instruction CMP not yet implemented."
	538 Move W8, 1
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Move X0, X29
	541 Call 0x3EB2AD0
	542 Move X24, [X0]
	543 Call 0x3EB2AE0
	544 Move X21, [X31+8]
	545 Move W28, W31
	546 Move X0, X29
	547 Call 0x3EB2AD0
	548 Move X24, X0
	549 Move X0, 0xB12000
	550 Move X0, [X0+3264]
	551 Call 0x1C17D08
	552 Move X8, [X24]
	553 Move X1, [X8]
	554 Call 0x1C18270
	555 Move TEMP, X0
	556 And TEMP, TEMP, 1
	557 Compare TEMP, 1
	558 JumpIfNotEqual {570}
	559 Move X24, [X24]
	560 Call 0x3EB2AE0
	561 Call UnityTls.get_NativeInterface
	562 Compare X0, 0
	563 JumpIfNotEqual {578}
	564 Call 0x1C17F20
	565 Move X24, X31
	566 Call 0x1C17F20
	567 Call 0x1C17F20
	568 Move X0, X27
	569 Call 0x1C17F18
	570 Move W0, 8
	571 Call 0x3EB2AF0
	572 Move X8, [X24]
	573 Move [X0], X8
	574 Move X1, 0x8CD000
	575 Add X1, X1, 3672
	576 Move X2, X31
	577 Call 0x3EB2B00
	578 Move X8, [X0+136]
	579 Compare X8, 0
	580 JumpIfNotEqual {582}
	581 Call 0x1C17F20
	582 Move X0, [X8+64]
	583 Move X9, [X8+24]
	584 Move X2, [X8+40]
	585 Move X1, [X31+8]
	586 NotImplemented "Instruction BLR not yet implemented."
	587 Move X0, X24
	588 Call 0x1C17F18
	589 Move X29, X0
	590 Move W28, W1
	591 Move X29, X0
	592 Move W28, W1
	593 Move X28, X1
	594 Move X29, X0
	595 Call 0x3EB2AE0
	596 Move X29, X0
	597 Call UnityTls.get_NativeInterface
	598 Compare X0, 0
	599 JumpIfNotEqual {601}
	600 Call 0x1C17F20
	601 Move X8, [X0+136]
	602 Compare X8, 0
	603 JumpIfNotEqual {605}
	604 Call 0x1C17F20
	605 Move X0, [X8+64]
	606 Move X9, [X8+24]
	607 Move X2, [X8+40]
	608 Move X1, X22
	609 NotImplemented "Instruction BLR not yet implemented."
	610 Compare X24, 0
	611 JumpIfNotEqual {614}
	612 Move X0, X29
	613 Call 0x1D2D690
	614 Move X0, X24
	615 Call 0x1C17F18
	616 Call 0x1991590
	617 Move X28, X1
	618 Move X29, X0

Method: System.Void .ctor()

Disassembly:
	0x035E8234 LDR W22, [X20 + 0x1C]
	0x035E8238 LDR X0, [X8]

ISIL:
	001 Move X1, X31
	002 Call MonoTlsProvider..ctor, X0
	003 Return 

