Type: Mono.SystemDependencyProvider

Method: Mono.SystemDependencyProvider get_Instance()

Disassembly:
	0x035E1F80 ANDS W31, W8, 0x7F0000
	0x035E1F84 MOVZ W0, 0x5A
	0x035E1F88 B.NE 0x35E1F94
	0x035E1F8C ANDS W31, W8, 0x800000
	0x035E1F90 CSEL W0, W1, W0, EQ
	0x035E1F94 RET
	0x035E1F98 MOVZ W0, 0x2E
	0x035E1F9C RET
	0x035E1FA0 MOVZ W0, 0x2D
	0x035E1FA4 RET
	0x035E1FA8 MOVZ W0, 0x2C
	0x035E1FAC RET
	0x035E1FB0 MOVZ W0, 0x30
	0x035E1FB4 RET
	0x035E1FB8 B 0x1C99814
	0x035E1FBC STR X30, [X31 - 0x10]!
	0x035E1FC0 BL 0x35E1D34
	0x035E1FC4 CMP X0, 0x0
	0x035E1FC8 CSET W0, NE
	0x035E1FCC LDR X30, [X31], #0x10
	0x035E1FD0 RET
	0x035E1FD4 STP X30, X21, [X31 - 0x20]!
	0x035E1FD8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE00000
	005 Move X19, 0xB59000
	006 Move W8, [X20+623]
	007 Move X19, [X19+464]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB59000
	013 Move X0, [X0+464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+623], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call SystemDependencyProvider.Initialize
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Initialize()

Disassembly:
	0x035E1FDC LDR X8, [X2 + 0x8]
	0x035E1FE0 STP X1, X2, [X0 + 0x20]
	0x035E1FE4 MOV X19, X0
	0x035E1FE8 MOV X20, X1
	0x035E1FEC STR X8, [X0 + 0x10]
	0x035E1FF0 LDRB W21, [X2 + 0x52]
	0x035E1FF4 STR X0, [X0 + 0x40]
	0x035E1FF8 MOV X0, X2
	0x035E1FFC BL 0x1C16D84
	0x035E2000 TBZ X0, 0x0, 0x35E2018
	0x035E2004 CMP W21, 0x4
	0x035E2008 B.NE 0x35E2034
	0x035E200C ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E2010 ADD X8, X8, 0x1D0
	0x035E2014 B 0x35E2028
	0x035E2018 CMP W21, 0x3
	0x035E201C B.NE 0x35E2030
	0x035E2020 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E2024 ADD X8, X8, 0x1A4
	0x035E2028 STR X8, [X19 + 0x18]
	0x035E202C B 0x35E2044
	0x035E2030 CBZ X20, 0x35E205C
	0x035E2034 LDR X8, [X19 + 0x10]
	0x035E2038 LDR X9, [X19 + 0x20]
	0x035E203C STR X8, [X19 + 0x18]
	0x035E2040 STR X9, [X19 + 0x40]
	0x035E2044 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E2048 ADD X8, X8, 0x12C
	0x035E204C STR X8, [X19 + 0x38]
	0x035E2050 LDP X20, X19, [X31 + 0x10]
	0x035E2054 LDP X30, X21, [X31], #0x20
	0x035E2058 RET
	0x035E205C ADRP X1, 0xFFFFFFFFFD539000
	0x035E2060 ADD X1, X1, 0xEE3
	0x035E2064 MOV X0, X31
	0x035E2068 BL 0x1C16F3C
	0x035E206C MOV X1, X31
	0x035E2070 BL 0x1C16DEC
	0x035E2074 LDR X8, [X0 + 0x40]
	0x035E2078 LDR X6, [X0 + 0x18]
	0x035E207C LDR X5, [X0 + 0x28]
	0x035E2080 MOV X0, X8
	0x035E2084 BR X6
	0x035E2088 STP X30, X21, [X31 - 0x20]!
	0x035E208C STP X20, X19, [X31 + 0x10]
	0x035E2090 LDR X8, [X2 + 0x8]
	0x035E2094 STP X1, X2, [X0 + 0x20]
	0x035E2098 MOV X19, X0
	0x035E209C MOV X20, X1
	0x035E20A0 STR X8, [X0 + 0x10]
	0x035E20A4 LDRB W21, [X2 + 0x52]
	0x035E20A8 STR X0, [X0 + 0x40]
	0x035E20AC MOV X0, X2
	0x035E20B0 BL 0x1C16D84
	0x035E20B4 TBZ X0, 0x0, 0x35E20CC
	0x035E20B8 CMP W21, 0x4
	0x035E20BC B.NE 0x35E20E8
	0x035E20C0 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E20C4 ADD X8, X8, 0x2A8
	0x035E20C8 B 0x35E20DC
	0x035E20CC CMP W21, 0x3
	0x035E20D0 B.NE 0x35E20E4
	0x035E20D4 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E20D8 ADD X8, X8, 0x27C
	0x035E20DC STR X8, [X19 + 0x18]
	0x035E20E0 B 0x35E20F8
	0x035E20E4 CBZ X20, 0x35E2110
	0x035E20E8 LDR X8, [X19 + 0x10]
	0x035E20EC LDR X9, [X19 + 0x20]
	0x035E20F0 STR X8, [X19 + 0x18]
	0x035E20F4 STR X9, [X19 + 0x40]
	0x035E20F8 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E20FC ADD X8, X8, 0x204
	0x035E2100 STR X8, [X19 + 0x38]
	0x035E2104 LDP X20, X19, [X31 + 0x10]
	0x035E2108 LDP X30, X21, [X31], #0x20
	0x035E210C RET
	0x035E2110 ADRP X1, 0xFFFFFFFFFD539000
	0x035E2114 ADD X1, X1, 0xEE3
	0x035E2118 MOV X0, X31
	0x035E211C BL 0x1C16F3C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xE00000
	007 Move X20, 0xB59000
	008 Move W8, [X19+624]
	009 Move X20, [X20+464]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB59000
	015 Move X0, [X0+464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+624], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X19, [X8+8]
	027 Move [X31+12], W31
	028 Add X1, X31, 12
	029 Move X0, X19
	030 Move X2, X31
	031 Call Monitor.Enter, X0, X1
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X8, [X8]
	040 Compare X8, 0
	041 JumpIfEqual {43}
	042 Move X20, X31
	043 Call 0x1C17F10
	044 Move X21, X0
	045 Call SystemDependencyProvider..ctor, X0
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X20, X31
	054 Move [X8], X21
	055 Move W8, [X31+12]
	056 Compare W8, 0
	057 JumpIfEqual {61}
	058 Move X0, X19
	059 Move X1, X31
	060 Call Monitor.Exit, X0
	061 Compare X20, 0
	062 JumpIfNotEqual {69}
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Add X31, X31, 48
	068 Return 
	069 Move X0, X20
	070 Call 0x1C17F18
	071 Move X21, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X21
	074 Call 0x3EB2AD0
	075 Move X20, [X0]
	076 Call 0x3EB2AE0
	077 Move X20, X31
	078 Move X21, X0
	079 Move W8, [X31+12]
	080 Compare W8, 0
	081 JumpIfEqual {85}
	082 Move X0, X19
	083 Move X1, X31
	084 Call Monitor.Exit, X0
	085 Compare X20, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X21
	088 Call 0x1D2D690
	089 Move X0, X20
	090 Call 0x1C17F18
	091 Call 0x1991590

Method: Mono.ISystemCertificateProvider Mono.ISystemDependencyProvider.get_CertificateProvider()

Disassembly:
	0x035E21B8 LDP X20, X19, [X31 + 0x10]
	0x035E21BC LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: Mono.SystemCertificateProvider get_CertificateProvider()

Disassembly:
	0x035E21C0 RET
	0x035E21C4 ADRP X1, 0xFFFFFFFFFD539000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: Mono.X509PalImpl get_X509Pal()

Disassembly:
	0x035E21C8 ADD X1, X1, 0xEE3
	0x035E21CC MOV X0, X31
	0x035E21D0 BL 0x1C16F3C
	0x035E21D4 MOV X1, X31
	0x035E21D8 BL 0x1C16DEC
	0x035E21DC LDR X8, [X0 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call SystemCertificateProvider.get_X509Pal, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x035E2120 MOV X1, X31
	0x035E2124 BL 0x1C16DEC
	0x035E2128 LDR X8, [X0 + 0x40]
	0x035E212C LDR X6, [X0 + 0x18]
	0x035E2130 LDR X5, [X0 + 0x28]
	0x035E2134 MOV X0, X8
	0x035E2138 BR X6
	0x035E213C STP X30, X21, [X31 - 0x20]!
	0x035E2140 STP X20, X19, [X31 + 0x10]
	0x035E2144 LDR X8, [X2 + 0x8]
	0x035E2148 STP X1, X2, [X0 + 0x20]
	0x035E214C MOV X19, X0
	0x035E2150 MOV X20, X1
	0x035E2154 STR X8, [X0 + 0x10]
	0x035E2158 LDRB W21, [X2 + 0x52]
	0x035E215C STR X0, [X0 + 0x40]
	0x035E2160 MOV X0, X2
	0x035E2164 BL 0x1C16D84
	0x035E2168 TBZ X0, 0x0, 0x35E2180
	0x035E216C CMP W21, 0x4
	0x035E2170 B.NE 0x35E219C
	0x035E2174 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E2178 ADD X8, X8, 0x380
	0x035E217C B 0x35E2190
	0x035E2180 CMP W21, 0x3
	0x035E2184 B.NE 0x35E2198
	0x035E2188 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E218C ADD X8, X8, 0x354
	0x035E2190 STR X8, [X19 + 0x18]
	0x035E2194 B 0x35E21AC
	0x035E2198 CBZ X20, 0x35E21C4
	0x035E219C LDR X8, [X19 + 0x10]
	0x035E21A0 LDR X9, [X19 + 0x20]
	0x035E21A4 STR X8, [X19 + 0x18]
	0x035E21A8 STR X9, [X19 + 0x40]
	0x035E21AC ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E21B0 ADD X8, X8, 0x2DC
	0x035E21B4 STR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDFF000
	007 Move X20, 0xB58000
	008 Move X21, 0xB40000
	009 Move W8, [X22+625]
	010 Move X20, [X20+440]
	011 Move X21, [X21+2144]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB40000
	018 Move X0, [X0+2144]
	019 Call 0x1C17CF4
	020 Move X0, 0xB58000
	021 Move X0, [X0+440]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+625], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X20]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X20, X0
	032 Call Object..ctor, X0
	033 Move [X19+16], X20
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+48]
	046 Call DependencyInjector.Register, X0
	047 Return 

Method: System.Void .cctor()

Disassembly:
	0x035E21E0 LDR X6, [X0 + 0x18]
	0x035E21E4 LDR X5, [X0 + 0x28]
	0x035E21E8 MOV X0, X8
	0x035E21EC BR X6
	0x035E21F0 STP X30, X21, [X31 - 0x20]!
	0x035E21F4 STP X20, X19, [X31 + 0x10]
	0x035E21F8 LDR X8, [X2 + 0x8]
	0x035E21FC STP X1, X2, [X0 + 0x20]
	0x035E2200 MOV X19, X0
	0x035E2204 MOV X20, X1
	0x035E2208 STR X8, [X0 + 0x10]
	0x035E220C LDRB W21, [X2 + 0x52]
	0x035E2210 STR X0, [X0 + 0x40]
	0x035E2214 MOV X0, X2
	0x035E2218 BL 0x1C16D84
	0x035E221C TBZ X0, 0x0, 0x35E2234
	0x035E2220 CMP W21, 0x4
	0x035E2224 B.NE 0x35E2250
	0x035E2228 ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E222C ADD X8, X8, 0x450
	0x035E2230 B 0x35E2244
	0x035E2234 CMP W21, 0x3
	0x035E2238 B.NE 0x35E224C
	0x035E223C ADRP X8, 0xFFFFFFFFFE5E0000
	0x035E2240 ADD X8, X8, 0x424
	0x035E2244 STR X8, [X19 + 0x18]
	0x035E2248 B 0x35E2260
	0x035E224C CBZ X20, 0x35E2278

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xDFF000
	006 Move X21, 0xB18000
	007 Move X20, 0xB58000
	008 Move W8, [X19+626]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+464]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB18000
	016 Move X0, [X0+3264]
	017 Call 0x1C17CF4
	018 Move X0, 0xB58000
	019 Move X0, [X0+464]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+626], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8+8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

