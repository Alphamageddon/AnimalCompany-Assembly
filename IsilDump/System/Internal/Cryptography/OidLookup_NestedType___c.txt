Type: Internal.Cryptography.OidLookup/<>c

Method: System.Void .cctor()

Disassembly:
	0x035F3D84 CMP X11, X1
	0x035F3D88 B.EQ 0x35F3DA8
	0x035F3D8C SUBS X9, X9, 0x1
	0x035F3D90 ADD X10, X10, 0x10
	0x035F3D94 B.NE 0x35F3D80
	0x035F3D98 MOV X0, X19
	0x035F3D9C MOV W2, W31
	0x035F3DA0 BL 0x1C5C788
	0x035F3DA4 B 0x35F3DB4
	0x035F3DA8 LDRSW X9, [X10]
	0x035F3DAC ADD X8, X8, X9, 0x4, LSL
	0x035F3DB0 ADD X0, X8, 0x138
	0x035F3DB4 LDP X8, X1, [X0]
	0x035F3DB8 MOV X0, X19
	0x035F3DBC BLR X8
	0x035F3DC0 TBZ X0, 0x0, 0x35F3E8C
	0x035F3DC4 LDR X8, [X19]
	0x035F3DC8 LDR X1, [X28]
	0x035F3DCC LDRH W9, [X8 + 0x12E]
	0x035F3DD0 CBZ X9, 0x35F3DF4
	0x035F3DD4 LDR X10, [X8 + 0xB0]
	0x035F3DD8 ADD X10, X10, 0x8
	0x035F3DDC LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDEE000
	005 Move X20, 0xB47000
	006 Move W8, [X19+745]
	007 Move X20, [X20+2424]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB47000
	013 Move X0, [X0+2424]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+745], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x035F3DE0 CMP X11, X1
	0x035F3DE4 B.EQ 0x35F3E04

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String <.cctor>b__10_0(System.Collections.Generic.KeyValuePair`2<System.String, System.String> kvp)

Disassembly:
	0x035F3DE8 SUBS X9, X9, 0x1
	0x035F3DEC ADD X10, X10, 0x10
	0x035F3DF0 B.NE 0x35F3DDC
	0x035F3DF4 MOV X0, X19
	0x035F3DF8 MOV W2, W31
	0x035F3DFC BL 0x1C5C788
	0x035F3E00 B 0x35F3E10
	0x035F3E04 LDRSW X9, [X10]
	0x035F3E08 ADD X8, X8, X9, 0x4, LSL
	0x035F3E0C ADD X0, X8, 0x138
	0x035F3E10 LDP X8, X1, [X0]
	0x035F3E14 MOV X0, X19
	0x035F3E18 BLR X8
	0x035F3E1C MOV X20, X1
	0x035F3E20 LDR X1, [X29]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDEE000
	005 Move W8, [X20+746]
	006 Move X19, X2
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB04000
	012 Move X0, [X0+440]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+746], W8
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0

Method: System.String <.cctor>b__10_1(System.Collections.Generic.KeyValuePair`2<System.String, System.String> kvp)

Disassembly:
	0x035F3E24 MOV X21, X0
	0x035F3E28 MOV X2, X31
	0x035F3E2C BL 0x321BA08
	0x035F3E30 TBNZ X0, 0x0, 0x35F3EA0
	0x035F3E34 LDR X1, [X26]
	0x035F3E38 MOV X0, X21
	0x035F3E3C MOV X2, X31
	0x035F3E40 BL 0x321BA08
	0x035F3E44 TBNZ X0, 0x0, 0x35F3D60
	0x035F3E48 LDR X1, [X22]
	0x035F3E4C MOV X0, X21
	0x035F3E50 MOV X2, X31
	0x035F3E54 BL 0x321BA08
	0x035F3E58 TBNZ X0, 0x0, 0x35F3D58
	0x035F3E5C ADRP X8, 0xB46000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDEE000
	005 Move W8, [X20+747]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB04000
	012 Move X0, [X0+432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+747], W8
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0

