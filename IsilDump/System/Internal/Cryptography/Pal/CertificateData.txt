Type: Internal.Cryptography.Pal.CertificateData

Method: System.Void .ctor(System.Byte[] rawData)

Disassembly:
	0x035F3E60 LDR X8, [X8 + 0xB10]
	0x035F3E64 LDR X1, [X8]
	0x035F3E68 MOV X0, X21
	0x035F3E6C MOV X2, X31
	0x035F3E70 BL 0x321BA08
	0x035F3E74 TBNZ X0, 0x0, 0x35F3D50
	0x035F3E78 LDR X8, [X31 + 0x8]
	0x035F3E7C CMP X8, 0x0
	0x035F3E80 CSEL X8, X20, X8, EQ
	0x035F3E84 STR X8, [X31 + 0x8]
	0x035F3E88 B 0x35F3D4C
	0x035F3E8C MOV X21, X31
	0x035F3E90 MOV X20, X31
	0x035F3E94 MOVZ W22, 0xA
	0x035F3E98 CBNZ X19, 0x35F3EAC
	0x035F3E9C B 0x35F3F0C
	0x035F3EA0 MOV X21, X31
	0x035F3EA4 MOVZ W22, 0x9
	0x035F3EA8 CBZ X19, 0x35F3F0C
	0x035F3EAC LDR X8, [X19]
	0x035F3EB0 ADRP X10, 0xB00000
	0x035F3EB4 LDRH W9, [X8 + 0x12E]
	0x035F3EB8 LDR X10, [X10 + 0xE00]
	0x035F3EBC LDR X1, [X10]
	0x035F3EC0 CBZ X9, 0x35F3EE4
	0x035F3EC4 LDR X10, [X8 + 0xB0]
	0x035F3EC8 ADD X10, X10, 0x8
	0x035F3ECC LDUR X11, [X10 - 0x8]
	0x035F3ED0 CMP X11, X1
	0x035F3ED4 B.EQ 0x35F3EF4
	0x035F3ED8 SUBS X9, X9, 0x1
	0x035F3EDC ADD X10, X10, 0x10
	0x035F3EE0 B.NE 0x35F3ECC
	0x035F3EE4 MOV X0, X19
	0x035F3EE8 MOV W2, W31
	0x035F3EEC BL 0x1C5C788
	0x035F3EF0 B 0x35F3F00
	0x035F3EF4 LDRSW X9, [X10]
	0x035F3EF8 ADD X8, X8, X9, 0x4, LSL
	0x035F3EFC ADD X0, X8, 0x138
	0x035F3F00 LDP X8, X1, [X0]
	0x035F3F04 MOV X0, X19
	0x035F3F08 BLR X8
	0x035F3F0C CBNZ X21, 0x35F3F64
	0x035F3F10 CMP W22, 0xA
	0x035F3F14 B.EQ 0x35F3F1C
	0x035F3F18 CBNZ W22, 0x35F3F38
	0x035F3F1C MOV X20, X25
	0x035F3F20 CBNZ X25, 0x35F3F38
	0x035F3F24 MOV X20, X24
	0x035F3F28 CBNZ X24, 0x35F3F38
	0x035F3F2C LDR X8, [X31 + 0x8]
	0x035F3F30 CMP X23, 0x0
	0x035F3F34 CSEL X20, X8, X23, EQ
	0x035F3F38 MOV X0, X20
	0x035F3F3C LDP X20, X19, [X31 + 0x60]
	0x035F3F40 LDP X22, X21, [X31 + 0x50]
	0x035F3F44 LDP X24, X23, [X31 + 0x40]
	0x035F3F48 LDP X26, X25, [X31 + 0x30]
	0x035F3F4C LDP X28, X27, [X31 + 0x20]
	0x035F3F50 LDP X29, X30, [X31 + 0x10]
	0x035F3F54 ADD X31, X31, 0x70
	0x035F3F58 RET
	0x035F3F5C BL 0x1C16F20
	0x035F3F60 BL 0x1C16F20
	0x035F3F64 MOV X0, X21
	0x035F3F68 BL 0x1C16F18
	0x035F3F6C B 0x35F3F98
	0x035F3F70 B 0x35F3F98
	0x035F3F74 B 0x35F3F98
	0x035F3F78 B 0x35F3F98
	0x035F3F7C MOV X20, X0
	0x035F3F80 STR X31, [X31 + 0x8]
	0x035F3F84 MOV X23, X31
	0x035F3F88 MOV X24, X31
	0x035F3F8C MOV X25, X31
	0x035F3F90 B 0x35F3F9C
	0x035F3F94 B 0x35F3F98
	0x035F3F98 MOV X20, X0
	0x035F3F9C CMP W1, 0x1
	0x035F3FA0 B.NE 0x35F3FC4
	0x035F3FA4 MOV X0, X20
	0x035F3FA8 BL 0x3EB1AD0
	0x035F3FAC LDR X21, [X0]
	0x035F3FB0 BL 0x3EB1AE0
	0x035F3FB4 MOV W22, W31
	0x035F3FB8 MOV X20, X31
	0x035F3FBC CBNZ X19, 0x35F3EAC
	0x035F3FC0 B 0x35F3F0C
	0x035F3FC4 MOV X21, X31
	0x035F3FC8 B 0x35F3FD0
	0x035F3FCC MOV X20, X0
	0x035F3FD0 CBZ X19, 0x35F4034
	0x035F3FD4 LDR X8, [X19]
	0x035F3FD8 ADRP X10, 0xB00000
	0x035F3FDC LDRH W9, [X8 + 0x12E]
	0x035F3FE0 LDR X10, [X10 + 0xE00]
	0x035F3FE4 LDR X1, [X10]
	0x035F3FE8 CBZ X9, 0x35F400C
	0x035F3FEC LDR X10, [X8 + 0xB0]
	0x035F3FF0 ADD X10, X10, 0x8
	0x035F3FF4 LDUR X11, [X10 - 0x8]
	0x035F3FF8 CMP X11, X1
	0x035F3FFC B.EQ 0x35F401C
	0x035F4000 SUBS X9, X9, 0x1
	0x035F4004 ADD X10, X10, 0x10
	0x035F4008 B.NE 0x35F3FF4
	0x035F400C MOV X0, X19
	0x035F4010 MOV W2, W31
	0x035F4014 BL 0x1C5C788
	0x035F4018 B 0x35F4028
	0x035F401C LDRSW X9, [X10]
	0x035F4020 ADD X8, X8, X9, 0x4, LSL
	0x035F4024 ADD X0, X8, 0x138
	0x035F4028 LDP X8, X1, [X0]
	0x035F402C MOV X0, X19
	0x035F4030 BLR X8
	0x035F4034 CBNZ X21, 0x35F4040
	0x035F4038 MOV X0, X20
	0x035F403C BL 0x1D2C690
	0x035F4040 MOV X0, X21
	0x035F4044 BL 0x1C16F18
	0x035F4048 BL 0x1990590
	0x035F404C STR X30, [X31 - 0x40]!
	0x035F4050 STP X24, X23, [X31 + 0x10]
	0x035F4054 STP X22, X21, [X31 + 0x20]
	0x035F4058 STP X20, X19, [X31 + 0x30]
	0x035F405C ADRP X23, 0xDEC000
	0x035F4060 ADRP X21, 0xB45000
	0x035F4064 LDRB W8, [X23 + 0x2EF]
	0x035F4068 LDR X21, [X21 + 0xF00]
	0x035F406C MOV X19, X2
	0x035F4070 MOV W20, W1
	0x035F4074 MOV X22, X0
	0x035F4078 TBNZ X8, 0x0, 0x35F4090
	0x035F407C ADRP X0, 0xB45000
	0x035F4080 LDR X0, [X0 + 0xF00]
	0x035F4084 BL 0x1C16CF4
	0x035F4088 MOVZ W8, 0x1
	0x035F408C STRB W8, [X23 + 0x2EF]
	0x035F4090 LDR X0, [X21]
	0x035F4094 CMP W20, 0x0
	0x035F4098 MOVN W8, 0x7F
	0x035F409C MOVN W9, 0x5F
	0x035F40A0 CSEL W23, W9, W8, EQ
	0x035F40A4 BL 0x1C16F10
	0x035F40A8 MOV X1, X22
	0x035F40AC MOV X2, X31
	0x035F40B0 MOV X21, X0
	0x035F40B4 BL 0x364C49C
	0x035F40B8 CBZ X21, 0x35F41C0
	0x035F40BC MOV X0, X21
	0x035F40C0 MOV X1, X31
	0x035F40C4 BL 0x364C680
	0x035F40C8 TBZ X0, 0x0, 0x35F414C
	0x035F40CC ORR W23, W23, W20, 0x0
	0x035F40D0 SUB W24, W20, 0x1
	0x035F40D4 MOV X0, X21
	0x035F40D8 MOV X1, X31
	0x035F40DC BL 0x364C690
	0x035F40E0 AND W8, W0, 0xFF
	0x035F40E4 CMP W8, W23, UXTB
	0x035F40E8 B.NE 0x35F4100
	0x035F40EC CBZ W20, 0x35F4110
	0x035F40F0 CMP W24, 0x2
	0x035F40F4 B.CC 0x35F4164
	0x035F40F8 CMP W20, 0x6
	0x035F40FC B.EQ 0x35F4164
	0x035F4100 MOV X0, X21
	0x035F4104 MOV X1, X31
	0x035F4108 BL 0x364C724
	0x035F410C B 0x35F413C
	0x035F4110 MOV X0, X21
	0x035F4114 MOV X1, X31
	0x035F4118 BL 0x364D218
	0x035F411C CBZ X0, 0x35F41C0
	0x035F4120 MOV X1, X31
	0x035F4124 MOV X22, X0
	0x035F4128 BL 0x364CCFC
	0x035F412C MOV X1, X19
	0x035F4130 MOV X2, X31
	0x035F4134 BL 0x321BA08
	0x035F4138 TBNZ X0, 0x0, 0x35F4180
	0x035F413C MOV X0, X21
	0x035F4140 MOV X1, X31
	0x035F4144 BL 0x364C680
	0x035F4148 TBNZ X0, 0x0, 0x35F40D4
	0x035F414C LDP X20, X19, [X31 + 0x30]
	0x035F4150 LDP X22, X21, [X31 + 0x20]
	0x035F4154 LDP X24, X23, [X31 + 0x10]
	0x035F4158 MOV X0, X31
	0x035F415C LDR X30, [X31], #0x40
	0x035F4160 RET
	0x035F4164 MOV X0, X21
	0x035F4168 LDP X20, X19, [X31 + 0x30]
	0x035F416C LDP X22, X21, [X31 + 0x20]
	0x035F4170 LDP X24, X23, [X31 + 0x10]
	0x035F4174 MOV X1, X31
	0x035F4178 LDR X30, [X31], #0x40
	0x035F417C B 0x364D2A8
	0x035F4180 MOV X0, X22
	0x035F4184 MOV X1, X31
	0x035F4188 BL 0x364C690
	0x035F418C AND W8, W0, 0xFF
	0x035F4190 CMP W8, 0xA0
	0x035F4194 B.NE 0x35F41C4
	0x035F4198 MOV X0, X22
	0x035F419C MOV X1, X31
	0x035F41A0 BL 0x364D218
	0x035F41A4 CBZ X0, 0x35F41C0
	0x035F41A8 LDP X20, X19, [X31 + 0x30]
	0x035F41AC LDP X22, X21, [X31 + 0x20]
	0x035F41B0 LDP X24, X23, [X31 + 0x10]
	0x035F41B4 MOV X1, X31
	0x035F41B8 LDR X30, [X31], #0x40
	0x035F41BC B 0x364CFC4
	0x035F41C0 BL 0x1C16F20
	0x035F41C4 ADRP X0, 0xB2C000
	0x035F41C8 LDR X0, [X0 + 0xCE0]
	0x035F41CC BL 0x1C16D08
	0x035F41D0 BL 0x1C16F10
	0x035F41D4 MOV X19, X0
	0x035F41D8 ADRP X0, 0xB45000
	0x035F41DC LDR X0, [X0 + 0xF30]
	0x035F41E0 BL 0x1C16D08
	0x035F41E4 MOV X1, X0
	0x035F41E8 MOV X0, X19
	0x035F41EC MOV X2, X31
	0x035F41F0 BL 0x3252170
	0x035F41F4 ADRP X0, 0xB45000
	0x035F41F8 LDR X0, [X0 + 0xF88]
	0x035F41FC BL 0x1C16D08
	0x035F4200 MOV X1, X0
	0x035F4204 MOV X0, X19
	0x035F4208 BL 0x1C16DEC
	0x035F420C STP X30, X21, [X31 - 0x20]!
	0x035F4210 STP X20, X19, [X31 + 0x10]
	0x035F4214 ADRP X20, 0xDEC000
	0x035F4218 ADRP X21, 0xB45000
	0x035F421C LDRB W8, [X20 + 0x2F0]
	0x035F4220 LDR X21, [X21 + 0xF90]
	0x035F4224 MOV X19, X0
	0x035F4228 TBNZ X8, 0x0, 0x35F4240
	0x035F422C ADRP X0, 0xB45000
	0x035F4230 LDR X0, [X0 + 0xF90]
	0x035F4234 BL 0x1C16CF4
	0x035F4238 MOVZ W8, 0x1
	0x035F423C STRB W8, [X20 + 0x2F0]
	0x035F4240 LDR X0, [X21]
	0x035F4244 BL 0x1C16F10
	0x035F4248 MOV X1, X31
	0x035F424C MOV X20, X0
	0x035F4250 BL 0x33BDD8C
	0x035F4254 MOVN W8, 0x1
	0x035F4258 MOV X0, X31
	0x035F425C STR W8, [X20 + 0x10]
	0x035F4260 BL 0x33C151C
	0x035F4264 STR W0, [X20 + 0x28]
	0x035F4268 STR X19, [X20 + 0x38]
	0x035F426C MOV X0, X20
	0x035F4270 LDP X20, X19, [X31 + 0x10]
	0x035F4274 LDP X30, X21, [X31], #0x20
	0x035F4278 RET
	0x035F427C STR X30, [X31 - 0x20]!
	0x035F4280 STP X20, X19, [X31 + 0x10]
	0x035F4284 MOV W19, W1
	0x035F4288 MOV X1, X31
	0x035F428C MOV X20, X0
	0x035F4290 BL 0x33BDD8C
	0x035F4294 MOV X0, X31
	0x035F4298 STR W19, [X20 + 0x10]
	0x035F429C BL 0x33C151C
	0x035F42A0 STR W0, [X20 + 0x28]
	0x035F42A4 LDP X20, X19, [X31 + 0x10]
	0x035F42A8 LDR X30, [X31], #0x20
	0x035F42AC RET
	0x035F42B0 RET
	0x035F42B4 SUB X31, X31, 0x40
	0x035F42B8 STR X30, [X31 + 0x10]
	0x035F42BC STP X22, X21, [X31 + 0x20]
	0x035F42C0 STP X20, X19, [X31 + 0x30]
	0x035F42C4 ADRP X20, 0xDEC000
	0x035F42C8 LDRB W8, [X20 + 0x2F2]
	0x035F42CC MOV X19, X0
	0x035F42D0 TBNZ X8, 0x0, 0x35F4330
	0x035F42D4 ADRP X0, 0xB45000
	0x035F42D8 LDR X0, [X0 + 0xF00]
	0x035F42DC BL 0x1C16CF4
	0x035F42E0 ADRP X0, 0xB45000
	0x035F42E4 LDR X0, [X0 + 0xF98]
	0x035F42E8 BL 0x1C16CF4
	0x035F42EC ADRP X0, 0xB45000
	0x035F42F0 LDR X0, [X0 + 0xFA0]
	0x035F42F4 BL 0x1C16CF4
	0x035F42F8 ADRP X0, 0xB45000
	0x035F42FC LDR X0, [X0 + 0xFA8]
	0x035F4300 BL 0x1C16CF4
	0x035F4304 ADRP X0, 0xB45000
	0x035F4308 LDR X0, [X0 + 0xFB0]
	0x035F430C BL 0x1C16CF4
	0x035F4310 ADRP X0, 0xB45000
	0x035F4314 LDR X0, [X0 + 0xFB8]
	0x035F4318 BL 0x1C16CF4
	0x035F431C ADRP X0, 0xB45000
	0x035F4320 LDR X0, [X0 + 0xFC0]
	0x035F4324 BL 0x1C16CF4
	0x035F4328 MOVZ W8, 0x1
	0x035F432C STRB W8, [X20 + 0x2F2]
	0x035F4330 LDR W8, [X19 + 0x10]
	0x035F4334 CMP W8, 0x1
	0x035F4338 B.EQ 0x35F43F0
	0x035F433C CBNZ W8, 0x35F4528
	0x035F4340 LDR X8, [X19 + 0x30]
	0x035F4344 MOVN W9, 0x0
	0x035F4348 STR W9, [X19 + 0x10]
	0x035F434C CBZ X8, 0x35F4540
	0x035F4350 LDR X21, [X8 + 0x18]
	0x035F4354 ADRP X8, 0xB45000
	0x035F4358 LDR X8, [X8 + 0xF00]
	0x035F435C LDR X0, [X8]
	0x035F4360 BL 0x1C16F10
	0x035F4364 MOV X1, X21
	0x035F4368 MOV X2, X31
	0x035F436C MOV X20, X0
	0x035F4370 BL 0x364C49C
	0x035F4374 ADRP X8, 0xB45000
	0x035F4378 LDR X8, [X8 + 0xFC0]
	0x035F437C LDR X0, [X8]
	0x035F4380 BL 0x1C16F10
	0x035F4384 ADRP X8, 0xB45000
	0x035F4388 LDR X8, [X8 + 0xFB0]
	0x035F438C MOV X21, X0
	0x035F4390 LDR X1, [X8]
	0x035F4394 BL 0x2601D04
	0x035F4398 STR X21, [X19 + 0x40]
	0x035F439C CBZ X20, 0x35F4540
	0x035F43A0 MOV X0, X20
	0x035F43A4 MOV X1, X31
	0x035F43A8 BL 0x364C680
	0x035F43AC TBZ X0, 0x0, 0x35F4514
	0x035F43B0 ADRP X22, 0xB45000
	0x035F43B4 LDR X22, [X22 + 0xFA8]
	0x035F43B8 LDR X21, [X19 + 0x40]
	0x035F43BC MOV X0, X20
	0x035F43C0 MOV X1, X31
	0x035F43C4 BL 0x364D220
	0x035F43C8 CBZ X21, 0x35F4540
	0x035F43CC LDR X2, [X22]
	0x035F43D0 MOV X1, X0
	0x035F43D4 MOV X0, X21
	0x035F43D8 BL 0x2602314
	0x035F43DC MOV X0, X20
	0x035F43E0 MOV X1, X31
	0x035F43E4 BL 0x364C680
	0x035F43E8 TBNZ X0, 0x0, 0x35F43B8
	0x035F43EC B 0x35F4514
	0x035F43F0 MOVN W8, 0x0
	0x035F43F4 STR W8, [X19 + 0x10]
	0x035F43F8 B 0x35F4410
	0x035F43FC ADRP X8, 0xB45000
	0x035F4400 LDR X8, [X8 + 0xFA0]
	0x035F4404 LDR X1, [X8]
	0x035F4408 BL 0x26022C0
	0x035F440C STR X0, [X19 + 0x48]
	0x035F4410 ADRP X22, 0xB45000
	0x035F4414 LDR X22, [X22 + 0xF98]
	0x035F4418 LDR X0, [X19 + 0x48]
	0x035F441C CBZ X0, 0x35F4540
	0x035F4420 MOV X1, X31
	0x035F4424 BL 0x364C680
	0x035F4428 TBZ X0, 0x0, 0x35F4510
	0x035F442C LDR X0, [X19 + 0x48]
	0x035F4430 CBZ X0, 0x35F4540
	0x035F4434 MOV X1, X31
	0x035F4438 BL 0x364D218
	0x035F443C CBZ X0, 0x35F4540
	0x035F4440 MOV X1, X31
	0x035F4444 MOV X21, X0
	0x035F4448 BL 0x364CCFC
	0x035F444C MOV X20, X0
	0x035F4450 MOV X0, X21
	0x035F4454 MOV X1, X31
	0x035F4458 BL 0x364C690
	0x035F445C AND W8, W0, 0xFF
	0x035F4460 CMP W8, 0x13
	0x035F4464 MOV X2, X31
	0x035F4468 B.LE 0x35F4494
	0x035F446C CMP W8, 0x14
	0x035F4470 B.EQ 0x35F44B4
	0x035F4474 CMP W8, 0x16
	0x035F4478 B.EQ 0x35F44C4
	0x035F447C CMP W8, 0x1E
	0x035F4480 B.NE 0x35F44E4
	0x035F4484 MOV X0, X21
	0x035F4488 MOV X1, X31
	0x035F448C BL 0x364D958
	0x035F4490 B 0x35F44E0
	0x035F4494 CMP W8, 0xC
	0x035F4498 B.EQ 0x35F44D4
	0x035F449C CMP W8, 0x13
	0x035F44A0 B.NE 0x35F44E4
	0x035F44A4 MOV X0, X21
	0x035F44A8 MOV X1, X31
	0x035F44AC BL 0x364D228
	0x035F44B0 B 0x35F44E0
	0x035F44B4 MOV X0, X21
	0x035F44B8 MOV X1, X31
	0x035F44BC BL 0x364D328
	0x035F44C0 B 0x35F44E0
	0x035F44C4 MOV X0, X21
	0x035F44C8 MOV X1, X31
	0x035F44CC BL 0x364D2A8
	0x035F44D0 B 0x35F44E0
	0x035F44D4 MOV X0, X21
	0x035F44D8 MOV X1, X31
	0x035F44DC BL 0x364CFC4
	0x035F44E0 MOV X2, X0
	0x035F44E4 CBZ X2, 0x35F4418
	0x035F44E8 LDR X3, [X22]
	0x035F44EC ADD X0, X31, 0x0
	0x035F44F0 MOV X1, X20
	0x035F44F4 STP X31, X31, [X31]
	0x035F44F8 BL 0x2EE2840
	0x035F44FC LDR V0, [X31]
	0x035F4500 MOVZ W0, 0x1
	0x035F4504 STR W0, [X19 + 0x10]
	0x035F4508 STUR V0, [X19 + 0x18]
	0x035F450C B 0x35F452C
	0x035F4510 STR X31, [X19 + 0x48]
	0x035F4514 LDR X0, [X19 + 0x40]
	0x035F4518 CBZ X0, 0x35F4540
	0x035F451C LDR W8, [X0 + 0x18]
	0x035F4520 CMP W8, 0x0
	0x035F4524 B.GT 0x35F43FC
	0x035F4528 MOV W0, W31
	0x035F452C LDP X20, X19, [X31 + 0x30]
	0x035F4530 LDP X22, X21, [X31 + 0x20]
	0x035F4534 LDR X30, [X31 + 0x10]
	0x035F4538 ADD X31, X31, 0x40
	0x035F453C RET
	0x035F4540 BL 0x1C16F20
	0x035F4544 LDP X8, X1, [X0 + 0x18]
	0x035F4548 MOV X0, X8
	0x035F454C RET
	0x035F4550 STP X30, X19, [X31 - 0x10]!
	0x035F4554 ADRP X0, 0xAFF000
	0x035F4558 LDR X0, [X0 + 0xB40]
	0x035F455C BL 0x1C16D08
	0x035F4560 BL 0x1C16F10
	0x035F4564 MOV X1, X31
	0x035F4568 MOV X19, X0
	0x035F456C BL 0x3380310
	0x035F4570 ADRP X0, 0xB45000
	0x035F4574 LDR X0, [X0 + 0xFC8]
	0x035F4578 BL 0x1C16D08
	0x035F457C MOV X1, X0
	0x035F4580 MOV X0, X19
	0x035F4584 BL 0x1C16DEC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xDEE000
	015 Move X25, 0xB47000
	016 Move W8, [X19+748]
	017 Move X25, [X25+3840]
	018 Move X21, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0xB09000
	025 Move X0, [X0+3272]
	026 Call 0x1C17CF4
	027 Move X0, 0xB47000
	028 Move X0, [X0+3840]
	029 Call 0x1C17CF4
	030 Move X0, 0xB47000
	031 Move X0, [X0+3848]
	032 Call 0x1C17CF4
	033 Move X0, 0xB47000
	034 Move X0, [X0+3856]
	035 Call 0x1C17CF4
	036 Move X0, 0xB47000
	037 Move X0, [X0+3864]
	038 Call 0x1C17CF4
	039 Move X0, 0xB47000
	040 Move X0, [X0+3872]
	041 Call 0x1C17CF4
	042 Move X0, 0xB47000
	043 Move X0, [X0+3880]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+748], W8
	047 Move X0, [X25]
	048 Call 0x1C17F10
	049 Move X1, X21
	050 Move X2, X31
	051 Move X19, X0
	052 Call DerSequenceReader..ctor, X0, X1
	053 Compare X19, 0
	054 JumpIfEqual {536}
	055 Move X0, X19
	056 Move X1, X31
	057 Call DerSequenceReader.ReadSequence, X0
	058 Compare X0, 0
	059 JumpIfEqual {536}
	060 Move X1, X31
	061 Move X22, X0
	062 Call DerSequenceReader.PeekTag, X0
	063 And W8, W0, 255
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X22
	066 Move X1, X31
	067 Move [X31+8], X19
	068 Call DerSequenceReader.ReadSequence, X0
	069 Compare X0, 0
	070 JumpIfEqual {536}
	071 Move X1, X31
	072 Call DerSequenceReader.ReadInteger, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X20+16], W0
	075 Move X0, 0xB2E000
	076 Move X0, [X0+3296]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X31
	080 Move X19, X0
	081 Call CryptographicException..ctor, X0
	082 Call DerSequenceReader.PeekTag, X0
	083 And W8, W0, 255
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X20+16], W31
	086 Move X0, X22
	087 Move X1, X31
	088 Call DerSequenceReader.ReadIntegerBytes, X0
	089 Move [X20+24], X0
	090 Move X0, X22
	091 Move X1, X31
	092 Call DerSequenceReader.ReadSequence, X0
	093 Compare X0, 0
	094 JumpIfEqual {536}
	095 Move X1, X31
	096 Move X23, X0
	097 Call DerSequenceReader.ReadOidAsString, X0
	098 Move [X20+32], X0
	099 Move X0, X23
	100 Move X1, X31
	101 Call DerSequenceReader.get_HasData, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {109}
	106 Move X0, X23
	107 Move X1, X31
	108 Call DerSequenceReader.ReadNextEncodedValue, X0
	109 Move X8, 0xB09000
	110 Move X8, [X8+3272]
	111 Move X24, [X8]
	112 Move X8, [X24+56]
	113 Compare X8, 0
	114 JumpIfNotEqual {118}
	115 Move X0, X24
	116 Call 0x1C5D6E0
	117 Move X8, [X24+56]
	118 Move X0, [X8+16]
	119 Move W8, [X0+309]
	120 Move TEMP, X8
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {125}
	124 Call 0x1C5D684
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X8, [X24+56]
	130 Move X0, [X8+16]
	131 Move W8, [X0+309]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 Call 0x1C5D684
	137 Move X8, [X0+184]
	138 Move X0, [X8]
	139 Move [X20+40], X0
	140 Move X0, X23
	141 Move X1, X31
	142 Call DerSequenceReader.get_HasData, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {426}
	147 Move X19, 0xB46000
	148 Move X19, [X19+3872]
	149 Move X0, X22
	150 Move X1, X31
	151 Call DerSequenceReader.ReadNextEncodedValue, X0
	152 Move X8, [X19]
	153 Move X23, X0
	154 Move X0, X8
	155 Call 0x1C17F10
	156 Move X1, X23
	157 Move X2, X31
	158 Move X24, X0
	159 Call X500DistinguishedName..ctor, X0, X1
	160 Move X0, X22
	161 Move X1, X31
	162 Move [X20+48], X24
	163 Call DerSequenceReader.ReadSequence, X0
	164 Compare X0, 0
	165 JumpIfEqual {536}
	166 Move X1, X31
	167 Move X23, X0
	168 Call DerSequenceReader.ReadX509Date, X0
	169 Move [X20+56], X0
	170 Move X0, X23
	171 Move X1, X31
	172 Call DerSequenceReader.ReadX509Date, X0
	173 Move [X20+64], X0
	174 Move X0, X23
	175 Move X1, X31
	176 Call DerSequenceReader.get_HasData, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {426}
	181 Move X0, X22
	182 Move X1, X31
	183 Call DerSequenceReader.ReadNextEncodedValue, X0
	184 Move X8, [X19]
	185 Move X23, X0
	186 Move X0, X8
	187 Call 0x1C17F10
	188 Move X1, X23
	189 Move X2, X31
	190 Move X24, X0
	191 Call X500DistinguishedName..ctor, X0, X1
	192 Move X0, X22
	193 Move X1, X31
	194 Move [X20+72], X24
	195 Call DerSequenceReader.ReadNextEncodedValue, X0
	196 Move [X20+8], X0
	197 Move X24, X0
	198 Move X0, [X25]
	199 Call 0x1C17F10
	200 Move X1, X24
	201 Move X2, X31
	202 Move X23, X0
	203 Call DerSequenceReader..ctor, X0, X1
	204 Compare X23, 0
	205 JumpIfEqual {536}
	206 Move X0, X23
	207 Move X1, X31
	208 Call DerSequenceReader.ReadSequence, X0
	209 Compare X0, 0
	210 JumpIfEqual {536}
	211 Move X1, X31
	212 Move X24, X0
	213 Call DerSequenceReader.ReadOidAsString, X0
	214 Move [X20+80], X0
	215 Move X0, X24
	216 Move X1, X31
	217 Call DerSequenceReader.get_HasData, X0
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {225}
	222 Move X0, X24
	223 Move X1, X31
	224 Call DerSequenceReader.ReadNextEncodedValue, X0
	225 Move X8, 0xB08000
	226 Move X8, [X8+3272]
	227 Move X25, [X8]
	228 Move X8, [X25+56]
	229 Compare X8, 0
	230 JumpIfNotEqual {234}
	231 Move X0, X25
	232 Call 0x1C5D6E0
	233 Move X8, [X25+56]
	234 Move X0, [X8+16]
	235 Move W8, [X0+309]
	236 Move TEMP, X8
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfEqual {241}
	240 Call 0x1C5D684
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X8, [X25+56]
	246 Move X0, [X8+16]
	247 Move W8, [X0+309]
	248 Move TEMP, X8
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {253}
	252 Call 0x1C5D684
	253 Move X8, [X0+184]
	254 Move X0, [X8]
	255 Move [X20+88], X0
	256 Move X0, X24
	257 Move X1, X31
	258 Call DerSequenceReader.get_HasData, X0
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {426}
	263 Move X0, X23
	264 Move X1, X31
	265 Call DerSequenceReader.ReadBitString, X0
	266 Move [X20+96], X0
	267 Move X0, X23
	268 Move X1, X31
	269 Call DerSequenceReader.get_HasData, X0
	270 Move TEMP, X0
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {426}
	274 Move W8, [X20+16]
	275 Move [X31], X21
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X0, X22
	278 Move X1, X31
	279 Call DerSequenceReader.get_HasData, X0
	280 Move W8, W0
	281 Move X0, X31
	282 Move TEMP, X8
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfNotEqual {296}
	286 Move X0, X22
	287 Move X1, X31
	288 Call DerSequenceReader.PeekTag, X0
	289 And W8, W0, 255
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X0, X31
	292 Move X0, X22
	293 Move X1, X31
	294 Call DerSequenceReader.ReadBitString, X0
	295 Move X0, X31
	296 Move W8, [X20+16]
	297 Move X21, 0xB46000
	298 Move X19, 0xB46000
	299 Move X21, [X21+3864]
	300 Move X19, [X19+3856]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move [X20+104], X0
	303 Move X0, X22
	304 Move X1, X31
	305 Call DerSequenceReader.get_HasData, X0
	306 Move W8, W0
	307 Move X0, X31
	308 Move TEMP, X8
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {322}
	312 Move X0, X22
	313 Move X1, X31
	314 Call DerSequenceReader.PeekTag, X0
	315 And W8, W0, 255
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, X31
	318 Move X0, X22
	319 Move X1, X31
	320 Call DerSequenceReader.ReadBitString, X0
	321 Move X0, X31
	322 Move [X20+112], X0
	323 Move X0, [X21]
	324 Call 0x1C17F10
	325 Move X1, [X19]
	326 Move X23, X0
	327 Call List`1<Object>..ctor, X0
	328 Move W8, [X20+16]
	329 Move [X20+120], X23
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X22
	332 Move X1, X31
	333 Call DerSequenceReader.get_HasData, X0
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {444}
	338 Move X0, X22
	339 Move X1, X31
	340 Call DerSequenceReader.PeekTag, X0
	341 And W8, W0, 255
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X0, X22
	344 Move X1, X31
	345 Call DerSequenceReader.ReadSequence, X0
	346 Compare X0, 0
	347 JumpIfEqual {536}
	348 Move X1, X31
	349 Call DerSequenceReader.ReadSequence, X0
	350 Compare X0, 0
	351 JumpIfEqual {536}
	352 Move X19, 0xB46000
	353 Move X21, 0xB46000
	354 Move X19, [X19+3880]
	355 Move X21, [X21+3848]
	356 Move X23, X0
	357 Move X0, X23
	358 Move X1, X31
	359 Call DerSequenceReader.get_HasData, X0
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {444}
	364 Move X0, X23
	365 Move X1, X31
	366 Call DerSequenceReader.ReadSequence, X0
	367 Compare X0, 0
	368 JumpIfEqual {536}
	369 Move X1, X31
	370 Move X24, X0
	371 Call DerSequenceReader.ReadOidAsString, X0
	372 Move X26, X0
	373 Move X0, X24
	374 Move X1, X31
	375 Call DerSequenceReader.PeekTag, X0
	376 And W8, W0, 255
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X0, X24
	379 Move X1, X31
	380 Call DerSequenceReader.ReadBoolean, X0
	381 Move W28, W0
	382 Move W28, W31
	383 Move X0, X24
	384 Move X1, X31
	385 Call DerSequenceReader.ReadOctetString, X0
	386 Move X8, [X19]
	387 Move X25, [X20+120]
	388 Move X29, X0
	389 Move X0, X8
	390 Call 0x1C17F10
	391 And W3, W28, 1
	392 Move X1, X26
	393 Move X2, X29
	394 Move X4, X31
	395 Move X27, X0
	396 Call X509Extension..ctor, X0, X1, X2, X3
	397 Compare X25, 0
	398 JumpIfEqual {536}
	399 Move W10, [X25+28]
	400 Move X8, [X25+16]
	401 Move X9, [X21]
	402 Add W10, W10, 1
	403 Move [X25+28], W10
	404 Compare X8, 0
	405 JumpIfEqual {536}
	406 NotImplemented "Instruction LDRSW not yet implemented."
	407 Move W11, [X8+24]
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Add W9, W10, 1
	410 Add X8, X8, X10
	411 Move [X25+24], W9
	412 Move [X8+32], X27
	413 Move X8, [X9+32]
	414 Move X0, X25
	415 Move X1, X27
	416 Move X8, [X8+192]
	417 Move X2, [X8+112]
	418 Call List`1<Object>.AddWithResize, X0, X1
	419 Move X0, X24
	420 Move X1, X31
	421 Call DerSequenceReader.get_HasData, X0
	422 Move TEMP, X0
	423 And TEMP, TEMP, 1
	424 Compare TEMP, 1
	425 JumpIfNotEqual {357}
	426 Move X0, 0xB2D000
	427 Move X0, [X0+3296]
	428 Call 0x1C17D08
	429 Call 0x1C17F10
	430 Move X19, X0
	431 Move X0, 0xB46000
	432 Move X0, [X0+3888]
	433 Call 0x1C17D08
	434 Move X1, X0
	435 Move X0, X19
	436 Move X2, X31
	437 Call CryptographicException..ctor, X0, X1
	438 Move X0, 0xB46000
	439 Move X0, [X0+3896]
	440 Call 0x1C17D08
	441 Move X1, X0
	442 Move X0, X19
	443 Call 0x1C17DEC
	444 Move X0, X22
	445 Move X1, X31
	446 Call DerSequenceReader.get_HasData, X0
	447 Move TEMP, X0
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfEqual {426}
	451 Move X21, [X31+8]
	452 Move X1, X31
	453 Move X0, X21
	454 Call DerSequenceReader.ReadSequence, X0
	455 Move X19, [X31]
	456 Compare X0, 0
	457 JumpIfEqual {536}
	458 Move X1, X31
	459 Move X22, X0
	460 Call DerSequenceReader.ReadOidAsString, X0
	461 Move [X20+128], X0
	462 Move X0, X22
	463 Move X1, X31
	464 Call DerSequenceReader.get_HasData, X0
	465 Move TEMP, X0
	466 And TEMP, TEMP, 1
	467 Compare TEMP, 1
	468 JumpIfNotEqual {472}
	469 Move X0, X22
	470 Move X1, X31
	471 Call DerSequenceReader.ReadNextEncodedValue, X0
	472 Move X8, 0xB08000
	473 Move X8, [X8+3272]
	474 Move X23, [X8]
	475 Move X8, [X23+56]
	476 Compare X8, 0
	477 JumpIfNotEqual {481}
	478 Move X0, X23
	479 Call 0x1C5D6E0
	480 Move X8, [X23+56]
	481 Move X0, [X8+16]
	482 Move W8, [X0+309]
	483 Move TEMP, X8
	484 And TEMP, TEMP, 1
	485 Compare TEMP, 1
	486 JumpIfEqual {488}
	487 Call 0x1C5D684
	488 Move W8, [X0+224]
	489 Compare W8, 0
	490 JumpIfNotEqual {492}
	491 Call 0x1C17DFC
	492 Move X8, [X23+56]
	493 Move X0, [X8+16]
	494 Move W8, [X0+309]
	495 Move TEMP, X8
	496 And TEMP, TEMP, 1
	497 Compare TEMP, 1
	498 JumpIfEqual {500}
	499 Call 0x1C5D684
	500 Move X8, [X0+184]
	501 Move X0, [X8]
	502 Move [X20+136], X0
	503 Move X0, X22
	504 Move X1, X31
	505 Call DerSequenceReader.get_HasData, X0
	506 Move TEMP, X0
	507 And TEMP, TEMP, 1
	508 Compare TEMP, 1
	509 JumpIfEqual {426}
	510 Move X0, X21
	511 Move X1, X31
	512 Call DerSequenceReader.ReadBitString, X0
	513 Move [X20+144], X0
	514 Move X0, X21
	515 Move X1, X31
	516 Call DerSequenceReader.get_HasData, X0
	517 Move TEMP, X0
	518 And TEMP, TEMP, 1
	519 Compare TEMP, 1
	520 JumpIfEqual {426}
	521 Move [X20], X19
	522 Move X20, [X31+96]
	523 Move X19, [X31+104]
	524 Move X22, [X31+80]
	525 Move X21, [X31+88]
	526 Move X24, [X31+64]
	527 Move X23, [X31+72]
	528 Move X26, [X31+48]
	529 Move X25, [X31+56]
	530 Move X28, [X31+32]
	531 Move X27, [X31+40]
	532 Move X29, [X31+16]
	533 Move X30, [X31+24]
	534 Add X31, X31, 112
	535 Return 
	536 Call 0x1C17F20

Method: System.String GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType nameType, System.Boolean forIssuer)

Disassembly:
	0x035F4588 SUB X31, X31, 0x30
	0x035F458C STP X30, X21, [X31 + 0x10]
	0x035F4590 STP X20, X19, [X31 + 0x20]
	0x035F4594 ADRP X21, 0xDEC000
	0x035F4598 ADRP X20, 0xB45000
	0x035F459C LDRB W8, [X21 + 0x2F3]
	0x035F45A0 LDR X20, [X20 + 0xFD0]
	0x035F45A4 MOV X19, X0
	0x035F45A8 TBNZ X8, 0x0, 0x35F45C0
	0x035F45AC ADRP X0, 0xB45000
	0x035F45B0 LDR X0, [X0 + 0xFD0]
	0x035F45B4 BL 0x1C16CF4
	0x035F45B8 MOVZ W8, 0x1
	0x035F45BC STRB W8, [X21 + 0x2F3]
	0x035F45C0 LDUR V0, [X19 + 0x18]
	0x035F45C4 LDR X0, [X20]
	0x035F45C8 ADD X1, X31, 0x0
	0x035F45CC STR V0, [X31]
	0x035F45D0 BL 0x1C16E04
	0x035F45D4 LDP X20, X19, [X31 + 0x20]
	0x035F45D8 LDP X30, X21, [X31 + 0x10]
	0x035F45DC ADD X31, X31, 0x30
	0x035F45E0 RET
	0x035F45E4 STR X30, [X31 - 0x20]!
	0x035F45E8 STP X20, X19, [X31 + 0x10]
	0x035F45EC ADRP X20, 0xDEC000
	0x035F45F0 LDRB W8, [X20 + 0x2F4]
	0x035F45F4 MOV X19, X0
	0x035F45F8 TBNZ X8, 0x0, 0x35F4610
	0x035F45FC ADRP X0, 0xB45000
	0x035F4600 LDR X0, [X0 + 0xF90]
	0x035F4604 BL 0x1C16CF4
	0x035F4608 MOVZ W8, 0x1
	0x035F460C STRB W8, [X20 + 0x2F4]
	0x035F4610 LDR W8, [X19 + 0x10]
	0x035F4614 ADDS W31, W8, 0x2
	0x035F4618 B.NE 0x35F463C
	0x035F461C LDR W20, [X19 + 0x28]
	0x035F4620 MOV X0, X31
	0x035F4624 BL 0x33C151C
	0x035F4628 CMP W20, W0
	0x035F462C B.NE 0x35F463C
	0x035F4630 STR W31, [X19 + 0x10]
	0x035F4634 MOV X20, X19
	0x035F4638 B 0x35F4668
	0x035F463C ADRP X8, 0xB45000
	0x035F4640 LDR X8, [X8 + 0xF90]
	0x035F4644 LDR X0, [X8]
	0x035F4648 BL 0x1C16F10
	0x035F464C MOV X1, X31
	0x035F4650 MOV X20, X0
	0x035F4654 BL 0x33BDD8C
	0x035F4658 MOV X0, X31
	0x035F465C STR W31, [X20 + 0x10]
	0x035F4660 BL 0x33C151C
	0x035F4664 STR W0, [X20 + 0x28]
	0x035F4668 LDR X8, [X19 + 0x38]
	0x035F466C MOV X0, X20
	0x035F4670 STR X8, [X20 + 0x30]
	0x035F4674 LDP X20, X19, [X31 + 0x10]
	0x035F4678 LDR X30, [X31], #0x20
	0x035F467C RET
	0x035F4680 B 0x35F45E4
	0x035F4684 SUB X31, X31, 0x20
	0x035F4688 STR X30, [X31 + 0x10]
	0x035F468C MOV W4, W3
	0x035F4690 MOV W3, W2
	0x035F4694 ADD X2, X31, 0x0
	0x035F4698 STR W31, [X31]
	0x035F469C BL 0x35F46B4
	0x035F46A0 LDR W8, [X31]
	0x035F46A4 LDR X30, [X31 + 0x10]
	0x035F46A8 REV W0, W8
	0x035F46AC ADD X31, X31, 0x20
	0x035F46B0 RET
	0x035F46B4 STR X30, [X31 - 0x10]!
	0x035F46B8 MOV X8, X31
	0x035F46BC SXTW X9, W4
	0x035F46C0 MOVZ W10, 0xA
	0x035F46C4 CMP W3, W4
	0x035F46C8 B.GE 0x35F4714
	0x035F46CC MOV W11, W31
	0x035F46D0 ADD X12, X0, W3, 0x1, SXTW
	0x035F46D4 SUB X13, X9, W3, SXTW
	0x035F46D8 CMP W3, W1
	0x035F46DC B.CS 0x35F4740
	0x035F46E0 LDRH W14, [X12]
	0x035F46E4 CMP W14, 0x3A
	0x035F46E8 B.EQ 0x35F4718
	0x035F46EC CMP W14, 0x2E
	0x035F46F0 B.EQ 0x35F4718
	0x035F46F4 MADD W11, W11, W10, W14
	0x035F46F8 ADD W3, W3, 0x1
	0x035F46FC SUBS X13, X13, 0x1
	0x035F4700 SUB W11, W11, 0x30
	0x035F4704 ADD X12, X12, 0x2
	0x035F4708 B.NE 0x35F46D8
	0x035F470C MOV W3, W4
	0x035F4710 B 0x35F4718
	0x035F4714 MOV W11, W31
	0x035F4718 STRB W11, [X8, X2, LSL]
	0x035F471C ADD X8, X8, 0x1
	0x035F4720 CMP X8, 0x4
	0x035F4724 ADD W3, W3, 0x1
	0x035F4728 B.NE 0x35F46C4
	0x035F472C LDRB W8, [X2]
	0x035F4730 CMP W8, 0x7F
	0x035F4734 CSET W0, EQ
	0x035F4738 LDR X30, [X31], #0x10
	0x035F473C RET
	0x035F4740 BL 0x1C16F28
	0x035F4744 TBNZ X3, 0x0, 0x35F4768
	0x035F4748 TBNZ X5, 0x0, 0x35F4768
	0x035F474C STR X30, [X31 - 0x10]!
	0x035F4750 AND W3, W4, 0x1
	0x035F4754 BL 0x35F48BC
	0x035F4758 ADDS X31, X0, 0x1
	0x035F475C CSET W0, NE
	0x035F4760 LDR X30, [X31], #0x10
	0x035F4764 RET
	0x035F4768 AND W3, W3, 0x1
	0x035F476C AND W4, W4, 0x1
	0x035F4770 B 0x35F4774
	0x035F4774 LDRSW X10, [X2]
	0x035F4778 CMP W10, W1
	0x035F477C B.LE 0x35F48B4
	0x035F4780 MOVZ X13, 0x401
	0x035F4784 MOVZ X16, 0x8
	0x035F4788 MOV W9, W31
	0x035F478C MOV W14, W31
	0x035F4790 MOV W5, W31
	0x035F4794 MOV W17, W31
	0x035F4798 SXTW X8, W1
	0x035F479C ADD X11, X0, W1, 0x1, SXTW
	0x035F47A0 MOVZ W12, 0x1
	0x035F47A4 MOVK X13, 0x1000000
	0x035F47A8 MOVZ W15, 0xA
	0x035F47AC MOVK X16, 0x84000000
	0x035F47B0 LDRH W0, [X11]
	0x035F47B4 TBZ X3, 0x0, 0x35F47D4
	0x035F47B8 SUB W1, W0, 0x25
	0x035F47BC CMP W1, 0x38
	0x035F47C0 B.HI 0x35F4800
	0x035F47C4 LSLV X1, X12, X1
	0x035F47C8 ANDS X31, X1, X13, 0x0
	0x035F47CC B.EQ 0x35F4800
	0x035F47D0 B 0x35F4898
	0x035F47D4 CMP W0, 0x2F
	0x035F47D8 B.EQ 0x35F4898
	0x035F47DC CMP W0, 0x5C
	0x035F47E0 B.EQ 0x35F4898
	0x035F47E4 TBZ X4, 0x0, 0x35F4800
	0x035F47E8 CMP W0, 0x3F
	0x035F47EC B.HI 0x35F4800
	0x035F47F0 MOV W1, W0
	0x035F47F4 LSLV X1, X12, X1
	0x035F47F8 ANDS X31, X1, X16, 0x0
	0x035F47FC B.NE 0x35F4898
	0x035F4800 SUB W1, W0, 0x30
	0x035F4804 CMP W1, 0x9
	0x035F4808 B.LS 0x35F4840
	0x035F480C CMP W0, 0x2E
	0x035F4810 CSET W6, EQ
	0x035F4814 CMP W14, 0x0
	0x035F4818 CSET W14, GT
	0x035F481C AND W14, W17, W14, 0x0
	0x035F4820 MOV W0, W31
	0x035F4824 TBNZ X14, 0x0, 0x35F48B0
	0x035F4828 AND W14, W5, W6, 0x0
	0x035F482C CBZ W14, 0x35F48B0
	0x035F4830 MOV W17, W31
	0x035F4834 MOV W14, W31
	0x035F4838 ADD W9, W9, 0x1
	0x035F483C B 0x35F487C
	0x035F4840 CMP W0, 0x30
	0x035F4844 B.NE 0x35F486C
	0x035F4848 EOR W5, W5, 0x1
	0x035F484C TBZ X5, 0x0, 0x35F486C
	0x035F4850 ADD X17, X8, 0x1
	0x035F4854 CMP X17, X10
	0x035F4858 B.GE 0x35F4868
	0x035F485C LDRH W17, [X11 + 0x2]
	0x035F4860 CMP W17, 0x30
	0x035F4864 B.EQ 0x35F48B4
	0x035F4868 MOVZ W17, 0x1
	0x035F486C MADD W14, W14, W15, W0
	0x035F4870 SUB W14, W14, 0x30
	0x035F4874 CMP W14, 0x100
	0x035F4878 B.GE 0x35F48B4
	0x035F487C AND W0, W1, 0xFFFF
	0x035F4880 ADD X8, X8, 0x1
	0x035F4884 CMP W0, 0xA
	0x035F4888 CSET W5, CC
	0x035F488C CMP X8, X10
	0x035F4890 ADD X11, X11, 0x2
	0x035F4894 B.LT 0x35F47B0
	0x035F4898 MOV W0, W31
	0x035F489C TBZ X5, 0x0, 0x35F48B0
	0x035F48A0 CMP W9, 0x3
	0x035F48A4 B.NE 0x35F48B0
	0x035F48A8 MOVZ W0, 0x1
	0x035F48AC STR W8, [X2]
	0x035F48B0 RET
	0x035F48B4 MOV W0, W31
	0x035F48B8 RET
	0x035F48BC SUB X31, X31, 0x50
	0x035F48C0 STR X30, [X31 + 0x30]
	0x035F48C4 STP X20, X19, [X31 + 0x40]
	0x035F48C8 MRS X9, 0xC000
	0x035F48CC LDR X8, [X9 + 0x28]
	0x035F48D0 MOVI V0.2D, 0x0
	0x035F48D4 STR X8, [X31 + 0x28]
	0x035F48D8 STP V0, V0, [X31]
	0x035F48DC LDRSW X11, [X2]
	0x035F48E0 CMP W11, W1
	0x035F48E4 B.LE 0x35F4B88
	0x035F48E8 MOV X10, X31
	0x035F48EC MOVN W12, 0x0
	0x035F48F0 MOVZ X13, 0x1
	0x035F48F4 ADD X14, X31, 0x0
	0x035F48F8 LDRH W8, [X0, W1, SXTW]
	0x035F48FC CMP W8, 0x30
	0x035F4900 B.NE 0x35F4934
	0x035F4904 ADD W15, W1, 0x1
	0x035F4908 CMP W15, W11
	0x035F490C B.GE 0x35F4940
	0x035F4910 LDRH W8, [X0, W15, SXTW]
	0x035F4914 ORR W8, W8, 0x20
	0x035F4918 CMP W8, 0x78
	0x035F491C B.NE 0x35F4940
	0x035F4920 MOV W16, W31
	0x035F4924 MOV W17, W31
	0x035F4928 ADD W1, W1, 0x2
	0x035F492C MOVZ W8, 0x10
	0x035F4930 B 0x35F4950
	0x035F4934 MOV W16, W31
	0x035F4938 MOVZ W8, 0xA
	0x035F493C B 0x35F494C
	0x035F4940 MOVZ W8, 0x8
	0x035F4944 MOVZ W16, 0x1
	0x035F4948 MOV W1, W15
	0x035F494C MOVZ W17, 0x1
	0x035F4950 CMP W1, W11
	0x035F4954 B.GE 0x35F4A5C
	0x035F4958 MOV X15, X31
	0x035F495C MOV W4, W8
	0x035F4960 SBFM X5, X1, 0x20, 0x1F
	0x035F4964 ADD X6, X0, W1, 0x1, SXTW
	0x035F4968 SUB X7, X11, W1, SXTW
	0x035F496C LDRH W19, [X6]
	0x035F4970 CMP W8, 0x8
	0x035F4974 B.EQ 0x35F49D0
	0x035F4978 CMP W8, 0x10
	0x035F497C B.EQ 0x35F4988
	0x035F4980 CMP W8, 0xA
	0x035F4984 B.NE 0x35F4998
	0x035F4988 SUB W20, W19, 0x30
	0x035F498C AND W20, W20, 0xFFFF
	0x035F4990 CMP W20, 0x9
	0x035F4994 B.LS 0x35F49DC
	0x035F4998 SUB W20, W19, 0x61
	0x035F499C AND W20, W20, 0xFFFF
	0x035F49A0 CMP W20, 0x6
	0x035F49A4 CSET W20, CC
	0x035F49A8 BIC W20, W20, W17, 0x0
	0x035F49AC TBNZ X20, 0x0, 0x35F49E4
	0x035F49B0 SUB W20, W19, 0x41
	0x035F49B4 AND W20, W20, 0xFFFF
	0x035F49B8 CMP W20, 0x5
	0x035F49BC CSET W20, HI
	0x035F49C0 ORR W20, W20, W17, 0x0
	0x035F49C4 TBNZ X20, 0x0, 0x35F4A14
	0x035F49C8 MOVN X16, 0x36
	0x035F49CC B 0x35F49E8
	0x035F49D0 AND W20, W19, 0xFFF8
	0x035F49D4 CMP W20, 0x30
	0x035F49D8 B.NE 0x35F4A14
	0x035F49DC MOVN X16, 0x2F
	0x035F49E0 B 0x35F49E8
	0x035F49E4 MOVN X16, 0x56
	0x035F49E8 ADD X16, X16, X19
	0x035F49EC MADD X15, X15, X4, X16
	0x035F49F0 CMP X15, X12
	0x035F49F4 B.GT 0x35F4B88
	0x035F49F8 ADD W1, W1, 0x1
	0x035F49FC ADD X5, X5, X13
	0x035F4A00 ADD X6, X6, 0x2
	0x035F4A04 SUBS X7, X7, 0x1
	0x035F4A08 MOVZ W16, 0x1
	0x035F4A0C B.NE 0x35F496C
	0x035F4A10 B 0x35F4AB0
	0x035F4A14 SBFM X8, X5, 0x1F, 0x3F
	0x035F4A18 LDRH W8, [X8, X0, LSL]
	0x035F4A1C CMP W8, 0x2E
	0x035F4A20 B.NE 0x35F4A60
	0x035F4A24 CMP X10, 0x2
	0x035F4A28 CSET W8, HI
	0x035F4A2C ORN W16, W8, W16, 0x0
	0x035F4A30 MOVN X8, 0x0
	0x035F4A34 TBNZ X16, 0x0, 0x35F4B8C
	0x035F4A38 CMP X15, 0xFF
	0x035F4A3C B.GT 0x35F4B8C
	0x035F4A40 ADD W1, W1, 0x1
	0x035F4A44 STR X15, [X14, X10, LSL #3]
	0x035F4A48 ADD X10, X10, 0x1
	0x035F4A4C CMP W1, W11
	0x035F4A50 MOVN X8, 0x0
	0x035F4A54 B.LT 0x35F48F8
	0x035F4A58 B 0x35F4B8C
	0x035F4A5C MOV X15, X31
	0x035F4A60 TBZ X16, 0x0, 0x35F4B88
	0x035F4A64 CMP W1, W11
	0x035F4A68 B.GE 0x35F4AB0
	0x035F4A6C LDRH W11, [X0, W1, SXTW]
	0x035F4A70 CMP W11, 0x2F
	0x035F4A74 B.EQ 0x35F4AAC
	0x035F4A78 CMP W11, 0x5C
	0x035F4A7C B.EQ 0x35F4AAC
	0x035F4A80 TBZ X3, 0x0, 0x35F4B88
	0x035F4A84 CMP W11, 0x3F
	0x035F4A88 MOVN X8, 0x0
	0x035F4A8C B.HI 0x35F4B8C
	0x035F4A90 MOV W11, W11
	0x035F4A94 MOVZ W12, 0x1
	0x035F4A98 LSLV X11, X12, X11
	0x035F4A9C MOVZ X12, 0x8
	0x035F4AA0 MOVK X12, 0x84000000
	0x035F4AA4 ANDS X31, X11, X12, 0x0
	0x035F4AA8 B.EQ 0x35F4B8C
	0x035F4AAC STR W1, [X2]
	0x035F4AB0 SBFM X8, X10, 0x3D, 0x1F
	0x035F4AB4 ADD X11, X31, 0x0
	0x035F4AB8 CMP W10, 0x3
	0x035F4ABC STR X15, [X8, X11, LSL]
	0x035F4AC0 B.HI 0x35F4B88
	0x035F4AC4 AND X8, X10, 0x0
	0x035F4AC8 ADRP X10, 0xFFFFFFFFFD5A2000
	0x035F4ACC ADD X10, X10, 0xE11
	0x035F4AD0 ADR X11, 0x10
	0x035F4AD4 LDRB W12, [X10, X8, LSL]
	0x035F4AD8 ADD X11, X11, X12, 0x2, LSL
	0x035F4ADC BR X11
	0x035F4AE0 LDR X8, [X31]
	0x035F4AE4 LDR X9, [X9 + 0x28]
	0x035F4AE8 LDR X10, [X31 + 0x28]
	0x035F4AEC MOVZ X11, 0x1
	0x035F4AF0 CMP X8, X11
	0x035F4AF4 CSINV X0, X8, X31, LT
	0x035F4AF8 CMP X9, X10
	0x035F4AFC B.EQ 0x35F4BA0
	0x035F4B00 B 0x35F4BB0
	0x035F4B04 LDR X8, [X31 + 0x8]
	0x035F4B08 MOVN W10, 0xFF000000
	0x035F4B0C CMP X8, X10
	0x035F4B10 B.GT 0x35F4B88
	0x035F4B14 LDR X10, [X31]
	0x035F4B18 BFM X8, X10, 0x28, 0x27
	0x035F4B1C B 0x35F4B8C
	0x035F4B20 LDR X8, [X31 + 0x10]
	0x035F4B24 CMP X8, 0x10000
	0x035F4B28 B.GE 0x35F4B88
	0x035F4B2C LDR W10, [X31 + 0x8]
	0x035F4B30 LDR X11, [X31]
	0x035F4B34 AND X8, X8, 0xFFFF
	0x035F4B38 UBFM W10, W10, 0x10, 0xF
	0x035F4B3C AND X10, X10, 0xFFFFFF
	0x035F4B40 BFM X8, X11, 0x28, 0x27
	0x035F4B44 ORR X8, X8, X10, 0x0
	0x035F4B48 B 0x35F4B8C
	0x035F4B4C LDR X8, [X31 + 0x18]
	0x035F4B50 CMP X8, 0xFF
	0x035F4B54 B.GT 0x35F4B88
	0x035F4B58 LDR W10, [X31 + 0x8]
	0x035F4B5C LDR W11, [X31 + 0x10]
	0x035F4B60 LDR X12, [X31]
	0x035F4B64 AND X8, X8, 0xFF
	0x035F4B68 UBFM W10, W10, 0x10, 0xF
	0x035F4B6C UBFM W11, W11, 0x18, 0x17
	0x035F4B70 AND X10, X10, 0xFFFFFF
	0x035F4B74 BFM X8, X12, 0x28, 0x27
	0x035F4B78 AND X11, X11, 0xFFFF
	0x035F4B7C ORR X8, X8, X10, 0x0
	0x035F4B80 ORR X8, X8, X11, 0x0
	0x035F4B84 B 0x35F4B8C
	0x035F4B88 MOVN X8, 0x0
	0x035F4B8C LDR X9, [X9 + 0x28]
	0x035F4B90 LDR X10, [X31 + 0x28]
	0x035F4B94 CMP X9, X10
	0x035F4B98 B.NE 0x35F4BB0
	0x035F4B9C MOV X0, X8
	0x035F4BA0 LDP X20, X19, [X31 + 0x40]
	0x035F4BA4 LDR X30, [X31 + 0x30]
	0x035F4BA8 ADD X31, X31, 0x50
	0x035F4BAC RET
	0x035F4BB0 BL 0x3EB1B20
	0x035F4BB4 STP X29, X30, [X31 - 0x60]!
	0x035F4BB8 STP X28, X27, [X31 + 0x10]
	0x035F4BBC STP X26, X25, [X31 + 0x20]
	0x035F4BC0 STP X24, X23, [X31 + 0x30]
	0x035F4BC4 STP X22, X21, [X31 + 0x40]
	0x035F4BC8 STP X20, X19, [X31 + 0x50]
	0x035F4BCC ADD X29, X31, 0x0
	0x035F4BD0 SUB X31, X31, 0x10
	0x035F4BD4 MRS X24, 0xC000
	0x035F4BD8 LDR X8, [X24 + 0x28]
	0x035F4BDC ADRP X20, 0xDEC000
	0x035F4BE0 MOV X19, X3
	0x035F4BE4 MOV W21, W2
	0x035F4BE8 STUR X8, [X29 - 0x8]
	0x035F4BEC LDRB W8, [X20 + 0x2F5]
	0x035F4BF0 MOV W22, W1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X22, 0xDED000
	012 Move W8, [X22+749]
	013 Move W20, W2
	014 Move W21, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {79}
	020 Move X0, 0xB46000
	021 Move X0, [X0+3904]
	022 Call 0x1C17CF4
	023 Move X0, 0xB46000
	024 Move X0, [X0+3912]
	025 Call 0x1C17CF4
	026 Move X0, 0xB46000
	027 Move X0, [X0+3920]
	028 Call 0x1C17CF4
	029 Move X0, 0xB00000
	030 Move X0, [X0+3584]
	031 Call 0x1C17CF4
	032 Move X0, 0xB03000
	033 Move X0, [X0+400]
	034 Call 0x1C17CF4
	035 Move X0, 0xB03000
	036 Move X0, [X0+408]
	037 Call 0x1C17CF4
	038 Move X0, 0xB00000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move X0, 0xB03000
	042 Move X0, [X0+432]
	043 Call 0x1C17CF4
	044 Move X0, 0xB03000
	045 Move X0, [X0+440]
	046 Call 0x1C17CF4
	047 Move X0, 0xB46000
	048 Move X0, [X0+3928]
	049 Call 0x1C17CF4
	050 Move X0, 0xB46000
	051 Move X0, [X0+3936]
	052 Call 0x1C17CF4
	053 Move X0, 0xB46000
	054 Move X0, [X0+3944]
	055 Call 0x1C17CF4
	056 Move X0, 0xB46000
	057 Move X0, [X0+3952]
	058 Call 0x1C17CF4
	059 Move X0, 0xB46000
	060 Move X0, [X0+2240]
	061 Call 0x1C17CF4
	062 Move X0, 0xB46000
	063 Move X0, [X0+2832]
	064 Call 0x1C17CF4
	065 Move X0, 0xB46000
	066 Move X0, [X0+3960]
	067 Call 0x1C17CF4
	068 Move X0, 0xB46000
	069 Move X0, [X0+3232]
	070 Call 0x1C17CF4
	071 Move X0, 0xB46000
	072 Move X0, [X0+3968]
	073 Call 0x1C17CF4
	074 Move X0, 0xB00000
	075 Move X0, [X0+2440]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X22+749], W8
	079 Move X22, 0xB46000
	080 Move X24, 0xB46000
	081 Move X22, [X22+3968]
	082 Move X24, [X24+2240]
	083 And W31, W20, 1
	084 Move [X31+32], X31
	085 Move [X31+40], X31
	086 Move [X31+48], X31
	087 Compare W21, 0
	088 JumpIfEqual {104}
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 Move X22, [X8]
	091 Subtract W8, W21, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X31+72], X31
	094 Move X9, -44421120
	095 Add X9, X9, 3596
	096 NotImplemented "Instruction ADR not yet implemented."
	097 Move W11, [X9]
	098 Add X10, X10, X11
	099 CallNoReturn X10
	100 Move X8, 0xB46000
	101 Move X8, [X8+3936]
	102 Add X0, X31, 72
	103 Move W1, 2
	104 Move W8, 72
	105 Move W9, 48
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 Move X0, [X19]
	108 Call CertificateData.GetSimpleNameInfo, X0
	109 Move X23, X0
	110 Compare X0, 0
	111 JumpIfNotEqual {339}
	112 And W31, W20, 1
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 Move X22, [X8]
	115 Move [X31+72], X31
	116 Move X8, 0xB46000
	117 Move X8, [X8+3936]
	118 Add X0, X31, 72
	119 Move W1, 1
	120 Move X8, 0xB46000
	121 Move X8, [X8+3936]
	122 Add X0, X31, 72
	123 Move W1, 6
	124 Move X2, [X8]
	125 Call Nullable`1<Int32Enum>..ctor, X0, X1
	126 Move X24, X31
	127 Move W8, [X31+72]
	128 Compare W8, 0
	129 JumpIfEqual {188}
	130 Move X0, [X19+120]
	131 Compare X0, 0
	132 JumpIfEqual {353}
	133 Move X8, 0xB46000
	134 Move X8, [X8+3928]
	135 Move X1, [X8]
	136 Add X8, X31, 8
	137 Call List`1<Object>.GetEnumerator, X0
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 Move X8, [X31+24]
	140 Move X25, 0xB46000
	141 Move X25, [X25+3912]
	142 Move [X31+2], V0
	143 Move [X31+48], X8
	144 Move X26, 0xB46000
	145 Move X26, [X26+3952]
	146 Move X1, [X25]
	147 Add X0, X31, 32
	148 Call Enumerator<Object>.MoveNext, X0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {183}
	153 Move X23, [X31+48]
	154 Compare X23, 0
	155 JumpIfEqual {351}
	156 Move X8, [X23+16]
	157 Compare X8, 0
	158 JumpIfEqual {352}
	159 Move X0, [X8+16]
	160 Move X1, X22
	161 Move X2, X31
	162 Call String.op_Equality, X0, X1
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {146}
	167 Move X23, [X23+24]
	168 Move X1, [X26]
	169 Add X0, X31, 72
	170 Call Nullable`1<Int32Enum>.get_Value, X0
	171 Move W1, W0
	172 Move X0, X23
	173 Move X2, X24
	174 Call CertificateData.FindAltNameMatch, X0, X1, X2
	175 Move X23, X0
	176 Compare X0, 0
	177 JumpIfEqual {146}
	178 Move X8, 0xB46000
	179 Move X8, [X8+3904]
	180 Add X0, X31, 32
	181 Move X1, [X8]
	182 Call Enumerator<Object>.Dispose, X0
	183 Move X8, 0xB46000
	184 Move X8, [X8+3904]
	185 Add X0, X31, 32
	186 Move X1, [X8]
	187 Call Enumerator<Object>.Dispose, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X8, 0xB46000
	191 Move X8, [X8+3232]
	192 Move X8, 0xB46000
	193 Move X8, [X8+2832]
	194 Move X21, [X8]
	195 Compare X21, 0
	196 JumpIfEqual {336}
	197 And W31, W20, 1
	198 Move W8, 72
	199 Move W9, 48
	200 NotImplemented "Instruction CSEL not yet implemented."
	201 Move X0, [X19]
	202 Call CertificateData.ReadReverseRdns, X0
	203 Compare X0, 0
	204 JumpIfEqual {353}
	205 Move X10, 0xB03000
	206 Move X8, [X0]
	207 Move X10, [X10+400]
	208 Move X19, X0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Move X1, [X10]
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move X0, X19
	220 Move W2, W31
	221 Call 0x1C5D788
	222 Move X8, 0xB46000
	223 Move X8, [X8+3936]
	224 Add X0, X31, 72
	225 Move W1, W31
	226 Move X2, [X8]
	227 Call Nullable`1<Int32Enum>..ctor, X0, X1
	228 Move X8, 0xB46000
	229 Move X8, [X8+3960]
	230 Move X24, [X8]
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Add X8, X8, X9
	233 Add X0, X8, 312
	234 Move X8, [X0]
	235 Move X1, [X0+8]
	236 Move X0, X19
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X19, X0
	239 Compare X0, 0
	240 JumpIfEqual {354}
	241 Move X20, 0xB00000
	242 Move X22, 0xB03000
	243 Move X20, [X20+3608]
	244 Move X22, [X22+408]
	245 Move X8, [X19]
	246 Move X1, [X20]
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 Compare X9, 0
	249 JumpIfEqual {256}
	250 Move X10, [X8+176]
	251 Add X10, X10, 8
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Subtract X9, X9, 1
	255 Add X10, X10, 16
	256 Move X0, X19
	257 Move W2, W31
	258 Call 0x1C5D788
	259 NotImplemented "Instruction LDRSW not yet implemented."
	260 Add X8, X8, X9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X19
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {303}
	270 Move X8, [X19]
	271 Move X1, [X22]
	272 NotImplemented "Instruction LDRH not yet implemented."
	273 Compare X9, 0
	274 JumpIfEqual {281}
	275 Move X10, [X8+176]
	276 Add X10, X10, 8
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Subtract X9, X9, 1
	280 Add X10, X10, 16
	281 Move X0, X19
	282 Move W2, W31
	283 Call 0x1C5D788
	284 NotImplemented "Instruction LDRSW not yet implemented."
	285 Add X8, X8, X9
	286 Add X0, X8, 312
	287 Move X8, [X0]
	288 Move X1, [X0+8]
	289 Move X0, X19
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Move X23, X1
	292 Move X1, X21
	293 Move X2, X31
	294 Call String.op_Equality, X0, X1
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {245}
	299 Move X20, X31
	300 Move W21, 16
	301 Compare X19, 0
	302 JumpIfNotEqual {308}
	303 Move X20, X31
	304 Move X23, X31
	305 Move W21, 20
	306 Compare X19, 0
	307 JumpIfEqual {331}
	308 Move X10, 0xB00000
	309 Move X8, [X19]
	310 Move X10, [X10+3584]
	311 NotImplemented "Instruction LDRH not yet implemented."
	312 Move X1, [X10]
	313 Compare X9, 0
	314 JumpIfEqual {321}
	315 Move X10, [X8+176]
	316 Add X10, X10, 8
	317 NotImplemented "Instruction LDUR not yet implemented."
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Subtract X9, X9, 1
	320 Add X10, X10, 16
	321 Move X0, X19
	322 Move W2, W31
	323 Call 0x1C5D788
	324 NotImplemented "Instruction LDRSW not yet implemented."
	325 Add X8, X8, X9
	326 Add X0, X8, 312
	327 Move X8, [X0]
	328 Move X1, [X0+8]
	329 Move X0, X19
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Compare X20, 0
	332 JumpIfNotEqual {355}
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Compare W21, 0
	335 JumpIfNotEqual {339}
	336 Move X8, 0xB00000
	337 Move X8, [X8+2440]
	338 Move X23, [X8]
	339 Move X0, X23
	340 Move X20, [X31+128]
	341 Move X19, [X31+136]
	342 Move X22, [X31+112]
	343 Move X21, [X31+120]
	344 Move X24, [X31+96]
	345 Move X23, [X31+104]
	346 Move X26, [X31+80]
	347 Move X25, [X31+88]
	348 Move X30, [X31+64]
	349 Add X31, X31, 144
	350 Return X0
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Move X0, X20
	356 Call 0x1C17F18
	357 Move X22, X0
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X0, X22
	360 Call 0x3EB2AD0
	361 Move X20, [X0]
	362 Call 0x3EB2AE0
	363 Move W21, W31
	364 Move X23, X31
	365 Compare X19, 0
	366 JumpIfNotEqual {308}
	367 Move X20, X31
	368 Move X22, X0
	369 Compare X19, 0
	370 JumpIfEqual {394}
	371 Move X10, 0xB00000
	372 Move X8, [X19]
	373 Move X10, [X10+3584]
	374 NotImplemented "Instruction LDRH not yet implemented."
	375 Move X1, [X10]
	376 Compare X9, 0
	377 JumpIfEqual {384}
	378 Move X10, [X8+176]
	379 Add X10, X10, 8
	380 NotImplemented "Instruction LDUR not yet implemented."
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Subtract X9, X9, 1
	383 Add X10, X10, 16
	384 Move X0, X19
	385 Move W2, W31
	386 Call 0x1C5D788
	387 NotImplemented "Instruction LDRSW not yet implemented."
	388 Add X8, X8, X9
	389 Add X0, X8, 312
	390 Move X8, [X0]
	391 Move X1, [X0+8]
	392 Move X0, X19
	393 NotImplemented "Instruction BLR not yet implemented."
	394 Compare X20, 0
	395 JumpIfEqual {422}
	396 Move X0, X20
	397 Call 0x1C17F18
	398 Move X22, X0
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move X0, X22
	401 Call 0x3EB2AD0
	402 Move X23, [X0]
	403 Call 0x3EB2AE0
	404 Move X8, 0xB46000
	405 Move X8, [X8+3904]
	406 Add X0, X31, 32
	407 Move X1, [X8]
	408 Call Enumerator<Object>.Dispose, X0
	409 Compare X23, 0
	410 JumpIfEqual {188}
	411 Move X0, X23
	412 Call 0x1C17F18
	413 Move X23, X31
	414 Move X22, X0
	415 Move X8, 0xB46000
	416 Move X8, [X8+3904]
	417 Move X1, [X8]
	418 Add X0, X31, 32
	419 Call Enumerator<Object>.Dispose, X0
	420 Compare X23, 0
	421 JumpIfNotEqual {424}
	422 Move X0, X22
	423 Call 0x1D2D690
	424 Move X0, X23
	425 Call 0x1C17F18
	426 Call 0x1991590

Method: System.String GetSimpleNameInfo(System.Security.Cryptography.X509Certificates.X500DistinguishedName name)

Disassembly:
	0x035F4BF4 MOV X23, X0
	0x035F4BF8 TBNZ X8, 0x0, 0x35F4C34
	0x035F4BFC ADRP X0, 0xB2E000
	0x035F4C00 LDR X0, [X0 + 0x1A8]
	0x035F4C04 BL 0x1C16CF4
	0x035F4C08 ADRP X0, 0xB2D000
	0x035F4C0C LDR X0, [X0 + 0x850]
	0x035F4C10 BL 0x1C16CF4
	0x035F4C14 ADRP X0, 0xB2E000
	0x035F4C18 LDR X0, [X0 + 0x4E8]
	0x035F4C1C BL 0x1C16CF4
	0x035F4C20 ADRP X0, 0xB2D000
	0x035F4C24 LDR X0, [X0 + 0x858]
	0x035F4C28 BL 0x1C16CF4
	0x035F4C2C MOVZ W8, 0x1
	0x035F4C30 STRB W8, [X20 + 0x2F5]
	0x035F4C34 ADRP X27, 0xB2E000
	0x035F4C38 ADRP X26, 0xB2D000
	0x035F4C3C ADRP X25, 0xB2D000
	0x035F4C40 LDR X27, [X27 + 0x1A8]
	0x035F4C44 LDR X26, [X26 + 0x850]
	0x035F4C48 LDR X25, [X25 + 0x858]
	0x035F4C4C ADD X8, X31, 0x0
	0x035F4C50 SUB X20, X8, 0x10
	0x035F4C54 STUR W31, [X29 - 0xC]
	0x035F4C58 ADD X31, X20, 0x0
	0x035F4C5C MOV X0, X23
	0x035F4C60 MOV X1, X20
	0x035F4C64 MOV W2, W22
	0x035F4C68 MOV W3, W21
	0x035F4C6C STUR W31, [X8 - 0x10]
	0x035F4C70 BL 0x35F4DB0
	0x035F4C74 AND W8, W0, 0x1
	0x035F4C78 STRB W8, [X19]
	0x035F4C7C ADD X8, X31, 0x0
	0x035F4C80 SUB X19, X8, 0x20
	0x035F4C84 ADD X31, X19, 0x0
	0x035F4C88 MOV X22, X31
	0x035F4C8C MOV W21, W31
	0x035F4C90 STP X31, X31, [X8 - 0x20]
	0x035F4C94 STUR X31, [X8 - 0xA]
	0x035F4C98 STUR X31, [X8 - 0x10]
	0x035F4C9C MOVZ W23, 0xF
	0x035F4CA0 MOVZ W28, 0x2E
	0x035F4CA4 LDR X8, [X27]
	0x035F4CA8 LDR X0, [X8 + 0x20]
	0x035F4CAC LDRB W8, [X0 + 0x135]
	0x035F4CB0 TBNZ X8, 0x0, 0x35F4CB8
	0x035F4CB4 BL 0x1C5C684
	0x035F4CB8 SUB W2, W23, W21
	0x035F4CBC CMP X22, 0x3
	0x035F4CC0 ADD X1, X19, W21, 0x1, SXTW
	0x035F4CC4 B.EQ 0x35F4D04
	0x035F4CC8 ADD X0, X20, X22
	0x035F4CCC SUB X3, X29, 0xC
	0x035F4CD0 MOV X4, X31
	0x035F4CD4 MOV X5, X31
	0x035F4CD8 MOV X6, X31
	0x035F4CDC MOV X7, X31
	0x035F4CE0 BL 0x3319E54
	0x035F4CE4 LDUR W8, [X29 - 0xC]
	0x035F4CE8 ADD W8, W8, W21
	0x035F4CEC CMP W8, 0xF
	0x035F4CF0 B.CS 0x35F4DA8
	0x035F4CF4 ADD W21, W8, 0x1
	0x035F4CF8 ADD X22, X22, 0x1
	0x035F4CFC STRH W28, [X19, W8, UXTW]
	0x035F4D00 B 0x35F4CA4
	0x035F4D04 ORR X0, X20, 0x3
	0x035F4D08 SUB X3, X29, 0xC
	0x035F4D0C MOV X4, X31
	0x035F4D10 MOV X5, X31
	0x035F4D14 MOV X6, X31
	0x035F4D18 MOV X7, X31
	0x035F4D1C BL 0x3319E54
	0x035F4D20 LDUR W8, [X29 - 0xC]
	0x035F4D24 LDR X22, [X26]
	0x035F4D28 ADD W20, W8, W21
	0x035F4D2C CMP W20, 0x10
	0x035F4D30 B.CC 0x35F4D3C
	0x035F4D34 MOV X0, X31
	0x035F4D38 BL 0x339D6EC
	0x035F4D3C LDR X0, [X22 + 0x20]
	0x035F4D40 LDRB W8, [X0 + 0x135]
	0x035F4D44 TBNZ X8, 0x0, 0x35F4D4C
	0x035F4D48 BL 0x1C5C684
	0x035F4D4C LDR X2, [X25]
	0x035F4D50 MOV W1, W20
	0x035F4D54 MOV X0, X19
	0x035F4D58 BL 0x25FB81C
	0x035F4D5C MOV X2, X0
	0x035F4D60 MOV X3, X1
	0x035F4D64 MOV X0, X31
	0x035F4D68 MOV X1, X2
	0x035F4D6C MOV X2, X3
	0x035F4D70 MOV X3, X31
	0x035F4D74 BL 0x322EB14
	0x035F4D78 LDR X8, [X24 + 0x28]
	0x035F4D7C LDUR X9, [X29 - 0x8]
	0x035F4D80 CMP X8, X9
	0x035F4D84 B.NE 0x35F4DAC
	0x035F4D88 ADD X31, X29, 0x0
	0x035F4D8C LDP X20, X19, [X31 + 0x50]
	0x035F4D90 LDP X22, X21, [X31 + 0x40]
	0x035F4D94 LDP X24, X23, [X31 + 0x30]
	0x035F4D98 LDP X26, X25, [X31 + 0x20]
	0x035F4D9C LDP X28, X27, [X31 + 0x10]
	0x035F4DA0 LDP X29, X30, [X31], #0x60
	0x035F4DA4 RET
	0x035F4DA8 BL 0x1C16F28
	0x035F4DAC BL 0x3EB1B20
	0x035F4DB0 STR X30, [X31 - 0x30]!
	0x035F4DB4 STP X22, X21, [X31 + 0x10]
	0x035F4DB8 STP X20, X19, [X31 + 0x20]
	0x035F4DBC MOV W22, W3
	0x035F4DC0 MOV W20, W2
	0x035F4DC4 MOV X19, X1
	0x035F4DC8 MOV X21, X0
	0x035F4DCC CBZ X0, 0x35F4DDC
	0x035F4DD0 MOV X0, X31
	0x035F4DD4 BL 0x32C1424
	0x035F4DD8 ADD X21, X21, W0, SXTW
	0x035F4DDC ADD X2, X31, 0xC
	0x035F4DE0 MOVZ W3, 0x1
	0x035F4DE4 MOV X0, X21
	0x035F4DE8 MOV W1, W20
	0x035F4DEC STR W22, [X31 + 0xC]
	0x035F4DF0 BL 0x35F48BC
	0x035F4DF4 REV W9, W0
	0x035F4DF8 STR W9, [X19]
	0x035F4DFC LDP X20, X19, [X31 + 0x20]
	0x035F4E00 LDP X22, X21, [X31 + 0x10]
	0x035F4E04 UBFM X8, X0, 0x18, 0x1F
	0x035F4E08 CMP W8, 0x7F
	0x035F4E0C CSET W0, EQ
	0x035F4E10 LDR X30, [X31], #0x30
	0x035F4E14 RET
	0x035F4E18 STP X30, X21, [X31 - 0x20]!
	0x035F4E1C STP X20, X19, [X31 + 0x10]
	0x035F4E20 ADRP X20, 0xDEC000
	0x035F4E24 ADRP X21, 0xB3D000
	0x035F4E28 LDRB W8, [X20 + 0x2F9]
	0x035F4E2C LDR X21, [X21 + 0x4C8]
	0x035F4E30 MOV X19, X0
	0x035F4E34 TBNZ X8, 0x0, 0x35F4E4C
	0x035F4E38 ADRP X0, 0xB3D000
	0x035F4E3C LDR X0, [X0 + 0x4C8]
	0x035F4E40 BL 0x1C16CF4
	0x035F4E44 MOVZ W8, 0x1
	0x035F4E48 STRB W8, [X20 + 0x2F9]
	0x035F4E4C LDR X1, [X21]
	0x035F4E50 MOVZ W2, 0x5
	0x035F4E54 MOV X0, X19
	0x035F4E58 MOV X3, X31
	0x035F4E5C BL 0x3226C60
	0x035F4E60 TBZ X0, 0x0, 0x35F4E74
	0x035F4E64 LDP X20, X19, [X31 + 0x10]
	0x035F4E68 MOVZ W0, 0x1
	0x035F4E6C LDP X30, X21, [X31], #0x20
	0x035F4E70 RET
	0x035F4E74 MOV X0, X19
	0x035F4E78 LDP X20, X19, [X31 + 0x10]
	0x035F4E7C LDP X30, X21, [X31], #0x20
	0x035F4E80 B 0x35F4E84
	0x035F4E84 STP X30, X21, [X31 - 0x20]!
	0x035F4E88 STP X20, X19, [X31 + 0x10]
	0x035F4E8C ADRP X20, 0xDEC000
	0x035F4E90 ADRP X21, 0xB3C000
	0x035F4E94 LDRB W8, [X20 + 0x2FA]
	0x035F4E98 LDR X21, [X21 + 0xDE8]
	0x035F4E9C MOV X19, X0
	0x035F4EA0 TBNZ X8, 0x0, 0x35F4EB8
	0x035F4EA4 ADRP X0, 0xB3C000
	0x035F4EA8 LDR X0, [X0 + 0xDE8]
	0x035F4EAC BL 0x1C16CF4
	0x035F4EB0 MOVZ W8, 0x1
	0x035F4EB4 STRB W8, [X20 + 0x2FA]
	0x035F4EB8 LDR X1, [X21]
	0x035F4EBC MOV X0, X19
	0x035F4EC0 LDP X20, X19, [X31 + 0x10]
	0x035F4EC4 MOVZ W2, 0x5
	0x035F4EC8 MOV X3, X31
	0x035F4ECC LDP X30, X21, [X31], #0x20
	0x035F4ED0 B 0x3226C60
	0x035F4ED4 STR X30, [X31 - 0x20]!
	0x035F4ED8 STP X20, X19, [X31 + 0x10]
	0x035F4EDC ADRP X19, 0xDEC000
	0x035F4EE0 ADRP X20, 0xB46000
	0x035F4EE4 LDRB W8, [X19 + 0x2FB]
	0x035F4EE8 LDR X20, [X20 + 0xC8]
	0x035F4EEC TBNZ X8, 0x0, 0x35F4F04
	0x035F4EF0 ADRP X0, 0xB46000
	0x035F4EF4 LDR X0, [X0 + 0xC8]
	0x035F4EF8 BL 0x1C16CF4
	0x035F4EFC MOVZ W8, 0x1
	0x035F4F00 STRB W8, [X19 + 0x2FB]
	0x035F4F04 LDR X0, [X20]
	0x035F4F08 BL 0x1C16F10
	0x035F4F0C MOV X19, X0
	0x035F4F10 BL 0x35F4F24
	0x035F4F14 MOV X0, X19
	0x035F4F18 LDP X20, X19, [X31 + 0x10]
	0x035F4F1C LDR X30, [X31], #0x20
	0x035F4F20 RET
	0x035F4F24 STR X30, [X31 - 0x30]!
	0x035F4F28 STP X22, X21, [X31 + 0x10]
	0x035F4F2C STP X20, X19, [X31 + 0x20]
	0x035F4F30 ADRP X21, 0xDEC000
	0x035F4F34 ADRP X20, 0xB46000
	0x035F4F38 LDRB W8, [X21 + 0x305]
	0x035F4F3C LDR X20, [X20 + 0xD0]
	0x035F4F40 MOV X19, X0
	0x035F4F44 TBNZ X8, 0x0, 0x35F4F8C
	0x035F4F48 ADRP X0, 0xB27000
	0x035F4F4C LDR X0, [X0 + 0xB88]
	0x035F4F50 BL 0x1C16CF4
	0x035F4F54 ADRP X0, 0xB46000
	0x035F4F58 LDR X0, [X0 + 0xC8]
	0x035F4F5C BL 0x1C16CF4
	0x035F4F60 ADRP X0, 0xB01000
	0x035F4F64 LDR X0, [X0 + 0x570]
	0x035F4F68 BL 0x1C16CF4
	0x035F4F6C ADRP X0, 0xB46000
	0x035F4F70 LDR X0, [X0 + 0xD0]
	0x035F4F74 BL 0x1C16CF4
	0x035F4F78 ADRP X0, 0xB46000
	0x035F4F7C LDR X0, [X0 + 0xD8]
	0x035F4F80 BL 0x1C16CF4
	0x035F4F84 MOVZ W8, 0x1
	0x035F4F88 STRB W8, [X21 + 0x305]
	0x035F4F8C ADRP X21, 0xB01000
	0x035F4F90 LDR X21, [X21 + 0x570]
	0x035F4F94 MOV X0, X19
	0x035F4F98 MOV X1, X31
	0x035F4F9C STR X31, [X31 + 0x8]
	0x035F4FA0 BL 0x33BDD8C
	0x035F4FA4 MOVZ W8, 0x1
	0x035F4FA8 MOVZ W9, 0x32
	0x035F4FAC MOVN W10, 0x80000000
	0x035F4FB0 MOVZ W11, 0x101
	0x035F4FB4 STRB W8, [X19 + 0x10]
	0x035F4FB8 STR W9, [X19 + 0x28]
	0x035F4FBC STR X10, [X19 + 0x30]
	0x035F4FC0 STRH W11, [X19 + 0x48]
	0x035F4FC4 STRB W8, [X19 + 0x58]
	0x035F4FC8 STR W8, [X19 + 0x68]
	0x035F4FCC LDR X0, [X20]
	0x035F4FD0 LDR W8, [X0 + 0xE0]
	0x035F4FD4 CBNZ W8, 0x35F4FDC
	0x035F4FD8 BL 0x1C16DFC
	0x035F4FDC ADRP X20, 0xB27000
	0x035F4FE0 LDR X20, [X20 + 0xB88]
	0x035F4FE4 MOV X0, X31
	0x035F4FE8 BL 0x36837D0
	0x035F4FEC STR X0, [X19 + 0x60]
	0x035F4FF0 LDR X0, [X21]
	0x035F4FF4 LDR W8, [X0 + 0xE0]
	0x035F4FF8 CBNZ W8, 0x35F5000
	0x035F4FFC BL 0x1C16DFC
	0x035F5000 ADRP X8, 0xFFFFFFFFFD4F8000
	0x035F5004 LDR V0, [X8 + 0x3E8]
	0x035F5008 MOV X0, X31
	0x035F500C BL 0x33945E4
	0x035F5010 MOVZ W8, 0x4
	0x035F5014 STR X0, [X19 + 0x70]
	0x035F5018 STR W8, [X19 + 0x78]
	0x035F501C LDR X0, [X20]
	0x035F5020 LDR W8, [X0 + 0xE0]
	0x035F5024 CBNZ W8, 0x35F502C
	0x035F5028 BL 0x1C16DFC
	0x035F502C ADRP X21, 0xDEB000
	0x035F5030 LDRB W8, [X21 + 0x3F4]
	0x035F5034 CBNZ W8, 0x35F504C
	0x035F5038 ADRP X0, 0xB26000
	0x035F503C LDR X0, [X0 + 0xB88]
	0x035F5040 BL 0x1C16CF4
	0x035F5044 MOVZ W8, 0x1
	0x035F5048 STRB W8, [X21 + 0x3F4]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0xDED000
	015 Move W8, [X20+750]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0xB00000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0xB03000
	025 Move X0, [X0+400]
	026 Call 0x1C17CF4
	027 Move X0, 0xB03000
	028 Move X0, [X0+408]
	029 Call 0x1C17CF4
	030 Move X0, 0xB00000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0xB03000
	034 Move X0, [X0+432]
	035 Call 0x1C17CF4
	036 Move X0, 0xB03000
	037 Move X0, [X0+440]
	038 Call 0x1C17CF4
	039 Move X0, 0xB46000
	040 Move X0, [X0+2832]
	041 Call 0x1C17CF4
	042 Move X0, 0xB46000
	043 Move X0, [X0+3232]
	044 Call 0x1C17CF4
	045 Move X0, 0xB46000
	046 Move X0, [X0+3280]
	047 Call 0x1C17CF4
	048 Move X0, 0xB46000
	049 Move X0, [X0+3688]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+750], W8
	053 Move X0, X19
	054 Call CertificateData.ReadReverseRdns, X0
	055 Compare X0, 0
	056 JumpIfEqual {251}
	057 Move X10, 0xB03000
	058 Move X8, [X0]
	059 Move X10, [X10+400]
	060 Move X19, X0
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move X0, X19
	072 Move W2, W31
	073 Call 0x1C5D788
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Add X8, X8, X9
	076 Add X0, X8, 312
	077 Move X27, 0xB00000
	078 Move X28, 0xB03000
	079 Move X29, 0xB46000
	080 Move X26, 0xB46000
	081 Move X27, [X27+3608]
	082 Move X28, [X28+408]
	083 Move X29, [X29+3232]
	084 Move X26, [X26+3280]
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X22, 0xB46000
	088 Move X22, [X22+3688]
	089 Move X0, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X19, X0
	092 Move [X31+8], X31
	093 Move X23, X31
	094 Move X24, X31
	095 Move X25, X31
	096 Move X20, X23
	097 Move X23, X20
	098 Move X20, X24
	099 Move X24, X20
	100 Move X20, X25
	101 Compare X19, 0
	102 JumpIfEqual {250}
	103 Move X8, [X19]
	104 Move X1, [X27]
	105 Move X25, X20
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X19
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X19
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {189}
	129 Move X8, [X19]
	130 Move X1, [X28]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X19
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X19
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X20, X1
	151 Move X1, [X29]
	152 Move X21, X0
	153 Move X2, X31
	154 Call String.op_Equality, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {194}
	159 Move X1, [X26]
	160 Move X0, X21
	161 Move X2, X31
	162 Call String.op_Equality, X0, X1
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {101}
	167 Move X1, [X22]
	168 Move X0, X21
	169 Move X2, X31
	170 Call String.op_Equality, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {99}
	175 Move X8, 0xB46000
	176 Move X8, [X8+2832]
	177 Move X1, [X8]
	178 Move X0, X21
	179 Move X2, X31
	180 Call String.op_Equality, X0, X1
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {97}
	185 Move X8, [X31+8]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CSEL not yet implemented."
	188 Move [X31+8], X8
	189 Move X21, X31
	190 Move X20, X31
	191 Move W22, 10
	192 Compare X19, 0
	193 JumpIfNotEqual {198}
	194 Move X21, X31
	195 Move W22, 9
	196 Compare X19, 0
	197 JumpIfEqual {221}
	198 Move X8, [X19]
	199 Move X10, 0xB00000
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Move X10, [X10+3584]
	202 Move X1, [X10]
	203 Compare X9, 0
	204 JumpIfEqual {211}
	205 Move X10, [X8+176]
	206 Add X10, X10, 8
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Subtract X9, X9, 1
	210 Add X10, X10, 16
	211 Move X0, X19
	212 Move W2, W31
	213 Call 0x1C5D788
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 Add X8, X8, X9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X1, [X0+8]
	219 Move X0, X19
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Compare X21, 0
	222 JumpIfNotEqual {252}
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Compare W22, 0
	225 JumpIfNotEqual {235}
	226 Move X20, X25
	227 Compare X25, 0
	228 JumpIfNotEqual {235}
	229 Move X20, X24
	230 Compare X24, 0
	231 JumpIfNotEqual {235}
	232 Move X8, [X31+8]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 NotImplemented "Instruction CSEL not yet implemented."
	235 Move X0, X20
	236 Move X20, [X31+96]
	237 Move X19, [X31+104]
	238 Move X22, [X31+80]
	239 Move X21, [X31+88]
	240 Move X24, [X31+64]
	241 Move X23, [X31+72]
	242 Move X26, [X31+48]
	243 Move X25, [X31+56]
	244 Move X28, [X31+32]
	245 Move X27, [X31+40]
	246 Move X29, [X31+16]
	247 Move X30, [X31+24]
	248 Add X31, X31, 112
	249 Return X0
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Move X0, X21
	253 Call 0x1C17F18
	254 Move X20, X0
	255 Move [X31+8], X31
	256 Move X23, X31
	257 Move X24, X31
	258 Move X25, X31
	259 Move X20, X0
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X0, X20
	262 Call 0x3EB2AD0
	263 Move X21, [X0]
	264 Call 0x3EB2AE0
	265 Move W22, W31
	266 Move X20, X31
	267 Compare X19, 0
	268 JumpIfNotEqual {198}
	269 Move X21, X31
	270 Move X20, X0
	271 Compare X19, 0
	272 JumpIfEqual {296}
	273 Move X8, [X19]
	274 Move X10, 0xB00000
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Move X10, [X10+3584]
	277 Move X1, [X10]
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move X0, X19
	287 Move W2, W31
	288 Call 0x1C5D788
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Add X8, X8, X9
	291 Add X0, X8, 312
	292 Move X8, [X0]
	293 Move X1, [X0+8]
	294 Move X0, X19
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Compare X21, 0
	297 JumpIfNotEqual {300}
	298 Move X0, X20
	299 Call 0x1D2D690
	300 Move X0, X21
	301 Call 0x1C17F18
	302 Call 0x1991590

Method: System.String FindAltNameMatch(System.Byte[] extensionBytes, Internal.Cryptography.Pal.GeneralNameType matchType, System.String otherOid)

Disassembly:
	0x035F504C LDR X0, [X20]
	0x035F5050 ADRP X22, 0xB45000
	0x035F5054 ADRP X21, 0xB45000
	0x035F5058 LDR W8, [X0 + 0xE0]
	0x035F505C LDR X22, [X22 + 0xC8]
	0x035F5060 LDR X21, [X21 + 0xD8]
	0x035F5064 CBNZ W8, 0x35F5070
	0x035F5068 BL 0x1C16DFC
	0x035F506C LDR X0, [X20]
	0x035F5070 LDR X8, [X0 + 0xB8]
	0x035F5074 MOVZ W9, 0x93E0
	0x035F5078 MOVK W9, 0x40000
	0x035F507C MOV X1, X31
	0x035F5080 LDR W8, [X8]
	0x035F5084 STR X31, [X19 + 0x88]
	0x035F5088 STRB W31, [X19 + 0x90]
	0x035F508C STP W8, W9, [X19 + 0x7C]
	0x035F5090 LDR X8, [X22]
	0x035F5094 LDR X0, [X8 + 0xB8]
	0x035F5098 BL 0x33EB150
	0x035F509C STR X0, [X31 + 0x8]
	0x035F50A0 ADD X0, X31, 0x8
	0x035F50A4 MOV X1, X31
	0x035F50A8 BL 0x337C96C
	0x035F50AC LDR X8, [X21]
	0x035F50B0 MOV X1, X0
	0x035F50B4 MOV X2, X31
	0x035F50B8 MOV X0, X8
	0x035F50BC BL 0x321B938
	0x035F50C0 STR X0, [X19 + 0x98]
	0x035F50C4 LDP X20, X19, [X31 + 0x20]
	0x035F50C8 LDP X22, X21, [X31 + 0x10]
	0x035F50CC LDR X30, [X31], #0x30
	0x035F50D0 RET
	0x035F50D4 STR X30, [X31 - 0x20]!
	0x035F50D8 STP X20, X19, [X31 + 0x10]
	0x035F50DC MOV X19, X0
	0x035F50E0 BL 0x35F4ED4
	0x035F50E4 MOV X20, X0
	0x035F50E8 MOV X0, X19
	0x035F50EC MOV X1, X31
	0x035F50F0 BL 0x33BDD8C
	0x035F50F4 STR X20, [X19 + 0x10]
	0x035F50F8 MOV X0, X19
	0x035F50FC LDP X20, X19, [X31 + 0x10]
	0x035F5100 MOV W1, W31
	0x035F5104 LDR X30, [X31], #0x20
	0x035F5108 B 0x35F5144
	0x035F510C STR X30, [X31 - 0x20]!
	0x035F5110 STP X20, X19, [X31 + 0x10]
	0x035F5114 MOV X19, X1
	0x035F5118 MOV X1, X31
	0x035F511C MOV X20, X0
	0x035F5120 BL 0x33BDD8C
	0x035F5124 STR X19, [X20 + 0x10]
	0x035F5128 MOV X0, X20
	0x035F512C LDP X20, X19, [X31 + 0x10]
	0x035F5130 MOV W1, W31
	0x035F5134 LDR X30, [X31], #0x20
	0x035F5138 B 0x35F5144
	0x035F513C MOV X1, X31
	0x035F5140 B 0x33BDD8C
	0x035F5144 STR X30, [X31 - 0x30]!
	0x035F5148 STP X22, X21, [X31 + 0x10]
	0x035F514C STP X20, X19, [X31 + 0x20]
	0x035F5150 ADRP X21, 0xDEB000
	0x035F5154 LDRB W8, [X21 + 0x2FF]
	0x035F5158 MOV W20, W1
	0x035F515C MOV X19, X0
	0x035F5160 TBNZ X8, 0x0, 0x35F51A8
	0x035F5164 ADRP X0, 0xB45000
	0x035F5168 LDR X0, [X0 + 0xE0]
	0x035F516C BL 0x1C16CF4
	0x035F5170 ADRP X0, 0xB45000
	0x035F5174 LDR X0, [X0 + 0xE8]
	0x035F5178 BL 0x1C16CF4
	0x035F517C ADRP X0, 0xB45000
	0x035F5180 LDR X0, [X0 + 0xF0]
	0x035F5184 BL 0x1C16CF4
	0x035F5188 ADRP X0, 0xB45000
	0x035F518C LDR X0, [X0 + 0xF8]
	0x035F5190 BL 0x1C16CF4
	0x035F5194 ADRP X0, 0xB45000
	0x035F5198 LDR X0, [X0 + 0x100]
	0x035F519C BL 0x1C16CF4
	0x035F51A0 MOVZ W8, 0x1
	0x035F51A4 STRB W8, [X21 + 0x2FF]
	0x035F51A8 CMP W20, 0x1
	0x035F51AC B.EQ 0x35F5210
	0x035F51B0 CBNZ W20, 0x35F5388
	0x035F51B4 MOV X0, X19
	0x035F51B8 BL 0x35F5528
	0x035F51BC LDR X20, [X19 + 0x10]
	0x035F51C0 STR W31, [X19 + 0x18]
	0x035F51C4 CBZ X20, 0x35F5384
	0x035F51C8 ADRP X10, 0xB45000
	0x035F51CC LDR X8, [X20]
	0x035F51D0 LDR X10, [X10 + 0xE8]
	0x035F51D4 LDRH W9, [X8 + 0x12E]
	0x035F51D8 LDR X1, [X10]
	0x035F51DC CBZ X9, 0x35F5200
	0x035F51E0 LDR X10, [X8 + 0xB0]
	0x035F51E4 ADD X10, X10, 0x8
	0x035F51E8 LDUR X11, [X10 - 0x8]
	0x035F51EC CMP X11, X1
	0x035F51F0 B.EQ 0x35F5270
	0x035F51F4 SUBS X9, X9, 0x1
	0x035F51F8 ADD X10, X10, 0x10
	0x035F51FC B.NE 0x35F51E8
	0x035F5200 MOVZ W2, 0x1
	0x035F5204 MOV X0, X20
	0x035F5208 BL 0x1C5C788

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDEC000
	009 Move X21, 0xB45000
	010 Move W8, [X23+751]
	011 Move X21, [X21+3840]
	012 Move X19, X2
	013 Move W20, W1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xB45000
	020 Move X0, [X0+3840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+751], W8
	024 Move X0, [X21]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move TEMP, 127
	027 Not TEMP
	028 Move W8, TEMP
	029 Move TEMP, 95
	030 Not TEMP
	031 Move W9, TEMP
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Call 0x1C17F10
	034 Move X1, X22
	035 Move X2, X31
	036 Move X21, X0
	037 Call DerSequenceReader..ctor, X0, X1
	038 Compare X21, 0
	039 JumpIfEqual {123}
	040 Move X0, X21
	041 Move X1, X31
	042 Call DerSequenceReader.get_HasData, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {83}
	047 Or W23, W23, W20
	048 Subtract W24, W20, 1
	049 Move X0, X21
	050 Move X1, X31
	051 Call DerSequenceReader.PeekTag, X0
	052 And W8, W0, 255
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare W20, 0
	055 JumpIfEqual {61}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X21
	059 Move X1, X31
	060 Call DerSequenceReader.SkipValue, X0
	061 Move X0, X21
	062 Move X1, X31
	063 Call DerSequenceReader.ReadSequence, X0
	064 Compare X0, 0
	065 JumpIfEqual {123}
	066 Move X1, X31
	067 Move X22, X0
	068 Call DerSequenceReader.ReadOidAsString, X0
	069 Move X1, X19
	070 Move X2, X31
	071 Call String.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {103}
	076 Move X0, X21
	077 Move X1, X31
	078 Call DerSequenceReader.get_HasData, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {49}
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X0, X31
	090 Move X30, [X31+64]
	091 Return X0
	092 Move X0, X21
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X1, X31
	100 Move X30, [X31+64]
	101 Call DerSequenceReader.ReadIA5String, X0
	102 Return X0
	103 Move X0, X22
	104 Move X1, X31
	105 Call DerSequenceReader.PeekTag, X0
	106 And W8, W0, 255
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X22
	109 Move X1, X31
	110 Call DerSequenceReader.ReadSequence, X0
	111 Compare X0, 0
	112 JumpIfEqual {123}
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X1, X31
	120 Move X30, [X31+64]
	121 Call DerSequenceReader.ReadUtf8String, X0
	122 Return X0
	123 Call 0x1C17F20
	124 Move X0, 0xB2C000
	125 Move X0, [X0+3296]
	126 Call 0x1C17D08
	127 Call 0x1C17F10
	128 Move X19, X0
	129 Move X0, 0xB45000
	130 Move X0, [X0+3888]
	131 Call 0x1C17D08
	132 Move X1, X0
	133 Move X0, X19
	134 Move X2, X31
	135 Call CryptographicException..ctor, X0, X1
	136 Move X0, 0xB45000
	137 Move X0, [X0+3976]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X19
	141 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<System.String, System.String>> ReadReverseRdns(System.Security.Cryptography.X509Certificates.X500DistinguishedName name)

Disassembly:
	0x035F520C B 0x35F5280
	0x035F5210 MOV X0, X19
	0x035F5214 BL 0x35F5528
	0x035F5218 LDR X20, [X19 + 0x10]
	0x035F521C MOVZ W8, 0x1
	0x035F5220 STR W8, [X19 + 0x18]
	0x035F5224 CBZ X20, 0x35F5384
	0x035F5228 ADRP X10, 0xB45000
	0x035F522C LDR X8, [X20]
	0x035F5230 LDR X10, [X10 + 0xE8]
	0x035F5234 LDRH W9, [X8 + 0x12E]
	0x035F5238 LDR X1, [X10]
	0x035F523C CBZ X9, 0x35F5260
	0x035F5240 LDR X10, [X8 + 0xB0]
	0x035F5244 ADD X10, X10, 0x8
	0x035F5248 LDUR X11, [X10 - 0x8]
	0x035F524C CMP X11, X1
	0x035F5250 B.EQ 0x35F52CC
	0x035F5254 SUBS X9, X9, 0x1
	0x035F5258 ADD X10, X10, 0x10
	0x035F525C B.NE 0x35F5248
	0x035F5260 MOVZ W2, 0x1
	0x035F5264 MOV X0, X20
	0x035F5268 BL 0x1C5C788
	0x035F526C B 0x35F52DC
	0x035F5270 LDR W9, [X10]
	0x035F5274 ADD W9, W9, 0x1
	0x035F5278 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDEC000
	006 Move X21, 0xB45000
	007 Move W8, [X20+752]
	008 Move X21, [X21+3984]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB45000
	015 Move X0, [X0+3984]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+752], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+40], W0
	031 Move [X20+56], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

