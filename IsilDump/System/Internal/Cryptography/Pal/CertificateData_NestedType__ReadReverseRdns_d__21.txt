Type: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x035F527C ADD X0, X8, 0x138
	0x035F5280 LDP X8, X1, [X0]
	0x035F5284 MOV X0, X20
	0x035F5288 BLR X8
	0x035F528C ADRP X8, 0xB45000
	0x035F5290 LDR X8, [X8 + 0xF0]
	0x035F5294 MOV X20, X0
	0x035F5298 LDR X8, [X8]
	0x035F529C MOV X0, X8
	0x035F52A0 BL 0x1C16F10
	0x035F52A4 ADRP X8, 0xB45000
	0x035F52A8 LDR X8, [X8 + 0xE0]
	0x035F52AC MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+40], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x035F52B0 MOV X3, X31

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x035F52B4 MOV X21, X0
	0x035F52B8 LDR X2, [X8]
	0x035F52BC BL 0x36DE178
	0x035F52C0 CBZ X20, 0x35F5384
	0x035F52C4 STR X21, [X20 + 0x20]
	0x035F52C8 B 0x35F5374
	0x035F52CC LDR W9, [X10]
	0x035F52D0 ADD W9, W9, 0x1
	0x035F52D4 ADD X8, X8, W9, 0x4, SXTW
	0x035F52D8 ADD X0, X8, 0x138
	0x035F52DC LDP X8, X1, [X0]
	0x035F52E0 MOV X0, X20
	0x035F52E4 BLR X8
	0x035F52E8 ADRP X22, 0xB45000
	0x035F52EC LDR X22, [X22 + 0x100]
	0x035F52F0 MOV X19, X0
	0x035F52F4 LDR X8, [X22]
	0x035F52F8 LDR W9, [X8 + 0xE0]
	0x035F52FC CBNZ W9, 0x35F530C
	0x035F5300 MOV X0, X8
	0x035F5304 BL 0x1C16DFC
	0x035F5308 LDR X8, [X22]
	0x035F530C LDR X9, [X8 + 0xB8]
	0x035F5310 LDR X20, [X9 + 0x8]
	0x035F5314 CBNZ X20, 0x35F536C
	0x035F5318 LDR W9, [X8 + 0xE0]
	0x035F531C CBNZ W9, 0x35F532C
	0x035F5320 MOV X0, X8
	0x035F5324 BL 0x1C16DFC
	0x035F5328 LDR X8, [X22]
	0x035F532C ADRP X9, 0xB45000
	0x035F5330 LDR X8, [X8 + 0xB8]
	0x035F5334 LDR X9, [X9 + 0xF0]
	0x035F5338 LDR X21, [X8]
	0x035F533C LDR X0, [X9]
	0x035F5340 BL 0x1C16F10
	0x035F5344 ADRP X8, 0xB45000
	0x035F5348 LDR X8, [X8 + 0xF8]
	0x035F534C MOV X1, X21
	0x035F5350 MOV X3, X31
	0x035F5354 MOV X20, X0
	0x035F5358 LDR X2, [X8]
	0x035F535C BL 0x36DE178
	0x035F5360 LDR X8, [X22]
	0x035F5364 LDR X8, [X8 + 0xB8]
	0x035F5368 STR X20, [X8 + 0x8]
	0x035F536C CBZ X19, 0x35F5384
	0x035F5370 STR X20, [X19 + 0x20]
	0x035F5374 LDP X20, X19, [X31 + 0x20]
	0x035F5378 LDP X22, X21, [X31 + 0x10]
	0x035F537C LDR X30, [X31], #0x30
	0x035F5380 RET
	0x035F5384 BL 0x1C16F20
	0x035F5388 ADRP X0, 0xB06000
	0x035F538C LDR X0, [X0 + 0x760]
	0x035F5390 BL 0x1C16D08
	0x035F5394 BL 0x1C16F10
	0x035F5398 MOV X19, X0
	0x035F539C ADRP X0, 0xB08000
	0x035F53A0 LDR X0, [X0 + 0xEC8]
	0x035F53A4 BL 0x1C16D08
	0x035F53A8 MOV X1, X0
	0x035F53AC MOV X0, X19
	0x035F53B0 MOV X2, X31
	0x035F53B4 BL 0x3316014
	0x035F53B8 ADRP X0, 0xB45000
	0x035F53BC LDR X0, [X0 + 0x108]
	0x035F53C0 BL 0x1C16D08
	0x035F53C4 MOV X1, X0
	0x035F53C8 MOV X0, X19
	0x035F53CC BL 0x1C16DEC
	0x035F53D0 STP X30, X21, [X31 - 0x20]!
	0x035F53D4 STP X20, X19, [X31 + 0x10]
	0x035F53D8 ADRP X21, 0xDEB000
	0x035F53DC LDRB W8, [X21 + 0x2FC]
	0x035F53E0 MOV W19, W1
	0x035F53E4 MOV X20, X0
	0x035F53E8 TBNZ X8, 0x0, 0x35F5400
	0x035F53EC ADRP X0, 0xAFE000
	0x035F53F0 LDR X0, [X0 + 0xE00]
	0x035F53F4 BL 0x1C16CF4
	0x035F53F8 MOVZ W8, 0x1
	0x035F53FC STRB W8, [X21 + 0x2FC]
	0x035F5400 TBZ X19, 0x0, 0x35F5454
	0x035F5404 LDR X19, [X20 + 0x10]
	0x035F5408 CBZ X19, 0x35F5480
	0x035F540C ADRP X10, 0xAFE000
	0x035F5410 LDR X8, [X19]
	0x035F5414 LDR X10, [X10 + 0xE00]
	0x035F5418 LDRH W9, [X8 + 0x12E]
	0x035F541C LDR X1, [X10]
	0x035F5420 CBZ X9, 0x35F5444
	0x035F5424 LDR X10, [X8 + 0xB0]
	0x035F5428 ADD X10, X10, 0x8
	0x035F542C LDUR X11, [X10 - 0x8]
	0x035F5430 CMP X11, X1
	0x035F5434 B.EQ 0x35F5460
	0x035F5438 SUBS X9, X9, 0x1
	0x035F543C ADD X10, X10, 0x10
	0x035F5440 B.NE 0x35F542C
	0x035F5444 MOV X0, X19
	0x035F5448 MOV W2, W31
	0x035F544C BL 0x1C5C788
	0x035F5450 B 0x35F546C
	0x035F5454 LDP X20, X19, [X31 + 0x10]
	0x035F5458 LDP X30, X21, [X31], #0x20
	0x035F545C RET
	0x035F5460 LDRSW X9, [X10]
	0x035F5464 ADD X8, X8, X9, 0x4, LSL
	0x035F5468 ADD X0, X8, 0x138
	0x035F546C LDP X2, X1, [X0]
	0x035F5470 MOV X0, X19
	0x035F5474 LDP X20, X19, [X31 + 0x10]
	0x035F5478 LDP X30, X21, [X31], #0x20
	0x035F547C BR X2
	0x035F5480 BL 0x1C16F20
	0x035F5484 RET
	0x035F5488 STR X30, [X31 - 0x20]!
	0x035F548C STP X20, X19, [X31 + 0x10]
	0x035F5490 ADRP X20, 0xDEB000
	0x035F5494 LDRB W8, [X20 + 0x2FD]
	0x035F5498 MOV X19, X0
	0x035F549C TBNZ X8, 0x0, 0x35F54B4
	0x035F54A0 ADRP X0, 0xB45000
	0x035F54A4 LDR X0, [X0 + 0xE8]
	0x035F54A8 BL 0x1C16CF4
	0x035F54AC MOVZ W8, 0x1
	0x035F54B0 STRB W8, [X20 + 0x2FD]
	0x035F54B4 LDR X19, [X19 + 0x10]
	0x035F54B8 CBZ X19, 0x35F5524
	0x035F54BC ADRP X10, 0xB45000
	0x035F54C0 LDR X8, [X19]
	0x035F54C4 LDR X10, [X10 + 0xE8]
	0x035F54C8 LDRH W9, [X8 + 0x12E]
	0x035F54CC LDR X1, [X10]
	0x035F54D0 CBZ X9, 0x35F54F4
	0x035F54D4 LDR X10, [X8 + 0xB0]
	0x035F54D8 ADD X10, X10, 0x8
	0x035F54DC LDUR X11, [X10 - 0x8]
	0x035F54E0 CMP X11, X1
	0x035F54E4 B.EQ 0x35F5504
	0x035F54E8 SUBS X9, X9, 0x1
	0x035F54EC ADD X10, X10, 0x10
	0x035F54F0 B.NE 0x35F54DC
	0x035F54F4 MOV X0, X19
	0x035F54F8 MOV W2, W31
	0x035F54FC BL 0x1C5C788
	0x035F5500 B 0x35F5510
	0x035F5504 LDRSW X9, [X10]
	0x035F5508 ADD X8, X8, X9, 0x4, LSL
	0x035F550C ADD X0, X8, 0x138
	0x035F5510 LDP X2, X1, [X0]
	0x035F5514 MOV X0, X19
	0x035F5518 LDP X20, X19, [X31 + 0x10]
	0x035F551C LDR X30, [X31], #0x20
	0x035F5520 BR X2
	0x035F5524 BL 0x1C16F20
	0x035F5528 STR X30, [X31 - 0x20]!
	0x035F552C STP X20, X19, [X31 + 0x10]
	0x035F5530 ADRP X20, 0xDEB000
	0x035F5534 LDRB W8, [X20 + 0x2FE]
	0x035F5538 MOV X19, X0
	0x035F553C TBNZ X8, 0x0, 0x35F5554
	0x035F5540 ADRP X0, 0xB45000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xDEC000
	008 Move W8, [X20+754]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0xB45000
	015 Move X0, [X0+3840]
	016 Call 0x1C17CF4
	017 Move X0, 0xB45000
	018 Move X0, [X0+3992]
	019 Call 0x1C17CF4
	020 Move X0, 0xB45000
	021 Move X0, [X0+4000]
	022 Call 0x1C17CF4
	023 Move X0, 0xB45000
	024 Move X0, [X0+4008]
	025 Call 0x1C17CF4
	026 Move X0, 0xB45000
	027 Move X0, [X0+4016]
	028 Call 0x1C17CF4
	029 Move X0, 0xB45000
	030 Move X0, [X0+4024]
	031 Call 0x1C17CF4
	032 Move X0, 0xB45000
	033 Move X0, [X0+4032]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+754], W8
	037 Move W8, [X19+16]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Compare W8, 0
	040 JumpIfNotEqual {171}
	041 Move X8, [X19+48]
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W9, TEMP
	045 Move [X19+16], W9
	046 Compare X8, 0
	047 JumpIfEqual {179}
	048 Move X21, [X8+24]
	049 Move X8, 0xB45000
	050 Move X8, [X8+3840]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X1, X21
	054 Move X2, X31
	055 Move X20, X0
	056 Call DerSequenceReader..ctor, X0, X1
	057 Move X8, 0xB45000
	058 Move X8, [X8+4032]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X8, 0xB45000
	062 Move X8, [X8+4016]
	063 Move X21, X0
	064 Move X1, [X8]
	065 Call Stack`1<Object>..ctor, X0
	066 Move [X19+64], X21
	067 Compare X20, 0
	068 JumpIfEqual {179}
	069 Move X0, X20
	070 Move X1, X31
	071 Call DerSequenceReader.get_HasData, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {166}
	076 Move X22, 0xB45000
	077 Move X22, [X22+4008]
	078 Move X21, [X19+64]
	079 Move X0, X20
	080 Move X1, X31
	081 Call DerSequenceReader.ReadSet, X0
	082 Compare X21, 0
	083 JumpIfEqual {179}
	084 Move X2, [X22]
	085 Move X1, X0
	086 Move X0, X21
	087 Call Stack`1<Object>.Push, X0, X1
	088 Move X0, X20
	089 Move X1, X31
	090 Call DerSequenceReader.get_HasData, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {78}
	095 Move TEMP, 0
	096 Not TEMP
	097 Move W8, TEMP
	098 Move [X19+16], W8
	099 Move X8, 0xB45000
	100 Move X8, [X8+4000]
	101 Move X1, [X8]
	102 Call Stack`1<Object>.Pop, X0
	103 Move [X19+72], X0
	104 Move X22, 0xB45000
	105 Move X22, [X22+3992]
	106 Move X0, [X19+72]
	107 Compare X0, 0
	108 JumpIfEqual {179}
	109 Move X1, X31
	110 Call DerSequenceReader.get_HasData, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {165}
	115 Move X0, [X19+72]
	116 Compare X0, 0
	117 JumpIfEqual {179}
	118 Move X1, X31
	119 Call DerSequenceReader.ReadSequence, X0
	120 Compare X0, 0
	121 JumpIfEqual {179}
	122 Move X1, X31
	123 Move X21, X0
	124 Call DerSequenceReader.ReadOidAsString, X0
	125 Move X20, X0
	126 Move X0, X21
	127 Move X1, X31
	128 Call DerSequenceReader.PeekTag, X0
	129 And W8, W0, 255
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X2, X31
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X21
	136 Move X1, X31
	137 Call DerSequenceReader.ReadBMPString, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X21
	141 Move X1, X31
	142 Call DerSequenceReader.ReadPrintableString, X0
	143 Move X0, X21
	144 Move X1, X31
	145 Call DerSequenceReader.ReadT61String, X0
	146 Move X0, X21
	147 Move X1, X31
	148 Call DerSequenceReader.ReadIA5String, X0
	149 Move X0, X21
	150 Move X1, X31
	151 Call DerSequenceReader.ReadUtf8String, X0
	152 Move X2, X0
	153 Compare X2, 0
	154 JumpIfEqual {106}
	155 Move X3, [X22]
	156 Add X0, X31, 0
	157 Move X1, X20
	158 Move [X31], X31
	159 Move [X31+8], X31
	160 Call KeyValuePair`2<Object, Object>..ctor, X0, X1, X2
	161 Move V0, [X31]
	162 Move W0, 1
	163 Move [X19+16], W0
	164 Move [X19+24], V0
	165 Move [X19+72], X31
	166 Move X0, [X19+64]
	167 Compare X0, 0
	168 JumpIfEqual {179}
	169 Move W8, [X0+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move W0, W31
	172 Move X20, [X31+48]
	173 Move X19, [X31+56]
	174 Move X22, [X31+32]
	175 Move X21, [X31+40]
	176 Move X30, [X31+16]
	177 Add X31, X31, 64
	178 Return X0
	179 Call 0x1C17F20

Method: System.Collections.Generic.KeyValuePair`2<System.String, System.String> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.String>>.get_Current()

Disassembly:
	0x035F5544 LDR X0, [X0 + 0xE8]
	0x035F5548 BL 0x1C16CF4
	0x035F554C MOVZ W8, 0x1

ISIL:
	001 Move X8, [X0+24]
	002 Move X1, [X0+32]
	003 Move X0, X8
	004 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x035F5550 STRB W8, [X20 + 0x2FE]
	0x035F5554 LDR X19, [X19 + 0x10]
	0x035F5558 CBZ X19, 0x35F562C
	0x035F555C ADRP X20, 0xB45000
	0x035F5560 LDR X8, [X19]
	0x035F5564 LDR X20, [X20 + 0xE8]
	0x035F5568 LDRH W9, [X8 + 0x12E]
	0x035F556C LDR X1, [X20]
	0x035F5570 CBZ X9, 0x35F5594
	0x035F5574 LDR X10, [X8 + 0xB0]
	0x035F5578 ADD X10, X10, 0x8
	0x035F557C LDUR X11, [X10 - 0x8]
	0x035F5580 CMP X11, X1
	0x035F5584 B.EQ 0x35F55A4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAFF000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB45000
	011 Move X0, [X0+4040]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x035F5588 SUBS X9, X9, 0x1
	0x035F558C ADD X10, X10, 0x10
	0x035F5590 B.NE 0x35F557C
	0x035F5594 MOVZ W2, 0x1
	0x035F5598 MOV X0, X19
	0x035F559C BL 0x1C5C788
	0x035F55A0 B 0x35F55B4
	0x035F55A4 LDR W9, [X10]
	0x035F55A8 ADD W9, W9, 0x1
	0x035F55AC ADD X8, X8, W9, 0x4, SXTW
	0x035F55B0 ADD X0, X8, 0x138
	0x035F55B4 LDP X8, X1, [X0]
	0x035F55B8 MOV X0, X19
	0x035F55BC BLR X8
	0x035F55C0 LDR X8, [X19]
	0x035F55C4 LDR X1, [X20]
	0x035F55C8 MOV X20, X0
	0x035F55CC LDRH W9, [X8 + 0x12E]
	0x035F55D0 CBZ X9, 0x35F55F4
	0x035F55D4 LDR X10, [X8 + 0xB0]
	0x035F55D8 ADD X10, X10, 0x8
	0x035F55DC LDUR X11, [X10 - 0x8]
	0x035F55E0 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDEC000
	007 Move X20, 0xB45000
	008 Move W8, [X21+755]
	009 Move X20, [X20+4048]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB45000
	016 Move X0, [X0+4048]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+755], W8
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 Move X0, [X20]
	022 Add X1, X31, 0
	023 Move [X31], V0
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.String, System.String>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator()

Disassembly:
	0x035F55E4 B.EQ 0x35F5604
	0x035F55E8 SUBS X9, X9, 0x1
	0x035F55EC ADD X10, X10, 0x10
	0x035F55F0 B.NE 0x35F55DC
	0x035F55F4 MOVZ W2, 0x2
	0x035F55F8 MOV X0, X19
	0x035F55FC BL 0x1C5C788
	0x035F5600 B 0x35F5614
	0x035F5604 LDR W9, [X10]
	0x035F5608 ADD W9, W9, 0x2
	0x035F560C ADD X8, X8, W9, 0x4, SXTW
	0x035F5610 ADD X0, X8, 0x138
	0x035F5614 LDP X3, X2, [X0]
	0x035F5618 MOV X0, X19
	0x035F561C MOV X1, X20
	0x035F5620 LDP X20, X19, [X31 + 0x10]
	0x035F5624 LDR X30, [X31], #0x20
	0x035F5628 BR X3
	0x035F562C BL 0x1C16F20
	0x035F5630 LDR W0, [X0 + 0x18]
	0x035F5634 RET
	0x035F5638 STP X30, X21, [X31 - 0x20]!
	0x035F563C STP X20, X19, [X31 + 0x10]
	0x035F5640 ADRP X20, 0xDEB000
	0x035F5644 LDRB W8, [X20 + 0x300]
	0x035F5648 MOV X19, X0
	0x035F564C TBNZ X8, 0x0, 0x35F5670
	0x035F5650 ADRP X0, 0xB45000
	0x035F5654 LDR X0, [X0 + 0xE8]
	0x035F5658 BL 0x1C16CF4
	0x035F565C ADRP X0, 0xB2C000
	0x035F5660 LDR X0, [X0 + 0x400]
	0x035F5664 BL 0x1C16CF4
	0x035F5668 MOVZ W8, 0x1
	0x035F566C STRB W8, [X20 + 0x300]
	0x035F5670 LDR W8, [X19 + 0x18]
	0x035F5674 CBNZ W8, 0x35F5794
	0x035F5678 LDR X20, [X19 + 0x10]
	0x035F567C CBZ X20, 0x35F5790

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDEC000
	005 Move W8, [X20+756]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB45000
	012 Move X0, [X0+3984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+756], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+40]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X20, X19
	024 Move X8, 0xB45000
	025 Move X8, [X8+3984]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X20, X0
	030 Call Object..ctor, X0
	031 Move X0, X31
	032 Move [X20+16], W31
	033 Call Environment.get_CurrentManagedThreadId
	034 Move [X20+40], W0
	035 Move X8, [X19+56]
	036 Move X0, X20
	037 Move [X20+48], X8
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x035F5680 ADRP X21, 0xB45000

ISIL:
	001 Call <ReadReverseRdns>d__21.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator, X0
	002 Return X0

