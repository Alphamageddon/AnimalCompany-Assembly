Type: MagicLightProbes.PartialVolumeFilling/<ExecutePass>d__1

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x031D0FD8 ADRP X20, 0x120C000
	0x031D0FDC ADRP X21, 0xF4F000
	0x031D0FE0 LDRB W8, [X20 + 0x1B]
	0x031D0FE4 LDR X21, [X21 + 0xD90]
	0x031D0FE8 MOV X19, X1
	0x031D0FEC TBNZ X8, 0x0, 0x31D1004
	0x031D0FF0 ADRP X0, 0xF4F000
	0x031D0FF4 LDR X0, [X0 + 0xD90]
	0x031D0FF8 BL 0x1C16CF4
	0x031D0FFC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x031D1008 BL 0x1C16F10

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x031D100C MOV X1, X31
	0x031D1010 MOV X20, X0
	0x031D1014 BL 0x33BDD8C
	0x031D1018 STR W31, [X20 + 0x10]
	0x031D101C STR X19, [X20 + 0x20]
	0x031D1020 MOV X0, X20
	0x031D1024 LDP X20, X19, [X31 + 0x10]
	0x031D1028 LDP X30, X21, [X31], #0x20
	0x031D102C RET
	0x031D1030 STR X30, [X31 - 0x20]!
	0x031D1034 STP X20, X19, [X31 + 0x10]
	0x031D1038 MOV W19, W1
	0x031D103C MOV X1, X31
	0x031D1040 MOV X20, X0
	0x031D1044 BL 0x33BDD8C
	0x031D1048 STR W19, [X20 + 0x10]
	0x031D104C LDP X20, X19, [X31 + 0x10]
	0x031D1050 LDR X30, [X31], #0x20
	0x031D1054 RET
	0x031D1058 MOV X1, X31
	0x031D105C B 0x33BDD8C
	0x031D1060 RET
	0x031D1064 STR X30, [X31 - 0x40]!
	0x031D1068 STP X24, X23, [X31 + 0x10]
	0x031D106C STP X22, X21, [X31 + 0x20]
	0x031D1070 STP X20, X19, [X31 + 0x30]
	0x031D1074 ADRP X20, 0x120B000
	0x031D1078 LDRB W8, [X20 + 0x1C]
	0x031D107C MOV X19, X0
	0x031D1080 TBNZ X8, 0x0, 0x31D10F8
	0x031D1084 ADRP X0, 0xF4E000
	0x031D1088 LDR X0, [X0 + 0xC28]
	0x031D108C BL 0x1C16CF4
	0x031D1090 ADRP X0, 0xF4E000
	0x031D1094 LDR X0, [X0 + 0xCD8]
	0x031D1098 BL 0x1C16CF4
	0x031D109C ADRP X0, 0xF4E000
	0x031D10A0 LDR X0, [X0 + 0xD98]
	0x031D10A4 BL 0x1C16CF4
	0x031D10A8 ADRP X0, 0xF4E000
	0x031D10AC LDR X0, [X0 + 0xC08]
	0x031D10B0 BL 0x1C16CF4
	0x031D10B4 ADRP X0, 0xF28000
	0x031D10B8 LDR X0, [X0 + 0xCA0]
	0x031D10BC BL 0x1C16CF4
	0x031D10C0 ADRP X0, 0xF4E000
	0x031D10C4 LDR X0, [X0 + 0xCE0]
	0x031D10C8 BL 0x1C16CF4
	0x031D10CC ADRP X0, 0xF4E000
	0x031D10D0 LDR X0, [X0 + 0xCE8]
	0x031D10D4 BL 0x1C16CF4
	0x031D10D8 ADRP X0, 0xF4E000
	0x031D10DC LDR X0, [X0 + 0xC00]
	0x031D10E0 BL 0x1C16CF4
	0x031D10E4 ADRP X0, 0xF4E000
	0x031D10E8 LDR X0, [X0 + 0xDA0]
	0x031D10EC BL 0x1C16CF4
	0x031D10F0 MOVZ W8, 0x1
	0x031D10F4 STRB W8, [X20 + 0x1C]
	0x031D10F8 LDR W8, [X19 + 0x10]
	0x031D10FC CMP W8, 0x1
	0x031D1100 B.EQ 0x31D1188
	0x031D1104 CBNZ W8, 0x31D1194
	0x031D1108 LDR X8, [X19 + 0x20]
	0x031D110C MOVN W9, 0x0
	0x031D1110 STR W9, [X19 + 0x10]
	0x031D1114 CBZ X8, 0x31D13A0
	0x031D1118 ADRP X9, 0xF4E000
	0x031D111C LDR X9, [X9 + 0xDA0]
	0x031D1120 MOVI V0.2D, 0x0
	0x031D1124 LDR X9, [X9]
	0x031D1128 STR D0, [X8 + 0x370]
	0x031D112C STR X9, [X8 + 0x368]
	0x031D1130 ADRP X8, 0xF4E000
	0x031D1134 LDR X8, [X8 + 0xC00]
	0x031D1138 LDR X0, [X8]
	0x031D113C BL 0x1C16F10
	0x031D1140 ADRP X8, 0xF4E000
	0x031D1144 LDR X8, [X8 + 0xC08]
	0x031D1148 MOV X20, X0
	0x031D114C LDR X1, [X8]
	0x031D1150 BL 0x301B7C4
	0x031D1154 LDR X8, [X19 + 0x20]
	0x031D1158 STR X20, [X19 + 0x28]
	0x031D115C CBZ X8, 0x31D13A0
	0x031D1160 LDRB W9, [X8 + 0x184]
	0x031D1164 CBZ W9, 0x31D119C
	0x031D1168 LDR X9, [X8 + 0x2F0]
	0x031D116C CBZ X9, 0x31D13A0
	0x031D1170 LDR W9, [X9 + 0x18]
	0x031D1174 CMP W9, 0x1
	0x031D1178 B.LT 0x31D119C
	0x031D117C MOV W1, W31
	0x031D1180 STR W31, [X19 + 0x30]
	0x031D1184 B 0x31D1324
	0x031D1188 MOVN W8, 0x0
	0x031D118C STR W8, [X19 + 0x10]
	0x031D1190 B 0x31D1314
	0x031D1194 MOV W0, W31
	0x031D1198 B 0x31D11D4
	0x031D119C CBZ X20, 0x31D13A0
	0x031D11A0 LDP W2, W8, [X20 + 0x18]
	0x031D11A4 ADD W8, W8, 0x1
	0x031D11A8 CMP W2, 0x1
	0x031D11AC STP W31, W8, [X20 + 0x18]
	0x031D11B0 B.LT 0x31D11C4
	0x031D11B4 LDR X0, [X20 + 0x10]
	0x031D11B8 MOV W1, W31
	0x031D11BC MOV X3, X31
	0x031D11C0 BL 0x339FA34
	0x031D11C4 LDR X8, [X19 + 0x20]
	0x031D11C8 CBZ X8, 0x31D13A0
	0x031D11CC MOV W0, W31
	0x031D11D0 STRB W31, [X8 + 0x365]
	0x031D11D4 LDP X20, X19, [X31 + 0x30]
	0x031D11D8 LDP X22, X21, [X31 + 0x20]
	0x031D11DC LDP X24, X23, [X31 + 0x10]
	0x031D11E0 LDR X30, [X31], #0x40
	0x031D11E4 RET
	0x031D11E8 LDR X2, [X23]
	0x031D11EC BL 0x301BCCC
	0x031D11F0 CBZ X0, 0x31D13A0
	0x031D11F4 LDR X8, [X19 + 0x20]
	0x031D11F8 CBZ X8, 0x31D13A0
	0x031D11FC LDR W9, [X8 + 0x340]
	0x031D1200 LDR W10, [X0 + 0x24]
	0x031D1204 SUB W9, W9, 0x1
	0x031D1208 CMP W10, W9
	0x031D120C B.EQ 0x31D1240
	0x031D1210 LDR X0, [X8 + 0x2E8]
	0x031D1214 CBZ X0, 0x31D13A0
	0x031D1218 LDR W1, [X19 + 0x30]
	0x031D121C LDR X2, [X23]
	0x031D1220 BL 0x301BCCC
	0x031D1224 CBZ X0, 0x31D13A0
	0x031D1228 LDR X8, [X19 + 0x20]
	0x031D122C CBZ X8, 0x31D13A0
	0x031D1230 LDR W9, [X0 + 0x2C]
	0x031D1234 LDR W10, [X8 + 0x348]
	0x031D1238 CMP W9, W10
	0x031D123C B.NE 0x31D12B8
	0x031D1240 LDR X0, [X8 + 0x2E8]
	0x031D1244 CBZ X0, 0x31D13A0
	0x031D1248 LDR W1, [X19 + 0x30]
	0x031D124C LDR X2, [X23]
	0x031D1250 LDR X20, [X19 + 0x28]
	0x031D1254 BL 0x301BCCC
	0x031D1258 CBZ X20, 0x31D13A0
	0x031D125C ADRP X9, 0xF4E000
	0x031D1260 LDR X9, [X9 + 0xC28]
	0x031D1264 LDR W10, [X20 + 0x1C]
	0x031D1268 LDR X8, [X20 + 0x10]
	0x031D126C LDR X9, [X9]
	0x031D1270 ADD W10, W10, 0x1
	0x031D1274 STR W10, [X20 + 0x1C]
	0x031D1278 CBZ X8, 0x31D13A0
	0x031D127C LDRSW X10, [X20 + 0x18]
	0x031D1280 LDR W11, [X8 + 0x18]
	0x031D1284 MOV X1, X0
	0x031D1288 CMP W10, W11
	0x031D128C B.CS 0x31D12A4
	0x031D1290 ADD W9, W10, 0x1
	0x031D1294 ADD X8, X8, X10, 0x3, LSL
	0x031D1298 STR W9, [X20 + 0x18]
	0x031D129C STR X1, [X8 + 0x20]
	0x031D12A0 B 0x31D12B8
	0x031D12A4 LDR X8, [X9 + 0x20]
	0x031D12A8 MOV X0, X20
	0x031D12AC LDR X8, [X8 + 0xC0]
	0x031D12B0 LDR X2, [X8 + 0x70]
	0x031D12B4 BL 0x301BF90
	0x031D12B8 LDR X8, [X19 + 0x20]
	0x031D12BC CBZ X8, 0x31D13A0
	0x031D12C0 LDRB W9, [X8 + 0x33A]
	0x031D12C4 CBNZ W9, 0x31D1314
	0x031D12C8 LDR X9, [X8 + 0x2E8]
	0x031D12CC CBZ X9, 0x31D13A0
	0x031D12D0 LDR W10, [X8 + 0x370]
	0x031D12D4 LDR V0, [X9 + 0x18]
	0x031D12D8 LDR W11, [X8 + 0x374]
	0x031D12DC MOVZ W9, 0x42C80000
	0x031D12E0 SCVTF S1, W10
	0x031D12E4 SCVTF S0, S0
	0x031D12E8 FDIV S0, S1, S0
	0x031D12EC FMOV S1, W9
	0x031D12F0 ADD W9, W10, 0x1
	0x031D12F4 STR W9, [X8 + 0x370]
	0x031D12F8 ADD W9, W11, 0x1
	0x031D12FC CMP W9, 0x64
	0x031D1300 FMUL S0, S0, S1
	0x031D1304 CSINC W9, W31, W11, EQ
	0x031D1308 STR S0, [X8 + 0x37C]
	0x031D130C STR W9, [X8 + 0x374]
	0x031D1310 B.EQ 0x31D13A4
	0x031D1314 LDR W9, [X19 + 0x30]
	0x031D1318 LDR X8, [X19 + 0x20]
	0x031D131C ADD W1, W9, 0x1
	0x031D1320 STR W1, [X19 + 0x30]
	0x031D1324 CBZ X8, 0x31D13A0
	0x031D1328 LDR X0, [X8 + 0x2E8]
	0x031D132C CBZ X0, 0x31D13A0
	0x031D1330 LDR W8, [X0 + 0x18]
	0x031D1334 ADRP X23, 0xF4E000
	0x031D1338 LDR X23, [X23 + 0xCE8]
	0x031D133C CMP W1, W8
	0x031D1340 B.LT 0x31D11E8
	0x031D1344 LDR X20, [X19 + 0x28]
	0x031D1348 CBZ X20, 0x31D13A0
	0x031D134C ADRP X24, 0xF4E000
	0x031D1350 LDR X24, [X24 + 0xD98]
	0x031D1354 MOV W21, W31
	0x031D1358 LDR W8, [X20 + 0x18]
	0x031D135C CMP W21, W8
	0x031D1360 B.GE 0x31D11A0
	0x031D1364 LDR X8, [X19 + 0x20]
	0x031D1368 CBZ X8, 0x31D13A0
	0x031D136C LDR X2, [X23]
	0x031D1370 LDR X22, [X8 + 0x2E8]
	0x031D1374 MOV X0, X20
	0x031D1378 MOV W1, W21
	0x031D137C BL 0x301BCCC
	0x031D1380 CBZ X22, 0x31D13A0
	0x031D1384 LDR X2, [X24]
	0x031D1388 MOV X1, X0
	0x031D138C MOV X0, X22
	0x031D1390 BL 0x301D7A8
	0x031D1394 LDR X20, [X19 + 0x28]
	0x031D1398 ADD W21, W21, 0x1
	0x031D139C CBNZ X20, 0x31D1358
	0x031D13A0 BL 0x1C16F20
	0x031D13A4 MOVZ W0, 0x1
	0x031D13A8 STR X31, [X19 + 0x18]
	0x031D13AC STR W0, [X19 + 0x10]
	0x031D13B0 B 0x31D11D4
	0x031D13B4 LDR X0, [X0 + 0x18]
	0x031D13B8 RET
	0x031D13BC STP X30, X19, [X31 - 0x10]!
	0x031D13C0 ADRP X0, 0xF22000
	0x031D13C4 LDR X0, [X0 + 0xB40]
	0x031D13C8 BL 0x1C16D08
	0x031D13CC BL 0x1C16F10
	0x031D13D0 MOV X1, X31
	0x031D13D4 MOV X19, X0
	0x031D13D8 BL 0x3380310
	0x031D13DC ADRP X0, 0xF4E000
	0x031D13E0 LDR X0, [X0 + 0xDA8]
	0x031D13E4 BL 0x1C16D08
	0x031D13E8 MOV X1, X0
	0x031D13EC MOV X0, X19
	0x031D13F0 BL 0x1C16DEC
	0x031D13F4 LDR X0, [X0 + 0x18]
	0x031D13F8 RET
	0x031D13FC STR X30, [X31 - 0x30]!
	0x031D1400 STP X22, X21, [X31 + 0x10]
	0x031D1404 STP X20, X19, [X31 + 0x20]
	0x031D1408 ADRP X21, 0x120B000
	0x031D140C ADRP X22, 0xF4E000
	0x031D1410 LDRB W8, [X21 + 0x1D]
	0x031D1414 LDR X22, [X22 + 0xDB0]
	0x031D1418 MOV X19, X2
	0x031D141C MOV X20, X1
	0x031D1420 TBNZ X8, 0x0, 0x31D1438
	0x031D1424 ADRP X0, 0xF4E000
	0x031D1428 LDR X0, [X0 + 0xDB0]
	0x031D142C BL 0x1C16CF4
	0x031D1430 MOVZ W8, 0x1
	0x031D1434 STRB W8, [X21 + 0x1D]
	0x031D1438 LDR X0, [X22]
	0x031D143C BL 0x1C16F10
	0x031D1440 MOV X1, X31
	0x031D1444 MOV X21, X0
	0x031D1448 BL 0x33BDD8C
	0x031D144C STR W31, [X21 + 0x10]
	0x031D1450 STP X19, X20, [X21 + 0x20]
	0x031D1454 MOV X0, X21
	0x031D1458 LDP X20, X19, [X31 + 0x20]
	0x031D145C LDP X22, X21, [X31 + 0x10]
	0x031D1460 LDR X30, [X31], #0x30
	0x031D1464 RET
	0x031D1468 STR X30, [X31 - 0x20]!
	0x031D146C STP X20, X19, [X31 + 0x10]
	0x031D1470 MOV W19, W1
	0x031D1474 MOV X1, X31
	0x031D1478 MOV X20, X0
	0x031D147C BL 0x33BDD8C
	0x031D1480 STR W19, [X20 + 0x10]
	0x031D1484 LDP X20, X19, [X31 + 0x10]
	0x031D1488 LDR X30, [X31], #0x20
	0x031D148C RET
	0x031D1490 MOV X1, X31
	0x031D1494 B 0x33BDD8C
	0x031D1498 RET
	0x031D149C STP D9, D8, [X31 - 0x50]!
	0x031D14A0 STR X30, [X31 + 0x10]
	0x031D14A4 STP X24, X23, [X31 + 0x20]
	0x031D14A8 STP X22, X21, [X31 + 0x30]
	0x031D14AC STP X20, X19, [X31 + 0x40]
	0x031D14B0 ADRP X20, 0x120B000
	0x031D14B4 LDRB W8, [X20 + 0x1E]
	0x031D14B8 MOV X19, X0
	0x031D14BC TBNZ X8, 0x0, 0x31D154C
	0x031D14C0 ADRP X0, 0xF4B000
	0x031D14C4 LDR X0, [X0 + 0x4F0]
	0x031D14C8 BL 0x1C16CF4
	0x031D14CC ADRP X0, 0xF26000
	0x031D14D0 LDR X0, [X0 + 0x3B8]
	0x031D14D4 BL 0x1C16CF4
	0x031D14D8 ADRP X0, 0xF26000
	0x031D14DC LDR X0, [X0 + 0x380]
	0x031D14E0 BL 0x1C16CF4
	0x031D14E4 ADRP X0, 0xF4E000
	0x031D14E8 LDR X0, [X0 + 0x5B0]
	0x031D14EC BL 0x1C16CF4
	0x031D14F0 ADRP X0, 0xF26000
	0x031D14F4 LDR X0, [X0 + 0x978]
	0x031D14F8 BL 0x1C16CF4
	0x031D14FC ADRP X0, 0xF24000
	0x031D1500 LDR X0, [X0 + 0x9B0]
	0x031D1504 BL 0x1C16CF4
	0x031D1508 ADRP X0, 0xF4E000
	0x031D150C LDR X0, [X0 + 0xD20]
	0x031D1510 BL 0x1C16CF4
	0x031D1514 ADRP X0, 0xF4E000
	0x031D1518 LDR X0, [X0 + 0xDB8]
	0x031D151C BL 0x1C16CF4
	0x031D1520 ADRP X0, 0xF4E000
	0x031D1524 LDR X0, [X0 + 0xD28]
	0x031D1528 BL 0x1C16CF4
	0x031D152C ADRP X0, 0xF4E000
	0x031D1530 LDR X0, [X0 + 0xD38]
	0x031D1534 BL 0x1C16CF4
	0x031D1538 ADRP X0, 0xF4E000
	0x031D153C LDR X0, [X0 + 0xDC0]
	0x031D1540 BL 0x1C16CF4
	0x031D1544 MOVZ W8, 0x1
	0x031D1548 STRB W8, [X20 + 0x1E]
	0x031D154C LDR W8, [X19 + 0x10]
	0x031D1550 CMP W8, 0x1
	0x031D1554 B.EQ 0x31D184C
	0x031D1558 CBNZ W8, 0x31D19E8
	0x031D155C LDR X8, [X19 + 0x20]
	0x031D1560 MOVN W9, 0x0
	0x031D1564 STR W9, [X19 + 0x10]
	0x031D1568 CBZ X8, 0x31D1A14
	0x031D156C LDR X9, [X8 + 0x88]
	0x031D1570 CBZ X9, 0x31D1A14
	0x031D1574 LDR W10, [X9 + 0x1C]
	0x031D1578 ADD W10, W10, 0x1
	0x031D157C STP W31, W10, [X9 + 0x18]
	0x031D1580 LDR X8, [X8 + 0x80]
	0x031D1584 CBZ X8, 0x31D1A14
	0x031D1588 ADRP X24, 0xF4B000
	0x031D158C LDR W21, [X8 + 0x18]
	0x031D1590 LDR X24, [X24 + 0x4F0]
	0x031D1594 LDR X0, [X24]
	0x031D1598 BL 0x1C16F10
	0x031D159C MOVZ W2, 0xC
	0x031D15A0 MOV W1, W21
	0x031D15A4 MOV W3, W31
	0x031D15A8 MOV X4, X31
	0x031D15AC MOV X20, X0
	0x031D15B0 BL 0x3C3AC18
	0x031D15B4 LDR X8, [X19 + 0x20]
	0x031D15B8 CBZ X8, 0x31D1A14
	0x031D15BC LDR X8, [X8 + 0x80]
	0x031D15C0 CBZ X8, 0x31D1A14
	0x031D15C4 LDR X0, [X24]
	0x031D15C8 LDR W22, [X8 + 0x18]
	0x031D15CC BL 0x1C16F10
	0x031D15D0 MOVZ W2, 0xC
	0x031D15D4 MOV W1, W22
	0x031D15D8 MOV W3, W31
	0x031D15DC MOV X4, X31
	0x031D15E0 MOV X21, X0
	0x031D15E4 BL 0x3C3AC18
	0x031D15E8 LDR X8, [X19 + 0x20]
	0x031D15EC CBZ X8, 0x31D1A14
	0x031D15F0 LDR X8, [X8 + 0x80]
	0x031D15F4 CBZ X8, 0x31D1A14
	0x031D15F8 LDR X0, [X24]
	0x031D15FC LDR W23, [X8 + 0x18]
	0x031D1600 BL 0x1C16F10
	0x031D1604 MOVZ W2, 0xC
	0x031D1608 MOV W1, W23
	0x031D160C MOV W3, W31
	0x031D1610 MOV X4, X31
	0x031D1614 MOV X22, X0
	0x031D1618 BL 0x3C3AC18
	0x031D161C LDR X8, [X19 + 0x20]
	0x031D1620 CBZ X8, 0x31D1A14
	0x031D1624 LDR X0, [X8 + 0x80]
	0x031D1628 CBZ X0, 0x31D1A14
	0x031D162C ADRP X23, 0xF4E000
	0x031D1630 LDR X23, [X23 + 0x5B0]
	0x031D1634 LDR X1, [X23]
	0x031D1638 BL 0x30CE118
	0x031D163C CBZ X20, 0x31D1A14
	0x031D1640 MOV X1, X0
	0x031D1644 MOV X0, X20
	0x031D1648 MOV X2, X31
	0x031D164C BL 0x3C3ACC4
	0x031D1650 LDR X8, [X19 + 0x20]
	0x031D1654 CBZ X8, 0x31D1A14
	0x031D1658 LDR X0, [X8 + 0x80]
	0x031D165C CBZ X0, 0x31D1A14
	0x031D1660 LDR X1, [X23]
	0x031D1664 BL 0x30CE118
	0x031D1668 CBZ X21, 0x31D1A14
	0x031D166C MOV X1, X0
	0x031D1670 MOV X0, X21
	0x031D1674 MOV X2, X31
	0x031D1678 BL 0x3C3ACC4
	0x031D167C LDR X8, [X19 + 0x20]
	0x031D1680 CBZ X8, 0x31D1A14
	0x031D1684 LDR X0, [X8 + 0xC8]
	0x031D1688 CBZ X0, 0x31D1A14
	0x031D168C LDR X1, [X23]
	0x031D1690 BL 0x30CE118
	0x031D1694 CBZ X22, 0x31D1A14
	0x031D1698 MOV X1, X0
	0x031D169C MOV X0, X22
	0x031D16A0 MOV X2, X31
	0x031D16A4 BL 0x3C3ACC4
	0x031D16A8 LDR X8, [X19 + 0x28]
	0x031D16AC CBZ X8, 0x31D1A14
	0x031D16B0 LDR X23, [X8 + 0x1D0]
	0x031D16B4 CBZ X23, 0x31D1A14
	0x031D16B8 ADRP X24, 0xF4E000
	0x031D16BC LDR X24, [X24 + 0xD38]
	0x031D16C0 MOV X0, X23
	0x031D16C4 MOV X2, X31
	0x031D16C8 LDR X1, [X24]
	0x031D16CC BL 0x3C3B40C
	0x031D16D0 ADRP X8, 0xF4E000
	0x031D16D4 LDR X8, [X8 + 0xD28]
	0x031D16D8 MOV W1, W0
	0x031D16DC MOV X0, X23
	0x031D16E0 MOV X3, X20
	0x031D16E4 LDR X2, [X8]
	0x031D16E8 MOV X4, X31
	0x031D16EC BL 0x3C3B770
	0x031D16F0 LDR X8, [X19 + 0x28]
	0x031D16F4 CBZ X8, 0x31D1A14
	0x031D16F8 LDR X23, [X8 + 0x1D0]
	0x031D16FC CBZ X23, 0x31D1A14
	0x031D1700 LDR X1, [X24]
	0x031D1704 MOV X0, X23
	0x031D1708 MOV X2, X31
	0x031D170C BL 0x3C3B40C
	0x031D1710 ADRP X8, 0xF4E000
	0x031D1714 LDR X8, [X8 + 0xD20]
	0x031D1718 MOV W1, W0
	0x031D171C MOV X0, X23
	0x031D1720 MOV X3, X21
	0x031D1724 LDR X2, [X8]
	0x031D1728 MOV X4, X31
	0x031D172C BL 0x3C3B770
	0x031D1730 LDR X8, [X19 + 0x28]
	0x031D1734 CBZ X8, 0x31D1A14
	0x031D1738 LDR X23, [X8 + 0x1D0]
	0x031D173C CBZ X23, 0x31D1A14
	0x031D1740 LDR X1, [X24]
	0x031D1744 MOV X0, X23
	0x031D1748 MOV X2, X31
	0x031D174C BL 0x3C3B40C
	0x031D1750 ADRP X8, 0xF4E000
	0x031D1754 LDR X8, [X8 + 0xDB8]
	0x031D1758 MOV W1, W0
	0x031D175C MOV X0, X23
	0x031D1760 MOV X3, X22
	0x031D1764 LDR X2, [X8]
	0x031D1768 MOV X4, X31
	0x031D176C BL 0x3C3B770
	0x031D1770 LDR X8, [X19 + 0x28]
	0x031D1774 CBZ X8, 0x31D1A14
	0x031D1778 LDR X0, [X8 + 0x1D0]
	0x031D177C CBZ X0, 0x31D1A14
	0x031D1780 LDR V0, [X8 + 0x10C]
	0x031D1784 ADRP X8, 0xF4E000
	0x031D1788 LDR X8, [X8 + 0xDC0]
	0x031D178C MOV X2, X31
	0x031D1790 LDR X1, [X8]
	0x031D1794 BL 0x3C3B710
	0x031D1798 LDR X8, [X19 + 0x28]
	0x031D179C CBZ X8, 0x31D1A14
	0x031D17A0 LDR X22, [X8 + 0x1D0]
	0x031D17A4 CBZ X22, 0x31D1A14
	0x031D17A8 LDR X1, [X24]
	0x031D17AC MOV X0, X22
	0x031D17B0 MOV X2, X31
	0x031D17B4 BL 0x3C3B40C
	0x031D17B8 MOV W1, W0
	0x031D17BC MOVZ W2, 0x100
	0x031D17C0 MOVZ W3, 0x1
	0x031D17C4 MOVZ W4, 0x1
	0x031D17C8 MOV X0, X22
	0x031D17CC MOV X5, X31
	0x031D17D0 BL 0x3C3B61C
	0x031D17D4 MOV X0, X20
	0x031D17D8 MOV X1, X31
	0x031D17DC BL 0x3C3AC4C
	0x031D17E0 ADRP X8, 0xF24000
	0x031D17E4 LDR X8, [X8 + 0x9B0]
	0x031D17E8 MOV W1, W0
	0x031D17EC LDR X8, [X8]
	0x031D17F0 MOV X0, X8
	0x031D17F4 BL 0x1C16D6C
	0x031D17F8 MOV X1, X0
	0x031D17FC STR X0, [X19 + 0x30]
	0x031D1800 MOV X0, X21
	0x031D1804 MOV X2, X31
	0x031D1808 BL 0x3C3B170
	0x031D180C MOV X0, X20
	0x031D1810 MOV X1, X31
	0x031D1814 BL 0x3C3A930
	0x031D1818 MOV X0, X21
	0x031D181C MOV X1, X31
	0x031D1820 BL 0x3C3A930
	0x031D1824 LDR X8, [X19 + 0x20]
	0x031D1828 CBZ X8, 0x31D1A14
	0x031D182C LDR X9, [X8 + 0x80]
	0x031D1830 CBZ X9, 0x31D1A14
	0x031D1834 LDR W10, [X9 + 0x1C]
	0x031D1838 MOV W8, W31
	0x031D183C ADD W10, W10, 0x1
	0x031D1840 STP W31, W10, [X9 + 0x18]
	0x031D1844 STR W31, [X19 + 0x38]
	0x031D1848 B 0x31D19D4
	0x031D184C MOVN W8, 0x0
	0x031D1850 STR W8, [X19 + 0x10]
	0x031D1854 B 0x31D19C8
	0x031D1858 CMP W8, W10
	0x031D185C B.CS 0x31D1A18
	0x031D1860 SXTW X8, W8
	0x031D1864 MOVZ W10, 0xC
	0x031D1868 ADRP X20, 0x1207000
	0x031D186C MADD X8, X8, X10, X9
	0x031D1870 LDRB W9, [X20 + 0x783]
	0x031D1874 LDR V9, [X8 + 0x20]
	0x031D1878 LDUR V8, [X8 + 0x24]
	0x031D187C CBNZ W9, 0x31D1894
	0x031D1880 ADRP X0, 0xF22000
	0x031D1884 LDR X0, [X0 + 0x5A0]
	0x031D1888 BL 0x1C16CF4
	0x031D188C MOVZ W8, 0x1
	0x031D1890 STRB W8, [X20 + 0x783]
	0x031D1894 ADRP X8, 0xF22000
	0x031D1898 LDR X8, [X8 + 0x5A0]
	0x031D189C LDR X8, [X8]
	0x031D18A0 LDR X8, [X8 + 0xB8]
	0x031D18A4 LDR V0, [X8]
	0x031D18A8 LDUR V1, [X8 + 0x4]
	0x031D18AC ADRP X8, 0xFFFFFFFFFD918000
	0x031D18B0 LDR V2, [X8 + 0xF20]
	0x031D18B4 FSUB S0, S9, S0
	0x031D18B8 FSUB V1.2S, V8.2S, V1.2S
	0x031D18BC FMUL S0, S0, S0
	0x00000000 INVALID
	0x031D18C4 FADD S0, S0, S1
	0x031D18C8 MOV S1, V1.S[1]
	0x031D18CC FADD S0, S1, S0
	0x031D18D0 FCMP S0, S2
	0x031D18D4 B.MI 0x31D19C8
	0x031D18D8 LDR X10, [X19 + 0x20]
	0x031D18DC CBZ X10, 0x31D1A14
	0x031D18E0 LDR X8, [X19 + 0x30]
	0x031D18E4 CBZ X8, 0x31D1A14
	0x031D18E8 LDRSW X9, [X19 + 0x38]
	0x031D18EC LDR W11, [X8 + 0x18]
	0x031D18F0 CMP W9, W11
	0x031D18F4 B.CS 0x31D1A18
	0x031D18F8 LDR X0, [X10 + 0x80]
	0x031D18FC CBZ X0, 0x31D1A14
	0x031D1900 ADRP X11, 0xF26000
	0x031D1904 LDR X11, [X11 + 0x3B8]
	0x031D1908 MOVZ W12, 0xC
	0x031D190C LDR W13, [X0 + 0x1C]
	0x031D1910 NOP
	0x031D1914 MADD X8, X9, X12, X8
	0x031D1918 LDR X10, [X0 + 0x10]
	0x031D191C LDP S0, S1, [X8 + 0x20]
	0x031D1920 LDR V2, [X8 + 0x28]
	0x031D1924 LDR X8, [X11]
	0x031D1928 ADD W9, W13, 0x1
	0x031D192C STR W9, [X0 + 0x1C]
	0x031D1930 CBZ X10, 0x31D1A14
	0x031D1934 LDRSW X9, [X0 + 0x18]
	0x031D1938 LDR W11, [X10 + 0x18]
	0x031D193C CMP W9, W11
	0x031D1940 B.CS 0x31D1964
	0x031D1944 ADD W8, W9, 0x1
	0x031D1948 MOVZ W11, 0xC
	0x031D194C STR W8, [X0 + 0x18]
	0x031D1950 NOP
	0x031D1954 MADD X8, X9, X11, X10
	0x031D1958 STP S0, S1, [X8 + 0x20]
	0x031D195C STR S2, [X8 + 0x28]
	0x031D1960 B 0x31D1974
	0x031D1964 LDR X8, [X8 + 0x20]
	0x031D1968 LDR X8, [X8 + 0xC0]
	0x031D196C LDR X1, [X8 + 0x70]
	0x031D1970 BL 0x30CC1B4
	0x031D1974 LDR X9, [X19 + 0x30]
	0x031D1978 CBZ X9, 0x31D1A14
	0x031D197C LDR X8, [X19 + 0x28]
	0x031D1980 CBZ X8, 0x31D1A14
	0x031D1984 LDR W10, [X8 + 0x370]
	0x031D1988 LDR V0, [X9 + 0x18]
	0x031D198C LDR W11, [X8 + 0x374]
	0x031D1990 MOVZ W9, 0x42C80000
	0x031D1994 SCVTF S1, W10
	0x031D1998 SCVTF S0, S0
	0x031D199C FDIV S0, S1, S0
	0x031D19A0 FMOV S1, W9
	0x031D19A4 ADD W9, W10, 0x1
	0x031D19A8 STR W9, [X8 + 0x370]
	0x031D19AC ADD W9, W11, 0x1
	0x031D19B0 CMP W9, 0x3E8
	0x031D19B4 FMUL S0, S0, S1
	0x031D19B8 CSINC W9, W31, W11, EQ
	0x031D19BC STR S0, [X8 + 0x37C]
	0x031D19C0 STR W9, [X8 + 0x374]
	0x031D19C4 B.EQ 0x31D19F0
	0x031D19C8 LDR W8, [X19 + 0x38]
	0x031D19CC ADD W8, W8, 0x1
	0x031D19D0 STR W8, [X19 + 0x38]
	0x031D19D4 LDR X9, [X19 + 0x30]
	0x031D19D8 CBZ X9, 0x31D1A14
	0x031D19DC LDR W10, [X9 + 0x18]
	0x031D19E0 CMP W8, W10
	0x031D19E4 B.LT 0x31D1858
	0x031D19E8 MOV W0, W31
	0x031D19EC B 0x31D19FC
	0x031D19F0 MOVZ W0, 0x1
	0x031D19F4 STR X31, [X19 + 0x18]
	0x031D19F8 STR W0, [X19 + 0x10]
	0x031D19FC LDP X20, X19, [X31 + 0x40]
	0x031D1A00 LDP X22, X21, [X31 + 0x30]
	0x031D1A04 LDP X24, X23, [X31 + 0x20]
	0x031D1A08 LDR X30, [X31 + 0x10]
	0x031D1A0C LDP D9, D8, [X31], #0x50
	0x031D1A10 RET
	0x031D1A14 BL 0x1C16F20
	0x031D1A18 BL 0x1C16F28
	0x031D1A1C LDR X0, [X0 + 0x18]
	0x031D1A20 RET
	0x031D1A24 STP X30, X19, [X31 - 0x10]!
	0x031D1A28 ADRP X0, 0xF22000
	0x031D1A2C LDR X0, [X0 + 0xB40]
	0x031D1A30 BL 0x1C16D08
	0x031D1A34 BL 0x1C16F10
	0x031D1A38 MOV X1, X31
	0x031D1A3C MOV X19, X0
	0x031D1A40 BL 0x3380310
	0x031D1A44 ADRP X0, 0xF4E000
	0x031D1A48 LDR X0, [X0 + 0xDC8]
	0x031D1A4C BL 0x1C16D08
	0x031D1A50 MOV X1, X0
	0x031D1A54 MOV X0, X19
	0x031D1A58 BL 0x1C16DEC
	0x031D1A5C LDR X0, [X0 + 0x18]
	0x031D1A60 RET
	0x031D1A64 STP X30, X23, [X31 - 0x30]!
	0x031D1A68 STP X22, X21, [X31 + 0x10]
	0x031D1A6C STP X20, X19, [X31 + 0x20]
	0x031D1A70 ADRP X23, 0x120B000
	0x031D1A74 ADRP X22, 0xF22000
	0x031D1A78 ADRP X20, 0xF4E000
	0x031D1A7C ADRP X21, 0xF4E000
	0x031D1A80 MOV X19, X8
	0x031D1A84 LDRB W8, [X23 + 0x1F]
	0x031D1A88 LDR X22, [X22 + 0x618]
	0x031D1A8C LDR X20, [X20 + 0xDD0]
	0x031D1A90 LDR X21, [X21 + 0xDD8]
	0x031D1A94 TBNZ X8, 0x0, 0x31D1AC4
	0x031D1A98 ADRP X0, 0xF22000
	0x031D1A9C LDR X0, [X0 + 0x618]
	0x031D1AA0 BL 0x1C16CF4
	0x031D1AA4 ADRP X0, 0xF4E000
	0x031D1AA8 LDR X0, [X0 + 0xDD8]
	0x031D1AAC BL 0x1C16CF4
	0x031D1AB0 ADRP X0, 0xF4E000
	0x031D1AB4 LDR X0, [X0 + 0xDD0]
	0x031D1AB8 BL 0x1C16CF4
	0x031D1ABC MOVZ W8, 0x1
	0x031D1AC0 STRB W8, [X23 + 0x1F]
	0x031D1AC4 LDR X0, [X22]
	0x031D1AC8 MOVZ W1, 0x37F
	0x031D1ACC BL 0x1C16D6C
	0x031D1AD0 LDR X1, [X20]
	0x031D1AD4 MOV X2, X31
	0x031D1AD8 MOV X20, X0
	0x031D1ADC BL 0x32C5BD8
	0x031D1AE0 LDR X0, [X22]
	0x031D1AE4 MOVZ W1, 0x147
	0x031D1AE8 BL 0x1C16D6C
	0x031D1AEC LDR X1, [X21]
	0x031D1AF0 MOV X2, X31
	0x031D1AF4 MOV X21, X0
	0x031D1AF8 BL 0x32C5BD8
	0x031D1AFC ADRP X8, 0xFFFFFFFFFD91C000
	0x031D1B00 LDR V0, [X8 + 0x4D0]
	0x031D1B04 STP X20, X21, [X19]
	0x031D1B08 STRB W31, [X19 + 0x18]
	0x031D1B0C STUR W31, [X19 + 0x19]
	0x031D1B10 STR D0, [X19 + 0x10]
	0x031D1B14 STR W31, [X19 + 0x1C]
	0x031D1B18 LDP X20, X19, [X31 + 0x20]
	0x031D1B1C LDP X22, X21, [X31 + 0x10]
	0x031D1B20 LDP X30, X23, [X31], #0x30
	0x031D1B24 RET
	0x031D1B28 MOV X1, X31
	0x031D1B2C B 0x33BDD8C
	0x031D1B30 STR X30, [X31 - 0x30]!
	0x031D1B34 STP X22, X21, [X31 + 0x10]
	0x031D1B38 STP X20, X19, [X31 + 0x20]
	0x031D1B3C ADRP X22, 0x120B000
	0x031D1B40 ADRP X21, 0xF4E000
	0x031D1B44 ADRP X20, 0xF4E000
	0x031D1B48 ADRP X19, 0xF4E000
	0x031D1B4C LDRB W8, [X22 + 0x21]
	0x031D1B50 LDR X21, [X21 + 0xDE0]
	0x031D1B54 LDR X20, [X20 + 0xDE8]
	0x031D1B58 LDR X19, [X19 + 0xDF0]
	0x031D1B5C TBNZ X8, 0x0, 0x31D1B8C
	0x031D1B60 ADRP X0, 0xF4E000
	0x031D1B64 LDR X0, [X0 + 0xDE8]
	0x031D1B68 BL 0x1C16CF4
	0x031D1B6C ADRP X0, 0xF4E000
	0x031D1B70 LDR X0, [X0 + 0xDF0]
	0x031D1B74 BL 0x1C16CF4
	0x031D1B78 ADRP X0, 0xF4E000
	0x031D1B7C LDR X0, [X0 + 0xDE0]
	0x031D1B80 BL 0x1C16CF4
	0x031D1B84 MOVZ W8, 0x1
	0x031D1B88 STRB W8, [X22 + 0x21]
	0x031D1B8C LDR X8, [X20]
	0x031D1B90 LDR X9, [X21]
	0x031D1B94 LDP X22, X21, [X31 + 0x10]
	0x031D1B98 MOVZ X10, 0x42700000
	0x031D1B9C LDR X8, [X8 + 0xB8]
	0x031D1BA0 MOVK X10, 0x32
	0x031D1BA4 STR X9, [X8]
	0x031D1BA8 LDR X8, [X20]
	0x031D1BAC LDR X9, [X19]
	0x031D1BB0 LDP X20, X19, [X31 + 0x20]
	0x031D1BB4 LDR X8, [X8 + 0xB8]
	0x031D1BB8 STR X9, [X8 + 0x8]
	0x031D1BBC STRH W31, [X8 + 0x10]
	0x031D1BC0 STUR X10, [X8 + 0x14]
	0x031D1BC4 LDR X30, [X31], #0x30
	0x031D1BC8 RET
	0x031D1BCC STR X30, [X31 - 0x20]!
	0x031D1BD0 STP X20, X19, [X31 + 0x10]
	0x031D1BD4 ADRP X20, 0x120B000
	0x031D1BD8 ADRP X19, 0xF4E000
	0x031D1BDC LDRB W8, [X20 + 0x22]
	0x031D1BE0 LDR X19, [X19 + 0xDE8]
	0x031D1BE4 TBNZ X8, 0x0, 0x31D1BFC
	0x031D1BE8 ADRP X0, 0xF4E000
	0x031D1BEC LDR X0, [X0 + 0xDE8]
	0x031D1BF0 BL 0x1C16CF4
	0x031D1BF4 MOVZ W8, 0x1
	0x031D1BF8 STRB W8, [X20 + 0x22]
	0x031D1BFC BL 0x31D1C38
	0x031D1C00 LDR X0, [X19]
	0x031D1C04 LDR W8, [X0 + 0xE0]
	0x031D1C08 CBNZ W8, 0x31D1C14
	0x031D1C0C BL 0x1C16DFC
	0x031D1C10 LDR X0, [X19]
	0x031D1C14 LDR X8, [X0 + 0xB8]
	0x031D1C18 LDRB W8, [X8 + 0x11]
	0x031D1C1C CBZ W8, 0x31D1C2C
	0x031D1C20 LDP X20, X19, [X31 + 0x10]
	0x031D1C24 LDR X30, [X31], #0x20
	0x031D1C28 RET
	0x031D1C2C LDP X20, X19, [X31 + 0x10]
	0x031D1C30 LDR X30, [X31], #0x20
	0x031D1C34 B 0x31D1CE4
	0x031D1C38 STP X30, X21, [X31 - 0x20]!
	0x031D1C3C STP X20, X19, [X31 + 0x10]
	0x031D1C40 ADRP X21, 0x120B000
	0x031D1C44 ADRP X20, 0xF4E000
	0x031D1C48 ADRP X19, 0xF22000
	0x031D1C4C LDRB W8, [X21 + 0x67]
	0x031D1C50 LDR X20, [X20 + 0xDF8]
	0x031D1C54 LDR X19, [X19 + 0x598]
	0x031D1C58 TBNZ X8, 0x0, 0x31D1C7C
	0x031D1C5C ADRP X0, 0xF4E000
	0x031D1C60 LDR X0, [X0 + 0xDF8]
	0x031D1C64 BL 0x1C16CF4
	0x031D1C68 ADRP X0, 0xF22000
	0x031D1C6C LDR X0, [X0 + 0x598]
	0x031D1C70 BL 0x1C16CF4
	0x031D1C74 MOVZ W8, 0x1
	0x031D1C78 STRB W8, [X21 + 0x67]
	0x031D1C7C LDR X8, [X20]
	0x031D1C80 LDR X0, [X19]
	0x031D1C84 LDR X8, [X8 + 0xB8]
	0x031D1C88 LDR W9, [X0 + 0xE0]
	0x031D1C8C LDR X19, [X8]
	0x031D1C90 CBNZ W9, 0x31D1C98
	0x031D1C94 BL 0x1C16DFC
	0x031D1C98 MOV X0, X19
	0x031D1C9C MOV X1, X31
	0x031D1CA0 BL 0x3C38948
	0x031D1CA4 TBZ X0, 0x0, 0x31D1CB4
	0x031D1CA8 LDP X20, X19, [X31 + 0x10]
	0x031D1CAC LDP X30, X21, [X31], #0x20
	0x031D1CB0 RET
	0x031D1CB4 BL 0x31D936C
	0x031D1CB8 LDR X8, [X20]
	0x031D1CBC LDR X8, [X8 + 0xB8]
	0x031D1CC0 STR X0, [X8]
	0x031D1CC4 LDR X8, [X20]
	0x031D1CC8 LDR X8, [X8 + 0xB8]
	0x031D1CCC LDR X0, [X8]
	0x031D1CD0 CBZ X0, 0x31D1CE0
	0x031D1CD4 LDP X20, X19, [X31 + 0x10]
	0x031D1CD8 LDP X30, X21, [X31], #0x20
	0x031D1CDC B 0x31D22C4
	0x031D1CE0 BL 0x1C16F20
	0x031D1CE4 STR X30, [X31 - 0x10]!
	0x031D1CE8 BL 0x31D2278
	0x031D1CEC CBZ X0, 0x31D1CFC
	0x031D1CF0 BL 0x31D22C4
	0x031D1CF4 LDR X30, [X31], #0x10
	0x031D1CF8 B 0x31D242C
	0x031D1CFC BL 0x1C16F20
	0x031D1D00 STR X30, [X31 - 0x20]!
	0x031D1D04 STP X20, X19, [X31 + 0x10]
	0x031D1D08 ADRP X20, 0x120B000
	0x031D1D0C ADRP X19, 0xF4E000
	0x031D1D10 LDRB W8, [X20 + 0x23]
	0x031D1D14 LDR X19, [X19 + 0xDE8]
	0x031D1D18 TBNZ X8, 0x0, 0x31D1D30
	0x031D1D1C ADRP X0, 0xF4E000
	0x031D1D20 LDR X0, [X0 + 0xDE8]
	0x031D1D24 BL 0x1C16CF4
	0x031D1D28 MOVZ W8, 0x1
	0x031D1D2C STRB W8, [X20 + 0x23]
	0x031D1D30 LDR X0, [X19]
	0x031D1D34 LDR W8, [X0 + 0xE0]
	0x031D1D38 CBNZ W8, 0x31D1D44
	0x031D1D3C BL 0x1C16DFC
	0x031D1D40 LDR X0, [X19]
	0x031D1D44 LDR X8, [X0 + 0xB8]
	0x031D1D48 LDRB W8, [X8 + 0x11]
	0x031D1D4C CBZ W8, 0x31D1D5C
	0x031D1D50 LDP X20, X19, [X31 + 0x10]
	0x031D1D54 LDR X30, [X31], #0x20
	0x031D1D58 RET
	0x031D1D5C BL 0x31D1D6C
	0x031D1D60 LDP X20, X19, [X31 + 0x10]
	0x031D1D64 LDR X30, [X31], #0x20
	0x031D1D68 B 0x31D1F28
	0x031D1D6C STR X30, [X31 - 0x20]!
	0x031D1D70 STP X20, X19, [X31 + 0x10]
	0x031D1D74 ADRP X19, 0x120B000
	0x031D1D78 ADRP X20, 0xF4E000
	0x031D1D7C LDRB W8, [X19 + 0x2F]
	0x031D1D80 LDR X20, [X20 + 0xE00]
	0x031D1D84 TBNZ X8, 0x0, 0x31D1E08
	0x031D1D88 ADRP X0, 0xF22000
	0x031D1D8C LDR X0, [X0 + 0x970]
	0x031D1D90 BL 0x1C16CF4
	0x031D1D94 ADRP X0, 0xF4E000
	0x031D1D98 LDR X0, [X0 + 0xE00]
	0x031D1D9C BL 0x1C16CF4
	0x031D1DA0 ADRP X0, 0xF27000
	0x031D1DA4 LDR X0, [X0 + 0x748]
	0x031D1DA8 BL 0x1C16CF4
	0x031D1DAC ADRP X0, 0xF4E000
	0x031D1DB0 LDR X0, [X0 + 0xE08]
	0x031D1DB4 BL 0x1C16CF4
	0x031D1DB8 ADRP X0, 0xF4E000
	0x031D1DBC LDR X0, [X0 + 0xE10]
	0x031D1DC0 BL 0x1C16CF4
	0x031D1DC4 ADRP X0, 0xF4E000
	0x031D1DC8 LDR X0, [X0 + 0xE18]
	0x031D1DCC BL 0x1C16CF4
	0x031D1DD0 ADRP X0, 0xF4E000
	0x031D1DD4 LDR X0, [X0 + 0xE20]
	0x031D1DD8 BL 0x1C16CF4
	0x031D1DDC ADRP X0, 0xF4E000
	0x031D1DE0 LDR X0, [X0 + 0xE28]
	0x031D1DE4 BL 0x1C16CF4
	0x031D1DE8 ADRP X0, 0xF4E000
	0x031D1DEC LDR X0, [X0 + 0xE30]
	0x031D1DF0 BL 0x1C16CF4
	0x031D1DF4 ADRP X0, 0xF4E000
	0x031D1DF8 LDR X0, [X0 + 0xE38]
	0x031D1DFC BL 0x1C16CF4
	0x031D1E00 MOVZ W8, 0x1
	0x031D1E04 STRB W8, [X19 + 0x2F]
	0x031D1E08 LDR X8, [X20]
	0x031D1E0C LDR X8, [X8 + 0xB8]
	0x031D1E10 LDR X19, [X8 + 0x8]
	0x031D1E14 CBNZ X19, 0x31D1F14
	0x031D1E18 ADRP X8, 0xF27000
	0x031D1E1C LDR X8, [X8 + 0x748]
	0x031D1E20 LDR X0, [X8]
	0x031D1E24 BL 0x1C16F10
	0x031D1E28 MOV X19, X0
	0x031D1E2C BL 0x31D3D04
	0x031D1E30 ADRP X8, 0xF4E000
	0x031D1E34 LDR X8, [X8 + 0xE28]
	0x031D1E38 LDR X0, [X8]
	0x031D1E3C BL 0x31D3DD8
	0x031D1E40 CBZ X19, 0x31D1F24
	0x031D1E44 ADRP X8, 0xF4E000
	0x031D1E48 LDR X8, [X8 + 0xE08]
	0x031D1E4C MOV X2, X0
	0x031D1E50 MOV X0, X19
	0x031D1E54 LDR X1, [X8]
	0x031D1E58 BL 0x31D3E30
	0x031D1E5C ADRP X8, 0xF4E000
	0x031D1E60 LDR X8, [X8 + 0xE30]
	0x031D1E64 LDR X0, [X8]
	0x031D1E68 BL 0x31D3DD8
	0x031D1E6C ADRP X8, 0xF4E000
	0x031D1E70 LDR X8, [X8 + 0xE18]
	0x031D1E74 MOV X2, X0
	0x031D1E78 MOV X0, X19
	0x031D1E7C LDR X1, [X8]
	0x031D1E80 BL 0x31D3E30
	0x031D1E84 MOV X0, X31
	0x031D1E88 BL 0x3C3B84C
	0x031D1E8C BL 0x31D3DD8
	0x031D1E90 ADRP X8, 0xF4E000
	0x031D1E94 LDR X8, [X8 + 0xE10]
	0x031D1E98 MOV X2, X0
	0x031D1E9C MOV X0, X19
	0x031D1EA0 LDR X1, [X8]
	0x031D1EA4 BL 0x31D3E30
	0x031D1EA8 MOV X0, X31
	0x031D1EAC BL 0x3C3B98C
	0x031D1EB0 BL 0x31D3DD8
	0x031D1EB4 ADRP X8, 0xF4E000
	0x031D1EB8 LDR X8, [X8 + 0xE20]
	0x031D1EBC MOV X2, X0
	0x031D1EC0 MOV X0, X19
	0x031D1EC4 LDR X1, [X8]
	0x031D1EC8 BL 0x31D3E30
	0x031D1ECC ADRP X8, 0xF22000
	0x031D1ED0 LDR X8, [X8 + 0x970]
	0x031D1ED4 LDR X0, [X8]
	0x031D1ED8 LDR W8, [X0 + 0xE0]
	0x031D1EDC CBNZ W8, 0x31D1EE4
	0x031D1EE0 BL 0x1C16DFC
	0x031D1EE4 MOV X0, X31
	0x031D1EE8 BL 0x3C01A10
	0x031D1EEC BL 0x31D3DD8
	0x031D1EF0 ADRP X8, 0xF4E000
	0x031D1EF4 LDR X8, [X8 + 0xE38]
	0x031D1EF8 MOV X2, X0
	0x031D1EFC MOV X0, X19
	0x031D1F00 LDR X1, [X8]
	0x031D1F04 BL 0x31D3E30
	0x031D1F08 LDR X8, [X20]
	0x031D1F0C LDR X8, [X8 + 0xB8]
	0x031D1F10 STR X19, [X8 + 0x8]
	0x031D1F14 MOV X0, X19
	0x031D1F18 LDP X20, X19, [X31 + 0x10]
	0x031D1F1C LDR X30, [X31], #0x20
	0x031D1F20 RET
	0x031D1F24 BL 0x1C16F20
	0x031D1F28 SUB X31, X31, 0x60
	0x031D1F2C STR X30, [X31 + 0x30]
	0x031D1F30 STP X22, X21, [X31 + 0x40]
	0x031D1F34 STP X20, X19, [X31 + 0x50]
	0x031D1F38 ADRP X19, 0x120B000
	0x031D1F3C ADRP X20, 0xF4E000
	0x031D1F40 LDRB W8, [X19 + 0x30]
	0x031D1F44 LDR X20, [X20 + 0xE00]
	0x031D1F48 TBNZ X8, 0x0, 0x31D202C
	0x031D1F4C ADRP X0, 0xF22000
	0x031D1F50 LDR X0, [X0 + 0x970]
	0x031D1F54 BL 0x1C16CF4
	0x031D1F58 ADRP X0, 0xF4E000
	0x031D1F5C LDR X0, [X0 + 0xE00]
	0x031D1F60 BL 0x1C16CF4
	0x031D1F64 ADRP X0, 0xF4E000
	0x031D1F68 LDR X0, [X0 + 0xE40]
	0x031D1F6C BL 0x1C16CF4
	0x031D1F70 ADRP X0, 0xF2B000
	0x031D1F74 LDR X0, [X0 + 0xA48]
	0x031D1F78 BL 0x1C16CF4
	0x031D1F7C ADRP X0, 0xF27000
	0x031D1F80 LDR X0, [X0 + 0x748]
	0x031D1F84 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x120C000
	013 Move W8, [X20+26]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {96}
	019 Move X0, 0xF4C000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move X0, 0xF4F000
	023 Move X0, [X0+3416]
	024 Call 0x1C17CF4
	025 Move X0, 0xF4F000
	026 Move X0, [X0+3280]
	027 Call 0x1C17CF4
	028 Move X0, 0xF4F000
	029 Move X0, [X0+3112]
	030 Call 0x1C17CF4
	031 Move X0, 0xF27000
	032 Move X0, [X0+952]
	033 Call 0x1C17CF4
	034 Move X0, 0xF27000
	035 Move X0, [X0+896]
	036 Call 0x1C17CF4
	037 Move X0, 0xF4F000
	038 Move X0, [X0+3424]
	039 Call 0x1C17CF4
	040 Move X0, 0xF4F000
	041 Move X0, [X0+1456]
	042 Call 0x1C17CF4
	043 Move X0, 0xF4F000
	044 Move X0, [X0+1464]
	045 Call 0x1C17CF4
	046 Move X0, 0xF4F000
	047 Move X0, [X0+3080]
	048 Call 0x1C17CF4
	049 Move X0, 0xF27000
	050 Move X0, [X0+2424]
	051 Call 0x1C17CF4
	052 Move X0, 0xF4F000
	053 Move X0, [X0+3296]
	054 Call 0x1C17CF4
	055 Move X0, 0xF27000
	056 Move X0, [X0+2432]
	057 Call 0x1C17CF4
	058 Move X0, 0xF4F000
	059 Move X0, [X0+3304]
	060 Call 0x1C17CF4
	061 Move X0, 0xF4F000
	062 Move X0, [X0+3072]
	063 Call 0x1C17CF4
	064 Move X0, 0xF27000
	065 Move X0, [X0+960]
	066 Call 0x1C17CF4
	067 Move X0, 0xF25000
	068 Move X0, [X0+2480]
	069 Call 0x1C17CF4
	070 Move X0, 0xF4F000
	071 Move X0, [X0+3432]
	072 Call 0x1C17CF4
	073 Move X0, 0xF4F000
	074 Move X0, [X0+3360]
	075 Call 0x1C17CF4
	076 Move X0, 0xF4F000
	077 Move X0, [X0+3368]
	078 Call 0x1C17CF4
	079 Move X0, 0xF4F000
	080 Move X0, [X0+3384]
	081 Call 0x1C17CF4
	082 Move X0, 0xF4F000
	083 Move X0, [X0+3440]
	084 Call 0x1C17CF4
	085 Move X0, 0xF4F000
	086 Move X0, [X0+3448]
	087 Call 0x1C17CF4
	088 Move X0, 0xF4F000
	089 Move X0, [X0+3392]
	090 Call 0x1C17CF4
	091 Move X0, 0xF4F000
	092 Move X0, [X0+3456]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X20+26], W8
	096 Move W8, [X19+16]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, -40083456
	099 Move X23, 0xF4F000
	100 Add X9, X9, 974
	101 Move X24, 0xF27000
	102 Move X23, [X23+3304]
	103 NotImplemented "Instruction ADR not yet implemented."
	104 Move W11, [X9]
	105 Add X10, X10, X11
	106 Move X24, [X24+952]
	107 CallNoReturn X10
	108 Move TEMP, 0
	109 Not TEMP
	110 Move W8, TEMP
	111 Move [X19+16], W8
	112 Move X8, 0xF4F000
	113 Move X8, [X8+3072]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X8, 0xF4F000
	117 Move X8, [X8+3080]
	118 Move X20, X0
	119 Move X1, [X8]
	120 Call List`1<Object>..ctor, X0
	121 Move [X19+64], X20
	122 Move X21, 0xF27000
	123 Move X21, [X21+960]
	124 Move X0, [X21]
	125 Call 0x1C17F10
	126 Move X22, 0xF4F000
	127 Move X22, [X22+1464]
	128 Move X20, X0
	129 Move X1, [X22]
	130 Call List`1<Vector3>..ctor, X0
	131 Move [X19+72], X20
	132 Move X0, [X21]
	133 Call 0x1C17F10
	134 Move X1, [X22]
	135 Move X20, X0
	136 Call List`1<Vector3>..ctor, X0
	137 Move W8, [X19+32]
	138 Move [X19+80], X20
	139 Move [X19+88], W31
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Compare W8, 0
	143 JumpIfNotEqual {301}
	144 Move X8, [X19+40]
	145 Compare X8, 0
	146 JumpIfEqual {675}
	147 Move X9, 0xF4F000
	148 Move X9, [X9+3440]
	149 Move X9, [X9]
	150 Move [X8+872], X9
	151 Move X8, [X19+48]
	152 Compare X8, 0
	153 JumpIfEqual {675}
	154 Compare X20, 0
	155 JumpIfEqual {675}
	156 Move X1, [X8+168]
	157 Move X8, 0xF4F000
	158 Move X8, [X8+3416]
	159 Move X0, X20
	160 Move X2, [X8]
	161 Call List`1<Vector3>.AddRange, X0, X1
	162 Move X8, [X19+48]
	163 Compare X8, 0
	164 JumpIfEqual {675}
	165 Move X9, [X8+160]
	166 Compare X9, 0
	167 JumpIfEqual {675}
	168 Move W10, [X9+28]
	169 Add W10, W10, 1
	170 Move [X9+24], W31
	171 Move [X9+28], W10
	172 Move X8, [X8+184]
	173 Compare X8, 0
	174 JumpIfEqual {675}
	175 Move W9, [X8+28]
	176 Add W9, W9, 1
	177 Move [X8+24], W31
	178 Move [X8+28], W9
	179 Move X8, [X19+40]
	180 Compare X8, 0
	181 JumpIfEqual {675}
	182 Move V0, [X8+268]
	183 Move X0, [X19+64]
	184 Move [X19+88], S0
	185 Compare X0, 0
	186 JumpIfEqual {675}
	187 Add X8, X8, 688
	188 Move W0, W31
	189 Move TEMP, 0
	190 Not TEMP
	191 Move W8, TEMP
	192 Move [X19+16], W8
	193 Move TEMP, 0
	194 Not TEMP
	195 Move W8, TEMP
	196 Move [X19+16], W8
	197 Move TEMP, 0
	198 Not TEMP
	199 Move W8, TEMP
	200 Move [X19+16], W8
	201 Move X8, [X19+40]
	202 Compare X8, 0
	203 JumpIfEqual {675}
	204 Move X9, 0xF4F000
	205 Move X9, [X9+3448]
	206 Move X9, [X9]
	207 Move [X8+872], X9
	208 Move X8, [X19+48]
	209 Compare X8, 0
	210 JumpIfEqual {675}
	211 Compare X20, 0
	212 JumpIfEqual {675}
	213 Move X1, [X8+176]
	214 Move X8, 0xF4F000
	215 Move X8, [X8+3416]
	216 Move X0, X20
	217 Move X2, [X8]
	218 Call List`1<Vector3>.AddRange, X0, X1
	219 Move X8, [X19+48]
	220 Compare X8, 0
	221 JumpIfEqual {675}
	222 Move X9, [X8+160]
	223 Compare X9, 0
	224 JumpIfEqual {675}
	225 Move W10, [X9+28]
	226 Add W10, W10, 1
	227 Move [X9+24], W31
	228 Move [X9+28], W10
	229 Move X9, [X8+152]
	230 Compare X9, 0
	231 JumpIfEqual {675}
	232 Move W10, [X9+28]
	233 Add W10, W10, 1
	234 Move [X9+24], W31
	235 Move [X9+28], W10
	236 Move X8, [X8+184]
	237 Compare X8, 0
	238 JumpIfEqual {675}
	239 Move W9, [X8+28]
	240 Add W9, W9, 1
	241 Move [X8+24], W31
	242 Move [X8+28], W9
	243 Move X8, [X19+40]
	244 Compare X8, 0
	245 JumpIfEqual {675}
	246 Move V0, [X8+272]
	247 Move X0, [X19+64]
	248 Move [X19+88], S0
	249 Compare X0, 0
	250 JumpIfEqual {675}
	251 Add X8, X8, 696
	252 Move X8, [X19+40]
	253 Compare X8, 0
	254 JumpIfEqual {675}
	255 Move X9, 0xF4F000
	256 Move X9, [X9+3432]
	257 Move X9, [X9]
	258 Move [X8+872], X9
	259 Move X8, [X19+48]
	260 Compare X8, 0
	261 JumpIfEqual {675}
	262 Compare X20, 0
	263 JumpIfEqual {675}
	264 Move X1, [X8+144]
	265 Move X8, 0xF4F000
	266 Move X8, [X8+3416]
	267 Move X0, X20
	268 Move X2, [X8]
	269 Call List`1<Vector3>.AddRange, X0, X1
	270 Move X8, [X19+48]
	271 Compare X8, 0
	272 JumpIfEqual {675}
	273 Move X9, [X8+160]
	274 Compare X9, 0
	275 JumpIfEqual {675}
	276 Move W10, [X9+28]
	277 Add W10, W10, 1
	278 Move [X9+24], W31
	279 Move [X9+28], W10
	280 Move X8, [X8+152]
	281 Compare X8, 0
	282 JumpIfEqual {675}
	283 Move W9, [X8+28]
	284 Add W9, W9, 1
	285 Move [X8+24], W31
	286 Move [X8+28], W9
	287 Move X8, [X19+40]
	288 Compare X8, 0
	289 JumpIfEqual {675}
	290 Move V0, [X8+260]
	291 Move X0, [X19+64]
	292 Move [X19+88], S0
	293 Compare X0, 0
	294 JumpIfEqual {675}
	295 Add X8, X8, 728
	296 Move X1, [X8]
	297 Move X8, 0xF4F000
	298 Move X8, [X8+3280]
	299 Move X2, [X8]
	300 Call List`1<Object>.AddRange, X0, X1
	301 Move X0, [X19+72]
	302 Compare X0, 0
	303 JumpIfEqual {675}
	304 Move X8, 0xF4F000
	305 Move X1, [X19+80]
	306 Move X8, [X8+3416]
	307 Move X2, [X8]
	308 Call List`1<Vector3>.AddRange, X0, X1
	309 Move X8, [X19+40]
	310 Compare X8, 0
	311 JumpIfEqual {675}
	312 NotImplemented "Instruction MOVI not yet implemented."
	313 Move [X8+880], D0
	314 Move X8, [X19+80]
	315 Compare X8, 0
	316 JumpIfEqual {675}
	317 Move W8, [X8+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X0, X31
	320 Call SystemInfo.get_supportsComputeShaders
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {464}
	325 Move X8, [X19+80]
	326 Compare X8, 0
	327 JumpIfEqual {675}
	328 Move X25, 0xF4C000
	329 Move W21, [X8+24]
	330 Move X25, [X25+1264]
	331 Move X0, [X25]
	332 Call 0x1C17F10
	333 Move W2, 12
	334 Move W1, W21
	335 Move W3, W31
	336 Move X4, X31
	337 Move X20, X0
	338 Call ComputeBuffer..ctor, X0, X1, X2, X3
	339 Move X8, [X19+80]
	340 Compare X8, 0
	341 JumpIfEqual {675}
	342 Move X0, [X25]
	343 Move W22, [X8+24]
	344 Call 0x1C17F10
	345 Move W2, 12
	346 Move W1, W22
	347 Move W3, W31
	348 Move X4, X31
	349 Move X21, X0
	350 Call ComputeBuffer..ctor, X0, X1, X2, X3
	351 Move X0, [X19+80]
	352 Compare X0, 0
	353 JumpIfEqual {675}
	354 Move X22, 0xF4F000
	355 Move X22, [X22+1456]
	356 Move X1, [X22]
	357 Call List`1<Vector3>.ToArray, X0
	358 Compare X20, 0
	359 JumpIfEqual {675}
	360 Move X1, X0
	361 Move X0, X20
	362 Move X2, X31
	363 Call ComputeBuffer.SetData, X0, X1
	364 Move X0, [X19+80]
	365 Compare X0, 0
	366 JumpIfEqual {675}
	367 Move X1, [X22]
	368 Call List`1<Vector3>.ToArray, X0
	369 Compare X21, 0
	370 JumpIfEqual {675}
	371 Move X1, X0
	372 Move X0, X21
	373 Move X2, X31
	374 Call ComputeBuffer.SetData, X0, X1
	375 Move X8, [X19+40]
	376 Compare X8, 0
	377 JumpIfEqual {675}
	378 Move X22, [X8+448]
	379 Compare X22, 0
	380 JumpIfEqual {675}
	381 Move X25, 0xF4F000
	382 Move X25, [X25+3384]
	383 Move X0, X22
	384 Move X2, X31
	385 Move X1, [X25]
	386 Call ComputeShader.FindKernel, X0, X1
	387 Move X8, 0xF4F000
	388 Move X8, [X8+3368]
	389 Move W1, W0
	390 Move X0, X22
	391 Move X3, X20
	392 Move X2, [X8]
	393 Move X4, X31
	394 Call ComputeShader.SetBuffer, X0, X1, X2, X3
	395 Move X8, [X19+40]
	396 Compare X8, 0
	397 JumpIfEqual {675}
	398 Move X22, [X8+448]
	399 Compare X22, 0
	400 JumpIfEqual {675}
	401 Move X1, [X25]
	402 Move X0, X22
	403 Move X2, X31
	404 Call ComputeShader.FindKernel, X0, X1
	405 Move X8, 0xF4F000
	406 Move X8, [X8+3360]
	407 Move W1, W0
	408 Move X0, X22
	409 Move X3, X21
	410 Move X2, [X8]
	411 Move X4, X31
	412 Call ComputeShader.SetBuffer, X0, X1, X2, X3
	413 Move X8, [X19+40]
	414 Compare X8, 0
	415 JumpIfEqual {675}
	416 Move X0, [X8+448]
	417 Compare X0, 0
	418 JumpIfEqual {675}
	419 Move X8, 0xF4F000
	420 Move V0, [X19+88]
	421 Move X8, [X8+3392]
	422 Move X2, X31
	423 Move X1, [X8]
	424 Call ComputeShader.SetFloat, X0, X1, V0
	425 Move X8, [X19+40]
	426 Compare X8, 0
	427 JumpIfEqual {675}
	428 Move X22, [X8+448]
	429 Compare X22, 0
	430 JumpIfEqual {675}
	431 Move X1, [X25]
	432 Move X0, X22
	433 Move X2, X31
	434 Call ComputeShader.FindKernel, X0, X1
	435 Move W1, W0
	436 Move W2, 256
	437 Move W3, 1
	438 Move W4, 1
	439 Move X0, X22
	440 Move X5, X31
	441 Call ComputeShader.Dispatch, X0, X1, X2, X3, X4
	442 Move X0, X20
	443 Move X1, X31
	444 Call ComputeBuffer.get_count, X0
	445 Move X8, 0xF25000
	446 Move X8, [X8+2480]
	447 Move W1, W0
	448 Move X8, [X8]
	449 Move X0, X8
	450 Call 0x1C17D6C
	451 Move X1, X0
	452 Move [X19+96], X0
	453 Move X0, X21
	454 Move X2, X31
	455 Call ComputeBuffer.GetData, X0, X1
	456 Move X0, X20
	457 Move X1, X31
	458 Call ComputeBuffer.Dispose, X0
	459 Move X0, X21
	460 Move X1, X31
	461 Call ComputeBuffer.Dispose, X0
	462 Move W8, W31
	463 Move [X19+104], W31
	464 Move W20, W31
	465 Move [X19+104], W31
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move X8, W8
	468 Move W10, 12
	469 Move X20, 0x1208000
	470 NotImplemented "Instruction MADD not yet implemented."
	471 Move W9, [X20+1923]
	472 Move V9, [X8+32]
	473 NotImplemented "Instruction LDUR not yet implemented."
	474 Compare W9, 0
	475 JumpIfNotEqual {481}
	476 Move X0, 0xF23000
	477 Move X0, [X0+1440]
	478 Call 0x1C17CF4
	479 Move W8, 1
	480 Move [X20+1923], W8
	481 Move X8, 0xF23000
	482 Move X8, [X8+1440]
	483 Move X8, [X8]
	484 Move X8, [X8+184]
	485 Move V0, [X8]
	486 NotImplemented "Instruction LDUR not yet implemented."
	487 Move X8, -40792064
	488 Move V2, [X8+3872]
	489 Subtract S0, S9, S0
	490 Subtract V1, V8, V1
	491 Multiply S0, S0, S0
	492 NotImplemented "Instruction INVALID not yet implemented."
	493 Add S0, S0, S1
	494 Move S1, V1.S[1]
	495 Add S0, S1, S0
	496 NotImplemented "Instruction FCMP not yet implemented."
	497 Move W8, [X19+56]
	498 Compare W8, 0
	499 JumpIfNotEqual {554}
	500 Move X0, [X19+64]
	501 Compare X0, 0
	502 JumpIfEqual {675}
	503 Move W1, [X19+104]
	504 Move X2, [X23]
	505 Call List`1<Object>.get_Item, X0, X1
	506 Move X8, [X19+96]
	507 Compare X8, 0
	508 JumpIfEqual {675}
	509 NotImplemented "Instruction LDRSW not yet implemented."
	510 Move W10, [X8+24]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Compare X0, 0
	513 JumpIfEqual {675}
	514 Move W10, 12
	515 NotImplemented "Instruction MADD not yet implemented."
	516 Move V0, [X8+32]
	517 Move V1, [X8+40]
	518 Move [X0+24], D0
	519 Move [X0+32], S1
	520 Move X8, [X19+40]
	521 Compare X8, 0
	522 JumpIfEqual {675}
	523 Move X0, [X19+64]
	524 Compare X0, 0
	525 JumpIfEqual {675}
	526 Move W1, [X19+104]
	527 Move X2, [X23]
	528 Move X20, [X8+640]
	529 Call List`1<Object>.get_Item, X0, X1
	530 Compare X20, 0
	531 JumpIfEqual {675}
	532 Move X9, 0xF4F000
	533 Move X9, [X9+3112]
	534 Move W10, [X20+28]
	535 Move X8, [X20+16]
	536 Move X9, [X9]
	537 Add W10, W10, 1
	538 Move [X20+28], W10
	539 Compare X8, 0
	540 JumpIfEqual {675}
	541 NotImplemented "Instruction LDRSW not yet implemented."
	542 Move W11, [X8+24]
	543 Move X1, X0
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Add W9, W10, 1
	546 Add X8, X8, X10
	547 Move [X20+24], W9
	548 Move [X8+32], X1
	549 Move X8, [X9+32]
	550 Move X0, X20
	551 Move X8, [X8+192]
	552 Move X2, [X8+112]
	553 Call List`1<Object>.AddWithResize, X0, X1
	554 Move W8, [X19+32]
	555 NotImplemented "Instruction CMP not yet implemented."
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Compare W8, 0
	558 JumpIfNotEqual {623}
	559 Move X10, [X19+48]
	560 Compare X10, 0
	561 JumpIfEqual {675}
	562 Move X8, [X19+96]
	563 Compare X8, 0
	564 JumpIfEqual {675}
	565 NotImplemented "Instruction LDRSW not yet implemented."
	566 Move W11, [X8+24]
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Move X0, [X10+184]
	569 Compare X0, 0
	570 JumpIfNotEqual {595}
	571 Move X10, [X19+48]
	572 Compare X10, 0
	573 JumpIfEqual {675}
	574 Move X8, [X19+96]
	575 Compare X8, 0
	576 JumpIfEqual {675}
	577 NotImplemented "Instruction LDRSW not yet implemented."
	578 Move W11, [X8+24]
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Move X0, [X10+160]
	581 Compare X0, 0
	582 JumpIfNotEqual {595}
	583 Move X10, [X19+48]
	584 Compare X10, 0
	585 JumpIfEqual {675}
	586 Move X8, [X19+96]
	587 Compare X8, 0
	588 JumpIfEqual {675}
	589 NotImplemented "Instruction LDRSW not yet implemented."
	590 Move W11, [X8+24]
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Move X0, [X10+152]
	593 Compare X0, 0
	594 JumpIfEqual {675}
	595 Move W11, 12
	596 Move W12, [X0+28]
	597 NotImplemented "Instruction NOP not yet implemented."
	598 NotImplemented "Instruction MADD not yet implemented."
	599 Move X10, [X0+16]
	600 Move S0, [X8+32]
	601 Move S1, [X8+36]
	602 Move V2, [X8+40]
	603 Move X8, [X24]
	604 Add W9, W12, 1
	605 Move [X0+28], W9
	606 Compare X10, 0
	607 JumpIfEqual {675}
	608 NotImplemented "Instruction LDRSW not yet implemented."
	609 Move W11, [X10+24]
	610 NotImplemented "Instruction CMP not yet implemented."
	611 Add W8, W9, 1
	612 Move W11, 12
	613 Move [X0+24], W8
	614 NotImplemented "Instruction NOP not yet implemented."
	615 NotImplemented "Instruction MADD not yet implemented."
	616 Move [X8+32], S0
	617 Move [X8+40], S1
	618 Move [X8+40], S2
	619 Move X8, [X8+32]
	620 Move X8, [X8+192]
	621 Move X1, [X8+112]
	622 Call List`1<Vector3>.AddWithResize, X0, X1
	623 Move X9, [X19+96]
	624 Compare X9, 0
	625 JumpIfEqual {675}
	626 Move X8, [X19+40]
	627 Compare X8, 0
	628 JumpIfEqual {675}
	629 Move W10, [X8+880]
	630 Move V0, [X9+24]
	631 Move W11, [X8+884]
	632 Move W9, 0x42C80000
	633 NotImplemented "Instruction SCVTF not yet implemented."
	634 NotImplemented "Instruction SCVTF not yet implemented."
	635 NotImplemented "Instruction FDIV not yet implemented."
	636 Move S1, W9
	637 Add W9, W10, 1
	638 Move [X8+880], W9
	639 Add W9, W11, 1
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Multiply S0, S0, S1
	642 NotImplemented "Instruction CSINC not yet implemented."
	643 Move [X8+892], S0
	644 Move [X8+884], W9
	645 Move W8, [X19+104]
	646 Add W8, W8, 1
	647 Move [X19+104], W8
	648 Move X9, [X19+96]
	649 Compare X9, 0
	650 JumpIfEqual {675}
	651 Move W10, [X9+24]
	652 NotImplemented "Instruction CMP not yet implemented."
	653 Move [X19+96], X31
	654 Move W8, [X19+32]
	655 Compare W8, 0
	656 JumpIfNotEqual {1050}
	657 Move W8, [X19+56]
	658 Compare W8, 0
	659 JumpIfNotEqual {1050}
	660 Move X8, [X19+40]
	661 Compare X8, 0
	662 JumpIfEqual {675}
	663 Move X9, 0xF4F000
	664 Move X9, [X9+3456]
	665 NotImplemented "Instruction MOVI not yet implemented."
	666 Move W1, W31
	667 Move X9, [X9]
	668 Move [X8+880], D0
	669 Move [X8+872], X9
	670 Move [X19+104], W31
	671 Move W0, 1
	672 Move [X19+24], X31
	673 Move [X19+16], W0
	674 Call 0x1C17F28
	675 Call 0x1C17F20
	676 Move X20, [X19+72]
	677 Compare X20, 0
	678 JumpIfEqual {675}
	679 Move W1, [X20+24]
	680 Move X26, 0xF4F000
	681 Move X26, [X26+3424]
	682 Move W0, W31
	683 Move X2, X31
	684 Call Random.Range, X0, X1
	685 Move X2, [X22]
	686 Move W1, W0
	687 Move X0, X20
	688 Call List`1<Vector3>.get_Item, X0, X1
	689 Move X1, [X26]
	690 Move X0, X20
	691 Call List`1<Vector3>.Remove, X0, X1
	692 Move X8, [X19+80]
	693 Compare X8, 0
	694 JumpIfEqual {675}
	695 Move V0, [X19+88]
	696 Move V1, [X8+24]
	697 Move W8, [X21+1495]
	698 Move X20, [X19+40]
	699 Move S2, 1
	700 NotImplemented "Instruction SCVTF not yet implemented."
	701 Subtract S9, S2, S0
	702 Compare W8, 0
	703 JumpIfNotEqual {709}
	704 Move X0, 0xF23000
	705 Move X0, [X0+1448]
	706 Call 0x1C17CF4
	707 Move W8, 1
	708 Move [X21+1495], W8
	709 Move X0, [X25]
	710 Multiply S9, S9, S8
	711 Move W8, [X0+224]
	712 Compare W8, 0
	713 JumpIfNotEqual {715}
	714 Call 0x1C17DFC
	715 NotImplemented "Instruction FCVT not yet implemented."
	716 Add X0, X31, 24
	717 Move V0, V8
	718 Call 0x3EB2C00
	719 NotImplemented "Instruction FCMP not yet implemented."
	720 Move D1, -0.5
	721 NotImplemented "Instruction FCMP not yet implemented."
	722 Move V0, [X31+24]
	723 Move D1, -1
	724 Move D1, 0.5
	725 NotImplemented "Instruction FCMP not yet implemented."
	726 Move V0, [X31+24]
	727 Move D1, 1
	728 NotImplemented "Instruction FCVTZS not yet implemented."
	729 Add D1, D0, D1
	730 And X31, X8, 1
	731 NotImplemented "Instruction FCSEL not yet implemented."
	732 Add D0, D8, D1
	733 NotImplemented "Instruction FRINTP not yet implemented."
	734 Add D0, D8, D1
	735 NotImplemented "Instruction FRINTM not yet implemented."
	736 Compare X20, 0
	737 JumpIfEqual {675}
	738 NotImplemented "Instruction FCVTZS not yet implemented."
	739 Move X9, 0x7FF00000
	740 NotImplemented "Instruction SCVTF not yet implemented."
	741 Move W8, 0xCF000000
	742 Move D2, X9
	743 Move W9, [X20+880]
	744 Move S3, W8
	745 Move W8, 0x42C80000
	746 NotImplemented "Instruction FCMP not yet implemented."
	747 Move S0, W8
	748 Move W8, [X20+884]
	749 NotImplemented "Instruction SCVTF not yet implemented."
	750 Add W9, W9, 1
	751 NotImplemented "Instruction FCSEL not yet implemented."
	752 Move [X20+880], W9
	753 Add W9, W8, 1
	754 NotImplemented "Instruction FDIV not yet implemented."
	755 NotImplemented "Instruction CMP not yet implemented."
	756 Multiply S0, S1, S0
	757 NotImplemented "Instruction CSINC not yet implemented."
	758 Move [X20+892], S0
	759 Move [X20+884], W8
	760 Move W8, [X19+104]
	761 Add W20, W8, 1
	762 Move [X19+104], W20
	763 Move X8, [X19+80]
	764 Compare X8, 0
	765 JumpIfEqual {675}
	766 Move V1, [X8+24]
	767 Move V0, [X19+88]
	768 Move X21, 0x1209000
	769 Move W8, [X21+1495]
	770 NotImplemented "Instruction SCVTF not yet implemented."
	771 Move S1, 1
	772 Subtract S9, S1, S0
	773 Compare W8, 0
	774 JumpIfNotEqual {780}
	775 Move X0, 0xF23000
	776 Move X0, [X0+1448]
	777 Call 0x1C17CF4
	778 Move W8, 1
	779 Move [X21+1495], W8
	780 Move X25, 0xF23000
	781 Move X25, [X25+1448]
	782 Multiply S9, S9, S8
	783 Move X0, [X25]
	784 Move W8, [X0+224]
	785 Compare W8, 0
	786 JumpIfNotEqual {788}
	787 Call 0x1C17DFC
	788 NotImplemented "Instruction FCVT not yet implemented."
	789 Add X0, X31, 24
	790 Move V0, V8
	791 Call 0x3EB2C00
	792 NotImplemented "Instruction FCMP not yet implemented."
	793 Move D1, -0.5
	794 NotImplemented "Instruction FCMP not yet implemented."
	795 Move V0, [X31+24]
	796 Move D1, -1
	797 Move D1, 0.5
	798 NotImplemented "Instruction FCMP not yet implemented."
	799 Move V0, [X31+24]
	800 Move D1, 1
	801 NotImplemented "Instruction FCVTZS not yet implemented."
	802 Add D1, D0, D1
	803 And X31, X8, 1
	804 NotImplemented "Instruction FCSEL not yet implemented."
	805 Add D0, D8, D1
	806 NotImplemented "Instruction FRINTP not yet implemented."
	807 Add D0, D8, D1
	808 NotImplemented "Instruction FRINTM not yet implemented."
	809 Move X8, 0x7FF00000
	810 Move X22, 0xF27000
	811 Move D1, X8
	812 Move X22, [X22+2432]
	813 NotImplemented "Instruction FCVTZS not yet implemented."
	814 NotImplemented "Instruction FCMP not yet implemented."
	815 Move W8, 0x80000000
	816 NotImplemented "Instruction CSEL not yet implemented."
	817 NotImplemented "Instruction CMP not yet implemented."
	818 Move W8, [X19+56]
	819 Compare W8, 0
	820 JumpIfEqual {899}
	821 Move X0, [X19+72]
	822 Compare X0, 0
	823 JumpIfEqual {675}
	824 Move W20, W31
	825 Move W25, 12
	826 Move W8, [X0+24]
	827 NotImplemented "Instruction CMP not yet implemented."
	828 Move W8, [X19+32]
	829 NotImplemented "Instruction CMP not yet implemented."
	830 NotImplemented "Instruction CMP not yet implemented."
	831 Compare W8, 0
	832 JumpIfNotEqual {893}
	833 Move X8, [X19+48]
	834 Compare X8, 0
	835 JumpIfEqual {675}
	836 Move X21, [X8+184]
	837 Move X8, [X19+48]
	838 Compare X8, 0
	839 JumpIfEqual {675}
	840 Move X2, [X22]
	841 Move X21, [X8+160]
	842 Move W1, W20
	843 Call List`1<Vector3>.get_Item, X0, X1
	844 Compare X21, 0
	845 JumpIfEqual {675}
	846 Move W10, [X21+28]
	847 Move X9, [X21+16]
	848 Move X8, [X24]
	849 Add W10, W10, 1
	850 Move [X21+28], W10
	851 Compare X9, 0
	852 JumpIfEqual {675}
	853 NotImplemented "Instruction LDRSW not yet implemented."
	854 Move W11, [X9+24]
	855 NotImplemented "Instruction CMP not yet implemented."
	856 Add W8, W10, 1
	857 NotImplemented "Instruction MADD not yet implemented."
	858 Move [X21+24], W8
	859 Move [X9+32], S0
	860 Move [X9+40], S1
	861 Move [X9+40], S2
	862 Move X8, [X19+48]
	863 Compare X8, 0
	864 JumpIfEqual {675}
	865 Move X21, [X8+152]
	866 Move X2, [X22]
	867 Move W1, W20
	868 Call List`1<Vector3>.get_Item, X0, X1
	869 Compare X21, 0
	870 JumpIfEqual {675}
	871 Move W10, [X21+28]
	872 Move X8, [X21+16]
	873 Move X9, [X24]
	874 Add W10, W10, 1
	875 Move [X21+28], W10
	876 Compare X8, 0
	877 JumpIfEqual {675}
	878 NotImplemented "Instruction LDRSW not yet implemented."
	879 Move W11, [X8+24]
	880 NotImplemented "Instruction CMP not yet implemented."
	881 Add W9, W10, 1
	882 NotImplemented "Instruction MADD not yet implemented."
	883 Move [X21+24], W9
	884 Move [X8+32], S0
	885 Move [X8+40], S1
	886 Move [X8+40], S2
	887 Move X8, [X9+32]
	888 Move X8, [X8+32]
	889 Move X8, [X8+192]
	890 Move X0, X21
	891 Move X1, [X8+112]
	892 Call List`1<Vector3>.AddWithResize, X0, X1
	893 Move X0, [X19+72]
	894 Add W20, W20, 1
	895 Compare X0, 0
	896 JumpIfNotEqual {826}
	897 Move W8, 2
	898 Move [X19+24], X31
	899 Move X8, [X19+40]
	900 Compare X8, 0
	901 JumpIfEqual {675}
	902 Move X0, [X8+640]
	903 Compare X0, 0
	904 JumpIfEqual {675}
	905 Move X8, 0xF4F000
	906 Move X1, [X19+64]
	907 Move X8, [X8+3280]
	908 Move X2, [X8]
	909 Call List`1<Object>.AddRange, X0, X1
	910 Move X0, [X19+64]
	911 Compare X0, 0
	912 JumpIfEqual {675}
	913 Move W20, W31
	914 Move W22, 12
	915 Move W8, [X0+24]
	916 NotImplemented "Instruction CMP not yet implemented."
	917 Move W8, [X19+32]
	918 NotImplemented "Instruction CMP not yet implemented."
	919 NotImplemented "Instruction CMP not yet implemented."
	920 Compare W8, 0
	921 JumpIfNotEqual {992}
	922 Move X8, [X19+48]
	923 Compare X8, 0
	924 JumpIfEqual {675}
	925 Move X21, [X8+184]
	926 Move X8, [X19+48]
	927 Compare X8, 0
	928 JumpIfEqual {675}
	929 Move X2, [X23]
	930 Move X21, [X8+160]
	931 Move W1, W20
	932 Call List`1<Object>.get_Item, X0, X1
	933 Compare X0, 0
	934 JumpIfEqual {675}
	935 Compare X21, 0
	936 JumpIfEqual {675}
	937 Move W10, [X21+28]
	938 Move S0, [X0+24]
	939 Move S1, [X0+28]
	940 Move V2, [X0+32]
	941 Move X9, [X21+16]
	942 Move X8, [X24]
	943 Add W10, W10, 1
	944 Move [X21+28], W10
	945 Compare X9, 0
	946 JumpIfEqual {675}
	947 NotImplemented "Instruction LDRSW not yet implemented."
	948 Move W11, [X9+24]
	949 NotImplemented "Instruction CMP not yet implemented."
	950 Add W8, W10, 1
	951 NotImplemented "Instruction MADD not yet implemented."
	952 Move [X21+24], W8
	953 Move [X9+32], S0
	954 Move [X9+40], S1
	955 Move [X9+40], S2
	956 Move X8, [X19+48]
	957 Compare X8, 0
	958 JumpIfEqual {675}
	959 Move X21, [X8+152]
	960 Move X2, [X23]
	961 Move W1, W20
	962 Call List`1<Object>.get_Item, X0, X1
	963 Compare X0, 0
	964 JumpIfEqual {675}
	965 Compare X21, 0
	966 JumpIfEqual {675}
	967 Move W10, [X21+28]
	968 Move S0, [X0+24]
	969 Move S1, [X0+28]
	970 Move V2, [X0+32]
	971 Move X8, [X21+16]
	972 Move X9, [X24]
	973 Add W10, W10, 1
	974 Move [X21+28], W10
	975 Compare X8, 0
	976 JumpIfEqual {675}
	977 NotImplemented "Instruction LDRSW not yet implemented."
	978 Move W11, [X8+24]
	979 NotImplemented "Instruction CMP not yet implemented."
	980 Add W9, W10, 1
	981 NotImplemented "Instruction MADD not yet implemented."
	982 Move [X21+24], W9
	983 Move [X8+32], S0
	984 Move [X8+40], S1
	985 Move [X8+40], S2
	986 Move X8, [X9+32]
	987 Move X8, [X8+32]
	988 Move X8, [X8+192]
	989 Move X0, X21
	990 Move X1, [X8+112]
	991 Call List`1<Vector3>.AddWithResize, X0, X1
	992 Move X0, [X19+64]
	993 Add W20, W20, 1
	994 Compare X0, 0
	995 JumpIfNotEqual {915}
	996 Move [X19+16], W8
	997 Move W0, 1
	998 Move X2, [X23]
	999 Call List`1<Object>.get_Item, X0, X1
	1000 Compare X0, 0
	1001 JumpIfEqual {675}
	1002 Move W8, [X0+109]
	1003 Compare W8, 0
	1004 JumpIfNotEqual {1017}
	1005 Move X0, [X19+64]
	1006 Compare X0, 0
	1007 JumpIfEqual {675}
	1008 Move W1, [X19+104]
	1009 Move X2, [X23]
	1010 Move X20, [X19+40]
	1011 Call List`1<Object>.get_Item, X0, X1
	1012 Compare X20, 0
	1013 JumpIfEqual {675}
	1014 Move X1, X0
	1015 Move X0, X20
	1016 Call MagicLightProbes.CheckForNearContrast, X0, X1
	1017 Move X8, [X19+40]
	1018 Compare X8, 0
	1019 JumpIfEqual {675}
	1020 Move W9, [X8+826]
	1021 Compare W9, 0
	1022 JumpIfNotEqual {1042}
	1023 Move X9, [X19+64]
	1024 Compare X9, 0
	1025 JumpIfEqual {675}
	1026 Move W10, [X8+880]
	1027 Move V0, [X9+24]
	1028 Move W11, [X8+884]
	1029 Move W9, 0x42C80000
	1030 NotImplemented "Instruction SCVTF not yet implemented."
	1031 NotImplemented "Instruction SCVTF not yet implemented."
	1032 NotImplemented "Instruction FDIV not yet implemented."
	1033 Move S1, W9
	1034 Add W9, W10, 1
	1035 Move [X8+880], W9
	1036 Add W9, W11, 1
	1037 NotImplemented "Instruction CMP not yet implemented."
	1038 Multiply S0, S0, S1
	1039 NotImplemented "Instruction CSINC not yet implemented."
	1040 Move [X8+892], S0
	1041 Move [X8+884], W9
	1042 Move W8, [X19+104]
	1043 Add W1, W8, 1
	1044 Move [X19+104], W1
	1045 Move X0, [X19+64]
	1046 Compare X0, 0
	1047 JumpIfEqual {675}
	1048 Move W8, [X0+24]
	1049 NotImplemented "Instruction CMP not yet implemented."
	1050 Move X8, [X19+40]
	1051 Compare X8, 0
	1052 JumpIfEqual {675}
	1053 Move X9, [X8+640]
	1054 Compare X9, 0
	1055 JumpIfEqual {675}
	1056 Move W9, [X9+24]
	1057 Move W0, W31
	1058 Move [X8+869], W31
	1059 Move [X8+860], W9
	1060 Move X20, [X31+80]
	1061 Move X19, [X31+88]
	1062 Move X22, [X31+64]
	1063 Move X21, [X31+72]
	1064 Move X24, [X31+48]
	1065 Move X23, [X31+56]
	1066 Move X26, [X31+32]
	1067 Move X25, [X31+40]
	1068 Move X30, [X31+16]
	1069 Move D9, [X31+96]
	1070 Move D8, [X31+104]
	1071 Return X0
	1072 Move [X19+24], X31
	1073 Move W8, 3

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x031D1F88 ADRP X0, 0xF4E000
	0x031D1F8C LDR X0, [X0 + 0xE48]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x031D1F90 BL 0x1C16CF4
	0x031D1F94 ADRP X0, 0xF4E000
	0x031D1F98 LDR X0, [X0 + 0xE50]
	0x031D1F9C BL 0x1C16CF4
	0x031D1FA0 ADRP X0, 0xF4E000
	0x031D1FA4 LDR X0, [X0 + 0xE58]
	0x031D1FA8 BL 0x1C16CF4
	0x031D1FAC ADRP X0, 0xF4E000
	0x031D1FB0 LDR X0, [X0 + 0xE28]
	0x031D1FB4 BL 0x1C16CF4
	0x031D1FB8 ADRP X0, 0xF4E000
	0x031D1FBC LDR X0, [X0 + 0xE60]
	0x031D1FC0 BL 0x1C16CF4
	0x031D1FC4 ADRP X0, 0xF4E000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xF23000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xF4F000
	011 Move X0, [X0+3464]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x031D1FC8 LDR X0, [X0 + 0xE68]
	0x031D1FCC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

