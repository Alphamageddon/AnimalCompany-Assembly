Type: MagicLightProbes.RemoveUnusedPoints/<ExecutePass>d__0

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x031D2030 LDR X8, [X8 + 0xB8]
	0x031D2034 LDR X0, [X8]
	0x031D2038 CBNZ X0, 0x31D2260
	0x031D203C ADRP X8, 0xF26000
	0x031D2040 LDR X8, [X8 + 0x748]
	0x031D2044 LDR X0, [X8]
	0x031D2048 BL 0x1C16F10
	0x031D204C MOV X19, X0
	0x031D2050 BL 0x31D3D04
	0x031D2054 ADRP X8, 0xF4D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x031D2060 BL 0x31D3DD8

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x031D2064 CBZ X19, 0x31D2274
	0x031D2068 ADRP X8, 0xF4D000
	0x031D206C LDR X8, [X8 + 0xE78]
	0x031D2070 MOV X2, X0
	0x031D2074 MOV X0, X19
	0x031D2078 LDR X1, [X8]
	0x031D207C BL 0x31D3EA4
	0x031D2080 ADRP X8, 0xF4D000
	0x031D2084 LDR X8, [X8 + 0xE28]
	0x031D2088 LDR X0, [X8]
	0x031D208C BL 0x31D3DD8
	0x031D2090 ADRP X8, 0xF4D000
	0x031D2094 LDR X8, [X8 + 0xE98]
	0x031D2098 MOV X2, X0
	0x031D209C MOV X0, X19
	0x031D20A0 LDR X1, [X8]
	0x031D20A4 BL 0x31D3EA4
	0x031D20A8 MOV X0, X31
	0x031D20AC BL 0x3C3B89C
	0x031D20B0 ADRP X8, 0xF4D000
	0x031D20B4 LDR X8, [X8 + 0xE40]
	0x031D20B8 MOVN X22, 0x0
	0x031D20BC STR W0, [X31 + 0x28]
	0x031D20C0 ADD X0, X31, 0x18
	0x031D20C4 LDR X8, [X8]
	0x031D20C8 MOV X1, X31
	0x031D20CC STP X8, X22, [X31 + 0x18]
	0x031D20D0 BL 0x33B162C
	0x031D20D4 BL 0x31D3DD8
	0x031D20D8 ADRP X21, 0xF4D000
	0x031D20DC LDR X21, [X21 + 0xE88]
	0x031D20E0 MOV X2, X0
	0x031D20E4 MOV X0, X19
	0x031D20E8 LDR X1, [X21]
	0x031D20EC BL 0x31D3EA4
	0x031D20F0 MOV X0, X31
	0x031D20F4 BL 0x3C3B84C
	0x031D20F8 BL 0x31D3DD8
	0x031D20FC ADRP X8, 0xF4D000
	0x031D2100 LDR X8, [X8 + 0xE58]
	0x031D2104 MOV X2, X0
	0x031D2108 MOV X0, X19
	0x031D210C LDR X1, [X8]
	0x031D2110 BL 0x31D3EA4
	0x031D2114 MOV X0, X31
	0x031D2118 BL 0x3C3B98C
	0x031D211C BL 0x31D3DD8
	0x031D2120 ADRP X8, 0xF4D000
	0x031D2124 LDR X8, [X8 + 0xE80]
	0x031D2128 MOV X2, X0
	0x031D212C MOV X0, X19
	0x031D2130 LDR X1, [X8]
	0x031D2134 BL 0x31D3EA4
	0x031D2138 ADRP X8, 0xF21000
	0x031D213C LDR X8, [X8 + 0x970]
	0x031D2140 LDR X0, [X8]
	0x031D2144 LDR W8, [X0 + 0xE0]
	0x031D2148 CBNZ W8, 0x31D2150
	0x031D214C BL 0x1C16DFC
	0x031D2150 MOV X0, X31
	0x031D2154 BL 0x3C01A10
	0x031D2158 BL 0x31D3DD8
	0x031D215C ADRP X8, 0xF4D000
	0x031D2160 LDR X8, [X8 + 0xE90]
	0x031D2164 MOV X2, X0
	0x031D2168 MOV X0, X19
	0x031D216C LDR X1, [X8]
	0x031D2170 BL 0x31D3EA4
	0x031D2174 MOV X0, X31
	0x031D2178 BL 0x3C01B9C
	0x031D217C CMP W0, 0x2
	0x031D2180 CSET W0, EQ
	0x031D2184 BL 0x31D3F18
	0x031D2188 ADRP X8, 0xF4D000
	0x031D218C LDR X8, [X8 + 0xE50]
	0x031D2190 MOV X2, X0
	0x031D2194 MOV X0, X19
	0x031D2198 LDR X1, [X8]
	0x031D219C BL 0x31D3EA4
	0x031D21A0 BL 0x31D3F70
	0x031D21A4 BL 0x31D3DD8
	0x031D21A8 ADRP X8, 0xF4D000
	0x031D21AC LDR X8, [X8 + 0xE60]
	0x031D21B0 MOV X2, X0
	0x031D21B4 MOV X0, X19
	0x031D21B8 LDR X1, [X8]
	0x031D21BC BL 0x31D3EA4
	0x031D21C0 MOV X0, X31
	0x031D21C4 BL 0x3C01AB0
	0x031D21C8 ADRP X8, 0xF2A000
	0x031D21CC LDR X8, [X8 + 0xA48]
	0x031D21D0 STR W0, [X31 + 0x10]
	0x031D21D4 ADD X0, X31, 0x0
	0x031D21D8 MOV X1, X31
	0x031D21DC LDR X8, [X8]
	0x031D21E0 STP X8, X22, [X31]
	0x031D21E4 BL 0x33B162C
	0x031D21E8 BL 0x31D3DD8
	0x031D21EC ADRP X8, 0xF4D000
	0x031D21F0 LDR X8, [X8 + 0xE70]
	0x031D21F4 MOV X2, X0
	0x031D21F8 MOV X0, X19
	0x031D21FC LDR X1, [X8]
	0x031D2200 BL 0x31D3EA4
	0x031D2204 MOV X0, X31
	0x031D2208 BL 0x3C0E100
	0x031D220C BL 0x31D4014
	0x031D2210 ADRP X8, 0xF4D000
	0x031D2214 LDR X8, [X8 + 0xE68]
	0x031D2218 MOV X2, X0
	0x031D221C MOV X0, X19
	0x031D2220 LDR X1, [X8]
	0x031D2224 BL 0x31D3EA4
	0x031D2228 ADRP X8, 0xF4D000
	0x031D222C LDR X8, [X8 + 0xE30]
	0x031D2230 LDR X0, [X8]
	0x031D2234 BL 0x31D3DD8
	0x031D2238 LDR X1, [X21]
	0x031D223C MOV X2, X0
	0x031D2240 MOV X0, X19
	0x031D2244 BL 0x31D3E30
	0x031D2248 LDR X8, [X20]
	0x031D224C LDR X8, [X8 + 0xB8]
	0x031D2250 STR X19, [X8]
	0x031D2254 LDR X8, [X20]
	0x031D2258 LDR X8, [X8 + 0xB8]
	0x031D225C LDR X0, [X8]
	0x031D2260 LDP X20, X19, [X31 + 0x50]
	0x031D2264 LDP X22, X21, [X31 + 0x40]
	0x031D2268 LDR X30, [X31 + 0x30]
	0x031D226C ADD X31, X31, 0x60
	0x031D2270 RET
	0x031D2274 BL 0x1C16F20
	0x031D2278 STR X30, [X31 - 0x20]!
	0x031D227C STP X20, X19, [X31 + 0x10]
	0x031D2280 ADRP X20, 0x120A000
	0x031D2284 ADRP X19, 0xF4D000
	0x031D2288 LDRB W8, [X20 + 0x68]
	0x031D228C LDR X19, [X19 + 0xDF8]
	0x031D2290 TBNZ X8, 0x0, 0x31D22A8
	0x031D2294 ADRP X0, 0xF4D000
	0x031D2298 LDR X0, [X0 + 0xDF8]
	0x031D229C BL 0x1C16CF4
	0x031D22A0 MOVZ W8, 0x1
	0x031D22A4 STRB W8, [X20 + 0x68]
	0x031D22A8 BL 0x31D1C38
	0x031D22AC LDR X8, [X19]
	0x031D22B0 LDP X20, X19, [X31 + 0x10]
	0x031D22B4 LDR X8, [X8 + 0xB8]
	0x031D22B8 LDR X0, [X8]
	0x031D22BC LDR X30, [X31], #0x20
	0x031D22C0 RET
	0x031D22C4 STP X30, X25, [X31 - 0x40]!
	0x031D22C8 STP X24, X23, [X31 + 0x10]
	0x031D22CC STP X22, X21, [X31 + 0x20]
	0x031D22D0 STP X20, X19, [X31 + 0x30]
	0x031D22D4 ADRP X20, 0x120A000
	0x031D22D8 LDRB W8, [X20 + 0x66]
	0x031D22DC MOV X19, X0
	0x031D22E0 TBNZ X8, 0x0, 0x31D2334
	0x031D22E4 ADRP X0, 0xF4D000
	0x031D22E8 LDR X0, [X0 + 0xDE8]
	0x031D22EC BL 0x1C16CF4
	0x031D22F0 ADRP X0, 0xF22000
	0x031D22F4 LDR X0, [X0 + 0xEC8]
	0x031D22F8 BL 0x1C16CF4
	0x031D22FC ADRP X0, 0xF4D000
	0x031D2300 LDR X0, [X0 + 0xEA0]
	0x031D2304 BL 0x1C16CF4
	0x031D2308 ADRP X0, 0xF45000
	0x031D230C LDR X0, [X0 + 0xEC0]
	0x031D2310 BL 0x1C16CF4
	0x031D2314 ADRP X0, 0xF23000
	0x031D2318 LDR X0, [X0 + 0x4B0]
	0x031D231C BL 0x1C16CF4
	0x031D2320 ADRP X0, 0xF4D000
	0x031D2324 LDR X0, [X0 + 0xEA8]
	0x031D2328 BL 0x1C16CF4
	0x031D232C MOVZ W8, 0x1
	0x031D2330 STRB W8, [X20 + 0x66]
	0x031D2334 LDR X0, [X19 + 0x20]
	0x031D2338 CBZ X0, 0x31D2428
	0x031D233C ADRP X25, 0xF22000
	0x031D2340 LDR X25, [X25 + 0xEC8]
	0x031D2344 ADRP X21, 0xF23000
	0x031D2348 LDR X21, [X21 + 0x4B0]
	0x031D234C ADRP X24, 0xF45000
	0x031D2350 LDR X1, [X25]
	0x031D2354 ADRP X22, 0xF4D000
	0x031D2358 ADRP X23, 0xF4D000
	0x031D235C LDR X24, [X24 + 0xEC0]
	0x031D2360 LDR X22, [X22 + 0xEA8]
	0x031D2364 LDR X23, [X23 + 0xDE8]
	0x031D2368 MOV X2, X31
	0x031D236C BL 0x3226588
	0x031D2370 LDR X20, [X19 + 0x20]
	0x031D2374 TBNZ X0, 0x0, 0x31D238C
	0x031D2378 LDR X1, [X25]
	0x031D237C MOV X0, X20
	0x031D2380 MOV X2, X31
	0x031D2384 BL 0x321B938
	0x031D2388 MOV X20, X0
	0x031D238C LDRB W8, [X19 + 0x3C]
	0x031D2390 LDR X0, [X22]
	0x031D2394 MOV X1, X20
	0x031D2398 MOV X3, X31
	0x031D239C CMP W8, 0x0
	0x031D23A0 CSEL X8, X21, X24, EQ
	0x031D23A4 LDR X21, [X8]
	0x031D23A8 ADRP X24, 0xF4D000
	0x031D23AC LDR X24, [X24 + 0xEA0]
	0x031D23B0 MOV X2, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x120B000
	009 Move W8, [X20+28]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0xF4E000
	016 Move X0, [X0+3112]
	017 Call 0x1C17CF4
	018 Move X0, 0xF4E000
	019 Move X0, [X0+3288]
	020 Call 0x1C17CF4
	021 Move X0, 0xF4E000
	022 Move X0, [X0+3480]
	023 Call 0x1C17CF4
	024 Move X0, 0xF4E000
	025 Move X0, [X0+3080]
	026 Call 0x1C17CF4
	027 Move X0, 0xF28000
	028 Move X0, [X0+3232]
	029 Call 0x1C17CF4
	030 Move X0, 0xF4E000
	031 Move X0, [X0+3296]
	032 Call 0x1C17CF4
	033 Move X0, 0xF4E000
	034 Move X0, [X0+3304]
	035 Call 0x1C17CF4
	036 Move X0, 0xF4E000
	037 Move X0, [X0+3072]
	038 Call 0x1C17CF4
	039 Move X0, 0xF4E000
	040 Move X0, [X0+3488]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+28], W8
	044 Move W8, [X19+16]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare W8, 0
	047 JumpIfNotEqual {88}
	048 Move X8, [X19+32]
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W9, TEMP
	052 Move [X19+16], W9
	053 Compare X8, 0
	054 JumpIfEqual {234}
	055 Move X9, 0xF4E000
	056 Move X9, [X9+3488]
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 Move X9, [X9]
	059 Move [X8+880], D0
	060 Move [X8+872], X9
	061 Move X8, 0xF4E000
	062 Move X8, [X8+3072]
	063 Move X0, [X8]
	064 Call 0x1C17F10
	065 Move X8, 0xF4E000
	066 Move X8, [X8+3080]
	067 Move X20, X0
	068 Move X1, [X8]
	069 Call List`1<Object>..ctor, X0
	070 Move X8, [X19+32]
	071 Move [X19+40], X20
	072 Compare X8, 0
	073 JumpIfEqual {234}
	074 Move W9, [X8+388]
	075 Compare W9, 0
	076 JumpIfEqual {89}
	077 Move X9, [X8+752]
	078 Compare X9, 0
	079 JumpIfEqual {234}
	080 Move W9, [X9+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W1, W31
	083 Move [X19+48], W31
	084 Move TEMP, 0
	085 Not TEMP
	086 Move W8, TEMP
	087 Move [X19+16], W8
	088 Move W0, W31
	089 Compare X20, 0
	090 JumpIfEqual {234}
	091 Move W2, [X20+24]
	092 Move W8, [X20+28]
	093 Add W8, W8, 1
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X20+24], W31
	096 Move [X20+28], W8
	097 Move X0, [X20+16]
	098 Move W1, W31
	099 Move X3, X31
	100 Call Array.Clear, X0, X1, X2
	101 Move X8, [X19+32]
	102 Compare X8, 0
	103 JumpIfEqual {234}
	104 Move W0, W31
	105 Move [X8+869], W31
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X30, [X31+64]
	113 Return X0
	114 Move X2, [X23]
	115 Call List`1<Object>.get_Item, X0, X1
	116 Compare X0, 0
	117 JumpIfEqual {234}
	118 Move X8, [X19+32]
	119 Compare X8, 0
	120 JumpIfEqual {234}
	121 Move W9, [X8+832]
	122 Move W10, [X0+36]
	123 Subtract W9, W9, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, [X8+744]
	126 Compare X0, 0
	127 JumpIfEqual {234}
	128 Move W1, [X19+48]
	129 Move X2, [X23]
	130 Call List`1<Object>.get_Item, X0, X1
	131 Compare X0, 0
	132 JumpIfEqual {234}
	133 Move X8, [X19+32]
	134 Compare X8, 0
	135 JumpIfEqual {234}
	136 Move W9, [X0+44]
	137 Move W10, [X8+840]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, [X8+744]
	140 Compare X0, 0
	141 JumpIfEqual {234}
	142 Move W1, [X19+48]
	143 Move X2, [X23]
	144 Move X20, [X19+40]
	145 Call List`1<Object>.get_Item, X0, X1
	146 Compare X20, 0
	147 JumpIfEqual {234}
	148 Move X9, 0xF4E000
	149 Move X9, [X9+3112]
	150 Move W10, [X20+28]
	151 Move X8, [X20+16]
	152 Move X9, [X9]
	153 Add W10, W10, 1
	154 Move [X20+28], W10
	155 Compare X8, 0
	156 JumpIfEqual {234}
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Move W11, [X8+24]
	159 Move X1, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add W9, W10, 1
	162 Add X8, X8, X10
	163 Move [X20+24], W9
	164 Move [X8+32], X1
	165 Move X8, [X9+32]
	166 Move X0, X20
	167 Move X8, [X8+192]
	168 Move X2, [X8+112]
	169 Call List`1<Object>.AddWithResize, X0, X1
	170 Move X8, [X19+32]
	171 Compare X8, 0
	172 JumpIfEqual {234}
	173 Move W9, [X8+826]
	174 Compare W9, 0
	175 JumpIfNotEqual {195}
	176 Move X9, [X8+744]
	177 Compare X9, 0
	178 JumpIfEqual {234}
	179 Move W10, [X8+880]
	180 Move V0, [X9+24]
	181 Move W11, [X8+884]
	182 Move W9, 0x42C80000
	183 NotImplemented "Instruction SCVTF not yet implemented."
	184 NotImplemented "Instruction SCVTF not yet implemented."
	185 NotImplemented "Instruction FDIV not yet implemented."
	186 Move S1, W9
	187 Add W9, W10, 1
	188 Move [X8+880], W9
	189 Add W9, W11, 1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Multiply S0, S0, S1
	192 NotImplemented "Instruction CSINC not yet implemented."
	193 Move [X8+892], S0
	194 Move [X8+884], W9
	195 Move W9, [X19+48]
	196 Move X8, [X19+32]
	197 Add W1, W9, 1
	198 Move [X19+48], W1
	199 Compare X8, 0
	200 JumpIfEqual {234}
	201 Move X0, [X8+744]
	202 Compare X0, 0
	203 JumpIfEqual {234}
	204 Move W8, [X0+24]
	205 Move X23, 0xF4E000
	206 Move X23, [X23+3304]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X20, [X19+40]
	209 Compare X20, 0
	210 JumpIfEqual {234}
	211 Move X24, 0xF4E000
	212 Move X24, [X24+3480]
	213 Move W21, W31
	214 Move W8, [X20+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X8, [X19+32]
	217 Compare X8, 0
	218 JumpIfEqual {234}
	219 Move X2, [X23]
	220 Move X22, [X8+744]
	221 Move X0, X20
	222 Move W1, W21
	223 Call List`1<Object>.get_Item, X0, X1
	224 Compare X22, 0
	225 JumpIfEqual {234}
	226 Move X2, [X24]
	227 Move X1, X0
	228 Move X0, X22
	229 Call List`1<Object>.Remove, X0, X1
	230 Move X20, [X19+40]
	231 Add W21, W21, 1
	232 Compare X20, 0
	233 JumpIfNotEqual {214}
	234 Call 0x1C17F20
	235 Move W0, 1
	236 Move [X19+24], X31
	237 Move [X19+16], W0

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x031D23B4 BL 0x3227BD4
	0x031D23B8 LDR X8, [X23]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x031D23BC MOV X22, X0
	0x031D23C0 LDR W9, [X8 + 0xE0]
	0x031D23C4 CBNZ W9, 0x31D23D4
	0x031D23C8 MOV X0, X8
	0x031D23CC BL 0x1C16DFC
	0x031D23D0 LDR X8, [X23]
	0x031D23D4 LDR X8, [X8 + 0xB8]
	0x031D23D8 MOV X1, X20
	0x031D23DC MOV X2, X21
	0x031D23E0 MOV X3, X31
	0x031D23E4 STR X22, [X8]
	0x031D23E8 LDR X0, [X24]
	0x031D23EC BL 0x3227BD4
	0x031D23F0 LDR X8, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xF22000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xF4E000
	011 Move X0, [X0+3496]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x031D23F4 LDP X22, X21, [X31 + 0x20]
	0x031D23F8 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

