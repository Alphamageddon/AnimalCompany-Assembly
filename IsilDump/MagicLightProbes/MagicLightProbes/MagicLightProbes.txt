Type: MagicLightProbes.MagicLightProbes

Method: System.Void CheckForNearContrast(MagicLightProbes.MLPPointData pointForCheck)

Disassembly:
	0x031CE7C0 MOV X20, X0
	0x031CE7C4 BL 0x30CB97C
	0x031CE7C8 STR X20, [X19 + 0x90]
	0x031CE7CC LDR X0, [X24]
	0x031CE7D0 BL 0x1C16F10
	0x031CE7D4 LDR X1, [X23]
	0x031CE7D8 MOV X20, X0
	0x031CE7DC BL 0x30CB97C
	0x031CE7E0 STR X20, [X19 + 0x98]
	0x031CE7E4 LDR X0, [X24]
	0x031CE7E8 BL 0x1C16F10
	0x031CE7EC LDR X1, [X23]
	0x031CE7F0 MOV X20, X0
	0x031CE7F4 BL 0x30CB97C
	0x031CE7F8 STR X20, [X19 + 0xA0]
	0x031CE7FC LDR X0, [X24]
	0x031CE800 BL 0x1C16F10
	0x031CE804 LDR X1, [X23]
	0x031CE808 MOV X20, X0
	0x031CE80C BL 0x30CB97C
	0x031CE810 STR X20, [X19 + 0xA8]
	0x031CE814 LDR X0, [X24]
	0x031CE818 BL 0x1C16F10
	0x031CE81C LDR X1, [X23]
	0x031CE820 MOV X20, X0
	0x031CE824 BL 0x30CB97C
	0x031CE828 STR X20, [X19 + 0xB0]
	0x031CE82C LDR X0, [X24]
	0x031CE830 BL 0x1C16F10
	0x031CE834 LDR X1, [X23]
	0x031CE838 MOV X20, X0
	0x031CE83C BL 0x30CB97C
	0x031CE840 STR X20, [X19 + 0xB8]
	0x031CE844 LDR X0, [X24]
	0x031CE848 BL 0x1C16F10
	0x031CE84C LDR X1, [X23]
	0x031CE850 MOV X20, X0
	0x031CE854 BL 0x30CB97C
	0x031CE858 STR X20, [X19 + 0xC0]
	0x031CE85C LDR X0, [X24]
	0x031CE860 BL 0x1C16F10
	0x031CE864 LDR X1, [X23]
	0x031CE868 MOV X20, X0
	0x031CE86C BL 0x30CB97C
	0x031CE870 STR X20, [X19 + 0xC8]
	0x031CE874 LDR X0, [X22]
	0x031CE878 BL 0x1C16F10
	0x031CE87C LDR X1, [X21]
	0x031CE880 MOV X20, X0
	0x031CE884 BL 0x301B7C4
	0x031CE888 STR X20, [X19 + 0xD0]
	0x031CE88C MOV X0, X19
	0x031CE890 LDP X20, X19, [X31 + 0x30]
	0x031CE894 LDP X22, X21, [X31 + 0x20]
	0x031CE898 LDP X24, X23, [X31 + 0x10]
	0x031CE89C MOV X1, X31
	0x031CE8A0 LDR X30, [X31], #0x40
	0x031CE8A4 B 0x3C36C30
	0x031CE8A8 STP X30, X21, [X31 - 0x20]!
	0x031CE8AC STP X20, X19, [X31 + 0x10]
	0x031CE8B0 ADRP X20, 0x120E000
	0x031CE8B4 ADRP X21, 0xF51000
	0x031CE8B8 LDRB W8, [X20 + 0x12]
	0x031CE8BC LDR X21, [X21 + 0xCC8]
	0x031CE8C0 MOV X19, X1
	0x031CE8C4 TBNZ X8, 0x0, 0x31CE8DC
	0x031CE8C8 ADRP X0, 0xF51000
	0x031CE8CC LDR X0, [X0 + 0xCC8]
	0x031CE8D0 BL 0x1C16CF4
	0x031CE8D4 MOVZ W8, 0x1
	0x031CE8D8 STRB W8, [X20 + 0x12]
	0x031CE8DC LDR X0, [X21]
	0x031CE8E0 BL 0x1C16F10
	0x031CE8E4 MOV X1, X31
	0x031CE8E8 MOV X20, X0
	0x031CE8EC BL 0x33BDD8C
	0x031CE8F0 STR W31, [X20 + 0x10]
	0x031CE8F4 STR X19, [X20 + 0x20]
	0x031CE8F8 MOV X0, X20
	0x031CE8FC LDP X20, X19, [X31 + 0x10]
	0x031CE900 LDP X30, X21, [X31], #0x20
	0x031CE904 RET
	0x031CE908 STR X30, [X31 - 0x20]!
	0x031CE90C STP X20, X19, [X31 + 0x10]
	0x031CE910 MOV W19, W1
	0x031CE914 MOV X1, X31
	0x031CE918 MOV X20, X0
	0x031CE91C BL 0x33BDD8C
	0x031CE920 STR W19, [X20 + 0x10]
	0x031CE924 LDP X20, X19, [X31 + 0x10]
	0x031CE928 LDR X30, [X31], #0x20
	0x031CE92C RET
	0x031CE930 MOV X1, X31
	0x031CE934 B 0x33BDD8C
	0x031CE938 LDR W8, [X0 + 0x10]
	0x031CE93C CMP W8, 0x2
	0x031CE940 B.EQ 0x31CE94C
	0x031CE944 ADDS W31, W8, 0x3
	0x031CE948 B.NE 0x31CE950
	0x031CE94C B 0x31CF434
	0x031CE950 RET
	0x031CE954 SUB X31, X31, 0xF0
	0x031CE958 STP D15, D14, [X31 + 0x70]
	0x031CE95C STP D13, D12, [X31 + 0x80]
	0x031CE960 STP D11, D10, [X31 + 0x90]
	0x031CE964 STP D9, D8, [X31 + 0xA0]
	0x031CE968 STP X30, X25, [X31 + 0xB0]
	0x031CE96C STP X24, X23, [X31 + 0xC0]
	0x031CE970 STP X22, X21, [X31 + 0xD0]
	0x031CE974 STP X20, X19, [X31 + 0xE0]
	0x031CE978 ADRP X20, 0x120E000
	0x031CE97C LDRB W8, [X20 + 0x13]
	0x031CE980 MOV X19, X0
	0x031CE984 STR X0, [X31 + 0x68]
	0x031CE988 TBNZ X8, 0x0, 0x31CEA48
	0x031CE98C ADRP X0, 0xF51000
	0x031CE990 LDR X0, [X0 + 0xC18]
	0x031CE994 BL 0x1C16CF4
	0x031CE998 ADRP X0, 0xF51000
	0x031CE99C LDR X0, [X0 + 0xC20]
	0x031CE9A0 BL 0x1C16CF4
	0x031CE9A4 ADRP X0, 0xF2C000
	0x031CE9A8 LDR X0, [X0 + 0x780]
	0x031CE9AC BL 0x1C16CF4
	0x031CE9B0 ADRP X0, 0xF51000
	0x031CE9B4 LDR X0, [X0 + 0xCD0]
	0x031CE9B8 BL 0x1C16CF4
	0x031CE9BC ADRP X0, 0xF51000
	0x031CE9C0 LDR X0, [X0 + 0xC28]
	0x031CE9C4 BL 0x1C16CF4
	0x031CE9C8 ADRP X0, 0xF51000
	0x031CE9CC LDR X0, [X0 + 0xCD8]
	0x031CE9D0 BL 0x1C16CF4
	0x031CE9D4 ADRP X0, 0xF51000
	0x031CE9D8 LDR X0, [X0 + 0xC30]
	0x031CE9DC BL 0x1C16CF4
	0x031CE9E0 ADRP X0, 0xF51000
	0x031CE9E4 LDR X0, [X0 + 0xC08]
	0x031CE9E8 BL 0x1C16CF4
	0x031CE9EC ADRP X0, 0xF51000
	0x031CE9F0 LDR X0, [X0 + 0xCE0]
	0x031CE9F4 BL 0x1C16CF4
	0x031CE9F8 ADRP X0, 0xF51000
	0x031CE9FC LDR X0, [X0 + 0xCE8]
	0x031CEA00 BL 0x1C16CF4
	0x031CEA04 ADRP X0, 0xF51000
	0x031CEA08 LDR X0, [X0 + 0xC00]
	0x031CEA0C BL 0x1C16CF4
	0x031CEA10 ADRP X0, 0xF51000
	0x031CEA14 LDR X0, [X0 + 0xCF0]
	0x031CEA18 BL 0x1C16CF4
	0x031CEA1C ADRP X0, 0xF26000
	0x031CEA20 LDR X0, [X0 + 0xEC8]
	0x031CEA24 BL 0x1C16CF4
	0x031CEA28 ADRP X0, 0xF51000
	0x031CEA2C LDR X0, [X0 + 0xCF8]
	0x031CEA30 BL 0x1C16CF4
	0x031CEA34 ADRP X0, 0xF51000
	0x031CEA38 LDR X0, [X0 + 0xD00]
	0x031CEA3C BL 0x1C16CF4
	0x031CEA40 MOVZ W8, 0x1
	0x031CEA44 STRB W8, [X20 + 0x13]
	0x031CEA48 ADD X8, X31, 0x68
	0x031CEA4C STP X31, X31, [X31 + 0x50]
	0x031CEA50 STR X31, [X31 + 0x60]
	0x031CEA54 STP X31, X8, [X31 + 0x40]
	0x031CEA58 LDR W8, [X19 + 0x10]
	0x031CEA5C ADRP X20, 0xF51000
	0x031CEA60 LDR X20, [X20 + 0xC28]
	0x031CEA64 CMP W8, 0x2
	0x031CEA68 B.EQ 0x31CEB20
	0x031CEA6C ADRP X21, 0xF25000
	0x031CEA70 LDR X21, [X21 + 0x5A8]
	0x031CEA74 CMP W8, 0x1
	0x031CEA78 B.EQ 0x31CEB14
	0x031CEA7C CBNZ W8, 0x31CEC28
	0x031CEA80 LDR X8, [X19 + 0x20]
	0x031CEA84 MOVN W9, 0x0
	0x031CEA88 STR W9, [X19 + 0x10]
	0x031CEA8C CBZ X8, 0x31CEC04
	0x031CEA90 ADRP X9, 0xF51000
	0x031CEA94 LDR X9, [X9 + 0xCF8]
	0x031CEA98 MOVI V0.2D, 0x0
	0x031CEA9C ADRP X19, 0x120B000
	0x031CEAA0 LDR V8, [X8 + 0x120]
	0x031CEAA4 LDR X9, [X9]
	0x031CEAA8 STR D0, [X8 + 0x370]
	0x031CEAAC LDR V9, [X8 + 0x124]
	0x031CEAB0 STR X9, [X8 + 0x368]
	0x031CEAB4 LDRB W9, [X19 + 0x5D7]
	0x031CEAB8 CBNZ W9, 0x31CEAD0
	0x031CEABC ADRP X0, 0xF25000
	0x031CEAC0 LDR X0, [X0 + 0x5A8]
	0x031CEAC4 BL 0x1C16CF4
	0x031CEAC8 MOVZ W8, 0x1
	0x031CEACC STRB W8, [X19 + 0x5D7]
	0x031CEAD0 LDR X0, [X21]
	0x031CEAD4 LDR W8, [X0 + 0xE0]
	0x031CEAD8 CBNZ W8, 0x31CEAE0
	0x031CEADC BL 0x1C16DFC
	0x031CEAE0 FDIV S9, S8, S9
	0x031CEAE4 FCVT S8, S9
	0x031CEAE8 ADD X0, X31, 0x20
	0x031CEAEC MOV V0.16B, V8.16B
	0x031CEAF0 BL 0x3EB1C00
	0x031CEAF4 FCMP S9, 0x0
	0x031CEAF8 B.GE 0x31CEB2C
	0x031CEAFC FMOV D1, -0.5
	0x031CEB00 FCMP D0, D1
	0x031CEB04 B.NE 0x31CEB54
	0x031CEB08 LDR V0, [X31 + 0x20]
	0x031CEB0C FMOV D1, -1
	0x031CEB10 B 0x31CEB40
	0x031CEB14 MOVN W8, 0x0
	0x031CEB18 STR W8, [X19 + 0x10]
	0x031CEB1C B 0x31CEEF4
	0x031CEB20 MOVN W8, 0x2
	0x031CEB24 STR W8, [X19 + 0x10]
	0x031CEB28 B 0x31CF0A4
	0x031CEB2C FMOV D1, 0.5
	0x031CEB30 FCMP D0, D1
	0x031CEB34 B.NE 0x31CEB60
	0x031CEB38 LDR V0, [X31 + 0x20]
	0x031CEB3C FMOV D1, 1
	0x031CEB40 FCVTZS X8, D0
	0x031CEB44 FADD D1, D0, D1
	0x031CEB48 ANDS X31, X8, 0x1
	0x031CEB4C FCSEL D0, D0, D1, EQ
	0x031CEB50 B 0x31CEB68
	0x031CEB54 FADD D0, D8, D1
	0x031CEB58 FRINTP D0, D0
	0x031CEB5C B 0x31CEB68
	0x031CEB60 FADD D0, D8, D1
	0x031CEB64 FRINTM D0, D0
	0x031CEB68 MOVZ X9, 0x7FF00000
	0x031CEB6C LDR X10, [X31 + 0x68]
	0x031CEB70 FMOV D1, X9
	0x031CEB74 FCVTZS W8, D0
	0x031CEB78 MOVZ W11, 0x80000000
	0x031CEB7C FCMP D0, D1
	0x031CEB80 CSEL W8, W11, W8, EQ
	0x031CEB84 STR W8, [X10 + 0x28]
	0x031CEB88 ADRP X22, 0xF51000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+64], D12
	003 Move [X31+80], D11
	004 Move [X31+88], D10
	005 Move [X31+96], D9
	006 Move [X31+104], D8
	007 Move [X31+112], X29
	008 Move [X31+120], X30
	009 Move [X31+128], X28
	010 Move [X31+136], X27
	011 Move [X31+144], X26
	012 Move [X31+152], X25
	013 Move [X31+160], X24
	014 Move [X31+168], X23
	015 Move [X31+176], X22
	016 Move [X31+184], X21
	017 Move [X31+192], X20
	018 Move [X31+200], X19
	019 Move X23, 0x120F000
	020 Move X22, 0xF52000
	021 Move X21, 0xF52000
	022 Move W8, [X23+11]
	023 Move X22, [X22+3072]
	024 Move X21, [X21+3080]
	025 Move X19, X1
	026 Move X20, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {54}
	031 Move X0, 0xF52000
	032 Move X0, [X0+3088]
	033 Call 0x1C17CF4
	034 Move X0, 0xF52000
	035 Move X0, [X0+3096]
	036 Call 0x1C17CF4
	037 Move X0, 0xF52000
	038 Move X0, [X0+3104]
	039 Call 0x1C17CF4
	040 Move X0, 0xF52000
	041 Move X0, [X0+3112]
	042 Call 0x1C17CF4
	043 Move X0, 0xF52000
	044 Move X0, [X0+3120]
	045 Call 0x1C17CF4
	046 Move X0, 0xF52000
	047 Move X0, [X0+3080]
	048 Call 0x1C17CF4
	049 Move X0, 0xF52000
	050 Move X0, [X0+3072]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X23+11], W8
	054 Move X0, [X22]
	055 Move [X31+32], X31
	056 Move [X31+40], X31
	057 Move [X31+48], X31
	058 Call 0x1C17F10
	059 Move X1, [X21]
	060 Move X21, X0
	061 Call List`1<Object>..ctor, X0
	062 Move X0, [X20+640]
	063 Compare X0, 0
	064 JumpIfEqual {224}
	065 Move X27, 0xF52000
	066 Move X27, [X27+3120]
	067 Move X26, 0xF52000
	068 Move X25, 0xF52000
	069 Move X24, 0xF52000
	070 Move X1, [X27]
	071 Move X26, [X26+3096]
	072 Move X25, [X25+3112]
	073 Move X24, [X24+3088]
	074 Add X8, X31, 8
	075 Call List`1<Object>.GetEnumerator, X0
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Move X8, [X31+24]
	078 Move X22, 0xF26000
	079 Move X22, [X22+1448]
	080 Move X28, 0x120B000
	081 Move W29, 1
	082 Move [X31+2], V0
	083 Move [X31+48], X8
	084 Move S8, 2
	085 Move X1, [X26]
	086 Add X0, X31, 32
	087 Call Enumerator<Object>.MoveNext, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {143}
	092 Move X23, [X31+48]
	093 Compare X23, 0
	094 JumpIfEqual {219}
	095 Compare X19, 0
	096 JumpIfEqual {220}
	097 Move V9, [X23+24]
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 Move V11, [X19+24]
	100 Move W8, [X28+2140]
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Compare W8, 0
	103 JumpIfNotEqual {107}
	104 Move X0, X22
	105 Call 0x1C17CF4
	106 Move [X28+2140], W29
	107 Move X0, [X22]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Subtract S0, S9, S11
	113 Subtract V1, V10, V12
	114 Multiply S0, S0, S0
	115 NotImplemented "Instruction INVALID not yet implemented."
	116 Add S0, S0, S1
	117 Move S1, V1.S[1]
	118 Add S0, S1, S0
	119 NotImplemented "Instruction FSQRT not yet implemented."
	120 NotImplemented "Instruction FCMP not yet implemented."
	121 Compare X21, 0
	122 JumpIfEqual {222}
	123 Move W10, [X21+28]
	124 Move X8, [X21+16]
	125 Move X9, [X25]
	126 Add W10, W10, 1
	127 Move [X21+28], W10
	128 Compare X8, 0
	129 JumpIfEqual {223}
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Move W11, [X8+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add W9, W10, 1
	134 Add X8, X8, X10
	135 Move [X21+24], W9
	136 Move [X8+32], X23
	137 Move X8, [X9+32]
	138 Move X8, [X8+192]
	139 Move X2, [X8+112]
	140 Move X0, X21
	141 Move X1, X23
	142 Call List`1<Object>.AddWithResize, X0, X1
	143 Move X1, [X24]
	144 Add X0, X31, 32
	145 Call Enumerator<Object>.Dispose, X0
	146 Compare X21, 0
	147 JumpIfEqual {224}
	148 Move X1, [X27]
	149 Add X8, X31, 8
	150 Move X0, X21
	151 Call List`1<Object>.GetEnumerator, X0
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move X8, [X31+24]
	154 Move [X31+2], V0
	155 Move [X31+48], X8
	156 Move X1, [X26]
	157 Add X0, X31, 32
	158 Call Enumerator<Object>.MoveNext, X0
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {175}
	163 Move X8, [X31+48]
	164 Compare X8, 0
	165 JumpIfEqual {221}
	166 Move W9, [X8+84]
	167 Compare W9, 0
	168 JumpIfNotEqual {156}
	169 Move W8, [X8+86]
	170 Compare W8, 0
	171 JumpIfNotEqual {156}
	172 Move X1, [X24]
	173 Add X0, X31, 32
	174 Call Enumerator<Object>.Dispose, X0
	175 Move X1, [X24]
	176 Add X0, X31, 32
	177 Call Enumerator<Object>.Dispose, X0
	178 Move X0, [X20+640]
	179 Compare X0, 0
	180 JumpIfEqual {224}
	181 Move W10, [X0+28]
	182 Move X8, [X0+16]
	183 Move X9, [X25]
	184 Add W10, W10, 1
	185 Move [X0+28], W10
	186 Compare X8, 0
	187 JumpIfEqual {224}
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Move W11, [X8+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add W9, W10, 1
	192 Add X8, X8, X10
	193 Move [X0+24], W9
	194 Move [X8+32], X19
	195 Move X8, [X9+32]
	196 Move X1, X19
	197 Move X8, [X8+192]
	198 Move X2, [X8+112]
	199 Call List`1<Object>.AddWithResize, X0, X1
	200 Move X20, [X31+192]
	201 Move X19, [X31+200]
	202 Move X22, [X31+176]
	203 Move X21, [X31+184]
	204 Move X24, [X31+160]
	205 Move X23, [X31+168]
	206 Move X26, [X31+144]
	207 Move X25, [X31+152]
	208 Move X28, [X31+128]
	209 Move X27, [X31+136]
	210 Move X29, [X31+112]
	211 Move X30, [X31+120]
	212 Move D9, [X31+96]
	213 Move D8, [X31+104]
	214 Move D11, [X31+80]
	215 Move D10, [X31+88]
	216 Move V12, [X31+64]
	217 Add X31, X31, 208
	218 Return 
	219 Call 0x1C17F20
	220 Call 0x1C17F20
	221 Call 0x1C17F20
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Call 0x1C17F20
	225 Move X21, X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X21
	228 Call 0x3EB2AD0
	229 Move X22, [X0]
	230 Call 0x3EB2AE0
	231 Move X1, [X24]
	232 Add X0, X31, 32
	233 Call Enumerator<Object>.Dispose, X0
	234 Compare X22, 0
	235 JumpIfEqual {178}
	236 Move X22, X31
	237 Move X21, X0
	238 Move X1, [X24]
	239 Add X0, X31, 32
	240 Call Enumerator<Object>.Dispose, X0
	241 Compare X22, 0
	242 JumpIfEqual {264}
	243 Move X0, X22
	244 Call 0x1C17F18
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Call 0x3EB2AD0
	247 Move X22, [X0]
	248 Call 0x3EB2AE0
	249 Move X1, [X24]
	250 Add X0, X31, 32
	251 Call Enumerator<Object>.Dispose, X0
	252 Compare X22, 0
	253 JumpIfEqual {146}
	254 Move X0, X22
	255 Call 0x1C17F18
	256 Move X21, X0
	257 Move X22, X31
	258 Move X21, X0
	259 Move X1, [X24]
	260 Add X0, X31, 32
	261 Call Enumerator<Object>.Dispose, X0
	262 Compare X22, 0
	263 JumpIfNotEqual {266}
	264 Move X0, X21
	265 Call 0x1D2D690
	266 Move X0, X22
	267 Call 0x1C17F18
	268 Call 0x1991590

Method: System.Boolean UpdateProgress(System.Int32 count, System.Int32 period = 100)

Disassembly:
	0x031CEB8C LDR X22, [X22 + 0xC00]
	0x031CEB90 LDR X0, [X22]
	0x031CEB94 BL 0x1C16F10
	0x031CEB98 ADRP X23, 0xF51000
	0x031CEB9C LDR X23, [X23 + 0xC08]
	0x031CEBA0 MOV X19, X0
	0x031CEBA4 LDR X1, [X23]
	0x031CEBA8 BL 0x301B7C4
	0x031CEBAC LDR X8, [X31 + 0x68]
	0x031CEBB0 STR X19, [X8 + 0x30]
	0x031CEBB4 LDR X0, [X22]
	0x031CEBB8 BL 0x1C16F10
	0x031CEBBC LDR X1, [X23]
	0x031CEBC0 MOV X19, X0
	0x031CEBC4 BL 0x301B7C4
	0x031CEBC8 LDR X9, [X31 + 0x68]
	0x031CEBCC LDR X8, [X9 + 0x20]
	0x031CEBD0 STR X19, [X9 + 0x38]

ISIL:
	001 Move W8, [X0+880]
	002 Move W10, [X0+884]
	003 NotImplemented "Instruction SCVTF not yet implemented."
	004 Move W9, 0x42C80000
	005 NotImplemented "Instruction SCVTF not yet implemented."
	006 Add W8, W8, 1
	007 Move [X0+880], W8
	008 Add W8, W10, 1
	009 NotImplemented "Instruction FDIV not yet implemented."
	010 Move S1, W9
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Multiply S0, S0, S1
	013 NotImplemented "Instruction CSET not yet implemented."
	014 NotImplemented "Instruction CSINC not yet implemented."
	015 Move [X0+892], S0
	016 Move [X0+884], W9
	017 Move W0, W8
	018 Return X0

Method: System.Boolean UpdateTotalProgress(System.Int32 count, System.Int32 period = 100)

Disassembly:
	0x031CEBD4 CBZ X8, 0x31CEC08
	0x031CEBD8 LDR X0, [X8 + 0x280]
	0x031CEBDC CBZ X0, 0x31CEC0C
	0x031CEBE0 LDR X1, [X8 + 0x2C0]
	0x031CEBE4 ADRP X8, 0xF51000
	0x031CEBE8 LDR X8, [X8 + 0xCD0]
	0x031CEBEC LDR X2, [X8]
	0x031CEBF0 BL 0x301C194
	0x031CEBF4 LDR X19, [X31 + 0x68]
	0x031CEBF8 MOV W8, W31
	0x031CEBFC STR W31, [X19 + 0x40]
	0x031CEC00 B 0x31CEF00
	0x031CEC04 BL 0x1C16F20
	0x031CEC08 BL 0x1C16F20
	0x031CEC0C BL 0x1C16F20
	0x031CEC10 B 0x31CF3D4
	0x031CEC14 B 0x31CF3D4
	0x031CEC18 B 0x31CF3D4

ISIL:
	001 Move W8, [X0+972]
	002 Move W10, [X0+976]
	003 NotImplemented "Instruction SCVTF not yet implemented."
	004 Move W9, 0x42C80000
	005 NotImplemented "Instruction SCVTF not yet implemented."
	006 Add W8, W8, 1
	007 Move [X0+972], W8
	008 Add W8, W10, 1
	009 NotImplemented "Instruction FDIV not yet implemented."
	010 Move S1, W9
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Multiply S0, S0, S1
	013 NotImplemented "Instruction CSET not yet implemented."
	014 NotImplemented "Instruction CSINC not yet implemented."
	015 Move [X0+888], S0
	016 Move [X0+976], W9
	017 Move W0, W8
	018 Return X0

Method: System.Void .ctor()

Disassembly:
	0x031CEC1C B 0x31CF3D4
	0x031CEC20 B 0x31CF3D4
	0x031CEC24 B 0x31CF3D4
	0x031CEC28 MOV W0, W31
	0x031CEC2C B 0x31CF244
	0x031CEC30 ADRP X22, 0xF51000
	0x031CEC34 LDR X22, [X22 + 0xCE8]
	0x031CEC38 LDR X2, [X22]
	0x031CEC3C MOV X0, X9
	0x031CEC40 MOV W1, W8
	0x031CEC44 BL 0x301BCCC
	0x031CEC48 CBZ X0, 0x31CEF70
	0x031CEC4C LDRB W8, [X0 + 0x53]
	0x031CEC50 CBZ W8, 0x31CEE9C
	0x031CEC54 ADRP X19, 0x120A000
	0x031CEC58 LDRB W8, [X19 + 0x786]
	0x031CEC5C CBNZ W8, 0x31CEC74
	0x031CEC60 ADRP X0, 0xF25000
	0x031CEC64 LDR X0, [X0 + 0x5A0]
	0x031CEC68 BL 0x1C16CF4
	0x031CEC6C MOVZ W8, 0x1
	0x031CEC70 STRB W8, [X19 + 0x786]
	0x031CEC74 LDR X8, [X31 + 0x68]
	0x031CEC78 LDR X9, [X8 + 0x20]
	0x031CEC7C CBZ X9, 0x31CEF80
	0x031CEC80 LDR X0, [X9 + 0x280]
	0x031CEC84 CBZ X0, 0x31CEF88
	0x031CEC88 ADRP X19, 0xF25000
	0x031CEC8C LDR X19, [X19 + 0x5A0]
	0x031CEC90 LDR W1, [X8 + 0x40]
	0x031CEC94 LDR X2, [X22]
	0x031CEC98 LDR X9, [X19]
	0x031CEC9C LDR X9, [X9 + 0xB8]
	0x031CECA0 LDP S9, S10, [X9 + 0x18]
	0x031CECA4 LDR V0, [X9 + 0x20]
	0x031CECA8 STR S0, [X31 + 0x4]
	0x031CECAC BL 0x301BCCC
	0x031CECB0 CBZ X0, 0x31CEF78
	0x031CECB4 LDR X9, [X31 + 0x68]
	0x031CECB8 LDR X8, [X9 + 0x20]
	0x031CECBC CBZ X8, 0x31CEF7C
	0x031CECC0 LDR X8, [X8 + 0x280]
	0x031CECC4 CBZ X8, 0x31CEF84
	0x031CECC8 LDP S11, S12, [X0 + 0x60]
	0x031CECCC LDR V13, [X0 + 0x68]
	0x031CECD0 LDR W1, [X9 + 0x40]
	0x031CECD4 LDR X2, [X22]
	0x031CECD8 MOV X0, X8
	0x031CECDC BL 0x301BCCC
	0x031CECE0 CBZ X0, 0x31CEF74
	0x031CECE4 ADRP X23, 0x120A000
	0x031CECE8 LDP S14, S15, [X0 + 0x18]
	0x031CECEC LDRB W8, [X23 + 0x785]
	0x031CECF0 LDR V8, [X0 + 0x20]
	0x031CECF4 CBNZ W8, 0x31CED0C
	0x031CECF8 ADRP X0, 0xF25000
	0x031CECFC LDR X0, [X0 + 0x5A8]
	0x031CED00 BL 0x1C16CF4
	0x031CED04 MOVZ W8, 0x1
	0x031CED08 STRB W8, [X23 + 0x785]
	0x031CED0C LDR X0, [X21]
	0x031CED10 LDR W8, [X0 + 0xE0]
	0x031CED14 CBNZ W8, 0x31CED1C
	0x031CED18 BL 0x1C16DFC
	0x031CED1C FSUB S0, S11, S14
	0x031CED20 FSUB S2, S12, S15
	0x031CED24 ADRP X8, 0xFFFFFFFFFD91C000
	0x031CED28 FSUB S3, S13, S8
	0x031CED2C FMUL S1, S0, S0
	0x031CED30 FMUL S4, S2, S2
	0x031CED34 LDR V5, [X8 + 0x17C]
	0x031CED38 FADD S1, S1, S4
	0x031CED3C FMUL S4, S3, S3
	0x031CED40 FADD S1, S4, S1
	0x031CED44 FSQRT S4, S1
	0x031CED48 FCMP S4, S5
	0x031CED4C B.LE 0x31CED60
	0x031CED50 FDIV S1, S0, S4
	0x031CED54 FDIV S0, S2, S4
	0x031CED58 FDIV S2, S3, S4
	0x031CED5C B 0x31CED90
	0x031CED60 ADRP X23, 0x120A000
	0x031CED64 LDRB W8, [X23 + 0x783]
	0x031CED68 CBNZ W8, 0x31CED80
	0x031CED6C ADRP X0, 0xF25000
	0x031CED70 LDR X0, [X0 + 0x5A0]
	0x031CED74 BL 0x1C16CF4
	0x031CED78 MOVZ W8, 0x1
	0x031CED7C STRB W8, [X23 + 0x783]
	0x031CED80 LDR X8, [X19]
	0x031CED84 LDR X8, [X8 + 0xB8]
	0x031CED88 LDP S1, S0, [X8]
	0x031CED8C LDR V2, [X8 + 0x8]
	0x031CED90 LDR V4, [X31 + 0x4]
	0x031CED94 FNEG S3, S10
	0x031CED98 FMUL S1, S9, S1
	0x031CED9C LDR X8, [X31 + 0x68]
	0x031CEDA0 FMUL S0, S0, S3
	0x031CEDA4 FMUL S2, S4, S2
	0x031CEDA8 FSUB S0, S0, S1
	0x031CEDAC FSUB S0, S0, S2
	0x031CEDB0 FMOV S1, 1
	0x031CEDB4 FCMP S0, S1
	0x031CEDB8 B.NE 0x31CEE24
	0x031CEDBC LDR X9, [X8 + 0x20]
	0x031CEDC0 CBZ X9, 0x31CEF98
	0x031CEDC4 LDR X0, [X9 + 0x280]
	0x031CEDC8 CBZ X0, 0x31CEF90
	0x031CEDCC LDR X19, [X8 + 0x30]
	0x031CEDD0 LDR W1, [X8 + 0x40]
	0x031CEDD4 LDR X2, [X22]
	0x031CEDD8 BL 0x301BCCC
	0x031CEDDC MOV X1, X0
	0x031CEDE0 CBZ X19, 0x31CEF94
	0x031CEDE4 LDR W10, [X19 + 0x1C]
	0x031CEDE8 LDR X8, [X19 + 0x10]
	0x031CEDEC LDR X9, [X20]
	0x031CEDF0 ADD W10, W10, 0x1
	0x031CEDF4 STR W10, [X19 + 0x1C]
	0x031CEDF8 CBZ X8, 0x31CEF8C
	0x031CEDFC LDRSW X10, [X19 + 0x18]
	0x031CEE00 LDR W11, [X8 + 0x18]
	0x031CEE04 CMP W10, W11
	0x031CEE08 B.CC 0x31CEE74
	0x031CEE0C LDR X8, [X9 + 0x20]
	0x031CEE10 LDR X8, [X8 + 0xC0]
	0x031CEE14 LDR X2, [X8 + 0x70]
	0x031CEE18 MOV X0, X19
	0x031CEE1C BL 0x301BF90
	0x031CEE20 B 0x31CEE9C
	0x031CEE24 LDR X9, [X8 + 0x20]
	0x031CEE28 CBZ X9, 0x31CEFA4
	0x031CEE2C LDR X0, [X9 + 0x280]
	0x031CEE30 CBZ X0, 0x31CEFA0
	0x031CEE34 LDR X19, [X8 + 0x38]
	0x031CEE38 LDR W1, [X8 + 0x40]
	0x031CEE3C LDR X2, [X22]
	0x031CEE40 BL 0x301BCCC
	0x031CEE44 MOV X1, X0
	0x031CEE48 CBZ X19, 0x31CEF9C
	0x031CEE4C LDR W10, [X19 + 0x1C]
	0x031CEE50 LDR X8, [X19 + 0x10]
	0x031CEE54 LDR X9, [X20]
	0x031CEE58 ADD W10, W10, 0x1
	0x031CEE5C STR W10, [X19 + 0x1C]
	0x031CEE60 CBZ X8, 0x31CEFA8
	0x031CEE64 LDRSW X10, [X19 + 0x18]
	0x031CEE68 LDR W11, [X8 + 0x18]
	0x031CEE6C CMP W10, W11
	0x031CEE70 B.CS 0x31CEE88
	0x031CEE74 ADD W9, W10, 0x1
	0x031CEE78 ADD X8, X8, X10, 0x3, LSL
	0x031CEE7C STR W9, [X19 + 0x18]
	0x031CEE80 STR X1, [X8 + 0x20]
	0x031CEE84 B 0x31CEE9C
	0x031CEE88 LDR X8, [X9 + 0x20]
	0x031CEE8C LDR X8, [X8 + 0xC0]
	0x031CEE90 LDR X2, [X8 + 0x70]
	0x031CEE94 MOV X0, X19
	0x031CEE98 BL 0x301BF90
	0x031CEE9C LDR X19, [X31 + 0x68]
	0x031CEEA0 LDR X8, [X19 + 0x20]
	0x031CEEA4 CBZ X8, 0x31CEF68
	0x031CEEA8 LDR X9, [X8 + 0x280]
	0x031CEEAC CBZ X9, 0x31CEF6C
	0x031CEEB0 LDR W10, [X8 + 0x370]
	0x031CEEB4 LDR V0, [X9 + 0x18]
	0x031CEEB8 LDR W11, [X8 + 0x374]
	0x031CEEBC MOVZ W9, 0x42C80000
	0x031CEEC0 SCVTF S1, W10
	0x031CEEC4 SCVTF S0, S0
	0x031CEEC8 FDIV S0, S1, S0
	0x031CEECC FMOV S1, W9
	0x031CEED0 ADD W9, W10, 0x1
	0x031CEED4 STR W9, [X8 + 0x370]
	0x031CEED8 ADD W9, W11, 0x1
	0x031CEEDC CMP W9, 0x3E8
	0x031CEEE0 FMUL S0, S0, S1
	0x031CEEE4 CSINC W9, W31, W11, EQ
	0x031CEEE8 STR S0, [X8 + 0x37C]
	0x031CEEEC STR W9, [X8 + 0x374]
	0x031CEEF0 B.EQ 0x31CEF50
	0x031CEEF4 LDR W8, [X19 + 0x40]
	0x031CEEF8 ADD W8, W8, 0x1
	0x031CEEFC STR W8, [X19 + 0x40]
	0x031CEF00 LDR X9, [X19 + 0x20]
	0x031CEF04 CBZ X9, 0x31CEF60
	0x031CEF08 LDR X9, [X9 + 0x280]
	0x031CEF0C CBZ X9, 0x31CEF64
	0x031CEF10 LDR W2, [X9 + 0x18]
	0x031CEF14 CMP W8, W2
	0x031CEF18 B.LT 0x31CEC30
	0x031CEF1C LDR W8, [X9 + 0x1C]
	0x031CEF20 CMP W2, 0x1
	0x031CEF24 ADD W8, W8, 0x1
	0x031CEF28 STP W31, W8, [X9 + 0x18]
	0x031CEF2C B.LT 0x31CEF44
	0x031CEF30 LDR X0, [X9 + 0x10]
	0x031CEF34 MOV W1, W31
	0x031CEF38 MOV X3, X31
	0x031CEF3C BL 0x339FA34
	0x031CEF40 LDR X19, [X31 + 0x68]
	0x031CEF44 MOV W8, W31
	0x031CEF48 STR W31, [X19 + 0x40]
	0x031CEF4C B 0x31CF288
	0x031CEF50 MOVZ W0, 0x1
	0x031CEF54 STR X31, [X19 + 0x18]
	0x031CEF58 STR W0, [X19 + 0x10]
	0x031CEF5C B 0x31CF244
	0x031CEF60 BL 0x1C16F20
	0x031CEF64 BL 0x1C16F20
	0x031CEF68 BL 0x1C16F20
	0x031CEF6C BL 0x1C16F20
	0x031CEF70 BL 0x1C16F20
	0x031CEF74 BL 0x1C16F20
	0x031CEF78 BL 0x1C16F20
	0x031CEF7C BL 0x1C16F20
	0x031CEF80 BL 0x1C16F20
	0x031CEF84 BL 0x1C16F20
	0x031CEF88 BL 0x1C16F20
	0x031CEF8C BL 0x1C16F20
	0x031CEF90 BL 0x1C16F20
	0x031CEF94 BL 0x1C16F20
	0x031CEF98 BL 0x1C16F20
	0x031CEF9C BL 0x1C16F20
	0x031CEFA0 BL 0x1C16F20
	0x031CEFA4 BL 0x1C16F20
	0x031CEFA8 BL 0x1C16F20
	0x031CEFAC B 0x31CF3D4
	0x031CEFB0 B 0x31CF3D4
	0x031CEFB4 B 0x31CF3D4
	0x031CEFB8 B 0x31CF3D4
	0x031CEFBC B 0x31CF3D4
	0x031CEFC0 B 0x31CF3D4
	0x031CEFC4 B 0x31CF3D4
	0x031CEFC8 B 0x31CF3D4
	0x031CEFCC B 0x31CF3D4
	0x031CEFD0 B 0x31CF3D4
	0x031CEFD4 B 0x31CF3D4
	0x031CEFD8 B 0x31CF3D4
	0x031CEFDC B 0x31CF3D4
	0x031CEFE0 B 0x31CF3D4
	0x031CEFE4 B 0x31CF3D4
	0x031CEFE8 B 0x31CF3D4
	0x031CEFEC B 0x31CF3D4
	0x031CEFF0 B 0x31CF3D4
	0x031CEFF4 B 0x31CF3D4
	0x031CEFF8 B 0x31CF3D4
	0x031CEFFC B 0x31CF3D4
	0x031CF000 ADD X0, X19, 0x40
	0x031CF004 MOV X1, X31
	0x031CF008 BL 0x337B6E0
	0x031CF00C LDR X8, [X31 + 0x68]
	0x031CF010 MOV X19, X0
	0x031CF014 ADD X0, X8, 0x28
	0x031CF018 MOV X1, X31
	0x031CF01C BL 0x337B6E0
	0x031CF020 ADRP X8, 0xF50000
	0x031CF024 LDR X8, [X8 + 0xD00]
	0x031CF028 ADRP X9, 0xF25000
	0x031CF02C LDR X9, [X9 + 0xEC8]
	0x031CF030 MOV X3, X0
	0x031CF034 LDR X0, [X8]
	0x031CF038 LDR X2, [X9]
	0x031CF03C MOV X1, X19
	0x031CF040 MOV X4, X31
	0x031CF044 BL 0x32277C4
	0x031CF048 CBZ X21, 0x31CF344
	0x031CF04C STR X0, [X21 + 0x368]
	0x031CF050 LDR X8, [X31 + 0x68]
	0x031CF054 LDR X9, [X8 + 0x20]
	0x031CF058 CBZ X9, 0x31CF340
	0x031CF05C MOVI V0.2D, 0x0
	0x031CF060 STR D0, [X9 + 0x370]
	0x031CF064 LDR X0, [X8 + 0x30]
	0x031CF068 CBZ X0, 0x31CF33C
	0x031CF06C ADRP X8, 0xF50000
	0x031CF070 LDR X8, [X8 + 0xC30]
	0x031CF074 LDR X1, [X8]
	0x031CF078 ADD X8, X31, 0x8
	0x031CF07C BL 0x301CB58
	0x031CF080 LDUR V0, [X31 + 0x8]
	0x031CF084 LDR X8, [X31 + 0x18]
	0x031CF088 LDR X19, [X31 + 0x68]
	0x031CF08C MOVN W9, 0x2
	0x031CF090 STR V0, [X31 + 0x2]
	0x031CF094 STR X8, [X31 + 0x30]
	0x031CF098 STR X8, [X19 + 0x58]
	0x031CF09C STUR V0, [X19 + 0x48]
	0x031CF0A0 STR W9, [X19 + 0x10]
	0x031CF0A4 ADRP X21, 0xF50000
	0x031CF0A8 ADRP X22, 0xF50000
	0x031CF0AC ADRP X23, 0xF2B000
	0x031CF0B0 LDR X21, [X21 + 0xC18]
	0x031CF0B4 LDR X22, [X22 + 0xCF0]
	0x031CF0B8 LDR X23, [X23 + 0x780]
	0x031CF0BC MOVZ W24, 0x42C80000
	0x031CF0C0 LDR X1, [X21]
	0x031CF0C4 ADD X0, X19, 0x48
	0x031CF0C8 BL 0x2BC4350
	0x031CF0CC MOV W8, W0
	0x031CF0D0 LDR X0, [X31 + 0x68]
	0x031CF0D4 TBZ X8, 0x0, 0x31CF26C
	0x031CF0D8 LDR X25, [X0 + 0x58]
	0x031CF0DC LDR X0, [X22]
	0x031CF0E0 BL 0x1C16F10
	0x031CF0E4 MOV X19, X0
	0x031CF0E8 BL 0x31CE3E8
	0x031CF0EC CBZ X25, 0x31CF320
	0x031CF0F0 LDR X8, [X31 + 0x68]
	0x031CF0F4 LDR X9, [X8 + 0x20]
	0x031CF0F8 CBZ X9, 0x31CF324
	0x031CF0FC CBZ X19, 0x31CF314
	0x031CF100 LDR V1, [X8 + 0x40]
	0x031CF104 LDR V0, [X9 + 0x124]
	0x031CF108 LDP S2, S3, [X25 + 0x18]
	0x031CF10C LDR V4, [X25 + 0x20]
	0x031CF110 SCVTF S1, S1
	0x031CF114 FMUL S0, S0, S1
	0x031CF118 FADD S0, S3, S0
	0x031CF11C STP S2, S0, [X19 + 0x18]
	0x031CF120 STR S4, [X19 + 0x20]
	0x031CF124 LDR X8, [X8 + 0x20]
	0x031CF128 CBZ X8, 0x31CF31C
	0x031CF12C LDR X0, [X8 + 0x68]
	0x031CF130 CBZ X0, 0x31CF310
	0x031CF134 LDR X1, [X23]
	0x031CF138 BL 0x21E52E4
	0x031CF13C CBZ X0, 0x31CF328
	0x031CF140 ADD X8, X31, 0x20
	0x031CF144 MOV X1, X31
	0x031CF148 BL 0x3C12A28
	0x031CF14C LDR V0, [X31 + 0x2]
	0x031CF150 LDR X8, [X31 + 0x30]
	0x031CF154 STR V0, [X31 + 0x5]
	0x031CF158 STR X8, [X31 + 0x60]
	0x031CF15C LDP S0, S1, [X19 + 0x18]
	0x031CF160 LDR V2, [X19 + 0x20]
	0x031CF164 ADD X0, X31, 0x50
	0x031CF168 MOV X1, X31
	0x031CF16C BL 0x3C0A198
	0x031CF170 TBZ X0, 0x0, 0x31CF1D8
	0x031CF174 LDR X8, [X31 + 0x68]
	0x031CF178 LDR X8, [X8 + 0x20]
	0x031CF17C CBZ X8, 0x31CF330
	0x031CF180 LDR X0, [X8 + 0x280]
	0x031CF184 CBZ X0, 0x31CF334
	0x031CF188 LDR W10, [X0 + 0x1C]
	0x031CF18C LDR X8, [X0 + 0x10]
	0x031CF190 LDR X9, [X20]
	0x031CF194 ADD W10, W10, 0x1
	0x031CF198 STR W10, [X0 + 0x1C]
	0x031CF19C CBZ X8, 0x31CF32C
	0x031CF1A0 LDRSW X10, [X0 + 0x18]
	0x031CF1A4 LDR W11, [X8 + 0x18]
	0x031CF1A8 CMP W10, W11
	0x031CF1AC B.CS 0x31CF1C4
	0x031CF1B0 ADD W9, W10, 0x1
	0x031CF1B4 ADD X8, X8, X10, 0x3, LSL
	0x031CF1B8 STR W9, [X0 + 0x18]
	0x031CF1BC STR X19, [X8 + 0x20]
	0x031CF1C0 B 0x31CF1D8
	0x031CF1C4 LDR X8, [X9 + 0x20]
	0x031CF1C8 LDR X8, [X8 + 0xC0]
	0x031CF1CC LDR X2, [X8 + 0x70]
	0x031CF1D0 MOV X1, X19
	0x031CF1D4 BL 0x301BF90
	0x031CF1D8 LDR X19, [X31 + 0x68]
	0x031CF1DC LDR X8, [X19 + 0x20]
	0x031CF1E0 CBZ X8, 0x31CF318
	0x031CF1E4 LDRB W9, [X8 + 0x33A]
	0x031CF1E8 CBNZ W9, 0x31CF0C0
	0x031CF1EC LDR X9, [X8 + 0x280]
	0x031CF1F0 CBZ X9, 0x31CF338
	0x031CF1F4 LDR W10, [X8 + 0x370]
	0x031CF1F8 LDR V0, [X9 + 0x18]
	0x031CF1FC LDR W9, [X8 + 0x374]
	0x031CF200 FMOV S1, W24
	0x031CF204 SCVTF S2, W10
	0x031CF208 SCVTF S0, S0
	0x031CF20C ADD W11, W9, 0x1
	0x031CF210 FDIV S0, S2, S0
	0x031CF214 CMP W11, 0x3E8
	0x031CF218 ADD W10, W10, 0x1
	0x031CF21C FMUL S0, S0, S1
	0x031CF220 CSINC W9, W31, W9, EQ

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x120F000
	014 Move X27, 0xF27000
	015 Move X26, 0xF27000
	016 Move X21, 0xF52000
	017 Move X28, 0xF52000
	018 Move X22, 0xF52000
	019 Move X25, 0xF52000
	020 Move X24, 0xF52000
	021 Move X23, 0xF2C000
	022 Move X29, 0xF2C000
	023 Move X27, [X27+464]
	024 Move X26, [X26+448]
	025 Move X21, [X21+3128]
	026 Move X28, [X28+3136]
	027 Move X22, [X22+3144]
	028 Move X25, [X25+3072]
	029 Move X24, [X24+3080]
	030 Move X23, [X23+1352]
	031 Move X29, [X29+1360]
	032 Move W8, [X20+12]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {100}
	038 Move X0, 0xF52000
	039 Move X0, [X0+3152]
	040 Call 0x1C17CF4
	041 Move X0, 0xF2C000
	042 Move X0, [X0+1360]
	043 Call 0x1C17CF4
	044 Move X0, 0xF52000
	045 Move X0, [X0+3160]
	046 Call 0x1C17CF4
	047 Move X0, 0xF52000
	048 Move X0, [X0+3136]
	049 Call 0x1C17CF4
	050 Move X0, 0xF52000
	051 Move X0, [X0+3168]
	052 Call 0x1C17CF4
	053 Move X0, 0xF52000
	054 Move X0, [X0+3176]
	055 Call 0x1C17CF4
	056 Move X0, 0xF52000
	057 Move X0, [X0+1464]
	058 Call 0x1C17CF4
	059 Move X0, 0xF27000
	060 Move X0, [X0+448]
	061 Call 0x1C17CF4
	062 Move X0, 0xF52000
	063 Move X0, [X0+3080]
	064 Call 0x1C17CF4
	065 Move X0, 0xF52000
	066 Move X0, [X0+3184]
	067 Call 0x1C17CF4
	068 Move X0, 0xF52000
	069 Move X0, [X0+3072]
	070 Call 0x1C17CF4
	071 Move X0, 0xF52000
	072 Move X0, [X0+3192]
	073 Call 0x1C17CF4
	074 Move X0, 0xF52000
	075 Move X0, [X0+3144]
	076 Call 0x1C17CF4
	077 Move X0, 0xF52000
	078 Move X0, [X0+3128]
	079 Call 0x1C17CF4
	080 Move X0, 0xF2A000
	081 Move X0, [X0+960]
	082 Call 0x1C17CF4
	083 Move X0, 0xF2C000
	084 Move X0, [X0+1352]
	085 Call 0x1C17CF4
	086 Move X0, 0xF52000
	087 Move X0, [X0+3200]
	088 Call 0x1C17CF4
	089 Move X0, 0xF52000
	090 Move X0, [X0+3208]
	091 Call 0x1C17CF4
	092 Move X0, 0xF52000
	093 Move X0, [X0+3216]
	094 Call 0x1C17CF4
	095 Move X0, 0xF27000
	096 Move X0, [X0+464]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X20+12], W8
	100 Move X0, [X27]
	101 Call 0x1C17F10
	102 Move X1, [X26]
	103 Move X20, X0
	104 Call List`1<Object>..ctor, X0
	105 Move [X19+88], X20
	106 Move X0, [X27]
	107 Call 0x1C17F10
	108 Move X1, [X26]
	109 Move X20, X0
	110 Call List`1<Object>..ctor, X0
	111 Move X8, -40767488
	112 NotImplemented "Instruction MOVI not yet implemented."
	113 Move [X19+236], D0
	114 Move V0, [X8+244]
	115 Move X8, -40759296
	116 Move W9, 0x2710
	117 Move [X19+156], W9
	118 Move [X19+116], V0
	119 Move V0, [X8+168]
	120 Move X9, -40763392
	121 Move W8, 0x40600000
	122 Move [X19+204], W8
	123 Move [X19+132], D0
	124 Move V0, [X9+3392]
	125 Move [X19+212], W8
	126 Move X8, -40763392
	127 Move W27, 0xCCCD
	128 Move [X19+220], D0
	129 Move V0, [X8+3400]
	130 Move W8, 0xD70A
	131 Move W10, 2
	132 Move W26, 1
	133 NotImplemented "Instruction MOVK not yet implemented."
	134 NotImplemented "Instruction MOVK not yet implemented."
	135 Move [X19+96], X20
	136 Move [X19+180], W10
	137 Move [X19+216], W26
	138 Move [X19+228], W27
	139 Move [X19+232], W26
	140 Move [X19+252], W27
	141 Move [X19+265], W26
	142 Move [X19+272], W8
	143 Move [X19+288], D0
	144 Move X0, [X21]
	145 Call 0x1C17F10
	146 Move X1, [X28]
	147 Move X21, X28
	148 Move X20, X0
	149 Call List`1<Object>..ctor, X0
	150 Move W0, 1
	151 Move X1, X31
	152 Move [X19+304], X20
	153 Call LayerMask.op_Implicit, X0
	154 Add X8, X19, 411
	155 Move W9, 257
	156 Move [X19+312], W0
	157 Move [X19+320], W26
	158 Move [X19+357], W26
	159 Move [X19+392], W27
	160 NotImplemented "Instruction STRH not yet implemented."
	161 Move X28, 0xF2A000
	162 Move X28, [X28+960]
	163 Move X0, [X28]
	164 Call 0x1C17F10
	165 Move X27, 0xF52000
	166 Move X27, [X27+1464]
	167 Move X20, X0
	168 Move X1, [X27]
	169 Call List`1<Vector3>..ctor, X0
	170 Move [X19+440], X20
	171 Move X0, [X22]
	172 Call 0x1C17F10
	173 Move X27, 0xF52000
	174 Move X27, [X27+3152]
	175 Move X20, X0
	176 Move X1, [X27]
	177 Call List`1<Object>..ctor, X0
	178 Move [X19+488], X20
	179 Move X0, [X22]
	180 Call 0x1C17F10
	181 Move X1, [X27]
	182 Move X20, X0
	183 Call List`1<Object>..ctor, X0
	184 Move [X19+496], X20
	185 Move X0, [X25]
	186 Call 0x1C17F10
	187 Move X1, [X24]
	188 Move X20, X0
	189 Call List`1<Object>..ctor, X0
	190 Move [X19+504], X20
	191 Move X0, [X25]
	192 Call 0x1C17F10
	193 Move X1, [X24]
	194 Move X20, X0
	195 Call List`1<Object>..ctor, X0
	196 Move [X19+512], X20
	197 Move X0, [X23]
	198 Call 0x1C17F10
	199 Move X1, [X29]
	200 Move X20, X0
	201 Call List`1<Object>..ctor, X0
	202 Move [X19+520], X20
	203 Move X0, [X23]
	204 Call 0x1C17F10
	205 Move X1, [X29]
	206 Move X20, X0
	207 Call List`1<Object>..ctor, X0
	208 Move [X19+528], X20
	209 Move X0, [X23]
	210 Call 0x1C17F10
	211 Move X1, [X29]
	212 Move X20, X0
	213 Call List`1<Object>..ctor, X0
	214 Move [X19+536], X20
	215 Move X0, [X23]
	216 Call 0x1C17F10
	217 Move X1, [X29]
	218 Move X20, X0
	219 Call List`1<Object>..ctor, X0
	220 Move [X19+544], X20
	221 Move X8, 0xF52000
	222 Move X8, [X8+3216]
	223 Move X0, [X8]
	224 Call 0x1C17F10
	225 Move X8, 0xF52000
	226 Move X8, [X8+3184]
	227 Move X20, X0
	228 Move X1, [X8]
	229 Call List`1<Object>..ctor, X0
	230 Move [X19+616], X20
	231 Move X0, [X23]
	232 Call 0x1C17F10
	233 Move X1, [X29]
	234 Move X20, X0
	235 Call List`1<Object>..ctor, X0
	236 Move [X19+624], X20
	237 Move X8, 0xF52000
	238 Move X8, [X8+3128]
	239 Move X0, [X8]
	240 Call 0x1C17F10
	241 Move X1, [X21]
	242 Move X20, X0
	243 Call List`1<Object>..ctor, X0
	244 Move [X19+632], X20
	245 Move X0, [X25]
	246 Call 0x1C17F10
	247 Move X1, [X24]
	248 Move X20, X0
	249 Call List`1<Object>..ctor, X0
	250 Move [X19+640], X20
	251 Move X0, [X25]
	252 Call 0x1C17F10
	253 Move X1, [X24]
	254 Move X20, X0
	255 Call List`1<Object>..ctor, X0
	256 Move [X19+648], X20
	257 Move X0, [X25]
	258 Call 0x1C17F10
	259 Move X1, [X24]
	260 Move X20, X0
	261 Call List`1<Object>..ctor, X0
	262 Move [X19+656], X20
	263 Move X0, [X25]
	264 Call 0x1C17F10
	265 Move X1, [X24]
	266 Move X20, X0
	267 Call List`1<Object>..ctor, X0
	268 Move [X19+664], X20
	269 Move X0, [X25]
	270 Call 0x1C17F10
	271 Move X1, [X24]
	272 Move X20, X0
	273 Call List`1<Object>..ctor, X0
	274 Move [X19+672], X20
	275 Move X0, [X25]
	276 Call 0x1C17F10
	277 Move X1, [X24]
	278 Move X20, X0
	279 Call List`1<Object>..ctor, X0
	280 Move [X19+680], X20
	281 Move X0, [X25]
	282 Call 0x1C17F10
	283 Move X1, [X24]
	284 Move X20, X0
	285 Call List`1<Object>..ctor, X0
	286 Move [X19+688], X20
	287 Move X0, [X25]
	288 Call 0x1C17F10
	289 Move X1, [X24]
	290 Move X20, X0
	291 Call List`1<Object>..ctor, X0
	292 Move [X19+696], X20
	293 Move X0, [X25]
	294 Call 0x1C17F10
	295 Move X1, [X24]
	296 Move X20, X0
	297 Call List`1<Object>..ctor, X0
	298 Move [X19+704], X20
	299 Move X0, [X25]
	300 Call 0x1C17F10
	301 Move X1, [X24]
	302 Move X20, X0
	303 Call List`1<Object>..ctor, X0
	304 Move [X19+712], X20
	305 Move X0, [X25]
	306 Call 0x1C17F10
	307 Move X1, [X24]
	308 Move X20, X0
	309 Call List`1<Object>..ctor, X0
	310 Move [X19+720], X20
	311 Move X0, [X25]
	312 Call 0x1C17F10
	313 Move X1, [X24]
	314 Move X20, X0
	315 Call List`1<Object>..ctor, X0
	316 Move [X19+728], X20
	317 Move X0, [X25]
	318 Call 0x1C17F10
	319 Move X1, [X24]
	320 Move X20, X0
	321 Call List`1<Object>..ctor, X0
	322 Move [X19+736], X20
	323 Move X0, [X25]
	324 Call 0x1C17F10
	325 Move X1, [X24]
	326 Move X20, X0
	327 Call List`1<Object>..ctor, X0
	328 Move [X19+744], X20
	329 Move X0, [X23]
	330 Call 0x1C17F10
	331 Move X1, [X29]
	332 Move X20, X0
	333 Call List`1<Object>..ctor, X0
	334 Move [X19+752], X20
	335 Move X0, [X28]
	336 Call 0x1C17F10
	337 Move X23, 0xF51000
	338 Move X23, [X23+1464]
	339 Move X20, X0
	340 Move X1, [X23]
	341 Call List`1<Vector3>..ctor, X0
	342 Move [X19+760], X20
	343 Move X22, 0xF51000
	344 Move X22, [X22+3208]
	345 Move X0, [X22]
	346 Call 0x1C17F10
	347 Move X21, 0xF51000
	348 Move X21, [X21+3160]
	349 Move X20, X0
	350 Move X1, [X21]
	351 Call List`1<VolumeParameters>..ctor, X0
	352 Move [X19+768], X20
	353 Move X0, [X22]
	354 Call 0x1C17F10
	355 Move X1, [X21]
	356 Move X20, X0
	357 Call List`1<VolumeParameters>..ctor, X0
	358 Move [X19+776], X20
	359 Move X8, 0xF51000
	360 Move X8, [X8+3200]
	361 Move X0, [X8]
	362 Call 0x1C17F10
	363 Move X8, 0xF51000
	364 Move X8, [X8+3168]
	365 Move X20, X0
	366 Move X1, [X8]
	367 Call List`1<Object>..ctor, X0
	368 Move [X19+784], X20
	369 Move X8, 0xF51000
	370 Move X8, [X8+3192]
	371 Move X0, [X8]
	372 Call 0x1C17F10
	373 Move X8, 0xF51000
	374 Move X8, [X8+3176]
	375 Move X20, X0
	376 Move X1, [X8]
	377 Call List`1<LayerMask>..ctor, X0
	378 Move [X19+792], X20
	379 Move X0, [X28]
	380 Call 0x1C17F10
	381 Move X1, [X23]
	382 Move X20, X0
	383 Call List`1<Vector3>..ctor, X0
	384 Move [X19+800], X20
	385 Move [X19+824], W26
	386 Move [X19+901], W26
	387 Move X0, X19
	388 Move X20, [X31+80]
	389 Move X19, [X31+88]
	390 Move X22, [X31+64]
	391 Move X21, [X31+72]
	392 Move X24, [X31+48]
	393 Move X23, [X31+56]
	394 Move X26, [X31+32]
	395 Move X25, [X31+40]
	396 Move X28, [X31+16]
	397 Move X27, [X31+24]
	398 Move X1, X31
	399 Move X29, [X31+96]
	400 Move X30, [X31+104]
	401 Call MonoBehaviour..ctor, X0
	402 Return 

Method: System.Void .cctor()

Disassembly:
	0x031CF224 STR W10, [X8 + 0x370]
	0x031CF228 STR S0, [X8 + 0x37C]
	0x031CF22C STR W9, [X8 + 0x374]
	0x031CF230 B.NE 0x31CF0C0
	0x031CF234 MOVZ W8, 0x2
	0x031CF238 STR X31, [X19 + 0x18]
	0x031CF23C STR W8, [X19 + 0x10]
	0x031CF240 MOVZ W0, 0x1
	0x031CF244 LDP X20, X19, [X31 + 0xE0]
	0x031CF248 LDP X22, X21, [X31 + 0xD0]
	0x031CF24C LDP X24, X23, [X31 + 0xC0]
	0x031CF250 LDP X30, X25, [X31 + 0xB0]
	0x031CF254 LDP D9, D8, [X31 + 0xA0]
	0x031CF258 LDP D11, D10, [X31 + 0x90]
	0x031CF25C LDP D13, D12, [X31 + 0x80]
	0x031CF260 LDP D15, D14, [X31 + 0x70]
	0x031CF264 ADD X31, X31, 0xF0
	0x031CF268 RET
	0x031CF26C BL 0x31CF434

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x120E000
	005 Move X20, 0xF51000
	006 Move W8, [X19+13]
	007 Move X20, [X20+3224]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF51000
	013 Move X0, [X0+3224]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+13], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 1
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

