Type: MagicLightProbes.DublicateVertical/<ExecutePass>d__0

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x031CF908 LDRB W10, [X8 + 0x184]
	0x031CF90C MOVI V0.2D, 0x0
	0x031CF910 LDR X9, [X9]
	0x031CF914 STR D0, [X8 + 0x370]
	0x031CF918 STR X9, [X8 + 0x368]
	0x031CF91C CBZ W10, 0x31CF980
	0x031CF920 LDR X9, [X8 + 0x280]
	0x031CF924 CBZ X9, 0x31CFF00
	0x031CF928 LDP W2, W10, [X9 + 0x18]
	0x031CF92C ADD W10, W10, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x031CF938 B.LT 0x31CF954
	0x031CF93C LDR X0, [X9 + 0x10]
	0x031CF940 MOV W1, W31
	0x031CF944 MOV X3, X31
	0x031CF948 BL 0x339FA34
	0x031CF94C LDR X8, [X19 + 0x20]
	0x031CF950 CBZ X8, 0x31CFF00

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <ExecutePass>d__0.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x031CF954 LDR X8, [X8 + 0x2E8]
	0x031CF958 CBZ X8, 0x31CFF00
	0x031CF95C LDP W2, W9, [X8 + 0x18]
	0x031CF960 ADD W9, W9, 0x1
	0x031CF964 CMP W2, 0x1
	0x031CF968 STP W31, W9, [X8 + 0x18]
	0x031CF96C B.LT 0x31CF980
	0x031CF970 LDR X0, [X8 + 0x10]
	0x031CF974 MOV W1, W31
	0x031CF978 MOV X3, X31
	0x031CF97C BL 0x339FA34
	0x031CF980 LDR X9, [X19 + 0x28]
	0x031CF984 CBZ X9, 0x31CFF00
	0x031CF988 LDR X8, [X9 + 0x90]
	0x031CF98C CBZ X8, 0x31CFF00
	0x031CF990 LDR W10, [X8 + 0x18]
	0x031CF994 CMP W10, 0x1
	0x031CF998 B.LT 0x31CFEBC
	0x031CF99C LDR X9, [X9 + 0x98]
	0x031CF9A0 CBZ X9, 0x31CFF00
	0x031CF9A4 LDR W10, [X9 + 0x1C]
	0x031CF9A8 ADRP X23, 0xF4D000
	0x031CF9AC LDR X23, [X23 + 0x4F0]
	0x031CF9B0 ADD W10, W10, 0x1
	0x031CF9B4 STP W31, W10, [X9 + 0x18]
	0x031CF9B8 LDR X0, [X23]
	0x031CF9BC LDR W21, [X8 + 0x18]
	0x031CF9C0 BL 0x1C16F10
	0x031CF9C4 MOVZ W2, 0xC
	0x031CF9C8 MOV W1, W21
	0x031CF9CC MOV W3, W31
	0x031CF9D0 MOV X4, X31
	0x031CF9D4 MOV X20, X0
	0x031CF9D8 BL 0x3C3AC18
	0x031CF9DC LDR X8, [X19 + 0x28]
	0x031CF9E0 CBZ X8, 0x31CFF00
	0x031CF9E4 LDR X8, [X8 + 0x90]
	0x031CF9E8 CBZ X8, 0x31CFF00
	0x031CF9EC LDR X0, [X23]
	0x031CF9F0 LDR W22, [X8 + 0x18]
	0x031CF9F4 BL 0x1C16F10
	0x031CF9F8 MOVZ W2, 0xC
	0x031CF9FC MOV W1, W22
	0x031CFA00 MOV W3, W31
	0x031CFA04 MOV X4, X31
	0x031CFA08 MOV X21, X0
	0x031CFA0C BL 0x3C3AC18
	0x031CFA10 LDR X8, [X19 + 0x28]
	0x031CFA14 CBZ X8, 0x31CFF00
	0x031CFA18 LDR X0, [X8 + 0x90]
	0x031CFA1C CBZ X0, 0x31CFF00
	0x031CFA20 ADRP X22, 0xF50000
	0x031CFA24 LDR X22, [X22 + 0x5B0]
	0x031CFA28 LDR X1, [X22]
	0x031CFA2C BL 0x30CE118
	0x031CFA30 CBZ X20, 0x31CFF00
	0x031CFA34 MOV X1, X0
	0x031CFA38 MOV X0, X20
	0x031CFA3C MOV X2, X31
	0x031CFA40 BL 0x3C3ACC4
	0x031CFA44 LDR X8, [X19 + 0x28]
	0x031CFA48 CBZ X8, 0x31CFF00
	0x031CFA4C LDR X0, [X8 + 0x90]
	0x031CFA50 CBZ X0, 0x31CFF00
	0x031CFA54 LDR X1, [X22]
	0x031CFA58 BL 0x30CE118
	0x031CFA5C CBZ X21, 0x31CFF00
	0x031CFA60 MOV X1, X0
	0x031CFA64 MOV X0, X21
	0x031CFA68 MOV X2, X31
	0x031CFA6C BL 0x3C3ACC4
	0x031CFA70 LDR X8, [X19 + 0x20]
	0x031CFA74 CBZ X8, 0x31CFF00
	0x031CFA78 LDR X22, [X8 + 0x1C0]
	0x031CFA7C CBZ X22, 0x31CFF00
	0x031CFA80 ADRP X23, 0xF50000
	0x031CFA84 LDR X23, [X23 + 0xD38]
	0x031CFA88 MOV X0, X22
	0x031CFA8C MOV X2, X31
	0x031CFA90 LDR X1, [X23]
	0x031CFA94 BL 0x3C3B40C
	0x031CFA98 ADRP X8, 0xF50000
	0x031CFA9C LDR X8, [X8 + 0xD28]
	0x031CFAA0 MOV W1, W0
	0x031CFAA4 MOV X0, X22
	0x031CFAA8 MOV X3, X20
	0x031CFAAC LDR X2, [X8]
	0x031CFAB0 MOV X4, X31
	0x031CFAB4 BL 0x3C3B770
	0x031CFAB8 LDR X8, [X19 + 0x20]
	0x031CFABC CBZ X8, 0x31CFF00
	0x031CFAC0 LDR X22, [X8 + 0x1C0]
	0x031CFAC4 CBZ X22, 0x31CFF00
	0x031CFAC8 LDR X1, [X23]
	0x031CFACC MOV X0, X22
	0x031CFAD0 MOV X2, X31
	0x031CFAD4 BL 0x3C3B40C
	0x031CFAD8 ADRP X8, 0xF50000
	0x031CFADC LDR X8, [X8 + 0xD20]
	0x031CFAE0 MOV W1, W0
	0x031CFAE4 MOV X0, X22
	0x031CFAE8 MOV X3, X21
	0x031CFAEC LDR X2, [X8]
	0x031CFAF0 MOV X4, X31
	0x031CFAF4 BL 0x3C3B770
	0x031CFAF8 LDR X8, [X19 + 0x20]
	0x031CFAFC CBZ X8, 0x31CFF00
	0x031CFB00 LDR X0, [X8 + 0x1C0]
	0x031CFB04 CBZ X0, 0x31CFF00
	0x031CFB08 LDR V0, [X8 + 0x104]
	0x031CFB0C ADRP X8, 0xF50000
	0x031CFB10 LDR X8, [X8 + 0xD40]
	0x031CFB14 MOV X2, X31
	0x031CFB18 LDR X1, [X8]
	0x031CFB1C BL 0x3C3B710
	0x031CFB20 LDR X8, [X19 + 0x20]
	0x031CFB24 CBZ X8, 0x31CFF00
	0x031CFB28 LDR X22, [X8 + 0x1C0]
	0x031CFB2C CBZ X22, 0x31CFF00
	0x031CFB30 LDR X1, [X23]
	0x031CFB34 MOV X0, X22
	0x031CFB38 MOV X2, X31
	0x031CFB3C BL 0x3C3B40C
	0x031CFB40 MOV W1, W0
	0x031CFB44 MOVZ W2, 0x100
	0x031CFB48 MOVZ W3, 0x1
	0x031CFB4C MOVZ W4, 0x1
	0x031CFB50 MOV X0, X22
	0x031CFB54 MOV X5, X31
	0x031CFB58 BL 0x3C3B61C
	0x031CFB5C MOV X0, X20
	0x031CFB60 MOV X1, X31
	0x031CFB64 BL 0x3C3AC4C
	0x031CFB68 ADRP X8, 0xF26000
	0x031CFB6C LDR X8, [X8 + 0x9B0]
	0x031CFB70 MOV W1, W0
	0x031CFB74 LDR X8, [X8]
	0x031CFB78 MOV X0, X8
	0x031CFB7C BL 0x1C16D6C
	0x031CFB80 MOV X1, X0
	0x031CFB84 STR X0, [X19 + 0x38]
	0x031CFB88 MOV X0, X21
	0x031CFB8C MOV X2, X31
	0x031CFB90 BL 0x3C3B170
	0x031CFB94 MOV X0, X20
	0x031CFB98 MOV X1, X31
	0x031CFB9C BL 0x3C3A930
	0x031CFBA0 MOV X0, X21
	0x031CFBA4 MOV X1, X31
	0x031CFBA8 BL 0x3C3A930
	0x031CFBAC ADRP X8, 0xF50000
	0x031CFBB0 LDR X8, [X8 + 0xC00]
	0x031CFBB4 LDR X0, [X8]
	0x031CFBB8 BL 0x1C16F10
	0x031CFBBC ADRP X8, 0xF50000
	0x031CFBC0 LDR X8, [X8 + 0xC08]
	0x031CFBC4 MOV X20, X0
	0x031CFBC8 LDR X1, [X8]
	0x031CFBCC BL 0x301B7C4
	0x031CFBD0 LDR X8, [X19 + 0x20]
	0x031CFBD4 STR X20, [X19 + 0x40]
	0x031CFBD8 CBZ X8, 0x31CFF00
	0x031CFBDC CBZ X20, 0x31CFF00
	0x031CFBE0 LDR X1, [X8 + 0x2D8]
	0x031CFBE4 ADRP X8, 0xF50000
	0x031CFBE8 LDR X8, [X8 + 0xCD0]
	0x031CFBEC MOV X0, X20
	0x031CFBF0 LDR X2, [X8]
	0x031CFBF4 BL 0x301C194
	0x031CFBF8 MOV W8, W31
	0x031CFBFC STR W31, [X19 + 0x48]
	0x031CFC00 B 0x31CFE74
	0x031CFC04 MOVN W8, 0x0
	0x031CFC08 STR W8, [X19 + 0x10]
	0x031CFC0C B 0x31CFE68
	0x031CFC10 MOV W0, W31
	0x031CFC14 B 0x31CFEDC
	0x031CFC18 CMP W8, W10
	0x031CFC1C B.CS 0x31CFF04
	0x031CFC20 SXTW X8, W8
	0x031CFC24 MOVZ W10, 0xC
	0x031CFC28 ADRP X20, 0x1209000
	0x031CFC2C MADD X8, X8, X10, X9
	0x031CFC30 LDRB W9, [X20 + 0x783]
	0x031CFC34 LDR V9, [X8 + 0x20]
	0x031CFC38 LDUR V8, [X8 + 0x24]
	0x031CFC3C CBNZ W9, 0x31CFC54
	0x031CFC40 ADRP X0, 0xF24000
	0x031CFC44 LDR X0, [X0 + 0x5A0]
	0x031CFC48 BL 0x1C16CF4
	0x031CFC4C MOVZ W8, 0x1
	0x031CFC50 STRB W8, [X20 + 0x783]
	0x031CFC54 ADRP X8, 0xF24000
	0x031CFC58 LDR X8, [X8 + 0x5A0]
	0x031CFC5C LDR X8, [X8]
	0x031CFC60 LDR X8, [X8 + 0xB8]
	0x031CFC64 LDR V0, [X8]
	0x031CFC68 LDUR V1, [X8 + 0x4]
	0x031CFC6C ADRP X8, 0xFFFFFFFFFD91A000
	0x031CFC70 LDR V2, [X8 + 0xF20]
	0x031CFC74 FSUB S0, S9, S0
	0x031CFC78 FSUB V1.2S, V8.2S, V1.2S
	0x031CFC7C FMUL S0, S0, S0
	0x00000000 INVALID
	0x031CFC84 FADD S0, S0, S1
	0x031CFC88 MOV S1, V1.S[1]
	0x031CFC8C FADD S0, S1, S0
	0x031CFC90 FCMP S0, S2
	0x031CFC94 B.MI 0x31CFE68
	0x031CFC98 LDRB W8, [X19 + 0x30]
	0x031CFC9C CBNZ W8, 0x31CFD70
	0x031CFCA0 LDR X0, [X19 + 0x40]
	0x031CFCA4 CBZ X0, 0x31CFF00
	0x031CFCA8 ADRP X22, 0xF50000
	0x031CFCAC LDR X22, [X22 + 0xCE8]
	0x031CFCB0 LDR W1, [X19 + 0x48]
	0x031CFCB4 LDR X2, [X22]
	0x031CFCB8 BL 0x301BCCC
	0x031CFCBC LDR X8, [X19 + 0x38]
	0x031CFCC0 CBZ X8, 0x31CFF00
	0x031CFCC4 LDRSW X9, [X19 + 0x48]
	0x031CFCC8 LDR W10, [X8 + 0x18]
	0x031CFCCC CMP W9, W10
	0x031CFCD0 B.CS 0x31CFF04
	0x031CFCD4 CBZ X0, 0x31CFF00
	0x031CFCD8 MOVZ W10, 0xC
	0x031CFCDC MADD X8, X9, X10, X8
	0x031CFCE0 LDR V0, [X8 + 0x20]
	0x031CFCE4 LDR V1, [X8 + 0x28]
	0x031CFCE8 STR D0, [X0 + 0x18]
	0x031CFCEC STR S1, [X0 + 0x20]
	0x031CFCF0 LDR X8, [X19 + 0x20]
	0x031CFCF4 CBZ X8, 0x31CFF00
	0x031CFCF8 LDR X0, [X19 + 0x40]
	0x031CFCFC CBZ X0, 0x31CFF00
	0x031CFD00 LDR W1, [X19 + 0x48]
	0x031CFD04 LDR X2, [X22]
	0x031CFD08 LDR X20, [X8 + 0x280]
	0x031CFD0C BL 0x301BCCC
	0x031CFD10 CBZ X20, 0x31CFF00
	0x031CFD14 ADRP X9, 0xF50000
	0x031CFD18 LDR X9, [X9 + 0xC28]
	0x031CFD1C LDR W10, [X20 + 0x1C]
	0x031CFD20 LDR X8, [X20 + 0x10]
	0x031CFD24 LDR X9, [X9]
	0x031CFD28 ADD W10, W10, 0x1
	0x031CFD2C STR W10, [X20 + 0x1C]
	0x031CFD30 CBZ X8, 0x31CFF00
	0x031CFD34 LDRSW X10, [X20 + 0x18]
	0x031CFD38 LDR W11, [X8 + 0x18]
	0x031CFD3C MOV X1, X0
	0x031CFD40 CMP W10, W11
	0x031CFD44 B.CS 0x31CFD5C
	0x031CFD48 ADD W9, W10, 0x1
	0x031CFD4C ADD X8, X8, X10, 0x3, LSL
	0x031CFD50 STR W9, [X20 + 0x18]
	0x031CFD54 STR X1, [X8 + 0x20]
	0x031CFD58 B 0x31CFD70
	0x031CFD5C LDR X8, [X9 + 0x20]
	0x031CFD60 MOV X0, X20
	0x031CFD64 LDR X8, [X8 + 0xC0]
	0x031CFD68 LDR X2, [X8 + 0x70]
	0x031CFD6C BL 0x301BF90
	0x031CFD70 LDR X10, [X19 + 0x28]
	0x031CFD74 CBZ X10, 0x31CFF00
	0x031CFD78 LDR X8, [X19 + 0x38]
	0x031CFD7C CBZ X8, 0x31CFF00
	0x031CFD80 LDRSW X9, [X19 + 0x48]
	0x031CFD84 LDR W11, [X8 + 0x18]
	0x031CFD88 CMP W9, W11
	0x031CFD8C B.CS 0x31CFF04
	0x031CFD90 LDR X0, [X10 + 0x98]
	0x031CFD94 CBZ X0, 0x31CFF00
	0x031CFD98 ADRP X11, 0xF28000
	0x031CFD9C LDR X11, [X11 + 0x3B8]
	0x031CFDA0 MOVZ W12, 0xC
	0x031CFDA4 LDR W13, [X0 + 0x1C]
	0x031CFDA8 NOP
	0x031CFDAC MADD X8, X9, X12, X8
	0x031CFDB0 LDR X10, [X0 + 0x10]
	0x031CFDB4 LDP S0, S1, [X8 + 0x20]
	0x031CFDB8 LDR V2, [X8 + 0x28]
	0x031CFDBC LDR X8, [X11]
	0x031CFDC0 ADD W9, W13, 0x1
	0x031CFDC4 STR W9, [X0 + 0x1C]
	0x031CFDC8 CBZ X10, 0x31CFF00
	0x031CFDCC LDRSW X9, [X0 + 0x18]
	0x031CFDD0 LDR W11, [X10 + 0x18]
	0x031CFDD4 CMP W9, W11
	0x031CFDD8 B.CS 0x31CFDFC
	0x031CFDDC ADD W8, W9, 0x1
	0x031CFDE0 MOVZ W11, 0xC
	0x031CFDE4 STR W8, [X0 + 0x18]
	0x031CFDE8 NOP
	0x031CFDEC MADD X8, X9, X11, X10
	0x031CFDF0 STP S0, S1, [X8 + 0x20]
	0x031CFDF4 STR S2, [X8 + 0x28]
	0x031CFDF8 B 0x31CFE0C
	0x031CFDFC LDR X8, [X8 + 0x20]
	0x031CFE00 LDR X8, [X8 + 0xC0]
	0x031CFE04 LDR X1, [X8 + 0x70]
	0x031CFE08 BL 0x30CC1B4
	0x031CFE0C LDR X8, [X19 + 0x20]
	0x031CFE10 CBZ X8, 0x31CFF00
	0x031CFE14 LDRB W9, [X8 + 0x33A]
	0x031CFE18 CBNZ W9, 0x31CFE68
	0x031CFE1C LDR X9, [X21]
	0x031CFE20 CBZ X9, 0x31CFF00
	0x031CFE24 LDR W10, [X8 + 0x370]
	0x031CFE28 LDR V0, [X9 + 0x18]
	0x031CFE2C LDR W11, [X8 + 0x374]
	0x031CFE30 MOVZ W9, 0x42C80000
	0x031CFE34 SCVTF S1, W10
	0x031CFE38 SCVTF S0, S0
	0x031CFE3C FDIV S0, S1, S0
	0x031CFE40 FMOV S1, W9
	0x031CFE44 ADD W9, W10, 0x1
	0x031CFE48 STR W9, [X8 + 0x370]
	0x031CFE4C ADD W9, W11, 0x1
	0x031CFE50 CMP W9, 0x3E8
	0x031CFE54 FMUL S0, S0, S1
	0x031CFE58 CSINC W9, W31, W11, EQ
	0x031CFE5C STR S0, [X8 + 0x37C]
	0x031CFE60 STR W9, [X8 + 0x374]
	0x031CFE64 B.EQ 0x31CFEF0
	0x031CFE68 LDR W8, [X19 + 0x48]
	0x031CFE6C ADD W8, W8, 0x1
	0x031CFE70 STR W8, [X19 + 0x48]
	0x031CFE74 MOV X21, X19
	0x031CFE78 LDR X9, [X21 + 0x38]!
	0x031CFE7C CBZ X9, 0x31CFF00
	0x031CFE80 LDR W10, [X9 + 0x18]
	0x031CFE84 CMP W8, W10
	0x031CFE88 B.LT 0x31CFC18
	0x031CFE8C LDR X8, [X19 + 0x20]
	0x031CFE90 CBZ X8, 0x31CFF00
	0x031CFE94 LDRB W9, [X8 + 0x184]
	0x031CFE98 CBZ W9, 0x31CFEB8
	0x031CFE9C LDR X0, [X8 + 0x2E8]
	0x031CFEA0 CBZ X0, 0x31CFF00
	0x031CFEA4 LDR X1, [X8 + 0x280]
	0x031CFEA8 ADRP X8, 0xF50000
	0x031CFEAC LDR X8, [X8 + 0xCD0]
	0x031CFEB0 LDR X2, [X8]
	0x031CFEB4 BL 0x301C194
	0x031CFEB8 STP X31, X31, [X21]
	0x031CFEBC LDR X8, [X19 + 0x20]
	0x031CFEC0 CBZ X8, 0x31CFF00
	0x031CFEC4 LDR X9, [X8 + 0x280]
	0x031CFEC8 CBZ X9, 0x31CFF00
	0x031CFECC LDR W9, [X9 + 0x18]
	0x031CFED0 MOV W0, W31
	0x031CFED4 STRB W31, [X8 + 0x365]
	0x031CFED8 STR W9, [X8 + 0x35C]
	0x031CFEDC LDP X20, X19, [X31 + 0x30]
	0x031CFEE0 LDP X22, X21, [X31 + 0x20]
	0x031CFEE4 LDP X30, X23, [X31 + 0x10]
	0x031CFEE8 LDP D9, D8, [X31], #0x40
	0x031CFEEC RET
	0x031CFEF0 MOVZ W0, 0x1
	0x031CFEF4 STR X31, [X19 + 0x18]
	0x031CFEF8 STR W0, [X19 + 0x10]
	0x031CFEFC B 0x31CFEDC
	0x031CFF00 BL 0x1C16F20
	0x031CFF04 BL 0x1C16F28
	0x031CFF08 LDR X0, [X0 + 0x18]
	0x031CFF0C RET
	0x031CFF10 STP X30, X19, [X31 - 0x10]!
	0x031CFF14 ADRP X0, 0xF24000
	0x031CFF18 LDR X0, [X0 + 0xB40]
	0x031CFF1C BL 0x1C16D08
	0x031CFF20 BL 0x1C16F10
	0x031CFF24 MOV X1, X31
	0x031CFF28 MOV X19, X0
	0x031CFF2C BL 0x3380310
	0x031CFF30 ADRP X0, 0xF50000
	0x031CFF34 LDR X0, [X0 + 0xD48]
	0x031CFF38 BL 0x1C16D08
	0x031CFF3C MOV X1, X0
	0x031CFF40 MOV X0, X19
	0x031CFF44 BL 0x1C16DEC
	0x031CFF48 LDR X0, [X0 + 0x18]
	0x031CFF4C RET
	0x031CFF50 STR X30, [X31 - 0x40]!
	0x031CFF54 STP X24, X23, [X31 + 0x10]
	0x031CFF58 STP X22, X21, [X31 + 0x20]
	0x031CFF5C STP X20, X19, [X31 + 0x30]
	0x031CFF60 ADRP X24, 0x120D000
	0x031CFF64 ADRP X23, 0xF50000
	0x031CFF68 LDRB W8, [X24 + 0x19]
	0x031CFF6C LDR X23, [X23 + 0xD50]
	0x031CFF70 MOV W22, W4
	0x031CFF74 MOV X19, X3
	0x031CFF78 MOV W20, W2
	0x031CFF7C MOV X21, X1
	0x031CFF80 TBNZ X8, 0x0, 0x31CFF98
	0x031CFF84 ADRP X0, 0xF50000
	0x031CFF88 LDR X0, [X0 + 0xD50]
	0x031CFF8C BL 0x1C16CF4
	0x031CFF90 MOVZ W8, 0x1
	0x031CFF94 STRB W8, [X24 + 0x19]
	0x031CFF98 LDR X0, [X23]
	0x031CFF9C AND W23, W22, 0x1
	0x031CFFA0 BL 0x1C16F10
	0x031CFFA4 MOV X1, X31
	0x031CFFA8 MOV X22, X0
	0x031CFFAC BL 0x33BDD8C
	0x031CFFB0 STR W31, [X22 + 0x10]
	0x031CFFB4 STR W20, [X22 + 0x20]
	0x031CFFB8 STP X21, X19, [X22 + 0x28]
	0x031CFFBC STRB W23, [X22 + 0x38]
	0x031CFFC0 MOV X0, X22
	0x031CFFC4 LDP X20, X19, [X31 + 0x30]
	0x031CFFC8 LDP X22, X21, [X31 + 0x20]
	0x031CFFCC LDP X24, X23, [X31 + 0x10]
	0x031CFFD0 LDR X30, [X31], #0x40
	0x031CFFD4 RET
	0x031CFFD8 STR X30, [X31 - 0x20]!
	0x031CFFDC STP X20, X19, [X31 + 0x10]
	0x031CFFE0 MOV W19, W1
	0x031CFFE4 MOV X1, X31
	0x031CFFE8 MOV X20, X0
	0x031CFFEC BL 0x33BDD8C
	0x031CFFF0 STR W19, [X20 + 0x10]
	0x031CFFF4 LDP X20, X19, [X31 + 0x10]
	0x031CFFF8 LDR X30, [X31], #0x20
	0x031CFFFC RET
	0x031D0000 MOV X1, X31
	0x031D0004 B 0x33BDD8C
	0x031D0008 RET
	0x031D000C STP D9, D8, [X31 - 0x60]!
	0x031D0010 STR X30, [X31 + 0x10]
	0x031D0014 STP X26, X25, [X31 + 0x20]
	0x031D0018 STP X24, X23, [X31 + 0x30]
	0x031D001C STP X22, X21, [X31 + 0x40]
	0x031D0020 STP X20, X19, [X31 + 0x50]
	0x031D0024 ADRP X20, 0x120C000
	0x031D0028 LDRB W8, [X20 + 0x1A]
	0x031D002C MOV X19, X0
	0x031D0030 TBNZ X8, 0x0, 0x31D0168
	0x031D0034 ADRP X0, 0xF4C000
	0x031D0038 LDR X0, [X0 + 0x4F0]
	0x031D003C BL 0x1C16CF4
	0x031D0040 ADRP X0, 0xF4F000
	0x031D0044 LDR X0, [X0 + 0xD58]
	0x031D0048 BL 0x1C16CF4
	0x031D004C ADRP X0, 0xF4F000
	0x031D0050 LDR X0, [X0 + 0xCD0]
	0x031D0054 BL 0x1C16CF4
	0x031D0058 ADRP X0, 0xF4F000
	0x031D005C LDR X0, [X0 + 0xC28]
	0x031D0060 BL 0x1C16CF4
	0x031D0064 ADRP X0, 0xF27000
	0x031D0068 LDR X0, [X0 + 0x3B8]
	0x031D006C BL 0x1C16CF4
	0x031D0070 ADRP X0, 0xF27000
	0x031D0074 LDR X0, [X0 + 0x380]
	0x031D0078 BL 0x1C16CF4
	0x031D007C ADRP X0, 0xF4F000
	0x031D0080 LDR X0, [X0 + 0xD60]
	0x031D0084 BL 0x1C16CF4
	0x031D0088 ADRP X0, 0xF4F000
	0x031D008C LDR X0, [X0 + 0x5B0]
	0x031D0090 BL 0x1C16CF4
	0x031D0094 ADRP X0, 0xF4F000
	0x031D0098 LDR X0, [X0 + 0x5B8]
	0x031D009C BL 0x1C16CF4
	0x031D00A0 ADRP X0, 0xF4F000
	0x031D00A4 LDR X0, [X0 + 0xC08]
	0x031D00A8 BL 0x1C16CF4
	0x031D00AC ADRP X0, 0xF27000
	0x031D00B0 LDR X0, [X0 + 0x978]
	0x031D00B4 BL 0x1C16CF4
	0x031D00B8 ADRP X0, 0xF4F000
	0x031D00BC LDR X0, [X0 + 0xCE0]
	0x031D00C0 BL 0x1C16CF4
	0x031D00C4 ADRP X0, 0xF27000
	0x031D00C8 LDR X0, [X0 + 0x980]
	0x031D00CC BL 0x1C16CF4
	0x031D00D0 ADRP X0, 0xF4F000
	0x031D00D4 LDR X0, [X0 + 0xCE8]
	0x031D00D8 BL 0x1C16CF4
	0x031D00DC ADRP X0, 0xF4F000
	0x031D00E0 LDR X0, [X0 + 0xC00]
	0x031D00E4 BL 0x1C16CF4
	0x031D00E8 ADRP X0, 0xF27000
	0x031D00EC LDR X0, [X0 + 0x3C0]
	0x031D00F0 BL 0x1C16CF4
	0x031D00F4 ADRP X0, 0xF25000
	0x031D00F8 LDR X0, [X0 + 0x9B0]
	0x031D00FC BL 0x1C16CF4
	0x031D0100 ADRP X0, 0xF4F000
	0x031D0104 LDR X0, [X0 + 0xD68]
	0x031D0108 BL 0x1C16CF4
	0x031D010C ADRP X0, 0xF4F000
	0x031D0110 LDR X0, [X0 + 0xD20]
	0x031D0114 BL 0x1C16CF4
	0x031D0118 ADRP X0, 0xF4F000
	0x031D011C LDR X0, [X0 + 0xD28]
	0x031D0120 BL 0x1C16CF4
	0x031D0124 ADRP X0, 0xF4F000
	0x031D0128 LDR X0, [X0 + 0xD38]
	0x031D012C BL 0x1C16CF4
	0x031D0130 ADRP X0, 0xF4F000
	0x031D0134 LDR X0, [X0 + 0xD70]
	0x031D0138 BL 0x1C16CF4
	0x031D013C ADRP X0, 0xF4F000
	0x031D0140 LDR X0, [X0 + 0xD78]
	0x031D0144 BL 0x1C16CF4
	0x031D0148 ADRP X0, 0xF4F000
	0x031D014C LDR X0, [X0 + 0xD40]
	0x031D0150 BL 0x1C16CF4
	0x031D0154 ADRP X0, 0xF4F000
	0x031D0158 LDR X0, [X0 + 0xD80]
	0x031D015C BL 0x1C16CF4
	0x031D0160 MOVZ W8, 0x1
	0x031D0164 STRB W8, [X20 + 0x1A]
	0x031D0168 LDR W8, [X19 + 0x10]
	0x031D016C CMP W8, 0x3
	0x031D0170 B.HI 0x31D02B4
	0x031D0174 ADRP X9, 0xFFFFFFFFFD9C6000
	0x031D0178 ADRP X23, 0xF4F000
	0x031D017C ADD X9, X9, 0x3CE
	0x031D0180 ADRP X24, 0xF27000
	0x031D0184 LDR X23, [X23 + 0xCE8]
	0x031D0188 ADR X10, 0x14
	0x031D018C LDRB W11, [X9, X8, LSL]
	0x031D0190 ADD X10, X10, X11, 0x2, LSL
	0x031D0194 LDR X24, [X24 + 0x3B8]
	0x031D0198 BR X10
	0x031D019C MOVN W8, 0x0
	0x031D01A0 STR W8, [X19 + 0x10]
	0x031D01A4 ADRP X8, 0xF4F000
	0x031D01A8 LDR X8, [X8 + 0xC00]
	0x031D01AC LDR X0, [X8]
	0x031D01B0 BL 0x1C16F10
	0x031D01B4 ADRP X8, 0xF4F000
	0x031D01B8 LDR X8, [X8 + 0xC08]
	0x031D01BC MOV X20, X0
	0x031D01C0 LDR X1, [X8]
	0x031D01C4 BL 0x301B7C4
	0x031D01C8 STR X20, [X19 + 0x40]
	0x031D01CC ADRP X21, 0xF27000
	0x031D01D0 LDR X21, [X21 + 0x3C0]
	0x031D01D4 LDR X0, [X21]
	0x031D01D8 BL 0x1C16F10
	0x031D01DC ADRP X22, 0xF4F000
	0x031D01E0 LDR X22, [X22 + 0x5B8]
	0x031D01E4 MOV X20, X0
	0x031D01E8 LDR X1, [X22]
	0x031D01EC BL 0x30CB97C
	0x031D01F0 STR X20, [X19 + 0x48]
	0x031D01F4 LDR X0, [X21]
	0x031D01F8 BL 0x1C16F10
	0x031D01FC LDR X1, [X22]
	0x031D0200 MOV X20, X0
	0x031D0204 BL 0x30CB97C
	0x031D0208 LDR W8, [X19 + 0x20]
	0x031D020C STR X20, [X19 + 0x50]
	0x031D0210 STR W31, [X19 + 0x58]
	0x031D0214 CMP W8, 0x2
	0x031D0218 B.EQ 0x31D02E0
	0x031D021C CMP W8, 0x1
	0x031D0220 B.EQ 0x31D0380
	0x031D0224 CBNZ W8, 0x31D041C
	0x031D0228 LDR X8, [X19 + 0x28]
	0x031D022C CBZ X8, 0x31D0988
	0x031D0230 ADRP X9, 0xF4F000
	0x031D0234 LDR X9, [X9 + 0xD70]
	0x031D0238 LDR X9, [X9]
	0x031D023C STR X9, [X8 + 0x368]
	0x031D0240 LDR X8, [X19 + 0x30]
	0x031D0244 CBZ X8, 0x31D0988
	0x031D0248 CBZ X20, 0x31D0988
	0x031D024C LDR X1, [X8 + 0xA8]
	0x031D0250 ADRP X8, 0xF4F000
	0x031D0254 LDR X8, [X8 + 0xD58]
	0x031D0258 MOV X0, X20
	0x031D025C LDR X2, [X8]
	0x031D0260 BL 0x30CC3E4
	0x031D0264 LDR X8, [X19 + 0x30]
	0x031D0268 CBZ X8, 0x31D0988
	0x031D026C LDR X9, [X8 + 0xA0]
	0x031D0270 CBZ X9, 0x31D0988
	0x031D0274 LDR W10, [X9 + 0x1C]
	0x031D0278 ADD W10, W10, 0x1
	0x031D027C STP W31, W10, [X9 + 0x18]
	0x031D0280 LDR X8, [X8 + 0xB8]
	0x031D0284 CBZ X8, 0x31D0988
	0x031D0288 LDR W9, [X8 + 0x1C]
	0x031D028C ADD W9, W9, 0x1
	0x031D0290 STP W31, W9, [X8 + 0x18]
	0x031D0294 LDR X8, [X19 + 0x28]
	0x031D0298 CBZ X8, 0x31D0988
	0x031D029C LDR V0, [X8 + 0x10C]
	0x031D02A0 LDR X0, [X19 + 0x40]
	0x031D02A4 STR S0, [X19 + 0x58]
	0x031D02A8 CBZ X0, 0x31D0988
	0x031D02AC ADD X8, X8, 0x2B0
	0x031D02B0 B 0x31D0408
	0x031D02B4 MOV W0, W31
	0x031D02B8 B 0x31D0F60
	0x031D02BC MOVN W8, 0x0
	0x031D02C0 STR W8, [X19 + 0x10]
	0x031D02C4 B 0x31D0914
	0x031D02C8 MOVN W8, 0x0
	0x031D02CC STR W8, [X19 + 0x10]
	0x031D02D0 B 0x31D0AE4
	0x031D02D4 MOVN W8, 0x0
	0x031D02D8 STR W8, [X19 + 0x10]
	0x031D02DC B 0x31D0F20
	0x031D02E0 LDR X8, [X19 + 0x28]
	0x031D02E4 CBZ X8, 0x31D0988
	0x031D02E8 ADRP X9, 0xF4F000
	0x031D02EC LDR X9, [X9 + 0xD78]
	0x031D02F0 LDR X9, [X9]
	0x031D02F4 STR X9, [X8 + 0x368]
	0x031D02F8 LDR X8, [X19 + 0x30]
	0x031D02FC CBZ X8, 0x31D0988
	0x031D0300 CBZ X20, 0x31D0988
	0x031D0304 LDR X1, [X8 + 0xB0]
	0x031D0308 ADRP X8, 0xF4F000
	0x031D030C LDR X8, [X8 + 0xD58]
	0x031D0310 MOV X0, X20
	0x031D0314 LDR X2, [X8]
	0x031D0318 BL 0x30CC3E4
	0x031D031C LDR X8, [X19 + 0x30]
	0x031D0320 CBZ X8, 0x31D0988
	0x031D0324 LDR X9, [X8 + 0xA0]
	0x031D0328 CBZ X9, 0x31D0988
	0x031D032C LDR W10, [X9 + 0x1C]
	0x031D0330 ADD W10, W10, 0x1
	0x031D0334 STP W31, W10, [X9 + 0x18]
	0x031D0338 LDR X9, [X8 + 0x98]
	0x031D033C CBZ X9, 0x31D0988
	0x031D0340 LDR W10, [X9 + 0x1C]
	0x031D0344 ADD W10, W10, 0x1
	0x031D0348 STP W31, W10, [X9 + 0x18]
	0x031D034C LDR X8, [X8 + 0xB8]
	0x031D0350 CBZ X8, 0x31D0988
	0x031D0354 LDR W9, [X8 + 0x1C]
	0x031D0358 ADD W9, W9, 0x1
	0x031D035C STP W31, W9, [X8 + 0x18]
	0x031D0360 LDR X8, [X19 + 0x28]
	0x031D0364 CBZ X8, 0x31D0988
	0x031D0368 LDR V0, [X8 + 0x110]
	0x031D036C LDR X0, [X19 + 0x40]
	0x031D0370 STR S0, [X19 + 0x58]
	0x031D0374 CBZ X0, 0x31D0988
	0x031D0378 ADD X8, X8, 0x2B8
	0x031D037C B 0x31D0408
	0x031D0380 LDR X8, [X19 + 0x28]
	0x031D0384 CBZ X8, 0x31D0988
	0x031D0388 ADRP X9, 0xF4F000
	0x031D038C LDR X9, [X9 + 0xD68]
	0x031D0390 LDR X9, [X9]
	0x031D0394 STR X9, [X8 + 0x368]
	0x031D0398 LDR X8, [X19 + 0x30]
	0x031D039C CBZ X8, 0x31D0988
	0x031D03A0 CBZ X20, 0x31D0988
	0x031D03A4 LDR X1, [X8 + 0x90]
	0x031D03A8 ADRP X8, 0xF4F000
	0x031D03AC LDR X8, [X8 + 0xD58]
	0x031D03B0 MOV X0, X20
	0x031D03B4 LDR X2, [X8]
	0x031D03B8 BL 0x30CC3E4
	0x031D03BC LDR X8, [X19 + 0x30]
	0x031D03C0 CBZ X8, 0x31D0988
	0x031D03C4 LDR X9, [X8 + 0xA0]
	0x031D03C8 CBZ X9, 0x31D0988
	0x031D03CC LDR W10, [X9 + 0x1C]
	0x031D03D0 ADD W10, W10, 0x1
	0x031D03D4 STP W31, W10, [X9 + 0x18]
	0x031D03D8 LDR X8, [X8 + 0x98]
	0x031D03DC CBZ X8, 0x31D0988
	0x031D03E0 LDR W9, [X8 + 0x1C]
	0x031D03E4 ADD W9, W9, 0x1
	0x031D03E8 STP W31, W9, [X8 + 0x18]
	0x031D03EC LDR X8, [X19 + 0x28]
	0x031D03F0 CBZ X8, 0x31D0988
	0x031D03F4 LDR V0, [X8 + 0x104]
	0x031D03F8 LDR X0, [X19 + 0x40]
	0x031D03FC STR S0, [X19 + 0x58]
	0x031D0400 CBZ X0, 0x31D0988
	0x031D0404 ADD X8, X8, 0x2D8
	0x031D0408 LDR X1, [X8]
	0x031D040C ADRP X8, 0xF4F000
	0x031D0410 LDR X8, [X8 + 0xCD0]
	0x031D0414 LDR X2, [X8]
	0x031D0418 BL 0x301C194
	0x031D041C LDR X0, [X19 + 0x48]
	0x031D0420 CBZ X0, 0x31D0988
	0x031D0424 ADRP X8, 0xF4F000
	0x031D0428 LDR X1, [X19 + 0x50]
	0x031D042C LDR X8, [X8 + 0xD58]
	0x031D0430 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X30
	011 Move [X31+184], X25
	012 Move [X31+192], X24
	013 Move [X31+200], X23
	014 Move [X31+208], X22
	015 Move [X31+216], X21
	016 Move [X31+224], X20
	017 Move [X31+232], X19
	018 Move X20, 0x120E000
	019 Move W8, [X20+19]
	020 Move X19, X0
	021 Move [X31+104], X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {73}
	026 Move X0, 0xF51000
	027 Move X0, [X0+3096]
	028 Call 0x1C17CF4
	029 Move X0, 0xF51000
	030 Move X0, [X0+3104]
	031 Call 0x1C17CF4
	032 Move X0, 0xF2C000
	033 Move X0, [X0+1920]
	034 Call 0x1C17CF4
	035 Move X0, 0xF51000
	036 Move X0, [X0+3280]
	037 Call 0x1C17CF4
	038 Move X0, 0xF51000
	039 Move X0, [X0+3112]
	040 Call 0x1C17CF4
	041 Move X0, 0xF51000
	042 Move X0, [X0+3288]
	043 Call 0x1C17CF4
	044 Move X0, 0xF51000
	045 Move X0, [X0+3120]
	046 Call 0x1C17CF4
	047 Move X0, 0xF51000
	048 Move X0, [X0+3080]
	049 Call 0x1C17CF4
	050 Move X0, 0xF51000
	051 Move X0, [X0+3296]
	052 Call 0x1C17CF4
	053 Move X0, 0xF51000
	054 Move X0, [X0+3304]
	055 Call 0x1C17CF4
	056 Move X0, 0xF51000
	057 Move X0, [X0+3072]
	058 Call 0x1C17CF4
	059 Move X0, 0xF51000
	060 Move X0, [X0+3312]
	061 Call 0x1C17CF4
	062 Move X0, 0xF26000
	063 Move X0, [X0+3784]
	064 Call 0x1C17CF4
	065 Move X0, 0xF51000
	066 Move X0, [X0+3320]
	067 Call 0x1C17CF4
	068 Move X0, 0xF51000
	069 Move X0, [X0+3328]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+19], W8
	073 Add X8, X31, 104
	074 Move [X31+80], X31
	075 Move [X31+88], X31
	076 Move [X31+96], X31
	077 Move [X31+64], X31
	078 Move [X31+72], X8
	079 Move W8, [X19+16]
	080 Move X20, 0xF51000
	081 Move X20, [X20+3112]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X21, 0xF25000
	084 Move X21, [X21+1448]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Compare W8, 0
	087 JumpIfNotEqual {190}
	088 Move X8, [X19+32]
	089 Move TEMP, 0
	090 Not TEMP
	091 Move W9, TEMP
	092 Move [X19+16], W9
	093 Compare X8, 0
	094 JumpIfEqual {187}
	095 Move X9, 0xF51000
	096 Move X9, [X9+3320]
	097 NotImplemented "Instruction MOVI not yet implemented."
	098 Move X19, 0x120B000
	099 Move V8, [X8+288]
	100 Move X9, [X9]
	101 Move [X8+880], D0
	102 Move V9, [X8+292]
	103 Move [X8+872], X9
	104 Move W9, [X19+1495]
	105 Compare W9, 0
	106 JumpIfNotEqual {112}
	107 Move X0, 0xF25000
	108 Move X0, [X0+1448]
	109 Call 0x1C17CF4
	110 Move W8, 1
	111 Move [X19+1495], W8
	112 Move X0, [X21]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 NotImplemented "Instruction FDIV not yet implemented."
	118 NotImplemented "Instruction FCVT not yet implemented."
	119 Add X0, X31, 32
	120 Move V0, V8
	121 Call 0x3EB2C00
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 Move D1, -0.5
	124 NotImplemented "Instruction FCMP not yet implemented."
	125 Move V0, [X31+32]
	126 Move D1, -1
	127 Move TEMP, 0
	128 Not TEMP
	129 Move W8, TEMP
	130 Move [X19+16], W8
	131 Move TEMP, 2
	132 Not TEMP
	133 Move W8, TEMP
	134 Move [X19+16], W8
	135 Move D1, 0.5
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 Move V0, [X31+32]
	138 Move D1, 1
	139 NotImplemented "Instruction FCVTZS not yet implemented."
	140 Add D1, D0, D1
	141 And X31, X8, 1
	142 NotImplemented "Instruction FCSEL not yet implemented."
	143 Add D0, D8, D1
	144 NotImplemented "Instruction FRINTP not yet implemented."
	145 Add D0, D8, D1
	146 NotImplemented "Instruction FRINTM not yet implemented."
	147 Move X9, 0x7FF00000
	148 Move X10, [X31+104]
	149 Move D1, X9
	150 NotImplemented "Instruction FCVTZS not yet implemented."
	151 Move W11, 0x80000000
	152 NotImplemented "Instruction FCMP not yet implemented."
	153 NotImplemented "Instruction CSEL not yet implemented."
	154 Move [X10+40], W8
	155 Move X22, 0xF51000
	156 Move X22, [X22+3072]
	157 Move X0, [X22]
	158 Call 0x1C17F10
	159 Move X23, 0xF51000
	160 Move X23, [X23+3080]
	161 Move X19, X0
	162 Move X1, [X23]
	163 Call List`1<Object>..ctor, X0
	164 Move X8, [X31+104]
	165 Move [X8+48], X19
	166 Move X0, [X22]
	167 Call 0x1C17F10
	168 Move X1, [X23]
	169 Move X19, X0
	170 Call List`1<Object>..ctor, X0
	171 Move X9, [X31+104]
	172 Move X8, [X9+32]
	173 Move [X9+56], X19
	174 Compare X8, 0
	175 JumpIfEqual {188}
	176 Move X0, [X8+640]
	177 Compare X0, 0
	178 JumpIfEqual {189}
	179 Move X1, [X8+704]
	180 Move X8, 0xF51000
	181 Move X8, [X8+3280]
	182 Move X2, [X8]
	183 Call List`1<Object>.AddRange, X0, X1
	184 Move X19, [X31+104]
	185 Move W8, W31
	186 Move [X19+64], W31
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 Call 0x1C17F20
	190 Move W0, W31
	191 Move X22, 0xF51000
	192 Move X22, [X22+3304]
	193 Move X2, [X22]
	194 Move X0, X9
	195 Move W1, W8
	196 Call List`1<Object>.get_Item, X0, X1
	197 Compare X0, 0
	198 JumpIfEqual {416}
	199 Move W8, [X0+83]
	200 Compare W8, 0
	201 JumpIfEqual {363}
	202 Move X19, 0x120A000
	203 Move W8, [X19+1926]
	204 Compare W8, 0
	205 JumpIfNotEqual {211}
	206 Move X0, 0xF25000
	207 Move X0, [X0+1440]
	208 Call 0x1C17CF4
	209 Move W8, 1
	210 Move [X19+1926], W8
	211 Move X8, [X31+104]
	212 Move X9, [X8+32]
	213 Compare X9, 0
	214 JumpIfEqual {420}
	215 Move X0, [X9+640]
	216 Compare X0, 0
	217 JumpIfEqual {422}
	218 Move X19, 0xF25000
	219 Move X19, [X19+1440]
	220 Move W1, [X8+64]
	221 Move X2, [X22]
	222 Move X9, [X19]
	223 Move X9, [X9+184]
	224 Move S9, [X9+24]
	225 Move S10, [X9+28]
	226 Move V0, [X9+32]
	227 Move [X31+4], S0
	228 Call List`1<Object>.get_Item, X0, X1
	229 Compare X0, 0
	230 JumpIfEqual {418}
	231 Move X9, [X31+104]
	232 Move X8, [X9+32]
	233 Compare X8, 0
	234 JumpIfEqual {419}
	235 Move X8, [X8+640]
	236 Compare X8, 0
	237 JumpIfEqual {421}
	238 Move S11, [X0+96]
	239 Move S12, [X0+100]
	240 Move V13, [X0+104]
	241 Move W1, [X9+64]
	242 Move X2, [X22]
	243 Move X0, X8
	244 Call List`1<Object>.get_Item, X0, X1
	245 Compare X0, 0
	246 JumpIfEqual {417}
	247 Move X23, 0x120A000
	248 Move S14, [X0+24]
	249 Move S15, [X0+28]
	250 Move W8, [X23+1925]
	251 Move V8, [X0+32]
	252 Compare W8, 0
	253 JumpIfNotEqual {259}
	254 Move X0, 0xF25000
	255 Move X0, [X0+1448]
	256 Call 0x1C17CF4
	257 Move W8, 1
	258 Move [X23+1925], W8
	259 Move X0, [X21]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Subtract S0, S11, S14
	265 Subtract S2, S12, S15
	266 Move X8, -40779776
	267 Subtract S3, S13, S8
	268 Multiply S1, S0, S0
	269 Multiply S4, S2, S2
	270 Move V5, [X8+380]
	271 Add S1, S1, S4
	272 Multiply S4, S3, S3
	273 Add S1, S4, S1
	274 NotImplemented "Instruction FSQRT not yet implemented."
	275 NotImplemented "Instruction FCMP not yet implemented."
	276 NotImplemented "Instruction FDIV not yet implemented."
	277 NotImplemented "Instruction FDIV not yet implemented."
	278 NotImplemented "Instruction FDIV not yet implemented."
	279 Move X23, 0x120A000
	280 Move W8, [X23+1923]
	281 Compare W8, 0
	282 JumpIfNotEqual {288}
	283 Move X0, 0xF25000
	284 Move X0, [X0+1440]
	285 Call 0x1C17CF4
	286 Move W8, 1
	287 Move [X23+1923], W8
	288 Move X8, [X19]
	289 Move X8, [X8+184]
	290 Move S1, [X8]
	291 Move S0, [X8+4]
	292 Move V2, [X8+8]
	293 Move V4, [X31+4]
	294 NotImplemented "Instruction FNEG not yet implemented."
	295 Multiply S1, S9, S1
	296 Move X8, [X31+104]
	297 Multiply S0, S0, S3
	298 Multiply S2, S4, S2
	299 Subtract S0, S0, S1
	300 Subtract S0, S0, S2
	301 Move S1, 1
	302 NotImplemented "Instruction FCMP not yet implemented."
	303 Move X9, [X8+32]
	304 Compare X9, 0
	305 JumpIfEqual {426}
	306 Move X0, [X9+640]
	307 Compare X0, 0
	308 JumpIfEqual {424}
	309 Move X19, [X8+48]
	310 Move W1, [X8+64]
	311 Move X2, [X22]
	312 Call List`1<Object>.get_Item, X0, X1
	313 Move X1, X0
	314 Compare X19, 0
	315 JumpIfEqual {425}
	316 Move W10, [X19+28]
	317 Move X8, [X19+16]
	318 Move X9, [X20]
	319 Add W10, W10, 1
	320 Move [X19+28], W10
	321 Compare X8, 0
	322 JumpIfEqual {423}
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Move W11, [X8+24]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X8, [X9+32]
	327 Move X8, [X8+192]
	328 Move X2, [X8+112]
	329 Move X0, X19
	330 Call List`1<Object>.AddWithResize, X0, X1
	331 Move X9, [X8+32]
	332 Compare X9, 0
	333 JumpIfEqual {429}
	334 Move X0, [X9+640]
	335 Compare X0, 0
	336 JumpIfEqual {428}
	337 Move X19, [X8+56]
	338 Move W1, [X8+64]
	339 Move X2, [X22]
	340 Call List`1<Object>.get_Item, X0, X1
	341 Move X1, X0
	342 Compare X19, 0
	343 JumpIfEqual {427}
	344 Move W10, [X19+28]
	345 Move X8, [X19+16]
	346 Move X9, [X20]
	347 Add W10, W10, 1
	348 Move [X19+28], W10
	349 Compare X8, 0
	350 JumpIfEqual {430}
	351 NotImplemented "Instruction LDRSW not yet implemented."
	352 Move W11, [X8+24]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Add W9, W10, 1
	355 Add X8, X8, X10
	356 Move [X19+24], W9
	357 Move [X8+32], X1
	358 Move X8, [X9+32]
	359 Move X8, [X8+192]
	360 Move X2, [X8+112]
	361 Move X0, X19
	362 Call List`1<Object>.AddWithResize, X0, X1
	363 Move X19, [X31+104]
	364 Move X8, [X19+32]
	365 Compare X8, 0
	366 JumpIfEqual {414}
	367 Move X9, [X8+640]
	368 Compare X9, 0
	369 JumpIfEqual {415}
	370 Move W10, [X8+880]
	371 Move V0, [X9+24]
	372 Move W11, [X8+884]
	373 Move W9, 0x42C80000
	374 NotImplemented "Instruction SCVTF not yet implemented."
	375 NotImplemented "Instruction SCVTF not yet implemented."
	376 NotImplemented "Instruction FDIV not yet implemented."
	377 Move S1, W9
	378 Add W9, W10, 1
	379 Move [X8+880], W9
	380 Add W9, W11, 1
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Multiply S0, S0, S1
	383 NotImplemented "Instruction CSINC not yet implemented."
	384 Move [X8+892], S0
	385 Move [X8+884], W9
	386 Move W8, [X19+64]
	387 Add W8, W8, 1
	388 Move [X19+64], W8
	389 Move X9, [X19+32]
	390 Compare X9, 0
	391 JumpIfEqual {412}
	392 Move X9, [X9+640]
	393 Compare X9, 0
	394 JumpIfEqual {413}
	395 Move W2, [X9+24]
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move W8, [X9+28]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Add W8, W8, 1
	400 Move [X9+24], W31
	401 Move [X9+28], W8
	402 Move X0, [X9+16]
	403 Move W1, W31
	404 Move X3, X31
	405 Call Array.Clear, X0, X1, X2
	406 Move X19, [X31+104]
	407 Move W8, W31
	408 Move [X19+64], W31
	409 Move W0, 1
	410 Move [X19+24], X31
	411 Move [X19+16], W0
	412 Call 0x1C17F20
	413 Call 0x1C17F20
	414 Call 0x1C17F20
	415 Call 0x1C17F20
	416 Call 0x1C17F20
	417 Call 0x1C17F20
	418 Call 0x1C17F20
	419 Call 0x1C17F20
	420 Call 0x1C17F20
	421 Call 0x1C17F20
	422 Call 0x1C17F20
	423 Call 0x1C17F20
	424 Call 0x1C17F20
	425 Call 0x1C17F20
	426 Call 0x1C17F20
	427 Call 0x1C17F20
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F20
	431 Add X0, X19, 64
	432 Move X1, X31
	433 Call Int32.ToString, X0
	434 Move X8, [X31+104]
	435 Move X19, X0
	436 Add X0, X8, 40
	437 Move X1, X31
	438 Call Int32.ToString, X0
	439 Move X8, 0xF50000
	440 Move X8, [X8+3328]
	441 Move X9, 0xF25000
	442 Move X9, [X9+3784]
	443 Move X3, X0
	444 Move X0, [X8]
	445 Move X2, [X9]
	446 Move X1, X19
	447 Move X4, X31
	448 Call String.Concat, X0, X1, X2, X3
	449 Compare X21, 0
	450 JumpIfEqual {677}
	451 Move [X21+872], X0
	452 Move X8, [X31+104]
	453 Move X9, [X8+32]
	454 Compare X9, 0
	455 JumpIfEqual {676}
	456 NotImplemented "Instruction MOVI not yet implemented."
	457 Move [X9+880], D0
	458 Move X0, [X8+48]
	459 Compare X0, 0
	460 JumpIfEqual {675}
	461 Move X8, 0xF50000
	462 Move X8, [X8+3120]
	463 Move X1, [X8]
	464 Add X8, X31, 8
	465 Call List`1<Object>.GetEnumerator, X0
	466 NotImplemented "Instruction LDUR not yet implemented."
	467 Move X8, [X31+24]
	468 Move X19, [X31+104]
	469 Move TEMP, 2
	470 Not TEMP
	471 Move W9, TEMP
	472 Move [X31+2], V0
	473 Move [X31+48], X8
	474 Move [X19+88], X8
	475 Move [X19+72], V0
	476 Move [X19+16], W9
	477 Move X21, 0xF50000
	478 Move X22, 0xF50000
	479 Move X23, 0xF2B000
	480 Move X21, [X21+3096]
	481 Move X22, [X22+3312]
	482 Move X23, [X23+1920]
	483 Move W24, 0x42C80000
	484 Move X1, [X21]
	485 Add X0, X19, 72
	486 Call Enumerator<Object>.MoveNext, X0
	487 Move W8, W0
	488 Move X0, [X31+104]
	489 Move TEMP, X8
	490 And TEMP, TEMP, 1
	491 Compare TEMP, 1
	492 JumpIfNotEqual {617}
	493 Move X25, [X0+88]
	494 Move X0, [X22]
	495 Call 0x1C17F10
	496 Move X19, X0
	497 Call MLPPointData..ctor, X0
	498 Compare X25, 0
	499 JumpIfEqual {668}
	500 Move X8, [X31+104]
	501 Move X9, [X8+32]
	502 Compare X9, 0
	503 JumpIfEqual {669}
	504 Compare X19, 0
	505 JumpIfEqual {665}
	506 Move V1, [X8+64]
	507 Move V0, [X9+292]
	508 Move S2, [X25+24]
	509 Move S3, [X25+28]
	510 Move V4, [X25+32]
	511 NotImplemented "Instruction SCVTF not yet implemented."
	512 Multiply S0, S0, S1
	513 Add S0, S3, S0
	514 Move [X19+24], S2
	515 Move [X19+32], S0
	516 Move [X19+32], S4
	517 Move X8, [X8+32]
	518 Compare X8, 0
	519 JumpIfEqual {667}
	520 Move X0, [X8+104]
	521 Compare X0, 0
	522 JumpIfEqual {664}
	523 Move X1, [X23]
	524 Call 0x21E62E4, X0
	525 Compare X0, 0
	526 JumpIfEqual {670}
	527 Add X8, X31, 32
	528 Move X1, X31
	529 Call Renderer.get_bounds, X0
	530 Move V0, [X31+2]
	531 Move X8, [X31+48]
	532 Move [X31+5], V0
	533 Move [X31+96], X8
	534 Move S0, [X19+24]
	535 Move S1, [X19+28]
	536 Move V2, [X19+32]
	537 Add X0, X31, 80
	538 Move X1, X31
	539 Call Bounds.Contains, X0, X1
	540 Move TEMP, X0
	541 And TEMP, TEMP, 1
	542 Compare TEMP, 1
	543 JumpIfNotEqual {570}
	544 Move X8, [X31+104]
	545 Move X8, [X8+32]
	546 Compare X8, 0
	547 JumpIfEqual {672}
	548 Move X0, [X8+640]
	549 Compare X0, 0
	550 JumpIfEqual {673}
	551 Move W10, [X0+28]
	552 Move X8, [X0+16]
	553 Move X9, [X20]
	554 Add W10, W10, 1
	555 Move [X0+28], W10
	556 Compare X8, 0
	557 JumpIfEqual {671}
	558 NotImplemented "Instruction LDRSW not yet implemented."
	559 Move W11, [X8+24]
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Add W9, W10, 1
	562 Add X8, X8, X10
	563 Move [X0+24], W9
	564 Move [X8+32], X19
	565 Move X8, [X9+32]
	566 Move X8, [X8+192]
	567 Move X2, [X8+112]
	568 Move X1, X19
	569 Call List`1<Object>.AddWithResize, X0, X1
	570 Move X19, [X31+104]
	571 Move X8, [X19+32]
	572 Compare X8, 0
	573 JumpIfEqual {666}
	574 Move W9, [X8+826]
	575 Compare W9, 0
	576 JumpIfNotEqual {484}
	577 Move X9, [X8+640]
	578 Compare X9, 0
	579 JumpIfEqual {674}
	580 Move W10, [X8+880]
	581 Move V0, [X9+24]
	582 Move W9, [X8+884]
	583 Move S1, W24
	584 NotImplemented "Instruction SCVTF not yet implemented."
	585 NotImplemented "Instruction SCVTF not yet implemented."
	586 Add W11, W9, 1
	587 NotImplemented "Instruction FDIV not yet implemented."
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Add W10, W10, 1
	590 Multiply S0, S0, S1
	591 NotImplemented "Instruction CSINC not yet implemented."
	592 Move [X8+880], W10
	593 Move [X8+892], S0
	594 Move [X8+884], W9
	595 Move W8, 2
	596 Move [X19+24], X31
	597 Move [X19+16], W8
	598 Move W0, 1
	599 Move X20, [X31+224]
	600 Move X19, [X31+232]
	601 Move X22, [X31+208]
	602 Move X21, [X31+216]
	603 Move X24, [X31+192]
	604 Move X23, [X31+200]
	605 Move X30, [X31+176]
	606 Move X25, [X31+184]
	607 Move D9, [X31+160]
	608 Move D8, [X31+168]
	609 Move D11, [X31+144]
	610 Move D10, [X31+152]
	611 Move D13, [X31+128]
	612 Move D12, [X31+136]
	613 Move D15, [X31+112]
	614 Move D14, [X31+120]
	615 Add X31, X31, 240
	616 Return X0
	617 Call <ExecutePass>d__0.<>m__Finally1, X0
	618 Move X19, [X31+104]
	619 Move W8, [X19+64]
	620 Move [X19+72], X31
	621 Move [X19+80], X31
	622 Move [X19+88], X31
	623 Add W8, W8, 1
	624 Move [X19+64], W8
	625 Move W9, [X19+40]
	626 Move X21, [X19+32]
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Compare X21, 0
	629 JumpIfEqual {678}
	630 Move X0, [X21+640]
	631 Compare X0, 0
	632 JumpIfEqual {679}
	633 Move X1, [X19+48]
	634 Move X19, 0xF50000
	635 Move X19, [X19+3280]
	636 Move X2, [X19]
	637 Call List`1<Object>.AddRange, X0, X1
	638 Move X8, [X31+104]
	639 Move X9, [X8+32]
	640 Compare X9, 0
	641 JumpIfEqual {680}
	642 Move X0, [X9+640]
	643 Compare X0, 0
	644 JumpIfEqual {681}
	645 Move X1, [X8+56]
	646 Move X2, [X19]
	647 Call List`1<Object>.AddRange, X0, X1
	648 Move X8, [X31+104]
	649 Move X8, [X8+32]
	650 Compare X8, 0
	651 JumpIfEqual {682}
	652 Move X0, [X8+640]
	653 Compare X0, 0
	654 JumpIfEqual {683}
	655 Move X1, [X8+712]
	656 Move X2, [X19]
	657 Call List`1<Object>.AddRange, X0, X1
	658 Move X8, [X31+104]
	659 Move X8, [X8+32]
	660 Compare X8, 0
	661 JumpIfEqual {684}
	662 Move W0, W31
	663 Move [X8+869], W31
	664 Call 0x1C17F20
	665 Call 0x1C17F20
	666 Call 0x1C17F20
	667 Call 0x1C17F20
	668 Call 0x1C17F20
	669 Call 0x1C17F20
	670 Call 0x1C17F20
	671 Call 0x1C17F20
	672 Call 0x1C17F20
	673 Call 0x1C17F20
	674 Call 0x1C17F20
	675 Call 0x1C17F20
	676 Call 0x1C17F20
	677 Call 0x1C17F20
	678 Call 0x1C17F20
	679 Call 0x1C17F20
	680 Call 0x1C17F20
	681 Call 0x1C17F20
	682 Call 0x1C17F20
	683 Call 0x1C17F20
	684 Call 0x1C17F20
	685 NotImplemented "Instruction CMP not yet implemented."
	686 Call 0x3EB2AD0
	687 Move X19, [X0]
	688 Move [X31+64], X19
	689 Call 0x3EB2AE0
	690 Compare X19, 0
	691 JumpIfEqual {190}
	692 Add X8, X31, 64
	693 Add X0, X8, 8
	694 Call 0x1BB42C8
	695 Move X0, X19
	696 Call 0x1C17F18
	697 Compare X19, 0
	698 JumpIfNotEqual {700}
	699 Call 0x1D2D690
	700 Move X0, [X31+104]
	701 Move W8, [X0+16]
	702 NotImplemented "Instruction CMP not yet implemented."
	703 Add W31, W8, 3
	704 Call <ExecutePass>d__0.<>m__Finally1, X0
	705 Move X0, X19
	706 Call 0x1C17F18
	707 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x031D0434 BL 0x30CC3E4
	0x031D0438 LDR X8, [X19 + 0x28]
	0x031D043C CBZ X8, 0x31D0988
	0x031D0440 MOVI V0.2D, 0x0
	0x031D0444 STR D0, [X8 + 0x370]
	0x031D0448 LDR X8, [X19 + 0x50]
	0x031D044C CBZ X8, 0x31D0988
	0x031D0450 LDR W8, [X8 + 0x18]
	0x031D0454 CMP W8, 0x1
	0x031D0458 B.LT 0x31D0F40
	0x031D045C MOV X0, X31
	0x031D0460 BL 0x3C3BCFC
	0x031D0464 TBZ X0, 0x0, 0x31D0660
	0x031D0468 LDR X8, [X19 + 0x50]
	0x031D046C CBZ X8, 0x31D0988
	0x031D0470 ADRP X25, 0xF4C000
	0x031D0474 LDR W21, [X8 + 0x18]
	0x031D0478 LDR X25, [X25 + 0x4F0]
	0x031D047C LDR X0, [X25]
	0x031D0480 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x120D000
	006 Move X20, 0xF50000
	007 Move W8, [X21+20]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF50000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+20], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 72
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object>.Dispose, X0
	030 Return 

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x031D0484 MOVZ W2, 0xC
	0x031D0488 MOV W1, W21

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x031D048C MOV W3, W31
	0x031D0490 MOV X4, X31
	0x031D0494 MOV X20, X0
	0x031D0498 BL 0x3C3AC18
	0x031D049C LDR X8, [X19 + 0x50]
	0x031D04A0 CBZ X8, 0x31D0988
	0x031D04A4 LDR X0, [X25]
	0x031D04A8 LDR W22, [X8 + 0x18]
	0x031D04AC BL 0x1C16F10
	0x031D04B0 MOVZ W2, 0xC
	0x031D04B4 MOV W1, W22
	0x031D04B8 MOV W3, W31
	0x031D04BC MOV X4, X31
	0x031D04C0 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xF24000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xF50000
	011 Move X0, [X0+3336]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x031D04C4 BL 0x3C3AC18
	0x031D04C8 LDR X0, [X19 + 0x50]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

