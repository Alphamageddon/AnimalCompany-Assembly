Type: UnityEngine.Physics2D

Method: UnityEngine.PhysicsScene2D get_defaultPhysicsScene()

Disassembly:
	0x03C89790 STR X0, [X20 + 0xD00]
	0x03C89794 ADD X1, X31, 0x8

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Boolean get_queriesHitTriggers()

Disassembly:
	0x03C89798 MOV X0, X19
	0x03C8979C BLR X8
	0x03C897A0 LDP S0, S1, [X31 + 0x8]
	0x03C897A4 LDP X20, X19, [X31 + 0x10]
	0x03C897A8 LDR X30, [X31], #0x20
	0x03C897AC RET
	0x03C897B0 STP X30, X21, [X31 - 0x20]!
	0x03C897B4 STP X20, X19, [X31 + 0x10]
	0x03C897B8 ADRP X21, 0x75D000
	0x03C897BC LDR X2, [X21 + 0xD00]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x75E000
	004 Move X0, [X19+3056]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51773440
	008 Add X0, X0, 4014
	009 Call 0x1C17CB8
	010 Move [X19+3056], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_autoSyncTransforms()

Disassembly:
	0x03C897C0 MOV X19, X1
	0x03C897C4 MOV X20, X0
	0x03C897C8 CBNZ X2, 0x3C897E0
	0x03C897CC ADRP X0, 0xFFFFFFFFFCE9F000
	0x03C897D0 ADD X0, X0, 0xFDE
	0x03C897D4 BL 0x1C16CB8
	0x03C897D8 MOV X2, X0
	0x03C897DC STR X0, [X21 + 0xD00]
	0x03C897E0 MOV X0, X20
	0x03C897E4 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x75E000
	004 Move X0, [X19+3064]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51793920
	008 Add X0, X0, 2201
	009 Call 0x1C17CB8
	010 Move [X19+3064], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_autoSyncTransforms(System.Boolean value)

Disassembly:
	0x03C897E8 LDP X20, X19, [X31 + 0x10]
	0x03C897EC LDP X30, X21, [X31], #0x20
	0x03C897F0 BR X2
	0x03C897F4 STR X30, [X31 - 0x20]!
	0x03C897F8 STP X20, X19, [X31 + 0x10]
	0x03C897FC ADRP X20, 0x75D000
	0x03C89800 LDR X8, [X20 + 0xD08]
	0x03C89804 MOV X19, X0
	0x03C89808 STP S0, S1, [X31 + 0x8]
	0x03C8980C CBNZ X8, 0x3C89824
	0x03C89810 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C89814 ADD X0, X0, 0x645
	0x03C89818 BL 0x1C16CB8
	0x03C8981C MOV X8, X0
	0x03C89820 STR X0, [X20 + 0xD08]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x75E000
	005 Move X1, [X20+3072]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51933184
	010 Add X0, X0, 1647
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3072], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.SimulationMode2D get_simulationMode()

Disassembly:
	0x03C89824 ADD X1, X31, 0x8
	0x03C89828 MOV X0, X19
	0x03C8982C BLR X8
	0x03C89830 LDP X20, X19, [X31 + 0x10]
	0x03C89834 LDR X30, [X31], #0x20
	0x03C89838 RET
	0x03C8983C STP X30, X21, [X31 - 0x20]!
	0x03C89840 STP X20, X19, [X31 + 0x10]
	0x03C89844 ADRP X21, 0x75D000
	0x03C89848 LDR X2, [X21 + 0xD08]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x75E000
	004 Move X0, [X19+3080]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51802112
	008 Add X0, X0, 987
	009 Call 0x1C17CB8
	010 Move [X19+3080], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_simulationMode(UnityEngine.SimulationMode2D value)

Disassembly:
	0x03C8984C MOV X19, X1
	0x03C89850 MOV X20, X0
	0x03C89854 CBNZ X2, 0x3C8986C
	0x03C89858 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C8985C ADD X0, X0, 0x645
	0x03C89860 BL 0x1C16CB8
	0x03C89864 MOV X2, X0
	0x03C89868 STR X0, [X21 + 0xD08]
	0x03C8986C MOV X0, X20
	0x03C89870 MOV X1, X19
	0x03C89874 LDP X20, X19, [X31 + 0x10]
	0x03C89878 LDP X30, X21, [X31], #0x20
	0x03C8987C BR X2
	0x03C89880 STR X30, [X31 - 0x20]!
	0x03C89884 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x75E000
	005 Move X1, [X20+3088]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51793920
	010 Add X0, X0, 2249
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3088], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_linearSleepTolerance()

Disassembly:
	0x03C89888 ADRP X20, 0x75D000
	0x03C8988C LDR X1, [X20 + 0xC68]
	0x03C89890 MOV X19, X0
	0x03C89894 CBNZ X1, 0x3C898AC
	0x03C89898 ADRP X0, 0xFFFFFFFFFCE80000
	0x03C8989C ADD X0, X0, 0xB3C
	0x03C898A0 BL 0x1C16CB8
	0x03C898A4 MOV X1, X0
	0x03C898A8 STR X0, [X20 + 0xC68]
	0x03C898AC MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x75E000
	004 Move X0, [X19+3096]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51875840
	008 Add X0, X0, 2831
	009 Call 0x1C17CB8
	010 Move [X19+3096], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_angularSleepTolerance()

Disassembly:
	0x03C898B0 LDP X20, X19, [X31 + 0x10]
	0x03C898B4 LDR X30, [X31], #0x20
	0x03C898B8 BR X1
	0x03C898BC STR D8, [X31 - 0x20]!
	0x03C898C0 STR X30, [X31 + 0x8]
	0x03C898C4 STP X20, X19, [X31 + 0x10]
	0x03C898C8 ADRP X20, 0x75D000
	0x03C898CC LDR X1, [X20 + 0xC70]
	0x03C898D0 MOV V8.16B, V0.16B
	0x03C898D4 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x75E000
	004 Move X0, [X19+3104]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51916800
	008 Add X0, X0, 1894
	009 Call 0x1C17CB8
	010 Move [X19+3104], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean Simulate(System.Single step)

Disassembly:
	0x03C898D8 CBNZ X1, 0x3C898F0
	0x03C898DC ADRP X0, 0xFFFFFFFFFCE9C000
	0x03C898E0 ADD X0, X0, 0x5F8
	0x03C898E4 BL 0x1C16CB8
	0x03C898E8 MOV X1, X0
	0x03C898EC STR X0, [X20 + 0xC70]
	0x03C898F0 MOV X0, X19
	0x03C898F4 LDP X20, X19, [X31 + 0x10]
	0x03C898F8 LDR X30, [X31 + 0x8]
	0x03C898FC MOV V0.16B, V8.16B
	0x03C89900 LDR V8, [X31], #0x20
	0x03C89904 BR X1
	0x03C89908 STR X30, [X31 - 0x20]!
	0x03C8990C STP X20, X19, [X31 + 0x10]
	0x03C89910 ADRP X20, 0x75D000
	0x03C89914 LDR X8, [X20 + 0xD10]
	0x03C89918 MOV X19, X0
	0x03C8991C STR X31, [X31 + 0x8]
	0x03C89920 CBNZ X8, 0x3C89938
	0x03C89924 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C89928 ADD X0, X0, 0x68A
	0x03C8992C BL 0x1C16CB8
	0x03C89930 MOV X8, X0
	0x03C89934 STR X0, [X20 + 0xD10]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x75E000
	006 Move X20, 0x472000
	007 Move W8, [X19+3112]
	008 Move X20, [X20+3168]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x472000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3112], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+8]
	027 Move X0, X31
	028 Move V0, V8
	029 Move V8, [X31+32]
	030 Call Physics2D.Simulate_Internal, X0, V0
	031 Return X0

Method: System.Boolean Simulate_Internal(UnityEngine.PhysicsScene2D physicsScene, System.Single step)

Disassembly:
	0x03C889B0 MOV V9.16B, V2.16B
	0x03C889B4 MOV V10.16B, V1.16B
	0x03C889B8 MOV V11.16B, V0.16B
	0x03C889BC TBNZ X8, 0x0, 0x3C889D4
	0x03C889C0 ADRP X0, 0x472000
	0x03C889C4 LDR X0, [X0 + 0xC60]
	0x03C889C8 BL 0x1C16CF4
	0x03C889CC MOVZ W8, 0x1
	0x03C889D0 STRB W8, [X21 + 0xC2A]
	0x03C889D4 LDR X0, [X20]
	0x03C889D8 MOVI V0.2D, 0x0
	0x03C889DC STR W31, [X31 + 0x20]
	0x03C889E0 STP V0, V0, [X31]
	0x03C889E4 LDR W8, [X0 + 0xE0]
	0x03C889E8 CBNZ W8, 0x3C889F0
	0x03C889EC BL 0x1C16DFC
	0x03C889F0 MOVZ W9, 0x7F800000
	0x03C889F4 ADD X8, X31, 0x0
	0x03C889F8 ADD X0, X31, 0x28
	0x03C889FC MOVN W1, 0x4
	0x03C88A00 FMOV S4, W9
	0x03C88A04 MOV V0.16B, V11.16B
	0x03C88A08 MOV V1.16B, V10.16B
	0x03C88A0C MOV V2.16B, V9.16B
	0x03C88A10 MOV V3.16B, V8.16B
	0x03C88A14 STR W31, [X31 + 0x28]
	0x03C88A18 BL 0x3C87A44
	0x03C88A1C LDR W8, [X31 + 0x20]
	0x03C88A20 LDP V1, V0, [X31]
	0x03C88A24 LDP X30, X21, [X31 + 0x50]
	0x03C88A28 LDP D9, D8, [X31 + 0x40]
	0x03C88A2C STR W8, [X19 + 0x20]
	0x03C88A30 STP V1, V0, [X19]
	0x03C88A34 LDP X20, X19, [X31 + 0x60]
	0x03C88A38 LDP D11, D10, [X31 + 0x30]
	0x03C88A3C ADD X31, X31, 0x70
	0x03C88A40 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x75F000
	007 Move [X31+8], W0
	008 Move X20, 0x473000
	009 Move W8, [X19+3113]
	010 Move X20, [X20+3168]
	011 Move V8, V0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x473000
	017 Move X0, [X0+3168]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3113], W8
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X19, 0x75F000
	027 Move X8, [X19+3136]
	028 Compare X8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51879936
	031 Add X0, X0, 2200
	032 Call 0x1C17CB8
	033 Move X8, X0
	034 Move [X19+3136], X0
	035 Add X0, X31, 8
	036 Move V0, V8
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+24]
	041 Move V8, [X31+16]
	042 And W0, W0, 1
	043 Add X31, X31, 48
	044 Return X0

Method: UnityEngine.RaycastHit2D Raycast(UnityEngine.Vector2 origin, UnityEngine.Vector2 direction)

Disassembly:
	0x03C89984 MOV X0, X20
	0x03C89988 MOV X1, X19
	0x03C8998C LDP X20, X19, [X31 + 0x10]
	0x03C89990 LDP X30, X21, [X31], #0x20
	0x03C89994 BR X2
	0x03C89998 STR X30, [X31 - 0x20]!
	0x03C8999C STP X20, X19, [X31 + 0x10]
	0x03C899A0 ADRP X20, 0x75D000
	0x03C899A4 LDR X8, [X20 + 0xD18]
	0x03C899A8 MOV X19, X0
	0x03C899AC STP S0, S1, [X31 + 0x8]
	0x03C899B0 CBNZ X8, 0x3C899C8
	0x03C899B4 ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C899B8 ADD X0, X0, 0x911
	0x03C899BC BL 0x1C16CB8
	0x03C899C0 MOV X8, X0
	0x03C899C4 STR X0, [X20 + 0xD18]
	0x03C899C8 ADD X1, X31, 0x8
	0x03C899CC MOV X0, X19
	0x03C899D0 BLR X8
	0x03C899D4 LDP X20, X19, [X31 + 0x10]
	0x03C899D8 LDR X30, [X31], #0x20
	0x03C899DC RET
	0x03C899E0 STP X30, X21, [X31 - 0x20]!
	0x03C899E4 STP X20, X19, [X31 + 0x10]
	0x03C899E8 ADRP X21, 0x75D000
	0x03C899EC LDR X2, [X21 + 0xD18]
	0x03C899F0 MOV X19, X1
	0x03C899F4 MOV X20, X0
	0x03C899F8 CBNZ X2, 0x3C89A10
	0x03C899FC ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C89A00 ADD X0, X0, 0x911
	0x03C89A04 BL 0x1C16CB8
	0x03C89A08 MOV X2, X0
	0x03C89A0C STR X0, [X21 + 0xD18]
	0x03C89A10 MOV X0, X20
	0x03C89A14 MOV X1, X19
	0x03C89A18 LDP X20, X19, [X31 + 0x10]
	0x03C89A1C LDP X30, X21, [X31], #0x20
	0x03C89A20 BR X2
	0x03C89A24 STR X30, [X31 - 0x20]!
	0x03C89A28 STP X20, X19, [X31 + 0x10]
	0x03C89A2C ADRP X20, 0x75D000
	0x03C89A30 LDR X1, [X20 + 0xC78]
	0x03C89A34 MOV X19, X0
	0x03C89A38 CBNZ X1, 0x3C89A50
	0x03C89A3C ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C89A40 ADD X0, X0, 0x9B9

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X21, 0x75E000
	011 Move X20, 0x472000
	012 Move X19, X8
	013 Move W8, [X21+3114]
	014 Move X20, [X20+3168]
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x472000
	024 Move X0, [X0+3168]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3114], W8
	028 Move X0, [X20]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+32], W31
	031 Move [X31], V0
	032 Move [X31+8], V0
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W9, 0x7F800000
	038 Add X8, X31, 0
	039 Add X0, X31, 40
	040 Move TEMP, 4
	041 Not TEMP
	042 Move W1, TEMP
	043 Move S4, W9
	044 Move V0, V11
	045 Move V1, V10
	046 Move V2, V9
	047 Move V3, V8
	048 Move [X31+40], W31
	049 Call PhysicsScene2D.Raycast, X0, X1, X2, V0, X3
	050 Move W8, [X31+32]
	051 Move V1, [X31]
	052 Move V0, [X31+16]
	053 Move X30, [X31+80]
	054 Move X21, [X31+88]
	055 Move D9, [X31+64]
	056 Move D8, [X31+72]
	057 Move [X19+32], W8
	058 Move [X19], V1
	059 Move [X19+8], V0
	060 Move X20, [X31+96]
	061 Move X19, [X31+104]
	062 Move D11, [X31+48]
	063 Move D10, [X31+56]
	064 Add X31, X31, 112
	065 Return X0

Method: UnityEngine.RaycastHit2D Raycast(UnityEngine.Vector2 origin, UnityEngine.Vector2 direction, System.Single distance)

Disassembly:
	0x03C89A44 BL 0x1C16CB8
	0x03C89A48 MOV X1, X0
	0x03C89A4C STR X0, [X20 + 0xC78]
	0x03C89A50 MOV X0, X19
	0x03C89A54 LDP X20, X19, [X31 + 0x10]
	0x03C89A58 LDR X30, [X31], #0x20
	0x03C89A5C BR X1
	0x03C89A60 STR D8, [X31 - 0x20]!
	0x03C89A64 STR X30, [X31 + 0x8]
	0x03C89A68 STP X20, X19, [X31 + 0x10]
	0x03C89A6C ADRP X20, 0x75D000
	0x03C89A70 LDR X1, [X20 + 0xC80]
	0x03C89A74 MOV V8.16B, V0.16B
	0x03C89A78 MOV X19, X0
	0x03C89A7C CBNZ X1, 0x3C89A94
	0x03C89A80 ADRP X0, 0xFFFFFFFFFCE90000
	0x03C89A84 ADD X0, X0, 0x2CF
	0x03C89A88 BL 0x1C16CB8
	0x03C89A8C MOV X1, X0
	0x03C89A90 STR X0, [X20 + 0xC80]
	0x03C89A94 MOV X0, X19
	0x03C89A98 LDP X20, X19, [X31 + 0x10]
	0x03C89A9C LDR X30, [X31 + 0x8]
	0x03C89AA0 MOV V0.16B, V8.16B
	0x03C89AA4 LDR V8, [X31], #0x20
	0x03C89AA8 BR X1
	0x03C89AAC STR X30, [X31 - 0x20]!
	0x03C89AB0 STP X20, X19, [X31 + 0x10]
	0x03C89AB4 ADRP X20, 0x75D000
	0x03C89AB8 LDR X1, [X20 + 0xC88]
	0x03C89ABC MOV X19, X0
	0x03C89AC0 CBNZ X1, 0x3C89AD8
	0x03C89AC4 ADRP X0, 0xFFFFFFFFFCE82000
	0x03C89AC8 ADD X0, X0, 0x9F4
	0x03C89ACC BL 0x1C16CB8
	0x03C89AD0 MOV X1, X0
	0x03C89AD4 STR X0, [X20 + 0xC88]
	0x03C89AD8 MOV X0, X19
	0x03C89ADC LDP X20, X19, [X31 + 0x10]
	0x03C89AE0 LDR X30, [X31], #0x20
	0x03C89AE4 BR X1
	0x03C89AE8 STR D8, [X31 - 0x20]!
	0x03C89AEC STR X30, [X31 + 0x8]
	0x03C89AF0 STP X20, X19, [X31 + 0x10]
	0x03C89AF4 ADRP X20, 0x75D000
	0x03C89AF8 LDR X1, [X20 + 0xC90]
	0x03C89AFC MOV V8.16B, V0.16B
	0x03C89B00 MOV X19, X0
	0x03C89B04 CBNZ X1, 0x3C89B1C
	0x03C89B08 ADRP X0, 0xFFFFFFFFFCE8E000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D12
	003 Move [X31+64], D11
	004 Move [X31+72], D10
	005 Move [X31+80], D9
	006 Move [X31+88], D8
	007 Move [X31+96], X30
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X21, 0x75E000
	012 Move X20, 0x472000
	013 Move X19, X8
	014 Move W8, [X21+3115]
	015 Move X20, [X20+3168]
	016 Move V8, V4
	017 Move V9, V3
	018 Move V10, V2
	019 Move V11, V1
	020 Move V12, V0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x472000
	026 Move X0, [X0+3168]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3115], W8
	030 Move X0, [X20]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+32], W31
	033 Move [X31], V0
	034 Move [X31+8], V0
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 0
	040 Add X0, X31, 56
	041 Move TEMP, 4
	042 Not TEMP
	043 Move W1, TEMP
	044 Move V0, V12
	045 Move V1, V11
	046 Move V2, V10
	047 Move V3, V9
	048 Move V4, V8
	049 Move [X31+56], W31
	050 Call PhysicsScene2D.Raycast, X0, X1, X2, V0, X3
	051 Move W8, [X31+32]
	052 Move V1, [X31]
	053 Move V0, [X31+16]
	054 Move X30, [X31+96]
	055 Move X21, [X31+104]
	056 Move D9, [X31+80]
	057 Move D8, [X31+88]
	058 Move [X19+32], W8
	059 Move [X19], V1
	060 Move [X19+8], V0
	061 Move X20, [X31+112]
	062 Move X19, [X31+120]
	063 Move D11, [X31+64]
	064 Move D10, [X31+72]
	065 Move V12, [X31+48]
	066 Add X31, X31, 128
	067 Return X0

Method: UnityEngine.RaycastHit2D Raycast(UnityEngine.Vector2 origin, UnityEngine.Vector2 direction, System.Single distance, System.Int32 layerMask)

Disassembly:
	0x03C89B0C ADD X0, X0, 0x1D5
	0x03C89B10 BL 0x1C16CB8
	0x03C89B14 MOV X1, X0
	0x03C89B18 STR X0, [X20 + 0xC90]
	0x03C89B1C MOV X0, X19
	0x03C89B20 LDP X20, X19, [X31 + 0x10]
	0x03C89B24 LDR X30, [X31 + 0x8]
	0x03C89B28 MOV V0.16B, V8.16B
	0x03C89B2C LDR V8, [X31], #0x20
	0x03C89B30 BR X1
	0x03C89B34 STR X30, [X31 - 0x20]!
	0x03C89B38 STP X20, X19, [X31 + 0x10]
	0x03C89B3C ADRP X20, 0x75D000
	0x03C89B40 LDR X1, [X20 + 0xC98]
	0x03C89B44 MOV X19, X0
	0x03C89B48 CBNZ X1, 0x3C89B60
	0x03C89B4C ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C89B50 ADD X0, X0, 0x9E8
	0x03C89B54 BL 0x1C16CB8
	0x03C89B58 MOV X1, X0
	0x03C89B5C STR X0, [X20 + 0xC98]
	0x03C89B60 MOV X0, X19
	0x03C89B64 LDP X20, X19, [X31 + 0x10]
	0x03C89B68 LDR X30, [X31], #0x20
	0x03C89B6C BR X1
	0x03C89B70 STR D8, [X31 - 0x20]!
	0x03C89B74 STR X30, [X31 + 0x8]
	0x03C89B78 STP X20, X19, [X31 + 0x10]
	0x03C89B7C ADRP X20, 0x75D000
	0x03C89B80 LDR X1, [X20 + 0xCA0]
	0x03C89B84 MOV V8.16B, V0.16B
	0x03C89B88 MOV X19, X0
	0x03C89B8C CBNZ X1, 0x3C89BA4
	0x03C89B90 ADRP X0, 0xFFFFFFFFFCE82000
	0x03C89B94 ADD X0, X0, 0xA18
	0x03C89B98 BL 0x1C16CB8
	0x03C89B9C MOV X1, X0
	0x03C89BA0 STR X0, [X20 + 0xCA0]
	0x03C89BA4 MOV X0, X19
	0x03C89BA8 LDP X20, X19, [X31 + 0x10]
	0x03C89BAC LDR X30, [X31 + 0x8]
	0x03C89BB0 MOV V0.16B, V8.16B
	0x03C89BB4 LDR V8, [X31], #0x20
	0x03C89BB8 BR X1
	0x03C89BBC STR X30, [X31 - 0x20]!
	0x03C89BC0 STP X20, X19, [X31 + 0x10]
	0x03C89BC4 ADRP X20, 0x75D000
	0x03C89BC8 LDR X1, [X20 + 0xCA8]
	0x03C89BCC MOV X19, X0
	0x03C89BD0 CBNZ X1, 0x3C89BE8
	0x03C89BD4 ADRP X0, 0xFFFFFFFFFCEA2000
	0x03C89BD8 ADD X0, X0, 0x1B7
	0x03C89BDC BL 0x1C16CB8
	0x03C89BE0 MOV X1, X0
	0x03C89BE4 STR X0, [X20 + 0xCA8]
	0x03C89BE8 MOV X0, X19
	0x03C89BEC LDP X20, X19, [X31 + 0x10]
	0x03C89BF0 LDR X30, [X31], #0x20
	0x03C89BF4 BR X1
	0x03C89BF8 STR D8, [X31 - 0x20]!
	0x03C89BFC STR X30, [X31 + 0x8]
	0x03C89C00 STP X20, X19, [X31 + 0x10]
	0x03C89C04 ADRP X20, 0x75D000
	0x03C89C08 LDR X1, [X20 + 0xCB0]
	0x03C89C0C MOV V8.16B, V0.16B
	0x03C89C10 MOV X19, X0
	0x03C89C14 CBNZ X1, 0x3C89C2C
	0x03C89C18 ADRP X0, 0xFFFFFFFFFCE84000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], D12
	003 Move [X31+168], D11
	004 Move [X31+176], D10
	005 Move [X31+184], D9
	006 Move [X31+192], D8
	007 Move [X31+200], X30
	008 Move [X31+208], X22
	009 Move [X31+216], X21
	010 Move [X31+224], X20
	011 Move [X31+232], X19
	012 Move X22, 0x75E000
	013 Move X21, 0x472000
	014 Move X19, X8
	015 Move W8, [X22+3116]
	016 Move X21, [X21+3168]
	017 Move W20, W0
	018 Move V8, V4
	019 Move V9, V3
	020 Move V10, V2
	021 Move V11, V1
	022 Move V12, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x472000
	028 Move X0, [X0+3168]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3116], W8
	032 Move W9, 0xFF800000
	033 Move W10, 0x7F800000
	034 Add X8, X31, 48
	035 Move S0, W9
	036 Move S1, W10
	037 Move W0, W20
	038 Move [X31+48], X31
	039 Move [X31+56], X31
	040 Move [X31+72], W31
	041 Move [X31+64], X31
	042 Call ContactFilter2D.CreateLegacyFilter, X0, V0, V1
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move V1, [X31+3]
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move [X31+112], V0
	052 Move [X31+120], V0
	053 Move [X31+5], V1
	054 Move [X31+92], V2
	055 Add X8, X31, 112
	056 Add X1, X31, 80
	057 Move X0, X31
	058 Move V0, V12
	059 Move V1, V11
	060 Move V2, V10
	061 Move V3, V9
	062 Move V4, V8
	063 Move [X31+144], W31
	064 Call PhysicsScene2D.Raycast_Internal, X0, X1, X2, V0, X3
	065 Move W8, [X31+144]
	066 Move V1, [X31+112]
	067 Move V0, [X31+128]
	068 Move X22, [X31+208]
	069 Move X21, [X31+216]
	070 Move X30, [X31+200]
	071 Move [X19+32], W8
	072 Move [X19], V1
	073 Move [X19+8], V0
	074 Move X20, [X31+224]
	075 Move X19, [X31+232]
	076 Move D9, [X31+184]
	077 Move D8, [X31+192]
	078 Move D11, [X31+168]
	079 Move D10, [X31+176]
	080 Move V12, [X31+160]
	081 Move [X31+32], W8
	082 Move [X31], V1
	083 Move [X31+8], V0
	084 Add X31, X31, 240
	085 Return X0

Method: UnityEngine.RaycastHit2D Raycast(UnityEngine.Vector2 origin, UnityEngine.Vector2 direction, System.Single distance, System.Int32 layerMask, System.Single minDepth)

Disassembly:
	0x03C89C1C ADD X0, X0, 0x8F5
	0x03C89C20 BL 0x1C16CB8
	0x03C89C24 MOV X1, X0
	0x03C89C28 STR X0, [X20 + 0xCB0]
	0x03C89C2C MOV X0, X19
	0x03C89C30 LDP X20, X19, [X31 + 0x10]
	0x03C89C34 LDR X30, [X31 + 0x8]
	0x03C89C38 MOV V0.16B, V8.16B
	0x03C89C3C LDR V8, [X31], #0x20
	0x03C89C40 BR X1
	0x03C89C44 STR X30, [X31 - 0x20]!
	0x03C89C48 STP X20, X19, [X31 + 0x10]
	0x03C89C4C ADRP X20, 0x75D000
	0x03C89C50 LDR X1, [X20 + 0xCB8]
	0x03C89C54 MOV X19, X0
	0x03C89C58 CBNZ X1, 0x3C89C70
	0x03C89C5C ADRP X0, 0xFFFFFFFFFCE7E000
	0x03C89C60 ADD X0, X0, 0x9CB
	0x03C89C64 BL 0x1C16CB8
	0x03C89C68 MOV X1, X0
	0x03C89C6C STR X0, [X20 + 0xCB8]
	0x03C89C70 MOV X0, X19
	0x03C89C74 LDP X20, X19, [X31 + 0x10]
	0x03C89C78 LDR X30, [X31], #0x20
	0x03C89C7C BR X1
	0x03C89C80 STR D8, [X31 - 0x20]!
	0x03C89C84 STR X30, [X31 + 0x8]
	0x03C89C88 STP X20, X19, [X31 + 0x10]
	0x03C89C8C ADRP X20, 0x75D000
	0x03C89C90 LDR X1, [X20 + 0xCC0]
	0x03C89C94 MOV V8.16B, V0.16B
	0x03C89C98 MOV X19, X0
	0x03C89C9C CBNZ X1, 0x3C89CB4
	0x03C89CA0 ADRP X0, 0xFFFFFFFFFCE6C000
	0x03C89CA4 ADD X0, X0, 0x8DC
	0x03C89CA8 BL 0x1C16CB8
	0x03C89CAC MOV X1, X0
	0x03C89CB0 STR X0, [X20 + 0xCC0]
	0x03C89CB4 MOV X0, X19
	0x03C89CB8 LDP X20, X19, [X31 + 0x10]
	0x03C89CBC LDR X30, [X31 + 0x8]
	0x03C89CC0 MOV V0.16B, V8.16B
	0x03C89CC4 LDR V8, [X31], #0x20
	0x03C89CC8 BR X1
	0x03C89CCC STR X30, [X31 - 0x20]!
	0x03C89CD0 STP X20, X19, [X31 + 0x10]
	0x03C89CD4 ADRP X20, 0x75D000
	0x03C89CD8 LDR X1, [X20 + 0xCC8]
	0x03C89CDC MOV X19, X0
	0x03C89CE0 CBNZ X1, 0x3C89CF8
	0x03C89CE4 ADRP X0, 0xFFFFFFFFFCE84000
	0x03C89CE8 ADD X0, X0, 0x92D
	0x03C89CEC BL 0x1C16CB8
	0x03C89CF0 MOV X1, X0
	0x03C89CF4 STR X0, [X20 + 0xCC8]
	0x03C89CF8 MOV X0, X19
	0x03C89CFC LDP X20, X19, [X31 + 0x10]
	0x03C89D00 LDR X30, [X31], #0x20
	0x03C89D04 BR X1
	0x03C89D08 STP X30, X21, [X31 - 0x20]!
	0x03C89D0C STP X20, X19, [X31 + 0x10]
	0x03C89D10 ADRP X21, 0x75D000
	0x03C89D14 LDR X2, [X21 + 0xCD0]
	0x03C89D18 MOV W19, W1
	0x03C89D1C MOV X20, X0
	0x03C89D20 CBNZ X2, 0x3C89D38
	0x03C89D24 ADRP X0, 0xFFFFFFFFFCE6C000
	0x03C89D28 ADD X0, X0, 0x915

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], D13
	003 Move [X31+168], D12
	004 Move [X31+176], D11
	005 Move [X31+184], D10
	006 Move [X31+192], D9
	007 Move [X31+200], D8
	008 Move [X31+208], X30
	009 Move [X31+224], X22
	010 Move [X31+232], X21
	011 Move [X31+240], X20
	012 Move [X31+248], X19
	013 Move X22, 0x75E000
	014 Move X21, 0x472000
	015 Move X19, X8
	016 Move W8, [X22+3117]
	017 Move X21, [X21+3168]
	018 Move V13, V5
	019 Move W20, W0
	020 Move V8, V4
	021 Move V9, V3
	022 Move V10, V2
	023 Move V11, V1
	024 Move V12, V0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x472000
	030 Move X0, [X0+3168]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+3117], W8
	034 Move W9, 0x7F800000
	035 Add X8, X31, 48
	036 Move S1, W9
	037 Move W0, W20
	038 Move V0, V13
	039 Move [X31+48], X31
	040 Move [X31+56], X31
	041 Move [X31+72], W31
	042 Move [X31+64], X31
	043 Call ContactFilter2D.CreateLegacyFilter, X0, V0, V1
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move V1, [X31+3]
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X31+112], V0
	053 Move [X31+120], V0
	054 Move [X31+5], V1
	055 Move [X31+92], V2
	056 Add X8, X31, 112
	057 Add X1, X31, 80
	058 Move X0, X31
	059 Move V0, V12
	060 Move V1, V11
	061 Move V2, V10
	062 Move V3, V9
	063 Move V4, V8
	064 Move [X31+144], W31
	065 Call PhysicsScene2D.Raycast_Internal, X0, X1, X2, V0, X3
	066 Move W8, [X31+144]
	067 Move V1, [X31+112]
	068 Move V0, [X31+128]
	069 Move X22, [X31+224]
	070 Move X21, [X31+232]
	071 Move X30, [X31+208]
	072 Move [X19+32], W8
	073 Move [X19], V1
	074 Move [X19+8], V0
	075 Move X20, [X31+240]
	076 Move X19, [X31+248]
	077 Move D9, [X31+192]
	078 Move D8, [X31+200]
	079 Move D11, [X31+176]
	080 Move D10, [X31+184]
	081 Move D13, [X31+160]
	082 Move D12, [X31+168]
	083 Move [X31+32], W8
	084 Move [X31], V1
	085 Move [X31+8], V0
	086 Add X31, X31, 256
	087 Return X0

Method: UnityEngine.RaycastHit2D Raycast(UnityEngine.Vector2 origin, UnityEngine.Vector2 direction, System.Single distance, System.Int32 layerMask, System.Single minDepth, System.Single maxDepth)

Disassembly:
	0x03C89D2C BL 0x1C16CB8
	0x03C89D30 MOV X2, X0
	0x03C89D34 STR X0, [X21 + 0xCD0]
	0x03C89D38 MOV X0, X20
	0x03C89D3C MOV W1, W19
	0x03C89D40 LDP X20, X19, [X31 + 0x10]
	0x03C89D44 LDP X30, X21, [X31], #0x20
	0x03C89D48 BR X2
	0x03C89D4C STR X30, [X31 - 0x20]!
	0x03C89D50 STP X20, X19, [X31 + 0x10]
	0x03C89D54 ADRP X20, 0x75D000
	0x03C89D58 LDR X8, [X20 + 0xCC8]
	0x03C89D5C MOV X19, X0
	0x03C89D60 CBNZ X8, 0x3C89D78
	0x03C89D64 ADRP X0, 0xFFFFFFFFFCE84000
	0x03C89D68 ADD X0, X0, 0x92D
	0x03C89D6C BL 0x1C16CB8
	0x03C89D70 MOV X8, X0
	0x03C89D74 STR X0, [X20 + 0xCC8]
	0x03C89D78 MOV X0, X19
	0x03C89D7C BLR X8
	0x03C89D80 LDP X20, X19, [X31 + 0x10]
	0x03C89D84 CMP W0, 0x1
	0x03C89D88 CSET W0, EQ
	0x03C89D8C LDR X30, [X31], #0x20
	0x03C89D90 RET
	0x03C89D94 STP X30, X21, [X31 - 0x20]!
	0x03C89D98 STP X20, X19, [X31 + 0x10]
	0x03C89D9C CBZ X0, 0x3C89DDC
	0x03C89DA0 ADRP X21, 0x75D000
	0x03C89DA4 LDR X2, [X21 + 0xCD0]
	0x03C89DA8 MOV W20, W1
	0x03C89DAC MOV X19, X0
	0x03C89DB0 CBNZ X2, 0x3C89DC8
	0x03C89DB4 ADRP X0, 0xFFFFFFFFFCE6C000
	0x03C89DB8 ADD X0, X0, 0x915
	0x03C89DBC BL 0x1C16CB8
	0x03C89DC0 MOV X2, X0
	0x03C89DC4 STR X0, [X21 + 0xCD0]
	0x03C89DC8 AND W1, W20, 0x1
	0x03C89DCC MOV X0, X19
	0x03C89DD0 LDP X20, X19, [X31 + 0x10]
	0x03C89DD4 LDP X30, X21, [X31], #0x20
	0x03C89DD8 BR X2
	0x03C89DDC BL 0x1C16F20
	0x03C89DE0 STR X30, [X31 - 0x20]!
	0x03C89DE4 STP X20, X19, [X31 + 0x10]
	0x03C89DE8 ADRP X20, 0x75D000
	0x03C89DEC LDR X1, [X20 + 0xCD8]
	0x03C89DF0 MOV X19, X0
	0x03C89DF4 CBNZ X1, 0x3C89E0C
	0x03C89DF8 ADRP X0, 0xFFFFFFFFFCE7A000
	0x03C89DFC ADD X0, X0, 0x998
	0x03C89E00 BL 0x1C16CB8
	0x03C89E04 MOV X1, X0
	0x03C89E08 STR X0, [X20 + 0xCD8]
	0x03C89E0C MOV X0, X19
	0x03C89E10 LDP X20, X19, [X31 + 0x10]
	0x03C89E14 LDR X30, [X31], #0x20
	0x03C89E18 BR X1
	0x03C89E1C STP X30, X21, [X31 - 0x20]!
	0x03C89E20 STP X20, X19, [X31 + 0x10]
	0x03C89E24 ADRP X21, 0x75D000
	0x03C89E28 LDR X2, [X21 + 0xCE0]
	0x03C89E2C MOV W19, W1
	0x03C89E30 MOV X20, X0
	0x03C89E34 CBNZ X2, 0x3C89E4C
	0x03C89E38 ADRP X0, 0xFFFFFFFFFCE8E000
	0x03C89E3C ADD X0, X0, 0x206
	0x03C89E40 BL 0x1C16CB8

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+160], D14
	003 Move [X31+176], D13
	004 Move [X31+184], D12
	005 Move [X31+192], D11
	006 Move [X31+200], D10
	007 Move [X31+208], D9
	008 Move [X31+216], D8
	009 Move [X31+224], X29
	010 Move [X31+232], X30
	011 Move [X31+240], X22
	012 Move [X31+248], X21
	013 Move [X31+256], X20
	014 Move [X31+264], X19
	015 Move X22, 0x75E000
	016 Move X21, 0x472000
	017 Move X19, X8
	018 Move W8, [X22+3118]
	019 Move X21, [X21+3168]
	020 Move V13, V6
	021 Move V14, V5
	022 Move W20, W0
	023 Move V8, V4
	024 Move V9, V3
	025 Move V10, V2
	026 Move V11, V1
	027 Move V12, V0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x472000
	033 Move X0, [X0+3168]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+3118], W8
	037 Add X8, X31, 48
	038 Move W0, W20
	039 Move V0, V14
	040 Move V1, V13
	041 Move [X31+48], X31
	042 Move [X31+56], X31
	043 Move [X31+72], W31
	044 Move [X31+64], X31
	045 Call ContactFilter2D.CreateLegacyFilter, X0, V0, V1
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move V1, [X31+3]
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction MOVI not yet implemented."
	054 Move [X31+112], V0
	055 Move [X31+120], V0
	056 Move [X31+5], V1
	057 Move [X31+92], V2
	058 Add X8, X31, 112
	059 Add X1, X31, 80
	060 Move X0, X31
	061 Move V0, V12
	062 Move V1, V11
	063 Move V2, V10
	064 Move V3, V9
	065 Move V4, V8
	066 Move [X31+144], W31
	067 Call PhysicsScene2D.Raycast_Internal, X0, X1, X2, V0, X3
	068 Move W8, [X31+144]
	069 Move V1, [X31+112]
	070 Move V0, [X31+128]
	071 Move X22, [X31+240]
	072 Move X21, [X31+248]
	073 Move X29, [X31+224]
	074 Move X30, [X31+232]
	075 Move [X19+32], W8
	076 Move [X19], V1
	077 Move [X19+8], V0
	078 Move X20, [X31+256]
	079 Move X19, [X31+264]
	080 Move D9, [X31+208]
	081 Move D8, [X31+216]
	082 Move D11, [X31+192]
	083 Move D10, [X31+200]
	084 Move D13, [X31+176]
	085 Move D12, [X31+184]
	086 Move V14, [X31+160]
	087 Move [X31+32], W8
	088 Move [X31], V1
	089 Move [X31+8], V0
	090 Add X31, X31, 272
	091 Return X0

Method: System.Int32 Raycast(UnityEngine.Vector2 origin, UnityEngine.Vector2 direction, UnityEngine.ContactFilter2D contactFilter, UnityEngine.RaycastHit2D[] results)

Disassembly:
	0x03C89E44 MOV X2, X0
	0x03C89E48 STR X0, [X21 + 0xCE0]
	0x03C89E4C MOV X0, X20
	0x03C89E50 MOV W1, W19
	0x03C89E54 LDP X20, X19, [X31 + 0x10]
	0x03C89E58 LDP X30, X21, [X31], #0x20
	0x03C89E5C BR X2
	0x03C89E60 STR X30, [X31 - 0x20]!
	0x03C89E64 STP X20, X19, [X31 + 0x10]
	0x03C89E68 ADRP X20, 0x75D000
	0x03C89E6C LDR X1, [X20 + 0xCE8]
	0x03C89E70 MOV X19, X0
	0x03C89E74 CBNZ X1, 0x3C89E8C
	0x03C89E78 ADRP X0, 0xFFFFFFFFFCE6C000
	0x03C89E7C ADD X0, X0, 0x958
	0x03C89E80 BL 0x1C16CB8
	0x03C89E84 MOV X1, X0
	0x03C89E88 STR X0, [X20 + 0xCE8]
	0x03C89E8C MOV X0, X19
	0x03C89E90 LDP X20, X19, [X31 + 0x10]
	0x03C89E94 LDR X30, [X31], #0x20
	0x03C89E98 BR X1
	0x03C89E9C STR X30, [X31 - 0x20]!
	0x03C89EA0 STP X20, X19, [X31 + 0x10]
	0x03C89EA4 ADRP X20, 0x75D000
	0x03C89EA8 LDR X1, [X20 + 0xCF0]
	0x03C89EAC MOV X19, X0
	0x03C89EB0 CBNZ X1, 0x3C89EC8
	0x03C89EB4 ADRP X0, 0xFFFFFFFFFCE80000
	0x03C89EB8 ADD X0, X0, 0xB64
	0x03C89EBC BL 0x1C16CB8
	0x03C89EC0 MOV X1, X0
	0x03C89EC4 STR X0, [X20 + 0xCF0]
	0x03C89EC8 MOV X0, X19
	0x03C89ECC LDP X20, X19, [X31 + 0x10]
	0x03C89ED0 LDR X30, [X31], #0x20
	0x03C89ED4 BR X1
	0x03C89ED8 STR X30, [X31 - 0x20]!
	0x03C89EDC STP X20, X19, [X31 + 0x10]
	0x03C89EE0 ADRP X20, 0x75D000
	0x03C89EE4 LDR X1, [X20 + 0xCF8]
	0x03C89EE8 MOV X19, X0
	0x03C89EEC CBNZ X1, 0x3C89F04
	0x03C89EF0 ADRP X0, 0xFFFFFFFFFCE7A000
	0x03C89EF4 ADD X0, X0, 0x9C3
	0x03C89EF8 BL 0x1C16CB8
	0x03C89EFC MOV X1, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D11
	003 Move [X31+40], D10
	004 Move [X31+48], D9
	005 Move [X31+56], D8
	006 Move [X31+64], X30
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X22, 0x75E000
	012 Move X21, 0x472000
	013 Move W8, [X22+3119]
	014 Move X21, [X21+3168]
	015 Move X19, X1
	016 Move X20, X0
	017 Move V8, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x472000
	026 Move X0, [X0+3168]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3119], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Move V1, [X20]
	037 Move W8, 0x7F800000
	038 Add X1, X31, 0
	039 Move [X31+12], V0
	040 Move [X31], V1
	041 Move S4, W8
	042 Move X0, X31
	043 Move V0, V11
	044 Move V1, V10
	045 Move V2, V9
	046 Move V3, V8
	047 Move X2, X19
	048 Call PhysicsScene2D.RaycastArray_Internal, X0, X1, X2, V0, X3, X4
	049 Move X20, [X31+96]
	050 Move X19, [X31+104]
	051 Move X22, [X31+80]
	052 Move X21, [X31+88]
	053 Move X30, [X31+64]
	054 Move D9, [X31+48]
	055 Move D8, [X31+56]
	056 Move D11, [X31+32]
	057 Move D10, [X31+40]
	058 Add X31, X31, 112
	059 Return X0

Method: System.Int32 Raycast(UnityEngine.Vector2 origin, UnityEngine.Vector2 direction, UnityEngine.ContactFilter2D contactFilter, UnityEngine.RaycastHit2D[] results, System.Single distance)

Disassembly:
	0x03C89F00 STR X0, [X20 + 0xCF8]
	0x03C89F04 MOV X0, X19
	0x03C89F08 LDP X20, X19, [X31 + 0x10]
	0x03C89F0C LDR X30, [X31], #0x20
	0x03C89F10 BR X1
	0x03C89F14 SUB X31, X31, 0x40
	0x03C89F18 STP X30, X21, [X31 + 0x20]
	0x03C89F1C STP X20, X19, [X31 + 0x30]
	0x03C89F20 ADRP X21, 0x75D000
	0x03C89F24 MOV X19, X8
	0x03C89F28 LDR X8, [X21 + 0xD20]
	0x03C89F2C MOV X20, X0
	0x03C89F30 STP X31, X31, [X31 + 0x8]
	0x03C89F34 STR X31, [X31 + 0x18]
	0x03C89F38 CBNZ X8, 0x3C89F50
	0x03C89F3C ADRP X0, 0xFFFFFFFFFCE78000
	0x03C89F40 ADD X0, X0, 0x6AD
	0x03C89F44 BL 0x1C16CB8
	0x03C89F48 MOV X8, X0
	0x03C89F4C STR X0, [X21 + 0xD20]
	0x03C89F50 ADD X1, X31, 0x8
	0x03C89F54 MOV X0, X20
	0x03C89F58 BLR X8
	0x03C89F5C LDR X8, [X31 + 0x18]
	0x03C89F60 LDUR V0, [X31 + 0x8]
	0x03C89F64 LDP X30, X21, [X31 + 0x20]
	0x03C89F68 STR X8, [X19 + 0x10]
	0x03C89F6C STR V0, [X19]
	0x03C89F70 LDP X20, X19, [X31 + 0x30]
	0x03C89F74 ADD X31, X31, 0x40
	0x03C89F78 RET
	0x03C89F7C STP X30, X21, [X31 - 0x20]!
	0x03C89F80 STP X20, X19, [X31 + 0x10]
	0x03C89F84 ADRP X21, 0x75D000
	0x03C89F88 LDR X2, [X21 + 0xD20]
	0x03C89F8C MOV X19, X1
	0x03C89F90 MOV X20, X0
	0x03C89F94 CBNZ X2, 0x3C89FAC
	0x03C89F98 ADRP X0, 0xFFFFFFFFFCE78000
	0x03C89F9C ADD X0, X0, 0x6AD
	0x03C89FA0 BL 0x1C16CB8
	0x03C89FA4 MOV X2, X0
	0x03C89FA8 STR X0, [X21 + 0xD20]
	0x03C89FAC MOV X0, X20
	0x03C89FB0 MOV X1, X19
	0x03C89FB4 LDP X20, X19, [X31 + 0x10]
	0x03C89FB8 LDP X30, X21, [X31], #0x20
	0x03C89FBC BR X2
	0x03C89FC0 LDP S0, S1, [X0 + 0x28]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D12
	003 Move [X31+40], D11
	004 Move [X31+48], D10
	005 Move [X31+56], D9
	006 Move [X31+64], D8
	007 Move [X31+72], X30
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X22, 0x75E000
	013 Move X21, 0x472000
	014 Move W8, [X22+3120]
	015 Move X21, [X21+3168]
	016 Move V8, V4
	017 Move X19, X1
	018 Move X20, X0
	019 Move V9, V3
	020 Move V10, V2
	021 Move V11, V1
	022 Move V12, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x472000
	028 Move X0, [X0+3168]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3120], W8
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 Move V1, [X20]
	039 Add X1, X31, 0
	040 Move X0, X31
	041 Move [X31+12], V0
	042 Move [X31], V1
	043 Move V0, V12
	044 Move V1, V11
	045 Move V2, V10
	046 Move V3, V9
	047 Move V4, V8
	048 Move X2, X19
	049 Call PhysicsScene2D.RaycastArray_Internal, X0, X1, X2, V0, X3, X4
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X30, [X31+72]
	055 Move D9, [X31+56]
	056 Move D8, [X31+64]
	057 Move D11, [X31+40]
	058 Move D10, [X31+48]
	059 Move V12, [X31+32]
	060 Add X31, X31, 112
	061 Return X0

Method: System.Int32 Raycast(UnityEngine.Vector2 origin, UnityEngine.Vector2 direction, UnityEngine.ContactFilter2D contactFilter, System.Collections.Generic.List`1<UnityEngine.RaycastHit2D> results, System.Single distance = ∞)

Disassembly:
	0x03C89FC4 LDR V2, [X0 + 0x30]
	0x03C89FC8 LDRB W8, [X0 + 0x60]
	0x03C89FCC FNEG S3, S0
	0x03C89FD0 FNEG S4, S1
	0x03C89FD4 FNEG S5, S2
	0x03C89FD8 CMP W8, 0x0
	0x03C89FDC FCSEL S2, S5, S2, EQ
	0x03C89FE0 FCSEL S1, S4, S1, EQ
	0x03C89FE4 FCSEL S0, S3, S0, EQ
	0x03C89FE8 RET
	0x03C89FEC STR X30, [X31 - 0x20]!
	0x03C89FF0 STP X20, X19, [X31 + 0x10]
	0x03C89FF4 ADRP X20, 0x75D000
	0x03C89FF8 LDRB W8, [X20 + 0xD28]
	0x03C89FFC MOV X19, X0
	0x03C8A000 TBNZ X8, 0x0, 0x3C8A018
	0x03C8A004 ADRP X0, 0x4D6000
	0x03C8A008 LDR X0, [X0 + 0x8D8]
	0x03C8A00C BL 0x1C16CF4
	0x03C8A010 MOVZ W8, 0x1
	0x03C8A014 STRB W8, [X20 + 0xD28]
	0x03C8A018 MOV X0, X19
	0x03C8A01C BL 0x3C8A06C
	0x03C8A020 CBZ X0, 0x3C8A060
	0x03C8A024 ADRP X8, 0x4D6000
	0x03C8A028 LDR X8, [X8 + 0x8D8]
	0x03C8A02C LDR X9, [X0]
	0x03C8A030 LDR X8, [X8]
	0x03C8A034 LDRB W11, [X9 + 0x130]
	0x03C8A038 LDRB W10, [X8 + 0x130]
	0x03C8A03C CMP W11, W10
	0x03C8A040 B.CS 0x3C8A04C
	0x03C8A044 MOV X0, X31
	0x03C8A048 B 0x3C8A060
	0x03C8A04C LDR X9, [X9 + 0xC8]
	0x03C8A050 ADD X9, X9, X10, 0x3, LSL
	0x03C8A054 LDUR X9, [X9 - 0x8]
	0x03C8A058 CMP X9, X8
	0x03C8A05C CSEL X0, X0, X31, EQ
	0x03C8A060 LDP X20, X19, [X31 + 0x10]
	0x03C8A064 LDR X30, [X31], #0x20
	0x03C8A068 RET
	0x03C8A06C LDRB W8, [X0 + 0x60]
	0x03C8A070 ADD X0, X0, 0x10
	0x03C8A074 CBZ W8, 0x3C8A07C
	0x03C8A078 B 0x3C8A0F8
	0x03C8A07C B 0x3C8A080
	0x03C8A080 STP X30, X21, [X31 - 0x20]!
	0x03C8A084 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D12
	003 Move [X31+40], D11
	004 Move [X31+48], D10
	005 Move [X31+56], D9
	006 Move [X31+64], D8
	007 Move [X31+72], X30
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X22, 0x75E000
	013 Move X21, 0x472000
	014 Move W8, [X22+3121]
	015 Move X21, [X21+3168]
	016 Move V8, V4
	017 Move X19, X1
	018 Move X20, X0
	019 Move V9, V3
	020 Move V10, V2
	021 Move V11, V1
	022 Move V12, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x471000
	028 Move X0, [X0+3168]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3121], W8
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 Move V1, [X20]
	039 Add X1, X31, 0
	040 Move X0, X31
	041 Move [X31+12], V0
	042 Move [X31], V1
	043 Move V0, V12
	044 Move V1, V11
	045 Move V2, V10
	046 Move V3, V9
	047 Move V4, V8
	048 Move X2, X19
	049 Call PhysicsScene2D.RaycastList_Internal, X0, X1, X2, V0, X3, X4
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X30, [X31+72]
	055 Move D9, [X31+56]
	056 Move D8, [X31+64]
	057 Move D11, [X31+40]
	058 Move D10, [X31+48]
	059 Move V12, [X31+32]
	060 Add X31, X31, 112
	061 Return X0

Method: UnityEngine.RaycastHit2D GetRayIntersection(UnityEngine.Ray ray, System.Single distance, System.Int32 layerMask)

Disassembly:
	0x03C8A088 ADRP X21, 0x75D000
	0x03C8A08C ADRP X20, 0x469000
	0x03C8A090 LDRB W8, [X21 + 0x69]
	0x03C8A094 LDR X20, [X20 + 0x5F8]
	0x03C8A098 MOV X19, X0
	0x03C8A09C TBNZ X8, 0x0, 0x3C8A0B4
	0x03C8A0A0 ADRP X0, 0x469000
	0x03C8A0A4 LDR X0, [X0 + 0x5F8]
	0x03C8A0A8 BL 0x1C16CF4
	0x03C8A0AC MOVZ W8, 0x1
	0x03C8A0B0 STRB W8, [X21 + 0x69]
	0x03C8A0B4 LDR X0, [X20]
	0x03C8A0B8 LDR W19, [X19 + 0x4]
	0x03C8A0BC LDR W8, [X0 + 0xE0]
	0x03C8A0C0 CBNZ W8, 0x3C8A0C8
	0x03C8A0C4 BL 0x1C16DFC
	0x03C8A0C8 ADRP X20, 0x75C000
	0x03C8A0CC LDR X1, [X20 + 0xDD8]
	0x03C8A0D0 CBNZ X1, 0x3C8A0E8
	0x03C8A0D4 ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C8A0D8 ADD X0, X0, 0xFF
	0x03C8A0DC BL 0x1C16CB8
	0x03C8A0E0 MOV X1, X0
	0x03C8A0E4 STR X0, [X20 + 0xDD8]
	0x03C8A0E8 MOV W0, W19
	0x03C8A0EC LDP X20, X19, [X31 + 0x10]
	0x03C8A0F0 LDP X30, X21, [X31], #0x20
	0x03C8A0F4 BR X1
	0x03C8A0F8 STP X30, X21, [X31 - 0x20]!
	0x03C8A0FC STP X20, X19, [X31 + 0x10]
	0x03C8A100 ADRP X21, 0x75D000
	0x03C8A104 ADRP X20, 0x469000
	0x03C8A108 LDRB W8, [X21 + 0x68]
	0x03C8A10C LDR X20, [X20 + 0x5F8]
	0x03C8A110 MOV X19, X0
	0x03C8A114 TBNZ X8, 0x0, 0x3C8A12C
	0x03C8A118 ADRP X0, 0x469000
	0x03C8A11C LDR X0, [X0 + 0x5F8]
	0x03C8A120 BL 0x1C16CF4
	0x03C8A124 MOVZ W8, 0x1
	0x03C8A128 STRB W8, [X21 + 0x68]
	0x03C8A12C LDR X0, [X20]
	0x03C8A130 LDR W19, [X19]
	0x03C8A134 LDR W8, [X0 + 0xE0]
	0x03C8A138 CBNZ W8, 0x3C8A140
	0x03C8A13C BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], D8
	003 Move [X31+112], X30
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X22, 0x75D000
	010 Move X23, 0x471000
	011 Move X19, X8
	012 Move W8, [X22+3122]
	013 Move X23, [X23+3168]
	014 Move W20, W1
	015 Move V8, V0
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x471000
	022 Move X0, [X0+3168]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3122], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move S0, [X21]
	032 Move S1, [X21+4]
	033 Move S2, [X21+8]
	034 Move S3, [X21+12]
	035 Move S4, [X21+16]
	036 Move S5, [X21+20]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+48], V6
	039 Move [X31+56], V6
	040 Add X8, X31, 48
	041 Move X0, X31
	042 Move V6, V8
	043 Move W1, W20
	044 Move [X31+80], W31
	045 Call PhysicsScene2D.GetRayIntersection_Internal, X0, X1, X2, V0, X3
	046 Move W8, [X31+80]
	047 Move V1, [X31+48]
	048 Move V0, [X31+64]
	049 Move X22, [X31+128]
	050 Move X21, [X31+136]
	051 Move X30, [X31+112]
	052 Move X23, [X31+120]
	053 Move [X19+32], W8
	054 Move [X19], V1
	055 Move [X19+8], V0
	056 Move X20, [X31+144]
	057 Move X19, [X31+152]
	058 Move V8, [X31+96]
	059 Move [X31+32], W8
	060 Move [X31], V1
	061 Move [X31+8], V0
	062 Add X31, X31, 160
	063 Return X0

Method: UnityEngine.RaycastHit2D[] GetRayIntersectionAll(UnityEngine.Ray ray)

Disassembly:
	0x03C8A140 ADRP X20, 0x75C000
	0x03C8A144 LDR X1, [X20 + 0xDD8]
	0x03C8A148 CBNZ X1, 0x3C8A160
	0x03C8A14C ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C8A150 ADD X0, X0, 0xFF
	0x03C8A154 BL 0x1C16CB8
	0x03C8A158 MOV X1, X0
	0x03C8A15C STR X0, [X20 + 0xDD8]
	0x03C8A160 MOV W0, W19
	0x03C8A164 LDP X20, X19, [X31 + 0x10]
	0x03C8A168 LDP X30, X21, [X31], #0x20
	0x03C8A16C BR X1
	0x03C8A170 LDRB W8, [X0 + 0x60]
	0x03C8A174 ADD X0, X0, 0x38
	0x03C8A178 CBZ W8, 0x3C8A180
	0x03C8A17C B 0x3C8A210
	0x03C8A180 B 0x3C8A184
	0x03C8A184 STR X30, [X31 - 0x20]!
	0x03C8A188 STP X20, X19, [X31 + 0x10]
	0x03C8A18C ADRP X20, 0x75D000
	0x03C8A190 LDRB W8, [X20 + 0x6B]
	0x03C8A194 MOV X19, X0
	0x03C8A198 TBNZ X8, 0x0, 0x3C8A1B0
	0x03C8A19C ADRP X0, 0x469000
	0x03C8A1A0 LDR X0, [X0 + 0x5F8]
	0x03C8A1A4 BL 0x1C16CF4
	0x03C8A1A8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x75D000
	006 Move X21, 0x471000
	007 Move W8, [X20+3123]
	008 Move X21, [X21+3168]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x471000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3123], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move S0, [X19]
	025 Move S1, [X19+4]
	026 Move S2, [X19+8]
	027 Move S3, [X19+12]
	028 Move S4, [X19+16]
	029 Move S5, [X19+20]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move W8, 0x7F800000
	033 Move TEMP, 4
	034 Not TEMP
	035 Move W1, TEMP
	036 Move S6, W8
	037 Move X0, X31
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]

Method: UnityEngine.RaycastHit2D[] GetRayIntersectionAll(UnityEngine.Ray ray, System.Single distance)

Disassembly:
	0x03C8A25C ADRP X20, 0x75C000
	0x03C8A260 LDR X1, [X20 + 0xDD0]
	0x03C8A264 CBNZ X1, 0x3C8A27C
	0x03C8A268 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C8A26C ADD X0, X0, 0x351
	0x03C8A270 BL 0x1C16CB8
	0x03C8A274 MOV X1, X0
	0x03C8A278 STR X0, [X20 + 0xDD0]
	0x03C8A27C MOV W0, W19
	0x03C8A280 LDP X20, X19, [X31 + 0x10]
	0x03C8A284 LDR X30, [X31], #0x20
	0x03C8A288 BR X1
	0x03C8A28C LDP X20, X19, [X31 + 0x10]
	0x03C8A290 MOV X0, X31
	0x03C8A294 LDR X30, [X31], #0x20
	0x03C8A298 RET
	0x03C8A29C STP X30, X21, [X31 - 0x20]!
	0x03C8A2A0 STP X20, X19, [X31 + 0x10]
	0x03C8A2A4 ADRP X21, 0x75C000
	0x03C8A2A8 ADRP X20, 0x469000
	0x03C8A2AC LDRB W8, [X21 + 0xD29]
	0x03C8A2B0 LDR X20, [X20 + 0x598]
	0x03C8A2B4 MOV X19, X0
	0x03C8A2B8 TBNZ X8, 0x0, 0x3C8A2D0
	0x03C8A2BC ADRP X0, 0x469000
	0x03C8A2C0 LDR X0, [X0 + 0x598]
	0x03C8A2C4 BL 0x1C16CF4
	0x03C8A2C8 MOVZ W8, 0x1
	0x03C8A2CC STRB W8, [X21 + 0xD29]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x75D000
	007 Move X21, 0x471000
	008 Move W8, [X20+3124]
	009 Move X21, [X21+3168]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x471000
	017 Move X0, [X0+3168]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3124], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move S0, [X19]
	027 Move S1, [X19+4]
	028 Move S2, [X19+8]
	029 Move S3, [X19+12]
	030 Move S4, [X19+16]
	031 Move S5, [X19+20]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Move TEMP, 4
	037 Not TEMP
	038 Move W1, TEMP
	039 Move X0, X31
	040 Move V6, V8
	041 Move V8, [X31+48]
	042 Call Physics2D.GetRayIntersectionAll_Internal, X0, X1, X2, V0, X3
	043 Return X0

Method: UnityEngine.RaycastHit2D[] GetRayIntersectionAll(UnityEngine.Ray ray, System.Single distance, System.Int32 layerMask)

Disassembly:
	0x03C8A2D0 MOV X0, X19
	0x03C8A2D4 BL 0x3C8A06C
	0x03C8A2D8 LDR X8, [X20]
	0x03C8A2DC MOV X20, X0
	0x03C8A2E0 LDR W9, [X8 + 0xE0]
	0x03C8A2E4 CBNZ W9, 0x3C8A2F0
	0x03C8A2E8 MOV X0, X8
	0x03C8A2EC BL 0x1C16DFC
	0x03C8A2F0 MOV X0, X20
	0x03C8A2F4 MOV X1, X31
	0x03C8A2F8 MOV X2, X31
	0x03C8A2FC BL 0x3C354F8
	0x03C8A300 TBZ X0, 0x0, 0x3C8A320
	0x03C8A304 MOV X0, X19
	0x03C8A308 BL 0x3C8A06C
	0x03C8A30C CBZ X0, 0x3C8A32C
	0x03C8A310 LDP X20, X19, [X31 + 0x10]
	0x03C8A314 MOV X1, X31
	0x03C8A318 LDP X30, X21, [X31], #0x20
	0x03C8A31C B 0x3C32ECC
	0x03C8A320 MOV X0, X19
	0x03C8A324 BL 0x3C8A170
	0x03C8A328 CBNZ X0, 0x3C8A310
	0x03C8A32C BL 0x1C16F20
	0x03C8A330 AND W8, W1, 0x1
	0x03C8A334 STRB W8, [X0 + 0x60]
	0x03C8A338 RET
	0x03C8A33C LDR W0, [X0 + 0x48]
	0x03C8A340 RET
	0x03C8A344 STP X30, X23, [X31 - 0x30]!
	0x03C8A348 STP X22, X21, [X31 + 0x10]
	0x03C8A34C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x75D000
	008 Move X22, 0x471000
	009 Move W8, [X21+3125]
	010 Move X22, [X22+3168]
	011 Move W19, W1
	012 Move V8, V0
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x471000
	019 Move X0, [X0+3168]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3125], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move S0, [X20]
	029 Move S1, [X20+4]
	030 Move S2, [X20+8]
	031 Move S3, [X20+12]
	032 Move S4, [X20+16]
	033 Move S5, [X20+20]
	034 Move W1, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+8]
	040 Move X0, X31
	041 Move V6, V8
	042 Move V8, [X31+48]
	043 Call Physics2D.GetRayIntersectionAll_Internal, X0, X1, X2, V0, X3
	044 Return X0

Method: UnityEngine.RaycastHit2D[] GetRayIntersectionAll_Internal(UnityEngine.PhysicsScene2D physicsScene, UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single distance, System.Int32 layerMask)

Disassembly:
	0x03C8A1AC STRB W8, [X20 + 0x6B]
	0x03C8A1B0 LDR W19, [X19 + 0x4]
	0x03C8A1B4 CBZ W19, 0x3C8A200
	0x03C8A1B8 ADRP X8, 0x469000
	0x03C8A1BC LDR X8, [X8 + 0x5F8]
	0x03C8A1C0 LDR X0, [X8]
	0x03C8A1C4 LDR W8, [X0 + 0xE0]
	0x03C8A1C8 CBNZ W8, 0x3C8A1D0
	0x03C8A1CC BL 0x1C16DFC
	0x03C8A1D0 ADRP X20, 0x75C000
	0x03C8A1D4 LDR X1, [X20 + 0xDD0]
	0x03C8A1D8 CBNZ X1, 0x3C8A1F0
	0x03C8A1DC ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C8A1E0 ADD X0, X0, 0x351
	0x03C8A1E4 BL 0x1C16CB8
	0x03C8A1E8 MOV X1, X0
	0x03C8A1EC STR X0, [X20 + 0xDD0]
	0x03C8A1F0 MOV W0, W19
	0x03C8A1F4 LDP X20, X19, [X31 + 0x10]
	0x03C8A1F8 LDR X30, [X31], #0x20
	0x03C8A1FC BR X1
	0x03C8A200 LDP X20, X19, [X31 + 0x10]
	0x03C8A204 MOV X0, X31
	0x03C8A208 LDR X30, [X31], #0x20
	0x03C8A20C RET
	0x03C8A210 STR X30, [X31 - 0x20]!
	0x03C8A214 STP X20, X19, [X31 + 0x10]
	0x03C8A218 ADRP X20, 0x75D000
	0x03C8A21C LDRB W8, [X20 + 0x6A]
	0x03C8A220 MOV X19, X0
	0x03C8A224 TBNZ X8, 0x0, 0x3C8A23C
	0x03C8A228 ADRP X0, 0x469000
	0x03C8A22C LDR X0, [X0 + 0x5F8]
	0x03C8A230 BL 0x1C16CF4
	0x03C8A234 MOVZ W8, 0x1
	0x03C8A238 STRB W8, [X20 + 0x6A]
	0x03C8A23C LDR W19, [X19]
	0x03C8A240 CBZ W19, 0x3C8A28C
	0x03C8A244 ADRP X8, 0x469000
	0x03C8A248 LDR X8, [X8 + 0x5F8]
	0x03C8A24C LDR X0, [X8]
	0x03C8A250 LDR W8, [X0 + 0xE0]
	0x03C8A254 CBNZ W8, 0x3C8A25C
	0x03C8A258 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D8
	003 Move [X31+48], X30
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move [X31+40], W0
	008 Move [X31+16], S0
	009 Move [X31+24], S1
	010 Move [X31+24], S2
	011 Move X20, 0x75D000
	012 Move [X31], S3
	013 Move [X31+8], S4
	014 Move [X31+8], S5
	015 Move X21, 0x471000
	016 Move W8, [X20+3126]
	017 Move X21, [X21+3168]
	018 Move W19, W1
	019 Move V8, V6
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x471000
	025 Move X0, [X0+3168]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3126], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X20, 0x75D000
	035 Move X8, [X20+3144]
	036 Compare X8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, -52011008
	039 Add X0, X0, 1896
	040 Call 0x1C17CB8
	041 Move X8, X0
	042 Move [X20+3144], X0
	043 Add X0, X31, 40
	044 Add X1, X31, 16
	045 Add X2, X31, 0
	046 Move V0, V8
	047 Move W3, W19
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X30, [X31+48]
	052 Move X21, [X31+56]
	053 Move V8, [X31+32]
	054 Add X31, X31, 80
	055 Return X0

Method: System.Int32 GetRayIntersectionNonAlloc(UnityEngine.Ray ray, UnityEngine.RaycastHit2D[] results)

Disassembly:
	0x03C8A3BC STR X0, [X23 + 0x70]
	0x03C8A3C0 CMP W22, 0x0
	0x03C8A3C4 CSET W2, NE
	0x03C8A3C8 MOV X0, X20
	0x03C8A3CC MOV X1, X21
	0x03C8A3D0 BLR X8
	0x03C8A3D4 LDR X0, [X19 + 0x68]
	0x03C8A3D8 LDP X20, X19, [X31 + 0x20]
	0x03C8A3DC LDP X22, X21, [X31 + 0x10]
	0x03C8A3E0 LDP X30, X23, [X31], #0x30
	0x03C8A3E4 RET
	0x03C8A3E8 STR X30, [X31 - 0x30]!
	0x03C8A3EC STP X22, X21, [X31 + 0x10]
	0x03C8A3F0 STP X20, X19, [X31 + 0x20]
	0x03C8A3F4 ADRP X22, 0x75D000
	0x03C8A3F8 LDR X3, [X22 + 0x70]
	0x03C8A3FC MOV W20, W2
	0x03C8A400 MOV X19, X1
	0x03C8A404 MOV X21, X0
	0x03C8A408 CBNZ X3, 0x3C8A420
	0x03C8A40C ADRP X0, 0xFFFFFFFFFCE6F000
	0x03C8A410 ADD X0, X0, 0xD2A
	0x03C8A414 BL 0x1C16CB8
	0x03C8A418 MOV X3, X0
	0x03C8A41C STR X0, [X22 + 0x70]
	0x03C8A420 AND W2, W20, 0x1
	0x03C8A424 MOV X0, X21
	0x03C8A428 MOV X1, X19
	0x03C8A42C LDP X20, X19, [X31 + 0x20]
	0x03C8A430 LDP X22, X21, [X31 + 0x10]
	0x03C8A434 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x75D000
	007 Move X22, 0x471000
	008 Move W8, [X21+3127]
	009 Move X22, [X22+3168]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x471000
	017 Move X0, [X0+3168]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3127], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move S0, [X20]
	027 Move S1, [X20+4]
	028 Move S2, [X20+8]
	029 Move S3, [X20+12]
	030 Move S4, [X20+16]
	031 Move S5, [X20+20]
	032 Move X2, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move W8, 0x7F800000
	038 Move TEMP, 4
	039 Not TEMP
	040 Move W1, TEMP
	041 Move S6, W8
	042 Move X0, X31
	043 Move X30, [X31+48]
	044 Call PhysicsScene2D.GetRayIntersectionArray_Internal, X0, X1, X2, V0, X3, X4
	045 Return X0

Method: System.Int32 GetRayIntersectionNonAlloc(UnityEngine.Ray ray, UnityEngine.RaycastHit2D[] results, System.Single distance)

Disassembly:
	0x03C8A438 BR X3
	0x03C8A43C STP X30, X19, [X31 - 0x10]!
	0x03C8A440 MOV X1, X31
	0x03C8A444 MOV X19, X0
	0x03C8A448 STR X31, [X0 + 0x68]
	0x03C8A44C BL 0x33BDD8C
	0x03C8A450 MOVI V0.2D, 0x0
	0x03C8A454 STR X31, [X19 + 0x68]
	0x03C8A458 STP V0, V0, [X19 + 0x10]
	0x03C8A45C STP V0, V0, [X19 + 0x30]
	0x03C8A460 STR V0, [X19 + 0x5]
	0x03C8A464 STRB W31, [X19 + 0x60]
	0x03C8A468 LDP X30, X19, [X31], #0x10
	0x03C8A46C RET
	0x03C8A470 STR X30, [X31 - 0x40]!
	0x03C8A474 STP X24, X23, [X31 + 0x10]
	0x03C8A478 STP X22, X21, [X31 + 0x20]
	0x03C8A47C STP X20, X19, [X31 + 0x30]
	0x03C8A480 ADRP X24, 0x75C000
	0x03C8A484 ADRP X23, 0x4D6000
	0x03C8A488 LDRB W8, [X24 + 0xD2B]
	0x03C8A48C LDR X23, [X23 + 0x8E0]
	0x03C8A490 MOV W22, W3
	0x03C8A494 MOV X20, X2
	0x03C8A498 MOV X21, X1
	0x03C8A49C MOV X19, X0
	0x03C8A4A0 TBNZ X8, 0x0, 0x3C8A4B8
	0x03C8A4A4 ADRP X0, 0x4D6000
	0x03C8A4A8 LDR X0, [X0 + 0x8E0]
	0x03C8A4AC BL 0x1C16CF4
	0x03C8A4B0 MOVZ W8, 0x1
	0x03C8A4B4 STRB W8, [X24 + 0xD2B]
	0x03C8A4B8 MOV X0, X19

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x75D000
	008 Move X22, 0x471000
	009 Move W8, [X21+3128]
	010 Move X22, [X22+3168]
	011 Move V8, V0
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x471000
	019 Move X0, [X0+3168]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3128], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move S0, [X20]
	029 Move S1, [X20+4]
	030 Move S2, [X20+8]
	031 Move S3, [X20+12]
	032 Move S4, [X20+16]
	033 Move S5, [X20+20]
	034 Move X2, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+8]
	040 Move TEMP, 4
	041 Not TEMP
	042 Move W1, TEMP
	043 Move V6, V8
	044 Move X0, X31
	045 Move V8, [X31+48]
	046 Call PhysicsScene2D.GetRayIntersectionArray_Internal, X0, X1, X2, V0, X3, X4
	047 Return X0

Method: System.Int32 GetRayIntersectionNonAlloc(UnityEngine.Ray ray, UnityEngine.RaycastHit2D[] results, System.Single distance, System.Int32 layerMask)

Disassembly:
	0x03C8A4BC MOV X1, X31
	0x03C8A4C0 STR X31, [X19 + 0x68]
	0x03C8A4C4 BL 0x33BDD8C
	0x03C8A4C8 LDR W1, [X20 + 0x10]
	0x03C8A4CC LDR X0, [X23]
	0x03C8A4D0 BL 0x1C16D6C
	0x03C8A4D4 STR X0, [X19 + 0x68]
	0x03C8A4D8 ADRP X24, 0x75D000
	0x03C8A4DC LDR X8, [X24 + 0x70]
	0x03C8A4E0 MOV X23, X0
	0x03C8A4E4 CBNZ X8, 0x3C8A4FC
	0x03C8A4E8 ADRP X0, 0xFFFFFFFFFCE6F000
	0x03C8A4EC ADD X0, X0, 0xD2A
	0x03C8A4F0 BL 0x1C16CB8
	0x03C8A4F4 MOV X8, X0
	0x03C8A4F8 STR X0, [X24 + 0x70]
	0x03C8A4FC AND W22, W22, 0x1
	0x03C8A500 MOV X0, X20
	0x03C8A504 MOV X1, X23
	0x03C8A508 MOV W2, W22
	0x03C8A50C BLR X8
	0x03C8A510 LDP V0, V1, [X21]
	0x03C8A514 LDR X8, [X21 + 0x20]
	0x03C8A518 LDP X24, X23, [X31 + 0x10]
	0x03C8A51C STP V0, V1, [X19 + 0x10]
	0x03C8A520 STR X8, [X19 + 0x30]
	0x03C8A524 LDP V0, V1, [X20]
	0x03C8A528 LDR X8, [X20 + 0x20]
	0x03C8A52C STRB W22, [X19 + 0x60]
	0x03C8A530 LDP X22, X21, [X31 + 0x20]
	0x03C8A534 STUR V0, [X19 + 0x38]
	0x03C8A538 STUR V1, [X19 + 0x48]
	0x03C8A53C STR X8, [X19 + 0x58]
	0x03C8A540 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x75D000
	009 Move X23, 0x471000
	010 Move W8, [X22+3129]
	011 Move X23, [X23+3168]
	012 Move W19, W2
	013 Move V8, V0
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x471000
	021 Move X0, [X0+3168]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3129], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move S0, [X21]
	031 Move S1, [X21+4]
	032 Move S2, [X21+8]
	033 Move S3, [X21+12]
	034 Move S4, [X21+16]
	035 Move S5, [X21+20]
	036 Move W1, W19
	037 Move X2, X20
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X22, [X31+32]
	041 Move X21, [X31+40]
	042 Move X30, [X31+16]
	043 Move X23, [X31+24]
	044 Move V6, V8
	045 Move X0, X31
	046 Move V8, [X31+64]
	047 Call PhysicsScene2D.GetRayIntersectionArray_Internal, X0, X1, X2, V0, X3, X4
	048 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C8A544 LDR X30, [X31], #0x40
	0x03C8A548 RET
	0x03C8A54C LDR X8, [X1 + 0x20]
	0x03C8A550 LDP V1, V0, [X1]
	0x03C8A554 STR X8, [X0 + 0x30]
	0x03C8A558 STP V1, V0, [X0 + 0x10]
	0x03C8A55C LDR X8, [X2 + 0x20]
	0x03C8A560 LDP V1, V0, [X2]
	0x03C8A564 STR X31, [X0 + 0x68]
	0x03C8A568 STRB W31, [X0 + 0x60]
	0x03C8A56C STR X8, [X0 + 0x58]
	0x03C8A570 STUR V0, [X0 + 0x48]
	0x03C8A574 STUR V1, [X0 + 0x38]
	0x03C8A578 RET
	0x03C8A57C STP X30, X25, [X31 - 0x40]!
	0x03C8A580 STP X24, X23, [X31 + 0x10]
	0x03C8A584 STP X22, X21, [X31 + 0x20]
	0x03C8A588 STP X20, X19, [X31 + 0x30]
	0x03C8A58C ADRP X25, 0x75C000
	0x03C8A590 ADRP X24, 0x4D6000
	0x03C8A594 ADRP X23, 0x469000
	0x03C8A598 LDRB W8, [X25 + 0xD2C]
	0x03C8A59C LDR X24, [X24 + 0x8E8]
	0x03C8A5A0 LDR X23, [X23 + 0x5F8]
	0x03C8A5A4 MOV W20, W3
	0x03C8A5A8 MOV W21, W2
	0x03C8A5AC MOV X22, X1
	0x03C8A5B0 MOV X19, X0
	0x03C8A5B4 TBNZ X8, 0x0, 0x3C8A5D8
	0x03C8A5B8 ADRP X0, 0x4D6000
	0x03C8A5BC LDR X0, [X0 + 0x8E8]
	0x03C8A5C0 BL 0x1C16CF4
	0x03C8A5C4 ADRP X0, 0x469000
	0x03C8A5C8 LDR X0, [X0 + 0x5F8]
	0x03C8A5CC BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x75D000
	007 Move X22, 0x4D7000
	008 Move X19, 0x4D7000
	009 Move X20, 0x471000
	010 Move W8, [X21+3130]
	011 Move X22, [X22+2232]
	012 Move X19, [X19+2240]
	013 Move X20, [X20+3168]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x4D7000
	019 Move X0, [X0+2240]
	020 Call 0x1C17CF4
	021 Move X0, 0x4D7000
	022 Move X0, [X0+2232]
	023 Call 0x1C17CF4
	024 Move X0, 0x471000
	025 Move X0, [X0+3168]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3130], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Boolean Simulate_Internal_Injected(ref UnityEngine.PhysicsScene2D physicsScene, System.Single step)

Disassembly:
	0x03C89938 ADD X1, X31, 0x8
	0x03C8993C MOV X0, X19
	0x03C89940 BLR X8
	0x03C89944 LDP S0, S1, [X31 + 0x8]
	0x03C89948 LDP X20, X19, [X31 + 0x10]
	0x03C8994C LDR X30, [X31], #0x20
	0x03C89950 RET
	0x03C89954 STP X30, X21, [X31 - 0x20]!
	0x03C89958 STP X20, X19, [X31 + 0x10]
	0x03C8995C ADRP X21, 0x75D000
	0x03C89960 LDR X2, [X21 + 0xD10]
	0x03C89964 MOV X19, X1
	0x03C89968 MOV X20, X0
	0x03C8996C CBNZ X2, 0x3C89984
	0x03C89970 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C89974 ADD X0, X0, 0x68A
	0x03C89978 BL 0x1C16CB8
	0x03C8997C MOV X2, X0
	0x03C89980 STR X0, [X21 + 0xD10]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x75E000
	006 Move X1, [X20+3136]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51884032
	012 Add X0, X0, 2200
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+3136], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: UnityEngine.RaycastHit2D[] GetRayIntersectionAll_Internal_Injected(ref UnityEngine.PhysicsScene2D physicsScene, ref UnityEngine.Vector3 origin, ref UnityEngine.Vector3 direction, System.Single distance, System.Int32 layerMask)

Disassembly:
	0x03C8A350 ADRP X20, 0x75C000
	0x03C8A354 LDRB W8, [X20 + 0xD2A]
	0x03C8A358 MOV X19, X0
	0x03C8A35C TBNZ X8, 0x0, 0x3C8A374
	0x03C8A360 ADRP X0, 0x4D6000
	0x03C8A364 LDR X0, [X0 + 0x8E0]
	0x03C8A368 BL 0x1C16CF4
	0x03C8A36C MOVZ W8, 0x1
	0x03C8A370 STRB W8, [X20 + 0xD2A]
	0x03C8A374 LDR X0, [X19 + 0x68]
	0x03C8A378 CBNZ X0, 0x3C8A3D8
	0x03C8A37C ADRP X8, 0x4D6000
	0x03C8A380 LDR W1, [X19 + 0x48]
	0x03C8A384 LDR X8, [X8 + 0x8E0]
	0x03C8A388 ADD X20, X19, 0x38
	0x03C8A38C LDR X0, [X8]
	0x03C8A390 BL 0x1C16D6C
	0x03C8A394 STR X0, [X19 + 0x68]
	0x03C8A398 ADRP X23, 0x75D000
	0x03C8A39C LDR X8, [X23 + 0x70]
	0x03C8A3A0 LDRB W22, [X19 + 0x60]
	0x03C8A3A4 MOV X21, X0
	0x03C8A3A8 CBNZ X8, 0x3C8A3C0
	0x03C8A3AC ADRP X0, 0xFFFFFFFFFCE6F000
	0x03C8A3B0 ADD X0, X0, 0xD2A
	0x03C8A3B4 BL 0x1C16CB8
	0x03C8A3B8 MOV X8, X0

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x75D000
	009 Move X4, [X23+3144]
	010 Move W19, W3
	011 Move V8, V0
	012 Move X20, X2
	013 Move X21, X1
	014 Move X22, X0
	015 Compare X4, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -52011008
	018 Add X0, X0, 1896
	019 Call 0x1C17CB8
	020 Move X4, X0
	021 Move [X23+3144], X0
	022 Move X0, X22
	023 Move X1, X21
	024 Move X2, X20
	025 Move W3, W19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X30, [X31+16]
	031 Move X23, [X31+24]
	032 Move V0, V8
	033 Move V8, [X31+64]
	034 CallNoReturn X4

