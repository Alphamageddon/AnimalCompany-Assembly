Type: UnityEngine.Bindings.NativeHeaderAttribute

Method: System.Void set_Header(System.String value)

Disassembly:
	0x03C9768C LDR W11, [X8 + 0x18]
	0x03C97690 CMP W10, W11

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Void .ctor(System.String header)

Disassembly:
	0x03C97694 B.CS 0x3C976AC
	0x03C97698 ADD W9, W10, 0x1
	0x03C9769C ADD X8, X8, X10, 0x4, LSL
	0x03C976A0 STR W9, [X19 + 0x18]
	0x03C976A4 STP X20, X21, [X8 + 0x20]
	0x03C976A8 B 0x3C976C8
	0x03C976AC LDR X8, [X9 + 0x20]
	0x03C976B0 MOV X0, X19
	0x03C976B4 MOV X1, X20
	0x03C976B8 MOV X2, X21
	0x03C976BC LDR X8, [X8 + 0xC0]
	0x03C976C0 LDR X3, [X8 + 0x70]
	0x03C976C4 BL 0x3158728
	0x03C976C8 LDR X0, [X23]
	0x03C976CC BL 0x1C16F10
	0x03C976D0 LDR X1, [X22]
	0x03C976D4 MOV X20, X0
	0x03C976D8 BL 0x301B7C4
	0x03C976DC CBZ X20, 0x3C97834
	0x03C976E0 ADRP X8, 0x4C9000
	0x03C976E4 LDR X8, [X8 + 0xF68]
	0x03C976E8 LDR W10, [X20 + 0x1C]
	0x03C976EC LDR X9, [X24]
	0x03C976F0 LDR X1, [X8]
	0x03C976F4 LDR X8, [X20 + 0x10]
	0x03C976F8 ADD W10, W10, 0x1
	0x03C976FC STR W10, [X20 + 0x1C]
	0x03C97700 CBZ X8, 0x3C97834
	0x03C97704 LDRSW X10, [X20 + 0x18]
	0x03C97708 LDR W11, [X8 + 0x18]
	0x03C9770C CMP W10, W11
	0x03C97710 B.CS 0x3C97728
	0x03C97714 ADD W9, W10, 0x1
	0x03C97718 ADD X8, X8, X10, 0x3, LSL
	0x03C9771C STR W9, [X20 + 0x18]
	0x03C97720 STR X1, [X8 + 0x20]
	0x03C97724 B 0x3C9773C
	0x03C97728 LDR X8, [X9 + 0x20]
	0x03C9772C MOV X0, X20
	0x03C97730 LDR X8, [X8 + 0xC0]
	0x03C97734 LDR X2, [X8 + 0x70]
	0x03C97738 BL 0x301BF90
	0x03C9773C LDR X0, [X26]
	0x03C97740 BL 0x1C16F10
	0x03C97744 LDR X1, [X25]
	0x03C97748 MOV X21, X0
	0x03C9774C BL 0x2FDE980
	0x03C97750 CBZ X21, 0x3C97834
	0x03C97754 LDR W10, [X21 + 0x1C]
	0x03C97758 LDR X8, [X21 + 0x10]
	0x03C9775C LDR X9, [X27]
	0x03C97760 ADD W10, W10, 0x1
	0x03C97764 STR W10, [X21 + 0x1C]
	0x03C97768 CBZ X8, 0x3C97834
	0x03C9776C LDRSW X10, [X21 + 0x18]
	0x03C97770 LDR W11, [X8 + 0x18]
	0x03C97774 CMP W10, W11
	0x03C97778 B.CS 0x3C97794
	0x03C9777C ADD W9, W10, 0x1
	0x03C97780 ADD X8, X8, X10, 0x2, LSL
	0x03C97784 MOVZ W10, 0xA
	0x03C97788 STR W9, [X21 + 0x18]
	0x03C9778C STR W10, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x751000
	006 Move W8, [X21+227]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x45D000
	014 Move X0, [X0+2440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+227], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call Attribute..ctor, X0
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X8, 0x45D000
	024 Move X8, [X8+2440]
	025 Move X0, X19
	026 Move X2, X31
	027 Move X1, [X8]
	028 Call String.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {51}
	033 Move [X20+16], X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 
	039 Move X0, 0x462000
	040 Move X0, [X0+1320]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0x4A7000
	045 Move X0, [X0+4008]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call ArgumentNullException..ctor, X0, X1
	051 Move X0, 0x465000
	052 Move X0, [X0+1400]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0x4CA000
	057 Move X0, [X0+3800]
	058 Call 0x1C17D08
	059 Move X20, X0
	060 Move X0, 0x4A7000
	061 Move X0, [X0+4008]
	062 Call 0x1C17D08
	063 Move X2, X0
	064 Move X0, X19
	065 Move X1, X20
	066 Move X3, X31
	067 Call ArgumentException..ctor, X0, X1, X2
	068 Move X0, 0x4CA000
	069 Move X0, [X0+3808]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

