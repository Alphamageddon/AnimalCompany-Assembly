Type: SimpleJSON.JSONObject

Method: System.Boolean get_Inline()

Disassembly:
	0x035B7560 RET
	0x035B7564 BL 0x1C16F20

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_Inline(System.Boolean value)

Disassembly:
	0x035B7568 BL 0x1C16F20
	0x035B756C BL 0x1C16F20
	0x035B7570 BL 0x1C16F20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+24], W8
	003 Return 

Method: SimpleJSON.JSONNodeType get_Tag()

Disassembly:
	0x035B7574 B 0x35B75AC
	0x035B7578 B 0x35B75AC

ISIL:
	001 Move W0, 2
	002 Return X0

Method: System.Boolean get_IsObject()

Disassembly:
	0x035B757C B 0x35B75AC
	0x035B7580 B 0x35B75AC

ISIL:
	001 Move W0, 1
	002 Return X0

Method: SimpleJSON.JSONNode/Enumerator GetEnumerator()

Disassembly:
	0x035B7584 B 0x35B75AC
	0x035B7588 B 0x35B75AC
	0x035B758C B 0x35B75AC
	0x035B7590 B 0x35B75AC
	0x035B7594 B 0x35B75AC
	0x035B7598 B 0x35B75AC
	0x035B759C B 0x35B75AC
	0x035B75A0 B 0x35B75AC
	0x035B75A4 B 0x35B75AC
	0x035B75A8 B 0x35B75AC
	0x035B75AC MOV X22, X0
	0x035B75B0 CMP W1, 0x1
	0x035B75B4 B.NE 0x35B75E8
	0x035B75B8 MOV X0, X22
	0x035B75BC BL 0x3EB1AD0
	0x035B75C0 LDR X23, [X0]
	0x035B75C4 BL 0x3EB1AE0
	0x035B75C8 ADRP X8, 0xB80000
	0x035B75CC LDR X8, [X8 + 0x890]
	0x035B75D0 ADD X0, X31, 0x30
	0x035B75D4 LDR X1, [X8]
	0x035B75D8 BL 0x2C0A83C
	0x035B75DC CBZ X23, 0x35B750C
	0x035B75E0 MOV X0, X23
	0x035B75E4 BL 0x1C16F18
	0x035B75E8 MOV X23, X31
	0x035B75EC B 0x35B75F4
	0x035B75F0 MOV X22, X0
	0x035B75F4 ADRP X8, 0xB80000
	0x035B75F8 LDR X8, [X8 + 0x890]
	0x035B75FC LDR X1, [X8]
	0x035B7600 ADD X0, X31, 0x30
	0x035B7604 BL 0x2C0A83C
	0x035B7608 CBNZ X23, 0x35B7614
	0x035B760C MOV X0, X22

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xE2A000
	007 Move W9, [X21+198]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB81000
	015 Move X0, [X0+2080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+198], W8
	019 Move X0, [X20+16]
	020 Compare X0, 0
	021 JumpIfEqual {45}
	022 Move X8, 0xB81000
	023 Move X8, [X8+2080]
	024 Move X1, [X8]
	025 Add X8, X31, 8
	026 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move X9, [X31+40]
	030 Move W8, 2
	031 Move [X19], X31
	032 Move [X19], W8
	033 Move [X19+24], V1
	034 Move [X19+8], V0
	035 Move [X19+40], X9
	036 Move [X19+48], X31
	037 Move [X19+56], X31
	038 Move [X19+64], X31
	039 Move X20, [X31+64]
	040 Move X19, [X31+72]
	041 Move X30, [X31+48]
	042 Move X21, [X31+56]
	043 Add X31, X31, 80
	044 Return X0
	045 Call 0x1C17F20

Method: SimpleJSON.JSONNode get_Item(System.String aKey)

Disassembly:
	0x035B7610 BL 0x1D2C690
	0x035B7614 MOV X0, X23
	0x035B7618 BL 0x1C16F18
	0x035B761C BL 0x1990590
	0x035B7620 SUB X31, X31, 0x60
	0x035B7624 STR X30, [X31 + 0x20]
	0x035B7628 STP X24, X23, [X31 + 0x30]
	0x035B762C STP X22, X21, [X31 + 0x40]
	0x035B7630 STP X20, X19, [X31 + 0x50]
	0x035B7634 ADRP X21, 0xE29000
	0x035B7638 LDRB W8, [X21 + 0xD6]
	0x035B763C MOV X19, X1
	0x035B7640 MOV X20, X0
	0x035B7644 TBNZ X8, 0x0, 0x35B76A4
	0x035B7648 ADRP X0, 0xB80000
	0x035B764C LDR X0, [X0 + 0x848]
	0x035B7650 BL 0x1C16CF4
	0x035B7654 ADRP X0, 0xB80000
	0x035B7658 LDR X0, [X0 + 0x830]
	0x035B765C BL 0x1C16CF4
	0x035B7660 ADRP X0, 0xB80000
	0x035B7664 LDR X0, [X0 + 0x8A8]
	0x035B7668 BL 0x1C16CF4
	0x035B766C ADRP X0, 0xB80000
	0x035B7670 LDR X0, [X0 + 0x8B0]
	0x035B7674 BL 0x1C16CF4
	0x035B7678 ADRP X0, 0xB80000
	0x035B767C LDR X0, [X0 + 0x8B8]
	0x035B7680 BL 0x1C16CF4
	0x035B7684 ADRP X0, 0xB80000
	0x035B7688 LDR X0, [X0 + 0x8C0]
	0x035B768C BL 0x1C16CF4
	0x035B7690 ADRP X0, 0xB80000
	0x035B7694 LDR X0, [X0 + 0x8C8]
	0x035B7698 BL 0x1C16CF4
	0x035B769C MOVZ W8, 0x1
	0x035B76A0 STRB W8, [X21 + 0xD6]
	0x035B76A4 STP X31, X31, [X31 + 0x8]
	0x035B76A8 STR X31, [X31 + 0x18]
	0x035B76AC CBZ X19, 0x35B77C4
	0x035B76B0 LDR X8, [X19]
	0x035B76B4 MOVZ W1, 0x2
	0x035B76B8 MOV X0, X19
	0x035B76BC LDP X9, X2, [X8 + 0x1C8]
	0x035B76C0 BLR X9
	0x035B76C4 LDR X0, [X20 + 0x10]
	0x035B76C8 CBZ X0, 0x35B77C4
	0x035B76CC ADRP X8, 0xB80000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2A000
	006 Move W8, [X21+199]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB81000
	014 Move X0, [X0+2088]
	015 Call 0x1C17CF4
	016 Move X0, 0xB81000
	017 Move X0, [X0+2096]
	018 Call 0x1C17CF4
	019 Move X0, 0xB81000
	020 Move X0, [X0+1624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+199], W8
	024 Move X0, [X20+16]
	025 Compare X0, 0
	026 JumpIfEqual {63}
	027 Move X8, 0xB81000
	028 Move X8, [X8+2088]
	029 Move X1, X19
	030 Move X2, [X8]
	031 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {49}
	036 Move X0, [X20+16]
	037 Compare X0, 0
	038 JumpIfEqual {63}
	039 Move X8, 0xB81000
	040 Move X8, [X8+2096]
	041 Move X1, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X2, [X8]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	048 Return X0
	049 Move X8, 0xB81000
	050 Move X8, [X8+1624]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X1, X20
	054 Move X2, X19
	055 Move X21, X0
	056 Call JSONLazyCreator..ctor, X0, X1, X2
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X0, X21
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Void set_Item(System.String aKey, SimpleJSON.JSONNode value)

Disassembly:
	0x035B7740 ADD X0, X31, 0x8
	0x035B7744 BL 0x2C0B090
	0x035B7748 TBZ X0, 0x0, 0x35B7798
	0x035B774C LDR X8, [X19]
	0x035B7750 LDR X21, [X31 + 0x18]
	0x035B7754 LDR X9, [X8 + 0x298]
	0x035B7758 LDR X2, [X8 + 0x2A0]
	0x035B775C MOV X0, X19
	0x035B7760 MOV X1, X21
	0x035B7764 BLR X9
	0x035B7768 LDR X0, [X20 + 0x10]
	0x035B776C CBZ X0, 0x35B77BC
	0x035B7770 LDR X2, [X24]
	0x035B7774 MOV X1, X21
	0x035B7778 BL 0x2AA5018
	0x035B777C CBZ X0, 0x35B77C0
	0x035B7780 LDR X8, [X0]
	0x035B7784 LDR X9, [X8 + 0x428]
	0x035B7788 LDR X2, [X8 + 0x430]
	0x035B778C MOV X1, X19
	0x035B7790 BLR X9
	0x035B7794 B 0x35B773C
	0x035B7798 LDR X1, [X22]
	0x035B779C ADD X0, X31, 0x8
	0x035B77A0 BL 0x2C0B08C
	0x035B77A4 LDP X20, X19, [X31 + 0x50]
	0x035B77A8 LDP X22, X21, [X31 + 0x40]
	0x035B77AC LDP X24, X23, [X31 + 0x30]
	0x035B77B0 LDR X30, [X31 + 0x20]
	0x035B77B4 ADD X31, X31, 0x60
	0x035B77B8 RET
	0x035B77BC BL 0x1C16F20
	0x035B77C0 BL 0x1C16F20
	0x035B77C4 BL 0x1C16F20
	0x035B77C8 B 0x35B77DC
	0x035B77CC B 0x35B77DC
	0x035B77D0 B 0x35B77DC
	0x035B77D4 B 0x35B77DC
	0x035B77D8 B 0x35B77DC
	0x035B77DC MOV X19, X0
	0x035B77E0 CMP W1, 0x1
	0x035B77E4 B.NE 0x35B7810
	0x035B77E8 MOV X0, X19
	0x035B77EC BL 0x3EB1AD0
	0x035B77F0 LDR X20, [X0]
	0x035B77F4 BL 0x3EB1AE0
	0x035B77F8 LDR X1, [X22]
	0x035B77FC ADD X0, X31, 0x8
	0x035B7800 BL 0x2C0B08C
	0x035B7804 CBZ X20, 0x35B77A4
	0x035B7808 MOV X0, X20
	0x035B780C BL 0x1C16F18
	0x035B7810 MOV X20, X31
	0x035B7814 B 0x35B781C
	0x035B7818 MOV X19, X0
	0x035B781C LDR X1, [X22]
	0x035B7820 ADD X0, X31, 0x8
	0x035B7824 BL 0x2C0B08C
	0x035B7828 CBNZ X20, 0x35B7834
	0x035B782C MOV X0, X19
	0x035B7830 BL 0x1D2C690
	0x035B7834 MOV X0, X20
	0x035B7838 BL 0x1C16F18
	0x035B783C BL 0x1990590
	0x035B7840 STR X30, [X31 - 0x30]!
	0x035B7844 STP X22, X21, [X31 + 0x10]
	0x035B7848 STP X20, X19, [X31 + 0x20]
	0x035B784C ADRP X22, 0xE29000
	0x035B7850 ADRP X21, 0xB3D000
	0x035B7854 LDRB W8, [X22 + 0xD8]
	0x035B7858 LDR X21, [X21 + 0x460]
	0x035B785C MOV X19, X2
	0x035B7860 MOV X20, X0
	0x035B7864 TBNZ X8, 0x0, 0x35B7888
	0x035B7868 ADRP X0, 0xB3D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE2A000
	008 Move X23, 0xB3E000
	009 Move W8, [X22+200]
	010 Move X23, [X23+1120]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xB81000
	019 Move X0, [X0+2104]
	020 Call 0x1C17CF4
	021 Move X0, 0xB81000
	022 Move X0, [X0+2088]
	023 Call 0x1C17CF4
	024 Move X0, 0xB81000
	025 Move X0, [X0+2112]
	026 Call 0x1C17CF4
	027 Move X0, 0xB3E000
	028 Move X0, [X0+1120]
	029 Call 0x1C17CF4
	030 Move X0, 0xB81000
	031 Move X0, [X0+1608]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+200], W8
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Call JSONNode.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {56}
	047 Move X8, 0xB81000
	048 Move X8, [X8+1608]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Call JSONNull.CreateOrGet
	055 Move X20, X0
	056 Move X0, [X21+16]
	057 Compare X0, 0
	058 JumpIfEqual {99}
	059 Move X8, 0xB81000
	060 Move X8, [X8+2088]
	061 Move X1, X19
	062 Move X2, [X8]
	063 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	064 Move X8, [X21+16]
	065 Compare X8, 0
	066 JumpIfEqual {99}
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {85}
	071 Move X9, 0xB81000
	072 Move X9, [X9+2112]
	073 Move X1, X19
	074 Move X2, X20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X3, [X9]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X0, X8
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	084 Return 
	085 Move X9, 0xB81000
	086 Move X9, [X9+2104]
	087 Move X1, X19
	088 Move X2, X20
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X3, [X9]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X0, X8
	095 Move X30, [X31+48]
	096 Move X23, [X31+56]
	097 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	098 Return 
	099 Call 0x1C17F20

Method: SimpleJSON.JSONNode get_Item(System.Int32 aIndex)

Disassembly:
	0x035B786C LDR X0, [X0 + 0x460]
	0x035B7870 BL 0x1C16CF4
	0x035B7874 ADRP X0, 0xB66000
	0x035B7878 LDR X0, [X0 + 0x348]
	0x035B787C BL 0x1C16CF4
	0x035B7880 MOVZ W8, 0x1
	0x035B7884 STRB W8, [X22 + 0xD8]
	0x035B7888 LDR X0, [X21]
	0x035B788C LDR X20, [X20 + 0x10]
	0x035B7890 LDR W8, [X0 + 0xE0]
	0x035B7894 CBNZ W8, 0x35B789C
	0x035B7898 BL 0x1C16DFC
	0x035B789C MOV X0, X19
	0x035B78A0 MOV X1, X20
	0x035B78A4 LDP X20, X19, [X31 + 0x20]
	0x035B78A8 LDP X22, X21, [X31 + 0x10]
	0x035B78AC LDR X30, [X31], #0x30
	0x035B78B0 B 0x35AD170
	0x035B78B4 LDR W8, [X0 + 0x10]
	0x035B78B8 CMP W8, 0x1
	0x035B78BC B.EQ 0x35B78C8
	0x035B78C0 ADDS W31, W8, 0x3
	0x035B78C4 B.NE 0x35B78CC
	0x035B78C8 B 0x35B7A78
	0x035B78CC RET
	0x035B78D0 SUB X31, X31, 0x90
	0x035B78D4 STP X30, X0, [X31 + 0x70]
	0x035B78D8 STP X20, X19, [X31 + 0x80]
	0x035B78DC ADRP X20, 0xE29000
	0x035B78E0 LDRB W8, [X20 + 0xD9]
	0x035B78E4 MOV X19, X0
	0x035B78E8 TBNZ X8, 0x0, 0x35B7924
	0x035B78EC ADRP X0, 0xB80000
	0x035B78F0 LDR X0, [X0 + 0x820]
	0x035B78F4 BL 0x1C16CF4
	0x035B78F8 ADRP X0, 0xB80000
	0x035B78FC LDR X0, [X0 + 0x780]
	0x035B7900 BL 0x1C16CF4
	0x035B7904 ADRP X0, 0xB80000
	0x035B7908 LDR X0, [X0 + 0x768]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2A000
	006 Move W8, [X21+201]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB81000
	014 Move X0, [X0+2120]
	015 Call 0x1C17CF4
	016 Move X0, 0xB81000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0xB67000
	020 Move X0, [X0+840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+201], W8
	024 Move TEMP, X19
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {43}
	028 Move X0, [X20+16]
	029 Compare X0, 0
	030 JumpIfEqual {49}
	031 Move X8, 0xB81000
	032 Move X8, [X8+2120]
	033 Move X1, [X8]
	034 Call Dictionary`2<Object, Object>.get_Count, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, 0xB81000
	037 Move X0, [X20+16]
	038 Move X8, [X8+2128]
	039 Move W1, W19
	040 Move X2, [X8]
	041 Call 0x21C16A8, X0, X1
	042 Move X0, X1
	043 Move X0, X31
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void set_Item(System.Int32 aIndex, SimpleJSON.JSONNode value)

Disassembly:
	0x035B790C BL 0x1C16CF4
	0x035B7910 ADRP X0, 0xB66000
	0x035B7914 LDR X0, [X0 + 0x348]
	0x035B7918 BL 0x1C16CF4
	0x035B791C MOVZ W8, 0x1
	0x035B7920 STRB W8, [X20 + 0xD9]
	0x035B7924 ADD X8, X31, 0x78
	0x035B7928 STR X8, [X31 + 0x68]
	0x035B792C LDR W8, [X19 + 0x10]
	0x035B7930 CMP W8, 0x1
	0x035B7934 B.EQ 0x35B7994
	0x035B7938 CBNZ W8, 0x35B7A20
	0x035B793C LDR X8, [X19 + 0x28]
	0x035B7940 MOVN W9, 0x0
	0x035B7944 STR W9, [X19 + 0x10]
	0x035B7948 CBZ X8, 0x35B79EC
	0x035B794C LDR X0, [X8 + 0x10]
	0x035B7950 CBZ X0, 0x35B79F0
	0x035B7954 ADRP X8, 0xB80000
	0x035B7958 LDR X8, [X8 + 0x820]
	0x035B795C LDR X1, [X8]
	0x035B7960 ADD X8, X31, 0x8
	0x035B7964 BL 0x2AA54BC
	0x035B7968 LDUR V0, [X31 + 0x8]
	0x035B796C LDUR V1, [X31 + 0x18]
	0x035B7970 LDR X8, [X31 + 0x28]
	0x035B7974 LDR X19, [X31 + 0x78]
	0x035B7978 MOVN W9, 0x2
	0x035B797C STP V0, V1, [X31 + 0x30]
	0x035B7980 STR X8, [X31 + 0x50]
	0x035B7984 STR X8, [X19 + 0x50]
	0x035B7988 STP V0, V1, [X19 + 0x30]
	0x035B798C STR W9, [X19 + 0x10]
	0x035B7990 B 0x35B799C
	0x035B7994 MOVN W8, 0x2
	0x035B7998 STR W8, [X19 + 0x10]
	0x035B799C ADRP X8, 0xB80000
	0x035B79A0 LDR X8, [X8 + 0x780]
	0x035B79A4 ADD X0, X19, 0x30
	0x035B79A8 LDR X1, [X8]
	0x035B79AC BL 0x2C0A728
	0x035B79B0 LDR X8, [X31 + 0x78]
	0x035B79B4 TBZ X0, 0x0, 0x35B79CC
	0x035B79B8 LDR X9, [X8 + 0x48]
	0x035B79BC MOVZ W0, 0x1
	0x035B79C0 STR W0, [X8 + 0x10]
	0x035B79C4 STR X9, [X8 + 0x18]
	0x035B79C8 B 0x35B7A24
	0x035B79CC MOV X0, X8
	0x035B79D0 BL 0x35B7A78
	0x035B79D4 LDR X8, [X31 + 0x78]
	0x035B79D8 MOVI V0.2D, 0x0
	0x035B79DC MOV W0, W31
	0x035B79E0 STR X31, [X8 + 0x50]
	0x035B79E4 STP V0, V0, [X8 + 0x30]
	0x035B79E8 B 0x35B7A24
	0x035B79EC BL 0x1C16F20
	0x035B79F0 BL 0x1C16F20
	0x035B79F4 B 0x35B7A04
	0x035B79F8 B 0x35B7A04
	0x035B79FC B 0x35B7A04
	0x035B7A00 B 0x35B7A04
	0x035B7A04 CMP W1, 0x1
	0x035B7A08 B.NE 0x35B7A4C
	0x035B7A0C BL 0x3EB1AD0
	0x035B7A10 LDR X19, [X0]
	0x035B7A14 STR X19, [X31 + 0x60]
	0x035B7A18 BL 0x3EB1AE0
	0x035B7A1C CBNZ X19, 0x35B7A34
	0x035B7A20 MOV W0, W31
	0x035B7A24 LDP X20, X19, [X31 + 0x80]
	0x035B7A28 LDR X30, [X31 + 0x70]
	0x035B7A2C ADD X31, X31, 0x90
	0x035B7A30 RET
	0x035B7A34 ADD X8, X31, 0x60
	0x035B7A38 ADD X0, X8, 0x8
	0x035B7A3C BL 0x1BC1940
	0x035B7A40 MOV X0, X19
	0x035B7A44 BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE2A000
	008 Move X23, 0xB3E000
	009 Move W8, [X22+202]
	010 Move X23, [X23+1120]
	011 Move X21, X2
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xB81000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move X0, 0xB81000
	022 Move X0, [X0+2112]
	023 Call 0x1C17CF4
	024 Move X0, 0xB81000
	025 Move X0, [X0+2128]
	026 Call 0x1C17CF4
	027 Move X0, 0xB3E000
	028 Move X0, [X0+1120]
	029 Call 0x1C17CF4
	030 Move X0, 0xB81000
	031 Move X0, [X0+1608]
	032 Call 0x1C17CF4
	033 Move X0, 0xB67000
	034 Move X0, [X0+832]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+202], W8
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X31
	045 Call JSONNode.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {59}
	050 Move X8, 0xB81000
	051 Move X8, [X8+1608]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Call JSONNull.CreateOrGet
	058 Move X21, X0
	059 Move TEMP, X20
	060 And TEMP, TEMP, -2147483648
	061 Compare TEMP, -2147483648
	062 JumpIfEqual {94}
	063 Move X0, [X19+16]
	064 Compare X0, 0
	065 JumpIfEqual {101}
	066 Move X8, 0xB81000
	067 Move X8, [X8+2120]
	068 Move X1, [X8]
	069 Call Dictionary`2<Object, Object>.get_Count, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, 0xB81000
	072 Move X0, [X19+16]
	073 Move X8, [X8+2128]
	074 Move W1, W20
	075 Move X2, [X8]
	076 Call 0x21C16A8, X0, X1
	077 Move X8, [X19+16]
	078 Compare X8, 0
	079 JumpIfEqual {101}
	080 Move X9, 0xB81000
	081 Move X9, [X9+2112]
	082 Move X2, X21
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X3, [X9]
	088 Move X1, X0
	089 Move X0, X8
	090 Move X30, [X31+48]
	091 Move X23, [X31+56]
	092 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	093 Return 
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 Return 
	101 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x035B7A48 CBNZ X19, 0x35B7A50
	0x035B7A4C BL 0x1D2C690
	0x035B7A50 LDR X0, [X31 + 0x78]
	0x035B7A54 LDR W8, [X0 + 0x10]
	0x035B7A58 CMP W8, 0x1
	0x035B7A5C B.EQ 0x35B7A68
	0x035B7A60 ADDS W31, W8, 0x3
	0x035B7A64 B.NE 0x35B7A6C
	0x035B7A68 BL 0x35B7A78
	0x035B7A6C MOV X0, X19
	0x035B7A70 BL 0x1C16F18
	0x035B7A74 BL 0x1990590
	0x035B7A78 STP X30, X21, [X31 - 0x20]!
	0x035B7A7C STP X20, X19, [X31 + 0x10]
	0x035B7A80 ADRP X21, 0xE29000
	0x035B7A84 ADRP X20, 0xB80000
	0x035B7A88 LDRB W8, [X21 + 0xDA]
	0x035B7A8C LDR X20, [X20 + 0x890]
	0x035B7A90 MOV X19, X0
	0x035B7A94 TBNZ X8, 0x0, 0x35B7AAC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE2A000
	005 Move W8, [X20+203]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB81000
	012 Move X0, [X0+2120]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+203], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0xB81000
	020 Move X8, [X8+2120]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Dictionary`2<Object, Object>.get_Count, X0
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void Add(System.String aKey, SimpleJSON.JSONNode aItem)

Disassembly:
	0x035B7A98 ADRP X0, 0xB80000
	0x035B7A9C LDR X0, [X0 + 0x890]
	0x035B7AA0 BL 0x1C16CF4
	0x035B7AA4 MOVZ W8, 0x1
	0x035B7AA8 STRB W8, [X21 + 0xDA]
	0x035B7AAC MOVN W8, 0x0
	0x035B7AB0 STR W8, [X19 + 0x10]
	0x035B7AB4 LDR X1, [X20]
	0x035B7AB8 ADD X0, X19, 0x30
	0x035B7ABC LDP X20, X19, [X31 + 0x10]
	0x035B7AC0 LDP X30, X21, [X31], #0x20
	0x035B7AC4 B 0x2C0A83C
	0x035B7AC8 LDR X0, [X0 + 0x18]
	0x035B7ACC RET
	0x035B7AD0 STP X30, X19, [X31 - 0x10]!
	0x035B7AD4 ADRP X0, 0xB3C000
	0x035B7AD8 LDR X0, [X0 + 0xB40]
	0x035B7ADC BL 0x1C16D08
	0x035B7AE0 BL 0x1C16F10
	0x035B7AE4 MOV X1, X31
	0x035B7AE8 MOV X19, X0
	0x035B7AEC BL 0x3380310
	0x035B7AF0 ADRP X0, 0xB80000
	0x035B7AF4 LDR X0, [X0 + 0x8D0]
	0x035B7AF8 BL 0x1C16D08
	0x035B7AFC MOV X1, X0
	0x035B7B00 MOV X0, X19
	0x035B7B04 BL 0x1C16DEC
	0x035B7B08 LDR X0, [X0 + 0x18]
	0x035B7B0C RET
	0x035B7B10 STR X30, [X31 - 0x20]!
	0x035B7B14 STP X20, X19, [X31 + 0x10]
	0x035B7B18 ADRP X20, 0xE29000
	0x035B7B1C LDRB W8, [X20 + 0xDB]
	0x035B7B20 MOV X19, X0
	0x035B7B24 TBNZ X8, 0x0, 0x35B7B3C
	0x035B7B28 ADRP X0, 0xB80000
	0x035B7B2C LDR X0, [X0 + 0x8A0]
	0x035B7B30 BL 0x1C16CF4
	0x035B7B34 MOVZ W8, 0x1
	0x035B7B38 STRB W8, [X20 + 0xDB]
	0x035B7B3C LDR W8, [X19 + 0x10]
	0x035B7B40 ADDS W31, W8, 0x2
	0x035B7B44 B.NE 0x35B7B64
	0x035B7B48 LDR W20, [X19 + 0x20]
	0x035B7B4C MOV X0, X31
	0x035B7B50 BL 0x33C151C
	0x035B7B54 CMP W20, W0
	0x035B7B58 B.NE 0x35B7B64
	0x035B7B5C STR W31, [X19 + 0x10]
	0x035B7B60 B 0x35B7B9C
	0x035B7B64 ADRP X8, 0xB80000
	0x035B7B68 LDR X8, [X8 + 0x8A0]
	0x035B7B6C LDR X0, [X8]
	0x035B7B70 BL 0x1C16F10
	0x035B7B74 MOV X1, X31
	0x035B7B78 MOV X20, X0
	0x035B7B7C BL 0x33BDD8C
	0x035B7B80 MOV X0, X31
	0x035B7B84 STR W31, [X20 + 0x10]
	0x035B7B88 BL 0x33C151C
	0x035B7B8C STR W0, [X20 + 0x20]
	0x035B7B90 LDR X8, [X19 + 0x28]
	0x035B7B94 MOV X19, X20
	0x035B7B98 STR X8, [X20 + 0x28]
	0x035B7B9C MOV X0, X19
	0x035B7BA0 LDP X20, X19, [X31 + 0x10]
	0x035B7BA4 LDR X30, [X31], #0x20
	0x035B7BA8 RET
	0x035B7BAC B 0x35B7B10
	0x035B7BB0 MOVZ W0, 0x3
	0x035B7BB4 RET
	0x035B7BB8 MOVZ W0, 0x1
	0x035B7BBC RET
	0x035B7BC0 MOVI V0.2D, 0x0
	0x035B7BC4 STR X31, [X8 + 0x40]
	0x035B7BC8 STP V0, V0, [X8 + 0x20]
	0x035B7BCC STP V0, V0, [X8]
	0x035B7BD0 RET
	0x035B7BD4 LDR X0, [X0 + 0x10]
	0x035B7BD8 RET
	0x035B7BDC STR X1, [X0 + 0x10]
	0x035B7BE0 RET
	0x035B7BE4 STP X30, X21, [X31 - 0x20]!
	0x035B7BE8 STP X20, X19, [X31 + 0x10]
	0x035B7BEC ADRP X21, 0xE29000
	0x035B7BF0 ADRP X20, 0xB80000
	0x035B7BF4 LDRB W8, [X21 + 0xDD]
	0x035B7BF8 LDR X20, [X20 + 0x650]
	0x035B7BFC MOV X19, X0
	0x035B7C00 TBNZ X8, 0x0, 0x35B7C18

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xE2A000
	009 Move X23, 0xB3E000
	010 Move W8, [X22+204]
	011 Move X23, [X23+1120]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xB81000
	020 Move X0, [X0+2104]
	021 Call 0x1C17CF4
	022 Move X0, 0xB81000
	023 Move X0, [X0+2088]
	024 Call 0x1C17CF4
	025 Move X0, 0xB81000
	026 Move X0, [X0+2112]
	027 Call 0x1C17CF4
	028 Move X0, 0xB3E000
	029 Move X0, [X0+1120]
	030 Call 0x1C17CF4
	031 Move X0, 0xB81000
	032 Move X0, [X0+1608]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+204], W8
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Call JSONNode.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {57}
	048 Move X8, 0xB81000
	049 Move X8, [X8+1608]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Call JSONNull.CreateOrGet
	056 Move X19, X0
	057 Move X22, [X21+16]
	058 Compare X20, 0
	059 JumpIfEqual {82}
	060 Compare X22, 0
	061 JumpIfEqual {111}
	062 Move X8, 0xB81000
	063 Move X8, [X8+2088]
	064 Move X0, X22
	065 Move X1, X20
	066 Move X2, [X8]
	067 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	068 Move X8, [X21+16]
	069 Compare X8, 0
	070 JumpIfEqual {111}
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {96}
	075 Move X9, 0xB81000
	076 Move X9, [X9+2112]
	077 Move X0, X8
	078 Move X1, X20
	079 Move X2, X19
	080 Move X3, [X9]
	081 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	082 Move X0, X31
	083 Call Guid.NewGuid
	084 Move [X31], X0
	085 Move [X31+8], X1
	086 Add X0, X31, 0
	087 Move X1, X31
	088 Call Guid.ToString, X0
	089 Compare X22, 0
	090 JumpIfEqual {111}
	091 Move X8, 0xB81000
	092 Move X8, [X8+2104]
	093 Move X1, X0
	094 Move X0, X22
	095 Move X3, [X8]
	096 Move X9, 0xB81000
	097 Move X9, [X9+2104]
	098 Move X0, X8
	099 Move X1, X20
	100 Move X3, [X9]
	101 Move X2, X19
	102 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X30, [X31+16]
	108 Move X23, [X31+24]
	109 Add X31, X31, 64
	110 Return 
	111 Call 0x1C17F20

Method: SimpleJSON.JSONNode Remove(System.String aKey)

Disassembly:
	0x035B7C04 ADRP X0, 0xB80000
	0x035B7C08 LDR X0, [X0 + 0x650]
	0x035B7C0C BL 0x1C16CF4
	0x035B7C10 MOVZ W8, 0x1
	0x035B7C14 STRB W8, [X21 + 0xDD]
	0x035B7C18 LDR X0, [X20]
	0x035B7C1C LDR X19, [X19 + 0x10]
	0x035B7C20 BL 0x1C16F10
	0x035B7C24 MOV X1, X19
	0x035B7C28 MOV X20, X0
	0x035B7C2C BL 0x35ACFF8
	0x035B7C30 MOV X0, X20
	0x035B7C34 LDP X20, X19, [X31 + 0x10]
	0x035B7C38 LDP X30, X21, [X31], #0x20
	0x035B7C3C RET
	0x035B7C40 STP X30, X21, [X31 - 0x20]!
	0x035B7C44 STP X20, X19, [X31 + 0x10]
	0x035B7C48 ADRP X21, 0xE29000
	0x035B7C4C LDRB W8, [X21 + 0xDE]
	0x035B7C50 MOV X20, X1
	0x035B7C54 MOV X19, X0
	0x035B7C58 TBNZ X8, 0x0, 0x35B7C70
	0x035B7C5C ADRP X0, 0xB3D000
	0x035B7C60 LDR X0, [X0 + 0x460]
	0x035B7C64 BL 0x1C16CF4
	0x035B7C68 MOVZ W8, 0x1
	0x035B7C6C STRB W8, [X21 + 0xDE]
	0x035B7C70 CBZ X20, 0x35B7CDC
	0x035B7C74 ADRP X21, 0xB3D000
	0x035B7C78 LDR X21, [X21 + 0x460]
	0x035B7C7C MOVZ W1, 0x22
	0x035B7C80 MOV X0, X20
	0x035B7C84 MOV X2, X31
	0x035B7C88 BL 0x3233D30
	0x035B7C8C LDR X8, [X21]
	0x035B7C90 LDR X20, [X19 + 0x10]
	0x035B7C94 MOV X19, X0
	0x035B7C98 LDR W9, [X8 + 0xE0]
	0x035B7C9C CBNZ W9, 0x35B7CA8
	0x035B7CA0 MOV X0, X8
	0x035B7CA4 BL 0x1C16DFC
	0x035B7CA8 MOV X0, X20
	0x035B7CAC BL 0x35ADBA4
	0x035B7CB0 CBZ X19, 0x35B7CDC
	0x035B7CB4 MOV X1, X0
	0x035B7CB8 MOV X0, X19
	0x035B7CBC MOV X2, X31
	0x035B7CC0 BL 0x32333E0
	0x035B7CC4 CBZ X0, 0x35B7CDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2A000
	006 Move W8, [X21+205]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB81000
	014 Move X0, [X0+2088]
	015 Call 0x1C17CF4
	016 Move X0, 0xB81000
	017 Move X0, [X0+2136]
	018 Call 0x1C17CF4
	019 Move X0, 0xB81000
	020 Move X0, [X0+2096]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+205], W8
	024 Move X0, [X20+16]
	025 Compare X0, 0
	026 JumpIfEqual {61}
	027 Move X8, 0xB81000
	028 Move X8, [X8+2088]
	029 Move X1, X19
	030 Move X2, [X8]
	031 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {54}
	036 Move X0, [X20+16]
	037 Compare X0, 0
	038 JumpIfEqual {61}
	039 Move X8, 0xB81000
	040 Move X8, [X8+2096]
	041 Move X1, X19
	042 Move X2, [X8]
	043 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	044 Move X8, [X20+16]
	045 Compare X8, 0
	046 JumpIfEqual {61}
	047 Move X9, 0xB81000
	048 Move X9, [X9+2136]
	049 Move X20, X0
	050 Move X0, X8
	051 Move X1, X19
	052 Move X2, [X9]
	053 Call Dictionary`2<Object, Object>.Remove, X0, X1
	054 Move X20, X31
	055 Move X0, X20
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return X0
	061 Call 0x1C17F20

Method: SimpleJSON.JSONNode Remove(System.Int32 aIndex)

Disassembly:
	0x035B7CC8 LDP X20, X19, [X31 + 0x10]
	0x035B7CCC MOVZ W1, 0x22
	0x035B7CD0 MOV X2, X31
	0x035B7CD4 LDP X30, X21, [X31], #0x20
	0x035B7CD8 B 0x3233D30
	0x035B7CDC BL 0x1C16F20
	0x035B7CE0 STP X30, X21, [X31 - 0x20]!
	0x035B7CE4 STP X20, X19, [X31 + 0x10]
	0x035B7CE8 ADRP X21, 0xE29000
	0x035B7CEC LDRB W8, [X21 + 0xDF]
	0x035B7CF0 MOV X20, X1
	0x035B7CF4 MOV X19, X0
	0x035B7CF8 TBNZ X8, 0x0, 0x35B7D28
	0x035B7CFC ADRP X0, 0xB3D000
	0x035B7D00 LDR X0, [X0 + 0x460]
	0x035B7D04 BL 0x1C16CF4
	0x035B7D08 ADRP X0, 0xB80000
	0x035B7D0C LDR X0, [X0 + 0x650]
	0x035B7D10 BL 0x1C16CF4
	0x035B7D14 ADRP X0, 0xB3E000
	0x035B7D18 LDR X0, [X0 + 0x278]
	0x035B7D1C BL 0x1C16CF4
	0x035B7D20 MOVZ W8, 0x1
	0x035B7D24 STRB W8, [X21 + 0xDF]
	0x035B7D28 CMP X19, X20
	0x035B7D2C B.EQ 0x35B7D70
	0x035B7D30 CBZ X20, 0x35B7D98
	0x035B7D34 ADRP X8, 0xB3E000
	0x035B7D38 LDR X8, [X8 + 0x278]
	0x035B7D3C LDR X9, [X8]
	0x035B7D40 LDR X8, [X20]
	0x035B7D44 CMP X8, X9
	0x035B7D48 B.EQ 0x35B7D78
	0x035B7D4C ADRP X9, 0xB80000
	0x035B7D50 LDR X9, [X9 + 0x650]
	0x035B7D54 LDRB W11, [X8 + 0x130]
	0x035B7D58 LDR X9, [X9]
	0x035B7D5C LDRB W10, [X9 + 0x130]
	0x035B7D60 CMP W11, W10
	0x035B7D64 B.CS 0x35B7D84
	0x035B7D68 MOV X20, X31
	0x035B7D6C B 0x35B7D98
	0x035B7D70 MOVZ W0, 0x1
	0x035B7D74 B 0x35B7DE0
	0x035B7D78 LDR X0, [X19 + 0x10]
	0x035B7D7C MOV X1, X20
	0x035B7D80 B 0x35B7DCC
	0x035B7D84 LDR X8, [X8 + 0xC8]
	0x035B7D88 ADD X8, X8, X10, 0x3, LSL
	0x035B7D8C LDUR X8, [X8 - 0x8]
	0x035B7D90 CMP X8, X9
	0x035B7D94 CSEL X20, X20, X31, EQ
	0x035B7D98 ADRP X8, 0xB3D000
	0x035B7D9C LDR X8, [X8 + 0x460]
	0x035B7DA0 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2A000
	006 Move W8, [X21+206]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xB81000
	014 Move X0, [X0+2136]
	015 Call 0x1C17CF4
	016 Move X0, 0xB81000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0xB81000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move X0, 0xB67000
	023 Move X0, [X0+832]
	024 Call 0x1C17CF4
	025 Move X0, 0xB67000
	026 Move X0, [X0+840]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+206], W8
	030 Move TEMP, X20
	031 And TEMP, TEMP, -2147483648
	032 Compare TEMP, -2147483648
	033 JumpIfEqual {58}
	034 Move X0, [X19+16]
	035 Compare X0, 0
	036 JumpIfEqual {65}
	037 Move X8, 0xB81000
	038 Move X8, [X8+2120]
	039 Move X1, [X8]
	040 Call Dictionary`2<Object, Object>.get_Count, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, 0xB81000
	043 Move X0, [X19+16]
	044 Move X8, [X8+2128]
	045 Move W1, W20
	046 Move X2, [X8]
	047 Call 0x21C16A8, X0, X1
	048 Move X3, X0
	049 Move X0, [X19+16]
	050 Compare X0, 0
	051 JumpIfEqual {65}
	052 Move X8, 0xB81000
	053 Move X8, [X8+2136]
	054 Move X19, X1
	055 Move X1, X3
	056 Move X2, [X8]
	057 Call Dictionary`2<Object, Object>.Remove, X0, X1
	058 Move X19, X31
	059 Move X0, X19
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0
	065 Call 0x1C17F20

Method: SimpleJSON.JSONNode Remove(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B7DA4 LDR W8, [X0 + 0xE0]
	0x035B7DA8 CBNZ W8, 0x35B7DB0
	0x035B7DAC BL 0x1C16DFC
	0x035B7DB0 MOV X0, X20
	0x035B7DB4 MOV X1, X31
	0x035B7DB8 BL 0x35ADA5C
	0x035B7DBC TBZ X0, 0x0, 0x35B7DDC
	0x035B7DC0 CBZ X20, 0x35B7DEC
	0x035B7DC4 LDR X0, [X19 + 0x10]
	0x035B7DC8 LDR X1, [X20 + 0x10]
	0x035B7DCC LDP X20, X19, [X31 + 0x10]
	0x035B7DD0 MOV X2, X31
	0x035B7DD4 LDP X30, X21, [X31], #0x20
	0x035B7DD8 B 0x321BA08
	0x035B7DDC MOV W0, W31
	0x035B7DE0 LDP X20, X19, [X31 + 0x10]
	0x035B7DE4 LDP X30, X21, [X31], #0x20
	0x035B7DE8 RET
	0x035B7DEC BL 0x1C16F20
	0x035B7DF0 STR X30, [X31 - 0x10]!
	0x035B7DF4 LDR X0, [X0 + 0x10]
	0x035B7DF8 CBZ X0, 0x35B7E0C
	0x035B7DFC LDR X8, [X0]
	0x035B7E00 LDP X2, X1, [X8 + 0x158]
	0x035B7E04 LDR X30, [X31], #0x10
	0x035B7E08 BR X2
	0x035B7E0C BL 0x1C16F20
	0x035B7E10 STP X30, X21, [X31 - 0x20]!
	0x035B7E14 STP X20, X19, [X31 + 0x10]
	0x035B7E18 ADRP X20, 0xE29000
	0x035B7E1C ADRP X21, 0xB3C000
	0x035B7E20 LDRB W8, [X20 + 0xE0]
	0x035B7E24 LDR X21, [X21 + 0x988]
	0x035B7E28 MOV X19, X0
	0x035B7E2C TBNZ X8, 0x0, 0x35B7E44
	0x035B7E30 ADRP X0, 0xB3C000
	0x035B7E34 LDR X0, [X0 + 0x988]
	0x035B7E38 BL 0x1C16CF4
	0x035B7E3C MOVZ W8, 0x1
	0x035B7E40 STRB W8, [X20 + 0xE0]
	0x035B7E44 LDR X8, [X21]
	0x035B7E48 STR X8, [X19 + 0x10]
	0x035B7E4C LDP X20, X19, [X31 + 0x10]
	0x035B7E50 LDP X30, X21, [X31], #0x20
	0x035B7E54 RET
	0x035B7E58 STR X30, [X31 - 0x20]!
	0x035B7E5C STP X20, X19, [X31 + 0x10]
	0x035B7E60 CBZ X1, 0x35B7EA0
	0x035B7E64 LDR X8, [X1]
	0x035B7E68 MOV X19, X1
	0x035B7E6C MOV X20, X0
	0x035B7E70 MOVZ W1, 0x3
	0x035B7E74 LDP X9, X2, [X8 + 0x1C8]
	0x035B7E78 MOV X0, X19
	0x035B7E7C BLR X9
	0x035B7E80 LDR X8, [X19]
	0x035B7E84 LDR X1, [X20 + 0x10]
	0x035B7E88 MOV X0, X19
	0x035B7E8C LDP X20, X19, [X31 + 0x10]
	0x035B7E90 LDR X3, [X8 + 0x298]
	0x035B7E94 LDR X2, [X8 + 0x2A0]
	0x035B7E98 LDR X30, [X31], #0x20
	0x035B7E9C BR X3
	0x035B7EA0 BL 0x1C16F20
	0x035B7EA4 MOVZ W0, 0x4
	0x035B7EA8 RET
	0x035B7EAC MOVZ W0, 0x1
	0x035B7EB0 RET
	0x035B7EB4 MOVI V0.2D, 0x0
	0x035B7EB8 STR X31, [X8 + 0x40]
	0x035B7EBC STP V0, V0, [X8 + 0x20]
	0x035B7EC0 STP V0, V0, [X8]
	0x035B7EC4 RET
	0x035B7EC8 STP X30, X21, [X31 - 0x20]!
	0x035B7ECC STP X20, X19, [X31 + 0x10]
	0x035B7ED0 ADRP X20, 0xE29000
	0x035B7ED4 ADRP X21, 0xB3E000
	0x035B7ED8 LDRB W8, [X20 + 0xE1]
	0x035B7EDC LDR X21, [X21 + 0xC48]
	0x035B7EE0 MOV X19, X0
	0x035B7EE4 TBNZ X8, 0x0, 0x35B7EFC
	0x035B7EE8 ADRP X0, 0xB3E000
	0x035B7EEC LDR X0, [X0 + 0xC48]
	0x035B7EF0 BL 0x1C16CF4
	0x035B7EF4 MOVZ W8, 0x1
	0x035B7EF8 STRB W8, [X20 + 0xE1]
	0x035B7EFC LDR X0, [X21]
	0x035B7F00 LDR W8, [X0 + 0xE0]
	0x035B7F04 CBNZ W8, 0x35B7F0C
	0x035B7F08 BL 0x1C16DFC
	0x035B7F0C MOV X0, X31
	0x035B7F10 ADD X19, X19, 0x10
	0x035B7F14 BL 0x3338524
	0x035B7F18 MOV X1, X0
	0x035B7F1C MOV X0, X19
	0x035B7F20 LDP X20, X19, [X31 + 0x10]
	0x035B7F24 MOV X2, X31
	0x035B7F28 LDP X30, X21, [X31], #0x20
	0x035B7F2C B 0x33662E0
	0x035B7F30 STR X30, [X31 - 0x30]!
	0x035B7F34 STP X22, X21, [X31 + 0x10]
	0x035B7F38 STP X20, X19, [X31 + 0x20]
	0x035B7F3C ADRP X22, 0xE29000
	0x035B7F40 ADRP X21, 0xB3E000
	0x035B7F44 LDRB W8, [X22 + 0xE2]
	0x035B7F48 LDR X21, [X21 + 0xC48]
	0x035B7F4C MOV X20, X1
	0x035B7F50 MOV X19, X0
	0x035B7F54 TBNZ X8, 0x0, 0x35B7F6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2A000
	007 Move X22, 0xB81000
	008 Move W8, [X20+207]
	009 Move X22, [X22+2144]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xB81000
	017 Move X0, [X0+2136]
	018 Call 0x1C17CF4
	019 Move X0, 0xB81000
	020 Move X0, [X0+2152]
	021 Call 0x1C17CF4
	022 Move X0, 0xB81000
	023 Move X0, [X0+2160]
	024 Call 0x1C17CF4
	025 Move X0, 0xB81000
	026 Move X0, [X0+2168]
	027 Call 0x1C17CF4
	028 Move X0, 0xB67000
	029 Move X0, [X0+832]
	030 Call 0x1C17CF4
	031 Move X0, 0xB81000
	032 Move X0, [X0+2176]
	033 Call 0x1C17CF4
	034 Move X0, 0xB81000
	035 Move X0, [X0+2144]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+207], W8
	039 Move X0, [X22]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X20, X0
	043 Call Object..ctor, X0
	044 Compare X20, 0
	045 JumpIfEqual {84}
	046 Move X8, 0xB81000
	047 Move X8, [X8+2168]
	048 Move [X20+16], X21
	049 Move X21, [X19+16]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move X8, 0xB81000
	053 Move X8, [X8+2176]
	054 Move X22, X0
	055 Move X2, [X8]
	056 Move X1, X20
	057 Move X3, X31
	058 Call Func`2<KeyValuePair`2<Object, Object>, Boolean>..ctor, X0, X1, X2
	059 Move X8, 0xB81000
	060 Move X8, [X8+2160]
	061 Move X2, [X8]
	062 Move X0, X21
	063 Move X1, X22
	064 Call Enumerable.Where, X0, X1
	065 Move X8, 0xB81000
	066 Move X8, [X8+2152]
	067 Move X1, [X8]
	068 Call 0x21C328C, X0
	069 Move X1, X0
	070 Move X0, [X19+16]
	071 Compare X0, 0
	072 JumpIfEqual {85}
	073 Move X8, 0xB81000
	074 Move X8, [X8+2136]
	075 Move X2, [X8]
	076 Call Dictionary`2<Object, Object>.Remove, X0, X1
	077 Move X0, [X20+16]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return X0
	084 Call 0x1C17F20
	085 Call 0x1C17F20
	086 Move X19, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X19
	089 Call 0x3EB2AD0
	090 Move X19, X0
	091 Move X0, 0xB43000
	092 Move X0, [X0+3264]
	093 Call 0x1C17D08
	094 Move X8, [X19]
	095 Move X1, [X8]
	096 Call 0x1C18270
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {103}
	101 Call 0x3EB2AE0
	102 Move X0, X31
	103 Move W0, 8
	104 Call 0x3EB2AF0
	105 Move X8, [X19]
	106 Move [X0], X8
	107 Move X1, 0x8FE000
	108 Add X1, X1, 3672
	109 Move X2, X31
	110 Call 0x3EB2B00
	111 Move X19, X0
	112 Call 0x3EB2AE0
	113 Move X0, X19
	114 Call 0x1D2D690
	115 Call 0x1991590

Method: System.Void Clear()

Disassembly:
	0x035B7F60 BL 0x1C16CF4
	0x035B7F64 MOVZ W8, 0x1
	0x035B7F68 STRB W8, [X22 + 0xE2]
	0x035B7F6C LDR X0, [X21]
	0x035B7F70 STR X31, [X31 + 0x8]
	0x035B7F74 LDR W8, [X0 + 0xE0]
	0x035B7F78 CBNZ W8, 0x35B7F80
	0x035B7F7C BL 0x1C16DFC
	0x035B7F80 MOV X0, X31
	0x035B7F84 BL 0x3338524
	0x035B7F88 MOV X2, X0
	0x035B7F8C ADD X3, X31, 0x8
	0x035B7F90 MOVZ W1, 0xA7
	0x035B7F94 MOV X0, X20
	0x035B7F98 MOV X4, X31
	0x035B7F9C BL 0x3366A70
	0x035B7FA0 TBZ X0, 0x0, 0x35B7FB4
	0x035B7FA4 LDR V0, [X31 + 0x8]
	0x035B7FA8 FMOV X8, D0
	0x035B7FAC STR D0, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE2A000
	005 Move W8, [X20+208]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB81000
	012 Move X0, [X0+2184]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+208], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0xB81000
	020 Move X8, [X8+2184]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Dictionary`2<Object, Object>.Clear, X0
	026 Return 
	027 Call 0x1C17F20

Method: SimpleJSON.JSONNode Clone()

Disassembly:
	0x035B7FB0 B 0x35B7FB8
	0x035B7FB4 LDR X8, [X19 + 0x10]
	0x035B7FB8 ORN X8, X31, X8, 0x0
	0x035B7FBC ANDS X31, X8, 0x7FFFFFFFFFFFFFFF
	0x035B7FC0 B.NE 0x35B7FC8
	0x035B7FC4 STR X31, [X19 + 0x10]
	0x035B7FC8 LDP X20, X19, [X31 + 0x20]
	0x035B7FCC LDP X22, X21, [X31 + 0x10]
	0x035B7FD0 LDR X30, [X31], #0x30
	0x035B7FD4 RET
	0x035B7FD8 LDR V0, [X0 + 0x10]
	0x035B7FDC RET
	0x035B7FE0 FMOV X8, D0
	0x035B7FE4 MOVZ X9, 0x7FF00000
	0x035B7FE8 BICS X31, X9, X8, 0x0
	0x035B7FEC FMOV D1, X31
	0x035B7FF0 FCSEL D0, D1, D0, EQ
	0x035B7FF4 STR D0, [X0 + 0x10]
	0x035B7FF8 RET
	0x035B7FFC LDR V0, [X0 + 0x10]
	0x035B8000 MOVZ X8, 0x7FF00000
	0x035B8004 FMOV D1, X8
	0x035B8008 MOVZ X9, 0x80000000
	0x035B800C FCVTZS X8, D0
	0x035B8010 FCMP D0, D1
	0x035B8014 CSEL X0, X9, X8, EQ
	0x035B8018 RET
	0x035B801C SCVTF D0, X1
	0x035B8020 STR D0, [X0 + 0x10]
	0x035B8024 RET
	0x035B8028 LDR V0, [X0 + 0x10]
	0x035B802C FCVTZS X8, D0
	0x035B8030 FCVTZU X9, D0
	0x035B8034 FCMP D0, 0x0
	0x035B8038 CSEL X0, X8, X9, MI
	0x035B803C RET
	0x035B8040 UCVTF D0, X1
	0x035B8044 STR D0, [X0 + 0x10]
	0x035B8048 RET
	0x035B804C STR X30, [X31 - 0x30]!
	0x035B8050 STP X22, X21, [X31 + 0x10]
	0x035B8054 STP X20, X19, [X31 + 0x20]
	0x035B8058 ADRP X21, 0xE28000
	0x035B805C ADRP X22, 0xB3C000
	0x035B8060 LDRB W8, [X21 + 0xE4]
	0x035B8064 LDR X22, [X22 + 0x460]
	0x035B8068 MOV X19, X1
	0x035B806C MOV X20, X0
	0x035B8070 TBNZ X8, 0x0, 0x35B8088
	0x035B8074 ADRP X0, 0xB3C000
	0x035B8078 LDR X0, [X0 + 0x460]
	0x035B807C BL 0x1C16CF4
	0x035B8080 MOVZ W8, 0x1
	0x035B8084 STRB W8, [X21 + 0xE4]
	0x035B8088 LDR X0, [X22]
	0x035B808C LDR W8, [X0 + 0xE0]
	0x035B8090 CBNZ W8, 0x35B8098
	0x035B8094 BL 0x1C16DFC
	0x035B8098 MOV X0, X20
	0x035B809C MOV X1, X31
	0x035B80A0 BL 0x33BDD8C
	0x035B80A4 LDR X8, [X20]
	0x035B80A8 MOV X0, X20
	0x035B80AC MOV X1, X19
	0x035B80B0 LDP X20, X19, [X31 + 0x20]
	0x035B80B4 LDP X3, X2, [X8 + 0x1D8]
	0x035B80B8 LDP X22, X21, [X31 + 0x10]
	0x035B80BC LDR X30, [X31], #0x30
	0x035B80C0 BR X3
	0x035B80C4 STR D8, [X31 - 0x30]!
	0x035B80C8 STP X30, X21, [X31 + 0x10]
	0x035B80CC STP X20, X19, [X31 + 0x20]
	0x035B80D0 ADRP X21, 0xE28000
	0x035B80D4 ADRP X20, 0xB65000
	0x035B80D8 LDRB W8, [X21 + 0xE5]
	0x035B80DC LDR X20, [X20 + 0x400]
	0x035B80E0 MOV X19, X0
	0x035B80E4 TBNZ X8, 0x0, 0x35B80FC
	0x035B80E8 ADRP X0, 0xB65000
	0x035B80EC LDR X0, [X0 + 0x400]
	0x035B80F0 BL 0x1C16CF4
	0x035B80F4 MOVZ W8, 0x1
	0x035B80F8 STRB W8, [X21 + 0xE5]
	0x035B80FC LDR X0, [X20]
	0x035B8100 LDR V8, [X19 + 0x10]
	0x035B8104 BL 0x1C16F10
	0x035B8108 MOV V0.16B, V8.16B
	0x035B810C MOV X19, X0
	0x035B8110 BL 0x35AD340
	0x035B8114 MOV X0, X19
	0x035B8118 LDP X20, X19, [X31 + 0x20]
	0x035B811C LDP X30, X21, [X31 + 0x10]
	0x035B8120 LDR V8, [X31], #0x30
	0x035B8124 RET
	0x035B8128 STP X30, X19, [X31 - 0x10]!
	0x035B812C LDR X8, [X0]
	0x035B8130 MOV X19, X1
	0x035B8134 LDP X9, X8, [X8 + 0x1C8]
	0x035B8138 MOV X1, X8
	0x035B813C BLR X9
	0x035B8140 CBZ X19, 0x35B8158
	0x035B8144 MOV X1, X0
	0x035B8148 MOV X0, X19
	0x035B814C MOV X2, X31
	0x035B8150 LDP X30, X19, [X31], #0x10
	0x035B8154 B 0x32333E0
	0x035B8158 BL 0x1C16F20
	0x035B815C STR X30, [X31 - 0x20]!
	0x035B8160 STP X20, X19, [X31 + 0x10]
	0x035B8164 ADRP X20, 0xE28000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X21, 0xE2A000
	008 Move X19, 0xB65000
	009 Move W8, [X21+209]
	010 Move X19, [X19+3008]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xB81000
	017 Move X0, [X0+2080]
	018 Call 0x1C17CF4
	019 Move X0, 0xB81000
	020 Move X0, [X0+2192]
	021 Call 0x1C17CF4
	022 Move X0, 0xB81000
	023 Move X0, [X0+1920]
	024 Call 0x1C17CF4
	025 Move X0, 0xB81000
	026 Move X0, [X0+1896]
	027 Call 0x1C17CF4
	028 Move X0, 0xB64000
	029 Move X0, [X0+3008]
	030 Call 0x1C17CF4
	031 Move X0, 0xB66000
	032 Move X0, [X0+832]
	033 Call 0x1C17CF4
	034 Move X0, 0xB66000
	035 Move X0, [X0+840]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+209], W8
	039 Move X0, [X19]
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X31+32], X31
	042 Move [X31], V0
	043 Move [X31+8], V0
	044 Call 0x1C17F10
	045 Move X19, X0
	046 Call JSONObject..ctor, X0
	047 Move X0, [X20+16]
	048 Compare X0, 0
	049 JumpIfEqual {96}
	050 Move X8, 0xB80000
	051 Move X8, [X8+2080]
	052 Move X22, 0xB80000
	053 Move X21, 0xB80000
	054 Move X1, [X8]
	055 Move X22, [X22+1920]
	056 Move X21, [X21+2192]
	057 Add X8, X31, 0
	058 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	059 Move X1, [X22]
	060 Add X0, X31, 0
	061 Call Enumerator<Object, Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {83}
	066 Move X0, [X31+24]
	067 Compare X0, 0
	068 JumpIfEqual {94}
	069 Move X8, [X0]
	070 Move X20, [X31+16]
	071 Move X1, [X8+736]
	072 Move X9, [X8+728]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X19, 0
	075 JumpIfEqual {95}
	076 Move X8, [X19]
	077 Move X2, X0
	078 Move X9, [X8+632]
	079 Move X3, [X8+640]
	080 Move X0, X19
	081 Move X1, X20
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X1, [X21]
	084 Add X0, X31, 0
	085 Call Enumerator<Object, Object>.Dispose, X0
	086 Move X0, X19
	087 Move X20, [X31+80]
	088 Move X19, [X31+88]
	089 Move X22, [X31+64]
	090 Move X21, [X31+72]
	091 Move X30, [X31+48]
	092 Add X31, X31, 96
	093 Return X0
	094 Call 0x1C17F20
	095 Call 0x1C17F20
	096 Call 0x1C17F20
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Call 0x3EB2AD0
	099 Move X20, [X0]
	100 Call 0x3EB2AE0
	101 Move X1, [X21]
	102 Add X0, X31, 0
	103 Call Enumerator<Object, Object>.Dispose, X0
	104 Compare X20, 0
	105 JumpIfEqual {86}
	106 Move X0, X20
	107 Call 0x1C17F18
	108 Move X19, X0
	109 Move X20, X31
	110 Move X19, X0
	111 Move X1, [X21]
	112 Add X0, X31, 0
	113 Call Enumerator<Object, Object>.Dispose, X0
	114 Compare X20, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X19
	117 Call 0x1D2D690
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Call 0x1991590

Method: System.Boolean HasKey(System.String aKey)

Disassembly:
	0x035B8168 LDRB W8, [X20 + 0xE6]
	0x035B816C MOV X19, X0
	0x035B8170 TBNZ X8, 0x0, 0x35B8200
	0x035B8174 ADRP X0, 0xB3C000
	0x035B8178 LDR X0, [X0 + 0x9D8]
	0x035B817C BL 0x1C16CF4
	0x035B8180 ADRP X0, 0xB63000
	0x035B8184 LDR X0, [X0 + 0x5F0]
	0x035B8188 BL 0x1C16CF4
	0x035B818C ADRP X0, 0xB3E000
	0x035B8190 LDR X0, [X0 + 0x978]
	0x035B8194 BL 0x1C16CF4
	0x035B8198 ADRP X0, 0xB3F000
	0x035B819C LDR X0, [X0 + 0x628]
	0x035B81A0 BL 0x1C16CF4
	0x035B81A4 ADRP X0, 0xB3B000
	0x035B81A8 LDR X0, [X0 + 0x758]
	0x035B81AC BL 0x1C16CF4
	0x035B81B0 ADRP X0, 0xB3D000
	0x035B81B4 LDR X0, [X0 + 0xA60]
	0x035B81B8 BL 0x1C16CF4
	0x035B81BC ADRP X0, 0xB64000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE29000
	006 Move W8, [X21+210]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB80000
	014 Move X0, [X0+2088]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+210], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xB80000
	022 Move X8, [X8+2088]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: SimpleJSON.JSONNode GetValueOrDefault(System.String aKey, SimpleJSON.JSONNode aDefault)

Disassembly:
	0x035B81C0 LDR X0, [X0 + 0x6B0]
	0x035B81C4 BL 0x1C16CF4
	0x035B81C8 ADRP X0, 0xB3B000
	0x035B81CC LDR X0, [X0 + 0xA90]
	0x035B81D0 BL 0x1C16CF4
	0x035B81D4 ADRP X0, 0xB40000
	0x035B81D8 LDR X0, [X0 + 0x658]
	0x035B81DC BL 0x1C16CF4
	0x035B81E0 ADRP X0, 0xB43000
	0x035B81E4 LDR X0, [X0 + 0x720]
	0x035B81E8 BL 0x1C16CF4
	0x035B81EC ADRP X0, 0xB3C000
	0x035B81F0 LDR X0, [X0 + 0x758]
	0x035B81F4 BL 0x1C16CF4
	0x035B81F8 MOVZ W8, 0x1
	0x035B81FC STRB W8, [X20 + 0xE6]
	0x035B8200 CBZ X19, 0x35B82EC
	0x035B8204 ADRP X8, 0xB3B000
	0x035B8208 LDR X8, [X8 + 0x758]
	0x035B820C MOVZ W0, 0x1
	0x035B8210 LDR X9, [X8]
	0x035B8214 LDR X8, [X19]
	0x035B8218 CMP X8, X9
	0x035B821C B.EQ 0x35B82F0
	0x035B8220 ADRP X9, 0xB43000
	0x035B8224 LDR X9, [X9 + 0x720]
	0x035B8228 LDR X9, [X9]
	0x035B822C CMP X8, X9
	0x035B8230 B.EQ 0x35B82F0
	0x035B8234 ADRP X9, 0xB3B000
	0x035B8238 LDR X9, [X9 + 0xA90]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE29000
	007 Move W8, [X22+211]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB80000
	016 Move X0, [X0+2200]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+211], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+16]
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X8, 0xB80000
	025 Move X8, [X8+2200]
	026 Add X2, X31, 8
	027 Move X1, X20
	028 Move X3, [X8]
	029 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	030 Move X8, [X31+8]
	031 And W31, W0, 1
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+48]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<SimpleJSON.JSONNode> get_Children()

Disassembly:
	0x035B823C LDR X9, [X9]
	0x035B8240 CMP X8, X9
	0x035B8244 B.EQ 0x35B82F0
	0x035B8248 ADRP X9, 0xB3E000
	0x035B824C LDR X9, [X9 + 0x978]
	0x035B8250 LDR X9, [X9]
	0x035B8254 CMP X8, X9
	0x035B8258 B.EQ 0x35B82F0
	0x035B825C ADRP X9, 0xB63000
	0x035B8260 LDR X9, [X9 + 0x5F0]
	0x035B8264 LDR X9, [X9]
	0x035B8268 CMP X8, X9
	0x035B826C B.EQ 0x35B82F0
	0x035B8270 ADRP X9, 0xB3D000
	0x035B8274 LDR X9, [X9 + 0xA60]
	0x035B8278 LDR X9, [X9]
	0x035B827C CMP X8, X9
	0x035B8280 B.EQ 0x35B82F0
	0x035B8284 ADRP X9, 0xB3C000
	0x035B8288 LDR X9, [X9 + 0x758]
	0x035B828C LDR X9, [X9]
	0x035B8290 CMP X8, X9
	0x035B8294 B.EQ 0x35B82F0
	0x035B8298 ADRP X9, 0xB3F000
	0x035B829C LDR X9, [X9 + 0x628]
	0x035B82A0 LDR X9, [X9]
	0x035B82A4 CMP X8, X9
	0x035B82A8 B.EQ 0x35B82F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE29000
	006 Move X21, 0xB80000
	007 Move W8, [X20+212]
	008 Move X21, [X21+2208]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB80000
	015 Move X0, [X0+2208]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+212], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move [X20+40], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Void WriteToStringBuilder(System.Text.StringBuilder aSB, System.Int32 aIndent, System.Int32 aIndentInc, SimpleJSON.JSONTextMode aMode)

Disassembly:
	0x035B82E0 CMP X8, X9
	0x035B82E4 CSET W0, EQ
	0x035B82E8 B 0x35B82F0
	0x035B82EC MOV W0, W31
	0x035B82F0 LDP X20, X19, [X31 + 0x10]
	0x035B82F4 LDR X30, [X31], #0x20
	0x035B82F8 RET
	0x035B82FC STP X30, X21, [X31 - 0x20]!
	0x035B8300 STP X20, X19, [X31 + 0x10]
	0x035B8304 ADRP X21, 0xE28000
	0x035B8308 LDRB W8, [X21 + 0xE7]
	0x035B830C MOV X20, X1
	0x035B8310 MOV X19, X0
	0x035B8314 TBNZ X8, 0x0, 0x35B8344
	0x035B8318 ADRP X0, 0xB44000
	0x035B831C LDR X0, [X0 + 0x9E8]
	0x035B8320 BL 0x1C16CF4
	0x035B8324 ADRP X0, 0xB3C000
	0x035B8328 LDR X0, [X0 + 0x460]
	0x035B832C BL 0x1C16CF4
	0x035B8330 ADRP X0, 0xB65000
	0x035B8334 LDR X0, [X0 + 0x400]
	0x035B8338 BL 0x1C16CF4
	0x035B833C MOVZ W8, 0x1
	0x035B8340 STRB W8, [X21 + 0xE7]
	0x035B8344 CBZ X20, 0x35B840C
	0x035B8348 CMP X19, X20
	0x035B834C B.EQ 0x35B8378
	0x035B8350 ADRP X8, 0xB65000
	0x035B8354 LDR X8, [X8 + 0x400]
	0x035B8358 LDR X9, [X20]
	0x035B835C LDR X8, [X8]
	0x035B8360 LDRB W11, [X9 + 0x130]
	0x035B8364 LDRB W10, [X8 + 0x130]
	0x035B8368 CMP W11, W10
	0x035B836C B.CS 0x35B8380
	0x035B8370 MOV X21, X31
	0x035B8374 B 0x35B8394
	0x035B8378 MOVZ W0, 0x1
	0x035B837C B 0x35B8410
	0x035B8380 LDR X9, [X9 + 0xC8]
	0x035B8384 ADD X9, X9, X10, 0x3, LSL
	0x035B8388 LDUR X9, [X9 - 0x8]
	0x035B838C CMP X9, X8
	0x035B8390 CSEL X21, X20, X31, EQ
	0x035B8394 ADRP X8, 0xB3C000
	0x035B8398 LDR X8, [X8 + 0x460]
	0x035B839C LDR X0, [X8]
	0x035B83A0 LDR W8, [X0 + 0xE0]
	0x035B83A4 CBNZ W8, 0x35B83AC
	0x035B83A8 BL 0x1C16DFC
	0x035B83AC MOV X0, X21
	0x035B83B0 MOV X1, X31
	0x035B83B4 BL 0x35ADA5C
	0x035B83B8 TBZ X0, 0x0, 0x35B83CC
	0x035B83BC CBZ X21, 0x35B841C
	0x035B83C0 LDR V0, [X19 + 0x10]
	0x035B83C4 LDR V1, [X21 + 0x10]
	0x035B83C8 B 0x35B8400
	0x035B83CC MOV X0, X20
	0x035B83D0 BL 0x35B815C
	0x035B83D4 TBZ X0, 0x0, 0x35B840C
	0x035B83D8 ADRP X8, 0xB44000
	0x035B83DC LDR X8, [X8 + 0x9E8]
	0x035B83E0 LDR X0, [X8]
	0x035B83E4 LDR W8, [X0 + 0xE0]
	0x035B83E8 CBNZ W8, 0x35B83F0
	0x035B83EC BL 0x1C16DFC
	0x035B83F0 MOV X0, X20
	0x035B83F4 MOV X1, X31
	0x035B83F8 BL 0x332189C
	0x035B83FC LDR V1, [X19 + 0x10]
	0x035B8400 FCMP D0, D1
	0x035B8404 CSET W0, EQ
	0x035B8408 B 0x35B8410
	0x035B840C MOV W0, W31
	0x035B8410 LDP X20, X19, [X31 + 0x10]
	0x035B8414 LDP X30, X21, [X31], #0x20
	0x035B8418 RET
	0x035B841C BL 0x1C16F20
	0x035B8420 LDR X8, [X0 + 0x10]
	0x035B8424 SUB X9, X31, X8
	0x035B8428 AND X10, X8, 0x7FFFFFFFFFFFFFFF
	0x035B842C ANDS X31, X9, 0x7FFFFFFFFFFFFFFF
	0x035B8430 CSEL X8, X10, X8, EQ
	0x035B8434 UBFM X9, X8, 0x20, 0x3F
	0x035B8438 EOR W0, W9, W8, 0x0
	0x035B843C RET
	0x035B8440 STR X31, [X0 + 0x10]
	0x035B8444 RET
	0x035B8448 STR X30, [X31 - 0x20]!
	0x035B844C STP X20, X19, [X31 + 0x10]
	0x035B8450 CBZ X1, 0x35B8490
	0x035B8454 LDR X8, [X1]
	0x035B8458 MOV X19, X1
	0x035B845C MOV X20, X0
	0x035B8460 MOVZ W1, 0x4
	0x035B8464 LDP X9, X2, [X8 + 0x1C8]
	0x035B8468 MOV X0, X19
	0x035B846C BLR X9
	0x035B8470 LDR X8, [X19]
	0x035B8474 LDR V0, [X20 + 0x10]
	0x035B8478 MOV X0, X19
	0x035B847C LDP X20, X19, [X31 + 0x10]
	0x035B8480 LDR X2, [X8 + 0x218]
	0x035B8484 LDR X1, [X8 + 0x220]
	0x035B8488 LDR X30, [X31], #0x20
	0x035B848C BR X2
	0x035B8490 BL 0x1C16F20
	0x035B8494 MOVZ W0, 0x6
	0x035B8498 RET
	0x035B849C MOVZ W0, 0x1
	0x035B84A0 RET
	0x035B84A4 MOVI V0.2D, 0x0
	0x035B84A8 STR X31, [X8 + 0x40]
	0x035B84AC STP V0, V0, [X8 + 0x20]
	0x035B84B0 STP V0, V0, [X8]
	0x035B84B4 RET
	0x035B84B8 STP X30, X21, [X31 - 0x20]!
	0x035B84BC STP X20, X19, [X31 + 0x10]
	0x035B84C0 ADRP X20, 0xE28000
	0x035B84C4 ADRP X21, 0xB3B000
	0x035B84C8 LDRB W8, [X20 + 0xE8]
	0x035B84CC LDR X21, [X21 + 0xB58]
	0x035B84D0 MOV X19, X0
	0x035B84D4 TBNZ X8, 0x0, 0x35B84EC
	0x035B84D8 ADRP X0, 0xB3B000
	0x035B84DC LDR X0, [X0 + 0xB58]
	0x035B84E0 BL 0x1C16CF4
	0x035B84E4 MOVZ W8, 0x1
	0x035B84E8 STRB W8, [X20 + 0xE8]
	0x035B84EC LDR X0, [X21]
	0x035B84F0 LDR W8, [X0 + 0xE0]
	0x035B84F4 CBNZ W8, 0x35B84FC
	0x035B84F8 BL 0x1C16DFC
	0x035B84FC ADD X0, X19, 0x10
	0x035B8500 LDP X20, X19, [X31 + 0x10]
	0x035B8504 MOV X1, X31
	0x035B8508 LDP X30, X21, [X31], #0x20
	0x035B850C B 0x33176C4
	0x035B8510 STR X30, [X31 - 0x30]!
	0x035B8514 STP X22, X21, [X31 + 0x10]
	0x035B8518 STP X20, X19, [X31 + 0x20]
	0x035B851C ADRP X22, 0xE28000
	0x035B8520 ADRP X21, 0xB3B000
	0x035B8524 LDRB W8, [X22 + 0xE9]
	0x035B8528 LDR X21, [X21 + 0xB58]
	0x035B852C MOV X20, X1
	0x035B8530 MOV X19, X0
	0x035B8534 TBNZ X8, 0x0, 0x35B854C
	0x035B8538 ADRP X0, 0xB3B000
	0x035B853C LDR X0, [X0 + 0xB58]
	0x035B8540 BL 0x1C16CF4
	0x035B8544 MOVZ W8, 0x1
	0x035B8548 STRB W8, [X22 + 0xE9]
	0x035B854C LDR X0, [X21]
	0x035B8550 STRB W31, [X31 + 0xC]
	0x035B8554 LDR W8, [X0 + 0xE0]
	0x035B8558 CBNZ W8, 0x35B8560
	0x035B855C BL 0x1C16DFC
	0x035B8560 ADD X1, X31, 0xC
	0x035B8564 MOV X0, X20
	0x035B8568 MOV X2, X31
	0x035B856C BL 0x3317DAC
	0x035B8570 TBZ X0, 0x0, 0x35B857C
	0x035B8574 LDRB W8, [X31 + 0xC]
	0x035B8578 STRB W8, [X19 + 0x10]
	0x035B857C LDP X20, X19, [X31 + 0x20]
	0x035B8580 LDP X22, X21, [X31 + 0x10]
	0x035B8584 LDR X30, [X31], #0x30
	0x035B8588 RET
	0x035B858C LDRB W0, [X0 + 0x10]
	0x035B8590 RET
	0x035B8594 AND W8, W1, 0x1
	0x035B8598 STRB W8, [X0 + 0x10]
	0x035B859C RET
	0x035B85A0 STR X30, [X31 - 0x30]!
	0x035B85A4 STP X22, X21, [X31 + 0x10]
	0x035B85A8 STP X20, X19, [X31 + 0x20]
	0x035B85AC ADRP X21, 0xE28000
	0x035B85B0 ADRP X22, 0xB3C000
	0x035B85B4 LDRB W8, [X21 + 0xEB]
	0x035B85B8 LDR X22, [X22 + 0x460]
	0x035B85BC MOV X19, X1
	0x035B85C0 MOV X20, X0
	0x035B85C4 TBNZ X8, 0x0, 0x35B85DC
	0x035B85C8 ADRP X0, 0xB3C000
	0x035B85CC LDR X0, [X0 + 0x460]
	0x035B85D0 BL 0x1C16CF4
	0x035B85D4 MOVZ W8, 0x1
	0x035B85D8 STRB W8, [X21 + 0xEB]
	0x035B85DC LDR X0, [X22]
	0x035B85E0 LDR W8, [X0 + 0xE0]
	0x035B85E4 CBNZ W8, 0x35B85EC
	0x035B85E8 BL 0x1C16DFC
	0x035B85EC MOV X0, X20
	0x035B85F0 MOV X1, X31
	0x035B85F4 BL 0x33BDD8C
	0x035B85F8 LDR X8, [X20]
	0x035B85FC MOV X0, X20
	0x035B8600 MOV X1, X19
	0x035B8604 LDP X20, X19, [X31 + 0x20]
	0x035B8608 LDP X3, X2, [X8 + 0x1D8]
	0x035B860C LDP X22, X21, [X31 + 0x10]
	0x035B8610 LDR X30, [X31], #0x30
	0x035B8614 BR X3
	0x035B8618 STP X30, X21, [X31 - 0x20]!
	0x035B861C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X24, 0xE29000
	015 Move W8, [X24+213]
	016 Move W21, W4
	017 Move W22, W3
	018 Move W20, W2
	019 Move X19, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {51}
	025 Move X0, 0xB80000
	026 Move X0, [X0+2080]
	027 Call 0x1C17CF4
	028 Move X0, 0xB80000
	029 Move X0, [X0+2192]
	030 Call 0x1C17CF4
	031 Move X0, 0xB80000
	032 Move X0, [X0+1920]
	033 Call 0x1C17CF4
	034 Move X0, 0xB80000
	035 Move X0, [X0+1896]
	036 Call 0x1C17CF4
	037 Move X0, 0xB3D000
	038 Move X0, [X0+1120]
	039 Call 0x1C17CF4
	040 Move X0, 0xB66000
	041 Move X0, [X0+832]
	042 Call 0x1C17CF4
	043 Move X0, 0xB66000
	044 Move X0, [X0+840]
	045 Call 0x1C17CF4
	046 Move X0, 0xB40000
	047 Move X0, [X0+2344]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X24+213], W8
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X31+80], X31
	053 Move [X31+48], V0
	054 Move [X31+56], V0
	055 Compare X19, 0
	056 JumpIfEqual {193}
	057 Move W1, 123
	058 Move X0, X19
	059 Move X2, X31
	060 Call StringBuilder.Append, X0, X1
	061 Move W8, [X23+24]
	062 Move X0, [X23+16]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Compare X0, 0
	066 JumpIfEqual {193}
	067 Move X8, 0xB80000
	068 Move X8, [X8+2080]
	069 Move X28, 0xB80000
	070 Move X28, [X28+1920]
	071 Move X29, 0xB3D000
	072 Move X1, [X8]
	073 Move X27, 0xB40000
	074 Move X29, [X29+1120]
	075 Move X27, [X27+2344]
	076 Add X8, X31, 8
	077 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move X8, [X31+40]
	081 Add W23, W22, W20
	082 Move W26, 1
	083 Move [X31+48], V0
	084 Move [X31+56], V1
	085 Move [X31+80], X8
	086 Move X1, [X28]
	087 Add X0, X31, 48
	088 Call Enumerator<Object, Object>.MoveNext, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {157}
	093 Move X25, [X31+64]
	094 Move X24, [X31+72]
	095 Move TEMP, X26
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {103}
	099 Move W1, 44
	100 Move X0, X19
	101 Move X2, X31
	102 Call StringBuilder.Append, X0, X1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X19
	105 Move X1, X31
	106 Call StringBuilder.AppendLine, X0
	107 Move W1, 32
	108 Move X0, X19
	109 Move W2, W23
	110 Move X3, X31
	111 Call StringBuilder.Append, X0, X1, X2
	112 Move W1, 34
	113 Move X0, X19
	114 Move X2, X31
	115 Call StringBuilder.Append, X0, X1
	116 Move X26, X0
	117 Move X0, [X29]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X25
	123 Call JSONNode.Escape, X0
	124 Move X1, X0
	125 Compare X26, 0
	126 JumpIfEqual {191}
	127 Move X0, X26
	128 Move X2, X31
	129 Call StringBuilder.Append, X0, X1
	130 Compare X0, 0
	131 JumpIfEqual {192}
	132 Move W1, 34
	133 Move X2, X31
	134 Call StringBuilder.Append, X0, X1
	135 Compare W21, 0
	136 JumpIfEqual {141}
	137 Move X1, [X27]
	138 Move X0, X19
	139 Move X2, X31
	140 Call StringBuilder.Append, X0, X1
	141 Move W1, 58
	142 Move X0, X19
	143 Move X2, X31
	144 Call StringBuilder.Append, X0, X1
	145 Compare X24, 0
	146 JumpIfEqual {190}
	147 Move X8, [X24]
	148 Move X9, [X8+808]
	149 Move X5, [X8+816]
	150 Move X0, X24
	151 Move X1, X19
	152 Move W2, W23
	153 Move W3, W22
	154 Move W4, W21
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move W26, W31
	157 Move X8, 0xB80000
	158 Move X8, [X8+2192]
	159 Add X0, X31, 48
	160 Move X1, [X8]
	161 Call Enumerator<Object, Object>.Dispose, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X19
	164 Move X1, X31
	165 Call StringBuilder.AppendLine, X0
	166 Compare X0, 0
	167 JumpIfEqual {193}
	168 Move W1, 32
	169 Move W2, W20
	170 Move X3, X31
	171 Call StringBuilder.Append, X0, X1, X2
	172 Move W1, 125
	173 Move X0, X19
	174 Move X2, X31
	175 Call StringBuilder.Append, X0, X1
	176 Move X20, [X31+176]
	177 Move X19, [X31+184]
	178 Move X22, [X31+160]
	179 Move X21, [X31+168]
	180 Move X24, [X31+144]
	181 Move X23, [X31+152]
	182 Move X26, [X31+128]
	183 Move X25, [X31+136]
	184 Move X28, [X31+112]
	185 Move X27, [X31+120]
	186 Move X29, [X31+96]
	187 Move X30, [X31+104]
	188 Add X31, X31, 192
	189 Return 
	190 Call 0x1C17F20
	191 Call 0x1C17F20
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Move X22, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X22
	197 Call 0x3EB2AD0
	198 Move X23, [X0]
	199 Call 0x3EB2AE0
	200 Move X8, 0xB80000
	201 Move X8, [X8+2192]
	202 Add X0, X31, 48
	203 Move X1, [X8]
	204 Call Enumerator<Object, Object>.Dispose, X0
	205 Compare X23, 0
	206 JumpIfEqual {162}
	207 Move X0, X23
	208 Call 0x1C17F18
	209 Move X23, X31
	210 Move X22, X0
	211 Move X8, 0xB80000
	212 Move X8, [X8+2192]
	213 Move X1, [X8]
	214 Add X0, X31, 48
	215 Call Enumerator<Object, Object>.Dispose, X0
	216 Compare X23, 0
	217 JumpIfNotEqual {220}
	218 Move X0, X22
	219 Call 0x1D2D690
	220 Move X0, X23
	221 Call 0x1C17F18
	222 Call 0x1991590

Method: System.Void SerializeBinary(System.IO.BinaryWriter aWriter)

Disassembly:
	0x035B8620 ADRP X21, 0xE28000
	0x035B8624 ADRP X20, 0xB7F000
	0x035B8628 LDRB W8, [X21 + 0xEC]
	0x035B862C LDR X20, [X20 + 0x660]
	0x035B8630 MOV X19, X0
	0x035B8634 TBNZ X8, 0x0, 0x35B864C
	0x035B8638 ADRP X0, 0xB7F000
	0x035B863C LDR X0, [X0 + 0x660]
	0x035B8640 BL 0x1C16CF4
	0x035B8644 MOVZ W8, 0x1
	0x035B8648 STRB W8, [X21 + 0xEC]
	0x035B864C LDR X0, [X20]
	0x035B8650 LDRB W19, [X19 + 0x10]
	0x035B8654 BL 0x1C16F10
	0x035B8658 MOV W1, W19
	0x035B865C MOV X20, X0
	0x035B8660 BL 0x35AD928
	0x035B8664 MOV X0, X20
	0x035B8668 LDP X20, X19, [X31 + 0x10]
	0x035B866C LDP X30, X21, [X31], #0x20
	0x035B8670 RET
	0x035B8674 STP X30, X21, [X31 - 0x20]!
	0x035B8678 STP X20, X19, [X31 + 0x10]
	0x035B867C ADRP X21, 0xE28000
	0x035B8680 LDRB W8, [X21 + 0xED]
	0x035B8684 MOV X19, X1
	0x035B8688 MOV X20, X0
	0x035B868C TBNZ X8, 0x0, 0x35B86B0
	0x035B8690 ADRP X0, 0xB45000
	0x035B8694 LDR X0, [X0 + 0xFF8]
	0x035B8698 BL 0x1C16CF4
	0x035B869C ADRP X0, 0xB46000
	0x035B86A0 LDR X0, [X0]
	0x035B86A4 BL 0x1C16CF4
	0x035B86A8 MOVZ W8, 0x1
	0x035B86AC STRB W8, [X21 + 0xED]
	0x035B86B0 CBZ X19, 0x35B86E8
	0x035B86B4 LDRB W8, [X20 + 0x10]
	0x035B86B8 ADRP X9, 0xB45000
	0x035B86BC ADRP X10, 0xB46000
	0x035B86C0 LDR X9, [X9 + 0xFF8]
	0x035B86C4 LDR X10, [X10]
	0x035B86C8 CMP W8, 0x0
	0x035B86CC MOV X0, X19
	0x035B86D0 LDP X20, X19, [X31 + 0x10]
	0x035B86D4 CSEL X8, X9, X10, EQ
	0x035B86D8 LDR X1, [X8]
	0x035B86DC MOV X2, X31
	0x035B86E0 LDP X30, X21, [X31], #0x20
	0x035B86E4 B 0x32333E0
	0x035B86E8 BL 0x1C16F20
	0x035B86EC STP X30, X21, [X31 - 0x20]!
	0x035B86F0 STP X20, X19, [X31 + 0x10]
	0x035B86F4 ADRP X21, 0xE28000
	0x035B86F8 LDRB W8, [X21 + 0xEE]
	0x035B86FC MOV X19, X1
	0x035B8700 MOV X20, X0
	0x035B8704 TBNZ X8, 0x0, 0x35B871C
	0x035B8708 ADRP X0, 0xB3B000
	0x035B870C LDR X0, [X0 + 0xB58]
	0x035B8710 BL 0x1C16CF4
	0x035B8714 MOVZ W8, 0x1
	0x035B8718 STRB W8, [X21 + 0xEE]
	0x035B871C CBZ X19, 0x35B8738
	0x035B8720 ADRP X8, 0xB3B000
	0x035B8724 LDR X8, [X8 + 0xB58]
	0x035B8728 LDR X9, [X19]
	0x035B872C LDR X8, [X8]
	0x035B8730 CMP X9, X8
	0x035B8734 B.EQ 0x35B8740
	0x035B8738 MOV W0, W31
	0x035B873C B 0x35B8758
	0x035B8740 LDRB W20, [X20 + 0x10]
	0x035B8744 MOV X0, X19
	0x035B8748 BL 0x1C16E08
	0x035B874C LDRB W8, [X0]
	0x035B8750 CMP W20, W8
	0x035B8754 CSET W0, EQ
	0x035B8758 LDP X20, X19, [X31 + 0x10]
	0x035B875C LDP X30, X21, [X31], #0x20
	0x035B8760 RET
	0x035B8764 STP X30, X21, [X31 - 0x20]!
	0x035B8768 STP X20, X19, [X31 + 0x10]
	0x035B876C ADRP X20, 0xE28000
	0x035B8770 ADRP X21, 0xB3B000
	0x035B8774 LDRB W8, [X20 + 0xEF]
	0x035B8778 LDR X21, [X21 + 0xB58]
	0x035B877C MOV X19, X0
	0x035B8780 TBNZ X8, 0x0, 0x35B8798
	0x035B8784 ADRP X0, 0xB3B000
	0x035B8788 LDR X0, [X0 + 0xB58]
	0x035B878C BL 0x1C16CF4
	0x035B8790 MOVZ W8, 0x1
	0x035B8794 STRB W8, [X20 + 0xEF]
	0x035B8798 LDR X0, [X21]
	0x035B879C LDR W8, [X0 + 0xE0]
	0x035B87A0 CBNZ W8, 0x35B87A8
	0x035B87A4 BL 0x1C16DFC
	0x035B87A8 ADD X0, X19, 0x10
	0x035B87AC LDP X20, X19, [X31 + 0x10]
	0x035B87B0 MOV X1, X31
	0x035B87B4 LDP X30, X21, [X31], #0x20
	0x035B87B8 B 0x33176B4
	0x035B87BC STRB W31, [X0 + 0x10]
	0x035B87C0 RET
	0x035B87C4 STR X30, [X31 - 0x20]!
	0x035B87C8 STP X20, X19, [X31 + 0x10]
	0x035B87CC CBZ X1, 0x35B8808
	0x035B87D0 LDR X8, [X1]
	0x035B87D4 MOV X19, X1
	0x035B87D8 MOV X20, X0
	0x035B87DC MOVZ W1, 0x6
	0x035B87E0 LDP X9, X2, [X8 + 0x1C8]
	0x035B87E4 MOV X0, X19
	0x035B87E8 BLR X9
	0x035B87EC LDR X8, [X19]
	0x035B87F0 LDRB W1, [X20 + 0x10]
	0x035B87F4 MOV X0, X19
	0x035B87F8 LDP X20, X19, [X31 + 0x10]
	0x035B87FC LDP X3, X2, [X8 + 0x1B8]
	0x035B8800 LDR X30, [X31], #0x20
	0x035B8804 BR X3
	0x035B8808 BL 0x1C16F20
	0x035B880C STP X30, X21, [X31 - 0x20]!
	0x035B8810 STP X20, X19, [X31 + 0x10]
	0x035B8814 ADRP X20, 0xE28000
	0x035B8818 ADRP X21, 0xB3C000
	0x035B881C LDRB W8, [X20 + 0xF1]
	0x035B8820 LDR X21, [X21 + 0x460]
	0x035B8824 MOV X19, X0
	0x035B8828 TBNZ X8, 0x0, 0x35B8840
	0x035B882C ADRP X0, 0xB3C000
	0x035B8830 LDR X0, [X0 + 0x460]
	0x035B8834 BL 0x1C16CF4
	0x035B8838 MOVZ W8, 0x1
	0x035B883C STRB W8, [X20 + 0xF1]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0xE29000
	010 Move W8, [X21+214]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xB80000
	018 Move X0, [X0+2120]
	019 Call 0x1C17CF4
	020 Move X0, 0xB80000
	021 Move X0, [X0+2096]
	022 Call 0x1C17CF4
	023 Move X0, 0xB80000
	024 Move X0, [X0+2216]
	025 Call 0x1C17CF4
	026 Move X0, 0xB80000
	027 Move X0, [X0+2224]
	028 Call 0x1C17CF4
	029 Move X0, 0xB80000
	030 Move X0, [X0+2232]
	031 Call 0x1C17CF4
	032 Move X0, 0xB80000
	033 Move X0, [X0+2240]
	034 Call 0x1C17CF4
	035 Move X0, 0xB80000
	036 Move X0, [X0+2248]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+214], W8
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move [X31+24], X31
	043 Compare X19, 0
	044 JumpIfEqual {125}
	045 Move X8, [X19]
	046 Move W1, 2
	047 Move X0, X19
	048 Move X9, [X8+456]
	049 Move X2, [X8+464]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, [X20+16]
	052 Compare X0, 0
	053 JumpIfEqual {125}
	054 Move X8, 0xB80000
	055 Move X8, [X8+2120]
	056 Move X1, [X8]
	057 Call Dictionary`2<Object, Object>.get_Count, X0
	058 Move X8, [X19]
	059 Move W1, W0
	060 Move X0, X19
	061 Move X9, [X8+584]
	062 Move X2, [X8+592]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X0, [X20+16]
	065 Compare X0, 0
	066 JumpIfEqual {125}
	067 Move X8, 0xB80000
	068 Move X8, [X8+2216]
	069 Move X1, [X8]
	070 Call Dictionary`2<Object, Object>.get_Keys, X0
	071 Compare X0, 0
	072 JumpIfEqual {125}
	073 Move X8, 0xB80000
	074 Move X8, [X8+2248]
	075 Move X23, 0xB80000
	076 Move X24, 0xB80000
	077 Move X22, 0xB80000
	078 Move X1, [X8]
	079 Move X23, [X23+2232]
	080 Move X24, [X24+2096]
	081 Move X22, [X22+2224]
	082 Add X8, X31, 8
	083 Call KeyCollection<Object, Object>.GetEnumerator, X0
	084 Move X1, [X23]
	085 Add X0, X31, 8
	086 Call Enumerator<Object, Object>.MoveNext, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {111}
	091 Move X8, [X19]
	092 Move X21, [X31+24]
	093 Move X9, [X8+664]
	094 Move X2, [X8+672]
	095 Move X0, X19
	096 Move X1, X21
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X0, [X20+16]
	099 Compare X0, 0
	100 JumpIfEqual {123}
	101 Move X2, [X24]
	102 Move X1, X21
	103 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {124}
	106 Move X8, [X0]
	107 Move X9, [X8+1064]
	108 Move X2, [X8+1072]
	109 Move X1, X19
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X1, [X22]
	112 Add X0, X31, 8
	113 Call Enumerator<Object, Object>.Dispose, X0
	114 Move X20, [X31+80]
	115 Move X19, [X31+88]
	116 Move X22, [X31+64]
	117 Move X21, [X31+72]
	118 Move X24, [X31+48]
	119 Move X23, [X31+56]
	120 Move X30, [X31+32]
	121 Add X31, X31, 96
	122 Return 
	123 Call 0x1C17F20
	124 Call 0x1C17F20
	125 Call 0x1C17F20
	126 Move X19, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X19
	129 Call 0x3EB2AD0
	130 Move X20, [X0]
	131 Call 0x3EB2AE0
	132 Move X1, [X22]
	133 Add X0, X31, 8
	134 Call Enumerator<Object, Object>.Dispose, X0
	135 Compare X20, 0
	136 JumpIfEqual {114}
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Move X20, X31
	140 Move X19, X0
	141 Move X1, [X22]
	142 Add X0, X31, 8
	143 Call Enumerator<Object, Object>.Dispose, X0
	144 Compare X20, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X19
	147 Call 0x1D2D690
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x035AF864 BL 0x1C16DFC
	0x035AF868 ADD X0, X31, 0x8
	0x035AF86C MOV X1, X31
	0x035AF870 BL 0x33D7400
	0x035AF874 LDR X8, [X19]
	0x035AF878 MOV X1, X0
	0x035AF87C MOV X0, X19
	0x035AF880 LDP X9, X2, [X8 + 0x1D8]
	0x035AF884 BLR X9
	0x035AF888 LDR X8, [X20 + 0x28]
	0x035AF88C LDR X9, [X31 + 0x18]
	0x035AF890 CMP X8, X9
	0x035AF894 B.NE 0x35AF8AC
	0x035AF898 LDP X20, X19, [X31 + 0x40]
	0x035AF89C LDP X22, X21, [X31 + 0x30]
	0x035AF8A0 LDR X30, [X31 + 0x20]
	0x035AF8A4 ADD X31, X31, 0x50
	0x035AF8A8 RET
	0x035AF8AC BL 0x3EB1B20
	0x035AF8B0 SUB X31, X31, 0x40
	0x035AF8B4 STP X30, X21, [X31 + 0x20]
	0x035AF8B8 STP X20, X19, [X31 + 0x30]
	0x035AF8BC MRS X21, 0xC000
	0x035AF8C0 LDR X8, [X21 + 0x28]
	0x035AF8C4 ADRP X20, 0xE31000
	0x035AF8C8 ADRP X19, 0xB6C000
	0x035AF8CC STR X8, [X31 + 0x18]
	0x035AF8D0 STP X0, X1, [X31 + 0x8]
	0x035AF8D4 LDRB W8, [X20 + 0x66]
	0x035AF8D8 LDR X19, [X19 + 0x5F0]
	0x035AF8DC TBNZ X8, 0x0, 0x35AF900
	0x035AF8E0 ADRP X0, 0xB6C000
	0x035AF8E4 LDR X0, [X0 + 0x5F0]
	0x035AF8E8 BL 0x1C16CF4
	0x035AF8EC ADRP X0, 0xB88000
	0x035AF8F0 LDR X0, [X0 + 0x650]
	0x035AF8F4 BL 0x1C16CF4
	0x035AF8F8 MOVZ W8, 0x1
	0x035AF8FC STRB W8, [X20 + 0x66]
	0x035AF900 LDR X0, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE32000
	008 Move X23, 0xB89000
	009 Move X20, 0xB89000
	010 Move X21, 0xB46000
	011 Move W8, [X22+215]
	012 Move X23, [X23+1720]
	013 Move X20, [X20+1728]
	014 Move X21, [X21+1120]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xB89000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xB89000
	024 Move X0, [X0+1720]
	025 Call 0x1C17CF4
	026 Move X0, 0xB46000
	027 Move X0, [X0+1120]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+215], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X1, [X20]
	034 Move X20, X0
	035 Call Dictionary`2<Object, Object>..ctor, X0
	036 Move [X19+16], X20
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call Object..ctor, X0
	051 Return 

