Type: SimpleJSON.JSONObject/<get_Children>d__27

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x035B82AC ADRP X9, 0xB40000
	0x035B82B0 LDR X9, [X9 + 0x658]
	0x035B82B4 LDR X9, [X9]
	0x035B82B8 CMP X8, X9
	0x035B82BC B.EQ 0x35B82F0
	0x035B82C0 ADRP X9, 0xB64000
	0x035B82C4 LDR X9, [X9 + 0x6B0]
	0x035B82C8 LDR X9, [X9]
	0x035B82CC CMP X8, X9
	0x035B82D0 B.EQ 0x35B82F0
	0x035B82D4 ADRP X9, 0xB3C000
	0x035B82D8 LDR X9, [X9 + 0x9D8]
	0x035B82DC LDR X9, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x035B88B4 STRB W8, [X19 + 0xF2]
	0x035B88B8 LDR X0, [X20]
	0x035B88BC LDP X20, X19, [X31 + 0x10]
	0x035B88C0 LDR X30, [X31], #0x20
	0x035B88C4 RET
	0x035B88C8 RET
	0x035B88CC MOV W0, W31

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <get_Children>d__27.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x035B88D0 RET
	0x035B88D4 RET
	0x035B88D8 STR X30, [X31 - 0x20]!
	0x035B88DC STP X20, X19, [X31 + 0x10]
	0x035B88E0 ADRP X19, 0xE28000
	0x035B88E4 ADRP X20, 0xB7F000
	0x035B88E8 LDRB W8, [X19 + 0xF3]
	0x035B88EC LDR X20, [X20 + 0x648]
	0x035B88F0 TBNZ X8, 0x0, 0x35B8908
	0x035B88F4 ADRP X0, 0xB7F000
	0x035B88F8 LDR X0, [X0 + 0x648]
	0x035B88FC BL 0x1C16CF4
	0x035B8900 MOVZ W8, 0x1
	0x035B8904 STRB W8, [X19 + 0xF3]
	0x035B8908 LDR X0, [X20]
	0x035B890C LDR W8, [X0 + 0xE0]
	0x035B8910 CBNZ W8, 0x35B8918
	0x035B8914 BL 0x1C16DFC
	0x035B8918 LDP X20, X19, [X31 + 0x10]
	0x035B891C LDR X30, [X31], #0x20
	0x035B8920 B 0x35AD064
	0x035B8924 STP X30, X21, [X31 - 0x20]!
	0x035B8928 STP X20, X19, [X31 + 0x10]
	0x035B892C ADRP X21, 0xE28000
	0x035B8930 LDRB W8, [X21 + 0xF4]
	0x035B8934 MOV X19, X1
	0x035B8938 MOV X20, X0
	0x035B893C TBNZ X8, 0x0, 0x35B8954
	0x035B8940 ADRP X0, 0xB7F000
	0x035B8944 LDR X0, [X0 + 0x648]
	0x035B8948 BL 0x1C16CF4
	0x035B894C MOVZ W8, 0x1
	0x035B8950 STRB W8, [X21 + 0xF4]
	0x035B8954 CMP X20, X19
	0x035B8958 B.EQ 0x35B8988
	0x035B895C CBZ X19, 0x35B8980
	0x035B8960 ADRP X8, 0xB7F000
	0x035B8964 LDR X8, [X8 + 0x648]
	0x035B8968 LDR X9, [X19]
	0x035B896C LDR X8, [X8]
	0x035B8970 LDRB W11, [X9 + 0x130]
	0x035B8974 LDRB W10, [X8 + 0x130]
	0x035B8978 CMP W11, W10
	0x035B897C B.CS 0x35B8990
	0x035B8980 MOV W0, W31
	0x035B8984 B 0x35B89A4
	0x035B8988 MOVZ W0, 0x1
	0x035B898C B 0x35B89A4
	0x035B8990 LDR X9, [X9 + 0xC8]
	0x035B8994 ADD X9, X9, X10, 0x3, LSL
	0x035B8998 LDUR X9, [X9 - 0x8]
	0x035B899C CMP X9, X8
	0x035B89A0 CSET W0, EQ
	0x035B89A4 LDP X20, X19, [X31 + 0x10]
	0x035B89A8 LDP X30, X21, [X31], #0x20
	0x035B89AC RET
	0x035B89B0 MOV W0, W31
	0x035B89B4 RET
	0x035B89B8 STR X30, [X31 - 0x20]!
	0x035B89BC STP X20, X19, [X31 + 0x10]
	0x035B89C0 ADRP X20, 0xE28000
	0x035B89C4 LDRB W8, [X20 + 0xF5]
	0x035B89C8 MOV X19, X1
	0x035B89CC TBNZ X8, 0x0, 0x35B89E4
	0x035B89D0 ADRP X0, 0xB3B000
	0x035B89D4 LDR X0, [X0 + 0x830]
	0x035B89D8 BL 0x1C16CF4
	0x035B89DC MOVZ W8, 0x1
	0x035B89E0 STRB W8, [X20 + 0xF5]
	0x035B89E4 CBZ X19, 0x35B8A08
	0x035B89E8 ADRP X8, 0xB3B000
	0x035B89EC LDR X8, [X8 + 0x830]
	0x035B89F0 MOV X0, X19
	0x035B89F4 LDP X20, X19, [X31 + 0x10]
	0x035B89F8 MOV X2, X31
	0x035B89FC LDR X1, [X8]
	0x035B8A00 LDR X30, [X31], #0x20
	0x035B8A04 B 0x32333E0
	0x035B8A08 BL 0x1C16F20
	0x035B8A0C STR X30, [X31 - 0x10]!
	0x035B8A10 CBZ X1, 0x35B8A2C
	0x035B8A14 LDR X8, [X1]
	0x035B8A18 MOV X0, X1
	0x035B8A1C MOVZ W1, 0x5
	0x035B8A20 LDP X3, X2, [X8 + 0x1C8]
	0x035B8A24 LDR X30, [X31], #0x10
	0x035B8A28 BR X3
	0x035B8A2C BL 0x1C16F20
	0x035B8A30 STR X30, [X31 - 0x20]!
	0x035B8A34 STP X20, X19, [X31 + 0x10]
	0x035B8A38 ADRP X19, 0xE28000
	0x035B8A3C ADRP X20, 0xB7F000
	0x035B8A40 LDRB W8, [X19 + 0xF6]
	0x035B8A44 LDR X20, [X20 + 0x648]
	0x035B8A48 TBNZ X8, 0x0, 0x35B8A60
	0x035B8A4C ADRP X0, 0xB7F000
	0x035B8A50 LDR X0, [X0 + 0x648]
	0x035B8A54 BL 0x1C16CF4
	0x035B8A58 MOVZ W8, 0x1
	0x035B8A5C STRB W8, [X19 + 0xF6]
	0x035B8A60 LDR X0, [X20]
	0x035B8A64 BL 0x1C16F10
	0x035B8A68 MOV X19, X0
	0x035B8A6C BL 0x35B880C
	0x035B8A70 LDR X8, [X20]
	0x035B8A74 MOVZ W9, 0x1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+120], X0
	004 Move [X31+128], X20
	005 Move [X31+136], X19
	006 Move X20, 0xE29000
	007 Move W8, [X20+217]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xB80000
	014 Move X0, [X0+2080]
	015 Call 0x1C17CF4
	016 Move X0, 0xB80000
	017 Move X0, [X0+1920]
	018 Call 0x1C17CF4
	019 Move X0, 0xB80000
	020 Move X0, [X0+1896]
	021 Call 0x1C17CF4
	022 Move X0, 0xB66000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+217], W8
	027 Add X8, X31, 120
	028 Move [X31+104], X8
	029 Move W8, [X19+16]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare W8, 0
	032 JumpIfNotEqual {97}
	033 Move X8, [X19+40]
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W9, TEMP
	037 Move [X19+16], W9
	038 Compare X8, 0
	039 JumpIfEqual {88}
	040 Move X0, [X8+16]
	041 Compare X0, 0
	042 JumpIfEqual {89}
	043 Move X8, 0xB80000
	044 Move X8, [X8+2080]
	045 Move X1, [X8]
	046 Add X8, X31, 8
	047 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Move X8, [X31+40]
	051 Move X19, [X31+120]
	052 Move TEMP, 2
	053 Not TEMP
	054 Move W9, TEMP
	055 Move [X31+48], V0
	056 Move [X31+56], V1
	057 Move [X31+80], X8
	058 Move [X19+80], X8
	059 Move [X19+48], V0
	060 Move [X19+56], V1
	061 Move [X19+16], W9
	062 Move TEMP, 2
	063 Not TEMP
	064 Move W8, TEMP
	065 Move [X19+16], W8
	066 Move X8, 0xB80000
	067 Move X8, [X8+1920]
	068 Add X0, X19, 48
	069 Move X1, [X8]
	070 Call Enumerator<Object, Object>.MoveNext, X0
	071 Move X8, [X31+120]
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {80}
	076 Move X9, [X8+72]
	077 Move W0, 1
	078 Move [X8+16], W0
	079 Move [X8+24], X9
	080 Move X0, X8
	081 Call <get_Children>d__27.<>m__Finally1, X0
	082 Move X8, [X31+120]
	083 NotImplemented "Instruction MOVI not yet implemented."
	084 Move W0, W31
	085 Move [X8+80], X31
	086 Move [X8+48], V0
	087 Move [X8+56], V0
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Call 0x3EB2AD0
	092 Move X19, [X0]
	093 Move [X31+96], X19
	094 Call 0x3EB2AE0
	095 Compare X19, 0
	096 JumpIfNotEqual {103}
	097 Move W0, W31
	098 Move X20, [X31+128]
	099 Move X19, [X31+136]
	100 Move X30, [X31+112]
	101 Add X31, X31, 144
	102 Return X0
	103 Add X8, X31, 96
	104 Add X0, X8, 8
	105 Call 0x1BC2940
	106 Move X0, X19
	107 Call 0x1C17F18
	108 Compare X19, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1D2D690
	111 Move X0, [X31+120]
	112 Move W8, [X0+16]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add W31, W8, 3
	115 Call <get_Children>d__27.<>m__Finally1, X0
	116 Move X0, X19
	117 Call 0x1C17F18
	118 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x035B8A78 LDR X8, [X8 + 0xB8]
	0x035B8A7C STR X19, [X8]
	0x035B8A80 LDR X8, [X20]
	0x035B8A84 LDP X20, X19, [X31 + 0x10]
	0x035B8A88 LDR X8, [X8 + 0xB8]
	0x035B8A8C STRB W9, [X8 + 0x8]
	0x035B8A90 LDR X30, [X31], #0x20
	0x035B8A94 RET
	0x035B8A98 MOVZ W0, 0x7
	0x035B8A9C RET
	0x035B8AA0 MOVI V0.2D, 0x0
	0x035B8AA4 STR X31, [X8 + 0x40]
	0x035B8AA8 STP V0, V0, [X8 + 0x20]
	0x035B8AAC STP V0, V0, [X8]
	0x035B8AB0 RET
	0x035B8AB4 STP X30, X21, [X31 - 0x20]!
	0x035B8AB8 STP X20, X19, [X31 + 0x10]
	0x035B8ABC ADRP X20, 0xE28000
	0x035B8AC0 ADRP X21, 0xB7F000
	0x035B8AC4 LDRB W8, [X20 + 0xF9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE29000
	006 Move X20, 0xB80000
	007 Move W8, [X21+218]
	008 Move X20, [X20+2192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB80000
	015 Move X0, [X0+2192]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+218], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 48
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object, Object>.Dispose, X0
	030 Return 

Method: SimpleJSON.JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.get_Current()

Disassembly:
	0x035B8AC8 LDR X21, [X21 + 0x658]
	0x035B8ACC MOV X19, X0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x035B8AD0 TBNZ X8, 0x0, 0x35B8AE8
	0x035B8AD4 ADRP X0, 0xB7F000
	0x035B8AD8 LDR X0, [X0 + 0x658]
	0x035B8ADC BL 0x1C16CF4
	0x035B8AE0 MOVZ W8, 0x1
	0x035B8AE4 STRB W8, [X20 + 0xF9]
	0x035B8AE8 LDR X0, [X21]
	0x035B8AEC BL 0x1C16F10
	0x035B8AF0 MOV X1, X19
	0x035B8AF4 MOV X20, X0
	0x035B8AF8 BL 0x35B5730
	0x035B8AFC MOV X0, X20
	0x035B8B00 LDP X20, X19, [X31 + 0x10]
	0x035B8B04 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB3C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB80000
	011 Move X0, [X0+2256]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x035B8B08 RET
	0x035B8B0C STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<SimpleJSON.JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()

Disassembly:
	0x035B8B10 STP X22, X21, [X31 + 0x10]
	0x035B8B14 STP X20, X19, [X31 + 0x20]
	0x035B8B18 ADRP X21, 0xE28000
	0x035B8B1C ADRP X23, 0xB65000
	0x035B8B20 ADRP X22, 0xB7F000
	0x035B8B24 LDRB W8, [X21 + 0xFA]
	0x035B8B28 LDR X23, [X23 + 0x370]
	0x035B8B2C LDR X22, [X22 + 0x8D8]
	0x035B8B30 MOV X19, X2
	0x035B8B34 MOV X20, X0
	0x035B8B38 TBNZ X8, 0x0, 0x35B8B5C
	0x035B8B3C ADRP X0, 0xB65000
	0x035B8B40 LDR X0, [X0 + 0x370]
	0x035B8B44 BL 0x1C16CF4
	0x035B8B48 ADRP X0, 0xB7F000
	0x035B8B4C LDR X0, [X0 + 0x8D8]
	0x035B8B50 BL 0x1C16CF4
	0x035B8B54 MOVZ W8, 0x1
	0x035B8B58 STRB W8, [X21 + 0xFA]
	0x035B8B5C LDR X0, [X23]
	0x035B8B60 BL 0x1C16F10
	0x035B8B64 MOV X21, X0
	0x035B8B68 BL 0x35AE904
	0x035B8B6C LDR X2, [X22]
	0x035B8B70 MOV X0, X20
	0x035B8B74 MOV X1, X21
	0x035B8B78 BL 0x220D364
	0x035B8B7C CBZ X0, 0x35B8BA0
	0x035B8B80 LDR X8, [X0]
	0x035B8B84 MOV X1, X19
	0x035B8B88 LDP X20, X19, [X31 + 0x20]
	0x035B8B8C LDP X22, X21, [X31 + 0x10]
	0x035B8B90 LDR X3, [X8 + 0x288]
	0x035B8B94 LDR X2, [X8 + 0x290]
	0x035B8B98 LDP X30, X23, [X31], #0x30
	0x035B8B9C BR X3
	0x035B8BA0 BL 0x1C16F20
	0x035B8BA4 STR X30, [X31 - 0x30]!
	0x035B8BA8 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE29000
	005 Move W8, [X20+219]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB80000
	012 Move X0, [X0+2208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+219], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0xB80000
	024 Move X8, [X8+2208]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+32], W0
	034 Move X8, [X19+40]
	035 Move X19, X20
	036 Move [X20+40], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x035B8BAC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Call <get_Children>d__27.System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator, X0
	002 Return X0

