Type: SimpleJSON.JSONArray

Method: System.Boolean get_Inline()

Disassembly:
	0x035B65D0 BL 0x2AA54BC
	0x035B65D4 LDUR V0, [X31 + 0x8]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_Inline(System.Boolean value)

Disassembly:
	0x035B65D8 LDUR V1, [X31 + 0x18]
	0x035B65DC LDR X9, [X31 + 0x28]
	0x035B65E0 MOVZ W8, 0x2

ISIL:
	001 And W8, W1, 1
	002 Move [X0+24], W8
	003 Return 

Method: SimpleJSON.JSONNodeType get_Tag()

Disassembly:
	0x035B65E4 STR X31, [X19]
	0x035B65E8 STR W8, [X19]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsArray()

Disassembly:
	0x035B65EC STUR V1, [X19 + 0x18]
	0x035B65F0 STUR V0, [X19 + 0x8]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: SimpleJSON.JSONNode/Enumerator GetEnumerator()

Disassembly:
	0x035B65F4 STP X9, X31, [X19 + 0x28]
	0x035B65F8 STP X31, X31, [X19 + 0x38]
	0x035B65FC LDP X20, X19, [X31 + 0x40]
	0x035B6600 LDP X30, X21, [X31 + 0x30]
	0x035B6604 ADD X31, X31, 0x50
	0x035B6608 RET
	0x035B660C BL 0x1C16F20
	0x035B6610 STP X30, X21, [X31 - 0x20]!
	0x035B6614 STP X20, X19, [X31 + 0x10]
	0x035B6618 ADRP X21, 0xE2A000
	0x035B661C LDRB W8, [X21 + 0xC7]
	0x035B6620 MOV X19, X1
	0x035B6624 MOV X20, X0
	0x035B6628 TBNZ X8, 0x0, 0x35B6658
	0x035B662C ADRP X0, 0xB81000
	0x035B6630 LDR X0, [X0 + 0x828]
	0x035B6634 BL 0x1C16CF4
	0x035B6638 ADRP X0, 0xB81000
	0x035B663C LDR X0, [X0 + 0x830]
	0x035B6640 BL 0x1C16CF4
	0x035B6644 ADRP X0, 0xB81000
	0x035B6648 LDR X0, [X0 + 0x658]
	0x035B664C BL 0x1C16CF4
	0x035B6650 MOVZ W8, 0x1
	0x035B6654 STRB W8, [X21 + 0xC7]
	0x035B6658 LDR X0, [X20 + 0x10]
	0x035B665C CBZ X0, 0x35B66CC
	0x035B6660 ADRP X8, 0xB81000
	0x035B6664 LDR X8, [X8 + 0x828]
	0x035B6668 MOV X1, X19
	0x035B666C LDR X2, [X8]
	0x035B6670 BL 0x2AA528C
	0x035B6674 TBZ X0, 0x0, 0x35B669C
	0x035B6678 LDR X0, [X20 + 0x10]
	0x035B667C CBZ X0, 0x35B66CC
	0x035B6680 ADRP X8, 0xB81000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xE2B000
	007 Move W9, [X21+180]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB82000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+180], W8
	019 Move X0, [X20+16]
	020 Compare X0, 0
	021 JumpIfEqual {44}
	022 Move X8, 0xB82000
	023 Move X8, [X8+1976]
	024 Move X1, [X8]
	025 Add X8, X31, 8
	026 Call List`1<Object>.GetEnumerator, X0
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move X9, [X31+24]
	029 Move W8, 1
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X19], X31
	032 Move [X19+40], X31
	033 Move [X19], W8
	034 Move [X19+8], V0
	035 Move [X19+24], V0
	036 Move [X19+64], X9
	037 Move [X19+3], V1
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Add X31, X31, 64
	043 Return X0
	044 Call 0x1C17F20

Method: SimpleJSON.JSONNode get_Item(System.Int32 aIndex)

Disassembly:
	0x035B6684 LDR X8, [X8 + 0x830]
	0x035B6688 MOV X1, X19
	0x035B668C LDP X20, X19, [X31 + 0x10]
	0x035B6690 LDR X2, [X8]
	0x035B6694 LDP X30, X21, [X31], #0x20
	0x035B6698 B 0x2AA5018
	0x035B669C ADRP X8, 0xB81000
	0x035B66A0 LDR X8, [X8 + 0x658]
	0x035B66A4 LDR X0, [X8]
	0x035B66A8 BL 0x1C16F10
	0x035B66AC MOV X1, X20
	0x035B66B0 MOV X2, X19
	0x035B66B4 MOV X21, X0
	0x035B66B8 BL 0x35B66D0
	0x035B66BC LDP X20, X19, [X31 + 0x10]
	0x035B66C0 MOV X0, X21
	0x035B66C4 LDP X30, X21, [X31], #0x20
	0x035B66C8 RET
	0x035B66CC BL 0x1C16F20
	0x035B66D0 STP X30, X23, [X31 - 0x30]!
	0x035B66D4 STP X22, X21, [X31 + 0x10]
	0x035B66D8 STP X20, X19, [X31 + 0x20]
	0x035B66DC ADRP X22, 0xE2A000
	0x035B66E0 ADRP X23, 0xB3E000
	0x035B66E4 LDRB W8, [X22 + 0xF8]
	0x035B66E8 LDR X23, [X23 + 0x460]
	0x035B66EC MOV X19, X2
	0x035B66F0 MOV X21, X1
	0x035B66F4 MOV X20, X0
	0x035B66F8 TBNZ X8, 0x0, 0x35B6710
	0x035B66FC ADRP X0, 0xB3E000
	0x035B6700 LDR X0, [X0 + 0x460]
	0x035B6704 BL 0x1C16CF4
	0x035B6708 MOVZ W8, 0x1
	0x035B670C STRB W8, [X22 + 0xF8]
	0x035B6710 LDR X0, [X23]
	0x035B6714 LDR W8, [X0 + 0xE0]
	0x035B6718 CBNZ W8, 0x35B6720
	0x035B671C BL 0x1C16DFC
	0x035B6720 MOV X0, X20
	0x035B6724 MOV X1, X31
	0x035B6728 BL 0x33BDD8C
	0x035B672C STP X21, X19, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2B000
	006 Move W8, [X21+181]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB82000
	014 Move X0, [X0+1624]
	015 Call 0x1C17CF4
	016 Move X0, 0xB82000
	017 Move X0, [X0+1984]
	018 Call 0x1C17CF4
	019 Move X0, 0xB82000
	020 Move X0, [X0+1992]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+181], W8
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {43}
	028 Move X0, [X19+16]
	029 Compare X0, 0
	030 JumpIfEqual {56}
	031 Move W8, [X0+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0xB82000
	034 Move X8, [X8+1992]
	035 Move W1, W20
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, [X8]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call List`1<Object>.get_Item, X0, X1
	042 Return X0
	043 Move X8, 0xB82000
	044 Move X8, [X8+1624]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X1, X19
	048 Move X20, X0
	049 Call JSONLazyCreator..ctor, X0, X1
	050 Move X0, X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Void set_Item(System.Int32 aIndex, SimpleJSON.JSONNode value)

Disassembly:
	0x035B679C ADRP X0, 0xB81000
	0x035B67A0 LDR X0, [X0 + 0x648]
	0x035B67A4 BL 0x1C16CF4
	0x035B67A8 MOVZ W8, 0x1
	0x035B67AC STRB W8, [X22 + 0xC8]
	0x035B67B0 LDR X0, [X23]
	0x035B67B4 LDR W8, [X0 + 0xE0]
	0x035B67B8 CBNZ W8, 0x35B67C0
	0x035B67BC BL 0x1C16DFC
	0x035B67C0 MOV X0, X20
	0x035B67C4 MOV X1, X31
	0x035B67C8 BL 0x35AD170
	0x035B67CC TBZ X0, 0x0, 0x35B67F0
	0x035B67D0 ADRP X8, 0xB81000
	0x035B67D4 LDR X8, [X8 + 0x648]
	0x035B67D8 LDR X0, [X8]
	0x035B67DC LDR W8, [X0 + 0xE0]
	0x035B67E0 CBNZ W8, 0x35B67E8
	0x035B67E4 BL 0x1C16DFC
	0x035B67E8 BL 0x35AD064
	0x035B67EC MOV X20, X0
	0x035B67F0 LDR X0, [X21 + 0x10]
	0x035B67F4 CBZ X0, 0x35B6868
	0x035B67F8 ADRP X8, 0xB81000
	0x035B67FC LDR X8, [X8 + 0x828]
	0x035B6800 MOV X1, X19
	0x035B6804 LDR X2, [X8]
	0x035B6808 BL 0x2AA528C
	0x035B680C LDR X8, [X21 + 0x10]
	0x035B6810 CBZ X8, 0x35B6868
	0x035B6814 TBZ X0, 0x0, 0x35B6840
	0x035B6818 ADRP X9, 0xB81000
	0x035B681C LDR X9, [X9 + 0x840]
	0x035B6820 MOV X1, X19
	0x035B6824 MOV X2, X20
	0x035B6828 LDP X20, X19, [X31 + 0x20]
	0x035B682C LDR X3, [X9]
	0x035B6830 LDP X22, X21, [X31 + 0x10]
	0x035B6834 MOV X0, X8
	0x035B6838 LDP X30, X23, [X31], #0x30
	0x035B683C B 0x2AA5084
	0x035B6840 ADRP X9, 0xB81000
	0x035B6844 LDR X9, [X9 + 0x838]
	0x035B6848 MOV X1, X19
	0x035B684C MOV X2, X20
	0x035B6850 LDP X20, X19, [X31 + 0x20]
	0x035B6854 LDR X3, [X9]
	0x035B6858 LDP X22, X21, [X31 + 0x10]
	0x035B685C MOV X0, X8
	0x035B6860 LDP X30, X23, [X31], #0x30
	0x035B6864 B 0x2AA5098
	0x035B6868 BL 0x1C16F20
	0x035B686C STP X30, X21, [X31 - 0x20]!
	0x035B6870 STP X20, X19, [X31 + 0x10]
	0x035B6874 ADRP X21, 0xE2A000
	0x035B6878 LDRB W8, [X21 + 0xC9]
	0x035B687C MOV W19, W1
	0x035B6880 MOV X20, X0
	0x035B6884 TBNZ X8, 0x0, 0x35B68B4
	0x035B6888 ADRP X0, 0xB81000
	0x035B688C LDR X0, [X0 + 0x848]
	0x035B6890 BL 0x1C16CF4
	0x035B6894 ADRP X0, 0xB81000
	0x035B6898 LDR X0, [X0 + 0x850]
	0x035B689C BL 0x1C16CF4
	0x035B68A0 ADRP X0, 0xB67000
	0x035B68A4 LDR X0, [X0 + 0x348]
	0x035B68A8 BL 0x1C16CF4
	0x035B68AC MOVZ W8, 0x1
	0x035B68B0 STRB W8, [X21 + 0xC9]
	0x035B68B4 TBNZ X19, 0x1F, 0x35B68F8
	0x035B68B8 LDR X0, [X20 + 0x10]
	0x035B68BC CBZ X0, 0x35B6908
	0x035B68C0 ADRP X8, 0xB81000
	0x035B68C4 LDR X8, [X8 + 0x848]
	0x035B68C8 LDR X1, [X8]
	0x035B68CC BL 0x2AA4E88
	0x035B68D0 CMP W0, W19
	0x035B68D4 B.LE 0x35B68F8
	0x035B68D8 ADRP X8, 0xB81000
	0x035B68DC LDR X0, [X20 + 0x10]
	0x035B68E0 LDR X8, [X8 + 0x850]
	0x035B68E4 MOV W1, W19
	0x035B68E8 LDR X2, [X8]
	0x035B68EC BL 0x21C06A8
	0x035B68F0 MOV X0, X1
	0x035B68F4 B 0x35B68FC
	0x035B68F8 MOV X0, X31
	0x035B68FC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE2B000
	008 Move X23, 0xB3F000
	009 Move W8, [X22+182]
	010 Move X23, [X23+1120]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xB3F000
	019 Move X0, [X0+1120]
	020 Call 0x1C17CF4
	021 Move X0, 0xB82000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0xB82000
	025 Move X0, [X0+2000]
	026 Call 0x1C17CF4
	027 Move X0, 0xB82000
	028 Move X0, [X0+1984]
	029 Call 0x1C17CF4
	030 Move X0, 0xB82000
	031 Move X0, [X0+2008]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+182], W8
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call JSONNode.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {56}
	047 Move X8, 0xB82000
	048 Move X8, [X8+1608]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Call JSONNull.CreateOrGet
	055 Move X19, X0
	056 Move X0, [X21+16]
	057 Move TEMP, X20
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfEqual {78}
	061 Compare X0, 0
	062 JumpIfEqual {115}
	063 Move W8, [X0+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, 0xB82000
	066 Move X8, [X8+2008]
	067 Move W1, W20
	068 Move X2, X19
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X3, [X8]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Call List`1<Object>.set_Item, X0, X1, X2
	077 Return 
	078 Compare X0, 0
	079 JumpIfEqual {115}
	080 Move X9, 0xB82000
	081 Move X9, [X9+2000]
	082 Move W10, [X0+28]
	083 Move X8, [X0+16]
	084 Move X9, [X9]
	085 Add W10, W10, 1
	086 Move [X0+28], W10
	087 Compare X8, 0
	088 JumpIfEqual {115}
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Move W11, [X8+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add W9, W10, 1
	093 Add X8, X8, X10
	094 Move [X0+24], W9
	095 Move [X8+32], X19
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 Return 
	103 Move X8, [X9+32]
	104 Move X1, X19
	105 Move X20, [X31+32]
	106 Move X19, [X31+40]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move X8, [X8+192]
	110 Move X2, [X8+112]
	111 Move X30, [X31+48]
	112 Move X23, [X31+56]
	113 Call List`1<Object>.AddWithResize, X0, X1
	114 Return 
	115 Call 0x1C17F20

Method: SimpleJSON.JSONNode get_Item(System.String aKey)

Disassembly:
	0x035B6900 LDP X30, X21, [X31], #0x20
	0x035B6904 RET
	0x035B6908 BL 0x1C16F20
	0x035B690C STP X30, X23, [X31 - 0x30]!
	0x035B6910 STP X22, X21, [X31 + 0x10]
	0x035B6914 STP X20, X19, [X31 + 0x20]
	0x035B6918 ADRP X22, 0xE2A000
	0x035B691C ADRP X23, 0xB3E000
	0x035B6920 LDRB W8, [X22 + 0xCA]
	0x035B6924 LDR X23, [X23 + 0x460]
	0x035B6928 MOV X21, X2
	0x035B692C MOV W20, W1
	0x035B6930 MOV X19, X0
	0x035B6934 TBNZ X8, 0x0, 0x35B6988
	0x035B6938 ADRP X0, 0xB81000
	0x035B693C LDR X0, [X0 + 0x848]
	0x035B6940 BL 0x1C16CF4
	0x035B6944 ADRP X0, 0xB81000
	0x035B6948 LDR X0, [X0 + 0x840]
	0x035B694C BL 0x1C16CF4
	0x035B6950 ADRP X0, 0xB81000
	0x035B6954 LDR X0, [X0 + 0x850]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE2B000
	006 Move X21, 0xB82000
	007 Move W8, [X20+183]
	008 Move X21, [X21+1624]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB82000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+183], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call JSONLazyCreator..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void set_Item(System.String aKey, SimpleJSON.JSONNode value)

Disassembly:
	0x035B6958 BL 0x1C16CF4
	0x035B695C ADRP X0, 0xB3E000
	0x035B6960 LDR X0, [X0 + 0x460]
	0x035B6964 BL 0x1C16CF4
	0x035B6968 ADRP X0, 0xB81000
	0x035B696C LDR X0, [X0 + 0x648]
	0x035B6970 BL 0x1C16CF4
	0x035B6974 ADRP X0, 0xB67000
	0x035B6978 LDR X0, [X0 + 0x340]
	0x035B697C BL 0x1C16CF4
	0x035B6980 MOVZ W8, 0x1
	0x035B6984 STRB W8, [X22 + 0xCA]
	0x035B6988 LDR X0, [X23]
	0x035B698C LDR W8, [X0 + 0xE0]
	0x035B6990 CBNZ W8, 0x35B6998
	0x035B6994 BL 0x1C16DFC
	0x035B6998 MOV X0, X21
	0x035B699C MOV X1, X31
	0x035B69A0 BL 0x35AD170
	0x035B69A4 TBZ X0, 0x0, 0x35B69C8
	0x035B69A8 ADRP X8, 0xB81000
	0x035B69AC LDR X8, [X8 + 0x648]
	0x035B69B0 LDR X0, [X8]
	0x035B69B4 LDR W8, [X0 + 0xE0]
	0x035B69B8 CBNZ W8, 0x35B69C0
	0x035B69BC BL 0x1C16DFC
	0x035B69C0 BL 0x35AD064
	0x035B69C4 MOV X21, X0
	0x035B69C8 TBNZ X20, 0x1F, 0x35B6A34
	0x035B69CC LDR X0, [X19 + 0x10]
	0x035B69D0 CBZ X0, 0x35B6A44
	0x035B69D4 ADRP X8, 0xB81000
	0x035B69D8 LDR X8, [X8 + 0x848]
	0x035B69DC LDR X1, [X8]
	0x035B69E0 BL 0x2AA4E88
	0x035B69E4 CMP W0, W20
	0x035B69E8 B.LE 0x35B6A34
	0x035B69EC ADRP X8, 0xB81000
	0x035B69F0 LDR X0, [X19 + 0x10]
	0x035B69F4 LDR X8, [X8 + 0x850]
	0x035B69F8 MOV W1, W20
	0x035B69FC LDR X2, [X8]
	0x035B6A00 BL 0x21C06A8
	0x035B6A04 LDR X8, [X19 + 0x10]
	0x035B6A08 CBZ X8, 0x35B6A44
	0x035B6A0C ADRP X9, 0xB81000
	0x035B6A10 LDR X9, [X9 + 0x840]
	0x035B6A14 MOV X2, X21
	0x035B6A18 LDP X20, X19, [X31 + 0x20]
	0x035B6A1C LDP X22, X21, [X31 + 0x10]
	0x035B6A20 LDR X3, [X9]
	0x035B6A24 MOV X1, X0
	0x035B6A28 MOV X0, X8
	0x035B6A2C LDP X30, X23, [X31], #0x30
	0x035B6A30 B 0x2AA5084
	0x035B6A34 LDP X20, X19, [X31 + 0x20]
	0x035B6A38 LDP X22, X21, [X31 + 0x10]
	0x035B6A3C LDP X30, X23, [X31], #0x30
	0x035B6A40 RET
	0x035B6A44 BL 0x1C16F20
	0x035B6A48 STR X30, [X31 - 0x20]!
	0x035B6A4C STP X20, X19, [X31 + 0x10]
	0x035B6A50 ADRP X20, 0xE2A000
	0x035B6A54 LDRB W8, [X20 + 0xCB]
	0x035B6A58 MOV X19, X0
	0x035B6A5C TBNZ X8, 0x0, 0x35B6A74
	0x035B6A60 ADRP X0, 0xB81000
	0x035B6A64 LDR X0, [X0 + 0x848]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE2B000
	007 Move X22, 0xB3F000
	008 Move W8, [X21+184]
	009 Move X22, [X22+1120]
	010 Move X19, X2
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xB3F000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0xB82000
	020 Move X0, [X0+1608]
	021 Call 0x1C17CF4
	022 Move X0, 0xB82000
	023 Move X0, [X0+2000]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+184], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Call JSONNode.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {48}
	039 Move X8, 0xB82000
	040 Move X8, [X8+1608]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Call JSONNull.CreateOrGet
	047 Move X19, X0
	048 Move X0, [X20+16]
	049 Compare X0, 0
	050 JumpIfEqual {84}
	051 Move X9, 0xB82000
	052 Move X9, [X9+2000]
	053 Move W10, [X0+28]
	054 Move X8, [X0+16]
	055 Move X9, [X9]
	056 Add W10, W10, 1
	057 Move [X0+28], W10
	058 Compare X8, 0
	059 JumpIfEqual {84}
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Move W11, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add W9, W10, 1
	064 Add X8, X8, X10
	065 Move [X0+24], W9
	066 Move [X8+32], X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Move X8, [X9+32]
	074 Move X1, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8+192]
	080 Move X2, [X8+112]
	081 Move X30, [X31+48]
	082 Call List`1<Object>.AddWithResize, X0, X1
	083 Return 
	084 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x035B6A68 BL 0x1C16CF4
	0x035B6A6C MOVZ W8, 0x1
	0x035B6A70 STRB W8, [X20 + 0xCB]
	0x035B6A74 LDR X0, [X19 + 0x10]
	0x035B6A78 CBZ X0, 0x35B6A94
	0x035B6A7C ADRP X8, 0xB81000
	0x035B6A80 LDR X8, [X8 + 0x848]
	0x035B6A84 LDP X20, X19, [X31 + 0x10]
	0x035B6A88 LDR X1, [X8]
	0x035B6A8C LDR X30, [X31], #0x20
	0x035B6A90 B 0x2AA4E88
	0x035B6A94 BL 0x1C16F20
	0x035B6A98 SUB X31, X31, 0x40
	0x035B6A9C STP X30, X23, [X31 + 0x10]
	0x035B6AA0 STP X22, X21, [X31 + 0x20]
	0x035B6AA4 STP X20, X19, [X31 + 0x30]
	0x035B6AA8 ADRP X22, 0xE2A000
	0x035B6AAC ADRP X23, 0xB3E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE2B000
	005 Move W8, [X20+185]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB82000
	012 Move X0, [X0+1984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+185], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W0, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void Add(System.String aKey, SimpleJSON.JSONNode aItem)

Disassembly:
	0x035B6AB0 LDRB W8, [X22 + 0xCC]
	0x035B6AB4 LDR X23, [X23 + 0x460]
	0x035B6AB8 MOV X19, X2
	0x035B6ABC MOV X20, X1
	0x035B6AC0 MOV X21, X0
	0x035B6AC4 TBNZ X8, 0x0, 0x35B6B0C
	0x035B6AC8 ADRP X0, 0xB81000
	0x035B6ACC LDR X0, [X0 + 0x838]
	0x035B6AD0 BL 0x1C16CF4
	0x035B6AD4 ADRP X0, 0xB81000
	0x035B6AD8 LDR X0, [X0 + 0x828]
	0x035B6ADC BL 0x1C16CF4
	0x035B6AE0 ADRP X0, 0xB81000
	0x035B6AE4 LDR X0, [X0 + 0x840]
	0x035B6AE8 BL 0x1C16CF4
	0x035B6AEC ADRP X0, 0xB3E000
	0x035B6AF0 LDR X0, [X0 + 0x460]
	0x035B6AF4 BL 0x1C16CF4
	0x035B6AF8 ADRP X0, 0xB81000
	0x035B6AFC LDR X0, [X0 + 0x648]
	0x035B6B00 BL 0x1C16CF4
	0x035B6B04 MOVZ W8, 0x1
	0x035B6B08 STRB W8, [X22 + 0xCC]
	0x035B6B0C LDR X0, [X23]
	0x035B6B10 LDR W8, [X0 + 0xE0]
	0x035B6B14 CBNZ W8, 0x35B6B1C
	0x035B6B18 BL 0x1C16DFC
	0x035B6B1C MOV X0, X19
	0x035B6B20 MOV X1, X31
	0x035B6B24 BL 0x35AD170
	0x035B6B28 TBZ X0, 0x0, 0x35B6B4C
	0x035B6B2C ADRP X8, 0xB81000
	0x035B6B30 LDR X8, [X8 + 0x648]
	0x035B6B34 LDR X0, [X8]
	0x035B6B38 LDR W8, [X0 + 0xE0]
	0x035B6B3C CBNZ W8, 0x35B6B44
	0x035B6B40 BL 0x1C16DFC
	0x035B6B44 BL 0x35AD064
	0x035B6B48 MOV X19, X0
	0x035B6B4C LDR X22, [X21 + 0x10]
	0x035B6B50 CBZ X20, 0x35B6B9C
	0x035B6B54 CBZ X22, 0x35B6C00
	0x035B6B58 ADRP X8, 0xB81000
	0x035B6B5C LDR X8, [X8 + 0x828]
	0x035B6B60 MOV X0, X22
	0x035B6B64 MOV X1, X20
	0x035B6B68 LDR X2, [X8]
	0x035B6B6C BL 0x2AA528C
	0x035B6B70 LDR X8, [X21 + 0x10]
	0x035B6B74 CBZ X8, 0x35B6C00
	0x035B6B78 TBZ X0, 0x0, 0x35B6BD0
	0x035B6B7C ADRP X9, 0xB81000
	0x035B6B80 LDR X9, [X9 + 0x840]
	0x035B6B84 MOV X0, X8
	0x035B6B88 MOV X1, X20
	0x035B6B8C MOV X2, X19
	0x035B6B90 LDR X3, [X9]
	0x035B6B94 BL 0x2AA5084
	0x035B6B98 B 0x35B6BEC
	0x035B6B9C MOV X0, X31
	0x035B6BA0 BL 0x337684C
	0x035B6BA4 STP X0, X1, [X31]
	0x035B6BA8 ADD X0, X31, 0x0
	0x035B6BAC MOV X1, X31
	0x035B6BB0 BL 0x337866C
	0x035B6BB4 CBZ X22, 0x35B6C00
	0x035B6BB8 ADRP X8, 0xB81000
	0x035B6BBC LDR X8, [X8 + 0x838]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE2B000
	007 Move X22, 0xB3F000
	008 Move W8, [X21+186]
	009 Move X22, [X22+1120]
	010 Move X19, X2
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xB3F000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0xB82000
	020 Move X0, [X0+1608]
	021 Call 0x1C17CF4
	022 Move X0, 0xB82000
	023 Move X0, [X0+2000]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+186], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Call JSONNode.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {48}
	039 Move X8, 0xB82000
	040 Move X8, [X8+1608]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Call JSONNull.CreateOrGet
	047 Move X19, X0
	048 Move X0, [X20+16]
	049 Compare X0, 0
	050 JumpIfEqual {84}
	051 Move X9, 0xB82000
	052 Move X9, [X9+2000]
	053 Move W10, [X0+28]
	054 Move X8, [X0+16]
	055 Move X9, [X9]
	056 Add W10, W10, 1
	057 Move [X0+28], W10
	058 Compare X8, 0
	059 JumpIfEqual {84}
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Move W11, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add W9, W10, 1
	064 Add X8, X8, X10
	065 Move [X0+24], W9
	066 Move [X8+32], X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Move X8, [X9+32]
	074 Move X1, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8+192]
	080 Move X2, [X8+112]
	081 Move X30, [X31+48]
	082 Call List`1<Object>.AddWithResize, X0, X1
	083 Return 
	084 Call 0x1C17F20

Method: SimpleJSON.JSONNode Remove(System.Int32 aIndex)

Disassembly:
	0x035B6BC0 MOV X1, X0
	0x035B6BC4 MOV X0, X22
	0x035B6BC8 LDR X3, [X8]
	0x035B6BCC B 0x35B6BE4
	0x035B6BD0 ADRP X9, 0xB81000
	0x035B6BD4 LDR X9, [X9 + 0x838]
	0x035B6BD8 MOV X0, X8
	0x035B6BDC MOV X1, X20
	0x035B6BE0 LDR X3, [X9]
	0x035B6BE4 MOV X2, X19
	0x035B6BE8 BL 0x2AA5098
	0x035B6BEC LDP X20, X19, [X31 + 0x30]
	0x035B6BF0 LDP X22, X21, [X31 + 0x20]
	0x035B6BF4 LDP X30, X23, [X31 + 0x10]
	0x035B6BF8 ADD X31, X31, 0x40
	0x035B6BFC RET
	0x035B6C00 BL 0x1C16F20
	0x035B6C04 STP X30, X21, [X31 - 0x20]!
	0x035B6C08 STP X20, X19, [X31 + 0x10]
	0x035B6C0C ADRP X21, 0xE2A000
	0x035B6C10 LDRB W8, [X21 + 0xCD]
	0x035B6C14 MOV X19, X1
	0x035B6C18 MOV X20, X0
	0x035B6C1C TBNZ X8, 0x0, 0x35B6C4C
	0x035B6C20 ADRP X0, 0xB81000
	0x035B6C24 LDR X0, [X0 + 0x828]
	0x035B6C28 BL 0x1C16CF4
	0x035B6C2C ADRP X0, 0xB81000
	0x035B6C30 LDR X0, [X0 + 0x858]
	0x035B6C34 BL 0x1C16CF4
	0x035B6C38 ADRP X0, 0xB81000
	0x035B6C3C LDR X0, [X0 + 0x830]
	0x035B6C40 BL 0x1C16CF4
	0x035B6C44 MOVZ W8, 0x1
	0x035B6C48 STRB W8, [X21 + 0xCD]
	0x035B6C4C LDR X0, [X20 + 0x10]
	0x035B6C50 CBZ X0, 0x35B6CC4
	0x035B6C54 ADRP X8, 0xB81000
	0x035B6C58 LDR X8, [X8 + 0x828]
	0x035B6C5C MOV X1, X19
	0x035B6C60 LDR X2, [X8]
	0x035B6C64 BL 0x2AA528C
	0x035B6C68 TBZ X0, 0x0, 0x35B6CB0
	0x035B6C6C LDR X0, [X20 + 0x10]
	0x035B6C70 CBZ X0, 0x35B6CC4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2B000
	006 Move W8, [X21+187]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB82000
	014 Move X0, [X0+2016]
	015 Call 0x1C17CF4
	016 Move X0, 0xB82000
	017 Move X0, [X0+1984]
	018 Call 0x1C17CF4
	019 Move X0, 0xB82000
	020 Move X0, [X0+1992]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+187], W8
	024 Move TEMP, X19
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {48}
	028 Move X0, [X20+16]
	029 Compare X0, 0
	030 JumpIfEqual {55}
	031 Move W8, [X0+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0xB82000
	034 Move X8, [X8+1992]
	035 Move W1, W19
	036 Move X2, [X8]
	037 Call List`1<Object>.get_Item, X0, X1
	038 Move X8, [X20+16]
	039 Compare X8, 0
	040 JumpIfEqual {55}
	041 Move X9, 0xB82000
	042 Move X9, [X9+2016]
	043 Move X20, X0
	044 Move X0, X8
	045 Move W1, W19
	046 Move X2, [X9]
	047 Call List`1<Object>.RemoveAt, X0, X1
	048 Move X20, X31
	049 Move X0, X20
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F20

Method: SimpleJSON.JSONNode Remove(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B6C74 ADRP X8, 0xB81000
	0x035B6C78 LDR X8, [X8 + 0x830]
	0x035B6C7C MOV X1, X19
	0x035B6C80 LDR X2, [X8]
	0x035B6C84 BL 0x2AA5018
	0x035B6C88 LDR X8, [X20 + 0x10]
	0x035B6C8C CBZ X8, 0x35B6CC4
	0x035B6C90 ADRP X9, 0xB81000
	0x035B6C94 LDR X9, [X9 + 0x858]
	0x035B6C98 MOV X20, X0
	0x035B6C9C MOV X0, X8
	0x035B6CA0 MOV X1, X19
	0x035B6CA4 LDR X2, [X9]
	0x035B6CA8 BL 0x2AA64F8
	0x035B6CAC B 0x35B6CB4
	0x035B6CB0 MOV X20, X31
	0x035B6CB4 MOV X0, X20
	0x035B6CB8 LDP X20, X19, [X31 + 0x10]
	0x035B6CBC LDP X30, X21, [X31], #0x20
	0x035B6CC0 RET
	0x035B6CC4 BL 0x1C16F20
	0x035B6CC8 STP X30, X21, [X31 - 0x20]!
	0x035B6CCC STP X20, X19, [X31 + 0x10]
	0x035B6CD0 ADRP X21, 0xE2A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2B000
	006 Move W8, [X21+188]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB82000
	014 Move X0, [X0+2024]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+188], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X8, 0xB82000
	022 Move X8, [X8+2024]
	023 Move X1, X19
	024 Move X2, [X8]
	025 Call List`1<Object>.Remove, X0, X1
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x035B6CD4 LDRB W8, [X21 + 0xCE]
	0x035B6CD8 MOV W20, W1
	0x035B6CDC MOV X19, X0
	0x035B6CE0 TBNZ X8, 0x0, 0x35B6D28
	0x035B6CE4 ADRP X0, 0xB81000
	0x035B6CE8 LDR X0, [X0 + 0x858]
	0x035B6CEC BL 0x1C16CF4
	0x035B6CF0 ADRP X0, 0xB81000
	0x035B6CF4 LDR X0, [X0 + 0x848]
	0x035B6CF8 BL 0x1C16CF4
	0x035B6CFC ADRP X0, 0xB81000
	0x035B6D00 LDR X0, [X0 + 0x850]
	0x035B6D04 BL 0x1C16CF4
	0x035B6D08 ADRP X0, 0xB67000
	0x035B6D0C LDR X0, [X0 + 0x340]
	0x035B6D10 BL 0x1C16CF4
	0x035B6D14 ADRP X0, 0xB67000
	0x035B6D18 LDR X0, [X0 + 0x348]
	0x035B6D1C BL 0x1C16CF4
	0x035B6D20 MOVZ W8, 0x1
	0x035B6D24 STRB W8, [X21 + 0xCE]
	0x035B6D28 TBNZ X20, 0x1F, 0x35B6D8C
	0x035B6D2C LDR X0, [X19 + 0x10]
	0x035B6D30 CBZ X0, 0x35B6DA0
	0x035B6D34 ADRP X8, 0xB81000
	0x035B6D38 LDR X8, [X8 + 0x848]
	0x035B6D3C LDR X1, [X8]
	0x035B6D40 BL 0x2AA4E88

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE2B000
	005 Move W8, [X20+189]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB82000
	012 Move X0, [X0+2032]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+189], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {37}
	019 Move W2, [X8+24]
	020 Move W9, [X8+28]
	021 Add W9, W9, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X8+24], W31
	024 Move [X8+28], W9
	025 Move X0, [X8+16]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, W31
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 Call Array.Clear, X0, X1, X2
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F20

Method: SimpleJSON.JSONNode Clone()

Disassembly:
	0x035B6D44 CMP W0, W20
	0x035B6D48 B.LE 0x35B6D8C
	0x035B6D4C ADRP X8, 0xB81000
	0x035B6D50 LDR X0, [X19 + 0x10]
	0x035B6D54 LDR X8, [X8 + 0x850]
	0x035B6D58 MOV W1, W20
	0x035B6D5C LDR X2, [X8]
	0x035B6D60 BL 0x21C06A8
	0x035B6D64 MOV X3, X0
	0x035B6D68 LDR X0, [X19 + 0x10]
	0x035B6D6C CBZ X0, 0x35B6DA0
	0x035B6D70 ADRP X8, 0xB81000
	0x035B6D74 LDR X8, [X8 + 0x858]
	0x035B6D78 MOV X19, X1
	0x035B6D7C MOV X1, X3
	0x035B6D80 LDR X2, [X8]
	0x035B6D84 BL 0x2AA64F8
	0x035B6D88 B 0x35B6D90
	0x035B6D8C MOV X19, X31
	0x035B6D90 MOV X0, X19
	0x035B6D94 LDP X20, X19, [X31 + 0x10]
	0x035B6D98 LDP X30, X21, [X31], #0x20
	0x035B6D9C RET
	0x035B6DA0 BL 0x1C16F20
	0x035B6DA4 STR X30, [X31 - 0x30]!
	0x035B6DA8 STP X22, X21, [X31 + 0x10]
	0x035B6DAC STP X20, X19, [X31 + 0x20]
	0x035B6DB0 ADRP X20, 0xE2A000
	0x035B6DB4 ADRP X22, 0xB81000
	0x035B6DB8 LDRB W8, [X20 + 0xCF]
	0x035B6DBC LDR X22, [X22 + 0x860]
	0x035B6DC0 MOV X21, X1
	0x035B6DC4 MOV X19, X0
	0x035B6DC8 TBNZ X8, 0x0, 0x35B6E28
	0x035B6DCC ADRP X0, 0xB81000
	0x035B6DD0 LDR X0, [X0 + 0x858]
	0x035B6DD4 BL 0x1C16CF4
	0x035B6DD8 ADRP X0, 0xB81000
	0x035B6DDC LDR X0, [X0 + 0x868]
	0x035B6DE0 BL 0x1C16CF4
	0x035B6DE4 ADRP X0, 0xB81000
	0x035B6DE8 LDR X0, [X0 + 0x870]
	0x035B6DEC BL 0x1C16CF4
	0x035B6DF0 ADRP X0, 0xB81000
	0x035B6DF4 LDR X0, [X0 + 0x878]
	0x035B6DF8 BL 0x1C16CF4
	0x035B6DFC ADRP X0, 0xB67000
	0x035B6E00 LDR X0, [X0 + 0x340]
	0x035B6E04 BL 0x1C16CF4
	0x035B6E08 ADRP X0, 0xB81000
	0x035B6E0C LDR X0, [X0 + 0x880]
	0x035B6E10 BL 0x1C16CF4
	0x035B6E14 ADRP X0, 0xB81000
	0x035B6E18 LDR X0, [X0 + 0x860]
	0x035B6E1C BL 0x1C16CF4
	0x035B6E20 MOVZ W8, 0x1
	0x035B6E24 STRB W8, [X20 + 0xCF]
	0x035B6E28 LDR X0, [X22]
	0x035B6E2C BL 0x1C16F10
	0x035B6E30 MOV X1, X31
	0x035B6E34 MOV X20, X0
	0x035B6E38 BL 0x33BDD8C
	0x035B6E3C CBZ X20, 0x35B6ECC
	0x035B6E40 ADRP X8, 0xB81000
	0x035B6E44 LDR X8, [X8 + 0x878]
	0x035B6E48 STR X21, [X20 + 0x10]
	0x035B6E4C LDR X21, [X19 + 0x10]
	0x035B6E50 LDR X0, [X8]
	0x035B6E54 BL 0x1C16F10
	0x035B6E58 ADRP X8, 0xB81000
	0x035B6E5C LDR X8, [X8 + 0x880]
	0x035B6E60 MOV X22, X0
	0x035B6E64 LDR X2, [X8]
	0x035B6E68 MOV X1, X20
	0x035B6E6C MOV X3, X31
	0x035B6E70 BL 0x2D29F50
	0x035B6E74 ADRP X8, 0xB81000
	0x035B6E78 LDR X8, [X8 + 0x870]
	0x035B6E7C LDR X2, [X8]
	0x035B6E80 MOV X0, X21
	0x035B6E84 MOV X1, X22
	0x035B6E88 BL 0x21D8848
	0x035B6E8C ADRP X8, 0xB81000
	0x035B6E90 LDR X8, [X8 + 0x868]
	0x035B6E94 LDR X1, [X8]
	0x035B6E98 BL 0x21C228C
	0x035B6E9C MOV X1, X0
	0x035B6EA0 LDR X0, [X19 + 0x10]
	0x035B6EA4 CBZ X0, 0x35B6ED0
	0x035B6EA8 ADRP X8, 0xB81000
	0x035B6EAC LDR X8, [X8 + 0x858]
	0x035B6EB0 LDR X2, [X8]
	0x035B6EB4 BL 0x2AA64F8
	0x035B6EB8 LDR X0, [X20 + 0x10]
	0x035B6EBC LDP X20, X19, [X31 + 0x20]
	0x035B6EC0 LDP X22, X21, [X31 + 0x10]
	0x035B6EC4 LDR X30, [X31], #0x30
	0x035B6EC8 RET
	0x035B6ECC BL 0x1C16F20
	0x035B6ED0 BL 0x1C16F20
	0x035B6ED4 B 0x35B6EE4
	0x035B6ED8 B 0x35B6EE4
	0x035B6EDC B 0x35B6EE4
	0x035B6EE0 B 0x35B6EE4
	0x035B6EE4 MOV X19, X0
	0x035B6EE8 CMP W1, 0x1
	0x035B6EEC B.NE 0x35B6F4C
	0x035B6EF0 MOV X0, X19
	0x035B6EF4 BL 0x3EB1AD0
	0x035B6EF8 MOV X19, X0
	0x035B6EFC ADRP X0, 0xB43000
	0x035B6F00 LDR X0, [X0 + 0xCC0]
	0x035B6F04 BL 0x1C16D08
	0x035B6F08 LDR X8, [X19]
	0x035B6F0C LDR X1, [X8]
	0x035B6F10 BL 0x1C17270
	0x035B6F14 TBZ X0, 0x0, 0x35B6F24
	0x035B6F18 BL 0x3EB1AE0
	0x035B6F1C MOV X0, X31
	0x035B6F20 B 0x35B6EBC
	0x035B6F24 MOVZ W0, 0x8
	0x035B6F28 BL 0x3EB1AF0
	0x035B6F2C LDR X8, [X19]
	0x035B6F30 STR X8, [X0]
	0x035B6F34 ADRP X1, 0x8FE000
	0x035B6F38 ADD X1, X1, 0xE58
	0x035B6F3C MOV X2, X31
	0x035B6F40 BL 0x3EB1B00
	0x035B6F44 MOV X19, X0
	0x035B6F48 BL 0x3EB1AE0
	0x035B6F4C MOV X0, X19
	0x035B6F50 BL 0x1D2C690
	0x035B6F54 BL 0x1990590
	0x035B6F58 MOV X1, X31
	0x035B6F5C B 0x33BDD8C
	0x035B6F60 STR X30, [X31 - 0x20]!
	0x035B6F64 STP X20, X19, [X31 + 0x10]
	0x035B6F68 ADRP X20, 0xE2A000
	0x035B6F6C LDRB W8, [X20 + 0xD0]
	0x035B6F70 MOV X19, X0
	0x035B6F74 TBNZ X8, 0x0, 0x35B6F8C
	0x035B6F78 ADRP X0, 0xB81000
	0x035B6F7C LDR X0, [X0 + 0x888]
	0x035B6F80 BL 0x1C16CF4
	0x035B6F84 MOVZ W8, 0x1
	0x035B6F88 STRB W8, [X20 + 0xD0]
	0x035B6F8C LDR X0, [X19 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0xE2B000
	009 Move X19, 0xB68000
	010 Move W8, [X21+190]
	011 Move X19, [X19+880]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0xB82000
	018 Move X0, [X0+2040]
	019 Call 0x1C17CF4
	020 Move X0, 0xB82000
	021 Move X0, [X0+1928]
	022 Call 0x1C17CF4
	023 Move X0, 0xB82000
	024 Move X0, [X0+1904]
	025 Call 0x1C17CF4
	026 Move X0, 0xB68000
	027 Move X0, [X0+880]
	028 Call 0x1C17CF4
	029 Move X0, 0xB3F000
	030 Move X0, [X0+1120]
	031 Call 0x1C17CF4
	032 Move X0, 0xB82000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xB82000
	036 Move X0, [X0+2048]
	037 Call 0x1C17CF4
	038 Move X0, 0xB82000
	039 Move X0, [X0+2056]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+190], W8
	043 Move X0, [X19]
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move [X31+48], X31
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Call JSONArray..ctor, X0
	050 Compare X19, 0
	051 JumpIfEqual {138}
	052 Move X0, [X20+16]
	053 Compare X0, 0
	054 JumpIfEqual {138}
	055 Move X8, 0xB82000
	056 Move X8, [X8+2048]
	057 Move X21, [X19+16]
	058 Move X1, [X8]
	059 Call List`1<Object>.get_Capacity, X0
	060 Compare X21, 0
	061 JumpIfEqual {138}
	062 Move X8, 0xB82000
	063 Move X8, [X8+2056]
	064 Move W1, W0
	065 Move X0, X21
	066 Move X2, [X8]
	067 Call List`1<Object>.set_Capacity, X0, X1
	068 Move X0, [X20+16]
	069 Compare X0, 0
	070 JumpIfEqual {138}
	071 Move X8, 0xB82000
	072 Move X8, [X8+1976]
	073 Move X22, 0xB82000
	074 Move X23, 0xB3F000
	075 Move X21, 0xB82000
	076 Move X1, [X8]
	077 Move X22, [X22+1928]
	078 Move X23, [X23+1120]
	079 Move X21, [X21+2040]
	080 Add X8, X31, 8
	081 Call List`1<Object>.GetEnumerator, X0
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 Move X8, [X31+24]
	084 Move [X31+2], V0
	085 Move [X31+48], X8
	086 Move X1, [X22]
	087 Add X0, X31, 32
	088 Call Enumerator<Object>.MoveNext, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {125}
	093 Move X0, [X23]
	094 Move X20, [X31+48]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move X1, X31
	101 Call JSONNode.op_Inequality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {119}
	106 Compare X20, 0
	107 JumpIfEqual {137}
	108 Move X8, [X20]
	109 Move X1, [X8+736]
	110 Move X9, [X8+728]
	111 Move X0, X20
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X1, X0
	114 Move X8, [X19]
	115 Move X9, [X8+648]
	116 Move X2, [X8+656]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X8, [X19]
	120 Move X9, [X8+648]
	121 Move X2, [X8+656]
	122 Move X0, X19
	123 Move X1, X31
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X1, [X21]
	126 Add X0, X31, 32
	127 Call Enumerator<Object>.Dispose, X0
	128 Move X0, X19
	129 Move X20, [X31+96]
	130 Move X19, [X31+104]
	131 Move X22, [X31+80]
	132 Move X21, [X31+88]
	133 Move X30, [X31+64]
	134 Move X23, [X31+72]
	135 Add X31, X31, 112
	136 Return X0
	137 Call 0x1C17F20
	138 Call 0x1C17F20
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Call 0x3EB2AD0
	141 Move X20, [X0]
	142 Call 0x3EB2AE0
	143 Move X1, [X21]
	144 Add X0, X31, 32
	145 Call Enumerator<Object>.Dispose, X0
	146 Compare X20, 0
	147 JumpIfEqual {128}
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Move X19, X0
	151 Move X20, X31
	152 Move X19, X0
	153 Move X1, [X21]
	154 Add X0, X31, 32
	155 Call Enumerator<Object>.Dispose, X0
	156 Compare X20, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X19
	159 Call 0x1D2D690
	160 Move X0, X20
	161 Call 0x1C17F18
	162 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<SimpleJSON.JSONNode> get_Children()

Disassembly:
	0x035B6F90 CBZ X0, 0x35B6FAC
	0x035B6F94 ADRP X8, 0xB81000
	0x035B6F98 LDR X8, [X8 + 0x888]
	0x035B6F9C LDP X20, X19, [X31 + 0x10]
	0x035B6FA0 LDR X1, [X8]
	0x035B6FA4 LDR X30, [X31], #0x20
	0x035B6FA8 B 0x2AA5220
	0x035B6FAC BL 0x1C16F20
	0x035B6FB0 SUB X31, X31, 0x60
	0x035B6FB4 STR X30, [X31 + 0x30]
	0x035B6FB8 STP X22, X21, [X31 + 0x40]
	0x035B6FBC STP X20, X19, [X31 + 0x50]
	0x035B6FC0 ADRP X21, 0xE2A000
	0x035B6FC4 ADRP X19, 0xB65000
	0x035B6FC8 LDRB W8, [X21 + 0xD1]
	0x035B6FCC LDR X19, [X19 + 0xBC0]
	0x035B6FD0 MOV X20, X0
	0x035B6FD4 TBNZ X8, 0x0, 0x35B7034
	0x035B6FD8 ADRP X0, 0xB81000
	0x035B6FDC LDR X0, [X0 + 0x820]
	0x035B6FE0 BL 0x1C16CF4
	0x035B6FE4 ADRP X0, 0xB81000
	0x035B6FE8 LDR X0, [X0 + 0x890]
	0x035B6FEC BL 0x1C16CF4
	0x035B6FF0 ADRP X0, 0xB81000
	0x035B6FF4 LDR X0, [X0 + 0x780]
	0x035B6FF8 BL 0x1C16CF4
	0x035B6FFC ADRP X0, 0xB81000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE2B000
	006 Move X21, 0xB82000
	007 Move W8, [X20+191]
	008 Move X21, [X21+2064]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB82000
	015 Move X0, [X0+2064]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+191], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move [X20+40], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Void WriteToStringBuilder(System.Text.StringBuilder aSB, System.Int32 aIndent, System.Int32 aIndentInc, SimpleJSON.JSONTextMode aMode)

Disassembly:
	0x035B7034 LDR X0, [X19]
	0x035B7038 MOVI V0.2D, 0x0
	0x035B703C STR X31, [X31 + 0x20]
	0x035B7040 STP V0, V0, [X31]
	0x035B7044 BL 0x1C16F10
	0x035B7048 MOV X19, X0
	0x035B704C BL 0x35AE864
	0x035B7050 LDR X0, [X20 + 0x10]
	0x035B7054 CBZ X0, 0x35B70F8
	0x035B7058 ADRP X8, 0xB80000
	0x035B705C LDR X8, [X8 + 0x820]
	0x035B7060 ADRP X22, 0xB80000
	0x035B7064 ADRP X21, 0xB80000
	0x035B7068 LDR X1, [X8]
	0x035B706C LDR X22, [X22 + 0x780]
	0x035B7070 LDR X21, [X21 + 0x890]
	0x035B7074 ADD X8, X31, 0x0
	0x035B7078 BL 0x2AA54BC
	0x035B707C LDR X1, [X22]
	0x035B7080 ADD X0, X31, 0x0
	0x035B7084 BL 0x2C0A728
	0x035B7088 TBZ X0, 0x0, 0x35B70CC
	0x035B708C LDR X0, [X31 + 0x18]
	0x035B7090 CBZ X0, 0x35B70F0
	0x035B7094 LDR X8, [X0]
	0x035B7098 LDR X20, [X31 + 0x10]
	0x035B709C LDR X1, [X8 + 0x2E0]
	0x035B70A0 LDR X9, [X8 + 0x2D8]
	0x035B70A4 BLR X9
	0x035B70A8 CBZ X19, 0x35B70F4
	0x035B70AC LDR X8, [X19]
	0x035B70B0 MOV X2, X0
	0x035B70B4 LDR X9, [X8 + 0x278]
	0x035B70B8 LDR X3, [X8 + 0x280]
	0x035B70BC MOV X0, X19
	0x035B70C0 MOV X1, X20
	0x035B70C4 BLR X9
	0x035B70C8 B 0x35B707C
	0x035B70CC LDR X1, [X21]
	0x035B70D0 ADD X0, X31, 0x0
	0x035B70D4 BL 0x2C0A83C
	0x035B70D8 MOV X0, X19
	0x035B70DC LDP X20, X19, [X31 + 0x50]
	0x035B70E0 LDP X22, X21, [X31 + 0x40]
	0x035B70E4 LDR X30, [X31 + 0x30]
	0x035B70E8 ADD X31, X31, 0x60
	0x035B70EC RET
	0x035B70F0 BL 0x1C16F20
	0x035B70F4 BL 0x1C16F20
	0x035B70F8 BL 0x1C16F20
	0x035B70FC B 0x35B7108
	0x035B7100 B 0x35B7108
	0x035B7104 B 0x35B7108
	0x035B7108 CMP W1, 0x1
	0x035B710C B.NE 0x35B7134
	0x035B7110 BL 0x3EB1AD0
	0x035B7114 LDR X20, [X0]
	0x035B7118 BL 0x3EB1AE0
	0x035B711C LDR X1, [X21]
	0x035B7120 ADD X0, X31, 0x0
	0x035B7124 BL 0x2C0A83C
	0x035B7128 CBZ X20, 0x35B70D8
	0x035B712C MOV X0, X20
	0x035B7130 BL 0x1C16F18
	0x035B7134 MOV X19, X0
	0x035B7138 MOV X20, X31
	0x035B713C B 0x35B7144
	0x035B7140 MOV X19, X0
	0x035B7144 LDR X1, [X21]
	0x035B7148 ADD X0, X31, 0x0
	0x035B714C BL 0x2C0A83C
	0x035B7150 CBNZ X20, 0x35B715C
	0x035B7154 MOV X0, X19
	0x035B7158 BL 0x1D2C690
	0x035B715C MOV X0, X20
	0x035B7160 BL 0x1C16F18
	0x035B7164 BL 0x1990590
	0x035B7168 STP X30, X21, [X31 - 0x20]!
	0x035B716C STP X20, X19, [X31 + 0x10]
	0x035B7170 ADRP X21, 0xE29000
	0x035B7174 LDRB W8, [X21 + 0xD2]
	0x035B7178 MOV X19, X1
	0x035B717C MOV X20, X0
	0x035B7180 TBNZ X8, 0x0, 0x35B7198
	0x035B7184 ADRP X0, 0xB80000
	0x035B7188 LDR X0, [X0 + 0x828]
	0x035B718C BL 0x1C16CF4
	0x035B7190 MOVZ W8, 0x1
	0x035B7194 STRB W8, [X21 + 0xD2]
	0x035B7198 LDR X0, [X20 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0xE2A000
	012 Move W8, [X24+192]
	013 Move W23, W4
	014 Move W21, W3
	015 Move W20, W2
	016 Move X19, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xB81000
	023 Move X0, [X0+1984]
	024 Call 0x1C17CF4
	025 Move X0, 0xB81000
	026 Move X0, [X0+1992]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+192], W8
	030 Compare X19, 0
	031 JumpIfEqual {106}
	032 Move W1, 91
	033 Move X0, X19
	034 Move X2, X31
	035 Call StringBuilder.Append, X0, X1
	036 Move X8, [X22+16]
	037 Compare X8, 0
	038 JumpIfEqual {106}
	039 Move W9, [X22+24]
	040 Move W26, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X27, 0xB81000
	045 Move X27, [X27+1992]
	046 Move W24, W31
	047 Add W25, W21, W20
	048 Compare W24, 0
	049 JumpIfEqual {54}
	050 Move W1, 44
	051 Move X0, X19
	052 Move X2, X31
	053 Call StringBuilder.Append, X0, X1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X19
	056 Move X1, X31
	057 Call StringBuilder.AppendLine, X0
	058 Move W1, 32
	059 Move X0, X19
	060 Move W2, W25
	061 Move X3, X31
	062 Call StringBuilder.Append, X0, X1, X2
	063 Move X0, [X22+16]
	064 Compare X0, 0
	065 JumpIfEqual {106}
	066 Move X2, [X27]
	067 Move W1, W24
	068 Call List`1<Object>.get_Item, X0, X1
	069 Compare X0, 0
	070 JumpIfEqual {106}
	071 Move X8, [X0]
	072 Move X1, X19
	073 Move W2, W25
	074 Move W3, W21
	075 Move X9, [X8+808]
	076 Move X5, [X8+816]
	077 Move W4, W23
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Add W24, W24, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X19
	083 Move X1, X31
	084 Call StringBuilder.AppendLine, X0
	085 Compare X0, 0
	086 JumpIfEqual {106}
	087 Move W1, 32
	088 Move W2, W20
	089 Move X3, X31
	090 Call StringBuilder.Append, X0, X1, X2
	091 Move X0, X19
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X26, [X31+16]
	099 Move X25, [X31+24]
	100 Move W1, 93
	101 Move X2, X31
	102 Move X30, [X31+80]
	103 Move X27, [X31+88]
	104 Call StringBuilder.Append, X0, X1
	105 Return 
	106 Call 0x1C17F20

Method: System.Void SerializeBinary(System.IO.BinaryWriter aWriter)

Disassembly:
	0x035B719C CBZ X0, 0x35B71BC
	0x035B71A0 ADRP X8, 0xB80000
	0x035B71A4 LDR X8, [X8 + 0x828]
	0x035B71A8 MOV X1, X19
	0x035B71AC LDP X20, X19, [X31 + 0x10]
	0x035B71B0 LDR X2, [X8]
	0x035B71B4 LDP X30, X21, [X31], #0x20
	0x035B71B8 B 0x2AA528C
	0x035B71BC BL 0x1C16F20
	0x035B71C0 STR X30, [X31 - 0x30]!
	0x035B71C4 STP X22, X21, [X31 + 0x10]
	0x035B71C8 STP X20, X19, [X31 + 0x20]
	0x035B71CC ADRP X22, 0xE29000
	0x035B71D0 LDRB W8, [X22 + 0xD3]
	0x035B71D4 MOV X19, X2
	0x035B71D8 MOV X20, X1
	0x035B71DC MOV X21, X0
	0x035B71E0 TBNZ X8, 0x0, 0x35B71F8
	0x035B71E4 ADRP X0, 0xB80000
	0x035B71E8 LDR X0, [X0 + 0x898]
	0x035B71EC BL 0x1C16CF4
	0x035B71F0 MOVZ W8, 0x1
	0x035B71F4 STRB W8, [X22 + 0xD3]
	0x035B71F8 STR X31, [X31 + 0x8]
	0x035B71FC LDR X0, [X21 + 0x10]
	0x035B7200 CBZ X0, 0x35B7238
	0x035B7204 ADRP X8, 0xB80000
	0x035B7208 LDR X8, [X8 + 0x898]
	0x035B720C ADD X2, X31, 0x8
	0x035B7210 MOV X1, X20
	0x035B7214 LDR X3, [X8]
	0x035B7218 BL 0x2AA6B2C
	0x035B721C LDR X8, [X31 + 0x8]
	0x035B7220 ANDS W31, W0, 0x1
	0x035B7224 LDP X22, X21, [X31 + 0x10]
	0x035B7228 CSEL X0, X8, X19, NE
	0x035B722C LDP X20, X19, [X31 + 0x20]
	0x035B7230 LDR X30, [X31], #0x30
	0x035B7234 RET
	0x035B7238 BL 0x1C16F20
	0x035B723C STP X30, X21, [X31 - 0x20]!
	0x035B7240 STP X20, X19, [X31 + 0x10]
	0x035B7244 ADRP X20, 0xE29000
	0x035B7248 ADRP X21, 0xB80000
	0x035B724C LDRB W8, [X20 + 0xD4]
	0x035B7250 LDR X21, [X21 + 0x8A0]
	0x035B7254 MOV X19, X0
	0x035B7258 TBNZ X8, 0x0, 0x35B7270
	0x035B725C ADRP X0, 0xB80000
	0x035B7260 LDR X0, [X0 + 0x8A0]
	0x035B7264 BL 0x1C16CF4
	0x035B7268 MOVZ W8, 0x1
	0x035B726C STRB W8, [X20 + 0xD4]
	0x035B7270 LDR X0, [X21]
	0x035B7274 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE2A000
	007 Move W8, [X21+193]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xB81000
	015 Move X0, [X0+1984]
	016 Call 0x1C17CF4
	017 Move X0, 0xB81000
	018 Move X0, [X0+1992]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+193], W8
	022 Compare X19, 0
	023 JumpIfEqual {61}
	024 Move X8, [X19]
	025 Move W1, 1
	026 Move X0, X19
	027 Move X9, [X8+456]
	028 Move X2, [X8+464]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X20+16]
	031 Compare X8, 0
	032 JumpIfEqual {61}
	033 Move X9, [X19]
	034 Move W1, [X8+24]
	035 Move X0, X19
	036 Move X8, [X9+584]
	037 Move X2, [X9+592]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X0, [X20+16]
	040 Compare X0, 0
	041 JumpIfEqual {61}
	042 Move X22, 0xB81000
	043 Move X22, [X22+1992]
	044 Move W21, W31
	045 Move W8, [X0+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X2, [X22]
	048 Move W1, W21
	049 Call List`1<Object>.get_Item, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {61}
	052 Move X8, [X0]
	053 Move X1, X19
	054 Move X9, [X8+1064]
	055 Move X2, [X8+1072]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X0, [X20+16]
	058 Add W21, W21, 1
	059 Compare X0, 0
	060 JumpIfNotEqual {45}
	061 Call 0x1C17F20
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 

Method: System.Void .ctor()

Disassembly:
	0x035AF904 ADRP X19, 0xB88000
	0x035AF908 LDR W8, [X0 + 0xE0]
	0x035AF90C LDR X19, [X19 + 0x650]
	0x035AF910 CBNZ W8, 0x35AF918
	0x035AF914 BL 0x1C16DFC
	0x035AF918 ADD X0, X31, 0x8
	0x035AF91C MOV X1, X31
	0x035AF920 BL 0x33D7400
	0x035AF924 LDR X8, [X19]
	0x035AF928 MOV X20, X0
	0x035AF92C MOV X0, X8
	0x035AF930 BL 0x1C16F10
	0x035AF934 MOV X1, X20
	0x035AF938 MOV X19, X0
	0x035AF93C BL 0x35ACFF8
	0x035AF940 LDR X8, [X21 + 0x28]
	0x035AF944 LDR X9, [X31 + 0x18]
	0x035AF948 CMP X8, X9
	0x035AF94C B.NE 0x35AF964
	0x035AF950 MOV X0, X19
	0x035AF954 LDP X20, X19, [X31 + 0x30]
	0x035AF958 LDP X30, X21, [X31 + 0x20]
	0x035AF95C ADD X31, X31, 0x40
	0x035AF960 RET
	0x035AF964 BL 0x3EB1B20
	0x035AF968 STR X30, [X31 - 0x10]!
	0x035AF96C CBZ X0, 0x35AF984
	0x035AF970 LDR X8, [X0]
	0x035AF974 LDR X2, [X8 + 0x438]
	0x035AF978 LDR X1, [X8 + 0x440]
	0x035AF97C LDR X30, [X31], #0x10
	0x035AF980 BR X2
	0x035AF984 BL 0x1C16F20
	0x035AF988 STP X30, X19, [X31 - 0x10]!
	0x035AF98C LDR X8, [X0]
	0x035AF990 MOV X19, X0
	0x035AF994 LDR X9, [X8 + 0x208]
	0x035AF998 LDR X1, [X8 + 0x210]
	0x035AF99C BLR X9
	0x035AF9A0 TBZ X0, 0x0, 0x35AF9E8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE32000
	008 Move X23, 0xB89000
	009 Move X20, 0xB89000
	010 Move X21, 0xB46000
	011 Move W8, [X22+194]
	012 Move X23, [X23+1736]
	013 Move X20, [X20+1744]
	014 Move X21, [X21+1120]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xB46000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move X0, 0xB89000
	024 Move X0, [X0+1744]
	025 Call 0x1C17CF4
	026 Move X0, 0xB89000
	027 Move X0, [X0+1736]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+194], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X1, [X20]
	034 Move X20, X0
	035 Call List`1<Object>..ctor, X0
	036 Move [X19+16], X20
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call Object..ctor, X0
	051 Return 

