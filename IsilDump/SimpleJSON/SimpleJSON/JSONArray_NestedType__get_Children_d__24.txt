Type: SimpleJSON.JSONArray/<get_Children>d__24

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x035B7000 LDR X0, [X0 + 0x768]
	0x035B7004 BL 0x1C16CF4
	0x035B7008 ADRP X0, 0xB64000
	0x035B700C LDR X0, [X0 + 0xBC0]
	0x035B7010 BL 0x1C16CF4
	0x035B7014 ADRP X0, 0xB66000
	0x035B7018 LDR X0, [X0 + 0x340]
	0x035B701C BL 0x1C16CF4
	0x035B7020 ADRP X0, 0xB66000
	0x035B7024 LDR X0, [X0 + 0x348]
	0x035B7028 BL 0x1C16CF4
	0x035B702C MOVZ W8, 0x1
	0x035B7030 STRB W8, [X21 + 0xD1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x035B7278 MOV X1, X31
	0x035B727C MOV X20, X0
	0x035B7280 BL 0x33BDD8C
	0x035B7284 MOVN W8, 0x1
	0x035B7288 MOV X0, X31
	0x035B728C STR W8, [X20 + 0x10]
	0x035B7290 BL 0x33C151C

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <get_Children>d__24.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x035B7294 STR W0, [X20 + 0x20]
	0x035B7298 STR X19, [X20 + 0x28]
	0x035B729C MOV X0, X20
	0x035B72A0 LDP X20, X19, [X31 + 0x10]
	0x035B72A4 LDP X30, X21, [X31], #0x20
	0x035B72A8 RET
	0x035B72AC STR X30, [X31 - 0x20]!
	0x035B72B0 STP X20, X19, [X31 + 0x10]
	0x035B72B4 MOV W19, W1
	0x035B72B8 MOV X1, X31
	0x035B72BC MOV X20, X0
	0x035B72C0 BL 0x33BDD8C
	0x035B72C4 MOV X0, X31
	0x035B72C8 STR W19, [X20 + 0x10]
	0x035B72CC BL 0x33C151C
	0x035B72D0 STR W0, [X20 + 0x20]
	0x035B72D4 LDP X20, X19, [X31 + 0x10]
	0x035B72D8 LDR X30, [X31], #0x20
	0x035B72DC RET
	0x035B72E0 SUB X31, X31, 0xC0
	0x035B72E4 STP X29, X30, [X31 + 0x60]
	0x035B72E8 STP X28, X27, [X31 + 0x70]
	0x035B72EC STP X26, X25, [X31 + 0x80]
	0x035B72F0 STP X24, X23, [X31 + 0x90]
	0x035B72F4 STP X22, X21, [X31 + 0xA0]
	0x035B72F8 STP X20, X19, [X31 + 0xB0]
	0x035B72FC ADRP X24, 0xE29000
	0x035B7300 LDRB W8, [X24 + 0xD5]
	0x035B7304 MOV W21, W4
	0x035B7308 MOV W22, W3
	0x035B730C MOV W20, W2
	0x035B7310 MOV X19, X1
	0x035B7314 MOV X23, X0
	0x035B7318 TBNZ X8, 0x0, 0x35B7384
	0x035B731C ADRP X0, 0xB80000
	0x035B7320 LDR X0, [X0 + 0x820]
	0x035B7324 BL 0x1C16CF4
	0x035B7328 ADRP X0, 0xB80000
	0x035B732C LDR X0, [X0 + 0x890]
	0x035B7330 BL 0x1C16CF4
	0x035B7334 ADRP X0, 0xB80000
	0x035B7338 LDR X0, [X0 + 0x780]
	0x035B733C BL 0x1C16CF4
	0x035B7340 ADRP X0, 0xB80000
	0x035B7344 LDR X0, [X0 + 0x768]
	0x035B7348 BL 0x1C16CF4
	0x035B734C ADRP X0, 0xB3D000
	0x035B7350 LDR X0, [X0 + 0x460]
	0x035B7354 BL 0x1C16CF4
	0x035B7358 ADRP X0, 0xB66000
	0x035B735C LDR X0, [X0 + 0x340]
	0x035B7360 BL 0x1C16CF4
	0x035B7364 ADRP X0, 0xB66000
	0x035B7368 LDR X0, [X0 + 0x348]
	0x035B736C BL 0x1C16CF4
	0x035B7370 ADRP X0, 0xB40000
	0x035B7374 LDR X0, [X0 + 0x928]
	0x035B7378 BL 0x1C16CF4
	0x035B737C MOVZ W8, 0x1
	0x035B7380 STRB W8, [X24 + 0xD5]
	0x035B7384 MOVI V0.2D, 0x0
	0x035B7388 STR X31, [X31 + 0x50]
	0x035B738C STP V0, V0, [X31 + 0x30]
	0x035B7390 CBZ X19, 0x35B7570
	0x035B7394 MOVZ W1, 0x7B
	0x035B7398 MOV X0, X19
	0x035B739C MOV X2, X31
	0x035B73A0 BL 0x3233D30
	0x035B73A4 LDRB W8, [X23 + 0x18]
	0x035B73A8 LDR X0, [X23 + 0x10]
	0x035B73AC CMP W8, 0x0
	0x035B73B0 CSEL W21, W21, W31, EQ
	0x035B73B4 CBZ X0, 0x35B7570
	0x035B73B8 ADRP X8, 0xB80000
	0x035B73BC LDR X8, [X8 + 0x820]
	0x035B73C0 ADRP X28, 0xB80000
	0x035B73C4 LDR X28, [X28 + 0x780]
	0x035B73C8 ADRP X29, 0xB3D000
	0x035B73CC LDR X1, [X8]
	0x035B73D0 ADRP X27, 0xB40000
	0x035B73D4 LDR X29, [X29 + 0x460]
	0x035B73D8 LDR X27, [X27 + 0x928]
	0x035B73DC ADD X8, X31, 0x8
	0x035B73E0 BL 0x2AA54BC
	0x035B73E4 LDUR V0, [X31 + 0x8]
	0x035B73E8 LDUR V1, [X31 + 0x18]
	0x035B73EC LDR X8, [X31 + 0x28]
	0x035B73F0 ADD W23, W22, W20
	0x035B73F4 MOVZ W26, 0x1
	0x035B73F8 STP V0, V1, [X31 + 0x30]
	0x035B73FC STR X8, [X31 + 0x50]
	0x035B7400 LDR X1, [X28]
	0x035B7404 ADD X0, X31, 0x30
	0x035B7408 BL 0x2C0A728
	0x035B740C TBZ X0, 0x0, 0x35B74F8
	0x035B7410 LDP X25, X24, [X31 + 0x40]
	0x035B7414 TBNZ X26, 0x0, 0x35B7428
	0x035B7418 MOVZ W1, 0x2C
	0x035B741C MOV X0, X19
	0x035B7420 MOV X2, X31
	0x035B7424 BL 0x3233D30

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X0
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X20, 0xE2A000
	007 Move W8, [X20+195]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB81000
	014 Move X0, [X0+1928]
	015 Call 0x1C17CF4
	016 Move X0, 0xB81000
	017 Move X0, [X0+1904]
	018 Call 0x1C17CF4
	019 Move X0, 0xB81000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+195], W8
	024 Add X8, X31, 88
	025 Move [X31+72], X8
	026 Move W8, [X19+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare W8, 0
	029 JumpIfNotEqual {90}
	030 Move X8, [X19+40]
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W9, TEMP
	034 Move [X19+16], W9
	035 Compare X8, 0
	036 JumpIfEqual {81}
	037 Move X0, [X8+16]
	038 Compare X0, 0
	039 JumpIfEqual {82}
	040 Move X8, 0xB81000
	041 Move X8, [X8+1976]
	042 Move X1, [X8]
	043 Add X8, X31, 8
	044 Call List`1<Object>.GetEnumerator, X0
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X8, [X31+24]
	047 Move X19, [X31+88]
	048 Move TEMP, 2
	049 Not TEMP
	050 Move W9, TEMP
	051 Move [X31+2], V0
	052 Move [X31+48], X8
	053 Move [X19+64], X8
	054 Move [X19+3], V0
	055 Move [X19+16], W9
	056 Move TEMP, 2
	057 Not TEMP
	058 Move W8, TEMP
	059 Move [X19+16], W8
	060 Move X8, 0xB81000
	061 Move X8, [X8+1928]
	062 Add X0, X19, 48
	063 Move X1, [X8]
	064 Call Enumerator<Object>.MoveNext, X0
	065 Move X8, [X31+88]
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {74}
	070 Move X9, [X8+64]
	071 Move W0, 1
	072 Move [X8+16], W0
	073 Move [X8+24], X9
	074 Move X0, X8
	075 Call <get_Children>d__24.<>m__Finally1, X0
	076 Move X8, [X31+88]
	077 Move W0, W31
	078 Move [X8+48], X31
	079 Move [X8+56], X31
	080 Move [X8+64], X31
	081 Call 0x1C17F20
	082 Call 0x1C17F20
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Call 0x3EB2AD0
	085 Move X19, [X0]
	086 Move [X31+64], X19
	087 Call 0x3EB2AE0
	088 Compare X19, 0
	089 JumpIfNotEqual {96}
	090 Move W0, W31
	091 Move X20, [X31+96]
	092 Move X19, [X31+104]
	093 Move X30, [X31+80]
	094 Add X31, X31, 112
	095 Return X0
	096 Add X8, X31, 64
	097 Add X0, X8, 8
	098 Call 0x1BC2920
	099 Move X0, X19
	100 Call 0x1C17F18
	101 Compare X19, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1D2D690
	104 Move X0, [X31+88]
	105 Move W8, [X0+16]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add W31, W8, 3
	108 Call <get_Children>d__24.<>m__Finally1, X0
	109 Move X0, X19
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x035B7428 CMP W21, 0x1
	0x035B742C B.NE 0x35B7450
	0x035B7430 MOV X0, X19
	0x035B7434 MOV X1, X31
	0x035B7438 BL 0x3233888
	0x035B743C MOVZ W1, 0x20
	0x035B7440 MOV X0, X19
	0x035B7444 MOV W2, W23
	0x035B7448 MOV X3, X31
	0x035B744C BL 0x3232D24
	0x035B7450 MOVZ W1, 0x22
	0x035B7454 MOV X0, X19
	0x035B7458 MOV X2, X31
	0x035B745C BL 0x3233D30
	0x035B7460 MOV X26, X0
	0x035B7464 LDR X0, [X29]
	0x035B7468 LDR W8, [X0 + 0xE0]
	0x035B746C CBNZ W8, 0x35B7474
	0x035B7470 BL 0x1C16DFC
	0x035B7474 MOV X0, X25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2A000
	006 Move X20, 0xB81000
	007 Move W8, [X21+196]
	008 Move X20, [X20+2040]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB81000
	015 Move X0, [X0+2040]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+196], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 48
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object>.Dispose, X0
	030 Return 

Method: SimpleJSON.JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.get_Current()

Disassembly:
	0x035B7478 BL 0x35ADBA4
	0x035B747C MOV X1, X0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x035B7480 CBZ X26, 0x35B7568
	0x035B7484 MOV X0, X26
	0x035B7488 MOV X2, X31
	0x035B748C BL 0x32333E0
	0x035B7490 CBZ X0, 0x35B756C
	0x035B7494 MOVZ W1, 0x22
	0x035B7498 MOV X2, X31
	0x035B749C BL 0x3233D30
	0x035B74A0 CBZ W21, 0x35B74B8
	0x035B74A4 LDR X1, [X27]
	0x035B74A8 MOV X0, X19
	0x035B74AC MOV X2, X31
	0x035B74B0 BL 0x32333E0
	0x035B74B4 B 0x35B74C8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB3D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB81000
	011 Move X0, [X0+2072]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x035B74B8 MOVZ W1, 0x3A
	0x035B74BC MOV X0, X19

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<SimpleJSON.JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()

Disassembly:
	0x035B74C0 MOV X2, X31
	0x035B74C4 BL 0x3233D30
	0x035B74C8 CBZ X24, 0x35B7564
	0x035B74CC LDR X8, [X24]
	0x035B74D0 LDR X9, [X8 + 0x328]
	0x035B74D4 LDR X5, [X8 + 0x330]
	0x035B74D8 MOV X0, X24
	0x035B74DC MOV X1, X19
	0x035B74E0 MOV W2, W23
	0x035B74E4 MOV W3, W22
	0x035B74E8 MOV W4, W21
	0x035B74EC BLR X9
	0x035B74F0 MOV W26, W31
	0x035B74F4 B 0x35B7400
	0x035B74F8 ADRP X8, 0xB80000
	0x035B74FC LDR X8, [X8 + 0x890]
	0x035B7500 ADD X0, X31, 0x30
	0x035B7504 LDR X1, [X8]
	0x035B7508 BL 0x2C0A83C
	0x035B750C CMP W21, 0x1
	0x035B7510 B.NE 0x35B7534
	0x035B7514 MOV X0, X19
	0x035B7518 MOV X1, X31
	0x035B751C BL 0x3233888
	0x035B7520 CBZ X0, 0x35B7570
	0x035B7524 MOVZ W1, 0x20
	0x035B7528 MOV W2, W20
	0x035B752C MOV X3, X31
	0x035B7530 BL 0x3232D24
	0x035B7534 MOVZ W1, 0x7D
	0x035B7538 MOV X0, X19
	0x035B753C MOV X2, X31
	0x035B7540 BL 0x3233D30
	0x035B7544 LDP X20, X19, [X31 + 0xB0]
	0x035B7548 LDP X22, X21, [X31 + 0xA0]
	0x035B754C LDP X24, X23, [X31 + 0x90]
	0x035B7550 LDP X26, X25, [X31 + 0x80]
	0x035B7554 LDP X28, X27, [X31 + 0x70]
	0x035B7558 LDP X29, X30, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE2A000
	005 Move W8, [X20+197]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB81000
	012 Move X0, [X0+2064]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+197], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0xB81000
	024 Move X8, [X8+2064]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+32], W0
	034 Move X8, [X19+40]
	035 Move X19, X20
	036 Move [X20+40], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x035B755C ADD X31, X31, 0xC0

ISIL:
	001 Call <get_Children>d__24.System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator, X0
	002 Return X0

