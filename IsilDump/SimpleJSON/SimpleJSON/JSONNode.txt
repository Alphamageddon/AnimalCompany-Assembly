Type: SimpleJSON.JSONNode

Method: SimpleJSON.JSONNodeType get_Tag()

Disassembly:
	

ISIL:
No ISIL was generated
Method: SimpleJSON.JSONNode get_Item(System.Int32 aIndex)

Disassembly:
	0x035AD58C STP X20, X19, [X31 + 0x10]
	0x035AD590 ADRP X20, 0xE33000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Void set_Item(System.Int32 aIndex, SimpleJSON.JSONNode value)

Disassembly:
	0x035AD594 ADRP X21, 0xB47000

ISIL:
	001 Return 

Method: SimpleJSON.JSONNode get_Item(System.String aKey)

Disassembly:
	0x035AD598 LDRB W8, [X20 + 0x4F]
	0x035AD59C LDR X21, [X21 + 0x460]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Void set_Item(System.String aKey, SimpleJSON.JSONNode value)

Disassembly:
	0x035AD5A0 MOV X19, X0

ISIL:
	001 Return 

Method: System.String get_Value()

Disassembly:
	0x035AD5A4 TBNZ X8, 0x0, 0x35AD5BC
	0x035AD5A8 ADRP X0, 0xB47000
	0x035AD5AC LDR X0, [X0 + 0x460]
	0x035AD5B0 BL 0x1C16CF4
	0x035AD5B4 MOVZ W8, 0x1
	0x035AD5B8 STRB W8, [X20 + 0x4F]
	0x035AD5BC LDR X0, [X21]
	0x035AD5C0 LDR W8, [X0 + 0xE0]
	0x035AD5C4 CBNZ W8, 0x35AD5CC
	0x035AD5C8 BL 0x1C16DFC
	0x035AD5CC MOV X0, X19
	0x035AD5D0 MOV X1, X31
	0x035AD5D4 BL 0x35AD170
	0x035AD5D8 TBZ X0, 0x0, 0x35AD5EC
	0x035AD5DC LDP X20, X19, [X31 + 0x10]
	0x035AD5E0 MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE34000
	005 Move X20, 0xB47000
	006 Move W8, [X19+59]
	007 Move X20, [X20+2440]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB47000
	013 Move X0, [X0+2440]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+59], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Void set_Value(System.String value)

Disassembly:
	0x035AD5E4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x035AD5E8 RET
	0x035AD5EC CBZ X19, 0x35AD60C

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsNumber()

Disassembly:
	0x035AD5F0 LDR X8, [X19]
	0x035AD5F4 MOV X0, X19

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsString()

Disassembly:
	0x035AD5F8 LDP X20, X19, [X31 + 0x10]
	0x035AD5FC LDR X2, [X8 + 0x368]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsBoolean()

Disassembly:
	0x035AD600 LDR X1, [X8 + 0x370]
	0x035AD604 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsNull()

Disassembly:
	0x035AD608 BR X2
	0x035AD60C BL 0x1C16F20

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsArray()

Disassembly:
	0x035AD610 SUB X31, X31, 0x30
	0x035AD614 STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsObject()

Disassembly:
	0x035AD618 STP X20, X19, [X31 + 0x20]
	0x035AD61C ADRP X21, 0xE33000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_Inline()

Disassembly:
	0x035AD620 STR X0, [X31 + 0x8]
	0x035AD624 ADRP X20, 0xB47000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void set_Inline(System.Boolean value)

Disassembly:
	0x035AD628 LDRB W8, [X21 + 0x50]

ISIL:
	001 Return 

Method: System.Void Add(System.String aKey, SimpleJSON.JSONNode aItem)

Disassembly:
	0x035AD62C LDR X20, [X20 + 0x460]

ISIL:
	001 Return 

Method: System.Void Add(SimpleJSON.JSONNode aItem)

Disassembly:
	0x035AD630 MOV X19, X0
	0x035AD634 TBNZ X8, 0x0, 0x35AD664
	0x035AD638 ADRP X0, 0xB47000
	0x035AD63C LDR X0, [X0 + 0x460]
	0x035AD640 BL 0x1C16CF4
	0x035AD644 ADRP X0, 0xB70000
	0x035AD648 LDR X0, [X0 + 0x400]
	0x035AD64C BL 0x1C16CF4
	0x035AD650 ADRP X0, 0xB8A000
	0x035AD654 LDR X0, [X0 + 0x650]
	0x035AD658 BL 0x1C16CF4
	0x035AD65C MOVZ W8, 0x1
	0x035AD660 STRB W8, [X21 + 0x50]
	0x035AD664 LDR X0, [X20]
	0x035AD668 LDR W8, [X0 + 0xE0]
	0x035AD66C CBNZ W8, 0x35AD678
	0x035AD670 BL 0x1C16DFC
	0x035AD674 LDR X0, [X20]
	0x035AD678 LDR X8, [X0 + 0xB8]
	0x035AD67C LDRB W8, [X8 + 0x1]
	0x035AD680 CBZ W8, 0x35AD6B8
	0x035AD684 ADRP X19, 0xB8A000
	0x035AD688 LDR X19, [X19 + 0x650]
	0x035AD68C ADD X0, X31, 0x8
	0x035AD690 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE34000
	007 Move X21, 0xB47000
	008 Move W8, [X22+60]
	009 Move X21, [X21+2440]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB47000
	017 Move X0, [X0+2440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+60], W8
	021 Move X8, [X20]
	022 Move X1, [X21]
	023 Move X0, X20
	024 Move X2, X19
	025 Move X4, [X8+632]
	026 Move X3, [X8+640]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 CallNoReturn X4

Method: SimpleJSON.JSONNode Remove(System.String aKey)

Disassembly:
	0x035AD694 BL 0x337C96C
	0x035AD698 LDR X8, [X19]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: SimpleJSON.JSONNode Remove(System.Int32 aIndex)

Disassembly:
	0x035AD69C MOV X19, X0
	0x035AD6A0 MOV X0, X8

ISIL:
	001 Move X0, X31
	002 Return X0

Method: SimpleJSON.JSONNode Remove(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035AD6A4 BL 0x1C16F10
	0x035AD6A8 MOV X1, X19

ISIL:
	001 Move X0, X1
	002 Return X0

Method: System.Void Clear()

Disassembly:
	0x035AD6AC MOV X20, X0

ISIL:
	001 Return 

Method: SimpleJSON.JSONNode Clone()

Disassembly:
	0x035AD6B0 BL 0x35ACFF8
	0x035AD6B4 B 0x35AD6D4

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<SimpleJSON.JSONNode> get_Children()

Disassembly:
	0x035AD6B8 ADRP X8, 0xB70000
	0x035AD6BC LDR X8, [X8 + 0x400]
	0x035AD6C0 LDR X0, [X8]
	0x035AD6C4 BL 0x1C16F10
	0x035AD6C8 SCVTF D0, X19
	0x035AD6CC MOV X20, X0
	0x035AD6D0 BL 0x35AD340
	0x035AD6D4 MOV X0, X20
	0x035AD6D8 LDP X20, X19, [X31 + 0x20]
	0x035AD6DC LDP X30, X21, [X31 + 0x10]
	0x035AD6E0 ADD X31, X31, 0x30
	0x035AD6E4 RET
	0x035AD6E8 STP X30, X21, [X31 - 0x20]!
	0x035AD6EC STP X20, X19, [X31 + 0x10]
	0x035AD6F0 ADRP X20, 0xE33000
	0x035AD6F4 ADRP X21, 0xB47000
	0x035AD6F8 LDRB W8, [X20 + 0x51]
	0x035AD6FC LDR X21, [X21 + 0x460]
	0x035AD700 MOV X19, X0
	0x035AD704 TBNZ X8, 0x0, 0x35AD71C
	0x035AD708 ADRP X0, 0xB47000
	0x035AD70C LDR X0, [X0 + 0x460]
	0x035AD710 BL 0x1C16CF4
	0x035AD714 MOVZ W8, 0x1
	0x035AD718 STRB W8, [X20 + 0x51]
	0x035AD71C LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE34000
	005 Move X20, 0xB8B000
	006 Move W8, [X19+61]
	007 Move X20, [X20+1584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB8B000
	013 Move X0, [X0+1584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+61], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W8, TEMP
	025 Move X0, X31
	026 Move [X19+16], W8
	027 Call Environment.get_CurrentManagedThreadId
	028 Move [X19+32], W0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Collections.Generic.IEnumerable`1<SimpleJSON.JSONNode> get_DeepChildren()

Disassembly:
	0x035AD754 MOV X0, X19
	0x035AD758 LDP X20, X19, [X31 + 0x10]
	0x035AD75C LDR X2, [X8 + 0x3C8]
	0x035AD760 LDR X1, [X8 + 0x3D0]
	0x035AD764 LDP X30, X21, [X31], #0x20
	0x035AD768 BR X2
	0x035AD76C BL 0x1C16F20
	0x035AD770 SUB X31, X31, 0x30
	0x035AD774 STP X30, X21, [X31 + 0x10]
	0x035AD778 STP X20, X19, [X31 + 0x20]
	0x035AD77C ADRP X21, 0xE33000
	0x035AD780 STR X0, [X31 + 0x8]
	0x035AD784 ADRP X20, 0xB47000
	0x035AD788 LDRB W8, [X21 + 0x52]
	0x035AD78C LDR X20, [X20 + 0x460]
	0x035AD790 MOV X19, X0
	0x035AD794 TBNZ X8, 0x0, 0x35AD7C4
	0x035AD798 ADRP X0, 0xB47000
	0x035AD79C LDR X0, [X0 + 0x460]
	0x035AD7A0 BL 0x1C16CF4
	0x035AD7A4 ADRP X0, 0xB70000
	0x035AD7A8 LDR X0, [X0 + 0x400]
	0x035AD7AC BL 0x1C16CF4
	0x035AD7B0 ADRP X0, 0xB8A000
	0x035AD7B4 LDR X0, [X0 + 0x650]
	0x035AD7B8 BL 0x1C16CF4
	0x035AD7BC MOVZ W8, 0x1
	0x035AD7C0 STRB W8, [X21 + 0x52]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE34000
	006 Move X21, 0xB8B000
	007 Move W8, [X20+62]
	008 Move X21, [X21+1592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB8B000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+62], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move [X20+40], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Boolean HasKey(System.String aKey)

Disassembly:
	0x035AD7F8 LDR X8, [X19]
	0x035AD7FC MOV X19, X0

ISIL:
	001 Move W0, W31
	002 Return X0

Method: SimpleJSON.JSONNode GetValueOrDefault(System.String aKey, SimpleJSON.JSONNode aDefault)

Disassembly:
	0x035AD800 MOV X0, X8
	0x035AD804 BL 0x1C16F10

ISIL:
	001 Move X0, X2
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x035AD808 MOV X1, X19
	0x035AD80C MOV X20, X0
	0x035AD810 BL 0x35ACFF8
	0x035AD814 B 0x35AD834
	0x035AD818 ADRP X8, 0xB70000
	0x035AD81C LDR X8, [X8 + 0x400]
	0x035AD820 LDR X0, [X8]
	0x035AD824 BL 0x1C16F10
	0x035AD828 UCVTF D0, X19
	0x035AD82C MOV X20, X0
	0x035AD830 BL 0x35AD340
	0x035AD834 MOV X0, X20
	0x035AD838 LDP X20, X19, [X31 + 0x20]
	0x035AD83C LDP X30, X21, [X31 + 0x10]
	0x035AD840 ADD X31, X31, 0x30
	0x035AD844 RET
	0x035AD848 STP X30, X21, [X31 - 0x20]!
	0x035AD84C STP X20, X19, [X31 + 0x10]
	0x035AD850 ADRP X20, 0xE33000
	0x035AD854 ADRP X21, 0xB47000
	0x035AD858 LDRB W8, [X20 + 0x53]
	0x035AD85C LDR X21, [X21 + 0x460]
	0x035AD860 MOV X19, X0
	0x035AD864 TBNZ X8, 0x0, 0x35AD87C
	0x035AD868 ADRP X0, 0xB47000
	0x035AD86C LDR X0, [X0 + 0x460]
	0x035AD870 BL 0x1C16CF4
	0x035AD874 MOVZ W8, 0x1
	0x035AD878 STRB W8, [X20 + 0x53]
	0x035AD87C LDR X0, [X21]
	0x035AD880 LDR W8, [X0 + 0xE0]
	0x035AD884 CBNZ W8, 0x35AD88C
	0x035AD888 BL 0x1C16DFC
	0x035AD88C MOV X0, X19
	0x035AD890 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE34000
	006 Move X21, 0xB47000
	007 Move W8, [X20+63]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB47000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+63], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call StringBuilder..ctor, X0
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X1, X20
	027 Move W2, W31
	028 Move X9, [X8+808]
	029 Move X5, [X8+816]
	030 Move W3, W31
	031 Move W4, W31
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Compare X20, 0
	034 JumpIfEqual {44}
	035 Move X8, [X20]
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X2, [X8+360]
	040 Move X1, [X8+368]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 CallNoReturn X2
	044 Call 0x1C17F20

Method: System.String ToString(System.Int32 aIndent)

Disassembly:
	0x035AD894 BL 0x35AD170
	0x035AD898 TBZ X0, 0x0, 0x35AD8AC
	0x035AD89C LDP X20, X19, [X31 + 0x10]
	0x035AD8A0 MOV X0, X31
	0x035AD8A4 LDP X30, X21, [X31], #0x20
	0x035AD8A8 RET
	0x035AD8AC CBZ X19, 0x35AD8CC
	0x035AD8B0 LDR X8, [X19]
	0x035AD8B4 MOV X0, X19
	0x035AD8B8 LDP X20, X19, [X31 + 0x10]
	0x035AD8BC LDR X2, [X8 + 0x3E8]
	0x035AD8C0 LDR X1, [X8 + 0x3F0]
	0x035AD8C4 LDP X30, X21, [X31], #0x20
	0x035AD8C8 BR X2
	0x035AD8CC BL 0x1C16F20
	0x035AD8D0 STP X30, X21, [X31 - 0x20]!
	0x035AD8D4 STP X20, X19, [X31 + 0x10]
	0x035AD8D8 ADRP X20, 0xE33000
	0x035AD8DC ADRP X21, 0xB8A000
	0x035AD8E0 LDRB W8, [X20 + 0x54]
	0x035AD8E4 LDR X21, [X21 + 0x660]
	0x035AD8E8 MOV W19, W0
	0x035AD8EC TBNZ X8, 0x0, 0x35AD904
	0x035AD8F0 ADRP X0, 0xB8A000
	0x035AD8F4 LDR X0, [X0 + 0x660]
	0x035AD8F8 BL 0x1C16CF4
	0x035AD8FC MOVZ W8, 0x1
	0x035AD900 STRB W8, [X20 + 0x54]
	0x035AD904 LDR X0, [X21]
	0x035AD908 BL 0x1C16F10
	0x035AD90C AND W1, W19, 0x1
	0x035AD910 MOV X20, X0
	0x035AD914 BL 0x35AD928
	0x035AD918 MOV X0, X20
	0x035AD91C LDP X20, X19, [X31 + 0x10]
	0x035AD920 LDP X30, X21, [X31], #0x20
	0x035AD924 RET
	0x035AD928 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE34000
	007 Move X22, 0xB47000
	008 Move W8, [X21+64]
	009 Move X22, [X22+2288]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB47000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+64], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call StringBuilder..ctor, X0
	026 Move X8, [X20]
	027 Move W4, 1
	028 Move X0, X20
	029 Move X1, X21
	030 Move X9, [X8+808]
	031 Move X5, [X8+816]
	032 Move W2, W31
	033 Move W3, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X21, 0
	036 JumpIfEqual {47}
	037 Move X8, [X21]
	038 Move X0, X21
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X2, [X8+360]
	044 Move X1, [X8+368]
	045 Move X30, [X31+48]
	046 CallNoReturn X2
	047 Call 0x1C17F20

Method: System.Void WriteToStringBuilder(System.Text.StringBuilder aSB, System.Int32 aIndent, System.Int32 aIndentInc, SimpleJSON.JSONTextMode aMode)

Disassembly:
	

ISIL:
No ISIL was generated
Method: SimpleJSON.JSONNode/Enumerator GetEnumerator()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<System.String, SimpleJSON.JSONNode>> get_Linq()

Disassembly:
	0x035AD92C STP X22, X21, [X31 + 0x10]
	0x035AD930 STP X20, X19, [X31 + 0x20]
	0x035AD934 ADRP X21, 0xE33000
	0x035AD938 ADRP X22, 0xB47000
	0x035AD93C LDRB W8, [X21 + 0xEA]
	0x035AD940 LDR X22, [X22 + 0x460]
	0x035AD944 MOV W20, W1
	0x035AD948 MOV X19, X0
	0x035AD94C TBNZ X8, 0x0, 0x35AD964
	0x035AD950 ADRP X0, 0xB47000
	0x035AD954 LDR X0, [X0 + 0x460]
	0x035AD958 BL 0x1C16CF4
	0x035AD95C MOVZ W8, 0x1
	0x035AD960 STRB W8, [X21 + 0xEA]
	0x035AD964 LDR X0, [X22]
	0x035AD968 LDR W8, [X0 + 0xE0]
	0x035AD96C CBNZ W8, 0x35AD974
	0x035AD970 BL 0x1C16DFC
	0x035AD974 MOV X0, X19
	0x035AD978 MOV X1, X31
	0x035AD97C AND W20, W20, 0x1
	0x035AD980 BL 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE34000
	006 Move X21, 0xB8B000
	007 Move W8, [X20+65]
	008 Move X21, [X21+1600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB8B000
	015 Move X0, [X0+1600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+65], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call LinqEnumerator..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: SimpleJSON.JSONNode/KeyEnumerator get_Keys()

Disassembly:
	0x035ADA48 STRB W8, [X20 + 0x56]
	0x035ADA4C MOV X0, X19
	0x035ADA50 LDP X20, X19, [X31 + 0x10]
	0x035ADA54 LDR X30, [X31], #0x20
	0x035ADA58 RET
	0x035ADA5C STR X30, [X31 - 0x30]!
	0x035ADA60 STP X22, X21, [X31 + 0x10]
	0x035ADA64 STP X20, X19, [X31 + 0x20]
	0x035ADA68 ADRP X21, 0xE33000
	0x035ADA6C ADRP X22, 0xB47000
	0x035ADA70 LDRB W8, [X21 + 0x58]
	0x035ADA74 LDR X22, [X22 + 0x460]
	0x035ADA78 MOV X19, X1
	0x035ADA7C MOV X20, X0
	0x035ADA80 TBNZ X8, 0x0, 0x35ADA98

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 Move [X31+88], X19
	004 Move X9, [X0]
	005 Move X19, X8
	006 Add X8, X31, 8
	007 Move X10, [X9+824]
	008 Move X1, [X9+832]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Add X1, X31, 8
	011 Move W2, 72
	012 Move X0, X19
	013 Call 0x3EB2AC0
	014 Move X30, [X31+80]
	015 Move X19, [X31+88]
	016 Add X31, X31, 96
	017 Return X0

Method: SimpleJSON.JSONNode/ValueEnumerator get_Values()

Disassembly:
	0x035ADA84 ADRP X0, 0xB47000
	0x035ADA88 LDR X0, [X0 + 0x460]
	0x035ADA8C BL 0x1C16CF4
	0x035ADA90 MOVZ W8, 0x1
	0x035ADA94 STRB W8, [X21 + 0x58]
	0x035ADA98 LDR X0, [X22]
	0x035ADA9C LDR W8, [X0 + 0xE0]
	0x035ADAA0 CBNZ W8, 0x35ADAA8
	0x035ADAA4 BL 0x1C16DFC
	0x035ADAA8 MOV X0, X20
	0x035ADAAC MOV X1, X19
	0x035ADAB0 BL 0x35AD170
	0x035ADAB4 LDP X20, X19, [X31 + 0x20]
	0x035ADAB8 LDP X22, X21, [X31 + 0x10]
	0x035ADABC ORN W8, W31, W0, 0x0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 Move [X31+88], X19
	004 Move X9, [X0]
	005 Move X19, X8
	006 Add X8, X31, 8
	007 Move X10, [X9+824]
	008 Move X1, [X9+832]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Add X1, X31, 8
	011 Move W2, 72
	012 Move X0, X19
	013 Call 0x3EB2AC0
	014 Move X30, [X31+80]
	015 Move X19, [X31+88]
	016 Add X31, X31, 96
	017 Return X0

Method: System.Double get_AsDouble()

Disassembly:
	0x035ADAC0 AND W0, W8, 0x1
	0x035ADAC4 LDR X30, [X31], #0x30
	0x035ADAC8 RET
	0x035ADACC CMP X0, X1
	0x035ADAD0 CSET W0, EQ
	0x035ADAD4 RET
	0x035ADAD8 MOV X1, X31
	0x035ADADC B 0x33CB4E0
	0x035ADAE0 STR X30, [X31 - 0x20]!
	0x035ADAE4 STP X20, X19, [X31 + 0x10]
	0x035ADAE8 ADRP X19, 0xE33000
	0x035ADAEC ADRP X20, 0xB47000
	0x035ADAF0 LDRB W8, [X19 + 0x59]
	0x035ADAF4 LDR X20, [X20 + 0x460]
	0x035ADAF8 TBNZ X8, 0x0, 0x35ADB1C
	0x035ADAFC ADRP X0, 0xB47000
	0x035ADB00 LDR X0, [X0 + 0x460]
	0x035ADB04 BL 0x1C16CF4
	0x035ADB08 ADRP X0, 0xB46000
	0x035ADB0C LDR X0, [X0 + 0x8F0]
	0x035ADB10 BL 0x1C16CF4
	0x035ADB14 MOVZ W8, 0x1
	0x035ADB18 STRB W8, [X19 + 0x59]
	0x035ADB1C LDR X0, [X20]
	0x035ADB20 LDR W8, [X0 + 0xE0]
	0x035ADB24 CBNZ W8, 0x35ADB30
	0x035ADB28 BL 0x1C16DFC
	0x035ADB2C LDR X0, [X20]
	0x035ADB30 BL 0x1C16D0C
	0x035ADB34 LDR X8, [X0]
	0x035ADB38 CBNZ X8, 0x35ADB7C
	0x035ADB3C ADRP X8, 0xB46000
	0x035ADB40 LDR X8, [X8 + 0x8F0]
	0x035ADB44 LDR X0, [X8]
	0x035ADB48 BL 0x1C16F10
	0x035ADB4C MOV X1, X31
	0x035ADB50 MOV X19, X0
	0x035ADB54 BL 0x3231AC4
	0x035ADB58 LDR X0, [X20]
	0x035ADB5C LDR W8, [X0 + 0xE0]
	0x035ADB60 CBNZ W8, 0x35ADB6C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE34000
	007 Move X20, 0xB49000
	008 Move W8, [X21+66]
	009 Move X20, [X20+3144]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB49000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+66], W8
	020 Move [X31+8], X31
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+456]
	024 Move X1, [X8+464]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X20]
	027 Move X19, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Call CultureInfo.get_InvariantCulture
	035 Move X2, X0
	036 Add X3, X31, 8
	037 Move W1, 167
	038 Move X0, X19
	039 Move X4, X31
	040 Call Double.TryParse, X0, X1, X2, X3
	041 Move V0, [X31+8]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 And W31, W0, 1
	047 Move D1, X31
	048 NotImplemented "Instruction FCSEL not yet implemented."
	049 Add X31, X31, 48
	050 Return V0

Method: System.Void set_AsDouble(System.Double value)

Disassembly:
	0x035ADB64 BL 0x1C16DFC
	0x035ADB68 LDR X0, [X20]
	0x035ADB6C BL 0x1C16D0C
	0x035ADB70 STR X19, [X0]
	0x035ADB74 LDR X0, [X20]
	0x035ADB78 BL 0x1C16D0C
	0x035ADB7C LDR X0, [X20]
	0x035ADB80 LDR W8, [X0 + 0xE0]
	0x035ADB84 CBNZ W8, 0x35ADB90
	0x035ADB88 BL 0x1C16DFC
	0x035ADB8C LDR X0, [X20]
	0x035ADB90 BL 0x1C16D0C
	0x035ADB94 LDR X0, [X0]
	0x035ADB98 LDP X20, X19, [X31 + 0x10]
	0x035ADB9C LDR X30, [X31], #0x20
	0x035ADBA0 RET
	0x035ADBA4 SUB X31, X31, 0x70
	0x035ADBA8 STP X29, X30, [X31 + 0x10]
	0x035ADBAC STP X28, X27, [X31 + 0x20]
	0x035ADBB0 STP X26, X25, [X31 + 0x30]
	0x035ADBB4 STP X24, X23, [X31 + 0x40]
	0x035ADBB8 STP X22, X21, [X31 + 0x50]
	0x035ADBBC STP X20, X19, [X31 + 0x60]
	0x035ADBC0 ADRP X20, 0xE33000
	0x035ADBC4 ADRP X21, 0xB47000
	0x035ADBC8 LDRB W8, [X20 + 0x5A]
	0x035ADBCC LDR X21, [X21 + 0x460]
	0x035ADBD0 MOV X19, X0
	0x035ADBD4 TBNZ X8, 0x0, 0x35ADC58
	0x035ADBD8 ADRP X0, 0xB47000
	0x035ADBDC LDR X0, [X0 + 0x460]
	0x035ADBE0 BL 0x1C16CF4
	0x035ADBE4 ADRP X0, 0xB73000
	0x035ADBE8 LDR X0, [X0 + 0xB20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE34000
	007 Move [X31+8], D0
	008 Move X21, 0xB49000
	009 Move W8, [X20+67]
	010 Move X21, [X21+3144]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB49000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+67], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call CultureInfo.get_InvariantCulture
	028 Move X1, X0
	029 Add X0, X31, 8
	030 Move X2, X31
	031 Call Double.ToString, X0, X1
	032 Move X8, [X19]
	033 Move X1, X0
	034 Move X0, X19
	035 Move X9, [X8+472]
	036 Move X2, [X8+480]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 Return 

Method: System.Int32 get_AsInt()

Disassembly:
	0x035ADBEC BL 0x1C16CF4
	0x035ADBF0 ADRP X0, 0xB73000
	0x035ADBF4 LDR X0, [X0 + 0xB28]
	0x035ADBF8 BL 0x1C16CF4
	0x035ADBFC ADRP X0, 0xB73000
	0x035ADC00 LDR X0, [X0 + 0xB30]
	0x035ADC04 BL 0x1C16CF4
	0x035ADC08 ADRP X0, 0xB7A000
	0x035ADC0C LDR X0, [X0 + 0x810]
	0x035ADC10 BL 0x1C16CF4
	0x035ADC14 ADRP X0, 0xB73000
	0x035ADC18 LDR X0, [X0 + 0xB38]
	0x035ADC1C BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+840]
	004 Move X1, [X8+848]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move X8, 0x7FF00000
	007 Move D1, X8
	008 NotImplemented "Instruction FCVTZS not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move W8, 0x80000000
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 Move X30, [X31+16]
	013 Return X0

Method: System.Void set_AsInt(System.Int32 value)

Disassembly:
	0x035ADC20 ADRP X0, 0xB73000
	0x035ADC24 LDR X0, [X0 + 0xB40]
	0x035ADC28 BL 0x1C16CF4
	0x035ADC2C ADRP X0, 0xB7C000
	0x035ADC30 LDR X0, [X0 + 0xB00]
	0x035ADC34 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction SCVTF not yet implemented."
	003 Move X2, [X8+856]
	004 Move X8, [X8+864]
	005 Move X1, X8
	006 CallNoReturn X2

Method: System.Single get_AsFloat()

Disassembly:
	0x035ADC38 ADRP X0, 0xB8A000
	0x035ADC3C LDR X0, [X0 + 0x668]
	0x035ADC40 BL 0x1C16CF4
	0x035ADC44 ADRP X0, 0xB7A000
	0x035ADC48 LDR X0, [X0 + 0x4A8]
	0x035ADC4C BL 0x1C16CF4
	0x035ADC50 MOVZ W8, 0x1
	0x035ADC54 STRB W8, [X20 + 0x5A]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+840]
	004 Move X1, [X8+848]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 NotImplemented "Instruction INVALID not yet implemented."
	007 Move X30, [X31+16]
	008 Return V0

Method: System.Void set_AsFloat(System.Single value)

Disassembly:
	0x035ADC58 LDR X0, [X21]
	0x035ADC5C STRH W31, [X31 + 0xC]
	0x035ADC60 LDR W8, [X0 + 0xE0]
	0x035ADC64 CBNZ W8, 0x35ADC6C
	0x035ADC68 BL 0x1C16DFC

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction FCVT not yet implemented."
	003 Move X2, [X8+856]
	004 Move X1, [X8+864]
	005 CallNoReturn X2

Method: System.Boolean get_AsBool()

Disassembly:
	0x035ADC6C BL 0x35ADAE0
	0x035ADC70 CBZ X0, 0x35ADE90
	0x035ADC74 MOV W1, W31
	0x035ADC78 MOV X2, X31
	0x035ADC7C MOV X20, X0
	0x035ADC80 BL 0x3232ADC
	0x035ADC84 MOV X0, X20
	0x035ADC88 MOV X1, X31
	0x035ADC8C BL 0x3232478
	0x035ADC90 CBZ X19, 0x35ADE90
	0x035ADC94 LDRSW X8, [X19 + 0x10]
	0x035ADC98 MOVZ W9, 0x6667
	0x035ADC9C MOVK W9, 0x66660000
	0x035ADCA0 MUL X9, X8, X9
	0x035ADCA4 UBFM X10, X9, 0x3F, 0x3F
	0x035ADCA8 SBFM X9, X9, 0x22, 0x3F
	0x035ADCAC ADD W9, W9, W10
	0x035ADCB0 ADD W1, W9, W8
	0x035ADCB4 CMP W0, W1
	0x035ADCB8 B.GE 0x35ADCCC
	0x035ADCBC MOV X0, X20
	0x035ADCC0 MOV X2, X31
	0x035ADCC4 BL 0x323249C
	0x035ADCC8 LDR W8, [X19 + 0x10]
	0x035ADCCC CMP W8, 0x1
	0x035ADCD0 B.LT 0x35ADE48
	0x035ADCD4 ADRP X28, 0xB73000
	0x035ADCD8 ADRP X29, 0xB73000
	0x035ADCDC ADRP X23, 0xB73000
	0x035ADCE0 ADRP X24, 0xB73000
	0x035ADCE4 ADRP X25, 0xB73000
	0x035ADCE8 ADRP X27, 0xB47000
	0x035ADCEC LDR X28, [X28 + 0xB20]
	0x035ADCF0 LDR X29, [X29 + 0xB30]
	0x035ADCF4 LDR X23, [X23 + 0xB28]
	0x035ADCF8 LDR X24, [X24 + 0xB38]
	0x035ADCFC LDR X25, [X25 + 0xB40]
	0x035ADD00 LDR X27, [X27 + 0x460]
	0x035ADD04 ADRP X26, 0xFFFFFFFFFD5E9000
	0x035ADD08 MOV W21, W31
	0x035ADD0C ADD X26, X26, 0xDEE
	0x035ADD10 MOV X0, X19
	0x035ADD14 MOV W1, W21
	0x035ADD18 MOV X2, X31
	0x035ADD1C BL 0x3222A1C
	0x035ADD20 AND W8, W0, 0xFFFF

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE34000
	007 Move X20, 0xB47000
	008 Move W8, [X21+68]
	009 Move X20, [X20+2904]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB47000
	016 Move X0, [X0+2904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+68], W8
	020 Move [X31+12], W31
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+456]
	024 Move X1, [X8+464]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X20]
	027 Move X20, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Add X1, X31, 12
	034 Move X0, X20
	035 Move X2, X31
	036 Call Boolean.TryParse, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {44}
	041 Move W8, [X31+12]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Move X8, [X19]
	045 Move X0, X19
	046 Move X9, [X8+456]
	047 Move X1, [X8+464]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X1, X31
	050 Call String.IsNullOrEmpty, X0
	051 Xor W8, W0, 1
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 And W0, W8, 1
	057 Add X31, X31, 48
	058 Return X0

Method: System.Void set_AsBool(System.Boolean value)

Disassembly:
	0x035ADD24 SUB W9, W8, 0x8
	0x035ADD28 MOV W22, W0
	0x035ADD2C CMP W9, 0x5
	0x035ADD30 B.HI 0x35ADD4C
	0x035ADD34 ADR X8, 0x10
	0x035ADD38 LDRB W10, [X26, X9, LSL]
	0x035ADD3C ADD X8, X8, X10, 0x2, LSL
	0x035ADD40 BR X8
	0x035ADD44 LDR X1, [X28]
	0x035ADD48 B 0x35ADE14
	0x035ADD4C CMP W8, 0x22
	0x035ADD50 B.EQ 0x35ADE08
	0x035ADD54 CMP W8, 0x5C
	0x035ADD58 B.NE 0x35ADD68
	0x035ADD5C ADRP X8, 0xB7A000
	0x035ADD60 LDR X8, [X8 + 0x4A8]
	0x035ADD64 B 0x35ADE10
	0x035ADD68 AND W8, W22, 0xFFFF
	0x035ADD6C CMP W8, 0x20
	0x035ADD70 B.CC 0x35ADDA0
	0x035ADD74 LDR X0, [X27]
	0x035ADD78 LDR W8, [X0 + 0xE0]
	0x035ADD7C CBNZ W8, 0x35ADD88
	0x035ADD80 BL 0x1C16DFC
	0x035ADD84 LDR X0, [X27]
	0x035ADD88 AND W8, W22, 0xFFFF
	0x035ADD8C CMP W8, 0x80
	0x035ADD90 B.CC 0x35ADE34
	0x035ADD94 LDR X8, [X0 + 0xB8]
	0x035ADD98 LDRB W8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE34000
	006 Move W8, [X21+69]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB51000
	014 Move X0, [X0+4088]
	015 Call 0x1C17CF4
	016 Move X0, 0xB52000
	017 Move X0, [X0]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+69], W8
	021 Compare X20, 0
	022 JumpIfEqual {39}
	023 Move X8, 0xB52000
	024 Move X9, 0xB51000
	025 Move X8, [X8]
	026 Move X9, [X9+4088]
	027 Move X10, [X20]
	028 And W31, W19, 1
	029 Move X0, X20
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X1, [X8]
	032 Move X3, [X10+472]
	033 Move X2, [X10+480]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 CallNoReturn X3
	039 Call 0x1C17F20

Method: System.Int64 get_AsLong()

Disassembly:
	0x035ADD9C CBZ W8, 0x35ADE34
	0x035ADDA0 ADRP X8, 0xB8A000
	0x035ADDA4 LDR X8, [X8 + 0x668]
	0x035ADDA8 MOV X0, X20
	0x035ADDAC MOV X2, X31
	0x035ADDB0 STRH W22, [X31 + 0xC]
	0x035ADDB4 LDR X1, [X8]
	0x035ADDB8 BL 0x32333E0
	0x035ADDBC ADRP X8, 0xB7C000
	0x035ADDC0 LDR X8, [X8 + 0xB00]
	0x035ADDC4 MOV X22, X0
	0x035ADDC8 ADD X0, X31, 0xC
	0x035ADDCC MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X8, [X0]
	004 Move X9, [X8+456]
	005 Move X1, [X8+464]
	006 NotImplemented "Instruction BLR not yet implemented."
	007 Add X1, X31, 8
	008 Move X2, X31
	009 Call Int64.TryParse, X0, X1
	010 Move X8, [X31+8]
	011 And W31, W0, 1
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move X30, [X31+16]
	014 Return X0

Method: System.Void set_AsLong(System.Int64 value)

Disassembly:
	0x035ADDD0 LDR X1, [X8]
	0x035ADDD4 BL 0x3398E18
	0x035ADDD8 CBZ X22, 0x35ADE90
	0x035ADDDC MOV X1, X0
	0x035ADDE0 MOV X0, X22
	0x035ADDE4 B 0x35ADE18
	0x035ADDE8 LDR X1, [X29]
	0x035ADDEC B 0x35ADE14
	0x035ADDF0 LDR X1, [X23]
	0x035ADDF4 B 0x35ADE14
	0x035ADDF8 LDR X1, [X24]
	0x035ADDFC B 0x35ADE14
	0x035ADE00 LDR X1, [X25]
	0x035ADE04 B 0x35ADE14
	0x035ADE08 ADRP X8, 0xB7A000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move [X31+8], X1
	006 Add X0, X31, 8
	007 Move X1, X31
	008 Call Int64.ToString, X0
	009 Move X8, [X19]
	010 Move X1, X0
	011 Move X0, X19
	012 Move X9, [X8+472]
	013 Move X2, [X8+480]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Add X31, X31, 32
	018 Return 

Method: System.UInt64 get_AsULong()

Disassembly:
	0x035ADE0C LDR X8, [X8 + 0x810]
	0x035ADE10 LDR X1, [X8]
	0x035ADE14 MOV X0, X20
	0x035ADE18 MOV X2, X31
	0x035ADE1C BL 0x32333E0
	0x035ADE20 LDR W8, [X19 + 0x10]
	0x035ADE24 ADD W21, W21, 0x1
	0x035ADE28 CMP W21, W8
	0x035ADE2C B.LT 0x35ADD10
	0x035ADE30 B 0x35ADE48
	0x035ADE34 MOV X0, X20
	0x035ADE38 MOV W1, W22
	0x035ADE3C MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X8, [X0]
	004 Move X9, [X8+456]
	005 Move X1, [X8+464]
	006 NotImplemented "Instruction BLR not yet implemented."
	007 Add X1, X31, 8
	008 Move X2, X31
	009 Call UInt64.TryParse, X0, X1
	010 Move X8, [X31+8]
	011 And W31, W0, 1
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move X30, [X31+16]
	014 Return X0

Method: System.Void set_AsULong(System.UInt64 value)

Disassembly:
	0x035ADE40 BL 0x3233D30
	0x035ADE44 B 0x35ADE20
	0x035ADE48 LDR X8, [X20]
	0x035ADE4C MOV X0, X20
	0x035ADE50 LDP X9, X1, [X8 + 0x168]
	0x035ADE54 BLR X9
	0x035ADE58 MOV X19, X0
	0x035ADE5C MOV X0, X20
	0x035ADE60 MOV W1, W31
	0x035ADE64 MOV X2, X31
	0x035ADE68 BL 0x3232ADC
	0x035ADE6C MOV X0, X19
	0x035ADE70 LDP X20, X19, [X31 + 0x60]
	0x035ADE74 LDP X22, X21, [X31 + 0x50]
	0x035ADE78 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move [X31+8], X1
	006 Add X0, X31, 8
	007 Move X1, X31
	008 Call UInt64.ToString, X0
	009 Move X8, [X19]
	010 Move X1, X0
	011 Move X0, X19
	012 Move X9, [X8+472]
	013 Move X2, [X8+480]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Add X31, X31, 32
	018 Return 

Method: SimpleJSON.JSONArray get_AsArray()

Disassembly:
	0x035ADE7C LDP X26, X25, [X31 + 0x30]
	0x035ADE80 LDP X28, X27, [X31 + 0x20]
	0x035ADE84 LDP X29, X30, [X31 + 0x10]
	0x035ADE88 ADD X31, X31, 0x70
	0x035ADE8C RET
	0x035ADE90 BL 0x1C16F20
	0x035ADE94 STR D8, [X31 - 0x30]!
	0x035ADE98 STP X30, X21, [X31 + 0x10]
	0x035ADE9C STP X20, X19, [X31 + 0x20]
	0x035ADEA0 ADRP X21, 0xE33000
	0x035ADEA4 LDRB W8, [X21 + 0x5B]
	0x035ADEA8 MOV W20, W1
	0x035ADEAC MOV X19, X0
	0x035ADEB0 TBNZ X8, 0x0, 0x35ADF04
	0x035ADEB4 ADRP X0, 0xB48000
	0x035ADEB8 LDR X0, [X0 + 0xC48]
	0x035ADEBC BL 0x1C16CF4
	0x035ADEC0 ADRP X0, 0xB47000
	0x035ADEC4 LDR X0, [X0 + 0x460]
	0x035ADEC8 BL 0x1C16CF4
	0x035ADECC ADRP X0, 0xB8A000
	0x035ADED0 LDR X0, [X0 + 0x648]
	0x035ADED4 BL 0x1C16CF4
	0x035ADED8 ADRP X0, 0xB46000
	0x035ADEDC LDR X0, [X0 + 0x830]
	0x035ADEE0 BL 0x1C16CF4
	0x035ADEE4 ADRP X0, 0xB50000
	0x035ADEE8 LDR X0, [X0 + 0xFF8]
	0x035ADEEC BL 0x1C16CF4
	0x035ADEF0 ADRP X0, 0xB51000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE34000
	005 Move W8, [X20+70]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB71000
	012 Move X0, [X0+880]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+70], W8
	016 Compare X19, 0
	017 JumpIfEqual {25}
	018 Move X8, 0xB71000
	019 Move X8, [X8+880]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 Move W11, [X9+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X31
	026 Move X9, [X9+200]
	027 Add X9, X9, X10
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: SimpleJSON.JSONObject get_AsObject()

Disassembly:
	0x035ADEF4 LDR X0, [X0]
	0x035ADEF8 BL 0x1C16CF4
	0x035ADEFC MOVZ W8, 0x1
	0x035ADF00 STRB W8, [X21 + 0x5B]
	0x035ADF04 STR X31, [X31 + 0x8]
	0x035ADF08 TBZ X20, 0x0, 0x35ADF18
	0x035ADF0C ADRP X8, 0xB47000
	0x035ADF10 LDR X8, [X8 + 0x460]
	0x035ADF14 B 0x35ADF8C
	0x035ADF18 CBZ X19, 0x35AE078
	0x035ADF1C LDR W8, [X19 + 0x10]
	0x035ADF20 CMP W8, 0x5
	0x035ADF24 B.LE 0x35ADFA8
	0x035ADF28 ADRP X8, 0xB48000
	0x035ADF2C LDR X8, [X8 + 0xC48]
	0x035ADF30 LDR X0, [X8]
	0x035ADF34 LDR W8, [X0 + 0xE0]
	0x035ADF38 CBNZ W8, 0x35ADF40
	0x035ADF3C BL 0x1C16DFC
	0x035ADF40 MOV X0, X31
	0x035ADF44 BL 0x3338524
	0x035ADF48 MOV X2, X0
	0x035ADF4C ADD X3, X31, 0x8
	0x035ADF50 MOVZ W1, 0xA7
	0x035ADF54 MOV X0, X19
	0x035ADF58 MOV X4, X31
	0x035ADF5C BL 0x3366A70
	0x035ADF60 ADRP X8, 0xB47000
	0x035ADF64 LDR X8, [X8 + 0x460]
	0x035ADF68 TBZ X0, 0x0, 0x35ADF8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE34000
	005 Move W8, [X20+71]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB6F000
	012 Move X0, [X0+3008]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+71], W8
	016 Compare X19, 0
	017 JumpIfEqual {25}
	018 Move X8, 0xB6F000
	019 Move X8, [X8+3008]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 Move W11, [X9+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X31
	026 Move X9, [X9+200]
	027 Add X9, X9, X10
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: SimpleJSON.JSONNode op_Implicit(System.String s)

Disassembly:
	0x035ADF6C LDR X0, [X8]
	0x035ADF70 LDR V8, [X31 + 0x8]
	0x035ADF74 LDR W8, [X0 + 0xE0]
	0x035ADF78 CBNZ W8, 0x35ADF80
	0x035ADF7C BL 0x1C16DFC
	0x035ADF80 MOV V0.16B, V8.16B
	0x035ADF84 BL 0x35AD2E0
	0x035ADF88 B 0x35AE02C
	0x035ADF8C LDR X0, [X8]
	0x035ADF90 LDR W8, [X0 + 0xE0]
	0x035ADF94 CBNZ W8, 0x35ADF9C
	0x035ADF98 BL 0x1C16DFC
	0x035ADF9C MOV X0, X19
	0x035ADFA0 BL 0x35ACF6C
	0x035ADFA4 B 0x35AE02C
	0x035ADFA8 MOV X0, X19
	0x035ADFAC MOV X1, X31
	0x035ADFB0 BL 0x322B5E4
	0x035ADFB4 ADRP X8, 0xB50000
	0x035ADFB8 LDR X8, [X8 + 0xFF8]
	0x035ADFBC MOV X2, X31
	0x035ADFC0 MOV X20, X0
	0x035ADFC4 LDR X1, [X8]
	0x035ADFC8 BL 0x321BA08
	0x035ADFCC TBNZ X0, 0x0, 0x35ADFEC
	0x035ADFD0 ADRP X8, 0xB51000
	0x035ADFD4 LDR X8, [X8]
	0x035ADFD8 MOV X0, X20
	0x035ADFDC MOV X2, X31
	0x035ADFE0 LDR X1, [X8]
	0x035ADFE4 BL 0x321BA08
	0x035ADFE8 TBZ X0, 0x0, 0x35AE03C
	0x035ADFEC ADRP X8, 0xB51000
	0x035ADFF0 LDR X8, [X8]
	0x035ADFF4 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE34000
	005 Move W8, [X20+72]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB8B000
	012 Move X0, [X0+1608]
	013 Call 0x1C17CF4
	014 Move X0, 0xB8B000
	015 Move X0, [X0+1616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+72], W8
	019 Compare X19, 0
	020 JumpIfEqual {33}
	021 Move X8, 0xB8B000
	022 Move X8, [X8+1616]
	023 Move X0, [X8]
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X20, X0
	027 Call JSONString..ctor, X0, X1
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Move X8, 0xB8B000
	034 Move X8, [X8+1608]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Call JSONNull.CreateOrGet
	044 Return X0

Method: System.String op_Implicit(SimpleJSON.JSONNode d)

Disassembly:
	0x035AE0EC ADRP X0, 0xB89000
	0x035AE0F0 LDR X0, [X0 + 0x688]
	0x035AE0F4 BL 0x1C16CF4
	0x035AE0F8 ADRP X0, 0xB89000
	0x035AE0FC LDR X0, [X0 + 0x690]
	0x035AE100 BL 0x1C16CF4
	0x035AE104 ADRP X0, 0xB89000
	0x035AE108 LDR X0, [X0 + 0x678]
	0x035AE10C BL 0x1C16CF4
	0x035AE110 ADRP X0, 0xB89000
	0x035AE114 LDR X0, [X0 + 0x698]
	0x035AE118 BL 0x1C16CF4
	0x035AE11C ADRP X0, 0xB89000
	0x035AE120 LDR X0, [X0 + 0x670]
	0x035AE124 BL 0x1C16CF4
	0x035AE128 ADRP X0, 0xB45000
	0x035AE12C LDR X0, [X0 + 0x8F0]
	0x035AE130 BL 0x1C16CF4
	0x035AE134 ADRP X0, 0xB45000
	0x035AE138 LDR X0, [X0 + 0x988]
	0x035AE13C BL 0x1C16CF4
	0x035AE140 MOVZ W8, 0x1
	0x035AE144 STRB W8, [X22 + 0x5C]
	0x035AE148 LDR X0, [X23]
	0x035AE14C BL 0x1C16F10
	0x035AE150 LDR X1, [X21]
	0x035AE154 MOV X21, X0
	0x035AE158 BL 0x2601D04
	0x035AE15C LDR X0, [X20]
	0x035AE160 BL 0x1C16F10
	0x035AE164 MOV X1, X31
	0x035AE168 MOV X20, X0
	0x035AE16C BL 0x3231AC4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE33000
	006 Move X21, 0xB47000
	007 Move W8, [X20+73]
	008 Move X21, [X21+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB47000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+73], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call JSONNode.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Compare X19, 0
	038 JumpIfEqual {48}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, [X8+456]
	044 Move X1, [X8+464]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X2
	048 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Double n)

Disassembly:
	0x035AE2E0 BL 0x3222A1C
	0x035AE2E4 AND W8, W0, 0xFFFF
	0x035AE2E8 CMP W8, 0xD
	0x035AE2EC ADD W8, W24, 0x1
	0x035AE2F0 B.NE 0x35AE2A8
	0x035AE2F4 B 0x35AE68C
	0x035AE2F8 AND W8, W0, 0xFFFF
	0x035AE2FC MOVZ W9, 0xFEFF
	0x035AE300 CMP W8, W9
	0x035AE304 B.EQ 0x35AE690
	0x035AE308 CMP W8, 0x7D
	0x035AE30C B.EQ 0x35AE40C
	0x035AE310 CMP W8, 0x7B
	0x035AE314 B.NE 0x35AE528
	0x035AE318 TBNZ X29, 0x0, 0x35AE5F0
	0x035AE31C ADRP X8, 0xB6D000
	0x035AE320 LDR X8, [X8 + 0xBC0]
	0x035AE324 LDR X0, [X8]
	0x035AE328 BL 0x1C16F10
	0x035AE32C MOV X25, X0
	0x035AE330 BL 0x35AE864
	0x035AE334 CBZ X21, 0x35AE7F8
	0x035AE338 ADRP X8, 0xB89000
	0x035AE33C LDR X8, [X8 + 0x690]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xE33000
	006 Move X20, 0xB70000
	007 Move W8, [X19+74]
	008 Move X20, [X20+1024]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB70000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+74], W8
	019 Move X0, [X20]
	020 Call 0x1C17F10
	021 Move V0, V8
	022 Move X19, X0
	023 Call JSONNumber..ctor, X0, V0
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+8]
	028 Move V8, [X31+32]
	029 Return X0

Method: System.Double op_Implicit(SimpleJSON.JSONNode d)

Disassembly:
	0x035AE3C0 BL 0x3232ADC
	0x035AE3C4 ADRP X8, 0xB89000
	0x035AE3C8 LDR X8, [X8 + 0x680]
	0x035AE3CC MOV X0, X21
	0x035AE3D0 LDR X1, [X8]
	0x035AE3D4 BL 0x260227C
	0x035AE3D8 MOV X22, X0
	0x035AE3DC MOV W27, W31
	0x035AE3E0 B 0x35AE68C
	0x035AE3E4 CMP W8, 0xD
	0x035AE3E8 B.EQ 0x35AE550
	0x035AE3EC CMP W8, 0x20
	0x035AE3F0 B.NE 0x35AE528
	0x035AE3F4 TBNZ X29, 0x0, 0x35AE5F0
	0x035AE3F8 B 0x35AE68C
	0x035AE3FC CMP W8, 0x5C
	0x035AE400 B.EQ 0x35AE61C
	0x035AE404 CMP W8, 0x5D
	0x035AE408 B.NE 0x35AE528
	0x035AE40C TBNZ X29, 0x0, 0x35AE5F0
	0x035AE410 CBZ X21, 0x35AE7F8
	0x035AE414 LDR W8, [X21 + 0x18]
	0x035AE418 CBZ W8, 0x35AE7FC
	0x035AE41C ADRP X8, 0xB89000
	0x035AE420 LDR X8, [X8 + 0x688]
	0x035AE424 MOV X0, X21
	0x035AE428 LDR X1, [X8]
	0x035AE42C BL 0x26022C0
	0x035AE430 CBZ X20, 0x35AE7F8
	0x035AE434 MOV X0, X20
	0x035AE438 MOV X1, X31
	0x035AE43C BL 0x323260C
	0x035AE440 CMP W0, 0x1
	0x035AE444 CSET W8, LT

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE33000
	006 Move X21, 0xB47000
	007 Move W8, [X20+75]
	008 Move X21, [X21+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB47000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+75], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call JSONNode.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move D0, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return V0
	037 Compare X19, 0
	038 JumpIfEqual {48}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, [X8+840]
	044 Move X1, [X8+848]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X2
	048 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Single n)

Disassembly:
	0x035AE448 BIC W8, W8, W28, 0x0
	0x035AE44C TBNZ X8, 0x0, 0x35AE4A4
	0x035AE450 LDR X8, [X20]
	0x035AE454 MOV X0, X20
	0x035AE458 LDP X9, X1, [X8 + 0x168]
	0x035AE45C BLR X9
	0x035AE460 LDR X8, [X26]
	0x035AE464 MOV X25, X0
	0x035AE468 LDR W9, [X8 + 0xE0]
	0x035AE46C CBNZ W9, 0x35AE478
	0x035AE470 MOV X0, X8
	0x035AE474 BL 0x1C16DFC
	0x035AE478 AND W1, W28, 0x1
	0x035AE47C MOV X0, X25
	0x035AE480 BL 0x35ADE94
	0x035AE484 CBZ X22, 0x35AE7F8
	0x035AE488 LDR X8, [X22]
	0x035AE48C MOV X2, X0
	0x035AE490 MOV X0, X22
	0x035AE494 MOV X1, X23
	0x035AE498 LDR X9, [X8 + 0x278]
	0x035AE49C LDR X3, [X8 + 0x280]
	0x035AE4A0 BLR X9
	0x035AE4A4 LDR X0, [X26]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xE33000
	006 Move X20, 0xB70000
	007 Move W8, [X19+76]
	008 Move X20, [X20+1024]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB70000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+76], W8
	019 Move X0, [X20]
	020 Call 0x1C17F10
	021 NotImplemented "Instruction FCVT not yet implemented."
	022 Move X19, X0
	023 Call JSONNumber..ctor, X0, V0
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+8]
	028 Move V8, [X31+32]
	029 Return X0

Method: System.Single op_Implicit(SimpleJSON.JSONNode d)

Disassembly:
	0x035AE4A8 LDR W8, [X0 + 0xE0]
	0x035AE4AC CBNZ W8, 0x35AE4B4
	0x035AE4B0 BL 0x1C16DFC
	0x035AE4B4 MOV X0, X22
	0x035AE4B8 MOV X1, X31
	0x035AE4BC BL 0x35ADA5C
	0x035AE4C0 TBZ X0, 0x0, 0x35AE4E4
	0x035AE4C4 CBZ X22, 0x35AE7F8
	0x035AE4C8 LDR X8, [X22]
	0x035AE4CC MOV X0, X22
	0x035AE4D0 LDR X9, [X8 + 0x268]
	0x035AE4D4 LDR X2, [X8 + 0x270]
	0x035AE4D8 ORN W8, W31, W27, 0x0
	0x035AE4DC AND W1, W8, 0x1
	0x035AE4E0 BLR X9
	0x035AE4E4 ADRP X8, 0xB45000
	0x035AE4E8 LDR X8, [X8 + 0x988]
	0x035AE4EC MOV X0, X20
	0x035AE4F0 MOV W1, W31
	0x035AE4F4 MOV X2, X31
	0x035AE4F8 LDR X23, [X8]
	0x035AE4FC BL 0x3232ADC
	0x035AE500 LDR W8, [X21 + 0x18]
	0x035AE504 CMP W8, 0x1
	0x035AE508 B.LT 0x35AE688
	0x035AE50C ADRP X8, 0xB89000
	0x035AE510 LDR X8, [X8 + 0x680]
	0x035AE514 MOV X0, X21
	0x035AE518 LDR X1, [X8]
	0x035AE51C BL 0x260227C
	0x035AE520 MOV X22, X0
	0x035AE524 B 0x35AE688
	0x035AE528 MOV X0, X19
	0x035AE52C MOV W1, W24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE33000
	006 Move X21, 0xB47000
	007 Move W8, [X20+77]
	008 Move X21, [X21+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB47000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+77], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call JSONNode.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move S0, W31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return V0
	037 Compare X19, 0
	038 JumpIfEqual {48}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, [X8+904]
	044 Move X1, [X8+912]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X2
	048 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Int32 n)

Disassembly:
	0x035AE530 MOV X2, X31
	0x035AE534 BL 0x3222A1C
	0x035AE538 CBZ X20, 0x35AE7F8
	0x035AE53C MOV W1, W0
	0x035AE540 MOV X0, X20
	0x035AE544 MOV X2, X31
	0x035AE548 BL 0x3233D30
	0x035AE54C B 0x35AE690
	0x035AE550 MOVZ W27, 0x1
	0x035AE554 B 0x35AE690
	0x035AE558 EOR W29, W29, 0x1
	0x035AE55C ORR W28, W28, W29, 0x0
	0x035AE560 B 0x35AE690
	0x035AE564 TBNZ X29, 0x0, 0x35AE5F0
	0x035AE568 CBZ X20, 0x35AE7F8
	0x035AE56C MOV X0, X20
	0x035AE570 MOV X1, X31
	0x035AE574 BL 0x323260C
	0x035AE578 CMP W0, 0x1
	0x035AE57C CSET W8, LT
	0x035AE580 BIC W8, W8, W28, 0x0
	0x035AE584 TBNZ X8, 0x0, 0x35AE5DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE33000
	006 Move X21, 0xB70000
	007 Move W8, [X20+78]
	008 Move X21, [X21+1024]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB70000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+78], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 NotImplemented "Instruction SCVTF not yet implemented."
	022 Move X20, X0
	023 Call JSONNumber..ctor, X0, V0
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Int32 op_Implicit(SimpleJSON.JSONNode d)

Disassembly:
	0x035AE588 LDR X8, [X20]
	0x035AE58C MOV X0, X20
	0x035AE590 LDP X9, X1, [X8 + 0x168]
	0x035AE594 BLR X9
	0x035AE598 LDR X8, [X26]
	0x035AE59C MOV X25, X0
	0x035AE5A0 LDR W9, [X8 + 0xE0]
	0x035AE5A4 CBNZ W9, 0x35AE5B0
	0x035AE5A8 MOV X0, X8
	0x035AE5AC BL 0x1C16DFC
	0x035AE5B0 AND W1, W28, 0x1
	0x035AE5B4 MOV X0, X25
	0x035AE5B8 BL 0x35ADE94
	0x035AE5BC CBZ X22, 0x35AE7F8
	0x035AE5C0 LDR X8, [X22]
	0x035AE5C4 MOV X2, X0
	0x035AE5C8 MOV X0, X22
	0x035AE5CC MOV X1, X23
	0x035AE5D0 LDR X9, [X8 + 0x278]
	0x035AE5D4 LDR X3, [X8 + 0x280]
	0x035AE5D8 BLR X9
	0x035AE5DC ADRP X8, 0xB45000
	0x035AE5E0 LDR X8, [X8 + 0x988]
	0x035AE5E4 LDR X23, [X8]
	0x035AE5E8 B 0x35AE678
	0x035AE5EC TBZ X29, 0x0, 0x35AE660
	0x035AE5F0 MOV X0, X19
	0x035AE5F4 MOV W1, W24
	0x035AE5F8 MOV X2, X31
	0x035AE5FC BL 0x3222A1C
	0x035AE600 CBZ X20, 0x35AE7F8
	0x035AE604 MOV W1, W0
	0x035AE608 MOV X0, X20
	0x035AE60C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE33000
	006 Move X21, 0xB47000
	007 Move W8, [X20+79]
	008 Move X21, [X21+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB47000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+79], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call JSONNode.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W0, W31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Compare X19, 0
	038 JumpIfEqual {48}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, [X8+872]
	044 Move X1, [X8+880]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X2
	048 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Int64 n)

Disassembly:
	0x035AE610 BL 0x3233D30
	0x035AE614 MOVZ W29, 0x1
	0x035AE618 B 0x35AE690
	0x035AE61C ADD W25, W24, 0x1
	0x035AE620 TBZ X29, 0x0, 0x35AE6A4
	0x035AE624 MOV X0, X19
	0x035AE628 MOV W1, W25
	0x035AE62C MOV X2, X31
	0x035AE630 BL 0x3222A1C
	0x035AE634 AND W8, W0, 0xFFFF
	0x035AE638 MOV W1, W0
	0x035AE63C CMP W8, 0x66
	0x035AE640 B.HI 0x35AE6AC
	0x035AE644 CMP W8, 0x62
	0x035AE648 B.EQ 0x35AE6E4
	0x035AE64C CMP W8, 0x66
	0x035AE650 B.NE 0x35AE6DC
	0x035AE654 CBZ X20, 0x35AE7F8
	0x035AE658 MOVZ W1, 0xC
	0x035AE65C B 0x35AE704
	0x035AE660 CBZ X20, 0x35AE7F8
	0x035AE664 LDR X8, [X20]
	0x035AE668 MOV X0, X20
	0x035AE66C LDP X9, X1, [X8 + 0x168]
	0x035AE670 BLR X9
	0x035AE674 MOV X23, X0
	0x035AE678 MOV X0, X20
	0x035AE67C MOV W1, W31
	0x035AE680 MOV X2, X31
	0x035AE684 BL 0x3232ADC
	0x035AE688 MOV W28, W31
	0x035AE68C MOV W29, W31
	0x035AE690 LDR W8, [X19 + 0x10]
	0x035AE694 ADD W24, W24, 0x1
	0x035AE698 CMP W24, W8
	0x035AE69C B.LT 0x35AE1A8
	0x035AE6A0 B 0x35AE764
	0x035AE6A4 MOV W29, W31
	0x035AE6A8 B 0x35AE714
	0x035AE6AC SUB W8, W8, 0x6E
	0x035AE6B0 CMP W8, 0x7
	0x035AE6B4 B.HI 0x35AE6DC
	0x035AE6B8 ADRP X11, 0xFFFFFFFFFD5E8000
	0x035AE6BC ADD X11, X11, 0xDF4
	0x035AE6C0 ADR X9, 0x10
	0x035AE6C4 LDRB W10, [X11, X8, LSL]
	0x035AE6C8 ADD X9, X9, X10, 0x2, LSL
	0x035AE6CC BR X9
	0x035AE6D0 CBZ X20, 0x35AE7F8
	0x035AE6D4 MOVZ W1, 0xA
	0x035AE6D8 B 0x35AE704
	0x035AE6DC CBNZ X20, 0x35AE704
	0x035AE6E0 B 0x35AE7F8
	0x035AE6E4 CBZ X20, 0x35AE7F8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE33000
	007 Move [X31+8], X0
	008 Move X20, 0xB47000
	009 Move W8, [X21+80]
	010 Move X20, [X20+1120]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xB47000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0xB70000
	020 Move X0, [X0+1024]
	021 Call 0x1C17CF4
	022 Move X0, 0xB8A000
	023 Move X0, [X0+1616]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+80], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move W8, [X8+1]
	035 Compare W8, 0
	036 JumpIfEqual {49}
	037 Move X19, 0xB8A000
	038 Move X19, [X19+1616]
	039 Add X0, X31, 8
	040 Move X1, X31
	041 Call Int64.ToString, X0
	042 Move X8, [X19]
	043 Move X19, X0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, X19
	047 Move X20, X0
	048 Call JSONString..ctor, X0, X1
	049 Move X8, 0xB70000
	050 Move X8, [X8+1024]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 NotImplemented "Instruction SCVTF not yet implemented."
	054 Move X20, X0
	055 Call JSONNumber..ctor, X0, V0
	056 Move X0, X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Add X31, X31, 48
	062 Return X0

Method: System.Int64 op_Implicit(SimpleJSON.JSONNode d)

Disassembly:
	0x035AE6E8 MOVZ W1, 0x8
	0x035AE6EC B 0x35AE704
	0x035AE6F0 CBZ X20, 0x35AE7F8
	0x035AE6F4 MOVZ W1, 0xD
	0x035AE6F8 B 0x35AE704
	0x035AE6FC CBZ X20, 0x35AE7F8
	0x035AE700 MOVZ W1, 0x9
	0x035AE704 MOV X0, X20
	0x035AE708 MOV X2, X31
	0x035AE70C BL 0x3233D30
	0x035AE710 MOVZ W29, 0x1
	0x035AE714 MOV W24, W25
	0x035AE718 B 0x35AE690
	0x035AE71C ADD W1, W24, 0x2
	0x035AE720 MOVZ W2, 0x4
	0x035AE724 MOV X0, X19
	0x035AE728 MOV X3, X31
	0x035AE72C BL 0x3228DE4
	0x035AE730 MOVZ W1, 0x200
	0x035AE734 MOV X2, X31
	0x035AE738 BL 0x337BAD0
	0x035AE73C CBZ X20, 0x35AE7F8
	0x035AE740 MOV W1, W0
	0x035AE744 MOV X0, X20
	0x035AE748 MOV X2, X31
	0x035AE74C BL 0x3233D30
	0x035AE750 ADD W24, W24, 0x5
	0x035AE754 B 0x35AE614
	0x035AE758 MOV X22, X31
	0x035AE75C MOV W29, W31
	0x035AE760 MOV W28, W31
	0x035AE764 TBNZ X29, 0x0, 0x35AE81C
	0x035AE768 LDR X0, [X26]
	0x035AE76C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE33000
	006 Move X21, 0xB47000
	007 Move W8, [X20+81]
	008 Move X21, [X21+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB47000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+81], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call JSONNode.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Compare X19, 0
	038 JumpIfEqual {48}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, [X8+968]
	044 Move X1, [X8+976]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X2
	048 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.UInt64 n)

Disassembly:
	0x035AE770 CBNZ W8, 0x35AE778
	0x035AE774 BL 0x1C16DFC
	0x035AE778 MOV X0, X22
	0x035AE77C MOV X1, X31
	0x035AE780 BL 0x35AD170
	0x035AE784 TBZ X0, 0x0, 0x35AE7D8
	0x035AE788 CBZ X20, 0x35AE7F8
	0x035AE78C LDR X8, [X20]
	0x035AE790 MOV X0, X20
	0x035AE794 LDP X9, X1, [X8 + 0x168]
	0x035AE798 BLR X9
	0x035AE79C LDR X8, [X26]
	0x035AE7A0 MOV X19, X0
	0x035AE7A4 LDR W9, [X8 + 0xE0]
	0x035AE7A8 CBNZ W9, 0x35AE7B4
	0x035AE7AC MOV X0, X8
	0x035AE7B0 BL 0x1C16DFC
	0x035AE7B4 AND W1, W28, 0x1
	0x035AE7B8 MOV X0, X19
	0x035AE7BC LDP X20, X19, [X31 + 0x50]
	0x035AE7C0 LDP X22, X21, [X31 + 0x40]
	0x035AE7C4 LDP X24, X23, [X31 + 0x30]
	0x035AE7C8 LDP X26, X25, [X31 + 0x20]
	0x035AE7CC LDP X28, X27, [X31 + 0x10]
	0x035AE7D0 LDP X29, X30, [X31], #0x60
	0x035AE7D4 B 0x35ADE94
	0x035AE7D8 MOV X0, X22
	0x035AE7DC LDP X20, X19, [X31 + 0x50]
	0x035AE7E0 LDP X22, X21, [X31 + 0x40]
	0x035AE7E4 LDP X24, X23, [X31 + 0x30]
	0x035AE7E8 LDP X26, X25, [X31 + 0x20]
	0x035AE7EC LDP X28, X27, [X31 + 0x10]
	0x035AE7F0 LDP X29, X30, [X31], #0x60
	0x035AE7F4 RET
	0x035AE7F8 BL 0x1C16F20
	0x035AE7FC ADRP X0, 0xB45000
	0x035AE800 LDR X0, [X0 + 0x7D0]
	0x035AE804 BL 0x1C16D08
	0x035AE808 BL 0x1C16F10
	0x035AE80C MOV X19, X0
	0x035AE810 ADRP X0, 0xB89000
	0x035AE814 LDR X0, [X0 + 0x6A0]
	0x035AE818 B 0x35AE838
	0x035AE81C ADRP X0, 0xB45000
	0x035AE820 LDR X0, [X0 + 0x7D0]
	0x035AE824 BL 0x1C16D08
	0x035AE828 BL 0x1C16F10
	0x035AE82C MOV X19, X0
	0x035AE830 ADRP X0, 0xB89000
	0x035AE834 LDR X0, [X0 + 0x6A8]
	0x035AE838 BL 0x1C16D08
	0x035AE83C MOV X1, X0
	0x035AE840 MOV X0, X19
	0x035AE844 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE33000
	007 Move [X31+8], X0
	008 Move X20, 0xB47000
	009 Move W8, [X21+82]
	010 Move X20, [X20+1120]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xB47000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0xB70000
	020 Move X0, [X0+1024]
	021 Call 0x1C17CF4
	022 Move X0, 0xB8A000
	023 Move X0, [X0+1616]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+82], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move W8, [X8+1]
	035 Compare W8, 0
	036 JumpIfEqual {49}
	037 Move X19, 0xB8A000
	038 Move X19, [X19+1616]
	039 Add X0, X31, 8
	040 Move X1, X31
	041 Call UInt64.ToString, X0
	042 Move X8, [X19]
	043 Move X19, X0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, X19
	047 Move X20, X0
	048 Call JSONString..ctor, X0, X1
	049 Move X8, 0xB70000
	050 Move X8, [X8+1024]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 NotImplemented "Instruction UCVTF not yet implemented."
	054 Move X20, X0
	055 Call JSONNumber..ctor, X0, V0
	056 Move X0, X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Add X31, X31, 48
	062 Return X0

Method: System.UInt64 op_Implicit(SimpleJSON.JSONNode d)

Disassembly:
	0x035AE848 BL 0x33B2C70
	0x035AE84C ADRP X0, 0xB89000
	0x035AE850 LDR X0, [X0 + 0x6B0]
	0x035AE854 BL 0x1C16D08
	0x035AE858 MOV X1, X0
	0x035AE85C MOV X0, X19
	0x035AE860 BL 0x1C16DEC
	0x035AE864 STP X30, X23, [X31 - 0x30]!
	0x035AE868 STP X22, X21, [X31 + 0x10]
	0x035AE86C STP X20, X19, [X31 + 0x20]
	0x035AE870 ADRP X22, 0xE32000
	0x035AE874 ADRP X23, 0xB89000
	0x035AE878 ADRP X20, 0xB89000
	0x035AE87C ADRP X21, 0xB46000
	0x035AE880 LDRB W8, [X22 + 0xD7]
	0x035AE884 LDR X23, [X23 + 0x6B8]
	0x035AE888 LDR X20, [X20 + 0x6C0]
	0x035AE88C LDR X21, [X21 + 0x460]
	0x035AE890 MOV X19, X0
	0x035AE894 TBNZ X8, 0x0, 0x35AE8C4
	0x035AE898 ADRP X0, 0xB89000
	0x035AE89C LDR X0, [X0 + 0x6C0]
	0x035AE8A0 BL 0x1C16CF4
	0x035AE8A4 ADRP X0, 0xB89000
	0x035AE8A8 LDR X0, [X0 + 0x6B8]
	0x035AE8AC BL 0x1C16CF4
	0x035AE8B0 ADRP X0, 0xB46000
	0x035AE8B4 LDR X0, [X0 + 0x460]
	0x035AE8B8 BL 0x1C16CF4
	0x035AE8BC MOVZ W8, 0x1
	0x035AE8C0 STRB W8, [X22 + 0xD7]
	0x035AE8C4 LDR X0, [X23]
	0x035AE8C8 BL 0x1C16F10
	0x035AE8CC LDR X1, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE33000
	006 Move X21, 0xB47000
	007 Move W8, [X20+83]
	008 Move X21, [X21+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB47000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+83], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call JSONNode.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Compare X19, 0
	038 JumpIfEqual {48}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, [X8+1000]
	044 Move X1, [X8+1008]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X2
	048 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Boolean b)

Disassembly:
	0x035AE8D0 MOV X20, X0
	0x035AE8D4 BL 0x2AA4804
	0x035AE8D8 STR X20, [X19 + 0x10]
	0x035AE8DC LDR X0, [X21]
	0x035AE8E0 LDR W8, [X0 + 0xE0]
	0x035AE8E4 CBNZ W8, 0x35AE8EC
	0x035AE8E8 BL 0x1C16DFC
	0x035AE8EC MOV X0, X19
	0x035AE8F0 LDP X20, X19, [X31 + 0x20]
	0x035AE8F4 LDP X22, X21, [X31 + 0x10]
	0x035AE8F8 MOV X1, X31
	0x035AE8FC LDP X30, X23, [X31], #0x30
	0x035AE900 B 0x33BDD8C
	0x035AE904 STP X30, X23, [X31 - 0x30]!
	0x035AE908 STP X22, X21, [X31 + 0x10]
	0x035AE90C STP X20, X19, [X31 + 0x20]
	0x035AE910 ADRP X22, 0xE32000
	0x035AE914 ADRP X23, 0xB89000
	0x035AE918 ADRP X20, 0xB89000
	0x035AE91C ADRP X21, 0xB46000
	0x035AE920 LDRB W8, [X22 + 0xC2]
	0x035AE924 LDR X23, [X23 + 0x6C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE33000
	006 Move X21, 0xB8A000
	007 Move W8, [X20+84]
	008 Move X21, [X21+1632]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB8A000
	015 Move X0, [X0+1632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+84], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 And W1, W19, 1
	022 Move X20, X0
	023 Call JSONBool..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Boolean op_Implicit(SimpleJSON.JSONNode d)

Disassembly:
	0x035AE998 MOV X1, X31
	0x035AE99C LDP X30, X23, [X31], #0x30
	0x035AE9A0 B 0x33BDD8C
	0x035AE9A4 STR X30, [X31 - 0x30]!
	0x035AE9A8 STP X22, X21, [X31 + 0x10]
	0x035AE9AC STP X20, X19, [X31 + 0x20]
	0x035AE9B0 ADRP X21, 0xE32000
	0x035AE9B4 ADRP X22, 0xB77000
	0x035AE9B8 LDRB W8, [X21 + 0x5D]
	0x035AE9BC LDR X22, [X22 + 0x260]
	0x035AE9C0 MOV X20, X1
	0x035AE9C4 MOV X19, X0
	0x035AE9C8 TBNZ X8, 0x0, 0x35AE9E0
	0x035AE9CC ADRP X0, 0xB77000
	0x035AE9D0 LDR X0, [X0 + 0x260]
	0x035AE9D4 BL 0x1C16CF4
	0x035AE9D8 MOVZ W8, 0x1
	0x035AE9DC STRB W8, [X21 + 0x5D]
	0x035AE9E0 LDR X0, [X22]
	0x035AE9E4 BL 0x1C16F10
	0x035AE9E8 MOV X1, X20
	0x035AE9EC MOV X2, X31
	0x035AE9F0 MOV X21, X0
	0x035AE9F4 BL 0x32F68D8
	0x035AE9F8 LDR X8, [X19]
	0x035AE9FC MOV X0, X19
	0x035AEA00 MOV X1, X21
	0x035AEA04 LDP X20, X19, [X31 + 0x20]
	0x035AEA08 LDR X3, [X8 + 0x428]
	0x035AEA0C LDR X2, [X8 + 0x430]
	0x035AEA10 LDP X22, X21, [X31 + 0x10]
	0x035AEA14 LDR X30, [X31], #0x30
	0x035AEA18 BR X3
	0x035AEA1C STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE33000
	006 Move X21, 0xB47000
	007 Move W8, [X20+85]
	008 Move X21, [X21+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB47000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+85], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call JSONNode.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W0, W31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Compare X19, 0
	038 JumpIfEqual {48}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, [X8+936]
	044 Move X1, [X8+944]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X2
	048 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Collections.Generic.KeyValuePair`2<System.String, SimpleJSON.JSONNode> aKeyValue)

Disassembly:
	0x035AEA20 ADRP X0, 0xB45000
	0x035AEA24 LDR X0, [X0 + 0x7D0]
	0x035AEA28 BL 0x1C16D08
	0x035AEA2C BL 0x1C16F10
	0x035AEA30 MOV X19, X0
	0x035AEA34 ADRP X0, 0xB89000
	0x035AEA38 LDR X0, [X0 + 0x6D8]
	0x035AEA3C BL 0x1C16D08
	0x035AEA40 MOV X1, X0
	0x035AEA44 MOV X0, X19
	0x035AEA48 MOV X2, X31
	0x035AEA4C BL 0x33B2C70
	0x035AEA50 ADRP X0, 0xB89000
	0x035AEA54 LDR X0, [X0 + 0x6E0]
	0x035AEA58 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE33000
	005 Move W8, [X20+86]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB70000
	012 Move X0, [X0+840]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+86], W8
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0

Method: System.Boolean op_Equality(SimpleJSON.JSONNode a, System.Object b)

Disassembly:
	0x035AE170 CBZ X19, 0x35AE7F8
	0x035AE174 LDR W8, [X19 + 0x10]
	0x035AE178 ADRP X26, 0xB46000
	0x035AE17C LDR X26, [X26 + 0x460]
	0x035AE180 CMP W8, 0x1
	0x035AE184 B.LT 0x35AE758
	0x035AE188 ADRP X8, 0xB45000
	0x035AE18C LDR X8, [X8 + 0x988]
	0x035AE190 MOV W27, W31
	0x035AE194 MOV W28, W31
	0x035AE198 MOV W29, W31
	0x035AE19C LDR X23, [X8]
	0x035AE1A0 MOV W24, W31
	0x035AE1A4 MOV X22, X31
	0x035AE1A8 MOV X0, X19
	0x035AE1AC MOV W1, W24
	0x035AE1B0 MOV X2, X31
	0x035AE1B4 BL 0x3222A1C
	0x035AE1B8 AND W8, W0, 0xFFFF
	0x035AE1BC CMP W8, 0x2F
	0x035AE1C0 B.HI 0x35AE1EC
	0x035AE1C4 CMP W8, 0x20
	0x035AE1C8 B.HI 0x35AE234
	0x035AE1CC AND W8, W0, 0xFFFF
	0x035AE1D0 CMP W8, 0xC
	0x035AE1D4 B.GT 0x35AE3E4
	0x035AE1D8 CMP W8, 0x9
	0x035AE1DC B.EQ 0x35AE3F4
	0x035AE1E0 CMP W8, 0xA
	0x035AE1E4 B.EQ 0x35AE550
	0x035AE1E8 B 0x35AE528
	0x035AE1EC CMP W8, 0x5D
	0x035AE1F0 B.HI 0x35AE2F8
	0x035AE1F4 AND W8, W0, 0xFFFF
	0x035AE1F8 CMP W8, 0x5B
	0x035AE1FC B.GT 0x35AE3FC
	0x035AE200 CMP W8, 0x3A
	0x035AE204 B.EQ 0x35AE5EC
	0x035AE208 CMP W8, 0x5B
	0x035AE20C B.NE 0x35AE528
	0x035AE210 TBNZ X29, 0x0, 0x35AE5F0
	0x035AE214 ADRP X8, 0xB6F000
	0x035AE218 LDR X8, [X8 + 0x370]
	0x035AE21C LDR X0, [X8]
	0x035AE220 BL 0x1C16F10
	0x035AE224 MOV X25, X0
	0x035AE228 BL 0x35AE904
	0x035AE22C CBNZ X21, 0x35AE338
	0x035AE230 B 0x35AE7F8
	0x035AE234 AND W8, W0, 0xFFFF
	0x035AE238 CMP W8, 0x22
	0x035AE23C B.EQ 0x35AE558
	0x035AE240 CMP W8, 0x2C
	0x035AE244 B.EQ 0x35AE564
	0x035AE248 CMP W8, 0x2F
	0x035AE24C B.NE 0x35AE528
	0x035AE250 LDR X0, [X26]
	0x035AE254 LDR W8, [X0 + 0xE0]
	0x035AE258 CBNZ W8, 0x35AE264
	0x035AE25C BL 0x1C16DFC
	0x035AE260 LDR X0, [X26]
	0x035AE264 LDR X8, [X0 + 0xB8]
	0x035AE268 LDRB W8, [X8 + 0x2]
	0x035AE26C CMP W8, 0x0
	0x035AE270 CSET W8, EQ
	0x035AE274 ORR W8, W29, W8, 0x0
	0x035AE278 TBNZ X8, 0x0, 0x35AE528
	0x035AE27C LDR W8, [X19 + 0x10]
	0x035AE280 ADD W1, W24, 0x1
	0x035AE284 CMP W1, W8
	0x035AE288 B.GE 0x35AE528
	0x035AE28C MOV X0, X19
	0x035AE290 MOV X2, X31
	0x035AE294 BL 0x3222A1C
	0x035AE298 AND W8, W0, 0xFFFF
	0x035AE29C CMP W8, 0x2F
	0x035AE2A0 B.NE 0x35AE528
	0x035AE2A4 ADD W8, W24, 0x1
	0x035AE2A8 LDR W9, [X19 + 0x10]
	0x035AE2AC MOV W24, W8
	0x035AE2B0 CMP W8, W9
	0x035AE2B4 B.GE 0x35AE68C
	0x035AE2B8 MOV X0, X19
	0x035AE2BC MOV W1, W24
	0x035AE2C0 MOV X2, X31
	0x035AE2C4 BL 0x3222A1C
	0x035AE2C8 AND W8, W0, 0xFFFF
	0x035AE2CC CMP W8, 0xA
	0x035AE2D0 B.EQ 0x35AE68C
	0x035AE2D4 MOV X0, X19
	0x035AE2D8 MOV W1, W24
	0x035AE2DC MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE33000
	006 Move W8, [X21+87]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB8A000
	014 Move X0, [X0+1624]
	015 Call 0x1C17CF4
	016 Move X0, 0xB8A000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+87], W8
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, 0xB8A000
	023 Move X8, [X8+1608]
	024 Move X9, [X8]
	025 Compare X20, 0
	026 JumpIfEqual {44}
	027 Move X8, [X20]
	028 Move W11, [X9+304]
	029 Move W10, [X8+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X12, [X8+200]
	032 Add X11, X12, X11
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X11, 0xB8A000
	036 Move X11, [X11+1624]
	037 Move X11, [X11]
	038 Move W12, [X11+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, W31
	041 Compare X19, 0
	042 JumpIfNotEqual {54}
	043 Move W0, 1
	044 Move W8, 1
	045 Compare X19, 0
	046 JumpIfNotEqual {54}
	047 Move X8, [X8+200]
	048 Add X8, X8, X12
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Compare X19, 0
	053 JumpIfEqual {68}
	054 Move X10, [X19]
	055 Move W12, [X9+304]
	056 Move W11, [X10+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X13, [X10+200]
	059 Add X12, X13, X12
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, 0xB8A000
	063 Move X9, [X9+1624]
	064 Move X9, [X9]
	065 Move W12, [X9+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W9, W31
	068 Move W9, 1
	069 Move X10, [X10+200]
	070 Add X10, X10, X12
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."
	074 And W31, W9, W8
	075 NotImplemented "Instruction CSET not yet implemented."
	076 Or W8, W8, W0
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {86}
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Return X0
	086 Compare X20, 0
	087 JumpIfEqual {98}
	088 Move X8, [X20]
	089 Move X0, X20
	090 Move X1, X19
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X3, [X8+312]
	094 Move X2, [X8+320]
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 CallNoReturn X3
	098 Call 0x1C17F20

Method: System.Boolean op_Inequality(SimpleJSON.JSONNode a, System.Object b)

Disassembly:
	0x035AEA5C MOV X1, X0
	0x035AEA60 MOV X0, X19
	0x035AEA64 BL 0x1C16DEC
	0x035AEA68 STP X30, X19, [X31 - 0x10]!
	0x035AEA6C ADRP X0, 0xB45000
	0x035AEA70 LDR X0, [X0 + 0x7D0]
	0x035AEA74 BL 0x1C16D08
	0x035AEA78 BL 0x1C16F10
	0x035AEA7C MOV X19, X0
	0x035AEA80 ADRP X0, 0xB89000
	0x035AEA84 LDR X0, [X0 + 0x6D8]
	0x035AEA88 BL 0x1C16D08
	0x035AEA8C MOV X1, X0
	0x035AEA90 MOV X0, X19
	0x035AEA94 MOV X2, X31
	0x035AEA98 BL 0x33B2C70
	0x035AEA9C ADRP X0, 0xB89000
	0x035AEAA0 LDR X0, [X0 + 0x6E8]
	0x035AEAA4 BL 0x1C16D08
	0x035AEAA8 MOV X1, X0
	0x035AEAAC MOV X0, X19
	0x035AEAB0 BL 0x1C16DEC
	0x035AEAB4 STP X30, X19, [X31 - 0x10]!
	0x035AEAB8 ADRP X0, 0xB45000
	0x035AEABC LDR X0, [X0 + 0x7D0]
	0x035AEAC0 BL 0x1C16D08
	0x035AEAC4 BL 0x1C16F10
	0x035AEAC8 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE33000
	007 Move X22, 0xB47000
	008 Move W8, [X21+88]
	009 Move X22, [X22+1120]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB47000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+88], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Call JSONNode.op_Equality, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 NotImplemented "Instruction ORN not yet implemented."
	034 And W0, W8, 1
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x035AEACC ADRP X0, 0xB89000
	0x035AEAD0 LDR X0, [X0 + 0x6D8]
	0x035AEAD4 BL 0x1C16D08

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x035AEAD8 MOV X1, X0
	0x035AEADC MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Text.StringBuilder get_EscapeBuilder()

Disassembly:
	0x035AEAE0 MOV X2, X31
	0x035AEAE4 BL 0x33B2C70
	0x035AEAE8 ADRP X0, 0xB89000
	0x035AEAEC LDR X0, [X0 + 0x6F0]
	0x035AEAF0 BL 0x1C16D08
	0x035AEAF4 MOV X1, X0
	0x035AEAF8 MOV X0, X19
	0x035AEAFC BL 0x1C16DEC
	0x035AEB00 STR X30, [X31 - 0x30]!
	0x035AEB04 STP X22, X21, [X31 + 0x10]
	0x035AEB08 STP X20, X19, [X31 + 0x20]
	0x035AEB0C ADRP X21, 0xE32000
	0x035AEB10 ADRP X22, 0xB89000
	0x035AEB14 LDRB W8, [X21 + 0x5E]
	0x035AEB18 LDR X22, [X22 + 0x6F8]
	0x035AEB1C MOV X19, X1
	0x035AEB20 MOV X20, X0
	0x035AEB24 TBNZ X8, 0x0, 0x35AEB48
	0x035AEB28 ADRP X0, 0xB89000
	0x035AEB2C LDR X0, [X0 + 0x6F8]
	0x035AEB30 BL 0x1C16CF4
	0x035AEB34 ADRP X0, 0xB45000
	0x035AEB38 LDR X0, [X0 + 0xE00]
	0x035AEB3C BL 0x1C16CF4
	0x035AEB40 MOVZ W8, 0x1
	0x035AEB44 STRB W8, [X21 + 0x5E]
	0x035AEB48 LDR X0, [X22]
	0x035AEB4C BL 0x1C16F10
	0x035AEB50 MOV X1, X19
	0x035AEB54 MOV X2, X31
	0x035AEB58 MOV X21, X0
	0x035AEB5C BL 0x32EE1AC
	0x035AEB60 CBZ X21, 0x35AEC20
	0x035AEB64 MOV X0, X21
	0x035AEB68 MOV X1, X31
	0x035AEB6C BL 0x32EE83C
	0x035AEB70 CBZ X0, 0x35AEC20
	0x035AEB74 LDR X8, [X0]
	0x035AEB78 ADRP X22, 0xB45000
	0x035AEB7C LDP X9, X1, [X8 + 0x1B8]
	0x035AEB80 LDR X22, [X22 + 0xE00]
	0x035AEB84 BLR X9
	0x035AEB88 MOV X1, X31
	0x035AEB8C BL 0x32EC1CC
	0x035AEB90 MOV X0, X19
	0x035AEB94 MOV X1, X31
	0x035AEB98 BL 0x32ED248
	0x035AEB9C MOV X19, X0
	0x035AEBA0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE33000
	005 Move X20, 0xB47000
	006 Move W8, [X19+89]
	007 Move X20, [X20+1120]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xB47000
	013 Move X0, [X0+1120]
	014 Call 0x1C17CF4
	015 Move X0, 0xB46000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+89], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Call 0x1C17D0C
	027 Move X8, [X0]
	028 Compare X8, 0
	029 JumpIfNotEqual {47}
	030 Move X8, 0xB46000
	031 Move X8, [X8+2288]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X19, X0
	036 Call StringBuilder..ctor, X0
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Call 0x1C17D0C
	044 Move [X0], X19
	045 Move X0, [X20]
	046 Call 0x1C17D0C
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X20]
	053 Call 0x1C17D0C
	054 Move X0, [X0]
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Return X0

Method: System.String Escape(System.String aText)

Disassembly:
	0x035AEBA4 MOV X1, X19
	0x035AEBA8 BL 0x35AE9A4
	0x035AEBAC MOV X20, X31
	0x035AEBB0 CBZ X19, 0x35AEC0C
	0x035AEBB4 LDR X8, [X19]
	0x035AEBB8 LDR X1, [X22]
	0x035AEBBC LDRH W9, [X8 + 0x12E]
	0x035AEBC0 CBZ X9, 0x35AEBE4
	0x035AEBC4 LDR X10, [X8 + 0xB0]
	0x035AEBC8 ADD X10, X10, 0x8
	0x035AEBCC LDUR X11, [X10 - 0x8]
	0x035AEBD0 CMP X11, X1
	0x035AEBD4 B.EQ 0x35AEBF4
	0x035AEBD8 SUBS X9, X9, 0x1
	0x035AEBDC ADD X10, X10, 0x10
	0x035AEBE0 B.NE 0x35AEBCC
	0x035AEBE4 MOV X0, X19
	0x035AEBE8 MOV W2, W31
	0x035AEBEC BL 0x1C5C788
	0x035AEBF0 B 0x35AEC00
	0x035AEBF4 LDRSW X9, [X10]
	0x035AEBF8 ADD X8, X8, X9, 0x4, LSL
	0x035AEBFC ADD X0, X8, 0x138
	0x035AEC00 LDP X8, X1, [X0]
	0x035AEC04 MOV X0, X19
	0x035AEC08 BLR X8
	0x035AEC0C CBNZ X20, 0x35AEC24
	0x035AEC10 LDP X20, X19, [X31 + 0x20]
	0x035AEC14 LDP X22, X21, [X31 + 0x10]
	0x035AEC18 LDR X30, [X31], #0x30
	0x035AEC1C RET
	0x035AEC20 BL 0x1C16F20
	0x035AEC24 MOV X0, X20
	0x035AEC28 BL 0x1C16F18
	0x035AEC2C CMP W1, 0x1
	0x035AEC30 MOV X21, X0
	0x035AEC34 B.NE 0x35AEC4C
	0x035AEC38 MOV X0, X21
	0x035AEC3C BL 0x3EB1AD0
	0x035AEC40 LDR X20, [X0]
	0x035AEC44 BL 0x3EB1AE0
	0x035AEC48 B 0x35AEBB0
	0x035AEC4C MOV X20, X31
	0x035AEC50 B 0x35AEC58
	0x035AEC54 MOV X21, X0
	0x035AEC58 CBZ X19, 0x35AECB4
	0x035AEC5C LDR X8, [X19]
	0x035AEC60 LDR X1, [X22]
	0x035AEC64 LDRH W9, [X8 + 0x12E]
	0x035AEC68 CBZ X9, 0x35AEC8C
	0x035AEC6C LDR X10, [X8 + 0xB0]
	0x035AEC70 ADD X10, X10, 0x8
	0x035AEC74 LDUR X11, [X10 - 0x8]
	0x035AEC78 CMP X11, X1
	0x035AEC7C B.EQ 0x35AEC9C
	0x035AEC80 SUBS X9, X9, 0x1
	0x035AEC84 ADD X10, X10, 0x10
	0x035AEC88 B.NE 0x35AEC74
	0x035AEC8C MOV X0, X19
	0x035AEC90 MOV W2, W31
	0x035AEC94 BL 0x1C5C788
	0x035AEC98 B 0x35AECA8
	0x035AEC9C LDRSW X9, [X10]
	0x035AECA0 ADD X8, X8, X9, 0x4, LSL
	0x035AECA4 ADD X0, X8, 0x138
	0x035AECA8 LDP X8, X1, [X0]
	0x035AECAC MOV X0, X19
	0x035AECB0 BLR X8
	0x035AECB4 CBNZ X20, 0x35AECC0
	0x035AECB8 MOV X0, X21
	0x035AECBC BL 0x1D2C690
	0x035AECC0 MOV X0, X20
	0x035AECC4 BL 0x1C16F18
	0x035AECC8 BL 0x1990590
	0x035AECCC STR X30, [X31 - 0x30]!
	0x035AECD0 STP X22, X21, [X31 + 0x10]
	0x035AECD4 STP X20, X19, [X31 + 0x20]
	0x035AECD8 ADRP X21, 0xE32000
	0x035AECDC ADRP X19, 0xB4D000
	0x035AECE0 LDRB W8, [X21 + 0x5F]
	0x035AECE4 LDR X19, [X19 + 0x558]
	0x035AECE8 MOV X20, X0
	0x035AECEC TBNZ X8, 0x0, 0x35AED1C
	0x035AECF0 ADRP X0, 0xB4E000
	0x035AECF4 LDR X0, [X0 + 0x9E8]
	0x035AECF8 BL 0x1C16CF4
	0x035AECFC ADRP X0, 0xB45000
	0x035AED00 LDR X0, [X0 + 0xE00]
	0x035AED04 BL 0x1C16CF4
	0x035AED08 ADRP X0, 0xB4D000
	0x035AED0C LDR X0, [X0 + 0x558]
	0x035AED10 BL 0x1C16CF4
	0x035AED14 MOVZ W8, 0x1
	0x035AED18 STRB W8, [X21 + 0x5F]
	0x035AED1C LDR X0, [X19]
	0x035AED20 ADRP X22, 0xB45000
	0x035AED24 LDR X22, [X22 + 0xE00]
	0x035AED28 BL 0x1C16F10
	0x035AED2C MOV X1, X31
	0x035AED30 MOV X19, X0
	0x035AED34 BL 0x32E23B4
	0x035AED38 MOV X0, X20
	0x035AED3C MOV X1, X19
	0x035AED40 BL 0x35AE9A4
	0x035AED44 CBZ X19, 0x35AEE1C
	0x035AED48 LDR X8, [X19]
	0x035AED4C LDR X9, [X8 + 0x208]
	0x035AED50 LDR X2, [X8 + 0x210]
	0x035AED54 MOV X0, X19
	0x035AED58 MOV X1, X31
	0x035AED5C BLR X9
	0x035AED60 LDR X8, [X19]
	0x035AED64 LDR X1, [X8 + 0x400]
	0x035AED68 LDR X9, [X8 + 0x3F8]
	0x035AED6C MOV X0, X19
	0x035AED70 BLR X9
	0x035AED74 ADRP X8, 0xB4E000
	0x035AED78 LDR X8, [X8 + 0x9E8]
	0x035AED7C MOV X20, X0
	0x035AED80 LDR X0, [X8]
	0x035AED84 LDR W8, [X0 + 0xE0]
	0x035AED88 CBNZ W8, 0x35AED90
	0x035AED8C BL 0x1C16DFC
	0x035AED90 MOV X0, X20
	0x035AED94 MOV X1, X31
	0x035AED98 BL 0x33225A0
	0x035AED9C MOV X21, X0
	0x035AEDA0 MOV X20, X31
	0x035AEDA4 LDR X8, [X19]
	0x035AEDA8 LDR X1, [X22]
	0x035AEDAC LDRH W9, [X8 + 0x12E]
	0x035AEDB0 CBZ X9, 0x35AEDD4
	0x035AEDB4 LDR X10, [X8 + 0xB0]
	0x035AEDB8 ADD X10, X10, 0x8
	0x035AEDBC LDUR X11, [X10 - 0x8]
	0x035AEDC0 CMP X11, X1
	0x035AEDC4 B.EQ 0x35AEDE4
	0x035AEDC8 SUBS X9, X9, 0x1
	0x035AEDCC ADD X10, X10, 0x10
	0x035AEDD0 B.NE 0x35AEDBC
	0x035AEDD4 MOV X0, X19
	0x035AEDD8 MOV W2, W31
	0x035AEDDC BL 0x1C5C788
	0x035AEDE0 B 0x35AEDF0
	0x035AEDE4 LDRSW X9, [X10]
	0x035AEDE8 ADD X8, X8, X9, 0x4, LSL
	0x035AEDEC ADD X0, X8, 0x138
	0x035AEDF0 LDP X8, X1, [X0]
	0x035AEDF4 MOV X0, X19
	0x035AEDF8 BLR X8
	0x035AEDFC CBNZ X20, 0x35AEE14
	0x035AEE00 MOV X0, X21
	0x035AEE04 LDP X20, X19, [X31 + 0x20]
	0x035AEE08 LDP X22, X21, [X31 + 0x10]
	0x035AEE0C LDR X30, [X31], #0x30
	0x035AEE10 RET
	0x035AEE14 MOV X0, X20
	0x035AEE18 BL 0x1C16F18
	0x035AEE1C BL 0x1C16F20
	0x035AEE20 B 0x35AEE2C
	0x035AEE24 B 0x35AEE2C
	0x035AEE28 B 0x35AEE2C
	0x035AEE2C MOV X21, X0
	0x035AEE30 CMP W1, 0x1
	0x035AEE34 B.NE 0x35AEE54
	0x035AEE38 MOV X0, X21
	0x035AEE3C BL 0x3EB1AD0
	0x035AEE40 LDR X20, [X0]
	0x035AEE44 BL 0x3EB1AE0
	0x035AEE48 MOV X21, X31
	0x035AEE4C CBNZ X19, 0x35AEDA4
	0x035AEE50 B 0x35AEDFC
	0x035AEE54 MOV X20, X31
	0x035AEE58 B 0x35AEE60
	0x035AEE5C MOV X21, X0
	0x035AEE60 CBZ X19, 0x35AEEBC
	0x035AEE64 LDR X8, [X19]
	0x035AEE68 LDR X1, [X22]
	0x035AEE6C LDRH W9, [X8 + 0x12E]
	0x035AEE70 CBZ X9, 0x35AEE94
	0x035AEE74 LDR X10, [X8 + 0xB0]
	0x035AEE78 ADD X10, X10, 0x8
	0x035AEE7C LDUR X11, [X10 - 0x8]
	0x035AEE80 CMP X11, X1
	0x035AEE84 B.EQ 0x35AEEA4
	0x035AEE88 SUBS X9, X9, 0x1
	0x035AEE8C ADD X10, X10, 0x10
	0x035AEE90 B.NE 0x35AEE7C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0xE33000
	015 Move X21, 0xB47000
	016 Move W8, [X20+90]
	017 Move X21, [X21+1120]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0xB47000
	024 Move X0, [X0+1120]
	025 Call 0x1C17CF4
	026 Move X0, 0xB73000
	027 Move X0, [X0+2848]
	028 Call 0x1C17CF4
	029 Move X0, 0xB73000
	030 Move X0, [X0+2856]
	031 Call 0x1C17CF4
	032 Move X0, 0xB73000
	033 Move X0, [X0+2864]
	034 Call 0x1C17CF4
	035 Move X0, 0xB7A000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xB73000
	039 Move X0, [X0+2872]
	040 Call 0x1C17CF4
	041 Move X0, 0xB73000
	042 Move X0, [X0+2880]
	043 Call 0x1C17CF4
	044 Move X0, 0xB7C000
	045 Move X0, [X0+2816]
	046 Call 0x1C17CF4
	047 Move X0, 0xB8A000
	048 Move X0, [X0+1640]
	049 Call 0x1C17CF4
	050 Move X0, 0xB7A000
	051 Move X0, [X0+1192]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+90], W8
	055 Move X0, [X21]
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Call JSONNode.get_EscapeBuilder
	062 Compare X0, 0
	063 JumpIfEqual {195}
	064 Move W1, W31
	065 Move X2, X31
	066 Move X20, X0
	067 Call StringBuilder.set_Length, X0, X1
	068 Move X0, X20
	069 Move X1, X31
	070 Call StringBuilder.get_Capacity, X0
	071 Compare X19, 0
	072 JumpIfEqual {195}
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Move W9, 0x6667
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 Multiply X9, X8, X9
	077 Move X10, X9
	078 ShiftRight X10, 63
	079 And X10, X10, 0x7FFFFFFF
	080 NotImplemented "Instruction SBFM not yet implemented."
	081 Add W9, W9, W10
	082 Add W1, W9, W8
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X20
	085 Move X2, X31
	086 Call StringBuilder.set_Capacity, X0, X1
	087 Move W8, [X19+16]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X28, 0xB73000
	090 Move X29, 0xB73000
	091 Move X23, 0xB73000
	092 Move X24, 0xB73000
	093 Move X25, 0xB73000
	094 Move X27, 0xB47000
	095 Move X28, [X28+2848]
	096 Move X29, [X29+2864]
	097 Move X23, [X23+2856]
	098 Move X24, [X24+2872]
	099 Move X25, [X25+2880]
	100 Move X27, [X27+1120]
	101 Move X26, -44134400
	102 Move W21, W31
	103 Add X26, X26, 3566
	104 Move X0, X19
	105 Move W1, W21
	106 Move X2, X31
	107 Call String.get_Chars, X0, X1
	108 And W8, W0, 0xFFFF
	109 Subtract W9, W8, 8
	110 Move W22, W0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction ADR not yet implemented."
	113 Move W10, [X26]
	114 Add X8, X8, X10
	115 CallNoReturn X8
	116 Move X1, [X28]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, 0xB7A000
	120 Move X8, [X8+1192]
	121 And W8, W22, 0xFFFF
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, [X27]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X27]
	129 And W8, W22, 0xFFFF
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X8, [X0+184]
	132 Move W8, [X8]
	133 Compare W8, 0
	134 JumpIfEqual {166}
	135 Move X8, 0xB8A000
	136 Move X8, [X8+1640]
	137 Move X0, X20
	138 Move X2, X31
	139 NotImplemented "Instruction STRH not yet implemented."
	140 Move X1, [X8]
	141 Call StringBuilder.Append, X0, X1
	142 Move X8, 0xB7C000
	143 Move X8, [X8+2816]
	144 Move X22, X0
	145 Add X0, X31, 12
	146 Move X2, X31
	147 Move X1, [X8]
	148 Call UInt16.ToString, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {195}
	151 Move X1, X0
	152 Move X0, X22
	153 Move X1, [X29]
	154 Move X1, [X23]
	155 Move X1, [X24]
	156 Move X1, [X25]
	157 Move X8, 0xB7A000
	158 Move X8, [X8+2064]
	159 Move X1, [X8]
	160 Move X0, X20
	161 Move X2, X31
	162 Call StringBuilder.Append, X0, X1
	163 Move W8, [X19+16]
	164 Add W21, W21, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, X20
	167 Move W1, W22
	168 Move X2, X31
	169 Call StringBuilder.Append, X0, X1
	170 Move X8, [X20]
	171 Move X0, X20
	172 Move X9, [X8+360]
	173 Move X1, [X8+368]
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move X19, X0
	176 Move X0, X20
	177 Move W1, W31
	178 Move X2, X31
	179 Call StringBuilder.set_Length, X0, X1
	180 Move X0, X19
	181 Move X20, [X31+96]
	182 Move X19, [X31+104]
	183 Move X22, [X31+80]
	184 Move X21, [X31+88]
	185 Move X24, [X31+64]
	186 Move X23, [X31+72]
	187 Move X26, [X31+48]
	188 Move X25, [X31+56]
	189 Move X28, [X31+32]
	190 Move X27, [X31+40]
	191 Move X29, [X31+16]
	192 Move X30, [X31+24]
	193 Add X31, X31, 112
	194 Return X0
	195 Call 0x1C17F20

Method: SimpleJSON.JSONNode ParseElement(System.String token, System.Boolean quoted)

Disassembly:
	0x035AEE94 MOV X0, X19
	0x035AEE98 MOV W2, W31
	0x035AEE9C BL 0x1C5C788
	0x035AEEA0 B 0x35AEEB0
	0x035AEEA4 LDRSW X9, [X10]
	0x035AEEA8 ADD X8, X8, X9, 0x4, LSL
	0x035AEEAC ADD X0, X8, 0x138
	0x035AEEB0 LDP X8, X1, [X0]
	0x035AEEB4 MOV X0, X19
	0x035AEEB8 BLR X8
	0x035AEEBC CBNZ X20, 0x35AEEC8
	0x035AEEC0 MOV X0, X21
	0x035AEEC4 BL 0x1D2C690
	0x035AEEC8 MOV X0, X20
	0x035AEECC BL 0x1C16F18
	0x035AEED0 BL 0x1990590
	0x035AEED4 SUB X31, X31, 0x60
	0x035AEED8 STR D8, [X31 + 0x20]
	0x035AEEDC STP X30, X23, [X31 + 0x30]
	0x035AEEE0 STP X22, X21, [X31 + 0x40]
	0x035AEEE4 STP X20, X19, [X31 + 0x50]
	0x035AEEE8 ADRP X20, 0xE32000
	0x035AEEEC LDRB W8, [X20 + 0x60]
	0x035AEEF0 MOV X19, X0
	0x035AEEF4 TBNZ X8, 0x0, 0x35AEF54
	0x035AEEF8 ADRP X0, 0xB6F000
	0x035AEEFC LDR X0, [X0 + 0x370]
	0x035AEF00 BL 0x1C16CF4
	0x035AEF04 ADRP X0, 0xB89000
	0x035AEF08 LDR X0, [X0 + 0x660]
	0x035AEF0C BL 0x1C16CF4
	0x035AEF10 ADRP X0, 0xB46000
	0x035AEF14 LDR X0, [X0 + 0x460]
	0x035AEF18 BL 0x1C16CF4
	0x035AEF1C ADRP X0, 0xB89000
	0x035AEF20 LDR X0, [X0 + 0x648]
	0x035AEF24 BL 0x1C16CF4
	0x035AEF28 ADRP X0, 0xB6F000
	0x035AEF2C LDR X0, [X0 + 0x400]
	0x035AEF30 BL 0x1C16CF4
	0x035AEF34 ADRP X0, 0xB6D000
	0x035AEF38 LDR X0, [X0 + 0xBC0]
	0x035AEF3C BL 0x1C16CF4
	0x035AEF40 ADRP X0, 0xB89000
	0x035AEF44 LDR X0, [X0 + 0x650]
	0x035AEF48 BL 0x1C16CF4
	0x035AEF4C MOVZ W8, 0x1
	0x035AEF50 STRB W8, [X20 + 0x60]
	0x035AEF54 CBZ X19, 0x35AF1AC
	0x035AEF58 LDR X8, [X19]
	0x035AEF5C MOV X0, X19
	0x035AEF60 LDP X9, X1, [X8 + 0x1D8]
	0x035AEF64 BLR X9
	0x035AEF68 AND W20, W0, 0xFF
	0x035AEF6C SUB W8, W20, 0x1
	0x035AEF70 CMP W8, 0x5
	0x035AEF74 B.HI 0x35AF1B0
	0x035AEF78 ADRP X9, 0xFFFFFFFFFD5E8000
	0x035AEF7C ADD X9, X9, 0xDFC
	0x035AEF80 ADR X10, 0x10
	0x035AEF84 LDRB W11, [X9, X8, LSL]
	0x035AEF88 ADD X10, X10, X11, 0x2, LSL
	0x035AEF8C BR X10
	0x035AEF90 LDR X8, [X19]
	0x035AEF94 MOV X0, X19
	0x035AEF98 LDR X9, [X8 + 0x228]
	0x035AEF9C LDR X1, [X8 + 0x230]
	0x035AEFA0 BLR X9
	0x035AEFA4 ADRP X8, 0xB6F000
	0x035AEFA8 LDR X8, [X8 + 0x370]
	0x035AEFAC MOV W21, W0
	0x035AEFB0 LDR X8, [X8]
	0x035AEFB4 MOV X0, X8
	0x035AEFB8 BL 0x1C16F10
	0x035AEFBC MOV X20, X0
	0x035AEFC0 BL 0x35AE904
	0x035AEFC4 CMP W21, 0x1
	0x035AEFC8 B.LT 0x35AF190
	0x035AEFCC ADRP X22, 0xB46000
	0x035AEFD0 LDR X22, [X22 + 0x460]
	0x035AEFD4 LDR X0, [X22]
	0x035AEFD8 LDR W8, [X0 + 0xE0]
	0x035AEFDC CBNZ W8, 0x35AEFE4
	0x035AEFE0 BL 0x1C16DFC
	0x035AEFE4 MOV X0, X19
	0x035AEFE8 BL 0x35AEED4
	0x035AEFEC CBZ X20, 0x35AF1AC
	0x035AEFF0 LDR X8, [X20]
	0x035AEFF4 MOV X1, X0
	0x035AEFF8 MOV X0, X20
	0x035AEFFC LDR X9, [X8 + 0x288]
	0x035AF000 LDR X2, [X8 + 0x290]
	0x035AF004 BLR X9
	0x035AF008 SUBS W21, W21, 0x1
	0x035AF00C B.NE 0x35AEFD4
	0x035AF010 B 0x35AF190
	0x035AF014 LDR X8, [X19]
	0x035AF018 MOV X0, X19
	0x035AF01C LDR X9, [X8 + 0x228]
	0x035AF020 LDR X1, [X8 + 0x230]
	0x035AF024 BLR X9
	0x035AF028 ADRP X8, 0xB6C000
	0x035AF02C LDR X8, [X8 + 0xBC0]
	0x035AF030 MOV W21, W0
	0x035AF034 LDR X8, [X8]
	0x035AF038 MOV X0, X8
	0x035AF03C BL 0x1C16F10
	0x035AF040 MOV X20, X0
	0x035AF044 BL 0x35AE864
	0x035AF048 CMP W21, 0x1
	0x035AF04C B.LT 0x35AF190
	0x035AF050 ADRP X23, 0xB45000
	0x035AF054 LDR X23, [X23 + 0x460]
	0x035AF058 LDR X8, [X19]
	0x035AF05C MOV X0, X19
	0x035AF060 LDR X9, [X8 + 0x298]
	0x035AF064 LDR X1, [X8 + 0x2A0]
	0x035AF068 BLR X9
	0x035AF06C LDR X8, [X23]
	0x035AF070 MOV X22, X0
	0x035AF074 LDR W9, [X8 + 0xE0]
	0x035AF078 CBNZ W9, 0x35AF084

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE33000
	007 Move W8, [X21+91]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xB48000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0xB47000
	018 Move X0, [X0+1120]
	019 Call 0x1C17CF4
	020 Move X0, 0xB8A000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0xB46000
	024 Move X0, [X0+2096]
	025 Call 0x1C17CF4
	026 Move X0, 0xB50000
	027 Move X0, [X0+4088]
	028 Call 0x1C17CF4
	029 Move X0, 0xB51000
	030 Move X0, [X0]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+91], W8
	034 Move [X31+8], X31
	035 Move TEMP, X20
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {41}
	039 Move X8, 0xB47000
	040 Move X8, [X8+1120]
	041 Compare X19, 0
	042 JumpIfEqual {145}
	043 Move W8, [X19+16]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0xB48000
	046 Move X8, [X8+3144]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call CultureInfo.get_InvariantCulture
	054 Move X2, X0
	055 Add X3, X31, 8
	056 Move W1, 167
	057 Move X0, X19
	058 Move X4, X31
	059 Call Double.TryParse, X0, X1, X2, X3
	060 Move X8, 0xB47000
	061 Move X8, [X8+1120]
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {74}
	066 Move X0, [X8]
	067 Move V8, [X31+8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move V0, V8
	073 Call JSONNode.op_Implicit, V0
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Call JSONNode.op_Implicit, X0
	081 Move X0, X19
	082 Move X1, X31
	083 Call String.ToLower, X0
	084 Move X8, 0xB50000
	085 Move X8, [X8+4088]
	086 Move X2, X31
	087 Move X20, X0
	088 Move X1, [X8]
	089 Call String.op_Equality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {104}
	094 Move X8, 0xB51000
	095 Move X8, [X8]
	096 Move X0, X20
	097 Move X2, X31
	098 Move X1, [X8]
	099 Call String.op_Equality, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {127}
	104 Move X8, 0xB51000
	105 Move X8, [X8]
	106 Move X0, X20
	107 Move X2, X31
	108 Move X1, [X8]
	109 Call String.op_Equality, X0, X1
	110 Move X8, 0xB46000
	111 Move X8, [X8+1120]
	112 Move W19, W0
	113 Move X8, [X8]
	114 Move W9, [X8+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X8
	118 Call 0x1C17DFC
	119 And W0, W19, 1
	120 Call JSONNode.op_Implicit, X0
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X30, [X31+16]
	124 Move X21, [X31+24]
	125 Move V8, [X31+48]
	126 Return X0
	127 Move X8, 0xB45000
	128 Move X8, [X8+2096]
	129 Move X0, X20
	130 Move X2, X31
	131 Move X1, [X8]
	132 Call String.op_Equality, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {45}
	137 Move X8, 0xB89000
	138 Move X8, [X8+1608]
	139 Move X0, [X8]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Call JSONNull.CreateOrGet
	145 Call 0x1C17F20

Method: SimpleJSON.JSONNode Parse(System.String aJSON)

Disassembly:
	0x035AF07C MOV X0, X8
	0x035AF080 BL 0x1C16DFC
	0x035AF084 MOV X0, X19
	0x035AF088 BL 0x35AEED4
	0x035AF08C CBZ X20, 0x35AF1AC
	0x035AF090 LDR X8, [X20]
	0x035AF094 MOV X2, X0
	0x035AF098 MOV X0, X20
	0x035AF09C MOV X1, X22
	0x035AF0A0 LDR X9, [X8 + 0x278]
	0x035AF0A4 LDR X3, [X8 + 0x280]
	0x035AF0A8 BLR X9
	0x035AF0AC SUBS W21, W21, 0x1
	0x035AF0B0 B.NE 0x35AF058
	0x035AF0B4 B 0x35AF190
	0x035AF0B8 LDR X8, [X19]
	0x035AF0BC MOV X0, X19
	0x035AF0C0 LDR X9, [X8 + 0x298]
	0x035AF0C4 LDR X1, [X8 + 0x2A0]
	0x035AF0C8 BLR X9
	0x035AF0CC ADRP X8, 0xB88000
	0x035AF0D0 LDR X8, [X8 + 0x650]
	0x035AF0D4 MOV X19, X0
	0x035AF0D8 LDR X8, [X8]
	0x035AF0DC MOV X0, X8
	0x035AF0E0 BL 0x1C16F10
	0x035AF0E4 MOV X1, X19
	0x035AF0E8 MOV X20, X0
	0x035AF0EC BL 0x35ACFF8
	0x035AF0F0 B 0x35AF190
	0x035AF0F4 LDR X8, [X19]
	0x035AF0F8 MOV X0, X19
	0x035AF0FC LDR X9, [X8 + 0x278]
	0x035AF100 LDR X1, [X8 + 0x280]
	0x035AF104 BLR X9
	0x035AF108 ADRP X8, 0xB6E000
	0x035AF10C LDR X8, [X8 + 0x400]
	0x035AF110 MOV V8.16B, V0.16B
	0x035AF114 LDR X0, [X8]
	0x035AF118 BL 0x1C16F10
	0x035AF11C MOV V0.16B, V8.16B
	0x035AF120 MOV X20, X0
	0x035AF124 BL 0x35AD340
	0x035AF128 B 0x35AF190
	0x035AF12C ADRP X8, 0xB88000
	0x035AF130 LDR X8, [X8 + 0x648]
	0x035AF134 LDR X0, [X8]
	0x035AF138 LDR W8, [X0 + 0xE0]
	0x035AF13C CBNZ W8, 0x35AF144
	0x035AF140 BL 0x1C16DFC
	0x035AF144 LDP X20, X19, [X31 + 0x50]
	0x035AF148 LDP X22, X21, [X31 + 0x40]
	0x035AF14C LDP X30, X23, [X31 + 0x30]
	0x035AF150 LDR V8, [X31 + 0x20]
	0x035AF154 ADD X31, X31, 0x60
	0x035AF158 B 0x35AD064
	0x035AF15C LDR X8, [X19]
	0x035AF160 MOV X0, X19
	0x035AF164 LDP X9, X1, [X8 + 0x1C8]
	0x035AF168 BLR X9
	0x035AF16C ADRP X8, 0xB88000
	0x035AF170 LDR X8, [X8 + 0x660]
	0x035AF174 MOV W19, W0
	0x035AF178 LDR X8, [X8]
	0x035AF17C MOV X0, X8
	0x035AF180 BL 0x1C16F10
	0x035AF184 AND W1, W19, 0x1
	0x035AF188 MOV X20, X0
	0x035AF18C BL 0x35AD928
	0x035AF190 MOV X0, X20
	0x035AF194 LDP X20, X19, [X31 + 0x50]
	0x035AF198 LDP X22, X21, [X31 + 0x40]
	0x035AF19C LDP X30, X23, [X31 + 0x30]
	0x035AF1A0 LDR V8, [X31 + 0x20]
	0x035AF1A4 ADD X31, X31, 0x60
	0x035AF1A8 RET
	0x035AF1AC BL 0x1C16F20
	0x035AF1B0 ADRP X0, 0xB88000
	0x035AF1B4 LDR X0, [X0 + 0x700]
	0x035AF1B8 BL 0x1C16D08
	0x035AF1BC MOVN X8, 0x0
	0x035AF1C0 STP X0, X8, [X31 + 0x8]
	0x035AF1C4 ADD X0, X31, 0x8
	0x035AF1C8 MOV X1, X31
	0x035AF1CC STR W20, [X31 + 0x18]
	0x035AF1D0 BL 0x33B162C
	0x035AF1D4 MOV X19, X0
	0x035AF1D8 ADRP X0, 0xB88000
	0x035AF1DC LDR X0, [X0 + 0x708]
	0x035AF1E0 BL 0x1C16D08
	0x035AF1E4 MOV X1, X19
	0x035AF1E8 MOV X2, X31
	0x035AF1EC BL 0x321B938
	0x035AF1F0 MOV X19, X0
	0x035AF1F4 ADRP X0, 0xB44000
	0x035AF1F8 LDR X0, [X0 + 0x7D0]
	0x035AF1FC BL 0x1C16D08
	0x035AF200 BL 0x1C16F10
	0x035AF204 MOV X1, X19
	0x035AF208 MOV X2, X31
	0x035AF20C MOV X20, X0
	0x035AF210 BL 0x33B2C70
	0x035AF214 ADRP X0, 0xB88000
	0x035AF218 LDR X0, [X0 + 0x710]
	0x035AF21C BL 0x1C16D08
	0x035AF220 MOV X1, X0
	0x035AF224 MOV X0, X20
	0x035AF228 BL 0x1C16DEC
	0x035AF22C STP X30, X19, [X31 - 0x10]!
	0x035AF230 ADRP X0, 0xB44000
	0x035AF234 LDR X0, [X0 + 0x7D0]
	0x035AF238 BL 0x1C16D08
	0x035AF23C BL 0x1C16F10
	0x035AF240 MOV X19, X0
	0x035AF244 ADRP X0, 0xB88000
	0x035AF248 LDR X0, [X0 + 0x6D8]
	0x035AF24C BL 0x1C16D08
	0x035AF250 MOV X1, X0
	0x035AF254 MOV X0, X19
	0x035AF258 MOV X2, X31
	0x035AF25C BL 0x33B2C70
	0x035AF260 ADRP X0, 0xB88000
	0x035AF264 LDR X0, [X0 + 0x718]
	0x035AF268 BL 0x1C16D08
	0x035AF26C MOV X1, X0
	0x035AF270 MOV X0, X19
	0x035AF274 BL 0x1C16DEC
	0x035AF278 STP X30, X19, [X31 - 0x10]!
	0x035AF27C ADRP X0, 0xB44000
	0x035AF280 LDR X0, [X0 + 0x7D0]
	0x035AF284 BL 0x1C16D08
	0x035AF288 BL 0x1C16F10
	0x035AF28C MOV X19, X0
	0x035AF290 ADRP X0, 0xB88000
	0x035AF294 LDR X0, [X0 + 0x6D8]
	0x035AF298 BL 0x1C16D08
	0x035AF29C MOV X1, X0
	0x035AF2A0 MOV X0, X19
	0x035AF2A4 MOV X2, X31
	0x035AF2A8 BL 0x33B2C70
	0x035AF2AC ADRP X0, 0xB88000
	0x035AF2B0 LDR X0, [X0 + 0x720]
	0x035AF2B4 BL 0x1C16D08
	0x035AF2B8 MOV X1, X0
	0x035AF2BC MOV X0, X19
	0x035AF2C0 BL 0x1C16DEC
	0x035AF2C4 STP X30, X19, [X31 - 0x10]!
	0x035AF2C8 ADRP X0, 0xB44000
	0x035AF2CC LDR X0, [X0 + 0x7D0]
	0x035AF2D0 BL 0x1C16D08
	0x035AF2D4 BL 0x1C16F10
	0x035AF2D8 MOV X19, X0
	0x035AF2DC ADRP X0, 0xB88000
	0x035AF2E0 LDR X0, [X0 + 0x6D8]
	0x035AF2E4 BL 0x1C16D08
	0x035AF2E8 MOV X1, X0
	0x035AF2EC MOV X0, X19
	0x035AF2F0 MOV X2, X31
	0x035AF2F4 BL 0x33B2C70
	0x035AF2F8 ADRP X0, 0xB88000
	0x035AF2FC LDR X0, [X0 + 0x728]
	0x035AF300 BL 0x1C16D08
	0x035AF304 MOV X1, X0
	0x035AF308 MOV X0, X19
	0x035AF30C BL 0x1C16DEC
	0x035AF310 STR X30, [X31 - 0x30]!
	0x035AF314 STP X22, X21, [X31 + 0x10]
	0x035AF318 STP X20, X19, [X31 + 0x20]
	0x035AF31C ADRP X22, 0xE31000
	0x035AF320 ADRP X19, 0xB76000
	0x035AF324 ADRP X21, 0xB45000
	0x035AF328 LDRB W8, [X22 + 0x61]
	0x035AF32C LDR X19, [X19 + 0x208]
	0x035AF330 LDR X21, [X21 + 0x460]
	0x035AF334 MOV X20, X0
	0x035AF338 TBNZ X8, 0x0, 0x35AF368
	0x035AF33C ADRP X0, 0xB76000
	0x035AF340 LDR X0, [X0 + 0x208]
	0x035AF344 BL 0x1C16CF4
	0x035AF348 ADRP X0, 0xB44000
	0x035AF34C LDR X0, [X0 + 0xE00]
	0x035AF350 BL 0x1C16CF4
	0x035AF354 ADRP X0, 0xB45000
	0x035AF358 LDR X0, [X0 + 0x460]
	0x035AF35C BL 0x1C16CF4
	0x035AF360 MOVZ W8, 0x1
	0x035AF364 STRB W8, [X22 + 0x61]
	0x035AF368 LDR X0, [X19]
	0x035AF36C ADRP X22, 0xB44000
	0x035AF370 LDR X22, [X22 + 0xE00]
	0x035AF374 BL 0x1C16F10
	0x035AF378 MOV X1, X20
	0x035AF37C MOV X2, X31
	0x035AF380 MOV X19, X0
	0x035AF384 BL 0x32F5054
	0x035AF388 LDR X0, [X21]
	0x035AF38C LDR W8, [X0 + 0xE0]
	0x035AF390 CBNZ W8, 0x35AF398
	0x035AF394 BL 0x1C16DFC
	0x035AF398 MOV X0, X19
	0x035AF39C BL 0x35AEED4
	0x035AF3A0 MOV X21, X0
	0x035AF3A4 MOV X20, X31
	0x035AF3A8 CBZ X19, 0x35AF404
	0x035AF3AC LDR X8, [X19]
	0x035AF3B0 LDR X1, [X22]
	0x035AF3B4 LDRH W9, [X8 + 0x12E]
	0x035AF3B8 CBZ X9, 0x35AF3DC
	0x035AF3BC LDR X10, [X8 + 0xB0]
	0x035AF3C0 ADD X10, X10, 0x8
	0x035AF3C4 LDUR X11, [X10 - 0x8]
	0x035AF3C8 CMP X11, X1
	0x035AF3CC B.EQ 0x35AF3EC
	0x035AF3D0 SUBS X9, X9, 0x1
	0x035AF3D4 ADD X10, X10, 0x10
	0x035AF3D8 B.NE 0x35AF3C4
	0x035AF3DC MOV X0, X19
	0x035AF3E0 MOV W2, W31
	0x035AF3E4 BL 0x1C5C788
	0x035AF3E8 B 0x35AF3F8
	0x035AF3EC LDRSW X9, [X10]
	0x035AF3F0 ADD X8, X8, X9, 0x4, LSL
	0x035AF3F4 ADD X0, X8, 0x138
	0x035AF3F8 LDP X8, X1, [X0]
	0x035AF3FC MOV X0, X19
	0x035AF400 BLR X8
	0x035AF404 CBNZ X20, 0x35AF41C
	0x035AF408 MOV X0, X21
	0x035AF40C LDP X20, X19, [X31 + 0x20]
	0x035AF410 LDP X22, X21, [X31 + 0x10]
	0x035AF414 LDR X30, [X31], #0x30
	0x035AF418 RET
	0x035AF41C MOV X0, X20
	0x035AF420 BL 0x1C16F18
	0x035AF424 B 0x35AF428
	0x035AF428 MOV X21, X0
	0x035AF42C CMP W1, 0x1
	0x035AF430 B.NE 0x35AF450
	0x035AF434 MOV X0, X21
	0x035AF438 BL 0x3EB1AD0
	0x035AF43C LDR X20, [X0]
	0x035AF440 BL 0x3EB1AE0
	0x035AF444 MOV X21, X31
	0x035AF448 CBNZ X19, 0x35AF3AC
	0x035AF44C B 0x35AF404
	0x035AF450 MOV X20, X31
	0x035AF454 B 0x35AF45C
	0x035AF458 MOV X21, X0
	0x035AF45C CBZ X19, 0x35AF4B8
	0x035AF460 LDR X8, [X19]
	0x035AF464 LDR X1, [X22]
	0x035AF468 LDRH W9, [X8 + 0x12E]
	0x035AF46C CBZ X9, 0x35AF490
	0x035AF470 LDR X10, [X8 + 0xB0]
	0x035AF474 ADD X10, X10, 0x8
	0x035AF478 LDUR X11, [X10 - 0x8]
	0x035AF47C CMP X11, X1
	0x035AF480 B.EQ 0x35AF4A0
	0x035AF484 SUBS X9, X9, 0x1
	0x035AF488 ADD X10, X10, 0x10
	0x035AF48C B.NE 0x35AF478
	0x035AF490 MOV X0, X19
	0x035AF494 MOV W2, W31
	0x035AF498 BL 0x1C5C788
	0x035AF49C B 0x35AF4AC
	0x035AF4A0 LDRSW X9, [X10]
	0x035AF4A4 ADD X8, X8, X9, 0x4, LSL
	0x035AF4A8 ADD X0, X8, 0x138
	0x035AF4AC LDP X8, X1, [X0]
	0x035AF4B0 MOV X0, X19
	0x035AF4B4 BLR X8
	0x035AF4B8 CBNZ X20, 0x35AF4C4
	0x035AF4BC MOV X0, X21
	0x035AF4C0 BL 0x1D2C690
	0x035AF4C4 MOV X0, X20
	0x035AF4C8 BL 0x1C16F18
	0x035AF4CC BL 0x1990590
	0x035AF4D0 STR X30, [X31 - 0x30]!
	0x035AF4D4 STP X22, X21, [X31 + 0x10]
	0x035AF4D8 STP X20, X19, [X31 + 0x20]
	0x035AF4DC ADRP X21, 0xE31000
	0x035AF4E0 ADRP X20, 0xB45000
	0x035AF4E4 LDRB W8, [X21 + 0x62]
	0x035AF4E8 LDR X20, [X20 + 0x460]
	0x035AF4EC MOV X19, X0
	0x035AF4F0 TBNZ X8, 0x0, 0x35AF514
	0x035AF4F4 ADRP X0, 0xB44000
	0x035AF4F8 LDR X0, [X0 + 0xE00]
	0x035AF4FC BL 0x1C16CF4
	0x035AF500 ADRP X0, 0xB45000
	0x035AF504 LDR X0, [X0 + 0x460]
	0x035AF508 BL 0x1C16CF4
	0x035AF50C MOVZ W8, 0x1
	0x035AF510 STRB W8, [X21 + 0x62]
	0x035AF514 ADRP X22, 0xB44000
	0x035AF518 LDR X22, [X22 + 0xE00]
	0x035AF51C MOV X0, X19
	0x035AF520 MOV X1, X31
	0x035AF524 BL 0x32ED1E0
	0x035AF528 LDR X8, [X20]
	0x035AF52C MOV X19, X0
	0x035AF530 LDR W9, [X8 + 0xE0]
	0x035AF534 CBNZ W9, 0x35AF540
	0x035AF538 MOV X0, X8
	0x035AF53C BL 0x1C16DFC
	0x035AF540 MOV X0, X19
	0x035AF544 BL 0x35AF310
	0x035AF548 MOV X21, X0
	0x035AF54C MOV X20, X31
	0x035AF550 CBZ X19, 0x35AF5AC
	0x035AF554 LDR X8, [X19]
	0x035AF558 LDR X1, [X22]
	0x035AF55C LDRH W9, [X8 + 0x12E]
	0x035AF560 CBZ X9, 0x35AF584
	0x035AF564 LDR X10, [X8 + 0xB0]
	0x035AF568 ADD X10, X10, 0x8
	0x035AF56C LDUR X11, [X10 - 0x8]
	0x035AF570 CMP X11, X1
	0x035AF574 B.EQ 0x35AF594
	0x035AF578 SUBS X9, X9, 0x1
	0x035AF57C ADD X10, X10, 0x10
	0x035AF580 B.NE 0x35AF56C
	0x035AF584 MOV X0, X19
	0x035AF588 MOV W2, W31
	0x035AF58C BL 0x1C5C788
	0x035AF590 B 0x35AF5A0
	0x035AF594 LDRSW X9, [X10]
	0x035AF598 ADD X8, X8, X9, 0x4, LSL
	0x035AF59C ADD X0, X8, 0x138
	0x035AF5A0 LDP X8, X1, [X0]
	0x035AF5A4 MOV X0, X19
	0x035AF5A8 BLR X8
	0x035AF5AC CBNZ X20, 0x35AF5C4
	0x035AF5B0 MOV X0, X21
	0x035AF5B4 LDP X20, X19, [X31 + 0x20]
	0x035AF5B8 LDP X22, X21, [X31 + 0x10]
	0x035AF5BC LDR X30, [X31], #0x30
	0x035AF5C0 RET
	0x035AF5C4 MOV X0, X20
	0x035AF5C8 BL 0x1C16F18
	0x035AF5CC B 0x35AF5D0
	0x035AF5D0 MOV X21, X0
	0x035AF5D4 CMP W1, 0x1
	0x035AF5D8 B.NE 0x35AF5F8
	0x035AF5DC MOV X0, X21
	0x035AF5E0 BL 0x3EB1AD0
	0x035AF5E4 LDR X20, [X0]
	0x035AF5E8 BL 0x3EB1AE0
	0x035AF5EC MOV X21, X31
	0x035AF5F0 CBNZ X19, 0x35AF554
	0x035AF5F4 B 0x35AF5AC
	0x035AF5F8 MOV X20, X31
	0x035AF5FC B 0x35AF604
	0x035AF600 MOV X21, X0
	0x035AF604 CBZ X19, 0x35AF660
	0x035AF608 LDR X8, [X19]
	0x035AF60C LDR X1, [X22]
	0x035AF610 LDRH W9, [X8 + 0x12E]
	0x035AF614 CBZ X9, 0x35AF638
	0x035AF618 LDR X10, [X8 + 0xB0]
	0x035AF61C ADD X10, X10, 0x8
	0x035AF620 LDUR X11, [X10 - 0x8]
	0x035AF624 CMP X11, X1
	0x035AF628 B.EQ 0x35AF648
	0x035AF62C SUBS X9, X9, 0x1
	0x035AF630 ADD X10, X10, 0x10
	0x035AF634 B.NE 0x35AF620
	0x035AF638 MOV X0, X19
	0x035AF63C MOV W2, W31
	0x035AF640 BL 0x1C5C788
	0x035AF644 B 0x35AF654
	0x035AF648 LDRSW X9, [X10]
	0x035AF64C ADD X8, X8, X9, 0x4, LSL
	0x035AF650 ADD X0, X8, 0x138
	0x035AF654 LDP X8, X1, [X0]
	0x035AF658 MOV X0, X19
	0x035AF65C BLR X8
	0x035AF660 CBNZ X20, 0x35AF66C
	0x035AF664 MOV X0, X21
	0x035AF668 BL 0x1D2C690
	0x035AF66C MOV X0, X20
	0x035AF670 BL 0x1C16F18
	0x035AF674 BL 0x1990590
	0x035AF678 STP X30, X21, [X31 - 0x20]!
	0x035AF67C STP X20, X19, [X31 + 0x10]
	0x035AF680 ADRP X21, 0xE31000
	0x035AF684 ADRP X20, 0xB4D000
	0x035AF688 LDRB W8, [X21 + 0x63]
	0x035AF68C LDR X20, [X20 + 0x9E8]
	0x035AF690 MOV X19, X0
	0x035AF694 TBNZ X8, 0x0, 0x35AF6C4
	0x035AF698 ADRP X0, 0xB4D000
	0x035AF69C LDR X0, [X0 + 0x9E8]
	0x035AF6A0 BL 0x1C16CF4
	0x035AF6A4 ADRP X0, 0xB45000
	0x035AF6A8 LDR X0, [X0 + 0x460]
	0x035AF6AC BL 0x1C16CF4
	0x035AF6B0 ADRP X0, 0xB4C000
	0x035AF6B4 LDR X0, [X0 + 0x558]
	0x035AF6B8 BL 0x1C16CF4
	0x035AF6BC MOVZ W8, 0x1
	0x035AF6C0 STRB W8, [X21 + 0x63]
	0x035AF6C4 LDR X0, [X20]
	0x035AF6C8 ADRP X20, 0xB4C000
	0x035AF6CC LDR W8, [X0 + 0xE0]
	0x035AF6D0 LDR X20, [X20 + 0x558]
	0x035AF6D4 CBNZ W8, 0x35AF6DC
	0x035AF6D8 BL 0x1C16DFC
	0x035AF6DC MOV X0, X19
	0x035AF6E0 MOV X1, X31
	0x035AF6E4 BL 0x3322D04
	0x035AF6E8 LDR X8, [X20]
	0x035AF6EC MOV X20, X0
	0x035AF6F0 MOV X0, X8
	0x035AF6F4 BL 0x1C16F10
	0x035AF6F8 MOV X1, X20
	0x035AF6FC MOV X2, X31
	0x035AF700 MOV X19, X0
	0x035AF704 BL 0x32E2528
	0x035AF708 CBZ X19, 0x35AF74C
	0x035AF70C LDR X8, [X19]
	0x035AF710 ADRP X20, 0xB45000
	0x035AF714 MOV X0, X19
	0x035AF718 MOV X1, X31
	0x035AF71C LDR X9, [X8 + 0x208]
	0x035AF720 LDR X2, [X8 + 0x210]
	0x035AF724 LDR X20, [X20 + 0x460]
	0x035AF728 BLR X9
	0x035AF72C LDR X0, [X20]
	0x035AF730 LDR W8, [X0 + 0xE0]
	0x035AF734 CBNZ W8, 0x35AF73C
	0x035AF738 BL 0x1C16DFC
	0x035AF73C MOV X0, X19
	0x035AF740 LDP X20, X19, [X31 + 0x10]
	0x035AF744 LDP X30, X21, [X31], #0x20
	0x035AF748 B 0x35AF310
	0x035AF74C BL 0x1C16F20
	0x035AF750 SUB X31, X31, 0x50
	0x035AF754 STR X30, [X31 + 0x20]
	0x035AF758 STP X22, X21, [X31 + 0x30]
	0x035AF75C STP X20, X19, [X31 + 0x40]
	0x035AF760 MRS X20, 0xC000
	0x035AF764 LDR X8, [X20 + 0x28]
	0x035AF768 ADRP X22, 0xE31000
	0x035AF76C ADRP X21, 0xB6C000
	0x035AF770 MOV X19, X0
	0x035AF774 STR X8, [X31 + 0x18]
	0x035AF778 LDRB W8, [X22 + 0x64]
	0x035AF77C LDR X21, [X21 + 0x5F0]
	0x035AF780 TBNZ X8, 0x0, 0x35AF798
	0x035AF784 ADRP X0, 0xB6C000
	0x035AF788 LDR X0, [X0 + 0x5F0]
	0x035AF78C BL 0x1C16CF4
	0x035AF790 MOVZ W8, 0x1
	0x035AF794 STRB W8, [X22 + 0x64]
	0x035AF798 STP X31, X31, [X31 + 0x8]
	0x035AF79C LDR X8, [X19]
	0x035AF7A0 MOV X0, X19
	0x035AF7A4 LDP X9, X1, [X8 + 0x1C8]
	0x035AF7A8 BLR X9
	0x035AF7AC LDR X8, [X21]
	0x035AF7B0 MOV X19, X0
	0x035AF7B4 LDR W9, [X8 + 0xE0]
	0x035AF7B8 CBNZ W9, 0x35AF7C4
	0x035AF7BC MOV X0, X8
	0x035AF7C0 BL 0x1C16DFC
	0x035AF7C4 ADD X1, X31, 0x8
	0x035AF7C8 MOV X0, X19
	0x035AF7CC MOV X2, X31
	0x035AF7D0 BL 0x33D78C4
	0x035AF7D4 LDP X8, X9, [X31 + 0x8]
	0x035AF7D8 LDR X10, [X20 + 0x28]
	0x035AF7DC LDR X11, [X31 + 0x18]
	0x035AF7E0 ANDS W31, W0, 0x1
	0x035AF7E4 CSEL X1, X9, X31, NE
	0x035AF7E8 CSEL X0, X8, X31, NE
	0x035AF7EC CMP X10, X11
	0x035AF7F0 B.NE 0x35AF808
	0x035AF7F4 LDP X20, X19, [X31 + 0x40]
	0x035AF7F8 LDP X22, X21, [X31 + 0x30]
	0x035AF7FC LDR X30, [X31 + 0x20]
	0x035AF800 ADD X31, X31, 0x50
	0x035AF804 RET
	0x035AF808 BL 0x3EB1B20
	0x035AF80C SUB X31, X31, 0x50
	0x035AF810 STR X30, [X31 + 0x20]
	0x035AF814 STP X22, X21, [X31 + 0x30]
	0x035AF818 STP X20, X19, [X31 + 0x40]
	0x035AF81C MRS X20, 0xC000
	0x035AF820 LDR X8, [X20 + 0x28]
	0x035AF824 ADRP X21, 0xE31000
	0x035AF828 ADRP X22, 0xB6C000
	0x035AF82C MOV X19, X0
	0x035AF830 STR X8, [X31 + 0x18]
	0x035AF834 STP X1, X2, [X31 + 0x8]
	0x035AF838 LDRB W8, [X21 + 0x65]
	0x035AF83C LDR X22, [X22 + 0x5F0]
	0x035AF840 TBNZ X8, 0x0, 0x35AF858
	0x035AF844 ADRP X0, 0xB6C000
	0x035AF848 LDR X0, [X0 + 0x5F0]
	0x035AF84C BL 0x1C16CF4
	0x035AF850 MOVZ W8, 0x1
	0x035AF854 STRB W8, [X21 + 0x65]
	0x035AF858 LDR X0, [X22]
	0x035AF85C LDR W8, [X0 + 0xE0]
	0x035AF860 CBNZ W8, 0x35AF868

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xE32000
	014 Move X23, 0xB89000
	015 Move X21, 0xB89000
	016 Move X20, 0xB45000
	017 Move W8, [X22+92]
	018 Move X23, [X23+1648]
	019 Move X21, [X21+1656]
	020 Move X20, [X20+2288]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {61}
	026 Move X0, 0xB6F000
	027 Move X0, [X0+880]
	028 Call 0x1C17CF4
	029 Move X0, 0xB46000
	030 Move X0, [X0+1120]
	031 Call 0x1C17CF4
	032 Move X0, 0xB6D000
	033 Move X0, [X0+3008]
	034 Call 0x1C17CF4
	035 Move X0, 0xB89000
	036 Move X0, [X0+1664]
	037 Call 0x1C17CF4
	038 Move X0, 0xB89000
	039 Move X0, [X0+1672]
	040 Call 0x1C17CF4
	041 Move X0, 0xB89000
	042 Move X0, [X0+1680]
	043 Call 0x1C17CF4
	044 Move X0, 0xB89000
	045 Move X0, [X0+1656]
	046 Call 0x1C17CF4
	047 Move X0, 0xB89000
	048 Move X0, [X0+1688]
	049 Call 0x1C17CF4
	050 Move X0, 0xB89000
	051 Move X0, [X0+1648]
	052 Call 0x1C17CF4
	053 Move X0, 0xB45000
	054 Move X0, [X0+2288]
	055 Call 0x1C17CF4
	056 Move X0, 0xB45000
	057 Move X0, [X0+2440]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X22+92], W8
	061 Move X0, [X23]
	062 Call 0x1C17F10
	063 Move X1, [X21]
	064 Move X21, X0
	065 Call Stack`1<Object>..ctor, X0
	066 Move X0, [X20]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X20, X0
	070 Call StringBuilder..ctor, X0
	071 Compare X19, 0
	072 JumpIfEqual {527}
	073 Move W8, [X19+16]
	074 Move X26, 0xB46000
	075 Move X26, [X26+1120]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0xB45000
	078 Move X8, [X8+2440]
	079 Move W27, W31
	080 Move W28, W31
	081 Move W29, W31
	082 Move X23, [X8]
	083 Move W24, W31
	084 Move X22, X31
	085 Move X0, X19
	086 Move W1, W24
	087 Move X2, X31
	088 Call String.get_Chars, X0, X1
	089 And W8, W0, 0xFFFF
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 And W8, W0, 0xFFFF
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 And W8, W0, 0xFFFF
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move TEMP, X29
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {376}
	105 Move X8, 0xB6F000
	106 Move X8, [X8+880]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X25, X0
	110 Call JSONArray..ctor, X0
	111 Compare X21, 0
	112 JumpIfNotEqual {174}
	113 And W8, W0, 0xFFFF
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, [X26]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X26]
	123 Move X8, [X0+184]
	124 Move W8, [X8+2]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSET not yet implemented."
	127 Or W8, W29, W8
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {316}
	132 Move W8, [X19+16]
	133 Add W1, W24, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X19
	136 Move X2, X31
	137 Call String.get_Chars, X0, X1
	138 And W8, W0, 0xFFFF
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add W8, W24, 1
	141 Move W9, [X19+16]
	142 Move W24, W8
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X19
	145 Move W1, W24
	146 Move X2, X31
	147 Call String.get_Chars, X0, X1
	148 And W8, W0, 0xFFFF
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, X19
	151 Move W1, W24
	152 Move X2, X31
	153 Call String.get_Chars, X0, X1
	154 And W8, W0, 0xFFFF
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add W8, W24, 1
	157 And W8, W0, 0xFFFF
	158 Move W9, 0xFEFF
	159 NotImplemented "Instruction CMP not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move TEMP, X29
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {376}
	166 Move X8, 0xB6D000
	167 Move X8, [X8+3008]
	168 Move X0, [X8]
	169 Call 0x1C17F10
	170 Move X25, X0
	171 Call JSONObject..ctor, X0
	172 Compare X21, 0
	173 JumpIfEqual {527}
	174 Move X8, 0xB89000
	175 Move X8, [X8+1680]
	176 Move X0, X21
	177 Move X1, X25
	178 Move X2, [X8]
	179 Call Stack`1<Object>.Push, X0, X1
	180 Move X0, [X26]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X22
	186 Move X1, X31
	187 Call JSONNode.op_Inequality, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {206}
	192 Move X8, 0xB89000
	193 Move X8, [X8+1664]
	194 Move X0, X21
	195 Move X1, [X8]
	196 Call Stack`1<Object>.Peek, X0
	197 Compare X22, 0
	198 JumpIfEqual {527}
	199 Move X8, [X22]
	200 Move X2, X0
	201 Move X0, X22
	202 Move X1, X23
	203 Move X9, [X8+632]
	204 Move X3, [X8+640]
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Compare X20, 0
	207 JumpIfEqual {527}
	208 Move X8, 0xB45000
	209 Move X8, [X8+2440]
	210 Move X0, X20
	211 Move W1, W31
	212 Move X2, X31
	213 Move X23, [X8]
	214 Call StringBuilder.set_Length, X0, X1
	215 Move X8, 0xB89000
	216 Move X8, [X8+1664]
	217 Move X0, X21
	218 Move X1, [X8]
	219 Call Stack`1<Object>.Peek, X0
	220 Move X22, X0
	221 Move W27, W31
	222 NotImplemented "Instruction CMP not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move TEMP, X29
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {376}
	228 NotImplemented "Instruction CMP not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move TEMP, X29
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {376}
	234 Compare X21, 0
	235 JumpIfEqual {527}
	236 Move W8, [X21+24]
	237 Compare W8, 0
	238 JumpIfEqual {528}
	239 Move X8, 0xB89000
	240 Move X8, [X8+1672]
	241 Move X0, X21
	242 Move X1, [X8]
	243 Call Stack`1<Object>.Pop, X0
	244 Compare X20, 0
	245 JumpIfEqual {527}
	246 Move X0, X20
	247 Move X1, X31
	248 Call StringBuilder.get_Length, X0
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CSET not yet implemented."
	251 NotImplemented "Instruction BIC not yet implemented."
	252 Move TEMP, X8
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfEqual {280}
	256 Move X8, [X20]
	257 Move X0, X20
	258 Move X9, [X8+360]
	259 Move X1, [X8+368]
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move X8, [X26]
	262 Move X25, X0
	263 Move W9, [X8+224]
	264 Compare W9, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X8
	267 Call 0x1C17DFC
	268 And W1, W28, 1
	269 Move X0, X25
	270 Call JSONNode.ParseElement, X0, X1
	271 Compare X22, 0
	272 JumpIfEqual {527}
	273 Move X8, [X22]
	274 Move X2, X0
	275 Move X0, X22
	276 Move X1, X23
	277 Move X9, [X8+632]
	278 Move X3, [X8+640]
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Move X0, [X26]
	281 Move W8, [X0+224]
	282 Compare W8, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X0, X22
	286 Move X1, X31
	287 Call JSONNode.op_Inequality, X0, X1
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfNotEqual {301}
	292 Compare X22, 0
	293 JumpIfEqual {527}
	294 Move X8, [X22]
	295 Move X0, X22
	296 Move X9, [X8+616]
	297 Move X2, [X8+624]
	298 NotImplemented "Instruction ORN not yet implemented."
	299 And W1, W8, 1
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X8, 0xB45000
	302 Move X8, [X8+2440]
	303 Move X0, X20
	304 Move W1, W31
	305 Move X2, X31
	306 Move X23, [X8]
	307 Call StringBuilder.set_Length, X0, X1
	308 Move W8, [X21+24]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X8, 0xB89000
	311 Move X8, [X8+1664]
	312 Move X0, X21
	313 Move X1, [X8]
	314 Call Stack`1<Object>.Peek, X0
	315 Move X22, X0
	316 Move X0, X19
	317 Move W1, W24
	318 Move X2, X31
	319 Call String.get_Chars, X0, X1
	320 Compare X20, 0
	321 JumpIfEqual {527}
	322 Move W1, W0
	323 Move X0, X20
	324 Move X2, X31
	325 Call StringBuilder.Append, X0, X1
	326 Move W27, 1
	327 Xor W29, W29, 1
	328 Or W28, W28, W29
	329 Move TEMP, X29
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfEqual {376}
	333 Compare X20, 0
	334 JumpIfEqual {527}
	335 Move X0, X20
	336 Move X1, X31
	337 Call StringBuilder.get_Length, X0
	338 NotImplemented "Instruction CMP not yet implemented."
	339 NotImplemented "Instruction CSET not yet implemented."
	340 NotImplemented "Instruction BIC not yet implemented."
	341 Move TEMP, X8
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfEqual {369}
	345 Move X8, [X20]
	346 Move X0, X20
	347 Move X9, [X8+360]
	348 Move X1, [X8+368]
	349 NotImplemented "Instruction BLR not yet implemented."
	350 Move X8, [X26]
	351 Move X25, X0
	352 Move W9, [X8+224]
	353 Compare W9, 0
	354 JumpIfNotEqual {357}
	355 Move X0, X8
	356 Call 0x1C17DFC
	357 And W1, W28, 1
	358 Move X0, X25
	359 Call JSONNode.ParseElement, X0, X1
	360 Compare X22, 0
	361 JumpIfEqual {527}
	362 Move X8, [X22]
	363 Move X2, X0
	364 Move X0, X22
	365 Move X1, X23
	366 Move X9, [X8+632]
	367 Move X3, [X8+640]
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move X8, 0xB45000
	370 Move X8, [X8+2440]
	371 Move X23, [X8]
	372 Move TEMP, X29
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {404}
	376 Move X0, X19
	377 Move W1, W24
	378 Move X2, X31
	379 Call String.get_Chars, X0, X1
	380 Compare X20, 0
	381 JumpIfEqual {527}
	382 Move W1, W0
	383 Move X0, X20
	384 Move X2, X31
	385 Call StringBuilder.Append, X0, X1
	386 Move W29, 1
	387 Add W25, W24, 1
	388 Move TEMP, X29
	389 And TEMP, TEMP, 1
	390 Compare TEMP, 1
	391 JumpIfNotEqual {421}
	392 Move X0, X19
	393 Move W1, W25
	394 Move X2, X31
	395 Call String.get_Chars, X0, X1
	396 And W8, W0, 0xFFFF
	397 Move W1, W0
	398 NotImplemented "Instruction CMP not yet implemented."
	399 NotImplemented "Instruction CMP not yet implemented."
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Compare X20, 0
	402 JumpIfEqual {527}
	403 Move W1, 12
	404 Compare X20, 0
	405 JumpIfEqual {527}
	406 Move X8, [X20]
	407 Move X0, X20
	408 Move X9, [X8+360]
	409 Move X1, [X8+368]
	410 NotImplemented "Instruction BLR not yet implemented."
	411 Move X23, X0
	412 Move X0, X20
	413 Move W1, W31
	414 Move X2, X31
	415 Call StringBuilder.set_Length, X0, X1
	416 Move W28, W31
	417 Move W29, W31
	418 Move W8, [X19+16]
	419 Add W24, W24, 1
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Move W29, W31
	422 Subtract W8, W8, 110
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Move X11, -44138496
	425 Add X11, X11, 3572
	426 NotImplemented "Instruction ADR not yet implemented."
	427 Move W10, [X11]
	428 Add X9, X9, X10
	429 CallNoReturn X9
	430 Compare X20, 0
	431 JumpIfEqual {527}
	432 Move W1, 10
	433 Compare X20, 0
	434 JumpIfNotEqual {444}
	435 Compare X20, 0
	436 JumpIfEqual {527}
	437 Move W1, 8
	438 Compare X20, 0
	439 JumpIfEqual {527}
	440 Move W1, 13
	441 Compare X20, 0
	442 JumpIfEqual {527}
	443 Move W1, 9
	444 Move X0, X20
	445 Move X2, X31
	446 Call StringBuilder.Append, X0, X1
	447 Move W29, 1
	448 Move W24, W25
	449 Add W1, W24, 2
	450 Move W2, 4
	451 Move X0, X19
	452 Move X3, X31
	453 Call String.Substring, X0, X1, X2
	454 Move W1, 512
	455 Move X2, X31
	456 Call Int32.Parse, X0, X1
	457 Compare X20, 0
	458 JumpIfEqual {527}
	459 Move W1, W0
	460 Move X0, X20
	461 Move X2, X31
	462 Call StringBuilder.Append, X0, X1
	463 Add W24, W24, 5
	464 Move X22, X31
	465 Move W29, W31
	466 Move W28, W31
	467 Move TEMP, X29
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfEqual {535}
	471 Move X0, [X26]
	472 Move W8, [X0+224]
	473 Compare W8, 0
	474 JumpIfNotEqual {476}
	475 Call 0x1C17DFC
	476 Move X0, X22
	477 Move X1, X31
	478 Call JSONNode.op_Equality, X0, X1
	479 Move TEMP, X0
	480 And TEMP, TEMP, 1
	481 Compare TEMP, 1
	482 JumpIfNotEqual {513}
	483 Compare X20, 0
	484 JumpIfEqual {527}
	485 Move X8, [X20]
	486 Move X0, X20
	487 Move X9, [X8+360]
	488 Move X1, [X8+368]
	489 NotImplemented "Instruction BLR not yet implemented."
	490 Move X8, [X26]
	491 Move X19, X0
	492 Move W9, [X8+224]
	493 Compare W9, 0
	494 JumpIfNotEqual {497}
	495 Move X0, X8
	496 Call 0x1C17DFC
	497 And W1, W28, 1
	498 Move X0, X19
	499 Move X20, [X31+80]
	500 Move X19, [X31+88]
	501 Move X22, [X31+64]
	502 Move X21, [X31+72]
	503 Move X24, [X31+48]
	504 Move X23, [X31+56]
	505 Move X26, [X31+32]
	506 Move X25, [X31+40]
	507 Move X28, [X31+16]
	508 Move X27, [X31+24]
	509 Move X29, [X31+96]
	510 Move X30, [X31+104]
	511 Call JSONNode.ParseElement, X0, X1
	512 Return X0
	513 Move X0, X22
	514 Move X20, [X31+80]
	515 Move X19, [X31+88]
	516 Move X22, [X31+64]
	517 Move X21, [X31+72]
	518 Move X24, [X31+48]
	519 Move X23, [X31+56]
	520 Move X26, [X31+32]
	521 Move X25, [X31+40]
	522 Move X28, [X31+16]
	523 Move X27, [X31+24]
	524 Move X29, [X31+96]
	525 Move X30, [X31+104]
	526 Return X0
	527 Call 0x1C17F20
	528 Move X0, 0xB45000
	529 Move X0, [X0+2000]
	530 Call 0x1C17D08
	531 Call 0x1C17F10
	532 Move X19, X0
	533 Move X0, 0xB89000
	534 Move X0, [X0+1696]
	535 Move X0, 0xB45000
	536 Move X0, [X0+2000]
	537 Call 0x1C17D08
	538 Call 0x1C17F10
	539 Move X19, X0
	540 Move X0, 0xB89000
	541 Move X0, [X0+1704]
	542 Call 0x1C17D08
	543 Move X1, X0
	544 Move X0, X19
	545 Move X2, X31
	546 Call Exception..ctor, X0, X1
	547 Move X0, 0xB89000
	548 Move X0, [X0+1712]
	549 Call 0x1C17D08
	550 Move X1, X0
	551 Move X0, X19
	552 Call 0x1C17DEC

Method: System.Void SerializeBinary(System.IO.BinaryWriter aWriter)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SaveToBinaryStream(System.IO.Stream aData)

Disassembly:
	0x035AF9A4 LDR X8, [X19]
	0x035AF9A8 MOV X0, X19
	0x035AF9AC LDP X9, X1, [X8 + 0x1C8]
	0x035AF9B0 BLR X9
	0x035AF9B4 CBZ X0, 0x35AFA20
	0x035AF9B8 LDR W8, [X0 + 0x10]
	0x035AF9BC CMP W8, 0x1
	0x035AF9C0 B.LT 0x35AF9E8
	0x035AF9C4 LDR X8, [X19]
	0x035AF9C8 MOV X0, X19
	0x035AF9CC LDP X9, X1, [X8 + 0x1C8]
	0x035AF9D0 BLR X9
	0x035AF9D4 CBZ X0, 0x35AFA20
	0x035AF9D8 MOV W1, W31
	0x035AF9DC MOV X2, X31
	0x035AF9E0 LDP X30, X19, [X31], #0x10
	0x035AF9E4 B 0x3222A1C
	0x035AF9E8 LDR X8, [X19]
	0x035AF9EC MOV X0, X19
	0x035AF9F0 LDP X9, X1, [X8 + 0x1F8]
	0x035AF9F4 BLR X9
	0x035AF9F8 TBZ X0, 0x0, 0x35AFA14
	0x035AF9FC LDR X8, [X19]
	0x035AFA00 MOV X0, X19
	0x035AFA04 LDR X9, [X8 + 0x368]
	0x035AFA08 LDR X1, [X8 + 0x370]
	0x035AFA0C BLR X9
	0x035AFA10 B 0x35AFA18
	0x035AFA14 MOV W0, W31
	0x035AFA18 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE32000
	007 Move X22, 0xB77000
	008 Move W8, [X21+93]
	009 Move X22, [X22+608]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB77000
	017 Move X0, [X0+608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+93], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X31
	025 Move X21, X0
	026 Call BinaryWriter..ctor, X0, X1
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X1, X21
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X3, [X8+1064]
	033 Move X2, [X8+1072]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 CallNoReturn X3

Method: System.Void SaveToCompressedStream(System.IO.Stream aData)

Disassembly:
	0x035AFA1C RET
	0x035AFA20 BL 0x1C16F20
	0x035AFA24 SUB X31, X31, 0x30
	0x035AFA28 STP X30, X21, [X31 + 0x10]
	0x035AFA2C STP X20, X19, [X31 + 0x20]
	0x035AFA30 ADRP X21, 0xE31000
	0x035AFA34 LDRB W8, [X21 + 0x67]
	0x035AFA38 MOV W20, W1
	0x035AFA3C MOV X19, X0
	0x035AFA40 STRH W1, [X31 + 0xC]
	0x035AFA44 TBNZ X8, 0x0, 0x35AFA5C
	0x035AFA48 ADRP X0, 0xB46000
	0x035AFA4C LDR X0, [X0 + 0x170]
	0x035AFA50 BL 0x1C16CF4
	0x035AFA54 MOVZ W8, 0x1
	0x035AFA58 STRB W8, [X21 + 0x67]
	0x035AFA5C LDR X8, [X19]
	0x035AFA60 MOV X0, X19
	0x035AFA64 LDR X9, [X8 + 0x208]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB45000
	004 Move X0, [X0+2000]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xB89000
	009 Move X0, [X0+1752]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call Exception..ctor, X0, X1
	015 Move X0, 0xB89000
	016 Move X0, [X0+1760]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void SaveToCompressedFile(System.String aFileName)

Disassembly:
	0x035AFA68 LDR X1, [X8 + 0x210]
	0x035AFA6C BLR X9
	0x035AFA70 TBZ X0, 0x0, 0x35AFAB0
	0x035AFA74 ADRP X8, 0xB46000
	0x035AFA78 LDR X8, [X8 + 0x170]
	0x035AFA7C LDR X0, [X8]
	0x035AFA80 LDR W8, [X0 + 0xE0]
	0x035AFA84 CBNZ W8, 0x35AFA8C
	0x035AFA88 BL 0x1C16DFC
	0x035AFA8C ADD X0, X31, 0xC
	0x035AFA90 MOV X1, X31
	0x035AFA94 BL 0x330A76C
	0x035AFA98 LDR X8, [X19]
	0x035AFA9C MOV X1, X0
	0x035AFAA0 MOV X0, X19
	0x035AFAA4 LDP X9, X2, [X8 + 0x1D8]
	0x035AFAA8 BLR X9
	0x035AFAAC B 0x35AFAE8
	0x035AFAB0 LDR X8, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB45000
	004 Move X0, [X0+2000]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xB89000
	009 Move X0, [X0+1752]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call Exception..ctor, X0, X1
	015 Move X0, 0xB89000
	016 Move X0, [X0+1768]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.String SaveToCompressedBase64()

Disassembly:
	0x035AFAB4 MOV X0, X19
	0x035AFAB8 LDP X9, X1, [X8 + 0x1F8]
	0x035AFABC BLR X9
	0x035AFAC0 TBZ X0, 0x0, 0x35AFAE8
	0x035AFAC4 LDR X8, [X19]
	0x035AFAC8 AND W1, W20, 0xFFFF
	0x035AFACC MOV X0, X19
	0x035AFAD0 LDP X20, X19, [X31 + 0x20]
	0x035AFAD4 LDR X3, [X8 + 0x378]
	0x035AFAD8 LDR X2, [X8 + 0x380]
	0x035AFADC LDP X30, X21, [X31 + 0x10]
	0x035AFAE0 ADD X31, X31, 0x30
	0x035AFAE4 BR X3
	0x035AFAE8 LDP X20, X19, [X31 + 0x20]
	0x035AFAEC LDP X30, X21, [X31 + 0x10]
	0x035AFAF0 ADD X31, X31, 0x30
	0x035AFAF4 RET
	0x035AFAF8 STR X30, [X31 - 0x20]!
	0x035AFAFC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB45000
	004 Move X0, [X0+2000]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xB89000
	009 Move X0, [X0+1752]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call Exception..ctor, X0, X1
	015 Move X0, 0xB89000
	016 Move X0, [X0+1776]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void SaveToBinaryFile(System.String aFileName)

Disassembly:
	0x035AFB00 ADRP X20, 0xE31000
	0x035AFB04 STRH W0, [X31 + 0xC]
	0x035AFB08 ADRP X19, 0xB46000
	0x035AFB0C LDRB W8, [X20 + 0x68]
	0x035AFB10 LDR X19, [X19 + 0x170]
	0x035AFB14 TBNZ X8, 0x0, 0x35AFB38
	0x035AFB18 ADRP X0, 0xB46000
	0x035AFB1C LDR X0, [X0 + 0x170]
	0x035AFB20 BL 0x1C16CF4
	0x035AFB24 ADRP X0, 0xB88000
	0x035AFB28 LDR X0, [X0 + 0x650]
	0x035AFB2C BL 0x1C16CF4
	0x035AFB30 MOVZ W8, 0x1
	0x035AFB34 STRB W8, [X20 + 0x68]
	0x035AFB38 LDR X0, [X19]
	0x035AFB3C ADRP X19, 0xB88000
	0x035AFB40 LDR W8, [X0 + 0xE0]
	0x035AFB44 LDR X19, [X19 + 0x650]
	0x035AFB48 CBNZ W8, 0x35AFB50
	0x035AFB4C BL 0x1C16DFC
	0x035AFB50 ADD X0, X31, 0xC
	0x035AFB54 MOV X1, X31
	0x035AFB58 BL 0x330A76C
	0x035AFB5C LDR X8, [X19]
	0x035AFB60 MOV X19, X0
	0x035AFB64 MOV X0, X8
	0x035AFB68 BL 0x1C16F10
	0x035AFB6C MOV X1, X19
	0x035AFB70 MOV X20, X0
	0x035AFB74 BL 0x35ACFF8
	0x035AFB78 MOV X0, X20
	0x035AFB7C LDP X20, X19, [X31 + 0x10]
	0x035AFB80 LDR X30, [X31], #0x20
	0x035AFB84 RET
	0x035AFB88 STR X30, [X31 - 0x10]!
	0x035AFB8C CBZ X0, 0x35AFBA4
	0x035AFB90 LDR X8, [X0]
	0x035AFB94 LDR X2, [X8 + 0x458]
	0x035AFB98 LDR X1, [X8 + 0x460]
	0x035AFB9C LDR X30, [X31], #0x10
	0x035AFBA0 BR X2
	0x035AFBA4 BL 0x1C16F20
	0x035AFBA8 STR X30, [X31 - 0x10]!
	0x035AFBAC LDR X8, [X0]
	0x035AFBB0 LDR X9, [X8 + 0x348]
	0x035AFBB4 LDR X1, [X8 + 0x350]
	0x035AFBB8 BLR X9
	0x035AFBBC FCVTZS W8, D0
	0x035AFBC0 FCVTZU W9, D0
	0x035AFBC4 FCMP D0, 0x0
	0x035AFBC8 CSEL W0, W8, W9, MI
	0x035AFBCC LDR X30, [X31], #0x10
	0x035AFBD0 RET
	0x035AFBD4 LDR X8, [X0]
	0x035AFBD8 UCVTF D0, W1
	0x035AFBDC LDR X2, [X8 + 0x358]
	0x035AFBE0 LDR X8, [X8 + 0x360]
	0x035AFBE4 MOV X1, X8
	0x035AFBE8 BR X2
	0x035AFBEC STP X30, X21, [X31 - 0x20]!
	0x035AFBF0 STP X20, X19, [X31 + 0x10]
	0x035AFBF4 ADRP X20, 0xE31000
	0x035AFBF8 ADRP X21, 0xB6E000
	0x035AFBFC LDRB W8, [X20 + 0x69]
	0x035AFC00 LDR X21, [X21 + 0x400]
	0x035AFC04 MOV W19, W0
	0x035AFC08 TBNZ X8, 0x0, 0x35AFC20
	0x035AFC0C ADRP X0, 0xB6E000
	0x035AFC10 LDR X0, [X0 + 0x400]
	0x035AFC14 BL 0x1C16CF4
	0x035AFC18 MOVZ W8, 0x1
	0x035AFC1C STRB W8, [X20 + 0x69]
	0x035AFC20 LDR X0, [X21]
	0x035AFC24 BL 0x1C16F10
	0x035AFC28 UCVTF D0, W19
	0x035AFC2C MOV X20, X0
	0x035AFC30 BL 0x35AD340
	0x035AFC34 MOV X0, X20
	0x035AFC38 LDP X20, X19, [X31 + 0x10]
	0x035AFC3C LDP X30, X21, [X31], #0x20
	0x035AFC40 RET
	0x035AFC44 STR X30, [X31 - 0x10]!
	0x035AFC48 CBZ X0, 0x35AFC60
	0x035AFC4C LDR X8, [X0]
	0x035AFC50 LDR X2, [X8 + 0x478]
	0x035AFC54 LDR X1, [X8 + 0x480]
	0x035AFC58 LDR X30, [X31], #0x10
	0x035AFC5C BR X2
	0x035AFC60 BL 0x1C16F20
	0x035AFC64 STR X30, [X31 - 0x10]!
	0x035AFC68 LDR X8, [X0]
	0x035AFC6C LDR X9, [X8 + 0x368]
	0x035AFC70 LDR X1, [X8 + 0x370]
	0x035AFC74 BLR X9
	0x035AFC78 LDR X30, [X31], #0x10
	0x035AFC7C RET
	0x035AFC80 LDR X8, [X0]
	0x035AFC84 AND W1, W1, 0xFF
	0x035AFC88 LDR X3, [X8 + 0x378]
	0x035AFC8C LDR X2, [X8 + 0x380]
	0x035AFC90 BR X3
	0x035AFC94 STP X30, X21, [X31 - 0x20]!
	0x035AFC98 STP X20, X19, [X31 + 0x10]
	0x035AFC9C ADRP X20, 0xE31000
	0x035AFCA0 ADRP X21, 0xB6E000
	0x035AFCA4 LDRB W8, [X20 + 0x6A]
	0x035AFCA8 LDR X21, [X21 + 0x400]
	0x035AFCAC MOV W19, W0
	0x035AFCB0 TBNZ X8, 0x0, 0x35AFCC8
	0x035AFCB4 ADRP X0, 0xB6E000
	0x035AFCB8 LDR X0, [X0 + 0x400]
	0x035AFCBC BL 0x1C16CF4
	0x035AFCC0 MOVZ W8, 0x1
	0x035AFCC4 STRB W8, [X20 + 0x6A]
	0x035AFCC8 LDR X0, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE32000
	007 Move X22, 0xB89000
	008 Move W8, [X21+94]
	009 Move X22, [X22+1784]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB89000
	017 Move X0, [X0+1784]
	018 Call 0x1C17CF4
	019 Move X0, 0xB45000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+94], W8
	024 Move X0, [X22]
	025 Call 0x1C17F10
	026 Move X1, X19
	027 Move X2, X31
	028 Move X21, X0
	029 Call FileInfo..ctor, X0, X1
	030 Compare X21, 0
	031 JumpIfEqual {84}
	032 Move X0, X21
	033 Move X1, X31
	034 Call FileInfo.get_Directory, X0
	035 Compare X0, 0
	036 JumpIfEqual {84}
	037 Move X8, [X0]
	038 Move X22, 0xB45000
	039 Move X9, [X8+440]
	040 Move X1, [X8+448]
	041 Move X22, [X22+3584]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X1, X31
	044 Call Directory.CreateDirectory, X0
	045 Move X0, X19
	046 Move X1, X31
	047 Call File.OpenWrite, X0
	048 Move X19, X0
	049 Move X0, X20
	050 Move X1, X19
	051 Call JSONNode.SaveToBinaryStream, X0, X1
	052 Move X20, X31
	053 Compare X19, 0
	054 JumpIfEqual {76}
	055 Move X8, [X19]
	056 Move X1, [X22]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X19
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X19
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X20, 0
	077 JumpIfNotEqual {85}
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return 
	084 Call 0x1C17F20
	085 Move X0, X20
	086 Call 0x1C17F18
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X21, X0
	089 Move X0, X21
	090 Call 0x3EB2AD0
	091 Move X20, [X0]
	092 Call 0x3EB2AE0
	093 Move X20, X31
	094 Move X21, X0
	095 Compare X19, 0
	096 JumpIfEqual {118}
	097 Move X8, [X19]
	098 Move X1, [X22]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X20, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X21
	121 Call 0x1D2D690
	122 Move X0, X20
	123 Call 0x1C17F18
	124 Call 0x1991590

Method: System.String SaveToBinaryBase64()

Disassembly:
	0x035AFCCC BL 0x1C16F10
	0x035AFCD0 AND W8, W19, 0xFF
	0x035AFCD4 UCVTF D0, W8
	0x035AFCD8 MOV X20, X0
	0x035AFCDC BL 0x35AD340
	0x035AFCE0 MOV X0, X20
	0x035AFCE4 LDP X20, X19, [X31 + 0x10]
	0x035AFCE8 LDP X30, X21, [X31], #0x20
	0x035AFCEC RET
	0x035AFCF0 STR X30, [X31 - 0x10]!
	0x035AFCF4 CBZ X0, 0x35AFD0C
	0x035AFCF8 LDR X8, [X0]
	0x035AFCFC LDR X2, [X8 + 0x498]
	0x035AFD00 LDR X1, [X8 + 0x4A0]
	0x035AFD04 LDR X30, [X31], #0x10
	0x035AFD08 BR X2
	0x035AFD0C BL 0x1C16F20
	0x035AFD10 STR X30, [X31 - 0x10]!
	0x035AFD14 LDR X8, [X0]
	0x035AFD18 LDR X9, [X8 + 0x368]
	0x035AFD1C LDR X1, [X8 + 0x370]
	0x035AFD20 BLR X9
	0x035AFD24 LDR X30, [X31], #0x10
	0x035AFD28 RET
	0x035AFD2C LDR X8, [X0]
	0x035AFD30 SXTB W1, W1
	0x035AFD34 LDR X3, [X8 + 0x378]
	0x035AFD38 LDR X2, [X8 + 0x380]
	0x035AFD3C BR X3
	0x035AFD40 STP X30, X21, [X31 - 0x20]!
	0x035AFD44 STP X20, X19, [X31 + 0x10]
	0x035AFD48 ADRP X20, 0xE31000
	0x035AFD4C ADRP X21, 0xB6E000
	0x035AFD50 LDRB W8, [X20 + 0x6B]
	0x035AFD54 LDR X21, [X21 + 0x400]
	0x035AFD58 MOV W19, W0
	0x035AFD5C TBNZ X8, 0x0, 0x35AFD74
	0x035AFD60 ADRP X0, 0xB6E000
	0x035AFD64 LDR X0, [X0 + 0x400]
	0x035AFD68 BL 0x1C16CF4
	0x035AFD6C MOVZ W8, 0x1
	0x035AFD70 STRB W8, [X20 + 0x6B]
	0x035AFD74 LDR X0, [X21]
	0x035AFD78 BL 0x1C16F10
	0x035AFD7C SXTB W8, W19
	0x035AFD80 SCVTF D0, W8
	0x035AFD84 MOV X20, X0
	0x035AFD88 BL 0x35AD340
	0x035AFD8C MOV X0, X20
	0x035AFD90 LDP X20, X19, [X31 + 0x10]
	0x035AFD94 LDP X30, X21, [X31], #0x20
	0x035AFD98 RET
	0x035AFD9C STR X30, [X31 - 0x10]!
	0x035AFDA0 CBZ X0, 0x35AFDB8
	0x035AFDA4 LDR X8, [X0]
	0x035AFDA8 LDR X2, [X8 + 0x4B8]
	0x035AFDAC LDR X1, [X8 + 0x4C0]
	0x035AFDB0 LDR X30, [X31], #0x10
	0x035AFDB4 BR X2
	0x035AFDB8 BL 0x1C16F20
	0x035AFDBC STR X30, [X31 - 0x10]!
	0x035AFDC0 LDR X8, [X0]
	0x035AFDC4 LDR X9, [X8 + 0x368]
	0x035AFDC8 LDR X1, [X8 + 0x370]
	0x035AFDCC BLR X9
	0x035AFDD0 LDR X30, [X31], #0x10
	0x035AFDD4 RET
	0x035AFDD8 LDR X8, [X0]
	0x035AFDDC SXTH W1, W1
	0x035AFDE0 LDR X3, [X8 + 0x378]
	0x035AFDE4 LDR X2, [X8 + 0x380]
	0x035AFDE8 BR X3
	0x035AFDEC STP X30, X21, [X31 - 0x20]!
	0x035AFDF0 STP X20, X19, [X31 + 0x10]
	0x035AFDF4 ADRP X20, 0xE31000
	0x035AFDF8 ADRP X21, 0xB6E000
	0x035AFDFC LDRB W8, [X20 + 0x6C]
	0x035AFE00 LDR X21, [X21 + 0x400]
	0x035AFE04 MOV W19, W0
	0x035AFE08 TBNZ X8, 0x0, 0x35AFE20
	0x035AFE0C ADRP X0, 0xB6E000
	0x035AFE10 LDR X0, [X0 + 0x400]
	0x035AFE14 BL 0x1C16CF4
	0x035AFE18 MOVZ W8, 0x1
	0x035AFE1C STRB W8, [X20 + 0x6C]
	0x035AFE20 LDR X0, [X21]
	0x035AFE24 BL 0x1C16F10
	0x035AFE28 SXTH W8, W19
	0x035AFE2C SCVTF D0, W8
	0x035AFE30 MOV X20, X0
	0x035AFE34 BL 0x35AD340
	0x035AFE38 MOV X0, X20
	0x035AFE3C LDP X20, X19, [X31 + 0x10]
	0x035AFE40 LDP X30, X21, [X31], #0x20
	0x035AFE44 RET
	0x035AFE48 STR X30, [X31 - 0x10]!
	0x035AFE4C CBZ X0, 0x35AFE64
	0x035AFE50 LDR X8, [X0]
	0x035AFE54 LDR X2, [X8 + 0x4D8]
	0x035AFE58 LDR X1, [X8 + 0x4E0]
	0x035AFE5C LDR X30, [X31], #0x10
	0x035AFE60 BR X2
	0x035AFE64 BL 0x1C16F20
	0x035AFE68 STR X30, [X31 - 0x10]!
	0x035AFE6C LDR X8, [X0]
	0x035AFE70 LDR X9, [X8 + 0x368]
	0x035AFE74 LDR X1, [X8 + 0x370]
	0x035AFE78 BLR X9
	0x035AFE7C LDR X30, [X31], #0x10
	0x035AFE80 RET
	0x035AFE84 LDR X8, [X0]
	0x035AFE88 AND W1, W1, 0xFFFF
	0x035AFE8C LDR X3, [X8 + 0x378]
	0x035AFE90 LDR X2, [X8 + 0x380]
	0x035AFE94 BR X3
	0x035AFE98 STP X30, X21, [X31 - 0x20]!
	0x035AFE9C STP X20, X19, [X31 + 0x10]
	0x035AFEA0 ADRP X20, 0xE31000
	0x035AFEA4 ADRP X21, 0xB6E000
	0x035AFEA8 LDRB W8, [X20 + 0x6D]
	0x035AFEAC LDR X21, [X21 + 0x400]
	0x035AFEB0 MOV W19, W0
	0x035AFEB4 TBNZ X8, 0x0, 0x35AFECC
	0x035AFEB8 ADRP X0, 0xB6E000
	0x035AFEBC LDR X0, [X0 + 0x400]
	0x035AFEC0 BL 0x1C16CF4
	0x035AFEC4 MOVZ W8, 0x1
	0x035AFEC8 STRB W8, [X20 + 0x6D]
	0x035AFECC LDR X0, [X21]
	0x035AFED0 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE32000
	007 Move X19, 0xB4D000
	008 Move W8, [X21+95]
	009 Move X19, [X19+1368]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xB4E000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move X0, 0xB45000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0xB4D000
	022 Move X0, [X0+1368]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+95], W8
	026 Move X0, [X19]
	027 Move X22, 0xB45000
	028 Move X22, [X22+3584]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X19, X0
	032 Call MemoryStream..ctor, X0
	033 Move X0, X20
	034 Move X1, X19
	035 Call JSONNode.SaveToBinaryStream, X0, X1
	036 Compare X19, 0
	037 JumpIfEqual {94}
	038 Move X8, [X19]
	039 Move X9, [X8+520]
	040 Move X2, [X8+528]
	041 Move X0, X19
	042 Move X1, X31
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X19]
	045 Move X1, [X8+1024]
	046 Move X9, [X8+1016]
	047 Move X0, X19
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, 0xB4E000
	050 Move X8, [X8+2536]
	051 Move X20, X0
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Call Convert.ToBase64String, X0
	060 Move X21, X0
	061 Move X20, X31
	062 Move X8, [X19]
	063 Move X1, [X22]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X19
	074 Move W2, W31
	075 Call 0x1C5D788
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X8, X8, X9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X1, [X0+8]
	081 Move X0, X19
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X20, 0
	084 JumpIfNotEqual {92}
	085 Move X0, X21
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X30, [X31+48]
	091 Return X0
	092 Move X0, X20
	093 Call 0x1C17F18
	094 Call 0x1C17F20
	095 Move X21, X0
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X21
	098 Call 0x3EB2AD0
	099 Move X20, [X0]
	100 Call 0x3EB2AE0
	101 Move X21, X31
	102 Compare X19, 0
	103 JumpIfNotEqual {62}
	104 Move X20, X31
	105 Move X21, X0
	106 Compare X19, 0
	107 JumpIfEqual {129}
	108 Move X8, [X19]
	109 Move X1, [X22]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X19
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X19
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Compare X20, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X21
	132 Call 0x1D2D690
	133 Move X0, X20
	134 Call 0x1C17F18
	135 Call 0x1991590

Method: SimpleJSON.JSONNode DeserializeBinary(System.IO.BinaryReader aReader)

Disassembly:
	0x035AFED4 AND W8, W19, 0xFFFF
	0x035AFED8 UCVTF D0, W8
	0x035AFEDC MOV X20, X0
	0x035AFEE0 BL 0x35AD340
	0x035AFEE4 MOV X0, X20
	0x035AFEE8 LDP X20, X19, [X31 + 0x10]
	0x035AFEEC LDP X30, X21, [X31], #0x20
	0x035AFEF0 RET
	0x035AFEF4 STR X30, [X31 - 0x10]!
	0x035AFEF8 CBZ X0, 0x35AFF10
	0x035AFEFC LDR X8, [X0]
	0x035AFF00 LDR X2, [X8 + 0x4F8]
	0x035AFF04 LDR X1, [X8 + 0x500]
	0x035AFF08 LDR X30, [X31], #0x10
	0x035AFF0C BR X2
	0x035AFF10 BL 0x1C16F20
	0x035AFF14 SUB X31, X31, 0x30
	0x035AFF18 STP X30, X21, [X31 + 0x10]
	0x035AFF1C STP X20, X19, [X31 + 0x20]
	0x035AFF20 ADRP X21, 0xE31000
	0x035AFF24 ADRP X20, 0xB46000
	0x035AFF28 LDRB W8, [X21 + 0x6E]
	0x035AFF2C LDR X20, [X20 + 0xC48]
	0x035AFF30 MOV X19, X0
	0x035AFF34 TBNZ X8, 0x0, 0x35AFF58
	0x035AFF38 ADRP X0, 0xB46000
	0x035AFF3C LDR X0, [X0 + 0xC48]
	0x035AFF40 BL 0x1C16CF4
	0x035AFF44 ADRP X0, 0xB45000
	0x035AFF48 LDR X0, [X0 + 0x9F0]
	0x035AFF4C BL 0x1C16CF4
	0x035AFF50 MOVZ W8, 0x1
	0x035AFF54 STRB W8, [X21 + 0x6E]
	0x035AFF58 STR X31, [X31 + 0x8]
	0x035AFF5C LDR X8, [X19]
	0x035AFF60 ADRP X21, 0xB45000
	0x035AFF64 MOV X0, X19
	0x035AFF68 LDP X9, X1, [X8 + 0x1C8]
	0x035AFF6C LDR X21, [X21 + 0x9F0]
	0x035AFF70 BLR X9
	0x035AFF74 LDR X8, [X20]
	0x035AFF78 MOV X19, X0
	0x035AFF7C LDR W9, [X8 + 0xE0]
	0x035AFF80 CBNZ W9, 0x35AFF8C
	0x035AFF84 MOV X0, X8
	0x035AFF88 BL 0x1C16DFC
	0x035AFF8C MOV X0, X31
	0x035AFF90 BL 0x3338524
	0x035AFF94 LDR X8, [X21]
	0x035AFF98 MOV X20, X0
	0x035AFF9C LDR W9, [X8 + 0xE0]
	0x035AFFA0 CBNZ W9, 0x35AFFAC
	0x035AFFA4 MOV X0, X8
	0x035AFFA8 BL 0x1C16DFC
	0x035AFFAC ADD X3, X31, 0x8
	0x035AFFB0 MOV X0, X19
	0x035AFFB4 MOV X1, X20
	0x035AFFB8 MOV W2, W31
	0x035AFFBC MOV X4, X31
	0x035AFFC0 BL 0x33627B0
	0x035AFFC4 TBNZ X0, 0x0, 0x35AFFE8
	0x035AFFC8 LDR X0, [X21]
	0x035AFFCC LDR W8, [X0 + 0xE0]
	0x035AFFD0 CBNZ W8, 0x35AFFD8
	0x035AFFD4 BL 0x1C16DFC
	0x035AFFD8 ADD X0, X31, 0x8
	0x035AFFDC MOV X1, X31
	0x035AFFE0 MOV X2, X31
	0x035AFFE4 BL 0x335EEB0
	0x035AFFE8 LDR X0, [X31 + 0x8]
	0x035AFFEC LDP X20, X19, [X31 + 0x20]
	0x035AFFF0 LDP X30, X21, [X31 + 0x10]
	0x035AFFF4 ADD X31, X31, 0x30
	0x035AFFF8 RET
	0x035AFFFC SUB X31, X31, 0x30
	0x035B0000 STP X30, X21, [X31 + 0x10]
	0x035B0004 STP X20, X19, [X31 + 0x20]
	0x035B0008 ADRP X21, 0xE30000
	0x035B000C STR X1, [X31 + 0x8]
	0x035B0010 ADRP X20, 0xB45000
	0x035B0014 LDRB W8, [X21 + 0x6F]
	0x035B0018 LDR X20, [X20 + 0xC48]
	0x035B001C MOV X19, X0
	0x035B0020 TBNZ X8, 0x0, 0x35B0044
	0x035B0024 ADRP X0, 0xB45000
	0x035B0028 LDR X0, [X0 + 0xC48]
	0x035B002C BL 0x1C16CF4
	0x035B0030 ADRP X0, 0xB44000
	0x035B0034 LDR X0, [X0 + 0x9F0]
	0x035B0038 BL 0x1C16CF4
	0x035B003C MOVZ W8, 0x1
	0x035B0040 STRB W8, [X21 + 0x6F]
	0x035B0044 LDR X0, [X20]
	0x035B0048 ADRP X20, 0xB44000
	0x035B004C LDR W8, [X0 + 0xE0]
	0x035B0050 LDR X20, [X20 + 0x9F0]
	0x035B0054 CBNZ W8, 0x35B005C
	0x035B0058 BL 0x1C16DFC
	0x035B005C MOV X0, X31
	0x035B0060 BL 0x3338524
	0x035B0064 LDR X8, [X20]
	0x035B0068 MOV X20, X0
	0x035B006C LDR W9, [X8 + 0xE0]
	0x035B0070 CBNZ W9, 0x35B007C
	0x035B0074 MOV X0, X8
	0x035B0078 BL 0x1C16DFC
	0x035B007C ADD X0, X31, 0x8
	0x035B0080 MOV X1, X20
	0x035B0084 MOV X2, X31
	0x035B0088 BL 0x3362314
	0x035B008C LDR X8, [X19]
	0x035B0090 MOV X1, X0
	0x035B0094 MOV X0, X19
	0x035B0098 LDP X9, X2, [X8 + 0x1D8]
	0x035B009C BLR X9
	0x035B00A0 LDP X20, X19, [X31 + 0x20]
	0x035B00A4 LDP X30, X21, [X31 + 0x10]
	0x035B00A8 ADD X31, X31, 0x30
	0x035B00AC RET
	0x035B00B0 STR X30, [X31 - 0x20]!
	0x035B00B4 STP X20, X19, [X31 + 0x10]
	0x035B00B8 ADRP X20, 0xE30000
	0x035B00BC STR X0, [X31 + 0x8]
	0x035B00C0 ADRP X19, 0xB45000
	0x035B00C4 LDRB W8, [X20 + 0x70]
	0x035B00C8 LDR X19, [X19 + 0xC48]
	0x035B00CC TBNZ X8, 0x0, 0x35B00FC
	0x035B00D0 ADRP X0, 0xB45000
	0x035B00D4 LDR X0, [X0 + 0xC48]
	0x035B00D8 BL 0x1C16CF4
	0x035B00DC ADRP X0, 0xB44000
	0x035B00E0 LDR X0, [X0 + 0x9F0]
	0x035B00E4 BL 0x1C16CF4
	0x035B00E8 ADRP X0, 0xB87000
	0x035B00EC LDR X0, [X0 + 0x650]
	0x035B00F0 BL 0x1C16CF4
	0x035B00F4 MOVZ W8, 0x1
	0x035B00F8 STRB W8, [X20 + 0x70]
	0x035B00FC LDR X0, [X19]
	0x035B0100 ADRP X19, 0xB44000
	0x035B0104 LDR W8, [X0 + 0xE0]
	0x035B0108 LDR X19, [X19 + 0x9F0]
	0x035B010C CBNZ W8, 0x35B0114
	0x035B0110 BL 0x1C16DFC
	0x035B0114 ADRP X20, 0xB87000
	0x035B0118 LDR X20, [X20 + 0x650]
	0x035B011C MOV X0, X31
	0x035B0120 BL 0x3338524
	0x035B0124 LDR X8, [X19]
	0x035B0128 MOV X19, X0
	0x035B012C LDR W9, [X8 + 0xE0]
	0x035B0130 CBNZ W9, 0x35B013C
	0x035B0134 MOV X0, X8
	0x035B0138 BL 0x1C16DFC
	0x035B013C ADD X0, X31, 0x8
	0x035B0140 MOV X1, X19
	0x035B0144 MOV X2, X31
	0x035B0148 BL 0x3362314
	0x035B014C LDR X8, [X20]
	0x035B0150 MOV X19, X0
	0x035B0154 MOV X0, X8
	0x035B0158 BL 0x1C16F10
	0x035B015C MOV X1, X19
	0x035B0160 MOV X20, X0
	0x035B0164 BL 0x35ACFF8
	0x035B0168 MOV X0, X20
	0x035B016C LDP X20, X19, [X31 + 0x10]
	0x035B0170 LDR X30, [X31], #0x20
	0x035B0174 RET
	0x035B0178 STR X30, [X31 - 0x10]!
	0x035B017C CBZ X0, 0x35B0194
	0x035B0180 LDR X8, [X0]
	0x035B0184 LDR X2, [X8 + 0x518]
	0x035B0188 LDR X1, [X8 + 0x520]
	0x035B018C LDR X30, [X31], #0x10
	0x035B0190 BR X2
	0x035B0194 BL 0x1C16F20
	0x035B0198 SUB X31, X31, 0x30
	0x035B019C STP X30, X21, [X31 + 0x10]
	0x035B01A0 STP X20, X19, [X31 + 0x20]
	0x035B01A4 ADRP X21, 0xE30000
	0x035B01A8 ADRP X20, 0xB45000
	0x035B01AC LDRB W8, [X21 + 0x71]
	0x035B01B0 LDR X20, [X20 + 0xC48]
	0x035B01B4 MOV X19, X0
	0x035B01B8 TBNZ X8, 0x0, 0x35B01DC
	0x035B01BC ADRP X0, 0xB45000
	0x035B01C0 LDR X0, [X0 + 0xC48]
	0x035B01C4 BL 0x1C16CF4
	0x035B01C8 ADRP X0, 0xB45000
	0x035B01CC LDR X0, [X0 + 0x570]
	0x035B01D0 BL 0x1C16CF4
	0x035B01D4 MOVZ W8, 0x1
	0x035B01D8 STRB W8, [X21 + 0x71]
	0x035B01DC STR X31, [X31 + 0x8]
	0x035B01E0 LDR X8, [X19]
	0x035B01E4 ADRP X21, 0xB45000
	0x035B01E8 MOV X0, X19
	0x035B01EC LDP X9, X1, [X8 + 0x1C8]
	0x035B01F0 LDR X21, [X21 + 0x570]
	0x035B01F4 BLR X9
	0x035B01F8 LDR X8, [X20]
	0x035B01FC MOV X19, X0
	0x035B0200 LDR W9, [X8 + 0xE0]
	0x035B0204 CBNZ W9, 0x35B0210
	0x035B0208 MOV X0, X8
	0x035B020C BL 0x1C16DFC
	0x035B0210 MOV X0, X31
	0x035B0214 BL 0x3338524
	0x035B0218 LDR X8, [X21]
	0x035B021C MOV X20, X0
	0x035B0220 LDR W9, [X8 + 0xE0]
	0x035B0224 CBNZ W9, 0x35B0230
	0x035B0228 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D8
	003 Move [X31+48], X30
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0xE32000
	010 Move W8, [X20+96]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xB6F000
	017 Move X0, [X0+880]
	018 Call 0x1C17CF4
	019 Move X0, 0xB89000
	020 Move X0, [X0+1632]
	021 Call 0x1C17CF4
	022 Move X0, 0xB46000
	023 Move X0, [X0+1120]
	024 Call 0x1C17CF4
	025 Move X0, 0xB89000
	026 Move X0, [X0+1608]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6F000
	029 Move X0, [X0+1024]
	030 Call 0x1C17CF4
	031 Move X0, 0xB6D000
	032 Move X0, [X0+3008]
	033 Call 0x1C17CF4
	034 Move X0, 0xB89000
	035 Move X0, [X0+1616]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+96], W8
	039 Compare X19, 0
	040 JumpIfEqual {195}
	041 Move X8, [X19]
	042 Move X0, X19
	043 Move X9, [X8+472]
	044 Move X1, [X8+480]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 And W20, W0, 255
	047 Subtract W8, W20, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X9, -44138496
	050 Add X9, X9, 3580
	051 NotImplemented "Instruction ADR not yet implemented."
	052 Move W11, [X9]
	053 Add X10, X10, X11
	054 CallNoReturn X10
	055 Move X8, [X19]
	056 Move X0, X19
	057 Move X9, [X8+552]
	058 Move X1, [X8+560]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, 0xB6F000
	061 Move X8, [X8+880]
	062 Move W21, W0
	063 Move X8, [X8]
	064 Move X0, X8
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Call JSONArray..ctor, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X22, 0xB46000
	070 Move X22, [X22+1120]
	071 Move X0, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X19
	077 Call JSONNode.DeserializeBinary, X0
	078 Compare X20, 0
	079 JumpIfEqual {195}
	080 Move X8, [X20]
	081 Move X1, X0
	082 Move X0, X20
	083 Move X9, [X8+648]
	084 Move X2, [X8+656]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Subtract W21, W21, 1
	087 Move X8, [X19]
	088 Move X0, X19
	089 Move X9, [X8+552]
	090 Move X1, [X8+560]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X8, 0xB6C000
	093 Move X8, [X8+3008]
	094 Move W21, W0
	095 Move X8, [X8]
	096 Move X0, X8
	097 Call 0x1C17F10
	098 Move X20, X0
	099 Call JSONObject..ctor, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X23, 0xB45000
	102 Move X23, [X23+1120]
	103 Move X8, [X19]
	104 Move X0, X19
	105 Move X9, [X8+664]
	106 Move X1, [X8+672]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X8, [X23]
	109 Move X22, X0
	110 Move W9, [X8+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X0, X19
	116 Call JSONNode.DeserializeBinary, X0
	117 Compare X20, 0
	118 JumpIfEqual {195}
	119 Move X8, [X20]
	120 Move X2, X0
	121 Move X0, X20
	122 Move X1, X22
	123 Move X9, [X8+632]
	124 Move X3, [X8+640]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Subtract W21, W21, 1
	127 Move X8, [X19]
	128 Move X0, X19
	129 Move X9, [X8+664]
	130 Move X1, [X8+672]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, 0xB88000
	133 Move X8, [X8+1616]
	134 Move X19, X0
	135 Move X8, [X8]
	136 Move X0, X8
	137 Call 0x1C17F10
	138 Move X1, X19
	139 Move X20, X0
	140 Call JSONString..ctor, X0, X1
	141 Move X8, [X19]
	142 Move X0, X19
	143 Move X9, [X8+632]
	144 Move X1, [X8+640]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X8, 0xB6E000
	147 Move X8, [X8+1024]
	148 Move V8, V0
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move V0, V8
	152 Move X20, X0
	153 Call JSONNumber..ctor, X0, V0
	154 Move X8, 0xB88000
	155 Move X8, [X8+1608]
	156 Move X0, [X8]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X20, [X31+80]
	162 Move X19, [X31+88]
	163 Move X22, [X31+64]
	164 Move X21, [X31+72]
	165 Move X30, [X31+48]
	166 Move X23, [X31+56]
	167 Move V8, [X31+32]
	168 Add X31, X31, 96
	169 Call JSONNull.CreateOrGet
	170 Return X0
	171 Move X8, [X19]
	172 Move X0, X19
	173 Move X9, [X8+456]
	174 Move X1, [X8+464]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X8, 0xB88000
	177 Move X8, [X8+1632]
	178 Move W19, W0
	179 Move X8, [X8]
	180 Move X0, X8
	181 Call 0x1C17F10
	182 And W1, W19, 1
	183 Move X20, X0
	184 Call JSONBool..ctor, X0, X1
	185 Move X0, X20
	186 Move X20, [X31+80]
	187 Move X19, [X31+88]
	188 Move X22, [X31+64]
	189 Move X21, [X31+72]
	190 Move X30, [X31+48]
	191 Move X23, [X31+56]
	192 Move V8, [X31+32]
	193 Add X31, X31, 96
	194 Return X0
	195 Call 0x1C17F20
	196 Move X0, 0xB88000
	197 Move X0, [X0+1792]
	198 Call 0x1C17D08
	199 Move TEMP, 0
	200 Not TEMP
	201 Move X8, TEMP
	202 Move [X31+8], X0
	203 Move [X31+16], X8
	204 Add X0, X31, 8
	205 Move X1, X31
	206 Move [X31+24], W20
	207 Call Enum.ToString, X0
	208 Move X19, X0
	209 Move X0, 0xB88000
	210 Move X0, [X0+1800]
	211 Call 0x1C17D08
	212 Move X1, X19
	213 Move X2, X31
	214 Call String.Concat, X0, X1
	215 Move X19, X0
	216 Move X0, 0xB44000
	217 Move X0, [X0+2000]
	218 Call 0x1C17D08
	219 Call 0x1C17F10
	220 Move X1, X19
	221 Move X2, X31
	222 Move X20, X0
	223 Call Exception..ctor, X0, X1
	224 Move X0, 0xB88000
	225 Move X0, [X0+1808]
	226 Call 0x1C17D08
	227 Move X1, X0
	228 Move X0, X20
	229 Call 0x1C17DEC

Method: SimpleJSON.JSONNode LoadFromCompressedFile(System.String aFileName)

Disassembly:
	0x035B022C BL 0x1C16DFC
	0x035B0230 ADD X2, X31, 0x8
	0x035B0234 MOV X0, X19
	0x035B0238 MOV X1, X20
	0x035B023C MOV X3, X31
	0x035B0240 BL 0x3394820
	0x035B0244 TBZ X0, 0x0, 0x35B0250
	0x035B0248 LDR X0, [X31 + 0x8]
	0x035B024C B 0x35B0264
	0x035B0250 LDR X0, [X21]
	0x035B0254 LDR W8, [X0 + 0xE0]
	0x035B0258 CBNZ W8, 0x35B0260
	0x035B025C BL 0x1C16DFC
	0x035B0260 MOV X0, X31
	0x035B0264 LDP X20, X19, [X31 + 0x20]
	0x035B0268 LDP X30, X21, [X31 + 0x10]
	0x035B026C ADD X31, X31, 0x30
	0x035B0270 RET
	0x035B0274 SUB X31, X31, 0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB44000
	004 Move X0, [X0+2000]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xB88000
	009 Move X0, [X0+1752]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call Exception..ctor, X0, X1
	015 Move X0, 0xB88000
	016 Move X0, [X0+1816]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: SimpleJSON.JSONNode LoadFromCompressedStream(System.IO.Stream aData)

Disassembly:
	0x035B0278 STP X30, X21, [X31 + 0x10]
	0x035B027C STP X20, X19, [X31 + 0x20]
	0x035B0280 ADRP X20, 0xE30000
	0x035B0284 STR X1, [X31 + 0x8]
	0x035B0288 ADRP X21, 0xB45000
	0x035B028C LDRB W8, [X20 + 0x72]
	0x035B0290 LDR X21, [X21 + 0x570]
	0x035B0294 MOV X19, X0
	0x035B0298 TBNZ X8, 0x0, 0x35B02B0
	0x035B029C ADRP X0, 0xB45000
	0x035B02A0 LDR X0, [X0 + 0x570]
	0x035B02A4 BL 0x1C16CF4
	0x035B02A8 MOVZ W8, 0x1
	0x035B02AC STRB W8, [X20 + 0x72]
	0x035B02B0 LDR X0, [X21]
	0x035B02B4 LDR W8, [X0 + 0xE0]
	0x035B02B8 CBNZ W8, 0x35B02C0
	0x035B02BC BL 0x1C16DFC
	0x035B02C0 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB44000
	004 Move X0, [X0+2000]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xB88000
	009 Move X0, [X0+1752]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call Exception..ctor, X0, X1
	015 Move X0, 0xB88000
	016 Move X0, [X0+1824]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: SimpleJSON.JSONNode LoadFromCompressedBase64(System.String aBase64)

Disassembly:
	0x035B02C4 MOV X1, X31
	0x035B02C8 BL 0x3394970
	0x035B02CC LDR X8, [X19]
	0x035B02D0 MOV X1, X0
	0x035B02D4 MOV X0, X19
	0x035B02D8 LDP X9, X2, [X8 + 0x1D8]
	0x035B02DC BLR X9
	0x035B02E0 LDP X20, X19, [X31 + 0x20]
	0x035B02E4 LDP X30, X21, [X31 + 0x10]
	0x035B02E8 ADD X31, X31, 0x30
	0x035B02EC RET
	0x035B02F0 STR X30, [X31 - 0x20]!
	0x035B02F4 STP X20, X19, [X31 + 0x10]
	0x035B02F8 ADRP X20, 0xE30000
	0x035B02FC STR X0, [X31 + 0x8]
	0x035B0300 ADRP X19, 0xB45000
	0x035B0304 LDRB W8, [X20 + 0x73]
	0x035B0308 LDR X19, [X19 + 0x570]
	0x035B030C TBNZ X8, 0x0, 0x35B0330

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB44000
	004 Move X0, [X0+2000]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xB88000
	009 Move X0, [X0+1752]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call Exception..ctor, X0, X1
	015 Move X0, 0xB88000
	016 Move X0, [X0+1832]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: SimpleJSON.JSONNode LoadFromBinaryStream(System.IO.Stream aData)

Disassembly:
	0x035B0310 ADRP X0, 0xB87000
	0x035B0314 LDR X0, [X0 + 0x650]
	0x035B0318 BL 0x1C16CF4
	0x035B031C ADRP X0, 0xB45000
	0x035B0320 LDR X0, [X0 + 0x570]
	0x035B0324 BL 0x1C16CF4
	0x035B0328 MOVZ W8, 0x1
	0x035B032C STRB W8, [X20 + 0x73]
	0x035B0330 LDR X0, [X19]
	0x035B0334 ADRP X19, 0xB87000
	0x035B0338 LDR W8, [X0 + 0xE0]
	0x035B033C LDR X19, [X19 + 0x650]
	0x035B0340 CBNZ W8, 0x35B0348
	0x035B0344 BL 0x1C16DFC
	0x035B0348 ADD X0, X31, 0x8
	0x035B034C MOV X1, X31
	0x035B0350 BL 0x3394970
	0x035B0354 LDR X8, [X19]
	0x035B0358 MOV X19, X0
	0x035B035C MOV X0, X8
	0x035B0360 BL 0x1C16F10
	0x035B0364 MOV X1, X19
	0x035B0368 MOV X20, X0
	0x035B036C BL 0x35ACFF8
	0x035B0370 MOV X0, X20
	0x035B0374 LDP X20, X19, [X31 + 0x10]
	0x035B0378 LDR X30, [X31], #0x20
	0x035B037C RET
	0x035B0380 STR X30, [X31 - 0x10]!
	0x035B0384 CBZ X0, 0x35B039C
	0x035B0388 LDR X8, [X0]
	0x035B038C LDR X2, [X8 + 0x538]
	0x035B0390 LDR X1, [X8 + 0x540]
	0x035B0394 LDR X30, [X31], #0x10
	0x035B0398 BR X2
	0x035B039C BL 0x1C16F20
	0x035B03A0 SUB X31, X31, 0x20
	0x035B03A4 STP X31, X30, [X31 + 0x8]
	0x035B03A8 STR X31, [X31]
	0x035B03AC LDR X8, [X0]
	0x035B03B0 LDP X9, X1, [X8 + 0x1C8]
	0x035B03B4 BLR X9
	0x035B03B8 ADD X1, X31, 0x0
	0x035B03BC MOV X2, X31
	0x035B03C0 BL 0x3377064
	0x035B03C4 LDP X0, X1, [X31]
	0x035B03C8 LDR X30, [X31 + 0x10]
	0x035B03CC ADD X31, X31, 0x20
	0x035B03D0 RET
	0x035B03D4 SUB X31, X31, 0x20
	0x035B03D8 STP X30, X19, [X31 + 0x10]
	0x035B03DC MOV X19, X0
	0x035B03E0 STP X1, X2, [X31]
	0x035B03E4 ADD X0, X31, 0x0
	0x035B03E8 MOV X1, X31
	0x035B03EC BL 0x337866C
	0x035B03F0 LDR X8, [X19]
	0x035B03F4 MOV X1, X0
	0x035B03F8 MOV X0, X19
	0x035B03FC LDP X9, X2, [X8 + 0x1D8]
	0x035B0400 BLR X9
	0x035B0404 LDP X30, X19, [X31 + 0x10]
	0x035B0408 ADD X31, X31, 0x20
	0x035B040C RET
	0x035B0410 SUB X31, X31, 0x30
	0x035B0414 STP X1, X30, [X31 + 0x8]
	0x035B0418 STP X20, X19, [X31 + 0x20]
	0x035B041C ADRP X20, 0xE30000
	0x035B0420 STR X0, [X31]
	0x035B0424 ADRP X19, 0xB87000
	0x035B0428 LDRB W8, [X20 + 0x74]
	0x035B042C LDR X19, [X19 + 0x650]
	0x035B0430 TBNZ X8, 0x0, 0x35B0448
	0x035B0434 ADRP X0, 0xB87000
	0x035B0438 LDR X0, [X0 + 0x650]
	0x035B043C BL 0x1C16CF4
	0x035B0440 MOVZ W8, 0x1
	0x035B0444 STRB W8, [X20 + 0x74]
	0x035B0448 ADD X0, X31, 0x0
	0x035B044C MOV X1, X31
	0x035B0450 BL 0x337866C
	0x035B0454 LDR X8, [X19]
	0x035B0458 MOV X19, X0
	0x035B045C MOV X0, X8
	0x035B0460 BL 0x1C16F10
	0x035B0464 MOV X1, X19
	0x035B0468 MOV X20, X0
	0x035B046C BL 0x35ACFF8
	0x035B0470 MOV X0, X20
	0x035B0474 LDP X20, X19, [X31 + 0x20]
	0x035B0478 LDR X30, [X31 + 0x10]
	0x035B047C ADD X31, X31, 0x30
	0x035B0480 RET
	0x035B0484 STR X30, [X31 - 0x10]!
	0x035B0488 CBZ X0, 0x35B04A0
	0x035B048C LDR X8, [X0]
	0x035B0490 LDR X2, [X8 + 0x558]
	0x035B0494 LDR X1, [X8 + 0x560]
	0x035B0498 LDR X30, [X31], #0x10
	0x035B049C BR X2
	0x035B04A0 BL 0x1C16F20
	0x035B04A4 STP X30, X23, [X31 - 0x30]!
	0x035B04A8 STP X22, X21, [X31 + 0x10]
	0x035B04AC STP X20, X19, [X31 + 0x20]
	0x035B04B0 ADRP X20, 0xE30000
	0x035B04B4 LDRB W8, [X20 + 0x75]
	0x035B04B8 MOV X19, X0
	0x035B04BC TBNZ X8, 0x0, 0x35B04D4
	0x035B04C0 ADRP X0, 0xB43000
	0x035B04C4 LDR X0, [X0 + 0x618]
	0x035B04C8 BL 0x1C16CF4
	0x035B04CC MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE31000
	007 Move X19, 0xB76000
	008 Move X21, 0xB45000
	009 Move W8, [X22+97]
	010 Move X19, [X19+520]
	011 Move X21, [X21+1120]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xB76000
	018 Move X0, [X0+520]
	019 Call 0x1C17CF4
	020 Move X0, 0xB44000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0xB45000
	024 Move X0, [X0+1120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+97], W8
	028 Move X0, [X19]
	029 Move X22, 0xB44000
	030 Move X22, [X22+3584]
	031 Call 0x1C17F10
	032 Move X1, X20
	033 Move X2, X31
	034 Move X19, X0
	035 Call BinaryReader..ctor, X0, X1
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Call JSONNode.DeserializeBinary, X0
	043 Move X21, X0
	044 Move X20, X31
	045 Compare X19, 0
	046 JumpIfEqual {68}
	047 Move X8, [X19]
	048 Move X1, [X22]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X19
	059 Move W2, W31
	060 Call 0x1C5D788
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X20, 0
	069 JumpIfNotEqual {77}
	070 Move X0, X21
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return X0
	077 Move X0, X20
	078 Call 0x1C17F18
	079 Move X21, X0
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, X21
	082 Call 0x3EB2AD0
	083 Move X20, [X0]
	084 Call 0x3EB2AE0
	085 Move X21, X31
	086 Compare X19, 0
	087 JumpIfNotEqual {47}
	088 Move X20, X31
	089 Move X21, X0
	090 Compare X19, 0
	091 JumpIfEqual {113}
	092 Move X8, [X19]
	093 Move X1, [X22]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X19
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X19
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Compare X20, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X21
	116 Call 0x1D2D690
	117 Move X0, X20
	118 Call 0x1C17F18
	119 Call 0x1991590

Method: SimpleJSON.JSONNode LoadFromBinaryFile(System.String aFileName)

Disassembly:
	0x035B04D0 STRB W8, [X20 + 0x75]
	0x035B04D4 LDR X8, [X19]
	0x035B04D8 MOV X0, X19
	0x035B04DC LDR X9, [X8 + 0x228]
	0x035B04E0 LDR X1, [X8 + 0x230]
	0x035B04E4 BLR X9
	0x035B04E8 TBNZ X0, 0x0, 0x35B0594
	0x035B04EC LDR X8, [X19]
	0x035B04F0 MOV X0, X19
	0x035B04F4 LDR X9, [X8 + 0x238]
	0x035B04F8 LDR X1, [X8 + 0x240]
	0x035B04FC BLR X9
	0x035B0500 TBZ X0, 0x0, 0x35B0594
	0x035B0504 LDR X8, [X19]
	0x035B0508 MOV X0, X19
	0x035B050C LDP X9, X1, [X8 + 0x1E8]
	0x035B0510 BLR X9
	0x035B0514 ADRP X8, 0xB43000
	0x035B0518 LDR X8, [X8 + 0x618]
	0x035B051C MOV W22, W0
	0x035B0520 MOV W1, W22
	0x035B0524 LDR X8, [X8]
	0x035B0528 MOV X0, X8
	0x035B052C BL 0x1C16D6C
	0x035B0530 CMP W22, 0x1
	0x035B0534 MOV X20, X0
	0x035B0538 B.LT 0x35B0598
	0x035B053C MOV X21, X31
	0x035B0540 MOV W22, W22
	0x035B0544 ADD X23, X20, 0x20
	0x035B0548 LDR X8, [X19]
	0x035B054C MOV X0, X19
	0x035B0550 MOV W1, W21
	0x035B0554 LDP X9, X2, [X8 + 0x188]
	0x035B0558 BLR X9
	0x035B055C CBZ X0, 0x35B05AC
	0x035B0560 LDR X8, [X0]
	0x035B0564 LDR X9, [X8 + 0x498]
	0x035B0568 LDR X1, [X8 + 0x4A0]
	0x035B056C BLR X9
	0x035B0570 CBZ X20, 0x35B05AC
	0x035B0574 LDR W8, [X20 + 0x18]
	0x035B0578 CMP X21, X8
	0x035B057C B.CS 0x35B05B0
	0x035B0580 STRB W0, [X23, X21, LSL]
	0x035B0584 ADD X21, X21, 0x1
	0x035B0588 CMP X22, X21
	0x035B058C B.NE 0x35B0548
	0x035B0590 B 0x35B0598
	0x035B0594 MOV X20, X31
	0x035B0598 MOV X0, X20
	0x035B059C LDP X20, X19, [X31 + 0x20]
	0x035B05A0 LDP X22, X21, [X31 + 0x10]
	0x035B05A4 LDP X30, X23, [X31], #0x30
	0x035B05A8 RET
	0x035B05AC BL 0x1C16F20
	0x035B05B0 BL 0x1C16F28
	0x035B05B4 STR X30, [X31 - 0x40]!
	0x035B05B8 STP X24, X23, [X31 + 0x10]
	0x035B05BC STP X22, X21, [X31 + 0x20]
	0x035B05C0 STP X20, X19, [X31 + 0x30]
	0x035B05C4 ADRP X21, 0xE30000
	0x035B05C8 LDRB W8, [X21 + 0x76]
	0x035B05CC MOV X19, X1
	0x035B05D0 MOV X20, X0
	0x035B05D4 TBNZ X8, 0x0, 0x35B05EC
	0x035B05D8 ADRP X0, 0xB44000
	0x035B05DC LDR X0, [X0 + 0x460]
	0x035B05E0 BL 0x1C16CF4
	0x035B05E4 MOVZ W8, 0x1
	0x035B05E8 STRB W8, [X21 + 0x76]
	0x035B05EC LDR X8, [X20]
	0x035B05F0 MOV X0, X20
	0x035B05F4 LDR X9, [X8 + 0x238]
	0x035B05F8 LDR X1, [X8 + 0x240]
	0x035B05FC BLR X9
	0x035B0600 CBZ X19, 0x35B0688
	0x035B0604 TBZ X0, 0x0, 0x35B0688
	0x035B0608 LDR X8, [X20]
	0x035B060C MOV X0, X20
	0x035B0610 LDR X9, [X8 + 0x2C8]
	0x035B0614 LDR X1, [X8 + 0x2D0]
	0x035B0618 BLR X9
	0x035B061C LDR X8, [X19 + 0x18]
	0x035B0620 CMP W8, 0x1
	0x035B0624 B.LT 0x35B0688
	0x035B0628 ADRP X24, 0xB44000
	0x035B062C LDR X24, [X24 + 0x460]
	0x035B0630 MOV X22, X31
	0x035B0634 AND X8, X8, 0x0
	0x035B0638 ADD X23, X19, 0x20
	0x035B063C CMP X22, W8, UXTW
	0x035B0640 B.CS 0x35B069C
	0x035B0644 LDR X0, [X24]
	0x035B0648 LDRB W21, [X23, X22, LSL]
	0x035B064C LDR W8, [X0 + 0xE0]
	0x035B0650 CBNZ W8, 0x35B0658
	0x035B0654 BL 0x1C16DFC
	0x035B0658 MOV W0, W21
	0x035B065C BL 0x35AFC94
	0x035B0660 LDR X8, [X20]
	0x035B0664 MOV X1, X0
	0x035B0668 MOV X0, X20
	0x035B066C LDR X9, [X8 + 0x288]
	0x035B0670 LDR X2, [X8 + 0x290]
	0x035B0674 BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE31000
	007 Move X20, 0xB45000
	008 Move W8, [X21+98]
	009 Move X20, [X20+1120]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB44000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xB45000
	019 Move X0, [X0+1120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+98], W8
	023 Move X22, 0xB44000
	024 Move X22, [X22+3584]
	025 Move X0, X19
	026 Move X1, X31
	027 Call File.OpenRead, X0
	028 Move X8, [X20]
	029 Move X19, X0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Call JSONNode.LoadFromBinaryStream, X0
	037 Move X21, X0
	038 Move X20, X31
	039 Compare X19, 0
	040 JumpIfEqual {62}
	041 Move X8, [X19]
	042 Move X1, [X22]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move X0, X19
	053 Move W2, W31
	054 Call 0x1C5D788
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X0, X19
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Compare X20, 0
	063 JumpIfNotEqual {71}
	064 Move X0, X21
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return X0
	071 Move X0, X20
	072 Call 0x1C17F18
	073 Move X21, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X21
	076 Call 0x3EB2AD0
	077 Move X20, [X0]
	078 Call 0x3EB2AE0
	079 Move X21, X31
	080 Compare X19, 0
	081 JumpIfNotEqual {41}
	082 Move X20, X31
	083 Move X21, X0
	084 Compare X19, 0
	085 JumpIfEqual {107}
	086 Move X8, [X19]
	087 Move X1, [X22]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X19
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Compare X20, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X21
	110 Call 0x1D2D690
	111 Move X0, X20
	112 Call 0x1C17F18
	113 Call 0x1991590

Method: SimpleJSON.JSONNode LoadFromBinaryBase64(System.String aBase64)

Disassembly:
	0x035B0678 LDR W8, [X19 + 0x18]
	0x035B067C ADD X22, X22, 0x1
	0x035B0680 CMP X22, W8, SXTW
	0x035B0684 B.LT 0x35B063C
	0x035B0688 LDP X20, X19, [X31 + 0x30]
	0x035B068C LDP X22, X21, [X31 + 0x20]
	0x035B0690 LDP X24, X23, [X31 + 0x10]
	0x035B0694 LDR X30, [X31], #0x40
	0x035B0698 RET
	0x035B069C BL 0x1C16F28
	0x035B06A0 STP X30, X21, [X31 - 0x20]!
	0x035B06A4 STP X20, X19, [X31 + 0x10]
	0x035B06A8 ADRP X20, 0xE30000
	0x035B06AC ADRP X21, 0xB6D000
	0x035B06B0 LDRB W8, [X20 + 0x77]
	0x035B06B4 LDR X21, [X21 + 0x370]
	0x035B06B8 MOV X19, X0
	0x035B06BC TBNZ X8, 0x0, 0x35B06D4
	0x035B06C0 ADRP X0, 0xB6D000
	0x035B06C4 LDR X0, [X0 + 0x370]
	0x035B06C8 BL 0x1C16CF4
	0x035B06CC MOVZ W8, 0x1
	0x035B06D0 STRB W8, [X20 + 0x77]
	0x035B06D4 LDR X0, [X21]
	0x035B06D8 BL 0x1C16F10
	0x035B06DC MOV X20, X0
	0x035B06E0 BL 0x35AE904
	0x035B06E4 CBZ X20, 0x35B0710
	0x035B06E8 LDR X8, [X20]
	0x035B06EC MOV X0, X20
	0x035B06F0 MOV X1, X19
	0x035B06F4 LDR X9, [X8 + 0x588]
	0x035B06F8 LDR X2, [X8 + 0x590]
	0x035B06FC BLR X9
	0x035B0700 MOV X0, X20
	0x035B0704 LDP X20, X19, [X31 + 0x10]
	0x035B0708 LDP X30, X21, [X31], #0x20
	0x035B070C RET
	0x035B0710 BL 0x1C16F20
	0x035B0714 STR X30, [X31 - 0x10]!
	0x035B0718 CBZ X0, 0x35B0730
	0x035B071C LDR X8, [X0]
	0x035B0720 LDR X2, [X8 + 0x578]
	0x035B0724 LDR X1, [X8 + 0x580]
	0x035B0728 LDR X30, [X31], #0x10
	0x035B072C BR X2
	0x035B0730 BL 0x1C16F20
	0x035B0734 STP X30, X23, [X31 - 0x30]!
	0x035B0738 STP X22, X21, [X31 + 0x10]
	0x035B073C STP X20, X19, [X31 + 0x20]
	0x035B0740 ADRP X20, 0xE30000
	0x035B0744 LDRB W8, [X20 + 0x78]
	0x035B0748 MOV X19, X0
	0x035B074C TBNZ X8, 0x0, 0x35B077C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE31000
	006 Move X20, 0xB4D000
	007 Move W8, [X21+99]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB4D000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move X0, 0xB45000
	018 Move X0, [X0+1120]
	019 Call 0x1C17CF4
	020 Move X0, 0xB4C000
	021 Move X0, [X0+1368]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+99], W8
	025 Move X0, [X20]
	026 Move X20, 0xB4C000
	027 Move W8, [X0+224]
	028 Move X20, [X20+1368]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Call Convert.FromBase64String, X0
	035 Move X8, [X20]
	036 Move X20, X0
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move X1, X20
	040 Move X2, X31
	041 Move X19, X0
	042 Call MemoryStream..ctor, X0, X1
	043 Compare X19, 0
	044 JumpIfEqual {65}
	045 Move X8, [X19]
	046 Move X20, 0xB45000
	047 Move X0, X19
	048 Move X1, X31
	049 Move X9, [X8+520]
	050 Move X2, [X8+528]
	051 Move X20, [X20+1120]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call JSONNode.LoadFromBinaryStream, X0
	064 Return X0
	065 Call 0x1C17F20

Method: System.Decimal get_AsDecimal()

Disassembly:
	0x035B0750 ADRP X0, 0xB47000
	0x035B0754 LDR X0, [X0 + 0x7D8]
	0x035B0758 BL 0x1C16CF4
	0x035B075C ADRP X0, 0xB87000
	0x035B0760 LDR X0, [X0 + 0x730]
	0x035B0764 BL 0x1C16CF4
	0x035B0768 ADRP X0, 0xB47000
	0x035B076C LDR X0, [X0 + 0x808]
	0x035B0770 BL 0x1C16CF4
	0x035B0774 MOVZ W8, 0x1
	0x035B0778 STRB W8, [X20 + 0x78]
	0x035B077C LDR X8, [X19]
	0x035B0780 MOV X0, X19
	0x035B0784 LDR X9, [X8 + 0x228]
	0x035B0788 LDR X1, [X8 + 0x230]
	0x035B078C BLR X9
	0x035B0790 TBNZ X0, 0x0, 0x35B0890
	0x035B0794 LDR X8, [X19]
	0x035B0798 MOV X0, X19
	0x035B079C LDR X9, [X8 + 0x238]
	0x035B07A0 LDR X1, [X8 + 0x240]
	0x035B07A4 BLR X9
	0x035B07A8 TBZ X0, 0x0, 0x35B0890
	0x035B07AC LDR X8, [X19]
	0x035B07B0 MOV X0, X19
	0x035B07B4 LDP X9, X1, [X8 + 0x1E8]
	0x035B07B8 BLR X9
	0x035B07BC ADRP X8, 0xB47000
	0x035B07C0 LDR X8, [X8 + 0x808]
	0x035B07C4 MOV W21, W0
	0x035B07C8 LDR X8, [X8]
	0x035B07CC MOV X0, X8
	0x035B07D0 BL 0x1C16F10
	0x035B07D4 ADRP X8, 0xB87000
	0x035B07D8 LDR X8, [X8 + 0x730]
	0x035B07DC MOV W1, W21
	0x035B07E0 MOV X20, X0
	0x035B07E4 LDR X2, [X8]
	0x035B07E8 BL 0x2F67780
	0x035B07EC CMP W21, 0x1
	0x035B07F0 B.LT 0x35B0894
	0x035B07F4 ADRP X23, 0xB47000
	0x035B07F8 LDR X23, [X23 + 0x7D8]
	0x035B07FC MOV W22, W31
	0x035B0800 LDR X8, [X19]
	0x035B0804 MOV X0, X19
	0x035B0808 MOV W1, W22

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X20+40]
	009 Move X22, 0xE31000
	010 Move X21, 0xB6C000
	011 Move X19, X0
	012 Move [X31+24], X8
	013 Move W8, [X22+100]
	014 Move X21, [X21+1520]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xB6C000
	020 Move X0, [X0+1520]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+100], W8
	024 Move [X31+8], X31
	025 Move [X31+16], X31
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X9, [X8+456]
	029 Move X1, [X8+464]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X21]
	032 Move X19, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Add X1, X31, 8
	039 Move X0, X19
	040 Move X2, X31
	041 Call Decimal.TryParse, X0, X1
	042 Move X8, [X31+8]
	043 Move X9, [X31+16]
	044 Move X10, [X20+40]
	045 Move X11, [X31+24]
	046 And W31, W0, 1
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X22, [X31+48]
	053 Move X21, [X31+56]
	054 Move X30, [X31+32]
	055 Add X31, X31, 80
	056 Return X0
	057 Call 0x3EB2B20

Method: System.Void set_AsDecimal(System.Decimal value)

Disassembly:
	0x035B080C LDP X9, X2, [X8 + 0x188]
	0x035B0810 BLR X9
	0x035B0814 CBZ X0, 0x35B08A8
	0x035B0818 LDR X8, [X0]
	0x035B081C LDR X9, [X8 + 0x498]
	0x035B0820 LDR X1, [X8 + 0x4A0]
	0x035B0824 BLR X9
	0x035B0828 CBZ X20, 0x35B08A8
	0x035B082C LDR W10, [X20 + 0x1C]
	0x035B0830 LDR X8, [X20 + 0x10]
	0x035B0834 LDR X9, [X23]
	0x035B0838 ADD W10, W10, 0x1
	0x035B083C STR W10, [X20 + 0x1C]
	0x035B0840 CBZ X8, 0x35B08A8
	0x035B0844 LDRSW X10, [X20 + 0x18]
	0x035B0848 LDR W11, [X8 + 0x18]
	0x035B084C MOV W1, W0
	0x035B0850 CMP W10, W11
	0x035B0854 B.CS 0x35B086C
	0x035B0858 ADD W9, W10, 0x1
	0x035B085C ADD X8, X8, X10
	0x035B0860 STR W9, [X20 + 0x18]
	0x035B0864 STRB W1, [X8 + 0x20]
	0x035B0868 B 0x35B0880
	0x035B086C LDR X8, [X9 + 0x20]
	0x035B0870 MOV X0, X20
	0x035B0874 LDR X8, [X8 + 0xC0]
	0x035B0878 LDR X2, [X8 + 0x70]
	0x035B087C BL 0x2F67F0C
	0x035B0880 ADD W22, W22, 0x1
	0x035B0884 CMP W21, W22
	0x035B0888 B.NE 0x35B0800
	0x035B088C B 0x35B0894
	0x035B0890 MOV X20, X31
	0x035B0894 MOV X0, X20
	0x035B0898 LDP X20, X19, [X31 + 0x20]
	0x035B089C LDP X22, X21, [X31 + 0x10]
	0x035B08A0 LDP X30, X23, [X31], #0x30
	0x035B08A4 RET
	0x035B08A8 BL 0x1C16F20
	0x035B08AC STR X30, [X31 - 0x40]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X20+40]
	009 Move X21, 0xE31000
	010 Move X22, 0xB6C000
	011 Move X19, X0
	012 Move [X31+24], X8
	013 Move [X31+8], X1
	014 Move [X31+16], X2
	015 Move W8, [X21+101]
	016 Move X22, [X22+1520]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xB6C000
	022 Move X0, [X0+1520]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+101], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Add X0, X31, 8
	032 Move X1, X31
	033 Call Decimal.ToString, X0
	034 Move X8, [X19]
	035 Move X1, X0
	036 Move X0, X19
	037 Move X9, [X8+472]
	038 Move X2, [X8+480]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X20+40]
	041 Move X9, [X31+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X22, [X31+48]
	046 Move X21, [X31+56]
	047 Move X30, [X31+32]
	048 Add X31, X31, 80
	049 Return 
	050 Call 0x3EB2B20

Method: SimpleJSON.JSONNode op_Implicit(System.Decimal aDecimal)

Disassembly:
	0x035B08B0 STP X24, X23, [X31 + 0x10]
	0x035B08B4 STP X22, X21, [X31 + 0x20]
	0x035B08B8 STP X20, X19, [X31 + 0x30]
	0x035B08BC ADRP X21, 0xE30000
	0x035B08C0 LDRB W8, [X21 + 0x79]
	0x035B08C4 MOV X19, X1
	0x035B08C8 MOV X20, X0
	0x035B08CC TBNZ X8, 0x0, 0x35B08FC
	0x035B08D0 ADRP X0, 0xB44000
	0x035B08D4 LDR X0, [X0 + 0x460]
	0x035B08D8 BL 0x1C16CF4
	0x035B08DC ADRP X0, 0xB47000
	0x035B08E0 LDR X0, [X0 + 0x758]
	0x035B08E4 BL 0x1C16CF4
	0x035B08E8 ADRP X0, 0xB47000
	0x035B08EC LDR X0, [X0 + 0x778]
	0x035B08F0 BL 0x1C16CF4
	0x035B08F4 MOVZ W8, 0x1
	0x035B08F8 STRB W8, [X21 + 0x79]
	0x035B08FC LDR X8, [X20]
	0x035B0900 MOV X0, X20
	0x035B0904 LDR X9, [X8 + 0x238]
	0x035B0908 LDR X1, [X8 + 0x240]
	0x035B090C BLR X9
	0x035B0910 CBZ X19, 0x35B09A4
	0x035B0914 TBZ X0, 0x0, 0x35B09A4
	0x035B0918 LDR X8, [X20]
	0x035B091C MOV X0, X20
	0x035B0920 LDR X9, [X8 + 0x2C8]
	0x035B0924 LDR X1, [X8 + 0x2D0]
	0x035B0928 BLR X9
	0x035B092C LDR W8, [X19 + 0x18]
	0x035B0930 CMP W8, 0x1
	0x035B0934 B.LT 0x35B09A4
	0x035B0938 ADRP X23, 0xB47000
	0x035B093C ADRP X24, 0xB44000
	0x035B0940 LDR X23, [X23 + 0x778]
	0x035B0944 LDR X24, [X24 + 0x460]
	0x035B0948 MOV W21, W31
	0x035B094C LDR X2, [X23]
	0x035B0950 MOV X0, X19
	0x035B0954 MOV W1, W21
	0x035B0958 BL 0x2F67C1C
	0x035B095C LDR X8, [X24]
	0x035B0960 MOV W22, W0
	0x035B0964 LDR W9, [X8 + 0xE0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X21+40]
	008 Move X20, 0xE31000
	009 Move X19, 0xB6C000
	010 Move [X31+24], X8
	011 Move [X31+8], X0
	012 Move [X31+16], X1
	013 Move W8, [X20+102]
	014 Move X19, [X19+1520]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB6C000
	020 Move X0, [X0+1520]
	021 Call 0x1C17CF4
	022 Move X0, 0xB88000
	023 Move X0, [X0+1616]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+102], W8
	027 Move X0, [X19]
	028 Move X19, 0xB88000
	029 Move W8, [X0+224]
	030 Move X19, [X19+1616]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X0, X31, 8
	035 Move X1, X31
	036 Call Decimal.ToString, X0
	037 Move X8, [X19]
	038 Move X20, X0
	039 Move X0, X8
	040 Call 0x1C17F10
	041 Move X1, X20
	042 Move X19, X0
	043 Call JSONString..ctor, X0, X1
	044 Move X8, [X21+40]
	045 Move X9, [X31+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X19
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Add X31, X31, 64
	053 Return X0
	054 Call 0x3EB2B20

Method: System.Decimal op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B0968 CBNZ W9, 0x35B0974
	0x035B096C MOV X0, X8
	0x035B0970 BL 0x1C16DFC
	0x035B0974 MOV W0, W22
	0x035B0978 BL 0x35AFC94
	0x035B097C LDR X8, [X20]
	0x035B0980 MOV X1, X0
	0x035B0984 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1080]
	006 Move X1, [X8+1088]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.Char get_AsChar()

Disassembly:
	0x035B0988 LDR X9, [X8 + 0x288]
	0x035B098C LDR X2, [X8 + 0x290]
	0x035B0990 BLR X9
	0x035B0994 LDR W8, [X19 + 0x18]
	0x035B0998 ADD W21, W21, 0x1
	0x035B099C CMP W21, W8
	0x035B09A0 B.LT 0x35B094C
	0x035B09A4 LDP X20, X19, [X31 + 0x30]
	0x035B09A8 LDP X22, X21, [X31 + 0x20]
	0x035B09AC LDP X24, X23, [X31 + 0x10]
	0x035B09B0 LDR X30, [X31], #0x40
	0x035B09B4 RET
	0x035B09B8 STP X30, X21, [X31 - 0x20]!
	0x035B09BC STP X20, X19, [X31 + 0x10]
	0x035B09C0 ADRP X20, 0xE30000
	0x035B09C4 ADRP X21, 0xB6D000
	0x035B09C8 LDRB W8, [X20 + 0x7A]
	0x035B09CC LDR X21, [X21 + 0x370]
	0x035B09D0 MOV X19, X0
	0x035B09D4 TBNZ X8, 0x0, 0x35B09EC
	0x035B09D8 ADRP X0, 0xB6D000
	0x035B09DC LDR X0, [X0 + 0x370]
	0x035B09E0 BL 0x1C16CF4
	0x035B09E4 MOVZ W8, 0x1
	0x035B09E8 STRB W8, [X20 + 0x7A]
	0x035B09EC LDR X0, [X21]
	0x035B09F0 BL 0x1C16F10
	0x035B09F4 MOV X20, X0
	0x035B09F8 BL 0x35AE904
	0x035B09FC CBZ X20, 0x35B0A28
	0x035B0A00 LDR X8, [X20]
	0x035B0A04 MOV X0, X20
	0x035B0A08 MOV X1, X19
	0x035B0A0C LDR X9, [X8 + 0x5A8]
	0x035B0A10 LDR X2, [X8 + 0x5B0]
	0x035B0A14 BLR X9
	0x035B0A18 MOV X0, X20
	0x035B0A1C LDP X20, X19, [X31 + 0x10]
	0x035B0A20 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+520]
	006 Move X1, [X8+528]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {34}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+456]
	015 Move X1, [X8+464]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X0, 0
	018 JumpIfEqual {52}
	019 Move W8, [X0+16]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+456]
	024 Move X1, [X8+464]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Compare X0, 0
	027 JumpIfEqual {52}
	028 Move W1, W31
	029 Move X2, X31
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Call String.get_Chars, X0, X1
	033 Return X0
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+504]
	037 Move X1, [X8+512]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {48}
	043 Move X8, [X19]
	044 Move X0, X19
	045 Move X9, [X8+872]
	046 Move X1, [X8+880]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move W0, W31
	049 Move X30, [X31+16]
	050 Move X19, [X31+24]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Void set_AsChar(System.Char value)

Disassembly:
	0x035B0A24 RET
	0x035B0A28 BL 0x1C16F20
	0x035B0A2C STR X30, [X31 - 0x10]!
	0x035B0A30 CBZ X0, 0x35B0A48
	0x035B0A34 LDR X8, [X0]
	0x035B0A38 LDR X2, [X8 + 0x598]
	0x035B0A3C LDR X1, [X8 + 0x5A0]
	0x035B0A40 LDR X30, [X31], #0x10
	0x035B0A44 BR X2
	0x035B0A48 BL 0x1C16F20
	0x035B0A4C STP X30, X23, [X31 - 0x30]!
	0x035B0A50 STP X22, X21, [X31 + 0x10]
	0x035B0A54 STP X20, X19, [X31 + 0x20]
	0x035B0A58 ADRP X20, 0xE30000
	0x035B0A5C LDRB W8, [X20 + 0x7B]
	0x035B0A60 MOV X19, X0
	0x035B0A64 TBNZ X8, 0x0, 0x35B0A7C
	0x035B0A68 ADRP X0, 0xB43000
	0x035B0A6C LDR X0, [X0 + 0xAC8]
	0x035B0A70 BL 0x1C16CF4
	0x035B0A74 MOVZ W8, 0x1
	0x035B0A78 STRB W8, [X20 + 0x7B]
	0x035B0A7C LDR X8, [X19]
	0x035B0A80 MOV X0, X19
	0x035B0A84 LDR X9, [X8 + 0x228]
	0x035B0A88 LDR X1, [X8 + 0x230]
	0x035B0A8C BLR X9
	0x035B0A90 TBNZ X0, 0x0, 0x35B0B38
	0x035B0A94 LDR X8, [X19]
	0x035B0A98 MOV X0, X19
	0x035B0A9C LDR X9, [X8 + 0x238]
	0x035B0AA0 LDR X1, [X8 + 0x240]
	0x035B0AA4 BLR X9
	0x035B0AA8 TBZ X0, 0x0, 0x35B0B38
	0x035B0AAC LDR X8, [X19]
	0x035B0AB0 MOV X0, X19
	0x035B0AB4 LDP X9, X1, [X8 + 0x1E8]
	0x035B0AB8 BLR X9
	0x035B0ABC ADRP X8, 0xB43000
	0x035B0AC0 LDR X8, [X8 + 0xAC8]
	0x035B0AC4 MOV W22, W0
	0x035B0AC8 MOV W1, W22
	0x035B0ACC LDR X8, [X8]
	0x035B0AD0 MOV X0, X8
	0x035B0AD4 BL 0x1C16D6C
	0x035B0AD8 CMP W22, 0x1
	0x035B0ADC MOV X20, X0
	0x035B0AE0 B.LT 0x35B0B3C
	0x035B0AE4 MOV X21, X31
	0x035B0AE8 MOV W22, W22
	0x035B0AEC ADD X23, X20, 0x20
	0x035B0AF0 LDR X8, [X19]
	0x035B0AF4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE31000
	007 Move W8, [X21+103]
	008 Move W20, W1
	009 Move X19, X0
	010 NotImplemented "Instruction STRH not yet implemented."
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB46000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+103], W8
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+520]
	023 Move X1, [X8+528]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {45}
	029 Move X8, 0xB46000
	030 Move X8, [X8+368]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X0, X31, 12
	037 Move X1, X31
	038 Call Char.ToString, X0
	039 Move X8, [X19]
	040 Move X1, X0
	041 Move X0, X19
	042 Move X9, [X8+472]
	043 Move X2, [X8+480]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X9, [X8+504]
	048 Move X1, [X8+512]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {65}
	054 Move X8, [X19]
	055 And W1, W20, 0xFFFF
	056 Move X0, X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X3, [X8+888]
	060 Move X2, [X8+896]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Add X31, X31, 48
	064 CallNoReturn X3
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 Add X31, X31, 48
	070 Return 

Method: SimpleJSON.JSONNode op_Implicit(System.Char aChar)

Disassembly:
	0x035B0AF8 MOV W1, W21
	0x035B0AFC LDP X9, X2, [X8 + 0x188]
	0x035B0B00 BLR X9
	0x035B0B04 CBZ X0, 0x35B0B50
	0x035B0B08 LDR X8, [X0]
	0x035B0B0C LDP X9, X1, [X8 + 0x1C8]
	0x035B0B10 BLR X9
	0x035B0B14 CBZ X20, 0x35B0B50
	0x035B0B18 LDR W8, [X20 + 0x18]
	0x035B0B1C CMP X21, X8
	0x035B0B20 B.CS 0x35B0B54
	0x035B0B24 STR X0, [X23, X21, LSL #3]
	0x035B0B28 ADD X21, X21, 0x1
	0x035B0B2C CMP X22, X21
	0x035B0B30 B.NE 0x35B0AF0
	0x035B0B34 B 0x35B0B3C
	0x035B0B38 MOV X20, X31
	0x035B0B3C MOV X0, X20
	0x035B0B40 LDP X20, X19, [X31 + 0x20]
	0x035B0B44 LDP X22, X21, [X31 + 0x10]
	0x035B0B48 LDP X30, X23, [X31], #0x30
	0x035B0B4C RET
	0x035B0B50 BL 0x1C16F20
	0x035B0B54 BL 0x1C16F28
	0x035B0B58 STR X30, [X31 - 0x40]!
	0x035B0B5C STP X24, X23, [X31 + 0x10]
	0x035B0B60 STP X22, X21, [X31 + 0x20]
	0x035B0B64 STP X20, X19, [X31 + 0x30]
	0x035B0B68 ADRP X21, 0xE30000
	0x035B0B6C LDRB W8, [X21 + 0x7C]
	0x035B0B70 MOV X19, X1
	0x035B0B74 MOV X20, X0
	0x035B0B78 TBNZ X8, 0x0, 0x35B0B90
	0x035B0B7C ADRP X0, 0xB44000
	0x035B0B80 LDR X0, [X0 + 0x460]
	0x035B0B84 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE31000
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Move X19, 0xB46000
	007 Move W8, [X20+104]
	008 Move X19, [X19+368]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB46000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move X0, 0xB88000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+104], W8
	021 Move X0, [X19]
	022 Move X19, 0xB88000
	023 Move W8, [X0+224]
	024 Move X19, [X19+1616]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Add X0, X31, 12
	029 Move X1, X31
	030 Call Char.ToString, X0
	031 Move X8, [X19]
	032 Move X19, X0
	033 Move X0, X8
	034 Call 0x1C17F10
	035 Move X1, X19
	036 Move X20, X0
	037 Call JSONString..ctor, X0, X1
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Char op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B0B88 MOVZ W8, 0x1
	0x035B0B8C STRB W8, [X21 + 0x7C]
	0x035B0B90 LDR X8, [X20]
	0x035B0B94 MOV X0, X20
	0x035B0B98 LDR X9, [X8 + 0x238]
	0x035B0B9C LDR X1, [X8 + 0x240]
	0x035B0BA0 BLR X9
	0x035B0BA4 CBZ X19, 0x35B0C2C

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1112]
	006 Move X1, [X8+1120]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.UInt32 get_AsUInt()

Disassembly:
	0x035B0BA8 TBZ X0, 0x0, 0x35B0C2C
	0x035B0BAC LDR X8, [X20]
	0x035B0BB0 MOV X0, X20
	0x035B0BB4 LDR X9, [X8 + 0x2C8]
	0x035B0BB8 LDR X1, [X8 + 0x2D0]
	0x035B0BBC BLR X9
	0x035B0BC0 LDR X8, [X19 + 0x18]
	0x035B0BC4 CMP W8, 0x1
	0x035B0BC8 B.LT 0x35B0C2C
	0x035B0BCC ADRP X24, 0xB44000
	0x035B0BD0 LDR X24, [X24 + 0x460]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+840]
	004 Move X1, [X8+848]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 NotImplemented "Instruction FCVTZS not yet implemented."
	007 NotImplemented "Instruction FCVTZU not yet implemented."
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Void set_AsUInt(System.UInt32 value)

Disassembly:
	0x035B0BD4 MOV X22, X31
	0x035B0BD8 AND X8, X8, 0x0
	0x035B0BDC ADD X23, X19, 0x20
	0x035B0BE0 CMP X22, W8, UXTW
	0x035B0BE4 B.CS 0x35B0C40
	0x035B0BE8 LDR X0, [X24]

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction UCVTF not yet implemented."
	003 Move X2, [X8+856]
	004 Move X8, [X8+864]
	005 Move X1, X8
	006 CallNoReturn X2

Method: SimpleJSON.JSONNode op_Implicit(System.UInt32 aUInt)

Disassembly:
	0x035B0BEC LDR X21, [X23, X22, LSL #3]
	0x035B0BF0 LDR W8, [X0 + 0xE0]
	0x035B0BF4 CBNZ W8, 0x35B0BFC
	0x035B0BF8 BL 0x1C16DFC
	0x035B0BFC MOV X0, X21
	0x035B0C00 BL 0x35ACF6C
	0x035B0C04 LDR X8, [X20]
	0x035B0C08 MOV X1, X0
	0x035B0C0C MOV X0, X20
	0x035B0C10 LDR X9, [X8 + 0x288]
	0x035B0C14 LDR X2, [X8 + 0x290]
	0x035B0C18 BLR X9
	0x035B0C1C LDR W8, [X19 + 0x18]
	0x035B0C20 ADD X22, X22, 0x1
	0x035B0C24 CMP X22, W8, SXTW
	0x035B0C28 B.LT 0x35B0BE0
	0x035B0C2C LDP X20, X19, [X31 + 0x30]
	0x035B0C30 LDP X22, X21, [X31 + 0x20]
	0x035B0C34 LDP X24, X23, [X31 + 0x10]
	0x035B0C38 LDR X30, [X31], #0x40
	0x035B0C3C RET
	0x035B0C40 BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE31000
	006 Move X21, 0xB6E000
	007 Move W8, [X20+105]
	008 Move X21, [X21+1024]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6E000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+105], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 NotImplemented "Instruction UCVTF not yet implemented."
	022 Move X20, X0
	023 Call JSONNumber..ctor, X0, V0
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.UInt32 op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B0C44 STP X30, X21, [X31 - 0x20]!
	0x035B0C48 STP X20, X19, [X31 + 0x10]
	0x035B0C4C ADRP X20, 0xE30000
	0x035B0C50 ADRP X21, 0xB6D000
	0x035B0C54 LDRB W8, [X20 + 0x7D]
	0x035B0C58 LDR X21, [X21 + 0x370]
	0x035B0C5C MOV X19, X0
	0x035B0C60 TBNZ X8, 0x0, 0x35B0C78

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1144]
	006 Move X1, [X8+1152]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.Byte get_AsByte()

Disassembly:
	0x035B0C64 ADRP X0, 0xB6D000
	0x035B0C68 LDR X0, [X0 + 0x370]
	0x035B0C6C BL 0x1C16CF4
	0x035B0C70 MOVZ W8, 0x1
	0x035B0C74 STRB W8, [X20 + 0x7D]
	0x035B0C78 LDR X0, [X21]
	0x035B0C7C BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+872]
	004 Move X1, [X8+880]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void set_AsByte(System.Byte value)

Disassembly:
	0x035B0C80 MOV X20, X0
	0x035B0C84 BL 0x35AE904
	0x035B0C88 CBZ X20, 0x35B0CB4
	0x035B0C8C LDR X8, [X20]
	0x035B0C90 MOV X0, X20

ISIL:
	001 Move X8, [X0]
	002 And W1, W1, 255
	003 Move X3, [X8+888]
	004 Move X2, [X8+896]
	005 CallNoReturn X3

Method: SimpleJSON.JSONNode op_Implicit(System.Byte aByte)

Disassembly:
	0x035B0C94 MOV X1, X19
	0x035B0C98 LDR X9, [X8 + 0x5C8]
	0x035B0C9C LDR X2, [X8 + 0x5D0]
	0x035B0CA0 BLR X9
	0x035B0CA4 MOV X0, X20
	0x035B0CA8 LDP X20, X19, [X31 + 0x10]
	0x035B0CAC LDP X30, X21, [X31], #0x20
	0x035B0CB0 RET
	0x035B0CB4 BL 0x1C16F20
	0x035B0CB8 STR X30, [X31 - 0x10]!
	0x035B0CBC CBZ X0, 0x35B0CD4
	0x035B0CC0 LDR X8, [X0]
	0x035B0CC4 LDR X2, [X8 + 0x5B8]
	0x035B0CC8 LDR X1, [X8 + 0x5C0]
	0x035B0CCC LDR X30, [X31], #0x10
	0x035B0CD0 BR X2
	0x035B0CD4 BL 0x1C16F20
	0x035B0CD8 STP X30, X23, [X31 - 0x30]!
	0x035B0CDC STP X22, X21, [X31 + 0x10]
	0x035B0CE0 STP X20, X19, [X31 + 0x20]
	0x035B0CE4 ADRP X20, 0xE30000
	0x035B0CE8 LDRB W8, [X20 + 0x7E]
	0x035B0CEC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE31000
	006 Move X21, 0xB6E000
	007 Move W8, [X20+106]
	008 Move X21, [X21+1024]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6E000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+106], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 And W8, W19, 255
	022 NotImplemented "Instruction UCVTF not yet implemented."
	023 Move X20, X0
	024 Call JSONNumber..ctor, X0, V0
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Byte op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B0CF0 TBNZ X8, 0x0, 0x35B0D20
	0x035B0CF4 ADRP X0, 0xB44000
	0x035B0CF8 LDR X0, [X0 + 0x1B8]
	0x035B0CFC BL 0x1C16CF4
	0x035B0D00 ADRP X0, 0xB4C000
	0x035B0D04 LDR X0, [X0 + 0x118]
	0x035B0D08 BL 0x1C16CF4
	0x035B0D0C ADRP X0, 0xB44000

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1176]
	006 Move X1, [X8+1184]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.SByte get_AsSByte()

Disassembly:
	0x035B0D10 LDR X0, [X0 + 0x1D0]
	0x035B0D14 BL 0x1C16CF4
	0x035B0D18 MOVZ W8, 0x1
	0x035B0D1C STRB W8, [X20 + 0x7E]
	0x035B0D20 LDR X8, [X19]
	0x035B0D24 MOV X0, X19
	0x035B0D28 LDR X9, [X8 + 0x228]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+872]
	004 Move X1, [X8+880]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void set_AsSByte(System.SByte value)

Disassembly:
	0x035B0D2C LDR X1, [X8 + 0x230]
	0x035B0D30 BLR X9
	0x035B0D34 TBNZ X0, 0x0, 0x35B0E30
	0x035B0D38 LDR X8, [X19]
	0x035B0D3C MOV X0, X19

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction SXTB not yet implemented."
	003 Move X3, [X8+888]
	004 Move X2, [X8+896]
	005 CallNoReturn X3

Method: SimpleJSON.JSONNode op_Implicit(System.SByte aSByte)

Disassembly:
	0x035B0D40 LDR X9, [X8 + 0x238]
	0x035B0D44 LDR X1, [X8 + 0x240]
	0x035B0D48 BLR X9
	0x035B0D4C TBZ X0, 0x0, 0x35B0E30
	0x035B0D50 LDR X8, [X19]
	0x035B0D54 MOV X0, X19
	0x035B0D58 LDP X9, X1, [X8 + 0x1E8]
	0x035B0D5C BLR X9
	0x035B0D60 ADRP X8, 0xB44000
	0x035B0D64 LDR X8, [X8 + 0x1D0]
	0x035B0D68 MOV W21, W0
	0x035B0D6C LDR X8, [X8]
	0x035B0D70 MOV X0, X8
	0x035B0D74 BL 0x1C16F10
	0x035B0D78 ADRP X8, 0xB4C000
	0x035B0D7C LDR X8, [X8 + 0x118]
	0x035B0D80 MOV W1, W21
	0x035B0D84 MOV X20, X0
	0x035B0D88 LDR X2, [X8]
	0x035B0D8C BL 0x301B830
	0x035B0D90 CMP W21, 0x1
	0x035B0D94 B.LT 0x35B0E34
	0x035B0D98 ADRP X23, 0xB44000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE31000
	006 Move X21, 0xB6E000
	007 Move W8, [X20+107]
	008 Move X21, [X21+1024]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6E000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+107], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 NotImplemented "Instruction SXTB not yet implemented."
	022 NotImplemented "Instruction SCVTF not yet implemented."
	023 Move X20, X0
	024 Call JSONNumber..ctor, X0, V0
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.SByte op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B0D9C LDR X23, [X23 + 0x1B8]
	0x035B0DA0 MOV W22, W31
	0x035B0DA4 LDR X8, [X19]
	0x035B0DA8 MOV X0, X19
	0x035B0DAC MOV W1, W22
	0x035B0DB0 LDP X9, X2, [X8 + 0x188]
	0x035B0DB4 BLR X9
	0x035B0DB8 CBZ X0, 0x35B0E48

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1208]
	006 Move X1, [X8+1216]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.Int16 get_AsShort()

Disassembly:
	0x035B0DBC LDR X8, [X0]
	0x035B0DC0 LDP X9, X1, [X8 + 0x1C8]
	0x035B0DC4 BLR X9
	0x035B0DC8 CBZ X20, 0x35B0E48
	0x035B0DCC LDR W10, [X20 + 0x1C]
	0x035B0DD0 LDR X8, [X20 + 0x10]
	0x035B0DD4 LDR X9, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+872]
	004 Move X1, [X8+880]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void set_AsShort(System.Int16 value)

Disassembly:
	0x035B0DD8 ADD W10, W10, 0x1
	0x035B0DDC STR W10, [X20 + 0x1C]
	0x035B0DE0 CBZ X8, 0x35B0E48
	0x035B0DE4 LDRSW X10, [X20 + 0x18]
	0x035B0DE8 LDR W11, [X8 + 0x18]

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction SXTH not yet implemented."
	003 Move X3, [X8+888]
	004 Move X2, [X8+896]
	005 CallNoReturn X3

Method: SimpleJSON.JSONNode op_Implicit(System.Int16 aShort)

Disassembly:
	0x035B0DEC MOV X1, X0
	0x035B0DF0 CMP W10, W11
	0x035B0DF4 B.CS 0x35B0E0C
	0x035B0DF8 ADD W9, W10, 0x1
	0x035B0DFC ADD X8, X8, X10, 0x3, LSL
	0x035B0E00 STR W9, [X20 + 0x18]
	0x035B0E04 STR X1, [X8 + 0x20]
	0x035B0E08 B 0x35B0E20
	0x035B0E0C LDR X8, [X9 + 0x20]
	0x035B0E10 MOV X0, X20
	0x035B0E14 LDR X8, [X8 + 0xC0]
	0x035B0E18 LDR X2, [X8 + 0x70]
	0x035B0E1C BL 0x301BF90
	0x035B0E20 ADD W22, W22, 0x1
	0x035B0E24 CMP W21, W22
	0x035B0E28 B.NE 0x35B0DA4
	0x035B0E2C B 0x35B0E34
	0x035B0E30 MOV X20, X31
	0x035B0E34 MOV X0, X20
	0x035B0E38 LDP X20, X19, [X31 + 0x20]
	0x035B0E3C LDP X22, X21, [X31 + 0x10]
	0x035B0E40 LDP X30, X23, [X31], #0x30
	0x035B0E44 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE31000
	006 Move X21, 0xB6E000
	007 Move W8, [X20+108]
	008 Move X21, [X21+1024]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6E000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+108], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 NotImplemented "Instruction SXTH not yet implemented."
	022 NotImplemented "Instruction SCVTF not yet implemented."
	023 Move X20, X0
	024 Call JSONNumber..ctor, X0, V0
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Int16 op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B0E48 BL 0x1C16F20
	0x035B0E4C STR X30, [X31 - 0x40]!
	0x035B0E50 STP X24, X23, [X31 + 0x10]
	0x035B0E54 STP X22, X21, [X31 + 0x20]
	0x035B0E58 STP X20, X19, [X31 + 0x30]
	0x035B0E5C ADRP X21, 0xE30000
	0x035B0E60 LDRB W8, [X21 + 0x7F]
	0x035B0E64 MOV X19, X1

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1240]
	006 Move X1, [X8+1248]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.UInt16 get_AsUShort()

Disassembly:
	0x035B0E68 MOV X20, X0
	0x035B0E6C TBNZ X8, 0x0, 0x35B0E9C
	0x035B0E70 ADRP X0, 0xB44000
	0x035B0E74 LDR X0, [X0 + 0x460]
	0x035B0E78 BL 0x1C16CF4
	0x035B0E7C ADRP X0, 0xB44000
	0x035B0E80 LDR X0, [X0 + 0x1C8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+872]
	004 Move X1, [X8+880]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void set_AsUShort(System.UInt16 value)

Disassembly:
	0x035B0E84 BL 0x1C16CF4
	0x035B0E88 ADRP X0, 0xB6B000
	0x035B0E8C LDR X0, [X0 + 0xB58]
	0x035B0E90 BL 0x1C16CF4
	0x035B0E94 MOVZ W8, 0x1

ISIL:
	001 Move X8, [X0]
	002 And W1, W1, 0xFFFF
	003 Move X3, [X8+888]
	004 Move X2, [X8+896]
	005 CallNoReturn X3

Method: SimpleJSON.JSONNode op_Implicit(System.UInt16 aUShort)

Disassembly:
	0x035B0E98 STRB W8, [X21 + 0x7F]
	0x035B0E9C LDR X8, [X20]
	0x035B0EA0 MOV X0, X20
	0x035B0EA4 LDR X9, [X8 + 0x238]
	0x035B0EA8 LDR X1, [X8 + 0x240]
	0x035B0EAC BLR X9
	0x035B0EB0 CBZ X19, 0x35B0F44
	0x035B0EB4 TBZ X0, 0x0, 0x35B0F44
	0x035B0EB8 LDR X8, [X20]
	0x035B0EBC MOV X0, X20
	0x035B0EC0 LDR X9, [X8 + 0x2C8]
	0x035B0EC4 LDR X1, [X8 + 0x2D0]
	0x035B0EC8 BLR X9
	0x035B0ECC LDR W8, [X19 + 0x18]
	0x035B0ED0 CMP W8, 0x1
	0x035B0ED4 B.LT 0x35B0F44
	0x035B0ED8 ADRP X23, 0xB6B000
	0x035B0EDC ADRP X24, 0xB44000
	0x035B0EE0 LDR X23, [X23 + 0xB58]
	0x035B0EE4 LDR X24, [X24 + 0x460]
	0x035B0EE8 MOV W21, W31
	0x035B0EEC LDR X2, [X23]
	0x035B0EF0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE31000
	006 Move X21, 0xB6E000
	007 Move W8, [X20+109]
	008 Move X21, [X21+1024]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6E000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+109], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 And W8, W19, 0xFFFF
	022 NotImplemented "Instruction UCVTF not yet implemented."
	023 Move X20, X0
	024 Call JSONNumber..ctor, X0, V0
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.UInt16 op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B0EF4 MOV W1, W21
	0x035B0EF8 BL 0x301BCCC
	0x035B0EFC LDR X8, [X24]
	0x035B0F00 MOV X22, X0
	0x035B0F04 LDR W9, [X8 + 0xE0]
	0x035B0F08 CBNZ W9, 0x35B0F14
	0x035B0F0C MOV X0, X8
	0x035B0F10 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1272]
	006 Move X1, [X8+1280]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.DateTime get_AsDateTime()

Disassembly:
	0x035B0F14 MOV X0, X22
	0x035B0F18 BL 0x35ACF6C
	0x035B0F1C LDR X8, [X20]
	0x035B0F20 MOV X1, X0
	0x035B0F24 MOV X0, X20
	0x035B0F28 LDR X9, [X8 + 0x288]
	0x035B0F2C LDR X2, [X8 + 0x290]
	0x035B0F30 BLR X9
	0x035B0F34 LDR W8, [X19 + 0x18]
	0x035B0F38 ADD W21, W21, 0x1
	0x035B0F3C CMP W21, W8
	0x035B0F40 B.LT 0x35B0EEC
	0x035B0F44 LDP X20, X19, [X31 + 0x30]
	0x035B0F48 LDP X22, X21, [X31 + 0x20]
	0x035B0F4C LDP X24, X23, [X31 + 0x10]
	0x035B0F50 LDR X30, [X31], #0x40
	0x035B0F54 RET
	0x035B0F58 STP X30, X21, [X31 - 0x20]!
	0x035B0F5C STP X20, X19, [X31 + 0x10]
	0x035B0F60 ADRP X20, 0xE30000
	0x035B0F64 ADRP X21, 0xB6D000
	0x035B0F68 LDRB W8, [X20 + 0x80]
	0x035B0F6C LDR X21, [X21 + 0x370]
	0x035B0F70 MOV X19, X0
	0x035B0F74 TBNZ X8, 0x0, 0x35B0F8C
	0x035B0F78 ADRP X0, 0xB6D000
	0x035B0F7C LDR X0, [X0 + 0x370]
	0x035B0F80 BL 0x1C16CF4
	0x035B0F84 MOVZ W8, 0x1
	0x035B0F88 STRB W8, [X20 + 0x80]
	0x035B0F8C LDR X0, [X21]
	0x035B0F90 BL 0x1C16F10
	0x035B0F94 MOV X20, X0
	0x035B0F98 BL 0x35AE904
	0x035B0F9C CBZ X20, 0x35B0FC8
	0x035B0FA0 LDR X8, [X20]
	0x035B0FA4 MOV X0, X20
	0x035B0FA8 MOV X1, X19
	0x035B0FAC LDR X9, [X8 + 0x5E8]
	0x035B0FB0 LDR X2, [X8 + 0x5F0]
	0x035B0FB4 BLR X9
	0x035B0FB8 MOV X0, X20
	0x035B0FBC LDP X20, X19, [X31 + 0x10]
	0x035B0FC0 LDP X30, X21, [X31], #0x20
	0x035B0FC4 RET
	0x035B0FC8 BL 0x1C16F20
	0x035B0FCC STR X30, [X31 - 0x10]!
	0x035B0FD0 CBZ X0, 0x35B0FE8
	0x035B0FD4 LDR X8, [X0]
	0x035B0FD8 LDR X2, [X8 + 0x5D8]
	0x035B0FDC LDR X1, [X8 + 0x5E0]
	0x035B0FE0 LDR X30, [X31], #0x10
	0x035B0FE4 BR X2
	0x035B0FE8 BL 0x1C16F20
	0x035B0FEC STR X30, [X31 - 0x20]!
	0x035B0FF0 STP X20, X19, [X31 + 0x10]
	0x035B0FF4 ADRP X20, 0xE30000
	0x035B0FF8 LDRB W8, [X20 + 0x81]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE31000
	007 Move X20, 0xB46000
	008 Move W8, [X21+110]
	009 Move X20, [X20+3144]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB46000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move X0, 0xB45000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+110], W8
	023 Move [X31+8], X31
	024 Move X8, [X19]
	025 Move X21, 0xB45000
	026 Move X0, X19
	027 Move X9, [X8+456]
	028 Move X1, [X8+464]
	029 Move X21, [X21+2544]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X20]
	032 Move X19, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X31
	039 Call CultureInfo.get_InvariantCulture
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Add X3, X31, 8
	048 Move X0, X19
	049 Move X1, X20
	050 Move W2, W31
	051 Move X4, X31
	052 Call DateTime.TryParse, X0, X1, X2, X3
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {66}
	057 Move X0, [X21]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add X0, X31, 8
	063 Move X1, X31
	064 Move X2, X31
	065 Call DateTime..ctor, X0, X1
	066 Move X0, [X31+8]
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Add X31, X31, 48
	072 Return X0

Method: System.Void set_AsDateTime(System.DateTime value)

Disassembly:
	0x035B0FFC MOV X19, X0
	0x035B1000 STR X0, [X31 + 0x8]
	0x035B1004 TBNZ X8, 0x0, 0x35B1040
	0x035B1008 ADRP X0, 0xB86000
	0x035B100C LDR X0, [X0 + 0x648]
	0x035B1010 BL 0x1C16CF4
	0x035B1014 ADRP X0, 0xB6C000
	0x035B1018 LDR X0, [X0 + 0x400]
	0x035B101C BL 0x1C16CF4
	0x035B1020 ADRP X0, 0xB45000
	0x035B1024 LDR X0, [X0 + 0xEF8]
	0x035B1028 BL 0x1C16CF4
	0x035B102C ADRP X0, 0xB45000
	0x035B1030 LDR X0, [X0 + 0xF00]
	0x035B1034 BL 0x1C16CF4
	0x035B1038 MOVZ W8, 0x1
	0x035B103C STRB W8, [X20 + 0x81]
	0x035B1040 ANDS W31, W19, 0xFF
	0x035B1044 B.EQ 0x35B1090
	0x035B1048 ADRP X8, 0xB45000
	0x035B104C LDR X8, [X8 + 0xF00]
	0x035B1050 ADRP X19, 0xB6C000
	0x035B1054 ADD X0, X31, 0x8
	0x035B1058 LDR X1, [X8]
	0x035B105C LDR X19, [X19 + 0x400]
	0x035B1060 BL 0x2434214
	0x035B1064 LDR X8, [X19]
	0x035B1068 MOV W19, W0
	0x035B106C MOV X0, X8
	0x035B1070 BL 0x1C16F10
	0x035B1074 SCVTF D0, W19
	0x035B1078 MOV X20, X0
	0x035B107C BL 0x35AD340
	0x035B1080 MOV X0, X20
	0x035B1084 LDP X20, X19, [X31 + 0x10]
	0x035B1088 LDR X30, [X31], #0x20
	0x035B108C RET
	0x035B1090 ADRP X8, 0xB86000
	0x035B1094 LDR X8, [X8 + 0x648]
	0x035B1098 LDR X0, [X8]
	0x035B109C LDR W8, [X0 + 0xE0]
	0x035B10A0 CBNZ W8, 0x35B10A8
	0x035B10A4 BL 0x1C16DFC
	0x035B10A8 LDP X20, X19, [X31 + 0x10]
	0x035B10AC LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE30000
	007 Move [X31+8], X1
	008 Move X20, 0xB45000
	009 Move W8, [X21+111]
	010 Move X20, [X20+3144]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB45000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move X0, 0xB44000
	020 Move X0, [X0+2544]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+111], W8
	024 Move X0, [X20]
	025 Move X20, 0xB44000
	026 Move W8, [X0+224]
	027 Move X20, [X20+2544]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call CultureInfo.get_InvariantCulture
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Add X0, X31, 8
	041 Move X1, X20
	042 Move X2, X31
	043 Call DateTime.ToString, X0, X1
	044 Move X8, [X19]
	045 Move X1, X0
	046 Move X0, X19
	047 Move X9, [X8+472]
	048 Move X2, [X8+480]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Add X31, X31, 48
	055 Return 

Method: SimpleJSON.JSONNode op_Implicit(System.DateTime aDateTime)

Disassembly:
	0x035B10B0 B 0x35AD064
	0x035B10B4 SUB X31, X31, 0x30
	0x035B10B8 STP X30, X21, [X31 + 0x10]
	0x035B10BC STP X20, X19, [X31 + 0x20]
	0x035B10C0 ADRP X20, 0xE2F000
	0x035B10C4 ADRP X21, 0xB43000
	0x035B10C8 LDRB W8, [X20 + 0x82]
	0x035B10CC LDR X21, [X21 + 0x460]
	0x035B10D0 MOV X19, X0
	0x035B10D4 TBNZ X8, 0x0, 0x35B10F8
	0x035B10D8 ADRP X0, 0xB43000
	0x035B10DC LDR X0, [X0 + 0x460]
	0x035B10E0 BL 0x1C16CF4
	0x035B10E4 ADRP X0, 0xB43000
	0x035B10E8 LDR X0, [X0 + 0x470]
	0x035B10EC BL 0x1C16CF4
	0x035B10F0 MOVZ W8, 0x1
	0x035B10F4 STRB W8, [X20 + 0x82]
	0x035B10F8 LDR X0, [X21]
	0x035B10FC LDR W8, [X0 + 0xE0]
	0x035B1100 CBNZ W8, 0x35B1108
	0x035B1104 BL 0x1C16DFC
	0x035B1108 MOV X0, X19
	0x035B110C MOV X1, X31
	0x035B1110 BL 0x35AD170
	0x035B1114 TBNZ X0, 0x0, 0x35B1134
	0x035B1118 CBZ X19, 0x35B1184
	0x035B111C LDR X8, [X19]
	0x035B1120 MOV X0, X19
	0x035B1124 LDR X9, [X8 + 0x228]
	0x035B1128 LDR X1, [X8 + 0x230]
	0x035B112C BLR X9
	0x035B1130 TBZ X0, 0x0, 0x35B1140
	0x035B1134 MOV X0, X31
	0x035B1138 STR X31, [X31 + 0x8]
	0x035B113C B 0x35B1174
	0x035B1140 LDR X8, [X19]
	0x035B1144 MOV X0, X19
	0x035B1148 LDR X9, [X8 + 0x368]
	0x035B114C LDR X1, [X8 + 0x370]
	0x035B1150 BLR X9
	0x035B1154 ADRP X8, 0xB43000
	0x035B1158 LDR X8, [X8 + 0x470]
	0x035B115C MOV W1, W0
	0x035B1160 ADD X0, X31, 0x8
	0x035B1164 STR X31, [X31 + 0x8]
	0x035B1168 LDR X2, [X8]
	0x035B116C BL 0x24341FC
	0x035B1170 LDR X0, [X31 + 0x8]
	0x035B1174 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE30000
	005 Move [X31+8], X0
	006 Move X19, 0xB45000
	007 Move W8, [X20+112]
	008 Move X19, [X19+3144]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB45000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move X0, 0xB44000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move X0, 0xB87000
	020 Move X0, [X0+1616]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+112], W8
	024 Move X0, [X19]
	025 Move X19, 0xB44000
	026 Move W8, [X0+224]
	027 Move X19, [X19+2544]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X20, 0xB87000
	032 Move X20, [X20+1616]
	033 Move X0, X31
	034 Call CultureInfo.get_InvariantCulture
	035 Move X8, [X19]
	036 Move X19, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Add X0, X31, 8
	043 Move X1, X19
	044 Move X2, X31
	045 Call DateTime.ToString, X0, X1
	046 Move X8, [X20]
	047 Move X19, X0
	048 Move X0, X8
	049 Call 0x1C17F10
	050 Move X1, X19
	051 Move X20, X0
	052 Call JSONString..ctor, X0, X1
	053 Move X0, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Return X0

Method: System.DateTime op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B1178 LDP X30, X21, [X31 + 0x10]
	0x035B117C ADD X31, X31, 0x30
	0x035B1180 RET
	0x035B1184 BL 0x1C16F20
	0x035B1188 SUB X31, X31, 0x30
	0x035B118C STR D8, [X31 + 0x10]
	0x035B1190 STR X30, [X31 + 0x18]
	0x035B1194 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1304]
	006 Move X1, [X8+1312]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.TimeSpan get_AsTimeSpan()

Disassembly:
	0x035B1198 ADRP X20, 0xE2F000
	0x035B119C LDRB W8, [X20 + 0x83]
	0x035B11A0 MOV X19, X0
	0x035B11A4 STR X0, [X31 + 0x8]
	0x035B11A8 TBNZ X8, 0x0, 0x35B11E4
	0x035B11AC ADRP X0, 0xB86000
	0x035B11B0 LDR X0, [X0 + 0x648]
	0x035B11B4 BL 0x1C16CF4
	0x035B11B8 ADRP X0, 0xB6C000
	0x035B11BC LDR X0, [X0 + 0x400]
	0x035B11C0 BL 0x1C16CF4
	0x035B11C4 ADRP X0, 0xB46000
	0x035B11C8 LDR X0, [X0 + 0xC0]
	0x035B11CC BL 0x1C16CF4
	0x035B11D0 ADRP X0, 0xB46000
	0x035B11D4 LDR X0, [X0 + 0x118]
	0x035B11D8 BL 0x1C16CF4
	0x035B11DC MOVZ W8, 0x1
	0x035B11E0 STRB W8, [X20 + 0x83]
	0x035B11E4 ANDS W31, W19, 0xFF
	0x035B11E8 B.EQ 0x35B1238
	0x035B11EC ADRP X8, 0xB46000
	0x035B11F0 LDR X8, [X8 + 0x118]
	0x035B11F4 ADRP X19, 0xB6C000
	0x035B11F8 ADD X0, X31, 0x8
	0x035B11FC LDR X1, [X8]
	0x035B1200 LDR X19, [X19 + 0x400]
	0x035B1204 BL 0x243AC20
	0x035B1208 LDR X0, [X19]
	0x035B120C MOV V8.16B, V0.16B
	0x035B1210 BL 0x1C16F10
	0x035B1214 FCVT S0, S8
	0x035B1218 MOV X19, X0
	0x035B121C BL 0x35AD340
	0x035B1220 MOV X0, X19
	0x035B1224 LDP X20, X19, [X31 + 0x20]
	0x035B1228 LDR X30, [X31 + 0x18]
	0x035B122C LDR V8, [X31 + 0x10]
	0x035B1230 ADD X31, X31, 0x30
	0x035B1234 RET
	0x035B1238 ADRP X8, 0xB86000
	0x035B123C LDR X8, [X8 + 0x648]
	0x035B1240 LDR X0, [X8]
	0x035B1244 LDR W8, [X0 + 0xE0]
	0x035B1248 CBNZ W8, 0x35B1250
	0x035B124C BL 0x1C16DFC
	0x035B1250 LDP X20, X19, [X31 + 0x20]
	0x035B1254 LDR X30, [X31 + 0x18]
	0x035B1258 LDR V8, [X31 + 0x10]
	0x035B125C ADD X31, X31, 0x30
	0x035B1260 B 0x35AD064
	0x035B1264 SUB X31, X31, 0x30
	0x035B1268 STP X30, X21, [X31 + 0x10]
	0x035B126C STP X20, X19, [X31 + 0x20]
	0x035B1270 ADRP X20, 0xE2F000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE30000
	007 Move X20, 0xB45000
	008 Move W8, [X21+113]
	009 Move X20, [X20+3144]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB45000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move X0, 0xB45000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+113], W8
	023 Move [X31+8], X31
	024 Move X8, [X19]
	025 Move X21, 0xB45000
	026 Move X0, X19
	027 Move X9, [X8+456]
	028 Move X1, [X8+464]
	029 Move X21, [X21+1392]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X20]
	032 Move X19, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X31
	039 Call CultureInfo.get_InvariantCulture
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Add X2, X31, 8
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call TimeSpan.TryParse, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {57}
	056 Move X0, [X31+8]
	057 Move X0, [X21]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X31
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Add X31, X31, 48
	068 Return X0

Method: System.Void set_AsTimeSpan(System.TimeSpan value)

Disassembly:
	0x035B1274 ADRP X21, 0xB43000
	0x035B1278 LDRB W8, [X20 + 0x84]
	0x035B127C LDR X21, [X21 + 0x460]
	0x035B1280 MOV X19, X0
	0x035B1284 TBNZ X8, 0x0, 0x35B12A8
	0x035B1288 ADRP X0, 0xB43000
	0x035B128C LDR X0, [X0 + 0x460]
	0x035B1290 BL 0x1C16CF4
	0x035B1294 ADRP X0, 0xB46000
	0x035B1298 LDR X0, [X0 + 0x138]
	0x035B129C BL 0x1C16CF4
	0x035B12A0 MOVZ W8, 0x1
	0x035B12A4 STRB W8, [X20 + 0x84]
	0x035B12A8 LDR X0, [X21]
	0x035B12AC LDR W8, [X0 + 0xE0]
	0x035B12B0 CBNZ W8, 0x35B12B8
	0x035B12B4 BL 0x1C16DFC
	0x035B12B8 MOV X0, X19
	0x035B12BC MOV X1, X31
	0x035B12C0 BL 0x35AD170
	0x035B12C4 TBNZ X0, 0x0, 0x35B12E4
	0x035B12C8 CBZ X19, 0x35B1330
	0x035B12CC LDR X8, [X19]
	0x035B12D0 MOV X0, X19
	0x035B12D4 LDR X9, [X8 + 0x228]
	0x035B12D8 LDR X1, [X8 + 0x230]
	0x035B12DC BLR X9
	0x035B12E0 TBZ X0, 0x0, 0x35B12F0
	0x035B12E4 MOV X0, X31
	0x035B12E8 STR X31, [X31 + 0x8]
	0x035B12EC B 0x35B1320

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE30000
	007 Move [X31+8], X1
	008 Move X21, 0xB45000
	009 Move W8, [X20+114]
	010 Move X21, [X21+1392]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB45000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+114], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Call TimeSpan.ToString, X0
	029 Move X8, [X19]
	030 Move X1, X0
	031 Move X0, X19
	032 Move X9, [X8+472]
	033 Move X2, [X8+480]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Return 

Method: SimpleJSON.JSONNode op_Implicit(System.TimeSpan aTimeSpan)

Disassembly:
	0x035B12F0 LDR X8, [X19]
	0x035B12F4 MOV X0, X19
	0x035B12F8 LDR X9, [X8 + 0x388]
	0x035B12FC LDR X1, [X8 + 0x390]
	0x035B1300 BLR X9
	0x035B1304 ADRP X8, 0xB46000
	0x035B1308 LDR X8, [X8 + 0x138]
	0x035B130C ADD X0, X31, 0x8
	0x035B1310 STR X31, [X31 + 0x8]
	0x035B1314 LDR X1, [X8]
	0x035B1318 BL 0x243AC08
	0x035B131C LDR X0, [X31 + 0x8]
	0x035B1320 LDP X20, X19, [X31 + 0x20]
	0x035B1324 LDP X30, X21, [X31 + 0x10]
	0x035B1328 ADD X31, X31, 0x30
	0x035B132C RET
	0x035B1330 BL 0x1C16F20
	0x035B1334 SUB X31, X31, 0x30
	0x035B1338 STR D8, [X31 + 0x10]
	0x035B133C STR X30, [X31 + 0x18]
	0x035B1340 STP X20, X19, [X31 + 0x20]
	0x035B1344 ADRP X20, 0xE2F000
	0x035B1348 LDRB W8, [X20 + 0x85]
	0x035B134C MOV X19, X0
	0x035B1350 STP X0, X1, [X31]
	0x035B1354 TBNZ X8, 0x0, 0x35B1390
	0x035B1358 ADRP X0, 0xB86000
	0x035B135C LDR X0, [X0 + 0x648]
	0x035B1360 BL 0x1C16CF4
	0x035B1364 ADRP X0, 0xB6C000
	0x035B1368 LDR X0, [X0 + 0x400]
	0x035B136C BL 0x1C16CF4
	0x035B1370 ADRP X0, 0xB4D000
	0x035B1374 LDR X0, [X0 + 0x7D8]
	0x035B1378 BL 0x1C16CF4
	0x035B137C ADRP X0, 0xB4E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE30000
	005 Move [X31+8], X0
	006 Move X19, 0xB45000
	007 Move W8, [X20+115]
	008 Move X19, [X19+1392]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB87000
	014 Move X0, [X0+1616]
	015 Call 0x1C17CF4
	016 Move X0, 0xB45000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+115], W8
	021 Move X0, [X19]
	022 Move X19, 0xB87000
	023 Move W8, [X0+224]
	024 Move X19, [X19+1616]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Add X0, X31, 8
	029 Move X1, X31
	030 Call TimeSpan.ToString, X0
	031 Move X8, [X19]
	032 Move X19, X0
	033 Move X0, X8
	034 Call 0x1C17F10
	035 Move X1, X19
	036 Move X20, X0
	037 Call JSONString..ctor, X0, X1
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.TimeSpan op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B1380 LDR X0, [X0 + 0xE58]
	0x035B1384 BL 0x1C16CF4
	0x035B1388 MOVZ W8, 0x1
	0x035B138C STRB W8, [X20 + 0x85]
	0x035B1390 ANDS W31, W19, 0xFF
	0x035B1394 B.EQ 0x35B13E4
	0x035B1398 ADRP X8, 0xB4E000
	0x035B139C LDR X8, [X8 + 0xE58]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1336]
	006 Move X1, [X8+1344]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.Guid get_AsGuid()

Disassembly:
	0x035B13A0 ADRP X19, 0xB6C000
	0x035B13A4 ADD X0, X31, 0x0
	0x035B13A8 LDR X1, [X8]
	0x035B13AC LDR X19, [X19 + 0x400]
	0x035B13B0 BL 0x2431818
	0x035B13B4 LDR X0, [X19]
	0x035B13B8 MOV V8.16B, V0.16B
	0x035B13BC BL 0x1C16F10
	0x035B13C0 MOV V0.16B, V8.16B
	0x035B13C4 MOV X19, X0
	0x035B13C8 BL 0x35AD340
	0x035B13CC MOV X0, X19
	0x035B13D0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31], X31
	005 Move X8, [X0]
	006 Move X9, [X8+456]
	007 Move X1, [X8+464]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Add X1, X31, 0
	010 Move X2, X31
	011 Call Guid.TryParse, X0, X1
	012 Move X0, [X31]
	013 Move X1, [X31+8]
	014 Move X30, [X31+16]
	015 Add X31, X31, 32
	016 Return X0

Method: System.Void set_AsGuid(System.Guid value)

Disassembly:
	0x035B13D4 LDR X30, [X31 + 0x18]
	0x035B13D8 LDR V8, [X31 + 0x10]
	0x035B13DC ADD X31, X31, 0x30
	0x035B13E0 RET
	0x035B13E4 ADRP X8, 0xB86000
	0x035B13E8 LDR X8, [X8 + 0x648]
	0x035B13EC LDR X0, [X8]
	0x035B13F0 LDR W8, [X0 + 0xE0]
	0x035B13F4 CBNZ W8, 0x35B13FC
	0x035B13F8 BL 0x1C16DFC
	0x035B13FC LDP X20, X19, [X31 + 0x20]
	0x035B1400 LDR X30, [X31 + 0x18]
	0x035B1404 LDR V8, [X31 + 0x10]
	0x035B1408 ADD X31, X31, 0x30
	0x035B140C B 0x35AD064

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move [X31], X1
	006 Move [X31+8], X2
	007 Add X0, X31, 0
	008 Move X1, X31
	009 Call Guid.ToString, X0
	010 Move X8, [X19]
	011 Move X1, X0
	012 Move X0, X19
	013 Move X9, [X8+472]
	014 Move X2, [X8+480]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Add X31, X31, 32
	019 Return 

Method: SimpleJSON.JSONNode op_Implicit(System.Guid aGuid)

Disassembly:
	0x035B1410 SUB X31, X31, 0x30
	0x035B1414 STP X30, X21, [X31 + 0x10]
	0x035B1418 STP X20, X19, [X31 + 0x20]
	0x035B141C ADRP X20, 0xE2F000
	0x035B1420 ADRP X21, 0xB43000
	0x035B1424 LDRB W8, [X20 + 0x86]
	0x035B1428 LDR X21, [X21 + 0x460]
	0x035B142C MOV X19, X0
	0x035B1430 TBNZ X8, 0x0, 0x35B1454
	0x035B1434 ADRP X0, 0xB43000
	0x035B1438 LDR X0, [X0 + 0x460]
	0x035B143C BL 0x1C16CF4
	0x035B1440 ADRP X0, 0xB4D000
	0x035B1444 LDR X0, [X0 + 0x7D0]
	0x035B1448 BL 0x1C16CF4
	0x035B144C MOVZ W8, 0x1
	0x035B1450 STRB W8, [X20 + 0x86]
	0x035B1454 LDR X0, [X21]
	0x035B1458 LDR W8, [X0 + 0xE0]
	0x035B145C CBNZ W8, 0x35B1464
	0x035B1460 BL 0x1C16DFC
	0x035B1464 MOV X0, X19
	0x035B1468 MOV X1, X31
	0x035B146C BL 0x35AD170
	0x035B1470 TBNZ X0, 0x0, 0x35B1490
	0x035B1474 CBZ X19, 0x35B14D8
	0x035B1478 LDR X8, [X19]
	0x035B147C MOV X0, X19
	0x035B1480 LDR X9, [X8 + 0x228]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE30000
	007 Move [X31], X0
	008 Move X19, 0xB87000
	009 Move W8, [X20+116]
	010 Move X19, [X19+1616]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB87000
	016 Move X0, [X0+1616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+116], W8
	020 Add X0, X31, 0
	021 Move X1, X31
	022 Call Guid.ToString, X0
	023 Move X8, [X19]
	024 Move X19, X0
	025 Move X0, X8
	026 Call 0x1C17F10
	027 Move X1, X19
	028 Move X20, X0
	029 Call JSONString..ctor, X0, X1
	030 Move X0, X20
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Add X31, X31, 48
	035 Return X0

Method: System.Guid op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B1484 LDR X1, [X8 + 0x230]
	0x035B1488 BLR X9
	0x035B148C TBZ X0, 0x0, 0x35B1498
	0x035B1490 STP X31, X31, [X31]
	0x035B1494 B 0x35B14C4
	0x035B1498 LDR X8, [X19]
	0x035B149C MOV X0, X19
	0x035B14A0 LDR X9, [X8 + 0x348]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1368]
	006 Move X1, [X8+1376]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.Byte[] get_AsByteArray()

Disassembly:
	0x035B14A4 LDR X1, [X8 + 0x350]
	0x035B14A8 BLR X9
	0x035B14AC ADRP X8, 0xB4D000
	0x035B14B0 LDR X8, [X8 + 0x7D0]
	0x035B14B4 ADD X0, X31, 0x0
	0x035B14B8 STP X31, X31, [X31]
	0x035B14BC LDR X1, [X8]
	0x035B14C0 BL 0x2431800
	0x035B14C4 LDP X0, X1, [X31]
	0x035B14C8 LDP X20, X19, [X31 + 0x20]
	0x035B14CC LDP X30, X21, [X31 + 0x10]
	0x035B14D0 ADD X31, X31, 0x30
	0x035B14D4 RET
	0x035B14D8 BL 0x1C16F20
	0x035B14DC STR X30, [X31 - 0x20]!
	0x035B14E0 STP X20, X19, [X31 + 0x10]
	0x035B14E4 ADRP X20, 0xE2F000
	0x035B14E8 LDRB W8, [X20 + 0x87]
	0x035B14EC MOV X19, X0
	0x035B14F0 STRH W19, [X31 + 0xC]
	0x035B14F4 TBNZ X8, 0x0, 0x35B1530
	0x035B14F8 ADRP X0, 0xB86000
	0x035B14FC LDR X0, [X0 + 0x660]
	0x035B1500 BL 0x1C16CF4
	0x035B1504 ADRP X0, 0xB86000
	0x035B1508 LDR X0, [X0 + 0x648]
	0x035B150C BL 0x1C16CF4
	0x035B1510 ADRP X0, 0xB46000
	0x035B1514 LDR X0, [X0 + 0xBF0]
	0x035B1518 BL 0x1C16CF4
	0x035B151C ADRP X0, 0xB46000
	0x035B1520 LDR X0, [X0 + 0xBF8]
	0x035B1524 BL 0x1C16CF4
	0x035B1528 MOVZ W8, 0x1
	0x035B152C STRB W8, [X20 + 0x87]
	0x035B1530 ANDS W31, W19, 0xFF
	0x035B1534 B.EQ 0x35B1580
	0x035B1538 ADRP X8, 0xB46000
	0x035B153C LDR X8, [X8 + 0xBF8]
	0x035B1540 ADRP X19, 0xB86000
	0x035B1544 ADD X0, X31, 0xC
	0x035B1548 LDR X1, [X8]
	0x035B154C LDR X19, [X19 + 0x660]
	0x035B1550 BL 0x242D58C
	0x035B1554 LDR X8, [X19]
	0x035B1558 MOV W19, W0
	0x035B155C MOV X0, X8
	0x035B1560 BL 0x1C16F10
	0x035B1564 AND W1, W19, 0x1
	0x035B1568 MOV X20, X0
	0x035B156C BL 0x35AD928
	0x035B1570 MOV X0, X20
	0x035B1574 LDP X20, X19, [X31 + 0x10]
	0x035B1578 LDR X30, [X31], #0x20
	0x035B157C RET
	0x035B1580 ADRP X8, 0xB86000
	0x035B1584 LDR X8, [X8 + 0x648]
	0x035B1588 LDR X0, [X8]
	0x035B158C LDR W8, [X0 + 0xE0]
	0x035B1590 CBNZ W8, 0x35B1598
	0x035B1594 BL 0x1C16DFC
	0x035B1598 LDP X20, X19, [X31 + 0x10]
	0x035B159C LDR X30, [X31], #0x20
	0x035B15A0 B 0x35AD064
	0x035B15A4 SUB X31, X31, 0x30
	0x035B15A8 STP X30, X21, [X31 + 0x10]
	0x035B15AC STP X20, X19, [X31 + 0x20]
	0x035B15B0 ADRP X20, 0xE2F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE30000
	008 Move W8, [X20+117]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB43000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+117], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+552]
	022 Move X1, [X8+560]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {73}
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+568]
	031 Move X1, [X8+576]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {73}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+488]
	040 Move X1, [X8+496]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, 0xB43000
	043 Move X8, [X8+1560]
	044 Move W22, W0
	045 Move W1, W22
	046 Move X8, [X8]
	047 Move X0, X8
	048 Call 0x1C17D6C
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, X0
	051 Move X21, X31
	052 Move W22, W22
	053 Add X23, X20, 32
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move W1, W21
	057 Move X9, [X8+392]
	058 Move X2, [X8+400]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X0, 0
	061 JumpIfEqual {82}
	062 Move X8, [X0]
	063 Move X9, [X8+1176]
	064 Move X1, [X8+1184]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X20, 0
	067 JumpIfEqual {82}
	068 Move W8, [X20+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X23], W0
	071 Add X21, X21, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X20, X31
	074 Move X0, X20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Return X0
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: System.Void set_AsByteArray(System.Byte[] value)

Disassembly:
	0x035B15B4 ADRP X21, 0xB43000
	0x035B15B8 LDRB W8, [X20 + 0x88]
	0x035B15BC LDR X21, [X21 + 0x460]
	0x035B15C0 MOV X19, X0
	0x035B15C4 TBNZ X8, 0x0, 0x35B15E8
	0x035B15C8 ADRP X0, 0xB43000
	0x035B15CC LDR X0, [X0 + 0x460]
	0x035B15D0 BL 0x1C16CF4
	0x035B15D4 ADRP X0, 0xB46000
	0x035B15D8 LDR X0, [X0 + 0xFD8]
	0x035B15DC BL 0x1C16CF4
	0x035B15E0 MOVZ W8, 0x1
	0x035B15E4 STRB W8, [X20 + 0x88]
	0x035B15E8 LDR X0, [X21]
	0x035B15EC LDR W8, [X0 + 0xE0]
	0x035B15F0 CBNZ W8, 0x35B15F8
	0x035B15F4 BL 0x1C16DFC
	0x035B15F8 MOV X0, X19
	0x035B15FC MOV X1, X31
	0x035B1600 BL 0x35AD170
	0x035B1604 TBNZ X0, 0x0, 0x35B1624
	0x035B1608 CBZ X19, 0x35B1674
	0x035B160C LDR X8, [X19]
	0x035B1610 MOV X0, X19
	0x035B1614 LDR X9, [X8 + 0x228]
	0x035B1618 LDR X1, [X8 + 0x230]
	0x035B161C BLR X9
	0x035B1620 TBZ X0, 0x0, 0x35B1630
	0x035B1624 MOV X0, X31
	0x035B1628 STRH W31, [X31 + 0xC]
	0x035B162C B 0x35B1664
	0x035B1630 LDR X8, [X19]
	0x035B1634 MOV X0, X19
	0x035B1638 LDR X9, [X8 + 0x3A8]
	0x035B163C LDR X1, [X8 + 0x3B0]
	0x035B1640 BLR X9
	0x035B1644 ADRP X8, 0xB46000
	0x035B1648 LDR X8, [X8 + 0xFD8]
	0x035B164C AND W1, W0, 0x1
	0x035B1650 ADD X0, X31, 0xC
	0x035B1654 STRH W31, [X31 + 0xC]
	0x035B1658 LDR X2, [X8]
	0x035B165C BL 0x242D570
	0x035B1660 LDRH W0, [X31 + 0xC]
	0x035B1664 LDP X20, X19, [X31 + 0x20]
	0x035B1668 LDP X30, X21, [X31 + 0x10]
	0x035B166C ADD X31, X31, 0x30
	0x035B1670 RET
	0x035B1674 BL 0x1C16F20
	0x035B1678 SUB X31, X31, 0x30
	0x035B167C STP X1, X30, [X31 + 0x8]
	0x035B1680 STP X20, X19, [X31 + 0x20]
	0x035B1684 ADRP X20, 0xE2F000
	0x035B1688 LDRB W8, [X20 + 0x89]
	0x035B168C MOV X19, X0
	0x035B1690 STR X0, [X31]
	0x035B1694 TBNZ X8, 0x0, 0x35B16D0
	0x035B1698 ADRP X0, 0xB86000
	0x035B169C LDR X0, [X0 + 0x648]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE30000
	009 Move W8, [X21+118]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB44000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+118], W8
	021 Move X8, [X20]
	022 Move X0, X20
	023 Move X9, [X8+568]
	024 Move X1, [X8+576]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Compare X19, 0
	027 JumpIfEqual {62}
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {62}
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X9, [X8+712]
	035 Move X1, [X8+720]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X24, 0xB44000
	040 Move X24, [X24+1120]
	041 Move X22, X31
	042 And X8, X8, 0
	043 Add X23, X19, 32
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X24]
	046 Move W21, [X23]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W0, W21
	052 Call JSONNode.op_Implicit, X0
	053 Move X8, [X20]
	054 Move X1, X0
	055 Move X0, X20
	056 Move X9, [X8+648]
	057 Move X2, [X8+656]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move W8, [X19+24]
	060 Add X22, X22, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X30, [X31+64]
	069 Return 
	070 Call 0x1C17F28

Method: SimpleJSON.JSONNode op_Implicit(System.Byte[] aByteArray)

Disassembly:
	0x035B16A0 BL 0x1C16CF4
	0x035B16A4 ADRP X0, 0xB6C000
	0x035B16A8 LDR X0, [X0 + 0x400]
	0x035B16AC BL 0x1C16CF4
	0x035B16B0 ADRP X0, 0xB6A000
	0x035B16B4 LDR X0, [X0 + 0xEA8]
	0x035B16B8 BL 0x1C16CF4
	0x035B16BC ADRP X0, 0xB6A000
	0x035B16C0 LDR X0, [X0 + 0xEB0]
	0x035B16C4 BL 0x1C16CF4
	0x035B16C8 MOVZ W8, 0x1
	0x035B16CC STRB W8, [X20 + 0x89]
	0x035B16D0 ANDS W31, W19, 0xFF
	0x035B16D4 B.EQ 0x35B1724
	0x035B16D8 ADRP X8, 0xB6A000
	0x035B16DC LDR X8, [X8 + 0xEB0]
	0x035B16E0 ADRP X19, 0xB6C000
	0x035B16E4 ADD X0, X31, 0x0
	0x035B16E8 LDR X1, [X8]
	0x035B16EC LDR X19, [X19 + 0x400]
	0x035B16F0 BL 0x24349A0
	0x035B16F4 LDR X8, [X19]
	0x035B16F8 MOV X19, X0
	0x035B16FC MOV X0, X8
	0x035B1700 BL 0x1C16F10
	0x035B1704 SCVTF D0, X19
	0x035B1708 MOV X20, X0
	0x035B170C BL 0x35AD340
	0x035B1710 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE30000
	006 Move X21, 0xB6D000
	007 Move W8, [X20+119]
	008 Move X21, [X21+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6D000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+119], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call JSONArray..ctor, X0
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X20]
	026 Move X0, X20
	027 Move X1, X19
	028 Move X9, [X8+1416]
	029 Move X2, [X8+1424]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Byte[] op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B1714 LDP X20, X19, [X31 + 0x20]
	0x035B1718 LDR X30, [X31 + 0x10]
	0x035B171C ADD X31, X31, 0x30
	0x035B1720 RET
	0x035B1724 ADRP X8, 0xB86000
	0x035B1728 LDR X8, [X8 + 0x648]
	0x035B172C LDR X0, [X8]
	0x035B1730 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1400]
	006 Move X1, [X8+1408]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.Byte> get_AsByteList()

Disassembly:
	0x035B1734 CBNZ W8, 0x35B173C
	0x035B1738 BL 0x1C16DFC
	0x035B173C LDP X20, X19, [X31 + 0x20]
	0x035B1740 LDR X30, [X31 + 0x10]
	0x035B1744 ADD X31, X31, 0x30
	0x035B1748 B 0x35AD064
	0x035B174C SUB X31, X31, 0x30
	0x035B1750 STP X30, X21, [X31 + 0x10]
	0x035B1754 STP X20, X19, [X31 + 0x20]
	0x035B1758 ADRP X20, 0xE2F000
	0x035B175C ADRP X21, 0xB43000
	0x035B1760 LDRB W8, [X20 + 0x8A]
	0x035B1764 LDR X21, [X21 + 0x460]
	0x035B1768 MOV X19, X0
	0x035B176C TBNZ X8, 0x0, 0x35B1790
	0x035B1770 ADRP X0, 0xB43000
	0x035B1774 LDR X0, [X0 + 0x460]
	0x035B1778 BL 0x1C16CF4
	0x035B177C ADRP X0, 0xB86000
	0x035B1780 LDR X0, [X0 + 0x738]
	0x035B1784 BL 0x1C16CF4
	0x035B1788 MOVZ W8, 0x1
	0x035B178C STRB W8, [X20 + 0x8A]
	0x035B1790 LDR X0, [X21]
	0x035B1794 LDR W8, [X0 + 0xE0]
	0x035B1798 CBNZ W8, 0x35B17A0
	0x035B179C BL 0x1C16DFC
	0x035B17A0 MOV X0, X19
	0x035B17A4 MOV X1, X31
	0x035B17A8 BL 0x35AD170
	0x035B17AC TBNZ X0, 0x0, 0x35B17CC
	0x035B17B0 CBZ X19, 0x35B1818
	0x035B17B4 LDR X8, [X19]
	0x035B17B8 MOV X0, X19
	0x035B17BC LDR X9, [X8 + 0x228]
	0x035B17C0 LDR X1, [X8 + 0x230]
	0x035B17C4 BLR X9
	0x035B17C8 TBZ X0, 0x0, 0x35B17D4
	0x035B17CC STP X31, X31, [X31]
	0x035B17D0 B 0x35B1804
	0x035B17D4 LDR X8, [X19]
	0x035B17D8 MOV X0, X19
	0x035B17DC LDR X9, [X8 + 0x3C8]
	0x035B17E0 LDR X1, [X8 + 0x3D0]
	0x035B17E4 BLR X9
	0x035B17E8 ADRP X8, 0xB86000
	0x035B17EC LDR X8, [X8 + 0x738]
	0x035B17F0 MOV X1, X0
	0x035B17F4 ADD X0, X31, 0x0
	0x035B17F8 STP X31, X31, [X31]
	0x035B17FC LDR X2, [X8]
	0x035B1800 BL 0x2434988
	0x035B1804 LDP X0, X1, [X31]
	0x035B1808 LDP X20, X19, [X31 + 0x20]
	0x035B180C LDP X30, X21, [X31 + 0x10]
	0x035B1810 ADD X31, X31, 0x30
	0x035B1814 RET
	0x035B1818 BL 0x1C16F20
	0x035B181C STR X30, [X31 - 0x20]!
	0x035B1820 STP X20, X19, [X31 + 0x10]
	0x035B1824 ADRP X20, 0xE2F000
	0x035B1828 LDRB W8, [X20 + 0x8B]
	0x035B182C MOV X19, X0
	0x035B1830 STR W19, [X31 + 0xC]
	0x035B1834 TBNZ X8, 0x0, 0x35B1870
	0x035B1838 ADRP X0, 0xB86000
	0x035B183C LDR X0, [X0 + 0x648]
	0x035B1840 BL 0x1C16CF4
	0x035B1844 ADRP X0, 0xB6C000
	0x035B1848 LDR X0, [X0 + 0x400]
	0x035B184C BL 0x1C16CF4
	0x035B1850 ADRP X0, 0xB86000
	0x035B1854 LDR X0, [X0 + 0x740]
	0x035B1858 BL 0x1C16CF4
	0x035B185C ADRP X0, 0xB86000
	0x035B1860 LDR X0, [X0 + 0x748]
	0x035B1864 BL 0x1C16CF4
	0x035B1868 MOVZ W8, 0x1
	0x035B186C STRB W8, [X20 + 0x8B]
	0x035B1870 ANDS W31, W19, 0xFF
	0x035B1874 B.EQ 0x35B18C0
	0x035B1878 ADRP X8, 0xB86000
	0x035B187C LDR X8, [X8 + 0x748]
	0x035B1880 ADRP X19, 0xB6C000
	0x035B1884 ADD X0, X31, 0xC
	0x035B1888 LDR X1, [X8]
	0x035B188C LDR X19, [X19 + 0x400]
	0x035B1890 BL 0x2433E58
	0x035B1894 LDR X8, [X19]
	0x035B1898 SXTH W20, W0
	0x035B189C MOV X0, X8
	0x035B18A0 BL 0x1C16F10
	0x035B18A4 SCVTF D0, W20
	0x035B18A8 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE30000
	008 Move W8, [X20+120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB47000
	015 Move X0, [X0+2008]
	016 Call 0x1C17CF4
	017 Move X0, 0xB87000
	018 Move X0, [X0+1840]
	019 Call 0x1C17CF4
	020 Move X0, 0xB47000
	021 Move X0, [X0+2056]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+120], W8
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+552]
	028 Move X1, [X8+560]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {100}
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+568]
	037 Move X1, [X8+576]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {100}
	043 Move X8, [X19]
	044 Move X0, X19
	045 Move X9, [X8+488]
	046 Move X1, [X8+496]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, 0xB47000
	049 Move X8, [X8+2056]
	050 Move W21, W0
	051 Move X8, [X8]
	052 Move X0, X8
	053 Call 0x1C17F10
	054 Move X8, 0xB87000
	055 Move X8, [X8+1840]
	056 Move W1, W21
	057 Move X20, X0
	058 Move X2, [X8]
	059 Call List`1<Byte>..ctor, X0, X1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X23, 0xB47000
	062 Move X23, [X23+2008]
	063 Move W22, W31
	064 Move X8, [X19]
	065 Move X0, X19
	066 Move W1, W22
	067 Move X9, [X8+392]
	068 Move X2, [X8+400]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X0, 0
	071 JumpIfEqual {109}
	072 Move X8, [X0]
	073 Move X9, [X8+1176]
	074 Move X1, [X8+1184]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X20, 0
	077 JumpIfEqual {109}
	078 Move W10, [X20+28]
	079 Move X8, [X20+16]
	080 Move X9, [X23]
	081 Add W10, W10, 1
	082 Move [X20+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {109}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 Move W1, W0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add W9, W10, 1
	090 Add X8, X8, X10
	091 Move [X20+24], W9
	092 Move [X8+32], W1
	093 Move X8, [X9+32]
	094 Move X0, X20
	095 Move X8, [X8+192]
	096 Move X2, [X8+112]
	097 Call List`1<Byte>.AddWithResize, X0, X1
	098 Add W22, W22, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X20, X31
	101 Move X0, X20
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Return X0
	109 Call 0x1C17F20

Method: System.Void set_AsByteList(System.Collections.Generic.List`1<System.Byte> value)

Disassembly:
	0x035B18AC BL 0x35AD340
	0x035B18B0 MOV X0, X19
	0x035B18B4 LDP X20, X19, [X31 + 0x10]
	0x035B18B8 LDR X30, [X31], #0x20
	0x035B18BC RET
	0x035B18C0 ADRP X8, 0xB86000
	0x035B18C4 LDR X8, [X8 + 0x648]
	0x035B18C8 LDR X0, [X8]
	0x035B18CC LDR W8, [X0 + 0xE0]
	0x035B18D0 CBNZ W8, 0x35B18D8
	0x035B18D4 BL 0x1C16DFC
	0x035B18D8 LDP X20, X19, [X31 + 0x10]
	0x035B18DC LDR X30, [X31], #0x20
	0x035B18E0 B 0x35AD064
	0x035B18E4 SUB X31, X31, 0x30
	0x035B18E8 STP X30, X21, [X31 + 0x10]
	0x035B18EC STP X20, X19, [X31 + 0x20]
	0x035B18F0 ADRP X20, 0xE2F000
	0x035B18F4 ADRP X21, 0xB43000
	0x035B18F8 LDRB W8, [X20 + 0x8C]
	0x035B18FC LDR X21, [X21 + 0x460]
	0x035B1900 MOV X19, X0
	0x035B1904 TBNZ X8, 0x0, 0x35B1928
	0x035B1908 ADRP X0, 0xB43000
	0x035B190C LDR X0, [X0 + 0x460]
	0x035B1910 BL 0x1C16CF4
	0x035B1914 ADRP X0, 0xB86000
	0x035B1918 LDR X0, [X0 + 0x750]
	0x035B191C BL 0x1C16CF4
	0x035B1920 MOVZ W8, 0x1
	0x035B1924 STRB W8, [X20 + 0x8C]
	0x035B1928 LDR X0, [X21]
	0x035B192C LDR W8, [X0 + 0xE0]
	0x035B1930 CBNZ W8, 0x35B1938
	0x035B1934 BL 0x1C16DFC
	0x035B1938 MOV X0, X19
	0x035B193C MOV X1, X31
	0x035B1940 BL 0x35AD170
	0x035B1944 TBNZ X0, 0x0, 0x35B1964
	0x035B1948 CBZ X19, 0x35B19B4
	0x035B194C LDR X8, [X19]
	0x035B1950 MOV X0, X19
	0x035B1954 LDR X9, [X8 + 0x228]
	0x035B1958 LDR X1, [X8 + 0x230]
	0x035B195C BLR X9
	0x035B1960 TBZ X0, 0x0, 0x35B1970
	0x035B1964 MOV X0, X31
	0x035B1968 STR W31, [X31 + 0xC]
	0x035B196C B 0x35B19A4
	0x035B1970 LDR X8, [X19]
	0x035B1974 MOV X0, X19
	0x035B1978 LDR X9, [X8 + 0x4D8]
	0x035B197C LDR X1, [X8 + 0x4E0]
	0x035B1980 BLR X9
	0x035B1984 ADRP X8, 0xB86000
	0x035B1988 LDR X8, [X8 + 0x750]
	0x035B198C MOV W1, W0
	0x035B1990 ADD X0, X31, 0xC
	0x035B1994 STR W31, [X31 + 0xC]
	0x035B1998 LDR X2, [X8]
	0x035B199C BL 0x2433E40
	0x035B19A0 LDR W0, [X31 + 0xC]
	0x035B19A4 LDP X20, X19, [X31 + 0x20]
	0x035B19A8 LDP X30, X21, [X31 + 0x10]
	0x035B19AC ADD X31, X31, 0x30
	0x035B19B0 RET
	0x035B19B4 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE30000
	009 Move W8, [X21+121]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xB44000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0xB47000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xB47000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+121], W8
	027 Move X8, [X20]
	028 Move X0, X20
	029 Move X9, [X8+568]
	030 Move X1, [X8+576]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X19, 0
	033 JumpIfEqual {72}
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {72}
	038 Move X8, [X20]
	039 Move X0, X20
	040 Move X9, [X8+712]
	041 Move X1, [X8+720]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move W8, [X19+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X23, 0xB47000
	046 Move X24, 0xB44000
	047 Move X23, [X23+1912]
	048 Move X24, [X24+1120]
	049 Move W21, W31
	050 Move X2, [X23]
	051 Move X0, X19
	052 Move W1, W21
	053 Call List`1<Byte>.get_Item, X0, X1
	054 Move X8, [X24]
	055 Move W22, W0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move W0, W22
	062 Call JSONNode.op_Implicit, X0
	063 Move X8, [X20]
	064 Move X1, X0
	065 Move X0, X20
	066 Move X9, [X8+648]
	067 Move X2, [X8+656]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move W8, [X19+24]
	070 Add W21, W21, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return 

Method: SimpleJSON.JSONNode op_Implicit(System.Collections.Generic.List`1<System.Byte> aByteList)

Disassembly:
	0x035B19B8 STR X30, [X31 - 0x20]!
	0x035B19BC STP X20, X19, [X31 + 0x10]
	0x035B19C0 ADRP X20, 0xE2F000
	0x035B19C4 LDRB W8, [X20 + 0x8D]
	0x035B19C8 MOV W19, W0
	0x035B19CC TBNZ X8, 0x0, 0x35B19F0
	0x035B19D0 ADRP X0, 0xB6C000
	0x035B19D4 LDR X0, [X0 + 0x370]
	0x035B19D8 BL 0x1C16CF4
	0x035B19DC ADRP X0, 0xB6A000
	0x035B19E0 LDR X0, [X0 + 0xBC0]
	0x035B19E4 BL 0x1C16CF4
	0x035B19E8 MOVZ W8, 0x1
	0x035B19EC STRB W8, [X20 + 0x8D]
	0x035B19F0 CBZ W19, 0x35B1A10
	0x035B19F4 ADRP X8, 0xB6A000
	0x035B19F8 LDR X8, [X8 + 0xBC0]
	0x035B19FC LDR X0, [X8]
	0x035B1A00 BL 0x1C16F10
	0x035B1A04 MOV X19, X0
	0x035B1A08 BL 0x35AE864
	0x035B1A0C B 0x35B1A28
	0x035B1A10 ADRP X8, 0xB6C000
	0x035B1A14 LDR X8, [X8 + 0x370]
	0x035B1A18 LDR X0, [X8]
	0x035B1A1C BL 0x1C16F10
	0x035B1A20 MOV X19, X0
	0x035B1A24 BL 0x35AE904
	0x035B1A28 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE30000
	006 Move X21, 0xB6D000
	007 Move W8, [X20+122]
	008 Move X21, [X21+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6D000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+122], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call JSONArray..ctor, X0
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X20]
	026 Move X0, X20
	027 Move X1, X19
	028 Move X9, [X8+1448]
	029 Move X2, [X8+1456]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.Byte> op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B1A2C LDP X20, X19, [X31 + 0x10]
	0x035B1A30 LDR X30, [X31], #0x20
	0x035B1A34 RET
	0x035B1A38 STP D9, D8, [X31 - 0x30]!
	0x035B1A3C STR X30, [X31 + 0x10]
	0x035B1A40 STP X20, X19, [X31 + 0x20]
	0x035B1A44 ADRP X20, 0xE2F000
	0x035B1A48 ADRP X19, 0xB43000

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1432]
	006 Move X1, [X8+1440]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.String[] get_AsStringArray()

Disassembly:
	0x035B1A4C LDRB W8, [X20 + 0x8E]
	0x035B1A50 LDR X19, [X19 + 0x460]
	0x035B1A54 MOV V8.16B, V1.16B
	0x035B1A58 MOV V9.16B, V0.16B
	0x035B1A5C TBNZ X8, 0x0, 0x35B1A8C
	0x035B1A60 ADRP X0, 0xB43000
	0x035B1A64 LDR X0, [X0 + 0x460]
	0x035B1A68 BL 0x1C16CF4
	0x035B1A6C ADRP X0, 0xB6A000
	0x035B1A70 LDR X0, [X0 + 0x780]
	0x035B1A74 BL 0x1C16CF4
	0x035B1A78 ADRP X0, 0xB6A000
	0x035B1A7C LDR X0, [X0 + 0x788]
	0x035B1A80 BL 0x1C16CF4
	0x035B1A84 MOVZ W8, 0x1
	0x035B1A88 STRB W8, [X20 + 0x8E]
	0x035B1A8C LDR X0, [X19]
	0x035B1A90 LDR W8, [X0 + 0xE0]
	0x035B1A94 CBNZ W8, 0x35B1AA0
	0x035B1A98 BL 0x1C16DFC
	0x035B1A9C LDR X0, [X19]
	0x035B1AA0 LDR X8, [X0 + 0xB8]
	0x035B1AA4 LDR W0, [X8 + 0x8]
	0x035B1AA8 BL 0x35B19B8
	0x035B1AAC CBZ X0, 0x35B1AE0
	0x035B1AB0 ADRP X8, 0xB6A000
	0x035B1AB4 ADRP X9, 0xB6A000
	0x035B1AB8 LDR X8, [X8 + 0x780]
	0x035B1ABC LDR X9, [X9 + 0x788]
	0x035B1AC0 LDP X20, X19, [X31 + 0x20]
	0x035B1AC4 LDR X30, [X31 + 0x10]
	0x035B1AC8 LDR X1, [X8]
	0x035B1ACC LDR X2, [X9]
	0x035B1AD0 MOV V0.16B, V9.16B
	0x035B1AD4 MOV V1.16B, V8.16B
	0x035B1AD8 LDP D9, D8, [X31], #0x30
	0x035B1ADC B 0x35B1AE4
	0x035B1AE0 BL 0x1C16F20
	0x035B1AE4 STP D9, D8, [X31 - 0x30]!
	0x035B1AE8 STP X30, X21, [X31 + 0x10]
	0x035B1AEC STP X20, X19, [X31 + 0x20]
	0x035B1AF0 LDR X8, [X0]
	0x035B1AF4 MOV X21, X1
	0x035B1AF8 MOV X20, X2
	0x035B1AFC MOV V8.16B, V1.16B
	0x035B1B00 LDR X9, [X8 + 0x248]
	0x035B1B04 LDR X1, [X8 + 0x250]
	0x035B1B08 MOV X19, X0
	0x035B1B0C MOV V9.16B, V0.16B
	0x035B1B10 BLR X9
	0x035B1B14 LDR X8, [X19]
	0x035B1B18 TBZ X0, 0x0, 0x35B1B78
	0x035B1B1C LDR X9, [X8 + 0x268]
	0x035B1B20 LDR X2, [X8 + 0x270]
	0x035B1B24 MOVZ W1, 0x1
	0x035B1B28 MOV X0, X19
	0x035B1B2C BLR X9
	0x035B1B30 LDR X8, [X19]
	0x035B1B34 MOV X0, X19
	0x035B1B38 MOV X1, X21
	0x035B1B3C LDP X9, X2, [X8 + 0x1A8]
	0x035B1B40 BLR X9
	0x035B1B44 CBZ X0, 0x35B1C10
	0x035B1B48 LDR X8, [X0]
	0x035B1B4C MOV V0.16B, V9.16B
	0x035B1B50 LDR X9, [X8 + 0x398]
	0x035B1B54 LDR X1, [X8 + 0x3A0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE30000
	008 Move W8, [X20+123]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB43000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+123], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+552]
	022 Move X1, [X8+560]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {73}
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+568]
	031 Move X1, [X8+576]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {73}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+488]
	040 Move X1, [X8+496]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, 0xB43000
	043 Move X8, [X8+2760]
	044 Move W22, W0
	045 Move W1, W22
	046 Move X8, [X8]
	047 Move X0, X8
	048 Call 0x1C17D6C
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, X0
	051 Move X21, X31
	052 Move W22, W22
	053 Add X23, X20, 32
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move W1, W21
	057 Move X9, [X8+392]
	058 Move X2, [X8+400]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X0, 0
	061 JumpIfEqual {82}
	062 Move X8, [X0]
	063 Move X9, [X8+456]
	064 Move X1, [X8+464]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X20, 0
	067 JumpIfEqual {82}
	068 Move W8, [X20+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X23], X0
	071 Add X21, X21, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X20, X31
	074 Move X0, X20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Return X0
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: System.Void set_AsStringArray(System.String[] value)

Disassembly:
	0x035B1B58 BLR X9
	0x035B1B5C LDR X8, [X19]
	0x035B1B60 MOV X0, X19
	0x035B1B64 MOV X1, X20
	0x035B1B68 LDP X9, X2, [X8 + 0x1A8]
	0x035B1B6C BLR X9
	0x035B1B70 CBNZ X0, 0x35B1BE8
	0x035B1B74 B 0x35B1C10
	0x035B1B78 LDR X9, [X8 + 0x238]
	0x035B1B7C LDR X1, [X8 + 0x240]
	0x035B1B80 MOV X0, X19
	0x035B1B84 BLR X9
	0x035B1B88 TBZ X0, 0x0, 0x35B1BFC
	0x035B1B8C LDR X8, [X19]
	0x035B1B90 MOVZ W1, 0x1
	0x035B1B94 MOV X0, X19
	0x035B1B98 LDR X9, [X8 + 0x268]
	0x035B1B9C LDR X2, [X8 + 0x270]
	0x035B1BA0 BLR X9
	0x035B1BA4 LDR X8, [X19]
	0x035B1BA8 MOV X0, X19
	0x035B1BAC MOV W1, W31
	0x035B1BB0 LDP X9, X2, [X8 + 0x188]
	0x035B1BB4 BLR X9
	0x035B1BB8 CBZ X0, 0x35B1C10
	0x035B1BBC LDR X8, [X0]
	0x035B1BC0 MOV V0.16B, V9.16B
	0x035B1BC4 LDR X9, [X8 + 0x398]
	0x035B1BC8 LDR X1, [X8 + 0x3A0]
	0x035B1BCC BLR X9
	0x035B1BD0 LDR X8, [X19]
	0x035B1BD4 MOVZ W1, 0x1
	0x035B1BD8 MOV X0, X19
	0x035B1BDC LDP X9, X2, [X8 + 0x188]
	0x035B1BE0 BLR X9
	0x035B1BE4 CBZ X0, 0x35B1C10
	0x035B1BE8 LDR X8, [X0]
	0x035B1BEC MOV V0.16B, V8.16B
	0x035B1BF0 LDR X9, [X8 + 0x398]
	0x035B1BF4 LDR X1, [X8 + 0x3A0]
	0x035B1BF8 BLR X9
	0x035B1BFC MOV X0, X19
	0x035B1C00 LDP X20, X19, [X31 + 0x20]
	0x035B1C04 LDP X30, X21, [X31 + 0x10]
	0x035B1C08 LDP D9, D8, [X31], #0x30
	0x035B1C0C RET
	0x035B1C10 BL 0x1C16F20
	0x035B1C14 STR D10, [X31 - 0x30]!
	0x035B1C18 STP D9, D8, [X31 + 0x8]
	0x035B1C1C STR X30, [X31 + 0x18]
	0x035B1C20 STP X20, X19, [X31 + 0x20]
	0x035B1C24 ADRP X20, 0xE2F000
	0x035B1C28 ADRP X19, 0xB43000
	0x035B1C2C LDRB W8, [X20 + 0x8F]
	0x035B1C30 LDR X19, [X19 + 0x460]
	0x035B1C34 MOV V8.16B, V2.16B
	0x035B1C38 MOV V9.16B, V1.16B
	0x035B1C3C MOV V10.16B, V0.16B
	0x035B1C40 TBNZ X8, 0x0, 0x35B1C7C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE30000
	009 Move W8, [X21+124]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB44000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+124], W8
	021 Move X8, [X20]
	022 Move X0, X20
	023 Move X9, [X8+568]
	024 Move X1, [X8+576]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Compare X19, 0
	027 JumpIfEqual {62}
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {62}
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X9, [X8+712]
	035 Move X1, [X8+720]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X24, 0xB44000
	040 Move X24, [X24+1120]
	041 Move X22, X31
	042 And X8, X8, 0
	043 Add X23, X19, 32
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X24]
	046 Move X21, [X23]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Call JSONNode.op_Implicit, X0
	053 Move X8, [X20]
	054 Move X1, X0
	055 Move X0, X20
	056 Move X9, [X8+648]
	057 Move X2, [X8+656]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move W8, [X19+24]
	060 Add X22, X22, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X30, [X31+64]
	069 Return 
	070 Call 0x1C17F28

Method: SimpleJSON.JSONNode op_Implicit(System.String[] aStringArray)

Disassembly:
	0x035B1C44 ADRP X0, 0xB43000
	0x035B1C48 LDR X0, [X0 + 0x460]
	0x035B1C4C BL 0x1C16CF4
	0x035B1C50 ADRP X0, 0xB6A000
	0x035B1C54 LDR X0, [X0 + 0x780]
	0x035B1C58 BL 0x1C16CF4
	0x035B1C5C ADRP X0, 0xB6A000
	0x035B1C60 LDR X0, [X0 + 0x788]
	0x035B1C64 BL 0x1C16CF4
	0x035B1C68 ADRP X0, 0xB6F000
	0x035B1C6C LDR X0, [X0 + 0x3D0]
	0x035B1C70 BL 0x1C16CF4
	0x035B1C74 MOVZ W8, 0x1
	0x035B1C78 STRB W8, [X20 + 0x8F]
	0x035B1C7C LDR X0, [X19]
	0x035B1C80 LDR W8, [X0 + 0xE0]
	0x035B1C84 CBNZ W8, 0x35B1C90
	0x035B1C88 BL 0x1C16DFC
	0x035B1C8C LDR X0, [X19]
	0x035B1C90 LDR X8, [X0 + 0xB8]
	0x035B1C94 LDR W0, [X8 + 0x8]
	0x035B1C98 BL 0x35B19B8
	0x035B1C9C CBZ X0, 0x35B1CE4
	0x035B1CA0 ADRP X8, 0xB6A000
	0x035B1CA4 ADRP X9, 0xB6A000
	0x035B1CA8 ADRP X10, 0xB6F000
	0x035B1CAC LDR X8, [X8 + 0x780]
	0x035B1CB0 LDR X9, [X9 + 0x788]
	0x035B1CB4 LDR X10, [X10 + 0x3D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE30000
	006 Move X21, 0xB6D000
	007 Move W8, [X20+125]
	008 Move X21, [X21+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6D000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+125], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call JSONArray..ctor, X0
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X20]
	026 Move X0, X20
	027 Move X1, X19
	028 Move X9, [X8+1480]
	029 Move X2, [X8+1488]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

Method: System.String[] op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B1CB8 MOV V1.16B, V9.16B
	0x035B1CBC LDR X1, [X8]
	0x035B1CC0 LDR X2, [X9]
	0x035B1CC4 LDR X3, [X10]
	0x035B1CC8 MOV V2.16B, V8.16B
	0x035B1CCC LDP X20, X19, [X31 + 0x20]
	0x035B1CD0 LDR X30, [X31 + 0x18]
	0x035B1CD4 LDP D9, D8, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1464]
	006 Move X1, [X8+1472]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.String> get_AsStringList()

Disassembly:
	0x035B1CD8 MOV V0.16B, V10.16B
	0x035B1CDC LDR V10, [X31], #0x30
	0x035B1CE0 B 0x35B1CE8
	0x035B1CE4 BL 0x1C16F20
	0x035B1CE8 STR D10, [X31 - 0x40]!
	0x035B1CEC STP D9, D8, [X31 + 0x8]
	0x035B1CF0 STR X30, [X31 + 0x18]
	0x035B1CF4 STP X22, X21, [X31 + 0x20]
	0x035B1CF8 STP X20, X19, [X31 + 0x30]
	0x035B1CFC LDR X8, [X0]
	0x035B1D00 MOV X22, X1
	0x035B1D04 MOV X20, X3
	0x035B1D08 MOV X21, X2
	0x035B1D0C LDR X9, [X8 + 0x248]
	0x035B1D10 LDR X1, [X8 + 0x250]
	0x035B1D14 MOV V8.16B, V2.16B
	0x035B1D18 MOV V9.16B, V1.16B
	0x035B1D1C MOV X19, X0
	0x035B1D20 MOV V10.16B, V0.16B
	0x035B1D24 BLR X9
	0x035B1D28 LDR X8, [X19]
	0x035B1D2C TBZ X0, 0x0, 0x35B1DB8
	0x035B1D30 LDR X9, [X8 + 0x268]
	0x035B1D34 LDR X2, [X8 + 0x270]
	0x035B1D38 MOVZ W1, 0x1
	0x035B1D3C MOV X0, X19
	0x035B1D40 BLR X9
	0x035B1D44 LDR X8, [X19]
	0x035B1D48 MOV X0, X19
	0x035B1D4C MOV X1, X22
	0x035B1D50 LDP X9, X2, [X8 + 0x1A8]
	0x035B1D54 BLR X9
	0x035B1D58 CBZ X0, 0x35B1E84
	0x035B1D5C LDR X8, [X0]
	0x035B1D60 MOV V0.16B, V10.16B
	0x035B1D64 LDR X9, [X8 + 0x398]
	0x035B1D68 LDR X1, [X8 + 0x3A0]
	0x035B1D6C BLR X9
	0x035B1D70 LDR X8, [X19]
	0x035B1D74 MOV X0, X19
	0x035B1D78 MOV X1, X21
	0x035B1D7C LDP X9, X2, [X8 + 0x1A8]
	0x035B1D80 BLR X9
	0x035B1D84 CBZ X0, 0x35B1E84
	0x035B1D88 LDR X8, [X0]
	0x035B1D8C MOV V0.16B, V9.16B
	0x035B1D90 LDR X9, [X8 + 0x398]
	0x035B1D94 LDR X1, [X8 + 0x3A0]
	0x035B1D98 BLR X9
	0x035B1D9C LDR X8, [X19]
	0x035B1DA0 MOV X0, X19
	0x035B1DA4 MOV X1, X20
	0x035B1DA8 LDP X9, X2, [X8 + 0x1A8]
	0x035B1DAC BLR X9
	0x035B1DB0 CBNZ X0, 0x35B1E54
	0x035B1DB4 B 0x35B1E84
	0x035B1DB8 LDR X9, [X8 + 0x238]
	0x035B1DBC LDR X1, [X8 + 0x240]
	0x035B1DC0 MOV X0, X19
	0x035B1DC4 BLR X9
	0x035B1DC8 TBZ X0, 0x0, 0x35B1E68
	0x035B1DCC LDR X8, [X19]
	0x035B1DD0 MOVZ W1, 0x1
	0x035B1DD4 MOV X0, X19
	0x035B1DD8 LDR X9, [X8 + 0x268]
	0x035B1DDC LDR X2, [X8 + 0x270]
	0x035B1DE0 BLR X9
	0x035B1DE4 LDR X8, [X19]
	0x035B1DE8 MOV X0, X19
	0x035B1DEC MOV W1, W31
	0x035B1DF0 LDP X9, X2, [X8 + 0x188]
	0x035B1DF4 BLR X9
	0x035B1DF8 CBZ X0, 0x35B1E84
	0x035B1DFC LDR X8, [X0]
	0x035B1E00 MOV V0.16B, V10.16B
	0x035B1E04 LDR X9, [X8 + 0x398]
	0x035B1E08 LDR X1, [X8 + 0x3A0]
	0x035B1E0C BLR X9
	0x035B1E10 LDR X8, [X19]
	0x035B1E14 MOVZ W1, 0x1
	0x035B1E18 MOV X0, X19
	0x035B1E1C LDP X9, X2, [X8 + 0x188]
	0x035B1E20 BLR X9
	0x035B1E24 CBZ X0, 0x35B1E84
	0x035B1E28 LDR X8, [X0]
	0x035B1E2C MOV V0.16B, V9.16B
	0x035B1E30 LDR X9, [X8 + 0x398]
	0x035B1E34 LDR X1, [X8 + 0x3A0]
	0x035B1E38 BLR X9
	0x035B1E3C LDR X8, [X19]
	0x035B1E40 MOVZ W1, 0x2
	0x035B1E44 MOV X0, X19
	0x035B1E48 LDP X9, X2, [X8 + 0x188]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE30000
	008 Move W8, [X20+126]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB44000
	015 Move X0, [X0+440]
	016 Call 0x1C17CF4
	017 Move X0, 0xB4C000
	018 Move X0, [X0+280]
	019 Call 0x1C17CF4
	020 Move X0, 0xB44000
	021 Move X0, [X0+464]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+126], W8
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+552]
	028 Move X1, [X8+560]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {100}
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+568]
	037 Move X1, [X8+576]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {100}
	043 Move X8, [X19]
	044 Move X0, X19
	045 Move X9, [X8+488]
	046 Move X1, [X8+496]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, 0xB44000
	049 Move X8, [X8+464]
	050 Move W21, W0
	051 Move X8, [X8]
	052 Move X0, X8
	053 Call 0x1C17F10
	054 Move X8, 0xB4C000
	055 Move X8, [X8+280]
	056 Move W1, W21
	057 Move X20, X0
	058 Move X2, [X8]
	059 Call List`1<Object>..ctor, X0, X1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X23, 0xB44000
	062 Move X23, [X23+440]
	063 Move W22, W31
	064 Move X8, [X19]
	065 Move X0, X19
	066 Move W1, W22
	067 Move X9, [X8+392]
	068 Move X2, [X8+400]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X0, 0
	071 JumpIfEqual {109}
	072 Move X8, [X0]
	073 Move X9, [X8+456]
	074 Move X1, [X8+464]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X20, 0
	077 JumpIfEqual {109}
	078 Move W10, [X20+28]
	079 Move X8, [X20+16]
	080 Move X9, [X23]
	081 Add W10, W10, 1
	082 Move [X20+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {109}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 Move X1, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add W9, W10, 1
	090 Add X8, X8, X10
	091 Move [X20+24], W9
	092 Move [X8+32], X1
	093 Move X8, [X9+32]
	094 Move X0, X20
	095 Move X8, [X8+192]
	096 Move X2, [X8+112]
	097 Call List`1<Object>.AddWithResize, X0, X1
	098 Add W22, W22, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X20, X31
	101 Move X0, X20
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Return X0
	109 Call 0x1C17F20

Method: System.Void set_AsStringList(System.Collections.Generic.List`1<System.String> value)

Disassembly:
	0x035B1E4C BLR X9
	0x035B1E50 CBZ X0, 0x35B1E84
	0x035B1E54 LDR X8, [X0]
	0x035B1E58 MOV V0.16B, V8.16B
	0x035B1E5C LDR X9, [X8 + 0x398]
	0x035B1E60 LDR X1, [X8 + 0x3A0]
	0x035B1E64 BLR X9
	0x035B1E68 MOV X0, X19
	0x035B1E6C LDP X20, X19, [X31 + 0x30]
	0x035B1E70 LDP X22, X21, [X31 + 0x20]
	0x035B1E74 LDR X30, [X31 + 0x18]
	0x035B1E78 LDP D9, D8, [X31 + 0x8]
	0x035B1E7C LDR V10, [X31], #0x40
	0x035B1E80 RET
	0x035B1E84 BL 0x1C16F20
	0x035B1E88 STP D11, D10, [X31 - 0x40]!
	0x035B1E8C STP D9, D8, [X31 + 0x10]
	0x035B1E90 STR X30, [X31 + 0x20]
	0x035B1E94 STP X20, X19, [X31 + 0x30]
	0x035B1E98 ADRP X20, 0xE2F000
	0x035B1E9C ADRP X19, 0xB43000
	0x035B1EA0 LDRB W8, [X20 + 0x90]
	0x035B1EA4 LDR X19, [X19 + 0x460]
	0x035B1EA8 MOV V8.16B, V3.16B
	0x035B1EAC MOV V9.16B, V2.16B
	0x035B1EB0 MOV V10.16B, V1.16B
	0x035B1EB4 MOV V11.16B, V0.16B
	0x035B1EB8 TBNZ X8, 0x0, 0x35B1ED0
	0x035B1EBC ADRP X0, 0xB43000
	0x035B1EC0 LDR X0, [X0 + 0x460]
	0x035B1EC4 BL 0x1C16CF4
	0x035B1EC8 MOVZ W8, 0x1
	0x035B1ECC STRB W8, [X20 + 0x90]
	0x035B1ED0 LDR X0, [X19]
	0x035B1ED4 LDR W8, [X0 + 0xE0]
	0x035B1ED8 CBNZ W8, 0x35B1EE4
	0x035B1EDC BL 0x1C16DFC
	0x035B1EE0 LDR X0, [X19]
	0x035B1EE4 LDR X8, [X0 + 0xB8]
	0x035B1EE8 LDR W0, [X8 + 0x8]
	0x035B1EEC BL 0x35B19B8
	0x035B1EF0 CBZ X0, 0x35B1F18
	0x035B1EF4 MOV V2.16B, V9.16B
	0x035B1EF8 MOV V3.16B, V8.16B
	0x035B1EFC LDP X20, X19, [X31 + 0x30]
	0x035B1F00 LDR X30, [X31 + 0x20]
	0x035B1F04 LDP D9, D8, [X31 + 0x10]
	0x035B1F08 MOV V0.16B, V11.16B
	0x035B1F0C MOV V1.16B, V10.16B
	0x035B1F10 LDP D11, D10, [X31], #0x40
	0x035B1F14 B 0x35B1F1C
	0x035B1F18 BL 0x1C16F20
	0x035B1F1C STP D11, D10, [X31 - 0x40]!
	0x035B1F20 STP D9, D8, [X31 + 0x10]
	0x035B1F24 STR X30, [X31 + 0x20]
	0x035B1F28 STP X20, X19, [X31 + 0x30]
	0x035B1F2C ADRP X20, 0xE2F000
	0x035B1F30 LDRB W8, [X20 + 0x99]
	0x035B1F34 MOV V8.16B, V3.16B
	0x035B1F38 MOV V9.16B, V2.16B
	0x035B1F3C MOV V10.16B, V1.16B
	0x035B1F40 MOV V11.16B, V0.16B
	0x035B1F44 MOV X19, X0
	0x035B1F48 TBNZ X8, 0x0, 0x35B1F84
	0x035B1F4C ADRP X0, 0xB6A000
	0x035B1F50 LDR X0, [X0 + 0x780]
	0x035B1F54 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE30000
	009 Move W8, [X21+127]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xB44000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0xB44000
	020 Move X0, [X0+456]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6B000
	023 Move X0, [X0+2904]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+127], W8
	027 Move X8, [X20]
	028 Move X0, X20
	029 Move X9, [X8+568]
	030 Move X1, [X8+576]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X19, 0
	033 JumpIfEqual {72}
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {72}
	038 Move X8, [X20]
	039 Move X0, X20
	040 Move X9, [X8+712]
	041 Move X1, [X8+720]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move W8, [X19+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X23, 0xB6B000
	046 Move X24, 0xB44000
	047 Move X23, [X23+2904]
	048 Move X24, [X24+1120]
	049 Move W21, W31
	050 Move X2, [X23]
	051 Move X0, X19
	052 Move W1, W21
	053 Call List`1<Object>.get_Item, X0, X1
	054 Move X8, [X24]
	055 Move X22, X0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X0, X22
	062 Call JSONNode.op_Implicit, X0
	063 Move X8, [X20]
	064 Move X1, X0
	065 Move X0, X20
	066 Move X9, [X8+648]
	067 Move X2, [X8+656]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move W8, [X19+24]
	070 Add W21, W21, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return 

Method: SimpleJSON.JSONNode op_Implicit(System.Collections.Generic.List`1<System.String> aStringList)

Disassembly:
	0x035B1F58 ADRP X0, 0xB6A000
	0x035B1F5C LDR X0, [X0 + 0x788]
	0x035B1F60 BL 0x1C16CF4
	0x035B1F64 ADRP X0, 0xB6F000
	0x035B1F68 LDR X0, [X0 + 0x3D0]
	0x035B1F6C BL 0x1C16CF4
	0x035B1F70 ADRP X0, 0xB6F000
	0x035B1F74 LDR X0, [X0 + 0x3D8]
	0x035B1F78 BL 0x1C16CF4
	0x035B1F7C MOVZ W8, 0x1
	0x035B1F80 STRB W8, [X20 + 0x99]
	0x035B1F84 LDR X8, [X19]
	0x035B1F88 MOV X0, X19
	0x035B1F8C LDR X9, [X8 + 0x248]
	0x035B1F90 LDR X1, [X8 + 0x250]
	0x035B1F94 BLR X9
	0x035B1F98 LDR X8, [X19]
	0x035B1F9C TBZ X0, 0x0, 0x35B2074
	0x035B1FA0 LDR X9, [X8 + 0x268]
	0x035B1FA4 LDR X2, [X8 + 0x270]
	0x035B1FA8 ADRP X20, 0xB6A000
	0x035B1FAC LDR X20, [X20 + 0x780]
	0x035B1FB0 MOVZ W1, 0x1
	0x035B1FB4 MOV X0, X19
	0x035B1FB8 BLR X9
	0x035B1FBC LDR X8, [X19]
	0x035B1FC0 LDR X1, [X20]
	0x035B1FC4 MOV X0, X19
	0x035B1FC8 LDP X9, X2, [X8 + 0x1A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE30000
	006 Move X21, 0xB6D000
	007 Move W8, [X20+128]
	008 Move X21, [X21+880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6D000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+128], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call JSONArray..ctor, X0
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X20]
	026 Move X0, X20
	027 Move X1, X19
	028 Move X9, [X8+1512]
	029 Move X2, [X8+1520]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.String> op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B1FCC BLR X9
	0x035B1FD0 CBZ X0, 0x35B2168
	0x035B1FD4 LDR X8, [X0]
	0x035B1FD8 MOV V0.16B, V11.16B
	0x035B1FDC LDR X9, [X8 + 0x398]
	0x035B1FE0 LDR X1, [X8 + 0x3A0]
	0x035B1FE4 BLR X9
	0x035B1FE8 ADRP X9, 0xB6A000

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+1496]
	006 Move X1, [X8+1504]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Nullable`1<System.Int32> aValue)

Disassembly:
	0x035B1FEC LDR X8, [X19]
	0x035B1FF0 LDR X9, [X9 + 0x788]
	0x035B1FF4 MOV X0, X19
	0x035B1FF8 LDR X1, [X9]
	0x035B1FFC LDP X9, X2, [X8 + 0x1A8]
	0x035B2000 BLR X9
	0x035B2004 CBZ X0, 0x35B2168
	0x035B2008 LDR X8, [X0]
	0x035B200C MOV V0.16B, V10.16B
	0x035B2010 LDR X9, [X8 + 0x398]
	0x035B2014 LDR X1, [X8 + 0x3A0]
	0x035B2018 BLR X9
	0x035B201C ADRP X9, 0xB6E000
	0x035B2020 LDR X8, [X19]
	0x035B2024 LDR X9, [X9 + 0x3D0]
	0x035B2028 MOV X0, X19
	0x035B202C LDR X1, [X9]
	0x035B2030 LDP X9, X2, [X8 + 0x1A8]
	0x035B2034 BLR X9
	0x035B2038 CBZ X0, 0x35B2168
	0x035B203C LDR X8, [X0]
	0x035B2040 MOV V0.16B, V9.16B
	0x035B2044 LDR X9, [X8 + 0x398]
	0x035B2048 LDR X1, [X8 + 0x3A0]
	0x035B204C BLR X9
	0x035B2050 ADRP X9, 0xB6E000
	0x035B2054 LDR X8, [X19]
	0x035B2058 LDR X9, [X9 + 0x3D8]
	0x035B205C MOV X0, X19
	0x035B2060 LDR X1, [X9]
	0x035B2064 LDP X9, X2, [X8 + 0x1A8]
	0x035B2068 BLR X9
	0x035B206C CBNZ X0, 0x35B213C
	0x035B2070 B 0x35B2168
	0x035B2074 LDR X9, [X8 + 0x238]
	0x035B2078 LDR X1, [X8 + 0x240]
	0x035B207C MOV X0, X19
	0x035B2080 BLR X9
	0x035B2084 TBZ X0, 0x0, 0x35B2150
	0x035B2088 LDR X8, [X19]
	0x035B208C MOVZ W1, 0x1
	0x035B2090 MOV X0, X19
	0x035B2094 LDR X9, [X8 + 0x268]
	0x035B2098 LDR X2, [X8 + 0x270]
	0x035B209C BLR X9
	0x035B20A0 LDR X8, [X19]
	0x035B20A4 MOV X0, X19
	0x035B20A8 MOV W1, W31
	0x035B20AC LDP X9, X2, [X8 + 0x188]
	0x035B20B0 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE30000
	005 Move W8, [X20+129]
	006 Move X19, X0
	007 Move [X31+8], X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xB86000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move X0, 0xB6C000
	016 Move X0, [X0+1024]
	017 Call 0x1C17CF4
	018 Move X0, 0xB45000
	019 Move X0, [X0+3832]
	020 Call 0x1C17CF4
	021 Move X0, 0xB45000
	022 Move X0, [X0+3840]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+129], W8
	026 And W31, W19, 255
	027 Move X8, 0xB45000
	028 Move X8, [X8+3840]
	029 Move X19, 0xB6C000
	030 Add X0, X31, 8
	031 Move X1, [X8]
	032 Move X19, [X19+1024]
	033 Call Nullable`1<Int32>.get_Value, X0
	034 Move X8, [X19]
	035 Move W19, W0
	036 Move X0, X8
	037 Call 0x1C17F10
	038 NotImplemented "Instruction SCVTF not yet implemented."
	039 Move X20, X0
	040 Call JSONNumber..ctor, X0, V0
	041 Move X0, X20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0
	046 Move X8, 0xB86000
	047 Move X8, [X8+1608]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Call JSONNull.CreateOrGet
	057 Return X0

Method: System.Nullable`1<System.Int32> op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B20B4 CBZ X0, 0x35B2168
	0x035B20B8 LDR X8, [X0]
	0x035B20BC MOV V0.16B, V11.16B
	0x035B20C0 LDR X9, [X8 + 0x398]
	0x035B20C4 LDR X1, [X8 + 0x3A0]
	0x035B20C8 BLR X9
	0x035B20CC LDR X8, [X19]
	0x035B20D0 MOVZ W1, 0x1
	0x035B20D4 MOV X0, X19
	0x035B20D8 LDP X9, X2, [X8 + 0x188]
	0x035B20DC BLR X9
	0x035B20E0 CBZ X0, 0x35B2168
	0x035B20E4 LDR X8, [X0]
	0x035B20E8 MOV V0.16B, V10.16B
	0x035B20EC LDR X9, [X8 + 0x398]
	0x035B20F0 LDR X1, [X8 + 0x3A0]
	0x035B20F4 BLR X9
	0x035B20F8 LDR X8, [X19]
	0x035B20FC MOVZ W1, 0x2
	0x035B2100 MOV X0, X19
	0x035B2104 LDP X9, X2, [X8 + 0x188]
	0x035B2108 BLR X9
	0x035B210C CBZ X0, 0x35B2168
	0x035B2110 LDR X8, [X0]
	0x035B2114 MOV V0.16B, V9.16B
	0x035B2118 LDR X9, [X8 + 0x398]
	0x035B211C LDR X1, [X8 + 0x3A0]
	0x035B2120 BLR X9
	0x035B2124 LDR X8, [X19]
	0x035B2128 MOVZ W1, 0x3
	0x035B212C MOV X0, X19
	0x035B2130 LDP X9, X2, [X8 + 0x188]
	0x035B2134 BLR X9
	0x035B2138 CBZ X0, 0x35B2168
	0x035B213C LDR X8, [X0]
	0x035B2140 MOV V0.16B, V8.16B
	0x035B2144 LDR X9, [X8 + 0x398]
	0x035B2148 LDR X1, [X8 + 0x3A0]
	0x035B214C BLR X9
	0x035B2150 MOV X0, X19
	0x035B2154 LDP X20, X19, [X31 + 0x30]
	0x035B2158 LDR X30, [X31 + 0x20]
	0x035B215C LDP D9, D8, [X31 + 0x10]
	0x035B2160 LDP D11, D10, [X31], #0x40
	0x035B2164 RET
	0x035B2168 BL 0x1C16F20
	0x035B216C STP D11, D10, [X31 - 0x40]!
	0x035B2170 STP D9, D8, [X31 + 0x10]
	0x035B2174 STR X30, [X31 + 0x20]
	0x035B2178 STP X20, X19, [X31 + 0x30]
	0x035B217C ADRP X20, 0xE2E000
	0x035B2180 ADRP X19, 0xB42000
	0x035B2184 LDRB W8, [X20 + 0x91]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move X21, 0xB43000
	008 Move W8, [X20+130]
	009 Move X21, [X21+1120]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB43000
	016 Move X0, [X0+1120]
	017 Call 0x1C17CF4
	018 Move X0, 0xB43000
	019 Move X0, [X0+1136]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+130], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X31
	030 Call JSONNode.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {46}
	035 Compare X19, 0
	036 JumpIfEqual {67}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+552]
	040 Move X1, [X8+560]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 Move X0, X31
	047 Move [X31+8], X31
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+872]
	051 Move X1, [X8+880]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0xB43000
	054 Move X8, [X8+1136]
	055 Move W1, W0
	056 Add X0, X31, 8
	057 Move [X31+8], X31
	058 Move X2, [X8]
	059 Call Nullable`1<Int32>..ctor, X0, X1
	060 Move X0, [X31+8]
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+16]
	064 Move X21, [X31+24]
	065 Add X31, X31, 48
	066 Return X0
	067 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Nullable`1<System.Single> aValue)

Disassembly:
	0x035B2188 LDR X19, [X19 + 0x460]
	0x035B218C MOV V8.16B, V3.16B
	0x035B2190 MOV V9.16B, V2.16B
	0x035B2194 MOV V10.16B, V1.16B
	0x035B2198 MOV V11.16B, V0.16B
	0x035B219C TBNZ X8, 0x0, 0x35B21B4
	0x035B21A0 ADRP X0, 0xB42000
	0x035B21A4 LDR X0, [X0 + 0x460]
	0x035B21A8 BL 0x1C16CF4
	0x035B21AC MOVZ W8, 0x1
	0x035B21B0 STRB W8, [X20 + 0x91]
	0x035B21B4 LDR X0, [X19]
	0x035B21B8 LDR W8, [X0 + 0xE0]
	0x035B21BC CBNZ W8, 0x35B21C8
	0x035B21C0 BL 0x1C16DFC
	0x035B21C4 LDR X0, [X19]
	0x035B21C8 LDR X8, [X0 + 0xB8]
	0x035B21CC LDR W0, [X8 + 0x14]
	0x035B21D0 BL 0x35B19B8
	0x035B21D4 CBZ X0, 0x35B21FC
	0x035B21D8 MOV V2.16B, V9.16B
	0x035B21DC MOV V3.16B, V8.16B
	0x035B21E0 LDP X20, X19, [X31 + 0x30]
	0x035B21E4 LDR X30, [X31 + 0x20]
	0x035B21E8 LDP D9, D8, [X31 + 0x10]
	0x035B21EC MOV V0.16B, V11.16B
	0x035B21F0 MOV V1.16B, V10.16B
	0x035B21F4 LDP D11, D10, [X31], #0x40
	0x035B21F8 B 0x35B2200
	0x035B21FC BL 0x1C16F20
	0x035B2200 STP D11, D10, [X31 - 0x40]!
	0x035B2204 STP D9, D8, [X31 + 0x10]
	0x035B2208 STR X30, [X31 + 0x20]
	0x035B220C STP X20, X19, [X31 + 0x30]
	0x035B2210 ADRP X20, 0xE2E000
	0x035B2214 LDRB W8, [X20 + 0x9B]
	0x035B2218 MOV V8.16B, V3.16B
	0x035B221C MOV V9.16B, V2.16B
	0x035B2220 MOV V10.16B, V1.16B
	0x035B2224 MOV V11.16B, V0.16B
	0x035B2228 MOV X19, X0
	0x035B222C TBNZ X8, 0x0, 0x35B2268
	0x035B2230 ADRP X0, 0xB6E000
	0x035B2234 LDR X0, [X0 + 0x3B0]
	0x035B2238 BL 0x1C16CF4
	0x035B223C ADRP X0, 0xB6E000
	0x035B2240 LDR X0, [X0 + 0x3B8]
	0x035B2244 BL 0x1C16CF4
	0x035B2248 ADRP X0, 0xB6E000
	0x035B224C LDR X0, [X0 + 0x3C0]
	0x035B2250 BL 0x1C16CF4
	0x035B2254 ADRP X0, 0xB6E000
	0x035B2258 LDR X0, [X0 + 0x3A8]
	0x035B225C BL 0x1C16CF4
	0x035B2260 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move W8, [X20+131]
	008 Move X19, X0
	009 Move [X31+8], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB86000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0xB6C000
	018 Move X0, [X0+1024]
	019 Call 0x1C17CF4
	020 Move X0, 0xB46000
	021 Move X0, [X0+192]
	022 Call 0x1C17CF4
	023 Move X0, 0xB46000
	024 Move X0, [X0+280]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+131], W8
	028 And W31, W19, 255
	029 Move X8, 0xB46000
	030 Move X8, [X8+280]
	031 Move X19, 0xB6C000
	032 Add X0, X31, 8
	033 Move X1, [X8]
	034 Move X19, [X19+1024]
	035 Call Nullable`1<Single>.get_Value, X0
	036 Move X0, [X19]
	037 Move V8, V0
	038 Call 0x1C17F10
	039 NotImplemented "Instruction FCVT not yet implemented."
	040 Move X19, X0
	041 Call JSONNumber..ctor, X0, V0
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+24]
	046 Move V8, [X31+16]
	047 Add X31, X31, 48
	048 Return X0
	049 Move X8, 0xB86000
	050 Move X8, [X8+1608]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+24]
	059 Move V8, [X31+16]
	060 Add X31, X31, 48
	061 Call JSONNull.CreateOrGet
	062 Return X0

Method: System.Nullable`1<System.Single> op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B2264 STRB W8, [X20 + 0x9B]
	0x035B2268 LDR X8, [X19]
	0x035B226C MOV X0, X19
	0x035B2270 LDR X9, [X8 + 0x248]
	0x035B2274 LDR X1, [X8 + 0x250]
	0x035B2278 BLR X9
	0x035B227C LDR X8, [X19]
	0x035B2280 TBZ X0, 0x0, 0x35B2358
	0x035B2284 LDR X9, [X8 + 0x268]
	0x035B2288 LDR X2, [X8 + 0x270]
	0x035B228C ADRP X20, 0xB6E000
	0x035B2290 LDR X20, [X20 + 0x3A8]
	0x035B2294 MOVZ W1, 0x1
	0x035B2298 MOV X0, X19
	0x035B229C BLR X9
	0x035B22A0 LDR X8, [X19]
	0x035B22A4 LDR X1, [X20]
	0x035B22A8 MOV X0, X19
	0x035B22AC LDP X9, X2, [X8 + 0x1A8]
	0x035B22B0 BLR X9
	0x035B22B4 CBZ X0, 0x35B244C
	0x035B22B8 LDR X8, [X0]
	0x035B22BC MOV V0.16B, V11.16B
	0x035B22C0 LDR X9, [X8 + 0x398]
	0x035B22C4 LDR X1, [X8 + 0x3A0]
	0x035B22C8 BLR X9
	0x035B22CC ADRP X9, 0xB6E000
	0x035B22D0 LDR X8, [X19]
	0x035B22D4 LDR X9, [X9 + 0x3B8]
	0x035B22D8 MOV X0, X19
	0x035B22DC LDR X1, [X9]
	0x035B22E0 LDP X9, X2, [X8 + 0x1A8]
	0x035B22E4 BLR X9
	0x035B22E8 CBZ X0, 0x35B244C
	0x035B22EC LDR X8, [X0]
	0x035B22F0 MOV V0.16B, V10.16B
	0x035B22F4 LDR X9, [X8 + 0x398]
	0x035B22F8 LDR X1, [X8 + 0x3A0]
	0x035B22FC BLR X9
	0x035B2300 ADRP X9, 0xB6E000
	0x035B2304 LDR X8, [X19]
	0x035B2308 LDR X9, [X9 + 0x3C0]
	0x035B230C MOV X0, X19
	0x035B2310 LDR X1, [X9]
	0x035B2314 LDP X9, X2, [X8 + 0x1A8]
	0x035B2318 BLR X9
	0x035B231C CBZ X0, 0x35B244C
	0x035B2320 LDR X8, [X0]
	0x035B2324 MOV V0.16B, V9.16B
	0x035B2328 LDR X9, [X8 + 0x398]
	0x035B232C LDR X1, [X8 + 0x3A0]
	0x035B2330 BLR X9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move X21, 0xB43000
	008 Move W8, [X20+132]
	009 Move X21, [X21+1120]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB43000
	016 Move X0, [X0+1120]
	017 Call 0x1C17CF4
	018 Move X0, 0xB46000
	019 Move X0, [X0+312]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+132], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X31
	030 Call JSONNode.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {46}
	035 Compare X19, 0
	036 JumpIfEqual {66}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+552]
	040 Move X1, [X8+560]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 Move X0, X31
	047 Move [X31+8], X31
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+904]
	051 Move X1, [X8+912]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0xB46000
	054 Move X8, [X8+312]
	055 Add X0, X31, 8
	056 Move [X31+8], X31
	057 Move X1, [X8]
	058 Call Nullable`1<Single>..ctor, X0, V0
	059 Move X0, [X31+8]
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move X21, [X31+24]
	064 Add X31, X31, 48
	065 Return X0
	066 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Nullable`1<System.Double> aValue)

Disassembly:
	0x035B2334 ADRP X9, 0xB6E000
	0x035B2338 LDR X8, [X19]
	0x035B233C LDR X9, [X9 + 0x3B0]
	0x035B2340 MOV X0, X19
	0x035B2344 LDR X1, [X9]
	0x035B2348 LDP X9, X2, [X8 + 0x1A8]
	0x035B234C BLR X9
	0x035B2350 CBNZ X0, 0x35B2420
	0x035B2354 B 0x35B244C
	0x035B2358 LDR X9, [X8 + 0x238]
	0x035B235C LDR X1, [X8 + 0x240]
	0x035B2360 MOV X0, X19
	0x035B2364 BLR X9
	0x035B2368 TBZ X0, 0x0, 0x35B2434
	0x035B236C LDR X8, [X19]
	0x035B2370 MOVZ W1, 0x1
	0x035B2374 MOV X0, X19
	0x035B2378 LDR X9, [X8 + 0x268]
	0x035B237C LDR X2, [X8 + 0x270]
	0x035B2380 BLR X9
	0x035B2384 LDR X8, [X19]
	0x035B2388 MOV X0, X19
	0x035B238C MOV W1, W31
	0x035B2390 LDP X9, X2, [X8 + 0x188]
	0x035B2394 BLR X9
	0x035B2398 CBZ X0, 0x35B244C
	0x035B239C LDR X8, [X0]
	0x035B23A0 MOV V0.16B, V11.16B
	0x035B23A4 LDR X9, [X8 + 0x398]
	0x035B23A8 LDR X1, [X8 + 0x3A0]
	0x035B23AC BLR X9
	0x035B23B0 LDR X8, [X19]
	0x035B23B4 MOVZ W1, 0x1
	0x035B23B8 MOV X0, X19
	0x035B23BC LDP X9, X2, [X8 + 0x188]
	0x035B23C0 BLR X9
	0x035B23C4 CBZ X0, 0x35B244C
	0x035B23C8 LDR X8, [X0]
	0x035B23CC MOV V0.16B, V10.16B
	0x035B23D0 LDR X9, [X8 + 0x398]
	0x035B23D4 LDR X1, [X8 + 0x3A0]
	0x035B23D8 BLR X9
	0x035B23DC LDR X8, [X19]
	0x035B23E0 MOVZ W1, 0x2
	0x035B23E4 MOV X0, X19
	0x035B23E8 LDP X9, X2, [X8 + 0x188]
	0x035B23EC BLR X9
	0x035B23F0 CBZ X0, 0x35B244C
	0x035B23F4 LDR X8, [X0]
	0x035B23F8 MOV V0.16B, V9.16B
	0x035B23FC LDR X9, [X8 + 0x398]
	0x035B2400 LDR X1, [X8 + 0x3A0]
	0x035B2404 BLR X9
	0x035B2408 LDR X8, [X19]
	0x035B240C MOVZ W1, 0x3

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move W8, [X20+133]
	008 Move X19, X0
	009 Move [X31], X0
	010 Move [X31+8], X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB86000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0xB6C000
	019 Move X0, [X0+1024]
	020 Call 0x1C17CF4
	021 Move X0, 0xB4D000
	022 Move X0, [X0+2008]
	023 Call 0x1C17CF4
	024 Move X0, 0xB4E000
	025 Move X0, [X0+3672]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+133], W8
	029 And W31, W19, 255
	030 Move X8, 0xB4E000
	031 Move X8, [X8+3672]
	032 Move X19, 0xB6C000
	033 Add X0, X31, 0
	034 Move X1, [X8]
	035 Move X19, [X19+1024]
	036 Call Nullable`1<Double>.get_Value, X0
	037 Move X0, [X19]
	038 Move V8, V0
	039 Call 0x1C17F10
	040 Move V0, V8
	041 Move X19, X0
	042 Call JSONNumber..ctor, X0, V0
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+24]
	047 Move V8, [X31+16]
	048 Add X31, X31, 48
	049 Return X0
	050 Move X8, 0xB86000
	051 Move X8, [X8+1608]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+24]
	060 Move V8, [X31+16]
	061 Add X31, X31, 48
	062 Call JSONNull.CreateOrGet
	063 Return X0

Method: System.Nullable`1<System.Double> op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B2410 MOV X0, X19
	0x035B2414 LDP X9, X2, [X8 + 0x188]
	0x035B2418 BLR X9
	0x035B241C CBZ X0, 0x35B244C
	0x035B2420 LDR X8, [X0]
	0x035B2424 MOV V0.16B, V8.16B
	0x035B2428 LDR X9, [X8 + 0x398]
	0x035B242C LDR X1, [X8 + 0x3A0]
	0x035B2430 BLR X9
	0x035B2434 MOV X0, X19
	0x035B2438 LDP X20, X19, [X31 + 0x30]
	0x035B243C LDR X30, [X31 + 0x20]
	0x035B2440 LDP D9, D8, [X31 + 0x10]
	0x035B2444 LDP D11, D10, [X31], #0x40
	0x035B2448 RET
	0x035B244C BL 0x1C16F20
	0x035B2450 STP X30, X21, [X31 - 0x20]!
	0x035B2454 STP X20, X19, [X31 + 0x10]
	0x035B2458 ADRP X21, 0xE2E000
	0x035B245C ADRP X20, 0xB42000
	0x035B2460 LDRB W8, [X21 + 0x92]
	0x035B2464 LDR X20, [X20 + 0x460]
	0x035B2468 MOV X19, X0
	0x035B246C TBNZ X8, 0x0, 0x35B2484
	0x035B2470 ADRP X0, 0xB42000
	0x035B2474 LDR X0, [X0 + 0x460]
	0x035B2478 BL 0x1C16CF4
	0x035B247C MOVZ W8, 0x1
	0x035B2480 STRB W8, [X21 + 0x92]
	0x035B2484 LDR X0, [X20]
	0x035B2488 LDR W8, [X0 + 0xE0]
	0x035B248C CBNZ W8, 0x35B2498
	0x035B2490 BL 0x1C16DFC
	0x035B2494 LDR X0, [X20]
	0x035B2498 LDR X8, [X0 + 0xB8]
	0x035B249C LDR W0, [X8 + 0x14]
	0x035B24A0 BL 0x35B19B8
	0x035B24A4 CBZ X0, 0x35B24B8
	0x035B24A8 AND X1, X19, 0x0
	0x035B24AC LDP X20, X19, [X31 + 0x10]
	0x035B24B0 LDP X30, X21, [X31], #0x20
	0x035B24B4 B 0x35B24BC
	0x035B24B8 BL 0x1C16F20
	0x035B24BC STR X30, [X31 - 0x40]!
	0x035B24C0 STP X24, X23, [X31 + 0x10]
	0x035B24C4 STP X22, X21, [X31 + 0x20]
	0x035B24C8 STP X20, X19, [X31 + 0x30]
	0x035B24CC ADRP X24, 0xE2E000
	0x035B24D0 LDRB W8, [X24 + 0x9D]
	0x035B24D4 MOV X20, X1
	0x035B24D8 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move X21, 0xB43000
	008 Move W8, [X20+134]
	009 Move X21, [X21+1120]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB43000
	016 Move X0, [X0+1120]
	017 Call 0x1C17CF4
	018 Move X0, 0xB4D000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+134], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X31
	030 Call JSONNode.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {46}
	035 Compare X19, 0
	036 JumpIfEqual {68}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+552]
	040 Move X1, [X8+560]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 Move [X31], X31
	047 Move [X31+8], X31
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+840]
	051 Move X1, [X8+848]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0xB4D000
	054 Move X8, [X8+2000]
	055 Add X0, X31, 0
	056 Move [X31], X31
	057 Move [X31+8], X31
	058 Move X1, [X8]
	059 Call Nullable`1<Double>..ctor, X0, V0
	060 Move X0, [X31]
	061 Move X1, [X31+8]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Add X31, X31, 48
	067 Return X0
	068 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Nullable`1<System.Boolean> aValue)

Disassembly:
	0x035B24DC UBFM X23, X1, 0x8, 0x3F
	0x035B24E0 UBFM X22, X1, 0x10, 0x3F
	0x035B24E4 UBFM X21, X1, 0x18, 0x3F
	0x035B24E8 TBNZ X8, 0x0, 0x35B2524
	0x035B24EC ADRP X0, 0xB6E000
	0x035B24F0 LDR X0, [X0 + 0x3B0]
	0x035B24F4 BL 0x1C16CF4
	0x035B24F8 ADRP X0, 0xB6E000
	0x035B24FC LDR X0, [X0 + 0x3B8]
	0x035B2500 BL 0x1C16CF4
	0x035B2504 ADRP X0, 0xB6E000
	0x035B2508 LDR X0, [X0 + 0x3C0]
	0x035B250C BL 0x1C16CF4
	0x035B2510 ADRP X0, 0xB6E000
	0x035B2514 LDR X0, [X0 + 0x3A8]
	0x035B2518 BL 0x1C16CF4
	0x035B251C MOVZ W8, 0x1
	0x035B2520 STRB W8, [X24 + 0x9D]
	0x035B2524 LDR X8, [X19]
	0x035B2528 MOV X0, X19
	0x035B252C LDR X9, [X8 + 0x248]
	0x035B2530 LDR X1, [X8 + 0x250]
	0x035B2534 BLR X9
	0x035B2538 LDR X8, [X19]
	0x035B253C TBZ X0, 0x0, 0x35B2614
	0x035B2540 LDR X9, [X8 + 0x268]
	0x035B2544 LDR X2, [X8 + 0x270]
	0x035B2548 ADRP X24, 0xB6E000
	0x035B254C LDR X24, [X24 + 0x3A8]
	0x035B2550 MOVZ W1, 0x1
	0x035B2554 MOV X0, X19
	0x035B2558 BLR X9
	0x035B255C LDR X8, [X19]
	0x035B2560 LDR X1, [X24]
	0x035B2564 MOV X0, X19
	0x035B2568 LDP X9, X2, [X8 + 0x1A8]
	0x035B256C BLR X9
	0x035B2570 CBZ X0, 0x35B2708
	0x035B2574 LDR X8, [X0]
	0x035B2578 AND W1, W20, 0xFF
	0x035B257C LDR X9, [X8 + 0x378]
	0x035B2580 LDR X2, [X8 + 0x380]
	0x035B2584 BLR X9
	0x035B2588 ADRP X9, 0xB6E000
	0x035B258C LDR X8, [X19]
	0x035B2590 LDR X9, [X9 + 0x3B8]
	0x035B2594 MOV X0, X19
	0x035B2598 LDR X1, [X9]
	0x035B259C LDP X9, X2, [X8 + 0x1A8]
	0x035B25A0 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE2F000
	005 Move W8, [X20+135]
	006 Move X19, X0
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xB86000
	013 Move X0, [X0+1632]
	014 Call 0x1C17CF4
	015 Move X0, 0xB86000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move X0, 0xB46000
	019 Move X0, [X0+3056]
	020 Call 0x1C17CF4
	021 Move X0, 0xB46000
	022 Move X0, [X0+3064]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+135], W8
	026 And W31, W19, 255
	027 Move X8, 0xB46000
	028 Move X8, [X8+3064]
	029 Move X19, 0xB86000
	030 Add X0, X31, 12
	031 Move X1, [X8]
	032 Move X19, [X19+1632]
	033 Call Nullable`1<Boolean>.get_Value, X0
	034 Move X8, [X19]
	035 Move W19, W0
	036 Move X0, X8
	037 Call 0x1C17F10
	038 And W1, W19, 1
	039 Move X20, X0
	040 Call JSONBool..ctor, X0, X1
	041 Move X0, X20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0
	046 Move X8, 0xB86000
	047 Move X8, [X8+1608]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Call JSONNull.CreateOrGet
	057 Return X0

Method: System.Nullable`1<System.Boolean> op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B25A4 CBZ X0, 0x35B2708
	0x035B25A8 LDR X8, [X0]
	0x035B25AC AND W1, W23, 0xFF
	0x035B25B0 LDR X9, [X8 + 0x378]
	0x035B25B4 LDR X2, [X8 + 0x380]
	0x035B25B8 BLR X9
	0x035B25BC ADRP X9, 0xB6E000
	0x035B25C0 LDR X8, [X19]
	0x035B25C4 LDR X9, [X9 + 0x3C0]
	0x035B25C8 MOV X0, X19
	0x035B25CC LDR X1, [X9]
	0x035B25D0 LDP X9, X2, [X8 + 0x1A8]
	0x035B25D4 BLR X9
	0x035B25D8 CBZ X0, 0x35B2708
	0x035B25DC LDR X8, [X0]
	0x035B25E0 AND W1, W22, 0xFF
	0x035B25E4 LDR X9, [X8 + 0x378]
	0x035B25E8 LDR X2, [X8 + 0x380]
	0x035B25EC BLR X9
	0x035B25F0 ADRP X9, 0xB6E000
	0x035B25F4 LDR X8, [X19]
	0x035B25F8 LDR X9, [X9 + 0x3B0]
	0x035B25FC MOV X0, X19
	0x035B2600 LDR X1, [X9]
	0x035B2604 LDP X9, X2, [X8 + 0x1A8]
	0x035B2608 BLR X9
	0x035B260C CBNZ X0, 0x35B26DC
	0x035B2610 B 0x35B2708
	0x035B2614 LDR X9, [X8 + 0x238]
	0x035B2618 LDR X1, [X8 + 0x240]
	0x035B261C MOV X0, X19
	0x035B2620 BLR X9
	0x035B2624 TBZ X0, 0x0, 0x35B26F0
	0x035B2628 LDR X8, [X19]
	0x035B262C MOVZ W1, 0x1
	0x035B2630 MOV X0, X19
	0x035B2634 LDR X9, [X8 + 0x268]
	0x035B2638 LDR X2, [X8 + 0x270]
	0x035B263C BLR X9
	0x035B2640 LDR X8, [X19]
	0x035B2644 MOV X0, X19
	0x035B2648 MOV W1, W31
	0x035B264C LDP X9, X2, [X8 + 0x188]
	0x035B2650 BLR X9
	0x035B2654 CBZ X0, 0x35B2708
	0x035B2658 LDR X8, [X0]
	0x035B265C AND W1, W20, 0xFF
	0x035B2660 LDR X9, [X8 + 0x378]
	0x035B2664 LDR X2, [X8 + 0x380]
	0x035B2668 BLR X9
	0x035B266C LDR X8, [X19]
	0x035B2670 MOVZ W1, 0x1
	0x035B2674 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move X21, 0xB43000
	008 Move W8, [X20+136]
	009 Move X21, [X21+1120]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB43000
	016 Move X0, [X0+1120]
	017 Call 0x1C17CF4
	018 Move X0, 0xB46000
	019 Move X0, [X0+4056]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+136], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X31
	030 Call JSONNode.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {46}
	035 Compare X19, 0
	036 JumpIfEqual {67}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+552]
	040 Move X1, [X8+560]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 Move X0, X31
	047 NotImplemented "Instruction STRH not yet implemented."
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+936]
	051 Move X1, [X8+944]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0xB46000
	054 Move X8, [X8+4056]
	055 And W1, W0, 1
	056 Add X0, X31, 12
	057 NotImplemented "Instruction STRH not yet implemented."
	058 Move X2, [X8]
	059 Call Nullable`1<Boolean>..ctor, X0, X1
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+16]
	064 Move X21, [X31+24]
	065 Add X31, X31, 48
	066 Return X0
	067 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Nullable`1<System.Int64> aValue)

Disassembly:
	0x035B2678 LDP X9, X2, [X8 + 0x188]
	0x035B267C BLR X9
	0x035B2680 CBZ X0, 0x35B2708
	0x035B2684 LDR X8, [X0]
	0x035B2688 AND W1, W23, 0xFF
	0x035B268C LDR X9, [X8 + 0x378]
	0x035B2690 LDR X2, [X8 + 0x380]
	0x035B2694 BLR X9
	0x035B2698 LDR X8, [X19]
	0x035B269C MOVZ W1, 0x2
	0x035B26A0 MOV X0, X19
	0x035B26A4 LDP X9, X2, [X8 + 0x188]
	0x035B26A8 BLR X9
	0x035B26AC CBZ X0, 0x35B2708
	0x035B26B0 LDR X8, [X0]
	0x035B26B4 AND W1, W22, 0xFF
	0x035B26B8 LDR X9, [X8 + 0x378]
	0x035B26BC LDR X2, [X8 + 0x380]
	0x035B26C0 BLR X9
	0x035B26C4 LDR X8, [X19]
	0x035B26C8 MOVZ W1, 0x3
	0x035B26CC MOV X0, X19
	0x035B26D0 LDP X9, X2, [X8 + 0x188]
	0x035B26D4 BLR X9
	0x035B26D8 CBZ X0, 0x35B2708
	0x035B26DC LDR X8, [X0]
	0x035B26E0 AND W1, W21, 0xFF
	0x035B26E4 LDR X9, [X8 + 0x378]
	0x035B26E8 LDR X2, [X8 + 0x380]
	0x035B26EC BLR X9
	0x035B26F0 MOV X0, X19
	0x035B26F4 LDP X20, X19, [X31 + 0x30]
	0x035B26F8 LDP X22, X21, [X31 + 0x20]
	0x035B26FC LDP X24, X23, [X31 + 0x10]
	0x035B2700 LDR X30, [X31], #0x40
	0x035B2704 RET
	0x035B2708 BL 0x1C16F20
	0x035B270C STP D11, D10, [X31 - 0x40]!
	0x035B2710 STP D9, D8, [X31 + 0x10]
	0x035B2714 STR X30, [X31 + 0x20]
	0x035B2718 STP X20, X19, [X31 + 0x30]
	0x035B271C ADRP X20, 0xE2E000
	0x035B2720 ADRP X19, 0xB42000
	0x035B2724 LDRB W8, [X20 + 0x93]
	0x035B2728 LDR X19, [X19 + 0x460]
	0x035B272C MOV V8.16B, V3.16B
	0x035B2730 MOV V9.16B, V2.16B
	0x035B2734 MOV V10.16B, V1.16B
	0x035B2738 MOV V11.16B, V0.16B
	0x035B273C TBNZ X8, 0x0, 0x35B2754
	0x035B2740 ADRP X0, 0xB42000
	0x035B2744 LDR X0, [X0 + 0x460]
	0x035B2748 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move W8, [X20+137]
	008 Move X19, X0
	009 Move [X31], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB86000
	015 Move X0, [X0+1608]
	016 Call 0x1C17CF4
	017 Move X0, 0xB6C000
	018 Move X0, [X0+1024]
	019 Call 0x1C17CF4
	020 Move X0, 0xB6A000
	021 Move X0, [X0+3752]
	022 Call 0x1C17CF4
	023 Move X0, 0xB6A000
	024 Move X0, [X0+3760]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+137], W8
	028 And W31, W19, 255
	029 Move X8, 0xB6A000
	030 Move X8, [X8+3760]
	031 Move X19, 0xB6C000
	032 Add X0, X31, 0
	033 Move X1, [X8]
	034 Move X19, [X19+1024]
	035 Call Nullable`1<Int64>.get_Value, X0
	036 Move X8, [X19]
	037 Move X19, X0
	038 Move X0, X8
	039 Call 0x1C17F10
	040 NotImplemented "Instruction SCVTF not yet implemented."
	041 Move X20, X0
	042 Call JSONNumber..ctor, X0, V0
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+16]
	047 Add X31, X31, 48
	048 Return X0
	049 Move X8, 0xB86000
	050 Move X8, [X8+1608]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+16]
	059 Add X31, X31, 48
	060 Call JSONNull.CreateOrGet
	061 Return X0

Method: System.Nullable`1<System.Int64> op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B274C MOVZ W8, 0x1
	0x035B2750 STRB W8, [X20 + 0x93]
	0x035B2754 LDR X0, [X19]
	0x035B2758 LDR W8, [X0 + 0xE0]
	0x035B275C CBNZ W8, 0x35B2768
	0x035B2760 BL 0x1C16DFC
	0x035B2764 LDR X0, [X19]
	0x035B2768 LDR X8, [X0 + 0xB8]
	0x035B276C LDR W0, [X8 + 0xC]
	0x035B2770 BL 0x35B19B8
	0x035B2774 CBZ X0, 0x35B279C
	0x035B2778 MOV V2.16B, V9.16B
	0x035B277C MOV V3.16B, V8.16B
	0x035B2780 LDP X20, X19, [X31 + 0x30]
	0x035B2784 LDR X30, [X31 + 0x20]
	0x035B2788 LDP D9, D8, [X31 + 0x10]
	0x035B278C MOV V0.16B, V11.16B
	0x035B2790 MOV V1.16B, V10.16B
	0x035B2794 LDP D11, D10, [X31], #0x40
	0x035B2798 B 0x35B27A0
	0x035B279C BL 0x1C16F20
	0x035B27A0 STP D11, D10, [X31 - 0x40]!
	0x035B27A4 STP D9, D8, [X31 + 0x10]
	0x035B27A8 STR X30, [X31 + 0x20]
	0x035B27AC STP X20, X19, [X31 + 0x30]
	0x035B27B0 ADRP X20, 0xE2E000
	0x035B27B4 LDRB W8, [X20 + 0x9F]
	0x035B27B8 MOV V8.16B, V3.16B
	0x035B27BC MOV V9.16B, V2.16B
	0x035B27C0 MOV V10.16B, V1.16B
	0x035B27C4 MOV V11.16B, V0.16B
	0x035B27C8 MOV X19, X0
	0x035B27CC TBNZ X8, 0x0, 0x35B2808
	0x035B27D0 ADRP X0, 0xB69000
	0x035B27D4 LDR X0, [X0 + 0x780]
	0x035B27D8 BL 0x1C16CF4
	0x035B27DC ADRP X0, 0xB69000
	0x035B27E0 LDR X0, [X0 + 0x788]
	0x035B27E4 BL 0x1C16CF4
	0x035B27E8 ADRP X0, 0xB6E000
	0x035B27EC LDR X0, [X0 + 0x3D0]
	0x035B27F0 BL 0x1C16CF4
	0x035B27F4 ADRP X0, 0xB6E000
	0x035B27F8 LDR X0, [X0 + 0x3D8]
	0x035B27FC BL 0x1C16CF4
	0x035B2800 MOVZ W8, 0x1
	0x035B2804 STRB W8, [X20 + 0x9F]
	0x035B2808 LDR X8, [X19]
	0x035B280C MOV X0, X19
	0x035B2810 LDR X9, [X8 + 0x248]
	0x035B2814 LDR X1, [X8 + 0x250]
	0x035B2818 BLR X9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move X21, 0xB43000
	008 Move W8, [X20+138]
	009 Move X21, [X21+1120]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB43000
	016 Move X0, [X0+1120]
	017 Call 0x1C17CF4
	018 Move X0, 0xB86000
	019 Move X0, [X0+1848]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+138], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X31
	030 Call JSONNode.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {46}
	035 Compare X19, 0
	036 JumpIfEqual {69}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+552]
	040 Move X1, [X8+560]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 Move [X31], X31
	047 Move [X31+8], X31
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+968]
	051 Move X1, [X8+976]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0xB86000
	054 Move X8, [X8+1848]
	055 Move X1, X0
	056 Add X0, X31, 0
	057 Move [X31], X31
	058 Move [X31+8], X31
	059 Move X2, [X8]
	060 Call Nullable`1<Int64>..ctor, X0, X1
	061 Move X0, [X31]
	062 Move X1, [X31+8]
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Add X31, X31, 48
	068 Return X0
	069 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(System.Nullable`1<System.Int16> aValue)

Disassembly:
	0x035B281C LDR X8, [X19]
	0x035B2820 TBZ X0, 0x0, 0x35B28F8
	0x035B2824 LDR X9, [X8 + 0x268]
	0x035B2828 LDR X2, [X8 + 0x270]
	0x035B282C ADRP X20, 0xB69000
	0x035B2830 LDR X20, [X20 + 0x780]
	0x035B2834 MOVZ W1, 0x1
	0x035B2838 MOV X0, X19
	0x035B283C BLR X9
	0x035B2840 LDR X8, [X19]
	0x035B2844 LDR X1, [X20]
	0x035B2848 MOV X0, X19
	0x035B284C LDP X9, X2, [X8 + 0x1A8]
	0x035B2850 BLR X9
	0x035B2854 CBZ X0, 0x35B29EC
	0x035B2858 LDR X8, [X0]
	0x035B285C MOV V0.16B, V11.16B
	0x035B2860 LDR X9, [X8 + 0x398]
	0x035B2864 LDR X1, [X8 + 0x3A0]
	0x035B2868 BLR X9
	0x035B286C ADRP X9, 0xB69000
	0x035B2870 LDR X8, [X19]
	0x035B2874 LDR X9, [X9 + 0x788]
	0x035B2878 MOV X0, X19
	0x035B287C LDR X1, [X9]
	0x035B2880 LDP X9, X2, [X8 + 0x1A8]
	0x035B2884 BLR X9
	0x035B2888 CBZ X0, 0x35B29EC
	0x035B288C LDR X8, [X0]
	0x035B2890 MOV V0.16B, V10.16B
	0x035B2894 LDR X9, [X8 + 0x398]
	0x035B2898 LDR X1, [X8 + 0x3A0]
	0x035B289C BLR X9
	0x035B28A0 ADRP X9, 0xB6E000
	0x035B28A4 LDR X8, [X19]
	0x035B28A8 LDR X9, [X9 + 0x3D0]
	0x035B28AC MOV X0, X19
	0x035B28B0 LDR X1, [X9]
	0x035B28B4 LDP X9, X2, [X8 + 0x1A8]
	0x035B28B8 BLR X9
	0x035B28BC CBZ X0, 0x35B29EC
	0x035B28C0 LDR X8, [X0]
	0x035B28C4 MOV V0.16B, V9.16B
	0x035B28C8 LDR X9, [X8 + 0x398]
	0x035B28CC LDR X1, [X8 + 0x3A0]
	0x035B28D0 BLR X9
	0x035B28D4 ADRP X9, 0xB6E000
	0x035B28D8 LDR X8, [X19]
	0x035B28DC LDR X9, [X9 + 0x3D8]
	0x035B28E0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE2F000
	005 Move W8, [X20+139]
	006 Move X19, X0
	007 Move [X31+12], W19
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xB86000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move X0, 0xB6C000
	016 Move X0, [X0+1024]
	017 Call 0x1C17CF4
	018 Move X0, 0xB86000
	019 Move X0, [X0+1856]
	020 Call 0x1C17CF4
	021 Move X0, 0xB86000
	022 Move X0, [X0+1864]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+139], W8
	026 And W31, W19, 255
	027 Move X8, 0xB86000
	028 Move X8, [X8+1864]
	029 Move X19, 0xB6C000
	030 Add X0, X31, 12
	031 Move X1, [X8]
	032 Move X19, [X19+1024]
	033 Call Nullable`1<Int16>.get_Value, X0
	034 Move X8, [X19]
	035 NotImplemented "Instruction SXTH not yet implemented."
	036 Move X0, X8
	037 Call 0x1C17F10
	038 NotImplemented "Instruction SCVTF not yet implemented."
	039 Move X19, X0
	040 Call JSONNumber..ctor, X0, V0
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0
	046 Move X8, 0xB86000
	047 Move X8, [X8+1608]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Call JSONNull.CreateOrGet
	057 Return X0

Method: System.Nullable`1<System.Int16> op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B28E4 LDR X1, [X9]
	0x035B28E8 LDP X9, X2, [X8 + 0x1A8]
	0x035B28EC BLR X9
	0x035B28F0 CBNZ X0, 0x35B29C0
	0x035B28F4 B 0x35B29EC
	0x035B28F8 LDR X9, [X8 + 0x238]
	0x035B28FC LDR X1, [X8 + 0x240]
	0x035B2900 MOV X0, X19
	0x035B2904 BLR X9
	0x035B2908 TBZ X0, 0x0, 0x35B29D4
	0x035B290C LDR X8, [X19]
	0x035B2910 MOVZ W1, 0x1
	0x035B2914 MOV X0, X19
	0x035B2918 LDR X9, [X8 + 0x268]
	0x035B291C LDR X2, [X8 + 0x270]
	0x035B2920 BLR X9
	0x035B2924 LDR X8, [X19]
	0x035B2928 MOV X0, X19
	0x035B292C MOV W1, W31
	0x035B2930 LDP X9, X2, [X8 + 0x188]
	0x035B2934 BLR X9
	0x035B2938 CBZ X0, 0x35B29EC
	0x035B293C LDR X8, [X0]
	0x035B2940 MOV V0.16B, V11.16B
	0x035B2944 LDR X9, [X8 + 0x398]
	0x035B2948 LDR X1, [X8 + 0x3A0]
	0x035B294C BLR X9
	0x035B2950 LDR X8, [X19]
	0x035B2954 MOVZ W1, 0x1
	0x035B2958 MOV X0, X19
	0x035B295C LDP X9, X2, [X8 + 0x188]
	0x035B2960 BLR X9
	0x035B2964 CBZ X0, 0x35B29EC
	0x035B2968 LDR X8, [X0]
	0x035B296C MOV V0.16B, V10.16B
	0x035B2970 LDR X9, [X8 + 0x398]
	0x035B2974 LDR X1, [X8 + 0x3A0]
	0x035B2978 BLR X9
	0x035B297C LDR X8, [X19]
	0x035B2980 MOVZ W1, 0x2
	0x035B2984 MOV X0, X19
	0x035B2988 LDP X9, X2, [X8 + 0x188]
	0x035B298C BLR X9
	0x035B2990 CBZ X0, 0x35B29EC
	0x035B2994 LDR X8, [X0]
	0x035B2998 MOV V0.16B, V9.16B
	0x035B299C LDR X9, [X8 + 0x398]
	0x035B29A0 LDR X1, [X8 + 0x3A0]
	0x035B29A4 BLR X9
	0x035B29A8 LDR X8, [X19]
	0x035B29AC MOVZ W1, 0x3
	0x035B29B0 MOV X0, X19
	0x035B29B4 LDP X9, X2, [X8 + 0x188]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move X21, 0xB43000
	008 Move W8, [X20+140]
	009 Move X21, [X21+1120]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB43000
	016 Move X0, [X0+1120]
	017 Call 0x1C17CF4
	018 Move X0, 0xB86000
	019 Move X0, [X0+1872]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+140], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X31
	030 Call JSONNode.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {46}
	035 Compare X19, 0
	036 JumpIfEqual {67}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+552]
	040 Move X1, [X8+560]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 Move X0, X31
	047 Move [X31+12], W31
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+1240]
	051 Move X1, [X8+1248]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0xB86000
	054 Move X8, [X8+1872]
	055 Move W1, W0
	056 Add X0, X31, 12
	057 Move [X31+12], W31
	058 Move X2, [X8]
	059 Call Nullable`1<Int16>..ctor, X0, X1
	060 Move W0, [X31+12]
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+16]
	064 Move X21, [X31+24]
	065 Add X31, X31, 48
	066 Return X0
	067 Call 0x1C17F20

Method: SimpleJSON.JSONNode GetContainer(SimpleJSON.JSONContainerType aType)

Disassembly:
	0x035B29B8 BLR X9
	0x035B29BC CBZ X0, 0x35B29EC
	0x035B29C0 LDR X8, [X0]
	0x035B29C4 MOV V0.16B, V8.16B
	0x035B29C8 LDR X9, [X8 + 0x398]
	0x035B29CC LDR X1, [X8 + 0x3A0]
	0x035B29D0 BLR X9
	0x035B29D4 MOV X0, X19
	0x035B29D8 LDP X20, X19, [X31 + 0x30]
	0x035B29DC LDR X30, [X31 + 0x20]
	0x035B29E0 LDP D9, D8, [X31 + 0x10]
	0x035B29E4 LDP D11, D10, [X31], #0x40
	0x035B29E8 RET
	0x035B29EC BL 0x1C16F20
	0x035B29F0 STP D11, D10, [X31 - 0x40]!
	0x035B29F4 STP D9, D8, [X31 + 0x10]
	0x035B29F8 STR X30, [X31 + 0x20]
	0x035B29FC STP X20, X19, [X31 + 0x30]
	0x035B2A00 ADRP X20, 0xE2E000
	0x035B2A04 ADRP X19, 0xB42000
	0x035B2A08 LDRB W8, [X20 + 0x94]
	0x035B2A0C LDR X19, [X19 + 0x460]
	0x035B2A10 MOV V8.16B, V3.16B
	0x035B2A14 MOV V9.16B, V2.16B
	0x035B2A18 MOV V10.16B, V1.16B
	0x035B2A1C MOV V11.16B, V0.16B
	0x035B2A20 TBNZ X8, 0x0, 0x35B2A38
	0x035B2A24 ADRP X0, 0xB42000
	0x035B2A28 LDR X0, [X0 + 0x460]
	0x035B2A2C BL 0x1C16CF4
	0x035B2A30 MOVZ W8, 0x1
	0x035B2A34 STRB W8, [X20 + 0x94]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE2F000
	005 Move W8, [X20+141]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB6C000
	012 Move X0, [X0+880]
	013 Call 0x1C17CF4
	014 Move X0, 0xB6A000
	015 Move X0, [X0+3008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+141], W8
	019 Compare W19, 0
	020 JumpIfEqual {27}
	021 Move X8, 0xB6A000
	022 Move X8, [X8+3008]
	023 Move X0, [X8]
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Call JSONObject..ctor, X0
	027 Move X8, 0xB6C000
	028 Move X8, [X8+880]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Call JSONArray..ctor, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: SimpleJSON.JSONNode op_Implicit(UnityEngine.Vector2 aVec)

Disassembly:
	0x035B2A38 LDR X0, [X19]
	0x035B2A3C LDR W8, [X0 + 0xE0]
	0x035B2A40 CBNZ W8, 0x35B2A4C
	0x035B2A44 BL 0x1C16DFC
	0x035B2A48 LDR X0, [X19]
	0x035B2A4C LDR X8, [X0 + 0xB8]
	0x035B2A50 LDR W0, [X8 + 0x10]
	0x035B2A54 BL 0x35B19B8
	0x035B2A58 CBZ X0, 0x35B2A80
	0x035B2A5C MOV V2.16B, V9.16B
	0x035B2A60 MOV V3.16B, V8.16B
	0x035B2A64 LDP X20, X19, [X31 + 0x30]
	0x035B2A68 LDR X30, [X31 + 0x20]
	0x035B2A6C LDP D9, D8, [X31 + 0x10]
	0x035B2A70 MOV V0.16B, V11.16B
	0x035B2A74 MOV V1.16B, V10.16B
	0x035B2A78 LDP D11, D10, [X31], #0x40
	0x035B2A7C B 0x35B2A84
	0x035B2A80 BL 0x1C16F20
	0x035B2A84 STP D11, D10, [X31 - 0x40]!
	0x035B2A88 STP D9, D8, [X31 + 0x10]
	0x035B2A8C STR X30, [X31 + 0x20]
	0x035B2A90 STP X20, X19, [X31 + 0x30]
	0x035B2A94 ADRP X20, 0xE2E000
	0x035B2A98 LDRB W8, [X20 + 0xA1]
	0x035B2A9C MOV V8.16B, V3.16B
	0x035B2AA0 MOV V9.16B, V2.16B
	0x035B2AA4 MOV V10.16B, V1.16B
	0x035B2AA8 MOV V11.16B, V0.16B
	0x035B2AAC MOV X19, X0
	0x035B2AB0 TBNZ X8, 0x0, 0x35B2AEC
	0x035B2AB4 ADRP X0, 0xB69000
	0x035B2AB8 LDR X0, [X0 + 0x780]
	0x035B2ABC BL 0x1C16CF4
	0x035B2AC0 ADRP X0, 0xB6E000
	0x035B2AC4 LDR X0, [X0 + 0x3E8]
	0x035B2AC8 BL 0x1C16CF4
	0x035B2ACC ADRP X0, 0xB69000
	0x035B2AD0 LDR X0, [X0 + 0x788]
	0x035B2AD4 BL 0x1C16CF4
	0x035B2AD8 ADRP X0, 0xB6B000
	0x035B2ADC LDR X0, [X0 + 0xB70]
	0x035B2AE0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2F000
	007 Move X19, 0xB43000
	008 Move W8, [X20+142]
	009 Move X19, [X19+1120]
	010 Move V8, V1
	011 Move V9, V0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xB43000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0xB6A000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6A000
	023 Move X0, [X0+1928]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+142], W8
	027 Move X0, [X19]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X19]
	033 Move X8, [X0+184]
	034 Move W0, [X8+8]
	035 Call JSONNode.GetContainer, X0
	036 Compare X0, 0
	037 JumpIfEqual {51}
	038 Move X8, 0xB6A000
	039 Move X9, 0xB6A000
	040 Move X8, [X8+1920]
	041 Move X9, [X9+1928]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X1, [X8]
	046 Move X2, [X9]
	047 Move V0, V9
	048 Move V1, V8
	049 Move D9, [X31+48]
	050 Move D8, [X31+56]
	051 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(UnityEngine.Vector3 aVec)

Disassembly:
	0x035B2C14 LDP X9, X2, [X8 + 0x188]
	0x035B2C18 BLR X9
	0x035B2C1C CBZ X0, 0x35B2CD0
	0x035B2C20 LDR X8, [X0]
	0x035B2C24 MOV V0.16B, V11.16B
	0x035B2C28 LDR X9, [X8 + 0x398]
	0x035B2C2C LDR X1, [X8 + 0x3A0]
	0x035B2C30 BLR X9
	0x035B2C34 LDR X8, [X19]
	0x035B2C38 MOVZ W1, 0x1
	0x035B2C3C MOV X0, X19
	0x035B2C40 LDP X9, X2, [X8 + 0x188]
	0x035B2C44 BLR X9
	0x035B2C48 CBZ X0, 0x35B2CD0
	0x035B2C4C LDR X8, [X0]
	0x035B2C50 MOV V0.16B, V10.16B
	0x035B2C54 LDR X9, [X8 + 0x398]
	0x035B2C58 LDR X1, [X8 + 0x3A0]
	0x035B2C5C BLR X9
	0x035B2C60 LDR X8, [X19]
	0x035B2C64 MOVZ W1, 0x2
	0x035B2C68 MOV X0, X19
	0x035B2C6C LDP X9, X2, [X8 + 0x188]
	0x035B2C70 BLR X9
	0x035B2C74 CBZ X0, 0x35B2CD0
	0x035B2C78 LDR X8, [X0]
	0x035B2C7C MOV V0.16B, V9.16B
	0x035B2C80 LDR X9, [X8 + 0x398]
	0x035B2C84 LDR X1, [X8 + 0x3A0]
	0x035B2C88 BLR X9
	0x035B2C8C LDR X8, [X19]
	0x035B2C90 MOVZ W1, 0x3
	0x035B2C94 MOV X0, X19
	0x035B2C98 LDP X9, X2, [X8 + 0x188]
	0x035B2C9C BLR X9
	0x035B2CA0 CBZ X0, 0x35B2CD0
	0x035B2CA4 LDR X8, [X0]
	0x035B2CA8 MOV V0.16B, V8.16B
	0x035B2CAC LDR X9, [X8 + 0x398]
	0x035B2CB0 LDR X1, [X8 + 0x3A0]
	0x035B2CB4 BLR X9
	0x035B2CB8 MOV X0, X19
	0x035B2CBC LDP X20, X19, [X31 + 0x30]
	0x035B2CC0 LDR X30, [X31 + 0x20]
	0x035B2CC4 LDP D9, D8, [X31 + 0x10]
	0x035B2CC8 LDP D11, D10, [X31], #0x40
	0x035B2CCC RET
	0x035B2CD0 BL 0x1C16F20
	0x035B2CD4 STP X30, X21, [X31 - 0x20]!
	0x035B2CD8 STP X20, X19, [X31 + 0x10]
	0x035B2CDC ADRP X21, 0xE2E000
	0x035B2CE0 ADRP X20, 0xB42000
	0x035B2CE4 LDRB W8, [X21 + 0x95]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE2F000
	008 Move X19, 0xB43000
	009 Move W8, [X20+143]
	010 Move X19, [X19+1120]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xB43000
	019 Move X0, [X0+1120]
	020 Call 0x1C17CF4
	021 Move X0, 0xB6A000
	022 Move X0, [X0+1920]
	023 Call 0x1C17CF4
	024 Move X0, 0xB6A000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move X0, 0xB6F000
	028 Move X0, [X0+976]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+143], W8
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X19]
	038 Move X8, [X0+184]
	039 Move W0, [X8+8]
	040 Call JSONNode.GetContainer, X0
	041 Compare X0, 0
	042 JumpIfEqual {61}
	043 Move X8, 0xB6A000
	044 Move X9, 0xB6A000
	045 Move X10, 0xB6F000
	046 Move X8, [X8+1920]
	047 Move X9, [X9+1928]
	048 Move X10, [X10+976]
	049 Move V1, V9
	050 Move X1, [X8]
	051 Move X2, [X9]
	052 Move X3, [X10]
	053 Move V2, V8
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+24]
	057 Move D9, [X31+8]
	058 Move D8, [X31+16]
	059 Move V0, V10
	060 Move V10, [X31+48]
	061 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(UnityEngine.Vector4 aVec)

Disassembly:
	0x035B2E88 LDR X8, [X21]
	0x035B2E8C MOV W1, W0
	0x035B2E90 MOV X0, X21
	0x035B2E94 LDR X9, [X8 + 0x378]
	0x035B2E98 LDR X2, [X8 + 0x380]
	0x035B2E9C BLR X9
	0x035B2EA0 ADRP X9, 0xB85000
	0x035B2EA4 LDR X8, [X19]
	0x035B2EA8 LDR X9, [X9 + 0x758]
	0x035B2EAC MOV X0, X19
	0x035B2EB0 LDR X1, [X9]
	0x035B2EB4 LDP X9, X2, [X8 + 0x1A8]
	0x035B2EB8 BLR X9
	0x035B2EBC B 0x35B2FC4
	0x035B2EC0 LDR X9, [X8 + 0x238]
	0x035B2EC4 LDR X1, [X8 + 0x240]
	0x035B2EC8 MOV X0, X19
	0x035B2ECC BLR X9
	0x035B2ED0 TBZ X0, 0x0, 0x35B2FF0
	0x035B2ED4 LDR X8, [X19]
	0x035B2ED8 MOVZ W1, 0x1
	0x035B2EDC MOV X0, X19
	0x035B2EE0 LDR X9, [X8 + 0x268]
	0x035B2EE4 LDR X2, [X8 + 0x270]
	0x035B2EE8 BLR X9
	0x035B2EEC LDR X8, [X19]
	0x035B2EF0 MOV X0, X19
	0x035B2EF4 MOV W1, W31
	0x035B2EF8 LDP X9, X2, [X8 + 0x188]
	0x035B2EFC BLR X9
	0x035B2F00 CBZ X20, 0x35B3000
	0x035B2F04 MOV X21, X0
	0x035B2F08 MOV X0, X20
	0x035B2F0C MOV X1, X31
	0x035B2F10 BL 0x3C0C8A8
	0x035B2F14 CBZ X21, 0x35B3000
	0x035B2F18 LDR X8, [X21]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2F000
	009 Move X19, 0xB43000
	010 Move W8, [X20+144]
	011 Move X19, [X19+1120]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB43000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+144], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move W0, [X8+8]
	033 Call JSONNode.GetContainer, X0
	034 Compare X0, 0
	035 JumpIfEqual {47}
	036 Move V2, V9
	037 Move V3, V8
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X30, [X31+32]
	041 Move D9, [X31+16]
	042 Move D8, [X31+24]
	043 Move V0, V11
	044 Move V1, V10
	045 Move D11, [X31+64]
	046 Move D10, [X31+72]
	047 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(UnityEngine.Color aCol)

Disassembly:
	0x035B316C BL 0x35B3C50
	0x035B3170 AND X0, X0, 0x0
	0x035B3174 LDR X30, [X31], #0x10
	0x035B3178 RET
	0x035B317C BL 0x1C16F20
	0x035B3180 STR X30, [X31 - 0x10]!
	0x035B3184 MOV X1, X31
	0x035B3188 BL 0x35B3C50
	0x035B318C AND X0, X0, 0x0
	0x035B3190 LDR X30, [X31], #0x10
	0x035B3194 RET
	0x035B3198 CBZ X0, 0x35B31A0
	0x035B319C B 0x35B31A8
	0x035B31A0 STR X30, [X31 - 0x10]!
	0x035B31A4 BL 0x1C16F20
	0x035B31A8 STR X30, [X31 - 0x20]!
	0x035B31AC STP X20, X19, [X31 + 0x10]
	0x035B31B0 ADRP X20, 0xE25000
	0x035B31B4 LDRB W8, [X20 + 0x793]
	0x035B31B8 MOV X19, X0
	0x035B31BC CBNZ W8, 0x35B31D4
	0x035B31C0 ADRP X0, 0xB41000
	0x035B31C4 LDR X0, [X0 + 0x5A8]
	0x035B31C8 BL 0x1C16CF4
	0x035B31CC MOVZ W8, 0x1
	0x035B31D0 STRB W8, [X20 + 0x793]
	0x035B31D4 ADRP X8, 0xB41000
	0x035B31D8 LDR X8, [X8 + 0x5A8]
	0x035B31DC MOV X0, X19
	0x035B31E0 LDP X20, X19, [X31 + 0x10]
	0x035B31E4 LDR X8, [X8]
	0x035B31E8 LDR X8, [X8 + 0xB8]
	0x035B31EC LDP S0, S1, [X8]
	0x035B31F0 LDP S2, S3, [X8 + 0x8]
	0x035B31F4 LDR X30, [X31], #0x20
	0x035B31F8 B 0x35B3EF8
	0x035B31FC CBZ X0, 0x35B3214

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2E000
	009 Move X19, 0xB42000
	010 Move W8, [X20+145]
	011 Move X19, [X19+1120]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB42000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+145], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move W0, [X8+20]
	033 Call JSONNode.GetContainer, X0
	034 Compare X0, 0
	035 JumpIfEqual {47}
	036 Move V2, V9
	037 Move V3, V8
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X30, [X31+32]
	041 Move D9, [X31+16]
	042 Move D8, [X31+24]
	043 Move V0, V11
	044 Move V1, V10
	045 Move D11, [X31+64]
	046 Move D10, [X31+72]
	047 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(UnityEngine.Color32 aCol)

Disassembly:
	0x035B3450 LDR X8, [X0]
	0x035B3454 LDR X9, [X8 + 0x388]
	0x035B3458 LDR X1, [X8 + 0x390]
	0x035B345C BLR X9
	0x035B3460 MOV V1.16B, V0.16B
	0x035B3464 B 0x35B349C
	0x035B3468 ADRP X19, 0xE26000
	0x035B346C LDRB W8, [X19 + 0x78F]
	0x035B3470 CBNZ W8, 0x35B3488
	0x035B3474 ADRP X0, 0xB48000
	0x035B3478 LDR X0, [X0 + 0xF08]
	0x035B347C BL 0x1C16CF4
	0x035B3480 MOVZ W8, 0x1
	0x035B3484 STRB W8, [X19 + 0x78F]
	0x035B3488 ADRP X8, 0xB48000
	0x035B348C LDR X8, [X8 + 0xF08]
	0x035B3490 LDR X8, [X8]
	0x035B3494 LDR X8, [X8 + 0xB8]
	0x035B3498 LDP S8, S1, [X8]
	0x035B349C LDP X20, X19, [X31 + 0x20]
	0x035B34A0 LDP X30, X21, [X31 + 0x10]
	0x035B34A4 MOV V0.16B, V8.16B
	0x035B34A8 LDR V8, [X31], #0x30
	0x035B34AC RET
	0x035B34B0 BL 0x1C16F20
	0x035B34B4 STR D10, [X31 - 0x30]!
	0x035B34B8 STP D9, D8, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2E000
	006 Move X20, 0xB42000
	007 Move W8, [X21+146]
	008 Move X20, [X20+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB42000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+146], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W0, [X8+20]
	027 Call JSONNode.GetContainer, X0
	028 Compare X0, 0
	029 JumpIfEqual {35}
	030 And X1, X19, 0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(UnityEngine.Quaternion aRot)

Disassembly:
	0x035B370C LDP X9, X2, [X8 + 0x1A8]
	0x035B3710 BLR X9
	0x035B3714 CBZ X0, 0x35B3784
	0x035B3718 LDR X8, [X0]
	0x035B371C LDR X9, [X8 + 0x388]
	0x035B3720 LDR X1, [X8 + 0x390]
	0x035B3724 BLR X9
	0x035B3728 MOV V2.16B, V0.16B
	0x035B372C B 0x35B3768
	0x035B3730 ADRP X19, 0xE25000
	0x035B3734 LDRB W8, [X19 + 0x783]
	0x035B3738 CBNZ W8, 0x35B3750
	0x035B373C ADRP X0, 0xB40000
	0x035B3740 LDR X0, [X0 + 0x5A0]
	0x035B3744 BL 0x1C16CF4
	0x035B3748 MOVZ W8, 0x1
	0x035B374C STRB W8, [X19 + 0x783]
	0x035B3750 ADRP X8, 0xB40000
	0x035B3754 LDR X8, [X8 + 0x5A0]
	0x035B3758 LDR X8, [X8]
	0x035B375C LDR X8, [X8 + 0xB8]
	0x035B3760 LDP S8, S9, [X8]
	0x035B3764 LDR V2, [X8 + 0x8]
	0x035B3768 LDP X20, X19, [X31 + 0x30]
	0x035B376C LDP X22, X21, [X31 + 0x20]
	0x035B3770 LDR X30, [X31 + 0x10]
	0x035B3774 MOV V0.16B, V8.16B
	0x035B3778 MOV V1.16B, V9.16B
	0x035B377C LDP D9, D8, [X31], #0x40
	0x035B3780 RET
	0x035B3784 BL 0x1C16F20
	0x035B3788 STP D11, D10, [X31 - 0x40]!
	0x035B378C STP D9, D8, [X31 + 0x10]
	0x035B3790 STR X30, [X31 + 0x20]
	0x035B3794 STP X20, X19, [X31 + 0x30]
	0x035B3798 ADRP X20, 0xE2D000
	0x035B379C LDRB W8, [X20 + 0x98]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2E000
	009 Move X19, 0xB42000
	010 Move W8, [X20+147]
	011 Move X19, [X19+1120]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB42000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+147], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move W0, [X8+12]
	033 Call JSONNode.GetContainer, X0
	034 Compare X0, 0
	035 JumpIfEqual {47}
	036 Move V2, V9
	037 Move V3, V8
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X30, [X31+32]
	041 Move D9, [X31+16]
	042 Move D8, [X31+24]
	043 Move V0, V11
	044 Move V1, V10
	045 Move D11, [X31+64]
	046 Move D10, [X31+72]
	047 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(UnityEngine.Rect aRect)

Disassembly:
	0x035B39F0 BL 0x1C16CF4
	0x035B39F4 ADRP X0, 0xB6D000
	0x035B39F8 LDR X0, [X0 + 0x3B0]
	0x035B39FC BL 0x1C16CF4
	0x035B3A00 ADRP X0, 0xB6D000
	0x035B3A04 LDR X0, [X0 + 0x3B8]
	0x035B3A08 BL 0x1C16CF4
	0x035B3A0C ADRP X0, 0xB6D000
	0x035B3A10 LDR X0, [X0 + 0x3C0]
	0x035B3A14 BL 0x1C16CF4
	0x035B3A18 ADRP X0, 0xB6D000
	0x035B3A1C LDR X0, [X0 + 0x3A8]
	0x035B3A20 BL 0x1C16CF4
	0x035B3A24 MOVZ W8, 0x1
	0x035B3A28 STRB W8, [X20 + 0x9A]
	0x035B3A2C LDR X8, [X19]
	0x035B3A30 MOV X0, X19
	0x035B3A34 LDR X9, [X8 + 0x248]
	0x035B3A38 LDR X1, [X8 + 0x250]
	0x035B3A3C BLR X9
	0x035B3A40 TBZ X0, 0x0, 0x35B3B20
	0x035B3A44 ADRP X9, 0xB6D000
	0x035B3A48 LDR X8, [X19]
	0x035B3A4C LDR X9, [X9 + 0x3A8]
	0x035B3A50 MOV X0, X19
	0x035B3A54 LDR X1, [X9]
	0x035B3A58 LDP X9, X2, [X8 + 0x1A8]
	0x035B3A5C BLR X9
	0x035B3A60 CBZ X0, 0x35B3C4C
	0x035B3A64 LDR X8, [X0]
	0x035B3A68 LDR X9, [X8 + 0x388]
	0x035B3A6C LDR X1, [X8 + 0x390]
	0x035B3A70 BLR X9
	0x035B3A74 ADRP X9, 0xB6D000
	0x035B3A78 LDR X8, [X19]
	0x035B3A7C LDR X9, [X9 + 0x3B8]
	0x035B3A80 MOV X0, X19

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2E000
	009 Move X19, 0xB42000
	010 Move W8, [X20+148]
	011 Move X19, [X19+1120]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB42000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+148], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move W0, [X8+16]
	033 Call JSONNode.GetContainer, X0
	034 Compare X0, 0
	035 JumpIfEqual {47}
	036 Move V2, V9
	037 Move V3, V8
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X30, [X31+32]
	041 Move D9, [X31+16]
	042 Move D8, [X31+24]
	043 Move V0, V11
	044 Move V1, V10
	045 Move D11, [X31+64]
	046 Move D10, [X31+72]
	047 Call 0x1C17F20

Method: SimpleJSON.JSONNode op_Implicit(UnityEngine.RectOffset aRect)

Disassembly:
	0x035B3CD4 LDR X9, [X9 + 0x3A8]
	0x035B3CD8 MOV X0, X19
	0x035B3CDC LDR X1, [X9]
	0x035B3CE0 LDP X9, X2, [X8 + 0x1A8]
	0x035B3CE4 BLR X9
	0x035B3CE8 CBZ X0, 0x35B3EF4
	0x035B3CEC LDR X8, [X0]
	0x035B3CF0 LDR X9, [X8 + 0x368]
	0x035B3CF4 LDR X1, [X8 + 0x370]
	0x035B3CF8 BLR X9
	0x035B3CFC ADRP X9, 0xB6D000
	0x035B3D00 LDR X8, [X19]
	0x035B3D04 LDR X9, [X9 + 0x3B8]
	0x035B3D08 MOV W20, W0
	0x035B3D0C MOV X0, X19
	0x035B3D10 LDR X1, [X9]
	0x035B3D14 LDP X9, X2, [X8 + 0x1A8]
	0x035B3D18 BLR X9
	0x035B3D1C CBZ X0, 0x35B3EF4
	0x035B3D20 LDR X8, [X0]
	0x035B3D24 LDR X9, [X8 + 0x368]
	0x035B3D28 LDR X1, [X8 + 0x370]
	0x035B3D2C BLR X9
	0x035B3D30 ADRP X9, 0xB6D000
	0x035B3D34 LDR X8, [X19]
	0x035B3D38 LDR X9, [X9 + 0x3C0]
	0x035B3D3C MOV W21, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2E000
	006 Move X20, 0xB42000
	007 Move W8, [X21+149]
	008 Move X20, [X20+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB42000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+149], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W0, [X8+16]
	027 Call JSONNode.GetContainer, X0
	028 Compare X0, 0
	029 JumpIfEqual {35}
	030 Move X1, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call 0x1C17F20

Method: UnityEngine.Vector2 op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B4004 LDR X9, [X8 + 0x388]
	0x035B4008 LDR X1, [X8 + 0x390]
	0x035B400C BLR X9
	0x035B4010 ADRP X9, 0xB6C000

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {3}
	003 Move [X31-16], X30
	004 Call 0x1C17F20

Method: UnityEngine.Vector3 op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B4064 CBZ X0, 0x35B4124
	0x035B4068 LDR X8, [X0]
	0x035B406C LDR X9, [X8 + 0x388]
	0x035B4070 LDR X1, [X8 + 0x390]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {3}
	003 Move [X31-16], X30
	004 Call 0x1C17F20

Method: UnityEngine.Vector4 op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B40C8 LDR X1, [X8 + 0x390]
	0x035B40CC BLR X9
	0x035B40D0 LDR X8, [X19]
	0x035B40D4 MOVZ W1, 0x3

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {3}
	003 Move [X31-16], X30
	004 Call 0x1C17F20

Method: UnityEngine.Color op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B412C STP D9, D8, [X31 + 0x10]
	0x035B4130 STR X30, [X31 + 0x20]
	0x035B4134 STP X20, X19, [X31 + 0x30]
	0x035B4138 ADRP X20, 0xE2C000
	0x035B413C LDRB W8, [X20 + 0xA0]
	0x035B4140 MOV V11.16B, V3.16B
	0x035B4144 MOV V10.16B, V2.16B
	0x035B4148 MOV V9.16B, V1.16B

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {9}
	003 Move S0, W31
	004 Move S1, W31
	005 Move S2, W31
	006 Move S3, W31
	007 Call JSONNode.ReadColor, X0, X1
	008 Return X0
	009 Move [X31-16], X30
	010 Call 0x1C17F20

Method: UnityEngine.Color32 op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B4160 BL 0x1C16CF4
	0x035B4164 ADRP X0, 0xB6C000
	0x035B4168 LDR X0, [X0 + 0x3E8]
	0x035B416C BL 0x1C16CF4
	0x035B4170 ADRP X0, 0xB67000
	0x035B4174 LDR X0, [X0 + 0x788]
	0x035B4178 BL 0x1C16CF4
	0x035B417C ADRP X0, 0xB69000

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X1, X31
	005 Call JSONNode.ReadColor32, X0, X1
	006 And X0, X0, 0
	007 Move X30, [X31+16]
	008 Return X0
	009 Call 0x1C17F20

Method: UnityEngine.Quaternion op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B4198 LDR X9, [X8 + 0x248]
	0x035B419C LDR X1, [X8 + 0x250]
	0x035B41A0 BLR X9
	0x035B41A4 TBZ X0, 0x0, 0x35B4268

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {3}
	003 Move [X31-16], X30
	004 Call 0x1C17F20

Method: UnityEngine.Rect op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B41FC LDR X8, [X0]
	0x035B4200 LDR X9, [X8 + 0x388]
	0x035B4204 LDR X1, [X8 + 0x390]
	0x035B4208 BLR X9
	0x035B420C ADRP X9, 0xB69000
	0x035B4210 LDR X8, [X19]
	0x035B4214 LDR X9, [X9 + 0xB70]
	0x035B4218 MOV X0, X19

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {9}
	003 Move S0, W31
	004 Move S1, W31
	005 Move S2, W31
	006 Move S3, W31
	007 Call JSONNode.ReadRect, X0, X1
	008 Return X0
	009 Move [X31-16], X30
	010 Call 0x1C17F20

Method: UnityEngine.RectOffset op_Implicit(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B4230 LDR X8, [X0]
	0x035B4234 LDR X9, [X8 + 0x388]
	0x035B4238 LDR X1, [X8 + 0x390]
	0x035B423C BLR X9

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {3}
	003 Move [X31-16], X30
	004 Call 0x1C17F20

Method: UnityEngine.Vector2 ReadVector2(UnityEngine.Vector2 aDefault)

Disassembly:
	0x035B429C LDR X9, [X8 + 0x388]
	0x035B42A0 LDR X1, [X8 + 0x390]
	0x035B42A4 BLR X9
	0x035B42A8 LDR X8, [X19]
	0x035B42AC MOVZ W1, 0x1
	0x035B42B0 MOV X0, X19
	0x035B42B4 MOV V8.16B, V0.16B
	0x035B42B8 LDP X9, X2, [X8 + 0x188]
	0x035B42BC BLR X9
	0x035B42C0 CBZ X0, 0x35B4354
	0x035B42C4 LDR X8, [X0]
	0x035B42C8 LDR X9, [X8 + 0x388]
	0x035B42CC LDR X1, [X8 + 0x390]
	0x035B42D0 BLR X9
	0x035B42D4 LDR X8, [X19]
	0x035B42D8 MOVZ W1, 0x2
	0x035B42DC MOV X0, X19
	0x035B42E0 MOV V9.16B, V0.16B
	0x035B42E4 LDP X9, X2, [X8 + 0x188]
	0x035B42E8 BLR X9
	0x035B42EC CBZ X0, 0x35B4354
	0x035B42F0 LDR X8, [X0]
	0x035B42F4 LDR X9, [X8 + 0x388]
	0x035B42F8 LDR X1, [X8 + 0x390]
	0x035B42FC BLR X9
	0x035B4300 LDR X8, [X19]
	0x035B4304 MOVZ W1, 0x3
	0x035B4308 MOV X0, X19
	0x035B430C MOV V10.16B, V0.16B
	0x035B4310 LDP X9, X2, [X8 + 0x188]
	0x035B4314 BLR X9
	0x035B4318 CBZ X0, 0x35B4354
	0x035B431C LDR X8, [X0]
	0x035B4320 LDR X9, [X8 + 0x388]
	0x035B4324 LDR X1, [X8 + 0x390]
	0x035B4328 BLR X9
	0x035B432C MOV V11.16B, V0.16B
	0x035B4330 MOV V0.16B, V8.16B
	0x035B4334 MOV V1.16B, V9.16B
	0x035B4338 LDP X20, X19, [X31 + 0x30]
	0x035B433C LDR X30, [X31 + 0x20]
	0x035B4340 LDP D9, D8, [X31 + 0x10]
	0x035B4344 MOV V2.16B, V10.16B
	0x035B4348 MOV V3.16B, V11.16B
	0x035B434C LDP D11, D10, [X31], #0x40
	0x035B4350 RET
	0x035B4354 BL 0x1C16F20
	0x035B4358 STP X30, X23, [X31 - 0x30]!
	0x035B435C STP X22, X21, [X31 + 0x10]
	0x035B4360 STP X20, X19, [X31 + 0x20]
	0x035B4364 ADRP X21, 0xE2C000
	0x035B4368 LDRB W8, [X21 + 0xA2]
	0x035B436C MOV X20, X1
	0x035B4370 MOV X19, X0
	0x035B4374 TBNZ X8, 0x0, 0x35B43D4
	0x035B4378 ADRP X0, 0xB69000
	0x035B437C LDR X0, [X0 + 0x370]
	0x035B4380 BL 0x1C16CF4
	0x035B4384 ADRP X0, 0xB67000
	0x035B4388 LDR X0, [X0 + 0xBC0]
	0x035B438C BL 0x1C16CF4
	0x035B4390 ADRP X0, 0xB66000
	0x035B4394 LDR X0, [X0 + 0x4C8]
	0x035B4398 BL 0x1C16CF4
	0x035B439C ADRP X0, 0xB83000
	0x035B43A0 LDR X0, [X0 + 0x758]
	0x035B43A4 BL 0x1C16CF4
	0x035B43A8 ADRP X0, 0xB78000
	0x035B43AC LDR X0, [X0 + 0xB38]
	0x035B43B0 BL 0x1C16CF4
	0x035B43B4 ADRP X0, 0xB78000
	0x035B43B8 LDR X0, [X0 + 0xB48]
	0x035B43BC BL 0x1C16CF4
	0x035B43C0 ADRP X0, 0xB83000
	0x035B43C4 LDR X0, [X0 + 0x760]
	0x035B43C8 BL 0x1C16CF4
	0x035B43CC MOVZ W8, 0x1
	0x035B43D0 STRB W8, [X21 + 0xA2]
	0x035B43D4 CBZ X19, 0x35B4438
	0x035B43D8 ADRP X9, 0xB67000

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE2D000
	007 Move W8, [X20+150]
	008 Move V9, V1
	009 Move V8, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB68000
	016 Move X0, [X0+1920]
	017 Call 0x1C17CF4
	018 Move X0, 0xB68000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+150], W8
	023 Move X8, [X19]
	024 Move X0, X19
	025 Move X9, [X8+584]
	026 Move X1, [X8+592]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {57}
	032 Move X9, 0xB68000
	033 Move X8, [X19]
	034 Move X9, [X9+1920]
	035 Move X0, X19
	036 Move X1, [X9]
	037 Move X9, [X8+424]
	038 Move X2, [X8+432]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X0, 0
	041 JumpIfEqual {100}
	042 Move X8, [X0]
	043 Move X9, [X8+904]
	044 Move X1, [X8+912]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X9, 0xB68000
	047 Move X8, [X19]
	048 Move X9, [X9+1928]
	049 Move X0, X19
	050 Move V8, V0
	051 Move X1, [X9]
	052 Move X9, [X8+424]
	053 Move X2, [X8+432]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfNotEqual {87}
	057 Move X8, [X19]
	058 Move X0, X19
	059 Move X9, [X8+568]
	060 Move X1, [X8+576]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {92}
	066 Move X8, [X19]
	067 Move X0, X19
	068 Move W1, W31
	069 Move X9, [X8+392]
	070 Move X2, [X8+400]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X0, 0
	073 JumpIfEqual {100}
	074 Move X8, [X0]
	075 Move X9, [X8+904]
	076 Move X1, [X8+912]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X19]
	079 Move W1, 1
	080 Move X0, X19
	081 Move V8, V0
	082 Move X9, [X8+392]
	083 Move X2, [X8+400]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X0, 0
	086 JumpIfEqual {100}
	087 Move X8, [X0]
	088 Move X9, [X8+904]
	089 Move X1, [X8+912]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move V9, V0
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X30, [X31+16]
	095 Move V0, V8
	096 Move V1, V9
	097 Move D9, [X31+48]
	098 Move D8, [X31+56]
	099 Return X0
	100 Call 0x1C17F20

Method: UnityEngine.Vector2 ReadVector2(System.String aXName, System.String aYName)

Disassembly:
	0x035B43DC LDR X9, [X9 + 0xBC0]
	0x035B43E0 LDR X8, [X19]
	0x035B43E4 LDR X10, [X9]
	0x035B43E8 LDRB W9, [X8 + 0x130]
	0x035B43EC LDRB W11, [X10 + 0x130]
	0x035B43F0 CMP W9, W11
	0x035B43F4 B.CC 0x35B440C
	0x035B43F8 LDR X12, [X8 + 0xC8]
	0x035B43FC ADD X11, X12, X11, 0x3, LSL
	0x035B4400 LDUR X11, [X11 - 0x8]
	0x035B4404 CMP X11, X10
	0x035B4408 B.EQ 0x35B4440
	0x035B440C ADRP X10, 0xB69000
	0x035B4410 LDR X10, [X10 + 0x370]
	0x035B4414 LDR X10, [X10]
	0x035B4418 LDRB W11, [X10 + 0x130]
	0x035B441C CMP W9, W11
	0x035B4420 B.CC 0x35B4438
	0x035B4424 LDR X9, [X8 + 0xC8]
	0x035B4428 ADD X9, X9, X11, 0x3, LSL
	0x035B442C LDUR X9, [X9 - 0x8]
	0x035B4430 CMP X9, X10
	0x035B4434 B.EQ 0x35B44FC
	0x035B4438 MOV X0, X20
	0x035B443C B 0x35B45DC
	0x035B4440 ADRP X9, 0xB78000
	0x035B4444 LDR X9, [X9 + 0xB38]
	0x035B4448 MOV X0, X19
	0x035B444C LDR X1, [X9]
	0x035B4450 LDP X9, X2, [X8 + 0x1A8]
	0x035B4454 BLR X9
	0x035B4458 CBZ X0, 0x35B45EC
	0x035B445C LDR X8, [X0]
	0x035B4460 LDR X9, [X8 + 0x368]
	0x035B4464 LDR X1, [X8 + 0x370]
	0x035B4468 BLR X9
	0x035B446C ADRP X9, 0xB83000
	0x035B4470 LDR X8, [X19]
	0x035B4474 LDR X9, [X9 + 0x760]
	0x035B4478 MOV W20, W0
	0x035B447C MOV X0, X19
	0x035B4480 LDR X1, [X9]
	0x035B4484 LDP X9, X2, [X8 + 0x1A8]
	0x035B4488 BLR X9
	0x035B448C CBZ X0, 0x35B45EC
	0x035B4490 LDR X8, [X0]
	0x035B4494 LDR X9, [X8 + 0x368]
	0x035B4498 LDR X1, [X8 + 0x370]
	0x035B449C BLR X9
	0x035B44A0 ADRP X9, 0xB78000
	0x035B44A4 LDR X8, [X19]
	0x035B44A8 LDR X9, [X9 + 0xB48]
	0x035B44AC MOV W21, W0
	0x035B44B0 MOV X0, X19

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move X21, X1
	008 Move X19, X2
	009 Move X20, X0
	010 Move X9, [X8+584]
	011 Move X8, [X8+592]
	012 Move X1, X8
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {44}
	018 Move X8, [X20]
	019 Move X0, X20
	020 Move X1, X21
	021 Move X9, [X8+424]
	022 Move X2, [X8+432]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Compare X0, 0
	025 JumpIfEqual {66}
	026 Move X8, [X0]
	027 Move X9, [X8+904]
	028 Move X1, [X8+912]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X20]
	031 Move X0, X20
	032 Move X1, X19
	033 Move V8, V0
	034 Move X9, [X8+424]
	035 Move X2, [X8+432]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {66}
	039 Move X8, [X0]
	040 Move X9, [X8+904]
	041 Move X1, [X8+912]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move V1, V0
	044 Move X19, 0xE26000
	045 Move W8, [X19+1935]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0xB48000
	049 Move X0, [X0+3848]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X19+1935], W8
	053 Move X8, 0xB48000
	054 Move X8, [X8+3848]
	055 Move X8, [X8]
	056 Move X8, [X8+184]
	057 Move S8, [X8]
	058 Move S1, [X8+4]
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Move V0, V8
	064 Move V8, [X31+48]
	065 Return X0
	066 Call 0x1C17F20

Method: UnityEngine.Vector2 ReadVector2()

Disassembly:
	0x035B4014 LDR X8, [X19]
	0x035B4018 LDR X9, [X9 + 0x3D8]
	0x035B401C MOV X0, X19
	0x035B4020 MOV V10.16B, V0.16B
	0x035B4024 LDR X1, [X9]
	0x035B4028 LDP X9, X2, [X8 + 0x1A8]
	0x035B402C BLR X9
	0x035B4030 CBNZ X0, 0x35B40EC
	0x035B4034 B 0x35B4124
	0x035B4038 LDR X8, [X19]
	0x035B403C MOV X0, X19
	0x035B4040 LDR X9, [X8 + 0x238]
	0x035B4044 LDR X1, [X8 + 0x240]
	0x035B4048 BLR X9
	0x035B404C TBZ X0, 0x0, 0x35B4100
	0x035B4050 LDR X8, [X19]
	0x035B4054 MOV X0, X19
	0x035B4058 MOV W1, W31
	0x035B405C LDP X9, X2, [X8 + 0x188]
	0x035B4060 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE26000
	005 Move W8, [X20+1935]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0xB48000
	010 Move X0, [X0+3848]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1935], W8
	014 Move X8, 0xB48000
	015 Move X8, [X8+3848]
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X8, [X8]
	020 Move X8, [X8+184]
	021 Move S0, [X8]
	022 Move S1, [X8+4]
	023 Move X30, [X31+32]
	024 Call JSONNode.ReadVector2, X0, X1
	025 Return X0

Method: SimpleJSON.JSONNode WriteVector2(UnityEngine.Vector2 aVec, System.String aXName = x, System.String aYName = y)

Disassembly:
	0x035B2AE4 MOVZ W8, 0x1
	0x035B2AE8 STRB W8, [X20 + 0xA1]
	0x035B2AEC LDR X8, [X19]
	0x035B2AF0 MOV X0, X19
	0x035B2AF4 LDR X9, [X8 + 0x248]
	0x035B2AF8 LDR X1, [X8 + 0x250]
	0x035B2AFC BLR X9
	0x035B2B00 LDR X8, [X19]
	0x035B2B04 TBZ X0, 0x0, 0x35B2BDC
	0x035B2B08 LDR X9, [X8 + 0x268]
	0x035B2B0C LDR X2, [X8 + 0x270]
	0x035B2B10 ADRP X20, 0xB69000
	0x035B2B14 LDR X20, [X20 + 0x780]
	0x035B2B18 MOVZ W1, 0x1
	0x035B2B1C MOV X0, X19
	0x035B2B20 BLR X9
	0x035B2B24 LDR X8, [X19]
	0x035B2B28 LDR X1, [X20]
	0x035B2B2C MOV X0, X19
	0x035B2B30 LDP X9, X2, [X8 + 0x1A8]
	0x035B2B34 BLR X9
	0x035B2B38 CBZ X0, 0x35B2CD0
	0x035B2B3C LDR X8, [X0]
	0x035B2B40 MOV V0.16B, V11.16B
	0x035B2B44 LDR X9, [X8 + 0x398]
	0x035B2B48 LDR X1, [X8 + 0x3A0]
	0x035B2B4C BLR X9
	0x035B2B50 ADRP X9, 0xB69000
	0x035B2B54 LDR X8, [X19]
	0x035B2B58 LDR X9, [X9 + 0x788]
	0x035B2B5C MOV X0, X19
	0x035B2B60 LDR X1, [X9]
	0x035B2B64 LDP X9, X2, [X8 + 0x1A8]
	0x035B2B68 BLR X9
	0x035B2B6C CBZ X0, 0x35B2CD0
	0x035B2B70 LDR X8, [X0]
	0x035B2B74 MOV V0.16B, V10.16B
	0x035B2B78 LDR X9, [X8 + 0x398]
	0x035B2B7C LDR X1, [X8 + 0x3A0]
	0x035B2B80 BLR X9
	0x035B2B84 ADRP X9, 0xB6B000
	0x035B2B88 LDR X8, [X19]
	0x035B2B8C LDR X9, [X9 + 0xB70]
	0x035B2B90 MOV X0, X19
	0x035B2B94 LDR X1, [X9]
	0x035B2B98 LDP X9, X2, [X8 + 0x1A8]
	0x035B2B9C BLR X9
	0x035B2BA0 CBZ X0, 0x35B2CD0
	0x035B2BA4 LDR X8, [X0]
	0x035B2BA8 MOV V0.16B, V9.16B
	0x035B2BAC LDR X9, [X8 + 0x398]
	0x035B2BB0 LDR X1, [X8 + 0x3A0]
	0x035B2BB4 BLR X9
	0x035B2BB8 ADRP X9, 0xB6E000
	0x035B2BBC LDR X8, [X19]
	0x035B2BC0 LDR X9, [X9 + 0x3E8]
	0x035B2BC4 MOV X0, X19
	0x035B2BC8 LDR X1, [X9]
	0x035B2BCC LDP X9, X2, [X8 + 0x1A8]
	0x035B2BD0 BLR X9
	0x035B2BD4 CBNZ X0, 0x35B2CA4
	0x035B2BD8 B 0x35B2CD0
	0x035B2BDC LDR X9, [X8 + 0x238]
	0x035B2BE0 LDR X1, [X8 + 0x240]
	0x035B2BE4 MOV X0, X19
	0x035B2BE8 BLR X9
	0x035B2BEC TBZ X0, 0x0, 0x35B2CB8
	0x035B2BF0 LDR X8, [X19]
	0x035B2BF4 MOVZ W1, 0x1
	0x035B2BF8 MOV X0, X19
	0x035B2BFC LDR X9, [X8 + 0x268]
	0x035B2C00 LDR X2, [X8 + 0x270]
	0x035B2C04 BLR X9
	0x035B2C08 LDR X8, [X19]
	0x035B2C0C MOV X0, X19
	0x035B2C10 MOV W1, W31

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0]
	008 Move X21, X1
	009 Move X20, X2
	010 Move V8, V1
	011 Move X9, [X8+584]
	012 Move X1, [X8+592]
	013 Move X19, X0
	014 Move V9, V0
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X8, [X19]
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {47}
	021 Move X9, [X8+616]
	022 Move X2, [X8+624]
	023 Move W1, 1
	024 Move X0, X19
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X1, X21
	029 Move X9, [X8+424]
	030 Move X2, [X8+432]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {95}
	034 Move X8, [X0]
	035 Move V0, V9
	036 Move X9, [X8+920]
	037 Move X1, [X8+928]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X1, X20
	042 Move X9, [X8+424]
	043 Move X2, [X8+432]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X0, 0
	046 JumpIfNotEqual {82}
	047 Move X9, [X8+568]
	048 Move X1, [X8+576]
	049 Move X0, X19
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {87}
	055 Move X8, [X19]
	056 Move W1, 1
	057 Move X0, X19
	058 Move X9, [X8+616]
	059 Move X2, [X8+624]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X8, [X19]
	062 Move X0, X19
	063 Move W1, W31
	064 Move X9, [X8+392]
	065 Move X2, [X8+400]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X0, 0
	068 JumpIfEqual {95}
	069 Move X8, [X0]
	070 Move V0, V9
	071 Move X9, [X8+920]
	072 Move X1, [X8+928]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X19]
	075 Move W1, 1
	076 Move X0, X19
	077 Move X9, [X8+392]
	078 Move X2, [X8+400]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {95}
	082 Move X8, [X0]
	083 Move V0, V8
	084 Move X9, [X8+920]
	085 Move X1, [X8+928]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X0, X19
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X30, [X31+16]
	091 Move X21, [X31+24]
	092 Move D9, [X31+48]
	093 Move D8, [X31+56]
	094 Return X0
	095 Call 0x1C17F20

Method: UnityEngine.Vector3 ReadVector3(UnityEngine.Vector3 aDefault)

Disassembly:
	0x035B44B4 LDR X1, [X9]
	0x035B44B8 LDP X9, X2, [X8 + 0x1A8]
	0x035B44BC BLR X9
	0x035B44C0 CBZ X0, 0x35B45EC
	0x035B44C4 LDR X8, [X0]
	0x035B44C8 LDR X9, [X8 + 0x368]
	0x035B44CC LDR X1, [X8 + 0x370]
	0x035B44D0 BLR X9
	0x035B44D4 ADRP X9, 0xB83000
	0x035B44D8 LDR X8, [X19]
	0x035B44DC LDR X9, [X9 + 0x758]
	0x035B44E0 MOV W22, W0
	0x035B44E4 MOV X0, X19
	0x035B44E8 LDR X1, [X9]
	0x035B44EC LDP X9, X2, [X8 + 0x1A8]
	0x035B44F0 BLR X9
	0x035B44F4 CBNZ X0, 0x35B4594
	0x035B44F8 B 0x35B45EC
	0x035B44FC LDP X9, X2, [X8 + 0x188]
	0x035B4500 MOV X0, X19
	0x035B4504 MOV W1, W31
	0x035B4508 BLR X9
	0x035B450C CBZ X0, 0x35B45EC
	0x035B4510 LDR X8, [X0]
	0x035B4514 LDR X9, [X8 + 0x368]
	0x035B4518 LDR X1, [X8 + 0x370]
	0x035B451C BLR X9
	0x035B4520 LDR X8, [X19]
	0x035B4524 MOV W20, W0
	0x035B4528 MOVZ W1, 0x1
	0x035B452C MOV X0, X19
	0x035B4530 LDP X9, X2, [X8 + 0x188]
	0x035B4534 BLR X9
	0x035B4538 CBZ X0, 0x35B45EC
	0x035B453C LDR X8, [X0]
	0x035B4540 LDR X9, [X8 + 0x368]
	0x035B4544 LDR X1, [X8 + 0x370]
	0x035B4548 BLR X9
	0x035B454C LDR X8, [X19]
	0x035B4550 MOV W21, W0
	0x035B4554 MOVZ W1, 0x2
	0x035B4558 MOV X0, X19
	0x035B455C LDP X9, X2, [X8 + 0x188]
	0x035B4560 BLR X9
	0x035B4564 CBZ X0, 0x35B45EC
	0x035B4568 LDR X8, [X0]
	0x035B456C LDR X9, [X8 + 0x368]
	0x035B4570 LDR X1, [X8 + 0x370]
	0x035B4574 BLR X9
	0x035B4578 LDR X8, [X19]
	0x035B457C MOV W22, W0
	0x035B4580 MOVZ W1, 0x3
	0x035B4584 MOV X0, X19
	0x035B4588 LDP X9, X2, [X8 + 0x188]
	0x035B458C BLR X9
	0x035B4590 CBZ X0, 0x35B45EC
	0x035B4594 LDR X8, [X0]
	0x035B4598 LDR X9, [X8 + 0x368]
	0x035B459C LDR X1, [X8 + 0x370]
	0x035B45A0 BLR X9
	0x035B45A4 ADRP X8, 0xB66000
	0x035B45A8 LDR X8, [X8 + 0x4C8]
	0x035B45AC MOV W19, W0
	0x035B45B0 LDR X8, [X8]
	0x035B45B4 MOV X0, X8
	0x035B45B8 BL 0x1C16F10
	0x035B45BC MOV W1, W20
	0x035B45C0 MOV W2, W21
	0x035B45C4 MOV W3, W22
	0x035B45C8 MOV W4, W19
	0x035B45CC MOV X5, X31
	0x035B45D0 MOV X23, X0
	0x035B45D4 BL 0x3C0C3DC
	0x035B45D8 MOV X0, X23
	0x035B45DC LDP X20, X19, [X31 + 0x20]
	0x035B45E0 LDP X22, X21, [X31 + 0x10]
	0x035B45E4 LDP X30, X23, [X31], #0x30
	0x035B45E8 RET
	0x035B45EC BL 0x1C16F20
	0x035B45F0 SUB X31, X31, 0x60
	0x035B45F4 STP X30, X21, [X31 + 0x40]
	0x035B45F8 STP X20, X19, [X31 + 0x50]
	0x035B45FC ADRP X21, 0xE24000
	0x035B4600 LDRB W9, [X21 + 0xAC0]
	0x035B4604 MOV X20, X0
	0x035B4608 MOV X19, X8
	0x035B460C CBNZ W9, 0x35B4624
	0x035B4610 ADRP X0, 0xB43000
	0x035B4614 LDR X0, [X0 + 0x270]
	0x035B4618 BL 0x1C16CF4
	0x035B461C MOVZ W8, 0x1
	0x035B4620 STRB W8, [X21 + 0xAC0]
	0x035B4624 ADRP X8, 0xB43000
	0x035B4628 LDR X8, [X8 + 0x270]
	0x035B462C MOV X0, X20
	0x035B4630 LDR X8, [X8]
	0x035B4634 LDR X8, [X8 + 0xB8]
	0x035B4638 LDP V1, V0, [X8 + 0x60]
	0x035B463C LDP V2, V3, [X8 + 0x40]
	0x035B4640 STP V1, V0, [X31 + 0x20]
	0x035B4644 STP V2, V3, [X31]
	0x035B4648 LDR X8, [X20]
	0x035B464C LDR X9, [X8 + 0x238]
	0x035B4650 LDR X1, [X8 + 0x240]
	0x035B4654 BLR X9
	0x035B4658 TBZ X0, 0x0, 0x35B46A4
	0x035B465C MOV W21, W31
	0x035B4660 LDR X8, [X20]
	0x035B4664 MOV X0, X20
	0x035B4668 MOV W1, W21
	0x035B466C LDP X9, X2, [X8 + 0x188]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE2D000
	008 Move W8, [X20+151]
	009 Move V10, V2
	010 Move V9, V1
	011 Move V8, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xB68000
	018 Move X0, [X0+1920]
	019 Call 0x1C17CF4
	020 Move X0, 0xB68000
	021 Move X0, [X0+1928]
	022 Call 0x1C17CF4
	023 Move X0, 0xB6D000
	024 Move X0, [X0+976]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+151], W8
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+584]
	031 Move X1, [X8+592]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {77}
	037 Move X9, 0xB68000
	038 Move X8, [X19]
	039 Move X9, [X9+1920]
	040 Move X0, X19
	041 Move X1, [X9]
	042 Move X9, [X8+424]
	043 Move X2, [X8+432]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X0, 0
	046 JumpIfEqual {135}
	047 Move X8, [X0]
	048 Move X9, [X8+904]
	049 Move X1, [X8+912]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X9, 0xB68000
	052 Move X8, [X19]
	053 Move X9, [X9+1928]
	054 Move X0, X19
	055 Move V8, V0
	056 Move X1, [X9]
	057 Move X9, [X8+424]
	058 Move X2, [X8+432]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X0, 0
	061 JumpIfEqual {135}
	062 Move X8, [X0]
	063 Move X9, [X8+904]
	064 Move X1, [X8+912]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X9, 0xB6D000
	067 Move X8, [X19]
	068 Move X9, [X9+976]
	069 Move X0, X19
	070 Move V9, V0
	071 Move X1, [X9]
	072 Move X9, [X8+424]
	073 Move X2, [X8+432]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X0, 0
	076 JumpIfNotEqual {120}
	077 Move X8, [X19]
	078 Move X0, X19
	079 Move X9, [X8+568]
	080 Move X1, [X8+576]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {125}
	086 Move X8, [X19]
	087 Move X0, X19
	088 Move W1, W31
	089 Move X9, [X8+392]
	090 Move X2, [X8+400]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X0, 0
	093 JumpIfEqual {135}
	094 Move X8, [X0]
	095 Move X9, [X8+904]
	096 Move X1, [X8+912]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X19]
	099 Move W1, 1
	100 Move X0, X19
	101 Move V8, V0
	102 Move X9, [X8+392]
	103 Move X2, [X8+400]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Compare X0, 0
	106 JumpIfEqual {135}
	107 Move X8, [X0]
	108 Move X9, [X8+904]
	109 Move X1, [X8+912]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X8, [X19]
	112 Move W1, 2
	113 Move X0, X19
	114 Move V9, V0
	115 Move X9, [X8+392]
	116 Move X2, [X8+400]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X0, 0
	119 JumpIfEqual {135}
	120 Move X8, [X0]
	121 Move X9, [X8+904]
	122 Move X1, [X8+912]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move V10, V0
	125 Move V0, V8
	126 Move V1, V9
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X30, [X31+24]
	130 Move D9, [X31+8]
	131 Move D8, [X31+16]
	132 Move V2, V10
	133 Move V10, [X31+48]
	134 Return X0
	135 Call 0x1C17F20

Method: UnityEngine.Vector3 ReadVector3(System.String aXName, System.String aYName, System.String aZName)

Disassembly:
	0x035B4670 BLR X9
	0x035B4674 CBZ X0, 0x35B46C4
	0x035B4678 LDR X8, [X0]
	0x035B467C LDR X9, [X8 + 0x388]
	0x035B4680 LDR X1, [X8 + 0x390]
	0x035B4684 BLR X9
	0x035B4688 ADD X0, X31, 0x0
	0x035B468C MOV W1, W21
	0x035B4690 MOV X2, X31
	0x035B4694 BL 0x3C2798C
	0x035B4698 ADD W21, W21, 0x1
	0x035B469C CMP W21, 0x10
	0x035B46A0 B.NE 0x35B4660
	0x035B46A4 LDP V1, V0, [X31 + 0x20]
	0x035B46A8 LDP V3, V2, [X31]
	0x035B46AC LDP X30, X21, [X31 + 0x40]
	0x035B46B0 STP V1, V0, [X19 + 0x20]
	0x035B46B4 STP V3, V2, [X19]
	0x035B46B8 LDP X20, X19, [X31 + 0x50]
	0x035B46BC ADD X31, X31, 0x60
	0x035B46C0 RET
	0x035B46C4 BL 0x1C16F20
	0x035B46C8 STR X30, [X31 - 0x30]!
	0x035B46CC STP X22, X21, [X31 + 0x10]
	0x035B46D0 STP X20, X19, [X31 + 0x20]
	0x035B46D4 LDR X8, [X0]
	0x035B46D8 MOV X20, X1
	0x035B46DC MOV X19, X0
	0x035B46E0 LDR X9, [X8 + 0x238]
	0x035B46E4 LDR X8, [X8 + 0x240]
	0x035B46E8 MOV X1, X8
	0x035B46EC BLR X9
	0x035B46F0 TBZ X0, 0x0, 0x35B475C
	0x035B46F4 LDR X8, [X19]
	0x035B46F8 MOVZ W1, 0x1
	0x035B46FC MOV X0, X19
	0x035B4700 LDR X9, [X8 + 0x268]
	0x035B4704 LDR X2, [X8 + 0x270]
	0x035B4708 BLR X9
	0x035B470C MOV W21, W31
	0x035B4710 LDR X8, [X19]
	0x035B4714 MOV X0, X19
	0x035B4718 MOV W1, W21
	0x035B471C LDP X9, X2, [X8 + 0x188]
	0x035B4720 BLR X9
	0x035B4724 MOV X22, X0
	0x035B4728 MOV X0, X20
	0x035B472C MOV W1, W21
	0x035B4730 MOV X2, X31
	0x035B4734 BL 0x3C27894
	0x035B4738 CBZ X22, 0x35B4770
	0x035B473C LDR X8, [X22]
	0x035B4740 MOV X0, X22
	0x035B4744 LDR X9, [X8 + 0x398]
	0x035B4748 LDR X1, [X8 + 0x3A0]
	0x035B474C BLR X9
	0x035B4750 ADD W21, W21, 0x1
	0x035B4754 CMP W21, 0x10
	0x035B4758 B.NE 0x35B4710
	0x035B475C MOV X0, X19
	0x035B4760 LDP X20, X19, [X31 + 0x20]
	0x035B4764 LDP X22, X21, [X31 + 0x10]
	0x035B4768 LDR X30, [X31], #0x30
	0x035B476C RET
	0x035B4770 BL 0x1C16F20
	0x035B4774 MOV X1, X31
	0x035B4778 B 0x33BDD8C
	0x035B477C STR X30, [X31 - 0x20]!
	0x035B4780 STP X20, X19, [X31 + 0x10]
	0x035B4784 ADRP X19, 0xE2C000

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0]
	009 Move X22, X1
	010 Move X19, X3
	011 Move X21, X2
	012 Move X9, [X8+584]
	013 Move X8, [X8+592]
	014 Move X20, X0
	015 Move X1, X8
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {60}
	021 Move X8, [X20]
	022 Move X0, X20
	023 Move X1, X22
	024 Move X9, [X8+424]
	025 Move X2, [X8+432]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X0, 0
	028 JumpIfEqual {86}
	029 Move X8, [X0]
	030 Move X9, [X8+904]
	031 Move X1, [X8+912]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X20]
	034 Move X0, X20
	035 Move X1, X21
	036 Move V8, V0
	037 Move X9, [X8+424]
	038 Move X2, [X8+432]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X0, 0
	041 JumpIfEqual {86}
	042 Move X8, [X0]
	043 Move X9, [X8+904]
	044 Move X1, [X8+912]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X20]
	047 Move X0, X20
	048 Move X1, X19
	049 Move V9, V0
	050 Move X9, [X8+424]
	051 Move X2, [X8+432]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Compare X0, 0
	054 JumpIfEqual {86}
	055 Move X8, [X0]
	056 Move X9, [X8+904]
	057 Move X1, [X8+912]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move V2, V0
	060 Move X19, 0xE25000
	061 Move W8, [X19+1923]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0xB40000
	065 Move X0, [X0+1440]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X19+1923], W8
	069 Move X8, 0xB40000
	070 Move X8, [X8+1440]
	071 Move X8, [X8]
	072 Move X8, [X8+184]
	073 Move S8, [X8]
	074 Move S9, [X8+4]
	075 Move V2, [X8+8]
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Move V0, V8
	082 Move V1, V9
	083 Move D9, [X31+64]
	084 Move D8, [X31+72]
	085 Return X0
	086 Call 0x1C17F20

Method: UnityEngine.Vector3 ReadVector3()

Disassembly:
	0x035B4074 BLR X9
	0x035B4078 LDR X8, [X19]
	0x035B407C MOVZ W1, 0x1
	0x035B4080 MOV X0, X19
	0x035B4084 MOV V8.16B, V0.16B
	0x035B4088 LDP X9, X2, [X8 + 0x188]
	0x035B408C BLR X9
	0x035B4090 CBZ X0, 0x35B4124
	0x035B4094 LDR X8, [X0]
	0x035B4098 LDR X9, [X8 + 0x388]
	0x035B409C LDR X1, [X8 + 0x390]
	0x035B40A0 BLR X9
	0x035B40A4 LDR X8, [X19]
	0x035B40A8 MOVZ W1, 0x2
	0x035B40AC MOV X0, X19
	0x035B40B0 MOV V9.16B, V0.16B
	0x035B40B4 LDP X9, X2, [X8 + 0x188]
	0x035B40B8 BLR X9
	0x035B40BC CBZ X0, 0x35B4124
	0x035B40C0 LDR X8, [X0]
	0x035B40C4 LDR X9, [X8 + 0x388]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE25000
	005 Move W8, [X20+1923]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0xB40000
	010 Move X0, [X0+1440]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1923], W8
	014 Move X8, 0xB40000
	015 Move X8, [X8+1440]
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X8, [X8]
	020 Move X8, [X8+184]
	021 Move S0, [X8]
	022 Move S1, [X8+4]
	023 Move V2, [X8+8]
	024 Move X30, [X31+32]
	025 Call JSONNode.ReadVector3, X0, X1
	026 Return X0

Method: SimpleJSON.JSONNode WriteVector3(UnityEngine.Vector3 aVec, System.String aXName = x, System.String aYName = y, System.String aZName = z)

Disassembly:
	0x035B2CE8 LDR X20, [X20 + 0x460]
	0x035B2CEC MOV X19, X0
	0x035B2CF0 TBNZ X8, 0x0, 0x35B2D08
	0x035B2CF4 ADRP X0, 0xB42000
	0x035B2CF8 LDR X0, [X0 + 0x460]
	0x035B2CFC BL 0x1C16CF4
	0x035B2D00 MOVZ W8, 0x1
	0x035B2D04 STRB W8, [X21 + 0x95]
	0x035B2D08 LDR X0, [X20]
	0x035B2D0C LDR W8, [X0 + 0xE0]
	0x035B2D10 CBNZ W8, 0x35B2D1C
	0x035B2D14 BL 0x1C16DFC
	0x035B2D18 LDR X0, [X20]
	0x035B2D1C LDR X8, [X0 + 0xB8]
	0x035B2D20 LDR W0, [X8 + 0x10]
	0x035B2D24 BL 0x35B19B8
	0x035B2D28 CBZ X0, 0x35B2D3C
	0x035B2D2C MOV X1, X19
	0x035B2D30 LDP X20, X19, [X31 + 0x10]
	0x035B2D34 LDP X30, X21, [X31], #0x20
	0x035B2D38 B 0x35B2D40
	0x035B2D3C BL 0x1C16F20
	0x035B2D40 STP X30, X21, [X31 - 0x20]!
	0x035B2D44 STP X20, X19, [X31 + 0x10]
	0x035B2D48 ADRP X21, 0xE2E000
	0x035B2D4C LDRB W8, [X21 + 0xA4]
	0x035B2D50 MOV X20, X1
	0x035B2D54 MOV X19, X0
	0x035B2D58 TBNZ X8, 0x0, 0x35B2D94
	0x035B2D5C ADRP X0, 0xB85000
	0x035B2D60 LDR X0, [X0 + 0x758]
	0x035B2D64 BL 0x1C16CF4
	0x035B2D68 ADRP X0, 0xB7A000
	0x035B2D6C LDR X0, [X0 + 0xB38]
	0x035B2D70 BL 0x1C16CF4
	0x035B2D74 ADRP X0, 0xB7A000
	0x035B2D78 LDR X0, [X0 + 0xB48]
	0x035B2D7C BL 0x1C16CF4
	0x035B2D80 ADRP X0, 0xB85000
	0x035B2D84 LDR X0, [X0 + 0x760]
	0x035B2D88 BL 0x1C16CF4
	0x035B2D8C MOVZ W8, 0x1
	0x035B2D90 STRB W8, [X21 + 0xA4]
	0x035B2D94 LDR X8, [X19]
	0x035B2D98 MOV X0, X19
	0x035B2D9C LDR X9, [X8 + 0x248]
	0x035B2DA0 LDR X1, [X8 + 0x250]
	0x035B2DA4 BLR X9
	0x035B2DA8 LDR X8, [X19]
	0x035B2DAC TBZ X0, 0x0, 0x35B2EC0
	0x035B2DB0 LDR X9, [X8 + 0x268]
	0x035B2DB4 LDR X2, [X8 + 0x270]
	0x035B2DB8 ADRP X21, 0xB7A000
	0x035B2DBC LDR X21, [X21 + 0xB38]
	0x035B2DC0 MOVZ W1, 0x1
	0x035B2DC4 MOV X0, X19
	0x035B2DC8 BLR X9
	0x035B2DCC LDR X8, [X19]
	0x035B2DD0 LDR X1, [X21]
	0x035B2DD4 MOV X0, X19
	0x035B2DD8 LDP X9, X2, [X8 + 0x1A8]
	0x035B2DDC BLR X9
	0x035B2DE0 CBZ X20, 0x35B3000
	0x035B2DE4 MOV X21, X0
	0x035B2DE8 MOV X0, X20
	0x035B2DEC MOV X1, X31
	0x035B2DF0 BL 0x3C0C8A8
	0x035B2DF4 CBZ X21, 0x35B3000
	0x035B2DF8 LDR X8, [X21]
	0x035B2DFC MOV W1, W0
	0x035B2E00 MOV X0, X21
	0x035B2E04 LDR X9, [X8 + 0x378]
	0x035B2E08 LDR X2, [X8 + 0x380]
	0x035B2E0C BLR X9
	0x035B2E10 ADRP X9, 0xB85000
	0x035B2E14 LDR X8, [X19]
	0x035B2E18 LDR X9, [X9 + 0x760]
	0x035B2E1C MOV X0, X19
	0x035B2E20 LDR X1, [X9]
	0x035B2E24 LDP X9, X2, [X8 + 0x1A8]
	0x035B2E28 BLR X9
	0x035B2E2C MOV X21, X0
	0x035B2E30 MOV X0, X20
	0x035B2E34 MOV X1, X31
	0x035B2E38 BL 0x3C0C8E4
	0x035B2E3C CBZ X21, 0x35B3000
	0x035B2E40 LDR X8, [X21]
	0x035B2E44 MOV W1, W0
	0x035B2E48 MOV X0, X21
	0x035B2E4C LDR X9, [X8 + 0x378]
	0x035B2E50 LDR X2, [X8 + 0x380]
	0x035B2E54 BLR X9
	0x035B2E58 ADRP X9, 0xB7A000
	0x035B2E5C LDR X8, [X19]
	0x035B2E60 LDR X9, [X9 + 0xB48]
	0x035B2E64 MOV X0, X19
	0x035B2E68 LDR X1, [X9]
	0x035B2E6C LDP X9, X2, [X8 + 0x1A8]
	0x035B2E70 BLR X9
	0x035B2E74 MOV X21, X0
	0x035B2E78 MOV X0, X20
	0x035B2E7C MOV X1, X31
	0x035B2E80 BL 0x3C0C920
	0x035B2E84 CBZ X21, 0x35B3000

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0]
	010 Move X22, X1
	011 Move X20, X3
	012 Move X21, X2
	013 Move X9, [X8+584]
	014 Move X1, [X8+592]
	015 Move V8, V2
	016 Move V9, V1
	017 Move X19, X0
	018 Move V10, V0
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X8, [X19]
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {64}
	025 Move X9, [X8+616]
	026 Move X2, [X8+624]
	027 Move W1, 1
	028 Move X0, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X1, X22
	033 Move X9, [X8+424]
	034 Move X2, [X8+432]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {127}
	038 Move X8, [X0]
	039 Move V0, V10
	040 Move X9, [X8+920]
	041 Move X1, [X8+928]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, [X19]
	044 Move X0, X19
	045 Move X1, X21
	046 Move X9, [X8+424]
	047 Move X2, [X8+432]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X0, 0
	050 JumpIfEqual {127}
	051 Move X8, [X0]
	052 Move V0, V9
	053 Move X9, [X8+920]
	054 Move X1, [X8+928]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X1, X20
	059 Move X9, [X8+424]
	060 Move X2, [X8+432]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Compare X0, 0
	063 JumpIfNotEqual {112}
	064 Move X9, [X8+568]
	065 Move X1, [X8+576]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {117}
	072 Move X8, [X19]
	073 Move W1, 1
	074 Move X0, X19
	075 Move X9, [X8+616]
	076 Move X2, [X8+624]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X19]
	079 Move X0, X19
	080 Move W1, W31
	081 Move X9, [X8+392]
	082 Move X2, [X8+400]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Compare X0, 0
	085 JumpIfEqual {127}
	086 Move X8, [X0]
	087 Move V0, V10
	088 Move X9, [X8+920]
	089 Move X1, [X8+928]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X19]
	092 Move W1, 1
	093 Move X0, X19
	094 Move X9, [X8+392]
	095 Move X2, [X8+400]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare X0, 0
	098 JumpIfEqual {127}
	099 Move X8, [X0]
	100 Move V0, V9
	101 Move X9, [X8+920]
	102 Move X1, [X8+928]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, [X19]
	105 Move W1, 2
	106 Move X0, X19
	107 Move X9, [X8+392]
	108 Move X2, [X8+400]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {127}
	112 Move X8, [X0]
	113 Move V0, V8
	114 Move X9, [X8+920]
	115 Move X1, [X8+928]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X0, X19
	118 Move X20, [X31+48]
	119 Move X19, [X31+56]
	120 Move X22, [X31+32]
	121 Move X21, [X31+40]
	122 Move X30, [X31+24]
	123 Move D9, [X31+8]
	124 Move D8, [X31+16]
	125 Move V10, [X31+64]
	126 Return X0
	127 Call 0x1C17F20

Method: UnityEngine.Vector4 ReadVector4(UnityEngine.Vector4 aDefault)

Disassembly:
	0x035B4788 ADRP X20, 0xB40000
	0x035B478C LDRB W8, [X19 + 0xA5]
	0x035B4790 LDR X20, [X20 + 0x460]
	0x035B4794 TBNZ X8, 0x0, 0x35B47AC
	0x035B4798 ADRP X0, 0xB40000
	0x035B479C LDR X0, [X0 + 0x460]
	0x035B47A0 BL 0x1C16CF4
	0x035B47A4 MOVZ W8, 0x1
	0x035B47A8 STRB W8, [X19 + 0xA5]
	0x035B47AC LDR X8, [X20]
	0x035B47B0 LDP X20, X19, [X31 + 0x10]
	0x035B47B4 MOVZ X9, 0xFF010000
	0x035B47B8 MOVK X9, 0x3F800000
	0x035B47BC LDR X8, [X8 + 0xB8]
	0x035B47C0 STP X31, X31, [X8 + 0x8]
	0x035B47C4 STR X9, [X8]
	0x035B47C8 LDR X30, [X31], #0x20
	0x035B47CC RET
	0x035B47D0 LDR W8, [X0]
	0x035B47D4 CMP W8, 0x0
	0x035B47D8 CSET W0, NE
	0x035B47DC RET
	0x035B47E0 MOVZ W8, 0x1
	0x035B47E4 MOVI V0.2D, 0x0
	0x035B47E8 STR X31, [X0 + 0x28]
	0x035B47EC STR W8, [X0]
	0x035B47F0 STUR V0, [X0 + 0x8]
	0x035B47F4 STUR V0, [X0 + 0x18]
	0x035B47F8 LDR X8, [X1 + 0x10]
	0x035B47FC LDR V0, [X1]
	0x035B4800 STR X8, [X0 + 0x40]
	0x035B4804 STR V0, [X0 + 0x3]
	0x035B4808 RET
	0x035B480C MOVZ W8, 0x2
	0x035B4810 STR W8, [X0]
	0x035B4814 LDP V1, V0, [X1]
	0x035B4818 LDR X8, [X1 + 0x20]
	0x035B481C STP X31, X31, [X0 + 0x38]
	0x035B4820 STUR V0, [X0 + 0x18]
	0x035B4824 STUR V1, [X0 + 0x8]
	0x035B4828 STP X8, X31, [X0 + 0x28]
	0x035B482C RET
	0x035B4830 SUB X31, X31, 0x30
	0x035B4834 STR X30, [X31 + 0x10]
	0x035B4838 STP X20, X19, [X31 + 0x20]
	0x035B483C ADRP X20, 0xE2C000
	0x035B4840 LDRB W8, [X20 + 0xA6]
	0x035B4844 MOV X19, X0
	0x035B4848 TBNZ X8, 0x0, 0x35B4884
	0x035B484C ADRP X0, 0xB83000
	0x035B4850 LDR X0, [X0 + 0x768]
	0x035B4854 BL 0x1C16CF4
	0x035B4858 ADRP X0, 0xB83000
	0x035B485C LDR X0, [X0 + 0x770]
	0x035B4860 BL 0x1C16CF4
	0x035B4864 ADRP X0, 0xB83000
	0x035B4868 LDR X0, [X0 + 0x778]
	0x035B486C BL 0x1C16CF4
	0x035B4870 ADRP X0, 0xB41000
	0x035B4874 LDR X0, [X0 + 0x278]
	0x035B4878 BL 0x1C16CF4
	0x035B487C MOVZ W8, 0x1
	0x035B4880 STRB W8, [X20 + 0xA6]
	0x035B4884 LDR W8, [X19]
	0x035B4888 CMP W8, 0x2
	0x035B488C B.EQ 0x35B48B0
	0x035B4890 CMP W8, 0x1
	0x035B4894 B.NE 0x35B48BC
	0x035B4898 ADRP X8, 0xB41000
	0x035B489C LDR X8, [X8 + 0x278]
	0x035B48A0 ADRP X9, 0xB83000
	0x035B48A4 LDR X2, [X19 + 0x40]
	0x035B48A8 ADD X0, X31, 0x0
	0x035B48AC B 0x35B48D0
	0x035B48B0 LDUR V0, [X19 + 0x18]
	0x035B48B4 STR V0, [X31]
	0x035B48B8 B 0x35B48EC
	0x035B48BC ADRP X8, 0xB41000
	0x035B48C0 LDR X8, [X8 + 0x278]
	0x035B48C4 ADRP X9, 0xB83000
	0x035B48C8 ADD X0, X31, 0x0
	0x035B48CC MOV X2, X31
	0x035B48D0 LDR X8, [X8]
	0x035B48D4 LDR X8, [X8 + 0xB8]
	0x035B48D8 LDR X9, [X9 + 0x778]
	0x035B48DC LDR X1, [X8]
	0x035B48E0 LDR X3, [X9]
	0x035B48E4 STP X31, X31, [X31]
	0x035B48E8 BL 0x2EE2840
	0x035B48EC LDP X0, X1, [X31]
	0x035B48F0 LDP X20, X19, [X31 + 0x20]
	0x035B48F4 LDR X30, [X31 + 0x10]
	0x035B48F8 ADD X31, X31, 0x30
	0x035B48FC RET
	0x035B4900 STR X30, [X31 - 0x20]!
	0x035B4904 STP X20, X19, [X31 + 0x10]
	0x035B4908 ADRP X20, 0xE2C000
	0x035B490C LDRB W8, [X20 + 0xA7]
	0x035B4910 MOV X19, X0
	0x035B4914 TBNZ X8, 0x0, 0x35B4938
	0x035B4918 ADRP X0, 0xB83000
	0x035B491C LDR X0, [X0 + 0x780]
	0x035B4920 BL 0x1C16CF4
	0x035B4924 ADRP X0, 0xB83000
	0x035B4928 LDR X0, [X0 + 0x788]
	0x035B492C BL 0x1C16CF4
	0x035B4930 MOVZ W8, 0x1
	0x035B4934 STRB W8, [X20 + 0xA7]
	0x035B4938 LDR W8, [X19]
	0x035B493C CMP W8, 0x2
	0x035B4940 B.EQ 0x35B4968
	0x035B4944 CMP W8, 0x1
	0x035B4948 B.NE 0x35B4984
	0x035B494C ADRP X8, 0xB83000
	0x035B4950 LDR X8, [X8 + 0x788]
	0x035B4954 ADD X0, X19, 0x30
	0x035B4958 LDP X20, X19, [X31 + 0x10]
	0x035B495C LDR X1, [X8]
	0x035B4960 LDR X30, [X31], #0x20
	0x035B4964 B 0x2BC4350
	0x035B4968 ADRP X8, 0xB83000
	0x035B496C LDR X8, [X8 + 0x780]
	0x035B4970 ADD X0, X19, 0x8
	0x035B4974 LDP X20, X19, [X31 + 0x10]
	0x035B4978 LDR X1, [X8]
	0x035B497C LDR X30, [X31], #0x20
	0x035B4980 B 0x2C0A728
	0x035B4984 LDP X20, X19, [X31 + 0x10]
	0x035B4988 MOV W0, W31
	0x035B498C LDR X30, [X31], #0x20
	0x035B4990 RET
	0x035B4994 SUB X31, X31, 0x20
	0x035B4998 LDR X8, [X1 + 0x10]
	0x035B499C LDR V0, [X1]
	0x035B49A0 MOVI V1.2D, 0x0
	0x035B49A4 STR X8, [X31 + 0x10]
	0x035B49A8 MOVZ W8, 0x1
	0x035B49AC STR V0, [X31]
	0x035B49B0 STR W8, [X0]
	0x035B49B4 STUR V1, [X0 + 0x4]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2D000
	009 Move W8, [X20+152]
	010 Move V11, V3
	011 Move V10, V2
	012 Move V9, V1
	013 Move V8, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xB68000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0xB68000
	023 Move X0, [X0+1928]
	024 Call 0x1C17CF4
	025 Move X0, 0xB6D000
	026 Move X0, [X0+976]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6D000
	029 Move X0, [X0+984]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+152], W8
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+584]
	036 Move X1, [X8+592]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {97}
	042 Move X9, 0xB68000
	043 Move X8, [X19]
	044 Move X9, [X9+1920]
	045 Move X0, X19
	046 Move X1, [X9]
	047 Move X9, [X8+424]
	048 Move X2, [X8+432]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {170}
	052 Move X8, [X0]
	053 Move X9, [X8+904]
	054 Move X1, [X8+912]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X9, 0xB68000
	057 Move X8, [X19]
	058 Move X9, [X9+1928]
	059 Move X0, X19
	060 Move V8, V0
	061 Move X1, [X9]
	062 Move X9, [X8+424]
	063 Move X2, [X8+432]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Compare X0, 0
	066 JumpIfEqual {170}
	067 Move X8, [X0]
	068 Move X9, [X8+904]
	069 Move X1, [X8+912]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X9, 0xB6D000
	072 Move X8, [X19]
	073 Move X9, [X9+976]
	074 Move X0, X19
	075 Move V9, V0
	076 Move X1, [X9]
	077 Move X9, [X8+424]
	078 Move X2, [X8+432]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {170}
	082 Move X8, [X0]
	083 Move X9, [X8+904]
	084 Move X1, [X8+912]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X9, 0xB6D000
	087 Move X8, [X19]
	088 Move X9, [X9+984]
	089 Move X0, X19
	090 Move V10, V0
	091 Move X1, [X9]
	092 Move X9, [X8+424]
	093 Move X2, [X8+432]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X0, 0
	096 JumpIfNotEqual {153}
	097 Move X8, [X19]
	098 Move X0, X19
	099 Move X9, [X8+568]
	100 Move X1, [X8+576]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {158}
	106 Move X8, [X19]
	107 Move X0, X19
	108 Move W1, W31
	109 Move X9, [X8+392]
	110 Move X2, [X8+400]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {170}
	114 Move X8, [X0]
	115 Move X9, [X8+904]
	116 Move X1, [X8+912]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, [X19]
	119 Move W1, 1
	120 Move X0, X19
	121 Move V8, V0
	122 Move X9, [X8+392]
	123 Move X2, [X8+400]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {170}
	127 Move X8, [X0]
	128 Move X9, [X8+904]
	129 Move X1, [X8+912]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, [X19]
	132 Move W1, 2
	133 Move X0, X19
	134 Move V9, V0
	135 Move X9, [X8+392]
	136 Move X2, [X8+400]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Compare X0, 0
	139 JumpIfEqual {170}
	140 Move X8, [X0]
	141 Move X9, [X8+904]
	142 Move X1, [X8+912]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, [X19]
	145 Move W1, 3
	146 Move X0, X19
	147 Move V10, V0
	148 Move X9, [X8+392]
	149 Move X2, [X8+400]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Compare X0, 0
	152 JumpIfEqual {170}
	153 Move X8, [X0]
	154 Move X9, [X8+904]
	155 Move X1, [X8+912]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move V11, V0
	158 Move V0, V8
	159 Move V1, V9
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X30, [X31+32]
	163 Move D9, [X31+16]
	164 Move D8, [X31+24]
	165 Move V2, V10
	166 Move V3, V11
	167 Move D11, [X31+64]
	168 Move D10, [X31+72]
	169 Return X0
	170 Call 0x1C17F20

Method: UnityEngine.Vector4 ReadVector4()

Disassembly:
	0x035B40D8 MOV X0, X19
	0x035B40DC MOV V10.16B, V0.16B
	0x035B40E0 LDP X9, X2, [X8 + 0x188]
	0x035B40E4 BLR X9
	0x035B40E8 CBZ X0, 0x35B4124
	0x035B40EC LDR X8, [X0]
	0x035B40F0 LDR X9, [X8 + 0x388]
	0x035B40F4 LDR X1, [X8 + 0x390]
	0x035B40F8 BLR X9
	0x035B40FC MOV V11.16B, V0.16B
	0x035B4100 MOV V0.16B, V8.16B
	0x035B4104 MOV V1.16B, V9.16B
	0x035B4108 LDP X20, X19, [X31 + 0x30]
	0x035B410C LDR X30, [X31 + 0x20]
	0x035B4110 LDP D9, D8, [X31 + 0x10]
	0x035B4114 MOV V2.16B, V10.16B
	0x035B4118 MOV V3.16B, V11.16B
	0x035B411C LDP D11, D10, [X31], #0x40
	0x035B4120 RET
	0x035B4124 BL 0x1C16F20
	0x035B4128 STP D11, D10, [X31 - 0x40]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE25000
	005 Move W8, [X20+3674]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0xB47000
	010 Move X0, [X0+2464]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+3674], W8
	014 Move X8, 0xB47000
	015 Move X8, [X8+2464]
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X8, [X8]
	020 Move X8, [X8+184]
	021 Move S0, [X8]
	022 Move S1, [X8+4]
	023 Move S2, [X8+8]
	024 Move S3, [X8+12]
	025 Move X30, [X31+32]
	026 Call JSONNode.ReadVector4, X0, X1
	027 Return X0

Method: SimpleJSON.JSONNode WriteVector4(UnityEngine.Vector4 aVec)

Disassembly:
	0x035B2F1C MOV W1, W0
	0x035B2F20 MOV X0, X21
	0x035B2F24 LDR X9, [X8 + 0x378]
	0x035B2F28 LDR X2, [X8 + 0x380]
	0x035B2F2C BLR X9
	0x035B2F30 LDR X8, [X19]
	0x035B2F34 MOVZ W1, 0x1
	0x035B2F38 MOV X0, X19
	0x035B2F3C LDP X9, X2, [X8 + 0x188]
	0x035B2F40 BLR X9
	0x035B2F44 MOV X21, X0
	0x035B2F48 MOV X0, X20
	0x035B2F4C MOV X1, X31
	0x035B2F50 BL 0x3C0C8E4
	0x035B2F54 CBZ X21, 0x35B3000
	0x035B2F58 LDR X8, [X21]
	0x035B2F5C MOV W1, W0
	0x035B2F60 MOV X0, X21
	0x035B2F64 LDR X9, [X8 + 0x378]
	0x035B2F68 LDR X2, [X8 + 0x380]
	0x035B2F6C BLR X9
	0x035B2F70 LDR X8, [X19]
	0x035B2F74 MOVZ W1, 0x2
	0x035B2F78 MOV X0, X19
	0x035B2F7C LDP X9, X2, [X8 + 0x188]
	0x035B2F80 BLR X9
	0x035B2F84 MOV X21, X0
	0x035B2F88 MOV X0, X20
	0x035B2F8C MOV X1, X31
	0x035B2F90 BL 0x3C0C920
	0x035B2F94 CBZ X21, 0x35B3000
	0x035B2F98 LDR X8, [X21]
	0x035B2F9C MOV W1, W0
	0x035B2FA0 MOV X0, X21
	0x035B2FA4 LDR X9, [X8 + 0x378]
	0x035B2FA8 LDR X2, [X8 + 0x380]
	0x035B2FAC BLR X9
	0x035B2FB0 LDR X8, [X19]
	0x035B2FB4 MOVZ W1, 0x3
	0x035B2FB8 MOV X0, X19
	0x035B2FBC LDP X9, X2, [X8 + 0x188]
	0x035B2FC0 BLR X9
	0x035B2FC4 MOV X21, X0
	0x035B2FC8 MOV X0, X20
	0x035B2FCC MOV X1, X31
	0x035B2FD0 BL 0x3C0C95C
	0x035B2FD4 CBZ X21, 0x35B3000
	0x035B2FD8 LDR X8, [X21]
	0x035B2FDC MOV W1, W0
	0x035B2FE0 MOV X0, X21
	0x035B2FE4 LDR X9, [X8 + 0x378]
	0x035B2FE8 LDR X2, [X8 + 0x380]
	0x035B2FEC BLR X9
	0x035B2FF0 MOV X0, X19
	0x035B2FF4 LDP X20, X19, [X31 + 0x10]
	0x035B2FF8 LDP X30, X21, [X31], #0x20
	0x035B2FFC RET
	0x035B3000 BL 0x1C16F20
	0x035B3004 CBZ X0, 0x35B300C
	0x035B3008 B 0x35B3014
	0x035B300C STR X30, [X31 - 0x10]!
	0x035B3010 BL 0x1C16F20
	0x035B3014 STR X30, [X31 - 0x20]!
	0x035B3018 STP X20, X19, [X31 + 0x10]
	0x035B301C ADRP X20, 0xE26000
	0x035B3020 LDRB W8, [X20 + 0x78F]
	0x035B3024 MOV X19, X0
	0x035B3028 CBNZ W8, 0x35B3040
	0x035B302C ADRP X0, 0xB48000
	0x035B3030 LDR X0, [X0 + 0xF08]
	0x035B3034 BL 0x1C16CF4
	0x035B3038 MOVZ W8, 0x1
	0x035B303C STRB W8, [X20 + 0x78F]
	0x035B3040 ADRP X8, 0xB48000
	0x035B3044 LDR X8, [X8 + 0xF08]
	0x035B3048 MOV X0, X19
	0x035B304C LDP X20, X19, [X31 + 0x10]
	0x035B3050 LDR X8, [X8]
	0x035B3054 LDR X8, [X8 + 0xB8]
	0x035B3058 LDP S0, S1, [X8]
	0x035B305C LDR X30, [X31], #0x20
	0x035B3060 B 0x35B329C
	0x035B3064 CBZ X0, 0x35B306C
	0x035B3068 B 0x35B3074
	0x035B306C STR X30, [X31 - 0x10]!
	0x035B3070 BL 0x1C16F20
	0x035B3074 STR X30, [X31 - 0x20]!
	0x035B3078 STP X20, X19, [X31 + 0x10]
	0x035B307C ADRP X20, 0xE25000
	0x035B3080 LDRB W8, [X20 + 0x783]
	0x035B3084 MOV X19, X0
	0x035B3088 CBNZ W8, 0x35B30A0
	0x035B308C ADRP X0, 0xB40000
	0x035B3090 LDR X0, [X0 + 0x5A0]
	0x035B3094 BL 0x1C16CF4
	0x035B3098 MOVZ W8, 0x1
	0x035B309C STRB W8, [X20 + 0x783]
	0x035B30A0 ADRP X8, 0xB40000
	0x035B30A4 LDR X8, [X8 + 0x5A0]
	0x035B30A8 MOV X0, X19
	0x035B30AC LDP X20, X19, [X31 + 0x10]
	0x035B30B0 LDR X8, [X8]
	0x035B30B4 LDR X8, [X8 + 0xB8]
	0x035B30B8 LDP S0, S1, [X8]
	0x035B30BC LDR V2, [X8 + 0x8]
	0x035B30C0 LDR X30, [X31], #0x20
	0x035B30C4 B 0x35B34B4
	0x035B30C8 CBZ X0, 0x35B30D0
	0x035B30CC B 0x35B30D8
	0x035B30D0 STR X30, [X31 - 0x10]!
	0x035B30D4 BL 0x1C16F20
	0x035B30D8 STR X30, [X31 - 0x20]!
	0x035B30DC STP X20, X19, [X31 + 0x10]
	0x035B30E0 ADRP X20, 0xE25000
	0x035B30E4 LDRB W8, [X20 + 0xE5A]
	0x035B30E8 MOV X19, X0
	0x035B30EC CBNZ W8, 0x35B3104
	0x035B30F0 ADRP X0, 0xB47000
	0x035B30F4 LDR X0, [X0 + 0x9A0]
	0x035B30F8 BL 0x1C16CF4
	0x035B30FC MOVZ W8, 0x1
	0x035B3100 STRB W8, [X20 + 0xE5A]
	0x035B3104 ADRP X8, 0xB47000
	0x035B3108 LDR X8, [X8 + 0x9A0]
	0x035B310C MOV X0, X19
	0x035B3110 LDP X20, X19, [X31 + 0x10]
	0x035B3114 LDR X8, [X8]
	0x035B3118 LDR X8, [X8 + 0xB8]
	0x035B311C LDP S0, S1, [X8]
	0x035B3120 LDP S2, S3, [X8 + 0x8]
	0x035B3124 LDR X30, [X31], #0x20
	0x035B3128 B 0x35B3788
	0x035B312C CBZ X0, 0x35B3144
	0x035B3130 FMOV S0, W31
	0x035B3134 FMOV S1, W31
	0x035B3138 FMOV S2, W31
	0x035B313C FMOV S3, W31
	0x035B3140 B 0x35B39B8
	0x035B3144 STR X30, [X31 - 0x10]!
	0x035B3148 BL 0x1C16F20
	0x035B314C FMOV S0, W31
	0x035B3150 FMOV S1, W31
	0x035B3154 FMOV S2, W31
	0x035B3158 FMOV S3, W31
	0x035B315C B 0x35B39B8
	0x035B3160 STR X30, [X31 - 0x10]!
	0x035B3164 CBZ X0, 0x35B317C
	0x035B3168 MOV X1, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2F000
	009 Move W8, [X20+153]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xB6A000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6A000
	023 Move X0, [X0+1928]
	024 Call 0x1C17CF4
	025 Move X0, 0xB6F000
	026 Move X0, [X0+976]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6F000
	029 Move X0, [X0+984]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+153], W8
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+584]
	036 Move X1, [X8+592]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X19]
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {103}
	043 Move X9, [X8+616]
	044 Move X2, [X8+624]
	045 Move X20, 0xB6A000
	046 Move X20, [X20+1920]
	047 Move W1, 1
	048 Move X0, X19
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X19]
	051 Move X1, [X20]
	052 Move X0, X19
	053 Move X9, [X8+424]
	054 Move X2, [X8+432]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Compare X0, 0
	057 JumpIfEqual {178}
	058 Move X8, [X0]
	059 Move V0, V11
	060 Move X9, [X8+920]
	061 Move X1, [X8+928]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X9, 0xB6A000
	064 Move X8, [X19]
	065 Move X9, [X9+1928]
	066 Move X0, X19
	067 Move X1, [X9]
	068 Move X9, [X8+424]
	069 Move X2, [X8+432]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X0, 0
	072 JumpIfEqual {178}
	073 Move X8, [X0]
	074 Move V0, V10
	075 Move X9, [X8+920]
	076 Move X1, [X8+928]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X9, 0xB6E000
	079 Move X8, [X19]
	080 Move X9, [X9+976]
	081 Move X0, X19
	082 Move X1, [X9]
	083 Move X9, [X8+424]
	084 Move X2, [X8+432]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Compare X0, 0
	087 JumpIfEqual {178}
	088 Move X8, [X0]
	089 Move V0, V9
	090 Move X9, [X8+920]
	091 Move X1, [X8+928]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X9, 0xB6E000
	094 Move X8, [X19]
	095 Move X9, [X9+984]
	096 Move X0, X19
	097 Move X1, [X9]
	098 Move X9, [X8+424]
	099 Move X2, [X8+432]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfNotEqual {164}
	103 Move X9, [X8+568]
	104 Move X1, [X8+576]
	105 Move X0, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {169}
	111 Move X8, [X19]
	112 Move W1, 1
	113 Move X0, X19
	114 Move X9, [X8+616]
	115 Move X2, [X8+624]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, [X19]
	118 Move X0, X19
	119 Move W1, W31
	120 Move X9, [X8+392]
	121 Move X2, [X8+400]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X0, 0
	124 JumpIfEqual {178}
	125 Move X8, [X0]
	126 Move V0, V11
	127 Move X9, [X8+920]
	128 Move X1, [X8+928]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X19]
	131 Move W1, 1
	132 Move X0, X19
	133 Move X9, [X8+392]
	134 Move X2, [X8+400]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X0, 0
	137 JumpIfEqual {178}
	138 Move X8, [X0]
	139 Move V0, V10
	140 Move X9, [X8+920]
	141 Move X1, [X8+928]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X8, [X19]
	144 Move W1, 2
	145 Move X0, X19
	146 Move X9, [X8+392]
	147 Move X2, [X8+400]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X0, 0
	150 JumpIfEqual {178}
	151 Move X8, [X0]
	152 Move V0, V9
	153 Move X9, [X8+920]
	154 Move X1, [X8+928]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, [X19]
	157 Move W1, 3
	158 Move X0, X19
	159 Move X9, [X8+392]
	160 Move X2, [X8+400]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Compare X0, 0
	163 JumpIfEqual {178}
	164 Move X8, [X0]
	165 Move V0, V8
	166 Move X9, [X8+920]
	167 Move X1, [X8+928]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X0, X19
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X30, [X31+32]
	173 Move D9, [X31+16]
	174 Move D8, [X31+24]
	175 Move D11, [X31+64]
	176 Move D10, [X31+72]
	177 Return X0
	178 Call 0x1C17F20

Method: UnityEngine.Color ReadColor(UnityEngine.Color aDefault)

Disassembly:
	0x035B49B8 STUR V1, [X0 + 0x14]
	0x035B49BC LDR X8, [X31 + 0x10]
	0x035B49C0 LDR V0, [X31]
	0x035B49C4 STR X8, [X0 + 0x40]
	0x035B49C8 STP V1, V0, [X0 + 0x20]
	0x035B49CC ADD X31, X31, 0x20
	0x035B49D0 RET
	0x035B49D4 SUB X31, X31, 0x50
	0x035B49D8 STR X30, [X31 + 0x40]
	0x035B49DC MRS X8, 0xC000
	0x035B49E0 LDR X9, [X8 + 0x28]
	0x035B49E4 MOVZ W10, 0x2
	0x035B49E8 STR X9, [X31 + 0x38]
	0x035B49EC STR W31, [X31 + 0xC]
	0x035B49F0 LDR X9, [X1 + 0x20]
	0x035B49F4 LDP V1, V0, [X1]
	0x035B49F8 STUR X9, [X31 + 0x30]
	0x035B49FC STP V1, V0, [X31 + 0x10]
	0x035B4A00 STR W10, [X0]
	0x035B4A04 LDUR V0, [X31 + 0xC]
	0x035B4A08 LDUR V1, [X31 + 0x1C]
	0x035B4A0C LDUR V2, [X31 + 0x28]
	0x035B4A10 STP X31, X31, [X0 + 0x38]
	0x035B4A14 STR X31, [X0 + 0x30]
	0x035B4A18 STUR V0, [X0 + 0x4]
	0x035B4A1C STR V2, [X0 + 0x2]
	0x035B4A20 STUR V1, [X0 + 0x14]
	0x035B4A24 LDR X8, [X8 + 0x28]
	0x035B4A28 LDR X9, [X31 + 0x38]
	0x035B4A2C CMP X8, X9
	0x035B4A30 B.NE 0x35B4A40
	0x035B4A34 LDR X30, [X31 + 0x40]
	0x035B4A38 ADD X31, X31, 0x50
	0x035B4A3C RET
	0x035B4A40 BL 0x3EB1B20
	0x035B4A44 STR X30, [X31 - 0x10]!
	0x035B4A48 MOVZ W2, 0x48
	0x035B4A4C BL 0x3EB1B30
	0x035B4A50 LDR X30, [X31], #0x10
	0x035B4A54 RET
	0x035B4A58 STR X30, [X31 - 0x20]!
	0x035B4A5C STP X20, X19, [X31 + 0x10]
	0x035B4A60 ADRP X20, 0xE2C000
	0x035B4A64 LDRB W8, [X20 + 0xA8]
	0x035B4A68 MOV X19, X0
	0x035B4A6C TBNZ X8, 0x0, 0x35B4A84
	0x035B4A70 ADRP X0, 0xB69000
	0x035B4A74 LDR X0, [X0 + 0x348]
	0x035B4A78 BL 0x1C16CF4
	0x035B4A7C MOVZ W8, 0x1
	0x035B4A80 STRB W8, [X20 + 0xA8]
	0x035B4A84 MOV X0, X19
	0x035B4A88 BL 0x35B4830
	0x035B4A8C LDP X20, X19, [X31 + 0x10]
	0x035B4A90 MOV X0, X1
	0x035B4A94 LDR X30, [X31], #0x20
	0x035B4A98 RET
	0x035B4A9C B 0x35B4900
	0x035B4AA0 MOV X1, X0
	0x035B4AA4 MOVZ W2, 0x48
	0x035B4AA8 MOV X0, X8
	0x035B4AAC B 0x3EB1AC0
	0x035B4AB0 SUB X31, X31, 0x20
	0x035B4AB4 LDR X8, [X1 + 0x10]
	0x035B4AB8 LDR V0, [X1]
	0x035B4ABC MOVI V1.2D, 0x0
	0x035B4AC0 STR X8, [X31 + 0x10]
	0x035B4AC4 MOVZ W8, 0x1
	0x035B4AC8 STR V0, [X31]
	0x035B4ACC STR W8, [X0]
	0x035B4AD0 STUR V1, [X0 + 0x4]
	0x035B4AD4 STUR V1, [X0 + 0x14]
	0x035B4AD8 LDR X8, [X31 + 0x10]
	0x035B4ADC LDR V0, [X31]
	0x035B4AE0 STR X8, [X0 + 0x40]
	0x035B4AE4 STP V1, V0, [X0 + 0x20]
	0x035B4AE8 ADD X31, X31, 0x20
	0x035B4AEC RET
	0x035B4AF0 SUB X31, X31, 0x50
	0x035B4AF4 STR X30, [X31 + 0x40]
	0x035B4AF8 MRS X8, 0xC000
	0x035B4AFC LDR X9, [X8 + 0x28]
	0x035B4B00 MOVZ W10, 0x2
	0x035B4B04 STR X9, [X31 + 0x38]
	0x035B4B08 STR W31, [X31 + 0xC]
	0x035B4B0C LDR X9, [X1 + 0x20]
	0x035B4B10 LDP V1, V0, [X1]
	0x035B4B14 STUR X9, [X31 + 0x30]
	0x035B4B18 STP V1, V0, [X31 + 0x10]
	0x035B4B1C STR W10, [X0]
	0x035B4B20 LDUR V0, [X31 + 0xC]
	0x035B4B24 LDUR V1, [X31 + 0x1C]
	0x035B4B28 LDUR V2, [X31 + 0x28]
	0x035B4B2C STP X31, X31, [X0 + 0x38]
	0x035B4B30 STR X31, [X0 + 0x30]
	0x035B4B34 STUR V0, [X0 + 0x4]
	0x035B4B38 STR V2, [X0 + 0x2]
	0x035B4B3C STUR V1, [X0 + 0x14]
	0x035B4B40 LDR X8, [X8 + 0x28]
	0x035B4B44 LDR X9, [X31 + 0x38]
	0x035B4B48 CMP X8, X9
	0x035B4B4C B.NE 0x35B4B5C
	0x035B4B50 LDR X30, [X31 + 0x40]
	0x035B4B54 ADD X31, X31, 0x50
	0x035B4B58 RET
	0x035B4B5C BL 0x3EB1B20
	0x035B4B60 STR X30, [X31 - 0x10]!
	0x035B4B64 MOVZ W2, 0x48
	0x035B4B68 BL 0x3EB1B30
	0x035B4B6C LDR X30, [X31], #0x10
	0x035B4B70 RET
	0x035B4B74 STR X30, [X31 - 0x20]!
	0x035B4B78 STP X20, X19, [X31 + 0x10]
	0x035B4B7C ADRP X20, 0xE2C000
	0x035B4B80 LDRB W8, [X20 + 0xA9]
	0x035B4B84 MOV X19, X0
	0x035B4B88 TBNZ X8, 0x0, 0x35B4BA0
	0x035B4B8C ADRP X0, 0xB69000
	0x035B4B90 LDR X0, [X0 + 0x340]
	0x035B4B94 BL 0x1C16CF4
	0x035B4B98 MOVZ W8, 0x1
	0x035B4B9C STRB W8, [X20 + 0xA9]
	0x035B4BA0 MOV X0, X19
	0x035B4BA4 LDP X20, X19, [X31 + 0x10]
	0x035B4BA8 LDR X30, [X31], #0x20
	0x035B4BAC B 0x35B4830
	0x035B4BB0 B 0x35B4900
	0x035B4BB4 MOV X1, X0
	0x035B4BB8 MOVZ W2, 0x48
	0x035B4BBC MOV X0, X8
	0x035B4BC0 B 0x3EB1AC0
	0x035B4BC4 ADD X0, X0, 0x18
	0x035B4BC8 B 0x35B4830
	0x035B4BCC SUB X31, X31, 0x30
	0x035B4BD0 STP X30, X21, [X31 + 0x10]
	0x035B4BD4 STP X20, X19, [X31 + 0x20]
	0x035B4BD8 ADRP X21, 0xE2C000
	0x035B4BDC ADRP X20, 0xB83000
	0x035B4BE0 LDRB W8, [X21 + 0xAB]
	0x035B4BE4 LDR X20, [X20 + 0x790]
	0x035B4BE8 MOV X19, X0
	0x035B4BEC TBNZ X8, 0x0, 0x35B4C04
	0x035B4BF0 ADRP X0, 0xB83000
	0x035B4BF4 LDR X0, [X0 + 0x790]
	0x035B4BF8 BL 0x1C16CF4
	0x035B4BFC MOVZ W8, 0x1
	0x035B4C00 STRB W8, [X21 + 0xAB]
	0x035B4C04 ADD X0, X19, 0x18
	0x035B4C08 BL 0x35B4830
	0x035B4C0C LDR X8, [X20]
	0x035B4C10 STP X0, X1, [X31]
	0x035B4C14 ADD X1, X31, 0x0
	0x035B4C18 MOV X0, X8
	0x035B4C1C BL 0x1C16E04
	0x035B4C20 LDP X20, X19, [X31 + 0x20]
	0x035B4C24 LDP X30, X21, [X31 + 0x10]
	0x035B4C28 ADD X31, X31, 0x30
	0x035B4C2C RET
	0x035B4C30 ADD X0, X0, 0x18
	0x035B4C34 B 0x35B4900
	0x035B4C38 MOVI V0.2D, 0x0
	0x035B4C3C STP V0, V0, [X0 + 0x40]
	0x035B4C40 STP V0, V0, [X0 + 0x20]
	0x035B4C44 STR V0, [X0 + 0x1]
	0x035B4C48 RET
	0x035B4C4C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2D000
	009 Move W8, [X20+154]
	010 Move V11, V3
	011 Move V10, V2
	012 Move V9, V1
	013 Move V8, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xB41000
	020 Move X0, [X0+1120]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6D000
	023 Move X0, [X0+944]
	024 Call 0x1C17CF4
	025 Move X0, 0xB6D000
	026 Move X0, [X0+952]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6D000
	029 Move X0, [X0+960]
	030 Call 0x1C17CF4
	031 Move X0, 0xB6D000
	032 Move X0, [X0+936]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+154], W8
	036 Move X8, [X19]
	037 Move X0, X19
	038 Move X9, [X8+584]
	039 Move X1, [X8+592]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {110}
	045 Move X9, 0xB6D000
	046 Move X8, [X19]
	047 Move X9, [X9+936]
	048 Move X0, X19
	049 Move X1, [X9]
	050 Move X9, [X8+424]
	051 Move X2, [X8+432]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Compare X0, 0
	054 JumpIfEqual {199}
	055 Move X8, [X0]
	056 Move X9, [X8+904]
	057 Move X1, [X8+912]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X9, 0xB6D000
	060 Move X8, [X19]
	061 Move X9, [X9+952]
	062 Move X0, X19
	063 Move V8, V0
	064 Move X1, [X9]
	065 Move X9, [X8+424]
	066 Move X2, [X8+432]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X0, 0
	069 JumpIfEqual {199}
	070 Move X8, [X0]
	071 Move X9, [X8+904]
	072 Move X1, [X8+912]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X9, 0xB6D000
	075 Move X8, [X19]
	076 Move X9, [X9+960]
	077 Move X0, X19
	078 Move V9, V0
	079 Move X1, [X9]
	080 Move X9, [X8+424]
	081 Move X2, [X8+432]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X0, 0
	084 JumpIfEqual {199}
	085 Move X8, [X0]
	086 Move X9, [X8+904]
	087 Move X1, [X8+912]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X20, 0xB6D000
	090 Move X8, [X19]
	091 Move X20, [X20+944]
	092 Move X0, X19
	093 Move V10, V0
	094 Move X9, [X8+760]
	095 Move X1, [X20]
	096 Move X2, [X8+768]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {177}
	102 Move X8, [X19]
	103 Move X1, [X20]
	104 Move X0, X19
	105 Move X9, [X8+424]
	106 Move X2, [X8+432]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Compare X0, 0
	109 JumpIfNotEqual {172}
	110 Move X8, [X19]
	111 Move X0, X19
	112 Move X9, [X8+568]
	113 Move X1, [X8+576]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {187}
	119 Move X8, [X19]
	120 Move X0, X19
	121 Move W1, W31
	122 Move X9, [X8+392]
	123 Move X2, [X8+400]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {199}
	127 Move X8, [X0]
	128 Move X9, [X8+904]
	129 Move X1, [X8+912]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, [X19]
	132 Move W1, 1
	133 Move X0, X19
	134 Move V8, V0
	135 Move X9, [X8+392]
	136 Move X2, [X8+400]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Compare X0, 0
	139 JumpIfEqual {199}
	140 Move X8, [X0]
	141 Move X9, [X8+904]
	142 Move X1, [X8+912]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, [X19]
	145 Move W1, 2
	146 Move X0, X19
	147 Move V9, V0
	148 Move X9, [X8+392]
	149 Move X2, [X8+400]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Compare X0, 0
	152 JumpIfEqual {199}
	153 Move X8, [X0]
	154 Move X9, [X8+904]
	155 Move X1, [X8+912]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X8, [X19]
	158 Move X0, X19
	159 Move V10, V0
	160 Move X9, [X8+488]
	161 Move X1, [X8+496]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X8, [X19]
	165 Move W1, 3
	166 Move X0, X19
	167 Move X9, [X8+392]
	168 Move X2, [X8+400]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare X0, 0
	171 JumpIfEqual {199}
	172 Move X8, [X0]
	173 Move X9, [X8+904]
	174 Move X1, [X8+912]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move V11, V0
	177 Move X19, 0xB41000
	178 Move X19, [X19+1120]
	179 Move X0, [X19]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {185}
	183 Call 0x1C17DFC
	184 Move X0, [X19]
	185 Move X8, [X0+184]
	186 Move V11, [X8+4]
	187 Move V0, V8
	188 Move V1, V9
	189 Move X20, [X31+48]
	190 Move X19, [X31+56]
	191 Move X30, [X31+32]
	192 Move D9, [X31+16]
	193 Move D8, [X31+24]
	194 Move V2, V10
	195 Move V3, V11
	196 Move D11, [X31+64]
	197 Move D10, [X31+72]
	198 Return X0
	199 Call 0x1C17F20

Method: UnityEngine.Color ReadColor()

Disassembly:
	0x035B414C MOV V8.16B, V0.16B
	0x035B4150 MOV X19, X0
	0x035B4154 TBNZ X8, 0x0, 0x35B4190
	0x035B4158 ADRP X0, 0xB67000
	0x035B415C LDR X0, [X0 + 0x780]

ISIL:
	001 Move S0, W31
	002 Move S1, W31
	003 Move S2, W31
	004 Move S3, W31
	005 Call JSONNode.ReadColor, X0, X1
	006 Return X0

Method: SimpleJSON.JSONNode WriteColor(UnityEngine.Color aCol)

Disassembly:
	0x035B3200 FMOV S0, W31
	0x035B3204 FMOV S1, W31
	0x035B3208 FMOV S2, W31
	0x035B320C FMOV S3, W31
	0x035B3210 B 0x35B4128
	0x035B3214 STR X30, [X31 - 0x10]!
	0x035B3218 BL 0x1C16F20
	0x035B321C FMOV S0, W31
	0x035B3220 FMOV S1, W31
	0x035B3224 FMOV S2, W31
	0x035B3228 FMOV S3, W31
	0x035B322C B 0x35B4128
	0x035B3230 CBZ X0, 0x35B3238
	0x035B3234 B 0x35B3240
	0x035B3238 STR X30, [X31 - 0x10]!
	0x035B323C BL 0x1C16F20
	0x035B3240 STP X30, X21, [X31 - 0x20]!
	0x035B3244 STP X20, X19, [X31 + 0x10]
	0x035B3248 ADRP X20, 0xE2D000
	0x035B324C ADRP X21, 0xB67000
	0x035B3250 LDRB W8, [X20 + 0xA3]
	0x035B3254 LDR X21, [X21 + 0x4C8]
	0x035B3258 MOV X19, X0
	0x035B325C TBNZ X8, 0x0, 0x35B3274
	0x035B3260 ADRP X0, 0xB67000
	0x035B3264 LDR X0, [X0 + 0x4C8]
	0x035B3268 BL 0x1C16CF4
	0x035B326C MOVZ W8, 0x1
	0x035B3270 STRB W8, [X20 + 0xA3]
	0x035B3274 LDR X0, [X21]
	0x035B3278 BL 0x1C16F10
	0x035B327C MOV X1, X31
	0x035B3280 MOV X20, X0
	0x035B3284 BL 0x3C0C244
	0x035B3288 MOV X0, X19
	0x035B328C MOV X1, X20
	0x035B3290 LDP X20, X19, [X31 + 0x10]
	0x035B3294 LDP X30, X21, [X31], #0x20
	0x035B3298 B 0x35B4358
	0x035B329C STP D9, D8, [X31 - 0x30]!
	0x035B32A0 STR X30, [X31 + 0x10]
	0x035B32A4 STP X20, X19, [X31 + 0x20]
	0x035B32A8 ADRP X20, 0xE2D000
	0x035B32AC LDRB W8, [X20 + 0x96]
	0x035B32B0 MOV V9.16B, V1.16B
	0x035B32B4 MOV V8.16B, V0.16B
	0x035B32B8 MOV X19, X0
	0x035B32BC TBNZ X8, 0x0, 0x35B32E0
	0x035B32C0 ADRP X0, 0xB68000
	0x035B32C4 LDR X0, [X0 + 0x780]
	0x035B32C8 BL 0x1C16CF4
	0x035B32CC ADRP X0, 0xB68000
	0x035B32D0 LDR X0, [X0 + 0x788]
	0x035B32D4 BL 0x1C16CF4
	0x035B32D8 MOVZ W8, 0x1
	0x035B32DC STRB W8, [X20 + 0x96]
	0x035B32E0 LDR X8, [X19]
	0x035B32E4 MOV X0, X19
	0x035B32E8 LDR X9, [X8 + 0x248]
	0x035B32EC LDR X1, [X8 + 0x250]
	0x035B32F0 BLR X9
	0x035B32F4 TBZ X0, 0x0, 0x35B3350
	0x035B32F8 ADRP X9, 0xB68000
	0x035B32FC LDR X8, [X19]
	0x035B3300 LDR X9, [X9 + 0x780]
	0x035B3304 MOV X0, X19
	0x035B3308 LDR X1, [X9]
	0x035B330C LDP X9, X2, [X8 + 0x1A8]
	0x035B3310 BLR X9
	0x035B3314 CBZ X0, 0x35B33D8
	0x035B3318 LDR X8, [X0]
	0x035B331C LDR X9, [X8 + 0x388]
	0x035B3320 LDR X1, [X8 + 0x390]
	0x035B3324 BLR X9
	0x035B3328 ADRP X9, 0xB68000
	0x035B332C LDR X8, [X19]
	0x035B3330 LDR X9, [X9 + 0x788]
	0x035B3334 MOV X0, X19
	0x035B3338 MOV V8.16B, V0.16B
	0x035B333C LDR X1, [X9]
	0x035B3340 LDP X9, X2, [X8 + 0x1A8]
	0x035B3344 BLR X9
	0x035B3348 CBNZ X0, 0x35B33AC
	0x035B334C B 0x35B33D8
	0x035B3350 LDR X8, [X19]
	0x035B3354 MOV X0, X19
	0x035B3358 LDR X9, [X8 + 0x238]
	0x035B335C LDR X1, [X8 + 0x240]
	0x035B3360 BLR X9
	0x035B3364 TBZ X0, 0x0, 0x35B33C0
	0x035B3368 LDR X8, [X19]
	0x035B336C MOV X0, X19
	0x035B3370 MOV W1, W31
	0x035B3374 LDP X9, X2, [X8 + 0x188]
	0x035B3378 BLR X9
	0x035B337C CBZ X0, 0x35B33D8
	0x035B3380 LDR X8, [X0]
	0x035B3384 LDR X9, [X8 + 0x388]
	0x035B3388 LDR X1, [X8 + 0x390]
	0x035B338C BLR X9
	0x035B3390 LDR X8, [X19]
	0x035B3394 MOVZ W1, 0x1
	0x035B3398 MOV X0, X19
	0x035B339C MOV V8.16B, V0.16B
	0x035B33A0 LDP X9, X2, [X8 + 0x188]
	0x035B33A4 BLR X9
	0x035B33A8 CBZ X0, 0x35B33D8
	0x035B33AC LDR X8, [X0]
	0x035B33B0 LDR X9, [X8 + 0x388]
	0x035B33B4 LDR X1, [X8 + 0x390]
	0x035B33B8 BLR X9
	0x035B33BC MOV V9.16B, V0.16B
	0x035B33C0 LDP X20, X19, [X31 + 0x20]
	0x035B33C4 LDR X30, [X31 + 0x10]
	0x035B33C8 MOV V0.16B, V8.16B
	0x035B33CC MOV V1.16B, V9.16B
	0x035B33D0 LDP D9, D8, [X31], #0x30
	0x035B33D4 RET
	0x035B33D8 BL 0x1C16F20
	0x035B33DC STR D8, [X31 - 0x30]!
	0x035B33E0 STP X30, X21, [X31 + 0x10]
	0x035B33E4 STP X20, X19, [X31 + 0x20]
	0x035B33E8 LDR X8, [X0]
	0x035B33EC MOV X21, X1
	0x035B33F0 MOV X19, X2
	0x035B33F4 MOV X20, X0
	0x035B33F8 LDR X9, [X8 + 0x248]
	0x035B33FC LDR X8, [X8 + 0x250]
	0x035B3400 MOV X1, X8
	0x035B3404 BLR X9
	0x035B3408 TBZ X0, 0x0, 0x35B3468
	0x035B340C LDR X8, [X20]
	0x035B3410 MOV X0, X20
	0x035B3414 MOV X1, X21
	0x035B3418 LDP X9, X2, [X8 + 0x1A8]
	0x035B341C BLR X9
	0x035B3420 CBZ X0, 0x35B34B0
	0x035B3424 LDR X8, [X0]
	0x035B3428 LDR X9, [X8 + 0x388]
	0x035B342C LDR X1, [X8 + 0x390]
	0x035B3430 BLR X9
	0x035B3434 LDR X8, [X20]
	0x035B3438 MOV X0, X20
	0x035B343C MOV X1, X19
	0x035B3440 MOV V8.16B, V0.16B
	0x035B3444 LDP X9, X2, [X8 + 0x1A8]
	0x035B3448 BLR X9
	0x035B344C CBZ X0, 0x35B34B0

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2E000
	009 Move W8, [X20+155]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xB6E000
	020 Move X0, [X0+944]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6E000
	023 Move X0, [X0+952]
	024 Call 0x1C17CF4
	025 Move X0, 0xB6E000
	026 Move X0, [X0+960]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6E000
	029 Move X0, [X0+936]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+155], W8
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+584]
	036 Move X1, [X8+592]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X19]
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {103}
	043 Move X9, [X8+616]
	044 Move X2, [X8+624]
	045 Move X20, 0xB6E000
	046 Move X20, [X20+936]
	047 Move W1, 1
	048 Move X0, X19
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X19]
	051 Move X1, [X20]
	052 Move X0, X19
	053 Move X9, [X8+424]
	054 Move X2, [X8+432]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Compare X0, 0
	057 JumpIfEqual {178}
	058 Move X8, [X0]
	059 Move V0, V11
	060 Move X9, [X8+920]
	061 Move X1, [X8+928]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X9, 0xB6E000
	064 Move X8, [X19]
	065 Move X9, [X9+952]
	066 Move X0, X19
	067 Move X1, [X9]
	068 Move X9, [X8+424]
	069 Move X2, [X8+432]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X0, 0
	072 JumpIfEqual {178}
	073 Move X8, [X0]
	074 Move V0, V10
	075 Move X9, [X8+920]
	076 Move X1, [X8+928]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X9, 0xB6E000
	079 Move X8, [X19]
	080 Move X9, [X9+960]
	081 Move X0, X19
	082 Move X1, [X9]
	083 Move X9, [X8+424]
	084 Move X2, [X8+432]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Compare X0, 0
	087 JumpIfEqual {178}
	088 Move X8, [X0]
	089 Move V0, V9
	090 Move X9, [X8+920]
	091 Move X1, [X8+928]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X9, 0xB6E000
	094 Move X8, [X19]
	095 Move X9, [X9+944]
	096 Move X0, X19
	097 Move X1, [X9]
	098 Move X9, [X8+424]
	099 Move X2, [X8+432]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfNotEqual {164}
	103 Move X9, [X8+568]
	104 Move X1, [X8+576]
	105 Move X0, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {169}
	111 Move X8, [X19]
	112 Move W1, 1
	113 Move X0, X19
	114 Move X9, [X8+616]
	115 Move X2, [X8+624]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, [X19]
	118 Move X0, X19
	119 Move W1, W31
	120 Move X9, [X8+392]
	121 Move X2, [X8+400]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X0, 0
	124 JumpIfEqual {178}
	125 Move X8, [X0]
	126 Move V0, V11
	127 Move X9, [X8+920]
	128 Move X1, [X8+928]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X19]
	131 Move W1, 1
	132 Move X0, X19
	133 Move X9, [X8+392]
	134 Move X2, [X8+400]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X0, 0
	137 JumpIfEqual {178}
	138 Move X8, [X0]
	139 Move V0, V10
	140 Move X9, [X8+920]
	141 Move X1, [X8+928]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X8, [X19]
	144 Move W1, 2
	145 Move X0, X19
	146 Move X9, [X8+392]
	147 Move X2, [X8+400]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X0, 0
	150 JumpIfEqual {178}
	151 Move X8, [X0]
	152 Move V0, V9
	153 Move X9, [X8+920]
	154 Move X1, [X8+928]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, [X19]
	157 Move W1, 3
	158 Move X0, X19
	159 Move X9, [X8+392]
	160 Move X2, [X8+400]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Compare X0, 0
	163 JumpIfEqual {178}
	164 Move X8, [X0]
	165 Move V0, V8
	166 Move X9, [X8+920]
	167 Move X1, [X8+928]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X0, X19
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X30, [X31+32]
	173 Move D9, [X31+16]
	174 Move D8, [X31+24]
	175 Move D11, [X31+64]
	176 Move D10, [X31+72]
	177 Return X0
	178 Call 0x1C17F20

Method: UnityEngine.Color32 ReadColor32(UnityEngine.Color32 aDefault)

Disassembly:
	0x035B4C50 STP X20, X19, [X31 + 0x10]
	0x035B4C54 ADRP X21, 0xE2C000
	0x035B4C58 ADRP X20, 0xB83000
	0x035B4C5C LDRB W8, [X21 + 0xAC]
	0x035B4C60 LDR X20, [X20 + 0x640]
	0x035B4C64 MOV X19, X0
	0x035B4C68 TBNZ X8, 0x0, 0x35B4C80
	0x035B4C6C ADRP X0, 0xB83000
	0x035B4C70 LDR X0, [X0 + 0x640]
	0x035B4C74 BL 0x1C16CF4
	0x035B4C78 MOVZ W8, 0x1
	0x035B4C7C STRB W8, [X21 + 0xAC]
	0x035B4C80 LDR X0, [X20]
	0x035B4C84 LDR X19, [X19 + 0x10]
	0x035B4C88 BL 0x1C16F10
	0x035B4C8C MOV X1, X19
	0x035B4C90 MOV X20, X0
	0x035B4C94 BL 0x35AC984
	0x035B4C98 MOV X0, X20
	0x035B4C9C LDP X20, X19, [X31 + 0x10]
	0x035B4CA0 LDP X30, X21, [X31], #0x20
	0x035B4CA4 RET
	0x035B4CA8 SUB X31, X31, 0xB0
	0x035B4CAC STP X30, X21, [X31 + 0x90]
	0x035B4CB0 STP X20, X19, [X31 + 0xA0]
	0x035B4CB4 ADRP X21, 0xE2C000
	0x035B4CB8 ADRP X20, 0xB40000
	0x035B4CBC LDRB W8, [X21 + 0xAD]
	0x035B4CC0 LDR X20, [X20 + 0x460]
	0x035B4CC4 MOV X19, X0
	0x035B4CC8 TBNZ X8, 0x0, 0x35B4CE0
	0x035B4CCC ADRP X0, 0xB40000
	0x035B4CD0 LDR X0, [X0 + 0x460]
	0x035B4CD4 BL 0x1C16CF4
	0x035B4CD8 MOVZ W8, 0x1
	0x035B4CDC STRB W8, [X21 + 0xAD]
	0x035B4CE0 LDR X0, [X20]
	0x035B4CE4 LDR X20, [X19 + 0x10]
	0x035B4CE8 LDR W8, [X0 + 0xE0]
	0x035B4CEC CBNZ W8, 0x35B4CF4
	0x035B4CF0 BL 0x1C16DFC
	0x035B4CF4 MOV X0, X20
	0x035B4CF8 MOV X1, X31
	0x035B4CFC BL 0x35ADA5C
	0x035B4D00 TBZ X0, 0x0, 0x35B4D40
	0x035B4D04 LDR X0, [X19 + 0x10]
	0x035B4D08 CBZ X0, 0x35B4D50
	0x035B4D0C LDR X8, [X0]
	0x035B4D10 LDR X9, [X8 + 0x338]
	0x035B4D14 LDR X1, [X8 + 0x340]
	0x035B4D18 ADD X8, X31, 0x0
	0x035B4D1C BLR X9
	0x035B4D20 ADD X0, X31, 0x48
	0x035B4D24 ADD X1, X31, 0x0
	0x035B4D28 MOVZ W2, 0x48
	0x035B4D2C BL 0x3EB1AC0
	0x035B4D30 ADD X0, X19, 0x18
	0x035B4D34 ADD X1, X31, 0x48
	0x035B4D38 MOVZ W2, 0x48
	0x035B4D3C BL 0x3EB1AC0
	0x035B4D40 LDP X20, X19, [X31 + 0xA0]
	0x035B4D44 LDP X30, X21, [X31 + 0x90]
	0x035B4D48 ADD X31, X31, 0xB0
	0x035B4D4C RET
	0x035B4D50 BL 0x1C16F20
	0x035B4D54 STP X30, X21, [X31 - 0x20]!
	0x035B4D58 STP X20, X19, [X31 + 0x10]
	0x035B4D5C ADRP X21, 0xE2C000
	0x035B4D60 ADRP X20, 0xB83000
	0x035B4D64 LDRB W8, [X21 + 0xAE]
	0x035B4D68 LDR X20, [X20 + 0x640]
	0x035B4D6C MOV X19, X0
	0x035B4D70 TBNZ X8, 0x0, 0x35B4D88
	0x035B4D74 ADRP X0, 0xB83000
	0x035B4D78 LDR X0, [X0 + 0x640]
	0x035B4D7C BL 0x1C16CF4
	0x035B4D80 MOVZ W8, 0x1
	0x035B4D84 STRB W8, [X21 + 0xAE]
	0x035B4D88 LDR X0, [X20]
	0x035B4D8C LDR X19, [X19 + 0x10]
	0x035B4D90 BL 0x1C16F10
	0x035B4D94 MOV X1, X19
	0x035B4D98 MOV X20, X0
	0x035B4D9C BL 0x35AC984
	0x035B4DA0 MOV X0, X20
	0x035B4DA4 LDP X20, X19, [X31 + 0x10]
	0x035B4DA8 LDP X30, X21, [X31], #0x20
	0x035B4DAC RET
	0x035B4DB0 RET
	0x035B4DB4 LDR W8, [X0 + 0x10]
	0x035B4DB8 CBNZ W8, 0x35B4DC4
	0x035B4DBC MOVN W8, 0x0
	0x035B4DC0 STR W8, [X0 + 0x10]
	0x035B4DC4 MOV W0, W31
	0x035B4DC8 RET
	0x035B4DCC LDR X0, [X0 + 0x18]
	0x035B4DD0 RET
	0x035B4DD4 STP X30, X19, [X31 - 0x10]!
	0x035B4DD8 ADRP X0, 0xB3F000
	0x035B4DDC LDR X0, [X0 + 0xB40]
	0x035B4DE0 BL 0x1C16D08
	0x035B4DE4 BL 0x1C16F10
	0x035B4DE8 MOV X1, X31
	0x035B4DEC MOV X19, X0
	0x035B4DF0 BL 0x3380310
	0x035B4DF4 ADRP X0, 0xB83000
	0x035B4DF8 LDR X0, [X0 + 0x798]
	0x035B4DFC BL 0x1C16D08
	0x035B4E00 MOV X1, X0
	0x035B4E04 MOV X0, X19
	0x035B4E08 BL 0x1C16DEC
	0x035B4E0C LDR X0, [X0 + 0x18]
	0x035B4E10 RET
	0x035B4E14 STR X30, [X31 - 0x20]!
	0x035B4E18 STP X20, X19, [X31 + 0x10]
	0x035B4E1C ADRP X20, 0xE2C000
	0x035B4E20 LDRB W8, [X20 + 0xAF]
	0x035B4E24 MOV X19, X0
	0x035B4E28 TBNZ X8, 0x0, 0x35B4E40
	0x035B4E2C ADRP X0, 0xB83000
	0x035B4E30 LDR X0, [X0 + 0x630]
	0x035B4E34 BL 0x1C16CF4
	0x035B4E38 MOVZ W8, 0x1
	0x035B4E3C STRB W8, [X20 + 0xAF]
	0x035B4E40 LDR W8, [X19 + 0x10]
	0x035B4E44 ADDS W31, W8, 0x2
	0x035B4E48 B.NE 0x35B4E68
	0x035B4E4C LDR W20, [X19 + 0x20]
	0x035B4E50 MOV X0, X31
	0x035B4E54 BL 0x33C151C
	0x035B4E58 CMP W20, W0
	0x035B4E5C B.NE 0x35B4E68
	0x035B4E60 STR W31, [X19 + 0x10]
	0x035B4E64 B 0x35B4E94
	0x035B4E68 ADRP X8, 0xB83000
	0x035B4E6C LDR X8, [X8 + 0x630]
	0x035B4E70 LDR X0, [X8]
	0x035B4E74 BL 0x1C16F10
	0x035B4E78 MOV X1, X31
	0x035B4E7C MOV X19, X0
	0x035B4E80 BL 0x33BDD8C
	0x035B4E84 MOV X0, X31
	0x035B4E88 STR W31, [X19 + 0x10]
	0x035B4E8C BL 0x33C151C
	0x035B4E90 STR W0, [X19 + 0x20]
	0x035B4E94 MOV X0, X19
	0x035B4E98 LDP X20, X19, [X31 + 0x10]
	0x035B4E9C LDR X30, [X31], #0x20
	0x035B4EA0 RET
	0x035B4EA4 B 0x35B4E14
	0x035B4EA8 STP X30, X21, [X31 - 0x20]!
	0x035B4EAC STP X20, X19, [X31 + 0x10]
	0x035B4EB0 LDR W8, [X0 + 0x10]
	0x035B4EB4 MOV X19, X0
	0x035B4EB8 AND W9, W8, 0xFFFFFFFE
	0x035B4EBC ADDS W31, W9, 0x4
	0x035B4EC0 B.NE 0x35B4ED0
	0x035B4EC4 ADDS W31, W8, 0x4
	0x035B4EC8 B.EQ 0x35B4ED8
	0x035B4ECC B 0x35B4EE0
	0x035B4ED0 CMP W8, 0x1
	0x035B4ED4 B.NE 0x35B4F18
	0x035B4ED8 MOV X0, X19
	0x035B4EDC BL 0x35B5388
	0x035B4EE0 MOV X0, X19
	0x035B4EE4 LDP X20, X19, [X31 + 0x10]
	0x035B4EE8 LDP X30, X21, [X31], #0x20
	0x035B4EEC B 0x35B5438
	0x035B4EF0 CMP W1, 0x1
	0x035B4EF4 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE2D000
	008 Move W8, [X21+156]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xB41000
	016 Move X0, [X0+1120]
	017 Call 0x1C17CF4
	018 Move X0, 0xB6D000
	019 Move X0, [X0+944]
	020 Call 0x1C17CF4
	021 Move X0, 0xB6D000
	022 Move X0, [X0+952]
	023 Call 0x1C17CF4
	024 Move X0, 0xB6D000
	025 Move X0, [X0+960]
	026 Call 0x1C17CF4
	027 Move X0, 0xB6D000
	028 Move X0, [X0+936]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+156], W8
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+584]
	035 Move X1, [X8+592]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {109}
	041 Move X9, 0xB6D000
	042 Move X8, [X19]
	043 Move X9, [X9+936]
	044 Move X0, X19
	045 Move X1, [X9]
	046 Move X9, [X8+424]
	047 Move X2, [X8+432]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X0, 0
	050 JumpIfEqual {210}
	051 Move X8, [X0]
	052 Move X9, [X8+872]
	053 Move X1, [X8+880]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X9, 0xB6D000
	056 Move X8, [X19]
	057 Move X9, [X9+952]
	058 Move W20, W0
	059 Move X0, X19
	060 Move X1, [X9]
	061 Move X9, [X8+424]
	062 Move X2, [X8+432]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X0, 0
	065 JumpIfEqual {210}
	066 Move X8, [X0]
	067 Move X9, [X8+872]
	068 Move X1, [X8+880]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X9, 0xB6D000
	071 Move X8, [X19]
	072 Move X9, [X9+960]
	073 Move W21, W0
	074 Move X0, X19
	075 Move X1, [X9]
	076 Move X9, [X8+424]
	077 Move X2, [X8+432]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Compare X0, 0
	080 JumpIfEqual {210}
	081 Move X8, [X0]
	082 Move X9, [X8+872]
	083 Move X1, [X8+880]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X23, 0xB6D000
	086 Move X8, [X19]
	087 Move X23, [X23+944]
	088 Move W22, W0
	089 Move X0, X19
	090 Move X9, [X8+760]
	091 Move X1, [X23]
	092 Move X2, [X8+768]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 And W22, W22, 255
	095 And W21, W21, 255
	096 And W20, W20, 255
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {178}
	101 Move X8, [X19]
	102 Move X1, [X23]
	103 Move X0, X19
	104 Move X9, [X8+424]
	105 Move X2, [X8+432]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Compare X0, 0
	108 JumpIfNotEqual {174}
	109 Move X8, [X19]
	110 Move X0, X19
	111 Move X9, [X8+568]
	112 Move X1, [X8+576]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {188}
	118 Move X8, [X19]
	119 Move X0, X19
	120 Move W1, W31
	121 Move X9, [X8+392]
	122 Move X2, [X8+400]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Compare X0, 0
	125 JumpIfEqual {210}
	126 Move X8, [X0]
	127 Move X9, [X8+872]
	128 Move X1, [X8+880]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X19]
	131 Move W20, W0
	132 Move W1, 1
	133 Move X0, X19
	134 Move X9, [X8+392]
	135 Move X2, [X8+400]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Compare X0, 0
	138 JumpIfEqual {210}
	139 Move X8, [X0]
	140 Move X9, [X8+872]
	141 Move X1, [X8+880]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X8, [X19]
	144 Move W21, W0
	145 Move W1, 2
	146 Move X0, X19
	147 Move X9, [X8+392]
	148 Move X2, [X8+400]
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare X0, 0
	151 JumpIfEqual {210}
	152 Move X8, [X0]
	153 Move X9, [X8+872]
	154 Move X1, [X8+880]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, [X19]
	157 Move W22, W0
	158 Move X0, X19
	159 Move X9, [X8+488]
	160 Move X1, [X8+496]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 And W22, W22, 255
	163 And W21, W21, 255
	164 NotImplemented "Instruction CMP not yet implemented."
	165 And W20, W20, 255
	166 Move X8, [X19]
	167 Move W1, 3
	168 Move X0, X19
	169 Move X9, [X8+392]
	170 Move X2, [X8+400]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Compare X0, 0
	173 JumpIfEqual {210}
	174 Move X8, [X0]
	175 Move X9, [X8+872]
	176 Move X1, [X8+880]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X19, 0xB41000
	179 Move X19, [X19+1120]
	180 Move X0, [X19]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {186}
	184 Call 0x1C17DFC
	185 Move X0, [X19]
	186 Move X8, [X0+184]
	187 Move W0, [X8+3]
	188 Move X21, X20
	189 ShiftRight X21, 8
	190 And X21, X21, 0x7FFFFFFF
	191 Move X22, X20
	192 ShiftRight X22, 16
	193 And X22, X22, 0x7FFFFFFF
	194 Move X0, X20
	195 ShiftRight X0, 24
	196 And X0, X0, 0x7FFFFFFF
	197 Move W0, W0
	198 ShiftRight W0, 8
	199 And W0, W0, 127
	200 NotImplemented "Instruction BFM not yet implemented."
	201 NotImplemented "Instruction BFM not yet implemented."
	202 NotImplemented "Instruction BFM not yet implemented."
	203 Move X20, [X31+32]
	204 Move X19, [X31+40]
	205 Move X22, [X31+16]
	206 Move X21, [X31+24]
	207 Move X30, [X31+48]
	208 Move X23, [X31+56]
	209 Return X0
	210 Call 0x1C17F20

Method: UnityEngine.Color32 ReadColor32()

Disassembly:
	0x035B4180 LDR X0, [X0 + 0xB70]
	0x035B4184 BL 0x1C16CF4
	0x035B4188 MOVZ W8, 0x1
	0x035B418C STRB W8, [X20 + 0xA0]
	0x035B4190 LDR X8, [X19]
	0x035B4194 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X31
	003 Call JSONNode.ReadColor32, X0, X1
	004 And X0, X0, 0
	005 Move X30, [X31+16]
	006 Return X0

Method: SimpleJSON.JSONNode WriteColor32(UnityEngine.Color32 aCol)

Disassembly:
	0x035B34BC STR X30, [X31 + 0x18]
	0x035B34C0 STP X20, X19, [X31 + 0x20]
	0x035B34C4 ADRP X20, 0xE2D000
	0x035B34C8 LDRB W8, [X20 + 0x97]
	0x035B34CC MOV V10.16B, V2.16B
	0x035B34D0 MOV V9.16B, V1.16B
	0x035B34D4 MOV V8.16B, V0.16B
	0x035B34D8 MOV X19, X0
	0x035B34DC TBNZ X8, 0x0, 0x35B350C
	0x035B34E0 ADRP X0, 0xB68000
	0x035B34E4 LDR X0, [X0 + 0x780]
	0x035B34E8 BL 0x1C16CF4
	0x035B34EC ADRP X0, 0xB68000
	0x035B34F0 LDR X0, [X0 + 0x788]
	0x035B34F4 BL 0x1C16CF4
	0x035B34F8 ADRP X0, 0xB6D000
	0x035B34FC LDR X0, [X0 + 0x3D0]
	0x035B3500 BL 0x1C16CF4
	0x035B3504 MOVZ W8, 0x1
	0x035B3508 STRB W8, [X20 + 0x97]
	0x035B350C LDR X8, [X19]
	0x035B3510 MOV X0, X19
	0x035B3514 LDR X9, [X8 + 0x248]
	0x035B3518 LDR X1, [X8 + 0x250]
	0x035B351C BLR X9
	0x035B3520 TBZ X0, 0x0, 0x35B35B0
	0x035B3524 ADRP X9, 0xB68000
	0x035B3528 LDR X8, [X19]
	0x035B352C LDR X9, [X9 + 0x780]
	0x035B3530 MOV X0, X19
	0x035B3534 LDR X1, [X9]
	0x035B3538 LDP X9, X2, [X8 + 0x1A8]
	0x035B353C BLR X9
	0x035B3540 CBZ X0, 0x35B366C
	0x035B3544 LDR X8, [X0]
	0x035B3548 LDR X9, [X8 + 0x388]
	0x035B354C LDR X1, [X8 + 0x390]
	0x035B3550 BLR X9
	0x035B3554 ADRP X9, 0xB68000
	0x035B3558 LDR X8, [X19]
	0x035B355C LDR X9, [X9 + 0x788]
	0x035B3560 MOV X0, X19
	0x035B3564 MOV V8.16B, V0.16B
	0x035B3568 LDR X1, [X9]
	0x035B356C LDP X9, X2, [X8 + 0x1A8]
	0x035B3570 BLR X9
	0x035B3574 CBZ X0, 0x35B366C
	0x035B3578 LDR X8, [X0]
	0x035B357C LDR X9, [X8 + 0x388]
	0x035B3580 LDR X1, [X8 + 0x390]
	0x035B3584 BLR X9
	0x035B3588 ADRP X9, 0xB6D000
	0x035B358C LDR X8, [X19]
	0x035B3590 LDR X9, [X9 + 0x3D0]
	0x035B3594 MOV X0, X19
	0x035B3598 MOV V9.16B, V0.16B
	0x035B359C LDR X1, [X9]
	0x035B35A0 LDP X9, X2, [X8 + 0x1A8]
	0x035B35A4 BLR X9
	0x035B35A8 CBNZ X0, 0x35B3638
	0x035B35AC B 0x35B366C
	0x035B35B0 LDR X8, [X19]
	0x035B35B4 MOV X0, X19
	0x035B35B8 LDR X9, [X8 + 0x238]
	0x035B35BC LDR X1, [X8 + 0x240]
	0x035B35C0 BLR X9
	0x035B35C4 TBZ X0, 0x0, 0x35B364C
	0x035B35C8 LDR X8, [X19]
	0x035B35CC MOV X0, X19
	0x035B35D0 MOV W1, W31
	0x035B35D4 LDP X9, X2, [X8 + 0x188]
	0x035B35D8 BLR X9
	0x035B35DC CBZ X0, 0x35B366C
	0x035B35E0 LDR X8, [X0]
	0x035B35E4 LDR X9, [X8 + 0x388]
	0x035B35E8 LDR X1, [X8 + 0x390]
	0x035B35EC BLR X9
	0x035B35F0 LDR X8, [X19]
	0x035B35F4 MOVZ W1, 0x1
	0x035B35F8 MOV X0, X19
	0x035B35FC MOV V8.16B, V0.16B
	0x035B3600 LDP X9, X2, [X8 + 0x188]
	0x035B3604 BLR X9
	0x035B3608 CBZ X0, 0x35B366C
	0x035B360C LDR X8, [X0]
	0x035B3610 LDR X9, [X8 + 0x388]
	0x035B3614 LDR X1, [X8 + 0x390]
	0x035B3618 BLR X9
	0x035B361C LDR X8, [X19]
	0x035B3620 MOVZ W1, 0x2
	0x035B3624 MOV X0, X19
	0x035B3628 MOV V9.16B, V0.16B
	0x035B362C LDP X9, X2, [X8 + 0x188]
	0x035B3630 BLR X9
	0x035B3634 CBZ X0, 0x35B366C
	0x035B3638 LDR X8, [X0]
	0x035B363C LDR X9, [X8 + 0x388]
	0x035B3640 LDR X1, [X8 + 0x390]
	0x035B3644 BLR X9
	0x035B3648 MOV V10.16B, V0.16B
	0x035B364C MOV V0.16B, V8.16B
	0x035B3650 MOV V1.16B, V9.16B
	0x035B3654 LDP X20, X19, [X31 + 0x20]
	0x035B3658 LDR X30, [X31 + 0x18]
	0x035B365C LDP D9, D8, [X31 + 0x8]
	0x035B3660 MOV V2.16B, V10.16B
	0x035B3664 LDR V10, [X31], #0x30
	0x035B3668 RET
	0x035B366C BL 0x1C16F20
	0x035B3670 STP D9, D8, [X31 - 0x40]!
	0x035B3674 STR X30, [X31 + 0x10]
	0x035B3678 STP X22, X21, [X31 + 0x20]
	0x035B367C STP X20, X19, [X31 + 0x30]
	0x035B3680 LDR X8, [X0]
	0x035B3684 MOV X22, X1
	0x035B3688 MOV X19, X3
	0x035B368C MOV X21, X2
	0x035B3690 LDR X9, [X8 + 0x248]
	0x035B3694 LDR X8, [X8 + 0x250]
	0x035B3698 MOV X20, X0
	0x035B369C MOV X1, X8
	0x035B36A0 BLR X9
	0x035B36A4 TBZ X0, 0x0, 0x35B3730
	0x035B36A8 LDR X8, [X20]
	0x035B36AC MOV X0, X20
	0x035B36B0 MOV X1, X22
	0x035B36B4 LDP X9, X2, [X8 + 0x1A8]
	0x035B36B8 BLR X9
	0x035B36BC CBZ X0, 0x35B3784
	0x035B36C0 LDR X8, [X0]
	0x035B36C4 LDR X9, [X8 + 0x388]
	0x035B36C8 LDR X1, [X8 + 0x390]
	0x035B36CC BLR X9
	0x035B36D0 LDR X8, [X20]
	0x035B36D4 MOV X0, X20
	0x035B36D8 MOV X1, X21
	0x035B36DC MOV V8.16B, V0.16B
	0x035B36E0 LDP X9, X2, [X8 + 0x1A8]
	0x035B36E4 BLR X9
	0x035B36E8 CBZ X0, 0x35B3784
	0x035B36EC LDR X8, [X0]
	0x035B36F0 LDR X9, [X8 + 0x388]
	0x035B36F4 LDR X1, [X8 + 0x390]
	0x035B36F8 BLR X9
	0x035B36FC LDR X8, [X20]
	0x035B3700 MOV X0, X20
	0x035B3704 MOV X1, X19
	0x035B3708 MOV V9.16B, V0.16B

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE2E000
	009 Move W8, [X24+157]
	010 Move X20, X1
	011 Move X19, X0
	012 Move X23, X1
	013 ShiftRight X23, 8
	014 And X23, X23, 0x7FFFFFFF
	015 Move X22, X1
	016 ShiftRight X22, 16
	017 And X22, X22, 0x7FFFFFFF
	018 Move X21, X1
	019 ShiftRight X21, 24
	020 And X21, X21, 0x7FFFFFFF
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0xB6E000
	026 Move X0, [X0+944]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6E000
	029 Move X0, [X0+952]
	030 Call 0x1C17CF4
	031 Move X0, 0xB6E000
	032 Move X0, [X0+960]
	033 Call 0x1C17CF4
	034 Move X0, 0xB6E000
	035 Move X0, [X0+936]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+157], W8
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X9, [X8+584]
	042 Move X1, [X8+592]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X19]
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {109}
	049 Move X9, [X8+616]
	050 Move X2, [X8+624]
	051 Move X24, 0xB6E000
	052 Move X24, [X24+936]
	053 Move W1, 1
	054 Move X0, X19
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X19]
	057 Move X1, [X24]
	058 Move X0, X19
	059 Move X9, [X8+424]
	060 Move X2, [X8+432]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Compare X0, 0
	063 JumpIfEqual {184}
	064 Move X8, [X0]
	065 And W1, W20, 255
	066 Move X9, [X8+888]
	067 Move X2, [X8+896]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X9, 0xB6E000
	070 Move X8, [X19]
	071 Move X9, [X9+952]
	072 Move X0, X19
	073 Move X1, [X9]
	074 Move X9, [X8+424]
	075 Move X2, [X8+432]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Compare X0, 0
	078 JumpIfEqual {184}
	079 Move X8, [X0]
	080 And W1, W23, 255
	081 Move X9, [X8+888]
	082 Move X2, [X8+896]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X9, 0xB6E000
	085 Move X8, [X19]
	086 Move X9, [X9+960]
	087 Move X0, X19
	088 Move X1, [X9]
	089 Move X9, [X8+424]
	090 Move X2, [X8+432]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X0, 0
	093 JumpIfEqual {184}
	094 Move X8, [X0]
	095 And W1, W22, 255
	096 Move X9, [X8+888]
	097 Move X2, [X8+896]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X9, 0xB6E000
	100 Move X8, [X19]
	101 Move X9, [X9+944]
	102 Move X0, X19
	103 Move X1, [X9]
	104 Move X9, [X8+424]
	105 Move X2, [X8+432]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Compare X0, 0
	108 JumpIfNotEqual {170}
	109 Move X9, [X8+568]
	110 Move X1, [X8+576]
	111 Move X0, X19
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {175}
	117 Move X8, [X19]
	118 Move W1, 1
	119 Move X0, X19
	120 Move X9, [X8+616]
	121 Move X2, [X8+624]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X8, [X19]
	124 Move X0, X19
	125 Move W1, W31
	126 Move X9, [X8+392]
	127 Move X2, [X8+400]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Compare X0, 0
	130 JumpIfEqual {184}
	131 Move X8, [X0]
	132 And W1, W20, 255
	133 Move X9, [X8+888]
	134 Move X2, [X8+896]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X8, [X19]
	137 Move W1, 1
	138 Move X0, X19
	139 Move X9, [X8+392]
	140 Move X2, [X8+400]
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Compare X0, 0
	143 JumpIfEqual {184}
	144 Move X8, [X0]
	145 And W1, W23, 255
	146 Move X9, [X8+888]
	147 Move X2, [X8+896]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X8, [X19]
	150 Move W1, 2
	151 Move X0, X19
	152 Move X9, [X8+392]
	153 Move X2, [X8+400]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Compare X0, 0
	156 JumpIfEqual {184}
	157 Move X8, [X0]
	158 And W1, W22, 255
	159 Move X9, [X8+888]
	160 Move X2, [X8+896]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, [X19]
	163 Move W1, 3
	164 Move X0, X19
	165 Move X9, [X8+392]
	166 Move X2, [X8+400]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X0, 0
	169 JumpIfEqual {184}
	170 Move X8, [X0]
	171 And W1, W21, 255
	172 Move X9, [X8+888]
	173 Move X2, [X8+896]
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move X0, X19
	176 Move X20, [X31+48]
	177 Move X19, [X31+56]
	178 Move X22, [X31+32]
	179 Move X21, [X31+40]
	180 Move X24, [X31+16]
	181 Move X23, [X31+24]
	182 Move X30, [X31+64]
	183 Return X0
	184 Call 0x1C17F20

Method: UnityEngine.Quaternion ReadQuaternion(UnityEngine.Quaternion aDefault)

Disassembly:
	0x035B4EF8 B.NE 0x35B4F24
	0x035B4EFC MOV X0, X21
	0x035B4F00 BL 0x3EB1AD0
	0x035B4F04 LDR X20, [X0]
	0x035B4F08 BL 0x3EB1AE0
	0x035B4F0C MOV X0, X19
	0x035B4F10 BL 0x35B5438
	0x035B4F14 CBNZ X20, 0x35B4F2C
	0x035B4F18 LDP X20, X19, [X31 + 0x10]
	0x035B4F1C LDP X30, X21, [X31], #0x20
	0x035B4F20 RET
	0x035B4F24 MOV X20, X31
	0x035B4F28 B 0x35B4F38
	0x035B4F2C MOV X0, X20
	0x035B4F30 BL 0x1C16F18
	0x035B4F34 MOV X21, X0
	0x035B4F38 MOV X0, X19
	0x035B4F3C BL 0x35B5438
	0x035B4F40 CBNZ X20, 0x35B4F4C
	0x035B4F44 MOV X0, X21
	0x035B4F48 BL 0x1D2C690
	0x035B4F4C MOV X0, X20
	0x035B4F50 BL 0x1C16F18
	0x035B4F54 BL 0x1990590
	0x035B4F58 SUB X31, X31, 0x50
	0x035B4F5C STP X30, X23, [X31 + 0x20]
	0x035B4F60 STP X22, X21, [X31 + 0x30]
	0x035B4F64 STP X20, X19, [X31 + 0x40]
	0x035B4F68 ADRP X19, 0xE2C000
	0x035B4F6C LDRB W8, [X19 + 0xB0]
	0x035B4F70 MOV X20, X0
	0x035B4F74 STR X0, [X31 + 0x18]
	0x035B4F78 TBNZ X8, 0x0, 0x35B4FA8
	0x035B4F7C ADRP X0, 0xB83000
	0x035B4F80 LDR X0, [X0 + 0x7A0]
	0x035B4F84 BL 0x1C16CF4
	0x035B4F88 ADRP X0, 0xB83000
	0x035B4F8C LDR X0, [X0 + 0x7A8]
	0x035B4F90 BL 0x1C16CF4
	0x035B4F94 ADRP X0, 0xB3F000
	0x035B4F98 LDR X0, [X0 + 0xE18]
	0x035B4F9C BL 0x1C16CF4
	0x035B4FA0 MOVZ W8, 0x1
	0x035B4FA4 STRB W8, [X19 + 0xB0]
	0x035B4FA8 ADD X8, X31, 0x18
	0x035B4FAC STR X8, [X31 + 0x10]
	0x035B4FB0 LDR W8, [X20 + 0x10]
	0x035B4FB4 ADRP X22, 0xB3F000
	0x035B4FB8 ADRP X21, 0xB83000
	0x035B4FBC ADRP X23, 0xB83000
	0x035B4FC0 LDR X22, [X22 + 0xE18]
	0x035B4FC4 LDR X21, [X21 + 0x7A8]
	0x035B4FC8 LDR X23, [X23 + 0x7A0]
	0x035B4FCC CMP W8, 0x1
	0x035B4FD0 B.EQ 0x35B5040
	0x035B4FD4 CBNZ W8, 0x35B5094
	0x035B4FD8 LDR X0, [X20 + 0x28]
	0x035B4FDC MOVN W8, 0x0
	0x035B4FE0 STR W8, [X20 + 0x10]
	0x035B4FE4 CBZ X0, 0x35B5080
	0x035B4FE8 LDR X8, [X0]
	0x035B4FEC LDR X1, [X8 + 0x2F0]
	0x035B4FF0 LDR X9, [X8 + 0x2E8]
	0x035B4FF4 BLR X9
	0x035B4FF8 MOV X19, X0
	0x035B4FFC CBZ X0, 0x35B5084
	0x035B5000 LDR X8, [X19]
	0x035B5004 LDR X1, [X23]
	0x035B5008 LDRH W9, [X8 + 0x12E]
	0x035B500C CBZ X9, 0x35B5030
	0x035B5010 LDR X10, [X8 + 0xB0]
	0x035B5014 ADD X10, X10, 0x8
	0x035B5018 LDUR X11, [X10 - 0x8]
	0x035B501C CMP X11, X1
	0x035B5020 B.EQ 0x35B5050
	0x035B5024 SUBS X9, X9, 0x1
	0x035B5028 ADD X10, X10, 0x10
	0x035B502C B.NE 0x35B5018
	0x035B5030 MOV X0, X19
	0x035B5034 MOV W2, W31
	0x035B5038 BL 0x1C5C788
	0x035B503C B 0x35B505C
	0x035B5040 LDR X19, [X20 + 0x38]
	0x035B5044 MOVN W8, 0x3
	0x035B5048 STR W8, [X20 + 0x10]
	0x035B504C B 0x35B51E0
	0x035B5050 LDRSW X9, [X10]
	0x035B5054 ADD X8, X8, X9, 0x4, LSL
	0x035B5058 ADD X0, X8, 0x138
	0x035B505C LDP X8, X1, [X0]
	0x035B5060 MOV X0, X19
	0x035B5064 BLR X8
	0x035B5068 LDR X8, [X31 + 0x18]
	0x035B506C MOV X19, X0
	0x035B5070 MOVN W9, 0x2
	0x035B5074 STR X0, [X8 + 0x30]
	0x035B5078 STR W9, [X8 + 0x10]
	0x035B507C B 0x35B509C
	0x035B5080 BL 0x1C16F20
	0x035B5084 BL 0x1C16F20
	0x035B5088 B 0x35B533C
	0x035B508C B 0x35B533C
	0x035B5090 B 0x35B533C
	0x035B5094 MOV W0, W31
	0x035B5098 B 0x35B52E4
	0x035B509C CBZ X19, 0x35B52FC
	0x035B50A0 LDR X8, [X19]
	0x035B50A4 LDR X1, [X22]
	0x035B50A8 LDRH W9, [X8 + 0x12E]
	0x035B50AC CBZ X9, 0x35B50D0
	0x035B50B0 LDR X10, [X8 + 0xB0]
	0x035B50B4 ADD X10, X10, 0x8
	0x035B50B8 LDUR X11, [X10 - 0x8]
	0x035B50BC CMP X11, X1
	0x035B50C0 B.EQ 0x35B50E0
	0x035B50C4 SUBS X9, X9, 0x1
	0x035B50C8 ADD X10, X10, 0x10
	0x035B50CC B.NE 0x35B50B8
	0x035B50D0 MOV X0, X19
	0x035B50D4 MOV W2, W31
	0x035B50D8 BL 0x1C5C788
	0x035B50DC B 0x35B50EC
	0x035B50E0 LDRSW X9, [X10]
	0x035B50E4 ADD X8, X8, X9, 0x4, LSL
	0x035B50E8 ADD X0, X8, 0x138
	0x035B50EC LDP X8, X1, [X0]
	0x035B50F0 MOV X0, X19
	0x035B50F4 BLR X8
	0x035B50F8 MOV W8, W0
	0x035B50FC LDR X0, [X31 + 0x18]
	0x035B5100 TBZ X8, 0x0, 0x35B525C
	0x035B5104 LDR X19, [X0 + 0x30]
	0x035B5108 CBZ X19, 0x35B5308
	0x035B510C LDR X8, [X19]
	0x035B5110 LDR X1, [X21]
	0x035B5114 LDRH W9, [X8 + 0x12E]
	0x035B5118 CBZ X9, 0x35B513C
	0x035B511C LDR X10, [X8 + 0xB0]
	0x035B5120 ADD X10, X10, 0x8
	0x035B5124 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2D000
	009 Move W8, [X20+158]
	010 Move V11, V3
	011 Move V10, V2
	012 Move V9, V1
	013 Move V8, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xB68000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0xB68000
	023 Move X0, [X0+1928]
	024 Call 0x1C17CF4
	025 Move X0, 0xB6D000
	026 Move X0, [X0+976]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6D000
	029 Move X0, [X0+984]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+158], W8
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+584]
	036 Move X1, [X8+592]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {97}
	042 Move X9, 0xB68000
	043 Move X8, [X19]
	044 Move X9, [X9+1920]
	045 Move X0, X19
	046 Move X1, [X9]
	047 Move X9, [X8+424]
	048 Move X2, [X8+432]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {170}
	052 Move X8, [X0]
	053 Move X9, [X8+904]
	054 Move X1, [X8+912]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X9, 0xB68000
	057 Move X8, [X19]
	058 Move X9, [X9+1928]
	059 Move X0, X19
	060 Move V8, V0
	061 Move X1, [X9]
	062 Move X9, [X8+424]
	063 Move X2, [X8+432]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Compare X0, 0
	066 JumpIfEqual {170}
	067 Move X8, [X0]
	068 Move X9, [X8+904]
	069 Move X1, [X8+912]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X9, 0xB6D000
	072 Move X8, [X19]
	073 Move X9, [X9+976]
	074 Move X0, X19
	075 Move V9, V0
	076 Move X1, [X9]
	077 Move X9, [X8+424]
	078 Move X2, [X8+432]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {170}
	082 Move X8, [X0]
	083 Move X9, [X8+904]
	084 Move X1, [X8+912]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X9, 0xB6C000
	087 Move X8, [X19]
	088 Move X9, [X9+984]
	089 Move X0, X19
	090 Move V10, V0
	091 Move X1, [X9]
	092 Move X9, [X8+424]
	093 Move X2, [X8+432]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X0, 0
	096 JumpIfNotEqual {153}
	097 Move X8, [X19]
	098 Move X0, X19
	099 Move X9, [X8+568]
	100 Move X1, [X8+576]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {158}
	106 Move X8, [X19]
	107 Move X0, X19
	108 Move W1, W31
	109 Move X9, [X8+392]
	110 Move X2, [X8+400]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {170}
	114 Move X8, [X0]
	115 Move X9, [X8+904]
	116 Move X1, [X8+912]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, [X19]
	119 Move W1, 1
	120 Move X0, X19
	121 Move V8, V0
	122 Move X9, [X8+392]
	123 Move X2, [X8+400]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {170}
	127 Move X8, [X0]
	128 Move X9, [X8+904]
	129 Move X1, [X8+912]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, [X19]
	132 Move W1, 2
	133 Move X0, X19
	134 Move V9, V0
	135 Move X9, [X8+392]
	136 Move X2, [X8+400]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Compare X0, 0
	139 JumpIfEqual {170}
	140 Move X8, [X0]
	141 Move X9, [X8+904]
	142 Move X1, [X8+912]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, [X19]
	145 Move W1, 3
	146 Move X0, X19
	147 Move V10, V0
	148 Move X9, [X8+392]
	149 Move X2, [X8+400]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Compare X0, 0
	152 JumpIfEqual {170}
	153 Move X8, [X0]
	154 Move X9, [X8+904]
	155 Move X1, [X8+912]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move V11, V0
	158 Move V0, V8
	159 Move V1, V9
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X30, [X31+32]
	163 Move D9, [X31+16]
	164 Move D8, [X31+24]
	165 Move V2, V10
	166 Move V3, V11
	167 Move D11, [X31+64]
	168 Move D10, [X31+72]
	169 Return X0
	170 Call 0x1C17F20

Method: UnityEngine.Quaternion ReadQuaternion()

Disassembly:
	0x035B41A8 ADRP X9, 0xB67000
	0x035B41AC LDR X8, [X19]
	0x035B41B0 LDR X9, [X9 + 0x780]
	0x035B41B4 MOV X0, X19
	0x035B41B8 LDR X1, [X9]
	0x035B41BC LDP X9, X2, [X8 + 0x1A8]
	0x035B41C0 BLR X9
	0x035B41C4 CBZ X0, 0x35B4354
	0x035B41C8 LDR X8, [X0]
	0x035B41CC LDR X9, [X8 + 0x388]
	0x035B41D0 LDR X1, [X8 + 0x390]
	0x035B41D4 BLR X9
	0x035B41D8 ADRP X9, 0xB67000
	0x035B41DC LDR X8, [X19]
	0x035B41E0 LDR X9, [X9 + 0x788]
	0x035B41E4 MOV X0, X19
	0x035B41E8 MOV V8.16B, V0.16B
	0x035B41EC LDR X1, [X9]
	0x035B41F0 LDP X9, X2, [X8 + 0x1A8]
	0x035B41F4 BLR X9
	0x035B41F8 CBZ X0, 0x35B4354

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE25000
	005 Move W8, [X20+1939]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0xB41000
	010 Move X0, [X0+1448]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1939], W8
	014 Move X8, 0xB41000
	015 Move X8, [X8+1448]
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X8, [X8]
	020 Move X8, [X8+184]
	021 Move S0, [X8]
	022 Move S1, [X8+4]
	023 Move S2, [X8+8]
	024 Move S3, [X8+12]
	025 Move X30, [X31+32]
	026 Call JSONNode.ReadQuaternion, X0, X1
	027 Return X0

Method: SimpleJSON.JSONNode WriteQuaternion(UnityEngine.Quaternion aRot)

Disassembly:
	0x035B37A0 MOV V11.16B, V3.16B
	0x035B37A4 MOV V10.16B, V2.16B
	0x035B37A8 MOV V9.16B, V1.16B
	0x035B37AC MOV V8.16B, V0.16B
	0x035B37B0 MOV X19, X0
	0x035B37B4 TBNZ X8, 0x0, 0x35B37F0
	0x035B37B8 ADRP X0, 0xB68000
	0x035B37BC LDR X0, [X0 + 0x780]
	0x035B37C0 BL 0x1C16CF4
	0x035B37C4 ADRP X0, 0xB68000
	0x035B37C8 LDR X0, [X0 + 0x788]
	0x035B37CC BL 0x1C16CF4
	0x035B37D0 ADRP X0, 0xB6D000
	0x035B37D4 LDR X0, [X0 + 0x3D0]
	0x035B37D8 BL 0x1C16CF4
	0x035B37DC ADRP X0, 0xB6D000
	0x035B37E0 LDR X0, [X0 + 0x3D8]
	0x035B37E4 BL 0x1C16CF4
	0x035B37E8 MOVZ W8, 0x1
	0x035B37EC STRB W8, [X20 + 0x98]
	0x035B37F0 LDR X8, [X19]
	0x035B37F4 MOV X0, X19
	0x035B37F8 LDR X9, [X8 + 0x248]
	0x035B37FC LDR X1, [X8 + 0x250]
	0x035B3800 BLR X9
	0x035B3804 TBZ X0, 0x0, 0x35B38C8
	0x035B3808 ADRP X9, 0xB68000
	0x035B380C LDR X8, [X19]
	0x035B3810 LDR X9, [X9 + 0x780]
	0x035B3814 MOV X0, X19
	0x035B3818 LDR X1, [X9]
	0x035B381C LDP X9, X2, [X8 + 0x1A8]
	0x035B3820 BLR X9
	0x035B3824 CBZ X0, 0x35B39B4
	0x035B3828 LDR X8, [X0]
	0x035B382C LDR X9, [X8 + 0x388]
	0x035B3830 LDR X1, [X8 + 0x390]
	0x035B3834 BLR X9
	0x035B3838 ADRP X9, 0xB68000
	0x035B383C LDR X8, [X19]
	0x035B3840 LDR X9, [X9 + 0x788]
	0x035B3844 MOV X0, X19
	0x035B3848 MOV V8.16B, V0.16B
	0x035B384C LDR X1, [X9]
	0x035B3850 LDP X9, X2, [X8 + 0x1A8]
	0x035B3854 BLR X9
	0x035B3858 CBZ X0, 0x35B39B4
	0x035B385C LDR X8, [X0]
	0x035B3860 LDR X9, [X8 + 0x388]
	0x035B3864 LDR X1, [X8 + 0x390]
	0x035B3868 BLR X9
	0x035B386C ADRP X9, 0xB6D000
	0x035B3870 LDR X8, [X19]
	0x035B3874 LDR X9, [X9 + 0x3D0]
	0x035B3878 MOV X0, X19
	0x035B387C MOV V9.16B, V0.16B
	0x035B3880 LDR X1, [X9]
	0x035B3884 LDP X9, X2, [X8 + 0x1A8]
	0x035B3888 BLR X9
	0x035B388C CBZ X0, 0x35B39B4
	0x035B3890 LDR X8, [X0]
	0x035B3894 LDR X9, [X8 + 0x388]
	0x035B3898 LDR X1, [X8 + 0x390]
	0x035B389C BLR X9
	0x035B38A0 ADRP X9, 0xB6D000
	0x035B38A4 LDR X8, [X19]
	0x035B38A8 LDR X9, [X9 + 0x3D8]
	0x035B38AC MOV X0, X19
	0x035B38B0 MOV V10.16B, V0.16B
	0x035B38B4 LDR X1, [X9]
	0x035B38B8 LDP X9, X2, [X8 + 0x1A8]
	0x035B38BC BLR X9
	0x035B38C0 CBNZ X0, 0x35B397C
	0x035B38C4 B 0x35B39B4
	0x035B38C8 LDR X8, [X19]
	0x035B38CC MOV X0, X19
	0x035B38D0 LDR X9, [X8 + 0x238]
	0x035B38D4 LDR X1, [X8 + 0x240]
	0x035B38D8 BLR X9
	0x035B38DC TBZ X0, 0x0, 0x35B3990
	0x035B38E0 LDR X8, [X19]
	0x035B38E4 MOV X0, X19
	0x035B38E8 MOV W1, W31
	0x035B38EC LDP X9, X2, [X8 + 0x188]
	0x035B38F0 BLR X9
	0x035B38F4 CBZ X0, 0x35B39B4
	0x035B38F8 LDR X8, [X0]
	0x035B38FC LDR X9, [X8 + 0x388]
	0x035B3900 LDR X1, [X8 + 0x390]
	0x035B3904 BLR X9
	0x035B3908 LDR X8, [X19]
	0x035B390C MOVZ W1, 0x1
	0x035B3910 MOV X0, X19
	0x035B3914 MOV V8.16B, V0.16B
	0x035B3918 LDP X9, X2, [X8 + 0x188]
	0x035B391C BLR X9
	0x035B3920 CBZ X0, 0x35B39B4
	0x035B3924 LDR X8, [X0]
	0x035B3928 LDR X9, [X8 + 0x388]
	0x035B392C LDR X1, [X8 + 0x390]
	0x035B3930 BLR X9
	0x035B3934 LDR X8, [X19]
	0x035B3938 MOVZ W1, 0x2
	0x035B393C MOV X0, X19
	0x035B3940 MOV V9.16B, V0.16B
	0x035B3944 LDP X9, X2, [X8 + 0x188]
	0x035B3948 BLR X9
	0x035B394C CBZ X0, 0x35B39B4
	0x035B3950 LDR X8, [X0]
	0x035B3954 LDR X9, [X8 + 0x388]
	0x035B3958 LDR X1, [X8 + 0x390]
	0x035B395C BLR X9
	0x035B3960 LDR X8, [X19]
	0x035B3964 MOVZ W1, 0x3
	0x035B3968 MOV X0, X19
	0x035B396C MOV V10.16B, V0.16B
	0x035B3970 LDP X9, X2, [X8 + 0x188]
	0x035B3974 BLR X9
	0x035B3978 CBZ X0, 0x35B39B4
	0x035B397C LDR X8, [X0]
	0x035B3980 LDR X9, [X8 + 0x388]
	0x035B3984 LDR X1, [X8 + 0x390]
	0x035B3988 BLR X9
	0x035B398C MOV V11.16B, V0.16B
	0x035B3990 MOV V0.16B, V8.16B
	0x035B3994 MOV V1.16B, V9.16B
	0x035B3998 LDP X20, X19, [X31 + 0x30]
	0x035B399C LDR X30, [X31 + 0x20]
	0x035B39A0 LDP D9, D8, [X31 + 0x10]
	0x035B39A4 MOV V2.16B, V10.16B
	0x035B39A8 MOV V3.16B, V11.16B
	0x035B39AC LDP D11, D10, [X31], #0x40
	0x035B39B0 RET
	0x035B39B4 BL 0x1C16F20
	0x035B39B8 STP D11, D10, [X31 - 0x40]!
	0x035B39BC STP D9, D8, [X31 + 0x10]
	0x035B39C0 STR X30, [X31 + 0x20]
	0x035B39C4 STP X20, X19, [X31 + 0x30]
	0x035B39C8 ADRP X20, 0xE2D000
	0x035B39CC LDRB W8, [X20 + 0x9A]
	0x035B39D0 MOV V11.16B, V3.16B
	0x035B39D4 MOV V10.16B, V2.16B
	0x035B39D8 MOV V9.16B, V1.16B
	0x035B39DC MOV V8.16B, V0.16B
	0x035B39E0 MOV X19, X0
	0x035B39E4 TBNZ X8, 0x0, 0x35B3A2C
	0x035B39E8 ADRP X0, 0xB41000
	0x035B39EC LDR X0, [X0 + 0x460]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2E000
	009 Move W8, [X20+159]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xB69000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0xB69000
	023 Move X0, [X0+1928]
	024 Call 0x1C17CF4
	025 Move X0, 0xB6E000
	026 Move X0, [X0+976]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6E000
	029 Move X0, [X0+984]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+159], W8
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+584]
	036 Move X1, [X8+592]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X19]
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {103}
	043 Move X9, [X8+616]
	044 Move X2, [X8+624]
	045 Move X20, 0xB69000
	046 Move X20, [X20+1920]
	047 Move W1, 1
	048 Move X0, X19
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X19]
	051 Move X1, [X20]
	052 Move X0, X19
	053 Move X9, [X8+424]
	054 Move X2, [X8+432]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Compare X0, 0
	057 JumpIfEqual {178}
	058 Move X8, [X0]
	059 Move V0, V11
	060 Move X9, [X8+920]
	061 Move X1, [X8+928]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X9, 0xB69000
	064 Move X8, [X19]
	065 Move X9, [X9+1928]
	066 Move X0, X19
	067 Move X1, [X9]
	068 Move X9, [X8+424]
	069 Move X2, [X8+432]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X0, 0
	072 JumpIfEqual {178}
	073 Move X8, [X0]
	074 Move V0, V10
	075 Move X9, [X8+920]
	076 Move X1, [X8+928]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X9, 0xB6E000
	079 Move X8, [X19]
	080 Move X9, [X9+976]
	081 Move X0, X19
	082 Move X1, [X9]
	083 Move X9, [X8+424]
	084 Move X2, [X8+432]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Compare X0, 0
	087 JumpIfEqual {178}
	088 Move X8, [X0]
	089 Move V0, V9
	090 Move X9, [X8+920]
	091 Move X1, [X8+928]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X9, 0xB6E000
	094 Move X8, [X19]
	095 Move X9, [X9+984]
	096 Move X0, X19
	097 Move X1, [X9]
	098 Move X9, [X8+424]
	099 Move X2, [X8+432]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfNotEqual {164}
	103 Move X9, [X8+568]
	104 Move X1, [X8+576]
	105 Move X0, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {169}
	111 Move X8, [X19]
	112 Move W1, 1
	113 Move X0, X19
	114 Move X9, [X8+616]
	115 Move X2, [X8+624]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, [X19]
	118 Move X0, X19
	119 Move W1, W31
	120 Move X9, [X8+392]
	121 Move X2, [X8+400]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X0, 0
	124 JumpIfEqual {178}
	125 Move X8, [X0]
	126 Move V0, V11
	127 Move X9, [X8+920]
	128 Move X1, [X8+928]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X19]
	131 Move W1, 1
	132 Move X0, X19
	133 Move X9, [X8+392]
	134 Move X2, [X8+400]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X0, 0
	137 JumpIfEqual {178}
	138 Move X8, [X0]
	139 Move V0, V10
	140 Move X9, [X8+920]
	141 Move X1, [X8+928]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X8, [X19]
	144 Move W1, 2
	145 Move X0, X19
	146 Move X9, [X8+392]
	147 Move X2, [X8+400]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X0, 0
	150 JumpIfEqual {178}
	151 Move X8, [X0]
	152 Move V0, V9
	153 Move X9, [X8+920]
	154 Move X1, [X8+928]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, [X19]
	157 Move W1, 3
	158 Move X0, X19
	159 Move X9, [X8+392]
	160 Move X2, [X8+400]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Compare X0, 0
	163 JumpIfEqual {178}
	164 Move X8, [X0]
	165 Move V0, V8
	166 Move X9, [X8+920]
	167 Move X1, [X8+928]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X0, X19
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X30, [X31+32]
	173 Move D9, [X31+16]
	174 Move D8, [X31+24]
	175 Move D11, [X31+64]
	176 Move D10, [X31+72]
	177 Return X0
	178 Call 0x1C17F20

Method: UnityEngine.Rect ReadRect(UnityEngine.Rect aDefault)

Disassembly:
	0x035B5128 CMP X11, X1
	0x035B512C B.EQ 0x35B514C
	0x035B5130 SUBS X9, X9, 0x1
	0x035B5134 ADD X10, X10, 0x10
	0x035B5138 B.NE 0x35B5124
	0x035B513C MOV X0, X19
	0x035B5140 MOV W2, W31
	0x035B5144 BL 0x1C5C788
	0x035B5148 B 0x35B5158
	0x035B514C LDRSW X9, [X10]
	0x035B5150 ADD X8, X8, X9, 0x4, LSL
	0x035B5154 ADD X0, X8, 0x138
	0x035B5158 LDP X8, X1, [X0]
	0x035B515C MOV X0, X19
	0x035B5160 BLR X8
	0x035B5164 CBZ X0, 0x35B5300
	0x035B5168 BL 0x35AC754
	0x035B516C MOV X19, X0
	0x035B5170 CBZ X0, 0x35B5304
	0x035B5174 LDR X8, [X19]
	0x035B5178 LDR X1, [X23]
	0x035B517C LDRH W9, [X8 + 0x12E]
	0x035B5180 CBZ X9, 0x35B51A4
	0x035B5184 LDR X10, [X8 + 0xB0]
	0x035B5188 ADD X10, X10, 0x8
	0x035B518C LDUR X11, [X10 - 0x8]
	0x035B5190 CMP X11, X1
	0x035B5194 B.EQ 0x35B51B4
	0x035B5198 SUBS X9, X9, 0x1
	0x035B519C ADD X10, X10, 0x10
	0x035B51A0 B.NE 0x35B518C
	0x035B51A4 MOV X0, X19
	0x035B51A8 MOV W2, W31
	0x035B51AC BL 0x1C5C788
	0x035B51B0 B 0x35B51C0
	0x035B51B4 LDRSW X9, [X10]
	0x035B51B8 ADD X8, X8, X9, 0x4, LSL
	0x035B51BC ADD X0, X8, 0x138
	0x035B51C0 LDP X8, X1, [X0]
	0x035B51C4 MOV X0, X19
	0x035B51C8 BLR X8
	0x035B51CC LDR X8, [X31 + 0x18]
	0x035B51D0 MOVN W9, 0x3
	0x035B51D4 MOV X19, X0
	0x035B51D8 STR X0, [X8 + 0x38]
	0x035B51DC STR W9, [X8 + 0x10]
	0x035B51E0 CBZ X19, 0x35B52F8
	0x035B51E4 LDR X8, [X19]
	0x035B51E8 LDR X1, [X22]
	0x035B51EC LDRH W9, [X8 + 0x12E]
	0x035B51F0 CBZ X9, 0x35B5214
	0x035B51F4 LDR X10, [X8 + 0xB0]
	0x035B51F8 ADD X10, X10, 0x8
	0x035B51FC LDUR X11, [X10 - 0x8]
	0x035B5200 CMP X11, X1
	0x035B5204 B.EQ 0x35B5224
	0x035B5208 SUBS X9, X9, 0x1
	0x035B520C ADD X10, X10, 0x10
	0x035B5210 B.NE 0x35B51FC
	0x035B5214 MOV X0, X19
	0x035B5218 MOV W2, W31
	0x035B521C BL 0x1C5C788
	0x035B5220 B 0x35B5230
	0x035B5224 LDRSW X9, [X10]
	0x035B5228 ADD X8, X8, X9, 0x4, LSL
	0x035B522C ADD X0, X8, 0x138
	0x035B5230 LDP X8, X1, [X0]
	0x035B5234 MOV X0, X19
	0x035B5238 BLR X8
	0x035B523C MOV W8, W0
	0x035B5240 LDR X0, [X31 + 0x18]
	0x035B5244 TBNZ X8, 0x0, 0x35B5270
	0x035B5248 BL 0x35B5388
	0x035B524C LDR X8, [X31 + 0x18]
	0x035B5250 LDR X19, [X8 + 0x30]
	0x035B5254 STR X31, [X8 + 0x38]
	0x035B5258 B 0x35B509C
	0x035B525C BL 0x35B5438
	0x035B5260 LDR X8, [X31 + 0x18]
	0x035B5264 MOV W0, W31
	0x035B5268 STR X31, [X8 + 0x30]
	0x035B526C B 0x35B52E4
	0x035B5270 LDR X19, [X0 + 0x38]
	0x035B5274 CBZ X19, 0x35B530C
	0x035B5278 LDR X8, [X19]
	0x035B527C LDR X1, [X21]
	0x035B5280 LDRH W9, [X8 + 0x12E]
	0x035B5284 CBZ X9, 0x35B52A8
	0x035B5288 LDR X10, [X8 + 0xB0]
	0x035B528C ADD X10, X10, 0x8
	0x035B5290 LDUR X11, [X10 - 0x8]
	0x035B5294 CMP X11, X1
	0x035B5298 B.EQ 0x35B52B8
	0x035B529C SUBS X9, X9, 0x1
	0x035B52A0 ADD X10, X10, 0x10
	0x035B52A4 B.NE 0x35B5290
	0x035B52A8 MOV X0, X19
	0x035B52AC MOV W2, W31
	0x035B52B0 BL 0x1C5C788
	0x035B52B4 B 0x35B52C4
	0x035B52B8 LDRSW X9, [X10]
	0x035B52BC ADD X8, X8, X9, 0x4, LSL
	0x035B52C0 ADD X0, X8, 0x138
	0x035B52C4 LDP X8, X1, [X0]
	0x035B52C8 MOV X0, X19
	0x035B52CC BLR X8
	0x035B52D0 LDR X9, [X31 + 0x18]
	0x035B52D4 MOV X8, X0
	0x035B52D8 MOVZ W0, 0x1
	0x035B52DC STR X8, [X9 + 0x18]
	0x035B52E0 STR W0, [X9 + 0x10]
	0x035B52E4 LDP X20, X19, [X31 + 0x40]
	0x035B52E8 LDP X22, X21, [X31 + 0x30]
	0x035B52EC LDP X30, X23, [X31 + 0x20]
	0x035B52F0 ADD X31, X31, 0x50
	0x035B52F4 RET
	0x035B52F8 BL 0x1C16F20
	0x035B52FC BL 0x1C16F20
	0x035B5300 BL 0x1C16F20
	0x035B5304 BL 0x1C16F20
	0x035B5308 BL 0x1C16F20
	0x035B530C BL 0x1C16F20
	0x035B5310 B 0x35B533C
	0x035B5314 B 0x35B533C
	0x035B5318 B 0x35B533C
	0x035B531C B 0x35B533C
	0x035B5320 B 0x35B533C
	0x035B5324 B 0x35B533C
	0x035B5328 B 0x35B533C
	0x035B532C B 0x35B533C
	0x035B5330 B 0x35B533C
	0x035B5334 B 0x35B533C
	0x035B5338 B 0x35B533C
	0x035B533C CMP W1, 0x1
	0x035B5340 B.NE 0x35B5370
	0x035B5344 BL 0x3EB1AD0
	0x035B5348 LDR X19, [X0]
	0x035B534C STR X19, [X31 + 0x8]
	0x035B5350 BL 0x3EB1AE0
	0x035B5354 CBZ X19, 0x35B5094

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2C000
	009 Move W8, [X20+160]
	010 Move V11, V3
	011 Move V10, V2
	012 Move V9, V1
	013 Move V8, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xB67000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6C000
	023 Move X0, [X0+1000]
	024 Call 0x1C17CF4
	025 Move X0, 0xB67000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move X0, 0xB69000
	029 Move X0, [X0+2928]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+160], W8
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+584]
	036 Move X1, [X8+592]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {97}
	042 Move X9, 0xB67000
	043 Move X8, [X19]
	044 Move X9, [X9+1920]
	045 Move X0, X19
	046 Move X1, [X9]
	047 Move X9, [X8+424]
	048 Move X2, [X8+432]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {170}
	052 Move X8, [X0]
	053 Move X9, [X8+904]
	054 Move X1, [X8+912]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X9, 0xB67000
	057 Move X8, [X19]
	058 Move X9, [X9+1928]
	059 Move X0, X19
	060 Move V8, V0
	061 Move X1, [X9]
	062 Move X9, [X8+424]
	063 Move X2, [X8+432]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Compare X0, 0
	066 JumpIfEqual {170}
	067 Move X8, [X0]
	068 Move X9, [X8+904]
	069 Move X1, [X8+912]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X9, 0xB69000
	072 Move X8, [X19]
	073 Move X9, [X9+2928]
	074 Move X0, X19
	075 Move V9, V0
	076 Move X1, [X9]
	077 Move X9, [X8+424]
	078 Move X2, [X8+432]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {170}
	082 Move X8, [X0]
	083 Move X9, [X8+904]
	084 Move X1, [X8+912]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X9, 0xB6C000
	087 Move X8, [X19]
	088 Move X9, [X9+1000]
	089 Move X0, X19
	090 Move V10, V0
	091 Move X1, [X9]
	092 Move X9, [X8+424]
	093 Move X2, [X8+432]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X0, 0
	096 JumpIfNotEqual {153}
	097 Move X8, [X19]
	098 Move X0, X19
	099 Move X9, [X8+568]
	100 Move X1, [X8+576]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {158}
	106 Move X8, [X19]
	107 Move X0, X19
	108 Move W1, W31
	109 Move X9, [X8+392]
	110 Move X2, [X8+400]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {170}
	114 Move X8, [X0]
	115 Move X9, [X8+904]
	116 Move X1, [X8+912]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, [X19]
	119 Move W1, 1
	120 Move X0, X19
	121 Move V8, V0
	122 Move X9, [X8+392]
	123 Move X2, [X8+400]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {170}
	127 Move X8, [X0]
	128 Move X9, [X8+904]
	129 Move X1, [X8+912]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, [X19]
	132 Move W1, 2
	133 Move X0, X19
	134 Move V9, V0
	135 Move X9, [X8+392]
	136 Move X2, [X8+400]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Compare X0, 0
	139 JumpIfEqual {170}
	140 Move X8, [X0]
	141 Move X9, [X8+904]
	142 Move X1, [X8+912]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, [X19]
	145 Move W1, 3
	146 Move X0, X19
	147 Move V10, V0
	148 Move X9, [X8+392]
	149 Move X2, [X8+400]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Compare X0, 0
	152 JumpIfEqual {170}
	153 Move X8, [X0]
	154 Move X9, [X8+904]
	155 Move X1, [X8+912]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move V11, V0
	158 Move V0, V8
	159 Move V1, V9
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X30, [X31+32]
	163 Move D9, [X31+16]
	164 Move D8, [X31+24]
	165 Move V2, V10
	166 Move V3, V11
	167 Move D11, [X31+64]
	168 Move D10, [X31+72]
	169 Return X0
	170 Call 0x1C17F20

Method: UnityEngine.Rect ReadRect()

Disassembly:
	0x035B421C MOV V9.16B, V0.16B
	0x035B4220 LDR X1, [X9]
	0x035B4224 LDP X9, X2, [X8 + 0x1A8]
	0x035B4228 BLR X9
	0x035B422C CBZ X0, 0x35B4354

ISIL:
	001 Move S0, W31
	002 Move S1, W31
	003 Move S2, W31
	004 Move S3, W31
	005 Call JSONNode.ReadRect, X0, X1
	006 Return X0

Method: SimpleJSON.JSONNode WriteRect(UnityEngine.Rect aRect)

Disassembly:
	0x035B3A84 MOV V8.16B, V0.16B
	0x035B3A88 LDR X1, [X9]
	0x035B3A8C LDP X9, X2, [X8 + 0x1A8]
	0x035B3A90 BLR X9
	0x035B3A94 CBZ X0, 0x35B3C4C
	0x035B3A98 LDR X8, [X0]
	0x035B3A9C LDR X9, [X8 + 0x388]
	0x035B3AA0 LDR X1, [X8 + 0x390]
	0x035B3AA4 BLR X9
	0x035B3AA8 ADRP X9, 0xB6D000
	0x035B3AAC LDR X8, [X19]
	0x035B3AB0 LDR X9, [X9 + 0x3C0]
	0x035B3AB4 MOV X0, X19
	0x035B3AB8 MOV V9.16B, V0.16B
	0x035B3ABC LDR X1, [X9]
	0x035B3AC0 LDP X9, X2, [X8 + 0x1A8]
	0x035B3AC4 BLR X9
	0x035B3AC8 CBZ X0, 0x35B3C4C
	0x035B3ACC LDR X8, [X0]
	0x035B3AD0 LDR X9, [X8 + 0x388]
	0x035B3AD4 LDR X1, [X8 + 0x390]
	0x035B3AD8 BLR X9
	0x035B3ADC ADRP X20, 0xB6D000
	0x035B3AE0 LDR X8, [X19]
	0x035B3AE4 LDR X20, [X20 + 0x3B0]
	0x035B3AE8 MOV X0, X19
	0x035B3AEC MOV V10.16B, V0.16B
	0x035B3AF0 LDR X9, [X8 + 0x2F8]
	0x035B3AF4 LDR X1, [X20]
	0x035B3AF8 LDR X2, [X8 + 0x300]
	0x035B3AFC BLR X9
	0x035B3B00 TBZ X0, 0x0, 0x35B3C04
	0x035B3B04 LDR X8, [X19]
	0x035B3B08 LDR X1, [X20]
	0x035B3B0C MOV X0, X19
	0x035B3B10 LDP X9, X2, [X8 + 0x1A8]
	0x035B3B14 BLR X9
	0x035B3B18 CBNZ X0, 0x35B3BEC
	0x035B3B1C B 0x35B3C4C
	0x035B3B20 LDR X8, [X19]
	0x035B3B24 MOV X0, X19
	0x035B3B28 LDR X9, [X8 + 0x238]
	0x035B3B2C LDR X1, [X8 + 0x240]
	0x035B3B30 BLR X9
	0x035B3B34 TBZ X0, 0x0, 0x35B3C28
	0x035B3B38 LDR X8, [X19]
	0x035B3B3C MOV X0, X19
	0x035B3B40 MOV W1, W31
	0x035B3B44 LDP X9, X2, [X8 + 0x188]
	0x035B3B48 BLR X9
	0x035B3B4C CBZ X0, 0x35B3C4C
	0x035B3B50 LDR X8, [X0]
	0x035B3B54 LDR X9, [X8 + 0x388]
	0x035B3B58 LDR X1, [X8 + 0x390]
	0x035B3B5C BLR X9
	0x035B3B60 LDR X8, [X19]
	0x035B3B64 MOVZ W1, 0x1
	0x035B3B68 MOV X0, X19
	0x035B3B6C MOV V8.16B, V0.16B
	0x035B3B70 LDP X9, X2, [X8 + 0x188]
	0x035B3B74 BLR X9
	0x035B3B78 CBZ X0, 0x35B3C4C
	0x035B3B7C LDR X8, [X0]
	0x035B3B80 LDR X9, [X8 + 0x388]
	0x035B3B84 LDR X1, [X8 + 0x390]
	0x035B3B88 BLR X9
	0x035B3B8C LDR X8, [X19]
	0x035B3B90 MOVZ W1, 0x2
	0x035B3B94 MOV X0, X19
	0x035B3B98 MOV V9.16B, V0.16B
	0x035B3B9C LDP X9, X2, [X8 + 0x188]
	0x035B3BA0 BLR X9
	0x035B3BA4 CBZ X0, 0x35B3C4C
	0x035B3BA8 LDR X8, [X0]
	0x035B3BAC LDR X9, [X8 + 0x388]
	0x035B3BB0 LDR X1, [X8 + 0x390]
	0x035B3BB4 BLR X9
	0x035B3BB8 LDR X8, [X19]
	0x035B3BBC MOV X0, X19
	0x035B3BC0 MOV V10.16B, V0.16B
	0x035B3BC4 LDP X9, X1, [X8 + 0x1E8]
	0x035B3BC8 BLR X9
	0x035B3BCC CMP W0, 0x3
	0x035B3BD0 B.LE 0x35B3C04
	0x035B3BD4 LDR X8, [X19]
	0x035B3BD8 MOVZ W1, 0x3
	0x035B3BDC MOV X0, X19
	0x035B3BE0 LDP X9, X2, [X8 + 0x188]
	0x035B3BE4 BLR X9
	0x035B3BE8 CBZ X0, 0x35B3C4C
	0x035B3BEC LDR X8, [X0]
	0x035B3BF0 LDR X9, [X8 + 0x388]
	0x035B3BF4 LDR X1, [X8 + 0x390]
	0x035B3BF8 BLR X9
	0x035B3BFC MOV V11.16B, V0.16B
	0x035B3C00 B 0x35B3C28
	0x035B3C04 ADRP X19, 0xB41000
	0x035B3C08 LDR X19, [X19 + 0x460]
	0x035B3C0C LDR X0, [X19]
	0x035B3C10 LDR W8, [X0 + 0xE0]
	0x035B3C14 CBNZ W8, 0x35B3C20
	0x035B3C18 BL 0x1C16DFC
	0x035B3C1C LDR X0, [X19]
	0x035B3C20 LDR X8, [X0 + 0xB8]
	0x035B3C24 LDR V11, [X8 + 0x4]
	0x035B3C28 MOV V0.16B, V8.16B
	0x035B3C2C MOV V1.16B, V9.16B
	0x035B3C30 LDP X20, X19, [X31 + 0x30]
	0x035B3C34 LDR X30, [X31 + 0x20]
	0x035B3C38 LDP D9, D8, [X31 + 0x10]
	0x035B3C3C MOV V2.16B, V10.16B
	0x035B3C40 MOV V3.16B, V11.16B
	0x035B3C44 LDP D11, D10, [X31], #0x40
	0x035B3C48 RET
	0x035B3C4C BL 0x1C16F20
	0x035B3C50 STP X30, X23, [X31 - 0x30]!
	0x035B3C54 STP X22, X21, [X31 + 0x10]
	0x035B3C58 STP X20, X19, [X31 + 0x20]
	0x035B3C5C ADRP X21, 0xE2D000
	0x035B3C60 LDRB W8, [X21 + 0x9C]
	0x035B3C64 MOV X20, X1
	0x035B3C68 MOV X19, X0
	0x035B3C6C TBNZ X8, 0x0, 0x35B3CB4
	0x035B3C70 ADRP X0, 0xB41000
	0x035B3C74 LDR X0, [X0 + 0x460]
	0x035B3C78 BL 0x1C16CF4
	0x035B3C7C ADRP X0, 0xB6D000
	0x035B3C80 LDR X0, [X0 + 0x3B0]
	0x035B3C84 BL 0x1C16CF4
	0x035B3C88 ADRP X0, 0xB6D000
	0x035B3C8C LDR X0, [X0 + 0x3B8]
	0x035B3C90 BL 0x1C16CF4
	0x035B3C94 ADRP X0, 0xB6D000
	0x035B3C98 LDR X0, [X0 + 0x3C0]
	0x035B3C9C BL 0x1C16CF4
	0x035B3CA0 ADRP X0, 0xB6D000
	0x035B3CA4 LDR X0, [X0 + 0x3A8]
	0x035B3CA8 BL 0x1C16CF4
	0x035B3CAC MOVZ W8, 0x1
	0x035B3CB0 STRB W8, [X21 + 0x9C]
	0x035B3CB4 LDR X8, [X19]
	0x035B3CB8 MOV X0, X19
	0x035B3CBC LDR X9, [X8 + 0x248]
	0x035B3CC0 LDR X1, [X8 + 0x250]
	0x035B3CC4 BLR X9
	0x035B3CC8 TBZ X0, 0x0, 0x35B3DB4
	0x035B3CCC ADRP X9, 0xB6D000
	0x035B3CD0 LDR X8, [X19]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE2E000
	009 Move W8, [X20+161]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xB69000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6E000
	023 Move X0, [X0+1000]
	024 Call 0x1C17CF4
	025 Move X0, 0xB69000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6B000
	029 Move X0, [X0+2928]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+161], W8
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+584]
	036 Move X1, [X8+592]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X19]
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {103}
	043 Move X9, [X8+616]
	044 Move X2, [X8+624]
	045 Move X20, 0xB69000
	046 Move X20, [X20+1920]
	047 Move W1, 1
	048 Move X0, X19
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X19]
	051 Move X1, [X20]
	052 Move X0, X19
	053 Move X9, [X8+424]
	054 Move X2, [X8+432]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Compare X0, 0
	057 JumpIfEqual {178}
	058 Move X8, [X0]
	059 Move V0, V11
	060 Move X9, [X8+920]
	061 Move X1, [X8+928]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X9, 0xB69000
	064 Move X8, [X19]
	065 Move X9, [X9+1928]
	066 Move X0, X19
	067 Move X1, [X9]
	068 Move X9, [X8+424]
	069 Move X2, [X8+432]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X0, 0
	072 JumpIfEqual {178}
	073 Move X8, [X0]
	074 Move V0, V10
	075 Move X9, [X8+920]
	076 Move X1, [X8+928]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X9, 0xB6B000
	079 Move X8, [X19]
	080 Move X9, [X9+2928]
	081 Move X0, X19
	082 Move X1, [X9]
	083 Move X9, [X8+424]
	084 Move X2, [X8+432]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Compare X0, 0
	087 JumpIfEqual {178}
	088 Move X8, [X0]
	089 Move V0, V9
	090 Move X9, [X8+920]
	091 Move X1, [X8+928]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X9, 0xB6E000
	094 Move X8, [X19]
	095 Move X9, [X9+1000]
	096 Move X0, X19
	097 Move X1, [X9]
	098 Move X9, [X8+424]
	099 Move X2, [X8+432]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfNotEqual {164}
	103 Move X9, [X8+568]
	104 Move X1, [X8+576]
	105 Move X0, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {169}
	111 Move X8, [X19]
	112 Move W1, 1
	113 Move X0, X19
	114 Move X9, [X8+616]
	115 Move X2, [X8+624]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, [X19]
	118 Move X0, X19
	119 Move W1, W31
	120 Move X9, [X8+392]
	121 Move X2, [X8+400]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X0, 0
	124 JumpIfEqual {178}
	125 Move X8, [X0]
	126 Move V0, V11
	127 Move X9, [X8+920]
	128 Move X1, [X8+928]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X19]
	131 Move W1, 1
	132 Move X0, X19
	133 Move X9, [X8+392]
	134 Move X2, [X8+400]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X0, 0
	137 JumpIfEqual {178}
	138 Move X8, [X0]
	139 Move V0, V10
	140 Move X9, [X8+920]
	141 Move X1, [X8+928]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X8, [X19]
	144 Move W1, 2
	145 Move X0, X19
	146 Move X9, [X8+392]
	147 Move X2, [X8+400]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X0, 0
	150 JumpIfEqual {178}
	151 Move X8, [X0]
	152 Move V0, V9
	153 Move X9, [X8+920]
	154 Move X1, [X8+928]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, [X19]
	157 Move W1, 3
	158 Move X0, X19
	159 Move X9, [X8+392]
	160 Move X2, [X8+400]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Compare X0, 0
	163 JumpIfEqual {178}
	164 Move X8, [X0]
	165 Move V0, V8
	166 Move X9, [X8+920]
	167 Move X1, [X8+928]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X0, X19
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X30, [X31+32]
	173 Move D9, [X31+16]
	174 Move D8, [X31+24]
	175 Move D11, [X31+64]
	176 Move D10, [X31+72]
	177 Return X0
	178 Call 0x1C17F20

Method: UnityEngine.RectOffset ReadRectOffset(UnityEngine.RectOffset aDefault)

Disassembly:
	0x035B5358 ADD X8, X31, 0x8
	0x035B535C ADD X0, X8, 0x8
	0x035B5360 BL 0x1BC1914
	0x035B5364 MOV X0, X19
	0x035B5368 BL 0x1C16F18
	0x035B536C CBNZ X19, 0x35B5374
	0x035B5370 BL 0x1D2C690
	0x035B5374 LDR X0, [X31 + 0x18]
	0x035B5378 BL 0x35B4EA8
	0x035B537C MOV X0, X19
	0x035B5380 BL 0x1C16F18
	0x035B5384 BL 0x1990590
	0x035B5388 STR X30, [X31 - 0x20]!
	0x035B538C STP X20, X19, [X31 + 0x10]
	0x035B5390 ADRP X19, 0xE2B000
	0x035B5394 LDRB W8, [X19 + 0xB2]
	0x035B5398 MOV X20, X0
	0x035B539C TBNZ X8, 0x0, 0x35B53B4
	0x035B53A0 ADRP X0, 0xB3E000
	0x035B53A4 LDR X0, [X0 + 0xE00]
	0x035B53A8 BL 0x1C16CF4
	0x035B53AC MOVZ W8, 0x1
	0x035B53B0 STRB W8, [X19 + 0xB2]
	0x035B53B4 LDR X19, [X20 + 0x38]
	0x035B53B8 MOVN W8, 0x2
	0x035B53BC STR W8, [X20 + 0x10]
	0x035B53C0 CBZ X19, 0x35B540C
	0x035B53C4 ADRP X10, 0xB3E000
	0x035B53C8 LDR X8, [X19]
	0x035B53CC LDR X10, [X10 + 0xE00]
	0x035B53D0 LDRH W9, [X8 + 0x12E]
	0x035B53D4 LDR X1, [X10]
	0x035B53D8 CBZ X9, 0x35B53FC
	0x035B53DC LDR X10, [X8 + 0xB0]
	0x035B53E0 ADD X10, X10, 0x8
	0x035B53E4 LDUR X11, [X10 - 0x8]
	0x035B53E8 CMP X11, X1
	0x035B53EC B.EQ 0x35B5418
	0x035B53F0 SUBS X9, X9, 0x1
	0x035B53F4 ADD X10, X10, 0x10
	0x035B53F8 B.NE 0x35B53E4
	0x035B53FC MOV X0, X19
	0x035B5400 MOV W2, W31
	0x035B5404 BL 0x1C5C788
	0x035B5408 B 0x35B5424
	0x035B540C LDP X20, X19, [X31 + 0x10]
	0x035B5410 LDR X30, [X31], #0x20
	0x035B5414 RET
	0x035B5418 LDRSW X9, [X10]
	0x035B541C ADD X8, X8, X9, 0x4, LSL
	0x035B5420 ADD X0, X8, 0x138
	0x035B5424 LDP X2, X1, [X0]
	0x035B5428 MOV X0, X19
	0x035B542C LDP X20, X19, [X31 + 0x10]
	0x035B5430 LDR X30, [X31], #0x20
	0x035B5434 BR X2
	0x035B5438 STR X30, [X31 - 0x20]!
	0x035B543C STP X20, X19, [X31 + 0x10]
	0x035B5440 ADRP X19, 0xE2B000
	0x035B5444 LDRB W8, [X19 + 0xB1]
	0x035B5448 MOV X20, X0
	0x035B544C TBNZ X8, 0x0, 0x35B5464
	0x035B5450 ADRP X0, 0xB3E000
	0x035B5454 LDR X0, [X0 + 0xE00]
	0x035B5458 BL 0x1C16CF4
	0x035B545C MOVZ W8, 0x1
	0x035B5460 STRB W8, [X19 + 0xB1]
	0x035B5464 LDR X19, [X20 + 0x30]
	0x035B5468 MOVN W8, 0x0
	0x035B546C STR W8, [X20 + 0x10]
	0x035B5470 CBZ X19, 0x35B54BC
	0x035B5474 ADRP X10, 0xB3E000
	0x035B5478 LDR X8, [X19]
	0x035B547C LDR X10, [X10 + 0xE00]
	0x035B5480 LDRH W9, [X8 + 0x12E]
	0x035B5484 LDR X1, [X10]
	0x035B5488 CBZ X9, 0x35B54AC
	0x035B548C LDR X10, [X8 + 0xB0]
	0x035B5490 ADD X10, X10, 0x8
	0x035B5494 LDUR X11, [X10 - 0x8]
	0x035B5498 CMP X11, X1
	0x035B549C B.EQ 0x35B54C8
	0x035B54A0 SUBS X9, X9, 0x1
	0x035B54A4 ADD X10, X10, 0x10
	0x035B54A8 B.NE 0x35B5494
	0x035B54AC MOV X0, X19
	0x035B54B0 MOV W2, W31
	0x035B54B4 BL 0x1C5C788
	0x035B54B8 B 0x35B54D4
	0x035B54BC LDP X20, X19, [X31 + 0x10]
	0x035B54C0 LDR X30, [X31], #0x20
	0x035B54C4 RET
	0x035B54C8 LDRSW X9, [X10]
	0x035B54CC ADD X8, X8, X9, 0x4, LSL
	0x035B54D0 ADD X0, X8, 0x138
	0x035B54D4 LDP X2, X1, [X0]
	0x035B54D8 MOV X0, X19
	0x035B54DC LDP X20, X19, [X31 + 0x10]
	0x035B54E0 LDR X30, [X31], #0x20
	0x035B54E4 BR X2
	0x035B54E8 LDR X0, [X0 + 0x18]
	0x035B54EC RET
	0x035B54F0 STP X30, X19, [X31 - 0x10]!
	0x035B54F4 ADRP X0, 0xB3E000
	0x035B54F8 LDR X0, [X0 + 0xB40]
	0x035B54FC BL 0x1C16D08
	0x035B5500 BL 0x1C16F10
	0x035B5504 MOV X1, X31
	0x035B5508 MOV X19, X0
	0x035B550C BL 0x3380310
	0x035B5510 ADRP X0, 0xB82000
	0x035B5514 LDR X0, [X0 + 0x7B0]
	0x035B5518 BL 0x1C16D08
	0x035B551C MOV X1, X0
	0x035B5520 MOV X0, X19
	0x035B5524 BL 0x1C16DEC
	0x035B5528 LDR X0, [X0 + 0x18]
	0x035B552C RET
	0x035B5530 STR X30, [X31 - 0x20]!
	0x035B5534 STP X20, X19, [X31 + 0x10]
	0x035B5538 ADRP X20, 0xE2B000
	0x035B553C LDRB W8, [X20 + 0xB3]
	0x035B5540 MOV X19, X0
	0x035B5544 TBNZ X8, 0x0, 0x35B555C
	0x035B5548 ADRP X0, 0xB82000
	0x035B554C LDR X0, [X0 + 0x638]
	0x035B5550 BL 0x1C16CF4
	0x035B5554 MOVZ W8, 0x1
	0x035B5558 STRB W8, [X20 + 0xB3]
	0x035B555C LDR W8, [X19 + 0x10]
	0x035B5560 ADDS W31, W8, 0x2
	0x035B5564 B.NE 0x35B5584
	0x035B5568 LDR W20, [X19 + 0x20]
	0x035B556C MOV X0, X31
	0x035B5570 BL 0x33C151C
	0x035B5574 CMP W20, W0
	0x035B5578 B.NE 0x35B5584
	0x035B557C STR W31, [X19 + 0x10]
	0x035B5580 B 0x35B55BC
	0x035B5584 ADRP X8, 0xB82000
	0x035B5588 LDR X8, [X8 + 0x638]
	0x035B558C LDR X0, [X8]
	0x035B5590 BL 0x1C16F10
	0x035B5594 MOV X1, X31
	0x035B5598 MOV X20, X0
	0x035B559C BL 0x33BDD8C
	0x035B55A0 MOV X0, X31
	0x035B55A4 STR W31, [X20 + 0x10]
	0x035B55A8 BL 0x33C151C
	0x035B55AC STR W0, [X20 + 0x20]
	0x035B55B0 LDR X8, [X19 + 0x28]
	0x035B55B4 MOV X19, X20
	0x035B55B8 STR X8, [X20 + 0x28]
	0x035B55BC MOV X0, X19
	0x035B55C0 LDP X20, X19, [X31 + 0x10]
	0x035B55C4 LDR X30, [X31], #0x20
	0x035B55C8 RET
	0x035B55CC B 0x35B5530
	0x035B55D0 LDRB W0, [X0 + 0x18]
	0x035B55D4 RET
	0x035B55D8 AND W8, W1, 0x1
	0x035B55DC STRB W8, [X0 + 0x18]
	0x035B55E0 RET
	0x035B55E4 MOVZ W0, 0x1
	0x035B55E8 RET
	0x035B55EC MOVZ W0, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE2C000
	008 Move W8, [X21+162]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0xB69000
	016 Move X0, [X0+880]
	017 Call 0x1C17CF4
	018 Move X0, 0xB67000
	019 Move X0, [X0+3008]
	020 Call 0x1C17CF4
	021 Move X0, 0xB66000
	022 Move X0, [X0+1224]
	023 Call 0x1C17CF4
	024 Move X0, 0xB83000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xB78000
	028 Move X0, [X0+2872]
	029 Call 0x1C17CF4
	030 Move X0, 0xB78000
	031 Move X0, [X0+2888]
	032 Call 0x1C17CF4
	033 Move X0, 0xB83000
	034 Move X0, [X0+1888]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+162], W8
	038 Compare X19, 0
	039 JumpIfEqual {60}
	040 Move X9, 0xB67000
	041 Move X9, [X9+3008]
	042 Move X8, [X19]
	043 Move X10, [X9]
	044 Move W9, [X8+304]
	045 Move W11, [X10+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X12, [X8+200]
	048 Add X11, X12, X11
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, 0xB69000
	052 Move X10, [X10+880]
	053 Move X10, [X10]
	054 Move W11, [X10+304]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X9, [X8+200]
	057 Add X9, X9, X11
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X20
	061 Move X9, 0xB78000
	062 Move X9, [X9+2872]
	063 Move X0, X19
	064 Move X1, [X9]
	065 Move X9, [X8+424]
	066 Move X2, [X8+432]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X0, 0
	069 JumpIfEqual {186}
	070 Move X8, [X0]
	071 Move X9, [X8+872]
	072 Move X1, [X8+880]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X9, 0xB83000
	075 Move X8, [X19]
	076 Move X9, [X9+1888]
	077 Move W20, W0
	078 Move X0, X19
	079 Move X1, [X9]
	080 Move X9, [X8+424]
	081 Move X2, [X8+432]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X0, 0
	084 JumpIfEqual {186}
	085 Move X8, [X0]
	086 Move X9, [X8+872]
	087 Move X1, [X8+880]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X9, 0xB78000
	090 Move X8, [X19]
	091 Move X9, [X9+2888]
	092 Move W21, W0
	093 Move X0, X19
	094 Move X1, [X9]
	095 Move X9, [X8+424]
	096 Move X2, [X8+432]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X0, 0
	099 JumpIfEqual {186}
	100 Move X8, [X0]
	101 Move X9, [X8+872]
	102 Move X1, [X8+880]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X9, 0xB83000
	105 Move X8, [X19]
	106 Move X9, [X9+1880]
	107 Move W22, W0
	108 Move X0, X19
	109 Move X1, [X9]
	110 Move X9, [X8+424]
	111 Move X2, [X8+432]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Compare X0, 0
	114 JumpIfNotEqual {161}
	115 Move X9, [X8+392]
	116 Move X2, [X8+400]
	117 Move X0, X19
	118 Move W1, W31
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X0, 0
	121 JumpIfEqual {186}
	122 Move X8, [X0]
	123 Move X9, [X8+872]
	124 Move X1, [X8+880]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X8, [X19]
	127 Move W20, W0
	128 Move W1, 1
	129 Move X0, X19
	130 Move X9, [X8+392]
	131 Move X2, [X8+400]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Compare X0, 0
	134 JumpIfEqual {186}
	135 Move X8, [X0]
	136 Move X9, [X8+872]
	137 Move X1, [X8+880]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X8, [X19]
	140 Move W21, W0
	141 Move W1, 2
	142 Move X0, X19
	143 Move X9, [X8+392]
	144 Move X2, [X8+400]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Compare X0, 0
	147 JumpIfEqual {186}
	148 Move X8, [X0]
	149 Move X9, [X8+872]
	150 Move X1, [X8+880]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, [X19]
	153 Move W22, W0
	154 Move W1, 3
	155 Move X0, X19
	156 Move X9, [X8+392]
	157 Move X2, [X8+400]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Compare X0, 0
	160 JumpIfEqual {186}
	161 Move X8, [X0]
	162 Move X9, [X8+872]
	163 Move X1, [X8+880]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X8, 0xB66000
	166 Move X8, [X8+1224]
	167 Move W19, W0
	168 Move X8, [X8]
	169 Move X0, X8
	170 Call 0x1C17F10
	171 Move W1, W20
	172 Move W2, W21
	173 Move W3, W22
	174 Move W4, W19
	175 Move X5, X31
	176 Move X23, X0
	177 Call RectOffset..ctor, X0, X1, X2, X3, X4
	178 Move X0, X23
	179 Move X20, [X31+32]
	180 Move X19, [X31+40]
	181 Move X22, [X31+16]
	182 Move X21, [X31+24]
	183 Move X30, [X31+48]
	184 Move X23, [X31+56]
	185 Return X0
	186 Call 0x1C17F20

Method: UnityEngine.RectOffset ReadRectOffset()

Disassembly:
	0x035B4240 ADRP X9, 0xB6C000
	0x035B4244 LDR X8, [X19]
	0x035B4248 LDR X9, [X9 + 0x3E8]
	0x035B424C MOV X0, X19
	0x035B4250 MOV V10.16B, V0.16B
	0x035B4254 LDR X1, [X9]
	0x035B4258 LDP X9, X2, [X8 + 0x1A8]
	0x035B425C BLR X9
	0x035B4260 CBNZ X0, 0x35B431C
	0x035B4264 B 0x35B4354
	0x035B4268 LDR X8, [X19]
	0x035B426C MOV X0, X19
	0x035B4270 LDR X9, [X8 + 0x238]
	0x035B4274 LDR X1, [X8 + 0x240]
	0x035B4278 BLR X9
	0x035B427C TBZ X0, 0x0, 0x35B4330
	0x035B4280 LDR X8, [X19]
	0x035B4284 MOV X0, X19
	0x035B4288 MOV W1, W31
	0x035B428C LDP X9, X2, [X8 + 0x188]
	0x035B4290 BLR X9
	0x035B4294 CBZ X0, 0x35B4354
	0x035B4298 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE2D000
	006 Move X21, 0xB67000
	007 Move W8, [X20+163]
	008 Move X21, [X21+1224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB67000
	015 Move X0, [X0+1224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+163], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call RectOffset..ctor, X0
	024 Move X0, X19
	025 Move X1, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call JSONNode.ReadRectOffset, X0, X1
	031 Return X0

Method: SimpleJSON.JSONNode WriteRectOffset(UnityEngine.RectOffset aRect)

Disassembly:
	0x035B3D40 MOV X0, X19
	0x035B3D44 LDR X1, [X9]
	0x035B3D48 LDP X9, X2, [X8 + 0x1A8]
	0x035B3D4C BLR X9
	0x035B3D50 CBZ X0, 0x35B3EF4
	0x035B3D54 LDR X8, [X0]
	0x035B3D58 LDR X9, [X8 + 0x368]
	0x035B3D5C LDR X1, [X8 + 0x370]
	0x035B3D60 BLR X9
	0x035B3D64 ADRP X23, 0xB6D000
	0x035B3D68 LDR X8, [X19]
	0x035B3D6C LDR X23, [X23 + 0x3B0]
	0x035B3D70 MOV W22, W0
	0x035B3D74 MOV X0, X19
	0x035B3D78 LDR X9, [X8 + 0x2F8]
	0x035B3D7C LDR X1, [X23]
	0x035B3D80 LDR X2, [X8 + 0x300]
	0x035B3D84 BLR X9
	0x035B3D88 AND W22, W22, 0xFF
	0x035B3D8C AND W21, W21, 0xFF
	0x035B3D90 AND W20, W20, 0xFF
	0x035B3D94 TBZ X0, 0x0, 0x35B3EA0
	0x035B3D98 LDR X8, [X19]
	0x035B3D9C LDR X1, [X23]
	0x035B3DA0 MOV X0, X19
	0x035B3DA4 LDP X9, X2, [X8 + 0x1A8]
	0x035B3DA8 BLR X9
	0x035B3DAC CBNZ X0, 0x35B3E8C
	0x035B3DB0 B 0x35B3EF4
	0x035B3DB4 LDR X8, [X19]
	0x035B3DB8 MOV X0, X19
	0x035B3DBC LDR X9, [X8 + 0x238]
	0x035B3DC0 LDR X1, [X8 + 0x240]
	0x035B3DC4 BLR X9
	0x035B3DC8 TBZ X0, 0x0, 0x35B3EC8
	0x035B3DCC LDR X8, [X19]
	0x035B3DD0 MOV X0, X19
	0x035B3DD4 MOV W1, W31
	0x035B3DD8 LDP X9, X2, [X8 + 0x188]
	0x035B3DDC BLR X9
	0x035B3DE0 CBZ X0, 0x35B3EF4
	0x035B3DE4 LDR X8, [X0]
	0x035B3DE8 LDR X9, [X8 + 0x368]
	0x035B3DEC LDR X1, [X8 + 0x370]
	0x035B3DF0 BLR X9
	0x035B3DF4 LDR X8, [X19]
	0x035B3DF8 MOV W20, W0
	0x035B3DFC MOVZ W1, 0x1
	0x035B3E00 MOV X0, X19
	0x035B3E04 LDP X9, X2, [X8 + 0x188]
	0x035B3E08 BLR X9
	0x035B3E0C CBZ X0, 0x35B3EF4
	0x035B3E10 LDR X8, [X0]
	0x035B3E14 LDR X9, [X8 + 0x368]
	0x035B3E18 LDR X1, [X8 + 0x370]
	0x035B3E1C BLR X9
	0x035B3E20 LDR X8, [X19]
	0x035B3E24 MOV W21, W0
	0x035B3E28 MOVZ W1, 0x2
	0x035B3E2C MOV X0, X19
	0x035B3E30 LDP X9, X2, [X8 + 0x188]
	0x035B3E34 BLR X9
	0x035B3E38 CBZ X0, 0x35B3EF4
	0x035B3E3C LDR X8, [X0]
	0x035B3E40 LDR X9, [X8 + 0x368]
	0x035B3E44 LDR X1, [X8 + 0x370]
	0x035B3E48 BLR X9
	0x035B3E4C LDR X8, [X19]
	0x035B3E50 MOV W22, W0
	0x035B3E54 MOV X0, X19
	0x035B3E58 LDP X9, X1, [X8 + 0x1E8]
	0x035B3E5C BLR X9
	0x035B3E60 AND W22, W22, 0xFF
	0x035B3E64 AND W21, W21, 0xFF
	0x035B3E68 CMP W0, 0x3
	0x035B3E6C AND W20, W20, 0xFF
	0x035B3E70 B.LE 0x35B3EA0
	0x035B3E74 LDR X8, [X19]
	0x035B3E78 MOVZ W1, 0x3
	0x035B3E7C MOV X0, X19
	0x035B3E80 LDP X9, X2, [X8 + 0x188]
	0x035B3E84 BLR X9
	0x035B3E88 CBZ X0, 0x35B3EF4
	0x035B3E8C LDR X8, [X0]
	0x035B3E90 LDR X9, [X8 + 0x368]
	0x035B3E94 LDR X1, [X8 + 0x370]
	0x035B3E98 BLR X9
	0x035B3E9C B 0x35B3ED4
	0x035B3EA0 ADRP X19, 0xB41000
	0x035B3EA4 LDR X19, [X19 + 0x460]
	0x035B3EA8 LDR X0, [X19]
	0x035B3EAC LDR W8, [X0 + 0xE0]
	0x035B3EB0 CBNZ W8, 0x35B3EBC
	0x035B3EB4 BL 0x1C16DFC
	0x035B3EB8 LDR X0, [X19]
	0x035B3EBC LDR X8, [X0 + 0xB8]
	0x035B3EC0 LDRB W0, [X8 + 0x3]
	0x035B3EC4 B 0x35B3ED4
	0x035B3EC8 UBFM X21, X20, 0x8, 0x3F
	0x035B3ECC UBFM X22, X20, 0x10, 0x3F
	0x035B3ED0 UBFM X0, X20, 0x18, 0x3F
	0x035B3ED4 UBFM W0, W0, 0x8, 0x7
	0x035B3ED8 BFM W0, W22, 0x10, 0x7
	0x035B3EDC BFM W0, W21, 0x18, 0x7
	0x035B3EE0 BFM W0, W20, 0x0, 0x7
	0x035B3EE4 LDP X20, X19, [X31 + 0x20]
	0x035B3EE8 LDP X22, X21, [X31 + 0x10]
	0x035B3EEC LDP X30, X23, [X31], #0x30
	0x035B3EF0 RET
	0x035B3EF4 BL 0x1C16F20
	0x035B3EF8 STP D11, D10, [X31 - 0x40]!
	0x035B3EFC STP D9, D8, [X31 + 0x10]
	0x035B3F00 STR X30, [X31 + 0x20]
	0x035B3F04 STP X20, X19, [X31 + 0x30]
	0x035B3F08 ADRP X20, 0xE2D000
	0x035B3F0C LDRB W8, [X20 + 0x9E]
	0x035B3F10 MOV V11.16B, V3.16B
	0x035B3F14 MOV V10.16B, V2.16B
	0x035B3F18 MOV V9.16B, V1.16B
	0x035B3F1C MOV V8.16B, V0.16B
	0x035B3F20 MOV X19, X0
	0x035B3F24 TBNZ X8, 0x0, 0x35B3F60
	0x035B3F28 ADRP X0, 0xB68000
	0x035B3F2C LDR X0, [X0 + 0x780]
	0x035B3F30 BL 0x1C16CF4
	0x035B3F34 ADRP X0, 0xB68000
	0x035B3F38 LDR X0, [X0 + 0x788]
	0x035B3F3C BL 0x1C16CF4
	0x035B3F40 ADRP X0, 0xB6D000
	0x035B3F44 LDR X0, [X0 + 0x3D0]
	0x035B3F48 BL 0x1C16CF4
	0x035B3F4C ADRP X0, 0xB6D000
	0x035B3F50 LDR X0, [X0 + 0x3D8]
	0x035B3F54 BL 0x1C16CF4
	0x035B3F58 MOVZ W8, 0x1
	0x035B3F5C STRB W8, [X20 + 0x9E]
	0x035B3F60 LDR X8, [X19]
	0x035B3F64 MOV X0, X19
	0x035B3F68 LDR X9, [X8 + 0x248]
	0x035B3F6C LDR X1, [X8 + 0x250]
	0x035B3F70 BLR X9
	0x035B3F74 TBZ X0, 0x0, 0x35B4038
	0x035B3F78 ADRP X9, 0xB68000
	0x035B3F7C LDR X8, [X19]
	0x035B3F80 LDR X9, [X9 + 0x780]
	0x035B3F84 MOV X0, X19
	0x035B3F88 LDR X1, [X9]
	0x035B3F8C LDP X9, X2, [X8 + 0x1A8]
	0x035B3F90 BLR X9
	0x035B3F94 CBZ X0, 0x35B4124
	0x035B3F98 LDR X8, [X0]
	0x035B3F9C LDR X9, [X8 + 0x388]
	0x035B3FA0 LDR X1, [X8 + 0x390]
	0x035B3FA4 BLR X9
	0x035B3FA8 ADRP X9, 0xB68000
	0x035B3FAC LDR X8, [X19]
	0x035B3FB0 LDR X9, [X9 + 0x788]
	0x035B3FB4 MOV X0, X19
	0x035B3FB8 MOV V8.16B, V0.16B
	0x035B3FBC LDR X1, [X9]
	0x035B3FC0 LDP X9, X2, [X8 + 0x1A8]
	0x035B3FC4 BLR X9
	0x035B3FC8 CBZ X0, 0x35B4124
	0x035B3FCC LDR X8, [X0]
	0x035B3FD0 LDR X9, [X8 + 0x388]
	0x035B3FD4 LDR X1, [X8 + 0x390]
	0x035B3FD8 BLR X9
	0x035B3FDC ADRP X9, 0xB6D000
	0x035B3FE0 LDR X8, [X19]
	0x035B3FE4 LDR X9, [X9 + 0x3D0]
	0x035B3FE8 MOV X0, X19
	0x035B3FEC MOV V9.16B, V0.16B
	0x035B3FF0 LDR X1, [X9]
	0x035B3FF4 LDP X9, X2, [X8 + 0x1A8]
	0x035B3FF8 BLR X9
	0x035B3FFC CBZ X0, 0x35B4124
	0x035B4000 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE2E000
	006 Move W8, [X21+164]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xB85000
	014 Move X0, [X0+1880]
	015 Call 0x1C17CF4
	016 Move X0, 0xB7A000
	017 Move X0, [X0+2872]
	018 Call 0x1C17CF4
	019 Move X0, 0xB7A000
	020 Move X0, [X0+2888]
	021 Call 0x1C17CF4
	022 Move X0, 0xB85000
	023 Move X0, [X0+1888]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+164], W8
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+584]
	030 Move X1, [X8+592]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X19]
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {112}
	037 Move X9, [X8+616]
	038 Move X2, [X8+624]
	039 Move X21, 0xB7A000
	040 Move X21, [X21+2872]
	041 Move W1, 1
	042 Move X0, X19
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X19]
	045 Move X1, [X21]
	046 Move X0, X19
	047 Move X9, [X8+424]
	048 Move X2, [X8+432]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X20, 0
	051 JumpIfEqual {206}
	052 Move X21, X0
	053 Move X0, X20
	054 Move X1, X31
	055 Call RectOffset.get_left, X0
	056 Compare X21, 0
	057 JumpIfEqual {206}
	058 Move X8, [X21]
	059 Move W1, W0
	060 Move X0, X21
	061 Move X9, [X8+888]
	062 Move X2, [X8+896]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X9, 0xB85000
	065 Move X8, [X19]
	066 Move X9, [X9+1888]
	067 Move X0, X19
	068 Move X1, [X9]
	069 Move X9, [X8+424]
	070 Move X2, [X8+432]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X21, X0
	073 Move X0, X20
	074 Move X1, X31
	075 Call RectOffset.get_right, X0
	076 Compare X21, 0
	077 JumpIfEqual {206}
	078 Move X8, [X21]
	079 Move W1, W0
	080 Move X0, X21
	081 Move X9, [X8+888]
	082 Move X2, [X8+896]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X9, 0xB7A000
	085 Move X8, [X19]
	086 Move X9, [X9+2888]
	087 Move X0, X19
	088 Move X1, [X9]
	089 Move X9, [X8+424]
	090 Move X2, [X8+432]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X21, X0
	093 Move X0, X20
	094 Move X1, X31
	095 Call RectOffset.get_top, X0
	096 Compare X21, 0
	097 JumpIfEqual {206}
	098 Move X8, [X21]
	099 Move W1, W0
	100 Move X0, X21
	101 Move X9, [X8+888]
	102 Move X2, [X8+896]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X9, 0xB85000
	105 Move X8, [X19]
	106 Move X9, [X9+1880]
	107 Move X0, X19
	108 Move X1, [X9]
	109 Move X9, [X8+424]
	110 Move X2, [X8+432]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X9, [X8+568]
	113 Move X1, [X8+576]
	114 Move X0, X19
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {200}
	120 Move X8, [X19]
	121 Move W1, 1
	122 Move X0, X19
	123 Move X9, [X8+616]
	124 Move X2, [X8+624]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X8, [X19]
	127 Move X0, X19
	128 Move W1, W31
	129 Move X9, [X8+392]
	130 Move X2, [X8+400]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Compare X20, 0
	133 JumpIfEqual {206}
	134 Move X21, X0
	135 Move X0, X20
	136 Move X1, X31
	137 Call RectOffset.get_left, X0
	138 Compare X21, 0
	139 JumpIfEqual {206}
	140 Move X8, [X21]
	141 Move W1, W0
	142 Move X0, X21
	143 Move X9, [X8+888]
	144 Move X2, [X8+896]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X8, [X19]
	147 Move W1, 1
	148 Move X0, X19
	149 Move X9, [X8+392]
	150 Move X2, [X8+400]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X21, X0
	153 Move X0, X20
	154 Move X1, X31
	155 Call RectOffset.get_right, X0
	156 Compare X21, 0
	157 JumpIfEqual {206}
	158 Move X8, [X21]
	159 Move W1, W0
	160 Move X0, X21
	161 Move X9, [X8+888]
	162 Move X2, [X8+896]
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X8, [X19]
	165 Move W1, 2
	166 Move X0, X19
	167 Move X9, [X8+392]
	168 Move X2, [X8+400]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X21, X0
	171 Move X0, X20
	172 Move X1, X31
	173 Call RectOffset.get_top, X0
	174 Compare X21, 0
	175 JumpIfEqual {206}
	176 Move X8, [X21]
	177 Move W1, W0
	178 Move X0, X21
	179 Move X9, [X8+888]
	180 Move X2, [X8+896]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X8, [X19]
	183 Move W1, 3
	184 Move X0, X19
	185 Move X9, [X8+392]
	186 Move X2, [X8+400]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X21, X0
	189 Move X0, X20
	190 Move X1, X31
	191 Call RectOffset.get_bottom, X0
	192 Compare X21, 0
	193 JumpIfEqual {206}
	194 Move X8, [X21]
	195 Move W1, W0
	196 Move X0, X21
	197 Move X9, [X8+888]
	198 Move X2, [X8+896]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X0, X19
	201 Move X20, [X31+16]
	202 Move X19, [X31+24]
	203 Move X30, [X31+32]
	204 Move X21, [X31+40]
	205 Return X0
	206 Call 0x1C17F20

Method: UnityEngine.Matrix4x4 ReadMatrix()

Disassembly:
	0x035B55F0 RET
	0x035B55F4 SUB X31, X31, 0x40
	0x035B55F8 STP X30, X21, [X31 + 0x20]
	0x035B55FC STP X20, X19, [X31 + 0x30]
	0x035B5600 ADRP X21, 0xE2B000
	0x035B5604 LDRB W9, [X21 + 0xB4]
	0x035B5608 MOV X20, X0
	0x035B560C MOV X19, X8
	0x035B5610 TBNZ X9, 0x0, 0x35B5628
	0x035B5614 ADRP X0, 0xB82000
	0x035B5618 LDR X0, [X0 + 0x7B8]
	0x035B561C BL 0x1C16CF4
	0x035B5620 MOVZ W8, 0x1
	0x035B5624 STRB W8, [X21 + 0xB4]
	0x035B5628 LDR X0, [X20 + 0x10]
	0x035B562C CBZ X0, 0x35B5680
	0x035B5630 ADRP X8, 0xB82000
	0x035B5634 LDR X8, [X8 + 0x7B8]
	0x035B5638 LDR X1, [X8]
	0x035B563C ADD X8, X31, 0x8
	0x035B5640 BL 0x301CB58
	0x035B5644 LDUR V1, [X31 + 0x8]
	0x035B5648 LDR X9, [X31 + 0x18]
	0x035B564C MOVZ W8, 0x1
	0x035B5650 MOVI V0.2D, 0x0
	0x035B5654 STR X31, [X19]
	0x035B5658 STR X31, [X19 + 0x28]
	0x035B565C STR W8, [X19]
	0x035B5660 STUR V0, [X19 + 0x8]
	0x035B5664 STUR V0, [X19 + 0x18]
	0x035B5668 STR X9, [X19 + 0x40]
	0x035B566C STR V1, [X19 + 0x3]
	0x035B5670 LDP X20, X19, [X31 + 0x30]
	0x035B5674 LDP X30, X21, [X31 + 0x20]
	0x035B5678 ADD X31, X31, 0x40
	0x035B567C RET
	0x035B5680 BL 0x1C16F20
	0x035B5684 STP X30, X21, [X31 - 0x20]!
	0x035B5688 STP X20, X19, [X31 + 0x10]
	0x035B568C ADRP X21, 0xE2B000
	0x035B5690 LDRB W8, [X21 + 0xB5]
	0x035B5694 MOV W20, W1
	0x035B5698 MOV X19, X0
	0x035B569C TBNZ X8, 0x0, 0x35B56CC
	0x035B56A0 ADRP X0, 0xB82000
	0x035B56A4 LDR X0, [X0 + 0x658]
	0x035B56A8 BL 0x1C16CF4
	0x035B56AC ADRP X0, 0xB82000
	0x035B56B0 LDR X0, [X0 + 0x7C0]
	0x035B56B4 BL 0x1C16CF4
	0x035B56B8 ADRP X0, 0xB82000
	0x035B56BC LDR X0, [X0 + 0x7C8]
	0x035B56C0 BL 0x1C16CF4
	0x035B56C4 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xE24000
	007 Move W9, [X21+2752]
	008 Move X20, X0
	009 Move X19, X8
	010 Compare W9, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0xB43000
	013 Move X0, [X0+624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X21+2752], W8
	017 Move X8, 0xB43000
	018 Move X8, [X8+624]
	019 Move X0, X20
	020 Move X8, [X8]
	021 Move X8, [X8+184]
	022 Move V1, [X8+96]
	023 Move V0, [X8+112]
	024 Move V2, [X8+64]
	025 Move V3, [X8+80]
	026 Move [X31+32], V1
	027 Move [X31+40], V0
	028 Move [X31], V2
	029 Move [X31+8], V3
	030 Move X8, [X20]
	031 Move X9, [X8+568]
	032 Move X1, [X8+576]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {57}
	038 Move W21, W31
	039 Move X8, [X20]
	040 Move X0, X20
	041 Move W1, W21
	042 Move X9, [X8+392]
	043 Move X2, [X8+400]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X0, 0
	046 JumpIfEqual {71}
	047 Move X8, [X0]
	048 Move X9, [X8+904]
	049 Move X1, [X8+912]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Add X0, X31, 0
	052 Move W1, W21
	053 Move X2, X31
	054 Call Matrix4x4.set_Item, X0, X1, V0
	055 Add W21, W21, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move V1, [X31+32]
	058 Move V0, [X31+48]
	059 Move V3, [X31]
	060 Move V2, [X31+16]
	061 Move X30, [X31+64]
	062 Move X21, [X31+72]
	063 Move [X19+32], V1
	064 Move [X19+40], V0
	065 Move [X19], V3
	066 Move [X19+8], V2
	067 Move X20, [X31+80]
	068 Move X19, [X31+88]
	069 Add X31, X31, 96
	070 Return X0
	071 Call 0x1C17F20

Method: SimpleJSON.JSONNode WriteMatrix(UnityEngine.Matrix4x4 aMatrix)

Disassembly:
	0x035B56C8 STRB W8, [X21 + 0xB5]
	0x035B56CC TBNZ X20, 0x1F, 0x35B5700
	0x035B56D0 LDR X0, [X19 + 0x10]
	0x035B56D4 CBZ X0, 0x35B572C
	0x035B56D8 LDR W8, [X0 + 0x18]
	0x035B56DC CMP W8, W20
	0x035B56E0 B.LE 0x35B5700
	0x035B56E4 ADRP X8, 0xB82000
	0x035B56E8 LDR X8, [X8 + 0x7C8]
	0x035B56EC MOV W1, W20
	0x035B56F0 LDP X20, X19, [X31 + 0x10]
	0x035B56F4 LDR X2, [X8]
	0x035B56F8 LDP X30, X21, [X31], #0x20
	0x035B56FC B 0x301BCCC
	0x035B5700 ADRP X8, 0xB82000
	0x035B5704 LDR X8, [X8 + 0x658]
	0x035B5708 LDR X0, [X8]
	0x035B570C BL 0x1C16F10
	0x035B5710 MOV X1, X19
	0x035B5714 MOV X20, X0
	0x035B5718 BL 0x35B5730
	0x035B571C MOV X0, X20
	0x035B5720 LDP X20, X19, [X31 + 0x10]
	0x035B5724 LDP X30, X21, [X31], #0x20
	0x035B5728 RET
	0x035B572C BL 0x1C16F20
	0x035B5730 STR X30, [X31 - 0x30]!
	0x035B5734 STP X22, X21, [X31 + 0x10]
	0x035B5738 STP X20, X19, [X31 + 0x20]
	0x035B573C ADRP X21, 0xE2B000
	0x035B5740 ADRP X22, 0xB3F000
	0x035B5744 LDRB W8, [X21 + 0xF7]
	0x035B5748 LDR X22, [X22 + 0x460]
	0x035B574C MOV X20, X1
	0x035B5750 MOV X19, X0
	0x035B5754 TBNZ X8, 0x0, 0x35B576C
	0x035B5758 ADRP X0, 0xB3F000
	0x035B575C LDR X0, [X0 + 0x460]
	0x035B5760 BL 0x1C16CF4
	0x035B5764 MOVZ W8, 0x1
	0x035B5768 STRB W8, [X21 + 0xF7]
	0x035B576C LDR X0, [X22]
	0x035B5770 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X9, [X8+568]
	010 Move X8, [X8+576]
	011 Move X1, X8
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {44}
	017 Move X8, [X19]
	018 Move W1, 1
	019 Move X0, X19
	020 Move X9, [X8+616]
	021 Move X2, [X8+624]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move W21, W31
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move W1, W21
	027 Move X9, [X8+392]
	028 Move X2, [X8+400]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X22, X0
	031 Move X0, X20
	032 Move W1, W21
	033 Move X2, X31
	034 Call Matrix4x4.get_Item, X0, X1
	035 Compare X22, 0
	036 JumpIfEqual {51}
	037 Move X8, [X22]
	038 Move X0, X22
	039 Move X9, [X8+920]
	040 Move X1, [X8+928]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Add W21, W21, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x035B5774 CBNZ W8, 0x35B577C
	0x035B5778 BL 0x1C16DFC

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x035B577C MOV X0, X19
	0x035B5780 MOV X1, X31
	0x035B5784 BL 0x33BDD8C
	0x035B5788 STP X20, X31, [X19 + 0x10]
	0x035B578C LDP X20, X19, [X31 + 0x20]
	0x035B5790 LDP X22, X21, [X31 + 0x10]
	0x035B5794 LDR X30, [X31], #0x30
	0x035B5798 RET
	0x035B579C STP X30, X23, [X31 - 0x30]!
	0x035B57A0 STP X22, X21, [X31 + 0x10]
	0x035B57A4 STP X20, X19, [X31 + 0x20]
	0x035B57A8 ADRP X22, 0xE2B000
	0x035B57AC ADRP X23, 0xB3F000
	0x035B57B0 LDRB W8, [X22 + 0xB6]
	0x035B57B4 LDR X23, [X23 + 0x460]
	0x035B57B8 MOV X19, X2
	0x035B57BC MOV W20, W1
	0x035B57C0 MOV X21, X0
	0x035B57C4 TBNZ X8, 0x0, 0x35B580C
	0x035B57C8 ADRP X0, 0xB3F000
	0x035B57CC LDR X0, [X0 + 0x460]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE2C000
	005 Move X20, 0xB40000
	006 Move W8, [X19+165]
	007 Move X20, [X20+1120]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB40000
	013 Move X0, [X0+1120]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+165], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X9, 0xFF010000
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 Move X8, [X8+184]
	023 Move [X8+8], X31
	024 Move [X8+16], X31
	025 Move [X8], X9
	026 Move X30, [X31+32]
	027 Return 

