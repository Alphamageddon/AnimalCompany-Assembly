Type: SimpleJSON.JSONNull

Method: SimpleJSON.JSONNull CreateOrGet()

Disassembly:
	0x035AE064 LDR W8, [X0 + 0xE0]
	0x035AE068 CBNZ W8, 0x35AE070
	0x035AE06C BL 0x1C16DFC
	0x035AE070 BL 0x35AD064
	0x035AE074 B 0x35AE02C
	0x035AE078 BL 0x1C16F20
	0x035AE07C STP X29, X30, [X31 - 0x60]!
	0x035AE080 STP X28, X27, [X31 + 0x10]
	0x035AE084 STP X26, X25, [X31 + 0x20]
	0x035AE088 STP X24, X23, [X31 + 0x30]
	0x035AE08C STP X22, X21, [X31 + 0x40]
	0x035AE090 STP X20, X19, [X31 + 0x50]
	0x035AE094 ADRP X22, 0xE32000
	0x035AE098 ADRP X23, 0xB89000
	0x035AE09C ADRP X21, 0xB89000
	0x035AE0A0 ADRP X20, 0xB45000
	0x035AE0A4 LDRB W8, [X22 + 0x5C]
	0x035AE0A8 LDR X23, [X23 + 0x670]
	0x035AE0AC LDR X21, [X21 + 0x678]
	0x035AE0B0 LDR X20, [X20 + 0x8F0]
	0x035AE0B4 MOV X19, X0
	0x035AE0B8 TBNZ X8, 0x0, 0x35AE148
	0x035AE0BC ADRP X0, 0xB6F000
	0x035AE0C0 LDR X0, [X0 + 0x370]
	0x035AE0C4 BL 0x1C16CF4
	0x035AE0C8 ADRP X0, 0xB46000
	0x035AE0CC LDR X0, [X0 + 0x460]
	0x035AE0D0 BL 0x1C16CF4
	0x035AE0D4 ADRP X0, 0xB6D000
	0x035AE0D8 LDR X0, [X0 + 0xBC0]
	0x035AE0DC BL 0x1C16CF4
	0x035AE0E0 ADRP X0, 0xB89000
	0x035AE0E4 LDR X0, [X0 + 0x680]
	0x035AE0E8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE33000
	005 Move X19, 0xB8A000
	006 Move W8, [X20+240]
	007 Move X19, [X19+1608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB8A000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+240], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move W8, [X8+8]
	025 Compare W8, 0
	026 JumpIfEqual {34}
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move X8, [X0+184]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Call JSONNull..ctor, X0
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Void .ctor()

Disassembly:
	0x035B980C ADRP X20, 0xE27000
	0x035B9810 ADRP X21, 0xB3B000
	0x035B9814 LDRB W8, [X20 + 0x10E]
	0x035B9818 LDR X21, [X21 + 0x460]
	0x035B981C MOV X19, X0
	0x035B9820 TBNZ X8, 0x0, 0x35B9838
	0x035B9824 ADRP X0, 0xB3B000
	0x035B9828 LDR X0, [X0 + 0x460]
	0x035B982C BL 0x1C16CF4
	0x035B9830 MOVZ W8, 0x1
	0x035B9834 STRB W8, [X20 + 0x10E]
	0x035B9838 LDR X0, [X21]
	0x035B983C LDR W8, [X0 + 0xE0]
	0x035B9840 CBNZ W8, 0x35B9848
	0x035B9844 BL 0x1C16DFC
	0x035B9848 MOV X0, X19
	0x035B984C LDP X20, X19, [X31 + 0x10]
	0x035B9850 LDP X30, X21, [X31], #0x20
	0x035B9854 B 0x35AE07C
	0x035B9858 STP X30, X23, [X31 - 0x30]!
	0x035B985C STP X22, X21, [X31 + 0x10]
	0x035B9860 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE28000
	006 Move X21, 0xB3C000
	007 Move W8, [X20+241]
	008 Move X21, [X21+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB3C000
	015 Move X0, [X0+1120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+241], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

Method: SimpleJSON.JSONNodeType get_Tag()

Disassembly:
	0x035B9864 ADRP X23, 0xE27000
	0x035B9868 ADRP X22, 0xB3A000

ISIL:
	001 Move W0, 5
	002 Return X0

Method: System.Boolean get_IsNull()

Disassembly:
	0x035B986C ADRP X20, 0xB7E000
	0x035B9870 ADRP X21, 0xB7E000

ISIL:
	001 Move W0, 1
	002 Return X0

Method: SimpleJSON.JSONNode/Enumerator GetEnumerator()

Disassembly:
	0x035B9874 MOV X19, X8
	0x035B9878 LDRB W8, [X23 + 0x10F]
	0x035B987C LDR X22, [X22 + 0x618]
	0x035B9880 LDR X20, [X20 + 0x900]
	0x035B9884 LDR X21, [X21 + 0x908]

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8+64], X31
	003 Move [X8+32], V0
	004 Move [X8+40], V0
	005 Move [X8], V0
	006 Move [X8+8], V0
	007 Return X0

Method: System.String get_Value()

Disassembly:
	0x035B9888 TBNZ X8, 0x0, 0x35B98B8
	0x035B988C ADRP X0, 0xB3A000
	0x035B9890 LDR X0, [X0 + 0x618]
	0x035B9894 BL 0x1C16CF4
	0x035B9898 ADRP X0, 0xB7E000
	0x035B989C LDR X0, [X0 + 0x908]
	0x035B98A0 BL 0x1C16CF4
	0x035B98A4 ADRP X0, 0xB7E000
	0x035B98A8 LDR X0, [X0 + 0x900]
	0x035B98AC BL 0x1C16CF4
	0x035B98B0 MOVZ W8, 0x1
	0x035B98B4 STRB W8, [X23 + 0x10F]
	0x035B98B8 LDR X0, [X22]
	0x035B98BC MOVZ W1, 0x46F
	0x035B98C0 BL 0x1C16D6C
	0x035B98C4 LDR X1, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE28000
	005 Move X20, 0xB3B000
	006 Move W8, [X19+242]
	007 Move X20, [X20+2096]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB3B000
	013 Move X0, [X0+2096]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+242], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Void set_Value(System.String value)

Disassembly:
	0x035B98C8 MOV X2, X31

ISIL:
	001 Return 

Method: System.Boolean get_AsBool()

Disassembly:
	0x035B98CC MOV X20, X0
	0x035B98D0 BL 0x32C5BD8

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void set_AsBool(System.Boolean value)

Disassembly:
	0x035B98D4 LDR X0, [X22]

ISIL:
	001 Return 

Method: SimpleJSON.JSONNode Clone()

Disassembly:
	0x035B98D8 MOVZ W1, 0x354
	0x035B98DC BL 0x1C16D6C
	0x035B98E0 LDR X1, [X21]
	0x035B98E4 MOV X2, X31
	0x035B98E8 MOV X21, X0
	0x035B98EC BL 0x32C5BD8
	0x035B98F0 ADRP X8, 0xFFFFFFFFFD535000
	0x035B98F4 LDR V0, [X8 + 0x1E8]
	0x035B98F8 STP X20, X21, [X19]
	0x035B98FC STRB W31, [X19 + 0x18]
	0x035B9900 STUR W31, [X19 + 0x19]
	0x035B9904 STR D0, [X19 + 0x10]
	0x035B9908 STR W31, [X19 + 0x1C]
	0x035B990C LDP X20, X19, [X31 + 0x20]
	0x035B9910 LDP X22, X21, [X31 + 0x10]
	0x035B9914 LDP X30, X23, [X31], #0x30
	0x035B9918 RET
	0x035B991C MOV X1, X31
	0x035B9920 B 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE28000
	005 Move X20, 0xB7F000
	006 Move W8, [X19+243]
	007 Move X20, [X20+1608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB7F000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+243], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call JSONNull.CreateOrGet
	026 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x035B9924 STR X30, [X31 - 0x20]!
	0x035B9928 STP X20, X19, [X31 + 0x10]
	0x035B992C ADRP X20, 0xE27000
	0x035B9930 ADRP X19, 0xB3A000
	0x035B9934 LDRB W8, [X20 + 0x111]
	0x035B9938 LDR X19, [X19 + 0x898]
	0x035B993C TBNZ X8, 0x0, 0x35B9954
	0x035B9940 ADRP X0, 0xB3A000
	0x035B9944 LDR X0, [X0 + 0x898]
	0x035B9948 BL 0x1C16CF4
	0x035B994C MOVZ W8, 0x1
	0x035B9950 STRB W8, [X20 + 0x111]
	0x035B9954 LDR X0, [X19]
	0x035B9958 LDR W8, [X0 + 0xE0]
	0x035B995C CBNZ W8, 0x35B9968
	0x035B9960 BL 0x1C16DFC
	0x035B9964 LDR X0, [X19]
	0x035B9968 LDR X8, [X0 + 0xB8]
	0x035B996C LDP X20, X19, [X31 + 0x10]
	0x035B9970 LDR X0, [X8]
	0x035B9974 LDR X30, [X31], #0x20
	0x035B9978 RET
	0x035B997C STR X30, [X31 - 0x20]!
	0x035B9980 STP X20, X19, [X31 + 0x10]
	0x035B9984 ADRP X20, 0xE27000
	0x035B9988 LDRB W8, [X20 + 0x112]
	0x035B998C MOV X19, X0
	0x035B9990 TBNZ X8, 0x0, 0x35B99A8
	0x035B9994 ADRP X0, 0xB7E000
	0x035B9998 LDR X0, [X0 + 0x910]
	0x035B999C BL 0x1C16CF4
	0x035B99A0 MOVZ W8, 0x1
	0x035B99A4 STRB W8, [X20 + 0x112]
	0x035B99A8 STR X31, [X31 + 0x8]
	0x035B99AC LDR X0, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE28000
	006 Move W8, [X21+244]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB7F000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+244], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Compare X19, 0
	020 JumpIfEqual {28}
	021 Move X8, 0xB7F000
	022 Move X8, [X8+1608]
	023 Move X9, [X19]
	024 Move X8, [X8]
	025 Move W11, [X9+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W0, W31
	029 Move W0, 1
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x035B99B0 CBZ X0, 0x35B99E0
	0x035B99B4 ADRP X8, 0xB7E000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void WriteToStringBuilder(System.Text.StringBuilder aSB, System.Int32 aIndent, System.Int32 aIndentInc, SimpleJSON.JSONTextMode aMode)

Disassembly:
	0x035B99B8 LDR X8, [X8 + 0x910]
	0x035B99BC ADD X1, X31, 0x8
	0x035B99C0 LDR X2, [X8]
	0x035B99C4 BL 0x285052C
	0x035B99C8 LDR X8, [X31 + 0x8]
	0x035B99CC LDP X20, X19, [X31 + 0x10]
	0x035B99D0 ANDS W31, W0, 0x1
	0x035B99D4 CSEL X0, X8, X31, NE
	0x035B99D8 LDR X30, [X31], #0x20
	0x035B99DC RET
	0x035B99E0 BL 0x1C16F20
	0x035B99E4 STR X30, [X31 - 0x10]!
	0x035B99E8 BL 0x35B997C
	0x035B99EC CBZ X0, 0x35B9A00
	0x035B99F0 LDR W8, [X0 + 0x10]
	0x035B99F4 CMP W8, 0x0
	0x035B99F8 CSET W0, NE
	0x035B99FC B 0x35B9A04
	0x035B9A00 MOVZ W0, 0x1
	0x035B9A04 LDR X30, [X31], #0x10
	0x035B9A08 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE28000
	005 Move W8, [X20+245]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB3B000
	012 Move X0, [X0+2096]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+245], W8
	016 Compare X19, 0
	017 JumpIfEqual {28}
	018 Move X8, 0xB3B000
	019 Move X8, [X8+2096]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call StringBuilder.Append, X0, X1
	027 Return 
	028 Call 0x1C17F20

Method: System.Void SerializeBinary(System.IO.BinaryWriter aWriter)

Disassembly:
	0x035B9A0C LDR W8, [X0 + 0x10]
	0x035B9A10 CMP W8, 0x0
	0x035B9A14 CSET W0, NE
	0x035B9A18 RET
	0x035B9A1C STR X30, [X31 - 0x10]!
	0x035B9A20 BL 0x35B997C
	0x035B9A24 CBZ X0, 0x35B9A64
	0x035B9A28 LDR W9, [X0 + 0x10]
	0x035B9A2C MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X8, [X1]
	005 Move X0, X1
	006 Move W1, 5
	007 Move X3, [X8+456]
	008 Move X2, [X8+464]
	009 Move X30, [X31+16]
	010 CallNoReturn X3
	011 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x035B9A30 CMP W9, 0x2
	0x035B9A34 B.EQ 0x35B9A68
	0x035B9A38 CMP W9, 0x4
	0x035B9A3C B.EQ 0x35B9A68
	0x035B9A40 MOV X8, X0
	0x035B9A44 LDR X8, [X8 + 0x30]
	0x035B9A48 CBZ X8, 0x35B9A5C
	0x035B9A4C LDR W10, [X8 + 0x10]
	0x035B9A50 CMP W10, 0x2
	0x035B9A54 B.NE 0x35B9A44
	0x035B9A58 B 0x35B9A64
	0x035B9A5C CMP W9, 0x3
	0x035B9A60 B.NE 0x35B9A74
	0x035B9A64 MOVZ W8, 0x1
	0x035B9A68 MOV W0, W8
	0x035B9A6C LDR X30, [X31], #0x10
	0x035B9A70 RET
	0x035B9A74 LDR X0, [X0 + 0x30]
	0x035B9A78 CBZ X0, 0x35B9A88
	0x035B9A7C LDR W8, [X0 + 0x10]
	0x035B9A80 CMP W8, 0x3
	0x035B9A84 B.NE 0x35B9A74
	0x035B9A88 CMP X0, 0x0
	0x035B9A8C CSET W8, NE
	0x035B9A90 B 0x35B9A68
	0x035B9A94 LDR W9, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE28000
	005 Move X20, 0xB7F000
	006 Move W8, [X19+246]
	007 Move X20, [X20+1608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB7F000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+246], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call JSONNull..ctor, X0
	021 Move X8, [X20]
	022 Move W9, 1
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X8, [X20]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X8, [X8+184]
	029 Move [X8+8], W9
	030 Move X30, [X31+32]
	031 Return 

