Type: SimpleJSON.JSONLazyCreator

Method: SimpleJSON.JSONNodeType get_Tag()

Disassembly:
	0x035B9A98 MOVZ W8, 0x1
	0x035B9A9C CMP W9, 0x2

ISIL:
	001 Move W0, 7
	002 Return X0

Method: SimpleJSON.JSONNode/Enumerator GetEnumerator()

Disassembly:
	0x035B9AA0 B.EQ 0x35B9AF4
	0x035B9AA4 CMP W9, 0x4
	0x035B9AA8 B.EQ 0x35B9AF4
	0x035B9AAC MOV X8, X0
	0x035B9AB0 LDR X8, [X8 + 0x30]

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8+64], X31
	003 Move [X8+32], V0
	004 Move [X8+40], V0
	005 Move [X8], V0
	006 Move [X8+8], V0
	007 Return X0

Method: System.Void .ctor(SimpleJSON.JSONNode aNode)

Disassembly:
	0x035B6730 LDP X20, X19, [X31 + 0x20]
	0x035B6734 LDP X22, X21, [X31 + 0x10]
	0x035B6738 LDP X30, X23, [X31], #0x30
	0x035B673C RET
	0x035B6740 STP X30, X23, [X31 - 0x30]!
	0x035B6744 STP X22, X21, [X31 + 0x10]
	0x035B6748 STP X20, X19, [X31 + 0x20]
	0x035B674C ADRP X22, 0xE2A000
	0x035B6750 ADRP X23, 0xB3E000
	0x035B6754 LDRB W8, [X22 + 0xC8]
	0x035B6758 LDR X23, [X23 + 0x460]
	0x035B675C MOV X20, X2
	0x035B6760 MOV X19, X1
	0x035B6764 MOV X21, X0
	0x035B6768 TBNZ X8, 0x0, 0x35B67B0
	0x035B676C ADRP X0, 0xB81000
	0x035B6770 LDR X0, [X0 + 0x838]
	0x035B6774 BL 0x1C16CF4
	0x035B6778 ADRP X0, 0xB81000
	0x035B677C LDR X0, [X0 + 0x828]
	0x035B6780 BL 0x1C16CF4
	0x035B6784 ADRP X0, 0xB81000
	0x035B6788 LDR X0, [X0 + 0x840]
	0x035B678C BL 0x1C16CF4
	0x035B6790 ADRP X0, 0xB3E000
	0x035B6794 LDR X0, [X0 + 0x460]
	0x035B6798 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE2B000
	007 Move X22, 0xB3F000
	008 Move W8, [X21+247]
	009 Move X22, [X22+1120]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB3F000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+247], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move [X19+16], X20
	030 Move [X19+24], X31
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return 

Method: System.Void .ctor(SimpleJSON.JSONNode aNode, System.String aKey)

Disassembly:
	0x035B76D0 LDR X8, [X8 + 0x848]
	0x035B76D4 LDR X1, [X8]
	0x035B76D8 BL 0x2AA4E88
	0x035B76DC LDR X8, [X19]
	0x035B76E0 MOV W1, W0
	0x035B76E4 MOV X0, X19
	0x035B76E8 LDR X9, [X8 + 0x248]
	0x035B76EC LDR X2, [X8 + 0x250]
	0x035B76F0 BLR X9
	0x035B76F4 LDR X0, [X20 + 0x10]
	0x035B76F8 CBZ X0, 0x35B77C4
	0x035B76FC ADRP X8, 0xB80000
	0x035B7700 LDR X8, [X8 + 0x8A8]
	0x035B7704 LDR X1, [X8]
	0x035B7708 BL 0x2AA4E98
	0x035B770C CBZ X0, 0x35B77C4
	0x035B7710 ADRP X8, 0xB80000
	0x035B7714 LDR X8, [X8 + 0x8C8]
	0x035B7718 ADRP X23, 0xB80000
	0x035B771C ADRP X24, 0xB80000
	0x035B7720 ADRP X22, 0xB80000
	0x035B7724 LDR X1, [X8]
	0x035B7728 LDR X23, [X23 + 0x8B8]
	0x035B772C LDR X24, [X24 + 0x830]
	0x035B7730 LDR X22, [X22 + 0x8B0]
	0x035B7734 ADD X8, X31, 0x8
	0x035B7738 BL 0x2EC7020
	0x035B773C LDR X1, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE2A000
	008 Move X23, 0xB3E000
	009 Move W8, [X22+248]
	010 Move X23, [X23+1120]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB3E000
	019 Move X0, [X0+1120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+248], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Move [X20+16], X21
	032 Move [X20+24], X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return 

Method: T Set(T aVal)

Disassembly:
	0x0220E364 STR X8, [X19 + 0x30]
	0x0220E368 STP V2, V0, [X19 + 0x10]
	0x0220E36C STR V1, [X19]
	0x0220E370 LDP X20, X19, [X31 + 0x30]
	0x0220E374 LDP X24, X23, [X31 + 0x10]
	0x0220E378 LDP X30, X25, [X31], #0x40
	0x0220E37C RET
	0x0220E380 BL 0x1C16F20
	0x0220E384 BL 0x1C171E0
	0x0220E388 STP X30, X25, [X31 - 0x40]!
	0x0220E38C STP X24, X23, [X31 + 0x10]
	0x0220E390 STP X22, X21, [X31 + 0x20]
	0x0220E394 STP X20, X19, [X31 + 0x30]
	0x0220E398 LDR X9, [X1 + 0x38]
	0x0220E39C MOV X20, X1
	0x0220E3A0 MOV X21, X0
	0x0220E3A4 MOV X19, X8
	0x0220E3A8 CBNZ X9, 0x220E434
	0x0220E3AC ADRP X0, 0x1EE7000
	0x0220E3B0 LDR X0, [X0 + 0x170]
	0x0220E3B4 BL 0x1C16CF4
	0x0220E3B8 ADRP X0, 0x1F0D000
	0x0220E3BC LDR X0, [X0 + 0xFD8]
	0x0220E3C0 BL 0x1C16CF4
	0x0220E3C4 ADRP X0, 0x1F0D000
	0x0220E3C8 LDR X0, [X0 + 0xFE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+16]
	006 Move X8, [X0+24]
	007 Move X20, X1
	008 Compare X8, 0
	009 JumpIfEqual {18}
	010 Compare X0, 0
	011 JumpIfEqual {31}
	012 Move X9, [X0]
	013 Move X1, X8
	014 Move X2, X20
	015 Move X10, [X9+632]
	016 Move X3, [X9+640]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Compare X0, 0
	019 JumpIfEqual {31}
	020 Move X8, [X0]
	021 Move X1, X20
	022 Move X9, [X8+648]
	023 Move X2, [X8+656]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move [X19+16], X31
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20

Method: SimpleJSON.JSONNode get_Item(System.Int32 aIndex)

Disassembly:
	0x035B9AB4 CBZ X8, 0x35B9AC8
	0x035B9AB8 LDR W10, [X8 + 0x10]
	0x035B9ABC CMP W10, 0x2
	0x035B9AC0 B.NE 0x35B9AB0
	0x035B9AC4 B 0x35B9AD0
	0x035B9AC8 CMP W9, 0x3
	0x035B9ACC B.NE 0x35B9AD8
	0x035B9AD0 MOVZ W8, 0x1
	0x035B9AD4 B 0x35B9AF4
	0x035B9AD8 LDR X0, [X0 + 0x30]
	0x035B9ADC CBZ X0, 0x35B9AEC
	0x035B9AE0 LDR W8, [X0 + 0x10]
	0x035B9AE4 CMP W8, 0x3
	0x035B9AE8 B.NE 0x35B9AD8
	0x035B9AEC CMP X0, 0x0
	0x035B9AF0 CSET W8, NE
	0x035B9AF4 MOV W0, W8
	0x035B9AF8 RET
	0x035B9AFC STP X30, X23, [X31 - 0x30]!
	0x035B9B00 STP X22, X21, [X31 + 0x10]
	0x035B9B04 STP X20, X19, [X31 + 0x20]
	0x035B9B08 ADRP X23, 0xE27000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE28000
	006 Move X21, 0xB7F000
	007 Move W8, [X20+249]
	008 Move X21, [X21+1624]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB7F000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+249], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call JSONLazyCreator..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void set_Item(System.Int32 aIndex, SimpleJSON.JSONNode value)

Disassembly:
	0x035B9B0C ADRP X22, 0xB7E000
	0x035B9B10 ADRP X21, 0xB7E000
	0x035B9B14 LDRB W8, [X23 + 0x113]
	0x035B9B18 LDR X22, [X22 + 0x918]
	0x035B9B1C LDR X21, [X21 + 0x920]
	0x035B9B20 MOV X20, X1
	0x035B9B24 MOV X19, X0
	0x035B9B28 TBNZ X8, 0x0, 0x35B9B4C
	0x035B9B2C ADRP X0, 0xB7E000
	0x035B9B30 LDR X0, [X0 + 0x920]
	0x035B9B34 BL 0x1C16CF4
	0x035B9B38 ADRP X0, 0xB7E000
	0x035B9B3C LDR X0, [X0 + 0x918]
	0x035B9B40 BL 0x1C16CF4
	0x035B9B44 MOVZ W8, 0x1
	0x035B9B48 STRB W8, [X23 + 0x113]
	0x035B9B4C MOV X0, X19
	0x035B9B50 MOV X1, X31
	0x035B9B54 BL 0x33BDD8C
	0x035B9B58 LDR X0, [X22]
	0x035B9B5C BL 0x1C16F10
	0x035B9B60 LDR X2, [X21]
	0x035B9B64 MOV X1, X20
	0x035B9B68 MOV X21, X0
	0x035B9B6C BL 0x2850290
	0x035B9B70 STR X21, [X19 + 0x10]
	0x035B9B74 LDP X20, X19, [X31 + 0x20]
	0x035B9B78 LDP X22, X21, [X31 + 0x10]
	0x035B9B7C LDP X30, X23, [X31], #0x30
	0x035B9B80 RET
	0x035B9B84 STR X30, [X31 - 0x10]!
	0x035B9B88 BL 0x35B997C
	0x035B9B8C CBZ X0, 0x35B9BA0
	0x035B9B90 LDR X8, [X0]
	0x035B9B94 LDP X2, X1, [X8 + 0x1B8]
	0x035B9B98 LDR X30, [X31], #0x10
	0x035B9B9C BR X2
	0x035B9BA0 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE28000
	008 Move X23, 0xB65000
	009 Move X22, 0xB7F000
	010 Move W8, [X21+250]
	011 Move X23, [X23+880]
	012 Move X22, [X22+2264]
	013 Move X19, X2
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB65000
	020 Move X0, [X0+880]
	021 Call 0x1C17CF4
	022 Move X0, 0xB7F000
	023 Move X0, [X0+2264]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+250], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X21, X0
	030 Call JSONArray..ctor, X0
	031 Move X2, [X22]
	032 Move X0, X20
	033 Move X1, X21
	034 Call 0x220E364, X0, X1
	035 Compare X0, 0
	036 JumpIfEqual {48}
	037 Move X8, [X0]
	038 Move X1, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X3, [X8+648]
	044 Move X2, [X8+656]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 CallNoReturn X3
	048 Call 0x1C17F20

Method: SimpleJSON.JSONNode get_Item(System.String aKey)

Disassembly:
	0x035B9BA4 RET
	0x035B9BA8 STR X30, [X31 - 0x20]!
	0x035B9BAC STP X20, X19, [X31 + 0x10]
	0x035B9BB0 ADRP X19, 0xE27000
	0x035B9BB4 ADRP X20, 0xB3A000
	0x035B9BB8 LDRB W8, [X19 + 0x114]
	0x035B9BBC LDR X20, [X20 + 0x898]
	0x035B9BC0 TBNZ X8, 0x0, 0x35B9BD8
	0x035B9BC4 ADRP X0, 0xB3A000
	0x035B9BC8 LDR X0, [X0 + 0x898]
	0x035B9BCC BL 0x1C16CF4
	0x035B9BD0 MOVZ W8, 0x1
	0x035B9BD4 STRB W8, [X19 + 0x114]
	0x035B9BD8 LDR X0, [X20]
	0x035B9BDC BL 0x1C16F10
	0x035B9BE0 MOV X1, X31
	0x035B9BE4 MOV X19, X0
	0x035B9BE8 BL 0x35B9AFC
	0x035B9BEC LDR X8, [X20]
	0x035B9BF0 LDR X8, [X8 + 0xB8]
	0x035B9BF4 STR X19, [X8]
	0x035B9BF8 LDP X20, X19, [X31 + 0x10]
	0x035B9BFC LDR X30, [X31], #0x20
	0x035B9C00 RET
	0x035B9C04 LDRB W0, [X0 + 0x18]
	0x035B9C08 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE28000
	007 Move X22, 0xB7F000
	008 Move W8, [X21+251]
	009 Move X22, [X22+1624]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7F000
	017 Move X0, [X0+1624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+251], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move X21, X0
	026 Call JSONLazyCreator..ctor, X0, X1, X2
	027 Move X0, X21
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Void set_Item(System.String aKey, SimpleJSON.JSONNode value)

Disassembly:
	0x035B9C0C AND W8, W1, 0x1
	0x035B9C10 STRB W8, [X0 + 0x18]
	0x035B9C14 RET
	0x035B9C18 STR X30, [X31 - 0x20]!
	0x035B9C1C STP X20, X19, [X31 + 0x10]
	0x035B9C20 ADRP X20, 0xE27000
	0x035B9C24 LDRB W8, [X20 + 0x115]
	0x035B9C28 MOV X19, X0
	0x035B9C2C TBNZ X8, 0x0, 0x35B9C44
	0x035B9C30 ADRP X0, 0xB7E000
	0x035B9C34 LDR X0, [X0 + 0x928]
	0x035B9C38 BL 0x1C16CF4
	0x035B9C3C MOVZ W8, 0x1
	0x035B9C40 STRB W8, [X20 + 0x115]
	0x035B9C44 LDR X8, [X19 + 0x10]
	0x035B9C48 CBZ X8, 0x35B9C5C
	0x035B9C4C LDR W0, [X8 + 0x18]
	0x035B9C50 LDP X20, X19, [X31 + 0x10]
	0x035B9C54 LDR X30, [X31], #0x20
	0x035B9C58 RET
	0x035B9C5C BL 0x1C16F20
	0x035B9C60 STR X30, [X31 - 0x30]!
	0x035B9C64 STP X22, X21, [X31 + 0x10]
	0x035B9C68 STP X20, X19, [X31 + 0x20]
	0x035B9C6C ADRP X22, 0xE27000
	0x035B9C70 LDRB W8, [X22 + 0x116]
	0x035B9C74 MOV W20, W2
	0x035B9C78 MOV X19, X1
	0x035B9C7C MOV X21, X0
	0x035B9C80 TBNZ X8, 0x0, 0x35B9CA4
	0x035B9C84 ADRP X0, 0xB3A000
	0x035B9C88 LDR X0, [X0 + 0x898]
	0x035B9C8C BL 0x1C16CF4
	0x035B9C90 ADRP X0, 0xB7E000
	0x035B9C94 LDR X0, [X0 + 0x930]
	0x035B9C98 BL 0x1C16CF4
	0x035B9C9C MOVZ W8, 0x1
	0x035B9CA0 STRB W8, [X22 + 0x116]
	0x035B9CA4 LDR X0, [X21 + 0x10]
	0x035B9CA8 CBZ X0, 0x35B9CF4
	0x035B9CAC ADRP X8, 0xB7E000
	0x035B9CB0 LDR X8, [X8 + 0x930]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xE28000
	009 Move X24, 0xB63000
	010 Move X23, 0xB7F000
	011 Move W8, [X22+252]
	012 Move X24, [X24+3008]
	013 Move X23, [X23+2272]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xB7F000
	022 Move X0, [X0+2272]
	023 Call 0x1C17CF4
	024 Move X0, 0xB63000
	025 Move X0, [X0+3008]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+252], W8
	029 Move X0, [X24]
	030 Call 0x1C17F10
	031 Move X22, X0
	032 Call JSONObject..ctor, X0
	033 Move X2, [X23]
	034 Move X0, X21
	035 Move X1, X22
	036 Call 0x220E364, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {52}
	039 Move X8, [X0]
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X4, [X8+632]
	045 Move X3, [X8+640]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 CallNoReturn X4
	052 Call 0x1C17F20

Method: System.Void Add(SimpleJSON.JSONNode aItem)

Disassembly:
	0x035B9CB4 ADRP X21, 0xB3A000
	0x035B9CB8 MOV X1, X19
	0x035B9CBC MOV W2, W20
	0x035B9CC0 LDR X3, [X8]
	0x035B9CC4 LDR X21, [X21 + 0x898]
	0x035B9CC8 BL 0x24B3584
	0x035B9CCC LDR X0, [X21]
	0x035B9CD0 BL 0x1C16F10
	0x035B9CD4 MOV X1, X19
	0x035B9CD8 MOV X20, X0
	0x035B9CDC BL 0x35B9AFC
	0x035B9CE0 MOV X0, X20
	0x035B9CE4 LDP X20, X19, [X31 + 0x20]
	0x035B9CE8 LDP X22, X21, [X31 + 0x10]
	0x035B9CEC LDR X30, [X31], #0x30
	0x035B9CF0 RET
	0x035B9CF4 BL 0x1C16F20
	0x035B9CF8 STR X30, [X31 - 0x40]!
	0x035B9CFC STP X24, X23, [X31 + 0x10]
	0x035B9D00 STP X22, X21, [X31 + 0x20]
	0x035B9D04 STP X20, X19, [X31 + 0x30]
	0x035B9D08 ADRP X22, 0xE27000
	0x035B9D0C LDRB W8, [X22 + 0x117]
	0x035B9D10 MOV X19, X2
	0x035B9D14 MOV W20, W1
	0x035B9D18 MOV X21, X0
	0x035B9D1C TBNZ X8, 0x0, 0x35B9D34
	0x035B9D20 ADRP X0, 0xB7E000
	0x035B9D24 LDR X0, [X0 + 0x930]
	0x035B9D28 BL 0x1C16CF4
	0x035B9D2C MOVZ W8, 0x1
	0x035B9D30 STRB W8, [X22 + 0x117]
	0x035B9D34 CBZ X19, 0x35B9DA4
	0x035B9D38 LDR X8, [X19 + 0x18]
	0x035B9D3C CMP W8, 0x1
	0x035B9D40 B.LT 0x35B9D8C
	0x035B9D44 ADRP X23, 0xB7E000
	0x035B9D48 LDR X23, [X23 + 0x930]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE28000
	008 Move X23, 0xB65000
	009 Move X22, 0xB7F000
	010 Move W8, [X21+253]
	011 Move X23, [X23+880]
	012 Move X22, [X22+2264]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB65000
	020 Move X0, [X0+880]
	021 Call 0x1C17CF4
	022 Move X0, 0xB7F000
	023 Move X0, [X0+2264]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+253], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X21, X0
	030 Call JSONArray..ctor, X0
	031 Move X2, [X22]
	032 Move X0, X20
	033 Move X1, X21
	034 Call 0x220E364, X0, X1
	035 Compare X0, 0
	036 JumpIfEqual {48}
	037 Move X8, [X0]
	038 Move X1, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X3, [X8+648]
	044 Move X2, [X8+656]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 CallNoReturn X3
	048 Call 0x1C17F20

Method: System.Void Add(System.String aKey, SimpleJSON.JSONNode aItem)

Disassembly:
	0x035B9D4C MOV X22, X31
	0x035B9D50 AND X8, X8, 0x0
	0x035B9D54 ADD X24, X19, 0x20
	0x035B9D58 CMP X22, W8, UXTW
	0x035B9D5C B.CS 0x35B9DA0
	0x035B9D60 LDR X1, [X24, X22, LSL #3]
	0x035B9D64 CBZ X1, 0x35B9D7C
	0x035B9D68 LDR X0, [X21 + 0x10]
	0x035B9D6C CBZ X0, 0x35B9DA4
	0x035B9D70 LDR X3, [X23]
	0x035B9D74 MOV W2, W20
	0x035B9D78 BL 0x24B3584
	0x035B9D7C LDR W8, [X19 + 0x18]
	0x035B9D80 ADD X22, X22, 0x1
	0x035B9D84 CMP X22, W8, SXTW
	0x035B9D88 B.LT 0x35B9D58
	0x035B9D8C LDP X20, X19, [X31 + 0x30]
	0x035B9D90 LDP X22, X21, [X31 + 0x20]
	0x035B9D94 LDP X24, X23, [X31 + 0x10]
	0x035B9D98 LDR X30, [X31], #0x40
	0x035B9D9C RET
	0x035B9DA0 BL 0x1C16F28
	0x035B9DA4 BL 0x1C16F20
	0x035B9DA8 STP X30, X23, [X31 - 0x30]!
	0x035B9DAC STP X22, X21, [X31 + 0x10]
	0x035B9DB0 STP X20, X19, [X31 + 0x20]
	0x035B9DB4 ADRP X19, 0xE27000
	0x035B9DB8 LDRB W8, [X19 + 0x118]
	0x035B9DBC MOV X20, X0
	0x035B9DC0 TBNZ X8, 0x0, 0x35B9E08
	0x035B9DC4 ADRP X0, 0xB3A000
	0x035B9DC8 LDR X0, [X0 + 0xE00]
	0x035B9DCC BL 0x1C16CF4
	0x035B9DD0 ADRP X0, 0xB7E000
	0x035B9DD4 LDR X0, [X0 + 0x938]
	0x035B9DD8 BL 0x1C16CF4
	0x035B9DDC ADRP X0, 0xB3A000
	0x035B9DE0 LDR X0, [X0 + 0xE18]
	0x035B9DE4 BL 0x1C16CF4
	0x035B9DE8 ADRP X0, 0xB7E000
	0x035B9DEC LDR X0, [X0 + 0x940]
	0x035B9DF0 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xE28000
	009 Move X24, 0xB63000
	010 Move X23, 0xB7F000
	011 Move W8, [X22+254]
	012 Move X24, [X24+3008]
	013 Move X23, [X23+2272]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xB7F000
	022 Move X0, [X0+2272]
	023 Call 0x1C17CF4
	024 Move X0, 0xB63000
	025 Move X0, [X0+3008]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+254], W8
	029 Move X0, [X24]
	030 Call 0x1C17F10
	031 Move X22, X0
	032 Call JSONObject..ctor, X0
	033 Move X2, [X23]
	034 Move X0, X21
	035 Move X1, X22
	036 Call 0x220E364, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {52}
	039 Move X8, [X0]
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X4, [X8+632]
	045 Move X3, [X8+640]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 CallNoReturn X4
	052 Call 0x1C17F20

Method: System.Boolean op_Equality(SimpleJSON.JSONLazyCreator a, System.Object b)

Disassembly:
	0x035B9DF4 ADRP X0, 0xB7E000
	0x035B9DF8 LDR X0, [X0 + 0x948]
	0x035B9DFC BL 0x1C16CF4
	0x035B9E00 MOVZ W8, 0x1
	0x035B9E04 STRB W8, [X19 + 0x118]
	0x035B9E08 LDR X0, [X20 + 0x10]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Or W0, W8, W9
	006 Return X0

Method: System.Boolean op_Inequality(SimpleJSON.JSONLazyCreator a, System.Object b)

Disassembly:
	0x035B9E0C CBZ X0, 0x35B9F94
	0x035B9E10 ADRP X8, 0xB7E000
	0x035B9E14 LDR X8, [X8 + 0x948]
	0x035B9E18 ADRP X22, 0xB3A000
	0x035B9E1C LDR X1, [X8]
	0x035B9E20 LDR X22, [X22 + 0xE00]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 And W0, W8, W9
	006 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x035B9E24 BL 0x24B3C6C
	0x035B9E28 MOV X19, X0
	0x035B9E2C CBZ X0, 0x35B9F98
	0x035B9E30 ADRP X21, 0xB3A000
	0x035B9E34 ADRP X23, 0xB7E000
	0x035B9E38 LDR X21, [X21 + 0xE18]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Or W0, W8, W9
	006 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x035B9E3C LDR X23, [X23 + 0x938]
	0x035B9E40 LDR X8, [X19]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 get_AsInt()

Disassembly:
	0x035B9E44 LDR X1, [X21]
	0x035B9E48 LDRH W9, [X8 + 0x12E]
	0x035B9E4C CBZ X9, 0x35B9E70
	0x035B9E50 LDR X10, [X8 + 0xB0]
	0x035B9E54 ADD X10, X10, 0x8
	0x035B9E58 LDUR X11, [X10 - 0x8]
	0x035B9E5C CMP X11, X1
	0x035B9E60 B.EQ 0x35B9E80
	0x035B9E64 SUBS X9, X9, 0x1
	0x035B9E68 ADD X10, X10, 0x10
	0x035B9E6C B.NE 0x35B9E58
	0x035B9E70 MOV X0, X19
	0x035B9E74 MOV W2, W31
	0x035B9E78 BL 0x1C5C788
	0x035B9E7C B 0x35B9E8C
	0x035B9E80 LDRSW X9, [X10]
	0x035B9E84 ADD X8, X8, X9, 0x4, LSL
	0x035B9E88 ADD X0, X8, 0x138
	0x035B9E8C LDP X8, X1, [X0]
	0x035B9E90 MOV X0, X19
	0x035B9E94 BLR X8
	0x035B9E98 TBZ X0, 0x0, 0x35B9F08
	0x035B9E9C LDR X8, [X19]
	0x035B9EA0 LDR X1, [X23]
	0x035B9EA4 LDRH W9, [X8 + 0x12E]
	0x035B9EA8 CBZ X9, 0x35B9ECC
	0x035B9EAC LDR X10, [X8 + 0xB0]
	0x035B9EB0 ADD X10, X10, 0x8
	0x035B9EB4 LDUR X11, [X10 - 0x8]
	0x035B9EB8 CMP X11, X1
	0x035B9EBC B.EQ 0x35B9EDC
	0x035B9EC0 SUBS X9, X9, 0x1
	0x035B9EC4 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE28000
	007 Move X22, 0xB65000
	008 Move X21, 0xB7F000
	009 Move W8, [X20+255]
	010 Move X22, [X22+1024]
	011 Move X21, [X21+2280]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB7F000
	018 Move X0, [X0+2280]
	019 Call 0x1C17CF4
	020 Move X0, 0xB65000
	021 Move X0, [X0+1024]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+255], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move D0, X31
	028 Move X20, X0
	029 Call JSONNumber..ctor, X0, V0
	030 Move X2, [X21]
	031 Move X0, X19
	032 Move X1, X20
	033 Call 0x220E364, X0, X1
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move W0, W31
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Void set_AsInt(System.Int32 value)

Disassembly:
	0x035B9EC8 B.NE 0x35B9EB4
	0x035B9ECC MOV X0, X19
	0x035B9ED0 MOV W2, W31
	0x035B9ED4 BL 0x1C5C788
	0x035B9ED8 B 0x35B9EE8
	0x035B9EDC LDRSW X9, [X10]
	0x035B9EE0 ADD X8, X8, X9, 0x4, LSL
	0x035B9EE4 ADD X0, X8, 0x138
	0x035B9EE8 LDP X8, X1, [X0]
	0x035B9EEC MOV X0, X19
	0x035B9EF0 BLR X8
	0x035B9EF4 CBZ X0, 0x35B9F90
	0x035B9EF8 LDR X8, [X0]
	0x035B9EFC LDP X9, X1, [X8 + 0x1B8]
	0x035B9F00 BLR X9
	0x035B9F04 B 0x35B9E40
	0x035B9F08 MOV X21, X31
	0x035B9F0C CBZ X19, 0x35B9F68
	0x035B9F10 LDR X8, [X19]
	0x035B9F14 LDR X1, [X22]
	0x035B9F18 LDRH W9, [X8 + 0x12E]
	0x035B9F1C CBZ X9, 0x35B9F40
	0x035B9F20 LDR X10, [X8 + 0xB0]
	0x035B9F24 ADD X10, X10, 0x8
	0x035B9F28 LDUR X11, [X10 - 0x8]
	0x035B9F2C CMP X11, X1
	0x035B9F30 B.EQ 0x35B9F50
	0x035B9F34 SUBS X9, X9, 0x1
	0x035B9F38 ADD X10, X10, 0x10
	0x035B9F3C B.NE 0x35B9F28
	0x035B9F40 MOV X0, X19
	0x035B9F44 MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE28000
	008 Move X23, 0xB65000
	009 Move X22, 0xB7F000
	010 Move W8, [X21+256]
	011 Move X23, [X23+1024]
	012 Move X22, [X22+2280]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB7F000
	020 Move X0, [X0+2280]
	021 Call 0x1C17CF4
	022 Move X0, 0xB65000
	023 Move X0, [X0+1024]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+256], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 NotImplemented "Instruction SCVTF not yet implemented."
	030 Move X21, X0
	031 Call JSONNumber..ctor, X0, V0
	032 Move X2, [X22]
	033 Move X0, X19
	034 Move X1, X21
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call 0x220E364, X0, X1
	042 Return 

Method: System.Single get_AsFloat()

Disassembly:
	0x035B9F48 BL 0x1C5C788
	0x035B9F4C B 0x35B9F5C
	0x035B9F50 LDRSW X9, [X10]
	0x035B9F54 ADD X8, X8, X9, 0x4, LSL
	0x035B9F58 ADD X0, X8, 0x138
	0x035B9F5C LDP X8, X1, [X0]
	0x035B9F60 MOV X0, X19
	0x035B9F64 BLR X8
	0x035B9F68 CBNZ X21, 0x35B9F9C
	0x035B9F6C LDR X0, [X20 + 0x10]
	0x035B9F70 CBZ X0, 0x35B9F94
	0x035B9F74 ADRP X8, 0xB7E000
	0x035B9F78 LDR X8, [X8 + 0x940]
	0x035B9F7C LDP X20, X19, [X31 + 0x20]
	0x035B9F80 LDP X22, X21, [X31 + 0x10]
	0x035B9F84 LDR X1, [X8]
	0x035B9F88 LDP X30, X23, [X31], #0x30
	0x035B9F8C B 0x24B394C
	0x035B9F90 BL 0x1C16F20
	0x035B9F94 BL 0x1C16F20
	0x035B9F98 BL 0x1C16F20
	0x035B9F9C MOV X0, X21
	0x035B9FA0 BL 0x1C16F18
	0x035B9FA4 B 0x35B9FB0
	0x035B9FA8 B 0x35B9FB0
	0x035B9FAC B 0x35B9FB0
	0x035B9FB0 CMP W1, 0x1
	0x035B9FB4 B.NE 0x35B9FC8
	0x035B9FB8 BL 0x3EB1AD0
	0x035B9FBC LDR X21, [X0]
	0x035B9FC0 BL 0x3EB1AE0
	0x035B9FC4 B 0x35B9F0C
	0x035B9FC8 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE28000
	007 Move X22, 0xB65000
	008 Move X21, 0xB7F000
	009 Move W8, [X20+257]
	010 Move X22, [X22+1024]
	011 Move X21, [X21+2280]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB7F000
	018 Move X0, [X0+2280]
	019 Call 0x1C17CF4
	020 Move X0, 0xB65000
	021 Move X0, [X0+1024]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+257], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move D0, X31
	028 Move X20, X0
	029 Call JSONNumber..ctor, X0, V0
	030 Move X2, [X21]
	031 Move X0, X19
	032 Move X1, X20
	033 Call 0x220E364, X0, X1
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move S0, W31
	039 Move X30, [X31+48]
	040 Return V0

Method: System.Void set_AsFloat(System.Single value)

Disassembly:
	0x035B9FCC MOV X21, X31
	0x035B9FD0 B 0x35B9FD8
	0x035B9FD4 MOV X20, X0
	0x035B9FD8 CBZ X19, 0x35BA034
	0x035B9FDC LDR X8, [X19]
	0x035B9FE0 LDR X1, [X22]
	0x035B9FE4 LDRH W9, [X8 + 0x12E]
	0x035B9FE8 CBZ X9, 0x35BA00C
	0x035B9FEC LDR X10, [X8 + 0xB0]
	0x035B9FF0 ADD X10, X10, 0x8
	0x035B9FF4 LDUR X11, [X10 - 0x8]
	0x035B9FF8 CMP X11, X1
	0x035B9FFC B.EQ 0x35BA01C
	0x035BA000 SUBS X9, X9, 0x1
	0x035BA004 ADD X10, X10, 0x10
	0x035BA008 B.NE 0x35B9FF4
	0x035BA00C MOV X0, X19
	0x035BA010 MOV W2, W31
	0x035BA014 BL 0x1C5C788
	0x035BA018 B 0x35BA028
	0x035BA01C LDRSW X9, [X10]
	0x035BA020 ADD X8, X8, X9, 0x4, LSL
	0x035BA024 ADD X0, X8, 0x138
	0x035BA028 LDP X8, X1, [X0]
	0x035BA02C MOV X0, X19
	0x035BA030 BLR X8
	0x035BA034 CBNZ X21, 0x35BA040
	0x035BA038 MOV X0, X20
	0x035BA03C BL 0x1D2C690
	0x035BA040 MOV X0, X21
	0x035BA044 BL 0x1C16F18
	0x035BA048 BL 0x1990590
	0x035BA04C STR D8, [X31 - 0x40]!
	0x035BA050 STR X30, [X31 + 0x8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE28000
	008 Move X22, 0xB65000
	009 Move X21, 0xB7F000
	010 Move W8, [X20+258]
	011 Move X22, [X22+1024]
	012 Move X21, [X21+2280]
	013 Move V8, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB7E000
	020 Move X0, [X0+2280]
	021 Call 0x1C17CF4
	022 Move X0, 0xB64000
	023 Move X0, [X0+1024]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+258], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 NotImplemented "Instruction FCVT not yet implemented."
	030 Move X20, X0
	031 Call JSONNumber..ctor, X0, V0
	032 Move X2, [X21]
	033 Move X0, X19
	034 Move X1, X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+8]
	040 Move V8, [X31+48]
	041 Call 0x220E364, X0, X1
	042 Return 

Method: System.Double get_AsDouble()

Disassembly:
	0x035BA054 STP X24, X23, [X31 + 0x10]
	0x035BA058 STP X22, X21, [X31 + 0x20]
	0x035BA05C STP X20, X19, [X31 + 0x30]
	0x035BA060 ADRP X20, 0xE26000
	0x035BA064 LDRB W8, [X20 + 0x119]
	0x035BA068 MOV V8.16B, V0.16B
	0x035BA06C MOV X19, X0
	0x035BA070 TBNZ X8, 0x0, 0x35BA0A0
	0x035BA074 ADRP X0, 0xB7D000
	0x035BA078 LDR X0, [X0 + 0x950]
	0x035BA07C BL 0x1C16CF4
	0x035BA080 ADRP X0, 0xB7D000
	0x035BA084 LDR X0, [X0 + 0x958]
	0x035BA088 BL 0x1C16CF4
	0x035BA08C ADRP X0, 0xB7D000
	0x035BA090 LDR X0, [X0 + 0x928]
	0x035BA094 BL 0x1C16CF4
	0x035BA098 MOVZ W8, 0x1
	0x035BA09C STRB W8, [X20 + 0x119]
	0x035BA0A0 LDRB W8, [X19 + 0x18]
	0x035BA0A4 CBZ W8, 0x35BA0B0
	0x035BA0A8 MOV W0, W31
	0x035BA0AC B 0x35BA1E4
	0x035BA0B0 LDR X0, [X19 + 0x10]
	0x035BA0B4 CBZ X0, 0x35BA1FC
	0x035BA0B8 ADRP X23, 0xB7D000
	0x035BA0BC ADRP X20, 0xB39000
	0x035BA0C0 ADRP X24, 0xB7D000
	0x035BA0C4 LDR X23, [X23 + 0x958]
	0x035BA0C8 LDR X20, [X20 + 0x7D0]
	0x035BA0CC LDR X24, [X24 + 0x950]
	0x035BA0D0 LDR W8, [X0 + 0x18]
	0x035BA0D4 CMP W8, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE27000
	007 Move X22, 0xB64000
	008 Move X21, 0xB7E000
	009 Move W8, [X20+259]
	010 Move X22, [X22+1024]
	011 Move X21, [X21+2280]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB7E000
	018 Move X0, [X0+2280]
	019 Call 0x1C17CF4
	020 Move X0, 0xB64000
	021 Move X0, [X0+1024]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+259], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move D0, X31
	028 Move X20, X0
	029 Call JSONNumber..ctor, X0, V0
	030 Move X2, [X21]
	031 Move X0, X19
	032 Move X1, X20
	033 Call 0x220E364, X0, X1
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move D0, X31
	039 Move X30, [X31+48]
	040 Return V0

Method: System.Void set_AsDouble(System.Double value)

Disassembly:
	0x035BA0D8 B.LE 0x35BA1D0
	0x035BA0DC LDR X1, [X23]
	0x035BA0E0 BL 0x24B385C
	0x035BA0E4 MOV X21, X0
	0x035BA0E8 CBZ X0, 0x35BA118
	0x035BA0EC MOV X0, X21
	0x035BA0F0 MOV V0.16B, V8.16B
	0x035BA0F4 BL 0x35BA238
	0x035BA0F8 TBZ X0, 0x0, 0x35BA1D0
	0x035BA0FC LDR X0, [X19 + 0x10]
	0x035BA100 CBZ X0, 0x35BA1FC
	0x035BA104 LDR X1, [X24]
	0x035BA108 BL 0x24B3670
	0x035BA10C LDR X0, [X19 + 0x10]
	0x035BA110 CBNZ X0, 0x35BA0D0
	0x035BA114 B 0x35BA1FC
	0x035BA118 BL 0x1C16F20
	0x035BA11C B 0x35BA200
	0x035BA120 B 0x35BA124
	0x035BA124 MOV X22, X0
	0x035BA128 CMP W1, 0x1
	0x035BA12C B.NE 0x35BA22C
	0x035BA130 MOV X0, X22
	0x035BA134 BL 0x3EB1AD0
	0x035BA138 MOV X22, X0
	0x035BA13C MOV X0, X20
	0x035BA140 BL 0x1C16D08
	0x035BA144 LDR X8, [X22]
	0x035BA148 LDR X1, [X8]
	0x035BA14C BL 0x1C17270
	0x035BA150 TBZ X0, 0x0, 0x35BA200
	0x035BA154 LDR X22, [X22]
	0x035BA158 BL 0x3EB1AE0
	0x035BA15C CBZ X21, 0x35BA1FC

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE27000
	008 Move X22, 0xB64000
	009 Move X21, 0xB7E000
	010 Move W8, [X20+260]
	011 Move X22, [X22+1024]
	012 Move X21, [X21+2280]
	013 Move V8, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB7E000
	020 Move X0, [X0+2280]
	021 Call 0x1C17CF4
	022 Move X0, 0xB64000
	023 Move X0, [X0+1024]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+260], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move V0, V8
	030 Move X20, X0
	031 Call JSONNumber..ctor, X0, V0
	032 Move X2, [X21]
	033 Move X0, X19
	034 Move X1, X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+8]
	040 Move V8, [X31+48]
	041 Call 0x220E364, X0, X1
	042 Return 

Method: System.Int64 get_AsLong()

Disassembly:
	0x035BA160 MOV X8, X21
	0x035BA164 LDR W9, [X8 + 0x10]
	0x035BA168 CMP W9, 0x3
	0x035BA16C B.EQ 0x35BA188
	0x035BA170 LDR X8, [X8 + 0x30]
	0x035BA174 CBNZ X8, 0x35BA164
	0x035BA178 MOV X0, X21
	0x035BA17C MOV X1, X21
	0x035BA180 MOV X2, X22
	0x035BA184 BL 0x35BCD54
	0x035BA188 LDR W8, [X21 + 0x10]
	0x035BA18C CMP W8, 0x2
	0x035BA190 B.EQ 0x35BA0FC
	0x035BA194 CMP W8, 0x4
	0x035BA198 B.EQ 0x35BA0FC
	0x035BA19C MOV X9, X21
	0x035BA1A0 LDR X9, [X9 + 0x30]
	0x035BA1A4 CBZ X9, 0x35BA1C4
	0x035BA1A8 LDR W10, [X9 + 0x10]
	0x035BA1AC CMP W10, 0x2
	0x035BA1B0 B.NE 0x35BA1A0
	0x035BA1B4 B 0x35BA0FC
	0x035BA1B8 LDR X21, [X21 + 0x30]
	0x035BA1BC CBZ X21, 0x35BA1D0
	0x035BA1C0 LDR W8, [X21 + 0x10]
	0x035BA1C4 CMP W8, 0x3
	0x035BA1C8 B.NE 0x35BA1B8
	0x035BA1CC B 0x35BA0FC
	0x035BA1D0 LDR X8, [X19 + 0x10]
	0x035BA1D4 CBZ X8, 0x35BA1FC
	0x035BA1D8 LDR W8, [X8 + 0x18]
	0x035BA1DC CMP W8, 0x0
	0x035BA1E0 CSET W0, EQ
	0x035BA1E4 LDP X20, X19, [X31 + 0x30]
	0x035BA1E8 LDP X22, X21, [X31 + 0x20]
	0x035BA1EC LDP X24, X23, [X31 + 0x10]
	0x035BA1F0 LDR X30, [X31 + 0x8]
	0x035BA1F4 LDR V8, [X31], #0x40
	0x035BA1F8 RET
	0x035BA1FC BL 0x1C16F20
	0x035BA200 MOVZ W0, 0x8
	0x035BA204 BL 0x3EB1AF0
	0x035BA208 LDR X8, [X22]
	0x035BA20C STR X8, [X0]
	0x035BA210 ADRP X1, 0x8FA000
	0x035BA214 ADD X1, X1, 0xE58
	0x035BA218 MOV X2, X31
	0x035BA21C BL 0x3EB1B00
	0x035BA220 B 0x35BA224
	0x035BA224 MOV X22, X0
	0x035BA228 BL 0x3EB1AE0
	0x035BA22C MOV X0, X22
	0x035BA230 BL 0x1D2C690
	0x035BA234 BL 0x1990590
	0x035BA238 STR D8, [X31 - 0x20]!
	0x035BA23C STR X30, [X31 + 0x8]
	0x035BA240 STP X20, X19, [X31 + 0x10]
	0x035BA244 LDR W9, [X0 + 0x10]
	0x035BA248 MOVZ W8, 0x1
	0x035BA24C CMP W9, 0x2
	0x035BA250 B.EQ 0x35BA2CC
	0x035BA254 CMP W9, 0x4
	0x035BA258 B.EQ 0x35BA2CC
	0x035BA25C MOV V8.16B, V0.16B
	0x035BA260 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE27000
	006 Move X20, 0xB3B000
	007 Move W8, [X21+261]
	008 Move X20, [X20+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xB7E000
	015 Move X0, [X0+2280]
	016 Call 0x1C17CF4
	017 Move X0, 0xB7E000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move X0, 0xB3B000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move X0, 0xB64000
	024 Move X0, [X0+1024]
	025 Call 0x1C17CF4
	026 Move X0, 0xB7E000
	027 Move X0, [X0+1616]
	028 Call 0x1C17CF4
	029 Move X0, 0xB3C000
	030 Move X0, [X0+1200]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+261], W8
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X20]
	040 Move X8, [X0+184]
	041 Move W8, [X8+1]
	042 Compare W8, 0
	043 JumpIfEqual {55}
	044 Move X8, 0xB7E000
	045 Move X8, [X8+1616]
	046 Move X20, 0xB3C000
	047 Move X0, [X8]
	048 Move X20, [X20+1200]
	049 Call 0x1C17F10
	050 Move X1, [X20]
	051 Move X20, X0
	052 Call JSONString..ctor, X0, X1
	053 Move X8, 0xB7E000
	054 Move X8, [X8+2288]
	055 Move X8, 0xB64000
	056 Move X8, [X8+1024]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move D0, X31
	060 Move X20, X0
	061 Call JSONNumber..ctor, X0, V0
	062 Move X8, 0xB7E000
	063 Move X8, [X8+2280]
	064 Move X2, [X8]
	065 Move X0, X19
	066 Move X1, X20
	067 Call 0x220E364, X0, X1
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X0, X31
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0

Method: System.Void set_AsLong(System.Int64 value)

Disassembly:
	0x035BA264 MOV X8, X0
	0x035BA268 LDR X8, [X8 + 0x30]
	0x035BA26C CBZ X8, 0x35BA280
	0x035BA270 LDR W10, [X8 + 0x10]
	0x035BA274 CMP W10, 0x2
	0x035BA278 B.NE 0x35BA268
	0x035BA27C B 0x35BA2C8
	0x035BA280 CMP W9, 0x3
	0x035BA284 B.EQ 0x35BA2C8
	0x035BA288 MOV X8, X19
	0x035BA28C LDR X8, [X8 + 0x30]
	0x035BA290 CBZ X8, 0x35BA2A4
	0x035BA294 LDR W10, [X8 + 0x10]
	0x035BA298 CMP W10, 0x3
	0x035BA29C B.NE 0x35BA28C
	0x035BA2A0 B 0x35BA2C8
	0x035BA2A4 CBZ W9, 0x35BA2E0
	0x035BA2A8 LDR X8, [X19]
	0x035BA2AC LDP X9, X1, [X8 + 0x198]
	0x035BA2B0 MOV X0, X19
	0x035BA2B4 MOV V0.16B, V8.16B
	0x035BA2B8 BLR X9
	0x035BA2BC TBZ X0, 0x0, 0x35BA328
	0x035BA2C0 MOV X0, X19
	0x035BA2C4 BL 0x35BC9EC
	0x035BA2C8 MOVZ W8, 0x1
	0x035BA2CC LDP X20, X19, [X31 + 0x10]
	0x035BA2D0 LDR X30, [X31 + 0x8]
	0x035BA2D4 MOV W0, W8
	0x035BA2D8 LDR V8, [X31], #0x20
	0x035BA2DC RET
	0x035BA2E0 LDR X8, [X19]
	0x035BA2E4 LDP X9, X1, [X8 + 0x188]
	0x035BA2E8 MOV X0, X19
	0x035BA2EC BLR X9
	0x035BA2F0 LDR W9, [X19 + 0x10]
	0x035BA2F4 MOVZ W8, 0x1
	0x035BA2F8 CMP W9, 0x2
	0x035BA2FC B.EQ 0x35BA2CC
	0x035BA300 CMP W9, 0x4
	0x035BA304 B.EQ 0x35BA2CC
	0x035BA308 MOV X10, X19
	0x035BA30C LDR X10, [X10 + 0x30]
	0x035BA310 CBZ X10, 0x35BA330
	0x035BA314 LDR W8, [X10 + 0x10]
	0x035BA318 CMP W8, 0x2
	0x035BA31C MOVZ W8, 0x1
	0x035BA320 B.NE 0x35BA30C
	0x035BA324 B 0x35BA2CC
	0x035BA328 MOV W8, W31
	0x035BA32C B 0x35BA2CC
	0x035BA330 CMP W9, 0x3
	0x035BA334 B.EQ 0x35BA2C8
	0x035BA338 MOV X9, X19
	0x035BA33C LDR X9, [X9 + 0x30]
	0x035BA340 CBZ X9, 0x35BA358
	0x035BA344 LDR W8, [X9 + 0x10]
	0x035BA348 CMP W8, 0x3
	0x035BA34C MOVZ W8, 0x1
	0x035BA350 B.NE 0x35BA33C
	0x035BA354 B 0x35BA2CC
	0x035BA358 MOVZ W8, 0x1
	0x035BA35C STR W8, [X19 + 0x10]
	0x035BA360 B 0x35BA2A8
	0x035BA364 CMP W1, 0x1
	0x035BA368 MOV X20, X0
	0x035BA36C B.NE 0x35BA454
	0x035BA370 MOV X0, X20
	0x035BA374 BL 0x3EB1AD0
	0x035BA378 MOV X20, X0
	0x035BA37C ADRP X0, 0xB39000
	0x035BA380 LDR X0, [X0 + 0x7D0]
	0x035BA384 BL 0x1C16D08
	0x035BA388 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE27000
	007 Move [X31+8], X1
	008 Move X21, 0xB3B000
	009 Move W8, [X22+262]
	010 Move X21, [X21+1120]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xB7E000
	018 Move X0, [X0+2280]
	019 Call 0x1C17CF4
	020 Move X0, 0xB7E000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move X0, 0xB3B000
	024 Move X0, [X0+1120]
	025 Call 0x1C17CF4
	026 Move X0, 0xB64000
	027 Move X0, [X0+1024]
	028 Call 0x1C17CF4
	029 Move X0, 0xB7E000
	030 Move X0, [X0+1616]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+262], W8
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move X8, [X0+184]
	041 Move W8, [X8+1]
	042 Compare W8, 0
	043 JumpIfEqual {68}
	044 Move X20, 0xB7E000
	045 Move X22, 0xB7E000
	046 Move X20, [X20+1616]
	047 Move X22, [X22+2288]
	048 Add X0, X31, 8
	049 Move X1, X31
	050 Call Int64.ToString, X0
	051 Move X8, [X20]
	052 Move X20, X0
	053 Move X0, X8
	054 Call 0x1C17F10
	055 Move X1, X20
	056 Move X21, X0
	057 Call JSONString..ctor, X0, X1
	058 Move X2, [X22]
	059 Move X0, X19
	060 Move X1, X21
	061 Call 0x220E364, X0, X1
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 
	068 Move X8, 0xB64000
	069 Move X8, [X8+1024]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 NotImplemented "Instruction SCVTF not yet implemented."
	073 Move X21, X0
	074 Call JSONNumber..ctor, X0, V0
	075 Move X8, 0xB7E000
	076 Move X8, [X8+2280]
	077 Move X0, X19
	078 Move X1, X21
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X2, [X8]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Call 0x220E364, X0, X1
	086 Return 

Method: System.UInt64 get_AsULong()

Disassembly:
	0x035BA38C LDR X1, [X8]
	0x035BA390 BL 0x1C17270
	0x035BA394 TBNZ X0, 0x0, 0x35BA3FC
	0x035BA398 MOVZ W0, 0x8
	0x035BA39C BL 0x3EB1AF0
	0x035BA3A0 LDR X8, [X20]
	0x035BA3A4 STR X8, [X0]
	0x035BA3A8 ADRP X1, 0x8FA000
	0x035BA3AC ADD X1, X1, 0xE58
	0x035BA3B0 MOV X2, X31
	0x035BA3B4 BL 0x3EB1B00
	0x035BA3B8 B 0x35BA44C
	0x035BA3BC MOV X20, X0
	0x035BA3C0 BL 0x3EB1AE0
	0x035BA3C4 B 0x35BA454
	0x035BA3C8 CMP W1, 0x1
	0x035BA3CC MOV X20, X0
	0x035BA3D0 B.NE 0x35BA454
	0x035BA3D4 MOV X0, X20
	0x035BA3D8 BL 0x3EB1AD0
	0x035BA3DC MOV X20, X0
	0x035BA3E0 ADRP X0, 0xB39000
	0x035BA3E4 LDR X0, [X0 + 0x7D0]
	0x035BA3E8 BL 0x1C16D08
	0x035BA3EC LDR X8, [X20]
	0x035BA3F0 LDR X1, [X8]
	0x035BA3F4 BL 0x1C17270
	0x035BA3F8 TBZ X0, 0x0, 0x35BA42C
	0x035BA3FC LDR X20, [X20]
	0x035BA400 BL 0x3EB1AE0
	0x035BA404 MOV X0, X19
	0x035BA408 MOV X1, X19
	0x035BA40C MOV X2, X20
	0x035BA410 BL 0x35BCD54
	0x035BA414 LDRB W8, [X19 + 0x14]
	0x035BA418 CBZ W8, 0x35BA2C8
	0x035BA41C LDR X8, [X19 + 0x30]
	0x035BA420 CBZ X8, 0x35BA2C8
	0x035BA424 MOV X0, X20
	0x035BA428 BL 0x1C16F18
	0x035BA42C MOVZ W0, 0x8
	0x035BA430 BL 0x3EB1AF0
	0x035BA434 LDR X8, [X20]
	0x035BA438 STR X8, [X0]
	0x035BA43C ADRP X1, 0x8FA000
	0x035BA440 ADD X1, X1, 0xE58
	0x035BA444 MOV X2, X31
	0x035BA448 BL 0x3EB1B00
	0x035BA44C MOV X20, X0
	0x035BA450 BL 0x3EB1AE0
	0x035BA454 MOV X0, X20
	0x035BA458 BL 0x1D2C690
	0x035BA45C BL 0x1990590
	0x035BA460 LDR W8, [X0 + 0x10]
	0x035BA464 CMP W8, 0x3
	0x035BA468 B.EQ 0x35BA474
	0x035BA46C LDR X0, [X0 + 0x30]
	0x035BA470 CBNZ X0, 0x35BA460
	0x035BA474 CMP W8, 0x3
	0x035BA478 CSET W0, EQ
	0x035BA47C RET
	0x035BA480 MOV X2, X1
	0x035BA484 MOV X1, X0
	0x035BA488 B 0x35BCD54
	0x035BA48C STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE27000
	006 Move X20, 0xB3B000
	007 Move W8, [X21+263]
	008 Move X20, [X20+1120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xB7E000
	015 Move X0, [X0+2280]
	016 Call 0x1C17CF4
	017 Move X0, 0xB7E000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move X0, 0xB3B000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move X0, 0xB64000
	024 Move X0, [X0+1024]
	025 Call 0x1C17CF4
	026 Move X0, 0xB7E000
	027 Move X0, [X0+1616]
	028 Call 0x1C17CF4
	029 Move X0, 0xB3C000
	030 Move X0, [X0+1200]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+263], W8
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X20]
	040 Move X8, [X0+184]
	041 Move W8, [X8+1]
	042 Compare W8, 0
	043 JumpIfEqual {55}
	044 Move X8, 0xB7E000
	045 Move X8, [X8+1616]
	046 Move X20, 0xB3C000
	047 Move X0, [X8]
	048 Move X20, [X20+1200]
	049 Call 0x1C17F10
	050 Move X1, [X20]
	051 Move X20, X0
	052 Call JSONString..ctor, X0, X1
	053 Move X8, 0xB7E000
	054 Move X8, [X8+2288]
	055 Move X8, 0xB64000
	056 Move X8, [X8+1024]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move D0, X31
	060 Move X20, X0
	061 Call JSONNumber..ctor, X0, V0
	062 Move X8, 0xB7E000
	063 Move X8, [X8+2280]
	064 Move X2, [X8]
	065 Move X0, X19
	066 Move X1, X20
	067 Call 0x220E364, X0, X1
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X0, X31
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0

Method: System.Void set_AsULong(System.UInt64 value)

Disassembly:
	0x035BA490 STP X20, X19, [X31 + 0x10]
	0x035BA494 ADRP X20, 0xE26000
	0x035BA498 LDRB W8, [X20 + 0x11A]
	0x035BA49C MOV X19, X0
	0x035BA4A0 TBNZ X8, 0x0, 0x35BA4B8
	0x035BA4A4 ADRP X0, 0xB7D000
	0x035BA4A8 LDR X0, [X0 + 0x948]
	0x035BA4AC BL 0x1C16CF4
	0x035BA4B0 MOVZ W8, 0x1
	0x035BA4B4 STRB W8, [X20 + 0x11A]
	0x035BA4B8 LDR X0, [X19 + 0x10]
	0x035BA4BC CBZ X0, 0x35BA4D8
	0x035BA4C0 ADRP X8, 0xB7D000
	0x035BA4C4 LDR X8, [X8 + 0x948]
	0x035BA4C8 LDP X20, X19, [X31 + 0x10]
	0x035BA4CC LDR X1, [X8]
	0x035BA4D0 LDR X30, [X31], #0x20
	0x035BA4D4 B 0x24B3C6C
	0x035BA4D8 BL 0x1C16F20
	0x035BA4DC STR X30, [X31 - 0x20]!
	0x035BA4E0 STP X20, X19, [X31 + 0x10]
	0x035BA4E4 ADRP X20, 0xE26000
	0x035BA4E8 LDRB W8, [X20 + 0x11B]
	0x035BA4EC MOV X19, X0
	0x035BA4F0 TBNZ X8, 0x0, 0x35BA508
	0x035BA4F4 ADRP X0, 0xB7D000
	0x035BA4F8 LDR X0, [X0 + 0x948]
	0x035BA4FC BL 0x1C16CF4
	0x035BA500 MOVZ W8, 0x1
	0x035BA504 STRB W8, [X20 + 0x11B]
	0x035BA508 LDR X0, [X19 + 0x10]
	0x035BA50C CBZ X0, 0x35BA528
	0x035BA510 ADRP X8, 0xB7D000
	0x035BA514 LDR X8, [X8 + 0x948]
	0x035BA518 LDP X20, X19, [X31 + 0x10]
	0x035BA51C LDR X1, [X8]
	0x035BA520 LDR X30, [X31], #0x20
	0x035BA524 B 0x24B3C6C
	0x035BA528 BL 0x1C16F20
	0x035BA52C STR X30, [X31 - 0x30]!
	0x035BA530 STP X22, X21, [X31 + 0x10]
	0x035BA534 STP X20, X19, [X31 + 0x20]
	0x035BA538 ADRP X21, 0xE26000
	0x035BA53C ADRP X22, 0xB7D000
	0x035BA540 ADRP X20, 0xB7D000
	0x035BA544 LDRB W8, [X21 + 0x11C]
	0x035BA548 LDR X22, [X22 + 0x960]
	0x035BA54C LDR X20, [X20 + 0x968]
	0x035BA550 MOV X19, X0
	0x035BA554 TBNZ X8, 0x0, 0x35BA578
	0x035BA558 ADRP X0, 0xB7D000
	0x035BA55C LDR X0, [X0 + 0x968]
	0x035BA560 BL 0x1C16CF4
	0x035BA564 ADRP X0, 0xB7D000
	0x035BA568 LDR X0, [X0 + 0x960]
	0x035BA56C BL 0x1C16CF4
	0x035BA570 MOVZ W8, 0x1
	0x035BA574 STRB W8, [X21 + 0x11C]
	0x035BA578 LDR X0, [X22]
	0x035BA57C BL 0x1C16F10
	0x035BA580 LDR X1, [X20]
	0x035BA584 MOV X20, X0
	0x035BA588 BL 0x24B3510
	0x035BA58C STR X20, [X19 + 0x10]
	0x035BA590 MOV X0, X19
	0x035BA594 LDP X20, X19, [X31 + 0x20]
	0x035BA598 LDP X22, X21, [X31 + 0x10]
	0x035BA59C MOV X1, X31
	0x035BA5A0 LDR X30, [X31], #0x30
	0x035BA5A4 B 0x33BDD8C
	0x035BA5A8 LDRB W0, [X0 + 0x18]
	0x035BA5AC RET
	0x035BA5B0 AND W8, W1, 0x1
	0x035BA5B4 STRB W8, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE27000
	007 Move [X31+8], X1
	008 Move X21, 0xB3B000
	009 Move W8, [X22+264]
	010 Move X21, [X21+1120]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xB7E000
	018 Move X0, [X0+2280]
	019 Call 0x1C17CF4
	020 Move X0, 0xB7E000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move X0, 0xB3B000
	024 Move X0, [X0+1120]
	025 Call 0x1C17CF4
	026 Move X0, 0xB64000
	027 Move X0, [X0+1024]
	028 Call 0x1C17CF4
	029 Move X0, 0xB7E000
	030 Move X0, [X0+1616]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+264], W8
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move X8, [X0+184]
	041 Move W8, [X8+1]
	042 Compare W8, 0
	043 JumpIfEqual {68}
	044 Move X20, 0xB7E000
	045 Move X22, 0xB7E000
	046 Move X20, [X20+1616]
	047 Move X22, [X22+2288]
	048 Add X0, X31, 8
	049 Move X1, X31
	050 Call UInt64.ToString, X0
	051 Move X8, [X20]
	052 Move X20, X0
	053 Move X0, X8
	054 Call 0x1C17F10
	055 Move X1, X20
	056 Move X21, X0
	057 Call JSONString..ctor, X0, X1
	058 Move X2, [X22]
	059 Move X0, X19
	060 Move X1, X21
	061 Call 0x220E364, X0, X1
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 
	068 Move X8, 0xB64000
	069 Move X8, [X8+1024]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 NotImplemented "Instruction UCVTF not yet implemented."
	073 Move X21, X0
	074 Call JSONNumber..ctor, X0, V0
	075 Move X8, 0xB7E000
	076 Move X8, [X8+2280]
	077 Move X0, X19
	078 Move X1, X21
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X2, [X8]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Call 0x220E364, X0, X1
	086 Return 

Method: System.Boolean get_AsBool()

Disassembly:
	0x035BA5B8 RET
	0x035BA5BC STR X30, [X31 - 0x20]!
	0x035BA5C0 STP X20, X19, [X31 + 0x10]
	0x035BA5C4 ADRP X20, 0xE26000
	0x035BA5C8 LDRB W8, [X20 + 0x11D]
	0x035BA5CC MOV X19, X0
	0x035BA5D0 TBNZ X8, 0x0, 0x35BA5E8
	0x035BA5D4 ADRP X0, 0xB7D000
	0x035BA5D8 LDR X0, [X0 + 0x970]
	0x035BA5DC BL 0x1C16CF4
	0x035BA5E0 MOVZ W8, 0x1
	0x035BA5E4 STRB W8, [X20 + 0x11D]
	0x035BA5E8 LDR X8, [X19 + 0x10]
	0x035BA5EC CBZ X8, 0x35BA600
	0x035BA5F0 LDR W0, [X8 + 0x20]
	0x035BA5F4 LDP X20, X19, [X31 + 0x10]
	0x035BA5F8 LDR X30, [X31], #0x20
	0x035BA5FC RET
	0x035BA600 BL 0x1C16F20
	0x035BA604 STP X30, X21, [X31 - 0x20]!
	0x035BA608 STP X20, X19, [X31 + 0x10]
	0x035BA60C ADRP X21, 0xE26000
	0x035BA610 LDRB W8, [X21 + 0x11E]
	0x035BA614 MOV X19, X1
	0x035BA618 MOV X20, X0
	0x035BA61C TBNZ X8, 0x0, 0x35BA640
	0x035BA620 ADRP X0, 0xB39000
	0x035BA624 LDR X0, [X0 + 0x898]
	0x035BA628 BL 0x1C16CF4
	0x035BA62C ADRP X0, 0xB7D000
	0x035BA630 LDR X0, [X0 + 0x978]
	0x035BA634 BL 0x1C16CF4
	0x035BA638 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE27000
	007 Move X22, 0xB7E000
	008 Move X21, 0xB7E000
	009 Move W8, [X20+265]
	010 Move X22, [X22+1632]
	011 Move X21, [X21+2296]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB7E000
	018 Move X0, [X0+1632]
	019 Call 0x1C17CF4
	020 Move X0, 0xB7E000
	021 Move X0, [X0+2296]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+265], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move W1, W31
	028 Move X20, X0
	029 Call JSONBool..ctor, X0, X1
	030 Move X2, [X21]
	031 Move X0, X19
	032 Move X1, X20
	033 Call 0x220E364, X0, X1
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move W0, W31
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Void set_AsBool(System.Boolean value)

Disassembly:
	0x035BA63C STRB W8, [X21 + 0x11E]
	0x035BA640 LDR X0, [X20 + 0x10]
	0x035BA644 CBZ X0, 0x35BA688
	0x035BA648 ADRP X8, 0xB7D000
	0x035BA64C LDR X8, [X8 + 0x978]
	0x035BA650 ADRP X20, 0xB39000
	0x035BA654 MOV X1, X19
	0x035BA658 LDR X2, [X8]
	0x035BA65C LDR X20, [X20 + 0x898]
	0x035BA660 BL 0x24F1750
	0x035BA664 LDR X0, [X20]
	0x035BA668 BL 0x1C16F10
	0x035BA66C MOV X1, X19
	0x035BA670 MOV X20, X0
	0x035BA674 BL 0x35B9AFC
	0x035BA678 MOV X0, X20
	0x035BA67C LDP X20, X19, [X31 + 0x10]
	0x035BA680 LDP X30, X21, [X31], #0x20
	0x035BA684 RET
	0x035BA688 BL 0x1C16F20
	0x035BA68C STP X30, X23, [X31 - 0x30]!
	0x035BA690 STP X22, X21, [X31 + 0x10]
	0x035BA694 STP X20, X19, [X31 + 0x20]
	0x035BA698 ADRP X21, 0xE26000
	0x035BA69C LDRB W8, [X21 + 0x11F]
	0x035BA6A0 MOV X19, X1
	0x035BA6A4 MOV X20, X0
	0x035BA6A8 TBNZ X8, 0x0, 0x35BA6C0
	0x035BA6AC ADRP X0, 0xB7D000
	0x035BA6B0 LDR X0, [X0 + 0x978]
	0x035BA6B4 BL 0x1C16CF4
	0x035BA6B8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE27000
	008 Move X23, 0xB7E000
	009 Move X22, 0xB7E000
	010 Move W8, [X21+266]
	011 Move X23, [X23+1632]
	012 Move X22, [X22+2296]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB7E000
	020 Move X0, [X0+1632]
	021 Call 0x1C17CF4
	022 Move X0, 0xB7E000
	023 Move X0, [X0+2296]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+266], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 And W1, W20, 1
	030 Move X21, X0
	031 Call JSONBool..ctor, X0, X1
	032 Move X2, [X22]
	033 Move X0, X19
	034 Move X1, X21
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call 0x220E364, X0, X1
	042 Return 

Method: SimpleJSON.JSONArray get_AsArray()

Disassembly:
	0x035BA6BC STRB W8, [X21 + 0x11F]
	0x035BA6C0 CBZ X19, 0x35BA728
	0x035BA6C4 LDR X8, [X19 + 0x18]
	0x035BA6C8 CMP W8, 0x1
	0x035BA6CC B.LT 0x35BA714
	0x035BA6D0 ADRP X22, 0xB7D000
	0x035BA6D4 LDR X22, [X22 + 0x978]
	0x035BA6D8 MOV X21, X31
	0x035BA6DC AND X8, X8, 0x0
	0x035BA6E0 ADD X23, X19, 0x20
	0x035BA6E4 CMP X21, W8, UXTW
	0x035BA6E8 B.CS 0x35BA724
	0x035BA6EC LDR X1, [X23, X21, LSL #3]
	0x035BA6F0 CBZ X1, 0x35BA704
	0x035BA6F4 LDR X0, [X20 + 0x10]
	0x035BA6F8 CBZ X0, 0x35BA728
	0x035BA6FC LDR X2, [X22]
	0x035BA700 BL 0x24F1750
	0x035BA704 LDR W8, [X19 + 0x18]
	0x035BA708 ADD X21, X21, 0x1
	0x035BA70C CMP X21, W8, SXTW
	0x035BA710 B.LT 0x35BA6E4
	0x035BA714 LDP X20, X19, [X31 + 0x20]
	0x035BA718 LDP X22, X21, [X31 + 0x10]
	0x035BA71C LDP X30, X23, [X31], #0x30
	0x035BA720 RET
	0x035BA724 BL 0x1C16F28
	0x035BA728 BL 0x1C16F20
	0x035BA72C SUB X31, X31, 0x50
	0x035BA730 STP X30, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE27000
	007 Move X22, 0xB64000
	008 Move X21, 0xB7E000
	009 Move W8, [X20+267]
	010 Move X22, [X22+880]
	011 Move X21, [X21+2264]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB64000
	018 Move X0, [X0+880]
	019 Call 0x1C17CF4
	020 Move X0, 0xB7E000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+267], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X20, X0
	028 Call JSONArray..ctor, X0
	029 Move X2, [X21]
	030 Move X0, X19
	031 Move X1, X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call 0x220E364, X0, X1
	038 Return X0

Method: SimpleJSON.JSONObject get_AsObject()

Disassembly:
	0x035BA734 STP X22, X21, [X31 + 0x30]
	0x035BA738 STP X20, X19, [X31 + 0x40]
	0x035BA73C ADRP X20, 0xE26000
	0x035BA740 LDRB W8, [X20 + 0x120]
	0x035BA744 MOV X19, X0
	0x035BA748 TBNZ X8, 0x0, 0x35BA790
	0x035BA74C ADRP X0, 0xB7D000
	0x035BA750 LDR X0, [X0 + 0x980]
	0x035BA754 BL 0x1C16CF4
	0x035BA758 ADRP X0, 0xB7D000
	0x035BA75C LDR X0, [X0 + 0x988]
	0x035BA760 BL 0x1C16CF4
	0x035BA764 ADRP X0, 0xB7D000
	0x035BA768 LDR X0, [X0 + 0x990]
	0x035BA76C BL 0x1C16CF4
	0x035BA770 ADRP X0, 0xB7D000
	0x035BA774 LDR X0, [X0 + 0x998]
	0x035BA778 BL 0x1C16CF4
	0x035BA77C ADRP X0, 0xB7D000
	0x035BA780 LDR X0, [X0 + 0x9A0]
	0x035BA784 BL 0x1C16CF4
	0x035BA788 MOVZ W8, 0x1
	0x035BA78C STRB W8, [X20 + 0x120]
	0x035BA790 STP X31, X31, [X31 + 0x8]
	0x035BA794 STR X31, [X31 + 0x18]
	0x035BA798 LDR X0, [X19 + 0x10]
	0x035BA79C CBZ X0, 0x35BA838
	0x035BA7A0 ADRP X8, 0xB7D000
	0x035BA7A4 LDR X8, [X8 + 0x9A0]
	0x035BA7A8 ADRP X20, 0xB7D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE27000
	007 Move X22, 0xB62000
	008 Move X21, 0xB7E000
	009 Move W8, [X20+268]
	010 Move X22, [X22+3008]
	011 Move X21, [X21+2272]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB7E000
	018 Move X0, [X0+2272]
	019 Call 0x1C17CF4
	020 Move X0, 0xB62000
	021 Move X0, [X0+3008]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+268], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X20, X0
	028 Call JSONObject..ctor, X0
	029 Move X2, [X21]
	030 Move X0, X19
	031 Move X1, X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call 0x220E364, X0, X1
	038 Return X0

Method: System.Void WriteToStringBuilder(System.Text.StringBuilder aSB, System.Int32 aIndent, System.Int32 aIndentInc, SimpleJSON.JSONTextMode aMode)

Disassembly:
	0x035BA7AC LDR X20, [X20 + 0x988]
	0x035BA7B0 ADRP X23, 0xB7D000
	0x035BA7B4 LDR X1, [X8]
	0x035BA7B8 ADRP X22, 0xB7D000
	0x035BA7BC ADRP X21, 0xB7D000
	0x035BA7C0 LDR X23, [X23 + 0x990]
	0x035BA7C4 LDR X22, [X22 + 0x998]
	0x035BA7C8 LDR X21, [X21 + 0x980]
	0x035BA7CC ADD X8, X31, 0x8
	0x035BA7D0 BL 0x24F17FC
	0x035BA7D4 LDR X1, [X20]
	0x035BA7D8 ADD X0, X31, 0x8
	0x035BA7DC BL 0x2BC471C
	0x035BA7E0 TBZ X0, 0x0, 0x35BA804
	0x035BA7E4 LDR X1, [X23]
	0x035BA7E8 ADD X0, X31, 0x8
	0x035BA7EC BL 0x2BC4808
	0x035BA7F0 CBZ X0, 0x35BA834
	0x035BA7F4 LDR X8, [X0]
	0x035BA7F8 LDP X9, X1, [X8 + 0x1B8]
	0x035BA7FC BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE27000
	005 Move W8, [X20+269]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB3A000
	012 Move X0, [X0+2096]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+269], W8
	016 Compare X19, 0
	017 JumpIfEqual {28}
	018 Move X8, 0xB3A000
	019 Move X8, [X8+2096]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call StringBuilder.Append, X0, X1
	027 Return 
	028 Call 0x1C17F20

Method: System.Void SerializeBinary(System.IO.BinaryWriter aWriter)

Disassembly:
	0x035BA800 B 0x35BA7D4

ISIL:
	001 Return 

