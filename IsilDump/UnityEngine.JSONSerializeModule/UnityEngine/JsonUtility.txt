Type: UnityEngine.JsonUtility

Method: System.String ToJsonInternal(System.Object obj, System.Boolean prettyPrint)

Disassembly:
	0x03C87B88 BL 0x1C16CB8
	0x03C87B8C MOV X8, X0
	0x03C87B90 STR X0, [X21 + 0xBF0]
	0x03C87B94 BLR X8
	0x03C87B98 AND W8, W0, 0x1
	0x03C87B9C MOV W0, W20
	0x03C87BA0 MOV X1, X31
	0x03C87BA4 STRB W8, [X31]
	0x03C87BA8 BL 0x3C35CBC
	0x03C87BAC ADRP X20, 0x75F000
	0x03C87BB0 LDR X8, [X20 + 0xC58]
	0x03C87BB4 MOVZ W9, 0x101
	0x03C87BB8 STR W0, [X31 + 0x8]
	0x03C87BBC STURH W9, [X31 + 0x1]
	0x03C87BC0 STP S9, S8, [X31 + 0xC]
	0x03C87BC4 CBNZ X8, 0x3C87BDC
	0x03C87BC8 ADRP X0, 0xFFFFFFFFFCE9E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x760000
	006 Move X2, [X21+2896]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51785728
	012 Add X0, X0, 1975
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2896], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Object FromJsonInternal(System.String json, System.Object objectToOverwrite, System.Type type)

Disassembly:
	0x03C87BCC ADD X0, X0, 0x5A3
	0x03C87BD0 BL 0x1C16CB8
	0x03C87BD4 MOV X8, X0
	0x03C87BD8 STR X0, [X20 + 0xC58]
	0x03C87BDC ADD X0, X31, 0x0
	0x03C87BE0 BLR X8
	0x03C87BE4 LDUR V0, [X31 + 0xC]
	0x03C87BE8 LDR V1, [X31]
	0x03C87BEC LDP X22, X21, [X31 + 0x40]
	0x03C87BF0 LDR X30, [X31 + 0x30]
	0x03C87BF4 STUR V0, [X19 + 0xC]
	0x03C87BF8 STR V1, [X19]
	0x03C87BFC LDP X20, X19, [X31 + 0x50]
	0x03C87C00 LDP D9, D8, [X31 + 0x20]
	0x03C87C04 ADD X31, X31, 0x60
	0x03C87C08 RET
	0x03C87C0C SUB X31, X31, 0x70
	0x03C87C10 STR D8, [X31 + 0x40]
	0x03C87C14 STP X30, X21, [X31 + 0x50]
	0x03C87C18 STP X20, X19, [X31 + 0x60]
	0x03C87C1C ADRP X21, 0x75F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x760000
	007 Move X3, [X22+2904]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51892224
	014 Add X0, X0, 2793
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2904], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.String ToJson(System.Object obj)

Disassembly:
	0x03C87C20 MOV X19, X8
	0x03C87C24 LDR X8, [X21 + 0xBB0]

ISIL:
	001 Move W1, W31

Method: System.String ToJson(System.Object obj, System.Boolean prettyPrint)

Disassembly:
	0x03C87C28 MOV X20, X1
	0x03C87C2C MOV V8.16B, V4.16B
	0x03C87C30 STP S0, S1, [X31 + 0x38]
	0x03C87C34 MOVI V0.2D, 0x0
	0x03C87C38 STR W0, [X31 + 0x48]
	0x03C87C3C STP S2, S3, [X31 + 0x30]
	0x03C87C40 STR W31, [X31 + 0x20]
	0x03C87C44 STP V0, V0, [X31]
	0x03C87C48 CBNZ X8, 0x3C87C60
	0x03C87C4C ADRP X0, 0xFFFFFFFFFCE86000
	0x03C87C50 ADD X0, X0, 0x631
	0x03C87C54 BL 0x1C16CB8
	0x03C87C58 MOV X8, X0
	0x03C87C5C STR X0, [X21 + 0xBB0]
	0x03C87C60 ADD X0, X31, 0x48
	0x03C87C64 ADD X1, X31, 0x38
	0x03C87C68 ADD X2, X31, 0x30
	0x03C87C6C ADD X4, X31, 0x0
	0x03C87C70 MOV V0.16B, V8.16B
	0x03C87C74 MOV X3, X20
	0x03C87C78 BLR X8
	0x03C87C7C LDR W8, [X31 + 0x20]
	0x03C87C80 LDP V1, V0, [X31]
	0x03C87C84 LDP X30, X21, [X31 + 0x50]
	0x03C87C88 LDR V8, [X31 + 0x40]
	0x03C87C8C STR W8, [X19 + 0x20]
	0x03C87C90 STP V1, V0, [X19]
	0x03C87C94 LDP X20, X19, [X31 + 0x60]
	0x03C87C98 ADD X31, X31, 0x70
	0x03C87C9C RET
	0x03C87CA0 SUB X31, X31, 0x60
	0x03C87CA4 STP X30, X19, [X31 + 0x50]
	0x03C87CA8 MOVI V5.2D, 0x0
	0x03C87CAC STR W31, [X31 + 0x40]
	0x03C87CB0 STP V5, V5, [X31 + 0x20]
	0x03C87CB4 LDUR V5, [X1 + 0xC]
	0x03C87CB8 LDR V6, [X1]
	0x03C87CBC LDR W0, [X0]
	0x03C87CC0 MOV X19, X8
	0x03C87CC4 ADD X8, X31, 0x20
	0x03C87CC8 ADD X1, X31, 0x0
	0x03C87CCC STUR V5, [X31 + 0xC]
	0x03C87CD0 STR V6, [X31]
	0x03C87CD4 BL 0x3C87C0C
	0x03C87CD8 LDR W8, [X31 + 0x40]
	0x03C87CDC LDP V1, V0, [X31 + 0x20]
	0x03C87CE0 STR W8, [X19 + 0x20]
	0x03C87CE4 STP V1, V0, [X19]
	0x03C87CE8 LDP X30, X19, [X31 + 0x50]
	0x03C87CEC ADD X31, X31, 0x60
	0x03C87CF0 RET
	0x03C87CF4 STR D8, [X31 - 0x40]!
	0x03C87CF8 STR X30, [X31 + 0x8]
	0x03C87CFC STP X24, X23, [X31 + 0x10]
	0x03C87D00 STP X22, X21, [X31 + 0x20]
	0x03C87D04 STP X20, X19, [X31 + 0x30]
	0x03C87D08 ADRP X24, 0x75F000
	0x03C87D0C LDR X5, [X24 + 0xBB0]
	0x03C87D10 MOV X19, X4
	0x03C87D14 MOV X20, X3
	0x03C87D18 MOV V8.16B, V0.16B
	0x03C87D1C MOV X21, X2
	0x03C87D20 MOV X22, X1
	0x03C87D24 MOV X23, X0
	0x03C87D28 CBNZ X5, 0x3C87D40
	0x03C87D2C ADRP X0, 0xFFFFFFFFFCE86000
	0x03C87D30 ADD X0, X0, 0x631
	0x03C87D34 BL 0x1C16CB8
	0x03C87D38 MOV X5, X0
	0x03C87D3C STR X0, [X24 + 0xBB0]
	0x03C87D40 MOV X0, X23
	0x03C87D44 MOV X1, X22
	0x03C87D48 MOV X2, X21
	0x03C87D4C MOV X3, X20
	0x03C87D50 MOV X4, X19
	0x03C87D54 LDP X20, X19, [X31 + 0x30]
	0x03C87D58 LDP X22, X21, [X31 + 0x20]
	0x03C87D5C LDP X24, X23, [X31 + 0x10]
	0x03C87D60 LDR X30, [X31 + 0x8]
	0x03C87D64 MOV V0.16B, V8.16B
	0x03C87D68 LDR V8, [X31], #0x40
	0x03C87D6C BR X5
	0x03C87D70 SUB X31, X31, 0x80
	0x03C87D74 STR D12, [X31 + 0x40]
	0x03C87D78 STP D11, D10, [X31 + 0x48]
	0x03C87D7C STP D9, D8, [X31 + 0x58]
	0x03C87D80 STR X30, [X31 + 0x68]
	0x03C87D84 STP X20, X19, [X31 + 0x70]
	0x03C87D88 MOVZ W9, 0xFF800000
	0x03C87D8C MOVZ W10, 0x7F800000
	0x03C87D90 MOV V11.16B, V1.16B
	0x03C87D94 MOV V12.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x760000
	006 Move W8, [X21+2912]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x478000
	014 Move X0, [X0+2136]
	015 Call 0x1C17CF4
	016 Move X0, 0x46D000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x4D9000
	020 Move X0, [X0+1616]
	021 Call 0x1C17CF4
	022 Move X0, 0x46D000
	023 Move X0, [X0+2440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2912], W8
	027 Compare X20, 0
	028 JumpIfEqual {72}
	029 Move X8, 0x46D000
	030 Move X8, [X8+1432]
	031 Move X9, [X20]
	032 Move X10, [X8]
	033 Move W8, [X9+304]
	034 Move W11, [X10+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X9+200]
	037 Add X11, X9, X11
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X10, 0x478000
	041 Move X10, [X10+2136]
	042 Move X10, [X10]
	043 Move W11, [X10+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X11, X9, X11
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X10, 0x4D9000
	049 Move X10, [X10+1616]
	050 Move X10, [X10]
	051 Move W11, [X10+304]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X9, X11
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X21, 0x760000
	057 Move X2, [X21+2896]
	058 Compare X2, 0
	059 JumpIfNotEqual {65}
	060 Move X0, -51785728
	061 Add X0, X0, 1975
	062 Call 0x1C17CB8
	063 Move X2, X0
	064 Move [X21+2896], X0
	065 And W1, W19, 1
	066 Move X0, X20
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 CallNoReturn X2
	072 Move X8, 0x46D000
	073 Move X8, [X8+2440]
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X0, [X8]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return X0
	080 Move X0, 0x475000
	081 Move X0, [X0+1400]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0x4DA000
	086 Move X0, [X0+2120]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentException..ctor, X0, X1
	092 Move X0, 0x4DA000
	093 Move X0, [X0+2128]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

Method: T FromJson(System.String json)

Disassembly:
	0x02212088 LDR X1, [X8 + 0x430]
	0x0221208C BLR X9
	0x02212090 CBZ X26, 0x22123D8
	0x02212094 MOV X27, X0
	0x02212098 CBZ X0, 0x22120B0
	0x0221209C LDR X8, [X26]
	0x022120A0 MOV X0, X27
	0x022120A4 LDR X1, [X8 + 0x40]
	0x022120A8 BL 0x1C16E00
	0x022120AC CBZ X0, 0x22123E0
	0x022120B0 LDR W8, [X26 + 0x18]
	0x022120B4 CBZ W8, 0x22123DC
	0x022120B8 STR X27, [X26 + 0x20]
	0x022120BC CBZ X25, 0x22123D8
	0x022120C0 LDR X8, [X25]
	0x022120C4 MOV X0, X25
	0x022120C8 MOV X1, X26
	0x022120CC LDR X9, [X8 + 0x8D8]
	0x022120D0 LDR X2, [X8 + 0x8E0]
	0x022120D4 BLR X9
	0x022120D8 MOV X1, X31
	0x022120DC BL 0x33A703C
	0x022120E0 CBZ X0, 0x2212218
	0x022120E4 ADRP X8, 0x1EE8000
	0x022120E8 LDR X8, [X8 + 0x2F8]
	0x022120EC MOV X26, X0
	0x022120F0 LDR X27, [X8]
	0x022120F4 MOV X1, X27
	0x022120F8 BL 0x1C16E00
	0x022120FC MOV X25, X0
	0x02212100 CBNZ X0, 0x221221C
	0x02212104 B 0x22121D0
	0x02212108 LDR X0, [X26]
	0x0221210C LDR X8, [X21 + 0x38]
	0x02212110 LDR W9, [X0 + 0xE0]
	0x02212114 LDR X25, [X8]
	0x02212118 CBNZ W9, 0x2212120
	0x0221211C BL 0x1C16DFC
	0x02212120 MOV X0, X25
	0x02212124 MOV X1, X31
	0x02212128 BL 0x338C698
	0x0221212C ADRP X8, 0x1F0A000
	0x02212130 LDR X8, [X8 + 0x18]
	0x02212134 MOV X25, X0
	0x02212138 MOV X1, X31
	0x0221213C LDR X8, [X8]
	0x02212140 MOV X0, X8
	0x02212144 BL 0x338C698
	0x02212148 CBZ X0, 0x22123D8
	0x0221214C LDR X8, [X0]
	0x02212150 LDR X9, [X8 + 0x2E8]
	0x02212154 LDR X1, [X8 + 0x2F0]
	0x02212158 BLR X9
	0x0221215C CBZ X25, 0x22123D8
	0x02212160 MOV X1, X0
	0x02212164 MOV X0, X25

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X9, [X1+56]
	007 Move X20, X1
	008 Move X21, X0
	009 Move X19, X8
	010 Compare X9, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1EE2000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X9, [X20+56]
	016 Compare X9, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X20
	019 Call 0x1C5D6E0
	020 Move X9, [X20+56]
	021 Move X8, 0x1EE2000
	022 Move X8, [X8+1728]
	023 Move X22, [X9]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Move X1, X0
	033 Move X0, X21
	034 Move X2, X31
	035 Call JsonUtility.FromJson, X0, X1
	036 Move X8, [X20+56]
	037 Move X20, X0
	038 Move X1, [X8+8]
	039 Move W8, [X1+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X1
	045 Call 0x1C5D684
	046 Move X1, X0
	047 Compare X20, 0
	048 JumpIfEqual {67}
	049 Move X8, [X20]
	050 Move X9, [X1+64]
	051 Move X0, X20
	052 Move X8, [X8+64]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Call 0x1C17E08
	055 Move V0, [X0]
	056 Move V1, [X0+16]
	057 Move X8, [X0+32]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move [X19], V0
	061 Move [X19+8], V1
	062 Move [X19+32], X8
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+48]
	066 Return X0
	067 Call 0x1C17F20
	068 Call 0x1C181E0

Method: System.Object FromJson(System.String json, System.Type type)

Disassembly:
	0x03C87D98 MOV X20, X0
	0x03C87D9C ADD X8, X31, 0x20
	0x03C87DA0 FMOV S0, W9
	0x03C87DA4 FMOV S1, W10
	0x03C87DA8 MOV W0, W2
	0x03C87DAC MOV X19, X1
	0x03C87DB0 MOV V8.16B, V4.16B
	0x03C87DB4 MOV V9.16B, V3.16B
	0x03C87DB8 MOV V10.16B, V2.16B
	0x03C87DBC STP X31, X31, [X31 + 0x20]
	0x03C87DC0 STR W31, [X31 + 0x38]
	0x03C87DC4 STR X31, [X31 + 0x30]
	0x03C87DC8 BL 0x3C87B0C
	0x03C87DCC LDR V0, [X31 + 0x2]
	0x03C87DD0 LDUR V1, [X31 + 0x2C]
	0x03C87DD4 LDR W0, [X20]
	0x03C87DD8 ADD X1, X31, 0x0
	0x03C87DDC STR V0, [X31]
	0x03C87DE0 STUR V1, [X31 + 0xC]
	0x03C87DE4 MOV V0.16B, V12.16B
	0x03C87DE8 MOV V1.16B, V11.16B
	0x03C87DEC MOV V2.16B, V10.16B
	0x03C87DF0 MOV V3.16B, V9.16B
	0x03C87DF4 MOV V4.16B, V8.16B
	0x03C87DF8 MOV X2, X19
	0x03C87DFC BL 0x3C87E1C
	0x03C87E00 LDP X20, X19, [X31 + 0x70]
	0x03C87E04 LDR X30, [X31 + 0x68]
	0x03C87E08 LDP D9, D8, [X31 + 0x58]
	0x03C87E0C LDP D11, D10, [X31 + 0x48]
	0x03C87E10 LDR V12, [X31 + 0x40]
	0x03C87E14 ADD X31, X31, 0x80
	0x03C87E18 RET
	0x03C87E1C SUB X31, X31, 0x40
	0x03C87E20 STR D8, [X31 + 0x10]
	0x03C87E24 STP X30, X21, [X31 + 0x20]
	0x03C87E28 STP X20, X19, [X31 + 0x30]
	0x03C87E2C ADRP X21, 0x75F000
	0x03C87E30 LDR X8, [X21 + 0xBB8]
	0x03C87E34 MOV X19, X2
	0x03C87E38 MOV X20, X1
	0x03C87E3C MOV V8.16B, V4.16B
	0x03C87E40 STR W0, [X31 + 0x18]
	0x03C87E44 STP S0, S1, [X31 + 0x8]
	0x03C87E48 STP S2, S3, [X31]
	0x03C87E4C CBNZ X8, 0x3C87E64
	0x03C87E50 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C87E54 ADD X0, X0, 0xA47
	0x03C87E58 BL 0x1C16CB8
	0x03C87E5C MOV X8, X0
	0x03C87E60 STR X0, [X21 + 0xBB8]
	0x03C87E64 ADD X0, X31, 0x18
	0x03C87E68 ADD X1, X31, 0x8
	0x03C87E6C ADD X2, X31, 0x0
	0x03C87E70 MOV V0.16B, V8.16B
	0x03C87E74 MOV X3, X20
	0x03C87E78 MOV X4, X19
	0x03C87E7C BLR X8
	0x03C87E80 LDP X20, X19, [X31 + 0x30]
	0x03C87E84 LDP X30, X21, [X31 + 0x20]
	0x03C87E88 LDR V8, [X31 + 0x10]
	0x03C87E8C ADD X31, X31, 0x40
	0x03C87E90 RET
	0x03C87E94 SUB X31, X31, 0x30
	0x03C87E98 STR X30, [X31 + 0x20]
	0x03C87E9C LDUR V5, [X1 + 0xC]
	0x03C87EA0 LDR V6, [X1]
	0x03C87EA4 LDR W0, [X0]
	0x03C87EA8 ADD X1, X31, 0x0
	0x03C87EAC STUR V5, [X31 + 0xC]
	0x03C87EB0 STR V6, [X31]
	0x03C87EB4 BL 0x3C87E1C
	0x03C87EB8 LDR X30, [X31 + 0x20]
	0x03C87EBC ADD X31, X31, 0x30
	0x03C87EC0 RET
	0x03C87EC4 STR D8, [X31 - 0x40]!
	0x03C87EC8 STR X30, [X31 + 0x8]
	0x03C87ECC STP X24, X23, [X31 + 0x10]
	0x03C87ED0 STP X22, X21, [X31 + 0x20]
	0x03C87ED4 STP X20, X19, [X31 + 0x30]
	0x03C87ED8 ADRP X24, 0x75F000
	0x03C87EDC LDR X5, [X24 + 0xBB8]
	0x03C87EE0 MOV X19, X4
	0x03C87EE4 MOV X20, X3
	0x03C87EE8 MOV V8.16B, V0.16B
	0x03C87EEC MOV X21, X2
	0x03C87EF0 MOV X22, X1
	0x03C87EF4 MOV X23, X0
	0x03C87EF8 CBNZ X5, 0x3C87F10
	0x03C87EFC ADRP X0, 0xFFFFFFFFFCE88000
	0x03C87F00 ADD X0, X0, 0xA47
	0x03C87F04 BL 0x1C16CB8
	0x03C87F08 MOV X5, X0
	0x03C87F0C STR X0, [X24 + 0xBB8]
	0x03C87F10 MOV X0, X23
	0x03C87F14 MOV X1, X22
	0x03C87F18 MOV X2, X21
	0x03C87F1C MOV X3, X20
	0x03C87F20 MOV X4, X19
	0x03C87F24 LDP X20, X19, [X31 + 0x30]
	0x03C87F28 LDP X22, X21, [X31 + 0x20]
	0x03C87F2C LDP X24, X23, [X31 + 0x10]
	0x03C87F30 LDR X30, [X31 + 0x8]
	0x03C87F34 MOV V0.16B, V8.16B
	0x03C87F38 LDR V8, [X31], #0x40
	0x03C87F3C BR X5
	0x03C87F40 SUB X31, X31, 0x30
	0x03C87F44 STR X30, [X31 + 0x20]
	0x03C87F48 LDUR V5, [X1 + 0xC]
	0x03C87F4C LDR V6, [X1]
	0x03C87F50 LDR W0, [X0]
	0x03C87F54 ADD X1, X31, 0x0
	0x03C87F58 STUR V5, [X31 + 0xC]
	0x03C87F5C STR V6, [X31]
	0x03C87F60 BL 0x3C87F70
	0x03C87F64 LDR X30, [X31 + 0x20]
	0x03C87F68 ADD X31, X31, 0x30
	0x03C87F6C RET
	0x03C87F70 SUB X31, X31, 0x40
	0x03C87F74 STR D8, [X31 + 0x10]
	0x03C87F78 STP X30, X21, [X31 + 0x20]
	0x03C87F7C STP X20, X19, [X31 + 0x30]
	0x03C87F80 ADRP X21, 0x75F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x760000
	006 Move W8, [X21+2913]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x495000
	014 Move X0, [X0+2040]
	015 Call 0x1C17CF4
	016 Move X0, 0x46D000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2913], W8
	021 Move X0, X20
	022 Move X1, X31
	023 Call String.IsNullOrEmpty, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {34}
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Move X21, 0x46D000
	035 Move X21, [X21+1728]
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Move X2, X31
	044 Call Type.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {131}
	049 Compare X19, 0
	050 JumpIfEqual {149}
	051 Move X0, X19
	052 Move X1, X31
	053 Call Type.get_IsAbstract, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {96}
	058 Move X8, 0x495000
	059 Move X0, [X21]
	060 Move X8, [X8+2040]
	061 Move W9, [X0+224]
	062 Move X21, [X8]
	063 Compare W9, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X21
	067 Move X1, X31
	068 Call Type.GetTypeFromHandle, X0
	069 Move X8, [X19]
	070 Move X1, X0
	071 Move X0, X19
	072 Move X9, [X8+664]
	073 Move X2, [X8+672]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {96}
	079 Move X21, 0x760000
	080 Move X3, [X21+2904]
	081 Compare X3, 0
	082 JumpIfNotEqual {88}
	083 Move X0, -51892224
	084 Add X0, X0, 2793
	085 Call 0x1C17CB8
	086 Move X3, X0
	087 Move [X21+2904], X0
	088 Move X0, X20
	089 Move X2, X19
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X1, X31
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 CallNoReturn X3
	096 Move X0, X19
	097 Call 0x19913C0
	098 Move X8, [X19]
	099 Move X0, X19
	100 Move X9, [X8+424]
	101 Move X1, [X8+432]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X19, X0
	104 Move X0, 0x4DA000
	105 Move X0, [X0+2136]
	106 Call 0x1C17D08
	107 Move X20, X0
	108 Move X0, 0x4DA000
	109 Move X0, [X0+2144]
	110 Call 0x1C17D08
	111 Move X2, X0
	112 Move X0, X20
	113 Move X1, X19
	114 Move X3, X31
	115 Call String.Concat, X0, X1, X2
	116 Move X19, X0
	117 Move X0, 0x475000
	118 Move X0, [X0+1400]
	119 Call 0x1C17D08
	120 Call 0x1C17F10
	121 Move X1, X19
	122 Move X2, X31
	123 Move X20, X0
	124 Call ArgumentException..ctor, X0, X1
	125 Move X0, 0x4DA000
	126 Move X0, [X0+2152]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X20
	130 Call 0x1C17DEC
	131 Move X0, 0x472000
	132 Move X0, [X0+1320]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X19, X0
	136 Move X0, 0x475000
	137 Move X0, [X0+1512]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X19
	141 Move X2, X31
	142 Call ArgumentNullException..ctor, X0, X1
	143 Move X0, 0x4DA000
	144 Move X0, [X0+2152]
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X19
	148 Call 0x1C17DEC
	149 Call 0x1C17F20

Method: System.Void FromJsonOverwrite(System.String json, System.Object objectToOverwrite)

Disassembly:
	0x03C87F84 LDR X8, [X21 + 0xBC0]
	0x03C87F88 MOV X19, X2
	0x03C87F8C MOV X20, X1
	0x03C87F90 MOV V8.16B, V4.16B
	0x03C87F94 STR W0, [X31 + 0x18]
	0x03C87F98 STP S0, S1, [X31 + 0x8]
	0x03C87F9C STP S2, S3, [X31]
	0x03C87FA0 CBNZ X8, 0x3C87FB8
	0x03C87FA4 ADRP X0, 0xFFFFFFFFFCE86000
	0x03C87FA8 ADD X0, X0, 0x6F3
	0x03C87FAC BL 0x1C16CB8
	0x03C87FB0 MOV X8, X0
	0x03C87FB4 STR X0, [X21 + 0xBC0]
	0x03C87FB8 ADD X0, X31, 0x18
	0x03C87FBC ADD X1, X31, 0x8
	0x03C87FC0 ADD X2, X31, 0x0
	0x03C87FC4 MOV V0.16B, V8.16B
	0x03C87FC8 MOV X3, X20
	0x03C87FCC MOV X4, X19
	0x03C87FD0 BLR X8
	0x03C87FD4 LDP X20, X19, [X31 + 0x30]
	0x03C87FD8 LDP X30, X21, [X31 + 0x20]
	0x03C87FDC LDR V8, [X31 + 0x10]
	0x03C87FE0 ADD X31, X31, 0x40
	0x03C87FE4 RET
	0x03C87FE8 STR D8, [X31 - 0x40]!
	0x03C87FEC STR X30, [X31 + 0x8]
	0x03C87FF0 STP X24, X23, [X31 + 0x10]
	0x03C87FF4 STP X22, X21, [X31 + 0x20]
	0x03C87FF8 STP X20, X19, [X31 + 0x30]
	0x03C87FFC ADRP X24, 0x75F000
	0x03C88000 LDR X5, [X24 + 0xBC0]
	0x03C88004 MOV X19, X4
	0x03C88008 MOV X20, X3
	0x03C8800C MOV V8.16B, V0.16B
	0x03C88010 MOV X21, X2
	0x03C88014 MOV X22, X1
	0x03C88018 MOV X23, X0
	0x03C8801C CBNZ X5, 0x3C88034
	0x03C88020 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C88024 ADD X0, X0, 0x6F3
	0x03C88028 BL 0x1C16CB8
	0x03C8802C MOV X5, X0
	0x03C88030 STR X0, [X24 + 0xBC0]
	0x03C88034 MOV X0, X23
	0x03C88038 MOV X1, X22
	0x03C8803C MOV X2, X21
	0x03C88040 MOV X3, X20
	0x03C88044 MOV X4, X19
	0x03C88048 LDP X20, X19, [X31 + 0x30]
	0x03C8804C LDP X22, X21, [X31 + 0x20]
	0x03C88050 LDP X24, X23, [X31 + 0x10]
	0x03C88054 LDR X30, [X31 + 0x8]
	0x03C88058 MOV V0.16B, V8.16B
	0x03C8805C LDR V8, [X31], #0x40
	0x03C88060 BR X5
	0x03C88064 SUB X31, X31, 0x40
	0x03C88068 STP X30, X19, [X31 + 0x30]
	0x03C8806C MOV V6.16B, V0.16B
	0x03C88070 MOVI V0.2D, 0x0
	0x03C88074 STR W31, [X31 + 0x20]
	0x03C88078 STP V0, V0, [X31]
	0x03C8807C LDR W0, [X0]
	0x03C88080 LDP S0, S1, [X1]
	0x03C88084 LDP S2, S3, [X1 + 0x8]
	0x03C88088 LDP S4, S5, [X1 + 0x10]
	0x03C8808C MOV X19, X8
	0x03C88090 ADD X8, X31, 0x0
	0x03C88094 MOV W1, W2
	0x03C88098 BL 0x3C880B8
	0x03C8809C LDR W8, [X31 + 0x20]
	0x03C880A0 LDP V1, V0, [X31]
	0x03C880A4 STR W8, [X19 + 0x20]
	0x03C880A8 STP V1, V0, [X19]
	0x03C880AC LDP X30, X19, [X31 + 0x30]
	0x03C880B0 ADD X31, X31, 0x40
	0x03C880B4 RET
	0x03C880B8 SUB X31, X31, 0x80
	0x03C880BC STR D8, [X31 + 0x50]
	0x03C880C0 STP X30, X21, [X31 + 0x60]
	0x03C880C4 STP X20, X19, [X31 + 0x70]
	0x03C880C8 ADRP X21, 0x75E000
	0x03C880CC MOV X20, X8
	0x03C880D0 LDR X8, [X21 + 0xBC8]
	0x03C880D4 MOV W19, W1
	0x03C880D8 MOV V8.16B, V6.16B
	0x03C880DC STP S0, S1, [X31 + 0x40]
	0x03C880E0 MOVI V0.2D, 0x0
	0x03C880E4 STR W0, [X31 + 0x58]
	0x03C880E8 STR S2, [X31 + 0x48]
	0x03C880EC STP S3, S4, [X31 + 0x30]
	0x03C880F0 STR S5, [X31 + 0x38]
	0x03C880F4 STR W31, [X31 + 0x20]
	0x03C880F8 STP V0, V0, [X31]
	0x03C880FC CBNZ X8, 0x3C88114
	0x03C88100 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C88104 ADD X0, X0, 0x7DB
	0x03C88108 BL 0x1C16CB8
	0x03C8810C MOV X8, X0
	0x03C88110 STR X0, [X21 + 0xBC8]
	0x03C88114 ADD X0, X31, 0x58
	0x03C88118 ADD X1, X31, 0x40
	0x03C8811C ADD X2, X31, 0x30
	0x03C88120 ADD X4, X31, 0x0
	0x03C88124 MOV V0.16B, V8.16B
	0x03C88128 MOV W3, W19
	0x03C8812C BLR X8
	0x03C88130 LDR W8, [X31 + 0x20]
	0x03C88134 LDP V1, V0, [X31]
	0x03C88138 LDP X30, X21, [X31 + 0x60]
	0x03C8813C LDR V8, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x760000
	007 Move W8, [X21+2914]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x478000
	015 Move X0, [X0+2136]
	016 Call 0x1C17CF4
	017 Move X0, 0x46D000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x4D9000
	021 Move X0, [X0+1616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2914], W8
	025 Move X0, X20
	026 Move X1, X31
	027 Call String.IsNullOrEmpty, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {38}
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return 
	038 Compare X19, 0
	039 JumpIfEqual {89}
	040 Move X8, 0x46D000
	041 Move X8, [X8+1432]
	042 Move X9, [X19]
	043 Move X10, [X8]
	044 Move W8, [X9+304]
	045 Move W11, [X10+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X9, [X9+200]
	048 Add X11, X9, X11
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, 0x477000
	052 Move X10, [X10+2136]
	053 Move X10, [X10]
	054 Move W11, [X10+304]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X11, X9, X11
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X10, 0x4D8000
	060 Move X10, [X10+1616]
	061 Move X10, [X10]
	062 Move W11, [X10+304]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X9, X11
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X19
	068 Move X1, X31
	069 Call "il2cpp_vm_object_is_inst", X0
	070 Move X22, 0x75F000
	071 Move X3, [X22+2904]
	072 Move X21, X0
	073 Compare X3, 0
	074 JumpIfNotEqual {80}
	075 Move X0, -51896320
	076 Add X0, X0, 2793
	077 Call 0x1C17CB8
	078 Move X3, X0
	079 Move [X22+2904], X0
	080 Move X0, X20
	081 Move X1, X19
	082 Move X2, X21
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 CallNoReturn X3
	089 Move X0, 0x471000
	090 Move X0, [X0+1320]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0x4D9000
	095 Move X0, [X0+2160]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call ArgumentNullException..ctor, X0, X1
	101 Move X0, 0x474000
	102 Move X0, [X0+1400]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0x4D9000
	107 Move X0, [X0+2168]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call ArgumentException..ctor, X0, X1
	113 Move X0, 0x4D9000
	114 Move X0, [X0+2176]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

