Type: Unity.Burst.BurstString/FormatOptions

Method: System.Void .ctor(Unity.Burst.BurstString/NumberFormatKind kind, System.SByte alignAndSize, System.Byte specifier, System.Boolean lowercase)

Disassembly:
	0x0370119C STR W8, [X31 + 0x38C]
	0x037011A0 STR W9, [X31 + 0x388]
	0x037011A4 B 0x3701228
	0x037011A8 STR W31, [X31 + 0x388]
	0x037011AC LDR X0, [X29]
	0x037011B0 LDR W8, [X0 + 0xE0]

ISIL:
	001 And W8, W4, 1
	002 Move [X0], W1
	003 Move [X0+1], W2
	004 Move [X0+2], W3
	005 Move [X0+3], W8
	006 Return 

Method: System.Boolean get_Uppercase()

Disassembly:
	0x03700454 ADD X14, X10, X14
	0x03700458 UBFM X10, X14, 0x20, 0x3F
	0x0370045C STR W14, [X9], #0x4
	0x03700460 B.NE 0x3700444

ISIL:
	001 Move W8, [X0+3]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 EncodeToRaw()

Disassembly:
	0x037031E4 BL 0x3380288
	0x037031E8 ADRP X0, 0xA3E000

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Int32 GetBase()

Disassembly:
	0x0370043C SUB X12, X12, 0x4
	0x03700440 SUB X13, X11, 0x4
	0x03700444 LDR W14, [X11]
	0x03700448 ADD X11, X13, 0x8
	0x0370044C ADD X13, X13, 0x4
	0x03700450 CMP X12, X13

ISIL:
	001 Move W8, [X0]
	002 Move W9, 10
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W8, 16
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Return X0

Method: System.String ToString()

Disassembly:
	0x037031EC LDR X0, [X0 + 0x1F0]
	0x037031F0 BL 0x1C16D08
	0x037031F4 MOV X1, X0
	0x037031F8 MOV X0, X19
	0x037031FC BL 0x1C16DEC
	0x03703200 STP X30, X19, [X31 - 0x10]!
	0x03703204 ADRP X0, 0x9F9000
	0x03703208 LDR X0, [X0 + 0x758]
	0x0370320C BL 0x1C16D08
	0x03703210 BL 0x1C16F10
	0x03703214 MOV X1, X31
	0x03703218 MOV X19, X0
	0x0370321C BL 0x3380288
	0x03703220 ADRP X0, 0xA3E000
	0x03703224 LDR X0, [X0 + 0x1F8]
	0x03703228 BL 0x1C16D08
	0x0370322C MOV X1, X0
	0x03703230 MOV X0, X19
	0x03703234 BL 0x1C16DEC
	0x03703238 STP X30, X19, [X31 - 0x10]!
	0x0370323C ADRP X0, 0x9F9000
	0x03703240 LDR X0, [X0 + 0x758]
	0x03703244 BL 0x1C16D08
	0x03703248 BL 0x1C16F10
	0x0370324C MOV X1, X31
	0x03703250 MOV X19, X0
	0x03703254 BL 0x3380288
	0x03703258 ADRP X0, 0xA3E000
	0x0370325C LDR X0, [X0 + 0x200]
	0x03703260 BL 0x1C16D08
	0x03703264 MOV X1, X0
	0x03703268 MOV X0, X19
	0x0370326C BL 0x1C16DEC
	0x03703270 STP X30, X19, [X31 - 0x10]!
	0x03703274 ADRP X0, 0x9F9000
	0x03703278 LDR X0, [X0 + 0x758]
	0x0370327C BL 0x1C16D08
	0x03703280 BL 0x1C16F10
	0x03703284 MOV X1, X31
	0x03703288 MOV X19, X0
	0x0370328C BL 0x3380288
	0x03703290 ADRP X0, 0xA3E000
	0x03703294 LDR X0, [X0 + 0x208]
	0x03703298 BL 0x1C16D08
	0x0370329C MOV X1, X0
	0x037032A0 MOV X0, X19
	0x037032A4 BL 0x1C16DEC
	0x037032A8 STP X30, X19, [X31 - 0x10]!
	0x037032AC ADRP X0, 0x9F9000
	0x037032B0 LDR X0, [X0 + 0x758]
	0x037032B4 BL 0x1C16D08
	0x037032B8 BL 0x1C16F10
	0x037032BC MOV X1, X31
	0x037032C0 MOV X19, X0
	0x037032C4 BL 0x3380288
	0x037032C8 ADRP X0, 0xA3E000
	0x037032CC LDR X0, [X0 + 0x210]
	0x037032D0 BL 0x1C16D08
	0x037032D4 MOV X1, X0
	0x037032D8 MOV X0, X19
	0x037032DC BL 0x1C16DEC
	0x037032E0 STP X30, X19, [X31 - 0x10]!
	0x037032E4 ADRP X0, 0x9F9000
	0x037032E8 LDR X0, [X0 + 0x758]
	0x037032EC BL 0x1C16D08
	0x037032F0 BL 0x1C16F10
	0x037032F4 MOV X1, X31
	0x037032F8 MOV X19, X0
	0x037032FC BL 0x3380288
	0x03703300 ADRP X0, 0xA3E000
	0x03703304 LDR X0, [X0 + 0x218]
	0x03703308 BL 0x1C16D08
	0x0370330C MOV X1, X0
	0x03703310 MOV X0, X19
	0x03703314 BL 0x1C16DEC
	0x03703318 STP X30, X19, [X31 - 0x10]!
	0x0370331C ADRP X0, 0x9F9000
	0x03703320 LDR X0, [X0 + 0x758]
	0x03703324 BL 0x1C16D08
	0x03703328 BL 0x1C16F10
	0x0370332C MOV X1, X31
	0x03703330 MOV X19, X0
	0x03703334 BL 0x3380288
	0x03703338 ADRP X0, 0xA3E000
	0x0370333C LDR X0, [X0 + 0x220]
	0x03703340 BL 0x1C16D08
	0x03703344 MOV X1, X0
	0x03703348 MOV X0, X19
	0x0370334C BL 0x1C16DEC
	0x03703350 STP X30, X19, [X31 - 0x10]!
	0x03703354 ADRP X0, 0x9F9000
	0x03703358 LDR X0, [X0 + 0x758]
	0x0370335C BL 0x1C16D08
	0x03703360 BL 0x1C16F10
	0x03703364 MOV X1, X31
	0x03703368 MOV X19, X0
	0x0370336C BL 0x3380288
	0x03703370 ADRP X0, 0xA3E000
	0x03703374 LDR X0, [X0 + 0x228]
	0x03703378 BL 0x1C16D08
	0x0370337C MOV X1, X0
	0x03703380 MOV X0, X19
	0x03703384 BL 0x1C16DEC
	0x03703388 STP X30, X19, [X31 - 0x10]!
	0x0370338C ADRP X0, 0x9F9000
	0x03703390 LDR X0, [X0 + 0x758]
	0x03703394 BL 0x1C16D08
	0x03703398 BL 0x1C16F10
	0x0370339C MOV X1, X31
	0x037033A0 MOV X19, X0
	0x037033A4 BL 0x3380288
	0x037033A8 ADRP X0, 0xA3E000
	0x037033AC LDR X0, [X0 + 0x230]
	0x037033B0 BL 0x1C16D08
	0x037033B4 MOV X1, X0
	0x037033B8 MOV X0, X19
	0x037033BC BL 0x1C16DEC
	0x037033C0 STP X30, X19, [X31 - 0x10]!
	0x037033C4 ADRP X0, 0x9F9000
	0x037033C8 LDR X0, [X0 + 0x758]
	0x037033CC BL 0x1C16D08
	0x037033D0 BL 0x1C16F10
	0x037033D4 MOV X1, X31
	0x037033D8 MOV X19, X0
	0x037033DC BL 0x3380288
	0x037033E0 ADRP X0, 0xA3E000
	0x037033E4 LDR X0, [X0 + 0x238]
	0x037033E8 BL 0x1C16D08
	0x037033EC MOV X1, X0
	0x037033F0 MOV X0, X19
	0x037033F4 BL 0x1C16DEC
	0x037033F8 STP X30, X19, [X31 - 0x10]!
	0x037033FC ADRP X0, 0x9F9000
	0x03703400 LDR X0, [X0 + 0x758]
	0x03703404 BL 0x1C16D08
	0x03703408 BL 0x1C16F10
	0x0370340C MOV X1, X31
	0x03703410 MOV X19, X0
	0x03703414 BL 0x3380288
	0x03703418 ADRP X0, 0xA3E000
	0x0370341C LDR X0, [X0 + 0x240]
	0x03703420 BL 0x1C16D08
	0x03703424 MOV X1, X0
	0x03703428 MOV X0, X19
	0x0370342C BL 0x1C16DEC
	0x03703430 STP X30, X19, [X31 - 0x10]!
	0x03703434 ADRP X0, 0x9F9000
	0x03703438 LDR X0, [X0 + 0x758]
	0x0370343C BL 0x1C16D08
	0x03703440 BL 0x1C16F10
	0x03703444 MOV X1, X31
	0x03703448 MOV X19, X0
	0x0370344C BL 0x3380288
	0x03703450 ADRP X0, 0xA3E000
	0x03703454 LDR X0, [X0 + 0x248]
	0x03703458 BL 0x1C16D08
	0x0370345C MOV X1, X0
	0x03703460 MOV X0, X19
	0x03703464 BL 0x1C16DEC
	0x03703468 STP X30, X19, [X31 - 0x10]!
	0x0370346C ADRP X0, 0x9F9000
	0x03703470 LDR X0, [X0 + 0x758]
	0x03703474 BL 0x1C16D08
	0x03703478 BL 0x1C16F10
	0x0370347C MOV X1, X31
	0x03703480 MOV X19, X0
	0x03703484 BL 0x3380288
	0x03703488 ADRP X0, 0xA3E000
	0x0370348C LDR X0, [X0 + 0x250]
	0x03703490 BL 0x1C16D08
	0x03703494 MOV X1, X0
	0x03703498 MOV X0, X19
	0x0370349C BL 0x1C16DEC
	0x037034A0 STR X30, [X31 - 0x10]!
	0x037034A4 BL 0x37033F8
	0x037034A8 STR X30, [X31 - 0x10]!
	0x037034AC BL 0x3703430
	0x037034B0 STR X30, [X31 - 0x10]!
	0x037034B4 BL 0x3703468
	0x037034B8 STP X30, X19, [X31 - 0x10]!
	0x037034BC ADRP X0, 0x9F9000
	0x037034C0 LDR X0, [X0 + 0x758]
	0x037034C4 BL 0x1C16D08
	0x037034C8 BL 0x1C16F10
	0x037034CC MOV X1, X31
	0x037034D0 MOV X19, X0
	0x037034D4 BL 0x3380288

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xCDE000
	008 Move X21, 0x9F1000
	009 Move W8, [X20+3128]
	010 Move X21, [X21+2512]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0x9F1000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move X0, 0x9F2000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0xA3E000
	023 Move X0, [X0+4088]
	024 Call 0x1C17CF4
	025 Move X0, 0x9F1000
	026 Move X0, [X0+2512]
	027 Call 0x1C17CF4
	028 Move X0, 0xA1A000
	029 Move X0, [X0+1712]
	030 Call 0x1C17CF4
	031 Move X0, 0xA3F000
	032 Move X0, [X0]
	033 Call 0x1C17CF4
	034 Move X0, 0xA3F000
	035 Move X0, [X0+8]
	036 Call 0x1C17CF4
	037 Move X0, 0xA3F000
	038 Move X0, [X0+16]
	039 Call 0x1C17CF4
	040 Move X0, 0xA3F000
	041 Move X0, [X0+24]
	042 Call 0x1C17CF4
	043 Move X0, 0xA3F000
	044 Move X0, [X0+32]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+3128], W8
	048 Move X0, [X21]
	049 Move W1, 8
	050 Call 0x1C17D6C
	051 Compare X0, 0
	052 JumpIfEqual {205}
	053 Move X21, 0xA3F000
	054 Move X21, [X21]
	055 Move X20, X0
	056 Move X0, [X21]
	057 Compare X0, 0
	058 JumpIfEqual {64}
	059 Move X8, [X20]
	060 Move X1, [X8+64]
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfEqual {202}
	064 Move W8, [X20+24]
	065 Compare W8, 0
	066 JumpIfEqual {201}
	067 Move X8, [X21]
	068 Move X9, 0xA3E000
	069 Move X9, [X9+4088]
	070 Add X1, X31, 28
	071 Move [X20+32], X8
	072 Move W8, [X19]
	073 Move X0, [X9]
	074 Move [X31+28], W8
	075 Call 0x1C17E04
	076 Move X21, X0
	077 Compare X0, 0
	078 JumpIfEqual {85}
	079 Move X8, [X20]
	080 Move X0, X21
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {202}
	085 Move W8, [X20+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X22, 0xA3F000
	088 Move X22, [X22+32]
	089 Move [X20+40], X21
	090 Move X0, [X22]
	091 Compare X0, 0
	092 JumpIfEqual {99}
	093 Move X8, [X20]
	094 Move X1, [X8+64]
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {202}
	098 Move W8, [X20+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X22]
	101 Move X9, 0xA1A000
	102 Move X9, [X9+1712]
	103 Add X1, X31, 24
	104 Move [X20+48], X8
	105 Move W8, [X19+1]
	106 Move X0, [X9]
	107 Move [X31+24], W8
	108 Call 0x1C17E04
	109 Move X21, X0
	110 Compare X0, 0
	111 JumpIfEqual {118}
	112 Move X8, [X20]
	113 Move X0, X21
	114 Move X1, [X8+64]
	115 Call 0x1C17E00
	116 Compare X0, 0
	117 JumpIfEqual {202}
	118 Move W8, [X20+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X22, 0xA3F000
	121 Move X22, [X22+8]
	122 Move [X20+56], X21
	123 Move X0, [X22]
	124 Compare X0, 0
	125 JumpIfEqual {132}
	126 Move X8, [X20]
	127 Move X1, [X8+64]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {202}
	131 Move W8, [X20+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X22]
	134 Move X9, 0x9F2000
	135 Move X9, [X9+2520]
	136 Add X1, X31, 12
	137 Move [X20+64], X8
	138 Move W8, [X19+2]
	139 Move X0, [X9]
	140 Move [X31+12], W8
	141 Call 0x1C17E04
	142 Move X21, X0
	143 Compare X0, 0
	144 JumpIfEqual {151}
	145 Move X8, [X20]
	146 Move X0, X21
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {202}
	151 Move W8, [X20+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X22, 0xA3F000
	154 Move X22, [X22+24]
	155 Move [X20+72], X21
	156 Move X0, [X22]
	157 Compare X0, 0
	158 JumpIfEqual {165}
	159 Move X8, [X20]
	160 Move X1, [X8+64]
	161 Call 0x1C17E00
	162 Compare X0, 0
	163 JumpIfEqual {202}
	164 Move W8, [X20+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X8, [X22]
	167 Move X9, 0x9F1000
	168 Add X1, X31, 8
	169 Move [X20+80], X8
	170 Move W8, [X19+3]
	171 Move X9, [X9+2904]
	172 Xor W8, W8, 1
	173 Move X0, [X9]
	174 Move [X31+8], W8
	175 Call 0x1C17E04
	176 Move X19, X0
	177 Compare X0, 0
	178 JumpIfEqual {185}
	179 Move X8, [X20]
	180 Move X0, X19
	181 Move X1, [X8+64]
	182 Call 0x1C17E00
	183 Compare X0, 0
	184 JumpIfEqual {202}
	185 Move W8, [X20+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X8, 0xA3F000
	188 Move X8, [X8+16]
	189 Move [X20+88], X19
	190 Move X1, X20
	191 Move X2, X31
	192 Move X0, [X8]
	193 Call String.Format, X0, X1
	194 Move X20, [X31+48]
	195 Move X19, [X31+56]
	196 Move X22, [X31+32]
	197 Move X21, [X31+40]
	198 Move X30, [X31+16]
	199 Add X31, X31, 64
	200 Return X0
	201 Call 0x1C17F28
	202 Call 0x1C17F44
	203 Move X1, X31
	204 Call 0x1C17DEC
	205 Call 0x1C17F20

