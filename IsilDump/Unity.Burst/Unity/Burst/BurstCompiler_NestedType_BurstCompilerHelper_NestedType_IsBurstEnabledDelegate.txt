Type: Unity.Burst.BurstCompiler/BurstCompilerHelper/IsBurstEnabledDelegate

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x036FCECC B 0x36FCEFC
	0x036FCED0 B 0x36FCEFC
	0x036FCED4 B 0x36FCEFC
	0x036FCED8 B 0x36FCEFC
	0x036FCEDC B 0x36FCEFC
	0x036FCEE0 B 0x36FCEFC
	0x036FCEE4 B 0x36FCEFC
	0x036FCEE8 B 0x36FCEFC
	0x036FCEEC B 0x36FCEFC
	0x036FCEF0 B 0x36FCEFC
	0x036FCEF4 B 0x36FCEFC
	0x036FCEF8 B 0x36FCEFC
	0x036FCEFC MOV X21, X0
	0x036FCF00 CMP W1, 0x1
	0x036FCF04 B.NE 0x36FCF1C
	0x036FCF08 MOV X0, X21
	0x036FCF0C BL 0x3EB1AD0
	0x036FCF10 LDR X20, [X0]
	0x036FCF14 BL 0x3EB1AE0
	0x036FCF18 B 0x36FCE30
	0x036FCF1C MOV X20, X31
	0x036FCF20 B 0x36FCF28
	0x036FCF24 MOV X21, X0
	0x036FCF28 CBZ X19, 0x36FCF8C
	0x036FCF2C ADRP X10, 0x9F7000
	0x036FCF30 LDR X8, [X19]
	0x036FCF34 LDR X10, [X10 + 0xE00]
	0x036FCF38 LDRH W9, [X8 + 0x12E]
	0x036FCF3C LDR X1, [X10]
	0x036FCF40 CBZ X9, 0x36FCF64
	0x036FCF44 LDR X10, [X8 + 0xB0]
	0x036FCF48 ADD X10, X10, 0x8
	0x036FCF4C LDUR X11, [X10 - 0x8]
	0x036FCF50 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {24}
	019 Compare W21, 0
	020 JumpIfNotEqual {26}
	021 Move X8, -28512256
	022 Add X8, X8, 2408
	023 Move [X19+24], X8
	024 Compare X20, 0
	025 JumpIfEqual {38}
	026 Move X8, [X19+16]
	027 Move X9, [X19+32]
	028 Move [X19+24], X8
	029 Move [X19+64], X9
	030 Move X8, -28512256
	031 Add X8, X8, 2332
	032 Move [X19+56], X8
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Move X1, -46006272
	039 Add X1, X1, 3811
	040 Move X0, X31
	041 Call 0x1C17F3C
	042 Move X1, X31
	043 Call 0x1C17DEC

Method: System.Boolean Invoke()

Disassembly:
	0x036FCF54 B.EQ 0x36FCF74
	0x036FCF58 SUBS X9, X9, 0x1
	0x036FCF5C ADD X10, X10, 0x10
	0x036FCF60 B.NE 0x36FCF4C
	0x036FCF64 MOV X0, X19

ISIL:
	001 Move X8, [X0+64]
	002 Move X2, [X0+24]
	003 Move X1, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X2

Method: System.IAsyncResult BeginInvoke(System.AsyncCallback callback, System.Object object)

Disassembly:
	0x036FCF68 MOV W2, W31
	0x036FCF6C BL 0x1C5C788
	0x036FCF70 B 0x36FCF80
	0x036FCF74 LDRSW X9, [X10]
	0x036FCF78 ADD X8, X8, X9, 0x4, LSL
	0x036FCF7C ADD X0, X8, 0x138
	0x036FCF80 LDP X8, X1, [X0]
	0x036FCF84 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X3, X2
	003 Move X2, X1
	004 Add X1, X31, 8
	005 Move [X31+8], X31
	006 Call 0x1C17CB0
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean EndInvoke(System.IAsyncResult result)

Disassembly:
	0x036FCF88 BLR X8
	0x036FCF8C CBNZ X20, 0x36FCF98
	0x036FCF90 MOV X0, X21
	0x036FCF94 BL 0x1D2C690
	0x036FCF98 MOV X0, X20
	0x036FCF9C BL 0x1C16F18
	0x036FCFA0 BL 0x1990590
	0x036FCFA4 STP X30, X21, [X31 - 0x20]!
	0x036FCFA8 STP X20, X19, [X31 + 0x10]
	0x036FCFAC ADRP X21, 0xCE4000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Call 0x1C17E08
	008 Move W0, [X0]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

