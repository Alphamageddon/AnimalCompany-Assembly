Type: Unity.Burst.SharedStatic

Method: System.Void CheckSizeOf(System.UInt32 sizeOf)

Disassembly:
	0x03703508 MOV X19, X0
	0x0370350C BL 0x3380288
	0x03703510 ADRP X0, 0xA3E000
	0x03703514 LDR X0, [X0 + 0x260]
	0x03703518 BL 0x1C16D08
	0x0370351C MOV X1, X0
	0x03703520 MOV X0, X19
	0x03703524 BL 0x1C16DEC
	0x03703528 STP X30, X19, [X31 - 0x10]!
	0x0370352C ADRP X0, 0x9F9000
	0x03703530 LDR X0, [X0 + 0x758]
	0x03703534 BL 0x1C16D08
	0x03703538 BL 0x1C16F10
	0x0370353C MOV X1, X31
	0x03703540 MOV X19, X0
	0x03703544 BL 0x3380288
	0x03703548 ADRP X0, 0xA3E000
	0x0370354C LDR X0, [X0 + 0x268]
	0x03703550 BL 0x1C16D08
	0x03703554 MOV X1, X0
	0x03703558 MOV X0, X19
	0x0370355C BL 0x1C16DEC
	0x03703560 STR X30, [X31 - 0x10]!
	0x03703564 BL 0x37034B8
	0x03703568 STR X30, [X31 - 0x10]!
	0x0370356C BL 0x37034F0
	0x03703570 STR X30, [X31 - 0x10]!

ISIL:
	001 Compare W0, 0
	002 JumpIfEqual {4}
	003 Return 
	004 Move [X31-32], X30
	005 Move [X31+16], X20
	006 Move [X31+24], X19
	007 Move X0, 0x9F9000
	008 Move X0, [X0+1400]
	009 Call 0x1C17D08
	010 Call 0x1C17F10
	011 Move X19, X0
	012 Move X0, 0xA3F000
	013 Move X0, [X0+40]
	014 Call 0x1C17D08
	015 Move X20, X0
	016 Move X0, 0xA3F000
	017 Move X0, [X0+48]
	018 Call 0x1C17D08
	019 Move X2, X0
	020 Move X0, X19
	021 Move X1, X20
	022 Move X3, X31
	023 Call ArgumentException..ctor, X0, X1, X2
	024 Move X0, 0xA3F000
	025 Move X0, [X0+56]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Void CheckResult(System.Void* result)

Disassembly:
	0x03703574 BL 0x3703528
	0x03703578 STP X30, X19, [X31 - 0x10]!
	0x0370357C ADRP X0, 0x9F9000
	0x03703580 LDR X0, [X0 + 0x758]
	0x03703584 BL 0x1C16D08
	0x03703588 BL 0x1C16F10
	0x0370358C MOV X1, X31
	0x03703590 MOV X19, X0
	0x03703594 BL 0x3380288
	0x03703598 ADRP X0, 0xA3E000
	0x0370359C LDR X0, [X0 + 0x270]
	0x037035A0 BL 0x1C16D08
	0x037035A4 MOV X1, X0
	0x037035A8 MOV X0, X19
	0x037035AC BL 0x1C16DEC
	0x037035B0 STP X30, X19, [X31 - 0x10]!
	0x037035B4 ADRP X0, 0x9F9000
	0x037035B8 LDR X0, [X0 + 0x758]
	0x037035BC BL 0x1C16D08
	0x037035C0 BL 0x1C16F10
	0x037035C4 MOV X1, X31

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Return 
	004 Move [X31-16], X30
	005 Move [X31-8], X19
	006 Move X0, 0x9F1000
	007 Move X0, [X0+1456]
	008 Call 0x1C17D08
	009 Call 0x1C17F10
	010 Move X19, X0
	011 Move X0, 0xA3F000
	012 Move X0, [X0+64]
	013 Call 0x1C17D08
	014 Move X1, X0
	015 Move X0, X19
	016 Move X2, X31
	017 Call InvalidOperationException..ctor, X0, X1
	018 Move X0, 0xA3F000
	019 Move X0, [X0+72]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Call 0x1C17DEC

Method: System.Void* GetOrCreateSharedStaticInternal(System.Int64 getHashCode64, System.Int64 getSubHashCode64, System.UInt32 sizeOf, System.UInt32 alignment)

Disassembly:
	0x037035C8 MOV X19, X0
	0x037035CC BL 0x3380288
	0x037035D0 ADRP X0, 0xA3E000
	0x037035D4 LDR X0, [X0 + 0x278]
	0x037035D8 BL 0x1C16D08
	0x037035DC MOV X1, X0
	0x037035E0 MOV X0, X19
	0x037035E4 BL 0x1C16DEC
	0x037035E8 STP X30, X19, [X31 - 0x10]!
	0x037035EC ADRP X0, 0x9F9000
	0x037035F0 LDR X0, [X0 + 0x758]
	0x037035F4 BL 0x1C16D08
	0x037035F8 BL 0x1C16F10
	0x037035FC MOV X1, X31
	0x03703600 MOV X19, X0
	0x03703604 BL 0x3380288
	0x03703608 ADRP X0, 0xA3E000
	0x0370360C LDR X0, [X0 + 0x280]
	0x03703610 BL 0x1C16D08
	0x03703614 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W3
	007 Move W20, W2
	008 Move X2, X1
	009 Move X1, X0
	010 Add X0, X31, 0
	011 Move X3, X31
	012 Move [X31], X31
	013 Call Hash128..ctor, X0, X1, X2
	014 Add X0, X31, 0
	015 Move W1, W20
	016 Move W2, W19
	017 Move X3, X31
	018 Call BurstCompilerService.GetOrCreateSharedMemory, X0, X1, X2
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X30, [X31+16]
	022 Add X31, X31, 48
	023 Return X0

