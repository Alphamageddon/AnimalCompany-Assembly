Type: Unity.Burst.BurstCompiler/CommandBuilder

Method: System.Void .ctor()

Disassembly:
	0x036FB5BC BL 0x1C16CF4
	0x036FB5C0 ADRP X0, 0xA45000
	0x036FB5C4 LDR X0, [X0 + 0xDB0]
	0x036FB5C8 BL 0x1C16CF4
	0x036FB5CC MOVZ W8, 0x1
	0x036FB5D0 STRB W8, [X20 + 0xBF2]
	0x036FB5D4 LDR X0, [X19]
	0x036FB5D8 ADRP X19, 0xA45000
	0x036FB5DC LDR W8, [X0 + 0xE0]
	0x036FB5E0 LDR X19, [X19 + 0xDB0]
	0x036FB5E4 CBNZ W8, 0x36FB5EC
	0x036FB5E8 BL 0x1C16DFC
	0x036FB5EC LDR X0, [X19]
	0x036FB5F0 LDP X20, X19, [X31 + 0x10]
	0x036FB5F4 MOV X1, X31
	0x036FB5F8 LDR X30, [X31], #0x20
	0x036FB5FC B 0x36FB600
	0x036FB600 STP X30, X21, [X31 - 0x20]!
	0x036FB604 STP X20, X19, [X31 + 0x10]
	0x036FB608 ADRP X21, 0xCE5000
	0x036FB60C LDRB W8, [X21 + 0xBF8]
	0x036FB610 MOV X19, X1
	0x036FB614 MOV X20, X0
	0x036FB618 TBNZ X8, 0x0, 0x36FB630
	0x036FB61C ADRP X0, 0xA20000
	0x036FB620 LDR X0, [X0 + 0x848]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCE6000
	006 Move X20, 0x9F9000
	007 Move W8, [X21+3066]
	008 Move X20, [X20+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9F9000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3066], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call StringBuilder..ctor, X0
	027 Move [X19+16], X20
	028 Move [X19+24], W31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: Unity.Burst.BurstCompiler/CommandBuilder Begin(System.String cmd)

Disassembly:
	0x036FB624 BL 0x1C16CF4
	0x036FB628 MOVZ W8, 0x1
	0x036FB62C STRB W8, [X21 + 0xBF8]
	0x036FB630 CBZ X20, 0x36FB67C
	0x036FB634 ADRP X8, 0xA20000
	0x036FB638 LDR X8, [X8 + 0x848]
	0x036FB63C LDR X0, [X8]
	0x036FB640 LDR W8, [X0 + 0xE0]
	0x036FB644 CBNZ W8, 0x36FB64C
	0x036FB648 BL 0x1C16DFC
	0x036FB64C MOV X0, X20
	0x036FB650 CBZ X19, 0x36FB670
	0x036FB654 BL 0x36FA4EC
	0x036FB658 CBZ X0, 0x36FB6C4
	0x036FB65C MOV X1, X19
	0x036FB660 BL 0x36FBA10
	0x036FB664 LDP X20, X19, [X31 + 0x10]
	0x036FB668 LDP X30, X21, [X31], #0x20
	0x036FB66C B 0x36FBA6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {23}
	008 Move X20, X1
	009 Move X1, X31
	010 Call StringBuilder.Clear, X0
	011 Move X0, [X19+16]
	012 Move [X19+24], W31
	013 Compare X0, 0
	014 JumpIfEqual {23}
	015 Move X1, X20
	016 Move X2, X31
	017 Call StringBuilder.Append, X0, X1
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return X0
	023 Call 0x1C17F20

Method: Unity.Burst.BurstCompiler/CommandBuilder With(System.String arg)

Disassembly:
	0x036FCA10 STRB W8, [X19 + 0x11]
	0x036FCA14 CMP W9, W8
	0x036FCA18 B.EQ 0x36FCA34
	0x036FCA1C LDR X8, [X19 + 0x18]
	0x036FCA20 CBZ X8, 0x36FCA34
	0x036FCA24 LDR X9, [X8 + 0x18]
	0x036FCA28 LDR X0, [X8 + 0x40]
	0x036FCA2C LDR X1, [X8 + 0x28]
	0x036FCA30 BLR X9
	0x036FCA34 LDRB W8, [X20 + 0x12]
	0x036FCA38 LDRB W9, [X19 + 0x12]
	0x036FCA3C STRB W8, [X19 + 0x12]
	0x036FCA40 CMP W9, W8
	0x036FCA44 B.EQ 0x36FCA60
	0x036FCA48 LDR X8, [X19 + 0x18]
	0x036FCA4C CBZ X8, 0x36FCA60
	0x036FCA50 LDR X9, [X8 + 0x18]
	0x036FCA54 LDR X0, [X8 + 0x40]
	0x036FCA58 LDR X1, [X8 + 0x28]
	0x036FCA5C BLR X9
	0x036FCA60 LDRB W8, [X20 + 0x13]
	0x036FCA64 LDRB W9, [X19 + 0x13]
	0x036FCA68 STRB W8, [X19 + 0x13]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfNotEqual {15}
	009 Move X0, [X19+16]
	010 Compare X0, 0
	011 JumpIfEqual {28}
	012 Move W1, 32
	013 Move X2, X31
	014 Call StringBuilder.Append, X0, X1
	015 Move X0, [X19+16]
	016 Move W8, 1
	017 Move [X19+24], W8
	018 Compare X0, 0
	019 JumpIfEqual {28}
	020 Move X1, X20
	021 Move X2, X31
	022 Call StringBuilder.Append, X0, X1
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0
	028 Call 0x1C17F20

Method: Unity.Burst.BurstCompiler/CommandBuilder With(System.IntPtr arg)

Disassembly:
	0x036FCC44 BL 0x32D45B4
	0x036FCC48 CBZ X0, 0x36FCEB8
	0x036FCC4C ADRP X10, 0xA21000
	0x036FCC50 LDR X8, [X0]
	0x036FCC54 LDR X10, [X10 + 0x48]
	0x036FCC58 MOV X19, X0
	0x036FCC5C LDRH W9, [X8 + 0x12E]
	0x036FCC60 LDR X1, [X10]
	0x036FCC64 CBZ X9, 0x36FCC88
	0x036FCC68 LDR X10, [X8 + 0xB0]
	0x036FCC6C ADD X10, X10, 0x8
	0x036FCC70 LDUR X11, [X10 - 0x8]
	0x036FCC74 CMP X11, X1
	0x036FCC78 B.EQ 0x36FCC98
	0x036FCC7C SUBS X9, X9, 0x1
	0x036FCC80 ADD X10, X10, 0x10
	0x036FCC84 B.NE 0x36FCC70
	0x036FCC88 MOV X0, X19
	0x036FCC8C MOV W2, W31
	0x036FCC90 BL 0x1C5C788
	0x036FCC94 B 0x36FCCA4
	0x036FCC98 LDRSW X9, [X10]
	0x036FCC9C ADD X8, X8, X9, 0x4, LSL
	0x036FCCA0 ADD X0, X8, 0x138
	0x036FCCA4 LDP X8, X1, [X0]
	0x036FCCA8 MOV X0, X19
	0x036FCCAC BLR X8
	0x036FCCB0 MOV X19, X0
	0x036FCCB4 CBZ X0, 0x36FCEBC
	0x036FCCB8 ADRP X20, 0x9F7000
	0x036FCCBC ADRP X21, 0xA21000
	0x036FCCC0 ADRP X22, 0xA44000
	0x036FCCC4 LDR X20, [X20 + 0xE18]
	0x036FCCC8 LDR X21, [X21 + 0x50]
	0x036FCCCC LDR X22, [X22 + 0xE70]
	0x036FCCD0 LDR X8, [X19]
	0x036FCCD4 LDR X1, [X20]
	0x036FCCD8 LDRH W9, [X8 + 0x12E]
	0x036FCCDC CBZ X9, 0x36FCD00
	0x036FCCE0 LDR X10, [X8 + 0xB0]
	0x036FCCE4 ADD X10, X10, 0x8
	0x036FCCE8 LDUR X11, [X10 - 0x8]
	0x036FCCEC CMP X11, X1
	0x036FCCF0 B.EQ 0x36FCD10
	0x036FCCF4 SUBS X9, X9, 0x1
	0x036FCCF8 ADD X10, X10, 0x10
	0x036FCCFC B.NE 0x36FCCE8
	0x036FCD00 MOV X0, X19
	0x036FCD04 MOV W2, W31
	0x036FCD08 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xCE5000
	007 Move W8, [X20+3067]
	008 Move X19, X0
	009 Move [X31+8], X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x9FA000
	015 Move X0, [X0+2656]
	016 Call 0x1C17CF4
	017 Move X0, 0xA45000
	018 Move X0, [X0+3592]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3067], W8
	022 Move W8, [X19+24]
	023 Compare W8, 0
	024 JumpIfNotEqual {31}
	025 Move X0, [X19+16]
	026 Compare X0, 0
	027 JumpIfEqual {60}
	028 Move W1, 32
	029 Move X2, X31
	030 Call StringBuilder.Append, X0, X1
	031 Move X21, 0x9FA000
	032 Move X20, [X19+16]
	033 Move X21, [X21+2656]
	034 Move W8, 1
	035 Add X0, X31, 8
	036 Move X1, X31
	037 Move [X19+24], W8
	038 Call IntPtr.ToInt64, X0
	039 Move X8, [X21]
	040 Move [X31], X0
	041 Add X1, X31, 0
	042 Move X0, X8
	043 Call 0x1C17E04
	044 Compare X20, 0
	045 JumpIfEqual {60}
	046 Move X8, 0xA45000
	047 Move X8, [X8+3592]
	048 Move X2, X0
	049 Move X0, X20
	050 Move X3, X31
	051 Move X1, [X8]
	052 Call StringBuilder.AppendFormat, X0, X1, X2
	053 Move X0, X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+16]
	057 Move X21, [X31+24]
	058 Add X31, X31, 48
	059 Return X0
	060 Call 0x1C17F20

Method: Unity.Burst.BurstCompiler/CommandBuilder And(System.Char sep = |)

Disassembly:
	0x036FCD0C B 0x36FCD1C
	0x036FCD10 LDRSW X9, [X10]
	0x036FCD14 ADD X8, X8, X9, 0x4, LSL
	0x036FCD18 ADD X0, X8, 0x138
	0x036FCD1C LDP X8, X1, [X0]
	0x036FCD20 MOV X0, X19
	0x036FCD24 BLR X8
	0x036FCD28 TBZ X0, 0x0, 0x36FCE2C
	0x036FCD2C LDR X8, [X19]
	0x036FCD30 LDR X1, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move X2, X31
	008 Call StringBuilder.Append, X0, X1
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Call 0x1C17F20

Method: System.String SendToCompiler()

Disassembly:
	0x036FCA6C CMP W9, W8
	0x036FCA70 B.EQ 0x36FCA8C
	0x036FCA74 LDR X8, [X19 + 0x18]
	0x036FCA78 CBZ X8, 0x36FCA8C
	0x036FCA7C LDR X9, [X8 + 0x18]
	0x036FCA80 LDR X0, [X8 + 0x40]
	0x036FCA84 LDR X1, [X8 + 0x28]
	0x036FCA88 BLR X9
	0x036FCA8C LDRB W8, [X20 + 0x14]
	0x036FCA90 LDRB W9, [X19 + 0x14]
	0x036FCA94 STRB W8, [X19 + 0x14]
	0x036FCA98 CMP W9, W8
	0x036FCA9C B.EQ 0x36FCAB8
	0x036FCAA0 LDR X8, [X19 + 0x18]
	0x036FCAA4 CBZ X8, 0x36FCAB8
	0x036FCAA8 LDR X9, [X8 + 0x18]
	0x036FCAAC LDR X0, [X8 + 0x40]
	0x036FCAB0 LDR X1, [X8 + 0x28]
	0x036FCAB4 BLR X9
	0x036FCAB8 LDRB W8, [X20 + 0x15]
	0x036FCABC LDRB W9, [X19 + 0x15]
	0x036FCAC0 STRB W8, [X19 + 0x15]
	0x036FCAC4 CMP W9, W8
	0x036FCAC8 B.EQ 0x36FCAE4
	0x036FCACC LDR X8, [X19 + 0x18]
	0x036FCAD0 CBZ X8, 0x36FCAE4
	0x036FCAD4 LDR X9, [X8 + 0x18]
	0x036FCAD8 LDR X0, [X8 + 0x40]
	0x036FCADC LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCE5000
	005 Move W8, [X20+3068]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA20000
	012 Move X0, [X0+2120]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3068], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {38}
	019 Move X8, [X0]
	020 Move X19, 0xA20000
	021 Move X9, [X8+360]
	022 Move X1, [X8+368]
	023 Move X19, [X19+2120]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X8, [X19]
	026 Move X19, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Call BurstCompiler.SendRawCommandToCompiler, X0
	037 Return X0
	038 Call 0x1C17F20

