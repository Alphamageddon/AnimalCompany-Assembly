Type: Unity.Burst.BurstCompiler/<>c

Method: System.Void .cctor()

Disassembly:
	0x036FCFB8 MOV X20, X0
	0x036FCFBC TBNZ X8, 0x0, 0x36FCFD4
	0x036FCFC0 ADRP X0, 0xA44000
	0x036FCFC4 LDR X0, [X0 + 0xE78]
	0x036FCFC8 BL 0x1C16CF4
	0x036FCFCC MOVZ W8, 0x1
	0x036FCFD0 STRB W8, [X21 + 0xC0A]
	0x036FCFD4 MOV X0, X20
	0x036FCFD8 MOV X1, X31
	0x036FCFDC MOV X2, X31
	0x036FCFE0 BL 0x32D5BF8
	0x036FCFE4 TBZ X0, 0x0, 0x36FCFF4
	0x036FCFE8 MOV W0, W31
	0x036FCFEC STR X31, [X19]
	0x036FCFF0 B 0x36FD014
	0x036FCFF4 ADRP X8, 0xA44000
	0x036FCFF8 LDR X8, [X8 + 0xE78]
	0x036FCFFC MOV X0, X20
	0x036FD000 LDR X1, [X8]
	0x036FD004 BL 0x21A885C
	0x036FD008 CMP X0, 0x0
	0x036FD00C STR X0, [X19]
	0x036FD010 CSET W0, NE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCE5000
	005 Move X20, 0xA45000
	006 Move W8, [X19+3072]
	007 Move X20, [X20+3328]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA45000
	013 Move X0, [X0+3328]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3072], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x036FD014 LDP X20, X19, [X31 + 0x10]
	0x036FD018 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <Compile>b__22_0(System.Attribute s)

Disassembly:
	0x036FD01C RET
	0x036FD020 STP X30, X21, [X31 - 0x20]!
	0x036FD024 STP X20, X19, [X31 + 0x10]
	0x036FD028 ADRP X21, 0xCE3000
	0x036FD02C LDRB W8, [X21 + 0xC0D]
	0x036FD030 MOV X19, X1
	0x036FD034 MOV X20, X0
	0x036FD038 TBNZ X8, 0x0, 0x36FD050
	0x036FD03C ADRP X0, 0x9FA000
	0x036FD040 LDR X0, [X0 + 0xBF0]
	0x036FD044 BL 0x1C16CF4
	0x036FD048 MOVZ W8, 0x1
	0x036FD04C STRB W8, [X21 + 0xC0D]
	0x036FD050 LDR X8, [X20]
	0x036FD054 CBZ X8, 0x36FD144
	0x036FD058 LDR W9, [X8 + 0x10]
	0x036FD05C CBNZ W9, 0x36FD070
	0x036FD060 LDR X9, [X19]
	0x036FD064 CBZ X9, 0x36FD144
	0x036FD068 LDR W9, [X9 + 0x10]
	0x036FD06C STR W9, [X8 + 0x10]
	0x036FD070 LDR W9, [X8 + 0x14]
	0x036FD074 CBNZ W9, 0x36FD088
	0x036FD078 LDR X9, [X19]
	0x036FD07C CBZ X9, 0x36FD144
	0x036FD080 LDR W9, [X9 + 0x14]
	0x036FD084 STR W9, [X8 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCE4000
	005 Move W8, [X20+3073]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA44000
	012 Move X0, [X0+3616]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3073], W8
	016 Compare X19, 0
	017 JumpIfEqual {36}
	018 Move X0, X19
	019 Move X1, X31
	020 Call "il2cpp_vm_object_is_inst", X0
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, [X0]
	024 Move X19, 0xA44000
	025 Move X9, [X8+424]
	026 Move X1, [X8+432]
	027 Move X19, [X19+3616]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X1, [X19]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+32]
	034 Call String.op_Inequality, X0, X1
	035 Return X0
	036 Call 0x1C17F20

Method: System.Boolean <TriggerUnsafeStaticMethodRecompilation>b__29_0(System.Attribute x)

Disassembly:
	0x036FD088 LDR W9, [X8 + 0x20]
	0x036FD08C CBNZ W9, 0x36FD0A0
	0x036FD090 LDR X9, [X19]
	0x036FD094 CBZ X9, 0x36FD144
	0x036FD098 LDR W9, [X9 + 0x20]
	0x036FD09C STR W9, [X8 + 0x20]
	0x036FD0A0 LDRB W9, [X8 + 0x18]
	0x036FD0A4 CBNZ W9, 0x36FD0C8
	0x036FD0A8 LDR X9, [X19]
	0x036FD0AC CBZ X9, 0x36FD144
	0x036FD0B0 LDRB W10, [X9 + 0x18]
	0x036FD0B4 CBZ W10, 0x36FD0C8
	0x036FD0B8 LDRH W9, [X9 + 0x18]
	0x036FD0BC STRH W9, [X8 + 0x18]
	0x036FD0C0 LDR X8, [X20]
	0x036FD0C4 CBZ X8, 0x36FD144
	0x036FD0C8 LDRB W9, [X8 + 0x1A]
	0x036FD0CC CBNZ W9, 0x36FD0F0
	0x036FD0D0 LDR X9, [X19]
	0x036FD0D4 CBZ X9, 0x36FD144
	0x036FD0D8 LDRB W10, [X9 + 0x1A]
	0x036FD0DC CBZ W10, 0x36FD0F0
	0x036FD0E0 LDRH W9, [X9 + 0x1A]
	0x036FD0E4 STRH W9, [X8 + 0x1A]
	0x036FD0E8 LDR X8, [X20]
	0x036FD0EC CBZ X8, 0x36FD144
	0x036FD0F0 LDRB W9, [X8 + 0x1E]
	0x036FD0F4 CBNZ W9, 0x36FD118

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCE4000
	005 Move W8, [X20+3074]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA44000
	012 Move X0, [X0+3624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3074], W8
	016 Compare X19, 0
	017 JumpIfEqual {36}
	018 Move X0, X19
	019 Move X1, X31
	020 Call "il2cpp_vm_object_is_inst", X0
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, [X0]
	024 Move X19, 0xA44000
	025 Move X9, [X8+744]
	026 Move X1, [X8+752]
	027 Move X19, [X19+3624]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X1, [X19]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+32]
	034 Call String.op_Equality, X0, X1
	035 Return X0
	036 Call 0x1C17F20

