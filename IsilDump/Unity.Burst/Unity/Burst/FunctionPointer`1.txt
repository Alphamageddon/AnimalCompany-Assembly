Type: Unity.Burst.FunctionPointer`1

Method: System.Void .ctor(System.IntPtr ptr)

Disassembly:
	0x02D42490 CBZ X21, 0x2D42820
	0x02D42494 LDR X0, [X20 + 0x20]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.IntPtr get_Value()

Disassembly:
	0x02D42498 LDR X23, [X21 + 0x10]
	0x02D4249C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void CheckIsCreated()

Disassembly:
	0x02D424A0 TBNZ X8, 0x0, 0x2D424A8
	0x02D424A4 BL 0x1C5C684
	0x02D424A8 LDR X8, [X28]
	0x02D424AC LDR X9, [X0 + 0xC0]
	0x02D424B0 LDR W10, [X8 + 0xE0]
	0x02D424B4 LDR X24, [X9 + 0x8]
	0x02D424B8 CBNZ W10, 0x2D424C4
	0x02D424BC MOV X0, X8
	0x02D424C0 BL 0x1C16DFC
	0x02D424C4 MOV X0, X24
	0x02D424C8 MOV X1, X31
	0x02D424CC BL 0x338C698
	0x02D424D0 MOV X1, X0
	0x02D424D4 MOV X0, X23
	0x02D424D8 MOV X2, X31
	0x02D424DC BL 0x3395F0C
	0x02D424E0 TBZ X0, 0x0, 0x2D42538
	0x02D424E4 LDR X0, [X20 + 0x20]
	0x02D424E8 LDRB W8, [X0 + 0x135]
	0x02D424EC TBNZ X8, 0x0, 0x2D424F4
	0x02D424F0 BL 0x1C5C684
	0x02D424F4 LDR X8, [X28]
	0x02D424F8 LDR X9, [X0 + 0xC0]
	0x02D424FC LDR W10, [X8 + 0xE0]
	0x02D42500 LDR X23, [X9 + 0x8]
	0x02D42504 CBNZ W10, 0x2D42510
	0x02D42508 MOV X0, X8
	0x02D4250C BL 0x1C16DFC
	0x02D42510 MOV X0, X23
	0x02D42514 MOV X1, X31
	0x02D42518 BL 0x338C698
	0x02D4251C CBZ X0, 0x2D42820

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {14}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X0, [X20]
	015 Move X1, X31
	016 Move X2, X31
	017 Call IntPtr.op_Inequality, X0, X1
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {26}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 
	026 Move X0, 0x13BD000
	027 Move X0, [X0+2584]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X20, X0
	031 Move X0, 0x13DD000
	032 Move X0, [X0+3656]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X20
	036 Move X2, X31
	037 Call NullReferenceException..ctor, X0, X1
	038 Move X0, X20
	039 Move X1, X19
	040 Call 0x1C17DEC

Method: T get_Invoke()

Disassembly:
	0x02D42520 LDR X8, [X0]
	0x02D42524 LDR X1, [X21 + 0x10]
	0x02D42528 LDR X9, [X8 + 0x298]
	0x02D4252C LDR X2, [X8 + 0x2A0]
	0x02D42530 BLR X9
	0x02D42534 TBZ X0, 0x0, 0x2D425B4
	0x02D42538 LDR X0, [X20 + 0x20]
	0x02D4253C LDRB W8, [X0 + 0x135]
	0x02D42540 TBNZ X8, 0x0, 0x2D42548
	0x02D42544 BL 0x1C5C684
	0x02D42548 LDR X8, [X28]
	0x02D4254C LDR X9, [X0 + 0xC0]
	0x02D42550 LDR W10, [X8 + 0xE0]
	0x02D42554 LDR X23, [X9 + 0x8]
	0x02D42558 CBNZ W10, 0x2D42564
	0x02D4255C MOV X0, X8
	0x02D42560 BL 0x1C16DFC
	0x02D42564 MOV X0, X23
	0x02D42568 MOV X1, X31
	0x02D4256C BL 0x338C698
	0x02D42570 LDR X8, [X21]
	0x02D42574 MOV X1, X0
	0x02D42578 MOV X0, X21
	0x02D4257C LDP X9, X2, [X8 + 0x178]
	0x02D42580 BLR X9
	0x02D42584 MOV X24, X0
	0x02D42588 LDR X0, [X29]
	0x02D4258C MOV X23, X1
	0x02D42590 LDR W8, [X0 + 0xE0]
	0x02D42594 CBNZ W8, 0x2D4259C
	0x02D42598 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x169A000
	007 Move X21, 0x13DA000
	008 Move W8, [X22+2123]
	009 Move X21, [X21+2128]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x13DA000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2123], W8
	021 Move X0, [X21]
	022 Move X19, [X19]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X1, [X8+24]
	041 Move X30, [X31+48]
	042 Call 0x221630C, X0
	043 Return X0

Method: System.Boolean get_IsCreated()

Disassembly:
	0x02D4259C MOV X0, X24
	0x02D425A0 MOV X1, X31
	0x02D425A4 BL 0x3C38948
	0x02D425A8 TBNZ X0, 0x0, 0x2D42660

ISIL:
	001 Move X0, [X0]
	002 Move X1, X31
	003 Move X2, X31
	004 Call IntPtr.op_Inequality, X0, X1
	005 Return X0

Method: Unity.Burst.IFunctionPointer Unity.Burst.IFunctionPointer.FromIntPtr(System.IntPtr ptr)

Disassembly:
	0x02D425AC LDRB W8, [X21 + 0x1D]
	0x02D425B0 CBZ W8, 0x2D425D8
	0x02D425B4 LDR W8, [X22 + 0x18]
	0x02D425B8 ADD X25, X25, 0x1
	0x02D425BC CMP X25, W8, SXTW
	0x02D425C0 B.LT 0x2D4244C
	0x02D425C4 B 0x2D425D8
	0x02D425C8 CBZ X21, 0x2D42820
	0x02D425CC LDRB W8, [X21 + 0x1C]
	0x02D425D0 CBNZ W8, 0x2D42494
	0x02D425D4 B 0x2D425B4
	0x02D425D8 LDR X0, [X20 + 0x20]
	0x02D425DC ADRP X20, 0x13DC000
	0x02D425E0 LDRB W8, [X0 + 0x135]
	0x02D425E4 LDR X20, [X20 + 0xEC0]
	0x02D425E8 TBNZ X8, 0x0, 0x2D425F0
	0x02D425EC BL 0x1C5C684
	0x02D425F0 LDR X8, [X0 + 0xC0]
	0x02D425F4 LDR X0, [X8 + 0x18]
	0x02D425F8 BL 0x2D418A0
	0x02D425FC LDR X1, [X20]
	0x02D42600 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, [X2+32]
	005 Move X19, X1
	006 Add X8, X0, 309
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X20, X2
	013 Call 0x1C5D684
	014 Move X0, [X20+32]
	015 Add X8, X0, 309
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 Move [X31+8], X19
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X8, [X0+192]
	024 Add X1, X31, 8
	025 Move X0, [X8]
	026 Call 0x1C17E04
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

