Type: Unity.Burst.Intrinsics.X86/F16C

Method: System.Boolean get_IsF16CSupported()

Disassembly:
	0x0372A3F4 UNIMPLEMENTED
	0x0372A3F8 UNIMPLEMENTED

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.UInt32 HalfToFloat(System.UInt16 h)

Disassembly:
	0x0372A3FC UNIMPLEMENTED
	0x0372A400 UNIMPLEMENTED
	0x0372A404 UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A40C UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A414 FSUB V0.2D, V5.2D, V0.2D
	0x0372A418 FSUB V1.2D, V2.2D, V1.2D
	0x0372A41C UNIMPLEMENTED
	0x0372A420 UNIMPLEMENTED
	0x0372A424 LDR V1, [X0 + 0x1]
	0x0372A428 LDR V2, [X1 + 0x1]
	0x0372A42C LDR V3, [X2 + 0x1]
	0x0372A430 UNIMPLEMENTED
	0x0372A434 UNIMPLEMENTED
	0x0372A438 UNIMPLEMENTED
	0x0372A43C UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A444 UNIMPLEMENTED
	0x0372A448 UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A450 FSUB V1.2D, V2.2D, V1.2D
	0x0372A454 FSUB V3.2D, V3.2D, V4.2D

ISIL:
	001 Move W10, W0
	002 ShiftRight W10, 16
	003 And W10, W10, 0x7FFF
	004 Move W9, W0
	005 ShiftRight W9, 10
	006 And W9, W9, 0x3FFF
	007 And W8, W0, 1023
	008 And W0, W10, 0x80000000
	009 Compare W9, 0
	010 JumpIfEqual {17}
	011 Move W10, 0x38000000
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W11, 255
	014 Add W9, W10, W9
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Or W8, W0, W8
	017 Compare W8, 0
	018 JumpIfEqual {30}
	019 NotImplemented "Instruction CLZ not yet implemented."
	020 Or W11, W9, 0xFFFFFFE0
	021 Add W11, W11, 10
	022 NotImplemented "Instruction LSLV not yet implemented."
	023 Move W10, 0x43000000
	024 Move W8, W8
	025 ShiftRight W8, 18
	026 And W8, W8, 255
	027 Subtract W9, W10, W9
	028 Or W8, W8, W0
	029 Or W0, W8, W9
	030 Return X0

Method: Unity.Burst.Intrinsics.v128 cvtph_ps(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x0372A458 UNIMPLEMENTED
	0x0372A45C UNIMPLEMENTED
	0x0372A460 STP V0, V1, [X8]
	0x0372A464 RET
	0x0372A468 STP X30, X19, [X31 - 0x10]!
	0x0372A46C ADRP X0, 0x9C9000
	0x0372A470 LDR X0, [X0 + 0x7D0]
	0x0372A474 BL 0x1C16D08
	0x0372A478 BL 0x1C16F10
	0x0372A47C MOV X19, X0
	0x0372A480 ADRP X0, 0xA1A000
	0x0372A484 LDR X0, [X0 + 0xC70]
	0x0372A488 BL 0x1C16D08
	0x0372A48C MOV X1, X0
	0x0372A490 MOV X0, X19
	0x0372A494 MOV X2, X31
	0x0372A498 BL 0x33B2C70
	0x0372A49C ADRP X0, 0xA1A000
	0x0372A4A0 LDR X0, [X0 + 0xCD8]
	0x0372A4A4 BL 0x1C16D08
	0x0372A4A8 MOV X1, X0
	0x0372A4AC MOV X0, X19
	0x0372A4B0 BL 0x1C16DEC
	0x0372A4B4 FMOV S0, W0
	0x0372A4B8 FMOV S1, W2
	0x0372A4BC FMOV S2, W4
	0x0372A4C0 FCVT S0, S0
	0x0372A4C4 FCVT S1, S1
	0x0372A4C8 FCVT S2, S2
	0x0372A4CC FMUL D0, D0, D1
	0x0372A4D0 FSUB D0, D2, D0
	0x00000000 INVALID
	0x0372A4D8 AND X8, X0, 0x0
	0x0372A4DC FMOV W9, S0
	0x0372A4E0 ORR X0, X8, X9, 0x0
	0x0372A4E4 RET
	0x0372A4E8 STP X30, X19, [X31 - 0x10]!
	0x0372A4EC ADRP X0, 0x9C9000
	0x0372A4F0 LDR X0, [X0 + 0x7D0]
	0x0372A4F4 BL 0x1C16D08
	0x0372A4F8 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCB7000
	007 Move X20, 0xA1B000
	008 Move W8, [X21+3195]
	009 Move X20, [X20+3160]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA1B000
	016 Move X0, [X0+3160]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3195], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, X19
	027 ShiftRight X20, 16
	028 And X20, X20, 0x7FFFFFFF
	029 Move X21, X19
	030 ShiftRight X21, 32
	031 And X21, X21, 0x7FFFFFFF
	032 Move X22, X19
	033 ShiftRight X22, 48
	034 And X22, X22, 0x7FFFFFFF
	035 Call F16C.HalfToFloat, X0
	036 Move W19, W0
	037 Move W0, W20
	038 Call F16C.HalfToFloat, X0
	039 Move W20, W0
	040 Move W0, W21
	041 Call F16C.HalfToFloat, X0
	042 Move W21, W0
	043 Move W0, W22
	044 Call F16C.HalfToFloat, X0
	045 Move W8, W19
	046 Move W1, W21
	047 NotImplemented "Instruction BFM not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 NotImplemented "Instruction BFM not yet implemented."
	053 Move X0, X8
	054 Move X30, [X31+48]
	055 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cvtph_ps(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x0372A4FC MOV X19, X0
	0x0372A500 ADRP X0, 0xA1A000
	0x0372A504 LDR X0, [X0 + 0xC70]
	0x0372A508 BL 0x1C16D08
	0x0372A50C MOV X1, X0
	0x0372A510 MOV X0, X19
	0x0372A514 MOV X2, X31
	0x0372A518 BL 0x33B2C70
	0x0372A51C ADRP X0, 0xA1A000
	0x0372A520 LDR X0, [X0 + 0xCE0]
	0x0372A524 BL 0x1C16D08
	0x0372A528 MOV X1, X0
	0x0372A52C MOV X0, X19
	0x0372A530 BL 0x1C16DEC
	0x0372A534 STP X30, X19, [X31 - 0x10]!
	0x0372A538 ADRP X0, 0x9C9000
	0x0372A53C LDR X0, [X0 + 0x7D0]
	0x0372A540 BL 0x1C16D08
	0x0372A544 BL 0x1C16F10
	0x0372A548 MOV X19, X0
	0x0372A54C ADRP X0, 0xA1A000
	0x0372A550 LDR X0, [X0 + 0xC70]
	0x0372A554 BL 0x1C16D08
	0x0372A558 MOV X1, X0
	0x0372A55C MOV X0, X19
	0x0372A560 MOV X2, X31
	0x0372A564 BL 0x33B2C70
	0x0372A568 ADRP X0, 0xA1A000
	0x0372A56C LDR X0, [X0 + 0xCE8]
	0x0372A570 BL 0x1C16D08
	0x0372A574 MOV X1, X0
	0x0372A578 MOV X0, X19
	0x0372A57C BL 0x1C16DEC
	0x0372A580 FMOV D1, X0
	0x0372A584 FMOV S0, W0
	0x0372A588 FMOV D3, X2
	0x0372A58C UNIMPLEMENTED
	0x0372A590 FMOV S2, W2
	0x0372A594 FMOV D5, X4
	0x0372A598 UNIMPLEMENTED
	0x0372A59C UNIMPLEMENTED
	0x0372A5A0 UNIMPLEMENTED
	0x0372A5A4 FMOV S4, W4
	0x0372A5A8 UNIMPLEMENTED
	0x0372A5AC UNIMPLEMENTED
	0x0372A5B0 UNIMPLEMENTED
	0x0372A5B4 UNIMPLEMENTED
	0x0372A5B8 UNIMPLEMENTED
	0x0372A5BC UNIMPLEMENTED
	0x0372A5C0 UNIMPLEMENTED
	0x0372A5C4 UNIMPLEMENTED
	0x0372A5C8 UNIMPLEMENTED
	0x0372A5CC UNIMPLEMENTED
	0x0372A5D0 UNIMPLEMENTED
	0x0372A5D4 UNIMPLEMENTED
	0x0372A5D8 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x0372A5E4 FSUB V0.2D, V0.2D, V4.2D
	0x0372A5E8 FSUB V1.2D, V1.2D, V5.2D
	0x0372A5EC UNIMPLEMENTED

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xCB7000
	012 Move X22, 0xA1B000
	013 Move X19, X8
	014 Move W8, [X23+3196]
	015 Move X22, [X22+3160]
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xA1B000
	023 Move X0, [X0+3160]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3196], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move W0, W21
	033 Move X22, X21
	034 ShiftRight X22, 16
	035 And X22, X22, 0x7FFFFFFF
	036 Move X23, X21
	037 ShiftRight X23, 32
	038 And X23, X23, 0x7FFFFFFF
	039 Move X24, X21
	040 ShiftRight X24, 48
	041 And X24, X24, 0x7FFFFFFF
	042 Call F16C.HalfToFloat, X0
	043 Move W21, W0
	044 Move W0, W22
	045 Call F16C.HalfToFloat, X0
	046 Move W22, W0
	047 Move W0, W23
	048 Call F16C.HalfToFloat, X0
	049 Move W23, W0
	050 Move W0, W24
	051 Call F16C.HalfToFloat, X0
	052 Move W24, W0
	053 Move W0, W20
	054 Move X25, X20
	055 ShiftRight X25, 16
	056 And X25, X25, 0x7FFFFFFF
	057 Call F16C.HalfToFloat, X0
	058 Move W26, W0
	059 Move W0, W25
	060 Move X27, X20
	061 ShiftRight X27, 32
	062 And X27, X27, 0x7FFFFFFF
	063 Call F16C.HalfToFloat, X0
	064 Move W25, W0
	065 Move W0, W27
	066 Move X20, X20
	067 ShiftRight X20, 48
	068 And X20, X20, 0x7FFFFFFF
	069 Call F16C.HalfToFloat, X0
	070 Move W27, W0
	071 Move W0, W20
	072 Call F16C.HalfToFloat, X0
	073 Move [X19], W21
	074 Move [X19+4], W22
	075 Move [X19+8], W23
	076 Move [X19+12], W24
	077 Move [X19+16], W26
	078 Move [X19+20], W25
	079 Move [X19+24], W27
	080 Move [X19+28], W0
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X26, [X31+16]
	088 Move X25, [X31+24]
	089 Move X30, [X31+80]
	090 Move X27, [X31+88]
	091 Return X0

Method: System.UInt16 FloatToHalf(System.UInt32 f, System.Int32 rounding)

Disassembly:
	0x0372A5F0 UNIMPLEMENTED
	0x0372A5F4 UNIMPLEMENTED
	0x0372A5F8 UNIMPLEMENTED
	0x0372A5FC ORR V0.16B, V1.16B, V0.16B
	0x0372A600 UNIMPLEMENTED
	0x0372A604 FMOV X0, D0
	0x0372A608 RET
	0x0372A60C LDR V0, [X0]
	0x0372A610 LDR V1, [X1]
	0x0372A614 LDR V2, [X2]
	0x0372A618 UNIMPLEMENTED
	0x0372A61C UNIMPLEMENTED
	0x0372A620 UNIMPLEMENTED
	0x0372A624 UNIMPLEMENTED
	0x0372A628 UNIMPLEMENTED
	0x0372A62C UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A634 UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A63C FSUB V0.2D, V0.2D, V4.2D
	0x0372A640 FSUB V1.2D, V1.2D, V2.2D
	0x0372A644 UNIMPLEMENTED
	0x0372A648 UNIMPLEMENTED
	0x0372A64C LDR V1, [X0 + 0x1]
	0x0372A650 LDR V2, [X1 + 0x1]
	0x0372A654 LDR V3, [X2 + 0x1]
	0x0372A658 UNIMPLEMENTED
	0x0372A65C UNIMPLEMENTED
	0x0372A660 UNIMPLEMENTED
	0x0372A664 UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A66C UNIMPLEMENTED
	0x0372A670 UNIMPLEMENTED
	0x0372A674 UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A67C FSUB V2.2D, V2.2D, V5.2D
	0x0372A680 FSUB V1.2D, V1.2D, V3.2D
	0x0372A684 UNIMPLEMENTED
	0x0372A688 UNIMPLEMENTED
	0x0372A68C STP V0, V2, [X8]
	0x0372A690 RET
	0x0372A694 STP X30, X19, [X31 - 0x10]!
	0x0372A698 ADRP X0, 0x9C9000
	0x0372A69C LDR X0, [X0 + 0x7D0]
	0x0372A6A0 BL 0x1C16D08
	0x0372A6A4 BL 0x1C16F10
	0x0372A6A8 MOV X19, X0
	0x0372A6AC ADRP X0, 0xA1A000
	0x0372A6B0 LDR X0, [X0 + 0xC70]
	0x0372A6B4 BL 0x1C16D08
	0x0372A6B8 MOV X1, X0
	0x0372A6BC MOV X0, X19
	0x0372A6C0 MOV X2, X31
	0x0372A6C4 BL 0x33B2C70
	0x0372A6C8 ADRP X0, 0xA1A000
	0x0372A6CC LDR X0, [X0 + 0xCF0]
	0x0372A6D0 BL 0x1C16D08
	0x0372A6D4 MOV X1, X0
	0x0372A6D8 MOV X0, X19
	0x0372A6DC BL 0x1C16DEC
	0x0372A6E0 EOR W8, W0, 0x80000000
	0x0372A6E4 FMOV S0, W2
	0x0372A6E8 FMOV S2, W8
	0x0372A6EC FMOV S1, W4
	0x0372A6F0 FCVT S0, S0
	0x0372A6F4 FCVT S2, S2
	0x0372A6F8 FCVT S1, S1
	0x0372A6FC FMUL D0, D2, D0
	0x0372A700 FSUB D0, D0, D1
	0x00000000 INVALID
	0x0372A708 AND X8, X0, 0x0
	0x0372A70C FMOV W9, S0
	0x0372A710 ORR X0, X8, X9, 0x0
	0x0372A714 RET
	0x0372A718 STR X30, [X31 - 0x20]!
	0x0372A71C STP X20, X19, [X31 + 0x10]
	0x0372A720 ADRP X19, 0xCB6000
	0x0372A724 ADRP X20, 0x9F2000
	0x0372A728 LDRB W8, [X19 + 0xC81]
	0x0372A72C LDR X20, [X20 + 0xA98]
	0x0372A730 TBNZ X8, 0x0, 0x372A748
	0x0372A734 ADRP X0, 0x9F2000
	0x0372A738 LDR X0, [X0 + 0xA98]
	0x0372A73C BL 0x1C16CF4
	0x0372A740 MOVZ W8, 0x1
	0x0372A744 STRB W8, [X19 + 0xC81]
	0x0372A748 LDR X0, [X20]
	0x0372A74C LDR W8, [X0 + 0xE0]
	0x0372A750 CBNZ W8, 0x372A758
	0x0372A754 BL 0x1C16DFC
	0x0372A758 LDP X20, X19, [X31 + 0x10]
	0x0372A75C MOV X0, X31
	0x0372A760 LDR X30, [X31], #0x20
	0x0372A764 B 0x37308F8
	0x0372A768 MOV W8, W0
	0x0372A76C MOV W0, W31
	0x0372A770 MOVZ W9, 0x80000000
	0x0372A774 ANDS W31, W9, W8, 0x0
	0x0372A778 UBFM W9, W9, 0x1, 0x1F
	0x0372A77C CINC W0, W0, NE
	0x0372A780 CBNZ W9, 0x372A774
	0x0372A784 RET
	0x0372A788 MOV X8, X0
	0x0372A78C MOV W0, W31
	0x0372A790 MOVZ X9, 0x80000000
	0x0372A794 ANDS X31, X9, X8, 0x0
	0x0372A798 UBFM X9, X9, 0x1, 0x3F
	0x0372A79C CINC W0, W0, NE
	0x0372A7A0 CBNZ X9, 0x372A794
	0x0372A7A4 RET
	0x0372A7A8 LDP X8, X1, [X0]
	0x0372A7AC MOV X0, X8
	0x0372A7B0 RET
	0x0372A7B4 STP X1, X2, [X0]
	0x0372A7B8 RET
	0x0372A7BC STP X1, X2, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCB7000
	007 Move X21, 0xA1B000
	008 Move W8, [X22+3197]
	009 Move X21, [X21+3160]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA1B000
	017 Move X0, [X0+3160]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3197], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X9, [X0+184]
	028 Move X10, [X9+8]
	029 Compare X10, 0
	030 JumpIfEqual {118}
	031 Move W11, [X10+24]
	032 Move W8, W19
	033 ShiftRight W8, 23
	034 And W8, W8, 0x7FFFFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X12, [X9]
	037 Compare X12, 0
	038 JumpIfEqual {118}
	039 Move W9, [X12+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W13, W8
	042 Add X10, X10, X13
	043 Move W11, [X10+32]
	044 Add X10, X12, X13
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 And W9, W19, 0x7FFFFF
	047 Subtract W13, W20, 8
	048 NotImplemented "Instruction LSRV not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add W0, W10, W12
	051 Move X14, -45686784
	052 Add X14, X14, 2153
	053 NotImplemented "Instruction ADR not yet implemented."
	054 Move W16, [X14]
	055 Add X15, X15, X16
	056 And W10, W11, 31
	057 And W12, W0, 0x7C00
	058 And W13, W0, 0x8000
	059 CallNoReturn X15
	060 And W8, W19, 0x7F800000
	061 Move W10, 0x33000000
	062 Move W13, 0x7C00
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CINC not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract W8, W11, 1
	067 NotImplemented "Instruction LSRV not yet implemented."
	068 And W8, W8, 1
	069 Add W0, W0, W8
	070 Move W11, 0x7C00
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 And W31, W12, W13
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add W0, W0, 1
	077 Compare W13, 0
	078 JumpIfNotEqual {106}
	079 Move W11, 0x7C00
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Compare W8, 0
	083 JumpIfEqual {100}
	084 Add W0, W0, 1
	085 Move W8, 0x7C00
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Or W8, W11, 0xFFFFFFFE
	088 Add W8, W0, W8
	089 Add W0, W8, 1
	090 Move TEMP, 0
	091 Not TEMP
	092 Move W12, TEMP
	093 NotImplemented "Instruction LSLV not yet implemented."
	094 NotImplemented "Instruction BICS not yet implemented."
	095 NotImplemented "Instruction CINC not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W9, 255
	098 NotImplemented "Instruction CCMP not yet implemented."
	099 Move W8, 0x7BFF
	100 Move TEMP, 0
	101 Not TEMP
	102 Move W11, TEMP
	103 NotImplemented "Instruction LSLV not yet implemented."
	104 NotImplemented "Instruction BICS not yet implemented."
	105 NotImplemented "Instruction CINC not yet implemented."
	106 Move W9, 0xFC00
	107 Move W10, 511
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CCMP not yet implemented."
	110 Move W8, 0xFBFF
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Return X0
	118 Call 0x1C17F20
	119 Call 0x1C17F28

Method: Unity.Burst.Intrinsics.v128 cvtps_ph(Unity.Burst.Intrinsics.v128 a, System.Int32 rounding)

Disassembly:
	0x0372A7C0 RET
	0x0372A7C4 SCVTF S0, W2
	0x0372A7C8 AND X8, X0, 0x0
	0x0372A7CC FMOV W9, S0
	0x0372A7D0 ORR X0, X8, X9, 0x0
	0x0372A7D4 RET
	0x0372A7D8 SCVTF S0, X2
	0x0372A7DC AND X8, X0, 0x0
	0x0372A7E0 FMOV W9, S0
	0x0372A7E4 ORR X0, X8, X9, 0x0
	0x0372A7E8 RET
	0x0372A7EC FMOV S0, W0
	0x0372A7F0 FMOV S1, W2
	0x0372A7F4 FADD S0, S0, S1
	0x0372A7F8 AND X8, X0, 0x0
	0x0372A7FC FMOV W9, S0
	0x0372A800 ORR X0, X8, X9, 0x0
	0x0372A804 RET
	0x0372A808 FMOV S0, W0
	0x0372A80C FMOV S1, W2
	0x0372A810 FSUB S0, S0, S1
	0x0372A814 AND X8, X0, 0x0
	0x0372A818 FMOV W9, S0
	0x0372A81C ORR X0, X8, X9, 0x0
	0x0372A820 RET
	0x0372A824 FMOV S0, W0
	0x0372A828 FMOV S1, W2
	0x0372A82C FMUL S0, S0, S1
	0x0372A830 AND X8, X0, 0x0
	0x0372A834 FMOV W9, S0
	0x0372A838 ORR X0, X8, X9, 0x0
	0x0372A83C RET
	0x0372A840 FMOV S0, W0
	0x0372A844 FMOV S1, W2
	0x0372A848 FDIV S0, S0, S1
	0x0372A84C AND X8, X0, 0x0
	0x0372A850 FMOV W9, S0
	0x0372A854 ORR X0, X8, X9, 0x0
	0x0372A858 RET
	0x0372A85C STR X30, [X31 - 0x30]!
	0x0372A860 STP X22, X21, [X31 + 0x10]
	0x0372A864 STP X20, X19, [X31 + 0x20]
	0x0372A868 ADRP X22, 0xCB6000
	0x0372A86C ADRP X21, 0x9C9000
	0x0372A870 LDRB W8, [X22 + 0xC82]
	0x0372A874 LDR X21, [X21 + 0x5A8]
	0x0372A878 MOV X19, X1
	0x0372A87C MOV X20, X0
	0x0372A880 TBNZ X8, 0x0, 0x372A898
	0x0372A884 ADRP X0, 0x9C9000
	0x0372A888 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xCB7000
	008 Move X22, 0xA1B000
	009 Move W8, [X23+3198]
	010 Move X22, [X22+3160]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA1B000
	019 Move X0, [X0+3160]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3198], W8
	023 Move X0, [X22]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W9, 8
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W20
	032 Move W1, W21
	033 Move X22, X20
	034 ShiftRight X22, 32
	035 And X22, X22, 0x7FFFFFFF
	036 Call F16C.FloatToHalf, X0, X1
	037 Move W20, W0
	038 Move W0, W22
	039 Move W1, W21
	040 Call F16C.FloatToHalf, X0, X1
	041 Move W22, W0
	042 Move W0, W19
	043 Move W1, W21
	044 Move X23, X19
	045 ShiftRight X23, 32
	046 And X23, X23, 0x7FFFFFFF
	047 Call F16C.FloatToHalf, X0, X1
	048 Move W19, W0
	049 Move W0, W23
	050 Move W1, W21
	051 Call F16C.FloatToHalf, X0, X1
	052 And X9, X22, 0xFFFF
	053 And W8, W19, 0xFFFF
	054 NotImplemented "Instruction BFM not yet implemented."
	055 NotImplemented "Instruction BFM not yet implemented."
	056 NotImplemented "Instruction BFM not yet implemented."
	057 Move X0, X20
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_cvtps_ph(Unity.Burst.Intrinsics.v256 a, System.Int32 rounding)

Disassembly:
	0x0372A88C BL 0x1C16CF4
	0x0372A890 MOVZ W8, 0x1
	0x0372A894 STRB W8, [X22 + 0xC82]
	0x0372A898 LDR X0, [X21]
	0x0372A89C LDR W8, [X0 + 0xE0]
	0x0372A8A0 CBNZ W8, 0x372A8A8
	0x0372A8A4 BL 0x1C16DFC
	0x0372A8A8 FMOV S0, W20
	0x0372A8AC AND X8, X20, 0x0
	0x0372A8B0 MOV X1, X19
	0x0372A8B4 LDP X20, X19, [X31 + 0x20]
	0x0372A8B8 LDP X22, X21, [X31 + 0x10]
	0x0372A8BC FSQRT S0, S0
	0x0372A8C0 FMOV W9, S0
	0x0372A8C4 ORR X0, X8, X9, 0x0
	0x0372A8C8 LDR X30, [X31], #0x30
	0x0372A8CC RET
	0x0372A8D0 FMOV S0, W0
	0x0372A8D4 FMOV S1, 1
	0x0372A8D8 FDIV S0, S1, S0
	0x0372A8DC AND X8, X0, 0x0
	0x0372A8E0 FMOV W9, S0
	0x0372A8E4 ORR X0, X8, X9, 0x0
	0x0372A8E8 RET
	0x0372A8EC STR X30, [X31 - 0x30]!
	0x0372A8F0 STP X22, X21, [X31 + 0x10]
	0x0372A8F4 STP X20, X19, [X31 + 0x20]
	0x0372A8F8 ADRP X22, 0xCB6000
	0x0372A8FC ADRP X21, 0x9C9000
	0x0372A900 LDRB W8, [X22 + 0xC84]
	0x0372A904 LDR X21, [X21 + 0x5A8]
	0x0372A908 MOV X19, X1
	0x0372A90C MOV X20, X0
	0x0372A910 TBNZ X8, 0x0, 0x372A928
	0x0372A914 ADRP X0, 0x9C9000
	0x0372A918 LDR X0, [X0 + 0x5A8]
	0x0372A91C BL 0x1C16CF4
	0x0372A920 MOVZ W8, 0x1
	0x0372A924 STRB W8, [X22 + 0xC84]
	0x0372A928 LDR X0, [X21]
	0x0372A92C LDR W8, [X0 + 0xE0]
	0x0372A930 CBNZ W8, 0x372A938
	0x0372A934 BL 0x1C16DFC
	0x0372A938 FMOV S0, W20
	0x0372A93C FSQRT S0, S0
	0x0372A940 FMOV S1, 1
	0x0372A944 AND X8, X20, 0x0
	0x0372A948 MOV X1, X19
	0x0372A94C LDP X20, X19, [X31 + 0x20]
	0x0372A950 LDP X22, X21, [X31 + 0x10]
	0x0372A954 FDIV S0, S1, S0
	0x0372A958 FMOV W9, S0
	0x0372A95C ORR X0, X8, X9, 0x0
	0x0372A960 LDR X30, [X31], #0x30
	0x0372A964 RET
	0x0372A968 STP X30, X23, [X31 - 0x30]!
	0x0372A96C STP X22, X21, [X31 + 0x10]
	0x0372A970 STP X20, X19, [X31 + 0x20]
	0x0372A974 ADRP X23, 0xCB6000
	0x0372A978 ADRP X22, 0x9C9000
	0x0372A97C LDRB W8, [X23 + 0xC86]
	0x0372A980 LDR X22, [X22 + 0x5A8]
	0x0372A984 MOV X20, X2
	0x0372A988 MOV X19, X1
	0x0372A98C MOV X21, X0
	0x0372A990 TBNZ X8, 0x0, 0x372A9A8
	0x0372A994 ADRP X0, 0x9C9000
	0x0372A998 LDR X0, [X0 + 0x5A8]
	0x0372A99C BL 0x1C16CF4
	0x0372A9A0 MOVZ W8, 0x1
	0x0372A9A4 STRB W8, [X23 + 0xC86]
	0x0372A9A8 LDR X0, [X22]
	0x0372A9AC LDR W8, [X0 + 0xE0]
	0x0372A9B0 CBNZ W8, 0x372A9B8
	0x0372A9B4 BL 0x1C16DFC
	0x0372A9B8 FMOV S0, W21
	0x0372A9BC FMOV S1, W20
	0x0372A9C0 MOV X0, X31
	0x0372A9C4 AND X21, X21, 0x0
	0x0372A9C8 BL 0x337EEBC
	0x0372A9CC FMOV W8, S0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xCB7000
	011 Move X21, 0xA1B000
	012 Move W8, [X22+3199]
	013 Move X21, [X21+3160]
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA1B000
	021 Move X0, [X0+3160]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3199], W8
	025 Move X0, [X21]
	026 Move W22, [X19]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W9, 8
	029 Move W8, [X0+224]
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W0, W22
	035 Move W1, W21
	036 Call F16C.FloatToHalf, X0, X1
	037 Move W8, [X19+4]
	038 Move W20, W0
	039 Move W1, W21
	040 Move W0, W8
	041 Call F16C.FloatToHalf, X0, X1
	042 Move W8, [X19+8]
	043 Move W22, W0
	044 Move W1, W21
	045 Move W0, W8
	046 Call F16C.FloatToHalf, X0, X1
	047 Move W8, [X19+12]
	048 Move W23, W0
	049 Move W1, W21
	050 Move W0, W8
	051 Call F16C.FloatToHalf, X0, X1
	052 Move W8, [X19+16]
	053 Move W24, W0
	054 Move W1, W21
	055 Move W0, W8
	056 Call F16C.FloatToHalf, X0, X1
	057 Move W8, [X19+20]
	058 Move W25, W0
	059 Move W1, W21
	060 Move W0, W8
	061 Call F16C.FloatToHalf, X0, X1
	062 Move W8, [X19+24]
	063 Move W26, W0
	064 Move W1, W21
	065 Move W0, W8
	066 Call F16C.FloatToHalf, X0, X1
	067 Move W8, [X19+28]
	068 Move W19, W0
	069 Move W1, W21
	070 Move W0, W8
	071 Call F16C.FloatToHalf, X0, X1
	072 And X8, X26, 0xFFFF
	073 And X11, X22, 0xFFFF
	074 And W9, W19, 0xFFFF
	075 And W10, W23, 0xFFFF
	076 NotImplemented "Instruction BFM not yet implemented."
	077 NotImplemented "Instruction BFM not yet implemented."
	078 NotImplemented "Instruction BFM not yet implemented."
	079 NotImplemented "Instruction BFM not yet implemented."
	080 NotImplemented "Instruction BFM not yet implemented."
	081 NotImplemented "Instruction BFM not yet implemented."
	082 Move X0, X20
	083 Move X1, X25
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move X30, [X31+80]
	093 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0372A9D0 ORR X0, X21, X8, 0x0
	0x0372A9D4 MOV X1, X19
	0x0372A9D8 LDP X20, X19, [X31 + 0x20]
	0x0372A9DC LDP X22, X21, [X31 + 0x10]
	0x0372A9E0 LDP X30, X23, [X31], #0x30
	0x0372A9E4 RET
	0x0372A9E8 STP X30, X23, [X31 - 0x30]!
	0x0372A9EC STP X22, X21, [X31 + 0x10]
	0x0372A9F0 STP X20, X19, [X31 + 0x20]
	0x0372A9F4 ADRP X23, 0xCB6000
	0x0372A9F8 ADRP X22, 0x9C9000
	0x0372A9FC LDRB W8, [X23 + 0xC88]
	0x0372AA00 LDR X22, [X22 + 0x5A8]
	0x0372AA04 MOV X20, X2
	0x0372AA08 MOV X19, X1
	0x0372AA0C MOV X21, X0
	0x0372AA10 TBNZ X8, 0x0, 0x372AA28
	0x0372AA14 ADRP X0, 0x9C9000
	0x0372AA18 LDR X0, [X0 + 0x5A8]
	0x0372AA1C BL 0x1C16CF4
	0x0372AA20 MOVZ W8, 0x1
	0x0372AA24 STRB W8, [X23 + 0xC88]
	0x0372AA28 LDR X0, [X22]
	0x0372AA2C LDR W8, [X0 + 0xE0]
	0x0372AA30 CBNZ W8, 0x372AA38
	0x0372AA34 BL 0x1C16DFC
	0x0372AA38 FMOV S0, W21
	0x0372AA3C FMOV S1, W20
	0x0372AA40 MOV X0, X31
	0x0372AA44 AND X21, X21, 0x0
	0x0372AA48 BL 0x337EE18
	0x0372AA4C FMOV W8, S0
	0x0372AA50 ORR X0, X21, X8, 0x0
	0x0372AA54 MOV X1, X19
	0x0372AA58 LDP X20, X19, [X31 + 0x20]
	0x0372AA5C LDP X22, X21, [X31 + 0x10]
	0x0372AA60 LDP X30, X23, [X31], #0x30
	0x0372AA64 RET
	0x0372AA68 FMOV S0, W2
	0x0372AA6C FMOV S1, W0
	0x0372AA70 FCMP S1, S0
	0x0372AA74 MOVN W9, 0x0
	0x0372AA78 AND X8, X0, 0x0
	0x0372AA7C CSEL X9, X9, X31, EQ
	0x0372AA80 ORR X0, X9, X8, 0x0
	0x0372AA84 RET
	0x0372AA88 FMOV S0, W2
	0x0372AA8C FMOV S1, W0
	0x0372AA90 FCMP S1, S0
	0x0372AA94 MOVN W9, 0x0
	0x0372AA98 AND X8, X0, 0x0
	0x0372AA9C CSEL X9, X9, X31, MI
	0x0372AAA0 ORR X0, X9, X8, 0x0
	0x0372AAA4 RET
	0x0372AAA8 FMOV S0, W2
	0x0372AAAC FMOV S1, W0
	0x0372AAB0 FCMP S1, S0
	0x0372AAB4 MOVN W9, 0x0
	0x0372AAB8 AND X8, X0, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xCB7000
	009 Move X24, 0x9FA000
	010 Move X19, 0xA1B000
	011 Move X20, 0xA1B000
	012 Move X22, 0x9F9000
	013 Move X21, 0xA1B000
	014 Move W8, [X23+3200]
	015 Move X24, [X24+2256]
	016 Move X19, [X19+3168]
	017 Move X20, [X20+3160]
	018 Move X22, [X22+1800]
	019 Move X21, [X21+3176]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xA1B000
	025 Move X0, [X0+3160]
	026 Call 0x1C17CF4
	027 Move X0, 0x9F9000
	028 Move X0, [X0+1800]
	029 Call 0x1C17CF4
	030 Move X0, 0xA1B000
	031 Move X0, [X0+3168]
	032 Call 0x1C17CF4
	033 Move X0, 0xA1B000
	034 Move X0, [X0+3176]
	035 Call 0x1C17CF4
	036 Move X0, 0x9FA000
	037 Move X0, [X0+2256]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3200], W8
	041 Move X0, [X24]
	042 Move W1, 512
	043 Call 0x1C17D6C
	044 Move X1, [X19]
	045 Move X2, X31
	046 Move X19, X0
	047 Call RuntimeHelpers.InitializeArray, X0, X1
	048 Move X8, [X20]
	049 Move W1, 512
	050 Move X8, [X8+184]
	051 Move [X8], X19
	052 Move X0, [X22]
	053 Call 0x1C17D6C
	054 Move X1, [X21]
	055 Move X2, X31
	056 Move X19, X0
	057 Call RuntimeHelpers.InitializeArray, X0, X1
	058 Move X8, [X20]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X8, [X8+184]
	064 Move [X8+8], X19
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X30, [X31+64]
	068 Return 

