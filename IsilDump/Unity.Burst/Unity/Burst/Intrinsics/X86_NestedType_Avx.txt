Type: Unity.Burst.Intrinsics.X86/Avx

Method: System.Boolean get_IsAvxSupported()

Disassembly:
	0x037219AC MOV X3, X19
	0x037219B0 MOV X4, X31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_add_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037219B4 BL 0x372E364
	0x037219B8 B 0x3721AFC
	0x037219BC MOV X0, X22
	0x037219C0 MOV X1, X21
	0x037219C4 MOV X2, X20
	0x037219C8 MOV X3, X19
	0x037219CC MOV X4, X31
	0x037219D0 BL 0x372E1F0
	0x037219D4 B 0x3721AFC
	0x037219D8 MOV X0, X22
	0x037219DC MOV X1, X21
	0x037219E0 MOV X2, X20
	0x037219E4 MOV X3, X19
	0x037219E8 MOV X4, X31
	0x037219EC BL 0x372E1CC
	0x037219F0 B 0x3721AFC
	0x037219F4 MOVN X1, 0x0
	0x037219F8 MOV X8, INVALID
	0x037219FC MOVN W0, 0x0
	0x03721A00 B 0x3721BA8
	0x03721A04 MOV X0, X22
	0x03721A08 MOV X1, X21
	0x03721A0C MOV X2, X20
	0x03721A10 MOV X3, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.add_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.add_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_add_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721A14 MOV X4, X31
	0x03721A18 BL 0x372E3F4
	0x03721A1C B 0x3721B6C
	0x03721A20 MOV X0, X22
	0x03721A24 MOV X1, X21
	0x03721A28 MOV X2, X20
	0x03721A2C MOV X3, X19
	0x03721A30 MOV X4, X31
	0x03721A34 BL 0x372E160
	0x03721A38 B 0x3721BA4
	0x03721A3C MOV X0, X22
	0x03721A40 MOV X1, X21
	0x03721A44 MOV X2, X20
	0x03721A48 MOV X3, X19
	0x03721A4C MOV X4, X31
	0x03721A50 BL 0x372E184
	0x03721A54 B 0x3721BA4
	0x03721A58 MOV X0, X22
	0x03721A5C MOV X1, X21
	0x03721A60 MOV X2, X20
	0x03721A64 MOV X3, X19
	0x03721A68 MOV X4, X31

ISIL:
	001 Move V0, [X1]
	002 Move V3, [X1+16]
	003 Move V1, [X0]
	004 Move V2, [X0+16]
	005 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	006 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	007 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	008 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	009 Add V4, V5, V4
	010 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	011 Add V0, V1, V0
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 Add V1, V1, V5
	016 Add V2, V2, V3
	017 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	018 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	019 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	020 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	021 Or V0, V0, V3
	022 Or V1, V2, V1
	023 Move [X8], V0
	024 Move [X8+8], V1
	025 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_addsub_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721AB4 MOV X2, X20
	0x03721AB8 MOV X3, X19
	0x03721ABC MOV X4, X31
	0x03721AC0 BL 0x372E160
	0x03721AC4 B 0x3721AFC
	0x03721AC8 MOV X0, X22
	0x03721ACC MOV X1, X21
	0x03721AD0 MOV X2, X20
	0x03721AD4 MOV X3, X19
	0x03721AD8 MOV X4, X31
	0x03721ADC BL 0x372E184
	0x03721AE0 B 0x3721AFC
	0x03721AE4 MOV X0, X22
	0x03721AE8 MOV X1, X21
	0x03721AEC MOV X2, X20
	0x03721AF0 MOV X3, X19
	0x03721AF4 MOV X4, X31
	0x03721AF8 BL 0x372E1A8
	0x03721AFC MOV X23, X0
	0x03721B00 MOV X24, X1
	0x03721B04 MOV X0, X22
	0x03721B08 MOV X1, X21
	0x03721B0C MOV X2, X20
	0x03721B10 MOV X3, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse3.addsub_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse3.addsub_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_addsub_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721B14 MOV X4, X31
	0x03721B18 BL 0x372E214
	0x03721B1C MOV X2, X0
	0x03721B20 MOV X3, X1
	0x03721B24 MOV X0, X23
	0x03721B28 MOV X1, X24
	0x03721B2C MOV X4, X31
	0x03721B30 BL 0x372DFC8
	0x03721B34 B 0x3721BA4
	0x03721B38 MOV X0, X22
	0x03721B3C MOV X1, X21
	0x03721B40 MOV X2, X20
	0x03721B44 MOV X3, X19
	0x03721B48 MOV X4, X31
	0x03721B4C BL 0x372E388
	0x03721B50 B 0x3721B6C
	0x03721B54 MOV X0, X22
	0x03721B58 MOV X1, X21
	0x03721B5C MOV X2, X20
	0x03721B60 MOV X3, X19
	0x03721B64 MOV X4, X31
	0x03721B68 BL 0x372E3AC
	0x03721B6C MOV X23, X0
	0x03721B70 MOV X24, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse3.addsub_ps, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse3.addsub_ps, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_and_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721B74 MOV X0, X22
	0x03721B78 MOV X1, X21
	0x03721B7C MOV X2, X20
	0x03721B80 MOV X3, X19
	0x03721B84 MOV X4, X31
	0x03721B88 BL 0x372E2C0
	0x03721B8C MOV X2, X0
	0x03721B90 MOV X3, X1
	0x03721B94 MOV X0, X23
	0x03721B98 MOV X1, X24
	0x03721B9C MOV X4, X31
	0x03721BA0 BL 0x372DFE0
	0x03721BA4 AND X8, X0, 0x0
	0x03721BA8 LDP X20, X19, [X31 + 0x30]
	0x03721BAC LDP X22, X21, [X31 + 0x20]
	0x03721BB0 LDP X24, X23, [X31 + 0x10]
	0x03721BB4 AND X9, X0, 0x0
	0x03721BB8 ORR X0, X8, X9, 0x0
	0x03721BBC LDR X30, [X31], #0x40
	0x03721BC0 RET
	0x03721BC4 STP X30, X23, [X31 - 0x30]!
	0x03721BC8 STP X22, X21, [X31 + 0x10]
	0x03721BCC STP X20, X19, [X31 + 0x20]
	0x03721BD0 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.and_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.and_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_and_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721BD4 MOV X21, X0
	0x03721BD8 MOV W19, W2
	0x03721BDC LDR X0, [X0]
	0x03721BE0 LDR X1, [X21 + 0x8]
	0x03721BE4 LDP X2, X3, [X20]
	0x03721BE8 MOV W4, W19

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, [X1]
	004 Move V3, [X1+16]
	005 And V0, V2, V0
	006 And V1, V3, V1
	007 Move [X8], V0
	008 Move [X8+8], V1
	009 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_andnot_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721BF8 LDP X0, X8, [X21 + 0x10]
	0x03721BFC LDP X2, X3, [X20 + 0x10]
	0x03721C00 MOV X20, X1
	0x03721C04 MOV W4, W19
	0x03721C08 MOV X1, X8
	0x03721C0C BL 0x37218C4
	0x03721C10 STP X23, X20, [X22]
	0x03721C14 STP X0, X1, [X22 + 0x10]
	0x03721C18 LDP X20, X19, [X31 + 0x20]
	0x03721C1C LDP X22, X21, [X31 + 0x10]
	0x03721C20 LDP X30, X23, [X31], #0x30
	0x03721C24 RET
	0x03721C28 STR X30, [X31 - 0x40]!
	0x03721C2C STP X24, X23, [X31 + 0x10]
	0x03721C30 STP X22, X21, [X31 + 0x20]
	0x03721C34 STP X20, X19, [X31 + 0x30]
	0x03721C38 AND W9, W4, 0x1F
	0x03721C3C CMP W9, 0x1E
	0x03721C40 B.HI 0x3721D2C
	0x03721C44 ADRP X10, 0xFFFFFFFFFD476000
	0x03721C48 ADD X10, X10, 0x84A
	0x03721C4C ADR X11, 0x2C
	0x03721C50 LDRB W12, [X10, X9, LSL]
	0x03721C54 ADD X11, X11, X12, 0x2, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.andnot_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.andnot_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_andnot_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721C58 MOV X19, X3
	0x03721C5C MOV X20, X2
	0x03721C60 MOV X21, X1
	0x03721C64 MOV X22, X0
	0x03721C68 MOV X0, X31
	0x03721C6C MOV X8, X31

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, [X1]
	004 Move V3, [X1+16]
	005 NotImplemented "Instruction BIC not yet implemented."
	006 NotImplemented "Instruction BIC not yet implemented."
	007 Move [X8], V0
	008 Move [X8+8], V1
	009 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_blend_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x03721C7C MOV X1, X21
	0x03721C80 MOV X2, X20
	0x03721C84 MOV X3, X19
	0x03721C88 BL 0x3721FE8
	0x03721C8C B 0x3721E84
	0x03721C90 MOV X0, X22
	0x03721C94 MOV X1, X21
	0x03721C98 MOV X2, X20
	0x03721C9C MOV X3, X19
	0x03721CA0 BL 0x3722048
	0x03721CA4 B 0x3721E84
	0x03721CA8 MOV X0, X22
	0x03721CAC MOV X1, X21
	0x03721CB0 MOV X2, X20
	0x03721CB4 MOV X3, X19
	0x03721CB8 BL 0x372218C
	0x03721CBC B 0x3721E84
	0x03721CC0 MOV X0, X22
	0x03721CC4 MOV X1, X21
	0x03721CC8 MOV X2, X20
	0x03721CCC MOV X3, X19
	0x03721CD0 BL 0x3721EA4
	0x03721CD4 B 0x3721E60
	0x03721CD8 MOV X0, X20
	0x03721CDC MOV X1, X19
	0x03721CE0 MOV X2, X22
	0x03721CE4 MOV X3, X21
	0x03721CE8 B 0x3721E44

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X1
	009 Move X21, X0
	010 Move W19, W2
	011 Move X0, [X0]
	012 Move X1, [X21+8]
	013 Move X2, [X20]
	014 Move X3, [X20+8]
	015 And W4, W19, 3
	016 Move X5, X31
	017 Move X22, X8
	018 Call Sse4_1.blend_pd, X0, X1, X2
	019 Move X23, X0
	020 Move X24, X1
	021 Move X0, [X21+16]
	022 Move X1, [X21+24]
	023 Move X2, [X20+16]
	024 Move X3, [X20+24]
	025 NotImplemented "Instruction SBFM not yet implemented."
	026 Move X5, X31
	027 Call Sse4_1.blend_pd, X0, X1, X2
	028 Move [X22], X23
	029 Move [X22+8], X24
	030 Move [X22+16], X0
	031 Move [X22+24], X1
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X22, [X31+32]
	035 Move X21, [X31+40]
	036 Move X24, [X31+16]
	037 Move X23, [X31+24]
	038 Move X30, [X31+64]
	039 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_blend_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x03721CEC MOV X0, X22
	0x03721CF0 MOV X1, X21
	0x03721CF4 MOV X2, X20
	0x03721CF8 MOV X3, X19
	0x03721CFC BL 0x3722048
	0x03721D00 B 0x3721E0C
	0x03721D04 MOV X0, X20
	0x03721D08 MOV X1, X19
	0x03721D0C MOV X2, X22
	0x03721D10 MOV X3, X21
	0x03721D14 B 0x3721E08
	0x03721D18 MOV X0, X20
	0x03721D1C MOV X1, X19
	0x03721D20 MOV X2, X22
	0x03721D24 MOV X3, X21
	0x03721D28 B 0x3721DF0
	0x03721D2C MOVN X1, 0x0
	0x03721D30 MOV X8, INVALID
	0x03721D34 MOVN W0, 0x0
	0x03721D38 B 0x3721E88
	0x03721D3C MOV X0, X20
	0x03721D40 MOV X1, X19
	0x03721D44 MOV X2, X22
	0x03721D48 MOV X3, X21
	0x03721D4C B 0x3721E5C
	0x03721D50 MOV X0, X22
	0x03721D54 MOV X1, X21
	0x03721D58 MOV X2, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X1
	009 Move X21, X0
	010 Move W19, W2
	011 Move X0, [X0]
	012 Move X1, [X21+8]
	013 Move X2, [X20]
	014 Move X3, [X20+8]
	015 And W4, W19, 15
	016 Move X5, X31
	017 Move X22, X8
	018 Call Sse4_1.blend_ps, X0, X1, X2
	019 Move X23, X0
	020 Move X24, X1
	021 Move X0, [X21+16]
	022 Move X1, [X21+24]
	023 Move X2, [X20+16]
	024 Move X3, [X20+24]
	025 NotImplemented "Instruction SBFM not yet implemented."
	026 Move X5, X31
	027 Call Sse4_1.blend_ps, X0, X1, X2
	028 Move [X22], X23
	029 Move [X22+8], X24
	030 Move [X22+16], X0
	031 Move [X22+24], X1
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X22, [X31+32]
	035 Move X21, [X31+40]
	036 Move X24, [X31+16]
	037 Move X23, [X31+24]
	038 Move X30, [X31+64]
	039 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_blendv_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, Unity.Burst.Intrinsics.v256 mask)

Disassembly:
	0x03721D5C MOV X3, X19
	0x03721D60 BL 0x3721EA4
	0x03721D64 B 0x3721E84
	0x03721D68 MOV X0, X22
	0x03721D6C MOV X1, X21
	0x03721D70 MOV X2, X20
	0x03721D74 MOV X3, X19
	0x03721D78 BL 0x3721F10
	0x03721D7C B 0x3721E84
	0x03721D80 MOV X0, X22
	0x03721D84 MOV X1, X21
	0x03721D88 MOV X2, X20
	0x03721D8C MOV X3, X19
	0x03721D90 BL 0x3721F7C
	0x03721D94 B 0x3721E84
	0x03721D98 MOV X0, X22
	0x03721D9C MOV X1, X21
	0x03721DA0 MOV X2, X20
	0x03721DA4 MOV X3, X19
	0x03721DA8 BL 0x37220B4
	0x03721DAC B 0x3721E84
	0x03721DB0 MOV X0, X22
	0x03721DB4 MOV X1, X21
	0x03721DB8 MOV X2, X20
	0x03721DBC MOV X3, X19
	0x03721DC0 BL 0x3722120
	0x03721DC4 B 0x3721E84

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Move X0, [X0]
	011 Move X1, [X21+8]
	012 Move X2, [X20]
	013 Move X3, [X20+8]
	014 Move X4, [X19]
	015 Move X5, [X19+8]
	016 Move X6, X31
	017 Move X22, X8
	018 Call Sse4_1.blendv_pd, X0, X1, X2
	019 Move X23, X0
	020 Move X0, [X21+16]
	021 Move X8, [X21+24]
	022 Move X2, [X20+16]
	023 Move X3, [X20+24]
	024 Move X4, [X19+16]
	025 Move X5, [X19+24]
	026 Move X19, X1
	027 Move X1, X8
	028 Move X6, X31
	029 Call Sse4_1.blendv_pd, X0, X1, X2
	030 Move [X22], X23
	031 Move [X22+8], X19
	032 Move [X22+16], X0
	033 Move [X22+24], X1
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_blendv_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, Unity.Burst.Intrinsics.v256 mask)

Disassembly:
	0x03721DC8 MOV X0, X22
	0x03721DCC MOV X1, X21
	0x03721DD0 MOV X2, X20
	0x03721DD4 MOV X3, X19
	0x03721DD8 BL 0x3721EA4
	0x03721DDC B 0x3721E0C
	0x03721DE0 MOV X0, X22
	0x03721DE4 MOV X1, X21
	0x03721DE8 MOV X2, X20
	0x03721DEC MOV X3, X19
	0x03721DF0 BL 0x3721F10
	0x03721DF4 B 0x3721E0C
	0x03721DF8 MOV X0, X22
	0x03721DFC MOV X1, X21
	0x03721E00 MOV X2, X20
	0x03721E04 MOV X3, X19
	0x03721E08 BL 0x3721F7C
	0x03721E0C MOV X23, X0
	0x03721E10 MOV X24, X1
	0x03721E14 MOV X0, X22
	0x03721E18 MOV X1, X21
	0x03721E1C MOV X2, X20
	0x03721E20 MOV X3, X19
	0x03721E24 BL 0x372218C
	0x03721E28 AND X0, X0, X23, 0x0
	0x03721E2C AND X1, X1, X24, 0x0
	0x03721E30 B 0x3721E84

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Move X0, [X0]
	011 Move X1, [X21+8]
	012 Move X2, [X20]
	013 Move X3, [X20+8]
	014 Move X4, [X19]
	015 Move X5, [X19+8]
	016 Move X6, X31
	017 Move X22, X8
	018 Call Sse4_1.blendv_ps, X0, X1, X2
	019 Move X23, X0
	020 Move X0, [X21+16]
	021 Move X8, [X21+24]
	022 Move X2, [X20+16]
	023 Move X3, [X20+24]
	024 Move X4, [X19+16]
	025 Move X5, [X19+24]
	026 Move X19, X1
	027 Move X1, X8
	028 Move X6, X31
	029 Call Sse4_1.blendv_ps, X0, X1, X2
	030 Move [X22], X23
	031 Move [X22+8], X19
	032 Move [X22+16], X0
	033 Move [X22+24], X1
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_div_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721E34 MOV X0, X22
	0x03721E38 MOV X1, X21
	0x03721E3C MOV X2, X20
	0x03721E40 MOV X3, X19
	0x03721E44 BL 0x37220B4
	0x03721E48 B 0x3721E60
	0x03721E4C MOV X0, X22
	0x03721E50 MOV X1, X21
	0x03721E54 MOV X2, X20
	0x03721E58 MOV X3, X19
	0x03721E5C BL 0x3722120
	0x03721E60 MOV X23, X0
	0x03721E64 MOV X24, X1
	0x03721E68 MOV X0, X22
	0x03721E6C MOV X1, X21
	0x03721E70 MOV X2, X20
	0x03721E74 MOV X3, X19
	0x03721E78 BL 0x3721FE8
	0x03721E7C ORR X0, X0, X23, 0x0
	0x03721E80 ORR X1, X1, X24, 0x0
	0x03721E84 AND X8, X0, 0x0
	0x03721E88 LDP X20, X19, [X31 + 0x30]
	0x03721E8C LDP X22, X21, [X31 + 0x20]
	0x03721E90 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.div_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.div_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_div_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721E94 AND X9, X0, 0x0
	0x03721E98 ORR X0, X8, X9, 0x0
	0x03721E9C LDR X30, [X31], #0x40
	0x03721EA0 RET
	0x03721EA4 SUB X31, X31, 0x10
	0x03721EA8 UBFM X8, X0, 0x20, 0x3F
	0x03721EAC UBFM X10, X2, 0x20, 0x3F
	0x03721EB0 FMOV S2, W1
	0x03721EB4 FMOV S3, W3
	0x03721EB8 FCMP S2, S3
	0x03721EBC FMOV S2, W8
	0x03721EC0 FMOV S3, W10
	0x03721EC4 UBFM X9, X1, 0x20, 0x3F
	0x03721EC8 UBFM X11, X3, 0x20, 0x3F
	0x03721ECC FMOV S0, W0
	0x03721ED0 FMOV S1, W2
	0x03721ED4 CSINV W8, W31, W31, NE
	0x03721ED8 FCMP S2, S3
	0x03721EDC MOVN W12, 0x0
	0x03721EE0 FMOV S4, W9
	0x03721EE4 FMOV S5, W11
	0x03721EE8 CSINV X9, X31, X31, NE

ISIL:
	001 Move V0, [X1]
	002 Move V3, [X1+16]
	003 Move V1, [X0]
	004 Move V2, [X0+16]
	005 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	006 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	007 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	008 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 NotImplemented "Instruction INVALID not yet implemented."
	016 NotImplemented "Instruction INVALID not yet implemented."
	017 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	018 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	019 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	020 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	021 Or V0, V0, V3
	022 Or V1, V2, V1
	023 Move [X8], V0
	024 Move [X8+8], V1
	025 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_dp_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x03721F34 UBFM X11, X3, 0x20, 0x3F
	0x03721F38 FMOV S0, W0
	0x03721F3C FMOV S1, W2
	0x03721F40 CSINV W8, W31, W31, PL
	0x03721F44 FCMP S2, S3
	0x03721F48 MOVN W12, 0x0
	0x03721F4C FMOV S4, W9
	0x03721F50 FMOV S5, W11
	0x03721F54 CSINV X9, X31, X31, PL
	0x03721F58 FCMP S0, S1
	0x03721F5C MOV X13, INVALID
	0x03721F60 CSEL X0, X12, X31, MI
	0x03721F64 FCMP S4, S5
	0x03721F68 BFM X0, X9, 0x20, 0x1F
	0x03721F6C CSEL X9, X13, X31, MI
	0x03721F70 ORR X1, X9, X8, 0x0
	0x03721F74 ADD X31, X31, 0x10
	0x03721F78 RET
	0x03721F7C SUB X31, X31, 0x10
	0x03721F80 UBFM X8, X0, 0x20, 0x3F
	0x03721F84 UBFM X10, X2, 0x20, 0x3F
	0x03721F88 FMOV S2, W1
	0x03721F8C FMOV S3, W3
	0x03721F90 FCMP S2, S3
	0x03721F94 FMOV S2, W8
	0x03721F98 FMOV S3, W10
	0x03721F9C UBFM X9, X1, 0x20, 0x3F

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X1
	008 Move X21, X0
	009 Move W19, W2
	010 Move X0, [X0]
	011 Move X1, [X21+8]
	012 Move X2, [X20]
	013 Move X3, [X20+8]
	014 Move W4, W19
	015 Move X5, X31
	016 Move X22, X8
	017 Call Sse4_1.dp_ps, X0, X1, X2
	018 Move X23, X0
	019 Move X0, [X21+16]
	020 Move X8, [X21+24]
	021 Move X2, [X20+16]
	022 Move X3, [X20+24]
	023 Move X20, X1
	024 Move W4, W19
	025 Move X1, X8
	026 Move X5, X31
	027 Call Sse4_1.dp_ps, X0, X1, X2
	028 Move [X22], X23
	029 Move [X22+8], X20
	030 Move [X22+16], X0
	031 Move [X22+24], X1
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hadd_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03721FA0 UBFM X11, X3, 0x20, 0x3F
	0x03721FA4 FMOV S0, W0
	0x03721FA8 FMOV S1, W2
	0x03721FAC CSINV W8, W31, W31, HI
	0x03721FB0 FCMP S2, S3
	0x03721FB4 MOVN W12, 0x0
	0x03721FB8 FMOV S4, W9
	0x03721FBC FMOV S5, W11
	0x03721FC0 CSINV X9, X31, X31, HI
	0x03721FC4 FCMP S0, S1
	0x03721FC8 MOV X13, INVALID
	0x03721FCC CSEL X0, X12, X31, LS
	0x03721FD0 FCMP S4, S5
	0x03721FD4 BFM X0, X9, 0x20, 0x1F
	0x03721FD8 CSEL X9, X13, X31, LS
	0x03721FDC ORR X1, X9, X8, 0x0
	0x03721FE0 ADD X31, X31, 0x10
	0x03721FE4 RET
	0x03721FE8 ADRP X8, 0xFFFFFFFFFD3CA000
	0x03721FEC ADRP X9, 0xFFFFFFFFFD3CB000
	0x03721FF0 LDR V2, [X8]
	0x03721FF4 LDR V5, [X9 + 0xBE]
	0x03721FF8 UNIMPLEMENTED
	0x03721FFC UNIMPLEMENTED

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse3.hadd_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse3.hadd_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hadd_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03722000 UNIMPLEMENTED
	0x03722004 UNIMPLEMENTED
	0x03722008 AND V1.16B, V1.16B, V2.16B
	0x0372200C AND V4.16B, V4.16B, V2.16B
	0x03722010 AND V0.16B, V0.16B, V2.16B
	0x03722014 AND V2.16B, V3.16B, V2.16B
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x03722028 UNIMPLEMENTED
	0x0372202C UNIMPLEMENTED
	0x03722030 UNIMPLEMENTED
	0x03722034 UNIMPLEMENTED
	0x03722038 ORR V0.16B, V1.16B, V3.16B
	0x0372203C STR V0, [X31 - 0x10]!
	0x03722040 LDP X0, X1, [X31], #0x10
	0x03722044 RET
	0x03722048 SUB X31, X31, 0x10
	0x0372204C UBFM X8, X0, 0x20, 0x3F
	0x03722050 UBFM X10, X2, 0x20, 0x3F
	0x03722054 FMOV S2, W1
	0x03722058 FMOV S3, W3
	0x0372205C FCMP S2, S3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse3.hadd_ps, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse3.hadd_ps, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hsub_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03722060 FMOV S2, W8
	0x03722064 FMOV S3, W10
	0x03722068 UBFM X9, X1, 0x20, 0x3F
	0x0372206C UBFM X11, X3, 0x20, 0x3F
	0x03722070 FMOV S0, W0
	0x03722074 FMOV S1, W2
	0x03722078 CSINV W8, W31, W31, EQ
	0x0372207C FCMP S2, S3
	0x03722080 MOVN W12, 0x0
	0x03722084 FMOV S4, W9
	0x03722088 FMOV S5, W11
	0x0372208C CSINV X9, X31, X31, EQ
	0x03722090 FCMP S0, S1
	0x03722094 MOV X13, INVALID
	0x03722098 CSEL X0, X12, X31, NE
	0x0372209C FCMP S4, S5
	0x037220A0 BFM X0, X9, 0x20, 0x1F
	0x037220A4 CSEL X9, X13, X31, NE
	0x037220A8 ORR X1, X9, X8, 0x0
	0x037220AC ADD X31, X31, 0x10
	0x037220B0 RET
	0x037220B4 SUB X31, X31, 0x10
	0x037220B8 UBFM X8, X0, 0x20, 0x3F
	0x037220BC UBFM X10, X2, 0x20, 0x3F

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse3.hsub_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse3.hsub_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hsub_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037220C0 FMOV S2, W1
	0x037220C4 FMOV S3, W3
	0x037220C8 FCMP S2, S3
	0x037220CC FMOV S2, W8
	0x037220D0 FMOV S3, W10
	0x037220D4 UBFM X9, X1, 0x20, 0x3F
	0x037220D8 UBFM X11, X3, 0x20, 0x3F
	0x037220DC FMOV S0, W0
	0x037220E0 FMOV S1, W2
	0x037220E4 CSINV W8, W31, W31, MI
	0x037220E8 FCMP S2, S3
	0x037220EC MOVN W12, 0x0
	0x037220F0 FMOV S4, W9
	0x037220F4 FMOV S5, W11
	0x037220F8 CSINV X9, X31, X31, MI
	0x037220FC FCMP S0, S1
	0x03722100 MOV X13, INVALID
	0x03722104 CSEL X0, X12, X31, PL
	0x03722108 FCMP S4, S5
	0x0372210C BFM X0, X9, 0x20, 0x1F
	0x03722110 CSEL X9, X13, X31, PL
	0x03722114 ORR X1, X9, X8, 0x0
	0x03722118 ADD X31, X31, 0x10
	0x0372211C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse3.hsub_ps, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse3.hsub_ps, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_max_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03722120 SUB X31, X31, 0x10
	0x03722124 UBFM X8, X0, 0x20, 0x3F
	0x03722128 UBFM X10, X2, 0x20, 0x3F
	0x0372212C FMOV S2, W1
	0x03722130 FMOV S3, W3
	0x03722134 FCMP S2, S3
	0x03722138 FMOV S2, W8
	0x0372213C FMOV S3, W10
	0x03722140 UBFM X9, X1, 0x20, 0x3F
	0x03722144 UBFM X11, X3, 0x20, 0x3F
	0x03722148 FMOV S0, W0
	0x0372214C FMOV S1, W2
	0x03722150 CSINV W8, W31, W31, LS
	0x03722154 FCMP S2, S3
	0x03722158 MOVN W12, 0x0
	0x0372215C FMOV S4, W9
	0x03722160 FMOV S5, W11
	0x03722164 CSINV X9, X31, X31, LS
	0x03722168 FCMP S0, S1
	0x0372216C MOV X13, INVALID
	0x03722170 CSEL X0, X12, X31, HI
	0x03722174 FCMP S4, S5
	0x03722178 BFM X0, X9, 0x20, 0x1F
	0x0372217C CSEL X9, X13, X31, HI

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.max_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.max_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_max_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03722180 ORR X1, X9, X8, 0x0
	0x03722184 ADD X31, X31, 0x10
	0x03722188 RET
	0x0372218C ADRP X8, 0xFFFFFFFFFD3C9000
	0x03722190 ADRP X9, 0xFFFFFFFFFD3C8000
	0x03722194 LDR V2, [X8]
	0x03722198 LDR V5, [X9 + 0x66]
	0x0372219C UNIMPLEMENTED
	0x037221A0 UNIMPLEMENTED
	0x037221A4 UNIMPLEMENTED
	0x037221A8 UNIMPLEMENTED
	0x037221AC AND V1.16B, V1.16B, V2.16B
	0x037221B0 AND V4.16B, V4.16B, V2.16B
	0x037221B4 AND V0.16B, V0.16B, V2.16B
	0x037221B8 AND V2.16B, V3.16B, V2.16B
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x037221CC UNIMPLEMENTED
	0x037221D0 UNIMPLEMENTED
	0x037221D4 UNIMPLEMENTED

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X21, X8
	013 Call Sse.max_ps, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X2, [X19+16]
	018 Move X3, [X19+24]
	019 Move X19, X1
	020 Move X1, X8
	021 Call Sse.max_ps, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X19
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_min_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037222C8 BL 0x37218C4
	0x037222CC MOV X1, X19
	0x037222D0 LDP X30, X19, [X31], #0x10
	0x037222D4 RET
	0x037222D8 STR X30, [X31 - 0x20]!
	0x037222DC STP X20, X19, [X31 + 0x10]
	0x037222E0 MOV X19, X1
	0x037222E4 MOV X20, X0
	0x037222E8 BL 0x3721C28
	0x037222EC BFM X20, X0, 0x0, 0x1F
	0x037222F0 MOV X0, X20
	0x037222F4 MOV X1, X19
	0x037222F8 LDP X20, X19, [X31 + 0x10]
	0x037222FC LDR X30, [X31], #0x20
	0x03722300 RET
	0x03722304 UBFM X9, X0, 0x20, 0x3F
	0x03722308 UBFM X10, X1, 0x20, 0x3F
	0x0372230C SCVTF D0, W0
	0x03722310 SCVTF D1, W1
	0x03722314 SCVTF D2, W9
	0x03722318 SCVTF D3, W10
	0x0372231C STP D0, D2, [X8]
	0x03722320 STP D1, D3, [X8 + 0x10]
	0x03722324 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.min_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.min_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_min_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03722328 STP X30, X21, [X31 - 0x20]!
	0x0372232C STP X20, X19, [X31 + 0x10]
	0x03722330 MOV X19, X0
	0x03722334 LDR X0, [X0]
	0x03722338 LDR X1, [X19 + 0x8]
	0x0372233C MOV X2, X31
	0x03722340 MOV X20, X8
	0x03722344 BL 0x372D268
	0x03722348 MOV X21, X0
	0x0372234C LDP X0, X8, [X19 + 0x10]
	0x03722350 MOV X19, X1
	0x03722354 MOV X2, X31
	0x03722358 MOV X1, X8
	0x0372235C BL 0x372D268
	0x03722360 STP X21, X19, [X20]
	0x03722364 STP X0, X1, [X20 + 0x10]
	0x03722368 LDP X20, X19, [X31 + 0x10]
	0x0372236C LDP X30, X21, [X31], #0x20
	0x03722370 RET
	0x03722374 STP X30, X19, [X31 - 0x10]!
	0x03722378 MOV X19, X0
	0x0372237C LDR X0, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X21, X8
	013 Call Sse.min_ps, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X2, [X19+16]
	018 Move X3, [X19+24]
	019 Move X19, X1
	020 Move X1, X8
	021 Call Sse.min_ps, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X19
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mul_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03722470 STP X30, X19, [X31 - 0x10]!
	0x03722474 MOV X19, X0
	0x03722478 LDR X0, [X0]
	0x0372247C LDR X1, [X19 + 0x8]
	0x03722480 MOV X2, X31
	0x03722484 BL 0x372E54C
	0x03722488 LDP X8, X1, [X19 + 0x10]
	0x0372248C MOV X19, X0
	0x03722490 MOV X2, X31
	0x03722494 MOV X0, X8
	0x03722498 BL 0x372E54C
	0x0372249C MOV X1, X0
	0x037224A0 MOV X0, X19
	0x037224A4 LDP X30, X19, [X31], #0x10
	0x037224A8 RET
	0x037224AC STP X30, X21, [X31 - 0x20]!
	0x037224B0 STP X20, X19, [X31 + 0x10]
	0x037224B4 MOV X19, X0
	0x037224B8 LDR X0, [X0]
	0x037224BC LDR X1, [X19 + 0x8]
	0x037224C0 MOV X2, X31
	0x037224C4 MOV X20, X8
	0x037224C8 BL 0x372EBE8
	0x037224CC MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.mul_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.mul_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mul_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037224D0 LDP X0, X8, [X19 + 0x10]
	0x037224D4 MOV X19, X1
	0x037224D8 MOV X2, X31
	0x037224DC MOV X1, X8
	0x037224E0 BL 0x372EBE8
	0x037224E4 STP X21, X19, [X20]
	0x037224E8 STP X0, X1, [X20 + 0x10]
	0x037224EC LDP X20, X19, [X31 + 0x10]
	0x037224F0 LDP X30, X21, [X31], #0x20
	0x037224F4 RET
	0x037224F8 LDR V0, [X0]
	0x037224FC RET
	0x03722500 CMP W1, 0x0
	0x03722504 MOVZ W8, 0x18
	0x03722508 MOVZ W9, 0x8
	0x0372250C CSET W10, NE
	0x03722510 CSEL X8, X9, X8, EQ
	0x03722514 UBFM X9, X10, 0x3C, 0x3B
	0x03722518 LDR X1, [X0, X8, LSL]
	0x0372251C LDR X0, [X0, X9, LSL]
	0x03722520 RET
	0x03722524 CMP W1, 0x0

ISIL:
	001 Move V0, [X1]
	002 Move V3, [X1+16]
	003 Move V1, [X0]
	004 Move V2, [X0+16]
	005 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	006 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	007 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	008 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 NotImplemented "Instruction INVALID not yet implemented."
	016 NotImplemented "Instruction INVALID not yet implemented."
	017 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	018 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	019 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	020 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	021 Or V0, V0, V3
	022 Or V1, V2, V1
	023 Move [X8], V0
	024 Move [X8+8], V1
	025 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_or_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03722570 RET
	0x03722574 SUB X31, X31, 0x50
	0x03722578 STR X30, [X31 + 0x40]
	0x0372257C MRS X8, 0xC000
	0x03722580 LDR X10, [X8 + 0x28]
	0x03722584 MOV X9, X31
	0x03722588 ADD X11, X31, 0x28
	0x0372258C ADD X12, X31, 0x8
	0x03722590 STR X10, [X31 + 0x38]
	0x03722594 ADD X10, X31, 0x18
	0x03722598 STP X0, X1, [X31 + 0x28]
	0x0372259C STP X2, X3, [X31 + 0x18]
	0x037225A0 STP X31, X31, [X31 + 0x8]
	0x037225A4 LDR W13, [X10, X9, LSL]
	0x037225A8 UBFM W13, W13, 0x1E, 0x1D
	0x037225AC AND X13, X13, 0xF
	0x037225B0 LDR W13, [X13, X11, LSL]
	0x037225B4 STR W13, [X12, X9, LSL]
	0x037225B8 ADD X9, X9, 0x4
	0x037225BC CMP X9, 0x10
	0x037225C0 B.NE 0x37225A4
	0x037225C4 LDP X0, X1, [X31 + 0x8]
	0x037225C8 LDR X8, [X8 + 0x28]
	0x037225CC LDR X9, [X31 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.or_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.or_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_or_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037225D0 CMP X8, X9
	0x037225D4 B.NE 0x37225E4
	0x037225D8 LDR X30, [X31 + 0x40]
	0x037225DC ADD X31, X31, 0x50
	0x037225E0 RET
	0x037225E4 BL 0x3EB1B20

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, [X1]
	004 Move V3, [X1+16]
	005 Or V0, V2, V0
	006 Or V1, V3, V1
	007 Move [X8], V0
	008 Move [X8+8], V1
	009 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_shuffle_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x037225F4 MOV X19, X1
	0x037225F8 MOV X20, X0
	0x037225FC LDR X0, [X0]
	0x03722600 LDR X1, [X20 + 0x8]
	0x03722604 LDP X2, X3, [X19]
	0x03722608 MOV X21, X8
	0x0372260C BL 0x3722574
	0x03722610 MOV X22, X0
	0x03722614 LDP X0, X8, [X20 + 0x10]
	0x03722618 LDP X2, X3, [X19 + 0x10]
	0x0372261C MOV X19, X1
	0x03722620 MOV X1, X8
	0x03722624 BL 0x3722574
	0x03722628 STP X22, X19, [X21]
	0x0372262C STP X0, X1, [X21 + 0x10]
	0x03722630 LDP X20, X19, [X31 + 0x20]
	0x03722634 LDP X22, X21, [X31 + 0x10]
	0x03722638 LDR X30, [X31], #0x30
	0x0372263C RET
	0x03722640 MOV X3, X31
	0x03722644 B 0x372D828
	0x03722648 STR X30, [X31 - 0x30]!
	0x0372264C STP X22, X21, [X31 + 0x10]
	0x03722650 STP X20, X19, [X31 + 0x20]
	0x03722654 MOV X20, X0
	0x03722658 MOV W19, W1
	0x0372265C LDR X0, [X0]
	0x03722660 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X1
	009 Move X21, X0
	010 Move W19, W2
	011 Move X0, [X0]
	012 Move X1, [X21+8]
	013 Move X2, [X20]
	014 Move X3, [X20+8]
	015 And W4, W19, 3
	016 Move X5, X31
	017 Move X22, X8
	018 Call Sse2.shuffle_pd, X0, X1, X2
	019 Move X23, X0
	020 Move X24, X1
	021 Move X0, [X21+16]
	022 Move X1, [X21+24]
	023 Move X2, [X20+16]
	024 Move X3, [X20+24]
	025 NotImplemented "Instruction SBFM not yet implemented."
	026 Move X5, X31
	027 Call Sse2.shuffle_pd, X0, X1, X2
	028 Move [X22], X23
	029 Move [X22+8], X24
	030 Move [X22+16], X0
	031 Move [X22+24], X1
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X22, [X31+32]
	035 Move X21, [X31+40]
	036 Move X24, [X31+16]
	037 Move X23, [X31+24]
	038 Move X30, [X31+64]
	039 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_shuffle_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x03722664 MOV W2, W19
	0x03722668 MOV X3, X31
	0x0372266C MOV X21, X8
	0x03722670 BL 0x372D828
	0x03722674 MOV X22, X0
	0x03722678 LDP X0, X8, [X20 + 0x10]
	0x0372267C MOV X20, X1
	0x03722680 MOV W2, W19
	0x03722684 MOV X3, X31
	0x03722688 MOV X1, X8
	0x0372268C BL 0x372D828
	0x03722690 STP X22, X20, [X21]
	0x03722694 STP X0, X1, [X21 + 0x10]
	0x03722698 LDP X20, X19, [X31 + 0x20]
	0x0372269C LDP X22, X21, [X31 + 0x10]
	0x037226A0 LDR X30, [X31], #0x30
	0x037226A4 RET
	0x037226A8 SUB X31, X31, 0x40
	0x037226AC STR X30, [X31 + 0x30]
	0x037226B0 MRS X8, 0xC000
	0x037226B4 LDR X9, [X8 + 0x28]
	0x037226B8 UBFM W10, W2, 0x1E, 0x1D
	0x037226BC AND X10, X10, 0xF
	0x037226C0 STR X9, [X31 + 0x28]
	0x037226C4 ADD X9, X31, 0x18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X1
	008 Move X21, X0
	009 Move W19, W2
	010 Move X0, [X0]
	011 Move X1, [X21+8]
	012 Move X2, [X20]
	013 Move X3, [X20+8]
	014 Move W4, W19
	015 Move X22, X8
	016 Call Sse.shuffle_ps, X0, X1, X2
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X2, [X20+16]
	021 Move X3, [X20+24]
	022 Move X20, X1
	023 Move W4, W19
	024 Move X1, X8
	025 Call Sse.shuffle_ps, X0, X1, X2
	026 Move [X22], X23
	027 Move [X22+8], X20
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sub_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03722740 LDR W10, [X1 + 0x8]
	0x03722744 UBFM W10, W10, 0x1E, 0x1D
	0x03722748 AND X10, X10, 0xF
	0x0372274C LDR V0, [X10, X0, LSL]
	0x03722750 STR D0, [X31 + 0x8]
	0x03722754 LDR W10, [X1 + 0x10]
	0x03722758 UBFM W10, W10, 0x1E, 0x1D
	0x0372275C AND X10, X10, 0xF
	0x03722760 LDR V0, [X11, X10, LSL]
	0x03722764 STR D0, [X31 + 0x10]
	0x03722768 LDR W10, [X1 + 0x18]
	0x0372276C UBFM W10, W10, 0x1E, 0x1D
	0x03722770 AND X10, X10, 0xF
	0x03722774 LDR V0, [X11, X10, LSL]
	0x03722778 STR D0, [X31 + 0x18]
	0x0372277C LDP V1, V0, [X31]
	0x03722780 STP V1, V0, [X8]
	0x03722784 LDR X8, [X9 + 0x28]
	0x03722788 LDR X9, [X31 + 0x28]
	0x0372278C CMP X8, X9
	0x03722790 B.NE 0x37227A0
	0x03722794 LDR X30, [X31 + 0x30]
	0x03722798 ADD X31, X31, 0x40
	0x0372279C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.sub_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.sub_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sub_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037227A0 BL 0x3EB1B20
	0x037227A4 SUB X31, X31, 0x40
	0x037227A8 STR X30, [X31 + 0x30]
	0x037227AC MRS X9, 0xC000
	0x037227B0 LDR X10, [X9 + 0x28]
	0x037227B4 AND W11, W1, 0x3
	0x037227B8 UBFM W14, W11, 0x1D, 0x1C
	0x037227BC ADD X12, X31, 0x18
	0x037227C0 STR X10, [X31 + 0x28]
	0x037227C4 LDP X10, X13, [X0]
	0x037227C8 AND X14, X14, 0xF
	0x037227CC STP X10, X13, [X31 + 0x18]
	0x037227D0 LDR V0, [X12, X14, LSL]
	0x037227D4 UBFM W10, W11, 0x1E, 0x1D
	0x037227D8 AND X10, X10, 0xF
	0x037227DC STR D0, [X31 + 0x8]
	0x037227E0 LDR V0, [X12, X10, LSL]
	0x037227E4 UBFM W10, W1, 0x1F, 0x1E
	0x037227E8 AND X10, X10, 0xF
	0x037227EC STR D0, [X31 + 0x10]
	0x037227F0 LDP X11, X13, [X0 + 0x10]
	0x037227F4 LDR X14, [X31 + 0x10]

ISIL:
	001 Move V0, [X1]
	002 Move V3, [X1+16]
	003 Move V1, [X0]
	004 Move V2, [X0+16]
	005 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	006 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	007 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	008 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	009 Subtract V4, V5, V4
	010 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	011 Subtract V0, V1, V0
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 Subtract V1, V1, V5
	016 Subtract V2, V2, V3
	017 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	018 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	019 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	020 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	021 Or V0, V0, V3
	022 Or V1, V2, V1
	023 Move [X8], V0
	024 Move [X8+8], V1
	025 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_xor_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03722840 BL 0x3EB1B20
	0x03722844 SUB X31, X31, 0x40
	0x03722848 STR X30, [X31 + 0x30]
	0x0372284C MRS X8, 0xC000
	0x03722850 LDR X9, [X8 + 0x28]
	0x03722854 UBFM W10, W2, 0x1D, 0x1C
	0x03722858 AND X10, X10, 0xF
	0x0372285C STR X9, [X31 + 0x28]
	0x03722860 ADD X9, X31, 0x18
	0x03722864 STP X0, X1, [X31 + 0x18]
	0x03722868 LDR V0, [X9, X10, LSL]
	0x0372286C UBFM W10, W2, 0x1E, 0x1D
	0x03722870 AND X10, X10, 0xF
	0x03722874 STR D0, [X31 + 0x8]
	0x03722878 LDR V0, [X9, X10, LSL]
	0x0372287C STR D0, [X31 + 0x10]
	0x03722880 LDP X0, X1, [X31 + 0x8]
	0x03722884 LDR X8, [X8 + 0x28]
	0x03722888 LDR X9, [X31 + 0x28]
	0x0372288C CMP X8, X9
	0x03722890 B.NE 0x37228A0
	0x03722894 LDR X30, [X31 + 0x30]
	0x03722898 ADD X31, X31, 0x40
	0x0372289C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.xor_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.xor_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_xor_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037228A0 BL 0x3EB1B20
	0x037228A4 AND W8, W2, 0x3
	0x037228A8 CMP W8, 0x2
	0x037228AC B.EQ 0x37228C4
	0x037228B0 CMP W8, 0x1
	0x037228B4 B.EQ 0x37228D0

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, [X1]
	004 Move V3, [X1+16]
	005 NotImplemented "Instruction INVALID not yet implemented."
	006 NotImplemented "Instruction INVALID not yet implemented."
	007 Move [X8], V0
	008 Move [X8+8], V1
	009 Return X0

Method: Unity.Burst.Intrinsics.v128 cmp_pd(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x037228C4 ADD X8, X1, 0x8
	0x037228C8 MOV X0, X1
	0x037228CC B 0x37228E8
	0x037228D0 ADD X9, X0, 0x10
	0x037228D4 ADD X8, X0, 0x18
	0x037228D8 MOV X0, X9
	0x037228DC B 0x37228E8
	0x037228E0 ADD X0, X1, 0x10
	0x037228E4 ADD X8, X1, 0x18
	0x037228E8 LDR X1, [X8]
	0x037228EC LDR X0, [X0]
	0x037228F0 RET
	0x037228F4 LDP X9, X10, [X0]
	0x037228F8 LDP X11, X12, [X0 + 0x10]
	0x037228FC LDP X16, X17, [X1]
	0x03722900 LDP X13, X14, [X1 + 0x10]
	0x03722904 ANDS W1, W2, 0x3
	0x03722908 MOV X15, X9
	0x0372290C MOV X0, X10
	0x03722910 B.EQ 0x372293C
	0x03722914 CMP W1, 0x2
	0x03722918 MOV X15, X16
	0x0372291C MOV X0, X17
	0x03722920 B.EQ 0x372293C
	0x03722924 CMP W1, 0x1
	0x03722928 MOV X15, X11
	0x0372292C MOV X0, X12
	0x03722930 B.EQ 0x372293C
	0x03722934 MOV X15, X13
	0x03722938 MOV X0, X14
	0x0372293C UBFM W1, W2, 0x4, 0x5
	0x03722940 CBZ W1, 0x372296C
	0x03722944 CMP W1, 0x2
	0x03722948 MOV X9, X16
	0x0372294C MOV X10, X17
	0x03722950 B.EQ 0x372296C
	0x03722954 CMP W1, 0x1
	0x03722958 MOV X9, X11
	0x0372295C MOV X10, X12
	0x03722960 B.EQ 0x372296C
	0x03722964 MOV X9, X13
	0x03722968 MOV X10, X14
	0x0372296C STP X15, X0, [X8]
	0x03722970 STP X9, X10, [X8 + 0x10]
	0x03722974 RET
	0x03722978 LDP X9, X10, [X0]
	0x0372297C LDP X11, X12, [X0 + 0x10]
	0x03722980 LDP X16, X17, [X1]
	0x03722984 LDP X13, X14, [X1 + 0x10]
	0x03722988 ANDS W1, W2, 0x3
	0x0372298C MOV X15, X9
	0x03722990 MOV X0, X10
	0x03722994 B.EQ 0x37229C0
	0x03722998 CMP W1, 0x2
	0x0372299C MOV X15, X16
	0x037229A0 MOV X0, X17
	0x037229A4 B.EQ 0x37229C0
	0x037229A8 CMP W1, 0x1
	0x037229AC MOV X15, X11
	0x037229B0 MOV X0, X12
	0x037229B4 B.EQ 0x37229C0
	0x037229B8 MOV X15, X13
	0x037229BC MOV X0, X14
	0x037229C0 UBFM W1, W2, 0x4, 0x5
	0x037229C4 CBZ W1, 0x37229F0
	0x037229C8 CMP W1, 0x2
	0x037229CC MOV X9, X16
	0x037229D0 MOV X10, X17
	0x037229D4 B.EQ 0x37229F0
	0x037229D8 CMP W1, 0x1
	0x037229DC MOV X9, X11
	0x037229E0 MOV X10, X12
	0x037229E4 B.EQ 0x37229F0
	0x037229E8 MOV X9, X13
	0x037229EC MOV X10, X14
	0x037229F0 STP X15, X0, [X8]
	0x037229F4 STP X9, X10, [X8 + 0x10]
	0x037229F8 RET
	0x037229FC LDP X9, X10, [X0]
	0x03722A00 LDP X11, X12, [X0 + 0x10]
	0x03722A04 LDP X16, X17, [X1]
	0x03722A08 LDP X13, X14, [X1 + 0x10]
	0x03722A0C ANDS W1, W2, 0x3
	0x03722A10 MOV X15, X9
	0x03722A14 MOV X0, X10
	0x03722A18 B.EQ 0x3722A44
	0x03722A1C CMP W1, 0x2
	0x03722A20 MOV X15, X16
	0x03722A24 MOV X0, X17
	0x03722A28 B.EQ 0x3722A44
	0x03722A2C CMP W1, 0x1
	0x03722A30 MOV X15, X11
	0x03722A34 MOV X0, X12
	0x03722A38 B.EQ 0x3722A44
	0x03722A3C MOV X15, X13
	0x03722A40 MOV X0, X14
	0x03722A44 UBFM W1, W2, 0x4, 0x5
	0x03722A48 CBZ W1, 0x3722A74
	0x03722A4C CMP W1, 0x2
	0x03722A50 MOV X9, X16
	0x03722A54 MOV X10, X17
	0x03722A58 B.EQ 0x3722A74
	0x03722A5C CMP W1, 0x1
	0x03722A60 MOV X9, X11
	0x03722A64 MOV X10, X12
	0x03722A68 B.EQ 0x3722A74
	0x03722A6C MOV X9, X13
	0x03722A70 MOV X10, X14
	0x03722A74 STP X15, X0, [X8]
	0x03722A78 STP X9, X10, [X8 + 0x10]
	0x03722A7C RET
	0x03722A80 UNIMPLEMENTED
	0x03722A84 STP V0, V0, [X8]
	0x03722A88 RET
	0x03722A8C LDR W0, [X0]
	0x03722A90 BFM X0, X0, 0x20, 0x1F
	0x03722A94 MOV X1, X0
	0x03722A98 RET
	0x03722A9C LDR V0, [X0]
	0x03722AA0 STP D0, D0, [X8 + 0x10]
	0x03722AA4 STP D0, D0, [X8]
	0x03722AA8 RET
	0x03722AAC LDP X9, X10, [X0]
	0x03722AB0 STP X9, X10, [X8]
	0x03722AB4 STP X9, X10, [X8 + 0x10]
	0x03722AB8 RET
	0x03722ABC LDP X8, X1, [X0]
	0x03722AC0 MOV X0, X8
	0x03722AC4 RET
	0x03722AC8 LDP X9, X10, [X0]
	0x03722ACC STP X9, X10, [X8]
	0x03722AD0 STP X9, X10, [X8 + 0x10]
	0x03722AD4 RET
	0x03722AD8 TBNZ X3, 0x0, 0x3722AE4
	0x03722ADC LDP X9, X10, [X0 + 0x10]
	0x03722AE0 B 0x3722AF8
	0x03722AE4 LDP X11, X12, [X0]
	0x03722AE8 MOV X9, X1
	0x03722AEC MOV X10, X2
	0x03722AF0 MOV X1, X11
	0x03722AF4 MOV X2, X12
	0x03722AF8 STP X1, X2, [X8]
	0x03722AFC STP X9, X10, [X8 + 0x10]
	0x03722B00 RET
	0x03722B04 LDP X9, X10, [X0]
	0x03722B08 LDP X11, X12, [X0 + 0x10]
	0x03722B0C ANDS W31, W3, 0x1
	0x03722B10 CSEL X9, X1, X9, EQ
	0x03722B14 CSEL X10, X2, X10, EQ
	0x03722B18 CSEL X11, X11, X1, EQ
	0x03722B1C CSEL X12, X12, X2, EQ
	0x03722B20 STP X9, X10, [X8]
	0x03722B24 STP X11, X12, [X8 + 0x10]
	0x03722B28 RET
	0x03722B2C LDP X9, X10, [X0]
	0x03722B30 LDP X11, X12, [X0 + 0x10]
	0x03722B34 ANDS W31, W3, 0x1
	0x03722B38 CSEL X9, X1, X9, EQ
	0x03722B3C CSEL X10, X2, X10, EQ
	0x03722B40 CSEL X11, X11, X1, EQ
	0x03722B44 CSEL X12, X12, X2, EQ
	0x03722B48 STP X9, X10, [X8]
	0x03722B4C STP X11, X12, [X8 + 0x10]
	0x03722B50 RET
	0x03722B54 LDP V1, V0, [X0]
	0x03722B58 STP V1, V0, [X8]
	0x03722B5C RET
	0x03722B60 LDP V1, V0, [X1]
	0x03722B64 STP V1, V0, [X0]
	0x03722B68 RET
	0x03722B6C LDP V1, V0, [X0]
	0x03722B70 STP V1, V0, [X8]
	0x03722B74 RET
	0x03722B78 LDP V1, V0, [X1]
	0x03722B7C STP V1, V0, [X0]
	0x03722B80 RET
	0x03722B84 LDP V1, V0, [X0]
	0x03722B88 STP V1, V0, [X8]
	0x03722B8C RET
	0x03722B90 LDP V1, V0, [X1]
	0x03722B94 STP V1, V0, [X0]
	0x03722B98 RET
	0x03722B9C LDP V1, V0, [X0]
	0x03722BA0 STP V1, V0, [X8]
	0x03722BA4 RET
	0x03722BA8 LDP V1, V0, [X1]
	0x03722BAC STP V1, V0, [X0]
	0x03722BB0 RET
	0x03722BB4 LDP V1, V0, [X0]
	0x03722BB8 STP V1, V0, [X8]
	0x03722BBC RET
	0x03722BC0 LDP V1, V0, [X1]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 And W9, W4, 31
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X10, -45654016
	011 Add X10, X10, 2091
	012 NotImplemented "Instruction ADR not yet implemented."
	013 Move W12, [X10]
	014 Add X11, X11, X12
	015 Move X19, X3
	016 Move X20, X2
	017 Move X21, X1
	018 Move X22, X0
	019 Move X0, X31
	020 Move X8, X31
	021 Move X1, X31
	022 CallNoReturn X11
	023 Move X0, X22
	024 Move X1, X21
	025 Move X2, X20
	026 Move X3, X19
	027 Move X4, X31
	028 Call Sse2.cmpunord_pd, X0, X1
	029 Move X0, X22
	030 Move X1, X21
	031 Move X2, X20
	032 Move X3, X19
	033 Move X4, X31
	034 Call Sse2.cmpneq_pd, X0, X1
	035 Move X0, X22
	036 Move X1, X21
	037 Move X2, X20
	038 Move X3, X19
	039 Move X4, X31
	040 Call Sse2.cmpord_pd, X0, X1
	041 Move X0, X22
	042 Move X1, X21
	043 Move X2, X20
	044 Move X3, X19
	045 Move X4, X31
	046 Call Sse2.cmpeq_pd, X0, X1
	047 Move X0, X22
	048 Move X1, X21
	049 Move X2, X20
	050 Move X3, X19
	051 Move X4, X31
	052 Call Sse2.cmpngt_pd, X0, X1
	053 Move X0, X22
	054 Move X1, X21
	055 Move X2, X20
	056 Move X3, X19
	057 Move X4, X31
	058 Call Sse2.cmpneq_pd, X0, X1
	059 Move X0, X22
	060 Move X1, X21
	061 Move X2, X20
	062 Move X3, X19
	063 Move X4, X31
	064 Call Sse2.cmpge_pd, X0, X1
	065 Move X0, X22
	066 Move X1, X21
	067 Move X2, X20
	068 Move X3, X19
	069 Move X4, X31
	070 Call Sse2.cmpgt_pd, X0, X1
	071 Move TEMP, 0
	072 Not TEMP
	073 Move X1, TEMP
	074 Move X8, INVALID
	075 Move TEMP, 0
	076 Not TEMP
	077 Move W0, TEMP
	078 Move X0, X22
	079 Move X1, X21
	080 Move X2, X20
	081 Move X3, X19
	082 Move X4, X31
	083 Call Sse2.cmpnge_pd, X0, X1
	084 Move X0, X22
	085 Move X1, X21
	086 Move X2, X20
	087 Move X3, X19
	088 Move X4, X31
	089 Call Sse2.cmpeq_pd, X0, X1
	090 Move X0, X22
	091 Move X1, X21
	092 Move X2, X20
	093 Move X3, X19
	094 Move X4, X31
	095 Call Sse2.cmplt_pd, X0, X1
	096 Move X0, X22
	097 Move X1, X21
	098 Move X2, X20
	099 Move X3, X19
	100 Move X4, X31
	101 Call Sse2.cmple_pd, X0, X1
	102 Move X0, X22
	103 Move X1, X21
	104 Move X2, X20
	105 Move X3, X19
	106 Move X4, X31
	107 Call Sse2.cmpnlt_pd, X0, X1
	108 Move X0, X22
	109 Move X1, X21
	110 Move X2, X20
	111 Move X3, X19
	112 Move X4, X31
	113 Call Sse2.cmpnle_pd, X0, X1
	114 Move X0, X22
	115 Move X1, X21
	116 Move X2, X20
	117 Move X3, X19
	118 Move X4, X31
	119 Call Sse2.cmpeq_pd, X0, X1
	120 Move X0, X22
	121 Move X1, X21
	122 Move X2, X20
	123 Move X3, X19
	124 Move X4, X31
	125 Call Sse2.cmplt_pd, X0, X1
	126 Move X0, X22
	127 Move X1, X21
	128 Move X2, X20
	129 Move X3, X19
	130 Move X4, X31
	131 Call Sse2.cmple_pd, X0, X1
	132 Move X23, X0
	133 Move X24, X1
	134 Move X0, X22
	135 Move X1, X21
	136 Move X2, X20
	137 Move X3, X19
	138 Move X4, X31
	139 Call Sse2.cmpord_pd, X0, X1
	140 Move X2, X0
	141 Move X3, X1
	142 Move X0, X23
	143 Move X1, X24
	144 Move X4, X31
	145 Call Sse2.and_pd, X0, X1
	146 Move X0, X22
	147 Move X1, X21
	148 Move X2, X20
	149 Move X3, X19
	150 Move X4, X31
	151 Call Sse2.cmpnlt_pd, X0, X1
	152 Move X0, X22
	153 Move X1, X21
	154 Move X2, X20
	155 Move X3, X19
	156 Move X4, X31
	157 Call Sse2.cmpnle_pd, X0, X1
	158 Move X23, X0
	159 Move X24, X1
	160 Move X0, X22
	161 Move X1, X21
	162 Move X2, X20
	163 Move X3, X19
	164 Move X4, X31
	165 Call Sse2.cmpunord_pd, X0, X1
	166 Move X2, X0
	167 Move X3, X1
	168 Move X0, X23
	169 Move X1, X24
	170 Move X4, X31
	171 Call Sse2.or_pd, X0, X1
	172 And X8, X0, 0
	173 Move X20, [X31+48]
	174 Move X19, [X31+56]
	175 Move X22, [X31+32]
	176 Move X21, [X31+40]
	177 Move X24, [X31+16]
	178 Move X23, [X31+24]
	179 And X9, X0, 0
	180 Or X0, X8, X9
	181 Move X30, [X31+64]
	182 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmp_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x03722BC4 STP V1, V0, [X0]
	0x03722BC8 RET
	0x03722BCC LDP V1, V0, [X0]
	0x03722BD0 STP V1, V0, [X8]
	0x03722BD4 RET
	0x03722BD8 LDP V1, V0, [X1]
	0x03722BDC STP V1, V0, [X0]
	0x03722BE0 RET
	0x03722BE4 LDR V0, [X1]
	0x03722BE8 LDR V1, [X0]
	0x03722BEC STP V0, V1, [X8]
	0x03722BF0 RET
	0x03722BF4 STP X2, X3, [X8]
	0x03722BF8 STP X0, X1, [X8 + 0x10]
	0x03722BFC RET
	0x03722C00 LDR V0, [X1]
	0x03722C04 LDR V1, [X0]
	0x03722C08 STP V0, V1, [X8]
	0x03722C0C RET
	0x03722C10 LDR V0, [X1]
	0x03722C14 LDR V1, [X0]
	0x03722C18 STP V0, V1, [X8]
	0x03722C1C RET
	0x03722C20 LDR V0, [X2 + 0x1]
	0x03722C24 STR V0, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X1
	008 Move X21, X0
	009 Move W19, W2
	010 Move X0, [X0]
	011 Move X1, [X21+8]
	012 Move X2, [X20]
	013 Move X3, [X20+8]
	014 Move W4, W19
	015 Move X22, X8
	016 Call Avx.cmp_pd, X0, X1, X2
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X2, [X20+16]
	021 Move X3, [X20+24]
	022 Move X20, X1
	023 Move W4, W19
	024 Move X1, X8
	025 Call Avx.cmp_pd, X0, X1, X2
	026 Move [X22], X23
	027 Move [X22+8], X20
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v128 cmp_ps(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03722C28 LDR V0, [X2]
	0x03722C2C STR V0, [X1]
	0x03722C30 RET
	0x03722C34 STP X1, X2, [X0]
	0x03722C38 RET
	0x03722C3C LDR V0, [X2 + 0x1]
	0x03722C40 STR V0, [X0]
	0x03722C44 LDR V0, [X2]
	0x03722C48 STR V0, [X1]
	0x03722C4C RET
	0x03722C50 LDR V0, [X2 + 0x1]
	0x03722C54 STR V0, [X0]
	0x03722C58 LDR V0, [X2]
	0x03722C5C STR V0, [X1]
	0x03722C60 RET
	0x03722C64 MOV X8, X0
	0x03722C68 TBNZ X1, 0x0, 0x3722C7C
	0x03722C6C MOV X0, X31
	0x03722C70 TBNZ X2, 0x0, 0x3722C84
	0x03722C74 MOV X1, X31
	0x03722C78 RET
	0x03722C7C LDR X0, [X8]
	0x03722C80 TBZ X2, 0x0, 0x3722C74
	0x03722C84 LDR X1, [X8 + 0x8]
	0x03722C88 RET
	0x03722C8C LDP X9, X10, [X1]
	0x03722C90 TBNZ X9, 0x0, 0x3722CA4
	0x03722C94 MOV X9, X31
	0x03722C98 TBNZ X10, 0x0, 0x3722CAC
	0x03722C9C MOV X10, X31
	0x03722CA0 B 0x3722CB0
	0x03722CA4 LDR X9, [X0]
	0x03722CA8 TBZ X10, 0x0, 0x3722C9C
	0x03722CAC LDR X10, [X0 + 0x8]
	0x03722CB0 LDP X11, X12, [X1 + 0x10]
	0x03722CB4 TBNZ X11, 0x0, 0x3722CC8
	0x03722CB8 MOV X11, X31
	0x03722CBC TBNZ X12, 0x0, 0x3722CD0
	0x03722CC0 MOV X12, X31
	0x03722CC4 B 0x3722CD4
	0x03722CC8 LDR X11, [X0 + 0x10]
	0x03722CCC TBZ X12, 0x0, 0x3722CC0
	0x03722CD0 LDR X12, [X0 + 0x18]
	0x03722CD4 STP X9, X10, [X8]
	0x03722CD8 STP X11, X12, [X8 + 0x10]
	0x03722CDC RET
	0x03722CE0 TBNZ X1, 0x0, 0x3722CEC
	0x03722CE4 TBNZ X2, 0x0, 0x3722CF4
	0x03722CE8 RET
	0x03722CEC STR X3, [X0]
	0x03722CF0 TBZ X2, 0x0, 0x3722CE8
	0x03722CF4 STR X4, [X0 + 0x8]
	0x03722CF8 RET
	0x03722CFC LDP X10, X9, [X1]
	0x03722D00 LDR X8, [X2 + 0x8]
	0x03722D04 TBNZ X10, 0x0, 0x3722D20
	0x03722D08 TBNZ X9, 0x0, 0x3722D2C
	0x03722D0C LDP X10, X9, [X1 + 0x10]
	0x03722D10 LDR X8, [X2 + 0x18]
	0x03722D14 TBNZ X10, 0x0, 0x3722D34
	0x03722D18 TBNZ X9, 0x0, 0x3722D40
	0x03722D1C RET
	0x03722D20 LDR X10, [X2]
	0x03722D24 STR X10, [X0]
	0x03722D28 TBZ X9, 0x0, 0x3722D0C
	0x03722D2C STR X8, [X0 + 0x8]
	0x03722D30 B 0x3722D0C
	0x03722D34 LDR X10, [X2 + 0x10]
	0x03722D38 STR X10, [X0 + 0x10]
	0x03722D3C TBZ X9, 0x0, 0x3722D1C
	0x03722D40 STR X8, [X0 + 0x18]
	0x03722D44 RET
	0x03722D48 UBFM X9, X1, 0x20, 0x3F
	0x03722D4C TBNZ X1, 0x1F, 0x3722D78
	0x03722D50 MOV X8, X31
	0x03722D54 TBNZ X9, 0x1F, 0x3722D80
	0x03722D58 MOV X9, X31
	0x03722D5C TBNZ X2, 0x1F, 0x3722D8C
	0x03722D60 MOV X1, X31
	0x03722D64 TBZ X2, 0x0, 0x3722D70
	0x03722D68 LDR W10, [X0 + 0xC]
	0x03722D6C BFM X1, X10, 0x20, 0x1F
	0x03722D70 ORR X0, X9, X8, 0x0
	0x03722D74 RET
	0x03722D78 LDR W8, [X0]
	0x03722D7C TBZ X9, 0x1F, 0x3722D58
	0x03722D80 LDR W9, [X0 + 0x4]
	0x03722D84 UBFM X9, X9, 0x20, 0x1F
	0x03722D88 TBZ X2, 0x1F, 0x3722D60
	0x03722D8C LDR W1, [X0 + 0x8]
	0x03722D90 TBZ X2, 0x0, 0x3722D70
	0x03722D94 B 0x3722D68
	0x03722D98 STP X30, X23, [X31 - 0x30]!
	0x03722D9C STP X22, X21, [X31 + 0x10]
	0x03722DA0 STP X20, X19, [X31 + 0x20]
	0x03722DA4 MOV X19, X1
	0x03722DA8 LDR X1, [X1]
	0x03722DAC LDR X2, [X19 + 0x8]
	0x03722DB0 MOV X20, X0
	0x03722DB4 MOV X21, X8
	0x03722DB8 BL 0x3722D48
	0x03722DBC MOV X23, X1
	0x03722DC0 LDP X1, X2, [X19 + 0x10]
	0x03722DC4 MOV X22, X0
	0x03722DC8 ADD X0, X20, 0x10
	0x03722DCC BL 0x3722D48
	0x03722DD0 STP X22, X23, [X21]
	0x03722DD4 STP X0, X1, [X21 + 0x10]
	0x03722DD8 LDP X20, X19, [X31 + 0x20]
	0x03722DDC LDP X22, X21, [X31 + 0x10]
	0x03722DE0 LDP X30, X23, [X31], #0x30
	0x03722DE4 RET
	0x03722DE8 UBFM X8, X1, 0x20, 0x3F
	0x03722DEC TBNZ X1, 0x1F, 0x3722E00
	0x03722DF0 TBNZ X8, 0x1F, 0x3722E08
	0x03722DF4 TBNZ X2, 0x1F, 0x3722E14
	0x03722DF8 TBNZ X2, 0x0, 0x3722E1C
	0x03722DFC RET
	0x03722E00 STR W3, [X0]
	0x03722E04 TBZ X8, 0x1F, 0x3722DF4
	0x03722E08 UBFM X8, X3, 0x20, 0x3F
	0x03722E0C STR W8, [X0 + 0x4]
	0x03722E10 TBZ X2, 0x1F, 0x3722DF8
	0x03722E14 STR W4, [X0 + 0x8]
	0x03722E18 TBZ X2, 0x0, 0x3722DFC
	0x03722E1C UBFM X8, X4, 0x20, 0x3F
	0x03722E20 STR W8, [X0 + 0xC]
	0x03722E24 RET
	0x03722E28 STP X30, X21, [X31 - 0x20]!
	0x03722E2C STP X20, X19, [X31 + 0x10]
	0x03722E30 MOV X19, X2
	0x03722E34 MOV X20, X1
	0x03722E38 LDR X1, [X1]
	0x03722E3C LDR X2, [X20 + 0x8]
	0x03722E40 LDP X3, X4, [X19]
	0x03722E44 MOV X21, X0
	0x03722E48 BL 0x3722DE8
	0x03722E4C LDP X1, X2, [X20 + 0x10]
	0x03722E50 LDP X3, X4, [X19 + 0x10]
	0x03722E54 LDP X20, X19, [X31 + 0x10]
	0x03722E58 ADD X0, X21, 0x10
	0x03722E5C LDP X30, X21, [X31], #0x20
	0x03722E60 B 0x3722DE8
	0x03722E64 LDR W9, [X0 + 0x4]
	0x03722E68 LDR W10, [X0 + 0xC]
	0x03722E6C LDR W11, [X0 + 0x14]
	0x03722E70 LDR W12, [X0 + 0x1C]
	0x03722E74 STP W9, W9, [X8]
	0x03722E78 STP W10, W10, [X8 + 0x8]
	0x03722E7C STP W11, W11, [X8 + 0x10]
	0x03722E80 STP W12, W12, [X8 + 0x18]
	0x03722E84 RET
	0x03722E88 LDR W9, [X0]
	0x03722E8C LDR W10, [X0 + 0x8]
	0x03722E90 LDR W11, [X0 + 0x10]
	0x03722E94 LDR W12, [X0 + 0x18]
	0x03722E98 STP W9, W9, [X8]
	0x03722E9C STP W10, W10, [X8 + 0x8]
	0x03722EA0 STP W11, W11, [X8 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 And W9, W4, 31
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X10, -45654016
	011 Add X10, X10, 2122
	012 NotImplemented "Instruction ADR not yet implemented."
	013 Move W12, [X10]
	014 Add X11, X11, X12
	015 Move X19, X3
	016 Move X20, X2
	017 Move X21, X1
	018 Move X22, X0
	019 Move X0, X31
	020 Move X8, X31
	021 Move X1, X31
	022 CallNoReturn X11
	023 Move X0, X22
	024 Move X1, X21
	025 Move X2, X20
	026 Move X3, X19
	027 Call Sse.cmpunord_ps, X0, X1
	028 Move X0, X22
	029 Move X1, X21
	030 Move X2, X20
	031 Move X3, X19
	032 Call Sse.cmpneq_ps, X0, X1
	033 Move X0, X22
	034 Move X1, X21
	035 Move X2, X20
	036 Move X3, X19
	037 Call Sse.cmpord_ps, X0, X1
	038 Move X0, X22
	039 Move X1, X21
	040 Move X2, X20
	041 Move X3, X19
	042 Call Sse.cmpeq_ps, X0, X1
	043 Move X0, X20
	044 Move X1, X19
	045 Move X2, X22
	046 Move X3, X21
	047 Move X0, X22
	048 Move X1, X21
	049 Move X2, X20
	050 Move X3, X19
	051 Call Sse.cmpneq_ps, X0, X1
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X22
	055 Move X3, X21
	056 Move X0, X20
	057 Move X1, X19
	058 Move X2, X22
	059 Move X3, X21
	060 Move TEMP, 0
	061 Not TEMP
	062 Move X1, TEMP
	063 Move X8, INVALID
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W0, TEMP
	067 Move X0, X20
	068 Move X1, X19
	069 Move X2, X22
	070 Move X3, X21
	071 Move X0, X22
	072 Move X1, X21
	073 Move X2, X20
	074 Move X3, X19
	075 Call Sse.cmpeq_ps, X0, X1
	076 Move X0, X22
	077 Move X1, X21
	078 Move X2, X20
	079 Move X3, X19
	080 Call Sse.cmplt_ps, X0, X1
	081 Move X0, X22
	082 Move X1, X21
	083 Move X2, X20
	084 Move X3, X19
	085 Call Sse.cmple_ps, X0, X1
	086 Move X0, X22
	087 Move X1, X21
	088 Move X2, X20
	089 Move X3, X19
	090 Call Sse.cmpnlt_ps, X0, X1
	091 Move X0, X22
	092 Move X1, X21
	093 Move X2, X20
	094 Move X3, X19
	095 Call Sse.cmpnle_ps, X0, X1
	096 Move X0, X22
	097 Move X1, X21
	098 Move X2, X20
	099 Move X3, X19
	100 Call Sse.cmpeq_ps, X0, X1
	101 Move X0, X22
	102 Move X1, X21
	103 Move X2, X20
	104 Move X3, X19
	105 Call Sse.cmplt_ps, X0, X1
	106 Move X0, X22
	107 Move X1, X21
	108 Move X2, X20
	109 Move X3, X19
	110 Call Sse.cmple_ps, X0, X1
	111 Move X23, X0
	112 Move X24, X1
	113 Move X0, X22
	114 Move X1, X21
	115 Move X2, X20
	116 Move X3, X19
	117 Call Sse.cmpord_ps, X0, X1
	118 And X0, X0, X23
	119 And X1, X1, X24
	120 Move X0, X22
	121 Move X1, X21
	122 Move X2, X20
	123 Move X3, X19
	124 Call Sse.cmpnlt_ps, X0, X1
	125 Move X0, X22
	126 Move X1, X21
	127 Move X2, X20
	128 Move X3, X19
	129 Call Sse.cmpnle_ps, X0, X1
	130 Move X23, X0
	131 Move X24, X1
	132 Move X0, X22
	133 Move X1, X21
	134 Move X2, X20
	135 Move X3, X19
	136 Call Sse.cmpunord_ps, X0, X1
	137 Or X0, X0, X23
	138 Or X1, X1, X24
	139 And X8, X0, 0
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X24, [X31+16]
	145 Move X23, [X31+24]
	146 And X9, X0, 0
	147 Or X0, X8, X9
	148 Move X30, [X31+64]
	149 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmp_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x0372325C BL 0x3723168
	0x03723260 LDUR V0, [X31 + 0x38]
	0x03723264 LDUR V1, [X31 + 0x28]
	0x03723268 STP V1, V0, [X19]
	0x0372326C LDR X8, [X20 + 0x28]
	0x03723270 LDR X9, [X31 + 0x48]
	0x03723274 CMP X8, X9
	0x03723278 B.NE 0x372328C
	0x0372327C LDP X20, X19, [X31 + 0x60]
	0x03723280 LDR X30, [X31 + 0x50]
	0x03723284 ADD X31, X31, 0x70
	0x03723288 RET
	0x0372328C BL 0x3EB1B20
	0x03723290 STR X30, [X31 - 0x30]!
	0x03723294 STP X22, X21, [X31 + 0x10]
	0x03723298 STP X20, X19, [X31 + 0x20]
	0x0372329C MOV X20, X0
	0x037232A0 MOV W19, W1
	0x037232A4 LDR X0, [X0]
	0x037232A8 LDR X1, [X20 + 0x8]
	0x037232AC MOV W2, W19
	0x037232B0 MOV X3, X31
	0x037232B4 MOV X21, X8
	0x037232B8 BL 0x3730578
	0x037232BC MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X1
	008 Move X21, X0
	009 Move W19, W2
	010 Move X0, [X0]
	011 Move X1, [X21+8]
	012 Move X2, [X20]
	013 Move X3, [X20+8]
	014 Move W4, W19
	015 Move X22, X8
	016 Call Avx.cmp_ps, X0, X1, X2
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X2, [X20+16]
	021 Move X3, [X20+24]
	022 Move X20, X1
	023 Move W4, W19
	024 Move X1, X8
	025 Call Avx.cmp_ps, X0, X1, X2
	026 Move [X22], X23
	027 Move [X22+8], X20
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v128 cmp_sd(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x037232C0 LDP X0, X8, [X20 + 0x10]
	0x037232C4 MOV X20, X1
	0x037232C8 MOV W2, W19
	0x037232CC MOV X3, X31
	0x037232D0 MOV X1, X8
	0x037232D4 BL 0x3730578

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X1
	004 Call Avx.cmp_pd, X0, X1, X2
	005 Move X1, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: Unity.Burst.Intrinsics.v128 cmp_ss(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x037232D8 STP X22, X20, [X21]
	0x037232DC STP X0, X1, [X21 + 0x10]
	0x037232E0 LDP X20, X19, [X31 + 0x20]
	0x037232E4 LDP X22, X21, [X31 + 0x10]
	0x037232E8 LDR X30, [X31], #0x30
	0x037232EC RET
	0x037232F0 SUB X31, X31, 0x70
	0x037232F4 STR X30, [X31 + 0x50]
	0x037232F8 STP X20, X19, [X31 + 0x60]
	0x037232FC MRS X20, 0xC000
	0x03723300 MOV X19, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call Avx.cmp_ps, X0, X1, X2
	007 NotImplemented "Instruction BFM not yet implemented."
	008 Move X0, X20
	009 Move X1, X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepi32_pd(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03723304 LDR X8, [X20 + 0x28]
	0x03723308 MOVZ W1, 0x2
	0x0372330C STR X8, [X31 + 0x48]
	0x03723310 LDP V1, V0, [X0]
	0x03723314 ADD X8, X31, 0x28
	0x03723318 ADD X0, X31, 0x0
	0x0372331C STP V1, V0, [X31]
	0x03723320 BL 0x3723290
	0x03723324 LDUR V0, [X31 + 0x38]

ISIL:
	001 Move X9, X0
	002 ShiftRight X9, 32
	003 And X9, X9, 0x7FFFFFFF
	004 Move X10, X1
	005 ShiftRight X10, 32
	006 And X10, X10, 0x7FFFFFFF
	007 NotImplemented "Instruction SCVTF not yet implemented."
	008 NotImplemented "Instruction SCVTF not yet implemented."
	009 NotImplemented "Instruction SCVTF not yet implemented."
	010 NotImplemented "Instruction SCVTF not yet implemented."
	011 Move [X8], D0
	012 Move [X8+8], D2
	013 Move [X8+16], D1
	014 Move [X8+24], D3
	015 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepi32_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723328 LDUR V1, [X31 + 0x28]
	0x0372332C STP V1, V0, [X19]
	0x03723330 LDR X8, [X20 + 0x28]
	0x03723334 LDR X9, [X31 + 0x48]
	0x03723338 CMP X8, X9
	0x0372333C B.NE 0x3723350
	0x03723340 LDP X20, X19, [X31 + 0x60]
	0x03723344 LDR X30, [X31 + 0x50]
	0x03723348 ADD X31, X31, 0x70
	0x0372334C RET
	0x03723350 BL 0x3EB1B20
	0x03723354 SUB X31, X31, 0x70
	0x03723358 STR X30, [X31 + 0x50]
	0x0372335C STP X20, X19, [X31 + 0x60]
	0x03723360 MRS X20, 0xC000
	0x03723364 MOV X19, X8
	0x03723368 LDR X8, [X20 + 0x28]
	0x0372336C MOVZ W1, 0x1
	0x03723370 STR X8, [X31 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, [X19+8]
	008 Move X2, X31
	009 Move X20, X8
	010 Call Sse2.cvtepi32_ps, X0
	011 Move X21, X0
	012 Move X0, [X19+16]
	013 Move X8, [X19+24]
	014 Move X19, X1
	015 Move X2, X31
	016 Move X1, X8
	017 Call Sse2.cvtepi32_ps, X0
	018 Move [X20], X21
	019 Move [X20+8], X19
	020 Move [X20+16], X0
	021 Move [X20+24], X1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_cvtpd_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723374 LDP V1, V0, [X0]
	0x03723378 ADD X8, X31, 0x28
	0x0372337C ADD X0, X31, 0x0
	0x03723380 STP V1, V0, [X31]
	0x03723384 BL 0x3723290
	0x03723388 LDUR V0, [X31 + 0x38]
	0x0372338C LDUR V1, [X31 + 0x28]
	0x03723390 STP V1, V0, [X19]
	0x03723394 LDR X8, [X20 + 0x28]
	0x03723398 LDR X9, [X31 + 0x48]
	0x0372339C CMP X8, X9
	0x037233A0 B.NE 0x37233B4
	0x037233A4 LDP X20, X19, [X31 + 0x60]
	0x037233A8 LDR X30, [X31 + 0x50]
	0x037233AC ADD X31, X31, 0x70

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Move X1, [X19+8]
	006 Move X2, X31
	007 Call Sse2.cvtpd_ps, X0
	008 Move X8, [X19+16]
	009 Move X1, [X19+24]
	010 Move X19, X0
	011 Move X2, X31
	012 Move X0, X8
	013 Call Sse2.cvtpd_ps, X0
	014 Move X1, X0
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cvtps_epi32(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x037233B0 RET
	0x037233B4 BL 0x3EB1B20
	0x037233B8 STR X30, [X31 - 0x30]!
	0x037233BC STP X22, X21, [X31 + 0x10]
	0x037233C0 STP X20, X19, [X31 + 0x20]
	0x037233C4 MOV X19, X1
	0x037233C8 MOV X20, X0
	0x037233CC LDR X0, [X0]
	0x037233D0 LDR X1, [X20 + 0x8]
	0x037233D4 LDP X2, X3, [X19]
	0x037233D8 MOV X4, X31
	0x037233DC MOV X21, X8
	0x037233E0 BL 0x372EC90
	0x037233E4 MOV X22, X0
	0x037233E8 LDP X0, X8, [X20 + 0x10]
	0x037233EC LDP X2, X3, [X19 + 0x10]
	0x037233F0 MOV X19, X1
	0x037233F4 MOV X4, X31
	0x037233F8 MOV X1, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, [X19+8]
	008 Move X2, X31
	009 Move X20, X8
	010 Call Sse2.cvtps_epi32, X0
	011 Move X21, X0
	012 Move X0, [X19+16]
	013 Move X8, [X19+24]
	014 Move X19, X1
	015 Move X2, X31
	016 Move X1, X8
	017 Call Sse2.cvtps_epi32, X0
	018 Move [X20], X21
	019 Move [X20+8], X19
	020 Move [X20+16], X0
	021 Move [X20+24], X1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cvtps_pd(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x037233FC BL 0x372EC90
	0x03723400 STP X22, X19, [X21]
	0x03723404 STP X0, X1, [X21 + 0x10]
	0x03723408 LDP X20, X19, [X31 + 0x20]
	0x0372340C LDP X22, X21, [X31 + 0x10]
	0x03723410 LDR X30, [X31], #0x30

ISIL:
	001 Move D0, X1
	002 Move D1, X0
	003 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	004 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	005 Move [X8], V1
	006 Move [X8+8], V0
	007 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_cvttpd_epi32(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723414 RET
	0x03723418 STR X30, [X31 - 0x30]!
	0x0372341C STP X22, X21, [X31 + 0x10]
	0x03723420 STP X20, X19, [X31 + 0x20]
	0x03723424 MOV X19, X1
	0x03723428 MOV X20, X0
	0x0372342C LDR X0, [X0]
	0x03723430 LDR X1, [X20 + 0x8]
	0x03723434 LDP X2, X3, [X19]
	0x03723438 MOV X4, X31
	0x0372343C MOV X21, X8
	0x03723440 BL 0x372EC9C
	0x03723444 MOV X22, X0
	0x03723448 LDP X0, X8, [X20 + 0x10]
	0x0372344C LDP X2, X3, [X19 + 0x10]
	0x03723450 MOV X19, X1
	0x03723454 MOV X4, X31
	0x03723458 MOV X1, X8
	0x0372345C BL 0x372EC9C
	0x03723460 STP X22, X19, [X21]
	0x03723464 STP X0, X1, [X21 + 0x10]
	0x03723468 LDP X20, X19, [X31 + 0x20]
	0x0372346C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move D2, [X0+16]
	002 Move D3, [X0+24]
	003 Move D0, [X0]
	004 Move D1, [X0+8]
	005 Move X8, 0x7FF00000
	006 Move D4, X8
	007 Move W9, 0x80000000
	008 NotImplemented "Instruction FCVTZS not yet implemented."
	009 NotImplemented "Instruction FCVTZS not yet implemented."
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move X10, 0x80000000
	012 NotImplemented "Instruction FCVTZS not yet implemented."
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 Move X13, X13
	015 ShiftRight X13, 32
	016 And X13, X13, 0x7FFFFFFF
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X11, X11
	019 ShiftRight X11, 32
	020 And X11, X11, 0x7FFFFFFF
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 NotImplemented "Instruction FCVTZS not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Or X1, X13, X12
	028 Or X0, X10, X8
	029 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_cvtpd_epi32(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723470 LDR X30, [X31], #0x30
	0x03723474 RET
	0x03723478 LDR X9, [X1 + 0x8]
	0x0372347C LDR X10, [X0 + 0x8]
	0x03723480 LDR X11, [X1 + 0x18]
	0x03723484 LDR X12, [X0 + 0x18]
	0x03723488 MOV X13, X9
	0x0372348C BFM X13, X10, 0x20, 0x3F
	0x03723490 BFM X10, X9, 0x20, 0x1F
	0x03723494 MOV X9, X11
	0x03723498 BFM X9, X12, 0x20, 0x3F
	0x0372349C BFM X12, X11, 0x20, 0x1F
	0x037234A0 STP X10, X13, [X8]
	0x037234A4 STP X12, X9, [X8 + 0x10]
	0x037234A8 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Move X1, [X19+8]
	006 Move X2, X31
	007 Call Sse2.cvtpd_epi32, X0
	008 Move X8, [X19+16]
	009 Move X1, [X19+24]
	010 Move X19, X0
	011 Move X2, X31
	012 Move X0, X8
	013 Call Sse2.cvtpd_epi32, X0
	014 Move X1, X0
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cvttps_epi32(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x037234AC MOV X0, X1
	0x037234B0 MOV X1, X3
	0x037234B4 BFM X1, X0, 0x20, 0x3F
	0x037234B8 BFM X0, X3, 0x20, 0x1F
	0x037234BC RET
	0x037234C0 LDR X9, [X1]
	0x037234C4 LDR X10, [X0]
	0x037234C8 LDR X11, [X1 + 0x10]
	0x037234CC LDR X12, [X0 + 0x10]
	0x037234D0 MOV X13, X9
	0x037234D4 BFM X13, X10, 0x20, 0x3F
	0x037234D8 BFM X10, X9, 0x20, 0x1F
	0x037234DC MOV X9, X11
	0x037234E0 BFM X9, X12, 0x20, 0x3F
	0x037234E4 BFM X12, X11, 0x20, 0x1F
	0x037234E8 STP X10, X13, [X8]
	0x037234EC STP X12, X9, [X8 + 0x10]
	0x037234F0 RET
	0x037234F4 MOV X1, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, [X19+8]
	008 Move X2, X31
	009 Move X20, X8
	010 Call Sse2.cvttps_epi32, X0
	011 Move X21, X0
	012 Move X0, [X19+16]
	013 Move X8, [X19+24]
	014 Move X19, X1
	015 Move X2, X31
	016 Move X1, X8
	017 Call Sse2.cvttps_epi32, X0
	018 Move [X20], X21
	019 Move [X20+8], X19
	020 Move [X20+16], X0
	021 Move [X20+24], X1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0

Method: System.Single mm256_cvtss_f32(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x037234F8 BFM X1, X0, 0x20, 0x3F
	0x037234FC BFM X0, X2, 0x20, 0x1F

ISIL:
	001 Move V0, [X0]
	002 Return V0

Method: Unity.Burst.Intrinsics.v128 mm256_extractf128_ps(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03723500 RET
	0x03723504 STR X30, [X31 - 0x20]!
	0x03723508 STP X20, X19, [X31 + 0x10]
	0x0372350C MOV X19, X1
	0x03723510 MOV X20, X0
	0x03723514 LDR X0, [X0]
	0x03723518 LDR X1, [X20 + 0x8]
	0x0372351C LDP X2, X3, [X19]
	0x03723520 MOV X4, X31

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 24
	003 Move W9, 8
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move X9, X10
	007 ShiftRight X9, 60
	008 And X9, X9, 0x7FFFFFF
	009 Move X1, [X0]
	010 Move X0, [X0]
	011 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_extractf128_pd(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03723524 BL 0x37301D8
	0x03723528 LDP X8, X1, [X20 + 0x10]
	0x0372352C LDP X2, X3, [X19 + 0x10]
	0x03723530 MOV W19, W0
	0x03723534 MOV X4, X31
	0x03723538 MOV X0, X8
	0x0372353C BL 0x37301D8
	0x03723540 AND W0, W0, W19, 0x0
	0x03723544 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 24
	003 Move W9, 8
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move X9, X10
	007 ShiftRight X9, 60
	008 And X9, X9, 0x7FFFFFF
	009 Move X1, [X0]
	010 Move X0, [X0]
	011 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_extractf128_si256(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03723548 LDR X30, [X31], #0x20
	0x0372354C RET
	0x03723550 STR X30, [X31 - 0x20]!
	0x03723554 STP X20, X19, [X31 + 0x10]
	0x03723558 MOV X19, X1
	0x0372355C MOV X20, X0
	0x03723560 LDR X0, [X0]
	0x03723564 LDR X1, [X20 + 0x8]
	0x03723568 LDP X2, X3, [X19]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 24
	003 Move W9, 8
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move X9, X10
	007 ShiftRight X9, 60
	008 And X9, X9, 0x7FFFFFF
	009 Move X1, [X0]
	010 Move X0, [X0]
	011 Return X0

Method: System.Void mm256_zeroall()

Disassembly:
	0x0372356C MOV X4, X31

ISIL:
	001 Return 

Method: System.Void mm256_zeroupper()

Disassembly:
	0x03723570 BL 0x37301F0

ISIL:
	001 Return 

Method: Unity.Burst.Intrinsics.v128 permutevar_ps(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b)

Disassembly:
	0x03723574 LDP X8, X1, [X20 + 0x10]
	0x03723578 LDP X2, X3, [X19 + 0x10]
	0x0372357C MOV W19, W0
	0x03723580 MOV X4, X31
	0x03723584 MOV X0, X8
	0x03723588 BL 0x37301F0
	0x0372358C AND W0, W0, W19, 0x0
	0x03723590 LDP X20, X19, [X31 + 0x10]
	0x03723594 LDR X30, [X31], #0x20
	0x03723598 RET
	0x0372359C SUB X31, X31, 0xC0
	0x037235A0 STR X30, [X31 + 0x90]
	0x037235A4 STP X22, X21, [X31 + 0xA0]
	0x037235A8 STP X20, X19, [X31 + 0xB0]
	0x037235AC MRS X22, 0xC000
	0x037235B0 LDR X8, [X22 + 0x28]
	0x037235B4 MOV X20, X1
	0x037235B8 MOV X21, X0
	0x037235BC STR X8, [X31 + 0x88]
	0x037235C0 LDP V1, V0, [X0]
	0x037235C4 ADD X0, X31, 0x60
	0x037235C8 STP V1, V0, [X31 + 0x60]
	0x037235CC LDP V1, V0, [X1]
	0x037235D0 ADD X1, X31, 0x40
	0x037235D4 STP V1, V0, [X31 + 0x40]
	0x037235D8 BL 0x3723504
	0x037235DC LDP V0, V1, [X21]
	0x037235E0 MOV W19, W0
	0x037235E4 ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X8+40]
	005 Move X9, X31
	006 Add X11, X31, 40
	007 Add X12, X31, 8
	008 Move [X31+56], X10
	009 Add X10, X31, 24
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31+24], X2
	013 Move [X31+32], X3
	014 Move [X31+8], X31
	015 Move [X31+16], X31
	016 Move W13, [X10]
	017 Move W13, W13
	018 ShiftRight W13, 30
	019 And W13, W13, 0x1FFFFFFF
	020 And X13, X13, 15
	021 Move W13, [X13]
	022 Move [X12], W13
	023 Add X9, X9, 4
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, [X31+8]
	026 Move X1, [X31+16]
	027 Move X8, [X8+40]
	028 Move X9, [X31+56]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X30, [X31+64]
	031 Add X31, X31, 80
	032 Return X0
	033 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_permutevar_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037235E8 ADD X1, X31, 0x0
	0x037235EC STP V0, V1, [X31 + 0x20]
	0x037235F0 LDP V0, V1, [X20]
	0x037235F4 STP V0, V1, [X31]
	0x037235F8 BL 0x3723550
	0x037235FC LDR X8, [X22 + 0x28]
	0x03723600 LDR X9, [X31 + 0x88]
	0x03723604 CMP X8, X9
	0x03723608 B.NE 0x372362C
	0x0372360C ORR W8, W0, W19, 0x0
	0x03723610 LDP X20, X19, [X31 + 0xB0]
	0x03723614 LDP X22, X21, [X31 + 0xA0]
	0x03723618 LDR X30, [X31 + 0x90]
	0x0372361C MOVZ W9, 0x1
	0x03723620 SUB W0, W9, W8
	0x03723624 ADD X31, X31, 0xC0
	0x03723628 RET
	0x0372362C BL 0x3EB1B20
	0x03723630 MOV X8, X31
	0x03723634 LDR X9, [X0, X8, LSL]
	0x03723638 LDR X10, [X1, X8, LSL]
	0x0372363C ANDS X31, X10, X9, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X21, X8
	013 Call Avx.permutevar_ps, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X2, [X19+16]
	018 Move X3, [X19+24]
	019 Move X19, X1
	020 Move X1, X8
	021 Call Avx.permutevar_ps, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X19
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v128 permute_ps(Unity.Burst.Intrinsics.v128 a, System.Int32 imm8)

Disassembly:
	0x03723640 B.LT 0x3723658
	0x03723644 ADD X8, X8, 0x8

ISIL:
	001 Move X3, X31
	002 Call Sse2.shuffle_epi32, X0, X1
	003 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_permute_ps(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03723648 CMP X8, 0x20
	0x0372364C B.NE 0x3723634
	0x03723650 MOVZ W0, 0x1
	0x03723654 RET
	0x03723658 MOV W0, W31
	0x0372365C RET
	0x03723660 MOV X8, X31
	0x03723664 LDR X9, [X0, X8, LSL]
	0x03723668 LDR X10, [X1, X8, LSL]
	0x0372366C BICS X31, X10, X9, 0x0
	0x03723670 B.LT 0x3723688
	0x03723674 ADD X8, X8, 0x8
	0x03723678 CMP X8, 0x20
	0x0372367C B.NE 0x3723664
	0x03723680 MOVZ W0, 0x1
	0x03723684 RET
	0x03723688 MOV W0, W31
	0x0372368C RET
	0x03723690 SUB X31, X31, 0xA0
	0x03723694 STR X30, [X31 + 0x90]
	0x03723698 MRS X8, 0xC000
	0x0372369C LDR X10, [X8 + 0x28]
	0x037236A0 MOV X9, X31
	0x037236A4 ADD X11, X31, 0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.shuffle_epi32, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.shuffle_epi32, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v128 permutevar_pd(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b)

Disassembly:
	0x037236A8 STR X10, [X31 + 0x88]
	0x037236AC LDP V1, V0, [X0]
	0x037236B0 ADD X10, X31, 0x60
	0x037236B4 STP V1, V0, [X31 + 0x60]
	0x037236B8 LDP V1, V0, [X1]
	0x037236BC STP V1, V0, [X31 + 0x40]
	0x037236C0 LDR X12, [X10, X9, LSL]
	0x037236C4 LDR X13, [X11, X9, LSL]
	0x037236C8 ANDS X31, X13, X12, 0x0
	0x037236CC B.LT 0x37236E4
	0x037236D0 ADD X9, X9, 0x8
	0x037236D4 CMP X9, 0x20
	0x037236D8 B.NE 0x37236C0
	0x037236DC MOVZ W9, 0x1
	0x037236E0 B 0x37236E8
	0x037236E4 MOV W9, W31
	0x037236E8 LDP V1, V0, [X0]
	0x037236EC MOV X10, X31
	0x037236F0 ADD X11, X31, 0x20
	0x037236F4 ADD X12, X31, 0x0
	0x037236F8 STP V1, V0, [X31 + 0x20]
	0x037236FC LDP V1, V0, [X1]
	0x03723700 STP V1, V0, [X31]
	0x03723704 LDR X13, [X11, X10, LSL]
	0x03723708 LDR X14, [X12, X10, LSL]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X9, [X8+40]
	005 Move W10, W2
	006 ShiftRight W10, 30
	007 And W10, W10, 0x1FFFFFFF
	008 And X10, X10, 15
	009 Move [X31+40], X9
	010 Add X9, X31, 24
	011 Move [X31+24], X0
	012 Move [X31+32], X1
	013 Move [X31+8], X31
	014 Move [X31+16], X31
	015 Move V0, [X10]
	016 Move W10, W3
	017 ShiftRight W10, 30
	018 And W10, W10, 0x1FFFFFFF
	019 And X10, X10, 15
	020 Move [X31+8], D0
	021 Move V0, [X10]
	022 Move [X31+16], D0
	023 Move X0, [X31+8]
	024 Move X1, [X31+16]
	025 Move X8, [X8+40]
	026 Move X9, [X31+40]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X30, [X31+48]
	029 Add X31, X31, 64
	030 Return X0
	031 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_permutevar_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372370C BICS X31, X14, X13, 0x0
	0x03723710 B.LT 0x3723728
	0x03723714 ADD X10, X10, 0x8
	0x03723718 CMP X10, 0x20
	0x0372371C B.NE 0x3723704
	0x03723720 MOVZ W10, 0x1
	0x03723724 B 0x372372C
	0x03723728 MOV W10, W31
	0x0372372C LDR X8, [X8 + 0x28]
	0x03723730 LDR X11, [X31 + 0x88]
	0x03723734 CMP X8, X11
	0x03723738 B.NE 0x3723750
	0x0372373C LDR X30, [X31 + 0x90]
	0x03723740 ORR W8, W10, W9, 0x0
	0x03723744 EOR W0, W8, 0x1
	0x03723748 ADD X31, X31, 0xA0
	0x0372374C RET
	0x03723750 BL 0x3EB1B20
	0x03723754 SUB X31, X31, 0x40
	0x03723758 STR X30, [X31 + 0x30]
	0x0372375C MRS X8, 0xC000
	0x03723760 LDR X12, [X8 + 0x28]
	0x03723764 MOV W9, W31
	0x03723768 MOV X10, X31
	0x0372376C ADD X11, X31, 0x18
	0x03723770 ADD X13, X31, 0x8
	0x03723774 STR X12, [X31 + 0x28]
	0x03723778 STP X0, X1, [X31 + 0x18]
	0x0372377C STP X2, X3, [X31 + 0x8]
	0x03723780 LDR X12, [X10, X11, LSL]
	0x03723784 LDR X10, [X10, X13, LSL]
	0x03723788 ANDS X12, X10, X12, 0x0
	0x0372378C B.LT 0x37237A0
	0x03723790 MOV W14, W9
	0x03723794 MOVZ W9, 0x1
	0x03723798 MOVZ W10, 0x8
	0x0372379C TBZ X14, 0x0, 0x3723780
	0x037237A0 LDR X8, [X8 + 0x28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X11, X0, 16
	007 Move [X31+40], X10
	008 Move [X31], V0
	009 Move [X31+8], V0
	010 Move W10, [X1]
	011 Move W10, W10
	012 ShiftRight W10, 30
	013 And W10, W10, 0x1FFFFFFF
	014 And X10, X10, 15
	015 Move V0, [X10]
	016 Move [X31], D0
	017 Move W10, [X1+8]
	018 Move W10, W10
	019 ShiftRight W10, 30
	020 And W10, W10, 0x1FFFFFFF
	021 And X10, X10, 15
	022 Move V0, [X10]
	023 Move [X31+8], D0
	024 Move W10, [X1+16]
	025 Move W10, W10
	026 ShiftRight W10, 30
	027 And W10, W10, 0x1FFFFFFF
	028 And X10, X10, 15
	029 Move V0, [X11]
	030 Move [X31+16], D0
	031 Move W10, [X1+24]
	032 Move W10, W10
	033 ShiftRight W10, 30
	034 And W10, W10, 0x1FFFFFFF
	035 And X10, X10, 15
	036 Move V0, [X11]
	037 Move [X31+24], D0
	038 Move V1, [X31]
	039 Move V0, [X31+16]
	040 Move [X8], V1
	041 Move [X8+8], V0
	042 Move X8, [X9+40]
	043 Move X9, [X31+40]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X30, [X31+48]
	046 Add X31, X31, 64
	047 Return X0
	048 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_permute_pd(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x037237A4 LDR X9, [X31 + 0x28]
	0x037237A8 CMP X8, X9
	0x037237AC B.NE 0x37237C4
	0x037237B0 LDR X30, [X31 + 0x30]
	0x037237B4 UBFM X8, X12, 0x3F, 0x3F
	0x037237B8 EOR W0, W8, 0x1
	0x037237BC ADD X31, X31, 0x40
	0x037237C0 RET
	0x037237C4 BL 0x3EB1B20
	0x037237C8 SUB X31, X31, 0x40
	0x037237CC STR X30, [X31 + 0x30]
	0x037237D0 MRS X8, 0xC000
	0x037237D4 LDR X12, [X8 + 0x28]
	0x037237D8 MOV W9, W31
	0x037237DC MOV X10, X31
	0x037237E0 ADD X11, X31, 0x18
	0x037237E4 ADD X13, X31, 0x8
	0x037237E8 STR X12, [X31 + 0x28]
	0x037237EC STP X0, X1, [X31 + 0x18]
	0x037237F0 STP X2, X3, [X31 + 0x8]
	0x037237F4 LDR X12, [X10, X11, LSL]
	0x037237F8 LDR X10, [X10, X13, LSL]
	0x037237FC BICS X12, X10, X12, 0x0
	0x03723800 B.LT 0x3723814
	0x03723804 MOV W14, W9
	0x03723808 MOVZ W9, 0x1
	0x0372380C MOVZ W10, 0x8
	0x03723810 TBZ X14, 0x0, 0x37237F4
	0x03723814 LDR X8, [X8 + 0x28]
	0x03723818 LDR X9, [X31 + 0x28]
	0x0372381C CMP X8, X9
	0x03723820 B.NE 0x3723838
	0x03723824 LDR X30, [X31 + 0x30]
	0x03723828 UBFM X8, X12, 0x3F, 0x3F
	0x0372382C EOR W0, W8, 0x1
	0x03723830 ADD X31, X31, 0x40
	0x03723834 RET
	0x03723838 BL 0x3EB1B20
	0x0372383C SUB X31, X31, 0x50
	0x03723840 STP X30, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 And W11, W1, 3
	006 Move W14, W11
	007 ShiftRight W14, 29
	008 And W14, W14, 0xFFFFFFF
	009 Add X12, X31, 24
	010 Move [X31+40], X10
	011 Move X10, [X0]
	012 Move X13, [X0+8]
	013 And X14, X14, 15
	014 Move [X31+24], X10
	015 Move [X31+32], X13
	016 Move V0, [X12]
	017 Move W10, W11
	018 ShiftRight W10, 30
	019 And W10, W10, 0x1FFFFFFF
	020 And X10, X10, 15
	021 Move [X31+8], D0
	022 Move V0, [X12]
	023 Move W10, W1
	024 ShiftRight W10, 31
	025 And W10, W10, 0x3FFFFFFF
	026 And X10, X10, 15
	027 Move [X31+16], D0
	028 Move X11, [X0+16]
	029 Move X13, [X0+24]
	030 Move X14, [X31+16]
	031 Move [X31+16], X31
	032 Move [X31+24], X11
	033 Move [X31+32], X13
	034 Move V0, [X12]
	035 Move X10, [X31+8]
	036 And X11, X1, 15
	037 Move [X31+8], D0
	038 Move V0, [X12]
	039 Move [X8], X10
	040 Move [X8+8], X14
	041 Move [X31+16], D0
	042 Move X11, [X31+8]
	043 Move X12, [X31+16]
	044 Move [X8+16], X11
	045 Move [X8+24], X12
	046 Move X8, [X9+40]
	047 Move X9, [X31+40]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X30, [X31+48]
	050 Add X31, X31, 64
	051 Return X0
	052 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 permute_pd(Unity.Burst.Intrinsics.v128 a, System.Int32 imm8)

Disassembly:
	0x03723844 STP X20, X19, [X31 + 0x40]
	0x03723848 MRS X19, 0xC000
	0x0372384C LDR X11, [X19 + 0x28]
	0x03723850 MOV W8, W31
	0x03723854 MOV X9, X31
	0x03723858 ADD X10, X31, 0x18
	0x0372385C STR X11, [X31 + 0x28]
	0x03723860 ADD X11, X31, 0x8
	0x03723864 MOVZ W20, 0x1
	0x03723868 STP X0, X1, [X31 + 0x18]
	0x0372386C STP X2, X3, [X31 + 0x8]
	0x03723870 LDR X12, [X9, X10, LSL]
	0x03723874 LDR X9, [X9, X11, LSL]
	0x03723878 AND X21, X9, X12, 0x0
	0x0372387C TBNZ X8, 0x0, 0x372388C
	0x03723880 MOVZ W8, 0x1
	0x03723884 MOVZ W9, 0x8
	0x03723888 TBZ X21, 0x0, 0x3723870
	0x0372388C BL 0x37237C8
	0x03723890 LDR X8, [X19 + 0x28]
	0x03723894 LDR X9, [X31 + 0x28]
	0x03723898 CMP X8, X9
	0x0372389C B.NE 0x37238C0
	0x037238A0 UBFM X8, X21, 0x3F, 0x3F

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X9, [X8+40]
	005 Move W10, W2
	006 ShiftRight W10, 29
	007 And W10, W10, 0xFFFFFFF
	008 And X10, X10, 15
	009 Move [X31+40], X9
	010 Add X9, X31, 24
	011 Move [X31+24], X0
	012 Move [X31+32], X1
	013 Move V0, [X9]
	014 Move W10, W2
	015 ShiftRight W10, 30
	016 And W10, W10, 0x1FFFFFFF
	017 And X10, X10, 15
	018 Move [X31+8], D0
	019 Move V0, [X9]
	020 Move [X31+16], D0
	021 Move X0, [X31+8]
	022 Move X1, [X31+16]
	023 Move X8, [X8+40]
	024 Move X9, [X31+40]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X30, [X31+48]
	027 Add X31, X31, 64
	028 Return X0
	029 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 Select4(Unity.Burst.Intrinsics.v256 src1, Unity.Burst.Intrinsics.v256 src2, System.Int32 control)

Disassembly:
	0x037238A4 EOR W8, W8, 0x1
	0x037238A8 ORR W8, W0, W8, 0x0
	0x037238AC SUB W0, W20, W8
	0x037238B0 LDP X20, X19, [X31 + 0x40]
	0x037238B4 LDP X30, X21, [X31 + 0x30]
	0x037238B8 ADD X31, X31, 0x50
	0x037238BC RET
	0x037238C0 BL 0x3EB1B20
	0x037238C4 MOV X8, X31
	0x037238C8 LDR W9, [X0, X8, LSL]
	0x037238CC LDR W10, [X1, X8, LSL]
	0x037238D0 ANDS W31, W10, W9, 0x0
	0x037238D4 B.LT 0x37238EC
	0x037238D8 ADD X8, X8, 0x4
	0x037238DC CMP X8, 0x20
	0x037238E0 B.NE 0x37238C8
	0x037238E4 MOVZ W0, 0x1
	0x037238E8 RET
	0x037238EC MOV W0, W31
	0x037238F0 RET

ISIL:
	001 And W8, W2, 3
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Compare W8, 0
	005 JumpIfNotEqual {12}
	006 Add X8, X0, 8
	007 Add X8, X1, 8
	008 Move X0, X1
	009 Add X9, X0, 16
	010 Add X8, X0, 24
	011 Move X0, X9
	012 Add X0, X1, 16
	013 Add X8, X1, 24
	014 Move X1, [X8]
	015 Move X0, [X0]
	016 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_permute2f128_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x037238F4 MOV X8, X31
	0x037238F8 LDR W9, [X0, X8, LSL]
	0x037238FC LDR W10, [X1, X8, LSL]
	0x03723900 BICS W31, W10, W9, 0x0
	0x03723904 B.LT 0x372391C
	0x03723908 ADD X8, X8, 0x4
	0x0372390C CMP X8, 0x20
	0x03723910 B.NE 0x37238F8
	0x03723914 MOVZ W0, 0x1
	0x03723918 RET
	0x0372391C MOV W0, W31
	0x03723920 RET
	0x03723924 SUB X31, X31, 0xA0
	0x03723928 STR X30, [X31 + 0x90]
	0x0372392C MRS X8, 0xC000
	0x03723930 LDR X10, [X8 + 0x28]
	0x03723934 MOV X9, X31
	0x03723938 ADD X11, X31, 0x40
	0x0372393C STR X10, [X31 + 0x88]
	0x03723940 LDP V1, V0, [X0]
	0x03723944 ADD X10, X31, 0x60
	0x03723948 STP V1, V0, [X31 + 0x60]
	0x0372394C LDP V1, V0, [X1]
	0x03723950 STP V1, V0, [X31 + 0x40]
	0x03723954 LDR W12, [X10, X9, LSL]
	0x03723958 LDR W13, [X11, X9, LSL]
	0x0372395C ANDS W31, W13, W12, 0x0
	0x03723960 B.LT 0x3723978
	0x03723964 ADD X9, X9, 0x4
	0x03723968 CMP X9, 0x20
	0x0372396C B.NE 0x3723954
	0x03723970 MOVZ W9, 0x1
	0x03723974 B 0x372397C

ISIL:
	001 Move X9, [X0]
	002 Move X10, [X0+8]
	003 Move X11, [X0+16]
	004 Move X12, [X0+24]
	005 Move X16, [X1]
	006 Move X17, [X1+8]
	007 Move X13, [X1+16]
	008 Move X14, [X1+24]
	009 And W1, W2, 3
	010 Move X15, X9
	011 Move X0, X10
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X15, X16
	014 Move X0, X17
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X15, X11
	017 Move X0, X12
	018 Move X15, X13
	019 Move X0, X14
	020 Move W1, W2
	021 ShiftRight W1, 4
	022 And W1, W1, 31
	023 Compare W1, 0
	024 JumpIfEqual {33}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, X16
	027 Move X10, X17
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, X11
	030 Move X10, X12
	031 Move X9, X13
	032 Move X10, X14
	033 Move [X8], X15
	034 Move [X8+8], X0
	035 Move [X8+16], X9
	036 Move [X8+24], X10
	037 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_permute2f128_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x03723978 MOV W9, W31
	0x0372397C LDP V1, V0, [X0]
	0x03723980 MOV X10, X31
	0x03723984 ADD X11, X31, 0x20
	0x03723988 ADD X12, X31, 0x0
	0x0372398C STP V1, V0, [X31 + 0x20]
	0x03723990 LDP V1, V0, [X1]
	0x03723994 STP V1, V0, [X31]
	0x03723998 LDR W13, [X11, X10, LSL]
	0x0372399C LDR W14, [X12, X10, LSL]
	0x037239A0 BICS W31, W14, W13, 0x0
	0x037239A4 B.LT 0x37239BC
	0x037239A8 ADD X10, X10, 0x4
	0x037239AC CMP X10, 0x20
	0x037239B0 B.NE 0x3723998
	0x037239B4 MOVZ W10, 0x1
	0x037239B8 B 0x37239C0
	0x037239BC MOV W10, W31
	0x037239C0 LDR X8, [X8 + 0x28]
	0x037239C4 LDR X11, [X31 + 0x88]
	0x037239C8 CMP X8, X11
	0x037239CC B.NE 0x37239E4
	0x037239D0 LDR X30, [X31 + 0x90]
	0x037239D4 ORR W8, W10, W9, 0x0
	0x037239D8 EOR W0, W8, 0x1
	0x037239DC ADD X31, X31, 0xA0
	0x037239E0 RET
	0x037239E4 BL 0x3EB1B20
	0x037239E8 SUB X31, X31, 0x40
	0x037239EC STR X30, [X31 + 0x30]
	0x037239F0 MRS X8, 0xC000
	0x037239F4 LDR X11, [X8 + 0x28]
	0x037239F8 MOV X9, X31

ISIL:
	001 Move X9, [X0]
	002 Move X10, [X0+8]
	003 Move X11, [X0+16]
	004 Move X12, [X0+24]
	005 Move X16, [X1]
	006 Move X17, [X1+8]
	007 Move X13, [X1+16]
	008 Move X14, [X1+24]
	009 And W1, W2, 3
	010 Move X15, X9
	011 Move X0, X10
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X15, X16
	014 Move X0, X17
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X15, X11
	017 Move X0, X12
	018 Move X15, X13
	019 Move X0, X14
	020 Move W1, W2
	021 ShiftRight W1, 4
	022 And W1, W1, 31
	023 Compare W1, 0
	024 JumpIfEqual {33}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, X16
	027 Move X10, X17
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, X11
	030 Move X10, X12
	031 Move X9, X13
	032 Move X10, X14
	033 Move [X8], X15
	034 Move [X8+8], X0
	035 Move [X8+16], X9
	036 Move [X8+24], X10
	037 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_permute2f128_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x037239FC ADD X10, X31, 0x18
	0x03723A00 STR X11, [X31 + 0x28]
	0x03723A04 ADD X11, X31, 0x8
	0x03723A08 STP X0, X1, [X31 + 0x18]
	0x03723A0C STP X2, X3, [X31 + 0x8]
	0x03723A10 LDR W12, [X10, X9, LSL]
	0x03723A14 LDR W13, [X11, X9, LSL]
	0x03723A18 ANDS W31, W13, W12, 0x0
	0x03723A1C B.LT 0x3723A34
	0x03723A20 ADD X9, X9, 0x4
	0x03723A24 CMP X9, 0x10
	0x03723A28 B.NE 0x3723A10
	0x03723A2C MOVZ W0, 0x1
	0x03723A30 B 0x3723A38
	0x03723A34 MOV W0, W31
	0x03723A38 LDR X8, [X8 + 0x28]
	0x03723A3C LDR X9, [X31 + 0x28]
	0x03723A40 CMP X8, X9
	0x03723A44 B.NE 0x3723A54
	0x03723A48 LDR X30, [X31 + 0x30]
	0x03723A4C ADD X31, X31, 0x40
	0x03723A50 RET
	0x03723A54 BL 0x3EB1B20
	0x03723A58 SUB X31, X31, 0x40
	0x03723A5C STR X30, [X31 + 0x30]
	0x03723A60 MRS X8, 0xC000
	0x03723A64 LDR X11, [X8 + 0x28]
	0x03723A68 MOV X9, X31
	0x03723A6C ADD X10, X31, 0x18
	0x03723A70 STR X11, [X31 + 0x28]
	0x03723A74 ADD X11, X31, 0x8
	0x03723A78 STP X0, X1, [X31 + 0x18]
	0x03723A7C STP X2, X3, [X31 + 0x8]

ISIL:
	001 Move X9, [X0]
	002 Move X10, [X0+8]
	003 Move X11, [X0+16]
	004 Move X12, [X0+24]
	005 Move X16, [X1]
	006 Move X17, [X1+8]
	007 Move X13, [X1+16]
	008 Move X14, [X1+24]
	009 And W1, W2, 3
	010 Move X15, X9
	011 Move X0, X10
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X15, X16
	014 Move X0, X17
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X15, X11
	017 Move X0, X12
	018 Move X15, X13
	019 Move X0, X14
	020 Move W1, W2
	021 ShiftRight W1, 4
	022 And W1, W1, 31
	023 Compare W1, 0
	024 JumpIfEqual {33}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, X16
	027 Move X10, X17
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, X11
	030 Move X10, X12
	031 Move X9, X13
	032 Move X10, X14
	033 Move [X8], X15
	034 Move [X8+8], X0
	035 Move [X8+16], X9
	036 Move [X8+24], X10
	037 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcast_ss(System.Void* ptr)

Disassembly:
	0x03723A80 LDR W12, [X10, X9, LSL]
	0x03723A84 LDR W13, [X11, X9, LSL]
	0x03723A88 BICS W31, W13, W12, 0x0

ISIL:
	001 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v128 broadcast_ss(System.Void* ptr)

Disassembly:
	0x03723A8C B.LT 0x3723AA4
	0x03723A90 ADD X9, X9, 0x4
	0x03723A94 CMP X9, 0x10
	0x03723A98 B.NE 0x3723A80

ISIL:
	001 Move W0, [X0]
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move X1, X0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcast_sd(System.Void* ptr)

Disassembly:
	0x03723A9C MOVZ W0, 0x1
	0x03723AA0 B 0x3723AA8
	0x03723AA4 MOV W0, W31
	0x03723AA8 LDR X8, [X8 + 0x28]

ISIL:
	001 Move V0, [X0]
	002 Move [X8+16], D0
	003 Move [X8+24], D0
	004 Move [X8], D0
	005 Move [X8+8], D0
	006 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcast_ps(System.Void* ptr)

Disassembly:
	0x03723AAC LDR X9, [X31 + 0x28]
	0x03723AB0 CMP X8, X9
	0x03723AB4 B.NE 0x3723AC4
	0x03723AB8 LDR X30, [X31 + 0x30]

ISIL:
	001 Move X9, [X0]
	002 Move X10, [X0+8]
	003 Move [X8], X9
	004 Move [X8+8], X10
	005 Move [X8+16], X9
	006 Move [X8+24], X10
	007 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcast_pd(System.Void* ptr)

Disassembly:
	0x03723AC8 STP X30, X23, [X31 - 0x30]!
	0x03723ACC STP X22, X21, [X31 + 0x10]
	0x03723AD0 STP X20, X19, [X31 + 0x20]
	0x03723AD4 MOV X19, X3

ISIL:
	001 Move X9, [X0]
	002 Move X10, [X0+8]
	003 Move [X8], X9
	004 Move [X8+8], X10
	005 Move [X8+16], X9
	006 Move [X8+24], X10
	007 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_insertf128_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03723AD8 MOV X20, X2
	0x03723ADC MOV X21, X1
	0x03723AE0 MOV X22, X0
	0x03723AE4 BL 0x37239E8
	0x03723AE8 MOV W23, W0
	0x03723AEC MOV X0, X22
	0x03723AF0 MOV X1, X21
	0x03723AF4 MOV X2, X20
	0x03723AF8 MOV X3, X19
	0x03723AFC BL 0x3723A58
	0x03723B00 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move TEMP, X3
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfEqual {7}
	005 Move X9, [X0+16]
	006 Move X10, [X0+24]
	007 Move X11, [X0]
	008 Move X12, [X0+8]
	009 Move X9, X1
	010 Move X10, X2
	011 Move X1, X11
	012 Move X2, X12
	013 Move [X8], X1
	014 Move [X8+8], X2
	015 Move [X8+16], X9
	016 Move [X8+24], X10
	017 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_insertf128_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03723B04 LDP X22, X21, [X31 + 0x10]
	0x03723B08 ORR W8, W0, W23, 0x0
	0x03723B0C MOVZ W9, 0x1
	0x03723B10 SUB W0, W9, W8
	0x03723B14 LDP X30, X23, [X31], #0x30
	0x03723B18 RET
	0x03723B1C STP X30, X19, [X31 - 0x10]!
	0x03723B20 MOV X19, X0
	0x03723B24 LDR X0, [X0]
	0x03723B28 LDR X1, [X19 + 0x8]

ISIL:
	001 Move X9, [X0]
	002 Move X10, [X0+8]
	003 Move X11, [X0+16]
	004 Move X12, [X0+24]
	005 And W31, W3, 1
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move [X8], X9
	011 Move [X8+8], X10
	012 Move [X8+16], X11
	013 Move [X8+24], X12
	014 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_insertf128_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03723B2C MOV X2, X31
	0x03723B30 BL 0x372ECA4
	0x03723B34 LDP X8, X1, [X19 + 0x10]
	0x03723B38 MOV W19, W0
	0x03723B3C MOV X2, X31
	0x03723B40 MOV X0, X8
	0x03723B44 BL 0x372ECA4
	0x03723B48 ORR W0, W19, W0, 0x2
	0x03723B4C LDP X30, X19, [X31], #0x10
	0x03723B50 RET

ISIL:
	001 Move X9, [X0]
	002 Move X10, [X0+8]
	003 Move X11, [X0+16]
	004 Move X12, [X0+24]
	005 And W31, W3, 1
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move [X8], X9
	011 Move [X8+8], X10
	012 Move [X8+16], X11
	013 Move [X8+24], X12
	014 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_load_ps(System.Void* ptr)

Disassembly:
	0x03723B54 LDP X8, X9, [X0]
	0x03723B58 LDP X10, X11, [X0 + 0x10]
	0x03723B5C UBFM X12, X8, 0x3E, 0x3F

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void mm256_store_ps(System.Void* ptr, Unity.Burst.Intrinsics.v256 val)

Disassembly:
	0x03723B60 AND W12, W12, 0x2
	0x03723B64 ORR W8, W12, W8, 0x1F
	0x03723B68 UBFM X12, X10, 0x3E, 0x3F

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0], V1
	004 Move [X0+8], V0
	005 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_load_pd(System.Void* ptr)

Disassembly:
	0x03723B6C AND W12, W12, 0x2
	0x03723B70 ORR W10, W12, W10, 0x1F
	0x03723B74 UBFM X12, X9, 0x1D, 0x1F

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void mm256_store_pd(System.Void* ptr, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723B78 AND W12, W12, 0x4
	0x03723B7C ORR W8, W8, W12, 0x0
	0x03723B80 UBFM X12, X11, 0x1D, 0x1F

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0], V1
	004 Move [X0+8], V0
	005 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_loadu_pd(System.Void* ptr)

Disassembly:
	0x03723B84 AND W12, W12, 0x4
	0x03723B88 UBFM X9, X9, 0x3C, 0x3F
	0x03723B8C UBFM X11, X11, 0x3C, 0x3F

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void mm256_storeu_pd(System.Void* ptr, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723B90 ORR W10, W10, W12, 0x0
	0x03723B94 AND W9, W9, 0x8
	0x03723B98 AND W11, W11, 0x8

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0], V1
	004 Move [X0+8], V0
	005 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_loadu_ps(System.Void* ptr)

Disassembly:
	0x03723B9C ORR W0, W8, W9, 0x0
	0x03723BA0 ORR W8, W10, W11, 0x0
	0x03723BA4 BFM W0, W8, 0x1C, 0x3

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void mm256_storeu_ps(System.Void* ptr, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723BA8 RET
	0x03723BAC UBFM X8, X0, 0x3E, 0x3F
	0x03723BB0 UBFM X10, X1, 0x1D, 0x1F

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0], V1
	004 Move [X0+8], V0
	005 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_load_si256(System.Void* ptr)

Disassembly:
	0x03723BB4 AND W8, W8, 0x2
	0x03723BB8 UBFM X9, X1, 0x3C, 0x3F
	0x03723BBC AND W10, W10, 0x4

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void mm256_store_si256(System.Void* ptr, Unity.Burst.Intrinsics.v256 v)

Disassembly:
	0x03723BC0 ORR W8, W8, W0, 0x1F
	0x03723BC4 ORR W8, W8, W10, 0x0
	0x03723BC8 AND W9, W9, 0x8

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0], V1
	004 Move [X0+8], V0
	005 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_loadu_si256(System.Void* ptr)

Disassembly:
	0x03723BCC ORR W0, W8, W9, 0x0
	0x03723BD0 RET
	0x03723BD4 MOVI V0.2D, 0x0

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void mm256_storeu_si256(System.Void* ptr, Unity.Burst.Intrinsics.v256 v)

Disassembly:
	0x03723BD8 STP V0, V0, [X8]
	0x03723BDC RET
	0x03723BE0 MOVI V0.2D, 0x0

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0], V1
	004 Move [X0+8], V0
	005 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_loadu2_m128(System.Void* hiaddr, System.Void* loaddr)

Disassembly:
	0x03723BE4 STP V0, V0, [X8]
	0x03723BE8 RET
	0x03723BEC MOVI V0.2D, 0x0
	0x03723BF0 STP V0, V0, [X8]

ISIL:
	001 Move V0, [X1]
	002 Move V1, [X0]
	003 Move [X8], V0
	004 Move [X8+8], V1
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_loadu2_m128d(System.Void* hiaddr, System.Void* loaddr)

Disassembly:
	0x03723C00 RET
	0x03723C04 STP S7, S6, [X8]
	0x03723C08 STP S5, S4, [X8 + 0x8]
	0x03723C0C STP S3, S2, [X8 + 0x10]

ISIL:
	001 Move V0, [X1]
	002 Move V1, [X0]
	003 Move [X8], V0
	004 Move [X8+8], V1
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_loadu2_m128i(System.Void* hiaddr, System.Void* loaddr)

Disassembly:
	0x03723C10 STP S1, S0, [X8 + 0x18]
	0x03723C14 RET
	0x03723C18 LDRB W10, [X31 + 0xB8]
	0x03723C1C LDRB W11, [X31 + 0xB0]

ISIL:
	001 Move V0, [X1]
	002 Move V1, [X0]
	003 Move [X8], V0
	004 Move [X8+8], V1
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set_m128(Unity.Burst.Intrinsics.v128 hi, Unity.Burst.Intrinsics.v128 lo)

Disassembly:
	0x03723BF4 RET
	0x03723BF8 STP D3, D2, [X8]
	0x03723BFC STP D1, D0, [X8 + 0x10]

ISIL:
	001 Move [X8], X2
	002 Move [X8+8], X3
	003 Move [X8+16], X0
	004 Move [X8+24], X1
	005 Return X0

Method: System.Void mm256_storeu2_m128(System.Void* hiaddr, System.Void* loaddr, Unity.Burst.Intrinsics.v256 val)

Disassembly:
	0x03723C20 LDRB W12, [X31 + 0xA8]
	0x03723C24 LDRB W9, [X31 + 0x8]
	0x03723C28 STRB W10, [X8]
	0x03723C2C LDRB W10, [X31 + 0xA0]
	0x03723C30 STRB W11, [X8 + 0x1]

ISIL:
	001 Move V0, [X2+1]
	002 Move [X0], V0
	003 Move V0, [X2]
	004 Move [X1], V0
	005 Return 

Method: System.Void mm256_storeu2_m128d(System.Void* hiaddr, System.Void* loaddr, Unity.Burst.Intrinsics.v256 val)

Disassembly:
	0x03723C3C LDRB W12, [X31 + 0x90]
	0x03723C40 STRB W10, [X8 + 0x3]
	0x03723C44 LDRB W10, [X31 + 0x88]
	0x03723C48 STRB W11, [X8 + 0x4]
	0x03723C4C LDRB W11, [X31 + 0x80]

ISIL:
	001 Move V0, [X2+1]
	002 Move [X0], V0
	003 Move V0, [X2]
	004 Move [X1], V0
	005 Return 

Method: System.Void mm256_storeu2_m128i(System.Void* hiaddr, System.Void* loaddr, Unity.Burst.Intrinsics.v256 val)

Disassembly:
	0x03723C50 STRB W12, [X8 + 0x5]
	0x03723C54 LDRB W12, [X31 + 0x78]
	0x03723C58 STRB W10, [X8 + 0x6]
	0x03723C5C LDRB W10, [X31 + 0x70]
	0x03723C60 STRB W11, [X8 + 0x7]

ISIL:
	001 Move V0, [X2+1]
	002 Move [X0], V0
	003 Move V0, [X2]
	004 Move [X1], V0
	005 Return 

Method: Unity.Burst.Intrinsics.v128 maskload_pd(System.Void* mem_addr, Unity.Burst.Intrinsics.v128 mask)

Disassembly:
	0x03723C64 LDRB W11, [X31 + 0x68]
	0x03723C68 STRB W12, [X8 + 0x8]
	0x03723C6C LDRB W12, [X31 + 0x60]
	0x03723C70 STRB W10, [X8 + 0x9]
	0x03723C74 LDRB W10, [X31 + 0x58]
	0x03723C78 STRB W11, [X8 + 0xA]
	0x03723C7C LDRB W11, [X31 + 0x50]
	0x03723C80 STRB W12, [X8 + 0xB]
	0x03723C84 LDRB W12, [X31 + 0x48]
	0x03723C88 STRB W10, [X8 + 0xC]

ISIL:
	001 Move X8, X0
	002 Move TEMP, X1
	003 And TEMP, TEMP, 1
	004 Compare TEMP, 1
	005 JumpIfEqual {13}
	006 Move X0, X31
	007 Move TEMP, X2
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {18}
	011 Move X1, X31
	012 Return X0
	013 Move X0, [X8]
	014 Move TEMP, X2
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {11}
	018 Move X1, [X8+8]
	019 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_maskload_pd(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 mask)

Disassembly:
	0x03723C8C LDRB W10, [X31 + 0x40]
	0x03723C90 STRB W11, [X8 + 0xD]
	0x03723C94 LDRB W11, [X31 + 0x38]
	0x03723C98 STRB W12, [X8 + 0xE]
	0x03723C9C LDRB W12, [X31 + 0x30]
	0x03723CA0 STRB W10, [X8 + 0xF]
	0x03723CA4 LDRB W10, [X31 + 0x28]
	0x03723CA8 STRB W11, [X8 + 0x10]
	0x03723CAC LDRB W11, [X31 + 0x20]
	0x03723CB0 STRB W12, [X8 + 0x11]
	0x03723CB4 LDRB W12, [X31 + 0x18]
	0x03723CB8 STRB W10, [X8 + 0x12]
	0x03723CBC LDRB W10, [X31 + 0x10]
	0x03723CC0 STRB W11, [X8 + 0x13]
	0x03723CC4 LDRB W11, [X31]
	0x03723CC8 STRB W7, [X8 + 0x18]
	0x03723CCC STRB W6, [X8 + 0x19]
	0x03723CD0 STRB W5, [X8 + 0x1A]
	0x03723CD4 STRB W4, [X8 + 0x1B]
	0x03723CD8 STRB W3, [X8 + 0x1C]
	0x03723CDC STRB W2, [X8 + 0x1D]

ISIL:
	001 Move X9, [X1]
	002 Move X10, [X1+8]
	003 Move TEMP, X9
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfEqual {13}
	007 Move X9, X31
	008 Move TEMP, X10
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {18}
	012 Move X10, X31
	013 Move X9, [X0]
	014 Move TEMP, X10
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {12}
	018 Move X10, [X0+8]
	019 Move X11, [X1+16]
	020 Move X12, [X1+24]
	021 Move TEMP, X11
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {31}
	025 Move X11, X31
	026 Move TEMP, X12
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {36}
	030 Move X12, X31
	031 Move X11, [X0+16]
	032 Move TEMP, X12
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {30}
	036 Move X12, [X0+24]
	037 Move [X8], X9
	038 Move [X8+8], X10
	039 Move [X8+16], X11
	040 Move [X8+24], X12
	041 Return X0

Method: System.Void maskstore_pd(System.Void* mem_addr, Unity.Burst.Intrinsics.v128 mask, Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03723CE0 STRB W1, [X8 + 0x1E]
	0x03723CE4 STRB W12, [X8 + 0x14]
	0x03723CE8 STRB W10, [X8 + 0x15]
	0x03723CEC STRB W9, [X8 + 0x16]
	0x03723CF0 STRB W11, [X8 + 0x17]
	0x03723CF4 STRB W0, [X8 + 0x1F]
	0x03723CF8 RET

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfEqual {10}
	005 Move TEMP, X2
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {15}
	009 Return 
	010 Move [X0], X3
	011 Move TEMP, X2
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {9}
	015 Move [X0+8], X4
	016 Return 

Method: System.Void mm256_maskstore_pd(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 mask, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723CFC LDRH W9, [X31]
	0x03723D00 LDRH W10, [X31 + 0x8]
	0x03723D04 LDRH W11, [X31 + 0x10]
	0x03723D08 LDRH W12, [X31 + 0x18]
	0x03723D0C LDRH W13, [X31 + 0x20]
	0x03723D10 LDRH W14, [X31 + 0x28]
	0x03723D14 LDRH W15, [X31 + 0x30]
	0x03723D18 LDRH W16, [X31 + 0x38]
	0x03723D1C STRH W7, [X8 + 0x10]
	0x03723D20 STRH W6, [X8 + 0x12]
	0x03723D24 STRH W5, [X8 + 0x14]
	0x03723D28 STRH W4, [X8 + 0x16]
	0x03723D2C STRH W3, [X8 + 0x18]
	0x03723D30 STRH W2, [X8 + 0x1A]
	0x03723D34 STRH W1, [X8 + 0x1C]
	0x03723D38 STRH W16, [X8]
	0x03723D3C STRH W15, [X8 + 0x2]
	0x03723D40 STRH W14, [X8 + 0x4]
	0x03723D44 STRH W13, [X8 + 0x6]

ISIL:
	001 Move X10, [X1]
	002 Move X9, [X1+8]
	003 Move X8, [X2+8]
	004 Move TEMP, X10
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {24}
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {30}
	012 Move X10, [X1+16]
	013 Move X9, [X1+24]
	014 Move X8, [X2+24]
	015 Move TEMP, X10
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {31}
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Return 
	024 Move X10, [X2]
	025 Move [X0], X10
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {12}
	030 Move [X0+8], X8
	031 Move X10, [X2+16]
	032 Move [X0+16], X10
	033 Move TEMP, X9
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {23}
	037 Move [X0+24], X8
	038 Return 

Method: Unity.Burst.Intrinsics.v128 maskload_ps(System.Void* mem_addr, Unity.Burst.Intrinsics.v128 mask)

Disassembly:
	0x03723D48 STRH W12, [X8 + 0x8]
	0x03723D4C STRH W11, [X8 + 0xA]
	0x03723D50 STRH W10, [X8 + 0xC]
	0x03723D54 STRH W9, [X8 + 0xE]
	0x03723D58 STRH W0, [X8 + 0x1E]
	0x03723D5C RET
	0x03723D60 STP W7, W6, [X8]
	0x03723D64 STP W5, W4, [X8 + 0x8]
	0x03723D68 STP W3, W2, [X8 + 0x10]
	0x03723D6C STP W1, W0, [X8 + 0x18]
	0x03723D70 RET
	0x03723D74 STP X3, X2, [X8]
	0x03723D78 STP X1, X0, [X8 + 0x10]
	0x03723D7C RET
	0x03723D80 STP X2, X3, [X8]
	0x03723D84 STP X0, X1, [X8 + 0x10]
	0x03723D88 RET
	0x03723D8C STP X2, X3, [X8]
	0x03723D90 STP X0, X1, [X8 + 0x10]
	0x03723D94 RET

ISIL:
	001 Move X9, X1
	002 ShiftRight X9, 32
	003 And X9, X9, 0x7FFFFFFF
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {27}
	008 Move X8, X31
	009 Move TEMP, X9
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {32}
	013 Move X9, X31
	014 Move TEMP, X2
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {40}
	018 Move X1, X31
	019 Move TEMP, X2
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {25}
	023 Move W10, [X0+12]
	024 NotImplemented "Instruction BFM not yet implemented."
	025 Or X0, X9, X8
	026 Return X0
	027 Move W8, [X0]
	028 Move TEMP, X9
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfNotEqual {13}
	032 Move W9, [X0+4]
	033 Move X9, X9
	034 ShiftRight X9, 32
	035 And X9, X9, 0x7FFFFFFF
	036 Move TEMP, X2
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfNotEqual {18}
	040 Move W1, [X0+8]
	041 Move TEMP, X2
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {25}

Method: Unity.Burst.Intrinsics.v256 mm256_maskload_ps(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 mask)

Disassembly:
	0x03723D98 STP D0, D1, [X8]
	0x03723D9C STP D2, D3, [X8 + 0x10]
	0x03723DA0 RET
	0x03723DA4 STP S0, S1, [X8]
	0x03723DA8 STP S2, S3, [X8 + 0x8]
	0x03723DAC STP S4, S5, [X8 + 0x10]
	0x03723DB0 STP S6, S7, [X8 + 0x18]
	0x03723DB4 RET
	0x03723DB8 LDRB W10, [X31]
	0x03723DBC LDRB W11, [X31 + 0x8]
	0x03723DC0 LDRB W12, [X31 + 0x10]
	0x03723DC4 LDRB W9, [X31 + 0xB0]
	0x03723DC8 STRB W10, [X8 + 0x8]
	0x03723DCC LDRB W10, [X31 + 0x18]
	0x03723DD0 STRB W11, [X8 + 0x9]
	0x03723DD4 LDRB W11, [X31 + 0x20]
	0x03723DD8 STRB W12, [X8 + 0xA]
	0x03723DDC LDRB W12, [X31 + 0x28]
	0x03723DE0 STRB W10, [X8 + 0xB]
	0x03723DE4 LDRB W10, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X1
	008 Move X1, [X1]
	009 Move X2, [X19+8]
	010 Move X20, X0
	011 Move X21, X8
	012 Call Avx.maskload_ps, X0, X1
	013 Move X23, X1
	014 Move X1, [X19+16]
	015 Move X2, [X19+24]
	016 Move X22, X0
	017 Add X0, X20, 16
	018 Call Avx.maskload_ps, X0, X1
	019 Move [X21], X22
	020 Move [X21+8], X23
	021 Move [X21+16], X0
	022 Move [X21+24], X1
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Move X23, [X31+56]
	029 Return X0

Method: System.Void maskstore_ps(System.Void* mem_addr, Unity.Burst.Intrinsics.v128 mask, Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03723DE8 STRB W11, [X8 + 0xC]
	0x03723DEC LDRB W11, [X31 + 0x38]
	0x03723DF0 STRB W12, [X8 + 0xD]
	0x03723DF4 LDRB W12, [X31 + 0x40]
	0x03723DF8 STRB W10, [X8 + 0xE]
	0x03723DFC LDRB W10, [X31 + 0x48]
	0x03723E00 STRB W11, [X8 + 0xF]
	0x03723E04 LDRB W11, [X31 + 0x50]
	0x03723E08 STRB W12, [X8 + 0x10]
	0x03723E0C LDRB W12, [X31 + 0x58]
	0x03723E10 STRB W10, [X8 + 0x11]
	0x03723E14 LDRB W10, [X31 + 0x60]
	0x03723E18 STRB W11, [X8 + 0x12]
	0x03723E1C LDRB W11, [X31 + 0x68]
	0x03723E20 STRB W12, [X8 + 0x13]
	0x03723E24 LDRB W12, [X31 + 0x70]

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {21}
	008 Move TEMP, X8
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {26}
	012 Move TEMP, X2
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {34}
	016 Move TEMP, X2
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {39}
	020 Return 
	021 Move [X0], W3
	022 Move TEMP, X8
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfNotEqual {12}
	026 Move X8, X3
	027 ShiftRight X8, 32
	028 And X8, X8, 0x7FFFFFFF
	029 Move [X0+4], W8
	030 Move TEMP, X2
	031 And TEMP, TEMP, -2147483648
	032 Compare TEMP, -2147483648
	033 JumpIfNotEqual {16}
	034 Move [X0+8], W4
	035 Move TEMP, X2
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {20}
	039 Move X8, X4
	040 ShiftRight X8, 32
	041 And X8, X8, 0x7FFFFFFF
	042 Move [X0+12], W8
	043 Return 

Method: System.Void mm256_maskstore_ps(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 mask, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723E28 STRB W10, [X8 + 0x14]
	0x03723E2C LDRB W10, [X31 + 0x78]
	0x03723E30 STRB W11, [X8 + 0x15]
	0x03723E34 LDRB W11, [X31 + 0x80]
	0x03723E38 STRB W12, [X8 + 0x16]
	0x03723E3C LDRB W12, [X31 + 0x88]
	0x03723E40 STRB W10, [X8 + 0x17]
	0x03723E44 LDRB W10, [X31 + 0x90]
	0x03723E48 STRB W11, [X8 + 0x18]
	0x03723E4C LDRB W11, [X31 + 0x98]
	0x03723E50 STRB W12, [X8 + 0x19]
	0x03723E54 LDRB W12, [X31 + 0xA0]
	0x03723E58 STRB W10, [X8 + 0x1A]
	0x03723E5C LDRB W10, [X31 + 0xA8]
	0x03723E60 STRB W11, [X8 + 0x1B]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Move X20, X1
	007 Move X1, [X1]
	008 Move X2, [X20+8]
	009 Move X3, [X19]
	010 Move X4, [X19+8]
	011 Move X21, X0
	012 Call Avx.maskstore_ps, X0, X1, X2
	013 Move X1, [X20+16]
	014 Move X2, [X20+24]
	015 Move X3, [X19+16]
	016 Move X4, [X19+24]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Add X0, X21, 16
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call Avx.maskstore_ps, X0, X1, X2
	023 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_movehdup_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723E64 LDRB W11, [X31 + 0xB8]
	0x03723E68 STRB W0, [X8]
	0x03723E6C STRB W1, [X8 + 0x1]
	0x03723E70 STRB W2, [X8 + 0x2]
	0x03723E74 STRB W3, [X8 + 0x3]
	0x03723E78 STRB W4, [X8 + 0x4]
	0x03723E7C STRB W5, [X8 + 0x5]
	0x03723E80 STRB W6, [X8 + 0x6]
	0x03723E84 STRB W7, [X8 + 0x7]

ISIL:
	001 Move W9, [X0+4]
	002 Move W10, [X0+12]
	003 Move W11, [X0+20]
	004 Move W12, [X0+28]
	005 Move [X8], W9
	006 Move [X8+4], W9
	007 Move [X8+8], W10
	008 Move [X8+12], W10
	009 Move [X8+16], W11
	010 Move [X8+20], W11
	011 Move [X8+24], W12
	012 Move [X8+28], W12
	013 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_moveldup_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723E88 STRB W12, [X8 + 0x1C]
	0x03723E8C STRB W10, [X8 + 0x1D]
	0x03723E90 STRB W9, [X8 + 0x1E]
	0x03723E94 STRB W11, [X8 + 0x1F]
	0x03723E98 RET
	0x03723E9C LDRH W9, [X31 + 0x38]
	0x03723EA0 LDRH W10, [X31 + 0x30]
	0x03723EA4 LDRH W11, [X31 + 0x28]
	0x03723EA8 LDRH W12, [X31 + 0x20]

ISIL:
	001 Move W9, [X0]
	002 Move W10, [X0+8]
	003 Move W11, [X0+16]
	004 Move W12, [X0+24]
	005 Move [X8], W9
	006 Move [X8+4], W9
	007 Move [X8+8], W10
	008 Move [X8+12], W10
	009 Move [X8+16], W11
	010 Move [X8+20], W11
	011 Move [X8+24], W12
	012 Move [X8+28], W12
	013 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_movedup_pd(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723EAC LDRH W13, [X31 + 0x18]
	0x03723EB0 LDRH W14, [X31 + 0x10]
	0x03723EB4 LDRH W15, [X31 + 0x8]
	0x03723EB8 LDRH W16, [X31]
	0x03723EBC STRH W0, [X8]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move [X8], D0
	004 Move [X8+8], D0
	005 Move [X8+16], D1
	006 Move [X8+24], D1
	007 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_lddqu_si256(System.Void* mem_addr)

Disassembly:
	0x03723EC0 STRH W1, [X8 + 0x2]
	0x03723EC4 STRH W2, [X8 + 0x4]
	0x03723EC8 STRH W3, [X8 + 0x6]

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void mm256_stream_si256(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723ECC STRH W4, [X8 + 0x8]
	0x03723ED0 STRH W5, [X8 + 0xA]
	0x03723ED4 STRH W6, [X8 + 0xC]

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0], V1
	004 Move [X0+8], V0
	005 Return 

Method: System.Void mm256_stream_pd(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723ED8 STRH W7, [X8 + 0xE]
	0x03723EDC STRH W16, [X8 + 0x10]
	0x03723EE0 STRH W15, [X8 + 0x12]

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0], V1
	004 Move [X0+8], V0
	005 Return 

Method: System.Void mm256_stream_ps(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723EE4 STRH W14, [X8 + 0x14]
	0x03723EE8 STRH W13, [X8 + 0x16]
	0x03723EEC STRH W12, [X8 + 0x18]

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0], V1
	004 Move [X0+8], V0
	005 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_rcp_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723EF0 STRH W11, [X8 + 0x1A]
	0x03723EF4 STRH W10, [X8 + 0x1C]
	0x03723EF8 STRH W9, [X8 + 0x1E]
	0x03723EFC RET
	0x03723F00 STP W0, W1, [X8]
	0x03723F04 STP W2, W3, [X8 + 0x8]
	0x03723F08 STP W4, W5, [X8 + 0x10]
	0x03723F0C STP W6, W7, [X8 + 0x18]
	0x03723F10 RET
	0x03723F14 STP X0, X1, [X8]
	0x03723F18 STP X2, X3, [X8 + 0x10]
	0x03723F1C RET
	0x03723F20 STP X0, X1, [X8]
	0x03723F24 STP X2, X3, [X8 + 0x10]
	0x03723F28 RET
	0x03723F2C STP X0, X1, [X8]
	0x03723F30 STP X2, X3, [X8 + 0x10]
	0x03723F34 RET

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, 0
	004 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	005 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	006 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	007 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	008 NotImplemented "Instruction INVALID not yet implemented."
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction INVALID not yet implemented."
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	016 Or V0, V0, V2
	017 Or V1, V1, V3
	018 Move [X8], V0
	019 Move [X8+8], V1
	020 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_rsqrt_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03723F70 RET
	0x03723F74 UNIMPLEMENTED
	0x03723F78 STP V0, V0, [X8]
	0x03723F7C RET
	0x03723F80 UNIMPLEMENTED
	0x03723F84 STP V0, V0, [X8]
	0x03723F88 RET
	0x03723F8C STP X0, X0, [X8 + 0x10]
	0x03723F90 STP X0, X0, [X8]
	0x03723F94 RET
	0x03723F98 LDP V1, V0, [X0]
	0x03723F9C STP V1, V0, [X8]
	0x03723FA0 RET
	0x03723FA4 LDP V1, V0, [X0]
	0x03723FA8 STP V1, V0, [X8]
	0x03723FAC RET
	0x03723FB0 LDP V1, V0, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, [X19+8]
	008 Move X20, X8
	009 Call Sse.rsqrt_ps, X0
	010 Move X21, X0
	011 Move X0, [X19+16]
	012 Move X8, [X19+24]
	013 Move X19, X1
	014 Move X1, X8
	015 Call Sse.rsqrt_ps, X0
	016 Move [X20], X21
	017 Move [X20+8], X19
	018 Move [X20+16], X0
	019 Move [X20+24], X1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sqrt_pd(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x0372404C MOV X0, X31
	0x03724050 MOV X1, X31
	0x03724054 RET
	0x03724058 MOVI V0.2D, 0x0
	0x0372405C STP V0, V0, [X8]
	0x03724060 RET
	0x03724064 MOVI V0.2D, 0x0
	0x03724068 STP V0, V0, [X8]
	0x0372406C RET
	0x03724070 MOVI V0.2D, 0x0
	0x03724074 STP V0, V0, [X8]
	0x03724078 RET
	0x0372407C STP X0, X1, [X8]
	0x03724080 STP X31, X31, [X8 + 0x10]
	0x03724084 RET
	0x03724088 STP X31, X31, [X8 + 0x10]
	0x0372408C STP X0, X1, [X8]
	0x03724090 RET
	0x03724094 STP X31, X31, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, [X19+8]
	008 Move X2, X31
	009 Move X20, X8
	010 Call Sse2.sqrt_pd, X0
	011 Move X21, X0
	012 Move X0, [X19+16]
	013 Move X8, [X19+24]
	014 Move X19, X1
	015 Move X2, X31
	016 Move X1, X8
	017 Call Sse2.sqrt_pd, X0
	018 Move [X20], X21
	019 Move [X20+8], X19
	020 Move [X20+16], X0
	021 Move [X20+24], X1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sqrt_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724098 STP X0, X1, [X8]
	0x0372409C RET
	0x037240A0 SUB X31, X31, 0x40
	0x037240A4 STR X30, [X31 + 0x30]
	0x037240A8 MRS X9, 0xC000
	0x037240AC LDR X10, [X9 + 0x28]
	0x037240B0 ADD X11, X31, 0x0
	0x037240B4 STR X10, [X31 + 0x28]
	0x037240B8 LDP V1, V0, [X0]
	0x037240BC AND X10, X2, 0x1F
	0x037240C0 STP V1, V0, [X31]
	0x037240C4 STRB W1, [X11, X10, LSL]
	0x037240C8 LDP V1, V0, [X31]
	0x037240CC STP V1, V0, [X8]
	0x037240D0 LDR X8, [X9 + 0x28]
	0x037240D4 LDR X9, [X31 + 0x28]
	0x037240D8 CMP X8, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, [X19+8]
	008 Move X20, X8
	009 Call Sse.sqrt_ps, X0
	010 Move X21, X0
	011 Move X0, [X19+16]
	012 Move X8, [X19+24]
	013 Move X19, X1
	014 Move X1, X8
	015 Call Sse.sqrt_ps, X0
	016 Move [X20], X21
	017 Move [X20+8], X19
	018 Move [X20+16], X0
	019 Move [X20+24], X1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_round_pd(Unity.Burst.Intrinsics.v256 a, System.Int32 rounding)

Disassembly:
	0x03724168 STP V0, V1, [X31]
	0x0372416C STR W1, [X11, X10, LSL]
	0x03724170 LDP V1, V0, [X31]
	0x03724174 STP V1, V0, [X8]
	0x03724178 LDR X8, [X9 + 0x28]
	0x0372417C LDR X9, [X31 + 0x28]
	0x03724180 CMP X8, X9
	0x03724184 B.NE 0x3724194
	0x03724188 LDR X30, [X31 + 0x30]
	0x0372418C ADD X31, X31, 0x40
	0x03724190 RET
	0x03724194 BL 0x3EB1B20
	0x03724198 SUB X31, X31, 0x40
	0x0372419C STR X30, [X31 + 0x30]
	0x037241A0 MRS X9, 0xC000
	0x037241A4 LDR X10, [X9 + 0x28]
	0x037241A8 ADD X11, X31, 0x0
	0x037241AC STR X10, [X31 + 0x28]
	0x037241B0 LDP V0, V1, [X0]
	0x037241B4 UBFM W10, W2, 0x1D, 0x1C
	0x037241B8 AND X10, X10, 0x1F
	0x037241BC STP V0, V1, [X31]
	0x037241C0 STR X1, [X11, X10, LSL]
	0x037241C4 LDP V1, V0, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse4_1.round_pd, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse4_1.round_pd, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_ceil_pd(Unity.Burst.Intrinsics.v256 val)

Disassembly:
	0x037241C8 STP V1, V0, [X8]
	0x037241CC LDR X8, [X9 + 0x28]
	0x037241D0 LDR X9, [X31 + 0x28]
	0x037241D4 CMP X8, X9
	0x037241D8 B.NE 0x37241E8
	0x037241DC LDR X30, [X31 + 0x30]
	0x037241E0 ADD X31, X31, 0x40
	0x037241E4 RET
	0x037241E8 BL 0x3EB1B20
	0x037241EC UBFM W8, W1, 0x1E, 0x1D
	0x037241F0 AND X8, X8, 0x1F
	0x037241F4 LDR W0, [X8, X0, LSL]
	0x037241F8 RET
	0x037241FC UBFM W8, W1, 0x1D, 0x1C
	0x03724200 AND X8, X8, 0x1F
	0x03724204 LDR X0, [X8, X0, LSL]
	0x03724208 RET
	0x0372420C MOV W0, W31
	0x03724210 RET
	0x03724214 MOV X8, X0
	0x03724218 MOV X9, X31
	0x0372421C MOV W0, W31
	0x03724220 MOVZ W10, 0x1
	0x03724224 LDRB W11, [X8, X9, LSL]
	0x03724228 ADD X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X19, X8
	007 Move X8, [X20+40]
	008 Move W1, 2
	009 Move [X31+72], X8
	010 Move V1, [X0]
	011 Move V0, [X0+16]
	012 Add X8, X31, 40
	013 Add X0, X31, 0
	014 Move [X31], V1
	015 Move [X31+8], V0
	016 Call Avx.mm256_round_pd, X0, X1
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move [X19], V1
	020 Move [X19+8], V0
	021 Move X8, [X20+40]
	022 Move X9, [X31+72]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X20, [X31+96]
	025 Move X19, [X31+104]
	026 Move X30, [X31+80]
	027 Add X31, X31, 112
	028 Return X0
	029 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_floor_pd(Unity.Burst.Intrinsics.v256 val)

Disassembly:
	0x0372422C CMP X9, 0x20
	0x03724230 UBFM W11, W11, 0x7, 0x1F
	0x03724234 MUL W11, W10, W11
	0x03724238 ORR W0, W11, W0, 0x0
	0x0372423C UBFM W10, W10, 0x1F, 0x1E
	0x03724240 B.NE 0x3724224
	0x03724244 RET
	0x03724248 AND X8, X1, 0x1F
	0x0372424C LDRB W0, [X8, X0, LSL]
	0x03724250 RET
	0x03724254 UBFM W8, W1, 0x1F, 0x1E
	0x03724258 AND X8, X8, 0x1F
	0x0372425C LDRH W0, [X8, X0, LSL]
	0x03724260 RET
	0x03724264 LDR V0, [X0]
	0x03724268 RET
	0x0372426C LDR W0, [X0]
	0x03724270 RET
	0x03724274 LDR X0, [X0]
	0x03724278 RET
	0x0372427C STR X30, [X31 - 0x30]!
	0x03724280 STP X22, X21, [X31 + 0x10]
	0x03724284 STP X20, X19, [X31 + 0x20]
	0x03724288 MOV X19, X1
	0x0372428C MOV X20, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X19, X8
	007 Move X8, [X20+40]
	008 Move W1, 1
	009 Move [X31+72], X8
	010 Move V1, [X0]
	011 Move V0, [X0+16]
	012 Add X8, X31, 40
	013 Add X0, X31, 0
	014 Move [X31], V1
	015 Move [X31+8], V0
	016 Call Avx.mm256_round_pd, X0, X1
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move [X19], V1
	020 Move [X19+8], V0
	021 Move X8, [X20+40]
	022 Move X9, [X31+72]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X20, [X31+96]
	025 Move X19, [X31+104]
	026 Move X30, [X31+80]
	027 Add X31, X31, 112
	028 Return X0
	029 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_round_ps(Unity.Burst.Intrinsics.v256 a, System.Int32 rounding)

Disassembly:
	0x03724290 LDR X0, [X0]
	0x03724294 LDR X1, [X20 + 0x8]
	0x03724298 LDP X2, X3, [X19]
	0x0372429C MOV X4, X31
	0x037242A0 MOV X21, X8
	0x037242A4 BL 0x372CF20
	0x037242A8 MOV X22, X0
	0x037242AC LDP X0, X8, [X20 + 0x10]
	0x037242B0 LDP X2, X3, [X19 + 0x10]
	0x037242B4 MOV X19, X1
	0x037242B8 MOV X4, X31
	0x037242BC MOV X1, X8
	0x037242C0 BL 0x372CF20
	0x037242C4 STP X22, X19, [X21]
	0x037242C8 STP X0, X1, [X21 + 0x10]
	0x037242CC LDP X20, X19, [X31 + 0x20]
	0x037242D0 LDP X22, X21, [X31 + 0x10]
	0x037242D4 LDR X30, [X31], #0x30
	0x037242D8 RET
	0x037242DC STR X30, [X31 - 0x30]!
	0x037242E0 STP X22, X21, [X31 + 0x10]
	0x037242E4 STP X20, X19, [X31 + 0x20]
	0x037242E8 MOV X19, X1
	0x037242EC MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse4_1.round_ps, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse4_1.round_ps, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_ceil_ps(Unity.Burst.Intrinsics.v256 val)

Disassembly:
	0x037242F0 LDR X0, [X0]
	0x037242F4 LDR X1, [X20 + 0x8]
	0x037242F8 LDP X2, X3, [X19]
	0x037242FC MOV X4, X31
	0x03724300 MOV X21, X8
	0x03724304 BL 0x372CF94
	0x03724308 MOV X22, X0
	0x0372430C LDP X0, X8, [X20 + 0x10]
	0x03724310 LDP X2, X3, [X19 + 0x10]
	0x03724314 MOV X19, X1
	0x03724318 MOV X4, X31
	0x0372431C MOV X1, X8
	0x03724320 BL 0x372CF94
	0x03724324 STP X22, X19, [X21]
	0x03724328 STP X0, X1, [X21 + 0x10]
	0x0372432C LDP X20, X19, [X31 + 0x20]
	0x03724330 LDP X22, X21, [X31 + 0x10]
	0x03724334 LDR X30, [X31], #0x30
	0x03724338 RET
	0x0372433C STR X30, [X31 - 0x30]!
	0x03724340 STP X22, X21, [X31 + 0x10]
	0x03724344 STP X20, X19, [X31 + 0x20]
	0x03724348 MOV X19, X1
	0x0372434C MOV X20, X0
	0x03724350 LDR X0, [X0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X19, X8
	007 Move X8, [X20+40]
	008 Move W1, 2
	009 Move [X31+72], X8
	010 Move V1, [X0]
	011 Move V0, [X0+16]
	012 Add X8, X31, 40
	013 Add X0, X31, 0
	014 Move [X31], V1
	015 Move [X31+8], V0
	016 Call Avx.mm256_round_ps, X0, X1
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move [X19], V1
	020 Move [X19+8], V0
	021 Move X8, [X20+40]
	022 Move X9, [X31+72]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X20, [X31+96]
	025 Move X19, [X31+104]
	026 Move X30, [X31+80]
	027 Add X31, X31, 112
	028 Return X0
	029 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_floor_ps(Unity.Burst.Intrinsics.v256 val)

Disassembly:
	0x03724354 LDR X1, [X20 + 0x8]
	0x03724358 LDP X2, X3, [X19]
	0x0372435C MOV X4, X31
	0x03724360 MOV X21, X8
	0x03724364 BL 0x372D008
	0x03724368 MOV X22, X0
	0x0372436C LDP X0, X8, [X20 + 0x10]
	0x03724370 LDP X2, X3, [X19 + 0x10]
	0x03724374 MOV X19, X1
	0x03724378 MOV X4, X31
	0x0372437C MOV X1, X8
	0x03724380 BL 0x372D008
	0x03724384 STP X22, X19, [X21]
	0x03724388 STP X0, X1, [X21 + 0x10]
	0x0372438C LDP X20, X19, [X31 + 0x20]
	0x03724390 LDP X22, X21, [X31 + 0x10]
	0x03724394 LDR X30, [X31], #0x30
	0x03724398 RET
	0x0372439C STR X30, [X31 - 0x30]!
	0x037243A0 STP X22, X21, [X31 + 0x10]
	0x037243A4 STP X20, X19, [X31 + 0x20]
	0x037243A8 MOV X19, X1
	0x037243AC MOV X20, X0
	0x037243B0 LDR X0, [X0]
	0x037243B4 LDR X1, [X20 + 0x8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X19, X8
	007 Move X8, [X20+40]
	008 Move W1, 1
	009 Move [X31+72], X8
	010 Move V1, [X0]
	011 Move V0, [X0+16]
	012 Add X8, X31, 40
	013 Add X0, X31, 0
	014 Move [X31], V1
	015 Move [X31+8], V0
	016 Call Avx.mm256_round_ps, X0, X1
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move [X19], V1
	020 Move [X19+8], V0
	021 Move X8, [X20+40]
	022 Move X9, [X31+72]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X20, [X31+96]
	025 Move X19, [X31+104]
	026 Move X30, [X31+80]
	027 Add X31, X31, 112
	028 Return X0
	029 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_unpackhi_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037243B8 LDP X2, X3, [X19]
	0x037243BC MOV X4, X31
	0x037243C0 MOV X21, X8
	0x037243C4 BL 0x372FD88
	0x037243C8 MOV X22, X0
	0x037243CC LDP X0, X8, [X20 + 0x10]
	0x037243D0 LDP X2, X3, [X19 + 0x10]
	0x037243D4 MOV X19, X1
	0x037243D8 MOV X4, X31
	0x037243DC MOV X1, X8
	0x037243E0 BL 0x372FD88
	0x037243E4 STP X22, X19, [X21]
	0x037243E8 STP X0, X1, [X21 + 0x10]
	0x037243EC LDP X20, X19, [X31 + 0x20]
	0x037243F0 LDP X22, X21, [X31 + 0x10]
	0x037243F4 LDR X30, [X31], #0x30
	0x037243F8 RET
	0x037243FC STR X30, [X31 - 0x30]!
	0x03724400 STP X22, X21, [X31 + 0x10]
	0x03724404 STP X20, X19, [X31 + 0x20]
	0x03724408 MOV X19, X1
	0x0372440C MOV X20, X0
	0x03724410 LDR X0, [X0]
	0x03724414 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpackhi_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpackhi_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpacklo_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03724418 LDP X2, X3, [X19]
	0x0372441C MOV X4, X31
	0x03724420 MOV X21, X8
	0x03724424 BL 0x372D07C
	0x03724428 MOV X22, X0
	0x0372442C LDP X0, X8, [X20 + 0x10]
	0x03724430 LDP X2, X3, [X19 + 0x10]
	0x03724434 MOV X19, X1
	0x03724438 MOV X4, X31
	0x0372443C MOV X1, X8
	0x03724440 BL 0x372D07C
	0x03724444 STP X22, X19, [X21]
	0x03724448 STP X0, X1, [X21 + 0x10]
	0x0372444C LDP X20, X19, [X31 + 0x20]
	0x03724450 LDP X22, X21, [X31 + 0x10]
	0x03724454 LDR X30, [X31], #0x30
	0x03724458 RET
	0x0372445C STR X30, [X31 - 0x30]!
	0x03724460 STP X22, X21, [X31 + 0x10]
	0x03724464 STP X20, X19, [X31 + 0x20]
	0x03724468 MOV X19, X1
	0x0372446C MOV X20, X0
	0x03724470 LDR X0, [X0]
	0x03724474 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpacklo_pd, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpacklo_pd, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpackhi_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03724478 LDP X2, X3, [X19]
	0x0372447C MOV X4, X31
	0x03724480 MOV X21, X8
	0x03724484 BL 0x372D0F0
	0x03724488 MOV X22, X0
	0x0372448C LDP X0, X8, [X20 + 0x10]
	0x03724490 LDP X2, X3, [X19 + 0x10]
	0x03724494 MOV X19, X1
	0x03724498 MOV X4, X31
	0x0372449C MOV X1, X8
	0x037244A0 BL 0x372D0F0
	0x037244A4 STP X22, X19, [X21]
	0x037244A8 STP X0, X1, [X21 + 0x10]

ISIL:
	001 Move X9, [X1+8]
	002 Move X10, [X0+8]
	003 Move X11, [X1+24]
	004 Move X12, [X0+24]
	005 Move X13, X9
	006 NotImplemented "Instruction BFM not yet implemented."
	007 NotImplemented "Instruction BFM not yet implemented."
	008 Move X9, X11
	009 NotImplemented "Instruction BFM not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Move [X8], X10
	012 Move [X8+8], X13
	013 Move [X8+16], X12
	014 Move [X8+24], X9
	015 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpacklo_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037244C0 STP X22, X21, [X31 + 0x10]
	0x037244C4 STP X20, X19, [X31 + 0x20]
	0x037244C8 MOV X19, X1
	0x037244CC MOV X20, X0
	0x037244D0 LDR X0, [X0]
	0x037244D4 LDR X1, [X20 + 0x8]
	0x037244D8 LDP X2, X3, [X19]
	0x037244DC MOV X4, X31
	0x037244E0 MOV X21, X8
	0x037244E4 BL 0x372D164
	0x037244E8 MOV X22, X0
	0x037244EC LDP X0, X8, [X20 + 0x10]
	0x037244F0 LDP X2, X3, [X19 + 0x10]

ISIL:
	001 Move X9, [X1]
	002 Move X10, [X0]
	003 Move X11, [X1+16]
	004 Move X12, [X0+16]
	005 Move X13, X9
	006 NotImplemented "Instruction BFM not yet implemented."
	007 NotImplemented "Instruction BFM not yet implemented."
	008 Move X9, X11
	009 NotImplemented "Instruction BFM not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Move [X8], X10
	012 Move [X8+8], X13
	013 Move [X8+16], X12
	014 Move [X8+24], X9
	015 Return X0

Method: System.Int32 mm256_testz_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03724504 STP X22, X19, [X21]
	0x03724508 STP X0, X1, [X21 + 0x10]
	0x0372450C LDP X20, X19, [X31 + 0x20]
	0x03724510 LDP X22, X21, [X31 + 0x10]
	0x03724514 LDR X30, [X31], #0x30
	0x03724518 RET
	0x0372451C STP X30, X25, [X31 - 0x40]!
	0x03724520 STP X24, X23, [X31 + 0x10]
	0x03724524 STP X22, X21, [X31 + 0x20]
	0x03724528 STP X20, X19, [X31 + 0x30]
	0x0372452C ADRP X23, 0xCBC000
	0x03724530 ADRP X22, 0x9F8000
	0x03724534 MOV X19, X8
	0x03724538 LDRB W8, [X23 + 0xC59]
	0x0372453C LDR X22, [X22 + 0xA98]
	0x03724540 MOV X20, X1
	0x03724544 MOV X21, X0
	0x03724548 TBNZ X8, 0x0, 0x3724560
	0x0372454C ADRP X0, 0x9F8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Move X0, [X0]
	007 Move X1, [X20+8]
	008 Move X2, [X19]
	009 Move X3, [X19+8]
	010 Move X4, X31
	011 Call Sse4_1.testz_si128, X0, X1
	012 Move X8, [X20+16]
	013 Move X1, [X20+24]
	014 Move X2, [X19+16]
	015 Move X3, [X19+24]
	016 Move W19, W0
	017 Move X4, X31
	018 Move X0, X8
	019 Call Sse4_1.testz_si128, X0, X1
	020 And W0, W0, W19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: System.Int32 mm256_testc_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03724550 LDR X0, [X0 + 0xA98]
	0x03724554 BL 0x1C16CF4
	0x03724558 MOVZ W8, 0x1
	0x0372455C STRB W8, [X23 + 0xC59]
	0x03724560 LDR X0, [X22]
	0x03724564 LDP X25, X24, [X21]
	0x03724568 LDP X23, X22, [X20]
	0x0372456C LDR W8, [X0 + 0xE0]
	0x03724570 CBNZ W8, 0x3724578
	0x03724574 BL 0x1C16DFC
	0x03724578 MOV X0, X25
	0x0372457C MOV X1, X24
	0x03724580 MOV X2, X23
	0x03724584 MOV X3, X22
	0x03724588 MOV X4, X31
	0x0372458C BL 0x3731990
	0x03724590 MOV X22, X0
	0x03724594 LDP X0, X8, [X21 + 0x10]
	0x03724598 LDP X2, X3, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Move X0, [X0]
	007 Move X1, [X20+8]
	008 Move X2, [X19]
	009 Move X3, [X19+8]
	010 Move X4, X31
	011 Call Sse4_1.testc_si128, X0, X1
	012 Move X8, [X20+16]
	013 Move X1, [X20+24]
	014 Move X2, [X19+16]
	015 Move X3, [X19+24]
	016 Move W19, W0
	017 Move X4, X31
	018 Move X0, X8
	019 Call Sse4_1.testc_si128, X0, X1
	020 And W0, W0, W19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: System.Int32 mm256_testnzc_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372459C MOV X20, X1
	0x037245A0 MOV X4, X31
	0x037245A4 MOV X1, X8
	0x037245A8 BL 0x3731990
	0x037245AC STP X22, X20, [X19]
	0x037245B0 STP X0, X1, [X19 + 0x10]
	0x037245B4 LDP X20, X19, [X31 + 0x30]
	0x037245B8 LDP X22, X21, [X31 + 0x20]
	0x037245BC LDP X24, X23, [X31 + 0x10]
	0x037245C0 LDP X30, X25, [X31], #0x40
	0x037245C4 RET
	0x037245C8 STR X30, [X31 - 0x30]!
	0x037245CC STP X22, X21, [X31 + 0x10]
	0x037245D0 STP X20, X19, [X31 + 0x20]
	0x037245D4 MOV X19, X1
	0x037245D8 MOV X20, X0
	0x037245DC LDR X0, [X0]
	0x037245E0 LDR X1, [X20 + 0x8]
	0x037245E4 LDP X2, X3, [X19]
	0x037245E8 MOV X4, X31
	0x037245EC MOV X21, X8
	0x037245F0 BL 0x372F608
	0x037245F4 MOV X22, X0
	0x037245F8 LDP X0, X8, [X20 + 0x10]
	0x037245FC LDP X2, X3, [X19 + 0x10]
	0x03724600 MOV X19, X1
	0x03724604 MOV X4, X31
	0x03724608 MOV X1, X8
	0x0372460C BL 0x372F608
	0x03724610 STP X22, X19, [X21]
	0x03724614 STP X0, X1, [X21 + 0x10]
	0x03724618 LDP X20, X19, [X31 + 0x20]
	0x0372461C LDP X22, X21, [X31 + 0x10]
	0x03724620 LDR X30, [X31], #0x30
	0x03724624 RET
	0x03724628 STR X30, [X31 - 0x30]!
	0x0372462C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+160], X22
	004 Move [X31+168], X21
	005 Move [X31+176], X20
	006 Move [X31+184], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X22+40]
	009 Move X20, X1
	010 Move X21, X0
	011 Move [X31+136], X8
	012 Move V1, [X0]
	013 Move V0, [X0+16]
	014 Add X0, X31, 96
	015 Move [X31+96], V1
	016 Move [X31+104], V0
	017 Move V1, [X1]
	018 Move V0, [X1+16]
	019 Add X1, X31, 64
	020 Move [X31+64], V1
	021 Move [X31+72], V0
	022 Call Avx.mm256_testz_si256, X0, X1
	023 Move V0, [X21]
	024 Move V1, [X21+16]
	025 Move W19, W0
	026 Add X0, X31, 32
	027 Add X1, X31, 0
	028 Move [X31+32], V0
	029 Move [X31+40], V1
	030 Move V0, [X20]
	031 Move V1, [X20+16]
	032 Move [X31], V0
	033 Move [X31+8], V1
	034 Call Avx.mm256_testc_si256, X0, X1
	035 Move X8, [X22+40]
	036 Move X9, [X31+136]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Or W8, W0, W19
	039 Move X20, [X31+176]
	040 Move X19, [X31+184]
	041 Move X22, [X31+160]
	042 Move X21, [X31+168]
	043 Move X30, [X31+144]
	044 Move W9, 1
	045 Subtract W0, W9, W8
	046 Add X31, X31, 192
	047 Return X0
	048 Call 0x3EB2B20

Method: System.Int32 mm256_testz_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03724630 STP X20, X19, [X31 + 0x20]
	0x03724634 MOV X19, X1
	0x03724638 MOV X20, X0
	0x0372463C LDR X0, [X0]
	0x03724640 LDR X1, [X20 + 0x8]
	0x03724644 LDP X2, X3, [X19]
	0x03724648 MOV X4, X31
	0x0372464C MOV X21, X8
	0x03724650 BL 0x372B580
	0x03724654 MOV X22, X0
	0x03724658 LDP X0, X8, [X20 + 0x10]
	0x0372465C LDP X2, X3, [X19 + 0x10]

ISIL:
	001 Move X8, X31
	002 Move X9, [X0]
	003 Move X10, [X1]
	004 And X31, X10, X9
	005 Add X8, X8, 8
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, 1
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Int32 mm256_testc_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03724660 MOV X19, X1
	0x03724664 MOV X4, X31
	0x03724668 MOV X1, X8
	0x0372466C BL 0x372B580
	0x03724670 STP X22, X19, [X21]
	0x03724674 STP X0, X1, [X21 + 0x10]
	0x03724678 LDP X20, X19, [X31 + 0x20]
	0x0372467C LDP X22, X21, [X31 + 0x10]
	0x03724680 LDR X30, [X31], #0x30
	0x03724684 RET
	0x03724688 STR X30, [X31 - 0x30]!
	0x0372468C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X8, X31
	002 Move X9, [X0]
	003 Move X10, [X1]
	004 NotImplemented "Instruction BICS not yet implemented."
	005 Add X8, X8, 8
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, 1
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Int32 mm256_testnzc_pd(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03724690 STP X20, X19, [X31 + 0x20]
	0x03724694 MOV X19, X1
	0x03724698 MOV X20, X0
	0x0372469C LDR X0, [X0]
	0x037246A0 LDR X1, [X20 + 0x8]
	0x037246A4 LDP X2, X3, [X19]
	0x037246A8 MOV X4, X31
	0x037246AC MOV X21, X8
	0x037246B0 BL 0x372F6DC
	0x037246B4 MOV X22, X0
	0x037246B8 LDP X0, X8, [X20 + 0x10]
	0x037246BC LDP X2, X3, [X19 + 0x10]
	0x037246C0 MOV X19, X1
	0x037246C4 MOV X4, X31
	0x037246C8 MOV X1, X8
	0x037246CC BL 0x372F6DC
	0x037246D0 STP X22, X19, [X21]
	0x037246D4 STP X0, X1, [X21 + 0x10]
	0x037246D8 LDP X20, X19, [X31 + 0x20]
	0x037246DC LDP X22, X21, [X31 + 0x10]
	0x037246E0 LDR X30, [X31], #0x30
	0x037246E4 RET
	0x037246E8 STR X30, [X31 - 0x30]!
	0x037246EC STP X22, X21, [X31 + 0x10]
	0x037246F0 STP X20, X19, [X31 + 0x20]
	0x037246F4 MOV X19, X1
	0x037246F8 MOV X20, X0
	0x037246FC LDR X0, [X0]
	0x03724700 LDR X1, [X20 + 0x8]
	0x03724704 LDP X2, X3, [X19]
	0x03724708 MOV X4, X31
	0x0372470C MOV X21, X8
	0x03724710 BL 0x372B654
	0x03724714 MOV X22, X0
	0x03724718 LDP X0, X8, [X20 + 0x10]
	0x0372471C LDP X2, X3, [X19 + 0x10]
	0x03724720 MOV X19, X1
	0x03724724 MOV X4, X31
	0x03724728 MOV X1, X8
	0x0372472C BL 0x372B654
	0x03724730 STP X22, X19, [X21]
	0x03724734 STP X0, X1, [X21 + 0x10]
	0x03724738 LDP X20, X19, [X31 + 0x20]
	0x0372473C LDP X22, X21, [X31 + 0x10]
	0x03724740 LDR X30, [X31], #0x30
	0x03724744 RET
	0x03724748 STR X30, [X31 - 0x30]!
	0x0372474C STP X22, X21, [X31 + 0x10]
	0x03724750 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+144], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X8+40]
	005 Move X9, X31
	006 Add X11, X31, 64
	007 Move [X31+136], X10
	008 Move V1, [X0]
	009 Move V0, [X0+16]
	010 Add X10, X31, 96
	011 Move [X31+96], V1
	012 Move [X31+104], V0
	013 Move V1, [X1]
	014 Move V0, [X1+16]
	015 Move [X31+64], V1
	016 Move [X31+72], V0
	017 Move X12, [X10]
	018 Move X13, [X11]
	019 And X31, X13, X12
	020 Add X9, X9, 8
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, 1
	023 Move W9, W31
	024 Move V1, [X0]
	025 Move V0, [X0+16]
	026 Move X10, X31
	027 Add X11, X31, 32
	028 Add X12, X31, 0
	029 Move [X31+32], V1
	030 Move [X31+40], V0
	031 Move V1, [X1]
	032 Move V0, [X1+16]
	033 Move [X31], V1
	034 Move [X31+8], V0
	035 Move X13, [X11]
	036 Move X14, [X12]
	037 NotImplemented "Instruction BICS not yet implemented."
	038 Add X10, X10, 8
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W10, 1
	041 Move W10, W31
	042 Move X8, [X8+40]
	043 Move X11, [X31+136]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X30, [X31+144]
	046 Or W8, W10, W9
	047 Xor W0, W8, 1
	048 Add X31, X31, 160
	049 Return X0
	050 Call 0x3EB2B20

Method: System.Int32 testz_pd(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b)

Disassembly:
	0x03724754 MOV X19, X1
	0x03724758 MOV X20, X0
	0x0372475C LDR X0, [X0]
	0x03724760 LDR X1, [X20 + 0x8]
	0x03724764 LDP X2, X3, [X19]
	0x03724768 MOV X4, X31
	0x0372476C MOV X21, X8
	0x03724770 BL 0x372F884
	0x03724774 MOV X22, X0
	0x03724778 LDP X0, X8, [X20 + 0x10]
	0x0372477C LDP X2, X3, [X19 + 0x10]
	0x03724780 MOV X19, X1
	0x03724784 MOV X4, X31
	0x03724788 MOV X1, X8
	0x0372478C BL 0x372F884
	0x03724790 STP X22, X19, [X21]
	0x03724794 STP X0, X1, [X21 + 0x10]
	0x03724798 LDP X20, X19, [X31 + 0x20]
	0x0372479C LDP X22, X21, [X31 + 0x10]
	0x037247A0 LDR X30, [X31], #0x30
	0x037247A4 RET
	0x037247A8 STR X30, [X31 - 0x30]!
	0x037247AC STP X22, X21, [X31 + 0x10]
	0x037247B0 STP X20, X19, [X31 + 0x20]
	0x037247B4 MOV X19, X1
	0x037247B8 MOV X20, X0
	0x037247BC LDR X0, [X0]
	0x037247C0 LDR X1, [X20 + 0x8]
	0x037247C4 LDP X2, X3, [X19]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X8+40]
	005 Move W9, W31
	006 Move X10, X31
	007 Add X11, X31, 24
	008 Add X13, X31, 8
	009 Move [X31+40], X12
	010 Move [X31+24], X0
	011 Move [X31+32], X1
	012 Move [X31+8], X2
	013 Move [X31+16], X3
	014 Move X12, [X10]
	015 Move X10, [X10]
	016 And X12, X10, X12
	017 Move W14, W9
	018 Move W9, 1
	019 Move W10, 8
	020 Move TEMP, X14
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {14}
	024 Move X8, [X8+40]
	025 Move X9, [X31+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X30, [X31+48]
	028 Move X8, X12
	029 ShiftRight X8, 63
	030 And X8, X8, 0x7FFFFFFF
	031 Xor W0, W8, 1
	032 Add X31, X31, 64
	033 Return X0
	034 Call 0x3EB2B20

Method: System.Int32 testc_pd(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b)

Disassembly:
	0x037247C8 MOV X4, X31
	0x037247CC MOV X21, X8
	0x037247D0 BL 0x372F7B0
	0x037247D4 MOV X22, X0
	0x037247D8 LDP X0, X8, [X20 + 0x10]
	0x037247DC LDP X2, X3, [X19 + 0x10]
	0x037247E0 MOV X19, X1
	0x037247E4 MOV X4, X31
	0x037247E8 MOV X1, X8
	0x037247EC BL 0x372F7B0
	0x037247F0 STP X22, X19, [X21]
	0x037247F4 STP X0, X1, [X21 + 0x10]
	0x037247F8 LDP X20, X19, [X31 + 0x20]
	0x037247FC LDP X22, X21, [X31 + 0x10]
	0x03724800 LDR X30, [X31], #0x30
	0x03724804 RET
	0x03724808 STR X30, [X31 - 0x30]!
	0x0372480C STP X22, X21, [X31 + 0x10]
	0x03724810 STP X20, X19, [X31 + 0x20]
	0x03724814 MOV X19, X1
	0x03724818 MOV X20, X0
	0x0372481C LDR X0, [X0]
	0x03724820 LDR X1, [X20 + 0x8]
	0x03724824 LDP X2, X3, [X19]
	0x03724828 MOV X4, X31
	0x0372482C MOV X21, X8
	0x03724830 BL 0x372F958
	0x03724834 MOV X22, X0
	0x03724838 LDP X0, X8, [X20 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X8+40]
	005 Move W9, W31
	006 Move X10, X31
	007 Add X11, X31, 24
	008 Add X13, X31, 8
	009 Move [X31+40], X12
	010 Move [X31+24], X0
	011 Move [X31+32], X1
	012 Move [X31+8], X2
	013 Move [X31+16], X3
	014 Move X12, [X10]
	015 Move X10, [X10]
	016 NotImplemented "Instruction BICS not yet implemented."
	017 Move W14, W9
	018 Move W9, 1
	019 Move W10, 8
	020 Move TEMP, X14
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {14}
	024 Move X8, [X8+40]
	025 Move X9, [X31+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X30, [X31+48]
	028 Move X8, X12
	029 ShiftRight X8, 63
	030 And X8, X8, 0x7FFFFFFF
	031 Xor W0, W8, 1
	032 Add X31, X31, 64
	033 Return X0
	034 Call 0x3EB2B20

Method: System.Int32 testnzc_pd(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b)

Disassembly:
	0x0372483C LDP X2, X3, [X19 + 0x10]
	0x03724840 MOV X19, X1
	0x03724844 MOV X4, X31
	0x03724848 MOV X1, X8
	0x0372484C BL 0x372F958
	0x03724850 STP X22, X19, [X21]
	0x03724854 STP X0, X1, [X21 + 0x10]
	0x03724858 LDP X20, X19, [X31 + 0x20]
	0x0372485C LDP X22, X21, [X31 + 0x10]
	0x03724860 LDR X30, [X31], #0x30
	0x03724864 RET
	0x03724868 STR X30, [X31 - 0x30]!
	0x0372486C STP X22, X21, [X31 + 0x10]
	0x03724870 STP X20, X19, [X31 + 0x20]
	0x03724874 MOV X19, X1
	0x03724878 MOV X20, X0
	0x0372487C LDR X0, [X0]
	0x03724880 LDR X1, [X20 + 0x8]
	0x03724884 LDP X2, X3, [X19]
	0x03724888 MOV X4, X31
	0x0372488C MOV X21, X8
	0x03724890 BL 0x372B728
	0x03724894 MOV X22, X0
	0x03724898 LDP X0, X8, [X20 + 0x10]
	0x0372489C LDP X2, X3, [X19 + 0x10]
	0x037248A0 MOV X19, X1
	0x037248A4 MOV X4, X31
	0x037248A8 MOV X1, X8
	0x037248AC BL 0x372B728
	0x037248B0 STP X22, X19, [X21]
	0x037248B4 STP X0, X1, [X21 + 0x10]
	0x037248B8 LDP X20, X19, [X31 + 0x20]
	0x037248BC LDP X22, X21, [X31 + 0x10]
	0x037248C0 LDR X30, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X11, [X19+40]
	008 Move W8, W31
	009 Move X9, X31
	010 Add X10, X31, 24
	011 Move [X31+40], X11
	012 Add X11, X31, 8
	013 Move W20, 1
	014 Move [X31+24], X0
	015 Move [X31+32], X1
	016 Move [X31+8], X2
	017 Move [X31+16], X3
	018 Move X12, [X9]
	019 Move X9, [X9]
	020 And X21, X9, X12
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {31}
	025 Move W8, 1
	026 Move W9, 8
	027 Move TEMP, X21
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {18}
	031 Call Avx.testc_pd, X0, X1
	032 Move X8, [X19+40]
	033 Move X9, [X31+40]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, X21
	036 ShiftRight X8, 63
	037 And X8, X8, 0x7FFFFFFF
	038 Xor W8, W8, 1
	039 Or W8, W0, W8
	040 Subtract W0, W20, W8
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X30, [X31+48]
	044 Move X21, [X31+56]
	045 Add X31, X31, 80
	046 Return X0
	047 Call 0x3EB2B20

Method: System.Int32 mm256_testz_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037248C4 RET
	0x037248C8 STR X30, [X31 - 0x30]!
	0x037248CC STP X22, X21, [X31 + 0x10]
	0x037248D0 STP X20, X19, [X31 + 0x20]
	0x037248D4 MOV X19, X1
	0x037248D8 MOV X20, X0
	0x037248DC LDR X0, [X0]
	0x037248E0 LDR X1, [X20 + 0x8]
	0x037248E4 LDP X2, X3, [X19]
	0x037248E8 MOV X4, X31
	0x037248EC MOV X21, X8
	0x037248F0 BL 0x372FA2C

ISIL:
	001 Move X8, X31
	002 Move W9, [X0]
	003 Move W10, [X1]
	004 And W31, W10, W9
	005 Add X8, X8, 4
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, 1
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Int32 mm256_testc_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037248F4 MOV X22, X0
	0x037248F8 LDP X0, X8, [X20 + 0x10]
	0x037248FC LDP X2, X3, [X19 + 0x10]
	0x03724900 MOV X19, X1
	0x03724904 MOV X4, X31
	0x03724908 MOV X1, X8
	0x0372490C BL 0x372FA2C
	0x03724910 STP X22, X19, [X21]
	0x03724914 STP X0, X1, [X21 + 0x10]
	0x03724918 LDP X20, X19, [X31 + 0x20]
	0x0372491C LDP X22, X21, [X31 + 0x10]
	0x03724920 LDR X30, [X31], #0x30

ISIL:
	001 Move X8, X31
	002 Move W9, [X0]
	003 Move W10, [X1]
	004 NotImplemented "Instruction BICS not yet implemented."
	005 Add X8, X8, 4
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, 1
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Int32 mm256_testnzc_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03724924 RET
	0x03724928 STR X30, [X31 - 0x30]!
	0x0372492C STP X22, X21, [X31 + 0x10]
	0x03724930 STP X20, X19, [X31 + 0x20]
	0x03724934 MOV X19, X1
	0x03724938 MOV X20, X0
	0x0372493C LDR X0, [X0]
	0x03724940 LDR X1, [X20 + 0x8]
	0x03724944 LDP X2, X3, [X19]
	0x03724948 MOV X4, X31
	0x0372494C MOV X21, X8
	0x03724950 BL 0x372B7FC
	0x03724954 MOV X22, X0
	0x03724958 LDP X0, X8, [X20 + 0x10]
	0x0372495C LDP X2, X3, [X19 + 0x10]
	0x03724960 MOV X19, X1
	0x03724964 MOV X4, X31
	0x03724968 MOV X1, X8
	0x0372496C BL 0x372B7FC
	0x03724970 STP X22, X19, [X21]
	0x03724974 STP X0, X1, [X21 + 0x10]
	0x03724978 LDP X20, X19, [X31 + 0x20]
	0x0372497C LDP X22, X21, [X31 + 0x10]
	0x03724980 LDR X30, [X31], #0x30
	0x03724984 RET
	0x03724988 STR X30, [X31 - 0x30]!
	0x0372498C STP X22, X21, [X31 + 0x10]
	0x03724990 STP X20, X19, [X31 + 0x20]
	0x03724994 MOV X19, X1
	0x03724998 MOV X20, X0
	0x0372499C LDR X0, [X0]
	0x037249A0 LDR X1, [X20 + 0x8]
	0x037249A4 LDP X2, X3, [X19]
	0x037249A8 MOV X4, X31
	0x037249AC MOV X21, X8
	0x037249B0 BL 0x372FBD4
	0x037249B4 MOV X22, X0
	0x037249B8 LDP X0, X8, [X20 + 0x10]
	0x037249BC LDP X2, X3, [X19 + 0x10]
	0x037249C0 MOV X19, X1
	0x037249C4 MOV X4, X31
	0x037249C8 MOV X1, X8
	0x037249CC BL 0x372FBD4
	0x037249D0 STP X22, X19, [X21]
	0x037249D4 STP X0, X1, [X21 + 0x10]
	0x037249D8 LDP X20, X19, [X31 + 0x20]
	0x037249DC LDP X22, X21, [X31 + 0x10]
	0x037249E0 LDR X30, [X31], #0x30
	0x037249E4 RET

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+144], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X8+40]
	005 Move X9, X31
	006 Add X11, X31, 64
	007 Move [X31+136], X10
	008 Move V1, [X0]
	009 Move V0, [X0+16]
	010 Add X10, X31, 96
	011 Move [X31+96], V1
	012 Move [X31+104], V0
	013 Move V1, [X1]
	014 Move V0, [X1+16]
	015 Move [X31+64], V1
	016 Move [X31+72], V0
	017 Move W12, [X10]
	018 Move W13, [X11]
	019 And W31, W13, W12
	020 Add X9, X9, 4
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, 1
	023 Move W9, W31
	024 Move V1, [X0]
	025 Move V0, [X0+16]
	026 Move X10, X31
	027 Add X11, X31, 32
	028 Add X12, X31, 0
	029 Move [X31+32], V1
	030 Move [X31+40], V0
	031 Move V1, [X1]
	032 Move V0, [X1+16]
	033 Move [X31], V1
	034 Move [X31+8], V0
	035 Move W13, [X11]
	036 Move W14, [X12]
	037 NotImplemented "Instruction BICS not yet implemented."
	038 Add X10, X10, 4
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W10, 1
	041 Move W10, W31
	042 Move X8, [X8+40]
	043 Move X11, [X31+136]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X30, [X31+144]
	046 Or W8, W10, W9
	047 Xor W0, W8, 1
	048 Add X31, X31, 160
	049 Return X0
	050 Call 0x3EB2B20

Method: System.Int32 testz_ps(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b)

Disassembly:
	0x037249E8 STR X30, [X31 - 0x30]!
	0x037249EC STP X22, X21, [X31 + 0x10]
	0x037249F0 STP X20, X19, [X31 + 0x20]
	0x037249F4 MOV X19, X1
	0x037249F8 MOV X20, X0
	0x037249FC LDR X0, [X0]
	0x03724A00 LDR X1, [X20 + 0x8]
	0x03724A04 LDP X2, X3, [X19]
	0x03724A08 MOV X4, X31
	0x03724A0C MOV X21, X8
	0x03724A10 BL 0x372FB00
	0x03724A14 MOV X22, X0
	0x03724A18 LDP X0, X8, [X20 + 0x10]
	0x03724A1C LDP X2, X3, [X19 + 0x10]
	0x03724A20 MOV X19, X1
	0x03724A24 MOV X4, X31
	0x03724A28 MOV X1, X8
	0x03724A2C BL 0x372FB00
	0x03724A30 STP X22, X19, [X21]
	0x03724A34 STP X0, X1, [X21 + 0x10]
	0x03724A38 LDP X20, X19, [X31 + 0x20]
	0x03724A3C LDP X22, X21, [X31 + 0x10]
	0x03724A40 LDR X30, [X31], #0x30
	0x03724A44 RET
	0x03724A48 STR X30, [X31 - 0x30]!
	0x03724A4C STP X22, X21, [X31 + 0x10]
	0x03724A50 STP X20, X19, [X31 + 0x20]
	0x03724A54 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X8+40]
	005 Move X9, X31
	006 Add X10, X31, 24
	007 Move [X31+40], X11
	008 Add X11, X31, 8
	009 Move [X31+24], X0
	010 Move [X31+32], X1
	011 Move [X31+8], X2
	012 Move [X31+16], X3
	013 Move W12, [X10]
	014 Move W13, [X11]
	015 And W31, W13, W12
	016 Add X9, X9, 4
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W0, 1
	019 Move W0, W31
	020 Move X8, [X8+40]
	021 Move X9, [X31+40]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X30, [X31+48]
	024 Add X31, X31, 64
	025 Return X0
	026 Call 0x3EB2B20

Method: System.Int32 testc_ps(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b)

Disassembly:
	0x03724A58 MOV X20, X0
	0x03724A5C LDR X0, [X0]
	0x03724A60 LDR X1, [X20 + 0x8]
	0x03724A64 LDP X2, X3, [X19]
	0x03724A68 MOV X4, X31
	0x03724A6C MOV X21, X8
	0x03724A70 BL 0x372CEF0
	0x03724A74 MOV X22, X0
	0x03724A78 LDP X0, X8, [X20 + 0x10]
	0x03724A7C LDP X2, X3, [X19 + 0x10]
	0x03724A80 MOV X19, X1
	0x03724A84 MOV X4, X31
	0x03724A88 MOV X1, X8
	0x03724A8C BL 0x372CEF0
	0x03724A90 STP X22, X19, [X21]
	0x03724A94 STP X0, X1, [X21 + 0x10]
	0x03724A98 LDP X20, X19, [X31 + 0x20]
	0x03724A9C LDP X22, X21, [X31 + 0x10]
	0x03724AA0 LDR X30, [X31], #0x30
	0x03724AA4 RET
	0x03724AA8 STR X30, [X31 - 0x30]!
	0x03724AAC STP X22, X21, [X31 + 0x10]
	0x03724AB0 STP X20, X19, [X31 + 0x20]
	0x03724AB4 MOV X19, X1
	0x03724AB8 MOV X20, X0
	0x03724ABC LDR X0, [X0]
	0x03724AC0 LDR X1, [X20 + 0x8]
	0x03724AC4 LDP X2, X3, [X19]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X8+40]
	005 Move X9, X31
	006 Add X10, X31, 24
	007 Move [X31+40], X11
	008 Add X11, X31, 8
	009 Move [X31+24], X0
	010 Move [X31+32], X1
	011 Move [X31+8], X2
	012 Move [X31+16], X3
	013 Move W12, [X10]
	014 Move W13, [X11]
	015 NotImplemented "Instruction BICS not yet implemented."
	016 Add X9, X9, 4
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W0, 1
	019 Move W0, W31
	020 Move X8, [X8+40]
	021 Move X9, [X31+40]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X30, [X31+48]
	024 Add X31, X31, 64
	025 Return X0
	026 Call 0x3EB2B20

Method: System.Int32 testnzc_ps(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b)

Disassembly:
	0x03724AC8 MOV X4, X31
	0x03724ACC MOV X21, X8
	0x03724AD0 BL 0x372CEFC
	0x03724AD4 MOV X22, X0
	0x03724AD8 LDP X0, X8, [X20 + 0x10]
	0x03724ADC LDP X2, X3, [X19 + 0x10]
	0x03724AE0 MOV X19, X1
	0x03724AE4 MOV X4, X31
	0x03724AE8 MOV X1, X8
	0x03724AEC BL 0x372CEFC
	0x03724AF0 STP X22, X19, [X21]
	0x03724AF4 STP X0, X1, [X21 + 0x10]
	0x03724AF8 LDP X20, X19, [X31 + 0x20]
	0x03724AFC LDP X22, X21, [X31 + 0x10]
	0x03724B00 LDR X30, [X31], #0x30
	0x03724B04 RET
	0x03724B08 STR X30, [X31 - 0x30]!
	0x03724B0C STP X22, X21, [X31 + 0x10]
	0x03724B10 STP X20, X19, [X31 + 0x20]
	0x03724B14 MOV X19, X1
	0x03724B18 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X3
	008 Move X20, X2
	009 Move X21, X1
	010 Move X22, X0
	011 Call Avx.testz_ps, X0, X1
	012 Move W23, W0
	013 Move X0, X22
	014 Move X1, X21
	015 Move X2, X20
	016 Move X3, X19
	017 Call Avx.testc_ps, X0, X1
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Or W8, W0, W23
	023 Move W9, 1
	024 Subtract W0, W9, W8
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]
	027 Return X0

Method: System.Int32 mm256_movemask_pd(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724B1C LDR X0, [X0]
	0x03724B20 LDR X1, [X20 + 0x8]
	0x03724B24 LDP X2, X3, [X19]
	0x03724B28 MOV X4, X31
	0x03724B2C MOV X21, X8
	0x03724B30 BL 0x372CF08
	0x03724B34 MOV X22, X0
	0x03724B38 LDP X0, X8, [X20 + 0x10]
	0x03724B3C LDP X2, X3, [X19 + 0x10]
	0x03724B40 MOV X19, X1
	0x03724B44 MOV X4, X31
	0x03724B48 MOV X1, X8
	0x03724B4C BL 0x372CF08
	0x03724B50 STP X22, X19, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Move X1, [X19+8]
	006 Move X2, X31
	007 Call Sse2.movemask_pd, X0
	008 Move X8, [X19+16]
	009 Move X1, [X19+24]
	010 Move W19, W0
	011 Move X2, X31
	012 Move X0, X8
	013 Call Sse2.movemask_pd, X0
	014 Or W0, W19, W0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Int32 mm256_movemask_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724B54 STP X0, X1, [X21 + 0x10]
	0x03724B58 LDP X20, X19, [X31 + 0x20]
	0x03724B5C LDP X22, X21, [X31 + 0x10]
	0x03724B60 LDR X30, [X31], #0x30
	0x03724B64 RET
	0x03724B68 STR X30, [X31 - 0x30]!
	0x03724B6C STP X22, X21, [X31 + 0x10]
	0x03724B70 STP X20, X19, [X31 + 0x20]
	0x03724B74 MOV X19, X1
	0x03724B78 MOV X20, X0
	0x03724B7C LDR X0, [X0]
	0x03724B80 LDR X1, [X20 + 0x8]
	0x03724B84 LDP X2, X3, [X19]
	0x03724B88 MOV X4, X31
	0x03724B8C MOV X21, X8
	0x03724B90 BL 0x372CF14
	0x03724B94 MOV X22, X0
	0x03724B98 LDP X0, X8, [X20 + 0x10]
	0x03724B9C LDP X2, X3, [X19 + 0x10]
	0x03724BA0 MOV X19, X1
	0x03724BA4 MOV X4, X31
	0x03724BA8 MOV X1, X8

ISIL:
	001 Move X8, [X0]
	002 Move X9, [X0+8]
	003 Move X10, [X0+16]
	004 Move X11, [X0+24]
	005 Move X12, X8
	006 ShiftRight X12, 62
	007 And X12, X12, 0x7FFFFFFF
	008 And W12, W12, 2
	009 Or W8, W12, W8
	010 Move X12, X10
	011 ShiftRight X12, 62
	012 And X12, X12, 0x7FFFFFFF
	013 And W12, W12, 2
	014 Or W10, W12, W10
	015 Move X12, X9
	016 ShiftRight X12, 29
	017 And X12, X12, 0x7FFFFFFF
	018 And W12, W12, 4
	019 Or W8, W8, W12
	020 Move X12, X11
	021 ShiftRight X12, 29
	022 And X12, X12, 0x7FFFFFFF
	023 And W12, W12, 4
	024 Move X9, X9
	025 ShiftRight X9, 60
	026 And X9, X9, 0x7FFFFFFF
	027 Move X11, X11
	028 ShiftRight X11, 60
	029 And X11, X11, 0x7FFFFFFF
	030 Or W10, W10, W12
	031 And W9, W9, 8
	032 And W11, W11, 8
	033 Or W0, W8, W9
	034 Or W8, W10, W11
	035 NotImplemented "Instruction BFM not yet implemented."
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setzero_pd()

Disassembly:
	0x03724BD4 LDR X0, [X0]
	0x03724BD8 LDR X1, [X19 + 0x8]
	0x03724BDC MOV X2, X31

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setzero_ps()

Disassembly:
	0x03724BE0 MOV X20, X8
	0x03724BE4 BL 0x3731CF8
	0x03724BE8 MOV X21, X0

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setzero_si256()

Disassembly:
	0x03724BEC LDP X0, X8, [X19 + 0x10]
	0x03724BF0 MOV X19, X1
	0x03724BF4 MOV X2, X31

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set_pd(System.Double d, System.Double c, System.Double b, System.Double a)

Disassembly:
	0x03724BF8 MOV X1, X8
	0x03724BFC BL 0x3731CF8
	0x03724C00 STP X21, X19, [X20]

ISIL:
	001 Move [X8], D3
	002 Move [X8+8], D2
	003 Move [X8+16], D1
	004 Move [X8+24], D0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set_ps(System.Single e7, System.Single e6, System.Single e5, System.Single e4, System.Single e3, System.Single e2, System.Single e1, System.Single e0)

Disassembly:
	0x03724C04 STP X0, X1, [X20 + 0x10]
	0x03724C08 LDP X20, X19, [X31 + 0x10]
	0x03724C0C LDP X30, X21, [X31], #0x20
	0x03724C10 RET
	0x03724C14 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X8], S7
	002 Move [X8+8], S6
	003 Move [X8+8], S5
	004 Move [X8+16], S4
	005 Move [X8+16], S3
	006 Move [X8+24], S2
	007 Move [X8+24], S1
	008 Move [X8+32], S0
	009 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set_epi8(System.Byte e31_, System.Byte e30_, System.Byte e29_, System.Byte e28_, System.Byte e27_, System.Byte e26_, System.Byte e25_, System.Byte e24_, System.Byte e23_, System.Byte e22_, System.Byte e21_, System.Byte e20_, System.Byte e19_, System.Byte e18_, System.Byte e17_, System.Byte e16_, System.Byte e15_, System.Byte e14_, System.Byte e13_, System.Byte e12_, System.Byte e11_, System.Byte e10_, System.Byte e9_, System.Byte e8_, System.Byte e7_, System.Byte e6_, System.Byte e5_, System.Byte e4_, System.Byte e3_, System.Byte e2_, System.Byte e1_, System.Byte e0_)

Disassembly:
	0x03724C18 STP X20, X19, [X31 + 0x10]
	0x03724C1C MOV X19, X0
	0x03724C20 LDR X0, [X0]
	0x03724C24 LDR X1, [X19 + 0x8]
	0x03724C28 MOV X2, X31
	0x03724C2C MOV X20, X8
	0x03724C30 BL 0x3731DB0
	0x03724C34 MOV X21, X0
	0x03724C38 LDP X0, X8, [X19 + 0x10]
	0x03724C3C MOV X19, X1
	0x03724C40 MOV X2, X31
	0x03724C44 MOV X1, X8
	0x03724C48 BL 0x3731DB0
	0x03724C4C STP X21, X19, [X20]
	0x03724C50 STP X0, X1, [X20 + 0x10]
	0x03724C54 LDP X20, X19, [X31 + 0x10]
	0x03724C58 LDP X30, X21, [X31], #0x20
	0x03724C5C RET
	0x03724C60 STP X30, X21, [X31 - 0x20]!
	0x03724C64 STP X20, X19, [X31 + 0x10]
	0x03724C68 MOV X19, X0
	0x03724C6C LDR X0, [X0]
	0x03724C70 LDR X1, [X19 + 0x8]
	0x03724C74 MOV X2, X31
	0x03724C78 MOV X20, X8
	0x03724C7C BL 0x3731E68
	0x03724C80 MOV X21, X0
	0x03724C84 LDP X0, X8, [X19 + 0x10]
	0x03724C88 MOV X19, X1
	0x03724C8C MOV X2, X31
	0x03724C90 MOV X1, X8
	0x03724C94 BL 0x3731E68
	0x03724C98 STP X21, X19, [X20]
	0x03724C9C STP X0, X1, [X20 + 0x10]
	0x03724CA0 LDP X20, X19, [X31 + 0x10]
	0x03724CA4 LDP X30, X21, [X31], #0x20
	0x03724CA8 RET
	0x03724CAC STR X30, [X31 - 0x30]!
	0x03724CB0 STP X22, X21, [X31 + 0x10]
	0x03724CB4 STP X20, X19, [X31 + 0x20]
	0x03724CB8 MOV X19, X1
	0x03724CBC MOV X20, X0
	0x03724CC0 LDR X0, [X0]
	0x03724CC4 LDR X1, [X20 + 0x8]
	0x03724CC8 LDP X2, X3, [X19]
	0x03724CCC MOV X4, X31
	0x03724CD0 MOV X21, X8
	0x03724CD4 BL 0x372B0D4
	0x03724CD8 MOV X22, X0
	0x03724CDC LDP X0, X8, [X20 + 0x10]
	0x03724CE0 LDP X2, X3, [X19 + 0x10]
	0x03724CE4 MOV X19, X1
	0x03724CE8 MOV X4, X31
	0x03724CEC MOV X1, X8
	0x03724CF0 BL 0x372B0D4
	0x03724CF4 STP X22, X19, [X21]
	0x03724CF8 STP X0, X1, [X21 + 0x10]

ISIL:
	001 Move W10, [X31+184]
	002 Move W11, [X31+176]
	003 Move W12, [X31+168]
	004 Move W9, [X31+8]
	005 Move [X8], W10
	006 Move W10, [X31+160]
	007 Move [X8+1], W11
	008 Move W11, [X31+152]
	009 Move [X8+2], W12
	010 Move W12, [X31+144]
	011 Move [X8+3], W10
	012 Move W10, [X31+136]
	013 Move [X8+4], W11
	014 Move W11, [X31+128]
	015 Move [X8+5], W12
	016 Move W12, [X31+120]
	017 Move [X8+6], W10
	018 Move W10, [X31+112]
	019 Move [X8+7], W11
	020 Move W11, [X31+104]
	021 Move [X8+8], W12
	022 Move W12, [X31+96]
	023 Move [X8+9], W10
	024 Move W10, [X31+88]
	025 Move [X8+10], W11
	026 Move W11, [X31+80]
	027 Move [X8+11], W12
	028 Move W12, [X31+72]
	029 Move [X8+12], W10
	030 Move W10, [X31+64]
	031 Move [X8+13], W11
	032 Move W11, [X31+56]
	033 Move [X8+14], W12
	034 Move W12, [X31+48]
	035 Move [X8+15], W10
	036 Move W10, [X31+40]
	037 Move [X8+16], W11
	038 Move W11, [X31+32]
	039 Move [X8+17], W12
	040 Move W12, [X31+24]
	041 Move [X8+18], W10
	042 Move W10, [X31+16]
	043 Move [X8+19], W11
	044 Move W11, [X31]
	045 Move [X8+24], W7
	046 Move [X8+25], W6
	047 Move [X8+26], W5
	048 Move [X8+27], W4
	049 Move [X8+28], W3
	050 Move [X8+29], W2
	051 Move [X8+30], W1
	052 Move [X8+20], W12
	053 Move [X8+21], W10
	054 Move [X8+22], W9
	055 Move [X8+23], W11
	056 Move [X8+31], W0
	057 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set_epi16(System.Int16 e15_, System.Int16 e14_, System.Int16 e13_, System.Int16 e12_, System.Int16 e11_, System.Int16 e10_, System.Int16 e9_, System.Int16 e8_, System.Int16 e7_, System.Int16 e6_, System.Int16 e5_, System.Int16 e4_, System.Int16 e3_, System.Int16 e2_, System.Int16 e1_, System.Int16 e0_)

Disassembly:
	0x03724CFC LDP X20, X19, [X31 + 0x20]
	0x03724D00 LDP X22, X21, [X31 + 0x10]
	0x03724D04 LDR X30, [X31], #0x30
	0x03724D08 RET
	0x03724D0C STR X30, [X31 - 0x30]!
	0x03724D10 STP X22, X21, [X31 + 0x10]
	0x03724D14 STP X20, X19, [X31 + 0x20]
	0x03724D18 MOV X19, X1
	0x03724D1C MOV X20, X0
	0x03724D20 LDR X0, [X0]
	0x03724D24 LDR X1, [X20 + 0x8]
	0x03724D28 LDP X2, X3, [X19]
	0x03724D2C MOV X4, X31
	0x03724D30 MOV X21, X8
	0x03724D34 BL 0x372B144
	0x03724D38 MOV X22, X0
	0x03724D3C LDP X0, X8, [X20 + 0x10]
	0x03724D40 LDP X2, X3, [X19 + 0x10]
	0x03724D44 MOV X19, X1
	0x03724D48 MOV X4, X31
	0x03724D4C MOV X1, X8
	0x03724D50 BL 0x372B144
	0x03724D54 STP X22, X19, [X21]
	0x03724D58 STP X0, X1, [X21 + 0x10]
	0x03724D5C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 NotImplemented "Instruction LDRH not yet implemented."
	004 NotImplemented "Instruction LDRH not yet implemented."
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 NotImplemented "Instruction LDRH not yet implemented."
	009 NotImplemented "Instruction STRH not yet implemented."
	010 NotImplemented "Instruction STRH not yet implemented."
	011 NotImplemented "Instruction STRH not yet implemented."
	012 NotImplemented "Instruction STRH not yet implemented."
	013 NotImplemented "Instruction STRH not yet implemented."
	014 NotImplemented "Instruction STRH not yet implemented."
	015 NotImplemented "Instruction STRH not yet implemented."
	016 NotImplemented "Instruction STRH not yet implemented."
	017 NotImplemented "Instruction STRH not yet implemented."
	018 NotImplemented "Instruction STRH not yet implemented."
	019 NotImplemented "Instruction STRH not yet implemented."
	020 NotImplemented "Instruction STRH not yet implemented."
	021 NotImplemented "Instruction STRH not yet implemented."
	022 NotImplemented "Instruction STRH not yet implemented."
	023 NotImplemented "Instruction STRH not yet implemented."
	024 NotImplemented "Instruction STRH not yet implemented."
	025 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set_epi32(System.Int32 e7, System.Int32 e6, System.Int32 e5, System.Int32 e4, System.Int32 e3, System.Int32 e2, System.Int32 e1, System.Int32 e0)

Disassembly:
	0x03724D60 LDP X22, X21, [X31 + 0x10]
	0x03724D64 LDR X30, [X31], #0x30
	0x03724D68 RET
	0x03724D6C STR X30, [X31 - 0x30]!
	0x03724D70 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X8], W7
	002 Move [X8+4], W6
	003 Move [X8+8], W5
	004 Move [X8+12], W4
	005 Move [X8+16], W3
	006 Move [X8+20], W2
	007 Move [X8+24], W1
	008 Move [X8+28], W0
	009 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set_epi64x(System.Int64 e3, System.Int64 e2, System.Int64 e1, System.Int64 e0)

Disassembly:
	0x03724D74 STP X20, X19, [X31 + 0x20]
	0x03724D78 MOV X19, X1
	0x03724D7C MOV X20, X0

ISIL:
	001 Move [X8], X3
	002 Move [X8+8], X2
	003 Move [X8+16], X1
	004 Move [X8+24], X0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set_m128d(Unity.Burst.Intrinsics.v128 hi, Unity.Burst.Intrinsics.v128 lo)

Disassembly:
	0x03724D80 LDR X0, [X0]
	0x03724D84 LDR X1, [X20 + 0x8]
	0x03724D88 LDP X2, X3, [X19]

ISIL:
	001 Move [X8], X2
	002 Move [X8+8], X3
	003 Move [X8+16], X0
	004 Move [X8+24], X1
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set_m128i(Unity.Burst.Intrinsics.v128 hi, Unity.Burst.Intrinsics.v128 lo)

Disassembly:
	0x03724D8C MOV X4, X31
	0x03724D90 MOV X21, X8
	0x03724D94 BL 0x372B1B4

ISIL:
	001 Move [X8], X2
	002 Move [X8+8], X3
	003 Move [X8+16], X0
	004 Move [X8+24], X1
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setr_pd(System.Double d, System.Double c, System.Double b, System.Double a)

Disassembly:
	0x03724D98 MOV X22, X0
	0x03724D9C LDP X0, X8, [X20 + 0x10]
	0x03724DA0 LDP X2, X3, [X19 + 0x10]

ISIL:
	001 Move [X8], D0
	002 Move [X8+8], D1
	003 Move [X8+16], D2
	004 Move [X8+24], D3
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setr_ps(System.Single e7, System.Single e6, System.Single e5, System.Single e4, System.Single e3, System.Single e2, System.Single e1, System.Single e0)

Disassembly:
	0x03724DA4 MOV X19, X1
	0x03724DA8 MOV X4, X31
	0x03724DAC MOV X1, X8
	0x03724DB0 BL 0x372B1B4
	0x03724DB4 STP X22, X19, [X21]

ISIL:
	001 Move [X8], S0
	002 Move [X8+8], S1
	003 Move [X8+8], S2
	004 Move [X8+16], S3
	005 Move [X8+16], S4
	006 Move [X8+24], S5
	007 Move [X8+24], S6
	008 Move [X8+32], S7
	009 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setr_epi8(System.Byte e31_, System.Byte e30_, System.Byte e29_, System.Byte e28_, System.Byte e27_, System.Byte e26_, System.Byte e25_, System.Byte e24_, System.Byte e23_, System.Byte e22_, System.Byte e21_, System.Byte e20_, System.Byte e19_, System.Byte e18_, System.Byte e17_, System.Byte e16_, System.Byte e15_, System.Byte e14_, System.Byte e13_, System.Byte e12_, System.Byte e11_, System.Byte e10_, System.Byte e9_, System.Byte e8_, System.Byte e7_, System.Byte e6_, System.Byte e5_, System.Byte e4_, System.Byte e3_, System.Byte e2_, System.Byte e1_, System.Byte e0_)

Disassembly:
	0x03724DB8 STP X0, X1, [X21 + 0x10]
	0x03724DBC LDP X20, X19, [X31 + 0x20]
	0x03724DC0 LDP X22, X21, [X31 + 0x10]
	0x03724DC4 LDR X30, [X31], #0x30
	0x03724DC8 RET
	0x03724DCC STR X30, [X31 - 0x30]!
	0x03724DD0 STP X22, X21, [X31 + 0x10]
	0x03724DD4 STP X20, X19, [X31 + 0x20]
	0x03724DD8 MOV X19, X1
	0x03724DDC MOV X20, X0
	0x03724DE0 LDR X0, [X0]
	0x03724DE4 LDR X1, [X20 + 0x8]
	0x03724DE8 LDP X2, X3, [X19]
	0x03724DEC MOV X4, X31
	0x03724DF0 MOV X21, X8
	0x03724DF4 BL 0x372B1E0
	0x03724DF8 MOV X22, X0
	0x03724DFC LDP X0, X8, [X20 + 0x10]
	0x03724E00 LDP X2, X3, [X19 + 0x10]
	0x03724E04 MOV X19, X1
	0x03724E08 MOV X4, X31
	0x03724E0C MOV X1, X8
	0x03724E10 BL 0x372B1E0
	0x03724E14 STP X22, X19, [X21]
	0x03724E18 STP X0, X1, [X21 + 0x10]
	0x03724E1C LDP X20, X19, [X31 + 0x20]
	0x03724E20 LDP X22, X21, [X31 + 0x10]
	0x03724E24 LDR X30, [X31], #0x30
	0x03724E28 RET
	0x03724E2C STR X30, [X31 - 0x30]!
	0x03724E30 STP X22, X21, [X31 + 0x10]
	0x03724E34 STP X20, X19, [X31 + 0x20]
	0x03724E38 MOV X19, X1
	0x03724E3C MOV X20, X0
	0x03724E40 LDR X0, [X0]
	0x03724E44 LDR X1, [X20 + 0x8]
	0x03724E48 LDP X2, X3, [X19]
	0x03724E4C MOV X4, X31
	0x03724E50 MOV X21, X8
	0x03724E54 BL 0x372B1EC
	0x03724E58 MOV X22, X0
	0x03724E5C LDP X0, X8, [X20 + 0x10]
	0x03724E60 LDP X2, X3, [X19 + 0x10]
	0x03724E64 MOV X19, X1
	0x03724E68 MOV X4, X31
	0x03724E6C MOV X1, X8
	0x03724E70 BL 0x372B1EC
	0x03724E74 STP X22, X19, [X21]
	0x03724E78 STP X0, X1, [X21 + 0x10]
	0x03724E7C LDP X20, X19, [X31 + 0x20]
	0x03724E80 LDP X22, X21, [X31 + 0x10]
	0x03724E84 LDR X30, [X31], #0x30
	0x03724E88 RET
	0x03724E8C STR X30, [X31 - 0x30]!
	0x03724E90 STP X22, X21, [X31 + 0x10]
	0x03724E94 STP X20, X19, [X31 + 0x20]
	0x03724E98 MOV X19, X1

ISIL:
	001 Move W10, [X31]
	002 Move W11, [X31+8]
	003 Move W12, [X31+16]
	004 Move W9, [X31+176]
	005 Move [X8+8], W10
	006 Move W10, [X31+24]
	007 Move [X8+9], W11
	008 Move W11, [X31+32]
	009 Move [X8+10], W12
	010 Move W12, [X31+40]
	011 Move [X8+11], W10
	012 Move W10, [X31+48]
	013 Move [X8+12], W11
	014 Move W11, [X31+56]
	015 Move [X8+13], W12
	016 Move W12, [X31+64]
	017 Move [X8+14], W10
	018 Move W10, [X31+72]
	019 Move [X8+15], W11
	020 Move W11, [X31+80]
	021 Move [X8+16], W12
	022 Move W12, [X31+88]
	023 Move [X8+17], W10
	024 Move W10, [X31+96]
	025 Move [X8+18], W11
	026 Move W11, [X31+104]
	027 Move [X8+19], W12
	028 Move W12, [X31+112]
	029 Move [X8+20], W10
	030 Move W10, [X31+120]
	031 Move [X8+21], W11
	032 Move W11, [X31+128]
	033 Move [X8+22], W12
	034 Move W12, [X31+136]
	035 Move [X8+23], W10
	036 Move W10, [X31+144]
	037 Move [X8+24], W11
	038 Move W11, [X31+152]
	039 Move [X8+25], W12
	040 Move W12, [X31+160]
	041 Move [X8+26], W10
	042 Move W10, [X31+168]
	043 Move [X8+27], W11
	044 Move W11, [X31+184]
	045 Move [X8], W0
	046 Move [X8+1], W1
	047 Move [X8+2], W2
	048 Move [X8+3], W3
	049 Move [X8+4], W4
	050 Move [X8+5], W5
	051 Move [X8+6], W6
	052 Move [X8+7], W7
	053 Move [X8+28], W12
	054 Move [X8+29], W10
	055 Move [X8+30], W9
	056 Move [X8+31], W11
	057 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setr_epi16(System.Int16 e15_, System.Int16 e14_, System.Int16 e13_, System.Int16 e12_, System.Int16 e11_, System.Int16 e10_, System.Int16 e9_, System.Int16 e8_, System.Int16 e7_, System.Int16 e6_, System.Int16 e5_, System.Int16 e4_, System.Int16 e3_, System.Int16 e2_, System.Int16 e1_, System.Int16 e0_)

Disassembly:
	0x03724E9C MOV X20, X0
	0x03724EA0 LDR X0, [X0]
	0x03724EA4 LDR X1, [X20 + 0x8]
	0x03724EA8 LDP X2, X3, [X19]
	0x03724EAC MOV X4, X31
	0x03724EB0 MOV X21, X8
	0x03724EB4 BL 0x372B274
	0x03724EB8 MOV X22, X0
	0x03724EBC LDP X0, X8, [X20 + 0x10]
	0x03724EC0 LDP X2, X3, [X19 + 0x10]
	0x03724EC4 MOV X19, X1
	0x03724EC8 MOV X4, X31
	0x03724ECC MOV X1, X8
	0x03724ED0 BL 0x372B274
	0x03724ED4 STP X22, X19, [X21]
	0x03724ED8 STP X0, X1, [X21 + 0x10]
	0x03724EDC LDP X20, X19, [X31 + 0x20]
	0x03724EE0 LDP X22, X21, [X31 + 0x10]
	0x03724EE4 LDR X30, [X31], #0x30
	0x03724EE8 RET
	0x03724EEC STR X30, [X31 - 0x30]!
	0x03724EF0 STP X22, X21, [X31 + 0x10]
	0x03724EF4 STP X20, X19, [X31 + 0x20]
	0x03724EF8 MOV X19, X1
	0x03724EFC MOV X20, X0

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 NotImplemented "Instruction LDRH not yet implemented."
	004 NotImplemented "Instruction LDRH not yet implemented."
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 NotImplemented "Instruction LDRH not yet implemented."
	009 NotImplemented "Instruction STRH not yet implemented."
	010 NotImplemented "Instruction STRH not yet implemented."
	011 NotImplemented "Instruction STRH not yet implemented."
	012 NotImplemented "Instruction STRH not yet implemented."
	013 NotImplemented "Instruction STRH not yet implemented."
	014 NotImplemented "Instruction STRH not yet implemented."
	015 NotImplemented "Instruction STRH not yet implemented."
	016 NotImplemented "Instruction STRH not yet implemented."
	017 NotImplemented "Instruction STRH not yet implemented."
	018 NotImplemented "Instruction STRH not yet implemented."
	019 NotImplemented "Instruction STRH not yet implemented."
	020 NotImplemented "Instruction STRH not yet implemented."
	021 NotImplemented "Instruction STRH not yet implemented."
	022 NotImplemented "Instruction STRH not yet implemented."
	023 NotImplemented "Instruction STRH not yet implemented."
	024 NotImplemented "Instruction STRH not yet implemented."
	025 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setr_epi32(System.Int32 e7, System.Int32 e6, System.Int32 e5, System.Int32 e4, System.Int32 e3, System.Int32 e2, System.Int32 e1, System.Int32 e0)

Disassembly:
	0x03724F00 LDR X0, [X0]
	0x03724F04 LDR X1, [X20 + 0x8]
	0x03724F08 LDP X2, X3, [X19]
	0x03724F0C MOV X4, X31
	0x03724F10 MOV X21, X8

ISIL:
	001 Move [X8], W0
	002 Move [X8+4], W1
	003 Move [X8+8], W2
	004 Move [X8+12], W3
	005 Move [X8+16], W4
	006 Move [X8+20], W5
	007 Move [X8+24], W6
	008 Move [X8+28], W7
	009 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setr_epi64x(System.Int64 e3, System.Int64 e2, System.Int64 e1, System.Int64 e0)

Disassembly:
	0x03724F14 BL 0x372B2FC
	0x03724F18 MOV X22, X0
	0x03724F1C LDP X0, X8, [X20 + 0x10]

ISIL:
	001 Move [X8], X0
	002 Move [X8+8], X1
	003 Move [X8+16], X2
	004 Move [X8+24], X3
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setr_m128(Unity.Burst.Intrinsics.v128 hi, Unity.Burst.Intrinsics.v128 lo)

Disassembly:
	0x03724F20 LDP X2, X3, [X19 + 0x10]
	0x03724F24 MOV X19, X1
	0x03724F28 MOV X4, X31

ISIL:
	001 Move [X8], X0
	002 Move [X8+8], X1
	003 Move [X8+16], X2
	004 Move [X8+24], X3
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setr_m128d(Unity.Burst.Intrinsics.v128 hi, Unity.Burst.Intrinsics.v128 lo)

Disassembly:
	0x03724F2C MOV X1, X8
	0x03724F30 BL 0x372B2FC
	0x03724F34 STP X22, X19, [X21]

ISIL:
	001 Move [X8], X0
	002 Move [X8+8], X1
	003 Move [X8+16], X2
	004 Move [X8+24], X3
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_setr_m128i(Unity.Burst.Intrinsics.v128 hi, Unity.Burst.Intrinsics.v128 lo)

Disassembly:
	0x03724F38 STP X0, X1, [X21 + 0x10]
	0x03724F3C LDP X20, X19, [X31 + 0x20]
	0x03724F40 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X8], X0
	002 Move [X8+8], X1
	003 Move [X8+16], X2
	004 Move [X8+24], X3
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set1_pd(System.Double a)

Disassembly:
	0x03724F44 LDR X30, [X31], #0x30
	0x03724F48 RET
	0x03724F4C STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X8+16], D0
	002 Move [X8+24], D0
	003 Move [X8], D0
	004 Move [X8+8], D0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set1_ps(System.Single a)

Disassembly:
	0x03724F50 STP X22, X21, [X31 + 0x10]
	0x03724F54 STP X20, X19, [X31 + 0x20]
	0x03724F58 MOV X19, X1

ISIL:
	001 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set1_epi8(System.Byte a)

Disassembly:
	0x03724F5C MOV X20, X0
	0x03724F60 LDR X0, [X0]
	0x03724F64 LDR X1, [X20 + 0x8]
	0x03724F68 LDP X2, X3, [X19]
	0x03724F6C MOV X4, X31
	0x03724F70 MOV X21, X8

ISIL:
	001 And X9, X0, 255
	002 Or X10, X31, 0x101010101010101
	003 Multiply X9, X9, X10
	004 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	005 Move [X8], V0
	006 Move [X8+8], V0
	007 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set1_epi16(System.Int16 a)

Disassembly:
	0x03724F74 BL 0x372B384
	0x03724F78 MOV X22, X0
	0x03724F7C LDP X0, X8, [X20 + 0x10]

ISIL:
	001 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set1_epi32(System.Int32 a)

Disassembly:
	0x03724F80 LDP X2, X3, [X19 + 0x10]
	0x03724F84 MOV X19, X1
	0x03724F88 MOV X4, X31

ISIL:
	001 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_set1_epi64x(System.Int64 a)

Disassembly:
	0x03724F8C MOV X1, X8
	0x03724F90 BL 0x372B384
	0x03724F94 STP X22, X19, [X21]

ISIL:
	001 Move [X8+16], X0
	002 Move [X8+24], X0
	003 Move [X8], X0
	004 Move [X8+8], X0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_castpd_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724F98 STP X0, X1, [X21 + 0x10]
	0x03724F9C LDP X20, X19, [X31 + 0x20]
	0x03724FA0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_castps_pd(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724FA4 LDR X30, [X31], #0x30
	0x03724FA8 RET
	0x03724FAC STR X30, [X31 - 0x30]!

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_castps_si256(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724FB0 STP X22, X21, [X31 + 0x10]
	0x03724FB4 STP X20, X19, [X31 + 0x20]
	0x03724FB8 MOV X19, X1

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_castpd_si256(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724FBC MOV X20, X0
	0x03724FC0 LDR X0, [X0]
	0x03724FC4 LDR X1, [X20 + 0x8]

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_castsi256_ps(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724FC8 LDP X2, X3, [X19]
	0x03724FCC MOV X4, X31
	0x03724FD0 MOV X21, X8

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_castsi256_pd(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724FD4 BL 0x372BB88
	0x03724FD8 MOV X22, X0
	0x03724FDC LDP X0, X8, [X20 + 0x10]

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_castps256_ps128(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724FE0 LDP X2, X3, [X19 + 0x10]
	0x03724FE4 MOV X19, X1
	0x03724FE8 MOV X4, X31

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_castpd256_pd128(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724FEC MOV X1, X8
	0x03724FF0 BL 0x372BB88
	0x03724FF4 STP X22, X19, [X21]

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_castsi256_si128(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03724FF8 STP X0, X1, [X21 + 0x10]
	0x03724FFC LDP X20, X19, [X31 + 0x20]
	0x03725000 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_castps128_ps256(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03725004 LDR X30, [X31], #0x30
	0x03725008 RET
	0x0372500C STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X8], X0
	002 Move [X8+8], X1
	003 Move [X8+16], X31
	004 Move [X8+24], X31
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_castpd128_pd256(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x0372501C MOV X20, X0
	0x03725020 LDR X0, [X0]
	0x03725024 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X8], X0
	002 Move [X8+8], X1
	003 Move [X8+16], X31
	004 Move [X8+24], X31
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_castsi128_si256(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03725028 LDP X2, X3, [X19]
	0x0372502C MOV X4, X31
	0x03725030 MOV X21, X8

ISIL:
	001 Move [X8], X0
	002 Move [X8+8], X1
	003 Move [X8+16], X31
	004 Move [X8+24], X31
	005 Return X0

Method: Unity.Burst.Intrinsics.v128 undefined_ps()

Disassembly:
	0x03725034 BL 0x372BBF8
	0x03725038 MOV X22, X0
	0x0372503C LDP X0, X8, [X20 + 0x10]

ISIL:
	001 Move X0, X31
	002 Move X1, X31
	003 Return X0

Method: Unity.Burst.Intrinsics.v128 undefined_pd()

Disassembly:
	0x03725040 LDP X2, X3, [X19 + 0x10]
	0x03725044 MOV X19, X1
	0x03725048 MOV X4, X31

ISIL:
	001 Move X0, X31
	002 Move X1, X31
	003 Return X0

Method: Unity.Burst.Intrinsics.v128 undefined_si128()

Disassembly:
	0x0372504C MOV X1, X8
	0x03725050 BL 0x372BBF8
	0x03725054 STP X22, X19, [X21]

ISIL:
	001 Move X0, X31
	002 Move X1, X31
	003 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_undefined_ps()

Disassembly:
	0x03725058 STP X0, X1, [X21 + 0x10]
	0x0372505C LDP X20, X19, [X31 + 0x20]
	0x03725060 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_undefined_pd()

Disassembly:
	0x03725064 LDR X30, [X31], #0x30
	0x03725068 RET
	0x0372506C STR X30, [X31 - 0x30]!

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_undefined_si256()

Disassembly:
	0x03725070 STP X22, X21, [X31 + 0x10]
	0x03725074 STP X20, X19, [X31 + 0x20]
	0x03725078 MOV X19, X1

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_zextps128_ps256(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x0372507C MOV X20, X0
	0x03725080 LDR X0, [X0]
	0x03725084 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X8], X0
	002 Move [X8+8], X1
	003 Move [X8+16], X31
	004 Move [X8+24], X31
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_zextpd128_pd256(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03725088 LDP X2, X3, [X19]
	0x0372508C MOV X4, X31
	0x03725090 MOV X21, X8

ISIL:
	001 Move [X8+16], X31
	002 Move [X8+24], X31
	003 Move [X8], X0
	004 Move [X8+8], X1
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_zextsi128_si256(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03725094 BL 0x372BC68
	0x03725098 MOV X22, X0
	0x0372509C LDP X0, X8, [X20 + 0x10]

ISIL:
	001 Move [X8+16], X31
	002 Move [X8+24], X31
	003 Move [X8], X0
	004 Move [X8+8], X1
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_insert_epi8(Unity.Burst.Intrinsics.v256 a, System.Int32 i, System.Int32 index)

Disassembly:
	0x037250A0 LDP X2, X3, [X19 + 0x10]
	0x037250A4 MOV X19, X1
	0x037250A8 MOV X4, X31
	0x037250AC MOV X1, X8
	0x037250B0 BL 0x372BC68
	0x037250B4 STP X22, X19, [X21]
	0x037250B8 STP X0, X1, [X21 + 0x10]
	0x037250BC LDP X20, X19, [X31 + 0x20]
	0x037250C0 LDP X22, X21, [X31 + 0x10]
	0x037250C4 LDR X30, [X31], #0x30
	0x037250C8 RET
	0x037250CC STR X30, [X31 - 0x30]!
	0x037250D0 STP X22, X21, [X31 + 0x10]
	0x037250D4 STP X20, X19, [X31 + 0x20]
	0x037250D8 MOV X19, X1
	0x037250DC MOV X20, X0
	0x037250E0 LDR X0, [X0]
	0x037250E4 LDR X1, [X20 + 0x8]
	0x037250E8 LDP X2, X3, [X19]
	0x037250EC MOV X4, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 Add X11, X31, 0
	006 Move [X31+40], X10
	007 Move V1, [X0]
	008 Move V0, [X0+16]
	009 And X10, X2, 31
	010 Move [X31], V1
	011 Move [X31+8], V0
	012 Move [X11], W1
	013 Move V1, [X31]
	014 Move V0, [X31+16]
	015 Move [X8], V1
	016 Move [X8+8], V0
	017 Move X8, [X9+40]
	018 Move X9, [X31+40]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X30, [X31+48]
	021 Add X31, X31, 64
	022 Return X0
	023 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_insert_epi16(Unity.Burst.Intrinsics.v256 a, System.Int32 i, System.Int32 index)

Disassembly:
	0x037250F0 MOV X21, X8
	0x037250F4 BL 0x372BCD8
	0x037250F8 MOV X22, X0
	0x037250FC LDP X0, X8, [X20 + 0x10]
	0x03725100 LDP X2, X3, [X19 + 0x10]
	0x03725104 MOV X19, X1
	0x03725108 MOV X4, X31
	0x0372510C MOV X1, X8
	0x03725110 BL 0x372BCD8
	0x03725114 STP X22, X19, [X21]
	0x03725118 STP X0, X1, [X21 + 0x10]
	0x0372511C LDP X20, X19, [X31 + 0x20]
	0x03725120 LDP X22, X21, [X31 + 0x10]
	0x03725124 LDR X30, [X31], #0x30
	0x03725128 RET
	0x0372512C STR X30, [X31 - 0x30]!
	0x03725130 STP X22, X21, [X31 + 0x10]
	0x03725134 STP X20, X19, [X31 + 0x20]
	0x03725138 MOV X19, X1
	0x0372513C MOV X20, X0
	0x03725140 LDR X0, [X0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 Add X11, X31, 0
	006 Move [X31+40], X10
	007 Move V0, [X0]
	008 Move V1, [X0+16]
	009 Move W10, W2
	010 ShiftRight W10, 31
	011 And W10, W10, 0x3FFFFFFF
	012 And X10, X10, 31
	013 Move [X31], V0
	014 Move [X31+8], V1
	015 NotImplemented "Instruction STRH not yet implemented."
	016 Move V1, [X31]
	017 Move V0, [X31+16]
	018 Move [X8], V1
	019 Move [X8+8], V0
	020 Move X8, [X9+40]
	021 Move X9, [X31+40]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X30, [X31+48]
	024 Add X31, X31, 64
	025 Return X0
	026 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_insert_epi32(Unity.Burst.Intrinsics.v256 a, System.Int32 i, System.Int32 index)

Disassembly:
	0x03725144 LDR X1, [X20 + 0x8]
	0x03725148 LDP X2, X3, [X19]
	0x0372514C MOV X4, X31
	0x03725150 MOV X21, X8
	0x03725154 BL 0x372BD1C
	0x03725158 MOV X22, X0
	0x0372515C LDP X0, X8, [X20 + 0x10]
	0x03725160 LDP X2, X3, [X19 + 0x10]
	0x03725164 MOV X19, X1
	0x03725168 MOV X4, X31
	0x0372516C MOV X1, X8
	0x03725170 BL 0x372BD1C
	0x03725174 STP X22, X19, [X21]
	0x03725178 STP X0, X1, [X21 + 0x10]
	0x0372517C LDP X20, X19, [X31 + 0x20]
	0x03725180 LDP X22, X21, [X31 + 0x10]
	0x03725184 LDR X30, [X31], #0x30
	0x03725188 RET
	0x0372518C STR X30, [X31 - 0x30]!
	0x03725190 STP X22, X21, [X31 + 0x10]
	0x03725194 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 Add X11, X31, 0
	006 Move [X31+40], X10
	007 Move V0, [X0]
	008 Move V1, [X0+16]
	009 Move W10, W2
	010 ShiftRight W10, 30
	011 And W10, W10, 0x1FFFFFFF
	012 And X10, X10, 31
	013 Move [X31], V0
	014 Move [X31+8], V1
	015 Move [X11], W1
	016 Move V1, [X31]
	017 Move V0, [X31+16]
	018 Move [X8], V1
	019 Move [X8+8], V0
	020 Move X8, [X9+40]
	021 Move X9, [X31+40]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X30, [X31+48]
	024 Add X31, X31, 64
	025 Return X0
	026 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_insert_epi64(Unity.Burst.Intrinsics.v256 a, System.Int64 i, System.Int32 index)

Disassembly:
	0x03725198 MOV X19, X1
	0x0372519C MOV X20, X0
	0x037251A0 LDR X0, [X0]
	0x037251A4 LDR X1, [X20 + 0x8]
	0x037251A8 LDP X2, X3, [X19]
	0x037251AC MOV X4, X31
	0x037251B0 MOV X21, X8
	0x037251B4 BL 0x372BDA4
	0x037251B8 MOV X22, X0
	0x037251BC LDP X0, X8, [X20 + 0x10]
	0x037251C0 LDP X2, X3, [X19 + 0x10]
	0x037251C4 MOV X19, X1
	0x037251C8 MOV X4, X31
	0x037251CC MOV X1, X8
	0x037251D0 BL 0x372BDA4
	0x037251D4 STP X22, X19, [X21]
	0x037251D8 STP X0, X1, [X21 + 0x10]
	0x037251DC LDP X20, X19, [X31 + 0x20]
	0x037251E0 LDP X22, X21, [X31 + 0x10]
	0x037251E4 LDR X30, [X31], #0x30
	0x037251E8 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 Add X11, X31, 0
	006 Move [X31+40], X10
	007 Move V0, [X0]
	008 Move V1, [X0+16]
	009 Move W10, W2
	010 ShiftRight W10, 29
	011 And W10, W10, 0xFFFFFFF
	012 And X10, X10, 31
	013 Move [X31], V0
	014 Move [X31+8], V1
	015 Move [X11], X1
	016 Move V1, [X31]
	017 Move V0, [X31+16]
	018 Move [X8], V1
	019 Move [X8+8], V0
	020 Move X8, [X9+40]
	021 Move X9, [X31+40]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X30, [X31+48]
	024 Add X31, X31, 64
	025 Return X0
	026 Call 0x3EB2B20

Method: System.Int32 mm256_extract_epi32(Unity.Burst.Intrinsics.v256 a, System.Int32 index)

Disassembly:
	0x037251EC STR X30, [X31 - 0x30]!
	0x037251F0 STP X22, X21, [X31 + 0x10]
	0x037251F4 STP X20, X19, [X31 + 0x20]
	0x037251F8 MOV X19, X1

ISIL:
	001 Move W8, W1
	002 ShiftRight W8, 30
	003 And W8, W8, 0x1FFFFFFF
	004 And X8, X8, 31
	005 Move W0, [X8]
	006 Return X0

Method: System.Int64 mm256_extract_epi64(Unity.Burst.Intrinsics.v256 a, System.Int32 index)

Disassembly:
	0x037251FC MOV X20, X0
	0x03725200 LDR X0, [X0]
	0x03725204 LDR X1, [X20 + 0x8]
	0x03725208 LDP X2, X3, [X19]

ISIL:
	001 Move W8, W1
	002 ShiftRight W8, 29
	003 And W8, W8, 0xFFFFFFF
	004 And X8, X8, 31
	005 Move X0, [X8]
	006 Return X0

