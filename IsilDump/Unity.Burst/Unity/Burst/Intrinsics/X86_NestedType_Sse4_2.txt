Type: Unity.Burst.Intrinsics.X86/Sse4_2

Method: System.Boolean get_IsSse42Supported()

Disassembly:
	0x037318F8 MOV X21, X4
	0x037318FC MOV X22, X3

ISIL:
	001 Move W0, W31
	002 Return X0

Method: Unity.Burst.Intrinsics.v128 cmpistrm_emulation(T* a, T* b, System.Int32 len, System.Int32 imm8, System.Int32 allOnes, T allOnesT)

Disassembly:
	0x022BFDAC BL 0x33B2C70
	0x022BFDB0 MOV X0, X20
	0x022BFDB4 MOV X1, X21
	0x022BFDB8 BL 0x1C16DEC
	0x022BFDBC STP X30, X21, [X31 - 0x20]!
	0x022BFDC0 STP X20, X19, [X31 + 0x10]
	0x022BFDC4 LDR X8, [X2 + 0x38]
	0x022BFDC8 MOV X19, X2
	0x022BFDCC MOV X21, X1
	0x022BFDD0 MOV X20, X0
	0x022BFDD4 CBNZ X8, 0x22BFDE0
	0x022BFDD8 MOV X0, X19
	0x022BFDDC BL 0x1C5C6E0
	0x022BFDE0 LDR X0, [X20 + 0x18]
	0x022BFDE4 MOV X1, X31
	0x022BFDE8 BL 0x3BEF01C
	0x022BFDEC LDR X8, [X19 + 0x38]
	0x022BFDF0 MOV X1, X21
	0x022BFDF4 MOV W2, W31
	0x022BFDF8 LDR X3, [X8]
	0x022BFDFC BL 0x227A2C0
	0x022BFE00 LDR X8, [X19 + 0x38]
	0x022BFE04 MOV X1, X0
	0x022BFE08 MOV X0, X20
	0x022BFE0C LDP X20, X19, [X31 + 0x10]
	0x022BFE10 LDR X2, [X8 + 0x8]
	0x022BFE14 LDP X30, X21, [X31], #0x20
	0x022BFE18 B 0x22BF420
	0x022BFE1C STP X29, X30, [X31 - 0x60]!
	0x022BFE20 STP X28, X27, [X31 + 0x10]
	0x022BFE24 STP X26, X25, [X31 + 0x20]
	0x022BFE28 STP X24, X23, [X31 + 0x30]
	0x022BFE2C STP X22, X21, [X31 + 0x40]
	0x022BFE30 STP X20, X19, [X31 + 0x50]
	0x022BFE34 ADD X29, X31, 0x0
	0x022BFE38 SUB X31, X31, 0x50
	0x022BFE3C STUR X1, [X29 - 0x48]
	0x022BFE40 MRS X8, 0xC000
	0x022BFE44 STP X2, X8, [X29 - 0x30]
	0x022BFE48 LDR X8, [X8 + 0x28]
	0x022BFE4C MOV X26, X3
	0x022BFE50 MOV X24, X3
	0x022BFE54 STUR X8, [X29 - 0x8]
	0x022BFE58 LDR X19, [X26 + 0x38]!
	0x022BFE5C STUR X0, [X29 - 0x50]
	0x022BFE60 CBNZ X19, 0x22BFFB0
	0x022BFE64 ADRP X0, 0x1E5D000
	0x022BFE68 LDR X0, [X0 + 0x690]
	0x022BFE6C BL 0x1C16CF4
	0x022BFE70 ADRP X0, 0x1E5D000
	0x022BFE74 LDR X0, [X0 + 0x698]
	0x022BFE78 BL 0x1C16CF4
	0x022BFE7C ADRP X0, 0x1E5D000
	0x022BFE80 LDR X0, [X0 + 0x6A0]
	0x022BFE84 BL 0x1C16CF4
	0x022BFE88 ADRP X0, 0x1E5D000
	0x022BFE8C LDR X0, [X0 + 0x248]
	0x022BFE90 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X6+56]
	011 Move X24, X6
	012 Move W19, W5
	013 Move W22, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move X23, X1
	017 Move X25, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {28}
	020 Move X0, 0x1E5E000
	021 Move X0, [X0+2712]
	022 Call 0x1C17CF4
	023 Move X8, [X24+56]
	024 Compare X8, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X24
	027 Call 0x1C5D6E0
	028 Move X8, 0x1E5E000
	029 Move X8, [X8+2712]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X24+56]
	036 Move X0, X25
	037 Move W1, W21
	038 Move X2, [X8+8]
	039 Call 0x22BE8A8, X0, X1
	040 Move X8, [X24+56]
	041 Move W26, W0
	042 Move X0, X23
	043 Move W1, W21
	044 Move X2, [X8+8]
	045 Call 0x22BE8A8, X0, X1
	046 Move X8, [X24+56]
	047 Move W3, W0
	048 Move X0, X25
	049 Move W1, W26
	050 Move X7, [X8+16]
	051 Move X2, X23
	052 Move W4, W21
	053 Move W5, W20
	054 Move W6, W22
	055 Call 0x22BA088, X0, X1, X2, X3, X4, X5, X6
	056 Move W3, W0
	057 Move W0, W21
	058 Move W1, W20
	059 Move W2, W19
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X24, [X31+32]
	065 Move X23, [X31+40]
	066 Move X26, [X31+16]
	067 Move X25, [X31+24]
	068 Move X30, [X31+80]
	069 Call 0x22BEC50, X0, X1, X2, X3
	070 Return X0

Method: Unity.Burst.Intrinsics.v128 cmpestrm_emulation(T* a, System.Int32 alen, T* b, System.Int32 blen, System.Int32 len, System.Int32 imm8, System.Int32 allOnes, T allOnesT)

Disassembly:
	0x022BF4E4 BL 0x1C16CF4
	0x022BF4E8 ADRP X0, 0x1E38000
	0x022BF4EC LDR X0, [X0 + 0x628]
	0x022BF4F0 BL 0x1C16CF4
	0x022BF4F4 ADRP X0, 0x1E5B000
	0x022BF4F8 LDR X0, [X0 + 0xD80]
	0x022BF4FC BL 0x1C16CF4
	0x022BF500 ADRP X0, 0x1E34000
	0x022BF504 LDR X0, [X0 + 0x758]
	0x022BF508 BL 0x1C16CF4
	0x022BF50C ADRP X0, 0x1E5B000
	0x022BF510 LDR X0, [X0 + 0xD88]
	0x022BF514 BL 0x1C16CF4
	0x022BF518 ADRP X0, 0x1E36000
	0x022BF51C LDR X0, [X0 + 0xA60]
	0x022BF520 BL 0x1C16CF4
	0x022BF524 ADRP X0, 0x1E5D000
	0x022BF528 LDR X0, [X0 + 0x6A8]
	0x022BF52C BL 0x1C16CF4
	0x022BF530 ADRP X0, 0x1E5B000
	0x022BF534 LDR X0, [X0 + 0xD90]
	0x022BF538 BL 0x1C16CF4
	0x022BF53C ADRP X0, 0x1E5D000
	0x022BF540 LDR X0, [X0 + 0x6B0]
	0x022BF544 BL 0x1C16CF4
	0x022BF548 ADRP X0, 0x1E5C000
	0x022BF54C LDR X0, [X0 + 0xA80]
	0x022BF550 BL 0x1C16CF4
	0x022BF554 ADRP X0, 0x1E34000
	0x022BF558 LDR X0, [X0 + 0xA90]
	0x022BF55C BL 0x1C16CF4
	0x022BF560 ADRP X0, 0x1E5C000
	0x022BF564 LDR X0, [X0 + 0xB60]
	0x022BF568 BL 0x1C16CF4
	0x022BF56C ADRP X0, 0x1E34000
	0x022BF570 LDR X0, [X0 + 0x6C0]
	0x022BF574 BL 0x1C16CF4
	0x022BF578 ADRP X0, 0x1E5D000
	0x022BF57C LDR X0, [X0 + 0xAA0]
	0x022BF580 BL 0x1C16CF4
	0x022BF584 LDR X8, [X21 + 0x38]
	0x022BF588 CBNZ X8, 0x22BF598
	0x022BF58C MOV X0, X21
	0x022BF590 BL 0x1C5C6E0
	0x022BF594 LDR X8, [X21 + 0x38]
	0x022BF598 ADRP X25, 0x1E34000
	0x022BF59C LDR X25, [X25 + 0x6C0]
	0x022BF5A0 LDR X22, [X8]
	0x022BF5A4 LDR X0, [X25]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, [X31+80]
	012 Move W19, W7
	013 Move W22, W6
	014 Move W20, W5
	015 Move X8, [X27+56]
	016 Move W21, W4
	017 Move W23, W3
	018 Move X24, X2
	019 Move W25, W1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {31}
	023 Move X0, 0x1E5E000
	024 Move X0, [X0+2712]
	025 Call 0x1C17CF4
	026 Move X8, [X27+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X27
	030 Call 0x1C5D6E0
	031 Move X8, 0x1E5E000
	032 Move X8, [X8+2712]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X8, [X27+56]
	039 Move X0, X26
	040 Move W1, W25
	041 Move X2, X24
	042 Move X7, [X8+8]
	043 Move W3, W23
	044 Move W4, W21
	045 Move W5, W20
	046 Move W6, W22
	047 Call 0x22BA088, X0, X1, X2, X3, X4, X5, X6
	048 Move W3, W0
	049 Move W0, W21
	050 Move W1, W20
	051 Move W2, W19
	052 Move X20, [X31+64]
	053 Move X19, [X31+72]
	054 Move X22, [X31+48]
	055 Move X21, [X31+56]
	056 Move X24, [X31+32]
	057 Move X23, [X31+40]
	058 Move X26, [X31+16]
	059 Move X25, [X31+24]
	060 Move X30, [X31+80]
	061 Move X27, [X31+88]
	062 Call 0x22BEC50, X0, X1, X2, X3
	063 Return X0

Method: Unity.Burst.Intrinsics.v128 ComputeStrmOutput(System.Int32 len, System.Int32 imm8, T allOnesT, System.Int32 intRes2)

Disassembly:
	0x022BEC50 MOV X0, X24
	0x022BEC54 MOV W1, W20
	0x022BEC58 LDR X2, [X8 + 0x8]
	0x022BEC5C BL 0x22BDA50
	0x022BEC60 LDR X8, [X23 + 0x38]
	0x022BEC64 MOV W25, W0
	0x022BEC68 MOV X0, X22
	0x022BEC6C MOV W1, W20
	0x022BEC70 LDR X2, [X8 + 0x8]
	0x022BEC74 BL 0x22BDA50
	0x022BEC78 LDR X8, [X23 + 0x38]
	0x022BEC7C MOV W3, W0
	0x022BEC80 MOV X0, X24
	0x022BEC84 MOV W1, W25
	0x022BEC88 LDR X7, [X8 + 0x10]
	0x022BEC8C MOV X2, X22
	0x022BEC90 MOV W4, W20
	0x022BEC94 MOV W5, W19
	0x022BEC98 MOV W6, W21
	0x022BEC9C BL 0x22B9E80
	0x022BECA0 MOV W2, W0
	0x022BECA4 MOV W0, W20
	0x022BECA8 MOV W1, W19
	0x022BECAC LDP X20, X19, [X31 + 0x30]
	0x022BECB0 LDP X22, X21, [X31 + 0x20]
	0x022BECB4 LDP X24, X23, [X31 + 0x10]
	0x022BECB8 MOV X3, X31
	0x022BECBC LDP X30, X25, [X31], #0x40
	0x022BECC0 B 0x3730900
	0x022BECC4 STP X30, X25, [X31 - 0x40]!
	0x022BECC8 STP X24, X23, [X31 + 0x10]
	0x022BECCC STP X22, X21, [X31 + 0x20]
	0x022BECD0 STP X20, X19, [X31 + 0x30]
	0x022BECD4 LDR X8, [X6 + 0x38]
	0x022BECD8 MOV X23, X6
	0x022BECDC MOV W21, W4
	0x022BECE0 MOV W19, W3
	0x022BECE4 MOV W20, W2
	0x022BECE8 MOV X22, X1
	0x022BECEC MOV X24, X0
	0x022BECF0 CBNZ X8, 0x22BED10
	0x022BECF4 ADRP X0, 0x1E5E000
	0x022BECF8 LDR X0, [X0 + 0xA98]
	0x022BECFC BL 0x1C16CF4
	0x022BED00 LDR X8, [X23 + 0x38]
	0x022BED04 CBNZ X8, 0x22BED10
	0x022BED08 MOV X0, X23
	0x022BED0C BL 0x1C5C6E0
	0x022BED10 ADRP X8, 0x1E5E000
	0x022BED14 LDR X8, [X8 + 0xA98]
	0x022BED18 LDR X0, [X8]
	0x022BED1C LDR W8, [X0 + 0xE0]
	0x022BED20 CBNZ W8, 0x22BED28
	0x022BED24 BL 0x1C16DFC
	0x022BED28 LDR X8, [X23 + 0x38]
	0x022BED2C MOV X0, X24
	0x022BED30 MOV W1, W20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X9, [X8+40]
	005 Move [X31+24], X9
	006 Move [X31+8], X31
	007 Move [X31+16], X31
	008 Move TEMP, X1
	009 And TEMP, TEMP, 64
	010 Compare TEMP, 64
	011 JumpIfEqual {14}
	012 Move X1, X31
	013 Move [X31+8], W3
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X11, -24981504
	016 Move W10, W0
	017 Move V0, [X11+121]
	018 Add X12, X10, 1
	019 Subtract X13, X10, 1
	020 And X10, X12, 0
	021 Move W12, 2
	022 Move X9, X31
	023 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	024 Add X11, X31, 8
	025 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	026 NotImplemented "Instruction INVALID not yet implemented."
	027 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	028 Move W12, S3
	029 Move TEMP, X12
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {38}
	033 And W12, W9, 30
	034 NotImplemented "Instruction LSRV not yet implemented."
	035 NotImplemented "Instruction SBFM not yet implemented."
	036 And W12, W12, W2
	037 Move [X11], W12
	038 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	039 Move TEMP, X12
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {50}
	043 And W12, W9, 30
	044 Or W12, W12, 1
	045 NotImplemented "Instruction LSRV not yet implemented."
	046 NotImplemented "Instruction SBFM not yet implemented."
	047 And W12, W12, W2
	048 Add X13, X11, X9
	049 Move [X13+1], W12
	050 Add X9, X9, 2
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction INVALID not yet implemented."
	053 Move X1, [X31+16]
	054 Move X1, X31
	055 Move X0, [X31+8]
	056 Move X8, [X8+40]
	057 Move X9, [X31+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X30, [X31+32]
	060 Add X31, X31, 48
	061 Return X0
	062 Call 0x3EB2B20

Method: System.Int32 cmpistri_emulation(T* a, T* b, System.Int32 len, System.Int32 imm8, System.Int32 allOnes, T allOnesT)

Disassembly:
	0x022BF954 MOV W8, W0
	0x022BF958 MOV X0, X31
	0x022BF95C TBNZ X8, 0x0, 0x22BF784
	0x022BF960 MOV X0, X19
	0x022BF964 MOV X1, X31
	0x022BF968 BL 0x3BF1A28
	0x022BF96C B 0x22BF740
	0x022BF970 LDR X0, [X25]
	0x022BF974 LDR X8, [X24]
	0x022BF978 LDR W9, [X0 + 0xE0]
	0x022BF97C LDR X21, [X8]
	0x022BF980 CBNZ W9, 0x22BF988
	0x022BF984 BL 0x1C16DFC
	0x022BF988 MOV X0, X21
	0x022BF98C MOV X1, X31
	0x022BF990 BL 0x338C698
	0x022BF994 ADRP X8, 0x1E5B000
	0x022BF998 LDR X8, [X8 + 0xD90]
	0x022BF99C MOV X21, X0
	0x022BF9A0 MOV X1, X31
	0x022BF9A4 LDR X8, [X8]
	0x022BF9A8 MOV X0, X8
	0x022BF9AC BL 0x338C698
	0x022BF9B0 MOV X1, X0
	0x022BF9B4 MOV X0, X21
	0x022BF9B8 MOV X2, X31
	0x022BF9BC BL 0x3395194
	0x022BF9C0 TBZ X0, 0x0, 0x22BFA94
	0x022BF9C4 LDR X0, [X20 + 0x10]
	0x022BF9C8 MOV X1, X31
	0x022BF9CC BL 0x3BEF01C
	0x022BF9D0 MOV X1, X19
	0x022BF9D4 MOV X2, X31
	0x022BF9D8 BL 0x3BEDE68
	0x022BF9DC ADRP X8, 0x1E5D000
	0x022BF9E0 LDR X8, [X8 + 0x6B0]
	0x022BF9E4 LDR X8, [X8]
	0x022BF9E8 STRB W0, [X31 + 0x8]
	0x022BF9EC B 0x22BF734
	0x022BF9F0 ADRP X8, 0x1E5D000
	0x022BF9F4 LDR X0, [X25]
	0x022BF9F8 LDR X8, [X8 + 0x6A8]
	0x022BF9FC LDR W9, [X0 + 0xE0]
	0x022BFA00 LDR X22, [X8]
	0x022BFA04 CBNZ W9, 0x22BFA0C
	0x022BFA08 BL 0x1C16DFC
	0x022BFA0C MOV X0, X22
	0x022BFA10 MOV X1, X31
	0x022BFA14 BL 0x338C698
	0x022BFA18 LDR X8, [X24]
	0x022BFA1C MOV X22, X0
	0x022BFA20 MOV X1, X31
	0x022BFA24 LDR X8, [X8]
	0x022BFA28 MOV X0, X8
	0x022BFA2C BL 0x338C698

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X6+56]
	010 Move X23, X6
	011 Move W21, W4
	012 Move W19, W3
	013 Move W20, W2
	014 Move X22, X1
	015 Move X24, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {26}
	018 Move X0, 0x1E5E000
	019 Move X0, [X0+2712]
	020 Call 0x1C17CF4
	021 Move X8, [X23+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {26}
	024 Move X0, X23
	025 Call 0x1C5D6E0
	026 Move X8, 0x1E5E000
	027 Move X8, [X8+2712]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X8, [X23+56]
	034 Move X0, X24
	035 Move W1, W20
	036 Move X2, [X8+8]
	037 Call 0x22BE8A8, X0, X1
	038 Move X8, [X23+56]
	039 Move W25, W0
	040 Move X0, X22
	041 Move W1, W20
	042 Move X2, [X8+8]
	043 Call 0x22BE8A8, X0, X1
	044 Move X8, [X23+56]
	045 Move W3, W0
	046 Move X0, X24
	047 Move W1, W25
	048 Move X7, [X8+16]
	049 Move X2, X22
	050 Move W4, W20
	051 Move W5, W19
	052 Move W6, W21
	053 Call 0x22BA088, X0, X1, X2, X3, X4, X5, X6
	054 Move W2, W0
	055 Move W0, W20
	056 Move W1, W19
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X3, X31
	064 Move X30, [X31+64]
	065 Move X25, [X31+72]
	066 Call Sse4_2.ComputeStriOutput, X0, X1, X2
	067 Return X0

Method: System.Int32 cmpestri_emulation(T* a, System.Int32 alen, T* b, System.Int32 blen, System.Int32 len, System.Int32 imm8, System.Int32 allOnes, T allOnesT)

Disassembly:
	0x022BF120 BL 0x22B9E80
	0x022BF124 MOV W3, W0
	0x022BF128 MOV W0, W21
	0x022BF12C MOV W1, W20
	0x022BF130 MOV W2, W19
	0x022BF134 LDP X20, X19, [X31 + 0x40]
	0x022BF138 LDP X22, X21, [X31 + 0x30]
	0x022BF13C LDP X24, X23, [X31 + 0x20]
	0x022BF140 LDP X26, X25, [X31 + 0x10]
	0x022BF144 LDR X30, [X31], #0x50
	0x022BF148 B 0x22BDEFC
	0x022BF14C STP X29, X30, [X31 - 0x60]!
	0x022BF150 STP X28, X27, [X31 + 0x10]
	0x022BF154 STP X26, X25, [X31 + 0x20]
	0x022BF158 STP X24, X23, [X31 + 0x30]
	0x022BF15C STP X22, X21, [X31 + 0x40]
	0x022BF160 STP X20, X19, [X31 + 0x50]
	0x022BF164 ADD X29, X31, 0x0
	0x022BF168 SUB X31, X31, 0x50
	0x022BF16C STUR X5, [X29 - 0x50]
	0x022BF170 MRS X22, 0xC000
	0x022BF174 LDR X8, [X22 + 0x28]
	0x022BF178 MOV X21, X6
	0x022BF17C MOV W23, W4
	0x022BF180 MOV W19, W3
	0x022BF184 STUR X8, [X29 - 0x8]
	0x022BF188 LDR X8, [X6 + 0x38]
	0x022BF18C MOV W20, W2
	0x022BF190 MOV X24, X1
	0x022BF194 MOV X25, X0
	0x022BF198 CBNZ X8, 0x22BF1BC
	0x022BF19C ADRP X0, 0x1E5D000
	0x022BF1A0 LDR X0, [X0 + 0xA98]
	0x022BF1A4 BL 0x1C16CF4
	0x022BF1A8 LDR X8, [X21 + 0x38]
	0x022BF1AC CBNZ X8, 0x22BF1BC
	0x022BF1B0 MOV X0, X21
	0x022BF1B4 BL 0x1C5C6E0
	0x022BF1B8 LDR X8, [X21 + 0x38]
	0x022BF1BC LDR X9, [X8 + 0x18]
	0x022BF1C0 LDR W27, [X9 + 0xFC]
	0x022BF1C4 ADD X9, X31, 0x0
	0x022BF1C8 ADD X10, X27, 0xF
	0x022BF1CC AND X10, X10, 0x1FFFFFFFF
	0x022BF1D0 SUB X26, X9, X10
	0x022BF1D4 ADD X31, X26, 0x0
	0x022BF1D8 ADRP X9, 0x1E5D000
	0x022BF1DC LDR X9, [X9 + 0xA98]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, [X31+80]
	011 Move W21, W6
	012 Move W19, W5
	013 Move W20, W4
	014 Move X8, [X26+56]
	015 Move W22, W3
	016 Move X23, X2
	017 Move W24, W1
	018 Move X25, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {29}
	021 Move X0, 0x1E5E000
	022 Move X0, [X0+2712]
	023 Call 0x1C17CF4
	024 Move X8, [X26+56]
	025 Compare X8, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X26
	028 Call 0x1C5D6E0
	029 Move X8, 0x1E5E000
	030 Move X8, [X8+2712]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, [X26+56]
	037 Move X0, X25
	038 Move W1, W24
	039 Move X2, X23
	040 Move X7, [X8+8]
	041 Move W3, W22
	042 Move W4, W20
	043 Move W5, W19
	044 Move W6, W21
	045 Call 0x22BA088, X0, X1, X2, X3, X4, X5, X6
	046 Move W2, W0
	047 Move W0, W20
	048 Move W1, W19
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X24, [X31+32]
	054 Move X23, [X31+40]
	055 Move X26, [X31+16]
	056 Move X25, [X31+24]
	057 Move X3, X31
	058 Move X30, [X31+80]
	059 Call Sse4_2.ComputeStriOutput, X0, X1, X2
	060 Return X0

Method: System.Int32 ComputeStriOutput(System.Int32 len, System.Int32 imm8, System.Int32 intRes2)

Disassembly:
	0x03731900 MOV W23, W2
	0x03731904 MOV X24, X1
	0x03731908 MOV X25, X0
	0x0373190C TBNZ X8, 0x0, 0x3731924
	0x03731910 ADRP X0, 0x9EB000
	0x03731914 LDR X0, [X0 + 0xA98]
	0x03731918 BL 0x1C16CF4
	0x0373191C MOVZ W8, 0x1
	0x03731920 STRB W8, [X27 + 0xCC2]
	0x03731924 LDR X0, [X26]
	0x03731928 LDR W8, [X0 + 0xE0]
	0x0373192C CBNZ W8, 0x3731934
	0x03731930 BL 0x1C16DFC
	0x03731934 MOV X0, X25
	0x03731938 MOV X1, X24
	0x0373193C MOV W2, W23
	0x03731940 MOV X3, X22
	0x03731944 MOV X4, X21

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 64
	003 Compare TEMP, 64
	004 JumpIfEqual {15}
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, W31
	007 NotImplemented "Instruction LSRV not yet implemented."
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {22}
	012 Add W8, W8, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W8, W0
	015 Move W8, W0
	016 Subtract W8, W8, 1
	017 NotImplemented "Instruction LSRV not yet implemented."
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {16}
	022 Move W0, W8
	023 Return X0

Method: System.Int32 ComputeStringLength(T* ptr, System.Int32 max)

Disassembly:
	0x022BE8A8 LDUR W6, [X29 - 0x54]
	0x022BE8AC MOV X0, X27
	0x022BE8B0 MOV W1, W26
	0x022BE8B4 LDR X8, [X7]
	0x022BE8B8 MOV X2, X25
	0x022BE8BC MOV W3, W23
	0x022BE8C0 MOV W4, W20
	0x022BE8C4 MOV W5, W19
	0x022BE8C8 BLR X8
	0x022BE8CC LDUR X1, [X29 - 0x50]
	0x022BE8D0 MOV W23, W0
	0x022BE8D4 MOV X0, X28
	0x022BE8D8 MOV X2, X21
	0x022BE8DC BL 0x3EB1AC0
	0x022BE8E0 LDR X8, [X22 + 0x38]
	0x022BE8E4 SUB X9, X29, 0x20
	0x022BE8E8 SUB X10, X29, 0x24
	0x022BE8EC SUB X3, X29, 0x48
	0x022BE8F0 LDR X1, [X8 + 0x18]
	0x022BE8F4 SUB X8, X29, 0x1C
	0x022BE8F8 SUB X4, X29, 0x18
	0x022BE8FC MOV X2, X31
	0x022BE900 LDR X0, [X1]
	0x022BE904 STP W19, W20, [X29 - 0x20]
	0x022BE908 STUR W23, [X29 - 0x24]
	0x022BE90C STP X8, X9, [X29 - 0x48]
	0x022BE910 STP X28, X10, [X29 - 0x38]
	0x022BE914 LDR X8, [X1 + 0x10]
	0x022BE918 BLR X8
	0x022BE91C LDP X0, X1, [X29 - 0x18]
	0x022BE920 LDR X8, [X24 + 0x28]
	0x022BE924 LDUR X9, [X29 - 0x8]
	0x022BE928 CMP X8, X9
	0x022BE92C B.NE 0x22BE950
	0x022BE930 ADD X31, X29, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move W22, W1
	009 Move X21, X0
	010 Move W19, W1
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X20
	014 Call 0x1C5D6E0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X22, X31
	017 Move X8, [X20+56]
	018 Move X0, [X8]
	019 Call 0x2119B64
	020 Compare X0, 0
	021 JumpIfEqual {42}
	022 Move X8, [X0]
	023 Move W1, [X21]
	024 Move W2, W31
	025 Move X9, [X8+440]
	026 Move X3, [X8+448]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {34}
	032 Add X22, X22, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W19, W22
	035 Move W0, W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Int32 ComputeStrCmpIntRes2(T* a, System.Int32 alen, T* b, System.Int32 blen, System.Int32 len, System.Int32 imm8, System.Int32 allOnes)

Disassembly:
	0x022BA088 MOV W1, W25
	0x022BA08C MOV W2, W26
	0x022BA090 MOV X4, X31
	0x022BA094 BL 0x3731CBC
	0x022BA098 ADD X26, X26, 0x1
	0x022BA09C CMP X21, X26
	0x022BA0A0 ADD X19, X19, 0x2
	0x022BA0A4 B.NE 0x22B9F38
	0x022BA0A8 ADD X25, X25, 0x1
	0x022BA0AC CMP X25, X21
	0x022BA0B0 B.NE 0x22B9F14
	0x022BA0B4 B 0x22BA0BC
	0x022BA0B8 UBFM W29, W19, 0x2, 0x3
	0x022BA0BC ADRP X9, 0xFFFFFFFFFE873000
	0x022BA0C0 MOV W8, W29
	0x022BA0C4 ADD X9, X9, 0xCB6
	0x022BA0C8 LDR X27, [X31 + 0x28]
	0x022BA0CC ADR X10, 0x14
	0x022BA0D0 LDRB W11, [X9, X8, LSL]
	0x022BA0D4 ADD X10, X10, X11, 0x2, LSL
	0x022BA0D8 LDP W28, W26, [X31 + 0x10]
	0x022BA0DC BR X10
	0x022BA0E0 CMP W28, 0x1
	0x022BA0E4 B.LT 0x22BA2EC
	0x022BA0E8 MOV W24, W31
	0x022BA0EC MOV W22, W31
	0x022BA0F0 MOV W25, W31
	0x022BA0F4 AND W19, W24, 0x1F
	0x022BA0F8 ADD X0, X31, 0x40
	0x022BA0FC MOV W1, W25
	0x022BA100 MOV W2, W24
	0x022BA104 MOV X3, X31
	0x022BA108 BL 0x3731CE0
	0x022BA10C AND W8, W0, 0x1
	0x022BA110 ADD W25, W25, 0x1
	0x022BA114 LSLV W8, W8, W19
	0x022BA118 CMP W28, W25
	0x022BA11C ORR W22, W8, W22, 0x0
	0x022BA120 B.NE 0x22BA0F8
	0x022BA124 ADD W24, W24, 0x1
	0x022BA128 CMP W24, W28
	0x022BA12C B.NE 0x22BA0F0
	0x022BA130 B 0x22BA250
	0x022BA134 CMP W28, 0x1
	0x022BA138 B.LT 0x22BA2EC
	0x022BA13C MOV W24, W31
	0x022BA140 MOV W22, W31
	0x022BA144 ADD X0, X31, 0x40
	0x022BA148 MOV W1, W24
	0x022BA14C MOV W2, W24
	0x022BA150 MOV X3, X31
	0x022BA154 BL 0x3731CE0
	0x022BA158 AND W8, W0, 0x1
	0x022BA15C LSLV W8, W8, W24
	0x022BA160 ADD W24, W24, 0x1
	0x022BA164 CMP W28, W24
	0x022BA168 ORR W22, W8, W22, 0x0
	0x022BA16C B.NE 0x22BA144
	0x022BA170 B 0x22BA250
	0x022BA174 CMP W28, 0x1
	0x022BA178 B.LT 0x22BA2EC
	0x022BA17C MOV W19, W31
	0x022BA180 MOVZ W20, 0x1
	0x022BA184 MOV W21, W28
	0x022BA188 SUB W8, W28, W19
	0x022BA18C CMP W8, 0x1
	0x022BA190 B.LT 0x22BA1CC
	0x022BA194 LSLV W8, W20, W19
	0x022BA198 MOV W24, W31
	0x022BA19C ORN W23, W31, W8, 0x0
	0x022BA1A0 ADD W2, W19, W24
	0x022BA1A4 ADD X0, X31, 0x40
	0x022BA1A8 MOV W1, W24
	0x022BA1AC MOV X3, X31
	0x022BA1B0 BL 0x3731CE0
	0x022BA1B4 ANDS W31, W0, 0x1
	0x022BA1B8 ADD W24, W24, 0x1
	0x022BA1BC CSINV W8, W23, W31, EQ
	0x022BA1C0 CMP W21, W24
	0x022BA1C4 AND W22, W8, W22, 0x0
	0x022BA1C8 B.NE 0x22BA1A0
	0x022BA1CC ADD W19, W19, 0x1
	0x022BA1D0 CMP W19, W28
	0x022BA1D4 SUB W21, W21, 0x1
	0x022BA1D8 B.NE 0x22BA188
	0x022BA1DC B 0x22BA250
	0x022BA1E0 CMP W28, 0x1
	0x022BA1E4 B.LT 0x22BA2EC
	0x022BA1E8 MOV W24, W31
	0x022BA1EC MOV W22, W31
	0x022BA1F0 MOV W25, W31
	0x022BA1F4 AND W19, W24, 0x1F
	0x022BA1F8 ADD X0, X31, 0x40
	0x022BA1FC MOV W1, W25
	0x022BA200 MOV W2, W24
	0x022BA204 MOV X3, X31
	0x022BA208 BL 0x3731CE0
	0x022BA20C TBZ X0, 0x0, 0x22BA22C
	0x022BA210 ADD W1, W25, 0x1
	0x022BA214 ADD X0, X31, 0x40
	0x022BA218 MOV W2, W24
	0x022BA21C MOV X3, X31
	0x022BA220 BL 0x3731CE0
	0x022BA224 AND W8, W0, 0x1
	0x022BA228 B 0x22BA230
	0x022BA22C MOV W8, W31
	0x022BA230 LSLV W8, W8, W19
	0x022BA234 ADD W25, W25, 0x2
	0x022BA238 CMP W25, W28
	0x022BA23C ORR W22, W8, W22, 0x0
	0x022BA240 B.LT 0x22BA1F8
	0x022BA244 ADD W24, W24, 0x1
	0x022BA248 CMP W24, W28
	0x022BA24C B.NE 0x22BA1F0
	0x022BA250 CMP W28, 0x1
	0x022BA254 B.LT 0x22BA2EC
	0x022BA258 MOV X19, X31
	0x022BA25C MOV W23, W31
	0x022BA260 MOV W24, W31
	0x022BA264 ORN W20, W31, W22, 0x0
	0x022BA268 MOV W21, W28
	0x022BA26C MOVZ W25, 0x1
	0x022BA270 TBNZ X26, 0x4, 0x22BA280
	0x022BA274 LSLV W8, W25, W19
	0x022BA278 AND W8, W8, W22, 0x0
	0x022BA27C B 0x22BA2D4
	0x022BA280 TBNZ X26, 0x5, 0x22BA28C
	0x022BA284 LSLV W8, W25, W19
	0x022BA288 B 0x22BA2D0
	0x022BA28C LDR X8, [X31 + 0x38]
	0x022BA290 LDR X8, [X8 + 0x38]
	0x022BA294 LDR X0, [X8 + 0x10]
	0x022BA298 BL 0x211D298
	0x022BA29C CBZ X0, 0x22BA328
	0x022BA2A0 LDR X8, [X0]
	0x022BA2A4 LDRH W1, [X27]
	0x022BA2A8 MOV W2, W31
	0x022BA2AC LDP X9, X3, [X8 + 0x1B8]
	0x022BA2B0 BLR X9
	0x022BA2B4 ORR W9, W23, W0, 0x0
	0x022BA2B8 LSLV W8, W25, W19
	0x022BA2BC TBZ X9, 0x0, 0x22BA2CC
	0x022BA2C0 AND W8, W8, W22, 0x0
	0x022BA2C4 MOVZ W23, 0x1
	0x022BA2C8 B 0x22BA2D4
	0x022BA2CC MOV W23, W31
	0x022BA2D0 AND W8, W8, W20, 0x0
	0x022BA2D4 ADD X19, X19, 0x1
	0x022BA2D8 ORR W24, W8, W24, 0x0
	0x022BA2DC CMP X21, X19
	0x022BA2E0 ADD X27, X27, 0x2
	0x022BA2E4 B.NE 0x22BA270
	0x022BA2E8 B 0x22BA2F0
	0x022BA2EC MOV W24, W31
	0x022BA2F0 LDR X8, [X31 + 0x8]
	0x022BA2F4 LDR X8, [X8 + 0x28]
	0x022BA2F8 LDR X9, [X31 + 0x68]
	0x022BA2FC CMP X8, X9
	0x022BA300 B.NE 0x22BA32C
	0x022BA304 MOV W0, W24
	0x022BA308 LDP X20, X19, [X31 + 0xC0]
	0x022BA30C LDP X22, X21, [X31 + 0xB0]
	0x022BA310 LDP X24, X23, [X31 + 0xA0]
	0x022BA314 LDP X26, X25, [X31 + 0x90]
	0x022BA318 LDP X28, X27, [X31 + 0x80]
	0x022BA31C LDP X29, X30, [X31 + 0x70]
	0x022BA320 ADD X31, X31, 0xD0
	0x022BA324 RET
	0x022BA328 BL 0x1C16F20
	0x022BA32C BL 0x3EB1B20
	0x022BA330 STP D9, D8, [X31 - 0x70]!
	0x022BA334 STP X29, X30, [X31 + 0x10]
	0x022BA338 STP X28, X27, [X31 + 0x20]
	0x022BA33C STP X26, X25, [X31 + 0x30]
	0x022BA340 STP X24, X23, [X31 + 0x40]
	0x022BA344 STP X22, X21, [X31 + 0x50]
	0x022BA348 STP X20, X19, [X31 + 0x60]
	0x022BA34C ADD X29, X31, 0x10
	0x022BA350 SUB X31, X31, 0x60
	0x022BA354 MRS X25, 0xC000
	0x022BA358 LDR X8, [X25 + 0x28]
	0x022BA35C ADRP X24, 0x211F000
	0x022BA360 MOV X19, X4
	0x022BA364 MOV X20, X3
	0x022BA368 STUR X8, [X29 - 0x18]
	0x022BA36C LDRB W8, [X24 + 0x88F]
	0x022BA370 MOV X21, X2
	0x022BA374 MOV X22, X1
	0x022BA378 MOV X23, X0
	0x022BA37C STP X0, X1, [X29 - 0x40]
	0x022BA380 STP X2, X3, [X29 - 0x50]
	0x022BA384 CBNZ W8, 0x22BA414
	0x022BA388 ADRP X0, 0x1E60000
	0x022BA38C LDR X0, [X0 + 0xD68]
	0x022BA390 BL 0x1C16CF4
	0x022BA394 ADRP X0, 0x1E61000
	0x022BA398 LDR X0, [X0 + 0xA78]
	0x022BA39C BL 0x1C16CF4
	0x022BA3A0 ADRP X0, 0x1E60000
	0x022BA3A4 LDR X0, [X0 + 0xD78]
	0x022BA3A8 BL 0x1C16CF4
	0x022BA3AC ADRP X0, 0x1E60000
	0x022BA3B0 LDR X0, [X0 + 0xD80]
	0x022BA3B4 BL 0x1C16CF4
	0x022BA3B8 ADRP X0, 0x1E60000
	0x022BA3BC LDR X0, [X0 + 0xD88]
	0x022BA3C0 BL 0x1C16CF4
	0x022BA3C4 ADRP X0, 0x1E60000
	0x022BA3C8 LDR X0, [X0 + 0xD90]
	0x022BA3CC BL 0x1C16CF4
	0x022BA3D0 ADRP X0, 0x1E61000
	0x022BA3D4 LDR X0, [X0 + 0xA80]
	0x022BA3D8 BL 0x1C16CF4
	0x022BA3DC ADRP X0, 0x1E39000
	0x022BA3E0 LDR X0, [X0 + 0x6C0]
	0x022BA3E4 BL 0x1C16CF4
	0x022BA3E8 ADRP X0, 0x1E60000
	0x022BA3EC LDR X0, [X0 + 0xD98]
	0x022BA3F0 BL 0x1C16CF4
	0x022BA3F4 ADRP X0, 0x1E60000
	0x022BA3F8 LDR X0, [X0 + 0xDA0]
	0x022BA3FC BL 0x1C16CF4
	0x022BA400 ADRP X0, 0x1E60000
	0x022BA404 LDR X0, [X0 + 0xDA8]
	0x022BA408 BL 0x1C16CF4
	0x022BA40C MOVZ W8, 0x1
	0x022BA410 STRB W8, [X24 + 0x88F]
	0x022BA414 MOV X0, X31
	0x022BA418 STP X31, X31, [X29 - 0x60]
	0x022BA41C BL 0x32E15B8
	0x022BA420 ADRP X26, 0x1E39000
	0x022BA424 ADRP X27, 0x1E60000
	0x022BA428 LDR X26, [X26 + 0x6C0]
	0x022BA42C LDR X27, [X27 + 0xD68]
	0x022BA430 TBZ X0, 0x0, 0x22BA564
	0x022BA434 MOV X23, X19
	0x022BA438 LDR X0, [X23 + 0x20]!
	0x022BA43C LDRB W8, [X0 + 0x135]
	0x022BA440 TBNZ X8, 0x0, 0x22BA448
	0x022BA444 BL 0x1C5C684
	0x022BA448 LDR X8, [X26]
	0x022BA44C LDR X9, [X0 + 0xC0]
	0x022BA450 LDR W10, [X8 + 0xE0]
	0x022BA454 LDR X20, [X9 + 0x18]
	0x022BA458 CBNZ W10, 0x22BA464
	0x022BA45C MOV X0, X8
	0x022BA460 BL 0x1C16DFC
	0x022BA464 MOV X0, X20
	0x022BA468 MOV X1, X31
	0x022BA46C BL 0x338C698
	0x022BA470 LDR X8, [X27]
	0x022BA474 MOV X20, X0
	0x022BA478 MOV X1, X31
	0x022BA47C MOV X0, X8
	0x022BA480 BL 0x338C698
	0x022BA484 MOV X1, X0
	0x022BA488 MOV X0, X20
	0x022BA48C MOV X2, X31
	0x022BA490 BL 0x3395194
	0x022BA494 LDR X8, [X23]
	0x022BA498 MOV W20, W0
	0x022BA49C LDRB W9, [X8 + 0x135]
	0x022BA4A0 TBNZ X9, 0x0, 0x22BA4B0
	0x022BA4A4 MOV X0, X8
	0x022BA4A8 BL 0x1C5C684
	0x022BA4AC MOV X8, X0
	0x022BA4B0 LDR X8, [X8 + 0xC0]
	0x022BA4B4 TBZ X20, 0x0, 0x22BA668
	0x022BA4B8 LDR X0, [X8 + 0x8]
	0x022BA4BC LDRB W8, [X0 + 0x135]
	0x022BA4C0 TBNZ X8, 0x0, 0x22BA4C8
	0x022BA4C4 BL 0x1C5C684
	0x022BA4C8 LDR W8, [X0 + 0xE0]
	0x022BA4CC CBNZ W8, 0x22BA4D4
	0x022BA4D0 BL 0x1C16DFC
	0x022BA4D4 LDR X0, [X23]
	0x022BA4D8 LDRB W8, [X0 + 0x135]
	0x022BA4DC TBNZ X8, 0x0, 0x22BA4E4
	0x022BA4E0 BL 0x1C5C684
	0x022BA4E4 LDR X8, [X0 + 0xC0]
	0x022BA4E8 LDR X19, [X8 + 0x28]
	0x022BA4EC LDR X0, [X19 + 0x20]
	0x022BA4F0 LDRB W8, [X0 + 0x135]
	0x022BA4F4 TBNZ X8, 0x0, 0x22BA4FC
	0x022BA4F8 BL 0x1C5C684
	0x022BA4FC LDR X8, [X0 + 0xC0]
	0x022BA500 LDR X0, [X8 + 0x8]
	0x022BA504 LDRB W8, [X0 + 0x135]
	0x022BA508 TBNZ X8, 0x0, 0x22BA510
	0x022BA50C BL 0x1C5C684
	0x022BA510 LDR W8, [X0 + 0xE0]
	0x022BA514 CBNZ W8, 0x22BA51C
	0x022BA518 BL 0x1C16DFC
	0x022BA51C LDR X0, [X19 + 0x20]
	0x022BA520 LDRB W8, [X0 + 0x135]
	0x022BA524 TBNZ X8, 0x0, 0x22BA52C
	0x022BA528 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move [X31+32], X2
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X31], X8
	017 Move X8, [X8+40]
	018 Move W22, W6
	019 Move W19, W5
	020 Move W20, W4
	021 Move [X31+88], X8
	022 Move X8, [X7+56]
	023 Move W27, W3
	024 Move W26, W1
	025 Move [X31+40], X7
	026 Move [X31+24], X0
	027 Compare X8, 0
	028 JumpIfNotEqual {31}
	029 Move X0, [X31+40]
	030 Call 0x1C5D6E0
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X31+48], V0
	034 Move [X31+56], V0
	035 Move [X31+8], W20
	036 Move [X31+12], W19
	037 Move W8, W20
	038 Move X25, X31
	039 Move W20, W31
	040 Move W29, W19
	041 ShiftRight W29, 2
	042 And W29, W29, 7
	043 Move W24, W27
	044 Move W9, W26
	045 Move W23, W8
	046 Move [X31+16], X9
	047 Move X8, [X31+24]
	048 Move X26, X31
	049 Move W19, W31
	050 Move W27, [X25]
	051 Move X8, [X31+16]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Or W20, W8, W20
	055 Xor W21, W20, 1
	056 Move X8, [X31+32]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W28, [X8]
	059 NotImplemented "Instruction CSET not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Or W19, W8, W19
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Compare W29, 0
	064 JumpIfNotEqual {131}
	065 Move X8, [X31+40]
	066 Move X8, [X8+56]
	067 Move X0, [X8+16]
	068 Call 0x2119B64
	069 Compare X0, 0
	070 JumpIfEqual {322}
	071 Move X8, [X0]
	072 Move W1, W27
	073 Move W2, W28
	074 Move X9, [X8+440]
	075 Move X3, [X8+448]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Xor W8, W20, W19
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {148}
	082 And W8, W20, W19
	083 Xor W8, W8, 1
	084 And W8, W0, W8
	085 Move X8, [X31+40]
	086 Move X8, [X8+56]
	087 Move X0, [X8+48]
	088 Call Comparer`1<Byte>.get_Default
	089 Compare X0, 0
	090 JumpIfEqual {322}
	091 Move X8, [X0]
	092 Move W1, W28
	093 Move W2, W27
	094 Move X9, [X8+408]
	095 Move X3, [X8+416]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Xor W8, W20, W19
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {148}
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W8, W0
	104 ShiftRight W8, 31
	105 And W8, W8, 0x7FFFFFFF
	106 NotImplemented "Instruction CSET not yet implemented."
	107 And W31, W25, 1
	108 NotImplemented "Instruction CSEL not yet implemented."
	109 And W9, W20, W19
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSET not yet implemented."
	112 Xor W9, W9, 1
	113 And W8, W8, W9
	114 Move X8, [X31+40]
	115 Move X8, [X8+56]
	116 Move X0, [X8+16]
	117 Call 0x2119B64
	118 Compare X0, 0
	119 JumpIfEqual {322}
	120 Move X8, [X0]
	121 Move W1, W27
	122 Move W2, W28
	123 Move X9, [X8+440]
	124 Move X3, [X8+448]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Xor W8, W20, W19
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {148}
	131 Move X8, [X31+40]
	132 Move X8, [X8+56]
	133 Move X0, [X8+16]
	134 Call 0x2119B64
	135 Compare X0, 0
	136 JumpIfEqual {322}
	137 Move X8, [X0]
	138 Move W1, W27
	139 Move W2, W28
	140 Move X9, [X8+440]
	141 Move X3, [X8+448]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 And W8, W19, W21
	144 Move TEMP, X8
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {149}
	148 Move W8, W31
	149 Or W8, W19, W21
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {156}
	154 And W8, W20, W19
	155 Or W8, W8, W0
	156 Move W8, 1
	157 And W3, W8, 1
	158 Add X0, X31, 48
	159 Move W1, W25
	160 Move W2, W26
	161 Move X4, X31
	162 Call StrBoolArray.SetBit, X0, X1, X2, X3
	163 Add X26, X26, 1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Add X25, X25, 1
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W29, W19
	168 ShiftRight W29, 2
	169 And W29, W29, 7
	170 Move X9, -24690688
	171 Move W8, W29
	172 Add X9, X9, 3254
	173 NotImplemented "Instruction ADR not yet implemented."
	174 Move W11, [X9]
	175 Add X10, X10, X11
	176 Move W27, [X31+8]
	177 Move W26, [X31+12]
	178 CallNoReturn X10
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W24, W31
	181 Move W22, W31
	182 Move W25, W31
	183 And W19, W24, 31
	184 Add X0, X31, 48
	185 Move W1, W25
	186 Move W2, W24
	187 Move X3, X31
	188 Call StrBoolArray.GetBit, X0, X1, X2
	189 And W8, W0, 1
	190 Add W25, W25, 1
	191 NotImplemented "Instruction LSLV not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Or W22, W8, W22
	194 Add W24, W24, 1
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move W24, W31
	198 Move W22, W31
	199 Add X0, X31, 48
	200 Move W1, W24
	201 Move W2, W24
	202 Move X3, X31
	203 Call StrBoolArray.GetBit, X0, X1, X2
	204 And W8, W0, 1
	205 NotImplemented "Instruction LSLV not yet implemented."
	206 Add W24, W24, 1
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Or W22, W8, W22
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move W19, W31
	211 Move W20, 1
	212 Move W21, W27
	213 Subtract W8, W27, W19
	214 NotImplemented "Instruction CMP not yet implemented."
	215 NotImplemented "Instruction LSLV not yet implemented."
	216 Move W24, W31
	217 NotImplemented "Instruction ORN not yet implemented."
	218 Add W2, W19, W24
	219 Add X0, X31, 48
	220 Move W1, W24
	221 Move X3, X31
	222 Call StrBoolArray.GetBit, X0, X1, X2
	223 And W31, W0, 1
	224 Add W24, W24, 1
	225 NotImplemented "Instruction CSINV not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 And W22, W8, W22
	228 Add W19, W19, 1
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Subtract W21, W21, 1
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move W24, W31
	233 Move W22, W31
	234 Move W25, W31
	235 And W19, W24, 31
	236 Add X0, X31, 48
	237 Move W1, W25
	238 Move W2, W24
	239 Move X3, X31
	240 Call StrBoolArray.GetBit, X0, X1, X2
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {251}
	245 Add W1, W25, 1
	246 Add X0, X31, 48
	247 Move W2, W24
	248 Move X3, X31
	249 Call StrBoolArray.GetBit, X0, X1, X2
	250 And W8, W0, 1
	251 Move W8, W31
	252 NotImplemented "Instruction LSLV not yet implemented."
	253 Add W25, W25, 2
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Or W22, W8, W22
	256 Add W24, W24, 1
	257 NotImplemented "Instruction CMP not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X19, X31
	260 Move W25, W31
	261 Move W24, W31
	262 NotImplemented "Instruction ORN not yet implemented."
	263 Move W21, W27
	264 Move W23, 1
	265 Move TEMP, X26
	266 And TEMP, TEMP, 16
	267 Compare TEMP, 16
	268 JumpIfEqual {271}
	269 NotImplemented "Instruction LSLV not yet implemented."
	270 And W8, W8, W22
	271 Move TEMP, X26
	272 And TEMP, TEMP, 32
	273 Compare TEMP, 32
	274 JumpIfEqual {276}
	275 NotImplemented "Instruction LSLV not yet implemented."
	276 Move X8, [X31+40]
	277 Move X8, [X8+56]
	278 Move X0, [X8+16]
	279 Call 0x2119B64
	280 Compare X0, 0
	281 JumpIfEqual {322}
	282 Move X8, [X0]
	283 Move W2, W31
	284 Move X9, [X8+440]
	285 Move X3, [X8+448]
	286 Move X8, [X31+32]
	287 Move W1, [X8]
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Or W9, W25, W0
	290 NotImplemented "Instruction LSLV not yet implemented."
	291 Move TEMP, X9
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {297}
	295 And W8, W8, W22
	296 Move W25, 1
	297 Move W25, W31
	298 And W8, W8, W20
	299 Add X19, X19, 1
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Or W24, W8, W24
	302 Move W24, W31
	303 Move X8, [X31]
	304 Move X8, [X8+40]
	305 Move X9, [X31+88]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move W0, W24
	308 Move X20, [X31+176]
	309 Move X19, [X31+184]
	310 Move X22, [X31+160]
	311 Move X21, [X31+168]
	312 Move X24, [X31+144]
	313 Move X23, [X31+152]
	314 Move X26, [X31+128]
	315 Move X25, [X31+136]
	316 Move X28, [X31+112]
	317 Move X27, [X31+120]
	318 Move X29, [X31+96]
	319 Move X30, [X31+104]
	320 Add X31, X31, 192
	321 Return X0
	322 Call 0x1C17F20
	323 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 cmpistrm(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03731948 MOV W5, W19
	0x0373194C MOV W6, W20
	0x03731950 BL 0x3731564
	0x03731954 ANDS W31, W20, 0x1
	0x03731958 MOVZ W8, 0x7
	0x0373195C MOVZ W9, 0xF
	0x03731960 CSEL W8, W9, W8, EQ
	0x03731964 CMP W8, W19
	0x03731968 LDP X20, X19, [X31 + 0x40]
	0x0373196C LDP X22, X21, [X31 + 0x30]
	0x03731970 LDP X24, X23, [X31 + 0x20]
	0x03731974 LDP X26, X25, [X31 + 0x10]
	0x03731978 CSET W8, GE
	0x0373197C AND W9, W0, 0x1
	0x03731980 ORR W8, W9, W8, 0x0
	0x03731984 EOR W0, W8, 0x1
	0x03731988 LDP X30, X27, [X31], #0x50
	0x0373198C RET
	0x03731990 CMP X0, X2
	0x03731994 CSINV X0, X31, X31, LE
	0x03731998 CMP X1, X3
	0x0373199C CSINV X1, X31, X31, LE
	0x037319A0 RET
	0x037319A4 STR X30, [X31 - 0x30]!
	0x037319A8 STP X22, X21, [X31 + 0x10]
	0x037319AC STP X20, X19, [X31 + 0x20]
	0x037319B0 ADRP X21, 0xCAF000
	0x037319B4 ADRP X22, 0x9EB000
	0x037319B8 LDRB W8, [X21 + 0xCC3]
	0x037319BC LDR X22, [X22 + 0xA98]
	0x037319C0 MOV W19, W1
	0x037319C4 MOV W20, W0
	0x037319C8 TBNZ X8, 0x0, 0x37319E0
	0x037319CC ADRP X0, 0x9EB000
	0x037319D0 LDR X0, [X0 + 0xA98]
	0x037319D4 BL 0x1C16CF4
	0x037319D8 MOVZ W8, 0x1
	0x037319DC STRB W8, [X21 + 0xCC3]
	0x037319E0 LDR X0, [X22]
	0x037319E4 LDR W8, [X0 + 0xE0]
	0x037319E8 CBNZ W8, 0x37319F0
	0x037319EC BL 0x1C16DFC
	0x037319F0 MOV W0, W20
	0x037319F4 MOV W1, W19
	0x037319F8 BL 0x3731A20
	0x037319FC UBFM W1, W19, 0x8, 0x1F
	0x03731A00 BL 0x3731A20
	0x03731A04 UBFM W1, W19, 0x10, 0x1F
	0x03731A08 BL 0x3731A20
	0x03731A0C UBFM W1, W19, 0x18, 0x1F
	0x03731A10 LDP X20, X19, [X31 + 0x20]
	0x03731A14 LDP X22, X21, [X31 + 0x10]
	0x03731A18 LDR X30, [X31], #0x30
	0x03731A1C B 0x3731A20
	0x03731A20 STR X30, [X31 - 0x30]!
	0x03731A24 STP X22, X21, [X31 + 0x10]
	0x03731A28 STP X20, X19, [X31 + 0x20]
	0x03731A2C ADRP X22, 0xCAF000
	0x03731A30 ADRP X21, 0x9EB000
	0x03731A34 LDRB W8, [X22 + 0xCC4]
	0x03731A38 LDR X21, [X21 + 0xA98]
	0x03731A3C MOV W20, W1
	0x03731A40 MOV W19, W0
	0x03731A44 TBNZ X8, 0x0, 0x3731A5C
	0x03731A48 ADRP X0, 0x9EB000
	0x03731A4C LDR X0, [X0 + 0xA98]
	0x03731A50 BL 0x1C16CF4
	0x03731A54 MOVZ W8, 0x1
	0x03731A58 STRB W8, [X22 + 0xCC4]
	0x03731A5C LDR X0, [X21]
	0x03731A60 LDR W8, [X0 + 0xE0]
	0x03731A64 CBNZ W8, 0x3731A70
	0x03731A68 BL 0x1C16DFC
	0x03731A6C LDR X0, [X21]
	0x03731A70 LDR X8, [X0 + 0xB8]
	0x03731A74 LDR X8, [X8]
	0x03731A78 CBZ X8, 0x3731AAC
	0x03731A7C LDR W10, [X8 + 0x18]
	0x03731A80 EOR W9, W19, W20, 0x0
	0x03731A84 AND W9, W9, 0xFF
	0x03731A88 CMP W9, W10
	0x03731A8C B.CS 0x3731AB0
	0x03731A90 ADD X8, X8, W9, 0x2, UXTW
	0x03731A94 LDR W8, [X8 + 0x20]
	0x03731A98 LDP X22, X21, [X31 + 0x10]
	0x03731A9C EOR W0, W8, W19, 0x8
	0x03731AA0 LDP X20, X19, [X31 + 0x20]
	0x03731AA4 LDR X30, [X31], #0x30
	0x03731AA8 RET
	0x03731AAC BL 0x1C16F20
	0x03731AB0 BL 0x1C16F28
	0x03731AB4 STR X30, [X31 - 0x30]!
	0x03731AB8 STP X22, X21, [X31 + 0x10]
	0x03731ABC STP X20, X19, [X31 + 0x20]
	0x03731AC0 ADRP X22, 0xCAF000
	0x03731AC4 ADRP X21, 0x9EB000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X20+40]
	008 Move X21, 0xCB0000
	009 Move W19, W4
	010 Move [X31+40], X8
	011 Move W8, [X21+3255]
	012 Move [X31+24], X0
	013 Move [X31+32], X1
	014 Move [X31+8], X2
	015 Move [X31+16], X3
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xA14000
	021 Move X0, [X0+3320]
	022 Call 0x1C17CF4
	023 Move X0, 0xA14000
	024 Move X0, [X0+3328]
	025 Call 0x1C17CF4
	026 Move X0, 0xA14000
	027 Move X0, [X0+3336]
	028 Call 0x1C17CF4
	029 Move X0, 0xA14000
	030 Move X0, [X0+3344]
	031 Call 0x1C17CF4
	032 Move X0, 0x9EC000
	033 Move X0, [X0+2712]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3255], W8
	037 Move X8, 0x9EC000
	038 Move X8, [X8+2712]
	039 Move TEMP, X19
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {61}
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfEqual {79}
	047 Move TEMP, X19
	048 And TEMP, TEMP, 2
	049 Compare TEMP, 2
	050 JumpIfEqual {84}
	051 Move X8, 0xA14000
	052 Move X8, [X8+3320]
	053 Add X0, X31, 24
	054 Add X1, X31, 8
	055 Move W2, 16
	056 Move X6, [X8]
	057 Move W4, 0xFFFF
	058 Move W5, 255
	059 Move W3, W19
	060 Call 0x22BFDAC, X0, X1, X2, X3, X4, X5
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfEqual {94}
	065 Move TEMP, X19
	066 And TEMP, TEMP, 2
	067 Compare TEMP, 2
	068 JumpIfEqual {99}
	069 Move X8, 0xA14000
	070 Move X8, [X8+3344]
	071 Add X0, X31, 24
	072 Add X1, X31, 8
	073 Move W2, 8
	074 Move X6, [X8]
	075 Move W4, 255
	076 Move W5, 0xFFFF
	077 Move W3, W19
	078 Call Sse4_2.cmpistrm_emulation, X0, X1, X2, X3, X4, X5
	079 Call 0x1C17DFC
	080 Move TEMP, X19
	081 And TEMP, TEMP, 2
	082 Compare TEMP, 2
	083 JumpIfNotEqual {51}
	084 Move X8, 0xA14000
	085 Move X8, [X8+3336]
	086 Add X0, X31, 24
	087 Add X1, X31, 8
	088 Move W2, 16
	089 Move X6, [X8]
	090 Move W4, 0xFFFF
	091 Move W5, 255
	092 Move W3, W19
	093 Call Sse4_2.cmpistrm_emulation, X0, X1, X2, X3, X4, X5
	094 Call 0x1C17DFC
	095 Move TEMP, X19
	096 And TEMP, TEMP, 2
	097 Compare TEMP, 2
	098 JumpIfNotEqual {69}
	099 Move X8, 0xA14000
	100 Move X8, [X8+3328]
	101 Add X0, X31, 24
	102 Add X1, X31, 8
	103 Move W2, 8
	104 Move X6, [X8]
	105 Move W4, 255
	106 Move W5, 0xFFFF
	107 Move W3, W19
	108 Call Sse4_2.cmpistrm_emulation, X0, X1, X2, X3, X4, X5
	109 Move X8, [X20+40]
	110 Move X9, [X31+40]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X20, [X31+64]
	113 Move X19, [X31+72]
	114 Move X30, [X31+48]
	115 Move X21, [X31+56]
	116 Add X31, X31, 80
	117 Return X0
	118 Call 0x3EB2B20

Method: System.Int32 cmpistri(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03731AC8 LDRB W8, [X22 + 0xCC5]
	0x03731ACC LDR X21, [X21 + 0xA98]
	0x03731AD0 MOV W19, W1
	0x03731AD4 MOV W20, W0
	0x03731AD8 TBNZ X8, 0x0, 0x3731AF0
	0x03731ADC ADRP X0, 0x9EB000
	0x03731AE0 LDR X0, [X0 + 0xA98]
	0x03731AE4 BL 0x1C16CF4
	0x03731AE8 MOVZ W8, 0x1
	0x03731AEC STRB W8, [X22 + 0xCC5]
	0x03731AF0 LDR X0, [X21]
	0x03731AF4 LDR W8, [X0 + 0xE0]
	0x03731AF8 CBNZ W8, 0x3731B00
	0x03731AFC BL 0x1C16DFC
	0x03731B00 MOV W0, W20
	0x03731B04 MOV W1, W19
	0x03731B08 BL 0x3731A20
	0x03731B0C UBFM W1, W19, 0x8, 0xF
	0x03731B10 LDP X20, X19, [X31 + 0x20]
	0x03731B14 LDP X22, X21, [X31 + 0x10]
	0x03731B18 LDR X30, [X31], #0x30
	0x03731B1C B 0x3731A20
	0x03731B20 STR X30, [X31 - 0x30]!
	0x03731B24 STP X22, X21, [X31 + 0x10]
	0x03731B28 STP X20, X19, [X31 + 0x20]
	0x03731B2C ADRP X21, 0xCAF000
	0x03731B30 ADRP X22, 0x9EB000
	0x03731B34 LDRB W8, [X21 + 0xCC6]
	0x03731B38 LDR X22, [X22 + 0xA98]
	0x03731B3C MOV X19, X1
	0x03731B40 MOV X20, X0
	0x03731B44 TBNZ X8, 0x0, 0x3731B5C
	0x03731B48 ADRP X0, 0x9EB000
	0x03731B4C LDR X0, [X0 + 0xA98]
	0x03731B50 BL 0x1C16CF4
	0x03731B54 MOVZ W8, 0x1
	0x03731B58 STRB W8, [X21 + 0xCC6]
	0x03731B5C LDR X0, [X22]
	0x03731B60 LDR W8, [X0 + 0xE0]
	0x03731B64 CBNZ W8, 0x3731B6C
	0x03731B68 BL 0x1C16DFC
	0x03731B6C MOV X0, X20
	0x03731B70 MOV X1, X19
	0x03731B74 LDP X20, X19, [X31 + 0x20]
	0x03731B78 LDP X22, X21, [X31 + 0x10]
	0x03731B7C LDR X30, [X31], #0x30
	0x03731B80 B 0x3731B84
	0x03731B84 STR X30, [X31 - 0x30]!
	0x03731B88 STP X22, X21, [X31 + 0x10]
	0x03731B8C STP X20, X19, [X31 + 0x20]
	0x03731B90 ADRP X21, 0xCAF000
	0x03731B94 ADRP X22, 0x9EB000
	0x03731B98 LDRB W8, [X21 + 0xCC7]
	0x03731B9C LDR X22, [X22 + 0xA98]
	0x03731BA0 MOV X19, X1
	0x03731BA4 MOV X20, X0
	0x03731BA8 TBNZ X8, 0x0, 0x3731BC0
	0x03731BAC ADRP X0, 0x9EB000
	0x03731BB0 LDR X0, [X0 + 0xA98]
	0x03731BB4 BL 0x1C16CF4
	0x03731BB8 MOVZ W8, 0x1
	0x03731BBC STRB W8, [X21 + 0xCC7]
	0x03731BC0 LDR X0, [X22]
	0x03731BC4 LDR W8, [X0 + 0xE0]
	0x03731BC8 CBNZ W8, 0x3731BD0
	0x03731BCC BL 0x1C16DFC
	0x03731BD0 MOV W0, W20
	0x03731BD4 MOV W1, W19
	0x03731BD8 BL 0x3731A20
	0x03731BDC UBFM X1, X19, 0x8, 0x3F
	0x03731BE0 BL 0x3731A20
	0x03731BE4 UBFM X1, X19, 0x10, 0x3F
	0x03731BE8 BL 0x3731A20
	0x03731BEC UBFM X1, X19, 0x18, 0x3F
	0x03731BF0 BL 0x3731A20
	0x03731BF4 UBFM X1, X19, 0x20, 0x3F
	0x03731BF8 BL 0x3731A20
	0x03731BFC UBFM X1, X19, 0x28, 0x3F
	0x03731C00 BL 0x3731A20
	0x03731C04 UBFM X1, X19, 0x30, 0x3F
	0x03731C08 BL 0x3731A20
	0x03731C0C UBFM X1, X19, 0x38, 0x3F
	0x03731C10 BL 0x3731A20
	0x03731C14 LDP X20, X19, [X31 + 0x20]
	0x03731C18 LDP X22, X21, [X31 + 0x10]
	0x03731C1C MOV W0, W0
	0x03731C20 LDR X30, [X31], #0x30
	0x03731C24 RET
	0x03731C28 STR X30, [X31 - 0x30]!
	0x03731C2C STP X22, X21, [X31 + 0x10]
	0x03731C30 STP X20, X19, [X31 + 0x20]
	0x03731C34 ADRP X21, 0xCAF000
	0x03731C38 ADRP X22, 0x9EB000
	0x03731C3C ADRP X19, 0xA13000
	0x03731C40 ADRP X20, 0x9EB000
	0x03731C44 LDRB W8, [X21 + 0xCC8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X20+40]
	008 Move X21, 0xCB0000
	009 Move W19, W4
	010 Move [X31+40], X8
	011 Move W8, [X21+3256]
	012 Move [X31+24], X0
	013 Move [X31+32], X1
	014 Move [X31+8], X2
	015 Move [X31+16], X3
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xA14000
	021 Move X0, [X0+3352]
	022 Call 0x1C17CF4
	023 Move X0, 0xA14000
	024 Move X0, [X0+3360]
	025 Call 0x1C17CF4
	026 Move X0, 0xA14000
	027 Move X0, [X0+3368]
	028 Call 0x1C17CF4
	029 Move X0, 0xA14000
	030 Move X0, [X0+3376]
	031 Call 0x1C17CF4
	032 Move X0, 0x9EC000
	033 Move X0, [X0+2712]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3256], W8
	037 Move X8, 0x9EC000
	038 Move X8, [X8+2712]
	039 Move TEMP, X19
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {61}
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfEqual {79}
	047 Move TEMP, X19
	048 And TEMP, TEMP, 2
	049 Compare TEMP, 2
	050 JumpIfEqual {84}
	051 Move X8, 0xA14000
	052 Move X8, [X8+3352]
	053 Add X0, X31, 24
	054 Add X1, X31, 8
	055 Move W2, 16
	056 Move X6, [X8]
	057 Move W4, 0xFFFF
	058 Move W5, 255
	059 Move W3, W19
	060 Call 0x22BF954, X0, X1, X2, X3, X4, X5
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfEqual {94}
	065 Move TEMP, X19
	066 And TEMP, TEMP, 2
	067 Compare TEMP, 2
	068 JumpIfEqual {99}
	069 Move X8, 0xA14000
	070 Move X8, [X8+3376]
	071 Add X0, X31, 24
	072 Add X1, X31, 8
	073 Move W2, 8
	074 Move X6, [X8]
	075 Move W4, 255
	076 Move W5, 0xFFFF
	077 Move W3, W19
	078 Call Sse4_2.cmpistri_emulation, X0, X1, X2, X3, X4, X5
	079 Call 0x1C17DFC
	080 Move TEMP, X19
	081 And TEMP, TEMP, 2
	082 Compare TEMP, 2
	083 JumpIfNotEqual {51}
	084 Move X8, 0xA14000
	085 Move X8, [X8+3368]
	086 Add X0, X31, 24
	087 Add X1, X31, 8
	088 Move W2, 16
	089 Move X6, [X8]
	090 Move W4, 0xFFFF
	091 Move W5, 255
	092 Move W3, W19
	093 Call Sse4_2.cmpistri_emulation, X0, X1, X2, X3, X4, X5
	094 Call 0x1C17DFC
	095 Move TEMP, X19
	096 And TEMP, TEMP, 2
	097 Compare TEMP, 2
	098 JumpIfNotEqual {69}
	099 Move X8, 0xA14000
	100 Move X8, [X8+3360]
	101 Add X0, X31, 24
	102 Add X1, X31, 8
	103 Move W2, 8
	104 Move X6, [X8]
	105 Move W4, 255
	106 Move W5, 0xFFFF
	107 Move W3, W19
	108 Call Sse4_2.cmpistri_emulation, X0, X1, X2, X3, X4, X5
	109 Move X8, [X20+40]
	110 Move X9, [X31+40]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X20, [X31+64]
	113 Move X19, [X31+72]
	114 Move X30, [X31+48]
	115 Move X21, [X31+56]
	116 Add X31, X31, 80
	117 Return X0
	118 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 cmpestrm(Unity.Burst.Intrinsics.v128 a, System.Int32 la, Unity.Burst.Intrinsics.v128 b, System.Int32 lb, System.Int32 imm8)

Disassembly:
	0x03731C48 LDR X22, [X22 + 0xD08]
	0x03731C4C LDR X19, [X19 + 0xDA8]
	0x03731C50 LDR X20, [X20 + 0xA98]
	0x03731C54 TBNZ X8, 0x0, 0x3731C84
	0x03731C58 ADRP X0, 0x9EB000
	0x03731C5C LDR X0, [X0 + 0xA98]
	0x03731C60 BL 0x1C16CF4
	0x03731C64 ADRP X0, 0xA13000
	0x03731C68 LDR X0, [X0 + 0xDA8]
	0x03731C6C BL 0x1C16CF4
	0x03731C70 ADRP X0, 0x9EB000
	0x03731C74 LDR X0, [X0 + 0xD08]
	0x03731C78 BL 0x1C16CF4
	0x03731C7C MOVZ W8, 0x1
	0x03731C80 STRB W8, [X21 + 0xCC8]
	0x03731C84 LDR X0, [X22]
	0x03731C88 MOVZ W1, 0x100
	0x03731C8C BL 0x1C16D6C
	0x03731C90 LDR X1, [X19]
	0x03731C94 MOV X2, X31
	0x03731C98 MOV X19, X0
	0x03731C9C BL 0x32C5BD8
	0x03731CA0 LDR X8, [X20]
	0x03731CA4 LDP X22, X21, [X31 + 0x10]
	0x03731CA8 LDR X8, [X8 + 0xB8]
	0x03731CAC STR X19, [X8]
	0x03731CB0 LDP X20, X19, [X31 + 0x20]
	0x03731CB4 LDR X30, [X31], #0x30
	0x03731CB8 RET
	0x03731CBC LDRH W8, [X0, W1, SXTW]
	0x03731CC0 MOVZ W9, 0x1
	0x03731CC4 LSLV W9, W9, W2
	0x03731CC8 ANDS W31, W3, 0x1
	0x03731CCC BIC W10, W8, W9, 0x0
	0x03731CD0 ORR W8, W8, W9, 0x0
	0x03731CD4 CSEL W8, W8, W10, NE
	0x03731CD8 STRH W8, [X0, W1, SXTW]
	0x03731CDC RET
	0x03731CE0 LDRH W8, [X0, W1, SXTW]
	0x03731CE4 LSRV W8, W8, W2
	0x03731CE8 AND W0, W8, 0x1
	0x03731CEC RET
	0x03731CF0 MOV W0, W31
	0x03731CF4 RET
	0x03731CF8 SUB X31, X31, 0x70
	0x03731CFC STR X30, [X31 + 0x30]
	0x03731D00 STP X24, X23, [X31 + 0x40]
	0x03731D04 STP X22, X21, [X31 + 0x50]
	0x03731D08 STP X20, X19, [X31 + 0x60]
	0x03731D0C MRS X19, 0xC000
	0x03731D10 LDR X8, [X19 + 0x28]
	0x03731D14 ADRP X20, 0xCAF000
	0x03731D18 STR X8, [X31 + 0x28]
	0x03731D1C LDRB W8, [X20 + 0xCC9]
	0x03731D20 STP X0, X1, [X31 + 0x18]
	0x03731D24 TBNZ X8, 0x0, 0x3731D3C
	0x03731D28 ADRP X0, 0x9C2000
	0x03731D2C LDR X0, [X0 + 0x5A8]
	0x03731D30 BL 0x1C16CF4
	0x03731D34 MOVZ W8, 0x1
	0x03731D38 STRB W8, [X20 + 0xCC9]
	0x03731D3C ADRP X21, 0x9C2000
	0x03731D40 LDR X21, [X21 + 0x5A8]
	0x03731D44 MOV X20, X31
	0x03731D48 ADD X22, X31, 0x18
	0x03731D4C ADD X23, X31, 0x8
	0x03731D50 STP X31, X31, [X31 + 0x8]
	0x03731D54 LDR X0, [X21]
	0x00000000 INVALID
	0x03731D5C LDR W8, [X0 + 0xE0]
	0x03731D60 CBNZ W8, 0x3731D68
	0x03731D64 BL 0x1C16DFC
	0x03731D68 CMP W24, 0x0
	0x03731D6C CSNEG W8, W24, W24, PL
	0x03731D70 STRB W8, [X23, X20, LSL]
	0x03731D74 ADD X20, X20, 0x1
	0x03731D78 CMP X20, 0x10
	0x03731D7C B.NE 0x3731D54
	0x03731D80 LDP X0, X1, [X31 + 0x8]
	0x03731D84 LDR X8, [X19 + 0x28]
	0x03731D88 LDR X9, [X31 + 0x28]
	0x03731D8C CMP X8, X9
	0x03731D90 B.NE 0x3731DAC
	0x03731D94 LDP X20, X19, [X31 + 0x60]
	0x03731D98 LDP X22, X21, [X31 + 0x50]
	0x03731D9C LDP X24, X23, [X31 + 0x40]
	0x03731DA0 LDR X30, [X31 + 0x30]
	0x03731DA4 ADD X31, X31, 0x70
	0x03731DA8 RET
	0x03731DAC BL 0x3EB1B20
	0x03731DB0 SUB X31, X31, 0x70
	0x03731DB4 STR X30, [X31 + 0x30]
	0x03731DB8 STP X24, X23, [X31 + 0x40]
	0x03731DBC STP X22, X21, [X31 + 0x50]
	0x03731DC0 STP X20, X19, [X31 + 0x60]
	0x03731DC4 MRS X19, 0xC000
	0x03731DC8 LDR X8, [X19 + 0x28]
	0x03731DCC ADRP X20, 0xCAF000
	0x03731DD0 STR X8, [X31 + 0x28]
	0x03731DD4 LDRB W8, [X20 + 0xCCA]
	0x03731DD8 STP X0, X1, [X31 + 0x18]
	0x03731DDC TBNZ X8, 0x0, 0x3731DF4
	0x03731DE0 ADRP X0, 0x9C2000
	0x03731DE4 LDR X0, [X0 + 0x5A8]
	0x03731DE8 BL 0x1C16CF4
	0x03731DEC MOVZ W8, 0x1
	0x03731DF0 STRB W8, [X20 + 0xCCA]
	0x03731DF4 ADRP X21, 0x9C2000
	0x03731DF8 LDR X21, [X21 + 0x5A8]
	0x03731DFC MOV X20, X31
	0x03731E00 ADD X22, X31, 0x18
	0x03731E04 ADD X23, X31, 0x8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X23, 0xCB0000
	011 Move W19, W6
	012 Move W20, W5
	013 Move [X31+40], X8
	014 Move W8, [X23+3257]
	015 Move W21, W2
	016 Move [X31+24], X0
	017 Move [X31+32], X1
	018 Move [X31+8], X3
	019 Move [X31+16], X4
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xA14000
	025 Move X0, [X0+3384]
	026 Call 0x1C17CF4
	027 Move X0, 0xA14000
	028 Move X0, [X0+3392]
	029 Call 0x1C17CF4
	030 Move X0, 0xA14000
	031 Move X0, [X0+3400]
	032 Call 0x1C17CF4
	033 Move X0, 0xA14000
	034 Move X0, [X0+3408]
	035 Call 0x1C17CF4
	036 Move X0, 0x9EC000
	037 Move X0, [X0+2712]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3257], W8
	041 Move X8, 0x9EC000
	042 Move X8, [X8+2712]
	043 Move TEMP, X19
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {68}
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfEqual {89}
	051 Move TEMP, X19
	052 And TEMP, TEMP, 2
	053 Compare TEMP, 2
	054 JumpIfEqual {94}
	055 Move X8, 0xA14000
	056 Move X8, [X8+3384]
	057 Add X0, X31, 24
	058 Add X2, X31, 8
	059 Move W4, 16
	060 Move X8, [X8]
	061 Move W6, 0xFFFF
	062 Move W7, 255
	063 Move W1, W21
	064 Move W3, W20
	065 Move W5, W19
	066 Move [X31], X8
	067 Call 0x22BF4E4, X0, X1, X2, X3, X4, X5, X6, X7
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfEqual {107}
	072 Move TEMP, X19
	073 And TEMP, TEMP, 2
	074 Compare TEMP, 2
	075 JumpIfEqual {112}
	076 Move X8, 0xA14000
	077 Move X8, [X8+3408]
	078 Add X0, X31, 24
	079 Add X2, X31, 8
	080 Move W4, 8
	081 Move X8, [X8]
	082 Move W6, 255
	083 Move W7, 0xFFFF
	084 Move W1, W21
	085 Move W3, W20
	086 Move W5, W19
	087 Move [X31], X8
	088 Call Sse4_2.cmpestrm_emulation, X0, X1, X2, X3, X4, X5, X6, X7
	089 Call 0x1C17DFC
	090 Move TEMP, X19
	091 And TEMP, TEMP, 2
	092 Compare TEMP, 2
	093 JumpIfNotEqual {55}
	094 Move X8, 0xA14000
	095 Move X8, [X8+3400]
	096 Add X0, X31, 24
	097 Add X2, X31, 8
	098 Move W4, 16
	099 Move X8, [X8]
	100 Move W6, 0xFFFF
	101 Move W7, 255
	102 Move W1, W21
	103 Move W3, W20
	104 Move W5, W19
	105 Move [X31], X8
	106 Call Sse4_2.cmpestrm_emulation, X0, X1, X2, X3, X4, X5, X6, X7
	107 Call 0x1C17DFC
	108 Move TEMP, X19
	109 And TEMP, TEMP, 2
	110 Compare TEMP, 2
	111 JumpIfNotEqual {76}
	112 Move X8, 0xA14000
	113 Move X8, [X8+3392]
	114 Add X0, X31, 24
	115 Add X2, X31, 8
	116 Move W4, 8
	117 Move X8, [X8]
	118 Move W6, 255
	119 Move W7, 0xFFFF
	120 Move W1, W21
	121 Move W3, W20
	122 Move W5, W19
	123 Move [X31], X8
	124 Call Sse4_2.cmpestrm_emulation, X0, X1, X2, X3, X4, X5, X6, X7
	125 Move X8, [X22+40]
	126 Move X9, [X31+40]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X20, [X31+80]
	129 Move X19, [X31+88]
	130 Move X22, [X31+64]
	131 Move X21, [X31+72]
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]
	134 Add X31, X31, 96
	135 Return X0
	136 Call 0x3EB2B20

Method: System.Int32 cmpestri(Unity.Burst.Intrinsics.v128 a, System.Int32 la, Unity.Burst.Intrinsics.v128 b, System.Int32 lb, System.Int32 imm8)

Disassembly:
	0x03731E08 STP X31, X31, [X31 + 0x8]
	0x03731E0C LDR X0, [X21]
	0x03731E10 LDRSH W24, [X22, X20, LSL]
	0x03731E14 LDR W8, [X0 + 0xE0]
	0x03731E18 CBNZ W8, 0x3731E20
	0x03731E1C BL 0x1C16DFC
	0x03731E20 CMP W24, 0x0
	0x03731E24 CSNEG W8, W24, W24, PL
	0x03731E28 STRH W8, [X23, X20, LSL]
	0x03731E2C ADD X20, X20, 0x2
	0x03731E30 CMP X20, 0x10
	0x03731E34 B.NE 0x3731E0C
	0x03731E38 LDP X0, X1, [X31 + 0x8]
	0x03731E3C LDR X8, [X19 + 0x28]
	0x03731E40 LDR X9, [X31 + 0x28]
	0x03731E44 CMP X8, X9
	0x03731E48 B.NE 0x3731E64
	0x03731E4C LDP X20, X19, [X31 + 0x60]
	0x03731E50 LDP X22, X21, [X31 + 0x50]
	0x03731E54 LDP X24, X23, [X31 + 0x40]
	0x03731E58 LDR X30, [X31 + 0x30]
	0x03731E5C ADD X31, X31, 0x70
	0x03731E60 RET
	0x03731E64 BL 0x3EB1B20
	0x03731E68 SUB X31, X31, 0x70
	0x03731E6C STR X30, [X31 + 0x30]
	0x03731E70 STP X24, X23, [X31 + 0x40]
	0x03731E74 STP X22, X21, [X31 + 0x50]
	0x03731E78 STP X20, X19, [X31 + 0x60]
	0x03731E7C MRS X19, 0xC000
	0x03731E80 LDR X8, [X19 + 0x28]
	0x03731E84 ADRP X20, 0xCAF000
	0x03731E88 STR X8, [X31 + 0x28]
	0x03731E8C LDRB W8, [X20 + 0xCCB]
	0x03731E90 STP X0, X1, [X31 + 0x18]
	0x03731E94 TBNZ X8, 0x0, 0x3731EAC
	0x03731E98 ADRP X0, 0x9C2000
	0x03731E9C LDR X0, [X0 + 0x5A8]
	0x03731EA0 BL 0x1C16CF4
	0x03731EA4 MOVZ W8, 0x1
	0x03731EA8 STRB W8, [X20 + 0xCCB]
	0x03731EAC ADRP X21, 0x9C2000
	0x03731EB0 LDR X21, [X21 + 0x5A8]
	0x03731EB4 MOV X20, X31
	0x03731EB8 ADD X22, X31, 0x18
	0x03731EBC ADD X23, X31, 0x8
	0x03731EC0 STP X31, X31, [X31 + 0x8]
	0x03731EC4 LDR X0, [X21]
	0x03731EC8 LDRSW X24, [X22, X20, LSL]
	0x03731ECC LDR W8, [X0 + 0xE0]
	0x03731ED0 CBNZ W8, 0x3731ED8
	0x03731ED4 BL 0x1C16DFC
	0x03731ED8 CMP X24, 0x0
	0x03731EDC CSNEG X8, X24, X24, PL
	0x03731EE0 STR W8, [X23, X20, LSL]
	0x03731EE4 ADD X20, X20, 0x4
	0x03731EE8 CMP X20, 0x10
	0x03731EEC B.NE 0x3731EC4
	0x03731EF0 LDP X0, X1, [X31 + 0x8]
	0x03731EF4 LDR X8, [X19 + 0x28]
	0x03731EF8 LDR X9, [X31 + 0x28]
	0x03731EFC CMP X8, X9
	0x03731F00 B.NE 0x3731F1C
	0x03731F04 LDP X20, X19, [X31 + 0x60]
	0x03731F08 LDP X22, X21, [X31 + 0x50]
	0x03731F0C LDP X24, X23, [X31 + 0x40]
	0x03731F10 LDR X30, [X31 + 0x30]
	0x03731F14 ADD X31, X31, 0x70
	0x03731F18 RET
	0x03731F1C BL 0x3EB1B20
	0x03731F20 SUB X31, X31, 0x50
	0x03731F24 STR X30, [X31 + 0x40]
	0x03731F28 MRS X8, 0xC000
	0x03731F2C LDR X10, [X8 + 0x28]
	0x03731F30 MOV X9, X31
	0x03731F34 ADD X11, X31, 0x28
	0x03731F38 ADD X12, X31, 0x8
	0x03731F3C STR X10, [X31 + 0x38]
	0x03731F40 ADD X10, X31, 0x18
	0x03731F44 STP X0, X1, [X31 + 0x28]
	0x03731F48 STP X2, X3, [X31 + 0x18]
	0x03731F4C STP X31, X31, [X31 + 0x8]
	0x00000000 INVALID
	0x03731F54 TBNZ X13, 0x1F, 0x3731F68
	0x03731F58 AND X13, X13, 0xFF
	0x03731F5C AND X13, X13, 0xF
	0x03731F60 LDRB W13, [X13, X11, LSL]
	0x03731F64 B 0x3731F6C
	0x03731F68 MOV W13, W31
	0x03731F6C STRB W13, [X12, X9, LSL]
	0x03731F70 ADD X9, X9, 0x1
	0x03731F74 CMP X9, 0x10
	0x03731F78 B.NE 0x3731F50
	0x03731F7C LDP X0, X1, [X31 + 0x8]
	0x03731F80 LDR X8, [X8 + 0x28]
	0x03731F84 LDR X9, [X31 + 0x38]
	0x03731F88 CMP X8, X9
	0x03731F8C B.NE 0x3731F9C
	0x03731F90 LDR X30, [X31 + 0x40]
	0x03731F94 ADD X31, X31, 0x50
	0x03731F98 RET
	0x03731F9C BL 0x3EB1B20
	0x03731FA0 SUB X31, X31, 0x50
	0x03731FA4 STR X30, [X31 + 0x40]
	0x03731FA8 MRS X8, 0xC000
	0x03731FAC LDR X9, [X8 + 0x28]
	0x03731FB0 STR X9, [X31 + 0x38]
	0x03731FB4 MOVZ W9, 0x10
	0x03731FB8 SUB W10, W9, W4
	0x03731FBC CMP W10, 0x1
	0x03731FC0 STP X0, X1, [X31 + 0x28]
	0x03731FC4 STP X2, X3, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X23, 0xCB0000
	011 Move W19, W6
	012 Move W20, W5
	013 Move [X31+40], X8
	014 Move W8, [X23+3258]
	015 Move W21, W2
	016 Move [X31+24], X0
	017 Move [X31+32], X1
	018 Move [X31+8], X3
	019 Move [X31+16], X4
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xA14000
	025 Move X0, [X0+3416]
	026 Call 0x1C17CF4
	027 Move X0, 0xA14000
	028 Move X0, [X0+3424]
	029 Call 0x1C17CF4
	030 Move X0, 0xA14000
	031 Move X0, [X0+3432]
	032 Call 0x1C17CF4
	033 Move X0, 0xA14000
	034 Move X0, [X0+3440]
	035 Call 0x1C17CF4
	036 Move X0, 0x9EC000
	037 Move X0, [X0+2712]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3258], W8
	041 Move X8, 0x9EC000
	042 Move X8, [X8+2712]
	043 Move TEMP, X19
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {68}
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfEqual {89}
	051 Move TEMP, X19
	052 And TEMP, TEMP, 2
	053 Compare TEMP, 2
	054 JumpIfEqual {94}
	055 Move X8, 0xA14000
	056 Move X8, [X8+3416]
	057 Add X0, X31, 24
	058 Add X2, X31, 8
	059 Move W4, 16
	060 Move X8, [X8]
	061 Move W6, 0xFFFF
	062 Move W7, 255
	063 Move W1, W21
	064 Move W3, W20
	065 Move W5, W19
	066 Move [X31], X8
	067 Call 0x22BF120, X0, X1, X2, X3, X4, X5, X6, X7
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfEqual {107}
	072 Move TEMP, X19
	073 And TEMP, TEMP, 2
	074 Compare TEMP, 2
	075 JumpIfEqual {112}
	076 Move X8, 0xA14000
	077 Move X8, [X8+3440]
	078 Add X0, X31, 24
	079 Add X2, X31, 8
	080 Move W4, 8
	081 Move X8, [X8]
	082 Move W6, 255
	083 Move W7, 0xFFFF
	084 Move W1, W21
	085 Move W3, W20
	086 Move W5, W19
	087 Move [X31], X8
	088 Call Sse4_2.cmpestri_emulation, X0, X1, X2, X3, X4, X5, X6, X7
	089 Call 0x1C17DFC
	090 Move TEMP, X19
	091 And TEMP, TEMP, 2
	092 Compare TEMP, 2
	093 JumpIfNotEqual {55}
	094 Move X8, 0xA14000
	095 Move X8, [X8+3432]
	096 Add X0, X31, 24
	097 Add X2, X31, 8
	098 Move W4, 16
	099 Move X8, [X8]
	100 Move W6, 0xFFFF
	101 Move W7, 255
	102 Move W1, W21
	103 Move W3, W20
	104 Move W5, W19
	105 Move [X31], X8
	106 Call Sse4_2.cmpestri_emulation, X0, X1, X2, X3, X4, X5, X6, X7
	107 Call 0x1C17DFC
	108 Move TEMP, X19
	109 And TEMP, TEMP, 2
	110 Compare TEMP, 2
	111 JumpIfNotEqual {76}
	112 Move X8, 0xA14000
	113 Move X8, [X8+3424]
	114 Add X0, X31, 24
	115 Add X2, X31, 8
	116 Move W4, 8
	117 Move X8, [X8]
	118 Move W6, 255
	119 Move W7, 0xFFFF
	120 Move W1, W21
	121 Move W3, W20
	122 Move W5, W19
	123 Move [X31], X8
	124 Call Sse4_2.cmpestri_emulation, X0, X1, X2, X3, X4, X5, X6, X7
	125 Move X8, [X22+40]
	126 Move X9, [X31+40]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X20, [X31+80]
	129 Move X19, [X31+88]
	130 Move X22, [X31+64]
	131 Move X21, [X31+72]
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]
	134 Add X31, X31, 96
	135 Return X0
	136 Call 0x3EB2B20

Method: System.Int32 cmpistrz(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03731FC8 STP X31, X31, [X31 + 0x8]
	0x03731FCC B.LT 0x3731FFC
	0x03731FD0 ADD X11, X31, 0x28
	0x03731FD4 ADD X9, X31, 0x8
	0x03731FD8 ADD X11, X11, W4, SXTW
	0x03731FDC SUB W12, W4, 0x10
	0x03731FE0 LDRB W13, [X11], #0x1
	0x03731FE4 ADDS W12, W12, 0x1
	0x03731FE8 STRB W13, [X9], #0x1
	0x03731FEC B.CC 0x3731FE0
	0x03731FF0 CMP W10, 0xF
	0x03731FF4 B.LS 0x3732004
	0x03731FF8 B 0x373201C
	0x03731FFC MOV W10, W31
	0x03732000 ADD X9, X31, 0x8
	0x03732004 ADD X11, X31, 0x18
	0x03732008 SUB W10, W10, 0x10
	0x0373200C LDRB W12, [X11], #0x1
	0x03732010 ADDS W10, W10, 0x1
	0x03732014 STRB W12, [X9], #0x1
	0x03732018 B.CC 0x373200C
	0x0373201C LDP X0, X1, [X31 + 0x8]
	0x03732020 LDR X8, [X8 + 0x28]
	0x03732024 LDR X9, [X31 + 0x38]
	0x03732028 CMP X8, X9
	0x0373202C B.NE 0x373203C
	0x03732030 LDR X30, [X31 + 0x40]
	0x03732034 ADD X31, X31, 0x50
	0x03732038 RET
	0x0373203C BL 0x3EB1B20
	0x03732040 SUB X31, X31, 0x50
	0x03732044 STR X30, [X31 + 0x40]
	0x03732048 MRS X8, 0xC000
	0x0373204C LDR X10, [X8 + 0x28]
	0x03732050 MOV X9, X31
	0x03732054 ADD X11, X31, 0x28
	0x03732058 ADD X12, X31, 0x18
	0x0373205C STR X10, [X31 + 0x38]
	0x03732060 ADD X10, X31, 0x8
	0x03732064 STP X0, X1, [X31 + 0x28]
	0x03732068 STP X2, X3, [X31 + 0x18]
	0x0373206C STP X31, X31, [X31 + 0x8]
	0x03732070 ADD X13, X11, X9
	0x03732074 LDRH W14, [X13 + 0x2]
	0x03732078 LDRH W13, [X13]
	0x0373207C ADD X15, X12, X9
	0x03732080 ADD X9, X9, 0x4
	0x03732084 CMP X9, 0x10
	0x03732088 ADD W13, W13, W14
	0x0373208C STRH W13, [X10]
	0x03732090 LDRH W13, [X15 + 0x2]
	0x03732094 LDRH W14, [X15]
	0x03732098 ADD W13, W14, W13
	0x0373209C STRH W13, [X10 + 0x8]
	0x037320A0 ADD X10, X10, 0x2
	0x037320A4 B.NE 0x3732070
	0x037320A8 LDP X0, X1, [X31 + 0x8]
	0x037320AC LDR X8, [X8 + 0x28]
	0x037320B0 LDR X9, [X31 + 0x38]
	0x037320B4 CMP X8, X9

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X20+40]
	009 Move X21, 0xCB0000
	010 Move X22, 0x9EC000
	011 Move W19, W4
	012 Move [X31+24], X8
	013 Move [X31+8], X2
	014 Move [X31+16], X3
	015 Move W8, [X21+3259]
	016 Move X22, [X22+2712]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xA13000
	022 Move X0, [X0+3448]
	023 Call 0x1C17CF4
	024 Move X0, 0xA13000
	025 Move X0, [X0+3456]
	026 Call 0x1C17CF4
	027 Move X0, 0x9EB000
	028 Move X0, [X0+2712]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3259], W8
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Move TEMP, X19
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {50}
	038 Move X19, 0xA13000
	039 Move X19, [X19+3448]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X2, [X19]
	044 Add X0, X31, 8
	045 Move W1, 16
	046 Call 0x22BE8A8, X0, X1
	047 Move X8, [X20+40]
	048 Move X9, [X31+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X19, 0xA13000
	051 Move X19, [X19+3456]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X2, [X19]
	056 Add X0, X31, 8
	057 Move W1, 8
	058 Call Sse4_2.ComputeStringLength, X0, X1
	059 Move X8, [X20+40]
	060 Move X9, [X31+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X30, [X31+32]
	069 Add X31, X31, 80
	070 Return X0
	071 Call 0x3EB2B20

Method: System.Int32 cmpistrc(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x037320B8 B.NE 0x37320C8
	0x037320BC LDR X30, [X31 + 0x40]
	0x037320C0 ADD X31, X31, 0x50
	0x037320C4 RET
	0x037320C8 BL 0x3EB1B20
	0x037320CC SUB X31, X31, 0x70
	0x037320D0 STP X30, X23, [X31 + 0x40]
	0x037320D4 STP X22, X21, [X31 + 0x50]
	0x037320D8 STP X20, X19, [X31 + 0x60]
	0x037320DC MRS X19, 0xC000
	0x037320E0 LDR X8, [X19 + 0x28]
	0x037320E4 MOV X20, X31
	0x037320E8 ADD X21, X31, 0x8
	0x037320EC ADD X22, X31, 0x28
	0x037320F0 ADD X23, X31, 0x18
	0x037320F4 STR X8, [X31 + 0x38]
	0x037320F8 STP X0, X1, [X31 + 0x28]
	0x037320FC STP X2, X3, [X31 + 0x18]
	0x03732100 STP X31, X31, [X31 + 0x8]
	0x03732104 ADD X8, X22, X20
	0x03732108 LDRSH W9, [X8 + 0x2]
	0x0373210C LDRSH W8, [X8]
	0x03732110 MOV X1, X31
	0x03732114 ADD W0, W8, W9
	0x03732118 BL 0x3720910
	0x0373211C STRH W0, [X21]
	0x03732120 ADD X8, X23, X20
	0x03732124 LDRSH W9, [X8 + 0x2]
	0x03732128 LDRSH W8, [X8]
	0x0373212C MOV X1, X31
	0x03732130 ADD W0, W8, W9
	0x03732134 BL 0x3720910
	0x03732138 ADD X20, X20, 0x4
	0x0373213C STRH W0, [X21 + 0x8]
	0x03732140 CMP X20, 0x10
	0x03732144 ADD X21, X21, 0x2
	0x03732148 B.NE 0x3732104
	0x0373214C LDP X0, X1, [X31 + 0x8]
	0x03732150 LDR X8, [X19 + 0x28]
	0x03732154 LDR X9, [X31 + 0x38]
	0x03732158 CMP X8, X9
	0x0373215C B.NE 0x3732174
	0x03732160 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xCAF000
	010 Move X24, 0x9EB000
	011 Move W8, [X25+3260]
	012 Move X24, [X24+2712]
	013 Move W19, W4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x9EB000
	023 Move X0, [X0+2712]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3260], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X23
	033 Move X1, X22
	034 Move X2, X21
	035 Move X3, X20
	036 Move W4, W19
	037 Call Sse4_2.cmpistrm, X0, X1, X2
	038 Or W8, W1, W0
	039 Compare W8, 0
	040 JumpIfNotEqual {51}
	041 Move X8, X0
	042 ShiftRight X8, 32
	043 And X8, X8, 0x7FFFFFFF
	044 Compare X8, 0
	045 JumpIfNotEqual {51}
	046 Move X8, X1
	047 ShiftRight X8, 32
	048 And X8, X8, 0x7FFFFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move W0, 1
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X24, [X31+16]
	057 Move X23, [X31+24]
	058 Move X30, [X31+64]
	059 Move X25, [X31+72]
	060 Return X0

Method: System.Int32 cmpistrs(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03732164 LDP X22, X21, [X31 + 0x50]
	0x03732168 LDP X30, X23, [X31 + 0x40]
	0x0373216C ADD X31, X31, 0x70
	0x03732170 RET
	0x03732174 BL 0x3EB1B20
	0x03732178 UBFM X8, X0, 0x20, 0x3F
	0x0373217C UBFM X9, X2, 0x20, 0x3F
	0x03732180 ADD X10, X3, X3, 0x20, LSL
	0x03732184 ADD X11, X1, X1, 0x20, LSL
	0x03732188 ADD W8, W8, W0
	0x0373218C ADD W9, W9, W2
	0x03732190 AND X10, X10, 0x0
	0x03732194 AND X11, X11, 0x0
	0x03732198 ORR X1, X9, X10, 0x0
	0x0373219C ORR X0, X8, X11, 0x0
	0x037321A0 RET
	0x037321A4 SUB X31, X31, 0x50
	0x037321A8 STR X30, [X31 + 0x40]
	0x037321AC MRS X8, 0xC000
	0x037321B0 LDR X10, [X8 + 0x28]
	0x037321B4 MOV X9, X31
	0x037321B8 ADD X11, X31, 0x28
	0x037321BC ADD X12, X31, 0x18
	0x037321C0 STR X10, [X31 + 0x38]
	0x037321C4 ADD X10, X31, 0x8
	0x037321C8 STP X0, X1, [X31 + 0x28]
	0x037321CC STP X2, X3, [X31 + 0x18]
	0x037321D0 STP X31, X31, [X31 + 0x8]
	0x037321D4 ADD X13, X11, X9
	0x037321D8 LDRH W14, [X13]
	0x037321DC LDRH W13, [X13 + 0x2]
	0x037321E0 ADD X15, X12, X9
	0x037321E4 ADD X9, X9, 0x4
	0x037321E8 CMP X9, 0x10
	0x037321EC SUB W13, W14, W13
	0x037321F0 STRH W13, [X10]
	0x037321F4 LDRH W13, [X15]
	0x037321F8 LDRH W14, [X15 + 0x2]
	0x037321FC SUB W13, W13, W14
	0x03732200 STRH W13, [X10 + 0x8]
	0x03732204 ADD X10, X10, 0x2
	0x03732208 B.NE 0x37321D4
	0x0373220C LDP X0, X1, [X31 + 0x8]
	0x03732210 LDR X8, [X8 + 0x28]
	0x03732214 LDR X9, [X31 + 0x38]
	0x03732218 CMP X8, X9
	0x0373221C B.NE 0x373222C
	0x03732220 LDR X30, [X31 + 0x40]
	0x03732224 ADD X31, X31, 0x50
	0x03732228 RET
	0x0373222C BL 0x3EB1B20
	0x03732230 SUB X31, X31, 0x70
	0x03732234 STP X30, X23, [X31 + 0x40]
	0x03732238 STP X22, X21, [X31 + 0x50]
	0x0373223C STP X20, X19, [X31 + 0x60]
	0x03732240 MRS X19, 0xC000
	0x03732244 LDR X8, [X19 + 0x28]
	0x03732248 MOV X20, X31
	0x0373224C ADD X21, X31, 0x8
	0x03732250 ADD X22, X31, 0x28

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X20+40]
	009 Move X21, 0xCAF000
	010 Move X22, 0x9EB000
	011 Move W19, W4
	012 Move [X31+24], X8
	013 Move [X31+8], X0
	014 Move [X31+16], X1
	015 Move W8, [X21+3261]
	016 Move X22, [X22+2712]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xA13000
	022 Move X0, [X0+3448]
	023 Call 0x1C17CF4
	024 Move X0, 0xA13000
	025 Move X0, [X0+3456]
	026 Call 0x1C17CF4
	027 Move X0, 0x9EB000
	028 Move X0, [X0+2712]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3261], W8
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Move TEMP, X19
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {50}
	038 Move X19, 0xA13000
	039 Move X19, [X19+3448]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X2, [X19]
	044 Add X0, X31, 8
	045 Move W1, 16
	046 Call 0x22BE8A8, X0, X1
	047 Move X8, [X20+40]
	048 Move X9, [X31+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X19, 0xA13000
	051 Move X19, [X19+3456]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X2, [X19]
	056 Add X0, X31, 8
	057 Move W1, 8
	058 Call Sse4_2.ComputeStringLength, X0, X1
	059 Move X8, [X20+40]
	060 Move X9, [X31+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X30, [X31+32]
	069 Add X31, X31, 80
	070 Return X0
	071 Call 0x3EB2B20

Method: System.Int32 cmpistro(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03732254 ADD X23, X31, 0x18
	0x03732258 STR X8, [X31 + 0x38]
	0x0373225C STP X0, X1, [X31 + 0x28]
	0x03732260 STP X2, X3, [X31 + 0x18]
	0x03732264 STP X31, X31, [X31 + 0x8]
	0x03732268 ADD X8, X22, X20
	0x0373226C LDRSH W9, [X8]
	0x03732270 LDRSH W8, [X8 + 0x2]
	0x03732274 MOV X1, X31
	0x03732278 SUB W0, W9, W8
	0x0373227C BL 0x3720910
	0x03732280 STRH W0, [X21]
	0x03732284 ADD X8, X23, X20
	0x03732288 LDRSH W9, [X8]
	0x0373228C LDRSH W8, [X8 + 0x2]
	0x03732290 MOV X1, X31
	0x03732294 SUB W0, W9, W8
	0x03732298 BL 0x3720910
	0x0373229C ADD X20, X20, 0x4
	0x037322A0 STRH W0, [X21 + 0x8]
	0x037322A4 CMP X20, 0x10
	0x037322A8 ADD X21, X21, 0x2
	0x037322AC B.NE 0x3732268
	0x037322B0 LDP X0, X1, [X31 + 0x8]
	0x037322B4 LDR X8, [X19 + 0x28]
	0x037322B8 LDR X9, [X31 + 0x38]
	0x037322BC CMP X8, X9
	0x037322C0 B.NE 0x37322D8
	0x037322C4 LDP X20, X19, [X31 + 0x60]
	0x037322C8 LDP X22, X21, [X31 + 0x50]
	0x037322CC LDP X30, X23, [X31 + 0x40]
	0x037322D0 ADD X31, X31, 0x70
	0x037322D4 RET
	0x037322D8 BL 0x3EB1B20
	0x037322DC UBFM X8, X0, 0x20, 0x3F
	0x037322E0 UBFM X9, X2, 0x20, 0x3F
	0x037322E4 SUB W0, W0, W8
	0x037322E8 UBFM X8, X1, 0x20, 0x3F
	0x037322EC UBFM X10, X3, 0x20, 0x3F
	0x037322F0 SUB W8, W1, W8
	0x037322F4 SUB W1, W2, W9
	0x037322F8 SUB W9, W3, W10
	0x037322FC BFM X1, X9, 0x20, 0x1F
	0x03732300 BFM X0, X8, 0x20, 0x1F
	0x03732304 RET
	0x03732308 SUB X31, X31, 0x70
	0x0373230C STP X30, X23, [X31 + 0x40]
	0x03732310 STP X22, X21, [X31 + 0x50]
	0x03732314 STP X20, X19, [X31 + 0x60]
	0x03732318 MRS X19, 0xC000
	0x0373231C LDR X8, [X19 + 0x28]
	0x03732320 MOV X20, X31
	0x03732324 ADD X21, X31, 0x28
	0x03732328 ADD X22, X31, 0x18
	0x0373232C ADD X23, X31, 0x8
	0x03732330 STR X8, [X31 + 0x38]
	0x03732334 STP X0, X1, [X31 + 0x28]
	0x03732338 STP X2, X3, [X31 + 0x18]
	0x0373233C STP X31, X31, [X31 + 0x8]
	0x03732340 ADD X8, X21, X20
	0x03732344 ADD X9, X22, X20
	0x03732348 LDRB W10, [X8 + 0x1]
	0x00000000 INVALID
	0x03732350 LDRB W8, [X8]
	0x00000000 INVALID
	0x03732358 MOV X1, X31
	0x0373235C MUL W10, W11, W10
	0x03732360 MADD W0, W9, W8, W10
	0x03732364 BL 0x3720910
	0x03732368 STRH W0, [X23, X20, LSL]
	0x0373236C ADD X20, X20, 0x2
	0x03732370 CMP X20, 0x10
	0x03732374 B.NE 0x3732340
	0x03732378 LDP X0, X1, [X31 + 0x8]
	0x0373237C LDR X8, [X19 + 0x28]
	0x03732380 LDR X9, [X31 + 0x38]
	0x03732384 CMP X8, X9
	0x03732388 B.NE 0x37323A0
	0x0373238C LDP X20, X19, [X31 + 0x60]
	0x03732390 LDP X22, X21, [X31 + 0x50]
	0x03732394 LDP X30, X23, [X31 + 0x40]
	0x03732398 ADD X31, X31, 0x70
	0x0373239C RET
	0x037323A0 BL 0x3EB1B20
	0x037323A4 SUB X31, X31, 0x50
	0x037323A8 STR X30, [X31 + 0x40]
	0x037323AC MRS X8, 0xC000
	0x037323B0 LDR X10, [X8 + 0x28]
	0x037323B4 MOV X9, X31
	0x037323B8 ADD X11, X31, 0x18
	0x037323BC ADD X12, X31, 0x8
	0x037323C0 STR X10, [X31 + 0x38]
	0x037323C4 ADD X10, X31, 0x28
	0x037323C8 STP X0, X1, [X31 + 0x28]
	0x037323CC STP X2, X3, [X31 + 0x18]
	0x037323D0 STP X31, X31, [X31 + 0x8]
	0x037323D4 LDRSH W13, [X10, X9, LSL]
	0x037323D8 LDRSH W14, [X11, X9, LSL]
	0x037323DC MUL W13, W14, W13
	0x037323E0 UBFM W13, W13, 0xE, 0x1F
	0x037323E4 ADD W13, W13, 0x1
	0x037323E8 UBFM W13, W13, 0x1, 0x1F
	0x037323EC STRH W13, [X12, X9, LSL]
	0x037323F0 ADD X9, X9, 0x2
	0x037323F4 CMP X9, 0x10
	0x037323F8 B.NE 0x37323D4
	0x037323FC LDP X0, X1, [X31 + 0x8]
	0x03732400 LDR X8, [X8 + 0x28]
	0x03732404 LDR X9, [X31 + 0x38]
	0x03732408 CMP X8, X9
	0x0373240C B.NE 0x373241C
	0x03732410 LDR X30, [X31 + 0x40]
	0x03732414 ADD X31, X31, 0x50
	0x03732418 RET
	0x0373241C BL 0x3EB1B20
	0x03732420 SUB X31, X31, 0x50
	0x03732424 STR X30, [X31 + 0x40]
	0x03732428 MRS X8, 0xC000
	0x0373242C LDR X10, [X8 + 0x28]
	0x03732430 MOV X9, X31
	0x03732434 ADD X11, X31, 0x28
	0x03732438 ADD X12, X31, 0x8
	0x0373243C STR X10, [X31 + 0x38]
	0x03732440 ADD X10, X31, 0x18
	0x03732444 STP X0, X1, [X31 + 0x28]
	0x03732448 STP X2, X3, [X31 + 0x18]
	0x0373244C STP X31, X31, [X31 + 0x8]
	0x00000000 INVALID
	0x03732454 TBNZ X13, 0x1F, 0x3732464
	0x03732458 CBZ W13, 0x373246C
	0x0373245C LDRB W13, [X11, X9, LSL]
	0x03732460 B 0x373246C
	0x03732464 LDRB W13, [X11, X9, LSL]
	0x03732468 SUB W13, W31, W13
	0x0373246C STRB W13, [X12, X9, LSL]
	0x03732470 ADD X9, X9, 0x1
	0x03732474 CMP X9, 0x10
	0x03732478 B.NE 0x3732450
	0x0373247C LDP X0, X1, [X31 + 0x8]
	0x03732480 LDR X8, [X8 + 0x28]
	0x03732484 LDR X9, [X31 + 0x38]
	0x03732488 CMP X8, X9
	0x0373248C B.NE 0x373249C
	0x03732490 LDR X30, [X31 + 0x40]
	0x03732494 ADD X31, X31, 0x50
	0x03732498 RET
	0x0373249C BL 0x3EB1B20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X22+40]
	009 Move X20, 0xCAF000
	010 Move W19, W4
	011 Move [X31+40], X8
	012 Move W8, [X20+3262]
	013 Move [X31+24], X0
	014 Move [X31+32], X1
	015 Move [X31+8], X2
	016 Move [X31+16], X3
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xA13000
	022 Move X0, [X0+3464]
	023 Call 0x1C17CF4
	024 Move X0, 0xA13000
	025 Move X0, [X0+3472]
	026 Call 0x1C17CF4
	027 Move X0, 0xA13000
	028 Move X0, [X0+3480]
	029 Call 0x1C17CF4
	030 Move X0, 0xA13000
	031 Move X0, [X0+3488]
	032 Call 0x1C17CF4
	033 Move X0, 0xA13000
	034 Move X0, [X0+3448]
	035 Call 0x1C17CF4
	036 Move X0, 0xA13000
	037 Move X0, [X0+3456]
	038 Call 0x1C17CF4
	039 Move X0, 0x9EB000
	040 Move X0, [X0+2712]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+3262], W8
	044 Move X21, 0x9EB000
	045 Move X21, [X21+2712]
	046 Move TEMP, X19
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {88}
	050 Move X0, [X21]
	051 Move X20, 0xA13000
	052 Move W8, [X0+224]
	053 Move X20, [X20+3448]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X2, [X20]
	058 Add X0, X31, 24
	059 Move W1, 16
	060 Call 0x22BE8A8, X0, X1
	061 Move X2, [X20]
	062 Move W20, W0
	063 Add X0, X31, 8
	064 Move W1, 16
	065 Call 0x22BE8A8, X0, X1
	066 Move X8, [X21]
	067 Move W21, W0
	068 Move W9, [X8+224]
	069 Move TEMP, X19
	070 And TEMP, TEMP, 2
	071 Compare TEMP, 2
	072 JumpIfEqual {126}
	073 Compare W9, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move X8, 0xA13000
	078 Move X8, [X8+3464]
	079 Add X0, X31, 24
	080 Add X2, X31, 8
	081 Move W4, 16
	082 Move X7, [X8]
	083 Move W6, 0xFFFF
	084 Move W1, W20
	085 Move W3, W21
	086 Move W5, W19
	087 Call 0x22BA088, X0, X1, X2, X3, X4, X5, X6
	088 Move X0, [X21]
	089 Move X20, 0xA13000
	090 Move W8, [X0+224]
	091 Move X20, [X20+3456]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X2, [X20]
	096 Add X0, X31, 24
	097 Move W1, 8
	098 Call Sse4_2.ComputeStringLength, X0, X1
	099 Move X2, [X20]
	100 Move W20, W0
	101 Add X0, X31, 8
	102 Move W1, 8
	103 Call Sse4_2.ComputeStringLength, X0, X1
	104 Move X8, [X21]
	105 Move W21, W0
	106 Move W9, [X8+224]
	107 Move TEMP, X19
	108 And TEMP, TEMP, 2
	109 Compare TEMP, 2
	110 JumpIfEqual {141}
	111 Compare W9, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X8, 0xA13000
	116 Move X8, [X8+3488]
	117 Add X0, X31, 24
	118 Add X2, X31, 8
	119 Move W4, 8
	120 Move X7, [X8]
	121 Move W6, 255
	122 Move W1, W20
	123 Move W3, W21
	124 Move W5, W19
	125 Call Sse4_2.ComputeStrCmpIntRes2, X0, X1, X2, X3, X4, X5, X6
	126 Compare W9, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X8, 0xA13000
	131 Move X8, [X8+3480]
	132 Add X0, X31, 24
	133 Add X2, X31, 8
	134 Move W4, 16
	135 Move X7, [X8]
	136 Move W6, 0xFFFF
	137 Move W1, W20
	138 Move W3, W21
	139 Move W5, W19
	140 Call Sse4_2.ComputeStrCmpIntRes2, X0, X1, X2, X3, X4, X5, X6
	141 Compare W9, 0
	142 JumpIfNotEqual {145}
	143 Move X0, X8
	144 Call 0x1C17DFC
	145 Move X8, 0xA13000
	146 Move X8, [X8+3472]
	147 Add X0, X31, 24
	148 Add X2, X31, 8
	149 Move W4, 8
	150 Move X7, [X8]
	151 Move W6, 255
	152 Move W1, W20
	153 Move W3, W21
	154 Move W5, W19
	155 Call Sse4_2.ComputeStrCmpIntRes2, X0, X1, X2, X3, X4, X5, X6
	156 Move X8, [X22+40]
	157 Move X9, [X31+40]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X20, [X31+80]
	160 Move X19, [X31+88]
	161 Move X22, [X31+64]
	162 Move X21, [X31+72]
	163 Move X30, [X31+48]
	164 And W0, W0, 1
	165 Add X31, X31, 96
	166 Return X0
	167 Call 0x3EB2B20

Method: System.Int32 cmpistra(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x037324A0 SUB X31, X31, 0x50
	0x037324A4 STR X30, [X31 + 0x40]
	0x037324A8 MRS X8, 0xC000
	0x037324AC LDR X10, [X8 + 0x28]
	0x037324B0 MOV X9, X31
	0x037324B4 ADD X11, X31, 0x28
	0x037324B8 ADD X12, X31, 0x8
	0x037324BC STR X10, [X31 + 0x38]
	0x037324C0 ADD X10, X31, 0x18
	0x037324C4 STP X0, X1, [X31 + 0x28]
	0x037324C8 STP X2, X3, [X31 + 0x18]
	0x037324CC STP X31, X31, [X31 + 0x8]
	0x037324D0 LDRSH W13, [X10, X9, LSL]
	0x037324D4 TBNZ X13, 0x1F, 0x37324E4
	0x037324D8 CBZ W13, 0x37324EC
	0x037324DC LDRH W13, [X11, X9, LSL]
	0x037324E0 B 0x37324EC
	0x037324E4 LDRH W13, [X11, X9, LSL]
	0x037324E8 SUB W13, W31, W13
	0x037324EC STRH W13, [X12, X9, LSL]
	0x037324F0 ADD X9, X9, 0x2
	0x037324F4 CMP X9, 0x10
	0x037324F8 B.NE 0x37324D0
	0x037324FC LDP X0, X1, [X31 + 0x8]
	0x03732500 LDR X8, [X8 + 0x28]
	0x03732504 LDR X9, [X31 + 0x38]
	0x03732508 CMP X8, X9
	0x0373250C B.NE 0x373251C
	0x03732510 LDR X30, [X31 + 0x40]
	0x03732514 ADD X31, X31, 0x50
	0x03732518 RET
	0x0373251C BL 0x3EB1B20
	0x03732520 SUB X31, X31, 0x50
	0x03732524 STR X30, [X31 + 0x40]
	0x03732528 MRS X8, 0xC000
	0x0373252C LDR X10, [X8 + 0x28]
	0x03732530 MOV X9, X31
	0x03732534 ADD X11, X31, 0x28
	0x03732538 ADD X12, X31, 0x8
	0x0373253C STR X10, [X31 + 0x38]
	0x03732540 ADD X10, X31, 0x18
	0x03732544 STP X0, X1, [X31 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xCAF000
	010 Move X24, 0x9EB000
	011 Move W8, [X25+3263]
	012 Move X24, [X24+2712]
	013 Move W19, W4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x9EB000
	023 Move X0, [X0+2712]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3263], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X23
	033 Move X1, X22
	034 Move X2, X21
	035 Move X3, X20
	036 Move W4, W19
	037 Call Sse4_2.cmpistrc, X0, X1, X2
	038 Move X2, X21
	039 Move X3, X20
	040 Move W4, W19
	041 Move W22, W0
	042 Call Sse4_2.cmpistrz, X0, X1, X2
	043 Or W8, W0, W22
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 NotImplemented "Instruction ORN not yet implemented."
	051 And W0, W8, 1
	052 Move X30, [X31+64]
	053 Move X25, [X31+72]
	054 Return X0

Method: System.Int32 cmpestrz(Unity.Burst.Intrinsics.v128 a, System.Int32 la, Unity.Burst.Intrinsics.v128 b, System.Int32 lb, System.Int32 imm8)

Disassembly:
	0x03732548 STP X2, X3, [X31 + 0x18]
	0x0373254C STP X31, X31, [X31 + 0x8]
	0x03732550 LDR W13, [X10, X9, LSL]
	0x03732554 TBNZ X13, 0x1F, 0x3732564
	0x03732558 CBZ W13, 0x373256C
	0x0373255C LDR W13, [X11, X9, LSL]
	0x03732560 B 0x373256C

ISIL:
	001 And W31, W6, 1
	002 Move W8, 7
	003 Move W9, 15
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0

Method: System.Int32 cmpestrc(Unity.Burst.Intrinsics.v128 a, System.Int32 la, Unity.Burst.Intrinsics.v128 b, System.Int32 lb, System.Int32 imm8)

Disassembly:
	0x03732564 LDR W13, [X11, X9, LSL]
	0x03732568 SUB W13, W31, W13
	0x0373256C STR W13, [X12, X9, LSL]
	0x03732570 ADD X9, X9, 0x4
	0x03732574 CMP X9, 0x10
	0x03732578 B.NE 0x3732550
	0x0373257C LDP X0, X1, [X31 + 0x8]
	0x03732580 LDR X8, [X8 + 0x28]
	0x03732584 LDR X9, [X31 + 0x38]
	0x03732588 CMP X8, X9
	0x0373258C B.NE 0x373259C
	0x03732590 LDR X30, [X31 + 0x40]
	0x03732594 ADD X31, X31, 0x50
	0x03732598 RET
	0x0373259C BL 0x3EB1B20
	0x037325A0 RET
	0x037325A4 RET
	0x037325A8 MOV X1, X31
	0x037325AC B 0x33A51F0
	0x037325B0 MOV X1, X31
	0x037325B4 B 0x33A51F0
	0x037325B8 MOV W0, W31
	0x037325BC RET
	0x037325C0 AND W0, W0, 0x1
	0x037325C4 RET
	0x037325C8 AND W0, W0, 0x1
	0x037325CC RET
	0x037325D0 RET
	0x037325D4 MOV X1, X31
	0x037325D8 B 0x33A51F0
	0x037325DC MOV X1, X31
	0x037325E0 B 0x33A51F0
	0x037325E4 STR X30, [X31 - 0x20]!
	0x037325E8 STP X20, X19, [X31 + 0x10]
	0x037325EC ADRP X20, 0xCAE000
	0x037325F0 ADRP X19, 0x9E9000
	0x037325F4 LDRB W8, [X20 + 0xCCC]
	0x037325F8 LDR X19, [X19 + 0x270]
	0x037325FC TBNZ X8, 0x0, 0x3732620
	0x03732600 ADRP X0, 0x9E9000
	0x03732604 LDR X0, [X0 + 0x270]
	0x03732608 BL 0x1C16CF4
	0x0373260C ADRP X0, 0xA12000
	0x03732610 LDR X0, [X0 + 0xDB0]
	0x03732614 BL 0x1C16CF4
	0x03732618 MOVZ W8, 0x1
	0x0373261C STRB W8, [X20 + 0xCCC]
	0x03732620 LDR X0, [X19]
	0x03732624 ADRP X19, 0xA12000
	0x03732628 LDR W8, [X0 + 0xE0]
	0x0373262C LDR X19, [X19 + 0xDB0]
	0x03732630 CBNZ W8, 0x3732638
	0x03732634 BL 0x1C16DFC
	0x03732638 LDR X0, [X19]
	0x0373263C LDP X20, X19, [X31 + 0x10]
	0x03732640 MOV X1, X31
	0x03732644 MOV X2, X31
	0x03732648 MOV X3, X31
	0x0373264C MOV X4, X31
	0x03732650 LDR X30, [X31], #0x20
	0x03732654 B 0x376CCE0
	0x03732658 STP X30, X23, [X31 - 0x30]!
	0x0373265C STP X22, X21, [X31 + 0x10]
	0x03732660 STP X20, X19, [X31 + 0x20]
	0x03732664 ADRP X23, 0xCAE000
	0x03732668 ADRP X22, 0x9C1000
	0x0373266C ADRP X20, 0xA12000
	0x03732670 ADRP X21, 0xA12000
	0x03732674 MOV X19, X8
	0x03732678 LDRB W8, [X23 + 0xCCD]
	0x0373267C LDR X22, [X22 + 0x618]
	0x03732680 LDR X20, [X20 + 0xDB8]
	0x03732684 LDR X21, [X21 + 0xDC0]
	0x03732688 TBNZ X8, 0x0, 0x37326B8
	0x0373268C ADRP X0, 0x9C1000
	0x03732690 LDR X0, [X0 + 0x618]
	0x03732694 BL 0x1C16CF4
	0x03732698 ADRP X0, 0xA12000
	0x0373269C LDR X0, [X0 + 0xDC0]
	0x037326A0 BL 0x1C16CF4
	0x037326A4 ADRP X0, 0xA12000
	0x037326A8 LDR X0, [X0 + 0xDB8]
	0x037326AC BL 0x1C16CF4
	0x037326B0 MOVZ W8, 0x1
	0x037326B4 STRB W8, [X23 + 0xCCD]
	0x037326B8 LDR X0, [X22]
	0x037326BC MOVZ W1, 0x5D78
	0x037326C0 BL 0x1C16D6C
	0x037326C4 LDR X1, [X20]
	0x037326C8 MOV X2, X31
	0x037326CC MOV X20, X0
	0x037326D0 BL 0x32C5BD8
	0x037326D4 LDR X0, [X22]
	0x037326D8 MOVZ W1, 0x6346
	0x037326DC BL 0x1C16D6C
	0x037326E0 LDR X1, [X21]
	0x037326E4 MOV X2, X31
	0x037326E8 MOV X21, X0
	0x037326EC BL 0x32C5BD8
	0x037326F0 ADRP X8, 0xFFFFFFFFFD3BC000
	0x037326F4 LDR V0, [X8 + 0x300]
	0x037326F8 STP X20, X21, [X19]
	0x037326FC STRB W31, [X19 + 0x18]
	0x03732700 STUR W31, [X19 + 0x19]
	0x03732704 STR D0, [X19 + 0x10]
	0x03732708 STR W31, [X19 + 0x1C]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X23, 0xCAF000
	011 Move W19, W6
	012 Move W20, W5
	013 Move [X31+40], X8
	014 Move W8, [X23+3264]
	015 Move W21, W2
	016 Move [X31+24], X0
	017 Move [X31+32], X1
	018 Move [X31+8], X3
	019 Move [X31+16], X4
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xA13000
	025 Move X0, [X0+3464]
	026 Call 0x1C17CF4
	027 Move X0, 0xA13000
	028 Move X0, [X0+3472]
	029 Call 0x1C17CF4
	030 Move X0, 0xA13000
	031 Move X0, [X0+3480]
	032 Call 0x1C17CF4
	033 Move X0, 0xA13000
	034 Move X0, [X0+3488]
	035 Call 0x1C17CF4
	036 Move X0, 0x9EB000
	037 Move X0, [X0+2712]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3264], W8
	041 Move X8, 0x9EB000
	042 Move X8, [X8+2712]
	043 Move TEMP, X19
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {66}
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfEqual {85}
	051 Move TEMP, X19
	052 And TEMP, TEMP, 2
	053 Compare TEMP, 2
	054 JumpIfEqual {90}
	055 Move X8, 0xA13000
	056 Move X8, [X8+3464]
	057 Add X0, X31, 24
	058 Add X2, X31, 8
	059 Move W4, 16
	060 Move X7, [X8]
	061 Move W6, 0xFFFF
	062 Move W1, W21
	063 Move W3, W20
	064 Move W5, W19
	065 Call 0x22BA088, X0, X1, X2, X3, X4, X5, X6
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfEqual {101}
	070 Move TEMP, X19
	071 And TEMP, TEMP, 2
	072 Compare TEMP, 2
	073 JumpIfEqual {106}
	074 Move X8, 0xA13000
	075 Move X8, [X8+3488]
	076 Add X0, X31, 24
	077 Add X2, X31, 8
	078 Move W4, 8
	079 Move X7, [X8]
	080 Move W6, 255
	081 Move W1, W21
	082 Move W3, W20
	083 Move W5, W19
	084 Call Sse4_2.ComputeStrCmpIntRes2, X0, X1, X2, X3, X4, X5, X6
	085 Call 0x1C17DFC
	086 Move TEMP, X19
	087 And TEMP, TEMP, 2
	088 Compare TEMP, 2
	089 JumpIfNotEqual {55}
	090 Move X8, 0xA13000
	091 Move X8, [X8+3480]
	092 Add X0, X31, 24
	093 Add X2, X31, 8
	094 Move W4, 16
	095 Move X7, [X8]
	096 Move W6, 0xFFFF
	097 Move W1, W21
	098 Move W3, W20
	099 Move W5, W19
	100 Call Sse4_2.ComputeStrCmpIntRes2, X0, X1, X2, X3, X4, X5, X6
	101 Call 0x1C17DFC
	102 Move TEMP, X19
	103 And TEMP, TEMP, 2
	104 Compare TEMP, 2
	105 JumpIfNotEqual {74}
	106 Move X8, 0xA13000
	107 Move X8, [X8+3472]
	108 Add X0, X31, 24
	109 Add X2, X31, 8
	110 Move W4, 8
	111 Move X7, [X8]
	112 Move W6, 255
	113 Move W1, W21
	114 Move W3, W20
	115 Move W5, W19
	116 Call Sse4_2.ComputeStrCmpIntRes2, X0, X1, X2, X3, X4, X5, X6
	117 Move X8, [X22+40]
	118 Move X9, [X31+40]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X20, [X31+80]
	123 Move X19, [X31+88]
	124 Move X22, [X31+64]
	125 Move X21, [X31+72]
	126 Move X30, [X31+48]
	127 Move X23, [X31+56]
	128 Add X31, X31, 96
	129 Return X0
	130 Call 0x3EB2B20

Method: System.Int32 cmpestrs(Unity.Burst.Intrinsics.v128 a, System.Int32 la, Unity.Burst.Intrinsics.v128 b, System.Int32 lb, System.Int32 imm8)

Disassembly:
	0x0373270C LDP X20, X19, [X31 + 0x20]
	0x03732710 LDP X22, X21, [X31 + 0x10]
	0x03732714 LDP X30, X23, [X31], #0x30
	0x03732718 RET
	0x0373271C MOV X1, X31
	0x03732720 B 0x33BDD8C
	0x03732724 LDR X0, [X0 + 0x1C0]

ISIL:
	001 And W31, W6, 1
	002 Move W8, 7
	003 Move W9, 15
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0

Method: System.Int32 cmpestro(Unity.Burst.Intrinsics.v128 a, System.Int32 la, Unity.Burst.Intrinsics.v128 b, System.Int32 lb, System.Int32 imm8)

Disassembly:
	0x03732728 RET
	0x0373272C STR X1, [X0 + 0x1C0]
	0x03732730 RET
	0x03732734 LDR X0, [X0 + 0x1C8]
	0x03732738 RET
	0x0373273C STR X1, [X0 + 0x1C8]
	0x03732740 RET
	0x03732744 LDR X0, [X0 + 0x1D0]
	0x03732748 RET
	0x0373274C STR X1, [X0 + 0x1D0]
	0x03732750 RET
	0x03732754 LDR X0, [X0 + 0x1D8]
	0x03732758 RET
	0x0373275C STR X1, [X0 + 0x1D8]
	0x03732760 RET
	0x03732764 LDR X0, [X0 + 0x1E0]
	0x03732768 RET
	0x0373276C STR X1, [X0 + 0x1E0]
	0x03732770 RET
	0x03732774 LDR X0, [X0 + 0x1E8]
	0x03732778 RET
	0x0373277C STR X1, [X0 + 0x1E8]
	0x03732780 RET
	0x03732784 LDR X0, [X0 + 0x1F0]
	0x03732788 RET
	0x0373278C STR X1, [X0 + 0x1F0]
	0x03732790 RET
	0x03732794 LDR X0, [X0 + 0x1F8]
	0x03732798 RET
	0x0373279C STR X1, [X0 + 0x1F8]
	0x037327A0 RET
	0x037327A4 STP X29, X30, [X31 - 0x60]!
	0x037327A8 STP X28, X27, [X31 + 0x10]
	0x037327AC STP X26, X25, [X31 + 0x20]
	0x037327B0 STP X24, X23, [X31 + 0x30]
	0x037327B4 STP X22, X21, [X31 + 0x40]
	0x037327B8 STP X20, X19, [X31 + 0x50]
	0x037327BC ADRP X29, 0xCAE000
	0x037327C0 ADRP X28, 0xA12000
	0x037327C4 ADRP X20, 0xA12000
	0x037327C8 ADRP X27, 0xA12000
	0x037327CC ADRP X26, 0xA12000
	0x037327D0 ADRP X25, 0xA12000
	0x037327D4 ADRP X24, 0xA12000
	0x037327D8 ADRP X23, 0xA12000
	0x037327DC ADRP X22, 0xA12000
	0x037327E0 ADRP X21, 0xA12000
	0x037327E4 LDR X28, [X28 + 0xDC8]
	0x037327E8 LDR X20, [X20 + 0xDD0]
	0x037327EC LDR X27, [X27 + 0xDD8]
	0x037327F0 LDR X26, [X26 + 0xDE0]
	0x037327F4 LDRB W8, [X29 + 0xCCF]
	0x037327F8 LDR X25, [X25 + 0xDE8]
	0x037327FC LDR X24, [X24 + 0xDF0]
	0x03732800 LDR X23, [X23 + 0xDF8]
	0x03732804 LDR X22, [X22 + 0xE00]
	0x03732808 LDR X21, [X21 + 0xE08]
	0x0373280C MOV X19, X0
	0x03732810 TBNZ X8, 0x0, 0x3732888
	0x03732814 ADRP X0, 0xA12000
	0x03732818 LDR X0, [X0 + 0xDD0]
	0x0373281C BL 0x1C16CF4
	0x03732820 ADRP X0, 0xA12000
	0x03732824 LDR X0, [X0 + 0xE08]
	0x03732828 BL 0x1C16CF4
	0x0373282C ADRP X0, 0xA12000
	0x03732830 LDR X0, [X0 + 0xDF8]
	0x03732834 BL 0x1C16CF4
	0x03732838 ADRP X0, 0xA12000
	0x0373283C LDR X0, [X0 + 0xDE8]
	0x03732840 BL 0x1C16CF4
	0x03732844 ADRP X0, 0xA12000
	0x03732848 LDR X0, [X0 + 0xDC8]
	0x0373284C BL 0x1C16CF4
	0x03732850 ADRP X0, 0xA12000
	0x03732854 LDR X0, [X0 + 0xDD8]
	0x03732858 BL 0x1C16CF4
	0x0373285C ADRP X0, 0xA12000
	0x03732860 LDR X0, [X0 + 0xDE0]
	0x03732864 BL 0x1C16CF4
	0x03732868 ADRP X0, 0xA12000
	0x0373286C LDR X0, [X0 + 0xDF0]
	0x03732870 BL 0x1C16CF4
	0x03732874 ADRP X0, 0xA12000
	0x03732878 LDR X0, [X0 + 0xE00]
	0x0373287C BL 0x1C16CF4
	0x03732880 MOVZ W8, 0x1
	0x03732884 STRB W8, [X29 + 0xCCF]
	0x03732888 MOV X0, X19
	0x0373288C MOV X1, X31
	0x03732890 BL 0x37DB448
	0x03732894 LDR X1, [X28]
	0x03732898 LDR X2, [X20]
	0x0373289C MOV X0, X19
	0x037328A0 BL 0x21FC754
	0x037328A4 STR X0, [X19 + 0x1C0]
	0x037328A8 LDR X1, [X27]
	0x037328AC LDR X2, [X20]
	0x037328B0 MOV X0, X19
	0x037328B4 BL 0x21FC754
	0x037328B8 STR X0, [X19 + 0x1C8]
	0x037328BC LDR X1, [X26]
	0x037328C0 LDR X2, [X20]
	0x037328C4 MOV X0, X19
	0x037328C8 BL 0x21FC754

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X23, 0xCAF000
	011 Move W19, W6
	012 Move W20, W5
	013 Move [X31+40], X8
	014 Move W8, [X23+3265]
	015 Move W21, W2
	016 Move [X31+24], X0
	017 Move [X31+32], X1
	018 Move [X31+8], X3
	019 Move [X31+16], X4
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xA13000
	025 Move X0, [X0+3464]
	026 Call 0x1C17CF4
	027 Move X0, 0xA13000
	028 Move X0, [X0+3472]
	029 Call 0x1C17CF4
	030 Move X0, 0xA13000
	031 Move X0, [X0+3480]
	032 Call 0x1C17CF4
	033 Move X0, 0xA13000
	034 Move X0, [X0+3488]
	035 Call 0x1C17CF4
	036 Move X0, 0x9EB000
	037 Move X0, [X0+2712]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3265], W8
	041 Move X8, 0x9EB000
	042 Move X8, [X8+2712]
	043 Move TEMP, X19
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {66}
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfEqual {85}
	051 Move TEMP, X19
	052 And TEMP, TEMP, 2
	053 Compare TEMP, 2
	054 JumpIfEqual {90}
	055 Move X8, 0xA13000
	056 Move X8, [X8+3464]
	057 Add X0, X31, 24
	058 Add X2, X31, 8
	059 Move W4, 16
	060 Move X7, [X8]
	061 Move W6, 0xFFFF
	062 Move W1, W21
	063 Move W3, W20
	064 Move W5, W19
	065 Call 0x22BA088, X0, X1, X2, X3, X4, X5, X6
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfEqual {101}
	070 Move TEMP, X19
	071 And TEMP, TEMP, 2
	072 Compare TEMP, 2
	073 JumpIfEqual {106}
	074 Move X8, 0xA13000
	075 Move X8, [X8+3488]
	076 Add X0, X31, 24
	077 Add X2, X31, 8
	078 Move W4, 8
	079 Move X7, [X8]
	080 Move W6, 255
	081 Move W1, W21
	082 Move W3, W20
	083 Move W5, W19
	084 Call Sse4_2.ComputeStrCmpIntRes2, X0, X1, X2, X3, X4, X5, X6
	085 Call 0x1C17DFC
	086 Move TEMP, X19
	087 And TEMP, TEMP, 2
	088 Compare TEMP, 2
	089 JumpIfNotEqual {55}
	090 Move X8, 0xA13000
	091 Move X8, [X8+3480]
	092 Add X0, X31, 24
	093 Add X2, X31, 8
	094 Move W4, 16
	095 Move X7, [X8]
	096 Move W6, 0xFFFF
	097 Move W1, W21
	098 Move W3, W20
	099 Move W5, W19
	100 Call Sse4_2.ComputeStrCmpIntRes2, X0, X1, X2, X3, X4, X5, X6
	101 Call 0x1C17DFC
	102 Move TEMP, X19
	103 And TEMP, TEMP, 2
	104 Compare TEMP, 2
	105 JumpIfNotEqual {74}
	106 Move X8, 0xA13000
	107 Move X8, [X8+3472]
	108 Add X0, X31, 24
	109 Add X2, X31, 8
	110 Move W4, 8
	111 Move X7, [X8]
	112 Move W6, 255
	113 Move W1, W21
	114 Move W3, W20
	115 Move W5, W19
	116 Call Sse4_2.ComputeStrCmpIntRes2, X0, X1, X2, X3, X4, X5, X6
	117 Move X8, [X22+40]
	118 Move X9, [X31+40]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X20, [X31+80]
	121 Move X19, [X31+88]
	122 Move X22, [X31+64]
	123 Move X21, [X31+72]
	124 Move X30, [X31+48]
	125 Move X23, [X31+56]
	126 And W0, W0, 1
	127 Add X31, X31, 96
	128 Return X0
	129 Call 0x3EB2B20

Method: System.Int32 cmpestra(Unity.Burst.Intrinsics.v128 a, System.Int32 la, Unity.Burst.Intrinsics.v128 b, System.Int32 lb, System.Int32 imm8)

Disassembly:
	0x037328CC STR X0, [X19 + 0x1D0]
	0x037328D0 LDR X1, [X25]
	0x037328D4 LDR X2, [X20]
	0x037328D8 MOV X0, X19
	0x037328DC BL 0x21FC754
	0x037328E0 STR X0, [X19 + 0x1D8]
	0x037328E4 LDR X1, [X24]
	0x037328E8 LDR X2, [X20]
	0x037328EC MOV X0, X19
	0x037328F0 BL 0x21FC754
	0x037328F4 STR X0, [X19 + 0x1E0]
	0x037328F8 LDR X1, [X23]
	0x037328FC LDR X2, [X20]
	0x03732900 MOV X0, X19
	0x03732904 BL 0x21FC754
	0x03732908 STR X0, [X19 + 0x1E8]
	0x0373290C LDR X1, [X22]
	0x03732910 LDR X2, [X20]
	0x03732914 MOV X0, X19
	0x03732918 BL 0x21FC754
	0x0373291C STR X0, [X19 + 0x1F0]
	0x03732920 LDR X1, [X21]
	0x03732924 LDR X2, [X20]
	0x03732928 MOV X0, X19
	0x0373292C BL 0x21FC754
	0x03732930 STR X0, [X19 + 0x1F8]
	0x03732934 LDP X20, X19, [X31 + 0x50]
	0x03732938 LDP X22, X21, [X31 + 0x40]
	0x0373293C LDP X24, X23, [X31 + 0x30]
	0x03732940 LDP X26, X25, [X31 + 0x20]
	0x03732944 LDP X28, X27, [X31 + 0x10]
	0x03732948 LDP X29, X30, [X31], #0x60
	0x0373294C RET
	0x03732950 MOV X1, X31
	0x03732954 B 0x37DB5B8
	0x03732958 LDR X0, [X0 + 0x190]
	0x0373295C RET
	0x03732960 STR X1, [X0 + 0x190]
	0x03732964 RET
	0x03732968 LDR X0, [X0 + 0x198]
	0x0373296C RET
	0x03732970 STR X1, [X0 + 0x198]
	0x03732974 RET
	0x03732978 LDR X0, [X0 + 0x1A0]
	0x0373297C RET
	0x03732980 STR X1, [X0 + 0x1A0]
	0x03732984 RET
	0x03732988 LDR X0, [X0 + 0x1A8]
	0x0373298C RET

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0xCAF000
	012 Move X26, 0x9EB000
	013 Move W8, [X27+3266]
	014 Move X26, [X26+2712]
	015 Move W20, W6
	016 Move W19, W5
	017 Move X21, X4
	018 Move X22, X3
	019 Move W23, W2
	020 Move X24, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x9EB000
	027 Move X0, [X0+2712]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+3266], W8
	031 Move X0, [X26]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X25
	037 Move X1, X24
	038 Move W2, W23
	039 Move X3, X22
	040 Move X4, X21
	041 Move W5, W19
	042 Move W6, W20
	043 Call Sse4_2.cmpestrc, X0, X1, X2, X3, X4
	044 And W31, W20, 1
	045 Move W8, 7
	046 Move W9, 15
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X24, [X31+32]
	054 Move X23, [X31+40]
	055 Move X26, [X31+16]
	056 Move X25, [X31+24]
	057 NotImplemented "Instruction CSET not yet implemented."
	058 And W9, W0, 1
	059 Or W8, W9, W8
	060 Xor W0, W8, 1
	061 Move X30, [X31+80]
	062 Move X27, [X31+88]
	063 Return X0

Method: Unity.Burst.Intrinsics.v128 cmpgt_epi64(Unity.Burst.Intrinsics.v128 val1, Unity.Burst.Intrinsics.v128 val2)

Disassembly:
	0x03732990 STR X1, [X0 + 0x1A8]
	0x03732994 RET
	0x03732998 LDR X0, [X0 + 0x1B0]
	0x0373299C RET
	0x037329A0 STR X1, [X0 + 0x1B0]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSINV not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSINV not yet implemented."
	005 Return X0

Method: System.UInt32 crc32_u32(System.UInt32 crc, System.UInt32 v)

Disassembly:
	0x037329A4 RET
	0x037329A8 LDR X0, [X0 + 0x1B8]
	0x037329AC RET
	0x037329B0 STR X1, [X0 + 0x1B8]
	0x037329B4 RET
	0x037329B8 LDR X0, [X0 + 0x1C0]
	0x037329BC RET
	0x037329C0 STR X1, [X0 + 0x1C0]
	0x037329C4 RET
	0x037329C8 LDR X0, [X0 + 0x1C8]
	0x037329CC RET
	0x037329D0 STR X1, [X0 + 0x1C8]
	0x037329D4 RET
	0x037329D8 LDR X0, [X0 + 0x1D0]
	0x037329DC RET
	0x037329E0 STR X1, [X0 + 0x1D0]
	0x037329E4 RET
	0x037329E8 LDR X0, [X0 + 0x1D8]
	0x037329EC RET
	0x037329F0 STR X1, [X0 + 0x1D8]
	0x037329F4 RET
	0x037329F8 LDR X0, [X0 + 0x1E0]
	0x037329FC RET
	0x03732A00 STR X1, [X0 + 0x1E0]
	0x03732A04 RET
	0x03732A08 STP X29, X30, [X31 - 0x60]!
	0x03732A0C STP X28, X27, [X31 + 0x10]
	0x03732A10 STP X26, X25, [X31 + 0x20]
	0x03732A14 STP X24, X23, [X31 + 0x30]
	0x03732A18 STP X22, X21, [X31 + 0x40]
	0x03732A1C STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCAF000
	007 Move X22, 0x9EB000
	008 Move W8, [X21+3267]
	009 Move X22, [X22+2712]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9EB000
	017 Move X0, [X0+2712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3267], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move W1, W19
	028 Call Sse4_2.crc32_u8, X0, X1
	029 Move W1, W19
	030 ShiftRight W1, 8
	031 And W1, W1, 0x7FFFFFFF
	032 Call Sse4_2.crc32_u8, X0, X1
	033 Move W1, W19
	034 ShiftRight W1, 16
	035 And W1, W1, 0x7FFFFFFF
	036 Call Sse4_2.crc32_u8, X0, X1
	037 Move W1, W19
	038 ShiftRight W1, 24
	039 And W1, W1, 0x7FFFFFFF
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]

Method: System.UInt32 crc32_u8(System.UInt32 crc, System.Byte v)

Disassembly:
	0x03732A20 ADRP X28, 0xCAE000
	0x03732A24 ADRP X27, 0xA12000
	0x03732A28 ADRP X24, 0xA12000
	0x03732A2C ADRP X25, 0xA12000
	0x03732A30 ADRP X22, 0xA12000
	0x03732A34 ADRP X26, 0xA12000
	0x03732A38 ADRP X21, 0xA12000
	0x03732A3C ADRP X29, 0xA12000
	0x03732A40 ADRP X23, 0xA12000
	0x03732A44 ADRP X20, 0xA12000
	0x03732A48 LDR X27, [X27 + 0xDC8]
	0x03732A4C LDR X24, [X24 + 0xDD0]
	0x03732A50 LDR X25, [X25 + 0xDD8]
	0x03732A54 LDR X22, [X22 + 0xE10]
	0x03732A58 LDR X26, [X26 + 0xE18]
	0x03732A5C LDR X21, [X21 + 0xE20]
	0x03732A60 LDR X29, [X29 + 0xE28]
	0x03732A64 LDRB W8, [X28 + 0xCD0]
	0x03732A68 LDR X23, [X23 + 0xE30]
	0x03732A6C LDR X20, [X20 + 0xE38]
	0x03732A70 MOV X19, X0
	0x03732A74 TBNZ X8, 0x0, 0x3732B34
	0x03732A78 ADRP X0, 0xA12000
	0x03732A7C LDR X0, [X0 + 0xE30]
	0x03732A80 BL 0x1C16CF4
	0x03732A84 ADRP X0, 0xA12000
	0x03732A88 LDR X0, [X0 + 0xE18]
	0x03732A8C BL 0x1C16CF4
	0x03732A90 ADRP X0, 0xA12000
	0x03732A94 LDR X0, [X0 + 0xE38]
	0x03732A98 BL 0x1C16CF4
	0x03732A9C ADRP X0, 0xA12000
	0x03732AA0 LDR X0, [X0 + 0xDD0]
	0x03732AA4 BL 0x1C16CF4
	0x03732AA8 ADRP X0, 0xA12000
	0x03732AAC LDR X0, [X0 + 0xE20]
	0x03732AB0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCAF000
	007 Move X21, 0x9EB000
	008 Move W8, [X22+3268]
	009 Move X21, [X21+2712]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9EB000
	017 Move X0, [X0+2712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3268], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X8, [X8]
	029 Compare X8, 0
	030 JumpIfEqual {44}
	031 Move W10, [X8+24]
	032 Xor W9, W19, W20
	033 And W9, W9, 255
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, W9
	036 Move W8, [X8+32]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Xor W0, W8, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return X0
	044 Call 0x1C17F20
	045 Call 0x1C17F28

Method: System.UInt32 crc32_u16(System.UInt32 crc, System.UInt16 v)

Disassembly:
	0x03732AB4 ADRP X0, 0x9EA000
	0x03732AB8 LDR X0, [X0 + 0xEA8]
	0x03732ABC BL 0x1C16CF4
	0x03732AC0 ADRP X0, 0xA12000
	0x03732AC4 LDR X0, [X0 + 0xDC8]
	0x03732AC8 BL 0x1C16CF4
	0x03732ACC ADRP X0, 0xA12000
	0x03732AD0 LDR X0, [X0 + 0xE40]
	0x03732AD4 BL 0x1C16CF4
	0x03732AD8 ADRP X0, 0xA12000
	0x03732ADC LDR X0, [X0 + 0xDD8]
	0x03732AE0 BL 0x1C16CF4
	0x03732AE4 ADRP X0, 0x9E9000
	0x03732AE8 LDR X0, [X0 + 0x118]
	0x03732AEC BL 0x1C16CF4
	0x03732AF0 ADRP X0, 0xA12000
	0x03732AF4 LDR X0, [X0 + 0xE28]
	0x03732AF8 BL 0x1C16CF4
	0x03732AFC ADRP X0, 0x9E9000
	0x03732B00 LDR X0, [X0 + 0x3B0]
	0x03732B04 BL 0x1C16CF4
	0x03732B08 ADRP X0, 0xA12000
	0x03732B0C LDR X0, [X0 + 0xE48]
	0x03732B10 BL 0x1C16CF4
	0x03732B14 ADRP X0, 0x9E9000
	0x03732B18 LDR X0, [X0 + 0x138]
	0x03732B1C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCAF000
	007 Move X21, 0x9EB000
	008 Move W8, [X22+3269]
	009 Move X21, [X21+2712]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9EB000
	017 Move X0, [X0+2712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3269], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move W1, W19
	028 Call Sse4_2.crc32_u8, X0, X1
	029 Move W1, W19
	030 ShiftRight W1, 8
	031 And W1, W1, 0x7FFF
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call Sse4_2.crc32_u8, X0, X1
	038 Return X0

Method: System.UInt64 crc32_u64(System.UInt64 crc_ul, System.Int64 v)

Disassembly:
	0x03732B20 ADRP X0, 0xA12000
	0x03732B24 LDR X0, [X0 + 0xE10]
	0x03732B28 BL 0x1C16CF4
	0x03732B2C MOVZ W8, 0x1
	0x03732B30 STRB W8, [X28 + 0xCD0]
	0x03732B34 MOV X0, X19
	0x03732B38 MOV X1, X31
	0x03732B3C BL 0x37DB700
	0x03732B40 LDR X1, [X27]
	0x03732B44 LDR X2, [X24]
	0x03732B48 MOV X0, X19
	0x03732B4C BL 0x21FC754
	0x03732B50 STR X0, [X19 + 0x190]
	0x03732B54 LDR X1, [X25]
	0x03732B58 LDR X2, [X24]
	0x03732B5C MOV X0, X19
	0x03732B60 BL 0x21FC754
	0x03732B64 STR X0, [X19 + 0x198]
	0x03732B68 LDR X1, [X22]
	0x03732B6C LDR X2, [X26]
	0x03732B70 MOV X0, X19
	0x03732B74 BL 0x21FC754
	0x03732B78 STR X0, [X19 + 0x1A0]
	0x03732B7C LDR X1, [X21]
	0x03732B80 LDR X2, [X26]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCAF000
	007 Move X22, 0x9EB000
	008 Move W8, [X21+3270]
	009 Move X22, [X22+2712]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9EB000
	017 Move X0, [X0+2712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3270], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]

Method: System.UInt64 crc32_u64(System.UInt64 crc_ul, System.UInt64 v)

Disassembly:
	0x03732B84 MOV X0, X19
	0x03732B88 BL 0x21FC754
	0x03732B8C STR X0, [X19 + 0x1A8]
	0x03732B90 LDR X1, [X29]
	0x03732B94 LDR X2, [X26]
	0x03732B98 MOV X0, X19
	0x03732B9C BL 0x21FC754
	0x03732BA0 STR X0, [X19 + 0x1B0]
	0x03732BA4 ADRP X8, 0xA12000
	0x03732BA8 LDR X8, [X8 + 0xE48]
	0x03732BAC LDR X2, [X26]
	0x03732BB0 MOV X0, X19
	0x03732BB4 LDR X1, [X8]
	0x03732BB8 BL 0x21FC754
	0x03732BBC STR X0, [X19 + 0x1B8]
	0x03732BC0 ADRP X8, 0x9EA000
	0x03732BC4 LDR X8, [X8 + 0xEA8]
	0x03732BC8 LDR X2, [X26]
	0x03732BCC MOV X0, X19
	0x03732BD0 LDR X1, [X8]
	0x03732BD4 BL 0x21FC754
	0x03732BD8 STR X0, [X19 + 0x1C0]
	0x03732BDC ADRP X8, 0x9E9000
	0x03732BE0 LDR X8, [X8 + 0x138]
	0x03732BE4 LDR X2, [X23]
	0x03732BE8 MOV X0, X19
	0x03732BEC LDR X1, [X8]
	0x03732BF0 BL 0x21FC754
	0x03732BF4 STR X0, [X19 + 0x1C8]
	0x03732BF8 ADRP X8, 0x9E9000
	0x03732BFC LDR X8, [X8 + 0x118]
	0x03732C00 LDR X2, [X23]
	0x03732C04 MOV X0, X19
	0x03732C08 LDR X1, [X8]
	0x03732C0C BL 0x21FC754
	0x03732C10 STR X0, [X19 + 0x1D0]
	0x03732C14 ADRP X8, 0xA12000
	0x03732C18 LDR X8, [X8 + 0xE40]
	0x03732C1C LDR X2, [X20]
	0x03732C20 MOV X0, X19
	0x03732C24 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCAF000
	007 Move X22, 0x9EB000
	008 Move W8, [X21+3271]
	009 Move X22, [X22+2712]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x9EB000
	017 Move X0, [X0+2712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3271], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move W1, W19
	028 Call Sse4_2.crc32_u8, X0, X1
	029 Move X1, X19
	030 ShiftRight X1, 8
	031 And X1, X1, 0x7FFFFFFF
	032 Call Sse4_2.crc32_u8, X0, X1
	033 Move X1, X19
	034 ShiftRight X1, 16
	035 And X1, X1, 0x7FFFFFFF
	036 Call Sse4_2.crc32_u8, X0, X1
	037 Move X1, X19
	038 ShiftRight X1, 24
	039 And X1, X1, 0x7FFFFFFF
	040 Call Sse4_2.crc32_u8, X0, X1
	041 Move X1, X19
	042 ShiftRight X1, 32
	043 And X1, X1, 0x7FFFFFFF
	044 Call Sse4_2.crc32_u8, X0, X1
	045 Move X1, X19
	046 ShiftRight X1, 40
	047 And X1, X1, 0x7FFFFFFF
	048 Call Sse4_2.crc32_u8, X0, X1
	049 Move X1, X19
	050 ShiftRight X1, 48
	051 And X1, X1, 0x7FFFFFFF
	052 Call Sse4_2.crc32_u8, X0, X1
	053 Move X1, X19
	054 ShiftRight X1, 56
	055 And X1, X1, 0x7FFFFFFF
	056 Call Sse4_2.crc32_u8, X0, X1
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move W0, W0
	062 Move X30, [X31+48]
	063 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03732C28 BL 0x21FC754
	0x03732C2C STR X0, [X19 + 0x1D8]
	0x03732C30 ADRP X8, 0x9E9000
	0x03732C34 LDR X8, [X8 + 0x3B0]
	0x03732C38 LDR X2, [X20]
	0x03732C3C MOV X0, X19
	0x03732C40 LDR X1, [X8]
	0x03732C44 BL 0x21FC754
	0x03732C48 STR X0, [X19 + 0x1E0]
	0x03732C4C LDP X20, X19, [X31 + 0x50]
	0x03732C50 LDP X22, X21, [X31 + 0x40]
	0x03732C54 LDP X24, X23, [X31 + 0x30]
	0x03732C58 LDP X26, X25, [X31 + 0x20]
	0x03732C5C LDP X28, X27, [X31 + 0x10]
	0x03732C60 LDP X29, X30, [X31], #0x60
	0x03732C64 RET
	0x03732C68 MOV X1, X31
	0x03732C6C B 0x37DB840
	0x03732C70 LDR X0, [X0 + 0x190]
	0x03732C74 RET
	0x03732C78 STR X1, [X0 + 0x190]
	0x03732C7C RET
	0x03732C80 LDR X0, [X0 + 0x198]
	0x03732C84 RET
	0x03732C88 STR X1, [X0 + 0x198]
	0x03732C8C RET
	0x03732C90 LDR X0, [X0 + 0x1A0]
	0x03732C94 RET
	0x03732C98 STR X1, [X0 + 0x1A0]
	0x03732C9C RET
	0x03732CA0 LDR X0, [X0 + 0x1A8]
	0x03732CA4 RET
	0x03732CA8 STR X1, [X0 + 0x1A8]
	0x03732CAC RET
	0x03732CB0 LDR X0, [X0 + 0x1B0]
	0x03732CB4 RET
	0x03732CB8 STR X1, [X0 + 0x1B0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCAF000
	007 Move X22, 0x9EB000
	008 Move X19, 0xA13000
	009 Move X20, 0x9EB000
	010 Move W8, [X21+3272]
	011 Move X22, [X22+3336]
	012 Move X19, [X19+3496]
	013 Move X20, [X20+2712]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x9EB000
	019 Move X0, [X0+2712]
	020 Call 0x1C17CF4
	021 Move X0, 0xA13000
	022 Move X0, [X0+3496]
	023 Call 0x1C17CF4
	024 Move X0, 0x9EB000
	025 Move X0, [X0+3336]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3272], W8
	029 Move X0, [X22]
	030 Move W1, 256
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

