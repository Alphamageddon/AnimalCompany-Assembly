Type: Unity.Burst.Intrinsics.X86/Avx2

Method: System.Boolean get_IsAvx2Supported()

Disassembly:
	0x0372520C MOV X4, X31
	0x03725210 MOV X21, X8

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 mm256_movemask_epi8(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03725214 BL 0x372BE2C
	0x03725218 MOV X22, X0
	0x0372521C LDP X0, X8, [X20 + 0x10]
	0x03725220 LDP X2, X3, [X19 + 0x10]
	0x03725224 MOV X19, X1
	0x03725228 MOV X4, X31
	0x0372522C MOV X1, X8
	0x03725230 BL 0x372BE2C
	0x03725234 STP X22, X19, [X21]
	0x03725238 STP X0, X1, [X21 + 0x10]
	0x0372523C LDP X20, X19, [X31 + 0x20]
	0x03725240 LDP X22, X21, [X31 + 0x10]
	0x03725244 LDR X30, [X31], #0x30

ISIL:
	001 Move X8, X0
	002 Move X9, X31
	003 Move W0, W31
	004 Move W10, 1
	005 Move W11, [X8]
	006 Add X9, X9, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W11, W11
	009 ShiftRight W11, 7
	010 And W11, W11, 0x7FFFFFFF
	011 Multiply W11, W10, W11
	012 Or W0, W11, W0
	013 Move W10, W10
	014 ShiftRight W10, 31
	015 And W10, W10, 0x3FFFFFFF
	016 Return X0

Method: System.Int32 mm256_extract_epi8(Unity.Burst.Intrinsics.v256 a, System.Int32 index)

Disassembly:
	0x03725248 RET
	0x0372524C STR X30, [X31 - 0x30]!
	0x03725250 STP X22, X21, [X31 + 0x10]

ISIL:
	001 And X8, X1, 31
	002 Move W0, [X8]
	003 Return X0

Method: System.Int32 mm256_extract_epi16(Unity.Burst.Intrinsics.v256 a, System.Int32 index)

Disassembly:
	0x03725254 STP X20, X19, [X31 + 0x20]
	0x03725258 MOV X19, X1
	0x0372525C MOV X20, X0
	0x03725260 LDR X0, [X0]

ISIL:
	001 Move W8, W1
	002 ShiftRight W8, 31
	003 And W8, W8, 0x3FFFFFFF
	004 And X8, X8, 31
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 Return X0

Method: System.Double mm256_cvtsd_f64(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03725264 LDR X1, [X20 + 0x8]
	0x03725268 LDP X2, X3, [X19]

ISIL:
	001 Move V0, [X0]
	002 Return V0

Method: System.Int32 mm256_cvtsi256_si32(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x0372526C MOV X4, X31
	0x03725270 MOV X21, X8

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Int64 mm256_cvtsi256_si64(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03725274 BL 0x372BEB4
	0x03725278 MOV X22, X0

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmpeq_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372527C LDP X0, X8, [X20 + 0x10]
	0x03725280 LDP X2, X3, [X19 + 0x10]
	0x03725284 MOV X19, X1
	0x03725288 MOV X4, X31
	0x0372528C MOV X1, X8
	0x03725290 BL 0x372BEB4
	0x03725294 STP X22, X19, [X21]
	0x03725298 STP X0, X1, [X21 + 0x10]
	0x0372529C LDP X20, X19, [X31 + 0x20]
	0x037252A0 LDP X22, X21, [X31 + 0x10]
	0x037252A4 LDR X30, [X31], #0x30
	0x037252A8 RET
	0x037252AC STR X30, [X31 - 0x30]!
	0x037252B0 STP X22, X21, [X31 + 0x10]
	0x037252B4 STP X20, X19, [X31 + 0x20]
	0x037252B8 MOV X19, X1
	0x037252BC MOV X20, X0
	0x037252C0 LDR X0, [X0]
	0x037252C4 LDR X1, [X20 + 0x8]
	0x037252C8 LDP X2, X3, [X19]
	0x037252CC MOV X4, X31
	0x037252D0 MOV X21, X8
	0x037252D4 BL 0x372B40C
	0x037252D8 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.cmpeq_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.cmpeq_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmpeq_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037252DC LDP X0, X8, [X20 + 0x10]
	0x037252E0 LDP X2, X3, [X19 + 0x10]
	0x037252E4 MOV X19, X1
	0x037252E8 MOV X4, X31
	0x037252EC MOV X1, X8
	0x037252F0 BL 0x372B40C
	0x037252F4 STP X22, X19, [X21]
	0x037252F8 STP X0, X1, [X21 + 0x10]
	0x037252FC LDP X20, X19, [X31 + 0x20]
	0x03725300 LDP X22, X21, [X31 + 0x10]
	0x03725304 LDR X30, [X31], #0x30
	0x03725308 RET
	0x0372530C STR X30, [X31 - 0x30]!
	0x03725310 STP X22, X21, [X31 + 0x10]
	0x03725314 STP X20, X19, [X31 + 0x20]
	0x03725318 MOV X19, X1
	0x0372531C MOV X20, X0
	0x03725320 LDR X0, [X0]
	0x03725324 LDR X1, [X20 + 0x8]
	0x03725328 LDP X2, X3, [X19]
	0x0372532C MOV X4, X31
	0x03725330 MOV X21, X8
	0x03725334 BL 0x372B484
	0x03725338 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.cmpeq_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.cmpeq_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmpeq_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372533C LDP X0, X8, [X20 + 0x10]
	0x03725340 LDP X2, X3, [X19 + 0x10]
	0x03725344 MOV X19, X1
	0x03725348 MOV X4, X31
	0x0372534C MOV X1, X8
	0x03725350 BL 0x372B484
	0x03725354 STP X22, X19, [X21]
	0x03725358 STP X0, X1, [X21 + 0x10]
	0x0372535C LDP X20, X19, [X31 + 0x20]
	0x03725360 LDP X22, X21, [X31 + 0x10]
	0x03725364 LDR X30, [X31], #0x30
	0x03725368 RET
	0x0372536C STR X30, [X31 - 0x30]!
	0x03725370 STP X22, X21, [X31 + 0x10]
	0x03725374 STP X20, X19, [X31 + 0x20]
	0x03725378 MOV X19, X1
	0x0372537C MOV X20, X0
	0x03725380 LDR X0, [X0]
	0x03725384 LDR X1, [X20 + 0x8]
	0x03725388 LDP X2, X3, [X19]
	0x0372538C MOV X4, X31
	0x03725390 MOV X21, X8
	0x03725394 BL 0x3732040
	0x03725398 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.cmpeq_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.cmpeq_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmpeq_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372539C LDP X0, X8, [X20 + 0x10]
	0x037253A0 LDP X2, X3, [X19 + 0x10]
	0x037253A4 MOV X19, X1
	0x037253A8 MOV X4, X31
	0x037253AC MOV X1, X8
	0x037253B0 BL 0x3732040
	0x037253B4 STP X22, X19, [X21]
	0x037253B8 STP X0, X1, [X21 + 0x10]
	0x037253BC LDP X20, X19, [X31 + 0x20]
	0x037253C0 LDP X22, X21, [X31 + 0x10]
	0x037253C4 LDR X30, [X31], #0x30
	0x037253C8 RET
	0x037253CC STR X30, [X31 - 0x30]!
	0x037253D0 STP X22, X21, [X31 + 0x10]
	0x037253D4 STP X20, X19, [X31 + 0x20]
	0x037253D8 MOV X19, X1
	0x037253DC MOV X20, X0
	0x037253E0 LDR X0, [X0]
	0x037253E4 LDR X1, [X20 + 0x8]
	0x037253E8 LDP X2, X3, [X19]
	0x037253EC MOV X4, X31
	0x037253F0 MOV X21, X8
	0x037253F4 BL 0x3732178
	0x037253F8 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.cmpeq_epi64, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.cmpeq_epi64, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmpgt_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037253FC LDP X0, X8, [X20 + 0x10]
	0x03725400 LDP X2, X3, [X19 + 0x10]
	0x03725404 MOV X19, X1
	0x03725408 MOV X4, X31
	0x0372540C MOV X1, X8
	0x03725410 BL 0x3732178
	0x03725414 STP X22, X19, [X21]
	0x03725418 STP X0, X1, [X21 + 0x10]
	0x0372541C LDP X20, X19, [X31 + 0x20]
	0x03725420 LDP X22, X21, [X31 + 0x10]
	0x03725424 LDR X30, [X31], #0x30
	0x03725428 RET
	0x0372542C STR X30, [X31 - 0x30]!
	0x03725430 STP X22, X21, [X31 + 0x10]
	0x03725434 STP X20, X19, [X31 + 0x20]
	0x03725438 MOV X19, X1
	0x0372543C MOV X20, X0
	0x03725440 LDR X0, [X0]
	0x03725444 LDR X1, [X20 + 0x8]
	0x03725448 LDP X2, X3, [X19]
	0x0372544C MOV X4, X31
	0x03725450 MOV X21, X8
	0x03725454 BL 0x37320CC
	0x03725458 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.cmpgt_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.cmpgt_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmpgt_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372545C LDP X0, X8, [X20 + 0x10]
	0x03725460 LDP X2, X3, [X19 + 0x10]
	0x03725464 MOV X19, X1
	0x03725468 MOV X4, X31
	0x0372546C MOV X1, X8
	0x03725470 BL 0x37320CC
	0x03725474 STP X22, X19, [X21]
	0x03725478 STP X0, X1, [X21 + 0x10]
	0x0372547C LDP X20, X19, [X31 + 0x20]
	0x03725480 LDP X22, X21, [X31 + 0x10]
	0x03725484 LDR X30, [X31], #0x30
	0x03725488 RET
	0x0372548C STR X30, [X31 - 0x30]!
	0x03725490 STP X22, X21, [X31 + 0x10]
	0x03725494 STP X20, X19, [X31 + 0x20]
	0x03725498 MOV X19, X1
	0x0372549C MOV X20, X0
	0x037254A0 LDR X0, [X0]
	0x037254A4 LDR X1, [X20 + 0x8]
	0x037254A8 LDP X2, X3, [X19]
	0x037254AC MOV X4, X31
	0x037254B0 MOV X21, X8
	0x037254B4 BL 0x37321A4
	0x037254B8 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.cmpgt_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.cmpgt_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmpgt_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037254BC LDP X0, X8, [X20 + 0x10]
	0x037254C0 LDP X2, X3, [X19 + 0x10]
	0x037254C4 MOV X19, X1
	0x037254C8 MOV X4, X31
	0x037254CC MOV X1, X8
	0x037254D0 BL 0x37321A4
	0x037254D4 STP X22, X19, [X21]
	0x037254D8 STP X0, X1, [X21 + 0x10]
	0x037254DC LDP X20, X19, [X31 + 0x20]
	0x037254E0 LDP X22, X21, [X31 + 0x10]
	0x037254E4 LDR X30, [X31], #0x30
	0x037254E8 RET
	0x037254EC STR X30, [X31 - 0x30]!
	0x037254F0 STP X22, X21, [X31 + 0x10]
	0x037254F4 STP X20, X19, [X31 + 0x20]
	0x037254F8 MOV X19, X1
	0x037254FC MOV X20, X0
	0x03725500 LDR X0, [X0]
	0x03725504 LDR X1, [X20 + 0x8]
	0x03725508 LDP X2, X3, [X19]
	0x0372550C MOV X4, X31
	0x03725510 MOV X21, X8
	0x03725514 BL 0x37322DC
	0x03725518 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.cmpgt_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.cmpgt_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cmpgt_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372551C LDP X0, X8, [X20 + 0x10]
	0x03725520 LDP X2, X3, [X19 + 0x10]
	0x03725524 MOV X19, X1
	0x03725528 MOV X4, X31
	0x0372552C MOV X1, X8
	0x03725530 BL 0x37322DC
	0x03725534 STP X22, X19, [X21]
	0x03725538 STP X0, X1, [X21 + 0x10]
	0x0372553C LDP X20, X19, [X31 + 0x20]
	0x03725540 LDP X22, X21, [X31 + 0x10]
	0x03725544 LDR X30, [X31], #0x30
	0x03725548 RET
	0x0372554C STR X30, [X31 - 0x30]!
	0x03725550 STP X22, X21, [X31 + 0x10]
	0x03725554 STP X20, X19, [X31 + 0x20]
	0x03725558 MOV X19, X1
	0x0372555C MOV X20, X0
	0x03725560 LDR X0, [X0]
	0x03725564 LDR X1, [X20 + 0x8]
	0x03725568 LDP X2, X3, [X19]
	0x0372556C MOV X4, X31
	0x03725570 MOV X21, X8
	0x03725574 BL 0x3732230
	0x03725578 MOV X22, X0
	0x0372557C LDP X0, X8, [X20 + 0x10]
	0x03725580 LDP X2, X3, [X19 + 0x10]
	0x03725584 MOV X19, X1
	0x03725588 MOV X4, X31
	0x0372558C MOV X1, X8
	0x03725590 BL 0x3732230
	0x03725594 STP X22, X19, [X21]
	0x03725598 STP X0, X1, [X21 + 0x10]
	0x0372559C LDP X20, X19, [X31 + 0x20]
	0x037255A0 LDP X22, X21, [X31 + 0x10]
	0x037255A4 LDR X30, [X31], #0x30
	0x037255A8 RET
	0x037255AC STR X30, [X31 - 0x30]!
	0x037255B0 STP X22, X21, [X31 + 0x10]
	0x037255B4 STP X20, X19, [X31 + 0x20]
	0x037255B8 MOV X19, X1
	0x037255BC MOV X20, X0
	0x037255C0 LDR X0, [X0]
	0x037255C4 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xCBC000
	010 Move X22, 0x9F8000
	011 Move X19, X8
	012 Move W8, [X23+3161]
	013 Move X22, [X22+2712]
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x9F8000
	021 Move X0, [X0+2712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3161], W8
	025 Move X0, [X22]
	026 Move X25, [X21]
	027 Move X24, [X21+8]
	028 Move X23, [X20]
	029 Move X22, [X20+8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X25
	035 Move X1, X24
	036 Move X2, X23
	037 Move X3, X22
	038 Move X4, X31
	039 Call Sse4_2.cmpgt_epi64, X0, X1
	040 Move X22, X0
	041 Move X0, [X21+16]
	042 Move X8, [X21+24]
	043 Move X2, [X20+16]
	044 Move X3, [X20+24]
	045 Move X20, X1
	046 Move X4, X31
	047 Move X1, X8
	048 Call Sse4_2.cmpgt_epi64, X0, X1
	049 Move [X19], X22
	050 Move [X19+8], X20
	051 Move [X19+16], X0
	052 Move [X19+24], X1
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Move X25, [X31+72]
	061 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_max_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037255C8 LDP X2, X3, [X19]
	0x037255CC MOV X4, X31
	0x037255D0 MOV X21, X8
	0x037255D4 BL 0x372B4FC
	0x037255D8 MOV X22, X0
	0x037255DC LDP X0, X8, [X20 + 0x10]
	0x037255E0 LDP X2, X3, [X19 + 0x10]
	0x037255E4 MOV X19, X1
	0x037255E8 MOV X4, X31
	0x037255EC MOV X1, X8
	0x037255F0 BL 0x372B4FC
	0x037255F4 STP X22, X19, [X21]
	0x037255F8 STP X0, X1, [X21 + 0x10]
	0x037255FC LDP X20, X19, [X31 + 0x20]
	0x03725600 LDP X22, X21, [X31 + 0x10]
	0x03725604 LDR X30, [X31], #0x30
	0x03725608 RET
	0x0372560C STR X30, [X31 - 0x30]!
	0x03725610 STP X22, X21, [X31 + 0x10]
	0x03725614 STP X20, X19, [X31 + 0x20]
	0x03725618 MOV X19, X1
	0x0372561C MOV X20, X0
	0x03725620 LDR X0, [X0]
	0x03725624 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.max_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.max_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_max_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725628 LDP X2, X3, [X19]
	0x0372562C MOV X4, X31
	0x03725630 MOV X21, X8
	0x03725634 BL 0x3732308
	0x03725638 MOV X22, X0
	0x0372563C LDP X0, X8, [X20 + 0x10]
	0x03725640 LDP X2, X3, [X19 + 0x10]
	0x03725644 MOV X19, X1
	0x03725648 MOV X4, X31
	0x0372564C MOV X1, X8
	0x03725650 BL 0x3732308
	0x03725654 STP X22, X19, [X21]
	0x03725658 STP X0, X1, [X21 + 0x10]
	0x0372565C LDP X20, X19, [X31 + 0x20]
	0x03725660 LDP X22, X21, [X31 + 0x10]
	0x03725664 LDR X30, [X31], #0x30
	0x03725668 RET
	0x0372566C STR X30, [X31 - 0x30]!
	0x03725670 STP X22, X21, [X31 + 0x10]
	0x03725674 STP X20, X19, [X31 + 0x20]
	0x03725678 MOV X19, X1
	0x0372567C MOV X20, X0
	0x03725680 LDR X0, [X0]
	0x03725684 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.max_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.max_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_max_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725688 LDP X2, X3, [X19]
	0x0372568C MOV X4, X31
	0x03725690 MOV X21, X8
	0x03725694 BL 0x372B8D0
	0x03725698 MOV X22, X0
	0x0372569C LDP X0, X8, [X20 + 0x10]
	0x037256A0 LDP X2, X3, [X19 + 0x10]
	0x037256A4 MOV X19, X1
	0x037256A8 MOV X4, X31
	0x037256AC MOV X1, X8
	0x037256B0 BL 0x372B8D0
	0x037256B4 STP X22, X19, [X21]
	0x037256B8 STP X0, X1, [X21 + 0x10]
	0x037256BC LDP X20, X19, [X31 + 0x20]
	0x037256C0 LDP X22, X21, [X31 + 0x10]
	0x037256C4 LDR X30, [X31], #0x30
	0x037256C8 RET
	0x037256CC STR X30, [X31 - 0x30]!
	0x037256D0 STP X22, X21, [X31 + 0x10]
	0x037256D4 STP X20, X19, [X31 + 0x20]
	0x037256D8 MOV X19, X1
	0x037256DC MOV X20, X0
	0x037256E0 LDR X0, [X0]
	0x037256E4 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.max_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.max_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_max_epu8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037256E8 LDP X2, X3, [X19]
	0x037256EC MOV X4, X31
	0x037256F0 MOV X21, X8
	0x037256F4 BL 0x372B944
	0x037256F8 MOV X22, X0
	0x037256FC LDP X0, X8, [X20 + 0x10]
	0x03725700 LDP X2, X3, [X19 + 0x10]
	0x03725704 MOV X19, X1
	0x03725708 MOV X4, X31
	0x0372570C MOV X1, X8
	0x03725710 BL 0x372B944
	0x03725714 STP X22, X19, [X21]
	0x03725718 STP X0, X1, [X21 + 0x10]
	0x0372571C LDP X20, X19, [X31 + 0x20]
	0x03725720 LDP X22, X21, [X31 + 0x10]
	0x03725724 LDR X30, [X31], #0x30
	0x03725728 RET
	0x0372572C STR X30, [X31 - 0x30]!
	0x03725730 STP X22, X21, [X31 + 0x10]
	0x03725734 STP X20, X19, [X31 + 0x20]
	0x03725738 MOV X19, X1
	0x0372573C MOV X20, X0
	0x03725740 LDR X0, [X0]
	0x03725744 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.max_epu8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.max_epu8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_max_epu16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725748 LDP X2, X3, [X19]
	0x0372574C MOV X4, X31
	0x03725750 MOV X21, X8
	0x03725754 BL 0x372B9B8
	0x03725758 MOV X22, X0
	0x0372575C LDP X0, X8, [X20 + 0x10]
	0x03725760 LDP X2, X3, [X19 + 0x10]
	0x03725764 MOV X19, X1
	0x03725768 MOV X4, X31
	0x0372576C MOV X1, X8
	0x03725770 BL 0x372B9B8
	0x03725774 STP X22, X19, [X21]
	0x03725778 STP X0, X1, [X21 + 0x10]
	0x0372577C LDP X20, X19, [X31 + 0x20]
	0x03725780 LDP X22, X21, [X31 + 0x10]
	0x03725784 LDR X30, [X31], #0x30
	0x03725788 RET
	0x0372578C STR X30, [X31 - 0x30]!
	0x03725790 STP X22, X21, [X31 + 0x10]
	0x03725794 STP X20, X19, [X31 + 0x20]
	0x03725798 MOV X19, X1
	0x0372579C MOV X20, X0
	0x037257A0 LDR X0, [X0]
	0x037257A4 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.max_epu16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.max_epu16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_max_epu32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037257A8 LDP X2, X3, [X19]
	0x037257AC MOV X4, X31
	0x037257B0 MOV X21, X8
	0x037257B4 BL 0x3730168
	0x037257B8 MOV X22, X0
	0x037257BC LDP X0, X8, [X20 + 0x10]
	0x037257C0 LDP X2, X3, [X19 + 0x10]
	0x037257C4 MOV X19, X1
	0x037257C8 MOV X4, X31
	0x037257CC MOV X1, X8
	0x037257D0 BL 0x3730168
	0x037257D4 STP X22, X19, [X21]
	0x037257D8 STP X0, X1, [X21 + 0x10]
	0x037257DC LDP X20, X19, [X31 + 0x20]
	0x037257E0 LDP X22, X21, [X31 + 0x10]
	0x037257E4 LDR X30, [X31], #0x30
	0x037257E8 RET
	0x037257EC STR X30, [X31 - 0x30]!
	0x037257F0 STP X22, X21, [X31 + 0x10]
	0x037257F4 STP X20, X19, [X31 + 0x20]
	0x037257F8 MOV X19, X1
	0x037257FC MOV X20, X0
	0x03725800 LDR X0, [X0]
	0x03725804 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.max_epu32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.max_epu32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_min_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725808 LDP X2, X3, [X19]
	0x0372580C MOV X4, X31
	0x03725810 MOV X21, X8
	0x03725814 BL 0x372BA28
	0x03725818 MOV X22, X0
	0x0372581C LDP X0, X8, [X20 + 0x10]
	0x03725820 LDP X2, X3, [X19 + 0x10]
	0x03725824 MOV X19, X1
	0x03725828 MOV X4, X31
	0x0372582C MOV X1, X8
	0x03725830 BL 0x372BA28
	0x03725834 STP X22, X19, [X21]
	0x03725838 STP X0, X1, [X21 + 0x10]
	0x0372583C LDP X20, X19, [X31 + 0x20]
	0x03725840 LDP X22, X21, [X31 + 0x10]
	0x03725844 LDR X30, [X31], #0x30
	0x03725848 RET
	0x0372584C STR X30, [X31 - 0x30]!
	0x03725850 STP X22, X21, [X31 + 0x10]
	0x03725854 STP X20, X19, [X31 + 0x20]
	0x03725858 MOV X19, X1
	0x0372585C MOV X20, X0
	0x03725860 LDR X0, [X0]
	0x03725864 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.min_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.min_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_min_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725868 LDP X2, X3, [X19]
	0x0372586C MOV X4, X31
	0x03725870 MOV X21, X8
	0x03725874 BL 0x373015C
	0x03725878 MOV X22, X0
	0x0372587C LDP X0, X8, [X20 + 0x10]
	0x03725880 LDP X2, X3, [X19 + 0x10]
	0x03725884 MOV X19, X1
	0x03725888 MOV X4, X31
	0x0372588C MOV X1, X8
	0x03725890 BL 0x373015C
	0x03725894 STP X22, X19, [X21]
	0x03725898 STP X0, X1, [X21 + 0x10]
	0x0372589C LDP X20, X19, [X31 + 0x20]
	0x037258A0 LDP X22, X21, [X31 + 0x10]
	0x037258A4 LDR X30, [X31], #0x30
	0x037258A8 RET
	0x037258AC STR X30, [X31 - 0x30]!
	0x037258B0 STP X22, X21, [X31 + 0x10]
	0x037258B4 STP X20, X19, [X31 + 0x20]
	0x037258B8 MOV X19, X1
	0x037258BC MOV X20, X0
	0x037258C0 LDR X0, [X0]
	0x037258C4 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.min_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.min_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_min_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037258C8 LDP X2, X3, [X19]
	0x037258CC MOV X4, X31
	0x037258D0 MOV X21, X8
	0x037258D4 BL 0x3732420
	0x037258D8 MOV X22, X0
	0x037258DC LDP X0, X8, [X20 + 0x10]
	0x037258E0 LDP X2, X3, [X19 + 0x10]
	0x037258E4 MOV X19, X1
	0x037258E8 MOV X4, X31
	0x037258EC MOV X1, X8
	0x037258F0 BL 0x3732420
	0x037258F4 STP X22, X19, [X21]
	0x037258F8 STP X0, X1, [X21 + 0x10]
	0x037258FC LDP X20, X19, [X31 + 0x20]
	0x03725900 LDP X22, X21, [X31 + 0x10]
	0x03725904 LDR X30, [X31], #0x30
	0x03725908 RET
	0x0372590C STR X30, [X31 - 0x30]!
	0x03725910 STP X22, X21, [X31 + 0x10]
	0x03725914 STP X20, X19, [X31 + 0x20]
	0x03725918 MOV X19, X1
	0x0372591C MOV X20, X0
	0x03725920 LDR X0, [X0]
	0x03725924 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.min_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.min_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_min_epu8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725928 LDP X2, X3, [X19]
	0x0372592C MOV X4, X31
	0x03725930 MOV X21, X8
	0x03725934 BL 0x37324A0
	0x03725938 MOV X22, X0
	0x0372593C LDP X0, X8, [X20 + 0x10]
	0x03725940 LDP X2, X3, [X19 + 0x10]
	0x03725944 MOV X19, X1
	0x03725948 MOV X4, X31
	0x0372594C MOV X1, X8
	0x03725950 BL 0x37324A0
	0x03725954 STP X22, X19, [X21]
	0x03725958 STP X0, X1, [X21 + 0x10]
	0x0372595C LDP X20, X19, [X31 + 0x20]
	0x03725960 LDP X22, X21, [X31 + 0x10]
	0x03725964 LDR X30, [X31], #0x30
	0x03725968 RET
	0x0372596C STR X30, [X31 - 0x30]!
	0x03725970 STP X22, X21, [X31 + 0x10]
	0x03725974 STP X20, X19, [X31 + 0x20]
	0x03725978 MOV X19, X1
	0x0372597C MOV X20, X0
	0x03725980 LDR X0, [X0]
	0x03725984 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.min_epu8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.min_epu8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_min_epu16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725988 LDP X2, X3, [X19]
	0x0372598C MOV X4, X31
	0x03725990 MOV X21, X8
	0x03725994 BL 0x3732520
	0x03725998 MOV X22, X0
	0x0372599C LDP X0, X8, [X20 + 0x10]
	0x037259A0 LDP X2, X3, [X19 + 0x10]
	0x037259A4 MOV X19, X1
	0x037259A8 MOV X4, X31
	0x037259AC MOV X1, X8
	0x037259B0 BL 0x3732520
	0x037259B4 STP X22, X19, [X21]
	0x037259B8 STP X0, X1, [X21 + 0x10]
	0x037259BC LDP X20, X19, [X31 + 0x20]
	0x037259C0 LDP X22, X21, [X31 + 0x10]
	0x037259C4 LDR X30, [X31], #0x30
	0x037259C8 RET
	0x037259CC STR X30, [X31 - 0x30]!
	0x037259D0 STP X22, X21, [X31 + 0x10]
	0x037259D4 STP X20, X19, [X31 + 0x20]
	0x037259D8 MOV X19, X1
	0x037259DC MOV X20, X0
	0x037259E0 LDR X0, [X0]
	0x037259E4 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.min_epu16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.min_epu16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_min_epu32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037259E8 LDP X2, X3, [X19]
	0x037259EC MOV X4, X31
	0x037259F0 MOV X21, X8
	0x037259F4 BL 0x37323A4
	0x037259F8 MOV X22, X0
	0x037259FC LDP X0, X8, [X20 + 0x10]
	0x03725A00 LDP X2, X3, [X19 + 0x10]
	0x03725A04 MOV X19, X1
	0x03725A08 MOV X4, X31
	0x03725A0C MOV X1, X8
	0x03725A10 BL 0x37323A4
	0x03725A14 STP X22, X19, [X21]
	0x03725A18 STP X0, X1, [X21 + 0x10]
	0x03725A1C LDP X20, X19, [X31 + 0x20]
	0x03725A20 LDP X22, X21, [X31 + 0x10]
	0x03725A24 LDR X30, [X31], #0x30
	0x03725A28 RET
	0x03725A2C STR X30, [X31 - 0x30]!
	0x03725A30 STP X22, X21, [X31 + 0x10]
	0x03725A34 STP X20, X19, [X31 + 0x20]
	0x03725A38 MOV X19, X1
	0x03725A3C MOV X20, X0
	0x03725A40 LDR X0, [X0]
	0x03725A44 LDR X1, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.min_epu32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.min_epu32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_and_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725A48 LDP X2, X3, [X19]
	0x03725A4C MOV X4, X31
	0x03725A50 MOV X21, X8
	0x03725A54 BL 0x372BA34
	0x03725A58 MOV X22, X0
	0x03725A5C LDP X0, X8, [X20 + 0x10]
	0x03725A60 LDP X2, X3, [X19 + 0x10]
	0x03725A64 MOV X19, X1
	0x03725A68 MOV X4, X31
	0x03725A6C MOV X1, X8
	0x03725A70 BL 0x372BA34
	0x03725A74 STP X22, X19, [X21]
	0x03725A78 STP X0, X1, [X21 + 0x10]
	0x03725A7C LDP X20, X19, [X31 + 0x20]
	0x03725A80 LDP X22, X21, [X31 + 0x10]
	0x03725A84 LDR X30, [X31], #0x30
	0x03725A88 RET
	0x03725A8C STR X30, [X31 - 0x40]!
	0x03725A90 STP X24, X23, [X31 + 0x10]
	0x03725A94 STP X22, X21, [X31 + 0x20]
	0x03725A98 STP X20, X19, [X31 + 0x30]
	0x03725A9C MOV X20, X1
	0x03725AA0 MOV X21, X0
	0x03725AA4 MOV W19, W2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.and_si128, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.and_si128, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_andnot_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725AA8 LDR X0, [X0]
	0x03725AAC LDR X1, [X21 + 0x8]
	0x03725AB0 LDP X2, X3, [X20]
	0x03725AB4 AND W4, W19, 0x7
	0x03725AB8 MOV X5, X31
	0x03725ABC MOV X22, X8
	0x03725AC0 BL 0x37307C0
	0x03725AC4 MOV X23, X0
	0x03725AC8 MOV X24, X1
	0x03725ACC LDP X0, X1, [X21 + 0x10]
	0x03725AD0 LDP X2, X3, [X20 + 0x10]
	0x03725AD4 UBFM W4, W19, 0x3, 0x5
	0x03725AD8 MOV X5, X31
	0x03725ADC BL 0x37307C0
	0x03725AE0 STP X23, X24, [X22]
	0x03725AE4 STP X0, X1, [X22 + 0x10]
	0x03725AE8 LDP X20, X19, [X31 + 0x30]
	0x03725AEC LDP X22, X21, [X31 + 0x20]
	0x03725AF0 LDP X24, X23, [X31 + 0x10]
	0x03725AF4 LDR X30, [X31], #0x40
	0x03725AF8 RET
	0x03725AFC STR X30, [X31 - 0x30]!
	0x03725B00 STP X22, X21, [X31 + 0x10]
	0x03725B04 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.andnot_si128, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.andnot_si128, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_or_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725B08 MOV X20, X0
	0x03725B0C MOV W19, W1
	0x03725B10 LDR X0, [X0]
	0x03725B14 LDR X1, [X20 + 0x8]
	0x03725B18 MOV W2, W19
	0x03725B1C MOV X3, X31
	0x03725B20 MOV X21, X8
	0x03725B24 BL 0x372BF3C
	0x03725B28 MOV X22, X0
	0x03725B2C LDP X0, X8, [X20 + 0x10]
	0x03725B30 MOV X20, X1
	0x03725B34 MOV W2, W19
	0x03725B38 MOV X3, X31
	0x03725B3C MOV X1, X8
	0x03725B40 BL 0x372BF3C
	0x03725B44 STP X22, X20, [X21]
	0x03725B48 STP X0, X1, [X21 + 0x10]
	0x03725B4C LDP X20, X19, [X31 + 0x20]
	0x03725B50 LDP X22, X21, [X31 + 0x10]
	0x03725B54 LDR X30, [X31], #0x30
	0x03725B58 RET
	0x03725B5C SUB X31, X31, 0x70
	0x03725B60 STR X30, [X31 + 0x50]
	0x03725B64 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.or_si128, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.or_si128, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_xor_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725B68 MRS X20, 0xC000
	0x03725B6C MOV X19, X8
	0x03725B70 LDR X8, [X20 + 0x28]
	0x03725B74 STR X8, [X31 + 0x48]
	0x03725B78 LDP V1, V0, [X0]
	0x03725B7C ADD X8, X31, 0x28
	0x03725B80 ADD X0, X31, 0x0
	0x03725B84 STP V1, V0, [X31]
	0x03725B88 BL 0x3725AFC
	0x03725B8C LDUR V0, [X31 + 0x38]
	0x03725B90 LDUR V1, [X31 + 0x28]
	0x03725B94 STP V1, V0, [X19]
	0x03725B98 LDR X8, [X20 + 0x28]
	0x03725B9C LDR X9, [X31 + 0x48]
	0x03725BA0 CMP X8, X9
	0x03725BA4 B.NE 0x3725BB8
	0x03725BA8 LDP X20, X19, [X31 + 0x60]
	0x03725BAC LDR X30, [X31 + 0x50]
	0x03725BB0 ADD X31, X31, 0x70
	0x03725BB4 RET
	0x03725BB8 BL 0x3EB1B20
	0x03725BBC STR X30, [X31 - 0x30]!
	0x03725BC0 STP X22, X21, [X31 + 0x10]
	0x03725BC4 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.xor_si128, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.xor_si128, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_abs_epi8(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03725BC8 MOV X20, X0
	0x03725BCC MOV W19, W1
	0x03725BD0 LDR X0, [X0]
	0x03725BD4 LDR X1, [X20 + 0x8]
	0x03725BD8 MOV W2, W19
	0x03725BDC MOV X3, X31
	0x03725BE0 MOV X21, X8
	0x03725BE4 BL 0x372C9D0
	0x03725BE8 MOV X22, X0
	0x03725BEC LDP X0, X8, [X20 + 0x10]
	0x03725BF0 MOV X20, X1
	0x03725BF4 MOV W2, W19
	0x03725BF8 MOV X3, X31
	0x03725BFC MOV X1, X8
	0x03725C00 BL 0x372C9D0
	0x03725C04 STP X22, X20, [X21]
	0x03725C08 STP X0, X1, [X21 + 0x10]
	0x03725C0C LDP X20, X19, [X31 + 0x20]
	0x03725C10 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, [X19+8]
	008 Move X2, X31
	009 Move X20, X8
	010 Call Ssse3.abs_epi8, X0
	011 Move X21, X0
	012 Move X0, [X19+16]
	013 Move X8, [X19+24]
	014 Move X19, X1
	015 Move X2, X31
	016 Move X1, X8
	017 Call Ssse3.abs_epi8, X0
	018 Move [X20], X21
	019 Move [X20+8], X19
	020 Move [X20+16], X0
	021 Move [X20+24], X1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_abs_epi16(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03725C14 LDR X30, [X31], #0x30
	0x03725C18 RET
	0x03725C1C SUB X31, X31, 0x70
	0x03725C20 STR X30, [X31 + 0x50]
	0x03725C24 STP X20, X19, [X31 + 0x60]
	0x03725C28 MRS X20, 0xC000
	0x03725C2C MOV X19, X8
	0x03725C30 LDR X8, [X20 + 0x28]
	0x03725C34 STR X8, [X31 + 0x48]
	0x03725C38 LDP V1, V0, [X0]
	0x03725C3C ADD X8, X31, 0x28
	0x03725C40 ADD X0, X31, 0x0
	0x03725C44 STP V1, V0, [X31]
	0x03725C48 BL 0x3725BBC
	0x03725C4C LDUR V0, [X31 + 0x38]
	0x03725C50 LDUR V1, [X31 + 0x28]
	0x03725C54 STP V1, V0, [X19]
	0x03725C58 LDR X8, [X20 + 0x28]
	0x03725C5C LDR X9, [X31 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, [X19+8]
	008 Move X2, X31
	009 Move X20, X8
	010 Call Ssse3.abs_epi16, X0
	011 Move X21, X0
	012 Move X0, [X19+16]
	013 Move X8, [X19+24]
	014 Move X19, X1
	015 Move X2, X31
	016 Move X1, X8
	017 Call Ssse3.abs_epi16, X0
	018 Move [X20], X21
	019 Move [X20+8], X19
	020 Move [X20+16], X0
	021 Move [X20+24], X1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_abs_epi32(Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x03725C60 CMP X8, X9
	0x03725C64 B.NE 0x3725C78
	0x03725C68 LDP X20, X19, [X31 + 0x60]
	0x03725C6C LDR X30, [X31 + 0x50]
	0x03725C70 ADD X31, X31, 0x70
	0x03725C74 RET
	0x03725C78 BL 0x3EB1B20
	0x03725C7C STP X30, X23, [X31 - 0x30]!
	0x03725C80 STP X22, X21, [X31 + 0x10]
	0x03725C84 STP X20, X19, [X31 + 0x20]
	0x03725C88 MOV X21, X0
	0x03725C8C MOV X20, X1
	0x03725C90 LDR X0, [X0]
	0x03725C94 LDR X1, [X21 + 0x8]
	0x03725C98 MOV X19, X2
	0x03725C9C MOV X2, X20
	0x03725CA0 MOV X3, X19
	0x03725CA4 MOV X4, X31
	0x03725CA8 MOV X22, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, [X19+8]
	008 Move X2, X31
	009 Move X20, X8
	010 Call Ssse3.abs_epi32, X0
	011 Move X21, X0
	012 Move X0, [X19+16]
	013 Move X8, [X19+24]
	014 Move X19, X1
	015 Move X2, X31
	016 Move X1, X8
	017 Call Ssse3.abs_epi32, X0
	018 Move [X20], X21
	019 Move [X20+8], X19
	020 Move [X20+16], X0
	021 Move [X20+24], X1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_add_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725CAC BL 0x372C21C
	0x03725CB0 MOV X23, X0
	0x03725CB4 LDP X0, X8, [X21 + 0x10]
	0x03725CB8 MOV X21, X1
	0x03725CBC MOV X2, X20
	0x03725CC0 MOV X3, X19
	0x03725CC4 MOV X1, X8
	0x03725CC8 MOV X4, X31
	0x03725CCC BL 0x372C21C
	0x03725CD0 STP X23, X21, [X22]
	0x03725CD4 STP X0, X1, [X22 + 0x10]
	0x03725CD8 LDP X20, X19, [X31 + 0x20]
	0x03725CDC LDP X22, X21, [X31 + 0x10]
	0x03725CE0 LDP X30, X23, [X31], #0x30
	0x03725CE4 RET
	0x03725CE8 STP X30, X23, [X31 - 0x30]!
	0x03725CEC STP X22, X21, [X31 + 0x10]
	0x03725CF0 STP X20, X19, [X31 + 0x20]
	0x03725CF4 MOV X21, X0
	0x03725CF8 MOV X20, X1
	0x03725CFC LDR X0, [X0]
	0x03725D00 LDR X1, [X21 + 0x8]
	0x03725D04 MOV X19, X2
	0x03725D08 MOV X2, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.add_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.add_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_add_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725D0C MOV X3, X19
	0x03725D10 MOV X4, X31
	0x03725D14 MOV X22, X8
	0x03725D18 BL 0x372C3C4
	0x03725D1C MOV X23, X0
	0x03725D20 LDP X0, X8, [X21 + 0x10]
	0x03725D24 MOV X21, X1
	0x03725D28 MOV X2, X20
	0x03725D2C MOV X3, X19
	0x03725D30 MOV X1, X8
	0x03725D34 MOV X4, X31
	0x03725D38 BL 0x372C3C4
	0x03725D3C STP X23, X21, [X22]
	0x03725D40 STP X0, X1, [X22 + 0x10]
	0x03725D44 LDP X20, X19, [X31 + 0x20]
	0x03725D48 LDP X22, X21, [X31 + 0x10]
	0x03725D4C LDP X30, X23, [X31], #0x30
	0x03725D50 RET
	0x03725D54 STP X30, X23, [X31 - 0x30]!
	0x03725D58 STP X22, X21, [X31 + 0x10]
	0x03725D5C STP X20, X19, [X31 + 0x20]
	0x03725D60 MOV X21, X0
	0x03725D64 MOV X20, X1
	0x03725D68 LDR X0, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.add_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.add_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_add_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725D6C LDR X1, [X21 + 0x8]
	0x03725D70 MOV X19, X2
	0x03725D74 MOV X2, X20
	0x03725D78 MOV X3, X19
	0x03725D7C MOV X4, X31
	0x03725D80 MOV X22, X8
	0x03725D84 BL 0x372C574
	0x03725D88 MOV X23, X0
	0x03725D8C LDP X0, X8, [X21 + 0x10]
	0x03725D90 MOV X21, X1
	0x03725D94 MOV X2, X20
	0x03725D98 MOV X3, X19
	0x03725D9C MOV X1, X8
	0x03725DA0 MOV X4, X31
	0x03725DA4 BL 0x372C574
	0x03725DA8 STP X23, X21, [X22]
	0x03725DAC STP X0, X1, [X22 + 0x10]
	0x03725DB0 LDP X20, X19, [X31 + 0x20]
	0x03725DB4 LDP X22, X21, [X31 + 0x10]
	0x03725DB8 LDP X30, X23, [X31], #0x30
	0x03725DBC RET
	0x03725DC0 STR X30, [X31 - 0x30]!
	0x03725DC4 STP X22, X21, [X31 + 0x10]
	0x03725DC8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.add_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.add_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_add_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725DCC MOV X20, X0
	0x03725DD0 MOV W19, W1
	0x03725DD4 LDR X0, [X0]
	0x03725DD8 LDR X1, [X20 + 0x8]
	0x03725DDC MOV W2, W19
	0x03725DE0 MOV X3, X31
	0x03725DE4 MOV X21, X8
	0x03725DE8 BL 0x372C1A4
	0x03725DEC MOV X22, X0
	0x03725DF0 LDP X0, X8, [X20 + 0x10]
	0x03725DF4 MOV X20, X1
	0x03725DF8 MOV W2, W19
	0x03725DFC MOV X3, X31
	0x03725E00 MOV X1, X8
	0x03725E04 BL 0x372C1A4
	0x03725E08 STP X22, X20, [X21]
	0x03725E0C STP X0, X1, [X21 + 0x10]
	0x03725E10 LDP X20, X19, [X31 + 0x20]
	0x03725E14 LDP X22, X21, [X31 + 0x10]
	0x03725E18 LDR X30, [X31], #0x30
	0x03725E1C RET
	0x03725E20 STR X30, [X31 - 0x30]!
	0x03725E24 STP X22, X21, [X31 + 0x10]
	0x03725E28 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.add_epi64, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.add_epi64, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_adds_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725E2C MOV X20, X0
	0x03725E30 MOV W19, W1
	0x03725E34 LDR X0, [X0]
	0x03725E38 LDR X1, [X20 + 0x8]
	0x03725E3C MOV W2, W19
	0x03725E40 MOV X3, X31
	0x03725E44 MOV X21, X8
	0x03725E48 BL 0x372C2F0
	0x03725E4C MOV X22, X0
	0x03725E50 LDP X0, X8, [X20 + 0x10]
	0x03725E54 MOV X20, X1
	0x03725E58 MOV W2, W19
	0x03725E5C MOV X3, X31
	0x03725E60 MOV X1, X8
	0x03725E64 BL 0x372C2F0
	0x03725E68 STP X22, X20, [X21]
	0x03725E6C STP X0, X1, [X21 + 0x10]
	0x03725E70 LDP X20, X19, [X31 + 0x20]
	0x03725E74 LDP X22, X21, [X31 + 0x10]
	0x03725E78 LDR X30, [X31], #0x30
	0x03725E7C RET
	0x03725E80 STR X30, [X31 - 0x30]!
	0x03725E84 STP X22, X21, [X31 + 0x10]
	0x03725E88 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.adds_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.adds_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_adds_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725E8C MOV X20, X0
	0x03725E90 MOV W19, W1
	0x03725E94 LDR X0, [X0]
	0x03725E98 LDR X1, [X20 + 0x8]
	0x03725E9C MOV W2, W19
	0x03725EA0 MOV X3, X31
	0x03725EA4 MOV X21, X8
	0x03725EA8 BL 0x372C498
	0x03725EAC MOV X22, X0
	0x03725EB0 LDP X0, X8, [X20 + 0x10]
	0x03725EB4 MOV X20, X1
	0x03725EB8 MOV W2, W19
	0x03725EBC MOV X3, X31
	0x03725EC0 MOV X1, X8
	0x03725EC4 BL 0x372C498
	0x03725EC8 STP X22, X20, [X21]
	0x03725ECC STP X0, X1, [X21 + 0x10]
	0x03725ED0 LDP X20, X19, [X31 + 0x20]
	0x03725ED4 LDP X22, X21, [X31 + 0x10]
	0x03725ED8 LDR X30, [X31], #0x30
	0x03725EDC RET
	0x03725EE0 STR X30, [X31 - 0x30]!
	0x03725EE4 STP X22, X21, [X31 + 0x10]
	0x03725EE8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.adds_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.adds_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_adds_epu8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725EEC MOV X19, X1
	0x03725EF0 MOV X20, X0
	0x03725EF4 LDR X0, [X0]
	0x03725EF8 LDR X1, [X20 + 0x8]
	0x03725EFC LDP X2, X3, [X19]
	0x03725F00 MOV X21, X8
	0x03725F04 BL 0x3725F38
	0x03725F08 MOV X22, X0
	0x03725F0C LDP X0, X8, [X20 + 0x10]
	0x03725F10 LDP X2, X3, [X19 + 0x10]
	0x03725F14 MOV X19, X1
	0x03725F18 MOV X1, X8
	0x03725F1C BL 0x3725F38
	0x03725F20 STP X22, X19, [X21]
	0x03725F24 STP X0, X1, [X21 + 0x10]
	0x03725F28 LDP X20, X19, [X31 + 0x20]
	0x03725F2C LDP X22, X21, [X31 + 0x10]
	0x03725F30 LDR X30, [X31], #0x30
	0x03725F34 RET
	0x03725F38 SUB X31, X31, 0x50
	0x03725F3C STR X30, [X31 + 0x40]
	0x03725F40 MRS X8, 0xC000
	0x03725F44 LDR X10, [X8 + 0x28]
	0x03725F48 MOV X9, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.adds_epu8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.adds_epu8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_adds_epu16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725F4C ADD X11, X31, 0x8
	0x03725F50 ADD X12, X31, 0x28
	0x03725F54 STR X10, [X31 + 0x38]
	0x03725F58 ADD X10, X31, 0x18
	0x03725F5C STP X0, X1, [X31 + 0x28]
	0x03725F60 STP X2, X3, [X31 + 0x18]
	0x03725F64 STP X31, X31, [X31 + 0x8]
	0x03725F68 LDR W13, [X10, X9, LSL]
	0x03725F6C CMP W13, 0x1F
	0x03725F70 B.LS 0x3725F7C
	0x03725F74 MOV W13, W31
	0x03725F78 B 0x3725F84
	0x03725F7C LDR W14, [X12, X9, LSL]
	0x03725F80 LSLV W13, W14, W13
	0x03725F84 STR W13, [X11, X9, LSL]
	0x03725F88 ADD X9, X9, 0x4
	0x03725F8C CMP X9, 0x10
	0x03725F90 B.NE 0x3725F68
	0x03725F94 LDP X0, X1, [X31 + 0x8]
	0x03725F98 LDR X8, [X8 + 0x28]
	0x03725F9C LDR X9, [X31 + 0x38]
	0x03725FA0 CMP X8, X9
	0x03725FA4 B.NE 0x3725FB4
	0x03725FA8 LDR X30, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.adds_epu16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.adds_epu16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sub_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03725FAC ADD X31, X31, 0x50
	0x03725FB0 RET
	0x03725FB4 BL 0x3EB1B20
	0x03725FB8 STR X30, [X31 - 0x30]!
	0x03725FBC STP X22, X21, [X31 + 0x10]
	0x03725FC0 STP X20, X19, [X31 + 0x20]
	0x03725FC4 MOV X19, X1
	0x03725FC8 MOV X20, X0
	0x03725FCC LDR X0, [X0]
	0x03725FD0 LDR X1, [X20 + 0x8]
	0x03725FD4 LDP X2, X3, [X19]
	0x03725FD8 MOV X21, X8
	0x03725FDC BL 0x3726010
	0x03725FE0 MOV X22, X0
	0x03725FE4 LDP X0, X8, [X20 + 0x10]
	0x03725FE8 LDP X2, X3, [X19 + 0x10]
	0x03725FEC MOV X19, X1
	0x03725FF0 MOV X1, X8
	0x03725FF4 BL 0x3726010
	0x03725FF8 STP X22, X19, [X21]
	0x03725FFC STP X0, X1, [X21 + 0x10]
	0x03726000 LDP X20, X19, [X31 + 0x20]
	0x03726004 LDP X22, X21, [X31 + 0x10]
	0x03726008 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.sub_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.sub_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sub_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372600C RET
	0x03726010 SUB X31, X31, 0x50
	0x03726014 STR X30, [X31 + 0x40]
	0x03726018 MRS X9, 0xC000
	0x0372601C LDR X10, [X9 + 0x28]
	0x03726020 CMP W2, 0x3F
	0x03726024 MOV X8, X1
	0x03726028 MOV X1, X31
	0x0372602C STR X10, [X31 + 0x38]
	0x03726030 LSLV X10, X0, X2
	0x03726034 CSEL X10, X31, X10, HI
	0x03726038 CMP W3, 0x3F
	0x0372603C STP X0, X8, [X31 + 0x28]
	0x03726040 STP X2, X3, [X31 + 0x18]
	0x03726044 STP X10, X31, [X31 + 0x8]
	0x03726048 B.HI 0x3726054
	0x0372604C LDR X8, [X31 + 0x30]
	0x03726050 LSLV X1, X8, X3
	0x03726054 LDR X0, [X31 + 0x8]
	0x03726058 LDR X8, [X9 + 0x28]
	0x0372605C LDR X9, [X31 + 0x38]
	0x03726060 CMP X8, X9
	0x03726064 B.NE 0x3726074
	0x03726068 LDR X30, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.sub_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.sub_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sub_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372606C ADD X31, X31, 0x50
	0x03726070 RET
	0x03726074 BL 0x3EB1B20
	0x03726078 STP X30, X23, [X31 - 0x30]!
	0x0372607C STP X22, X21, [X31 + 0x10]
	0x03726080 STP X20, X19, [X31 + 0x20]
	0x03726084 MOV X21, X0
	0x03726088 MOV X20, X1
	0x0372608C LDR X0, [X0]
	0x03726090 LDR X1, [X21 + 0x8]
	0x03726094 MOV X19, X2
	0x03726098 MOV X2, X20
	0x0372609C MOV X3, X19
	0x037260A0 MOV X4, X31
	0x037260A4 MOV X22, X8
	0x037260A8 BL 0x372C730
	0x037260AC MOV X23, X0
	0x037260B0 LDP X0, X8, [X21 + 0x10]
	0x037260B4 MOV X21, X1
	0x037260B8 MOV X2, X20
	0x037260BC MOV X3, X19
	0x037260C0 MOV X1, X8
	0x037260C4 MOV X4, X31
	0x037260C8 BL 0x372C730

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.sub_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.sub_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sub_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037260CC STP X23, X21, [X22]
	0x037260D0 STP X0, X1, [X22 + 0x10]
	0x037260D4 LDP X20, X19, [X31 + 0x20]
	0x037260D8 LDP X22, X21, [X31 + 0x10]
	0x037260DC LDP X30, X23, [X31], #0x30
	0x037260E0 RET
	0x037260E4 STP X30, X23, [X31 - 0x30]!
	0x037260E8 STP X22, X21, [X31 + 0x10]
	0x037260EC STP X20, X19, [X31 + 0x20]
	0x037260F0 MOV X21, X0
	0x037260F4 MOV X20, X1
	0x037260F8 LDR X0, [X0]
	0x037260FC LDR X1, [X21 + 0x8]
	0x03726100 MOV X19, X2
	0x03726104 MOV X2, X20
	0x03726108 MOV X3, X19
	0x0372610C MOV X4, X31
	0x03726110 MOV X22, X8
	0x03726114 BL 0x372C8F0
	0x03726118 MOV X23, X0
	0x0372611C LDP X0, X8, [X21 + 0x10]
	0x03726120 MOV X21, X1
	0x03726124 MOV X2, X20
	0x03726128 MOV X3, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.sub_epi64, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.sub_epi64, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_subs_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372612C MOV X1, X8
	0x03726130 MOV X4, X31
	0x03726134 BL 0x372C8F0
	0x03726138 STP X23, X21, [X22]
	0x0372613C STP X0, X1, [X22 + 0x10]
	0x03726140 LDP X20, X19, [X31 + 0x20]
	0x03726144 LDP X22, X21, [X31 + 0x10]
	0x03726148 LDP X30, X23, [X31], #0x30
	0x0372614C RET
	0x03726150 STR X30, [X31 - 0x30]!
	0x03726154 STP X22, X21, [X31 + 0x10]
	0x03726158 STP X20, X19, [X31 + 0x20]
	0x0372615C MOV X20, X0
	0x03726160 MOV W19, W1
	0x03726164 LDR X0, [X0]
	0x03726168 LDR X1, [X20 + 0x8]
	0x0372616C MOV W2, W19
	0x03726170 MOV X3, X31
	0x03726174 MOV X21, X8
	0x03726178 BL 0x372C650
	0x0372617C MOV X22, X0
	0x03726180 LDP X0, X8, [X20 + 0x10]
	0x03726184 MOV X20, X1
	0x03726188 MOV W2, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.subs_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.subs_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_subs_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372618C MOV X3, X31
	0x03726190 MOV X1, X8
	0x03726194 BL 0x372C650
	0x03726198 STP X22, X20, [X21]
	0x0372619C STP X0, X1, [X21 + 0x10]
	0x037261A0 LDP X20, X19, [X31 + 0x20]
	0x037261A4 LDP X22, X21, [X31 + 0x10]
	0x037261A8 LDR X30, [X31], #0x30
	0x037261AC RET
	0x037261B0 STR X30, [X31 - 0x30]!
	0x037261B4 STP X22, X21, [X31 + 0x10]
	0x037261B8 STP X20, X19, [X31 + 0x20]
	0x037261BC MOV X20, X0
	0x037261C0 MOV W19, W1
	0x037261C4 LDR X0, [X0]
	0x037261C8 LDR X1, [X20 + 0x8]
	0x037261CC MOV W2, W19
	0x037261D0 MOV X3, X31
	0x037261D4 MOV X21, X8
	0x037261D8 BL 0x372C810
	0x037261DC MOV X22, X0
	0x037261E0 LDP X0, X8, [X20 + 0x10]
	0x037261E4 MOV X20, X1
	0x037261E8 MOV W2, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.subs_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.subs_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_subs_epu8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037261EC MOV X3, X31
	0x037261F0 MOV X1, X8
	0x037261F4 BL 0x372C810
	0x037261F8 STP X22, X20, [X21]
	0x037261FC STP X0, X1, [X21 + 0x10]
	0x03726200 LDP X20, X19, [X31 + 0x20]
	0x03726204 LDP X22, X21, [X31 + 0x10]
	0x03726208 LDR X30, [X31], #0x30
	0x0372620C RET
	0x03726210 STR X30, [X31 - 0x30]!
	0x03726214 STP X22, X21, [X31 + 0x10]
	0x03726218 STP X20, X19, [X31 + 0x20]
	0x0372621C MOV X19, X1
	0x03726220 MOV X20, X0
	0x03726224 LDR X0, [X0]
	0x03726228 LDR X1, [X20 + 0x8]
	0x0372622C LDP X2, X3, [X19]
	0x03726230 MOV X21, X8
	0x03726234 BL 0x3726268
	0x03726238 MOV X22, X0
	0x0372623C LDP X0, X8, [X20 + 0x10]
	0x03726240 LDP X2, X3, [X19 + 0x10]
	0x03726244 MOV X19, X1
	0x03726248 MOV X1, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.subs_epu8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.subs_epu8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_subs_epu16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372624C BL 0x3726268
	0x03726250 STP X22, X19, [X21]
	0x03726254 STP X0, X1, [X21 + 0x10]
	0x03726258 LDP X20, X19, [X31 + 0x20]
	0x0372625C LDP X22, X21, [X31 + 0x10]
	0x03726260 LDR X30, [X31], #0x30
	0x03726264 RET
	0x03726268 SUB X31, X31, 0x80
	0x0372626C STP X30, X25, [X31 + 0x40]
	0x03726270 STP X24, X23, [X31 + 0x50]
	0x03726274 STP X22, X21, [X31 + 0x60]
	0x03726278 STP X20, X19, [X31 + 0x70]
	0x0372627C MRS X20, 0xC000
	0x03726280 LDR X8, [X20 + 0x28]
	0x03726284 ADRP X19, 0xCBA000
	0x03726288 STR X8, [X31 + 0x38]
	0x0372628C LDRB W8, [X19 + 0xC5A]
	0x03726290 STP X0, X1, [X31 + 0x28]
	0x03726294 STP X2, X3, [X31 + 0x18]
	0x03726298 TBNZ X8, 0x0, 0x37262B0
	0x0372629C ADRP X0, 0x9CD000
	0x037262A0 LDR X0, [X0 + 0x5A8]
	0x037262A4 BL 0x1C16CF4
	0x037262A8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.subs_epu16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.subs_epu16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_avg_epu8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037262AC STRB W8, [X19 + 0xC5A]
	0x037262B0 ADRP X22, 0x9CD000
	0x037262B4 LDR X22, [X22 + 0x5A8]
	0x037262B8 MOV X21, X31
	0x037262BC ADD X23, X31, 0x18
	0x037262C0 ADD X24, X31, 0x28
	0x037262C4 ADD X25, X31, 0x8
	0x037262C8 STP X31, X31, [X31 + 0x8]
	0x037262CC LDR X0, [X22]
	0x037262D0 LDRB W19, [X23, X21, LSL]
	0x037262D4 LDR W8, [X0 + 0xE0]
	0x037262D8 CBNZ W8, 0x37262E0
	0x037262DC BL 0x1C16DFC
	0x037262E0 MOVZ W1, 0x20
	0x037262E4 MOV W0, W19
	0x037262E8 MOV X2, X31
	0x037262EC BL 0x337EE94
	0x037262F0 LDR W9, [X24, X21, LSL]
	0x037262F4 CMP W0, 0xF
	0x037262F8 ADD W8, W0, 0x10
	0x037262FC CSET W10, GT
	0x03726300 CMP W0, 0x10
	0x03726304 CSEL W8, W0, W8, LT
	0x03726308 UBFM X10, X10, 0x3C, 0x3B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.avg_epu8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.avg_epu8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_avg_epu16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372630C ASRV W8, W9, W8
	0x03726310 ASRV W8, W8, W10
	0x03726314 STR W8, [X25, X21, LSL]
	0x03726318 ADD X21, X21, 0x4
	0x0372631C CMP X21, 0x10
	0x03726320 B.NE 0x37262CC
	0x03726324 LDP X0, X1, [X31 + 0x8]
	0x03726328 LDR X8, [X20 + 0x28]
	0x0372632C LDR X9, [X31 + 0x38]
	0x03726330 CMP X8, X9
	0x03726334 B.NE 0x3726350
	0x03726338 LDP X20, X19, [X31 + 0x70]
	0x0372633C LDP X22, X21, [X31 + 0x60]
	0x03726340 LDP X24, X23, [X31 + 0x50]
	0x03726344 LDP X30, X25, [X31 + 0x40]
	0x03726348 ADD X31, X31, 0x80
	0x0372634C RET
	0x03726350 BL 0x3EB1B20
	0x03726354 STP X30, X23, [X31 - 0x30]!
	0x03726358 STP X22, X21, [X31 + 0x10]
	0x0372635C STP X20, X19, [X31 + 0x20]
	0x03726360 MOV X21, X0
	0x03726364 MOV X20, X1
	0x03726368 LDR X0, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.avg_epu16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.avg_epu16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hadd_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372636C LDR X1, [X21 + 0x8]
	0x03726370 MOV X19, X2
	0x03726374 MOV X2, X20
	0x03726378 MOV X3, X19
	0x0372637C MOV X4, X31
	0x03726380 MOV X22, X8
	0x03726384 BL 0x372CAB4
	0x03726388 MOV X23, X0
	0x0372638C LDP X0, X8, [X21 + 0x10]
	0x03726390 MOV X21, X1
	0x03726394 MOV X2, X20
	0x03726398 MOV X3, X19
	0x0372639C MOV X1, X8
	0x037263A0 MOV X4, X31
	0x037263A4 BL 0x372CAB4
	0x037263A8 STP X23, X21, [X22]
	0x037263AC STP X0, X1, [X22 + 0x10]
	0x037263B0 LDP X20, X19, [X31 + 0x20]
	0x037263B4 LDP X22, X21, [X31 + 0x10]
	0x037263B8 LDP X30, X23, [X31], #0x30
	0x037263BC RET
	0x037263C0 STP X30, X23, [X31 - 0x30]!
	0x037263C4 STP X22, X21, [X31 + 0x10]
	0x037263C8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.hadd_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.hadd_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hadd_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037263CC MOV X21, X0
	0x037263D0 MOV X20, X1
	0x037263D4 LDR X0, [X0]
	0x037263D8 LDR X1, [X21 + 0x8]
	0x037263DC MOV X19, X2
	0x037263E0 MOV X2, X20
	0x037263E4 MOV X3, X19
	0x037263E8 MOV X4, X31
	0x037263EC MOV X22, X8
	0x037263F0 BL 0x372CC74
	0x037263F4 MOV X23, X0
	0x037263F8 LDP X0, X8, [X21 + 0x10]
	0x037263FC MOV X21, X1
	0x03726400 MOV X2, X20
	0x03726404 MOV X3, X19
	0x03726408 MOV X1, X8
	0x0372640C MOV X4, X31
	0x03726410 BL 0x372CC74
	0x03726414 STP X23, X21, [X22]
	0x03726418 STP X0, X1, [X22 + 0x10]
	0x0372641C LDP X20, X19, [X31 + 0x20]
	0x03726420 LDP X22, X21, [X31 + 0x10]
	0x03726424 LDP X30, X23, [X31], #0x30
	0x03726428 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.hadd_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.hadd_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hadds_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372642C STP X30, X23, [X31 - 0x30]!
	0x03726430 STP X22, X21, [X31 + 0x10]
	0x03726434 STP X20, X19, [X31 + 0x20]
	0x03726438 MOV X21, X0
	0x0372643C MOV X20, X1
	0x03726440 LDR X0, [X0]
	0x03726444 LDR X1, [X21 + 0x8]
	0x03726448 MOV X19, X2
	0x0372644C MOV X2, X20
	0x03726450 MOV X3, X19
	0x03726454 MOV X4, X31
	0x03726458 MOV X22, X8
	0x0372645C BL 0x372CE20
	0x03726460 MOV X23, X0
	0x03726464 LDP X0, X8, [X21 + 0x10]
	0x03726468 MOV X21, X1
	0x0372646C MOV X2, X20
	0x03726470 MOV X3, X19
	0x03726474 MOV X1, X8
	0x03726478 MOV X4, X31
	0x0372647C BL 0x372CE20
	0x03726480 STP X23, X21, [X22]
	0x03726484 STP X0, X1, [X22 + 0x10]
	0x03726488 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.hadds_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.hadds_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hsub_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372648C LDP X22, X21, [X31 + 0x10]
	0x03726490 LDP X30, X23, [X31], #0x30
	0x03726494 RET
	0x03726498 STR X30, [X31 - 0x30]!
	0x0372649C STP X22, X21, [X31 + 0x10]
	0x037264A0 STP X20, X19, [X31 + 0x20]
	0x037264A4 MOV X20, X0
	0x037264A8 MOV W19, W1
	0x037264AC LDR X0, [X0]
	0x037264B0 LDR X1, [X20 + 0x8]
	0x037264B4 MOV W2, W19
	0x037264B8 MOV X3, X31
	0x037264BC MOV X21, X8
	0x037264C0 BL 0x372C9D4
	0x037264C4 MOV X22, X0
	0x037264C8 LDP X0, X8, [X20 + 0x10]
	0x037264CC MOV X20, X1
	0x037264D0 MOV W2, W19
	0x037264D4 MOV X3, X31
	0x037264D8 MOV X1, X8
	0x037264DC BL 0x372C9D4
	0x037264E0 STP X22, X20, [X21]
	0x037264E4 STP X0, X1, [X21 + 0x10]
	0x037264E8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.hsub_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.hsub_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hsub_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037264EC LDP X22, X21, [X31 + 0x10]
	0x037264F0 LDR X30, [X31], #0x30
	0x037264F4 RET
	0x037264F8 STR X30, [X31 - 0x30]!
	0x037264FC STP X22, X21, [X31 + 0x10]
	0x03726500 STP X20, X19, [X31 + 0x20]
	0x03726504 MOV X20, X0
	0x03726508 MOV W19, W1
	0x0372650C LDR X0, [X0]
	0x03726510 LDR X1, [X20 + 0x8]
	0x03726514 MOV W2, W19
	0x03726518 MOV X3, X31
	0x0372651C MOV X21, X8
	0x03726520 BL 0x372CB94
	0x03726524 MOV X22, X0
	0x03726528 LDP X0, X8, [X20 + 0x10]
	0x0372652C MOV X20, X1
	0x03726530 MOV W2, W19
	0x03726534 MOV X3, X31
	0x03726538 MOV X1, X8
	0x0372653C BL 0x372CB94
	0x03726540 STP X22, X20, [X21]
	0x03726544 STP X0, X1, [X21 + 0x10]
	0x03726548 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.hsub_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.hsub_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_hsubs_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372654C LDP X22, X21, [X31 + 0x10]
	0x03726550 LDR X30, [X31], #0x30
	0x03726554 RET
	0x03726558 STR X30, [X31 - 0x30]!
	0x0372655C STP X22, X21, [X31 + 0x10]
	0x03726560 STP X20, X19, [X31 + 0x20]
	0x03726564 MOV X20, X0
	0x03726568 MOV W19, W1
	0x0372656C LDR X0, [X0]
	0x03726570 LDR X1, [X20 + 0x8]
	0x03726574 MOV W2, W19
	0x03726578 MOV X3, X31
	0x0372657C MOV X21, X8
	0x03726580 BL 0x372CD54
	0x03726584 MOV X22, X0
	0x03726588 LDP X0, X8, [X20 + 0x10]
	0x0372658C MOV X20, X1
	0x03726590 MOV W2, W19
	0x03726594 MOV X3, X31
	0x03726598 MOV X1, X8
	0x0372659C BL 0x372CD54
	0x037265A0 STP X22, X20, [X21]
	0x037265A4 STP X0, X1, [X21 + 0x10]
	0x037265A8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.hsubs_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.hsubs_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_madd_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037265AC LDP X22, X21, [X31 + 0x10]
	0x037265B0 LDR X30, [X31], #0x30
	0x037265B4 RET
	0x037265B8 STR X30, [X31 - 0x30]!
	0x037265BC STP X22, X21, [X31 + 0x10]
	0x037265C0 STP X20, X19, [X31 + 0x20]
	0x037265C4 MOV X19, X1
	0x037265C8 MOV X20, X0
	0x037265CC LDR X0, [X0]
	0x037265D0 LDR X1, [X20 + 0x8]
	0x037265D4 LDP X2, X3, [X19]
	0x037265D8 MOV X21, X8
	0x037265DC BL 0x3726610
	0x037265E0 MOV X22, X0
	0x037265E4 LDP X0, X8, [X20 + 0x10]
	0x037265E8 LDP X2, X3, [X19 + 0x10]
	0x037265EC MOV X19, X1
	0x037265F0 MOV X1, X8
	0x037265F4 BL 0x3726610
	0x037265F8 STP X22, X19, [X21]
	0x037265FC STP X0, X1, [X21 + 0x10]
	0x03726600 LDP X20, X19, [X31 + 0x20]
	0x03726604 LDP X22, X21, [X31 + 0x10]
	0x03726608 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.madd_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.madd_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_maddubs_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372660C RET
	0x03726610 SUB X31, X31, 0x50
	0x03726614 STR X30, [X31 + 0x40]
	0x03726618 MRS X8, 0xC000
	0x0372661C LDR X10, [X8 + 0x28]
	0x03726620 MOV X9, X31
	0x03726624 ADD X11, X31, 0x8
	0x03726628 ADD X12, X31, 0x28
	0x0372662C STR X10, [X31 + 0x38]
	0x03726630 ADD X10, X31, 0x18
	0x03726634 STP X0, X1, [X31 + 0x28]
	0x03726638 STP X2, X3, [X31 + 0x18]
	0x0372663C STP X31, X31, [X31 + 0x8]
	0x03726640 LDR W13, [X10, X9, LSL]
	0x03726644 CMP W13, 0x1F
	0x03726648 B.LS 0x3726654
	0x0372664C MOV W13, W31
	0x03726650 B 0x372665C
	0x03726654 LDR W14, [X12, X9, LSL]
	0x03726658 LSRV W13, W14, W13
	0x0372665C STR W13, [X11, X9, LSL]
	0x03726660 ADD X9, X9, 0x4
	0x03726664 CMP X9, 0x10
	0x03726668 B.NE 0x3726640

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.maddubs_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.maddubs_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mulhi_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372666C LDP X0, X1, [X31 + 0x8]
	0x03726670 LDR X8, [X8 + 0x28]
	0x03726674 LDR X9, [X31 + 0x38]
	0x03726678 CMP X8, X9
	0x0372667C B.NE 0x372668C
	0x03726680 LDR X30, [X31 + 0x40]
	0x03726684 ADD X31, X31, 0x50
	0x03726688 RET
	0x0372668C BL 0x3EB1B20
	0x03726690 STR X30, [X31 - 0x30]!
	0x03726694 STP X22, X21, [X31 + 0x10]
	0x03726698 STP X20, X19, [X31 + 0x20]
	0x0372669C MOV X19, X1
	0x037266A0 MOV X20, X0
	0x037266A4 LDR X0, [X0]
	0x037266A8 LDR X1, [X20 + 0x8]
	0x037266AC LDP X2, X3, [X19]
	0x037266B0 MOV X21, X8
	0x037266B4 BL 0x37266E8
	0x037266B8 MOV X22, X0
	0x037266BC LDP X0, X8, [X20 + 0x10]
	0x037266C0 LDP X2, X3, [X19 + 0x10]
	0x037266C4 MOV X19, X1
	0x037266C8 MOV X1, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.mulhi_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.mulhi_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mulhi_epu16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037266CC BL 0x37266E8
	0x037266D0 STP X22, X19, [X21]
	0x037266D4 STP X0, X1, [X21 + 0x10]
	0x037266D8 LDP X20, X19, [X31 + 0x20]
	0x037266DC LDP X22, X21, [X31 + 0x10]
	0x037266E0 LDR X30, [X31], #0x30
	0x037266E4 RET
	0x037266E8 SUB X31, X31, 0x50
	0x037266EC STR X30, [X31 + 0x40]
	0x037266F0 MRS X9, 0xC000
	0x037266F4 LDR X10, [X9 + 0x28]
	0x037266F8 CMP W2, 0x3F
	0x037266FC MOV X8, X1
	0x03726700 MOV X1, X31
	0x03726704 STR X10, [X31 + 0x38]
	0x03726708 LSRV X10, X0, X2
	0x0372670C CSEL X10, X31, X10, HI
	0x03726710 CMP W3, 0x3F
	0x03726714 STP X0, X8, [X31 + 0x28]
	0x03726718 STP X2, X3, [X31 + 0x18]
	0x0372671C STP X10, X31, [X31 + 0x8]
	0x03726720 B.HI 0x372672C
	0x03726724 LDR X8, [X31 + 0x30]
	0x03726728 LSRV X1, X8, X3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.mulhi_epu16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.mulhi_epu16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mullo_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372672C LDR X0, [X31 + 0x8]
	0x03726730 LDR X8, [X9 + 0x28]
	0x03726734 LDR X9, [X31 + 0x38]
	0x03726738 CMP X8, X9
	0x0372673C B.NE 0x372674C
	0x03726740 LDR X30, [X31 + 0x40]
	0x03726744 ADD X31, X31, 0x50
	0x03726748 RET
	0x0372674C BL 0x3EB1B20
	0x03726750 MOV X5, X31
	0x03726754 B 0x372EFA0
	0x03726758 SUB X31, X31, 0x90
	0x0372675C STR X30, [X31 + 0x70]
	0x03726760 STP X20, X19, [X31 + 0x80]
	0x03726764 MRS X20, 0xC000
	0x03726768 MOV X19, X8
	0x0372676C LDR X8, [X20 + 0x28]
	0x03726770 STR X8, [X31 + 0x68]
	0x03726774 LDP V1, V0, [X0]
	0x03726778 ADD X8, X31, 0x48
	0x0372677C ADD X0, X31, 0x20
	0x03726780 STP V1, V0, [X31 + 0x20]
	0x03726784 LDP V1, V0, [X1]
	0x03726788 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.mullo_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.mullo_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mullo_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372678C STP V1, V0, [X31]
	0x03726790 BL 0x3720CEC
	0x03726794 LDUR V0, [X31 + 0x58]
	0x03726798 LDUR V1, [X31 + 0x48]
	0x0372679C STP V1, V0, [X19]
	0x037267A0 LDR X8, [X20 + 0x28]
	0x037267A4 LDR X9, [X31 + 0x68]
	0x037267A8 CMP X8, X9
	0x037267AC B.NE 0x37267C0
	0x037267B0 LDP X20, X19, [X31 + 0x80]
	0x037267B4 LDR X30, [X31 + 0x70]
	0x037267B8 ADD X31, X31, 0x90
	0x037267BC RET
	0x037267C0 BL 0x3EB1B20
	0x037267C4 STP X30, X23, [X31 - 0x30]!
	0x037267C8 STP X22, X21, [X31 + 0x10]
	0x037267CC STP X20, X19, [X31 + 0x20]
	0x037267D0 MOV X20, X1
	0x037267D4 MOV X21, X0
	0x037267D8 MOV W19, W2
	0x037267DC LDR X0, [X0]
	0x037267E0 LDR X1, [X21 + 0x8]
	0x037267E4 LDP X2, X3, [X20]
	0x037267E8 MOV W4, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.mullo_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.mullo_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mul_epu32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037267EC MOV X5, X31
	0x037267F0 MOV X22, X8
	0x037267F4 BL 0x3731FA0
	0x037267F8 MOV X23, X0
	0x037267FC LDP X0, X8, [X21 + 0x10]
	0x03726800 LDP X2, X3, [X20 + 0x10]
	0x03726804 MOV X20, X1
	0x03726808 MOV W4, W19
	0x0372680C MOV X1, X8
	0x03726810 MOV X5, X31
	0x03726814 BL 0x3731FA0
	0x03726818 STP X23, X20, [X22]
	0x0372681C STP X0, X1, [X22 + 0x10]
	0x03726820 LDP X20, X19, [X31 + 0x20]
	0x03726824 LDP X22, X21, [X31 + 0x10]
	0x03726828 LDP X30, X23, [X31], #0x30
	0x0372682C RET
	0x03726830 STP X30, X23, [X31 - 0x30]!
	0x03726834 STP X22, X21, [X31 + 0x10]
	0x03726838 STP X20, X19, [X31 + 0x20]
	0x0372683C MOV X19, X2
	0x03726840 MOV X20, X1
	0x03726844 MOV X21, X0
	0x03726848 LDR X0, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.mul_epu32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.mul_epu32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mul_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372684C LDR X1, [X21 + 0x8]
	0x03726850 LDP X2, X3, [X20]
	0x03726854 LDP X4, X5, [X19]
	0x03726858 MOV X6, X31
	0x0372685C MOV X22, X8
	0x03726860 BL 0x372F11C
	0x03726864 MOV X23, X0
	0x03726868 LDP X0, X8, [X21 + 0x10]
	0x0372686C LDP X2, X3, [X20 + 0x10]
	0x03726870 LDP X4, X5, [X19 + 0x10]
	0x03726874 MOV X19, X1
	0x03726878 MOV X1, X8
	0x0372687C MOV X6, X31
	0x03726880 BL 0x372F11C
	0x03726884 STP X23, X19, [X22]
	0x03726888 STP X0, X1, [X22 + 0x10]
	0x0372688C LDP X20, X19, [X31 + 0x20]
	0x03726890 LDP X22, X21, [X31 + 0x10]
	0x03726894 LDP X30, X23, [X31], #0x30
	0x03726898 RET
	0x0372689C STP X30, X23, [X31 - 0x30]!
	0x037268A0 STP X22, X21, [X31 + 0x10]
	0x037268A4 STP X20, X19, [X31 + 0x20]
	0x037268A8 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.mul_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.mul_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sign_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037268AC MOV X21, X0
	0x037268B0 MOV W19, W2
	0x037268B4 LDR X0, [X0]
	0x037268B8 LDR X1, [X21 + 0x8]
	0x037268BC LDP X2, X3, [X20]
	0x037268C0 MOV W4, W19
	0x037268C4 MOV X5, X31
	0x037268C8 MOV X22, X8
	0x037268CC BL 0x372F198
	0x037268D0 MOV X23, X0
	0x037268D4 LDP X0, X8, [X21 + 0x10]
	0x037268D8 LDP X2, X3, [X20 + 0x10]
	0x037268DC MOV X20, X1
	0x037268E0 MOV W4, W19
	0x037268E4 MOV X1, X8
	0x037268E8 MOV X5, X31
	0x037268EC BL 0x372F198
	0x037268F0 STP X23, X20, [X22]
	0x037268F4 STP X0, X1, [X22 + 0x10]
	0x037268F8 LDP X20, X19, [X31 + 0x20]
	0x037268FC LDP X22, X21, [X31 + 0x10]
	0x03726900 LDP X30, X23, [X31], #0x30
	0x03726904 RET
	0x03726908 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.sign_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.sign_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sign_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372690C STP X22, X21, [X31 + 0x10]
	0x03726910 STP X20, X19, [X31 + 0x20]
	0x03726914 MOV X19, X1
	0x03726918 MOV X20, X0
	0x0372691C LDR X0, [X0]
	0x03726920 LDR X1, [X20 + 0x8]
	0x03726924 LDP X2, X3, [X19]
	0x03726928 MOV X4, X31
	0x0372692C MOV X21, X8
	0x03726930 BL 0x372D530
	0x03726934 MOV X22, X0
	0x03726938 LDP X0, X8, [X20 + 0x10]
	0x0372693C LDP X2, X3, [X19 + 0x10]
	0x03726940 MOV X19, X1
	0x03726944 MOV X4, X31
	0x03726948 MOV X1, X8
	0x0372694C BL 0x372D530
	0x03726950 STP X22, X19, [X21]
	0x03726954 STP X0, X1, [X21 + 0x10]
	0x03726958 LDP X20, X19, [X31 + 0x20]
	0x0372695C LDP X22, X21, [X31 + 0x10]
	0x03726960 LDR X30, [X31], #0x30
	0x03726964 RET
	0x03726968 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.sign_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.sign_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sign_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x0372696C STP X22, X21, [X31 + 0x10]
	0x03726970 STP X20, X19, [X31 + 0x20]
	0x03726974 MOV X19, X1
	0x03726978 MOV X20, X0
	0x0372697C LDR X0, [X0]
	0x03726980 LDR X1, [X20 + 0x8]
	0x03726984 LDP X2, X3, [X19]
	0x03726988 MOV X4, X31
	0x0372698C MOV X21, X8
	0x03726990 BL 0x372D5D8
	0x03726994 MOV X22, X0
	0x03726998 LDP X0, X8, [X20 + 0x10]
	0x0372699C LDP X2, X3, [X19 + 0x10]
	0x037269A0 MOV X19, X1
	0x037269A4 MOV X4, X31
	0x037269A8 MOV X1, X8
	0x037269AC BL 0x372D5D8
	0x037269B0 STP X22, X19, [X21]
	0x037269B4 STP X0, X1, [X21 + 0x10]
	0x037269B8 LDP X20, X19, [X31 + 0x20]
	0x037269BC LDP X22, X21, [X31 + 0x10]
	0x037269C0 LDR X30, [X31], #0x30
	0x037269C4 RET
	0x037269C8 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.sign_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.sign_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mulhrs_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037269CC STP X22, X21, [X31 + 0x10]
	0x037269D0 STP X20, X19, [X31 + 0x20]
	0x037269D4 MOV X19, X1
	0x037269D8 MOV X20, X0
	0x037269DC LDR X0, [X0]
	0x037269E0 LDR X1, [X20 + 0x8]
	0x037269E4 LDP X2, X3, [X19]
	0x037269E8 MOV X4, X31
	0x037269EC MOV X21, X8
	0x037269F0 BL 0x372D680
	0x037269F4 MOV X22, X0
	0x037269F8 LDP X0, X8, [X20 + 0x10]
	0x037269FC LDP X2, X3, [X19 + 0x10]
	0x03726A00 MOV X19, X1
	0x03726A04 MOV X4, X31
	0x03726A08 MOV X1, X8
	0x03726A0C BL 0x372D680
	0x03726A10 STP X22, X19, [X21]
	0x03726A14 STP X0, X1, [X21 + 0x10]
	0x03726A18 LDP X20, X19, [X31 + 0x20]
	0x03726A1C LDP X22, X21, [X31 + 0x10]
	0x03726A20 LDR X30, [X31], #0x30
	0x03726A24 RET
	0x03726A28 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.mulhrs_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.mulhrs_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sad_epu8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03726A2C STP X22, X21, [X31 + 0x10]
	0x03726A30 STP X20, X19, [X31 + 0x20]
	0x03726A34 MOV X19, X1
	0x03726A38 MOV X20, X0
	0x03726A3C LDR X0, [X0]
	0x03726A40 LDR X1, [X20 + 0x8]
	0x03726A44 LDP X2, X3, [X19]
	0x03726A48 MOV X4, X31
	0x03726A4C MOV X21, X8
	0x03726A50 BL 0x372FCA8
	0x03726A54 MOV X22, X0
	0x03726A58 LDP X0, X8, [X20 + 0x10]
	0x03726A5C LDP X2, X3, [X19 + 0x10]
	0x03726A60 MOV X19, X1
	0x03726A64 MOV X4, X31
	0x03726A68 MOV X1, X8
	0x03726A6C BL 0x372FCA8
	0x03726A70 STP X22, X19, [X21]
	0x03726A74 STP X0, X1, [X21 + 0x10]
	0x03726A78 LDP X20, X19, [X31 + 0x20]
	0x03726A7C LDP X22, X21, [X31 + 0x10]
	0x03726A80 LDR X30, [X31], #0x30
	0x03726A84 RET
	0x03726A88 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.sad_epu8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.sad_epu8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_mpsadbw_epu8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x03726A8C STP X22, X21, [X31 + 0x10]
	0x03726A90 STP X20, X19, [X31 + 0x20]
	0x03726A94 MOV X19, X1
	0x03726A98 MOV X20, X0
	0x03726A9C LDR X0, [X0]
	0x03726AA0 LDR X1, [X20 + 0x8]
	0x03726AA4 LDP X2, X3, [X19]
	0x03726AA8 MOV X4, X31
	0x03726AAC MOV X21, X8
	0x03726AB0 BL 0x372D9D0
	0x03726AB4 MOV X22, X0
	0x03726AB8 LDP X0, X8, [X20 + 0x10]
	0x03726ABC LDP X2, X3, [X19 + 0x10]
	0x03726AC0 MOV X19, X1
	0x03726AC4 MOV X4, X31
	0x03726AC8 MOV X1, X8
	0x03726ACC BL 0x372D9D0
	0x03726AD0 STP X22, X19, [X21]
	0x03726AD4 STP X0, X1, [X21 + 0x10]
	0x03726AD8 LDP X20, X19, [X31 + 0x20]
	0x03726ADC LDP X22, X21, [X31 + 0x10]
	0x03726AE0 LDR X30, [X31], #0x30
	0x03726AE4 RET
	0x03726AE8 STR X30, [X31 - 0x30]!
	0x03726AEC STP X22, X21, [X31 + 0x10]
	0x03726AF0 STP X20, X19, [X31 + 0x20]
	0x03726AF4 MOV X19, X1
	0x03726AF8 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X1
	009 Move X21, X0
	010 Move W19, W2
	011 Move X0, [X0]
	012 Move X1, [X21+8]
	013 Move X2, [X20]
	014 Move X3, [X20+8]
	015 And W4, W19, 7
	016 Move X5, X31
	017 Move X22, X8
	018 Call Sse4_1.mpsadbw_epu8, X0, X1, X2
	019 Move X23, X0
	020 Move X24, X1
	021 Move X0, [X21+16]
	022 Move X1, [X21+24]
	023 Move X2, [X20+16]
	024 Move X3, [X20+24]
	025 Move W4, W19
	026 ShiftRight W4, 3
	027 And W4, W4, 31
	028 Move X5, X31
	029 Call Sse4_1.mpsadbw_epu8, X0, X1, X2
	030 Move [X22], X23
	031 Move [X22+8], X24
	032 Move [X22+16], X0
	033 Move [X22+24], X1
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_slli_si256(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03726AFC LDR X0, [X0]
	0x03726B00 LDR X1, [X20 + 0x8]
	0x03726B04 LDP X2, X3, [X19]
	0x03726B08 MOV X4, X31
	0x03726B0C MOV X21, X8
	0x03726B10 BL 0x372DA4C
	0x03726B14 MOV X22, X0
	0x03726B18 LDP X0, X8, [X20 + 0x10]
	0x03726B1C LDP X2, X3, [X19 + 0x10]
	0x03726B20 MOV X19, X1
	0x03726B24 MOV X4, X31
	0x03726B28 MOV X1, X8
	0x03726B2C BL 0x372DA4C
	0x03726B30 STP X22, X19, [X21]
	0x03726B34 STP X0, X1, [X21 + 0x10]
	0x03726B38 LDP X20, X19, [X31 + 0x20]
	0x03726B3C LDP X22, X21, [X31 + 0x10]
	0x03726B40 LDR X30, [X31], #0x30
	0x03726B44 RET
	0x03726B48 STR X30, [X31 - 0x30]!
	0x03726B4C STP X22, X21, [X31 + 0x10]
	0x03726B50 STP X20, X19, [X31 + 0x20]
	0x03726B54 MOV X19, X1
	0x03726B58 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.slli_si128, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.slli_si128, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_bslli_epi128(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03726B5C LDR X0, [X0]
	0x03726B60 LDR X1, [X20 + 0x8]
	0x03726B64 LDP X2, X3, [X19]
	0x03726B68 MOV X4, X31
	0x03726B6C MOV X21, X8
	0x03726B70 BL 0x372DAC8
	0x03726B74 MOV X22, X0
	0x03726B78 LDP X0, X8, [X20 + 0x10]
	0x03726B7C LDP X2, X3, [X19 + 0x10]
	0x03726B80 MOV X19, X1
	0x03726B84 MOV X4, X31
	0x03726B88 MOV X1, X8
	0x03726B8C BL 0x372DAC8
	0x03726B90 STP X22, X19, [X21]
	0x03726B94 STP X0, X1, [X21 + 0x10]
	0x03726B98 LDP X20, X19, [X31 + 0x20]
	0x03726B9C LDP X22, X21, [X31 + 0x10]
	0x03726BA0 LDR X30, [X31], #0x30
	0x03726BA4 RET
	0x03726BA8 STR X30, [X31 - 0x30]!
	0x03726BAC STP X22, X21, [X31 + 0x10]
	0x03726BB0 STP X20, X19, [X31 + 0x20]
	0x03726BB4 MOV X19, X1
	0x03726BB8 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X19, X8
	007 Move X8, [X20+40]
	008 Move [X31+72], X8
	009 Move V1, [X0]
	010 Move V0, [X0+16]
	011 Add X8, X31, 40
	012 Add X0, X31, 0
	013 Move [X31], V1
	014 Move [X31+8], V0
	015 Call Avx2.mm256_slli_si256, X0, X1
	016 NotImplemented "Instruction LDUR not yet implemented."
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 Move [X19], V1
	019 Move [X19+8], V0
	020 Move X8, [X20+40]
	021 Move X9, [X31+72]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, [X31+96]
	024 Move X19, [X31+104]
	025 Move X30, [X31+80]
	026 Add X31, X31, 112
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_srli_si256(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03726BBC LDR X0, [X0]
	0x03726BC0 LDR X1, [X20 + 0x8]
	0x03726BC4 LDP X2, X3, [X19]
	0x03726BC8 MOV X4, X31
	0x03726BCC MOV X21, X8
	0x03726BD0 BL 0x372DADC
	0x03726BD4 MOV X22, X0
	0x03726BD8 LDP X0, X8, [X20 + 0x10]
	0x03726BDC LDP X2, X3, [X19 + 0x10]
	0x03726BE0 MOV X19, X1
	0x03726BE4 MOV X4, X31
	0x03726BE8 MOV X1, X8
	0x03726BEC BL 0x372DADC
	0x03726BF0 STP X22, X19, [X21]
	0x03726BF4 STP X0, X1, [X21 + 0x10]
	0x03726BF8 LDP X20, X19, [X31 + 0x20]
	0x03726BFC LDP X22, X21, [X31 + 0x10]
	0x03726C00 LDR X30, [X31], #0x30
	0x03726C04 RET
	0x03726C08 STR X30, [X31 - 0x30]!
	0x03726C0C STP X22, X21, [X31 + 0x10]
	0x03726C10 STP X20, X19, [X31 + 0x20]
	0x03726C14 MOV X19, X1
	0x03726C18 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.srli_si128, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.srli_si128, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_bsrli_epi128(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03726C1C LDR X0, [X0]
	0x03726C20 LDR X1, [X20 + 0x8]
	0x03726C24 LDP X2, X3, [X19]
	0x03726C28 MOV X4, X31
	0x03726C2C MOV X21, X8
	0x03726C30 BL 0x372DAE8
	0x03726C34 MOV X22, X0
	0x03726C38 LDP X0, X8, [X20 + 0x10]
	0x03726C3C LDP X2, X3, [X19 + 0x10]
	0x03726C40 MOV X19, X1
	0x03726C44 MOV X4, X31
	0x03726C48 MOV X1, X8
	0x03726C4C BL 0x372DAE8
	0x03726C50 STP X22, X19, [X21]
	0x03726C54 STP X0, X1, [X21 + 0x10]
	0x03726C58 LDP X20, X19, [X31 + 0x20]
	0x03726C5C LDP X22, X21, [X31 + 0x10]
	0x03726C60 LDR X30, [X31], #0x30
	0x03726C64 RET
	0x03726C68 STR X30, [X31 - 0x30]!
	0x03726C6C STP X22, X21, [X31 + 0x10]
	0x03726C70 STP X20, X19, [X31 + 0x20]
	0x03726C74 MOV X19, X1
	0x03726C78 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X19, X8
	007 Move X8, [X20+40]
	008 Move [X31+72], X8
	009 Move V1, [X0]
	010 Move V0, [X0+16]
	011 Add X8, X31, 40
	012 Add X0, X31, 0
	013 Move [X31], V1
	014 Move [X31+8], V0
	015 Call Avx2.mm256_srli_si256, X0, X1
	016 NotImplemented "Instruction LDUR not yet implemented."
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 Move [X19], V1
	019 Move [X19+8], V0
	020 Move X8, [X20+40]
	021 Move X9, [X31+72]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, [X31+96]
	024 Move X19, [X31+104]
	025 Move X30, [X31+80]
	026 Add X31, X31, 112
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_sll_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x03726C7C LDR X0, [X0]
	0x03726C80 LDR X1, [X20 + 0x8]
	0x03726C84 LDP X2, X3, [X19]
	0x03726C88 MOV X4, X31
	0x03726C8C MOV X21, X8
	0x03726C90 BL 0x372DB5C
	0x03726C94 MOV X22, X0
	0x03726C98 LDP X0, X8, [X20 + 0x10]
	0x03726C9C LDP X2, X3, [X19 + 0x10]
	0x03726CA0 MOV X19, X1
	0x03726CA4 MOV X4, X31
	0x03726CA8 MOV X1, X8
	0x03726CAC BL 0x372DB5C
	0x03726CB0 STP X22, X19, [X21]
	0x03726CB4 STP X0, X1, [X21 + 0x10]
	0x03726CB8 LDP X20, X19, [X31 + 0x20]
	0x03726CBC LDP X22, X21, [X31 + 0x10]
	0x03726CC0 LDR X30, [X31], #0x30
	0x03726CC4 RET
	0x03726CC8 STR X30, [X31 - 0x30]!
	0x03726CCC STP X22, X21, [X31 + 0x10]
	0x03726CD0 STP X20, X19, [X31 + 0x20]
	0x03726CD4 MOV X19, X1
	0x03726CD8 MOV X20, X0
	0x03726CDC LDR X0, [X0]
	0x03726CE0 LDR X1, [X20 + 0x8]
	0x03726CE4 LDP X2, X3, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X20, X1
	009 Move X0, [X0]
	010 Move X1, [X21+8]
	011 Move X19, X2
	012 Move X2, X20
	013 Move X3, X19
	014 Move X4, X31
	015 Move X22, X8
	016 Call Sse2.sll_epi16, X0, X1
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X21, X1
	021 Move X2, X20
	022 Move X3, X19
	023 Move X1, X8
	024 Move X4, X31
	025 Call Sse2.sll_epi16, X0, X1
	026 Move [X22], X23
	027 Move [X22+8], X21
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sll_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x03726CE8 MOV X4, X31
	0x03726CEC MOV X21, X8
	0x03726CF0 BL 0x372DBD0
	0x03726CF4 MOV X22, X0
	0x03726CF8 LDP X0, X8, [X20 + 0x10]
	0x03726CFC LDP X2, X3, [X19 + 0x10]
	0x03726D00 MOV X19, X1
	0x03726D04 MOV X4, X31
	0x03726D08 MOV X1, X8
	0x03726D0C BL 0x372DBD0
	0x03726D10 STP X22, X19, [X21]
	0x03726D14 STP X0, X1, [X21 + 0x10]
	0x03726D18 LDP X20, X19, [X31 + 0x20]
	0x03726D1C LDP X22, X21, [X31 + 0x10]
	0x03726D20 LDR X30, [X31], #0x30
	0x03726D24 RET
	0x03726D28 STR X30, [X31 - 0x30]!
	0x03726D2C STP X22, X21, [X31 + 0x10]
	0x03726D30 STP X20, X19, [X31 + 0x20]
	0x03726D34 MOV X19, X1
	0x03726D38 MOV X20, X0
	0x03726D3C LDR X0, [X0]
	0x03726D40 LDR X1, [X20 + 0x8]
	0x03726D44 LDP X2, X3, [X19]
	0x03726D48 MOV X4, X31
	0x03726D4C MOV X21, X8
	0x03726D50 BL 0x372DBE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X20, X1
	009 Move X0, [X0]
	010 Move X1, [X21+8]
	011 Move X19, X2
	012 Move X2, X20
	013 Move X3, X19
	014 Move X4, X31
	015 Move X22, X8
	016 Call Sse2.sll_epi32, X0, X1
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X21, X1
	021 Move X2, X20
	022 Move X3, X19
	023 Move X1, X8
	024 Move X4, X31
	025 Call Sse2.sll_epi32, X0, X1
	026 Move [X22], X23
	027 Move [X22+8], X21
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sll_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x03726D54 MOV X22, X0
	0x03726D58 LDP X0, X8, [X20 + 0x10]
	0x03726D5C LDP X2, X3, [X19 + 0x10]
	0x03726D60 MOV X19, X1
	0x03726D64 MOV X4, X31
	0x03726D68 MOV X1, X8
	0x03726D6C BL 0x372DBE0
	0x03726D70 STP X22, X19, [X21]
	0x03726D74 STP X0, X1, [X21 + 0x10]
	0x03726D78 LDP X20, X19, [X31 + 0x20]
	0x03726D7C LDP X22, X21, [X31 + 0x10]
	0x03726D80 LDR X30, [X31], #0x30
	0x03726D84 RET
	0x03726D88 STR X30, [X31 - 0x30]!
	0x03726D8C STP X22, X21, [X31 + 0x10]
	0x03726D90 STP X20, X19, [X31 + 0x20]
	0x03726D94 MOV X19, X1
	0x03726D98 MOV X20, X0
	0x03726D9C LDR X0, [X0]
	0x03726DA0 LDR X1, [X20 + 0x8]
	0x03726DA4 LDP X2, X3, [X19]
	0x03726DA8 MOV X4, X31
	0x03726DAC MOV X21, X8
	0x03726DB0 BL 0x3731F20
	0x03726DB4 MOV X22, X0
	0x03726DB8 LDP X0, X8, [X20 + 0x10]
	0x03726DBC LDP X2, X3, [X19 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X20, X1
	009 Move X0, [X0]
	010 Move X1, [X21+8]
	011 Move X19, X2
	012 Move X2, X20
	013 Move X3, X19
	014 Move X4, X31
	015 Move X22, X8
	016 Call Sse2.sll_epi64, X0, X1
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X21, X1
	021 Move X2, X20
	022 Move X3, X19
	023 Move X1, X8
	024 Move X4, X31
	025 Call Sse2.sll_epi64, X0, X1
	026 Move [X22], X23
	027 Move [X22+8], X21
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_slli_epi16(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03726DC0 MOV X19, X1
	0x03726DC4 MOV X4, X31
	0x03726DC8 MOV X1, X8
	0x03726DCC BL 0x3731F20
	0x03726DD0 STP X22, X19, [X21]
	0x03726DD4 STP X0, X1, [X21 + 0x10]
	0x03726DD8 LDP X20, X19, [X31 + 0x20]
	0x03726DDC LDP X22, X21, [X31 + 0x10]
	0x03726DE0 LDR X30, [X31], #0x30
	0x03726DE4 RET
	0x03726DE8 STR X30, [X31 - 0x30]!
	0x03726DEC STP X22, X21, [X31 + 0x10]
	0x03726DF0 STP X20, X19, [X31 + 0x20]
	0x03726DF4 MOV X20, X0
	0x03726DF8 MOV W19, W1
	0x03726DFC LDR X0, [X0]
	0x03726E00 LDR X1, [X20 + 0x8]
	0x03726E04 MOV W2, W19
	0x03726E08 MOV X3, X31
	0x03726E0C MOV X21, X8
	0x03726E10 BL 0x372D828
	0x03726E14 MOV X22, X0
	0x03726E18 LDP X0, X8, [X20 + 0x10]
	0x03726E1C MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.slli_epi16, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.slli_epi16, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_slli_epi32(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03726E20 MOV W2, W19
	0x03726E24 MOV X3, X31
	0x03726E28 MOV X1, X8
	0x03726E2C BL 0x372D828
	0x03726E30 STP X22, X20, [X21]
	0x03726E34 STP X0, X1, [X21 + 0x10]
	0x03726E38 LDP X20, X19, [X31 + 0x20]
	0x03726E3C LDP X22, X21, [X31 + 0x10]
	0x03726E40 LDR X30, [X31], #0x30
	0x03726E44 RET
	0x03726E48 STR X30, [X31 - 0x30]!
	0x03726E4C STP X22, X21, [X31 + 0x10]
	0x03726E50 STP X20, X19, [X31 + 0x20]
	0x03726E54 MOV X20, X0
	0x03726E58 MOV W19, W1
	0x03726E5C LDR X0, [X0]
	0x03726E60 LDR X1, [X20 + 0x8]
	0x03726E64 MOV W2, W19
	0x03726E68 MOV X3, X31
	0x03726E6C MOV X21, X8
	0x03726E70 BL 0x372D8A8
	0x03726E74 MOV X22, X0
	0x03726E78 LDP X0, X8, [X20 + 0x10]
	0x03726E7C MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.slli_epi32, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.slli_epi32, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_slli_epi64(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03726E80 MOV W2, W19
	0x03726E84 MOV X3, X31
	0x03726E88 MOV X1, X8
	0x03726E8C BL 0x372D8A8
	0x03726E90 STP X22, X20, [X21]
	0x03726E94 STP X0, X1, [X21 + 0x10]
	0x03726E98 LDP X20, X19, [X31 + 0x20]
	0x03726E9C LDP X22, X21, [X31 + 0x10]
	0x03726EA0 LDR X30, [X31], #0x30
	0x03726EA4 RET
	0x03726EA8 STR X30, [X31 - 0x30]!
	0x03726EAC STP X22, X21, [X31 + 0x10]
	0x03726EB0 STP X20, X19, [X31 + 0x20]
	0x03726EB4 MOV X20, X0
	0x03726EB8 MOV W19, W1
	0x03726EBC LDR X0, [X0]
	0x03726EC0 LDR X1, [X20 + 0x8]
	0x03726EC4 MOV W2, W19
	0x03726EC8 MOV X3, X31
	0x03726ECC MOV X21, X8
	0x03726ED0 BL 0x372D93C
	0x03726ED4 MOV X22, X0
	0x03726ED8 LDP X0, X8, [X20 + 0x10]
	0x03726EDC MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.slli_epi64, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.slli_epi64, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sllv_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 count)

Disassembly:
	0x03726EE0 MOV W2, W19
	0x03726EE4 MOV X3, X31
	0x03726EE8 MOV X1, X8
	0x03726EEC BL 0x372D93C
	0x03726EF0 STP X22, X20, [X21]
	0x03726EF4 STP X0, X1, [X21 + 0x10]
	0x03726EF8 LDP X20, X19, [X31 + 0x20]
	0x03726EFC LDP X22, X21, [X31 + 0x10]
	0x03726F00 LDR X30, [X31], #0x30
	0x03726F04 RET
	0x03726F08 ADD X8, X0, 0x8
	0x03726F0C ADD X9, X0, 0x10
	0x03726F10 ADD X10, X0, 0x18
	0x03726F14 CMP W1, 0x0
	0x03726F18 CSEL X8, X8, X10, EQ
	0x03726F1C CSEL X9, X0, X9, EQ
	0x03726F20 LDR X1, [X8]
	0x03726F24 LDR X0, [X9]
	0x03726F28 RET
	0x03726F2C LDP X9, X10, [X0]
	0x03726F30 LDP X11, X12, [X0 + 0x10]
	0x03726F34 ANDS W31, W3, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X21, X8
	013 Call Avx2.sllv_epi32, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X2, [X19+16]
	018 Move X3, [X19+24]
	019 Move X19, X1
	020 Move X1, X8
	021 Call Avx2.sllv_epi32, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X19
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sllv_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 count)

Disassembly:
	0x03726FB8 RET
	0x03726FBC AND X8, X0, 0x0
	0x03726FC0 BFM X0, X8, 0x20, 0x1F
	0x03726FC4 MOV X1, X0
	0x03726FC8 RET
	0x03726FCC MOV X1, X0
	0x03726FD0 RET
	0x03726FD4 AND X9, X0, 0xFF
	0x03726FD8 ORR X10, X31, 0x101010101010101
	0x03726FDC MUL X9, X9, X10
	0x03726FE0 UNIMPLEMENTED
	0x03726FE4 STP V0, V0, [X8]
	0x03726FE8 RET
	0x03726FEC STRH W0, [X8 + 0x1E]
	0x03726FF0 STRH W0, [X8 + 0x1C]
	0x03726FF4 STRH W0, [X8 + 0x1A]
	0x03726FF8 STRH W0, [X8 + 0x18]
	0x03726FFC STRH W0, [X8 + 0x16]
	0x03727000 STRH W0, [X8 + 0x14]
	0x03727004 STRH W0, [X8 + 0x12]
	0x03727008 STRH W0, [X8 + 0x10]
	0x0372700C STRH W0, [X8 + 0xE]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X21, X8
	013 Call Avx2.sllv_epi64, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X2, [X19+16]
	018 Move X3, [X19+24]
	019 Move X19, X1
	020 Move X1, X8
	021 Call Avx2.sllv_epi64, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X19
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v128 sllv_epi32(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x03726F38 CSEL X9, X1, X9, EQ
	0x03726F3C CSEL X10, X2, X10, EQ
	0x03726F40 CSEL X11, X11, X1, EQ
	0x03726F44 CSEL X12, X12, X2, EQ
	0x03726F48 STP X9, X10, [X8]
	0x03726F4C STP X11, X12, [X8 + 0x10]
	0x03726F50 RET
	0x03726F54 AND X8, X0, 0x0
	0x03726F58 BFM X0, X8, 0x20, 0x1F
	0x03726F5C MOV X1, X0
	0x03726F60 RET
	0x03726F64 STP W0, W0, [X8 + 0x18]
	0x03726F68 STP W0, W0, [X8 + 0x10]
	0x03726F6C STP W0, W0, [X8 + 0x8]
	0x03726F70 STP W0, W0, [X8]
	0x03726F74 RET
	0x03726F78 MOV X1, X0
	0x03726F7C RET
	0x03726F80 STP X0, X0, [X8 + 0x10]
	0x03726F84 STP X0, X0, [X8]
	0x03726F88 RET
	0x03726F8C AND X8, X0, 0xFF
	0x03726F90 ORR X9, X31, 0x101010101010101
	0x03726F94 MUL X0, X8, X9
	0x03726F98 MOV X1, X0
	0x03726F9C RET
	0x03726FA0 AND X8, X0, 0xFFFF
	0x03726FA4 MOV X0, X8
	0x03726FA8 BFM X0, X8, 0x20, 0xF
	0x03726FAC BFM X0, X8, 0x10, 0xF
	0x03726FB0 BFM X0, X8, 0x30, 0xF
	0x03726FB4 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X8+40]
	005 Move X9, X31
	006 Add X11, X31, 8
	007 Add X12, X31, 40
	008 Move [X31+56], X10
	009 Add X10, X31, 24
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31+24], X2
	013 Move [X31+32], X3
	014 Move [X31+8], X31
	015 Move [X31+16], X31
	016 Move W13, [X10]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W13, W31
	019 Move W14, [X12]
	020 NotImplemented "Instruction LSLV not yet implemented."
	021 Move [X11], W13
	022 Add X9, X9, 4
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, [X31+8]
	025 Move X1, [X31+16]
	026 Move X8, [X8+40]
	027 Move X9, [X31+56]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X30, [X31+64]
	030 Add X31, X31, 80
	031 Return X0
	032 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 sllv_epi64(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x03727010 STRH W0, [X8 + 0xC]
	0x03727014 STRH W0, [X8 + 0xA]
	0x03727018 STRH W0, [X8 + 0x8]
	0x0372701C STRH W0, [X8 + 0x6]
	0x03727020 STRH W0, [X8 + 0x4]
	0x03727024 STRH W0, [X8 + 0x2]
	0x03727028 STRH W0, [X8]
	0x0372702C RET
	0x03727030 STP W0, W0, [X8 + 0x18]
	0x03727034 STP W0, W0, [X8 + 0x10]
	0x03727038 STP W0, W0, [X8 + 0x8]
	0x0372703C STP W0, W0, [X8]
	0x03727040 RET
	0x03727044 STP X0, X0, [X8 + 0x10]
	0x03727048 STP X0, X0, [X8]
	0x0372704C RET
	0x03727050 STP X0, X1, [X8]
	0x03727054 STP X0, X1, [X8 + 0x10]
	0x03727058 RET
	0x0372705C SUB X31, X31, 0x50
	0x03727060 STR X30, [X31 + 0x40]
	0x03727064 MRS X9, 0xC000
	0x03727068 LDR X12, [X9 + 0x28]
	0x0372706C MOV X10, X31
	0x03727070 ADD X11, X31, 0x0
	0x03727074 MOVI V0.2D, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, X1
	007 Move X1, X31
	008 Move [X31+56], X10
	009 NotImplemented "Instruction LSLV not yet implemented."
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X31+40], X0
	013 Move [X31+48], X8
	014 Move [X31+24], X2
	015 Move [X31+32], X3
	016 Move [X31+8], X10
	017 Move [X31+16], X31
	018 Move X8, [X31+48]
	019 NotImplemented "Instruction LSLV not yet implemented."
	020 Move X0, [X31+8]
	021 Move X8, [X9+40]
	022 Move X9, [X31+56]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X30, [X31+64]
	025 Add X31, X31, 80
	026 Return X0
	027 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_sra_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x03727078 STR X12, [X31 + 0x38]
	0x0372707C ADD X12, X31, 0x28
	0x03727080 STP X0, X1, [X31 + 0x28]
	0x03727084 STP V0, V0, [X31]
	0x00000000 INVALID
	0x0372708C ADD X10, X10, 0x1
	0x03727090 CMP X10, 0x10
	0x03727094 STRH W13, [X11], #0x2
	0x03727098 B.NE 0x3727088
	0x0372709C LDP V1, V0, [X31]
	0x037270A0 STP V1, V0, [X8]
	0x037270A4 LDR X8, [X9 + 0x28]
	0x037270A8 LDR X9, [X31 + 0x38]
	0x037270AC CMP X8, X9
	0x037270B0 B.NE 0x37270C0
	0x037270B4 LDR X30, [X31 + 0x40]
	0x037270B8 ADD X31, X31, 0x50
	0x037270BC RET
	0x037270C0 BL 0x3EB1B20
	0x037270C4 SUB X31, X31, 0x50
	0x037270C8 STR X30, [X31 + 0x40]
	0x037270CC MRS X9, 0xC000
	0x037270D0 LDR X12, [X9 + 0x28]
	0x037270D4 MOV X10, X31
	0x037270D8 ADD X11, X31, 0x0
	0x037270DC MOVI V0.2D, 0x0
	0x037270E0 STR X12, [X31 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X20, X1
	009 Move X0, [X0]
	010 Move X1, [X21+8]
	011 Move X19, X2
	012 Move X2, X20
	013 Move X3, X19
	014 Move X4, X31
	015 Move X22, X8
	016 Call Sse2.sra_epi16, X0, X1
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X21, X1
	021 Move X2, X20
	022 Move X3, X19
	023 Move X1, X8
	024 Move X4, X31
	025 Call Sse2.sra_epi16, X0, X1
	026 Move [X22], X23
	027 Move [X22+8], X21
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_sra_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x037270E4 ADD X12, X31, 0x28
	0x037270E8 STP X0, X1, [X31 + 0x28]
	0x037270EC STP V0, V0, [X31]
	0x00000000 INVALID
	0x037270F4 ADD X10, X10, 0x1
	0x037270F8 CMP X10, 0x8
	0x037270FC STR W13, [X11], #0x4
	0x03727100 B.NE 0x37270F0
	0x03727104 LDP V1, V0, [X31]
	0x03727108 STP V1, V0, [X8]
	0x0372710C LDR X8, [X9 + 0x28]
	0x03727110 LDR X9, [X31 + 0x38]
	0x03727114 CMP X8, X9
	0x03727118 B.NE 0x3727128
	0x0372711C LDR X30, [X31 + 0x40]
	0x03727120 ADD X31, X31, 0x50
	0x03727124 RET
	0x03727128 BL 0x3EB1B20
	0x0372712C SUB X31, X31, 0x50
	0x03727130 STR X30, [X31 + 0x40]
	0x03727134 MRS X9, 0xC000
	0x03727138 LDR X12, [X9 + 0x28]
	0x0372713C MOV X10, X31
	0x03727140 ADD X11, X31, 0x0
	0x03727144 MOVI V0.2D, 0x0
	0x03727148 STR X12, [X31 + 0x38]
	0x0372714C ADD X12, X31, 0x28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X20, X1
	009 Move X0, [X0]
	010 Move X1, [X21+8]
	011 Move X19, X2
	012 Move X2, X20
	013 Move X3, X19
	014 Move X4, X31
	015 Move X22, X8
	016 Call Sse2.sra_epi32, X0, X1
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X21, X1
	021 Move X2, X20
	022 Move X3, X19
	023 Move X1, X8
	024 Move X4, X31
	025 Call Sse2.sra_epi32, X0, X1
	026 Move [X22], X23
	027 Move [X22+8], X21
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srai_epi16(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03727150 STP X0, X1, [X31 + 0x28]
	0x03727154 STP V0, V0, [X31]
	0x00000000 INVALID
	0x0372715C ADD X10, X10, 0x1
	0x03727160 CMP X10, 0x4
	0x03727164 STR X13, [X11], #0x8
	0x03727168 B.NE 0x3727158
	0x0372716C LDP V1, V0, [X31]
	0x03727170 STP V1, V0, [X8]
	0x03727174 LDR X8, [X9 + 0x28]
	0x03727178 LDR X9, [X31 + 0x38]
	0x0372717C CMP X8, X9
	0x03727180 B.NE 0x3727190
	0x03727184 LDR X30, [X31 + 0x40]
	0x03727188 ADD X31, X31, 0x50
	0x0372718C RET
	0x03727190 BL 0x3EB1B20
	0x03727194 SUB X31, X31, 0x50
	0x03727198 STR X30, [X31 + 0x40]
	0x0372719C MRS X9, 0xC000
	0x037271A0 LDR X12, [X9 + 0x28]
	0x037271A4 MOV X10, X31
	0x037271A8 ADD X11, X31, 0x0
	0x037271AC MOVI V0.2D, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.srai_epi16, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.srai_epi16, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srai_epi32(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x037271B0 STR X12, [X31 + 0x38]
	0x037271B4 ADD X12, X31, 0x28
	0x037271B8 STP X0, X1, [X31 + 0x28]
	0x037271BC STP V0, V0, [X31]
	0x037271C0 LDRSH W13, [X12, X10, LSL]
	0x037271C4 ADD X10, X10, 0x2
	0x037271C8 CMP X10, 0x10
	0x037271CC STR W13, [X11], #0x4
	0x037271D0 B.NE 0x37271C0
	0x037271D4 LDP V1, V0, [X31]
	0x037271D8 STP V1, V0, [X8]
	0x037271DC LDR X8, [X9 + 0x28]
	0x037271E0 LDR X9, [X31 + 0x38]
	0x037271E4 CMP X8, X9
	0x037271E8 B.NE 0x37271F8
	0x037271EC LDR X30, [X31 + 0x40]
	0x037271F0 ADD X31, X31, 0x50
	0x037271F4 RET
	0x037271F8 BL 0x3EB1B20
	0x037271FC SUB X31, X31, 0x50
	0x03727200 STR X30, [X31 + 0x40]
	0x03727204 MRS X9, 0xC000
	0x03727208 LDR X12, [X9 + 0x28]
	0x0372720C MOV X10, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.srai_epi32, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.srai_epi32, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srav_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 count)

Disassembly:
	0x03727210 ADD X11, X31, 0x0
	0x03727214 MOVI V0.2D, 0x0
	0x03727218 STR X12, [X31 + 0x38]
	0x0372721C ADD X12, X31, 0x28
	0x03727220 STP X0, X1, [X31 + 0x28]
	0x03727224 STP V0, V0, [X31]
	0x03727228 LDRSH X13, [X12, X10, LSL]
	0x0372722C ADD X10, X10, 0x2
	0x03727230 CMP X10, 0x8
	0x03727234 STR X13, [X11], #0x8
	0x03727238 B.NE 0x3727228
	0x0372723C LDP V1, V0, [X31]
	0x03727240 STP V1, V0, [X8]
	0x03727244 LDR X8, [X9 + 0x28]
	0x03727248 LDR X9, [X31 + 0x38]
	0x0372724C CMP X8, X9
	0x03727250 B.NE 0x3727260
	0x03727254 LDR X30, [X31 + 0x40]
	0x03727258 ADD X31, X31, 0x50
	0x0372725C RET
	0x03727260 BL 0x3EB1B20
	0x03727264 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X21, X8
	013 Call Avx2.srav_epi32, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X2, [X19+16]
	018 Move X3, [X19+24]
	019 Move X19, X1
	020 Move X1, X8
	021 Call Avx2.srav_epi32, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X19
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v128 srav_epi32(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x03727268 STR X30, [X31 + 0x40]
	0x0372726C MRS X9, 0xC000
	0x03727270 LDR X12, [X9 + 0x28]
	0x03727274 MOV X10, X31
	0x03727278 ADD X11, X31, 0x0
	0x0372727C MOVI V0.2D, 0x0
	0x03727280 STR X12, [X31 + 0x38]
	0x03727284 ADD X12, X31, 0x28
	0x03727288 STP X0, X1, [X31 + 0x28]
	0x0372728C STP V0, V0, [X31]
	0x03727290 LDRSW X13, [X12, X10, LSL]
	0x03727294 ADD X10, X10, 0x4
	0x03727298 CMP X10, 0x10
	0x0372729C STR X13, [X11], #0x8
	0x037272A0 B.NE 0x3727290
	0x037272A4 LDP V1, V0, [X31]
	0x037272A8 STP V1, V0, [X8]
	0x037272AC LDR X8, [X9 + 0x28]
	0x037272B0 LDR X9, [X31 + 0x38]
	0x037272B4 CMP X8, X9
	0x037272B8 B.NE 0x37272C8
	0x037272BC LDR X30, [X31 + 0x40]
	0x037272C0 ADD X31, X31, 0x50
	0x037272C4 RET
	0x037272C8 BL 0x3EB1B20
	0x037272CC SUB X31, X31, 0x50
	0x037272D0 STR X30, [X31 + 0x40]
	0x037272D4 MRS X9, 0xC000
	0x037272D8 LDR X12, [X9 + 0x28]
	0x037272DC MOV X10, X31
	0x037272E0 ADD X11, X31, 0x0
	0x037272E4 MOVI V0.2D, 0x0
	0x037272E8 STR X12, [X31 + 0x38]
	0x037272EC ADD X12, X31, 0x28
	0x037272F0 STP X0, X1, [X31 + 0x28]
	0x037272F4 STP V0, V0, [X31]
	0x037272F8 LDRB W13, [X12, X10, LSL]
	0x037272FC ADD X10, X10, 0x1
	0x03727300 CMP X10, 0x10
	0x03727304 STRH W13, [X11], #0x2
	0x03727308 B.NE 0x37272F8
	0x0372730C LDP V1, V0, [X31]
	0x03727310 STP V1, V0, [X8]
	0x03727314 LDR X8, [X9 + 0x28]
	0x03727318 LDR X9, [X31 + 0x38]
	0x0372731C CMP X8, X9
	0x03727320 B.NE 0x3727330
	0x03727324 LDR X30, [X31 + 0x40]
	0x03727328 ADD X31, X31, 0x50
	0x0372732C RET
	0x03727330 BL 0x3EB1B20
	0x03727334 SUB X31, X31, 0x50
	0x03727338 STR X30, [X31 + 0x40]
	0x0372733C MRS X9, 0xC000
	0x03727340 LDR X12, [X9 + 0x28]
	0x03727344 MOV X10, X31
	0x03727348 ADD X11, X31, 0x0
	0x0372734C MOVI V0.2D, 0x0
	0x03727350 STR X12, [X31 + 0x38]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X20+40]
	012 Move X19, 0xCBA000
	013 Move [X31+56], X8
	014 Move W8, [X19+3162]
	015 Move [X31+40], X0
	016 Move [X31+48], X1
	017 Move [X31+24], X2
	018 Move [X31+32], X3
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x9CD000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+3162], W8
	028 Move X22, 0x9CD000
	029 Move X22, [X22+1448]
	030 Move X21, X31
	031 Add X23, X31, 24
	032 Add X24, X31, 40
	033 Add X25, X31, 8
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move X0, [X22]
	037 Move W19, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move W1, 32
	043 Move W0, W19
	044 Move X2, X31
	045 Call Math.Min, X0, X1
	046 Move W9, [X24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W8, W0, 16
	049 NotImplemented "Instruction CSET not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Move X10, X10
	053 ShiftRight X10, 60
	054 And X10, X10, 0x7FFFFFF
	055 NotImplemented "Instruction ASRV not yet implemented."
	056 NotImplemented "Instruction ASRV not yet implemented."
	057 Move [X25], W8
	058 Add X21, X21, 4
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X31+8]
	061 Move X1, [X31+16]
	062 Move X8, [X20+40]
	063 Move X9, [X31+56]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, [X31+112]
	066 Move X19, [X31+120]
	067 Move X22, [X31+96]
	068 Move X21, [X31+104]
	069 Move X24, [X31+80]
	070 Move X23, [X31+88]
	071 Move X30, [X31+64]
	072 Move X25, [X31+72]
	073 Add X31, X31, 128
	074 Return X0
	075 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_srl_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x03727354 ADD X12, X31, 0x28
	0x03727358 STP X0, X1, [X31 + 0x28]
	0x0372735C STP V0, V0, [X31]
	0x03727360 LDRB W13, [X12, X10, LSL]
	0x03727364 ADD X10, X10, 0x1
	0x03727368 CMP X10, 0x8
	0x0372736C STR W13, [X11], #0x4
	0x03727370 B.NE 0x3727360
	0x03727374 LDP V1, V0, [X31]
	0x03727378 STP V1, V0, [X8]
	0x0372737C LDR X8, [X9 + 0x28]
	0x03727380 LDR X9, [X31 + 0x38]
	0x03727384 CMP X8, X9
	0x03727388 B.NE 0x3727398
	0x0372738C LDR X30, [X31 + 0x40]
	0x03727390 ADD X31, X31, 0x50
	0x03727394 RET
	0x03727398 BL 0x3EB1B20
	0x0372739C SUB X31, X31, 0x50
	0x037273A0 STR X30, [X31 + 0x40]
	0x037273A4 MRS X9, 0xC000
	0x037273A8 LDR X12, [X9 + 0x28]
	0x037273AC MOV X10, X31
	0x037273B0 ADD X11, X31, 0x0
	0x037273B4 MOVI V0.2D, 0x0
	0x037273B8 STR X12, [X31 + 0x38]
	0x037273BC ADD X12, X31, 0x28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X20, X1
	009 Move X0, [X0]
	010 Move X1, [X21+8]
	011 Move X19, X2
	012 Move X2, X20
	013 Move X3, X19
	014 Move X4, X31
	015 Move X22, X8
	016 Call Sse2.srl_epi16, X0, X1
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X21, X1
	021 Move X2, X20
	022 Move X3, X19
	023 Move X1, X8
	024 Move X4, X31
	025 Call Sse2.srl_epi16, X0, X1
	026 Move [X22], X23
	027 Move [X22+8], X21
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srl_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x037273C0 STP X0, X1, [X31 + 0x28]
	0x037273C4 STP V0, V0, [X31]
	0x037273C8 LDRB W13, [X12, X10, LSL]
	0x037273CC ADD X10, X10, 0x1
	0x037273D0 CMP X10, 0x4
	0x037273D4 STR X13, [X11], #0x8
	0x037273D8 B.NE 0x37273C8
	0x037273DC LDP V1, V0, [X31]
	0x037273E0 STP V1, V0, [X8]
	0x037273E4 LDR X8, [X9 + 0x28]
	0x037273E8 LDR X9, [X31 + 0x38]
	0x037273EC CMP X8, X9
	0x037273F0 B.NE 0x3727400
	0x037273F4 LDR X30, [X31 + 0x40]
	0x037273F8 ADD X31, X31, 0x50
	0x037273FC RET
	0x03727400 BL 0x3EB1B20
	0x03727404 SUB X31, X31, 0x50
	0x03727408 STR X30, [X31 + 0x40]
	0x0372740C MRS X9, 0xC000
	0x03727410 LDR X12, [X9 + 0x28]
	0x03727414 MOV X10, X31
	0x03727418 ADD X11, X31, 0x0
	0x0372741C MOVI V0.2D, 0x0
	0x03727420 STR X12, [X31 + 0x38]
	0x03727424 ADD X12, X31, 0x28
	0x03727428 STP X0, X1, [X31 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X20, X1
	009 Move X0, [X0]
	010 Move X1, [X21+8]
	011 Move X19, X2
	012 Move X2, X20
	013 Move X3, X19
	014 Move X4, X31
	015 Move X22, X8
	016 Call Sse2.srl_epi32, X0, X1
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X21, X1
	021 Move X2, X20
	022 Move X3, X19
	023 Move X1, X8
	024 Move X4, X31
	025 Call Sse2.srl_epi32, X0, X1
	026 Move [X22], X23
	027 Move [X22+8], X21
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srl_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x0372742C STP V0, V0, [X31]
	0x03727430 LDRH W13, [X12, X10, LSL]
	0x03727434 ADD X10, X10, 0x2
	0x03727438 CMP X10, 0x10
	0x0372743C STR W13, [X11], #0x4
	0x03727440 B.NE 0x3727430
	0x03727444 LDP V1, V0, [X31]
	0x03727448 STP V1, V0, [X8]
	0x0372744C LDR X8, [X9 + 0x28]
	0x03727450 LDR X9, [X31 + 0x38]
	0x03727454 CMP X8, X9
	0x03727458 B.NE 0x3727468
	0x0372745C LDR X30, [X31 + 0x40]
	0x03727460 ADD X31, X31, 0x50
	0x03727464 RET
	0x03727468 BL 0x3EB1B20
	0x0372746C SUB X31, X31, 0x50
	0x03727470 STR X30, [X31 + 0x40]
	0x03727474 MRS X9, 0xC000
	0x03727478 LDR X12, [X9 + 0x28]
	0x0372747C MOV X10, X31
	0x03727480 ADD X11, X31, 0x0
	0x03727484 MOVI V0.2D, 0x0
	0x03727488 STR X12, [X31 + 0x38]
	0x0372748C ADD X12, X31, 0x28
	0x03727490 STP X0, X1, [X31 + 0x28]
	0x03727494 STP V0, V0, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X20, X1
	009 Move X0, [X0]
	010 Move X1, [X21+8]
	011 Move X19, X2
	012 Move X2, X20
	013 Move X3, X19
	014 Move X4, X31
	015 Move X22, X8
	016 Call Sse2.srl_epi64, X0, X1
	017 Move X23, X0
	018 Move X0, [X21+16]
	019 Move X8, [X21+24]
	020 Move X21, X1
	021 Move X2, X20
	022 Move X3, X19
	023 Move X1, X8
	024 Move X4, X31
	025 Call Sse2.srl_epi64, X0, X1
	026 Move [X22], X23
	027 Move [X22+8], X21
	028 Move [X22+16], X0
	029 Move [X22+24], X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srli_epi16(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03727498 LDRH W13, [X12, X10, LSL]
	0x0372749C ADD X10, X10, 0x2
	0x037274A0 CMP X10, 0x8
	0x037274A4 STR X13, [X11], #0x8
	0x037274A8 B.NE 0x3727498
	0x037274AC LDP V1, V0, [X31]
	0x037274B0 STP V1, V0, [X8]
	0x037274B4 LDR X8, [X9 + 0x28]
	0x037274B8 LDR X9, [X31 + 0x38]
	0x037274BC CMP X8, X9
	0x037274C0 B.NE 0x37274D0
	0x037274C4 LDR X30, [X31 + 0x40]
	0x037274C8 ADD X31, X31, 0x50
	0x037274CC RET
	0x037274D0 BL 0x3EB1B20
	0x037274D4 SUB X31, X31, 0x50
	0x037274D8 STR X30, [X31 + 0x40]
	0x037274DC MRS X9, 0xC000
	0x037274E0 LDR X12, [X9 + 0x28]
	0x037274E4 MOV X10, X31
	0x037274E8 ADD X11, X31, 0x0
	0x037274EC MOVI V0.2D, 0x0
	0x037274F0 STR X12, [X31 + 0x38]
	0x037274F4 ADD X12, X31, 0x28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.srli_epi16, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.srli_epi16, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srli_epi32(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x037274F8 STP X0, X1, [X31 + 0x28]
	0x037274FC STP V0, V0, [X31]
	0x03727500 LDR W13, [X12, X10, LSL]
	0x03727504 ADD X10, X10, 0x4
	0x03727508 CMP X10, 0x10
	0x0372750C STR X13, [X11], #0x8
	0x03727510 B.NE 0x3727500
	0x03727514 LDP V1, V0, [X31]
	0x03727518 STP V1, V0, [X8]
	0x0372751C LDR X8, [X9 + 0x28]
	0x03727520 LDR X9, [X31 + 0x38]
	0x03727524 CMP X8, X9
	0x03727528 B.NE 0x3727538
	0x0372752C LDR X30, [X31 + 0x40]
	0x03727530 ADD X31, X31, 0x50
	0x03727534 RET
	0x03727538 BL 0x3EB1B20
	0x0372753C SUB X31, X31, 0x40
	0x03727540 STR X30, [X31 + 0x30]
	0x03727544 MRS X8, 0xC000
	0x03727548 LDR X11, [X8 + 0x28]
	0x0372754C MOV X9, X31
	0x03727550 ADD X10, X31, 0x18
	0x03727554 STR X11, [X31 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.srli_epi32, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.srli_epi32, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srli_epi64(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03727558 ADD X11, X31, 0x8
	0x0372755C STP X1, X2, [X31 + 0x18]
	0x03727560 STP X31, X31, [X31 + 0x8]
	0x03727564 LDR W12, [X10, X9, LSL]
	0x03727568 TBZ X12, 0x1F, 0x3727574
	0x0372756C LDR W12, [X0, X9, LSL]
	0x03727570 STR W12, [X11, X9, LSL]
	0x03727574 ADD X9, X9, 0x4
	0x03727578 CMP X9, 0x10
	0x0372757C B.NE 0x3727564
	0x03727580 LDP X0, X1, [X31 + 0x8]
	0x03727584 LDR X8, [X8 + 0x28]
	0x03727588 LDR X9, [X31 + 0x28]
	0x0372758C CMP X8, X9
	0x03727590 B.NE 0x37275A0
	0x03727594 LDR X30, [X31 + 0x30]
	0x03727598 ADD X31, X31, 0x40
	0x0372759C RET
	0x037275A0 BL 0x3EB1B20
	0x037275A4 SUB X31, X31, 0x40
	0x037275A8 STR X30, [X31 + 0x30]
	0x037275AC MRS X8, 0xC000
	0x037275B0 LDR X11, [X8 + 0x28]
	0x037275B4 MOV X9, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.srli_epi64, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.srli_epi64, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srlv_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 count)

Disassembly:
	0x037275B8 MOVZ W12, 0x1
	0x037275BC ADD X10, X31, 0x18
	0x037275C0 STR X11, [X31 + 0x28]
	0x037275C4 ADD X11, X31, 0x8
	0x037275C8 STP X1, X2, [X31 + 0x18]
	0x037275CC STP X31, X31, [X31 + 0x8]
	0x037275D0 LDR X14, [X9, X10, LSL]
	0x037275D4 MOV W13, W12
	0x037275D8 TBZ X14, 0x0, 0x37275E4
	0x037275DC LDR X12, [X9, X0, LSL]
	0x037275E0 STR X12, [X9, X11, LSL]
	0x037275E4 MOV W12, W31
	0x037275E8 MOVZ W9, 0x8
	0x037275EC TBNZ X13, 0x0, 0x37275D0
	0x037275F0 LDP X0, X1, [X31 + 0x8]
	0x037275F4 LDR X8, [X8 + 0x28]
	0x037275F8 LDR X9, [X31 + 0x28]
	0x037275FC CMP X8, X9
	0x03727600 B.NE 0x3727610
	0x03727604 LDR X30, [X31 + 0x30]
	0x03727608 ADD X31, X31, 0x40
	0x0372760C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X21, X8
	013 Call Avx2.srlv_epi32, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X2, [X19+16]
	018 Move X3, [X19+24]
	019 Move X19, X1
	020 Move X1, X8
	021 Call Avx2.srlv_epi32, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X19
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_srlv_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 count)

Disassembly:
	0x03727690 ADD X11, X31, 0x8
	0x03727694 STR X10, [X31 + 0x28]
	0x03727698 ADD X10, X31, 0x18
	0x0372769C STP X1, X2, [X31 + 0x18]
	0x037276A0 STP X3, X4, [X31 + 0x8]
	0x037276A4 LDR X14, [X9, X10, LSL]
	0x037276A8 MOV W13, W12
	0x037276AC TBZ X14, 0x0, 0x37276B8
	0x037276B0 LDR X12, [X9, X11, LSL]
	0x037276B4 STR X12, [X9, X0, LSL]
	0x037276B8 MOV W12, W31
	0x037276BC MOVZ W9, 0x8
	0x037276C0 TBNZ X13, 0x0, 0x37276A4
	0x037276C4 LDR X8, [X8 + 0x28]
	0x037276C8 LDR X9, [X31 + 0x28]
	0x037276CC CMP X8, X9
	0x037276D0 B.NE 0x37276E0
	0x037276D4 LDR X30, [X31 + 0x30]
	0x037276D8 ADD X31, X31, 0x40
	0x037276DC RET
	0x037276E0 BL 0x3EB1B20
	0x037276E4 SUB X31, X31, 0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X21, X8
	013 Call Avx2.srlv_epi64, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X2, [X19+16]
	018 Move X3, [X19+24]
	019 Move X19, X1
	020 Move X1, X8
	021 Call Avx2.srlv_epi64, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X19
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v128 srlv_epi32(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x03727610 BL 0x3EB1B20
	0x03727614 SUB X31, X31, 0x40
	0x03727618 STR X30, [X31 + 0x30]
	0x0372761C MRS X8, 0xC000
	0x03727620 LDR X11, [X8 + 0x28]
	0x03727624 MOV X9, X31
	0x03727628 ADD X10, X31, 0x18
	0x0372762C STR X11, [X31 + 0x28]
	0x03727630 ADD X11, X31, 0x8
	0x03727634 STP X1, X2, [X31 + 0x18]
	0x03727638 STP X3, X4, [X31 + 0x8]
	0x0372763C LDR W12, [X10, X9, LSL]
	0x03727640 TBZ X12, 0x1F, 0x372764C
	0x03727644 LDR W12, [X11, X9, LSL]
	0x03727648 STR W12, [X0, X9, LSL]
	0x0372764C ADD X9, X9, 0x4
	0x03727650 CMP X9, 0x10
	0x03727654 B.NE 0x372763C
	0x03727658 LDR X8, [X8 + 0x28]
	0x0372765C LDR X9, [X31 + 0x28]
	0x03727660 CMP X8, X9
	0x03727664 B.NE 0x3727674
	0x03727668 LDR X30, [X31 + 0x30]
	0x0372766C ADD X31, X31, 0x40
	0x03727670 RET
	0x03727674 BL 0x3EB1B20
	0x03727678 SUB X31, X31, 0x40
	0x0372767C STR X30, [X31 + 0x30]
	0x03727680 MRS X8, 0xC000
	0x03727684 LDR X10, [X8 + 0x28]
	0x03727688 MOV X9, X31
	0x0372768C MOVZ W12, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X8+40]
	005 Move X9, X31
	006 Add X11, X31, 8
	007 Add X12, X31, 40
	008 Move [X31+56], X10
	009 Add X10, X31, 24
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31+24], X2
	013 Move [X31+32], X3
	014 Move [X31+8], X31
	015 Move [X31+16], X31
	016 Move W13, [X10]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W13, W31
	019 Move W14, [X12]
	020 NotImplemented "Instruction LSRV not yet implemented."
	021 Move [X11], W13
	022 Add X9, X9, 4
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, [X31+8]
	025 Move X1, [X31+16]
	026 Move X8, [X8+40]
	027 Move X9, [X31+56]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X30, [X31+64]
	030 Add X31, X31, 80
	031 Return X0
	032 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 srlv_epi64(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 count)

Disassembly:
	0x037276E8 STR X30, [X31 + 0x30]
	0x037276EC MRS X9, 0xC000
	0x037276F0 LDR X11, [X9 + 0x28]
	0x037276F4 MOV X10, X31
	0x037276F8 MOVI V0.2D, 0x0
	0x037276FC STR X11, [X31 + 0x28]
	0x03727700 ADD X11, X31, 0x0
	0x03727704 STP V0, V0, [X31]
	0x03727708 LDR W12, [X1, X10, LSL]
	0x0372770C TBZ X12, 0x1F, 0x3727718
	0x03727710 LDR W12, [X0, X10, LSL]
	0x03727714 STR W12, [X11, X10, LSL]
	0x03727718 ADD X10, X10, 0x4
	0x0372771C CMP X10, 0x20
	0x03727720 B.NE 0x3727708
	0x03727724 LDP V1, V0, [X31]
	0x03727728 STP V1, V0, [X8]
	0x0372772C LDR X8, [X9 + 0x28]
	0x03727730 LDR X9, [X31 + 0x28]
	0x03727734 CMP X8, X9
	0x03727738 B.NE 0x3727748
	0x0372773C LDR X30, [X31 + 0x30]
	0x03727740 ADD X31, X31, 0x40
	0x03727744 RET
	0x03727748 BL 0x3EB1B20
	0x0372774C SUB X31, X31, 0x40

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, X1
	007 Move X1, X31
	008 Move [X31+56], X10
	009 NotImplemented "Instruction LSRV not yet implemented."
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X31+40], X0
	013 Move [X31+48], X8
	014 Move [X31+24], X2
	015 Move [X31+32], X3
	016 Move [X31+8], X10
	017 Move [X31+16], X31
	018 Move X8, [X31+48]
	019 NotImplemented "Instruction LSRV not yet implemented."
	020 Move X0, [X31+8]
	021 Move X8, [X9+40]
	022 Move X9, [X31+56]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X30, [X31+64]
	025 Add X31, X31, 80
	026 Return X0
	027 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 blend_epi32(Unity.Burst.Intrinsics.v128 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03727750 STR X30, [X31 + 0x30]
	0x03727754 MRS X9, 0xC000

ISIL:
	001 Move X5, X31
	002 Call Sse4_1.blend_ps, X0, X1, X2
	003 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_blend_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x03727758 LDR X11, [X9 + 0x28]
	0x0372775C MOV X10, X31
	0x03727760 MOVI V0.2D, 0x0
	0x03727764 STR X11, [X31 + 0x28]
	0x03727768 ADD X11, X31, 0x0
	0x0372776C STP V0, V0, [X31]
	0x03727770 LDR X12, [X1, X10, LSL]
	0x03727774 TBZ X12, 0x0, 0x3727780
	0x03727778 LDR X12, [X0, X10, LSL]
	0x0372777C STR X12, [X11, X10, LSL]
	0x03727780 ADD X10, X10, 0x8
	0x03727784 CMP X10, 0x20
	0x03727788 B.NE 0x3727770
	0x0372778C LDP V1, V0, [X31]
	0x03727790 STP V1, V0, [X8]
	0x03727794 LDR X8, [X9 + 0x28]
	0x03727798 LDR X9, [X31 + 0x28]
	0x0372779C CMP X8, X9
	0x037277A0 B.NE 0x37277B0
	0x037277A4 LDR X30, [X31 + 0x30]
	0x037277A8 ADD X31, X31, 0x40
	0x037277AC RET
	0x037277B0 BL 0x3EB1B20
	0x037277B4 MOV X8, X31
	0x037277B8 LDR W9, [X1, X8, LSL]
	0x037277BC TBZ X9, 0x1F, 0x37277C8
	0x037277C0 LDR W9, [X2, X8, LSL]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+128], X20
	004 Move [X31+136], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X19, X8
	007 Move X8, [X20+40]
	008 Move [X31+104], X8
	009 Move V1, [X0]
	010 Move V0, [X0+16]
	011 Add X8, X31, 72
	012 Add X0, X31, 32
	013 Move [X31+32], V1
	014 Move [X31+40], V0
	015 Move V1, [X1]
	016 Move V0, [X1+16]
	017 Add X1, X31, 0
	018 Move [X31], V1
	019 Move [X31+8], V0
	020 Call Avx.mm256_blend_ps, X0, X1, X2
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move [X19], V1
	024 Move [X19+8], V0
	025 Move X8, [X20+40]
	026 Move X9, [X31+104]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+128]
	029 Move X19, [X31+136]
	030 Move X30, [X31+112]
	031 Add X31, X31, 144
	032 Return X0
	033 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_alignr_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x037277C4 STR W9, [X0, X8, LSL]
	0x037277C8 ADD X8, X8, 0x4
	0x037277CC CMP X8, 0x20
	0x037277D0 B.NE 0x37277B8
	0x037277D4 RET
	0x037277D8 MOV X8, X31
	0x037277DC LDR X9, [X1, X8, LSL]
	0x037277E0 TBZ X9, 0x0, 0x37277EC
	0x037277E4 LDR X9, [X2, X8, LSL]
	0x037277E8 STR X9, [X0, X8, LSL]
	0x037277EC ADD X8, X8, 0x8
	0x037277F0 CMP X8, 0x20
	0x037277F4 B.NE 0x37277DC
	0x037277F8 RET
	0x037277FC SUB X31, X31, 0x40
	0x03727800 STR X30, [X31 + 0x30]
	0x03727804 MRS X9, 0xC000
	0x03727808 LDR X11, [X9 + 0x28]
	0x0372780C MOV X10, X31
	0x03727810 MOVI V0.2D, 0x0
	0x03727814 STR X11, [X31 + 0x28]
	0x03727818 ADD X11, X31, 0x0
	0x0372781C STP V0, V0, [X31]
	0x03727820 LDR W12, [X1, X10, LSL]
	0x03727824 UBFM W12, W12, 0x1E, 0x1D
	0x03727828 AND X12, X12, 0x1F
	0x0372782C LDR W12, [X12, X0, LSL]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X1
	008 Move X21, X0
	009 Move W19, W2
	010 Move X0, [X0]
	011 Move X1, [X21+8]
	012 Move X2, [X20]
	013 Move X3, [X20+8]
	014 Move W4, W19
	015 Move X5, X31
	016 Move X22, X8
	017 Call Ssse3.alignr_epi8, X0, X1, X2
	018 Move X23, X0
	019 Move X0, [X21+16]
	020 Move X8, [X21+24]
	021 Move X2, [X20+16]
	022 Move X3, [X20+24]
	023 Move X20, X1
	024 Move W4, W19
	025 Move X1, X8
	026 Move X5, X31
	027 Call Ssse3.alignr_epi8, X0, X1, X2
	028 Move [X22], X23
	029 Move [X22+8], X20
	030 Move [X22+16], X0
	031 Move [X22+24], X1
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_blendv_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, Unity.Burst.Intrinsics.v256 mask)

Disassembly:
	0x03727830 STR W12, [X11, X10, LSL]
	0x03727834 ADD X10, X10, 0x4
	0x03727838 CMP X10, 0x20
	0x0372783C B.NE 0x3727820
	0x03727840 LDP V1, V0, [X31]
	0x03727844 STP V1, V0, [X8]
	0x03727848 LDR X8, [X9 + 0x28]
	0x0372784C LDR X9, [X31 + 0x28]
	0x03727850 CMP X8, X9
	0x03727854 B.NE 0x3727864
	0x03727858 LDR X30, [X31 + 0x30]
	0x0372785C ADD X31, X31, 0x40
	0x03727860 RET
	0x03727864 BL 0x3EB1B20
	0x03727868 SUB X31, X31, 0x80
	0x0372786C STR X30, [X31 + 0x70]
	0x03727870 MRS X9, 0xC000
	0x03727874 LDR X11, [X9 + 0x28]
	0x03727878 MOV X10, X31
	0x0372787C MOVI V2.2D, 0x0
	0x03727880 ADD X12, X31, 0x20
	0x03727884 STR X11, [X31 + 0x68]
	0x03727888 LDP V1, V0, [X0]
	0x0372788C ADD X11, X31, 0x0
	0x03727890 ADD X13, X31, 0x40
	0x03727894 STP V1, V0, [X31 + 0x20]
	0x03727898 LDP V0, V1, [X1]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Move X0, [X0]
	011 Move X1, [X21+8]
	012 Move X2, [X20]
	013 Move X3, [X20+8]
	014 Move X4, [X19]
	015 Move X5, [X19+8]
	016 Move X6, X31
	017 Move X22, X8
	018 Call Sse4_1.blendv_epi8, X0, X1, X2
	019 Move X23, X0
	020 Move X0, [X21+16]
	021 Move X8, [X21+24]
	022 Move X2, [X20+16]
	023 Move X3, [X20+24]
	024 Move X4, [X19+16]
	025 Move X5, [X19+24]
	026 Move X19, X1
	027 Move X1, X8
	028 Move X6, X31
	029 Call Sse4_1.blendv_epi8, X0, X1, X2
	030 Move [X22], X23
	031 Move [X22+8], X19
	032 Move [X22+16], X0
	033 Move [X22+24], X1
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_blend_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x0372789C STP V2, V2, [X31 + 0x40]
	0x037278A0 STP V0, V1, [X31]
	0x037278A4 LDR W14, [X11, X10, LSL]
	0x037278A8 UBFM W14, W14, 0x1E, 0x1D
	0x037278AC AND X14, X14, 0x1F
	0x037278B0 LDR W14, [X14, X12, LSL]
	0x037278B4 STR W14, [X13, X10, LSL]
	0x037278B8 ADD X10, X10, 0x4
	0x037278BC CMP X10, 0x20
	0x037278C0 B.NE 0x37278A4
	0x037278C4 LDP V1, V0, [X31 + 0x40]
	0x037278C8 STP V1, V0, [X8]
	0x037278CC LDR X8, [X9 + 0x28]
	0x037278D0 LDR X9, [X31 + 0x68]
	0x037278D4 CMP X8, X9
	0x037278D8 B.NE 0x37278E8
	0x037278DC LDR X30, [X31 + 0x70]
	0x037278E0 ADD X31, X31, 0x80
	0x037278E4 RET
	0x037278E8 BL 0x3EB1B20
	0x037278EC SUB X31, X31, 0x40
	0x037278F0 STR X30, [X31 + 0x30]
	0x037278F4 MRS X9, 0xC000
	0x037278F8 LDR X11, [X9 + 0x28]
	0x037278FC MOV X10, X31
	0x03727900 MOVI V0.2D, 0x0
	0x03727904 STR X11, [X31 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X1
	008 Move X21, X0
	009 Move W19, W2
	010 Move X0, [X0]
	011 Move X1, [X21+8]
	012 Move X2, [X20]
	013 Move X3, [X20+8]
	014 Move W4, W19
	015 Move X5, X31
	016 Move X22, X8
	017 Call Sse4_1.blend_epi16, X0, X1, X2
	018 Move X23, X0
	019 Move X0, [X21+16]
	020 Move X8, [X21+24]
	021 Move X2, [X20+16]
	022 Move X3, [X20+24]
	023 Move X20, X1
	024 Move W4, W19
	025 Move X1, X8
	026 Move X5, X31
	027 Call Sse4_1.blend_epi16, X0, X1, X2
	028 Move [X22], X23
	029 Move [X22+8], X20
	030 Move [X22+16], X0
	031 Move [X22+24], X1
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_packs_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727908 ADD X11, X31, 0x0
	0x0372790C STP V0, V0, [X31]
	0x03727910 UBFM W12, W1, 0x1D, 0x1C
	0x03727914 AND X12, X12, 0x1F
	0x03727918 LDR X12, [X12, X0, LSL]
	0x0372791C SBFM W1, W1, 0x2, 0x1F
	0x03727920 STR X12, [X11, X10, LSL]
	0x03727924 ADD X10, X10, 0x8
	0x03727928 CMP X10, 0x20
	0x0372792C B.NE 0x3727910
	0x03727930 LDP V1, V0, [X31]
	0x03727934 STP V1, V0, [X8]
	0x03727938 LDR X8, [X9 + 0x28]
	0x0372793C LDR X9, [X31 + 0x28]
	0x03727940 CMP X8, X9
	0x03727944 B.NE 0x3727954
	0x03727948 LDR X30, [X31 + 0x30]
	0x0372794C ADD X31, X31, 0x40
	0x03727950 RET
	0x03727954 BL 0x3EB1B20
	0x03727958 SUB X31, X31, 0x60
	0x0372795C STR X30, [X31 + 0x50]
	0x03727960 MRS X9, 0xC000
	0x03727964 LDR X11, [X9 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.packs_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.packs_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_packs_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727968 MOV X10, X31
	0x0372796C MOVI V0.2D, 0x0
	0x03727970 ADD X12, X31, 0x20
	0x03727974 STR X11, [X31 + 0x48]
	0x03727978 LDP V1, V2, [X0]
	0x0372797C ADD X11, X31, 0x0
	0x03727980 STP V0, V0, [X31 + 0x20]
	0x03727984 STP V1, V2, [X31]
	0x03727988 UBFM W13, W1, 0x1D, 0x1C
	0x0372798C AND X13, X13, 0x1F
	0x03727990 LDR X13, [X13, X11, LSL]
	0x03727994 SBFM W1, W1, 0x2, 0x1F
	0x03727998 STR X13, [X12, X10, LSL]
	0x0372799C ADD X10, X10, 0x8
	0x037279A0 CMP X10, 0x20
	0x037279A4 B.NE 0x3727988
	0x037279A8 LDP V1, V0, [X31 + 0x20]
	0x037279AC STP V1, V0, [X8]
	0x037279B0 LDR X8, [X9 + 0x28]
	0x037279B4 LDR X9, [X31 + 0x48]
	0x037279B8 CMP X8, X9
	0x037279BC B.NE 0x37279CC
	0x037279C0 LDR X30, [X31 + 0x50]
	0x037279C4 ADD X31, X31, 0x60

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.packs_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.packs_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_packus_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x037279C8 RET
	0x037279CC BL 0x3EB1B20
	0x037279D0 LDP X9, X10, [X0]
	0x037279D4 LDP X11, X12, [X0 + 0x10]
	0x037279D8 LDP X16, X17, [X1]
	0x037279DC LDP X13, X14, [X1 + 0x10]
	0x037279E0 ANDS W1, W2, 0x3
	0x037279E4 MOV X15, X9
	0x037279E8 MOV X0, X10
	0x037279EC B.EQ 0x3727A18
	0x037279F0 CMP W1, 0x2
	0x037279F4 MOV X15, X16
	0x037279F8 MOV X0, X17
	0x037279FC B.EQ 0x3727A18
	0x03727A00 CMP W1, 0x1
	0x03727A04 MOV X15, X11
	0x03727A08 MOV X0, X12
	0x03727A0C B.EQ 0x3727A18
	0x03727A10 MOV X15, X13
	0x03727A14 MOV X0, X14
	0x03727A18 UBFM W1, W2, 0x4, 0x5
	0x03727A1C CBZ W1, 0x3727A48
	0x03727A20 CMP W1, 0x2
	0x03727A24 MOV X9, X16

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.packus_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.packus_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_packus_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727A28 MOV X10, X17
	0x03727A2C B.EQ 0x3727A48
	0x03727A30 CMP W1, 0x1
	0x03727A34 MOV X9, X11
	0x03727A38 MOV X10, X12
	0x03727A3C B.EQ 0x3727A48
	0x03727A40 MOV X9, X13
	0x03727A44 MOV X10, X14
	0x03727A48 STP X15, X0, [X8]
	0x03727A4C STP X9, X10, [X8 + 0x10]
	0x03727A50 RET
	0x03727A54 LDP V1, V0, [X0]
	0x03727A58 STP V1, V0, [X8]
	0x03727A5C RET
	0x03727A60 SUB X31, X31, 0x70
	0x03727A64 STP X30, X25, [X31 + 0x30]
	0x03727A68 STP X24, X23, [X31 + 0x40]
	0x03727A6C STP X22, X21, [X31 + 0x50]
	0x03727A70 STP X20, X19, [X31 + 0x60]
	0x03727A74 MRS X23, 0xC000
	0x03727A78 MOV X19, X8
	0x03727A7C LDR X8, [X23 + 0x28]
	0x03727A80 ADRP X25, 0xCB9000
	0x03727A84 ADRP X24, 0xA1D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse4_1.packus_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse4_1.packus_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpackhi_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727A88 MOV W20, W2
	0x03727A8C STR X8, [X31 + 0x28]
	0x03727A90 LDRB W8, [X25 + 0xC5B]
	0x03727A94 LDR X24, [X24 + 0xC18]
	0x03727A98 MOV X21, X1
	0x03727A9C MOV X22, X0
	0x03727AA0 TBNZ X8, 0x0, 0x3727AB8
	0x03727AA4 ADRP X0, 0xA1D000
	0x03727AA8 LDR X0, [X0 + 0xC18]
	0x03727AAC BL 0x1C16CF4
	0x03727AB0 MOVZ W8, 0x1
	0x03727AB4 STRB W8, [X25 + 0xC5B]
	0x03727AB8 LDR X6, [X24]
	0x03727ABC MOVI V0.2D, 0x0
	0x03727AC0 ADD X0, X31, 0x0
	0x03727AC4 MOVZ W4, 0x8
	0x03727AC8 MOV X1, X22
	0x03727ACC MOV X2, X21
	0x03727AD0 MOV W3, W20
	0x03727AD4 MOV X5, X31
	0x03727AD8 STP V0, V0, [X31]
	0x03727ADC BL 0x22B8860
	0x03727AE0 LDP V1, V0, [X31]
	0x03727AE4 STP V1, V0, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpackhi_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpackhi_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpackhi_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727AE8 LDR X8, [X23 + 0x28]
	0x03727AEC LDR X9, [X31 + 0x28]
	0x03727AF0 CMP X8, X9
	0x03727AF4 B.NE 0x3727B10
	0x03727AF8 LDP X20, X19, [X31 + 0x60]
	0x03727AFC LDP X22, X21, [X31 + 0x50]
	0x03727B00 LDP X24, X23, [X31 + 0x40]
	0x03727B04 LDP X30, X25, [X31 + 0x30]
	0x03727B08 ADD X31, X31, 0x70
	0x03727B0C RET
	0x03727B10 BL 0x3EB1B20
	0x03727B14 SUB X31, X31, 0x80
	0x03727B18 STR X30, [X31 + 0x40]
	0x03727B1C STP X24, X23, [X31 + 0x50]
	0x03727B20 STP X22, X21, [X31 + 0x60]
	0x03727B24 STP X20, X19, [X31 + 0x70]
	0x03727B28 MRS X22, 0xC000
	0x03727B2C MOV X19, X8
	0x03727B30 LDR X8, [X22 + 0x28]
	0x03727B34 ADRP X24, 0xCB9000
	0x03727B38 ADRP X23, 0xA1D000
	0x03727B3C MOV W20, W3
	0x03727B40 STR X8, [X31 + 0x38]
	0x03727B44 STP X1, X2, [X31 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpackhi_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpackhi_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpackhi_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727B48 LDRB W8, [X24 + 0xC5C]
	0x03727B4C LDR X23, [X23 + 0xC20]
	0x03727B50 MOV X21, X0
	0x03727B54 TBNZ X8, 0x0, 0x3727B6C
	0x03727B58 ADRP X0, 0xA1D000
	0x03727B5C LDR X0, [X0 + 0xC20]
	0x03727B60 BL 0x1C16CF4
	0x03727B64 MOVZ W8, 0x1
	0x03727B68 STRB W8, [X24 + 0xC5C]
	0x03727B6C LDR X6, [X23]
	0x03727B70 MOVI V0.2D, 0x0
	0x03727B74 ADD X0, X31, 0x0
	0x03727B78 ADD X2, X31, 0x28
	0x03727B7C MOVZ W4, 0x4
	0x03727B80 MOV X1, X21
	0x03727B84 MOV W3, W20
	0x03727B88 MOV X5, X31
	0x03727B8C STP V0, V0, [X31]
	0x03727B90 BL 0x22B8708
	0x03727B94 LDP V1, V0, [X31]
	0x03727B98 STP V1, V0, [X19]
	0x03727B9C LDR X8, [X22 + 0x28]
	0x03727BA0 LDR X9, [X31 + 0x38]
	0x03727BA4 CMP X8, X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpackhi_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpackhi_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpackhi_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727BA8 B.NE 0x3727BC4
	0x03727BAC LDP X20, X19, [X31 + 0x70]
	0x03727BB0 LDP X22, X21, [X31 + 0x60]
	0x03727BB4 LDP X24, X23, [X31 + 0x50]
	0x03727BB8 LDR X30, [X31 + 0x40]
	0x03727BBC ADD X31, X31, 0x80
	0x03727BC0 RET
	0x03727BC4 BL 0x3EB1B20
	0x03727BC8 SUB X31, X31, 0x70
	0x03727BCC STP X30, X25, [X31 + 0x30]
	0x03727BD0 STP X24, X23, [X31 + 0x40]
	0x03727BD4 STP X22, X21, [X31 + 0x50]
	0x03727BD8 STP X20, X19, [X31 + 0x60]
	0x03727BDC MRS X23, 0xC000
	0x03727BE0 MOV X19, X8
	0x03727BE4 LDR X8, [X23 + 0x28]
	0x03727BE8 ADRP X25, 0xCB9000
	0x03727BEC ADRP X24, 0xA1D000
	0x03727BF0 MOV W20, W2
	0x03727BF4 STR X8, [X31 + 0x28]
	0x03727BF8 LDRB W8, [X25 + 0xC5D]
	0x03727BFC LDR X24, [X24 + 0xC28]
	0x03727C00 MOV X21, X1
	0x03727C04 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpackhi_epi64, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpackhi_epi64, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpacklo_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727C08 TBNZ X8, 0x0, 0x3727C20
	0x03727C0C ADRP X0, 0xA1D000
	0x03727C10 LDR X0, [X0 + 0xC28]
	0x03727C14 BL 0x1C16CF4
	0x03727C18 MOVZ W8, 0x1
	0x03727C1C STRB W8, [X25 + 0xC5D]
	0x03727C20 LDR X6, [X24]
	0x03727C24 MOVI V0.2D, 0x0
	0x03727C28 ADD X0, X31, 0x0
	0x03727C2C MOVZ W4, 0x8
	0x03727C30 MOV X1, X22
	0x03727C34 MOV X2, X21
	0x03727C38 MOV W3, W20
	0x03727C3C MOV X5, X31
	0x03727C40 STP V0, V0, [X31]
	0x03727C44 BL 0x22B8B10
	0x03727C48 LDP V1, V0, [X31]
	0x03727C4C STP V1, V0, [X19]
	0x03727C50 LDR X8, [X23 + 0x28]
	0x03727C54 LDR X9, [X31 + 0x28]
	0x03727C58 CMP X8, X9
	0x03727C5C B.NE 0x3727C78
	0x03727C60 LDP X20, X19, [X31 + 0x60]
	0x03727C64 LDP X22, X21, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpacklo_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpacklo_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpacklo_epi16(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727C68 LDP X24, X23, [X31 + 0x40]
	0x03727C6C LDP X30, X25, [X31 + 0x30]
	0x03727C70 ADD X31, X31, 0x70
	0x03727C74 RET
	0x03727C78 BL 0x3EB1B20
	0x03727C7C SUB X31, X31, 0x70
	0x03727C80 STP X30, X25, [X31 + 0x30]
	0x03727C84 STP X24, X23, [X31 + 0x40]
	0x03727C88 STP X22, X21, [X31 + 0x50]
	0x03727C8C STP X20, X19, [X31 + 0x60]
	0x03727C90 MRS X23, 0xC000
	0x03727C94 MOV X19, X8
	0x03727C98 LDR X8, [X23 + 0x28]
	0x03727C9C ADRP X25, 0xCB9000
	0x03727CA0 ADRP X24, 0xA1D000
	0x03727CA4 MOV W20, W2
	0x03727CA8 STR X8, [X31 + 0x28]
	0x03727CAC LDRB W8, [X25 + 0xC5E]
	0x03727CB0 LDR X24, [X24 + 0xC30]
	0x03727CB4 MOV X21, X1
	0x03727CB8 MOV X22, X0
	0x03727CBC TBNZ X8, 0x0, 0x3727CD4
	0x03727CC0 ADRP X0, 0xA1D000
	0x03727CC4 LDR X0, [X0 + 0xC30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpacklo_epi16, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpacklo_epi16, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpacklo_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727CC8 BL 0x1C16CF4
	0x03727CCC MOVZ W8, 0x1
	0x03727CD0 STRB W8, [X25 + 0xC5E]
	0x03727CD4 LDR X6, [X24]
	0x03727CD8 MOVI V0.2D, 0x0
	0x03727CDC ADD X0, X31, 0x0
	0x03727CE0 MOVZ W4, 0x4
	0x03727CE4 MOV X1, X22
	0x03727CE8 MOV X2, X21
	0x03727CEC MOV W3, W20
	0x03727CF0 MOV X5, X31
	0x03727CF4 STP V0, V0, [X31]
	0x03727CF8 BL 0x22B87B4
	0x03727CFC LDP V1, V0, [X31]
	0x03727D00 STP V1, V0, [X19]
	0x03727D04 LDR X8, [X23 + 0x28]
	0x03727D08 LDR X9, [X31 + 0x28]
	0x03727D0C CMP X8, X9
	0x03727D10 B.NE 0x3727D2C
	0x03727D14 LDP X20, X19, [X31 + 0x60]
	0x03727D18 LDP X22, X21, [X31 + 0x50]
	0x03727D1C LDP X24, X23, [X31 + 0x40]
	0x03727D20 LDP X30, X25, [X31 + 0x30]
	0x03727D24 ADD X31, X31, 0x70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpacklo_epi32, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpacklo_epi32, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_unpacklo_epi64(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727D28 RET
	0x03727D2C BL 0x3EB1B20
	0x03727D30 SUB X31, X31, 0x60
	0x03727D34 STR X30, [X31 + 0x20]
	0x03727D38 STP X24, X23, [X31 + 0x30]
	0x03727D3C STP X22, X21, [X31 + 0x40]
	0x03727D40 STP X20, X19, [X31 + 0x50]
	0x03727D44 MRS X22, 0xC000
	0x03727D48 LDR X8, [X22 + 0x28]
	0x03727D4C ADRP X24, 0xCB9000
	0x03727D50 ADRP X23, 0xA1D000
	0x03727D54 MOV W19, W2
	0x03727D58 STR X8, [X31 + 0x18]
	0x03727D5C LDRB W8, [X24 + 0xC5F]
	0x03727D60 LDR X23, [X23 + 0xC38]
	0x03727D64 MOV X20, X1
	0x03727D68 MOV X21, X0
	0x03727D6C TBNZ X8, 0x0, 0x3727D84
	0x03727D70 ADRP X0, 0xA1D000
	0x03727D74 LDR X0, [X0 + 0xC38]
	0x03727D78 BL 0x1C16CF4
	0x03727D7C MOVZ W8, 0x1
	0x03727D80 STRB W8, [X24 + 0xC5F]
	0x03727D84 LDR X6, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Sse2.unpacklo_epi64, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Sse2.unpacklo_epi64, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_shuffle_epi8(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b)

Disassembly:
	0x03727D88 ADD X0, X31, 0x8
	0x03727D8C MOVZ W4, 0x4
	0x03727D90 MOV X1, X21
	0x03727D94 MOV X2, X20
	0x03727D98 MOV W3, W19
	0x03727D9C MOV X5, X31
	0x03727DA0 STP X31, X31, [X31 + 0x8]
	0x03727DA4 BL 0x22B8BBC
	0x03727DA8 LDP X0, X1, [X31 + 0x8]
	0x03727DAC LDR X8, [X22 + 0x28]
	0x03727DB0 LDR X9, [X31 + 0x18]
	0x03727DB4 CMP X8, X9
	0x03727DB8 B.NE 0x3727DD4
	0x03727DBC LDP X20, X19, [X31 + 0x50]
	0x03727DC0 LDP X22, X21, [X31 + 0x40]
	0x03727DC4 LDP X24, X23, [X31 + 0x30]
	0x03727DC8 LDR X30, [X31 + 0x20]
	0x03727DCC ADD X31, X31, 0x60
	0x03727DD0 RET
	0x03727DD4 BL 0x3EB1B20
	0x03727DD8 SUB X31, X31, 0x60
	0x03727DDC STP X30, X23, [X31 + 0x30]
	0x03727DE0 STP X22, X21, [X31 + 0x40]
	0x03727DE4 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move X2, [X19]
	011 Move X3, [X19+8]
	012 Move X4, X31
	013 Move X21, X8
	014 Call Ssse3.shuffle_epi8, X0, X1
	015 Move X22, X0
	016 Move X0, [X20+16]
	017 Move X8, [X20+24]
	018 Move X2, [X19+16]
	019 Move X3, [X19+24]
	020 Move X19, X1
	021 Move X4, X31
	022 Move X1, X8
	023 Call Ssse3.shuffle_epi8, X0, X1
	024 Move [X21], X22
	025 Move [X21+8], X19
	026 Move [X21+16], X0
	027 Move [X21+24], X1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_shuffle_epi32(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03727DE8 MRS X21, 0xC000
	0x03727DEC LDR X8, [X21 + 0x28]
	0x03727DF0 ADRP X23, 0xCB9000
	0x03727DF4 ADRP X22, 0xA1D000
	0x03727DF8 MOV W19, W3
	0x03727DFC STR X8, [X31 + 0x28]
	0x03727E00 STP X1, X2, [X31 + 0x18]
	0x03727E04 LDRB W8, [X23 + 0xC60]
	0x03727E08 LDR X22, [X22 + 0xC20]
	0x03727E0C MOV X20, X0
	0x03727E10 TBNZ X8, 0x0, 0x3727E28
	0x03727E14 ADRP X0, 0xA1D000
	0x03727E18 LDR X0, [X0 + 0xC20]
	0x03727E1C BL 0x1C16CF4
	0x03727E20 MOVZ W8, 0x1
	0x03727E24 STRB W8, [X23 + 0xC60]
	0x03727E28 LDR X6, [X22]
	0x03727E2C ADD X0, X31, 0x8
	0x03727E30 ADD X2, X31, 0x18
	0x03727E34 MOVZ W4, 0x2
	0x03727E38 MOV X1, X20
	0x03727E3C MOV W3, W19
	0x03727E40 MOV X5, X31
	0x03727E44 STP X31, X31, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.shuffle_epi32, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.shuffle_epi32, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_shufflehi_epi16(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03727E48 BL 0x22B8708
	0x03727E4C LDP X0, X1, [X31 + 0x8]
	0x03727E50 LDR X8, [X21 + 0x28]
	0x03727E54 LDR X9, [X31 + 0x28]
	0x03727E58 CMP X8, X9
	0x03727E5C B.NE 0x3727E74
	0x03727E60 LDP X20, X19, [X31 + 0x50]
	0x03727E64 LDP X22, X21, [X31 + 0x40]
	0x03727E68 LDP X30, X23, [X31 + 0x30]
	0x03727E6C ADD X31, X31, 0x60
	0x03727E70 RET
	0x03727E74 BL 0x3EB1B20
	0x03727E78 SUB X31, X31, 0x60
	0x03727E7C STP X30, X23, [X31 + 0x30]
	0x03727E80 STP X22, X21, [X31 + 0x40]
	0x03727E84 STP X20, X19, [X31 + 0x50]
	0x03727E88 MRS X21, 0xC000
	0x03727E8C LDR X8, [X21 + 0x28]
	0x03727E90 ADRP X23, 0xCB9000
	0x03727E94 ADRP X22, 0xA1D000
	0x03727E98 MOV W19, W3
	0x03727E9C STR X8, [X31 + 0x28]
	0x03727EA0 STP X1, X2, [X31 + 0x18]
	0x03727EA4 LDRB W8, [X23 + 0xC61]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.shufflehi_epi16, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.shufflehi_epi16, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_shufflelo_epi16(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03727EA8 LDR X22, [X22 + 0xC28]
	0x03727EAC MOV X20, X0
	0x03727EB0 TBNZ X8, 0x0, 0x3727EC8
	0x03727EB4 ADRP X0, 0xA1D000
	0x03727EB8 LDR X0, [X0 + 0xC28]
	0x03727EBC BL 0x1C16CF4
	0x03727EC0 MOVZ W8, 0x1
	0x03727EC4 STRB W8, [X23 + 0xC61]
	0x03727EC8 LDR X6, [X22]
	0x03727ECC ADD X0, X31, 0x8
	0x03727ED0 ADD X2, X31, 0x18
	0x03727ED4 MOVZ W4, 0x4
	0x03727ED8 MOV X1, X20
	0x03727EDC MOV W3, W19
	0x03727EE0 MOV X5, X31
	0x03727EE4 STP X31, X31, [X31 + 0x8]
	0x03727EE8 BL 0x22B8B10
	0x03727EEC LDP X0, X1, [X31 + 0x8]
	0x03727EF0 LDR X8, [X21 + 0x28]
	0x03727EF4 LDR X9, [X31 + 0x28]
	0x03727EF8 CMP X8, X9
	0x03727EFC B.NE 0x3727F14
	0x03727F00 LDP X20, X19, [X31 + 0x50]
	0x03727F04 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move W19, W1
	008 Move X0, [X0]
	009 Move X1, [X20+8]
	010 Move W2, W19
	011 Move X3, X31
	012 Move X21, X8
	013 Call Sse2.shufflelo_epi16, X0, X1
	014 Move X22, X0
	015 Move X0, [X20+16]
	016 Move X8, [X20+24]
	017 Move X20, X1
	018 Move W2, W19
	019 Move X3, X31
	020 Move X1, X8
	021 Call Sse2.shufflelo_epi16, X0, X1
	022 Move [X21], X22
	023 Move [X21+8], X20
	024 Move [X21+16], X0
	025 Move [X21+24], X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0

Method: Unity.Burst.Intrinsics.v128 mm256_extracti128_si256(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03727F08 LDP X30, X23, [X31 + 0x30]
	0x03727F0C ADD X31, X31, 0x60
	0x03727F10 RET
	0x03727F14 BL 0x3EB1B20
	0x03727F18 SUB X31, X31, 0x60
	0x03727F1C STP X30, X23, [X31 + 0x30]
	0x03727F20 STP X22, X21, [X31 + 0x40]
	0x03727F24 STP X20, X19, [X31 + 0x50]
	0x03727F28 MRS X21, 0xC000

ISIL:
	001 Add X8, X0, 8
	002 Add X9, X0, 16
	003 Add X10, X0, 24
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Move X1, [X8]
	008 Move X0, [X9]
	009 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_inserti128_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v128 b, System.Int32 imm8)

Disassembly:
	0x03727F2C LDR X8, [X21 + 0x28]
	0x03727F30 ADRP X23, 0xCB9000
	0x03727F34 ADRP X22, 0xA1D000
	0x03727F38 MOV W19, W3
	0x03727F3C STR X8, [X31 + 0x28]
	0x03727F40 STP X1, X2, [X31 + 0x18]
	0x03727F44 LDRB W8, [X23 + 0xC62]
	0x03727F48 LDR X22, [X22 + 0xC30]
	0x03727F4C MOV X20, X0
	0x03727F50 TBNZ X8, 0x0, 0x3727F68

ISIL:
	001 Move X9, [X0]
	002 Move X10, [X0+8]
	003 Move X11, [X0+16]
	004 Move X12, [X0+24]
	005 And W31, W3, 1
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move [X8], X9
	011 Move [X8+8], X10
	012 Move [X8+16], X11
	013 Move [X8+24], X12
	014 Return X0

Method: Unity.Burst.Intrinsics.v128 broadcastss_ps(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727F54 ADRP X0, 0xA1D000
	0x03727F58 LDR X0, [X0 + 0xC30]
	0x03727F5C BL 0x1C16CF4
	0x03727F60 MOVZ W8, 0x1

ISIL:
	001 And X8, X0, 0
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move X1, X0
	004 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcastss_ps(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727F64 STRB W8, [X23 + 0xC62]
	0x03727F68 LDR X6, [X22]
	0x03727F6C ADD X0, X31, 0x8
	0x03727F70 ADD X2, X31, 0x18
	0x03727F74 MOVZ W4, 0x2

ISIL:
	001 Move [X8+24], W0
	002 Move [X8+28], W0
	003 Move [X8+16], W0
	004 Move [X8+20], W0
	005 Move [X8+8], W0
	006 Move [X8+12], W0
	007 Move [X8], W0
	008 Move [X8+4], W0
	009 Return X0

Method: Unity.Burst.Intrinsics.v128 broadcastsd_pd(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727F78 MOV X1, X20
	0x03727F7C MOV W3, W19

ISIL:
	001 Move X1, X0
	002 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcastsd_pd(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727F80 MOV X5, X31
	0x03727F84 STP X31, X31, [X31 + 0x8]
	0x03727F88 BL 0x22B87B4

ISIL:
	001 Move [X8+16], X0
	002 Move [X8+24], X0
	003 Move [X8], X0
	004 Move [X8+8], X0
	005 Return X0

Method: Unity.Burst.Intrinsics.v128 broadcastb_epi8(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727F8C LDP X0, X1, [X31 + 0x8]
	0x03727F90 LDR X8, [X21 + 0x28]
	0x03727F94 LDR X9, [X31 + 0x28]
	0x03727F98 CMP X8, X9
	0x03727F9C B.NE 0x3727FB4

ISIL:
	001 And X8, X0, 255
	002 Or X9, X31, 0x101010101010101
	003 Multiply X0, X8, X9
	004 Move X1, X0
	005 Return X0

Method: Unity.Burst.Intrinsics.v128 broadcastw_epi16(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727FA0 LDP X20, X19, [X31 + 0x50]
	0x03727FA4 LDP X22, X21, [X31 + 0x40]
	0x03727FA8 LDP X30, X23, [X31 + 0x30]
	0x03727FAC ADD X31, X31, 0x60
	0x03727FB0 RET
	0x03727FB4 BL 0x3EB1B20
	0x03727FB8 SUB X31, X31, 0x60

ISIL:
	001 And X8, X0, 0xFFFF
	002 Move X0, X8
	003 NotImplemented "Instruction BFM not yet implemented."
	004 NotImplemented "Instruction BFM not yet implemented."
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Move X1, X0
	007 Return X0

Method: Unity.Burst.Intrinsics.v128 broadcastd_epi32(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727FBC STP X30, X23, [X31 + 0x30]
	0x03727FC0 STP X22, X21, [X31 + 0x40]
	0x03727FC4 STP X20, X19, [X31 + 0x50]
	0x03727FC8 MRS X21, 0xC000

ISIL:
	001 And X8, X0, 0
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move X1, X0
	004 Return X0

Method: Unity.Burst.Intrinsics.v128 broadcastq_epi64(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727FCC LDR X8, [X21 + 0x28]
	0x03727FD0 ADRP X23, 0xCB9000

ISIL:
	001 Move X1, X0
	002 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcastb_epi8(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727FD4 ADRP X22, 0xA1D000
	0x03727FD8 MOV W19, W3
	0x03727FDC STR X8, [X31 + 0x28]
	0x03727FE0 STP X1, X2, [X31 + 0x18]
	0x03727FE4 LDRB W8, [X23 + 0xC63]
	0x03727FE8 LDR X22, [X22 + 0xC38]

ISIL:
	001 And X9, X0, 255
	002 Or X10, X31, 0x101010101010101
	003 Multiply X9, X9, X10
	004 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	005 Move [X8], V0
	006 Move [X8+8], V0
	007 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcastw_epi16(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03727FEC MOV X20, X0
	0x03727FF0 TBNZ X8, 0x0, 0x3728008
	0x03727FF4 ADRP X0, 0xA1D000
	0x03727FF8 LDR X0, [X0 + 0xC38]
	0x03727FFC BL 0x1C16CF4
	0x03728000 MOVZ W8, 0x1
	0x03728004 STRB W8, [X23 + 0xC63]
	0x03728008 LDR X6, [X22]
	0x0372800C ADD X0, X31, 0x8
	0x03728010 ADD X2, X31, 0x18
	0x03728014 MOVZ W4, 0x2
	0x03728018 MOV X1, X20
	0x0372801C MOV W3, W19
	0x03728020 MOV X5, X31
	0x03728024 STP X31, X31, [X31 + 0x8]
	0x03728028 BL 0x22B8BBC
	0x0372802C LDP X0, X1, [X31 + 0x8]

ISIL:
	001 NotImplemented "Instruction STRH not yet implemented."
	002 NotImplemented "Instruction STRH not yet implemented."
	003 NotImplemented "Instruction STRH not yet implemented."
	004 NotImplemented "Instruction STRH not yet implemented."
	005 NotImplemented "Instruction STRH not yet implemented."
	006 NotImplemented "Instruction STRH not yet implemented."
	007 NotImplemented "Instruction STRH not yet implemented."
	008 NotImplemented "Instruction STRH not yet implemented."
	009 NotImplemented "Instruction STRH not yet implemented."
	010 NotImplemented "Instruction STRH not yet implemented."
	011 NotImplemented "Instruction STRH not yet implemented."
	012 NotImplemented "Instruction STRH not yet implemented."
	013 NotImplemented "Instruction STRH not yet implemented."
	014 NotImplemented "Instruction STRH not yet implemented."
	015 NotImplemented "Instruction STRH not yet implemented."
	016 NotImplemented "Instruction STRH not yet implemented."
	017 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcastd_epi32(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03728030 LDR X8, [X21 + 0x28]
	0x03728034 LDR X9, [X31 + 0x28]
	0x03728038 CMP X8, X9
	0x0372803C B.NE 0x3728054
	0x03728040 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X8+24], W0
	002 Move [X8+28], W0
	003 Move [X8+16], W0
	004 Move [X8+20], W0
	005 Move [X8+8], W0
	006 Move [X8+12], W0
	007 Move [X8], W0
	008 Move [X8+4], W0
	009 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcastq_epi64(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03728044 LDP X22, X21, [X31 + 0x40]
	0x03728048 LDP X30, X23, [X31 + 0x30]
	0x0372804C ADD X31, X31, 0x60

ISIL:
	001 Move [X8+16], X0
	002 Move [X8+24], X0
	003 Move [X8], X0
	004 Move [X8+8], X0
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_broadcastsi128_si256(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03728050 RET
	0x03728054 BL 0x3EB1B20
	0x03728058 SUB X31, X31, 0x80

ISIL:
	001 Move [X8], X0
	002 Move [X8+8], X1
	003 Move [X8+16], X0
	004 Move [X8+24], X1
	005 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepi8_epi16(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x0372805C STR X30, [X31 + 0x40]
	0x03728060 STP X24, X23, [X31 + 0x50]
	0x03728064 STP X22, X21, [X31 + 0x60]
	0x03728068 STP X20, X19, [X31 + 0x70]
	0x0372806C MRS X22, 0xC000
	0x03728070 MOV X19, X8
	0x03728074 LDR X8, [X22 + 0x28]
	0x03728078 ADRP X24, 0xCB8000
	0x0372807C ADRP X23, 0xA1C000
	0x03728080 MOV W20, W3
	0x03728084 STR X8, [X31 + 0x38]
	0x03728088 STP X1, X2, [X31 + 0x28]
	0x0372808C LDRB W8, [X24 + 0xC64]
	0x03728090 LDR X23, [X23 + 0xC40]
	0x03728094 MOV X21, X0
	0x03728098 TBNZ X8, 0x0, 0x37280B0
	0x0372809C ADRP X0, 0xA1C000
	0x037280A0 LDR X0, [X0 + 0xC40]
	0x037280A4 BL 0x1C16CF4
	0x037280A8 MOVZ W8, 0x1
	0x037280AC STRB W8, [X24 + 0xC64]
	0x037280B0 LDR X6, [X23]
	0x037280B4 MOVI V0.2D, 0x0
	0x037280B8 ADD X0, X31, 0x0
	0x037280BC ADD X2, X31, 0x28
	0x037280C0 MOVZ W4, 0x4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 Add X10, X10, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction STRH not yet implemented."
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepi8_epi32(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x037280C4 MOV X1, X21
	0x037280C8 MOV W3, W20
	0x037280CC MOV X5, X31
	0x037280D0 STP V0, V0, [X31]
	0x037280D4 BL 0x22B89B8
	0x037280D8 LDP V1, V0, [X31]
	0x037280DC STP V1, V0, [X19]
	0x037280E0 LDR X8, [X22 + 0x28]
	0x037280E4 LDR X9, [X31 + 0x38]
	0x037280E8 CMP X8, X9
	0x037280EC B.NE 0x3728108
	0x037280F0 LDP X20, X19, [X31 + 0x70]
	0x037280F4 LDP X22, X21, [X31 + 0x60]
	0x037280F8 LDP X24, X23, [X31 + 0x50]
	0x037280FC LDR X30, [X31 + 0x40]
	0x03728100 ADD X31, X31, 0x80
	0x03728104 RET
	0x03728108 BL 0x3EB1B20
	0x0372810C SUB X31, X31, 0x60
	0x03728110 STR X30, [X31 + 0x20]
	0x03728114 STP X24, X23, [X31 + 0x30]
	0x03728118 STP X22, X21, [X31 + 0x40]
	0x0372811C STP X20, X19, [X31 + 0x50]
	0x03728120 MRS X22, 0xC000
	0x03728124 LDR X8, [X22 + 0x28]
	0x03728128 ADRP X24, 0xCB8000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 Add X10, X10, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+4], W13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepi8_epi64(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x0372812C ADRP X23, 0xA1C000
	0x03728130 MOV W19, W2
	0x03728134 STR X8, [X31 + 0x18]
	0x03728138 LDRB W8, [X24 + 0xC65]
	0x0372813C LDR X23, [X23 + 0xC48]
	0x03728140 MOV X20, X1
	0x03728144 MOV X21, X0
	0x03728148 TBNZ X8, 0x0, 0x3728160
	0x0372814C ADRP X0, 0xA1C000
	0x03728150 LDR X0, [X0 + 0xC48]
	0x03728154 BL 0x1C16CF4
	0x03728158 MOVZ W8, 0x1
	0x0372815C STRB W8, [X24 + 0xC65]
	0x03728160 LDR X6, [X23]
	0x03728164 ADD X0, X31, 0x8
	0x03728168 MOVZ W4, 0x4
	0x0372816C MOV X1, X21
	0x03728170 MOV X2, X20
	0x03728174 MOV W3, W19
	0x03728178 MOV X5, X31
	0x0372817C STP X31, X31, [X31 + 0x8]
	0x03728180 BL 0x22B890C
	0x03728184 LDP X0, X1, [X31 + 0x8]
	0x03728188 LDR X8, [X22 + 0x28]
	0x0372818C LDR X9, [X31 + 0x18]
	0x03728190 CMP X8, X9

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 Add X10, X10, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+8], X13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepi16_epi32(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03728194 B.NE 0x37281B0
	0x03728198 LDP X20, X19, [X31 + 0x50]
	0x0372819C LDP X22, X21, [X31 + 0x40]
	0x037281A0 LDP X24, X23, [X31 + 0x30]
	0x037281A4 LDR X30, [X31 + 0x20]
	0x037281A8 ADD X31, X31, 0x60
	0x037281AC RET
	0x037281B0 BL 0x3EB1B20
	0x037281B4 SUB X31, X31, 0x70
	0x037281B8 STP X30, X25, [X31 + 0x30]
	0x037281BC STP X24, X23, [X31 + 0x40]
	0x037281C0 STP X22, X21, [X31 + 0x50]
	0x037281C4 STP X20, X19, [X31 + 0x60]
	0x037281C8 MRS X23, 0xC000
	0x037281CC MOV X19, X8
	0x037281D0 LDR X8, [X23 + 0x28]
	0x037281D4 ADRP X25, 0xCB8000
	0x037281D8 ADRP X24, 0xA1C000
	0x037281DC MOV W20, W2
	0x037281E0 STR X8, [X31 + 0x28]
	0x037281E4 LDRB W8, [X25 + 0xC66]
	0x037281E8 LDR X24, [X24 + 0xC50]
	0x037281EC MOV X21, X1
	0x037281F0 MOV X22, X0
	0x037281F4 TBNZ X8, 0x0, 0x372820C
	0x037281F8 ADRP X0, 0xA1C000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 NotImplemented "Instruction LDRSH not yet implemented."
	015 Add X10, X10, 2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+4], W13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepi16_epi64(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x037281FC LDR X0, [X0 + 0xC50]
	0x03728200 BL 0x1C16CF4
	0x03728204 MOVZ W8, 0x1
	0x03728208 STRB W8, [X25 + 0xC66]
	0x0372820C LDR X6, [X24]
	0x03728210 MOVI V0.2D, 0x0
	0x03728214 ADD X0, X31, 0x0
	0x03728218 MOVZ W4, 0x4
	0x0372821C MOV X1, X22
	0x03728220 MOV X2, X21
	0x03728224 MOV W3, W20
	0x03728228 MOV X5, X31
	0x0372822C STP V0, V0, [X31]
	0x03728230 BL 0x22B8A64
	0x03728234 LDP V1, V0, [X31]
	0x03728238 STP V1, V0, [X19]
	0x0372823C LDR X8, [X23 + 0x28]
	0x03728240 LDR X9, [X31 + 0x28]
	0x03728244 CMP X8, X9
	0x03728248 B.NE 0x3728264
	0x0372824C LDP X20, X19, [X31 + 0x60]
	0x03728250 LDP X22, X21, [X31 + 0x50]
	0x03728254 LDP X24, X23, [X31 + 0x40]
	0x03728258 LDP X30, X25, [X31 + 0x30]
	0x0372825C ADD X31, X31, 0x70
	0x03728260 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 NotImplemented "Instruction LDRSH not yet implemented."
	015 Add X10, X10, 2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+8], X13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepi32_epi64(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03728264 BL 0x3EB1B20
	0x03728268 SUB X31, X31, 0x60
	0x0372826C STP X30, X23, [X31 + 0x30]
	0x03728270 STP X22, X21, [X31 + 0x40]
	0x03728274 STP X20, X19, [X31 + 0x50]
	0x03728278 MRS X21, 0xC000
	0x0372827C LDR X8, [X21 + 0x28]
	0x03728280 ADRP X23, 0xCB8000
	0x03728284 ADRP X22, 0xA1C000
	0x03728288 MOV W19, W3
	0x0372828C STR X8, [X31 + 0x28]
	0x03728290 STP X1, X2, [X31 + 0x18]
	0x03728294 LDRB W8, [X23 + 0xC67]
	0x03728298 LDR X22, [X22 + 0xC18]
	0x0372829C MOV X20, X0
	0x037282A0 TBNZ X8, 0x0, 0x37282B8
	0x037282A4 ADRP X0, 0xA1C000
	0x037282A8 LDR X0, [X0 + 0xC18]
	0x037282AC BL 0x1C16CF4
	0x037282B0 MOVZ W8, 0x1
	0x037282B4 STRB W8, [X23 + 0xC67]
	0x037282B8 LDR X6, [X22]
	0x037282BC ADD X0, X31, 0x8
	0x037282C0 ADD X2, X31, 0x18
	0x037282C4 MOVZ W4, 0x4
	0x037282C8 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Add X10, X10, 4
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+8], X13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepu8_epi16(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x037282CC MOV W3, W19
	0x037282D0 MOV X5, X31
	0x037282D4 STP X31, X31, [X31 + 0x8]
	0x037282D8 BL 0x22B8860
	0x037282DC LDP X0, X1, [X31 + 0x8]
	0x037282E0 LDR X8, [X21 + 0x28]
	0x037282E4 LDR X9, [X31 + 0x28]
	0x037282E8 CMP X8, X9
	0x037282EC B.NE 0x3728304
	0x037282F0 LDP X20, X19, [X31 + 0x50]
	0x037282F4 LDP X22, X21, [X31 + 0x40]
	0x037282F8 LDP X30, X23, [X31 + 0x30]
	0x037282FC ADD X31, X31, 0x60
	0x03728300 RET
	0x03728304 BL 0x3EB1B20
	0x03728308 SUB X31, X31, 0x60
	0x0372830C STP X30, X23, [X31 + 0x30]
	0x03728310 STP X22, X21, [X31 + 0x40]
	0x03728314 STP X20, X19, [X31 + 0x50]
	0x03728318 MRS X21, 0xC000
	0x0372831C LDR X8, [X21 + 0x28]
	0x03728320 ADRP X23, 0xCB8000
	0x03728324 ADRP X22, 0xA1C000
	0x03728328 MOV W19, W3
	0x0372832C STR X8, [X31 + 0x28]
	0x03728330 STP X1, X2, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 Move W13, [X12]
	015 Add X10, X10, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction STRH not yet implemented."
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepu8_epi32(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03728334 LDRB W8, [X23 + 0xC68]
	0x03728338 LDR X22, [X22 + 0xC40]
	0x0372833C MOV X20, X0
	0x03728340 TBNZ X8, 0x0, 0x3728358
	0x03728344 ADRP X0, 0xA1C000
	0x03728348 LDR X0, [X0 + 0xC40]
	0x0372834C BL 0x1C16CF4
	0x03728350 MOVZ W8, 0x1
	0x03728354 STRB W8, [X23 + 0xC68]
	0x03728358 LDR X6, [X22]
	0x0372835C ADD X0, X31, 0x8
	0x03728360 ADD X2, X31, 0x18
	0x03728364 MOVZ W4, 0x2
	0x03728368 MOV X1, X20
	0x0372836C MOV W3, W19
	0x03728370 MOV X5, X31
	0x03728374 STP X31, X31, [X31 + 0x8]
	0x03728378 BL 0x22B89B8
	0x0372837C LDP X0, X1, [X31 + 0x8]
	0x03728380 LDR X8, [X21 + 0x28]
	0x03728384 LDR X9, [X31 + 0x28]
	0x03728388 CMP X8, X9
	0x0372838C B.NE 0x37283A4
	0x03728390 LDP X20, X19, [X31 + 0x50]
	0x03728394 LDP X22, X21, [X31 + 0x40]
	0x03728398 LDP X30, X23, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 Move W13, [X12]
	015 Add X10, X10, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+4], W13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepu8_epi64(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x0372839C ADD X31, X31, 0x60
	0x037283A0 RET
	0x037283A4 BL 0x3EB1B20
	0x037283A8 SUB X31, X31, 0x60
	0x037283AC STP X30, X23, [X31 + 0x30]
	0x037283B0 STP X22, X21, [X31 + 0x40]
	0x037283B4 STP X20, X19, [X31 + 0x50]
	0x037283B8 MRS X21, 0xC000
	0x037283BC LDR X8, [X21 + 0x28]
	0x037283C0 ADRP X23, 0xCB8000
	0x037283C4 ADRP X22, 0xA1C000
	0x037283C8 MOV W19, W3
	0x037283CC STR X8, [X31 + 0x28]
	0x037283D0 STP X1, X2, [X31 + 0x18]
	0x037283D4 LDRB W8, [X23 + 0xC69]
	0x037283D8 LDR X22, [X22 + 0xC48]
	0x037283DC MOV X20, X0
	0x037283E0 TBNZ X8, 0x0, 0x37283F8
	0x037283E4 ADRP X0, 0xA1C000
	0x037283E8 LDR X0, [X0 + 0xC48]
	0x037283EC BL 0x1C16CF4
	0x037283F0 MOVZ W8, 0x1
	0x037283F4 STRB W8, [X23 + 0xC69]
	0x037283F8 LDR X6, [X22]
	0x037283FC ADD X0, X31, 0x8
	0x03728400 ADD X2, X31, 0x18

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 Move W13, [X12]
	015 Add X10, X10, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+8], X13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepu16_epi32(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03728404 MOVZ W4, 0x2
	0x03728408 MOV X1, X20
	0x0372840C MOV W3, W19
	0x03728410 MOV X5, X31
	0x03728414 STP X31, X31, [X31 + 0x8]
	0x03728418 BL 0x22B890C
	0x0372841C LDP X0, X1, [X31 + 0x8]
	0x03728420 LDR X8, [X21 + 0x28]
	0x03728424 LDR X9, [X31 + 0x28]
	0x03728428 CMP X8, X9
	0x0372842C B.NE 0x3728444
	0x03728430 LDP X20, X19, [X31 + 0x50]
	0x03728434 LDP X22, X21, [X31 + 0x40]
	0x03728438 LDP X30, X23, [X31 + 0x30]
	0x0372843C ADD X31, X31, 0x60
	0x03728440 RET
	0x03728444 BL 0x3EB1B20
	0x03728448 SUB X31, X31, 0x60
	0x0372844C STP X30, X23, [X31 + 0x30]
	0x03728450 STP X22, X21, [X31 + 0x40]
	0x03728454 STP X20, X19, [X31 + 0x50]
	0x03728458 MRS X21, 0xC000
	0x0372845C LDR X8, [X21 + 0x28]
	0x03728460 ADRP X23, 0xCB8000
	0x03728464 ADRP X22, 0xA1C000
	0x03728468 MOV W19, W3

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 NotImplemented "Instruction LDRH not yet implemented."
	015 Add X10, X10, 2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+4], W13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepu16_epi64(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x0372846C STR X8, [X31 + 0x28]
	0x03728470 STP X1, X2, [X31 + 0x18]
	0x03728474 LDRB W8, [X23 + 0xC6A]
	0x03728478 LDR X22, [X22 + 0xC50]
	0x0372847C MOV X20, X0
	0x03728480 TBNZ X8, 0x0, 0x3728498
	0x03728484 ADRP X0, 0xA1C000
	0x03728488 LDR X0, [X0 + 0xC50]
	0x0372848C BL 0x1C16CF4
	0x03728490 MOVZ W8, 0x1
	0x03728494 STRB W8, [X23 + 0xC6A]
	0x03728498 LDR X6, [X22]
	0x0372849C ADD X0, X31, 0x8
	0x037284A0 ADD X2, X31, 0x18
	0x037284A4 MOVZ W4, 0x2
	0x037284A8 MOV X1, X20
	0x037284AC MOV W3, W19
	0x037284B0 MOV X5, X31
	0x037284B4 STP X31, X31, [X31 + 0x8]
	0x037284B8 BL 0x22B8A64
	0x037284BC LDP X0, X1, [X31 + 0x8]
	0x037284C0 LDR X8, [X21 + 0x28]
	0x037284C4 LDR X9, [X31 + 0x28]
	0x037284C8 CMP X8, X9
	0x037284CC B.NE 0x37284E4
	0x037284D0 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 NotImplemented "Instruction LDRH not yet implemented."
	015 Add X10, X10, 2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+8], X13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_cvtepu32_epi64(Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x037284D4 LDP X22, X21, [X31 + 0x40]
	0x037284D8 LDP X30, X23, [X31 + 0x30]
	0x037284DC ADD X31, X31, 0x60
	0x037284E0 RET
	0x037284E4 BL 0x3EB1B20
	0x037284E8 SUB X31, X31, 0x90
	0x037284EC STR X30, [X31 + 0x40]
	0x037284F0 STP X26, X25, [X31 + 0x50]
	0x037284F4 STP X24, X23, [X31 + 0x60]
	0x037284F8 STP X22, X21, [X31 + 0x70]
	0x037284FC STP X20, X19, [X31 + 0x80]
	0x03728500 MRS X24, 0xC000
	0x03728504 MOV X19, X8
	0x03728508 LDR X8, [X24 + 0x28]
	0x0372850C ADRP X26, 0xCB8000
	0x03728510 ADRP X25, 0xA1C000
	0x03728514 MOV W20, W5
	0x03728518 STR X8, [X31 + 0x38]
	0x0372851C STP X2, X3, [X31 + 0x28]
	0x03728520 LDRB W8, [X26 + 0xC6B]
	0x03728524 LDR X25, [X25 + 0xC20]
	0x03728528 MOV X21, X4
	0x0372852C MOV X22, X1
	0x03728530 MOV X23, X0
	0x03728534 TBNZ X8, 0x0, 0x372854C
	0x03728538 ADRP X0, 0xA1C000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X12, [X9+40]
	005 Move X10, X31
	006 Add X11, X31, 0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X31+56], X12
	009 Add X12, X31, 40
	010 Move [X31+40], X0
	011 Move [X31+48], X1
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 Move W13, [X12]
	015 Add X10, X10, 4
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X11+8], X13
	018 Move V1, [X31]
	019 Move V0, [X31+16]
	020 Move [X8], V1
	021 Move [X8+8], V0
	022 Move X8, [X9+40]
	023 Move X9, [X31+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+64]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 maskload_epi32(System.Void* mem_addr, Unity.Burst.Intrinsics.v128 mask)

Disassembly:
	0x0372853C LDR X0, [X0 + 0xC20]
	0x03728540 BL 0x1C16CF4
	0x03728544 MOVZ W8, 0x1
	0x03728548 STRB W8, [X26 + 0xC6B]
	0x0372854C LDP V1, V0, [X23]
	0x03728550 LDR X6, [X25]
	0x03728554 ADD X0, X31, 0x0
	0x03728558 ADD X2, X31, 0x28
	0x0372855C MOVZ W4, 0x4
	0x03728560 MOV X1, X22
	0x03728564 MOV W3, W20
	0x03728568 MOV X5, X21
	0x0372856C STP V1, V0, [X31]
	0x03728570 BL 0x22B8708
	0x03728574 LDP V1, V0, [X31]
	0x03728578 STP V1, V0, [X19]
	0x0372857C LDR X8, [X24 + 0x28]
	0x03728580 LDR X9, [X31 + 0x38]
	0x03728584 CMP X8, X9
	0x03728588 B.NE 0x37285A8
	0x0372858C LDP X20, X19, [X31 + 0x80]
	0x03728590 LDP X22, X21, [X31 + 0x70]
	0x03728594 LDP X24, X23, [X31 + 0x60]
	0x03728598 LDP X26, X25, [X31 + 0x50]
	0x0372859C LDR X30, [X31 + 0x40]
	0x037285A0 ADD X31, X31, 0x90

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X8+40]
	005 Move X9, X31
	006 Add X10, X31, 24
	007 Move [X31+40], X11
	008 Add X11, X31, 8
	009 Move [X31+24], X1
	010 Move [X31+32], X2
	011 Move [X31+8], X31
	012 Move [X31+16], X31
	013 Move W12, [X10]
	014 Move TEMP, X12
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfNotEqual {20}
	018 Move W12, [X0]
	019 Move [X11], W12
	020 Add X9, X9, 4
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, [X31+8]
	023 Move X1, [X31+16]
	024 Move X8, [X8+40]
	025 Move X9, [X31+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X30, [X31+48]
	028 Add X31, X31, 64
	029 Return X0
	030 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 maskload_epi64(System.Void* mem_addr, Unity.Burst.Intrinsics.v128 mask)

Disassembly:
	0x037285A4 RET
	0x037285A8 BL 0x3EB1B20
	0x037285AC SUB X31, X31, 0x80
	0x037285B0 STP X30, X27, [X31 + 0x30]
	0x037285B4 STP X26, X25, [X31 + 0x40]
	0x037285B8 STP X24, X23, [X31 + 0x50]
	0x037285BC STP X22, X21, [X31 + 0x60]
	0x037285C0 STP X20, X19, [X31 + 0x70]
	0x037285C4 MRS X25, 0xC000
	0x037285C8 MOV X19, X8
	0x037285CC LDR X8, [X25 + 0x28]
	0x037285D0 ADRP X27, 0xCB8000
	0x037285D4 ADRP X26, 0xA1C000
	0x037285D8 MOV W20, W4
	0x037285DC STR X8, [X31 + 0x28]
	0x037285E0 LDRB W8, [X27 + 0xC6C]
	0x037285E4 LDR X26, [X26 + 0xC28]
	0x037285E8 MOV X21, X3
	0x037285EC MOV X22, X2
	0x037285F0 MOV X23, X1
	0x037285F4 MOV X24, X0
	0x037285F8 TBNZ X8, 0x0, 0x3728610
	0x037285FC ADRP X0, 0xA1C000
	0x03728600 LDR X0, [X0 + 0xC28]
	0x03728604 BL 0x1C16CF4
	0x03728608 MOVZ W8, 0x1
	0x0372860C STRB W8, [X27 + 0xC6C]
	0x03728610 LDP V1, V0, [X24]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X8+40]
	005 Move X9, X31
	006 Move W12, 1
	007 Add X10, X31, 24
	008 Move [X31+40], X11
	009 Add X11, X31, 8
	010 Move [X31+24], X1
	011 Move [X31+32], X2
	012 Move [X31+8], X31
	013 Move [X31+16], X31
	014 Move X14, [X9]
	015 Move W13, W12
	016 Move TEMP, X14
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {22}
	020 Move X12, [X9]
	021 Move [X9], X12
	022 Move W12, W31
	023 Move W9, 8
	024 Move TEMP, X13
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {14}
	028 Move X0, [X31+8]
	029 Move X1, [X31+16]
	030 Move X8, [X8+40]
	031 Move X9, [X31+40]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X30, [X31+48]
	034 Add X31, X31, 64
	035 Return X0
	036 Call 0x3EB2B20

Method: System.Void maskstore_epi32(System.Void* mem_addr, Unity.Burst.Intrinsics.v128 mask, Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03728614 LDR X6, [X26]
	0x03728618 ADD X0, X31, 0x0
	0x0372861C MOVZ W4, 0x8
	0x03728620 MOV X1, X23
	0x03728624 MOV X2, X22
	0x03728628 MOV W3, W20
	0x0372862C MOV X5, X21
	0x03728630 STP V1, V0, [X31]
	0x03728634 BL 0x22B8B10
	0x03728638 LDP V1, V0, [X31]
	0x0372863C STP V1, V0, [X19]
	0x03728640 LDR X8, [X25 + 0x28]
	0x03728644 LDR X9, [X31 + 0x28]
	0x03728648 CMP X8, X9
	0x0372864C B.NE 0x372866C
	0x03728650 LDP X20, X19, [X31 + 0x70]
	0x03728654 LDP X22, X21, [X31 + 0x60]
	0x03728658 LDP X24, X23, [X31 + 0x50]
	0x0372865C LDP X26, X25, [X31 + 0x40]
	0x03728660 LDP X30, X27, [X31 + 0x30]
	0x03728664 ADD X31, X31, 0x80
	0x03728668 RET
	0x0372866C BL 0x3EB1B20
	0x03728670 SUB X31, X31, 0x80
	0x03728674 STP X30, X27, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X8+40]
	005 Move X9, X31
	006 Add X10, X31, 24
	007 Move [X31+40], X11
	008 Add X11, X31, 8
	009 Move [X31+24], X1
	010 Move [X31+32], X2
	011 Move [X31+8], X3
	012 Move [X31+16], X4
	013 Move W12, [X10]
	014 Move TEMP, X12
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfNotEqual {20}
	018 Move W12, [X11]
	019 Move [X0], W12
	020 Add X9, X9, 4
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, [X8+40]
	023 Move X9, [X31+40]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+48]
	026 Add X31, X31, 64
	027 Return 
	028 Call 0x3EB2B20

Method: System.Void maskstore_epi64(System.Void* mem_addr, Unity.Burst.Intrinsics.v128 mask, Unity.Burst.Intrinsics.v128 a)

Disassembly:
	0x03728678 STP X26, X25, [X31 + 0x40]
	0x0372867C STP X24, X23, [X31 + 0x50]
	0x03728680 STP X22, X21, [X31 + 0x60]
	0x03728684 STP X20, X19, [X31 + 0x70]
	0x03728688 MRS X25, 0xC000
	0x0372868C MOV X19, X8
	0x03728690 LDR X8, [X25 + 0x28]
	0x03728694 ADRP X27, 0xCB8000
	0x03728698 ADRP X26, 0xA1C000
	0x0372869C MOV W20, W4
	0x037286A0 STR X8, [X31 + 0x28]
	0x037286A4 LDRB W8, [X27 + 0xC6D]
	0x037286A8 LDR X26, [X26 + 0xC30]
	0x037286AC MOV X21, X3
	0x037286B0 MOV X22, X2
	0x037286B4 MOV X23, X1
	0x037286B8 MOV X24, X0
	0x037286BC TBNZ X8, 0x0, 0x37286D4
	0x037286C0 ADRP X0, 0xA1C000
	0x037286C4 LDR X0, [X0 + 0xC30]
	0x037286C8 BL 0x1C16CF4
	0x037286CC MOVZ W8, 0x1
	0x037286D0 STRB W8, [X27 + 0xC6D]
	0x037286D4 LDP V1, V0, [X24]
	0x037286D8 LDR X6, [X26]
	0x037286DC ADD X0, X31, 0x0
	0x037286E0 MOVZ W4, 0x4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X8+40]
	005 Move X9, X31
	006 Move W12, 1
	007 Add X11, X31, 8
	008 Move [X31+40], X10
	009 Add X10, X31, 24
	010 Move [X31+24], X1
	011 Move [X31+32], X2
	012 Move [X31+8], X3
	013 Move [X31+16], X4
	014 Move X14, [X9]
	015 Move W13, W12
	016 Move TEMP, X14
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {22}
	020 Move X12, [X9]
	021 Move [X9], X12
	022 Move W12, W31
	023 Move W9, 8
	024 Move TEMP, X13
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {14}
	028 Move X8, [X8+40]
	029 Move X9, [X31+40]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X30, [X31+48]
	032 Add X31, X31, 64
	033 Return 
	034 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_maskload_epi32(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 mask)

Disassembly:
	0x037286E4 MOV X1, X23
	0x037286E8 MOV X2, X22
	0x037286EC MOV W3, W20
	0x037286F0 MOV X5, X21
	0x037286F4 STP V1, V0, [X31]
	0x037286F8 BL 0x22B87B4
	0x037286FC LDP V1, V0, [X31]
	0x03728700 STP V1, V0, [X19]
	0x03728704 LDR X8, [X25 + 0x28]
	0x03728708 LDR X9, [X31 + 0x28]
	0x0372870C CMP X8, X9
	0x03728710 B.NE 0x3728730
	0x03728714 LDP X20, X19, [X31 + 0x70]
	0x03728718 LDP X22, X21, [X31 + 0x60]
	0x0372871C LDP X24, X23, [X31 + 0x50]
	0x03728720 LDP X26, X25, [X31 + 0x40]
	0x03728724 LDP X30, X27, [X31 + 0x30]
	0x03728728 ADD X31, X31, 0x80
	0x0372872C RET
	0x03728730 BL 0x3EB1B20
	0x03728734 SUB X31, X31, 0x80
	0x03728738 STR X30, [X31 + 0x30]
	0x0372873C STP X26, X25, [X31 + 0x40]
	0x03728740 STP X24, X23, [X31 + 0x50]
	0x03728744 STP X22, X21, [X31 + 0x60]
	0x03728748 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X9+40]
	005 Move X10, X31
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X31+40], X11
	008 Add X11, X31, 0
	009 Move [X31], V0
	010 Move [X31+8], V0
	011 Move W12, [X1]
	012 Move TEMP, X12
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfNotEqual {18}
	016 Move W12, [X0]
	017 Move [X11], W12
	018 Add X10, X10, 4
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move V1, [X31]
	021 Move V0, [X31+16]
	022 Move [X8], V1
	023 Move [X8+8], V0
	024 Move X8, [X9+40]
	025 Move X9, [X31+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X30, [X31+48]
	028 Add X31, X31, 64
	029 Return X0
	030 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_maskload_epi64(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 mask)

Disassembly:
	0x0372874C MRS X24, 0xC000
	0x03728750 LDR X8, [X24 + 0x28]
	0x03728754 ADRP X26, 0xCB8000
	0x03728758 ADRP X25, 0xA1C000
	0x0372875C MOV W19, W6
	0x03728760 STR X8, [X31 + 0x28]
	0x03728764 STP X4, X5, [X31 + 0x18]
	0x03728768 LDRB W8, [X26 + 0xC6E]
	0x0372876C LDR X25, [X25 + 0xC38]
	0x03728770 MOV X20, X3
	0x03728774 MOV X21, X2
	0x03728778 MOV X22, X1
	0x0372877C MOV X23, X0
	0x03728780 TBNZ X8, 0x0, 0x3728798
	0x03728784 ADRP X0, 0xA1C000
	0x03728788 LDR X0, [X0 + 0xC38]
	0x0372878C BL 0x1C16CF4
	0x03728790 MOVZ W8, 0x1
	0x03728794 STRB W8, [X26 + 0xC6E]
	0x03728798 LDR X6, [X25]
	0x0372879C ADD X0, X31, 0x8
	0x037287A0 ADD X5, X31, 0x18
	0x037287A4 MOVZ W4, 0x4
	0x037287A8 MOV X1, X21
	0x037287AC MOV X2, X20
	0x037287B0 MOV W3, W19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X9+40]
	005 Move X10, X31
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X31+40], X11
	008 Add X11, X31, 0
	009 Move [X31], V0
	010 Move [X31+8], V0
	011 Move X12, [X1]
	012 Move TEMP, X12
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {18}
	016 Move X12, [X0]
	017 Move [X11], X12
	018 Add X10, X10, 8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move V1, [X31]
	021 Move V0, [X31+16]
	022 Move [X8], V1
	023 Move [X8+8], V0
	024 Move X8, [X9+40]
	025 Move X9, [X31+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X30, [X31+48]
	028 Add X31, X31, 64
	029 Return X0
	030 Call 0x3EB2B20

Method: System.Void mm256_maskstore_epi32(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 mask, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x037287B4 STP X23, X22, [X31 + 0x8]
	0x037287B8 BL 0x22B8BBC
	0x037287BC LDP X0, X1, [X31 + 0x8]
	0x037287C0 LDR X8, [X24 + 0x28]
	0x037287C4 LDR X9, [X31 + 0x28]
	0x037287C8 CMP X8, X9
	0x037287CC B.NE 0x37287EC
	0x037287D0 LDP X20, X19, [X31 + 0x70]
	0x037287D4 LDP X22, X21, [X31 + 0x60]

ISIL:
	001 Move X8, X31
	002 Move W9, [X1]
	003 Move TEMP, X9
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfNotEqual {9}
	007 Move W9, [X2]
	008 Move [X0], W9
	009 Add X8, X8, 4
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Return 

Method: System.Void mm256_maskstore_epi64(System.Void* mem_addr, Unity.Burst.Intrinsics.v256 mask, Unity.Burst.Intrinsics.v256 a)

Disassembly:
	0x037287D8 LDP X24, X23, [X31 + 0x50]
	0x037287DC LDP X26, X25, [X31 + 0x40]
	0x037287E0 LDR X30, [X31 + 0x30]
	0x037287E4 ADD X31, X31, 0x80
	0x037287E8 RET
	0x037287EC BL 0x3EB1B20
	0x037287F0 SUB X31, X31, 0x80
	0x037287F4 STP X30, X27, [X31 + 0x30]
	0x037287F8 STP X26, X25, [X31 + 0x40]

ISIL:
	001 Move X8, X31
	002 Move X9, [X1]
	003 Move TEMP, X9
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {9}
	007 Move X9, [X2]
	008 Move [X0], X9
	009 Add X8, X8, 8
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_permutevar8x32_epi32(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 idx)

Disassembly:
	0x037287FC STP X24, X23, [X31 + 0x50]
	0x03728800 STP X22, X21, [X31 + 0x60]
	0x03728804 STP X20, X19, [X31 + 0x70]
	0x03728808 MRS X25, 0xC000
	0x0372880C MOV X19, X8
	0x03728810 LDR X8, [X25 + 0x28]
	0x03728814 ADRP X27, 0xCB8000
	0x03728818 ADRP X26, 0xA1C000
	0x0372881C MOV W20, W4
	0x03728820 STR X8, [X31 + 0x28]
	0x03728824 LDRB W8, [X27 + 0xC6F]
	0x03728828 LDR X26, [X26 + 0xC18]
	0x0372882C MOV X21, X3
	0x03728830 MOV X22, X2
	0x03728834 MOV X23, X1
	0x03728838 MOV X24, X0
	0x0372883C TBNZ X8, 0x0, 0x3728854
	0x03728840 ADRP X0, 0xA1C000
	0x03728844 LDR X0, [X0 + 0xC18]
	0x03728848 BL 0x1C16CF4
	0x0372884C MOVZ W8, 0x1
	0x03728850 STRB W8, [X27 + 0xC6F]
	0x03728854 LDP V1, V0, [X24]
	0x03728858 LDR X6, [X26]
	0x0372885C ADD X0, X31, 0x0
	0x03728860 MOVZ W4, 0x8
	0x03728864 MOV X1, X23

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X9+40]
	005 Move X10, X31
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X31+40], X11
	008 Add X11, X31, 0
	009 Move [X31], V0
	010 Move [X31+8], V0
	011 Move W12, [X1]
	012 Move W12, W12
	013 ShiftRight W12, 30
	014 And W12, W12, 0x1FFFFFFF
	015 And X12, X12, 31
	016 Move W12, [X12]
	017 Move [X11], W12
	018 Add X10, X10, 4
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move V1, [X31]
	021 Move V0, [X31+16]
	022 Move [X8], V1
	023 Move [X8+8], V0
	024 Move X8, [X9+40]
	025 Move X9, [X31+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X30, [X31+48]
	028 Add X31, X31, 64
	029 Return X0
	030 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_permutevar8x32_ps(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 idx)

Disassembly:
	0x03728868 MOV X2, X22
	0x0372886C MOV W3, W20
	0x03728870 MOV X5, X21
	0x03728874 STP V1, V0, [X31]
	0x03728878 BL 0x22B8860
	0x0372887C LDP V1, V0, [X31]
	0x03728880 STP V1, V0, [X19]
	0x03728884 LDR X8, [X25 + 0x28]
	0x03728888 LDR X9, [X31 + 0x28]
	0x0372888C CMP X8, X9
	0x03728890 B.NE 0x37288B0
	0x03728894 LDP X20, X19, [X31 + 0x70]
	0x03728898 LDP X22, X21, [X31 + 0x60]
	0x0372889C LDP X24, X23, [X31 + 0x50]
	0x037288A0 LDP X26, X25, [X31 + 0x40]
	0x037288A4 LDP X30, X27, [X31 + 0x30]
	0x037288A8 ADD X31, X31, 0x80
	0x037288AC RET
	0x037288B0 BL 0x3EB1B20
	0x037288B4 SUB X31, X31, 0x90
	0x037288B8 STR X30, [X31 + 0x40]
	0x037288BC STP X26, X25, [X31 + 0x50]
	0x037288C0 STP X24, X23, [X31 + 0x60]
	0x037288C4 STP X22, X21, [X31 + 0x70]
	0x037288C8 STP X20, X19, [X31 + 0x80]
	0x037288CC MRS X24, 0xC000
	0x037288D0 MOV X19, X8
	0x037288D4 LDR X8, [X24 + 0x28]
	0x037288D8 ADRP X26, 0xCB8000
	0x037288DC ADRP X25, 0xA1C000
	0x037288E0 MOV W20, W5
	0x037288E4 STR X8, [X31 + 0x38]
	0x037288E8 STP X2, X3, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+112], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X9+40]
	005 Move X10, X31
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Add X12, X31, 32
	008 Move [X31+104], X11
	009 Move V1, [X0]
	010 Move V0, [X0+16]
	011 Add X11, X31, 0
	012 Add X13, X31, 64
	013 Move [X31+32], V1
	014 Move [X31+40], V0
	015 Move V0, [X1]
	016 Move V1, [X1+16]
	017 Move [X31+64], V2
	018 Move [X31+72], V2
	019 Move [X31], V0
	020 Move [X31+8], V1
	021 Move W14, [X11]
	022 Move W14, W14
	023 ShiftRight W14, 30
	024 And W14, W14, 0x1FFFFFFF
	025 And X14, X14, 31
	026 Move W14, [X14]
	027 Move [X13], W14
	028 Add X10, X10, 4
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move V1, [X31+64]
	031 Move V0, [X31+80]
	032 Move [X8], V1
	033 Move [X8+8], V0
	034 Move X8, [X9+40]
	035 Move X9, [X31+104]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X30, [X31+112]
	038 Add X31, X31, 128
	039 Return X0
	040 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_permute4x64_epi64(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x037288EC LDRB W8, [X26 + 0xC70]
	0x037288F0 LDR X25, [X25 + 0xC40]
	0x037288F4 MOV X21, X4
	0x037288F8 MOV X22, X1
	0x037288FC MOV X23, X0
	0x03728900 TBNZ X8, 0x0, 0x3728918
	0x03728904 ADRP X0, 0xA1C000
	0x03728908 LDR X0, [X0 + 0xC40]
	0x0372890C BL 0x1C16CF4
	0x03728910 MOVZ W8, 0x1
	0x03728914 STRB W8, [X26 + 0xC70]
	0x03728918 LDP V1, V0, [X23]
	0x0372891C LDR X6, [X25]
	0x03728920 ADD X0, X31, 0x0
	0x03728924 ADD X2, X31, 0x28
	0x03728928 MOVZ W4, 0x4
	0x0372892C MOV X1, X22
	0x03728930 MOV W3, W20
	0x03728934 MOV X5, X21
	0x03728938 STP V1, V0, [X31]
	0x0372893C BL 0x22B89B8
	0x03728940 LDP V1, V0, [X31]
	0x03728944 STP V1, V0, [X19]
	0x03728948 LDR X8, [X24 + 0x28]
	0x0372894C LDR X9, [X31 + 0x38]
	0x03728950 CMP X8, X9
	0x03728954 B.NE 0x3728974

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X9+40]
	005 Move X10, X31
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X31+40], X11
	008 Add X11, X31, 0
	009 Move [X31], V0
	010 Move [X31+8], V0
	011 Move W12, W1
	012 ShiftRight W12, 29
	013 And W12, W12, 0xFFFFFFF
	014 And X12, X12, 31
	015 Move X12, [X12]
	016 NotImplemented "Instruction SBFM not yet implemented."
	017 Move [X11], X12
	018 Add X10, X10, 8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move V1, [X31]
	021 Move V0, [X31+16]
	022 Move [X8], V1
	023 Move [X8+8], V0
	024 Move X8, [X9+40]
	025 Move X9, [X31+40]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X30, [X31+48]
	028 Add X31, X31, 64
	029 Return X0
	030 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_permute4x64_pd(Unity.Burst.Intrinsics.v256 a, System.Int32 imm8)

Disassembly:
	0x03728958 LDP X20, X19, [X31 + 0x80]
	0x0372895C LDP X22, X21, [X31 + 0x70]
	0x03728960 LDP X24, X23, [X31 + 0x60]
	0x03728964 LDP X26, X25, [X31 + 0x50]
	0x03728968 LDR X30, [X31 + 0x40]
	0x0372896C ADD X31, X31, 0x90
	0x03728970 RET
	0x03728974 BL 0x3EB1B20
	0x03728978 SUB X31, X31, 0x80
	0x0372897C STP X30, X27, [X31 + 0x30]
	0x03728980 STP X26, X25, [X31 + 0x40]
	0x03728984 STP X24, X23, [X31 + 0x50]
	0x03728988 STP X22, X21, [X31 + 0x60]
	0x0372898C STP X20, X19, [X31 + 0x70]
	0x03728990 MRS X25, 0xC000
	0x03728994 MOV X19, X8
	0x03728998 LDR X8, [X25 + 0x28]
	0x0372899C ADRP X27, 0xCB8000
	0x037289A0 ADRP X26, 0xA1C000
	0x037289A4 MOV W20, W4
	0x037289A8 STR X8, [X31 + 0x28]
	0x037289AC LDRB W8, [X27 + 0xC71]
	0x037289B0 LDR X26, [X26 + 0xC50]
	0x037289B4 MOV X21, X3
	0x037289B8 MOV X22, X2
	0x037289BC MOV X23, X1
	0x037289C0 MOV X24, X0
	0x037289C4 TBNZ X8, 0x0, 0x37289DC
	0x037289C8 ADRP X0, 0xA1C000
	0x037289CC LDR X0, [X0 + 0xC50]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X11, [X9+40]
	005 Move X10, X31
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Add X12, X31, 32
	008 Move [X31+72], X11
	009 Move V1, [X0]
	010 Move V2, [X0+16]
	011 Add X11, X31, 0
	012 Move [X31+32], V0
	013 Move [X31+40], V0
	014 Move [X31], V1
	015 Move [X31+8], V2
	016 Move W13, W1
	017 ShiftRight W13, 29
	018 And W13, W13, 0xFFFFFFF
	019 And X13, X13, 31
	020 Move X13, [X13]
	021 NotImplemented "Instruction SBFM not yet implemented."
	022 Move [X12], X13
	023 Add X10, X10, 8
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move V1, [X31+32]
	026 Move V0, [X31+48]
	027 Move [X8], V1
	028 Move [X8+8], V0
	029 Move X8, [X9+40]
	030 Move X9, [X31+72]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X30, [X31+80]
	033 Add X31, X31, 96
	034 Return X0
	035 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_permute2x128_si256(Unity.Burst.Intrinsics.v256 a, Unity.Burst.Intrinsics.v256 b, System.Int32 imm8)

Disassembly:
	0x037289D0 BL 0x1C16CF4
	0x037289D4 MOVZ W8, 0x1
	0x037289D8 STRB W8, [X27 + 0xC71]
	0x037289DC LDP V1, V0, [X24]
	0x037289E0 LDR X6, [X26]
	0x037289E4 ADD X0, X31, 0x0
	0x037289E8 MOVZ W4, 0x4
	0x037289EC MOV X1, X23
	0x037289F0 MOV X2, X22
	0x037289F4 MOV W3, W20
	0x037289F8 MOV X5, X21
	0x037289FC STP V1, V0, [X31]
	0x03728A00 BL 0x22B8A64
	0x03728A04 LDP V1, V0, [X31]
	0x03728A08 STP V1, V0, [X19]
	0x03728A0C LDR X8, [X25 + 0x28]
	0x03728A10 LDR X9, [X31 + 0x28]
	0x03728A14 CMP X8, X9
	0x03728A18 B.NE 0x3728A38
	0x03728A1C LDP X20, X19, [X31 + 0x70]
	0x03728A20 LDP X22, X21, [X31 + 0x60]
	0x03728A24 LDP X24, X23, [X31 + 0x50]
	0x03728A28 LDP X26, X25, [X31 + 0x40]
	0x03728A2C LDP X30, X27, [X31 + 0x30]
	0x03728A30 ADD X31, X31, 0x80
	0x03728A34 RET
	0x03728A38 BL 0x3EB1B20
	0x03728A3C SUB X31, X31, 0x80
	0x03728A40 STR X30, [X31 + 0x30]
	0x03728A44 STP X26, X25, [X31 + 0x40]
	0x03728A48 STP X24, X23, [X31 + 0x50]
	0x03728A4C STP X22, X21, [X31 + 0x60]
	0x03728A50 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move X9, [X0]
	002 Move X10, [X0+8]
	003 Move X11, [X0+16]
	004 Move X12, [X0+24]
	005 Move X16, [X1]
	006 Move X17, [X1+8]
	007 Move X13, [X1+16]
	008 Move X14, [X1+24]
	009 And W1, W2, 3
	010 Move X15, X9
	011 Move X0, X10
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X15, X16
	014 Move X0, X17
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X15, X11
	017 Move X0, X12
	018 Move X15, X13
	019 Move X0, X14
	020 Move W1, W2
	021 ShiftRight W1, 4
	022 And W1, W1, 31
	023 Compare W1, 0
	024 JumpIfEqual {33}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, X16
	027 Move X10, X17
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, X11
	030 Move X10, X12
	031 Move X9, X13
	032 Move X10, X14
	033 Move [X8], X15
	034 Move [X8+8], X0
	035 Move [X8+16], X9
	036 Move [X8+24], X10
	037 Return X0

Method: Unity.Burst.Intrinsics.v256 mm256_stream_load_si256(System.Void* mem_addr)

Disassembly:
	0x03728A54 MRS X24, 0xC000
	0x03728A58 LDR X8, [X24 + 0x28]
	0x03728A5C ADRP X26, 0xCB8000

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void EmulatedGather(T* dptr, System.Void* base_addr, System.Int64* indexPtr, System.Int32 scale, System.Int32 n, U* mask)

Disassembly:
	0x022B97B4 BL 0x3731CE0
	0x022B97B8 AND W8, W0, 0x1
	0x022B97BC ADD W25, W25, 0x1
	0x022B97C0 LSLV W8, W8, W19
	0x022B97C4 CMP W28, W25
	0x022B97C8 ORR W22, W8, W22, 0x0
	0x022B97CC B.NE 0x22B97A4
	0x022B97D0 ADD W24, W24, 0x1
	0x022B97D4 CMP W24, W28
	0x022B97D8 B.NE 0x22B979C
	0x022B97DC B 0x22B98FC
	0x022B97E0 CMP W28, 0x1
	0x022B97E4 B.LT 0x22B9998
	0x022B97E8 MOV W24, W31
	0x022B97EC MOV W22, W31
	0x022B97F0 ADD X0, X31, 0x40
	0x022B97F4 MOV W1, W24
	0x022B97F8 MOV W2, W24
	0x022B97FC MOV X3, X31
	0x022B9800 BL 0x3731CE0
	0x022B9804 AND W8, W0, 0x1
	0x022B9808 LSLV W8, W8, W24
	0x022B980C ADD W24, W24, 0x1
	0x022B9810 CMP W28, W24
	0x022B9814 ORR W22, W8, W22, 0x0
	0x022B9818 B.NE 0x22B97F0
	0x022B981C B 0x22B98FC
	0x022B9820 CMP W28, 0x1
	0x022B9824 B.LT 0x22B9998
	0x022B9828 MOV W19, W31
	0x022B982C MOVZ W20, 0x1
	0x022B9830 MOV W21, W28
	0x022B9834 SUB W8, W28, W19
	0x022B9838 CMP W8, 0x1
	0x022B983C B.LT 0x22B9878
	0x022B9840 LSLV W8, W20, W19
	0x022B9844 MOV W24, W31
	0x022B9848 ORN W23, W31, W8, 0x0
	0x022B984C ADD W2, W19, W24
	0x022B9850 ADD X0, X31, 0x40
	0x022B9854 MOV W1, W24
	0x022B9858 MOV X3, X31
	0x022B985C BL 0x3731CE0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X6+56]
	012 Move X19, X6
	013 Move X20, X5
	014 Move W24, W4
	015 Move W25, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X25, W25
	025 Move W26, W24
	026 Move X24, X20
	027 Move X27, [X21]
	028 Compare X20, 0
	029 JumpIfEqual {39}
	030 Move X8, [X19+56]
	031 Move X0, X24
	032 Move X1, X31
	033 Move X2, [X8+24]
	034 Call Int64.CompareTo, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfNotEqual {42}
	039 Multiply X8, X27, X25
	040 Move V0, [X22]
	041 Move [X23], D0
	042 Add X21, X21, 8
	043 Add X23, X23, 8
	044 Subtract X26, X26, 1
	045 Add X24, X24, 8
	046 Move X20, [X31+64]
	047 Move X19, [X31+72]
	048 Move X22, [X31+48]
	049 Move X21, [X31+56]
	050 Move X24, [X31+32]
	051 Move X23, [X31+40]
	052 Move X26, [X31+16]
	053 Move X25, [X31+24]
	054 Move X30, [X31+80]
	055 Move X27, [X31+88]
	056 Return 

Method: System.Void EmulatedGather(T* dptr, System.Void* base_addr, System.Int32* indexPtr, System.Int32 scale, System.Int32 n, U* mask)

Disassembly:
	0x022B9708 TBZ X8, 0x0, 0x22B9714
	0x022B970C MOV W8, W31
	0x022B9710 B 0x22B972C
	0x022B9714 ORR W8, W23, W24, 0x0
	0x022B9718 TBZ X8, 0x0, 0x22B9728
	0x022B971C AND W8, W20, W23, 0x0
	0x022B9720 ORR W8, W8, W0, 0x0
	0x022B9724 B 0x22B972C
	0x022B9728 MOVZ W8, 0x1
	0x022B972C AND W3, W8, 0x1
	0x022B9730 ADD X0, X31, 0x40
	0x022B9734 MOV W1, W25
	0x022B9738 MOV W2, W26
	0x022B973C MOV X4, X31
	0x022B9740 BL 0x3731CBC
	0x022B9744 ADD X26, X26, 0x1
	0x022B9748 CMP X21, X26
	0x022B974C ADD X19, X19, 0x2
	0x022B9750 B.NE 0x22B95E4
	0x022B9754 ADD X25, X25, 0x1
	0x022B9758 CMP X25, X21
	0x022B975C B.NE 0x22B95C0
	0x022B9760 B 0x22B9768
	0x022B9764 UBFM W29, W19, 0x2, 0x3
	0x022B9768 ADRP X9, 0xFFFFFFFFFE874000
	0x022B976C MOV W8, W29
	0x022B9770 ADD X9, X9, 0xCB6
	0x022B9774 LDR X27, [X31 + 0x28]
	0x022B9778 ADR X10, 0x14
	0x022B977C LDRB W11, [X9, X8, LSL]
	0x022B9780 ADD X10, X10, X11, 0x2, LSL
	0x022B9784 LDP W28, W26, [X31 + 0x10]
	0x022B9788 BR X10
	0x022B978C CMP W28, 0x1
	0x022B9790 B.LT 0x22B9998
	0x022B9794 MOV W24, W31
	0x022B9798 MOV W22, W31
	0x022B979C MOV W25, W31
	0x022B97A0 AND W19, W24, 0x1F
	0x022B97A4 ADD X0, X31, 0x40
	0x022B97A8 MOV W1, W25
	0x022B97AC MOV W2, W24
	0x022B97B0 MOV X3, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X6+56]
	012 Move X19, X6
	013 Move X20, X5
	014 Move W24, W4
	015 Move W25, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X25, W25
	025 Move W26, W24
	026 Move X24, X20
	027 NotImplemented "Instruction LDRSW not yet implemented."
	028 Compare X20, 0
	029 JumpIfEqual {39}
	030 Move X8, [X19+56]
	031 Move X0, X24
	032 Move X1, X31
	033 Move X2, [X8+24]
	034 Call Int64.CompareTo, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfNotEqual {42}
	039 Multiply X8, X27, X25
	040 Move V0, [X22]
	041 Move [X23], D0
	042 Add X23, X23, 8
	043 Add X24, X24, 8
	044 Subtract X26, X26, 1
	045 Add X21, X21, 4
	046 Move X20, [X31+64]
	047 Move X19, [X31+72]
	048 Move X22, [X31+48]
	049 Move X21, [X31+56]
	050 Move X24, [X31+32]
	051 Move X23, [X31+40]
	052 Move X26, [X31+16]
	053 Move X25, [X31+24]
	054 Move X30, [X31+80]
	055 Move X27, [X31+88]
	056 Return 

Method: Unity.Burst.Intrinsics.v256 mm256_i32gather_epi32(System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, System.Int32 scale)

Disassembly:
	0x03728A60 ADRP X25, 0xA1C000
	0x03728A64 MOV W19, W6
	0x03728A68 STR X8, [X31 + 0x28]
	0x03728A6C STP X4, X5, [X31 + 0x18]
	0x03728A70 LDRB W8, [X26 + 0xC72]
	0x03728A74 LDR X25, [X25 + 0xC48]
	0x03728A78 MOV X20, X3
	0x03728A7C MOV X21, X2
	0x03728A80 MOV X22, X1
	0x03728A84 MOV X23, X0
	0x03728A88 TBNZ X8, 0x0, 0x3728AA0
	0x03728A8C ADRP X0, 0xA1C000
	0x03728A90 LDR X0, [X0 + 0xC48]
	0x03728A94 BL 0x1C16CF4
	0x03728A98 MOVZ W8, 0x1
	0x03728A9C STRB W8, [X26 + 0xC72]
	0x03728AA0 LDR X6, [X25]
	0x03728AA4 ADD X0, X31, 0x8
	0x03728AA8 ADD X5, X31, 0x18
	0x03728AAC MOVZ W4, 0x4
	0x03728AB0 MOV X1, X21
	0x03728AB4 MOV X2, X20
	0x03728AB8 MOV W3, W19
	0x03728ABC STP X23, X22, [X31 + 0x8]
	0x03728AC0 BL 0x22B890C
	0x03728AC4 LDP X0, X1, [X31 + 0x8]
	0x03728AC8 LDR X8, [X24 + 0x28]
	0x03728ACC LDR X9, [X31 + 0x28]
	0x03728AD0 CMP X8, X9
	0x03728AD4 B.NE 0x3728AF4
	0x03728AD8 LDP X20, X19, [X31 + 0x70]
	0x03728ADC LDP X22, X21, [X31 + 0x60]
	0x03728AE0 LDP X24, X23, [X31 + 0x50]
	0x03728AE4 LDP X26, X25, [X31 + 0x40]
	0x03728AE8 LDR X30, [X31 + 0x30]
	0x03728AEC ADD X31, X31, 0x80
	0x03728AF0 RET
	0x03728AF4 BL 0x3EB1B20
	0x03728AF8 SUB X31, X31, 0x80
	0x03728AFC STP X30, X25, [X31 + 0x40]
	0x03728B00 STP X24, X23, [X31 + 0x50]
	0x03728B04 STP X22, X21, [X31 + 0x60]
	0x03728B08 STP X20, X19, [X31 + 0x70]
	0x03728B0C MRS X23, 0xC000
	0x03728B10 LDR X8, [X23 + 0x28]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X19, X8
	012 Move X8, [X23+40]
	013 Move X25, 0xCB9000
	014 Move X24, 0xA1D000
	015 Move W20, W2
	016 Move [X31+40], X8
	017 Move W8, [X25+3163]
	018 Move X24, [X24+3096]
	019 Move X21, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xA1D000
	026 Move X0, [X0+3096]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+3163], W8
	030 Move X6, [X24]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Add X0, X31, 0
	033 Move W4, 8
	034 Move X1, X22
	035 Move X2, X21
	036 Move W3, W20
	037 Move X5, X31
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	041 Move V1, [X31]
	042 Move V0, [X31+16]
	043 Move [X19], V1
	044 Move [X19+8], V0
	045 Move X8, [X23+40]
	046 Move X9, [X31+40]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+96]
	049 Move X19, [X31+104]
	050 Move X22, [X31+80]
	051 Move X21, [X31+88]
	052 Move X24, [X31+64]
	053 Move X23, [X31+72]
	054 Move X30, [X31+48]
	055 Move X25, [X31+56]
	056 Add X31, X31, 112
	057 Return X0
	058 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_i32gather_pd(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x03728B14 ADRP X25, 0xCB8000
	0x03728B18 ADRP X24, 0xA1C000
	0x03728B1C MOV W19, W7
	0x03728B20 STR X8, [X31 + 0x38]
	0x03728B24 STP X3, X4, [X31 + 0x28]
	0x03728B28 STP X5, X6, [X31 + 0x18]
	0x03728B2C LDRB W8, [X25 + 0xC73]
	0x03728B30 LDR X24, [X24 + 0xC20]
	0x03728B34 MOV X20, X2
	0x03728B38 MOV X21, X1
	0x03728B3C MOV X22, X0
	0x03728B40 TBNZ X8, 0x0, 0x3728B58
	0x03728B44 ADRP X0, 0xA1C000
	0x03728B48 LDR X0, [X0 + 0xC20]
	0x03728B4C BL 0x1C16CF4
	0x03728B50 MOVZ W8, 0x1
	0x03728B54 STRB W8, [X25 + 0xC73]
	0x03728B58 LDR X6, [X24]
	0x03728B5C ADD X0, X31, 0x8
	0x03728B60 ADD X2, X31, 0x28
	0x03728B64 ADD X5, X31, 0x18
	0x03728B68 MOVZ W4, 0x2
	0x03728B6C MOV X1, X20
	0x03728B70 MOV W3, W19
	0x03728B74 STP X22, X21, [X31 + 0x8]
	0x03728B78 BL 0x22B8708
	0x03728B7C LDP X0, X1, [X31 + 0x8]
	0x03728B80 LDR X8, [X23 + 0x28]
	0x03728B84 LDR X9, [X31 + 0x38]
	0x03728B88 CMP X8, X9
	0x03728B8C B.NE 0x3728BA8
	0x03728B90 LDP X20, X19, [X31 + 0x70]
	0x03728B94 LDP X22, X21, [X31 + 0x60]
	0x03728B98 LDP X24, X23, [X31 + 0x50]
	0x03728B9C LDP X30, X25, [X31 + 0x40]
	0x03728BA0 ADD X31, X31, 0x80
	0x03728BA4 RET
	0x03728BA8 BL 0x3EB1B20
	0x03728BAC SUB X31, X31, 0x80
	0x03728BB0 STP X30, X25, [X31 + 0x40]
	0x03728BB4 STP X24, X23, [X31 + 0x50]
	0x03728BB8 STP X22, X21, [X31 + 0x60]
	0x03728BBC STP X20, X19, [X31 + 0x70]
	0x03728BC0 MRS X23, 0xC000
	0x03728BC4 LDR X8, [X23 + 0x28]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X19, X8
	011 Move X8, [X22+40]
	012 Move X24, 0xCB9000
	013 Move X23, 0xA1D000
	014 Move W20, W3
	015 Move [X31+56], X8
	016 Move [X31+40], X1
	017 Move [X31+48], X2
	018 Move W8, [X24+3164]
	019 Move X23, [X23+3104]
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xA1D000
	026 Move X0, [X0+3104]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+3164], W8
	030 Move X6, [X23]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Add X0, X31, 0
	033 Add X2, X31, 40
	034 Move W4, 4
	035 Move X1, X21
	036 Move W3, W20
	037 Move X5, X31
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Call 0x22B9708, X0, X1, X2, X3, X4, X5
	041 Move V1, [X31]
	042 Move V0, [X31+16]
	043 Move [X19], V1
	044 Move [X19+8], V0
	045 Move X8, [X22+40]
	046 Move X9, [X31+56]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+112]
	049 Move X19, [X31+120]
	050 Move X22, [X31+96]
	051 Move X21, [X31+104]
	052 Move X24, [X31+80]
	053 Move X23, [X31+88]
	054 Move X30, [X31+64]
	055 Add X31, X31, 128
	056 Return X0
	057 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_i32gather_ps(System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, System.Int32 scale)

Disassembly:
	0x03728BC8 ADRP X25, 0xCB8000
	0x03728BCC ADRP X24, 0xA1C000
	0x03728BD0 MOV W19, W7
	0x03728BD4 STR X8, [X31 + 0x38]
	0x03728BD8 STP X3, X4, [X31 + 0x28]
	0x03728BDC STP X5, X6, [X31 + 0x18]
	0x03728BE0 LDRB W8, [X25 + 0xC74]
	0x03728BE4 LDR X24, [X24 + 0xC28]
	0x03728BE8 MOV X20, X2
	0x03728BEC MOV X21, X1
	0x03728BF0 MOV X22, X0
	0x03728BF4 TBNZ X8, 0x0, 0x3728C0C
	0x03728BF8 ADRP X0, 0xA1C000
	0x03728BFC LDR X0, [X0 + 0xC28]
	0x03728C00 BL 0x1C16CF4
	0x03728C04 MOVZ W8, 0x1
	0x03728C08 STRB W8, [X25 + 0xC74]
	0x03728C0C LDR X6, [X24]
	0x03728C10 ADD X0, X31, 0x8
	0x03728C14 ADD X2, X31, 0x28
	0x03728C18 ADD X5, X31, 0x18
	0x03728C1C MOVZ W4, 0x4
	0x03728C20 MOV X1, X20
	0x03728C24 MOV W3, W19
	0x03728C28 STP X22, X21, [X31 + 0x8]
	0x03728C2C BL 0x22B8B10
	0x03728C30 LDP X0, X1, [X31 + 0x8]
	0x03728C34 LDR X8, [X23 + 0x28]
	0x03728C38 LDR X9, [X31 + 0x38]
	0x03728C3C CMP X8, X9
	0x03728C40 B.NE 0x3728C5C
	0x03728C44 LDP X20, X19, [X31 + 0x70]
	0x03728C48 LDP X22, X21, [X31 + 0x60]
	0x03728C4C LDP X24, X23, [X31 + 0x50]
	0x03728C50 LDP X30, X25, [X31 + 0x40]
	0x03728C54 ADD X31, X31, 0x80
	0x03728C58 RET
	0x03728C5C BL 0x3EB1B20
	0x03728C60 SUB X31, X31, 0x80
	0x03728C64 STP X30, X25, [X31 + 0x40]
	0x03728C68 STP X24, X23, [X31 + 0x50]
	0x03728C6C STP X22, X21, [X31 + 0x60]
	0x03728C70 STP X20, X19, [X31 + 0x70]
	0x03728C74 MRS X23, 0xC000
	0x03728C78 LDR X8, [X23 + 0x28]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X19, X8
	012 Move X8, [X23+40]
	013 Move X25, 0xCB9000
	014 Move X24, 0xA1D000
	015 Move W20, W2
	016 Move [X31+40], X8
	017 Move W8, [X25+3165]
	018 Move X24, [X24+3112]
	019 Move X21, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xA1D000
	026 Move X0, [X0+3112]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+3165], W8
	030 Move X6, [X24]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Add X0, X31, 0
	033 Move W4, 8
	034 Move X1, X22
	035 Move X2, X21
	036 Move W3, W20
	037 Move X5, X31
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	041 Move V1, [X31]
	042 Move V0, [X31+16]
	043 Move [X19], V1
	044 Move [X19+8], V0
	045 Move X8, [X23+40]
	046 Move X9, [X31+40]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+96]
	049 Move X19, [X31+104]
	050 Move X22, [X31+80]
	051 Move X21, [X31+88]
	052 Move X24, [X31+64]
	053 Move X23, [X31+72]
	054 Move X30, [X31+48]
	055 Move X25, [X31+56]
	056 Add X31, X31, 112
	057 Return X0
	058 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_i64gather_pd(System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, System.Int32 scale)

Disassembly:
	0x03728C7C ADRP X25, 0xCB8000
	0x03728C80 ADRP X24, 0xA1C000
	0x03728C84 MOV W19, W7
	0x03728C88 STR X8, [X31 + 0x38]
	0x03728C8C STP X3, X4, [X31 + 0x28]
	0x03728C90 STP X5, X6, [X31 + 0x18]
	0x03728C94 LDRB W8, [X25 + 0xC75]
	0x03728C98 LDR X24, [X24 + 0xC30]
	0x03728C9C MOV X20, X2
	0x03728CA0 MOV X21, X1
	0x03728CA4 MOV X22, X0
	0x03728CA8 TBNZ X8, 0x0, 0x3728CC0
	0x03728CAC ADRP X0, 0xA1C000
	0x03728CB0 LDR X0, [X0 + 0xC30]
	0x03728CB4 BL 0x1C16CF4
	0x03728CB8 MOVZ W8, 0x1
	0x03728CBC STRB W8, [X25 + 0xC75]
	0x03728CC0 LDR X6, [X24]
	0x03728CC4 ADD X0, X31, 0x8
	0x03728CC8 ADD X2, X31, 0x28
	0x03728CCC ADD X5, X31, 0x18
	0x03728CD0 MOVZ W4, 0x2
	0x03728CD4 MOV X1, X20
	0x03728CD8 MOV W3, W19
	0x03728CDC STP X22, X21, [X31 + 0x8]
	0x03728CE0 BL 0x22B87B4
	0x03728CE4 LDP X0, X1, [X31 + 0x8]
	0x03728CE8 LDR X8, [X23 + 0x28]
	0x03728CEC LDR X9, [X31 + 0x38]
	0x03728CF0 CMP X8, X9
	0x03728CF4 B.NE 0x3728D10
	0x03728CF8 LDP X20, X19, [X31 + 0x70]
	0x03728CFC LDP X22, X21, [X31 + 0x60]
	0x03728D00 LDP X24, X23, [X31 + 0x50]
	0x03728D04 LDP X30, X25, [X31 + 0x40]
	0x03728D08 ADD X31, X31, 0x80
	0x03728D0C RET
	0x03728D10 BL 0x3EB1B20
	0x03728D14 SUB X31, X31, 0x80
	0x03728D18 STR X30, [X31 + 0x40]
	0x03728D1C STP X24, X23, [X31 + 0x50]
	0x03728D20 STP X22, X21, [X31 + 0x60]
	0x03728D24 STP X20, X19, [X31 + 0x70]
	0x03728D28 MRS X22, 0xC000
	0x03728D2C LDR X8, [X22 + 0x28]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X19, X8
	012 Move X8, [X23+40]
	013 Move X25, 0xCB9000
	014 Move X24, 0xA1D000
	015 Move W20, W2
	016 Move [X31+40], X8
	017 Move W8, [X25+3166]
	018 Move X24, [X24+3120]
	019 Move X21, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xA1D000
	026 Move X0, [X0+3120]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+3166], W8
	030 Move X6, [X24]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Add X0, X31, 0
	033 Move W4, 4
	034 Move X1, X22
	035 Move X2, X21
	036 Move W3, W20
	037 Move X5, X31
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Call 0x22B97B4, X0, X1, X2, X3, X4, X5
	041 Move V1, [X31]
	042 Move V0, [X31+16]
	043 Move [X19], V1
	044 Move [X19+8], V0
	045 Move X8, [X23+40]
	046 Move X9, [X31+40]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+96]
	049 Move X19, [X31+104]
	050 Move X22, [X31+80]
	051 Move X21, [X31+88]
	052 Move X24, [X31+64]
	053 Move X23, [X31+72]
	054 Move X30, [X31+48]
	055 Move X25, [X31+56]
	056 Add X31, X31, 112
	057 Return X0
	058 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mm256_i64gather_ps(System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, System.Int32 scale)

Disassembly:
	0x03728D30 ADRP X24, 0xCB8000
	0x03728D34 ADRP X23, 0xA1C000
	0x03728D38 MOV W19, W7
	0x03728D3C STR X8, [X31 + 0x38]
	0x03728D40 STP X3, X4, [X31 + 0x28]
	0x03728D44 STP X5, X6, [X31 + 0x18]
	0x03728D48 LDRB W8, [X24 + 0xC76]
	0x03728D4C LDR X23, [X23 + 0xC38]
	0x03728D50 MOV X20, X2
	0x03728D54 MOV X21, X0
	0x03728D58 TBNZ X8, 0x0, 0x3728D70
	0x03728D5C ADRP X0, 0xA1C000
	0x03728D60 LDR X0, [X0 + 0xC38]
	0x03728D64 BL 0x1C16CF4
	0x03728D68 MOVZ W8, 0x1
	0x03728D6C STRB W8, [X24 + 0xC76]
	0x03728D70 LDR X6, [X23]
	0x03728D74 ADD X0, X31, 0x8
	0x03728D78 ADD X2, X31, 0x28
	0x03728D7C ADD X5, X31, 0x18
	0x03728D80 MOVZ W4, 0x2
	0x03728D84 MOV X1, X20
	0x03728D88 MOV W3, W19
	0x03728D8C STP X21, X31, [X31 + 0x8]
	0x03728D90 BL 0x22B8BBC
	0x03728D94 LDP X0, X1, [X31 + 0x8]
	0x03728D98 LDR X8, [X22 + 0x28]
	0x03728D9C LDR X9, [X31 + 0x38]
	0x03728DA0 CMP X8, X9
	0x03728DA4 B.NE 0x3728DC0
	0x03728DA8 LDP X20, X19, [X31 + 0x70]
	0x03728DAC LDP X22, X21, [X31 + 0x60]
	0x03728DB0 LDP X24, X23, [X31 + 0x50]
	0x03728DB4 LDR X30, [X31 + 0x40]
	0x03728DB8 ADD X31, X31, 0x80
	0x03728DBC RET
	0x03728DC0 BL 0x3EB1B20
	0x03728DC4 SUB X31, X31, 0x80
	0x03728DC8 STP X30, X25, [X31 + 0x40]
	0x03728DCC STP X24, X23, [X31 + 0x50]
	0x03728DD0 STP X22, X21, [X31 + 0x60]
	0x03728DD4 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X24, 0xCB9000
	012 Move X23, 0xA1D000
	013 Move W19, W2
	014 Move [X31+24], X8
	015 Move W8, [X24+3167]
	016 Move X23, [X23+3128]
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1D000
	024 Move X0, [X0+3128]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+3167], W8
	028 Move X6, [X23]
	029 Add X0, X31, 8
	030 Move W4, 4
	031 Move X1, X21
	032 Move X2, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X22+40]
	041 Move X9, [X31+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X24, [X31+48]
	048 Move X23, [X31+56]
	049 Move X30, [X31+32]
	050 Add X31, X31, 96
	051 Return X0
	052 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 i32gather_pd(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x03728DD8 MRS X23, 0xC000
	0x03728DDC LDR X8, [X23 + 0x28]
	0x03728DE0 ADRP X25, 0xCB8000
	0x03728DE4 ADRP X24, 0xA1C000
	0x03728DE8 MOV W19, W7
	0x03728DEC STR X8, [X31 + 0x38]
	0x03728DF0 STP X3, X4, [X31 + 0x28]
	0x03728DF4 STP X5, X6, [X31 + 0x18]
	0x03728DF8 LDRB W8, [X25 + 0xC77]
	0x03728DFC LDR X24, [X24 + 0xC18]
	0x03728E00 MOV X20, X2
	0x03728E04 MOV X21, X1
	0x03728E08 MOV X22, X0
	0x03728E0C TBNZ X8, 0x0, 0x3728E24
	0x03728E10 ADRP X0, 0xA1C000
	0x03728E14 LDR X0, [X0 + 0xC18]
	0x03728E18 BL 0x1C16CF4
	0x03728E1C MOVZ W8, 0x1
	0x03728E20 STRB W8, [X25 + 0xC77]
	0x03728E24 LDR X6, [X24]
	0x03728E28 ADD X0, X31, 0x8
	0x03728E2C ADD X2, X31, 0x28
	0x03728E30 ADD X5, X31, 0x18
	0x03728E34 MOVZ W4, 0x4
	0x03728E38 MOV X1, X20
	0x03728E3C MOV W3, W19
	0x03728E40 STP X22, X21, [X31 + 0x8]
	0x03728E44 BL 0x22B8860
	0x03728E48 LDP X0, X1, [X31 + 0x8]
	0x03728E4C LDR X8, [X23 + 0x28]
	0x03728E50 LDR X9, [X31 + 0x38]
	0x03728E54 CMP X8, X9
	0x03728E58 B.NE 0x3728E74
	0x03728E5C LDP X20, X19, [X31 + 0x70]
	0x03728E60 LDP X22, X21, [X31 + 0x60]
	0x03728E64 LDP X24, X23, [X31 + 0x50]
	0x03728E68 LDP X30, X25, [X31 + 0x40]
	0x03728E6C ADD X31, X31, 0x80
	0x03728E70 RET
	0x03728E74 BL 0x3EB1B20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X23, 0xCB9000
	011 Move X22, 0xA1D000
	012 Move W19, W3
	013 Move [X31+40], X8
	014 Move [X31+24], X1
	015 Move [X31+32], X2
	016 Move W8, [X23+3168]
	017 Move X22, [X22+3104]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1D000
	024 Move X0, [X0+3104]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3168], W8
	028 Move X6, [X22]
	029 Add X0, X31, 8
	030 Add X2, X31, 24
	031 Move W4, 2
	032 Move X1, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call 0x22B9708, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X21+40]
	041 Move X9, [X31+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0
	051 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 i32gather_ps(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x03728E78 SUB X31, X31, 0x80
	0x03728E7C STP X30, X25, [X31 + 0x40]
	0x03728E80 STP X24, X23, [X31 + 0x50]
	0x03728E84 STP X22, X21, [X31 + 0x60]
	0x03728E88 STP X20, X19, [X31 + 0x70]
	0x03728E8C MRS X23, 0xC000
	0x03728E90 LDR X8, [X23 + 0x28]
	0x03728E94 ADRP X25, 0xCB8000
	0x03728E98 ADRP X24, 0xA1C000
	0x03728E9C MOV W19, W7
	0x03728EA0 STR X8, [X31 + 0x38]
	0x03728EA4 STP X3, X4, [X31 + 0x28]
	0x03728EA8 STP X5, X6, [X31 + 0x18]
	0x03728EAC LDRB W8, [X25 + 0xC78]
	0x03728EB0 LDR X24, [X24 + 0xC40]
	0x03728EB4 MOV X20, X2
	0x03728EB8 MOV X21, X1
	0x03728EBC MOV X22, X0
	0x03728EC0 TBNZ X8, 0x0, 0x3728ED8
	0x03728EC4 ADRP X0, 0xA1C000
	0x03728EC8 LDR X0, [X0 + 0xC40]
	0x03728ECC BL 0x1C16CF4
	0x03728ED0 MOVZ W8, 0x1
	0x03728ED4 STRB W8, [X25 + 0xC78]
	0x03728ED8 LDR X6, [X24]
	0x03728EDC ADD X0, X31, 0x8
	0x03728EE0 ADD X2, X31, 0x28
	0x03728EE4 ADD X5, X31, 0x18
	0x03728EE8 MOVZ W4, 0x2
	0x03728EEC MOV X1, X20
	0x03728EF0 MOV W3, W19
	0x03728EF4 STP X22, X21, [X31 + 0x8]
	0x03728EF8 BL 0x22B89B8
	0x03728EFC LDP X0, X1, [X31 + 0x8]
	0x03728F00 LDR X8, [X23 + 0x28]
	0x03728F04 LDR X9, [X31 + 0x38]
	0x03728F08 CMP X8, X9
	0x03728F0C B.NE 0x3728F28
	0x03728F10 LDP X20, X19, [X31 + 0x70]
	0x03728F14 LDP X22, X21, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X23, 0xCB9000
	011 Move X22, 0xA1D000
	012 Move W19, W3
	013 Move [X31+40], X8
	014 Move [X31+24], X1
	015 Move [X31+32], X2
	016 Move W8, [X23+3169]
	017 Move X22, [X22+3112]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1D000
	024 Move X0, [X0+3112]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3169], W8
	028 Move X6, [X22]
	029 Add X0, X31, 8
	030 Add X2, X31, 24
	031 Move W4, 4
	032 Move X1, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X21+40]
	041 Move X9, [X31+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0
	051 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 i64gather_pd(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x03728F18 LDP X24, X23, [X31 + 0x50]
	0x03728F1C LDP X30, X25, [X31 + 0x40]
	0x03728F20 ADD X31, X31, 0x80
	0x03728F24 RET
	0x03728F28 BL 0x3EB1B20
	0x03728F2C SUB X31, X31, 0x80
	0x03728F30 STR X30, [X31 + 0x40]
	0x03728F34 STP X24, X23, [X31 + 0x50]
	0x03728F38 STP X22, X21, [X31 + 0x60]
	0x03728F3C STP X20, X19, [X31 + 0x70]
	0x03728F40 MRS X22, 0xC000
	0x03728F44 LDR X8, [X22 + 0x28]
	0x03728F48 ADRP X24, 0xCB8000
	0x03728F4C ADRP X23, 0xA1C000
	0x03728F50 MOV W19, W7
	0x03728F54 STR X8, [X31 + 0x38]
	0x03728F58 STP X3, X4, [X31 + 0x28]
	0x03728F5C STP X5, X6, [X31 + 0x18]
	0x03728F60 LDRB W8, [X24 + 0xC79]
	0x03728F64 LDR X23, [X23 + 0xC48]
	0x03728F68 MOV X20, X2
	0x03728F6C MOV X21, X0
	0x03728F70 TBNZ X8, 0x0, 0x3728F88
	0x03728F74 ADRP X0, 0xA1C000
	0x03728F78 LDR X0, [X0 + 0xC48]
	0x03728F7C BL 0x1C16CF4
	0x03728F80 MOVZ W8, 0x1
	0x03728F84 STRB W8, [X24 + 0xC79]
	0x03728F88 LDR X6, [X23]
	0x03728F8C ADD X0, X31, 0x8
	0x03728F90 ADD X2, X31, 0x28
	0x03728F94 ADD X5, X31, 0x18
	0x03728F98 MOVZ W4, 0x2
	0x03728F9C MOV X1, X20
	0x03728FA0 MOV W3, W19
	0x03728FA4 STP X21, X31, [X31 + 0x8]
	0x03728FA8 BL 0x22B890C
	0x03728FAC LDP X0, X1, [X31 + 0x8]
	0x03728FB0 LDR X8, [X22 + 0x28]
	0x03728FB4 LDR X9, [X31 + 0x38]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X23, 0xCB9000
	011 Move X22, 0xA1D000
	012 Move W19, W3
	013 Move [X31+40], X8
	014 Move [X31+24], X1
	015 Move [X31+32], X2
	016 Move W8, [X23+3170]
	017 Move X22, [X22+3120]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1D000
	024 Move X0, [X0+3120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3170], W8
	028 Move X6, [X22]
	029 Add X0, X31, 8
	030 Add X2, X31, 24
	031 Move W4, 2
	032 Move X1, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call 0x22B97B4, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X21+40]
	041 Move X9, [X31+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0
	051 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 i64gather_ps(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x03728FB8 CMP X8, X9
	0x03728FBC B.NE 0x3728FD8
	0x03728FC0 LDP X20, X19, [X31 + 0x70]
	0x03728FC4 LDP X22, X21, [X31 + 0x60]
	0x03728FC8 LDP X24, X23, [X31 + 0x50]
	0x03728FCC LDR X30, [X31 + 0x40]
	0x03728FD0 ADD X31, X31, 0x80
	0x03728FD4 RET
	0x03728FD8 BL 0x3EB1B20
	0x03728FDC SUB X31, X31, 0x80
	0x03728FE0 STP X30, X25, [X31 + 0x40]
	0x03728FE4 STP X24, X23, [X31 + 0x50]
	0x03728FE8 STP X22, X21, [X31 + 0x60]
	0x03728FEC STP X20, X19, [X31 + 0x70]
	0x03728FF0 MRS X23, 0xC000
	0x03728FF4 LDR X8, [X23 + 0x28]
	0x03728FF8 ADRP X25, 0xCB8000
	0x03728FFC ADRP X24, 0xA1C000
	0x03729000 MOV W19, W7
	0x03729004 STR X8, [X31 + 0x38]
	0x03729008 STP X3, X4, [X31 + 0x28]
	0x0372900C STP X5, X6, [X31 + 0x18]
	0x03729010 LDRB W8, [X25 + 0xC7A]
	0x03729014 LDR X24, [X24 + 0xC50]
	0x03729018 MOV X20, X2
	0x0372901C MOV X21, X1
	0x03729020 MOV X22, X0
	0x03729024 TBNZ X8, 0x0, 0x372903C
	0x03729028 ADRP X0, 0xA1B000
	0x0372902C LDR X0, [X0 + 0xC50]
	0x03729030 BL 0x1C16CF4
	0x03729034 MOVZ W8, 0x1
	0x03729038 STRB W8, [X25 + 0xC7A]
	0x0372903C LDR X6, [X24]
	0x03729040 ADD X0, X31, 0x8
	0x03729044 ADD X2, X31, 0x28
	0x03729048 ADD X5, X31, 0x18
	0x0372904C MOVZ W4, 0x2
	0x03729050 MOV X1, X20
	0x03729054 MOV W3, W19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X23, 0xCB9000
	011 Move X22, 0xA1D000
	012 Move W19, W3
	013 Move [X31+40], X8
	014 Move [X31+24], X1
	015 Move [X31+32], X2
	016 Move W8, [X23+3171]
	017 Move X22, [X22+3128]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1D000
	024 Move X0, [X0+3128]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3171], W8
	028 Move X6, [X22]
	029 Add X0, X31, 8
	030 Add X2, X31, 24
	031 Move W4, 2
	032 Move X1, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X21+40]
	041 Move X9, [X31+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0
	051 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_i32gather_epi64(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x03729058 STP X22, X21, [X31 + 0x8]
	0x0372905C BL 0x22B8A64
	0x03729060 LDP X0, X1, [X31 + 0x8]
	0x03729064 LDR X8, [X23 + 0x28]
	0x03729068 LDR X9, [X31 + 0x38]
	0x0372906C CMP X8, X9
	0x03729070 B.NE 0x372908C
	0x03729074 LDP X20, X19, [X31 + 0x70]
	0x03729078 LDP X22, X21, [X31 + 0x60]
	0x0372907C LDP X24, X23, [X31 + 0x50]
	0x03729080 LDP X30, X25, [X31 + 0x40]
	0x03729084 ADD X31, X31, 0x80
	0x03729088 RET
	0x0372908C BL 0x3EB1B20
	0x03729090 MOV W0, W31
	0x03729094 RET
	0x03729098 BIC W0, W1, W0, 0x0
	0x0372909C RET
	0x037290A0 BIC X0, X1, X0, 0x0
	0x037290A4 RET
	0x037290A8 ANDS W31, W1, 0xE0
	0x037290AC B.EQ 0x37290B8
	0x037290B0 MOV W0, W31
	0x037290B4 RET
	0x037290B8 ANDS W31, W2, 0xE0
	0x037290BC LSRV W0, W0, W1
	0x037290C0 B.EQ 0x37290C8
	0x037290C4 RET
	0x037290C8 MOVN W8, 0x0
	0x037290CC LSLV W8, W8, W2
	0x037290D0 BIC W0, W0, W8, 0x0
	0x037290D4 RET
	0x037290D8 ANDS W31, W1, 0xC0
	0x037290DC B.EQ 0x37290E8
	0x037290E0 MOV X0, X31
	0x037290E4 RET
	0x037290E8 ANDS W31, W2, 0xC0
	0x037290EC LSRV X0, X0, X1
	0x037290F0 B.EQ 0x37290F8
	0x037290F4 RET
	0x037290F8 MOVN X8, 0x0
	0x037290FC LSLV X8, X8, X2
	0x03729100 BIC X0, X0, X8, 0x0
	0x03729104 RET
	0x03729108 ANDS W31, W1, 0xE0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X19, X8
	011 Move X8, [X22+40]
	012 Move X24, 0xCB8000
	013 Move X23, 0xA1C000
	014 Move W20, W3
	015 Move [X31+56], X8
	016 Move [X31+40], X1
	017 Move [X31+48], X2
	018 Move W8, [X24+3172]
	019 Move X23, [X23+3136]
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xA1C000
	026 Move X0, [X0+3136]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+3172], W8
	030 Move X6, [X23]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Add X0, X31, 0
	033 Add X2, X31, 40
	034 Move W4, 4
	035 Move X1, X21
	036 Move W3, W20
	037 Move X5, X31
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	041 Move V1, [X31]
	042 Move V0, [X31+16]
	043 Move [X19], V1
	044 Move [X19+8], V0
	045 Move X8, [X22+40]
	046 Move X9, [X31+56]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+112]
	049 Move X19, [X31+120]
	050 Move X22, [X31+96]
	051 Move X21, [X31+104]
	052 Move X24, [X31+80]
	053 Move X23, [X31+88]
	054 Move X30, [X31+64]
	055 Add X31, X31, 128
	056 Return X0
	057 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mm256_i64gather_epi32(System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, System.Int32 scale)

Disassembly:
	0x0372910C B.EQ 0x3729118
	0x03729110 MOV W0, W31
	0x03729114 RET
	0x03729118 ANDS W31, W1, 0xE000
	0x0372911C LSRV W0, W0, W1
	0x03729120 B.EQ 0x3729128
	0x03729124 RET
	0x03729128 UBFM W8, W1, 0x8, 0x1F
	0x0372912C MOVN W9, 0x0
	0x03729130 LSLV W8, W9, W8
	0x03729134 BIC W0, W0, W8, 0x0
	0x03729138 RET
	0x0372913C ANDS X31, X1, 0xFF
	0x03729140 B.EQ 0x372914C
	0x03729144 MOV X0, X31
	0x03729148 RET
	0x0372914C ANDS X31, X1, 0xFFFF
	0x03729150 LSRV X0, X0, X1
	0x03729154 B.EQ 0x372915C
	0x03729158 RET
	0x0372915C UBFM X8, X1, 0x8, 0x3F
	0x03729160 MOVN X9, 0x0
	0x03729164 LSLV X8, X9, X8
	0x03729168 BIC X0, X0, X8, 0x0
	0x0372916C RET
	0x03729170 SUB W8, W31, W0
	0x03729174 AND W0, W8, W0, 0x0
	0x03729178 RET
	0x0372917C SUB X8, X31, X0
	0x03729180 AND X0, X8, X0, 0x0
	0x03729184 RET
	0x03729188 SUB W8, W0, 0x1
	0x0372918C EOR W0, W8, W0, 0x0
	0x03729190 RET
	0x03729194 SUB X8, X0, 0x1
	0x03729198 EOR X0, X8, X0, 0x0
	0x0372919C RET
	0x037291A0 SUB W8, W0, 0x1
	0x037291A4 AND W0, W8, W0, 0x0
	0x037291A8 RET
	0x037291AC SUB X8, X0, 0x1
	0x037291B0 AND X0, X8, X0, 0x0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X24, 0xCB8000
	012 Move X23, 0xA1C000
	013 Move W19, W2
	014 Move [X31+24], X8
	015 Move W8, [X24+3173]
	016 Move X23, [X23+3144]
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1C000
	024 Move X0, [X0+3144]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+3173], W8
	028 Move X6, [X23]
	029 Add X0, X31, 8
	030 Move W4, 4
	031 Move X1, X21
	032 Move X2, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X22+40]
	041 Move X9, [X31+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X24, [X31+48]
	048 Move X23, [X31+56]
	049 Move X30, [X31+32]
	050 Add X31, X31, 96
	051 Return X0
	052 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_i64gather_epi64(System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, System.Int32 scale)

Disassembly:
	0x037291B4 RET
	0x037291B8 SUB W8, W31, W0
	0x037291BC ANDS W8, W8, W0, 0x0
	0x037291C0 B.EQ 0x3729208
	0x037291C4 ANDS W31, W8, 0xFFFF
	0x037291C8 MOVZ W9, 0xF
	0x037291CC MOVZ W10, 0x1F
	0x037291D0 CSEL W9, W10, W9, EQ
	0x037291D4 ANDS W31, W8, 0xFF00FF
	0x037291D8 SUB W10, W9, 0x8
	0x037291DC CSEL W9, W9, W10, EQ
	0x037291E0 ANDS W31, W8, 0xF0F0F0F
	0x037291E4 SUB W10, W9, 0x4
	0x037291E8 CSEL W9, W9, W10, EQ
	0x037291EC ANDS W31, W8, 0x33333333
	0x037291F0 SUB W10, W9, 0x2
	0x037291F4 CSEL W9, W9, W10, EQ
	0x037291F8 ANDS W31, W8, 0x55555555
	0x037291FC CSET W8, NE
	0x03729200 SUB W0, W9, W8
	0x03729204 RET
	0x03729208 MOVZ W0, 0x20
	0x0372920C RET
	0x03729210 SUB X8, X31, X0
	0x03729214 ANDS X8, X8, X0, 0x0
	0x03729218 B.EQ 0x372926C
	0x0372921C CMP W8, 0x0
	0x03729220 MOVZ W9, 0x1F
	0x03729224 MOVZ W10, 0x3F
	0x03729228 CSEL X9, X10, X9, EQ
	0x0372922C ANDS X31, X8, 0xFFFF0000FFFF
	0x03729230 SUB X10, X9, 0x10
	0x03729234 CSEL X9, X9, X10, EQ
	0x03729238 ANDS X31, X8, 0xFF00FF00FF00FF
	0x0372923C SUB X10, X9, 0x8
	0x03729240 CSEL X9, X9, X10, EQ
	0x03729244 ANDS X31, X8, 0xF0F0F0F0F0F0F0F
	0x03729248 SUB X10, X9, 0x4
	0x0372924C CSEL X9, X9, X10, EQ
	0x03729250 ANDS X31, X8, 0x3333333333333333
	0x03729254 SUB X10, X9, 0x2
	0x03729258 CSEL X9, X9, X10, EQ
	0x0372925C ANDS X31, X8, 0x5555555555555555
	0x03729260 CSET W8, NE
	0x03729264 SUB X0, X9, X8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X19, X8
	012 Move X8, [X23+40]
	013 Move X25, 0xCB8000
	014 Move X24, 0xA1C000
	015 Move W20, W2
	016 Move [X31+40], X8
	017 Move W8, [X25+3174]
	018 Move X24, [X24+3152]
	019 Move X21, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xA1C000
	026 Move X0, [X0+3152]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+3174], W8
	030 Move X6, [X24]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Add X0, X31, 0
	033 Move W4, 4
	034 Move X1, X22
	035 Move X2, X21
	036 Move W3, W20
	037 Move X5, X31
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	041 Move V1, [X31]
	042 Move V0, [X31+16]
	043 Move [X19], V1
	044 Move [X19+8], V0
	045 Move X8, [X23+40]
	046 Move X9, [X31+40]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+96]
	049 Move X19, [X31+104]
	050 Move X22, [X31+80]
	051 Move X21, [X31+88]
	052 Move X24, [X31+64]
	053 Move X23, [X31+72]
	054 Move X30, [X31+48]
	055 Move X25, [X31+56]
	056 Add X31, X31, 112
	057 Return X0
	058 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 i32gather_epi32(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x03729268 RET
	0x0372926C MOVZ W0, 0x40
	0x03729270 RET
	0x03729274 MOV W0, W31
	0x03729278 RET
	0x0372927C MOVN W8, 0x0
	0x03729280 LSLV W9, W8, W1
	0x03729284 ANDS W31, W1, 0xE0
	0x03729288 CSINV W8, W8, W9, NE
	0x0372928C AND W0, W8, W0, 0x0
	0x03729290 RET
	0x03729294 MOVN X8, 0x0
	0x03729298 LSLV X9, X8, X1
	0x0372929C ANDS X31, X1, 0xFF
	0x037292A0 CSINV X8, X8, X9, NE
	0x037292A4 AND X0, X8, X0, 0x0
	0x037292A8 RET
	0x037292AC UMADDL X0, X1, X0, X31
	0x037292B0 UBFM X8, X0, 0x20, 0x3F
	0x037292B4 STR W8, [X2]
	0x037292B8 RET
	0x037292BC AND X8, X0, 0x0
	0x037292C0 UBFM X10, X1, 0x20, 0x3F
	0x037292C4 AND X9, X1, 0x0
	0x037292C8 UBFM X11, X0, 0x20, 0x3F
	0x037292CC UMADDL X12, X1, X0, X31
	0x037292D0 MUL X8, X10, X8
	0x037292D4 MUL X9, X9, X11
	0x037292D8 MUL X11, X10, X11
	0x037292DC ADD X8, X8, X12, 0x20, LSR
	0x037292E0 ADD X10, X11, X9, 0x20, LSR
	0x037292E4 ADD X8, X8, W9, UXTW
	0x037292E8 ADD X8, X10, X8, 0x20, LSR
	0x037292EC MUL X0, X1, X0
	0x037292F0 STR X8, [X2]
	0x037292F4 RET
	0x037292F8 MOV W8, W31
	0x037292FC MOV W9, W31
	0x03729300 MOV W10, W31
	0x03729304 LSRV W11, W1, W10

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X23, 0xCB8000
	011 Move X22, 0xA1C000
	012 Move W19, W3
	013 Move [X31+40], X8
	014 Move [X31+24], X1
	015 Move [X31+32], X2
	016 Move W8, [X23+3175]
	017 Move X22, [X22+3096]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1C000
	024 Move X0, [X0+3096]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3175], W8
	028 Move X6, [X22]
	029 Add X0, X31, 8
	030 Add X2, X31, 24
	031 Move W4, 4
	032 Move X1, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X21+40]
	041 Move X9, [X31+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0
	051 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 i32gather_epi64(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x03729308 TBZ X11, 0x0, 0x3729320
	0x0372930C LSRV W11, W0, W9
	0x03729310 AND W11, W11, 0x1
	0x03729314 LSLV W11, W11, W10
	0x03729318 ORR W8, W11, W8, 0x0
	0x0372931C ADD W9, W9, 0x1
	0x03729320 ADD W10, W10, 0x1
	0x03729324 CMP W10, 0x20
	0x03729328 B.NE 0x3729304
	0x0372932C MOV W0, W8
	0x03729330 RET
	0x03729334 MOV X9, X31
	0x03729338 MOV X8, X31
	0x0372933C MOV W10, W31
	0x03729340 LSRV X11, X1, X9
	0x03729344 TBZ X11, 0x0, 0x372935C
	0x03729348 LSRV X11, X0, X10
	0x0372934C AND X11, X11, 0x1
	0x03729350 LSLV X11, X11, X9
	0x03729354 ORR X8, X11, X8, 0x0
	0x03729358 ADD W10, W10, 0x1
	0x0372935C ADD X9, X9, 0x1
	0x03729360 CMP X9, 0x40
	0x03729364 B.NE 0x3729340
	0x03729368 MOV X0, X8
	0x0372936C RET
	0x03729370 MOV W8, W31
	0x03729374 MOV W9, W31
	0x03729378 MOV W10, W31
	0x0372937C LSRV W11, W1, W10
	0x03729380 TBZ X11, 0x0, 0x3729398
	0x03729384 LSRV W11, W0, W10
	0x03729388 AND W11, W11, 0x1
	0x0372938C LSLV W11, W11, W9
	0x03729390 ORR W8, W11, W8, 0x0
	0x03729394 ADD W9, W9, 0x1
	0x03729398 ADD W10, W10, 0x1
	0x0372939C CMP W10, 0x20
	0x037293A0 B.NE 0x372937C
	0x037293A4 MOV W0, W8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X23, 0xCB8000
	011 Move X22, 0xA1C000
	012 Move W19, W3
	013 Move [X31+40], X8
	014 Move [X31+24], X1
	015 Move [X31+32], X2
	016 Move W8, [X23+3176]
	017 Move X22, [X22+3136]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1C000
	024 Move X0, [X0+3136]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3176], W8
	028 Move X6, [X22]
	029 Add X0, X31, 8
	030 Add X2, X31, 24
	031 Move W4, 2
	032 Move X1, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X21+40]
	041 Move X9, [X31+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0
	051 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 i64gather_epi32(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x037293A8 RET
	0x037293AC MOV X9, X31
	0x037293B0 MOV X8, X31
	0x037293B4 MOV W10, W31
	0x037293B8 LSRV X11, X1, X9
	0x037293BC TBZ X11, 0x0, 0x37293D4
	0x037293C0 LSRV X11, X0, X9
	0x037293C4 AND X11, X11, 0x1
	0x037293C8 LSLV X11, X11, X10
	0x037293CC ORR X8, X11, X8, 0x0
	0x037293D0 ADD W10, W10, 0x1
	0x037293D4 ADD X9, X9, 0x1
	0x037293D8 CMP X9, 0x40
	0x037293DC B.NE 0x37293B8
	0x037293E0 MOV X0, X8
	0x037293E4 RET
	0x037293E8 STR W31, [X0]
	0x037293EC RET
	0x037293F0 RET
	0x037293F4 MOV W0, W31
	0x037293F8 RET
	0x037293FC UBFM W10, W0, 0x10, 0xF
	0x03729400 UBFM W9, W0, 0xA, 0xE
	0x03729404 AND W8, W0, 0x3FF
	0x03729408 AND W0, W10, 0x80000000
	0x0372940C CBZ W9, 0x372942C
	0x03729410 MOVZ W10, 0x38000000
	0x03729414 CMP W9, 0x1F
	0x03729418 MOVZ W11, 0xFF
	0x0372941C ADD W9, W10, W9, 0x17, LSL
	0x03729420 CSEL W9, W11, W9, EQ
	0x03729424 ORR W8, W0, W8, 0xD
	0x03729428 B 0x3729450
	0x0372942C CBZ W8, 0x3729454
	0x03729430 CLZ W9, W8
	0x03729434 ORR W11, W9, 0xFFFFFFE0
	0x03729438 ADD W11, W11, 0xA
	0x0372943C LSLV W8, W8, W11
	0x03729440 MOVZ W10, 0x43000000
	0x03729444 UBFM W8, W8, 0x12, 0x8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X23, 0xCB8000
	011 Move X22, 0xA1C000
	012 Move W19, W3
	013 Move [X31+40], X8
	014 Move [X31+24], X1
	015 Move [X31+32], X2
	016 Move W8, [X23+3177]
	017 Move X22, [X22+3144]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1C000
	024 Move X0, [X0+3144]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3177], W8
	028 Move X6, [X22]
	029 Add X0, X31, 8
	030 Add X2, X31, 24
	031 Move W4, 2
	032 Move X1, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X21+40]
	041 Move X9, [X31+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0
	051 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 i64gather_epi64(System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, System.Int32 scale)

Disassembly:
	0x03729448 SUB W9, W10, W9, 0x17, LSL
	0x0372944C ORR W8, W8, W0, 0x0
	0x03729450 ORR W0, W8, W9, 0x0
	0x03729454 RET
	0x03729458 STR X30, [X31 - 0x30]!
	0x0372945C STP X22, X21, [X31 + 0x10]
	0x03729460 STP X20, X19, [X31 + 0x20]
	0x03729464 ADRP X21, 0xCB7000
	0x03729468 ADRP X20, 0xA1B000
	0x0372946C LDRB W8, [X21 + 0xC7B]
	0x03729470 LDR X20, [X20 + 0xC58]
	0x03729474 MOV X19, X0
	0x03729478 TBNZ X8, 0x0, 0x3729490
	0x0372947C ADRP X0, 0xA1B000
	0x03729480 LDR X0, [X0 + 0xC58]
	0x03729484 BL 0x1C16CF4
	0x03729488 MOVZ W8, 0x1
	0x0372948C STRB W8, [X21 + 0xC7B]
	0x03729490 LDR X0, [X20]
	0x03729494 LDR W8, [X0 + 0xE0]
	0x03729498 CBNZ W8, 0x37294A0
	0x0372949C BL 0x1C16DFC
	0x037294A0 MOV W0, W19
	0x037294A4 UBFM X20, X19, 0x10, 0x3F
	0x037294A8 UBFM X21, X19, 0x20, 0x3F
	0x037294AC UBFM X22, X19, 0x30, 0x3F
	0x037294B0 BL 0x37293FC
	0x037294B4 MOV W19, W0
	0x037294B8 MOV W0, W20
	0x037294BC BL 0x37293FC
	0x037294C0 MOV W20, W0
	0x037294C4 MOV W0, W21
	0x037294C8 BL 0x37293FC
	0x037294CC MOV W21, W0
	0x037294D0 MOV W0, W22
	0x037294D4 BL 0x37293FC
	0x037294D8 MOV W8, W19
	0x037294DC MOV W1, W21
	0x037294E0 BFM X8, X20, 0x20, 0x1F
	0x037294E4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X23, 0xCB8000
	011 Move X22, 0xA1C000
	012 Move W19, W3
	013 Move [X31+40], X8
	014 Move [X31+24], X1
	015 Move [X31+32], X2
	016 Move W8, [X23+3178]
	017 Move X22, [X22+3152]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA1C000
	024 Move X0, [X0+3152]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3178], W8
	028 Move X6, [X22]
	029 Add X0, X31, 8
	030 Add X2, X31, 24
	031 Move W4, 2
	032 Move X1, X20
	033 Move W3, W19
	034 Move X5, X31
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	038 Move X0, [X31+8]
	039 Move X1, [X31+16]
	040 Move X8, [X21+40]
	041 Move X9, [X31+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0
	051 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_mask_i32gather_pd(Unity.Burst.Intrinsics.v256 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v256 mask, System.Int32 scale)

Disassembly:
	0x037294E8 LDP X22, X21, [X31 + 0x10]
	0x037294EC BFM X1, X0, 0x20, 0x1F
	0x037294F0 MOV X0, X8
	0x037294F4 LDR X30, [X31], #0x30
	0x037294F8 RET
	0x037294FC STP X30, X27, [X31 - 0x50]!
	0x03729500 STP X26, X25, [X31 + 0x10]
	0x03729504 STP X24, X23, [X31 + 0x20]
	0x03729508 STP X22, X21, [X31 + 0x30]
	0x0372950C STP X20, X19, [X31 + 0x40]
	0x03729510 ADRP X23, 0xCB7000
	0x03729514 ADRP X22, 0xA1B000
	0x03729518 MOV X19, X8
	0x0372951C LDRB W8, [X23 + 0xC7C]
	0x03729520 LDR X22, [X22 + 0xC58]
	0x03729524 MOV X20, X1
	0x03729528 MOV X21, X0
	0x0372952C TBNZ X8, 0x0, 0x3729544
	0x03729530 ADRP X0, 0xA1B000
	0x03729534 LDR X0, [X0 + 0xC58]
	0x03729538 BL 0x1C16CF4
	0x0372953C MOVZ W8, 0x1
	0x03729540 STRB W8, [X23 + 0xC7C]
	0x03729544 LDR X0, [X22]
	0x03729548 LDR W8, [X0 + 0xE0]
	0x0372954C CBNZ W8, 0x3729554
	0x03729550 BL 0x1C16DFC
	0x03729554 MOV W0, W21
	0x03729558 UBFM X22, X21, 0x10, 0x3F
	0x0372955C UBFM X23, X21, 0x20, 0x3F
	0x03729560 UBFM X24, X21, 0x30, 0x3F
	0x03729564 BL 0x37293FC
	0x03729568 MOV W21, W0
	0x0372956C MOV W0, W22
	0x03729570 BL 0x37293FC
	0x03729574 MOV W22, W0
	0x03729578 MOV W0, W23
	0x0372957C BL 0x37293FC
	0x03729580 MOV W23, W0
	0x03729584 MOV W0, W24
	0x03729588 BL 0x37293FC
	0x0372958C MOV W24, W0
	0x03729590 MOV W0, W20
	0x03729594 UBFM X25, X20, 0x10, 0x3F
	0x03729598 BL 0x37293FC
	0x0372959C MOV W26, W0
	0x037295A0 MOV W0, W25
	0x037295A4 UBFM X27, X20, 0x20, 0x3F
	0x037295A8 BL 0x37293FC

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X19, X8
	013 Move X8, [X24+40]
	014 Move X26, 0xCB8000
	015 Move X25, 0xA1C000
	016 Move W20, W5
	017 Move [X31+56], X8
	018 Move [X31+40], X2
	019 Move [X31+48], X3
	020 Move W8, [X26+3179]
	021 Move X25, [X25+3104]
	022 Move X21, X4
	023 Move X22, X1
	024 Move X23, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3104]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+3179], W8
	034 Move V1, [X23]
	035 Move V0, [X23+16]
	036 Move X6, [X25]
	037 Add X0, X31, 0
	038 Add X2, X31, 40
	039 Move W4, 4
	040 Move X1, X22
	041 Move W3, W20
	042 Move X5, X21
	043 Move [X31], V1
	044 Move [X31+8], V0
	045 Call 0x22B9708, X0, X1, X2, X3, X4, X5
	046 Move V1, [X31]
	047 Move V0, [X31+16]
	048 Move [X19], V1
	049 Move [X19+8], V0
	050 Move X8, [X24+40]
	051 Move X9, [X31+56]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+128]
	054 Move X19, [X31+136]
	055 Move X22, [X31+112]
	056 Move X21, [X31+120]
	057 Move X24, [X31+96]
	058 Move X23, [X31+104]
	059 Move X26, [X31+80]
	060 Move X25, [X31+88]
	061 Move X30, [X31+64]
	062 Add X31, X31, 144
	063 Return X0
	064 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_mask_i32gather_ps(Unity.Burst.Intrinsics.v256 src, System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, Unity.Burst.Intrinsics.v256 mask, System.Int32 scale)

Disassembly:
	0x037295AC MOV W25, W0
	0x037295B0 MOV W0, W27
	0x037295B4 UBFM X20, X20, 0x30, 0x3F
	0x037295B8 BL 0x37293FC
	0x037295BC MOV W27, W0
	0x037295C0 MOV W0, W20
	0x037295C4 BL 0x37293FC
	0x037295C8 STP W21, W22, [X19]
	0x037295CC STP W23, W24, [X19 + 0x8]
	0x037295D0 STP W26, W25, [X19 + 0x10]
	0x037295D4 STP W27, W0, [X19 + 0x18]
	0x037295D8 LDP X20, X19, [X31 + 0x40]
	0x037295DC LDP X22, X21, [X31 + 0x30]
	0x037295E0 LDP X24, X23, [X31 + 0x20]
	0x037295E4 LDP X26, X25, [X31 + 0x10]
	0x037295E8 LDP X30, X27, [X31], #0x50
	0x037295EC RET
	0x037295F0 STR X30, [X31 - 0x30]!
	0x037295F4 STP X22, X21, [X31 + 0x10]
	0x037295F8 STP X20, X19, [X31 + 0x20]
	0x037295FC ADRP X22, 0xCB7000
	0x03729600 ADRP X21, 0xA1B000
	0x03729604 LDRB W8, [X22 + 0xC7D]
	0x03729608 LDR X21, [X21 + 0xC58]
	0x0372960C MOV W20, W1
	0x03729610 MOV W19, W0
	0x03729614 TBNZ X8, 0x0, 0x372962C
	0x03729618 ADRP X0, 0xA1B000
	0x0372961C LDR X0, [X0 + 0xC58]
	0x03729620 BL 0x1C16CF4
	0x03729624 MOVZ W8, 0x1
	0x03729628 STRB W8, [X22 + 0xC7D]
	0x0372962C LDR X0, [X21]
	0x03729630 LDR W8, [X0 + 0xE0]
	0x03729634 CBNZ W8, 0x3729640
	0x03729638 BL 0x1C16DFC
	0x0372963C LDR X0, [X21]
	0x03729640 LDR X9, [X0 + 0xB8]
	0x03729644 LDR X10, [X9 + 0x8]
	0x03729648 CBZ X10, 0x37297B8
	0x0372964C LDR W11, [X10 + 0x18]
	0x03729650 UBFM W8, W19, 0x17, 0x1F
	0x03729654 CMP W8, W11
	0x03729658 B.CS 0x37297BC
	0x0372965C LDR X12, [X9]
	0x03729660 CBZ X12, 0x37297B8
	0x03729664 LDR W9, [X12 + 0x18]
	0x03729668 CMP W8, W9
	0x0372966C B.CS 0x37297BC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X19, X8
	014 Move X8, [X25+40]
	015 Move X27, 0xCB8000
	016 Move X26, 0xA1C000
	017 Move W20, W4
	018 Move [X31+40], X8
	019 Move W8, [X27+3180]
	020 Move X26, [X26+3112]
	021 Move X21, X3
	022 Move X22, X2
	023 Move X23, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3112]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+3180], W8
	034 Move V1, [X24]
	035 Move V0, [X24+16]
	036 Move X6, [X26]
	037 Add X0, X31, 0
	038 Move W4, 8
	039 Move X1, X23
	040 Move X2, X22
	041 Move W3, W20
	042 Move X5, X21
	043 Move [X31], V1
	044 Move [X31+8], V0
	045 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	046 Move V1, [X31]
	047 Move V0, [X31+16]
	048 Move [X19], V1
	049 Move [X19+8], V0
	050 Move X8, [X25+40]
	051 Move X9, [X31+40]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+112]
	054 Move X19, [X31+120]
	055 Move X22, [X31+96]
	056 Move X21, [X31+104]
	057 Move X24, [X31+80]
	058 Move X23, [X31+88]
	059 Move X26, [X31+64]
	060 Move X25, [X31+72]
	061 Move X30, [X31+48]
	062 Move X27, [X31+56]
	063 Add X31, X31, 128
	064 Return X0
	065 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_mask_i64gather_pd(Unity.Burst.Intrinsics.v256 src, System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, Unity.Burst.Intrinsics.v256 mask, System.Int32 scale)

Disassembly:
	0x03729670 MOV W13, W8
	0x03729674 ADD X10, X10, X13
	0x03729678 LDRB W11, [X10 + 0x20]
	0x0372967C ADD X10, X12, X13, 0x1, LSL
	0x03729680 LDRH W10, [X10 + 0x20]
	0x03729684 AND W9, W19, 0x7FFFFF
	0x03729688 SUB W13, W20, 0x8
	0x0372968C LSRV W12, W9, W11
	0x03729690 CMP W13, 0x3
	0x03729694 ADD W0, W10, W12, UXTH
	0x03729698 B.HI 0x37297A8
	0x0372969C ADRP X14, 0xFFFFFFFFFD46E000
	0x037296A0 ADD X14, X14, 0x869
	0x037296A4 ADR X15, 0x1C
	0x037296A8 LDRB W16, [X14, X13, LSL]
	0x037296AC ADD X15, X15, X16, 0x2, LSL
	0x037296B0 AND W10, W11, 0x1F
	0x037296B4 AND W12, W0, 0x7C00
	0x037296B8 AND W13, W0, 0x8000
	0x037296BC BR X15
	0x037296C0 AND W8, W19, 0x7F800000
	0x037296C4 MOVZ W10, 0x33000000
	0x037296C8 MOVZ W13, 0x7C00
	0x037296CC CMP W8, W10
	0x037296D0 CINC W0, W0, EQ
	0x037296D4 CMP W12, W13
	0x037296D8 B.EQ 0x37297A8
	0x037296DC SUB W8, W11, 0x1
	0x037296E0 LSRV W8, W9, W8
	0x037296E4 AND W8, W8, 0x1
	0x037296E8 ADD W0, W0, W8
	0x037296EC B 0x37297A8
	0x037296F0 MOVZ W11, 0x7C00
	0x037296F4 CMP W12, W11
	0x037296F8 CSET W12, NE
	0x037296FC ANDS W31, W12, W13, 0xF
	0x03729700 B.EQ 0x372976C
	0x03729704 CMP W8, 0x166
	0x03729708 B.HI 0x372975C
	0x0372970C CMP W8, 0x100
	0x03729710 B.EQ 0x372975C
	0x03729714 ADD W0, W0, 0x1
	0x03729718 B 0x372976C
	0x0372971C CBNZ W13, 0x3729790
	0x03729720 MOVZ W11, 0x7C00
	0x03729724 CMP W12, W11
	0x03729728 B.EQ 0x3729790
	0x0372972C CMP W8, 0x66
	0x03729730 B.HI 0x3729780

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X19, X8
	014 Move X8, [X25+40]
	015 Move X27, 0xCB8000
	016 Move X26, 0xA1C000
	017 Move W20, W4
	018 Move [X31+40], X8
	019 Move W8, [X27+3181]
	020 Move X26, [X26+3120]
	021 Move X21, X3
	022 Move X22, X2
	023 Move X23, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3120]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+3181], W8
	034 Move V1, [X24]
	035 Move V0, [X24+16]
	036 Move X6, [X26]
	037 Add X0, X31, 0
	038 Move W4, 4
	039 Move X1, X23
	040 Move X2, X22
	041 Move W3, W20
	042 Move X5, X21
	043 Move [X31], V1
	044 Move [X31+8], V0
	045 Call 0x22B97B4, X0, X1, X2, X3, X4, X5
	046 Move V1, [X31]
	047 Move V0, [X31+16]
	048 Move [X19], V1
	049 Move [X19+8], V0
	050 Move X8, [X25+40]
	051 Move X9, [X31+40]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+112]
	054 Move X19, [X31+120]
	055 Move X22, [X31+96]
	056 Move X21, [X31+104]
	057 Move X24, [X31+80]
	058 Move X23, [X31+88]
	059 Move X26, [X31+64]
	060 Move X25, [X31+72]
	061 Move X30, [X31+48]
	062 Move X27, [X31+56]
	063 Add X31, X31, 128
	064 Return X0
	065 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mm256_mask_i64gather_ps(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x03729734 CBZ W8, 0x3729780
	0x03729738 ADD W0, W0, 0x1
	0x0372973C B 0x3729790
	0x03729740 MOVZ W8, 0x7C00
	0x03729744 CMP W12, W8
	0x03729748 B.NE 0x37297A8
	0x0372974C ORR W8, W11, 0xFFFFFFFE
	0x03729750 ADD W8, W0, W8
	0x03729754 ADD W0, W8, 0x1
	0x03729758 B 0x37297A8
	0x0372975C MOVN W12, 0x0
	0x03729760 LSLV W10, W12, W10
	0x03729764 BICS W31, W9, W10, 0x0
	0x03729768 CINC W0, W0, NE
	0x0372976C CMP W0, W11
	0x03729770 MOVZ W9, 0xFF
	0x03729774 CCMP W8, W9, 0x4, EQ
	0x03729778 MOVZ W8, 0x7BFF
	0x0372977C B 0x37297A4
	0x03729780 MOVN W11, 0x0
	0x03729784 LSLV W10, W11, W10
	0x03729788 BICS W31, W9, W10, 0x0
	0x0372978C CINC W0, W0, NE
	0x03729790 MOVZ W9, 0xFC00
	0x03729794 MOVZ W10, 0x1FF
	0x03729798 CMP W0, W9
	0x0372979C CCMP W8, W10, 0x4, EQ
	0x037297A0 MOVZ W8, 0xFBFF
	0x037297A4 CSEL W0, W8, W0, NE
	0x037297A8 LDP X20, X19, [X31 + 0x20]
	0x037297AC LDP X22, X21, [X31 + 0x10]
	0x037297B0 LDR X30, [X31], #0x30
	0x037297B4 RET
	0x037297B8 BL 0x1C16F20
	0x037297BC BL 0x1C16F28
	0x037297C0 STP X30, X23, [X31 - 0x30]!
	0x037297C4 STP X22, X21, [X31 + 0x10]
	0x037297C8 STP X20, X19, [X31 + 0x20]
	0x037297CC ADRP X23, 0xCB7000
	0x037297D0 ADRP X22, 0xA1B000
	0x037297D4 LDRB W8, [X23 + 0xC7E]
	0x037297D8 LDR X22, [X22 + 0xC58]
	0x037297DC MOV W21, W2
	0x037297E0 MOV X19, X1
	0x037297E4 MOV X20, X0
	0x037297E8 TBNZ X8, 0x0, 0x3729800
	0x037297EC ADRP X0, 0xA1B000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X26, 0xCB8000
	014 Move X25, 0xA1C000
	015 Move W19, W6
	016 Move [X31+40], X8
	017 Move [X31+24], X4
	018 Move [X31+32], X5
	019 Move W8, [X26+3182]
	020 Move X25, [X25+3128]
	021 Move X20, X3
	022 Move X21, X2
	023 Move X22, X1
	024 Move X23, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3128]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+3182], W8
	034 Move X6, [X25]
	035 Add X0, X31, 8
	036 Add X5, X31, 24
	037 Move W4, 4
	038 Move X1, X21
	039 Move X2, X20
	040 Move W3, W19
	041 Move [X31+8], X23
	042 Move [X31+16], X22
	043 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	044 Move X0, [X31+8]
	045 Move X1, [X31+16]
	046 Move X8, [X24+40]
	047 Move X9, [X31+40]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+112]
	050 Move X19, [X31+120]
	051 Move X22, [X31+96]
	052 Move X21, [X31+104]
	053 Move X24, [X31+80]
	054 Move X23, [X31+88]
	055 Move X26, [X31+64]
	056 Move X25, [X31+72]
	057 Move X30, [X31+48]
	058 Add X31, X31, 128
	059 Return X0
	060 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_mask_i32gather_epi32(Unity.Burst.Intrinsics.v256 src, System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, Unity.Burst.Intrinsics.v256 mask, System.Int32 scale)

Disassembly:
	0x037297F0 LDR X0, [X0 + 0xC58]
	0x037297F4 BL 0x1C16CF4
	0x037297F8 MOVZ W8, 0x1
	0x037297FC STRB W8, [X23 + 0xC7E]
	0x03729800 LDR X0, [X22]
	0x03729804 CMP W21, 0xC
	0x03729808 MOVZ W9, 0x8
	0x0372980C CSEL W21, W9, W21, EQ
	0x03729810 LDR W8, [X0 + 0xE0]
	0x03729814 CBNZ W8, 0x372981C
	0x03729818 BL 0x1C16DFC
	0x0372981C MOV W0, W20
	0x03729820 MOV W1, W21
	0x03729824 UBFM X22, X20, 0x20, 0x3F
	0x03729828 BL 0x37295F0
	0x0372982C MOV W20, W0
	0x03729830 MOV W0, W22
	0x03729834 MOV W1, W21
	0x03729838 BL 0x37295F0
	0x0372983C MOV W22, W0
	0x03729840 MOV W0, W19
	0x03729844 MOV W1, W21
	0x03729848 UBFM X23, X19, 0x20, 0x3F
	0x0372984C BL 0x37295F0
	0x03729850 MOV W19, W0
	0x03729854 MOV W0, W23
	0x03729858 MOV W1, W21
	0x0372985C BL 0x37295F0
	0x03729860 AND X9, X22, 0xFFFF
	0x03729864 AND W8, W19, 0xFFFF
	0x03729868 BFM X20, X9, 0x30, 0xF
	0x0372986C BFM X20, X8, 0x20, 0xF
	0x03729870 BFM X20, X0, 0x10, 0xF
	0x03729874 MOV X0, X20
	0x03729878 LDP X20, X19, [X31 + 0x20]
	0x0372987C LDP X22, X21, [X31 + 0x10]
	0x03729880 MOV X1, X31
	0x03729884 LDP X30, X23, [X31], #0x30
	0x03729888 RET
	0x0372988C STR X30, [X31 - 0x50]!
	0x03729890 STP X26, X25, [X31 + 0x10]
	0x03729894 STP X24, X23, [X31 + 0x20]
	0x03729898 STP X22, X21, [X31 + 0x30]
	0x0372989C STP X20, X19, [X31 + 0x40]
	0x037298A0 ADRP X22, 0xCB7000
	0x037298A4 ADRP X21, 0xA1B000
	0x037298A8 LDRB W8, [X22 + 0xC7F]
	0x037298AC LDR X21, [X21 + 0xC58]
	0x037298B0 MOV W20, W1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X19, X8
	014 Move X8, [X25+40]
	015 Move X27, 0xCB8000
	016 Move X26, 0xA1C000
	017 Move W20, W4
	018 Move [X31+40], X8
	019 Move W8, [X27+3183]
	020 Move X26, [X26+3096]
	021 Move X21, X3
	022 Move X22, X2
	023 Move X23, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3096]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+3183], W8
	034 Move V1, [X24]
	035 Move V0, [X24+16]
	036 Move X6, [X26]
	037 Add X0, X31, 0
	038 Move W4, 8
	039 Move X1, X23
	040 Move X2, X22
	041 Move W3, W20
	042 Move X5, X21
	043 Move [X31], V1
	044 Move [X31+8], V0
	045 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	046 Move V1, [X31]
	047 Move V0, [X31+16]
	048 Move [X19], V1
	049 Move [X19+8], V0
	050 Move X8, [X25+40]
	051 Move X9, [X31+40]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+112]
	054 Move X19, [X31+120]
	055 Move X22, [X31+96]
	056 Move X21, [X31+104]
	057 Move X24, [X31+80]
	058 Move X23, [X31+88]
	059 Move X26, [X31+64]
	060 Move X25, [X31+72]
	061 Move X30, [X31+48]
	062 Move X27, [X31+56]
	063 Add X31, X31, 128
	064 Return X0
	065 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_mask_i32gather_epi64(Unity.Burst.Intrinsics.v256 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v256 mask, System.Int32 scale)

Disassembly:
	0x037298B4 MOV X19, X0
	0x037298B8 TBNZ X8, 0x0, 0x37298D0
	0x037298BC ADRP X0, 0xA1B000
	0x037298C0 LDR X0, [X0 + 0xC58]
	0x037298C4 BL 0x1C16CF4
	0x037298C8 MOVZ W8, 0x1
	0x037298CC STRB W8, [X22 + 0xC7F]
	0x037298D0 LDR X0, [X21]
	0x037298D4 LDR W22, [X19]
	0x037298D8 CMP W20, 0xC
	0x037298DC MOVZ W9, 0x8
	0x037298E0 LDR W8, [X0 + 0xE0]
	0x037298E4 CSEL W21, W9, W20, EQ
	0x037298E8 CBNZ W8, 0x37298F0
	0x037298EC BL 0x1C16DFC
	0x037298F0 MOV W0, W22
	0x037298F4 MOV W1, W21
	0x037298F8 BL 0x37295F0
	0x037298FC LDR W8, [X19 + 0x4]
	0x03729900 MOV W20, W0
	0x03729904 MOV W1, W21
	0x03729908 MOV W0, W8
	0x0372990C BL 0x37295F0
	0x03729910 LDR W8, [X19 + 0x8]
	0x03729914 MOV W22, W0
	0x03729918 MOV W1, W21
	0x0372991C MOV W0, W8
	0x03729920 BL 0x37295F0
	0x03729924 LDR W8, [X19 + 0xC]
	0x03729928 MOV W23, W0
	0x0372992C MOV W1, W21
	0x03729930 MOV W0, W8
	0x03729934 BL 0x37295F0
	0x03729938 LDR W8, [X19 + 0x10]
	0x0372993C MOV W24, W0
	0x03729940 MOV W1, W21
	0x03729944 MOV W0, W8
	0x03729948 BL 0x37295F0
	0x0372994C LDR W8, [X19 + 0x14]
	0x03729950 MOV W25, W0
	0x03729954 MOV W1, W21
	0x03729958 MOV W0, W8
	0x0372995C BL 0x37295F0
	0x03729960 LDR W8, [X19 + 0x18]
	0x03729964 MOV W26, W0
	0x03729968 MOV W1, W21
	0x0372996C MOV W0, W8
	0x03729970 BL 0x37295F0
	0x03729974 LDR W8, [X19 + 0x1C]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X19, X8
	013 Move X8, [X24+40]
	014 Move X26, 0xCB8000
	015 Move X25, 0xA1C000
	016 Move W20, W5
	017 Move [X31+56], X8
	018 Move [X31+40], X2
	019 Move [X31+48], X3
	020 Move W8, [X26+3184]
	021 Move X25, [X25+3136]
	022 Move X21, X4
	023 Move X22, X1
	024 Move X23, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3136]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+3184], W8
	034 Move V1, [X23]
	035 Move V0, [X23+16]
	036 Move X6, [X25]
	037 Add X0, X31, 0
	038 Add X2, X31, 40
	039 Move W4, 4
	040 Move X1, X22
	041 Move W3, W20
	042 Move X5, X21
	043 Move [X31], V1
	044 Move [X31+8], V0
	045 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	046 Move V1, [X31]
	047 Move V0, [X31+16]
	048 Move [X19], V1
	049 Move [X19+8], V0
	050 Move X8, [X24+40]
	051 Move X9, [X31+56]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+128]
	054 Move X19, [X31+136]
	055 Move X22, [X31+112]
	056 Move X21, [X31+120]
	057 Move X24, [X31+96]
	058 Move X23, [X31+104]
	059 Move X26, [X31+80]
	060 Move X25, [X31+88]
	061 Move X30, [X31+64]
	062 Add X31, X31, 144
	063 Return X0
	064 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v256 mm256_mask_i64gather_epi64(Unity.Burst.Intrinsics.v256 src, System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, Unity.Burst.Intrinsics.v256 mask, System.Int32 scale)

Disassembly:
	0x03729978 MOV W19, W0
	0x0372997C MOV W1, W21
	0x03729980 MOV W0, W8
	0x03729984 BL 0x37295F0
	0x03729988 AND X8, X26, 0xFFFF
	0x0372998C AND X11, X22, 0xFFFF
	0x03729990 AND W9, W19, 0xFFFF
	0x03729994 AND W10, W23, 0xFFFF
	0x03729998 BFM X25, X8, 0x30, 0xF
	0x0372999C BFM X20, X11, 0x30, 0xF
	0x037299A0 BFM X25, X9, 0x20, 0xF
	0x037299A4 BFM X20, X10, 0x20, 0xF
	0x037299A8 BFM X25, X0, 0x10, 0xF
	0x037299AC BFM X20, X24, 0x10, 0xF
	0x037299B0 MOV X0, X20
	0x037299B4 MOV X1, X25
	0x037299B8 LDP X20, X19, [X31 + 0x40]
	0x037299BC LDP X22, X21, [X31 + 0x30]
	0x037299C0 LDP X24, X23, [X31 + 0x20]
	0x037299C4 LDP X26, X25, [X31 + 0x10]
	0x037299C8 LDR X30, [X31], #0x50
	0x037299CC RET
	0x037299D0 STR X30, [X31 - 0x40]!
	0x037299D4 STP X24, X23, [X31 + 0x10]
	0x037299D8 STP X22, X21, [X31 + 0x20]
	0x037299DC STP X20, X19, [X31 + 0x30]
	0x037299E0 ADRP X23, 0xCB7000
	0x037299E4 ADRP X24, 0x9FA000
	0x037299E8 ADRP X19, 0xA1B000
	0x037299EC ADRP X20, 0xA1B000
	0x037299F0 ADRP X22, 0x9F9000
	0x037299F4 ADRP X21, 0xA1B000
	0x037299F8 LDRB W8, [X23 + 0xC80]
	0x037299FC LDR X24, [X24 + 0x8D0]
	0x03729A00 LDR X19, [X19 + 0xC60]
	0x03729A04 LDR X20, [X20 + 0xC58]
	0x03729A08 LDR X22, [X22 + 0x708]
	0x03729A0C LDR X21, [X21 + 0xC68]
	0x03729A10 TBNZ X8, 0x0, 0x3729A58
	0x03729A14 ADRP X0, 0xA1B000
	0x03729A18 LDR X0, [X0 + 0xC58]
	0x03729A1C BL 0x1C16CF4
	0x03729A20 ADRP X0, 0x9F9000
	0x03729A24 LDR X0, [X0 + 0x708]
	0x03729A28 BL 0x1C16CF4
	0x03729A2C ADRP X0, 0xA1B000
	0x03729A30 LDR X0, [X0 + 0xC60]
	0x03729A34 BL 0x1C16CF4
	0x03729A38 ADRP X0, 0xA1B000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X19, X8
	014 Move X8, [X25+40]
	015 Move X27, 0xCB8000
	016 Move X26, 0xA1C000
	017 Move W20, W4
	018 Move [X31+40], X8
	019 Move W8, [X27+3185]
	020 Move X26, [X26+3152]
	021 Move X21, X3
	022 Move X22, X2
	023 Move X23, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3152]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+3185], W8
	034 Move V1, [X24]
	035 Move V0, [X24+16]
	036 Move X6, [X26]
	037 Add X0, X31, 0
	038 Move W4, 4
	039 Move X1, X23
	040 Move X2, X22
	041 Move W3, W20
	042 Move X5, X21
	043 Move [X31], V1
	044 Move [X31+8], V0
	045 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	046 Move V1, [X31]
	047 Move V0, [X31+16]
	048 Move [X19], V1
	049 Move [X19+8], V0
	050 Move X8, [X25+40]
	051 Move X9, [X31+40]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+112]
	054 Move X19, [X31+120]
	055 Move X22, [X31+96]
	056 Move X21, [X31+104]
	057 Move X24, [X31+80]
	058 Move X23, [X31+88]
	059 Move X26, [X31+64]
	060 Move X25, [X31+72]
	061 Move X30, [X31+48]
	062 Move X27, [X31+56]
	063 Add X31, X31, 128
	064 Return X0
	065 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mm256_mask_i64gather_epi32(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v256 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x03729A3C LDR X0, [X0 + 0xC68]
	0x03729A40 BL 0x1C16CF4
	0x03729A44 ADRP X0, 0x9FA000
	0x03729A48 LDR X0, [X0 + 0x8D0]
	0x03729A4C BL 0x1C16CF4
	0x03729A50 MOVZ W8, 0x1
	0x03729A54 STRB W8, [X23 + 0xC80]
	0x03729A58 LDR X0, [X24]
	0x03729A5C MOVZ W1, 0x200
	0x03729A60 BL 0x1C16D6C
	0x03729A64 LDR X1, [X19]
	0x03729A68 MOV X2, X31
	0x03729A6C MOV X19, X0
	0x03729A70 BL 0x32C5BD8
	0x03729A74 LDR X8, [X20]
	0x03729A78 MOVZ W1, 0x200
	0x03729A7C LDR X8, [X8 + 0xB8]
	0x03729A80 STR X19, [X8]
	0x03729A84 LDR X0, [X22]
	0x03729A88 BL 0x1C16D6C
	0x03729A8C LDR X1, [X21]
	0x03729A90 MOV X2, X31
	0x03729A94 MOV X19, X0
	0x03729A98 BL 0x32C5BD8
	0x03729A9C LDR X8, [X20]
	0x03729AA0 LDP X22, X21, [X31 + 0x20]
	0x03729AA4 LDP X24, X23, [X31 + 0x10]
	0x03729AA8 LDR X8, [X8 + 0xB8]
	0x03729AAC STR X19, [X8 + 0x8]
	0x03729AB0 LDP X20, X19, [X31 + 0x30]
	0x03729AB4 LDR X30, [X31], #0x40
	0x03729AB8 RET
	0x03729ABC MOV W0, W31
	0x03729AC0 RET
	0x03729AC4 FCVT S0, S0
	0x03729AC8 FCVT S1, S1
	0x03729ACC FMUL D0, D0, D1
	0x03729AD0 FCVT S1, S2
	0x03729AD4 FADD D0, D0, D1
	0x00000000 INVALID
	0x03729ADC RET
	0x03729AE0 FCVT S0, S0
	0x03729AE4 FCVT S1, S1
	0x03729AE8 FMUL D0, D0, D1
	0x03729AEC FCVT S1, S2
	0x03729AF0 FSUB D0, D1, D0
	0x00000000 INVALID

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X26, 0xCB8000
	014 Move X25, 0xA1C000
	015 Move W19, W6
	016 Move [X31+40], X8
	017 Move [X31+24], X4
	018 Move [X31+32], X5
	019 Move W8, [X26+3186]
	020 Move X25, [X25+3144]
	021 Move X20, X3
	022 Move X21, X2
	023 Move X22, X1
	024 Move X23, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3144]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+3186], W8
	034 Move X6, [X25]
	035 Add X0, X31, 8
	036 Add X5, X31, 24
	037 Move W4, 4
	038 Move X1, X21
	039 Move X2, X20
	040 Move W3, W19
	041 Move [X31+8], X23
	042 Move [X31+16], X22
	043 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	044 Move X0, [X31+8]
	045 Move X1, [X31+16]
	046 Move X8, [X24+40]
	047 Move X9, [X31+40]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+112]
	050 Move X19, [X31+120]
	051 Move X22, [X31+96]
	052 Move X21, [X31+104]
	053 Move X24, [X31+80]
	054 Move X23, [X31+88]
	055 Move X26, [X31+64]
	056 Move X25, [X31+72]
	057 Move X30, [X31+48]
	058 Add X31, X31, 128
	059 Return X0
	060 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mask_i32gather_pd(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x03729AF8 RET
	0x03729AFC STP X30, X19, [X31 - 0x10]!
	0x03729B00 ADRP X0, 0x9CA000
	0x03729B04 LDR X0, [X0 + 0x7D0]
	0x03729B08 BL 0x1C16D08
	0x03729B0C BL 0x1C16F10
	0x03729B10 MOV X19, X0
	0x03729B14 ADRP X0, 0xA1B000
	0x03729B18 LDR X0, [X0 + 0xC70]
	0x03729B1C BL 0x1C16D08
	0x03729B20 MOV X1, X0
	0x03729B24 MOV X0, X19
	0x03729B28 MOV X2, X31
	0x03729B2C BL 0x33B2C70
	0x03729B30 ADRP X0, 0xA1B000
	0x03729B34 LDR X0, [X0 + 0xC78]
	0x03729B38 BL 0x1C16D08
	0x03729B3C MOV X1, X0
	0x03729B40 MOV X0, X19
	0x03729B44 BL 0x1C16DEC
	0x03729B48 STP X30, X19, [X31 - 0x10]!
	0x03729B4C ADRP X0, 0x9CA000
	0x03729B50 LDR X0, [X0 + 0x7D0]
	0x03729B54 BL 0x1C16D08
	0x03729B58 BL 0x1C16F10
	0x03729B5C MOV X19, X0
	0x03729B60 ADRP X0, 0xA1B000
	0x03729B64 LDR X0, [X0 + 0xC70]
	0x03729B68 BL 0x1C16D08
	0x03729B6C MOV X1, X0
	0x03729B70 MOV X0, X19
	0x03729B74 MOV X2, X31
	0x03729B78 BL 0x33B2C70
	0x03729B7C ADRP X0, 0xA1B000
	0x03729B80 LDR X0, [X0 + 0xC80]
	0x03729B84 BL 0x1C16D08
	0x03729B88 MOV X1, X0
	0x03729B8C MOV X0, X19
	0x03729B90 BL 0x1C16DEC
	0x03729B94 FMOV S0, W0
	0x03729B98 FMOV D1, X0
	0x03729B9C FMOV S2, W2
	0x03729BA0 FMOV D3, X2
	0x03729BA4 FMOV D5, X4
	0x03729BA8 UNIMPLEMENTED

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X25, 0xCB8000
	013 Move X24, 0xA1C000
	014 Move W19, W7
	015 Move [X31+56], X8
	016 Move [X31+40], X3
	017 Move [X31+48], X4
	018 Move [X31+24], X5
	019 Move [X31+32], X6
	020 Move W8, [X25+3187]
	021 Move X24, [X24+3104]
	022 Move X20, X2
	023 Move X21, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3104]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+3187], W8
	034 Move X6, [X24]
	035 Add X0, X31, 8
	036 Add X2, X31, 40
	037 Add X5, X31, 24
	038 Move W4, 2
	039 Move X1, X20
	040 Move W3, W19
	041 Move [X31+8], X22
	042 Move [X31+16], X21
	043 Call 0x22B9708, X0, X1, X2, X3, X4, X5
	044 Move X0, [X31+8]
	045 Move X1, [X31+16]
	046 Move X8, [X23+40]
	047 Move X9, [X31+56]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+112]
	050 Move X19, [X31+120]
	051 Move X22, [X31+96]
	052 Move X21, [X31+104]
	053 Move X24, [X31+80]
	054 Move X23, [X31+88]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Add X31, X31, 128
	058 Return X0
	059 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mask_i32gather_ps(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x03729BAC UNIMPLEMENTED
	0x03729BB0 UNIMPLEMENTED
	0x03729BB4 UNIMPLEMENTED
	0x03729BB8 FMOV S4, W4
	0x03729BBC UNIMPLEMENTED
	0x03729BC0 UNIMPLEMENTED
	0x03729BC4 UNIMPLEMENTED
	0x03729BC8 UNIMPLEMENTED
	0x03729BCC UNIMPLEMENTED
	0x03729BD0 UNIMPLEMENTED
	0x03729BD4 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729BDC UNIMPLEMENTED
	0x03729BE0 UNIMPLEMENTED
	0x03729BE4 UNIMPLEMENTED
	0x03729BE8 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729BF0 FADD V0.2D, V0.2D, V4.2D
	0x03729BF4 FADD V1.2D, V1.2D, V3.2D
	0x03729BF8 UNIMPLEMENTED
	0x03729BFC UNIMPLEMENTED
	0x03729C00 UNIMPLEMENTED
	0x03729C04 UNIMPLEMENTED
	0x03729C08 ORR V0.16B, V1.16B, V0.16B
	0x03729C0C UNIMPLEMENTED
	0x03729C10 FMOV X0, D0
	0x03729C14 RET
	0x03729C18 LDR V0, [X0]
	0x03729C1C LDR V1, [X1]
	0x03729C20 LDR V2, [X2]
	0x03729C24 UNIMPLEMENTED
	0x03729C28 UNIMPLEMENTED
	0x03729C2C UNIMPLEMENTED
	0x03729C30 UNIMPLEMENTED
	0x03729C34 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729C3C UNIMPLEMENTED
	0x00000000 INVALID
	0x03729C44 FADD V0.2D, V0.2D, V5.2D
	0x03729C48 FADD V1.2D, V1.2D, V2.2D
	0x03729C4C UNIMPLEMENTED
	0x03729C50 UNIMPLEMENTED
	0x03729C54 LDR V1, [X0 + 0x1]
	0x03729C58 LDR V2, [X1 + 0x1]
	0x03729C5C LDR V3, [X2 + 0x1]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X25, 0xCB8000
	013 Move X24, 0xA1C000
	014 Move W19, W7
	015 Move [X31+56], X8
	016 Move [X31+40], X3
	017 Move [X31+48], X4
	018 Move [X31+24], X5
	019 Move [X31+32], X6
	020 Move W8, [X25+3188]
	021 Move X24, [X24+3112]
	022 Move X20, X2
	023 Move X21, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3112]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+3188], W8
	034 Move X6, [X24]
	035 Add X0, X31, 8
	036 Add X2, X31, 40
	037 Add X5, X31, 24
	038 Move W4, 4
	039 Move X1, X20
	040 Move W3, W19
	041 Move [X31+8], X22
	042 Move [X31+16], X21
	043 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	044 Move X0, [X31+8]
	045 Move X1, [X31+16]
	046 Move X8, [X23+40]
	047 Move X9, [X31+56]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+112]
	050 Move X19, [X31+120]
	051 Move X22, [X31+96]
	052 Move X21, [X31+104]
	053 Move X24, [X31+80]
	054 Move X23, [X31+88]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Add X31, X31, 128
	058 Return X0
	059 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mask_i64gather_pd(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x03729C60 UNIMPLEMENTED
	0x03729C64 UNIMPLEMENTED
	0x03729C68 UNIMPLEMENTED
	0x03729C6C UNIMPLEMENTED
	0x00000000 INVALID
	0x03729C74 UNIMPLEMENTED
	0x03729C78 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729C80 FADD V1.2D, V1.2D, V2.2D
	0x03729C84 FADD V3.2D, V4.2D, V3.2D
	0x03729C88 UNIMPLEMENTED
	0x03729C8C UNIMPLEMENTED
	0x03729C90 STP V0, V1, [X8]
	0x03729C94 RET
	0x03729C98 STP X30, X19, [X31 - 0x10]!
	0x03729C9C ADRP X0, 0x9CA000
	0x03729CA0 LDR X0, [X0 + 0x7D0]
	0x03729CA4 BL 0x1C16D08
	0x03729CA8 BL 0x1C16F10
	0x03729CAC MOV X19, X0
	0x03729CB0 ADRP X0, 0xA1B000
	0x03729CB4 LDR X0, [X0 + 0xC70]
	0x03729CB8 BL 0x1C16D08
	0x03729CBC MOV X1, X0
	0x03729CC0 MOV X0, X19
	0x03729CC4 MOV X2, X31
	0x03729CC8 BL 0x33B2C70
	0x03729CCC ADRP X0, 0xA1B000
	0x03729CD0 LDR X0, [X0 + 0xC88]
	0x03729CD4 BL 0x1C16D08
	0x03729CD8 MOV X1, X0
	0x03729CDC MOV X0, X19
	0x03729CE0 BL 0x1C16DEC
	0x03729CE4 FMOV S0, W0
	0x03729CE8 FMOV S1, W2
	0x03729CEC FMOV S2, W4
	0x03729CF0 FCVT S0, S0
	0x03729CF4 FCVT S1, S1
	0x03729CF8 FCVT S2, S2
	0x03729CFC FMUL D0, D0, D1
	0x03729D00 FADD D0, D0, D2
	0x00000000 INVALID
	0x03729D08 AND X8, X0, 0x0
	0x03729D0C FMOV W9, S0
	0x03729D10 ORR X0, X8, X9, 0x0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X25, 0xCB8000
	013 Move X24, 0xA1C000
	014 Move W19, W7
	015 Move [X31+56], X8
	016 Move [X31+40], X3
	017 Move [X31+48], X4
	018 Move [X31+24], X5
	019 Move [X31+32], X6
	020 Move W8, [X25+3189]
	021 Move X24, [X24+3120]
	022 Move X20, X2
	023 Move X21, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3120]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+3189], W8
	034 Move X6, [X24]
	035 Add X0, X31, 8
	036 Add X2, X31, 40
	037 Add X5, X31, 24
	038 Move W4, 2
	039 Move X1, X20
	040 Move W3, W19
	041 Move [X31+8], X22
	042 Move [X31+16], X21
	043 Call 0x22B97B4, X0, X1, X2, X3, X4, X5
	044 Move X0, [X31+8]
	045 Move X1, [X31+16]
	046 Move X8, [X23+40]
	047 Move X9, [X31+56]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+112]
	050 Move X19, [X31+120]
	051 Move X22, [X31+96]
	052 Move X21, [X31+104]
	053 Move X24, [X31+80]
	054 Move X23, [X31+88]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Add X31, X31, 128
	058 Return X0
	059 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mask_i64gather_ps(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x03729D14 RET
	0x03729D18 STP X30, X19, [X31 - 0x10]!
	0x03729D1C ADRP X0, 0x9CA000
	0x03729D20 LDR X0, [X0 + 0x7D0]
	0x03729D24 BL 0x1C16D08
	0x03729D28 BL 0x1C16F10
	0x03729D2C MOV X19, X0
	0x03729D30 ADRP X0, 0xA1B000
	0x03729D34 LDR X0, [X0 + 0xC70]
	0x03729D38 BL 0x1C16D08
	0x03729D3C MOV X1, X0
	0x03729D40 MOV X0, X19
	0x03729D44 MOV X2, X31
	0x03729D48 BL 0x33B2C70
	0x03729D4C ADRP X0, 0xA1B000
	0x03729D50 LDR X0, [X0 + 0xC90]
	0x03729D54 BL 0x1C16D08
	0x03729D58 MOV X1, X0
	0x03729D5C MOV X0, X19
	0x03729D60 BL 0x1C16DEC
	0x03729D64 STP X30, X19, [X31 - 0x10]!
	0x03729D68 ADRP X0, 0x9CA000
	0x03729D6C LDR X0, [X0 + 0x7D0]
	0x03729D70 BL 0x1C16D08
	0x03729D74 BL 0x1C16F10
	0x03729D78 MOV X19, X0
	0x03729D7C ADRP X0, 0xA1B000
	0x03729D80 LDR X0, [X0 + 0xC70]
	0x03729D84 BL 0x1C16D08
	0x03729D88 MOV X1, X0
	0x03729D8C MOV X0, X19
	0x03729D90 MOV X2, X31
	0x03729D94 BL 0x33B2C70
	0x03729D98 ADRP X0, 0xA1B000
	0x03729D9C LDR X0, [X0 + 0xC98]
	0x03729DA0 BL 0x1C16D08
	0x03729DA4 MOV X1, X0
	0x03729DA8 MOV X0, X19
	0x03729DAC BL 0x1C16DEC
	0x03729DB0 FMOV S0, W0
	0x03729DB4 FMOV D1, X0
	0x03729DB8 FMOV S2, W2
	0x03729DBC FMOV D3, X2
	0x03729DC0 FMOV D5, X4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X24, 0xCB8000
	012 Move X23, 0xA1C000
	013 Move W19, W7
	014 Move [X31+56], X8
	015 Move [X31+40], X3
	016 Move [X31+48], X4
	017 Move [X31+24], X5
	018 Move [X31+32], X6
	019 Move W8, [X24+3190]
	020 Move X23, [X23+3128]
	021 Move X20, X2
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xA1C000
	028 Move X0, [X0+3128]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+3190], W8
	032 Move X6, [X23]
	033 Add X0, X31, 8
	034 Add X2, X31, 40
	035 Add X5, X31, 24
	036 Move W4, 2
	037 Move X1, X20
	038 Move W3, W19
	039 Move [X31+8], X21
	040 Move [X31+16], X31
	041 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	042 Move X0, [X31+8]
	043 Move X1, [X31+16]
	044 Move X8, [X22+40]
	045 Move X9, [X31+56]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X20, [X31+112]
	048 Move X19, [X31+120]
	049 Move X22, [X31+96]
	050 Move X21, [X31+104]
	051 Move X24, [X31+80]
	052 Move X23, [X31+88]
	053 Move X30, [X31+64]
	054 Add X31, X31, 128
	055 Return X0
	056 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mask_i32gather_epi32(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x03729DC4 UNIMPLEMENTED
	0x03729DC8 UNIMPLEMENTED
	0x03729DCC UNIMPLEMENTED
	0x03729DD0 UNIMPLEMENTED
	0x03729DD4 FMOV S4, W4
	0x03729DD8 UNIMPLEMENTED
	0x03729DDC UNIMPLEMENTED
	0x03729DE0 UNIMPLEMENTED
	0x03729DE4 UNIMPLEMENTED
	0x03729DE8 UNIMPLEMENTED
	0x03729DEC UNIMPLEMENTED
	0x03729DF0 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729DF8 UNIMPLEMENTED
	0x03729DFC UNIMPLEMENTED
	0x03729E00 UNIMPLEMENTED
	0x03729E04 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729E0C FSUB V0.2D, V0.2D, V4.2D
	0x03729E10 FADD V1.2D, V1.2D, V3.2D
	0x03729E14 UNIMPLEMENTED
	0x03729E18 UNIMPLEMENTED
	0x03729E1C UNIMPLEMENTED
	0x03729E20 UNIMPLEMENTED
	0x03729E24 ORR V0.16B, V1.16B, V0.16B
	0x03729E28 UNIMPLEMENTED
	0x03729E2C FMOV X0, D0
	0x03729E30 RET
	0x03729E34 LDR V0, [X2]
	0x03729E38 LDR V1, [X2 + 0x8]
	0x03729E3C ADD X9, X2, 0x4
	0x03729E40 LDR V2, [X0]
	0x03729E44 LDR V3, [X1]
	0x03729E48 FNEG S0, S0
	0x03729E4C ADD X10, X2, 0xC
	0x03729E50 UNIMPLEMENTED
	0x03729E54 FNEG S1, S1
	0x03729E58 UNIMPLEMENTED
	0x03729E5C UNIMPLEMENTED
	0x03729E60 UNIMPLEMENTED
	0x03729E64 UNIMPLEMENTED
	0x03729E68 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729E70 UNIMPLEMENTED
	0x00000000 INVALID

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X25, 0xCB8000
	013 Move X24, 0xA1C000
	014 Move W19, W7
	015 Move [X31+56], X8
	016 Move [X31+40], X3
	017 Move [X31+48], X4
	018 Move [X31+24], X5
	019 Move [X31+32], X6
	020 Move W8, [X25+3191]
	021 Move X24, [X24+3096]
	022 Move X20, X2
	023 Move X21, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3096]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+3191], W8
	034 Move X6, [X24]
	035 Add X0, X31, 8
	036 Add X2, X31, 40
	037 Add X5, X31, 24
	038 Move W4, 4
	039 Move X1, X20
	040 Move W3, W19
	041 Move [X31+8], X22
	042 Move [X31+16], X21
	043 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	044 Move X0, [X31+8]
	045 Move X1, [X31+16]
	046 Move X8, [X23+40]
	047 Move X9, [X31+56]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+112]
	050 Move X19, [X31+120]
	051 Move X22, [X31+96]
	052 Move X21, [X31+104]
	053 Move X24, [X31+80]
	054 Move X23, [X31+88]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Add X31, X31, 128
	058 Return X0
	059 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mask_i32gather_epi64(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x03729E78 UNIMPLEMENTED
	0x03729E7C FADD V0.2D, V2.2D, V0.2D
	0x03729E80 FADD V1.2D, V3.2D, V1.2D
	0x03729E84 UNIMPLEMENTED
	0x03729E88 UNIMPLEMENTED
	0x03729E8C LDR V1, [X2 + 0x10]
	0x03729E90 LDR V2, [X2 + 0x18]
	0x03729E94 ADD X9, X2, 0x14
	0x03729E98 LDR V3, [X0 + 0x1]
	0x03729E9C LDR V4, [X1 + 0x1]
	0x03729EA0 FNEG S1, S1
	0x03729EA4 ADD X10, X2, 0x1C
	0x03729EA8 FNEG S2, S2
	0x03729EAC UNIMPLEMENTED
	0x03729EB0 UNIMPLEMENTED
	0x03729EB4 UNIMPLEMENTED
	0x03729EB8 UNIMPLEMENTED
	0x03729EBC UNIMPLEMENTED
	0x03729EC0 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729EC8 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729ED0 UNIMPLEMENTED
	0x03729ED4 FADD V1.2D, V3.2D, V1.2D
	0x03729ED8 FADD V2.2D, V4.2D, V2.2D
	0x03729EDC UNIMPLEMENTED
	0x03729EE0 UNIMPLEMENTED
	0x03729EE4 STP V0, V1, [X8]
	0x03729EE8 RET
	0x03729EEC STP X30, X19, [X31 - 0x10]!
	0x03729EF0 ADRP X0, 0x9CA000
	0x03729EF4 LDR X0, [X0 + 0x7D0]
	0x03729EF8 BL 0x1C16D08
	0x03729EFC BL 0x1C16F10
	0x03729F00 MOV X19, X0
	0x03729F04 ADRP X0, 0xA1B000
	0x03729F08 LDR X0, [X0 + 0xC70]
	0x03729F0C BL 0x1C16D08
	0x03729F10 MOV X1, X0
	0x03729F14 MOV X0, X19
	0x03729F18 MOV X2, X31
	0x03729F1C BL 0x33B2C70
	0x03729F20 ADRP X0, 0xA1B000
	0x03729F24 LDR X0, [X0 + 0xCA0]
	0x03729F28 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X25, 0xCB8000
	013 Move X24, 0xA1C000
	014 Move W19, W7
	015 Move [X31+56], X8
	016 Move [X31+40], X3
	017 Move [X31+48], X4
	018 Move [X31+24], X5
	019 Move [X31+32], X6
	020 Move W8, [X25+3192]
	021 Move X24, [X24+3136]
	022 Move X20, X2
	023 Move X21, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1C000
	030 Move X0, [X0+3136]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+3192], W8
	034 Move X6, [X24]
	035 Add X0, X31, 8
	036 Add X2, X31, 40
	037 Add X5, X31, 24
	038 Move W4, 2
	039 Move X1, X20
	040 Move W3, W19
	041 Move [X31+8], X22
	042 Move [X31+16], X21
	043 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	044 Move X0, [X31+8]
	045 Move X1, [X31+16]
	046 Move X8, [X23+40]
	047 Move X9, [X31+56]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+112]
	050 Move X19, [X31+120]
	051 Move X22, [X31+96]
	052 Move X21, [X31+104]
	053 Move X24, [X31+80]
	054 Move X23, [X31+88]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Add X31, X31, 128
	058 Return X0
	059 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mask_i64gather_epi32(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x03729F2C MOV X1, X0
	0x03729F30 MOV X0, X19
	0x03729F34 BL 0x1C16DEC
	0x03729F38 STP X30, X19, [X31 - 0x10]!
	0x03729F3C ADRP X0, 0x9CA000
	0x03729F40 LDR X0, [X0 + 0x7D0]
	0x03729F44 BL 0x1C16D08
	0x03729F48 BL 0x1C16F10
	0x03729F4C MOV X19, X0
	0x03729F50 ADRP X0, 0xA1B000
	0x03729F54 LDR X0, [X0 + 0xC70]
	0x03729F58 BL 0x1C16D08
	0x03729F5C MOV X1, X0
	0x03729F60 MOV X0, X19
	0x03729F64 MOV X2, X31
	0x03729F68 BL 0x33B2C70
	0x03729F6C ADRP X0, 0xA1B000
	0x03729F70 LDR X0, [X0 + 0xCA8]
	0x03729F74 BL 0x1C16D08
	0x03729F78 MOV X1, X0
	0x03729F7C MOV X0, X19
	0x03729F80 BL 0x1C16DEC
	0x03729F84 FMOV S0, W0
	0x03729F88 FMOV D1, X0
	0x03729F8C FMOV S2, W2
	0x03729F90 FMOV D3, X2
	0x03729F94 FMOV D5, X4
	0x03729F98 UNIMPLEMENTED
	0x03729F9C UNIMPLEMENTED
	0x03729FA0 UNIMPLEMENTED
	0x03729FA4 UNIMPLEMENTED
	0x03729FA8 FMOV S4, W4
	0x03729FAC UNIMPLEMENTED
	0x03729FB0 UNIMPLEMENTED
	0x03729FB4 UNIMPLEMENTED
	0x03729FB8 UNIMPLEMENTED
	0x03729FBC UNIMPLEMENTED
	0x03729FC0 UNIMPLEMENTED
	0x03729FC4 UNIMPLEMENTED
	0x00000000 INVALID
	0x03729FCC UNIMPLEMENTED
	0x03729FD0 UNIMPLEMENTED
	0x03729FD4 UNIMPLEMENTED
	0x03729FD8 UNIMPLEMENTED

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X24, 0xCB8000
	012 Move X23, 0xA1C000
	013 Move W19, W7
	014 Move [X31+56], X8
	015 Move [X31+40], X3
	016 Move [X31+48], X4
	017 Move [X31+24], X5
	018 Move [X31+32], X6
	019 Move W8, [X24+3193]
	020 Move X23, [X23+3144]
	021 Move X20, X2
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xA1C000
	028 Move X0, [X0+3144]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+3193], W8
	032 Move X6, [X23]
	033 Add X0, X31, 8
	034 Add X2, X31, 40
	035 Add X5, X31, 24
	036 Move W4, 2
	037 Move X1, X20
	038 Move W3, W19
	039 Move [X31+8], X21
	040 Move [X31+16], X31
	041 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	042 Move X0, [X31+8]
	043 Move X1, [X31+16]
	044 Move X8, [X22+40]
	045 Move X9, [X31+56]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X20, [X31+112]
	048 Move X19, [X31+120]
	049 Move X22, [X31+96]
	050 Move X21, [X31+104]
	051 Move X24, [X31+80]
	052 Move X23, [X31+88]
	053 Move X30, [X31+64]
	054 Add X31, X31, 128
	055 Return X0
	056 Call 0x3EB2B20

Method: Unity.Burst.Intrinsics.v128 mask_i64gather_epi64(Unity.Burst.Intrinsics.v128 src, System.Void* base_addr, Unity.Burst.Intrinsics.v128 vindex, Unity.Burst.Intrinsics.v128 mask, System.Int32 scale)

Disassembly:
	0x00000000 INVALID
	0x03729FE0 FSUB V0.2D, V0.2D, V4.2D
	0x03729FE4 FSUB V1.2D, V1.2D, V3.2D
	0x03729FE8 UNIMPLEMENTED
	0x03729FEC UNIMPLEMENTED
	0x03729FF0 UNIMPLEMENTED
	0x03729FF4 UNIMPLEMENTED
	0x03729FF8 ORR V0.16B, V1.16B, V0.16B
	0x03729FFC UNIMPLEMENTED
	0x0372A000 FMOV X0, D0
	0x0372A004 RET
	0x0372A008 LDR V0, [X0]
	0x0372A00C LDR V1, [X1]
	0x0372A010 LDR V2, [X2]
	0x0372A014 UNIMPLEMENTED
	0x0372A018 UNIMPLEMENTED
	0x0372A01C UNIMPLEMENTED
	0x0372A020 UNIMPLEMENTED
	0x0372A024 UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A02C UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A034 FSUB V0.2D, V0.2D, V5.2D
	0x0372A038 FSUB V1.2D, V1.2D, V2.2D
	0x0372A03C UNIMPLEMENTED
	0x0372A040 UNIMPLEMENTED
	0x0372A044 LDR V1, [X0 + 0x1]
	0x0372A048 LDR V2, [X1 + 0x1]
	0x0372A04C LDR V3, [X2 + 0x1]
	0x0372A050 UNIMPLEMENTED
	0x0372A054 UNIMPLEMENTED
	0x0372A058 UNIMPLEMENTED
	0x0372A05C UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A064 UNIMPLEMENTED
	0x0372A068 UNIMPLEMENTED
	0x00000000 INVALID
	0x0372A070 FSUB V1.2D, V1.2D, V2.2D
	0x0372A074 FSUB V3.2D, V4.2D, V3.2D
	0x0372A078 UNIMPLEMENTED
	0x0372A07C UNIMPLEMENTED
	0x0372A080 STP V0, V1, [X8]
	0x0372A084 RET
	0x0372A088 STP X30, X19, [X31 - 0x10]!
	0x0372A08C ADRP X0, 0x9C9000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X25, 0xCB8000
	013 Move X24, 0xA1C000
	014 Move W19, W7
	015 Move [X31+56], X8
	016 Move [X31+40], X3
	017 Move [X31+48], X4
	018 Move [X31+24], X5
	019 Move [X31+32], X6
	020 Move W8, [X25+3194]
	021 Move X24, [X24+3152]
	022 Move X20, X2
	023 Move X21, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xA1B000
	030 Move X0, [X0+3152]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+3194], W8
	034 Move X6, [X24]
	035 Add X0, X31, 8
	036 Add X2, X31, 40
	037 Add X5, X31, 24
	038 Move W4, 2
	039 Move X1, X20
	040 Move W3, W19
	041 Move [X31+8], X22
	042 Move [X31+16], X21
	043 Call Avx2.EmulatedGather, X0, X1, X2, X3, X4, X5
	044 Move X0, [X31+8]
	045 Move X1, [X31+16]
	046 Move X8, [X23+40]
	047 Move X9, [X31+56]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+112]
	050 Move X19, [X31+120]
	051 Move X22, [X31+96]
	052 Move X21, [X31+104]
	053 Move X24, [X31+80]
	054 Move X23, [X31+88]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Add X31, X31, 128
	058 Return X0
	059 Call 0x3EB2B20

