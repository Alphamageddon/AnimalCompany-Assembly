Type: Unity.Burst.Intrinsics.V64DebugView

Method: System.Void .ctor(Unity.Burst.Intrinsics.v64 value)

Disassembly:
	0x0371F910 MOV X19, X0
	0x0371F914 TBNZ X8, 0x0, 0x371F92C
	0x0371F918 ADRP X0, 0xA03000
	0x0371F91C LDR X0, [X0 + 0x708]
	0x0371F920 BL 0x1C16CF4
	0x0371F924 MOVZ W8, 0x1
	0x0371F928 STRB W8, [X20 + 0xC50]
	0x0371F92C LDR X0, [X21]
	0x0371F930 MOVZ W1, 0x20
	0x0371F934 BL 0x1C16D6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Byte[] get_Byte()

Disassembly:
	0x0371F938 CBZ X0, 0x371FB4C
	0x0371F93C LDR W8, [X0 + 0x18]
	0x0371F940 CBZ W8, 0x371FB48
	0x0371F944 LDRB W9, [X19 + 0x10]
	0x0371F948 CMP W8, 0x1
	0x0371F94C STRB W9, [X0 + 0x20]
	0x0371F950 B.EQ 0x371FB48
	0x0371F954 LDRB W9, [X19 + 0x11]
	0x0371F958 CMP W8, 0x2
	0x0371F95C STRB W9, [X0 + 0x21]
	0x0371F960 B.LS 0x371FB48
	0x0371F964 LDRB W9, [X19 + 0x12]
	0x0371F968 CMP W8, 0x3
	0x0371F96C STRB W9, [X0 + 0x22]
	0x0371F970 B.EQ 0x371FB48
	0x0371F974 LDRB W9, [X19 + 0x13]
	0x0371F978 CMP W8, 0x4
	0x0371F97C STRB W9, [X0 + 0x23]
	0x0371F980 B.LS 0x371FB48
	0x0371F984 LDRB W9, [X19 + 0x14]
	0x0371F988 CMP W8, 0x5
	0x0371F98C STRB W9, [X0 + 0x24]
	0x0371F990 B.EQ 0x371FB48
	0x0371F994 LDRB W9, [X19 + 0x15]
	0x0371F998 CMP W8, 0x6
	0x0371F99C STRB W9, [X0 + 0x25]
	0x0371F9A0 B.LS 0x371FB48
	0x0371F9A4 LDRB W9, [X19 + 0x16]
	0x0371F9A8 CMP W8, 0x7
	0x0371F9AC STRB W9, [X0 + 0x26]
	0x0371F9B0 B.EQ 0x371FB48
	0x0371F9B4 LDRB W9, [X19 + 0x17]
	0x0371F9B8 CMP W8, 0x8
	0x0371F9BC STRB W9, [X0 + 0x27]
	0x0371F9C0 B.LS 0x371FB48
	0x0371F9C4 LDRB W9, [X19 + 0x18]
	0x0371F9C8 CMP W8, 0x9
	0x0371F9CC STRB W9, [X0 + 0x28]
	0x0371F9D0 B.EQ 0x371FB48
	0x0371F9D4 LDRB W9, [X19 + 0x19]
	0x0371F9D8 CMP W8, 0xA
	0x0371F9DC STRB W9, [X0 + 0x29]
	0x0371F9E0 B.LS 0x371FB48
	0x0371F9E4 LDRB W9, [X19 + 0x1A]
	0x0371F9E8 CMP W8, 0xB
	0x0371F9EC STRB W9, [X0 + 0x2A]
	0x0371F9F0 B.EQ 0x371FB48
	0x0371F9F4 LDRB W9, [X19 + 0x1B]
	0x0371F9F8 CMP W8, 0xC
	0x0371F9FC STRB W9, [X0 + 0x2B]
	0x0371FA00 B.LS 0x371FB48
	0x0371FA04 LDRB W9, [X19 + 0x1C]
	0x0371FA08 CMP W8, 0xD
	0x0371FA0C STRB W9, [X0 + 0x2C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0x9D5000
	007 Move W8, [X20+3131]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9D5000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3131], W8
	019 Move X0, [X21]
	020 Move W1, 8
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {56}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {55}
	027 Move W9, [X19+16]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X0+32], W9
	030 Move W9, [X19+17]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X0+33], W9
	033 Move W9, [X19+18]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X0+34], W9
	036 Move W9, [X19+19]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X0+35], W9
	039 Move W9, [X19+20]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X0+36], W9
	042 Move W9, [X19+21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X0+37], W9
	045 Move W9, [X19+22]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X0+38], W9
	048 Move W8, [X19+23]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move [X0+39], W8
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F28
	056 Call 0x1C17F20

Method: System.SByte[] get_SByte()

Disassembly:
	0x0371FA10 B.EQ 0x371FB48
	0x0371FA14 LDRB W9, [X19 + 0x1D]
	0x0371FA18 CMP W8, 0xE
	0x0371FA1C STRB W9, [X0 + 0x2D]
	0x0371FA20 B.LS 0x371FB48
	0x0371FA24 LDRB W9, [X19 + 0x1E]
	0x0371FA28 CMP W8, 0xF
	0x0371FA2C STRB W9, [X0 + 0x2E]
	0x0371FA30 B.EQ 0x371FB48
	0x0371FA34 LDRB W9, [X19 + 0x1F]
	0x0371FA38 CMP W8, 0x10
	0x0371FA3C STRB W9, [X0 + 0x2F]
	0x0371FA40 B.LS 0x371FB48
	0x0371FA44 LDRB W9, [X19 + 0x20]
	0x0371FA48 CMP W8, 0x11
	0x0371FA4C STRB W9, [X0 + 0x30]
	0x0371FA50 B.EQ 0x371FB48
	0x0371FA54 LDRB W9, [X19 + 0x21]
	0x0371FA58 CMP W8, 0x12
	0x0371FA5C STRB W9, [X0 + 0x31]
	0x0371FA60 B.LS 0x371FB48
	0x0371FA64 LDRB W9, [X19 + 0x22]
	0x0371FA68 CMP W8, 0x13
	0x0371FA6C STRB W9, [X0 + 0x32]
	0x0371FA70 B.EQ 0x371FB48
	0x0371FA74 LDRB W9, [X19 + 0x23]
	0x0371FA78 CMP W8, 0x14
	0x0371FA7C STRB W9, [X0 + 0x33]
	0x0371FA80 B.LS 0x371FB48
	0x0371FA84 LDRB W9, [X19 + 0x24]
	0x0371FA88 CMP W8, 0x15
	0x0371FA8C STRB W9, [X0 + 0x34]
	0x0371FA90 B.EQ 0x371FB48
	0x0371FA94 LDRB W9, [X19 + 0x25]
	0x0371FA98 CMP W8, 0x16
	0x0371FA9C STRB W9, [X0 + 0x35]
	0x0371FAA0 B.LS 0x371FB48
	0x0371FAA4 LDRB W9, [X19 + 0x26]
	0x0371FAA8 CMP W8, 0x17
	0x0371FAAC STRB W9, [X0 + 0x36]
	0x0371FAB0 B.EQ 0x371FB48
	0x0371FAB4 LDRB W9, [X19 + 0x27]
	0x0371FAB8 CMP W8, 0x18
	0x0371FABC STRB W9, [X0 + 0x37]
	0x0371FAC0 B.LS 0x371FB48
	0x0371FAC4 LDRB W9, [X19 + 0x28]
	0x0371FAC8 CMP W8, 0x19
	0x0371FACC STRB W9, [X0 + 0x38]
	0x0371FAD0 B.EQ 0x371FB48
	0x0371FAD4 LDRB W9, [X19 + 0x29]
	0x0371FAD8 CMP W8, 0x1A
	0x0371FADC STRB W9, [X0 + 0x39]
	0x0371FAE0 B.LS 0x371FB48
	0x0371FAE4 LDRB W9, [X19 + 0x2A]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0xA04000
	007 Move W8, [X20+3132]
	008 Move X21, [X21+1800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA04000
	015 Move X0, [X0+1800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3132], W8
	019 Move X0, [X21]
	020 Move W1, 8
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {56}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {55}
	027 Move W9, [X19+16]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X0+32], W9
	030 Move W9, [X19+17]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X0+33], W9
	033 Move W9, [X19+18]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X0+34], W9
	036 Move W9, [X19+19]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X0+35], W9
	039 Move W9, [X19+20]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X0+36], W9
	042 Move W9, [X19+21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X0+37], W9
	045 Move W9, [X19+22]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X0+38], W9
	048 Move W8, [X19+23]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move [X0+39], W8
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F28
	056 Call 0x1C17F20

Method: System.UInt16[] get_UShort()

Disassembly:
	0x0371FAE8 CMP W8, 0x1B
	0x0371FAEC STRB W9, [X0 + 0x3A]
	0x0371FAF0 B.EQ 0x371FB48
	0x0371FAF4 LDRB W9, [X19 + 0x2B]
	0x0371FAF8 CMP W8, 0x1C
	0x0371FAFC STRB W9, [X0 + 0x3B]
	0x0371FB00 B.LS 0x371FB48
	0x0371FB04 LDRB W9, [X19 + 0x2C]
	0x0371FB08 CMP W8, 0x1D
	0x0371FB0C STRB W9, [X0 + 0x3C]
	0x0371FB10 B.EQ 0x371FB48
	0x0371FB14 LDRB W9, [X19 + 0x2D]
	0x0371FB18 CMP W8, 0x1E
	0x0371FB1C STRB W9, [X0 + 0x3D]
	0x0371FB20 B.LS 0x371FB48
	0x0371FB24 LDRB W9, [X19 + 0x2E]
	0x0371FB28 CMP W8, 0x1F
	0x0371FB2C STRB W9, [X0 + 0x3E]
	0x0371FB30 B.EQ 0x371FB48
	0x0371FB34 LDRB W8, [X19 + 0x2F]
	0x0371FB38 LDP X20, X19, [X31 + 0x10]
	0x0371FB3C STRB W8, [X0 + 0x3F]
	0x0371FB40 LDP X30, X21, [X31], #0x20
	0x0371FB44 RET
	0x0371FB48 BL 0x1C16F28
	0x0371FB4C BL 0x1C16F20
	0x0371FB50 STP X30, X21, [X31 - 0x20]!
	0x0371FB54 STP X20, X19, [X31 + 0x10]
	0x0371FB58 ADRP X20, 0xCC1000
	0x0371FB5C ADRP X21, 0xA04000
	0x0371FB60 LDRB W8, [X20 + 0xC51]
	0x0371FB64 LDR X21, [X21 + 0x8D0]
	0x0371FB68 MOV X19, X0
	0x0371FB6C TBNZ X8, 0x0, 0x371FB84
	0x0371FB70 ADRP X0, 0xA04000
	0x0371FB74 LDR X0, [X0 + 0x8D0]
	0x0371FB78 BL 0x1C16CF4
	0x0371FB7C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0xA05000
	007 Move W8, [X20+3133]
	008 Move X21, [X21+2256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA05000
	015 Move X0, [X0+2256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3133], W8
	019 Move X0, [X21]
	020 Move W1, 4
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {44}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {43}
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction STRH not yet implemented."
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction STRH not yet implemented."
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction STRH not yet implemented."
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction STRH not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F28
	044 Call 0x1C17F20

Method: System.Int16[] get_SShort()

Disassembly:
	0x0371FB80 STRB W8, [X20 + 0xC51]
	0x0371FB84 LDR X0, [X21]
	0x0371FB88 MOVZ W1, 0x10
	0x0371FB8C BL 0x1C16D6C
	0x0371FB90 CBZ X0, 0x371FCA4
	0x0371FB94 LDR W8, [X0 + 0x18]
	0x0371FB98 CBZ W8, 0x371FCA0
	0x0371FB9C LDRH W9, [X19 + 0x10]
	0x0371FBA0 CMP W8, 0x1
	0x0371FBA4 STRH W9, [X0 + 0x20]
	0x0371FBA8 B.EQ 0x371FCA0
	0x0371FBAC LDRH W9, [X19 + 0x12]
	0x0371FBB0 CMP W8, 0x2
	0x0371FBB4 STRH W9, [X0 + 0x22]
	0x0371FBB8 B.LS 0x371FCA0
	0x0371FBBC LDRH W9, [X19 + 0x14]
	0x0371FBC0 CMP W8, 0x3
	0x0371FBC4 STRH W9, [X0 + 0x24]
	0x0371FBC8 B.EQ 0x371FCA0
	0x0371FBCC LDRH W9, [X19 + 0x16]
	0x0371FBD0 CMP W8, 0x4
	0x0371FBD4 STRH W9, [X0 + 0x26]
	0x0371FBD8 B.LS 0x371FCA0
	0x0371FBDC LDRH W9, [X19 + 0x18]
	0x0371FBE0 CMP W8, 0x5
	0x0371FBE4 STRH W9, [X0 + 0x28]
	0x0371FBE8 B.EQ 0x371FCA0
	0x0371FBEC LDRH W9, [X19 + 0x1A]
	0x0371FBF0 CMP W8, 0x6
	0x0371FBF4 STRH W9, [X0 + 0x2A]
	0x0371FBF8 B.LS 0x371FCA0
	0x0371FBFC LDRH W9, [X19 + 0x1C]
	0x0371FC00 CMP W8, 0x7
	0x0371FC04 STRH W9, [X0 + 0x2C]
	0x0371FC08 B.EQ 0x371FCA0
	0x0371FC0C LDRH W9, [X19 + 0x1E]
	0x0371FC10 CMP W8, 0x8
	0x0371FC14 STRH W9, [X0 + 0x2E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0x9FD000
	007 Move W8, [X20+3134]
	008 Move X21, [X21+2080]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9FD000
	015 Move X0, [X0+2080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3134], W8
	019 Move X0, [X21]
	020 Move W1, 4
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {44}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {43}
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction STRH not yet implemented."
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction STRH not yet implemented."
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction STRH not yet implemented."
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction STRH not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F28
	044 Call 0x1C17F20

Method: System.UInt32[] get_UInt()

Disassembly:
	0x0371FC18 B.LS 0x371FCA0
	0x0371FC1C LDRH W9, [X19 + 0x20]
	0x0371FC20 CMP W8, 0x9
	0x0371FC24 STRH W9, [X0 + 0x30]
	0x0371FC28 B.EQ 0x371FCA0
	0x0371FC2C LDRH W9, [X19 + 0x22]
	0x0371FC30 CMP W8, 0xA
	0x0371FC34 STRH W9, [X0 + 0x32]
	0x0371FC38 B.LS 0x371FCA0
	0x0371FC3C LDRH W9, [X19 + 0x24]
	0x0371FC40 CMP W8, 0xB
	0x0371FC44 STRH W9, [X0 + 0x34]
	0x0371FC48 B.EQ 0x371FCA0
	0x0371FC4C LDRH W9, [X19 + 0x26]
	0x0371FC50 CMP W8, 0xC
	0x0371FC54 STRH W9, [X0 + 0x36]
	0x0371FC58 B.LS 0x371FCA0
	0x0371FC5C LDRH W9, [X19 + 0x28]
	0x0371FC60 CMP W8, 0xD
	0x0371FC64 STRH W9, [X0 + 0x38]
	0x0371FC68 B.EQ 0x371FCA0
	0x0371FC6C LDRH W9, [X19 + 0x2A]
	0x0371FC70 CMP W8, 0xE
	0x0371FC74 STRH W9, [X0 + 0x3A]
	0x0371FC78 B.LS 0x371FCA0
	0x0371FC7C LDRH W9, [X19 + 0x2C]
	0x0371FC80 CMP W8, 0xF
	0x0371FC84 STRH W9, [X0 + 0x3C]
	0x0371FC88 B.EQ 0x371FCA0
	0x0371FC8C LDRH W8, [X19 + 0x2E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0x9FE000
	007 Move W8, [X20+3135]
	008 Move X21, [X21+3336]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9FE000
	015 Move X0, [X0+3336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3135], W8
	019 Move X0, [X21]
	020 Move W1, 2
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {38}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {37}
	027 Move W9, [X19+16]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X0+32], W9
	030 Move W8, [X19+20]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move [X0+36], W8
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F28
	038 Call 0x1C17F20

Method: System.Int32[] get_SInt()

Disassembly:
	0x0371FC90 LDP X20, X19, [X31 + 0x10]
	0x0371FC94 STRH W8, [X0 + 0x3E]
	0x0371FC98 LDP X30, X21, [X31], #0x20
	0x0371FC9C RET
	0x0371FCA0 BL 0x1C16F28
	0x0371FCA4 BL 0x1C16F20
	0x0371FCA8 STP X30, X21, [X31 - 0x20]!
	0x0371FCAC STP X20, X19, [X31 + 0x10]
	0x0371FCB0 ADRP X20, 0xCC1000
	0x0371FCB4 ADRP X21, 0x9FC000
	0x0371FCB8 LDRB W8, [X20 + 0xC52]
	0x0371FCBC LDR X21, [X21 + 0x820]
	0x0371FCC0 MOV X19, X0
	0x0371FCC4 TBNZ X8, 0x0, 0x371FCDC
	0x0371FCC8 ADRP X0, 0x9FC000
	0x0371FCCC LDR X0, [X0 + 0x820]
	0x0371FCD0 BL 0x1C16CF4
	0x0371FCD4 MOVZ W8, 0x1
	0x0371FCD8 STRB W8, [X20 + 0xC52]
	0x0371FCDC LDR X0, [X21]
	0x0371FCE0 MOVZ W1, 0x10
	0x0371FCE4 BL 0x1C16D6C
	0x0371FCE8 CBZ X0, 0x371FDFC
	0x0371FCEC LDR W8, [X0 + 0x18]
	0x0371FCF0 CBZ W8, 0x371FDF8
	0x0371FCF4 LDRH W9, [X19 + 0x10]
	0x0371FCF8 CMP W8, 0x1
	0x0371FCFC STRH W9, [X0 + 0x20]
	0x0371FD00 B.EQ 0x371FDF8
	0x0371FD04 LDRH W9, [X19 + 0x12]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0x9D6000
	007 Move W8, [X20+3136]
	008 Move X21, [X21+3672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9D6000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3136], W8
	019 Move X0, [X21]
	020 Move W1, 2
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {38}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {37}
	027 Move W9, [X19+16]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X0+32], W9
	030 Move W8, [X19+20]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move [X0+36], W8
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F28
	038 Call 0x1C17F20

Method: System.Single[] get_Float()

Disassembly:
	0x0371FD08 CMP W8, 0x2
	0x0371FD0C STRH W9, [X0 + 0x22]
	0x0371FD10 B.LS 0x371FDF8
	0x0371FD14 LDRH W9, [X19 + 0x14]
	0x0371FD18 CMP W8, 0x3
	0x0371FD1C STRH W9, [X0 + 0x24]
	0x0371FD20 B.EQ 0x371FDF8
	0x0371FD24 LDRH W9, [X19 + 0x16]
	0x0371FD28 CMP W8, 0x4
	0x0371FD2C STRH W9, [X0 + 0x26]
	0x0371FD30 B.LS 0x371FDF8
	0x0371FD34 LDRH W9, [X19 + 0x18]
	0x0371FD38 CMP W8, 0x5
	0x0371FD3C STRH W9, [X0 + 0x28]
	0x0371FD40 B.EQ 0x371FDF8
	0x0371FD44 LDRH W9, [X19 + 0x1A]
	0x0371FD48 CMP W8, 0x6
	0x0371FD4C STRH W9, [X0 + 0x2A]
	0x0371FD50 B.LS 0x371FDF8
	0x0371FD54 LDRH W9, [X19 + 0x1C]
	0x0371FD58 CMP W8, 0x7
	0x0371FD5C STRH W9, [X0 + 0x2C]
	0x0371FD60 B.EQ 0x371FDF8
	0x0371FD64 LDRH W9, [X19 + 0x1E]
	0x0371FD68 CMP W8, 0x8
	0x0371FD6C STRH W9, [X0 + 0x2E]
	0x0371FD70 B.LS 0x371FDF8
	0x0371FD74 LDRH W9, [X19 + 0x20]
	0x0371FD78 CMP W8, 0x9
	0x0371FD7C STRH W9, [X0 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0x9D5000
	007 Move W8, [X20+3137]
	008 Move X21, [X21+1592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9D5000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3137], W8
	019 Move X0, [X21]
	020 Move W1, 2
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {38}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {37}
	027 Move V0, [X19+16]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X0+32], S0
	030 Move V0, [X19+20]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move [X0+36], S0
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F28
	038 Call 0x1C17F20

Method: System.Int64[] get_SLong()

Disassembly:
	0x0371FD80 B.EQ 0x371FDF8
	0x0371FD84 LDRH W9, [X19 + 0x22]
	0x0371FD88 CMP W8, 0xA
	0x0371FD8C STRH W9, [X0 + 0x32]
	0x0371FD90 B.LS 0x371FDF8
	0x0371FD94 LDRH W9, [X19 + 0x24]
	0x0371FD98 CMP W8, 0xB
	0x0371FD9C STRH W9, [X0 + 0x34]
	0x0371FDA0 B.EQ 0x371FDF8
	0x0371FDA4 LDRH W9, [X19 + 0x26]
	0x0371FDA8 CMP W8, 0xC
	0x0371FDAC STRH W9, [X0 + 0x36]
	0x0371FDB0 B.LS 0x371FDF8
	0x0371FDB4 LDRH W9, [X19 + 0x28]
	0x0371FDB8 CMP W8, 0xD
	0x0371FDBC STRH W9, [X0 + 0x38]
	0x0371FDC0 B.EQ 0x371FDF8
	0x0371FDC4 LDRH W9, [X19 + 0x2A]
	0x0371FDC8 CMP W8, 0xE
	0x0371FDCC STRH W9, [X0 + 0x3A]
	0x0371FDD0 B.LS 0x371FDF8
	0x0371FDD4 LDRH W9, [X19 + 0x2C]
	0x0371FDD8 CMP W8, 0xF
	0x0371FDDC STRH W9, [X0 + 0x3C]
	0x0371FDE0 B.EQ 0x371FDF8
	0x0371FDE4 LDRH W8, [X19 + 0x2E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0xA06000
	007 Move W8, [X20+3138]
	008 Move X21, [X21+2104]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA06000
	015 Move X0, [X0+2104]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3138], W8
	019 Move X0, [X21]
	020 Move W1, 1
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {35}
	027 Move X8, [X19+16]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move [X0+32], X8
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20
	035 Call 0x1C17F28

Method: System.UInt64[] get_ULong()

Disassembly:
	0x0371FDE8 LDP X20, X19, [X31 + 0x10]
	0x0371FDEC STRH W8, [X0 + 0x3E]
	0x0371FDF0 LDP X30, X21, [X31], #0x20
	0x0371FDF4 RET
	0x0371FDF8 BL 0x1C16F28
	0x0371FDFC BL 0x1C16F20
	0x0371FE00 STP X30, X21, [X31 - 0x20]!
	0x0371FE04 STP X20, X19, [X31 + 0x10]
	0x0371FE08 ADRP X20, 0xCC1000
	0x0371FE0C ADRP X21, 0x9FD000
	0x0371FE10 LDRB W8, [X20 + 0xC53]
	0x0371FE14 LDR X21, [X21 + 0xD08]
	0x0371FE18 MOV X19, X0
	0x0371FE1C TBNZ X8, 0x0, 0x371FE34
	0x0371FE20 ADRP X0, 0x9FD000
	0x0371FE24 LDR X0, [X0 + 0xD08]
	0x0371FE28 BL 0x1C16CF4
	0x0371FE2C MOVZ W8, 0x1
	0x0371FE30 STRB W8, [X20 + 0xC53]
	0x0371FE34 LDR X0, [X21]
	0x0371FE38 MOVZ W1, 0x8
	0x0371FE3C BL 0x1C16D6C
	0x0371FE40 CBZ X0, 0x371FED4
	0x0371FE44 LDR W8, [X0 + 0x18]
	0x0371FE48 CBZ W8, 0x371FED0
	0x0371FE4C LDR W9, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0x9DD000
	007 Move W8, [X20+3139]
	008 Move X21, [X21+1384]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x9DD000
	015 Move X0, [X0+1384]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3139], W8
	019 Move X0, [X21]
	020 Move W1, 1
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {35}
	027 Move X8, [X19+16]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move [X0+32], X8
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20
	035 Call 0x1C17F28

Method: System.Double[] get_Double()

Disassembly:
	0x0371FE50 CMP W8, 0x1
	0x0371FE54 STR W9, [X0 + 0x20]
	0x0371FE58 B.EQ 0x371FED0
	0x0371FE5C LDR W9, [X19 + 0x14]
	0x0371FE60 CMP W8, 0x2
	0x0371FE64 STR W9, [X0 + 0x24]
	0x0371FE68 B.LS 0x371FED0
	0x0371FE6C LDR W9, [X19 + 0x18]
	0x0371FE70 CMP W8, 0x3
	0x0371FE74 STR W9, [X0 + 0x28]
	0x0371FE78 B.EQ 0x371FED0
	0x0371FE7C LDR W9, [X19 + 0x1C]
	0x0371FE80 CMP W8, 0x4
	0x0371FE84 STR W9, [X0 + 0x2C]
	0x0371FE88 B.LS 0x371FED0
	0x0371FE8C LDR W9, [X19 + 0x20]
	0x0371FE90 CMP W8, 0x5
	0x0371FE94 STR W9, [X0 + 0x30]
	0x0371FE98 B.EQ 0x371FED0
	0x0371FE9C LDR W9, [X19 + 0x24]
	0x0371FEA0 CMP W8, 0x6
	0x0371FEA4 STR W9, [X0 + 0x34]
	0x0371FEA8 B.LS 0x371FED0
	0x0371FEAC LDR W9, [X19 + 0x28]
	0x0371FEB0 CMP W8, 0x7
	0x0371FEB4 STR W9, [X0 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCC2000
	006 Move X21, 0xA06000
	007 Move W8, [X20+3140]
	008 Move X21, [X21+2096]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA06000
	015 Move X0, [X0+2096]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3140], W8
	019 Move X0, [X21]
	020 Move W1, 1
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {35}
	027 Move V0, [X19+16]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move [X0+32], D0
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20
	035 Call 0x1C17F28

