Type: Unity.Burst.BurstCompiler

Method: System.Boolean IsLoadAdditionalLibrarySupported()

Disassembly:
	0x036FB3FC ADRP X10, 0x9F8000
	0x036FB400 LDRH W9, [X8 + 0x12E]
	0x036FB404 LDR X10, [X10 + 0xE00]
	0x036FB408 LDR X1, [X10]
	0x036FB40C CBZ X9, 0x36FB430
	0x036FB410 LDR X10, [X8 + 0xB0]
	0x036FB414 ADD X10, X10, 0x8
	0x036FB418 LDUR X11, [X10 - 0x8]
	0x036FB41C CMP X11, X1
	0x036FB420 B.EQ 0x36FB440
	0x036FB424 SUBS X9, X9, 0x1
	0x036FB428 ADD X10, X10, 0x10
	0x036FB42C B.NE 0x36FB418
	0x036FB430 MOV X0, X20
	0x036FB434 MOV W2, W31
	0x036FB438 BL 0x1C5C788
	0x036FB43C B 0x36FB44C
	0x036FB440 LDRSW X9, [X10]
	0x036FB444 ADD X8, X8, X9, 0x4, LSL
	0x036FB448 ADD X0, X8, 0x138
	0x036FB44C LDP X8, X1, [X0]
	0x036FB450 MOV X0, X20
	0x036FB454 BLR X8
	0x036FB458 CBNZ X21, 0x36FB4FC
	0x036FB45C CMP W22, 0x7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCE6000
	005 Move X19, 0xA21000
	006 Move W8, [X20+3051]
	007 Move X19, [X19+2120]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xA21000
	013 Move X0, [X0+2120]
	014 Call 0x1C17CF4
	015 Move X0, 0xA46000
	016 Move X0, [X0+3232]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3051], W8
	020 Move X0, [X19]
	021 Move X19, 0xA46000
	022 Move W8, [X0+224]
	023 Move X19, [X19+3232]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]

Method: Unity.Burst.BurstCompiler/CommandBuilder BeginCompilerCommand(System.String cmd)

Disassembly:
	0x036FB4EC LDP X28, X27, [X31 + 0x10]
	0x036FB4F0 LDP X29, X30, [X31], #0x60
	0x036FB4F4 RET
	0x036FB4F8 BL 0x1C16F20
	0x036FB4FC MOV X0, X21
	0x036FB500 BL 0x1C16F18
	0x036FB504 BL 0x1C16F28
	0x036FB508 MOV X19, X0
	0x036FB50C MOV X21, X31
	0x036FB510 B 0x36FB518
	0x036FB514 MOV X19, X0
	0x036FB518 CBZ X20, 0x36FB57C
	0x036FB51C LDR X8, [X20]
	0x036FB520 ADRP X10, 0x9F8000
	0x036FB524 LDRH W9, [X8 + 0x12E]
	0x036FB528 LDR X10, [X10 + 0xE00]
	0x036FB52C LDR X1, [X10]
	0x036FB530 CBZ X9, 0x36FB554
	0x036FB534 LDR X10, [X8 + 0xB0]
	0x036FB538 ADD X10, X10, 0x8
	0x036FB53C LDUR X11, [X10 - 0x8]
	0x036FB540 CMP X11, X1
	0x036FB544 B.EQ 0x36FB564
	0x036FB548 SUBS X9, X9, 0x1
	0x036FB54C ADD X10, X10, 0x10
	0x036FB550 B.NE 0x36FB53C
	0x036FB554 MOV X0, X20
	0x036FB558 MOV W2, W31
	0x036FB55C BL 0x1C5C788
	0x036FB560 B 0x36FB570
	0x036FB564 LDRSW X9, [X10]
	0x036FB568 ADD X8, X8, X9, 0x4, LSL
	0x036FB56C ADD X0, X8, 0x138
	0x036FB570 LDP X8, X1, [X0]
	0x036FB574 MOV X0, X20
	0x036FB578 BLR X8
	0x036FB57C CBNZ X21, 0x36FB588
	0x036FB580 MOV X0, X19
	0x036FB584 BL 0x1D2C690
	0x036FB588 MOV X0, X21
	0x036FB58C BL 0x1C16F18
	0x036FB590 BL 0x1990590
	0x036FB594 RET
	0x036FB598 STR X30, [X31 - 0x20]!
	0x036FB59C STP X20, X19, [X31 + 0x10]
	0x036FB5A0 ADRP X20, 0xCE5000
	0x036FB5A4 ADRP X19, 0xA20000
	0x036FB5A8 LDRB W8, [X20 + 0xBF2]
	0x036FB5AC LDR X19, [X19 + 0x848]
	0x036FB5B0 TBNZ X8, 0x0, 0x36FB5D4
	0x036FB5B4 ADRP X0, 0xA20000
	0x036FB5B8 LDR X0, [X0 + 0x848]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCE6000
	006 Move X21, 0xA21000
	007 Move W8, [X20+3052]
	008 Move X21, [X21+2120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA21000
	015 Move X0, [X0+2120]
	016 Call 0x1C17CF4
	017 Move X0, 0xA46000
	018 Move X0, [X0+3248]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3052], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Call 0x1C17D0C
	029 Move X8, [X0]
	030 Compare X8, 0
	031 JumpIfNotEqual {48}
	032 Move X8, 0xA46000
	033 Move X8, [X8+3248]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Call CommandBuilder..ctor, X0
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Call 0x1C17D0C
	045 Move [X0], X20
	046 Move X0, [X21]
	047 Call 0x1C17D0C
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Call 0x1C17D0C
	055 Move X0, [X0]
	056 Compare X0, 0
	057 JumpIfEqual {65}
	058 Move X1, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call CommandBuilder.Begin, X0, X1
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean get_IsEnabled()

Disassembly:
	0x036FB670 LDP X20, X19, [X31 + 0x10]
	0x036FB674 LDP X30, X21, [X31], #0x20
	0x036FB678 B 0x36FB960
	0x036FB67C ADRP X0, 0x9FD000
	0x036FB680 LDR X0, [X0 + 0x528]
	0x036FB684 BL 0x1C16D08
	0x036FB688 BL 0x1C16F10
	0x036FB68C MOV X19, X0
	0x036FB690 ADRP X0, 0xA45000
	0x036FB694 LDR X0, [X0 + 0xDB8]
	0x036FB698 BL 0x1C16D08
	0x036FB69C MOV X1, X0
	0x036FB6A0 MOV X0, X19
	0x036FB6A4 MOV X2, X31
	0x036FB6A8 BL 0x330E100
	0x036FB6AC ADRP X0, 0xA45000
	0x036FB6B0 LDR X0, [X0 + 0xDC0]
	0x036FB6B4 BL 0x1C16D08
	0x036FB6B8 MOV X1, X0
	0x036FB6BC MOV X0, X19
	0x036FB6C0 BL 0x1C16DEC
	0x036FB6C4 BL 0x1C16F20
	0x036FB6C8 STR X30, [X31 - 0x20]!
	0x036FB6CC STP X20, X19, [X31 + 0x10]
	0x036FB6D0 ADRP X20, 0xCE5000
	0x036FB6D4 ADRP X19, 0xA20000
	0x036FB6D8 LDRB W8, [X20 + 0xBF3]
	0x036FB6DC LDR X19, [X19 + 0x848]
	0x036FB6E0 TBNZ X8, 0x0, 0x36FB71C
	0x036FB6E4 ADRP X0, 0xA20000
	0x036FB6E8 LDR X0, [X0 + 0x848]
	0x036FB6EC BL 0x1C16CF4
	0x036FB6F0 ADRP X0, 0xA45000
	0x036FB6F4 LDR X0, [X0 + 0xDC8]
	0x036FB6F8 BL 0x1C16CF4
	0x036FB6FC ADRP X0, 0xA45000
	0x036FB700 LDR X0, [X0 + 0xDD0]
	0x036FB704 BL 0x1C16CF4
	0x036FB708 ADRP X0, 0xA45000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCE6000
	005 Move X19, 0xA21000
	006 Move W8, [X20+3053]
	007 Move X19, [X19+2120]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xA46000
	013 Move X0, [X0+3256]
	014 Call 0x1C17CF4
	015 Move X0, 0xA21000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3053], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move W8, [X8]
	028 Compare W8, 0
	029 JumpIfEqual {42}
	030 Move X19, 0xA46000
	031 Move X19, [X19+3256]
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X19]
	038 Move X8, [X0+184]
	039 Move W8, [X8+8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move W0, W31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return X0

Method: System.Void SetExecutionMode(Unity.Burst.BurstExecutionEnvironment mode)

Disassembly:
	0x036FB70C LDR X0, [X0 + 0xDD8]
	0x036FB710 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call BurstCompilerService.SetCurrentExecutionMode, X0
	003 Return 

Method: Unity.Burst.BurstExecutionEnvironment GetExecutionMode()

Disassembly:
	0x036FB714 MOVZ W8, 0x1
	0x036FB718 STRB W8, [X20 + 0xBF3]

ISIL:
	001 Move X0, X31
	002 Call BurstCompilerService.GetCurrentExecutionMode
	003 Return X0

Method: T CompileDelegate(T delegateMethod)

Disassembly:
	0x021A1848 STP W31, W22, [X29 - 0x10]
	0x021A184C SUB X3, X29, 0x30
	0x021A1850 STP X8, X25, [X29 - 0x30]
	0x021A1854 SUB X8, X29, 0xC
	0x021A1858 STP X8, X9, [X29 - 0x20]
	0x021A185C LDR X8, [X1 + 0x10]
	0x021A1860 SUB X4, X29, 0x10
	0x021A1864 MOV X2, X24
	0x021A1868 BLR X8
	0x021A186C LDR X8, [X19 + 0x38]
	0x021A1870 MOV X0, X20
	0x021A1874 LDR X1, [X8 + 0x18]
	0x021A1878 BL 0x21A1454
	0x021A187C LDR X8, [X27 + 0x28]
	0x021A1880 LDUR X9, [X29 - 0x8]
	0x021A1884 CMP X8, X9
	0x021A1888 B.NE 0x21A18B0
	0x021A188C ADD X31, X29, 0x0
	0x021A1890 LDP X20, X19, [X31 + 0x50]
	0x021A1894 LDP X22, X21, [X31 + 0x40]
	0x021A1898 LDP X24, X23, [X31 + 0x30]
	0x021A189C LDP X26, X25, [X31 + 0x20]
	0x021A18A0 LDP X28, X27, [X31 + 0x10]
	0x021A18A4 LDP X29, X30, [X31], #0x60
	0x021A18A8 RET
	0x021A18AC BL 0x1C16F20
	0x021A18B0 BL 0x3EB1B20
	0x021A18B4 STR X30, [X31 - 0x30]!
	0x021A18B8 STP X22, X21, [X31 + 0x10]
	0x021A18BC STP X20, X19, [X31 + 0x20]
	0x021A18C0 LDR X8, [X3 + 0x38]
	0x021A18C4 MOV X21, X3
	0x021A18C8 MOV W19, W2
	0x021A18CC MOV X20, X1
	0x021A18D0 MOV X22, X0
	0x021A18D4 CBNZ X8, 0x21A18E0
	0x021A18D8 MOV X0, X21
	0x021A18DC BL 0x1C5C6E0
	0x021A18E0 LDR X0, [X22 + 0x18]
	0x021A18E4 CBZ X0, 0x21A1908
	0x021A18E8 LDR X8, [X21 + 0x38]
	0x021A18EC MOV X1, X20
	0x021A18F0 MOV W2, W19
	0x021A18F4 LDP X20, X19, [X31 + 0x20]
	0x021A18F8 LDR X3, [X8 + 0x8]
	0x021A18FC LDP X22, X21, [X31 + 0x10]
	0x021A1900 LDR X30, [X31], #0x30
	0x021A1904 B 0x21DCE20
	0x021A1908 LDP X20, X19, [X31 + 0x20]
	0x021A190C LDP X22, X21, [X31 + 0x10]
	0x021A1910 LDR X30, [X31], #0x30
	0x021A1914 RET
	0x021A1918 STP X30, X21, [X31 - 0x20]!
	0x021A191C STP X20, X19, [X31 + 0x10]
	0x021A1920 LDR X8, [X2 + 0x38]
	0x021A1924 MOV X19, X1
	0x021A1928 MOV X20, X0
	0x021A192C CBNZ X8, 0x21A1940
	0x021A1930 MOV X0, X2
	0x021A1934 MOV X21, X2
	0x021A1938 BL 0x1C5C6E0
	0x021A193C LDR X8, [X21 + 0x38]
	0x021A1940 LDR X3, [X8 + 0x18]
	0x021A1944 MOV X0, X20
	0x021A1948 MOV X1, X19
	0x021A194C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {21}
	010 Move X0, 0x1F7B000
	011 Move X0, [X0+2120]
	012 Call 0x1C17CF4
	013 Move X0, 0x1F7B000
	014 Move X0, [X0+2128]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, 0x1F7B000
	022 Move X8, [X8+2120]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move W1, W31
	030 Move X2, X31
	031 Call BurstCompiler.Compile, X0, X1
	032 Move X1, X31
	033 Call IntPtr.op_Explicit, X0
	034 Compare X20, 0
	035 JumpIfEqual {80}
	036 Move X21, X0
	037 Move X0, X20
	038 Move X1, X31
	039 Call "il2cpp_vm_object_is_inst", X0
	040 Move X8, 0x1F7B000
	041 Move X8, [X8+2128]
	042 Move X20, X0
	043 Move X8, [X8]
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move X1, X20
	051 Move X2, X31
	052 Call Marshal.GetDelegateForFunctionPointer, X0, X1
	053 Move X8, [X19+56]
	054 Move X20, X0
	055 Move X19, [X8]
	056 Move W8, [X19+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X19
	062 Call 0x1C5D684
	063 Move X19, X0
	064 Compare X20, 0
	065 JumpIfEqual {74}
	066 Move X0, X20
	067 Move X1, X19
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfNotEqual {75}
	071 Move X0, X20
	072 Move X1, X19
	073 Call 0x1C181E0
	074 Move X0, X31
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Void VerifyDelegateIsNotMulticast(T delegateMethod)

Disassembly:
	0x021A1AC0 LDP X26, X25, [X31 + 0x20]
	0x021A1AC4 LDP X28, X27, [X31 + 0x10]
	0x021A1AC8 LDP X29, X30, [X31], #0x60
	0x021A1ACC RET
	0x021A1AD0 BL 0x3EB1B20
	0x021A1AD4 STR X30, [X31 - 0x30]!
	0x021A1AD8 STP X22, X21, [X31 + 0x10]
	0x021A1ADC STP X20, X19, [X31 + 0x20]
	0x021A1AE0 LDR X8, [X3 + 0x38]
	0x021A1AE4 MOV X22, X3
	0x021A1AE8 MOV X19, X2
	0x021A1AEC MOV X20, X1
	0x021A1AF0 MOV X21, X0
	0x021A1AF4 CBNZ X8, 0x21A1B00
	0x021A1AF8 MOV X0, X22
	0x021A1AFC BL 0x1C5C6E0
	0x021A1B00 STR X31, [X31 + 0x8]
	0x021A1B04 CBZ X21, 0x21A1B9C
	0x021A1B08 LDR X8, [X22 + 0x38]
	0x021A1B0C LDR X1, [X8]
	0x021A1B10 LDRB W8, [X1 + 0x135]
	0x021A1B14 TBNZ X8, 0x0, 0x21A1B24
	0x021A1B18 MOV X0, X1
	0x021A1B1C BL 0x1C5C684
	0x021A1B20 MOV X1, X0
	0x021A1B24 LDR X8, [X21]
	0x021A1B28 LDRH W9, [X8 + 0x12E]
	0x021A1B2C CBZ X9, 0x21A1B50
	0x021A1B30 LDR X10, [X8 + 0xB0]
	0x021A1B34 ADD X10, X10, 0x8
	0x021A1B38 LDUR X11, [X10 - 0x8]
	0x021A1B3C CMP X11, X1
	0x021A1B40 B.EQ 0x21A1B60
	0x021A1B44 SUBS X9, X9, 0x1
	0x021A1B48 ADD X10, X10, 0x10
	0x021A1B4C B.NE 0x21A1B38
	0x021A1B50 MOV X0, X21
	0x021A1B54 MOV W2, W31
	0x021A1B58 BL 0x1C5C788
	0x021A1B5C B 0x21A1B6C
	0x021A1B60 LDRSW X9, [X10]
	0x021A1B64 ADD X8, X8, X9, 0x4, LSL
	0x021A1B68 ADD X0, X8, 0x138
	0x021A1B6C LDP X8, X3, [X0]
	0x021A1B70 ADD X2, X31, 0x8
	0x021A1B74 MOV X0, X21
	0x021A1B78 MOV X1, X20
	0x021A1B7C BLR X8
	0x021A1B80 LDR X8, [X31 + 0x8]
	0x021A1B84 ANDS W31, W0, 0x1
	0x021A1B88 LDP X22, X21, [X31 + 0x10]
	0x021A1B8C CSEL X0, X8, X19, NE
	0x021A1B90 LDP X20, X19, [X31 + 0x20]
	0x021A1B94 LDR X30, [X31], #0x30
	0x021A1B98 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2239000
	006 Move W8, [X21+2093]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1F7B000
	014 Move X0, [X0+2160]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2093], W8
	018 Compare X20, 0
	019 JumpIfEqual {44}
	020 Move X9, 0x1F7B000
	021 Move X9, [X9+2160]
	022 Move X8, [X20]
	023 Move X9, [X9]
	024 Move W11, [X8+304]
	025 Move W10, [X9+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X11, [X8+200]
	028 Add X10, X11, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X9, [X8+472]
	032 Move X1, [X8+480]
	033 Move X0, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X0, 0
	036 JumpIfEqual {44}
	037 Move W8, [X0+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Call 0x1C17F20
	045 Move X0, 0x1F7B000
	046 Move X0, [X0+2168]
	047 Call 0x1C17D08
	048 Move X1, X20
	049 Move X2, X31
	050 Call String.Format, X0, X1
	051 Move X20, X0
	052 Move X0, 0x1F53000
	053 Move X0, [X0+1456]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X1, X20
	057 Move X2, X31
	058 Move X21, X0
	059 Call InvalidOperationException..ctor, X0, X1
	060 Move X0, X21
	061 Move X1, X19
	062 Call 0x1C17DEC

Method: System.Void VerifyDelegateHasCorrectUnmanagedFunctionPointerAttribute(T delegateMethod)

Disassembly:
	0x021A19B4 LDR W26, [X21 + 0xFC]
	0x021A19B8 LDR W20, [X8 + 0xFC]
	0x021A19BC ADD X8, X31, 0x0
	0x021A19C0 ADD X9, X26, 0xF
	0x021A19C4 AND X9, X9, 0x1FFFFFFFF
	0x021A19C8 SUB X23, X8, X9
	0x021A19CC ADD X31, X23, 0x0
	0x021A19D0 ADD X9, X20, 0xF
	0x021A19D4 ADD X8, X31, 0x0
	0x021A19D8 AND X9, X9, 0x1FFFFFFFF
	0x021A19DC SUB X24, X8, X9
	0x021A19E0 ADD X31, X24, 0x0
	0x021A19E4 ADD X8, X31, 0x0
	0x021A19E8 SUB X22, X8, X9
	0x021A19EC ADD X31, X22, 0x0
	0x021A19F0 ADD X8, X31, 0x0
	0x021A19F4 SUB X27, X8, X9
	0x021A19F8 ADD X31, X27, 0x0
	0x021A19FC MOV X0, X27
	0x021A1A00 MOV W1, W31
	0x021A1A04 MOV X2, X20
	0x021A1A08 BL 0x3EB1B10
	0x021A1A0C LDR W8, [X21 + 0x28]
	0x021A1A10 MOV X0, X23
	0x021A1A14 MOV X2, X26
	0x021A1A18 CMP W8, 0x0
	0x021A1A1C SUB X8, X29, 0x30
	0x021A1A20 CSEL X1, X25, X8, LT
	0x021A1A24 BL 0x3EB1AC0
	0x021A1A28 MOV X0, X27
	0x021A1A2C MOV W1, W31
	0x021A1A30 MOV X2, X20
	0x021A1A34 BL 0x3EB1B10
	0x021A1A38 MOV X0, X24
	0x021A1A3C MOV X1, X27
	0x021A1A40 MOV X2, X20
	0x021A1A44 BL 0x3EB1AC0
	0x021A1A48 LDR X8, [X19 + 0x8]
	0x021A1A4C LDR X1, [X19 + 0x18]
	0x021A1A50 LDR W8, [X8 + 0x28]
	0x021A1A54 LDR X0, [X1]
	0x021A1A58 TBNZ X8, 0x1F, 0x21A1A60
	0x021A1A5C LDR X23, [X23]
	0x021A1A60 LDR X8, [X19 + 0x10]
	0x021A1A64 LDR W8, [X8 + 0x28]
	0x021A1A68 TBNZ X8, 0x1F, 0x21A1A70
	0x021A1A6C LDR X24, [X24]
	0x021A1A70 LDUR X8, [X29 - 0x40]
	0x021A1A74 STP X24, X22, [X29 - 0x18]
	0x021A1A78 SUB X3, X29, 0x28
	0x021A1A7C MOV X2, X31
	0x021A1A80 STP X8, X23, [X29 - 0x28]
	0x021A1A84 LDR X8, [X1 + 0x10]
	0x021A1A88 MOV X4, X22
	0x021A1A8C BLR X8
	0x021A1A90 LDUR X0, [X29 - 0x38]
	0x021A1A94 MOV X1, X22
	0x021A1A98 MOV X2, X20
	0x021A1A9C BL 0x3EB1AC0
	0x021A1AA0 LDR X8, [X28 + 0x28]
	0x021A1AA4 LDUR X9, [X29 - 0x8]
	0x021A1AA8 CMP X8, X9
	0x021A1AAC B.NE 0x21A1AD0
	0x021A1AB0 ADD X31, X29, 0x0
	0x021A1AB4 LDP X20, X19, [X31 + 0x50]
	0x021A1AB8 LDP X22, X21, [X31 + 0x40]
	0x021A1ABC LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2239000
	006 Move W8, [X20+2092]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x1F7B000
	013 Move X0, [X0+2136]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F53000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F7B000
	019 Move X0, [X0+2144]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F7B000
	022 Move X0, [X0+2152]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2092], W8
	026 Compare X19, 0
	027 JumpIfEqual {80}
	028 Move X20, 0x1F7B000
	029 Move X20, [X20+2136]
	030 Move X0, X19
	031 Move X1, X31
	032 Call "il2cpp_vm_object_is_inst", X0
	033 Move X1, [X20]
	034 Call 0x21A991C, X0
	035 Compare X0, 0
	036 JumpIfEqual {44}
	037 Move W8, [X0+16]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Move X0, X19
	045 Move X1, X31
	046 Call "il2cpp_vm_object_is_inst", X0
	047 Compare X0, 0
	048 JumpIfEqual {80}
	049 Move X8, [X0]
	050 Move X19, 0x1F7B000
	051 Move X20, 0x1F7B000
	052 Move X21, 0x1F53000
	053 Move X9, [X8+744]
	054 Move X1, [X8+752]
	055 Move X19, [X19+2144]
	056 Move X20, [X20+2152]
	057 Move X21, [X21+2600]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X19]
	060 Move X2, [X20]
	061 Move X1, X0
	062 Move X3, X31
	063 Move X0, X8
	064 Call String.Concat, X0, X1, X2
	065 Move X8, [X21]
	066 Move X19, X0
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X0, X19
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X1, X31
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Call Debug.LogWarning, X0
	079 Return 
	080 Call 0x1C17F20

Method: System.IntPtr CompileILPPMethod(System.RuntimeMethodHandle burstMethodHandle, System.RuntimeMethodHandle managedMethodHandle, System.RuntimeTypeHandle delegateTypeHandle)

Disassembly:
	0x036FB71C LDR X0, [X19]
	0x036FB720 ADRP X20, 0xA45000
	0x036FB724 LDR W8, [X0 + 0xE0]
	0x036FB728 LDR X20, [X20 + 0xDC8]
	0x036FB72C CBNZ W8, 0x36FB734
	0x036FB730 BL 0x1C16DFC
	0x036FB734 LDR X0, [X20]
	0x036FB738 BL 0x36FA460
	0x036FB73C TBZ X0, 0x0, 0x36FB794
	0x036FB740 ADRP X8, 0xA45000
	0x036FB744 LDR X8, [X8 + 0xDD0]
	0x036FB748 MOV X1, X31
	0x036FB74C LDR X0, [X8]
	0x036FB750 BL 0x33C19D0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA02000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xA46000
	011 Move X0, [X0+3264]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.IntPtr CompileILPPMethod2(System.RuntimeMethodHandle burstMethodHandle)

Disassembly:
	0x036FB754 MOV X1, X31
	0x036FB758 BL 0x32277A8
	0x036FB75C TBZ X0, 0x0, 0x36FB794
	0x036FB760 LDR X0, [X19]
	0x036FB764 LDR W8, [X0 + 0xE0]
	0x036FB768 CBNZ W8, 0x36FB770
	0x036FB76C BL 0x1C16DFC
	0x036FB770 ADRP X8, 0xA45000
	0x036FB774 LDR X8, [X8 + 0xDD8]
	0x036FB778 MOV X1, X31
	0x036FB77C LDR X0, [X8]
	0x036FB780 BL 0x36FB600
	0x036FB784 LDP X20, X19, [X31 + 0x10]
	0x036FB788 MOV X1, X31
	0x036FB78C LDR X30, [X31], #0x20
	0x036FB790 B 0x36FB600
	0x036FB794 LDP X20, X19, [X31 + 0x10]
	0x036FB798 LDR X30, [X31], #0x20
	0x036FB79C RET
	0x036FB7A0 SUB X31, X31, 0x40
	0x036FB7A4 STP X30, X23, [X31 + 0x10]
	0x036FB7A8 STP X22, X21, [X31 + 0x20]
	0x036FB7AC STP X20, X19, [X31 + 0x30]
	0x036FB7B0 ADRP X23, 0xCE5000
	0x036FB7B4 ADRP X22, 0x9F8000
	0x036FB7B8 ADRP X21, 0x9FC000
	0x036FB7BC ADRP X20, 0xA20000
	0x036FB7C0 LDRB W8, [X23 + 0xBF5]
	0x036FB7C4 LDR X22, [X22 + 0x758]
	0x036FB7C8 LDR X21, [X21 + 0x110]
	0x036FB7CC LDR X20, [X20 + 0x848]
	0x036FB7D0 MOV W19, W0
	0x036FB7D4 TBNZ X8, 0x0, 0x36FB81C
	0x036FB7D8 ADRP X0, 0xA20000
	0x036FB7DC LDR X0, [X0 + 0x848]
	0x036FB7E0 BL 0x1C16CF4
	0x036FB7E4 ADRP X0, 0x9F8000
	0x036FB7E8 LDR X0, [X0 + 0x758]
	0x036FB7EC BL 0x1C16CF4
	0x036FB7F0 ADRP X0, 0x9FC000
	0x036FB7F4 LDR X0, [X0 + 0x110]
	0x036FB7F8 BL 0x1C16CF4
	0x036FB7FC ADRP X0, 0xA45000
	0x036FB800 LDR X0, [X0 + 0xDE0]
	0x036FB804 BL 0x1C16CF4
	0x036FB808 ADRP X0, 0xA45000
	0x036FB80C LDR X0, [X0 + 0xDE8]
	0x036FB810 BL 0x1C16CF4
	0x036FB814 MOVZ W8, 0x1
	0x036FB818 STRB W8, [X23 + 0xBF5]
	0x036FB81C LDR X0, [X22]
	0x036FB820 ADRP X23, 0xA45000
	0x036FB824 LDR X23, [X23 + 0xDE0]
	0x036FB828 ADD X1, X31, 0x8
	0x036FB82C STP W19, W31, [X31 + 0x8]
	0x036FB830 BL 0x1C16E04
	0x036FB834 LDR X8, [X21]
	0x036FB838 MOV X1, X0
	0x036FB83C MOV X2, X31
	0x036FB840 MOV X0, X8
	0x036FB844 BL 0x321EFD0
	0x036FB848 LDR X8, [X20]
	0x036FB84C MOV X19, X0
	0x036FB850 LDR W9, [X8 + 0xE0]
	0x036FB854 CBNZ W9, 0x36FB860
	0x036FB858 MOV X0, X8
	0x036FB85C BL 0x1C16DFC
	0x036FB860 LDR X0, [X23]
	0x036FB864 MOV X1, X19
	0x036FB868 BL 0x36FB600
	0x036FB86C MOV X1, X31
	0x036FB870 MOV X19, X0
	0x036FB874 BL 0x32277A8
	0x036FB878 TBNZ X0, 0x0, 0x36FB898
	0x036FB87C ADD X1, X31, 0xC
	0x036FB880 MOV X0, X19
	0x036FB884 MOV X2, X31
	0x036FB888 BL 0x337BDF4
	0x036FB88C TBZ X0, 0x0, 0x36FB898
	0x036FB890 LDR W8, [X31 + 0xC]
	0x036FB894 B 0x36FB8A0
	0x036FB898 MOV W8, W31
	0x036FB89C STR W31, [X31 + 0xC]
	0x036FB8A0 LDR X0, [X22]
	0x036FB8A4 ADRP X22, 0xA45000
	0x036FB8A8 LDR X22, [X22 + 0xDE8]
	0x036FB8AC ADD X1, X31, 0x4
	0x036FB8B0 STR W8, [X31 + 0x4]
	0x036FB8B4 BL 0x1C16E04
	0x036FB8B8 LDR X8, [X21]
	0x036FB8BC MOV X1, X0
	0x036FB8C0 MOV X2, X31
	0x036FB8C4 MOV X0, X8
	0x036FB8C8 BL 0x321EFD0
	0x036FB8CC LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCE6000
	006 Move W8, [X20+3054]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xA21000
	013 Move X0, [X0+2120]
	014 Call 0x1C17CF4
	015 Move X0, 0xA46000
	016 Move X0, [X0+3272]
	017 Call 0x1C17CF4
	018 Move X0, 0xA2A000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3054], W8
	023 Move X0, X19
	024 Move X1, X31
	025 Move X2, X31
	026 Call IntPtr.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {91}
	031 Move X21, 0xA21000
	032 Move X21, [X21+2120]
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X8, [X8+16]
	041 Compare X8, 0
	042 JumpIfEqual {47}
	043 Move X9, [X8+24]
	044 Move X0, [X8+64]
	045 Move X1, [X8+40]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X0, X19
	048 Move X1, X31
	049 Call MethodBase.GetMethodFromHandle, X0
	050 Move X19, X0
	051 Compare X0, 0
	052 JumpIfEqual {64}
	053 Move X9, 0xA2A000
	054 Move X9, [X9+632]
	055 Move X8, [X19]
	056 Move X1, [X9]
	057 Move W10, [X8+304]
	058 Move W9, [X1+304]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X8+200]
	061 Add X8, X8, X9
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, 0xA46000
	065 Move X8, [X8+3272]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X20, X0
	070 Call Object..ctor, X0
	071 Move [X20+16], X19
	072 Move X0, [X21]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move W2, 1
	078 Move W3, 1
	079 Move X0, X20
	080 Move X1, X19
	081 Call BurstCompiler.Compile, X0, X1, X2, X3
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X1, X31
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 Call IntPtr.op_Explicit, X0
	088 Return X0
	089 Move X0, X19
	090 Call 0x1C181E0
	091 Move X0, 0x9FE000
	092 Move X0, [X0+1320]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0xA46000
	097 Move X0, [X0+3280]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call ArgumentNullException..ctor, X0, X1
	103 Move X0, 0xA46000
	104 Move X0, [X0+3288]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Call 0x1C17DEC

Method: System.Void* GetILPPMethodFunctionPointer(System.IntPtr ilppMethod)

Disassembly:
	0x036FBD38 STP X20, X19, [X31 + 0x10]
	0x036FBD3C MOV X19, X1
	0x036FBD40 MOV X1, X31
	0x036FBD44 MOV X20, X0
	0x036FBD48 BL 0x33A51F0
	0x036FBD4C STR X19, [X20 + 0x10]
	0x036FBD50 LDP X20, X19, [X31 + 0x10]
	0x036FBD54 LDR X30, [X31], #0x20
	0x036FBD58 RET
	0x036FBD5C STR X30, [X31 - 0x20]!
	0x036FBD60 STP X20, X19, [X31 + 0x10]
	0x036FBD64 ADRP X19, 0xCE5000
	0x036FBD68 ADRP X20, 0xA45000
	0x036FBD6C LDRB W8, [X19 + 0xBFD]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA02000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xA46000
	011 Move X0, [X0+3400]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void* GetILPPMethodFunctionPointer2(System.IntPtr ilppMethod, System.RuntimeMethodHandle managedMethodHandle, System.RuntimeTypeHandle delegateTypeHandle)

Disassembly:
	0x036FBD70 LDR X20, [X20 + 0xCB8]
	0x036FBD74 TBNZ X8, 0x0, 0x36FBD8C
	0x036FBD78 ADRP X0, 0xA45000
	0x036FBD7C LDR X0, [X0 + 0xCB8]
	0x036FBD80 BL 0x1C16CF4
	0x036FBD84 MOVZ W8, 0x1
	0x036FBD88 STRB W8, [X19 + 0xBFD]
	0x036FBD8C LDR X0, [X20]
	0x036FBD90 LDR W8, [X0 + 0xE0]
	0x036FBD94 CBNZ W8, 0x36FBD9C
	0x036FBD98 BL 0x1C16DFC
	0x036FBD9C LDP X20, X19, [X31 + 0x10]
	0x036FBDA0 MOV W0, W31
	0x036FBDA4 LDR X30, [X31], #0x20
	0x036FBDA8 RET
	0x036FBDAC STRB W31, [X0]
	0x036FBDB0 RET
	0x036FBDB4 STP X30, X21, [X31 - 0x20]!
	0x036FBDB8 STP X20, X19, [X31 + 0x10]
	0x036FBDBC ADRP X20, 0xCE5000
	0x036FBDC0 ADRP X21, 0x9FA000
	0x036FBDC4 LDRB W8, [X20 + 0xBFE]
	0x036FBDC8 LDR X21, [X21 + 0x278]
	0x036FBDCC MOV X19, X0
	0x036FBDD0 TBNZ X8, 0x0, 0x36FBDE8
	0x036FBDD4 ADRP X0, 0x9FA000
	0x036FBDD8 LDR X0, [X0 + 0x278]
	0x036FBDDC BL 0x1C16CF4
	0x036FBDE0 MOVZ W8, 0x1
	0x036FBDE4 STRB W8, [X20 + 0xBFE]
	0x036FBDE8 LDR X8, [X21]
	0x036FBDEC MOV X0, X19
	0x036FBDF0 MOV X2, X31
	0x036FBDF4 LDR X8, [X8 + 0xB8]
	0x036FBDF8 LDR X1, [X8]
	0x036FBDFC BL 0x3C0062C
	0x036FBE00 MOV X1, X31
	0x036FBE04 BL 0x3C00670
	0x036FBE08 LDP X20, X19, [X31 + 0x10]
	0x036FBE0C CMP X0, 0x0
	0x036FBE10 CSET W0, NE
	0x036FBE14 LDP X30, X21, [X31], #0x20
	0x036FBE18 RET
	0x036FBE1C STR X30, [X31 - 0x30]!
	0x036FBE20 STP X22, X21, [X31 + 0x10]
	0x036FBE24 STP X20, X19, [X31 + 0x20]
	0x036FBE28 ADRP X21, 0xCE5000
	0x036FBE2C ADRP X22, 0xA45000
	0x036FBE30 ADRP X19, 0xA45000
	0x036FBE34 ADRP X20, 0xA45000
	0x036FBE38 LDRB W8, [X21 + 0xBFF]
	0x036FBE3C LDR X22, [X22 + 0xE10]
	0x036FBE40 LDR X19, [X19 + 0xE18]
	0x036FBE44 LDR X20, [X20 + 0xCB8]
	0x036FBE48 TBNZ X8, 0x0, 0x36FBE78
	0x036FBE4C ADRP X0, 0xA45000
	0x036FBE50 LDR X0, [X0 + 0xE18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X2
	006 Move X21, X1
	007 Move X1, X31
	008 Move X2, X31
	009 Move X19, X0
	010 Call IntPtr.op_Equality, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {37}
	015 Move X0, X21
	016 Move X1, X31
	017 Move X2, X31
	018 Call IntPtr.op_Equality, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {44}
	023 Move X0, X20
	024 Move X1, X31
	025 Move X2, X31
	026 Call IntPtr.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Move X0, 0x9FE000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xA46000
	043 Move X0, [X0+3408]
	044 Move X0, 0x9FE000
	045 Move X0, [X0+1320]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0xA46000
	050 Move X0, [X0+3416]
	051 Move X0, 0x9FE000
	052 Move X0, [X0+1320]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0xA46000
	057 Move X0, [X0+3424]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentNullException..ctor, X0, X1
	063 Move X0, 0xA46000
	064 Move X0, [X0+3432]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Call 0x1C17DEC

Method: System.Void* CompileUnsafeStaticMethod(System.RuntimeMethodHandle handle)

Disassembly:
	0x036FBE54 BL 0x1C16CF4
	0x036FBE58 ADRP X0, 0xA45000
	0x036FBE5C LDR X0, [X0 + 0xCB8]
	0x036FBE60 BL 0x1C16CF4
	0x036FBE64 ADRP X0, 0xA45000
	0x036FBE68 LDR X0, [X0 + 0xE10]
	0x036FBE6C BL 0x1C16CF4
	0x036FBE70 MOVZ W8, 0x1
	0x036FBE74 STRB W8, [X21 + 0xBFF]
	0x036FBE78 LDR X0, [X22]
	0x036FBE7C BL 0x1C16F10
	0x036FBE80 LDR X2, [X19]
	0x036FBE84 MOV X1, X31
	0x036FBE88 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA02000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xA46000
	011 Move X0, [X0+3440]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: Unity.Burst.FunctionPointer`1<T> CompileFunctionPointer(T delegateMethod)

Disassembly:
	0x021A1950 MOV X2, X31
	0x021A1954 LDP X30, X21, [X31], #0x20
	0x021A1958 B 0x21A1AD4
	0x021A195C STP X29, X30, [X31 - 0x60]!
	0x021A1960 STP X28, X27, [X31 + 0x10]
	0x021A1964 STP X26, X25, [X31 + 0x20]
	0x021A1968 STP X24, X23, [X31 + 0x30]
	0x021A196C STP X22, X21, [X31 + 0x40]
	0x021A1970 STP X20, X19, [X31 + 0x50]
	0x021A1974 ADD X29, X31, 0x0
	0x021A1978 SUB X31, X31, 0x40
	0x021A197C STUR X2, [X29 - 0x38]
	0x021A1980 MRS X28, 0xC000
	0x021A1984 LDR X8, [X28 + 0x28]
	0x021A1988 MOV X25, X1
	0x021A198C STUR X8, [X29 - 0x8]
	0x021A1990 STUR X1, [X29 - 0x30]
	0x021A1994 LDR X19, [X3 + 0x38]
	0x021A1998 STUR X0, [X29 - 0x40]
	0x021A199C CBNZ X19, 0x21A19B0
	0x021A19A0 MOV X0, X3
	0x021A19A4 MOV X20, X3
	0x021A19A8 BL 0x1C5C6E0
	0x021A19AC LDR X19, [X20 + 0x38]
	0x021A19B0 LDP X21, X8, [X19 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {17}
	008 Move X0, 0x1F7B000
	009 Move X0, [X0+2120]
	010 Move X20, X1
	011 Call 0x1C17CF4
	012 Move X8, [X20+56]
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X20
	016 Call 0x1C5D6E0
	017 Move X8, 0x1F7B000
	018 Move X8, [X8+2120]
	019 Move X0, [X8]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, 1
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Call BurstCompiler.Compile, X0, X1
	031 Return X0

Method: System.Void* Compile(System.Object delegateObj, System.Boolean isFunctionPointer)

Disassembly:
	0x036FBE8C BL 0x36FBECC
	0x036FBE90 LDR X8, [X20]
	0x036FBE94 LDR X8, [X8 + 0xB8]
	0x036FBE98 STR X19, [X8]
	0x036FBE9C LDR X8, [X20]
	0x036FBEA0 LDR X8, [X8 + 0xB8]
	0x036FBEA4 LDR X0, [X8]
	0x036FBEA8 BL 0x36FBDB4
	0x036FBEAC LDR X8, [X20]
	0x036FBEB0 LDP X20, X19, [X31 + 0x20]
	0x036FBEB4 LDP X22, X21, [X31 + 0x10]
	0x036FBEB8 AND W9, W0, 0x1
	0x036FBEBC LDR X8, [X8 + 0xB8]
	0x036FBEC0 STRB W9, [X8 + 0x8]
	0x036FBEC4 LDR X30, [X31], #0x30
	0x036FBEC8 RET
	0x036FBECC STP X30, X21, [X31 - 0x20]!
	0x036FBED0 STP X20, X19, [X31 + 0x10]
	0x036FBED4 LDR X8, [X2 + 0x8]
	0x036FBED8 STP X1, X2, [X0 + 0x20]
	0x036FBEDC MOV X19, X0
	0x036FBEE0 MOV X20, X1
	0x036FBEE4 STR X8, [X0 + 0x10]
	0x036FBEE8 LDRB W21, [X2 + 0x52]
	0x036FBEEC STR X0, [X0 + 0x40]
	0x036FBEF0 MOV X0, X2
	0x036FBEF4 BL 0x1C16D84
	0x036FBEF8 TBZ X0, 0x0, 0x36FBF10
	0x036FBEFC CBNZ W21, 0x36FBF14
	0x036FBF00 ADRP X8, 0xFFFFFFFFFE4CF000
	0x036FBF04 ADD X8, X8, 0x968
	0x036FBF08 STR X8, [X19 + 0x18]
	0x036FBF0C B 0x36FBF24
	0x036FBF10 CBZ X20, 0x36FBF3C
	0x036FBF14 LDR X8, [X19 + 0x10]
	0x036FBF18 LDR X9, [X19 + 0x20]
	0x036FBF1C STR X8, [X19 + 0x18]
	0x036FBF20 STR X9, [X19 + 0x40]
	0x036FBF24 ADRP X8, 0xFFFFFFFFFE4CF000
	0x036FBF28 ADD X8, X8, 0x91C
	0x036FBF2C STR X8, [X19 + 0x38]
	0x036FBF30 LDP X20, X19, [X31 + 0x10]
	0x036FBF34 LDP X30, X21, [X31], #0x20
	0x036FBF38 RET
	0x036FBF3C ADRP X1, 0xFFFFFFFFFD420000
	0x036FBF40 ADD X1, X1, 0xEE3
	0x036FBF44 MOV X0, X31
	0x036FBF48 BL 0x1C16F3C
	0x036FBF4C MOV X1, X31
	0x036FBF50 BL 0x1C16DEC
	0x036FBF54 LDR X8, [X0 + 0x40]
	0x036FBF58 LDR X2, [X0 + 0x18]
	0x036FBF5C LDR X1, [X0 + 0x28]
	0x036FBF60 MOV X0, X8
	0x036FBF64 BR X2
	0x036FBF68 STR X30, [X31 - 0x10]!
	0x036FBF6C MOV X3, X2
	0x036FBF70 MOV X2, X1
	0x036FBF74 ADD X1, X31, 0x8
	0x036FBF78 STR X31, [X31 + 0x8]
	0x036FBF7C BL 0x1C16CB0
	0x036FBF80 LDR X30, [X31], #0x10
	0x036FBF84 RET
	0x036FBF88 STR X30, [X31 - 0x10]!
	0x036FBF8C MOV X0, X1
	0x036FBF90 MOV X1, X31
	0x036FBF94 BL 0x1C16CB4
	0x036FBF98 CBZ X0, 0x36FBFAC
	0x036FBF9C BL 0x1C16E08
	0x036FBFA0 LDRB W0, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCE6000
	006 Move W8, [X21+3055]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA21000
	014 Move X0, [X0+2120]
	015 Call 0x1C17CF4
	016 Move X0, 0xA21000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3055], W8
	021 Compare X20, 0
	022 JumpIfEqual {56}
	023 Move X8, 0xA21000
	024 Move X8, [X8+2160]
	025 Move X9, [X20]
	026 Move X8, [X8]
	027 Move W11, [X9+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X21, 0xA21000
	035 Move X21, [X21+2120]
	036 Move X0, X20
	037 Move X1, X31
	038 Call Delegate.get_Method, X0
	039 Move X8, [X21]
	040 Move X21, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 And W2, W19, 1
	047 Move X0, X20
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X1, X21
	051 Move W3, W31
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call BurstCompiler.Compile, X0, X1, X2, X3
	055 Return X0
	056 Move X0, 0xA01000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0xA46000
	062 Move X0, [X0+3448]
	063 Call 0x1C17D08
	064 Move X20, X0
	065 Move X0, 0xA46000
	066 Move X0, [X0+3344]
	067 Call 0x1C17D08
	068 Move X2, X0
	069 Move X0, X19
	070 Move X1, X20
	071 Move X3, X31
	072 Call ArgumentException..ctor, X0, X1, X2
	073 Move X0, 0xA46000
	074 Move X0, [X0+3456]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: System.Void* Compile(System.Object delegateObj, System.Reflection.MethodInfo methodInfo, System.Boolean isFunctionPointer, System.Boolean isILPostProcessing)

Disassembly:
	0x036FB8F8 LDP X22, X21, [X31 + 0x20]
	0x036FB8FC LDP X30, X23, [X31 + 0x10]
	0x036FB900 ADD X31, X31, 0x40
	0x036FB904 RET
	0x036FB908 RET
	0x036FB90C RET
	0x036FB910 RET
	0x036FB914 RET
	0x036FB918 RET
	0x036FB91C STR X30, [X31 - 0x20]!
	0x036FB920 STP X20, X19, [X31 + 0x10]
	0x036FB924 ADRP X19, 0xCE5000
	0x036FB928 ADRP X20, 0xA45000
	0x036FB92C LDRB W8, [X19 + 0xBF6]
	0x036FB930 LDR X20, [X20 + 0xDF0]
	0x036FB934 TBNZ X8, 0x0, 0x36FB94C
	0x036FB938 ADRP X0, 0xA45000
	0x036FB93C LDR X0, [X0 + 0xDF0]
	0x036FB940 BL 0x1C16CF4
	0x036FB944 MOVZ W8, 0x1
	0x036FB948 STRB W8, [X19 + 0xBF6]
	0x036FB94C LDR X0, [X20]
	0x036FB950 LDP X20, X19, [X31 + 0x10]
	0x036FB954 LDR X30, [X31], #0x20
	0x036FB958 RET
	0x036FB95C RET
	0x036FB960 STP X30, X21, [X31 - 0x20]!
	0x036FB964 STP X20, X19, [X31 + 0x10]
	0x036FB968 ADRP X21, 0xCE5000
	0x036FB96C ADRP X20, 0xA20000
	0x036FB970 LDRB W8, [X21 + 0xBF7]
	0x036FB974 LDR X20, [X20 + 0x848]
	0x036FB978 MOV X19, X0
	0x036FB97C TBNZ X8, 0x0, 0x36FB9A0
	0x036FB980 ADRP X0, 0xA20000
	0x036FB984 LDR X0, [X0 + 0x848]
	0x036FB988 BL 0x1C16CF4
	0x036FB98C ADRP X0, 0x9F8000
	0x036FB990 LDR X0, [X0 + 0x988]
	0x036FB994 BL 0x1C16CF4
	0x036FB998 MOVZ W8, 0x1
	0x036FB99C STRB W8, [X21 + 0xBF7]
	0x036FB9A0 LDR X0, [X20]
	0x036FB9A4 LDR W8, [X0 + 0xE0]
	0x036FB9A8 CBNZ W8, 0x36FB9B4
	0x036FB9AC BL 0x1C16DFC
	0x036FB9B0 LDR X0, [X20]
	0x036FB9B4 LDR X8, [X0 + 0xB8]
	0x036FB9B8 MOV X1, X19
	0x036FB9BC MOV X2, X31
	0x036FB9C0 LDR X0, [X8 + 0x18]
	0x036FB9C4 BL 0x3C005E8
	0x036FB9C8 MOV X1, X31
	0x036FB9CC MOV X19, X0
	0x036FB9D0 BL 0x32277A8
	0x036FB9D4 TBZ X0, 0x0, 0x36FB9F0
	0x036FB9D8 ADRP X8, 0x9F8000
	0x036FB9DC LDR X8, [X8 + 0x988]
	0x036FB9E0 LDP X20, X19, [X31 + 0x10]
	0x036FB9E4 LDR X0, [X8]
	0x036FB9E8 LDP X30, X21, [X31], #0x20
	0x036FB9EC RET
	0x036FB9F0 CBZ X19, 0x36FBA0C
	0x036FB9F4 MOV X0, X19
	0x036FB9F8 LDP X20, X19, [X31 + 0x10]
	0x036FB9FC MOVZ W1, 0xA
	0x036FBA00 MOV X2, X31
	0x036FBA04 LDP X30, X21, [X31], #0x20
	0x036FBA08 B 0x322BBDC
	0x036FBA0C BL 0x1C16F20
	0x036FBA10 STR X30, [X31 - 0x20]!
	0x036FBA14 STP X20, X19, [X31 + 0x10]
	0x036FBA18 LDRB W8, [X0 + 0x18]
	0x036FBA1C MOV X19, X0
	0x036FBA20 MOV X20, X1
	0x036FBA24 CBNZ W8, 0x36FBA3C
	0x036FBA28 LDR X0, [X19 + 0x10]
	0x036FBA2C CBZ X0, 0x36FBA68
	0x036FBA30 MOVZ W1, 0x20
	0x036FBA34 MOV X2, X31
	0x036FBA38 BL 0x3233D30
	0x036FBA3C LDR X0, [X19 + 0x10]
	0x036FBA40 MOVZ W8, 0x1
	0x036FBA44 STRB W8, [X19 + 0x18]
	0x036FBA48 CBZ X0, 0x36FBA68
	0x036FBA4C MOV X1, X20
	0x036FBA50 MOV X2, X31
	0x036FBA54 BL 0x32333E0
	0x036FBA58 MOV X0, X19
	0x036FBA5C LDP X20, X19, [X31 + 0x10]
	0x036FBA60 LDR X30, [X31], #0x20
	0x036FBA64 RET
	0x036FBA68 BL 0x1C16F20
	0x036FBA6C STR X30, [X31 - 0x20]!
	0x036FBA70 STP X20, X19, [X31 + 0x10]
	0x036FBA74 ADRP X20, 0xCE5000
	0x036FBA78 LDRB W8, [X20 + 0xBFC]
	0x036FBA7C MOV X19, X0
	0x036FBA80 TBNZ X8, 0x0, 0x36FBA98
	0x036FBA84 ADRP X0, 0xA20000
	0x036FBA88 LDR X0, [X0 + 0x848]
	0x036FBA8C BL 0x1C16CF4
	0x036FBA90 MOVZ W8, 0x1
	0x036FBA94 STRB W8, [X20 + 0xBFC]
	0x036FBA98 LDR X0, [X19 + 0x10]
	0x036FBA9C CBZ X0, 0x36FBADC
	0x036FBAA0 LDR X8, [X0]
	0x036FBAA4 ADRP X19, 0xA20000
	0x036FBAA8 LDP X9, X1, [X8 + 0x168]
	0x036FBAAC LDR X19, [X19 + 0x848]
	0x036FBAB0 BLR X9
	0x036FBAB4 LDR X8, [X19]
	0x036FBAB8 MOV X19, X0
	0x036FBABC LDR W9, [X8 + 0xE0]
	0x036FBAC0 CBNZ W9, 0x36FBACC
	0x036FBAC4 MOV X0, X8
	0x036FBAC8 BL 0x1C16DFC
	0x036FBACC MOV X0, X19
	0x036FBAD0 LDP X20, X19, [X31 + 0x10]
	0x036FBAD4 LDR X30, [X31], #0x20
	0x036FBAD8 B 0x36FB960
	0x036FBADC BL 0x1C16F20
	0x036FBAE0 RET
	0x036FBAE4 STP X30, X23, [X31 - 0x30]!
	0x036FBAE8 STP X22, X21, [X31 + 0x10]
	0x036FBAEC STP X20, X19, [X31 + 0x20]
	0x036FBAF0 ADRP X19, 0xCE5000
	0x036FBAF4 ADRP X23, 0xA45000
	0x036FBAF8 ADRP X20, 0xA20000
	0x036FBAFC ADRP X21, 0xA45000
	0x036FBB00 ADRP X22, 0x9F8000
	0x036FBB04 LDRB W8, [X19 + 0xBF9]
	0x036FBB08 LDR X23, [X23 + 0xCE0]
	0x036FBB0C LDR X20, [X20 + 0x848]
	0x036FBB10 LDR X21, [X21 + 0xDF8]
	0x036FBB14 LDR X22, [X22 + 0x6C0]
	0x036FBB18 TBNZ X8, 0x0, 0x36FBB60
	0x036FBB1C ADRP X0, 0xA45000
	0x036FBB20 LDR X0, [X0 + 0xCE0]
	0x036FBB24 BL 0x1C16CF4
	0x036FBB28 ADRP X0, 0xA45000
	0x036FBB2C LDR X0, [X0 + 0xDF8]
	0x036FBB30 BL 0x1C16CF4
	0x036FBB34 ADRP X0, 0xA20000
	0x036FBB38 LDR X0, [X0 + 0x848]
	0x036FBB3C BL 0x1C16CF4
	0x036FBB40 ADRP X0, 0x9F8000
	0x036FBB44 LDR X0, [X0 + 0x6C0]
	0x036FBB48 BL 0x1C16CF4
	0x036FBB4C ADRP X0, 0xA45000
	0x036FBB50 LDR X0, [X0 + 0xE00]
	0x036FBB54 BL 0x1C16CF4
	0x036FBB58 MOVZ W8, 0x1
	0x036FBB5C STRB W8, [X19 + 0xBF9]
	0x036FBB60 LDR X0, [X23]
	0x036FBB64 BL 0x1C16F10
	0x036FBB68 MOVZ W1, 0x1
	0x036FBB6C MOV X19, X0
	0x036FBB70 BL 0x36FBBDC
	0x036FBB74 LDR X8, [X20]
	0x036FBB78 LDR X8, [X8 + 0xB8]
	0x036FBB7C STR X19, [X8 + 0x8]
	0x036FBB80 LDR X0, [X22]
	0x036FBB84 LDR X19, [X21]
	0x036FBB88 LDR W8, [X0 + 0xE0]
	0x036FBB8C CBNZ W8, 0x36FBB94
	0x036FBB90 BL 0x1C16DFC
	0x036FBB94 MOV X0, X19
	0x036FBB98 MOV X1, X31
	0x036FBB9C BL 0x338C698
	0x036FBBA0 CBZ X0, 0x36FBBD8
	0x036FBBA4 ADRP X8, 0xA45000
	0x036FBBA8 LDR X8, [X8 + 0xE00]
	0x036FBBAC MOVZ W2, 0x28
	0x036FBBB0 MOV X3, X31
	0x036FBBB4 LDR X1, [X8]
	0x036FBBB8 BL 0x3397600
	0x036FBBBC LDR X8, [X20]
	0x036FBBC0 LDP X20, X19, [X31 + 0x20]
	0x036FBBC4 LDP X22, X21, [X31 + 0x10]
	0x036FBBC8 LDR X8, [X8 + 0xB8]
	0x036FBBCC STR X0, [X8 + 0x18]
	0x036FBBD0 LDP X30, X23, [X31], #0x30
	0x036FBBD4 RET
	0x036FBBD8 BL 0x1C16F20
	0x036FBBDC STR X30, [X31 - 0x20]!
	0x036FBBE0 STP X20, X19, [X31 + 0x10]
	0x036FBBE4 AND W20, W1, 0x1
	0x036FBBE8 MOV X1, X31
	0x036FBBEC MOV X19, X0
	0x036FBBF0 BL 0x33BDD8C
	0x036FBBF4 MOVZ W1, 0x1
	0x036FBBF8 MOV X0, X19
	0x036FBBFC STRB W20, [X19 + 0x16]
	0x036FBC00 MOVZ W20, 0x1
	0x036FBC04 BL 0x36FC630
	0x036FBC08 LDRB W8, [X19 + 0x12]
	0x036FBC0C STRB W20, [X19 + 0x12]
	0x036FBC10 CMP W8, 0x1
	0x036FBC14 B.EQ 0x36FBC38
	0x036FBC18 LDR X8, [X19 + 0x18]
	0x036FBC1C CBZ X8, 0x36FBC38
	0x036FBC20 LDR X2, [X8 + 0x18]
	0x036FBC24 LDR X0, [X8 + 0x40]
	0x036FBC28 LDR X1, [X8 + 0x28]
	0x036FBC2C LDP X20, X19, [X31 + 0x10]
	0x036FBC30 LDR X30, [X31], #0x20
	0x036FBC34 BR X2
	0x036FBC38 LDP X20, X19, [X31 + 0x10]
	0x036FBC3C LDR X30, [X31], #0x20
	0x036FBC40 RET
	0x036FBC44 SUB X31, X31, 0x30
	0x036FBC48 STP X30, X21, [X31 + 0x10]
	0x036FBC4C STP X20, X19, [X31 + 0x20]
	0x036FBC50 ADRP X20, 0xCE5000
	0x036FBC54 LDRB W8, [X20 + 0xBFB]
	0x036FBC58 MOV X19, X0
	0x036FBC5C STR X1, [X31 + 0x8]
	0x036FBC60 TBNZ X8, 0x0, 0x36FBC84
	0x036FBC64 ADRP X0, 0x9FA000
	0x036FBC68 LDR X0, [X0 + 0xA60]
	0x036FBC6C BL 0x1C16CF4
	0x036FBC70 ADRP X0, 0xA45000
	0x036FBC74 LDR X0, [X0 + 0xE08]
	0x036FBC78 BL 0x1C16CF4
	0x036FBC7C MOVZ W8, 0x1
	0x036FBC80 STRB W8, [X20 + 0xBFB]
	0x036FBC84 LDRB W8, [X19 + 0x18]
	0x036FBC88 CBNZ W8, 0x36FBCA0
	0x036FBC8C LDR X0, [X19 + 0x10]
	0x036FBC90 CBZ X0, 0x36FBD08
	0x036FBC94 MOVZ W1, 0x20
	0x036FBC98 MOV X2, X31
	0x036FBC9C BL 0x3233D30
	0x036FBCA0 ADRP X21, 0x9FA000
	0x036FBCA4 LDR X20, [X19 + 0x10]
	0x036FBCA8 LDR X21, [X21 + 0xA60]
	0x036FBCAC MOVZ W8, 0x1
	0x036FBCB0 ADD X0, X31, 0x8
	0x036FBCB4 MOV X1, X31
	0x036FBCB8 STRB W8, [X19 + 0x18]
	0x036FBCBC BL 0x33C6854
	0x036FBCC0 LDR X8, [X21]
	0x036FBCC4 STR X0, [X31]
	0x036FBCC8 ADD X1, X31, 0x0
	0x036FBCCC MOV X0, X8
	0x036FBCD0 BL 0x1C16E04
	0x036FBCD4 CBZ X20, 0x36FBD08
	0x036FBCD8 ADRP X8, 0xA45000
	0x036FBCDC LDR X8, [X8 + 0xE08]
	0x036FBCE0 MOV X2, X0
	0x036FBCE4 MOV X0, X20
	0x036FBCE8 MOV X3, X31
	0x036FBCEC LDR X1, [X8]
	0x036FBCF0 BL 0x3234224
	0x036FBCF4 MOV X0, X19
	0x036FBCF8 LDP X20, X19, [X31 + 0x20]
	0x036FBCFC LDP X30, X21, [X31 + 0x10]
	0x036FBD00 ADD X31, X31, 0x30
	0x036FBD04 RET
	0x036FBD08 BL 0x1C16F20
	0x036FBD0C STP X30, X19, [X31 - 0x10]!
	0x036FBD10 MOV X19, X0
	0x036FBD14 LDR X0, [X0 + 0x10]
	0x036FBD18 CBZ X0, 0x36FBD30
	0x036FBD1C MOV X2, X31
	0x036FBD20 BL 0x3233D30
	0x036FBD24 MOV X0, X19
	0x036FBD28 LDP X30, X19, [X31], #0x10
	0x036FBD2C RET
	0x036FBD30 BL 0x1C16F20
	0x036FBD34 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xCE6000
	010 Move W8, [X23+3056]
	011 Move W21, W3
	012 Move W22, W2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0xA46000
	020 Move X0, [X0+3256]
	021 Call 0x1C17CF4
	022 Move X0, 0xA46000
	023 Move X0, [X0+3296]
	024 Call 0x1C17CF4
	025 Move X0, 0xA21000
	026 Move X0, [X0+2120]
	027 Call 0x1C17CF4
	028 Move X0, 0x9F9000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0xA21000
	032 Move X0, [X0+2160]
	033 Call 0x1C17CF4
	034 Move X0, 0xA46000
	035 Move X0, [X0+3304]
	036 Call 0x1C17CF4
	037 Move X0, 0xA46000
	038 Move X0, [X0+3312]
	039 Call 0x1C17CF4
	040 Move X0, 0xA21000
	041 Move X0, [X0+2128]
	042 Call 0x1C17CF4
	043 Move X0, 0x9FB000
	044 Move X0, [X0+632]
	045 Call 0x1C17CF4
	046 Move X0, 0xA46000
	047 Move X0, [X0+3320]
	048 Call 0x1C17CF4
	049 Move X0, 0xA46000
	050 Move X0, [X0+3328]
	051 Call 0x1C17CF4
	052 Move X0, 0xA46000
	053 Move X0, [X0+3336]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+3056], W8
	057 Compare X20, 0
	058 JumpIfEqual {266}
	059 Move X0, X20
	060 Move X1, X31
	061 Call "il2cpp_vm_object_is_inst", X0
	062 Compare X0, 0
	063 JumpIfEqual {265}
	064 Move X8, [X0]
	065 Move X9, [X8+968]
	066 Move X1, [X8+976]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {284}
	072 Compare X19, 0
	073 JumpIfEqual {265}
	074 Move X0, X19
	075 Move X1, X31
	076 Call MethodBase.get_IsStatic, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {292}
	081 Move X8, [X19]
	082 Move X0, X19
	083 Move X9, [X8+728]
	084 Move X1, [X8+736]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {294}
	090 Move TEMP, X22
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {165}
	094 Move TEMP, X21
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {165}
	098 Move X0, X19
	099 Move X1, X31
	100 Call CustomAttributeExtensions.GetCustomAttributes, X0
	101 Move X25, 0xA46000
	102 Move X25, [X25+3328]
	103 Move X22, X0
	104 Move X8, [X25]
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {111}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X8, [X25]
	111 Move X9, [X8+184]
	112 Move X23, [X9+8]
	113 Compare X23, 0
	114 JumpIfNotEqual {137}
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {121}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X8, [X25]
	121 Move X9, 0xA46000
	122 Move X8, [X8+184]
	123 Move X9, [X9+3312]
	124 Move X24, [X8]
	125 Move X0, [X9]
	126 Call 0x1C17F10
	127 Move X8, 0xA46000
	128 Move X8, [X8+3320]
	129 Move X1, X24
	130 Move X3, X31
	131 Move X23, X0
	132 Move X2, [X8]
	133 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	134 Move X8, [X25]
	135 Move X8, [X8+184]
	136 Move [X8+8], X23
	137 Move X8, 0xA46000
	138 Move X8, [X8+3304]
	139 Move X0, X22
	140 Move X1, X23
	141 Move X2, [X8]
	142 Call Enumerable.All, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {165}
	147 Move X8, 0xA46000
	148 Move X8, [X8+3336]
	149 Move X1, X19
	150 Move X2, X31
	151 Move X0, [X8]
	152 Call String.Format, X0, X1
	153 Move X8, 0x9F9000
	154 Move X8, [X8+2600]
	155 Move X22, X0
	156 Move X8, [X8]
	157 Move W9, [X8+224]
	158 Compare W9, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X8
	161 Call 0x1C17DFC
	162 Move X0, X22
	163 Move X1, X31
	164 Call Debug.Log, X0
	165 Move X8, 0xA46000
	166 Move X8, [X8+3296]
	167 Move TEMP, X21
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {178}
	171 Move X9, 0xA21000
	172 Move X9, [X9+2160]
	173 Move X10, [X20]
	174 Move X9, [X9]
	175 Move W12, [X10+304]
	176 Move W11, [X9+304]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X22, X31
	179 Move X10, [X10+200]
	180 Add X10, X10, X11
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 NotImplemented "Instruction CSEL not yet implemented."
	184 Move X0, [X8]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, X19
	190 Call BurstCompilerOptions.HasBurstCompileAttribute, X0
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {296}
	195 Move X23, 0xA21000
	196 Move X23, [X23+2120]
	197 Move X0, [X23]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X23]
	203 Move X8, [X0+184]
	204 Move X8, [X8+8]
	205 Compare X8, 0
	206 JumpIfEqual {265}
	207 Move W8, [X8+16]
	208 Compare W8, 0
	209 JumpIfEqual {234}
	210 Move X23, 0xA46000
	211 Move X23, [X23+3256]
	212 Move X0, [X23]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {218}
	216 Call 0x1C17DFC
	217 Move X0, [X23]
	218 Move X8, [X0+184]
	219 Move W8, [X8+8]
	220 Compare W8, 0
	221 JumpIfEqual {234}
	222 Move X8, 0x9FB000
	223 Move X8, [X8+632]
	224 Move X0, X20
	225 Move X2, X31
	226 Move X8, [X8]
	227 Move X8, [X8+184]
	228 Move X1, [X8]
	229 Call BurstCompilerService.CompileAsyncDelegateMethod, X0, X1
	230 Move X1, X31
	231 Call BurstCompilerService.GetAsyncCompiledAsyncDelegateMethod, X0
	232 Compare X0, 0
	233 JumpIfNotEqual {256}
	234 Move TEMP, X21
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {239}
	238 Move X0, X31
	239 Move X0, X22
	240 Move X1, X31
	241 Call GCHandle.Alloc, X0
	242 Move X8, 0xA21000
	243 Move X8, [X8+2128]
	244 Move X0, [X8]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Move X0, X22
	250 Move X1, X31
	251 Call Marshal.GetFunctionPointerForDelegate, X0
	252 Move X1, X31
	253 Call IntPtr.op_Explicit, X0
	254 Compare X0, 0
	255 JumpIfEqual {298}
	256 Move X20, [X31+48]
	257 Move X19, [X31+56]
	258 Move X22, [X31+32]
	259 Move X21, [X31+40]
	260 Move X24, [X31+16]
	261 Move X23, [X31+24]
	262 Move X30, [X31+64]
	263 Move X25, [X31+72]
	264 Return X0
	265 Call 0x1C17F20
	266 Move X0, 0x9FE000
	267 Move X0, [X0+1320]
	268 Call 0x1C17D08
	269 Call 0x1C17F10
	270 Move X19, X0
	271 Move X0, 0xA46000
	272 Move X0, [X0+3344]
	273 Call 0x1C17D08
	274 Move X1, X0
	275 Move X0, X19
	276 Move X2, X31
	277 Call ArgumentNullException..ctor, X0, X1
	278 Move X0, 0xA46000
	279 Move X0, [X0+3352]
	280 Call 0x1C17D08
	281 Move X1, X0
	282 Move X0, X19
	283 Call 0x1C17DEC
	284 Move X0, X20
	285 Call 0x19913C0
	286 Move X0, X20
	287 Move X1, X31
	288 Call "il2cpp_vm_object_is_inst", X0
	289 Move X19, X0
	290 Move X0, 0xA46000
	291 Move X0, [X0+3360]
	292 Move X0, 0xA46000
	293 Move X0, [X0+3368]
	294 Move X0, 0xA46000
	295 Move X0, [X0+3376]
	296 Move X0, 0xA46000
	297 Move X0, [X0+3384]
	298 Move X0, 0xA46000
	299 Move X0, [X0+3392]
	300 Call 0x1C17D08
	301 Move X1, X19
	302 Move X2, X31
	303 Call String.Format, X0, X1
	304 Move X19, X0
	305 Move X0, 0x9F9000
	306 Move X0, [X0+1456]
	307 Call 0x1C17D08
	308 Call 0x1C17F10
	309 Move X1, X19
	310 Move X2, X31
	311 Move X20, X0
	312 Call InvalidOperationException..ctor, X0, X1
	313 Move X0, 0xA46000
	314 Move X0, [X0+3352]
	315 Call 0x1C17D08
	316 Move X1, X0
	317 Move X0, X20
	318 Call 0x1C17DEC

Method: System.Void Shutdown()

Disassembly:
	0x036FC064 LDP X9, X1, [X8 + 0x1A8]

ISIL:
	001 Return 

Method: System.Void Cancel()

Disassembly:
	0x036FC068 LDR X19, [X19 + 0xE20]

ISIL:
	001 Return 

Method: System.Boolean IsCurrentCompilationDone()

Disassembly:
	0x036FC06C BLR X9
	0x036FC070 LDR X1, [X19]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void Enable()

Disassembly:
	0x036FC074 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Return 

Method: System.Void Disable()

Disassembly:
	0x036FC078 MOV X2, X31

ISIL:
	001 Return 

Method: System.Boolean IsHostEditorArm()

Disassembly:
	0x036FC07C LDR X30, [X31], #0x20
	0x036FC080 B 0x3226EF8

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void TriggerUnsafeStaticMethodRecompilation()

Disassembly:
	0x036FC084 BL 0x1C16F20
	0x036FC088 STR X30, [X31 - 0x20]!
	0x036FC08C STP X20, X19, [X31 + 0x10]
	0x036FC090 ADRP X20, 0xCE4000
	0x036FC094 LDRB W8, [X20 + 0xC02]
	0x036FC098 MOV X19, X1
	0x036FC09C TBNZ X8, 0x0, 0x36FC0B4
	0x036FC0A0 ADRP X0, 0xA44000
	0x036FC0A4 LDR X0, [X0 + 0xE28]
	0x036FC0A8 BL 0x1C16CF4
	0x036FC0AC MOVZ W8, 0x1
	0x036FC0B0 STRB W8, [X20 + 0xC02]
	0x036FC0B4 CBZ X19, 0x36FC0F4
	0x036FC0B8 MOV X0, X19
	0x036FC0BC MOV X1, X31
	0x036FC0C0 BL 0x33BE520
	0x036FC0C4 CBZ X0, 0x36FC0F4
	0x036FC0C8 LDR X8, [X0]
	0x036FC0CC ADRP X19, 0xA44000
	0x036FC0D0 LDR X9, [X8 + 0x2E8]
	0x036FC0D4 LDR X1, [X8 + 0x2F0]
	0x036FC0D8 LDR X19, [X19 + 0xE28]
	0x036FC0DC BLR X9
	0x036FC0E0 LDR X1, [X19]
	0x036FC0E4 LDP X20, X19, [X31 + 0x10]
	0x036FC0E8 MOV X2, X31
	0x036FC0EC LDR X30, [X31], #0x20
	0x036FC0F0 B 0x321BA08
	0x036FC0F4 BL 0x1C16F20
	0x036FC0F8 STP X30, X23, [X31 - 0x30]!
	0x036FC0FC STP X22, X21, [X31 + 0x10]
	0x036FC100 STP X20, X19, [X31 + 0x20]
	0x036FC104 ADRP X21, 0xCE4000
	0x036FC108 ADRP X23, 0x9F7000
	0x036FC10C LDRB W8, [X21 + 0xC03]
	0x036FC110 LDR X23, [X23 + 0xAC8]
	0x036FC114 MOV X19, X2
	0x036FC118 MOV X20, X1
	0x036FC11C MOV X22, X0
	0x036FC120 TBNZ X8, 0x0, 0x36FC138
	0x036FC124 ADRP X0, 0x9F7000
	0x036FC128 LDR X0, [X0 + 0xAC8]
	0x036FC12C BL 0x1C16CF4
	0x036FC130 MOVZ W8, 0x1
	0x036FC134 STRB W8, [X21 + 0xC03]
	0x036FC138 LDR X0, [X23]
	0x036FC13C MOVZ W1, 0x3
	0x036FC140 BL 0x1C16D6C
	0x036FC144 MOV X21, X0
	0x036FC148 MOV X0, X22
	0x036FC14C BL 0x36FC1A0
	0x036FC150 CBZ X21, 0x36FC19C
	0x036FC154 LDR W8, [X21 + 0x18]
	0x036FC158 CBZ W8, 0x36FC198
	0x036FC15C STR X0, [X21 + 0x20]
	0x036FC160 MOV X0, X20
	0x036FC164 BL 0x36FC1A0
	0x036FC168 LDR W8, [X21 + 0x18]
	0x036FC16C CMP W8, 0x1
	0x036FC170 B.LS 0x36FC198
	0x036FC174 CMP W8, 0x2
	0x036FC178 STR X0, [X21 + 0x28]
	0x036FC17C B.EQ 0x36FC198
	0x036FC180 STR X19, [X21 + 0x30]
	0x036FC184 MOV X0, X21
	0x036FC188 LDP X20, X19, [X31 + 0x20]
	0x036FC18C LDP X22, X21, [X31 + 0x10]
	0x036FC190 LDP X30, X23, [X31], #0x30
	0x036FC194 B 0x36FC1A0
	0x036FC198 BL 0x1C16F28
	0x036FC19C BL 0x1C16F20
	0x036FC1A0 SUB X31, X31, 0x50
	0x036FC1A4 STP X30, X25, [X31 + 0x10]
	0x036FC1A8 STP X24, X23, [X31 + 0x20]
	0x036FC1AC STP X22, X21, [X31 + 0x30]
	0x036FC1B0 STP X20, X19, [X31 + 0x40]
	0x036FC1B4 ADRP X20, 0xCE4000
	0x036FC1B8 ADRP X21, 0x9F7000
	0x036FC1BC LDRB W8, [X20 + 0xC39]
	0x036FC1C0 LDR X21, [X21 + 0x8F0]
	0x036FC1C4 MOV X19, X0
	0x036FC1C8 TBNZ X8, 0x0, 0x36FC1F8
	0x036FC1CC ADRP X0, 0x9F7000
	0x036FC1D0 LDR X0, [X0 + 0x758]
	0x036FC1D4 BL 0x1C16CF4
	0x036FC1D8 ADRP X0, 0x9F7000
	0x036FC1DC LDR X0, [X0 + 0x8F0]
	0x036FC1E0 BL 0x1C16CF4
	0x036FC1E4 ADRP X0, 0xA44000
	0x036FC1E8 LDR X0, [X0 + 0xE30]
	0x036FC1EC BL 0x1C16CF4
	0x036FC1F0 MOVZ W8, 0x1
	0x036FC1F4 STRB W8, [X20 + 0xC39]
	0x036FC1F8 LDR X0, [X21]
	0x036FC1FC BL 0x1C16F10
	0x036FC200 MOV X1, X31
	0x036FC204 MOV X20, X0
	0x036FC208 BL 0x3231AC4
	0x036FC20C CBZ X19, 0x36FC2E8
	0x036FC210 LDR X8, [X19 + 0x18]
	0x036FC214 CMP W8, 0x1
	0x036FC218 B.LT 0x36FC2BC
	0x036FC21C ADRP X23, 0x9F7000
	0x036FC220 ADRP X24, 0xA44000
	0x036FC224 LDR X23, [X23 + 0x758]
	0x036FC228 LDR X24, [X24 + 0xE30]
	0x036FC22C MOV X22, X31
	0x036FC230 AND X8, X8, 0x0
	0x036FC234 ADD X25, X19, 0x20
	0x036FC238 CMP X22, W8, UXTW
	0x036FC23C B.CS 0x36FC2EC
	0x036FC240 LDR X21, [X25, X22, LSL #3]
	0x036FC244 MOV X0, X31
	0x036FC248 BL 0x3241948
	0x036FC24C CBZ X0, 0x36FC2E8
	0x036FC250 LDR X8, [X0]
	0x036FC254 MOV X1, X21
	0x036FC258 LDP X9, X2, [X8 + 0x1F8]
	0x036FC25C BLR X9
	0x036FC260 LDR X8, [X23]
	0x036FC264 STR W0, [X31 + 0xC]
	0x036FC268 ADD X1, X31, 0xC
	0x036FC26C MOV X0, X8
	0x036FC270 BL 0x1C16E04
	0x036FC274 LDR X8, [X24]
	0x036FC278 MOV X1, X0
	0x036FC27C MOV X2, X31
	0x036FC280 MOV X0, X8
	0x036FC284 BL 0x321EFD0
	0x036FC288 CBZ X20, 0x36FC2E8
	0x036FC28C MOV X1, X0
	0x036FC290 MOV X0, X20
	0x036FC294 MOV X2, X31
	0x036FC298 BL 0x32333E0
	0x036FC29C MOV X0, X20
	0x036FC2A0 MOV X1, X21
	0x036FC2A4 MOV X2, X31
	0x036FC2A8 BL 0x32333E0
	0x036FC2AC LDR W8, [X19 + 0x18]
	0x036FC2B0 ADD X22, X22, 0x1
	0x036FC2B4 CMP X22, W8, SXTW
	0x036FC2B8 B.LT 0x36FC238
	0x036FC2BC CBZ X20, 0x36FC2E8
	0x036FC2C0 LDR X8, [X20]
	0x036FC2C4 MOV X0, X20
	0x036FC2C8 LDP X9, X1, [X8 + 0x168]
	0x036FC2CC BLR X9
	0x036FC2D0 LDP X20, X19, [X31 + 0x40]
	0x036FC2D4 LDP X22, X21, [X31 + 0x30]
	0x036FC2D8 LDP X24, X23, [X31 + 0x20]
	0x036FC2DC LDP X30, X25, [X31 + 0x10]
	0x036FC2E0 ADD X31, X31, 0x50
	0x036FC2E4 RET
	0x036FC2E8 BL 0x1C16F20
	0x036FC2EC BL 0x1C16F28
	0x036FC2F0 STP X30, X21, [X31 - 0x20]!
	0x036FC2F4 STP X20, X19, [X31 + 0x10]
	0x036FC2F8 ADRP X21, 0xCE4000
	0x036FC2FC LDRB W9, [X21 + 0xC04]
	0x036FC300 MOV X20, X0
	0x036FC304 MOV X19, X8
	0x036FC308 TBNZ X9, 0x0, 0x36FC320
	0x036FC30C ADRP X0, 0xA44000
	0x036FC310 LDR X0, [X0 + 0xE38]
	0x036FC314 BL 0x1C16CF4
	0x036FC318 MOVZ W8, 0x1
	0x036FC31C STRB W8, [X21 + 0xC04]
	0x036FC320 MOV X0, X20
	0x036FC324 BL 0x36FC39C
	0x036FC328 CBZ X0, 0x36FC398
	0x036FC32C LDR W8, [X0 + 0x18]
	0x036FC330 MOV X20, X0
	0x036FC334 CBZ W8, 0x36FC394
	0x036FC338 LDR X0, [X20 + 0x20]
	0x036FC33C BL 0x36FC39C
	0x036FC340 LDR W8, [X20 + 0x18]
	0x036FC344 CMP W8, 0x1
	0x036FC348 B.LS 0x36FC394
	0x036FC34C MOV X21, X0
	0x036FC350 LDR X0, [X20 + 0x28]
	0x036FC354 BL 0x36FC39C
	0x036FC358 LDR W8, [X20 + 0x18]
	0x036FC35C CMP W8, 0x2
	0x036FC360 B.LS 0x36FC394
	0x036FC364 ADRP X8, 0xA44000
	0x036FC368 LDR X8, [X8 + 0xE38]
	0x036FC36C MOV X2, X0
	0x036FC370 LDR X3, [X20 + 0x30]
	0x036FC374 STP X31, X31, [X19]
	0x036FC378 LDR X4, [X8]
	0x036FC37C STR X31, [X19 + 0x10]
	0x036FC380 MOV X0, X19
	0x036FC384 LDP X20, X19, [X31 + 0x10]
	0x036FC388 MOV X1, X21
	0x036FC38C LDP X30, X21, [X31], #0x20
	0x036FC390 B 0x27C14F8
	0x036FC394 BL 0x1C16F28
	0x036FC398 BL 0x1C16F20
	0x036FC39C STR X30, [X31 - 0x50]!
	0x036FC3A0 STP X26, X25, [X31 + 0x10]
	0x036FC3A4 STP X24, X23, [X31 + 0x20]
	0x036FC3A8 STP X22, X21, [X31 + 0x30]
	0x036FC3AC STP X20, X19, [X31 + 0x40]
	0x036FC3B0 ADRP X20, 0xCE4000
	0x036FC3B4 LDRB W8, [X20 + 0xC3A]
	0x036FC3B8 MOV X19, X0
	0x036FC3BC TBNZ X8, 0x0, 0x36FC3F8
	0x036FC3C0 ADRP X0, 0x9F8000
	0x036FC3C4 LDR X0, [X0 + 0x1B8]
	0x036FC3C8 BL 0x1C16CF4
	0x036FC3CC ADRP X0, 0x9F9000
	0x036FC3D0 LDR X0, [X0 + 0xE78]
	0x036FC3D4 BL 0x1C16CF4
	0x036FC3D8 ADRP X0, 0x9F8000
	0x036FC3DC LDR X0, [X0 + 0x1C0]
	0x036FC3E0 BL 0x1C16CF4
	0x036FC3E4 ADRP X0, 0x9F8000
	0x036FC3E8 LDR X0, [X0 + 0x1D0]
	0x036FC3EC BL 0x1C16CF4
	0x036FC3F0 MOVZ W8, 0x1
	0x036FC3F4 STRB W8, [X20 + 0xC3A]
	0x036FC3F8 MOV X0, X31
	0x036FC3FC BL 0x3241948
	0x036FC400 CBZ X0, 0x36FC624
	0x036FC404 LDR X8, [X0]
	0x036FC408 ADRP X20, 0x9F8000
	0x036FC40C ADRP X22, 0x9F8000
	0x036FC410 MOV X1, X19
	0x036FC414 LDR X9, [X8 + 0x268]
	0x036FC418 LDR X2, [X8 + 0x270]
	0x036FC41C LDR X20, [X20 + 0x1D0]
	0x036FC420 LDR X22, [X22 + 0x1C0]
	0x036FC424 BLR X9
	0x036FC428 LDR X8, [X20]
	0x036FC42C MOV X21, X0
	0x036FC430 MOV X0, X8
	0x036FC434 BL 0x1C16F10
	0x036FC438 LDR X1, [X22]
	0x036FC43C MOV X20, X0
	0x036FC440 BL 0x301B7C4
	0x036FC444 CBZ X21, 0x36FC624
	0x036FC448 LDR W23, [X21 + 0x18]
	0x036FC44C CMP W23, 0x1
	0x036FC450 B.LT 0x36FC54C
	0x036FC454 ADRP X25, 0x9F8000
	0x036FC458 LDR X25, [X25 + 0x1B8]
	0x036FC45C MOV W24, W31
	0x036FC460 MOVZ W26, 0xA
	0x036FC464 CMP W24, W23
	0x036FC468 B.GE 0x36FC57C
	0x036FC46C LDR W8, [X21 + 0x18]
	0x036FC470 MOV W22, W31
	0x036FC474 CMP W24, W8
	0x036FC478 CSEL W8, W24, W8, HI
	0x036FC47C CMP W8, W24
	0x036FC480 B.EQ 0x36FC578
	0x036FC484 ADD X9, X21, W24, SXTW
	0x036FC488 LDRB W9, [X9 + 0x20]
	0x036FC48C CMP W9, 0x5D
	0x036FC490 B.EQ 0x36FC4B8
	0x036FC494 SUB W10, W9, 0x30
	0x036FC498 CMP W10, 0xA
	0x036FC49C B.CS 0x36FC5B0
	0x036FC4A0 MADD W9, W22, W26, W9
	0x036FC4A4 ADD W24, W24, 0x1
	0x036FC4A8 CMP W23, W24
	0x036FC4AC SUB W22, W9, 0x30
	0x036FC4B0 B.NE 0x36FC47C
	0x036FC4B4 B 0x36FC57C
	0x036FC4B8 MOV X0, X31
	0x036FC4BC BL 0x3241948
	0x036FC4C0 CBZ X0, 0x36FC624
	0x036FC4C4 LDR X8, [X0]
	0x036FC4C8 ADD W2, W24, 0x1
	0x036FC4CC MOV X1, X21
	0x036FC4D0 MOV W3, W22
	0x036FC4D4 LDR X9, [X8 + 0x388]
	0x036FC4D8 LDR X4, [X8 + 0x390]
	0x036FC4DC BLR X9
	0x036FC4E0 CBZ X20, 0x36FC624
	0x036FC4E4 LDR W10, [X20 + 0x1C]
	0x036FC4E8 LDR X8, [X20 + 0x10]
	0x036FC4EC LDR X9, [X25]
	0x036FC4F0 ADD W10, W10, 0x1
	0x036FC4F4 STR W10, [X20 + 0x1C]
	0x036FC4F8 CBZ X8, 0x36FC624
	0x036FC4FC LDRSW X10, [X20 + 0x18]
	0x036FC500 LDR W11, [X8 + 0x18]
	0x036FC504 MOV X1, X0
	0x036FC508 CMP W10, W11
	0x036FC50C B.CS 0x36FC524
	0x036FC510 ADD W9, W10, 0x1
	0x036FC514 ADD X8, X8, X10, 0x3, LSL
	0x036FC518 STR W9, [X20 + 0x18]
	0x036FC51C STR X1, [X8 + 0x20]
	0x036FC520 B 0x36FC538
	0x036FC524 LDR X8, [X9 + 0x20]
	0x036FC528 MOV X0, X20
	0x036FC52C LDR X8, [X8 + 0xC0]
	0x036FC530 LDR X2, [X8 + 0x70]
	0x036FC534 BL 0x301BF90
	0x036FC538 ADD W8, W24, W22
	0x036FC53C ADD W24, W8, 0x1
	0x036FC540 CMP W24, W23
	0x036FC544 B.LT 0x36FC464
	0x036FC548 B 0x36FC550
	0x036FC54C CBZ X20, 0x36FC624
	0x036FC550 ADRP X8, 0x9F9000
	0x036FC554 LDR X8, [X8 + 0xE78]
	0x036FC558 MOV X0, X20
	0x036FC55C LDP X20, X19, [X31 + 0x40]
	0x036FC560 LDP X22, X21, [X31 + 0x30]
	0x036FC564 LDR X1, [X8]
	0x036FC568 LDP X24, X23, [X31 + 0x20]
	0x036FC56C LDP X26, X25, [X31 + 0x10]
	0x036FC570 LDR X30, [X31], #0x50
	0x036FC574 B 0x301DDC4
	0x036FC578 BL 0x1C16F28
	0x036FC57C ADRP X0, 0xA44000
	0x036FC580 LDR X0, [X0 + 0xE40]
	0x036FC584 BL 0x1C16D08
	0x036FC588 MOV X20, X0
	0x036FC58C ADRP X0, 0xA44000
	0x036FC590 LDR X0, [X0 + 0xE48]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0xCE5000
	014 Move W8, [X19+3057]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0xA45000
	020 Move X0, [X0+3472]
	021 Call 0x1C17CF4
	022 Move X0, 0xA45000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0x9F8000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0xA22000
	029 Move X0, [X0+72]
	030 Call 0x1C17CF4
	031 Move X0, 0xA22000
	032 Move X0, [X0+80]
	033 Call 0x1C17CF4
	034 Move X0, 0x9F8000
	035 Move X0, [X0+3608]
	036 Call 0x1C17CF4
	037 Move X0, 0x9F8000
	038 Move X0, [X0+2512]
	039 Call 0x1C17CF4
	040 Move X0, 0xA45000
	041 Move X0, [X0+3480]
	042 Call 0x1C17CF4
	043 Move X0, 0xA45000
	044 Move X0, [X0+3488]
	045 Call 0x1C17CF4
	046 Move X0, 0xA45000
	047 Move X0, [X0+3328]
	048 Call 0x1C17CF4
	049 Move X0, 0xA45000
	050 Move X0, [X0+3496]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X19+3057], W8
	054 Move X0, X31
	055 Call AppDomain.get_CurrentDomain
	056 Compare X0, 0
	057 JumpIfEqual {292}
	058 Move X1, X31
	059 Call AppDomain.GetAssemblies, X0
	060 Compare X0, 0
	061 JumpIfEqual {292}
	062 Move X8, [X0+24]
	063 Move X19, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X25, 0xA45000
	066 Move X26, 0x9F8000
	067 Move X27, 0xA22000
	068 Move X23, 0xA45000
	069 Move X28, 0xA45000
	070 Move X29, 0x9F8000
	071 Move X25, [X25+3328]
	072 Move X26, [X26+3608]
	073 Move X27, [X27+80]
	074 Move X23, [X23+3480]
	075 Move X28, [X28+3496]
	076 Move X29, [X29+2512]
	077 Move X24, X31
	078 And X8, X8, 0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X8, X19, X24
	081 Move X0, [X8+32]
	082 Move X1, X31
	083 Call CustomAttributeExtensions.GetCustomAttributes, X0
	084 Move X8, [X25]
	085 Move X20, X0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {92}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X8, [X25]
	092 Move X9, [X8+184]
	093 Move X21, [X9+16]
	094 Compare X21, 0
	095 JumpIfNotEqual {118}
	096 Move W9, [X8+224]
	097 Compare W9, 0
	098 JumpIfNotEqual {102}
	099 Move X0, X8
	100 Call 0x1C17DFC
	101 Move X8, [X25]
	102 Move X8, [X8+184]
	103 Move X22, [X8]
	104 Move X8, 0xA45000
	105 Move X8, [X8+3312]
	106 Move X0, [X8]
	107 Call 0x1C17F10
	108 Move X8, 0xA45000
	109 Move X8, [X8+3488]
	110 Move X1, X22
	111 Move X3, X31
	112 Move X21, X0
	113 Move X2, [X8]
	114 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	115 Move X8, [X25]
	116 Move X8, [X8+184]
	117 Move [X8+16], X21
	118 Move X8, 0xA45000
	119 Move X8, [X8+3472]
	120 Move X0, X20
	121 Move X1, X21
	122 Move X2, [X8]
	123 Call Enumerable.Where, X0, X1
	124 Compare X0, 0
	125 JumpIfEqual {292}
	126 Move X8, [X0]
	127 Move X10, 0xA22000
	128 Move X20, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Move X10, [X10+72]
	131 Move X1, [X10]
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X20
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X20
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X20, X0
	151 Compare X0, 0
	152 JumpIfEqual {271}
	153 Move X8, [X20]
	154 Move X1, [X26]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move X0, X20
	165 Move W2, W31
	166 Call 0x1C5D788
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Add X8, X8, X9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X1, [X0+8]
	172 Move X0, X20
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {233}
	178 Move X8, [X20]
	179 Move X1, [X27]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move X0, X20
	190 Move W2, W31
	191 Call 0x1C5D788
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Add X8, X8, X9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, X20
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Compare X0, 0
	200 JumpIfEqual {268}
	201 Move X9, [X0]
	202 Move X8, [X23]
	203 Move W11, [X9+304]
	204 Move W10, [X8+304]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X11, [X9+200]
	207 Add X11, X11, X10
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X9, [X9+200]
	211 Add X9, X9, X10
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CSEL not yet implemented."
	215 Move X0, [X8+16]
	216 Compare X0, 0
	217 JumpIfEqual {270}
	218 Move X1, [X28]
	219 Move W2, 24
	220 Move X3, X31
	221 Call Type.GetMethod, X0, X1, X2
	222 Move X21, X0
	223 Move X0, [X29]
	224 Move W1, W31
	225 Call 0x1C17D6C
	226 Compare X21, 0
	227 JumpIfEqual {269}
	228 Move X2, X0
	229 Move X0, X21
	230 Move X1, X31
	231 Move X3, X31
	232 Call MethodBase.Invoke, X0, X1, X2
	233 Move X21, X31
	234 Move W22, 7
	235 Compare X20, 0
	236 JumpIfEqual {260}
	237 Move X8, [X20]
	238 Move X10, 0x9F8000
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Move X10, [X10+3584]
	241 Move X1, [X10]
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move X0, X20
	251 Move W2, W31
	252 Call 0x1C5D788
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Add X8, X8, X9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X20
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Compare X21, 0
	261 JumpIfNotEqual {293}
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Compare W22, 0
	264 JumpIfNotEqual {279}
	265 Move W8, [X19+24]
	266 Add X24, X24, 1
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Call 0x3EB2AD0
	274 Move X21, [X0]
	275 Call 0x3EB2AE0
	276 Move W22, W31
	277 Compare X20, 0
	278 JumpIfNotEqual {237}
	279 Move X20, [X31+80]
	280 Move X19, [X31+88]
	281 Move X22, [X31+64]
	282 Move X21, [X31+72]
	283 Move X24, [X31+48]
	284 Move X23, [X31+56]
	285 Move X26, [X31+32]
	286 Move X25, [X31+40]
	287 Move X28, [X31+16]
	288 Move X27, [X31+24]
	289 Move X29, [X31+96]
	290 Move X30, [X31+104]
	291 Return 
	292 Call 0x1C17F20
	293 Move X0, X21
	294 Call 0x1C17F18
	295 Call 0x1C17F28
	296 Move X19, X0
	297 Move X21, X31
	298 Move X19, X0
	299 Compare X20, 0
	300 JumpIfEqual {324}
	301 Move X8, [X20]
	302 Move X10, 0x9F8000
	303 NotImplemented "Instruction LDRH not yet implemented."
	304 Move X10, [X10+3584]
	305 Move X1, [X10]
	306 Compare X9, 0
	307 JumpIfEqual {314}
	308 Move X10, [X8+176]
	309 Add X10, X10, 8
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Subtract X9, X9, 1
	313 Add X10, X10, 16
	314 Move X0, X20
	315 Move W2, W31
	316 Call 0x1C5D788
	317 NotImplemented "Instruction LDRSW not yet implemented."
	318 Add X8, X8, X9
	319 Add X0, X8, 312
	320 Move X8, [X0]
	321 Move X1, [X0+8]
	322 Move X0, X20
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Compare X21, 0
	325 JumpIfNotEqual {328}
	326 Move X0, X19
	327 Call 0x1D2D690
	328 Move X0, X21
	329 Call 0x1C17F18
	330 Call 0x1991590

Method: System.Void TriggerRecompilation()

Disassembly:
	0x036FC594 BL 0x1C16D08

ISIL:
	001 Return 

Method: System.Void UnloadAdditionalLibraries()

Disassembly:
	0x036FC598 MOV X2, X0
	0x036FC59C MOV X0, X20
	0x036FC5A0 MOV X1, X19
	0x036FC5A4 MOV X3, X31
	0x036FC5A8 BL 0x32274B8
	0x036FC5AC B 0x36FC5E8
	0x036FC5B0 STR W24, [X31 + 0xC]
	0x036FC5B4 ADRP X0, 0x9F7000
	0x036FC5B8 LDR X0, [X0 + 0x758]
	0x036FC5BC BL 0x1C16D08
	0x036FC5C0 ADD X1, X31, 0xC
	0x036FC5C4 BL 0x1C16E04
	0x036FC5C8 MOV X20, X0
	0x036FC5CC ADRP X0, 0xA44000
	0x036FC5D0 LDR X0, [X0 + 0xE50]
	0x036FC5D4 BL 0x1C16D08
	0x036FC5D8 MOV X1, X19
	0x036FC5DC MOV X2, X20
	0x036FC5E0 MOV X3, X31
	0x036FC5E4 BL 0x3227BD4
	0x036FC5E8 MOV X19, X0
	0x036FC5EC ADRP X0, 0xA24000
	0x036FC5F0 LDR X0, [X0 + 0xC08]
	0x036FC5F4 BL 0x1C16D08
	0x036FC5F8 BL 0x1C16F10
	0x036FC5FC MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCE5000
	005 Move X19, 0xA20000
	006 Move W8, [X20+3058]
	007 Move X19, [X19+2120]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xA20000
	013 Move X0, [X0+2120]
	014 Call 0x1C17CF4
	015 Move X0, 0xA45000
	016 Move X0, [X0+3504]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3058], W8
	020 Move X0, [X19]
	021 Move X19, 0xA45000
	022 Move W8, [X0+224]
	023 Move X19, [X19+3504]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]

Method: System.Void InitialiseDebuggerHooks()

Disassembly:
	0x036FC6C8 LDRB W9, [X9]
	0x036FC6CC CMP W9, 0x0
	0x036FC6D0 CSET W9, EQ
	0x036FC6D4 AND W20, W9, W20, 0x0
	0x036FC6D8 STRB W20, [X19 + 0x10]
	0x036FC6DC TBZ X8, 0x0, 0x36FC6EC
	0x036FC6E0 CMP W21, W20
	0x036FC6E4 B.NE 0x36FC724
	0x036FC6E8 B 0x36FC748
	0x036FC6EC MOV W0, W20
	0x036FC6F0 MOV X1, X31
	0x036FC6F4 BL 0x3BFE410
	0x036FC6F8 ADRP X22, 0xA1F000
	0x036FC6FC LDR X22, [X22 + 0x848]
	0x036FC700 LDR X0, [X22]
	0x036FC704 LDR W8, [X0 + 0xE0]
	0x036FC708 CBNZ W8, 0x36FC714
	0x036FC70C BL 0x1C16DFC
	0x036FC710 LDR X0, [X22]
	0x036FC714 LDR X8, [X0 + 0xB8]
	0x036FC718 CMP W21, W20
	0x036FC71C STRB W20, [X8]
	0x036FC720 B.EQ 0x36FC748
	0x036FC724 LDR X8, [X19 + 0x18]
	0x036FC728 CBZ X8, 0x36FC748
	0x036FC72C LDR X2, [X8 + 0x18]
	0x036FC730 LDR X0, [X8 + 0x40]
	0x036FC734 LDR X1, [X8 + 0x28]
	0x036FC738 LDP X20, X19, [X31 + 0x20]
	0x036FC73C LDP X22, X21, [X31 + 0x10]
	0x036FC740 LDR X30, [X31], #0x30
	0x036FC744 BR X2
	0x036FC748 LDP X20, X19, [X31 + 0x20]
	0x036FC74C LDP X22, X21, [X31 + 0x10]
	0x036FC750 LDR X30, [X31], #0x30
	0x036FC754 RET
	0x036FC758 LDRB W8, [X0 + 0x12]
	0x036FC75C AND W9, W1, 0x1
	0x036FC760 STRB W9, [X0 + 0x12]
	0x036FC764 CMP W8, W9
	0x036FC768 B.EQ 0x36FC784
	0x036FC76C LDR X8, [X0 + 0x18]
	0x036FC770 CBZ X8, 0x36FC784
	0x036FC774 LDR X2, [X8 + 0x18]
	0x036FC778 LDR X0, [X8 + 0x40]
	0x036FC77C LDR X1, [X8 + 0x28]
	0x036FC780 BR X2
	0x036FC784 RET
	0x036FC788 LDRB W0, [X0 + 0x16]
	0x036FC78C RET
	0x036FC790 STR X30, [X31 - 0x20]!
	0x036FC794 STP X20, X19, [X31 + 0x10]
	0x036FC798 ADRP X20, 0xCE4000
	0x036FC79C LDRB W8, [X20 + 0xC05]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCE5000
	005 Move X19, 0xA20000
	006 Move W8, [X20+3059]
	007 Move X19, [X19+2120]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xA20000
	013 Move X0, [X0+2120]
	014 Call 0x1C17CF4
	015 Move X0, 0xA45000
	016 Move X0, [X0+3528]
	017 Call 0x1C17CF4
	018 Move X0, 0xA45000
	019 Move X0, [X0+3536]
	020 Call 0x1C17CF4
	021 Move X0, 0xA45000
	022 Move X0, [X0+3544]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3059], W8
	026 Move X0, [X19]
	027 Move X20, 0xA45000
	028 Move W8, [X0+224]
	029 Move X20, [X20+3528]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Call BurstCompiler.IsApiAvailable, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {66}
	039 Move X8, 0xA45000
	040 Move X8, [X8+3536]
	041 Move X1, X31
	042 Move X0, [X8]
	043 Call Environment.GetEnvironmentVariable, X0
	044 Move X1, X31
	045 Call String.IsNullOrEmpty, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {66}
	050 Move X0, [X19]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X8, 0xA45000
	056 Move X8, [X8+3544]
	057 Move X1, X31
	058 Move X0, [X8]
	059 Call BurstCompiler.SendCommandToCompiler, X0, X1
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+32]
	064 Call BurstCompiler.SendCommandToCompiler, X0, X1
	065 Return 
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return 

Method: System.Boolean IsApiAvailable(System.String apiName)

Disassembly:
	0x036FB460 B.EQ 0x36FB468
	0x036FB464 CBNZ W22, 0x36FB4DC
	0x036FB468 LDR W8, [X19 + 0x18]
	0x036FB46C ADD X24, X24, 0x1
	0x036FB470 CMP X24, W8, SXTW
	0x036FB474 B.LT 0x36FB194
	0x036FB478 B 0x36FB4DC
	0x036FB47C BL 0x1C16F20
	0x036FB480 B 0x36FB514
	0x036FB484 BL 0x1C16F20
	0x036FB488 B 0x36FB514
	0x036FB48C BL 0x1C16F20
	0x036FB490 B 0x36FB514
	0x036FB494 BL 0x1C16F20
	0x036FB498 B 0x36FB514
	0x036FB49C B 0x36FB4BC
	0x036FB4A0 B 0x36FB4BC
	0x036FB4A4 B 0x36FB4BC
	0x036FB4A8 B 0x36FB4BC
	0x036FB4AC B 0x36FB4BC
	0x036FB4B0 B 0x36FB4BC
	0x036FB4B4 B 0x36FB4BC
	0x036FB4B8 B 0x36FB4BC
	0x036FB4BC CMP W1, 0x1
	0x036FB4C0 B.NE 0x36FB508
	0x036FB4C4 BL 0x3EB1AD0
	0x036FB4C8 LDR X21, [X0]
	0x036FB4CC BL 0x3EB1AE0
	0x036FB4D0 MOV W22, W31
	0x036FB4D4 CBNZ X20, 0x36FB3F8
	0x036FB4D8 B 0x36FB458
	0x036FB4DC LDP X20, X19, [X31 + 0x50]
	0x036FB4E0 LDP X22, X21, [X31 + 0x40]
	0x036FB4E4 LDP X24, X23, [X31 + 0x30]
	0x036FB4E8 LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCE6000
	006 Move X20, 0xA21000
	007 Move W8, [X21+3060]
	008 Move X20, [X20+2120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xA21000
	015 Move X0, [X0+2120]
	016 Call 0x1C17CF4
	017 Move X0, 0xA46000
	018 Move X0, [X0+3240]
	019 Call 0x1C17CF4
	020 Move X0, 0xA2E000
	021 Move X0, [X0]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3060], W8
	025 Move X0, [X20]
	026 Move X21, 0xA46000
	027 Move X20, 0xA2E000
	028 Move W8, [X0+224]
	029 Move X21, [X21+3240]
	030 Move X20, [X20]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X1, X19
	036 Call BurstCompiler.SendCommandToCompiler, X0, X1
	037 Move X1, [X20]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X2, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call String.op_Equality, X0, X1
	044 Return X0

Method: System.Int32 RequestSetProtocolVersion(System.Int32 version)

Disassembly:
	0x036FC7A0 MOV X19, X0
	0x036FC7A4 TBNZ X8, 0x0, 0x36FC7BC
	0x036FC7A8 ADRP X0, 0xA44000
	0x036FC7AC LDR X0, [X0 + 0xCE0]
	0x036FC7B0 BL 0x1C16CF4
	0x036FC7B4 MOVZ W8, 0x1
	0x036FC7B8 STRB W8, [X20 + 0xC05]
	0x036FC7BC LDRB W8, [X19 + 0x10]
	0x036FC7C0 CBZ W8, 0x36FC7F4
	0x036FC7C4 ADRP X19, 0xA44000
	0x036FC7C8 LDR X19, [X19 + 0xCE0]
	0x036FC7CC LDR X0, [X19]
	0x036FC7D0 LDR W8, [X0 + 0xE0]
	0x036FC7D4 CBNZ W8, 0x36FC7E0
	0x036FC7D8 BL 0x1C16DFC
	0x036FC7DC LDR X0, [X19]
	0x036FC7E0 LDR X8, [X0 + 0xB8]
	0x036FC7E4 LDRB W8, [X8]
	0x036FC7E8 CMP W8, 0x0
	0x036FC7EC CSET W0, EQ
	0x036FC7F0 B 0x36FC7F8
	0x036FC7F4 MOV W0, W31
	0x036FC7F8 LDP X20, X19, [X31 + 0x10]
	0x036FC7FC LDR X30, [X31], #0x20
	0x036FC800 RET
	0x036FC804 LDRB W0, [X0 + 0x10]
	0x036FC808 RET
	0x036FC80C LDR X8, [X0 + 0x18]
	0x036FC810 CBZ X8, 0x36FC824
	0x036FC814 LDR X2, [X8 + 0x18]
	0x036FC818 LDR X0, [X8 + 0x40]
	0x036FC81C LDR X1, [X8 + 0x28]
	0x036FC820 BR X2
	0x036FC824 RET
	0x036FC828 LDRB W0, [X0 + 0x11]
	0x036FC82C RET
	0x036FC830 LDRB W8, [X0 + 0x11]
	0x036FC834 AND W9, W1, 0x1
	0x036FC838 STRB W9, [X0 + 0x11]
	0x036FC83C CMP W8, W9
	0x036FC840 B.EQ 0x36FC85C
	0x036FC844 LDR X8, [X0 + 0x18]
	0x036FC848 CBZ X8, 0x36FC85C
	0x036FC84C LDR X2, [X8 + 0x18]
	0x036FC850 LDR X0, [X8 + 0x40]
	0x036FC854 LDR X1, [X8 + 0x28]
	0x036FC858 BR X2
	0x036FC85C RET
	0x036FC860 LDRB W0, [X0 + 0x12]
	0x036FC864 RET
	0x036FC868 RET
	0x036FC86C LDRB W0, [X0 + 0x15]
	0x036FC870 RET
	0x036FC874 LDRB W8, [X0 + 0x15]
	0x036FC878 AND W9, W1, 0x1
	0x036FC87C STRB W9, [X0 + 0x15]
	0x036FC880 CMP W8, W9
	0x036FC884 B.EQ 0x36FC8A0
	0x036FC888 LDR X8, [X0 + 0x18]
	0x036FC88C CBZ X8, 0x36FC8A0
	0x036FC890 LDR X2, [X8 + 0x18]
	0x036FC894 LDR X0, [X8 + 0x40]
	0x036FC898 LDR X1, [X8 + 0x28]
	0x036FC89C BR X2
	0x036FC8A0 RET
	0x036FC8A4 LDRB W0, [X0 + 0x14]
	0x036FC8A8 RET
	0x036FC8AC LDRB W8, [X0 + 0x14]
	0x036FC8B0 AND W9, W1, 0x1
	0x036FC8B4 STRB W9, [X0 + 0x14]
	0x036FC8B8 CMP W8, W9
	0x036FC8BC B.EQ 0x36FC8D8
	0x036FC8C0 LDR X8, [X0 + 0x18]
	0x036FC8C4 CBZ X8, 0x36FC8D8
	0x036FC8C8 LDR X2, [X8 + 0x18]
	0x036FC8CC LDR X0, [X8 + 0x40]
	0x036FC8D0 LDR X1, [X8 + 0x28]
	0x036FC8D4 BR X2
	0x036FC8D8 RET
	0x036FC8DC MOV W0, W31
	0x036FC8E0 RET
	0x036FC8E4 RET
	0x036FC8E8 MOVZ W0, 0x1
	0x036FC8EC RET
	0x036FC8F0 RET
	0x036FC8F4 LDRB W0, [X0 + 0x13]
	0x036FC8F8 RET
	0x036FC8FC LDRB W8, [X0 + 0x13]
	0x036FC900 AND W9, W1, 0x1
	0x036FC904 STRB W9, [X0 + 0x13]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xCE5000
	009 Move X22, 0x9F8000
	010 Move X21, 0x9FC000
	011 Move X20, 0xA20000
	012 Move W8, [X23+3061]
	013 Move X22, [X22+1880]
	014 Move X21, [X21+272]
	015 Move X20, [X20+2120]
	016 Move W19, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xA20000
	022 Move X0, [X0+2120]
	023 Call 0x1C17CF4
	024 Move X0, 0x9F8000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0x9FC000
	028 Move X0, [X0+272]
	029 Call 0x1C17CF4
	030 Move X0, 0xA45000
	031 Move X0, [X0+3552]
	032 Call 0x1C17CF4
	033 Move X0, 0xA45000
	034 Move X0, [X0+3560]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+3061], W8
	038 Move X0, [X22]
	039 Move X23, 0xA45000
	040 Move X23, [X23+3552]
	041 Add X1, X31, 8
	042 Move [X31+8], W19
	043 Move [X31+12], W31
	044 Call 0x1C17E04
	045 Move X8, [X21]
	046 Move X1, X0
	047 Move X2, X31
	048 Move X0, X8
	049 Call String.Format, X0, X1
	050 Move X8, [X20]
	051 Move X19, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, [X23]
	058 Move X1, X19
	059 Call BurstCompiler.SendCommandToCompiler, X0, X1
	060 Move X1, X31
	061 Move X19, X0
	062 Call String.IsNullOrEmpty, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {76}
	067 Add X1, X31, 12
	068 Move X0, X19
	069 Move X2, X31
	070 Call Int32.TryParse, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {76}
	075 Move W8, [X31+12]
	076 Move W8, W31
	077 Move [X31+12], W31
	078 Move X0, [X22]
	079 Move X22, 0xA45000
	080 Move X22, [X22+3560]
	081 Add X1, X31, 4
	082 Move [X31+4], W8
	083 Call 0x1C17E04
	084 Move X8, [X21]
	085 Move X1, X0
	086 Move X2, X31
	087 Move X0, X8
	088 Call String.Format, X0, X1
	089 Move X8, [X20]
	090 Move X19, X0
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X0, [X22]
	097 Move X1, X19
	098 Call BurstCompiler.SendCommandToCompiler, X0, X1
	099 Move W0, [X31+12]
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X30, [X31+16]
	105 Move X23, [X31+24]
	106 Add X31, X31, 64
	107 Return X0

Method: System.Void Initialize(System.String[] assemblyFolders, System.String[] ignoreAssemblies)

Disassembly:
	0x036FC908 CMP W8, W9

ISIL:
	001 Return 

Method: System.Void NotifyCompilationStarted(System.String[] assemblyFolders, System.String[] ignoreAssemblies)

Disassembly:
	0x036FC90C B.EQ 0x36FC928

ISIL:
	001 Return 

Method: System.Void NotifyAssemblyCompilationNotRequired(System.String assemblyName)

Disassembly:
	0x036FC910 LDR X8, [X0 + 0x18]

ISIL:
	001 Return 

Method: System.Void NotifyAssemblyCompilationFinished(System.String assemblyName, System.String[] defines)

Disassembly:
	0x036FC914 CBZ X8, 0x36FC928

ISIL:
	001 Return 

Method: System.Void NotifyCompilationFinished()

Disassembly:
	0x036FC918 LDR X2, [X8 + 0x18]

ISIL:
	001 Return 

Method: System.String AotCompilation(System.String[] assemblyFolders, System.String[] assemblyRoots, System.String options)

Disassembly:
	0x036FC91C LDR X0, [X8 + 0x40]
	0x036FC920 LDR X1, [X8 + 0x28]
	0x036FC924 BR X2
	0x036FC928 RET
	0x036FC92C STR X30, [X31 - 0x20]!
	0x036FC930 STP X20, X19, [X31 + 0x10]
	0x036FC934 ADRP X20, 0xCE4000
	0x036FC938 LDRB W8, [X20 + 0xC07]
	0x036FC93C MOV X19, X0
	0x036FC940 TBNZ X8, 0x0, 0x36FC958
	0x036FC944 ADRP X0, 0xA44000
	0x036FC948 LDR X0, [X0 + 0xCE0]
	0x036FC94C BL 0x1C16CF4
	0x036FC950 MOVZ W8, 0x1
	0x036FC954 STRB W8, [X20 + 0xC07]
	0x036FC958 LDRB W8, [X19 + 0x11]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCE5000
	005 Move X20, 0xA45000
	006 Move W8, [X19+3062]
	007 Move X20, [X20+3568]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA45000
	013 Move X0, [X0+3568]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3062], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Void SetProfilerCallbacks()

Disassembly:
	0x036FC95C CBZ W8, 0x36FC968

ISIL:
	001 Return 

Method: System.String SendRawCommandToCompiler(System.String command)

Disassembly:
	0x036FC960 MOVZ W0, 0x1
	0x036FC964 B 0x36FC994
	0x036FC968 ADRP X19, 0xA44000
	0x036FC96C LDR X19, [X19 + 0xCE0]
	0x036FC970 LDR X0, [X19]
	0x036FC974 LDR W8, [X0 + 0xE0]
	0x036FC978 CBNZ W8, 0x36FC984
	0x036FC97C BL 0x1C16DFC
	0x036FC980 LDR X0, [X19]
	0x036FC984 LDR X8, [X0 + 0xB8]
	0x036FC988 LDRB W8, [X8 + 0x1]
	0x036FC98C CMP W8, 0x0
	0x036FC990 CSET W0, NE
	0x036FC994 LDP X20, X19, [X31 + 0x10]
	0x036FC998 LDR X30, [X31], #0x20
	0x036FC99C RET
	0x036FC9A0 LDR X0, [X0 + 0x18]
	0x036FC9A4 RET
	0x036FC9A8 STR X1, [X0 + 0x18]
	0x036FC9AC RET
	0x036FC9B0 STP X30, X21, [X31 - 0x20]!
	0x036FC9B4 STP X20, X19, [X31 + 0x10]
	0x036FC9B8 ADRP X19, 0xCE4000
	0x036FC9BC ADRP X21, 0xA44000
	0x036FC9C0 LDRB W8, [X19 + 0xC08]
	0x036FC9C4 LDR X21, [X21 + 0xCE0]
	0x036FC9C8 MOV X20, X0
	0x036FC9CC TBNZ X8, 0x0, 0x36FC9E4
	0x036FC9D0 ADRP X0, 0xA44000
	0x036FC9D4 LDR X0, [X0 + 0xCE0]
	0x036FC9D8 BL 0x1C16CF4
	0x036FC9DC MOVZ W8, 0x1
	0x036FC9E0 STRB W8, [X19 + 0xC08]
	0x036FC9E4 LDR X0, [X21]
	0x036FC9E8 BL 0x1C16F10
	0x036FC9EC MOV W1, W31
	0x036FC9F0 MOV X19, X0
	0x036FC9F4 BL 0x36FBBDC
	0x036FC9F8 CBZ X19, 0x36FCAF4
	0x036FC9FC LDRB W1, [X20 + 0x10]
	0x036FCA00 MOV X0, X19
	0x036FCA04 BL 0x36FC630
	0x036FCA08 LDRB W8, [X20 + 0x11]
	0x036FCA0C LDRB W9, [X19 + 0x11]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCE5000
	006 Move X20, 0xA20000
	007 Move W8, [X21+3063]
	008 Move X20, [X20+2120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA20000
	015 Move X0, [X0+2120]
	016 Call 0x1C17CF4
	017 Move X0, 0x9F8000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3063], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X1, X19
	030 Move X2, X31
	031 Move X0, [X8+24]
	032 Call BurstCompilerService.GetDisassembly, X0, X1
	033 Move X1, X31
	034 Move X19, X0
	035 Call String.IsNullOrEmpty, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {48}
	040 Move X8, 0x9F8000
	041 Move X8, [X8+2440]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, [X8]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 Compare X19, 0
	049 JumpIfEqual {59}
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move W1, 10
	054 Move X2, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call String.TrimStart, X0, X1
	058 Return X0
	059 Call 0x1C17F20

Method: System.String SendCommandToCompiler(System.String commandName, System.String commandArgs = null)

Disassembly:
	0x036FC600 MOV X2, X31
	0x036FC604 MOV X20, X0
	0x036FC608 BL 0x33674A0
	0x036FC60C ADRP X0, 0xA44000
	0x036FC610 LDR X0, [X0 + 0xE58]
	0x036FC614 BL 0x1C16D08
	0x036FC618 MOV X1, X0
	0x036FC61C MOV X0, X20
	0x036FC620 BL 0x1C16DEC
	0x036FC624 BL 0x1C16F20
	0x036FC628 MOV W1, W31
	0x036FC62C B 0x36FBBDC
	0x036FC630 STR X30, [X31 - 0x30]!
	0x036FC634 STP X22, X21, [X31 + 0x10]
	0x036FC638 STP X20, X19, [X31 + 0x20]
	0x036FC63C ADRP X21, 0xCE4000
	0x036FC640 LDRB W8, [X21 + 0xC06]
	0x036FC644 MOV W20, W1
	0x036FC648 MOV X19, X0
	0x036FC64C TBNZ X8, 0x0, 0x36FC670
	0x036FC650 ADRP X0, 0xA44000
	0x036FC654 LDR X0, [X0 + 0xCE0]
	0x036FC658 BL 0x1C16CF4
	0x036FC65C ADRP X0, 0xA1F000
	0x036FC660 LDR X0, [X0 + 0x848]
	0x036FC664 BL 0x1C16CF4
	0x036FC668 MOVZ W8, 0x1
	0x036FC66C STRB W8, [X21 + 0xC06]
	0x036FC670 LDRB W8, [X19 + 0x16]
	0x036FC674 CBZ W8, 0x36FC694
	0x036FC678 ADRP X21, 0xA44000
	0x036FC67C LDR X21, [X21 + 0xCE0]
	0x036FC680 LDR X0, [X21]
	0x036FC684 LDR W8, [X0 + 0xE0]
	0x036FC688 CBZ W8, 0x36FC6AC
	0x036FC68C MOV W8, W31
	0x036FC690 B 0x36FC6C0
	0x036FC694 LDRB W8, [X19 + 0x10]
	0x036FC698 AND W9, W20, 0x1
	0x036FC69C STRB W9, [X19 + 0x10]
	0x036FC6A0 CMP W8, W9
	0x036FC6A4 B.NE 0x36FC724
	0x036FC6A8 B 0x36FC748
	0x036FC6AC BL 0x1C16DFC
	0x036FC6B0 LDRB W8, [X19 + 0x16]
	0x036FC6B4 LDR X0, [X21]
	0x036FC6B8 CMP W8, 0x0
	0x036FC6BC CSET W8, EQ
	0x036FC6C0 LDR X9, [X0 + 0xB8]
	0x036FC6C4 LDRB W21, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCE5000
	006 Move W8, [X21+3064]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA20000
	014 Move X0, [X0+2120]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3064], W8
	018 Compare X20, 0
	019 JumpIfEqual {47}
	020 Move X8, 0xA20000
	021 Move X8, [X8+2120]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Compare X19, 0
	029 JumpIfEqual {41}
	030 Call BurstCompiler.BeginCompilerCommand, X0
	031 Compare X0, 0
	032 JumpIfEqual {65}
	033 Move X1, X19
	034 Call CommandBuilder.With, X0, X1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call CommandBuilder.SendToCompiler, X0
	040 Return X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call BurstCompiler.SendRawCommandToCompiler, X0
	046 Return X0
	047 Move X0, 0x9FD000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xA45000
	053 Move X0, [X0+3512]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call ArgumentNullException..ctor, X0, X1
	059 Move X0, 0xA45000
	060 Move X0, [X0+3520]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Call 0x1C17DEC
	065 Call 0x1C17F20

Method: System.Void DummyMethod()

Disassembly:
	0x036FCAE0 BLR X9

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x036FCAE4 MOV X0, X19
	0x036FCAE8 LDP X20, X19, [X31 + 0x10]
	0x036FCAEC LDP X30, X21, [X31], #0x20
	0x036FCAF0 RET
	0x036FCAF4 BL 0x1C16F20
	0x036FCAF8 STP X30, X21, [X31 - 0x20]!
	0x036FCAFC STP X20, X19, [X31 + 0x10]
	0x036FCB00 ADRP X21, 0xCE4000
	0x036FCB04 LDRB W8, [X21 + 0xC09]
	0x036FCB08 MOV X19, X1
	0x036FCB0C MOV X20, X0
	0x036FCB10 TBNZ X8, 0x0, 0x36FCB28
	0x036FCB14 ADRP X0, 0xA44000
	0x036FCB18 LDR X0, [X0 + 0xCE0]
	0x036FCB1C BL 0x1C16CF4
	0x036FCB20 MOVZ W8, 0x1
	0x036FCB24 STRB W8, [X21 + 0xC09]
	0x036FCB28 MOV X0, X20
	0x036FCB2C MOV X1, X31
	0x036FCB30 MOV X2, X31
	0x036FCB34 STR X31, [X19]
	0x036FCB38 BL 0x32BE96C
	0x036FCB3C TBZ X0, 0x0, 0x36FCB48
	0x036FCB40 MOV W0, W31
	0x036FCB44 B 0x36FCB78
	0x036FCB48 ADRP X8, 0xA44000
	0x036FCB4C LDR X8, [X8 + 0xCE0]
	0x036FCB50 LDR X0, [X8]
	0x036FCB54 LDR W8, [X0 + 0xE0]
	0x036FCB58 CBNZ W8, 0x36FCB60
	0x036FCB5C BL 0x1C16DFC
	0x036FCB60 MOV X0, X20
	0x036FCB64 BL 0x36FCB84
	0x036FCB68 CMP X0, 0x0
	0x036FCB6C CSET W8, NE
	0x036FCB70 STR X0, [X19]
	0x036FCB74 MOV W0, W8
	0x036FCB78 LDP X20, X19, [X31 + 0x10]
	0x036FCB7C LDP X30, X21, [X31], #0x20
	0x036FCB80 RET
	0x036FCB84 STR X30, [X31 - 0x30]!
	0x036FCB88 STP X22, X21, [X31 + 0x10]
	0x036FCB8C STP X20, X19, [X31 + 0x20]
	0x036FCB90 ADRP X20, 0xCE4000
	0x036FCB94 ADRP X21, 0xA44000
	0x036FCB98 LDRB W8, [X20 + 0xC0B]
	0x036FCB9C LDR X21, [X21 + 0xE60]
	0x036FCBA0 MOV X19, X0
	0x036FCBA4 TBNZ X8, 0x0, 0x36FCC28
	0x036FCBA8 ADRP X0, 0xA44000
	0x036FCBAC LDR X0, [X0 + 0xE68]
	0x036FCBB0 BL 0x1C16CF4
	0x036FCBB4 ADRP X0, 0xA44000
	0x036FCBB8 LDR X0, [X0 + 0xE60]
	0x036FCBBC BL 0x1C16CF4
	0x036FCBC0 ADRP X0, 0x9F7000
	0x036FCBC4 LDR X0, [X0 + 0xE00]
	0x036FCBC8 BL 0x1C16CF4
	0x036FCBCC ADRP X0, 0xA21000
	0x036FCBD0 LDR X0, [X0 + 0x48]
	0x036FCBD4 BL 0x1C16CF4
	0x036FCBD8 ADRP X0, 0xA21000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xCE5000
	008 Move X23, 0xA45000
	009 Move X20, 0xA20000
	010 Move X21, 0xA45000
	011 Move X22, 0x9F8000
	012 Move W8, [X19+3065]
	013 Move X23, [X23+3296]
	014 Move X20, [X20+2120]
	015 Move X21, [X21+3576]
	016 Move X22, [X22+1728]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xA45000
	022 Move X0, [X0+3296]
	023 Call 0x1C17CF4
	024 Move X0, 0xA45000
	025 Move X0, [X0+3576]
	026 Call 0x1C17CF4
	027 Move X0, 0xA20000
	028 Move X0, [X0+2120]
	029 Call 0x1C17CF4
	030 Move X0, 0x9F8000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0xA45000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+3065], W8
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move W1, 1
	041 Move X19, X0
	042 Call BurstCompilerOptions..ctor, X0, X1
	043 Move X8, [X20]
	044 Move X8, [X8+184]
	045 Move [X8+8], X19
	046 Move X0, [X22]
	047 Move X19, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Compare X0, 0
	056 JumpIfEqual {73}
	057 Move X8, 0xA45000
	058 Move X8, [X8+3584]
	059 Move W2, 40
	060 Move X3, X31
	061 Move X1, [X8]
	062 Call Type.GetMethod, X0, X1, X2
	063 Move X8, [X20]
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X8, [X8+184]
	069 Move [X8+24], X0
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1C17F20

