Type: BufferedAudioStream

Method: System.Void .ctor(UnityEngine.AudioSource audio)

Disassembly:
	0x034B1580 STR W13, [X31 + 0x28]
	0x034B1584 STR D0, [X31 + 0x20]
	0x034B1588 STRB W31, [X31 + 0x2C]
	0x034B158C BL 0x1C1729C
	0x034B1590 MOV X8, X0
	0x034B1594 STR X0, [X21 + 0x560]
	0x034B1598 MOV X0, X20
	0x034B159C MOV W1, W19
	0x034B15A0 BLR X8
	0x034B15A4 LDP X20, X19, [X31 + 0x40]
	0x034B15A8 LDP X30, X21, [X31 + 0x30]
	0x034B15AC ADD X31, X31, 0x50
	0x034B15B0 RET
	0x034B15B4 CBZ X0, 0x34B15BC
	0x034B15B8 LDR X0, [X0 + 0x10]
	0x034B15BC RET
	0x034B15C0 STP X30, X21, [X31 - 0x20]!
	0x034B15C4 STP X20, X19, [X31 + 0x10]
	0x034B15C8 ADRP X21, 0xF2C000
	0x034B15CC ADRP X20, 0xC81000
	0x034B15D0 LDRB W8, [X21 + 0xB48]
	0x034B15D4 LDR X20, [X20 + 0x328]
	0x034B15D8 MOV X19, X0
	0x034B15DC TBNZ X8, 0x0, 0x34B15F4
	0x034B15E0 ADRP X0, 0xC81000
	0x034B15E4 LDR X0, [X0 + 0x328]
	0x034B15E8 BL 0x1C16CF4
	0x034B15EC MOVZ W8, 0x1
	0x034B15F0 STRB W8, [X21 + 0xB48]
	0x034B15F4 LDR X0, [X20]
	0x034B15F8 LDR X20, [X19 + 0x10]
	0x034B15FC LDR W8, [X0 + 0xE0]
	0x034B1600 CBNZ W8, 0x34B1608
	0x034B1604 BL 0x1C16DFC
	0x034B1608 MOV X0, X20
	0x034B160C BL 0x34B1694
	0x034B1610 MOV X0, X19
	0x034B1614 LDP X20, X19, [X31 + 0x10]
	0x034B1618 MOV X1, X31
	0x034B161C LDP X30, X21, [X31], #0x20
	0x034B1620 B 0x33CB4DC
	0x034B1624 CMP W1, 0x1
	0x034B1628 MOV X21, X0
	0x034B162C B.NE 0x34B165C
	0x034B1630 MOV X0, X21
	0x034B1634 BL 0x3EB1AD0
	0x034B1638 LDR X20, [X0]
	0x034B163C BL 0x3EB1AE0
	0x034B1640 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2D000
	007 Move X21, 0xC43000
	008 Move W8, [X22+2872]
	009 Move X21, [X21+1592]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC43000
	017 Move X0, [X0+1592]
	018 Call 0x1C17CF4
	019 Move X0, 0xC43000
	020 Move X0, [X0+2440]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2872], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X0, [X21]
	028 Move W1, 0x2EE0
	029 Call 0x1C17D6C
	030 Move [X19+16], X20
	031 Move [X19+24], X0
	032 Compare X20, 0
	033 JumpIfEqual {57}
	034 Move X21, 0xC43000
	035 Move X21, [X21+2440]
	036 Move W1, 1
	037 Move X0, X20
	038 Move X2, X31
	039 Call AudioSource.set_loop, X0, X1
	040 Move X0, [X21]
	041 Move W1, 0x2EE0
	042 Move W2, 1
	043 Move W3, 0xBB80
	044 Move W4, W31
	045 Move X5, X31
	046 Call AudioClip.Create, X0, X1, X2, X3, X4
	047 Move X1, X0
	048 Move X0, X20
	049 Move X2, X31
	050 Call AudioSource.set_clip, X0, X1
	051 Move X0, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x034B1688 MOV X0, X20
	0x034B168C BL 0x1C16F18
	0x034B1690 BL 0x1990590
	0x034B1694 SUB X31, X31, 0x50
	0x034B1698 STR X30, [X31 + 0x30]
	0x034B169C STP X20, X19, [X31 + 0x40]
	0x034B16A0 ADRP X20, 0xF2E000
	0x034B16A4 LDR X8, [X20 + 0x518]
	0x034B16A8 MOV X19, X0
	0x034B16AC CBNZ X8, 0x34B16F8
	0x034B16B0 ADRP X12, 0xFFFFFFFFFD63C000
	0x034B16B4 LDR V0, [X12 + 0x5B8]
	0x034B16B8 ADRP X8, 0xFFFFFFFFFD662000
	0x034B16BC ADRP X10, 0xFFFFFFFFFD65D000
	0x034B16C0 ADD X8, X8, 0xDD2
	0x034B16C4 MOVZ W9, 0x11
	0x034B16C8 ADD X10, X10, 0x5BE
	0x034B16CC MOVZ W11, 0x26
	0x034B16D0 MOVZ W13, 0x8
	0x034B16D4 ADD X0, X31, 0x0
	0x034B16D8 STP X8, X9, [X31]
	0x034B16DC STP X10, X11, [X31 + 0x10]
	0x034B16E0 STR W13, [X31 + 0x28]
	0x034B16E4 STR D0, [X31 + 0x20]
	0x034B16E8 STRB W31, [X31 + 0x2C]
	0x034B16EC BL 0x1C1729C
	0x034B16F0 MOV X8, X0
	0x034B16F4 STR X0, [X20 + 0x518]
	0x034B16F8 MOV X0, X19
	0x034B16FC BLR X8
	0x034B1700 LDP X20, X19, [X31 + 0x40]
	0x034B1704 LDR X30, [X31 + 0x30]
	0x034B1708 ADD X31, X31, 0x50
	0x034B170C RET
	0x034B1710 STR X30, [X31 - 0x20]!
	0x034B1714 STP X20, X19, [X31 + 0x10]
	0x034B1718 ADRP X20, 0xF2C000
	0x034B171C LDRB W8, [X20 + 0xB49]
	0x034B1720 MOV X19, X1
	0x034B1724 TBNZ X8, 0x0, 0x34B173C
	0x034B1728 ADRP X0, 0xC81000
	0x034B172C LDR X0, [X0 + 0x328]
	0x034B1730 BL 0x1C16CF4
	0x034B1734 MOVZ W8, 0x1
	0x034B1738 STRB W8, [X20 + 0xB49]
	0x034B173C MOV X0, X19
	0x034B1740 MOV X1, X31
	0x034B1744 BL 0x32277A8
	0x034B1748 TBNZ X0, 0x0, 0x34B1774
	0x034B174C ADRP X8, 0xC81000
	0x034B1750 LDR X8, [X8 + 0x328]
	0x034B1754 LDR X0, [X8]
	0x034B1758 LDR W8, [X0 + 0xE0]
	0x034B175C CBNZ W8, 0x34B1764
	0x034B1760 BL 0x1C16DFC
	0x034B1764 MOV X0, X19
	0x034B1768 LDP X20, X19, [X31 + 0x10]
	0x034B176C LDR X30, [X31], #0x20
	0x034B1770 B 0x34B17BC
	0x034B1774 ADRP X0, 0xC6B000
	0x034B1778 LDR X0, [X0 + 0x1D0]
	0x034B177C BL 0x1C16D08
	0x034B1780 BL 0x1C16F10
	0x034B1784 MOV X19, X0
	0x034B1788 ADRP X0, 0xC81000
	0x034B178C LDR X0, [X0 + 0x330]
	0x034B1790 BL 0x1C16D08
	0x034B1794 MOV X1, X0
	0x034B1798 MOV X0, X19
	0x034B179C MOV X2, X31
	0x034B17A0 BL 0x3C363D0
	0x034B17A4 ADRP X0, 0xC81000
	0x034B17A8 LDR X0, [X0 + 0x338]
	0x034B17AC BL 0x1C16D08
	0x034B17B0 MOV X1, X0
	0x034B17B4 MOV X0, X19
	0x034B17B8 BL 0x1C16DEC
	0x034B17BC SUB X31, X31, 0x50
	0x034B17C0 STR X30, [X31 + 0x30]
	0x034B17C4 STP X20, X19, [X31 + 0x40]
	0x034B17C8 ADRP X20, 0xF2C000
	0x034B17CC LDR X8, [X20 + 0xB78]
	0x034B17D0 MOV X19, X0
	0x034B17D4 CBNZ X8, 0x34B181C
	0x034B17D8 ADRP X12, 0xFFFFFFFFFD63C000
	0x034B17DC LDR V0, [X12 + 0x5B8]
	0x034B17E0 ADRP X8, 0xFFFFFFFFFD662000
	0x034B17E4 ADRP X10, 0xFFFFFFFFFD664000
	0x034B17E8 ADD X8, X8, 0xDD2
	0x034B17EC MOVZ W9, 0x11
	0x034B17F0 ADD X10, X10, 0xBA3
	0x034B17F4 MOVZ W11, 0x14
	0x034B17F8 MOVZ W13, 0x8
	0x034B17FC ADD X0, X31, 0x0
	0x034B1800 STP X8, X9, [X31]
	0x034B1804 STP X10, X11, [X31 + 0x10]
	0x034B1808 STR W13, [X31 + 0x28]
	0x034B180C STR D0, [X31 + 0x20]
	0x034B1810 STRB W31, [X31 + 0x2C]
	0x034B1814 BL 0x1C1729C
	0x034B1818 STR X0, [X20 + 0xB78]
	0x034B181C MOV X0, X19
	0x034B1820 BL 0x1C1727C
	0x034B1824 LDR X8, [X20 + 0xB78]
	0x034B1828 MOV X19, X0
	0x034B182C BLR X8
	0x034B1830 MOV W20, W0
	0x034B1834 MOV X0, X19
	0x034B1838 BL 0x1C17290
	0x034B183C CMP W20, 0x0
	0x034B1840 LDP X20, X19, [X31 + 0x40]
	0x034B1844 LDR X30, [X31 + 0x30]
	0x034B1848 CSET W0, NE
	0x034B184C ADD X31, X31, 0x50
	0x034B1850 RET
	0x034B1854 STP X30, X21, [X31 - 0x20]!
	0x034B1858 STP X20, X19, [X31 + 0x10]
	0x034B185C ADRP X20, 0xF2C000
	0x034B1860 LDRB W8, [X20 + 0xB4A]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF2D000
	007 Move W8, [X20+2873]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xC44000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move X0, 0xC43000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xC82000
	020 Move X0, [X0+768]
	021 Call 0x1C17CF4
	022 Move X0, 0xC82000
	023 Move X0, [X0+776]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2873], W8
	027 Move V8, [X19+40]
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Move X0, [X19+16]
	030 Compare X0, 0
	031 JumpIfEqual {134}
	032 Move X1, X31
	033 Call AudioSource.get_isPlaying, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {53}
	038 Move X8, -43802624
	039 Move V0, [X19+40]
	040 Move V1, [X8+512]
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move V8, [X19+36]
	043 Move X0, X31
	044 Call Time.get_deltaTime
	045 Subtract S0, S8, S0
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move [X19+36], S0
	048 Move X0, [X19+16]
	049 Compare X0, 0
	050 JumpIfEqual {134}
	051 Move X1, X31
	052 Call AudioSource.Play, X0
	053 Move X0, [X19+16]
	054 Compare X0, 0
	055 JumpIfEqual {134}
	056 Move X1, X31
	057 Call AudioSource.get_isPlaying, X0
	058 Move V8, [X19+40]
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {69}
	063 Move X0, X31
	064 Call Time.get_deltaTime
	065 Subtract S8, S8, S0
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Move [X19+40], S8
	068 Move [X19+40], W31
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move X0, [X19+16]
	071 Compare X0, 0
	072 JumpIfEqual {134}
	073 Move X1, X31
	074 Call AudioSource.get_isPlaying, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {113}
	079 Move X8, 0xC44000
	080 Move X8, [X8+2544]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X31
	087 Call DateTime.get_Now
	088 Move [X31+8], X0
	089 Add X0, X31, 8
	090 Move X1, X31
	091 Call DateTime.ToString, X0
	092 Move X8, 0xC82000
	093 Move X8, [X8+768]
	094 Move X1, X0
	095 Move X2, X31
	096 Move X8, [X8]
	097 Move X0, X8
	098 Call String.Concat, X0, X1
	099 Move X8, 0xC43000
	100 Move X8, [X8+2600]
	101 Move X20, X0
	102 Move X8, [X8]
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X0, X20
	109 Move X1, X31
	110 Call Debug.Log, X0
	111 Move X0, X19
	112 Call BufferedAudioStream.Stop, X0
	113 Move W8, [X19+32]
	114 Compare W8, 0
	115 JumpIfEqual {128}
	116 Move X8, 0xC43000
	117 Move X8, [X8+2600]
	118 Move X0, [X8]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X8, 0xC82000
	124 Move X8, [X8+776]
	125 Move X1, X31
	126 Move X0, [X8]
	127 Call Debug.LogError, X0
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X30, [X31+24]
	131 Move V8, [X31+16]
	132 Add X31, X31, 48
	133 Return 
	134 Call 0x1C17F20

Method: System.Void Stop()

Disassembly:
	0x034B1644 MOV X1, X31
	0x034B1648 BL 0x33CB4DC
	0x034B164C CBNZ X20, 0x34B1664
	0x034B1650 LDP X20, X19, [X31 + 0x10]
	0x034B1654 LDP X30, X21, [X31], #0x20
	0x034B1658 RET
	0x034B165C MOV X20, X31
	0x034B1660 B 0x34B1670
	0x034B1664 MOV X0, X20
	0x034B1668 BL 0x1C16F18
	0x034B166C MOV X21, X0
	0x034B1670 MOV X0, X19
	0x034B1674 MOV X1, X31
	0x034B1678 BL 0x33CB4DC
	0x034B167C CBNZ X20, 0x34B1688
	0x034B1680 MOV X0, X21
	0x034B1684 BL 0x1D2C690

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {21}
	007 Move X1, X31
	008 Call AudioSource.Stop, X0
	009 Move X0, [X19+16]
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move S0, W31
	013 Move X1, X31
	014 Call AudioSource.set_time, X0, V0
	015 Move X8, 0xCCCD
	016 NotImplemented "Instruction MOVK not yet implemented."
	017 Move [X19+32], X8
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20

Method: System.Void AddData(System.Single[] samples)

Disassembly:
	0x034B1864 MOV X19, X1
	0x034B1868 TBNZ X8, 0x0, 0x34B1898
	0x034B186C ADRP X0, 0xC81000
	0x034B1870 LDR X0, [X0 + 0x328]
	0x034B1874 BL 0x1C16CF4
	0x034B1878 ADRP X0, 0xC81000
	0x034B187C LDR X0, [X0 + 0x340]
	0x034B1880 BL 0x1C16CF4
	0x034B1884 ADRP X0, 0xC81000
	0x034B1888 LDR X0, [X0 + 0x348]
	0x034B188C BL 0x1C16CF4
	0x034B1890 MOVZ W8, 0x1
	0x034B1894 STRB W8, [X20 + 0xB4A]
	0x034B1898 MOV X0, X19
	0x034B189C MOV X1, X31
	0x034B18A0 BL 0x32277A8
	0x034B18A4 TBNZ X0, 0x0, 0x34B1908
	0x034B18A8 ADRP X8, 0xC81000
	0x034B18AC LDR X8, [X8 + 0x328]
	0x034B18B0 ADRP X21, 0xC81000
	0x034B18B4 ADRP X20, 0xC81000
	0x034B18B8 LDR X0, [X8]
	0x034B18BC LDR W8, [X0 + 0xE0]
	0x034B18C0 LDR X21, [X21 + 0x348]
	0x034B18C4 LDR X20, [X20 + 0x340]
	0x034B18C8 CBNZ W8, 0x34B18D0
	0x034B18CC BL 0x1C16DFC
	0x034B18D0 MOV X0, X19
	0x034B18D4 BL 0x34B1950
	0x034B18D8 LDR X8, [X21]
	0x034B18DC MOV X19, X0
	0x034B18E0 MOV X0, X8
	0x034B18E4 BL 0x1C16F10
	0x034B18E8 LDR X2, [X20]
	0x034B18EC MOV X1, X19
	0x034B18F0 MOV X20, X0
	0x034B18F4 BL 0x25C95C8
	0x034B18F8 MOV X0, X20
	0x034B18FC LDP X20, X19, [X31 + 0x10]
	0x034B1900 LDP X30, X21, [X31], #0x20
	0x034B1904 RET
	0x034B1908 ADRP X0, 0xC6B000
	0x034B190C LDR X0, [X0 + 0x1D0]
	0x034B1910 BL 0x1C16D08
	0x034B1914 BL 0x1C16F10
	0x034B1918 MOV X19, X0
	0x034B191C ADRP X0, 0xC81000
	0x034B1920 LDR X0, [X0 + 0x330]
	0x034B1924 BL 0x1C16D08
	0x034B1928 MOV X1, X0
	0x034B192C MOV X0, X19
	0x034B1930 MOV X2, X31
	0x034B1934 BL 0x3C363D0
	0x034B1938 ADRP X0, 0xC81000
	0x034B193C LDR X0, [X0 + 0x350]
	0x034B1940 BL 0x1C16D08
	0x034B1944 MOV X1, X0
	0x034B1948 MOV X0, X19
	0x034B194C BL 0x1C16DEC
	0x034B1950 SUB X31, X31, 0x50
	0x034B1954 STR X30, [X31 + 0x30]
	0x034B1958 STP X20, X19, [X31 + 0x40]
	0x034B195C ADRP X20, 0xF2C000
	0x034B1960 LDR X8, [X20 + 0xB88]
	0x034B1964 MOV X19, X0
	0x034B1968 CBNZ X8, 0x34B19B0
	0x034B196C ADRP X12, 0xFFFFFFFFFD63C000
	0x034B1970 LDR V0, [X12 + 0x5B8]
	0x034B1974 ADRP X8, 0xFFFFFFFFFD662000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {75}
	008 Move X2, [X0+24]
	009 Move X19, X0
	010 Compare X2, 0
	011 JumpIfEqual {75}
	012 Move W3, [X19+32]
	013 Move X8, [X2+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W22, [X1+24]
	016 Move X20, X1
	017 Subtract W8, W8, W3
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Move X0, X20
	021 Move W1, W31
	022 Move W4, W21
	023 Move X5, X31
	024 Call Array.Copy, X0, X1, X2, X3, X4
	025 Move W8, [X19+32]
	026 Move X2, [X19+24]
	027 Add W3, W21, W8
	028 Move [X19+32], W3
	029 Compare X2, 0
	030 JumpIfEqual {75}
	031 Move X8, [X2+24]
	032 Subtract W22, W22, W21
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W3, W31
	035 Move [X19+32], W31
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move V0, [X20+24]
	038 Move X8, -43802624
	039 Move V1, [X8+60]
	040 Move V2, [X19+40]
	041 Move X0, [X19+16]
	042 NotImplemented "Instruction SCVTF not yet implemented."
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 Add S0, S2, S0
	045 Move [X19+40], S0
	046 Compare X0, 0
	047 JumpIfEqual {75}
	048 Move X1, X31
	049 Call AudioSource.get_clip, X0
	050 Compare X0, 0
	051 JumpIfEqual {75}
	052 Move X1, [X19+24]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move W2, W31
	058 Move X3, X31
	059 Move X30, [X31+48]
	060 Call AudioClip.SetData, X0, X1, X2
	061 Return 
	062 Move X0, 0xC43000
	063 Move X0, [X0+2000]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X1, X31
	067 Move X19, X0
	068 Call Exception..ctor, X0
	069 Move X0, 0xC82000
	070 Move X0, [X0+784]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Call 0x1C17DEC
	075 Call 0x1C17F20

