Type: Oculus.Platform.ChallengeOptions

Method: System.Void .ctor()

Disassembly:
	0x034D09CC ADRP X0, 0xC62000
	0x034D09D0 LDR X0, [X0 + 0x478]
	0x034D09D4 BL 0x1C16CF4
	0x034D09D8 ADRP X0, 0xC62000
	0x034D09DC LDR X0, [X0 + 0x480]
	0x034D09E0 BL 0x1C16CF4
	0x034D09E4 ADRP X0, 0xC62000
	0x034D09E8 LDR X0, [X0 + 0x488]
	0x034D09EC BL 0x1C16CF4
	0x034D09F0 ADRP X0, 0xC62000
	0x034D09F4 LDR X0, [X0 + 0x490]
	0x034D09F8 BL 0x1C16CF4
	0x034D09FC ADRP X0, 0xC62000
	0x034D0A00 LDR X0, [X0 + 0x498]
	0x034D0A04 BL 0x1C16CF4
	0x034D0A08 ADRP X0, 0xC62000
	0x034D0A0C LDR X0, [X0 + 0x4A0]
	0x034D0A10 BL 0x1C16CF4
	0x034D0A14 ADRP X0, 0xC62000
	0x034D0A18 LDR X0, [X0 + 0x4A8]
	0x034D0A1C BL 0x1C16CF4
	0x034D0A20 ADRP X0, 0xC62000
	0x034D0A24 LDR X0, [X0 + 0x4B0]
	0x034D0A28 BL 0x1C16CF4
	0x034D0A2C ADRP X0, 0xC62000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF10000
	006 Move X20, 0xC63000
	007 Move W8, [X21+2010]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC63000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2010], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call CAPI.ovr_ChallengeOptions_Create
	028 Move [X19+16], X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Void SetDescription(System.String value)

Disassembly:
	0x034D0A30 LDR X0, [X0 + 0x4B8]
	0x034D0A34 BL 0x1C16CF4
	0x034D0A38 ADRP X0, 0xC62000
	0x034D0A3C LDR X0, [X0 + 0x4C0]
	0x034D0A40 BL 0x1C16CF4
	0x034D0A44 ADRP X0, 0xC62000
	0x034D0A48 LDR X0, [X0 + 0x4C8]
	0x034D0A4C BL 0x1C16CF4
	0x034D0A50 ADRP X0, 0xC62000
	0x034D0A54 LDR X0, [X0 + 0x4D0]
	0x034D0A58 BL 0x1C16CF4
	0x034D0A5C ADRP X0, 0xC62000
	0x034D0A60 LDR X0, [X0 + 0x4D8]
	0x034D0A64 BL 0x1C16CF4
	0x034D0A68 ADRP X0, 0xC62000
	0x034D0A6C LDR X0, [X0 + 0x4E0]
	0x034D0A70 BL 0x1C16CF4
	0x034D0A74 ADRP X0, 0xC62000
	0x034D0A78 LDR X0, [X0 + 0x4E8]
	0x034D0A7C BL 0x1C16CF4
	0x034D0A80 ADRP X0, 0xC62000
	0x034D0A84 LDR X0, [X0 + 0x4F0]
	0x034D0A88 BL 0x1C16CF4
	0x034D0A8C ADRP X0, 0xC62000
	0x034D0A90 LDR X0, [X0 + 0x4F8]
	0x034D0A94 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2011]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2011], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetDescription, X0, X1
	035 Return 

Method: System.Void SetEndDate(System.DateTime value)

Disassembly:
	0x034D0A98 ADRP X0, 0xC62000
	0x034D0A9C LDR X0, [X0 + 0x500]
	0x034D0AA0 BL 0x1C16CF4
	0x034D0AA4 ADRP X0, 0xC62000
	0x034D0AA8 LDR X0, [X0 + 0x508]
	0x034D0AAC BL 0x1C16CF4
	0x034D0AB0 ADRP X0, 0xC62000
	0x034D0AB4 LDR X0, [X0 + 0x510]
	0x034D0AB8 BL 0x1C16CF4
	0x034D0ABC ADRP X0, 0xC62000
	0x034D0AC0 LDR X0, [X0 + 0x518]
	0x034D0AC4 BL 0x1C16CF4
	0x034D0AC8 ADRP X0, 0xC62000
	0x034D0ACC LDR X0, [X0 + 0x520]
	0x034D0AD0 BL 0x1C16CF4
	0x034D0AD4 ADRP X0, 0xC62000
	0x034D0AD8 LDR X0, [X0 + 0x528]
	0x034D0ADC BL 0x1C16CF4
	0x034D0AE0 ADRP X0, 0xC62000
	0x034D0AE4 LDR X0, [X0 + 0x530]
	0x034D0AE8 BL 0x1C16CF4
	0x034D0AEC ADRP X0, 0xC62000
	0x034D0AF0 LDR X0, [X0 + 0x538]
	0x034D0AF4 BL 0x1C16CF4
	0x034D0AF8 ADRP X0, 0xC62000
	0x034D0AFC LDR X0, [X0 + 0x540]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2012]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2012], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetEndDate, X0, X1
	035 Return 

Method: System.Void SetIncludeActiveChallenges(System.Boolean value)

Disassembly:
	0x034D0B00 BL 0x1C16CF4
	0x034D0B04 ADRP X0, 0xC62000
	0x034D0B08 LDR X0, [X0 + 0x548]
	0x034D0B0C BL 0x1C16CF4
	0x034D0B10 ADRP X0, 0xC62000
	0x034D0B14 LDR X0, [X0 + 0x550]
	0x034D0B18 BL 0x1C16CF4
	0x034D0B1C ADRP X0, 0xC62000
	0x034D0B20 LDR X0, [X0 + 0x558]
	0x034D0B24 BL 0x1C16CF4
	0x034D0B28 ADRP X0, 0xC62000
	0x034D0B2C LDR X0, [X0 + 0x560]
	0x034D0B30 BL 0x1C16CF4
	0x034D0B34 ADRP X0, 0xC62000
	0x034D0B38 LDR X0, [X0 + 0x568]
	0x034D0B3C BL 0x1C16CF4
	0x034D0B40 ADRP X0, 0xC62000
	0x034D0B44 LDR X0, [X0 + 0x570]
	0x034D0B48 BL 0x1C16CF4
	0x034D0B4C ADRP X0, 0xC62000
	0x034D0B50 LDR X0, [X0 + 0x578]
	0x034D0B54 BL 0x1C16CF4
	0x034D0B58 ADRP X0, 0xC62000
	0x034D0B5C LDR X0, [X0 + 0x580]
	0x034D0B60 BL 0x1C16CF4
	0x034D0B64 ADRP X0, 0xC62000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2013]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2013], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 And W1, W19, 1
	028 Move X0, X20
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetIncludeActiveChallenges, X0, X1
	035 Return 

Method: System.Void SetIncludeFutureChallenges(System.Boolean value)

Disassembly:
	0x034D0B68 LDR X0, [X0 + 0x588]
	0x034D0B6C BL 0x1C16CF4
	0x034D0B70 ADRP X0, 0xC62000
	0x034D0B74 LDR X0, [X0 + 0x590]
	0x034D0B78 BL 0x1C16CF4
	0x034D0B7C ADRP X0, 0xC62000
	0x034D0B80 LDR X0, [X0 + 0x598]
	0x034D0B84 BL 0x1C16CF4
	0x034D0B88 ADRP X0, 0xC62000
	0x034D0B8C LDR X0, [X0 + 0x5A0]
	0x034D0B90 BL 0x1C16CF4
	0x034D0B94 ADRP X0, 0xC62000
	0x034D0B98 LDR X0, [X0 + 0x5A8]
	0x034D0B9C BL 0x1C16CF4
	0x034D0BA0 ADRP X0, 0xC62000
	0x034D0BA4 LDR X0, [X0 + 0x5B0]
	0x034D0BA8 BL 0x1C16CF4
	0x034D0BAC ADRP X0, 0xC62000
	0x034D0BB0 LDR X0, [X0 + 0x5B8]
	0x034D0BB4 BL 0x1C16CF4
	0x034D0BB8 ADRP X0, 0xC62000
	0x034D0BBC LDR X0, [X0 + 0x5C0]
	0x034D0BC0 BL 0x1C16CF4
	0x034D0BC4 ADRP X0, 0xC62000
	0x034D0BC8 LDR X0, [X0 + 0x5C8]
	0x034D0BCC BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2014]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2014], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 And W1, W19, 1
	028 Move X0, X20
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetIncludeFutureChallenges, X0, X1
	035 Return 

Method: System.Void SetIncludePastChallenges(System.Boolean value)

Disassembly:
	0x034D0BD0 ADRP X0, 0xC62000
	0x034D0BD4 LDR X0, [X0 + 0x5D0]
	0x034D0BD8 BL 0x1C16CF4
	0x034D0BDC ADRP X0, 0xC62000
	0x034D0BE0 LDR X0, [X0 + 0x5D8]
	0x034D0BE4 BL 0x1C16CF4
	0x034D0BE8 ADRP X0, 0xC62000
	0x034D0BEC LDR X0, [X0 + 0x5E0]
	0x034D0BF0 BL 0x1C16CF4
	0x034D0BF4 ADRP X0, 0xC62000
	0x034D0BF8 LDR X0, [X0 + 0x5E8]
	0x034D0BFC BL 0x1C16CF4
	0x034D0C00 ADRP X0, 0xC62000
	0x034D0C04 LDR X0, [X0 + 0x5F0]
	0x034D0C08 BL 0x1C16CF4
	0x034D0C0C ADRP X0, 0xC62000
	0x034D0C10 LDR X0, [X0 + 0x5F8]
	0x034D0C14 BL 0x1C16CF4
	0x034D0C18 ADRP X0, 0xC62000
	0x034D0C1C LDR X0, [X0 + 0x600]
	0x034D0C20 BL 0x1C16CF4
	0x034D0C24 ADRP X0, 0xC62000
	0x034D0C28 LDR X0, [X0 + 0x608]
	0x034D0C2C BL 0x1C16CF4
	0x034D0C30 ADRP X0, 0xC62000
	0x034D0C34 LDR X0, [X0 + 0x610]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2015]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2015], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 And W1, W19, 1
	028 Move X0, X20
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetIncludePastChallenges, X0, X1
	035 Return 

Method: System.Void SetLeaderboardName(System.String value)

Disassembly:
	0x034D0C38 BL 0x1C16CF4
	0x034D0C3C ADRP X0, 0xC62000
	0x034D0C40 LDR X0, [X0 + 0x618]
	0x034D0C44 BL 0x1C16CF4
	0x034D0C48 ADRP X0, 0xC62000
	0x034D0C4C LDR X0, [X0 + 0x620]
	0x034D0C50 BL 0x1C16CF4
	0x034D0C54 ADRP X0, 0xC62000
	0x034D0C58 LDR X0, [X0 + 0x628]
	0x034D0C5C BL 0x1C16CF4
	0x034D0C60 MOVZ W8, 0x1
	0x034D0C64 STRB W8, [X19 + 0x7F2]
	0x034D0C68 ADD X0, X31, 0x18
	0x034D0C6C MOV X1, X31
	0x034D0C70 BL 0x33C6854
	0x034D0C74 CBZ X0, 0x34D1D04
	0x034D0C78 ADRP X8, 0xC62000
	0x034D0C7C LDR X8, [X8 + 0x328]
	0x034D0C80 LDR X19, [X31 + 0x18]
	0x034D0C84 LDR X0, [X8]
	0x034D0C88 LDR W8, [X0 + 0xE0]
	0x034D0C8C CBNZ W8, 0x34D0C94
	0x034D0C90 BL 0x1C16DFC
	0x034D0C94 MOV X0, X19
	0x034D0C98 BL 0x34C82A0
	0x034D0C9C MOVZ W8, 0xC1CF

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2016]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2016], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetLeaderboardName, X0, X1
	035 Return 

Method: System.Void SetStartDate(System.DateTime value)

Disassembly:
	0x034D0CA0 MOVK W8, 0x420A0000
	0x034D0CA4 MOV W19, W0
	0x034D0CA8 CMP W0, W8
	0x034D0CAC B.HI 0x34D0D1C
	0x034D0CB0 MOVZ W8, 0xF0D5
	0x034D0CB4 MOVK W8, 0x1F900000
	0x034D0CB8 CMP W19, W8
	0x034D0CBC B.HI 0x34D0D90
	0x034D0CC0 MOVZ W8, 0x40D
	0x034D0CC4 MOVK W8, 0xEB40000
	0x034D0CC8 CMP W19, W8
	0x034D0CCC B.HI 0x34D0E50
	0x034D0CD0 MOVZ W8, 0x5ABE
	0x034D0CD4 MOVK W8, 0x6A80000
	0x034D0CD8 CMP W19, W8
	0x034D0CDC B.HI 0x34D0F80
	0x034D0CE0 MOVZ W8, 0x6231
	0x034D0CE4 MOVK W8, 0x3E70000
	0x034D0CE8 CMP W19, W8
	0x034D0CEC B.HI 0x34D11A0
	0x034D0CF0 MOVZ W8, 0x2F60
	0x034D0CF4 MOVK W8, 0x2D30000
	0x034D0CF8 CMP W19, W8
	0x034D0CFC B.HI 0x34D151C
	0x034D0D00 MOVZ W8, 0x8AEF
	0x034D0D04 MOVK W8, 0xE30000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2017]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2017], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetStartDate, X0, X1
	035 Return 

Method: System.Void SetTitle(System.String value)

Disassembly:
	0x034D0D08 CMP W19, W8
	0x034D0D0C B.EQ 0x34D1F5C
	0x034D0D10 MOVZ W8, 0x2F60
	0x034D0D14 MOVK W8, 0x2D30000
	0x034D0D18 B 0x34D1BB8
	0x034D0D1C MOVZ W8, 0x5D38
	0x034D0D20 MOVK W8, 0x5D950000
	0x034D0D24 CMP W19, W8
	0x034D0D28 B.HI 0x34D0DEC
	0x034D0D2C MOVZ W8, 0x8EEE
	0x034D0D30 MOVK W8, 0x4E070000
	0x034D0D34 CMP W19, W8
	0x034D0D38 B.HI 0x34D0E9C
	0x034D0D3C MOVZ W8, 0x55BE
	0x034D0D40 MOVK W8, 0x48FF0000
	0x034D0D44 CMP W19, W8
	0x034D0D48 B.HI 0x34D0FC4
	0x034D0D4C MOVZ W8, 0x6E
	0x034D0D50 MOVK W8, 0x44FC0000
	0x034D0D54 CMP W19, W8
	0x034D0D58 B.HI 0x34D11F4
	0x034D0D5C MOVZ W8, 0x345D
	0x034D0D60 MOVK W8, 0x436F0000
	0x034D0D64 CMP W19, W8
	0x034D0D68 B.HI 0x34D1538
	0x034D0D6C MOVZ W8, 0x4356

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2018]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2018], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetTitle, X0, X1
	035 Return 

Method: System.Void SetViewerFilter(Oculus.Platform.ChallengeViewerFilter value)

Disassembly:
	0x034D0D70 MOVK W8, 0x43260000
	0x034D0D74 CMP W19, W8
	0x034D0D78 B.EQ 0x34D1E18
	0x034D0D7C MOVZ W8, 0x345D
	0x034D0D80 MOVK W8, 0x436F0000
	0x034D0D84 CMP W19, W8
	0x034D0D88 B.EQ 0x34D1EF0
	0x034D0D8C B 0x34D1C90
	0x034D0D90 MOVZ W8, 0xE727
	0x034D0D94 MOVK W8, 0x2F420000
	0x034D0D98 CMP W19, W8
	0x034D0D9C B.HI 0x34D0EE8
	0x034D0DA0 MOVZ W8, 0x2F6C
	0x034D0DA4 MOVK W8, 0x24470000
	0x034D0DA8 CMP W19, W8
	0x034D0DAC B.HI 0x34D1000
	0x034D0DB0 MOVZ W8, 0x596E
	0x034D0DB4 MOVK W8, 0x22470000
	0x034D0DB8 CMP W19, W8
	0x034D0DBC B.HI 0x34D1248
	0x034D0DC0 MOVZ W8, 0x8069
	0x034D0DC4 MOVK W8, 0x21240000
	0x034D0DC8 CMP W19, W8
	0x034D0DCC B.HI 0x34D155C
	0x034D0DD0 MOVZ W8, 0x72D9
	0x034D0DD4 MOVK W8, 0x1FBB0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2019]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2019], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move W1, W19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetViewerFilter, X0, X1
	035 Return 

Method: System.Void SetVisibility(Oculus.Platform.ChallengeVisibility value)

Disassembly:
	0x034D0DD8 CMP W19, W8
	0x034D0DDC B.EQ 0x34D1C6C
	0x034D0DE0 MOVZ W8, 0x8069
	0x034D0DE4 MOVK W8, 0x21240000
	0x034D0DE8 B 0x34D172C
	0x034D0DEC MOVZ W8, 0x7886
	0x034D0DF0 MOVK W8, 0x6D5D0000
	0x034D0DF4 CMP W19, W8
	0x034D0DF8 B.HI 0x34D0F34
	0x034D0DFC MOVZ W8, 0x6A83
	0x034D0E00 MOVK W8, 0x67520000
	0x034D0E04 CMP W19, W8
	0x034D0E08 B.HI 0x34D103C
	0x034D0E0C MOVZ W8, 0x9E2B
	0x034D0E10 MOVK W8, 0x63590000
	0x034D0E14 CMP W19, W8
	0x034D0E18 B.HI 0x34D1274
	0x034D0E1C MOVZ W8, 0x1BC
	0x034D0E20 MOVK W8, 0x62910000
	0x034D0E24 CMP W19, W8
	0x034D0E28 B.HI 0x34D15A0
	0x034D0E2C MOVZ W8, 0x474C
	0x034D0E30 MOVK W8, 0x5DB30000
	0x034D0E34 CMP W19, W8
	0x034D0E38 B.EQ 0x34D14F8
	0x034D0E3C MOVZ W8, 0x1BC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF10000
	007 Move X21, 0xC63000
	008 Move W8, [X22+2020]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2020], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move W1, W19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.ovr_ChallengeOptions_SetVisibility, X0, X1
	035 Return 

Method: System.IntPtr op_Explicit(Oculus.Platform.ChallengeOptions options)

Disassembly:
	0x034D0E40 MOVK W8, 0x62910000
	0x034D0E44 CMP W19, W8
	0x034D0E48 B.EQ 0x34D1D40

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Move X0, [X0+16]
	004 Return X0

Method: System.Void Finalize()

Disassembly:
	0x034D0E4C B 0x34D1C90
	0x034D0E50 MOVZ W8, 0x63B1
	0x034D0E54 MOVK W8, 0x15260000
	0x034D0E58 CMP W19, W8
	0x034D0E5C B.HI 0x34D10A0
	0x034D0E60 MOVZ W8, 0xC8FE
	0x034D0E64 MOVK W8, 0x117F0000
	0x034D0E68 CMP W19, W8
	0x034D0E6C B.HI 0x34D12A8
	0x034D0E70 MOVZ W8, 0x9FC5
	0x034D0E74 MOVK W8, 0x11440000
	0x034D0E78 CMP W19, W8
	0x034D0E7C B.HI 0x34D15C4
	0x034D0E80 MOVZ W8, 0xCF9F
	0x034D0E84 MOVK W8, 0xF9E0000
	0x034D0E88 CMP W19, W8
	0x034D0E8C B.EQ 0x34D1F80
	0x034D0E90 MOVZ W8, 0x9FC5
	0x034D0E94 MOVK W8, 0x11440000
	0x034D0E98 B 0x34D146C
	0x034D0E9C MOVZ W8, 0x52B3
	0x034D0EA0 MOVK W8, 0x57B70000
	0x034D0EA4 CMP W19, W8
	0x034D0EA8 B.HI 0x34D10E4
	0x034D0EAC MOVZ W8, 0xCE0C
	0x034D0EB0 MOVK W8, 0x51F80000
	0x034D0EB4 CMP W19, W8
	0x034D0EB8 B.HI 0x34D12D4
	0x034D0EBC MOVZ W8, 0xDE1D
	0x034D0EC0 MOVK W8, 0x4F9F0000
	0x034D0EC4 CMP W19, W8
	0x034D0EC8 B.HI 0x34D1608
	0x034D0ECC MOVZ W8, 0x7CD9
	0x034D0ED0 MOVK W8, 0x4E200000
	0x034D0ED4 CMP W19, W8
	0x034D0ED8 B.EQ 0x34D14F8
	0x034D0EDC MOVZ W8, 0xDE1D
	0x034D0EE0 MOVK W8, 0x4F9F0000
	0x034D0EE4 B 0x34D1AE8
	0x034D0EE8 MOVZ W8, 0x7F36
	0x034D0EEC MOVK W8, 0x387E0000
	0x034D0EF0 CMP W19, W8
	0x034D0EF4 B.HI 0x34D1128
	0x034D0EF8 MOVZ W8, 0xABDA
	0x034D0EFC MOVK W8, 0x32710000
	0x034D0F00 CMP W19, W8
	0x034D0F04 B.HI 0x34D1300
	0x034D0F08 MOVZ W8, 0x84B8
	0x034D0F0C MOVK W8, 0x314C0000
	0x034D0F10 CMP W19, W8
	0x034D0F14 B.HI 0x34D164C
	0x034D0F18 MOVZ W8, 0xCCD
	0x034D0F1C MOVK W8, 0x2FDD0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF10000
	006 Move X20, 0xC63000
	007 Move W8, [X21+2021]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC63000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2021], W8
	019 Move X0, [X20]
	020 Move X20, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Call CAPI.ovr_ChallengeOptions_Destroy, X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Object.Finalize, X0
	034 Return 
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X21, X0
	037 Move X0, X21
	038 Call 0x3EB2AD0
	039 Move X20, [X0]
	040 Call 0x3EB2AE0
	041 Move X0, X19
	042 Move X1, X31
	043 Call Object.Finalize, X0
	044 Compare X20, 0
	045 JumpIfNotEqual {52}
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Move X20, X31
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Move X21, X0
	055 Move X0, X19
	056 Move X1, X31
	057 Call Object.Finalize, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X21
	061 Call 0x1D2D690
	062 Move X0, X20
	063 Call 0x1C17F18
	064 Call 0x1991590

