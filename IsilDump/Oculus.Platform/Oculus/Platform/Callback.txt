Type: Oculus.Platform.Callback

Method: System.Void SetNotificationCallback(Oculus.Platform.Message/MessageType type, Oculus.Platform.Message`1/Callback<T> callback)

Disassembly:
	0x021A21B8 MOV X19, X2
	0x021A21BC MOV X20, X1
	0x021A21C0 MOV X21, X0
	0x021A21C4 CBNZ X8, 0x21A21DC
	0x021A21C8 ADRP X0, 0x1F51000
	0x021A21CC LDR X0, [X0 + 0x838]
	0x021A21D0 BL 0x1C16CF4
	0x021A21D4 LDR X8, [X19 + 0x38]
	0x021A21D8 CBZ X8, 0x21A2258
	0x021A21DC CBZ X21, 0x21A2248
	0x021A21E0 LDR W8, [X21 + 0x18]
	0x021A21E4 CMP W8, 0x1
	0x021A21E8 B.LT 0x21A2248
	0x021A21EC ADRP X23, 0x1F51000
	0x021A21F0 LDR X23, [X23 + 0x838]
	0x021A21F4 MOV W22, W31
	0x021A21F8 CBZ W22, 0x21A2210
	0x021A21FC CBZ X20, 0x21A2268
	0x021A2200 LDR X1, [X23]
	0x021A2204 MOV X0, X20
	0x021A2208 MOV X2, X31
	0x021A220C BL 0x32333E0
	0x021A2210 LDR X8, [X19 + 0x38]
	0x021A2214 MOV X0, X21
	0x021A2218 MOV W1, W22
	0x021A221C LDR X2, [X8 + 0x10]
	0x021A2220 BL 0x301BCCC
	0x021A2224 CBZ X20, 0x21A2268
	0x021A2228 MOV X1, X0
	0x021A222C MOV X0, X20
	0x021A2230 MOV X2, X31
	0x021A2234 BL 0x3233F90
	0x021A2238 LDR W8, [X21 + 0x18]
	0x021A223C ADD W22, W22, 0x1
	0x021A2240 CMP W22, W8
	0x021A2244 B.LT 0x21A21F8
	0x021A2248 LDP X20, X19, [X31 + 0x20]
	0x021A224C LDP X22, X21, [X31 + 0x10]
	0x021A2250 LDP X30, X23, [X31], #0x30
	0x021A2254 RET
	0x021A2258 MOV X0, X19
	0x021A225C BL 0x1C5C6E0
	0x021A2260 CBNZ X21, 0x21A21E0
	0x021A2264 B 0x21A2248
	0x021A2268 BL 0x1C16F20
	0x021A226C STP X29, X30, [X31 - 0x50]!
	0x021A2270 STP X26, X25, [X31 + 0x10]
	0x021A2274 STP X24, X23, [X31 + 0x20]
	0x021A2278 STP X22, X21, [X31 + 0x30]
	0x021A227C STP X20, X19, [X31 + 0x40]
	0x021A2280 ADD X29, X31, 0x0
	0x021A2284 SUB X31, X31, 0x20
	0x021A2288 MRS X23, 0xC000
	0x021A228C LDR X8, [X23 + 0x28]
	0x021A2290 MOV X19, X2
	0x021A2294 MOV X20, X1
	0x021A2298 MOV X21, X0
	0x021A229C STUR X8, [X29 - 0x8]
	0x021A22A0 LDR X8, [X2 + 0x38]
	0x021A22A4 CBNZ X8, 0x21A22C8
	0x021A22A8 ADRP X0, 0x1F51000
	0x021A22AC LDR X0, [X0 + 0x838]
	0x021A22B0 BL 0x1C16CF4
	0x021A22B4 LDR X8, [X19 + 0x38]
	0x021A22B8 CBNZ X8, 0x21A22C8
	0x021A22BC MOV X0, X19
	0x021A22C0 BL 0x1C5C6E0
	0x021A22C4 LDR X8, [X19 + 0x38]
	0x021A22C8 LDR X9, [X8 + 0x18]
	0x021A22CC ADD X10, X31, 0x0
	0x021A22D0 LDR W9, [X9 + 0xFC]
	0x021A22D4 ADD X9, X9, 0xF
	0x021A22D8 AND X9, X9, 0x1FFFFFFFF
	0x021A22DC SUB X22, X10, X9
	0x021A22E0 ADD X31, X22, 0x0
	0x021A22E4 CBZ X21, 0x21A23AC
	0x021A22E8 LDR X1, [X8 + 0x8]
	0x021A22EC MOV X0, X21
	0x021A22F0 LDR X8, [X1]
	0x021A22F4 BLR X8
	0x021A22F8 CBZ W0, 0x21A23AC
	0x021A22FC LDR X8, [X19 + 0x38]
	0x021A2300 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X21, X1
	010 Move W20, W0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1F7A000
	014 Move X0, [X0+2176]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F7A000
	017 Move X0, [X0+2184]
	018 Call 0x1C17CF4
	019 Move X8, [X19+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Compare X21, 0
	025 JumpIfEqual {86}
	026 Move X23, 0x1F7A000
	027 Move X23, [X23+2176]
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X19+56]
	035 Move X9, [X0+184]
	036 Move X8, [X8+8]
	037 Move X22, [X9+8]
	038 Move W10, [X8+309]
	039 Move TEMP, X10
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X0, X8
	047 Call 0x1C17F10
	048 Move X8, [X19+56]
	049 Move X1, X21
	050 Move X19, X0
	051 Move X2, [X8+16]
	052 Call 0x25C9FC8, X0, X1
	053 Compare X22, 0
	054 JumpIfEqual {101}
	055 Move X8, 0x1F7A000
	056 Move X8, [X8+2184]
	057 Move X0, X22
	058 Move W1, W20
	059 Move X2, X19
	060 Move X3, [X8]
	061 Call Dictionary`2<UInt32Enum, Object>.set_Item, X0, X1, X2
	062 Move W8, 0x89F6
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X23]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X0, X31
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Call Callback.FlushJoinIntentNotificationQueue
	078 Return 
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 
	086 Move X0, 0x1F52000
	087 Move X0, [X0+2000]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X20, X0
	091 Move X0, 0x1F7A000
	092 Move X0, [X0+2192]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X20
	096 Move X2, X31
	097 Call Exception..ctor, X0, X1
	098 Move X0, X20
	099 Move X1, X19
	100 Call 0x1C17DEC
	101 Call 0x1C17F20

Method: System.Void SetNotificationCallback(Oculus.Platform.Message/MessageType type, Oculus.Platform.Message/Callback callback)

Disassembly:
	0x034B3450 LDR X8, [X31 + 0x28]
	0x034B3454 LDR X24, [X24 + 0x710]
	0x034B3458 LDR X25, [X25 + 0xD80]
	0x034B345C LDR X26, [X26 + 0x6C0]
	0x034B3460 LDR X29, [X29 + 0xB60]
	0x034B3464 MOV W23, W31
	0x034B3468 MOVZ W28, 0x28
	0x034B346C STP V0, V1, [X31 + 0x30]
	0x034B3470 STR X8, [X31 + 0x50]
	0x034B3474 LDR X1, [X24]
	0x034B3478 ADD X0, X31, 0x30
	0x034B347C BL 0x2C0A728
	0x034B3480 TBZ X0, 0x0, 0x34B3658
	0x034B3484 LDR X20, [X31 + 0x48]
	0x034B3488 CBZ X20, 0x34B3690
	0x034B348C LDR X27, [X31 + 0x40]
	0x034B3490 MOV X0, X20
	0x034B3494 MOV X1, X31
	0x034B3498 BL 0x33BE520
	0x034B349C MOV X21, X0
	0x034B34A0 LDR X0, [X26]
	0x034B34A4 LDR X22, [X25]
	0x034B34A8 LDR W8, [X0 + 0xE0]
	0x034B34AC CBNZ W8, 0x34B34B4
	0x034B34B0 BL 0x1C16DFC
	0x034B34B4 MOV X0, X22
	0x034B34B8 MOV X1, X31
	0x034B34BC BL 0x338C698
	0x034B34C0 MOV X1, X0
	0x034B34C4 MOV X0, X21
	0x034B34C8 MOV X2, X31
	0x034B34CC BL 0x3395194
	0x034B34D0 TBZ X0, 0x0, 0x34B3520
	0x034B34D4 ADRP X9, 0xC40000
	0x034B34D8 LDR X8, [X20]
	0x034B34DC LDR X9, [X9 + 0x758]
	0x034B34E0 LDR X8, [X8 + 0x40]
	0x034B34E4 LDR X1, [X9]
	0x034B34E8 LDR X9, [X1 + 0x40]
	0x034B34EC CMP X8, X9
	0x034B34F0 B.NE 0x34B369C
	0x034B34F4 MOV X0, X20
	0x034B34F8 BL 0x1C16E08
	0x034B34FC CBZ X19, 0x34B3694
	0x034B3500 LDR W8, [X19 + 0x18]
	0x034B3504 CMP W23, W8
	0x034B3508 B.CS 0x34B3698
	0x034B350C LDR W8, [X0]
	0x034B3510 MOV X20, X31
	0x034B3514 FMOV D0, X31
	0x034B3518 MOVZ W9, 0x1
	0x034B351C B 0x34B3630
	0x034B3520 MOV X0, X20
	0x034B3524 MOV X1, X31
	0x034B3528 BL 0x33BE520
	0x034B352C MOV X21, X0
	0x034B3530 LDR X0, [X26]
	0x034B3534 LDR X22, [X29]
	0x034B3538 LDR W8, [X0 + 0xE0]
	0x034B353C CBNZ W8, 0x34B3544
	0x034B3540 BL 0x1C16DFC
	0x034B3544 MOV X0, X22
	0x034B3548 MOV X1, X31
	0x034B354C BL 0x338C698
	0x034B3550 MOV X1, X0
	0x034B3554 MOV X0, X21
	0x034B3558 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF2B000
	007 Move W8, [X21+2901]
	008 Move X20, X1
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xC69000
	015 Move X0, [X0+2176]
	016 Call 0x1C17CF4
	017 Move X0, 0xC69000
	018 Move X0, [X0+2184]
	019 Call 0x1C17CF4
	020 Move X0, 0xC80000
	021 Move X0, [X0+856]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2901], W8
	025 Compare X20, 0
	026 JumpIfEqual {60}
	027 Move X21, 0xC69000
	028 Move X21, [X21+2176]
	029 Move X22, 0xC80000
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Move X22, [X22+856]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move X0, [X22]
	039 Move X21, [X8+8]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X22, X0
	043 Call Object..ctor, X0
	044 Move [X22+16], X20
	045 Compare X21, 0
	046 JumpIfEqual {78}
	047 Move X8, 0xC69000
	048 Move X8, [X8+2184]
	049 Move X0, X21
	050 Move W1, W19
	051 Move X2, X22
	052 Move X3, [X8]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Call Dictionary`2<UInt32Enum, Object>.set_Item, X0, X1, X2
	059 Return 
	060 Move X0, 0xC41000
	061 Move X0, [X0+2000]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X19, X0
	065 Move X0, 0xC69000
	066 Move X0, [X0+2192]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Move X2, X31
	071 Call Exception..ctor, X0, X1
	072 Move X0, 0xC80000
	073 Move X0, [X0+864]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Call 0x1C17DEC
	078 Call 0x1C17F20

Method: System.Void AddRequest(Oculus.Platform.Request request)

Disassembly:
	0x034B3584 CMP W23, W8
	0x034B3588 B.CS 0x34B36B8
	0x034B358C MOV W9, W31
	0x034B3590 MOV W8, W31
	0x034B3594 FMOV D0, X31
	0x034B3598 B 0x34B3630
	0x034B359C MOV X0, X20
	0x034B35A0 MOV X1, X31
	0x034B35A4 BL 0x33BE520
	0x034B35A8 MOV X21, X0
	0x034B35AC LDR X0, [X26]
	0x034B35B0 ADRP X9, 0xC68000
	0x034B35B4 LDR W8, [X0 + 0xE0]
	0x034B35B8 LDR X9, [X9 + 0xA78]
	0x034B35BC LDR X22, [X9]
	0x034B35C0 CBNZ W8, 0x34B35C8
	0x034B35C4 BL 0x1C16DFC
	0x034B35C8 MOV X0, X22
	0x034B35CC MOV X1, X31
	0x034B35D0 BL 0x338C698
	0x034B35D4 MOV X1, X0
	0x034B35D8 MOV X0, X21
	0x034B35DC MOV X2, X31
	0x034B35E0 BL 0x3395194
	0x034B35E4 TBZ X0, 0x0, 0x34B36C4
	0x034B35E8 ADRP X9, 0xC43000
	0x034B35EC LDR X8, [X20]
	0x034B35F0 LDR X9, [X9 + 0x978]
	0x034B35F4 LDR X8, [X8 + 0x40]
	0x034B35F8 LDR X1, [X9]
	0x034B35FC LDR X9, [X1 + 0x40]
	0x034B3600 CMP X8, X9
	0x034B3604 B.NE 0x34B36BC
	0x034B3608 MOV X0, X20
	0x034B360C BL 0x1C16E08
	0x034B3610 CBZ X19, 0x34B36B4
	0x034B3614 LDR W8, [X19 + 0x18]
	0x034B3618 CMP W23, W8
	0x034B361C B.CS 0x34B36A4
	0x034B3620 LDR V0, [X0]
	0x034B3624 MOV X20, X31
	0x034B3628 MOV W8, W31
	0x034B362C MOVZ W9, 0x2
	0x034B3630 SMADDL X10, X23, X28, X19
	0x034B3634 STR X27, [X10 + 0x20]
	0x034B3638 STP W9, W31, [X10 + 0x28]
	0x034B363C STR X20, [X10 + 0x30]
	0x034B3640 STP W8, W31, [X10 + 0x38]
	0x034B3644 STR D0, [X10 + 0x40]
	0x034B3648 ADD W23, W23, 0x1
	0x034B364C B 0x34B3474
	0x034B3650 MOV X19, X31
	0x034B3654 B 0x34B366C
	0x034B3658 ADRP X8, 0xC45000
	0x034B365C LDR X8, [X8 + 0x708]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF2B000
	005 Move W8, [X20+2902]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xC69000
	012 Move X0, [X0+2176]
	013 Call 0x1C17CF4
	014 Move X0, 0xC41000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0xC80000
	018 Move X0, [X0+872]
	019 Call 0x1C17CF4
	020 Move X0, 0xC80000
	021 Move X0, [X0+880]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2902], W8
	025 Compare X19, 0
	026 JumpIfEqual {68}
	027 Move X8, [X19+24]
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 Move X20, 0xC69000
	031 Move X20, [X20+2176]
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X0, [X8]
	040 Compare X0, 0
	041 JumpIfEqual {68}
	042 Move X8, 0xC80000
	043 Move X8, [X8+872]
	044 Move X1, [X19+24]
	045 Move X2, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X3, [X8]
	049 Move X30, [X31+32]
	050 Call Dictionary`2<UInt64, Object>.set_Item, X0, X1, X2
	051 Return 
	052 Move X8, 0xC41000
	053 Move X8, [X8+2600]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X8, 0xC80000
	060 Move X8, [X8+880]
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X1, X31
	064 Move X0, [X8]
	065 Move X30, [X31+32]
	066 Call Debug.LogError, X0
	067 Return 
	068 Call 0x1C17F20

Method: System.Void RunCallbacks()

Disassembly:
	0x034B3660 ADD X0, X31, 0x30
	0x034B3664 LDR X1, [X8]
	0x034B3668 BL 0x2C0A83C
	0x034B366C MOV X0, X19
	0x034B3670 LDP X20, X19, [X31 + 0xB0]
	0x034B3674 LDP X22, X21, [X31 + 0xA0]
	0x034B3678 LDP X24, X23, [X31 + 0x90]
	0x034B367C LDP X26, X25, [X31 + 0x80]
	0x034B3680 LDP X28, X27, [X31 + 0x70]
	0x034B3684 LDP X29, X30, [X31 + 0x60]
	0x034B3688 ADD X31, X31, 0xC0
	0x034B368C RET
	0x034B3690 BL 0x1C16F20
	0x034B3694 BL 0x1C16F20
	0x034B3698 BL 0x1C16F28
	0x034B369C MOV X0, X20
	0x034B36A0 BL 0x1C171E0
	0x034B36A4 BL 0x1C16F28
	0x034B36A8 MOV X0, X20
	0x034B36AC BL 0x1C171E0
	0x034B36B0 BL 0x1C16F20
	0x034B36B4 BL 0x1C16F20
	0x034B36B8 BL 0x1C16F28
	0x034B36BC MOV X0, X20
	0x034B36C0 BL 0x1C171E0
	0x034B36C4 ADRP X0, 0xC40000
	0x034B36C8 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xF2B000
	005 Move W8, [X19+2903]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {15}
	010 Move X0, 0xC69000
	011 Move X0, [X0+2176]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X19+2903], W8
	015 Call Message.PopMessage
	016 Compare X0, 0
	017 JumpIfEqual {32}
	018 Move X20, 0xC69000
	019 Move X20, [X20+2176]
	020 Move X19, X0
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Call Callback.HandleMessage, X0
	028 Call Message.PopMessage
	029 Move X19, X0
	030 Compare X0, 0
	031 JumpIfNotEqual {21}
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 

Method: System.Void RunLimitedCallbacks(System.UInt32 limit)

Disassembly:
	0x034B39E8 STP X20, X19, [X31 + 0x40]
	0x034B39EC ADRP X20, 0xF2B000
	0x034B39F0 LDR X8, [X20 + 0x938]
	0x034B39F4 MOV X19, X0
	0x034B39F8 CBNZ X8, 0x34B3A44
	0x034B39FC ADRP X12, 0xFFFFFFFFFD63A000
	0x034B3A00 LDR V0, [X12 + 0x5B8]
	0x034B3A04 ADRP X8, 0xFFFFFFFFFD660000
	0x034B3A08 ADRP X10, 0xFFFFFFFFFD65D000
	0x034B3A0C ADD X8, X8, 0xDD2
	0x034B3A10 MOVZ W9, 0x11
	0x034B3A14 ADD X10, X10, 0x4AF
	0x034B3A18 MOVZ W11, 0x18
	0x034B3A1C MOVZ W13, 0x8
	0x034B3A20 ADD X0, X31, 0x0
	0x034B3A24 STP X8, X9, [X31]
	0x034B3A28 STP X10, X11, [X31 + 0x10]
	0x034B3A2C STR W13, [X31 + 0x28]
	0x034B3A30 STR D0, [X31 + 0x20]
	0x034B3A34 STRB W31, [X31 + 0x2C]
	0x034B3A38 BL 0x1C1729C
	0x034B3A3C MOV X8, X0
	0x034B3A40 STR X0, [X20 + 0x938]
	0x034B3A44 MOV X0, X19
	0x034B3A48 BLR X8
	0x034B3A4C LDP X20, X19, [X31 + 0x40]
	0x034B3A50 LDR X30, [X31 + 0x30]
	0x034B3A54 ADD X31, X31, 0x50
	0x034B3A58 RET
	0x034B3A5C STR X30, [X31 - 0x30]!
	0x034B3A60 STP X22, X21, [X31 + 0x10]
	0x034B3A64 STP X20, X19, [X31 + 0x20]
	0x034B3A68 ADRP X21, 0xF2B000
	0x034B3A6C ADRP X22, 0xC7F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF2B000
	007 Move W8, [X20+2904]
	008 Move W19, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xC69000
	014 Move X0, [X0+2176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2904], W8
	018 Compare W19, 0
	019 JumpIfEqual {38}
	020 Move X20, 0xC69000
	021 Move X20, [X20+2176]
	022 Move W21, W19
	023 Move W22, 1
	024 Call Message.PopMessage
	025 Compare X0, 0
	026 JumpIfEqual {38}
	027 Move X19, X0
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Call Callback.HandleMessage, X0
	035 Move X8, W22
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add W22, W22, 1
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 

Method: System.Void OnApplicationQuit()

Disassembly:
	0x034B3A70 LDRB W8, [X21 + 0x928]
	0x034B3A74 LDR X22, [X22 + 0x328]
	0x034B3A78 MOV W19, W1
	0x034B3A7C MOV X20, X0
	0x034B3A80 TBNZ X8, 0x0, 0x34B3A98
	0x034B3A84 ADRP X0, 0xC7F000
	0x034B3A88 LDR X0, [X0 + 0x328]
	0x034B3A8C BL 0x1C16CF4
	0x034B3A90 MOVZ W8, 0x1
	0x034B3A94 STRB W8, [X21 + 0x928]
	0x034B3A98 LDR X0, [X22]
	0x034B3A9C LDR W8, [X0 + 0xE0]
	0x034B3AA0 CBNZ W8, 0x34B3AA8
	0x034B3AA4 BL 0x1C16DFC
	0x034B3AA8 MOV X0, X20
	0x034B3AAC MOV W1, W19
	0x034B3AB0 BL 0x34C27A4
	0x034B3AB4 LDP X20, X19, [X31 + 0x20]
	0x034B3AB8 LDP X22, X21, [X31 + 0x10]
	0x034B3ABC LDR X30, [X31], #0x30
	0x034B3AC0 B 0x34B3B78
	0x034B3AC4 STR X30, [X31 - 0x30]!
	0x034B3AC8 STP X22, X21, [X31 + 0x10]
	0x034B3ACC STP X20, X19, [X31 + 0x20]
	0x034B3AD0 ADRP X22, 0xF2B000
	0x034B3AD4 ADRP X21, 0xC7F000
	0x034B3AD8 LDRB W8, [X22 + 0x940]
	0x034B3ADC LDR X21, [X21 + 0x328]
	0x034B3AE0 MOV X20, X1
	0x034B3AE4 MOV X19, X0
	0x034B3AE8 TBNZ X8, 0x0, 0x34B3B0C
	0x034B3AEC ADRP X0, 0xC7F000
	0x034B3AF0 LDR X0, [X0 + 0x328]
	0x034B3AF4 BL 0x1C16CF4
	0x034B3AF8 ADRP X0, 0xC68000
	0x034B3AFC LDR X0, [X0 + 0x850]
	0x034B3B00 BL 0x1C16CF4
	0x034B3B04 MOVZ W8, 0x1
	0x034B3B08 STRB W8, [X22 + 0x940]
	0x034B3B0C LDR X0, [X21]
	0x034B3B10 ADRP X21, 0xC68000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF2B000
	005 Move X19, 0xC69000
	006 Move W8, [X20+2905]
	007 Move X19, [X19+2176]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xC69000
	013 Move X0, [X0+2176]
	014 Call 0x1C17CF4
	015 Move X0, 0xC80000
	016 Move X0, [X0+912]
	017 Call 0x1C17CF4
	018 Move X0, 0xC80000
	019 Move X0, [X0+920]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2905], W8
	023 Move X0, [X19]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X19]
	029 Move X8, [X0+184]
	030 Move X0, [X8]
	031 Compare X0, 0
	032 JumpIfEqual {50}
	033 Move X8, 0xC80000
	034 Move X8, [X8+920]
	035 Move X1, [X8]
	036 Call Dictionary`2<UInt64, Object>.Clear, X0
	037 Move X8, [X19]
	038 Move X8, [X8+184]
	039 Move X0, [X8+8]
	040 Compare X0, 0
	041 JumpIfEqual {50}
	042 Move X8, 0xC80000
	043 Move X8, [X8+912]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X1, [X8]
	047 Move X30, [X31+32]
	048 Call Dictionary`2<UInt32Enum, Object>.Clear, X0
	049 Return 
	050 Call 0x1C17F20

Method: System.Void FlushJoinIntentNotificationQueue()

Disassembly:
	0x034B3B14 LDR W8, [X0 + 0xE0]
	0x034B3B18 LDR X21, [X21 + 0x850]
	0x034B3B1C CBNZ W8, 0x34B3B24
	0x034B3B20 BL 0x1C16DFC
	0x034B3B24 MOV X0, X20
	0x034B3B28 BL 0x34B404C
	0x034B3B2C MOV X20, X0
	0x034B3B30 MOV X0, X19
	0x034B3B34 MOV X1, X20
	0x034B3B38 BL 0x34C2828
	0x034B3B3C BL 0x34B3B78
	0x034B3B40 LDR X8, [X21]
	0x034B3B44 MOV X19, X0
	0x034B3B48 LDR W9, [X8 + 0xE0]
	0x034B3B4C CBNZ W9, 0x34B3B58
	0x034B3B50 MOV X0, X8
	0x034B3B54 BL 0x1C16DFC
	0x034B3B58 MOV X0, X20
	0x034B3B5C MOV X1, X31
	0x034B3B60 BL 0x32C1060
	0x034B3B64 MOV X0, X19
	0x034B3B68 LDP X20, X19, [X31 + 0x20]
	0x034B3B6C LDP X22, X21, [X31 + 0x10]
	0x034B3B70 LDR X30, [X31], #0x30
	0x034B3B74 RET
	0x034B3B78 STR X30, [X31 - 0x30]!
	0x034B3B7C STP X22, X21, [X31 + 0x10]
	0x034B3B80 STP X20, X19, [X31 + 0x20]
	0x034B3B84 ADRP X20, 0xF2A000
	0x034B3B88 LDRB W8, [X20 + 0xB6F]
	0x034B3B8C MOV X19, X0
	0x034B3B90 TBNZ X8, 0x0, 0x34B3BC0
	0x034B3B94 ADRP X0, 0xC40000
	0x034B3B98 LDR X0, [X0 + 0x618]
	0x034B3B9C BL 0x1C16CF4
	0x034B3BA0 ADRP X0, 0xC7F000
	0x034B3BA4 LDR X0, [X0 + 0x328]
	0x034B3BA8 BL 0x1C16CF4
	0x034B3BAC ADRP X0, 0xC68000
	0x034B3BB0 LDR X0, [X0 + 0x850]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF2B000
	005 Move X19, 0xC69000
	006 Move W8, [X20+2906]
	007 Move X19, [X19+2176]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xC69000
	013 Move X0, [X0+2176]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2906], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X9, [X0+184]
	024 Move W10, 1
	025 Move X8, [X9+24]
	026 Move [X9+16], W10
	027 Compare X8, 0
	028 JumpIfEqual {39}
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {36}
	032 Call 0x1C17DFC
	033 Move X8, [X19]
	034 Move X8, [X8+184]
	035 Move X8, [X8+24]
	036 Move X0, X8
	037 Call Callback.HandleMessage, X0
	038 Move X0, [X19]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move [X8+24], X31
	048 Move X30, [X31+32]
	049 Return 

Method: System.Void HandleMessage(Oculus.Platform.Message msg)

Disassembly:
	0x034B37A0 LDR X8, [X8 + 0x708]
	0x034B37A4 LDR X1, [X8]
	0x034B37A8 ADD X0, X31, 0x30
	0x034B37AC BL 0x2C0A83C
	0x034B37B0 CBNZ X20, 0x34B37BC
	0x034B37B4 MOV X0, X19
	0x034B37B8 BL 0x1D2C690
	0x034B37BC MOV X0, X20
	0x034B37C0 BL 0x1C16F18
	0x034B37C4 BL 0x1990590
	0x034B37C8 STR X1, [X0]
	0x034B37CC STR W31, [X0 + 0x8]
	0x034B37D0 STR X2, [X0 + 0x10]
	0x034B37D4 STR W31, [X0 + 0x18]
	0x034B37D8 STR X31, [X0 + 0x20]
	0x034B37DC RET
	0x034B37E0 MOVZ W8, 0x2
	0x034B37E4 STR X1, [X0]
	0x034B37E8 STR D0, [X0 + 0x20]
	0x034B37EC STR X31, [X0 + 0x10]
	0x034B37F0 STR W8, [X0 + 0x8]
	0x034B37F4 STR W31, [X0 + 0x18]
	0x034B37F8 RET
	0x034B37FC STP X30, X21, [X31 - 0x20]!
	0x034B3800 STP X20, X19, [X31 + 0x10]
	0x034B3804 ADRP X21, 0xF2A000
	0x034B3808 LDRB W8, [X21 + 0xB6D]
	0x034B380C MOV X19, X1
	0x034B3810 MOV X20, X0
	0x034B3814 TBNZ X8, 0x0, 0x34B3844
	0x034B3818 ADRP X0, 0xC40000
	0x034B381C LDR X0, [X0 + 0x618]
	0x034B3820 BL 0x1C16CF4
	0x034B3824 ADRP X0, 0xC7F000
	0x034B3828 LDR X0, [X0 + 0x430]
	0x034B382C BL 0x1C16CF4
	0x034B3830 ADRP X0, 0xC68000
	0x034B3834 LDR X0, [X0 + 0x850]
	0x034B3838 BL 0x1C16CF4
	0x034B383C MOVZ W8, 0x1
	0x034B3840 STRB W8, [X21 + 0xB6D]
	0x034B3844 TBNZ X19, 0x0, 0x34B38A4
	0x034B3848 ADRP X8, 0xC40000
	0x034B384C LDR X8, [X8 + 0x618]
	0x034B3850 ADRP X21, 0xC68000
	0x034B3854 MOV W1, W19
	0x034B3858 LDR X0, [X8]
	0x034B385C LDR X21, [X21 + 0x850]
	0x034B3860 BL 0x1C16D6C
	0x034B3864 LDR X8, [X21]
	0x034B3868 MOV X21, X0
	0x034B386C LDR W9, [X8 + 0xE0]
	0x034B3870 CBNZ W9, 0x34B387C
	0x034B3874 MOV X0, X8
	0x034B3878 BL 0x1C16DFC
	0x034B387C MOV X0, X20
	0x034B3880 MOV X1, X21
	0x034B3884 MOV W2, W31
	0x034B3888 MOV W3, W19
	0x034B388C MOV X4, X31
	0x034B3890 BL 0x32C0C8C
	0x034B3894 LDP X20, X19, [X31 + 0x10]
	0x034B3898 MOV X0, X21
	0x034B389C LDP X30, X21, [X31], #0x20
	0x034B38A0 RET
	0x034B38A4 BL 0x1C16F30
	0x034B38A8 ADRP X8, 0xC7F000
	0x034B38AC LDR X8, [X8 + 0x430]
	0x034B38B0 LDR X1, [X8]
	0x034B38B4 BL 0x1C16DEC
	0x034B38B8 STP X30, X25, [X31 - 0x40]!
	0x034B38BC STP X24, X23, [X31 + 0x10]
	0x034B38C0 STP X22, X21, [X31 + 0x20]
	0x034B38C4 STP X20, X19, [X31 + 0x30]
	0x034B38C8 ADRP X21, 0xF2A000
	0x034B38CC ADRP X22, 0xC41000
	0x034B38D0 ADRP X20, 0xC41000
	0x034B38D4 ADRP X24, 0xC7F000
	0x034B38D8 LDRB W8, [X21 + 0xB6E]
	0x034B38DC LDR X22, [X22 + 0x6D0]
	0x034B38E0 LDR X20, [X20 + 0x6C0]
	0x034B38E4 LDR X24, [X24 + 0x328]
	0x034B38E8 MOV X19, X0
	0x034B38EC TBNZ X8, 0x0, 0x34B3928
	0x034B38F0 ADRP X0, 0xC7F000
	0x034B38F4 LDR X0, [X0 + 0x328]
	0x034B38F8 BL 0x1C16CF4
	0x034B38FC ADRP X0, 0xC41000
	0x034B3900 LDR X0, [X0 + 0x6C0]
	0x034B3904 BL 0x1C16CF4
	0x034B3908 ADRP X0, 0xC41000
	0x034B390C LDR X0, [X0 + 0x6C8]
	0x034B3910 BL 0x1C16CF4
	0x034B3914 ADRP X0, 0xC41000
	0x034B3918 LDR X0, [X0 + 0x6D0]
	0x034B391C BL 0x1C16CF4
	0x034B3920 MOVZ W8, 0x1
	0x034B3924 STRB W8, [X21 + 0xB6E]
	0x034B3928 LDR X0, [X22]
	0x034B392C BL 0x1C16F10
	0x034B3930 LDR X1, [X20]
	0x034B3934 MOV X20, X0
	0x034B3938 BL 0x2AA4804
	0x034B393C LDR X0, [X24]
	0x034B3940 LDR W8, [X0 + 0xE0]
	0x034B3944 CBNZ W8, 0x34B394C
	0x034B3948 BL 0x1C16DFC
	0x034B394C MOV X0, X19
	0x034B3950 BL 0x34B39E0
	0x034B3954 MOV X1, X31
	0x034B3958 BL 0x33D53AC
	0x034B395C CMP W0, 0x1
	0x034B3960 B.LT 0x34B39C4
	0x034B3964 ADRP X25, 0xC41000
	0x034B3968 LDR X25, [X25 + 0x6C8]
	0x034B396C MOV W21, W0
	0x034B3970 MOV W22, W31
	0x034B3974 LDR X0, [X24]
	0x034B3978 LDR W8, [X0 + 0xE0]
	0x034B397C CBNZ W8, 0x34B3984
	0x034B3980 BL 0x1C16DFC
	0x034B3984 MOV X0, X19
	0x034B3988 MOV W1, W22
	0x034B398C BL 0x34B3A5C
	0x034B3990 MOV X23, X0
	0x034B3994 MOV X0, X19
	0x034B3998 MOV X1, X23
	0x034B399C BL 0x34B3AC4
	0x034B39A0 CBZ X20, 0x34B39DC
	0x034B39A4 LDR X3, [X25]
	0x034B39A8 MOV X2, X0
	0x034B39AC MOV X0, X20
	0x034B39B0 MOV X1, X23
	0x034B39B4 BL 0x2AA5084
	0x034B39B8 ADD W22, W22, 0x1
	0x034B39BC CMP W21, W22
	0x034B39C0 B.NE 0x34B3974
	0x034B39C4 MOV X0, X20
	0x034B39C8 LDP X20, X19, [X31 + 0x30]
	0x034B39CC LDP X22, X21, [X31 + 0x20]
	0x034B39D0 LDP X24, X23, [X31 + 0x10]
	0x034B39D4 LDP X30, X25, [X31], #0x40
	0x034B39D8 RET
	0x034B39DC BL 0x1C16F20
	0x034B39E0 SUB X31, X31, 0x50
	0x034B39E4 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xF2B000
	008 Move W8, [X20+2907]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xC69000
	015 Move X0, [X0+2176]
	016 Call 0x1C17CF4
	017 Move X0, 0xC80000
	018 Move X0, [X0+888]
	019 Call 0x1C17CF4
	020 Move X0, 0xC80000
	021 Move X0, [X0+896]
	022 Call 0x1C17CF4
	023 Move X0, 0xC80000
	024 Move X0, [X0+904]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2907], W8
	028 Move [X31+24], X31
	029 Move [X31+8], X31
	030 Compare X19, 0
	031 JumpIfEqual {141}
	032 Move X22, 0xC69000
	033 Move X8, [X19+24]
	034 Move X22, [X22+2176]
	035 Compare X8, 0
	036 JumpIfEqual {85}
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X22]
	043 Move X8, [X0+184]
	044 Move X0, [X8]
	045 Compare X0, 0
	046 JumpIfEqual {141}
	047 Move X8, 0xC80000
	048 Move X8, [X8+904]
	049 Move X1, [X19+24]
	050 Add X2, X31, 24
	051 Move X3, [X8]
	052 Call Dictionary`2<UInt64, Object>.TryGetValue, X0, X1, X2
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {85}
	057 Move X0, [X31+24]
	058 Compare X0, 0
	059 JumpIfEqual {142}
	060 Move X8, [X0]
	061 Move X9, [X8+376]
	062 Move X2, [X8+384]
	063 Move X1, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X20, X31
	066 Move X0, [X22]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X22]
	072 Move X8, [X0+184]
	073 Move X0, [X8]
	074 Compare X0, 0
	075 JumpIfEqual {141}
	076 Move X8, 0xC80000
	077 Move X1, [X19+24]
	078 Move X8, [X8+888]
	079 Move X2, [X8]
	080 Call Dictionary`2<UInt64, Object>.Remove, X0, X1
	081 Compare X20, 0
	082 JumpIfEqual {134}
	083 Move X0, X20
	084 Call 0x1C17F18
	085 Move X0, [X22]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X22]
	091 Move X8, [X0+184]
	092 Move X0, [X8+8]
	093 Compare X0, 0
	094 JumpIfEqual {141}
	095 Move X8, 0xC80000
	096 Move X8, [X8+896]
	097 Move W1, [X19+16]
	098 Add X2, X31, 8
	099 Move X3, [X8]
	100 Call Dictionary`2<UInt32Enum, Object>.TryGetValue, X0, X1, X2
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {113}
	105 Move X0, [X31+8]
	106 Compare X0, 0
	107 JumpIfEqual {141}
	108 Move X8, [X0]
	109 Move X1, X19
	110 Move X9, [X8+376]
	111 Move X2, [X8+384]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X0, [X22]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X22]
	119 Move X8, [X0+184]
	120 Move W9, [X8+16]
	121 Compare W9, 0
	122 JumpIfNotEqual {134}
	123 Move W9, [X19+16]
	124 Move W10, 0x89F6
	125 NotImplemented "Instruction MOVK not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W9, [X0+224]
	128 Compare W9, 0
	129 JumpIfNotEqual {133}
	130 Call 0x1C17DFC
	131 Move X8, [X22]
	132 Move X8, [X8+184]
	133 Move [X8+24], X19
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X30, [X31+16]
	139 Add X31, X31, 64
	140 Return 
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X21, X0
	145 Move X0, X21
	146 Call 0x3EB2AD0
	147 Move X20, [X0]
	148 Call 0x3EB2AE0
	149 Move X20, X31
	150 Move X21, X0
	151 Move X0, [X22]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {157}
	155 Call 0x1C17DFC
	156 Move X0, [X22]
	157 Move X8, [X0+184]
	158 Move X0, [X8]
	159 Compare X0, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17F20
	162 Move X8, 0xC80000
	163 Move X1, [X19+24]
	164 Move X8, [X8+888]
	165 Move X2, [X8]
	166 Call Dictionary`2<UInt64, Object>.Remove, X0, X1
	167 Compare X20, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X21
	170 Call 0x1D2D690
	171 Move X0, X20
	172 Call 0x1C17F18
	173 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x034B3BB4 BL 0x1C16CF4
	0x034B3BB8 MOVZ W8, 0x1
	0x034B3BBC STRB W8, [X20 + 0xB6F]
	0x034B3BC0 MOV X0, X19
	0x034B3BC4 MOV X1, X31
	0x034B3BC8 MOV X2, X31
	0x034B3BCC BL 0x33BE5B0
	0x034B3BD0 TBZ X0, 0x0, 0x34B3BE8
	0x034B3BD4 LDP X20, X19, [X31 + 0x20]
	0x034B3BD8 LDP X22, X21, [X31 + 0x10]
	0x034B3BDC MOV X0, X31
	0x034B3BE0 LDR X30, [X31], #0x30
	0x034B3BE4 RET
	0x034B3BE8 ADRP X22, 0xC7F000
	0x034B3BEC LDR X22, [X22 + 0x328]
	0x034B3BF0 LDR X0, [X22]
	0x034B3BF4 LDR W8, [X0 + 0xE0]
	0x034B3BF8 CBNZ W8, 0x34B3C00
	0x034B3BFC BL 0x1C16DFC
	0x034B3C00 MOV X0, X19
	0x034B3C04 BL 0x34B3C90
	0x034B3C08 ADRP X8, 0xC40000
	0x034B3C0C LDR X8, [X8 + 0x618]
	0x034B3C10 MOV W21, W0
	0x034B3C14 MOV W1, W21
	0x034B3C18 LDR X8, [X8]
	0x034B3C1C MOV X0, X8
	0x034B3C20 BL 0x1C16D6C
	0x034B3C24 ADRP X8, 0xC68000
	0x034B3C28 LDR X8, [X8 + 0x850]
	0x034B3C2C MOV X20, X0
	0x034B3C30 LDR X8, [X8]
	0x034B3C34 LDR W9, [X8 + 0xE0]
	0x034B3C38 CBNZ W9, 0x34B3C44
	0x034B3C3C MOV X0, X8
	0x034B3C40 BL 0x1C16DFC
	0x034B3C44 MOV X0, X19
	0x034B3C48 MOV X1, X20
	0x034B3C4C MOV W2, W31
	0x034B3C50 MOV W3, W21
	0x034B3C54 MOV X4, X31
	0x034B3C58 BL 0x32C0C8C
	0x034B3C5C LDR X8, [X22]
	0x034B3C60 LDR X8, [X8 + 0xB8]
	0x034B3C64 LDR X0, [X8]
	0x034B3C68 CBZ X0, 0x34B3C8C
	0x034B3C6C LDR X8, [X0]
	0x034B3C70 MOV X1, X20
	0x034B3C74 LDP X20, X19, [X31 + 0x20]
	0x034B3C78 LDP X22, X21, [X31 + 0x10]
	0x034B3C7C LDR X3, [X8 + 0x378]
	0x034B3C80 LDR X2, [X8 + 0x380]
	0x034B3C84 LDR X30, [X31], #0x30
	0x034B3C88 BR X3
	0x034B3C8C BL 0x1C16F20
	0x034B3C90 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xF2B000
	009 Move X24, 0xC80000
	010 Move X19, 0xC80000
	011 Move X20, 0xC69000
	012 Move X22, 0xC80000
	013 Move X21, 0xC80000
	014 Move W8, [X23+2908]
	015 Move X24, [X24+928]
	016 Move X19, [X19+936]
	017 Move X20, [X20+2176]
	018 Move X22, [X22+944]
	019 Move X21, [X21+952]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xC69000
	025 Move X0, [X0+2176]
	026 Call 0x1C17CF4
	027 Move X0, 0xC80000
	028 Move X0, [X0+936]
	029 Call 0x1C17CF4
	030 Move X0, 0xC80000
	031 Move X0, [X0+952]
	032 Call 0x1C17CF4
	033 Move X0, 0xC80000
	034 Move X0, [X0+928]
	035 Call 0x1C17CF4
	036 Move X0, 0xC80000
	037 Move X0, [X0+944]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+2908], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call Dictionary`2<UInt64, Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X19, X0
	053 Call Dictionary`2<UInt32Enum, Object>..ctor, X0
	054 Move X8, [X20]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+8], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move [X8+16], W31
	064 Move X30, [X31+64]
	065 Return 

