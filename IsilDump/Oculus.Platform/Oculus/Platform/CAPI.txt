Type: Oculus.Platform.CAPI

Method: System.IntPtr ArrayOfStructsToIntPtr(System.Array ar)

Disassembly:
	0x034B3EEC LDRB W8, [X20 + 0xB73]
	0x034B3EF0 LDR X21, [X21 + 0x618]
	0x034B3EF4 MOV X19, X1
	0x034B3EF8 MOV W22, W0
	0x034B3EFC TBNZ X8, 0x0, 0x34B3F20
	0x034B3F00 ADRP X0, 0xC40000
	0x034B3F04 LDR X0, [X0 + 0x618]
	0x034B3F08 BL 0x1C16CF4
	0x034B3F0C ADRP X0, 0xC68000
	0x034B3F10 LDR X0, [X0 + 0x850]
	0x034B3F14 BL 0x1C16CF4
	0x034B3F18 MOVZ W8, 0x1
	0x034B3F1C STRB W8, [X20 + 0xB73]
	0x034B3F20 LDR X0, [X21]
	0x034B3F24 MOV W1, W22
	0x034B3F28 BL 0x1C16D6C
	0x034B3F2C CMP W22, 0x1
	0x034B3F30 MOV X20, X0
	0x034B3F34 B.LT 0x34B3F8C
	0x034B3F38 ADRP X23, 0xC68000
	0x034B3F3C LDR X23, [X23 + 0x850]
	0x034B3F40 MOV X21, X31
	0x034B3F44 MOV W22, W22
	0x034B3F48 ADD X24, X20, 0x20
	0x034B3F4C LDR X0, [X23]
	0x034B3F50 LDR W8, [X0 + 0xE0]
	0x034B3F54 CBNZ W8, 0x34B3F5C
	0x034B3F58 BL 0x1C16DFC
	0x034B3F5C MOV X0, X19
	0x034B3F60 MOV W1, W21
	0x034B3F64 MOV X2, X31
	0x034B3F68 BL 0x32C1128
	0x034B3F6C CBZ X20, 0x34B3FA4
	0x034B3F70 LDR W8, [X20 + 0x18]
	0x034B3F74 CMP X21, X8
	0x034B3F78 B.CS 0x34B3FA8
	0x034B3F7C STRB W0, [X24, X21, LSL]
	0x034B3F80 ADD X21, X21, 0x1
	0x034B3F84 CMP X22, X21
	0x034B3F88 B.NE 0x34B3F4C
	0x034B3F8C MOV X0, X20
	0x034B3F90 LDP X20, X19, [X31 + 0x30]
	0x034B3F94 LDP X22, X21, [X31 + 0x20]
	0x034B3F98 LDP X24, X23, [X31 + 0x10]
	0x034B3F9C LDR X30, [X31], #0x40
	0x034B3FA0 RET
	0x034B3FA4 BL 0x1C16F20
	0x034B3FA8 BL 0x1C16F28
	0x034B3FAC STP X30, X23, [X31 - 0x30]!
	0x034B3FB0 STP X22, X21, [X31 + 0x10]
	0x034B3FB4 STP X20, X19, [X31 + 0x20]
	0x034B3FB8 ADRP X22, 0xF2A000
	0x034B3FBC ADRP X23, 0xC40000
	0x034B3FC0 ADRP X21, 0xC68000
	0x034B3FC4 LDRB W8, [X22 + 0xB74]
	0x034B3FC8 LDR X23, [X23 + 0x618]
	0x034B3FCC LDR X21, [X21 + 0x850]
	0x034B3FD0 MOV X20, X1
	0x034B3FD4 MOV W19, W0
	0x034B3FD8 TBNZ X8, 0x0, 0x34B3FFC
	0x034B3FDC ADRP X0, 0xC40000
	0x034B3FE0 LDR X0, [X0 + 0x618]
	0x034B3FE4 BL 0x1C16CF4
	0x034B3FE8 ADRP X0, 0xC68000
	0x034B3FEC LDR X0, [X0 + 0x850]
	0x034B3FF0 BL 0x1C16CF4
	0x034B3FF4 MOVZ W8, 0x1
	0x034B3FF8 STRB W8, [X22 + 0xB74]
	0x034B3FFC LDR X0, [X23]
	0x034B4000 MOV W1, W19
	0x034B4004 BL 0x1C16D6C
	0x034B4008 LDR X8, [X21]
	0x034B400C MOV X21, X0
	0x034B4010 LDR W9, [X8 + 0xE0]
	0x034B4014 CBNZ W9, 0x34B4020
	0x034B4018 MOV X0, X8
	0x034B401C BL 0x1C16DFC
	0x034B4020 MOV X0, X20
	0x034B4024 MOV X1, X21
	0x034B4028 MOV W2, W31
	0x034B402C MOV W3, W19
	0x034B4030 MOV X4, X31
	0x034B4034 BL 0x32C0C8C
	0x034B4038 MOV X0, X21
	0x034B403C LDP X20, X19, [X31 + 0x20]
	0x034B4040 LDP X22, X21, [X31 + 0x10]
	0x034B4044 LDP X30, X23, [X31], #0x30
	0x034B4048 RET
	0x034B404C STR X30, [X31 - 0x30]!
	0x034B4050 STP X22, X21, [X31 + 0x10]
	0x034B4054 STP X20, X19, [X31 + 0x20]
	0x034B4058 ADRP X20, 0xF29000
	0x034B405C LDRB W8, [X20 + 0xB75]
	0x034B4060 MOV X19, X0
	0x034B4064 TBNZ X8, 0x0, 0x34B4094
	0x034B4068 ADRP X0, 0xC3F000
	0x034B406C LDR X0, [X0 + 0x618]
	0x034B4070 BL 0x1C16CF4
	0x034B4074 ADRP X0, 0xC7E000
	0x034B4078 LDR X0, [X0 + 0x328]
	0x034B407C BL 0x1C16CF4
	0x034B4080 ADRP X0, 0xC67000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF2B000
	009 Move W8, [X20+2922]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xC69000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2922], W8
	020 Compare X19, 0
	021 JumpIfEqual {110}
	022 Move X24, 0xC69000
	023 Move X24, [X24+2128]
	024 Move X0, X19
	025 Move X1, X31
	026 Call Array.get_Length, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W21, W31
	029 Move W20, W31
	030 Move X0, X19
	031 Move W1, W21
	032 Move X2, X31
	033 Call Array.GetValue, X0, X1
	034 Move X8, [X24]
	035 Move X22, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X22
	042 Move X1, X31
	043 Call Marshal.SizeOf, X0
	044 Add W20, W0, W20
	045 Move X0, X19
	046 Move X1, X31
	047 Add W21, W21, 1
	048 Call Array.get_Length, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W20, W31
	051 Move X0, [X24]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move W0, W20
	057 Move X1, X31
	058 Call Marshal.AllocHGlobal, X0
	059 Move X20, X0
	060 Move X0, X19
	061 Move X1, X31
	062 Call Array.get_Length, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W21, W31
	065 Move X22, X20
	066 Move X0, X19
	067 Move W1, W21
	068 Move X2, X31
	069 Call Array.GetValue, X0, X1
	070 Move X8, [X24]
	071 Move X23, X0
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move X0, X23
	078 Move X1, X22
	079 Move W2, W31
	080 Move X3, X31
	081 Call Marshal.StructureToPtr, X0, X1, X2
	082 Move X0, X22
	083 Move X1, X31
	084 Call IntPtr.op_Explicit, X0
	085 Move X22, X0
	086 Move X0, X19
	087 Move W1, W21
	088 Move X2, X31
	089 Call Array.GetValue, X0, X1
	090 Move X1, X31
	091 Call Marshal.SizeOf, X0
	092 Add X0, X22, W0
	093 Move X1, X31
	094 Call IntPtr.op_Explicit, X0
	095 Move X22, X0
	096 Move X0, X19
	097 Move X1, X31
	098 Add W21, W21, 1
	099 Call Array.get_Length, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X20
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 Return X0
	110 Call 0x1C17F20

Method: Oculus.Platform.CAPI/ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(System.Collections.Generic.Dictionary`2<Oculus.Platform.InitConfigOptions, System.Boolean> dict)

Disassembly:
	0x034B4084 LDR X0, [X0 + 0x850]
	0x034B4088 BL 0x1C16CF4
	0x034B408C MOVZ W8, 0x1
	0x034B4090 STRB W8, [X20 + 0xB75]
	0x034B4094 CBZ X19, 0x34B4180
	0x034B4098 ADRP X21, 0xC7E000
	0x034B409C LDR X21, [X21 + 0x328]
	0x034B40A0 LDR X0, [X21]
	0x034B40A4 LDR W8, [X0 + 0xE0]
	0x034B40A8 CBNZ W8, 0x34B40B4
	0x034B40AC BL 0x1C16DFC
	0x034B40B0 LDR X0, [X21]
	0x034B40B4 LDR X8, [X0 + 0xB8]
	0x034B40B8 LDR X0, [X8]
	0x034B40BC CBZ X0, 0x34B417C
	0x034B40C0 LDR X8, [X0]
	0x034B40C4 ADRP X20, 0xC3F000
	0x034B40C8 MOV X1, X19
	0x034B40CC LDP X9, X2, [X8 + 0x1F8]
	0x034B40D0 LDR X20, [X20 + 0x618]
	0x034B40D4 BLR X9
	0x034B40D8 LDR X8, [X20]
	0x034B40DC ADD W20, W0, 0x1
	0x034B40E0 MOV W1, W20
	0x034B40E4 MOV X0, X8
	0x034B40E8 BL 0x1C16D6C
	0x034B40EC LDR X8, [X21]
	0x034B40F0 LDR X8, [X8 + 0xB8]
	0x034B40F4 LDR X8, [X8]
	0x034B40F8 CBZ X8, 0x34B417C
	0x034B40FC LDR X9, [X8]
	0x034B4100 LDR W3, [X19 + 0x10]
	0x034B4104 ADRP X22, 0xC67000
	0x034B4108 MOV X21, X0
	0x034B410C LDR X10, [X9 + 0x278]
	0x034B4110 LDR X6, [X9 + 0x280]
	0x034B4114 LDR X22, [X22 + 0x850]
	0x034B4118 MOV X0, X8
	0x034B411C MOV X1, X19
	0x034B4120 MOV W2, W31
	0x034B4124 MOV X4, X21
	0x034B4128 MOV W5, W31
	0x034B412C BLR X10
	0x034B4130 LDR X0, [X22]
	0x034B4134 LDR W8, [X0 + 0xE0]
	0x034B4138 CBNZ W8, 0x34B4140
	0x034B413C BL 0x1C16DFC
	0x034B4140 MOV W0, W20
	0x034B4144 MOV X1, X31
	0x034B4148 BL 0x32C0984
	0x034B414C MOV X19, X0
	0x034B4150 MOV X0, X21
	0x034B4154 MOV W1, W31
	0x034B4158 MOV X2, X19
	0x034B415C MOV W3, W20
	0x034B4160 MOV X4, X31
	0x034B4164 BL 0x32C0B14
	0x034B4168 MOV X0, X19
	0x034B416C LDP X20, X19, [X31 + 0x20]
	0x034B4170 LDP X22, X21, [X31 + 0x10]
	0x034B4174 LDR X30, [X31], #0x30
	0x034B4178 RET
	0x034B417C BL 0x1C16F20
	0x034B4180 ADRP X0, 0xC3F000
	0x034B4184 LDR X0, [X0 + 0x7D0]
	0x034B4188 BL 0x1C16D08
	0x034B418C BL 0x1C16F10
	0x034B4190 MOV X19, X0
	0x034B4194 ADRP X0, 0xC7E000
	0x034B4198 LDR X0, [X0 + 0x438]
	0x034B419C BL 0x1C16D08
	0x034B41A0 MOV X1, X0
	0x034B41A4 MOV X0, X19
	0x034B41A8 MOV X2, X31
	0x034B41AC BL 0x33B2C70
	0x034B41B0 ADRP X0, 0xC7E000
	0x034B41B4 LDR X0, [X0 + 0x440]
	0x034B41B8 BL 0x1C16D08
	0x034B41BC MOV X1, X0
	0x034B41C0 MOV X0, X19
	0x034B41C4 BL 0x1C16DEC
	0x034B41C8 SUB X31, X31, 0x50
	0x034B41CC STR X30, [X31 + 0x30]
	0x034B41D0 STP X20, X19, [X31 + 0x40]
	0x034B41D4 ADRP X20, 0xF29000
	0x034B41D8 LDR X8, [X20 + 0xB80]
	0x034B41DC MOV X19, X0
	0x034B41E0 CBNZ X8, 0x34B422C
	0x034B41E4 ADRP X12, 0xFFFFFFFFFD639000
	0x034B41E8 LDR V0, [X12 + 0x5B8]
	0x034B41EC ADRP X8, 0xFFFFFFFFFD65F000
	0x034B41F0 ADRP X10, 0xFFFFFFFFFD675000
	0x034B41F4 ADD X8, X8, 0xDD2
	0x034B41F8 MOVZ W9, 0x11
	0x034B41FC ADD X10, X10, 0xC63
	0x034B4200 MOVZ W11, 0x14
	0x034B4204 MOVZ W13, 0x8
	0x034B4208 ADD X0, X31, 0x0
	0x034B420C STP X8, X9, [X31]
	0x034B4210 STP X10, X11, [X31 + 0x10]
	0x034B4214 STR W13, [X31 + 0x28]
	0x034B4218 STR D0, [X31 + 0x20]
	0x034B421C STRB W31, [X31 + 0x2C]
	0x034B4220 BL 0x1C1729C
	0x034B4224 MOV X8, X0
	0x034B4228 STR X0, [X20 + 0xB80]
	0x034B422C MOV X0, X19
	0x034B4230 BLR X8
	0x034B4234 LDP X20, X19, [X31 + 0x40]
	0x034B4238 LDR X30, [X31 + 0x30]
	0x034B423C ADD X31, X31, 0x50
	0x034B4240 RET
	0x034B4244 SUB X31, X31, 0x50
	0x034B4248 STP X30, X21, [X31 + 0x30]
	0x034B424C STP X20, X19, [X31 + 0x40]
	0x034B4250 ADRP X21, 0xF29000
	0x034B4254 LDR X8, [X21 + 0xB90]
	0x034B4258 MOV X19, X1
	0x034B425C MOV X20, X0
	0x034B4260 CBNZ X8, 0x34B42A8
	0x034B4264 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4268 LDR V0, [X12 + 0x5B8]
	0x034B426C ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4270 ADRP X10, 0xFFFFFFFFFD658000
	0x034B4274 ADD X8, X8, 0xDD2
	0x034B4278 MOVZ W9, 0x11
	0x034B427C ADD X10, X10, 0x1C8
	0x034B4280 MOVZ W11, 0x1E
	0x034B4284 MOVZ W13, 0x10
	0x034B4288 ADD X0, X31, 0x0
	0x034B428C STP X8, X9, [X31]
	0x034B4290 STP X10, X11, [X31 + 0x10]
	0x034B4294 STR W13, [X31 + 0x28]
	0x034B4298 STR D0, [X31 + 0x20]
	0x034B429C STRB W31, [X31 + 0x2C]
	0x034B42A0 BL 0x1C1729C
	0x034B42A4 STR X0, [X21 + 0xB90]
	0x034B42A8 MOV X0, X20
	0x034B42AC BL 0x1C1727C
	0x034B42B0 LDR X8, [X21 + 0xB90]
	0x034B42B4 MOV X1, X19
	0x034B42B8 MOV X20, X0
	0x034B42BC BLR X8
	0x034B42C0 MOV W19, W0
	0x034B42C4 MOV X0, X20
	0x034B42C8 BL 0x1C17290

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D8
	003 Move [X31+80], X30
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X19, 0xF2A000
	012 Move W8, [X19+2923]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0xC7F000
	019 Move X0, [X0+976]
	020 Call 0x1C17CF4
	021 Move X0, 0xC7F000
	022 Move X0, [X0+984]
	023 Call 0x1C17CF4
	024 Move X0, 0xC7F000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move X0, 0xC7F000
	028 Move X0, [X0+1000]
	029 Call 0x1C17CF4
	030 Move X0, 0xC7F000
	031 Move X0, [X0+1008]
	032 Call 0x1C17CF4
	033 Move X0, 0xC7F000
	034 Move X0, [X0+1016]
	035 Call 0x1C17CF4
	036 Move X0, 0xC7F000
	037 Move X0, [X0+1024]
	038 Call 0x1C17CF4
	039 Move X0, 0xC7F000
	040 Move X0, [X0+1032]
	041 Call 0x1C17CF4
	042 Move X0, 0xC7F000
	043 Move X0, [X0+1040]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+2923], W8
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X31+32], V0
	049 Move [X31+40], V0
	050 Compare X20, 0
	051 JumpIfEqual {115}
	052 Move X19, 0xC7F000
	053 Move X19, [X19+984]
	054 Move X0, X20
	055 Move X1, [X19]
	056 Call Dictionary`2<UInt32Enum, Boolean>.get_Count, X0
	057 Compare W0, 0
	058 JumpIfEqual {115}
	059 Move X1, [X19]
	060 Move X0, X20
	061 Call Dictionary`2<UInt32Enum, Boolean>.get_Count, X0
	062 Move X8, 0xC7F000
	063 Move X8, [X8+1040]
	064 Move W1, W0
	065 Move X8, [X8]
	066 Move X0, X8
	067 Call 0x1C17D6C
	068 Move X8, 0xC7F000
	069 Move X8, [X8+976]
	070 Move X19, X0
	071 Move X0, X20
	072 Move X1, [X8]
	073 Add X8, X31, 32
	074 Call Dictionary`2<UInt32Enum, Boolean>.GetEnumerator, X0
	075 Move X21, 0xC7F000
	076 Move X8, -43802624
	077 Move X22, 0xC7F000
	078 Move X21, [X21+1000]
	079 Move V8, [X8+3776]
	080 Move X22, [X22+1016]
	081 Move W20, W31
	082 Move TEMP, 0
	083 Not TEMP
	084 Move X23, TEMP
	085 Move W24, 40
	086 Move X1, [X21]
	087 Add X0, X31, 32
	088 Call Enumerator<UInt32Enum, Boolean>.MoveNext, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {116}
	093 Move X8, [X22]
	094 Move X25, [X31+48]
	095 Move [X31+8], X8
	096 Move [X31+16], X23
	097 Move [X31+24], W25
	098 Add X0, X31, 8
	099 Move X1, X31
	100 Call Enum.ToString, X0
	101 And X31, X25, 0xFFFFFFFFFF
	102 NotImplemented "Instruction CSET not yet implemented."
	103 Compare X19, 0
	104 JumpIfEqual {133}
	105 Move W9, [X19+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction SMADDL not yet implemented."
	108 Add W20, W20, 1
	109 Move [X9+32], X0
	110 Move [X9+40], D8
	111 Move [X9+48], X31
	112 Move [X9+56], W8
	113 Move [X9+60], W31
	114 Move [X9+64], X31
	115 Move X19, X31
	116 Move X8, 0xC7F000
	117 Move X8, [X8+992]
	118 Add X0, X31, 32
	119 Move X1, [X8]
	120 Call Enumerator<UInt32Enum, Boolean>.Dispose, X0
	121 Move X0, X19
	122 Move X20, [X31+128]
	123 Move X19, [X31+136]
	124 Move X22, [X31+112]
	125 Move X21, [X31+120]
	126 Move X24, [X31+96]
	127 Move X23, [X31+104]
	128 Move X30, [X31+80]
	129 Move X25, [X31+88]
	130 Move V8, [X31+64]
	131 Add X31, X31, 144
	132 Return X0
	133 Call 0x1C17F20
	134 Call 0x1C17F28
	135 Move X20, X0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X20
	138 Call 0x3EB2AD0
	139 Move X21, [X0]
	140 Call 0x3EB2AE0
	141 Move X8, 0xC7F000
	142 Move X8, [X8+992]
	143 Add X0, X31, 32
	144 Move X1, [X8]
	145 Call Enumerator<UInt32Enum, Boolean>.Dispose, X0
	146 Compare X21, 0
	147 JumpIfEqual {121}
	148 Move X0, X21
	149 Call 0x1C17F18
	150 Move X21, X31
	151 Move X20, X0
	152 Move X8, 0xC7F000
	153 Move X8, [X8+992]
	154 Move X1, [X8]
	155 Add X0, X31, 32
	156 Call Enumerator<UInt32Enum, Boolean>.Dispose, X0
	157 Compare X21, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X20
	160 Call 0x1D2D690
	161 Move X0, X21
	162 Call 0x1C17F18
	163 Call 0x1991590

Method: Oculus.Platform.CAPI/ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(System.Collections.Generic.Dictionary`2<System.String, System.Object> dict)

Disassembly:
	0x034B42E8 STR X30, [X31 + 0x60]
	0x034B42EC STP X20, X19, [X31 + 0x70]
	0x034B42F0 ADRP X20, 0xF29000
	0x034B42F4 LDR X8, [X20 + 0xB98]
	0x034B42F8 MOV X19, X0
	0x034B42FC CBNZ X8, 0x34B4344
	0x034B4300 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4304 LDR V0, [X12 + 0x5B8]
	0x034B4308 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B430C ADRP X10, 0xFFFFFFFFFD64A000
	0x034B4310 ADD X8, X8, 0xDD2
	0x034B4314 MOVZ W9, 0x11
	0x034B4318 ADD X10, X10, 0x339
	0x034B431C MOVZ W11, 0x27
	0x034B4320 MOVZ W13, 0x8
	0x034B4324 ADD X0, X31, 0x30
	0x034B4328 STP X8, X9, [X31 + 0x30]
	0x034B432C STP X10, X11, [X31 + 0x40]
	0x034B4330 STR W13, [X31 + 0x58]
	0x034B4334 STR D0, [X31 + 0x50]
	0x034B4338 STRB W31, [X31 + 0x5C]
	0x034B433C BL 0x1C1729C
	0x034B4340 STR X0, [X20 + 0xB98]
	0x034B4344 MOVI V0.2D, 0x0
	0x034B4348 ADD X1, X31, 0x30
	0x034B434C MOV X0, X19
	0x034B4350 STR X31, [X31 + 0x50]
	0x034B4354 STP V0, V0, [X31 + 0x30]
	0x034B4358 BL 0x1BBEAD0
	0x034B435C LDR X8, [X20 + 0xB98]
	0x034B4360 ADD X0, X31, 0x30
	0x034B4364 BLR X8
	0x034B4368 MOV X20, X0
	0x034B436C MOVI V0.2D, 0x0
	0x034B4370 ADD X0, X31, 0x30
	0x034B4374 ADD X1, X31, 0x0
	0x034B4378 STR X31, [X31 + 0x20]
	0x034B437C STP V0, V0, [X31]
	0x034B4380 BL 0x1BBEB20
	0x034B4384 LDR X0, [X31 + 0x38]
	0x034B4388 BL 0x1C17290
	0x034B438C LDR X0, [X31 + 0x40]
	0x034B4390 STR X31, [X31 + 0x38]
	0x034B4394 BL 0x1C17290
	0x034B4398 LDR X0, [X31 + 0x50]
	0x034B439C STR X31, [X31 + 0x40]
	0x034B43A0 BL 0x1C17290
	0x034B43A4 LDR X8, [X31 + 0x20]
	0x034B43A8 LDP V1, V0, [X31]
	0x034B43AC MOV X0, X20
	0x034B43B0 LDR X30, [X31 + 0x60]
	0x034B43B4 STR X8, [X19 + 0x20]
	0x034B43B8 STP V1, V0, [X19]
	0x034B43BC LDP X20, X19, [X31 + 0x70]
	0x034B43C0 ADD X31, X31, 0x80
	0x034B43C4 RET
	0x034B43C8 SUB X31, X31, 0x50
	0x034B43CC STP X30, X21, [X31 + 0x30]
	0x034B43D0 STP X20, X19, [X31 + 0x40]
	0x034B43D4 ADRP X21, 0xF29000
	0x034B43D8 LDR X8, [X21 + 0xBA0]
	0x034B43DC MOV X20, X1
	0x034B43E0 MOV X19, X0
	0x034B43E4 CBNZ X8, 0x34B442C
	0x034B43E8 ADRP X12, 0xFFFFFFFFFD639000
	0x034B43EC LDR V0, [X12 + 0x5B8]
	0x034B43F0 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B43F4 ADRP X10, 0xFFFFFFFFFD65D000
	0x034B43F8 ADD X8, X8, 0xDD2
	0x034B43FC MOVZ W9, 0x11
	0x034B4400 ADD X10, X10, 0xFC1
	0x034B4404 MOVZ W11, 0x25
	0x034B4408 MOVZ W13, 0x10
	0x034B440C ADD X0, X31, 0x0
	0x034B4410 STP X8, X9, [X31]
	0x034B4414 STP X10, X11, [X31 + 0x10]
	0x034B4418 STR W13, [X31 + 0x28]
	0x034B441C STR D0, [X31 + 0x20]
	0x034B4420 STRB W31, [X31 + 0x2C]
	0x034B4424 BL 0x1C1729C
	0x034B4428 STR X0, [X21 + 0xBA0]
	0x034B442C MOV X0, X20
	0x034B4430 BL 0x1C1727C
	0x034B4434 LDR X8, [X21 + 0xBA0]
	0x034B4438 MOV X20, X0
	0x034B443C MOV X0, X19
	0x034B4440 MOV X1, X20
	0x034B4444 BLR X8
	0x034B4448 MOV X19, X0
	0x034B444C MOV X0, X20
	0x034B4450 BL 0x1C17290
	0x034B4454 MOV X0, X19
	0x034B4458 LDP X20, X19, [X31 + 0x40]
	0x034B445C LDP X30, X21, [X31 + 0x30]
	0x034B4460 ADD X31, X31, 0x50
	0x034B4464 RET
	0x034B4468 SUB X31, X31, 0xA0
	0x034B446C STR D8, [X31 + 0x30]
	0x034B4470 STP X29, X30, [X31 + 0x40]
	0x034B4474 STP X28, X27, [X31 + 0x50]
	0x034B4478 STP X26, X25, [X31 + 0x60]
	0x034B447C STP X24, X23, [X31 + 0x70]
	0x034B4480 STP X22, X21, [X31 + 0x80]
	0x034B4484 STP X20, X19, [X31 + 0x90]
	0x034B4488 ADRP X25, 0xF29000
	0x034B448C LDR X8, [X25 + 0xBA8]
	0x034B4490 MOV X20, X3
	0x034B4494 MOV X19, X2
	0x034B4498 MOV X21, X1
	0x034B449C MOV X22, X0
	0x034B44A0 CBNZ X8, 0x34B44E8
	0x034B44A4 ADRP X12, 0xFFFFFFFFFD639000
	0x034B44A8 LDR V0, [X12 + 0x5B8]
	0x034B44AC ADRP X8, 0xFFFFFFFFFD65F000
	0x034B44B0 ADRP X10, 0xFFFFFFFFFD656000
	0x034B44B4 ADD X8, X8, 0xDD2
	0x034B44B8 MOVZ W9, 0x11
	0x034B44BC ADD X10, X10, 0x6F1
	0x034B44C0 MOVZ W11, 0x2F
	0x034B44C4 MOVZ W13, 0x20
	0x034B44C8 ADD X0, X31, 0x0
	0x034B44CC STP X8, X9, [X31]
	0x034B44D0 STP X10, X11, [X31 + 0x10]
	0x034B44D4 STR W13, [X31 + 0x28]
	0x034B44D8 STR D0, [X31 + 0x20]
	0x034B44DC STRB W31, [X31 + 0x2C]
	0x034B44E0 BL 0x1C1729C
	0x034B44E4 STR X0, [X25 + 0xBA8]
	0x034B44E8 MOV X0, X21
	0x034B44EC BL 0x1C1727C
	0x034B44F0 MOV X23, X0
	0x034B44F4 CBZ X19, 0x34B4578
	0x034B44F8 LDR X24, [X19 + 0x18]
	0x034B44FC ADD X8, X24, X24, 0x2, LSL
	0x034B4500 UBFM X0, X8, 0x3D, 0x3C
	0x034B4504 BL 0x1C16F14
	0x034B4508 CMP W24, 0x1
	0x034B450C MOV X21, X0
	0x034B4510 B.LT 0x34B457C
	0x034B4514 AND X8, X24, 0x0
	0x034B4518 UBFM X8, X8, 0x3E, 0x3D
	0x034B451C ADD X8, X8, W24, UXTW
	0x034B4520 MOV X26, X31
	0x034B4524 UBFM X27, X8, 0x3D, 0x3C
	0x034B4528 ADD X8, X19, X26
	0x034B452C LDR X0, [X8 + 0x20]
	0x034B4530 LDR W28, [X8 + 0x28]
	0x034B4534 LDR X24, [X8 + 0x30]
	0x034B4538 LDR W29, [X8 + 0x38]
	0x034B453C LDR V8, [X8 + 0x40]
	0x034B4540 BL 0x1C1727C
	0x034B4544 ADD X25, X21, X26
	0x034B4548 STR X0, [X25]
	0x034B454C MOV X0, X24
	0x034B4550 STR W28, [X25 + 0x8]
	0x034B4554 BL 0x1C1727C
	0x034B4558 ADD X26, X26, 0x28
	0x034B455C CMP X27, X26
	0x034B4560 STR X0, [X25 + 0x10]
	0x034B4564 STR W29, [X25 + 0x18]
	0x034B4568 STR D8, [X25 + 0x20]
	0x034B456C B.NE 0x34B4528
	0x034B4570 ADRP X25, 0xF29000
	0x034B4574 B 0x34B457C
	0x034B4578 MOV X21, X31
	0x034B457C LDR X8, [X25 + 0xBA8]
	0x034B4580 MOV X0, X22
	0x034B4584 MOV X1, X23
	0x034B4588 MOV X2, X21
	0x034B458C MOV X3, X20
	0x034B4590 BLR X8
	0x034B4594 MOV X20, X0
	0x034B4598 MOV X0, X23
	0x034B459C BL 0x1C17290
	0x034B45A0 CBZ X21, 0x34B45E4
	0x034B45A4 CBZ X19, 0x34B45DC
	0x034B45A8 LDR X8, [X19 + 0x18]
	0x034B45AC CMP W8, 0x1
	0x034B45B0 B.LT 0x34B45DC
	0x034B45B4 AND X19, X8, 0x0
	0x034B45B8 ADD X22, X21, 0x10
	0x034B45BC LDUR X0, [X22 - 0x10]
	0x034B45C0 BL 0x1C17290
	0x034B45C4 LDR X0, [X22]
	0x034B45C8 STUR X31, [X22 - 0x10]
	0x034B45CC BL 0x1C17290
	0x034B45D0 STR X31, [X22], #0x28
	0x034B45D4 SUBS X19, X19, 0x1
	0x034B45D8 B.NE 0x34B45BC
	0x034B45DC MOV X0, X21
	0x034B45E0 BL 0x1C17290
	0x034B45E4 MOV X0, X20
	0x034B45E8 LDP X20, X19, [X31 + 0x90]
	0x034B45EC LDP X22, X21, [X31 + 0x80]
	0x034B45F0 LDP X24, X23, [X31 + 0x70]
	0x034B45F4 LDP X26, X25, [X31 + 0x60]
	0x034B45F8 LDP X28, X27, [X31 + 0x50]
	0x034B45FC LDP X29, X30, [X31 + 0x40]
	0x034B4600 LDR V8, [X31 + 0x30]
	0x034B4604 ADD X31, X31, 0xA0
	0x034B4608 RET
	0x034B460C SUB X31, X31, 0x50
	0x034B4610 STP X30, X21, [X31 + 0x30]
	0x034B4614 STP X20, X19, [X31 + 0x40]
	0x034B4618 ADRP X21, 0xF29000
	0x034B461C LDR X8, [X21 + 0xBB0]
	0x034B4620 MOV X19, X1
	0x034B4624 MOV X20, X0
	0x034B4628 CBNZ X8, 0x34B4670
	0x034B462C ADRP X12, 0xFFFFFFFFFD639000
	0x034B4630 LDR V0, [X12 + 0x5B8]
	0x034B4634 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4638 ADRP X10, 0xFFFFFFFFFD64E000
	0x034B463C ADD X8, X8, 0xDD2
	0x034B4640 MOVZ W9, 0x11
	0x034B4644 ADD X10, X10, 0x1AD
	0x034B4648 MOVZ W11, 0x1B
	0x034B464C MOVZ W13, 0x10
	0x034B4650 ADD X0, X31, 0x0
	0x034B4654 STP X8, X9, [X31]
	0x034B4658 STP X10, X11, [X31 + 0x10]
	0x034B465C STR W13, [X31 + 0x28]
	0x034B4660 STR D0, [X31 + 0x20]
	0x034B4664 STRB W31, [X31 + 0x2C]
	0x034B4668 BL 0x1C1729C
	0x034B466C STR X0, [X21 + 0xBB0]
	0x034B4670 MOV X0, X20
	0x034B4674 BL 0x1C1727C
	0x034B4678 LDR X8, [X21 + 0xBB0]
	0x034B467C MOV X1, X19
	0x034B4680 MOV X20, X0
	0x034B4684 BLR X8
	0x034B4688 MOV W19, W0
	0x034B468C MOV X0, X20
	0x034B4690 BL 0x1C17290
	0x034B4694 CMP W19, 0x0
	0x034B4698 LDP X20, X19, [X31 + 0x40]
	0x034B469C LDP X30, X21, [X31 + 0x30]
	0x034B46A0 CSET W0, NE
	0x034B46A4 ADD X31, X31, 0x50
	0x034B46A8 RET
	0x034B46AC SUB X31, X31, 0x50
	0x034B46B0 STP X30, X21, [X31 + 0x30]
	0x034B46B4 STP X20, X19, [X31 + 0x40]
	0x034B46B8 ADRP X21, 0xF29000
	0x034B46BC LDR X8, [X21 + 0xBB8]
	0x034B46C0 MOV X19, X1
	0x034B46C4 MOV X20, X0
	0x034B46C8 CBNZ X8, 0x34B4710
	0x034B46CC ADRP X12, 0xFFFFFFFFFD639000
	0x034B46D0 LDR V0, [X12 + 0x5B8]
	0x034B46D4 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B46D8 ADRP X10, 0xFFFFFFFFFD66C000
	0x034B46DC ADD X8, X8, 0xDD2
	0x034B46E0 MOVZ W9, 0x11
	0x034B46E4 ADD X10, X10, 0x86
	0x034B46E8 MOVZ W11, 0x27
	0x034B46EC MOVZ W13, 0x10
	0x034B46F0 ADD X0, X31, 0x0
	0x034B46F4 STP X8, X9, [X31]
	0x034B46F8 STP X10, X11, [X31 + 0x10]
	0x034B46FC STR W13, [X31 + 0x28]
	0x034B4700 STR D0, [X31 + 0x20]
	0x034B4704 STRB W31, [X31 + 0x2C]
	0x034B4708 BL 0x1C1729C
	0x034B470C STR X0, [X21 + 0xBB8]
	0x034B4710 MOV X0, X20
	0x034B4714 BL 0x1C1727C
	0x034B4718 LDR X8, [X21 + 0xBB8]
	0x034B471C MOV X1, X19
	0x034B4720 MOV X20, X0
	0x034B4724 BLR X8
	0x034B4728 MOV X19, X0
	0x034B472C MOV X0, X20
	0x034B4730 BL 0x1C17290
	0x034B4734 MOV X0, X19
	0x034B4738 LDP X20, X19, [X31 + 0x40]
	0x034B473C LDP X30, X21, [X31 + 0x30]
	0x034B4740 ADD X31, X31, 0x50
	0x034B4744 RET
	0x034B4748 SUB X31, X31, 0x50
	0x034B474C STR X30, [X31 + 0x30]
	0x034B4750 STP X20, X19, [X31 + 0x40]
	0x034B4754 ADRP X20, 0xF29000
	0x034B4758 LDR X8, [X20 + 0xBC0]
	0x034B475C MOV X19, X0
	0x034B4760 CBNZ X8, 0x34B47A8
	0x034B4764 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4768 LDR V0, [X12 + 0x5B8]
	0x034B476C ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4770 ADRP X10, 0xFFFFFFFFFD670000
	0x034B4774 ADD X8, X8, 0xDD2
	0x034B4778 MOVZ W9, 0x11
	0x034B477C ADD X10, X10, 0x257
	0x034B4780 MOVZ W11, 0x1B
	0x034B4784 MOVZ W13, 0x8
	0x034B4788 ADD X0, X31, 0x0
	0x034B478C STP X8, X9, [X31]
	0x034B4790 STP X10, X11, [X31 + 0x10]
	0x034B4794 STR W13, [X31 + 0x28]
	0x034B4798 STR D0, [X31 + 0x20]
	0x034B479C STRB W31, [X31 + 0x2C]
	0x034B47A0 BL 0x1C1729C
	0x034B47A4 STR X0, [X20 + 0xBC0]
	0x034B47A8 MOV X0, X19
	0x034B47AC BL 0x1C1727C
	0x034B47B0 LDR X8, [X20 + 0xBC0]
	0x034B47B4 MOV X19, X0
	0x034B47B8 BLR X8
	0x034B47BC MOV W20, W0
	0x034B47C0 MOV X0, X19
	0x034B47C4 BL 0x1C17290

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X19, 0xF2A000
	015 Move W8, [X19+2924]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {68}
	021 Move X0, 0xC45000
	022 Move X0, [X0+1792]
	023 Call 0x1C17CF4
	024 Move X0, 0xC7F000
	025 Move X0, [X0+1048]
	026 Call 0x1C17CF4
	027 Move X0, 0xC68000
	028 Move X0, [X0+2680]
	029 Call 0x1C17CF4
	030 Move X0, 0xC43000
	031 Move X0, [X0+2424]
	032 Call 0x1C17CF4
	033 Move X0, 0xC45000
	034 Move X0, [X0+1800]
	035 Call 0x1C17CF4
	036 Move X0, 0xC45000
	037 Move X0, [X0+1808]
	038 Call 0x1C17CF4
	039 Move X0, 0xC45000
	040 Move X0, [X0+1816]
	041 Call 0x1C17CF4
	042 Move X0, 0xC67000
	043 Move X0, [X0+3456]
	044 Call 0x1C17CF4
	045 Move X0, 0xC40000
	046 Move X0, [X0+1880]
	047 Call 0x1C17CF4
	048 Move X0, 0xC45000
	049 Move X0, [X0+1824]
	050 Call 0x1C17CF4
	051 Move X0, 0xC45000
	052 Move X0, [X0+1832]
	053 Call 0x1C17CF4
	054 Move X0, 0xC68000
	055 Move X0, [X0+2912]
	056 Call 0x1C17CF4
	057 Move X0, 0xC42000
	058 Move X0, [X0+632]
	059 Call 0x1C17CF4
	060 Move X0, 0xC40000
	061 Move X0, [X0+1728]
	062 Call 0x1C17CF4
	063 Move X0, 0xC7F000
	064 Move X0, [X0+1040]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X19+2924], W8
	068 NotImplemented "Instruction MOVI not yet implemented."
	069 Move [X31+80], X31
	070 Move [X31+48], V0
	071 Move [X31+56], V0
	072 Compare X20, 0
	073 JumpIfEqual {244}
	074 Move X19, 0xC7F000
	075 Move X19, [X19+1048]
	076 Move X0, X20
	077 Move X1, [X19]
	078 Call Dictionary`2<Object, Object>.get_Count, X0
	079 Compare W0, 0
	080 JumpIfEqual {244}
	081 Move X1, [X19]
	082 Move X0, X20
	083 Call Dictionary`2<Object, Object>.get_Count, X0
	084 Move X8, 0xC7F000
	085 Move X8, [X8+1040]
	086 Move W1, W0
	087 Move X8, [X8]
	088 Move X0, X8
	089 Call 0x1C17D6C
	090 Move X8, 0xC45000
	091 Move X8, [X8+1792]
	092 Move X19, X0
	093 Move X0, X20
	094 Move X1, [X8]
	095 Add X8, X31, 8
	096 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	097 Move X24, 0xC45000
	098 Move X25, 0xC67000
	099 Move X26, 0xC40000
	100 Move X29, 0xC68000
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move X8, [X31+40]
	104 Move X24, [X24+1808]
	105 Move X25, [X25+3456]
	106 Move X26, [X26+1728]
	107 Move X29, [X29+2912]
	108 Move W23, W31
	109 Move W28, 40
	110 Move [X31+48], V0
	111 Move [X31+56], V1
	112 Move [X31+80], X8
	113 Move X1, [X24]
	114 Add X0, X31, 48
	115 Call Enumerator<Object, Object>.MoveNext, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {245}
	120 Move X20, [X31+72]
	121 Compare X20, 0
	122 JumpIfEqual {265}
	123 Move X27, [X31+64]
	124 Move X0, X20
	125 Move X1, X31
	126 Call "il2cpp_vm_object_is_inst", X0
	127 Move X21, X0
	128 Move X0, [X26]
	129 Move X22, [X25]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X22
	135 Move X1, X31
	136 Call Type.GetTypeFromHandle, X0
	137 Move X1, X0
	138 Move X0, X21
	139 Move X2, X31
	140 Call Type.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {162}
	145 Move X9, 0xC40000
	146 Move X8, [X20]
	147 Move X9, [X9+1880]
	148 Move X8, [X8+64]
	149 Move X1, [X9]
	150 Move X9, [X1+64]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X20
	153 Call 0x1C17E08
	154 Compare X19, 0
	155 JumpIfEqual {266}
	156 Move W8, [X19+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move W8, [X0]
	159 Move X20, X31
	160 Move D0, X31
	161 Move W9, 1
	162 Move X0, X20
	163 Move X1, X31
	164 Call "il2cpp_vm_object_is_inst", X0
	165 Move X21, X0
	166 Move X0, [X26]
	167 Move X22, [X29]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X0, X22
	173 Move X1, X31
	174 Call Type.GetTypeFromHandle, X0
	175 Move X1, X0
	176 Move X0, X21
	177 Move X2, X31
	178 Call Type.op_Equality, X0, X1
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {195}
	183 Move X8, 0xC42000
	184 Move X8, [X8+632]
	185 Move X1, [X8]
	186 Move X8, [X20]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Compare X19, 0
	189 JumpIfEqual {273}
	190 Move W8, [X19+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move W9, W31
	193 Move W8, W31
	194 Move D0, X31
	195 Move X0, X20
	196 Move X1, X31
	197 Call "il2cpp_vm_object_is_inst", X0
	198 Move X21, X0
	199 Move X0, [X26]
	200 Move X9, 0xC68000
	201 Move W8, [X0+224]
	202 Move X9, [X9+2680]
	203 Move X22, [X9]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X22
	208 Move X1, X31
	209 Call Type.GetTypeFromHandle, X0
	210 Move X1, X0
	211 Move X0, X21
	212 Move X2, X31
	213 Call Type.op_Equality, X0, X1
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {278}
	218 Move X9, 0xC43000
	219 Move X8, [X20]
	220 Move X9, [X9+2424]
	221 Move X8, [X8+64]
	222 Move X1, [X9]
	223 Move X9, [X1+64]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, X20
	226 Call 0x1C17E08
	227 Compare X19, 0
	228 JumpIfEqual {274}
	229 Move W8, [X19+24]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move V0, [X0]
	232 Move X20, X31
	233 Move W8, W31
	234 Move W9, 2
	235 NotImplemented "Instruction SMADDL not yet implemented."
	236 Move [X10+32], X27
	237 Move [X10+40], W9
	238 Move [X10+44], W31
	239 Move [X10+48], X20
	240 Move [X10+56], W8
	241 Move [X10+60], W31
	242 Move [X10+64], D0
	243 Add W23, W23, 1
	244 Move X19, X31
	245 Move X8, 0xC45000
	246 Move X8, [X8+1800]
	247 Add X0, X31, 48
	248 Move X1, [X8]
	249 Call Enumerator<Object, Object>.Dispose, X0
	250 Move X0, X19
	251 Move X20, [X31+176]
	252 Move X19, [X31+184]
	253 Move X22, [X31+160]
	254 Move X21, [X31+168]
	255 Move X24, [X31+144]
	256 Move X23, [X31+152]
	257 Move X26, [X31+128]
	258 Move X25, [X31+136]
	259 Move X28, [X31+112]
	260 Move X27, [X31+120]
	261 Move X29, [X31+96]
	262 Move X30, [X31+104]
	263 Add X31, X31, 192
	264 Return X0
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F28
	268 Move X0, X20
	269 Call 0x1C181E0
	270 Call 0x1C17F28
	271 Move X0, X20
	272 Call 0x1C181E0
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Call 0x1C17F28
	276 Move X0, X20
	277 Call 0x1C181E0
	278 Move X0, 0xC40000
	279 Move X0, [X0+2000]
	280 Call 0x1C17D08
	281 Call 0x1C17F10
	282 Move X20, X0
	283 Move X0, 0xC7F000
	284 Move X0, [X0+1056]
	285 Call 0x1C17D08
	286 Move X1, X0
	287 Move X0, X20
	288 Move X2, X31
	289 Call Exception..ctor, X0, X1
	290 Move X0, 0xC7F000
	291 Move X0, [X0+1064]
	292 Call 0x1C17D08
	293 Move X1, X0
	294 Move X0, X20
	295 Call 0x1C17DEC
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Call 0x3EB2AD0
	298 Move X20, [X0]
	299 Call 0x3EB2AE0
	300 Move X8, 0xC45000
	301 Move X8, [X8+1800]
	302 Add X0, X31, 48
	303 Move X1, [X8]
	304 Call Enumerator<Object, Object>.Dispose, X0
	305 Compare X20, 0
	306 JumpIfEqual {250}
	307 Move X0, X20
	308 Call 0x1C17F18
	309 Move X19, X0
	310 Move X20, X31
	311 Move X19, X0
	312 Move X8, 0xC45000
	313 Move X8, [X8+1800]
	314 Move X1, [X8]
	315 Add X0, X31, 48
	316 Call Enumerator<Object, Object>.Dispose, X0
	317 Compare X20, 0
	318 JumpIfNotEqual {321}
	319 Move X0, X19
	320 Call 0x1D2D690
	321 Move X0, X20
	322 Call 0x1C17F18
	323 Call 0x1991590

Method: System.Byte[] IntPtrToByteArray(System.IntPtr data, System.UInt64 size)

Disassembly:
	0x034B47FC ADRP X0, 0xC7E000
	0x034B4800 LDR X0, [X0 + 0x328]
	0x034B4804 BL 0x1C16CF4
	0x034B4808 MOVZ W8, 0x1
	0x034B480C STRB W8, [X19 + 0xBC8]
	0x034B4810 LDR X0, [X20]
	0x034B4814 LDR W8, [X0 + 0xE0]
	0x034B4818 CBNZ W8, 0x34B4820
	0x034B481C BL 0x1C16DFC
	0x034B4820 BL 0x34B4830
	0x034B4824 LDP X20, X19, [X31 + 0x10]
	0x034B4828 LDR X30, [X31], #0x20
	0x034B482C B 0x34B3B78
	0x034B4830 SUB X31, X31, 0x40
	0x034B4834 STP X30, X19, [X31 + 0x30]
	0x034B4838 ADRP X19, 0xF29000
	0x034B483C LDR X8, [X19 + 0xBD0]
	0x034B4840 CBNZ X8, 0x34B4888
	0x034B4844 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4848 LDR V0, [X12 + 0x5B8]
	0x034B484C ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4850 ADRP X10, 0xFFFFFFFFFD646000
	0x034B4854 ADD X8, X8, 0xDD2
	0x034B4858 MOVZ W9, 0x11
	0x034B485C ADD X10, X10, 0x78B
	0x034B4860 MOVZ W11, 0x19
	0x034B4864 ADD X0, X31, 0x0
	0x034B4868 STR W31, [X31 + 0x28]
	0x034B486C STP X8, X9, [X31]
	0x034B4870 STP X10, X11, [X31 + 0x10]
	0x034B4874 STR D0, [X31 + 0x20]
	0x034B4878 STRB W31, [X31 + 0x2C]
	0x034B487C BL 0x1C1729C
	0x034B4880 MOV X8, X0
	0x034B4884 STR X0, [X19 + 0xBD0]
	0x034B4888 BLR X8
	0x034B488C LDP X30, X19, [X31 + 0x30]
	0x034B4890 ADD X31, X31, 0x40
	0x034B4894 RET
	0x034B4898 SUB X31, X31, 0x40
	0x034B489C STP X30, X19, [X31 + 0x30]
	0x034B48A0 ADRP X19, 0xF29000
	0x034B48A4 LDR X8, [X19 + 0xBD8]
	0x034B48A8 CBNZ X8, 0x34B48F0
	0x034B48AC ADRP X12, 0xFFFFFFFFFD639000
	0x034B48B0 LDR V0, [X12 + 0x5B8]
	0x034B48B4 ADRP X8, 0xFFFFFFFFFD65F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2A000
	006 Move W8, [X21+2925]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xC40000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0xC7F000
	017 Move X0, [X0+1072]
	018 Call 0x1C17CF4
	019 Move X0, 0xC68000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2925], W8
	024 Move TEMP, X19
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {54}
	028 Move X8, 0xC40000
	029 Move X8, [X8+1560]
	030 Move X21, 0xC68000
	031 Move W1, W19
	032 Move X0, [X8]
	033 Move X21, [X21+2128]
	034 Call 0x1C17D6C
	035 Move X8, [X21]
	036 Move X21, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X21
	044 Move W2, W31
	045 Move W3, W19
	046 Move X4, X31
	047 Call Marshal.Copy, X0, X1, X2, X3
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X0, X21
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0
	054 Call 0x1C17F30
	055 Move X8, 0xC7F000
	056 Move X8, [X8+1072]
	057 Move X1, [X8]
	058 Call 0x1C17DEC

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> DataStoreFromNative(System.IntPtr pointer)

Disassembly:
	0x034B48B8 ADRP X10, 0xFFFFFFFFFD65D000
	0x034B48BC ADD X8, X8, 0xDD2
	0x034B48C0 MOVZ W9, 0x11
	0x034B48C4 ADD X10, X10, 0xFE7
	0x034B48C8 MOVZ W11, 0xE
	0x034B48CC ADD X0, X31, 0x0
	0x034B48D0 STR W31, [X31 + 0x28]
	0x034B48D4 STP X8, X9, [X31]
	0x034B48D8 STP X10, X11, [X31 + 0x10]
	0x034B48DC STR D0, [X31 + 0x20]
	0x034B48E0 STRB W31, [X31 + 0x2C]
	0x034B48E4 BL 0x1C1729C
	0x034B48E8 MOV X8, X0
	0x034B48EC STR X0, [X19 + 0xBD8]
	0x034B48F0 BLR X8
	0x034B48F4 LDP X30, X19, [X31 + 0x30]
	0x034B48F8 ADD X31, X31, 0x40
	0x034B48FC RET
	0x034B4900 SUB X31, X31, 0x50
	0x034B4904 STR X30, [X31 + 0x30]
	0x034B4908 STP X20, X19, [X31 + 0x40]
	0x034B490C ADRP X20, 0xF29000
	0x034B4910 LDR X8, [X20 + 0xBE0]
	0x034B4914 MOV X19, X0
	0x034B4918 CBNZ X8, 0x34B4964
	0x034B491C ADRP X12, 0xFFFFFFFFFD639000
	0x034B4920 LDR V0, [X12 + 0x5B8]
	0x034B4924 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4928 ADRP X10, 0xFFFFFFFFFD677000
	0x034B492C ADD X8, X8, 0xDD2
	0x034B4930 MOVZ W9, 0x11
	0x034B4934 ADD X10, X10, 0xAEC
	0x034B4938 MOVZ W11, 0xF
	0x034B493C MOVZ W13, 0x8
	0x034B4940 ADD X0, X31, 0x0
	0x034B4944 STP X8, X9, [X31]
	0x034B4948 STP X10, X11, [X31 + 0x10]
	0x034B494C STR W13, [X31 + 0x28]
	0x034B4950 STR D0, [X31 + 0x20]
	0x034B4954 STRB W31, [X31 + 0x2C]
	0x034B4958 BL 0x1C1729C
	0x034B495C MOV X8, X0
	0x034B4960 STR X0, [X20 + 0xBE0]
	0x034B4964 MOV X0, X19
	0x034B4968 BLR X8
	0x034B496C LDP X20, X19, [X31 + 0x40]
	0x034B4970 LDR X30, [X31 + 0x30]
	0x034B4974 ADD X31, X31, 0x50
	0x034B4978 RET
	0x034B497C SUB X31, X31, 0x40
	0x034B4980 STP X30, X19, [X31 + 0x30]
	0x034B4984 ADRP X19, 0xF29000
	0x034B4988 LDR X8, [X19 + 0xBE8]
	0x034B498C CBNZ X8, 0x34B49D4
	0x034B4990 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4994 LDR V0, [X12 + 0x5B8]
	0x034B4998 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B499C ADRP X10, 0xFFFFFFFFFD66E000
	0x034B49A0 ADD X8, X8, 0xDD2
	0x034B49A4 MOVZ W9, 0x11
	0x034B49A8 ADD X10, X10, 0x28A
	0x034B49AC MOVZ W11, 0x16
	0x034B49B0 ADD X0, X31, 0x0
	0x034B49B4 STR W31, [X31 + 0x28]
	0x034B49B8 STP X8, X9, [X31]
	0x034B49BC STP X10, X11, [X31 + 0x10]
	0x034B49C0 STR D0, [X31 + 0x20]
	0x034B49C4 STRB W31, [X31 + 0x2C]
	0x034B49C8 BL 0x1C1729C
	0x034B49CC MOV X8, X0
	0x034B49D0 STR X0, [X19 + 0xBE8]
	0x034B49D4 BLR X8
	0x034B49D8 LDP X30, X19, [X31 + 0x30]
	0x034B49DC ADD X31, X31, 0x40

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xF2A000
	010 Move X22, 0xC41000
	011 Move X20, 0xC41000
	012 Move X24, 0xC7F000
	013 Move W8, [X21+2926]
	014 Move X22, [X22+1744]
	015 Move X20, [X20+1728]
	016 Move X24, [X24+808]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xC7F000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0xC41000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0xC41000
	029 Move X0, [X0+1736]
	030 Call 0x1C17CF4
	031 Move X0, 0xC41000
	032 Move X0, [X0+1744]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+2926], W8
	036 Move X0, [X22]
	037 Call 0x1C17F10
	038 Move X1, [X20]
	039 Move X20, X0
	040 Call Dictionary`2<Object, Object>..ctor, X0
	041 Move X0, [X24]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Call CAPI.ovr_DataStore_GetNumKeys, X0
	048 Move X1, X31
	049 Call UIntPtr.op_Explicit, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X25, 0xC41000
	052 Move X25, [X25+1736]
	053 Move W21, W0
	054 Move W22, W31
	055 Move X0, [X24]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Move W1, W22
	062 Call CAPI.ovr_DataStore_GetKey, X0, X1
	063 Move X23, X0
	064 Move X0, X19
	065 Move X1, X23
	066 Call CAPI.ovr_DataStore_GetValue, X0, X1
	067 Compare X20, 0
	068 JumpIfEqual {86}
	069 Move X3, [X25]
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X23
	073 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	074 Add W22, W22, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X20
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Return X0
	086 Call 0x1C17F20

Method: System.String StringFromNative(System.IntPtr pointer)

Disassembly:
	0x034B4B78 ADRP X10, 0xFFFFFFFFFD673000
	0x034B4B7C ADD X8, X8, 0xDD2
	0x034B4B80 MOVZ W9, 0x11
	0x034B4B84 ADD X10, X10, 0xB5C
	0x034B4B88 MOVZ W11, 0x16
	0x034B4B8C MOVZ W13, 0x18
	0x034B4B90 ADD X0, X31, 0x0
	0x034B4B94 STP X8, X9, [X31]
	0x034B4B98 STP X10, X11, [X31 + 0x10]
	0x034B4B9C STR W13, [X31 + 0x28]
	0x034B4BA0 STR D0, [X31 + 0x20]
	0x034B4BA4 STRB W31, [X31 + 0x2C]
	0x034B4BA8 BL 0x1C1729C
	0x034B4BAC MOV X8, X0
	0x034B4BB0 STR X0, [X22 + 0xC08]
	0x034B4BB4 ADD X9, X21, 0x20
	0x034B4BB8 CMP X21, 0x0
	0x034B4BBC CSEL X1, X31, X9, EQ
	0x034B4BC0 MOV X0, X20
	0x034B4BC4 MOV X2, X19
	0x034B4BC8 BLR X8
	0x034B4BCC LDP X20, X19, [X31 + 0x50]
	0x034B4BD0 LDP X22, X21, [X31 + 0x40]
	0x034B4BD4 LDR X30, [X31 + 0x30]
	0x034B4BD8 ADD X31, X31, 0x60
	0x034B4BDC RET
	0x034B4BE0 SUB X31, X31, 0x40
	0x034B4BE4 STP X30, X19, [X31 + 0x30]
	0x034B4BE8 ADRP X19, 0xF29000
	0x034B4BEC LDR X8, [X19 + 0xC10]
	0x034B4BF0 CBNZ X8, 0x34B4C38
	0x034B4BF4 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4BF8 LDR V0, [X12 + 0x5B8]
	0x034B4BFC ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4C00 ADRP X10, 0xFFFFFFFFFD670000
	0x034B4C04 ADD X8, X8, 0xDD2
	0x034B4C08 MOVZ W9, 0x11
	0x034B4C0C ADD X10, X10, 0x273
	0x034B4C10 MOVZ W11, 0x15
	0x034B4C14 ADD X0, X31, 0x0
	0x034B4C18 STR W31, [X31 + 0x28]
	0x034B4C1C STP X8, X9, [X31]
	0x034B4C20 STP X10, X11, [X31 + 0x10]
	0x034B4C24 STR D0, [X31 + 0x20]
	0x034B4C28 STRB W31, [X31 + 0x2C]
	0x034B4C2C BL 0x1C1729C
	0x034B4C30 MOV X8, X0
	0x034B4C34 STR X0, [X19 + 0xC10]
	0x034B4C38 BLR X8
	0x034B4C3C LDP X30, X19, [X31 + 0x30]
	0x034B4C40 ADD X31, X31, 0x40
	0x034B4C44 RET
	0x034B4C48 SUB X31, X31, 0x50
	0x034B4C4C STR X30, [X31 + 0x30]
	0x034B4C50 STP X20, X19, [X31 + 0x40]
	0x034B4C54 ADRP X20, 0xF29000
	0x034B4C58 LDR X8, [X20 + 0xC18]
	0x034B4C5C MOV X19, X0
	0x034B4C60 CBNZ X8, 0x34B4CAC
	0x034B4C64 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4C68 LDR V0, [X12 + 0x5B8]
	0x034B4C6C ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4C70 ADRP X10, 0xFFFFFFFFFD66C000
	0x034B4C74 ADD X8, X8, 0xDD2
	0x034B4C78 MOVZ W9, 0x11
	0x034B4C7C ADD X10, X10, 0xAE
	0x034B4C80 MOVZ W11, 0x16
	0x034B4C84 MOVZ W13, 0x8
	0x034B4C88 ADD X0, X31, 0x0
	0x034B4C8C STP X8, X9, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF2A000
	007 Move W8, [X20+2927]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xC40000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0xC7F000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC68000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2927], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Move X2, X31
	027 Call IntPtr.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {39}
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X0, X31
	037 Move X30, [X31+48]
	038 Return X0
	039 Move X22, 0xC7F000
	040 Move X22, [X22+808]
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Call CAPI.GetNativeStringLengthNotIncludingNullTerminator, X0
	048 Move X8, 0xC40000
	049 Move X8, [X8+1560]
	050 Move W21, W0
	051 Move W1, W21
	052 Move X8, [X8]
	053 Move X0, X8
	054 Call 0x1C17D6C
	055 Move X8, 0xC68000
	056 Move X8, [X8+2128]
	057 Move X20, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X20
	066 Move W2, W31
	067 Move W3, W21
	068 Move X4, X31
	069 Call Marshal.Copy, X0, X1, X2, X3
	070 Move X8, [X22]
	071 Move X8, [X8+184]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {85}
	075 Move X8, [X0]
	076 Move X1, X20
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X3, [X8+888]
	082 Move X2, [X8+896]
	083 Move X30, [X31+48]
	084 CallNoReturn X3
	085 Call 0x1C17F20

Method: System.Int32 GetNativeStringLengthNotIncludingNullTerminator(System.IntPtr pointer)

Disassembly:
	0x034B4C90 STP X10, X11, [X31 + 0x10]
	0x034B4C94 STR W13, [X31 + 0x28]
	0x034B4C98 STR D0, [X31 + 0x20]
	0x034B4C9C STRB W31, [X31 + 0x2C]
	0x034B4CA0 BL 0x1C1729C
	0x034B4CA4 MOV X8, X0
	0x034B4CA8 STR X0, [X20 + 0xC18]
	0x034B4CAC MOV X0, X19
	0x034B4CB0 BLR X8
	0x034B4CB4 LDP X20, X19, [X31 + 0x40]
	0x034B4CB8 LDR X30, [X31 + 0x30]
	0x034B4CBC ADD X31, X31, 0x50
	0x034B4CC0 RET
	0x034B4CC4 SUB X31, X31, 0x50
	0x034B4CC8 STR X30, [X31 + 0x30]
	0x034B4CCC STP X20, X19, [X31 + 0x40]
	0x034B4CD0 ADRP X20, 0xF29000
	0x034B4CD4 LDR X8, [X20 + 0xC20]
	0x034B4CD8 MOV W19, W0
	0x034B4CDC CBNZ X8, 0x34B4D28
	0x034B4CE0 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4CE4 LDR V0, [X12 + 0x5B8]
	0x034B4CE8 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4CEC ADRP X10, 0xFFFFFFFFFD66C000
	0x034B4CF0 ADD X8, X8, 0xDD2
	0x034B4CF4 MOVZ W9, 0x11
	0x034B4CF8 ADD X10, X10, 0xC5
	0x034B4CFC MOVZ W11, 0x21
	0x034B4D00 MOVZ W13, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF2A000
	006 Move W8, [X20+2928]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xC68000
	013 Move X0, [X0+2128]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2928], W8
	017 Move X21, 0xC68000
	018 Move X21, [X21+2128]
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W20, TEMP
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add W20, W20, 1
	028 Move X0, X19
	029 Move W1, W20
	030 Move X2, X31
	031 Call Marshal.ReadByte, X0, X1
	032 And W31, W0, 255
	033 Move W0, W20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0

Method: System.DateTime DateTimeFromNative(System.UInt64 seconds_since_the_one_true_epoch)

Disassembly:
	0x034B4D04 ADD X0, X31, 0x0
	0x034B4D08 STP X8, X9, [X31]
	0x034B4D0C STP X10, X11, [X31 + 0x10]
	0x034B4D10 STR W13, [X31 + 0x28]
	0x034B4D14 STR D0, [X31 + 0x20]
	0x034B4D18 STRB W31, [X31 + 0x2C]
	0x034B4D1C BL 0x1C1729C
	0x034B4D20 MOV X8, X0
	0x034B4D24 STR X0, [X20 + 0xC20]
	0x034B4D28 AND W0, W19, 0x1
	0x034B4D2C BLR X8
	0x034B4D30 LDP X20, X19, [X31 + 0x40]
	0x034B4D34 LDR X30, [X31 + 0x30]
	0x034B4D38 ADD X31, X31, 0x50
	0x034B4D3C RET
	0x034B4D40 SUB X31, X31, 0x50
	0x034B4D44 STR X30, [X31 + 0x30]
	0x034B4D48 STP X20, X19, [X31 + 0x40]
	0x034B4D4C ADRP X20, 0xF29000
	0x034B4D50 LDR X8, [X20 + 0xC28]
	0x034B4D54 MOV W19, W0
	0x034B4D58 CBNZ X8, 0x34B4DA4
	0x034B4D5C ADRP X12, 0xFFFFFFFFFD639000
	0x034B4D60 LDR V0, [X12 + 0x5B8]
	0x034B4D64 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4D68 ADRP X10, 0xFFFFFFFFFD665000
	0x034B4D6C ADD X8, X8, 0xDD2
	0x034B4D70 MOVZ W9, 0x11
	0x034B4D74 ADD X10, X10, 0xC96
	0x034B4D78 MOVZ W11, 0x25
	0x034B4D7C MOVZ W13, 0x4
	0x034B4D80 ADD X0, X31, 0x0
	0x034B4D84 STP X8, X9, [X31]
	0x034B4D88 STP X10, X11, [X31 + 0x10]
	0x034B4D8C STR W13, [X31 + 0x28]
	0x034B4D90 STR D0, [X31 + 0x20]
	0x034B4D94 STRB W31, [X31 + 0x2C]
	0x034B4D98 BL 0x1C1729C
	0x034B4D9C MOV X8, X0
	0x034B4DA0 STR X0, [X20 + 0xC28]
	0x034B4DA4 MOV W0, W19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xF2A000
	007 Move X20, 0xC41000
	008 Move W8, [X21+2929]
	009 Move X20, [X20+2544]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xC41000
	016 Move X0, [X0+2544]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2929], W8
	020 Move X0, [X20]
	021 Move [X31+16], X31
	022 Move [X31+24], X31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X0, X31, 24
	028 Move W1, 1970
	029 Move W2, 1
	030 Move W3, 1
	031 Move W4, W31
	032 Move W5, W31
	033 Move W6, W31
	034 Move W7, W31
	035 Move [X31], X31
	036 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	037 NotImplemented "Instruction UCVTF not yet implemented."
	038 Add X0, X31, 24
	039 Move X1, X31
	040 Call DateTime.AddSeconds, X0, V0
	041 Move [X31+16], X0
	042 Add X0, X31, 16
	043 Move X1, X31
	044 Call DateTime.ToLocalTime, X0
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Add X31, X31, 64
	050 Return X0

Method: System.UInt64 DateTimeToNative(System.DateTime dt)

Disassembly:
	0x034B4DA8 BLR X8
	0x034B4DAC LDP X20, X19, [X31 + 0x40]
	0x034B4DB0 LDR X30, [X31 + 0x30]
	0x034B4DB4 ADD X31, X31, 0x50
	0x034B4DB8 RET
	0x034B4DBC SUB X31, X31, 0x40
	0x034B4DC0 STP X30, X19, [X31 + 0x30]
	0x034B4DC4 ADRP X19, 0xF29000
	0x034B4DC8 LDR X0, [X19 + 0xC30]
	0x034B4DCC CBNZ X0, 0x34B4E10
	0x034B4DD0 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4DD4 LDR V0, [X12 + 0x5B8]
	0x034B4DD8 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4DDC ADRP X10, 0xFFFFFFFFFD654000
	0x034B4DE0 ADD X8, X8, 0xDD2
	0x034B4DE4 MOVZ W9, 0x11
	0x034B4DE8 ADD X10, X10, 0x3F8
	0x034B4DEC MOVZ W11, 0x1A
	0x034B4DF0 ADD X0, X31, 0x0
	0x034B4DF4 STR W31, [X31 + 0x28]
	0x034B4DF8 STP X8, X9, [X31]
	0x034B4DFC STP X10, X11, [X31 + 0x10]
	0x034B4E00 STR D0, [X31 + 0x20]
	0x034B4E04 STRB W31, [X31 + 0x2C]
	0x034B4E08 BL 0x1C1729C
	0x034B4E0C STR X0, [X19 + 0xC30]
	0x034B4E10 BLR X0
	0x034B4E14 LDP X30, X19, [X31 + 0x30]
	0x034B4E18 ADD X31, X31, 0x40
	0x034B4E1C RET
	0x034B4E20 SUB X31, X31, 0x50
	0x034B4E24 STP X30, X21, [X31 + 0x30]
	0x034B4E28 STP X20, X19, [X31 + 0x40]
	0x034B4E2C ADRP X21, 0xF29000
	0x034B4E30 LDR X8, [X21 + 0xC38]
	0x034B4E34 MOV W19, W1
	0x034B4E38 MOV X20, X0
	0x034B4E3C CBNZ X8, 0x34B4E84
	0x034B4E40 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4E44 LDR V0, [X12 + 0x5B8]
	0x034B4E48 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4E4C ADRP X10, 0xFFFFFFFFFD66E000
	0x034B4E50 ADD X8, X8, 0xDD2
	0x034B4E54 MOVZ W9, 0x11
	0x034B4E58 ADD X10, X10, 0x2A1
	0x034B4E5C MOVZ W11, 0x1B
	0x034B4E60 MOVZ W13, 0xC
	0x034B4E64 ADD X0, X31, 0x0
	0x034B4E68 STP X8, X9, [X31]
	0x034B4E6C STP X10, X11, [X31 + 0x10]
	0x034B4E70 STR W13, [X31 + 0x28]
	0x034B4E74 STR D0, [X31 + 0x20]
	0x034B4E78 STRB W31, [X31 + 0x2C]
	0x034B4E7C BL 0x1C1729C
	0x034B4E80 STR X0, [X21 + 0xC38]
	0x034B4E84 MOV X0, X20
	0x034B4E88 BL 0x1C1727C
	0x034B4E8C LDR X8, [X21 + 0xC38]
	0x034B4E90 MOV W1, W19
	0x034B4E94 MOV X20, X0
	0x034B4E98 BLR X8
	0x034B4E9C MOV X19, X0
	0x034B4EA0 MOV X0, X20
	0x034B4EA4 BL 0x1C17290
	0x034B4EA8 MOV X0, X19
	0x034B4EAC LDP X20, X19, [X31 + 0x40]
	0x034B4EB0 LDP X30, X21, [X31 + 0x30]
	0x034B4EB4 ADD X31, X31, 0x50
	0x034B4EB8 RET
	0x034B4EBC SUB X31, X31, 0x40
	0x034B4EC0 STP X30, X19, [X31 + 0x30]
	0x034B4EC4 ADRP X19, 0xF29000
	0x034B4EC8 LDR X0, [X19 + 0xC40]
	0x034B4ECC CBNZ X0, 0x34B4F10
	0x034B4ED0 ADRP X12, 0xFFFFFFFFFD639000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X0
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X19, 0xF2A000
	007 Move X20, 0xC41000
	008 Move W8, [X19+2930]
	009 Move X20, [X20+2544]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC41000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move X0, 0xC42000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+2930], W8
	022 Move X0, [X20]
	023 Move [X31+16], X31
	024 Move [X31+24], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Add X0, X31, 40
	030 Move X1, X31
	031 Call DateTime.get_Kind, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X19, [X31+40]
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X0, X31, 40
	040 Move X1, X31
	041 Call DateTime.ToUniversalTime, X0
	042 Move X19, X0
	043 Move X0, [X20]
	044 Move X20, 0xC42000
	045 Move W8, [X0+224]
	046 Move X20, [X20+1392]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move W8, 1
	051 Add X0, X31, 24
	052 Move W1, 1970
	053 Move W2, 1
	054 Move W3, 1
	055 Move W4, W31
	056 Move W5, W31
	057 Move W6, W31
	058 Move W7, W31
	059 Move [X31+8], X31
	060 Move [X31], W8
	061 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8
	062 Move X1, [X31+24]
	063 Move X0, X19
	064 Move X2, X31
	065 Call DateTime.op_Subtraction, X0, X1
	066 Move X8, [X20]
	067 Move [X31+16], X0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Add X0, X31, 16
	074 Move X1, X31
	075 Call TimeSpan.get_TotalSeconds, X0
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X30, [X31+32]
	079 NotImplemented "Instruction FCVTZS not yet implemented."
	080 NotImplemented "Instruction FCVTZU not yet implemented."
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Add X31, X31, 64
	084 Return X0

Method: System.Byte[] BlobFromNative(System.UInt32 size, System.IntPtr pointer)

Disassembly:
	0x034B4ED4 LDR V0, [X12 + 0x5B8]
	0x034B4ED8 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4EDC ADRP X10, 0xFFFFFFFFFD668000
	0x034B4EE0 ADD X8, X8, 0xDD2
	0x034B4EE4 MOVZ W9, 0x11
	0x034B4EE8 ADD X10, X10, 0xC7
	0x034B4EEC MOVZ W11, 0x14
	0x034B4EF0 ADD X0, X31, 0x0
	0x034B4EF4 STR W31, [X31 + 0x28]
	0x034B4EF8 STP X8, X9, [X31]
	0x034B4EFC STP X10, X11, [X31 + 0x10]
	0x034B4F00 STR D0, [X31 + 0x20]
	0x034B4F04 STRB W31, [X31 + 0x2C]
	0x034B4F08 BL 0x1C1729C
	0x034B4F0C STR X0, [X19 + 0xC40]
	0x034B4F10 BLR X0
	0x034B4F14 LDP X30, X19, [X31 + 0x30]
	0x034B4F18 ADD X31, X31, 0x40
	0x034B4F1C RET
	0x034B4F20 SUB X31, X31, 0x50
	0x034B4F24 STR X30, [X31 + 0x30]
	0x034B4F28 STP X20, X19, [X31 + 0x40]
	0x034B4F2C ADRP X20, 0xF29000
	0x034B4F30 LDR X8, [X20 + 0xC48]
	0x034B4F34 MOV X19, X0
	0x034B4F38 CBNZ X8, 0x34B4F80
	0x034B4F3C ADRP X12, 0xFFFFFFFFFD639000
	0x034B4F40 LDR V0, [X12 + 0x5B8]
	0x034B4F44 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4F48 ADRP X10, 0xFFFFFFFFFD64C000
	0x034B4F4C ADD X8, X8, 0xDD2
	0x034B4F50 MOVZ W9, 0x11
	0x034B4F54 ADD X10, X10, 0x1FE
	0x034B4F58 MOVZ W11, 0x24
	0x034B4F5C MOVZ W13, 0x8
	0x034B4F60 ADD X0, X31, 0x0
	0x034B4F64 STP X8, X9, [X31]
	0x034B4F68 STP X10, X11, [X31 + 0x10]
	0x034B4F6C STR W13, [X31 + 0x28]
	0x034B4F70 STR D0, [X31 + 0x20]
	0x034B4F74 STRB W31, [X31 + 0x2C]
	0x034B4F78 BL 0x1C1729C
	0x034B4F7C STR X0, [X20 + 0xC48]
	0x034B4F80 MOV X0, X19
	0x034B4F84 BL 0x1C17294
	0x034B4F88 LDR X8, [X20 + 0xC48]
	0x034B4F8C BLR X8
	0x034B4F90 LDP X20, X19, [X31 + 0x40]
	0x034B4F94 LDR X30, [X31 + 0x30]
	0x034B4F98 ADD X31, X31, 0x50
	0x034B4F9C RET
	0x034B4FA0 SUB X31, X31, 0x50
	0x034B4FA4 STP X30, X21, [X31 + 0x30]
	0x034B4FA8 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF2A000
	009 Move X21, 0xC40000
	010 Move W8, [X20+2931]
	011 Move X21, [X21+1560]
	012 Move X19, X1
	013 Move W22, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC40000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xC68000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2931], W8
	026 Move X0, [X21]
	027 Move W1, W22
	028 Call 0x1C17D6C
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, X0
	031 Move X23, 0xC68000
	032 Move X23, [X23+2128]
	033 Move X21, X31
	034 Move W22, W22
	035 Add X24, X20, 32
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move W1, W21
	043 Move X2, X31
	044 Call Marshal.ReadByte, X0, X1
	045 Compare X20, 0
	046 JumpIfEqual {61}
	047 Move W8, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X24], W0
	050 Add X21, X21, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X20
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Return X0
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: System.Byte[] FiledataFromNative(System.UInt32 size, System.IntPtr pointer)

Disassembly:
	0x034B4FAC ADRP X21, 0xF29000
	0x034B4FB0 LDR X8, [X21 + 0xC50]
	0x034B4FB4 MOV X19, X1
	0x034B4FB8 MOV X20, X0
	0x034B4FBC CBNZ X8, 0x34B5004
	0x034B4FC0 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4FC4 LDR V0, [X12 + 0x5B8]
	0x034B4FC8 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4FCC ADRP X10, 0xFFFFFFFFFD63C000
	0x034B4FD0 ADD X8, X8, 0xDD2
	0x034B4FD4 MOVZ W9, 0x11
	0x034B4FD8 ADD X10, X10, 0x1AD
	0x034B4FDC MOVZ W11, 0x37
	0x034B4FE0 MOVZ W13, 0x10
	0x034B4FE4 ADD X0, X31, 0x0
	0x034B4FE8 STP X8, X9, [X31]
	0x034B4FEC STP X10, X11, [X31 + 0x10]
	0x034B4FF0 STR W13, [X31 + 0x28]
	0x034B4FF4 STR D0, [X31 + 0x20]
	0x034B4FF8 STRB W31, [X31 + 0x2C]
	0x034B4FFC BL 0x1C1729C
	0x034B5000 STR X0, [X21 + 0xC50]
	0x034B5004 MOV X0, X20
	0x034B5008 BL 0x1C17294
	0x034B500C LDR X8, [X21 + 0xC50]
	0x034B5010 MOV X1, X19
	0x034B5014 BLR X8
	0x034B5018 LDP X20, X19, [X31 + 0x40]
	0x034B501C LDP X30, X21, [X31 + 0x30]
	0x034B5020 ADD X31, X31, 0x50
	0x034B5024 RET
	0x034B5028 SUB X31, X31, 0x50
	0x034B502C STP X30, X23, [X31 + 0x20]
	0x034B5030 STP X22, X21, [X31 + 0x30]
	0x034B5034 STP X20, X19, [X31 + 0x40]
	0x034B5038 ADRP X22, 0xF28000
	0x034B503C ADRP X23, 0xC7D000
	0x034B5040 ADRP X21, 0xC7D000
	0x034B5044 LDRB W8, [X22 + 0xC58]
	0x034B5048 LDR X23, [X23 + 0x448]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xF2A000
	008 Move X23, 0xC40000
	009 Move X21, 0xC68000
	010 Move W8, [X22+2932]
	011 Move X23, [X23+1560]
	012 Move X21, [X21+2128]
	013 Move X20, X1
	014 Move W19, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC40000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0xC68000
	023 Move X0, [X0+2128]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2932], W8
	027 Move X0, [X23]
	028 Move W1, W19
	029 Call 0x1C17D6C
	030 Move X8, [X21]
	031 Move X21, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X21
	039 Move W2, W31
	040 Move W3, W19
	041 Move X4, X31
	042 Call Marshal.Copy, X0, X1, X2, X3
	043 Move X0, X21
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Return X0

Method: System.IntPtr StringToNative(System.String s)

Disassembly:
	0x034B504C LDR X21, [X21 + 0x328]
	0x034B5050 MOV X19, X1
	0x034B5054 MOV W20, W0
	0x034B5058 TBNZ X8, 0x0, 0x34B507C
	0x034B505C ADRP X0, 0xC7D000
	0x034B5060 LDR X0, [X0 + 0x328]
	0x034B5064 BL 0x1C16CF4
	0x034B5068 ADRP X0, 0xC7D000
	0x034B506C LDR X0, [X0 + 0x448]
	0x034B5070 BL 0x1C16CF4
	0x034B5074 MOVZ W8, 0x1
	0x034B5078 STRB W8, [X22 + 0xC58]
	0x034B507C LDR X8, [X23]
	0x034B5080 MOVN X9, 0x0
	0x034B5084 ADD X0, X31, 0x8
	0x034B5088 MOV X1, X31
	0x034B508C STP X8, X9, [X31 + 0x8]
	0x034B5090 STR W20, [X31 + 0x18]
	0x034B5094 BL 0x33B162C
	0x034B5098 LDR X8, [X21]
	0x034B509C MOV X20, X0
	0x034B50A0 LDR W9, [X8 + 0xE0]
	0x034B50A4 CBNZ W9, 0x34B50B0
	0x034B50A8 MOV X0, X8
	0x034B50AC BL 0x1C16DFC
	0x034B50B0 MOV X0, X20
	0x034B50B4 MOV X1, X19
	0x034B50B8 BL 0x34B50D0
	0x034B50BC LDP X20, X19, [X31 + 0x40]
	0x034B50C0 LDP X22, X21, [X31 + 0x30]
	0x034B50C4 LDP X30, X23, [X31 + 0x20]
	0x034B50C8 ADD X31, X31, 0x50
	0x034B50CC RET
	0x034B50D0 SUB X31, X31, 0xB0
	0x034B50D4 STP X30, X27, [X31 + 0x60]
	0x034B50D8 STP X26, X25, [X31 + 0x70]
	0x034B50DC STP X24, X23, [X31 + 0x80]
	0x034B50E0 STP X22, X21, [X31 + 0x90]
	0x034B50E4 STP X20, X19, [X31 + 0xA0]
	0x034B50E8 ADRP X20, 0xF28000
	0x034B50EC ADRP X24, 0xC7D000
	0x034B50F0 LDRB W8, [X20 + 0xC59]
	0x034B50F4 LDR X24, [X24 + 0x328]
	0x034B50F8 MOV X22, X1
	0x034B50FC MOV X19, X0
	0x034B5100 TBNZ X8, 0x0, 0x34B5184
	0x034B5104 ADRP X0, 0xC7D000
	0x034B5108 LDR X0, [X0 + 0x328]
	0x034B510C BL 0x1C16CF4
	0x034B5110 ADRP X0, 0xC43000
	0x034B5114 LDR X0, [X0 + 0x4E8]
	0x034B5118 BL 0x1C16CF4
	0x034B511C ADRP X0, 0xC7C000
	0x034B5120 LDR X0, [X0 + 0x458]
	0x034B5124 BL 0x1C16CF4
	0x034B5128 ADRP X0, 0xC43000
	0x034B512C LDR X0, [X0 + 0x4F0]
	0x034B5130 BL 0x1C16CF4
	0x034B5134 ADRP X0, 0xC43000
	0x034B5138 LDR X0, [X0 + 0x4F8]
	0x034B513C BL 0x1C16CF4
	0x034B5140 ADRP X0, 0xC43000
	0x034B5144 LDR X0, [X0 + 0x500]
	0x034B5148 BL 0x1C16CF4
	0x034B514C ADRP X0, 0xC77000
	0x034B5150 LDR X0, [X0 + 0x448]
	0x034B5154 BL 0x1C16CF4
	0x034B5158 ADRP X0, 0xC41000
	0x034B515C LDR X0, [X0 + 0x1B0]
	0x034B5160 BL 0x1C16CF4
	0x034B5164 ADRP X0, 0xC41000
	0x034B5168 LDR X0, [X0 + 0x1B8]
	0x034B516C BL 0x1C16CF4
	0x034B5170 ADRP X0, 0xC66000
	0x034B5174 LDR X0, [X0 + 0x850]
	0x034B5178 BL 0x1C16CF4
	0x034B517C MOVZ W8, 0x1
	0x034B5180 STRB W8, [X20 + 0xC59]
	0x034B5184 LDR X0, [X24]
	0x034B5188 MOVI V0.2D, 0x0
	0x034B518C STR X31, [X31 + 0x50]
	0x034B5190 STP V0, V0, [X31 + 0x30]
	0x034B5194 LDR W8, [X0 + 0xE0]
	0x034B5198 CBNZ W8, 0x34B51A0
	0x034B519C BL 0x1C16DFC
	0x034B51A0 ADRP X23, 0xC77000
	0x034B51A4 LDR X23, [X23 + 0x448]
	0x034B51A8 MOV X0, X19
	0x034B51AC BL 0x34B404C
	0x034B51B0 MOV X20, X0
	0x034B51B4 CBZ X22, 0x34B51D4
	0x034B51B8 ADRP X8, 0xC7C000
	0x034B51BC LDR X8, [X8 + 0x458]
	0x034B51C0 MOV X0, X22
	0x034B51C4 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF29000
	007 Move W8, [X20+2933]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xC3F000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0xC7E000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC67000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2933], W8
	024 Compare X19, 0
	025 JumpIfEqual {91}
	026 Move X21, 0xC7E000
	027 Move X21, [X21+808]
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X21]
	034 Move X8, [X0+184]
	035 Move X0, [X8]
	036 Compare X0, 0
	037 JumpIfEqual {90}
	038 Move X8, [X0]
	039 Move X20, 0xC3F000
	040 Move X1, X19
	041 Move X9, [X8+504]
	042 Move X2, [X8+512]
	043 Move X20, [X20+1560]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X20]
	046 Add W20, W0, 1
	047 Move W1, W20
	048 Move X0, X8
	049 Call 0x1C17D6C
	050 Move X8, [X21]
	051 Move X8, [X8+184]
	052 Move X8, [X8]
	053 Compare X8, 0
	054 JumpIfEqual {90}
	055 Move X9, [X8]
	056 Move W3, [X19+16]
	057 Move X22, 0xC67000
	058 Move X21, X0
	059 Move X10, [X9+632]
	060 Move X6, [X9+640]
	061 Move X22, [X22+2128]
	062 Move X0, X8
	063 Move X1, X19
	064 Move W2, W31
	065 Move X4, X21
	066 Move W5, W31
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X0, [X22]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W0, W20
	074 Move X1, X31
	075 Call Marshal.AllocCoTaskMem, X0
	076 Move X19, X0
	077 Move X0, X21
	078 Move W1, W31
	079 Move X2, X19
	080 Move W3, W20
	081 Move X4, X31
	082 Call Marshal.Copy, X0, X1, X2, X3
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Return X0
	090 Call 0x1C17F20
	091 Move X0, 0xC3F000
	092 Move X0, [X0+2000]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0xC7E000
	097 Move X0, [X0+1080]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call Exception..ctor, X0, X1
	103 Move X0, 0xC7E000
	104 Move X0, [X0+1088]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Call 0x1C17DEC

Method: System.Boolean ovr_UnityInitWrapper(System.String appId)

Disassembly:
	0x034B27BC TBNZ X8, 0x0, 0x34B27F8
	0x034B27C0 ADRP X0, 0xC69000
	0x034B27C4 LDR X0, [X0 + 0x880]
	0x034B27C8 BL 0x1C16CF4
	0x034B27CC ADRP X0, 0xC80000
	0x034B27D0 LDR X0, [X0 + 0x378]
	0x034B27D4 BL 0x1C16CF4
	0x034B27D8 ADRP X0, 0xC80000
	0x034B27DC LDR X0, [X0 + 0x380]
	0x034B27E0 BL 0x1C16CF4
	0x034B27E4 ADRP X0, 0xC80000
	0x034B27E8 LDR X0, [X0 + 0x388]
	0x034B27EC BL 0x1C16CF4
	0x034B27F0 MOVZ W8, 0x1
	0x034B27F4 STRB W8, [X20 + 0xB5B]
	0x034B27F8 STR X31, [X31 + 0x18]
	0x034B27FC STR X31, [X31 + 0x8]
	0x034B2800 CBZ X19, 0x34B2964
	0x034B2804 ADRP X22, 0xC69000
	0x034B2808 LDR X8, [X19 + 0x18]
	0x034B280C LDR X22, [X22 + 0x880]
	0x034B2810 CBZ X8, 0x34B28AC
	0x034B2814 LDR X0, [X22]
	0x034B2818 LDR W8, [X0 + 0xE0]
	0x034B281C CBNZ W8, 0x34B2828
	0x034B2820 BL 0x1C16DFC
	0x034B2824 LDR X0, [X22]
	0x034B2828 LDR X8, [X0 + 0xB8]
	0x034B282C LDR X0, [X8]
	0x034B2830 CBZ X0, 0x34B2964
	0x034B2834 ADRP X8, 0xC80000
	0x034B2838 LDR X8, [X8 + 0x388]
	0x034B283C LDR X1, [X19 + 0x18]
	0x034B2840 ADD X2, X31, 0x18
	0x034B2844 LDR X3, [X8]
	0x034B2848 BL 0x2B1F8D0
	0x034B284C TBZ X0, 0x0, 0x34B28AC
	0x034B2850 LDR X0, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF2C000
	006 Move X8, [X20+2936]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X12, -43794432
	011 Move V0, [X12+1464]
	012 Move X8, -43638784
	013 Move X10, -43630592
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2979
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move [X20+2936], X0
	029 Move X0, X19
	030 Call 0x1C1827C
	031 Move X8, [X20+2936]
	032 Move X19, X0
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move W20, W0
	035 Move X0, X19
	036 Call 0x1C18290
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X30, [X31+48]
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Add X31, X31, 80
	043 Return X0

Method: System.Void ovr_UnityInitGlobals(System.IntPtr loggingCB)

Disassembly:
	0x034B51C8 BL 0x2AA4E88
	0x034B51CC MOV W21, W0
	0x034B51D0 B 0x34B51D8
	0x034B51D4 MOV W21, W31
	0x034B51D8 LDR X0, [X23]
	0x034B51DC UBFM W1, W21, 0x1F, 0x1E
	0x034B51E0 BL 0x1C16D6C
	0x034B51E4 CMP W21, 0x1
	0x034B51E8 MOV X19, X0
	0x034B51EC B.LT 0x34B52AC
	0x034B51F0 CBZ X22, 0x34B5384
	0x034B51F4 ADRP X8, 0xC43000
	0x034B51F8 LDR X8, [X8 + 0x4E8]
	0x034B51FC ADRP X26, 0xC43000
	0x034B5200 ADRP X25, 0xC43000
	0x034B5204 MOV X0, X22
	0x034B5208 LDR X1, [X8]
	0x034B520C LDR X26, [X26 + 0x4F8]
	0x034B5210 LDR X25, [X25 + 0x4F0]
	0x034B5214 ADD X8, X31, 0x8
	0x034B5218 BL 0x2AA54BC
	0x034B521C LDUR V0, [X31 + 0x8]
	0x034B5220 LDUR V1, [X31 + 0x18]
	0x034B5224 LDR X8, [X31 + 0x28]
	0x034B5228 MOVZ W27, 0x1
	0x034B522C STP V0, V1, [X31 + 0x30]
	0x034B5230 STR X8, [X31 + 0x50]
	0x034B5234 LDR X1, [X26]
	0x034B5238 ADD X0, X31, 0x30
	0x034B523C BL 0x2C0A728
	0x034B5240 TBZ X0, 0x0, 0x34B52A0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+2944]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43560960
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3171
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2944], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.UInt64 ovr_UnityInitWrapperAsynchronous(System.String appId)

Disassembly:
	0x034B2950 LDP X20, X19, [X31 + 0x30]
	0x034B2954 LDP X22, X21, [X31 + 0x20]
	0x034B2958 LDR X30, [X31 + 0x10]
	0x034B295C ADD X31, X31, 0x40
	0x034B2960 RET
	0x034B2964 BL 0x1C16F20
	0x034B2968 BL 0x1C16F20
	0x034B296C CMP W1, 0x1
	0x034B2970 MOV X21, X0
	0x034B2974 B.NE 0x34B298C
	0x034B2978 MOV X0, X21
	0x034B297C BL 0x3EB1AD0
	0x034B2980 LDR X20, [X0]
	0x034B2984 BL 0x3EB1AE0
	0x034B2988 B 0x34B286C
	0x034B298C MOV X20, X31
	0x034B2990 B 0x34B2998
	0x034B2994 MOV X21, X0
	0x034B2998 LDR X0, [X22]
	0x034B299C LDR W8, [X0 + 0xE0]
	0x034B29A0 CBNZ W8, 0x34B29AC
	0x034B29A4 BL 0x1C16DFC
	0x034B29A8 LDR X0, [X22]
	0x034B29AC LDR X8, [X0 + 0xB8]
	0x034B29B0 LDR X0, [X8]
	0x034B29B4 CBNZ X0, 0x34B29BC
	0x034B29B8 BL 0x1C16F20
	0x034B29BC ADRP X8, 0xC80000
	0x034B29C0 LDR X1, [X19 + 0x18]
	0x034B29C4 LDR X8, [X8 + 0x378]
	0x034B29C8 LDR X2, [X8]
	0x034B29CC BL 0x2B1F2AC
	0x034B29D0 CBNZ X20, 0x34B29DC
	0x034B29D4 MOV X0, X21
	0x034B29D8 BL 0x1D2C690
	0x034B29DC MOV X0, X20
	0x034B29E0 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF2C000
	006 Move X8, [X20+2952]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X12, -43794432
	011 Move V0, [X12+1464]
	012 Move X8, -43638784
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 396
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move [X20+2952], X0
	029 Move X0, X19
	030 Call 0x1C1827C
	031 Move X8, [X20+2952]
	032 Move X19, X0
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X20, X0
	035 Move X0, X19
	036 Call 0x1C18290
	037 Move X0, X20
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X30, [X31+48]
	041 Add X31, X31, 80
	042 Return X0

Method: System.Boolean ovr_UnityInitWrapperStandalone(System.String accessToken, System.IntPtr loggingCB)

Disassembly:
	0x034B5244 LDR X0, [X24]
	0x034B5248 LDP X23, X22, [X31 + 0x40]
	0x034B524C LDR W8, [X0 + 0xE0]
	0x034B5250 CBNZ W8, 0x34B5258
	0x034B5254 BL 0x1C16DFC
	0x034B5258 MOV X0, X23
	0x034B525C BL 0x34B404C
	0x034B5260 CBZ X19, 0x34B537C
	0x034B5264 LDR W9, [X19 + 0x18]
	0x034B5268 SUB W8, W27, 0x1
	0x034B526C CMP W8, W9
	0x034B5270 B.CS 0x34B5378
	0x034B5274 ADD X8, X19, W8, 0x3, SXTW
	0x034B5278 STR X0, [X8 + 0x20]
	0x034B527C MOV X0, X22
	0x034B5280 BL 0x34B404C
	0x034B5284 LDR W8, [X19 + 0x18]
	0x034B5288 CMP W27, W8
	0x034B528C B.CS 0x34B5380
	0x034B5290 ADD X8, X19, W27, 0x3, SXTW
	0x034B5294 ADD W27, W27, 0x2
	0x034B5298 STR X0, [X8 + 0x20]
	0x034B529C B 0x34B5234
	0x034B52A0 LDR X1, [X25]
	0x034B52A4 ADD X0, X31, 0x30
	0x034B52A8 BL 0x2C0A83C
	0x034B52AC ADRP X22, 0xC66000
	0x034B52B0 LDR X22, [X22 + 0x850]
	0x034B52B4 SXTW X0, W21
	0x034B52B8 MOV X1, X31
	0x034B52BC BL 0x33D53B0
	0x034B52C0 LDR X8, [X24]
	0x034B52C4 MOV X21, X0
	0x034B52C8 LDR W9, [X8 + 0xE0]
	0x034B52CC CBNZ W9, 0x34B52D8
	0x034B52D0 MOV X0, X8
	0x034B52D4 BL 0x1C16DFC
	0x034B52D8 MOV X0, X20
	0x034B52DC MOV X1, X19
	0x034B52E0 MOV X2, X21

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF29000
	007 Move X8, [X21+2960]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {31}
	012 Move X12, -43806720
	013 Move V0, [X12+1464]
	014 Move X8, -43651072
	015 Move X10, -43679744
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 456
	019 Move W11, 30
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move [X21+2960], X0
	031 Move X0, X20
	032 Call 0x1C1827C
	033 Move X8, [X21+2960]
	034 Move X1, X19
	035 Move X20, X0
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move W19, W0
	038 Move X0, X20
	039 Call 0x1C18290
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X30, [X31+48]
	044 Move X21, [X31+56]
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Add X31, X31, 80
	047 Return X0

Method: System.UInt64 ovr_Platform_InitializeStandaloneOculus(ref Oculus.Platform.CAPI/OculusInitParams init)

Disassembly:
	0x034B52E4 BL 0x34B5400
	0x034B52E8 LDR X0, [X22]
	0x034B52EC LDR W8, [X0 + 0xE0]
	0x034B52F0 CBNZ W8, 0x34B52F8
	0x034B52F4 BL 0x1C16DFC
	0x034B52F8 MOV X0, X20
	0x034B52FC MOV X1, X31
	0x034B5300 BL 0x32C1060
	0x034B5304 CBZ X19, 0x34B5384
	0x034B5308 LDR X8, [X19 + 0x18]
	0x034B530C CMP W8, 0x1
	0x034B5310 B.LT 0x34B5358
	0x034B5314 MOV X21, X31
	0x034B5318 AND X8, X8, 0x0
	0x034B531C ADD X23, X19, 0x20
	0x034B5320 CMP X21, W8, UXTW
	0x034B5324 B.CS 0x34B5374
	0x034B5328 LDR X0, [X22]
	0x034B532C LDR X20, [X23, X21, LSL #3]
	0x034B5330 LDR W8, [X0 + 0xE0]
	0x034B5334 CBNZ W8, 0x34B533C
	0x034B5338 BL 0x1C16DFC
	0x034B533C MOV X0, X20
	0x034B5340 MOV X1, X31
	0x034B5344 BL 0x32C1060
	0x034B5348 LDR W8, [X19 + 0x18]
	0x034B534C ADD X21, X21, 0x1
	0x034B5350 CMP X21, W8, SXTW
	0x034B5354 B.LT 0x34B5320
	0x034B5358 LDP X20, X19, [X31 + 0xA0]
	0x034B535C LDP X22, X21, [X31 + 0x90]
	0x034B5360 LDP X24, X23, [X31 + 0x80]
	0x034B5364 LDP X26, X25, [X31 + 0x70]
	0x034B5368 LDP X30, X27, [X31 + 0x60]
	0x034B536C ADD X31, X31, 0xB0
	0x034B5370 RET
	0x034B5374 BL 0x1C16F28
	0x034B5378 BL 0x1C16F28
	0x034B537C BL 0x1C16F20
	0x034B5380 BL 0x1C16F28
	0x034B5384 BL 0x1C16F20
	0x034B5388 B 0x34B539C
	0x034B538C B 0x34B539C
	0x034B5390 B 0x34B539C
	0x034B5394 B 0x34B539C
	0x034B5398 B 0x34B539C
	0x034B539C MOV X22, X0
	0x034B53A0 CMP W1, 0x1
	0x034B53A4 B.NE 0x34B53D0
	0x034B53A8 MOV X0, X22
	0x034B53AC BL 0x3EB1AD0
	0x034B53B0 LDR X23, [X0]
	0x034B53B4 BL 0x3EB1AE0
	0x034B53B8 LDR X1, [X25]
	0x034B53BC ADD X0, X31, 0x30
	0x034B53C0 BL 0x2C0A83C
	0x034B53C4 CBZ X23, 0x34B52AC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+2968]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43737088
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 825
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 48
	020 Move [X31+48], X8
	021 Move [X31+56], X9
	022 Move [X31+64], X10
	023 Move [X31+72], X11
	024 Move [X31+88], W13
	025 Move [X31+80], D0
	026 Move [X31+92], W31
	027 Call 0x1C1829C
	028 Move [X20+2968], X0
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Add X1, X31, 48
	031 Move X0, X19
	032 Move [X31+80], X31
	033 Move [X31+48], V0
	034 Move [X31+56], V0
	035 Call 0x1BBFAD0
	036 Move X8, [X20+2968]
	037 Add X0, X31, 48
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X20, X0
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Add X0, X31, 48
	042 Add X1, X31, 0
	043 Move [X31+32], X31
	044 Move [X31], V0
	045 Move [X31+8], V0
	046 Call 0x1BBFB20
	047 Move X0, [X31+56]
	048 Call 0x1C18290
	049 Move X0, [X31+64]
	050 Move [X31+56], X31
	051 Call 0x1C18290
	052 Move X0, [X31+80]
	053 Move [X31+64], X31
	054 Call 0x1C18290
	055 Move X8, [X31+32]
	056 Move V1, [X31]
	057 Move V0, [X31+16]
	058 Move X0, X20
	059 Move X30, [X31+96]
	060 Move [X19+32], X8
	061 Move [X19], V1
	062 Move [X19+8], V0
	063 Move X20, [X31+112]
	064 Move X19, [X31+120]
	065 Add X31, X31, 128
	066 Return X0

Method: System.UInt64 ovr_PlatformInitializeWithAccessToken(System.UInt64 appId, System.String accessToken)

Disassembly:
	0x034B53C8 MOV X0, X23
	0x034B53CC BL 0x1C16F18
	0x034B53D0 MOV X23, X31
	0x034B53D4 B 0x34B53DC
	0x034B53D8 MOV X22, X0
	0x034B53DC LDR X1, [X25]
	0x034B53E0 ADD X0, X31, 0x30
	0x034B53E4 BL 0x2C0A83C
	0x034B53E8 CBNZ X23, 0x34B53F4
	0x034B53EC MOV X0, X22
	0x034B53F0 BL 0x1D2C690
	0x034B53F4 MOV X0, X23
	0x034B53F8 BL 0x1C16F18
	0x034B53FC BL 0x1990590
	0x034B5400 SUB X31, X31, 0x60
	0x034B5404 STR X30, [X31 + 0x30]
	0x034B5408 STP X22, X21, [X31 + 0x40]
	0x034B540C STP X20, X19, [X31 + 0x50]
	0x034B5410 ADRP X22, 0xF28000
	0x034B5414 LDR X8, [X22 + 0xC60]
	0x034B5418 MOV X19, X2
	0x034B541C MOV X21, X1
	0x034B5420 MOV X20, X0
	0x034B5424 CBNZ X8, 0x34B5470
	0x034B5428 ADRP X12, 0xFFFFFFFFFD638000
	0x034B542C LDR V0, [X12 + 0x5B8]
	0x034B5430 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5434 ADRP X10, 0xFFFFFFFFFD647000
	0x034B5438 ADD X8, X8, 0xDD2
	0x034B543C MOVZ W9, 0x11
	0x034B5440 ADD X10, X10, 0x69F
	0x034B5444 MOVZ W11, 0x10
	0x034B5448 MOVZ W13, 0x18
	0x034B544C ADD X0, X31, 0x0
	0x034B5450 STP X8, X9, [X31]
	0x034B5454 STP X10, X11, [X31 + 0x10]
	0x034B5458 STR W13, [X31 + 0x28]
	0x034B545C STR D0, [X31 + 0x20]
	0x034B5460 STRB W31, [X31 + 0x2C]
	0x034B5464 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF29000
	007 Move X8, [X21+2976]
	008 Move X20, X1
	009 Move X19, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {31}
	012 Move X12, -43806720
	013 Move V0, [X12+1464]
	014 Move X8, -43651072
	015 Move X10, -43659264
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 4033
	019 Move W11, 37
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move [X21+2976], X0
	031 Move X0, X20
	032 Call 0x1C1827C
	033 Move X8, [X21+2976]
	034 Move X20, X0
	035 Move X0, X19
	036 Move X1, X20
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X19, X0
	039 Move X0, X20
	040 Call 0x1C18290
	041 Move X0, X19
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X30, [X31+48]
	045 Move X21, [X31+56]
	046 Add X31, X31, 80
	047 Return X0

Method: System.UInt64 ovr_PlatformInitializeWithAccessTokenAndOptions(System.UInt64 appId, System.String accessToken, Oculus.Platform.CAPI/ovrKeyValuePair[] configOptions, System.UIntPtr numOptions)

Disassembly:
	0x034B5468 MOV X8, X0
	0x034B546C STR X0, [X22 + 0xC60]
	0x034B5470 ADD X9, X21, 0x20
	0x034B5474 CMP X21, 0x0
	0x034B5478 CSEL X1, X31, X9, EQ
	0x034B547C MOV X0, X20
	0x034B5480 MOV X2, X19
	0x034B5484 BLR X8
	0x034B5488 LDP X20, X19, [X31 + 0x50]
	0x034B548C LDP X22, X21, [X31 + 0x40]
	0x034B5490 LDR X30, [X31 + 0x30]
	0x034B5494 ADD X31, X31, 0x60
	0x034B5498 RET
	0x034B549C SUB X31, X31, 0x40
	0x034B54A0 STP X30, X19, [X31 + 0x30]
	0x034B54A4 ADRP X19, 0xF28000
	0x034B54A8 LDR X8, [X19 + 0xC68]
	0x034B54AC CBNZ X8, 0x34B54F4
	0x034B54B0 ADRP X12, 0xFFFFFFFFFD638000
	0x034B54B4 LDR V0, [X12 + 0x5B8]
	0x034B54B8 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B54BC ADRP X10, 0xFFFFFFFFFD667000
	0x034B54C0 ADD X8, X8, 0xDD2
	0x034B54C4 MOVZ W9, 0x11
	0x034B54C8 ADD X10, X10, 0xDC
	0x034B54CC MOVZ W11, 0x29
	0x034B54D0 ADD X0, X31, 0x0
	0x034B54D4 STR W31, [X31 + 0x28]
	0x034B54D8 STP X8, X9, [X31]
	0x034B54DC STP X10, X11, [X31 + 0x10]
	0x034B54E0 STR D0, [X31 + 0x20]
	0x034B54E4 STRB W31, [X31 + 0x2C]
	0x034B54E8 BL 0x1C1729C
	0x034B54EC MOV X8, X0
	0x034B54F0 STR X0, [X19 + 0xC68]
	0x034B54F4 BLR X8
	0x034B54F8 LDP X30, X19, [X31 + 0x30]
	0x034B54FC ADD X31, X31, 0x40
	0x034B5500 RET
	0x034B5504 STR X30, [X31 - 0x30]!
	0x034B5508 STP X22, X21, [X31 + 0x10]
	0x034B550C STP X20, X19, [X31 + 0x20]
	0x034B5510 ADRP X22, 0xF28000
	0x034B5514 ADRP X21, 0xC7D000
	0x034B5518 LDRB W8, [X22 + 0xC70]
	0x034B551C LDR X21, [X21 + 0x328]
	0x034B5520 MOV W19, W1
	0x034B5524 MOV X20, X0
	0x034B5528 TBNZ X8, 0x0, 0x34B554C
	0x034B552C ADRP X0, 0xC7D000
	0x034B5530 LDR X0, [X0 + 0x328]
	0x034B5534 BL 0x1C16CF4
	0x034B5538 ADRP X0, 0xC66000
	0x034B553C LDR X0, [X0 + 0x850]
	0x034B5540 BL 0x1C16CF4
	0x034B5544 MOVZ W8, 0x1
	0x034B5548 STRB W8, [X22 + 0xC70]
	0x034B554C LDR X0, [X21]
	0x034B5550 ADRP X21, 0xC66000
	0x034B5554 LDR W8, [X0 + 0xE0]
	0x034B5558 LDR X21, [X21 + 0x850]
	0x034B555C CBNZ W8, 0x34B5564
	0x034B5560 BL 0x1C16DFC
	0x034B5564 MOV X0, X20
	0x034B5568 BL 0x34B404C
	0x034B556C MOV W1, W19
	0x034B5570 MOV X20, X0
	0x034B5574 BL 0x34B55A0
	0x034B5578 LDR X0, [X21]
	0x034B557C LDR W8, [X0 + 0xE0]
	0x034B5580 CBNZ W8, 0x34B5588
	0x034B5584 BL 0x1C16DFC
	0x034B5588 MOV X0, X20
	0x034B558C LDP X20, X19, [X31 + 0x20]
	0x034B5590 LDP X22, X21, [X31 + 0x10]
	0x034B5594 MOV X1, X31
	0x034B5598 LDR X30, [X31], #0x30
	0x034B559C B 0x32C1060
	0x034B55A0 SUB X31, X31, 0x50
	0x034B55A4 STP X30, X21, [X31 + 0x30]
	0x034B55A8 STP X20, X19, [X31 + 0x40]
	0x034B55AC ADRP X21, 0xF28000
	0x034B55B0 LDR X8, [X21 + 0xC78]
	0x034B55B4 MOV W19, W1
	0x034B55B8 MOV X20, X0
	0x034B55BC CBNZ X8, 0x34B5608
	0x034B55C0 ADRP X12, 0xFFFFFFFFFD638000
	0x034B55C4 LDR V0, [X12 + 0x5B8]
	0x034B55C8 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B55CC ADRP X10, 0xFFFFFFFFFD672000
	0x034B55D0 ADD X8, X8, 0xDD2
	0x034B55D4 MOVZ W9, 0x11
	0x034B55D8 ADD X10, X10, 0xB73
	0x034B55DC MOVZ W11, 0x2A
	0x034B55E0 MOVZ W13, 0xC
	0x034B55E4 ADD X0, X31, 0x0
	0x034B55E8 STP X8, X9, [X31]
	0x034B55EC STP X10, X11, [X31 + 0x10]
	0x034B55F0 STR W13, [X31 + 0x28]
	0x034B55F4 STR D0, [X31 + 0x20]
	0x034B55F8 STRB W31, [X31 + 0x2C]
	0x034B55FC BL 0x1C1729C
	0x034B5600 MOV X8, X0
	0x034B5604 STR X0, [X21 + 0xC78]
	0x034B5608 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D8
	003 Move [X31+64], X29
	004 Move [X31+72], X30
	005 Move [X31+80], X28
	006 Move [X31+88], X27
	007 Move [X31+96], X26
	008 Move [X31+104], X25
	009 Move [X31+112], X24
	010 Move [X31+120], X23
	011 Move [X31+128], X22
	012 Move [X31+136], X21
	013 Move [X31+144], X20
	014 Move [X31+152], X19
	015 Move X25, 0xF29000
	016 Move X8, [X25+2984]
	017 Move X20, X3
	018 Move X19, X2
	019 Move X21, X1
	020 Move X22, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {42}
	023 Move X12, -43806720
	024 Move V0, [X12+1464]
	025 Move X8, -43651072
	026 Move X10, -43687936
	027 Add X8, X8, 3538
	028 Move W9, 17
	029 Add X10, X10, 1777
	030 Move W11, 47
	031 Move W13, 32
	032 Add X0, X31, 0
	033 Move [X31], X8
	034 Move [X31+8], X9
	035 Move [X31+16], X10
	036 Move [X31+24], X11
	037 Move [X31+40], W13
	038 Move [X31+32], D0
	039 Move [X31+44], W31
	040 Call 0x1C1829C
	041 Move [X25+2984], X0
	042 Move X0, X21
	043 Call 0x1C1827C
	044 Move X23, X0
	045 Compare X19, 0
	046 JumpIfEqual {82}
	047 Move X24, [X19+24]
	048 Add X8, X24, X24
	049 Move X0, X8
	050 ShiftRight X0, 61
	051 And X0, X0, 0xFFFFFFF
	052 Call 0x1C17F14
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X21, X0
	055 And X8, X24, 0
	056 Move X8, X8
	057 ShiftRight X8, 62
	058 And X8, X8, 0x1FFFFFFF
	059 Add X8, X8, W24
	060 Move X26, X31
	061 Move X27, X8
	062 ShiftRight X27, 61
	063 And X27, X27, 0xFFFFFFF
	064 Add X8, X19, X26
	065 Move X0, [X8+32]
	066 Move W28, [X8+40]
	067 Move X24, [X8+48]
	068 Move W29, [X8+56]
	069 Move V8, [X8+64]
	070 Call 0x1C1827C
	071 Add X25, X21, X26
	072 Move [X25], X0
	073 Move X0, X24
	074 Move [X25+8], W28
	075 Call 0x1C1827C
	076 Add X26, X26, 40
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X25+16], X0
	079 Move [X25+24], W29
	080 Move [X25+32], D8
	081 Move X25, 0xF29000
	082 Move X21, X31
	083 Move X8, [X25+2984]
	084 Move X0, X22
	085 Move X1, X23
	086 Move X2, X21
	087 Move X3, X20
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X20, X0
	090 Move X0, X23
	091 Call 0x1C18290
	092 Compare X21, 0
	093 JumpIfEqual {109}
	094 Compare X19, 0
	095 JumpIfEqual {107}
	096 Move X8, [X19+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 And X19, X8, 0
	099 Add X22, X21, 16
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Call 0x1C18290
	102 Move X0, [X22]
	103 Move [X22-16], X31
	104 Call 0x1C18290
	105 Move [X22+40], X31
	106 Subtract X19, X19, 1
	107 Move X0, X21
	108 Call 0x1C18290
	109 Move X0, X20
	110 Move X20, [X31+144]
	111 Move X19, [X31+152]
	112 Move X22, [X31+128]
	113 Move X21, [X31+136]
	114 Move X24, [X31+112]
	115 Move X23, [X31+120]
	116 Move X26, [X31+96]
	117 Move X25, [X31+104]
	118 Move X28, [X31+80]
	119 Move X27, [X31+88]
	120 Move X29, [X31+64]
	121 Move X30, [X31+72]
	122 Move V8, [X31+48]
	123 Add X31, X31, 160
	124 Return X0

Method: System.Boolean ovr_UnityInitWrapperWindows(System.String appId, System.IntPtr loggingCB)

Disassembly:
	0x034B560C MOV W1, W19
	0x034B5610 BLR X8
	0x034B5614 LDP X20, X19, [X31 + 0x40]
	0x034B5618 LDP X30, X21, [X31 + 0x30]
	0x034B561C ADD X31, X31, 0x50
	0x034B5620 RET
	0x034B5624 STR X30, [X31 - 0x30]!
	0x034B5628 STP X22, X21, [X31 + 0x10]
	0x034B562C STP X20, X19, [X31 + 0x20]
	0x034B5630 ADRP X21, 0xF28000
	0x034B5634 ADRP X22, 0xC7D000
	0x034B5638 LDRB W8, [X21 + 0xC80]
	0x034B563C LDR X22, [X22 + 0x328]
	0x034B5640 MOV X19, X1
	0x034B5644 MOV X20, X0
	0x034B5648 TBNZ X8, 0x0, 0x34B566C
	0x034B564C ADRP X0, 0xC7D000
	0x034B5650 LDR X0, [X0 + 0x328]
	0x034B5654 BL 0x1C16CF4
	0x034B5658 ADRP X0, 0xC66000
	0x034B565C LDR X0, [X0 + 0x850]
	0x034B5660 BL 0x1C16CF4
	0x034B5664 MOVZ W8, 0x1
	0x034B5668 STRB W8, [X21 + 0xC80]
	0x034B566C LDR X0, [X22]
	0x034B5670 LDR W8, [X0 + 0xE0]
	0x034B5674 CBNZ W8, 0x34B567C
	0x034B5678 BL 0x1C16DFC
	0x034B567C MOV X0, X20
	0x034B5680 BL 0x34B404C
	0x034B5684 CBZ X19, 0x34B56E8
	0x034B5688 MOV X20, X0
	0x034B568C LDRSW X0, [X19 + 0x18]
	0x034B5690 ADRP X21, 0xC66000
	0x034B5694 LDR X21, [X21 + 0x850]
	0x034B5698 MOV X1, X31
	0x034B569C BL 0x33D53B0
	0x034B56A0 MOV X2, X0
	0x034B56A4 MOV X0, X20
	0x034B56A8 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF29000
	007 Move X8, [X21+2992]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {31}
	012 Move X12, -43806720
	013 Move V0, [X12+1464]
	014 Move X8, -43651072
	015 Move X10, -43720704
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 429
	019 Move W11, 27
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move [X21+2992], X0
	031 Move X0, X20
	032 Call 0x1C1827C
	033 Move X8, [X21+2992]
	034 Move X1, X19
	035 Move X20, X0
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move W19, W0
	038 Move X0, X20
	039 Call 0x1C18290
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X30, [X31+48]
	044 Move X21, [X31+56]
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Add X31, X31, 80
	047 Return X0

Method: System.UInt64 ovr_UnityInitWrapperWindowsAsynchronous(System.String appId, System.IntPtr loggingCB)

Disassembly:
	0x034B56AC BL 0x34B56EC
	0x034B56B0 LDR X8, [X21]
	0x034B56B4 MOV X19, X0
	0x034B56B8 LDR W9, [X8 + 0xE0]
	0x034B56BC CBNZ W9, 0x34B56C8
	0x034B56C0 MOV X0, X8
	0x034B56C4 BL 0x1C16DFC
	0x034B56C8 MOV X0, X20
	0x034B56CC MOV X1, X31
	0x034B56D0 BL 0x32C1060
	0x034B56D4 MOV X0, X19
	0x034B56D8 LDP X20, X19, [X31 + 0x20]
	0x034B56DC LDP X22, X21, [X31 + 0x10]
	0x034B56E0 LDR X30, [X31], #0x30
	0x034B56E4 RET
	0x034B56E8 BL 0x1C16F20
	0x034B56EC SUB X31, X31, 0xA0
	0x034B56F0 STR D8, [X31 + 0x30]
	0x034B56F4 STP X29, X30, [X31 + 0x40]
	0x034B56F8 STP X28, X27, [X31 + 0x50]
	0x034B56FC STP X26, X25, [X31 + 0x60]
	0x034B5700 STP X24, X23, [X31 + 0x70]
	0x034B5704 STP X22, X21, [X31 + 0x80]
	0x034B5708 STP X20, X19, [X31 + 0x90]
	0x034B570C ADRP X24, 0xF28000
	0x034B5710 LDR X8, [X24 + 0xC88]
	0x034B5714 MOV X21, X2
	0x034B5718 MOV X19, X1
	0x034B571C MOV X22, X0
	0x034B5720 CBZ X8, 0x34B57BC
	0x034B5724 CBZ X19, 0x34B5808
	0x034B5728 LDR X23, [X19 + 0x18]
	0x034B572C ADD X8, X23, X23, 0x2, LSL
	0x034B5730 UBFM X0, X8, 0x3D, 0x3C
	0x034B5734 BL 0x1C16F14
	0x034B5738 CMP W23, 0x1
	0x034B573C MOV X20, X0
	0x034B5740 B.LT 0x34B5820
	0x034B5744 AND X8, X23, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF29000
	007 Move X8, [X21+3000]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {31}
	012 Move X12, -43806720
	013 Move V0, [X12+1464]
	014 Move X8, -43651072
	015 Move X10, -43597824
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 134
	019 Move W11, 39
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move [X21+3000], X0
	031 Move X0, X20
	032 Call 0x1C1827C
	033 Move X8, [X21+3000]
	034 Move X1, X19
	035 Move X20, X0
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X19, X0
	038 Move X0, X20
	039 Call 0x1C18290
	040 Move X0, X19
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X30, [X31+48]
	044 Move X21, [X31+56]
	045 Add X31, X31, 80
	046 Return X0

Method: System.Boolean ovr_SetDeveloperAccessToken(System.String accessToken)

Disassembly:
	0x034B5748 UBFM X8, X8, 0x3E, 0x3D
	0x034B574C ADD X8, X8, W23, UXTW
	0x034B5750 MOV X25, X31
	0x034B5754 UBFM X26, X8, 0x3D, 0x3C
	0x034B5758 ADD X8, X19, X25
	0x034B575C LDR X0, [X8 + 0x20]
	0x034B5760 LDR W27, [X8 + 0x28]
	0x034B5764 LDR X23, [X8 + 0x30]
	0x034B5768 LDR W28, [X8 + 0x38]
	0x034B576C LDR V8, [X8 + 0x40]
	0x034B5770 BL 0x1C1727C
	0x034B5774 ADD X29, X20, X25
	0x034B5778 STR X0, [X29]
	0x034B577C MOV X0, X23
	0x034B5780 STR W27, [X29 + 0x8]
	0x034B5784 BL 0x1C1727C
	0x034B5788 ADD X25, X25, 0x28
	0x034B578C CMP X26, X25
	0x034B5790 STR X0, [X29 + 0x10]
	0x034B5794 STR W28, [X29 + 0x18]
	0x034B5798 STR D8, [X29 + 0x20]
	0x034B579C B.NE 0x34B5758
	0x034B57A0 LDR X8, [X24 + 0xC88]
	0x034B57A4 MOV X0, X22
	0x034B57A8 MOV X1, X20
	0x034B57AC MOV X2, X21
	0x034B57B0 BLR X8
	0x034B57B4 MOV X21, X0
	0x034B57B8 B 0x34B583C
	0x034B57BC ADRP X12, 0xFFFFFFFFFD638000
	0x034B57C0 LDR V0, [X12 + 0x5B8]
	0x034B57C4 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B57C8 ADRP X10, 0xFFFFFFFFFD66F000
	0x034B57CC ADD X8, X8, 0xDD2
	0x034B57D0 MOVZ W9, 0x11
	0x034B57D4 ADD X10, X10, 0x289
	0x034B57D8 MOVZ W11, 0x16
	0x034B57DC MOVZ W13, 0x18

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+3008]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43581440
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 599
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move [X20+3008], X0
	029 Move X0, X19
	030 Call 0x1C1827C
	031 Move X8, [X20+3008]
	032 Move X19, X0
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move W20, W0
	035 Move X0, X19
	036 Call 0x1C18290
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X30, [X31+48]
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Add X31, X31, 80
	043 Return X0

Method: System.String ovr_GetLoggedInUserLocale()

Disassembly:
	0x034B57E0 ADD X0, X31, 0x0
	0x034B57E4 STP X8, X9, [X31]
	0x034B57E8 STP X10, X11, [X31 + 0x10]
	0x034B57EC STR W13, [X31 + 0x28]
	0x034B57F0 STR D0, [X31 + 0x20]
	0x034B57F4 STRB W31, [X31 + 0x2C]
	0x034B57F8 BL 0x1C1729C
	0x034B57FC MOV X8, X0
	0x034B5800 STR X0, [X24 + 0xC88]
	0x034B5804 CBNZ X19, 0x34B5728
	0x034B5808 MOV X0, X22
	0x034B580C MOV X1, X31
	0x034B5810 MOV X2, X21
	0x034B5814 BLR X8
	0x034B5818 MOV X21, X0
	0x034B581C B 0x34B5878
	0x034B5820 LDR X8, [X24 + 0xC88]
	0x034B5824 MOV X0, X22
	0x034B5828 MOV X1, X20
	0x034B582C MOV X2, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xF29000
	005 Move X20, 0xC7E000
	006 Move W8, [X19+3016]
	007 Move X20, [X20+808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xC7E000
	013 Move X0, [X0+808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3016], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call CAPI.ovr_GetLoggedInUserLocale_Native
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Call CAPI.StringFromNative, X0
	027 Return X0

Method: System.IntPtr ovr_GetLoggedInUserLocale_Native()

Disassembly:
	0x034B5830 BLR X8
	0x034B5834 MOV X21, X0
	0x034B5838 CBZ X20, 0x34B5878
	0x034B583C LDR X8, [X19 + 0x18]
	0x034B5840 CMP W8, 0x1
	0x034B5844 B.LT 0x34B5870
	0x034B5848 AND X19, X8, 0x0
	0x034B584C ADD X22, X20, 0x10
	0x034B5850 LDUR X0, [X22 - 0x10]
	0x034B5854 BL 0x1C17290
	0x034B5858 LDR X0, [X22]
	0x034B585C STUR X31, [X22 - 0x10]
	0x034B5860 BL 0x1C17290
	0x034B5864 STR X31, [X22], #0x28
	0x034B5868 SUBS X19, X19, 0x1
	0x034B586C B.NE 0x34B5850
	0x034B5870 MOV X0, X20
	0x034B5874 BL 0x1C17290
	0x034B5878 MOV X0, X21
	0x034B587C LDP X20, X19, [X31 + 0x90]
	0x034B5880 LDP X22, X21, [X31 + 0x80]
	0x034B5884 LDP X24, X23, [X31 + 0x70]
	0x034B5888 LDP X26, X25, [X31 + 0x60]
	0x034B588C LDP X28, X27, [X31 + 0x50]
	0x034B5890 LDP X29, X30, [X31 + 0x40]
	0x034B5894 LDR V8, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF29000
	005 Move X8, [X19+3024]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43806720
	009 Move V0, [X12+1464]
	010 Move X8, -43651072
	011 Move X10, -43753472
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1931
	015 Move W11, 25
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3024], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.IntPtr ovr_PopMessage()

Disassembly:
	0x034B5898 ADD X31, X31, 0xA0
	0x034B589C RET
	0x034B58A0 SUB X31, X31, 0x60
	0x034B58A4 STR X30, [X31 + 0x30]
	0x034B58A8 STP X22, X21, [X31 + 0x40]
	0x034B58AC STP X20, X19, [X31 + 0x50]
	0x034B58B0 ADRP X22, 0xF28000
	0x034B58B4 LDR X8, [X22 + 0xC90]
	0x034B58B8 MOV X19, X2
	0x034B58BC MOV X21, X1
	0x034B58C0 MOV X20, X0
	0x034B58C4 CBNZ X8, 0x34B5910
	0x034B58C8 ADRP X12, 0xFFFFFFFFFD638000
	0x034B58CC LDR V0, [X12 + 0x5B8]
	0x034B58D0 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B58D4 ADRP X10, 0xFFFFFFFFFD645000
	0x034B58D8 ADD X8, X8, 0xDD2
	0x034B58DC MOVZ W9, 0x11
	0x034B58E0 ADD X10, X10, 0x7BD
	0x034B58E4 MOVZ W11, 0xE
	0x034B58E8 MOVZ W13, 0x18
	0x034B58EC ADD X0, X31, 0x0
	0x034B58F0 STP X8, X9, [X31]
	0x034B58F4 STP X10, X11, [X31 + 0x10]
	0x034B58F8 STR W13, [X31 + 0x28]
	0x034B58FC STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF29000
	005 Move X8, [X19+3032]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43806720
	009 Move V0, [X12+1464]
	010 Move X8, -43651072
	011 Move X10, -43659264
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 4071
	015 Move W11, 14
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3032], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_FreeMessage(System.IntPtr message)

Disassembly:
	0x034B5900 STRB W31, [X31 + 0x2C]
	0x034B5904 BL 0x1C1729C
	0x034B5908 MOV X8, X0
	0x034B590C STR X0, [X22 + 0xC90]
	0x034B5910 ADD X9, X21, 0x20
	0x034B5914 CMP X21, 0x0
	0x034B5918 CSEL X1, X31, X9, EQ
	0x034B591C MOV X0, X20
	0x034B5920 MOV X2, X19
	0x034B5924 BLR X8
	0x034B5928 LDP X20, X19, [X31 + 0x50]
	0x034B592C LDP X22, X21, [X31 + 0x40]
	0x034B5930 LDR X30, [X31 + 0x30]
	0x034B5934 CMP W0, 0x0
	0x034B5938 CSET W0, NE
	0x034B593C ADD X31, X31, 0x60
	0x034B5940 RET
	0x034B5944 SUB X31, X31, 0x50
	0x034B5948 STR X30, [X31 + 0x30]
	0x034B594C STP X20, X19, [X31 + 0x40]
	0x034B5950 ADRP X20, 0xF28000
	0x034B5954 LDR X8, [X20 + 0xC98]
	0x034B5958 MOV X19, X0
	0x034B595C CBNZ X8, 0x34B59A4
	0x034B5960 ADRP X11, 0xFFFFFFFFFD638000
	0x034B5964 LDR V0, [X11 + 0x5B8]
	0x034B5968 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B596C ADRP X10, 0xFFFFFFFFFD676000
	0x034B5970 ADD X8, X8, 0xDD2
	0x034B5974 MOVZ W9, 0x11
	0x034B5978 ADD X10, X10, 0xAFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+3040]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43552768
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2796
	017 Move W11, 15
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3040], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.IntPtr ovr_Voip_CreateEncoder()

Disassembly:
	0x034B597C MOVZ W12, 0x8
	0x034B5980 ADD X0, X31, 0x0
	0x034B5984 STP X8, X9, [X31]
	0x034B5988 STP X10, X9, [X31 + 0x10]
	0x034B598C STR W12, [X31 + 0x28]
	0x034B5990 STR D0, [X31 + 0x20]
	0x034B5994 STRB W31, [X31 + 0x2C]
	0x034B5998 BL 0x1C1729C
	0x034B599C MOV X8, X0
	0x034B59A0 STR X0, [X20 + 0xC98]
	0x034B59A4 MOV X0, X19
	0x034B59A8 BLR X8
	0x034B59AC LDP X20, X19, [X31 + 0x40]
	0x034B59B0 LDR X30, [X31 + 0x30]
	0x034B59B4 ADD X31, X31, 0x50
	0x034B59B8 RET
	0x034B59BC STP X30, X21, [X31 - 0x20]!
	0x034B59C0 STP X20, X19, [X31 + 0x10]
	0x034B59C4 ADRP X20, 0xF28000
	0x034B59C8 ADRP X21, 0xC7D000
	0x034B59CC LDRB W8, [X20 + 0xCA0]
	0x034B59D0 LDR X21, [X21 + 0x328]
	0x034B59D4 MOV X19, X0
	0x034B59D8 TBNZ X8, 0x0, 0x34B59F0
	0x034B59DC ADRP X0, 0xC7D000
	0x034B59E0 LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF29000
	005 Move X8, [X19+3048]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43806720
	009 Move V0, [X12+1464]
	010 Move X8, -43651072
	011 Move X10, -43589632
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 650
	015 Move W11, 22
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3048], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_Voip_DestroyEncoder(System.IntPtr encoder)

Disassembly:
	0x034B59E4 BL 0x1C16CF4
	0x034B59E8 MOVZ W8, 0x1
	0x034B59EC STRB W8, [X20 + 0xCA0]
	0x034B59F0 LDR X0, [X21]
	0x034B59F4 LDR W8, [X0 + 0xE0]
	0x034B59F8 CBNZ W8, 0x34B5A00
	0x034B59FC BL 0x1C16DFC
	0x034B5A00 MOV X0, X19
	0x034B5A04 BL 0x34B5A14
	0x034B5A08 LDP X20, X19, [X31 + 0x10]
	0x034B5A0C LDP X30, X21, [X31], #0x20
	0x034B5A10 B 0x34B3B78
	0x034B5A14 SUB X31, X31, 0x50
	0x034B5A18 STR X30, [X31 + 0x30]
	0x034B5A1C STP X20, X19, [X31 + 0x40]
	0x034B5A20 ADRP X20, 0xF28000
	0x034B5A24 LDR X8, [X20 + 0xCA8]
	0x034B5A28 MOV X19, X0
	0x034B5A2C CBNZ X8, 0x34B5A78
	0x034B5A30 ADRP X12, 0xFFFFFFFFFD638000
	0x034B5A34 LDR V0, [X12 + 0x5B8]
	0x034B5A38 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5A3C ADRP X10, 0xFFFFFFFFFD647000
	0x034B5A40 ADD X8, X8, 0xDD2
	0x034B5A44 MOVZ W9, 0x11
	0x034B5A48 ADD X10, X10, 0x6B0
	0x034B5A4C MOVZ W11, 0x22
	0x034B5A50 MOVZ W13, 0x8
	0x034B5A54 ADD X0, X31, 0x0
	0x034B5A58 STP X8, X9, [X31]
	0x034B5A5C STP X10, X11, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+3056]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43753472
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1957
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3056], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.IntPtr ovr_Voip_CreateDecoder()

Disassembly:
	0x034B5A60 STR W13, [X31 + 0x28]
	0x034B5A64 STR D0, [X31 + 0x20]
	0x034B5A68 STRB W31, [X31 + 0x2C]
	0x034B5A6C BL 0x1C1729C
	0x034B5A70 MOV X8, X0
	0x034B5A74 STR X0, [X20 + 0xCA8]
	0x034B5A78 MOV X0, X19
	0x034B5A7C BLR X8
	0x034B5A80 LDP X20, X19, [X31 + 0x40]
	0x034B5A84 LDR X30, [X31 + 0x30]
	0x034B5A88 ADD X31, X31, 0x50
	0x034B5A8C RET
	0x034B5A90 SUB X31, X31, 0x60
	0x034B5A94 STR X30, [X31 + 0x30]
	0x034B5A98 STP X22, X21, [X31 + 0x40]
	0x034B5A9C STP X20, X19, [X31 + 0x50]
	0x034B5AA0 ADRP X22, 0xF28000
	0x034B5AA4 LDR X8, [X22 + 0xCB0]
	0x034B5AA8 MOV X19, X2
	0x034B5AAC MOV X21, X1
	0x034B5AB0 MOV X20, X0
	0x034B5AB4 CBNZ X8, 0x34B5B00
	0x034B5AB8 ADRP X12, 0xFFFFFFFFFD638000
	0x034B5ABC LDR V0, [X12 + 0x5B8]
	0x034B5AC0 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5AC4 ADRP X10, 0xFFFFFFFFFD63F000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF29000
	005 Move X8, [X19+3064]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43806720
	009 Move V0, [X12+1464]
	010 Move X8, -43651072
	011 Move X10, -43560960
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3192
	015 Move W11, 22
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3064], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_Voip_DestroyDecoder(System.IntPtr decoder)

Disassembly:
	0x034B5AC8 ADD X8, X8, 0xDD2
	0x034B5ACC MOVZ W9, 0x11
	0x034B5AD0 ADD X10, X10, 0x4E5
	0x034B5AD4 MOVZ W11, 0x20
	0x034B5AD8 MOVZ W13, 0x18
	0x034B5ADC ADD X0, X31, 0x0
	0x034B5AE0 STP X8, X9, [X31]
	0x034B5AE4 STP X10, X11, [X31 + 0x10]
	0x034B5AE8 STR W13, [X31 + 0x28]
	0x034B5AEC STR D0, [X31 + 0x20]
	0x034B5AF0 STRB W31, [X31 + 0x2C]
	0x034B5AF4 BL 0x1C1729C
	0x034B5AF8 MOV X8, X0
	0x034B5AFC STR X0, [X22 + 0xCB0]
	0x034B5B00 ADD X9, X21, 0x20
	0x034B5B04 CMP X21, 0x0
	0x034B5B08 CSEL X1, X31, X9, EQ
	0x034B5B0C MOV X0, X20
	0x034B5B10 MOV X2, X19
	0x034B5B14 BLR X8
	0x034B5B18 LDP X20, X19, [X31 + 0x50]
	0x034B5B1C LDP X22, X21, [X31 + 0x40]
	0x034B5B20 LDR X30, [X31 + 0x30]
	0x034B5B24 ADD X31, X31, 0x60
	0x034B5B28 RET
	0x034B5B2C SUB X31, X31, 0x60
	0x034B5B30 STR X30, [X31 + 0x30]
	0x034B5B34 STP X22, X21, [X31 + 0x40]
	0x034B5B38 STP X20, X19, [X31 + 0x50]
	0x034B5B3C ADRP X22, 0xF28000
	0x034B5B40 LDR X8, [X22 + 0xCB8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+3072]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3183
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3072], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UInt64 compressedSize)

Disassembly:
	0x034B5B44 MOV X19, X2
	0x034B5B48 MOV X21, X1
	0x034B5B4C MOV X20, X0
	0x034B5B50 CBNZ X8, 0x34B5B9C
	0x034B5B54 ADRP X12, 0xFFFFFFFFFD638000
	0x034B5B58 LDR V0, [X12 + 0x5B8]
	0x034B5B5C ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5B60 ADRP X10, 0xFFFFFFFFFD63B000
	0x034B5B64 ADD X8, X8, 0xDD2
	0x034B5B68 MOVZ W9, 0x11
	0x034B5B6C ADD X10, X10, 0x1E5
	0x034B5B70 MOVZ W11, 0x20
	0x034B5B74 MOVZ W13, 0x18
	0x034B5B78 ADD X0, X31, 0x0
	0x034B5B7C STP X8, X9, [X31]
	0x034B5B80 STP X10, X11, [X31 + 0x10]
	0x034B5B84 STR W13, [X31 + 0x28]
	0x034B5B88 STR D0, [X31 + 0x20]
	0x034B5B8C STRB W31, [X31 + 0x2C]
	0x034B5B90 BL 0x1C1729C
	0x034B5B94 MOV X8, X0
	0x034B5B98 STR X0, [X22 + 0xCB8]
	0x034B5B9C ADD X9, X21, 0x20
	0x034B5BA0 CMP X21, 0x0
	0x034B5BA4 CSEL X1, X31, X9, EQ
	0x034B5BA8 MOV X0, X20
	0x034B5BAC MOV X2, X19
	0x034B5BB0 BLR X8
	0x034B5BB4 LDP X20, X19, [X31 + 0x50]
	0x034B5BB8 LDP X22, X21, [X31 + 0x40]
	0x034B5BBC LDR X30, [X31 + 0x30]
	0x034B5BC0 ADD X31, X31, 0x60
	0x034B5BC4 RET
	0x034B5BC8 SUB X31, X31, 0x60
	0x034B5BCC STR X30, [X31 + 0x30]
	0x034B5BD0 STP X22, X21, [X31 + 0x40]
	0x034B5BD4 STP X20, X19, [X31 + 0x50]
	0x034B5BD8 ADRP X22, 0xF28000
	0x034B5BDC LDR X8, [X22 + 0xCC0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF29000
	008 Move X8, [X22+3080]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43806720
	015 Move V0, [X12+1464]
	016 Move X8, -43651072
	017 Move X10, -43569152
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 2908
	021 Move W11, 22
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3080], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return 

Method: System.IntPtr ovr_Microphone_Create()

Disassembly:
	0x034B5BE0 MOV X19, X2
	0x034B5BE4 MOV X21, X1
	0x034B5BE8 MOV X20, X0
	0x034B5BEC CBNZ X8, 0x34B5C38
	0x034B5BF0 ADRP X12, 0xFFFFFFFFFD638000
	0x034B5BF4 LDR V0, [X12 + 0x5B8]
	0x034B5BF8 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5BFC ADRP X10, 0xFFFFFFFFFD655000
	0x034B5C00 ADD X8, X8, 0xDD2
	0x034B5C04 MOVZ W9, 0x11
	0x034B5C08 ADD X10, X10, 0x721
	0x034B5C0C MOVZ W11, 0x2B
	0x034B5C10 MOVZ W13, 0x18
	0x034B5C14 ADD X0, X31, 0x0
	0x034B5C18 STP X8, X9, [X31]
	0x034B5C1C STP X10, X11, [X31 + 0x10]
	0x034B5C20 STR W13, [X31 + 0x28]
	0x034B5C24 STR D0, [X31 + 0x20]
	0x034B5C28 STRB W31, [X31 + 0x2C]
	0x034B5C2C BL 0x1C1729C
	0x034B5C30 MOV X8, X0
	0x034B5C34 STR X0, [X22 + 0xCC0]
	0x034B5C38 ADD X9, X21, 0x20
	0x034B5C3C CMP X21, 0x0
	0x034B5C40 CSEL X1, X31, X9, EQ
	0x034B5C44 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF29000
	005 Move X8, [X19+3088]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43806720
	009 Move V0, [X12+1464]
	010 Move X8, -43651072
	011 Move X10, -43581440
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 627
	015 Move W11, 21
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3088], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_Microphone_Destroy(System.IntPtr obj)

Disassembly:
	0x034B5C48 MOV X2, X19
	0x034B5C4C BLR X8
	0x034B5C50 LDP X20, X19, [X31 + 0x50]
	0x034B5C54 LDP X22, X21, [X31 + 0x40]
	0x034B5C58 LDR X30, [X31 + 0x30]
	0x034B5C5C ADD X31, X31, 0x60
	0x034B5C60 RET
	0x034B5C64 SUB X31, X31, 0x60
	0x034B5C68 STR X30, [X31 + 0x30]
	0x034B5C6C STP X22, X21, [X31 + 0x40]
	0x034B5C70 STP X20, X19, [X31 + 0x50]
	0x034B5C74 ADRP X22, 0xF28000
	0x034B5C78 LDR X8, [X22 + 0xCC8]
	0x034B5C7C MOV X19, X2
	0x034B5C80 MOV X21, X1
	0x034B5C84 MOV X20, X0
	0x034B5C88 CBNZ X8, 0x34B5CD4
	0x034B5C8C ADRP X12, 0xFFFFFFFFFD638000
	0x034B5C90 LDR V0, [X12 + 0x5B8]
	0x034B5C94 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5C98 ADRP X10, 0xFFFFFFFFFD659000
	0x034B5C9C ADD X8, X8, 0xDD2
	0x034B5CA0 MOVZ W9, 0x11
	0x034B5CA4 ADD X10, X10, 0x332
	0x034B5CA8 MOVZ W11, 0x2B
	0x034B5CAC MOVZ W13, 0x18
	0x034B5CB0 ADD X0, X31, 0x0
	0x034B5CB4 STP X8, X9, [X31]
	0x034B5CB8 STP X10, X11, [X31 + 0x10]
	0x034B5CBC STR W13, [X31 + 0x28]
	0x034B5CC0 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+3096]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43597824
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 174
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3096], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_Voip_SetSystemVoipPassthrough(System.Boolean passthrough)

Disassembly:
	0x034B5CC4 STRB W31, [X31 + 0x2C]
	0x034B5CC8 BL 0x1C1729C
	0x034B5CCC MOV X8, X0
	0x034B5CD0 STR X0, [X22 + 0xCC8]
	0x034B5CD4 ADD X9, X21, 0x20
	0x034B5CD8 CMP X21, 0x0
	0x034B5CDC CSEL X1, X31, X9, EQ
	0x034B5CE0 MOV X0, X20
	0x034B5CE4 MOV X2, X19
	0x034B5CE8 BLR X8
	0x034B5CEC LDP X20, X19, [X31 + 0x50]
	0x034B5CF0 LDP X22, X21, [X31 + 0x40]
	0x034B5CF4 LDR X30, [X31 + 0x30]
	0x034B5CF8 ADD X31, X31, 0x60
	0x034B5CFC RET
	0x034B5D00 SUB X31, X31, 0x60
	0x034B5D04 STR X30, [X31 + 0x30]
	0x034B5D08 STP X22, X21, [X31 + 0x40]
	0x034B5D0C STP X20, X19, [X31 + 0x50]
	0x034B5D10 ADRP X22, 0xF28000
	0x034B5D14 LDR X8, [X22 + 0xCD0]
	0x034B5D18 MOV X19, X2
	0x034B5D1C MOV X20, X1
	0x034B5D20 MOV X21, X0
	0x034B5D24 CBNZ X8, 0x34B5D70
	0x034B5D28 ADRP X12, 0xFFFFFFFFFD638000
	0x034B5D2C LDR V0, [X12 + 0x5B8]
	0x034B5D30 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5D34 ADRP X10, 0xFFFFFFFFFD63F000
	0x034B5D38 ADD X8, X8, 0xDD2
	0x034B5D3C MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+3104]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43597824
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 197
	017 Move W11, 33
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3104], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_Voip_SetSystemVoipMicrophoneMuted(Oculus.Platform.VoipMuteState muted)

Disassembly:
	0x034B5D40 ADD X10, X10, 0x506
	0x034B5D44 MOVZ W11, 0x1F
	0x034B5D48 MOVZ W13, 0x18
	0x034B5D4C ADD X0, X31, 0x0
	0x034B5D50 STP X8, X9, [X31]
	0x034B5D54 STP X10, X11, [X31 + 0x10]
	0x034B5D58 STR W13, [X31 + 0x28]
	0x034B5D5C STR D0, [X31 + 0x20]
	0x034B5D60 STRB W31, [X31 + 0x2C]
	0x034B5D64 BL 0x1C1729C
	0x034B5D68 MOV X8, X0
	0x034B5D6C STR X0, [X22 + 0xCD0]
	0x034B5D70 MOV X0, X21
	0x034B5D74 MOV X1, X20
	0x034B5D78 MOV X2, X19
	0x034B5D7C BLR X8
	0x034B5D80 LDP X20, X19, [X31 + 0x50]
	0x034B5D84 LDP X22, X21, [X31 + 0x40]
	0x034B5D88 LDR X30, [X31 + 0x30]
	0x034B5D8C CMP W0, 0x0
	0x034B5D90 CSET W0, NE
	0x034B5D94 ADD X31, X31, 0x60
	0x034B5D98 RET
	0x034B5D9C SUB X31, X31, 0x60
	0x034B5DA0 STP X30, X23, [X31 + 0x30]
	0x034B5DA4 STP X22, X21, [X31 + 0x40]
	0x034B5DA8 STP X20, X19, [X31 + 0x50]
	0x034B5DAC ADRP X23, 0xF28000
	0x034B5DB0 LDR X8, [X23 + 0xCD8]
	0x034B5DB4 MOV X19, X3
	0x034B5DB8 MOV X21, X2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+3112]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43626496
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3222
	017 Move W11, 37
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3112], X0
	030 Move W0, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_UnityResetTestPlatform()

Disassembly:
	0x034B5DBC MOV X20, X1
	0x034B5DC0 MOV X22, X0
	0x034B5DC4 CBNZ X8, 0x34B5E10
	0x034B5DC8 ADRP X12, 0xFFFFFFFFFD638000
	0x034B5DCC LDR V0, [X12 + 0x5B8]
	0x034B5DD0 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5DD4 ADRP X10, 0xFFFFFFFFFD657000
	0x034B5DD8 ADD X8, X8, 0xDD2
	0x034B5DDC MOVZ W9, 0x11
	0x034B5DE0 ADD X10, X10, 0x1E7
	0x034B5DE4 MOVZ W11, 0x21
	0x034B5DE8 MOVZ W13, 0x20
	0x034B5DEC ADD X0, X31, 0x0
	0x034B5DF0 STP X8, X9, [X31]
	0x034B5DF4 STP X10, X11, [X31 + 0x10]
	0x034B5DF8 STR W13, [X31 + 0x28]
	0x034B5DFC STR D0, [X31 + 0x20]
	0x034B5E00 STRB W31, [X31 + 0x2C]
	0x034B5E04 BL 0x1C1729C
	0x034B5E08 MOV X8, X0
	0x034B5E0C STR X0, [X23 + 0xCD8]
	0x034B5E10 ADD X9, X21, 0x20
	0x034B5E14 CMP X21, 0x0
	0x034B5E18 CSEL X2, X31, X9, EQ
	0x034B5E1C MOV X0, X22

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF29000
	005 Move X0, [X19+3120]
	006 Compare X0, 0
	007 JumpIfNotEqual {26}
	008 Move X12, -43806720
	009 Move V0, [X12+1464]
	010 Move X8, -43651072
	011 Move X10, -43696128
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1016
	015 Move W11, 26
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move [X19+3120], X0
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X30, [X31+48]
	028 Move X19, [X31+56]
	029 Add X31, X31, 64
	030 Return 

Method: System.UInt64 ovr_HTTP_GetWithMessageType(System.String url, System.Int32 messageType)

Disassembly:
	0x034B5E20 MOV X1, X20
	0x034B5E24 MOV X3, X19
	0x034B5E28 BLR X8
	0x034B5E2C LDP X20, X19, [X31 + 0x50]
	0x034B5E30 LDP X22, X21, [X31 + 0x40]
	0x034B5E34 LDP X30, X23, [X31 + 0x30]
	0x034B5E38 ADD X31, X31, 0x60
	0x034B5E3C RET
	0x034B5E40 SUB X31, X31, 0x60
	0x034B5E44 STP X30, X23, [X31 + 0x30]
	0x034B5E48 STP X22, X21, [X31 + 0x40]
	0x034B5E4C STP X20, X19, [X31 + 0x50]
	0x034B5E50 ADRP X23, 0xF28000
	0x034B5E54 LDR X8, [X23 + 0xCE0]
	0x034B5E58 MOV X19, X3
	0x034B5E5C MOV X21, X2
	0x034B5E60 MOV X20, X1
	0x034B5E64 MOV X22, X0
	0x034B5E68 CBNZ X8, 0x34B5EB4
	0x034B5E6C ADRP X12, 0xFFFFFFFFFD638000
	0x034B5E70 LDR V0, [X12 + 0x5B8]
	0x034B5E74 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5E78 ADRP X10, 0xFFFFFFFFFD672000
	0x034B5E7C ADD X8, X8, 0xDD2
	0x034B5E80 MOVZ W9, 0x11
	0x034B5E84 ADD X10, X10, 0xB9E
	0x034B5E88 MOVZ W11, 0x21
	0x034B5E8C MOVZ W13, 0x20
	0x034B5E90 ADD X0, X31, 0x0
	0x034B5E94 STP X8, X9, [X31]
	0x034B5E98 STP X10, X11, [X31 + 0x10]
	0x034B5E9C STR W13, [X31 + 0x28]
	0x034B5EA0 STR D0, [X31 + 0x20]
	0x034B5EA4 STRB W31, [X31 + 0x2C]
	0x034B5EA8 BL 0x1C1729C
	0x034B5EAC MOV X8, X0
	0x034B5EB0 STR X0, [X23 + 0xCE0]
	0x034B5EB4 ADD X9, X21, 0x20
	0x034B5EB8 CMP X21, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF29000
	007 Move X8, [X21+3128]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {31}
	012 Move X12, -43806720
	013 Move V0, [X12+1464]
	014 Move X8, -43651072
	015 Move X10, -43589632
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 673
	019 Move W11, 27
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move [X21+3128], X0
	031 Move X0, X20
	032 Call 0x1C1827C
	033 Move X8, [X21+3128]
	034 Move W1, W19
	035 Move X20, X0
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X19, X0
	038 Move X0, X20
	039 Call 0x1C18290
	040 Move X0, X19
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X30, [X31+48]
	044 Move X21, [X31+56]
	045 Add X31, X31, 80
	046 Return X0

Method: System.Void ovr_CrashApplication()

Disassembly:
	0x034B5EBC CSEL X2, X31, X9, EQ
	0x034B5EC0 MOV X0, X22
	0x034B5EC4 MOV X1, X20
	0x034B5EC8 MOV X3, X19
	0x034B5ECC BLR X8
	0x034B5ED0 LDP X20, X19, [X31 + 0x50]
	0x034B5ED4 LDP X22, X21, [X31 + 0x40]
	0x034B5ED8 LDP X30, X23, [X31 + 0x30]
	0x034B5EDC ADD X31, X31, 0x60
	0x034B5EE0 RET
	0x034B5EE4 SUB X31, X31, 0x40
	0x034B5EE8 STP X30, X19, [X31 + 0x30]
	0x034B5EEC ADRP X19, 0xF28000
	0x034B5EF0 LDR X8, [X19 + 0xCE8]
	0x034B5EF4 CBNZ X8, 0x34B5F3C
	0x034B5EF8 ADRP X12, 0xFFFFFFFFFD638000
	0x034B5EFC LDR V0, [X12 + 0x5B8]
	0x034B5F00 ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5F04 ADRP X10, 0xFFFFFFFFFD676000
	0x034B5F08 ADD X8, X8, 0xDD2
	0x034B5F0C MOVZ W9, 0x11
	0x034B5F10 ADD X10, X10, 0xB0E
	0x034B5F14 MOVZ W11, 0x22
	0x034B5F18 ADD X0, X31, 0x0
	0x034B5F1C STR W31, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF29000
	005 Move X0, [X19+3136]
	006 Compare X0, 0
	007 JumpIfNotEqual {26}
	008 Move X12, -43806720
	009 Move V0, [X12+1464]
	010 Move X8, -43651072
	011 Move X10, -43614208
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 199
	015 Move W11, 20
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move [X19+3136], X0
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X30, [X31+48]
	028 Move X19, [X31+56]
	029 Add X31, X31, 64
	030 Return 

Method: System.Void ovr_Voip_SetMicrophoneFilterCallback(Oculus.Platform.CAPI/FilterCallback cb)

Disassembly:
	0x034B5F20 STP X8, X9, [X31]
	0x034B5F24 STP X10, X11, [X31 + 0x10]
	0x034B5F28 STR D0, [X31 + 0x20]
	0x034B5F2C STRB W31, [X31 + 0x2C]
	0x034B5F30 BL 0x1C1729C
	0x034B5F34 MOV X8, X0
	0x034B5F38 STR X0, [X19 + 0xCE8]
	0x034B5F3C BLR X8
	0x034B5F40 LDP X30, X19, [X31 + 0x30]
	0x034B5F44 ADD X31, X31, 0x40
	0x034B5F48 RET
	0x034B5F4C SUB X31, X31, 0x60
	0x034B5F50 STR X30, [X31 + 0x30]
	0x034B5F54 STP X22, X21, [X31 + 0x40]
	0x034B5F58 STP X20, X19, [X31 + 0x50]
	0x034B5F5C ADRP X22, 0xF28000
	0x034B5F60 LDR X8, [X22 + 0xCF0]
	0x034B5F64 MOV X19, X2
	0x034B5F68 MOV X20, X1
	0x034B5F6C MOV X21, X0
	0x034B5F70 CBNZ X8, 0x34B5FBC
	0x034B5F74 ADRP X12, 0xFFFFFFFFFD638000
	0x034B5F78 LDR V0, [X12 + 0x5B8]
	0x034B5F7C ADRP X8, 0xFFFFFFFFFD65E000
	0x034B5F80 ADRP X10, 0xFFFFFFFFFD671000
	0x034B5F84 ADD X8, X8, 0xDD2
	0x034B5F88 MOVZ W9, 0x11
	0x034B5F8C ADD X10, X10, 0x1FD
	0x034B5F90 MOVZ W11, 0x1C
	0x034B5F94 MOVZ W13, 0x18
	0x034B5F98 ADD X0, X31, 0x0
	0x034B5F9C STP X8, X9, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF29000
	006 Move X8, [X20+3144]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X12, -43806720
	011 Move V0, [X12+1464]
	012 Move X8, -43651072
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 510
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move [X20+3144], X0
	029 Move X0, X19
	030 Call 0x1C18294
	031 Move X8, [X20+3144]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Move X30, [X31+48]
	036 Add X31, X31, 80
	037 Return 

Method: System.Void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(Oculus.Platform.CAPI/FilterCallback cb, System.UIntPtr bufferSizeElements)

Disassembly:
	0x034B5FA0 STP X10, X11, [X31 + 0x10]
	0x034B5FA4 STR W13, [X31 + 0x28]
	0x034B5FA8 STR D0, [X31 + 0x20]
	0x034B5FAC STRB W31, [X31 + 0x2C]
	0x034B5FB0 BL 0x1C1729C
	0x034B5FB4 MOV X8, X0
	0x034B5FB8 STR X0, [X22 + 0xCF0]
	0x034B5FBC MOV X0, X21
	0x034B5FC0 MOV X1, X20
	0x034B5FC4 MOV X2, X19
	0x034B5FC8 BLR X8
	0x034B5FCC LDP X20, X19, [X31 + 0x50]
	0x034B5FD0 LDP X22, X21, [X31 + 0x40]
	0x034B5FD4 LDR X30, [X31 + 0x30]
	0x034B5FD8 CMP W0, 0x0
	0x034B5FDC CSET W0, NE
	0x034B5FE0 ADD X31, X31, 0x60
	0x034B5FE4 RET
	0x034B5FE8 SUB X31, X31, 0x50
	0x034B5FEC STP X30, X21, [X31 + 0x30]
	0x034B5FF0 STP X20, X19, [X31 + 0x40]
	0x034B5FF4 ADRP X21, 0xF28000
	0x034B5FF8 LDR X8, [X21 + 0xCF8]
	0x034B5FFC MOV X19, X1
	0x034B6000 MOV X20, X0
	0x034B6004 CBNZ X8, 0x34B6050
	0x034B6008 ADRP X12, 0xFFFFFFFFFD637000
	0x034B600C LDR V0, [X12 + 0x5B8]
	0x034B6010 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6014 ADRP X10, 0xFFFFFFFFFD63C000
	0x034B6018 ADD X8, X8, 0xDD2
	0x034B601C MOVZ W9, 0x11
	0x034B6020 ADD X10, X10, 0x609
	0x034B6024 MOVZ W11, 0x1F

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF29000
	007 Move X8, [X21+3152]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {31}
	012 Move X12, -43806720
	013 Move V0, [X12+1464]
	014 Move X8, -43651072
	015 Move X10, -43794432
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 429
	019 Move W11, 55
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move [X21+3152], X0
	031 Move X0, X20
	032 Call 0x1C18294
	033 Move X8, [X21+3152]
	034 Move X1, X19
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X30, [X31+48]
	039 Move X21, [X31+56]
	040 Add X31, X31, 80
	041 Return 

Method: System.Void LogNewUnifiedEvent(Oculus.Platform.LogEventName eventName, System.Collections.Generic.Dictionary`2<System.String, System.String> values)

Disassembly:
	0x034B6028 MOVZ W13, 0x10
	0x034B602C ADD X0, X31, 0x0
	0x034B6030 STP X8, X9, [X31]
	0x034B6034 STP X10, X11, [X31 + 0x10]
	0x034B6038 STR W13, [X31 + 0x28]
	0x034B603C STR D0, [X31 + 0x20]
	0x034B6040 STRB W31, [X31 + 0x2C]
	0x034B6044 BL 0x1C1729C
	0x034B6048 MOV X8, X0
	0x034B604C STR X0, [X21 + 0xCF8]
	0x034B6050 MOV X0, X20
	0x034B6054 MOV X1, X19
	0x034B6058 BLR X8
	0x034B605C LDP X20, X19, [X31 + 0x40]
	0x034B6060 LDP X30, X21, [X31 + 0x30]
	0x034B6064 ADD X31, X31, 0x50
	0x034B6068 RET
	0x034B606C SUB X31, X31, 0x40
	0x034B6070 STP X30, X19, [X31 + 0x30]
	0x034B6074 ADRP X19, 0xF27000
	0x034B6078 LDR X8, [X19 + 0xD00]
	0x034B607C CBNZ X8, 0x34B60C4
	0x034B6080 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6084 LDR V0, [X12 + 0x5B8]
	0x034B6088 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B608C ADRP X10, 0xFFFFFFFFFD638000
	0x034B6090 ADD X8, X8, 0xDD2
	0x034B6094 MOVZ W9, 0x11
	0x034B6098 ADD X10, X10, 0x6EF
	0x034B609C MOVZ W11, 0x22
	0x034B60A0 ADD X0, X31, 0x0
	0x034B60A4 STR W31, [X31 + 0x28]
	0x034B60A8 STP X8, X9, [X31]
	0x034B60AC STP X10, X11, [X31 + 0x10]
	0x034B60B0 STR D0, [X31 + 0x20]
	0x034B60B4 STRB W31, [X31 + 0x2C]
	0x034B60B8 BL 0x1C1729C
	0x034B60BC MOV X8, X0
	0x034B60C0 STR X0, [X19 + 0xD00]
	0x034B60C4 BLR X8
	0x034B60C8 LDP X30, X19, [X31 + 0x30]
	0x034B60CC ADD X31, X31, 0x40

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0xF28000
	009 Move X23, 0xC7D000
	010 Move X21, 0xC7D000
	011 Move W8, [X22+3160]
	012 Move X23, [X23+1096]
	013 Move X21, [X21+808]
	014 Move X19, X1
	015 Move W20, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xC7D000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0xC7D000
	024 Move X0, [X0+1096]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3160], W8
	028 Move X8, [X23]
	029 Move TEMP, 0
	030 Not TEMP
	031 Move X9, TEMP
	032 Add X0, X31, 8
	033 Move X1, X31
	034 Move [X31+8], X8
	035 Move [X31+16], X9
	036 Move [X31+24], W20
	037 Call Enum.ToString, X0
	038 Move X8, [X21]
	039 Move X20, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X19
	047 Call CAPI.LogNewEvent, X0, X1
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X30, [X31+32]
	053 Move X23, [X31+40]
	054 Add X31, X31, 80
	055 Return 

Method: System.Void LogNewEvent(System.String eventName, System.Collections.Generic.Dictionary`2<System.String, System.String> values)

Disassembly:
	0x034B60D0 RET
	0x034B60D4 SUB X31, X31, 0x40
	0x034B60D8 STP X30, X19, [X31 + 0x30]
	0x034B60DC ADRP X19, 0xF27000
	0x034B60E0 LDR X8, [X19 + 0xD08]
	0x034B60E4 CBNZ X8, 0x34B612C
	0x034B60E8 ADRP X12, 0xFFFFFFFFFD637000
	0x034B60EC LDR V0, [X12 + 0x5B8]
	0x034B60F0 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B60F4 ADRP X10, 0xFFFFFFFFFD64C000
	0x034B60F8 ADD X8, X8, 0xDD2
	0x034B60FC MOVZ W9, 0x11
	0x034B6100 ADD X10, X10, 0x1C9
	0x034B6104 MOVZ W11, 0x26
	0x034B6108 ADD X0, X31, 0x0
	0x034B610C STR W31, [X31 + 0x28]
	0x034B6110 STP X8, X9, [X31]
	0x034B6114 STP X10, X11, [X31 + 0x10]
	0x034B6118 STR D0, [X31 + 0x20]
	0x034B611C STRB W31, [X31 + 0x2C]
	0x034B6120 BL 0x1C1729C
	0x034B6124 MOV X8, X0
	0x034B6128 STR X0, [X19 + 0xD08]
	0x034B612C BLR X8
	0x034B6130 LDP X30, X19, [X31 + 0x30]
	0x034B6134 ADD X31, X31, 0x40
	0x034B6138 RET
	0x034B613C SUB X31, X31, 0x40
	0x034B6140 STP X30, X19, [X31 + 0x30]
	0x034B6144 ADRP X19, 0xF27000
	0x034B6148 LDR X8, [X19 + 0xD10]
	0x034B614C CBNZ X8, 0x34B6194
	0x034B6150 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6154 LDR V0, [X12 + 0x5B8]
	0x034B6158 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B615C ADRP X10, 0xFFFFFFFFFD64C000
	0x034B6160 ADD X8, X8, 0xDD2
	0x034B6164 MOVZ W9, 0x11
	0x034B6168 ADD X10, X10, 0x1F0
	0x034B616C MOVZ W11, 0x22
	0x034B6170 ADD X0, X31, 0x0
	0x034B6174 STR W31, [X31 + 0x28]
	0x034B6178 STP X8, X9, [X31]
	0x034B617C STP X10, X11, [X31 + 0x10]
	0x034B6180 STR D0, [X31 + 0x20]
	0x034B6184 STRB W31, [X31 + 0x2C]
	0x034B6188 BL 0x1C1729C
	0x034B618C MOV X8, X0
	0x034B6190 STR X0, [X19 + 0xD10]
	0x034B6194 BLR X8
	0x034B6198 LDP X30, X19, [X31 + 0x30]
	0x034B619C CMP W0, 0x0
	0x034B61A0 CSET W0, NE
	0x034B61A4 ADD X31, X31, 0x40
	0x034B61A8 RET
	0x034B61AC SUB X31, X31, 0x40
	0x034B61B0 STP X30, X19, [X31 + 0x30]
	0x034B61B4 ADRP X19, 0xF27000
	0x034B61B8 LDR X8, [X19 + 0xD18]
	0x034B61BC CBNZ X8, 0x34B6204
	0x034B61C0 ADRP X12, 0xFFFFFFFFFD637000
	0x034B61C4 LDR V0, [X12 + 0x5B8]
	0x034B61C8 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B61CC ADRP X10, 0xFFFFFFFFFD646000
	0x034B61D0 ADD X8, X8, 0xDD2
	0x034B61D4 MOVZ W9, 0x11
	0x034B61D8 ADD X10, X10, 0x6D3
	0x034B61DC MOVZ W11, 0x1D
	0x034B61E0 ADD X0, X31, 0x0
	0x034B61E4 STR W31, [X31 + 0x28]
	0x034B61E8 STP X8, X9, [X31]
	0x034B61EC STP X10, X11, [X31 + 0x10]
	0x034B61F0 STR D0, [X31 + 0x20]
	0x034B61F4 STRB W31, [X31 + 0x2C]
	0x034B61F8 BL 0x1C1729C
	0x034B61FC MOV X8, X0
	0x034B6200 STR X0, [X19 + 0xD18]
	0x034B6204 BLR X8
	0x034B6208 LDP X30, X19, [X31 + 0x30]
	0x034B620C ADD X31, X31, 0x40
	0x034B6210 RET
	0x034B6214 SUB X31, X31, 0x50
	0x034B6218 STR X30, [X31 + 0x30]
	0x034B621C STP X20, X19, [X31 + 0x40]
	0x034B6220 ADRP X20, 0xF27000
	0x034B6224 LDR X8, [X20 + 0xD20]
	0x034B6228 MOV X19, X0
	0x034B622C CBNZ X8, 0x34B6278
	0x034B6230 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6234 LDR V0, [X12 + 0x5B8]
	0x034B6238 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B623C ADRP X10, 0xFFFFFFFFFD663000
	0x034B6240 ADD X8, X8, 0xDD2
	0x034B6244 MOVZ W9, 0x11
	0x034B6248 ADD X10, X10, 0xCBC
	0x034B624C MOVZ W11, 0xF
	0x034B6250 MOVZ W13, 0x8
	0x034B6254 ADD X0, X31, 0x0
	0x034B6258 STP X8, X9, [X31]
	0x034B625C STP X10, X11, [X31 + 0x10]
	0x034B6260 STR W13, [X31 + 0x28]
	0x034B6264 STR D0, [X31 + 0x20]
	0x034B6268 STRB W31, [X31 + 0x2C]
	0x034B626C BL 0x1C1729C
	0x034B6270 MOV X8, X0
	0x034B6274 STR X0, [X20 + 0xD20]
	0x034B6278 MOV X0, X19
	0x034B627C BLR X8
	0x034B6280 LDP X20, X19, [X31 + 0x40]
	0x034B6284 LDR X30, [X31 + 0x30]
	0x034B6288 ADD X31, X31, 0x50
	0x034B628C RET
	0x034B6290 SUB X31, X31, 0x50
	0x034B6294 STR X30, [X31 + 0x30]
	0x034B6298 STP X20, X19, [X31 + 0x40]
	0x034B629C ADRP X20, 0xF27000
	0x034B62A0 LDR X8, [X20 + 0xD28]
	0x034B62A4 MOV X19, X0
	0x034B62A8 CBNZ X8, 0x34B62F4
	0x034B62AC ADRP X12, 0xFFFFFFFFFD637000
	0x034B62B0 LDR V0, [X12 + 0x5B8]
	0x034B62B4 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B62B8 ADRP X10, 0xFFFFFFFFFD63E000
	0x034B62BC ADD X8, X8, 0xDD2
	0x034B62C0 MOVZ W9, 0x11
	0x034B62C4 ADD X10, X10, 0x526
	0x034B62C8 MOVZ W11, 0x20
	0x034B62CC MOVZ W13, 0x8
	0x034B62D0 ADD X0, X31, 0x0
	0x034B62D4 STP X8, X9, [X31]
	0x034B62D8 STP X10, X11, [X31 + 0x10]
	0x034B62DC STR W13, [X31 + 0x28]
	0x034B62E0 STR D0, [X31 + 0x20]
	0x034B62E4 STRB W31, [X31 + 0x2C]
	0x034B62E8 BL 0x1C1729C
	0x034B62EC MOV X8, X0
	0x034B62F0 STR X0, [X20 + 0xD28]
	0x034B62F4 MOV X0, X19
	0x034B62F8 BLR X8
	0x034B62FC LDP X20, X19, [X31 + 0x40]
	0x034B6300 LDR X30, [X31 + 0x30]
	0x034B6304 ADD X31, X31, 0x50
	0x034B6308 RET
	0x034B630C SUB X31, X31, 0x50
	0x034B6310 STR X30, [X31 + 0x30]
	0x034B6314 STP X20, X19, [X31 + 0x40]
	0x034B6318 ADRP X20, 0xF27000
	0x034B631C LDR X8, [X20 + 0xD30]
	0x034B6320 MOV X19, X0
	0x034B6324 CBNZ X8, 0x34B6370
	0x034B6328 ADRP X12, 0xFFFFFFFFFD637000
	0x034B632C LDR V0, [X12 + 0x5B8]
	0x034B6330 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6334 ADRP X10, 0xFFFFFFFFFD652000
	0x034B6338 ADD X8, X8, 0xDD2
	0x034B633C MOVZ W9, 0x11
	0x034B6340 ADD X10, X10, 0x413
	0x034B6344 MOVZ W11, 0x18
	0x034B6348 MOVZ W13, 0x8
	0x034B634C ADD X0, X31, 0x0
	0x034B6350 STP X8, X9, [X31]
	0x034B6354 STP X10, X11, [X31 + 0x10]
	0x034B6358 STR W13, [X31 + 0x28]
	0x034B635C STR D0, [X31 + 0x20]
	0x034B6360 STRB W31, [X31 + 0x2C]
	0x034B6364 BL 0x1C1729C
	0x034B6368 MOV X8, X0
	0x034B636C STR X0, [X20 + 0xD30]
	0x034B6370 MOV X0, X19
	0x034B6374 BLR X8
	0x034B6378 LDP X20, X19, [X31 + 0x40]
	0x034B637C LDR X30, [X31 + 0x30]
	0x034B6380 ADD X31, X31, 0x50
	0x034B6384 RET
	0x034B6388 SUB X31, X31, 0x40
	0x034B638C STP X30, X19, [X31 + 0x30]
	0x034B6390 ADRP X19, 0xF27000
	0x034B6394 LDR X8, [X19 + 0xD38]
	0x034B6398 CBNZ X8, 0x34B63E0
	0x034B639C ADRP X12, 0xFFFFFFFFFD637000
	0x034B63A0 LDR V0, [X12 + 0x5B8]
	0x034B63A4 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B63A8 ADRP X10, 0xFFFFFFFFFD656000
	0x034B63AC ADD X8, X8, 0xDD2
	0x034B63B0 MOVZ W9, 0x11
	0x034B63B4 ADD X10, X10, 0x209
	0x034B63B8 MOVZ W11, 0x1F
	0x034B63BC ADD X0, X31, 0x0
	0x034B63C0 STR W31, [X31 + 0x28]
	0x034B63C4 STP X8, X9, [X31]
	0x034B63C8 STP X10, X11, [X31 + 0x10]
	0x034B63CC STR D0, [X31 + 0x20]
	0x034B63D0 STRB W31, [X31 + 0x2C]
	0x034B63D4 BL 0x1C1729C
	0x034B63D8 MOV X8, X0
	0x034B63DC STR X0, [X19 + 0xD38]
	0x034B63E0 BLR X8
	0x034B63E4 LDP X30, X19, [X31 + 0x30]
	0x034B63E8 ADD X31, X31, 0x40
	0x034B63EC RET
	0x034B63F0 SUB X31, X31, 0x60
	0x034B63F4 STR X30, [X31 + 0x30]
	0x034B63F8 STP X22, X21, [X31 + 0x40]
	0x034B63FC STP X20, X19, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X20, 0xF28000
	013 Move X24, 0xC7D000
	014 Move W8, [X20+3161]
	015 Move X24, [X24+808]
	016 Move X22, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0xC7D000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0xC43000
	026 Move X0, [X0+1256]
	027 Call 0x1C17CF4
	028 Move X0, 0xC7C000
	029 Move X0, [X0+1112]
	030 Call 0x1C17CF4
	031 Move X0, 0xC43000
	032 Move X0, [X0+1264]
	033 Call 0x1C17CF4
	034 Move X0, 0xC43000
	035 Move X0, [X0+1272]
	036 Call 0x1C17CF4
	037 Move X0, 0xC43000
	038 Move X0, [X0+1280]
	039 Call 0x1C17CF4
	040 Move X0, 0xC77000
	041 Move X0, [X0+1096]
	042 Call 0x1C17CF4
	043 Move X0, 0xC41000
	044 Move X0, [X0+432]
	045 Call 0x1C17CF4
	046 Move X0, 0xC41000
	047 Move X0, [X0+440]
	048 Call 0x1C17CF4
	049 Move X0, 0xC66000
	050 Move X0, [X0+2128]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+3161], W8
	054 Move X0, [X24]
	055 NotImplemented "Instruction MOVI not yet implemented."
	056 Move [X31+80], X31
	057 Move [X31+48], V0
	058 Move [X31+56], V0
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X23, 0xC77000
	064 Move X23, [X23+1096]
	065 Move X0, X19
	066 Call CAPI.StringToNative, X0
	067 Move X20, X0
	068 Compare X22, 0
	069 JumpIfEqual {76}
	070 Move X8, 0xC7C000
	071 Move X8, [X8+1112]
	072 Move X0, X22
	073 Move X1, [X8]
	074 Call Dictionary`2<Object, Object>.get_Count, X0
	075 Move W21, W0
	076 Move W21, W31
	077 Move X0, [X23]
	078 Move W1, W21
	079 ShiftRight W1, 31
	080 And W1, W1, 0x3FFFFFFF
	081 Call 0x1C17D6C
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X19, X0
	084 Compare X22, 0
	085 JumpIfEqual {196}
	086 Move X8, 0xC43000
	087 Move X8, [X8+1256]
	088 Move X26, 0xC43000
	089 Move X25, 0xC43000
	090 Move X0, X22
	091 Move X1, [X8]
	092 Move X26, [X26+1272]
	093 Move X25, [X25+1264]
	094 Add X8, X31, 8
	095 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 Move X8, [X31+40]
	099 Move W27, 1
	100 Move [X31+48], V0
	101 Move [X31+56], V1
	102 Move [X31+80], X8
	103 Move X1, [X26]
	104 Add X0, X31, 48
	105 Call Enumerator<Object, Object>.MoveNext, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {133}
	110 Move X0, [X24]
	111 Move X23, [X31+64]
	112 Move X22, [X31+72]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X23
	118 Call CAPI.StringToNative, X0
	119 Compare X19, 0
	120 JumpIfEqual {194}
	121 Move W9, [X19+24]
	122 Subtract W8, W27, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X8, X19, W8
	125 Move [X8+32], X0
	126 Move X0, X22
	127 Call CAPI.StringToNative, X0
	128 Move W8, [X19+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add X8, X19, W27
	131 Add W27, W27, 2
	132 Move [X8+32], X0
	133 Move X1, [X25]
	134 Add X0, X31, 48
	135 Call Enumerator<Object, Object>.Dispose, X0
	136 Move X22, 0xC66000
	137 Move X22, [X22+2128]
	138 Move X0, W21
	139 Move X1, X31
	140 Call UIntPtr.op_Explicit, X0
	141 Move X8, [X24]
	142 Move X21, X0
	143 Move W9, [X8+224]
	144 Compare W9, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X8
	147 Call 0x1C17DFC
	148 Move X0, X20
	149 Move X1, X19
	150 Move X2, X21
	151 Call CAPI.ovr_Log_NewEvent, X0, X1, X2
	152 Move X0, [X22]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X20
	158 Move X1, X31
	159 Call Marshal.FreeCoTaskMem, X0
	160 Compare X19, 0
	161 JumpIfEqual {196}
	162 Move X8, [X19+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X21, X31
	165 And X8, X8, 0
	166 Add X23, X19, 32
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, [X22]
	169 Move X20, [X23]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X20
	175 Move X1, X31
	176 Call Marshal.FreeCoTaskMem, X0
	177 Move W8, [X19+24]
	178 Add X21, X21, 1
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X20, [X31+160]
	181 Move X19, [X31+168]
	182 Move X22, [X31+144]
	183 Move X21, [X31+152]
	184 Move X24, [X31+128]
	185 Move X23, [X31+136]
	186 Move X26, [X31+112]
	187 Move X25, [X31+120]
	188 Move X30, [X31+96]
	189 Move X27, [X31+104]
	190 Add X31, X31, 176
	191 Return 
	192 Call 0x1C17F28
	193 Call 0x1C17F28
	194 Call 0x1C17F20
	195 Call 0x1C17F28
	196 Call 0x1C17F20
	197 Move X22, X0
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, X22
	200 Call 0x3EB2AD0
	201 Move X23, [X0]
	202 Call 0x3EB2AE0
	203 Move X1, [X25]
	204 Add X0, X31, 48
	205 Call Enumerator<Object, Object>.Dispose, X0
	206 Compare X23, 0
	207 JumpIfEqual {136}
	208 Move X0, X23
	209 Call 0x1C17F18
	210 Move X23, X31
	211 Move X22, X0
	212 Move X1, [X25]
	213 Add X0, X31, 48
	214 Call Enumerator<Object, Object>.Dispose, X0
	215 Compare X23, 0
	216 JumpIfNotEqual {219}
	217 Move X0, X22
	218 Call 0x1D2D690
	219 Move X0, X23
	220 Call 0x1C17F18
	221 Call 0x1991590

Method: System.Void ovr_Log_NewEvent(System.IntPtr eventName, System.IntPtr[] values, System.UIntPtr length)

Disassembly:
	0x034B6400 ADRP X22, 0xF27000
	0x034B6404 LDR X8, [X22 + 0xD40]
	0x034B6408 MOV X19, X2
	0x034B640C MOV X21, X1
	0x034B6410 MOV X20, X0
	0x034B6414 CBNZ X8, 0x34B6460
	0x034B6418 ADRP X12, 0xFFFFFFFFFD637000
	0x034B641C LDR V0, [X12 + 0x5B8]
	0x034B6420 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6424 ADRP X10, 0xFFFFFFFFFD66A000
	0x034B6428 ADD X8, X8, 0xDD2
	0x034B642C MOVZ W9, 0x11
	0x034B6430 ADD X10, X10, 0xE7
	0x034B6434 MOVZ W11, 0xF
	0x034B6438 MOVZ W13, 0x18
	0x034B643C ADD X0, X31, 0x0
	0x034B6440 STP X8, X9, [X31]
	0x034B6444 STP X10, X11, [X31 + 0x10]
	0x034B6448 STR W13, [X31 + 0x28]
	0x034B644C STR D0, [X31 + 0x20]
	0x034B6450 STRB W31, [X31 + 0x2C]
	0x034B6454 BL 0x1C1729C
	0x034B6458 MOV X8, X0
	0x034B645C STR X0, [X22 + 0xD40]
	0x034B6460 ADD X9, X21, 0x20
	0x034B6464 CMP X21, 0x0
	0x034B6468 CSEL X1, X31, X9, EQ
	0x034B646C MOV X0, X20
	0x034B6470 MOV X2, X19
	0x034B6474 BLR X8
	0x034B6478 LDP X20, X19, [X31 + 0x50]
	0x034B647C LDP X22, X21, [X31 + 0x40]
	0x034B6480 LDR X30, [X31 + 0x30]
	0x034B6484 ADD X31, X31, 0x60
	0x034B6488 RET
	0x034B648C SUB X31, X31, 0x60
	0x034B6490 STR X30, [X31 + 0x30]
	0x034B6494 STP X22, X21, [X31 + 0x40]
	0x034B6498 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF28000
	008 Move X8, [X22+3168]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43810816
	015 Move V0, [X12+1464]
	016 Move X8, -43655168
	017 Move X10, -43749376
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1695
	021 Move W11, 16
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3168], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return 

Method: System.IntPtr ovr_ApplicationLifecycle_GetLaunchDetails()

Disassembly:
	0x034B649C ADRP X22, 0xF27000
	0x034B64A0 LDR X8, [X22 + 0xD48]
	0x034B64A4 MOV X19, X2
	0x034B64A8 MOV X21, X1
	0x034B64AC MOV X20, X0
	0x034B64B0 CBNZ X8, 0x34B64FC
	0x034B64B4 ADRP X12, 0xFFFFFFFFFD637000
	0x034B64B8 LDR V0, [X12 + 0x5B8]
	0x034B64BC ADRP X8, 0xFFFFFFFFFD65D000
	0x034B64C0 ADRP X10, 0xFFFFFFFFFD64A000
	0x034B64C4 ADD X8, X8, 0xDD2
	0x034B64C8 MOVZ W9, 0x11
	0x034B64CC ADD X10, X10, 0x223
	0x034B64D0 MOVZ W11, 0x14
	0x034B64D4 MOVZ W13, 0x18
	0x034B64D8 ADD X0, X31, 0x0
	0x034B64DC STP X8, X9, [X31]
	0x034B64E0 STP X10, X11, [X31 + 0x10]
	0x034B64E4 STR W13, [X31 + 0x28]
	0x034B64E8 STR D0, [X31 + 0x20]
	0x034B64EC STRB W31, [X31 + 0x2C]
	0x034B64F0 BL 0x1C1729C
	0x034B64F4 MOV X8, X0
	0x034B64F8 STR X0, [X22 + 0xD48]
	0x034B64FC ADD X9, X21, 0x20
	0x034B6500 CMP X21, 0x0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF28000
	005 Move X8, [X19+3176]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43810816
	009 Move V0, [X12+1464]
	010 Move X8, -43655168
	011 Move X10, -43618304
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 220
	015 Move W11, 41
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3176], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_ApplicationLifecycle_LogDeeplinkResult(System.String trackingID, Oculus.Platform.LaunchResult result)

Disassembly:
	0x034B6504 CSEL X1, X31, X9, EQ
	0x034B6508 MOV X0, X20
	0x034B650C MOV X2, X19
	0x034B6510 BLR X8
	0x034B6514 LDP X20, X19, [X31 + 0x50]
	0x034B6518 LDP X22, X21, [X31 + 0x40]
	0x034B651C LDR X30, [X31 + 0x30]
	0x034B6520 ADD X31, X31, 0x60
	0x034B6524 RET
	0x034B6528 SUB X31, X31, 0x50
	0x034B652C STR X30, [X31 + 0x30]
	0x034B6530 STP X20, X19, [X31 + 0x40]
	0x034B6534 ADRP X20, 0xF27000
	0x034B6538 LDR X8, [X20 + 0xD50]
	0x034B653C MOV X19, X0
	0x034B6540 CBNZ X8, 0x34B658C
	0x034B6544 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6548 LDR V0, [X12 + 0x5B8]
	0x034B654C ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6550 ADRP X10, 0xFFFFFFFFFD63C000
	0x034B6554 ADD X8, X8, 0xDD2
	0x034B6558 MOVZ W9, 0x11
	0x034B655C ADD X10, X10, 0x629
	0x034B6560 MOVZ W11, 0x13
	0x034B6564 MOVZ W13, 0x8
	0x034B6568 ADD X0, X31, 0x0
	0x034B656C STP X8, X9, [X31]
	0x034B6570 STP X10, X11, [X31 + 0x10]
	0x034B6574 STR W13, [X31 + 0x28]
	0x034B6578 STR D0, [X31 + 0x20]
	0x034B657C STRB W31, [X31 + 0x2C]
	0x034B6580 BL 0x1C1729C
	0x034B6584 MOV X8, X0
	0x034B6588 STR X0, [X20 + 0xD50]
	0x034B658C MOV X0, X19
	0x034B6590 BLR X8
	0x034B6594 LDP X20, X19, [X31 + 0x40]
	0x034B6598 LDR X30, [X31 + 0x30]
	0x034B659C ADD X31, X31, 0x50

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF28000
	007 Move X21, 0xC7D000
	008 Move W8, [X22+3184]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC7D000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC66000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3184], W8
	024 Move X0, [X21]
	025 Move X21, 0xC66000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move W1, W19
	034 Move X20, X0
	035 Call CAPI.ovr_ApplicationLifecycle_LogDeeplinkResult_Native, X0, X1
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X1, X31
	047 Move X30, [X31+48]
	048 Call Marshal.FreeCoTaskMem, X0
	049 Return 

Method: System.Void ovr_ApplicationLifecycle_LogDeeplinkResult_Native(System.IntPtr trackingID, Oculus.Platform.LaunchResult result)

Disassembly:
	0x034B65A0 RET
	0x034B65A4 SUB X31, X31, 0x60
	0x034B65A8 STP X30, X23, [X31 + 0x30]
	0x034B65AC STP X22, X21, [X31 + 0x40]
	0x034B65B0 STP X20, X19, [X31 + 0x50]
	0x034B65B4 ADRP X23, 0xF27000
	0x034B65B8 LDR X8, [X23 + 0xD58]
	0x034B65BC MOV X20, X3
	0x034B65C0 MOV X19, X2
	0x034B65C4 MOV X22, X1
	0x034B65C8 MOV X21, X0
	0x034B65CC CBNZ X8, 0x34B6618
	0x034B65D0 ADRP X12, 0xFFFFFFFFFD637000
	0x034B65D4 LDR V0, [X12 + 0x5B8]
	0x034B65D8 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B65DC ADRP X10, 0xFFFFFFFFFD652000
	0x034B65E0 ADD X8, X8, 0xDD2
	0x034B65E4 MOVZ W9, 0x11
	0x034B65E8 ADD X10, X10, 0x42C
	0x034B65EC MOVZ W11, 0x1C
	0x034B65F0 MOVZ W13, 0x20
	0x034B65F4 ADD X0, X31, 0x0
	0x034B65F8 STP X8, X9, [X31]
	0x034B65FC STP X10, X11, [X31 + 0x10]
	0x034B6600 STR W13, [X31 + 0x28]
	0x034B6604 STR D0, [X31 + 0x20]
	0x034B6608 STRB W31, [X31 + 0x2C]
	0x034B660C BL 0x1C1729C
	0x034B6610 MOV X8, X0
	0x034B6614 STR X0, [X23 + 0xD58]
	0x034B6618 ADD X9, X22, 0x20
	0x034B661C CMP X22, 0x0
	0x034B6620 ADD X10, X20, 0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF28000
	007 Move X8, [X21+3192]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43810816
	013 Move V0, [X12+1464]
	014 Move X8, -43655168
	015 Move X10, -43573248
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2931
	019 Move W11, 42
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3192], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.UInt64 ovr_HTTP_StartTransfer(System.String url, Oculus.Platform.CAPI/ovrKeyValuePair[] headers)

Disassembly:
	0x034B6624 CSEL X1, X31, X9, EQ
	0x034B6628 CMP X20, 0x0
	0x034B662C CSEL X3, X31, X10, EQ
	0x034B6630 MOV X0, X21
	0x034B6634 MOV X2, X19
	0x034B6638 BLR X8
	0x034B663C LDP X20, X19, [X31 + 0x50]
	0x034B6640 LDP X22, X21, [X31 + 0x40]
	0x034B6644 LDP X30, X23, [X31 + 0x30]
	0x034B6648 ADD X31, X31, 0x60
	0x034B664C RET
	0x034B6650 SUB X31, X31, 0x60
	0x034B6654 STP X30, X23, [X31 + 0x30]
	0x034B6658 STP X22, X21, [X31 + 0x40]
	0x034B665C STP X20, X19, [X31 + 0x50]
	0x034B6660 ADRP X23, 0xF27000
	0x034B6664 LDR X8, [X23 + 0xD60]
	0x034B6668 MOV X20, X3
	0x034B666C MOV X19, X2
	0x034B6670 MOV X22, X1
	0x034B6674 MOV X21, X0
	0x034B6678 CBNZ X8, 0x34B66C4
	0x034B667C ADRP X12, 0xFFFFFFFFFD637000
	0x034B6680 LDR V0, [X12 + 0x5B8]
	0x034B6684 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6688 ADRP X10, 0xFFFFFFFFFD63E000
	0x034B668C ADD X8, X8, 0xDD2
	0x034B6690 MOVZ W9, 0x11
	0x034B6694 ADD X10, X10, 0x547
	0x034B6698 MOVZ W11, 0x21
	0x034B669C MOVZ W13, 0x20
	0x034B66A0 ADD X0, X31, 0x0
	0x034B66A4 STP X8, X9, [X31]
	0x034B66A8 STP X10, X11, [X31 + 0x10]
	0x034B66AC STR W13, [X31 + 0x28]
	0x034B66B0 STR D0, [X31 + 0x20]
	0x034B66B4 STRB W31, [X31 + 0x2C]
	0x034B66B8 BL 0x1C1729C
	0x034B66BC MOV X8, X0
	0x034B66C0 STR X0, [X23 + 0xD60]
	0x034B66C4 ADD X9, X22, 0x20
	0x034B66C8 CMP X22, 0x0
	0x034B66CC ADD X10, X20, 0x20
	0x034B66D0 CSEL X1, X31, X9, EQ
	0x034B66D4 CMP X20, 0x0
	0x034B66D8 CSEL X3, X31, X10, EQ
	0x034B66DC MOV X0, X21
	0x034B66E0 MOV X2, X19
	0x034B66E4 BLR X8
	0x034B66E8 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF28000
	007 Move X22, 0xC7D000
	008 Move W8, [X21+3200]
	009 Move X22, [X22+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC7D000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC66000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3200], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Call CAPI.StringToNative, X0
	031 Compare X19, 0
	032 JumpIfEqual {60}
	033 Move X20, X0
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Move X21, 0xC66000
	036 Move X21, [X21+2128]
	037 Move X1, X31
	038 Call UIntPtr.op_Explicit, X0
	039 Move X2, X0
	040 Move X0, X20
	041 Move X1, X19
	042 Call CAPI.ovr_HTTP_StartTransfer_Native, X0, X1, X2
	043 Move X8, [X21]
	044 Move X19, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Call Marshal.FreeCoTaskMem, X0
	053 Move X0, X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Call 0x1C17F20

Method: System.UInt64 ovr_HTTP_StartTransfer_Native(System.IntPtr url, Oculus.Platform.CAPI/ovrKeyValuePair[] headers, System.UIntPtr numItems)

Disassembly:
	0x034B66EC LDP X22, X21, [X31 + 0x40]
	0x034B66F0 LDP X30, X23, [X31 + 0x30]
	0x034B66F4 ADD X31, X31, 0x60
	0x034B66F8 RET
	0x034B66FC SUB X31, X31, 0x50
	0x034B6700 STR X30, [X31 + 0x30]
	0x034B6704 STP X20, X19, [X31 + 0x40]
	0x034B6708 ADRP X20, 0xF27000
	0x034B670C LDR X8, [X20 + 0xD68]
	0x034B6710 MOV X19, X0
	0x034B6714 CBNZ X8, 0x34B6760
	0x034B6718 ADRP X12, 0xFFFFFFFFFD637000
	0x034B671C LDR V0, [X12 + 0x5B8]
	0x034B6720 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6724 ADRP X10, 0xFFFFFFFFFD652000
	0x034B6728 ADD X8, X8, 0xDD2
	0x034B672C MOVZ W9, 0x11
	0x034B6730 ADD X10, X10, 0x449
	0x034B6734 MOVZ W11, 0x19
	0x034B6738 MOVZ W13, 0x8
	0x034B673C ADD X0, X31, 0x0
	0x034B6740 STP X8, X9, [X31]
	0x034B6744 STP X10, X11, [X31 + 0x10]
	0x034B6748 STR W13, [X31 + 0x28]
	0x034B674C STR D0, [X31 + 0x20]
	0x034B6750 STRB W31, [X31 + 0x2C]
	0x034B6754 BL 0x1C1729C
	0x034B6758 MOV X8, X0
	0x034B675C STR X0, [X20 + 0xD68]
	0x034B6760 MOV X0, X19
	0x034B6764 BLR X8
	0x034B6768 LDP X20, X19, [X31 + 0x40]
	0x034B676C LDR X30, [X31 + 0x30]
	0x034B6770 ADD X31, X31, 0x50
	0x034B6774 RET
	0x034B6778 SUB X31, X31, 0x50
	0x034B677C STR X30, [X31 + 0x30]
	0x034B6780 STP X20, X19, [X31 + 0x40]
	0x034B6784 ADRP X20, 0xF27000
	0x034B6788 LDR X8, [X20 + 0xD70]
	0x034B678C MOV X19, X0
	0x034B6790 CBNZ X8, 0x34B67DC
	0x034B6794 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6798 LDR V0, [X12 + 0x5B8]
	0x034B679C ADRP X8, 0xFFFFFFFFFD65D000
	0x034B67A0 ADRP X10, 0xFFFFFFFFFD663000
	0x034B67A4 ADD X8, X8, 0xDD2
	0x034B67A8 MOVZ W9, 0x11
	0x034B67AC ADD X10, X10, 0xCCC
	0x034B67B0 MOVZ W11, 0x19
	0x034B67B4 MOVZ W13, 0x8
	0x034B67B8 ADD X0, X31, 0x0
	0x034B67BC STP X8, X9, [X31]
	0x034B67C0 STP X10, X11, [X31 + 0x10]
	0x034B67C4 STR W13, [X31 + 0x28]
	0x034B67C8 STR D0, [X31 + 0x20]
	0x034B67CC STRB W31, [X31 + 0x2C]
	0x034B67D0 BL 0x1C1729C
	0x034B67D4 MOV X8, X0
	0x034B67D8 STR X0, [X20 + 0xD70]
	0x034B67DC MOV X0, X19
	0x034B67E0 BLR X8
	0x034B67E4 LDP X20, X19, [X31 + 0x40]
	0x034B67E8 LDR X30, [X31 + 0x30]
	0x034B67EC ADD X31, X31, 0x50
	0x034B67F0 RET
	0x034B67F4 SUB X31, X31, 0x50
	0x034B67F8 STP X30, X21, [X31 + 0x30]
	0x034B67FC STP X20, X19, [X31 + 0x40]
	0x034B6800 ADRP X21, 0xF27000
	0x034B6804 LDR X8, [X21 + 0xD78]
	0x034B6808 MOV W19, W1
	0x034B680C MOV W20, W0
	0x034B6810 CBNZ X8, 0x34B685C
	0x034B6814 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6818 LDR V0, [X12 + 0x5B8]
	0x034B681C ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6820 ADRP X10, 0xFFFFFFFFFD65B000
	0x034B6824 ADD X8, X8, 0xDD2
	0x034B6828 MOVZ W9, 0x11
	0x034B682C ADD X10, X10, 0xFF6
	0x034B6830 MOVZ W11, 0x23
	0x034B6834 MOVZ W13, 0x8
	0x034B6838 ADD X0, X31, 0x0
	0x034B683C STP X8, X9, [X31]
	0x034B6840 STP X10, X11, [X31 + 0x10]
	0x034B6844 STR W13, [X31 + 0x28]
	0x034B6848 STR D0, [X31 + 0x20]
	0x034B684C STRB W31, [X31 + 0x2C]
	0x034B6850 BL 0x1C1729C
	0x034B6854 MOV X8, X0
	0x034B6858 STR X0, [X21 + 0xD78]
	0x034B685C MOV W0, W20
	0x034B6860 MOV W1, W19
	0x034B6864 BLR X8
	0x034B6868 LDP X20, X19, [X31 + 0x40]
	0x034B686C LDP X30, X21, [X31 + 0x30]
	0x034B6870 ADD X31, X31, 0x50
	0x034B6874 RET
	0x034B6878 SUB X31, X31, 0x40
	0x034B687C STP X30, X19, [X31 + 0x30]
	0x034B6880 ADRP X19, 0xF27000
	0x034B6884 LDR X8, [X19 + 0xD80]
	0x034B6888 CBNZ X8, 0x34B68D0
	0x034B688C ADRP X12, 0xFFFFFFFFFD637000
	0x034B6890 LDR V0, [X12 + 0x5B8]
	0x034B6894 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6898 ADRP X10, 0xFFFFFFFFFD661000
	0x034B689C ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D8
	003 Move [X31+64], X29
	004 Move [X31+72], X30
	005 Move [X31+80], X28
	006 Move [X31+88], X27
	007 Move [X31+96], X26
	008 Move [X31+104], X25
	009 Move [X31+112], X24
	010 Move [X31+120], X23
	011 Move [X31+128], X22
	012 Move [X31+136], X21
	013 Move [X31+144], X20
	014 Move [X31+152], X19
	015 Move X24, 0xF28000
	016 Move X8, [X24+3208]
	017 Move X21, X2
	018 Move X19, X1
	019 Move X22, X0
	020 Compare X8, 0
	021 JumpIfEqual {64}
	022 Compare X19, 0
	023 JumpIfEqual {86}
	024 Move X23, [X19+24]
	025 Add X8, X23, X23
	026 Move X0, X8
	027 ShiftRight X0, 61
	028 And X0, X0, 0xFFFFFFF
	029 Call 0x1C17F14
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X20, X0
	032 And X8, X23, 0
	033 Move X8, X8
	034 ShiftRight X8, 62
	035 And X8, X8, 0x1FFFFFFF
	036 Add X8, X8, W23
	037 Move X25, X31
	038 Move X26, X8
	039 ShiftRight X26, 61
	040 And X26, X26, 0xFFFFFFF
	041 Add X8, X19, X25
	042 Move X0, [X8+32]
	043 Move W27, [X8+40]
	044 Move X23, [X8+48]
	045 Move W28, [X8+56]
	046 Move V8, [X8+64]
	047 Call 0x1C1827C
	048 Add X29, X20, X25
	049 Move [X29], X0
	050 Move X0, X23
	051 Move [X29+8], W27
	052 Call 0x1C1827C
	053 Add X25, X25, 40
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X29+16], X0
	056 Move [X29+24], W28
	057 Move [X29+32], D8
	058 Move X8, [X24+3208]
	059 Move X0, X22
	060 Move X1, X20
	061 Move X2, X21
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X21, X0
	064 Move X12, -43810816
	065 Move V0, [X12+1464]
	066 Move X8, -43655168
	067 Move X10, -43585536
	068 Add X8, X8, 3538
	069 Move W9, 17
	070 Add X10, X10, 649
	071 Move W11, 22
	072 Move W13, 24
	073 Add X0, X31, 0
	074 Move [X31], X8
	075 Move [X31+8], X9
	076 Move [X31+16], X10
	077 Move [X31+24], X11
	078 Move [X31+40], W13
	079 Move [X31+32], D0
	080 Move [X31+44], W31
	081 Call 0x1C1829C
	082 Move X8, X0
	083 Move [X24+3208], X0
	084 Compare X19, 0
	085 JumpIfNotEqual {24}
	086 Move X0, X22
	087 Move X1, X31
	088 Move X2, X21
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X21, X0
	091 Move X8, [X24+3208]
	092 Move X0, X22
	093 Move X1, X20
	094 Move X2, X21
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X21, X0
	097 Compare X20, 0
	098 JumpIfEqual {112}
	099 Move X8, [X19+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 And X19, X8, 0
	102 Add X22, X20, 16
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Call 0x1C18290
	105 Move X0, [X22]
	106 Move [X22-16], X31
	107 Call 0x1C18290
	108 Move [X22+40], X31
	109 Subtract X19, X19, 1
	110 Move X0, X20
	111 Call 0x1C18290
	112 Move X0, X21
	113 Move X20, [X31+144]
	114 Move X19, [X31+152]
	115 Move X22, [X31+128]
	116 Move X21, [X31+136]
	117 Move X24, [X31+112]
	118 Move X23, [X31+120]
	119 Move X26, [X31+96]
	120 Move X25, [X31+104]
	121 Move X28, [X31+80]
	122 Move X27, [X31+88]
	123 Move X29, [X31+64]
	124 Move X30, [X31+72]
	125 Move V8, [X31+48]
	126 Add X31, X31, 160
	127 Return X0

Method: System.Boolean ovr_HTTP_Write(System.UInt64 transferId, System.Byte[] bytes, System.UIntPtr length)

Disassembly:
	0x034B68A0 MOVZ W9, 0x11
	0x034B68A4 ADD X10, X10, 0xC87
	0x034B68A8 MOVZ W11, 0x25
	0x034B68AC ADD X0, X31, 0x0
	0x034B68B0 STR W31, [X31 + 0x28]
	0x034B68B4 STP X8, X9, [X31]
	0x034B68B8 STP X10, X11, [X31 + 0x10]
	0x034B68BC STR D0, [X31 + 0x20]
	0x034B68C0 STRB W31, [X31 + 0x2C]
	0x034B68C4 BL 0x1C1729C
	0x034B68C8 MOV X8, X0
	0x034B68CC STR X0, [X19 + 0xD80]
	0x034B68D0 BLR X8
	0x034B68D4 LDP X30, X19, [X31 + 0x30]
	0x034B68D8 ADD X31, X31, 0x40
	0x034B68DC RET
	0x034B68E0 SUB X31, X31, 0x40
	0x034B68E4 STP X30, X19, [X31 + 0x30]
	0x034B68E8 ADRP X19, 0xF27000
	0x034B68EC LDR X8, [X19 + 0xD88]
	0x034B68F0 CBNZ X8, 0x34B6938
	0x034B68F4 ADRP X12, 0xFFFFFFFFFD637000
	0x034B68F8 LDR V0, [X12 + 0x5B8]
	0x034B68FC ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6900 ADRP X10, 0xFFFFFFFFFD648000
	0x034B6904 ADD X8, X8, 0xDD2
	0x034B6908 MOVZ W9, 0x11
	0x034B690C ADD X10, X10, 0x361
	0x034B6910 MOVZ W11, 0x1C
	0x034B6914 ADD X0, X31, 0x0
	0x034B6918 STR W31, [X31 + 0x28]
	0x034B691C STP X8, X9, [X31]
	0x034B6920 STP X10, X11, [X31 + 0x10]
	0x034B6924 STR D0, [X31 + 0x20]
	0x034B6928 STRB W31, [X31 + 0x2C]
	0x034B692C BL 0x1C1729C
	0x034B6930 MOV X8, X0
	0x034B6934 STR X0, [X19 + 0xD88]
	0x034B6938 BLR X8
	0x034B693C LDP X30, X19, [X31 + 0x30]
	0x034B6940 ADD X31, X31, 0x40

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF28000
	008 Move X8, [X22+3216]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43810816
	015 Move V0, [X12+1464]
	016 Move X8, -43655168
	017 Move X10, -43757568
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1981
	021 Move W11, 14
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3216], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Add X31, X31, 96
	048 Return X0

Method: System.Void ovr_HTTP_WriteEOM(System.UInt64 transferId)

Disassembly:
	0x034B6944 RET
	0x034B6948 SUB X31, X31, 0x50
	0x034B694C STR X30, [X31 + 0x30]
	0x034B6950 STP X20, X19, [X31 + 0x40]
	0x034B6954 ADRP X20, 0xF27000
	0x034B6958 LDR X8, [X20 + 0xD90]
	0x034B695C MOV W19, W0
	0x034B6960 CBNZ X8, 0x34B69AC
	0x034B6964 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6968 LDR V0, [X12 + 0x5B8]
	0x034B696C ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6970 ADRP X10, 0xFFFFFFFFFD663000
	0x034B6974 ADD X8, X8, 0xDD2
	0x034B6978 MOVZ W9, 0x11
	0x034B697C ADD X10, X10, 0xCE6
	0x034B6980 MOVZ W11, 0x1B
	0x034B6984 MOVZ W13, 0x4
	0x034B6988 ADD X0, X31, 0x0
	0x034B698C STP X8, X9, [X31]
	0x034B6990 STP X10, X11, [X31 + 0x10]
	0x034B6994 STR W13, [X31 + 0x28]
	0x034B6998 STR D0, [X31 + 0x20]
	0x034B699C STRB W31, [X31 + 0x2C]
	0x034B69A0 BL 0x1C1729C
	0x034B69A4 MOV X8, X0
	0x034B69A8 STR X0, [X20 + 0xD90]
	0x034B69AC MOV W0, W19
	0x034B69B0 BLR X8
	0x034B69B4 LDP X20, X19, [X31 + 0x40]
	0x034B69B8 LDR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF28000
	006 Move X8, [X20+3224]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X11, -43810816
	011 Move V0, [X11+1464]
	012 Move X8, -43655168
	013 Move X10, -43556864
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2812
	017 Move W12, 8
	018 Add X0, X31, 0
	019 Move [X31], X8
	020 Move [X31+8], X9
	021 Move [X31+16], X10
	022 Move [X31+24], X9
	023 Move [X31+40], W12
	024 Move [X31+32], D0
	025 Move [X31+44], W31
	026 Call 0x1C1829C
	027 Move X8, X0
	028 Move [X20+3224], X0
	029 Move X0, X19
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Move X30, [X31+48]
	034 Add X31, X31, 80
	035 Return 

Method: System.String ovr_Message_GetStringForJavascript(System.IntPtr message)

Disassembly:
	0x034B69BC ADD X31, X31, 0x50
	0x034B69C0 RET
	0x034B69C4 SUB X31, X31, 0x50
	0x034B69C8 STR X30, [X31 + 0x30]
	0x034B69CC STP X20, X19, [X31 + 0x40]
	0x034B69D0 ADRP X20, 0xF27000
	0x034B69D4 LDR X8, [X20 + 0xD98]
	0x034B69D8 MOV X19, X0
	0x034B69DC CBNZ X8, 0x34B6A28
	0x034B69E0 ADRP X12, 0xFFFFFFFFFD637000
	0x034B69E4 LDR V0, [X12 + 0x5B8]
	0x034B69E8 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B69EC ADRP X10, 0xFFFFFFFFFD675000
	0x034B69F0 ADD X8, X8, 0xDD2
	0x034B69F4 MOVZ W9, 0x11
	0x034B69F8 ADD X10, X10, 0xB31
	0x034B69FC MOVZ W11, 0x20
	0x034B6A00 MOVZ W13, 0x8
	0x034B6A04 ADD X0, X31, 0x0
	0x034B6A08 STP X8, X9, [X31]
	0x034B6A0C STP X10, X11, [X31 + 0x10]
	0x034B6A10 STR W13, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF28000
	006 Move X21, 0xC7D000
	007 Move W8, [X20+3232]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC7D000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3232], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Message_GetStringForJavascript_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Message_GetStringForJavascript_Native(System.IntPtr message)

Disassembly:
	0x034B6A14 STR D0, [X31 + 0x20]
	0x034B6A18 STRB W31, [X31 + 0x2C]
	0x034B6A1C BL 0x1C1729C
	0x034B6A20 MOV X8, X0
	0x034B6A24 STR X0, [X20 + 0xD98]
	0x034B6A28 MOV X0, X19
	0x034B6A2C BLR X8
	0x034B6A30 LDP X20, X19, [X31 + 0x40]
	0x034B6A34 LDR X30, [X31 + 0x30]
	0x034B6A38 ADD X31, X31, 0x50
	0x034B6A3C RET
	0x034B6A40 SUB X31, X31, 0x50
	0x034B6A44 STR X30, [X31 + 0x30]
	0x034B6A48 STP X20, X19, [X31 + 0x40]
	0x034B6A4C ADRP X20, 0xF27000
	0x034B6A50 LDR X8, [X20 + 0xDA0]
	0x034B6A54 MOV W19, W0
	0x034B6A58 CBNZ X8, 0x34B6AA4
	0x034B6A5C ADRP X12, 0xFFFFFFFFFD637000
	0x034B6A60 LDR V0, [X12 + 0x5B8]
	0x034B6A64 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6A68 ADRP X10, 0xFFFFFFFFFD638000
	0x034B6A6C ADD X8, X8, 0xDD2
	0x034B6A70 MOVZ W9, 0x11
	0x034B6A74 ADD X10, X10, 0x712
	0x034B6A78 MOVZ W11, 0x1C
	0x034B6A7C MOVZ W13, 0x4
	0x034B6A80 ADD X0, X31, 0x0
	0x034B6A84 STP X8, X9, [X31]
	0x034B6A88 STP X10, X11, [X31 + 0x10]
	0x034B6A8C STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF28000
	006 Move X8, [X20+3240]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43810816
	011 Move V0, [X12+1464]
	012 Move X8, -43655168
	013 Move X10, -43749376
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1712
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3240], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034B6A90 STR D0, [X31 + 0x20]
	0x034B6A94 STRB W31, [X31 + 0x2C]
	0x034B6A98 BL 0x1C1729C
	0x034B6A9C MOV X8, X0
	0x034B6AA0 STR X0, [X20 + 0xDA0]
	0x034B6AA4 MOV W0, W19
	0x034B6AA8 BLR X8
	0x034B6AAC LDP X20, X19, [X31 + 0x40]
	0x034B6AB0 LDR X30, [X31 + 0x30]
	0x034B6AB4 ADD X31, X31, 0x50
	0x034B6AB8 RET
	0x034B6ABC SUB X31, X31, 0x50
	0x034B6AC0 STR X30, [X31 + 0x30]
	0x034B6AC4 STP X20, X19, [X31 + 0x40]
	0x034B6AC8 ADRP X20, 0xF27000
	0x034B6ACC LDR X8, [X20 + 0xDA8]
	0x034B6AD0 MOV X19, X0
	0x034B6AD4 CBNZ X8, 0x34B6B20
	0x034B6AD8 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6ADC LDR V0, [X12 + 0x5B8]
	0x034B6AE0 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6AE4 ADRP X10, 0xFFFFFFFFFD667000
	0x034B6AE8 ADD X8, X8, 0xDD2
	0x034B6AEC MOVZ W9, 0x11
	0x034B6AF0 ADD X10, X10, 0xE0F
	0x034B6AF4 MOVZ W11, 0xE
	0x034B6AF8 MOVZ W13, 0x8
	0x034B6AFC ADD X0, X31, 0x0
	0x034B6B00 STP X8, X9, [X31]
	0x034B6B04 STP X10, X11, [X31 + 0x10]
	0x034B6B08 STR W13, [X31 + 0x28]
	0x034B6B0C STR D0, [X31 + 0x20]
	0x034B6B10 STRB W31, [X31 + 0x2C]
	0x034B6B14 BL 0x1C1729C
	0x034B6B18 MOV X8, X0
	0x034B6B1C STR X0, [X20 + 0xDA8]
	0x034B6B20 MOV X0, X19
	0x034B6B24 BLR X8
	0x034B6B28 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF28000
	008 Move X8, [X22+3248]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43810816
	015 Move V0, [X12+1464]
	016 Move X8, -43655168
	017 Move X10, -43782144
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1253
	021 Move W11, 32
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3248], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034B6B2C LDR X30, [X31 + 0x30]
	0x034B6B30 ADD X31, X31, 0x50
	0x034B6B34 RET
	0x034B6B38 SUB X31, X31, 0x50
	0x034B6B3C STR X30, [X31 + 0x30]
	0x034B6B40 STP X20, X19, [X31 + 0x40]
	0x034B6B44 ADRP X20, 0xF27000
	0x034B6B48 LDR X8, [X20 + 0xDB0]
	0x034B6B4C MOV X19, X0
	0x034B6B50 CBNZ X8, 0x34B6B9C
	0x034B6B54 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6B58 LDR V0, [X12 + 0x5B8]
	0x034B6B5C ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6B60 ADRP X10, 0xFFFFFFFFFD65D000
	0x034B6B64 ADD X8, X8, 0xDD2
	0x034B6B68 MOVZ W9, 0x11
	0x034B6B6C ADD X10, X10, 0xDE4
	0x034B6B70 MOVZ W11, 0xD
	0x034B6B74 MOVZ W13, 0x8
	0x034B6B78 ADD X0, X31, 0x0
	0x034B6B7C STP X8, X9, [X31]
	0x034B6B80 STP X10, X11, [X31 + 0x10]
	0x034B6B84 STR W13, [X31 + 0x28]
	0x034B6B88 STR D0, [X31 + 0x20]
	0x034B6B8C STRB W31, [X31 + 0x2C]
	0x034B6B90 BL 0x1C1729C
	0x034B6B94 MOV X8, X0
	0x034B6B98 STR X0, [X20 + 0xDB0]
	0x034B6B9C MOV X0, X19
	0x034B6BA0 BLR X8
	0x034B6BA4 LDP X20, X19, [X31 + 0x40]
	0x034B6BA8 LDR X30, [X31 + 0x30]
	0x034B6BAC ADD X31, X31, 0x50
	0x034B6BB0 RET
	0x034B6BB4 SUB X31, X31, 0x50
	0x034B6BB8 STP X30, X21, [X31 + 0x30]
	0x034B6BBC STP X20, X19, [X31 + 0x40]
	0x034B6BC0 ADRP X21, 0xF27000
	0x034B6BC4 LDR X8, [X21 + 0xDB8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF28000
	008 Move X8, [X22+3256]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43810816
	015 Move V0, [X12+1464]
	016 Move X8, -43655168
	017 Move X10, -43798528
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 485
	021 Move W11, 32
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3256], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034B6BC8 MOV X19, X1
	0x034B6BCC MOV X20, X0
	0x034B6BD0 CBNZ X8, 0x34B6C1C
	0x034B6BD4 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6BD8 LDR V0, [X12 + 0x5B8]
	0x034B6BDC ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6BE0 ADRP X10, 0xFFFFFFFFFD667000
	0x034B6BE4 ADD X8, X8, 0xDD2
	0x034B6BE8 MOVZ W9, 0x11
	0x034B6BEC ADD X10, X10, 0xE1E
	0x034B6BF0 MOVZ W11, 0x28
	0x034B6BF4 MOVZ W13, 0x10
	0x034B6BF8 ADD X0, X31, 0x0
	0x034B6BFC STP X8, X9, [X31]
	0x034B6C00 STP X10, X11, [X31 + 0x10]
	0x034B6C04 STR W13, [X31 + 0x28]
	0x034B6C08 STR D0, [X31 + 0x20]
	0x034B6C0C STRB W31, [X31 + 0x2C]
	0x034B6C10 BL 0x1C1729C
	0x034B6C14 MOV X8, X0
	0x034B6C18 STR X0, [X21 + 0xDB8]
	0x034B6C1C MOV X0, X20
	0x034B6C20 MOV X1, X19
	0x034B6C24 BLR X8
	0x034B6C28 LDP X20, X19, [X31 + 0x40]
	0x034B6C2C LDP X30, X21, [X31 + 0x30]
	0x034B6C30 ADD X31, X31, 0x50
	0x034B6C34 RET
	0x034B6C38 SUB X31, X31, 0x50
	0x034B6C3C STR X30, [X31 + 0x30]
	0x034B6C40 STP X20, X19, [X31 + 0x40]
	0x034B6C44 ADRP X20, 0xF27000
	0x034B6C48 LDR X8, [X20 + 0xDC0]
	0x034B6C4C MOV W19, W0
	0x034B6C50 CBNZ X8, 0x34B6C9C
	0x034B6C54 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6C58 LDR V0, [X12 + 0x5B8]
	0x034B6C5C ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6C60 ADRP X10, 0xFFFFFFFFFD640000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF28000
	008 Move X8, [X22+3264]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43810816
	015 Move V0, [X12+1464]
	016 Move X8, -43655168
	017 Move X10, -43692032
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1825
	021 Move W11, 43
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3264], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034B6C64 ADD X8, X8, 0xDD2
	0x034B6C68 MOVZ W9, 0x11
	0x034B6C6C ADD X10, X10, 0x59D
	0x034B6C70 MOVZ W11, 0x24
	0x034B6C74 MOVZ W13, 0x4
	0x034B6C78 ADD X0, X31, 0x0
	0x034B6C7C STP X8, X9, [X31]
	0x034B6C80 STP X10, X11, [X31 + 0x10]
	0x034B6C84 STR W13, [X31 + 0x28]
	0x034B6C88 STR D0, [X31 + 0x20]
	0x034B6C8C STRB W31, [X31 + 0x2C]
	0x034B6C90 BL 0x1C1729C
	0x034B6C94 MOV X8, X0
	0x034B6C98 STR X0, [X20 + 0xDC0]
	0x034B6C9C MOV W0, W19
	0x034B6CA0 BLR X8
	0x034B6CA4 LDP X20, X19, [X31 + 0x40]
	0x034B6CA8 LDR X30, [X31 + 0x30]
	0x034B6CAC ADD X31, X31, 0x50
	0x034B6CB0 RET
	0x034B6CB4 STR X30, [X31 - 0x30]!
	0x034B6CB8 STP X22, X21, [X31 + 0x10]
	0x034B6CBC STP X20, X19, [X31 + 0x20]
	0x034B6CC0 ADRP X22, 0xF27000
	0x034B6CC4 ADRP X21, 0xC7C000
	0x034B6CC8 LDRB W8, [X22 + 0xDC8]
	0x034B6CCC LDR X21, [X21 + 0x328]
	0x034B6CD0 MOV X19, X1
	0x034B6CD4 MOV X20, X0
	0x034B6CD8 TBNZ X8, 0x0, 0x34B6CFC
	0x034B6CDC ADRP X0, 0xC7C000
	0x034B6CE0 LDR X0, [X0 + 0x328]
	0x034B6CE4 BL 0x1C16CF4
	0x034B6CE8 ADRP X0, 0xC65000
	0x034B6CEC LDR X0, [X0 + 0x850]
	0x034B6CF0 BL 0x1C16CF4
	0x034B6CF4 MOVZ W8, 0x1
	0x034B6CF8 STRB W8, [X22 + 0xDC8]
	0x034B6CFC LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF28000
	008 Move X8, [X22+3272]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43810816
	015 Move V0, [X12+1464]
	016 Move X8, -43655168
	017 Move X10, -43675648
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 818
	021 Move W11, 43
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3272], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.Boolean ovr_NetSync_GetListenerPosition(System.Int64 connection_id, System.UInt64 sessionId, ref Oculus.Platform.CAPI/ovrNetSyncVec3 position)

Disassembly:
	0x034B6D00 ADRP X21, 0xC65000
	0x034B6D04 LDR W8, [X0 + 0xE0]
	0x034B6D08 LDR X21, [X21 + 0x850]
	0x034B6D0C CBNZ W8, 0x34B6D14
	0x034B6D10 BL 0x1C16DFC
	0x034B6D14 MOV X0, X20
	0x034B6D18 BL 0x34B404C
	0x034B6D1C MOV X1, X19
	0x034B6D20 MOV X20, X0
	0x034B6D24 BL 0x34B6D60
	0x034B6D28 LDR X8, [X21]
	0x034B6D2C MOV X19, X0
	0x034B6D30 LDR W9, [X8 + 0xE0]
	0x034B6D34 CBNZ W9, 0x34B6D40
	0x034B6D38 MOV X0, X8
	0x034B6D3C BL 0x1C16DFC
	0x034B6D40 MOV X0, X20
	0x034B6D44 MOV X1, X31
	0x034B6D48 BL 0x32C1060
	0x034B6D4C MOV X0, X19
	0x034B6D50 LDP X20, X19, [X31 + 0x20]
	0x034B6D54 LDP X22, X21, [X31 + 0x10]
	0x034B6D58 LDR X30, [X31], #0x30
	0x034B6D5C RET
	0x034B6D60 SUB X31, X31, 0x50
	0x034B6D64 STP X30, X21, [X31 + 0x30]
	0x034B6D68 STP X20, X19, [X31 + 0x40]
	0x034B6D6C ADRP X21, 0xF27000
	0x034B6D70 LDR X8, [X21 + 0xDD0]
	0x034B6D74 MOV X19, X1
	0x034B6D78 MOV X20, X0
	0x034B6D7C CBNZ X8, 0x34B6DC8
	0x034B6D80 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6D84 LDR V0, [X12 + 0x5B8]
	0x034B6D88 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6D8C ADRP X10, 0xFFFFFFFFFD63E000
	0x034B6D90 ADD X8, X8, 0xDD2
	0x034B6D94 MOVZ W9, 0x11
	0x034B6D98 ADD X10, X10, 0x569

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF28000
	008 Move X8, [X22+3280]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43810816
	015 Move V0, [X12+1464]
	016 Move X8, -43655168
	017 Move X10, -43782144
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1286
	021 Move W11, 31
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3280], X0
	034 Move X0, X21
	035 Move X1, X20
	036 Move X2, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Add X31, X31, 96
	046 Return X0

Method: System.UIntPtr ovr_NetSync_GetMonostreamFloatPCM(System.Int64 connection_id, System.UInt64 sessionId, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034B6D9C MOVZ W11, 0x19
	0x034B6DA0 MOVZ W13, 0x10
	0x034B6DA4 ADD X0, X31, 0x0
	0x034B6DA8 STP X8, X9, [X31]
	0x034B6DAC STP X10, X11, [X31 + 0x10]
	0x034B6DB0 STR W13, [X31 + 0x28]
	0x034B6DB4 STR D0, [X31 + 0x20]
	0x034B6DB8 STRB W31, [X31 + 0x2C]
	0x034B6DBC BL 0x1C1729C
	0x034B6DC0 MOV X8, X0
	0x034B6DC4 STR X0, [X21 + 0xDD0]
	0x034B6DC8 MOV X0, X20
	0x034B6DCC MOV X1, X19
	0x034B6DD0 BLR X8
	0x034B6DD4 LDP X20, X19, [X31 + 0x40]
	0x034B6DD8 LDP X30, X21, [X31 + 0x30]
	0x034B6DDC ADD X31, X31, 0x50
	0x034B6DE0 RET
	0x034B6DE4 STR X30, [X31 - 0x30]!
	0x034B6DE8 STP X22, X21, [X31 + 0x10]
	0x034B6DEC STP X20, X19, [X31 + 0x20]
	0x034B6DF0 ADRP X22, 0xF27000
	0x034B6DF4 ADRP X21, 0xC7C000
	0x034B6DF8 LDRB W8, [X22 + 0xDD8]
	0x034B6DFC LDR X21, [X21 + 0x328]
	0x034B6E00 MOV X19, X1
	0x034B6E04 MOV X20, X0
	0x034B6E08 TBNZ X8, 0x0, 0x34B6E2C
	0x034B6E0C ADRP X0, 0xC7C000
	0x034B6E10 LDR X0, [X0 + 0x328]
	0x034B6E14 BL 0x1C16CF4
	0x034B6E18 ADRP X0, 0xC65000
	0x034B6E1C LDR X0, [X0 + 0x850]
	0x034B6E20 BL 0x1C16CF4
	0x034B6E24 MOVZ W8, 0x1
	0x034B6E28 STRB W8, [X22 + 0xDD8]
	0x034B6E2C LDR X0, [X21]
	0x034B6E30 ADRP X21, 0xC65000
	0x034B6E34 LDR W8, [X0 + 0xE0]
	0x034B6E38 LDR X21, [X21 + 0x850]
	0x034B6E3C CBNZ W8, 0x34B6E44

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xF28000
	009 Move X8, [X23+3288]
	010 Move X19, X3
	011 Move X21, X2
	012 Move X20, X1
	013 Move X22, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {36}
	016 Move X12, -43810816
	017 Move V0, [X12+1464]
	018 Move X8, -43655168
	019 Move X10, -43683840
	020 Add X8, X8, 3538
	021 Move W9, 17
	022 Add X10, X10, 487
	023 Move W11, 33
	024 Move W13, 32
	025 Add X0, X31, 0
	026 Move [X31], X8
	027 Move [X31+8], X9
	028 Move [X31+16], X10
	029 Move [X31+24], X11
	030 Move [X31+40], W13
	031 Move [X31+32], D0
	032 Move [X31+44], W31
	033 Call 0x1C1829C
	034 Move X8, X0
	035 Move [X23+3288], X0
	036 Add X9, X21, 32
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move X0, X22
	040 Move X1, X20
	041 Move X3, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0

Method: System.UIntPtr ovr_NetSync_GetMonostreamInt16PCM(System.Int64 connection_id, System.UInt64 session_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034B6E40 BL 0x1C16DFC
	0x034B6E44 MOV X0, X20
	0x034B6E48 BL 0x34B404C
	0x034B6E4C MOV X20, X0
	0x034B6E50 MOV X0, X19
	0x034B6E54 BL 0x34B404C
	0x034B6E58 MOV X19, X0
	0x034B6E5C MOV X0, X20
	0x034B6E60 MOV X1, X19
	0x034B6E64 BL 0x34B6EAC
	0x034B6E68 LDR X8, [X21]
	0x034B6E6C MOV X21, X0
	0x034B6E70 LDR W9, [X8 + 0xE0]
	0x034B6E74 CBNZ W9, 0x34B6E80
	0x034B6E78 MOV X0, X8
	0x034B6E7C BL 0x1C16DFC
	0x034B6E80 MOV X0, X20
	0x034B6E84 MOV X1, X31
	0x034B6E88 BL 0x32C1060
	0x034B6E8C MOV X0, X19
	0x034B6E90 MOV X1, X31
	0x034B6E94 BL 0x32C1060
	0x034B6E98 MOV X0, X21
	0x034B6E9C LDP X20, X19, [X31 + 0x20]
	0x034B6EA0 LDP X22, X21, [X31 + 0x10]
	0x034B6EA4 LDR X30, [X31], #0x30
	0x034B6EA8 RET
	0x034B6EAC SUB X31, X31, 0x50
	0x034B6EB0 STP X30, X21, [X31 + 0x30]
	0x034B6EB4 STP X20, X19, [X31 + 0x40]
	0x034B6EB8 ADRP X21, 0xF27000
	0x034B6EBC LDR X8, [X21 + 0xDE0]
	0x034B6EC0 MOV X19, X1
	0x034B6EC4 MOV X20, X0
	0x034B6EC8 CBNZ X8, 0x34B6F14
	0x034B6ECC ADRP X12, 0xFFFFFFFFFD637000
	0x034B6ED0 LDR V0, [X12 + 0x5B8]
	0x034B6ED4 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6ED8 ADRP X10, 0xFFFFFFFFFD642000
	0x034B6EDC ADD X8, X8, 0xDD2
	0x034B6EE0 MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xF28000
	009 Move X8, [X23+3296]
	010 Move X19, X3
	011 Move X21, X2
	012 Move X20, X1
	013 Move X22, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {36}
	016 Move X12, -43810816
	017 Move V0, [X12+1464]
	018 Move X8, -43655168
	019 Move X10, -43573248
	020 Add X8, X8, 3538
	021 Move W9, 17
	022 Add X10, X10, 2974
	023 Move W11, 33
	024 Move W13, 32
	025 Add X0, X31, 0
	026 Move [X31], X8
	027 Move [X31+8], X9
	028 Move [X31+16], X10
	029 Move [X31+24], X11
	030 Move [X31+40], W13
	031 Move [X31+32], D0
	032 Move [X31+44], W31
	033 Call 0x1C1829C
	034 Move X8, X0
	035 Move [X23+3296], X0
	036 Add X9, X21, 32
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move X0, X22
	040 Move X1, X20
	041 Move X3, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0

Method: System.UIntPtr ovr_NetSync_GetPcmBufferMaxSamples()

Disassembly:
	0x034B6EE4 ADD X10, X10, 0x5EF
	0x034B6EE8 MOVZ W11, 0x1A
	0x034B6EEC MOVZ W13, 0x10
	0x034B6EF0 ADD X0, X31, 0x0
	0x034B6EF4 STP X8, X9, [X31]
	0x034B6EF8 STP X10, X11, [X31 + 0x10]
	0x034B6EFC STR W13, [X31 + 0x28]
	0x034B6F00 STR D0, [X31 + 0x20]
	0x034B6F04 STRB W31, [X31 + 0x2C]
	0x034B6F08 BL 0x1C1729C
	0x034B6F0C MOV X8, X0
	0x034B6F10 STR X0, [X21 + 0xDE0]
	0x034B6F14 MOV X0, X20
	0x034B6F18 MOV X1, X19
	0x034B6F1C BLR X8
	0x034B6F20 LDP X20, X19, [X31 + 0x40]
	0x034B6F24 LDP X30, X21, [X31 + 0x30]
	0x034B6F28 ADD X31, X31, 0x50
	0x034B6F2C RET
	0x034B6F30 SUB X31, X31, 0x40
	0x034B6F34 STP X30, X19, [X31 + 0x30]
	0x034B6F38 ADRP X19, 0xF27000
	0x034B6F3C LDR X8, [X19 + 0xDE8]
	0x034B6F40 CBNZ X8, 0x34B6F88
	0x034B6F44 ADRP X12, 0xFFFFFFFFFD637000
	0x034B6F48 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF28000
	005 Move X8, [X19+3304]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43810816
	009 Move V0, [X12+1464]
	010 Move X8, -43655168
	011 Move X10, -43556864
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 2830
	015 Move W11, 34
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3304], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Boolean ovr_NetSync_GetVoipAmplitude(System.Int64 connection_id, System.UInt64 sessionId, ref System.Single amplitude)

Disassembly:
	0x034B6F4C ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6F50 ADRP X10, 0xFFFFFFFFFD648000
	0x034B6F54 ADD X8, X8, 0xDD2
	0x034B6F58 MOVZ W9, 0x11
	0x034B6F5C ADD X10, X10, 0x37E
	0x034B6F60 MOVZ W11, 0x22
	0x034B6F64 ADD X0, X31, 0x0
	0x034B6F68 STR W31, [X31 + 0x28]
	0x034B6F6C STP X8, X9, [X31]
	0x034B6F70 STP X10, X11, [X31 + 0x10]
	0x034B6F74 STR D0, [X31 + 0x20]
	0x034B6F78 STRB W31, [X31 + 0x2C]
	0x034B6F7C BL 0x1C1729C
	0x034B6F80 MOV X8, X0
	0x034B6F84 STR X0, [X19 + 0xDE8]
	0x034B6F88 BLR X8
	0x034B6F8C LDP X30, X19, [X31 + 0x30]
	0x034B6F90 ADD X31, X31, 0x40
	0x034B6F94 RET
	0x034B6F98 SUB X31, X31, 0x40
	0x034B6F9C STP X30, X19, [X31 + 0x30]
	0x034B6FA0 ADRP X19, 0xF27000
	0x034B6FA4 LDR X8, [X19 + 0xDF0]
	0x034B6FA8 CBNZ X8, 0x34B6FF0
	0x034B6FAC ADRP X12, 0xFFFFFFFFFD637000
	0x034B6FB0 LDR V0, [X12 + 0x5B8]
	0x034B6FB4 ADRP X8, 0xFFFFFFFFFD65D000
	0x034B6FB8 ADRP X10, 0xFFFFFFFFFD670000
	0x034B6FBC ADD X8, X8, 0xDD2
	0x034B6FC0 MOVZ W9, 0x11
	0x034B6FC4 ADD X10, X10, 0x21A
	0x034B6FC8 MOVZ W11, 0x1F
	0x034B6FCC ADD X0, X31, 0x0
	0x034B6FD0 STR W31, [X31 + 0x28]
	0x034B6FD4 STP X8, X9, [X31]
	0x034B6FD8 STP X10, X11, [X31 + 0x10]
	0x034B6FDC STR D0, [X31 + 0x20]
	0x034B6FE0 STRB W31, [X31 + 0x2C]
	0x034B6FE4 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF28000
	008 Move X8, [X22+3312]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43810816
	015 Move V0, [X12+1464]
	016 Move X8, -43655168
	017 Move X10, -43577344
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 509
	021 Move W11, 28
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3312], X0
	034 Move X0, X21
	035 Move X1, X20
	036 Move X2, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Add X31, X31, 96
	046 Return X0

Method: System.Void ovr_NetSync_SetListenerPosition(System.Int64 connection_id, ref Oculus.Platform.CAPI/ovrNetSyncVec3 position)

Disassembly:
	0x034B6FE8 MOV X8, X0
	0x034B6FEC STR X0, [X19 + 0xDF0]
	0x034B6FF0 BLR X8
	0x034B6FF4 LDP X30, X19, [X31 + 0x30]
	0x034B6FF8 ADD X31, X31, 0x40
	0x034B6FFC RET
	0x034B7000 SUB X31, X31, 0x70
	0x034B7004 STP X30, X25, [X31 + 0x30]
	0x034B7008 STP X24, X23, [X31 + 0x40]
	0x034B700C STP X22, X21, [X31 + 0x50]
	0x034B7010 STP X20, X19, [X31 + 0x60]
	0x034B7014 ADRP X22, 0xF26000
	0x034B7018 LDR X8, [X22 + 0xDF8]
	0x034B701C MOV W19, W1
	0x034B7020 MOV X20, X0
	0x034B7024 CBZ X8, 0x34B70B4
	0x034B7028 CBZ X20, 0x34B7100
	0x034B702C LDR X23, [X20 + 0x18]
	0x034B7030 UBFM X8, X23, 0x3D, 0x3C
	0x034B7034 ADD X0, X8, 0x8
	0x034B7038 BL 0x1C16F14
	0x034B703C MOV X21, X0
	0x034B7040 CMP W23, 0x1
	0x034B7044 STR X31, [X0, X23, LSL #3]
	0x034B7048 B.LT 0x34B706C
	0x034B704C AND X23, X23, 0x0
	0x034B7050 ADD X24, X20, 0x20
	0x034B7054 MOV X25, X21
	0x034B7058 LDR X0, [X24], #0x8
	0x034B705C BL 0x1C1727C
	0x034B7060 SUBS X23, X23, 0x1
	0x034B7064 STR X0, [X25], #0x8
	0x034B7068 B.NE 0x34B7058

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF28000
	007 Move X8, [X21+3320]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43814912
	013 Move V0, [X12+1464]
	014 Move X8, -43659264
	015 Move X10, -43794432
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1545
	019 Move W11, 31
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3320], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Int32 ovr_Party_PluginGetSharedMemHandle()

Disassembly:
	0x034B706C LDR X8, [X22 + 0xDF8]
	0x034B7070 MOV X0, X21
	0x034B7074 MOV W1, W19
	0x034B7078 BLR X8
	0x034B707C LDR X8, [X20 + 0x18]
	0x034B7080 MOV X19, X0
	0x034B7084 CMP W8, 0x1
	0x034B7088 B.LT 0x34B70A8
	0x034B708C AND X20, X8, 0x0
	0x034B7090 MOV X22, X21
	0x034B7094 LDR X0, [X22]
	0x034B7098 BL 0x1C17290
	0x034B709C SUBS X20, X20, 0x1
	0x034B70A0 STR X31, [X22], #0x8
	0x034B70A4 B.NE 0x34B7094
	0x034B70A8 MOV X0, X21
	0x034B70AC BL 0x1C17290
	0x034B70B0 B 0x34B7110
	0x034B70B4 ADRP X12, 0xFFFFFFFFFD636000
	0x034B70B8 LDR V0, [X12 + 0x5B8]
	0x034B70BC ADRP X8, 0xFFFFFFFFFD65C000
	0x034B70C0 ADRP X10, 0xFFFFFFFFFD670000
	0x034B70C4 ADD X8, X8, 0xDD2
	0x034B70C8 MOVZ W9, 0x11
	0x034B70CC ADD X10, X10, 0xBC0
	0x034B70D0 MOVZ W11, 0x25

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF27000
	005 Move X8, [X19+3328]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43814912
	009 Move V0, [X12+1464]
	010 Move X8, -43659264
	011 Move X10, -43810816
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1775
	015 Move W11, 34
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3328], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: Oculus.Platform.VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted()

Disassembly:
	0x034B70D4 MOVZ W13, 0xC
	0x034B70D8 ADD X0, X31, 0x0
	0x034B70DC STP X8, X9, [X31]
	0x034B70E0 STP X10, X11, [X31 + 0x10]
	0x034B70E4 STR W13, [X31 + 0x28]
	0x034B70E8 STR D0, [X31 + 0x20]
	0x034B70EC STRB W31, [X31 + 0x2C]
	0x034B70F0 BL 0x1C1729C
	0x034B70F4 MOV X8, X0
	0x034B70F8 STR X0, [X22 + 0xDF8]
	0x034B70FC CBNZ X20, 0x34B702C
	0x034B7100 MOV X0, X31
	0x034B7104 MOV W1, W19
	0x034B7108 BLR X8
	0x034B710C MOV X19, X0
	0x034B7110 MOV X0, X19
	0x034B7114 LDP X20, X19, [X31 + 0x60]
	0x034B7118 LDP X22, X21, [X31 + 0x50]
	0x034B711C LDP X24, X23, [X31 + 0x40]
	0x034B7120 LDP X30, X25, [X31 + 0x30]
	0x034B7124 ADD X31, X31, 0x70
	0x034B7128 RET
	0x034B712C SUB X31, X31, 0x70
	0x034B7130 STP X30, X25, [X31 + 0x30]
	0x034B7134 STP X24, X23, [X31 + 0x40]
	0x034B7138 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF27000
	005 Move X8, [X19+3336]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43814912
	009 Move V0, [X12+1464]
	010 Move X8, -43659264
	011 Move X10, -43728896
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 457
	015 Move W11, 38
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3336], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Boolean ovr_Party_PluginGetVoipPassthrough()

Disassembly:
	0x034B713C STP X20, X19, [X31 + 0x60]
	0x034B7140 ADRP X22, 0xF26000
	0x034B7144 LDR X8, [X22 + 0xE00]
	0x034B7148 MOV W19, W1
	0x034B714C MOV X20, X0
	0x034B7150 CBZ X8, 0x34B71E0
	0x034B7154 CBZ X20, 0x34B722C
	0x034B7158 LDR X23, [X20 + 0x18]
	0x034B715C UBFM X8, X23, 0x3D, 0x3C
	0x034B7160 ADD X0, X8, 0x8
	0x034B7164 BL 0x1C16F14
	0x034B7168 MOV X21, X0
	0x034B716C CMP W23, 0x1
	0x034B7170 STR X31, [X0, X23, LSL #3]
	0x034B7174 B.LT 0x34B7198
	0x034B7178 AND X23, X23, 0x0
	0x034B717C ADD X24, X20, 0x20
	0x034B7180 MOV X25, X21
	0x034B7184 LDR X0, [X24], #0x8
	0x034B7188 BL 0x1C1727C
	0x034B718C SUBS X23, X23, 0x1
	0x034B7190 STR X0, [X25], #0x8
	0x034B7194 B.NE 0x34B7184
	0x034B7198 LDR X8, [X22 + 0xE00]
	0x034B719C MOV X0, X21
	0x034B71A0 MOV W1, W19
	0x034B71A4 BLR X8
	0x034B71A8 LDR X8, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF27000
	005 Move X8, [X19+3344]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43814912
	009 Move V0, [X12+1464]
	010 Move X8, -43659264
	011 Move X10, -43728896
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 496
	015 Move W11, 34
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3344], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X31, X31, 64
	033 Return X0

Method: Oculus.Platform.SystemVoipStatus ovr_Party_PluginGetVoipStatus()

Disassembly:
	0x034B71AC MOV X19, X0
	0x034B71B0 CMP W8, 0x1
	0x034B71B4 B.LT 0x34B71D4
	0x034B71B8 AND X20, X8, 0x0
	0x034B71BC MOV X22, X21
	0x034B71C0 LDR X0, [X22]
	0x034B71C4 BL 0x1C17290
	0x034B71C8 SUBS X20, X20, 0x1
	0x034B71CC STR X31, [X22], #0x8
	0x034B71D0 B.NE 0x34B71C0
	0x034B71D4 MOV X0, X21
	0x034B71D8 BL 0x1C17290
	0x034B71DC B 0x34B723C
	0x034B71E0 ADRP X12, 0xFFFFFFFFFD636000
	0x034B71E4 LDR V0, [X12 + 0x5B8]
	0x034B71E8 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B71EC ADRP X10, 0xFFFFFFFFFD64F000
	0x034B71F0 ADD X8, X8, 0xDD2
	0x034B71F4 MOVZ W9, 0x11
	0x034B71F8 ADD X10, X10, 0x4A2
	0x034B71FC MOVZ W11, 0x22
	0x034B7200 MOVZ W13, 0xC
	0x034B7204 ADD X0, X31, 0x0
	0x034B7208 STP X8, X9, [X31]
	0x034B720C STP X10, X11, [X31 + 0x10]
	0x034B7210 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF27000
	005 Move X8, [X19+3352]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43814912
	009 Move V0, [X12+1464]
	010 Move X8, -43659264
	011 Move X10, -43753472
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1747
	015 Move W11, 29
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3352], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_Voip_Accept(System.UInt64 userID)

Disassembly:
	0x034B7214 STR D0, [X31 + 0x20]
	0x034B7218 STRB W31, [X31 + 0x2C]
	0x034B721C BL 0x1C1729C
	0x034B7220 MOV X8, X0
	0x034B7224 STR X0, [X22 + 0xE00]
	0x034B7228 CBNZ X20, 0x34B7158
	0x034B722C MOV X0, X31
	0x034B7230 MOV W1, W19
	0x034B7234 BLR X8
	0x034B7238 MOV X19, X0
	0x034B723C MOV X0, X19
	0x034B7240 LDP X20, X19, [X31 + 0x60]
	0x034B7244 LDP X22, X21, [X31 + 0x50]
	0x034B7248 LDP X24, X23, [X31 + 0x40]
	0x034B724C LDP X30, X25, [X31 + 0x30]
	0x034B7250 ADD X31, X31, 0x70
	0x034B7254 RET
	0x034B7258 STP X30, X21, [X31 - 0x20]!
	0x034B725C STP X20, X19, [X31 + 0x10]
	0x034B7260 ADRP X21, 0xF26000
	0x034B7264 ADRP X20, 0xC7B000
	0x034B7268 LDRB W8, [X21 + 0xE08]
	0x034B726C LDR X20, [X20 + 0x328]
	0x034B7270 MOV X19, X0
	0x034B7274 TBNZ X8, 0x0, 0x34B7298
	0x034B7278 ADRP X0, 0xC7B000
	0x034B727C LDR X0, [X0 + 0x328]
	0x034B7280 BL 0x1C16CF4
	0x034B7284 ADRP X0, 0xC64000
	0x034B7288 LDR X0, [X0 + 0x850]
	0x034B728C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3360]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3260
	017 Move W11, 15
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3360], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: Oculus.Platform.VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(System.UInt64 peerID)

Disassembly:
	0x034B7290 MOVZ W8, 0x1
	0x034B7294 STRB W8, [X21 + 0xE08]
	0x034B7298 LDR X0, [X20]
	0x034B729C ADRP X20, 0xC64000
	0x034B72A0 LDR W8, [X0 + 0xE0]
	0x034B72A4 LDR X20, [X20 + 0x850]
	0x034B72A8 CBNZ W8, 0x34B72B0
	0x034B72AC BL 0x1C16DFC
	0x034B72B0 MOV X0, X19
	0x034B72B4 BL 0x34B404C
	0x034B72B8 MOV X19, X0
	0x034B72BC BL 0x34B72F4
	0x034B72C0 LDR X8, [X20]
	0x034B72C4 MOV X20, X0
	0x034B72C8 LDR W9, [X8 + 0xE0]
	0x034B72CC CBNZ W9, 0x34B72D8
	0x034B72D0 MOV X0, X8
	0x034B72D4 BL 0x1C16DFC
	0x034B72D8 MOV X0, X19
	0x034B72DC MOV X1, X31
	0x034B72E0 BL 0x32C1060
	0x034B72E4 MOV X0, X20
	0x034B72E8 LDP X20, X19, [X31 + 0x10]
	0x034B72EC LDP X30, X21, [X31], #0x20
	0x034B72F0 RET
	0x034B72F4 SUB X31, X31, 0x50
	0x034B72F8 STR X30, [X31 + 0x30]
	0x034B72FC STP X20, X19, [X31 + 0x40]
	0x034B7300 ADRP X20, 0xF26000
	0x034B7304 LDR X8, [X20 + 0xE10]
	0x034B7308 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3368]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43786240
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1318
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3368], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.VoipBitrate ovr_Voip_GetLocalBitrate(System.UInt64 peerID)

Disassembly:
	0x034B730C CBNZ X8, 0x34B7358
	0x034B7310 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7314 LDR V0, [X12 + 0x5B8]
	0x034B7318 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B731C ADRP X10, 0xFFFFFFFFFD670000
	0x034B7320 ADD X8, X8, 0xDD2
	0x034B7324 MOVZ W9, 0x11
	0x034B7328 ADD X10, X10, 0xBE6
	0x034B732C MOVZ W11, 0x17
	0x034B7330 MOVZ W13, 0x8
	0x034B7334 ADD X0, X31, 0x0
	0x034B7338 STP X8, X9, [X31]
	0x034B733C STP X10, X11, [X31 + 0x10]
	0x034B7340 STR W13, [X31 + 0x28]
	0x034B7344 STR D0, [X31 + 0x20]
	0x034B7348 STRB W31, [X31 + 0x2C]
	0x034B734C BL 0x1C1729C
	0x034B7350 MOV X8, X0
	0x034B7354 STR X0, [X20 + 0xE10]
	0x034B7358 MOV X0, X19
	0x034B735C BLR X8
	0x034B7360 LDP X20, X19, [X31 + 0x40]
	0x034B7364 LDR X30, [X31 + 0x30]
	0x034B7368 ADD X31, X31, 0x50
	0x034B736C RET
	0x034B7370 SUB X31, X31, 0x40
	0x034B7374 STP X30, X19, [X31 + 0x30]
	0x034B7378 ADRP X19, 0xF26000
	0x034B737C LDR X8, [X19 + 0xE18]
	0x034B7380 CBNZ X8, 0x34B73C8
	0x034B7384 ADRP X12, 0xFFFFFFFFFD636000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3376]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43704320
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1043
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3376], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_Voip_GetOutputBufferMaxSize()

Disassembly:
	0x034B7388 LDR V0, [X12 + 0x5B8]
	0x034B738C ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7390 ADRP X10, 0xFFFFFFFFFD64D000
	0x034B7394 ADD X8, X8, 0xDD2
	0x034B7398 MOVZ W9, 0x11
	0x034B739C ADD X10, X10, 0x62C
	0x034B73A0 MOVZ W11, 0x21
	0x034B73A4 ADD X0, X31, 0x0
	0x034B73A8 STR W31, [X31 + 0x28]
	0x034B73AC STP X8, X9, [X31]
	0x034B73B0 STP X10, X11, [X31 + 0x10]
	0x034B73B4 STR D0, [X31 + 0x20]
	0x034B73B8 STRB W31, [X31 + 0x2C]
	0x034B73BC BL 0x1C1729C
	0x034B73C0 MOV X8, X0
	0x034B73C4 STR X0, [X19 + 0xE18]
	0x034B73C8 BLR X8
	0x034B73CC LDP X30, X19, [X31 + 0x30]
	0x034B73D0 ADD X31, X31, 0x40
	0x034B73D4 RET
	0x034B73D8 SUB X31, X31, 0x40
	0x034B73DC STP X30, X19, [X31 + 0x30]
	0x034B73E0 ADRP X19, 0xF26000
	0x034B73E4 LDR X8, [X19 + 0xE20]
	0x034B73E8 CBNZ X8, 0x34B7430
	0x034B73EC ADRP X12, 0xFFFFFFFFFD636000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF27000
	005 Move X8, [X19+3384]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43814912
	009 Move V0, [X12+1464]
	010 Move X8, -43659264
	011 Move X10, -43687936
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 521
	015 Move W11, 31
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3384], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UIntPtr ovr_Voip_GetPCM(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034B73F0 LDR V0, [X12 + 0x5B8]
	0x034B73F4 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B73F8 ADRP X10, 0xFFFFFFFFFD63B000
	0x034B73FC ADD X8, X8, 0xDD2
	0x034B7400 MOVZ W9, 0x11
	0x034B7404 ADD X10, X10, 0x63D
	0x034B7408 MOVZ W11, 0x28
	0x034B740C ADD X0, X31, 0x0
	0x034B7410 STR W31, [X31 + 0x28]
	0x034B7414 STP X8, X9, [X31]
	0x034B7418 STP X10, X11, [X31 + 0x10]
	0x034B741C STR D0, [X31 + 0x20]
	0x034B7420 STRB W31, [X31 + 0x2C]
	0x034B7424 BL 0x1C1729C
	0x034B7428 MOV X8, X0
	0x034B742C STR X0, [X19 + 0xE20]
	0x034B7430 BLR X8
	0x034B7434 LDP X30, X19, [X31 + 0x30]
	0x034B7438 ADD X31, X31, 0x40
	0x034B743C RET
	0x034B7440 SUB X31, X31, 0x40
	0x034B7444 STP X30, X19, [X31 + 0x30]
	0x034B7448 ADRP X19, 0xF26000
	0x034B744C LDR X8, [X19 + 0xE28]
	0x034B7450 CBNZ X8, 0x34B7498
	0x034B7454 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7458 LDR V0, [X12 + 0x5B8]
	0x034B745C ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7460 ADRP X10, 0xFFFFFFFFFD672000
	0x034B7464 ADD X8, X8, 0xDD2
	0x034B7468 MOVZ W9, 0x11
	0x034B746C ADD X10, X10, 0xC8F
	0x034B7470 MOVZ W11, 0x28
	0x034B7474 ADD X0, X31, 0x0
	0x034B7478 STR W31, [X31 + 0x28]
	0x034B747C STP X8, X9, [X31]
	0x034B7480 STP X10, X11, [X31 + 0x10]
	0x034B7484 STR D0, [X31 + 0x20]
	0x034B7488 STRB W31, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF27000
	008 Move X8, [X22+3392]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43814912
	015 Move V0, [X12+1464]
	016 Move X8, -43659264
	017 Move X10, -43606016
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 231
	021 Move W11, 15
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3392], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.UIntPtr ovr_Voip_GetPCMFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034B748C BL 0x1C1729C
	0x034B7490 MOV X8, X0
	0x034B7494 STR X0, [X19 + 0xE28]
	0x034B7498 BLR X8
	0x034B749C LDP X30, X19, [X31 + 0x30]
	0x034B74A0 ADD X31, X31, 0x40
	0x034B74A4 RET
	0x034B74A8 SUB X31, X31, 0x40
	0x034B74AC STP X30, X19, [X31 + 0x30]
	0x034B74B0 ADRP X19, 0xF26000
	0x034B74B4 LDR X8, [X19 + 0xE30]
	0x034B74B8 CBNZ X8, 0x34B7500
	0x034B74BC ADRP X12, 0xFFFFFFFFFD636000
	0x034B74C0 LDR V0, [X12 + 0x5B8]
	0x034B74C4 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B74C8 ADRP X10, 0xFFFFFFFFFD660000
	0x034B74CC ADD X8, X8, 0xDD2
	0x034B74D0 MOVZ W9, 0x11
	0x034B74D4 ADD X10, X10, 0xCAD
	0x034B74D8 MOVZ W11, 0x1A
	0x034B74DC ADD X0, X31, 0x0
	0x034B74E0 STR W31, [X31 + 0x28]
	0x034B74E4 STP X8, X9, [X31]
	0x034B74E8 STP X10, X11, [X31 + 0x10]
	0x034B74EC STR D0, [X31 + 0x20]
	0x034B74F0 STRB W31, [X31 + 0x2C]
	0x034B74F4 BL 0x1C1729C
	0x034B74F8 MOV X8, X0
	0x034B74FC STR X0, [X19 + 0xE30]
	0x034B7500 BLR X8
	0x034B7504 LDP X30, X19, [X31 + 0x30]
	0x034B7508 ADD X31, X31, 0x40
	0x034B750C RET
	0x034B7510 SUB X31, X31, 0x50
	0x034B7514 STR X30, [X31 + 0x30]
	0x034B7518 STP X20, X19, [X31 + 0x40]
	0x034B751C ADRP X20, 0xF26000
	0x034B7520 LDR X8, [X20 + 0xE38]
	0x034B7524 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF27000
	008 Move X8, [X22+3400]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43814912
	015 Move V0, [X12+1464]
	016 Move X8, -43659264
	017 Move X10, -43737088
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 547
	021 Move W11, 20
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3400], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.UIntPtr ovr_Voip_GetPCMSize(System.UInt64 senderID)

Disassembly:
	0x034B7528 CBNZ X8, 0x34B7574
	0x034B752C ADRP X12, 0xFFFFFFFFFD636000
	0x034B7530 LDR V0, [X12 + 0x5B8]
	0x034B7534 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7538 ADRP X10, 0xFFFFFFFFFD637000
	0x034B753C ADD X8, X8, 0xDD2
	0x034B7540 MOVZ W9, 0x11
	0x034B7544 ADD X10, X10, 0x72F
	0x034B7548 MOVZ W11, 0x2B
	0x034B754C MOVZ W13, 0x8
	0x034B7550 ADD X0, X31, 0x0
	0x034B7554 STP X8, X9, [X31]
	0x034B7558 STP X10, X11, [X31 + 0x10]
	0x034B755C STR W13, [X31 + 0x28]
	0x034B7560 STR D0, [X31 + 0x20]
	0x034B7564 STRB W31, [X31 + 0x2C]
	0x034B7568 BL 0x1C1729C
	0x034B756C MOV X8, X0
	0x034B7570 STR X0, [X20 + 0xE38]
	0x034B7574 MOV X0, X19
	0x034B7578 BLR X8
	0x034B757C LDP X20, X19, [X31 + 0x40]
	0x034B7580 LDR X30, [X31 + 0x30]
	0x034B7584 ADD X31, X31, 0x50
	0x034B7588 RET
	0x034B758C SUB X31, X31, 0x50
	0x034B7590 STP X30, X21, [X31 + 0x30]
	0x034B7594 STP X20, X19, [X31 + 0x40]
	0x034B7598 ADRP X21, 0xF26000
	0x034B759C LDR X8, [X21 + 0xE40]
	0x034B75A0 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3408]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1577
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3408], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_Voip_GetPCMWithTimestamp(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)

Disassembly:
	0x034B75A4 MOV X20, X0
	0x034B75A8 CBNZ X8, 0x34B75F4
	0x034B75AC ADRP X12, 0xFFFFFFFFFD636000
	0x034B75B0 LDR V0, [X12 + 0x5B8]
	0x034B75B4 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B75B8 ADRP X10, 0xFFFFFFFFFD665000
	0x034B75BC ADD X8, X8, 0xDD2
	0x034B75C0 MOVZ W9, 0x11
	0x034B75C4 ADD X10, X10, 0x106
	0x034B75C8 MOVZ W11, 0x1E
	0x034B75CC MOVZ W13, 0x10
	0x034B75D0 ADD X0, X31, 0x0
	0x034B75D4 STP X8, X9, [X31]
	0x034B75D8 STP X10, X11, [X31 + 0x10]
	0x034B75DC STR W13, [X31 + 0x28]
	0x034B75E0 STR D0, [X31 + 0x20]
	0x034B75E4 STRB W31, [X31 + 0x2C]
	0x034B75E8 BL 0x1C1729C
	0x034B75EC MOV X8, X0
	0x034B75F0 STR X0, [X21 + 0xE40]
	0x034B75F4 MOV X0, X20
	0x034B75F8 MOV X1, X19
	0x034B75FC BLR X8
	0x034B7600 LDP X20, X19, [X31 + 0x40]
	0x034B7604 LDP X30, X21, [X31 + 0x30]
	0x034B7608 ADD X31, X31, 0x50
	0x034B760C RET
	0x034B7610 SUB X31, X31, 0x40
	0x034B7614 STP X30, X19, [X31 + 0x30]
	0x034B7618 ADRP X19, 0xF26000
	0x034B761C LDR X8, [X19 + 0xE48]
	0x034B7620 CBNZ X8, 0x34B7668
	0x034B7624 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7628 LDR V0, [X12 + 0x5B8]
	0x034B762C ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7630 ADRP X10, 0xFFFFFFFFFD672000
	0x034B7634 ADD X8, X8, 0xDD2
	0x034B7638 MOVZ W9, 0x11
	0x034B763C ADD X10, X10, 0xCB8
	0x034B7640 MOVZ W11, 0x20
	0x034B7644 ADD X0, X31, 0x0
	0x034B7648 STR W31, [X31 + 0x28]
	0x034B764C STP X8, X9, [X31]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xF27000
	009 Move X8, [X23+3416]
	010 Move X20, X3
	011 Move X19, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {36}
	016 Move X12, -43814912
	017 Move V0, [X12+1464]
	018 Move X8, -43659264
	019 Move X10, -43704320
	020 Add X8, X8, 3538
	021 Move W9, 17
	022 Add X10, X10, 1068
	023 Move W11, 28
	024 Move W13, 32
	025 Add X0, X31, 0
	026 Move [X31], X8
	027 Move [X31+8], X9
	028 Move [X31+16], X10
	029 Move [X31+24], X11
	030 Move [X31+40], W13
	031 Move [X31+32], D0
	032 Move [X31+44], W31
	033 Call 0x1C1829C
	034 Move X8, X0
	035 Move [X23+3416], X0
	036 Add X9, X22, 32
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X10, X20, 32
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X0, X21
	043 Move X2, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, [X31+80]
	046 Move X19, [X31+88]
	047 Move X22, [X31+64]
	048 Move X21, [X31+72]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Add X31, X31, 96
	052 Return X0

Method: System.UIntPtr ovr_Voip_GetPCMWithTimestampFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)

Disassembly:
	0x034B7650 STP X10, X11, [X31 + 0x10]
	0x034B7654 STR D0, [X31 + 0x20]
	0x034B7658 STRB W31, [X31 + 0x2C]
	0x034B765C BL 0x1C1729C
	0x034B7660 MOV X8, X0
	0x034B7664 STR X0, [X19 + 0xE48]
	0x034B7668 BLR X8
	0x034B766C LDP X30, X19, [X31 + 0x30]
	0x034B7670 ADD X31, X31, 0x40
	0x034B7674 RET
	0x034B7678 SUB X31, X31, 0x40
	0x034B767C STP X30, X19, [X31 + 0x30]
	0x034B7680 ADRP X19, 0xF26000
	0x034B7684 LDR X8, [X19 + 0xE50]
	0x034B7688 CBNZ X8, 0x34B76D0
	0x034B768C ADRP X12, 0xFFFFFFFFFD636000
	0x034B7690 LDR V0, [X12 + 0x5B8]
	0x034B7694 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7698 ADRP X10, 0xFFFFFFFFFD66F000
	0x034B769C ADD X8, X8, 0xDD2
	0x034B76A0 MOVZ W9, 0x11
	0x034B76A4 ADD X10, X10, 0x23A
	0x034B76A8 MOVZ W11, 0x2A
	0x034B76AC ADD X0, X31, 0x0
	0x034B76B0 STR W31, [X31 + 0x28]
	0x034B76B4 STP X8, X9, [X31]
	0x034B76B8 STP X10, X11, [X31 + 0x10]
	0x034B76BC STR D0, [X31 + 0x20]
	0x034B76C0 STRB W31, [X31 + 0x2C]
	0x034B76C4 BL 0x1C1729C
	0x034B76C8 MOV X8, X0
	0x034B76CC STR X0, [X19 + 0xE50]
	0x034B76D0 BLR X8
	0x034B76D4 LDP X30, X19, [X31 + 0x30]
	0x034B76D8 ADD X31, X31, 0x40
	0x034B76DC RET
	0x034B76E0 SUB X31, X31, 0x40
	0x034B76E4 STP X30, X19, [X31 + 0x30]
	0x034B76E8 ADRP X19, 0xF26000
	0x034B76EC LDR X8, [X19 + 0xE58]
	0x034B76F0 CBNZ X8, 0x34B7738
	0x034B76F4 ADRP X12, 0xFFFFFFFFFD636000
	0x034B76F8 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xF27000
	009 Move X8, [X23+3424]
	010 Move X20, X3
	011 Move X19, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {36}
	016 Move X12, -43814912
	017 Move V0, [X12+1464]
	018 Move X8, -43659264
	019 Move X10, -43786240
	020 Add X8, X8, 3538
	021 Move W9, 17
	022 Add X10, X10, 1351
	023 Move W11, 33
	024 Move W13, 32
	025 Add X0, X31, 0
	026 Move [X31], X8
	027 Move [X31+8], X9
	028 Move [X31+16], X10
	029 Move [X31+24], X11
	030 Move [X31+40], W13
	031 Move [X31+32], D0
	032 Move [X31+44], W31
	033 Call 0x1C1829C
	034 Move X8, X0
	035 Move [X23+3424], X0
	036 Add X9, X22, 32
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X10, X20, 32
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X0, X21
	043 Move X2, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, [X31+80]
	046 Move X19, [X31+88]
	047 Move X22, [X31+64]
	048 Move X21, [X31+72]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Add X31, X31, 96
	052 Return X0

Method: Oculus.Platform.VoipBitrate ovr_Voip_GetRemoteBitrate(System.UInt64 peerID)

Disassembly:
	0x034B76FC ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7700 ADRP X10, 0xFFFFFFFFFD657000
	0x034B7704 ADD X8, X8, 0xDD2
	0x034B7708 MOVZ W9, 0x11
	0x034B770C ADD X10, X10, 0x35E
	0x034B7710 MOVZ W11, 0x26
	0x034B7714 ADD X0, X31, 0x0
	0x034B7718 STR W31, [X31 + 0x28]
	0x034B771C STP X8, X9, [X31]
	0x034B7720 STP X10, X11, [X31 + 0x10]
	0x034B7724 STR D0, [X31 + 0x20]
	0x034B7728 STRB W31, [X31 + 0x2C]
	0x034B772C BL 0x1C1729C
	0x034B7730 MOV X8, X0
	0x034B7734 STR X0, [X19 + 0xE58]
	0x034B7738 BLR X8
	0x034B773C LDP X30, X19, [X31 + 0x30]
	0x034B7740 ADD X31, X31, 0x40
	0x034B7744 RET
	0x034B7748 STP X30, X21, [X31 - 0x20]!
	0x034B774C STP X20, X19, [X31 + 0x10]
	0x034B7750 ADRP X21, 0xF26000
	0x034B7754 ADRP X20, 0xC7B000
	0x034B7758 LDRB W8, [X21 + 0xE60]
	0x034B775C LDR X20, [X20 + 0x328]
	0x034B7760 MOV X19, X0
	0x034B7764 TBNZ X8, 0x0, 0x34B7788
	0x034B7768 ADRP X0, 0xC7B000
	0x034B776C LDR X0, [X0 + 0x328]
	0x034B7770 BL 0x1C16CF4
	0x034B7774 ADRP X0, 0xC64000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3432]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43704320
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1097
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3432], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt32 ovr_Voip_GetSyncTimestamp(System.UInt64 userID)

Disassembly:
	0x034B7778 LDR X0, [X0 + 0x850]
	0x034B777C BL 0x1C16CF4
	0x034B7780 MOVZ W8, 0x1
	0x034B7784 STRB W8, [X21 + 0xE60]
	0x034B7788 LDR X0, [X20]
	0x034B778C ADRP X20, 0xC64000
	0x034B7790 LDR W8, [X0 + 0xE0]
	0x034B7794 LDR X20, [X20 + 0x850]
	0x034B7798 CBNZ W8, 0x34B77A0
	0x034B779C BL 0x1C16DFC
	0x034B77A0 MOV X0, X19
	0x034B77A4 BL 0x34B404C
	0x034B77A8 MOV X19, X0
	0x034B77AC BL 0x34B77E4
	0x034B77B0 LDR X8, [X20]
	0x034B77B4 MOV X20, X0
	0x034B77B8 LDR W9, [X8 + 0xE0]
	0x034B77BC CBNZ W9, 0x34B77C8
	0x034B77C0 MOV X0, X8
	0x034B77C4 BL 0x1C16DFC
	0x034B77C8 MOV X0, X19
	0x034B77CC MOV X1, X31
	0x034B77D0 BL 0x32C1060
	0x034B77D4 MOV X0, X20
	0x034B77D8 LDP X20, X19, [X31 + 0x10]
	0x034B77DC LDP X30, X21, [X31], #0x20
	0x034B77E0 RET
	0x034B77E4 SUB X31, X31, 0x50
	0x034B77E8 STR X30, [X31 + 0x30]
	0x034B77EC STP X20, X19, [X31 + 0x40]
	0x034B77F0 ADRP X20, 0xF26000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3440]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3276
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3440], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_Voip_GetSyncTimestampDifference(System.UInt32 lhs, System.UInt32 rhs)

Disassembly:
	0x034B77F4 LDR X8, [X20 + 0xE68]
	0x034B77F8 MOV X19, X0
	0x034B77FC CBNZ X8, 0x34B7848
	0x034B7800 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7804 LDR V0, [X12 + 0x5B8]
	0x034B7808 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B780C ADRP X10, 0xFFFFFFFFFD657000
	0x034B7810 ADD X8, X8, 0xDD2
	0x034B7814 MOVZ W9, 0x11
	0x034B7818 ADD X10, X10, 0x385
	0x034B781C MOVZ W11, 0x2B
	0x034B7820 MOVZ W13, 0x8
	0x034B7824 ADD X0, X31, 0x0
	0x034B7828 STP X8, X9, [X31]
	0x034B782C STP X10, X11, [X31 + 0x10]
	0x034B7830 STR W13, [X31 + 0x28]
	0x034B7834 STR D0, [X31 + 0x20]
	0x034B7838 STRB W31, [X31 + 0x2C]
	0x034B783C BL 0x1C1729C
	0x034B7840 MOV X8, X0
	0x034B7844 STR X0, [X20 + 0xE68]
	0x034B7848 MOV X0, X19
	0x034B784C BLR X8
	0x034B7850 LDP X20, X19, [X31 + 0x40]
	0x034B7854 LDR X30, [X31 + 0x30]
	0x034B7858 ADD X31, X31, 0x50
	0x034B785C RET
	0x034B7860 SUB X31, X31, 0x50
	0x034B7864 STR X30, [X31 + 0x30]
	0x034B7868 STP X20, X19, [X31 + 0x40]
	0x034B786C ADRP X20, 0xF26000
	0x034B7870 LDR X8, [X20 + 0xE70]
	0x034B7874 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF27000
	007 Move X8, [X21+3448]
	008 Move W19, W1
	009 Move W20, W0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43814912
	013 Move V0, [X12+1464]
	014 Move X8, -43659264
	015 Move X10, -43667456
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 4086
	019 Move W11, 35
	020 Move W13, 8
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3448], X0
	032 Move W0, W20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: Oculus.Platform.VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted()

Disassembly:
	0x034B7878 CBNZ X8, 0x34B78C4
	0x034B787C ADRP X12, 0xFFFFFFFFFD636000
	0x034B7880 LDR V0, [X12 + 0x5B8]
	0x034B7884 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7888 ADRP X10, 0xFFFFFFFFFD665000
	0x034B788C ADD X8, X8, 0xDD2
	0x034B7890 MOVZ W9, 0x11
	0x034B7894 ADD X10, X10, 0x125
	0x034B7898 MOVZ W11, 0x14
	0x034B789C MOVZ W13, 0x8
	0x034B78A0 ADD X0, X31, 0x0
	0x034B78A4 STP X8, X9, [X31]
	0x034B78A8 STP X10, X11, [X31 + 0x10]
	0x034B78AC STR W13, [X31 + 0x28]
	0x034B78B0 STR D0, [X31 + 0x20]
	0x034B78B4 STRB W31, [X31 + 0x2C]
	0x034B78B8 BL 0x1C1729C
	0x034B78BC MOV X8, X0
	0x034B78C0 STR X0, [X20 + 0xE70]
	0x034B78C4 MOV X0, X19
	0x034B78C8 BLR X8
	0x034B78CC LDP X20, X19, [X31 + 0x40]
	0x034B78D0 LDR X30, [X31 + 0x30]
	0x034B78D4 ADD X31, X31, 0x50
	0x034B78D8 RET
	0x034B78DC SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF27000
	005 Move X8, [X19+3456]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43814912
	009 Move V0, [X12+1464]
	010 Move X8, -43659264
	011 Move X10, -43642880
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3207
	015 Move W11, 37
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3456], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: Oculus.Platform.SystemVoipStatus ovr_Voip_GetSystemVoipStatus()

Disassembly:
	0x034B78E0 STR X30, [X31 + 0x30]
	0x034B78E4 STP X20, X19, [X31 + 0x40]
	0x034B78E8 ADRP X20, 0xF26000
	0x034B78EC LDR X8, [X20 + 0xE78]
	0x034B78F0 MOV X19, X0
	0x034B78F4 CBNZ X8, 0x34B7940
	0x034B78F8 ADRP X12, 0xFFFFFFFFFD636000
	0x034B78FC LDR V0, [X12 + 0x5B8]
	0x034B7900 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7904 ADRP X10, 0xFFFFFFFFFD63F000
	0x034B7908 ADD X8, X8, 0xDD2
	0x034B790C MOVZ W9, 0x11
	0x034B7910 ADD X10, X10, 0x5C2
	0x034B7914 MOVZ W11, 0x18
	0x034B7918 MOVZ W13, 0x8
	0x034B791C ADD X0, X31, 0x0
	0x034B7920 STP X8, X9, [X31]
	0x034B7924 STP X10, X11, [X31 + 0x10]
	0x034B7928 STR W13, [X31 + 0x28]
	0x034B792C STR D0, [X31 + 0x20]
	0x034B7930 STRB W31, [X31 + 0x2C]
	0x034B7934 BL 0x1C1729C
	0x034B7938 MOV X8, X0
	0x034B793C STR X0, [X20 + 0xE78]
	0x034B7940 MOV X0, X19
	0x034B7944 BLR X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF27000
	005 Move X8, [X19+3464]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43814912
	009 Move V0, [X12+1464]
	010 Move X8, -43659264
	011 Move X10, -43745280
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 865
	015 Move W11, 28
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3464], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_Voip_SetMicrophoneMuted(Oculus.Platform.VoipMuteState state)

Disassembly:
	0x034B7948 LDP X20, X19, [X31 + 0x40]
	0x034B794C LDR X30, [X31 + 0x30]
	0x034B7950 ADD X31, X31, 0x50
	0x034B7954 RET
	0x034B7958 STP X30, X21, [X31 - 0x20]!
	0x034B795C STP X20, X19, [X31 + 0x10]
	0x034B7960 ADRP X21, 0xF26000
	0x034B7964 ADRP X20, 0xC7B000
	0x034B7968 LDRB W8, [X21 + 0xE80]
	0x034B796C LDR X20, [X20 + 0x328]
	0x034B7970 MOV X19, X0
	0x034B7974 TBNZ X8, 0x0, 0x34B7998
	0x034B7978 ADRP X0, 0xC7B000
	0x034B797C LDR X0, [X0 + 0x328]
	0x034B7980 BL 0x1C16CF4
	0x034B7984 ADRP X0, 0xC64000
	0x034B7988 LDR X0, [X0 + 0x850]
	0x034B798C BL 0x1C16CF4
	0x034B7990 MOVZ W8, 0x1
	0x034B7994 STRB W8, [X21 + 0xE80]
	0x034B7998 LDR X0, [X20]
	0x034B799C ADRP X20, 0xC64000
	0x034B79A0 LDR W8, [X0 + 0xE0]
	0x034B79A4 LDR X20, [X20 + 0x850]
	0x034B79A8 CBNZ W8, 0x34B79B0
	0x034B79AC BL 0x1C16DFC
	0x034B79B0 MOV X0, X19
	0x034B79B4 BL 0x34B404C
	0x034B79B8 MOV X19, X0
	0x034B79BC BL 0x34B79F4
	0x034B79C0 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3472]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3302
	017 Move W11, 27
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3472], X0
	030 Move W0, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_Voip_SetNewConnectionOptions(System.IntPtr voipOptions)

Disassembly:
	0x034B79C4 MOV X20, X0
	0x034B79C8 LDR W9, [X8 + 0xE0]
	0x034B79CC CBNZ W9, 0x34B79D8
	0x034B79D0 MOV X0, X8
	0x034B79D4 BL 0x1C16DFC
	0x034B79D8 MOV X0, X19
	0x034B79DC MOV X1, X31
	0x034B79E0 BL 0x32C1060
	0x034B79E4 MOV X0, X20
	0x034B79E8 LDP X20, X19, [X31 + 0x10]
	0x034B79EC LDP X30, X21, [X31], #0x20
	0x034B79F0 RET
	0x034B79F4 SUB X31, X31, 0x50
	0x034B79F8 STR X30, [X31 + 0x30]
	0x034B79FC STP X20, X19, [X31 + 0x40]
	0x034B7A00 ADRP X20, 0xF26000
	0x034B7A04 LDR X8, [X20 + 0xE88]
	0x034B7A08 MOV X19, X0
	0x034B7A0C CBNZ X8, 0x34B7A58
	0x034B7A10 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7A14 LDR V0, [X12 + 0x5B8]
	0x034B7A18 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7A1C ADRP X10, 0xFFFFFFFFFD66B000
	0x034B7A20 ADD X8, X8, 0xDD2
	0x034B7A24 MOVZ W9, 0x11
	0x034B7A28 ADD X10, X10, 0x2BD
	0x034B7A2C MOVZ W11, 0x1A
	0x034B7A30 MOVZ W13, 0x8
	0x034B7A34 ADD X0, X31, 0x0
	0x034B7A38 STP X8, X9, [X31]
	0x034B7A3C STP X10, X11, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3480]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43560960
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2865
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3480], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_Voip_SetOutputSampleRate(Oculus.Platform.VoipSampleRate rate)

Disassembly:
	0x034B7A40 STR W13, [X31 + 0x28]
	0x034B7A44 STR D0, [X31 + 0x20]
	0x034B7A48 STRB W31, [X31 + 0x2C]
	0x034B7A4C BL 0x1C1729C
	0x034B7A50 MOV X8, X0
	0x034B7A54 STR X0, [X20 + 0xE88]
	0x034B7A58 MOV X0, X19
	0x034B7A5C BLR X8
	0x034B7A60 LDP X20, X19, [X31 + 0x40]
	0x034B7A64 LDR X30, [X31 + 0x30]
	0x034B7A68 ADD X31, X31, 0x50
	0x034B7A6C RET
	0x034B7A70 SUB X31, X31, 0x50
	0x034B7A74 STR X30, [X31 + 0x30]
	0x034B7A78 STP X20, X19, [X31 + 0x40]
	0x034B7A7C ADRP X20, 0xF26000
	0x034B7A80 LDR X8, [X20 + 0xE90]
	0x034B7A84 MOV X19, X0
	0x034B7A88 CBNZ X8, 0x34B7AD4
	0x034B7A8C ADRP X12, 0xFFFFFFFFFD636000
	0x034B7A90 LDR V0, [X12 + 0x5B8]
	0x034B7A94 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7A98 ADRP X10, 0xFFFFFFFFFD651000
	0x034B7A9C ADD X8, X8, 0xDD2
	0x034B7AA0 MOVZ W9, 0x11
	0x034B7AA4 ADD X10, X10, 0x463
	0x034B7AA8 MOVZ W11, 0x16
	0x034B7AAC MOVZ W13, 0x8
	0x034B7AB0 ADD X0, X31, 0x0
	0x034B7AB4 STP X8, X9, [X31]
	0x034B7AB8 STP X10, X11, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3488]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43810816
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1810
	017 Move W11, 28
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3488], X0
	030 Move W0, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_Voip_Start(System.UInt64 userID)

Disassembly:
	0x034B7ABC STR W13, [X31 + 0x28]
	0x034B7AC0 STR D0, [X31 + 0x20]
	0x034B7AC4 STRB W31, [X31 + 0x2C]
	0x034B7AC8 BL 0x1C1729C
	0x034B7ACC MOV X8, X0
	0x034B7AD0 STR X0, [X20 + 0xE90]
	0x034B7AD4 MOV X0, X19
	0x034B7AD8 BLR X8
	0x034B7ADC LDP X20, X19, [X31 + 0x40]
	0x034B7AE0 LDR X30, [X31 + 0x30]
	0x034B7AE4 ADD X31, X31, 0x50
	0x034B7AE8 RET
	0x034B7AEC SUB X31, X31, 0x50
	0x034B7AF0 STR X30, [X31 + 0x30]
	0x034B7AF4 STP X20, X19, [X31 + 0x40]
	0x034B7AF8 ADRP X20, 0xF26000
	0x034B7AFC LDR X8, [X20 + 0xE98]
	0x034B7B00 MOV X19, X0
	0x034B7B04 CBNZ X8, 0x34B7B50
	0x034B7B08 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7B0C LDR V0, [X12 + 0x5B8]
	0x034B7B10 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7B14 ADRP X10, 0xFFFFFFFFFD670000
	0x034B7B18 ADD X8, X8, 0xDD2
	0x034B7B1C MOVZ W9, 0x11
	0x034B7B20 ADD X10, X10, 0xBFE
	0x034B7B24 MOVZ W11, 0x1A
	0x034B7B28 MOVZ W13, 0x8
	0x034B7B2C ADD X0, X31, 0x0
	0x034B7B30 STP X8, X9, [X31]
	0x034B7B34 STP X10, X11, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3496]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43618304
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3599
	017 Move W11, 14
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3496], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_Voip_Stop(System.UInt64 userID)

Disassembly:
	0x034B7B38 STR W13, [X31 + 0x28]
	0x034B7B3C STR D0, [X31 + 0x20]
	0x034B7B40 STRB W31, [X31 + 0x2C]
	0x034B7B44 BL 0x1C1729C
	0x034B7B48 MOV X8, X0
	0x034B7B4C STR X0, [X20 + 0xE98]
	0x034B7B50 MOV X0, X19
	0x034B7B54 BLR X8
	0x034B7B58 LDP X20, X19, [X31 + 0x40]
	0x034B7B5C LDR X30, [X31 + 0x30]
	0x034B7B60 ADD X31, X31, 0x50
	0x034B7B64 RET
	0x034B7B68 STP X30, X21, [X31 - 0x20]!
	0x034B7B6C STP X20, X19, [X31 + 0x10]
	0x034B7B70 ADRP X21, 0xF26000
	0x034B7B74 ADRP X20, 0xC7B000
	0x034B7B78 LDRB W8, [X21 + 0xEA0]
	0x034B7B7C LDR X20, [X20 + 0x328]
	0x034B7B80 MOV X19, X0
	0x034B7B84 TBNZ X8, 0x0, 0x34B7BA8
	0x034B7B88 ADRP X0, 0xC7B000
	0x034B7B8C LDR X0, [X0 + 0x328]
	0x034B7B90 BL 0x1C16CF4
	0x034B7B94 ADRP X0, 0xC64000
	0x034B7B98 LDR X0, [X0 + 0x850]
	0x034B7B9C BL 0x1C16CF4
	0x034B7BA0 MOVZ W8, 0x1
	0x034B7BA4 STRB W8, [X21 + 0xEA0]
	0x034B7BA8 LDR X0, [X20]
	0x034B7BAC ADRP X20, 0xC64000
	0x034B7BB0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3504]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43659264
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3556
	017 Move W11, 13
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3504], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.UInt64 ovr_AbuseReport_LaunchAdvancedReportFlow(System.UInt64 content_id, System.IntPtr abuse_report_options)

Disassembly:
	0x034B7BB4 LDR X20, [X20 + 0x850]
	0x034B7BB8 CBNZ W8, 0x34B7BC0
	0x034B7BBC BL 0x1C16DFC
	0x034B7BC0 MOV X0, X19
	0x034B7BC4 BL 0x34B404C
	0x034B7BC8 MOV X19, X0
	0x034B7BCC BL 0x34B7C04
	0x034B7BD0 LDR X8, [X20]
	0x034B7BD4 MOV X20, X0
	0x034B7BD8 LDR W9, [X8 + 0xE0]
	0x034B7BDC CBNZ W9, 0x34B7BE8
	0x034B7BE0 MOV X0, X8
	0x034B7BE4 BL 0x1C16DFC
	0x034B7BE8 MOV X0, X19
	0x034B7BEC MOV X1, X31
	0x034B7BF0 BL 0x32C1060
	0x034B7BF4 MOV X0, X20
	0x034B7BF8 LDP X20, X19, [X31 + 0x10]
	0x034B7BFC LDP X30, X21, [X31], #0x20
	0x034B7C00 RET
	0x034B7C04 SUB X31, X31, 0x50
	0x034B7C08 STR X30, [X31 + 0x30]
	0x034B7C0C STP X20, X19, [X31 + 0x40]
	0x034B7C10 ADRP X20, 0xF26000
	0x034B7C14 LDR X8, [X20 + 0xEA8]
	0x034B7C18 MOV X19, X0
	0x034B7C1C CBNZ X8, 0x34B7C68
	0x034B7C20 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7C24 LDR V0, [X12 + 0x5B8]
	0x034B7C28 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7C2C ADRP X10, 0xFFFFFFFFFD64B000
	0x034B7C30 ADD X8, X8, 0xDD2
	0x034B7C34 MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF27000
	007 Move X8, [X21+3512]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43814912
	013 Move V0, [X12+1464]
	014 Move X8, -43659264
	015 Move X10, -43618304
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3614
	019 Move W11, 40
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3512], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_AbuseReport_ReportRequestHandled(Oculus.Platform.ReportRequestResponse response)

Disassembly:
	0x034B7C38 ADD X10, X10, 0x213
	0x034B7C3C MOVZ W11, 0x1C
	0x034B7C40 MOVZ W13, 0x8
	0x034B7C44 ADD X0, X31, 0x0
	0x034B7C48 STP X8, X9, [X31]
	0x034B7C4C STP X10, X11, [X31 + 0x10]
	0x034B7C50 STR W13, [X31 + 0x28]
	0x034B7C54 STR D0, [X31 + 0x20]
	0x034B7C58 STRB W31, [X31 + 0x2C]
	0x034B7C5C BL 0x1C1729C
	0x034B7C60 MOV X8, X0
	0x034B7C64 STR X0, [X20 + 0xEA8]
	0x034B7C68 MOV X0, X19
	0x034B7C6C BLR X8
	0x034B7C70 LDP X20, X19, [X31 + 0x40]
	0x034B7C74 LDR X30, [X31 + 0x30]
	0x034B7C78 ADD X31, X31, 0x50
	0x034B7C7C RET
	0x034B7C80 SUB X31, X31, 0x50
	0x034B7C84 STR X30, [X31 + 0x30]
	0x034B7C88 STP X20, X19, [X31 + 0x40]
	0x034B7C8C ADRP X20, 0xF26000
	0x034B7C90 LDR X8, [X20 + 0xEB0]
	0x034B7C94 MOV X19, X0
	0x034B7C98 CBNZ X8, 0x34B7CE4
	0x034B7C9C ADRP X12, 0xFFFFFFFFFD636000
	0x034B7CA0 LDR V0, [X12 + 0x5B8]
	0x034B7CA4 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7CA8 ADRP X10, 0xFFFFFFFFFD66F000
	0x034B7CAC ADD X8, X8, 0xDD2
	0x034B7CB0 MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF27000
	006 Move X8, [X20+3520]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43814912
	011 Move V0, [X12+1464]
	012 Move X8, -43659264
	013 Move X10, -43778048
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1437
	017 Move W11, 36
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3520], X0
	030 Move W0, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Achievements_AddCount(System.String name, System.UInt64 count)

Disassembly:
	0x034B7CB4 ADD X10, X10, 0x265
	0x034B7CB8 MOVZ W11, 0x1C
	0x034B7CBC MOVZ W13, 0x8
	0x034B7CC0 ADD X0, X31, 0x0
	0x034B7CC4 STP X8, X9, [X31]
	0x034B7CC8 STP X10, X11, [X31 + 0x10]
	0x034B7CCC STR W13, [X31 + 0x28]
	0x034B7CD0 STR D0, [X31 + 0x20]
	0x034B7CD4 STRB W31, [X31 + 0x2C]
	0x034B7CD8 BL 0x1C1729C
	0x034B7CDC MOV X8, X0
	0x034B7CE0 STR X0, [X20 + 0xEB0]
	0x034B7CE4 MOV X0, X19
	0x034B7CE8 BLR X8
	0x034B7CEC LDP X20, X19, [X31 + 0x40]
	0x034B7CF0 LDR X30, [X31 + 0x30]
	0x034B7CF4 ADD X31, X31, 0x50
	0x034B7CF8 RET
	0x034B7CFC SUB X31, X31, 0x50
	0x034B7D00 STR X30, [X31 + 0x30]
	0x034B7D04 STP X20, X19, [X31 + 0x40]
	0x034B7D08 ADRP X20, 0xF26000
	0x034B7D0C LDR X8, [X20 + 0xEB8]
	0x034B7D10 MOV X19, X0
	0x034B7D14 CBNZ X8, 0x34B7D60
	0x034B7D18 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7D1C LDR V0, [X12 + 0x5B8]
	0x034B7D20 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7D24 ADRP X10, 0xFFFFFFFFFD639000
	0x034B7D28 ADD X8, X8, 0xDD2
	0x034B7D2C MOVZ W9, 0x11
	0x034B7D30 ADD X10, X10, 0x206
	0x034B7D34 MOVZ W11, 0x20
	0x034B7D38 MOVZ W13, 0x8
	0x034B7D3C ADD X0, X31, 0x0
	0x034B7D40 STP X8, X9, [X31]
	0x034B7D44 STP X10, X11, [X31 + 0x10]
	0x034B7D48 STR W13, [X31 + 0x28]
	0x034B7D4C STR D0, [X31 + 0x20]
	0x034B7D50 STRB W31, [X31 + 0x2C]
	0x034B7D54 BL 0x1C1729C
	0x034B7D58 MOV X8, X0
	0x034B7D5C STR X0, [X20 + 0xEB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF27000
	007 Move X21, 0xC7C000
	008 Move W8, [X22+3528]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC7C000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC65000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3528], W8
	024 Move X0, [X21]
	025 Move X21, 0xC65000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X1, X19
	034 Move X20, X0
	035 Call CAPI.ovr_Achievements_AddCount_Native, X0, X1
	036 Move X8, [X21]
	037 Move X19, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Call Marshal.FreeCoTaskMem, X0
	046 Move X0, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0

Method: System.UInt64 ovr_Achievements_AddCount_Native(System.IntPtr name, System.UInt64 count)

Disassembly:
	0x034B7D60 MOV X0, X19
	0x034B7D64 BLR X8
	0x034B7D68 LDP X20, X19, [X31 + 0x40]
	0x034B7D6C LDR X30, [X31 + 0x30]
	0x034B7D70 ADD X31, X31, 0x50
	0x034B7D74 RET
	0x034B7D78 STP X30, X21, [X31 - 0x20]!
	0x034B7D7C STP X20, X19, [X31 + 0x10]
	0x034B7D80 ADRP X21, 0xF26000
	0x034B7D84 ADRP X20, 0xC7B000
	0x034B7D88 LDRB W8, [X21 + 0xEC0]
	0x034B7D8C LDR X20, [X20 + 0x328]
	0x034B7D90 MOV X19, X0
	0x034B7D94 TBNZ X8, 0x0, 0x34B7DB8
	0x034B7D98 ADRP X0, 0xC7B000
	0x034B7D9C LDR X0, [X0 + 0x328]
	0x034B7DA0 BL 0x1C16CF4
	0x034B7DA4 ADRP X0, 0xC64000
	0x034B7DA8 LDR X0, [X0 + 0x850]
	0x034B7DAC BL 0x1C16CF4
	0x034B7DB0 MOVZ W8, 0x1
	0x034B7DB4 STRB W8, [X21 + 0xEC0]
	0x034B7DB8 LDR X0, [X20]
	0x034B7DBC ADRP X20, 0xC64000
	0x034B7DC0 LDR W8, [X0 + 0xE0]
	0x034B7DC4 LDR X20, [X20 + 0x850]
	0x034B7DC8 CBNZ W8, 0x34B7DD0
	0x034B7DCC BL 0x1C16DFC
	0x034B7DD0 MOV X0, X19
	0x034B7DD4 BL 0x34B404C
	0x034B7DD8 MOV X19, X0
	0x034B7DDC BL 0x34B7E14
	0x034B7DE0 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF27000
	007 Move X8, [X21+3536]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43814912
	013 Move V0, [X12+1464]
	014 Move X8, -43659264
	015 Move X10, -43786240
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1385
	019 Move W11, 25
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3536], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Achievements_AddFields(System.String name, System.String fields)

Disassembly:
	0x034B7DE4 MOV X20, X0
	0x034B7DE8 LDR W9, [X8 + 0xE0]
	0x034B7DEC CBNZ W9, 0x34B7DF8
	0x034B7DF0 MOV X0, X8
	0x034B7DF4 BL 0x1C16DFC
	0x034B7DF8 MOV X0, X19
	0x034B7DFC MOV X1, X31
	0x034B7E00 BL 0x32C1060
	0x034B7E04 MOV X0, X20
	0x034B7E08 LDP X20, X19, [X31 + 0x10]
	0x034B7E0C LDP X30, X21, [X31], #0x20
	0x034B7E10 RET
	0x034B7E14 SUB X31, X31, 0x50
	0x034B7E18 STR X30, [X31 + 0x30]
	0x034B7E1C STP X20, X19, [X31 + 0x40]
	0x034B7E20 ADRP X20, 0xF26000
	0x034B7E24 LDR X8, [X20 + 0xEC8]
	0x034B7E28 MOV X19, X0
	0x034B7E2C CBNZ X8, 0x34B7E78
	0x034B7E30 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7E34 LDR V0, [X12 + 0x5B8]
	0x034B7E38 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7E3C ADRP X10, 0xFFFFFFFFFD64F000
	0x034B7E40 ADD X8, X8, 0xDD2
	0x034B7E44 MOVZ W9, 0x11
	0x034B7E48 ADD X10, X10, 0x4C5
	0x034B7E4C MOVZ W11, 0x22
	0x034B7E50 MOVZ W13, 0x8
	0x034B7E54 ADD X0, X31, 0x0
	0x034B7E58 STP X8, X9, [X31]
	0x034B7E5C STP X10, X11, [X31 + 0x10]
	0x034B7E60 STR W13, [X31 + 0x28]
	0x034B7E64 STR D0, [X31 + 0x20]
	0x034B7E68 STRB W31, [X31 + 0x2C]
	0x034B7E6C BL 0x1C1729C
	0x034B7E70 MOV X8, X0
	0x034B7E74 STR X0, [X20 + 0xEC8]
	0x034B7E78 MOV X0, X19
	0x034B7E7C BLR X8
	0x034B7E80 LDP X20, X19, [X31 + 0x40]
	0x034B7E84 LDR X30, [X31 + 0x30]
	0x034B7E88 ADD X31, X31, 0x50
	0x034B7E8C RET
	0x034B7E90 SUB X31, X31, 0x40
	0x034B7E94 STP X30, X19, [X31 + 0x30]
	0x034B7E98 ADRP X19, 0xF26000
	0x034B7E9C LDR X8, [X19 + 0xED0]
	0x034B7EA0 CBNZ X8, 0x34B7EE8
	0x034B7EA4 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7EA8 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF27000
	007 Move X21, 0xC7C000
	008 Move W8, [X22+3544]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC7C000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC65000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3544], W8
	024 Move X0, [X21]
	025 Move X21, 0xC65000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Call CAPI.StringToNative, X0
	036 Move X19, X0
	037 Move X0, X20
	038 Move X1, X19
	039 Call CAPI.ovr_Achievements_AddFields_Native, X0, X1
	040 Move X8, [X21]
	041 Move X21, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Marshal.FreeCoTaskMem, X0
	050 Move X0, X19
	051 Move X1, X31
	052 Call Marshal.FreeCoTaskMem, X0
	053 Move X0, X21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0

Method: System.UInt64 ovr_Achievements_AddFields_Native(System.IntPtr name, System.IntPtr fields)

Disassembly:
	0x034B7EAC ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7EB0 ADRP X10, 0xFFFFFFFFFD63F000
	0x034B7EB4 ADD X8, X8, 0xDD2
	0x034B7EB8 MOVZ W9, 0x11
	0x034B7EBC ADD X10, X10, 0x5DB
	0x034B7EC0 MOVZ W11, 0x15
	0x034B7EC4 ADD X0, X31, 0x0
	0x034B7EC8 STR W31, [X31 + 0x28]
	0x034B7ECC STP X8, X9, [X31]
	0x034B7ED0 STP X10, X11, [X31 + 0x10]
	0x034B7ED4 STR D0, [X31 + 0x20]
	0x034B7ED8 STRB W31, [X31 + 0x2C]
	0x034B7EDC BL 0x1C1729C
	0x034B7EE0 MOV X8, X0
	0x034B7EE4 STR X0, [X19 + 0xED0]
	0x034B7EE8 BLR X8
	0x034B7EEC LDP X30, X19, [X31 + 0x30]
	0x034B7EF0 ADD X31, X31, 0x40
	0x034B7EF4 RET
	0x034B7EF8 SUB X31, X31, 0x50
	0x034B7EFC STR X30, [X31 + 0x30]
	0x034B7F00 STP X20, X19, [X31 + 0x40]
	0x034B7F04 ADRP X20, 0xF26000
	0x034B7F08 LDR X8, [X20 + 0xED8]
	0x034B7F0C MOV X19, X0
	0x034B7F10 CBNZ X8, 0x34B7F5C
	0x034B7F14 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7F18 LDR V0, [X12 + 0x5B8]
	0x034B7F1C ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7F20 ADRP X10, 0xFFFFFFFFFD647000
	0x034B7F24 ADD X8, X8, 0xDD2
	0x034B7F28 MOVZ W9, 0x11
	0x034B7F2C ADD X10, X10, 0x3A1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF27000
	007 Move X8, [X21+3552]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43814912
	013 Move V0, [X12+1464]
	014 Move X8, -43659264
	015 Move X10, -43769856
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1519
	019 Move W11, 26
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3552], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Achievements_GetAllDefinitions()

Disassembly:
	0x034B7F30 MOVZ W11, 0x14
	0x034B7F34 MOVZ W13, 0x8
	0x034B7F38 ADD X0, X31, 0x0
	0x034B7F3C STP X8, X9, [X31]
	0x034B7F40 STP X10, X11, [X31 + 0x10]
	0x034B7F44 STR W13, [X31 + 0x28]
	0x034B7F48 STR D0, [X31 + 0x20]
	0x034B7F4C STRB W31, [X31 + 0x2C]
	0x034B7F50 BL 0x1C1729C
	0x034B7F54 MOV X8, X0
	0x034B7F58 STR X0, [X20 + 0xED8]
	0x034B7F5C MOV X0, X19
	0x034B7F60 BLR X8
	0x034B7F64 LDP X20, X19, [X31 + 0x40]
	0x034B7F68 LDR X30, [X31 + 0x30]
	0x034B7F6C ADD X31, X31, 0x50
	0x034B7F70 RET
	0x034B7F74 SUB X31, X31, 0x50
	0x034B7F78 STR X30, [X31 + 0x30]
	0x034B7F7C STP X20, X19, [X31 + 0x40]
	0x034B7F80 ADRP X20, 0xF26000
	0x034B7F84 LDR X8, [X20 + 0xEE0]
	0x034B7F88 MOV X19, X0
	0x034B7F8C CBNZ X8, 0x34B7FD8
	0x034B7F90 ADRP X12, 0xFFFFFFFFFD636000
	0x034B7F94 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF27000
	005 Move X8, [X19+3560]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43814912
	009 Move V0, [X12+1464]
	010 Move X8, -43659264
	011 Move X10, -43745280
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 894
	015 Move W11, 34
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3560], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Achievements_GetAllProgress()

Disassembly:
	0x034B7F98 ADRP X8, 0xFFFFFFFFFD65C000
	0x034B7F9C ADRP X10, 0xFFFFFFFFFD645000
	0x034B7FA0 ADD X8, X8, 0xDD2
	0x034B7FA4 MOVZ W9, 0x11
	0x034B7FA8 ADD X10, X10, 0x6F1
	0x034B7FAC MOVZ W11, 0x18
	0x034B7FB0 MOVZ W13, 0x8
	0x034B7FB4 ADD X0, X31, 0x0
	0x034B7FB8 STP X8, X9, [X31]
	0x034B7FBC STP X10, X11, [X31 + 0x10]
	0x034B7FC0 STR W13, [X31 + 0x28]
	0x034B7FC4 STR D0, [X31 + 0x20]
	0x034B7FC8 STRB W31, [X31 + 0x2C]
	0x034B7FCC BL 0x1C1729C
	0x034B7FD0 MOV X8, X0
	0x034B7FD4 STR X0, [X20 + 0xEE0]
	0x034B7FD8 MOV X0, X19
	0x034B7FDC BLR X8
	0x034B7FE0 LDP X20, X19, [X31 + 0x40]
	0x034B7FE4 LDR X30, [X31 + 0x30]
	0x034B7FE8 ADD X31, X31, 0x50
	0x034B7FEC RET
	0x034B7FF0 STP X30, X21, [X31 - 0x20]!
	0x034B7FF4 STP X20, X19, [X31 + 0x10]
	0x034B7FF8 ADRP X21, 0xF26000
	0x034B7FFC ADRP X20, 0xC7B000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF27000
	005 Move X8, [X19+3568]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43814912
	009 Move V0, [X12+1464]
	010 Move X8, -43659264
	011 Move X10, -43581440
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 538
	015 Move W11, 31
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3568], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Achievements_GetDefinitionsByName(System.String[] names, System.Int32 count)

Disassembly:
	0x034B8000 LDRB W8, [X21 + 0xEE8]
	0x034B8004 B 0x3EB18C4
	0x034B8008 MOV X19, X0
	0x034B800C TBNZ X8, 0x0, 0x34B8030
	0x034B8010 ADRP X0, 0xC7A000
	0x034B8014 LDR X0, [X0 + 0x328]
	0x034B8018 BL 0x1C16CF4
	0x034B801C ADRP X0, 0xC63000
	0x034B8020 LDR X0, [X0 + 0x850]
	0x034B8024 BL 0x1C16CF4
	0x034B8028 MOVZ W8, 0x1
	0x034B802C STRB W8, [X21 + 0xEE8]
	0x034B8030 LDR X0, [X20]
	0x034B8034 ADRP X20, 0xC63000
	0x034B8038 LDR W8, [X0 + 0xE0]
	0x034B803C LDR X20, [X20 + 0x850]
	0x034B8040 CBNZ W8, 0x34B8048
	0x034B8044 BL 0x1C16DFC
	0x034B8048 MOV X0, X19
	0x034B804C BL 0x34B404C
	0x034B8050 MOV X19, X0
	0x034B8054 BL 0x34B808C
	0x034B8058 LDR X8, [X20]
	0x034B805C MOV X20, X0
	0x034B8060 LDR W9, [X8 + 0xE0]
	0x034B8064 CBNZ W9, 0x34B8070
	0x034B8068 MOV X0, X8
	0x034B806C BL 0x1C16DFC
	0x034B8070 MOV X0, X19
	0x034B8074 MOV X1, X31
	0x034B8078 BL 0x32C1060
	0x034B807C MOV X0, X20
	0x034B8080 LDP X20, X19, [X31 + 0x10]
	0x034B8084 LDP X30, X21, [X31], #0x20
	0x034B8088 RET
	0x034B808C SUB X31, X31, 0x50
	0x034B8090 STR X30, [X31 + 0x30]
	0x034B8094 STP X20, X19, [X31 + 0x40]
	0x034B8098 ADRP X20, 0xF25000
	0x034B809C LDR X8, [X20 + 0xEF0]
	0x034B80A0 MOV X19, X0
	0x034B80A4 CBNZ X8, 0x34B80F0
	0x034B80A8 ADRP X12, 0xFFFFFFFFFD635000
	0x034B80AC LDR V0, [X12 + 0x5B8]
	0x034B80B0 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B80B4 ADRP X10, 0xFFFFFFFFFD661000
	0x034B80B8 ADD X8, X8, 0xDD2
	0x034B80BC MOVZ W9, 0x11
	0x034B80C0 ADD X10, X10, 0xD02
	0x034B80C4 MOVZ W11, 0x1A
	0x034B80C8 MOVZ W13, 0x8
	0x034B80CC ADD X0, X31, 0x0
	0x034B80D0 STP X8, X9, [X31]
	0x034B80D4 STP X10, X11, [X31 + 0x10]
	0x034B80D8 STR W13, [X31 + 0x28]
	0x034B80DC STR D0, [X31 + 0x20]
	0x034B80E0 STRB W31, [X31 + 0x2C]
	0x034B80E4 BL 0x1C1729C
	0x034B80E8 MOV X8, X0
	0x034B80EC STR X0, [X20 + 0xEF0]
	0x034B80F0 MOV X0, X19
	0x034B80F4 BLR X8
	0x034B80F8 LDP X20, X19, [X31 + 0x40]
	0x034B80FC LDR X30, [X31 + 0x30]
	0x034B8100 ADD X31, X31, 0x50
	0x034B8104 RET
	0x034B8108 SUB X31, X31, 0x50
	0x034B810C STR X30, [X31 + 0x30]
	0x034B8110 STP X20, X19, [X31 + 0x40]
	0x034B8114 ADRP X20, 0xF25000
	0x034B8118 LDR X8, [X20 + 0xEF8]
	0x034B811C MOV X19, X0
	0x034B8120 CBNZ X8, 0x34B816C
	0x034B8124 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8128 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X22, 0xF26000
	011 Move X8, [X22+3576]
	012 Move W19, W1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfEqual {49}
	016 Compare X20, 0
	017 JumpIfEqual {71}
	018 Move X23, [X20+24]
	019 Move X8, X23
	020 ShiftRight X8, 61
	021 And X8, X8, 0xFFFFFFF
	022 Add X0, X8, 8
	023 Call 0x1C17F14
	024 Move X21, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X0], X31
	027 And X23, X23, 0
	028 Add X24, X20, 32
	029 Move X25, X21
	030 Move X0, [X24+8]
	031 Call 0x1C1827C
	032 Subtract X23, X23, 1
	033 Move [X25+8], X0
	034 Move X8, [X22+3576]
	035 Move X0, X21
	036 Move W1, W19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X20+24]
	039 Move X19, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 And X20, X8, 0
	042 Move X22, X21
	043 Move X0, [X22]
	044 Call 0x1C18290
	045 Subtract X20, X20, 1
	046 Move [X22+8], X31
	047 Move X0, X21
	048 Call 0x1C18290
	049 Move X12, -43819008
	050 Move V0, [X12+1464]
	051 Move X8, -43663360
	052 Move X10, -43581440
	053 Add X8, X8, 3538
	054 Move W9, 17
	055 Add X10, X10, 3008
	056 Move W11, 37
	057 Move W13, 12
	058 Add X0, X31, 0
	059 Move [X31], X8
	060 Move [X31+8], X9
	061 Move [X31+16], X10
	062 Move [X31+24], X11
	063 Move [X31+40], W13
	064 Move [X31+32], D0
	065 Move [X31+44], W31
	066 Call 0x1C1829C
	067 Move X8, X0
	068 Move [X22+3576], X0
	069 Compare X20, 0
	070 JumpIfNotEqual {18}
	071 Move X0, X31
	072 Move W1, W19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X19, X0
	075 Move X0, X19
	076 Move X20, [X31+96]
	077 Move X19, [X31+104]
	078 Move X22, [X31+80]
	079 Move X21, [X31+88]
	080 Move X24, [X31+64]
	081 Move X23, [X31+72]
	082 Move X30, [X31+48]
	083 Move X25, [X31+56]
	084 Add X31, X31, 112
	085 Return X0

Method: System.UInt64 ovr_Achievements_GetProgressByName(System.String[] names, System.Int32 count)

Disassembly:
	0x034B812C ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8130 ADRP X10, 0xFFFFFFFFFD65B000
	0x034B8134 ADD X8, X8, 0xDD2
	0x034B8138 MOVZ W9, 0x11
	0x034B813C ADD X10, X10, 0xDF2
	0x034B8140 MOVZ W11, 0x1D
	0x034B8144 MOVZ W13, 0x8
	0x034B8148 ADD X0, X31, 0x0
	0x034B814C STP X8, X9, [X31]
	0x034B8150 STP X10, X11, [X31 + 0x10]
	0x034B8154 STR W13, [X31 + 0x28]
	0x034B8158 STR D0, [X31 + 0x20]
	0x034B815C STRB W31, [X31 + 0x2C]
	0x034B8160 BL 0x1C1729C
	0x034B8164 MOV X8, X0
	0x034B8168 STR X0, [X20 + 0xEF8]
	0x034B816C MOV X0, X19
	0x034B8170 BLR X8
	0x034B8174 LDP X20, X19, [X31 + 0x40]
	0x034B8178 LDR X30, [X31 + 0x30]
	0x034B817C ADD X31, X31, 0x50
	0x034B8180 RET
	0x034B8184 STR X30, [X31 - 0x30]!
	0x034B8188 STP X22, X21, [X31 + 0x10]
	0x034B818C STP X20, X19, [X31 + 0x20]
	0x034B8190 ADRP X22, 0xF25000
	0x034B8194 ADRP X21, 0xC7A000
	0x034B8198 LDRB W8, [X22 + 0xF00]
	0x034B819C LDR X21, [X21 + 0x328]
	0x034B81A0 MOV X19, X1
	0x034B81A4 MOV X20, X0
	0x034B81A8 TBNZ X8, 0x0, 0x34B81CC
	0x034B81AC ADRP X0, 0xC7A000
	0x034B81B0 LDR X0, [X0 + 0x328]
	0x034B81B4 BL 0x1C16CF4
	0x034B81B8 ADRP X0, 0xC63000
	0x034B81BC LDR X0, [X0 + 0x850]
	0x034B81C0 BL 0x1C16CF4
	0x034B81C4 MOVZ W8, 0x1
	0x034B81C8 STRB W8, [X22 + 0xF00]
	0x034B81CC LDR X0, [X21]
	0x034B81D0 ADRP X21, 0xC63000
	0x034B81D4 LDR W8, [X0 + 0xE0]
	0x034B81D8 LDR X21, [X21 + 0x850]
	0x034B81DC CBNZ W8, 0x34B81E4
	0x034B81E0 BL 0x1C16DFC
	0x034B81E4 MOV X0, X20
	0x034B81E8 BL 0x34B404C
	0x034B81EC MOV X20, X0
	0x034B81F0 MOV X0, X19
	0x034B81F4 BL 0x34B404C
	0x034B81F8 MOV X19, X0
	0x034B81FC MOV X0, X20
	0x034B8200 MOV X1, X19
	0x034B8204 BL 0x34B824C
	0x034B8208 LDR X8, [X21]
	0x034B820C MOV X21, X0
	0x034B8210 LDR W9, [X8 + 0xE0]
	0x034B8214 CBNZ W9, 0x34B8220
	0x034B8218 MOV X0, X8
	0x034B821C BL 0x1C16DFC
	0x034B8220 MOV X0, X20
	0x034B8224 MOV X1, X31
	0x034B8228 BL 0x32C1060
	0x034B822C MOV X0, X19
	0x034B8230 MOV X1, X31
	0x034B8234 BL 0x32C1060
	0x034B8238 MOV X0, X21
	0x034B823C LDP X20, X19, [X31 + 0x20]
	0x034B8240 LDP X22, X21, [X31 + 0x10]
	0x034B8244 LDR X30, [X31], #0x30
	0x034B8248 RET
	0x034B824C SUB X31, X31, 0x50
	0x034B8250 STP X30, X21, [X31 + 0x30]
	0x034B8254 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X22, 0xF26000
	011 Move X8, [X22+3584]
	012 Move W19, W1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfEqual {49}
	016 Compare X20, 0
	017 JumpIfEqual {71}
	018 Move X23, [X20+24]
	019 Move X8, X23
	020 ShiftRight X8, 61
	021 And X8, X8, 0xFFFFFFF
	022 Add X0, X8, 8
	023 Call 0x1C17F14
	024 Move X21, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X0], X31
	027 And X23, X23, 0
	028 Add X24, X20, 32
	029 Move X25, X21
	030 Move X0, [X24+8]
	031 Call 0x1C1827C
	032 Subtract X23, X23, 1
	033 Move [X25+8], X0
	034 Move X8, [X22+3584]
	035 Move X0, X21
	036 Move W1, W19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X20+24]
	039 Move X19, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 And X20, X8, 0
	042 Move X22, X21
	043 Move X0, [X22]
	044 Call 0x1C18290
	045 Subtract X20, X20, 1
	046 Move [X22+8], X31
	047 Move X0, X21
	048 Call 0x1C18290
	049 Move X12, -43819008
	050 Move V0, [X12+1464]
	051 Move X8, -43663360
	052 Move X10, -43716608
	053 Add X8, X8, 3538
	054 Move W9, 17
	055 Add X10, X10, 1186
	056 Move W11, 34
	057 Move W13, 12
	058 Add X0, X31, 0
	059 Move [X31], X8
	060 Move [X31+8], X9
	061 Move [X31+16], X10
	062 Move [X31+24], X11
	063 Move [X31+40], W13
	064 Move [X31+32], D0
	065 Move [X31+44], W31
	066 Call 0x1C1829C
	067 Move X8, X0
	068 Move [X22+3584], X0
	069 Compare X20, 0
	070 JumpIfNotEqual {18}
	071 Move X0, X31
	072 Move W1, W19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X19, X0
	075 Move X0, X19
	076 Move X20, [X31+96]
	077 Move X19, [X31+104]
	078 Move X22, [X31+80]
	079 Move X21, [X31+88]
	080 Move X24, [X31+64]
	081 Move X23, [X31+72]
	082 Move X30, [X31+48]
	083 Move X25, [X31+56]
	084 Add X31, X31, 112
	085 Return X0

Method: System.UInt64 ovr_Achievements_Unlock(System.String name)

Disassembly:
	0x034B8258 ADRP X21, 0xF25000
	0x034B825C LDR X8, [X21 + 0xF08]
	0x034B8260 MOV X19, X1
	0x034B8264 MOV X20, X0
	0x034B8268 CBNZ X8, 0x34B82B4
	0x034B826C ADRP X12, 0xFFFFFFFFFD635000
	0x034B8270 LDR V0, [X12 + 0x5B8]
	0x034B8274 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8278 ADRP X10, 0xFFFFFFFFFD668000
	0x034B827C ADD X8, X8, 0xDD2
	0x034B8280 MOVZ W9, 0x11
	0x034B8284 ADD X10, X10, 0xF7
	0x034B8288 MOVZ W11, 0x19
	0x034B828C MOVZ W13, 0x10
	0x034B8290 ADD X0, X31, 0x0
	0x034B8294 STP X8, X9, [X31]
	0x034B8298 STP X10, X11, [X31 + 0x10]
	0x034B829C STR W13, [X31 + 0x28]
	0x034B82A0 STR D0, [X31 + 0x20]
	0x034B82A4 STRB W31, [X31 + 0x2C]
	0x034B82A8 BL 0x1C1729C
	0x034B82AC MOV X8, X0
	0x034B82B0 STR X0, [X21 + 0xF08]
	0x034B82B4 MOV X0, X20
	0x034B82B8 MOV X1, X19
	0x034B82BC BLR X8
	0x034B82C0 LDP X20, X19, [X31 + 0x40]
	0x034B82C4 LDP X30, X21, [X31 + 0x30]
	0x034B82C8 ADD X31, X31, 0x50
	0x034B82CC RET
	0x034B82D0 STR X30, [X31 - 0x30]!
	0x034B82D4 STP X22, X21, [X31 + 0x10]
	0x034B82D8 STP X20, X19, [X31 + 0x20]
	0x034B82DC ADRP X22, 0xF25000
	0x034B82E0 ADRP X21, 0xC7A000
	0x034B82E4 LDRB W8, [X22 + 0xF10]
	0x034B82E8 LDR X21, [X21 + 0x328]
	0x034B82EC MOV X19, X1
	0x034B82F0 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF26000
	006 Move X20, 0xC7B000
	007 Move W8, [X21+3592]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC7B000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC64000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3592], W8
	022 Move X0, [X20]
	023 Move X20, 0xC64000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_Achievements_Unlock_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_Achievements_Unlock_Native(System.IntPtr name)

Disassembly:
	0x034B82F4 TBNZ X8, 0x0, 0x34B8318
	0x034B82F8 ADRP X0, 0xC7A000
	0x034B82FC LDR X0, [X0 + 0x328]
	0x034B8300 BL 0x1C16CF4
	0x034B8304 ADRP X0, 0xC63000
	0x034B8308 LDR X0, [X0 + 0x850]
	0x034B830C BL 0x1C16CF4
	0x034B8310 MOVZ W8, 0x1
	0x034B8314 STRB W8, [X22 + 0xF10]
	0x034B8318 LDR X0, [X21]
	0x034B831C ADRP X21, 0xC63000
	0x034B8320 LDR W8, [X0 + 0xE0]
	0x034B8324 LDR X21, [X21 + 0x850]
	0x034B8328 CBNZ W8, 0x34B8330
	0x034B832C BL 0x1C16DFC
	0x034B8330 MOV X0, X20
	0x034B8334 BL 0x34B404C
	0x034B8338 MOV X1, X19
	0x034B833C MOV X20, X0
	0x034B8340 BL 0x34B837C
	0x034B8344 LDR X8, [X21]
	0x034B8348 MOV X19, X0
	0x034B834C LDR W9, [X8 + 0xE0]
	0x034B8350 CBNZ W9, 0x34B835C
	0x034B8354 MOV X0, X8
	0x034B8358 BL 0x1C16DFC
	0x034B835C MOV X0, X20
	0x034B8360 MOV X1, X31
	0x034B8364 BL 0x32C1060
	0x034B8368 MOV X0, X19
	0x034B836C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3600]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43581440
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3046
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3600], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Application_CancelAppDownload()

Disassembly:
	0x034B8370 LDP X22, X21, [X31 + 0x10]
	0x034B8374 LDR X30, [X31], #0x30
	0x034B8378 RET
	0x034B837C SUB X31, X31, 0x50
	0x034B8380 STP X30, X21, [X31 + 0x30]
	0x034B8384 STP X20, X19, [X31 + 0x40]
	0x034B8388 ADRP X21, 0xF25000
	0x034B838C LDR X8, [X21 + 0xF18]
	0x034B8390 MOV X19, X1
	0x034B8394 MOV X20, X0
	0x034B8398 CBNZ X8, 0x34B83E4
	0x034B839C ADRP X12, 0xFFFFFFFFFD635000
	0x034B83A0 LDR V0, [X12 + 0x5B8]
	0x034B83A4 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B83A8 ADRP X10, 0xFFFFFFFFFD661000
	0x034B83AC ADD X8, X8, 0xDD2
	0x034B83B0 MOVZ W9, 0x11
	0x034B83B4 ADD X10, X10, 0xD1D
	0x034B83B8 MOVZ W11, 0x15
	0x034B83BC MOVZ W13, 0x10
	0x034B83C0 ADD X0, X31, 0x0
	0x034B83C4 STP X8, X9, [X31]
	0x034B83C8 STP X10, X11, [X31 + 0x10]
	0x034B83CC STR W13, [X31 + 0x28]
	0x034B83D0 STR D0, [X31 + 0x20]
	0x034B83D4 STRB W31, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF26000
	005 Move X8, [X19+3608]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43819008
	009 Move V0, [X12+1464]
	010 Move X8, -43663360
	011 Move X10, -43724800
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1580
	015 Move W11, 33
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3608], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Application_CheckAppDownloadProgress()

Disassembly:
	0x034B83D8 BL 0x1C1729C
	0x034B83DC MOV X8, X0
	0x034B83E0 STR X0, [X21 + 0xF18]
	0x034B83E4 MOV X0, X20
	0x034B83E8 MOV X1, X19
	0x034B83EC BLR X8
	0x034B83F0 LDP X20, X19, [X31 + 0x40]
	0x034B83F4 LDP X30, X21, [X31 + 0x30]
	0x034B83F8 ADD X31, X31, 0x50
	0x034B83FC RET
	0x034B8400 SUB X31, X31, 0x50
	0x034B8404 STR X30, [X31 + 0x30]
	0x034B8408 STP X20, X19, [X31 + 0x40]
	0x034B840C ADRP X20, 0xF25000
	0x034B8410 LDR X8, [X20 + 0xF20]
	0x034B8414 MOV X19, X0
	0x034B8418 CBNZ X8, 0x34B8464
	0x034B841C ADRP X12, 0xFFFFFFFFFD635000
	0x034B8420 LDR V0, [X12 + 0x5B8]
	0x034B8424 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8428 ADRP X10, 0xFFFFFFFFFD642000
	0x034B842C ADD X8, X8, 0xDD2
	0x034B8430 MOVZ W9, 0x11
	0x034B8434 ADD X10, X10, 0x7CC
	0x034B8438 MOVZ W11, 0x1C
	0x034B843C MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF26000
	005 Move X8, [X19+3616]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43819008
	009 Move V0, [X12+1464]
	010 Move X8, -43663360
	011 Move X10, -43798528
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1597
	015 Move W11, 40
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3616], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Application_GetInstalledApplications()

Disassembly:
	0x034B8440 ADD X0, X31, 0x0
	0x034B8444 STP X8, X9, [X31]
	0x034B8448 STP X10, X11, [X31 + 0x10]
	0x034B844C STR W13, [X31 + 0x28]
	0x034B8450 STR D0, [X31 + 0x20]
	0x034B8454 STRB W31, [X31 + 0x2C]
	0x034B8458 BL 0x1C1729C
	0x034B845C MOV X8, X0
	0x034B8460 STR X0, [X20 + 0xF20]
	0x034B8464 MOV X0, X19
	0x034B8468 BLR X8
	0x034B846C LDP X20, X19, [X31 + 0x40]
	0x034B8470 LDR X30, [X31 + 0x30]
	0x034B8474 ADD X31, X31, 0x50
	0x034B8478 RET
	0x034B847C SUB X31, X31, 0x50
	0x034B8480 STR X30, [X31 + 0x30]
	0x034B8484 STP X20, X19, [X31 + 0x40]
	0x034B8488 ADRP X20, 0xF25000
	0x034B848C LDR X8, [X20 + 0xF28]
	0x034B8490 MOV X19, X0
	0x034B8494 CBNZ X8, 0x34B84E0
	0x034B8498 ADRP X12, 0xFFFFFFFFFD635000
	0x034B849C LDR V0, [X12 + 0x5B8]
	0x034B84A0 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B84A4 ADRP X10, 0xFFFFFFFFFD668000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF26000
	005 Move X8, [X19+3624]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43819008
	009 Move V0, [X12+1464]
	010 Move X8, -43663360
	011 Move X10, -43573248
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3215
	015 Move W11, 40
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3624], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Application_GetVersion()

Disassembly:
	0x034B84A8 ADD X8, X8, 0xDD2
	0x034B84AC MOVZ W9, 0x11
	0x034B84B0 ADD X10, X10, 0x111
	0x034B84B4 MOVZ W11, 0x15
	0x034B84B8 MOVZ W13, 0x8
	0x034B84BC ADD X0, X31, 0x0
	0x034B84C0 STP X8, X9, [X31]
	0x034B84C4 STP X10, X11, [X31 + 0x10]
	0x034B84C8 STR W13, [X31 + 0x28]
	0x034B84CC STR D0, [X31 + 0x20]
	0x034B84D0 STRB W31, [X31 + 0x2C]
	0x034B84D4 BL 0x1C1729C
	0x034B84D8 MOV X8, X0
	0x034B84DC STR X0, [X20 + 0xF28]
	0x034B84E0 MOV X0, X19
	0x034B84E4 BLR X8
	0x034B84E8 LDP X20, X19, [X31 + 0x40]
	0x034B84EC LDR X30, [X31 + 0x30]
	0x034B84F0 ADD X31, X31, 0x50
	0x034B84F4 RET
	0x034B84F8 SUB X31, X31, 0x50
	0x034B84FC STR X30, [X31 + 0x30]
	0x034B8500 STP X20, X19, [X31 + 0x40]
	0x034B8504 ADRP X20, 0xF25000
	0x034B8508 LDR X8, [X20 + 0xF30]
	0x034B850C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF26000
	005 Move X8, [X19+3632]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43819008
	009 Move V0, [X12+1464]
	010 Move X8, -43663360
	011 Move X10, -43646976
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3245
	015 Move W11, 26
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3632], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Application_InstallAppUpdateAndRelaunch(System.IntPtr deeplink_options)

Disassembly:
	0x034B8510 CBNZ X8, 0x34B855C
	0x034B8514 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8518 LDR V0, [X12 + 0x5B8]
	0x034B851C ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8520 ADRP X10, 0xFFFFFFFFFD638000
	0x034B8524 ADD X8, X8, 0xDD2
	0x034B8528 MOVZ W9, 0x11
	0x034B852C ADD X10, X10, 0x227
	0x034B8530 MOVZ W11, 0x12
	0x034B8534 MOVZ W13, 0x8
	0x034B8538 ADD X0, X31, 0x0
	0x034B853C STP X8, X9, [X31]
	0x034B8540 STP X10, X11, [X31 + 0x10]
	0x034B8544 STR W13, [X31 + 0x28]
	0x034B8548 STR D0, [X31 + 0x20]
	0x034B854C STRB W31, [X31 + 0x2C]
	0x034B8550 BL 0x1C1729C
	0x034B8554 MOV X8, X0
	0x034B8558 STR X0, [X20 + 0xF30]
	0x034B855C MOV X0, X19
	0x034B8560 BLR X8
	0x034B8564 LDP X20, X19, [X31 + 0x40]
	0x034B8568 LDR X30, [X31 + 0x30]
	0x034B856C ADD X31, X31, 0x50
	0x034B8570 RET
	0x034B8574 SUB X31, X31, 0x60
	0x034B8578 STP X30, X23, [X31 + 0x30]
	0x034B857C STP X22, X21, [X31 + 0x40]
	0x034B8580 STP X20, X19, [X31 + 0x50]
	0x034B8584 ADRP X23, 0xF25000
	0x034B8588 LDR X8, [X23 + 0xF38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3640]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43814912
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1839
	017 Move W11, 43
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3640], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Application_LaunchOtherApp(System.UInt64 appID, System.IntPtr deeplink_options)

Disassembly:
	0x034B858C MOV W19, W3
	0x034B8590 MOV W20, W2
	0x034B8594 MOV W21, W1
	0x034B8598 MOV X22, X0
	0x034B859C CBNZ X8, 0x34B85E8
	0x034B85A0 ADRP X12, 0xFFFFFFFFFD635000
	0x034B85A4 LDR V0, [X12 + 0x5B8]
	0x034B85A8 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B85AC ADRP X10, 0xFFFFFFFFFD636000
	0x034B85B0 ADD X8, X8, 0xDD2
	0x034B85B4 MOVZ W9, 0x11
	0x034B85B8 ADD X10, X10, 0x75B
	0x034B85BC MOVZ W11, 0x19
	0x034B85C0 MOVZ W13, 0x14
	0x034B85C4 ADD X0, X31, 0x0
	0x034B85C8 STP X8, X9, [X31]
	0x034B85CC STP X10, X11, [X31 + 0x10]
	0x034B85D0 STR W13, [X31 + 0x28]
	0x034B85D4 STR D0, [X31 + 0x20]
	0x034B85D8 STRB W31, [X31 + 0x2C]
	0x034B85DC BL 0x1C1729C
	0x034B85E0 MOV X8, X0
	0x034B85E4 STR X0, [X23 + 0xF38]
	0x034B85E8 MOV X0, X22
	0x034B85EC MOV W1, W21
	0x034B85F0 MOV W2, W20
	0x034B85F4 MOV W3, W19
	0x034B85F8 BLR X8
	0x034B85FC LDP X20, X19, [X31 + 0x50]
	0x034B8600 LDP X22, X21, [X31 + 0x40]
	0x034B8604 LDP X30, X23, [X31 + 0x30]
	0x034B8608 ADD X31, X31, 0x60
	0x034B860C RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF26000
	007 Move X8, [X21+3648]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43819008
	013 Move V0, [X12+1464]
	014 Move X8, -43663360
	015 Move X10, -43626496
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 262
	019 Move W11, 30
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3648], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Application_StartAppDownload()

Disassembly:
	0x034B8610 SUB X31, X31, 0x60
	0x034B8614 STR X30, [X31 + 0x30]
	0x034B8618 STP X22, X21, [X31 + 0x40]
	0x034B861C STP X20, X19, [X31 + 0x50]
	0x034B8620 ADRP X22, 0xF25000
	0x034B8624 LDR X8, [X22 + 0xF40]
	0x034B8628 MOV X19, X2
	0x034B862C MOV W20, W1
	0x034B8630 MOV X21, X0
	0x034B8634 CBNZ X8, 0x34B8680
	0x034B8638 ADRP X12, 0xFFFFFFFFFD635000
	0x034B863C LDR V0, [X12 + 0x5B8]
	0x034B8640 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8644 ADRP X10, 0xFFFFFFFFFD671000
	0x034B8648 ADD X8, X8, 0xDD2
	0x034B864C MOVZ W9, 0x11
	0x034B8650 ADD X10, X10, 0xCD9
	0x034B8654 MOVZ W11, 0x22
	0x034B8658 MOVZ W13, 0x14
	0x034B865C ADD X0, X31, 0x0
	0x034B8660 STP X8, X9, [X31]
	0x034B8664 STP X10, X11, [X31 + 0x10]
	0x034B8668 STR W13, [X31 + 0x28]
	0x034B866C STR D0, [X31 + 0x20]
	0x034B8670 STRB W31, [X31 + 0x2C]
	0x034B8674 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF26000
	005 Move X8, [X19+3656]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43819008
	009 Move V0, [X12+1464]
	010 Move X8, -43663360
	011 Move X10, -43573248
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3256
	015 Move W11, 32
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3656], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_ApplicationLifecycle_GetRegisteredPIDs()

Disassembly:
	0x034B8678 MOV X8, X0
	0x034B867C STR X0, [X22 + 0xF40]
	0x034B8680 MOV X0, X21
	0x034B8684 MOV W1, W20
	0x034B8688 MOV X2, X19
	0x034B868C BLR X8
	0x034B8690 LDP X20, X19, [X31 + 0x50]
	0x034B8694 LDP X22, X21, [X31 + 0x40]
	0x034B8698 LDR X30, [X31 + 0x30]
	0x034B869C ADD X31, X31, 0x60
	0x034B86A0 RET
	0x034B86A4 SUB X31, X31, 0x70
	0x034B86A8 STR X30, [X31 + 0x30]
	0x034B86AC STP X24, X23, [X31 + 0x40]
	0x034B86B0 STP X22, X21, [X31 + 0x50]
	0x034B86B4 STP X20, X19, [X31 + 0x60]
	0x034B86B8 ADRP X24, 0xF25000
	0x034B86BC LDR X8, [X24 + 0xF48]
	0x034B86C0 MOV W19, W4
	0x034B86C4 MOV X22, X3
	0x034B86C8 MOV W20, W2
	0x034B86CC MOV W21, W1
	0x034B86D0 MOV X23, X0
	0x034B86D4 CBNZ X8, 0x34B8720
	0x034B86D8 ADRP X12, 0xFFFFFFFFFD635000
	0x034B86DC LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF26000
	005 Move X8, [X19+3664]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43819008
	009 Move V0, [X12+1464]
	010 Move X8, -43663360
	011 Move X10, -43585536
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 570
	015 Move W11, 42
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3664], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_ApplicationLifecycle_GetSessionKey()

Disassembly:
	0x034B86E0 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B86E4 ADRP X10, 0xFFFFFFFFFD66A000
	0x034B86E8 ADD X8, X8, 0xDD2
	0x034B86EC MOVZ W9, 0x11
	0x034B86F0 ADD X10, X10, 0x2D8
	0x034B86F4 MOVZ W11, 0x1E
	0x034B86F8 MOVZ W13, 0x1C
	0x034B86FC ADD X0, X31, 0x0
	0x034B8700 STP X8, X9, [X31]
	0x034B8704 STP X10, X11, [X31 + 0x10]
	0x034B8708 STR W13, [X31 + 0x28]
	0x034B870C STR D0, [X31 + 0x20]
	0x034B8710 STRB W31, [X31 + 0x2C]
	0x034B8714 BL 0x1C1729C
	0x034B8718 MOV X8, X0
	0x034B871C STR X0, [X24 + 0xF48]
	0x034B8720 ADD X9, X22, 0x20
	0x034B8724 CMP X22, 0x0
	0x034B8728 CSEL X3, X31, X9, EQ
	0x034B872C MOV X0, X23
	0x034B8730 MOV W1, W21
	0x034B8734 MOV W2, W20
	0x034B8738 MOV W4, W19
	0x034B873C BLR X8
	0x034B8740 LDP X20, X19, [X31 + 0x60]
	0x034B8744 LDP X22, X21, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF26000
	005 Move X8, [X19+3672]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43819008
	009 Move V0, [X12+1464]
	010 Move X8, -43663360
	011 Move X10, -43683840
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 862
	015 Move W11, 38
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3672], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey(System.String sessionKey)

Disassembly:
	0x034B8748 LDP X24, X23, [X31 + 0x40]
	0x034B874C LDR X30, [X31 + 0x30]
	0x034B8750 ADD X31, X31, 0x70
	0x034B8754 RET
	0x034B8758 SUB X31, X31, 0x50
	0x034B875C STP X30, X21, [X31 + 0x30]
	0x034B8760 STP X20, X19, [X31 + 0x40]
	0x034B8764 ADRP X21, 0xF25000
	0x034B8768 LDR X8, [X21 + 0xF50]
	0x034B876C MOV W19, W1
	0x034B8770 MOV X20, X0
	0x034B8774 CBNZ X8, 0x34B87C0
	0x034B8778 ADRP X12, 0xFFFFFFFFFD635000
	0x034B877C LDR V0, [X12 + 0x5B8]
	0x034B8780 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8784 ADRP X10, 0xFFFFFFFFFD661000
	0x034B8788 ADD X8, X8, 0xDD2
	0x034B878C MOVZ W9, 0x11
	0x034B8790 ADD X10, X10, 0xD33
	0x034B8794 MOVZ W11, 0x16
	0x034B8798 MOVZ W13, 0xC
	0x034B879C ADD X0, X31, 0x0
	0x034B87A0 STP X8, X9, [X31]
	0x034B87A4 STP X10, X11, [X31 + 0x10]
	0x034B87A8 STR W13, [X31 + 0x28]
	0x034B87AC STR D0, [X31 + 0x20]
	0x034B87B0 STRB W31, [X31 + 0x2C]
	0x034B87B4 BL 0x1C1729C
	0x034B87B8 MOV X8, X0
	0x034B87BC STR X0, [X21 + 0xF50]
	0x034B87C0 MOV X0, X20
	0x034B87C4 MOV W1, W19
	0x034B87C8 BLR X8
	0x034B87CC LDP X20, X19, [X31 + 0x40]
	0x034B87D0 LDP X30, X21, [X31 + 0x30]
	0x034B87D4 ADD X31, X31, 0x50
	0x034B87D8 RET
	0x034B87DC SUB X31, X31, 0x50
	0x034B87E0 STR X30, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF26000
	006 Move X20, 0xC7B000
	007 Move W8, [X21+3680]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC7B000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC64000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3680], W8
	022 Move X0, [X20]
	023 Move X20, 0xC64000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_ApplicationLifecycle_RegisterSessionKey_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey_Native(System.IntPtr sessionKey)

Disassembly:
	0x034B87E4 STP X20, X19, [X31 + 0x40]
	0x034B87E8 ADRP X20, 0xF25000
	0x034B87EC LDR X8, [X20 + 0xF58]
	0x034B87F0 MOV X19, X0
	0x034B87F4 CBNZ X8, 0x34B8840
	0x034B87F8 ADRP X12, 0xFFFFFFFFFD635000
	0x034B87FC LDR V0, [X12 + 0x5B8]
	0x034B8800 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8804 ADRP X10, 0xFFFFFFFFFD665000
	0x034B8808 ADD X8, X8, 0xDD2
	0x034B880C MOVZ W9, 0x11
	0x034B8810 ADD X10, X10, 0xE47
	0x034B8814 MOVZ W11, 0x20
	0x034B8818 MOVZ W13, 0x8
	0x034B881C ADD X0, X31, 0x0
	0x034B8820 STP X8, X9, [X31]
	0x034B8824 STP X10, X11, [X31 + 0x10]
	0x034B8828 STR W13, [X31 + 0x28]
	0x034B882C STR D0, [X31 + 0x20]
	0x034B8830 STRB W31, [X31 + 0x2C]
	0x034B8834 BL 0x1C1729C
	0x034B8838 MOV X8, X0
	0x034B883C STR X0, [X20 + 0xF58]
	0x034B8840 MOV X0, X19
	0x034B8844 BLR X8
	0x034B8848 LDP X20, X19, [X31 + 0x40]
	0x034B884C LDR X30, [X31 + 0x30]
	0x034B8850 ADD X31, X31, 0x50
	0x034B8854 RET
	0x034B8858 SUB X31, X31, 0x50
	0x034B885C STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3688]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43683840
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 901
	017 Move W11, 43
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3688], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_Delete(System.UInt64 assetFileID)

Disassembly:
	0x034B8860 STP X20, X19, [X31 + 0x40]
	0x034B8864 ADRP X20, 0xF25000
	0x034B8868 LDR X8, [X20 + 0xF60]
	0x034B886C MOV X19, X0
	0x034B8870 CBNZ X8, 0x34B88BC
	0x034B8874 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8878 LDR V0, [X12 + 0x5B8]
	0x034B887C ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8880 ADRP X10, 0xFFFFFFFFFD658000
	0x034B8884 ADD X8, X8, 0xDD2
	0x034B8888 MOVZ W9, 0x11
	0x034B888C ADD X10, X10, 0x3D1
	0x034B8890 MOVZ W11, 0x1D
	0x034B8894 MOVZ W13, 0x8
	0x034B8898 ADD X0, X31, 0x0
	0x034B889C STP X8, X9, [X31]
	0x034B88A0 STP X10, X11, [X31 + 0x10]
	0x034B88A4 STR W13, [X31 + 0x28]
	0x034B88A8 STR D0, [X31 + 0x20]
	0x034B88AC STRB W31, [X31 + 0x2C]
	0x034B88B0 BL 0x1C1729C
	0x034B88B4 MOV X8, X0
	0x034B88B8 STR X0, [X20 + 0xF60]
	0x034B88BC MOV X0, X19
	0x034B88C0 BLR X8
	0x034B88C4 LDP X20, X19, [X31 + 0x40]
	0x034B88C8 LDR X30, [X31 + 0x30]
	0x034B88CC ADD X31, X31, 0x50
	0x034B88D0 RET
	0x034B88D4 SUB X31, X31, 0x50
	0x034B88D8 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3696]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43626496
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 293
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3696], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_DeleteById(System.UInt64 assetFileID)

Disassembly:
	0x034B88DC STP X20, X19, [X31 + 0x40]
	0x034B88E0 ADRP X20, 0xF25000
	0x034B88E4 LDR X8, [X20 + 0xF68]
	0x034B88E8 MOV X19, X0
	0x034B88EC CBNZ X8, 0x34B8938
	0x034B88F0 ADRP X12, 0xFFFFFFFFFD635000
	0x034B88F4 LDR V0, [X12 + 0x5B8]
	0x034B88F8 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B88FC ADRP X10, 0xFFFFFFFFFD644000
	0x034B8900 ADD X8, X8, 0xDD2
	0x034B8904 MOVZ W9, 0x11
	0x034B8908 ADD X10, X10, 0x70A
	0x034B890C MOVZ W11, 0x24
	0x034B8910 MOVZ W13, 0x8
	0x034B8914 ADD X0, X31, 0x0
	0x034B8918 STP X8, X9, [X31]
	0x034B891C STP X10, X11, [X31 + 0x10]
	0x034B8920 STR W13, [X31 + 0x28]
	0x034B8924 STR D0, [X31 + 0x20]
	0x034B8928 STRB W31, [X31 + 0x2C]
	0x034B892C BL 0x1C1729C
	0x034B8930 MOV X8, X0
	0x034B8934 STR X0, [X20 + 0xF68]
	0x034B8938 MOV X0, X19
	0x034B893C BLR X8
	0x034B8940 LDP X20, X19, [X31 + 0x40]
	0x034B8944 LDR X30, [X31 + 0x30]
	0x034B8948 ADD X31, X31, 0x50
	0x034B894C RET
	0x034B8950 SUB X31, X31, 0x50
	0x034B8954 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3704]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1474
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3704], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_DeleteByName(System.String assetFileName)

Disassembly:
	0x034B8958 STP X20, X19, [X31 + 0x40]
	0x034B895C ADRP X20, 0xF25000
	0x034B8960 LDR X8, [X20 + 0xF70]
	0x034B8964 MOV X19, X0
	0x034B8968 CBNZ X8, 0x34B89B4
	0x034B896C ADRP X12, 0xFFFFFFFFFD635000
	0x034B8970 LDR V0, [X12 + 0x5B8]
	0x034B8974 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8978 ADRP X10, 0xFFFFFFFFFD656000
	0x034B897C ADD X8, X8, 0xDD2
	0x034B8980 MOVZ W9, 0x11
	0x034B8984 ADD X10, X10, 0x3B1
	0x034B8988 MOVZ W11, 0x21
	0x034B898C MOVZ W13, 0x8
	0x034B8990 ADD X0, X31, 0x0
	0x034B8994 STP X8, X9, [X31]
	0x034B8998 STP X10, X11, [X31 + 0x10]
	0x034B899C STR W13, [X31 + 0x28]
	0x034B89A0 STR D0, [X31 + 0x20]
	0x034B89A4 STRB W31, [X31 + 0x2C]
	0x034B89A8 BL 0x1C1729C
	0x034B89AC MOV X8, X0
	0x034B89B0 STR X0, [X20 + 0xF70]
	0x034B89B4 MOV X0, X19
	0x034B89B8 BLR X8
	0x034B89BC LDP X20, X19, [X31 + 0x40]
	0x034B89C0 LDR X30, [X31 + 0x30]
	0x034B89C4 ADD X31, X31, 0x50
	0x034B89C8 RET
	0x034B89CC SUB X31, X31, 0x50
	0x034B89D0 STR X30, [X31 + 0x30]
	0x034B89D4 STP X20, X19, [X31 + 0x40]
	0x034B89D8 ADRP X20, 0xF25000
	0x034B89DC LDR X8, [X20 + 0xF78]
	0x034B89E0 MOV X19, X0
	0x034B89E4 CBNZ X8, 0x34B8A30
	0x034B89E8 ADRP X12, 0xFFFFFFFFFD635000
	0x034B89EC LDR V0, [X12 + 0x5B8]
	0x034B89F0 ADRP X8, 0xFFFFFFFFFD65B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF26000
	006 Move X20, 0xC7B000
	007 Move W8, [X21+3712]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC7B000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC64000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3712], W8
	022 Move X0, [X20]
	023 Move X20, 0xC64000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_AssetFile_DeleteByName_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_AssetFile_DeleteByName_Native(System.IntPtr assetFileName)

Disassembly:
	0x034B89F4 ADRP X10, 0xFFFFFFFFFD654000
	0x034B89F8 ADD X8, X8, 0xDD2
	0x034B89FC MOVZ W9, 0x11
	0x034B8A00 ADD X10, X10, 0x229
	0x034B8A04 MOVZ W11, 0x13
	0x034B8A08 MOVZ W13, 0x8
	0x034B8A0C ADD X0, X31, 0x0
	0x034B8A10 STP X8, X9, [X31]
	0x034B8A14 STP X10, X11, [X31 + 0x10]
	0x034B8A18 STR W13, [X31 + 0x28]
	0x034B8A1C STR D0, [X31 + 0x20]
	0x034B8A20 STRB W31, [X31 + 0x2C]
	0x034B8A24 BL 0x1C1729C
	0x034B8A28 MOV X8, X0
	0x034B8A2C STR X0, [X20 + 0xF78]
	0x034B8A30 MOV X0, X19
	0x034B8A34 BLR X8
	0x034B8A38 LDP X20, X19, [X31 + 0x40]
	0x034B8A3C LDR X30, [X31 + 0x30]
	0x034B8A40 ADD X31, X31, 0x50
	0x034B8A44 RET
	0x034B8A48 SUB X31, X31, 0x50
	0x034B8A4C STR X30, [X31 + 0x30]
	0x034B8A50 STP X20, X19, [X31 + 0x40]
	0x034B8A54 ADRP X20, 0xF25000
	0x034B8A58 LDR X8, [X20 + 0xF80]
	0x034B8A5C MOV X19, X0
	0x034B8A60 CBNZ X8, 0x34B8AAC
	0x034B8A64 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8A68 LDR V0, [X12 + 0x5B8]
	0x034B8A6C ADRP X8, 0xFFFFFFFFFD65B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3720]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43601920
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 701
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3720], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_Download(System.UInt64 assetFileID)

Disassembly:
	0x034B8A70 ADRP X10, 0xFFFFFFFFFD656000
	0x034B8A74 ADD X8, X8, 0xDD2
	0x034B8A78 MOVZ W9, 0x11
	0x034B8A7C ADD X10, X10, 0x3D3
	0x034B8A80 MOVZ W11, 0x14
	0x034B8A84 MOVZ W13, 0x8
	0x034B8A88 ADD X0, X31, 0x0
	0x034B8A8C STP X8, X9, [X31]
	0x034B8A90 STP X10, X11, [X31 + 0x10]
	0x034B8A94 STR W13, [X31 + 0x28]
	0x034B8A98 STR D0, [X31 + 0x20]
	0x034B8A9C STRB W31, [X31 + 0x2C]
	0x034B8AA0 BL 0x1C1729C
	0x034B8AA4 MOV X8, X0
	0x034B8AA8 STR X0, [X20 + 0xF80]
	0x034B8AAC MOV X0, X19
	0x034B8AB0 BLR X8
	0x034B8AB4 LDP X20, X19, [X31 + 0x40]
	0x034B8AB8 LDR X30, [X31 + 0x30]
	0x034B8ABC ADD X31, X31, 0x50
	0x034B8AC0 RET
	0x034B8AC4 SUB X31, X31, 0x50
	0x034B8AC8 STP X30, X21, [X31 + 0x30]
	0x034B8ACC STP X20, X19, [X31 + 0x40]
	0x034B8AD0 ADRP X21, 0xF25000
	0x034B8AD4 LDR X8, [X21 + 0xF88]
	0x034B8AD8 MOV X19, X1
	0x034B8ADC MOV X20, X0
	0x034B8AE0 CBNZ X8, 0x34B8B2C
	0x034B8AE4 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8AE8 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3728]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43708416
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1123
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3728], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_DownloadById(System.UInt64 assetFileID)

Disassembly:
	0x034B8AEC ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8AF0 ADRP X10, 0xFFFFFFFFFD64E000
	0x034B8AF4 ADD X8, X8, 0xDD2
	0x034B8AF8 MOVZ W9, 0x11
	0x034B8AFC ADD X10, X10, 0x4E8
	0x034B8B00 MOVZ W11, 0x19
	0x034B8B04 MOVZ W13, 0x10
	0x034B8B08 ADD X0, X31, 0x0
	0x034B8B0C STP X8, X9, [X31]
	0x034B8B10 STP X10, X11, [X31 + 0x10]
	0x034B8B14 STR W13, [X31 + 0x28]
	0x034B8B18 STR D0, [X31 + 0x20]
	0x034B8B1C STRB W31, [X31 + 0x2C]
	0x034B8B20 BL 0x1C1729C
	0x034B8B24 MOV X8, X0
	0x034B8B28 STR X0, [X21 + 0xF88]
	0x034B8B2C MOV X0, X20
	0x034B8B30 MOV X1, X19
	0x034B8B34 BLR X8
	0x034B8B38 LDP X20, X19, [X31 + 0x40]
	0x034B8B3C LDP X30, X21, [X31 + 0x30]
	0x034B8B40 ADD X31, X31, 0x50
	0x034B8B44 RET
	0x034B8B48 SUB X31, X31, 0x40
	0x034B8B4C STP X30, X19, [X31 + 0x30]
	0x034B8B50 ADRP X19, 0xF25000
	0x034B8B54 LDR X8, [X19 + 0xF90]
	0x034B8B58 CBNZ X8, 0x34B8BA0
	0x034B8B5C ADRP X12, 0xFFFFFFFFFD635000
	0x034B8B60 LDR V0, [X12 + 0x5B8]
	0x034B8B64 ADRP X8, 0xFFFFFFFFFD65B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3736]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43581440
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3070
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3736], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_DownloadByName(System.String assetFileName)

Disassembly:
	0x034B8B68 ADRP X10, 0xFFFFFFFFFD636000
	0x034B8B6C ADD X8, X8, 0xDD2
	0x034B8B70 MOVZ W9, 0x11
	0x034B8B74 ADD X10, X10, 0x775
	0x034B8B78 MOVZ W11, 0x20
	0x034B8B7C ADD X0, X31, 0x0
	0x034B8B80 STR W31, [X31 + 0x28]
	0x034B8B84 STP X8, X9, [X31]
	0x034B8B88 STP X10, X11, [X31 + 0x10]
	0x034B8B8C STR D0, [X31 + 0x20]
	0x034B8B90 STRB W31, [X31 + 0x2C]
	0x034B8B94 BL 0x1C1729C
	0x034B8B98 MOV X8, X0
	0x034B8B9C STR X0, [X19 + 0xF90]
	0x034B8BA0 BLR X8
	0x034B8BA4 LDP X30, X19, [X31 + 0x30]
	0x034B8BA8 ADD X31, X31, 0x40
	0x034B8BAC RET
	0x034B8BB0 STP X30, X21, [X31 - 0x20]!
	0x034B8BB4 STP X20, X19, [X31 + 0x10]
	0x034B8BB8 ADRP X21, 0xF25000
	0x034B8BBC ADRP X20, 0xC7A000
	0x034B8BC0 LDRB W8, [X21 + 0xF98]
	0x034B8BC4 LDR X20, [X20 + 0x328]
	0x034B8BC8 MOV X19, X0
	0x034B8BCC TBNZ X8, 0x0, 0x34B8BF0
	0x034B8BD0 ADRP X0, 0xC7A000
	0x034B8BD4 LDR X0, [X0 + 0x328]
	0x034B8BD8 BL 0x1C16CF4
	0x034B8BDC ADRP X0, 0xC63000
	0x034B8BE0 LDR X0, [X0 + 0x850]
	0x034B8BE4 BL 0x1C16CF4
	0x034B8BE8 MOVZ W8, 0x1
	0x034B8BEC STRB W8, [X21 + 0xF98]
	0x034B8BF0 LDR X0, [X20]
	0x034B8BF4 ADRP X20, 0xC63000
	0x034B8BF8 LDR W8, [X0 + 0xE0]
	0x034B8BFC LDR X20, [X20 + 0x850]
	0x034B8C00 CBNZ W8, 0x34B8C08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF26000
	006 Move X20, 0xC7B000
	007 Move W8, [X21+3744]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC7B000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC64000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3744], W8
	022 Move X0, [X20]
	023 Move X20, 0xC64000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_AssetFile_DownloadByName_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_AssetFile_DownloadByName_Native(System.IntPtr assetFileName)

Disassembly:
	0x034B8C04 BL 0x1C16DFC
	0x034B8C08 MOV X0, X19
	0x034B8C0C BL 0x34B404C
	0x034B8C10 MOV X19, X0
	0x034B8C14 BL 0x34B8C4C
	0x034B8C18 LDR X8, [X20]
	0x034B8C1C MOV X20, X0
	0x034B8C20 LDR W9, [X8 + 0xE0]
	0x034B8C24 CBNZ W9, 0x34B8C30
	0x034B8C28 MOV X0, X8
	0x034B8C2C BL 0x1C16DFC
	0x034B8C30 MOV X0, X19
	0x034B8C34 MOV X1, X31
	0x034B8C38 BL 0x32C1060
	0x034B8C3C MOV X0, X20
	0x034B8C40 LDP X20, X19, [X31 + 0x10]
	0x034B8C44 LDP X30, X21, [X31], #0x20
	0x034B8C48 RET
	0x034B8C4C SUB X31, X31, 0x50
	0x034B8C50 STR X30, [X31 + 0x30]
	0x034B8C54 STP X20, X19, [X31 + 0x40]
	0x034B8C58 ADRP X20, 0xF25000
	0x034B8C5C LDR X8, [X20 + 0xFA0]
	0x034B8C60 MOV X19, X0
	0x034B8C64 CBNZ X8, 0x34B8CB0
	0x034B8C68 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8C6C LDR V0, [X12 + 0x5B8]
	0x034B8C70 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8C74 ADRP X10, 0xFFFFFFFFFD673000
	0x034B8C78 ADD X8, X8, 0xDD2
	0x034B8C7C MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3752]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43732992
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 531
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3752], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_DownloadCancel(System.UInt64 assetFileID)

Disassembly:
	0x034B8C80 ADD X10, X10, 0xB52
	0x034B8C84 MOVZ W11, 0x19
	0x034B8C88 MOVZ W13, 0x8
	0x034B8C8C ADD X0, X31, 0x0
	0x034B8C90 STP X8, X9, [X31]
	0x034B8C94 STP X10, X11, [X31 + 0x10]
	0x034B8C98 STR W13, [X31 + 0x28]
	0x034B8C9C STR D0, [X31 + 0x20]
	0x034B8CA0 STRB W31, [X31 + 0x2C]
	0x034B8CA4 BL 0x1C1729C
	0x034B8CA8 MOV X8, X0
	0x034B8CAC STR X0, [X20 + 0xFA0]
	0x034B8CB0 MOV X0, X19
	0x034B8CB4 BLR X8
	0x034B8CB8 LDP X20, X19, [X31 + 0x40]
	0x034B8CBC LDR X30, [X31 + 0x30]
	0x034B8CC0 ADD X31, X31, 0x50
	0x034B8CC4 RET
	0x034B8CC8 STP X30, X21, [X31 - 0x20]!
	0x034B8CCC STP X20, X19, [X31 + 0x10]
	0x034B8CD0 ADRP X21, 0xF25000
	0x034B8CD4 ADRP X20, 0xC7A000
	0x034B8CD8 LDRB W8, [X21 + 0xFA8]
	0x034B8CDC LDR X20, [X20 + 0x328]
	0x034B8CE0 MOV X19, X0
	0x034B8CE4 TBNZ X8, 0x0, 0x34B8D08
	0x034B8CE8 ADRP X0, 0xC7A000
	0x034B8CEC LDR X0, [X0 + 0x328]
	0x034B8CF0 BL 0x1C16CF4
	0x034B8CF4 ADRP X0, 0xC63000
	0x034B8CF8 LDR X0, [X0 + 0x850]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3760]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43585536
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 613
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3760], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_DownloadCancelById(System.UInt64 assetFileID)

Disassembly:
	0x034B8CFC BL 0x1C16CF4
	0x034B8D00 MOVZ W8, 0x1
	0x034B8D04 STRB W8, [X21 + 0xFA8]
	0x034B8D08 LDR X0, [X20]
	0x034B8D0C ADRP X20, 0xC63000
	0x034B8D10 LDR W8, [X0 + 0xE0]
	0x034B8D14 LDR X20, [X20 + 0x850]
	0x034B8D18 CBNZ W8, 0x34B8D20
	0x034B8D1C BL 0x1C16DFC
	0x034B8D20 MOV X0, X19
	0x034B8D24 BL 0x34B404C
	0x034B8D28 MOV X19, X0
	0x034B8D2C BL 0x34B8D64
	0x034B8D30 LDR X8, [X20]
	0x034B8D34 MOV X20, X0
	0x034B8D38 LDR W9, [X8 + 0xE0]
	0x034B8D3C CBNZ W9, 0x34B8D48
	0x034B8D40 MOV X0, X8
	0x034B8D44 BL 0x1C16DFC
	0x034B8D48 MOV X0, X19
	0x034B8D4C MOV X1, X31
	0x034B8D50 BL 0x32C1060
	0x034B8D54 MOV X0, X20
	0x034B8D58 LDP X20, X19, [X31 + 0x10]
	0x034B8D5C LDP X30, X21, [X31], #0x20
	0x034B8D60 RET
	0x034B8D64 SUB X31, X31, 0x50
	0x034B8D68 STR X30, [X31 + 0x30]
	0x034B8D6C STP X20, X19, [X31 + 0x40]
	0x034B8D70 ADRP X20, 0xF25000
	0x034B8D74 LDR X8, [X20 + 0xFB0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3768]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43806720
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 518
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3768], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_DownloadCancelByName(System.String assetFileName)

Disassembly:
	0x034B8D78 MOV X19, X0
	0x034B8D7C CBNZ X8, 0x34B8DC8
	0x034B8D80 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8D84 LDR V0, [X12 + 0x5B8]
	0x034B8D88 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8D8C ADRP X10, 0xFFFFFFFFFD66A000
	0x034B8D90 ADD X8, X8, 0xDD2
	0x034B8D94 MOVZ W9, 0x11
	0x034B8D98 ADD X10, X10, 0x2F7
	0x034B8D9C MOVZ W11, 0x17
	0x034B8DA0 MOVZ W13, 0x8
	0x034B8DA4 ADD X0, X31, 0x0
	0x034B8DA8 STP X8, X9, [X31]
	0x034B8DAC STP X10, X11, [X31 + 0x10]
	0x034B8DB0 STR W13, [X31 + 0x28]
	0x034B8DB4 STR D0, [X31 + 0x20]
	0x034B8DB8 STRB W31, [X31 + 0x2C]
	0x034B8DBC BL 0x1C1729C
	0x034B8DC0 MOV X8, X0
	0x034B8DC4 STR X0, [X20 + 0xFB0]
	0x034B8DC8 MOV X0, X19
	0x034B8DCC BLR X8
	0x034B8DD0 LDP X20, X19, [X31 + 0x40]
	0x034B8DD4 LDR X30, [X31 + 0x30]
	0x034B8DD8 ADD X31, X31, 0x50
	0x034B8DDC RET
	0x034B8DE0 SUB X31, X31, 0x40
	0x034B8DE4 STP X30, X19, [X31 + 0x30]
	0x034B8DE8 ADRP X19, 0xF25000
	0x034B8DEC LDR X8, [X19 + 0xFB8]
	0x034B8DF0 CBNZ X8, 0x34B8E38
	0x034B8DF4 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8DF8 LDR V0, [X12 + 0x5B8]
	0x034B8DFC ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8E00 ADRP X10, 0xFFFFFFFFFD66C000
	0x034B8E04 ADD X8, X8, 0xDD2
	0x034B8E08 MOVZ W9, 0x11
	0x034B8E0C ADD X10, X10, 0x2A0
	0x034B8E10 MOVZ W11, 0x1F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF26000
	006 Move X20, 0xC7B000
	007 Move W8, [X21+3776]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC7B000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC64000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3776], W8
	022 Move X0, [X20]
	023 Move X20, 0xC64000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_AssetFile_DownloadCancelByName_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_AssetFile_DownloadCancelByName_Native(System.IntPtr assetFileName)

Disassembly:
	0x034B8E14 ADD X0, X31, 0x0
	0x034B8E18 STR W31, [X31 + 0x28]
	0x034B8E1C STP X8, X9, [X31]
	0x034B8E20 STP X10, X11, [X31 + 0x10]
	0x034B8E24 STR D0, [X31 + 0x20]
	0x034B8E28 STRB W31, [X31 + 0x2C]
	0x034B8E2C BL 0x1C1729C
	0x034B8E30 MOV X8, X0
	0x034B8E34 STR X0, [X19 + 0xFB8]
	0x034B8E38 BLR X8
	0x034B8E3C LDP X30, X19, [X31 + 0x30]
	0x034B8E40 ADD X31, X31, 0x40
	0x034B8E44 RET
	0x034B8E48 SUB X31, X31, 0x40
	0x034B8E4C STP X30, X19, [X31 + 0x30]
	0x034B8E50 ADRP X19, 0xF25000
	0x034B8E54 LDR X8, [X19 + 0xFC0]
	0x034B8E58 CBNZ X8, 0x34B8EA0
	0x034B8E5C ADRP X12, 0xFFFFFFFFFD635000
	0x034B8E60 LDR V0, [X12 + 0x5B8]
	0x034B8E64 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8E68 ADRP X10, 0xFFFFFFFFFD65F000
	0x034B8E6C ADD X8, X8, 0xDD2
	0x034B8E70 MOVZ W9, 0x11
	0x034B8E74 ADD X10, X10, 0xCC8
	0x034B8E78 MOVZ W11, 0x1D
	0x034B8E7C ADD X0, X31, 0x0
	0x034B8E80 STR W31, [X31 + 0x28]
	0x034B8E84 STP X8, X9, [X31]
	0x034B8E88 STP X10, X11, [X31 + 0x10]
	0x034B8E8C STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3784]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43716608
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1221
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3784], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_GetList()

Disassembly:
	0x034B8E90 STRB W31, [X31 + 0x2C]
	0x034B8E94 BL 0x1C1729C
	0x034B8E98 MOV X8, X0
	0x034B8E9C STR X0, [X19 + 0xFC0]
	0x034B8EA0 BLR X8
	0x034B8EA4 LDP X30, X19, [X31 + 0x30]
	0x034B8EA8 ADD X31, X31, 0x40
	0x034B8EAC RET
	0x034B8EB0 SUB X31, X31, 0x40
	0x034B8EB4 STP X30, X19, [X31 + 0x30]
	0x034B8EB8 ADRP X19, 0xF25000
	0x034B8EBC LDR X8, [X19 + 0xFC8]
	0x034B8EC0 CBNZ X8, 0x34B8F08
	0x034B8EC4 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8EC8 LDR V0, [X12 + 0x5B8]
	0x034B8ECC ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8ED0 ADRP X10, 0xFFFFFFFFFD66A000
	0x034B8ED4 ADD X8, X8, 0xDD2
	0x034B8ED8 MOVZ W9, 0x11
	0x034B8EDC ADD X10, X10, 0x30F
	0x034B8EE0 MOVZ W11, 0x1A
	0x034B8EE4 ADD X0, X31, 0x0
	0x034B8EE8 STR W31, [X31 + 0x28]
	0x034B8EEC STP X8, X9, [X31]
	0x034B8EF0 STP X10, X11, [X31 + 0x10]
	0x034B8EF4 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF26000
	005 Move X8, [X19+3792]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43819008
	009 Move V0, [X12+1464]
	010 Move X8, -43663360
	011 Move X10, -43782144
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1499
	015 Move W11, 21
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3792], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_AssetFile_Status(System.UInt64 assetFileID)

Disassembly:
	0x034B8EF8 STRB W31, [X31 + 0x2C]
	0x034B8EFC BL 0x1C1729C
	0x034B8F00 MOV X8, X0
	0x034B8F04 STR X0, [X19 + 0xFC8]
	0x034B8F08 BLR X8
	0x034B8F0C LDP X30, X19, [X31 + 0x30]
	0x034B8F10 ADD X31, X31, 0x40
	0x034B8F14 RET
	0x034B8F18 SUB X31, X31, 0x40
	0x034B8F1C STP X30, X19, [X31 + 0x30]
	0x034B8F20 ADRP X19, 0xF25000
	0x034B8F24 LDR X8, [X19 + 0xFD0]
	0x034B8F28 CBNZ X8, 0x34B8F70
	0x034B8F2C ADRP X12, 0xFFFFFFFFFD635000
	0x034B8F30 LDR V0, [X12 + 0x5B8]
	0x034B8F34 ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8F38 ADRP X10, 0xFFFFFFFFFD65B000
	0x034B8F3C ADD X8, X8, 0xDD2
	0x034B8F40 MOVZ W9, 0x11
	0x034B8F44 ADD X10, X10, 0xE10
	0x034B8F48 MOVZ W11, 0x1A
	0x034B8F4C ADD X0, X31, 0x0
	0x034B8F50 STR W31, [X31 + 0x28]
	0x034B8F54 STP X8, X9, [X31]
	0x034B8F58 STP X10, X11, [X31 + 0x10]
	0x034B8F5C STR D0, [X31 + 0x20]
	0x034B8F60 STRB W31, [X31 + 0x2C]
	0x034B8F64 BL 0x1C1729C
	0x034B8F68 MOV X8, X0
	0x034B8F6C STR X0, [X19 + 0xFD0]
	0x034B8F70 BLR X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3800]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43749376
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 929
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3800], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_StatusById(System.UInt64 assetFileID)

Disassembly:
	0x034B8F74 LDP X30, X19, [X31 + 0x30]
	0x034B8F78 ADD X31, X31, 0x40
	0x034B8F7C RET
	0x034B8F80 SUB X31, X31, 0x40
	0x034B8F84 STP X30, X19, [X31 + 0x30]
	0x034B8F88 ADRP X19, 0xF25000
	0x034B8F8C LDR X8, [X19 + 0xFD8]
	0x034B8F90 CBNZ X8, 0x34B8FD8
	0x034B8F94 ADRP X12, 0xFFFFFFFFFD635000
	0x034B8F98 LDR V0, [X12 + 0x5B8]
	0x034B8F9C ADRP X8, 0xFFFFFFFFFD65B000
	0x034B8FA0 ADRP X10, 0xFFFFFFFFFD64E000
	0x034B8FA4 ADD X8, X8, 0xDD2
	0x034B8FA8 MOVZ W9, 0x11
	0x034B8FAC ADD X10, X10, 0x502
	0x034B8FB0 MOVZ W11, 0x21
	0x034B8FB4 ADD X0, X31, 0x0
	0x034B8FB8 STR W31, [X31 + 0x28]
	0x034B8FBC STP X8, X9, [X31]
	0x034B8FC0 STP X10, X11, [X31 + 0x10]
	0x034B8FC4 STR D0, [X31 + 0x20]
	0x034B8FC8 STRB W31, [X31 + 0x2C]
	0x034B8FCC BL 0x1C1729C
	0x034B8FD0 MOV X8, X0
	0x034B8FD4 STR X0, [X19 + 0xFD8]
	0x034B8FD8 BLR X8
	0x034B8FDC LDP X30, X19, [X31 + 0x30]
	0x034B8FE0 ADD X31, X31, 0x40
	0x034B8FE4 RET
	0x034B8FE8 SUB X31, X31, 0x40
	0x034B8FEC STP X30, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF26000
	006 Move X8, [X20+3808]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43819008
	011 Move V0, [X12+1464]
	012 Move X8, -43663360
	013 Move X10, -43757568
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1777
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3808], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFile_StatusByName(System.String assetFileName)

Disassembly:
	0x034B8FF0 ADRP X19, 0xF25000
	0x034B8FF4 LDR X8, [X19 + 0xFE0]
	0x034B8FF8 CBNZ X8, 0x34B9040
	0x034B8FFC ADRP X12, 0xFFFFFFFFFD635000
	0x034B9000 LDR V0, [X12 + 0x5B8]
	0x034B9004 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9008 ADRP X10, 0xFFFFFFFFFD65A000
	0x034B900C ADD X8, X8, 0xDD2
	0x034B9010 MOVZ W9, 0x11
	0x034B9014 ADD X10, X10, 0xE2B
	0x034B9018 MOVZ W11, 0x1B
	0x034B901C ADD X0, X31, 0x0
	0x034B9020 STR W31, [X31 + 0x28]
	0x034B9024 STP X8, X9, [X31]
	0x034B9028 STP X10, X11, [X31 + 0x10]
	0x034B902C STR D0, [X31 + 0x20]
	0x034B9030 STRB W31, [X31 + 0x2C]
	0x034B9034 BL 0x1C1729C
	0x034B9038 MOV X8, X0
	0x034B903C STR X0, [X19 + 0xFE0]
	0x034B9040 BLR X8
	0x034B9044 LDP X30, X19, [X31 + 0x30]
	0x034B9048 ADD X31, X31, 0x40
	0x034B904C RET
	0x034B9050 SUB X31, X31, 0x40
	0x034B9054 STP X30, X19, [X31 + 0x30]
	0x034B9058 ADRP X19, 0xF24000
	0x034B905C LDR X8, [X19 + 0xFE8]
	0x034B9060 CBNZ X8, 0x34B90A8
	0x034B9064 ADRP X12, 0xFFFFFFFFFD634000
	0x034B9068 LDR V0, [X12 + 0x5B8]
	0x034B906C ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9070 ADRP X10, 0xFFFFFFFFFD65E000
	0x034B9074 ADD X8, X8, 0xDD2
	0x034B9078 MOVZ W9, 0x11
	0x034B907C ADD X10, X10, 0xCE6
	0x034B9080 MOVZ W11, 0x1F
	0x034B9084 ADD X0, X31, 0x0
	0x034B9088 STR W31, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF26000
	006 Move X20, 0xC7B000
	007 Move W8, [X21+3816]
	008 Call 0x3EB28C4
	009 Return X0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xC7A000
	016 Move X0, [X0+808]
	017 Call 0x1C17CF4
	018 Move X0, 0xC63000
	019 Move X0, [X0+2128]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3816], W8
	023 Move X0, [X20]
	024 Move X20, 0xC63000
	025 Move W8, [X0+224]
	026 Move X20, [X20+2128]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Call CAPI.StringToNative, X0
	032 Move X19, X0
	033 Call CAPI.ovr_AssetFile_StatusByName_Native, X0
	034 Move X8, [X20]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Call Marshal.FreeCoTaskMem, X0
	044 Move X0, X20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0

Method: System.UInt64 ovr_AssetFile_StatusByName_Native(System.IntPtr assetFileName)

Disassembly:
	0x034B908C STP X8, X9, [X31]
	0x034B9090 STP X10, X11, [X31 + 0x10]
	0x034B9094 STR D0, [X31 + 0x20]
	0x034B9098 STRB W31, [X31 + 0x2C]
	0x034B909C BL 0x1C1729C
	0x034B90A0 MOV X8, X0
	0x034B90A4 STR X0, [X19 + 0xFE8]
	0x034B90A8 BLR X8
	0x034B90AC LDP X30, X19, [X31 + 0x30]
	0x034B90B0 ADD X31, X31, 0x40
	0x034B90B4 RET
	0x034B90B8 SUB X31, X31, 0x40
	0x034B90BC STP X30, X19, [X31 + 0x30]
	0x034B90C0 ADRP X19, 0xF24000
	0x034B90C4 LDR X8, [X19 + 0xFF0]
	0x034B90C8 CBNZ X8, 0x34B9110
	0x034B90CC ADRP X12, 0xFFFFFFFFFD634000
	0x034B90D0 LDR V0, [X12 + 0x5B8]
	0x034B90D4 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B90D8 ADRP X10, 0xFFFFFFFFFD639000
	0x034B90DC ADD X8, X8, 0xDD2
	0x034B90E0 MOVZ W9, 0x11
	0x034B90E4 ADD X10, X10, 0x666
	0x034B90E8 MOVZ W11, 0x23
	0x034B90EC ADD X0, X31, 0x0
	0x034B90F0 STR W31, [X31 + 0x28]
	0x034B90F4 STP X8, X9, [X31]
	0x034B90F8 STP X10, X11, [X31 + 0x10]
	0x034B90FC STR D0, [X31 + 0x20]
	0x034B9100 STRB W31, [X31 + 0x2C]
	0x034B9104 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3824]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43642880
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3330
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3824], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Avatar_LaunchAvatarEditor(System.IntPtr options)

Disassembly:
	0x034B9108 MOV X8, X0
	0x034B910C STR X0, [X19 + 0xFF0]
	0x034B9110 BLR X8
	0x034B9114 LDP X30, X19, [X31 + 0x30]
	0x034B9118 ADD X31, X31, 0x40
	0x034B911C RET
	0x034B9120 STR X30, [X31 - 0x30]!
	0x034B9124 STP X22, X21, [X31 + 0x10]
	0x034B9128 STP X20, X19, [X31 + 0x20]
	0x034B912C ADRP X22, 0xF24000
	0x034B9130 ADRP X21, 0xC79000
	0x034B9134 LDRB W8, [X22 + 0xFF8]
	0x034B9138 LDR X21, [X21 + 0x328]
	0x034B913C MOV X19, X1
	0x034B9140 MOV X20, X0
	0x034B9144 TBNZ X8, 0x0, 0x34B9168
	0x034B9148 ADRP X0, 0xC79000
	0x034B914C LDR X0, [X0 + 0x328]
	0x034B9150 BL 0x1C16CF4
	0x034B9154 ADRP X0, 0xC62000
	0x034B9158 LDR X0, [X0 + 0x850]
	0x034B915C BL 0x1C16CF4
	0x034B9160 MOVZ W8, 0x1
	0x034B9164 STRB W8, [X22 + 0xFF8]
	0x034B9168 LDR X0, [X21]
	0x034B916C ADRP X21, 0xC62000
	0x034B9170 LDR W8, [X0 + 0xE0]
	0x034B9174 LDR X21, [X21 + 0x850]
	0x034B9178 CBNZ W8, 0x34B9180
	0x034B917C BL 0x1C16DFC
	0x034B9180 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3832]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3570
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3832], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Avatar_UpdateMetaData(System.String avatarMetaData, System.String imageFilePath)

Disassembly:
	0x034B9184 BL 0x34B404C
	0x034B9188 MOV X20, X0
	0x034B918C MOV X0, X19
	0x034B9190 BL 0x34B404C
	0x034B9194 MOV X19, X0
	0x034B9198 MOV X0, X20
	0x034B919C MOV X1, X19
	0x034B91A0 BL 0x34B91E8
	0x034B91A4 LDR X8, [X21]
	0x034B91A8 MOV X21, X0
	0x034B91AC LDR W9, [X8 + 0xE0]
	0x034B91B0 CBNZ W9, 0x34B91BC
	0x034B91B4 MOV X0, X8
	0x034B91B8 BL 0x1C16DFC
	0x034B91BC MOV X0, X20
	0x034B91C0 MOV X1, X31
	0x034B91C4 BL 0x32C1060
	0x034B91C8 MOV X0, X19
	0x034B91CC MOV X1, X31
	0x034B91D0 BL 0x32C1060
	0x034B91D4 MOV X0, X21
	0x034B91D8 LDP X20, X19, [X31 + 0x20]
	0x034B91DC LDP X22, X21, [X31 + 0x10]
	0x034B91E0 LDR X30, [X31], #0x30
	0x034B91E4 RET
	0x034B91E8 SUB X31, X31, 0x50
	0x034B91EC STP X30, X21, [X31 + 0x30]
	0x034B91F0 STP X20, X19, [X31 + 0x40]
	0x034B91F4 ADRP X21, 0xF25000
	0x034B91F8 LDR X8, [X21]
	0x034B91FC MOV X19, X1
	0x034B9200 MOV X20, X0
	0x034B9204 CBNZ X8, 0x34B9250
	0x034B9208 ADRP X12, 0xFFFFFFFFFD634000
	0x034B920C LDR V0, [X12 + 0x5B8]
	0x034B9210 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9214 ADRP X10, 0xFFFFFFFFFD63B000
	0x034B9218 ADD X8, X8, 0xDD2
	0x034B921C MOVZ W9, 0x11
	0x034B9220 ADD X10, X10, 0x583
	0x034B9224 MOVZ W11, 0x1F
	0x034B9228 MOVZ W13, 0x10
	0x034B922C ADD X0, X31, 0x0
	0x034B9230 STP X8, X9, [X31]
	0x034B9234 STP X10, X11, [X31 + 0x10]
	0x034B9238 STR W13, [X31 + 0x28]
	0x034B923C STR D0, [X31 + 0x20]
	0x034B9240 STRB W31, [X31 + 0x2C]
	0x034B9244 BL 0x1C1729C
	0x034B9248 MOV X8, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF25000
	007 Move X21, 0xC7A000
	008 Move W8, [X22+3840]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC7A000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC63000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3840], W8
	024 Move X0, [X21]
	025 Move X21, 0xC63000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Call CAPI.StringToNative, X0
	036 Move X19, X0
	037 Move X0, X20
	038 Move X1, X19
	039 Call CAPI.ovr_Avatar_UpdateMetaData_Native, X0, X1
	040 Move X8, [X21]
	041 Move X21, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Marshal.FreeCoTaskMem, X0
	050 Move X0, X19
	051 Move X1, X31
	052 Call Marshal.FreeCoTaskMem, X0
	053 Move X0, X21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0

Method: System.UInt64 ovr_Avatar_UpdateMetaData_Native(System.IntPtr avatarMetaData, System.IntPtr imageFilePath)

Disassembly:
	0x034B924C STR X0, [X21]
	0x034B9250 MOV X0, X20
	0x034B9254 MOV X1, X19
	0x034B9258 BLR X8
	0x034B925C LDP X20, X19, [X31 + 0x40]
	0x034B9260 LDP X30, X21, [X31 + 0x30]
	0x034B9264 ADD X31, X31, 0x50
	0x034B9268 RET
	0x034B926C STP X30, X21, [X31 - 0x20]!
	0x034B9270 STP X20, X19, [X31 + 0x10]
	0x034B9274 ADRP X21, 0xF25000
	0x034B9278 ADRP X20, 0xC79000
	0x034B927C LDRB W8, [X21 + 0x8]
	0x034B9280 LDR X20, [X20 + 0x328]
	0x034B9284 MOV X19, X0
	0x034B9288 TBNZ X8, 0x0, 0x34B92AC
	0x034B928C ADRP X0, 0xC79000
	0x034B9290 LDR X0, [X0 + 0x328]
	0x034B9294 BL 0x1C16CF4
	0x034B9298 ADRP X0, 0xC62000
	0x034B929C LDR X0, [X0 + 0x850]
	0x034B92A0 BL 0x1C16CF4
	0x034B92A4 MOVZ W8, 0x1
	0x034B92A8 STRB W8, [X21 + 0x8]
	0x034B92AC LDR X0, [X20]
	0x034B92B0 ADRP X20, 0xC62000
	0x034B92B4 LDR W8, [X0 + 0xE0]
	0x034B92B8 LDR X20, [X20 + 0x850]
	0x034B92BC CBNZ W8, 0x34B92C4
	0x034B92C0 BL 0x1C16DFC
	0x034B92C4 MOV X0, X19
	0x034B92C8 BL 0x34B404C
	0x034B92CC MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF25000
	007 Move X8, [X21+3848]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43823104
	013 Move V0, [X12+1464]
	014 Move X8, -43667456
	015 Move X10, -43614208
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 247
	019 Move W11, 25
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3848], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Challenges_Create(System.String leaderboardName, System.IntPtr challengeOptions)

Disassembly:
	0x034B92D0 BL 0x34B9308
	0x034B92D4 LDR X8, [X20]
	0x034B92D8 MOV X20, X0
	0x034B92DC LDR W9, [X8 + 0xE0]
	0x034B92E0 CBNZ W9, 0x34B92EC
	0x034B92E4 MOV X0, X8
	0x034B92E8 BL 0x1C16DFC
	0x034B92EC MOV X0, X19
	0x034B92F0 MOV X1, X31
	0x034B92F4 BL 0x32C1060
	0x034B92F8 MOV X0, X20
	0x034B92FC LDP X20, X19, [X31 + 0x10]
	0x034B9300 LDP X30, X21, [X31], #0x20
	0x034B9304 RET
	0x034B9308 SUB X31, X31, 0x50
	0x034B930C STR X30, [X31 + 0x30]
	0x034B9310 STP X20, X19, [X31 + 0x40]
	0x034B9314 ADRP X20, 0xF25000
	0x034B9318 LDR X8, [X20 + 0x10]
	0x034B931C MOV X19, X0
	0x034B9320 CBNZ X8, 0x34B936C
	0x034B9324 ADRP X12, 0xFFFFFFFFFD634000
	0x034B9328 LDR V0, [X12 + 0x5B8]
	0x034B932C ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9330 ADRP X10, 0xFFFFFFFFFD657000
	0x034B9334 ADD X8, X8, 0xDD2
	0x034B9338 MOVZ W9, 0x11
	0x034B933C ADD X10, X10, 0x3EF
	0x034B9340 MOVZ W11, 0x1C
	0x034B9344 MOVZ W13, 0x8
	0x034B9348 ADD X0, X31, 0x0
	0x034B934C STP X8, X9, [X31]
	0x034B9350 STP X10, X11, [X31 + 0x10]
	0x034B9354 STR W13, [X31 + 0x28]
	0x034B9358 STR D0, [X31 + 0x20]
	0x034B935C STRB W31, [X31 + 0x2C]
	0x034B9360 BL 0x1C1729C
	0x034B9364 MOV X8, X0
	0x034B9368 STR X0, [X20 + 0x10]
	0x034B936C MOV X0, X19
	0x034B9370 BLR X8
	0x034B9374 LDP X20, X19, [X31 + 0x40]
	0x034B9378 LDR X30, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF25000
	007 Move X21, 0xC7A000
	008 Move W8, [X22+3856]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC7A000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC63000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3856], W8
	024 Move X0, [X21]
	025 Move X21, 0xC63000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X1, X19
	034 Move X20, X0
	035 Call CAPI.ovr_Challenges_Create_Native, X0, X1
	036 Move X8, [X21]
	037 Move X19, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Call Marshal.FreeCoTaskMem, X0
	046 Move X0, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0

Method: System.UInt64 ovr_Challenges_Create_Native(System.IntPtr leaderboardName, System.IntPtr challengeOptions)

Disassembly:
	0x034B937C ADD X31, X31, 0x50
	0x034B9380 RET
	0x034B9384 STP X30, X21, [X31 - 0x20]!
	0x034B9388 STP X20, X19, [X31 + 0x10]
	0x034B938C ADRP X21, 0xF25000
	0x034B9390 ADRP X20, 0xC79000
	0x034B9394 LDRB W8, [X21 + 0x18]
	0x034B9398 LDR X20, [X20 + 0x328]
	0x034B939C MOV X19, X0
	0x034B93A0 TBNZ X8, 0x0, 0x34B93C4
	0x034B93A4 ADRP X0, 0xC79000
	0x034B93A8 LDR X0, [X0 + 0x328]
	0x034B93AC BL 0x1C16CF4
	0x034B93B0 ADRP X0, 0xC62000
	0x034B93B4 LDR X0, [X0 + 0x850]
	0x034B93B8 BL 0x1C16CF4
	0x034B93BC MOVZ W8, 0x1
	0x034B93C0 STRB W8, [X21 + 0x18]
	0x034B93C4 LDR X0, [X20]
	0x034B93C8 ADRP X20, 0xC62000
	0x034B93CC LDR W8, [X0 + 0xE0]
	0x034B93D0 LDR X20, [X20 + 0x850]
	0x034B93D4 CBNZ W8, 0x34B93DC
	0x034B93D8 BL 0x1C16DFC
	0x034B93DC MOV X0, X19
	0x034B93E0 BL 0x34B404C
	0x034B93E4 MOV X19, X0
	0x034B93E8 BL 0x34B9420
	0x034B93EC LDR X8, [X20]
	0x034B93F0 MOV X20, X0
	0x034B93F4 LDR W9, [X8 + 0xE0]
	0x034B93F8 CBNZ W9, 0x34B9404
	0x034B93FC MOV X0, X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF25000
	007 Move X8, [X21+3864]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43823104
	013 Move V0, [X12+1464]
	014 Move X8, -43667456
	015 Move X10, -43642880
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3357
	019 Move W11, 21
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3864], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Challenges_DeclineInvite(System.UInt64 challengeID)

Disassembly:
	0x034B9400 BL 0x1C16DFC
	0x034B9404 MOV X0, X19
	0x034B9408 MOV X1, X31
	0x034B940C BL 0x32C1060
	0x034B9410 MOV X0, X20
	0x034B9414 LDP X20, X19, [X31 + 0x10]
	0x034B9418 LDP X30, X21, [X31], #0x20
	0x034B941C RET
	0x034B9420 SUB X31, X31, 0x50
	0x034B9424 STR X30, [X31 + 0x30]
	0x034B9428 STP X20, X19, [X31 + 0x40]
	0x034B942C ADRP X20, 0xF25000
	0x034B9430 LDR X8, [X20 + 0x20]
	0x034B9434 MOV X19, X0
	0x034B9438 CBNZ X8, 0x34B9484
	0x034B943C ADRP X12, 0xFFFFFFFFFD634000
	0x034B9440 LDR V0, [X12 + 0x5B8]
	0x034B9444 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9448 ADRP X10, 0xFFFFFFFFFD63F000
	0x034B944C ADD X8, X8, 0xDD2
	0x034B9450 MOVZ W9, 0x11
	0x034B9454 ADD X10, X10, 0x60A
	0x034B9458 MOVZ W11, 0x32
	0x034B945C MOVZ W13, 0x8
	0x034B9460 ADD X0, X31, 0x0
	0x034B9464 STP X8, X9, [X31]
	0x034B9468 STP X10, X11, [X31 + 0x10]
	0x034B946C STR W13, [X31 + 0x28]
	0x034B9470 STR D0, [X31 + 0x20]
	0x034B9474 STRB W31, [X31 + 0x2C]
	0x034B9478 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3872]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43769856
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1996
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3872], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenges_Delete(System.UInt64 challengeID)

Disassembly:
	0x034B947C MOV X8, X0
	0x034B9480 STR X0, [X20 + 0x20]
	0x034B9484 MOV X0, X19
	0x034B9488 BLR X8
	0x034B948C LDP X20, X19, [X31 + 0x40]
	0x034B9490 LDR X30, [X31 + 0x30]
	0x034B9494 ADD X31, X31, 0x50
	0x034B9498 RET
	0x034B949C STP X30, X21, [X31 - 0x20]!
	0x034B94A0 STP X20, X19, [X31 + 0x10]
	0x034B94A4 ADRP X21, 0xF25000
	0x034B94A8 ADRP X20, 0xC79000
	0x034B94AC LDRB W8, [X21 + 0x28]
	0x034B94B0 LDR X20, [X20 + 0x328]
	0x034B94B4 MOV X19, X0
	0x034B94B8 TBNZ X8, 0x0, 0x34B94DC
	0x034B94BC ADRP X0, 0xC79000
	0x034B94C0 LDR X0, [X0 + 0x328]
	0x034B94C4 BL 0x1C16CF4
	0x034B94C8 ADRP X0, 0xC62000
	0x034B94CC LDR X0, [X0 + 0x850]
	0x034B94D0 BL 0x1C16CF4
	0x034B94D4 MOVZ W8, 0x1
	0x034B94D8 STRB W8, [X21 + 0x28]
	0x034B94DC LDR X0, [X20]
	0x034B94E0 ADRP X20, 0xC62000
	0x034B94E4 LDR W8, [X0 + 0xE0]
	0x034B94E8 LDR X20, [X20 + 0x850]
	0x034B94EC CBNZ W8, 0x34B94F4
	0x034B94F0 BL 0x1C16DFC
	0x034B94F4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3880]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43614208
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 273
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3880], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenges_Get(System.UInt64 challengeID)

Disassembly:
	0x034B94F8 BL 0x34B404C
	0x034B94FC MOV X19, X0
	0x034B9500 BL 0x34B9538
	0x034B9504 LDR X8, [X20]
	0x034B9508 MOV X20, X0
	0x034B950C LDR W9, [X8 + 0xE0]
	0x034B9510 CBNZ W9, 0x34B951C
	0x034B9514 MOV X0, X8
	0x034B9518 BL 0x1C16DFC
	0x034B951C MOV X0, X19
	0x034B9520 MOV X1, X31
	0x034B9524 BL 0x32C1060
	0x034B9528 MOV X0, X20
	0x034B952C LDP X20, X19, [X31 + 0x10]
	0x034B9530 LDP X30, X21, [X31], #0x20
	0x034B9534 RET
	0x034B9538 SUB X31, X31, 0x50
	0x034B953C STR X30, [X31 + 0x30]
	0x034B9540 STP X20, X19, [X31 + 0x40]
	0x034B9544 ADRP X20, 0xF25000
	0x034B9548 LDR X8, [X20 + 0x30]
	0x034B954C MOV X19, X0
	0x034B9550 CBNZ X8, 0x34B959C
	0x034B9554 ADRP X12, 0xFFFFFFFFFD634000
	0x034B9558 LDR V0, [X12 + 0x5B8]
	0x034B955C ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9560 ADRP X10, 0xFFFFFFFFFD649000
	0x034B9564 ADD X8, X8, 0xDD2
	0x034B9568 MOVZ W9, 0x11
	0x034B956C ADD X10, X10, 0x230
	0x034B9570 MOVZ W11, 0x30

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3888]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43810816
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 551
	017 Move W11, 18
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3888], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenges_GetEntries(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)

Disassembly:
	0x034B9574 MOVZ W13, 0x8
	0x034B9578 ADD X0, X31, 0x0
	0x034B957C STP X8, X9, [X31]
	0x034B9580 STP X10, X11, [X31 + 0x10]
	0x034B9584 STR W13, [X31 + 0x28]
	0x034B9588 STR D0, [X31 + 0x20]
	0x034B958C STRB W31, [X31 + 0x2C]
	0x034B9590 BL 0x1C1729C
	0x034B9594 MOV X8, X0
	0x034B9598 STR X0, [X20 + 0x30]
	0x034B959C MOV X0, X19
	0x034B95A0 BLR X8
	0x034B95A4 LDP X20, X19, [X31 + 0x40]
	0x034B95A8 LDR X30, [X31 + 0x30]
	0x034B95AC ADD X31, X31, 0x50
	0x034B95B0 RET
	0x034B95B4 SUB X31, X31, 0x40
	0x034B95B8 STP X30, X19, [X31 + 0x30]
	0x034B95BC ADRP X19, 0xF25000
	0x034B95C0 LDR X8, [X19 + 0x38]
	0x034B95C4 CBNZ X8, 0x34B960C
	0x034B95C8 ADRP X12, 0xFFFFFFFFFD634000
	0x034B95CC LDR V0, [X12 + 0x5B8]
	0x034B95D0 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B95D4 ADRP X10, 0xFFFFFFFFFD663000
	0x034B95D8 ADD X8, X8, 0xDD2
	0x034B95DC MOVZ W9, 0x11
	0x034B95E0 ADD X10, X10, 0x13A
	0x034B95E4 MOVZ W11, 0x23
	0x034B95E8 ADD X0, X31, 0x0
	0x034B95EC STR W31, [X31 + 0x28]
	0x034B95F0 STP X8, X9, [X31]
	0x034B95F4 STP X10, X11, [X31 + 0x10]
	0x034B95F8 STR D0, [X31 + 0x20]
	0x034B95FC STRB W31, [X31 + 0x2C]
	0x034B9600 BL 0x1C1729C
	0x034B9604 MOV X8, X0
	0x034B9608 STR X0, [X19 + 0x38]
	0x034B960C BLR X8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xF25000
	009 Move X8, [X23+3896]
	010 Move W19, W3
	011 Move W20, W2
	012 Move W21, W1
	013 Move X22, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {36}
	016 Move X12, -43823104
	017 Move V0, [X12+1464]
	018 Move X8, -43667456
	019 Move X10, -43819008
	020 Add X8, X8, 3538
	021 Move W9, 17
	022 Add X10, X10, 1883
	023 Move W11, 25
	024 Move W13, 20
	025 Add X0, X31, 0
	026 Move [X31], X8
	027 Move [X31+8], X9
	028 Move [X31+16], X10
	029 Move [X31+24], X11
	030 Move [X31+40], W13
	031 Move [X31+32], D0
	032 Move [X31+44], W31
	033 Call 0x1C1829C
	034 Move X8, X0
	035 Move [X23+3896], X0
	036 Move X0, X22
	037 Move W1, W21
	038 Move W2, W20
	039 Move W3, W19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, [X31+80]
	042 Move X19, [X31+88]
	043 Move X22, [X31+64]
	044 Move X21, [X31+72]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Add X31, X31, 96
	048 Return X0

Method: System.UInt64 ovr_Challenges_GetEntriesAfterRank(System.UInt64 challengeID, System.Int32 limit, System.UInt64 afterRank)

Disassembly:
	0x034B9610 LDP X30, X19, [X31 + 0x30]
	0x034B9614 ADD X31, X31, 0x40
	0x034B9618 RET
	0x034B961C STP X30, X21, [X31 - 0x20]!
	0x034B9620 STP X20, X19, [X31 + 0x10]
	0x034B9624 ADRP X21, 0xF25000
	0x034B9628 ADRP X20, 0xC79000
	0x034B962C LDRB W8, [X21 + 0x40]
	0x034B9630 LDR X20, [X20 + 0x328]
	0x034B9634 MOV X19, X0
	0x034B9638 TBNZ X8, 0x0, 0x34B965C
	0x034B963C ADRP X0, 0xC79000
	0x034B9640 LDR X0, [X0 + 0x328]
	0x034B9644 BL 0x1C16CF4
	0x034B9648 ADRP X0, 0xC62000
	0x034B964C LDR X0, [X0 + 0x850]
	0x034B9650 BL 0x1C16CF4
	0x034B9654 MOVZ W8, 0x1
	0x034B9658 STRB W8, [X21 + 0x40]
	0x034B965C LDR X0, [X20]
	0x034B9660 ADRP X20, 0xC62000
	0x034B9664 LDR W8, [X0 + 0xE0]
	0x034B9668 LDR X20, [X20 + 0x850]
	0x034B966C CBNZ W8, 0x34B9674
	0x034B9670 BL 0x1C16DFC
	0x034B9674 MOV X0, X19
	0x034B9678 BL 0x34B404C
	0x034B967C MOV X19, X0
	0x034B9680 BL 0x34B96B8
	0x034B9684 LDR X8, [X20]
	0x034B9688 MOV X20, X0
	0x034B968C LDR W9, [X8 + 0xE0]
	0x034B9690 CBNZ W9, 0x34B969C
	0x034B9694 MOV X0, X8
	0x034B9698 BL 0x1C16DFC
	0x034B969C MOV X0, X19
	0x034B96A0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF25000
	008 Move X8, [X22+3904]
	009 Move X19, X2
	010 Move W20, W1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43823104
	015 Move V0, [X12+1464]
	016 Move X8, -43667456
	017 Move X10, -43577344
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 3289
	021 Move W11, 34
	022 Move W13, 20
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+3904], X0
	034 Move X0, X21
	035 Move W1, W20
	036 Move X2, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 Add X31, X31, 96
	044 Return X0

Method: System.UInt64 ovr_Challenges_GetEntriesByIds(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)

Disassembly:
	0x034B96A4 BL 0x32C1060
	0x034B96A8 MOV X0, X20
	0x034B96AC LDP X20, X19, [X31 + 0x10]
	0x034B96B0 LDP X30, X21, [X31], #0x20
	0x034B96B4 RET
	0x034B96B8 SUB X31, X31, 0x50
	0x034B96BC STR X30, [X31 + 0x30]
	0x034B96C0 STP X20, X19, [X31 + 0x40]
	0x034B96C4 ADRP X20, 0xF25000
	0x034B96C8 LDR X8, [X20 + 0x48]
	0x034B96CC MOV X19, X0
	0x034B96D0 CBNZ X8, 0x34B971C
	0x034B96D4 ADRP X12, 0xFFFFFFFFFD634000
	0x034B96D8 LDR V0, [X12 + 0x5B8]
	0x034B96DC ADRP X8, 0xFFFFFFFFFD65A000
	0x034B96E0 ADRP X10, 0xFFFFFFFFFD670000
	0x034B96E4 ADD X8, X8, 0xDD2
	0x034B96E8 MOVZ W9, 0x11
	0x034B96EC ADD X10, X10, 0xCFC
	0x034B96F0 MOVZ W11, 0x10
	0x034B96F4 MOVZ W13, 0x8
	0x034B96F8 ADD X0, X31, 0x0
	0x034B96FC STP X8, X9, [X31]
	0x034B9700 STP X10, X11, [X31 + 0x10]
	0x034B9704 STR W13, [X31 + 0x28]
	0x034B9708 STR D0, [X31 + 0x20]
	0x034B970C STRB W31, [X31 + 0x2C]
	0x034B9710 BL 0x1C1729C
	0x034B9714 MOV X8, X0
	0x034B9718 STR X0, [X20 + 0x48]
	0x034B971C MOV X0, X19
	0x034B9720 BLR X8
	0x034B9724 LDP X20, X19, [X31 + 0x40]
	0x034B9728 LDR X30, [X31 + 0x30]
	0x034B972C ADD X31, X31, 0x50
	0x034B9730 RET
	0x034B9734 STP X30, X21, [X31 - 0x20]!
	0x034B9738 STP X20, X19, [X31 + 0x10]
	0x034B973C ADRP X21, 0xF25000
	0x034B9740 ADRP X20, 0xC79000
	0x034B9744 LDRB W8, [X21 + 0x50]
	0x034B9748 LDR X20, [X20 + 0x328]
	0x034B974C MOV X19, X0
	0x034B9750 TBNZ X8, 0x0, 0x34B9774
	0x034B9754 ADRP X0, 0xC79000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X24, 0xF25000
	010 Move X8, [X24+3912]
	011 Move W19, W4
	012 Move X22, X3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X23, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {38}
	018 Move X12, -43823104
	019 Move V0, [X12+1464]
	020 Move X8, -43667456
	021 Move X10, -43606016
	022 Add X8, X8, 3538
	023 Move W9, 17
	024 Add X10, X10, 728
	025 Move W11, 30
	026 Move W13, 28
	027 Add X0, X31, 0
	028 Move [X31], X8
	029 Move [X31+8], X9
	030 Move [X31+16], X10
	031 Move [X31+24], X11
	032 Move [X31+40], W13
	033 Move [X31+32], D0
	034 Move [X31+44], W31
	035 Call 0x1C1829C
	036 Move X8, X0
	037 Move [X24+3912], X0
	038 Add X9, X22, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Move X0, X23
	042 Move W1, W21
	043 Move W2, W20
	044 Move W4, W19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X20, [X31+96]
	047 Move X19, [X31+104]
	048 Move X22, [X31+80]
	049 Move X21, [X31+88]
	050 Move X24, [X31+64]
	051 Move X23, [X31+72]
	052 Move X30, [X31+48]
	053 Add X31, X31, 112
	054 Return X0

Method: System.UInt64 ovr_Challenges_GetList(System.IntPtr challengeOptions, System.Int32 limit)

Disassembly:
	0x034B9758 LDR X0, [X0 + 0x328]
	0x034B975C BL 0x1C16CF4
	0x034B9760 ADRP X0, 0xC62000
	0x034B9764 LDR X0, [X0 + 0x850]
	0x034B9768 BL 0x1C16CF4
	0x034B976C MOVZ W8, 0x1
	0x034B9770 STRB W8, [X21 + 0x50]
	0x034B9774 LDR X0, [X20]
	0x034B9778 ADRP X20, 0xC62000
	0x034B977C LDR W8, [X0 + 0xE0]
	0x034B9780 LDR X20, [X20 + 0x850]
	0x034B9784 CBNZ W8, 0x34B978C
	0x034B9788 BL 0x1C16DFC
	0x034B978C MOV X0, X19
	0x034B9790 BL 0x34B404C
	0x034B9794 MOV X19, X0
	0x034B9798 BL 0x34B97D0
	0x034B979C LDR X8, [X20]
	0x034B97A0 MOV X20, X0
	0x034B97A4 LDR W9, [X8 + 0xE0]
	0x034B97A8 CBNZ W9, 0x34B97B4
	0x034B97AC MOV X0, X8
	0x034B97B0 BL 0x1C16DFC
	0x034B97B4 MOV X0, X19
	0x034B97B8 MOV X1, X31
	0x034B97BC BL 0x32C1060
	0x034B97C0 MOV X0, X20
	0x034B97C4 LDP X20, X19, [X31 + 0x10]
	0x034B97C8 LDP X30, X21, [X31], #0x20
	0x034B97CC RET
	0x034B97D0 SUB X31, X31, 0x50
	0x034B97D4 STR X30, [X31 + 0x30]
	0x034B97D8 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF25000
	007 Move X8, [X21+3920]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43823104
	013 Move V0, [X12+1464]
	014 Move X8, -43667456
	015 Move X10, -43642880
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3379
	019 Move W11, 22
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3920], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Challenges_GetNextChallenges(System.IntPtr handle)

Disassembly:
	0x034B97DC ADRP X20, 0xF25000
	0x034B97E0 LDR X8, [X20 + 0x58]
	0x034B97E4 MOV X19, X0
	0x034B97E8 CBNZ X8, 0x34B9830
	0x034B97EC ADRP X11, 0xFFFFFFFFFD634000
	0x034B97F0 LDR V0, [X11 + 0x5B8]
	0x034B97F4 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B97F8 ADRP X10, 0xFFFFFFFFFD664000
	0x034B97FC ADD X8, X8, 0xDD2
	0x034B9800 MOVZ W9, 0x11
	0x034B9804 ADD X10, X10, 0xE68
	0x034B9808 MOVZ W12, 0x8
	0x034B980C ADD X0, X31, 0x0
	0x034B9810 STP X8, X9, [X31]
	0x034B9814 STP X10, X9, [X31 + 0x10]
	0x034B9818 STR W12, [X31 + 0x28]
	0x034B981C STR D0, [X31 + 0x20]
	0x034B9820 STRB W31, [X31 + 0x2C]
	0x034B9824 BL 0x1C1729C
	0x034B9828 MOV X8, X0
	0x034B982C STR X0, [X20 + 0x58]
	0x034B9830 MOV X0, X19
	0x034B9834 BLR X8
	0x034B9838 LDP X20, X19, [X31 + 0x40]
	0x034B983C LDR X30, [X31 + 0x30]
	0x034B9840 ADD X31, X31, 0x50
	0x034B9844 RET
	0x034B9848 SUB X31, X31, 0x40
	0x034B984C STP X30, X19, [X31 + 0x30]
	0x034B9850 ADRP X19, 0xF25000
	0x034B9854 LDR X8, [X19 + 0x60]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3928]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43626496
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3655
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3928], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenges_GetNextEntries(System.IntPtr handle)

Disassembly:
	0x034B9858 CBNZ X8, 0x34B98A0
	0x034B985C ADRP X12, 0xFFFFFFFFFD634000
	0x034B9860 LDR V0, [X12 + 0x5B8]
	0x034B9864 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9868 ADRP X10, 0xFFFFFFFFFD66D000
	0x034B986C ADD X8, X8, 0xDD2
	0x034B9870 MOVZ W9, 0x11
	0x034B9874 ADD X10, X10, 0x282
	0x034B9878 MOVZ W11, 0x17
	0x034B987C ADD X0, X31, 0x0
	0x034B9880 STR W31, [X31 + 0x28]
	0x034B9884 STP X8, X9, [X31]
	0x034B9888 STP X10, X11, [X31 + 0x10]
	0x034B988C STR D0, [X31 + 0x20]
	0x034B9890 STRB W31, [X31 + 0x2C]
	0x034B9894 BL 0x1C1729C
	0x034B9898 MOV X8, X0
	0x034B989C STR X0, [X19 + 0x60]
	0x034B98A0 BLR X8
	0x034B98A4 LDP X30, X19, [X31 + 0x30]
	0x034B98A8 ADD X31, X31, 0x40
	0x034B98AC RET
	0x034B98B0 SUB X31, X31, 0x50
	0x034B98B4 STR X30, [X31 + 0x30]
	0x034B98B8 STP X20, X19, [X31 + 0x40]
	0x034B98BC ADRP X20, 0xF25000
	0x034B98C0 LDR X8, [X20 + 0x68]
	0x034B98C4 MOV X19, X0
	0x034B98C8 CBNZ X8, 0x34B9914
	0x034B98CC ADRP X12, 0xFFFFFFFFFD634000
	0x034B98D0 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3936]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43679744
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 977
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3936], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenges_GetPreviousChallenges(System.IntPtr handle)

Disassembly:
	0x034B98D4 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B98D8 ADRP X10, 0xFFFFFFFFFD645000
	0x034B98DC ADD X8, X8, 0xDD2
	0x034B98E0 MOVZ W9, 0x11
	0x034B98E4 ADD X10, X10, 0x3B6
	0x034B98E8 MOVZ W11, 0x23
	0x034B98EC MOVZ W13, 0x8
	0x034B98F0 ADD X0, X31, 0x0
	0x034B98F4 STP X8, X9, [X31]
	0x034B98F8 STP X10, X11, [X31 + 0x10]
	0x034B98FC STR W13, [X31 + 0x28]
	0x034B9900 STR D0, [X31 + 0x20]
	0x034B9904 STRB W31, [X31 + 0x2C]
	0x034B9908 BL 0x1C1729C
	0x034B990C MOV X8, X0
	0x034B9910 STR X0, [X20 + 0x68]
	0x034B9914 MOV X0, X19
	0x034B9918 BLR X8
	0x034B991C LDP X20, X19, [X31 + 0x40]
	0x034B9920 LDR X30, [X31 + 0x30]
	0x034B9924 ADD X31, X31, 0x50
	0x034B9928 RET
	0x034B992C SUB X31, X31, 0x40
	0x034B9930 STP X30, X19, [X31 + 0x30]
	0x034B9934 ADRP X19, 0xF25000
	0x034B9938 LDR X8, [X19 + 0x70]
	0x034B993C CBNZ X8, 0x34B9984
	0x034B9940 ADRP X12, 0xFFFFFFFFFD634000
	0x034B9944 LDR V0, [X12 + 0x5B8]
	0x034B9948 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B994C ADRP X10, 0xFFFFFFFFFD657000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3944]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1802
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3944], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenges_GetPreviousEntries(System.IntPtr handle)

Disassembly:
	0x034B9950 ADD X8, X8, 0xDD2
	0x034B9954 MOVZ W9, 0x11
	0x034B9958 ADD X10, X10, 0x40C
	0x034B995C MOVZ W11, 0x20
	0x034B9960 ADD X0, X31, 0x0
	0x034B9964 STR W31, [X31 + 0x28]
	0x034B9968 STP X8, X9, [X31]
	0x034B996C STP X10, X11, [X31 + 0x10]
	0x034B9970 STR D0, [X31 + 0x20]
	0x034B9974 STRB W31, [X31 + 0x2C]
	0x034B9978 BL 0x1C1729C
	0x034B997C MOV X8, X0
	0x034B9980 STR X0, [X19 + 0x70]
	0x034B9984 BLR X8
	0x034B9988 LDP X30, X19, [X31 + 0x30]
	0x034B998C ADD X31, X31, 0x40
	0x034B9990 RET
	0x034B9994 SUB X31, X31, 0x50
	0x034B9998 STR X30, [X31 + 0x30]
	0x034B999C STP X20, X19, [X31 + 0x40]
	0x034B99A0 ADRP X20, 0xF25000
	0x034B99A4 LDR X8, [X20 + 0x78]
	0x034B99A8 MOV X19, X0
	0x034B99AC CBNZ X8, 0x34B99F8
	0x034B99B0 ADRP X12, 0xFFFFFFFFFD634000
	0x034B99B4 LDR V0, [X12 + 0x5B8]
	0x034B99B8 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B99BC ADRP X10, 0xFFFFFFFFFD66E000
	0x034B99C0 ADD X8, X8, 0xDD2
	0x034B99C4 MOVZ W9, 0x11
	0x034B99C8 ADD X10, X10, 0xC19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3952]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 945
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3952], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenges_Join(System.UInt64 challengeID)

Disassembly:
	0x034B99CC MOVZ W11, 0x23
	0x034B99D0 MOVZ W13, 0x8
	0x034B99D4 ADD X0, X31, 0x0
	0x034B99D8 STP X8, X9, [X31]
	0x034B99DC STP X10, X11, [X31 + 0x10]
	0x034B99E0 STR W13, [X31 + 0x28]
	0x034B99E4 STR D0, [X31 + 0x20]
	0x034B99E8 STRB W31, [X31 + 0x2C]
	0x034B99EC BL 0x1C1729C
	0x034B99F0 MOV X8, X0
	0x034B99F4 STR X0, [X20 + 0x78]
	0x034B99F8 MOV X0, X19
	0x034B99FC BLR X8
	0x034B9A00 LDP X20, X19, [X31 + 0x40]
	0x034B9A04 LDR X30, [X31 + 0x30]
	0x034B9A08 ADD X31, X31, 0x50
	0x034B9A0C RET
	0x034B9A10 SUB X31, X31, 0x50
	0x034B9A14 STR X30, [X31 + 0x30]
	0x034B9A18 STP X20, X19, [X31 + 0x40]
	0x034B9A1C ADRP X20, 0xF25000
	0x034B9A20 LDR X8, [X20 + 0x80]
	0x034B9A24 MOV X19, X0
	0x034B9A28 CBNZ X8, 0x34B9A74
	0x034B9A2C ADRP X12, 0xFFFFFFFFFD634000
	0x034B9A30 LDR V0, [X12 + 0x5B8]
	0x034B9A34 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9A38 ADRP X10, 0xFFFFFFFFFD63D000
	0x034B9A3C ADD X8, X8, 0xDD2
	0x034B9A40 MOVZ W9, 0x11
	0x034B9A44 ADD X10, X10, 0x5F1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3960]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 553
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3960], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenges_Leave(System.UInt64 challengeID)

Disassembly:
	0x034B9A48 MOVZ W11, 0x2E
	0x034B9A4C MOVZ W13, 0x8
	0x034B9A50 ADD X0, X31, 0x0
	0x034B9A54 STP X8, X9, [X31]
	0x034B9A58 STP X10, X11, [X31 + 0x10]
	0x034B9A5C STR W13, [X31 + 0x28]
	0x034B9A60 STR D0, [X31 + 0x20]
	0x034B9A64 STRB W31, [X31 + 0x2C]
	0x034B9A68 BL 0x1C1729C
	0x034B9A6C MOV X8, X0
	0x034B9A70 STR X0, [X20 + 0x80]
	0x034B9A74 MOV X0, X19
	0x034B9A78 BLR X8
	0x034B9A7C LDP X20, X19, [X31 + 0x40]
	0x034B9A80 LDR X30, [X31 + 0x30]
	0x034B9A84 ADD X31, X31, 0x50
	0x034B9A88 RET
	0x034B9A8C STP X30, X23, [X31 - 0x30]!
	0x034B9A90 STP X22, X21, [X31 + 0x10]
	0x034B9A94 STP X20, X19, [X31 + 0x20]
	0x034B9A98 ADRP X23, 0xF25000
	0x034B9A9C ADRP X22, 0xC79000
	0x034B9AA0 LDRB W8, [X23 + 0x88]
	0x034B9AA4 LDR X22, [X22 + 0x328]
	0x034B9AA8 MOV X19, X2
	0x034B9AAC MOV X20, X1
	0x034B9AB0 MOV X21, X0
	0x034B9AB4 TBNZ X8, 0x0, 0x34B9AD8
	0x034B9AB8 ADRP X0, 0xC79000
	0x034B9ABC LDR X0, [X0 + 0x328]
	0x034B9AC0 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+3968]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 979
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3968], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenges_UpdateInfo(System.UInt64 challengeID, System.IntPtr challengeOptions)

Disassembly:
	0x034B9AC4 ADRP X0, 0xC62000
	0x034B9AC8 LDR X0, [X0 + 0x850]
	0x034B9ACC BL 0x1C16CF4
	0x034B9AD0 MOVZ W8, 0x1
	0x034B9AD4 STRB W8, [X23 + 0x88]
	0x034B9AD8 LDR X0, [X22]
	0x034B9ADC ADRP X22, 0xC62000
	0x034B9AE0 LDR W8, [X0 + 0xE0]
	0x034B9AE4 LDR X22, [X22 + 0x850]
	0x034B9AE8 CBNZ W8, 0x34B9AF0
	0x034B9AEC BL 0x1C16DFC
	0x034B9AF0 MOV X0, X21
	0x034B9AF4 BL 0x34B404C
	0x034B9AF8 MOV X21, X0
	0x034B9AFC MOV X0, X20
	0x034B9B00 BL 0x34B404C
	0x034B9B04 MOV X20, X0
	0x034B9B08 MOV X0, X19
	0x034B9B0C BL 0x34B404C
	0x034B9B10 MOV X19, X0
	0x034B9B14 MOV X0, X21
	0x034B9B18 MOV X1, X20
	0x034B9B1C MOV X2, X19
	0x034B9B20 BL 0x34B9B74
	0x034B9B24 LDR X8, [X22]
	0x034B9B28 MOV X22, X0
	0x034B9B2C LDR W9, [X8 + 0xE0]
	0x034B9B30 CBNZ W9, 0x34B9B3C
	0x034B9B34 MOV X0, X8
	0x034B9B38 BL 0x1C16DFC
	0x034B9B3C MOV X0, X21
	0x034B9B40 MOV X1, X31
	0x034B9B44 BL 0x32C1060

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF25000
	007 Move X8, [X21+3976]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43823104
	013 Move V0, [X12+1464]
	014 Move X8, -43667456
	015 Move X10, -43720704
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1256
	019 Move W11, 25
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3976], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Colocation_GetCurrentMapUuid()

Disassembly:
	0x034B9B48 MOV X0, X20
	0x034B9B4C MOV X1, X31
	0x034B9B50 BL 0x32C1060
	0x034B9B54 MOV X0, X19
	0x034B9B58 MOV X1, X31
	0x034B9B5C BL 0x32C1060
	0x034B9B60 MOV X0, X22
	0x034B9B64 LDP X20, X19, [X31 + 0x20]
	0x034B9B68 LDP X22, X21, [X31 + 0x10]
	0x034B9B6C LDP X30, X23, [X31], #0x30
	0x034B9B70 RET
	0x034B9B74 SUB X31, X31, 0x60
	0x034B9B78 STR X30, [X31 + 0x30]
	0x034B9B7C STP X22, X21, [X31 + 0x40]
	0x034B9B80 STP X20, X19, [X31 + 0x50]
	0x034B9B84 ADRP X22, 0xF25000
	0x034B9B88 LDR X8, [X22 + 0x90]
	0x034B9B8C MOV X19, X2
	0x034B9B90 MOV X20, X1
	0x034B9B94 MOV X21, X0
	0x034B9B98 CBNZ X8, 0x34B9BE4
	0x034B9B9C ADRP X12, 0xFFFFFFFFFD634000
	0x034B9BA0 LDR V0, [X12 + 0x5B8]
	0x034B9BA4 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9BA8 ADRP X10, 0xFFFFFFFFFD651000
	0x034B9BAC ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+3984]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43823104
	009 Move V0, [X12+1464]
	010 Move X8, -43667456
	011 Move X10, -43819008
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1909
	015 Move W11, 32
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+3984], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Colocation_RequestMap(System.String uuid)

Disassembly:
	0x034B9BB0 MOVZ W9, 0x11
	0x034B9BB4 ADD X10, X10, 0x74D
	0x034B9BB8 MOVZ W11, 0x24
	0x034B9BBC MOVZ W13, 0x18
	0x034B9BC0 ADD X0, X31, 0x0
	0x034B9BC4 STP X8, X9, [X31]
	0x034B9BC8 STP X10, X11, [X31 + 0x10]
	0x034B9BCC STR W13, [X31 + 0x28]
	0x034B9BD0 STR D0, [X31 + 0x20]
	0x034B9BD4 STRB W31, [X31 + 0x2C]
	0x034B9BD8 BL 0x1C1729C
	0x034B9BDC MOV X8, X0
	0x034B9BE0 STR X0, [X22 + 0x90]
	0x034B9BE4 MOV X0, X21
	0x034B9BE8 MOV X1, X20
	0x034B9BEC MOV X2, X19
	0x034B9BF0 BLR X8
	0x034B9BF4 LDP X20, X19, [X31 + 0x50]
	0x034B9BF8 LDP X22, X21, [X31 + 0x40]
	0x034B9BFC LDR X30, [X31 + 0x30]
	0x034B9C00 ADD X31, X31, 0x60
	0x034B9C04 RET
	0x034B9C08 SUB X31, X31, 0x50
	0x034B9C0C STR X30, [X31 + 0x30]
	0x034B9C10 STP X20, X19, [X31 + 0x40]
	0x034B9C14 ADRP X20, 0xF25000
	0x034B9C18 LDR X8, [X20 + 0x98]
	0x034B9C1C MOV X19, X0
	0x034B9C20 CBNZ X8, 0x34B9C6C
	0x034B9C24 ADRP X12, 0xFFFFFFFFFD634000
	0x034B9C28 LDR V0, [X12 + 0x5B8]
	0x034B9C2C ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9C30 ADRP X10, 0xFFFFFFFFFD65C000
	0x034B9C34 ADD X8, X8, 0xDD2
	0x034B9C38 MOVZ W9, 0x11
	0x034B9C3C ADD X10, X10, 0xBB8
	0x034B9C40 MOVZ W11, 0x23
	0x034B9C44 MOVZ W13, 0x8
	0x034B9C48 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF25000
	006 Move X20, 0xC7A000
	007 Move W8, [X21+3992]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC7A000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC63000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3992], W8
	022 Move X0, [X20]
	023 Move X20, 0xC63000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_Colocation_RequestMap_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_Colocation_RequestMap_Native(System.IntPtr uuid)

Disassembly:
	0x034B9C4C STP X8, X9, [X31]
	0x034B9C50 STP X10, X11, [X31 + 0x10]
	0x034B9C54 STR W13, [X31 + 0x28]
	0x034B9C58 STR D0, [X31 + 0x20]
	0x034B9C5C STRB W31, [X31 + 0x2C]
	0x034B9C60 BL 0x1C1729C
	0x034B9C64 MOV X8, X0
	0x034B9C68 STR X0, [X20 + 0x98]
	0x034B9C6C MOV X0, X19
	0x034B9C70 BLR X8
	0x034B9C74 LDP X20, X19, [X31 + 0x40]
	0x034B9C78 LDR X30, [X31 + 0x30]
	0x034B9C7C ADD X31, X31, 0x50
	0x034B9C80 RET
	0x034B9C84 SUB X31, X31, 0x50
	0x034B9C88 STP X30, X21, [X31 + 0x30]
	0x034B9C8C STP X20, X19, [X31 + 0x40]
	0x034B9C90 ADRP X21, 0xF25000
	0x034B9C94 LDR X8, [X21 + 0xA0]
	0x034B9C98 MOV W19, W1
	0x034B9C9C MOV X20, X0
	0x034B9CA0 CBNZ X8, 0x34B9CEC
	0x034B9CA4 ADRP X12, 0xFFFFFFFFFD634000
	0x034B9CA8 LDR V0, [X12 + 0x5B8]
	0x034B9CAC ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9CB0 ADRP X10, 0xFFFFFFFFFD639000
	0x034B9CB4 ADD X8, X8, 0xDD2
	0x034B9CB8 MOVZ W9, 0x11
	0x034B9CBC ADD X10, X10, 0x68A
	0x034B9CC0 MOVZ W11, 0x1D
	0x034B9CC4 MOVZ W13, 0xC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+4000]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43569152
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2898
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4000], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Colocation_ShareMap(System.String uuid)

Disassembly:
	0x034B9CC8 ADD X0, X31, 0x0
	0x034B9CCC STP X8, X9, [X31]
	0x034B9CD0 STP X10, X11, [X31 + 0x10]
	0x034B9CD4 STR W13, [X31 + 0x28]
	0x034B9CD8 STR D0, [X31 + 0x20]
	0x034B9CDC STRB W31, [X31 + 0x2C]
	0x034B9CE0 BL 0x1C1729C
	0x034B9CE4 MOV X8, X0
	0x034B9CE8 STR X0, [X21 + 0xA0]
	0x034B9CEC ADD X9, X20, 0x20
	0x034B9CF0 CMP X20, 0x0
	0x034B9CF4 CSEL X0, X31, X9, EQ
	0x034B9CF8 MOV W1, W19
	0x034B9CFC BLR X8
	0x034B9D00 LDP X20, X19, [X31 + 0x40]
	0x034B9D04 LDP X30, X21, [X31 + 0x30]
	0x034B9D08 ADD X31, X31, 0x50
	0x034B9D0C RET
	0x034B9D10 SUB X31, X31, 0x50
	0x034B9D14 STR X30, [X31 + 0x30]
	0x034B9D18 STP X20, X19, [X31 + 0x40]
	0x034B9D1C ADRP X20, 0xF25000
	0x034B9D20 LDR X8, [X20 + 0xA8]
	0x034B9D24 MOV X19, X0
	0x034B9D28 CBNZ X8, 0x34B9D74
	0x034B9D2C ADRP X12, 0xFFFFFFFFFD634000
	0x034B9D30 LDR V0, [X12 + 0x5B8]
	0x034B9D34 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9D38 ADRP X10, 0xFFFFFFFFFD664000
	0x034B9D3C ADD X8, X8, 0xDD2
	0x034B9D40 MOVZ W9, 0x11
	0x034B9D44 ADD X10, X10, 0xE7A
	0x034B9D48 MOVZ W11, 0x15
	0x034B9D4C MOVZ W13, 0x8
	0x034B9D50 ADD X0, X31, 0x0
	0x034B9D54 STP X8, X9, [X31]
	0x034B9D58 STP X10, X11, [X31 + 0x10]
	0x034B9D5C STR W13, [X31 + 0x28]
	0x034B9D60 STR D0, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF25000
	006 Move X20, 0xC7A000
	007 Move W8, [X21+4008]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC7A000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC63000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4008], W8
	022 Move X0, [X20]
	023 Move X20, 0xC63000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_Colocation_ShareMap_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_Colocation_ShareMap_Native(System.IntPtr uuid)

Disassembly:
	0x034B9D64 STRB W31, [X31 + 0x2C]
	0x034B9D68 BL 0x1C1729C
	0x034B9D6C MOV X8, X0
	0x034B9D70 STR X0, [X20 + 0xA8]
	0x034B9D74 MOV X0, X19
	0x034B9D78 BLR X8
	0x034B9D7C LDP X20, X19, [X31 + 0x40]
	0x034B9D80 LDR X30, [X31 + 0x30]
	0x034B9D84 ADD X31, X31, 0x50
	0x034B9D88 RET
	0x034B9D8C STP X30, X21, [X31 - 0x20]!
	0x034B9D90 STP X20, X19, [X31 + 0x10]
	0x034B9D94 ADRP X21, 0xF25000
	0x034B9D98 ADRP X20, 0xC79000
	0x034B9D9C LDRB W8, [X21 + 0xB0]
	0x034B9DA0 LDR X20, [X20 + 0x328]
	0x034B9DA4 MOV X19, X0
	0x034B9DA8 TBNZ X8, 0x0, 0x34B9DCC
	0x034B9DAC ADRP X0, 0xC79000
	0x034B9DB0 LDR X0, [X0 + 0x328]
	0x034B9DB4 BL 0x1C16CF4
	0x034B9DB8 ADRP X0, 0xC62000
	0x034B9DBC LDR X0, [X0 + 0x850]
	0x034B9DC0 BL 0x1C16CF4
	0x034B9DC4 MOVZ W8, 0x1
	0x034B9DC8 STRB W8, [X21 + 0xB0]
	0x034B9DCC LDR X0, [X20]
	0x034B9DD0 ADRP X20, 0xC62000
	0x034B9DD4 LDR W8, [X0 + 0xE0]
	0x034B9DD8 LDR X20, [X20 + 0x850]
	0x034B9DDC CBNZ W8, 0x34B9DE4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+4016]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43823104
	011 Move V0, [X12+1464]
	012 Move X8, -43667456
	013 Move X10, -43606016
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 759
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4016], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Cowatching_GetPresenterData()

Disassembly:
	0x034B9DE0 BL 0x1C16DFC
	0x034B9DE4 MOV X0, X19
	0x034B9DE8 BL 0x34B404C
	0x034B9DEC MOV X19, X0
	0x034B9DF0 BL 0x34B9E28
	0x034B9DF4 LDR X8, [X20]
	0x034B9DF8 MOV X20, X0
	0x034B9DFC LDR W9, [X8 + 0xE0]
	0x034B9E00 CBNZ W9, 0x34B9E0C
	0x034B9E04 MOV X0, X8
	0x034B9E08 BL 0x1C16DFC
	0x034B9E0C MOV X0, X19
	0x034B9E10 MOV X1, X31
	0x034B9E14 BL 0x32C1060
	0x034B9E18 MOV X0, X20
	0x034B9E1C LDP X20, X19, [X31 + 0x10]
	0x034B9E20 LDP X30, X21, [X31], #0x20
	0x034B9E24 RET
	0x034B9E28 SUB X31, X31, 0x50
	0x034B9E2C STR X30, [X31 + 0x30]
	0x034B9E30 STP X20, X19, [X31 + 0x40]
	0x034B9E34 ADRP X20, 0xF25000
	0x034B9E38 LDR X8, [X20 + 0xB8]
	0x034B9E3C MOV X19, X0
	0x034B9E40 CBNZ X8, 0x34B9E8C
	0x034B9E44 ADRP X12, 0xFFFFFFFFFD634000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+4024]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43823104
	009 Move V0, [X12+1464]
	010 Move X8, -43667456
	011 Move X10, -43597824
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 672
	015 Move W11, 31
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4024], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Cowatching_GetViewersData()

Disassembly:
	0x034B9E48 LDR V0, [X12 + 0x5B8]
	0x034B9E4C ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9E50 ADRP X10, 0xFFFFFFFFFD664000
	0x034B9E54 ADD X8, X8, 0xDD2
	0x034B9E58 MOVZ W9, 0x11
	0x034B9E5C ADD X10, X10, 0xE90
	0x034B9E60 MOVZ W11, 0x2C
	0x034B9E64 MOVZ W13, 0x8
	0x034B9E68 ADD X0, X31, 0x0
	0x034B9E6C STP X8, X9, [X31]
	0x034B9E70 STP X10, X11, [X31 + 0x10]
	0x034B9E74 STR W13, [X31 + 0x28]
	0x034B9E78 STR D0, [X31 + 0x20]
	0x034B9E7C STRB W31, [X31 + 0x2C]
	0x034B9E80 BL 0x1C1729C
	0x034B9E84 MOV X8, X0
	0x034B9E88 STR X0, [X20 + 0xB8]
	0x034B9E8C MOV X0, X19
	0x034B9E90 BLR X8
	0x034B9E94 LDP X20, X19, [X31 + 0x40]
	0x034B9E98 LDR X30, [X31 + 0x30]
	0x034B9E9C ADD X31, X31, 0x50
	0x034B9EA0 RET
	0x034B9EA4 STP X30, X21, [X31 - 0x20]!
	0x034B9EA8 STP X20, X19, [X31 + 0x10]
	0x034B9EAC ADRP X21, 0xF25000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+4032]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43823104
	009 Move V0, [X12+1464]
	010 Move X8, -43667456
	011 Move X10, -43651072
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3272
	015 Move W11, 29
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4032], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Cowatching_IsInSession()

Disassembly:
	0x034B9EB0 ADRP X20, 0xC79000
	0x034B9EB4 LDRB W8, [X21 + 0xC0]
	0x034B9EB8 LDR X20, [X20 + 0x328]
	0x034B9EBC MOV X19, X0
	0x034B9EC0 TBNZ X8, 0x0, 0x34B9EE4
	0x034B9EC4 ADRP X0, 0xC79000
	0x034B9EC8 LDR X0, [X0 + 0x328]
	0x034B9ECC BL 0x1C16CF4
	0x034B9ED0 ADRP X0, 0xC62000
	0x034B9ED4 LDR X0, [X0 + 0x850]
	0x034B9ED8 BL 0x1C16CF4
	0x034B9EDC MOVZ W8, 0x1
	0x034B9EE0 STRB W8, [X21 + 0xC0]
	0x034B9EE4 LDR X0, [X20]
	0x034B9EE8 ADRP X20, 0xC62000
	0x034B9EEC LDR W8, [X0 + 0xE0]
	0x034B9EF0 LDR X20, [X20 + 0x850]
	0x034B9EF4 CBNZ W8, 0x34B9EFC
	0x034B9EF8 BL 0x1C16DFC
	0x034B9EFC MOV X0, X19
	0x034B9F00 BL 0x34B404C
	0x034B9F04 MOV X19, X0
	0x034B9F08 BL 0x34B9F40
	0x034B9F0C LDR X8, [X20]
	0x034B9F10 MOV X20, X0
	0x034B9F14 LDR W9, [X8 + 0xE0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+4040]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43823104
	009 Move V0, [X12+1464]
	010 Move X8, -43667456
	011 Move X10, -43606016
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 783
	015 Move W11, 26
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4040], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Cowatching_JoinSession()

Disassembly:
	0x034B9F18 CBNZ W9, 0x34B9F24
	0x034B9F1C MOV X0, X8
	0x034B9F20 BL 0x1C16DFC
	0x034B9F24 MOV X0, X19
	0x034B9F28 MOV X1, X31
	0x034B9F2C BL 0x32C1060
	0x034B9F30 MOV X0, X20
	0x034B9F34 LDP X20, X19, [X31 + 0x10]
	0x034B9F38 LDP X30, X21, [X31], #0x20
	0x034B9F3C RET
	0x034B9F40 SUB X31, X31, 0x50
	0x034B9F44 STR X30, [X31 + 0x30]
	0x034B9F48 STP X20, X19, [X31 + 0x40]
	0x034B9F4C ADRP X20, 0xF25000
	0x034B9F50 LDR X8, [X20 + 0xC8]
	0x034B9F54 MOV X19, X0
	0x034B9F58 CBNZ X8, 0x34B9FA4
	0x034B9F5C ADRP X12, 0xFFFFFFFFFD634000
	0x034B9F60 LDR V0, [X12 + 0x5B8]
	0x034B9F64 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9F68 ADRP X10, 0xFFFFFFFFFD64D000
	0x034B9F6C ADD X8, X8, 0xDD2
	0x034B9F70 MOVZ W9, 0x11
	0x034B9F74 ADD X10, X10, 0x524
	0x034B9F78 MOVZ W11, 0x20
	0x034B9F7C MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+4048]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43823104
	009 Move V0, [X12+1464]
	010 Move X8, -43667456
	011 Move X10, -43667456
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3600
	015 Move W11, 26
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4048], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Cowatching_LaunchInviteDialog()

Disassembly:
	0x034B9F80 ADD X0, X31, 0x0
	0x034B9F84 STP X8, X9, [X31]
	0x034B9F88 STP X10, X11, [X31 + 0x10]
	0x034B9F8C STR W13, [X31 + 0x28]
	0x034B9F90 STR D0, [X31 + 0x20]
	0x034B9F94 STRB W31, [X31 + 0x2C]
	0x034B9F98 BL 0x1C1729C
	0x034B9F9C MOV X8, X0
	0x034B9FA0 STR X0, [X20 + 0xC8]
	0x034B9FA4 MOV X0, X19
	0x034B9FA8 BLR X8
	0x034B9FAC LDP X20, X19, [X31 + 0x40]
	0x034B9FB0 LDR X30, [X31 + 0x30]
	0x034B9FB4 ADD X31, X31, 0x50
	0x034B9FB8 RET
	0x034B9FBC SUB X31, X31, 0x50
	0x034B9FC0 STR X30, [X31 + 0x30]
	0x034B9FC4 STP X20, X19, [X31 + 0x40]
	0x034B9FC8 ADRP X20, 0xF25000
	0x034B9FCC LDR X8, [X20 + 0xD0]
	0x034B9FD0 MOV W19, W0
	0x034B9FD4 CBNZ X8, 0x34BA020
	0x034B9FD8 ADRP X12, 0xFFFFFFFFFD634000
	0x034B9FDC LDR V0, [X12 + 0x5B8]
	0x034B9FE0 ADRP X8, 0xFFFFFFFFFD65A000
	0x034B9FE4 ADRP X10, 0xFFFFFFFFFD65A000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+4056]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43823104
	009 Move V0, [X12+1464]
	010 Move X8, -43667456
	011 Move X10, -43720704
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1282
	015 Move W11, 33
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4056], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Cowatching_LeaveSession()

Disassembly:
	0x034B9FE8 ADD X8, X8, 0xDD2
	0x034B9FEC MOVZ W9, 0x11
	0x034B9FF0 ADD X10, X10, 0xE47
	0x034B9FF4 MOVZ W11, 0x1F
	0x034B9FF8 MOVZ W13, 0x4
	0x034B9FFC ADD X0, X31, 0x0
	0x034BA000 STP X8, X9, [X31]
	0x034BA004 STP X10, X11, [X31 + 0x10]
	0x034BA008 STR W13, [X31 + 0x28]
	0x034BA00C STR D0, [X31 + 0x20]
	0x034BA010 STRB W31, [X31 + 0x2C]
	0x034BA014 BL 0x1C1729C
	0x034BA018 MOV X8, X0
	0x034BA01C STR X0, [X20 + 0xD0]
	0x034BA020 AND W0, W19, 0x1
	0x034BA024 BLR X8
	0x034BA028 LDP X20, X19, [X31 + 0x40]
	0x034BA02C LDR X30, [X31 + 0x30]
	0x034BA030 ADD X31, X31, 0x50
	0x034BA034 RET
	0x034BA038 STP X30, X21, [X31 - 0x20]!
	0x034BA03C STP X20, X19, [X31 + 0x10]
	0x034BA040 ADRP X21, 0xF24000
	0x034BA044 ADRP X20, 0xC78000
	0x034BA048 LDRB W8, [X21 + 0xD8]
	0x034BA04C LDR X20, [X20 + 0x328]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+4064]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43823104
	009 Move V0, [X12+1464]
	010 Move X8, -43671552
	011 Move X10, -43671552
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3627
	015 Move W11, 27
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4064], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Cowatching_RequestToPresent()

Disassembly:
	0x034BA050 MOV X19, X0
	0x034BA054 TBNZ X8, 0x0, 0x34BA078
	0x034BA058 ADRP X0, 0xC78000
	0x034BA05C LDR X0, [X0 + 0x328]
	0x034BA060 BL 0x1C16CF4
	0x034BA064 ADRP X0, 0xC61000
	0x034BA068 LDR X0, [X0 + 0x850]
	0x034BA06C BL 0x1C16CF4
	0x034BA070 MOVZ W8, 0x1
	0x034BA074 STRB W8, [X21 + 0xD8]
	0x034BA078 LDR X0, [X20]
	0x034BA07C ADRP X20, 0xC61000
	0x034BA080 LDR W8, [X0 + 0xE0]
	0x034BA084 LDR X20, [X20 + 0x850]
	0x034BA088 CBNZ W8, 0x34BA090
	0x034BA08C BL 0x1C16DFC
	0x034BA090 MOV X0, X19
	0x034BA094 BL 0x34B404C
	0x034BA098 MOV X19, X0
	0x034BA09C BL 0x34BA0D4
	0x034BA0A0 LDR X8, [X20]
	0x034BA0A4 MOV X20, X0
	0x034BA0A8 LDR W9, [X8 + 0xE0]
	0x034BA0AC CBNZ W9, 0x34BA0B8
	0x034BA0B0 MOV X0, X8
	0x034BA0B4 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF24000
	005 Move X8, [X19+4072]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43827200
	009 Move V0, [X12+1464]
	010 Move X8, -43671552
	011 Move X10, -43655168
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3302
	015 Move W11, 31
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4072], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Cowatching_ResignFromPresenting()

Disassembly:
	0x034BA0B8 MOV X0, X19
	0x034BA0BC MOV X1, X31
	0x034BA0C0 BL 0x32C1060
	0x034BA0C4 MOV X0, X20
	0x034BA0C8 LDP X20, X19, [X31 + 0x10]
	0x034BA0CC LDP X30, X21, [X31], #0x20
	0x034BA0D0 RET
	0x034BA0D4 SUB X31, X31, 0x50
	0x034BA0D8 STR X30, [X31 + 0x30]
	0x034BA0DC STP X20, X19, [X31 + 0x40]
	0x034BA0E0 ADRP X20, 0xF24000
	0x034BA0E4 LDR X8, [X20 + 0xE0]
	0x034BA0E8 MOV X19, X0
	0x034BA0EC CBNZ X8, 0x34BA138
	0x034BA0F0 ADRP X12, 0xFFFFFFFFFD633000
	0x034BA0F4 LDR V0, [X12 + 0x5B8]
	0x034BA0F8 ADRP X8, 0xFFFFFFFFFD659000
	0x034BA0FC ADRP X10, 0xFFFFFFFFFD66D000
	0x034BA100 ADD X8, X8, 0xDD2
	0x034BA104 MOVZ W9, 0x11
	0x034BA108 ADD X10, X10, 0xC3D
	0x034BA10C MOVZ W11, 0x21
	0x034BA110 MOVZ W13, 0x8
	0x034BA114 ADD X0, X31, 0x0
	0x034BA118 STP X8, X9, [X31]
	0x034BA11C STP X10, X11, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF24000
	005 Move X8, [X19+4080]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43827200
	009 Move V0, [X12+1464]
	010 Move X8, -43671552
	011 Move X10, -43806720
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1638
	015 Move W11, 35
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+4080], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Cowatching_SetPresenterData(System.String video_title, System.String presenter_data)

Disassembly:
	0x034BA120 STR W13, [X31 + 0x28]
	0x034BA124 STR D0, [X31 + 0x20]
	0x034BA128 STRB W31, [X31 + 0x2C]
	0x034BA12C BL 0x1C1729C
	0x034BA130 MOV X8, X0
	0x034BA134 STR X0, [X20 + 0xE0]
	0x034BA138 MOV X0, X19
	0x034BA13C BLR X8
	0x034BA140 LDP X20, X19, [X31 + 0x40]
	0x034BA144 LDR X30, [X31 + 0x30]
	0x034BA148 ADD X31, X31, 0x50
	0x034BA14C RET
	0x034BA150 STP X30, X21, [X31 - 0x20]!
	0x034BA154 STP X20, X19, [X31 + 0x10]
	0x034BA158 ADRP X21, 0xF24000
	0x034BA15C ADRP X20, 0xC78000
	0x034BA160 LDRB W8, [X21 + 0xE8]
	0x034BA164 LDR X20, [X20 + 0x328]
	0x034BA168 MOV X19, X0
	0x034BA16C TBNZ X8, 0x0, 0x34BA190
	0x034BA170 ADRP X0, 0xC78000
	0x034BA174 LDR X0, [X0 + 0x328]
	0x034BA178 BL 0x1C16CF4
	0x034BA17C ADRP X0, 0xC61000
	0x034BA180 LDR X0, [X0 + 0x850]
	0x034BA184 BL 0x1C16CF4
	0x034BA188 MOVZ W8, 0x1
	0x034BA18C STRB W8, [X21 + 0xE8]
	0x034BA190 LDR X0, [X20]
	0x034BA194 ADRP X20, 0xC61000
	0x034BA198 LDR W8, [X0 + 0xE0]
	0x034BA19C LDR X20, [X20 + 0x850]
	0x034BA1A0 CBNZ W8, 0x34BA1A8
	0x034BA1A4 BL 0x1C16DFC
	0x034BA1A8 MOV X0, X19
	0x034BA1AC BL 0x34B404C
	0x034BA1B0 MOV X19, X0
	0x034BA1B4 BL 0x34BA1EC
	0x034BA1B8 LDR X8, [X20]
	0x034BA1BC MOV X20, X0
	0x034BA1C0 LDR W9, [X8 + 0xE0]
	0x034BA1C4 CBNZ W9, 0x34BA1D0
	0x034BA1C8 MOV X0, X8
	0x034BA1CC BL 0x1C16DFC
	0x034BA1D0 MOV X0, X19
	0x034BA1D4 MOV X1, X31
	0x034BA1D8 BL 0x32C1060
	0x034BA1DC MOV X0, X20
	0x034BA1E0 LDP X20, X19, [X31 + 0x10]
	0x034BA1E4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF24000
	007 Move X21, 0xC79000
	008 Move W8, [X22+4088]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC79000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC62000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4088], W8
	024 Move X0, [X21]
	025 Move X21, 0xC62000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Call CAPI.StringToNative, X0
	036 Move X19, X0
	037 Move X0, X20
	038 Move X1, X19
	039 Call CAPI.ovr_Cowatching_SetPresenterData_Native, X0, X1
	040 Move X8, [X21]
	041 Move X21, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Marshal.FreeCoTaskMem, X0
	050 Move X0, X19
	051 Move X1, X31
	052 Call Marshal.FreeCoTaskMem, X0
	053 Move X0, X21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0

Method: System.UInt64 ovr_Cowatching_SetPresenterData_Native(System.IntPtr video_title, System.IntPtr presenter_data)

Disassembly:
	0x034BA1E8 RET
	0x034BA1EC SUB X31, X31, 0x50
	0x034BA1F0 STR X30, [X31 + 0x30]
	0x034BA1F4 STP X20, X19, [X31 + 0x40]
	0x034BA1F8 ADRP X20, 0xF24000
	0x034BA1FC LDR X8, [X20 + 0xF0]
	0x034BA200 MOV X19, X0
	0x034BA204 CBNZ X8, 0x34BA250
	0x034BA208 ADRP X12, 0xFFFFFFFFFD633000
	0x034BA20C LDR V0, [X12 + 0x5B8]
	0x034BA210 ADRP X8, 0xFFFFFFFFFD659000
	0x034BA214 ADRP X10, 0xFFFFFFFFFD65F000
	0x034BA218 ADD X8, X8, 0xDD2
	0x034BA21C MOVZ W9, 0x11
	0x034BA220 ADD X10, X10, 0xD4A
	0x034BA224 MOVZ W11, 0x21
	0x034BA228 MOVZ W13, 0x8
	0x034BA22C ADD X0, X31, 0x0
	0x034BA230 STP X8, X9, [X31]
	0x034BA234 STP X10, X11, [X31 + 0x10]
	0x034BA238 STR W13, [X31 + 0x28]
	0x034BA23C STR D0, [X31 + 0x20]
	0x034BA240 STRB W31, [X31 + 0x2C]
	0x034BA244 BL 0x1C1729C
	0x034BA248 MOV X8, X0
	0x034BA24C STR X0, [X20 + 0xF0]
	0x034BA250 MOV X0, X19
	0x034BA254 BLR X8
	0x034BA258 LDP X20, X19, [X31 + 0x40]
	0x034BA25C LDR X30, [X31 + 0x30]
	0x034BA260 ADD X31, X31, 0x50
	0x034BA264 RET
	0x034BA268 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF25000
	007 Move X8, [X21]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43827200
	013 Move V0, [X12+1464]
	014 Move X8, -43671552
	015 Move X10, -43798528
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1411
	019 Move W11, 31
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Cowatching_SetViewerData(System.String viewer_data)

Disassembly:
	0x034BA26C STP X20, X19, [X31 + 0x10]
	0x034BA270 ADRP X21, 0xF24000
	0x034BA274 ADRP X20, 0xC78000
	0x034BA278 LDRB W8, [X21 + 0xF8]
	0x034BA27C LDR X20, [X20 + 0x328]
	0x034BA280 MOV X19, X0
	0x034BA284 TBNZ X8, 0x0, 0x34BA2A8
	0x034BA288 ADRP X0, 0xC78000
	0x034BA28C LDR X0, [X0 + 0x328]
	0x034BA290 BL 0x1C16CF4
	0x034BA294 ADRP X0, 0xC61000
	0x034BA298 LDR X0, [X0 + 0x850]
	0x034BA29C BL 0x1C16CF4
	0x034BA2A0 MOVZ W8, 0x1
	0x034BA2A4 STRB W8, [X21 + 0xF8]
	0x034BA2A8 LDR X0, [X20]
	0x034BA2AC ADRP X20, 0xC61000
	0x034BA2B0 LDR W8, [X0 + 0xE0]
	0x034BA2B4 LDR X20, [X20 + 0x850]
	0x034BA2B8 CBNZ W8, 0x34BA2C0
	0x034BA2BC BL 0x1C16DFC
	0x034BA2C0 MOV X0, X19
	0x034BA2C4 BL 0x34B404C
	0x034BA2C8 MOV X19, X0
	0x034BA2CC BL 0x34BA304
	0x034BA2D0 LDR X8, [X20]
	0x034BA2D4 MOV X20, X0
	0x034BA2D8 LDR W9, [X8 + 0xE0]
	0x034BA2DC CBNZ W9, 0x34BA2E8
	0x034BA2E0 MOV X0, X8
	0x034BA2E4 BL 0x1C16DFC
	0x034BA2E8 MOV X0, X19
	0x034BA2EC MOV X1, X31
	0x034BA2F0 BL 0x32C1060
	0x034BA2F4 MOV X0, X20
	0x034BA2F8 LDP X20, X19, [X31 + 0x10]
	0x034BA2FC LDP X30, X21, [X31], #0x20
	0x034BA300 RET
	0x034BA304 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF25000
	006 Move X20, 0xC79000
	007 Move W8, [X21+8]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC79000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC62000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+8], W8
	022 Move X0, [X20]
	023 Move X20, 0xC62000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_Cowatching_SetViewerData_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_Cowatching_SetViewerData_Native(System.IntPtr viewer_data)

Disassembly:
	0x034BA308 STR X30, [X31 + 0x30]
	0x034BA30C STP X20, X19, [X31 + 0x40]
	0x034BA310 ADRP X20, 0xF24000
	0x034BA314 LDR X8, [X20 + 0x100]
	0x034BA318 MOV X19, X0
	0x034BA31C CBNZ X8, 0x34BA368
	0x034BA320 ADRP X12, 0xFFFFFFFFFD633000
	0x034BA324 LDR V0, [X12 + 0x5B8]
	0x034BA328 ADRP X8, 0xFFFFFFFFFD659000
	0x034BA32C ADRP X10, 0xFFFFFFFFFD644000
	0x034BA330 ADD X8, X8, 0xDD2
	0x034BA334 MOVZ W9, 0x11
	0x034BA338 ADD X10, X10, 0x3DA
	0x034BA33C MOVZ W11, 0xC
	0x034BA340 MOVZ W13, 0x8
	0x034BA344 ADD X0, X31, 0x0
	0x034BA348 STP X8, X9, [X31]
	0x034BA34C STP X10, X11, [X31 + 0x10]
	0x034BA350 STR W13, [X31 + 0x28]
	0x034BA354 STR D0, [X31 + 0x20]
	0x034BA358 STRB W31, [X31 + 0x2C]
	0x034BA35C BL 0x1C1729C
	0x034BA360 MOV X8, X0
	0x034BA364 STR X0, [X20 + 0x100]
	0x034BA368 MOV X0, X19
	0x034BA36C BLR X8
	0x034BA370 LDP X20, X19, [X31 + 0x40]
	0x034BA374 LDR X30, [X31 + 0x30]
	0x034BA378 ADD X31, X31, 0x50
	0x034BA37C RET
	0x034BA380 STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+16]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43683840
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1007
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+16], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_DeviceApplicationIntegrity_GetAttestationToken(System.String challenge_nonce)

Disassembly:
	0x034BA384 STP X22, X21, [X31 + 0x10]
	0x034BA388 STP X20, X19, [X31 + 0x20]
	0x034BA38C ADRP X22, 0xF24000
	0x034BA390 ADRP X21, 0xC78000
	0x034BA394 LDRB W8, [X22 + 0x108]
	0x034BA398 LDR X21, [X21 + 0x328]
	0x034BA39C MOV X19, X1
	0x034BA3A0 MOV X20, X0
	0x034BA3A4 TBNZ X8, 0x0, 0x34BA3C8
	0x034BA3A8 ADRP X0, 0xC78000
	0x034BA3AC LDR X0, [X0 + 0x328]
	0x034BA3B0 BL 0x1C16CF4
	0x034BA3B4 ADRP X0, 0xC61000
	0x034BA3B8 LDR X0, [X0 + 0x850]
	0x034BA3BC BL 0x1C16CF4
	0x034BA3C0 MOVZ W8, 0x1
	0x034BA3C4 STRB W8, [X22 + 0x108]
	0x034BA3C8 LDR X0, [X21]
	0x034BA3CC ADRP X21, 0xC61000
	0x034BA3D0 LDR W8, [X0 + 0xE0]
	0x034BA3D4 LDR X21, [X21 + 0x850]
	0x034BA3D8 CBNZ W8, 0x34BA3E0
	0x034BA3DC BL 0x1C16DFC
	0x034BA3E0 MOV X0, X20
	0x034BA3E4 BL 0x34B404C
	0x034BA3E8 MOV X20, X0
	0x034BA3EC MOV X0, X19
	0x034BA3F0 BL 0x34B404C
	0x034BA3F4 MOV X19, X0
	0x034BA3F8 MOV X0, X20
	0x034BA3FC MOV X1, X19
	0x034BA400 BL 0x34BA448
	0x034BA404 LDR X8, [X21]
	0x034BA408 MOV X21, X0
	0x034BA40C LDR W9, [X8 + 0xE0]
	0x034BA410 CBNZ W9, 0x34BA41C
	0x034BA414 MOV X0, X8
	0x034BA418 BL 0x1C16DFC
	0x034BA41C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF25000
	006 Move X20, 0xC79000
	007 Move W8, [X21+24]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC79000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC62000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+24], W8
	022 Move X0, [X20]
	023 Move X20, 0xC62000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_DeviceApplicationIntegrity_GetAttestationToken_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_DeviceApplicationIntegrity_GetAttestationToken_Native(System.IntPtr challenge_nonce)

Disassembly:
	0x034BA420 MOV X1, X31
	0x034BA424 BL 0x32C1060
	0x034BA428 MOV X0, X19
	0x034BA42C MOV X1, X31
	0x034BA430 BL 0x32C1060
	0x034BA434 MOV X0, X21
	0x034BA438 LDP X20, X19, [X31 + 0x20]
	0x034BA43C LDP X22, X21, [X31 + 0x10]
	0x034BA440 LDR X30, [X31], #0x30
	0x034BA444 RET
	0x034BA448 SUB X31, X31, 0x50
	0x034BA44C STP X30, X21, [X31 + 0x30]
	0x034BA450 STP X20, X19, [X31 + 0x40]
	0x034BA454 ADRP X21, 0xF24000
	0x034BA458 LDR X8, [X21 + 0x110]
	0x034BA45C MOV X19, X1
	0x034BA460 MOV X20, X0
	0x034BA464 CBNZ X8, 0x34BA4B0
	0x034BA468 ADRP X12, 0xFFFFFFFFFD633000
	0x034BA46C LDR V0, [X12 + 0x5B8]
	0x034BA470 ADRP X8, 0xFFFFFFFFFD659000
	0x034BA474 ADRP X10, 0xFFFFFFFFFD652000
	0x034BA478 ADD X8, X8, 0xDD2
	0x034BA47C MOVZ W9, 0x11
	0x034BA480 ADD X10, X10, 0x23D
	0x034BA484 MOVZ W11, 0x12
	0x034BA488 MOVZ W13, 0x10
	0x034BA48C ADD X0, X31, 0x0
	0x034BA490 STP X8, X9, [X31]
	0x034BA494 STP X10, X11, [X31 + 0x10]
	0x034BA498 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+32]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1546
	017 Move W11, 50
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+32], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_DeviceApplicationIntegrity_GetIntegrityToken(System.String challenge_nonce)

Disassembly:
	0x034BA49C STR D0, [X31 + 0x20]
	0x034BA4A0 STRB W31, [X31 + 0x2C]
	0x034BA4A4 BL 0x1C1729C
	0x034BA4A8 MOV X8, X0
	0x034BA4AC STR X0, [X21 + 0x110]
	0x034BA4B0 MOV X0, X20
	0x034BA4B4 MOV X1, X19
	0x034BA4B8 BLR X8
	0x034BA4BC LDP X20, X19, [X31 + 0x40]
	0x034BA4C0 LDP X30, X21, [X31 + 0x30]
	0x034BA4C4 ADD X31, X31, 0x50
	0x034BA4C8 RET
	0x034BA4CC STP X30, X25, [X31 - 0x40]!
	0x034BA4D0 STP X24, X23, [X31 + 0x10]
	0x034BA4D4 STP X22, X21, [X31 + 0x20]
	0x034BA4D8 STP X20, X19, [X31 + 0x30]
	0x034BA4DC ADRP X24, 0xF24000
	0x034BA4E0 ADRP X25, 0xC78000
	0x034BA4E4 LDRB W8, [X24 + 0x118]
	0x034BA4E8 LDR X25, [X25 + 0x328]
	0x034BA4EC MOV X19, X4
	0x034BA4F0 MOV X23, X3
	0x034BA4F4 MOV X22, X2
	0x034BA4F8 MOV X21, X1
	0x034BA4FC MOV X20, X0
	0x034BA500 TBNZ X8, 0x0, 0x34BA524
	0x034BA504 ADRP X0, 0xC78000
	0x034BA508 LDR X0, [X0 + 0x328]
	0x034BA50C BL 0x1C16CF4
	0x034BA510 ADRP X0, 0xC61000
	0x034BA514 LDR X0, [X0 + 0x850]
	0x034BA518 BL 0x1C16CF4
	0x034BA51C MOVZ W8, 0x1
	0x034BA520 STRB W8, [X24 + 0x118]
	0x034BA524 LDR X0, [X25]
	0x034BA528 LDR W8, [X0 + 0xE0]
	0x034BA52C CBNZ W8, 0x34BA534
	0x034BA530 BL 0x1C16DFC
	0x034BA534 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF25000
	006 Move X20, 0xC79000
	007 Move W8, [X21+40]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC79000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC62000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+40], W8
	022 Move X0, [X20]
	023 Move X20, 0xC62000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native(System.IntPtr challenge_nonce)

Disassembly:
	0x034BA538 BL 0x34B404C
	0x034BA53C MOV X20, X0
	0x034BA540 MOV X0, X21
	0x034BA544 BL 0x34B404C
	0x034BA548 MOV X21, X0
	0x034BA54C MOV X0, X22
	0x034BA550 BL 0x34B404C
	0x034BA554 MOV X22, X0
	0x034BA558 MOV X0, X23
	0x034BA55C BL 0x34B404C
	0x034BA560 CBZ X19, 0x34BA5F8
	0x034BA564 MOV X23, X0
	0x034BA568 LDRSW X0, [X19 + 0x18]
	0x034BA56C ADRP X24, 0xC61000
	0x034BA570 LDR X24, [X24 + 0x850]
	0x034BA574 MOV X1, X31
	0x034BA578 BL 0x33D53B0
	0x034BA57C MOV X5, X0
	0x034BA580 MOV X0, X20
	0x034BA584 MOV X1, X21
	0x034BA588 MOV X2, X22
	0x034BA58C MOV X3, X23
	0x034BA590 MOV X4, X19
	0x034BA594 BL 0x34BA5FC
	0x034BA598 LDR X8, [X24]
	0x034BA59C MOV X19, X0
	0x034BA5A0 LDR W9, [X8 + 0xE0]
	0x034BA5A4 CBNZ W9, 0x34BA5B0
	0x034BA5A8 MOV X0, X8
	0x034BA5AC BL 0x1C16DFC
	0x034BA5B0 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+48]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43741184
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 560
	017 Move W11, 48
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+48], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Entitlement_GetIsViewerEntitled()

Disassembly:
	0x034BA5B4 MOV X1, X31
	0x034BA5B8 BL 0x32C1060
	0x034BA5BC MOV X0, X21
	0x034BA5C0 MOV X1, X31
	0x034BA5C4 BL 0x32C1060
	0x034BA5C8 MOV X0, X22
	0x034BA5CC MOV X1, X31
	0x034BA5D0 BL 0x32C1060
	0x034BA5D4 MOV X0, X23
	0x034BA5D8 MOV X1, X31
	0x034BA5DC BL 0x32C1060
	0x034BA5E0 MOV X0, X19
	0x034BA5E4 LDP X20, X19, [X31 + 0x30]
	0x034BA5E8 LDP X22, X21, [X31 + 0x20]
	0x034BA5EC LDP X24, X23, [X31 + 0x10]
	0x034BA5F0 LDP X30, X25, [X31], #0x40
	0x034BA5F4 RET
	0x034BA5F8 BL 0x1C16F20
	0x034BA5FC SUB X31, X31, 0xB0
	0x034BA600 STR D8, [X31 + 0x40]
	0x034BA604 STP X29, X30, [X31 + 0x50]
	0x034BA608 STP X28, X27, [X31 + 0x60]
	0x034BA60C STP X26, X25, [X31 + 0x70]
	0x034BA610 STP X24, X23, [X31 + 0x80]
	0x034BA614 STP X22, X21, [X31 + 0x90]
	0x034BA618 STP X20, X19, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+56]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43827200
	009 Move V0, [X12+1464]
	010 Move X8, -43671552
	011 Move X10, -43634688
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 314
	015 Move W11, 35
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+56], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_GraphAPI_Get(System.String url)

Disassembly:
	0x034BA61C ADRP X27, 0xF24000
	0x034BA620 LDR X8, [X27 + 0x120]
	0x034BA624 MOV X20, X5
	0x034BA628 MOV X19, X4
	0x034BA62C MOV X22, X3
	0x034BA630 MOV X23, X2
	0x034BA634 MOV X24, X1
	0x034BA638 MOV X25, X0
	0x034BA63C CBZ X8, 0x34BA6F0
	0x034BA640 CBZ X19, 0x34BA73C
	0x034BA644 LDR X26, [X19 + 0x18]
	0x034BA648 ADD X8, X26, X26, 0x2, LSL
	0x034BA64C UBFM X0, X8, 0x3D, 0x3C
	0x034BA650 BL 0x1C16F14
	0x034BA654 CMP W26, 0x1
	0x034BA658 MOV X21, X0
	0x034BA65C B.LT 0x34BA760
	0x034BA660 AND X8, X26, 0x0
	0x034BA664 UBFM X8, X8, 0x3E, 0x3D
	0x034BA668 ADD X8, X8, W26, UXTW
	0x034BA66C MOV X28, X31
	0x034BA670 UBFM X29, X8, 0x3D, 0x3C
	0x034BA674 STR X22, [X31 + 0x8]
	0x034BA678 STR X20, [X31 + 0x48]
	0x034BA67C ADD X8, X19, X28
	0x034BA680 LDR X0, [X8 + 0x20]
	0x034BA684 LDR W27, [X8 + 0x28]
	0x034BA688 LDR X26, [X8 + 0x30]
	0x034BA68C LDR W20, [X8 + 0x38]
	0x034BA690 LDR V8, [X8 + 0x40]
	0x034BA694 BL 0x1C1727C
	0x034BA698 ADD X22, X21, X28
	0x034BA69C STR X0, [X22]
	0x034BA6A0 MOV X0, X26
	0x034BA6A4 STR W27, [X22 + 0x8]
	0x034BA6A8 BL 0x1C1727C
	0x034BA6AC ADD X28, X28, 0x28
	0x034BA6B0 CMP X29, X28
	0x034BA6B4 STR X0, [X22 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF25000
	006 Move X20, 0xC79000
	007 Move W8, [X21+64]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC79000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC62000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+64], W8
	022 Move X0, [X20]
	023 Move X20, 0xC62000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_GraphAPI_Get_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_GraphAPI_Get_Native(System.IntPtr url)

Disassembly:
	0x034BA6B8 STR W20, [X22 + 0x18]
	0x034BA6BC STR D8, [X22 + 0x20]
	0x034BA6C0 B.NE 0x34BA67C
	0x034BA6C4 ADRP X8, 0xF24000
	0x034BA6C8 LDR X8, [X8 + 0x120]
	0x034BA6CC LDR X3, [X31 + 0x8]
	0x034BA6D0 LDR X5, [X31 + 0x48]
	0x034BA6D4 MOV X0, X25
	0x034BA6D8 MOV X1, X24
	0x034BA6DC MOV X2, X23
	0x034BA6E0 MOV X4, X21
	0x034BA6E4 BLR X8
	0x034BA6E8 MOV X20, X0
	0x034BA6EC B 0x34BA788
	0x034BA6F0 ADRP X12, 0xFFFFFFFFFD633000
	0x034BA6F4 LDR V0, [X12 + 0x5B8]
	0x034BA6F8 ADRP X8, 0xFFFFFFFFFD659000
	0x034BA6FC ADRP X10, 0xFFFFFFFFFD63A000
	0x034BA700 ADD X8, X8, 0xDD2
	0x034BA704 MOVZ W9, 0x11
	0x034BA708 ADD X10, X10, 0x5A3
	0x034BA70C MOVZ W11, 0x16
	0x034BA710 MOVZ W13, 0x30
	0x034BA714 ADD X0, X31, 0x10
	0x034BA718 STP X8, X9, [X31 + 0x10]
	0x034BA71C STP X10, X11, [X31 + 0x20]
	0x034BA720 STR W13, [X31 + 0x38]
	0x034BA724 STR D0, [X31 + 0x30]
	0x034BA728 STRB W31, [X31 + 0x3C]
	0x034BA72C BL 0x1C1729C
	0x034BA730 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+72]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43581440
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3324
	017 Move W11, 16
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+72], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GraphAPI_Post(System.String url)

Disassembly:
	0x034BA734 STR X0, [X27 + 0x120]
	0x034BA738 CBNZ X19, 0x34BA644
	0x034BA73C MOV X0, X25
	0x034BA740 MOV X1, X24
	0x034BA744 MOV X2, X23
	0x034BA748 MOV X3, X22
	0x034BA74C MOV X4, X31
	0x034BA750 MOV X5, X20
	0x034BA754 BLR X8
	0x034BA758 MOV X20, X0
	0x034BA75C B 0x34BA7C4
	0x034BA760 LDR X8, [X27 + 0x120]
	0x034BA764 MOV X0, X25
	0x034BA768 MOV X1, X24
	0x034BA76C MOV X2, X23
	0x034BA770 MOV X3, X22
	0x034BA774 MOV X4, X21
	0x034BA778 MOV X5, X20
	0x034BA77C BLR X8
	0x034BA780 MOV X20, X0
	0x034BA784 CBZ X21, 0x34BA7C4
	0x034BA788 LDR X8, [X19 + 0x18]
	0x034BA78C CMP W8, 0x1
	0x034BA790 B.LT 0x34BA7BC
	0x034BA794 AND X19, X8, 0x0
	0x034BA798 ADD X22, X21, 0x10
	0x034BA79C LDUR X0, [X22 - 0x10]
	0x034BA7A0 BL 0x1C17290
	0x034BA7A4 LDR X0, [X22]
	0x034BA7A8 STUR X31, [X22 - 0x10]
	0x034BA7AC BL 0x1C17290
	0x034BA7B0 STR X31, [X22], #0x28
	0x034BA7B4 SUBS X19, X19, 0x1
	0x034BA7B8 B.NE 0x34BA79C
	0x034BA7BC MOV X0, X21
	0x034BA7C0 BL 0x1C17290
	0x034BA7C4 MOV X0, X20
	0x034BA7C8 LDP X20, X19, [X31 + 0xA0]
	0x034BA7CC LDP X22, X21, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF25000
	006 Move X20, 0xC79000
	007 Move W8, [X21+80]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC79000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC62000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+80], W8
	022 Move X0, [X20]
	023 Move X20, 0xC62000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_GraphAPI_Post_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_GraphAPI_Post_Native(System.IntPtr url)

Disassembly:
	0x034BA7D0 LDP X24, X23, [X31 + 0x80]
	0x034BA7D4 LDP X26, X25, [X31 + 0x70]
	0x034BA7D8 LDP X28, X27, [X31 + 0x60]
	0x034BA7DC LDP X29, X30, [X31 + 0x50]
	0x034BA7E0 LDR V8, [X31 + 0x40]
	0x034BA7E4 ADD X31, X31, 0xB0
	0x034BA7E8 RET
	0x034BA7EC STP X30, X21, [X31 - 0x20]!
	0x034BA7F0 STP X20, X19, [X31 + 0x10]
	0x034BA7F4 ADRP X21, 0xF24000
	0x034BA7F8 ADRP X20, 0xC78000
	0x034BA7FC LDRB W8, [X21 + 0x128]
	0x034BA800 LDR X20, [X20 + 0x328]
	0x034BA804 MOV X19, X0
	0x034BA808 TBNZ X8, 0x0, 0x34BA82C
	0x034BA80C ADRP X0, 0xC78000
	0x034BA810 LDR X0, [X0 + 0x328]
	0x034BA814 BL 0x1C16CF4
	0x034BA818 ADRP X0, 0xC61000
	0x034BA81C LDR X0, [X0 + 0x850]
	0x034BA820 BL 0x1C16CF4
	0x034BA824 MOVZ W8, 0x1
	0x034BA828 STRB W8, [X21 + 0x128]
	0x034BA82C LDR X0, [X20]
	0x034BA830 ADRP X20, 0xC61000
	0x034BA834 LDR W8, [X0 + 0xE0]
	0x034BA838 LDR X20, [X20 + 0x850]
	0x034BA83C CBNZ W8, 0x34BA844
	0x034BA840 BL 0x1C16DFC
	0x034BA844 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+88]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X11, -43827200
	011 Move V0, [X11+1464]
	012 Move X8, -43671552
	013 Move X10, -43630592
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3688
	017 Move W12, 8
	018 Add X0, X31, 0
	019 Move [X31], X8
	020 Move [X31+8], X9
	021 Move [X31+16], X10
	022 Move [X31+24], X9
	023 Move [X31+40], W12
	024 Move [X31+32], D0
	025 Move [X31+44], W31
	026 Call 0x1C1829C
	027 Move X8, X0
	028 Move [X20+88], X0
	029 Move X0, X19
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Move X30, [X31+48]
	034 Add X31, X31, 80
	035 Return X0

Method: System.UInt64 ovr_GroupPresence_Clear()

Disassembly:
	0x034BA848 BL 0x34B404C
	0x034BA84C MOV X19, X0
	0x034BA850 BL 0x34BA888
	0x034BA854 LDR X8, [X20]
	0x034BA858 MOV X20, X0
	0x034BA85C LDR W9, [X8 + 0xE0]
	0x034BA860 CBNZ W9, 0x34BA86C
	0x034BA864 MOV X0, X8
	0x034BA868 BL 0x1C16DFC
	0x034BA86C MOV X0, X19
	0x034BA870 MOV X1, X31
	0x034BA874 BL 0x32C1060
	0x034BA878 MOV X0, X20
	0x034BA87C LDP X20, X19, [X31 + 0x10]
	0x034BA880 LDP X30, X21, [X31], #0x20
	0x034BA884 RET
	0x034BA888 SUB X31, X31, 0x50
	0x034BA88C STR X30, [X31 + 0x30]
	0x034BA890 STP X20, X19, [X31 + 0x40]
	0x034BA894 ADRP X20, 0xF24000
	0x034BA898 LDR X8, [X20 + 0x130]
	0x034BA89C MOV X19, X0
	0x034BA8A0 CBNZ X8, 0x34BA8EC
	0x034BA8A4 ADRP X12, 0xFFFFFFFFFD633000
	0x034BA8A8 LDR V0, [X12 + 0x5B8]
	0x034BA8AC ADRP X8, 0xFFFFFFFFFD659000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+96]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43827200
	009 Move V0, [X12+1464]
	010 Move X8, -43671552
	011 Move X10, -43593728
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 642
	015 Move W11, 23
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+96], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_GroupPresence_GetInvitableUsers(System.IntPtr options)

Disassembly:
	0x034BA8B0 ADRP X10, 0xFFFFFFFFFD658000
	0x034BA8B4 ADD X8, X8, 0xDD2
	0x034BA8B8 MOVZ W9, 0x11
	0x034BA8BC ADD X10, X10, 0x1A
	0x034BA8C0 MOVZ W11, 0xD
	0x034BA8C4 MOVZ W13, 0x8
	0x034BA8C8 ADD X0, X31, 0x0
	0x034BA8CC STP X8, X9, [X31]
	0x034BA8D0 STP X10, X11, [X31 + 0x10]
	0x034BA8D4 STR W13, [X31 + 0x28]
	0x034BA8D8 STR D0, [X31 + 0x20]
	0x034BA8DC STRB W31, [X31 + 0x2C]
	0x034BA8E0 BL 0x1C1729C
	0x034BA8E4 MOV X8, X0
	0x034BA8E8 STR X0, [X20 + 0x130]
	0x034BA8EC MOV X0, X19
	0x034BA8F0 BLR X8
	0x034BA8F4 LDP X20, X19, [X31 + 0x40]
	0x034BA8F8 LDR X30, [X31 + 0x30]
	0x034BA8FC ADD X31, X31, 0x50
	0x034BA900 RET
	0x034BA904 STP X30, X21, [X31 - 0x20]!
	0x034BA908 STP X20, X19, [X31 + 0x10]
	0x034BA90C ADRP X21, 0xF24000
	0x034BA910 ADRP X20, 0xC78000
	0x034BA914 LDRB W8, [X21 + 0x138]
	0x034BA918 LDR X20, [X20 + 0x328]
	0x034BA91C MOV X19, X0
	0x034BA920 TBNZ X8, 0x0, 0x34BA944
	0x034BA924 ADRP X0, 0xC78000
	0x034BA928 LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+104]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43757568
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 950
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+104], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GroupPresence_GetSentInvites()

Disassembly:
	0x034BA92C BL 0x1C16CF4
	0x034BA930 ADRP X0, 0xC61000
	0x034BA934 LDR X0, [X0 + 0x850]
	0x034BA938 BL 0x1C16CF4
	0x034BA93C MOVZ W8, 0x1
	0x034BA940 STRB W8, [X21 + 0x138]
	0x034BA944 LDR X0, [X20]
	0x034BA948 ADRP X20, 0xC61000
	0x034BA94C LDR W8, [X0 + 0xE0]
	0x034BA950 LDR X20, [X20 + 0x850]
	0x034BA954 CBNZ W8, 0x34BA95C
	0x034BA958 BL 0x1C16DFC
	0x034BA95C MOV X0, X19
	0x034BA960 BL 0x34B404C
	0x034BA964 MOV X19, X0
	0x034BA968 BL 0x34BA9A0
	0x034BA96C LDR X8, [X20]
	0x034BA970 MOV X20, X0
	0x034BA974 LDR W9, [X8 + 0xE0]
	0x034BA978 CBNZ W9, 0x34BA984
	0x034BA97C MOV X0, X8
	0x034BA980 BL 0x1C16DFC
	0x034BA984 MOV X0, X19
	0x034BA988 MOV X1, X31
	0x034BA98C BL 0x32C1060
	0x034BA990 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF25000
	005 Move X8, [X19+112]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43827200
	009 Move V0, [X12+1464]
	010 Move X8, -43671552
	011 Move X10, -43683840
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1036
	015 Move W11, 32
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+112], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_GroupPresence_LaunchInvitePanel(System.IntPtr options)

Disassembly:
	0x034BA994 LDP X20, X19, [X31 + 0x10]
	0x034BA998 LDP X30, X21, [X31], #0x20
	0x034BA99C RET
	0x034BA9A0 SUB X31, X31, 0x50
	0x034BA9A4 STR X30, [X31 + 0x30]
	0x034BA9A8 STP X20, X19, [X31 + 0x40]
	0x034BA9AC ADRP X20, 0xF24000
	0x034BA9B0 LDR X8, [X20 + 0x140]
	0x034BA9B4 MOV X19, X0
	0x034BA9B8 CBNZ X8, 0x34BAA04
	0x034BA9BC ADRP X12, 0xFFFFFFFFFD633000
	0x034BA9C0 LDR V0, [X12 + 0x5B8]
	0x034BA9C4 ADRP X8, 0xFFFFFFFFFD659000
	0x034BA9C8 ADRP X10, 0xFFFFFFFFFD666000
	0x034BA9CC ADD X8, X8, 0xDD2
	0x034BA9D0 MOVZ W9, 0x11
	0x034BA9D4 ADD X10, X10, 0x127
	0x034BA9D8 MOVZ W11, 0x17
	0x034BA9DC MOVZ W13, 0x8
	0x034BA9E0 ADD X0, X31, 0x0
	0x034BA9E4 STP X8, X9, [X31]
	0x034BA9E8 STP X10, X11, [X31 + 0x10]
	0x034BA9EC STR W13, [X31 + 0x28]
	0x034BA9F0 STR D0, [X31 + 0x20]
	0x034BA9F4 STRB W31, [X31 + 0x2C]
	0x034BA9F8 BL 0x1C1729C
	0x034BA9FC MOV X8, X0
	0x034BAA00 STR X0, [X20 + 0x140]
	0x034BAA04 MOV X0, X19
	0x034BAA08 BLR X8
	0x034BAA0C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+120]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43589632
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3097
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+120], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GroupPresence_LaunchMultiplayerErrorDialog(System.IntPtr options)

Disassembly:
	0x034BAA10 LDR X30, [X31 + 0x30]
	0x034BAA14 ADD X31, X31, 0x50
	0x034BAA18 RET
	0x034BAA1C SUB X31, X31, 0x70
	0x034BAA20 STP X30, X25, [X31 + 0x30]
	0x034BAA24 STP X24, X23, [X31 + 0x40]
	0x034BAA28 STP X22, X21, [X31 + 0x50]
	0x034BAA2C STP X20, X19, [X31 + 0x60]
	0x034BAA30 ADRP X22, 0xF24000
	0x034BAA34 LDR X8, [X22 + 0x148]
	0x034BAA38 MOV W19, W1
	0x034BAA3C MOV X20, X0
	0x034BAA40 CBZ X8, 0x34BAAD0
	0x034BAA44 CBZ X20, 0x34BAB1C
	0x034BAA48 LDR X23, [X20 + 0x18]
	0x034BAA4C UBFM X8, X23, 0x3D, 0x3C
	0x034BAA50 ADD X0, X8, 0x8
	0x034BAA54 BL 0x1C16F14
	0x034BAA58 MOV X21, X0
	0x034BAA5C CMP W23, 0x1
	0x034BAA60 STR X31, [X0, X23, LSL #3]
	0x034BAA64 B.LT 0x34BAA88
	0x034BAA68 AND X23, X23, 0x0
	0x034BAA6C ADD X24, X20, 0x20
	0x034BAA70 MOV X25, X21
	0x034BAA74 LDR X0, [X24], #0x8
	0x034BAA78 BL 0x1C1727C
	0x034BAA7C SUBS X23, X23, 0x1
	0x034BAA80 STR X0, [X25], #0x8
	0x034BAA84 B.NE 0x34BAA74
	0x034BAA88 LDR X8, [X22 + 0x148]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+128]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43790336
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1521
	017 Move W11, 46
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+128], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GroupPresence_LaunchRejoinDialog(System.String lobby_session_id, System.String match_session_id, System.String destination_api_name)

Disassembly:
	0x034BAA8C MOV X0, X21
	0x034BAA90 MOV W1, W19
	0x034BAA94 BLR X8
	0x034BAA98 LDR X8, [X20 + 0x18]
	0x034BAA9C MOV X19, X0
	0x034BAAA0 CMP W8, 0x1
	0x034BAAA4 B.LT 0x34BAAC4
	0x034BAAA8 AND X20, X8, 0x0
	0x034BAAAC MOV X22, X21
	0x034BAAB0 LDR X0, [X22]
	0x034BAAB4 BL 0x1C17290
	0x034BAAB8 SUBS X20, X20, 0x1
	0x034BAABC STR X31, [X22], #0x8
	0x034BAAC0 B.NE 0x34BAAB0
	0x034BAAC4 MOV X0, X21
	0x034BAAC8 BL 0x1C17290
	0x034BAACC B 0x34BAB2C
	0x034BAAD0 ADRP X12, 0xFFFFFFFFFD633000
	0x034BAAD4 LDR V0, [X12 + 0x5B8]
	0x034BAAD8 ADRP X8, 0xFFFFFFFFFD659000
	0x034BAADC ADRP X10, 0xFFFFFFFFFD668000
	0x034BAAE0 ADD X8, X8, 0xDD2
	0x034BAAE4 MOVZ W9, 0x11
	0x034BAAE8 ADD X10, X10, 0x32A
	0x034BAAEC MOVZ W11, 0x18
	0x034BAAF0 MOVZ W13, 0xC
	0x034BAAF4 ADD X0, X31, 0x0
	0x034BAAF8 STP X8, X9, [X31]
	0x034BAAFC STP X10, X11, [X31 + 0x10]
	0x034BAB00 STR W13, [X31 + 0x28]
	0x034BAB04 STR D0, [X31 + 0x20]
	0x034BAB08 STRB W31, [X31 + 0x2C]
	0x034BAB0C BL 0x1C1729C
	0x034BAB10 MOV X8, X0
	0x034BAB14 STR X0, [X22 + 0x148]
	0x034BAB18 CBNZ X20, 0x34BAA48
	0x034BAB1C MOV X0, X31
	0x034BAB20 MOV W1, W19
	0x034BAB24 BLR X8
	0x034BAB28 MOV X19, X0
	0x034BAB2C MOV X0, X19
	0x034BAB30 LDP X20, X19, [X31 + 0x60]
	0x034BAB34 LDP X22, X21, [X31 + 0x50]
	0x034BAB38 LDP X24, X23, [X31 + 0x40]
	0x034BAB3C LDP X30, X25, [X31 + 0x30]
	0x034BAB40 ADD X31, X31, 0x70
	0x034BAB44 RET
	0x034BAB48 SUB X31, X31, 0x40
	0x034BAB4C STP X30, X19, [X31 + 0x30]
	0x034BAB50 ADRP X19, 0xF24000
	0x034BAB54 LDR X8, [X19 + 0x150]
	0x034BAB58 CBNZ X8, 0x34BABA0
	0x034BAB5C ADRP X12, 0xFFFFFFFFFD633000
	0x034BAB60 LDR V0, [X12 + 0x5B8]
	0x034BAB64 ADRP X8, 0xFFFFFFFFFD659000
	0x034BAB68 ADRP X10, 0xFFFFFFFFFD666000
	0x034BAB6C ADD X8, X8, 0xDD2
	0x034BAB70 MOVZ W9, 0x11

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF25000
	008 Move X22, 0xC79000
	009 Move W8, [X23+136]
	010 Move X22, [X22+808]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC79000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0xC62000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+136], W8
	026 Move X0, [X22]
	027 Move X22, 0xC62000
	028 Move W8, [X0+224]
	029 Move X22, [X22+2128]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Call CAPI.StringToNative, X0
	035 Move X21, X0
	036 Move X0, X20
	037 Call CAPI.StringToNative, X0
	038 Move X20, X0
	039 Move X0, X19
	040 Call CAPI.StringToNative, X0
	041 Move X19, X0
	042 Move X0, X21
	043 Move X1, X20
	044 Move X2, X19
	045 Call CAPI.ovr_GroupPresence_LaunchRejoinDialog_Native, X0, X1, X2
	046 Move X8, [X22]
	047 Move X22, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X21
	054 Move X1, X31
	055 Call Marshal.FreeCoTaskMem, X0
	056 Move X0, X20
	057 Move X1, X31
	058 Call Marshal.FreeCoTaskMem, X0
	059 Move X0, X19
	060 Move X1, X31
	061 Call Marshal.FreeCoTaskMem, X0
	062 Move X0, X22
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return X0

Method: System.UInt64 ovr_GroupPresence_LaunchRejoinDialog_Native(System.IntPtr lobby_session_id, System.IntPtr match_session_id, System.IntPtr destination_api_name)

Disassembly:
	0x034BAB74 ADD X10, X10, 0x13F
	0x034BAB78 MOVZ W11, 0x1A
	0x034BAB7C ADD X0, X31, 0x0
	0x034BAB80 STR W31, [X31 + 0x28]
	0x034BAB84 STP X8, X9, [X31]
	0x034BAB88 STP X10, X11, [X31 + 0x10]
	0x034BAB8C STR D0, [X31 + 0x20]
	0x034BAB90 STRB W31, [X31 + 0x2C]
	0x034BAB94 BL 0x1C1729C
	0x034BAB98 MOV X8, X0
	0x034BAB9C STR X0, [X19 + 0x150]
	0x034BABA0 BLR X8
	0x034BABA4 LDP X30, X19, [X31 + 0x30]
	0x034BABA8 ADD X31, X31, 0x40
	0x034BABAC RET
	0x034BABB0 SUB X31, X31, 0x40
	0x034BABB4 STP X30, X19, [X31 + 0x30]
	0x034BABB8 ADRP X19, 0xF24000
	0x034BABBC LDR X8, [X19 + 0x158]
	0x034BABC0 CBNZ X8, 0x34BAC08
	0x034BABC4 ADRP X12, 0xFFFFFFFFFD633000
	0x034BABC8 LDR V0, [X12 + 0x5B8]
	0x034BABCC ADRP X8, 0xFFFFFFFFFD659000
	0x034BABD0 ADRP X10, 0xFFFFFFFFFD634000
	0x034BABD4 ADD X8, X8, 0xDD2
	0x034BABD8 MOVZ W9, 0x11
	0x034BABDC ADD X10, X10, 0x796
	0x034BABE0 MOVZ W11, 0x26
	0x034BABE4 ADD X0, X31, 0x0
	0x034BABE8 STR W31, [X31 + 0x28]
	0x034BABEC STP X8, X9, [X31]
	0x034BABF0 STP X10, X11, [X31 + 0x10]
	0x034BABF4 STR D0, [X31 + 0x20]
	0x034BABF8 STRB W31, [X31 + 0x2C]
	0x034BABFC BL 0x1C1729C
	0x034BAC00 MOV X8, X0
	0x034BAC04 STR X0, [X19 + 0x158]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF25000
	008 Move X8, [X22+144]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43827200
	015 Move V0, [X12+1464]
	016 Move X8, -43671552
	017 Move X10, -43708416
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1869
	021 Move W11, 36
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+144], X0
	034 Move X0, X21
	035 Move X1, X20
	036 Move X2, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 Add X31, X31, 96
	044 Return X0

Method: System.UInt64 ovr_GroupPresence_LaunchRosterPanel(System.IntPtr options)

Disassembly:
	0x034BAC08 BLR X8
	0x034BAC0C LDP X30, X19, [X31 + 0x30]
	0x034BAC10 ADD X31, X31, 0x40
	0x034BAC14 RET
	0x034BAC18 STP X30, X21, [X31 - 0x20]!
	0x034BAC1C STP X20, X19, [X31 + 0x10]
	0x034BAC20 ADRP X21, 0xF24000
	0x034BAC24 ADRP X20, 0xC78000
	0x034BAC28 LDRB W8, [X21 + 0x160]
	0x034BAC2C LDR X20, [X20 + 0x328]
	0x034BAC30 MOV X19, X0
	0x034BAC34 TBNZ X8, 0x0, 0x34BAC58
	0x034BAC38 ADRP X0, 0xC78000
	0x034BAC3C LDR X0, [X0 + 0x328]
	0x034BAC40 BL 0x1C16CF4
	0x034BAC44 ADRP X0, 0xC61000
	0x034BAC48 LDR X0, [X0 + 0x850]
	0x034BAC4C BL 0x1C16CF4
	0x034BAC50 MOVZ W8, 0x1
	0x034BAC54 STRB W8, [X21 + 0x160]
	0x034BAC58 LDR X0, [X20]
	0x034BAC5C ADRP X20, 0xC61000
	0x034BAC60 LDR W8, [X0 + 0xE0]
	0x034BAC64 LDR X20, [X20 + 0x850]
	0x034BAC68 CBNZ W8, 0x34BAC70
	0x034BAC6C BL 0x1C16DFC
	0x034BAC70 MOV X0, X19
	0x034BAC74 BL 0x34B404C
	0x034BAC78 MOV X19, X0
	0x034BAC7C BL 0x34BACB4
	0x034BAC80 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+152]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43663360
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3000
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+152], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GroupPresence_SendInvites(System.UInt64[] userIDs, System.UInt32 userIDLength)

Disassembly:
	0x034BAC84 MOV X20, X0
	0x034BAC88 LDR W9, [X8 + 0xE0]
	0x034BAC8C CBNZ W9, 0x34BAC98
	0x034BAC90 MOV X0, X8
	0x034BAC94 BL 0x1C16DFC
	0x034BAC98 MOV X0, X19
	0x034BAC9C MOV X1, X31
	0x034BACA0 BL 0x32C1060
	0x034BACA4 MOV X0, X20
	0x034BACA8 LDP X20, X19, [X31 + 0x10]
	0x034BACAC LDP X30, X21, [X31], #0x20
	0x034BACB0 RET
	0x034BACB4 SUB X31, X31, 0x50
	0x034BACB8 STR X30, [X31 + 0x30]
	0x034BACBC STP X20, X19, [X31 + 0x40]
	0x034BACC0 ADRP X20, 0xF24000
	0x034BACC4 LDR X8, [X20 + 0x168]
	0x034BACC8 MOV X19, X0
	0x034BACCC CBNZ X8, 0x34BAD18
	0x034BACD0 ADRP X12, 0xFFFFFFFFFD633000
	0x034BACD4 LDR V0, [X12 + 0x5B8]
	0x034BACD8 ADRP X8, 0xFFFFFFFFFD659000
	0x034BACDC ADRP X10, 0xFFFFFFFFFD64E000
	0x034BACE0 ADD X8, X8, 0xDD2
	0x034BACE4 MOVZ W9, 0x11
	0x034BACE8 ADD X10, X10, 0x47A
	0x034BACEC MOVZ W11, 0x1A
	0x034BACF0 MOVZ W13, 0x8
	0x034BACF4 ADD X0, X31, 0x0
	0x034BACF8 STP X8, X9, [X31]
	0x034BACFC STP X10, X11, [X31 + 0x10]
	0x034BAD00 STR W13, [X31 + 0x28]
	0x034BAD04 STR D0, [X31 + 0x20]
	0x034BAD08 STRB W31, [X31 + 0x2C]
	0x034BAD0C BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF25000
	007 Move X8, [X21+160]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43827200
	013 Move V0, [X12+1464]
	014 Move X8, -43671552
	015 Move X10, -43806720
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1674
	019 Move W11, 29
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+160], X0
	032 Add X9, X20, 32
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move W1, W19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X20, [X31+64]
	038 Move X19, [X31+72]
	039 Move X30, [X31+48]
	040 Move X21, [X31+56]
	041 Add X31, X31, 80
	042 Return X0

Method: System.UInt64 ovr_GroupPresence_Set(System.IntPtr groupPresenceOptions)

Disassembly:
	0x034BAD10 MOV X8, X0
	0x034BAD14 STR X0, [X20 + 0x168]
	0x034BAD18 MOV X0, X19
	0x034BAD1C BLR X8
	0x034BAD20 LDP X20, X19, [X31 + 0x40]
	0x034BAD24 LDR X30, [X31 + 0x30]
	0x034BAD28 ADD X31, X31, 0x50
	0x034BAD2C RET
	0x034BAD30 SUB X31, X31, 0x40
	0x034BAD34 STP X30, X19, [X31 + 0x30]
	0x034BAD38 ADRP X19, 0xF24000
	0x034BAD3C LDR X8, [X19 + 0x170]
	0x034BAD40 CBNZ X8, 0x34BAD88
	0x034BAD44 ADRP X12, 0xFFFFFFFFFD633000
	0x034BAD48 LDR V0, [X12 + 0x5B8]
	0x034BAD4C ADRP X8, 0xFFFFFFFFFD659000
	0x034BAD50 ADRP X10, 0xFFFFFFFFFD668000
	0x034BAD54 ADD X8, X8, 0xDD2
	0x034BAD58 MOVZ W9, 0x11
	0x034BAD5C ADD X10, X10, 0x343
	0x034BAD60 MOVZ W11, 0x1B
	0x034BAD64 ADD X0, X31, 0x0
	0x034BAD68 STR W31, [X31 + 0x28]
	0x034BAD6C STP X8, X9, [X31]
	0x034BAD70 STP X10, X11, [X31 + 0x10]
	0x034BAD74 STR D0, [X31 + 0x20]
	0x034BAD78 STRB W31, [X31 + 0x2C]
	0x034BAD7C BL 0x1C1729C
	0x034BAD80 MOV X8, X0
	0x034BAD84 STR X0, [X19 + 0x170]
	0x034BAD88 BLR X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+168]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43630592
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3706
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+168], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GroupPresence_SetDeeplinkMessageOverride(System.String deeplink_message)

Disassembly:
	0x034BAD8C LDP X30, X19, [X31 + 0x30]
	0x034BAD90 ADD X31, X31, 0x40
	0x034BAD94 RET
	0x034BAD98 STP X30, X21, [X31 - 0x20]!
	0x034BAD9C STP X20, X19, [X31 + 0x10]
	0x034BADA0 ADRP X21, 0xF24000
	0x034BADA4 ADRP X20, 0xC78000
	0x034BADA8 LDRB W8, [X21 + 0x178]
	0x034BADAC LDR X20, [X20 + 0x328]
	0x034BADB0 MOV X19, X0
	0x034BADB4 TBNZ X8, 0x0, 0x34BADD8
	0x034BADB8 ADRP X0, 0xC78000
	0x034BADBC LDR X0, [X0 + 0x328]
	0x034BADC0 BL 0x1C16CF4
	0x034BADC4 ADRP X0, 0xC61000
	0x034BADC8 LDR X0, [X0 + 0x850]
	0x034BADCC BL 0x1C16CF4
	0x034BADD0 MOVZ W8, 0x1
	0x034BADD4 STRB W8, [X21 + 0x178]
	0x034BADD8 LDR X0, [X20]
	0x034BADDC ADRP X20, 0xC61000
	0x034BADE0 LDR W8, [X0 + 0xE0]
	0x034BADE4 LDR X20, [X20 + 0x850]
	0x034BADE8 CBNZ W8, 0x34BADF0
	0x034BADEC BL 0x1C16DFC
	0x034BADF0 MOV X0, X19
	0x034BADF4 BL 0x34B404C
	0x034BADF8 MOV X19, X0
	0x034BADFC BL 0x34BAE34
	0x034BAE00 LDR X8, [X20]
	0x034BAE04 MOV X20, X0
	0x034BAE08 LDR W9, [X8 + 0xE0]
	0x034BAE0C CBNZ W9, 0x34BAE18
	0x034BAE10 MOV X0, X8
	0x034BAE14 BL 0x1C16DFC
	0x034BAE18 MOV X0, X19
	0x034BAE1C MOV X1, X31
	0x034BAE20 BL 0x32C1060
	0x034BAE24 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF25000
	006 Move X20, 0xC79000
	007 Move W8, [X21+176]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC79000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC62000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+176], W8
	022 Move X0, [X20]
	023 Move X20, 0xC62000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_GroupPresence_SetDeeplinkMessageOverride_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_GroupPresence_SetDeeplinkMessageOverride_Native(System.IntPtr deeplink_message)

Disassembly:
	0x034BAE28 LDP X20, X19, [X31 + 0x10]
	0x034BAE2C LDP X30, X21, [X31], #0x20
	0x034BAE30 RET
	0x034BAE34 SUB X31, X31, 0x50
	0x034BAE38 STR X30, [X31 + 0x30]
	0x034BAE3C STP X20, X19, [X31 + 0x40]
	0x034BAE40 ADRP X20, 0xF24000
	0x034BAE44 LDR X8, [X20 + 0x180]
	0x034BAE48 MOV X19, X0
	0x034BAE4C CBNZ X8, 0x34BAE98
	0x034BAE50 ADRP X12, 0xFFFFFFFFFD633000
	0x034BAE54 LDR V0, [X12 + 0x5B8]
	0x034BAE58 ADRP X8, 0xFFFFFFFFFD659000
	0x034BAE5C ADRP X10, 0xFFFFFFFFFD63A000
	0x034BAE60 ADD X8, X8, 0xDD2
	0x034BAE64 MOVZ W9, 0x11
	0x034BAE68 ADD X10, X10, 0x5BA
	0x034BAE6C MOVZ W11, 0x1B
	0x034BAE70 MOVZ W13, 0x8
	0x034BAE74 ADD X0, X31, 0x0
	0x034BAE78 STP X8, X9, [X31]
	0x034BAE7C STP X10, X11, [X31 + 0x10]
	0x034BAE80 STR W13, [X31 + 0x28]
	0x034BAE84 STR D0, [X31 + 0x20]
	0x034BAE88 STRB W31, [X31 + 0x2C]
	0x034BAE8C BL 0x1C1729C
	0x034BAE90 MOV X8, X0
	0x034BAE94 STR X0, [X20 + 0x180]
	0x034BAE98 MOV X0, X19
	0x034BAE9C BLR X8
	0x034BAEA0 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+184]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43630592
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3728
	017 Move W11, 44
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+184], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GroupPresence_SetDestination(System.String api_name)

Disassembly:
	0x034BAEA4 LDR X30, [X31 + 0x30]
	0x034BAEA8 ADD X31, X31, 0x50
	0x034BAEAC RET
	0x034BAEB0 STP X30, X21, [X31 - 0x20]!
	0x034BAEB4 STP X20, X19, [X31 + 0x10]
	0x034BAEB8 ADRP X21, 0xF24000
	0x034BAEBC ADRP X20, 0xC78000
	0x034BAEC0 LDRB W8, [X21 + 0x188]
	0x034BAEC4 LDR X20, [X20 + 0x328]
	0x034BAEC8 MOV X19, X0
	0x034BAECC TBNZ X8, 0x0, 0x34BAEF0
	0x034BAED0 ADRP X0, 0xC78000
	0x034BAED4 LDR X0, [X0 + 0x328]
	0x034BAED8 BL 0x1C16CF4
	0x034BAEDC ADRP X0, 0xC61000
	0x034BAEE0 LDR X0, [X0 + 0x850]
	0x034BAEE4 BL 0x1C16CF4
	0x034BAEE8 MOVZ W8, 0x1
	0x034BAEEC STRB W8, [X21 + 0x188]
	0x034BAEF0 LDR X0, [X20]
	0x034BAEF4 ADRP X20, 0xC61000
	0x034BAEF8 LDR W8, [X0 + 0xE0]
	0x034BAEFC LDR X20, [X20 + 0x850]
	0x034BAF00 CBNZ W8, 0x34BAF08
	0x034BAF04 BL 0x1C16DFC
	0x034BAF08 MOV X0, X19
	0x034BAF0C BL 0x34B404C
	0x034BAF10 MOV X19, X0
	0x034BAF14 BL 0x34BAF4C
	0x034BAF18 LDR X8, [X20]
	0x034BAF1C MOV X20, X0
	0x034BAF20 LDR W9, [X8 + 0xE0]
	0x034BAF24 CBNZ W9, 0x34BAF30
	0x034BAF28 MOV X0, X8
	0x034BAF2C BL 0x1C16DFC
	0x034BAF30 MOV X0, X19
	0x034BAF34 MOV X1, X31
	0x034BAF38 BL 0x32C1060
	0x034BAF3C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF25000
	006 Move X20, 0xC79000
	007 Move W8, [X21+192]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC79000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC62000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+192], W8
	022 Move X0, [X20]
	023 Move X20, 0xC62000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_GroupPresence_SetDestination_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_GroupPresence_SetDestination_Native(System.IntPtr api_name)

Disassembly:
	0x034BAF40 LDP X20, X19, [X31 + 0x10]
	0x034BAF44 LDP X30, X21, [X31], #0x20
	0x034BAF48 RET
	0x034BAF4C SUB X31, X31, 0x50
	0x034BAF50 STR X30, [X31 + 0x30]
	0x034BAF54 STP X20, X19, [X31 + 0x40]
	0x034BAF58 ADRP X20, 0xF24000
	0x034BAF5C LDR X8, [X20 + 0x190]
	0x034BAF60 MOV X19, X0
	0x034BAF64 CBNZ X8, 0x34BAFB0
	0x034BAF68 ADRP X12, 0xFFFFFFFFFD633000
	0x034BAF6C LDR V0, [X12 + 0x5B8]
	0x034BAF70 ADRP X8, 0xFFFFFFFFFD659000
	0x034BAF74 ADRP X10, 0xFFFFFFFFFD65D000
	0x034BAF78 ADD X8, X8, 0xDD2
	0x034BAF7C MOVZ W9, 0x11
	0x034BAF80 ADD X10, X10, 0xD06
	0x034BAF84 MOVZ W11, 0x13
	0x034BAF88 MOVZ W13, 0x8
	0x034BAF8C ADD X0, X31, 0x0
	0x034BAF90 STP X8, X9, [X31]
	0x034BAF94 STP X10, X11, [X31 + 0x10]
	0x034BAF98 STR W13, [X31 + 0x28]
	0x034BAF9C STR D0, [X31 + 0x20]
	0x034BAFA0 STRB W31, [X31 + 0x2C]
	0x034BAFA4 BL 0x1C1729C
	0x034BAFA8 MOV X8, X0
	0x034BAFAC STR X0, [X20 + 0x190]
	0x034BAFB0 MOV X0, X19
	0x034BAFB4 BLR X8
	0x034BAFB8 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+200]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43724800
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1316
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+200], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GroupPresence_SetIsJoinable(System.Boolean is_joinable)

Disassembly:
	0x034BAFBC LDR X30, [X31 + 0x30]
	0x034BAFC0 ADD X31, X31, 0x50
	0x034BAFC4 RET
	0x034BAFC8 STR X30, [X31 - 0x40]!
	0x034BAFCC STP X24, X23, [X31 + 0x10]
	0x034BAFD0 STP X22, X21, [X31 + 0x20]
	0x034BAFD4 STP X20, X19, [X31 + 0x30]
	0x034BAFD8 ADRP X24, 0xF24000
	0x034BAFDC ADRP X23, 0xC78000
	0x034BAFE0 LDRB W8, [X24 + 0x198]
	0x034BAFE4 LDR X23, [X23 + 0x328]
	0x034BAFE8 MOV W19, W3
	0x034BAFEC MOV W20, W2
	0x034BAFF0 MOV W21, W1
	0x034BAFF4 MOV X22, X0
	0x034BAFF8 TBNZ X8, 0x0, 0x34BB01C
	0x034BAFFC ADRP X0, 0xC78000
	0x034BB000 LDR X0, [X0 + 0x328]
	0x034BB004 BL 0x1C16CF4
	0x034BB008 ADRP X0, 0xC60000
	0x034BB00C LDR X0, [X0 + 0x850]
	0x034BB010 BL 0x1C16CF4
	0x034BB014 MOVZ W8, 0x1
	0x034BB018 STRB W8, [X24 + 0x198]
	0x034BB01C LDR X0, [X23]
	0x034BB020 ADRP X23, 0xC60000
	0x034BB024 LDR W8, [X0 + 0xE0]
	0x034BB028 LDR X23, [X23 + 0x850]
	0x034BB02C CBNZ W8, 0x34BB034
	0x034BB030 BL 0x1C16DFC
	0x034BB034 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF25000
	006 Move X8, [X20+208]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43827200
	011 Move V0, [X12+1464]
	012 Move X8, -43671552
	013 Move X10, -43671552
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3655
	017 Move W11, 31
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+208], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GroupPresence_SetLobbySession(System.String id)

Disassembly:
	0x034BB038 BL 0x34B404C
	0x034BB03C MOV W1, W21
	0x034BB040 MOV W2, W20
	0x034BB044 MOV W3, W19
	0x034BB048 MOV X22, X0
	0x034BB04C BL 0x34BB08C
	0x034BB050 LDR X8, [X23]
	0x034BB054 MOV X19, X0
	0x034BB058 LDR W9, [X8 + 0xE0]
	0x034BB05C CBNZ W9, 0x34BB068
	0x034BB060 MOV X0, X8
	0x034BB064 BL 0x1C16DFC
	0x034BB068 MOV X0, X22
	0x034BB06C MOV X1, X31
	0x034BB070 BL 0x32C1060
	0x034BB074 MOV X0, X19
	0x034BB078 LDP X20, X19, [X31 + 0x30]
	0x034BB07C LDP X22, X21, [X31 + 0x20]
	0x034BB080 LDP X24, X23, [X31 + 0x10]
	0x034BB084 LDR X30, [X31], #0x40
	0x034BB088 RET
	0x034BB08C SUB X31, X31, 0x60
	0x034BB090 STP X30, X23, [X31 + 0x30]
	0x034BB094 STP X22, X21, [X31 + 0x40]
	0x034BB098 STP X20, X19, [X31 + 0x50]
	0x034BB09C ADRP X23, 0xF23000
	0x034BB0A0 LDR X8, [X23 + 0x1A0]
	0x034BB0A4 MOV W19, W3
	0x034BB0A8 MOV W20, W2
	0x034BB0AC MOV W21, W1
	0x034BB0B0 MOV X22, X0
	0x034BB0B4 CBNZ X8, 0x34BB100
	0x034BB0B8 ADRP X12, 0xFFFFFFFFFD632000
	0x034BB0BC LDR V0, [X12 + 0x5B8]
	0x034BB0C0 ADRP X8, 0xFFFFFFFFFD658000
	0x034BB0C4 ADRP X10, 0xFFFFFFFFFD651000
	0x034BB0C8 ADD X8, X8, 0xDD2
	0x034BB0CC MOVZ W9, 0x11
	0x034BB0D0 ADD X10, X10, 0x250

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF24000
	006 Move X20, 0xC78000
	007 Move W8, [X21+216]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC78000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC61000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+216], W8
	022 Move X0, [X20]
	023 Move X20, 0xC61000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_GroupPresence_SetLobbySession_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_GroupPresence_SetLobbySession_Native(System.IntPtr id)

Disassembly:
	0x034BB0D4 MOVZ W11, 0x1A
	0x034BB0D8 MOVZ W13, 0x14
	0x034BB0DC ADD X0, X31, 0x0
	0x034BB0E0 STP X8, X9, [X31]
	0x034BB0E4 STP X10, X11, [X31 + 0x10]
	0x034BB0E8 STR W13, [X31 + 0x28]
	0x034BB0EC STR D0, [X31 + 0x20]
	0x034BB0F0 STRB W31, [X31 + 0x2C]
	0x034BB0F4 BL 0x1C1729C
	0x034BB0F8 MOV X8, X0
	0x034BB0FC STR X0, [X23 + 0x1A0]
	0x034BB100 MOV X0, X22
	0x034BB104 MOV W1, W21
	0x034BB108 MOV W2, W20
	0x034BB10C MOV W3, W19
	0x034BB110 BLR X8
	0x034BB114 LDP X20, X19, [X31 + 0x50]
	0x034BB118 LDP X22, X21, [X31 + 0x40]
	0x034BB11C LDP X30, X23, [X31 + 0x30]
	0x034BB120 ADD X31, X31, 0x60
	0x034BB124 RET
	0x034BB128 STP X30, X23, [X31 - 0x30]!
	0x034BB12C STP X22, X21, [X31 + 0x10]
	0x034BB130 STP X20, X19, [X31 + 0x20]
	0x034BB134 ADRP X23, 0xF23000
	0x034BB138 ADRP X22, 0xC77000
	0x034BB13C LDRB W8, [X23 + 0x1A8]
	0x034BB140 LDR X22, [X22 + 0x328]
	0x034BB144 MOV X19, X2
	0x034BB148 MOV W20, W1
	0x034BB14C MOV X21, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF24000
	006 Move X8, [X20+224]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43831296
	011 Move V0, [X12+1464]
	012 Move X8, -43675648
	013 Move X10, -43593728
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3133
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+224], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_GroupPresence_SetMatchSession(System.String id)

Disassembly:
	0x034BB150 TBNZ X8, 0x0, 0x34BB174
	0x034BB154 ADRP X0, 0xC77000
	0x034BB158 LDR X0, [X0 + 0x328]
	0x034BB15C BL 0x1C16CF4
	0x034BB160 ADRP X0, 0xC60000
	0x034BB164 LDR X0, [X0 + 0x850]
	0x034BB168 BL 0x1C16CF4
	0x034BB16C MOVZ W8, 0x1
	0x034BB170 STRB W8, [X23 + 0x1A8]
	0x034BB174 LDR X0, [X22]
	0x034BB178 ADRP X22, 0xC60000
	0x034BB17C LDR W8, [X0 + 0xE0]
	0x034BB180 LDR X22, [X22 + 0x850]
	0x034BB184 CBNZ W8, 0x34BB18C
	0x034BB188 BL 0x1C16DFC
	0x034BB18C MOV X0, X21
	0x034BB190 BL 0x34B404C
	0x034BB194 MOV W1, W20
	0x034BB198 MOV X2, X19
	0x034BB19C MOV X21, X0
	0x034BB1A0 BL 0x34BB1DC
	0x034BB1A4 LDR X8, [X22]
	0x034BB1A8 MOV X19, X0
	0x034BB1AC LDR W9, [X8 + 0xE0]
	0x034BB1B0 CBNZ W9, 0x34BB1BC
	0x034BB1B4 MOV X0, X8
	0x034BB1B8 BL 0x1C16DFC
	0x034BB1BC MOV X0, X21
	0x034BB1C0 MOV X1, X31
	0x034BB1C4 BL 0x32C1060
	0x034BB1C8 MOV X0, X19
	0x034BB1CC LDP X20, X19, [X31 + 0x20]
	0x034BB1D0 LDP X22, X21, [X31 + 0x10]
	0x034BB1D4 LDP X30, X23, [X31], #0x30
	0x034BB1D8 RET
	0x034BB1DC SUB X31, X31, 0x60
	0x034BB1E0 STR X30, [X31 + 0x30]
	0x034BB1E4 STP X22, X21, [X31 + 0x40]
	0x034BB1E8 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF24000
	006 Move X20, 0xC78000
	007 Move W8, [X21+232]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC78000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC61000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+232], W8
	022 Move X0, [X20]
	023 Move X20, 0xC61000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_GroupPresence_SetMatchSession_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_GroupPresence_SetMatchSession_Native(System.IntPtr id)

Disassembly:
	0x034BB1EC ADRP X22, 0xF23000
	0x034BB1F0 LDR X8, [X22 + 0x1B0]
	0x034BB1F4 MOV X19, X2
	0x034BB1F8 MOV W20, W1
	0x034BB1FC MOV X21, X0
	0x034BB200 CBNZ X8, 0x34BB24C
	0x034BB204 ADRP X12, 0xFFFFFFFFFD632000
	0x034BB208 LDR V0, [X12 + 0x5B8]
	0x034BB20C ADRP X8, 0xFFFFFFFFFD658000
	0x034BB210 ADRP X10, 0xFFFFFFFFFD64B000
	0x034BB214 ADD X8, X8, 0xDD2
	0x034BB218 MOVZ W9, 0x11
	0x034BB21C ADD X10, X10, 0x545
	0x034BB220 MOVZ W11, 0x23
	0x034BB224 MOVZ W13, 0x14
	0x034BB228 ADD X0, X31, 0x0
	0x034BB22C STP X8, X9, [X31]
	0x034BB230 STP X10, X11, [X31 + 0x10]
	0x034BB234 STR W13, [X31 + 0x28]
	0x034BB238 STR D0, [X31 + 0x20]
	0x034BB23C STRB W31, [X31 + 0x2C]
	0x034BB240 BL 0x1C1729C
	0x034BB244 MOV X8, X0
	0x034BB248 STR X0, [X22 + 0x1B0]
	0x034BB24C MOV X0, X21
	0x034BB250 MOV W1, W20
	0x034BB254 MOV X2, X19
	0x034BB258 BLR X8
	0x034BB25C LDP X20, X19, [X31 + 0x50]
	0x034BB260 LDP X22, X21, [X31 + 0x40]
	0x034BB264 LDR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF24000
	006 Move X8, [X20+240]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43831296
	011 Move V0, [X12+1464]
	012 Move X8, -43675648
	013 Move X10, -43651072
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3402
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+240], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_HTTP_Get(System.String url)

Disassembly:
	0x034BB268 ADD X31, X31, 0x60
	0x034BB26C RET
	0x034BB270 STP X30, X25, [X31 - 0x40]!
	0x034BB274 STP X24, X23, [X31 + 0x10]
	0x034BB278 STP X22, X21, [X31 + 0x20]
	0x034BB27C STP X20, X19, [X31 + 0x30]
	0x034BB280 ADRP X25, 0xF23000
	0x034BB284 ADRP X24, 0xC77000
	0x034BB288 LDRB W8, [X25 + 0x1B8]
	0x034BB28C LDR X24, [X24 + 0x328]
	0x034BB290 MOV W19, W4
	0x034BB294 MOV X20, X3
	0x034BB298 MOV W21, W2
	0x034BB29C MOV W22, W1
	0x034BB2A0 MOV X23, X0
	0x034BB2A4 TBNZ X8, 0x0, 0x34BB2C8
	0x034BB2A8 ADRP X0, 0xC77000
	0x034BB2AC LDR X0, [X0 + 0x328]
	0x034BB2B0 BL 0x1C16CF4
	0x034BB2B4 ADRP X0, 0xC60000
	0x034BB2B8 LDR X0, [X0 + 0x850]
	0x034BB2BC BL 0x1C16CF4
	0x034BB2C0 MOVZ W8, 0x1
	0x034BB2C4 STRB W8, [X25 + 0x1B8]
	0x034BB2C8 LDR X0, [X24]
	0x034BB2CC ADRP X24, 0xC60000
	0x034BB2D0 LDR W8, [X0 + 0xE0]
	0x034BB2D4 LDR X24, [X24 + 0x850]
	0x034BB2D8 CBNZ W8, 0x34BB2E0
	0x034BB2DC BL 0x1C16DFC
	0x034BB2E0 MOV X0, X23
	0x034BB2E4 BL 0x34B404C
	0x034BB2E8 MOV W1, W22
	0x034BB2EC MOV W2, W21
	0x034BB2F0 MOV X3, X20
	0x034BB2F4 MOV W4, W19
	0x034BB2F8 MOV X23, X0
	0x034BB2FC BL 0x34BB33C
	0x034BB300 LDR X8, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF24000
	006 Move X20, 0xC78000
	007 Move W8, [X21+248]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC78000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC61000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+248], W8
	022 Move X0, [X20]
	023 Move X20, 0xC61000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_HTTP_Get_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_HTTP_Get_Native(System.IntPtr url)

Disassembly:
	0x034BB304 MOV X19, X0
	0x034BB308 LDR W9, [X8 + 0xE0]
	0x034BB30C CBNZ W9, 0x34BB318
	0x034BB310 MOV X0, X8
	0x034BB314 BL 0x1C16DFC
	0x034BB318 MOV X0, X23
	0x034BB31C MOV X1, X31
	0x034BB320 BL 0x32C1060
	0x034BB324 MOV X0, X19
	0x034BB328 LDP X20, X19, [X31 + 0x30]
	0x034BB32C LDP X22, X21, [X31 + 0x20]
	0x034BB330 LDP X24, X23, [X31 + 0x10]
	0x034BB334 LDP X30, X25, [X31], #0x40
	0x034BB338 RET
	0x034BB33C SUB X31, X31, 0x70
	0x034BB340 STR X30, [X31 + 0x30]
	0x034BB344 STP X24, X23, [X31 + 0x40]
	0x034BB348 STP X22, X21, [X31 + 0x50]
	0x034BB34C STP X20, X19, [X31 + 0x60]
	0x034BB350 ADRP X24, 0xF23000
	0x034BB354 LDR X8, [X24 + 0x1C0]
	0x034BB358 MOV W19, W4
	0x034BB35C MOV X22, X3
	0x034BB360 MOV W20, W2
	0x034BB364 MOV W21, W1
	0x034BB368 MOV X23, X0
	0x034BB36C CBNZ X8, 0x34BB3B8
	0x034BB370 ADRP X12, 0xFFFFFFFFFD632000
	0x034BB374 LDR V0, [X12 + 0x5B8]
	0x034BB378 ADRP X8, 0xFFFFFFFFFD658000
	0x034BB37C ADRP X10, 0xFFFFFFFFFD635000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF24000
	006 Move X8, [X20+256]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43831296
	011 Move V0, [X12+1464]
	012 Move X8, -43675648
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 986
	017 Move W11, 12
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+256], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_HTTP_GetToFile(System.String url, System.String diskFile)

Disassembly:
	0x034BB380 ADD X8, X8, 0xDD2
	0x034BB384 MOVZ W9, 0x11
	0x034BB388 ADD X10, X10, 0x23A
	0x034BB38C MOVZ W11, 0x1F
	0x034BB390 MOVZ W13, 0x1C
	0x034BB394 ADD X0, X31, 0x0
	0x034BB398 STP X8, X9, [X31]
	0x034BB39C STP X10, X11, [X31 + 0x10]
	0x034BB3A0 STR W13, [X31 + 0x28]
	0x034BB3A4 STR D0, [X31 + 0x20]
	0x034BB3A8 STRB W31, [X31 + 0x2C]
	0x034BB3AC BL 0x1C1729C
	0x034BB3B0 MOV X8, X0
	0x034BB3B4 STR X0, [X24 + 0x1C0]
	0x034BB3B8 ADD X9, X22, 0x20
	0x034BB3BC CMP X22, 0x0
	0x034BB3C0 CSEL X3, X31, X9, EQ
	0x034BB3C4 MOV X0, X23
	0x034BB3C8 MOV W1, W21
	0x034BB3CC MOV W2, W20
	0x034BB3D0 MOV W4, W19
	0x034BB3D4 BLR X8
	0x034BB3D8 LDP X20, X19, [X31 + 0x60]
	0x034BB3DC LDP X22, X21, [X31 + 0x50]
	0x034BB3E0 LDP X24, X23, [X31 + 0x40]
	0x034BB3E4 LDR X30, [X31 + 0x30]
	0x034BB3E8 ADD X31, X31, 0x70
	0x034BB3EC RET
	0x034BB3F0 SUB X31, X31, 0x50
	0x034BB3F4 STR X30, [X31 + 0x30]
	0x034BB3F8 STP X20, X19, [X31 + 0x40]
	0x034BB3FC ADRP X20, 0xF23000
	0x034BB400 LDR X8, [X20 + 0x1C8]
	0x034BB404 MOV X19, X0
	0x034BB408 CBNZ X8, 0x34BB454
	0x034BB40C ADRP X12, 0xFFFFFFFFFD632000
	0x034BB410 LDR V0, [X12 + 0x5B8]
	0x034BB414 ADRP X8, 0xFFFFFFFFFD658000
	0x034BB418 ADRP X10, 0xFFFFFFFFFD670000
	0x034BB41C ADD X8, X8, 0xDD2
	0x034BB420 MOVZ W9, 0x11
	0x034BB424 ADD X10, X10, 0xB6C
	0x034BB428 MOVZ W11, 0x1E
	0x034BB42C MOVZ W13, 0x8
	0x034BB430 ADD X0, X31, 0x0
	0x034BB434 STP X8, X9, [X31]
	0x034BB438 STP X10, X11, [X31 + 0x10]
	0x034BB43C STR W13, [X31 + 0x28]
	0x034BB440 STR D0, [X31 + 0x20]
	0x034BB444 STRB W31, [X31 + 0x2C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF24000
	007 Move X21, 0xC78000
	008 Move W8, [X22+264]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC78000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC61000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+264], W8
	024 Move X0, [X21]
	025 Move X21, 0xC61000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Call CAPI.StringToNative, X0
	036 Move X19, X0
	037 Move X0, X20
	038 Move X1, X19
	039 Call CAPI.ovr_HTTP_GetToFile_Native, X0, X1
	040 Move X8, [X21]
	041 Move X21, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Marshal.FreeCoTaskMem, X0
	050 Move X0, X19
	051 Move X1, X31
	052 Call Marshal.FreeCoTaskMem, X0
	053 Move X0, X21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0

Method: System.UInt64 ovr_HTTP_GetToFile_Native(System.IntPtr url, System.IntPtr diskFile)

Disassembly:
	0x034BB448 BL 0x1C1729C
	0x034BB44C MOV X8, X0
	0x034BB450 STR X0, [X20 + 0x1C8]
	0x034BB454 MOV X0, X19
	0x034BB458 BLR X8
	0x034BB45C LDP X20, X19, [X31 + 0x40]
	0x034BB460 LDR X30, [X31 + 0x30]
	0x034BB464 ADD X31, X31, 0x50
	0x034BB468 RET
	0x034BB46C SUB X31, X31, 0x50
	0x034BB470 STR X30, [X31 + 0x30]
	0x034BB474 STP X20, X19, [X31 + 0x40]
	0x034BB478 ADRP X20, 0xF23000
	0x034BB47C LDR X8, [X20 + 0x1D0]
	0x034BB480 MOV X19, X0
	0x034BB484 CBNZ X8, 0x34BB4D0
	0x034BB488 ADRP X12, 0xFFFFFFFFFD632000
	0x034BB48C LDR V0, [X12 + 0x5B8]
	0x034BB490 ADRP X8, 0xFFFFFFFFFD658000
	0x034BB494 ADRP X10, 0xFFFFFFFFFD65A000
	0x034BB498 ADD X8, X8, 0xDD2
	0x034BB49C MOVZ W9, 0x11
	0x034BB4A0 ADD X10, X10, 0xBDC
	0x034BB4A4 MOVZ W11, 0x22
	0x034BB4A8 MOVZ W13, 0x8
	0x034BB4AC ADD X0, X31, 0x0
	0x034BB4B0 STP X8, X9, [X31]
	0x034BB4B4 STP X10, X11, [X31 + 0x10]
	0x034BB4B8 STR W13, [X31 + 0x28]
	0x034BB4BC STR D0, [X31 + 0x20]
	0x034BB4C0 STRB W31, [X31 + 0x2C]
	0x034BB4C4 BL 0x1C1729C
	0x034BB4C8 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF24000
	007 Move X8, [X21+272]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43831296
	013 Move V0, [X12+1464]
	014 Move X8, -43675648
	015 Move X10, -43704320
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 573
	019 Move W11, 18
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+272], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_HTTP_MultiPartPost(System.String url, System.String filepath_param_name, System.String filepath, System.String access_token, Oculus.Platform.CAPI/ovrKeyValuePair[] post_params)

Disassembly:
	0x034BB4CC STR X0, [X20 + 0x1D0]
	0x034BB4D0 MOV X0, X19
	0x034BB4D4 BLR X8
	0x034BB4D8 LDP X20, X19, [X31 + 0x40]
	0x034BB4DC LDR X30, [X31 + 0x30]
	0x034BB4E0 ADD X31, X31, 0x50
	0x034BB4E4 RET
	0x034BB4E8 STP X30, X25, [X31 - 0x40]!
	0x034BB4EC STP X24, X23, [X31 + 0x10]
	0x034BB4F0 STP X22, X21, [X31 + 0x20]
	0x034BB4F4 STP X20, X19, [X31 + 0x30]
	0x034BB4F8 ADRP X25, 0xF23000
	0x034BB4FC ADRP X24, 0xC77000
	0x034BB500 LDRB W8, [X25 + 0x1D8]
	0x034BB504 LDR X24, [X24 + 0x328]
	0x034BB508 MOV W21, W4
	0x034BB50C MOV W19, W3
	0x034BB510 MOV X20, X2
	0x034BB514 MOV X22, X1
	0x034BB518 MOV X23, X0
	0x034BB51C TBNZ X8, 0x0, 0x34BB540
	0x034BB520 ADRP X0, 0xC77000
	0x034BB524 LDR X0, [X0 + 0x328]
	0x034BB528 BL 0x1C16CF4
	0x034BB52C ADRP X0, 0xC60000
	0x034BB530 LDR X0, [X0 + 0x850]
	0x034BB534 BL 0x1C16CF4
	0x034BB538 MOVZ W8, 0x1
	0x034BB53C STRB W8, [X25 + 0x1D8]
	0x034BB540 LDR X0, [X24]
	0x034BB544 ADRP X24, 0xC60000
	0x034BB548 LDR W8, [X0 + 0xE0]
	0x034BB54C LDR X24, [X24 + 0x850]
	0x034BB550 CBNZ W8, 0x34BB558
	0x034BB554 BL 0x1C16DFC
	0x034BB558 MOV X0, X23
	0x034BB55C BL 0x34B404C
	0x034BB560 AND W4, W21, 0x1
	0x034BB564 MOV X1, X22
	0x034BB568 MOV X2, X20
	0x034BB56C MOV W3, W19
	0x034BB570 MOV X23, X0
	0x034BB574 BL 0x34BB5B4
	0x034BB578 LDR X8, [X24]
	0x034BB57C MOV X19, X0
	0x034BB580 LDR W9, [X8 + 0xE0]
	0x034BB584 CBNZ W9, 0x34BB590
	0x034BB588 MOV X0, X8
	0x034BB58C BL 0x1C16DFC
	0x034BB590 MOV X0, X23
	0x034BB594 MOV X1, X31
	0x034BB598 BL 0x32C1060
	0x034BB59C MOV X0, X19
	0x034BB5A0 LDP X20, X19, [X31 + 0x30]
	0x034BB5A4 LDP X22, X21, [X31 + 0x20]
	0x034BB5A8 LDP X24, X23, [X31 + 0x10]
	0x034BB5AC LDP X30, X25, [X31], #0x40
	0x034BB5B0 RET
	0x034BB5B4 SUB X31, X31, 0x70
	0x034BB5B8 STR X30, [X31 + 0x30]
	0x034BB5BC STP X24, X23, [X31 + 0x40]
	0x034BB5C0 STP X22, X21, [X31 + 0x50]
	0x034BB5C4 STP X20, X19, [X31 + 0x60]
	0x034BB5C8 ADRP X24, 0xF23000
	0x034BB5CC LDR X8, [X24 + 0x1E0]
	0x034BB5D0 MOV W21, W4
	0x034BB5D4 MOV W19, W3
	0x034BB5D8 MOV X23, X2
	0x034BB5DC MOV X20, X1
	0x034BB5E0 MOV X22, X0
	0x034BB5E4 CBNZ X8, 0x34BB630
	0x034BB5E8 ADRP X12, 0xFFFFFFFFFD632000
	0x034BB5EC LDR V0, [X12 + 0x5B8]
	0x034BB5F0 ADRP X8, 0xFFFFFFFFFD658000
	0x034BB5F4 ADRP X10, 0xFFFFFFFFFD65A000
	0x034BB5F8 ADD X8, X8, 0xDD2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xF24000
	010 Move X25, 0xC78000
	011 Move W8, [X24+280]
	012 Move X25, [X25+808]
	013 Move X19, X4
	014 Move X23, X3
	015 Move X22, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xC78000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0xC61000
	026 Move X0, [X0+2128]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+280], W8
	030 Move X0, [X25]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Call CAPI.StringToNative, X0
	037 Move X20, X0
	038 Move X0, X21
	039 Call CAPI.StringToNative, X0
	040 Move X21, X0
	041 Move X0, X22
	042 Call CAPI.StringToNative, X0
	043 Move X22, X0
	044 Move X0, X23
	045 Call CAPI.StringToNative, X0
	046 Compare X19, 0
	047 JumpIfEqual {90}
	048 Move X23, X0
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Move X24, 0xC61000
	051 Move X24, [X24+2128]
	052 Move X1, X31
	053 Call UIntPtr.op_Explicit, X0
	054 Move X5, X0
	055 Move X0, X20
	056 Move X1, X21
	057 Move X2, X22
	058 Move X3, X23
	059 Move X4, X19
	060 Call CAPI.ovr_HTTP_MultiPartPost_Native, X0, X1, X2, X3, X4, X5
	061 Move X8, [X24]
	062 Move X19, X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X20
	069 Move X1, X31
	070 Call Marshal.FreeCoTaskMem, X0
	071 Move X0, X21
	072 Move X1, X31
	073 Call Marshal.FreeCoTaskMem, X0
	074 Move X0, X22
	075 Move X1, X31
	076 Call Marshal.FreeCoTaskMem, X0
	077 Move X0, X23
	078 Move X1, X31
	079 Call Marshal.FreeCoTaskMem, X0
	080 Move X0, X19
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return X0
	090 Call 0x1C17F20

Method: System.UInt64 ovr_HTTP_MultiPartPost_Native(System.IntPtr url, System.IntPtr filepath_param_name, System.IntPtr filepath, System.IntPtr access_token, Oculus.Platform.CAPI/ovrKeyValuePair[] post_params, System.UIntPtr numItems)

Disassembly:
	0x034BB5FC MOVZ W9, 0x11
	0x034BB600 ADD X10, X10, 0xBFF
	0x034BB604 MOVZ W11, 0x1A
	0x034BB608 MOVZ W13, 0x20
	0x034BB60C ADD X0, X31, 0x0
	0x034BB610 STP X8, X9, [X31]
	0x034BB614 STP X10, X11, [X31 + 0x10]
	0x034BB618 STR W13, [X31 + 0x28]
	0x034BB61C STR D0, [X31 + 0x20]
	0x034BB620 STRB W31, [X31 + 0x2C]
	0x034BB624 BL 0x1C1729C
	0x034BB628 MOV X8, X0
	0x034BB62C STR X0, [X24 + 0x1E0]
	0x034BB630 ADD X9, X23, 0x20
	0x034BB634 CMP X23, 0x0
	0x034BB638 CSEL X2, X31, X9, EQ
	0x034BB63C AND W4, W21, 0x1
	0x034BB640 MOV X0, X22
	0x034BB644 MOV X1, X20
	0x034BB648 MOV W3, W19
	0x034BB64C BLR X8
	0x034BB650 LDP X20, X19, [X31 + 0x60]
	0x034BB654 LDP X22, X21, [X31 + 0x50]
	0x034BB658 LDP X24, X23, [X31 + 0x40]
	0x034BB65C LDR X30, [X31 + 0x30]
	0x034BB660 ADD X31, X31, 0x70
	0x034BB664 RET
	0x034BB668 STR X30, [X31 - 0x50]!
	0x034BB66C STP X26, X25, [X31 + 0x10]
	0x034BB670 STP X24, X23, [X31 + 0x20]
	0x034BB674 STP X22, X21, [X31 + 0x30]
	0x034BB678 STP X20, X19, [X31 + 0x40]
	0x034BB67C ADRP X26, 0xF23000
	0x034BB680 ADRP X25, 0xC77000
	0x034BB684 LDRB W8, [X26 + 0x1E8]
	0x034BB688 LDR X25, [X25 + 0x328]
	0x034BB68C MOV W22, W5
	0x034BB690 MOV W19, W4
	0x034BB694 MOV X20, X3
	0x034BB698 MOV X21, X2
	0x034BB69C MOV X23, X1
	0x034BB6A0 MOV X24, X0
	0x034BB6A4 TBNZ X8, 0x0, 0x34BB6C8
	0x034BB6A8 ADRP X0, 0xC77000
	0x034BB6AC LDR X0, [X0 + 0x328]
	0x034BB6B0 BL 0x1C16CF4
	0x034BB6B4 ADRP X0, 0xC60000
	0x034BB6B8 LDR X0, [X0 + 0x850]
	0x034BB6BC BL 0x1C16CF4
	0x034BB6C0 MOVZ W8, 0x1
	0x034BB6C4 STRB W8, [X26 + 0x1E8]
	0x034BB6C8 LDR X0, [X25]
	0x034BB6CC ADRP X25, 0xC60000
	0x034BB6D0 LDR W8, [X0 + 0xE0]
	0x034BB6D4 LDR X25, [X25 + 0x850]
	0x034BB6D8 CBNZ W8, 0x34BB6E0
	0x034BB6DC BL 0x1C16DFC
	0x034BB6E0 MOV X0, X24
	0x034BB6E4 BL 0x34B404C
	0x034BB6E8 AND W5, W22, 0x1
	0x034BB6EC MOV X1, X23
	0x034BB6F0 MOV X2, X21
	0x034BB6F4 MOV X3, X20
	0x034BB6F8 MOV W4, W19
	0x034BB6FC MOV X24, X0
	0x034BB700 BL 0x34BB744
	0x034BB704 LDR X8, [X25]
	0x034BB708 MOV X19, X0
	0x034BB70C LDR W9, [X8 + 0xE0]
	0x034BB710 CBNZ W9, 0x34BB71C
	0x034BB714 MOV X0, X8
	0x034BB718 BL 0x1C16DFC
	0x034BB71C MOV X0, X24
	0x034BB720 MOV X1, X31
	0x034BB724 BL 0x32C1060
	0x034BB728 MOV X0, X19
	0x034BB72C LDP X20, X19, [X31 + 0x40]
	0x034BB730 LDP X22, X21, [X31 + 0x30]
	0x034BB734 LDP X24, X23, [X31 + 0x20]
	0x034BB738 LDP X26, X25, [X31 + 0x10]
	0x034BB73C LDR X30, [X31], #0x50
	0x034BB740 RET
	0x034BB744 SUB X31, X31, 0x70
	0x034BB748 STP X30, X25, [X31 + 0x30]
	0x034BB74C STP X24, X23, [X31 + 0x40]
	0x034BB750 STP X22, X21, [X31 + 0x50]
	0x034BB754 STP X20, X19, [X31 + 0x60]
	0x034BB758 ADRP X25, 0xF23000
	0x034BB75C LDR X8, [X25 + 0x1F0]
	0x034BB760 MOV W21, W5
	0x034BB764 MOV W19, W4
	0x034BB768 MOV X23, X3
	0x034BB76C MOV X20, X2
	0x034BB770 MOV X22, X1
	0x034BB774 MOV X24, X0
	0x034BB778 CBNZ X8, 0x34BB7C4
	0x034BB77C ADRP X12, 0xFFFFFFFFFD632000
	0x034BB780 LDR V0, [X12 + 0x5B8]
	0x034BB784 ADRP X8, 0xFFFFFFFFFD658000
	0x034BB788 ADRP X10, 0xFFFFFFFFFD637000
	0x034BB78C ADD X8, X8, 0xDD2
	0x034BB790 MOVZ W9, 0x11
	0x034BB794 ADD X10, X10, 0x6A8
	0x034BB798 MOVZ W11, 0x31
	0x034BB79C MOVZ W13, 0x28
	0x034BB7A0 ADD X0, X31, 0x0
	0x034BB7A4 STP X8, X9, [X31]
	0x034BB7A8 STP X10, X11, [X31 + 0x10]
	0x034BB7AC STR W13, [X31 + 0x28]
	0x034BB7B0 STR D0, [X31 + 0x20]
	0x034BB7B4 STRB W31, [X31 + 0x2C]
	0x034BB7B8 BL 0x1C1729C
	0x034BB7BC MOV X8, X0
	0x034BB7C0 STR X0, [X25 + 0x1F0]
	0x034BB7C4 ADD X9, X23, 0x20
	0x034BB7C8 CMP X23, 0x0
	0x034BB7CC CSEL X3, X31, X9, EQ
	0x034BB7D0 AND W5, W21, 0x1
	0x034BB7D4 MOV X0, X24
	0x034BB7D8 MOV X1, X22
	0x034BB7DC MOV X2, X20
	0x034BB7E0 MOV W4, W19
	0x034BB7E4 BLR X8
	0x034BB7E8 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D8
	003 Move [X31+80], X29
	004 Move [X31+88], X30
	005 Move [X31+96], X28
	006 Move [X31+104], X27
	007 Move [X31+112], X26
	008 Move [X31+120], X25
	009 Move [X31+128], X24
	010 Move [X31+136], X23
	011 Move [X31+144], X22
	012 Move [X31+152], X21
	013 Move [X31+160], X20
	014 Move [X31+168], X19
	015 Move X27, 0xF24000
	016 Move X8, [X27+288]
	017 Move X20, X5
	018 Move X19, X4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X24, X1
	022 Move X25, X0
	023 Compare X8, 0
	024 JumpIfEqual {73}
	025 Compare X19, 0
	026 JumpIfEqual {95}
	027 Move X26, [X19+24]
	028 Add X8, X26, X26
	029 Move X0, X8
	030 ShiftRight X0, 61
	031 And X0, X0, 0xFFFFFFF
	032 Call 0x1C17F14
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X21, X0
	035 And X8, X26, 0
	036 Move X8, X8
	037 ShiftRight X8, 62
	038 And X8, X8, 0x1FFFFFFF
	039 Add X8, X8, W26
	040 Move X28, X31
	041 Move X29, X8
	042 ShiftRight X29, 61
	043 And X29, X29, 0xFFFFFFF
	044 Move [X31+8], X22
	045 Move [X31+72], X20
	046 Add X8, X19, X28
	047 Move X0, [X8+32]
	048 Move W27, [X8+40]
	049 Move X26, [X8+48]
	050 Move W20, [X8+56]
	051 Move V8, [X8+64]
	052 Call 0x1C1827C
	053 Add X22, X21, X28
	054 Move [X22], X0
	055 Move X0, X26
	056 Move [X22+8], W27
	057 Call 0x1C1827C
	058 Add X28, X28, 40
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X22+16], X0
	061 Move [X22+24], W20
	062 Move [X22+32], D8
	063 Move X8, 0xF24000
	064 Move X8, [X8+288]
	065 Move X3, [X31+8]
	066 Move X5, [X31+72]
	067 Move X0, X25
	068 Move X1, X24
	069 Move X2, X23
	070 Move X4, X21
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X20, X0
	073 Move X12, -43831296
	074 Move V0, [X12+1464]
	075 Move X8, -43675648
	076 Move X10, -43802624
	077 Add X8, X8, 3538
	078 Move W9, 17
	079 Add X10, X10, 1443
	080 Move W11, 22
	081 Move W13, 48
	082 Add X0, X31, 16
	083 Move [X31+16], X8
	084 Move [X31+24], X9
	085 Move [X31+32], X10
	086 Move [X31+40], X11
	087 Move [X31+56], W13
	088 Move [X31+48], D0
	089 Move [X31+60], W31
	090 Call 0x1C1829C
	091 Move X8, X0
	092 Move [X27+288], X0
	093 Compare X19, 0
	094 JumpIfNotEqual {27}
	095 Move X0, X25
	096 Move X1, X24
	097 Move X2, X23
	098 Move X3, X22
	099 Move X4, X31
	100 Move X5, X20
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X20, X0
	103 Move X8, [X27+288]
	104 Move X0, X25
	105 Move X1, X24
	106 Move X2, X23
	107 Move X3, X22
	108 Move X4, X21
	109 Move X5, X20
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X20, X0
	112 Compare X21, 0
	113 JumpIfEqual {127}
	114 Move X8, [X19+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 And X19, X8, 0
	117 Add X22, X21, 16
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 Call 0x1C18290
	120 Move X0, [X22]
	121 Move [X22-16], X31
	122 Call 0x1C18290
	123 Move [X22+40], X31
	124 Subtract X19, X19, 1
	125 Move X0, X21
	126 Call 0x1C18290
	127 Move X0, X20
	128 Move X20, [X31+160]
	129 Move X19, [X31+168]
	130 Move X22, [X31+144]
	131 Move X21, [X31+152]
	132 Move X24, [X31+128]
	133 Move X23, [X31+136]
	134 Move X26, [X31+112]
	135 Move X25, [X31+120]
	136 Move X28, [X31+96]
	137 Move X27, [X31+104]
	138 Move X29, [X31+80]
	139 Move X30, [X31+88]
	140 Move V8, [X31+64]
	141 Add X31, X31, 176
	142 Return X0

Method: System.UInt64 ovr_HTTP_Post(System.String url)

Disassembly:
	0x034BB7EC LDP X22, X21, [X31 + 0x50]
	0x034BB7F0 LDP X24, X23, [X31 + 0x40]
	0x034BB7F4 LDP X30, X25, [X31 + 0x30]
	0x034BB7F8 ADD X31, X31, 0x70
	0x034BB7FC RET
	0x034BB800 STP X30, X21, [X31 - 0x20]!
	0x034BB804 STP X20, X19, [X31 + 0x10]
	0x034BB808 ADRP X21, 0xF23000
	0x034BB80C ADRP X20, 0xC77000
	0x034BB810 LDRB W8, [X21 + 0x1F8]
	0x034BB814 LDR X20, [X20 + 0x328]
	0x034BB818 MOV X19, X0
	0x034BB81C TBNZ X8, 0x0, 0x34BB840
	0x034BB820 ADRP X0, 0xC77000
	0x034BB824 LDR X0, [X0 + 0x328]
	0x034BB828 BL 0x1C16CF4
	0x034BB82C ADRP X0, 0xC60000
	0x034BB830 LDR X0, [X0 + 0x850]
	0x034BB834 BL 0x1C16CF4
	0x034BB838 MOVZ W8, 0x1
	0x034BB83C STRB W8, [X21 + 0x1F8]
	0x034BB840 LDR X0, [X20]
	0x034BB844 ADRP X20, 0xC60000
	0x034BB848 LDR W8, [X0 + 0xE0]
	0x034BB84C LDR X20, [X20 + 0x850]
	0x034BB850 CBNZ W8, 0x34BB858
	0x034BB854 BL 0x1C16DFC
	0x034BB858 MOV X0, X19
	0x034BB85C BL 0x34B404C
	0x034BB860 MOV X19, X0
	0x034BB864 BL 0x34BB89C
	0x034BB868 LDR X8, [X20]
	0x034BB86C MOV X20, X0
	0x034BB870 LDR W9, [X8 + 0xE0]
	0x034BB874 CBNZ W9, 0x34BB880
	0x034BB878 MOV X0, X8
	0x034BB87C BL 0x1C16DFC
	0x034BB880 MOV X0, X19
	0x034BB884 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF24000
	006 Move X20, 0xC78000
	007 Move W8, [X21+296]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC78000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC61000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+296], W8
	022 Move X0, [X20]
	023 Move X20, 0xC61000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_HTTP_Post_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_HTTP_Post_Native(System.IntPtr url)

Disassembly:
	0x034BB888 BL 0x32C1060
	0x034BB88C MOV X0, X20
	0x034BB890 LDP X20, X19, [X31 + 0x10]
	0x034BB894 LDP X30, X21, [X31], #0x20
	0x034BB898 RET
	0x034BB89C SUB X31, X31, 0x50
	0x034BB8A0 STR X30, [X31 + 0x30]
	0x034BB8A4 STP X20, X19, [X31 + 0x40]
	0x034BB8A8 ADRP X20, 0xF23000
	0x034BB8AC LDR X8, [X20 + 0x200]
	0x034BB8B0 MOV X19, X0
	0x034BB8B4 CBNZ X8, 0x34BB900
	0x034BB8B8 ADRP X12, 0xFFFFFFFFFD632000
	0x034BB8BC LDR V0, [X12 + 0x5B8]
	0x034BB8C0 ADRP X8, 0xFFFFFFFFFD658000
	0x034BB8C4 ADRP X10, 0xFFFFFFFFFD653000
	0x034BB8C8 ADD X8, X8, 0xDD2
	0x034BB8CC MOVZ W9, 0x11
	0x034BB8D0 ADD X10, X10, 0x3E8
	0x034BB8D4 MOVZ W11, 0x29
	0x034BB8D8 MOVZ W13, 0x8
	0x034BB8DC ADD X0, X31, 0x0
	0x034BB8E0 STP X8, X9, [X31]
	0x034BB8E4 STP X10, X11, [X31 + 0x10]
	0x034BB8E8 STR W13, [X31 + 0x28]
	0x034BB8EC STR D0, [X31 + 0x20]
	0x034BB8F0 STRB W31, [X31 + 0x2C]
	0x034BB8F4 BL 0x1C1729C
	0x034BB8F8 MOV X8, X0
	0x034BB8FC STR X0, [X20 + 0x200]
	0x034BB900 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF24000
	006 Move X8, [X20+304]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43831296
	011 Move V0, [X12+1464]
	012 Move X8, -43675648
	013 Move X10, -43679744
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 26
	017 Move W11, 13
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+304], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_IAP_ConsumePurchase(System.String sku)

Disassembly:
	0x034BB904 BLR X8
	0x034BB908 LDP X20, X19, [X31 + 0x40]
	0x034BB90C LDR X30, [X31 + 0x30]
	0x034BB910 ADD X31, X31, 0x50
	0x034BB914 RET
	0x034BB918 SUB X31, X31, 0x40
	0x034BB91C STP X30, X19, [X31 + 0x30]
	0x034BB920 ADRP X19, 0xF23000
	0x034BB924 LDR X8, [X19 + 0x208]
	0x034BB928 CBNZ X8, 0x34BB970
	0x034BB92C ADRP X12, 0xFFFFFFFFFD632000
	0x034BB930 LDR V0, [X12 + 0x5B8]
	0x034BB934 ADRP X8, 0xFFFFFFFFFD658000
	0x034BB938 ADRP X10, 0xFFFFFFFFFD63B000
	0x034BB93C ADD X8, X8, 0xDD2
	0x034BB940 MOVZ W9, 0x11
	0x034BB944 ADD X10, X10, 0x620
	0x034BB948 MOVZ W11, 0x22
	0x034BB94C ADD X0, X31, 0x0
	0x034BB950 STR W31, [X31 + 0x28]
	0x034BB954 STP X8, X9, [X31]
	0x034BB958 STP X10, X11, [X31 + 0x10]
	0x034BB95C STR D0, [X31 + 0x20]
	0x034BB960 STRB W31, [X31 + 0x2C]
	0x034BB964 BL 0x1C1729C
	0x034BB968 MOV X8, X0
	0x034BB96C STR X0, [X19 + 0x208]
	0x034BB970 BLR X8
	0x034BB974 LDP X30, X19, [X31 + 0x30]
	0x034BB978 ADD X31, X31, 0x40
	0x034BB97C RET
	0x034BB980 SUB X31, X31, 0x50
	0x034BB984 STP X30, X21, [X31 + 0x30]
	0x034BB988 STP X20, X19, [X31 + 0x40]
	0x034BB98C ADRP X21, 0xF23000
	0x034BB990 LDR X8, [X21 + 0x210]
	0x034BB994 MOV W19, W1
	0x034BB998 MOV W20, W0
	0x034BB99C CBNZ X8, 0x34BB9E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF24000
	006 Move X20, 0xC78000
	007 Move W8, [X21+312]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC78000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC61000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+312], W8
	022 Move X0, [X20]
	023 Move X20, 0xC61000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_IAP_ConsumePurchase_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_IAP_ConsumePurchase_Native(System.IntPtr sku)

Disassembly:
	0x034BB9A0 ADRP X12, 0xFFFFFFFFFD632000
	0x034BB9A4 LDR V0, [X12 + 0x5B8]
	0x034BB9A8 ADRP X8, 0xFFFFFFFFFD658000
	0x034BB9AC ADRP X10, 0xFFFFFFFFFD651000
	0x034BB9B0 ADD X8, X8, 0xDD2
	0x034BB9B4 MOVZ W9, 0x11
	0x034BB9B8 ADD X10, X10, 0x26B
	0x034BB9BC MOVZ W11, 0x1D
	0x034BB9C0 MOVZ W13, 0x8
	0x034BB9C4 ADD X0, X31, 0x0
	0x034BB9C8 STP X8, X9, [X31]
	0x034BB9CC STP X10, X11, [X31 + 0x10]
	0x034BB9D0 STR W13, [X31 + 0x28]
	0x034BB9D4 STR D0, [X31 + 0x20]
	0x034BB9D8 STRB W31, [X31 + 0x2C]
	0x034BB9DC BL 0x1C1729C
	0x034BB9E0 MOV X8, X0
	0x034BB9E4 STR X0, [X21 + 0x210]
	0x034BB9E8 MOV W0, W20
	0x034BB9EC MOV W1, W19
	0x034BB9F0 BLR X8
	0x034BB9F4 LDP X20, X19, [X31 + 0x40]
	0x034BB9F8 LDP X30, X21, [X31 + 0x30]
	0x034BB9FC ADD X31, X31, 0x50
	0x034BBA00 RET
	0x034BBA04 SUB X31, X31, 0x40
	0x034BBA08 STP X30, X19, [X31 + 0x30]
	0x034BBA0C ADRP X19, 0xF23000
	0x034BBA10 LDR X8, [X19 + 0x218]
	0x034BBA14 CBNZ X8, 0x34BBA5C
	0x034BBA18 ADRP X12, 0xFFFFFFFFFD632000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF24000
	006 Move X8, [X20+320]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43831296
	011 Move V0, [X12+1464]
	012 Move X8, -43675648
	013 Move X10, -43622400
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 295
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+320], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_IAP_GetProductsBySKU(System.String[] skus, System.Int32 count)

Disassembly:
	0x034BBA1C LDR V0, [X12 + 0x5B8]
	0x034BBA20 ADRP X8, 0xFFFFFFFFFD658000
	0x034BBA24 ADRP X10, 0xFFFFFFFFFD661000
	0x034BBA28 ADD X8, X8, 0xDD2
	0x034BBA2C MOVZ W9, 0x11
	0x034BBA30 ADD X10, X10, 0x15E
	0x034BBA34 MOVZ W11, 0x21
	0x034BBA38 ADD X0, X31, 0x0
	0x034BBA3C STR W31, [X31 + 0x28]
	0x034BBA40 STP X8, X9, [X31]
	0x034BBA44 STP X10, X11, [X31 + 0x10]
	0x034BBA48 STR D0, [X31 + 0x20]
	0x034BBA4C STRB W31, [X31 + 0x2C]
	0x034BBA50 BL 0x1C1729C
	0x034BBA54 MOV X8, X0
	0x034BBA58 STR X0, [X19 + 0x218]
	0x034BBA5C BLR X8
	0x034BBA60 LDP X30, X19, [X31 + 0x30]
	0x034BBA64 ADD X31, X31, 0x40
	0x034BBA68 RET
	0x034BBA6C SUB X31, X31, 0x40
	0x034BBA70 STP X30, X19, [X31 + 0x30]
	0x034BBA74 ADRP X19, 0xF23000
	0x034BBA78 LDR X8, [X19 + 0x220]
	0x034BBA7C CBNZ X8, 0x34BBAC4
	0x034BBA80 ADRP X12, 0xFFFFFFFFFD632000
	0x034BBA84 LDR V0, [X12 + 0x5B8]
	0x034BBA88 ADRP X8, 0xFFFFFFFFFD658000
	0x034BBA8C ADRP X10, 0xFFFFFFFFFD665000
	0x034BBA90 ADD X8, X8, 0xDD2
	0x034BBA94 MOVZ W9, 0x11
	0x034BBA98 ADD X10, X10, 0x15A
	0x034BBA9C MOVZ W11, 0x1C
	0x034BBAA0 ADD X0, X31, 0x0
	0x034BBAA4 STR W31, [X31 + 0x28]
	0x034BBAA8 STP X8, X9, [X31]
	0x034BBAAC STP X10, X11, [X31 + 0x10]
	0x034BBAB0 STR D0, [X31 + 0x20]
	0x034BBAB4 STRB W31, [X31 + 0x2C]
	0x034BBAB8 BL 0x1C1729C
	0x034BBABC MOV X8, X0
	0x034BBAC0 STR X0, [X19 + 0x220]
	0x034BBAC4 BLR X8
	0x034BBAC8 LDP X30, X19, [X31 + 0x30]
	0x034BBACC ADD X31, X31, 0x40
	0x034BBAD0 RET
	0x034BBAD4 SUB X31, X31, 0x50
	0x034BBAD8 STR X30, [X31 + 0x30]
	0x034BBADC STP X20, X19, [X31 + 0x40]
	0x034BBAE0 ADRP X20, 0xF23000
	0x034BBAE4 LDR X8, [X20 + 0x228]
	0x034BBAE8 MOV W19, W0
	0x034BBAEC CBNZ X8, 0x34BBB38
	0x034BBAF0 ADRP X12, 0xFFFFFFFFFD632000
	0x034BBAF4 LDR V0, [X12 + 0x5B8]
	0x034BBAF8 ADRP X8, 0xFFFFFFFFFD658000
	0x034BBAFC ADRP X10, 0xFFFFFFFFFD65C000
	0x034BBB00 ADD X8, X8, 0xDD2
	0x034BBB04 MOVZ W9, 0x11
	0x034BBB08 ADD X10, X10, 0xD1A
	0x034BBB0C MOVZ W11, 0x21
	0x034BBB10 MOVZ W13, 0x4
	0x034BBB14 ADD X0, X31, 0x0
	0x034BBB18 STP X8, X9, [X31]
	0x034BBB1C STP X10, X11, [X31 + 0x10]
	0x034BBB20 STR W13, [X31 + 0x28]
	0x034BBB24 STR D0, [X31 + 0x20]
	0x034BBB28 STRB W31, [X31 + 0x2C]
	0x034BBB2C BL 0x1C1729C
	0x034BBB30 MOV X8, X0
	0x034BBB34 STR X0, [X20 + 0x228]
	0x034BBB38 MOV W0, W19
	0x034BBB3C BLR X8
	0x034BBB40 LDP X20, X19, [X31 + 0x40]
	0x034BBB44 LDR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X22, 0xF24000
	011 Move X8, [X22+328]
	012 Move W19, W1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfEqual {49}
	016 Compare X20, 0
	017 JumpIfEqual {71}
	018 Move X23, [X20+24]
	019 Move X8, X23
	020 ShiftRight X8, 61
	021 And X8, X8, 0xFFFFFFF
	022 Add X0, X8, 8
	023 Call 0x1C17F14
	024 Move X21, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X0], X31
	027 And X23, X23, 0
	028 Add X24, X20, 32
	029 Move X25, X21
	030 Move X0, [X24+8]
	031 Call 0x1C1827C
	032 Subtract X23, X23, 1
	033 Move [X25+8], X0
	034 Move X8, [X22+328]
	035 Move X0, X21
	036 Move W1, W19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X20+24]
	039 Move X19, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 And X20, X8, 0
	042 Move X22, X21
	043 Move X0, [X22]
	044 Call 0x1C18290
	045 Subtract X20, X20, 1
	046 Move [X22+8], X31
	047 Move X0, X21
	048 Call 0x1C18290
	049 Move X12, -43831296
	050 Move V0, [X12+1464]
	051 Move X8, -43675648
	052 Move X10, -43614208
	053 Add X8, X8, 3538
	054 Move W9, 17
	055 Add X10, X10, 810
	056 Move W11, 24
	057 Move W13, 12
	058 Add X0, X31, 0
	059 Move [X31], X8
	060 Move [X31+8], X9
	061 Move [X31+16], X10
	062 Move [X31+24], X11
	063 Move [X31+40], W13
	064 Move [X31+32], D0
	065 Move [X31+44], W31
	066 Call 0x1C1829C
	067 Move X8, X0
	068 Move [X22+328], X0
	069 Compare X20, 0
	070 JumpIfNotEqual {18}
	071 Move X0, X31
	072 Move W1, W19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X19, X0
	075 Move X0, X19
	076 Move X20, [X31+96]
	077 Move X19, [X31+104]
	078 Move X22, [X31+80]
	079 Move X21, [X31+88]
	080 Move X24, [X31+64]
	081 Move X23, [X31+72]
	082 Move X30, [X31+48]
	083 Move X25, [X31+56]
	084 Add X31, X31, 112
	085 Return X0

Method: System.UInt64 ovr_IAP_GetViewerPurchases()

Disassembly:
	0x034BBB48 ADD X31, X31, 0x50
	0x034BBB4C RET
	0x034BBB50 STP X30, X23, [X31 - 0x30]!
	0x034BBB54 STP X22, X21, [X31 + 0x10]
	0x034BBB58 STP X20, X19, [X31 + 0x20]
	0x034BBB5C ADRP X23, 0xF23000
	0x034BBB60 ADRP X22, 0xC77000
	0x034BBB64 LDRB W8, [X23 + 0x230]
	0x034BBB68 LDR X22, [X22 + 0x328]
	0x034BBB6C MOV W19, W2
	0x034BBB70 MOV X20, X1
	0x034BBB74 MOV X21, X0
	0x034BBB78 TBNZ X8, 0x0, 0x34BBB9C
	0x034BBB7C ADRP X0, 0xC77000
	0x034BBB80 LDR X0, [X0 + 0x328]
	0x034BBB84 BL 0x1C16CF4
	0x034BBB88 ADRP X0, 0xC60000
	0x034BBB8C LDR X0, [X0 + 0x850]
	0x034BBB90 BL 0x1C16CF4
	0x034BBB94 MOVZ W8, 0x1
	0x034BBB98 STRB W8, [X23 + 0x230]
	0x034BBB9C LDR X0, [X22]
	0x034BBBA0 ADRP X22, 0xC60000
	0x034BBBA4 LDR W8, [X0 + 0xE0]
	0x034BBBA8 LDR X22, [X22 + 0x850]
	0x034BBBAC CBNZ W8, 0x34BBBB4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF24000
	005 Move X8, [X19+336]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43831296
	009 Move V0, [X12+1464]
	010 Move X8, -43675648
	011 Move X10, -43622400
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 319
	015 Move W11, 26
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+336], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_IAP_GetViewerPurchasesDurableCache()

Disassembly:
	0x034BBBB0 BL 0x1C16DFC
	0x034BBBB4 MOV X0, X21
	0x034BBBB8 BL 0x34B404C
	0x034BBBBC MOV X21, X0
	0x034BBBC0 MOV X0, X20
	0x034BBBC4 BL 0x34B404C
	0x034BBBC8 MOV X20, X0
	0x034BBBCC MOV X0, X21
	0x034BBBD0 MOV X1, X20
	0x034BBBD4 MOV W2, W19
	0x034BBBD8 BL 0x34BBC20
	0x034BBBDC LDR X8, [X22]
	0x034BBBE0 MOV X19, X0
	0x034BBBE4 LDR W9, [X8 + 0xE0]
	0x034BBBE8 CBNZ W9, 0x34BBBF4
	0x034BBBEC MOV X0, X8
	0x034BBBF0 BL 0x1C16DFC
	0x034BBBF4 MOV X0, X21
	0x034BBBF8 MOV X1, X31
	0x034BBBFC BL 0x32C1060
	0x034BBC00 MOV X0, X20
	0x034BBC04 MOV X1, X31
	0x034BBC08 BL 0x32C1060
	0x034BBC0C MOV X0, X19
	0x034BBC10 LDP X20, X19, [X31 + 0x20]
	0x034BBC14 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF24000
	005 Move X8, [X19+344]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43831296
	009 Move V0, [X12+1464]
	010 Move X8, -43675648
	011 Move X10, -43827200
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1942
	015 Move W11, 38
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+344], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_IAP_LaunchCheckoutFlow(System.String sku)

Disassembly:
	0x034BBC18 LDP X30, X23, [X31], #0x30
	0x034BBC1C RET
	0x034BBC20 SUB X31, X31, 0x60
	0x034BBC24 STR X30, [X31 + 0x30]
	0x034BBC28 STP X22, X21, [X31 + 0x40]
	0x034BBC2C STP X20, X19, [X31 + 0x50]
	0x034BBC30 ADRP X22, 0xF23000
	0x034BBC34 LDR X8, [X22 + 0x238]
	0x034BBC38 MOV W19, W2
	0x034BBC3C MOV X20, X1
	0x034BBC40 MOV X21, X0
	0x034BBC44 CBNZ X8, 0x34BBC90
	0x034BBC48 ADRP X12, 0xFFFFFFFFFD632000
	0x034BBC4C LDR V0, [X12 + 0x5B8]
	0x034BBC50 ADRP X8, 0xFFFFFFFFFD658000
	0x034BBC54 ADRP X10, 0xFFFFFFFFFD65E000
	0x034BBC58 ADD X8, X8, 0xDD2
	0x034BBC5C MOVZ W9, 0x11
	0x034BBC60 ADD X10, X10, 0xD6C
	0x034BBC64 MOVZ W11, 0x19
	0x034BBC68 MOVZ W13, 0x14
	0x034BBC6C ADD X0, X31, 0x0
	0x034BBC70 STP X8, X9, [X31]
	0x034BBC74 STP X10, X11, [X31 + 0x10]
	0x034BBC78 STR W13, [X31 + 0x28]
	0x034BBC7C STR D0, [X31 + 0x20]
	0x034BBC80 STRB W31, [X31 + 0x2C]
	0x034BBC84 BL 0x1C1729C
	0x034BBC88 MOV X8, X0
	0x034BBC8C STR X0, [X22 + 0x238]
	0x034BBC90 MOV X0, X21
	0x034BBC94 MOV X1, X20
	0x034BBC98 MOV W2, W19
	0x034BBC9C BLR X8
	0x034BBCA0 LDP X20, X19, [X31 + 0x50]
	0x034BBCA4 LDP X22, X21, [X31 + 0x40]
	0x034BBCA8 LDR X30, [X31 + 0x30]
	0x034BBCAC ADD X31, X31, 0x60
	0x034BBCB0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF24000
	006 Move X20, 0xC78000
	007 Move W8, [X21+352]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC78000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC61000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+352], W8
	022 Move X0, [X20]
	023 Move X20, 0xC61000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_IAP_LaunchCheckoutFlow_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_IAP_LaunchCheckoutFlow_Native(System.IntPtr sku)

Disassembly:
	0x034BBCB4 SUB X31, X31, 0x50
	0x034BBCB8 STR X30, [X31 + 0x30]
	0x034BBCBC STP X20, X19, [X31 + 0x40]
	0x034BBCC0 ADRP X20, 0xF23000
	0x034BBCC4 LDR X8, [X20 + 0x240]
	0x034BBCC8 MOV X19, X0
	0x034BBCCC CBNZ X8, 0x34BBD18
	0x034BBCD0 ADRP X12, 0xFFFFFFFFFD632000
	0x034BBCD4 LDR V0, [X12 + 0x5B8]
	0x034BBCD8 ADRP X8, 0xFFFFFFFFFD658000
	0x034BBCDC ADRP X10, 0xFFFFFFFFFD667000
	0x034BBCE0 ADD X8, X8, 0xDD2
	0x034BBCE4 MOVZ W9, 0x11
	0x034BBCE8 ADD X10, X10, 0x35F
	0x034BBCEC MOVZ W11, 0x13
	0x034BBCF0 MOVZ W13, 0x8
	0x034BBCF4 ADD X0, X31, 0x0
	0x034BBCF8 STP X8, X9, [X31]
	0x034BBCFC STP X10, X11, [X31 + 0x10]
	0x034BBD00 STR W13, [X31 + 0x28]
	0x034BBD04 STR D0, [X31 + 0x20]
	0x034BBD08 STRB W31, [X31 + 0x2C]
	0x034BBD0C BL 0x1C1729C
	0x034BBD10 MOV X8, X0
	0x034BBD14 STR X0, [X20 + 0x240]
	0x034BBD18 MOV X0, X19
	0x034BBD1C BLR X8
	0x034BBD20 LDP X20, X19, [X31 + 0x40]
	0x034BBD24 LDR X30, [X31 + 0x30]
	0x034BBD28 ADD X31, X31, 0x50
	0x034BBD2C RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF24000
	006 Move X8, [X20+360]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43831296
	011 Move V0, [X12+1464]
	012 Move X8, -43675648
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1146
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+360], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_LanguagePack_GetCurrent()

Disassembly:
	0x034BBD30 SUB X31, X31, 0x50
	0x034BBD34 STR X30, [X31 + 0x30]
	0x034BBD38 STP X20, X19, [X31 + 0x40]
	0x034BBD3C ADRP X20, 0xF23000
	0x034BBD40 LDR X8, [X20 + 0x248]
	0x034BBD44 MOV X19, X0
	0x034BBD48 CBNZ X8, 0x34BBD94
	0x034BBD4C ADRP X12, 0xFFFFFFFFFD632000
	0x034BBD50 LDR V0, [X12 + 0x5B8]
	0x034BBD54 ADRP X8, 0xFFFFFFFFFD658000
	0x034BBD58 ADRP X10, 0xFFFFFFFFFD64D000
	0x034BBD5C ADD X8, X8, 0xDD2
	0x034BBD60 MOVZ W9, 0x11
	0x034BBD64 ADD X10, X10, 0x495
	0x034BBD68 MOVZ W11, 0x16
	0x034BBD6C MOVZ W13, 0x8
	0x034BBD70 ADD X0, X31, 0x0
	0x034BBD74 STP X8, X9, [X31]
	0x034BBD78 STP X10, X11, [X31 + 0x10]
	0x034BBD7C STR W13, [X31 + 0x28]
	0x034BBD80 STR D0, [X31 + 0x20]
	0x034BBD84 STRB W31, [X31 + 0x2C]
	0x034BBD88 BL 0x1C1729C
	0x034BBD8C MOV X8, X0
	0x034BBD90 STR X0, [X20 + 0x248]
	0x034BBD94 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF24000
	005 Move X8, [X19+368]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43831296
	009 Move V0, [X12+1464]
	010 Move X8, -43675648
	011 Move X10, -43614208
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 835
	015 Move W11, 27
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+368], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_LanguagePack_SetCurrent(System.String tag)

Disassembly:
	0x034BBD98 BLR X8
	0x034BBD9C LDP X20, X19, [X31 + 0x40]
	0x034BBDA0 LDR X30, [X31 + 0x30]
	0x034BBDA4 ADD X31, X31, 0x50
	0x034BBDA8 RET
	0x034BBDAC SUB X31, X31, 0x50
	0x034BBDB0 STR X30, [X31 + 0x30]
	0x034BBDB4 STP X20, X19, [X31 + 0x40]
	0x034BBDB8 ADRP X20, 0xF23000
	0x034BBDBC LDR X8, [X20 + 0x250]
	0x034BBDC0 MOV X19, X0
	0x034BBDC4 CBNZ X8, 0x34BBE10
	0x034BBDC8 ADRP X12, 0xFFFFFFFFFD632000
	0x034BBDCC LDR V0, [X12 + 0x5B8]
	0x034BBDD0 ADRP X8, 0xFFFFFFFFFD658000
	0x034BBDD4 ADRP X10, 0xFFFFFFFFFD670000
	0x034BBDD8 ADD X8, X8, 0xDD2
	0x034BBDDC MOVZ W9, 0x11
	0x034BBDE0 ADD X10, X10, 0xB8B
	0x034BBDE4 MOVZ W11, 0x17
	0x034BBDE8 MOVZ W13, 0x8
	0x034BBDEC ADD X0, X31, 0x0
	0x034BBDF0 STP X8, X9, [X31]
	0x034BBDF4 STP X10, X11, [X31 + 0x10]
	0x034BBDF8 STR W13, [X31 + 0x28]
	0x034BBDFC STR D0, [X31 + 0x20]
	0x034BBE00 STRB W31, [X31 + 0x2C]
	0x034BBE04 BL 0x1C1729C
	0x034BBE08 MOV X8, X0
	0x034BBE0C STR X0, [X20 + 0x250]
	0x034BBE10 MOV X0, X19
	0x034BBE14 BLR X8
	0x034BBE18 LDP X20, X19, [X31 + 0x40]
	0x034BBE1C LDR X30, [X31 + 0x30]
	0x034BBE20 ADD X31, X31, 0x50
	0x034BBE24 RET
	0x034BBE28 SUB X31, X31, 0x50
	0x034BBE2C STR X30, [X31 + 0x30]
	0x034BBE30 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF24000
	006 Move X20, 0xC78000
	007 Move W8, [X21+376]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC78000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC61000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+376], W8
	022 Move X0, [X20]
	023 Move X20, 0xC61000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_LanguagePack_SetCurrent_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_LanguagePack_SetCurrent_Native(System.IntPtr tag)

Disassembly:
	0x034BBE34 ADRP X20, 0xF23000
	0x034BBE38 LDR X8, [X20 + 0x258]
	0x034BBE3C MOV X19, X0
	0x034BBE40 CBNZ X8, 0x34BBE8C
	0x034BBE44 ADRP X12, 0xFFFFFFFFFD632000
	0x034BBE48 LDR V0, [X12 + 0x5B8]
	0x034BBE4C ADRP X8, 0xFFFFFFFFFD658000
	0x034BBE50 ADRP X10, 0xFFFFFFFFFD647000
	0x034BBE54 ADD X8, X8, 0xDD2
	0x034BBE58 MOVZ W9, 0x11
	0x034BBE5C ADD X10, X10, 0x261
	0x034BBE60 MOVZ W11, 0x1E
	0x034BBE64 MOVZ W13, 0x8
	0x034BBE68 ADD X0, X31, 0x0
	0x034BBE6C STP X8, X9, [X31]
	0x034BBE70 STP X10, X11, [X31 + 0x10]
	0x034BBE74 STR W13, [X31 + 0x28]
	0x034BBE78 STR D0, [X31 + 0x20]
	0x034BBE7C STRB W31, [X31 + 0x2C]
	0x034BBE80 BL 0x1C1729C
	0x034BBE84 MOV X8, X0
	0x034BBE88 STR X0, [X20 + 0x258]
	0x034BBE8C MOV X0, X19
	0x034BBE90 BLR X8
	0x034BBE94 LDP X20, X19, [X31 + 0x40]
	0x034BBE98 LDR X30, [X31 + 0x30]
	0x034BBE9C ADD X31, X31, 0x50
	0x034BBEA0 RET
	0x034BBEA4 SUB X31, X31, 0x40
	0x034BBEA8 STP X30, X19, [X31 + 0x30]
	0x034BBEAC ADRP X19, 0xF23000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF24000
	006 Move X8, [X20+384]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43831296
	011 Move V0, [X12+1464]
	012 Move X8, -43675648
	013 Move X10, -43802624
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1466
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+384], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Leaderboard_Get(System.String leaderboardName)

Disassembly:
	0x034BBEB0 LDR X8, [X19 + 0x260]
	0x034BBEB4 CBNZ X8, 0x34BBEFC
	0x034BBEB8 ADRP X12, 0xFFFFFFFFFD632000
	0x034BBEBC LDR V0, [X12 + 0x5B8]
	0x034BBEC0 ADRP X8, 0xFFFFFFFFFD658000
	0x034BBEC4 ADRP X10, 0xFFFFFFFFFD66B000
	0x034BBEC8 ADD X8, X8, 0xDD2
	0x034BBECC MOVZ W9, 0x11
	0x034BBED0 ADD X10, X10, 0x29A
	0x034BBED4 MOVZ W11, 0x25
	0x034BBED8 ADD X0, X31, 0x0
	0x034BBEDC STR W31, [X31 + 0x28]
	0x034BBEE0 STP X8, X9, [X31]
	0x034BBEE4 STP X10, X11, [X31 + 0x10]
	0x034BBEE8 STR D0, [X31 + 0x20]
	0x034BBEEC STRB W31, [X31 + 0x2C]
	0x034BBEF0 BL 0x1C1729C
	0x034BBEF4 MOV X8, X0
	0x034BBEF8 STR X0, [X19 + 0x260]
	0x034BBEFC BLR X8
	0x034BBF00 LDP X30, X19, [X31 + 0x30]
	0x034BBF04 ADD X31, X31, 0x40
	0x034BBF08 RET
	0x034BBF0C SUB X31, X31, 0x60
	0x034BBF10 STP X30, X23, [X31 + 0x30]
	0x034BBF14 STP X22, X21, [X31 + 0x40]
	0x034BBF18 STP X20, X19, [X31 + 0x50]
	0x034BBF1C ADRP X23, 0xF23000
	0x034BBF20 LDR X8, [X23 + 0x268]
	0x034BBF24 MOV X19, X3
	0x034BBF28 MOV X20, X2
	0x034BBF2C MOV X22, X1
	0x034BBF30 MOV X21, X0
	0x034BBF34 CBNZ X8, 0x34BBF80
	0x034BBF38 ADRP X12, 0xFFFFFFFFFD632000
	0x034BBF3C LDR V0, [X12 + 0x5B8]
	0x034BBF40 ADRP X8, 0xFFFFFFFFFD658000
	0x034BBF44 ADRP X10, 0xFFFFFFFFFD667000
	0x034BBF48 ADD X8, X8, 0xDD2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF24000
	006 Move X20, 0xC78000
	007 Move W8, [X21+392]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC78000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC61000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+392], W8
	022 Move X0, [X20]
	023 Move X20, 0xC61000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_Leaderboard_Get_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_Leaderboard_Get_Native(System.IntPtr leaderboardName)

Disassembly:
	0x034BBF4C MOVZ W9, 0x11
	0x034BBF50 ADD X10, X10, 0x373
	0x034BBF54 MOVZ W11, 0x1E
	0x034BBF58 MOVZ W13, 0x20
	0x034BBF5C ADD X0, X31, 0x0
	0x034BBF60 STP X8, X9, [X31]
	0x034BBF64 STP X10, X11, [X31 + 0x10]
	0x034BBF68 STR W13, [X31 + 0x28]
	0x034BBF6C STR D0, [X31 + 0x20]
	0x034BBF70 STRB W31, [X31 + 0x2C]
	0x034BBF74 BL 0x1C1729C
	0x034BBF78 MOV X8, X0
	0x034BBF7C STR X0, [X23 + 0x268]
	0x034BBF80 ADD X9, X22, 0x20
	0x034BBF84 CMP X22, 0x0
	0x034BBF88 ADD X10, X20, 0x20
	0x034BBF8C CSEL X1, X31, X9, EQ
	0x034BBF90 CMP X20, 0x0
	0x034BBF94 CSEL X2, X31, X10, EQ
	0x034BBF98 MOV X0, X21
	0x034BBF9C MOV X3, X19
	0x034BBFA0 BLR X8
	0x034BBFA4 LDP X20, X19, [X31 + 0x50]
	0x034BBFA8 LDP X22, X21, [X31 + 0x40]
	0x034BBFAC LDP X30, X23, [X31 + 0x30]
	0x034BBFB0 ADD X31, X31, 0x60
	0x034BBFB4 RET
	0x034BBFB8 STP X30, X25, [X31 - 0x40]!
	0x034BBFBC STP X24, X23, [X31 + 0x10]
	0x034BBFC0 STP X22, X21, [X31 + 0x20]
	0x034BBFC4 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF24000
	006 Move X8, [X20+400]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43831296
	011 Move V0, [X12+1464]
	012 Move X8, -43675648
	013 Move X10, -43659264
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3334
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+400], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Leaderboard_GetEntries(System.String leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)

Disassembly:
	0x034BBFC8 ADRP X25, 0xF23000
	0x034BBFCC ADRP X24, 0xC77000
	0x034BBFD0 LDRB W8, [X25 + 0x270]
	0x034BBFD4 LDR X24, [X24 + 0x328]
	0x034BBFD8 MOV X19, X4
	0x034BBFDC MOV X20, X3
	0x034BBFE0 MOV X21, X2
	0x034BBFE4 MOV X23, X1
	0x034BBFE8 MOV X22, X0
	0x034BBFEC TBNZ X8, 0x0, 0x34BC010
	0x034BBFF0 ADRP X0, 0xC77000
	0x034BBFF4 LDR X0, [X0 + 0x328]
	0x034BBFF8 BL 0x1C16CF4
	0x034BBFFC ADRP X0, 0xC60000
	0x034BC000 LDR X0, [X0 + 0x850]
	0x034BC004 BL 0x1C16CF4
	0x034BC008 MOVZ W8, 0x1
	0x034BC00C STRB W8, [X25 + 0x270]
	0x034BC010 LDR X0, [X24]
	0x034BC014 ADRP X24, 0xC5F000
	0x034BC018 LDR W8, [X0 + 0xE0]
	0x034BC01C LDR X24, [X24 + 0x850]
	0x034BC020 CBNZ W8, 0x34BC028
	0x034BC024 BL 0x1C16DFC
	0x034BC028 MOV X0, X23
	0x034BC02C BL 0x34B404C
	0x034BC030 MOV X23, X0
	0x034BC034 MOV X0, X22
	0x034BC038 MOV X1, X23
	0x034BC03C MOV X2, X21
	0x034BC040 MOV X3, X20
	0x034BC044 MOV X4, X19
	0x034BC048 BL 0x34BC088
	0x034BC04C LDR X8, [X24]
	0x034BC050 MOV X19, X0
	0x034BC054 LDR W9, [X8 + 0xE0]
	0x034BC058 CBNZ W9, 0x34BC064
	0x034BC05C MOV X0, X8
	0x034BC060 BL 0x1C16DFC
	0x034BC064 MOV X0, X23
	0x034BC068 MOV X1, X31
	0x034BC06C BL 0x32C1060
	0x034BC070 MOV X0, X19
	0x034BC074 LDP X20, X19, [X31 + 0x30]
	0x034BC078 LDP X22, X21, [X31 + 0x20]
	0x034BC07C LDP X24, X23, [X31 + 0x10]
	0x034BC080 LDP X30, X25, [X31], #0x40
	0x034BC084 RET
	0x034BC088 SUB X31, X31, 0x70

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xF24000
	009 Move X23, 0xC78000
	010 Move W8, [X24+408]
	011 Move X23, [X23+808]
	012 Move W19, W3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xC78000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0xC60000
	024 Move X0, [X0+2128]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+408], W8
	028 Move X0, [X23]
	029 Move X23, 0xC60000
	030 Move W8, [X0+224]
	031 Move X23, [X23+2128]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Call CAPI.StringToNative, X0
	037 Move W1, W21
	038 Move W2, W20
	039 Move W3, W19
	040 Move X22, X0
	041 Call CAPI.ovr_Leaderboard_GetEntries_Native, X0, X1, X2, X3
	042 Move X8, [X23]
	043 Move X19, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X22
	050 Move X1, X31
	051 Call Marshal.FreeCoTaskMem, X0
	052 Move X0, X19
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Return X0

Method: System.UInt64 ovr_Leaderboard_GetEntries_Native(System.IntPtr leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)

Disassembly:
	0x034BC08C STR X30, [X31 + 0x30]
	0x034BC090 STP X24, X23, [X31 + 0x40]
	0x034BC094 STP X22, X21, [X31 + 0x50]
	0x034BC098 STP X20, X19, [X31 + 0x60]
	0x034BC09C ADRP X24, 0xF22000
	0x034BC0A0 LDR X8, [X24 + 0x278]
	0x034BC0A4 MOV X19, X4
	0x034BC0A8 MOV X21, X3
	0x034BC0AC MOV X23, X2
	0x034BC0B0 MOV X20, X1
	0x034BC0B4 MOV X22, X0
	0x034BC0B8 CBNZ X8, 0x34BC104
	0x034BC0BC ADRP X12, 0xFFFFFFFFFD631000
	0x034BC0C0 LDR V0, [X12 + 0x5B8]
	0x034BC0C4 ADRP X8, 0xFFFFFFFFFD657000
	0x034BC0C8 ADRP X10, 0xFFFFFFFFFD63C000
	0x034BC0CC ADD X8, X8, 0xDD2
	0x034BC0D0 MOVZ W9, 0x11
	0x034BC0D4 ADD X10, X10, 0x63D
	0x034BC0D8 MOVZ W11, 0x23
	0x034BC0DC MOVZ W13, 0x28
	0x034BC0E0 ADD X0, X31, 0x0
	0x034BC0E4 STP X8, X9, [X31]
	0x034BC0E8 STP X10, X11, [X31 + 0x10]
	0x034BC0EC STR W13, [X31 + 0x28]
	0x034BC0F0 STR D0, [X31 + 0x20]
	0x034BC0F4 STRB W31, [X31 + 0x2C]
	0x034BC0F8 BL 0x1C1729C
	0x034BC0FC MOV X8, X0
	0x034BC100 STR X0, [X24 + 0x278]
	0x034BC104 ADD X9, X23, 0x20
	0x034BC108 CMP X23, 0x0
	0x034BC10C ADD X10, X21, 0x20
	0x034BC110 CSEL X2, X31, X9, EQ
	0x034BC114 CMP X21, 0x0
	0x034BC118 CSEL X3, X31, X10, EQ
	0x034BC11C MOV X0, X22
	0x034BC120 MOV X1, X20
	0x034BC124 MOV X4, X19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xF23000
	009 Move X8, [X23+416]
	010 Move W19, W3
	011 Move W20, W2
	012 Move W21, W1
	013 Move X22, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {36}
	016 Move X12, -43835392
	017 Move V0, [X12+1464]
	018 Move X8, -43679744
	019 Move X10, -43708416
	020 Add X8, X8, 3538
	021 Move W9, 17
	022 Add X10, X10, 592
	023 Move W11, 26
	024 Move W13, 20
	025 Add X0, X31, 0
	026 Move [X31], X8
	027 Move [X31+8], X9
	028 Move [X31+16], X10
	029 Move [X31+24], X11
	030 Move [X31+40], W13
	031 Move [X31+32], D0
	032 Move [X31+44], W31
	033 Call 0x1C1829C
	034 Move X8, X0
	035 Move [X23+416], X0
	036 Move X0, X22
	037 Move W1, W21
	038 Move W2, W20
	039 Move W3, W19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, [X31+80]
	042 Move X19, [X31+88]
	043 Move X22, [X31+64]
	044 Move X21, [X31+72]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Add X31, X31, 96
	048 Return X0

Method: System.UInt64 ovr_Leaderboard_GetEntriesAfterRank(System.String leaderboardName, System.Int32 limit, System.UInt64 afterRank)

Disassembly:
	0x034BC128 BLR X8
	0x034BC12C LDP X20, X19, [X31 + 0x60]
	0x034BC130 LDP X22, X21, [X31 + 0x50]
	0x034BC134 LDP X24, X23, [X31 + 0x40]
	0x034BC138 LDR X30, [X31 + 0x30]
	0x034BC13C ADD X31, X31, 0x70
	0x034BC140 RET
	0x034BC144 STR X30, [X31 - 0x40]!
	0x034BC148 STP X24, X23, [X31 + 0x10]
	0x034BC14C STP X22, X21, [X31 + 0x20]
	0x034BC150 STP X20, X19, [X31 + 0x30]
	0x034BC154 ADRP X24, 0xF22000
	0x034BC158 ADRP X23, 0xC76000
	0x034BC15C LDRB W8, [X24 + 0x280]
	0x034BC160 LDR X23, [X23 + 0x328]
	0x034BC164 MOV W19, W3
	0x034BC168 MOV X21, X2
	0x034BC16C MOV X22, X1
	0x034BC170 MOV X20, X0
	0x034BC174 TBNZ X8, 0x0, 0x34BC198
	0x034BC178 ADRP X0, 0xC76000
	0x034BC17C LDR X0, [X0 + 0x328]
	0x034BC180 BL 0x1C16CF4
	0x034BC184 ADRP X0, 0xC5F000
	0x034BC188 LDR X0, [X0 + 0x850]
	0x034BC18C BL 0x1C16CF4
	0x034BC190 MOVZ W8, 0x1
	0x034BC194 STRB W8, [X24 + 0x280]
	0x034BC198 LDR X0, [X23]
	0x034BC19C ADRP X23, 0xC5F000
	0x034BC1A0 LDR W8, [X0 + 0xE0]
	0x034BC1A4 LDR X23, [X23 + 0x850]
	0x034BC1A8 CBNZ W8, 0x34BC1B0
	0x034BC1AC BL 0x1C16DFC
	0x034BC1B0 MOV X0, X22
	0x034BC1B4 BL 0x34B404C
	0x034BC1B8 MOV X22, X0
	0x034BC1BC MOV X0, X21
	0x034BC1C0 BL 0x34B404C
	0x034BC1C4 MOV X21, X0
	0x034BC1C8 AND W3, W19, 0x1
	0x034BC1CC MOV X0, X20
	0x034BC1D0 MOV X1, X22
	0x034BC1D4 MOV X2, X21
	0x034BC1D8 BL 0x34BC224

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF23000
	008 Move X22, 0xC77000
	009 Move W8, [X23+424]
	010 Move X22, [X22+808]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC77000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0xC60000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+424], W8
	026 Move X0, [X22]
	027 Move X22, 0xC60000
	028 Move W8, [X0+224]
	029 Move X22, [X22+2128]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Call CAPI.StringToNative, X0
	035 Move W1, W20
	036 Move X2, X19
	037 Move X21, X0
	038 Call CAPI.ovr_Leaderboard_GetEntriesAfterRank_Native, X0, X1, X2
	039 Move X8, [X22]
	040 Move X19, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X31
	048 Call Marshal.FreeCoTaskMem, X0
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return X0

Method: System.UInt64 ovr_Leaderboard_GetEntriesAfterRank_Native(System.IntPtr leaderboardName, System.Int32 limit, System.UInt64 afterRank)

Disassembly:
	0x034BC1DC LDR X8, [X23]
	0x034BC1E0 MOV X19, X0
	0x034BC1E4 LDR W9, [X8 + 0xE0]
	0x034BC1E8 CBNZ W9, 0x34BC1F4
	0x034BC1EC MOV X0, X8
	0x034BC1F0 BL 0x1C16DFC
	0x034BC1F4 MOV X0, X22
	0x034BC1F8 MOV X1, X31
	0x034BC1FC BL 0x32C1060
	0x034BC200 MOV X0, X21
	0x034BC204 MOV X1, X31
	0x034BC208 BL 0x32C1060
	0x034BC20C MOV X0, X19
	0x034BC210 LDP X20, X19, [X31 + 0x30]
	0x034BC214 LDP X22, X21, [X31 + 0x20]
	0x034BC218 LDP X24, X23, [X31 + 0x10]
	0x034BC21C LDR X30, [X31], #0x40
	0x034BC220 RET
	0x034BC224 SUB X31, X31, 0x60
	0x034BC228 STP X30, X23, [X31 + 0x30]
	0x034BC22C STP X22, X21, [X31 + 0x40]
	0x034BC230 STP X20, X19, [X31 + 0x50]
	0x034BC234 ADRP X23, 0xF22000
	0x034BC238 LDR X8, [X23 + 0x288]
	0x034BC23C MOV W21, W3
	0x034BC240 MOV X19, X2
	0x034BC244 MOV X20, X1
	0x034BC248 MOV X22, X0
	0x034BC24C CBNZ X8, 0x34BC298
	0x034BC250 ADRP X12, 0xFFFFFFFFFD631000
	0x034BC254 LDR V0, [X12 + 0x5B8]
	0x034BC258 ADRP X8, 0xFFFFFFFFFD657000
	0x034BC25C ADRP X10, 0xFFFFFFFFFD656000
	0x034BC260 ADD X8, X8, 0xDD2
	0x034BC264 MOVZ W9, 0x11
	0x034BC268 ADD X10, X10, 0x28
	0x034BC26C MOVZ W11, 0x1D

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF23000
	008 Move X8, [X22+432]
	009 Move X19, X2
	010 Move W20, W1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43835392
	015 Move V0, [X12+1464]
	016 Move X8, -43679744
	017 Move X10, -43732992
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1349
	021 Move W11, 35
	022 Move W13, 20
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+432], X0
	034 Move X0, X21
	035 Move W1, W20
	036 Move X2, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 Add X31, X31, 96
	044 Return X0

Method: System.UInt64 ovr_Leaderboard_GetEntriesByIds(System.String leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)

Disassembly:
	0x034BC270 MOVZ W13, 0x1C
	0x034BC274 ADD X0, X31, 0x0
	0x034BC278 STP X8, X9, [X31]
	0x034BC27C STP X10, X11, [X31 + 0x10]
	0x034BC280 STR W13, [X31 + 0x28]
	0x034BC284 STR D0, [X31 + 0x20]
	0x034BC288 STRB W31, [X31 + 0x2C]
	0x034BC28C BL 0x1C1729C
	0x034BC290 MOV X8, X0
	0x034BC294 STR X0, [X23 + 0x288]
	0x034BC298 AND W3, W21, 0x1
	0x034BC29C MOV X0, X22
	0x034BC2A0 MOV X1, X20
	0x034BC2A4 MOV X2, X19
	0x034BC2A8 BLR X8
	0x034BC2AC LDP X20, X19, [X31 + 0x50]
	0x034BC2B0 LDP X22, X21, [X31 + 0x40]
	0x034BC2B4 LDP X30, X23, [X31 + 0x30]
	0x034BC2B8 ADD X31, X31, 0x60
	0x034BC2BC RET
	0x034BC2C0 STR X30, [X31 - 0x30]!
	0x034BC2C4 STP X22, X21, [X31 + 0x10]
	0x034BC2C8 STP X20, X19, [X31 + 0x20]
	0x034BC2CC ADRP X22, 0xF22000
	0x034BC2D0 ADRP X21, 0xC76000
	0x034BC2D4 LDRB W8, [X22 + 0x290]
	0x034BC2D8 LDR X21, [X21 + 0x328]
	0x034BC2DC MOV X20, X1
	0x034BC2E0 MOV X19, X0
	0x034BC2E4 TBNZ X8, 0x0, 0x34BC308
	0x034BC2E8 ADRP X0, 0xC76000
	0x034BC2EC LDR X0, [X0 + 0x328]
	0x034BC2F0 BL 0x1C16CF4
	0x034BC2F4 ADRP X0, 0xC5F000
	0x034BC2F8 LDR X0, [X0 + 0x850]
	0x034BC2FC BL 0x1C16CF4
	0x034BC300 MOVZ W8, 0x1
	0x034BC304 STRB W8, [X22 + 0x290]
	0x034BC308 LDR X0, [X21]
	0x034BC30C ADRP X21, 0xC5F000
	0x034BC310 LDR W8, [X0 + 0xE0]
	0x034BC314 LDR X21, [X21 + 0x850]
	0x034BC318 CBNZ W8, 0x34BC320
	0x034BC31C BL 0x1C16DFC
	0x034BC320 MOV X0, X20
	0x034BC324 BL 0x34B404C
	0x034BC328 MOV X20, X0
	0x034BC32C MOV X0, X19
	0x034BC330 MOV X1, X20
	0x034BC334 BL 0x34BC370
	0x034BC338 LDR X8, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xF23000
	010 Move X24, 0xC77000
	011 Move W8, [X25+440]
	012 Move X24, [X24+808]
	013 Move W19, W4
	014 Move X20, X3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xC77000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0xC60000
	026 Move X0, [X0+2128]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+440], W8
	030 Move X0, [X24]
	031 Move X24, 0xC60000
	032 Move W8, [X0+224]
	033 Move X24, [X24+2128]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X23
	038 Call CAPI.StringToNative, X0
	039 Move W1, W22
	040 Move W2, W21
	041 Move X3, X20
	042 Move W4, W19
	043 Move X23, X0
	044 Call CAPI.ovr_Leaderboard_GetEntriesByIds_Native, X0, X1, X2, X3, X4
	045 Move X8, [X24]
	046 Move X19, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X23
	053 Move X1, X31
	054 Call Marshal.FreeCoTaskMem, X0
	055 Move X0, X19
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Return X0

Method: System.UInt64 ovr_Leaderboard_GetEntriesByIds_Native(System.IntPtr leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)

Disassembly:
	0x034BC33C MOV X19, X0
	0x034BC340 LDR W9, [X8 + 0xE0]
	0x034BC344 CBNZ W9, 0x34BC350
	0x034BC348 MOV X0, X8
	0x034BC34C BL 0x1C16DFC
	0x034BC350 MOV X0, X20
	0x034BC354 MOV X1, X31
	0x034BC358 BL 0x32C1060
	0x034BC35C MOV X0, X19
	0x034BC360 LDP X20, X19, [X31 + 0x20]
	0x034BC364 LDP X22, X21, [X31 + 0x10]
	0x034BC368 LDR X30, [X31], #0x30
	0x034BC36C RET
	0x034BC370 SUB X31, X31, 0x50
	0x034BC374 STP X30, X21, [X31 + 0x30]
	0x034BC378 STP X20, X19, [X31 + 0x40]
	0x034BC37C ADRP X21, 0xF22000
	0x034BC380 LDR X8, [X21 + 0x298]
	0x034BC384 MOV X19, X1
	0x034BC388 MOV X20, X0
	0x034BC38C CBNZ X8, 0x34BC3D8
	0x034BC390 ADRP X12, 0xFFFFFFFFFD631000
	0x034BC394 LDR V0, [X12 + 0x5B8]
	0x034BC398 ADRP X8, 0xFFFFFFFFFD657000
	0x034BC39C ADRP X10, 0xFFFFFFFFFD636000
	0x034BC3A0 ADD X8, X8, 0xDD2
	0x034BC3A4 MOVZ W9, 0x11
	0x034BC3A8 ADD X10, X10, 0x6DA
	0x034BC3AC MOVZ W11, 0x18
	0x034BC3B0 MOVZ W13, 0x10
	0x034BC3B4 ADD X0, X31, 0x0
	0x034BC3B8 STP X8, X9, [X31]
	0x034BC3BC STP X10, X11, [X31 + 0x10]
	0x034BC3C0 STR W13, [X31 + 0x28]
	0x034BC3C4 STR D0, [X31 + 0x20]
	0x034BC3C8 STRB W31, [X31 + 0x2C]
	0x034BC3CC BL 0x1C1729C
	0x034BC3D0 MOV X8, X0
	0x034BC3D4 STR X0, [X21 + 0x298]
	0x034BC3D8 MOV X0, X20
	0x034BC3DC MOV X1, X19
	0x034BC3E0 BLR X8
	0x034BC3E4 LDP X20, X19, [X31 + 0x40]
	0x034BC3E8 LDP X30, X21, [X31 + 0x30]
	0x034BC3EC ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X24, 0xF23000
	010 Move X8, [X24+448]
	011 Move W19, W4
	012 Move X22, X3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X23, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {38}
	018 Move X12, -43835392
	019 Move V0, [X12+1464]
	020 Move X8, -43679744
	021 Move X10, -43823104
	022 Add X8, X8, 3538
	023 Move W9, 17
	024 Add X10, X10, 570
	025 Move W11, 31
	026 Move W13, 28
	027 Add X0, X31, 0
	028 Move [X31], X8
	029 Move [X31+8], X9
	030 Move [X31+16], X10
	031 Move [X31+24], X11
	032 Move [X31+40], W13
	033 Move [X31+32], D0
	034 Move [X31+44], W31
	035 Call 0x1C1829C
	036 Move X8, X0
	037 Move [X24+448], X0
	038 Add X9, X22, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Move X0, X23
	042 Move W1, W21
	043 Move W2, W20
	044 Move W4, W19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X20, [X31+96]
	047 Move X19, [X31+104]
	048 Move X22, [X31+80]
	049 Move X21, [X31+88]
	050 Move X24, [X31+64]
	051 Move X23, [X31+72]
	052 Move X30, [X31+48]
	053 Add X31, X31, 112
	054 Return X0

Method: System.UInt64 ovr_Leaderboard_GetNextEntries(System.IntPtr handle)

Disassembly:
	0x034BC3F0 RET
	0x034BC3F4 SUB X31, X31, 0x80
	0x034BC3F8 STR X30, [X31 + 0x30]
	0x034BC3FC STP X26, X25, [X31 + 0x40]
	0x034BC400 STP X24, X23, [X31 + 0x50]
	0x034BC404 STP X22, X21, [X31 + 0x60]
	0x034BC408 STP X20, X19, [X31 + 0x70]
	0x034BC40C ADRP X23, 0xF22000
	0x034BC410 LDR X8, [X23 + 0x2A0]
	0x034BC414 MOV X19, X2
	0x034BC418 MOV X20, X1
	0x034BC41C MOV X21, X0
	0x034BC420 CBZ X8, 0x34BC4B4
	0x034BC424 CBZ X20, 0x34BC500
	0x034BC428 LDR X24, [X20 + 0x18]
	0x034BC42C UBFM X8, X24, 0x3D, 0x3C
	0x034BC430 ADD X0, X8, 0x8
	0x034BC434 BL 0x1C16F14
	0x034BC438 MOV X22, X0
	0x034BC43C CMP W24, 0x1
	0x034BC440 STR X31, [X0, X24, LSL #3]
	0x034BC444 B.LT 0x34BC468
	0x034BC448 AND X24, X24, 0x0
	0x034BC44C ADD X25, X20, 0x20
	0x034BC450 MOV X26, X22
	0x034BC454 LDR X0, [X25], #0x8
	0x034BC458 BL 0x1C1727C
	0x034BC45C SUBS X24, X24, 0x1
	0x034BC460 STR X0, [X26], #0x8
	0x034BC464 B.NE 0x34BC454
	0x034BC468 LDR X8, [X23 + 0x2A0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF23000
	006 Move X8, [X20+456]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43835392
	011 Move V0, [X12+1464]
	012 Move X8, -43679744
	013 Move X10, -43581440
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2924
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+456], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Leaderboard_GetPreviousEntries(System.IntPtr handle)

Disassembly:
	0x034BC46C MOV X0, X21
	0x034BC470 MOV X1, X22
	0x034BC474 MOV X2, X19
	0x034BC478 BLR X8
	0x034BC47C LDR X8, [X20 + 0x18]
	0x034BC480 MOV X19, X0
	0x034BC484 CMP W8, 0x1
	0x034BC488 B.LT 0x34BC4A8
	0x034BC48C AND X20, X8, 0x0
	0x034BC490 MOV X21, X22
	0x034BC494 LDR X0, [X21]
	0x034BC498 BL 0x1C17290
	0x034BC49C SUBS X20, X20, 0x1
	0x034BC4A0 STR X31, [X21], #0x8
	0x034BC4A4 B.NE 0x34BC494
	0x034BC4A8 MOV X0, X22
	0x034BC4AC BL 0x1C17290
	0x034BC4B0 B 0x34BC514
	0x034BC4B4 ADRP X12, 0xFFFFFFFFFD631000
	0x034BC4B8 LDR V0, [X12 + 0x5B8]
	0x034BC4BC ADRP X8, 0xFFFFFFFFFD657000
	0x034BC4C0 ADRP X10, 0xFFFFFFFFFD646000
	0x034BC4C4 ADD X8, X8, 0xDD2
	0x034BC4C8 MOVZ W9, 0x11
	0x034BC4CC ADD X10, X10, 0x280
	0x034BC4D0 MOVZ W11, 0x23
	0x034BC4D4 MOVZ W13, 0x18
	0x034BC4D8 ADD X0, X31, 0x0
	0x034BC4DC STP X8, X9, [X31]
	0x034BC4E0 STP X10, X11, [X31 + 0x10]
	0x034BC4E4 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF23000
	006 Move X8, [X20+464]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43835392
	011 Move V0, [X12+1464]
	012 Move X8, -43679744
	013 Move X10, -43671552
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3036
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+464], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Leaderboard_WriteEntry(System.String leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)

Disassembly:
	0x034BC4E8 STR D0, [X31 + 0x20]
	0x034BC4EC STRB W31, [X31 + 0x2C]
	0x034BC4F0 BL 0x1C1729C
	0x034BC4F4 MOV X8, X0
	0x034BC4F8 STR X0, [X23 + 0x2A0]
	0x034BC4FC CBNZ X20, 0x34BC428
	0x034BC500 MOV X0, X21
	0x034BC504 MOV X1, X31
	0x034BC508 MOV X2, X19
	0x034BC50C BLR X8
	0x034BC510 MOV X19, X0
	0x034BC514 MOV X0, X19
	0x034BC518 LDP X20, X19, [X31 + 0x70]
	0x034BC51C LDP X22, X21, [X31 + 0x60]
	0x034BC520 LDP X24, X23, [X31 + 0x50]
	0x034BC524 LDP X26, X25, [X31 + 0x40]
	0x034BC528 LDR X30, [X31 + 0x30]
	0x034BC52C ADD X31, X31, 0x80
	0x034BC530 RET
	0x034BC534 SUB X31, X31, 0x50
	0x034BC538 STP X30, X21, [X31 + 0x30]
	0x034BC53C STP X20, X19, [X31 + 0x40]
	0x034BC540 ADRP X21, 0xF22000
	0x034BC544 LDR X8, [X21 + 0x2A8]
	0x034BC548 MOV W19, W1
	0x034BC54C MOV X20, X0
	0x034BC550 CBNZ X8, 0x34BC59C
	0x034BC554 ADRP X12, 0xFFFFFFFFFD631000
	0x034BC558 LDR V0, [X12 + 0x5B8]
	0x034BC55C ADRP X8, 0xFFFFFFFFFD657000
	0x034BC560 ADRP X10, 0xFFFFFFFFFD63A000
	0x034BC564 ADD X8, X8, 0xDD2
	0x034BC568 MOVZ W9, 0x11
	0x034BC56C ADD X10, X10, 0x643
	0x034BC570 MOVZ W11, 0x1C
	0x034BC574 MOVZ W13, 0xC
	0x034BC578 ADD X0, X31, 0x0
	0x034BC57C STP X8, X9, [X31]
	0x034BC580 STP X10, X11, [X31 + 0x10]
	0x034BC584 STR W13, [X31 + 0x28]
	0x034BC588 STR D0, [X31 + 0x20]
	0x034BC58C STRB W31, [X31 + 0x2C]
	0x034BC590 BL 0x1C1729C
	0x034BC594 MOV X8, X0
	0x034BC598 STR X0, [X21 + 0x2A8]
	0x034BC59C MOV X0, X20
	0x034BC5A0 MOV W1, W19
	0x034BC5A4 BLR X8
	0x034BC5A8 LDP X20, X19, [X31 + 0x40]
	0x034BC5AC LDP X30, X21, [X31 + 0x30]
	0x034BC5B0 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xF23000
	010 Move X24, 0xC77000
	011 Move W8, [X25+472]
	012 Move X24, [X24+808]
	013 Move W21, W4
	014 Move W19, W3
	015 Move X20, X2
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xC77000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0xC60000
	026 Move X0, [X0+2128]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+472], W8
	030 Move X0, [X24]
	031 Move X24, 0xC60000
	032 Move W8, [X0+224]
	033 Move X24, [X24+2128]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X23
	038 Call CAPI.StringToNative, X0
	039 And W4, W21, 1
	040 Move X1, X22
	041 Move X2, X20
	042 Move W3, W19
	043 Move X23, X0
	044 Call CAPI.ovr_Leaderboard_WriteEntry_Native, X0, X1, X2, X3, X4
	045 Move X8, [X24]
	046 Move X19, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X23
	053 Move X1, X31
	054 Call Marshal.FreeCoTaskMem, X0
	055 Move X0, X19
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Return X0

Method: System.UInt64 ovr_Leaderboard_WriteEntry_Native(System.IntPtr leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)

Disassembly:
	0x034BC5B4 RET
	0x034BC5B8 SUB X31, X31, 0x60
	0x034BC5BC STR X30, [X31 + 0x30]
	0x034BC5C0 STP X22, X21, [X31 + 0x40]
	0x034BC5C4 STP X20, X19, [X31 + 0x50]
	0x034BC5C8 ADRP X22, 0xF22000
	0x034BC5CC LDR X8, [X22 + 0x2B0]
	0x034BC5D0 MOV W20, W2
	0x034BC5D4 MOV X19, X1
	0x034BC5D8 MOV X21, X0
	0x034BC5DC CBNZ X8, 0x34BC628
	0x034BC5E0 ADRP X12, 0xFFFFFFFFFD631000
	0x034BC5E4 LDR V0, [X12 + 0x5B8]
	0x034BC5E8 ADRP X8, 0xFFFFFFFFFD657000
	0x034BC5EC ADRP X10, 0xFFFFFFFFFD65B000
	0x034BC5F0 ADD X8, X8, 0xDD2
	0x034BC5F4 MOVZ W9, 0x11
	0x034BC5F8 ADD X10, X10, 0xD3C
	0x034BC5FC MOVZ W11, 0x1F
	0x034BC600 MOVZ W13, 0x14
	0x034BC604 ADD X0, X31, 0x0
	0x034BC608 STP X8, X9, [X31]
	0x034BC60C STP X10, X11, [X31 + 0x10]
	0x034BC610 STR W13, [X31 + 0x28]
	0x034BC614 STR D0, [X31 + 0x20]
	0x034BC618 STRB W31, [X31 + 0x2C]
	0x034BC61C BL 0x1C1729C
	0x034BC620 MOV X8, X0
	0x034BC624 STR X0, [X22 + 0x2B0]
	0x034BC628 AND W2, W20, 0x1
	0x034BC62C MOV X0, X21
	0x034BC630 MOV X1, X19
	0x034BC634 BLR X8
	0x034BC638 LDP X20, X19, [X31 + 0x50]
	0x034BC63C LDP X22, X21, [X31 + 0x40]
	0x034BC640 LDR X30, [X31 + 0x30]
	0x034BC644 ADD X31, X31, 0x60
	0x034BC648 RET
	0x034BC64C SUB X31, X31, 0x80
	0x034BC650 STR X30, [X31 + 0x30]
	0x034BC654 STP X26, X25, [X31 + 0x40]
	0x034BC658 STP X24, X23, [X31 + 0x50]
	0x034BC65C STP X22, X21, [X31 + 0x60]
	0x034BC660 STP X20, X19, [X31 + 0x70]
	0x034BC664 ADRP X23, 0xF22000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X24, 0xF23000
	010 Move X8, [X24+480]
	011 Move W21, W4
	012 Move W19, W3
	013 Move X23, X2
	014 Move X20, X1
	015 Move X22, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {38}
	018 Move X12, -43835392
	019 Move V0, [X12+1464]
	020 Move X8, -43679744
	021 Move X10, -43671552
	022 Add X8, X8, 3538
	023 Move W9, 17
	024 Add X10, X10, 3071
	025 Move W11, 26
	026 Move W13, 32
	027 Add X0, X31, 0
	028 Move [X31], X8
	029 Move [X31+8], X9
	030 Move [X31+16], X10
	031 Move [X31+24], X11
	032 Move [X31+40], W13
	033 Move [X31+32], D0
	034 Move [X31+44], W31
	035 Call 0x1C1829C
	036 Move X8, X0
	037 Move [X24+480], X0
	038 Add X9, X23, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 And W4, W21, 1
	042 Move X0, X22
	043 Move X1, X20
	044 Move W3, W19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X20, [X31+96]
	047 Move X19, [X31+104]
	048 Move X22, [X31+80]
	049 Move X21, [X31+88]
	050 Move X24, [X31+64]
	051 Move X23, [X31+72]
	052 Move X30, [X31+48]
	053 Add X31, X31, 112
	054 Return X0

Method: System.UInt64 ovr_Leaderboard_WriteEntryWithSupplementaryMetric(System.String leaderboardName, System.Int64 score, System.Int64 supplementaryMetric, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)

Disassembly:
	0x034BC668 LDR X8, [X23 + 0x2B8]
	0x034BC66C MOV X19, X2
	0x034BC670 MOV X20, X1
	0x034BC674 MOV X21, X0
	0x034BC678 CBZ X8, 0x34BC70C
	0x034BC67C CBZ X20, 0x34BC758
	0x034BC680 LDR X24, [X20 + 0x18]
	0x034BC684 UBFM X8, X24, 0x3D, 0x3C
	0x034BC688 ADD X0, X8, 0x8
	0x034BC68C BL 0x1C16F14
	0x034BC690 MOV X22, X0
	0x034BC694 CMP W24, 0x1
	0x034BC698 STR X31, [X0, X24, LSL #3]
	0x034BC69C B.LT 0x34BC6C0
	0x034BC6A0 AND X24, X24, 0x0
	0x034BC6A4 ADD X25, X20, 0x20
	0x034BC6A8 MOV X26, X22
	0x034BC6AC LDR X0, [X25], #0x8
	0x034BC6B0 BL 0x1C1727C
	0x034BC6B4 SUBS X24, X24, 0x1
	0x034BC6B8 STR X0, [X26], #0x8
	0x034BC6BC B.NE 0x34BC6AC
	0x034BC6C0 LDR X8, [X23 + 0x2B8]
	0x034BC6C4 MOV X0, X21
	0x034BC6C8 MOV X1, X22
	0x034BC6CC MOV X2, X19
	0x034BC6D0 BLR X8
	0x034BC6D4 LDR X8, [X20 + 0x18]
	0x034BC6D8 MOV X19, X0
	0x034BC6DC CMP W8, 0x1
	0x034BC6E0 B.LT 0x34BC700
	0x034BC6E4 AND X20, X8, 0x0
	0x034BC6E8 MOV X21, X22
	0x034BC6EC LDR X0, [X21]
	0x034BC6F0 BL 0x1C17290
	0x034BC6F4 SUBS X20, X20, 0x1
	0x034BC6F8 STR X31, [X21], #0x8
	0x034BC6FC B.NE 0x34BC6EC
	0x034BC700 MOV X0, X22
	0x034BC704 BL 0x1C17290
	0x034BC708 B 0x34BC76C
	0x034BC70C ADRP X12, 0xFFFFFFFFFD631000
	0x034BC710 LDR V0, [X12 + 0x5B8]
	0x034BC714 ADRP X8, 0xFFFFFFFFFD657000
	0x034BC718 ADRP X10, 0xFFFFFFFFFD66F000
	0x034BC71C ADD X8, X8, 0xDD2
	0x034BC720 MOVZ W9, 0x11
	0x034BC724 ADD X10, X10, 0xBA3
	0x034BC728 MOVZ W11, 0x22
	0x034BC72C MOVZ W13, 0x18
	0x034BC730 ADD X0, X31, 0x0
	0x034BC734 STP X8, X9, [X31]
	0x034BC738 STP X10, X11, [X31 + 0x10]
	0x034BC73C STR W13, [X31 + 0x28]
	0x034BC740 STR D0, [X31 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xF23000
	011 Move X25, 0xC77000
	012 Move W8, [X26+488]
	013 Move X25, [X25+808]
	014 Move W22, W5
	015 Move W19, W4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X23, X1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xC77000
	025 Move X0, [X0+808]
	026 Call 0x1C17CF4
	027 Move X0, 0xC60000
	028 Move X0, [X0+2128]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+488], W8
	032 Move X0, [X25]
	033 Move X25, 0xC60000
	034 Move W8, [X0+224]
	035 Move X25, [X25+2128]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X24
	040 Call CAPI.StringToNative, X0
	041 And W5, W22, 1
	042 Move X1, X23
	043 Move X2, X21
	044 Move X3, X20
	045 Move W4, W19
	046 Move X24, X0
	047 Call CAPI.ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native, X0, X1, X2, X3, X4, X5
	048 Move X8, [X25]
	049 Move X19, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X24
	056 Move X1, X31
	057 Call Marshal.FreeCoTaskMem, X0
	058 Move X0, X19
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X24, [X31+32]
	064 Move X23, [X31+40]
	065 Move X26, [X31+16]
	066 Move X25, [X31+24]
	067 Move X30, [X31+80]
	068 Return X0

Method: System.UInt64 ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native(System.IntPtr leaderboardName, System.Int64 score, System.Int64 supplementaryMetric, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)

Disassembly:
	0x034BC744 STRB W31, [X31 + 0x2C]
	0x034BC748 BL 0x1C1729C
	0x034BC74C MOV X8, X0
	0x034BC750 STR X0, [X23 + 0x2B8]
	0x034BC754 CBNZ X20, 0x34BC680
	0x034BC758 MOV X0, X21
	0x034BC75C MOV X1, X31
	0x034BC760 MOV X2, X19
	0x034BC764 BLR X8
	0x034BC768 MOV X19, X0
	0x034BC76C MOV X0, X19
	0x034BC770 LDP X20, X19, [X31 + 0x70]
	0x034BC774 LDP X22, X21, [X31 + 0x60]
	0x034BC778 LDP X24, X23, [X31 + 0x50]
	0x034BC77C LDP X26, X25, [X31 + 0x40]
	0x034BC780 LDR X30, [X31 + 0x30]
	0x034BC784 ADD X31, X31, 0x80
	0x034BC788 RET
	0x034BC78C SUB X31, X31, 0x60
	0x034BC790 STR X30, [X31 + 0x30]
	0x034BC794 STP X22, X21, [X31 + 0x40]
	0x034BC798 STP X20, X19, [X31 + 0x50]
	0x034BC79C ADRP X22, 0xF22000
	0x034BC7A0 LDR X8, [X22 + 0x2C0]
	0x034BC7A4 MOV W19, W2
	0x034BC7A8 MOV X20, X1
	0x034BC7AC MOV X21, X0
	0x034BC7B0 CBNZ X8, 0x34BC7FC
	0x034BC7B4 ADRP X12, 0xFFFFFFFFFD631000
	0x034BC7B8 LDR V0, [X12 + 0x5B8]
	0x034BC7BC ADRP X8, 0xFFFFFFFFFD657000
	0x034BC7C0 ADRP X10, 0xFFFFFFFFFD660000
	0x034BC7C4 ADD X8, X8, 0xDD2
	0x034BC7C8 MOVZ W9, 0x11
	0x034BC7CC ADD X10, X10, 0x180
	0x034BC7D0 MOVZ W11, 0x1D
	0x034BC7D4 MOVZ W13, 0x14
	0x034BC7D8 ADD X0, X31, 0x0
	0x034BC7DC STP X8, X9, [X31]
	0x034BC7E0 STP X10, X11, [X31 + 0x10]
	0x034BC7E4 STR W13, [X31 + 0x28]
	0x034BC7E8 STR D0, [X31 + 0x20]
	0x034BC7EC STRB W31, [X31 + 0x2C]
	0x034BC7F0 BL 0x1C1729C
	0x034BC7F4 MOV X8, X0
	0x034BC7F8 STR X0, [X22 + 0x2C0]
	0x034BC7FC MOV X0, X21

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X25, 0xF23000
	011 Move X8, [X25+496]
	012 Move W21, W5
	013 Move W19, W4
	014 Move X23, X3
	015 Move X20, X2
	016 Move X22, X1
	017 Move X24, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {40}
	020 Move X12, -43835392
	021 Move V0, [X12+1464]
	022 Move X8, -43679744
	023 Move X10, -43814912
	024 Add X8, X8, 3538
	025 Move W9, 17
	026 Add X10, X10, 1704
	027 Move W11, 49
	028 Move W13, 40
	029 Add X0, X31, 0
	030 Move [X31], X8
	031 Move [X31+8], X9
	032 Move [X31+16], X10
	033 Move [X31+24], X11
	034 Move [X31+40], W13
	035 Move [X31+32], D0
	036 Move [X31+44], W31
	037 Call 0x1C1829C
	038 Move X8, X0
	039 Move [X25+496], X0
	040 Add X9, X23, 32
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 And W5, W21, 1
	044 Move X0, X24
	045 Move X1, X22
	046 Move X2, X20
	047 Move W4, W19
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X20, [X31+96]
	050 Move X19, [X31+104]
	051 Move X22, [X31+80]
	052 Move X21, [X31+88]
	053 Move X24, [X31+64]
	054 Move X23, [X31+72]
	055 Move X30, [X31+48]
	056 Move X25, [X31+56]
	057 Add X31, X31, 112
	058 Return X0

Method: System.UInt64 ovr_Livestreaming_IsAllowedForApplication(System.String packageName)

Disassembly:
	0x034BC800 MOV X1, X20
	0x034BC804 MOV W2, W19
	0x034BC808 BLR X8
	0x034BC80C LDP X20, X19, [X31 + 0x50]
	0x034BC810 LDP X22, X21, [X31 + 0x40]
	0x034BC814 LDR X30, [X31 + 0x30]
	0x034BC818 ADD X31, X31, 0x60
	0x034BC81C RET
	0x034BC820 SUB X31, X31, 0x50
	0x034BC824 STR X30, [X31 + 0x30]
	0x034BC828 STP X20, X19, [X31 + 0x40]
	0x034BC82C ADRP X20, 0xF22000
	0x034BC830 LDR X8, [X20 + 0x2C8]
	0x034BC834 MOV X19, X0
	0x034BC838 CBNZ X8, 0x34BC884
	0x034BC83C ADRP X12, 0xFFFFFFFFFD631000
	0x034BC840 LDR V0, [X12 + 0x5B8]
	0x034BC844 ADRP X8, 0xFFFFFFFFFD657000
	0x034BC848 ADRP X10, 0xFFFFFFFFFD646000
	0x034BC84C ADD X8, X8, 0xDD2
	0x034BC850 MOVZ W9, 0x11
	0x034BC854 ADD X10, X10, 0x2A4
	0x034BC858 MOVZ W11, 0x1B
	0x034BC85C MOVZ W13, 0x8
	0x034BC860 ADD X0, X31, 0x0
	0x034BC864 STP X8, X9, [X31]
	0x034BC868 STP X10, X11, [X31 + 0x10]
	0x034BC86C STR W13, [X31 + 0x28]
	0x034BC870 STR D0, [X31 + 0x20]
	0x034BC874 STRB W31, [X31 + 0x2C]
	0x034BC878 BL 0x1C1729C
	0x034BC87C MOV X8, X0
	0x034BC880 STR X0, [X20 + 0x2C8]
	0x034BC884 MOV X0, X19
	0x034BC888 BLR X8
	0x034BC88C LDP X20, X19, [X31 + 0x40]
	0x034BC890 LDR X30, [X31 + 0x30]
	0x034BC894 ADD X31, X31, 0x50
	0x034BC898 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF23000
	006 Move X20, 0xC77000
	007 Move W8, [X21+504]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC77000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC60000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+504], W8
	022 Move X0, [X20]
	023 Move X20, 0xC60000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_Livestreaming_IsAllowedForApplication_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_Livestreaming_IsAllowedForApplication_Native(System.IntPtr packageName)

Disassembly:
	0x034BC89C SUB X31, X31, 0x40
	0x034BC8A0 STP X30, X19, [X31 + 0x30]
	0x034BC8A4 ADRP X19, 0xF22000
	0x034BC8A8 LDR X8, [X19 + 0x2D0]
	0x034BC8AC CBNZ X8, 0x34BC8F4
	0x034BC8B0 ADRP X12, 0xFFFFFFFFFD631000
	0x034BC8B4 LDR V0, [X12 + 0x5B8]
	0x034BC8B8 ADRP X8, 0xFFFFFFFFFD657000
	0x034BC8BC ADRP X10, 0xFFFFFFFFFD632000
	0x034BC8C0 ADD X8, X8, 0xDD2
	0x034BC8C4 MOVZ W9, 0x11
	0x034BC8C8 ADD X10, X10, 0x7BD
	0x034BC8CC MOVZ W11, 0x10
	0x034BC8D0 ADD X0, X31, 0x0
	0x034BC8D4 STR W31, [X31 + 0x28]
	0x034BC8D8 STP X8, X9, [X31]
	0x034BC8DC STP X10, X11, [X31 + 0x10]
	0x034BC8E0 STR D0, [X31 + 0x20]
	0x034BC8E4 STRB W31, [X31 + 0x2C]
	0x034BC8E8 BL 0x1C1729C
	0x034BC8EC MOV X8, X0
	0x034BC8F0 STR X0, [X19 + 0x2D0]
	0x034BC8F4 BLR X8
	0x034BC8F8 LDP X30, X19, [X31 + 0x30]
	0x034BC8FC ADD X31, X31, 0x40
	0x034BC900 RET
	0x034BC904 SUB X31, X31, 0x50
	0x034BC908 STP X30, X21, [X31 + 0x30]
	0x034BC90C STP X20, X19, [X31 + 0x40]
	0x034BC910 ADRP X21, 0xF22000
	0x034BC914 LDR X8, [X21 + 0x2D8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF23000
	006 Move X8, [X20+512]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43835392
	011 Move V0, [X12+1464]
	012 Move X8, -43679744
	013 Move X10, -43700224
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1000
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+512], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Livestreaming_StartPartyStream()

Disassembly:
	0x034BC918 MOV X19, X1
	0x034BC91C MOV X20, X0
	0x034BC920 CBNZ X8, 0x34BC96C
	0x034BC924 ADRP X12, 0xFFFFFFFFFD631000
	0x034BC928 LDR V0, [X12 + 0x5B8]
	0x034BC92C ADRP X8, 0xFFFFFFFFFD657000
	0x034BC930 ADRP X10, 0xFFFFFFFFFD66B000
	0x034BC934 ADD X8, X8, 0xDD2
	0x034BC938 MOVZ W9, 0x11
	0x034BC93C ADD X10, X10, 0xC5F
	0x034BC940 MOVZ W11, 0x1D
	0x034BC944 MOVZ W13, 0x10
	0x034BC948 ADD X0, X31, 0x0
	0x034BC94C STP X8, X9, [X31]
	0x034BC950 STP X10, X11, [X31 + 0x10]
	0x034BC954 STR W13, [X31 + 0x28]
	0x034BC958 STR D0, [X31 + 0x20]
	0x034BC95C STRB W31, [X31 + 0x2C]
	0x034BC960 BL 0x1C1729C
	0x034BC964 MOV X8, X0
	0x034BC968 STR X0, [X21 + 0x2D8]
	0x034BC96C MOV X0, X20
	0x034BC970 MOV X1, X19
	0x034BC974 BLR X8
	0x034BC978 LDP X20, X19, [X31 + 0x40]
	0x034BC97C LDP X30, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF23000
	005 Move X8, [X19+520]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43835392
	009 Move V0, [X12+1464]
	010 Move X8, -43679744
	011 Move X10, -43798528
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1568
	015 Move W11, 34
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+520], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Livestreaming_StartStream(Oculus.Platform.LivestreamingAudience audience, Oculus.Platform.LivestreamingMicrophoneStatus micStatus)

Disassembly:
	0x034BC980 ADD X31, X31, 0x50
	0x034BC984 RET
	0x034BC988 SUB X31, X31, 0x50
	0x034BC98C STR X30, [X31 + 0x30]
	0x034BC990 STP X20, X19, [X31 + 0x40]
	0x034BC994 ADRP X20, 0xF22000
	0x034BC998 LDR X8, [X20 + 0x2E0]
	0x034BC99C MOV X19, X0
	0x034BC9A0 CBNZ X8, 0x34BC9EC
	0x034BC9A4 ADRP X12, 0xFFFFFFFFFD631000
	0x034BC9A8 LDR V0, [X12 + 0x5B8]
	0x034BC9AC ADRP X8, 0xFFFFFFFFFD657000
	0x034BC9B0 ADRP X10, 0xFFFFFFFFFD63E000
	0x034BC9B4 ADD X8, X8, 0xDD2
	0x034BC9B8 MOVZ W9, 0x11
	0x034BC9BC ADD X10, X10, 0x7E9
	0x034BC9C0 MOVZ W11, 0xD
	0x034BC9C4 MOVZ W13, 0x8
	0x034BC9C8 ADD X0, X31, 0x0
	0x034BC9CC STP X8, X9, [X31]
	0x034BC9D0 STP X10, X11, [X31 + 0x10]
	0x034BC9D4 STR W13, [X31 + 0x28]
	0x034BC9D8 STR D0, [X31 + 0x20]
	0x034BC9DC STRB W31, [X31 + 0x2C]
	0x034BC9E0 BL 0x1C1729C
	0x034BC9E4 MOV X8, X0
	0x034BC9E8 STR X0, [X20 + 0x2E0]
	0x034BC9EC MOV X0, X19
	0x034BC9F0 BLR X8
	0x034BC9F4 LDP X20, X19, [X31 + 0x40]
	0x034BC9F8 LDR X30, [X31 + 0x30]
	0x034BC9FC ADD X31, X31, 0x50
	0x034BCA00 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF23000
	007 Move X8, [X21+528]
	008 Move W19, W1
	009 Move W20, W0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43835392
	013 Move V0, [X12+1464]
	014 Move X8, -43679744
	015 Move X10, -43708416
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 619
	019 Move W11, 29
	020 Move W13, 8
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+528], X0
	032 Move W0, W20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Livestreaming_StopPartyStream()

Disassembly:
	0x034BCA04 SUB X31, X31, 0x40
	0x034BCA08 STP X30, X19, [X31 + 0x30]
	0x034BCA0C ADRP X19, 0xF22000
	0x034BCA10 LDR X8, [X19 + 0x2E8]
	0x034BCA14 CBNZ X8, 0x34BCA5C
	0x034BCA18 ADRP X12, 0xFFFFFFFFFD631000
	0x034BCA1C LDR V0, [X12 + 0x5B8]
	0x034BCA20 ADRP X8, 0xFFFFFFFFFD657000
	0x034BCA24 ADRP X10, 0xFFFFFFFFFD661000
	0x034BCA28 ADD X8, X8, 0xDD2
	0x034BCA2C MOVZ W9, 0x11
	0x034BCA30 ADD X10, X10, 0xEBD
	0x034BCA34 MOVZ W11, 0x14
	0x034BCA38 ADD X0, X31, 0x0
	0x034BCA3C STR W31, [X31 + 0x28]
	0x034BCA40 STP X8, X9, [X31]
	0x034BCA44 STP X10, X11, [X31 + 0x10]
	0x034BCA48 STR D0, [X31 + 0x20]
	0x034BCA4C STRB W31, [X31 + 0x2C]
	0x034BCA50 BL 0x1C1729C
	0x034BCA54 MOV X8, X0
	0x034BCA58 STR X0, [X19 + 0x2E8]
	0x034BCA5C BLR X8
	0x034BCA60 LDP X30, X19, [X31 + 0x30]
	0x034BCA64 ADD X31, X31, 0x40
	0x034BCA68 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF23000
	005 Move X8, [X19+536]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43835392
	009 Move V0, [X12+1464]
	010 Move X8, -43679744
	011 Move X10, -43642880
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 350
	015 Move W11, 33
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+536], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Livestreaming_StopStream()

Disassembly:
	0x034BCA6C SUB X31, X31, 0x50
	0x034BCA70 STR X30, [X31 + 0x30]
	0x034BCA74 STP X20, X19, [X31 + 0x40]
	0x034BCA78 ADRP X20, 0xF22000
	0x034BCA7C LDR X8, [X20 + 0x2F0]
	0x034BCA80 MOV X19, X0
	0x034BCA84 CBNZ X8, 0x34BCAD0
	0x034BCA88 ADRP X12, 0xFFFFFFFFFD631000
	0x034BCA8C LDR V0, [X12 + 0x5B8]
	0x034BCA90 ADRP X8, 0xFFFFFFFFFD657000
	0x034BCA94 ADRP X10, 0xFFFFFFFFFD660000
	0x034BCA98 ADD X8, X8, 0xDD2
	0x034BCA9C MOVZ W9, 0x11
	0x034BCAA0 ADD X10, X10, 0x19E
	0x034BCAA4 MOVZ W11, 0x1B
	0x034BCAA8 MOVZ W13, 0x8
	0x034BCAAC ADD X0, X31, 0x0
	0x034BCAB0 STP X8, X9, [X31]
	0x034BCAB4 STP X10, X11, [X31 + 0x10]
	0x034BCAB8 STR W13, [X31 + 0x28]
	0x034BCABC STR D0, [X31 + 0x20]
	0x034BCAC0 STRB W31, [X31 + 0x2C]
	0x034BCAC4 BL 0x1C1729C
	0x034BCAC8 MOV X8, X0
	0x034BCACC STR X0, [X20 + 0x2F0]
	0x034BCAD0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF23000
	005 Move X8, [X19+544]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43835392
	009 Move V0, [X12+1464]
	010 Move X8, -43679744
	011 Move X10, -43626496
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 346
	015 Move W11, 28
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+544], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Livestreaming_UpdateMicStatus(Oculus.Platform.LivestreamingMicrophoneStatus micStatus)

Disassembly:
	0x034BCAD4 BLR X8
	0x034BCAD8 LDP X20, X19, [X31 + 0x40]
	0x034BCADC LDR X30, [X31 + 0x30]
	0x034BCAE0 ADD X31, X31, 0x50
	0x034BCAE4 RET
	0x034BCAE8 SUB X31, X31, 0x50
	0x034BCAEC STP X30, X21, [X31 + 0x30]
	0x034BCAF0 STP X20, X19, [X31 + 0x40]
	0x034BCAF4 ADRP X21, 0xF22000
	0x034BCAF8 LDR X8, [X21 + 0x2F8]
	0x034BCAFC MOV X19, X1
	0x034BCB00 MOV X20, X0
	0x034BCB04 CBNZ X8, 0x34BCB4C
	0x034BCB08 ADRP X12, 0xFFFFFFFFFD631000
	0x034BCB0C LDR V0, [X12 + 0x5B8]
	0x034BCB10 ADRP X8, 0xFFFFFFFFFD657000
	0x034BCB14 ADRP X10, 0xFFFFFFFFFD66D000
	0x034BCB18 ADD X8, X8, 0xDD2
	0x034BCB1C MOVZ W9, 0x11
	0x034BCB20 ADD X10, X10, 0xD0D
	0x034BCB24 MOVZ W11, 0x10
	0x034BCB28 ADD X0, X31, 0x0
	0x034BCB2C STP X8, X9, [X31]
	0x034BCB30 STP X10, X11, [X31 + 0x10]
	0x034BCB34 STR W11, [X31 + 0x28]
	0x034BCB38 STR D0, [X31 + 0x20]
	0x034BCB3C STRB W31, [X31 + 0x2C]
	0x034BCB40 BL 0x1C1729C
	0x034BCB44 MOV X8, X0
	0x034BCB48 STR X0, [X21 + 0x2F8]
	0x034BCB4C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF23000
	006 Move X8, [X20+552]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43835392
	011 Move V0, [X12+1464]
	012 Move X8, -43679744
	013 Move X10, -43663360
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3354
	017 Move W11, 33
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+552], X0
	030 Move W0, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Media_ShareToFacebook(System.String postTextSuggestion, System.String filePath, Oculus.Platform.MediaContentType contentType)

Disassembly:
	0x034BCB50 MOV X1, X19
	0x034BCB54 BLR X8
	0x034BCB58 LDP X20, X19, [X31 + 0x40]
	0x034BCB5C LDP X30, X21, [X31 + 0x30]
	0x034BCB60 ADD X31, X31, 0x50
	0x034BCB64 RET
	0x034BCB68 SUB X31, X31, 0x50
	0x034BCB6C STR X30, [X31 + 0x30]
	0x034BCB70 STP X20, X19, [X31 + 0x40]
	0x034BCB74 ADRP X20, 0xF22000
	0x034BCB78 LDR X8, [X20 + 0x300]
	0x034BCB7C MOV X19, X0
	0x034BCB80 CBNZ X8, 0x34BCBCC
	0x034BCB84 ADRP X12, 0xFFFFFFFFFD631000
	0x034BCB88 LDR V0, [X12 + 0x5B8]
	0x034BCB8C ADRP X8, 0xFFFFFFFFFD657000
	0x034BCB90 ADRP X10, 0xFFFFFFFFFD642000
	0x034BCB94 ADD X8, X8, 0xDD2
	0x034BCB98 MOVZ W9, 0x11
	0x034BCB9C ADD X10, X10, 0x3E7
	0x034BCBA0 MOVZ W11, 0xE
	0x034BCBA4 MOVZ W13, 0x8
	0x034BCBA8 ADD X0, X31, 0x0
	0x034BCBAC STP X8, X9, [X31]
	0x034BCBB0 STP X10, X11, [X31 + 0x10]
	0x034BCBB4 STR W13, [X31 + 0x28]
	0x034BCBB8 STR D0, [X31 + 0x20]
	0x034BCBBC STRB W31, [X31 + 0x2C]
	0x034BCBC0 BL 0x1C1729C
	0x034BCBC4 MOV X8, X0
	0x034BCBC8 STR X0, [X20 + 0x300]
	0x034BCBCC MOV X0, X19
	0x034BCBD0 BLR X8
	0x034BCBD4 LDP X20, X19, [X31 + 0x40]
	0x034BCBD8 LDR X30, [X31 + 0x30]
	0x034BCBDC ADD X31, X31, 0x50
	0x034BCBE0 RET
	0x034BCBE4 SUB X31, X31, 0x50
	0x034BCBE8 STR X30, [X31 + 0x30]
	0x034BCBEC STP X20, X19, [X31 + 0x40]
	0x034BCBF0 ADRP X20, 0xF22000
	0x034BCBF4 LDR X8, [X20 + 0x308]
	0x034BCBF8 MOV X19, X0
	0x034BCBFC CBNZ X8, 0x34BCC48
	0x034BCC00 ADRP X12, 0xFFFFFFFFFD631000
	0x034BCC04 LDR V0, [X12 + 0x5B8]
	0x034BCC08 ADRP X8, 0xFFFFFFFFFD657000
	0x034BCC0C ADRP X10, 0xFFFFFFFFFD656000
	0x034BCC10 ADD X8, X8, 0xDD2
	0x034BCC14 MOVZ W9, 0x11
	0x034BCC18 ADD X10, X10, 0x46
	0x034BCC1C MOVZ W11, 0xF

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF23000
	008 Move X22, 0xC77000
	009 Move W8, [X23+560]
	010 Move X22, [X22+808]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC77000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0xC60000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+560], W8
	026 Move X0, [X22]
	027 Move X22, 0xC60000
	028 Move W8, [X0+224]
	029 Move X22, [X22+2128]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Call CAPI.StringToNative, X0
	035 Move X21, X0
	036 Move X0, X20
	037 Call CAPI.StringToNative, X0
	038 Move X20, X0
	039 Move X0, X21
	040 Move X1, X20
	041 Move W2, W19
	042 Call CAPI.ovr_Media_ShareToFacebook_Native, X0, X1, X2
	043 Move X8, [X22]
	044 Move X19, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Call Marshal.FreeCoTaskMem, X0
	053 Move X0, X20
	054 Move X1, X31
	055 Call Marshal.FreeCoTaskMem, X0
	056 Move X0, X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0

Method: System.UInt64 ovr_Media_ShareToFacebook_Native(System.IntPtr postTextSuggestion, System.IntPtr filePath, Oculus.Platform.MediaContentType contentType)

Disassembly:
	0x034BCC20 MOVZ W13, 0x8
	0x034BCC24 ADD X0, X31, 0x0
	0x034BCC28 STP X8, X9, [X31]
	0x034BCC2C STP X10, X11, [X31 + 0x10]
	0x034BCC30 STR W13, [X31 + 0x28]
	0x034BCC34 STR D0, [X31 + 0x20]
	0x034BCC38 STRB W31, [X31 + 0x2C]
	0x034BCC3C BL 0x1C1729C
	0x034BCC40 MOV X8, X0
	0x034BCC44 STR X0, [X20 + 0x308]
	0x034BCC48 MOV X0, X19
	0x034BCC4C BLR X8
	0x034BCC50 LDP X20, X19, [X31 + 0x40]
	0x034BCC54 LDR X30, [X31 + 0x30]
	0x034BCC58 ADD X31, X31, 0x50
	0x034BCC5C RET
	0x034BCC60 SUB X31, X31, 0x40
	0x034BCC64 STP X30, X19, [X31 + 0x30]
	0x034BCC68 ADRP X19, 0xF22000
	0x034BCC6C LDR X8, [X19 + 0x310]
	0x034BCC70 CBNZ X8, 0x34BCCB8
	0x034BCC74 ADRP X12, 0xFFFFFFFFFD631000
	0x034BCC78 LDR V0, [X12 + 0x5B8]
	0x034BCC7C ADRP X8, 0xFFFFFFFFFD657000
	0x034BCC80 ADRP X10, 0xFFFFFFFFFD632000
	0x034BCC84 ADD X8, X8, 0xDD2
	0x034BCC88 MOVZ W9, 0x11
	0x034BCC8C ADD X10, X10, 0x7CE
	0x034BCC90 MOVZ W11, 0x16
	0x034BCC94 ADD X0, X31, 0x0
	0x034BCC98 STR W31, [X31 + 0x28]
	0x034BCC9C STP X8, X9, [X31]
	0x034BCCA0 STP X10, X11, [X31 + 0x10]
	0x034BCCA4 STR D0, [X31 + 0x20]
	0x034BCCA8 STRB W31, [X31 + 0x2C]
	0x034BCCAC BL 0x1C1729C
	0x034BCCB0 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF23000
	008 Move X8, [X22+568]
	009 Move W19, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43835392
	015 Move V0, [X12+1464]
	016 Move X8, -43679744
	017 Move X10, -43655168
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 3436
	021 Move W11, 25
	022 Move W13, 20
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+568], X0
	034 Move X0, X21
	035 Move X1, X20
	036 Move W2, W19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 Add X31, X31, 96
	044 Return X0

Method: System.UInt64 ovr_NetSync_Connect(System.IntPtr connect_options)

Disassembly:
	0x034BCCB4 STR X0, [X19 + 0x310]
	0x034BCCB8 BLR X8
	0x034BCCBC LDP X30, X19, [X31 + 0x30]
	0x034BCCC0 ADD X31, X31, 0x40
	0x034BCCC4 RET
	0x034BCCC8 SUB X31, X31, 0x40
	0x034BCCCC STP X30, X19, [X31 + 0x30]
	0x034BCCD0 ADRP X19, 0xF22000
	0x034BCCD4 LDR X8, [X19 + 0x318]
	0x034BCCD8 CBNZ X8, 0x34BCD20
	0x034BCCDC ADRP X12, 0xFFFFFFFFFD631000
	0x034BCCE0 LDR V0, [X12 + 0x5B8]
	0x034BCCE4 ADRP X8, 0xFFFFFFFFFD657000
	0x034BCCE8 ADRP X10, 0xFFFFFFFFFD66B000
	0x034BCCEC ADD X8, X8, 0xDD2
	0x034BCCF0 MOVZ W9, 0x11
	0x034BCCF4 ADD X10, X10, 0xC7D
	0x034BCCF8 MOVZ W11, 0x20
	0x034BCCFC ADD X0, X31, 0x0
	0x034BCD00 STR W31, [X31 + 0x28]
	0x034BCD04 STP X8, X9, [X31]
	0x034BCD08 STP X10, X11, [X31 + 0x10]
	0x034BCD0C STR D0, [X31 + 0x20]
	0x034BCD10 STRB W31, [X31 + 0x2C]
	0x034BCD14 BL 0x1C1729C
	0x034BCD18 MOV X8, X0
	0x034BCD1C STR X0, [X19 + 0x318]
	0x034BCD20 BLR X8
	0x034BCD24 LDP X30, X19, [X31 + 0x30]
	0x034BCD28 ADD X31, X31, 0x40
	0x034BCD2C RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF23000
	006 Move X8, [X20+576]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43835392
	011 Move V0, [X12+1464]
	012 Move X8, -43679744
	013 Move X10, -43618304
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 863
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+576], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_NetSync_Disconnect(System.Int64 connection_id)

Disassembly:
	0x034BCD30 SUB X31, X31, 0x50
	0x034BCD34 STR X30, [X31 + 0x30]
	0x034BCD38 STP X20, X19, [X31 + 0x40]
	0x034BCD3C ADRP X20, 0xF22000
	0x034BCD40 LDR X8, [X20 + 0x320]
	0x034BCD44 MOV X19, X0
	0x034BCD48 CBNZ X8, 0x34BCD94
	0x034BCD4C ADRP X12, 0xFFFFFFFFFD631000
	0x034BCD50 LDR V0, [X12 + 0x5B8]
	0x034BCD54 ADRP X8, 0xFFFFFFFFFD657000
	0x034BCD58 ADRP X10, 0xFFFFFFFFFD650000
	0x034BCD5C ADD X8, X8, 0xDD2
	0x034BCD60 MOVZ W9, 0x11
	0x034BCD64 ADD X10, X10, 0x289
	0x034BCD68 MOVZ W11, 0x14
	0x034BCD6C MOVZ W13, 0x8
	0x034BCD70 ADD X0, X31, 0x0
	0x034BCD74 STP X8, X9, [X31]
	0x034BCD78 STP X10, X11, [X31 + 0x10]
	0x034BCD7C STR W13, [X31 + 0x28]
	0x034BCD80 STR D0, [X31 + 0x20]
	0x034BCD84 STRB W31, [X31 + 0x2C]
	0x034BCD88 BL 0x1C1729C
	0x034BCD8C MOV X8, X0
	0x034BCD90 STR X0, [X20 + 0x320]
	0x034BCD94 MOV X0, X19
	0x034BCD98 BLR X8
	0x034BCD9C LDP X20, X19, [X31 + 0x40]
	0x034BCDA0 LDR X30, [X31 + 0x30]
	0x034BCDA4 ADD X31, X31, 0x50
	0x034BCDA8 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF23000
	006 Move X8, [X20+584]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43835392
	011 Move V0, [X12+1464]
	012 Move X8, -43679744
	013 Move X10, -43724800
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1173
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+584], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_NetSync_GetSessions(System.Int64 connection_id)

Disassembly:
	0x034BCDAC STP X30, X21, [X31 - 0x20]!
	0x034BCDB0 STP X20, X19, [X31 + 0x10]
	0x034BCDB4 ADRP X21, 0xF22000
	0x034BCDB8 ADRP X20, 0xC76000
	0x034BCDBC LDRB W8, [X21 + 0x328]
	0x034BCDC0 LDR X20, [X20 + 0x328]
	0x034BCDC4 MOV X19, X0
	0x034BCDC8 TBNZ X8, 0x0, 0x34BCDEC
	0x034BCDCC ADRP X0, 0xC76000
	0x034BCDD0 LDR X0, [X0 + 0x328]
	0x034BCDD4 BL 0x1C16CF4
	0x034BCDD8 ADRP X0, 0xC5F000
	0x034BCDDC LDR X0, [X0 + 0x850]
	0x034BCDE0 BL 0x1C16CF4
	0x034BCDE4 MOVZ W8, 0x1
	0x034BCDE8 STRB W8, [X21 + 0x328]
	0x034BCDEC LDR X0, [X20]
	0x034BCDF0 ADRP X20, 0xC5F000
	0x034BCDF4 LDR W8, [X0 + 0xE0]
	0x034BCDF8 LDR X20, [X20 + 0x850]
	0x034BCDFC CBNZ W8, 0x34BCE04
	0x034BCE00 BL 0x1C16DFC
	0x034BCE04 MOV X0, X19
	0x034BCE08 BL 0x34B404C
	0x034BCE0C MOV X19, X0
	0x034BCE10 BL 0x34BCE48
	0x034BCE14 LDR X8, [X20]
	0x034BCE18 MOV X20, X0
	0x034BCE1C LDR W9, [X8 + 0xE0]
	0x034BCE20 CBNZ W9, 0x34BCE2C
	0x034BCE24 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF23000
	006 Move X8, [X20+592]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43835392
	011 Move V0, [X12+1464]
	012 Move X8, -43679744
	013 Move X10, -43581440
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2955
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+592], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_NetSync_GetVoipAttenuation(System.Int64 connection_id)

Disassembly:
	0x034BCE28 BL 0x1C16DFC
	0x034BCE2C MOV X0, X19
	0x034BCE30 MOV X1, X31
	0x034BCE34 BL 0x32C1060
	0x034BCE38 MOV X0, X20
	0x034BCE3C LDP X20, X19, [X31 + 0x10]
	0x034BCE40 LDP X30, X21, [X31], #0x20
	0x034BCE44 RET
	0x034BCE48 SUB X31, X31, 0x50
	0x034BCE4C STR X30, [X31 + 0x30]
	0x034BCE50 STP X20, X19, [X31 + 0x40]
	0x034BCE54 ADRP X20, 0xF22000
	0x034BCE58 LDR X8, [X20 + 0x330]
	0x034BCE5C MOV X19, X0
	0x034BCE60 CBNZ X8, 0x34BCEAC
	0x034BCE64 ADRP X12, 0xFFFFFFFFFD631000
	0x034BCE68 LDR V0, [X12 + 0x5B8]
	0x034BCE6C ADRP X8, 0xFFFFFFFFFD657000
	0x034BCE70 ADRP X10, 0xFFFFFFFFFD652000
	0x034BCE74 ADD X8, X8, 0xDD2
	0x034BCE78 MOVZ W9, 0x11
	0x034BCE7C ADD X10, X10, 0x412
	0x034BCE80 MOVZ W11, 0x1F
	0x034BCE84 MOVZ W13, 0x8
	0x034BCE88 ADD X0, X31, 0x0
	0x034BCE8C STP X8, X9, [X31]
	0x034BCE90 STP X10, X11, [X31 + 0x10]
	0x034BCE94 STR W13, [X31 + 0x28]
	0x034BCE98 STR D0, [X31 + 0x20]
	0x034BCE9C STRB W31, [X31 + 0x2C]
	0x034BCEA0 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF23000
	006 Move X8, [X20+600]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43835392
	011 Move V0, [X12+1464]
	012 Move X8, -43679744
	013 Move X10, -43749376
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 609
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+600], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_NetSync_GetVoipAttenuationDefault()

Disassembly:
	0x034BCEA4 MOV X8, X0
	0x034BCEA8 STR X0, [X20 + 0x330]
	0x034BCEAC MOV X0, X19
	0x034BCEB0 BLR X8
	0x034BCEB4 LDP X20, X19, [X31 + 0x40]
	0x034BCEB8 LDR X30, [X31 + 0x30]
	0x034BCEBC ADD X31, X31, 0x50
	0x034BCEC0 RET
	0x034BCEC4 SUB X31, X31, 0x50
	0x034BCEC8 STR X30, [X31 + 0x30]
	0x034BCECC STP X20, X19, [X31 + 0x40]
	0x034BCED0 ADRP X20, 0xF22000
	0x034BCED4 LDR X8, [X20 + 0x338]
	0x034BCED8 MOV W19, W0
	0x034BCEDC CBNZ X8, 0x34BCF28
	0x034BCEE0 ADRP X12, 0xFFFFFFFFFD631000
	0x034BCEE4 LDR V0, [X12 + 0x5B8]
	0x034BCEE8 ADRP X8, 0xFFFFFFFFFD657000
	0x034BCEEC ADRP X10, 0xFFFFFFFFFD66F000
	0x034BCEF0 ADD X8, X8, 0xDD2
	0x034BCEF4 MOVZ W9, 0x11
	0x034BCEF8 ADD X10, X10, 0xBC6
	0x034BCEFC MOVZ W11, 0x1E
	0x034BCF00 MOVZ W13, 0x4
	0x034BCF04 ADD X0, X31, 0x0
	0x034BCF08 STP X8, X9, [X31]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF23000
	005 Move X8, [X19+608]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43835392
	009 Move V0, [X12+1464]
	010 Move X8, -43679744
	011 Move X10, -43601920
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 666
	015 Move W11, 37
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+608], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipAttenuation(System.Int64 connection_id, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)

Disassembly:
	0x034BCF0C STP X10, X11, [X31 + 0x10]
	0x034BCF10 STR W13, [X31 + 0x28]
	0x034BCF14 STR D0, [X31 + 0x20]
	0x034BCF18 STRB W31, [X31 + 0x2C]
	0x034BCF1C BL 0x1C1729C
	0x034BCF20 MOV X8, X0
	0x034BCF24 STR X0, [X20 + 0x338]
	0x034BCF28 AND W0, W19, 0x1
	0x034BCF2C BLR X8
	0x034BCF30 LDP X20, X19, [X31 + 0x40]
	0x034BCF34 LDR X30, [X31 + 0x30]
	0x034BCF38 ADD X31, X31, 0x50
	0x034BCF3C RET
	0x034BCF40 STP X30, X21, [X31 - 0x20]!
	0x034BCF44 STP X20, X19, [X31 + 0x10]
	0x034BCF48 ADRP X21, 0xF22000
	0x034BCF4C ADRP X20, 0xC76000
	0x034BCF50 LDRB W8, [X21 + 0x340]
	0x034BCF54 LDR X20, [X20 + 0x328]
	0x034BCF58 MOV X19, X0
	0x034BCF5C TBNZ X8, 0x0, 0x34BCF80
	0x034BCF60 ADRP X0, 0xC76000
	0x034BCF64 LDR X0, [X0 + 0x328]
	0x034BCF68 BL 0x1C16CF4
	0x034BCF6C ADRP X0, 0xC5F000
	0x034BCF70 LDR X0, [X0 + 0x850]
	0x034BCF74 BL 0x1C16CF4
	0x034BCF78 MOVZ W8, 0x1
	0x034BCF7C STRB W8, [X21 + 0x340]
	0x034BCF80 LDR X0, [X20]
	0x034BCF84 ADRP X20, 0xC5F000
	0x034BCF88 LDR W8, [X0 + 0xE0]
	0x034BCF8C LDR X20, [X20 + 0x850]
	0x034BCF90 CBNZ W8, 0x34BCF98
	0x034BCF94 BL 0x1C16DFC
	0x034BCF98 MOV X0, X19
	0x034BCF9C BL 0x34B404C
	0x034BCFA0 MOV X19, X0
	0x034BCFA4 BL 0x34BCFDC
	0x034BCFA8 LDR X8, [X20]
	0x034BCFAC MOV X20, X0
	0x034BCFB0 LDR W9, [X8 + 0xE0]
	0x034BCFB4 CBNZ W9, 0x34BCFC0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xF23000
	009 Move X8, [X23+616]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {36}
	016 Move X12, -43835392
	017 Move V0, [X12+1464]
	018 Move X8, -43679744
	019 Move X10, -43618304
	020 Add X8, X8, 3538
	021 Move W9, 17
	022 Add X10, X10, 883
	023 Move W11, 30
	024 Move W13, 32
	025 Add X0, X31, 0
	026 Move [X31], X8
	027 Move [X31+8], X9
	028 Move [X31+16], X10
	029 Move [X31+24], X11
	030 Move [X31+40], W13
	031 Move [X31+32], D0
	032 Move [X31+44], W31
	033 Call 0x1C1829C
	034 Move X8, X0
	035 Move [X23+616], X0
	036 Add X9, X22, 32
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X10, X20, 32
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X0, X21
	043 Move X3, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, [X31+80]
	046 Move X19, [X31+88]
	047 Move X22, [X31+64]
	048 Move X21, [X31+72]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Add X31, X31, 96
	052 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipAttenuationModel(System.Int64 connection_id, System.String name, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)

Disassembly:
	0x034BCFB8 MOV X0, X8
	0x034BCFBC BL 0x1C16DFC
	0x034BCFC0 MOV X0, X19
	0x034BCFC4 MOV X1, X31
	0x034BCFC8 BL 0x32C1060
	0x034BCFCC MOV X0, X20
	0x034BCFD0 LDP X20, X19, [X31 + 0x10]
	0x034BCFD4 LDP X30, X21, [X31], #0x20
	0x034BCFD8 RET
	0x034BCFDC SUB X31, X31, 0x50
	0x034BCFE0 STR X30, [X31 + 0x30]
	0x034BCFE4 STP X20, X19, [X31 + 0x40]
	0x034BCFE8 ADRP X20, 0xF22000
	0x034BCFEC LDR X8, [X20 + 0x348]
	0x034BCFF0 MOV X19, X0
	0x034BCFF4 CBNZ X8, 0x34BD040
	0x034BCFF8 ADRP X12, 0xFFFFFFFFFD631000
	0x034BCFFC LDR V0, [X12 + 0x5B8]
	0x034BD000 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD004 ADRP X10, 0xFFFFFFFFFD633000
	0x034BD008 ADD X8, X8, 0xDD2
	0x034BD00C MOVZ W9, 0x11
	0x034BD010 ADD X10, X10, 0x25A
	0x034BD014 MOVZ W11, 0x20
	0x034BD018 MOVZ W13, 0x8
	0x034BD01C ADD X0, X31, 0x0
	0x034BD020 STP X8, X9, [X31]
	0x034BD024 STP X10, X11, [X31 + 0x10]
	0x034BD028 STR W13, [X31 + 0x28]
	0x034BD02C STR D0, [X31 + 0x20]
	0x034BD030 STRB W31, [X31 + 0x2C]
	0x034BD034 BL 0x1C1729C
	0x034BD038 MOV X8, X0
	0x034BD03C STR X0, [X20 + 0x348]
	0x034BD040 MOV X0, X19
	0x034BD044 BLR X8
	0x034BD048 LDP X20, X19, [X31 + 0x40]
	0x034BD04C LDR X30, [X31 + 0x30]
	0x034BD050 ADD X31, X31, 0x50
	0x034BD054 RET
	0x034BD058 STP X30, X21, [X31 - 0x20]!
	0x034BD05C STP X20, X19, [X31 + 0x10]
	0x034BD060 ADRP X21, 0xF21000
	0x034BD064 ADRP X20, 0xC75000
	0x034BD068 LDRB W8, [X21 + 0x350]
	0x034BD06C LDR X20, [X20 + 0x328]
	0x034BD070 MOV X19, X0
	0x034BD074 TBNZ X8, 0x0, 0x34BD098
	0x034BD078 ADRP X0, 0xC75000
	0x034BD07C LDR X0, [X0 + 0x328]
	0x034BD080 BL 0x1C16CF4
	0x034BD084 ADRP X0, 0xC5E000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xF23000
	010 Move X24, 0xC77000
	011 Move W8, [X25+624]
	012 Move X24, [X24+808]
	013 Move X19, X4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X23, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xC77000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0xC60000
	026 Move X0, [X0+2128]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+624], W8
	030 Move X0, [X24]
	031 Move X24, 0xC5F000
	032 Move W8, [X0+224]
	033 Move X24, [X24+2128]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X23
	038 Call CAPI.StringToNative, X0
	039 Move X23, X0
	040 Move X0, X22
	041 Move X1, X23
	042 Move X2, X21
	043 Move X3, X20
	044 Move X4, X19
	045 Call CAPI.ovr_NetSync_SetVoipAttenuationModel_Native, X0, X1, X2, X3, X4
	046 Move X8, [X24]
	047 Move X19, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X23
	054 Move X1, X31
	055 Call Marshal.FreeCoTaskMem, X0
	056 Move X0, X19
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Move X25, [X31+72]
	065 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipAttenuationModel_Native(System.Int64 connection_id, System.IntPtr name, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)

Disassembly:
	0x034BD088 LDR X0, [X0 + 0x850]
	0x034BD08C BL 0x1C16CF4
	0x034BD090 MOVZ W8, 0x1
	0x034BD094 STRB W8, [X21 + 0x350]
	0x034BD098 LDR X0, [X20]
	0x034BD09C ADRP X20, 0xC5E000
	0x034BD0A0 LDR W8, [X0 + 0xE0]
	0x034BD0A4 LDR X20, [X20 + 0x850]
	0x034BD0A8 CBNZ W8, 0x34BD0B0
	0x034BD0AC BL 0x1C16DFC
	0x034BD0B0 MOV X0, X19
	0x034BD0B4 BL 0x34B404C
	0x034BD0B8 MOV X19, X0
	0x034BD0BC BL 0x34BD0F4
	0x034BD0C0 LDR X8, [X20]
	0x034BD0C4 MOV X20, X0
	0x034BD0C8 LDR W9, [X8 + 0xE0]
	0x034BD0CC CBNZ W9, 0x34BD0D8
	0x034BD0D0 MOV X0, X8
	0x034BD0D4 BL 0x1C16DFC
	0x034BD0D8 MOV X0, X19
	0x034BD0DC MOV X1, X31
	0x034BD0E0 BL 0x32C1060
	0x034BD0E4 MOV X0, X20
	0x034BD0E8 LDP X20, X19, [X31 + 0x10]
	0x034BD0EC LDP X30, X21, [X31], #0x20
	0x034BD0F0 RET
	0x034BD0F4 SUB X31, X31, 0x50
	0x034BD0F8 STR X30, [X31 + 0x30]
	0x034BD0FC STP X20, X19, [X31 + 0x40]
	0x034BD100 ADRP X20, 0xF21000
	0x034BD104 LDR X8, [X20 + 0x358]
	0x034BD108 MOV X19, X0
	0x034BD10C CBNZ X8, 0x34BD158
	0x034BD110 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD114 LDR V0, [X12 + 0x5B8]
	0x034BD118 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD11C ADRP X10, 0xFFFFFFFFFD641000
	0x034BD120 ADD X8, X8, 0xDD2
	0x034BD124 MOVZ W9, 0x11
	0x034BD128 ADD X10, X10, 0x3F6
	0x034BD12C MOVZ W11, 0x20
	0x034BD130 MOVZ W13, 0x8
	0x034BD134 ADD X0, X31, 0x0
	0x034BD138 STP X8, X9, [X31]
	0x034BD13C STP X10, X11, [X31 + 0x10]
	0x034BD140 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X24, 0xF22000
	010 Move X8, [X24+632]
	011 Move X19, X4
	012 Move X21, X3
	013 Move X23, X2
	014 Move X20, X1
	015 Move X22, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {38}
	018 Move X12, -43839488
	019 Move V0, [X12+1464]
	020 Move X8, -43683840
	021 Move X10, -43794432
	022 Add X8, X8, 3538
	023 Move W9, 17
	024 Add X10, X10, 1597
	025 Move W11, 35
	026 Move W13, 40
	027 Add X0, X31, 0
	028 Move [X31], X8
	029 Move [X31+8], X9
	030 Move [X31+16], X10
	031 Move [X31+24], X11
	032 Move [X31+40], W13
	033 Move [X31+32], D0
	034 Move [X31+44], W31
	035 Call 0x1C1829C
	036 Move X8, X0
	037 Move [X24+632], X0
	038 Add X9, X23, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X10, X21, 32
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move X0, X22
	045 Move X1, X20
	046 Move X4, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X20, [X31+96]
	049 Move X19, [X31+104]
	050 Move X22, [X31+80]
	051 Move X21, [X31+88]
	052 Move X24, [X31+64]
	053 Move X23, [X31+72]
	054 Move X30, [X31+48]
	055 Add X31, X31, 112
	056 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipChannelCfg(System.Int64 connection_id, System.String channel_name, System.String attnmodel, System.Boolean disable_spatialization)

Disassembly:
	0x034BD144 STR D0, [X31 + 0x20]
	0x034BD148 STRB W31, [X31 + 0x2C]
	0x034BD14C BL 0x1C1729C
	0x034BD150 MOV X8, X0
	0x034BD154 STR X0, [X20 + 0x358]
	0x034BD158 MOV X0, X19
	0x034BD15C BLR X8
	0x034BD160 LDP X20, X19, [X31 + 0x40]
	0x034BD164 LDR X30, [X31 + 0x30]
	0x034BD168 ADD X31, X31, 0x50
	0x034BD16C RET
	0x034BD170 STP X30, X21, [X31 - 0x20]!
	0x034BD174 STP X20, X19, [X31 + 0x10]
	0x034BD178 ADRP X21, 0xF21000
	0x034BD17C ADRP X20, 0xC75000
	0x034BD180 LDRB W8, [X21 + 0x360]
	0x034BD184 LDR X20, [X20 + 0x328]
	0x034BD188 MOV X19, X0
	0x034BD18C TBNZ X8, 0x0, 0x34BD1B0
	0x034BD190 ADRP X0, 0xC75000
	0x034BD194 LDR X0, [X0 + 0x328]
	0x034BD198 BL 0x1C16CF4
	0x034BD19C ADRP X0, 0xC5E000
	0x034BD1A0 LDR X0, [X0 + 0x850]
	0x034BD1A4 BL 0x1C16CF4
	0x034BD1A8 MOVZ W8, 0x1
	0x034BD1AC STRB W8, [X21 + 0x360]
	0x034BD1B0 LDR X0, [X20]
	0x034BD1B4 ADRP X20, 0xC5E000
	0x034BD1B8 LDR W8, [X0 + 0xE0]
	0x034BD1BC LDR X20, [X20 + 0x850]
	0x034BD1C0 CBNZ W8, 0x34BD1C8
	0x034BD1C4 BL 0x1C16DFC
	0x034BD1C8 MOV X0, X19
	0x034BD1CC BL 0x34B404C
	0x034BD1D0 MOV X19, X0
	0x034BD1D4 BL 0x34BD20C
	0x034BD1D8 LDR X8, [X20]
	0x034BD1DC MOV X20, X0
	0x034BD1E0 LDR W9, [X8 + 0xE0]
	0x034BD1E4 CBNZ W9, 0x34BD1F0
	0x034BD1E8 MOV X0, X8
	0x034BD1EC BL 0x1C16DFC
	0x034BD1F0 MOV X0, X19
	0x034BD1F4 MOV X1, X31
	0x034BD1F8 BL 0x32C1060
	0x034BD1FC MOV X0, X20
	0x034BD200 LDP X20, X19, [X31 + 0x10]
	0x034BD204 LDP X30, X21, [X31], #0x20
	0x034BD208 RET
	0x034BD20C SUB X31, X31, 0x50
	0x034BD210 STR X30, [X31 + 0x30]
	0x034BD214 STP X20, X19, [X31 + 0x40]
	0x034BD218 ADRP X20, 0xF21000
	0x034BD21C LDR X8, [X20 + 0x368]
	0x034BD220 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xF22000
	009 Move X23, 0xC76000
	010 Move W8, [X24+640]
	011 Move X23, [X23+808]
	012 Move W19, W3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xC76000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0xC5F000
	024 Move X0, [X0+2128]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+640], W8
	028 Move X0, [X23]
	029 Move X23, 0xC5F000
	030 Move W8, [X0+224]
	031 Move X23, [X23+2128]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Call CAPI.StringToNative, X0
	037 Move X22, X0
	038 Move X0, X21
	039 Call CAPI.StringToNative, X0
	040 Move X21, X0
	041 And W3, W19, 1
	042 Move X0, X20
	043 Move X1, X22
	044 Move X2, X21
	045 Call CAPI.ovr_NetSync_SetVoipChannelCfg_Native, X0, X1, X2, X3
	046 Move X8, [X23]
	047 Move X19, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X22
	054 Move X1, X31
	055 Call Marshal.FreeCoTaskMem, X0
	056 Move X0, X21
	057 Move X1, X31
	058 Call Marshal.FreeCoTaskMem, X0
	059 Move X0, X19
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X30, [X31+64]
	067 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipChannelCfg_Native(System.Int64 connection_id, System.IntPtr channel_name, System.IntPtr attnmodel, System.Boolean disable_spatialization)

Disassembly:
	0x034BD224 CBNZ X8, 0x34BD270
	0x034BD228 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD22C LDR V0, [X12 + 0x5B8]
	0x034BD230 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD234 ADRP X10, 0xFFFFFFFFFD637000
	0x034BD238 ADD X8, X8, 0xDD2
	0x034BD23C MOVZ W9, 0x11
	0x034BD240 ADD X10, X10, 0x5D6
	0x034BD244 MOVZ W11, 0x25
	0x034BD248 MOVZ W13, 0x8
	0x034BD24C ADD X0, X31, 0x0
	0x034BD250 STP X8, X9, [X31]
	0x034BD254 STP X10, X11, [X31 + 0x10]
	0x034BD258 STR W13, [X31 + 0x28]
	0x034BD25C STR D0, [X31 + 0x20]
	0x034BD260 STRB W31, [X31 + 0x2C]
	0x034BD264 BL 0x1C1729C
	0x034BD268 MOV X8, X0
	0x034BD26C STR X0, [X20 + 0x368]
	0x034BD270 MOV X0, X19
	0x034BD274 BLR X8
	0x034BD278 LDP X20, X19, [X31 + 0x40]
	0x034BD27C LDR X30, [X31 + 0x30]
	0x034BD280 ADD X31, X31, 0x50
	0x034BD284 RET
	0x034BD288 SUB X31, X31, 0x50
	0x034BD28C STR X30, [X31 + 0x30]
	0x034BD290 STP X20, X19, [X31 + 0x40]
	0x034BD294 ADRP X20, 0xF21000
	0x034BD298 LDR X8, [X20 + 0x370]
	0x034BD29C MOV X19, X0
	0x034BD2A0 CBNZ X8, 0x34BD2EC
	0x034BD2A4 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD2A8 LDR V0, [X12 + 0x5B8]
	0x034BD2AC ADRP X8, 0xFFFFFFFFFD656000
	0x034BD2B0 ADRP X10, 0xFFFFFFFFFD660000
	0x034BD2B4 ADD X8, X8, 0xDD2
	0x034BD2B8 MOVZ W9, 0x11
	0x034BD2BC ADD X10, X10, 0xED2

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xF22000
	009 Move X8, [X23+648]
	010 Move W21, W3
	011 Move X19, X2
	012 Move X20, X1
	013 Move X22, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {36}
	016 Move X12, -43839488
	017 Move V0, [X12+1464]
	018 Move X8, -43683840
	019 Move X10, -43687936
	020 Add X8, X8, 3538
	021 Move W9, 17
	022 Add X10, X10, 40
	023 Move W11, 29
	024 Move W13, 28
	025 Add X0, X31, 0
	026 Move [X31], X8
	027 Move [X31+8], X9
	028 Move [X31+16], X10
	029 Move [X31+24], X11
	030 Move [X31+40], W13
	031 Move [X31+32], D0
	032 Move [X31+44], W31
	033 Call 0x1C1829C
	034 Move X8, X0
	035 Move [X23+648], X0
	036 And W3, W21, 1
	037 Move X0, X22
	038 Move X1, X20
	039 Move X2, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, [X31+80]
	042 Move X19, [X31+88]
	043 Move X22, [X31+64]
	044 Move X21, [X31+72]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Add X31, X31, 96
	048 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipGroup(System.Int64 connection_id, System.String group_id)

Disassembly:
	0x034BD2C0 MOVZ W11, 0xC
	0x034BD2C4 MOVZ W13, 0x8
	0x034BD2C8 ADD X0, X31, 0x0
	0x034BD2CC STP X8, X9, [X31]
	0x034BD2D0 STP X10, X11, [X31 + 0x10]
	0x034BD2D4 STR W13, [X31 + 0x28]
	0x034BD2D8 STR D0, [X31 + 0x20]
	0x034BD2DC STRB W31, [X31 + 0x2C]
	0x034BD2E0 BL 0x1C1729C
	0x034BD2E4 MOV X8, X0
	0x034BD2E8 STR X0, [X20 + 0x370]
	0x034BD2EC MOV X0, X19
	0x034BD2F0 BLR X8
	0x034BD2F4 LDP X20, X19, [X31 + 0x40]
	0x034BD2F8 LDR X30, [X31 + 0x30]
	0x034BD2FC ADD X31, X31, 0x50
	0x034BD300 RET
	0x034BD304 SUB X31, X31, 0x40
	0x034BD308 STP X30, X19, [X31 + 0x30]
	0x034BD30C ADRP X19, 0xF21000
	0x034BD310 LDR X8, [X19 + 0x378]
	0x034BD314 CBNZ X8, 0x34BD35C
	0x034BD318 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD31C LDR V0, [X12 + 0x5B8]
	0x034BD320 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD324 ADRP X10, 0xFFFFFFFFFD631000
	0x034BD328 ADD X8, X8, 0xDD2
	0x034BD32C MOVZ W9, 0x11
	0x034BD330 ADD X10, X10, 0x7E5
	0x034BD334 MOVZ W11, 0x17
	0x034BD338 ADD X0, X31, 0x0
	0x034BD33C STR W31, [X31 + 0x28]
	0x034BD340 STP X8, X9, [X31]
	0x034BD344 STP X10, X11, [X31 + 0x10]
	0x034BD348 STR D0, [X31 + 0x20]
	0x034BD34C STRB W31, [X31 + 0x2C]
	0x034BD350 BL 0x1C1729C
	0x034BD354 MOV X8, X0
	0x034BD358 STR X0, [X19 + 0x378]
	0x034BD35C BLR X8
	0x034BD360 LDP X30, X19, [X31 + 0x30]
	0x034BD364 ADD X31, X31, 0x40
	0x034BD368 RET
	0x034BD36C SUB X31, X31, 0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF22000
	007 Move X21, 0xC76000
	008 Move W8, [X22+656]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC76000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC5F000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+656], W8
	024 Move X0, [X21]
	025 Move X21, 0xC5F000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_NetSync_SetVoipGroup_Native, X0, X1
	037 Move X8, [X21]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Call Marshal.FreeCoTaskMem, X0
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipGroup_Native(System.Int64 connection_id, System.IntPtr group_id)

Disassembly:
	0x034BD370 STP X30, X19, [X31 + 0x30]
	0x034BD374 ADRP X19, 0xF21000
	0x034BD378 LDR X8, [X19 + 0x380]
	0x034BD37C CBNZ X8, 0x34BD3C4
	0x034BD380 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD384 LDR V0, [X12 + 0x5B8]
	0x034BD388 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD38C ADRP X10, 0xFFFFFFFFFD631000
	0x034BD390 ADD X8, X8, 0xDD2
	0x034BD394 MOVZ W9, 0x11
	0x034BD398 ADD X10, X10, 0x7FD
	0x034BD39C MOVZ W11, 0x18
	0x034BD3A0 ADD X0, X31, 0x0
	0x034BD3A4 STR W31, [X31 + 0x28]
	0x034BD3A8 STP X8, X9, [X31]
	0x034BD3AC STP X10, X11, [X31 + 0x10]
	0x034BD3B0 STR D0, [X31 + 0x20]
	0x034BD3B4 STRB W31, [X31 + 0x2C]
	0x034BD3B8 BL 0x1C1729C
	0x034BD3BC MOV X8, X0
	0x034BD3C0 STR X0, [X19 + 0x380]
	0x034BD3C4 BLR X8
	0x034BD3C8 LDP X30, X19, [X31 + 0x30]
	0x034BD3CC ADD X31, X31, 0x40
	0x034BD3D0 RET
	0x034BD3D4 SUB X31, X31, 0x50
	0x034BD3D8 STR X30, [X31 + 0x30]
	0x034BD3DC STP X20, X19, [X31 + 0x40]
	0x034BD3E0 ADRP X20, 0xF21000
	0x034BD3E4 LDR X8, [X20 + 0x388]
	0x034BD3E8 MOV X19, X0
	0x034BD3EC CBNZ X8, 0x34BD438
	0x034BD3F0 ADRP X12, 0xFFFFFFFFFD630000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF22000
	007 Move X8, [X21+664]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43839488
	013 Move V0, [X12+1464]
	014 Move X8, -43683840
	015 Move X10, -43819008
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1754
	019 Move W11, 24
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+664], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipListentoChannels(System.Int64 connection_id, System.String[] listento_channels, System.UIntPtr count)

Disassembly:
	0x034BD3F4 LDR V0, [X12 + 0x5B8]
	0x034BD3F8 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD3FC ADRP X10, 0xFFFFFFFFFD63D000
	0x034BD400 ADD X8, X8, 0xDD2
	0x034BD404 MOVZ W9, 0x11
	0x034BD408 ADD X10, X10, 0x7F7
	0x034BD40C MOVZ W11, 0x1A
	0x034BD410 MOVZ W13, 0x8
	0x034BD414 ADD X0, X31, 0x0
	0x034BD418 STP X8, X9, [X31]
	0x034BD41C STP X10, X11, [X31 + 0x10]
	0x034BD420 STR W13, [X31 + 0x28]
	0x034BD424 STR D0, [X31 + 0x20]
	0x034BD428 STRB W31, [X31 + 0x2C]
	0x034BD42C BL 0x1C1729C
	0x034BD430 MOV X8, X0
	0x034BD434 STR X0, [X20 + 0x388]
	0x034BD438 MOV X0, X19
	0x034BD43C BLR X8
	0x034BD440 LDP X20, X19, [X31 + 0x40]
	0x034BD444 LDR X30, [X31 + 0x30]
	0x034BD448 ADD X31, X31, 0x50
	0x034BD44C RET
	0x034BD450 SUB X31, X31, 0x40
	0x034BD454 STP X30, X19, [X31 + 0x30]
	0x034BD458 ADRP X19, 0xF21000
	0x034BD45C LDR X8, [X19 + 0x390]
	0x034BD460 CBNZ X8, 0x34BD4A8
	0x034BD464 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD468 LDR V0, [X12 + 0x5B8]
	0x034BD46C ADRP X8, 0xFFFFFFFFFD656000
	0x034BD470 ADRP X10, 0xFFFFFFFFFD66C000
	0x034BD474 ADD X8, X8, 0xDD2
	0x034BD478 MOVZ W9, 0x11
	0x034BD47C ADD X10, X10, 0xD1E
	0x034BD480 MOVZ W11, 0x18
	0x034BD484 ADD X0, X31, 0x0
	0x034BD488 STR W31, [X31 + 0x28]
	0x034BD48C STP X8, X9, [X31]
	0x034BD490 STP X10, X11, [X31 + 0x10]
	0x034BD494 STR D0, [X31 + 0x20]
	0x034BD498 STRB W31, [X31 + 0x2C]
	0x034BD49C BL 0x1C1729C
	0x034BD4A0 MOV X8, X0
	0x034BD4A4 STR X0, [X19 + 0x390]
	0x034BD4A8 BLR X8
	0x034BD4AC LDP X30, X19, [X31 + 0x30]
	0x034BD4B0 ADD X31, X31, 0x40
	0x034BD4B4 RET
	0x034BD4B8 SUB X31, X31, 0x40
	0x034BD4BC STP X30, X19, [X31 + 0x30]
	0x034BD4C0 ADRP X19, 0xF21000
	0x034BD4C4 LDR X8, [X19 + 0x398]
	0x034BD4C8 CBNZ X8, 0x34BD510
	0x034BD4CC ADRP X12, 0xFFFFFFFFFD630000
	0x034BD4D0 LDR V0, [X12 + 0x5B8]
	0x034BD4D4 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD4D8 ADRP X10, 0xFFFFFFFFFD651000
	0x034BD4DC ADD X8, X8, 0xDD2
	0x034BD4E0 MOVZ W9, 0x11
	0x034BD4E4 ADD X10, X10, 0x432
	0x034BD4E8 MOVZ W11, 0x1F
	0x034BD4EC ADD X0, X31, 0x0
	0x034BD4F0 STR W31, [X31 + 0x28]
	0x034BD4F4 STP X8, X9, [X31]
	0x034BD4F8 STP X10, X11, [X31 + 0x10]
	0x034BD4FC STR D0, [X31 + 0x20]
	0x034BD500 STRB W31, [X31 + 0x2C]
	0x034BD504 BL 0x1C1729C
	0x034BD508 MOV X8, X0
	0x034BD50C STR X0, [X19 + 0x398]
	0x034BD510 BLR X8
	0x034BD514 LDP X30, X19, [X31 + 0x30]
	0x034BD518 ADD X31, X31, 0x40
	0x034BD51C RET
	0x034BD520 SUB X31, X31, 0x50
	0x034BD524 STR X30, [X31 + 0x30]
	0x034BD528 STP X20, X19, [X31 + 0x40]
	0x034BD52C ADRP X20, 0xF21000
	0x034BD530 LDR X8, [X20 + 0x3A0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X23, 0xF22000
	012 Move X8, [X23+672]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Compare X8, 0
	017 JumpIfEqual {52}
	018 Compare X20, 0
	019 JumpIfEqual {74}
	020 Move X24, [X20+24]
	021 Move X8, X24
	022 ShiftRight X8, 61
	023 And X8, X8, 0xFFFFFFF
	024 Add X0, X8, 8
	025 Call 0x1C17F14
	026 Move X22, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X0], X31
	029 And X24, X24, 0
	030 Add X25, X20, 32
	031 Move X26, X22
	032 Move X0, [X25+8]
	033 Call 0x1C1827C
	034 Subtract X24, X24, 1
	035 Move [X26+8], X0
	036 Move X8, [X23+672]
	037 Move X0, X21
	038 Move X1, X22
	039 Move X2, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X20+24]
	042 Move X19, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 And X20, X8, 0
	045 Move X21, X22
	046 Move X0, [X21]
	047 Call 0x1C18290
	048 Subtract X20, X20, 1
	049 Move [X21+8], X31
	050 Move X0, X22
	051 Call 0x1C18290
	052 Move X12, -43839488
	053 Move V0, [X12+1464]
	054 Move X8, -43683840
	055 Move X10, -43753472
	056 Add X8, X8, 3538
	057 Move W9, 17
	058 Add X10, X10, 640
	059 Move W11, 35
	060 Move W13, 24
	061 Add X0, X31, 0
	062 Move [X31], X8
	063 Move [X31+8], X9
	064 Move [X31+16], X10
	065 Move [X31+24], X11
	066 Move [X31+40], W13
	067 Move [X31+32], D0
	068 Move [X31+44], W31
	069 Call 0x1C1829C
	070 Move X8, X0
	071 Move [X23+672], X0
	072 Compare X20, 0
	073 JumpIfNotEqual {20}
	074 Move X0, X21
	075 Move X1, X31
	076 Move X2, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X19, X0
	079 Move X0, X19
	080 Move X20, [X31+112]
	081 Move X19, [X31+120]
	082 Move X22, [X31+96]
	083 Move X21, [X31+104]
	084 Move X24, [X31+80]
	085 Move X23, [X31+88]
	086 Move X26, [X31+64]
	087 Move X25, [X31+72]
	088 Move X30, [X31+48]
	089 Add X31, X31, 128
	090 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipMicSource(System.Int64 connection_id, Oculus.Platform.NetSyncVoipMicSource mic_source)

Disassembly:
	0x034BD534 MOV X19, X0
	0x034BD538 CBNZ X8, 0x34BD584
	0x034BD53C ADRP X12, 0xFFFFFFFFFD630000
	0x034BD540 LDR V0, [X12 + 0x5B8]
	0x034BD544 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD548 ADRP X10, 0xFFFFFFFFFD651000
	0x034BD54C ADD X8, X8, 0xDD2
	0x034BD550 MOVZ W9, 0x11
	0x034BD554 ADD X10, X10, 0x452
	0x034BD558 MOVZ W11, 0x17
	0x034BD55C MOVZ W13, 0x8
	0x034BD560 ADD X0, X31, 0x0
	0x034BD564 STP X8, X9, [X31]
	0x034BD568 STP X10, X11, [X31 + 0x10]
	0x034BD56C STR W13, [X31 + 0x28]
	0x034BD570 STR D0, [X31 + 0x20]
	0x034BD574 STRB W31, [X31 + 0x2C]
	0x034BD578 BL 0x1C1729C
	0x034BD57C MOV X8, X0
	0x034BD580 STR X0, [X20 + 0x3A0]
	0x034BD584 MOV X0, X19
	0x034BD588 BLR X8
	0x034BD58C LDP X20, X19, [X31 + 0x40]
	0x034BD590 LDR X30, [X31 + 0x30]
	0x034BD594 ADD X31, X31, 0x50
	0x034BD598 RET
	0x034BD59C SUB X31, X31, 0x40
	0x034BD5A0 STP X30, X19, [X31 + 0x30]
	0x034BD5A4 ADRP X19, 0xF21000
	0x034BD5A8 LDR X8, [X19 + 0x3A8]
	0x034BD5AC CBNZ X8, 0x34BD5F4
	0x034BD5B0 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD5B4 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF22000
	007 Move X8, [X21+680]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43839488
	013 Move V0, [X12+1464]
	014 Move X8, -43683840
	015 Move X10, -43802624
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1603
	019 Move W11, 28
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+680], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipSessionMuted(System.Int64 connection_id, System.UInt64 session_id, System.Boolean muted)

Disassembly:
	0x034BD5B8 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD5BC ADRP X10, 0xFFFFFFFFFD64F000
	0x034BD5C0 ADD X8, X8, 0xDD2
	0x034BD5C4 MOVZ W9, 0x11
	0x034BD5C8 ADD X10, X10, 0x29E
	0x034BD5CC MOVZ W11, 0x17
	0x034BD5D0 ADD X0, X31, 0x0
	0x034BD5D4 STR W31, [X31 + 0x28]
	0x034BD5D8 STP X8, X9, [X31]
	0x034BD5DC STP X10, X11, [X31 + 0x10]
	0x034BD5E0 STR D0, [X31 + 0x20]
	0x034BD5E4 STRB W31, [X31 + 0x2C]
	0x034BD5E8 BL 0x1C1729C
	0x034BD5EC MOV X8, X0
	0x034BD5F0 STR X0, [X19 + 0x3A8]
	0x034BD5F4 BLR X8
	0x034BD5F8 LDP X30, X19, [X31 + 0x30]
	0x034BD5FC ADD X31, X31, 0x40
	0x034BD600 RET
	0x034BD604 SUB X31, X31, 0x40
	0x034BD608 STP X30, X19, [X31 + 0x30]
	0x034BD60C ADRP X19, 0xF21000
	0x034BD610 LDR X8, [X19 + 0x3B0]
	0x034BD614 CBNZ X8, 0x34BD65C
	0x034BD618 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD61C LDR V0, [X12 + 0x5B8]
	0x034BD620 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD624 ADRP X10, 0xFFFFFFFFFD63B000
	0x034BD628 ADD X8, X8, 0xDD2
	0x034BD62C MOVZ W9, 0x11
	0x034BD630 ADD X10, X10, 0x661
	0x034BD634 MOVZ W11, 0x1C
	0x034BD638 ADD X0, X31, 0x0
	0x034BD63C STR W31, [X31 + 0x28]
	0x034BD640 STP X8, X9, [X31]
	0x034BD644 STP X10, X11, [X31 + 0x10]
	0x034BD648 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF22000
	008 Move X8, [X22+688]
	009 Move W20, W2
	010 Move X19, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43839488
	015 Move V0, [X12+1464]
	016 Move X8, -43683840
	017 Move X10, -43667456
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 3388
	021 Move W11, 31
	022 Move W13, 20
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+688], X0
	034 And W2, W20, 1
	035 Move X0, X21
	036 Move X1, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 Add X31, X31, 96
	044 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipSpeaktoChannels(System.Int64 connection_id, System.String[] speakto_channels, System.UIntPtr count)

Disassembly:
	0x034BD64C STRB W31, [X31 + 0x2C]
	0x034BD650 BL 0x1C1729C
	0x034BD654 MOV X8, X0
	0x034BD658 STR X0, [X19 + 0x3B0]
	0x034BD65C BLR X8
	0x034BD660 LDP X30, X19, [X31 + 0x30]
	0x034BD664 ADD X31, X31, 0x40
	0x034BD668 RET
	0x034BD66C SUB X31, X31, 0x40
	0x034BD670 STP X30, X19, [X31 + 0x30]
	0x034BD674 ADRP X19, 0xF21000
	0x034BD678 LDR X8, [X19 + 0x3B8]
	0x034BD67C CBNZ X8, 0x34BD6C4
	0x034BD680 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD684 LDR V0, [X12 + 0x5B8]
	0x034BD688 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD68C ADRP X10, 0xFFFFFFFFFD653000
	0x034BD690 ADD X8, X8, 0xDD2
	0x034BD694 MOVZ W9, 0x11
	0x034BD698 ADD X10, X10, 0x42D
	0x034BD69C MOVZ W11, 0x15
	0x034BD6A0 ADD X0, X31, 0x0
	0x034BD6A4 STR W31, [X31 + 0x28]
	0x034BD6A8 STP X8, X9, [X31]
	0x034BD6AC STP X10, X11, [X31 + 0x10]
	0x034BD6B0 STR D0, [X31 + 0x20]
	0x034BD6B4 STRB W31, [X31 + 0x2C]
	0x034BD6B8 BL 0x1C1729C
	0x034BD6BC MOV X8, X0
	0x034BD6C0 STR X0, [X19 + 0x3B8]
	0x034BD6C4 BLR X8
	0x034BD6C8 LDP X30, X19, [X31 + 0x30]
	0x034BD6CC ADD X31, X31, 0x40
	0x034BD6D0 RET
	0x034BD6D4 SUB X31, X31, 0x50
	0x034BD6D8 STR X30, [X31 + 0x30]
	0x034BD6DC STP X20, X19, [X31 + 0x40]
	0x034BD6E0 ADRP X20, 0xF21000
	0x034BD6E4 LDR X8, [X20 + 0x3C0]
	0x034BD6E8 MOV X19, X0
	0x034BD6EC CBNZ X8, 0x34BD738
	0x034BD6F0 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD6F4 LDR V0, [X12 + 0x5B8]
	0x034BD6F8 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD6FC ADRP X10, 0xFFFFFFFFFD637000
	0x034BD700 ADD X8, X8, 0xDD2
	0x034BD704 MOVZ W9, 0x11
	0x034BD708 ADD X10, X10, 0x5FC
	0x034BD70C MOVZ W11, 0x18
	0x034BD710 MOVZ W13, 0x8
	0x034BD714 ADD X0, X31, 0x0
	0x034BD718 STP X8, X9, [X31]
	0x034BD71C STP X10, X11, [X31 + 0x10]
	0x034BD720 STR W13, [X31 + 0x28]
	0x034BD724 STR D0, [X31 + 0x20]
	0x034BD728 STRB W31, [X31 + 0x2C]
	0x034BD72C BL 0x1C1729C
	0x034BD730 MOV X8, X0
	0x034BD734 STR X0, [X20 + 0x3C0]
	0x034BD738 MOV X0, X19
	0x034BD73C BLR X8
	0x034BD740 LDP X20, X19, [X31 + 0x40]
	0x034BD744 LDR X30, [X31 + 0x30]
	0x034BD748 ADD X31, X31, 0x50
	0x034BD74C RET
	0x034BD750 SUB X31, X31, 0x50
	0x034BD754 STR X30, [X31 + 0x30]
	0x034BD758 STP X20, X19, [X31 + 0x40]
	0x034BD75C ADRP X20, 0xF21000
	0x034BD760 LDR X8, [X20 + 0x3C8]
	0x034BD764 MOV X19, X0
	0x034BD768 CBNZ X8, 0x34BD7B4
	0x034BD76C ADRP X12, 0xFFFFFFFFFD630000
	0x034BD770 LDR V0, [X12 + 0x5B8]
	0x034BD774 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD778 ADRP X10, 0xFFFFFFFFFD66A000
	0x034BD77C ADD X8, X8, 0xDD2
	0x034BD780 MOVZ W9, 0x11
	0x034BD784 ADD X10, X10, 0xC9E
	0x034BD788 MOVZ W11, 0x20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X23, 0xF22000
	012 Move X8, [X23+696]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Compare X8, 0
	017 JumpIfEqual {52}
	018 Compare X20, 0
	019 JumpIfEqual {74}
	020 Move X24, [X20+24]
	021 Move X8, X24
	022 ShiftRight X8, 61
	023 And X8, X8, 0xFFFFFFF
	024 Add X0, X8, 8
	025 Call 0x1C17F14
	026 Move X22, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X0], X31
	029 And X24, X24, 0
	030 Add X25, X20, 32
	031 Move X26, X22
	032 Move X0, [X25+8]
	033 Call 0x1C1827C
	034 Subtract X24, X24, 1
	035 Move [X26+8], X0
	036 Move X8, [X23+696]
	037 Move X0, X21
	038 Move X1, X22
	039 Move X2, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X20+24]
	042 Move X19, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 And X20, X8, 0
	045 Move X21, X22
	046 Move X0, [X21]
	047 Call 0x1C18290
	048 Subtract X20, X20, 1
	049 Move [X21+8], X31
	050 Move X0, X22
	051 Call 0x1C18290
	052 Move X12, -43839488
	053 Move V0, [X12+1464]
	054 Move X8, -43683840
	055 Move X10, -43585536
	056 Add X8, X8, 3538
	057 Move W9, 17
	058 Add X10, X10, 2979
	059 Move W11, 34
	060 Move W13, 24
	061 Add X0, X31, 0
	062 Move [X31], X8
	063 Move [X31+8], X9
	064 Move [X31+16], X10
	065 Move [X31+24], X11
	066 Move [X31+40], W13
	067 Move [X31+32], D0
	068 Move [X31+44], W31
	069 Call 0x1C1829C
	070 Move X8, X0
	071 Move [X23+696], X0
	072 Compare X20, 0
	073 JumpIfNotEqual {20}
	074 Move X0, X21
	075 Move X1, X31
	076 Move X2, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X19, X0
	079 Move X0, X19
	080 Move X20, [X31+112]
	081 Move X19, [X31+120]
	082 Move X22, [X31+96]
	083 Move X21, [X31+104]
	084 Move X24, [X31+80]
	085 Move X23, [X31+88]
	086 Move X26, [X31+64]
	087 Move X25, [X31+72]
	088 Move X30, [X31+48]
	089 Add X31, X31, 128
	090 Return X0

Method: System.UInt64 ovr_NetSync_SetVoipStreamMode(System.Int64 connection_id, System.UInt64 sessionId, Oculus.Platform.NetSyncVoipStreamMode streamMode)

Disassembly:
	0x034BD78C MOVZ W13, 0x8
	0x034BD790 ADD X0, X31, 0x0
	0x034BD794 STP X8, X9, [X31]
	0x034BD798 STP X10, X11, [X31 + 0x10]
	0x034BD79C STR W13, [X31 + 0x28]
	0x034BD7A0 STR D0, [X31 + 0x20]
	0x034BD7A4 STRB W31, [X31 + 0x2C]
	0x034BD7A8 BL 0x1C1729C
	0x034BD7AC MOV X8, X0
	0x034BD7B0 STR X0, [X20 + 0x3C8]
	0x034BD7B4 MOV X0, X19
	0x034BD7B8 BLR X8
	0x034BD7BC LDP X20, X19, [X31 + 0x40]
	0x034BD7C0 LDR X30, [X31 + 0x30]
	0x034BD7C4 ADD X31, X31, 0x50
	0x034BD7C8 RET
	0x034BD7CC SUB X31, X31, 0x50
	0x034BD7D0 STR X30, [X31 + 0x30]
	0x034BD7D4 STP X20, X19, [X31 + 0x40]
	0x034BD7D8 ADRP X20, 0xF21000
	0x034BD7DC LDR X8, [X20 + 0x3D0]
	0x034BD7E0 MOV X19, X0
	0x034BD7E4 CBNZ X8, 0x34BD830
	0x034BD7E8 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD7EC LDR V0, [X12 + 0x5B8]
	0x034BD7F0 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD7F4 ADRP X10, 0xFFFFFFFFFD641000
	0x034BD7F8 ADD X8, X8, 0xDD2
	0x034BD7FC MOVZ W9, 0x11
	0x034BD800 ADD X10, X10, 0x417
	0x034BD804 MOVZ W11, 0x19
	0x034BD808 MOVZ W13, 0x8
	0x034BD80C ADD X0, X31, 0x0
	0x034BD810 STP X8, X9, [X31]
	0x034BD814 STP X10, X11, [X31 + 0x10]
	0x034BD818 STR W13, [X31 + 0x28]
	0x034BD81C STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF22000
	008 Move X8, [X22+704]
	009 Move W19, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43839488
	015 Move V0, [X12+1464]
	016 Move X8, -43683840
	017 Move X10, -43646976
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 384
	021 Move W11, 29
	022 Move W13, 20
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+704], X0
	034 Move X0, X21
	035 Move X1, X20
	036 Move W2, W19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 Add X31, X31, 96
	044 Return X0

Method: System.UInt64 ovr_Notification_MarkAsRead(System.UInt64 notificationID)

Disassembly:
	0x034BD820 STRB W31, [X31 + 0x2C]
	0x034BD824 BL 0x1C1729C
	0x034BD828 MOV X8, X0
	0x034BD82C STR X0, [X20 + 0x3D0]
	0x034BD830 MOV X0, X19
	0x034BD834 BLR X8
	0x034BD838 LDP X20, X19, [X31 + 0x40]
	0x034BD83C LDR X30, [X31 + 0x30]
	0x034BD840 ADD X31, X31, 0x50
	0x034BD844 RET
	0x034BD848 SUB X31, X31, 0x50
	0x034BD84C STP X30, X21, [X31 + 0x30]
	0x034BD850 STP X20, X19, [X31 + 0x40]
	0x034BD854 ADRP X21, 0xF21000
	0x034BD858 LDR X8, [X21 + 0x3D8]
	0x034BD85C MOV X19, X1
	0x034BD860 MOV X20, X0
	0x034BD864 CBNZ X8, 0x34BD8B0
	0x034BD868 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD86C LDR V0, [X12 + 0x5B8]
	0x034BD870 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD874 ADRP X10, 0xFFFFFFFFFD66A000
	0x034BD878 ADD X8, X8, 0xDD2
	0x034BD87C MOVZ W9, 0x11
	0x034BD880 ADD X10, X10, 0xCBF
	0x034BD884 MOVZ W11, 0x1A
	0x034BD888 MOVZ W13, 0x10
	0x034BD88C ADD X0, X31, 0x0
	0x034BD890 STP X8, X9, [X31]
	0x034BD894 STP X10, X11, [X31 + 0x10]
	0x034BD898 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF22000
	006 Move X8, [X20+712]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43839488
	011 Move V0, [X12+1464]
	012 Move X8, -43683840
	013 Move X10, -43753472
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 676
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+712], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Party_Create()

Disassembly:
	0x034BD89C STR D0, [X31 + 0x20]
	0x034BD8A0 STRB W31, [X31 + 0x2C]
	0x034BD8A4 BL 0x1C1729C
	0x034BD8A8 MOV X8, X0
	0x034BD8AC STR X0, [X21 + 0x3D8]
	0x034BD8B0 MOV X0, X20
	0x034BD8B4 MOV X1, X19
	0x034BD8B8 BLR X8
	0x034BD8BC LDP X20, X19, [X31 + 0x40]
	0x034BD8C0 LDP X30, X21, [X31 + 0x30]
	0x034BD8C4 ADD X31, X31, 0x50
	0x034BD8C8 RET
	0x034BD8CC SUB X31, X31, 0x50
	0x034BD8D0 STR X30, [X31 + 0x30]
	0x034BD8D4 STP X20, X19, [X31 + 0x40]
	0x034BD8D8 ADRP X20, 0xF21000
	0x034BD8DC LDR X8, [X20 + 0x3E0]
	0x034BD8E0 MOV X19, X0
	0x034BD8E4 CBNZ X8, 0x34BD930
	0x034BD8E8 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD8EC LDR V0, [X12 + 0x5B8]
	0x034BD8F0 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD8F4 ADRP X10, 0xFFFFFFFFFD63F000
	0x034BD8F8 ADD X8, X8, 0xDD2
	0x034BD8FC MOVZ W9, 0x11
	0x034BD900 ADD X10, X10, 0x72F

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF22000
	005 Move X8, [X19+720]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43839488
	009 Move V0, [X12+1464]
	010 Move X8, -43683840
	011 Move X10, -43835392
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1981
	015 Move W11, 16
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+720], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Party_GatherInApplication(System.UInt64 partyID, System.UInt64 appID)

Disassembly:
	0x034BD904 MOVZ W11, 0x1A
	0x034BD908 MOVZ W13, 0x8
	0x034BD90C ADD X0, X31, 0x0
	0x034BD910 STP X8, X9, [X31]
	0x034BD914 STP X10, X11, [X31 + 0x10]
	0x034BD918 STR W13, [X31 + 0x28]
	0x034BD91C STR D0, [X31 + 0x20]
	0x034BD920 STRB W31, [X31 + 0x2C]
	0x034BD924 BL 0x1C1729C
	0x034BD928 MOV X8, X0
	0x034BD92C STR X0, [X20 + 0x3E0]
	0x034BD930 MOV X0, X19
	0x034BD934 BLR X8
	0x034BD938 LDP X20, X19, [X31 + 0x40]
	0x034BD93C LDR X30, [X31 + 0x30]
	0x034BD940 ADD X31, X31, 0x50
	0x034BD944 RET
	0x034BD948 SUB X31, X31, 0x40
	0x034BD94C STP X30, X19, [X31 + 0x30]
	0x034BD950 ADRP X19, 0xF21000
	0x034BD954 LDR X8, [X19 + 0x3E8]
	0x034BD958 CBNZ X8, 0x34BD9A0
	0x034BD95C ADRP X12, 0xFFFFFFFFFD630000
	0x034BD960 LDR V0, [X12 + 0x5B8]
	0x034BD964 ADRP X8, 0xFFFFFFFFFD656000
	0x034BD968 ADRP X10, 0xFFFFFFFFFD637000
	0x034BD96C ADD X8, X8, 0xDD2
	0x034BD970 MOVZ W9, 0x11
	0x034BD974 ADD X10, X10, 0x615
	0x034BD978 MOVZ W11, 0x1C
	0x034BD97C ADD X0, X31, 0x0
	0x034BD980 STR W31, [X31 + 0x28]
	0x034BD984 STP X8, X9, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF22000
	007 Move X8, [X21+728]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43839488
	013 Move V0, [X12+1464]
	014 Move X8, -43683840
	015 Move X10, -43601920
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3167
	019 Move W11, 29
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+728], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_Party_Get(System.UInt64 partyID)

Disassembly:
	0x034BD988 STP X10, X11, [X31 + 0x10]
	0x034BD98C STR D0, [X31 + 0x20]
	0x034BD990 STRB W31, [X31 + 0x2C]
	0x034BD994 BL 0x1C1729C
	0x034BD998 MOV X8, X0
	0x034BD99C STR X0, [X19 + 0x3E8]
	0x034BD9A0 BLR X8
	0x034BD9A4 LDP X30, X19, [X31 + 0x30]
	0x034BD9A8 ADD X31, X31, 0x40
	0x034BD9AC RET
	0x034BD9B0 SUB X31, X31, 0x40
	0x034BD9B4 STP X30, X19, [X31 + 0x30]
	0x034BD9B8 ADRP X19, 0xF21000
	0x034BD9BC LDR X8, [X19 + 0x3F0]
	0x034BD9C0 CBNZ X8, 0x34BDA08
	0x034BD9C4 ADRP X12, 0xFFFFFFFFFD630000
	0x034BD9C8 LDR V0, [X12 + 0x5B8]
	0x034BD9CC ADRP X8, 0xFFFFFFFFFD656000
	0x034BD9D0 ADRP X10, 0xFFFFFFFFFD641000
	0x034BD9D4 ADD X8, X8, 0xDD2
	0x034BD9D8 MOVZ W9, 0x11
	0x034BD9DC ADD X10, X10, 0x431
	0x034BD9E0 MOVZ W11, 0x14
	0x034BD9E4 ADD X0, X31, 0x0
	0x034BD9E8 STR W31, [X31 + 0x28]
	0x034BD9EC STP X8, X9, [X31]
	0x034BD9F0 STP X10, X11, [X31 + 0x10]
	0x034BD9F4 STR D0, [X31 + 0x20]
	0x034BD9F8 STRB W31, [X31 + 0x2C]
	0x034BD9FC BL 0x1C1729C
	0x034BDA00 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF22000
	006 Move X8, [X20+736]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43839488
	011 Move V0, [X12+1464]
	012 Move X8, -43683840
	013 Move X10, -43786240
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2025
	017 Move W11, 13
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+736], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Party_GetCurrent()

Disassembly:
	0x034BDA04 STR X0, [X19 + 0x3F0]
	0x034BDA08 BLR X8
	0x034BDA0C LDP X30, X19, [X31 + 0x30]
	0x034BDA10 ADD X31, X31, 0x40
	0x034BDA14 RET
	0x034BDA18 SUB X31, X31, 0x40
	0x034BDA1C STP X30, X19, [X31 + 0x30]
	0x034BDA20 ADRP X19, 0xF21000
	0x034BDA24 LDR X8, [X19 + 0x3F8]
	0x034BDA28 CBNZ X8, 0x34BDA70
	0x034BDA2C ADRP X12, 0xFFFFFFFFFD630000
	0x034BDA30 LDR V0, [X12 + 0x5B8]
	0x034BDA34 ADRP X8, 0xFFFFFFFFFD656000
	0x034BDA38 ADRP X10, 0xFFFFFFFFFD667000
	0x034BDA3C ADD X8, X8, 0xDD2
	0x034BDA40 MOVZ W9, 0x11
	0x034BDA44 ADD X10, X10, 0x2C0
	0x034BDA48 MOVZ W11, 0x1B
	0x034BDA4C ADD X0, X31, 0x0
	0x034BDA50 STR W31, [X31 + 0x28]
	0x034BDA54 STP X8, X9, [X31]
	0x034BDA58 STP X10, X11, [X31 + 0x10]
	0x034BDA5C STR D0, [X31 + 0x20]
	0x034BDA60 STRB W31, [X31 + 0x2C]
	0x034BDA64 BL 0x1C1729C
	0x034BDA68 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF22000
	005 Move X8, [X19+744]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43839488
	009 Move V0, [X12+1464]
	010 Move X8, -43683840
	011 Move X10, -43642880
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3773
	015 Move W11, 20
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+744], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Party_GetCurrentForUser(System.UInt64 userID)

Disassembly:
	0x034BDA6C STR X0, [X19 + 0x3F8]
	0x034BDA70 BLR X8
	0x034BDA74 LDP X30, X19, [X31 + 0x30]
	0x034BDA78 ADD X31, X31, 0x40
	0x034BDA7C RET
	0x034BDA80 SUB X31, X31, 0x40
	0x034BDA84 STP X30, X19, [X31 + 0x30]
	0x034BDA88 ADRP X19, 0xF21000
	0x034BDA8C LDR X8, [X19 + 0x400]
	0x034BDA90 CBNZ X8, 0x34BDAD8
	0x034BDA94 ADRP X12, 0xFFFFFFFFFD630000
	0x034BDA98 LDR V0, [X12 + 0x5B8]
	0x034BDA9C ADRP X8, 0xFFFFFFFFFD656000
	0x034BDAA0 ADRP X10, 0xFFFFFFFFFD663000
	0x034BDAA4 ADD X8, X8, 0xDD2
	0x034BDAA8 MOVZ W9, 0x11
	0x034BDAAC ADD X10, X10, 0x177
	0x034BDAB0 MOVZ W11, 0x24
	0x034BDAB4 ADD X0, X31, 0x0
	0x034BDAB8 STR W31, [X31 + 0x28]
	0x034BDABC STP X8, X9, [X31]
	0x034BDAC0 STP X10, X11, [X31 + 0x10]
	0x034BDAC4 STR D0, [X31 + 0x20]
	0x034BDAC8 STRB W31, [X31 + 0x2C]
	0x034BDACC BL 0x1C1729C
	0x034BDAD0 MOV X8, X0
	0x034BDAD4 STR X0, [X19 + 0x400]
	0x034BDAD8 BLR X8
	0x034BDADC LDP X30, X19, [X31 + 0x30]
	0x034BDAE0 ADD X31, X31, 0x40
	0x034BDAE4 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF22000
	006 Move X8, [X20+752]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43839488
	011 Move V0, [X12+1464]
	012 Move X8, -43683840
	013 Move X10, -43646976
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 414
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+752], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Party_Invite(System.UInt64 partyID, System.UInt64 userID)

Disassembly:
	0x034BDAE8 STR X30, [X31 - 0x30]!
	0x034BDAEC STP X22, X21, [X31 + 0x10]
	0x034BDAF0 STP X20, X19, [X31 + 0x20]
	0x034BDAF4 ADRP X22, 0xF21000
	0x034BDAF8 ADRP X21, 0xC75000
	0x034BDAFC LDRB W8, [X22 + 0x408]
	0x034BDB00 LDR X21, [X21 + 0x328]
	0x034BDB04 MOV X20, X1
	0x034BDB08 MOV X19, X0
	0x034BDB0C TBNZ X8, 0x0, 0x34BDB30
	0x034BDB10 ADRP X0, 0xC75000
	0x034BDB14 LDR X0, [X0 + 0x328]
	0x034BDB18 BL 0x1C16CF4
	0x034BDB1C ADRP X0, 0xC5E000
	0x034BDB20 LDR X0, [X0 + 0x850]
	0x034BDB24 BL 0x1C16CF4
	0x034BDB28 MOVZ W8, 0x1
	0x034BDB2C STRB W8, [X22 + 0x408]
	0x034BDB30 LDR X0, [X21]
	0x034BDB34 ADRP X21, 0xC5E000
	0x034BDB38 LDR W8, [X0 + 0xE0]
	0x034BDB3C LDR X21, [X21 + 0x850]
	0x034BDB40 CBNZ W8, 0x34BDB48
	0x034BDB44 BL 0x1C16DFC
	0x034BDB48 MOV X0, X20
	0x034BDB4C BL 0x34B404C
	0x034BDB50 MOV X20, X0
	0x034BDB54 MOV X0, X19
	0x034BDB58 MOV X1, X20
	0x034BDB5C BL 0x34BDB98
	0x034BDB60 LDR X8, [X21]
	0x034BDB64 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF22000
	007 Move X8, [X21+760]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {31}
	012 Move X12, -43839488
	013 Move V0, [X12+1464]
	014 Move X8, -43683840
	015 Move X10, -43593728
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3341
	019 Move W11, 16
	020 Add X0, X31, 0
	021 Move [X31], X8
	022 Move [X31+8], X9
	023 Move [X31+16], X10
	024 Move [X31+24], X11
	025 Move [X31+40], W11
	026 Move [X31+32], D0
	027 Move [X31+44], W31
	028 Call 0x1C1829C
	029 Move X8, X0
	030 Move [X21+760], X0
	031 Move X0, X20
	032 Move X1, X19
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X30, [X31+48]
	037 Move X21, [X31+56]
	038 Add X31, X31, 80
	039 Return X0

Method: System.UInt64 ovr_Party_Join(System.UInt64 partyID)

Disassembly:
	0x034BDB68 LDR W9, [X8 + 0xE0]
	0x034BDB6C CBNZ W9, 0x34BDB78
	0x034BDB70 MOV X0, X8
	0x034BDB74 BL 0x1C16DFC
	0x034BDB78 MOV X0, X20
	0x034BDB7C MOV X1, X31
	0x034BDB80 BL 0x32C1060
	0x034BDB84 MOV X0, X19
	0x034BDB88 LDP X20, X19, [X31 + 0x20]
	0x034BDB8C LDP X22, X21, [X31 + 0x10]
	0x034BDB90 LDR X30, [X31], #0x30
	0x034BDB94 RET
	0x034BDB98 SUB X31, X31, 0x50
	0x034BDB9C STP X30, X21, [X31 + 0x30]
	0x034BDBA0 STP X20, X19, [X31 + 0x40]
	0x034BDBA4 ADRP X21, 0xF21000
	0x034BDBA8 LDR X8, [X21 + 0x410]
	0x034BDBAC MOV X19, X1
	0x034BDBB0 MOV X20, X0
	0x034BDBB4 CBNZ X8, 0x34BDC00
	0x034BDBB8 ADRP X12, 0xFFFFFFFFFD630000
	0x034BDBBC LDR V0, [X12 + 0x5B8]
	0x034BDBC0 ADRP X8, 0xFFFFFFFFFD656000
	0x034BDBC4 ADRP X10, 0xFFFFFFFFFD660000
	0x034BDBC8 ADD X8, X8, 0xDD2
	0x034BDBCC MOVZ W9, 0x11
	0x034BDBD0 ADD X10, X10, 0xEDF
	0x034BDBD4 MOVZ W11, 0x29
	0x034BDBD8 MOVZ W13, 0x10
	0x034BDBDC ADD X0, X31, 0x0
	0x034BDBE0 STP X8, X9, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF22000
	006 Move X8, [X20+768]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43839488
	011 Move V0, [X12+1464]
	012 Move X8, -43683840
	013 Move X10, -43769856
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 999
	017 Move W11, 14
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+768], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Party_Leave(System.UInt64 partyID)

Disassembly:
	0x034BDBE4 STP X10, X11, [X31 + 0x10]
	0x034BDBE8 STR W13, [X31 + 0x28]
	0x034BDBEC STR D0, [X31 + 0x20]
	0x034BDBF0 STRB W31, [X31 + 0x2C]
	0x034BDBF4 BL 0x1C1729C
	0x034BDBF8 MOV X8, X0
	0x034BDBFC STR X0, [X21 + 0x410]
	0x034BDC00 MOV X0, X20
	0x034BDC04 MOV X1, X19
	0x034BDC08 BLR X8
	0x034BDC0C LDP X20, X19, [X31 + 0x40]
	0x034BDC10 LDP X30, X21, [X31 + 0x30]
	0x034BDC14 ADD X31, X31, 0x50
	0x034BDC18 RET
	0x034BDC1C STP X30, X23, [X31 - 0x30]!
	0x034BDC20 STP X22, X21, [X31 + 0x10]
	0x034BDC24 STP X20, X19, [X31 + 0x20]
	0x034BDC28 ADRP X23, 0xF21000
	0x034BDC2C ADRP X22, 0xC75000
	0x034BDC30 LDRB W8, [X23 + 0x418]
	0x034BDC34 LDR X22, [X22 + 0x328]
	0x034BDC38 MOV X19, X2
	0x034BDC3C MOV X21, X1
	0x034BDC40 MOV X20, X0
	0x034BDC44 TBNZ X8, 0x0, 0x34BDC68
	0x034BDC48 ADRP X0, 0xC75000
	0x034BDC4C LDR X0, [X0 + 0x328]
	0x034BDC50 BL 0x1C16CF4
	0x034BDC54 ADRP X0, 0xC5E000
	0x034BDC58 LDR X0, [X0 + 0x850]
	0x034BDC5C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF22000
	006 Move X8, [X20+776]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43839488
	011 Move V0, [X12+1464]
	012 Move X8, -43683840
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 70
	017 Move W11, 15
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+776], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_RichPresence_Clear()

Disassembly:
	0x034BDC60 MOVZ W8, 0x1
	0x034BDC64 STRB W8, [X23 + 0x418]
	0x034BDC68 LDR X0, [X22]
	0x034BDC6C ADRP X22, 0xC5E000
	0x034BDC70 LDR W8, [X0 + 0xE0]
	0x034BDC74 LDR X22, [X22 + 0x850]
	0x034BDC78 CBNZ W8, 0x34BDC80
	0x034BDC7C BL 0x1C16DFC
	0x034BDC80 MOV X0, X21
	0x034BDC84 BL 0x34B404C
	0x034BDC88 MOV X21, X0
	0x034BDC8C MOV X0, X20
	0x034BDC90 MOV X1, X21
	0x034BDC94 MOV X2, X19
	0x034BDC98 BL 0x34BDCD4
	0x034BDC9C LDR X8, [X22]
	0x034BDCA0 MOV X19, X0
	0x034BDCA4 LDR W9, [X8 + 0xE0]
	0x034BDCA8 CBNZ W9, 0x34BDCB4
	0x034BDCAC MOV X0, X8
	0x034BDCB0 BL 0x1C16DFC
	0x034BDCB4 MOV X0, X21
	0x034BDCB8 MOV X1, X31
	0x034BDCBC BL 0x32C1060
	0x034BDCC0 MOV X0, X19
	0x034BDCC4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF22000
	005 Move X8, [X19+784]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43839488
	009 Move V0, [X12+1464]
	010 Move X8, -43683840
	011 Move X10, -43835392
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1998
	015 Move W11, 22
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+784], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_RichPresence_GetDestinations()

Disassembly:
	0x034BDCC8 LDP X22, X21, [X31 + 0x10]
	0x034BDCCC LDP X30, X23, [X31], #0x30
	0x034BDCD0 RET
	0x034BDCD4 SUB X31, X31, 0x60
	0x034BDCD8 STR X30, [X31 + 0x30]
	0x034BDCDC STP X22, X21, [X31 + 0x40]
	0x034BDCE0 STP X20, X19, [X31 + 0x50]
	0x034BDCE4 ADRP X22, 0xF21000
	0x034BDCE8 LDR X8, [X22 + 0x420]
	0x034BDCEC MOV X19, X2
	0x034BDCF0 MOV X20, X1
	0x034BDCF4 MOV X21, X0
	0x034BDCF8 CBNZ X8, 0x34BDD44
	0x034BDCFC ADRP X12, 0xFFFFFFFFFD630000
	0x034BDD00 LDR V0, [X12 + 0x5B8]
	0x034BDD04 ADRP X8, 0xFFFFFFFFFD656000
	0x034BDD08 ADRP X10, 0xFFFFFFFFFD65F000
	0x034BDD0C ADD X8, X8, 0xDD2
	0x034BDD10 MOVZ W9, 0x11
	0x034BDD14 ADD X10, X10, 0x1BA
	0x034BDD18 MOVZ W11, 0x2A
	0x034BDD1C MOVZ W13, 0x18
	0x034BDD20 ADD X0, X31, 0x0
	0x034BDD24 STP X8, X9, [X31]
	0x034BDD28 STP X10, X11, [X31 + 0x10]
	0x034BDD2C STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF22000
	005 Move X8, [X19+792]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43839488
	009 Move V0, [X12+1464]
	010 Move X8, -43683840
	011 Move X10, -43601920
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3197
	015 Move W11, 32
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+792], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_RichPresence_Set(System.IntPtr richPresenceOptions)

Disassembly:
	0x034BDD30 STR D0, [X31 + 0x20]
	0x034BDD34 STRB W31, [X31 + 0x2C]
	0x034BDD38 BL 0x1C1729C
	0x034BDD3C MOV X8, X0
	0x034BDD40 STR X0, [X22 + 0x420]
	0x034BDD44 MOV X0, X21
	0x034BDD48 MOV X1, X20
	0x034BDD4C MOV X2, X19
	0x034BDD50 BLR X8
	0x034BDD54 LDP X20, X19, [X31 + 0x50]
	0x034BDD58 LDP X22, X21, [X31 + 0x40]
	0x034BDD5C LDR X30, [X31 + 0x30]
	0x034BDD60 ADD X31, X31, 0x60
	0x034BDD64 RET
	0x034BDD68 STP X30, X23, [X31 - 0x30]!
	0x034BDD6C STP X22, X21, [X31 + 0x10]
	0x034BDD70 STP X20, X19, [X31 + 0x20]
	0x034BDD74 ADRP X23, 0xF21000
	0x034BDD78 ADRP X22, 0xC75000
	0x034BDD7C LDRB W8, [X23 + 0x428]
	0x034BDD80 LDR X22, [X22 + 0x328]
	0x034BDD84 MOV W19, W2
	0x034BDD88 MOV X20, X1
	0x034BDD8C MOV X21, X0
	0x034BDD90 TBNZ X8, 0x0, 0x34BDDB4
	0x034BDD94 ADRP X0, 0xC75000
	0x034BDD98 LDR X0, [X0 + 0x328]
	0x034BDD9C BL 0x1C16CF4
	0x034BDDA0 ADRP X0, 0xC5E000
	0x034BDDA4 LDR X0, [X0 + 0x850]
	0x034BDDA8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF22000
	006 Move X8, [X20+800]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43839488
	011 Move V0, [X12+1464]
	012 Move X8, -43683840
	013 Move X10, -43712512
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 649
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+800], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_RichPresence_SetDestination(System.String api_name)

Disassembly:
	0x034BDDAC MOVZ W8, 0x1
	0x034BDDB0 STRB W8, [X23 + 0x428]
	0x034BDDB4 LDR X0, [X22]
	0x034BDDB8 ADRP X22, 0xC5E000
	0x034BDDBC LDR W8, [X0 + 0xE0]
	0x034BDDC0 LDR X22, [X22 + 0x850]
	0x034BDDC4 CBNZ W8, 0x34BDDCC
	0x034BDDC8 BL 0x1C16DFC
	0x034BDDCC MOV X0, X21
	0x034BDDD0 BL 0x34B404C
	0x034BDDD4 MOV X1, X20
	0x034BDDD8 MOV W2, W19
	0x034BDDDC MOV X21, X0
	0x034BDDE0 BL 0x34BDE1C
	0x034BDDE4 LDR X8, [X22]
	0x034BDDE8 MOV X19, X0
	0x034BDDEC LDR W9, [X8 + 0xE0]
	0x034BDDF0 CBNZ W9, 0x34BDDFC
	0x034BDDF4 MOV X0, X8
	0x034BDDF8 BL 0x1C16DFC
	0x034BDDFC MOV X0, X21
	0x034BDE00 MOV X1, X31
	0x034BDE04 BL 0x32C1060
	0x034BDE08 MOV X0, X19
	0x034BDE0C LDP X20, X19, [X31 + 0x20]
	0x034BDE10 LDP X22, X21, [X31 + 0x10]
	0x034BDE14 LDP X30, X23, [X31], #0x30
	0x034BDE18 RET
	0x034BDE1C SUB X31, X31, 0x60
	0x034BDE20 STR X30, [X31 + 0x30]
	0x034BDE24 STP X22, X21, [X31 + 0x40]
	0x034BDE28 STP X20, X19, [X31 + 0x50]
	0x034BDE2C ADRP X22, 0xF21000
	0x034BDE30 LDR X8, [X22 + 0x430]
	0x034BDE34 MOV W19, W2
	0x034BDE38 MOV X21, X1
	0x034BDE3C MOV X20, X0
	0x034BDE40 CBNZ X8, 0x34BDE8C
	0x034BDE44 ADRP X12, 0xFFFFFFFFFD630000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF22000
	006 Move X20, 0xC76000
	007 Move W8, [X21+808]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC76000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC5F000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+808], W8
	022 Move X0, [X20]
	023 Move X20, 0xC5F000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_RichPresence_SetDestination_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_RichPresence_SetDestination_Native(System.IntPtr api_name)

Disassembly:
	0x034BDE48 LDR V0, [X12 + 0x5B8]
	0x034BDE4C ADRP X8, 0xFFFFFFFFFD656000
	0x034BDE50 ADRP X10, 0xFFFFFFFFFD660000
	0x034BDE54 ADD X8, X8, 0xDD2
	0x034BDE58 MOVZ W9, 0x11
	0x034BDE5C ADD X10, X10, 0xF09
	0x034BDE60 MOVZ W11, 0x25
	0x034BDE64 MOVZ W13, 0x14
	0x034BDE68 ADD X0, X31, 0x0
	0x034BDE6C STP X8, X9, [X31]
	0x034BDE70 STP X10, X11, [X31 + 0x10]
	0x034BDE74 STR W13, [X31 + 0x28]
	0x034BDE78 STR D0, [X31 + 0x20]
	0x034BDE7C STRB W31, [X31 + 0x2C]
	0x034BDE80 BL 0x1C1729C
	0x034BDE84 MOV X8, X0
	0x034BDE88 STR X0, [X22 + 0x430]
	0x034BDE8C ADD X9, X21, 0x20
	0x034BDE90 CMP X21, 0x0
	0x034BDE94 CSEL X1, X31, X9, EQ
	0x034BDE98 MOV X0, X20
	0x034BDE9C MOV W2, W19
	0x034BDEA0 BLR X8
	0x034BDEA4 LDP X20, X19, [X31 + 0x50]
	0x034BDEA8 LDP X22, X21, [X31 + 0x40]
	0x034BDEAC LDR X30, [X31 + 0x30]
	0x034BDEB0 ADD X31, X31, 0x60
	0x034BDEB4 RET
	0x034BDEB8 SUB X31, X31, 0x40
	0x034BDEBC STP X30, X19, [X31 + 0x30]
	0x034BDEC0 ADRP X19, 0xF21000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF22000
	006 Move X8, [X20+816]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43839488
	011 Move V0, [X12+1464]
	012 Move X8, -43683840
	013 Move X10, -43704320
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1042
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+816], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_RichPresence_SetIsJoinable(System.Boolean is_joinable)

Disassembly:
	0x034BDEC4 LDR X8, [X19 + 0x438]
	0x034BDEC8 CBNZ X8, 0x34BDF10
	0x034BDECC ADRP X12, 0xFFFFFFFFFD630000
	0x034BDED0 LDR V0, [X12 + 0x5B8]
	0x034BDED4 ADRP X8, 0xFFFFFFFFFD656000
	0x034BDED8 ADRP X10, 0xFFFFFFFFFD637000
	0x034BDEDC ADD X8, X8, 0xDD2
	0x034BDEE0 MOVZ W9, 0x11
	0x034BDEE4 ADD X10, X10, 0x632
	0x034BDEE8 MOVZ W11, 0x17
	0x034BDEEC ADD X0, X31, 0x0
	0x034BDEF0 STR W31, [X31 + 0x28]
	0x034BDEF4 STP X8, X9, [X31]
	0x034BDEF8 STP X10, X11, [X31 + 0x10]
	0x034BDEFC STR D0, [X31 + 0x20]
	0x034BDF00 STRB W31, [X31 + 0x2C]
	0x034BDF04 BL 0x1C1729C
	0x034BDF08 MOV X8, X0
	0x034BDF0C STR X0, [X19 + 0x438]
	0x034BDF10 BLR X8
	0x034BDF14 LDP X30, X19, [X31 + 0x30]
	0x034BDF18 ADD X31, X31, 0x40
	0x034BDF1C RET
	0x034BDF20 SUB X31, X31, 0x50
	0x034BDF24 STR X30, [X31 + 0x30]
	0x034BDF28 STP X20, X19, [X31 + 0x40]
	0x034BDF2C ADRP X20, 0xF21000
	0x034BDF30 LDR X8, [X20 + 0x440]
	0x034BDF34 MOV W19, W0
	0x034BDF38 CBNZ X8, 0x34BDF84
	0x034BDF3C ADRP X12, 0xFFFFFFFFFD630000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF22000
	006 Move X8, [X20+824]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43839488
	011 Move V0, [X12+1464]
	012 Move X8, -43683840
	013 Move X10, -43585536
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3014
	017 Move W11, 30
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+824], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_RichPresence_SetLobbySession(System.String id)

Disassembly:
	0x034BDF40 LDR V0, [X12 + 0x5B8]
	0x034BDF44 ADRP X8, 0xFFFFFFFFFD656000
	0x034BDF48 ADRP X10, 0xFFFFFFFFFD65F000
	0x034BDF4C ADD X8, X8, 0xDD2
	0x034BDF50 MOVZ W9, 0x11
	0x034BDF54 ADD X10, X10, 0x1E5
	0x034BDF58 MOVZ W11, 0x1A
	0x034BDF5C MOVZ W13, 0x4
	0x034BDF60 ADD X0, X31, 0x0
	0x034BDF64 STP X8, X9, [X31]
	0x034BDF68 STP X10, X11, [X31 + 0x10]
	0x034BDF6C STR W13, [X31 + 0x28]
	0x034BDF70 STR D0, [X31 + 0x20]
	0x034BDF74 STRB W31, [X31 + 0x2C]
	0x034BDF78 BL 0x1C1729C
	0x034BDF7C MOV X8, X0
	0x034BDF80 STR X0, [X20 + 0x440]
	0x034BDF84 MOV W0, W19
	0x034BDF88 BLR X8
	0x034BDF8C LDP X20, X19, [X31 + 0x40]
	0x034BDF90 LDR X30, [X31 + 0x30]
	0x034BDF94 ADD X31, X31, 0x50
	0x034BDF98 RET
	0x034BDF9C SUB X31, X31, 0x40
	0x034BDFA0 STP X30, X19, [X31 + 0x30]
	0x034BDFA4 ADRP X19, 0xF21000
	0x034BDFA8 LDR X8, [X19 + 0x448]
	0x034BDFAC CBNZ X8, 0x34BDFF4
	0x034BDFB0 ADRP X12, 0xFFFFFFFFFD630000
	0x034BDFB4 LDR V0, [X12 + 0x5B8]
	0x034BDFB8 ADRP X8, 0xFFFFFFFFFD656000
	0x034BDFBC ADRP X10, 0xFFFFFFFFFD647000
	0x034BDFC0 ADD X8, X8, 0xDD2
	0x034BDFC4 MOVZ W9, 0x11
	0x034BDFC8 ADD X10, X10, 0x64E
	0x034BDFCC MOVZ W11, 0x22
	0x034BDFD0 ADD X0, X31, 0x0
	0x034BDFD4 STR W31, [X31 + 0x28]
	0x034BDFD8 STP X8, X9, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF22000
	006 Move X20, 0xC76000
	007 Move W8, [X21+832]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC76000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC5F000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+832], W8
	022 Move X0, [X20]
	023 Move X20, 0xC5F000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_RichPresence_SetLobbySession_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_RichPresence_SetLobbySession_Native(System.IntPtr id)

Disassembly:
	0x034BDFDC STP X10, X11, [X31 + 0x10]
	0x034BDFE0 STR D0, [X31 + 0x20]
	0x034BDFE4 STRB W31, [X31 + 0x2C]
	0x034BDFE8 BL 0x1C1729C
	0x034BDFEC MOV X8, X0
	0x034BDFF0 STR X0, [X19 + 0x448]
	0x034BDFF4 BLR X8
	0x034BDFF8 LDP X30, X19, [X31 + 0x30]
	0x034BDFFC ADD X31, X31, 0x40
	0x034BE000 RET
	0x034BE004 SUB X31, X31, 0x50
	0x034BE008 STR X30, [X31 + 0x30]
	0x034BE00C STP X20, X19, [X31 + 0x40]
	0x034BE010 ADRP X20, 0xF20000
	0x034BE014 LDR X8, [X20 + 0x450]
	0x034BE018 MOV X19, X0
	0x034BE01C CBNZ X8, 0x34BE068
	0x034BE020 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE024 LDR V0, [X12 + 0x5B8]
	0x034BE028 ADRP X8, 0xFFFFFFFFFD655000
	0x034BE02C ADRP X10, 0xFFFFFFFFFD646000
	0x034BE030 ADD X8, X8, 0xDD2
	0x034BE034 MOVZ W9, 0x11
	0x034BE038 ADD X10, X10, 0x671
	0x034BE03C MOVZ W11, 0x1E
	0x034BE040 MOVZ W13, 0x8
	0x034BE044 ADD X0, X31, 0x0
	0x034BE048 STP X8, X9, [X31]
	0x034BE04C STP X10, X11, [X31 + 0x10]
	0x034BE050 STR W13, [X31 + 0x28]
	0x034BE054 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF22000
	006 Move X8, [X20+840]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43839488
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 602
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+840], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_RichPresence_SetMatchSession(System.String id)

Disassembly:
	0x034BE058 STRB W31, [X31 + 0x2C]
	0x034BE05C BL 0x1C1729C
	0x034BE060 MOV X8, X0
	0x034BE064 STR X0, [X20 + 0x450]
	0x034BE068 ADD X9, X19, 0x20
	0x034BE06C CMP X19, 0x0
	0x034BE070 CSEL X0, X31, X9, EQ
	0x034BE074 BLR X8
	0x034BE078 LDP X20, X19, [X31 + 0x40]
	0x034BE07C LDR X30, [X31 + 0x30]
	0x034BE080 ADD X31, X31, 0x50
	0x034BE084 RET
	0x034BE088 SUB X31, X31, 0x50
	0x034BE08C STR X30, [X31 + 0x30]
	0x034BE090 STP X20, X19, [X31 + 0x40]
	0x034BE094 ADRP X20, 0xF20000
	0x034BE098 LDR X8, [X20 + 0x458]
	0x034BE09C MOV W19, W0
	0x034BE0A0 CBNZ X8, 0x34BE0EC
	0x034BE0A4 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE0A8 LDR V0, [X12 + 0x5B8]
	0x034BE0AC ADRP X8, 0xFFFFFFFFFD655000
	0x034BE0B0 ADRP X10, 0xFFFFFFFFFD64E000
	0x034BE0B4 ADD X8, X8, 0xDD2
	0x034BE0B8 MOVZ W9, 0x11
	0x034BE0BC ADD X10, X10, 0x2B6
	0x034BE0C0 MOVZ W11, 0x20
	0x034BE0C4 MOVZ W13, 0x4
	0x034BE0C8 ADD X0, X31, 0x0
	0x034BE0CC STP X8, X9, [X31]
	0x034BE0D0 STP X10, X11, [X31 + 0x10]
	0x034BE0D4 STR W13, [X31 + 0x28]
	0x034BE0D8 STR D0, [X31 + 0x20]
	0x034BE0DC STRB W31, [X31 + 0x2C]
	0x034BE0E0 BL 0x1C1729C
	0x034BE0E4 MOV X8, X0
	0x034BE0E8 STR X0, [X20 + 0x458]
	0x034BE0EC AND W0, W19, 0x1
	0x034BE0F0 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF21000
	006 Move X20, 0xC75000
	007 Move W8, [X21+848]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC75000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC5E000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+848], W8
	022 Move X0, [X20]
	023 Move X20, 0xC5E000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_RichPresence_SetMatchSession_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_RichPresence_SetMatchSession_Native(System.IntPtr id)

Disassembly:
	0x034BE0F4 LDP X20, X19, [X31 + 0x40]
	0x034BE0F8 LDR X30, [X31 + 0x30]
	0x034BE0FC ADD X31, X31, 0x50
	0x034BE100 RET
	0x034BE104 STP X30, X21, [X31 - 0x20]!
	0x034BE108 STP X20, X19, [X31 + 0x10]
	0x034BE10C ADRP X20, 0xF20000
	0x034BE110 ADRP X21, 0xC74000
	0x034BE114 LDRB W8, [X20 + 0x460]
	0x034BE118 LDR X21, [X21 + 0x328]
	0x034BE11C MOV X19, X0
	0x034BE120 TBNZ X8, 0x0, 0x34BE138
	0x034BE124 ADRP X0, 0xC74000
	0x034BE128 LDR X0, [X0 + 0x328]
	0x034BE12C BL 0x1C16CF4
	0x034BE130 MOVZ W8, 0x1
	0x034BE134 STRB W8, [X20 + 0x460]
	0x034BE138 LDR X0, [X21]
	0x034BE13C LDR W8, [X0 + 0xE0]
	0x034BE140 CBNZ W8, 0x34BE148
	0x034BE144 BL 0x1C16DFC
	0x034BE148 MOV X0, X19
	0x034BE14C BL 0x34BE15C
	0x034BE150 LDP X20, X19, [X31 + 0x10]
	0x034BE154 LDP X30, X21, [X31], #0x20
	0x034BE158 B 0x34B3B78
	0x034BE15C SUB X31, X31, 0x50
	0x034BE160 STR X30, [X31 + 0x30]
	0x034BE164 STP X20, X19, [X31 + 0x40]
	0x034BE168 ADRP X20, 0xF20000
	0x034BE16C LDR X8, [X20 + 0x468]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+856]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1014
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+856], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_CancelRecordingForReportFlow(System.String recordingUUID)

Disassembly:
	0x034BE170 MOV X19, X0
	0x034BE174 CBNZ X8, 0x34BE1C0
	0x034BE178 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE17C LDR V0, [X12 + 0x5B8]
	0x034BE180 ADRP X8, 0xFFFFFFFFFD655000
	0x034BE184 ADRP X10, 0xFFFFFFFFFD652000
	0x034BE188 ADD X8, X8, 0xDD2
	0x034BE18C MOVZ W9, 0x11
	0x034BE190 ADD X10, X10, 0x443
	0x034BE194 MOVZ W11, 0x29
	0x034BE198 MOVZ W13, 0x8
	0x034BE19C ADD X0, X31, 0x0
	0x034BE1A0 STP X8, X9, [X31]
	0x034BE1A4 STP X10, X11, [X31 + 0x10]
	0x034BE1A8 STR W13, [X31 + 0x28]
	0x034BE1AC STR D0, [X31 + 0x20]
	0x034BE1B0 STRB W31, [X31 + 0x2C]
	0x034BE1B4 BL 0x1C1729C
	0x034BE1B8 MOV X8, X0
	0x034BE1BC STR X0, [X20 + 0x468]
	0x034BE1C0 MOV X0, X19
	0x034BE1C4 BLR X8
	0x034BE1C8 LDP X20, X19, [X31 + 0x40]
	0x034BE1CC LDR X30, [X31 + 0x30]
	0x034BE1D0 ADD X31, X31, 0x50
	0x034BE1D4 RET
	0x034BE1D8 SUB X31, X31, 0x50
	0x034BE1DC STR X30, [X31 + 0x30]
	0x034BE1E0 STP X20, X19, [X31 + 0x40]
	0x034BE1E4 ADRP X20, 0xF20000
	0x034BE1E8 LDR X8, [X20 + 0x470]
	0x034BE1EC MOV X19, X0
	0x034BE1F0 CBNZ X8, 0x34BE23C
	0x034BE1F4 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE1F8 LDR V0, [X12 + 0x5B8]
	0x034BE1FC ADRP X8, 0xFFFFFFFFFD655000
	0x034BE200 ADRP X10, 0xFFFFFFFFFD638000
	0x034BE204 ADD X8, X8, 0xDD2
	0x034BE208 MOVZ W9, 0x11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF21000
	006 Move X20, 0xC75000
	007 Move W8, [X21+864]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC75000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC5E000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+864], W8
	022 Move X0, [X20]
	023 Move X20, 0xC5E000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2128]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call CAPI.StringToNative, X0
	031 Move X19, X0
	032 Call CAPI.ovr_User_CancelRecordingForReportFlow_Native, X0
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Marshal.FreeCoTaskMem, X0
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.UInt64 ovr_User_CancelRecordingForReportFlow_Native(System.IntPtr recordingUUID)

Disassembly:
	0x034BE20C ADD X10, X10, 0x660
	0x034BE210 MOVZ W11, 0x2B
	0x034BE214 MOVZ W13, 0x8
	0x034BE218 ADD X0, X31, 0x0
	0x034BE21C STP X8, X9, [X31]
	0x034BE220 STP X10, X11, [X31 + 0x10]
	0x034BE224 STR W13, [X31 + 0x28]
	0x034BE228 STR D0, [X31 + 0x20]
	0x034BE22C STRB W31, [X31 + 0x2C]
	0x034BE230 BL 0x1C1729C
	0x034BE234 MOV X8, X0
	0x034BE238 STR X0, [X20 + 0x470]
	0x034BE23C MOV X0, X19
	0x034BE240 BLR X8
	0x034BE244 LDP X20, X19, [X31 + 0x40]
	0x034BE248 LDR X30, [X31 + 0x30]
	0x034BE24C ADD X31, X31, 0x50
	0x034BE250 RET
	0x034BE254 STP X30, X21, [X31 - 0x20]!
	0x034BE258 STP X20, X19, [X31 + 0x10]
	0x034BE25C ADRP X20, 0xF20000
	0x034BE260 ADRP X21, 0xC74000
	0x034BE264 LDRB W8, [X20 + 0x478]
	0x034BE268 LDR X21, [X21 + 0x328]
	0x034BE26C MOV X19, X0
	0x034BE270 TBNZ X8, 0x0, 0x34BE288
	0x034BE274 ADRP X0, 0xC74000
	0x034BE278 LDR X0, [X0 + 0x328]
	0x034BE27C BL 0x1C16CF4
	0x034BE280 MOVZ W8, 0x1
	0x034BE284 STRB W8, [X20 + 0x478]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+872]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43814912
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1494
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+872], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_Get(System.UInt64 userID)

Disassembly:
	0x034BE288 LDR X0, [X21]
	0x034BE28C LDR W8, [X0 + 0xE0]
	0x034BE290 CBNZ W8, 0x34BE298
	0x034BE294 BL 0x1C16DFC
	0x034BE298 MOV X0, X19
	0x034BE29C BL 0x34BE2AC
	0x034BE2A0 LDP X20, X19, [X31 + 0x10]
	0x034BE2A4 LDP X30, X21, [X31], #0x20
	0x034BE2A8 B 0x34B3B78
	0x034BE2AC SUB X31, X31, 0x50
	0x034BE2B0 STR X30, [X31 + 0x30]
	0x034BE2B4 STP X20, X19, [X31 + 0x40]
	0x034BE2B8 ADRP X20, 0xF20000
	0x034BE2BC LDR X8, [X20 + 0x480]
	0x034BE2C0 MOV X19, X0
	0x034BE2C4 CBNZ X8, 0x34BE310
	0x034BE2C8 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE2CC LDR V0, [X12 + 0x5B8]
	0x034BE2D0 ADRP X8, 0xFFFFFFFFFD655000
	0x034BE2D4 ADRP X10, 0xFFFFFFFFFD64A000
	0x034BE2D8 ADD X8, X8, 0xDD2
	0x034BE2DC MOVZ W9, 0x11
	0x034BE2E0 ADD X10, X10, 0x4AC
	0x034BE2E4 MOVZ W11, 0x21
	0x034BE2E8 MOVZ W13, 0x8
	0x034BE2EC ADD X0, X31, 0x0
	0x034BE2F0 STP X8, X9, [X31]
	0x034BE2F4 STP X10, X11, [X31 + 0x10]
	0x034BE2F8 STR W13, [X31 + 0x28]
	0x034BE2FC STR D0, [X31 + 0x20]
	0x034BE300 STRB W31, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+880]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43646976
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3794
	017 Move W11, 12
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+880], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_GetAccessToken()

Disassembly:
	0x034BE304 BL 0x1C1729C
	0x034BE308 MOV X8, X0
	0x034BE30C STR X0, [X20 + 0x480]
	0x034BE310 MOV X0, X19
	0x034BE314 BLR X8
	0x034BE318 LDP X20, X19, [X31 + 0x40]
	0x034BE31C LDR X30, [X31 + 0x30]
	0x034BE320 ADD X31, X31, 0x50
	0x034BE324 RET
	0x034BE328 SUB X31, X31, 0x50
	0x034BE32C STR X30, [X31 + 0x30]
	0x034BE330 STP X20, X19, [X31 + 0x40]
	0x034BE334 ADRP X20, 0xF20000
	0x034BE338 LDR X8, [X20 + 0x488]
	0x034BE33C MOV X19, X0
	0x034BE340 CBNZ X8, 0x34BE38C
	0x034BE344 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE348 LDR V0, [X12 + 0x5B8]
	0x034BE34C ADRP X8, 0xFFFFFFFFFD655000
	0x034BE350 ADRP X10, 0xFFFFFFFFFD650000
	0x034BE354 ADD X8, X8, 0xDD2
	0x034BE358 MOVZ W9, 0x11
	0x034BE35C ADD X10, X10, 0x46A
	0x034BE360 MOVZ W11, 0x23
	0x034BE364 MOVZ W13, 0x8
	0x034BE368 ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+888]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43839488
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 2021
	015 Move W11, 23
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+888], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_GetBlockedUsers()

Disassembly:
	0x034BE36C STP X8, X9, [X31]
	0x034BE370 STP X10, X11, [X31 + 0x10]
	0x034BE374 STR W13, [X31 + 0x28]
	0x034BE378 STR D0, [X31 + 0x20]
	0x034BE37C STRB W31, [X31 + 0x2C]
	0x034BE380 BL 0x1C1729C
	0x034BE384 MOV X8, X0
	0x034BE388 STR X0, [X20 + 0x488]
	0x034BE38C MOV X0, X19
	0x034BE390 BLR X8
	0x034BE394 LDP X20, X19, [X31 + 0x40]
	0x034BE398 LDR X30, [X31 + 0x30]
	0x034BE39C ADD X31, X31, 0x50
	0x034BE3A0 RET
	0x034BE3A4 SUB X31, X31, 0x50
	0x034BE3A8 STR X30, [X31 + 0x30]
	0x034BE3AC STP X20, X19, [X31 + 0x40]
	0x034BE3B0 ADRP X20, 0xF20000
	0x034BE3B4 LDR X8, [X20 + 0x490]
	0x034BE3B8 MOV X19, X0
	0x034BE3BC CBNZ X8, 0x34BE408
	0x034BE3C0 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE3C4 LDR V0, [X12 + 0x5B8]
	0x034BE3C8 ADRP X8, 0xFFFFFFFFFD655000
	0x034BE3CC ADRP X10, 0xFFFFFFFFFD644000
	0x034BE3D0 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+896]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43839488
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 2045
	015 Move W11, 24
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+896], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_GetLinkedAccounts(System.IntPtr userOptions)

Disassembly:
	0x034BE3D4 MOVZ W9, 0x11
	0x034BE3D8 ADD X10, X10, 0x2C0
	0x034BE3DC MOVZ W11, 0x21
	0x034BE3E0 MOVZ W13, 0x8
	0x034BE3E4 ADD X0, X31, 0x0
	0x034BE3E8 STP X8, X9, [X31]
	0x034BE3EC STP X10, X11, [X31 + 0x10]
	0x034BE3F0 STR W13, [X31 + 0x28]
	0x034BE3F4 STR D0, [X31 + 0x20]
	0x034BE3F8 STRB W31, [X31 + 0x2C]
	0x034BE3FC BL 0x1C1729C
	0x034BE400 MOV X8, X0
	0x034BE404 STR X0, [X20 + 0x490]
	0x034BE408 MOV X0, X19
	0x034BE40C BLR X8
	0x034BE410 LDP X20, X19, [X31 + 0x40]
	0x034BE414 LDR X30, [X31 + 0x30]
	0x034BE418 ADD X31, X31, 0x50
	0x034BE41C RET
	0x034BE420 SUB X31, X31, 0x50
	0x034BE424 STP X30, X21, [X31 + 0x30]
	0x034BE428 STP X20, X19, [X31 + 0x40]
	0x034BE42C ADRP X21, 0xF20000
	0x034BE430 LDR X8, [X21 + 0x498]
	0x034BE434 MOV X19, X1
	0x034BE438 MOV X20, X0
	0x034BE43C CBNZ X8, 0x34BE488
	0x034BE440 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE444 LDR V0, [X12 + 0x5B8]
	0x034BE448 ADRP X8, 0xFFFFFFFFFD655000
	0x034BE44C ADRP X10, 0xFFFFFFFFFD654000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+904]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43790336
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2039
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+904], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_GetLoggedInUser()

Disassembly:
	0x034BE450 ADD X8, X8, 0xDD2
	0x034BE454 MOVZ W9, 0x11
	0x034BE458 ADD X10, X10, 0x56
	0x034BE45C MOVZ W11, 0x29
	0x034BE460 MOVZ W13, 0x10
	0x034BE464 ADD X0, X31, 0x0
	0x034BE468 STP X8, X9, [X31]
	0x034BE46C STP X10, X11, [X31 + 0x10]
	0x034BE470 STR W13, [X31 + 0x28]
	0x034BE474 STR D0, [X31 + 0x20]
	0x034BE478 STRB W31, [X31 + 0x2C]
	0x034BE47C BL 0x1C1729C
	0x034BE480 MOV X8, X0
	0x034BE484 STR X0, [X21 + 0x498]
	0x034BE488 MOV X0, X20
	0x034BE48C MOV X1, X19
	0x034BE490 BLR X8
	0x034BE494 LDP X20, X19, [X31 + 0x40]
	0x034BE498 LDP X30, X21, [X31 + 0x30]
	0x034BE49C ADD X31, X31, 0x50
	0x034BE4A0 RET
	0x034BE4A4 STP X30, X21, [X31 - 0x20]!
	0x034BE4A8 STP X20, X19, [X31 + 0x10]
	0x034BE4AC ADRP X20, 0xF20000
	0x034BE4B0 ADRP X21, 0xC74000
	0x034BE4B4 LDRB W8, [X20 + 0x4A0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+912]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43597824
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3358
	015 Move W11, 24
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+912], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_GetLoggedInUserFriends()

Disassembly:
	0x034BE4B8 LDR X21, [X21 + 0x328]
	0x034BE4BC MOV X19, X0
	0x034BE4C0 TBNZ X8, 0x0, 0x34BE4D8
	0x034BE4C4 ADRP X0, 0xC74000
	0x034BE4C8 LDR X0, [X0 + 0x328]
	0x034BE4CC BL 0x1C16CF4
	0x034BE4D0 MOVZ W8, 0x1
	0x034BE4D4 STRB W8, [X20 + 0x4A0]
	0x034BE4D8 LDR X0, [X21]
	0x034BE4DC LDR W8, [X0 + 0xE0]
	0x034BE4E0 CBNZ W8, 0x34BE4E8
	0x034BE4E4 BL 0x1C16DFC
	0x034BE4E8 MOV X0, X19
	0x034BE4EC BL 0x34BE4FC
	0x034BE4F0 LDP X20, X19, [X31 + 0x10]
	0x034BE4F4 LDP X30, X21, [X31], #0x20
	0x034BE4F8 B 0x34B3B78
	0x034BE4FC SUB X31, X31, 0x50
	0x034BE500 STR X30, [X31 + 0x30]
	0x034BE504 STP X20, X19, [X31 + 0x40]
	0x034BE508 ADRP X20, 0xF20000
	0x034BE50C LDR X8, [X20 + 0x4A8]
	0x034BE510 MOV X19, X0
	0x034BE514 CBNZ X8, 0x34BE560
	0x034BE518 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE51C LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+920]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43708416
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1074
	015 Move W11, 31
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+920], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_GetOrgScopedID(System.UInt64 userID)

Disassembly:
	0x034BE520 ADRP X8, 0xFFFFFFFFFD655000
	0x034BE524 ADRP X10, 0xFFFFFFFFFD630000
	0x034BE528 ADD X8, X8, 0xDD2
	0x034BE52C MOVZ W9, 0x11
	0x034BE530 ADD X10, X10, 0x816
	0x034BE534 MOVZ W11, 0x29
	0x034BE538 MOVZ W13, 0x8
	0x034BE53C ADD X0, X31, 0x0
	0x034BE540 STP X8, X9, [X31]
	0x034BE544 STP X10, X11, [X31 + 0x10]
	0x034BE548 STR W13, [X31 + 0x28]
	0x034BE54C STR D0, [X31 + 0x20]
	0x034BE550 STRB W31, [X31 + 0x2C]
	0x034BE554 BL 0x1C1729C
	0x034BE558 MOV X8, X0
	0x034BE55C STR X0, [X20 + 0x4A8]
	0x034BE560 MOV X0, X19
	0x034BE564 BLR X8
	0x034BE568 LDP X20, X19, [X31 + 0x40]
	0x034BE56C LDR X30, [X31 + 0x30]
	0x034BE570 ADD X31, X31, 0x50
	0x034BE574 RET
	0x034BE578 SUB X31, X31, 0x50
	0x034BE57C STR X30, [X31 + 0x30]
	0x034BE580 STP X20, X19, [X31 + 0x40]
	0x034BE584 ADRP X20, 0xF20000
	0x034BE588 LDR X8, [X20 + 0x4B0]
	0x034BE58C MOV X19, X0
	0x034BE590 CBNZ X8, 0x34BE5DC
	0x034BE594 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE598 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+928]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43708416
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1106
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+928], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_GetSdkAccounts()

Disassembly:
	0x034BE59C ADRP X8, 0xFFFFFFFFFD655000
	0x034BE5A0 ADRP X10, 0xFFFFFFFFFD646000
	0x034BE5A4 ADD X8, X8, 0xDD2
	0x034BE5A8 MOVZ W9, 0x11
	0x034BE5AC ADD X10, X10, 0x690
	0x034BE5B0 MOVZ W11, 0x26
	0x034BE5B4 MOVZ W13, 0x8
	0x034BE5B8 ADD X0, X31, 0x0
	0x034BE5BC STP X8, X9, [X31]
	0x034BE5C0 STP X10, X11, [X31 + 0x10]
	0x034BE5C4 STR W13, [X31 + 0x28]
	0x034BE5C8 STR D0, [X31 + 0x20]
	0x034BE5CC STRB W31, [X31 + 0x2C]
	0x034BE5D0 BL 0x1C1729C
	0x034BE5D4 MOV X8, X0
	0x034BE5D8 STR X0, [X20 + 0x4B0]
	0x034BE5DC MOV X0, X19
	0x034BE5E0 BLR X8
	0x034BE5E4 LDP X20, X19, [X31 + 0x40]
	0x034BE5E8 LDR X30, [X31 + 0x30]
	0x034BE5EC ADD X31, X31, 0x50
	0x034BE5F0 RET
	0x034BE5F4 SUB X31, X31, 0x50
	0x034BE5F8 STR X30, [X31 + 0x30]
	0x034BE5FC STP X20, X19, [X31 + 0x40]
	0x034BE600 ADRP X20, 0xF20000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+936]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43716608
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 670
	015 Move W11, 23
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+936], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_GetUserCapabilities()

Disassembly:
	0x034BE604 LDR X8, [X20 + 0x4B8]
	0x034BE608 MOV X19, X0
	0x034BE60C CBNZ X8, 0x34BE658
	0x034BE610 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE614 LDR V0, [X12 + 0x5B8]
	0x034BE618 ADRP X8, 0xFFFFFFFFFD655000
	0x034BE61C ADRP X10, 0xFFFFFFFFFD646000
	0x034BE620 ADD X8, X8, 0xDD2
	0x034BE624 MOVZ W9, 0x11
	0x034BE628 ADD X10, X10, 0x6B7
	0x034BE62C MOVZ W11, 0x2A
	0x034BE630 MOVZ W13, 0x8
	0x034BE634 ADD X0, X31, 0x0
	0x034BE638 STP X8, X9, [X31]
	0x034BE63C STP X10, X11, [X31 + 0x10]
	0x034BE640 STR W13, [X31 + 0x28]
	0x034BE644 STR D0, [X31 + 0x20]
	0x034BE648 STRB W31, [X31 + 0x2C]
	0x034BE64C BL 0x1C1729C
	0x034BE650 MOV X8, X0
	0x034BE654 STR X0, [X20 + 0x4B8]
	0x034BE658 MOV X0, X19
	0x034BE65C BLR X8
	0x034BE660 LDP X20, X19, [X31 + 0x40]
	0x034BE664 LDR X30, [X31 + 0x30]
	0x034BE668 CMP W0, 0x0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+944]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43798528
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1633
	015 Move W11, 28
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+944], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_GetUserProof()

Disassembly:
	0x034BE66C CSET W0, NE
	0x034BE670 ADD X31, X31, 0x50
	0x034BE674 RET
	0x034BE678 STP X30, X21, [X31 - 0x20]!
	0x034BE67C STP X20, X19, [X31 + 0x10]
	0x034BE680 ADRP X20, 0xF20000
	0x034BE684 ADRP X21, 0xC74000
	0x034BE688 LDRB W8, [X20 + 0x4C0]
	0x034BE68C LDR X21, [X21 + 0x328]
	0x034BE690 MOV X19, X0
	0x034BE694 TBNZ X8, 0x0, 0x34BE6AC
	0x034BE698 ADRP X0, 0xC74000
	0x034BE69C LDR X0, [X0 + 0x328]
	0x034BE6A0 BL 0x1C16CF4
	0x034BE6A4 MOVZ W8, 0x1
	0x034BE6A8 STRB W8, [X20 + 0x4C0]
	0x034BE6AC LDR X0, [X21]
	0x034BE6B0 LDR W8, [X0 + 0xE0]
	0x034BE6B4 CBNZ W8, 0x34BE6BC
	0x034BE6B8 BL 0x1C16DFC
	0x034BE6BC MOV X0, X19
	0x034BE6C0 BL 0x34BE6D0
	0x034BE6C4 LDP X20, X19, [X31 + 0x10]
	0x034BE6C8 LDP X30, X21, [X31], #0x20
	0x034BE6CC B 0x34B3B78
	0x034BE6D0 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+952]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43700224
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1069
	015 Move W11, 21
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+952], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_LaunchBlockFlow(System.UInt64 userID)

Disassembly:
	0x034BE6D4 STR X30, [X31 + 0x30]
	0x034BE6D8 STP X20, X19, [X31 + 0x40]
	0x034BE6DC ADRP X20, 0xF20000
	0x034BE6E0 LDR X8, [X20 + 0x4C8]
	0x034BE6E4 MOV X19, X0
	0x034BE6E8 CBNZ X8, 0x34BE734
	0x034BE6EC ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE6F0 LDR V0, [X12 + 0x5B8]
	0x034BE6F4 ADRP X8, 0xFFFFFFFFFD655000
	0x034BE6F8 ADRP X10, 0xFFFFFFFFFD654000
	0x034BE6FC ADD X8, X8, 0xDD2
	0x034BE700 MOVZ W9, 0x11
	0x034BE704 ADD X10, X10, 0x80
	0x034BE708 MOVZ W11, 0x23
	0x034BE70C MOVZ W13, 0x8
	0x034BE710 ADD X0, X31, 0x0
	0x034BE714 STP X8, X9, [X31]
	0x034BE718 STP X10, X11, [X31 + 0x10]
	0x034BE71C STR W13, [X31 + 0x28]
	0x034BE720 STR D0, [X31 + 0x20]
	0x034BE724 STRB W31, [X31 + 0x2C]
	0x034BE728 BL 0x1C1729C
	0x034BE72C MOV X8, X0
	0x034BE730 STR X0, [X20 + 0x4C8]
	0x034BE734 MOV X0, X19
	0x034BE738 BLR X8
	0x034BE73C LDP X20, X19, [X31 + 0x40]
	0x034BE740 LDR X30, [X31 + 0x30]
	0x034BE744 ADD X31, X31, 0x50
	0x034BE748 RET
	0x034BE74C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+960]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43814912
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1532
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+960], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_LaunchFriendRequestFlow(System.UInt64 userID)

Disassembly:
	0x034BE750 STR X30, [X31 + 0x30]
	0x034BE754 STP X20, X19, [X31 + 0x40]
	0x034BE758 ADRP X20, 0xF20000
	0x034BE75C LDR X8, [X20 + 0x4D0]
	0x034BE760 MOV X19, X0
	0x034BE764 CBNZ X8, 0x34BE7B0
	0x034BE768 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE76C LDR V0, [X12 + 0x5B8]
	0x034BE770 ADRP X8, 0xFFFFFFFFFD655000
	0x034BE774 ADRP X10, 0xFFFFFFFFFD669000
	0x034BE778 ADD X8, X8, 0xDD2
	0x034BE77C MOVZ W9, 0x11
	0x034BE780 ADD X10, X10, 0xCDA
	0x034BE784 MOVZ W11, 0x20
	0x034BE788 MOVZ W13, 0x8
	0x034BE78C ADD X0, X31, 0x0
	0x034BE790 STP X8, X9, [X31]
	0x034BE794 STP X10, X11, [X31 + 0x10]
	0x034BE798 STR W13, [X31 + 0x28]
	0x034BE79C STR D0, [X31 + 0x20]
	0x034BE7A0 STRB W31, [X31 + 0x2C]
	0x034BE7A4 BL 0x1C1729C
	0x034BE7A8 MOV X8, X0
	0x034BE7AC STR X0, [X20 + 0x4D0]
	0x034BE7B0 MOV X0, X19
	0x034BE7B4 BLR X8
	0x034BE7B8 LDP X20, X19, [X31 + 0x40]
	0x034BE7BC LDR X30, [X31 + 0x30]
	0x034BE7C0 ADD X31, X31, 0x50
	0x034BE7C4 RET
	0x034BE7C8 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+968]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43606016
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3230
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+968], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_LaunchReportFlow(System.UInt64 userID)

Disassembly:
	0x034BE7CC STR X30, [X31 + 0x30]
	0x034BE7D0 STP X20, X19, [X31 + 0x40]
	0x034BE7D4 ADRP X20, 0xF20000
	0x034BE7D8 LDR X8, [X20 + 0x4D8]
	0x034BE7DC MOV X19, X0
	0x034BE7E0 CBNZ X8, 0x34BE82C
	0x034BE7E4 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE7E8 LDR V0, [X12 + 0x5B8]
	0x034BE7EC ADRP X8, 0xFFFFFFFFFD655000
	0x034BE7F0 ADRP X10, 0xFFFFFFFFFD632000
	0x034BE7F4 ADD X8, X8, 0xDD2
	0x034BE7F8 MOVZ W9, 0x11
	0x034BE7FC ADD X10, X10, 0x27B
	0x034BE800 MOVZ W11, 0x25
	0x034BE804 MOVZ W13, 0x8
	0x034BE808 ADD X0, X31, 0x0
	0x034BE80C STP X8, X9, [X31]
	0x034BE810 STP X10, X11, [X31 + 0x10]
	0x034BE814 STR W13, [X31 + 0x28]
	0x034BE818 STR D0, [X31 + 0x20]
	0x034BE81C STRB W31, [X31 + 0x2C]
	0x034BE820 BL 0x1C1729C
	0x034BE824 MOV X8, X0
	0x034BE828 STR X0, [X20 + 0x4D8]
	0x034BE82C MOV X0, X19
	0x034BE830 BLR X8
	0x034BE834 LDP X20, X19, [X31 + 0x40]
	0x034BE838 LDR X30, [X31 + 0x30]
	0x034BE83C CMP W0, 0x0
	0x034BE840 CSET W0, NE
	0x034BE844 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+976]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1047
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+976], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_LaunchReportFlow2(System.UInt64 optionalUserID, System.IntPtr abuseReportOptions)

Disassembly:
	0x034BE848 RET
	0x034BE84C STP X30, X21, [X31 - 0x20]!
	0x034BE850 STP X20, X19, [X31 + 0x10]
	0x034BE854 ADRP X20, 0xF20000
	0x034BE858 ADRP X21, 0xC74000
	0x034BE85C LDRB W8, [X20 + 0x4E0]
	0x034BE860 LDR X21, [X21 + 0x328]
	0x034BE864 MOV X19, X0
	0x034BE868 TBNZ X8, 0x0, 0x34BE880
	0x034BE86C ADRP X0, 0xC74000
	0x034BE870 LDR X0, [X0 + 0x328]
	0x034BE874 BL 0x1C16CF4
	0x034BE878 MOVZ W8, 0x1
	0x034BE87C STRB W8, [X20 + 0x4E0]
	0x034BE880 LDR X0, [X21]
	0x034BE884 LDR W8, [X0 + 0xE0]
	0x034BE888 CBNZ W8, 0x34BE890
	0x034BE88C BL 0x1C16DFC
	0x034BE890 MOV X0, X19
	0x034BE894 BL 0x34BE8A4
	0x034BE898 LDP X20, X19, [X31 + 0x10]
	0x034BE89C LDP X30, X21, [X31], #0x20
	0x034BE8A0 B 0x34B3B78
	0x034BE8A4 SUB X31, X31, 0x50
	0x034BE8A8 STR X30, [X31 + 0x30]
	0x034BE8AC STP X20, X19, [X31 + 0x40]
	0x034BE8B0 ADRP X20, 0xF20000
	0x034BE8B4 LDR X8, [X20 + 0x4E8]
	0x034BE8B8 MOV X19, X0
	0x034BE8BC CBNZ X8, 0x34BE908
	0x034BE8C0 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE8C4 LDR V0, [X12 + 0x5B8]
	0x034BE8C8 ADRP X8, 0xFFFFFFFFFD655000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF21000
	007 Move X8, [X21+984]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43843584
	013 Move V0, [X12+1464]
	014 Move X8, -43687936
	015 Move X10, -43606016
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3263
	019 Move W11, 26
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+984], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_User_LaunchUnblockFlow(System.UInt64 userID)

Disassembly:
	0x034BE8CC ADRP X10, 0xFFFFFFFFFD659000
	0x034BE8D0 ADD X8, X8, 0xDD2
	0x034BE8D4 MOVZ W9, 0x11
	0x034BE8D8 ADD X10, X10, 0xD5C
	0x034BE8DC MOVZ W11, 0x1F
	0x034BE8E0 MOVZ W13, 0x8
	0x034BE8E4 ADD X0, X31, 0x0
	0x034BE8E8 STP X8, X9, [X31]
	0x034BE8EC STP X10, X11, [X31 + 0x10]
	0x034BE8F0 STR W13, [X31 + 0x28]
	0x034BE8F4 STR D0, [X31 + 0x20]
	0x034BE8F8 STRB W31, [X31 + 0x2C]
	0x034BE8FC BL 0x1C1729C
	0x034BE900 MOV X8, X0
	0x034BE904 STR X0, [X20 + 0x4E8]
	0x034BE908 MOV X0, X19
	0x034BE90C BLR X8
	0x034BE910 LDP X20, X19, [X31 + 0x40]
	0x034BE914 LDR X30, [X31 + 0x30]
	0x034BE918 ADD X31, X31, 0x50
	0x034BE91C RET
	0x034BE920 STP X30, X21, [X31 - 0x20]!
	0x034BE924 STP X20, X19, [X31 + 0x10]
	0x034BE928 ADRP X20, 0xF20000
	0x034BE92C ADRP X21, 0xC74000
	0x034BE930 LDRB W8, [X20 + 0x4F0]
	0x034BE934 LDR X21, [X21 + 0x328]
	0x034BE938 MOV X19, X0
	0x034BE93C TBNZ X8, 0x0, 0x34BE954
	0x034BE940 ADRP X0, 0xC74000
	0x034BE944 LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+992]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1839
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+992], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_NewEntitledTestUser()

Disassembly:
	0x034BE948 BL 0x1C16CF4
	0x034BE94C MOVZ W8, 0x1
	0x034BE950 STRB W8, [X20 + 0x4F0]
	0x034BE954 LDR X0, [X21]
	0x034BE958 LDR W8, [X0 + 0xE0]
	0x034BE95C CBNZ W8, 0x34BE964
	0x034BE960 BL 0x1C16DFC
	0x034BE964 MOV X0, X19
	0x034BE968 BL 0x34BE978
	0x034BE96C LDP X20, X19, [X31 + 0x10]
	0x034BE970 LDP X30, X21, [X31], #0x20
	0x034BE974 B 0x34B3D04
	0x034BE978 SUB X31, X31, 0x50
	0x034BE97C STR X30, [X31 + 0x30]
	0x034BE980 STP X20, X19, [X31 + 0x40]
	0x034BE984 ADRP X20, 0xF20000
	0x034BE988 LDR X8, [X20 + 0x4F8]
	0x034BE98C MOV X19, X0
	0x034BE990 CBNZ X8, 0x34BE9DC
	0x034BE994 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BE998 LDR V0, [X12 + 0x5B8]
	0x034BE99C ADRP X8, 0xFFFFFFFFFD655000
	0x034BE9A0 ADRP X10, 0xFFFFFFFFFD654000
	0x034BE9A4 ADD X8, X8, 0xDD2
	0x034BE9A8 MOVZ W9, 0x11
	0x034BE9AC ADD X10, X10, 0xA4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+1000]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43814912
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1557
	015 Move W11, 28
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1000], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_NewTestUser()

Disassembly:
	0x034BE9B0 MOVZ W11, 0x25
	0x034BE9B4 MOVZ W13, 0x8
	0x034BE9B8 ADD X0, X31, 0x0
	0x034BE9BC STP X8, X9, [X31]
	0x034BE9C0 STP X10, X11, [X31 + 0x10]
	0x034BE9C4 STR W13, [X31 + 0x28]
	0x034BE9C8 STR D0, [X31 + 0x20]
	0x034BE9CC STRB W31, [X31 + 0x2C]
	0x034BE9D0 BL 0x1C1729C
	0x034BE9D4 MOV X8, X0
	0x034BE9D8 STR X0, [X20 + 0x4F8]
	0x034BE9DC MOV X0, X19
	0x034BE9E0 BLR X8
	0x034BE9E4 LDP X20, X19, [X31 + 0x40]
	0x034BE9E8 LDR X30, [X31 + 0x30]
	0x034BE9EC ADD X31, X31, 0x50
	0x034BE9F0 RET
	0x034BE9F4 SUB X31, X31, 0x50
	0x034BE9F8 STP X30, X21, [X31 + 0x30]
	0x034BE9FC STP X20, X19, [X31 + 0x40]
	0x034BEA00 ADRP X21, 0xF20000
	0x034BEA04 LDR X8, [X21 + 0x500]
	0x034BEA08 MOV X19, X1
	0x034BEA0C MOV X20, X0
	0x034BEA10 CBNZ X8, 0x34BEA5C
	0x034BEA14 ADRP X12, 0xFFFFFFFFFD62F000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+1008]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43773952
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1073
	015 Move W11, 20
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1008], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_NewTestUserFriends()

Disassembly:
	0x034BEA18 LDR V0, [X12 + 0x5B8]
	0x034BEA1C ADRP X8, 0xFFFFFFFFFD655000
	0x034BEA20 ADRP X10, 0xFFFFFFFFFD634000
	0x034BEA24 ADD X8, X8, 0xDD2
	0x034BEA28 MOVZ W9, 0x11
	0x034BEA2C ADD X10, X10, 0x6F3
	0x034BEA30 MOVZ W11, 0x27
	0x034BEA34 MOVZ W13, 0x10
	0x034BEA38 ADD X0, X31, 0x0
	0x034BEA3C STP X8, X9, [X31]
	0x034BEA40 STP X10, X11, [X31 + 0x10]
	0x034BEA44 STR W13, [X31 + 0x28]
	0x034BEA48 STR D0, [X31 + 0x20]
	0x034BEA4C STRB W31, [X31 + 0x2C]
	0x034BEA50 BL 0x1C1729C
	0x034BEA54 MOV X8, X0
	0x034BEA58 STR X0, [X21 + 0x500]
	0x034BEA5C MOV X0, X20
	0x034BEA60 MOV X1, X19
	0x034BEA64 BLR X8
	0x034BEA68 LDP X20, X19, [X31 + 0x40]
	0x034BEA6C LDP X30, X21, [X31 + 0x30]
	0x034BEA70 ADD X31, X31, 0x50
	0x034BEA74 RET
	0x034BEA78 STP X30, X21, [X31 - 0x20]!
	0x034BEA7C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+1016]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43618304
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 704
	015 Move W11, 27
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1016], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_StartRecordingForReportFlow()

Disassembly:
	0x034BEA80 ADRP X20, 0xF20000
	0x034BEA84 ADRP X21, 0xC74000
	0x034BEA88 LDRB W8, [X20 + 0x508]
	0x034BEA8C LDR X21, [X21 + 0x328]
	0x034BEA90 MOV X19, X0
	0x034BEA94 TBNZ X8, 0x0, 0x34BEAAC
	0x034BEA98 ADRP X0, 0xC74000
	0x034BEA9C LDR X0, [X0 + 0x328]
	0x034BEAA0 BL 0x1C16CF4
	0x034BEAA4 MOVZ W8, 0x1
	0x034BEAA8 STRB W8, [X20 + 0x508]
	0x034BEAAC LDR X0, [X21]
	0x034BEAB0 LDR W8, [X0 + 0xE0]
	0x034BEAB4 CBNZ W8, 0x34BEABC
	0x034BEAB8 BL 0x1C16DFC
	0x034BEABC MOV X0, X19
	0x034BEAC0 BL 0x34BEAD0
	0x034BEAC4 LDP X20, X19, [X31 + 0x10]
	0x034BEAC8 LDP X30, X21, [X31], #0x20
	0x034BEACC B 0x34B3B78
	0x034BEAD0 SUB X31, X31, 0x50
	0x034BEAD4 STR X30, [X31 + 0x30]
	0x034BEAD8 STP X20, X19, [X31 + 0x40]
	0x034BEADC ADRP X20, 0xF20000
	0x034BEAE0 LDR X8, [X20 + 0x510]
	0x034BEAE4 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+1024]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43634688
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 375
	015 Move W11, 36
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1024], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow(System.UInt64 optionalUserID, System.String optionalRecordingUUID)

Disassembly:
	0x034BEAE8 CBNZ X8, 0x34BEB34
	0x034BEAEC ADRP X12, 0xFFFFFFFFFD62F000
	0x034BEAF0 LDR V0, [X12 + 0x5B8]
	0x034BEAF4 ADRP X8, 0xFFFFFFFFFD655000
	0x034BEAF8 ADRP X10, 0xFFFFFFFFFD634000
	0x034BEAFC ADD X8, X8, 0xDD2
	0x034BEB00 MOVZ W9, 0x11
	0x034BEB04 ADD X10, X10, 0x71B
	0x034BEB08 MOVZ W11, 0x27
	0x034BEB0C MOVZ W13, 0x8
	0x034BEB10 ADD X0, X31, 0x0
	0x034BEB14 STP X8, X9, [X31]
	0x034BEB18 STP X10, X11, [X31 + 0x10]
	0x034BEB1C STR W13, [X31 + 0x28]
	0x034BEB20 STR D0, [X31 + 0x20]
	0x034BEB24 STRB W31, [X31 + 0x2C]
	0x034BEB28 BL 0x1C1729C
	0x034BEB2C MOV X8, X0
	0x034BEB30 STR X0, [X20 + 0x510]
	0x034BEB34 MOV X0, X19
	0x034BEB38 BLR X8
	0x034BEB3C LDP X20, X19, [X31 + 0x40]
	0x034BEB40 LDR X30, [X31 + 0x30]
	0x034BEB44 ADD X31, X31, 0x50
	0x034BEB48 RET
	0x034BEB4C SUB X31, X31, 0x50
	0x034BEB50 STR X30, [X31 + 0x30]
	0x034BEB54 STP X20, X19, [X31 + 0x40]
	0x034BEB58 ADRP X20, 0xF20000
	0x034BEB5C LDR X8, [X20 + 0x518]
	0x034BEB60 MOV X19, X0
	0x034BEB64 CBNZ X8, 0x34BEBB0
	0x034BEB68 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BEB6C LDR V0, [X12 + 0x5B8]
	0x034BEB70 ADRP X8, 0xFFFFFFFFFD655000
	0x034BEB74 ADRP X10, 0xFFFFFFFFFD63E000
	0x034BEB78 ADD X8, X8, 0xDD2
	0x034BEB7C MOVZ W9, 0x11
	0x034BEB80 ADD X10, X10, 0x74A
	0x034BEB84 MOVZ W11, 0x24
	0x034BEB88 MOVZ W13, 0x8
	0x034BEB8C ADD X0, X31, 0x0
	0x034BEB90 STP X8, X9, [X31]
	0x034BEB94 STP X10, X11, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF21000
	007 Move X21, 0xC75000
	008 Move W8, [X22+1032]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC75000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC5E000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1032], W8
	024 Move X0, [X21]
	025 Move X21, 0xC5E000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_User_StopRecordingAndLaunchReportFlow_Native, X0, X1
	037 Move X8, [X21]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Call Marshal.FreeCoTaskMem, X0
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0

Method: System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID)

Disassembly:
	0x034BEB98 STR W13, [X31 + 0x28]
	0x034BEB9C STR D0, [X31 + 0x20]
	0x034BEBA0 STRB W31, [X31 + 0x2C]
	0x034BEBA4 BL 0x1C1729C
	0x034BEBA8 MOV X8, X0
	0x034BEBAC STR X0, [X20 + 0x518]
	0x034BEBB0 MOV X0, X19
	0x034BEBB4 BLR X8
	0x034BEBB8 LDP X20, X19, [X31 + 0x40]
	0x034BEBBC LDR X30, [X31 + 0x30]
	0x034BEBC0 ADD X31, X31, 0x50
	0x034BEBC4 RET
	0x034BEBC8 SUB X31, X31, 0x50
	0x034BEBCC STR X30, [X31 + 0x30]
	0x034BEBD0 STP X20, X19, [X31 + 0x40]
	0x034BEBD4 ADRP X20, 0xF20000
	0x034BEBD8 LDR X8, [X20 + 0x520]
	0x034BEBDC MOV X19, X0
	0x034BEBE0 CBNZ X8, 0x34BEC2C
	0x034BEBE4 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BEBE8 LDR V0, [X12 + 0x5B8]
	0x034BEBEC ADRP X8, 0xFFFFFFFFFD655000
	0x034BEBF0 ADRP X10, 0xFFFFFFFFFD64E000
	0x034BEBF4 ADD X8, X8, 0xDD2
	0x034BEBF8 MOVZ W9, 0x11
	0x034BEBFC ADD X10, X10, 0x2D7
	0x034BEC00 MOVZ W11, 0x28
	0x034BEC04 MOVZ W13, 0x8
	0x034BEC08 ADD X0, X31, 0x0
	0x034BEC0C STP X8, X9, [X31]
	0x034BEC10 STP X10, X11, [X31 + 0x10]
	0x034BEC14 STR W13, [X31 + 0x28]
	0x034BEC18 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF21000
	007 Move X8, [X21+1040]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43843584
	013 Move V0, [X12+1464]
	014 Move X8, -43687936
	015 Move X10, -43646976
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3807
	019 Move W11, 41
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1040], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2(System.UInt64 optionalUserID, System.String optionalRecordingUUID, System.IntPtr abuseReportOptions)

Disassembly:
	0x034BEC1C STRB W31, [X31 + 0x2C]
	0x034BEC20 BL 0x1C1729C
	0x034BEC24 MOV X8, X0
	0x034BEC28 STR X0, [X20 + 0x520]
	0x034BEC2C MOV X0, X19
	0x034BEC30 BLR X8
	0x034BEC34 LDP X20, X19, [X31 + 0x40]
	0x034BEC38 LDR X30, [X31 + 0x30]
	0x034BEC3C CMP W0, 0x0
	0x034BEC40 CSET W0, NE
	0x034BEC44 ADD X31, X31, 0x50
	0x034BEC48 RET
	0x034BEC4C SUB X31, X31, 0x50
	0x034BEC50 STR X30, [X31 + 0x30]
	0x034BEC54 STP X20, X19, [X31 + 0x40]
	0x034BEC58 ADRP X20, 0xF20000
	0x034BEC5C LDR X8, [X20 + 0x528]
	0x034BEC60 MOV X19, X0
	0x034BEC64 CBNZ X8, 0x34BECB0
	0x034BEC68 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BEC6C LDR V0, [X12 + 0x5B8]
	0x034BEC70 ADRP X8, 0xFFFFFFFFFD655000
	0x034BEC74 ADRP X10, 0xFFFFFFFFFD638000
	0x034BEC78 ADD X8, X8, 0xDD2
	0x034BEC7C MOVZ W9, 0x11
	0x034BEC80 ADD X10, X10, 0x68C
	0x034BEC84 MOVZ W11, 0x25
	0x034BEC88 MOVZ W13, 0x8
	0x034BEC8C ADD X0, X31, 0x0
	0x034BEC90 STP X8, X9, [X31]
	0x034BEC94 STP X10, X11, [X31 + 0x10]
	0x034BEC98 STR W13, [X31 + 0x28]
	0x034BEC9C STR D0, [X31 + 0x20]
	0x034BECA0 STRB W31, [X31 + 0x2C]
	0x034BECA4 BL 0x1C1729C
	0x034BECA8 MOV X8, X0
	0x034BECAC STR X0, [X20 + 0x528]
	0x034BECB0 MOV X0, X19
	0x034BECB4 BLR X8
	0x034BECB8 LDP X20, X19, [X31 + 0x40]
	0x034BECBC LDR X30, [X31 + 0x30]
	0x034BECC0 CMP W0, 0x0
	0x034BECC4 CSET W0, NE
	0x034BECC8 ADD X31, X31, 0x50
	0x034BECCC RET
	0x034BECD0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF21000
	008 Move X22, 0xC75000
	009 Move W8, [X23+1048]
	010 Move X22, [X22+808]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC75000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0xC5E000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1048], W8
	026 Move X0, [X22]
	027 Move X22, 0xC5E000
	028 Move W8, [X0+224]
	029 Move X22, [X22+2128]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Call CAPI.StringToNative, X0
	035 Move X21, X0
	036 Move X0, X20
	037 Move X1, X21
	038 Move X2, X19
	039 Call CAPI.ovr_User_StopRecordingAndLaunchReportFlow2_Native, X0, X1, X2
	040 Move X8, [X22]
	041 Move X19, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X31
	049 Call Marshal.FreeCoTaskMem, X0
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return X0

Method: System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID, System.IntPtr abuseReportOptions)

Disassembly:
	0x034BECD4 STP X20, X19, [X31 + 0x10]
	0x034BECD8 ADRP X20, 0xF20000
	0x034BECDC ADRP X21, 0xC74000
	0x034BECE0 LDRB W8, [X20 + 0x530]
	0x034BECE4 LDR X21, [X21 + 0x328]
	0x034BECE8 MOV X19, X0
	0x034BECEC TBNZ X8, 0x0, 0x34BED04
	0x034BECF0 ADRP X0, 0xC74000
	0x034BECF4 LDR X0, [X0 + 0x328]
	0x034BECF8 BL 0x1C16CF4
	0x034BECFC MOVZ W8, 0x1
	0x034BED00 STRB W8, [X20 + 0x530]
	0x034BED04 LDR X0, [X21]
	0x034BED08 LDR W8, [X0 + 0xE0]
	0x034BED0C CBNZ W8, 0x34BED14
	0x034BED10 BL 0x1C16DFC
	0x034BED14 MOV X0, X19
	0x034BED18 BL 0x34BED28
	0x034BED1C LDP X20, X19, [X31 + 0x10]
	0x034BED20 LDP X30, X21, [X31], #0x20
	0x034BED24 B 0x34B3B78
	0x034BED28 SUB X31, X31, 0x50
	0x034BED2C STR X30, [X31 + 0x30]
	0x034BED30 STP X20, X19, [X31 + 0x40]
	0x034BED34 ADRP X20, 0xF20000
	0x034BED38 LDR X8, [X20 + 0x538]
	0x034BED3C MOV X19, X0
	0x034BED40 CBNZ X8, 0x34BED8C
	0x034BED44 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BED48 LDR V0, [X12 + 0x5B8]
	0x034BED4C ADRP X8, 0xFFFFFFFFFD655000
	0x034BED50 ADRP X10, 0xFFFFFFFFFD63C000
	0x034BED54 ADD X8, X8, 0xDD2
	0x034BED58 MOVZ W9, 0x11
	0x034BED5C ADD X10, X10, 0x812
	0x034BED60 MOVZ W11, 0x1D
	0x034BED64 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF21000
	008 Move X8, [X22+1056]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43843584
	015 Move V0, [X12+1464]
	016 Move X8, -43687936
	017 Move X10, -43651072
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 442
	021 Move W11, 42
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+1056], X0
	034 Move X0, X21
	035 Move X1, X20
	036 Move X2, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 Add X31, X31, 96
	044 Return X0

Method: System.UInt64 ovr_User_TestUserCreateDeviceManifest(System.String deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)

Disassembly:
	0x034BED68 ADD X0, X31, 0x0
	0x034BED6C STP X8, X9, [X31]
	0x034BED70 STP X10, X11, [X31 + 0x10]
	0x034BED74 STR W13, [X31 + 0x28]
	0x034BED78 STR D0, [X31 + 0x20]
	0x034BED7C STRB W31, [X31 + 0x2C]
	0x034BED80 BL 0x1C1729C
	0x034BED84 MOV X8, X0
	0x034BED88 STR X0, [X20 + 0x538]
	0x034BED8C MOV X0, X19
	0x034BED90 BLR X8
	0x034BED94 LDP X20, X19, [X31 + 0x40]
	0x034BED98 LDR X30, [X31 + 0x30]
	0x034BED9C ADD X31, X31, 0x50
	0x034BEDA0 RET
	0x034BEDA4 SUB X31, X31, 0x50
	0x034BEDA8 STR X30, [X31 + 0x30]
	0x034BEDAC STP X20, X19, [X31 + 0x40]
	0x034BEDB0 ADRP X20, 0xF20000
	0x034BEDB4 LDR X8, [X20 + 0x540]
	0x034BEDB8 MOV X19, X0
	0x034BEDBC CBNZ X8, 0x34BEE08
	0x034BEDC0 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BEDC4 LDR V0, [X12 + 0x5B8]
	0x034BEDC8 ADRP X8, 0xFFFFFFFFFD655000
	0x034BEDCC ADRP X10, 0xFFFFFFFFFD63A000
	0x034BEDD0 ADD X8, X8, 0xDD2
	0x034BEDD4 MOVZ W9, 0x11
	0x034BEDD8 ADD X10, X10, 0x67E
	0x034BEDDC MOVZ W11, 0x2E
	0x034BEDE0 MOVZ W13, 0x8
	0x034BEDE4 ADD X0, X31, 0x0
	0x034BEDE8 STP X8, X9, [X31]
	0x034BEDEC STP X10, X11, [X31 + 0x10]
	0x034BEDF0 STR W13, [X31 + 0x28]
	0x034BEDF4 STR D0, [X31 + 0x20]
	0x034BEDF8 STRB W31, [X31 + 0x2C]
	0x034BEDFC BL 0x1C1729C
	0x034BEE00 MOV X8, X0
	0x034BEE04 STR X0, [X20 + 0x540]
	0x034BEE08 MOV X0, X19
	0x034BEE0C BLR X8
	0x034BEE10 LDP X20, X19, [X31 + 0x40]
	0x034BEE14 LDR X30, [X31 + 0x30]
	0x034BEE18 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF21000
	008 Move X22, 0xC75000
	009 Move W8, [X23+1064]
	010 Move X22, [X22+808]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC75000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0xC5E000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1064], W8
	026 Move X0, [X22]
	027 Move X22, 0xC5E000
	028 Move W8, [X0+224]
	029 Move X22, [X22+2128]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Call CAPI.StringToNative, X0
	035 Move X1, X20
	036 Move W2, W19
	037 Move X21, X0
	038 Call CAPI.ovr_User_TestUserCreateDeviceManifest_Native, X0, X1, X2
	039 Move X8, [X22]
	040 Move X19, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X31
	048 Call Marshal.FreeCoTaskMem, X0
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return X0

Method: System.UInt64 ovr_User_TestUserCreateDeviceManifest_Native(System.IntPtr deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)

Disassembly:
	0x034BEE1C RET
	0x034BEE20 SUB X31, X31, 0x50
	0x034BEE24 STR X30, [X31 + 0x30]
	0x034BEE28 STP X20, X19, [X31 + 0x40]
	0x034BEE2C ADRP X20, 0xF20000
	0x034BEE30 LDR X8, [X20 + 0x548]
	0x034BEE34 MOV X19, X0
	0x034BEE38 CBNZ X8, 0x34BEE84
	0x034BEE3C ADRP X12, 0xFFFFFFFFFD62F000
	0x034BEE40 LDR V0, [X12 + 0x5B8]
	0x034BEE44 ADRP X8, 0xFFFFFFFFFD655000
	0x034BEE48 ADRP X10, 0xFFFFFFFFFD64E000
	0x034BEE4C ADD X8, X8, 0xDD2
	0x034BEE50 MOVZ W9, 0x11
	0x034BEE54 ADD X10, X10, 0x300
	0x034BEE58 MOVZ W11, 0x30
	0x034BEE5C MOVZ W13, 0x8
	0x034BEE60 ADD X0, X31, 0x0
	0x034BEE64 STP X8, X9, [X31]
	0x034BEE68 STP X10, X11, [X31 + 0x10]
	0x034BEE6C STR W13, [X31 + 0x28]
	0x034BEE70 STR D0, [X31 + 0x20]
	0x034BEE74 STRB W31, [X31 + 0x2C]
	0x034BEE78 BL 0x1C1729C
	0x034BEE7C MOV X8, X0
	0x034BEE80 STR X0, [X20 + 0x548]
	0x034BEE84 MOV X0, X19
	0x034BEE88 BLR X8
	0x034BEE8C LDP X20, X19, [X31 + 0x40]
	0x034BEE90 LDR X30, [X31 + 0x30]
	0x034BEE94 ADD X31, X31, 0x50
	0x034BEE98 RET
	0x034BEE9C SUB X31, X31, 0x50
	0x034BEEA0 STR X30, [X31 + 0x30]
	0x034BEEA4 STP X20, X19, [X31 + 0x40]
	0x034BEEA8 ADRP X20, 0xF20000
	0x034BEEAC LDR X8, [X20 + 0x550]
	0x034BEEB0 MOV X19, X0
	0x034BEEB4 CBNZ X8, 0x34BEF00

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF21000
	008 Move X8, [X22+1072]
	009 Move W19, W2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43843584
	015 Move V0, [X12+1464]
	016 Move X8, -43687936
	017 Move X10, -43646976
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 3849
	021 Move W11, 37
	022 Move W13, 20
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+1072], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move W2, W19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.UInt64 ovr_UserAgeCategory_Get()

Disassembly:
	0x034BEEB8 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BEEBC LDR V0, [X12 + 0x5B8]
	0x034BEEC0 ADRP X8, 0xFFFFFFFFFD655000
	0x034BEEC4 ADRP X10, 0xFFFFFFFFFD64A000
	0x034BEEC8 ADD X8, X8, 0xDD2
	0x034BEECC MOVZ W9, 0x11
	0x034BEED0 ADD X10, X10, 0x4CE
	0x034BEED4 MOVZ W11, 0x2B
	0x034BEED8 MOVZ W13, 0x8
	0x034BEEDC ADD X0, X31, 0x0
	0x034BEEE0 STP X8, X9, [X31]
	0x034BEEE4 STP X10, X11, [X31 + 0x10]
	0x034BEEE8 STR W13, [X31 + 0x28]
	0x034BEEEC STR D0, [X31 + 0x20]
	0x034BEEF0 STRB W31, [X31 + 0x2C]
	0x034BEEF4 BL 0x1C1729C
	0x034BEEF8 MOV X8, X0
	0x034BEEFC STR X0, [X20 + 0x550]
	0x034BEF00 MOV X0, X19
	0x034BEF04 BLR X8
	0x034BEF08 LDP X20, X19, [X31 + 0x40]
	0x034BEF0C LDR X30, [X31 + 0x30]
	0x034BEF10 ADD X31, X31, 0x50
	0x034BEF14 RET
	0x034BEF18 SUB X31, X31, 0x50
	0x034BEF1C STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+1080]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43814912
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1586
	015 Move W11, 23
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1080], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_UserAgeCategory_Report(Oculus.Platform.AppAgeCategory age_category)

Disassembly:
	0x034BEF20 STP X20, X19, [X31 + 0x40]
	0x034BEF24 ADRP X20, 0xF20000
	0x034BEF28 LDR X8, [X20 + 0x558]
	0x034BEF2C MOV X19, X0
	0x034BEF30 CBNZ X8, 0x34BEF7C
	0x034BEF34 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BEF38 LDR V0, [X12 + 0x5B8]
	0x034BEF3C ADRP X8, 0xFFFFFFFFFD655000
	0x034BEF40 ADRP X10, 0xFFFFFFFFFD632000
	0x034BEF44 ADD X8, X8, 0xDD2
	0x034BEF48 MOVZ W9, 0x11
	0x034BEF4C ADD X10, X10, 0x2A1
	0x034BEF50 MOVZ W11, 0x29
	0x034BEF54 MOVZ W13, 0x8
	0x034BEF58 ADD X0, X31, 0x0
	0x034BEF5C STP X8, X9, [X31]
	0x034BEF60 STP X10, X11, [X31 + 0x10]
	0x034BEF64 STR W13, [X31 + 0x28]
	0x034BEF68 STR D0, [X31 + 0x20]
	0x034BEF6C STRB W31, [X31 + 0x2C]
	0x034BEF70 BL 0x1C1729C
	0x034BEF74 MOV X8, X0
	0x034BEF78 STR X0, [X20 + 0x558]
	0x034BEF7C MOV X0, X19
	0x034BEF80 BLR X8
	0x034BEF84 LDP X20, X19, [X31 + 0x40]
	0x034BEF88 LDR X30, [X31 + 0x30]
	0x034BEF8C ADD X31, X31, 0x50
	0x034BEF90 RET
	0x034BEF94 SUB X31, X31, 0x50
	0x034BEF98 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF21000
	006 Move X8, [X20+1088]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43843584
	011 Move V0, [X12+1464]
	012 Move X8, -43687936
	013 Move X10, -43651072
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 485
	017 Move W11, 26
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1088], X0
	030 Move W0, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Voip_GetMicrophoneAvailability()

Disassembly:
	0x034BEF9C STP X20, X19, [X31 + 0x40]
	0x034BEFA0 ADRP X20, 0xF20000
	0x034BEFA4 LDR X8, [X20 + 0x560]
	0x034BEFA8 MOV X19, X0
	0x034BEFAC CBNZ X8, 0x34BEFF8
	0x034BEFB0 ADRP X12, 0xFFFFFFFFFD62F000
	0x034BEFB4 LDR V0, [X12 + 0x5B8]
	0x034BEFB8 ADRP X8, 0xFFFFFFFFFD655000
	0x034BEFBC ADRP X10, 0xFFFFFFFFFD66B000
	0x034BEFC0 ADD X8, X8, 0xDD2
	0x034BEFC4 MOVZ W9, 0x11
	0x034BEFC8 ADD X10, X10, 0xD37
	0x034BEFCC MOVZ W11, 0x22
	0x034BEFD0 MOVZ W13, 0x8
	0x034BEFD4 ADD X0, X31, 0x0
	0x034BEFD8 STP X8, X9, [X31]
	0x034BEFDC STP X10, X11, [X31 + 0x10]
	0x034BEFE0 STR W13, [X31 + 0x28]
	0x034BEFE4 STR D0, [X31 + 0x20]
	0x034BEFE8 STRB W31, [X31 + 0x2C]
	0x034BEFEC BL 0x1C1729C
	0x034BEFF0 MOV X8, X0
	0x034BEFF4 STR X0, [X20 + 0x560]
	0x034BEFF8 MOV X0, X19
	0x034BEFFC BLR X8
	0x034BF000 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF21000
	005 Move X8, [X19+1096]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43843584
	009 Move V0, [X12+1464]
	010 Move X8, -43687936
	011 Move X10, -43749376
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1614
	015 Move W11, 34
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1096], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.UInt64 ovr_Voip_ReportAppVoipSessions(System.UInt64[] sessionIDs)

Disassembly:
	0x034BF004 LDR X30, [X31 + 0x30]
	0x034BF008 ADD X31, X31, 0x50
	0x034BF00C RET
	0x034BF010 SUB X31, X31, 0x50
	0x034BF014 STR X30, [X31 + 0x30]
	0x034BF018 STP X20, X19, [X31 + 0x40]
	0x034BF01C ADRP X20, 0xF1F000
	0x034BF020 LDR X8, [X20 + 0x568]
	0x034BF024 MOV X19, X0
	0x034BF028 CBNZ X8, 0x34BF074
	0x034BF02C ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF030 LDR V0, [X12 + 0x5B8]
	0x034BF034 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF038 ADRP X10, 0xFFFFFFFFFD649000
	0x034BF03C ADD X8, X8, 0xDD2
	0x034BF040 MOVZ W9, 0x11
	0x034BF044 ADD X10, X10, 0x4FA
	0x034BF048 MOVZ W11, 0x15
	0x034BF04C MOVZ W13, 0x8
	0x034BF050 ADD X0, X31, 0x0
	0x034BF054 STP X8, X9, [X31]
	0x034BF058 STP X10, X11, [X31 + 0x10]
	0x034BF05C STR W13, [X31 + 0x28]
	0x034BF060 STR D0, [X31 + 0x20]
	0x034BF064 STRB W31, [X31 + 0x2C]
	0x034BF068 BL 0x1C1729C
	0x034BF06C MOV X8, X0
	0x034BF070 STR X0, [X20 + 0x568]
	0x034BF074 MOV X0, X19
	0x034BF078 BLR X8
	0x034BF07C LDP X20, X19, [X31 + 0x40]
	0x034BF080 LDR X30, [X31 + 0x30]
	0x034BF084 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1104]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43753472
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1649
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1104], X0
	030 Add X9, X19, 32
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X30, [X31+48]
	037 Add X31, X31, 80
	038 Return X0

Method: System.UInt64 ovr_Voip_SetSystemVoipSuppressed(System.Boolean suppressed)

Disassembly:
	0x034BF088 RET
	0x034BF08C SUB X31, X31, 0x50
	0x034BF090 STR X30, [X31 + 0x30]
	0x034BF094 STP X20, X19, [X31 + 0x40]
	0x034BF098 ADRP X20, 0xF1F000
	0x034BF09C LDR X8, [X20 + 0x570]
	0x034BF0A0 MOV X19, X0
	0x034BF0A4 CBNZ X8, 0x34BF0F0
	0x034BF0A8 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF0AC LDR V0, [X12 + 0x5B8]
	0x034BF0B0 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF0B4 ADRP X10, 0xFFFFFFFFFD643000
	0x034BF0B8 ADD X8, X8, 0xDD2
	0x034BF0BC MOVZ W9, 0x11
	0x034BF0C0 ADD X10, X10, 0x2E2
	0x034BF0C4 MOVZ W11, 0x24
	0x034BF0C8 MOVZ W13, 0x8
	0x034BF0CC ADD X0, X31, 0x0
	0x034BF0D0 STP X8, X9, [X31]
	0x034BF0D4 STP X10, X11, [X31 + 0x10]
	0x034BF0D8 STR W13, [X31 + 0x28]
	0x034BF0DC STR D0, [X31 + 0x20]
	0x034BF0E0 STRB W31, [X31 + 0x2C]
	0x034BF0E4 BL 0x1C1729C
	0x034BF0E8 MOV X8, X0
	0x034BF0EC STR X0, [X20 + 0x570]
	0x034BF0F0 MOV X0, X19
	0x034BF0F4 BLR X8
	0x034BF0F8 LDP X20, X19, [X31 + 0x40]
	0x034BF0FC LDR X30, [X31 + 0x30]
	0x034BF100 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1112]
	007 Move W19, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 694
	017 Move W11, 32
	018 Move W13, 4
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1112], X0
	030 And W0, W19, 1
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AbuseReportRecording_GetRecordingUuid(System.IntPtr obj)

Disassembly:
	0x034BF104 RET
	0x034BF108 SUB X31, X31, 0x50
	0x034BF10C STR X30, [X31 + 0x30]
	0x034BF110 STP X20, X19, [X31 + 0x40]
	0x034BF114 ADRP X20, 0xF1F000
	0x034BF118 LDR X8, [X20 + 0x578]
	0x034BF11C MOV X19, X0
	0x034BF120 CBNZ X8, 0x34BF16C
	0x034BF124 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF128 LDR V0, [X12 + 0x5B8]
	0x034BF12C ADRP X8, 0xFFFFFFFFFD654000
	0x034BF130 ADRP X10, 0xFFFFFFFFFD66A000
	0x034BF134 ADD X8, X8, 0xDD2
	0x034BF138 MOVZ W9, 0x11
	0x034BF13C ADD X10, X10, 0xD5A
	0x034BF140 MOVZ W11, 0x1B
	0x034BF144 MOVZ W13, 0x8
	0x034BF148 ADD X0, X31, 0x0
	0x034BF14C STP X8, X9, [X31]
	0x034BF150 STP X10, X11, [X31 + 0x10]
	0x034BF154 STR W13, [X31 + 0x28]
	0x034BF158 STR D0, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF20000
	006 Move X21, 0xC74000
	007 Move W8, [X20+1120]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC74000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1120], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AbuseReportRecording_GetRecordingUuid_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(System.IntPtr obj)

Disassembly:
	0x034BF15C STRB W31, [X31 + 0x2C]
	0x034BF160 BL 0x1C1729C
	0x034BF164 MOV X8, X0
	0x034BF168 STR X0, [X20 + 0x578]
	0x034BF16C MOV X0, X19
	0x034BF170 BLR X8
	0x034BF174 LDP X20, X19, [X31 + 0x40]
	0x034BF178 LDR X30, [X31 + 0x30]
	0x034BF17C ADD X31, X31, 0x50
	0x034BF180 RET
	0x034BF184 SUB X31, X31, 0x50
	0x034BF188 STR X30, [X31 + 0x30]
	0x034BF18C STP X20, X19, [X31 + 0x40]
	0x034BF190 ADRP X20, 0xF1F000
	0x034BF194 LDR X8, [X20 + 0x580]
	0x034BF198 MOV X19, X0
	0x034BF19C CBNZ X8, 0x34BF1E8
	0x034BF1A0 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF1A4 LDR V0, [X12 + 0x5B8]
	0x034BF1A8 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF1AC ADRP X10, 0xFFFFFFFFFD66C000
	0x034BF1B0 ADD X8, X8, 0xDD2
	0x034BF1B4 MOVZ W9, 0x11
	0x034BF1B8 ADD X10, X10, 0xBE5
	0x034BF1BC MOVZ W11, 0x21
	0x034BF1C0 MOVZ W13, 0x8
	0x034BF1C4 ADD X0, X31, 0x0
	0x034BF1C8 STP X8, X9, [X31]
	0x034BF1CC STP X10, X11, [X31 + 0x10]
	0x034BF1D0 STR W13, [X31 + 0x28]
	0x034BF1D4 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1128]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43704320
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1091
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1128], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt32 ovr_AchievementDefinition_GetBitfieldLength(System.IntPtr obj)

Disassembly:
	0x034BF1D8 STRB W31, [X31 + 0x2C]
	0x034BF1DC BL 0x1C1729C
	0x034BF1E0 MOV X8, X0
	0x034BF1E4 STR X0, [X20 + 0x580]
	0x034BF1E8 MOV X0, X19
	0x034BF1EC BLR X8
	0x034BF1F0 LDP X20, X19, [X31 + 0x40]
	0x034BF1F4 LDR X30, [X31 + 0x30]
	0x034BF1F8 CMP W0, 0x0
	0x034BF1FC CSET W0, NE
	0x034BF200 ADD X31, X31, 0x50
	0x034BF204 RET
	0x034BF208 STP X30, X21, [X31 - 0x20]!
	0x034BF20C STP X20, X19, [X31 + 0x10]
	0x034BF210 ADRP X20, 0xF1F000
	0x034BF214 ADRP X21, 0xC73000
	0x034BF218 LDRB W8, [X20 + 0x588]
	0x034BF21C LDR X21, [X21 + 0x328]
	0x034BF220 MOV X19, X0
	0x034BF224 TBNZ X8, 0x0, 0x34BF23C
	0x034BF228 ADRP X0, 0xC73000
	0x034BF22C LDR X0, [X0 + 0x328]
	0x034BF230 BL 0x1C16CF4
	0x034BF234 MOVZ W8, 0x1
	0x034BF238 STRB W8, [X20 + 0x588]
	0x034BF23C LDR X0, [X21]
	0x034BF240 LDR W8, [X0 + 0xE0]
	0x034BF244 CBNZ W8, 0x34BF24C
	0x034BF248 BL 0x1C16DFC
	0x034BF24C MOV X0, X19
	0x034BF250 BL 0x34BF260

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1136]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43810816
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1632
	017 Move W11, 43
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1136], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AchievementDefinition_GetName(System.IntPtr obj)

Disassembly:
	0x034BF254 LDP X20, X19, [X31 + 0x10]
	0x034BF258 LDP X30, X21, [X31], #0x20
	0x034BF25C B 0x34B3B78
	0x034BF260 SUB X31, X31, 0x50
	0x034BF264 STR X30, [X31 + 0x30]
	0x034BF268 STP X20, X19, [X31 + 0x40]
	0x034BF26C ADRP X20, 0xF1F000
	0x034BF270 LDR X8, [X20 + 0x590]
	0x034BF274 MOV X19, X0
	0x034BF278 CBNZ X8, 0x34BF2C4
	0x034BF27C ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF280 LDR V0, [X12 + 0x5B8]
	0x034BF284 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF288 ADRP X10, 0xFFFFFFFFFD633000
	0x034BF28C ADD X8, X8, 0xDD2
	0x034BF290 MOVZ W9, 0x11
	0x034BF294 ADD X10, X10, 0x743
	0x034BF298 MOVZ W11, 0x27
	0x034BF29C MOVZ W13, 0x8
	0x034BF2A0 ADD X0, X31, 0x0
	0x034BF2A4 STP X8, X9, [X31]
	0x034BF2A8 STP X10, X11, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF20000
	006 Move X21, 0xC74000
	007 Move W8, [X20+1144]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC74000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1144], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AchievementDefinition_GetName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AchievementDefinition_GetName_Native(System.IntPtr obj)

Disassembly:
	0x034BF2AC STR W13, [X31 + 0x28]
	0x034BF2B0 STR D0, [X31 + 0x20]
	0x034BF2B4 STRB W31, [X31 + 0x2C]
	0x034BF2B8 BL 0x1C1729C
	0x034BF2BC MOV X8, X0
	0x034BF2C0 STR X0, [X20 + 0x590]
	0x034BF2C4 MOV X0, X19
	0x034BF2C8 BLR X8
	0x034BF2CC LDP X20, X19, [X31 + 0x40]
	0x034BF2D0 LDR X30, [X31 + 0x30]
	0x034BF2D4 ADD X31, X31, 0x50
	0x034BF2D8 RET
	0x034BF2DC STP X30, X21, [X31 - 0x20]!
	0x034BF2E0 STP X20, X19, [X31 + 0x10]
	0x034BF2E4 ADRP X20, 0xF1F000
	0x034BF2E8 ADRP X21, 0xC73000
	0x034BF2EC LDRB W8, [X20 + 0x598]
	0x034BF2F0 LDR X21, [X21 + 0x328]
	0x034BF2F4 MOV X19, X0
	0x034BF2F8 TBNZ X8, 0x0, 0x34BF310
	0x034BF2FC ADRP X0, 0xC73000
	0x034BF300 LDR X0, [X0 + 0x328]
	0x034BF304 BL 0x1C16CF4
	0x034BF308 MOVZ W8, 0x1
	0x034BF30C STRB W8, [X20 + 0x598]
	0x034BF310 LDR X0, [X21]
	0x034BF314 LDR W8, [X0 + 0xE0]
	0x034BF318 CBNZ W8, 0x34BF320
	0x034BF31C BL 0x1C16DFC
	0x034BF320 MOV X0, X19
	0x034BF324 BL 0x34BF334

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1152]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43737088
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1196
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1152], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AchievementDefinition_GetTarget(System.IntPtr obj)

Disassembly:
	0x034BF328 LDP X20, X19, [X31 + 0x10]
	0x034BF32C LDP X30, X21, [X31], #0x20
	0x034BF330 B 0x34B3B78
	0x034BF334 SUB X31, X31, 0x50
	0x034BF338 STR X30, [X31 + 0x30]
	0x034BF33C STP X20, X19, [X31 + 0x40]
	0x034BF340 ADRP X20, 0xF1F000
	0x034BF344 LDR X8, [X20 + 0x5A0]
	0x034BF348 MOV X19, X0
	0x034BF34C CBNZ X8, 0x34BF398
	0x034BF350 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF354 LDR V0, [X12 + 0x5B8]
	0x034BF358 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF35C ADRP X10, 0xFFFFFFFFFD65A000
	0x034BF360 ADD X8, X8, 0xDD2
	0x034BF364 MOVZ W9, 0x11
	0x034BF368 ADD X10, X10, 0xD86
	0x034BF36C MOVZ W11, 0x27
	0x034BF370 MOVZ W13, 0x8
	0x034BF374 ADD X0, X31, 0x0
	0x034BF378 STP X8, X9, [X31]
	0x034BF37C STP X10, X11, [X31 + 0x10]
	0x034BF380 STR W13, [X31 + 0x28]
	0x034BF384 STR D0, [X31 + 0x20]
	0x034BF388 STRB W31, [X31 + 0x2C]
	0x034BF38C BL 0x1C1729C
	0x034BF390 MOV X8, X0
	0x034BF394 STR X0, [X20 + 0x5A0]
	0x034BF398 MOV X0, X19
	0x034BF39C BLR X8
	0x034BF3A0 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1160]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43712512
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1130
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1160], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.AchievementType ovr_AchievementDefinition_GetType(System.IntPtr obj)

Disassembly:
	0x034BF3A4 LDR X30, [X31 + 0x30]
	0x034BF3A8 ADD X31, X31, 0x50
	0x034BF3AC RET
	0x034BF3B0 SUB X31, X31, 0x50
	0x034BF3B4 STR X30, [X31 + 0x30]
	0x034BF3B8 STP X20, X19, [X31 + 0x40]
	0x034BF3BC ADRP X20, 0xF1F000
	0x034BF3C0 LDR X8, [X20 + 0x5A8]
	0x034BF3C4 MOV X19, X0
	0x034BF3C8 CBNZ X8, 0x34BF414
	0x034BF3CC ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF3D0 LDR V0, [X12 + 0x5B8]
	0x034BF3D4 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF3D8 ADRP X10, 0xFFFFFFFFFD633000
	0x034BF3DC ADD X8, X8, 0xDD2
	0x034BF3E0 MOVZ W9, 0x11
	0x034BF3E4 ADD X10, X10, 0x76B
	0x034BF3E8 MOVZ W11, 0x22
	0x034BF3EC MOVZ W13, 0x8
	0x034BF3F0 ADD X0, X31, 0x0
	0x034BF3F4 STP X8, X9, [X31]
	0x034BF3F8 STP X10, X11, [X31 + 0x10]
	0x034BF3FC STR W13, [X31 + 0x28]
	0x034BF400 STR D0, [X31 + 0x20]
	0x034BF404 STRB W31, [X31 + 0x2C]
	0x034BF408 BL 0x1C1729C
	0x034BF40C MOV X8, X0
	0x034BF410 STR X0, [X20 + 0x5A8]
	0x034BF414 MOV X0, X19
	0x034BF418 BLR X8
	0x034BF41C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1168]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 704
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1168], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_AchievementDefinitionArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034BF420 LDR X30, [X31 + 0x30]
	0x034BF424 ADD X31, X31, 0x50
	0x034BF428 RET
	0x034BF42C SUB X31, X31, 0x50
	0x034BF430 STP X30, X21, [X31 + 0x30]
	0x034BF434 STP X20, X19, [X31 + 0x40]
	0x034BF438 ADRP X21, 0xF1F000
	0x034BF43C LDR X8, [X21 + 0x5B0]
	0x034BF440 MOV X19, X1
	0x034BF444 MOV X20, X0
	0x034BF448 CBNZ X8, 0x34BF494
	0x034BF44C ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF450 LDR V0, [X12 + 0x5B8]
	0x034BF454 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF458 ADRP X10, 0xFFFFFFFFFD668000
	0x034BF45C ADD X8, X8, 0xDD2
	0x034BF460 MOVZ W9, 0x11
	0x034BF464 ADD X10, X10, 0xCFB
	0x034BF468 MOVZ W11, 0x25
	0x034BF46C MOVZ W13, 0x10
	0x034BF470 ADD X0, X31, 0x0
	0x034BF474 STP X8, X9, [X31]
	0x034BF478 STP X10, X11, [X31 + 0x10]
	0x034BF47C STR W13, [X31 + 0x28]
	0x034BF480 STR D0, [X31 + 0x20]
	0x034BF484 STRB W31, [X31 + 0x2C]
	0x034BF488 BL 0x1C1729C
	0x034BF48C MOV X8, X0
	0x034BF490 STR X0, [X21 + 0x5B0]
	0x034BF494 MOV X0, X20
	0x034BF498 MOV X1, X19
	0x034BF49C BLR X8
	0x034BF4A0 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF20000
	007 Move X8, [X21+1176]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43847680
	013 Move V0, [X12+1464]
	014 Move X8, -43692032
	015 Move X10, -43696128
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 86
	019 Move W11, 41
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1176], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_AchievementDefinitionArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034BF4A4 LDP X30, X21, [X31 + 0x30]
	0x034BF4A8 ADD X31, X31, 0x50
	0x034BF4AC RET
	0x034BF4B0 STP X30, X21, [X31 - 0x20]!
	0x034BF4B4 STP X20, X19, [X31 + 0x10]
	0x034BF4B8 ADRP X20, 0xF1F000
	0x034BF4BC ADRP X21, 0xC73000
	0x034BF4C0 LDRB W8, [X20 + 0x5B8]
	0x034BF4C4 LDR X21, [X21 + 0x328]
	0x034BF4C8 MOV X19, X0
	0x034BF4CC TBNZ X8, 0x0, 0x34BF4E4
	0x034BF4D0 ADRP X0, 0xC73000
	0x034BF4D4 LDR X0, [X0 + 0x328]
	0x034BF4D8 BL 0x1C16CF4
	0x034BF4DC MOVZ W8, 0x1
	0x034BF4E0 STRB W8, [X20 + 0x5B8]
	0x034BF4E4 LDR X0, [X21]
	0x034BF4E8 LDR W8, [X0 + 0xE0]
	0x034BF4EC CBNZ W8, 0x34BF4F4
	0x034BF4F0 BL 0x1C16DFC
	0x034BF4F4 MOV X0, X19
	0x034BF4F8 BL 0x34BF508

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF20000
	006 Move X21, 0xC74000
	007 Move W8, [X20+1184]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC74000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1184], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AchievementDefinitionArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034BF4FC LDP X20, X19, [X31 + 0x10]
	0x034BF500 LDP X30, X21, [X31], #0x20
	0x034BF504 B 0x34B3B78
	0x034BF508 SUB X31, X31, 0x50
	0x034BF50C STR X30, [X31 + 0x30]
	0x034BF510 STP X20, X19, [X31 + 0x40]
	0x034BF514 ADRP X20, 0xF1F000
	0x034BF518 LDR X8, [X20 + 0x5C0]
	0x034BF51C MOV X19, X0
	0x034BF520 CBNZ X8, 0x34BF56C
	0x034BF524 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF528 LDR V0, [X12 + 0x5B8]
	0x034BF52C ADRP X8, 0xFFFFFFFFFD654000
	0x034BF530 ADRP X10, 0xFFFFFFFFFD656000
	0x034BF534 ADD X8, X8, 0xDD2
	0x034BF538 MOVZ W9, 0x11
	0x034BF53C ADD X10, X10, 0xC1A
	0x034BF540 MOVZ W11, 0x25
	0x034BF544 MOVZ W13, 0x8
	0x034BF548 ADD X0, X31, 0x0
	0x034BF54C STP X8, X9, [X31]
	0x034BF550 STP X10, X11, [X31 + 0x10]
	0x034BF554 STR W13, [X31 + 0x28]
	0x034BF558 STR D0, [X31 + 0x20]
	0x034BF55C STRB W31, [X31 + 0x2C]
	0x034BF560 BL 0x1C1729C
	0x034BF564 MOV X8, X0
	0x034BF568 STR X0, [X20 + 0x5C0]
	0x034BF56C MOV X0, X19
	0x034BF570 BLR X8
	0x034BF574 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1192]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43843584
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2070
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1192], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_AchievementDefinitionArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034BF578 LDR X30, [X31 + 0x30]
	0x034BF57C ADD X31, X31, 0x50
	0x034BF580 RET
	0x034BF584 SUB X31, X31, 0x50
	0x034BF588 STR X30, [X31 + 0x30]
	0x034BF58C STP X20, X19, [X31 + 0x40]
	0x034BF590 ADRP X20, 0xF1F000
	0x034BF594 LDR X8, [X20 + 0x5C8]
	0x034BF598 MOV X19, X0
	0x034BF59C CBNZ X8, 0x34BF5E8
	0x034BF5A0 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF5A4 LDR V0, [X12 + 0x5B8]
	0x034BF5A8 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF5AC ADRP X10, 0xFFFFFFFFFD663000
	0x034BF5B0 ADD X8, X8, 0xDD2
	0x034BF5B4 MOVZ W9, 0x11
	0x034BF5B8 ADD X10, X10, 0x392
	0x034BF5BC MOVZ W11, 0x22
	0x034BF5C0 MOVZ W13, 0x8
	0x034BF5C4 ADD X0, X31, 0x0
	0x034BF5C8 STP X8, X9, [X31]
	0x034BF5CC STP X10, X11, [X31 + 0x10]
	0x034BF5D0 STR W13, [X31 + 0x28]
	0x034BF5D4 STR D0, [X31 + 0x20]
	0x034BF5D8 STRB W31, [X31 + 0x2C]
	0x034BF5DC BL 0x1C1729C
	0x034BF5E0 MOV X8, X0
	0x034BF5E4 STR X0, [X20 + 0x5C8]
	0x034BF5E8 MOV X0, X19
	0x034BF5EC BLR X8
	0x034BF5F0 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1200]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43753472
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1680
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1200], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_AchievementDefinitionArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034BF5F4 LDR X30, [X31 + 0x30]
	0x034BF5F8 ADD X31, X31, 0x50
	0x034BF5FC RET
	0x034BF600 SUB X31, X31, 0x50
	0x034BF604 STR X30, [X31 + 0x30]
	0x034BF608 STP X20, X19, [X31 + 0x40]
	0x034BF60C ADRP X20, 0xF1F000
	0x034BF610 LDR X8, [X20 + 0x5D0]
	0x034BF614 MOV X19, X0
	0x034BF618 CBNZ X8, 0x34BF664
	0x034BF61C ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF620 LDR V0, [X12 + 0x5B8]
	0x034BF624 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF628 ADRP X10, 0xFFFFFFFFFD667000
	0x034BF62C ADD X8, X8, 0xDD2
	0x034BF630 MOVZ W9, 0x11
	0x034BF634 ADD X10, X10, 0x2C0
	0x034BF638 MOVZ W11, 0x26
	0x034BF63C MOVZ W13, 0x8
	0x034BF640 ADD X0, X31, 0x0
	0x034BF644 STP X8, X9, [X31]
	0x034BF648 STP X10, X11, [X31 + 0x10]
	0x034BF64C STR W13, [X31 + 0x28]
	0x034BF650 STR D0, [X31 + 0x20]
	0x034BF654 STRB W31, [X31 + 0x2C]
	0x034BF658 BL 0x1C1729C
	0x034BF65C MOV X8, X0
	0x034BF660 STR X0, [X20 + 0x5D0]
	0x034BF664 MOV X0, X19
	0x034BF668 BLR X8
	0x034BF66C LDP X20, X19, [X31 + 0x40]
	0x034BF670 LDR X30, [X31 + 0x30]
	0x034BF674 CMP W0, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1208]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43753472
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1719
	017 Move W11, 42
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1208], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_AchievementProgress_GetBitfield(System.IntPtr obj)

Disassembly:
	0x034BF678 CSET W0, NE
	0x034BF67C ADD X31, X31, 0x50
	0x034BF680 RET
	0x034BF684 SUB X31, X31, 0x50
	0x034BF688 STR X30, [X31 + 0x30]
	0x034BF68C STP X20, X19, [X31 + 0x40]
	0x034BF690 ADRP X20, 0xF1F000
	0x034BF694 LDR X8, [X20 + 0x5D8]
	0x034BF698 MOV X19, X0
	0x034BF69C CBNZ X8, 0x34BF6E8
	0x034BF6A0 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF6A4 LDR V0, [X12 + 0x5B8]
	0x034BF6A8 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF6AC ADRP X10, 0xFFFFFFFFFD637000
	0x034BF6B0 ADD X8, X8, 0xDD2
	0x034BF6B4 MOVZ W9, 0x11
	0x034BF6B8 ADD X10, X10, 0x6B2
	0x034BF6BC MOVZ W11, 0x25
	0x034BF6C0 MOVZ W13, 0x8
	0x034BF6C4 ADD X0, X31, 0x0
	0x034BF6C8 STP X8, X9, [X31]
	0x034BF6CC STP X10, X11, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF20000
	006 Move X21, 0xC74000
	007 Move W8, [X20+1216]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC74000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1216], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AchievementProgress_GetBitfield_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AchievementProgress_GetBitfield_Native(System.IntPtr obj)

Disassembly:
	0x034BF6D0 STR W13, [X31 + 0x28]
	0x034BF6D4 STR D0, [X31 + 0x20]
	0x034BF6D8 STRB W31, [X31 + 0x2C]
	0x034BF6DC BL 0x1C1729C
	0x034BF6E0 MOV X8, X0
	0x034BF6E4 STR X0, [X20 + 0x5D8]
	0x034BF6E8 MOV X0, X19
	0x034BF6EC BLR X8
	0x034BF6F0 LDP X20, X19, [X31 + 0x40]
	0x034BF6F4 LDR X30, [X31 + 0x30]
	0x034BF6F8 ADD X31, X31, 0x50
	0x034BF6FC RET
	0x034BF700 STP X30, X21, [X31 - 0x20]!
	0x034BF704 STP X20, X19, [X31 + 0x10]
	0x034BF708 ADRP X20, 0xF1F000
	0x034BF70C ADRP X21, 0xC73000
	0x034BF710 LDRB W8, [X20 + 0x5E0]
	0x034BF714 LDR X21, [X21 + 0x328]
	0x034BF718 MOV X19, X0
	0x034BF71C TBNZ X8, 0x0, 0x34BF734
	0x034BF720 ADRP X0, 0xC73000
	0x034BF724 LDR X0, [X0 + 0x328]
	0x034BF728 BL 0x1C16CF4
	0x034BF72C MOVZ W8, 0x1
	0x034BF730 STRB W8, [X20 + 0x5E0]
	0x034BF734 LDR X0, [X21]
	0x034BF738 LDR W8, [X0 + 0xE0]
	0x034BF73C CBNZ W8, 0x34BF744
	0x034BF740 BL 0x1C16DFC
	0x034BF744 MOV X0, X19
	0x034BF748 BL 0x34BF758

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1224]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 128
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1224], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AchievementProgress_GetCount(System.IntPtr obj)

Disassembly:
	0x034BF74C LDP X20, X19, [X31 + 0x10]
	0x034BF750 LDP X30, X21, [X31], #0x20
	0x034BF754 B 0x34B3B78
	0x034BF758 SUB X31, X31, 0x50
	0x034BF75C STR X30, [X31 + 0x30]
	0x034BF760 STP X20, X19, [X31 + 0x40]
	0x034BF764 ADRP X20, 0xF1F000
	0x034BF768 LDR X8, [X20 + 0x5E8]
	0x034BF76C MOV X19, X0
	0x034BF770 CBNZ X8, 0x34BF7BC
	0x034BF774 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF778 LDR V0, [X12 + 0x5B8]
	0x034BF77C ADRP X8, 0xFFFFFFFFFD654000
	0x034BF780 ADRP X10, 0xFFFFFFFFFD656000
	0x034BF784 ADD X8, X8, 0xDD2
	0x034BF788 MOVZ W9, 0x11
	0x034BF78C ADD X10, X10, 0xC40
	0x034BF790 MOVZ W11, 0x25
	0x034BF794 MOVZ W13, 0x8
	0x034BF798 ADD X0, X31, 0x0
	0x034BF79C STP X8, X9, [X31]
	0x034BF7A0 STP X10, X11, [X31 + 0x10]
	0x034BF7A4 STR W13, [X31 + 0x28]
	0x034BF7A8 STR D0, [X31 + 0x20]
	0x034BF7AC STRB W31, [X31 + 0x2C]
	0x034BF7B0 BL 0x1C1729C
	0x034BF7B4 MOV X8, X0
	0x034BF7B8 STR X0, [X20 + 0x5E8]
	0x034BF7BC MOV X0, X19
	0x034BF7C0 BLR X8
	0x034BF7C4 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1232]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43610112
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3290
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1232], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_AchievementProgress_GetIsUnlocked(System.IntPtr obj)

Disassembly:
	0x034BF7C8 LDR X30, [X31 + 0x30]
	0x034BF7CC ADD X31, X31, 0x50
	0x034BF7D0 RET
	0x034BF7D4 SUB X31, X31, 0x50
	0x034BF7D8 STR X30, [X31 + 0x30]
	0x034BF7DC STP X20, X19, [X31 + 0x40]
	0x034BF7E0 ADRP X20, 0xF1F000
	0x034BF7E4 LDR X8, [X20 + 0x5F0]
	0x034BF7E8 MOV X19, X0
	0x034BF7EC CBNZ X8, 0x34BF838
	0x034BF7F0 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF7F4 LDR V0, [X12 + 0x5B8]
	0x034BF7F8 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF7FC ADRP X10, 0xFFFFFFFFFD66A000
	0x034BF800 ADD X8, X8, 0xDD2
	0x034BF804 MOVZ W9, 0x11
	0x034BF808 ADD X10, X10, 0xD76
	0x034BF80C MOVZ W11, 0x24
	0x034BF810 MOVZ W13, 0x8
	0x034BF814 ADD X0, X31, 0x0
	0x034BF818 STP X8, X9, [X31]
	0x034BF81C STP X10, X11, [X31 + 0x10]
	0x034BF820 STR W13, [X31 + 0x28]
	0x034BF824 STR D0, [X31 + 0x20]
	0x034BF828 STRB W31, [X31 + 0x2C]
	0x034BF82C BL 0x1C1729C
	0x034BF830 MOV X8, X0
	0x034BF834 STR X0, [X20 + 0x5F0]
	0x034BF838 MOV X0, X19
	0x034BF83C BLR X8
	0x034BF840 LDP X20, X19, [X31 + 0x40]
	0x034BF844 LDR X30, [X31 + 0x30]
	0x034BF848 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1240]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43835392
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 635
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1240], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_AchievementProgress_GetName(System.IntPtr obj)

Disassembly:
	0x034BF84C RET
	0x034BF850 STP X30, X21, [X31 - 0x20]!
	0x034BF854 STP X20, X19, [X31 + 0x10]
	0x034BF858 ADRP X20, 0xF1F000
	0x034BF85C ADRP X21, 0xC73000
	0x034BF860 LDRB W8, [X20 + 0x5F8]
	0x034BF864 LDR X21, [X21 + 0x328]
	0x034BF868 MOV X19, X0
	0x034BF86C TBNZ X8, 0x0, 0x34BF884
	0x034BF870 ADRP X0, 0xC73000
	0x034BF874 LDR X0, [X0 + 0x328]
	0x034BF878 BL 0x1C16CF4
	0x034BF87C MOVZ W8, 0x1
	0x034BF880 STRB W8, [X20 + 0x5F8]
	0x034BF884 LDR X0, [X21]
	0x034BF888 LDR W8, [X0 + 0xE0]
	0x034BF88C CBNZ W8, 0x34BF894
	0x034BF890 BL 0x1C16DFC
	0x034BF894 MOV X0, X19
	0x034BF898 BL 0x34BF8A8
	0x034BF89C LDP X20, X19, [X31 + 0x10]
	0x034BF8A0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF20000
	006 Move X21, 0xC74000
	007 Move W8, [X20+1248]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC74000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1248], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AchievementProgress_GetName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AchievementProgress_GetName_Native(System.IntPtr obj)

Disassembly:
	0x034BF8A4 B 0x34B3B78
	0x034BF8A8 SUB X31, X31, 0x50
	0x034BF8AC STR X30, [X31 + 0x30]
	0x034BF8B0 STP X20, X19, [X31 + 0x40]
	0x034BF8B4 ADRP X20, 0xF1F000
	0x034BF8B8 LDR X8, [X20 + 0x600]
	0x034BF8BC MOV X19, X0
	0x034BF8C0 CBNZ X8, 0x34BF90C
	0x034BF8C4 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF8C8 LDR V0, [X12 + 0x5B8]
	0x034BF8CC ADRP X8, 0xFFFFFFFFFD654000
	0x034BF8D0 ADRP X10, 0xFFFFFFFFFD65A000
	0x034BF8D4 ADD X8, X8, 0xDD2
	0x034BF8D8 MOVZ W9, 0x11
	0x034BF8DC ADD X10, X10, 0xDAE
	0x034BF8E0 MOVZ W11, 0x24
	0x034BF8E4 MOVZ W13, 0x8
	0x034BF8E8 ADD X0, X31, 0x0
	0x034BF8EC STP X8, X9, [X31]
	0x034BF8F0 STP X10, X11, [X31 + 0x10]
	0x034BF8F4 STR W13, [X31 + 0x28]
	0x034BF8F8 STR D0, [X31 + 0x20]
	0x034BF8FC STRB W31, [X31 + 0x2C]
	0x034BF900 BL 0x1C1729C
	0x034BF904 MOV X8, X0
	0x034BF908 STR X0, [X20 + 0x600]
	0x034BF90C MOV X0, X19
	0x034BF910 BLR X8
	0x034BF914 LDP X20, X19, [X31 + 0x40]
	0x034BF918 LDR X30, [X31 + 0x30]
	0x034BF91C ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1256]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43675648
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3420
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1256], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.DateTime ovr_AchievementProgress_GetUnlockTime(System.IntPtr obj)

Disassembly:
	0x034BF920 RET
	0x034BF924 SUB X31, X31, 0x50
	0x034BF928 STR X30, [X31 + 0x30]
	0x034BF92C STP X20, X19, [X31 + 0x40]
	0x034BF930 ADRP X20, 0xF1F000
	0x034BF934 LDR X8, [X20 + 0x608]
	0x034BF938 MOV X19, X0
	0x034BF93C CBNZ X8, 0x34BF988
	0x034BF940 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BF944 LDR V0, [X12 + 0x5B8]
	0x034BF948 ADRP X8, 0xFFFFFFFFFD654000
	0x034BF94C ADRP X10, 0xFFFFFFFFFD656000
	0x034BF950 ADD X8, X8, 0xDD2
	0x034BF954 MOVZ W9, 0x11
	0x034BF958 ADD X10, X10, 0xC66
	0x034BF95C MOVZ W11, 0x25
	0x034BF960 MOVZ W13, 0x8
	0x034BF964 ADD X0, X31, 0x0
	0x034BF968 STP X8, X9, [X31]
	0x034BF96C STP X10, X11, [X31 + 0x10]
	0x034BF970 STR W13, [X31 + 0x28]
	0x034BF974 STR D0, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF20000
	006 Move X21, 0xC74000
	007 Move W8, [X20+1264]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC74000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1264], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AchievementProgress_GetUnlockTime_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.DateTimeFromNative, X0
	031 Return X0

Method: System.UInt64 ovr_AchievementProgress_GetUnlockTime_Native(System.IntPtr obj)

Disassembly:
	0x034BF978 STRB W31, [X31 + 0x2C]
	0x034BF97C BL 0x1C1729C
	0x034BF980 MOV X8, X0
	0x034BF984 STR X0, [X20 + 0x608]
	0x034BF988 MOV X0, X19
	0x034BF98C BLR X8
	0x034BF990 LDP X20, X19, [X31 + 0x40]
	0x034BF994 LDR X30, [X31 + 0x30]
	0x034BF998 ADD X31, X31, 0x50
	0x034BF99C RET
	0x034BF9A0 STP X30, X21, [X31 - 0x20]!
	0x034BF9A4 STP X20, X19, [X31 + 0x10]
	0x034BF9A8 ADRP X20, 0xF1F000
	0x034BF9AC ADRP X21, 0xC73000
	0x034BF9B0 LDRB W8, [X20 + 0x610]
	0x034BF9B4 LDR X21, [X21 + 0x328]
	0x034BF9B8 MOV X19, X0
	0x034BF9BC TBNZ X8, 0x0, 0x34BF9D4
	0x034BF9C0 ADRP X0, 0xC73000
	0x034BF9C4 LDR X0, [X0 + 0x328]
	0x034BF9C8 BL 0x1C16CF4
	0x034BF9CC MOVZ W8, 0x1
	0x034BF9D0 STRB W8, [X20 + 0x610]
	0x034BF9D4 LDR X0, [X21]
	0x034BF9D8 LDR W8, [X0 + 0xE0]
	0x034BF9DC CBNZ W8, 0x34BF9E4
	0x034BF9E0 BL 0x1C16DFC
	0x034BF9E4 MOV X0, X19
	0x034BF9E8 BL 0x34BF9F8
	0x034BF9EC LDP X20, X19, [X31 + 0x10]
	0x034BF9F0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1272]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 164
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1272], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_AchievementProgressArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034BF9F4 B 0x34B3B78
	0x034BF9F8 SUB X31, X31, 0x50
	0x034BF9FC STR X30, [X31 + 0x30]
	0x034BFA00 STP X20, X19, [X31 + 0x40]
	0x034BFA04 ADRP X20, 0xF1F000
	0x034BFA08 LDR X8, [X20 + 0x618]
	0x034BFA0C MOV X19, X0
	0x034BFA10 CBNZ X8, 0x34BFA5C
	0x034BFA14 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BFA18 LDR V0, [X12 + 0x5B8]
	0x034BFA1C ADRP X8, 0xFFFFFFFFFD654000
	0x034BFA20 ADRP X10, 0xFFFFFFFFFD663000
	0x034BFA24 ADD X8, X8, 0xDD2
	0x034BFA28 MOVZ W9, 0x11
	0x034BFA2C ADD X10, X10, 0x3B5
	0x034BFA30 MOVZ W11, 0x1E
	0x034BFA34 MOVZ W13, 0x8
	0x034BFA38 ADD X0, X31, 0x0
	0x034BFA3C STP X8, X9, [X31]
	0x034BFA40 STP X10, X11, [X31 + 0x10]
	0x034BFA44 STR W13, [X31 + 0x28]
	0x034BFA48 STR D0, [X31 + 0x20]
	0x034BFA4C STRB W31, [X31 + 0x2C]
	0x034BFA50 BL 0x1C1729C
	0x034BFA54 MOV X8, X0
	0x034BFA58 STR X0, [X20 + 0x618]
	0x034BFA5C MOV X0, X19
	0x034BFA60 BLR X8
	0x034BFA64 LDP X20, X19, [X31 + 0x40]
	0x034BFA68 LDR X30, [X31 + 0x30]
	0x034BFA6C ADD X31, X31, 0x50
	0x034BFA70 RET
	0x034BFA74 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF20000
	007 Move X8, [X21+1280]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43847680
	013 Move V0, [X12+1464]
	014 Move X8, -43692032
	015 Move X10, -43827200
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1779
	019 Move W11, 39
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1280], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_AchievementProgressArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034BFA78 STR X30, [X31 + 0x30]
	0x034BFA7C STP X20, X19, [X31 + 0x40]
	0x034BFA80 ADRP X20, 0xF1F000
	0x034BFA84 LDR X8, [X20 + 0x620]
	0x034BFA88 MOV X19, X0
	0x034BFA8C CBNZ X8, 0x34BFAD8
	0x034BFA90 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BFA94 LDR V0, [X12 + 0x5B8]
	0x034BFA98 ADRP X8, 0xFFFFFFFFFD654000
	0x034BFA9C ADRP X10, 0xFFFFFFFFFD667000
	0x034BFAA0 ADD X8, X8, 0xDD2
	0x034BFAA4 MOVZ W9, 0x11
	0x034BFAA8 ADD X10, X10, 0x2E7
	0x034BFAAC MOVZ W11, 0x1B
	0x034BFAB0 MOVZ W13, 0x8
	0x034BFAB4 ADD X0, X31, 0x0
	0x034BFAB8 STP X8, X9, [X31]
	0x034BFABC STP X10, X11, [X31 + 0x10]
	0x034BFAC0 STR W13, [X31 + 0x28]
	0x034BFAC4 STR D0, [X31 + 0x20]
	0x034BFAC8 STRB W31, [X31 + 0x2C]
	0x034BFACC BL 0x1C1729C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF20000
	006 Move X21, 0xC74000
	007 Move W8, [X20+1288]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC74000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1288], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AchievementProgressArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034BFAD0 MOV X8, X0
	0x034BFAD4 STR X0, [X20 + 0x620]
	0x034BFAD8 MOV X0, X19
	0x034BFADC BLR X8
	0x034BFAE0 LDP X20, X19, [X31 + 0x40]
	0x034BFAE4 LDR X30, [X31 + 0x30]
	0x034BFAE8 ADD X31, X31, 0x50
	0x034BFAEC RET
	0x034BFAF0 STP X30, X21, [X31 - 0x20]!
	0x034BFAF4 STP X20, X19, [X31 + 0x10]
	0x034BFAF8 ADRP X20, 0xF1F000
	0x034BFAFC ADRP X21, 0xC73000
	0x034BFB00 LDRB W8, [X20 + 0x628]
	0x034BFB04 LDR X21, [X21 + 0x328]
	0x034BFB08 MOV X19, X0
	0x034BFB0C TBNZ X8, 0x0, 0x34BFB24
	0x034BFB10 ADRP X0, 0xC73000
	0x034BFB14 LDR X0, [X0 + 0x328]
	0x034BFB18 BL 0x1C16CF4
	0x034BFB1C MOVZ W8, 0x1
	0x034BFB20 STRB W8, [X20 + 0x628]
	0x034BFB24 LDR X0, [X21]
	0x034BFB28 LDR W8, [X0 + 0xE0]
	0x034BFB2C CBNZ W8, 0x34BFB34
	0x034BFB30 BL 0x1C16DFC
	0x034BFB34 MOV X0, X19
	0x034BFB38 BL 0x34BFB48
	0x034BFB3C LDP X20, X19, [X31 + 0x10]
	0x034BFB40 LDP X30, X21, [X31], #0x20
	0x034BFB44 B 0x34B3B78
	0x034BFB48 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1296]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43827200
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1819
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1296], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_AchievementProgressArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034BFB4C STR X30, [X31 + 0x30]
	0x034BFB50 STP X20, X19, [X31 + 0x40]
	0x034BFB54 ADRP X20, 0xF1F000
	0x034BFB58 LDR X8, [X20 + 0x630]
	0x034BFB5C MOV X19, X0
	0x034BFB60 CBNZ X8, 0x34BFBAC
	0x034BFB64 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BFB68 LDR V0, [X12 + 0x5B8]
	0x034BFB6C ADRP X8, 0xFFFFFFFFFD654000
	0x034BFB70 ADRP X10, 0xFFFFFFFFFD66C000
	0x034BFB74 ADD X8, X8, 0xDD2
	0x034BFB78 MOVZ W9, 0x11
	0x034BFB7C ADD X10, X10, 0xC07
	0x034BFB80 MOVZ W11, 0x1D
	0x034BFB84 MOVZ W13, 0x8
	0x034BFB88 ADD X0, X31, 0x0
	0x034BFB8C STP X8, X9, [X31]
	0x034BFB90 STP X10, X11, [X31 + 0x10]
	0x034BFB94 STR W13, [X31 + 0x28]
	0x034BFB98 STR D0, [X31 + 0x20]
	0x034BFB9C STRB W31, [X31 + 0x2C]
	0x034BFBA0 BL 0x1C1729C
	0x034BFBA4 MOV X8, X0
	0x034BFBA8 STR X0, [X20 + 0x630]
	0x034BFBAC MOV X0, X19
	0x034BFBB0 BLR X8
	0x034BFBB4 LDP X20, X19, [X31 + 0x40]
	0x034BFBB8 LDR X30, [X31 + 0x30]
	0x034BFBBC ADD X31, X31, 0x50
	0x034BFBC0 RET
	0x034BFBC4 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1304]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43786240
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1866
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1304], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_AchievementProgressArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034BFBC8 STP X20, X19, [X31 + 0x10]
	0x034BFBCC ADRP X20, 0xF1F000
	0x034BFBD0 ADRP X21, 0xC73000
	0x034BFBD4 LDRB W8, [X20 + 0x638]
	0x034BFBD8 LDR X21, [X21 + 0x328]
	0x034BFBDC MOV X19, X0
	0x034BFBE0 TBNZ X8, 0x0, 0x34BFBF8
	0x034BFBE4 ADRP X0, 0xC73000
	0x034BFBE8 LDR X0, [X0 + 0x328]
	0x034BFBEC BL 0x1C16CF4
	0x034BFBF0 MOVZ W8, 0x1
	0x034BFBF4 STRB W8, [X20 + 0x638]
	0x034BFBF8 LDR X0, [X21]
	0x034BFBFC LDR W8, [X0 + 0xE0]
	0x034BFC00 CBNZ W8, 0x34BFC08
	0x034BFC04 BL 0x1C16DFC
	0x034BFC08 MOV X0, X19
	0x034BFC0C BL 0x34BFC1C
	0x034BFC10 LDP X20, X19, [X31 + 0x10]
	0x034BFC14 LDP X30, X21, [X31], #0x20
	0x034BFC18 B 0x34B3B78
	0x034BFC1C SUB X31, X31, 0x50
	0x034BFC20 STR X30, [X31 + 0x30]
	0x034BFC24 STP X20, X19, [X31 + 0x40]
	0x034BFC28 ADRP X20, 0xF1F000
	0x034BFC2C LDR X8, [X20 + 0x640]
	0x034BFC30 MOV X19, X0
	0x034BFC34 CBNZ X8, 0x34BFC80
	0x034BFC38 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BFC3C LDR V0, [X12 + 0x5B8]
	0x034BFC40 ADRP X8, 0xFFFFFFFFFD654000
	0x034BFC44 ADRP X10, 0xFFFFFFFFFD668000
	0x034BFC48 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1312]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 727
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1312], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_AchievementUpdate_GetJustUnlocked(System.IntPtr obj)

Disassembly:
	0x034BFC4C MOVZ W9, 0x11
	0x034BFC50 ADD X10, X10, 0xD21
	0x034BFC54 MOVZ W11, 0x22
	0x034BFC58 MOVZ W13, 0x8
	0x034BFC5C ADD X0, X31, 0x0
	0x034BFC60 STP X8, X9, [X31]
	0x034BFC64 STP X10, X11, [X31 + 0x10]
	0x034BFC68 STR W13, [X31 + 0x28]
	0x034BFC6C STR D0, [X31 + 0x20]
	0x034BFC70 STRB W31, [X31 + 0x2C]
	0x034BFC74 BL 0x1C1729C
	0x034BFC78 MOV X8, X0
	0x034BFC7C STR X0, [X20 + 0x640]
	0x034BFC80 MOV X0, X19
	0x034BFC84 BLR X8
	0x034BFC88 LDP X20, X19, [X31 + 0x40]
	0x034BFC8C LDR X30, [X31 + 0x30]
	0x034BFC90 ADD X31, X31, 0x50
	0x034BFC94 RET
	0x034BFC98 STP X30, X21, [X31 - 0x20]!
	0x034BFC9C STP X20, X19, [X31 + 0x10]
	0x034BFCA0 ADRP X20, 0xF1F000
	0x034BFCA4 ADRP X21, 0xC73000
	0x034BFCA8 LDRB W8, [X20 + 0x648]
	0x034BFCAC LDR X21, [X21 + 0x328]
	0x034BFCB0 MOV X19, X0
	0x034BFCB4 TBNZ X8, 0x0, 0x34BFCCC
	0x034BFCB8 ADRP X0, 0xC73000
	0x034BFCBC LDR X0, [X0 + 0x328]
	0x034BFCC0 BL 0x1C16CF4
	0x034BFCC4 MOVZ W8, 0x1
	0x034BFCC8 STRB W8, [X20 + 0x648]
	0x034BFCCC LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1320]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43810816
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1676
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1320], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_AchievementUpdate_GetName(System.IntPtr obj)

Disassembly:
	0x034BFCD0 LDR W8, [X0 + 0xE0]
	0x034BFCD4 CBNZ W8, 0x34BFCDC
	0x034BFCD8 BL 0x1C16DFC
	0x034BFCDC MOV X0, X19
	0x034BFCE0 BL 0x34BFCF0
	0x034BFCE4 LDP X20, X19, [X31 + 0x10]
	0x034BFCE8 LDP X30, X21, [X31], #0x20
	0x034BFCEC B 0x34B3B78
	0x034BFCF0 SUB X31, X31, 0x50
	0x034BFCF4 STR X30, [X31 + 0x30]
	0x034BFCF8 STP X20, X19, [X31 + 0x40]
	0x034BFCFC ADRP X20, 0xF1F000
	0x034BFD00 LDR X8, [X20 + 0x650]
	0x034BFD04 MOV X19, X0
	0x034BFD08 CBNZ X8, 0x34BFD54
	0x034BFD0C ADRP X12, 0xFFFFFFFFFD62E000
	0x034BFD10 LDR V0, [X12 + 0x5B8]
	0x034BFD14 ADRP X8, 0xFFFFFFFFFD654000
	0x034BFD18 ADRP X10, 0xFFFFFFFFFD667000
	0x034BFD1C ADD X8, X8, 0xDD2
	0x034BFD20 MOVZ W9, 0x11
	0x034BFD24 ADD X10, X10, 0x303

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF20000
	006 Move X21, 0xC74000
	007 Move W8, [X20+1328]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC74000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1328], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AchievementUpdate_GetName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AchievementUpdate_GetName_Native(System.IntPtr obj)

Disassembly:
	0x034BFD28 MOVZ W11, 0x1C
	0x034BFD2C MOVZ W13, 0x8
	0x034BFD30 ADD X0, X31, 0x0
	0x034BFD34 STP X8, X9, [X31]
	0x034BFD38 STP X10, X11, [X31 + 0x10]
	0x034BFD3C STR W13, [X31 + 0x28]
	0x034BFD40 STR D0, [X31 + 0x20]
	0x034BFD44 STRB W31, [X31 + 0x2C]
	0x034BFD48 BL 0x1C1729C
	0x034BFD4C MOV X8, X0
	0x034BFD50 STR X0, [X20 + 0x650]
	0x034BFD54 MOV X0, X19
	0x034BFD58 BLR X8
	0x034BFD5C LDP X20, X19, [X31 + 0x40]
	0x034BFD60 LDR X30, [X31 + 0x30]
	0x034BFD64 ADD X31, X31, 0x50
	0x034BFD68 RET
	0x034BFD6C STP X30, X21, [X31 - 0x20]!
	0x034BFD70 STP X20, X19, [X31 + 0x10]
	0x034BFD74 ADRP X20, 0xF1F000
	0x034BFD78 ADRP X21, 0xC73000
	0x034BFD7C LDRB W8, [X20 + 0x658]
	0x034BFD80 LDR X21, [X21 + 0x328]
	0x034BFD84 MOV X19, X0
	0x034BFD88 TBNZ X8, 0x0, 0x34BFDA0
	0x034BFD8C ADRP X0, 0xC73000
	0x034BFD90 LDR X0, [X0 + 0x328]
	0x034BFD94 BL 0x1C16CF4
	0x034BFD98 MOVZ W8, 0x1
	0x034BFD9C STRB W8, [X20 + 0x658]
	0x034BFDA0 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1336]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2066
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1336], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_AppDownloadProgressResult_GetDownloadBytes(System.IntPtr obj)

Disassembly:
	0x034BFDA4 LDR W8, [X0 + 0xE0]
	0x034BFDA8 CBNZ W8, 0x34BFDB0
	0x034BFDAC BL 0x1C16DFC
	0x034BFDB0 MOV X0, X19
	0x034BFDB4 BL 0x34BFDC4
	0x034BFDB8 LDP X20, X19, [X31 + 0x10]
	0x034BFDBC LDP X30, X21, [X31], #0x20
	0x034BFDC0 B 0x34B3B78
	0x034BFDC4 SUB X31, X31, 0x50
	0x034BFDC8 STR X30, [X31 + 0x30]
	0x034BFDCC STP X20, X19, [X31 + 0x40]
	0x034BFDD0 ADRP X20, 0xF1F000
	0x034BFDD4 LDR X8, [X20 + 0x660]
	0x034BFDD8 MOV X19, X0
	0x034BFDDC CBNZ X8, 0x34BFE28
	0x034BFDE0 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BFDE4 LDR V0, [X12 + 0x5B8]
	0x034BFDE8 ADRP X8, 0xFFFFFFFFFD654000
	0x034BFDEC ADRP X10, 0xFFFFFFFFFD656000
	0x034BFDF0 ADD X8, X8, 0xDD2
	0x034BFDF4 MOVZ W9, 0x11
	0x034BFDF8 ADD X10, X10, 0xC8C
	0x034BFDFC MOVZ W11, 0x1D
	0x034BFE00 MOVZ W13, 0x8
	0x034BFE04 ADD X0, X31, 0x0
	0x034BFE08 STP X8, X9, [X31]
	0x034BFE0C STP X10, X11, [X31 + 0x10]
	0x034BFE10 STR W13, [X31 + 0x28]
	0x034BFE14 STR D0, [X31 + 0x20]
	0x034BFE18 STRB W31, [X31 + 0x2C]
	0x034BFE1C BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1344]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43802624
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1662
	017 Move W11, 46
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1344], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_AppDownloadProgressResult_GetDownloadedBytes(System.IntPtr obj)

Disassembly:
	0x034BFE20 MOV X8, X0
	0x034BFE24 STR X0, [X20 + 0x660]
	0x034BFE28 MOV X0, X19
	0x034BFE2C BLR X8
	0x034BFE30 LDP X20, X19, [X31 + 0x40]
	0x034BFE34 LDR X30, [X31 + 0x30]
	0x034BFE38 ADD X31, X31, 0x50
	0x034BFE3C RET
	0x034BFE40 SUB X31, X31, 0x50
	0x034BFE44 STR X30, [X31 + 0x30]
	0x034BFE48 STP X20, X19, [X31 + 0x40]
	0x034BFE4C ADRP X20, 0xF1F000
	0x034BFE50 LDR X8, [X20 + 0x668]
	0x034BFE54 MOV X19, X0
	0x034BFE58 CBNZ X8, 0x34BFEA4
	0x034BFE5C ADRP X12, 0xFFFFFFFFFD62E000
	0x034BFE60 LDR V0, [X12 + 0x5B8]
	0x034BFE64 ADRP X8, 0xFFFFFFFFFD654000
	0x034BFE68 ADRP X10, 0xFFFFFFFFFD663000
	0x034BFE6C ADD X8, X8, 0xDD2
	0x034BFE70 MOVZ W9, 0x11
	0x034BFE74 ADD X10, X10, 0x3D4
	0x034BFE78 MOVZ W11, 0x1C
	0x034BFE7C MOVZ W13, 0x8
	0x034BFE80 ADD X0, X31, 0x0
	0x034BFE84 STP X8, X9, [X31]
	0x034BFE88 STP X10, X11, [X31 + 0x10]
	0x034BFE8C STR W13, [X31 + 0x28]
	0x034BFE90 STR D0, [X31 + 0x20]
	0x034BFE94 STRB W31, [X31 + 0x2C]
	0x034BFE98 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1352]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 768
	017 Move W11, 48
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1352], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.AppStatus ovr_AppDownloadProgressResult_GetStatusCode(System.IntPtr obj)

Disassembly:
	0x034BFE9C MOV X8, X0
	0x034BFEA0 STR X0, [X20 + 0x668]
	0x034BFEA4 MOV X0, X19
	0x034BFEA8 BLR X8
	0x034BFEAC LDP X20, X19, [X31 + 0x40]
	0x034BFEB0 LDR X30, [X31 + 0x30]
	0x034BFEB4 ADD X31, X31, 0x50
	0x034BFEB8 RET
	0x034BFEBC STP X30, X21, [X31 - 0x20]!
	0x034BFEC0 STP X20, X19, [X31 + 0x10]
	0x034BFEC4 ADRP X20, 0xF1F000
	0x034BFEC8 ADRP X21, 0xC73000
	0x034BFECC LDRB W8, [X20 + 0x670]
	0x034BFED0 LDR X21, [X21 + 0x328]
	0x034BFED4 MOV X19, X0
	0x034BFED8 TBNZ X8, 0x0, 0x34BFEF0
	0x034BFEDC ADRP X0, 0xC73000
	0x034BFEE0 LDR X0, [X0 + 0x328]
	0x034BFEE4 BL 0x1C16CF4
	0x034BFEE8 MOVZ W8, 0x1
	0x034BFEEC STRB W8, [X20 + 0x670]
	0x034BFEF0 LDR X0, [X21]
	0x034BFEF4 LDR W8, [X0 + 0xE0]
	0x034BFEF8 CBNZ W8, 0x34BFF00
	0x034BFEFC BL 0x1C16DFC
	0x034BFF00 MOV X0, X19
	0x034BFF04 BL 0x34BFF14
	0x034BFF08 LDP X20, X19, [X31 + 0x10]
	0x034BFF0C LDP X30, X21, [X31], #0x20
	0x034BFF10 B 0x34B3B78
	0x034BFF14 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1360]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43737088
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1230
	017 Move W11, 43
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1360], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.AppInstallResult ovr_AppDownloadResult_GetAppInstallResult(System.IntPtr obj)

Disassembly:
	0x034BFF18 STR X30, [X31 + 0x30]
	0x034BFF1C STP X20, X19, [X31 + 0x40]
	0x034BFF20 ADRP X20, 0xF1F000
	0x034BFF24 LDR X8, [X20 + 0x678]
	0x034BFF28 MOV X19, X0
	0x034BFF2C CBNZ X8, 0x34BFF78
	0x034BFF30 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BFF34 LDR V0, [X12 + 0x5B8]
	0x034BFF38 ADRP X8, 0xFFFFFFFFFD654000
	0x034BFF3C ADRP X10, 0xFFFFFFFFFD641000
	0x034BFF40 ADD X8, X8, 0xDD2
	0x034BFF44 MOVZ W9, 0x11
	0x034BFF48 ADD X10, X10, 0x238
	0x034BFF4C MOVZ W11, 0x1C
	0x034BFF50 MOVZ W13, 0x8
	0x034BFF54 ADD X0, X31, 0x0
	0x034BFF58 STP X8, X9, [X31]
	0x034BFF5C STP X10, X11, [X31 + 0x10]
	0x034BFF60 STR W13, [X31 + 0x28]
	0x034BFF64 STR D0, [X31 + 0x20]
	0x034BFF68 STRB W31, [X31 + 0x2C]
	0x034BFF6C BL 0x1C1729C
	0x034BFF70 MOV X8, X0
	0x034BFF74 STR X0, [X20 + 0x678]
	0x034BFF78 MOV X0, X19
	0x034BFF7C BLR X8
	0x034BFF80 LDP X20, X19, [X31 + 0x40]
	0x034BFF84 LDR X30, [X31 + 0x30]
	0x034BFF88 ADD X31, X31, 0x50
	0x034BFF8C RET
	0x034BFF90 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1368]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43835392
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 673
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1368], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_AppDownloadResult_GetTimestamp(System.IntPtr obj)

Disassembly:
	0x034BFF94 STP X30, X21, [X31 + 0x30]
	0x034BFF98 STP X20, X19, [X31 + 0x40]
	0x034BFF9C ADRP X21, 0xF1F000
	0x034BFFA0 LDR X8, [X21 + 0x680]
	0x034BFFA4 MOV X19, X1
	0x034BFFA8 MOV X20, X0
	0x034BFFAC CBNZ X8, 0x34BFFF8
	0x034BFFB0 ADRP X12, 0xFFFFFFFFFD62E000
	0x034BFFB4 LDR V0, [X12 + 0x5B8]
	0x034BFFB8 ADRP X8, 0xFFFFFFFFFD654000
	0x034BFFBC ADRP X10, 0xFFFFFFFFFD65A000
	0x034BFFC0 ADD X8, X8, 0xDD2
	0x034BFFC4 MOVZ W9, 0x11
	0x034BFFC8 ADD X10, X10, 0xDD3
	0x034BFFCC MOVZ W11, 0x20
	0x034BFFD0 MOVZ W13, 0x10
	0x034BFFD4 ADD X0, X31, 0x0
	0x034BFFD8 STP X8, X9, [X31]
	0x034BFFDC STP X10, X11, [X31 + 0x10]
	0x034BFFE0 STR W13, [X31 + 0x28]
	0x034BFFE4 STR D0, [X31 + 0x20]
	0x034BFFE8 STRB W31, [X31 + 0x2C]
	0x034BFFEC BL 0x1C1729C
	0x034BFFF0 MOV X8, X0
	0x034BFFF4 STR X0, [X21 + 0x680]
	0x034BFFF8 MOV X0, X20
	0x034BFFFC MOV X1, X19
	0x034C0000 BLR X8
	0x034C0004 LDP X20, X19, [X31 + 0x40]
	0x034C0008 LDP X30, X21, [X31 + 0x30]
	0x034C000C ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF20000
	006 Move X8, [X20+1376]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43847680
	011 Move V0, [X12+1464]
	012 Move X8, -43692032
	013 Move X10, -43601920
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3383
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1376], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Application_GetID(System.IntPtr obj)

Disassembly:
	0x034C0010 RET
	0x034C0014 SUB X31, X31, 0x50
	0x034C0018 STR X30, [X31 + 0x30]
	0x034C001C STP X20, X19, [X31 + 0x40]
	0x034C0020 ADRP X20, 0xF1E000
	0x034C0024 LDR X8, [X20 + 0x688]
	0x034C0028 MOV X19, X0
	0x034C002C CBNZ X8, 0x34C0078
	0x034C0030 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0034 LDR V0, [X12 + 0x5B8]
	0x034C0038 ADRP X8, 0xFFFFFFFFFD653000
	0x034C003C ADRP X10, 0xFFFFFFFFFD657000
	0x034C0040 ADD X8, X8, 0xDD2
	0x034C0044 MOVZ W9, 0x11
	0x034C0048 ADD X10, X10, 0xD7C
	0x034C004C MOVZ W11, 0x1D
	0x034C0050 MOVZ W13, 0x8
	0x034C0054 ADD X0, X31, 0x0
	0x034C0058 STP X8, X9, [X31]
	0x034C005C STP X10, X11, [X31 + 0x10]
	0x034C0060 STR W13, [X31 + 0x28]
	0x034C0064 STR D0, [X31 + 0x20]
	0x034C0068 STRB W31, [X31 + 0x2C]
	0x034C006C BL 0x1C1729C
	0x034C0070 MOV X8, X0
	0x034C0074 STR X0, [X20 + 0x688]
	0x034C0078 MOV X0, X19
	0x034C007C BLR X8
	0x034C0080 LDP X20, X19, [X31 + 0x40]
	0x034C0084 LDR X30, [X31 + 0x30]
	0x034C0088 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1384]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43741184
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1274
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1384], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_ApplicationInvite_GetDestination(System.IntPtr obj)

Disassembly:
	0x034C008C RET
	0x034C0090 SUB X31, X31, 0x50
	0x034C0094 STR X30, [X31 + 0x30]
	0x034C0098 STP X20, X19, [X31 + 0x40]
	0x034C009C ADRP X20, 0xF1E000
	0x034C00A0 LDR X8, [X20 + 0x690]
	0x034C00A4 MOV X19, X0
	0x034C00A8 CBNZ X8, 0x34C00F4
	0x034C00AC ADRP X12, 0xFFFFFFFFFD62D000
	0x034C00B0 LDR V0, [X12 + 0x5B8]
	0x034C00B4 ADRP X8, 0xFFFFFFFFFD653000
	0x034C00B8 ADRP X10, 0xFFFFFFFFFD644000
	0x034C00BC ADD X8, X8, 0xDD2
	0x034C00C0 MOVZ W9, 0x11
	0x034C00C4 ADD X10, X10, 0x6E2
	0x034C00C8 MOVZ W11, 0x28
	0x034C00CC MOVZ W13, 0x8
	0x034C00D0 ADD X0, X31, 0x0
	0x034C00D4 STP X8, X9, [X31]
	0x034C00D8 STP X10, X11, [X31 + 0x10]
	0x034C00DC STR W13, [X31 + 0x28]
	0x034C00E0 STR D0, [X31 + 0x20]
	0x034C00E4 STRB W31, [X31 + 0x2C]
	0x034C00E8 BL 0x1C1729C
	0x034C00EC MOV X8, X0
	0x034C00F0 STR X0, [X20 + 0x690]
	0x034C00F4 MOV X0, X19
	0x034C00F8 BLR X8
	0x034C00FC LDP X20, X19, [X31 + 0x40]
	0x034C0100 LDR X30, [X31 + 0x30]
	0x034C0104 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1392]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43765760
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 738
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1392], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_ApplicationInvite_GetID(System.IntPtr obj)

Disassembly:
	0x034C0108 RET
	0x034C010C SUB X31, X31, 0x50
	0x034C0110 STR X30, [X31 + 0x30]
	0x034C0114 STP X20, X19, [X31 + 0x40]
	0x034C0118 ADRP X20, 0xF1E000
	0x034C011C LDR X8, [X20 + 0x698]
	0x034C0120 MOV X19, X0
	0x034C0124 CBNZ X8, 0x34C0170
	0x034C0128 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C012C LDR V0, [X12 + 0x5B8]
	0x034C0130 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0134 ADRP X10, 0xFFFFFFFFFD638000
	0x034C0138 ADD X8, X8, 0xDD2
	0x034C013C MOVZ W9, 0x11
	0x034C0140 ADD X10, X10, 0x6AD
	0x034C0144 MOVZ W11, 0x24
	0x034C0148 MOVZ W13, 0x8
	0x034C014C ADD X0, X31, 0x0
	0x034C0150 STP X8, X9, [X31]
	0x034C0154 STP X10, X11, [X31 + 0x10]
	0x034C0158 STR W13, [X31 + 0x28]
	0x034C015C STR D0, [X31 + 0x20]
	0x034C0160 STRB W31, [X31 + 0x2C]
	0x034C0164 BL 0x1C1729C
	0x034C0168 MOV X8, X0
	0x034C016C STR X0, [X20 + 0x698]
	0x034C0170 MOV X0, X19
	0x034C0174 BLR X8
	0x034C0178 LDP X20, X19, [X31 + 0x40]
	0x034C017C LDR X30, [X31 + 0x30]
	0x034C0180 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1400]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43606016
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3418
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1400], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_ApplicationInvite_GetIsActive(System.IntPtr obj)

Disassembly:
	0x034C0184 RET
	0x034C0188 STP X30, X21, [X31 - 0x20]!
	0x034C018C STP X20, X19, [X31 + 0x10]
	0x034C0190 ADRP X20, 0xF1E000
	0x034C0194 ADRP X21, 0xC72000
	0x034C0198 LDRB W8, [X20 + 0x6A0]
	0x034C019C LDR X21, [X21 + 0x328]
	0x034C01A0 MOV X19, X0
	0x034C01A4 TBNZ X8, 0x0, 0x34C01BC
	0x034C01A8 ADRP X0, 0xC72000
	0x034C01AC LDR X0, [X0 + 0x328]
	0x034C01B0 BL 0x1C16CF4
	0x034C01B4 MOVZ W8, 0x1
	0x034C01B8 STRB W8, [X20 + 0x6A0]
	0x034C01BC LDR X0, [X21]
	0x034C01C0 LDR W8, [X0 + 0xE0]
	0x034C01C4 CBNZ W8, 0x34C01CC
	0x034C01C8 BL 0x1C16DFC
	0x034C01CC MOV X0, X19
	0x034C01D0 BL 0x34C01E0
	0x034C01D4 LDP X20, X19, [X31 + 0x10]
	0x034C01D8 LDP X30, X21, [X31], #0x20
	0x034C01DC B 0x34B3B78
	0x034C01E0 SUB X31, X31, 0x50
	0x034C01E4 STR X30, [X31 + 0x30]
	0x034C01E8 STP X20, X19, [X31 + 0x40]
	0x034C01EC ADRP X20, 0xF1E000
	0x034C01F0 LDR X8, [X20 + 0x6A8]
	0x034C01F4 MOV X19, X0
	0x034C01F8 CBNZ X8, 0x34C0244
	0x034C01FC ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0200 LDR V0, [X12 + 0x5B8]
	0x034C0204 ADRP X8, 0xFFFFFFFFFD653000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1408]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43597824
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3045
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1408], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_ApplicationInvite_GetLobbySessionId(System.IntPtr obj)

Disassembly:
	0x034C0208 ADRP X10, 0xFFFFFFFFFD65C000
	0x034C020C ADD X8, X8, 0xDD2
	0x034C0210 MOVZ W9, 0x11
	0x034C0214 ADD X10, X10, 0x200
	0x034C0218 MOVZ W11, 0x25
	0x034C021C MOVZ W13, 0x8
	0x034C0220 ADD X0, X31, 0x0
	0x034C0224 STP X8, X9, [X31]
	0x034C0228 STP X10, X11, [X31 + 0x10]
	0x034C022C STR W13, [X31 + 0x28]
	0x034C0230 STR D0, [X31 + 0x20]
	0x034C0234 STRB W31, [X31 + 0x2C]
	0x034C0238 BL 0x1C1729C
	0x034C023C MOV X8, X0
	0x034C0240 STR X0, [X20 + 0x6A8]
	0x034C0244 MOV X0, X19
	0x034C0248 BLR X8
	0x034C024C LDP X20, X19, [X31 + 0x40]
	0x034C0250 LDR X30, [X31 + 0x30]
	0x034C0254 ADD X31, X31, 0x50
	0x034C0258 RET
	0x034C025C SUB X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1416]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1416], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ApplicationInvite_GetLobbySessionId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ApplicationInvite_GetLobbySessionId_Native(System.IntPtr obj)

Disassembly:
	0x034C0260 STR X30, [X31 + 0x30]
	0x034C0264 STP X20, X19, [X31 + 0x40]
	0x034C0268 ADRP X20, 0xF1E000
	0x034C026C LDR X8, [X20 + 0x6B0]
	0x034C0270 MOV X19, X0
	0x034C0274 CBNZ X8, 0x34C02C0
	0x034C0278 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C027C LDR V0, [X12 + 0x5B8]
	0x034C0280 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0284 ADRP X10, 0xFFFFFFFFFD648000
	0x034C0288 ADD X8, X8, 0xDD2
	0x034C028C MOVZ W9, 0x11
	0x034C0290 ADD X10, X10, 0x510
	0x034C0294 MOVZ W11, 0x24
	0x034C0298 MOVZ W13, 0x8
	0x034C029C ADD X0, X31, 0x0
	0x034C02A0 STP X8, X9, [X31]
	0x034C02A4 STP X10, X11, [X31 + 0x10]
	0x034C02A8 STR W13, [X31 + 0x28]
	0x034C02AC STR D0, [X31 + 0x20]
	0x034C02B0 STRB W31, [X31 + 0x2C]
	0x034C02B4 BL 0x1C1729C
	0x034C02B8 MOV X8, X0
	0x034C02BC STR X0, [X20 + 0x6B0]
	0x034C02C0 MOV X0, X19
	0x034C02C4 BLR X8
	0x034C02C8 LDP X20, X19, [X31 + 0x40]
	0x034C02CC LDR X30, [X31 + 0x30]
	0x034C02D0 CMP W0, 0x0
	0x034C02D4 CSET W0, NE
	0x034C02D8 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1424]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1859
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1424], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_ApplicationInvite_GetMatchSessionId(System.IntPtr obj)

Disassembly:
	0x034C02DC RET
	0x034C02E0 SUB X31, X31, 0x50
	0x034C02E4 STR X30, [X31 + 0x30]
	0x034C02E8 STP X20, X19, [X31 + 0x40]
	0x034C02EC ADRP X20, 0xF1E000
	0x034C02F0 LDR X8, [X20 + 0x6B8]
	0x034C02F4 MOV X19, X0
	0x034C02F8 CBNZ X8, 0x34C0344
	0x034C02FC ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0300 LDR V0, [X12 + 0x5B8]
	0x034C0304 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0308 ADRP X10, 0xFFFFFFFFFD662000
	0x034C030C ADD X8, X8, 0xDD2
	0x034C0310 MOVZ W9, 0x11
	0x034C0314 ADD X10, X10, 0x3F1
	0x034C0318 MOVZ W11, 0x30
	0x034C031C MOVZ W13, 0x8
	0x034C0320 ADD X0, X31, 0x0
	0x034C0324 STP X8, X9, [X31]
	0x034C0328 STP X10, X11, [X31 + 0x10]
	0x034C032C STR W13, [X31 + 0x28]
	0x034C0330 STR D0, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1432]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1432], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ApplicationInvite_GetMatchSessionId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ApplicationInvite_GetMatchSessionId_Native(System.IntPtr obj)

Disassembly:
	0x034C0334 STRB W31, [X31 + 0x2C]
	0x034C0338 BL 0x1C1729C
	0x034C033C MOV X8, X0
	0x034C0340 STR X0, [X20 + 0x6B8]
	0x034C0344 MOV X0, X19
	0x034C0348 BLR X8
	0x034C034C LDP X20, X19, [X31 + 0x40]
	0x034C0350 LDR X30, [X31 + 0x30]
	0x034C0354 ADD X31, X31, 0x50
	0x034C0358 RET
	0x034C035C SUB X31, X31, 0x50
	0x034C0360 STR X30, [X31 + 0x30]
	0x034C0364 STP X20, X19, [X31 + 0x40]
	0x034C0368 ADRP X20, 0xF1E000
	0x034C036C LDR X8, [X20 + 0x6C0]
	0x034C0370 MOV X19, X0
	0x034C0374 CBNZ X8, 0x34C03C0
	0x034C0378 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C037C LDR V0, [X12 + 0x5B8]
	0x034C0380 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0384 ADRP X10, 0xFFFFFFFFFD662000
	0x034C0388 ADD X8, X8, 0xDD2
	0x034C038C MOVZ W9, 0x11
	0x034C0390 ADD X10, X10, 0x422
	0x034C0394 MOVZ W11, 0x2C
	0x034C0398 MOVZ W13, 0x8
	0x034C039C ADD X0, X31, 0x0
	0x034C03A0 STP X8, X9, [X31]
	0x034C03A4 STP X10, X11, [X31 + 0x10]
	0x034C03A8 STR W13, [X31 + 0x28]
	0x034C03AC STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1440]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43671552
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3462
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1440], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_ApplicationInvite_GetRecipient(System.IntPtr obj)

Disassembly:
	0x034C03B0 STRB W31, [X31 + 0x2C]
	0x034C03B4 BL 0x1C1729C
	0x034C03B8 MOV X8, X0
	0x034C03BC STR X0, [X20 + 0x6C0]
	0x034C03C0 MOV X0, X19
	0x034C03C4 BLR X8
	0x034C03C8 LDP X20, X19, [X31 + 0x40]
	0x034C03CC LDR X30, [X31 + 0x30]
	0x034C03D0 ADD X31, X31, 0x50
	0x034C03D4 RET
	0x034C03D8 STP X30, X21, [X31 - 0x20]!
	0x034C03DC STP X20, X19, [X31 + 0x10]
	0x034C03E0 ADRP X20, 0xF1E000
	0x034C03E4 ADRP X21, 0xC72000
	0x034C03E8 LDRB W8, [X20 + 0x6C8]
	0x034C03EC LDR X21, [X21 + 0x328]
	0x034C03F0 MOV X19, X0
	0x034C03F4 TBNZ X8, 0x0, 0x34C040C
	0x034C03F8 ADRP X0, 0xC72000
	0x034C03FC LDR X0, [X0 + 0x328]
	0x034C0400 BL 0x1C16CF4
	0x034C0404 MOVZ W8, 0x1
	0x034C0408 STRB W8, [X20 + 0x6C8]
	0x034C040C LDR X0, [X21]
	0x034C0410 LDR W8, [X0 + 0xE0]
	0x034C0414 CBNZ W8, 0x34C041C
	0x034C0418 BL 0x1C16DFC
	0x034C041C MOV X0, X19
	0x034C0420 BL 0x34C0430
	0x034C0424 LDP X20, X19, [X31 + 0x10]
	0x034C0428 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1448]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1899
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1448], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_ApplicationInviteArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C042C B 0x34B3B78
	0x034C0430 SUB X31, X31, 0x50
	0x034C0434 STR X30, [X31 + 0x30]
	0x034C0438 STP X20, X19, [X31 + 0x40]
	0x034C043C ADRP X20, 0xF1E000
	0x034C0440 LDR X8, [X20 + 0x6D0]
	0x034C0444 MOV X19, X0
	0x034C0448 CBNZ X8, 0x34C0494
	0x034C044C ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0450 LDR V0, [X12 + 0x5B8]
	0x034C0454 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0458 ADRP X10, 0xFFFFFFFFFD662000
	0x034C045C ADD X8, X8, 0xDD2
	0x034C0460 MOVZ W9, 0x11
	0x034C0464 ADD X10, X10, 0x44F
	0x034C0468 MOVZ W11, 0x2D
	0x034C046C MOVZ W13, 0x8
	0x034C0470 ADD X0, X31, 0x0
	0x034C0474 STP X8, X9, [X31]
	0x034C0478 STP X10, X11, [X31 + 0x10]
	0x034C047C STR W13, [X31 + 0x28]
	0x034C0480 STR D0, [X31 + 0x20]
	0x034C0484 STRB W31, [X31 + 0x2C]
	0x034C0488 BL 0x1C1729C
	0x034C048C MOV X8, X0
	0x034C0490 STR X0, [X20 + 0x6D0]
	0x034C0494 MOV X0, X19
	0x034C0498 BLR X8
	0x034C049C LDP X20, X19, [X31 + 0x40]
	0x034C04A0 LDR X30, [X31 + 0x30]
	0x034C04A4 ADD X31, X31, 0x50
	0x034C04A8 RET
	0x034C04AC SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1F000
	007 Move X8, [X21+1456]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43851776
	013 Move V0, [X12+1464]
	014 Move X8, -43696128
	015 Move X10, -43614208
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3323
	019 Move W11, 37
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1456], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_ApplicationInviteArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034C04B0 STR X30, [X31 + 0x30]
	0x034C04B4 STP X20, X19, [X31 + 0x40]
	0x034C04B8 ADRP X20, 0xF1E000
	0x034C04BC LDR X8, [X20 + 0x6D8]
	0x034C04C0 MOV X19, X0
	0x034C04C4 CBNZ X8, 0x34C0510
	0x034C04C8 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C04CC LDR V0, [X12 + 0x5B8]
	0x034C04D0 ADRP X8, 0xFFFFFFFFFD653000
	0x034C04D4 ADRP X10, 0xFFFFFFFFFD630000
	0x034C04D8 ADD X8, X8, 0xDD2
	0x034C04DC MOVZ W9, 0x11
	0x034C04E0 ADD X10, X10, 0x2CB
	0x034C04E4 MOVZ W11, 0x2C
	0x034C04E8 MOVZ W13, 0x8
	0x034C04EC ADD X0, X31, 0x0
	0x034C04F0 STP X8, X9, [X31]
	0x034C04F4 STP X10, X11, [X31 + 0x10]
	0x034C04F8 STR W13, [X31 + 0x28]
	0x034C04FC STR D0, [X31 + 0x20]
	0x034C0500 STRB W31, [X31 + 0x2C]
	0x034C0504 BL 0x1C1729C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1464]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1464], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ApplicationInviteArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ApplicationInviteArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C0508 MOV X8, X0
	0x034C050C STR X0, [X20 + 0x6D8]
	0x034C0510 MOV X0, X19
	0x034C0514 BLR X8
	0x034C0518 LDP X20, X19, [X31 + 0x40]
	0x034C051C LDR X30, [X31 + 0x30]
	0x034C0520 CMP W0, 0x0
	0x034C0524 CSET W0, NE
	0x034C0528 ADD X31, X31, 0x50
	0x034C052C RET
	0x034C0530 SUB X31, X31, 0x50
	0x034C0534 STR X30, [X31 + 0x30]
	0x034C0538 STP X20, X19, [X31 + 0x40]
	0x034C053C ADRP X20, 0xF1E000
	0x034C0540 LDR X8, [X20 + 0x6E0]
	0x034C0544 MOV X19, X0
	0x034C0548 CBNZ X8, 0x34C0594
	0x034C054C ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0550 LDR V0, [X12 + 0x5B8]
	0x034C0554 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0558 ADRP X10, 0xFFFFFFFFFD662000
	0x034C055C ADD X8, X8, 0xDD2
	0x034C0560 MOVZ W9, 0x11
	0x034C0564 ADD X10, X10, 0x47D
	0x034C0568 MOVZ W11, 0x26
	0x034C056C MOVZ W13, 0x8
	0x034C0570 ADD X0, X31, 0x0
	0x034C0574 STP X8, X9, [X31]
	0x034C0578 STP X10, X11, [X31 + 0x10]
	0x034C057C STR W13, [X31 + 0x28]
	0x034C0580 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1472]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3098
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1472], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_ApplicationInviteArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C0584 STRB W31, [X31 + 0x2C]
	0x034C0588 BL 0x1C1729C
	0x034C058C MOV X8, X0
	0x034C0590 STR X0, [X20 + 0x6E0]
	0x034C0594 MOV X0, X19
	0x034C0598 BLR X8
	0x034C059C LDP X20, X19, [X31 + 0x40]
	0x034C05A0 LDR X30, [X31 + 0x30]
	0x034C05A4 ADD X31, X31, 0x50
	0x034C05A8 RET
	0x034C05AC STP X30, X21, [X31 - 0x20]!
	0x034C05B0 STP X20, X19, [X31 + 0x10]
	0x034C05B4 ADRP X20, 0xF1E000
	0x034C05B8 ADRP X21, 0xC72000
	0x034C05BC LDRB W8, [X20 + 0x6E8]
	0x034C05C0 LDR X21, [X21 + 0x328]
	0x034C05C4 MOV X19, X0
	0x034C05C8 TBNZ X8, 0x0, 0x34C05E0
	0x034C05CC ADRP X0, 0xC72000
	0x034C05D0 LDR X0, [X0 + 0x328]
	0x034C05D4 BL 0x1C16CF4
	0x034C05D8 MOVZ W8, 0x1
	0x034C05DC STRB W8, [X20 + 0x6E8]
	0x034C05E0 LDR X0, [X21]
	0x034C05E4 LDR W8, [X0 + 0xE0]
	0x034C05E8 CBNZ W8, 0x34C05F0
	0x034C05EC BL 0x1C16DFC
	0x034C05F0 MOV X0, X19
	0x034C05F4 BL 0x34C0604
	0x034C05F8 LDP X20, X19, [X31 + 0x10]
	0x034C05FC LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1480]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 914
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1480], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_ApplicationInviteArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034C0600 B 0x34B3B78
	0x034C0604 SUB X31, X31, 0x50
	0x034C0608 STR X30, [X31 + 0x30]
	0x034C060C STP X20, X19, [X31 + 0x40]
	0x034C0610 ADRP X20, 0xF1E000
	0x034C0614 LDR X8, [X20 + 0x6F0]
	0x034C0618 MOV X19, X0
	0x034C061C CBNZ X8, 0x34C0668
	0x034C0620 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0624 LDR V0, [X12 + 0x5B8]
	0x034C0628 ADRP X8, 0xFFFFFFFFFD653000
	0x034C062C ADRP X10, 0xFFFFFFFFFD642000
	0x034C0630 ADD X8, X8, 0xDD2
	0x034C0634 MOVZ W9, 0x11
	0x034C0638 ADD X10, X10, 0x307
	0x034C063C MOVZ W11, 0x27
	0x034C0640 MOVZ W13, 0x8
	0x034C0644 ADD X0, X31, 0x0
	0x034C0648 STP X8, X9, [X31]
	0x034C064C STP X10, X11, [X31 + 0x10]
	0x034C0650 STR W13, [X31 + 0x28]
	0x034C0654 STR D0, [X31 + 0x20]
	0x034C0658 STRB W31, [X31 + 0x2C]
	0x034C065C BL 0x1C1729C
	0x034C0660 MOV X8, X0
	0x034C0664 STR X0, [X20 + 0x6F0]
	0x034C0668 MOV X0, X19
	0x034C066C BLR X8
	0x034C0670 LDP X20, X19, [X31 + 0x40]
	0x034C0674 LDR X30, [X31 + 0x30]
	0x034C0678 ADD X31, X31, 0x50
	0x034C067C RET
	0x034C0680 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1488]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43618304
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 704
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1488], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Int32 ovr_ApplicationVersion_GetCurrentCode(System.IntPtr obj)

Disassembly:
	0x034C0684 STR X30, [X31 + 0x30]
	0x034C0688 STP X20, X19, [X31 + 0x40]
	0x034C068C ADRP X20, 0xF1E000
	0x034C0690 LDR X8, [X20 + 0x6F8]
	0x034C0694 MOV X19, X0
	0x034C0698 CBNZ X8, 0x34C06E4
	0x034C069C ADRP X12, 0xFFFFFFFFFD62D000
	0x034C06A0 LDR V0, [X12 + 0x5B8]
	0x034C06A4 ADRP X8, 0xFFFFFFFFFD653000
	0x034C06A8 ADRP X10, 0xFFFFFFFFFD66B000
	0x034C06AC ADD X8, X8, 0xDD2
	0x034C06B0 MOVZ W9, 0x11
	0x034C06B4 ADD X10, X10, 0xC25
	0x034C06B8 MOVZ W11, 0x2A
	0x034C06BC MOVZ W13, 0x8
	0x034C06C0 ADD X0, X31, 0x0
	0x034C06C4 STP X8, X9, [X31]
	0x034C06C8 STP X10, X11, [X31 + 0x10]
	0x034C06CC STR W13, [X31 + 0x28]
	0x034C06D0 STR D0, [X31 + 0x20]
	0x034C06D4 STRB W31, [X31 + 0x2C]
	0x034C06D8 BL 0x1C1729C
	0x034C06DC MOV X8, X0
	0x034C06E0 STR X0, [X20 + 0x6F8]
	0x034C06E4 MOV X0, X19
	0x034C06E8 BLR X8
	0x034C06EC LDP X20, X19, [X31 + 0x40]
	0x034C06F0 LDR X30, [X31 + 0x30]
	0x034C06F4 ADD X31, X31, 0x50
	0x034C06F8 RET
	0x034C06FC SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1496]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43814912
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1714
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1496], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_ApplicationVersion_GetCurrentName(System.IntPtr obj)

Disassembly:
	0x034C0700 STR X30, [X31 + 0x30]
	0x034C0704 STP X20, X19, [X31 + 0x40]
	0x034C0708 ADRP X20, 0xF1E000
	0x034C070C LDR X8, [X20 + 0x700]
	0x034C0710 MOV X19, X0
	0x034C0714 CBNZ X8, 0x34C0760
	0x034C0718 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C071C LDR V0, [X12 + 0x5B8]
	0x034C0720 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0724 ADRP X10, 0xFFFFFFFFFD644000
	0x034C0728 ADD X8, X8, 0xDD2
	0x034C072C MOVZ W9, 0x11
	0x034C0730 ADD X10, X10, 0x70B
	0x034C0734 MOVZ W11, 0x26
	0x034C0738 MOVZ W13, 0x8
	0x034C073C ADD X0, X31, 0x0
	0x034C0740 STP X8, X9, [X31]
	0x034C0744 STP X10, X11, [X31 + 0x10]
	0x034C0748 STR W13, [X31 + 0x28]
	0x034C074C STR D0, [X31 + 0x20]
	0x034C0750 STRB W31, [X31 + 0x2C]
	0x034C0754 BL 0x1C1729C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1504]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1504], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ApplicationVersion_GetCurrentName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ApplicationVersion_GetCurrentName_Native(System.IntPtr obj)

Disassembly:
	0x034C0758 MOV X8, X0
	0x034C075C STR X0, [X20 + 0x700]
	0x034C0760 MOV X0, X19
	0x034C0764 BLR X8
	0x034C0768 LDP X20, X19, [X31 + 0x40]
	0x034C076C LDR X30, [X31 + 0x30]
	0x034C0770 ADD X31, X31, 0x50
	0x034C0774 RET
	0x034C0778 SUB X31, X31, 0x50
	0x034C077C STR X30, [X31 + 0x30]
	0x034C0780 STP X20, X19, [X31 + 0x40]
	0x034C0784 ADRP X20, 0xF1E000
	0x034C0788 LDR X8, [X20 + 0x708]
	0x034C078C MOV X19, X0
	0x034C0790 CBNZ X8, 0x34C07DC
	0x034C0794 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0798 LDR V0, [X12 + 0x5B8]
	0x034C079C ADRP X8, 0xFFFFFFFFFD653000
	0x034C07A0 ADRP X10, 0xFFFFFFFFFD662000
	0x034C07A4 ADD X8, X8, 0xDD2
	0x034C07A8 MOVZ W9, 0x11
	0x034C07AC ADD X10, X10, 0x4A4
	0x034C07B0 MOVZ W11, 0x29
	0x034C07B4 MOVZ W13, 0x8
	0x034C07B8 ADD X0, X31, 0x0
	0x034C07BC STP X8, X9, [X31]
	0x034C07C0 STP X10, X11, [X31 + 0x10]
	0x034C07C4 STR W13, [X31 + 0x28]
	0x034C07C8 STR D0, [X31 + 0x20]
	0x034C07CC STRB W31, [X31 + 0x2C]
	0x034C07D0 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1512]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3136
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1512], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int32 ovr_ApplicationVersion_GetLatestCode(System.IntPtr obj)

Disassembly:
	0x034C07D4 MOV X8, X0
	0x034C07D8 STR X0, [X20 + 0x708]
	0x034C07DC MOV X0, X19
	0x034C07E0 BLR X8
	0x034C07E4 LDP X20, X19, [X31 + 0x40]
	0x034C07E8 LDR X30, [X31 + 0x30]
	0x034C07EC ADD X31, X31, 0x50
	0x034C07F0 RET
	0x034C07F4 SUB X31, X31, 0x50
	0x034C07F8 STR X30, [X31 + 0x30]
	0x034C07FC STP X20, X19, [X31 + 0x40]
	0x034C0800 ADRP X20, 0xF1E000
	0x034C0804 LDR X8, [X20 + 0x710]
	0x034C0808 MOV X19, X0
	0x034C080C CBNZ X8, 0x34C0858
	0x034C0810 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0814 LDR V0, [X12 + 0x5B8]
	0x034C0818 ADRP X8, 0xFFFFFFFFFD653000
	0x034C081C ADRP X10, 0xFFFFFFFFFD640000
	0x034C0820 ADD X8, X8, 0xDD2
	0x034C0824 MOVZ W9, 0x11
	0x034C0828 ADD X10, X10, 0x255
	0x034C082C MOVZ W11, 0x2D
	0x034C0830 MOVZ W13, 0x8
	0x034C0834 ADD X0, X31, 0x0
	0x034C0838 STP X8, X9, [X31]
	0x034C083C STP X10, X11, [X31 + 0x10]
	0x034C0840 STR W13, [X31 + 0x28]
	0x034C0844 STR D0, [X31 + 0x20]
	0x034C0848 STRB W31, [X31 + 0x2C]
	0x034C084C BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1520]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43606016
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3446
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1520], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_ApplicationVersion_GetLatestName(System.IntPtr obj)

Disassembly:
	0x034C0850 MOV X8, X0
	0x034C0854 STR X0, [X20 + 0x710]
	0x034C0858 MOV X0, X19
	0x034C085C BLR X8
	0x034C0860 LDP X20, X19, [X31 + 0x40]
	0x034C0864 LDR X30, [X31 + 0x30]
	0x034C0868 ADD X31, X31, 0x50
	0x034C086C RET
	0x034C0870 SUB X31, X31, 0x50
	0x034C0874 STR X30, [X31 + 0x30]
	0x034C0878 STP X20, X19, [X31 + 0x40]
	0x034C087C ADRP X20, 0xF1E000
	0x034C0880 LDR X8, [X20 + 0x718]
	0x034C0884 MOV X19, X0
	0x034C0888 CBNZ X8, 0x34C08D4
	0x034C088C ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0890 LDR V0, [X12 + 0x5B8]
	0x034C0894 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0898 ADRP X10, 0xFFFFFFFFFD64C000
	0x034C089C ADD X8, X8, 0xDD2
	0x034C08A0 MOVZ W9, 0x11
	0x034C08A4 ADD X10, X10, 0x331

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1528]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1528], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ApplicationVersion_GetLatestName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ApplicationVersion_GetLatestName_Native(System.IntPtr obj)

Disassembly:
	0x034C08A8 MOVZ W11, 0x2F
	0x034C08AC MOVZ W13, 0x8
	0x034C08B0 ADD X0, X31, 0x0
	0x034C08B4 STP X8, X9, [X31]
	0x034C08B8 STP X10, X11, [X31 + 0x10]
	0x034C08BC STR W13, [X31 + 0x28]
	0x034C08C0 STR D0, [X31 + 0x20]
	0x034C08C4 STRB W31, [X31 + 0x2C]
	0x034C08C8 BL 0x1C1729C
	0x034C08CC MOV X8, X0
	0x034C08D0 STR X0, [X20 + 0x718]
	0x034C08D4 MOV X0, X19
	0x034C08D8 BLR X8
	0x034C08DC LDP X20, X19, [X31 + 0x40]
	0x034C08E0 LDR X30, [X31 + 0x30]
	0x034C08E4 ADD X31, X31, 0x50
	0x034C08E8 RET
	0x034C08EC SUB X31, X31, 0x50
	0x034C08F0 STR X30, [X31 + 0x30]
	0x034C08F4 STP X20, X19, [X31 + 0x40]
	0x034C08F8 ADRP X20, 0xF1E000
	0x034C08FC LDR X8, [X20 + 0x720]
	0x034C0900 MOV X19, X0
	0x034C0904 CBNZ X8, 0x34C0950
	0x034C0908 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C090C LDR V0, [X12 + 0x5B8]
	0x034C0910 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0914 ADRP X10, 0xFFFFFFFFFD664000
	0x034C0918 ADD X8, X8, 0xDD2
	0x034C091C MOVZ W9, 0x11
	0x034C0920 ADD X10, X10, 0x2DC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1536]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43671552
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3502
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1536], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_ApplicationVersion_GetReleaseDate(System.IntPtr obj)

Disassembly:
	0x034C0924 MOVZ W11, 0x33
	0x034C0928 MOVZ W13, 0x8
	0x034C092C ADD X0, X31, 0x0
	0x034C0930 STP X8, X9, [X31]
	0x034C0934 STP X10, X11, [X31 + 0x10]
	0x034C0938 STR W13, [X31 + 0x28]
	0x034C093C STR D0, [X31 + 0x20]
	0x034C0940 STRB W31, [X31 + 0x2C]
	0x034C0944 BL 0x1C1729C
	0x034C0948 MOV X8, X0
	0x034C094C STR X0, [X20 + 0x720]
	0x034C0950 MOV X0, X19
	0x034C0954 BLR X8
	0x034C0958 LDP X20, X19, [X31 + 0x40]
	0x034C095C LDR X30, [X31 + 0x30]
	0x034C0960 ADD X31, X31, 0x50
	0x034C0964 RET
	0x034C0968 SUB X31, X31, 0x50
	0x034C096C STR X30, [X31 + 0x30]
	0x034C0970 STP X20, X19, [X31 + 0x40]
	0x034C0974 ADRP X20, 0xF1E000
	0x034C0978 LDR X8, [X20 + 0x728]
	0x034C097C MOV X19, X0
	0x034C0980 CBNZ X8, 0x34C09CC
	0x034C0984 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0988 LDR V0, [X12 + 0x5B8]
	0x034C098C ADRP X8, 0xFFFFFFFFFD653000
	0x034C0990 ADRP X10, 0xFFFFFFFFFD644000
	0x034C0994 ADD X8, X8, 0xDD2
	0x034C0998 MOVZ W9, 0x11
	0x034C099C ADD X10, X10, 0x732

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1544]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3174
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1544], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_ApplicationVersion_GetSize(System.IntPtr obj)

Disassembly:
	0x034C09A0 MOVZ W11, 0x28
	0x034C09A4 MOVZ W13, 0x8
	0x034C09A8 ADD X0, X31, 0x0
	0x034C09AC STP X8, X9, [X31]
	0x034C09B0 STP X10, X11, [X31 + 0x10]
	0x034C09B4 STR W13, [X31 + 0x28]
	0x034C09B8 STR D0, [X31 + 0x20]
	0x034C09BC STRB W31, [X31 + 0x2C]
	0x034C09C0 BL 0x1C1729C
	0x034C09C4 MOV X8, X0
	0x034C09C8 STR X0, [X20 + 0x728]
	0x034C09CC MOV X0, X19
	0x034C09D0 BLR X8
	0x034C09D4 LDP X20, X19, [X31 + 0x40]
	0x034C09D8 LDR X30, [X31 + 0x30]
	0x034C09DC CMP W0, 0x0
	0x034C09E0 CSET W0, NE
	0x034C09E4 ADD X31, X31, 0x50
	0x034C09E8 RET
	0x034C09EC SUB X31, X31, 0x50
	0x034C09F0 STR X30, [X31 + 0x30]
	0x034C09F4 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1552]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1552], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ApplicationVersion_GetSize_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ApplicationVersion_GetSize_Native(System.IntPtr obj)

Disassembly:
	0x034C09F8 ADRP X20, 0xF1E000
	0x034C09FC LDR X8, [X20 + 0x730]
	0x034C0A00 MOV X19, X0
	0x034C0A04 CBNZ X8, 0x34C0A50
	0x034C0A08 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0A0C LDR V0, [X12 + 0x5B8]
	0x034C0A10 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0A14 ADRP X10, 0xFFFFFFFFFD666000
	0x034C0A18 ADD X8, X8, 0xDD2
	0x034C0A1C MOVZ W9, 0x11
	0x034C0A20 ADD X10, X10, 0x320
	0x034C0A24 MOVZ W11, 0x25
	0x034C0A28 MOVZ W13, 0x8
	0x034C0A2C ADD X0, X31, 0x0
	0x034C0A30 STP X8, X9, [X31]
	0x034C0A34 STP X10, X11, [X31 + 0x10]
	0x034C0A38 STR W13, [X31 + 0x28]
	0x034C0A3C STR D0, [X31 + 0x20]
	0x034C0A40 STRB W31, [X31 + 0x2C]
	0x034C0A44 BL 0x1C1729C
	0x034C0A48 MOV X8, X0
	0x034C0A4C STR X0, [X20 + 0x730]
	0x034C0A50 MOV X0, X19
	0x034C0A54 BLR X8
	0x034C0A58 LDP X20, X19, [X31 + 0x40]
	0x034C0A5C LDR X30, [X31 + 0x30]
	0x034C0A60 CMP W0, 0x0
	0x034C0A64 CSET W0, NE
	0x034C0A68 ADD X31, X31, 0x50
	0x034C0A6C RET
	0x034C0A70 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1560]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 949
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1560], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetDetails_GetAssetId(System.IntPtr obj)

Disassembly:
	0x034C0A74 STR X30, [X31 + 0x30]
	0x034C0A78 STP X20, X19, [X31 + 0x40]
	0x034C0A7C ADRP X20, 0xF1E000
	0x034C0A80 LDR X8, [X20 + 0x738]
	0x034C0A84 MOV X19, X0
	0x034C0A88 CBNZ X8, 0x34C0AD4
	0x034C0A8C ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0A90 LDR V0, [X12 + 0x5B8]
	0x034C0A94 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0A98 ADRP X10, 0xFFFFFFFFFD652000
	0x034C0A9C ADD X8, X8, 0xDD2
	0x034C0AA0 MOVZ W9, 0x11
	0x034C0AA4 ADD X10, X10, 0xCA
	0x034C0AA8 MOVZ W11, 0x15
	0x034C0AAC MOVZ W13, 0x8
	0x034C0AB0 ADD X0, X31, 0x0
	0x034C0AB4 STP X8, X9, [X31]
	0x034C0AB8 STP X10, X11, [X31 + 0x10]
	0x034C0ABC STR W13, [X31 + 0x28]
	0x034C0AC0 STR D0, [X31 + 0x20]
	0x034C0AC4 STRB W31, [X31 + 0x2C]
	0x034C0AC8 BL 0x1C1729C
	0x034C0ACC MOV X8, X0
	0x034C0AD0 STR X0, [X20 + 0x738]
	0x034C0AD4 MOV X0, X19
	0x034C0AD8 BLR X8
	0x034C0ADC LDP X20, X19, [X31 + 0x40]
	0x034C0AE0 LDR X30, [X31 + 0x30]
	0x034C0AE4 ADD X31, X31, 0x50
	0x034C0AE8 RET
	0x034C0AEC SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1568]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43618304
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 743
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1568], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AssetDetails_GetAssetType(System.IntPtr obj)

Disassembly:
	0x034C0AF0 STP X30, X21, [X31 + 0x30]
	0x034C0AF4 STP X20, X19, [X31 + 0x40]
	0x034C0AF8 ADRP X21, 0xF1E000
	0x034C0AFC LDR X8, [X21 + 0x740]
	0x034C0B00 MOV X19, X1
	0x034C0B04 MOV X20, X0
	0x034C0B08 CBNZ X8, 0x34C0B54
	0x034C0B0C ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0B10 LDR V0, [X12 + 0x5B8]
	0x034C0B14 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0B18 ADRP X10, 0xFFFFFFFFFD667000
	0x034C0B1C ADD X8, X8, 0xDD2
	0x034C0B20 MOVZ W9, 0x11
	0x034C0B24 ADD X10, X10, 0xD44
	0x034C0B28 MOVZ W11, 0x1F
	0x034C0B2C MOVZ W13, 0x10
	0x034C0B30 ADD X0, X31, 0x0
	0x034C0B34 STP X8, X9, [X31]
	0x034C0B38 STP X10, X11, [X31 + 0x10]
	0x034C0B3C STR W13, [X31 + 0x28]
	0x034C0B40 STR D0, [X31 + 0x20]
	0x034C0B44 STRB W31, [X31 + 0x2C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1576]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1576], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AssetDetails_GetAssetType_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AssetDetails_GetAssetType_Native(System.IntPtr obj)

Disassembly:
	0x034C0B48 BL 0x1C1729C
	0x034C0B4C MOV X8, X0
	0x034C0B50 STR X0, [X21 + 0x740]
	0x034C0B54 MOV X0, X20
	0x034C0B58 MOV X1, X19
	0x034C0B5C BLR X8
	0x034C0B60 LDP X20, X19, [X31 + 0x40]
	0x034C0B64 LDP X30, X21, [X31 + 0x30]
	0x034C0B68 ADD X31, X31, 0x50
	0x034C0B6C RET
	0x034C0B70 STP X30, X21, [X31 - 0x20]!
	0x034C0B74 STP X20, X19, [X31 + 0x10]
	0x034C0B78 ADRP X20, 0xF1E000
	0x034C0B7C ADRP X21, 0xC72000
	0x034C0B80 LDRB W8, [X20 + 0x748]
	0x034C0B84 LDR X21, [X21 + 0x328]
	0x034C0B88 MOV X19, X0
	0x034C0B8C TBNZ X8, 0x0, 0x34C0BA4
	0x034C0B90 ADRP X0, 0xC72000
	0x034C0B94 LDR X0, [X0 + 0x328]
	0x034C0B98 BL 0x1C16CF4
	0x034C0B9C MOVZ W8, 0x1
	0x034C0BA0 STRB W8, [X20 + 0x748]
	0x034C0BA4 LDR X0, [X21]
	0x034C0BA8 LDR W8, [X0 + 0xE0]
	0x034C0BAC CBNZ W8, 0x34C0BB4
	0x034C0BB0 BL 0x1C16DFC
	0x034C0BB4 MOV X0, X19
	0x034C0BB8 BL 0x34C0BC8
	0x034C0BBC LDP X20, X19, [X31 + 0x10]
	0x034C0BC0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1584]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43597824
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3079
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1584], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AssetDetails_GetDownloadStatus(System.IntPtr obj)

Disassembly:
	0x034C0BC4 B 0x34B3B78
	0x034C0BC8 SUB X31, X31, 0x50
	0x034C0BCC STR X30, [X31 + 0x30]
	0x034C0BD0 STP X20, X19, [X31 + 0x40]
	0x034C0BD4 ADRP X20, 0xF1E000
	0x034C0BD8 LDR X8, [X20 + 0x750]
	0x034C0BDC MOV X19, X0
	0x034C0BE0 CBNZ X8, 0x34C0C2C
	0x034C0BE4 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0BE8 LDR V0, [X12 + 0x5B8]
	0x034C0BEC ADRP X8, 0xFFFFFFFFFD653000
	0x034C0BF0 ADRP X10, 0xFFFFFFFFFD636000
	0x034C0BF4 ADD X8, X8, 0xDD2
	0x034C0BF8 MOVZ W9, 0x11
	0x034C0BFC ADD X10, X10, 0x6D8
	0x034C0C00 MOVZ W11, 0x1F
	0x034C0C04 MOVZ W13, 0x8
	0x034C0C08 ADD X0, X31, 0x0
	0x034C0C0C STP X8, X9, [X31]
	0x034C0C10 STP X10, X11, [X31 + 0x10]
	0x034C0C14 STR W13, [X31 + 0x28]
	0x034C0C18 STR D0, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1592]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1592], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AssetDetails_GetDownloadStatus_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AssetDetails_GetDownloadStatus_Native(System.IntPtr obj)

Disassembly:
	0x034C0C1C STRB W31, [X31 + 0x2C]
	0x034C0C20 BL 0x1C1729C
	0x034C0C24 MOV X8, X0
	0x034C0C28 STR X0, [X20 + 0x750]
	0x034C0C2C MOV X0, X19
	0x034C0C30 BLR X8
	0x034C0C34 LDP X20, X19, [X31 + 0x40]
	0x034C0C38 LDR X30, [X31 + 0x30]
	0x034C0C3C ADD X31, X31, 0x50
	0x034C0C40 RET
	0x034C0C44 SUB X31, X31, 0x50
	0x034C0C48 STR X30, [X31 + 0x30]
	0x034C0C4C STP X20, X19, [X31 + 0x40]
	0x034C0C50 ADRP X20, 0xF1E000
	0x034C0C54 LDR X8, [X20 + 0x758]
	0x034C0C58 MOV X19, X0
	0x034C0C5C CBNZ X8, 0x34C0CA8
	0x034C0C60 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0C64 LDR V0, [X12 + 0x5B8]
	0x034C0C68 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0C6C ADRP X10, 0xFFFFFFFFFD664000
	0x034C0C70 ADD X8, X8, 0xDD2
	0x034C0C74 MOVZ W9, 0x11
	0x034C0C78 ADD X10, X10, 0x310
	0x034C0C7C MOVZ W11, 0x1C
	0x034C0C80 MOVZ W13, 0x8
	0x034C0C84 ADD X0, X31, 0x0
	0x034C0C88 STP X8, X9, [X31]
	0x034C0C8C STP X10, X11, [X31 + 0x10]
	0x034C0C90 STR W13, [X31 + 0x28]
	0x034C0C94 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1600]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43614208
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3361
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1600], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AssetDetails_GetFilepath(System.IntPtr obj)

Disassembly:
	0x034C0C98 STRB W31, [X31 + 0x2C]
	0x034C0C9C BL 0x1C1729C
	0x034C0CA0 MOV X8, X0
	0x034C0CA4 STR X0, [X20 + 0x758]
	0x034C0CA8 MOV X0, X19
	0x034C0CAC BLR X8
	0x034C0CB0 LDP X20, X19, [X31 + 0x40]
	0x034C0CB4 LDR X30, [X31 + 0x30]
	0x034C0CB8 ADD X31, X31, 0x50
	0x034C0CBC RET
	0x034C0CC0 SUB X31, X31, 0x50
	0x034C0CC4 STR X30, [X31 + 0x30]
	0x034C0CC8 STP X20, X19, [X31 + 0x40]
	0x034C0CCC ADRP X20, 0xF1E000
	0x034C0CD0 LDR X8, [X20 + 0x760]
	0x034C0CD4 MOV X19, X0
	0x034C0CD8 CBNZ X8, 0x34C0D24
	0x034C0CDC ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0CE0 LDR V0, [X12 + 0x5B8]
	0x034C0CE4 ADRP X8, 0xFFFFFFFFFD653000
	0x034C0CE8 ADRP X10, 0xFFFFFFFFFD63E000
	0x034C0CEC ADD X8, X8, 0xDD2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1608]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1608], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AssetDetails_GetFilepath_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AssetDetails_GetFilepath_Native(System.IntPtr obj)

Disassembly:
	0x034C0CF0 MOVZ W9, 0x11
	0x034C0CF4 ADD X10, X10, 0x446
	0x034C0CF8 MOVZ W11, 0x20
	0x034C0CFC MOVZ W13, 0x8
	0x034C0D00 ADD X0, X31, 0x0
	0x034C0D04 STP X8, X9, [X31]
	0x034C0D08 STP X10, X11, [X31 + 0x10]
	0x034C0D0C STR W13, [X31 + 0x28]
	0x034C0D10 STR D0, [X31 + 0x20]
	0x034C0D14 STRB W31, [X31 + 0x2C]
	0x034C0D18 BL 0x1C1729C
	0x034C0D1C MOV X8, X0
	0x034C0D20 STR X0, [X20 + 0x760]
	0x034C0D24 MOV X0, X19
	0x034C0D28 BLR X8
	0x034C0D2C LDP X20, X19, [X31 + 0x40]
	0x034C0D30 LDR X30, [X31 + 0x30]
	0x034C0D34 CMP W0, 0x0
	0x034C0D38 CSET W0, NE
	0x034C0D3C ADD X31, X31, 0x50
	0x034C0D40 RET
	0x034C0D44 SUB X31, X31, 0x50
	0x034C0D48 STR X30, [X31 + 0x30]
	0x034C0D4C STP X20, X19, [X31 + 0x40]
	0x034C0D50 ADRP X20, 0xF1E000
	0x034C0D54 LDR X8, [X20 + 0x768]
	0x034C0D58 MOV X19, X0
	0x034C0D5C CBNZ X8, 0x34C0DA8
	0x034C0D60 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0D64 LDR V0, [X12 + 0x5B8]
	0x034C0D68 ADRP X8, 0xFFFFFFFFFD653000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1616]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43618304
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 771
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1616], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AssetDetails_GetIapStatus(System.IntPtr obj)

Disassembly:
	0x034C0D6C ADRP X10, 0xFFFFFFFFFD667000
	0x034C0D70 ADD X8, X8, 0xDD2
	0x034C0D74 MOVZ W9, 0x11
	0x034C0D78 ADD X10, X10, 0xD64
	0x034C0D7C MOVZ W11, 0x1D
	0x034C0D80 MOVZ W13, 0x8
	0x034C0D84 ADD X0, X31, 0x0
	0x034C0D88 STP X8, X9, [X31]
	0x034C0D8C STP X10, X11, [X31 + 0x10]
	0x034C0D90 STR W13, [X31 + 0x28]
	0x034C0D94 STR D0, [X31 + 0x20]
	0x034C0D98 STRB W31, [X31 + 0x2C]
	0x034C0D9C BL 0x1C1729C
	0x034C0DA0 MOV X8, X0
	0x034C0DA4 STR X0, [X20 + 0x768]
	0x034C0DA8 MOV X0, X19
	0x034C0DAC BLR X8
	0x034C0DB0 LDP X20, X19, [X31 + 0x40]
	0x034C0DB4 LDR X30, [X31 + 0x30]
	0x034C0DB8 ADD X31, X31, 0x50
	0x034C0DBC RET
	0x034C0DC0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1624]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1624], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AssetDetails_GetIapStatus_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AssetDetails_GetIapStatus_Native(System.IntPtr obj)

Disassembly:
	0x034C0DC4 STP X20, X19, [X31 + 0x10]
	0x034C0DC8 ADRP X20, 0xF1E000
	0x034C0DCC ADRP X21, 0xC72000
	0x034C0DD0 LDRB W8, [X20 + 0x770]
	0x034C0DD4 LDR X21, [X21 + 0x328]
	0x034C0DD8 MOV X19, X0
	0x034C0DDC TBNZ X8, 0x0, 0x34C0DF4
	0x034C0DE0 ADRP X0, 0xC72000
	0x034C0DE4 LDR X0, [X0 + 0x328]
	0x034C0DE8 BL 0x1C16CF4
	0x034C0DEC MOVZ W8, 0x1
	0x034C0DF0 STRB W8, [X20 + 0x770]
	0x034C0DF4 LDR X0, [X21]
	0x034C0DF8 LDR W8, [X0 + 0xE0]
	0x034C0DFC CBNZ W8, 0x34C0E04
	0x034C0E00 BL 0x1C16DFC
	0x034C0E04 MOV X0, X19
	0x034C0E08 BL 0x34C0E18
	0x034C0E0C LDP X20, X19, [X31 + 0x10]
	0x034C0E10 LDP X30, X21, [X31], #0x20
	0x034C0E14 B 0x34B3B78
	0x034C0E18 SUB X31, X31, 0x50
	0x034C0E1C STR X30, [X31 + 0x30]
	0x034C0E20 STP X20, X19, [X31 + 0x40]
	0x034C0E24 ADRP X20, 0xF1E000
	0x034C0E28 LDR X8, [X20 + 0x778]
	0x034C0E2C MOV X19, X0
	0x034C0E30 CBNZ X8, 0x34C0E7C
	0x034C0E34 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0E38 LDR V0, [X12 + 0x5B8]
	0x034C0E3C ADRP X8, 0xFFFFFFFFFD653000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1632]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3212
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1632], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_AssetDetails_GetLanguage(System.IntPtr obj)

Disassembly:
	0x034C0E40 ADRP X10, 0xFFFFFFFFFD659000
	0x034C0E44 ADD X8, X8, 0xDD2
	0x034C0E48 MOVZ W9, 0x11
	0x034C0E4C ADD X10, X10, 0xDF4
	0x034C0E50 MOVZ W11, 0x1C
	0x034C0E54 MOVZ W13, 0x8
	0x034C0E58 ADD X0, X31, 0x0
	0x034C0E5C STP X8, X9, [X31]
	0x034C0E60 STP X10, X11, [X31 + 0x10]
	0x034C0E64 STR W13, [X31 + 0x28]
	0x034C0E68 STR D0, [X31 + 0x20]
	0x034C0E6C STRB W31, [X31 + 0x2C]
	0x034C0E70 BL 0x1C1729C
	0x034C0E74 MOV X8, X0
	0x034C0E78 STR X0, [X20 + 0x778]
	0x034C0E7C MOV X0, X19
	0x034C0E80 BLR X8
	0x034C0E84 LDP X20, X19, [X31 + 0x40]
	0x034C0E88 LDR X30, [X31 + 0x30]
	0x034C0E8C ADD X31, X31, 0x50
	0x034C0E90 RET
	0x034C0E94 STP X30, X21, [X31 - 0x20]!
	0x034C0E98 STP X20, X19, [X31 + 0x10]
	0x034C0E9C ADRP X20, 0xF1E000
	0x034C0EA0 ADRP X21, 0xC72000
	0x034C0EA4 LDRB W8, [X20 + 0x780]
	0x034C0EA8 LDR X21, [X21 + 0x328]
	0x034C0EAC MOV X19, X0
	0x034C0EB0 TBNZ X8, 0x0, 0x34C0EC8
	0x034C0EB4 ADRP X0, 0xC72000
	0x034C0EB8 LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1640]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 980
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1640], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AssetDetails_GetMetadata(System.IntPtr obj)

Disassembly:
	0x034C0EBC BL 0x1C16CF4
	0x034C0EC0 MOVZ W8, 0x1
	0x034C0EC4 STRB W8, [X20 + 0x780]
	0x034C0EC8 LDR X0, [X21]
	0x034C0ECC LDR W8, [X0 + 0xE0]
	0x034C0ED0 CBNZ W8, 0x34C0ED8
	0x034C0ED4 BL 0x1C16DFC
	0x034C0ED8 MOV X0, X19
	0x034C0EDC BL 0x34C0EEC
	0x034C0EE0 LDP X20, X19, [X31 + 0x10]
	0x034C0EE4 LDP X30, X21, [X31], #0x20
	0x034C0EE8 B 0x34B3D04
	0x034C0EEC SUB X31, X31, 0x50
	0x034C0EF0 STR X30, [X31 + 0x30]
	0x034C0EF4 STP X20, X19, [X31 + 0x40]
	0x034C0EF8 ADRP X20, 0xF1E000
	0x034C0EFC LDR X8, [X20 + 0x788]
	0x034C0F00 MOV X19, X0
	0x034C0F04 CBNZ X8, 0x34C0F50
	0x034C0F08 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0F0C LDR V0, [X12 + 0x5B8]
	0x034C0F10 ADRP X8, 0xFFFFFFFFFD653000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1F000
	006 Move X21, 0xC73000
	007 Move W8, [X20+1648]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC73000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1648], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AssetDetails_GetMetadata_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AssetDetails_GetMetadata_Native(System.IntPtr obj)

Disassembly:
	0x034C0F14 ADRP X10, 0xFFFFFFFFFD669000
	0x034C0F18 ADD X8, X8, 0xDD2
	0x034C0F1C MOVZ W9, 0x11
	0x034C0F20 ADD X10, X10, 0xD9B
	0x034C0F24 MOVZ W11, 0x18
	0x034C0F28 MOVZ W13, 0x8
	0x034C0F2C ADD X0, X31, 0x0
	0x034C0F30 STP X8, X9, [X31]
	0x034C0F34 STP X10, X11, [X31 + 0x10]
	0x034C0F38 STR W13, [X31 + 0x28]
	0x034C0F3C STR D0, [X31 + 0x20]
	0x034C0F40 STRB W31, [X31 + 0x2C]
	0x034C0F44 BL 0x1C1729C
	0x034C0F48 MOV X8, X0
	0x034C0F4C STR X0, [X20 + 0x788]
	0x034C0F50 MOV X0, X19
	0x034C0F54 BLR X8
	0x034C0F58 LDP X20, X19, [X31 + 0x40]
	0x034C0F5C LDR X30, [X31 + 0x30]
	0x034C0F60 ADD X31, X31, 0x50
	0x034C0F64 RET
	0x034C0F68 SUB X31, X31, 0x50
	0x034C0F6C STR X30, [X31 + 0x30]
	0x034C0F70 STP X20, X19, [X31 + 0x40]
	0x034C0F74 ADRP X20, 0xF1E000
	0x034C0F78 LDR X8, [X20 + 0x790]
	0x034C0F7C MOV X19, X0
	0x034C0F80 CBNZ X8, 0x34C0FCC
	0x034C0F84 ADRP X12, 0xFFFFFFFFFD62D000
	0x034C0F88 LDR V0, [X12 + 0x5B8]
	0x034C0F8C ADRP X8, 0xFFFFFFFFFD653000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1F000
	006 Move X8, [X20+1656]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43851776
	011 Move V0, [X12+1464]
	012 Move X8, -43696128
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 568
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1656], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_AssetDetailsArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C0F90 ADRP X10, 0xFFFFFFFFFD636000
	0x034C0F94 ADD X8, X8, 0xDD2
	0x034C0F98 MOVZ W9, 0x11
	0x034C0F9C ADD X10, X10, 0x6F8
	0x034C0FA0 MOVZ W11, 0x13
	0x034C0FA4 MOVZ W13, 0x8
	0x034C0FA8 ADD X0, X31, 0x0
	0x034C0FAC STP X8, X9, [X31]
	0x034C0FB0 STP X10, X11, [X31 + 0x10]
	0x034C0FB4 STR W13, [X31 + 0x28]
	0x034C0FB8 STR D0, [X31 + 0x20]
	0x034C0FBC STRB W31, [X31 + 0x2C]
	0x034C0FC0 BL 0x1C1729C
	0x034C0FC4 MOV X8, X0
	0x034C0FC8 STR X0, [X20 + 0x790]
	0x034C0FCC MOV X0, X19
	0x034C0FD0 BLR X8
	0x034C0FD4 LDP X20, X19, [X31 + 0x40]
	0x034C0FD8 LDR X30, [X31 + 0x30]
	0x034C0FDC ADD X31, X31, 0x50
	0x034C0FE0 RET
	0x034C0FE4 SUB X31, X31, 0x50
	0x034C0FE8 STR X30, [X31 + 0x30]
	0x034C0FEC STP X20, X19, [X31 + 0x40]
	0x034C0FF0 ADRP X20, 0xF1E000
	0x034C0FF4 LDR X8, [X20 + 0x798]
	0x034C0FF8 MOV X19, X0
	0x034C0FFC CBNZ X8, 0x34C1048
	0x034C1000 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1004 LDR V0, [X12 + 0x5B8]
	0x034C1008 ADRP X8, 0xFFFFFFFFFD652000
	0x034C100C ADRP X10, 0xFFFFFFFFFD668000
	0x034C1010 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1F000
	007 Move X8, [X21+1664]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43851776
	013 Move V0, [X12+1464]
	014 Move X8, -43696128
	015 Move X10, -43671552
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3539
	019 Move W11, 32
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1664], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UIntPtr ovr_AssetDetailsArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C1014 MOVZ W9, 0x11
	0x034C1018 ADD X10, X10, 0xDB4
	0x034C101C MOVZ W11, 0x1D
	0x034C1020 MOVZ W13, 0x8
	0x034C1024 ADD X0, X31, 0x0
	0x034C1028 STP X8, X9, [X31]
	0x034C102C STP X10, X11, [X31 + 0x10]
	0x034C1030 STR W13, [X31 + 0x28]
	0x034C1034 STR D0, [X31 + 0x20]
	0x034C1038 STRB W31, [X31 + 0x2C]
	0x034C103C BL 0x1C1729C
	0x034C1040 MOV X8, X0
	0x034C1044 STR X0, [X20 + 0x798]
	0x034C1048 MOV X0, X19
	0x034C104C BLR X8
	0x034C1050 LDP X20, X19, [X31 + 0x40]
	0x034C1054 LDR X30, [X31 + 0x30]
	0x034C1058 ADD X31, X31, 0x50
	0x034C105C RET
	0x034C1060 SUB X31, X31, 0x50
	0x034C1064 STR X30, [X31 + 0x30]
	0x034C1068 STP X20, X19, [X31 + 0x40]
	0x034C106C ADRP X20, 0xF1D000
	0x034C1070 LDR X8, [X20 + 0x7A0]
	0x034C1074 MOV X19, X0
	0x034C1078 CBNZ X8, 0x34C10C4
	0x034C107C ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1080 LDR V0, [X12 + 0x5B8]
	0x034C1084 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1088 ADRP X10, 0xFFFFFFFFFD651000
	0x034C108C ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1672]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43683840
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3452
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1672], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFileDeleteResult_GetAssetFileId(System.IntPtr obj)

Disassembly:
	0x034C1090 MOVZ W9, 0x11
	0x034C1094 ADD X10, X10, 0xE0
	0x034C1098 MOVZ W11, 0x1C
	0x034C109C MOVZ W13, 0x8
	0x034C10A0 ADD X0, X31, 0x0
	0x034C10A4 STP X8, X9, [X31]
	0x034C10A8 STP X10, X11, [X31 + 0x10]
	0x034C10AC STR W13, [X31 + 0x28]
	0x034C10B0 STR D0, [X31 + 0x20]
	0x034C10B4 STRB W31, [X31 + 0x2C]
	0x034C10B8 BL 0x1C1729C
	0x034C10BC MOV X8, X0
	0x034C10C0 STR X0, [X20 + 0x7A0]
	0x034C10C4 MOV X0, X19
	0x034C10C8 BLR X8
	0x034C10CC LDP X20, X19, [X31 + 0x40]
	0x034C10D0 LDR X30, [X31 + 0x30]
	0x034C10D4 ADD X31, X31, 0x50
	0x034C10D8 RET
	0x034C10DC SUB X31, X31, 0x50
	0x034C10E0 STR X30, [X31 + 0x30]
	0x034C10E4 STP X20, X19, [X31 + 0x40]
	0x034C10E8 ADRP X20, 0xF1D000
	0x034C10EC LDR X8, [X20 + 0x7A8]
	0x034C10F0 MOV X19, X0
	0x034C10F4 CBNZ X8, 0x34C1140
	0x034C10F8 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C10FC LDR V0, [X12 + 0x5B8]
	0x034C1100 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1104 ADRP X10, 0xFFFFFFFFFD665000
	0x034C1108 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1680]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1762
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1680], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFileDeleteResult_GetAssetId(System.IntPtr obj)

Disassembly:
	0x034C110C MOVZ W9, 0x11
	0x034C1110 ADD X10, X10, 0x346
	0x034C1114 MOVZ W11, 0x1D
	0x034C1118 MOVZ W13, 0x8
	0x034C111C ADD X0, X31, 0x0
	0x034C1120 STP X8, X9, [X31]
	0x034C1124 STP X10, X11, [X31 + 0x10]
	0x034C1128 STR W13, [X31 + 0x28]
	0x034C112C STR D0, [X31 + 0x20]
	0x034C1130 STRB W31, [X31 + 0x2C]
	0x034C1134 BL 0x1C1729C
	0x034C1138 MOV X8, X0
	0x034C113C STR X0, [X20 + 0x7A8]
	0x034C1140 MOV X0, X19
	0x034C1144 BLR X8
	0x034C1148 LDP X20, X19, [X31 + 0x40]
	0x034C114C LDR X30, [X31 + 0x30]
	0x034C1150 ADD X31, X31, 0x50
	0x034C1154 RET
	0x034C1158 STP X30, X21, [X31 - 0x20]!
	0x034C115C STP X20, X19, [X31 + 0x10]
	0x034C1160 ADRP X20, 0xF1D000
	0x034C1164 ADRP X21, 0xC71000
	0x034C1168 LDRB W8, [X20 + 0x7B0]
	0x034C116C LDR X21, [X21 + 0x328]
	0x034C1170 MOV X19, X0
	0x034C1174 TBNZ X8, 0x0, 0x34C118C
	0x034C1178 ADRP X0, 0xC71000
	0x034C117C LDR X0, [X0 + 0x328]
	0x034C1180 BL 0x1C16CF4
	0x034C1184 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1688]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43810816
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1709
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1688], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AssetFileDeleteResult_GetFilepath(System.IntPtr obj)

Disassembly:
	0x034C1188 STRB W8, [X20 + 0x7B0]
	0x034C118C LDR X0, [X21]
	0x034C1190 LDR W8, [X0 + 0xE0]
	0x034C1194 CBNZ W8, 0x34C119C
	0x034C1198 BL 0x1C16DFC
	0x034C119C MOV X0, X19
	0x034C11A0 BL 0x34C11B0
	0x034C11A4 LDP X20, X19, [X31 + 0x10]
	0x034C11A8 LDP X30, X21, [X31], #0x20
	0x034C11AC B 0x34B3D04
	0x034C11B0 SUB X31, X31, 0x50
	0x034C11B4 STR X30, [X31 + 0x30]
	0x034C11B8 STP X20, X19, [X31 + 0x40]
	0x034C11BC ADRP X20, 0xF1D000
	0x034C11C0 LDR X8, [X20 + 0x7B8]
	0x034C11C4 MOV X19, X0
	0x034C11C8 CBNZ X8, 0x34C1214
	0x034C11CC ADRP X12, 0xFFFFFFFFFD62C000
	0x034C11D0 LDR V0, [X12 + 0x5B8]
	0x034C11D4 ADRP X8, 0xFFFFFFFFFD652000
	0x034C11D8 ADRP X10, 0xFFFFFFFFFD649000
	0x034C11DC ADD X8, X8, 0xDD2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1E000
	006 Move X21, 0xC72000
	007 Move W8, [X20+1696]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC72000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1696], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AssetFileDeleteResult_GetFilepath_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(System.IntPtr obj)

Disassembly:
	0x034C11E0 MOVZ W9, 0x11
	0x034C11E4 ADD X10, X10, 0x772
	0x034C11E8 MOVZ W11, 0x1A
	0x034C11EC MOVZ W13, 0x8
	0x034C11F0 ADD X0, X31, 0x0
	0x034C11F4 STP X8, X9, [X31]
	0x034C11F8 STP X10, X11, [X31 + 0x10]
	0x034C11FC STR W13, [X31 + 0x28]
	0x034C1200 STR D0, [X31 + 0x20]
	0x034C1204 STRB W31, [X31 + 0x2C]
	0x034C1208 BL 0x1C1729C
	0x034C120C MOV X8, X0
	0x034C1210 STR X0, [X20 + 0x7B8]
	0x034C1214 MOV X0, X19
	0x034C1218 BLR X8
	0x034C121C LDP X20, X19, [X31 + 0x40]
	0x034C1220 LDR X30, [X31 + 0x30]
	0x034C1224 ADD X31, X31, 0x50
	0x034C1228 RET
	0x034C122C STP X30, X21, [X31 - 0x20]!
	0x034C1230 STP X20, X19, [X31 + 0x10]
	0x034C1234 ADRP X20, 0xF1D000
	0x034C1238 ADRP X21, 0xC71000
	0x034C123C LDRB W8, [X20 + 0x7C0]
	0x034C1240 LDR X21, [X21 + 0x328]
	0x034C1244 MOV X19, X0
	0x034C1248 TBNZ X8, 0x0, 0x34C1260
	0x034C124C ADRP X0, 0xC71000
	0x034C1250 LDR X0, [X0 + 0x328]
	0x034C1254 BL 0x1C16CF4
	0x034C1258 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1704]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43663360
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 512
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1704], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_AssetFileDeleteResult_GetSuccess(System.IntPtr obj)

Disassembly:
	0x034C125C STRB W8, [X20 + 0x7C0]
	0x034C1260 LDR X0, [X21]
	0x034C1264 LDR W8, [X0 + 0xE0]
	0x034C1268 CBNZ W8, 0x34C1270
	0x034C126C BL 0x1C16DFC
	0x034C1270 MOV X0, X19
	0x034C1274 BL 0x34C1284
	0x034C1278 LDP X20, X19, [X31 + 0x10]
	0x034C127C LDP X30, X21, [X31], #0x20
	0x034C1280 B 0x34B3B78
	0x034C1284 SUB X31, X31, 0x50
	0x034C1288 STR X30, [X31 + 0x30]
	0x034C128C STP X20, X19, [X31 + 0x40]
	0x034C1290 ADRP X20, 0xF1D000
	0x034C1294 LDR X8, [X20 + 0x7C8]
	0x034C1298 MOV X19, X0
	0x034C129C CBNZ X8, 0x34C12E8
	0x034C12A0 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C12A4 LDR V0, [X12 + 0x5B8]
	0x034C12A8 ADRP X8, 0xFFFFFFFFFD652000
	0x034C12AC ADRP X10, 0xFFFFFFFFFD666000
	0x034C12B0 ADD X8, X8, 0xDD2
	0x034C12B4 MOVZ W9, 0x11
	0x034C12B8 ADD X10, X10, 0xD82
	0x034C12BC MOVZ W11, 0x16
	0x034C12C0 MOVZ W13, 0x8
	0x034C12C4 ADD X0, X31, 0x0
	0x034C12C8 STP X8, X9, [X31]
	0x034C12CC STP X10, X11, [X31 + 0x10]
	0x034C12D0 STR W13, [X31 + 0x28]
	0x034C12D4 STR D0, [X31 + 0x20]
	0x034C12D8 STRB W31, [X31 + 0x2C]
	0x034C12DC BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1712]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43745280
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1296
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1712], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetFileId(System.IntPtr obj)

Disassembly:
	0x034C12E0 MOV X8, X0
	0x034C12E4 STR X0, [X20 + 0x7C8]
	0x034C12E8 MOV X0, X19
	0x034C12EC BLR X8
	0x034C12F0 LDP X20, X19, [X31 + 0x40]
	0x034C12F4 LDR X30, [X31 + 0x30]
	0x034C12F8 ADD X31, X31, 0x50
	0x034C12FC RET
	0x034C1300 SUB X31, X31, 0x50
	0x034C1304 STR X30, [X31 + 0x30]
	0x034C1308 STP X20, X19, [X31 + 0x40]
	0x034C130C ADRP X20, 0xF1D000
	0x034C1310 LDR X8, [X20 + 0x7D0]
	0x034C1314 MOV X19, X0
	0x034C1318 CBNZ X8, 0x34C1364
	0x034C131C ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1320 LDR V0, [X12 + 0x5B8]
	0x034C1324 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1328 ADRP X10, 0xFFFFFFFFFD637000
	0x034C132C ADD X8, X8, 0xDD2
	0x034C1330 MOVZ W9, 0x11
	0x034C1334 ADD X10, X10, 0x6D2
	0x034C1338 MOVZ W11, 0x1B
	0x034C133C MOVZ W13, 0x8
	0x034C1340 ADD X0, X31, 0x0
	0x034C1344 STP X8, X9, [X31]
	0x034C1348 STP X10, X11, [X31 + 0x10]
	0x034C134C STR W13, [X31 + 0x28]
	0x034C1350 STR D0, [X31 + 0x20]
	0x034C1354 STRB W31, [X31 + 0x2C]
	0x034C1358 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1720]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43638784
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1009
	017 Move W11, 48
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1720], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetId(System.IntPtr obj)

Disassembly:
	0x034C135C MOV X8, X0
	0x034C1360 STR X0, [X20 + 0x7D0]
	0x034C1364 MOV X0, X19
	0x034C1368 BLR X8
	0x034C136C LDP X20, X19, [X31 + 0x40]
	0x034C1370 LDR X30, [X31 + 0x30]
	0x034C1374 ADD X31, X31, 0x50
	0x034C1378 RET
	0x034C137C SUB X31, X31, 0x50
	0x034C1380 STP X30, X21, [X31 + 0x30]
	0x034C1384 STP X20, X19, [X31 + 0x40]
	0x034C1388 ADRP X21, 0xF1D000
	0x034C138C LDR X8, [X21 + 0x7D8]
	0x034C1390 MOV X19, X1
	0x034C1394 MOV X20, X0
	0x034C1398 CBNZ X8, 0x34C13E4
	0x034C139C ADRP X12, 0xFFFFFFFFFD62C000
	0x034C13A0 LDR V0, [X12 + 0x5B8]
	0x034C13A4 ADRP X8, 0xFFFFFFFFFD652000
	0x034C13A8 ADRP X10, 0xFFFFFFFFFD643000
	0x034C13AC ADD X8, X8, 0xDD2
	0x034C13B0 MOVZ W9, 0x11
	0x034C13B4 ADD X10, X10, 0x75B
	0x034C13B8 MOVZ W11, 0x1D
	0x034C13BC MOVZ W13, 0x10
	0x034C13C0 ADD X0, X31, 0x0
	0x034C13C4 STP X8, X9, [X31]
	0x034C13C8 STP X10, X11, [X31 + 0x10]
	0x034C13CC STR W13, [X31 + 0x28]
	0x034C13D0 STR D0, [X31 + 0x20]
	0x034C13D4 STRB W31, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1728]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43638784
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1058
	017 Move W11, 44
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1728], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AssetFileDownloadCancelResult_GetFilepath(System.IntPtr obj)

Disassembly:
	0x034C13D8 BL 0x1C1729C
	0x034C13DC MOV X8, X0
	0x034C13E0 STR X0, [X21 + 0x7D8]
	0x034C13E4 MOV X0, X20
	0x034C13E8 MOV X1, X19
	0x034C13EC BLR X8
	0x034C13F0 LDP X20, X19, [X31 + 0x40]
	0x034C13F4 LDP X30, X21, [X31 + 0x30]
	0x034C13F8 ADD X31, X31, 0x50
	0x034C13FC RET
	0x034C1400 STP X30, X21, [X31 - 0x20]!
	0x034C1404 STP X20, X19, [X31 + 0x10]
	0x034C1408 ADRP X20, 0xF1D000
	0x034C140C ADRP X21, 0xC71000
	0x034C1410 LDRB W8, [X20 + 0x7E0]
	0x034C1414 LDR X21, [X21 + 0x328]
	0x034C1418 MOV X19, X0
	0x034C141C TBNZ X8, 0x0, 0x34C1434
	0x034C1420 ADRP X0, 0xC71000
	0x034C1424 LDR X0, [X0 + 0x328]
	0x034C1428 BL 0x1C16CF4
	0x034C142C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1E000
	006 Move X21, 0xC72000
	007 Move W8, [X20+1736]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC72000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1736], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(System.IntPtr obj)

Disassembly:
	0x034C1430 STRB W8, [X20 + 0x7E0]
	0x034C1434 LDR X0, [X21]
	0x034C1438 LDR W8, [X0 + 0xE0]
	0x034C143C CBNZ W8, 0x34C1444
	0x034C1440 BL 0x1C16DFC
	0x034C1444 MOV X0, X19
	0x034C1448 BL 0x34C1458
	0x034C144C LDP X20, X19, [X31 + 0x10]
	0x034C1450 LDP X30, X21, [X31], #0x20
	0x034C1454 B 0x34B3B78
	0x034C1458 SUB X31, X31, 0x50
	0x034C145C STR X30, [X31 + 0x30]
	0x034C1460 STP X20, X19, [X31 + 0x40]
	0x034C1464 ADRP X20, 0xF1D000
	0x034C1468 LDR X8, [X20 + 0x7E8]
	0x034C146C MOV X19, X0
	0x034C1470 CBNZ X8, 0x34C14BC
	0x034C1474 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1478 LDR V0, [X12 + 0x5B8]
	0x034C147C ADRP X8, 0xFFFFFFFFFD652000
	0x034C1480 ADRP X10, 0xFFFFFFFFFD637000
	0x034C1484 ADD X8, X8, 0xDD2
	0x034C1488 MOVZ W9, 0x11
	0x034C148C ADD X10, X10, 0x6EE
	0x034C1490 MOVZ W11, 0x1D
	0x034C1494 MOVZ W13, 0x8
	0x034C1498 ADD X0, X31, 0x0
	0x034C149C STP X8, X9, [X31]
	0x034C14A0 STP X10, X11, [X31 + 0x10]
	0x034C14A4 STR W13, [X31 + 0x28]
	0x034C14A8 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1744]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43638784
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1103
	017 Move W11, 45
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1744], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_AssetFileDownloadCancelResult_GetSuccess(System.IntPtr obj)

Disassembly:
	0x034C14AC STRB W31, [X31 + 0x2C]
	0x034C14B0 BL 0x1C1729C
	0x034C14B4 MOV X8, X0
	0x034C14B8 STR X0, [X20 + 0x7E8]
	0x034C14BC MOV X0, X19
	0x034C14C0 BLR X8
	0x034C14C4 LDP X20, X19, [X31 + 0x40]
	0x034C14C8 LDR X30, [X31 + 0x30]
	0x034C14CC ADD X31, X31, 0x50
	0x034C14D0 RET
	0x034C14D4 STP X30, X21, [X31 - 0x20]!
	0x034C14D8 STP X20, X19, [X31 + 0x10]
	0x034C14DC ADRP X20, 0xF1D000
	0x034C14E0 ADRP X21, 0xC71000
	0x034C14E4 LDRB W8, [X20 + 0x7F0]
	0x034C14E8 LDR X21, [X21 + 0x328]
	0x034C14EC MOV X19, X0
	0x034C14F0 TBNZ X8, 0x0, 0x34C1508
	0x034C14F4 ADRP X0, 0xC71000
	0x034C14F8 LDR X0, [X0 + 0x328]
	0x034C14FC BL 0x1C16CF4
	0x034C1500 MOVZ W8, 0x1
	0x034C1504 STRB W8, [X20 + 0x7F0]
	0x034C1508 LDR X0, [X21]
	0x034C150C LDR W8, [X0 + 0xE0]
	0x034C1510 CBNZ W8, 0x34C1518
	0x034C1514 BL 0x1C16DFC
	0x034C1518 MOV X0, X19
	0x034C151C BL 0x34C152C
	0x034C1520 LDP X20, X19, [X31 + 0x10]
	0x034C1524 LDP X30, X21, [X31], #0x20
	0x034C1528 B 0x34B3B78
	0x034C152C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1752]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43843584
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 715
	017 Move W11, 44
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1752], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.UInt64 ovr_AssetFileDownloadResult_GetAssetId(System.IntPtr obj)

Disassembly:
	0x034C1530 STR X30, [X31 + 0x30]
	0x034C1534 STP X20, X19, [X31 + 0x40]
	0x034C1538 ADRP X20, 0xF1D000
	0x034C153C LDR X8, [X20 + 0x7F8]
	0x034C1540 MOV X19, X0
	0x034C1544 CBNZ X8, 0x34C1590
	0x034C1548 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C154C LDR V0, [X12 + 0x5B8]
	0x034C1550 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1554 ADRP X10, 0xFFFFFFFFFD631000
	0x034C1558 ADD X8, X8, 0xDD2
	0x034C155C MOVZ W9, 0x11
	0x034C1560 ADD X10, X10, 0x78E
	0x034C1564 MOVZ W11, 0x21
	0x034C1568 MOVZ W13, 0x8
	0x034C156C ADD X0, X31, 0x0
	0x034C1570 STP X8, X9, [X31]
	0x034C1574 STP X10, X11, [X31 + 0x10]
	0x034C1578 STR W13, [X31 + 0x28]
	0x034C157C STR D0, [X31 + 0x20]
	0x034C1580 STRB W31, [X31 + 0x2C]
	0x034C1584 BL 0x1C1729C
	0x034C1588 MOV X8, X0
	0x034C158C STR X0, [X20 + 0x7F8]
	0x034C1590 MOV X0, X19
	0x034C1594 BLR X8
	0x034C1598 LDP X20, X19, [X31 + 0x40]
	0x034C159C LDR X30, [X31 + 0x30]
	0x034C15A0 ADD X31, X31, 0x50
	0x034C15A4 RET
	0x034C15A8 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1760]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43638784
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1149
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1760], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_AssetFileDownloadResult_GetFilepath(System.IntPtr obj)

Disassembly:
	0x034C15AC STR X30, [X31 + 0x30]
	0x034C15B0 STP X20, X19, [X31 + 0x40]
	0x034C15B4 ADRP X20, 0xF1D000
	0x034C15B8 LDR X8, [X20 + 0x800]
	0x034C15BC MOV X19, X0
	0x034C15C0 CBNZ X8, 0x34C160C
	0x034C15C4 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C15C8 LDR V0, [X12 + 0x5B8]
	0x034C15CC ADRP X8, 0xFFFFFFFFFD652000
	0x034C15D0 ADRP X10, 0xFFFFFFFFFD64D000
	0x034C15D4 ADD X8, X8, 0xDD2
	0x034C15D8 MOVZ W9, 0x11
	0x034C15DC ADD X10, X10, 0x48E
	0x034C15E0 MOVZ W11, 0x1A
	0x034C15E4 MOVZ W13, 0x8
	0x034C15E8 ADD X0, X31, 0x0
	0x034C15EC STP X8, X9, [X31]
	0x034C15F0 STP X10, X11, [X31 + 0x10]
	0x034C15F4 STR W13, [X31 + 0x28]
	0x034C15F8 STR D0, [X31 + 0x20]
	0x034C15FC STRB W31, [X31 + 0x2C]
	0x034C1600 BL 0x1C1729C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1E000
	006 Move X21, 0xC72000
	007 Move W8, [X20+1768]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC72000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1768], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_AssetFileDownloadResult_GetFilepath_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(System.IntPtr obj)

Disassembly:
	0x034C1604 MOV X8, X0
	0x034C1608 STR X0, [X20 + 0x800]
	0x034C160C MOV X0, X19
	0x034C1610 BLR X8
	0x034C1614 LDP X20, X19, [X31 + 0x40]
	0x034C1618 LDR X30, [X31 + 0x30]
	0x034C161C ADD X31, X31, 0x50
	0x034C1620 RET
	0x034C1624 SUB X31, X31, 0x50
	0x034C1628 STR X30, [X31 + 0x30]
	0x034C162C STP X20, X19, [X31 + 0x40]
	0x034C1630 ADRP X20, 0xF1D000
	0x034C1634 LDR X8, [X20 + 0x808]
	0x034C1638 MOV X19, X0
	0x034C163C CBNZ X8, 0x34C1688
	0x034C1640 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1644 LDR V0, [X12 + 0x5B8]
	0x034C1648 ADRP X8, 0xFFFFFFFFFD652000
	0x034C164C ADRP X10, 0xFFFFFFFFFD63F000
	0x034C1650 ADD X8, X8, 0xDD2
	0x034C1654 MOVZ W9, 0x11
	0x034C1658 ADD X10, X10, 0x283
	0x034C165C MOVZ W11, 0x20
	0x034C1660 MOVZ W13, 0x8
	0x034C1664 ADD X0, X31, 0x0
	0x034C1668 STP X8, X9, [X31]
	0x034C166C STP X10, X11, [X31 + 0x10]
	0x034C1670 STR W13, [X31 + 0x28]
	0x034C1674 STR D0, [X31 + 0x20]
	0x034C1678 STRB W31, [X31 + 0x2C]
	0x034C167C BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1776]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43769856
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 775
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1776], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetFileId(System.IntPtr obj)

Disassembly:
	0x034C1680 MOV X8, X0
	0x034C1684 STR X0, [X20 + 0x808]
	0x034C1688 MOV X0, X19
	0x034C168C BLR X8
	0x034C1690 LDP X20, X19, [X31 + 0x40]
	0x034C1694 LDR X30, [X31 + 0x30]
	0x034C1698 ADD X31, X31, 0x50
	0x034C169C RET
	0x034C16A0 SUB X31, X31, 0x50
	0x034C16A4 STR X30, [X31 + 0x30]
	0x034C16A8 STP X20, X19, [X31 + 0x40]
	0x034C16AC ADRP X20, 0xF1D000
	0x034C16B0 LDR X8, [X20 + 0x810]
	0x034C16B4 MOV X19, X0
	0x034C16B8 CBNZ X8, 0x34C1704
	0x034C16BC ADRP X12, 0xFFFFFFFFFD62C000
	0x034C16C0 LDR V0, [X12 + 0x5B8]
	0x034C16C4 ADRP X8, 0xFFFFFFFFFD652000
	0x034C16C8 ADRP X10, 0xFFFFFFFFFD633000
	0x034C16CC ADD X8, X8, 0xDD2
	0x034C16D0 MOVZ W9, 0x11
	0x034C16D4 ADD X10, X10, 0x64A
	0x034C16D8 MOVZ W11, 0x1E
	0x034C16DC MOVZ W13, 0x8
	0x034C16E0 ADD X0, X31, 0x0
	0x034C16E4 STP X8, X9, [X31]
	0x034C16E8 STP X10, X11, [X31 + 0x10]
	0x034C16EC STR W13, [X31 + 0x28]
	0x034C16F0 STR D0, [X31 + 0x20]
	0x034C16F4 STRB W31, [X31 + 0x2C]
	0x034C16F8 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1784]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43601920
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3109
	017 Move W11, 42
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1784], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetId(System.IntPtr obj)

Disassembly:
	0x034C16FC MOV X8, X0
	0x034C1700 STR X0, [X20 + 0x810]
	0x034C1704 MOV X0, X19
	0x034C1708 BLR X8
	0x034C170C LDP X20, X19, [X31 + 0x40]
	0x034C1710 LDR X30, [X31 + 0x30]
	0x034C1714 CMP W0, 0x0
	0x034C1718 CSET W0, NE
	0x034C171C ADD X31, X31, 0x50
	0x034C1720 RET
	0x034C1724 SUB X31, X31, 0x50
	0x034C1728 STR X30, [X31 + 0x30]
	0x034C172C STP X20, X19, [X31 + 0x40]
	0x034C1730 ADRP X20, 0xF1D000
	0x034C1734 LDR X8, [X20 + 0x818]
	0x034C1738 MOV X19, X0
	0x034C173C CBNZ X8, 0x34C1788
	0x034C1740 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1744 LDR V0, [X12 + 0x5B8]
	0x034C1748 ADRP X8, 0xFFFFFFFFFD652000
	0x034C174C ADRP X10, 0xFFFFFFFFFD658000
	0x034C1750 ADD X8, X8, 0xDD2
	0x034C1754 MOVZ W9, 0x11
	0x034C1758 ADD X10, X10, 0xE11
	0x034C175C MOVZ W11, 0x22
	0x034C1760 MOVZ W13, 0x8
	0x034C1764 ADD X0, X31, 0x0
	0x034C1768 STP X8, X9, [X31]
	0x034C176C STP X10, X11, [X31 + 0x10]
	0x034C1770 STR W13, [X31 + 0x28]
	0x034C1774 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1792]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1803
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1792], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt32 ovr_AssetFileDownloadUpdate_GetBytesTotal(System.IntPtr obj)

Disassembly:
	0x034C1778 STRB W31, [X31 + 0x2C]
	0x034C177C BL 0x1C1729C
	0x034C1780 MOV X8, X0
	0x034C1784 STR X0, [X20 + 0x818]
	0x034C1788 MOV X0, X19
	0x034C178C BLR X8
	0x034C1790 LDP X20, X19, [X31 + 0x40]
	0x034C1794 LDR X30, [X31 + 0x30]
	0x034C1798 CMP W0, 0x0
	0x034C179C CSET W0, NE
	0x034C17A0 ADD X31, X31, 0x50
	0x034C17A4 RET
	0x034C17A8 STP X30, X21, [X31 - 0x20]!
	0x034C17AC STP X20, X19, [X31 + 0x10]
	0x034C17B0 ADRP X20, 0xF1D000
	0x034C17B4 ADRP X21, 0xC71000
	0x034C17B8 LDRB W8, [X20 + 0x820]
	0x034C17BC LDR X21, [X21 + 0x328]
	0x034C17C0 MOV X19, X0
	0x034C17C4 TBNZ X8, 0x0, 0x34C17DC
	0x034C17C8 ADRP X0, 0xC71000
	0x034C17CC LDR X0, [X0 + 0x328]
	0x034C17D0 BL 0x1C16CF4
	0x034C17D4 MOVZ W8, 0x1
	0x034C17D8 STRB W8, [X20 + 0x820]
	0x034C17DC LDR X0, [X21]
	0x034C17E0 LDR W8, [X0 + 0xE0]
	0x034C17E4 CBNZ W8, 0x34C17EC
	0x034C17E8 BL 0x1C16DFC
	0x034C17EC MOV X0, X19
	0x034C17F0 BL 0x34C1800

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1800]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43638784
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1188
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1800], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_AssetFileDownloadUpdate_GetBytesTotalLong(System.IntPtr obj)

Disassembly:
	0x034C17F4 LDP X20, X19, [X31 + 0x10]
	0x034C17F8 LDP X30, X21, [X31], #0x20
	0x034C17FC B 0x34B3B78
	0x034C1800 SUB X31, X31, 0x50
	0x034C1804 STR X30, [X31 + 0x30]
	0x034C1808 STP X20, X19, [X31 + 0x40]
	0x034C180C ADRP X20, 0xF1D000
	0x034C1810 LDR X8, [X20 + 0x828]
	0x034C1814 MOV X19, X0
	0x034C1818 CBNZ X8, 0x34C1864
	0x034C181C ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1820 LDR V0, [X12 + 0x5B8]
	0x034C1824 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1828 ADRP X10, 0xFFFFFFFFFD62D000
	0x034C182C ADD X8, X8, 0xDD2
	0x034C1830 MOVZ W9, 0x11
	0x034C1834 ADD X10, X10, 0x840
	0x034C1838 MOVZ W11, 0x22
	0x034C183C MOVZ W13, 0x8
	0x034C1840 ADD X0, X31, 0x0
	0x034C1844 STP X8, X9, [X31]
	0x034C1848 STP X10, X11, [X31 + 0x10]
	0x034C184C STR W13, [X31 + 0x28]
	0x034C1850 STR D0, [X31 + 0x20]
	0x034C1854 STRB W31, [X31 + 0x2C]
	0x034C1858 BL 0x1C1729C
	0x034C185C MOV X8, X0
	0x034C1860 STR X0, [X20 + 0x828]
	0x034C1864 MOV X0, X19
	0x034C1868 BLR X8
	0x034C186C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1808]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43778048
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 597
	017 Move W11, 45
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1808], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int32 ovr_AssetFileDownloadUpdate_GetBytesTransferred(System.IntPtr obj)

Disassembly:
	0x034C1870 LDR X30, [X31 + 0x30]
	0x034C1874 ADD X31, X31, 0x50
	0x034C1878 RET
	0x034C187C STP X30, X21, [X31 - 0x20]!
	0x034C1880 STP X20, X19, [X31 + 0x10]
	0x034C1884 ADRP X20, 0xF1D000
	0x034C1888 ADRP X21, 0xC71000
	0x034C188C LDRB W8, [X20 + 0x830]
	0x034C1890 LDR X21, [X21 + 0x328]
	0x034C1894 MOV X19, X0
	0x034C1898 TBNZ X8, 0x0, 0x34C18B0
	0x034C189C ADRP X0, 0xC71000
	0x034C18A0 LDR X0, [X0 + 0x328]
	0x034C18A4 BL 0x1C16CF4
	0x034C18A8 MOVZ W8, 0x1
	0x034C18AC STRB W8, [X20 + 0x830]
	0x034C18B0 LDR X0, [X21]
	0x034C18B4 LDR W8, [X0 + 0xE0]
	0x034C18B8 CBNZ W8, 0x34C18C0
	0x034C18BC BL 0x1C16DFC
	0x034C18C0 MOV X0, X19
	0x034C18C4 BL 0x34C18E8
	0x034C18C8 MOV W20, W0
	0x034C18CC MOV X0, X19
	0x034C18D0 BL 0x34C1964
	0x034C18D4 MOV X1, X0
	0x034C18D8 MOV W0, W20
	0x034C18DC LDP X20, X19, [X31 + 0x10]
	0x034C18E0 LDP X30, X21, [X31], #0x20
	0x034C18E4 B 0x34B3ED4
	0x034C18E8 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1816]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 817
	017 Move W11, 47
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1816], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_AssetFileDownloadUpdate_GetBytesTransferredLong(System.IntPtr obj)

Disassembly:
	0x034C18EC STR X30, [X31 + 0x30]
	0x034C18F0 STP X20, X19, [X31 + 0x40]
	0x034C18F4 ADRP X20, 0xF1D000
	0x034C18F8 LDR X8, [X20 + 0xC28]
	0x034C18FC MOV X19, X0
	0x034C1900 CBNZ X8, 0x34C194C
	0x034C1904 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1908 LDR V0, [X12 + 0x5B8]
	0x034C190C ADRP X8, 0xFFFFFFFFFD652000
	0x034C1910 ADRP X10, 0xFFFFFFFFFD658000
	0x034C1914 ADD X8, X8, 0xDD2
	0x034C1918 MOVZ W9, 0x11
	0x034C191C ADD X10, X10, 0xE96
	0x034C1920 MOVZ W11, 0x27
	0x034C1924 MOVZ W13, 0x8
	0x034C1928 ADD X0, X31, 0x0
	0x034C192C STP X8, X9, [X31]
	0x034C1930 STP X10, X11, [X31 + 0x10]
	0x034C1934 STR W13, [X31 + 0x28]
	0x034C1938 STR D0, [X31 + 0x20]
	0x034C193C STRB W31, [X31 + 0x2C]
	0x034C1940 BL 0x1C1729C
	0x034C1944 MOV X8, X0
	0x034C1948 STR X0, [X20 + 0xC28]
	0x034C194C MOV X0, X19
	0x034C1950 BLR X8
	0x034C1954 LDP X20, X19, [X31 + 0x40]
	0x034C1958 LDR X30, [X31 + 0x30]
	0x034C195C ADD X31, X31, 0x50
	0x034C1960 RET
	0x034C1964 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1824]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43630592
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 732
	017 Move W11, 51
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1824], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_AssetFileDownloadUpdate_GetCompleted(System.IntPtr obj)

Disassembly:
	0x034C1968 STR X30, [X31 + 0x30]
	0x034C196C STP X20, X19, [X31 + 0x40]
	0x034C1970 ADRP X20, 0xF1D000
	0x034C1974 LDR X8, [X20 + 0x838]
	0x034C1978 MOV X19, X0
	0x034C197C CBNZ X8, 0x34C19C8
	0x034C1980 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1984 LDR V0, [X12 + 0x5B8]
	0x034C1988 ADRP X8, 0xFFFFFFFFFD652000
	0x034C198C ADRP X10, 0xFFFFFFFFFD64F000
	0x034C1990 ADD X8, X8, 0xDD2
	0x034C1994 MOVZ W9, 0x11
	0x034C1998 ADD X10, X10, 0x46D
	0x034C199C MOVZ W11, 0x1F
	0x034C19A0 MOVZ W13, 0x8
	0x034C19A4 ADD X0, X31, 0x0
	0x034C19A8 STP X8, X9, [X31]
	0x034C19AC STP X10, X11, [X31 + 0x10]
	0x034C19B0 STR W13, [X31 + 0x28]
	0x034C19B4 STR D0, [X31 + 0x20]
	0x034C19B8 STRB W31, [X31 + 0x2C]
	0x034C19BC BL 0x1C1729C
	0x034C19C0 MOV X8, X0
	0x034C19C4 STR X0, [X20 + 0x838]
	0x034C19C8 MOV X0, X19
	0x034C19CC BLR X8
	0x034C19D0 LDP X20, X19, [X31 + 0x40]
	0x034C19D4 LDR X30, [X31 + 0x30]
	0x034C19D8 ADD X31, X31, 0x50
	0x034C19DC RET
	0x034C19E0 SUB X31, X31, 0x50
	0x034C19E4 STR X30, [X31 + 0x30]
	0x034C19E8 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1832]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1842
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1832], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_AvatarEditorResult_GetRequestSent(System.IntPtr obj)

Disassembly:
	0x034C19EC ADRP X20, 0xF1D000
	0x034C19F0 LDR X8, [X20 + 0x840]
	0x034C19F4 MOV X19, X0
	0x034C19F8 CBNZ X8, 0x34C1A44
	0x034C19FC ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1A00 LDR V0, [X12 + 0x5B8]
	0x034C1A04 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1A08 ADRP X10, 0xFFFFFFFFFD665000
	0x034C1A0C ADD X8, X8, 0xDD2
	0x034C1A10 MOVZ W9, 0x11
	0x034C1A14 ADD X10, X10, 0x364
	0x034C1A18 MOVZ W11, 0x25
	0x034C1A1C MOVZ W13, 0x8
	0x034C1A20 ADD X0, X31, 0x0
	0x034C1A24 STP X8, X9, [X31]
	0x034C1A28 STP X10, X11, [X31 + 0x10]
	0x034C1A2C STR W13, [X31 + 0x28]
	0x034C1A30 STR D0, [X31 + 0x20]
	0x034C1A34 STRB W31, [X31 + 0x2C]
	0x034C1A38 BL 0x1C1729C
	0x034C1A3C MOV X8, X0
	0x034C1A40 STR X0, [X20 + 0x840]
	0x034C1A44 MOV X0, X19
	0x034C1A48 BLR X8
	0x034C1A4C LDP X20, X19, [X31 + 0x40]
	0x034C1A50 LDR X30, [X31 + 0x30]
	0x034C1A54 ADD X31, X31, 0x50
	0x034C1A58 RET
	0x034C1A5C SUB X31, X31, 0x50
	0x034C1A60 STR X30, [X31 + 0x30]
	0x034C1A64 STP X20, X19, [X31 + 0x40]
	0x034C1A68 ADRP X20, 0xF1D000
	0x034C1A6C LDR X8, [X20 + 0x848]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1840]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43622400
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 800
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1840], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.UInt64 ovr_BlockedUser_GetId(System.IntPtr obj)

Disassembly:
	0x034C1A70 MOV X19, X0
	0x034C1A74 CBNZ X8, 0x34C1AC0
	0x034C1A78 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1A7C LDR V0, [X12 + 0x5B8]
	0x034C1A80 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1A84 ADRP X10, 0xFFFFFFFFFD666000
	0x034C1A88 ADD X8, X8, 0xDD2
	0x034C1A8C MOVZ W9, 0x11
	0x034C1A90 ADD X10, X10, 0xD99
	0x034C1A94 MOVZ W11, 0x18
	0x034C1A98 MOVZ W13, 0x8
	0x034C1A9C ADD X0, X31, 0x0
	0x034C1AA0 STP X8, X9, [X31]
	0x034C1AA4 STP X10, X11, [X31 + 0x10]
	0x034C1AA8 STR W13, [X31 + 0x28]
	0x034C1AAC STR D0, [X31 + 0x20]
	0x034C1AB0 STRB W31, [X31 + 0x2C]
	0x034C1AB4 BL 0x1C1729C
	0x034C1AB8 MOV X8, X0
	0x034C1ABC STR X0, [X20 + 0x848]
	0x034C1AC0 MOV X0, X19
	0x034C1AC4 BLR X8
	0x034C1AC8 LDP X20, X19, [X31 + 0x40]
	0x034C1ACC LDR X30, [X31 + 0x30]
	0x034C1AD0 ADD X31, X31, 0x50
	0x034C1AD4 RET
	0x034C1AD8 SUB X31, X31, 0x50
	0x034C1ADC STR X30, [X31 + 0x30]
	0x034C1AE0 STP X20, X19, [X31 + 0x40]
	0x034C1AE4 ADRP X20, 0xF1D000
	0x034C1AE8 LDR X8, [X20 + 0x850]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1848]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43704320
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 202
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1848], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_BlockedUserArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C1AEC MOV X19, X0
	0x034C1AF0 CBNZ X8, 0x34C1B3C
	0x034C1AF4 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1AF8 LDR V0, [X12 + 0x5B8]
	0x034C1AFC ADRP X8, 0xFFFFFFFFFD652000
	0x034C1B00 ADRP X10, 0xFFFFFFFFFD652000
	0x034C1B04 ADD X8, X8, 0xDD2
	0x034C1B08 MOVZ W9, 0x11
	0x034C1B0C ADD X10, X10, 0xE67
	0x034C1B10 MOVZ W11, 0x1A
	0x034C1B14 MOVZ W13, 0x8
	0x034C1B18 ADD X0, X31, 0x0
	0x034C1B1C STP X8, X9, [X31]
	0x034C1B20 STP X10, X11, [X31 + 0x10]
	0x034C1B24 STR W13, [X31 + 0x28]
	0x034C1B28 STR D0, [X31 + 0x20]
	0x034C1B2C STRB W31, [X31 + 0x2C]
	0x034C1B30 BL 0x1C1729C
	0x034C1B34 MOV X8, X0
	0x034C1B38 STR X0, [X20 + 0x850]
	0x034C1B3C MOV X0, X19
	0x034C1B40 BLR X8
	0x034C1B44 LDP X20, X19, [X31 + 0x40]
	0x034C1B48 LDR X30, [X31 + 0x30]
	0x034C1B4C ADD X31, X31, 0x50
	0x034C1B50 RET
	0x034C1B54 SUB X31, X31, 0x50
	0x034C1B58 STR X30, [X31 + 0x30]
	0x034C1B5C STP X20, X19, [X31 + 0x40]
	0x034C1B60 ADRP X20, 0xF1D000
	0x034C1B64 LDR X8, [X20 + 0x858]
	0x034C1B68 MOV X19, X0
	0x034C1B6C CBNZ X8, 0x34C1BB8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1E000
	007 Move X8, [X21+1856]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43855872
	013 Move V0, [X12+1464]
	014 Move X8, -43700224
	015 Move X10, -43618304
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3396
	019 Move W11, 31
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1856], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_BlockedUserArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034C1B70 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1B74 LDR V0, [X12 + 0x5B8]
	0x034C1B78 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1B7C ADRP X10, 0xFFFFFFFFFD647000
	0x034C1B80 ADD X8, X8, 0xDD2
	0x034C1B84 MOVZ W9, 0x11
	0x034C1B88 ADD X10, X10, 0x535
	0x034C1B8C MOVZ W11, 0x1B
	0x034C1B90 MOVZ W13, 0x8
	0x034C1B94 ADD X0, X31, 0x0
	0x034C1B98 STP X8, X9, [X31]
	0x034C1B9C STP X10, X11, [X31 + 0x10]
	0x034C1BA0 STR W13, [X31 + 0x28]
	0x034C1BA4 STR D0, [X31 + 0x20]
	0x034C1BA8 STRB W31, [X31 + 0x2C]
	0x034C1BAC BL 0x1C1729C
	0x034C1BB0 MOV X8, X0
	0x034C1BB4 STR X0, [X20 + 0x858]
	0x034C1BB8 MOV X0, X19
	0x034C1BBC BLR X8
	0x034C1BC0 LDP X20, X19, [X31 + 0x40]
	0x034C1BC4 LDR X30, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1E000
	006 Move X21, 0xC72000
	007 Move W8, [X20+1864]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC72000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1864], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_BlockedUserArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_BlockedUserArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C1BC8 ADD X31, X31, 0x50
	0x034C1BCC RET
	0x034C1BD0 STP X30, X21, [X31 - 0x20]!
	0x034C1BD4 STP X20, X19, [X31 + 0x10]
	0x034C1BD8 ADRP X20, 0xF1D000
	0x034C1BDC ADRP X21, 0xC71000
	0x034C1BE0 LDRB W8, [X20 + 0x860]
	0x034C1BE4 LDR X21, [X21 + 0x328]
	0x034C1BE8 MOV X19, X0
	0x034C1BEC TBNZ X8, 0x0, 0x34C1C04
	0x034C1BF0 ADRP X0, 0xC71000
	0x034C1BF4 LDR X0, [X0 + 0x328]
	0x034C1BF8 BL 0x1C16CF4
	0x034C1BFC MOVZ W8, 0x1
	0x034C1C00 STRB W8, [X20 + 0x860]
	0x034C1C04 LDR X0, [X21]
	0x034C1C08 LDR W8, [X0 + 0xE0]
	0x034C1C0C CBNZ W8, 0x34C1C14
	0x034C1C10 BL 0x1C16DFC
	0x034C1C14 MOV X0, X19
	0x034C1C18 BL 0x34C1C28
	0x034C1C1C LDP X20, X19, [X31 + 0x10]
	0x034C1C20 LDP X30, X21, [X31], #0x20
	0x034C1C24 B 0x34B3D04
	0x034C1C28 SUB X31, X31, 0x50
	0x034C1C2C STR X30, [X31 + 0x30]
	0x034C1C30 STP X20, X19, [X31 + 0x40]
	0x034C1C34 ADRP X20, 0xF1D000
	0x034C1C38 LDR X8, [X20 + 0x868]
	0x034C1C3C MOV X19, X0
	0x034C1C40 CBNZ X8, 0x34C1C8C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1872]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1752
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1872], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_BlockedUserArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C1C44 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1C48 LDR V0, [X12 + 0x5B8]
	0x034C1C4C ADRP X8, 0xFFFFFFFFFD652000
	0x034C1C50 ADRP X10, 0xFFFFFFFFFD64B000
	0x034C1C54 ADD X8, X8, 0xDD2
	0x034C1C58 MOVZ W9, 0x11
	0x034C1C5C ADD X10, X10, 0x361
	0x034C1C60 MOVZ W11, 0x1F
	0x034C1C64 MOVZ W13, 0x8
	0x034C1C68 ADD X0, X31, 0x0
	0x034C1C6C STP X8, X9, [X31]
	0x034C1C70 STP X10, X11, [X31 + 0x10]
	0x034C1C74 STR W13, [X31 + 0x28]
	0x034C1C78 STR D0, [X31 + 0x20]
	0x034C1C7C STRB W31, [X31 + 0x2C]
	0x034C1C80 BL 0x1C1729C
	0x034C1C84 MOV X8, X0
	0x034C1C88 STR X0, [X20 + 0x868]
	0x034C1C8C MOV X0, X19
	0x034C1C90 BLR X8
	0x034C1C94 LDP X20, X19, [X31 + 0x40]
	0x034C1C98 LDR X30, [X31 + 0x30]
	0x034C1C9C ADD X31, X31, 0x50
	0x034C1CA0 RET
	0x034C1CA4 SUB X31, X31, 0x50
	0x034C1CA8 STR X30, [X31 + 0x30]
	0x034C1CAC STP X20, X19, [X31 + 0x40]
	0x034C1CB0 ADRP X20, 0xF1D000
	0x034C1CB4 LDR X8, [X20 + 0x870]
	0x034C1CB8 MOV X19, X0
	0x034C1CBC CBNZ X8, 0x34C1D08

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1880]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43630592
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 784
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1880], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_BlockedUserArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034C1CC0 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1CC4 LDR V0, [X12 + 0x5B8]
	0x034C1CC8 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1CCC ADRP X10, 0xFFFFFFFFFD668000
	0x034C1CD0 ADD X8, X8, 0xDD2
	0x034C1CD4 MOVZ W9, 0x11
	0x034C1CD8 ADD X10, X10, 0xDD2
	0x034C1CDC MOVZ W11, 0x1A
	0x034C1CE0 MOVZ W13, 0x8
	0x034C1CE4 ADD X0, X31, 0x0
	0x034C1CE8 STP X8, X9, [X31]
	0x034C1CEC STP X10, X11, [X31 + 0x10]
	0x034C1CF0 STR W13, [X31 + 0x28]
	0x034C1CF4 STR D0, [X31 + 0x20]
	0x034C1CF8 STRB W31, [X31 + 0x2C]
	0x034C1CFC BL 0x1C1729C
	0x034C1D00 MOV X8, X0
	0x034C1D04 STR X0, [X20 + 0x870]
	0x034C1D08 MOV X0, X19
	0x034C1D0C BLR X8
	0x034C1D10 LDP X20, X19, [X31 + 0x40]
	0x034C1D14 LDR X30, [X31 + 0x30]
	0x034C1D18 ADD X31, X31, 0x50
	0x034C1D1C RET
	0x034C1D20 SUB X31, X31, 0x50
	0x034C1D24 STP X30, X21, [X31 + 0x30]
	0x034C1D28 STP X20, X19, [X31 + 0x40]
	0x034C1D2C ADRP X21, 0xF1D000
	0x034C1D30 LDR X8, [X21 + 0x878]
	0x034C1D34 MOV X19, X1
	0x034C1D38 MOV X20, X0
	0x034C1D3C CBNZ X8, 0x34C1D88
	0x034C1D40 ADRP X12, 0xFFFFFFFFFD62C000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1888]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43786240
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1094
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1888], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: Oculus.Platform.ChallengeCreationType ovr_Challenge_GetCreationType(System.IntPtr obj)

Disassembly:
	0x034C1D44 LDR V0, [X12 + 0x5B8]
	0x034C1D48 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1D4C ADRP X10, 0xFFFFFFFFFD65B000
	0x034C1D50 ADD X8, X8, 0xDD2
	0x034C1D54 MOVZ W9, 0x11
	0x034C1D58 ADD X10, X10, 0x226
	0x034C1D5C MOVZ W11, 0x22
	0x034C1D60 MOVZ W13, 0x10
	0x034C1D64 ADD X0, X31, 0x0
	0x034C1D68 STP X8, X9, [X31]
	0x034C1D6C STP X10, X11, [X31 + 0x10]
	0x034C1D70 STR W13, [X31 + 0x28]
	0x034C1D74 STR D0, [X31 + 0x20]
	0x034C1D78 STRB W31, [X31 + 0x2C]
	0x034C1D7C BL 0x1C1729C
	0x034C1D80 MOV X8, X0
	0x034C1D84 STR X0, [X21 + 0x878]
	0x034C1D88 MOV X0, X20
	0x034C1D8C MOV X1, X19
	0x034C1D90 BLR X8
	0x034C1D94 LDP X20, X19, [X31 + 0x40]
	0x034C1D98 LDP X30, X21, [X31 + 0x30]
	0x034C1D9C ADD X31, X31, 0x50
	0x034C1DA0 RET
	0x034C1DA4 STP X30, X21, [X31 - 0x20]!
	0x034C1DA8 STP X20, X19, [X31 + 0x10]
	0x034C1DAC ADRP X20, 0xF1D000
	0x034C1DB0 ADRP X21, 0xC71000
	0x034C1DB4 LDRB W8, [X20 + 0x880]
	0x034C1DB8 LDR X21, [X21 + 0x328]
	0x034C1DBC MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1896]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43618304
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3428
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1896], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Challenge_GetDescription(System.IntPtr obj)

Disassembly:
	0x034C1DC0 TBNZ X8, 0x0, 0x34C1DD8
	0x034C1DC4 ADRP X0, 0xC71000
	0x034C1DC8 LDR X0, [X0 + 0x328]
	0x034C1DCC BL 0x1C16CF4
	0x034C1DD0 MOVZ W8, 0x1
	0x034C1DD4 STRB W8, [X20 + 0x880]
	0x034C1DD8 LDR X0, [X21]
	0x034C1DDC LDR W8, [X0 + 0xE0]
	0x034C1DE0 CBNZ W8, 0x34C1DE8
	0x034C1DE4 BL 0x1C16DFC
	0x034C1DE8 MOV X0, X19
	0x034C1DEC BL 0x34C1DFC
	0x034C1DF0 LDP X20, X19, [X31 + 0x10]
	0x034C1DF4 LDP X30, X21, [X31], #0x20
	0x034C1DF8 B 0x34B3B78
	0x034C1DFC SUB X31, X31, 0x50
	0x034C1E00 STR X30, [X31 + 0x30]
	0x034C1E04 STP X20, X19, [X31 + 0x40]
	0x034C1E08 ADRP X20, 0xF1D000
	0x034C1E0C LDR X8, [X20 + 0x888]
	0x034C1E10 MOV X19, X0
	0x034C1E14 CBNZ X8, 0x34C1E60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1E000
	006 Move X21, 0xC72000
	007 Move W8, [X20+1904]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC72000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1904], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Challenge_GetDescription_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Challenge_GetDescription_Native(System.IntPtr obj)

Disassembly:
	0x034C1E18 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1E1C LDR V0, [X12 + 0x5B8]
	0x034C1E20 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1E24 ADRP X10, 0xFFFFFFFFFD65F000
	0x034C1E28 ADD X8, X8, 0xDD2
	0x034C1E2C MOVZ W9, 0x11
	0x034C1E30 ADD X10, X10, 0x19C
	0x034C1E34 MOVZ W11, 0x22
	0x034C1E38 MOVZ W13, 0x8
	0x034C1E3C ADD X0, X31, 0x0
	0x034C1E40 STP X8, X9, [X31]
	0x034C1E44 STP X10, X11, [X31 + 0x10]
	0x034C1E48 STR W13, [X31 + 0x28]
	0x034C1E4C STR D0, [X31 + 0x20]
	0x034C1E50 STRB W31, [X31 + 0x2C]
	0x034C1E54 BL 0x1C1729C
	0x034C1E58 MOV X8, X0
	0x034C1E5C STR X0, [X20 + 0x888]
	0x034C1E60 MOV X0, X19
	0x034C1E64 BLR X8
	0x034C1E68 LDP X20, X19, [X31 + 0x40]
	0x034C1E6C LDR X30, [X31 + 0x30]
	0x034C1E70 ADD X31, X31, 0x50
	0x034C1E74 RET
	0x034C1E78 STP X30, X21, [X31 - 0x20]!
	0x034C1E7C STP X20, X19, [X31 + 0x10]
	0x034C1E80 ADRP X20, 0xF1D000
	0x034C1E84 ADRP X21, 0xC71000
	0x034C1E88 LDRB W8, [X20 + 0x890]
	0x034C1E8C LDR X21, [X21 + 0x328]
	0x034C1E90 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1912]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43675648
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3572
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1912], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.DateTime ovr_Challenge_GetEndDate(System.IntPtr obj)

Disassembly:
	0x034C1E94 TBNZ X8, 0x0, 0x34C1EAC
	0x034C1E98 ADRP X0, 0xC71000
	0x034C1E9C LDR X0, [X0 + 0x328]
	0x034C1EA0 BL 0x1C16CF4
	0x034C1EA4 MOVZ W8, 0x1
	0x034C1EA8 STRB W8, [X20 + 0x890]
	0x034C1EAC LDR X0, [X21]
	0x034C1EB0 LDR W8, [X0 + 0xE0]
	0x034C1EB4 CBNZ W8, 0x34C1EBC
	0x034C1EB8 BL 0x1C16DFC
	0x034C1EBC MOV X0, X19
	0x034C1EC0 BL 0x34C1ED0
	0x034C1EC4 LDP X20, X19, [X31 + 0x10]
	0x034C1EC8 LDP X30, X21, [X31], #0x20
	0x034C1ECC B 0x34B3B78
	0x034C1ED0 SUB X31, X31, 0x50
	0x034C1ED4 STR X30, [X31 + 0x30]
	0x034C1ED8 STP X20, X19, [X31 + 0x40]
	0x034C1EDC ADRP X20, 0xF1D000
	0x034C1EE0 LDR X8, [X20 + 0x898]
	0x034C1EE4 MOV X19, X0
	0x034C1EE8 CBNZ X8, 0x34C1F34

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1E000
	006 Move X21, 0xC72000
	007 Move W8, [X20+1920]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC72000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1920], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Challenge_GetEndDate_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.DateTimeFromNative, X0
	031 Return X0

Method: System.UInt64 ovr_Challenge_GetEndDate_Native(System.IntPtr obj)

Disassembly:
	0x034C1EEC ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1EF0 LDR V0, [X12 + 0x5B8]
	0x034C1EF4 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1EF8 ADRP X10, 0xFFFFFFFFFD641000
	0x034C1EFC ADD X8, X8, 0xDD2
	0x034C1F00 MOVZ W9, 0x11
	0x034C1F04 ADD X10, X10, 0x32F
	0x034C1F08 MOVZ W11, 0x26
	0x034C1F0C MOVZ W13, 0x8
	0x034C1F10 ADD X0, X31, 0x0
	0x034C1F14 STP X8, X9, [X31]
	0x034C1F18 STP X10, X11, [X31 + 0x10]
	0x034C1F1C STR W13, [X31 + 0x28]
	0x034C1F20 STR D0, [X31 + 0x20]
	0x034C1F24 STRB W31, [X31 + 0x2C]
	0x034C1F28 BL 0x1C1729C
	0x034C1F2C MOV X8, X0
	0x034C1F30 STR X0, [X20 + 0x898]
	0x034C1F34 MOV X0, X19
	0x034C1F38 BLR X8
	0x034C1F3C LDP X20, X19, [X31 + 0x40]
	0x034C1F40 LDR X30, [X31 + 0x30]
	0x034C1F44 ADD X31, X31, 0x50
	0x034C1F48 RET
	0x034C1F4C SUB X31, X31, 0x50
	0x034C1F50 STR X30, [X31 + 0x30]
	0x034C1F54 STP X20, X19, [X31 + 0x40]
	0x034C1F58 ADRP X20, 0xF1D000
	0x034C1F5C LDR X8, [X20 + 0x8A0]
	0x034C1F60 MOV X19, X0
	0x034C1F64 CBNZ X8, 0x34C1FB0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1928]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43610112
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3483
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1928], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Challenge_GetID(System.IntPtr obj)

Disassembly:
	0x034C1F68 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1F6C LDR V0, [X12 + 0x5B8]
	0x034C1F70 ADRP X8, 0xFFFFFFFFFD652000
	0x034C1F74 ADRP X10, 0xFFFFFFFFFD65C000
	0x034C1F78 ADD X8, X8, 0xDD2
	0x034C1F7C MOVZ W9, 0x11
	0x034C1F80 ADD X10, X10, 0xF2F
	0x034C1F84 MOVZ W11, 0x1F
	0x034C1F88 MOVZ W13, 0x8
	0x034C1F8C ADD X0, X31, 0x0
	0x034C1F90 STP X8, X9, [X31]
	0x034C1F94 STP X10, X11, [X31 + 0x10]
	0x034C1F98 STR W13, [X31 + 0x28]
	0x034C1F9C STR D0, [X31 + 0x20]
	0x034C1FA0 STRB W31, [X31 + 0x2C]
	0x034C1FA4 BL 0x1C1729C
	0x034C1FA8 MOV X8, X0
	0x034C1FAC STR X0, [X20 + 0x8A0]
	0x034C1FB0 MOV X0, X19
	0x034C1FB4 BLR X8
	0x034C1FB8 LDP X20, X19, [X31 + 0x40]
	0x034C1FBC LDR X30, [X31 + 0x30]
	0x034C1FC0 ADD X31, X31, 0x50
	0x034C1FC4 RET
	0x034C1FC8 SUB X31, X31, 0x50
	0x034C1FCC STR X30, [X31 + 0x30]
	0x034C1FD0 STP X20, X19, [X31 + 0x40]
	0x034C1FD4 ADRP X20, 0xF1D000
	0x034C1FD8 LDR X8, [X20 + 0x8A8]
	0x034C1FDC MOV X19, X0
	0x034C1FE0 CBNZ X8, 0x34C202C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1936]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43855872
	011 Move V0, [X12+1464]
	012 Move X8, -43700224
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1784
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1936], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Challenge_GetInvitedUsers(System.IntPtr obj)

Disassembly:
	0x034C1FE4 ADRP X12, 0xFFFFFFFFFD62C000
	0x034C1FE8 LDR V0, [X12 + 0x5B8]
	0x034C1FEC ADRP X8, 0xFFFFFFFFFD652000
	0x034C1FF0 ADRP X10, 0xFFFFFFFFFD635000
	0x034C1FF4 ADD X8, X8, 0xDD2
	0x034C1FF8 MOVZ W9, 0x11
	0x034C1FFC ADD X10, X10, 0x70C
	0x034C2000 MOVZ W11, 0x25
	0x034C2004 MOVZ W13, 0x8
	0x034C2008 ADD X0, X31, 0x0
	0x034C200C STP X8, X9, [X31]
	0x034C2010 STP X10, X11, [X31 + 0x10]
	0x034C2014 STR W13, [X31 + 0x28]
	0x034C2018 STR D0, [X31 + 0x20]
	0x034C201C STRB W31, [X31 + 0x2C]
	0x034C2020 BL 0x1C1729C
	0x034C2024 MOV X8, X0
	0x034C2028 STR X0, [X20 + 0x8A8]
	0x034C202C MOV X0, X19
	0x034C2030 BLR X8
	0x034C2034 LDP X20, X19, [X31 + 0x40]
	0x034C2038 LDR X30, [X31 + 0x30]
	0x034C203C ADD X31, X31, 0x50
	0x034C2040 RET
	0x034C2044 SUB X31, X31, 0x50
	0x034C2048 STR X30, [X31 + 0x30]
	0x034C204C STP X20, X19, [X31 + 0x40]
	0x034C2050 ADRP X20, 0xF1C000
	0x034C2054 LDR X8, [X20 + 0x8B0]
	0x034C2058 MOV X19, X0
	0x034C205C CBNZ X8, 0x34C20A8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1E000
	006 Move X8, [X20+1944]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43614208
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3508
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1944], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Challenge_GetLeaderboard(System.IntPtr obj)

Disassembly:
	0x034C2060 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2064 LDR V0, [X12 + 0x5B8]
	0x034C2068 ADRP X8, 0xFFFFFFFFFD651000
	0x034C206C ADRP X10, 0xFFFFFFFFFD664000
	0x034C2070 ADD X8, X8, 0xDD2
	0x034C2074 MOVZ W9, 0x11
	0x034C2078 ADD X10, X10, 0x38A
	0x034C207C MOVZ W11, 0x23
	0x034C2080 MOVZ W13, 0x8
	0x034C2084 ADD X0, X31, 0x0
	0x034C2088 STP X8, X9, [X31]
	0x034C208C STP X10, X11, [X31 + 0x10]
	0x034C2090 STR W13, [X31 + 0x28]
	0x034C2094 STR D0, [X31 + 0x20]
	0x034C2098 STRB W31, [X31 + 0x2C]
	0x034C209C BL 0x1C1729C
	0x034C20A0 MOV X8, X0
	0x034C20A4 STR X0, [X20 + 0x8B0]
	0x034C20A8 MOV X0, X19
	0x034C20AC BLR X8
	0x034C20B0 LDP X20, X19, [X31 + 0x40]
	0x034C20B4 LDR X30, [X31 + 0x30]
	0x034C20B8 CMP W0, 0x0
	0x034C20BC CSET W0, NE
	0x034C20C0 ADD X31, X31, 0x50
	0x034C20C4 RET
	0x034C20C8 SUB X31, X31, 0x50
	0x034C20CC STR X30, [X31 + 0x30]
	0x034C20D0 STP X20, X19, [X31 + 0x40]
	0x034C20D4 ADRP X20, 0xF1C000
	0x034C20D8 LDR X8, [X20 + 0x8B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+1952]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43708416
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 224
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1952], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Challenge_GetParticipants(System.IntPtr obj)

Disassembly:
	0x034C20DC MOV X19, X0
	0x034C20E0 CBNZ X8, 0x34C212C
	0x034C20E4 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C20E8 LDR V0, [X12 + 0x5B8]
	0x034C20EC ADRP X8, 0xFFFFFFFFFD651000
	0x034C20F0 ADRP X10, 0xFFFFFFFFFD636000
	0x034C20F4 ADD X8, X8, 0xDD2
	0x034C20F8 MOVZ W9, 0x11
	0x034C20FC ADD X10, X10, 0x70C
	0x034C2100 MOVZ W11, 0x27
	0x034C2104 MOVZ W13, 0x8
	0x034C2108 ADD X0, X31, 0x0
	0x034C210C STP X8, X9, [X31]
	0x034C2110 STP X10, X11, [X31 + 0x10]
	0x034C2114 STR W13, [X31 + 0x28]
	0x034C2118 STR D0, [X31 + 0x20]
	0x034C211C STRB W31, [X31 + 0x2C]
	0x034C2120 BL 0x1C1729C
	0x034C2124 MOV X8, X0
	0x034C2128 STR X0, [X20 + 0x8B8]
	0x034C212C MOV X0, X19
	0x034C2130 BLR X8
	0x034C2134 LDP X20, X19, [X31 + 0x40]
	0x034C2138 LDR X30, [X31 + 0x30]
	0x034C213C CMP W0, 0x0
	0x034C2140 CSET W0, NE
	0x034C2144 ADD X31, X31, 0x50
	0x034C2148 RET
	0x034C214C STP X30, X21, [X31 - 0x20]!
	0x034C2150 STP X20, X19, [X31 + 0x10]
	0x034C2154 ADRP X20, 0xF1C000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+1960]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43626496
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 838
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1960], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.DateTime ovr_Challenge_GetStartDate(System.IntPtr obj)

Disassembly:
	0x034C2158 ADRP X21, 0xC70000
	0x034C215C LDRB W8, [X20 + 0x8C0]
	0x034C2160 LDR X21, [X21 + 0x328]
	0x034C2164 MOV X19, X0
	0x034C2168 TBNZ X8, 0x0, 0x34C2180
	0x034C216C ADRP X0, 0xC70000
	0x034C2170 LDR X0, [X0 + 0x328]
	0x034C2174 BL 0x1C16CF4
	0x034C2178 MOVZ W8, 0x1
	0x034C217C STRB W8, [X20 + 0x8C0]
	0x034C2180 LDR X0, [X21]
	0x034C2184 LDR W8, [X0 + 0xE0]
	0x034C2188 CBNZ W8, 0x34C2190
	0x034C218C BL 0x1C16DFC
	0x034C2190 MOV X0, X19
	0x034C2194 BL 0x34C21A4
	0x034C2198 LDP X20, X19, [X31 + 0x10]
	0x034C219C LDP X30, X21, [X31], #0x20
	0x034C21A0 B 0x34B3B78
	0x034C21A4 SUB X31, X31, 0x50
	0x034C21A8 STR X30, [X31 + 0x30]
	0x034C21AC STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1D000
	006 Move X21, 0xC71000
	007 Move W8, [X20+1968]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC71000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1968], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Challenge_GetStartDate_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.DateTimeFromNative, X0
	031 Return X0

Method: System.UInt64 ovr_Challenge_GetStartDate_Native(System.IntPtr obj)

Disassembly:
	0x034C21B0 ADRP X20, 0xF1C000
	0x034C21B4 LDR X8, [X20 + 0x8C8]
	0x034C21B8 MOV X19, X0
	0x034C21BC CBNZ X8, 0x34C2208
	0x034C21C0 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C21C4 LDR V0, [X12 + 0x5B8]
	0x034C21C8 ADRP X8, 0xFFFFFFFFFD651000
	0x034C21CC ADRP X10, 0xFFFFFFFFFD669000
	0x034C21D0 ADD X8, X8, 0xDD2
	0x034C21D4 MOVZ W9, 0x11
	0x034C21D8 ADD X10, X10, 0xC50
	0x034C21DC MOVZ W11, 0x19
	0x034C21E0 MOVZ W13, 0x8
	0x034C21E4 ADD X0, X31, 0x0
	0x034C21E8 STP X8, X9, [X31]
	0x034C21EC STP X10, X11, [X31 + 0x10]
	0x034C21F0 STR W13, [X31 + 0x28]
	0x034C21F4 STR D0, [X31 + 0x20]
	0x034C21F8 STRB W31, [X31 + 0x2C]
	0x034C21FC BL 0x1C1729C
	0x034C2200 MOV X8, X0
	0x034C2204 STR X0, [X20 + 0x8C8]
	0x034C2208 MOV X0, X19
	0x034C220C BLR X8
	0x034C2210 LDP X20, X19, [X31 + 0x40]
	0x034C2214 LDR X30, [X31 + 0x30]
	0x034C2218 ADD X31, X31, 0x50
	0x034C221C RET
	0x034C2220 SUB X31, X31, 0x50
	0x034C2224 STR X30, [X31 + 0x30]
	0x034C2228 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+1976]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43741184
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1906
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1976], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Challenge_GetTitle(System.IntPtr obj)

Disassembly:
	0x034C222C ADRP X20, 0xF1C000
	0x034C2230 LDR X8, [X20 + 0x8D0]
	0x034C2234 MOV X19, X0
	0x034C2238 CBNZ X8, 0x34C2284
	0x034C223C ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2240 LDR V0, [X12 + 0x5B8]
	0x034C2244 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2248 ADRP X10, 0xFFFFFFFFFD636000
	0x034C224C ADD X8, X8, 0xDD2
	0x034C2250 MOVZ W9, 0x11
	0x034C2254 ADD X10, X10, 0x734
	0x034C2258 MOVZ W11, 0x17
	0x034C225C MOVZ W13, 0x8
	0x034C2260 ADD X0, X31, 0x0
	0x034C2264 STP X8, X9, [X31]
	0x034C2268 STP X10, X11, [X31 + 0x10]
	0x034C226C STR W13, [X31 + 0x28]
	0x034C2270 STR D0, [X31 + 0x20]
	0x034C2274 STRB W31, [X31 + 0x2C]
	0x034C2278 BL 0x1C1729C
	0x034C227C MOV X8, X0
	0x034C2280 STR X0, [X20 + 0x8D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1D000
	006 Move X21, 0xC71000
	007 Move W8, [X20+1984]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC71000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1984], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Challenge_GetTitle_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Challenge_GetTitle_Native(System.IntPtr obj)

Disassembly:
	0x034C2284 MOV X0, X19
	0x034C2288 BLR X8
	0x034C228C LDP X20, X19, [X31 + 0x40]
	0x034C2290 LDR X30, [X31 + 0x30]
	0x034C2294 ADD X31, X31, 0x50
	0x034C2298 RET
	0x034C229C SUB X31, X31, 0x50
	0x034C22A0 STP X30, X21, [X31 + 0x30]
	0x034C22A4 STP X20, X19, [X31 + 0x40]
	0x034C22A8 ADRP X21, 0xF1C000
	0x034C22AC LDR X8, [X21 + 0x8D8]
	0x034C22B0 MOV X19, X1
	0x034C22B4 MOV X20, X0
	0x034C22B8 CBNZ X8, 0x34C2304
	0x034C22BC ADRP X12, 0xFFFFFFFFFD62B000
	0x034C22C0 LDR V0, [X12 + 0x5B8]
	0x034C22C4 ADRP X8, 0xFFFFFFFFFD651000
	0x034C22C8 ADRP X10, 0xFFFFFFFFFD646000
	0x034C22CC ADD X8, X8, 0xDD2
	0x034C22D0 MOVZ W9, 0x11
	0x034C22D4 ADD X10, X10, 0x551
	0x034C22D8 MOVZ W11, 0x21
	0x034C22DC MOVZ W13, 0x10
	0x034C22E0 ADD X0, X31, 0x0
	0x034C22E4 STP X8, X9, [X31]
	0x034C22E8 STP X10, X11, [X31 + 0x10]
	0x034C22EC STR W13, [X31 + 0x28]
	0x034C22F0 STR D0, [X31 + 0x20]
	0x034C22F4 STRB W31, [X31 + 0x2C]
	0x034C22F8 BL 0x1C1729C
	0x034C22FC MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+1992]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43622400
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3458
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1992], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.ChallengeVisibility ovr_Challenge_GetVisibility(System.IntPtr obj)

Disassembly:
	0x034C2300 STR X0, [X21 + 0x8D8]
	0x034C2304 MOV X0, X20
	0x034C2308 MOV X1, X19
	0x034C230C BLR X8
	0x034C2310 LDP X20, X19, [X31 + 0x40]
	0x034C2314 LDP X30, X21, [X31 + 0x30]
	0x034C2318 ADD X31, X31, 0x50
	0x034C231C RET
	0x034C2320 STP X30, X21, [X31 - 0x20]!
	0x034C2324 STP X20, X19, [X31 + 0x10]
	0x034C2328 ADRP X20, 0xF1C000
	0x034C232C ADRP X21, 0xC70000
	0x034C2330 LDRB W8, [X20 + 0x8E0]
	0x034C2334 LDR X21, [X21 + 0x328]
	0x034C2338 MOV X19, X0
	0x034C233C TBNZ X8, 0x0, 0x34C2354
	0x034C2340 ADRP X0, 0xC70000
	0x034C2344 LDR X0, [X0 + 0x328]
	0x034C2348 BL 0x1C16CF4
	0x034C234C MOVZ W8, 0x1
	0x034C2350 STRB W8, [X20 + 0x8E0]
	0x034C2354 LDR X0, [X21]
	0x034C2358 LDR W8, [X0 + 0xE0]
	0x034C235C CBNZ W8, 0x34C2364
	0x034C2360 BL 0x1C16DFC
	0x034C2364 MOV X0, X19
	0x034C2368 BL 0x34C2378
	0x034C236C LDP X20, X19, [X31 + 0x10]
	0x034C2370 LDP X30, X21, [X31], #0x20
	0x034C2374 B 0x34B3B78
	0x034C2378 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2000]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43814912
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1746
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2000], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_ChallengeArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C237C STR X30, [X31 + 0x30]
	0x034C2380 STP X20, X19, [X31 + 0x40]
	0x034C2384 ADRP X20, 0xF1C000
	0x034C2388 LDR X8, [X20 + 0x8E8]
	0x034C238C MOV X19, X0
	0x034C2390 CBNZ X8, 0x34C23DC
	0x034C2394 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2398 LDR V0, [X12 + 0x5B8]
	0x034C239C ADRP X8, 0xFFFFFFFFFD651000
	0x034C23A0 ADRP X10, 0xFFFFFFFFFD64E000
	0x034C23A4 ADD X8, X8, 0xDD2
	0x034C23A8 MOVZ W9, 0x11
	0x034C23AC ADD X10, X10, 0x48D
	0x034C23B0 MOVZ W11, 0x21
	0x034C23B4 MOVZ W13, 0x8
	0x034C23B8 ADD X0, X31, 0x0
	0x034C23BC STP X8, X9, [X31]
	0x034C23C0 STP X10, X11, [X31 + 0x10]
	0x034C23C4 STR W13, [X31 + 0x28]
	0x034C23C8 STR D0, [X31 + 0x20]
	0x034C23CC STRB W31, [X31 + 0x2C]
	0x034C23D0 BL 0x1C1729C
	0x034C23D4 MOV X8, X0
	0x034C23D8 STR X0, [X20 + 0x8E8]
	0x034C23DC MOV X0, X19
	0x034C23E0 BLR X8
	0x034C23E4 LDP X20, X19, [X31 + 0x40]
	0x034C23E8 LDR X30, [X31 + 0x30]
	0x034C23EC ADD X31, X31, 0x50
	0x034C23F0 RET
	0x034C23F4 SUB X31, X31, 0x50
	0x034C23F8 STR X30, [X31 + 0x30]
	0x034C23FC STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1D000
	007 Move X8, [X21+2008]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43859968
	013 Move V0, [X12+1464]
	014 Move X8, -43704320
	015 Move X10, -43765760
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1883
	019 Move W11, 29
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+2008], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_ChallengeArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034C2400 ADRP X20, 0xF1C000
	0x034C2404 LDR X8, [X20 + 0x8F0]
	0x034C2408 MOV X19, X0
	0x034C240C CBNZ X8, 0x34C2458
	0x034C2410 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2414 LDR V0, [X12 + 0x5B8]
	0x034C2418 ADRP X8, 0xFFFFFFFFFD651000
	0x034C241C ADRP X10, 0xFFFFFFFFFD630000
	0x034C2420 ADD X8, X8, 0xDD2
	0x034C2424 MOVZ W9, 0x11
	0x034C2428 ADD X10, X10, 0x7B0
	0x034C242C MOVZ W11, 0x1E
	0x034C2430 MOVZ W13, 0x8
	0x034C2434 ADD X0, X31, 0x0
	0x034C2438 STP X8, X9, [X31]
	0x034C243C STP X10, X11, [X31 + 0x10]
	0x034C2440 STR W13, [X31 + 0x28]
	0x034C2444 STR D0, [X31 + 0x20]
	0x034C2448 STRB W31, [X31 + 0x2C]
	0x034C244C BL 0x1C1729C
	0x034C2450 MOV X8, X0
	0x034C2454 STR X0, [X20 + 0x8F0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1D000
	006 Move X21, 0xC71000
	007 Move W8, [X20+2016]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC71000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2016], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ChallengeArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ChallengeArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C2458 MOV X0, X19
	0x034C245C BLR X8
	0x034C2460 LDP X20, X19, [X31 + 0x40]
	0x034C2464 LDR X30, [X31 + 0x30]
	0x034C2468 ADD X31, X31, 0x50
	0x034C246C RET
	0x034C2470 SUB X31, X31, 0x50
	0x034C2474 STR X30, [X31 + 0x30]
	0x034C2478 STP X20, X19, [X31 + 0x40]
	0x034C247C ADRP X20, 0xF1C000
	0x034C2480 LDR X8, [X20 + 0x8F8]
	0x034C2484 MOV X19, X0
	0x034C2488 CBNZ X8, 0x34C24D4
	0x034C248C ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2490 LDR V0, [X12 + 0x5B8]
	0x034C2494 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2498 ADRP X10, 0xFFFFFFFFFD63C000
	0x034C249C ADD X8, X8, 0xDD2
	0x034C24A0 MOVZ W9, 0x11
	0x034C24A4 ADD X10, X10, 0x467
	0x034C24A8 MOVZ W11, 0x22
	0x034C24AC MOVZ W13, 0x8
	0x034C24B0 ADD X0, X31, 0x0
	0x034C24B4 STP X8, X9, [X31]
	0x034C24B8 STP X10, X11, [X31 + 0x10]
	0x034C24BC STR W13, [X31 + 0x28]
	0x034C24C0 STR D0, [X31 + 0x20]
	0x034C24C4 STRB W31, [X31 + 0x2C]
	0x034C24C8 BL 0x1C1729C
	0x034C24CC MOV X8, X0
	0x034C24D0 STR X0, [X20 + 0x8F8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2024]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43814912
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1774
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2024], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_ChallengeArray_GetPreviousUrl(System.IntPtr obj)

Disassembly:
	0x034C24D4 MOV X0, X19
	0x034C24D8 BLR X8
	0x034C24DC LDP X20, X19, [X31 + 0x40]
	0x034C24E0 LDR X30, [X31 + 0x30]
	0x034C24E4 CMP W0, 0x0
	0x034C24E8 CSET W0, NE
	0x034C24EC ADD X31, X31, 0x50
	0x034C24F0 RET
	0x034C24F4 SUB X31, X31, 0x50
	0x034C24F8 STR X30, [X31 + 0x30]
	0x034C24FC STP X20, X19, [X31 + 0x40]
	0x034C2500 ADRP X20, 0xF1C000
	0x034C2504 LDR X8, [X20 + 0x900]
	0x034C2508 MOV X19, X0
	0x034C250C CBNZ X8, 0x34C2558
	0x034C2510 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2514 LDR V0, [X12 + 0x5B8]
	0x034C2518 ADRP X8, 0xFFFFFFFFFD651000
	0x034C251C ADRP X10, 0xFFFFFFFFFD636000
	0x034C2520 ADD X8, X8, 0xDD2
	0x034C2524 MOVZ W9, 0x11
	0x034C2528 ADD X10, X10, 0x74C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1D000
	006 Move X21, 0xC71000
	007 Move W8, [X20+2032]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC71000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2032], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ChallengeArray_GetPreviousUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ChallengeArray_GetPreviousUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C252C MOVZ W11, 0x23
	0x034C2530 MOVZ W13, 0x8
	0x034C2534 ADD X0, X31, 0x0
	0x034C2538 STP X8, X9, [X31]
	0x034C253C STP X10, X11, [X31 + 0x10]
	0x034C2540 STR W13, [X31 + 0x28]
	0x034C2544 STR D0, [X31 + 0x20]
	0x034C2548 STRB W31, [X31 + 0x2C]
	0x034C254C BL 0x1C1729C
	0x034C2550 MOV X8, X0
	0x034C2554 STR X0, [X20 + 0x900]
	0x034C2558 MOV X0, X19
	0x034C255C BLR X8
	0x034C2560 LDP X20, X19, [X31 + 0x40]
	0x034C2564 LDR X30, [X31 + 0x30]
	0x034C2568 ADD X31, X31, 0x50
	0x034C256C RET
	0x034C2570 SUB X31, X31, 0x50
	0x034C2574 STR X30, [X31 + 0x30]
	0x034C2578 STP X20, X19, [X31 + 0x40]
	0x034C257C ADRP X20, 0xF1C000
	0x034C2580 LDR X8, [X20 + 0x908]
	0x034C2584 MOV X19, X0
	0x034C2588 CBNZ X8, 0x34C25D4
	0x034C258C ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2590 LDR V0, [X12 + 0x5B8]
	0x034C2594 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2598 ADRP X10, 0xFFFFFFFFFD650000
	0x034C259C ADD X8, X8, 0xDD2
	0x034C25A0 MOVZ W9, 0x11
	0x034C25A4 ADD X10, X10, 0xFD

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2040]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43839488
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1934
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2040], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_ChallengeArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C25A8 MOVZ W11, 0x1D
	0x034C25AC MOVZ W13, 0x8
	0x034C25B0 ADD X0, X31, 0x0
	0x034C25B4 STP X8, X9, [X31]
	0x034C25B8 STP X10, X11, [X31 + 0x10]
	0x034C25BC STR W13, [X31 + 0x28]
	0x034C25C0 STR D0, [X31 + 0x20]
	0x034C25C4 STRB W31, [X31 + 0x2C]
	0x034C25C8 BL 0x1C1729C
	0x034C25CC MOV X8, X0
	0x034C25D0 STR X0, [X20 + 0x908]
	0x034C25D4 MOV X0, X19
	0x034C25D8 BLR X8
	0x034C25DC LDP X20, X19, [X31 + 0x40]
	0x034C25E0 LDR X30, [X31 + 0x30]
	0x034C25E4 ADD X31, X31, 0x50
	0x034C25E8 RET
	0x034C25EC SUB X31, X31, 0x50
	0x034C25F0 STR X30, [X31 + 0x30]
	0x034C25F4 STP X20, X19, [X31 + 0x40]
	0x034C25F8 ADRP X20, 0xF1C000
	0x034C25FC LDR X8, [X20 + 0x910]
	0x034C2600 MOV X19, X0
	0x034C2604 CBNZ X8, 0x34C2650
	0x034C2608 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C260C LDR V0, [X12 + 0x5B8]
	0x034C2610 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2614 ADRP X10, 0xFFFFFFFFFD62E000
	0x034C2618 ADD X8, X8, 0xDD2
	0x034C261C MOVZ W9, 0x11
	0x034C2620 ADD X10, X10, 0x2F8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2048]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43724800
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1166
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2048], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_ChallengeArray_GetTotalCount(System.IntPtr obj)

Disassembly:
	0x034C2624 MOVZ W11, 0x20
	0x034C2628 MOVZ W13, 0x8
	0x034C262C ADD X0, X31, 0x0
	0x034C2630 STP X8, X9, [X31]
	0x034C2634 STP X10, X11, [X31 + 0x10]
	0x034C2638 STR W13, [X31 + 0x28]
	0x034C263C STR D0, [X31 + 0x20]
	0x034C2640 STRB W31, [X31 + 0x2C]
	0x034C2644 BL 0x1C1729C
	0x034C2648 MOV X8, X0
	0x034C264C STR X0, [X20 + 0x910]
	0x034C2650 MOV X0, X19
	0x034C2654 BLR X8
	0x034C2658 LDP X20, X19, [X31 + 0x40]
	0x034C265C LDR X30, [X31 + 0x30]
	0x034C2660 CMP W0, 0x0
	0x034C2664 CSET W0, NE
	0x034C2668 ADD X31, X31, 0x50
	0x034C266C RET
	0x034C2670 STR X30, [X31 - 0x30]!
	0x034C2674 STP X22, X21, [X31 + 0x10]
	0x034C2678 STP X20, X19, [X31 + 0x20]
	0x034C267C ADRP X22, 0xF1C000
	0x034C2680 ADRP X21, 0xC70000
	0x034C2684 LDRB W8, [X22 + 0x918]
	0x034C2688 LDR X21, [X21 + 0x328]
	0x034C268C MOV X20, X1
	0x034C2690 MOV X19, X0
	0x034C2694 TBNZ X8, 0x0, 0x34C26B8
	0x034C2698 ADRP X0, 0xC70000
	0x034C269C LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2056]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 643
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2056], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_ChallengeArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034C26A0 BL 0x1C16CF4
	0x034C26A4 ADRP X0, 0xC59000
	0x034C26A8 LDR X0, [X0 + 0x850]
	0x034C26AC BL 0x1C16CF4
	0x034C26B0 MOVZ W8, 0x1
	0x034C26B4 STRB W8, [X22 + 0x918]
	0x034C26B8 LDR X0, [X21]
	0x034C26BC ADRP X21, 0xC59000
	0x034C26C0 LDR W8, [X0 + 0xE0]
	0x034C26C4 LDR X21, [X21 + 0x850]
	0x034C26C8 CBNZ W8, 0x34C26D0
	0x034C26CC BL 0x1C16DFC
	0x034C26D0 MOV X0, X20
	0x034C26D4 BL 0x34B404C
	0x034C26D8 MOV X20, X0
	0x034C26DC MOV X0, X19
	0x034C26E0 MOV X1, X20
	0x034C26E4 BL 0x34C2720
	0x034C26E8 LDR X8, [X21]
	0x034C26EC MOV W19, W0
	0x034C26F0 LDR W9, [X8 + 0xE0]
	0x034C26F4 CBNZ W9, 0x34C2700
	0x034C26F8 MOV X0, X8
	0x034C26FC BL 0x1C16DFC
	0x034C2700 MOV X0, X20
	0x034C2704 MOV X1, X31
	0x034C2708 BL 0x32C1060
	0x034C270C MOV W0, W19
	0x034C2710 LDP X20, X19, [X31 + 0x20]
	0x034C2714 LDP X22, X21, [X31 + 0x10]
	0x034C2718 LDR X30, [X31], #0x30
	0x034C271C RET
	0x034C2720 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2064]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1610
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2064], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_ChallengeArray_HasPreviousPage(System.IntPtr obj)

Disassembly:
	0x034C2724 STP X30, X21, [X31 + 0x30]
	0x034C2728 STP X20, X19, [X31 + 0x40]
	0x034C272C ADRP X21, 0xF1C000
	0x034C2730 LDR X8, [X21 + 0x920]
	0x034C2734 MOV X19, X1
	0x034C2738 MOV X20, X0
	0x034C273C CBNZ X8, 0x34C2788
	0x034C2740 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2744 LDR V0, [X12 + 0x5B8]
	0x034C2748 ADRP X8, 0xFFFFFFFFFD651000
	0x034C274C ADRP X10, 0xFFFFFFFFFD62C000
	0x034C2750 ADD X8, X8, 0xDD2
	0x034C2754 MOVZ W9, 0x11
	0x034C2758 ADD X10, X10, 0x863
	0x034C275C MOVZ W11, 0x16
	0x034C2760 MOVZ W13, 0x10
	0x034C2764 ADD X0, X31, 0x0
	0x034C2768 STP X8, X9, [X31]
	0x034C276C STP X10, X11, [X31 + 0x10]
	0x034C2770 STR W13, [X31 + 0x28]
	0x034C2774 STR D0, [X31 + 0x20]
	0x034C2778 STRB W31, [X31 + 0x2C]
	0x034C277C BL 0x1C1729C
	0x034C2780 MOV X8, X0
	0x034C2784 STR X0, [X21 + 0x920]
	0x034C2788 MOV X0, X20
	0x034C278C MOV X1, X19
	0x034C2790 BLR X8
	0x034C2794 LDP X20, X19, [X31 + 0x40]
	0x034C2798 LDP X30, X21, [X31 + 0x30]
	0x034C279C ADD X31, X31, 0x50
	0x034C27A0 RET
	0x034C27A4 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2072]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43679744
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3601
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2072], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_ChallengeEntry_GetDisplayScore(System.IntPtr obj)

Disassembly:
	0x034C27A8 STP X30, X21, [X31 + 0x30]
	0x034C27AC STP X20, X19, [X31 + 0x40]
	0x034C27B0 ADRP X21, 0xF1C000
	0x034C27B4 LDR X8, [X21 + 0x930]
	0x034C27B8 MOV W19, W1
	0x034C27BC MOV X20, X0
	0x034C27C0 CBNZ X8, 0x34C280C
	0x034C27C4 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C27C8 LDR V0, [X12 + 0x5B8]
	0x034C27CC ADRP X8, 0xFFFFFFFFFD651000
	0x034C27D0 ADRP X10, 0xFFFFFFFFFD657000
	0x034C27D4 ADD X8, X8, 0xDD2
	0x034C27D8 MOVZ W9, 0x11
	0x034C27DC ADD X10, X10, 0xE34
	0x034C27E0 MOVZ W11, 0x14
	0x034C27E4 MOVZ W13, 0xC
	0x034C27E8 ADD X0, X31, 0x0
	0x034C27EC STP X8, X9, [X31]
	0x034C27F0 STP X10, X11, [X31 + 0x10]
	0x034C27F4 STR W13, [X31 + 0x28]
	0x034C27F8 STR D0, [X31 + 0x20]
	0x034C27FC STRB W31, [X31 + 0x2C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1D000
	006 Move X21, 0xC71000
	007 Move W8, [X20+2080]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC71000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2080], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ChallengeEntry_GetDisplayScore_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ChallengeEntry_GetDisplayScore_Native(System.IntPtr obj)

Disassembly:
	0x034C2800 BL 0x1C1729C
	0x034C2804 MOV X8, X0
	0x034C2808 STR X0, [X21 + 0x930]
	0x034C280C MOV X0, X20
	0x034C2810 MOV W1, W19
	0x034C2814 BLR X8
	0x034C2818 LDP X20, X19, [X31 + 0x40]
	0x034C281C LDP X30, X21, [X31 + 0x30]
	0x034C2820 ADD X31, X31, 0x50
	0x034C2824 RET
	0x034C2828 SUB X31, X31, 0x50
	0x034C282C STP X30, X21, [X31 + 0x30]
	0x034C2830 STP X20, X19, [X31 + 0x40]
	0x034C2834 ADRP X21, 0xF1C000
	0x034C2838 LDR X8, [X21 + 0x948]
	0x034C283C MOV X19, X1
	0x034C2840 MOV X20, X0
	0x034C2844 CBNZ X8, 0x34C2890
	0x034C2848 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C284C LDR V0, [X12 + 0x5B8]
	0x034C2850 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2854 ADRP X10, 0xFFFFFFFFFD669000
	0x034C2858 ADD X8, X8, 0xDD2
	0x034C285C MOVZ W9, 0x11
	0x034C2860 ADD X10, X10, 0xC6A
	0x034C2864 MOVZ W11, 0x16
	0x034C2868 MOVZ W13, 0x10
	0x034C286C ADD X0, X31, 0x0
	0x034C2870 STP X8, X9, [X31]
	0x034C2874 STP X10, X11, [X31 + 0x10]
	0x034C2878 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2088]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43855872
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2112
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2088], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Byte[] ovr_ChallengeEntry_GetExtraData(System.IntPtr obj)

Disassembly:
	0x034C287C STR D0, [X31 + 0x20]
	0x034C2880 STRB W31, [X31 + 0x2C]
	0x034C2884 BL 0x1C1729C
	0x034C2888 MOV X8, X0
	0x034C288C STR X0, [X21 + 0x948]
	0x034C2890 MOV X0, X20
	0x034C2894 MOV X1, X19
	0x034C2898 BLR X8
	0x034C289C LDP X20, X19, [X31 + 0x40]
	0x034C28A0 LDP X30, X21, [X31 + 0x30]
	0x034C28A4 ADD X31, X31, 0x50
	0x034C28A8 RET
	0x034C28AC STP X30, X21, [X31 - 0x20]!
	0x034C28B0 STP X20, X19, [X31 + 0x10]
	0x034C28B4 ADRP X20, 0xF1C000
	0x034C28B8 ADRP X21, 0xC70000
	0x034C28BC LDRB W8, [X20 + 0x950]
	0x034C28C0 LDR X21, [X21 + 0x328]
	0x034C28C4 MOV X19, X0
	0x034C28C8 TBNZ X8, 0x0, 0x34C28E0
	0x034C28CC ADRP X0, 0xC70000
	0x034C28D0 LDR X0, [X0 + 0x328]
	0x034C28D4 BL 0x1C16CF4
	0x034C28D8 MOVZ W8, 0x1
	0x034C28DC STRB W8, [X20 + 0x950]
	0x034C28E0 LDR X0, [X21]
	0x034C28E4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1D000
	006 Move X21, 0xC71000
	007 Move W8, [X20+2096]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC71000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2096], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LeaderboardEntry_GetExtraDataLength, X0
	026 Move W20, W0
	027 Move X0, X19
	028 Call CAPI.ovr_ChallengeEntry_GetExtraData_Native, X0
	029 Move X1, X0
	030 Move W0, W20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call CAPI.BlobFromNative, X0, X1
	036 Return X0

Method: System.IntPtr ovr_ChallengeEntry_GetExtraData_Native(System.IntPtr obj)

Disassembly:
	0x034C2964 STR X0, [X20 + 0x958]
	0x034C2968 MOV X0, X19
	0x034C296C BLR X8
	0x034C2970 LDP X20, X19, [X31 + 0x40]
	0x034C2974 LDR X30, [X31 + 0x30]
	0x034C2978 ADD X31, X31, 0x50
	0x034C297C RET
	0x034C2980 STP X30, X21, [X31 - 0x20]!
	0x034C2984 STP X20, X19, [X31 + 0x10]
	0x034C2988 ADRP X20, 0xF1C000
	0x034C298C ADRP X21, 0xC70000
	0x034C2990 LDRB W8, [X20 + 0x960]
	0x034C2994 LDR X21, [X21 + 0x328]
	0x034C2998 MOV X19, X0
	0x034C299C TBNZ X8, 0x0, 0x34C29B4
	0x034C29A0 ADRP X0, 0xC70000
	0x034C29A4 LDR X0, [X0 + 0x328]
	0x034C29A8 BL 0x1C16CF4
	0x034C29AC MOVZ W8, 0x1
	0x034C29B0 STRB W8, [X20 + 0x960]
	0x034C29B4 LDR X0, [X21]
	0x034C29B8 LDR W8, [X0 + 0xE0]
	0x034C29BC CBNZ W8, 0x34C29C4
	0x034C29C0 BL 0x1C16DFC
	0x034C29C4 MOV X0, X19
	0x034C29C8 BL 0x34C29D8
	0x034C29CC LDP X20, X19, [X31 + 0x10]
	0x034C29D0 LDP X30, X21, [X31], #0x20
	0x034C29D4 B 0x34B3B78
	0x034C29D8 SUB X31, X31, 0x50
	0x034C29DC STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2104]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43716608
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1133
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2104], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt32 ovr_ChallengeEntry_GetExtraDataLength(System.IntPtr obj)

Disassembly:
	0x034C29E0 STP X20, X19, [X31 + 0x40]
	0x034C29E4 ADRP X20, 0xF1C000
	0x034C29E8 LDR X8, [X20 + 0x968]
	0x034C29EC MOV X19, X0
	0x034C29F0 CBNZ X8, 0x34C2A3C
	0x034C29F4 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C29F8 LDR V0, [X12 + 0x5B8]
	0x034C29FC ADRP X8, 0xFFFFFFFFFD651000
	0x034C2A00 ADRP X10, 0xFFFFFFFFFD65A000
	0x034C2A04 ADD X8, X8, 0xDD2
	0x034C2A08 MOVZ W9, 0x11
	0x034C2A0C ADD X10, X10, 0x249
	0x034C2A10 MOVZ W11, 0x22
	0x034C2A14 MOVZ W13, 0x8
	0x034C2A18 ADD X0, X31, 0x0
	0x034C2A1C STP X8, X9, [X31]
	0x034C2A20 STP X10, X11, [X31 + 0x10]
	0x034C2A24 STR W13, [X31 + 0x28]
	0x034C2A28 STR D0, [X31 + 0x20]
	0x034C2A2C STRB W31, [X31 + 0x2C]
	0x034C2A30 BL 0x1C1729C
	0x034C2A34 MOV X8, X0
	0x034C2A38 STR X0, [X20 + 0x968]
	0x034C2A3C MOV X0, X19
	0x034C2A40 BLR X8
	0x034C2A44 LDP X20, X19, [X31 + 0x40]
	0x034C2A48 LDR X30, [X31 + 0x30]
	0x034C2A4C ADD X31, X31, 0x50
	0x034C2A50 RET
	0x034C2A54 STP X30, X21, [X31 - 0x20]!
	0x034C2A58 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2112]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43626496
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 868
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2112], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_ChallengeEntry_GetID(System.IntPtr obj)

Disassembly:
	0x034C2A5C ADRP X20, 0xF1C000
	0x034C2A60 ADRP X21, 0xC70000
	0x034C2A64 LDRB W8, [X20 + 0x970]
	0x034C2A68 LDR X21, [X21 + 0x328]
	0x034C2A6C MOV X19, X0
	0x034C2A70 TBNZ X8, 0x0, 0x34C2A88
	0x034C2A74 ADRP X0, 0xC70000
	0x034C2A78 LDR X0, [X0 + 0x328]
	0x034C2A7C BL 0x1C16CF4
	0x034C2A80 MOVZ W8, 0x1
	0x034C2A84 STRB W8, [X20 + 0x970]
	0x034C2A88 LDR X0, [X21]
	0x034C2A8C LDR W8, [X0 + 0xE0]
	0x034C2A90 CBNZ W8, 0x34C2A98
	0x034C2A94 BL 0x1C16DFC
	0x034C2A98 MOV X0, X19
	0x034C2A9C BL 0x34C2AAC
	0x034C2AA0 LDP X20, X19, [X31 + 0x10]
	0x034C2AA4 LDP X30, X21, [X31], #0x20
	0x034C2AA8 B 0x34B3B78
	0x034C2AAC SUB X31, X31, 0x50
	0x034C2AB0 STR X30, [X31 + 0x30]
	0x034C2AB4 STP X20, X19, [X31 + 0x40]
	0x034C2AB8 ADRP X20, 0xF1C000
	0x034C2ABC LDR X8, [X20 + 0x978]
	0x034C2AC0 MOV X19, X0
	0x034C2AC4 CBNZ X8, 0x34C2B10
	0x034C2AC8 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2ACC LDR V0, [X12 + 0x5B8]
	0x034C2AD0 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2AD4 ADRP X10, 0xFFFFFFFFFD644000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2120]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43622400
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3481
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2120], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int32 ovr_ChallengeEntry_GetRank(System.IntPtr obj)

Disassembly:
	0x034C2AD8 ADD X8, X8, 0xDD2
	0x034C2ADC MOVZ W9, 0x11
	0x034C2AE0 ADD X10, X10, 0x569
	0x034C2AE4 MOVZ W11, 0x1E
	0x034C2AE8 MOVZ W13, 0x8
	0x034C2AEC ADD X0, X31, 0x0
	0x034C2AF0 STP X8, X9, [X31]
	0x034C2AF4 STP X10, X11, [X31 + 0x10]
	0x034C2AF8 STR W13, [X31 + 0x28]
	0x034C2AFC STR D0, [X31 + 0x20]
	0x034C2B00 STRB W31, [X31 + 0x2C]
	0x034C2B04 BL 0x1C1729C
	0x034C2B08 MOV X8, X0
	0x034C2B0C STR X0, [X20 + 0x978]
	0x034C2B10 MOV X0, X19
	0x034C2B14 BLR X8
	0x034C2B18 LDP X20, X19, [X31 + 0x40]
	0x034C2B1C LDR X30, [X31 + 0x30]
	0x034C2B20 ADD X31, X31, 0x50
	0x034C2B24 RET
	0x034C2B28 STP X30, X21, [X31 - 0x20]!
	0x034C2B2C STP X20, X19, [X31 + 0x10]
	0x034C2B30 ADRP X20, 0xF1C000
	0x034C2B34 ADRP X21, 0xC70000
	0x034C2B38 LDRB W8, [X20 + 0x980]
	0x034C2B3C LDR X21, [X21 + 0x328]
	0x034C2B40 MOV X19, X0
	0x034C2B44 TBNZ X8, 0x0, 0x34C2B5C
	0x034C2B48 ADRP X0, 0xC70000
	0x034C2B4C LDR X0, [X0 + 0x328]
	0x034C2B50 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2128]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43704320
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3687
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2128], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_ChallengeEntry_GetScore(System.IntPtr obj)

Disassembly:
	0x034C2B54 MOVZ W8, 0x1
	0x034C2B58 STRB W8, [X20 + 0x980]
	0x034C2B5C LDR X0, [X21]
	0x034C2B60 LDR W8, [X0 + 0xE0]
	0x034C2B64 CBNZ W8, 0x34C2B6C
	0x034C2B68 BL 0x1C16DFC
	0x034C2B6C MOV X0, X19
	0x034C2B70 BL 0x34C2B80
	0x034C2B74 LDP X20, X19, [X31 + 0x10]
	0x034C2B78 LDP X30, X21, [X31], #0x20
	0x034C2B7C B 0x34B3B78
	0x034C2B80 SUB X31, X31, 0x50
	0x034C2B84 STR X30, [X31 + 0x30]
	0x034C2B88 STP X20, X19, [X31 + 0x40]
	0x034C2B8C ADRP X20, 0xF1C000
	0x034C2B90 LDR X8, [X20 + 0x988]
	0x034C2B94 MOV X19, X0
	0x034C2B98 CBNZ X8, 0x34C2BE4
	0x034C2B9C ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2BA0 LDR V0, [X12 + 0x5B8]
	0x034C2BA4 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2BA8 ADRP X10, 0xFFFFFFFFFD65E000
	0x034C2BAC ADD X8, X8, 0xDD2
	0x034C2BB0 MOVZ W9, 0x11
	0x034C2BB4 ADD X10, X10, 0x1BF
	0x034C2BB8 MOVZ W11, 0x1F
	0x034C2BBC MOVZ W13, 0x8
	0x034C2BC0 ADD X0, X31, 0x0
	0x034C2BC4 STP X8, X9, [X31]
	0x034C2BC8 STP X10, X11, [X31 + 0x10]
	0x034C2BCC STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2136]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43749376
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1333
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2136], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.DateTime ovr_ChallengeEntry_GetTimestamp(System.IntPtr obj)

Disassembly:
	0x034C2BD0 STR D0, [X31 + 0x20]
	0x034C2BD4 STRB W31, [X31 + 0x2C]
	0x034C2BD8 BL 0x1C1729C
	0x034C2BDC MOV X8, X0
	0x034C2BE0 STR X0, [X20 + 0x988]
	0x034C2BE4 MOV X0, X19
	0x034C2BE8 BLR X8
	0x034C2BEC LDP X20, X19, [X31 + 0x40]
	0x034C2BF0 LDR X30, [X31 + 0x30]
	0x034C2BF4 ADD X31, X31, 0x50
	0x034C2BF8 RET
	0x034C2BFC SUB X31, X31, 0x50
	0x034C2C00 STP X30, X21, [X31 + 0x30]
	0x034C2C04 STP X20, X19, [X31 + 0x40]
	0x034C2C08 ADRP X21, 0xF1C000
	0x034C2C0C LDR X8, [X21 + 0x990]
	0x034C2C10 MOV X19, X1
	0x034C2C14 MOV X20, X0
	0x034C2C18 CBNZ X8, 0x34C2C64
	0x034C2C1C ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2C20 LDR V0, [X12 + 0x5B8]
	0x034C2C24 ADRP X8, 0xFFFFFFFFFD651000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1D000
	006 Move X21, 0xC71000
	007 Move W8, [X20+2144]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC71000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2144], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ChallengeEntry_GetTimestamp_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.DateTimeFromNative, X0
	031 Return X0

Method: System.UInt64 ovr_ChallengeEntry_GetTimestamp_Native(System.IntPtr obj)

Disassembly:
	0x034C2C28 ADRP X10, 0xFFFFFFFFFD648000
	0x034C2C2C ADD X8, X8, 0xDD2
	0x034C2C30 MOVZ W9, 0x11
	0x034C2C34 ADD X10, X10, 0x78D
	0x034C2C38 MOVZ W11, 0x1F
	0x034C2C3C MOVZ W13, 0x10
	0x034C2C40 ADD X0, X31, 0x0
	0x034C2C44 STP X8, X9, [X31]
	0x034C2C48 STP X10, X11, [X31 + 0x10]
	0x034C2C4C STR W13, [X31 + 0x28]
	0x034C2C50 STR D0, [X31 + 0x20]
	0x034C2C54 STRB W31, [X31 + 0x2C]
	0x034C2C58 BL 0x1C1729C
	0x034C2C5C MOV X8, X0
	0x034C2C60 STR X0, [X21 + 0x990]
	0x034C2C64 MOV X0, X20
	0x034C2C68 MOV X1, X19
	0x034C2C6C BLR X8
	0x034C2C70 LDP X20, X19, [X31 + 0x40]
	0x034C2C74 LDP X30, X21, [X31 + 0x30]
	0x034C2C78 ADD X31, X31, 0x50
	0x034C2C7C RET
	0x034C2C80 STP X30, X21, [X31 - 0x20]!
	0x034C2C84 STP X20, X19, [X31 + 0x10]
	0x034C2C88 ADRP X20, 0xF1C000
	0x034C2C8C ADRP X21, 0xC70000
	0x034C2C90 LDRB W8, [X20 + 0x998]
	0x034C2C94 LDR X21, [X21 + 0x328]
	0x034C2C98 MOV X19, X0
	0x034C2C9C TBNZ X8, 0x0, 0x34C2CB4
	0x034C2CA0 ADRP X0, 0xC70000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2152]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43732992
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 865
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2152], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_ChallengeEntry_GetUser(System.IntPtr obj)

Disassembly:
	0x034C2CA4 LDR X0, [X0 + 0x328]
	0x034C2CA8 BL 0x1C16CF4
	0x034C2CAC MOVZ W8, 0x1
	0x034C2CB0 STRB W8, [X20 + 0x998]
	0x034C2CB4 LDR X0, [X21]
	0x034C2CB8 LDR W8, [X0 + 0xE0]
	0x034C2CBC CBNZ W8, 0x34C2CC4
	0x034C2CC0 BL 0x1C16DFC
	0x034C2CC4 MOV X0, X19
	0x034C2CC8 BL 0x34C2CD8
	0x034C2CCC LDP X20, X19, [X31 + 0x10]
	0x034C2CD0 LDP X30, X21, [X31], #0x20
	0x034C2CD4 B 0x34B3B78
	0x034C2CD8 SUB X31, X31, 0x50
	0x034C2CDC STR X30, [X31 + 0x30]
	0x034C2CE0 STP X20, X19, [X31 + 0x40]
	0x034C2CE4 ADRP X20, 0xF1C000
	0x034C2CE8 LDR X8, [X20 + 0x9A0]
	0x034C2CEC MOV X19, X0
	0x034C2CF0 CBNZ X8, 0x34C2D3C
	0x034C2CF4 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2CF8 LDR V0, [X12 + 0x5B8]
	0x034C2CFC ADRP X8, 0xFFFFFFFFFD651000
	0x034C2D00 ADRP X10, 0xFFFFFFFFFD644000
	0x034C2D04 ADD X8, X8, 0xDD2
	0x034C2D08 MOVZ W9, 0x11
	0x034C2D0C ADD X10, X10, 0x588
	0x034C2D10 MOVZ W11, 0x1F
	0x034C2D14 MOVZ W13, 0x8
	0x034C2D18 ADD X0, X31, 0x0
	0x034C2D1C STP X8, X9, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2160]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43614208
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3538
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2160], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_ChallengeEntryArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C2D20 STP X10, X11, [X31 + 0x10]
	0x034C2D24 STR W13, [X31 + 0x28]
	0x034C2D28 STR D0, [X31 + 0x20]
	0x034C2D2C STRB W31, [X31 + 0x2C]
	0x034C2D30 BL 0x1C1729C
	0x034C2D34 MOV X8, X0
	0x034C2D38 STR X0, [X20 + 0x9A0]
	0x034C2D3C MOV X0, X19
	0x034C2D40 BLR X8
	0x034C2D44 LDP X20, X19, [X31 + 0x40]
	0x034C2D48 LDR X30, [X31 + 0x30]
	0x034C2D4C ADD X31, X31, 0x50
	0x034C2D50 RET
	0x034C2D54 SUB X31, X31, 0x50
	0x034C2D58 STR X30, [X31 + 0x30]
	0x034C2D5C STP X20, X19, [X31 + 0x40]
	0x034C2D60 ADRP X20, 0xF1C000
	0x034C2D64 LDR X8, [X20 + 0x9A8]
	0x034C2D68 MOV X19, X0
	0x034C2D6C CBNZ X8, 0x34C2DB8
	0x034C2D70 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2D74 LDR V0, [X12 + 0x5B8]
	0x034C2D78 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2D7C ADRP X10, 0xFFFFFFFFFD667000
	0x034C2D80 ADD X8, X8, 0xDD2
	0x034C2D84 MOVZ W9, 0x11
	0x034C2D88 ADD X10, X10, 0xDED
	0x034C2D8C MOVZ W11, 0x1C
	0x034C2D90 MOVZ W13, 0x8
	0x034C2D94 ADD X0, X31, 0x0
	0x034C2D98 STP X8, X9, [X31]
	0x034C2D9C STP X10, X11, [X31 + 0x10]
	0x034C2DA0 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1D000
	007 Move X8, [X21+2168]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43859968
	013 Move V0, [X12+1464]
	014 Move X8, -43704320
	015 Move X10, -43667456
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 550
	019 Move W11, 34
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+2168], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_ChallengeEntryArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034C2DA4 STR D0, [X31 + 0x20]
	0x034C2DA8 STRB W31, [X31 + 0x2C]
	0x034C2DAC BL 0x1C1729C
	0x034C2DB0 MOV X8, X0
	0x034C2DB4 STR X0, [X20 + 0x9A8]
	0x034C2DB8 MOV X0, X19
	0x034C2DBC BLR X8
	0x034C2DC0 LDP X20, X19, [X31 + 0x40]
	0x034C2DC4 LDR X30, [X31 + 0x30]
	0x034C2DC8 ADD X31, X31, 0x50
	0x034C2DCC RET
	0x034C2DD0 SUB X31, X31, 0x50
	0x034C2DD4 STR X30, [X31 + 0x30]
	0x034C2DD8 STP X20, X19, [X31 + 0x40]
	0x034C2DDC ADRP X20, 0xF1C000
	0x034C2DE0 LDR X8, [X20 + 0x9B0]
	0x034C2DE4 MOV X19, X0
	0x034C2DE8 CBNZ X8, 0x34C2E34
	0x034C2DEC ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2DF0 LDR V0, [X12 + 0x5B8]
	0x034C2DF4 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2DF8 ADRP X10, 0xFFFFFFFFFD632000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1D000
	006 Move X21, 0xC71000
	007 Move W8, [X20+2176]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC71000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2176], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ChallengeEntryArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ChallengeEntryArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C2DFC ADD X8, X8, 0xDD2
	0x034C2E00 MOVZ W9, 0x11
	0x034C2E04 ADD X10, X10, 0x669
	0x034C2E08 MOVZ W11, 0x20
	0x034C2E0C MOVZ W13, 0x8
	0x034C2E10 ADD X0, X31, 0x0
	0x034C2E14 STP X8, X9, [X31]
	0x034C2E18 STP X10, X11, [X31 + 0x10]
	0x034C2E1C STR W13, [X31 + 0x28]
	0x034C2E20 STR D0, [X31 + 0x20]
	0x034C2E24 STRB W31, [X31 + 0x2C]
	0x034C2E28 BL 0x1C1729C
	0x034C2E2C MOV X8, X0
	0x034C2E30 STR X0, [X20 + 0x9B0]
	0x034C2E34 MOV X0, X19
	0x034C2E38 BLR X8
	0x034C2E3C LDP X20, X19, [X31 + 0x40]
	0x034C2E40 LDR X30, [X31 + 0x30]
	0x034C2E44 CMP W0, 0x0
	0x034C2E48 CSET W0, NE
	0x034C2E4C ADD X31, X31, 0x50
	0x034C2E50 RET
	0x034C2E54 SUB X31, X31, 0x50
	0x034C2E58 STR X30, [X31 + 0x30]
	0x034C2E5C STP X20, X19, [X31 + 0x40]
	0x034C2E60 ADRP X20, 0xF1C000
	0x034C2E64 LDR X8, [X20 + 0x9B8]
	0x034C2E68 MOV X19, X0
	0x034C2E6C CBNZ X8, 0x34C2EB4
	0x034C2E70 ADRP X11, 0xFFFFFFFFFD62B000
	0x034C2E74 LDR V0, [X11 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2184]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43651072
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 412
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2184], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_ChallengeEntryArray_GetPreviousUrl(System.IntPtr obj)

Disassembly:
	0x034C2E78 ADRP X8, 0xFFFFFFFFFD651000
	0x034C2E7C ADRP X10, 0xFFFFFFFFFD640000
	0x034C2E80 ADD X8, X8, 0xDD2
	0x034C2E84 MOVZ W9, 0x11
	0x034C2E88 ADD X10, X10, 0x356
	0x034C2E8C MOVZ W12, 0x8
	0x034C2E90 ADD X0, X31, 0x0
	0x034C2E94 STP X8, X9, [X31]
	0x034C2E98 STP X10, X9, [X31 + 0x10]
	0x034C2E9C STR W12, [X31 + 0x28]
	0x034C2EA0 STR D0, [X31 + 0x20]
	0x034C2EA4 STRB W31, [X31 + 0x2C]
	0x034C2EA8 BL 0x1C1729C
	0x034C2EAC MOV X8, X0
	0x034C2EB0 STR X0, [X20 + 0x9B8]
	0x034C2EB4 MOV X0, X19
	0x034C2EB8 BLR X8
	0x034C2EBC LDP X20, X19, [X31 + 0x40]
	0x034C2EC0 LDR X30, [X31 + 0x30]
	0x034C2EC4 ADD X31, X31, 0x50
	0x034C2EC8 RET
	0x034C2ECC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1D000
	006 Move X21, 0xC71000
	007 Move W8, [X20+2192]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC71000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2192], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ChallengeEntryArray_GetPreviousUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ChallengeEntryArray_GetPreviousUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C2ED0 STP X20, X19, [X31 + 0x10]
	0x034C2ED4 ADRP X20, 0xF1C000
	0x034C2ED8 ADRP X21, 0xC70000
	0x034C2EDC LDRB W8, [X20 + 0x9C0]
	0x034C2EE0 LDR X21, [X21 + 0x328]
	0x034C2EE4 MOV X19, X0
	0x034C2EE8 TBNZ X8, 0x0, 0x34C2F00
	0x034C2EEC ADRP X0, 0xC70000
	0x034C2EF0 LDR X0, [X0 + 0x328]
	0x034C2EF4 BL 0x1C16CF4
	0x034C2EF8 MOVZ W8, 0x1
	0x034C2EFC STRB W8, [X20 + 0x9C0]
	0x034C2F00 LDR X0, [X21]
	0x034C2F04 LDR W8, [X0 + 0xE0]
	0x034C2F08 CBNZ W8, 0x34C2F10
	0x034C2F0C BL 0x1C16DFC
	0x034C2F10 MOV X0, X19
	0x034C2F14 BL 0x34C2F24
	0x034C2F18 LDP X20, X19, [X31 + 0x10]
	0x034C2F1C LDP X30, X21, [X31], #0x20
	0x034C2F20 B 0x34B3B78
	0x034C2F24 SUB X31, X31, 0x50
	0x034C2F28 STR X30, [X31 + 0x30]
	0x034C2F2C STP X20, X19, [X31 + 0x40]
	0x034C2F30 ADRP X20, 0xF1C000
	0x034C2F34 LDR X8, [X20 + 0x9C8]
	0x034C2F38 MOV X19, X0
	0x034C2F3C CBNZ X8, 0x34C2F88
	0x034C2F40 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2F44 LDR V0, [X12 + 0x5B8]
	0x034C2F48 ADRP X8, 0xFFFFFFFFFD651000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2200]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 815
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2200], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_ChallengeEntryArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C2F4C ADRP X10, 0xFFFFFFFFFD63A000
	0x034C2F50 ADD X8, X8, 0xDD2
	0x034C2F54 MOVZ W9, 0x11
	0x034C2F58 ADD X10, X10, 0x76F
	0x034C2F5C MOVZ W11, 0x1F
	0x034C2F60 MOVZ W13, 0x8
	0x034C2F64 ADD X0, X31, 0x0
	0x034C2F68 STP X8, X9, [X31]
	0x034C2F6C STP X10, X11, [X31 + 0x10]
	0x034C2F70 STR W13, [X31 + 0x28]
	0x034C2F74 STR D0, [X31 + 0x20]
	0x034C2F78 STRB W31, [X31 + 0x2C]
	0x034C2F7C BL 0x1C1729C
	0x034C2F80 MOV X8, X0
	0x034C2F84 STR X0, [X20 + 0x9C8]
	0x034C2F88 MOV X0, X19
	0x034C2F8C BLR X8
	0x034C2F90 LDP X20, X19, [X31 + 0x40]
	0x034C2F94 LDR X30, [X31 + 0x30]
	0x034C2F98 ADD X31, X31, 0x50
	0x034C2F9C RET
	0x034C2FA0 SUB X31, X31, 0x50
	0x034C2FA4 STR X30, [X31 + 0x30]
	0x034C2FA8 STP X20, X19, [X31 + 0x40]
	0x034C2FAC ADRP X20, 0xF1C000
	0x034C2FB0 LDR X8, [X20 + 0x9D0]
	0x034C2FB4 MOV X19, X0
	0x034C2FB8 CBNZ X8, 0x34C3004
	0x034C2FBC ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2FC0 LDR V0, [X12 + 0x5B8]
	0x034C2FC4 ADRP X8, 0xFFFFFFFFFD651000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2208]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43663360
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3887
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2208], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_ChallengeEntryArray_GetTotalCount(System.IntPtr obj)

Disassembly:
	0x034C2FC8 ADRP X10, 0xFFFFFFFFFD646000
	0x034C2FCC ADD X8, X8, 0xDD2
	0x034C2FD0 MOVZ W9, 0x11
	0x034C2FD4 ADD X10, X10, 0x573
	0x034C2FD8 MOVZ W11, 0x15
	0x034C2FDC MOVZ W13, 0x8
	0x034C2FE0 ADD X0, X31, 0x0
	0x034C2FE4 STP X8, X9, [X31]
	0x034C2FE8 STP X10, X11, [X31 + 0x10]
	0x034C2FEC STR W13, [X31 + 0x28]
	0x034C2FF0 STR D0, [X31 + 0x20]
	0x034C2FF4 STRB W31, [X31 + 0x2C]
	0x034C2FF8 BL 0x1C1729C
	0x034C2FFC MOV X8, X0
	0x034C3000 STR X0, [X20 + 0x9D0]
	0x034C3004 MOV X0, X19
	0x034C3008 BLR X8
	0x034C300C LDP X20, X19, [X31 + 0x40]
	0x034C3010 LDR X30, [X31 + 0x30]
	0x034C3014 ADD X31, X31, 0x50
	0x034C3018 RET
	0x034C301C STP X30, X21, [X31 - 0x20]!
	0x034C3020 STP X20, X19, [X31 + 0x10]
	0x034C3024 ADRP X20, 0xF1B000
	0x034C3028 ADRP X21, 0xC6F000
	0x034C302C LDRB W8, [X20 + 0x9D8]
	0x034C3030 LDR X21, [X21 + 0x328]
	0x034C3034 MOV X19, X0
	0x034C3038 TBNZ X8, 0x0, 0x34C3050
	0x034C303C ADRP X0, 0xC6F000
	0x034C3040 LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+2216]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43823104
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1804
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2216], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_ChallengeEntryArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034C3044 BL 0x1C16CF4
	0x034C3048 MOVZ W8, 0x1
	0x034C304C STRB W8, [X20 + 0x9D8]
	0x034C3050 LDR X0, [X21]
	0x034C3054 LDR W8, [X0 + 0xE0]
	0x034C3058 CBNZ W8, 0x34C3060
	0x034C305C BL 0x1C16DFC
	0x034C3060 MOV X0, X19
	0x034C3064 BL 0x34C3074
	0x034C3068 LDP X20, X19, [X31 + 0x10]
	0x034C306C LDP X30, X21, [X31], #0x20
	0x034C3070 B 0x34B3B78
	0x034C3074 SUB X31, X31, 0x50
	0x034C3078 STR X30, [X31 + 0x30]
	0x034C307C STP X20, X19, [X31 + 0x40]
	0x034C3080 ADRP X20, 0xF1B000
	0x034C3084 LDR X8, [X20 + 0x9E0]
	0x034C3088 MOV X19, X0
	0x034C308C CBNZ X8, 0x34C30D8
	0x034C3090 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3094 LDR V0, [X12 + 0x5B8]
	0x034C3098 ADRP X8, 0xFFFFFFFFFD650000
	0x034C309C ADRP X10, 0xFFFFFFFFFD654000
	0x034C30A0 ADD X8, X8, 0xDD2
	0x034C30A4 MOVZ W9, 0x11
	0x034C30A8 ADD X10, X10, 0xD9A
	0x034C30AC MOVZ W11, 0x14
	0x034C30B0 MOVZ W13, 0x8
	0x034C30B4 ADD X0, X31, 0x0
	0x034C30B8 STP X8, X9, [X31]
	0x034C30BC STP X10, X11, [X31 + 0x10]
	0x034C30C0 STR W13, [X31 + 0x28]
	0x034C30C4 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2224]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43630592
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 906
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2224], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_ChallengeEntryArray_HasPreviousPage(System.IntPtr obj)

Disassembly:
	0x034C30C8 STRB W31, [X31 + 0x2C]
	0x034C30CC BL 0x1C1729C
	0x034C30D0 MOV X8, X0
	0x034C30D4 STR X0, [X20 + 0x9E0]
	0x034C30D8 MOV X0, X19
	0x034C30DC BLR X8
	0x034C30E0 LDP X20, X19, [X31 + 0x40]
	0x034C30E4 LDR X30, [X31 + 0x30]
	0x034C30E8 ADD X31, X31, 0x50
	0x034C30EC RET
	0x034C30F0 STP X30, X21, [X31 - 0x20]!
	0x034C30F4 STP X20, X19, [X31 + 0x10]
	0x034C30F8 ADRP X20, 0xF1B000
	0x034C30FC ADRP X21, 0xC6F000
	0x034C3100 LDRB W8, [X20 + 0x9E8]
	0x034C3104 LDR X21, [X21 + 0x328]
	0x034C3108 MOV X19, X0
	0x034C310C TBNZ X8, 0x0, 0x34C3124
	0x034C3110 ADRP X0, 0xC6F000
	0x034C3114 LDR X0, [X0 + 0x328]
	0x034C3118 BL 0x1C16CF4
	0x034C311C MOVZ W8, 0x1
	0x034C3120 STRB W8, [X20 + 0x9E8]
	0x034C3124 LDR X0, [X21]
	0x034C3128 LDR W8, [X0 + 0xE0]
	0x034C312C CBNZ W8, 0x34C3134
	0x034C3130 BL 0x1C16DFC
	0x034C3134 MOV X0, X19
	0x034C3138 BL 0x34C3148
	0x034C313C LDP X20, X19, [X31 + 0x10]
	0x034C3140 LDP X30, X21, [X31], #0x20
	0x034C3144 B 0x34B3B78
	0x034C3148 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2232]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1804
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2232], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_CowatchViewer_GetData(System.IntPtr obj)

Disassembly:
	0x034C314C STR X30, [X31 + 0x30]
	0x034C3150 STP X20, X19, [X31 + 0x40]
	0x034C3154 ADRP X20, 0xF1B000
	0x034C3158 LDR X8, [X20 + 0x9F0]
	0x034C315C MOV X19, X0
	0x034C3160 CBNZ X8, 0x34C31AC
	0x034C3164 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3168 LDR V0, [X12 + 0x5B8]
	0x034C316C ADRP X8, 0xFFFFFFFFFD650000
	0x034C3170 ADRP X10, 0xFFFFFFFFFD631000
	0x034C3174 ADD X8, X8, 0xDD2
	0x034C3178 MOVZ W9, 0x11
	0x034C317C ADD X10, X10, 0x68A
	0x034C3180 MOVZ W11, 0x2E
	0x034C3184 MOVZ W13, 0x8
	0x034C3188 ADD X0, X31, 0x0
	0x034C318C STP X8, X9, [X31]
	0x034C3190 STP X10, X11, [X31 + 0x10]
	0x034C3194 STR W13, [X31 + 0x28]
	0x034C3198 STR D0, [X31 + 0x20]
	0x034C319C STRB W31, [X31 + 0x2C]
	0x034C31A0 BL 0x1C1729C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1C000
	006 Move X21, 0xC70000
	007 Move W8, [X20+2240]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC70000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2240], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_CowatchViewer_GetData_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_CowatchViewer_GetData_Native(System.IntPtr obj)

Disassembly:
	0x034C31A4 MOV X8, X0
	0x034C31A8 STR X0, [X20 + 0x9F0]
	0x034C31AC MOV X0, X19
	0x034C31B0 BLR X8
	0x034C31B4 LDP X20, X19, [X31 + 0x40]
	0x034C31B8 LDR X30, [X31 + 0x30]
	0x034C31BC ADD X31, X31, 0x50
	0x034C31C0 RET
	0x034C31C4 STP X30, X21, [X31 - 0x20]!
	0x034C31C8 STP X20, X19, [X31 + 0x10]
	0x034C31CC ADRP X20, 0xF1B000
	0x034C31D0 ADRP X21, 0xC6F000
	0x034C31D4 LDRB W8, [X20 + 0x9F8]
	0x034C31D8 LDR X21, [X21 + 0x328]
	0x034C31DC MOV X19, X0
	0x034C31E0 TBNZ X8, 0x0, 0x34C31F8
	0x034C31E4 ADRP X0, 0xC6F000
	0x034C31E8 LDR X0, [X0 + 0x328]
	0x034C31EC BL 0x1C16CF4
	0x034C31F0 MOVZ W8, 0x1
	0x034C31F4 STRB W8, [X20 + 0x9F8]
	0x034C31F8 LDR X0, [X21]
	0x034C31FC LDR W8, [X0 + 0xE0]
	0x034C3200 CBNZ W8, 0x34C3208
	0x034C3204 BL 0x1C16DFC
	0x034C3208 MOV X0, X19
	0x034C320C BL 0x34C321C
	0x034C3210 LDP X20, X19, [X31 + 0x10]
	0x034C3214 LDP X30, X21, [X31], #0x20
	0x034C3218 B 0x34B3B78
	0x034C321C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2248]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43610112
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3152
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2248], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_CowatchViewer_GetId(System.IntPtr obj)

Disassembly:
	0x034C3220 STR X30, [X31 + 0x30]
	0x034C3224 STP X20, X19, [X31 + 0x40]
	0x034C3228 ADRP X20, 0xF1B000
	0x034C322C LDR X8, [X20 + 0xA00]
	0x034C3230 MOV X19, X0
	0x034C3234 CBNZ X8, 0x34C3280
	0x034C3238 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C323C LDR V0, [X12 + 0x5B8]
	0x034C3240 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3244 ADRP X10, 0xFFFFFFFFFD654000
	0x034C3248 ADD X8, X8, 0xDD2
	0x034C324C MOVZ W9, 0x11
	0x034C3250 ADD X10, X10, 0xDAF
	0x034C3254 MOVZ W11, 0x31
	0x034C3258 MOVZ W13, 0x8
	0x034C325C ADD X0, X31, 0x0
	0x034C3260 STP X8, X9, [X31]
	0x034C3264 STP X10, X11, [X31 + 0x10]
	0x034C3268 STR W13, [X31 + 0x28]
	0x034C326C STR D0, [X31 + 0x20]
	0x034C3270 STRB W31, [X31 + 0x2C]
	0x034C3274 BL 0x1C1729C
	0x034C3278 MOV X8, X0
	0x034C327C STR X0, [X20 + 0xA00]
	0x034C3280 MOV X0, X19
	0x034C3284 BLR X8
	0x034C3288 LDP X20, X19, [X31 + 0x40]
	0x034C328C LDR X30, [X31 + 0x30]
	0x034C3290 ADD X31, X31, 0x50
	0x034C3294 RET
	0x034C3298 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2256]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1844
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2256], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_CowatchViewerArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C329C STP X20, X19, [X31 + 0x10]
	0x034C32A0 ADRP X20, 0xF1B000
	0x034C32A4 ADRP X21, 0xC6F000
	0x034C32A8 LDRB W8, [X20 + 0xA08]
	0x034C32AC LDR X21, [X21 + 0x328]
	0x034C32B0 MOV X19, X0
	0x034C32B4 TBNZ X8, 0x0, 0x34C32CC
	0x034C32B8 ADRP X0, 0xC6F000
	0x034C32BC LDR X0, [X0 + 0x328]
	0x034C32C0 BL 0x1C16CF4
	0x034C32C4 MOVZ W8, 0x1
	0x034C32C8 STRB W8, [X20 + 0xA08]
	0x034C32CC LDR X0, [X21]
	0x034C32D0 LDR W8, [X0 + 0xE0]
	0x034C32D4 CBNZ W8, 0x34C32DC
	0x034C32D8 BL 0x1C16DFC
	0x034C32DC MOV X0, X19
	0x034C32E0 BL 0x34C32F0
	0x034C32E4 LDP X20, X19, [X31 + 0x10]
	0x034C32E8 LDP X30, X21, [X31], #0x20
	0x034C32EC B 0x34B3B78
	0x034C32F0 SUB X31, X31, 0x50
	0x034C32F4 STR X30, [X31 + 0x30]
	0x034C32F8 STP X20, X19, [X31 + 0x40]
	0x034C32FC ADRP X20, 0xF1B000
	0x034C3300 LDR X8, [X20 + 0xA10]
	0x034C3304 MOV X19, X0
	0x034C3308 CBNZ X8, 0x34C3354
	0x034C330C ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3310 LDR V0, [X12 + 0x5B8]
	0x034C3314 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3318 ADRP X10, 0xFFFFFFFFFD650000
	0x034C331C ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1C000
	007 Move X8, [X21+2264]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43864064
	013 Move V0, [X12+1464]
	014 Move X8, -43708416
	015 Move X10, -43753472
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1361
	019 Move W11, 33
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+2264], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_CowatchViewerArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034C3320 MOVZ W9, 0x11
	0x034C3324 ADD X10, X10, 0xE82
	0x034C3328 MOVZ W11, 0x2D
	0x034C332C MOVZ W13, 0x8
	0x034C3330 ADD X0, X31, 0x0
	0x034C3334 STP X8, X9, [X31]
	0x034C3338 STP X10, X11, [X31 + 0x10]
	0x034C333C STR W13, [X31 + 0x28]
	0x034C3340 STR D0, [X31 + 0x20]
	0x034C3344 STRB W31, [X31 + 0x2C]
	0x034C3348 BL 0x1C1729C
	0x034C334C MOV X8, X0
	0x034C3350 STR X0, [X20 + 0xA10]
	0x034C3354 MOV X0, X19
	0x034C3358 BLR X8
	0x034C335C LDP X20, X19, [X31 + 0x40]
	0x034C3360 LDR X30, [X31 + 0x30]
	0x034C3364 ADD X31, X31, 0x50
	0x034C3368 RET
	0x034C336C STP X30, X21, [X31 - 0x20]!
	0x034C3370 STP X20, X19, [X31 + 0x10]
	0x034C3374 ADRP X20, 0xF1B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1C000
	006 Move X21, 0xC70000
	007 Move W8, [X20+2272]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC70000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2272], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_CowatchViewerArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_CowatchViewerArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C3378 ADRP X21, 0xC6F000
	0x034C337C LDRB W8, [X20 + 0xA18]
	0x034C3380 LDR X21, [X21 + 0x328]
	0x034C3384 MOV X19, X0
	0x034C3388 TBNZ X8, 0x0, 0x34C33A0
	0x034C338C ADRP X0, 0xC6F000
	0x034C3390 LDR X0, [X0 + 0x328]
	0x034C3394 BL 0x1C16CF4
	0x034C3398 MOVZ W8, 0x1
	0x034C339C STRB W8, [X20 + 0xA18]
	0x034C33A0 LDR X0, [X21]
	0x034C33A4 LDR W8, [X0 + 0xE0]
	0x034C33A8 CBNZ W8, 0x34C33B0
	0x034C33AC BL 0x1C16DFC
	0x034C33B0 MOV X0, X19
	0x034C33B4 BL 0x34C33C4
	0x034C33B8 LDP X20, X19, [X31 + 0x10]
	0x034C33BC LDP X30, X21, [X31], #0x20
	0x034C33C0 B 0x34B3B78
	0x034C33C4 SUB X31, X31, 0x50
	0x034C33C8 STR X30, [X31 + 0x30]
	0x034C33CC STP X20, X19, [X31 + 0x40]
	0x034C33D0 ADRP X20, 0xF1B000
	0x034C33D4 LDR X8, [X20 + 0xA20]
	0x034C33D8 MOV X19, X0
	0x034C33DC CBNZ X8, 0x34C3428
	0x034C33E0 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C33E4 LDR V0, [X12 + 0x5B8]
	0x034C33E8 ADRP X8, 0xFFFFFFFFFD650000
	0x034C33EC ADRP X10, 0xFFFFFFFFFD65F000
	0x034C33F0 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2280]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1165
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2280], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_CowatchViewerArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C33F4 MOVZ W9, 0x11
	0x034C33F8 ADD X10, X10, 0x4CE
	0x034C33FC MOVZ W11, 0x2D
	0x034C3400 MOVZ W13, 0x8
	0x034C3404 ADD X0, X31, 0x0
	0x034C3408 STP X8, X9, [X31]
	0x034C340C STP X10, X11, [X31 + 0x10]
	0x034C3410 STR W13, [X31 + 0x28]
	0x034C3414 STR D0, [X31 + 0x20]
	0x034C3418 STRB W31, [X31 + 0x2C]
	0x034C341C BL 0x1C1729C
	0x034C3420 MOV X8, X0
	0x034C3424 STR X0, [X20 + 0xA20]
	0x034C3428 MOV X0, X19
	0x034C342C BLR X8
	0x034C3430 LDP X20, X19, [X31 + 0x40]
	0x034C3434 LDR X30, [X31 + 0x30]
	0x034C3438 ADD X31, X31, 0x50
	0x034C343C RET
	0x034C3440 STP X30, X21, [X31 - 0x20]!
	0x034C3444 STP X20, X19, [X31 + 0x10]
	0x034C3448 ADRP X20, 0xF1B000
	0x034C344C ADRP X21, 0xC6F000
	0x034C3450 LDRB W8, [X20 + 0xA28]
	0x034C3454 LDR X21, [X21 + 0x328]
	0x034C3458 MOV X19, X0
	0x034C345C TBNZ X8, 0x0, 0x34C3474
	0x034C3460 ADRP X0, 0xC6F000
	0x034C3464 LDR X0, [X0 + 0x328]
	0x034C3468 BL 0x1C16CF4
	0x034C346C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2288]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43843584
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1968
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2288], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_CowatchViewerArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034C3470 STRB W8, [X20 + 0xA28]
	0x034C3474 LDR X0, [X21]
	0x034C3478 LDR W8, [X0 + 0xE0]
	0x034C347C CBNZ W8, 0x34C3484
	0x034C3480 BL 0x1C16DFC
	0x034C3484 MOV X0, X19
	0x034C3488 BL 0x34C3498
	0x034C348C LDP X20, X19, [X31 + 0x10]
	0x034C3490 LDP X30, X21, [X31], #0x20
	0x034C3494 B 0x34B3B78
	0x034C3498 SUB X31, X31, 0x50
	0x034C349C STR X30, [X31 + 0x30]
	0x034C34A0 STP X20, X19, [X31 + 0x40]
	0x034C34A4 ADRP X20, 0xF1B000
	0x034C34A8 LDR X8, [X20 + 0xA30]
	0x034C34AC MOV X19, X0
	0x034C34B0 CBNZ X8, 0x34C34FC
	0x034C34B4 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C34B8 LDR V0, [X12 + 0x5B8]
	0x034C34BC ADRP X8, 0xFFFFFFFFFD650000
	0x034C34C0 ADRP X10, 0xFFFFFFFFFD65A000
	0x034C34C4 ADD X8, X8, 0xDD2
	0x034C34C8 MOVZ W9, 0x11
	0x034C34CC ADD X10, X10, 0xF4F
	0x034C34D0 MOVZ W11, 0x32
	0x034C34D4 MOVZ W13, 0x8
	0x034C34D8 ADD X0, X31, 0x0
	0x034C34DC STP X8, X9, [X31]
	0x034C34E0 STP X10, X11, [X31 + 0x10]
	0x034C34E4 STR W13, [X31 + 0x28]
	0x034C34E8 STR D0, [X31 + 0x20]
	0x034C34EC STRB W31, [X31 + 0x2C]
	0x034C34F0 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2296]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1127
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2296], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.IntPtr ovr_CowatchViewerUpdate_GetDataList(System.IntPtr obj)

Disassembly:
	0x034C34F4 MOV X8, X0
	0x034C34F8 STR X0, [X20 + 0xA30]
	0x034C34FC MOV X0, X19
	0x034C3500 BLR X8
	0x034C3504 LDP X20, X19, [X31 + 0x40]
	0x034C3508 LDR X30, [X31 + 0x30]
	0x034C350C ADD X31, X31, 0x50
	0x034C3510 RET
	0x034C3514 STP X30, X21, [X31 - 0x20]!
	0x034C3518 STP X20, X19, [X31 + 0x10]
	0x034C351C ADRP X20, 0xF1B000
	0x034C3520 ADRP X21, 0xC6F000
	0x034C3524 LDRB W8, [X20 + 0xA38]
	0x034C3528 LDR X21, [X21 + 0x328]
	0x034C352C MOV X19, X0
	0x034C3530 TBNZ X8, 0x0, 0x34C3548
	0x034C3534 ADRP X0, 0xC6F000
	0x034C3538 LDR X0, [X0 + 0x328]
	0x034C353C BL 0x1C16CF4
	0x034C3540 MOVZ W8, 0x1
	0x034C3544 STRB W8, [X20 + 0xA38]
	0x034C3548 LDR X0, [X21]
	0x034C354C LDR W8, [X0 + 0xE0]
	0x034C3550 CBNZ W8, 0x34C3558
	0x034C3554 BL 0x1C16DFC
	0x034C3558 MOV X0, X19
	0x034C355C BL 0x34C356C
	0x034C3560 LDP X20, X19, [X31 + 0x10]
	0x034C3564 LDP X30, X21, [X31], #0x20
	0x034C3568 B 0x34B3B78
	0x034C356C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2304]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1868
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2304], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_CowatchViewerUpdate_GetId(System.IntPtr obj)

Disassembly:
	0x034C3570 STR X30, [X31 + 0x30]
	0x034C3574 STP X20, X19, [X31 + 0x40]
	0x034C3578 ADRP X20, 0xF1B000
	0x034C357C LDR X8, [X20 + 0xA40]
	0x034C3580 MOV X19, X0
	0x034C3584 CBNZ X8, 0x34C35D0
	0x034C3588 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C358C LDR V0, [X12 + 0x5B8]
	0x034C3590 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3594 ADRP X10, 0xFFFFFFFFFD647000
	0x034C3598 ADD X8, X8, 0xDD2
	0x034C359C MOVZ W9, 0x11
	0x034C35A0 ADD X10, X10, 0x7AD
	0x034C35A4 MOVZ W11, 0x2E
	0x034C35A8 MOVZ W13, 0x8
	0x034C35AC ADD X0, X31, 0x0
	0x034C35B0 STP X8, X9, [X31]
	0x034C35B4 STP X10, X11, [X31 + 0x10]
	0x034C35B8 STR W13, [X31 + 0x28]
	0x034C35BC STR D0, [X31 + 0x20]
	0x034C35C0 STRB W31, [X31 + 0x2C]
	0x034C35C4 BL 0x1C1729C
	0x034C35C8 MOV X8, X0
	0x034C35CC STR X0, [X20 + 0xA40]
	0x034C35D0 MOV X0, X19
	0x034C35D4 BLR X8
	0x034C35D8 LDP X20, X19, [X31 + 0x40]
	0x034C35DC LDR X30, [X31 + 0x30]
	0x034C35E0 ADD X31, X31, 0x50
	0x034C35E4 RET
	0x034C35E8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2312]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43712512
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 253
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2312], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_CowatchingState_GetInSession(System.IntPtr obj)

Disassembly:
	0x034C35EC STP X20, X19, [X31 + 0x10]
	0x034C35F0 ADRP X20, 0xF1B000
	0x034C35F4 ADRP X21, 0xC6F000
	0x034C35F8 LDRB W8, [X20 + 0xA48]
	0x034C35FC LDR X21, [X21 + 0x328]
	0x034C3600 MOV X19, X0
	0x034C3604 TBNZ X8, 0x0, 0x34C361C
	0x034C3608 ADRP X0, 0xC6F000
	0x034C360C LDR X0, [X0 + 0x328]
	0x034C3610 BL 0x1C16CF4
	0x034C3614 MOVZ W8, 0x1
	0x034C3618 STRB W8, [X20 + 0xA48]
	0x034C361C LDR X0, [X21]
	0x034C3620 LDR W8, [X0 + 0xE0]
	0x034C3624 CBNZ W8, 0x34C362C
	0x034C3628 BL 0x1C16DFC
	0x034C362C MOV X0, X19
	0x034C3630 BL 0x34C3640
	0x034C3634 LDP X20, X19, [X31 + 0x10]
	0x034C3638 LDP X30, X21, [X31], #0x20
	0x034C363C B 0x34B3B78
	0x034C3640 SUB X31, X31, 0x50
	0x034C3644 STR X30, [X31 + 0x30]
	0x034C3648 STP X20, X19, [X31 + 0x40]
	0x034C364C ADRP X20, 0xF1B000
	0x034C3650 LDR X8, [X20 + 0xA50]
	0x034C3654 MOV X19, X0
	0x034C3658 CBNZ X8, 0x34C36A4
	0x034C365C ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3660 LDR V0, [X12 + 0x5B8]
	0x034C3664 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3668 ADRP X10, 0xFFFFFFFFFD645000
	0x034C366C ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2320]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43851776
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 760
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2320], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.UInt32 ovr_DataStore_Contains(System.IntPtr obj, System.String key)

Disassembly:
	0x034C3670 MOVZ W9, 0x11
	0x034C3674 ADD X10, X10, 0x589
	0x034C3678 MOVZ W11, 0x2E
	0x034C367C MOVZ W13, 0x8
	0x034C3680 ADD X0, X31, 0x0
	0x034C3684 STP X8, X9, [X31]
	0x034C3688 STP X10, X11, [X31 + 0x10]
	0x034C368C STR W13, [X31 + 0x28]
	0x034C3690 STR D0, [X31 + 0x20]
	0x034C3694 STRB W31, [X31 + 0x2C]
	0x034C3698 BL 0x1C1729C
	0x034C369C MOV X8, X0
	0x034C36A0 STR X0, [X20 + 0xA50]
	0x034C36A4 MOV X0, X19
	0x034C36A8 BLR X8
	0x034C36AC LDP X20, X19, [X31 + 0x40]
	0x034C36B0 LDR X30, [X31 + 0x30]
	0x034C36B4 ADD X31, X31, 0x50
	0x034C36B8 RET
	0x034C36BC SUB X31, X31, 0x50
	0x034C36C0 STR X30, [X31 + 0x30]
	0x034C36C4 STP X20, X19, [X31 + 0x40]
	0x034C36C8 ADRP X20, 0xF1B000
	0x034C36CC LDR X8, [X20 + 0xA58]
	0x034C36D0 MOV X19, X0
	0x034C36D4 CBNZ X8, 0x34C3720
	0x034C36D8 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C36DC LDR V0, [X12 + 0x5B8]
	0x034C36E0 ADRP X8, 0xFFFFFFFFFD650000
	0x034C36E4 ADRP X10, 0xFFFFFFFFFD62D000
	0x034C36E8 ADD X8, X8, 0xDD2
	0x034C36EC MOVZ W9, 0x11
	0x034C36F0 ADD X10, X10, 0x319
	0x034C36F4 MOVZ W11, 0x1F
	0x034C36F8 MOVZ W13, 0x8
	0x034C36FC ADD X0, X31, 0x0
	0x034C3700 STP X8, X9, [X31]
	0x034C3704 STP X10, X11, [X31 + 0x10]
	0x034C3708 STR W13, [X31 + 0x28]
	0x034C370C STR D0, [X31 + 0x20]
	0x034C3710 STRB W31, [X31 + 0x2C]
	0x034C3714 BL 0x1C1729C
	0x034C3718 MOV X8, X0
	0x034C371C STR X0, [X20 + 0xA58]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF1C000
	007 Move X21, 0xC70000
	008 Move W8, [X22+2328]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC70000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC59000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2328], W8
	024 Move X0, [X21]
	025 Move X21, 0xC59000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_DataStore_Contains_Native, X0, X1
	037 Move X8, [X21]
	038 Move W19, W0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Call Marshal.FreeCoTaskMem, X0
	047 Move W0, W19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0

Method: System.UInt32 ovr_DataStore_Contains_Native(System.IntPtr obj, System.IntPtr key)

Disassembly:
	0x034C3720 MOV X0, X19
	0x034C3724 BLR X8
	0x034C3728 LDP X20, X19, [X31 + 0x40]
	0x034C372C LDR X30, [X31 + 0x30]
	0x034C3730 ADD X31, X31, 0x50
	0x034C3734 RET
	0x034C3738 SUB X31, X31, 0x50
	0x034C373C STR X30, [X31 + 0x30]
	0x034C3740 STP X20, X19, [X31 + 0x40]
	0x034C3744 ADRP X20, 0xF1B000
	0x034C3748 LDR X8, [X20 + 0xA60]
	0x034C374C MOV X19, X0
	0x034C3750 CBNZ X8, 0x34C379C
	0x034C3754 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3758 LDR V0, [X12 + 0x5B8]
	0x034C375C ADRP X8, 0xFFFFFFFFFD650000
	0x034C3760 ADRP X10, 0xFFFFFFFFFD668000
	0x034C3764 ADD X8, X8, 0xDD2
	0x034C3768 MOVZ W9, 0x11
	0x034C376C ADD X10, X10, 0xC81
	0x034C3770 MOVZ W11, 0x1C
	0x034C3774 MOVZ W13, 0x8
	0x034C3778 ADD X0, X31, 0x0
	0x034C377C STP X8, X9, [X31]
	0x034C3780 STP X10, X11, [X31 + 0x10]
	0x034C3784 STR W13, [X31 + 0x28]
	0x034C3788 STR D0, [X31 + 0x20]
	0x034C378C STRB W31, [X31 + 0x2C]
	0x034C3790 BL 0x1C1729C
	0x034C3794 MOV X8, X0
	0x034C3798 STR X0, [X20 + 0xA60]
	0x034C379C MOV X0, X19
	0x034C37A0 BLR X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1C000
	007 Move X8, [X21+2336]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43864064
	013 Move V0, [X12+1464]
	014 Move X8, -43708416
	015 Move X10, -43859968
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2147
	019 Move W11, 22
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+2336], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_DataStore_GetKey(System.IntPtr obj, System.Int32 index)

Disassembly:
	0x034B4A5C RET
	0x034B4A60 SUB X31, X31, 0x40
	0x034B4A64 STP X30, X19, [X31 + 0x30]
	0x034B4A68 ADRP X19, 0xF29000
	0x034B4A6C LDR X8, [X19 + 0xBF8]
	0x034B4A70 CBNZ X8, 0x34B4AB8
	0x034B4A74 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4A78 LDR V0, [X12 + 0x5B8]
	0x034B4A7C ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4A80 ADRP X10, 0xFFFFFFFFFD675000
	0x034B4A84 ADD X8, X8, 0xDD2
	0x034B4A88 MOVZ W9, 0x11
	0x034B4A8C ADD X10, X10, 0xC78
	0x034B4A90 MOVZ W11, 0x16
	0x034B4A94 ADD X0, X31, 0x0
	0x034B4A98 STR W31, [X31 + 0x28]
	0x034B4A9C STP X8, X9, [X31]
	0x034B4AA0 STP X10, X11, [X31 + 0x10]
	0x034B4AA4 STR D0, [X31 + 0x20]
	0x034B4AA8 STRB W31, [X31 + 0x2C]
	0x034B4AAC BL 0x1C1729C
	0x034B4AB0 MOV X8, X0
	0x034B4AB4 STR X0, [X19 + 0xBF8]
	0x034B4AB8 BLR X8
	0x034B4ABC LDP X30, X19, [X31 + 0x30]
	0x034B4AC0 ADD X31, X31, 0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF2B000
	007 Move X22, 0xC7F000
	008 Move W8, [X21+2344]
	009 Move X22, [X22+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC7F000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2344], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Call CAPI.ovr_DataStore_GetKey_Native, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call CAPI.StringFromNative, X0
	035 Return X0

Method: System.IntPtr ovr_DataStore_GetKey_Native(System.IntPtr obj, System.Int32 index)

Disassembly:
	0x034C37A4 LDP X20, X19, [X31 + 0x40]
	0x034C37A8 LDR X30, [X31 + 0x30]
	0x034C37AC ADD X31, X31, 0x50
	0x034C37B0 RET
	0x034C37B4 SUB X31, X31, 0x50
	0x034C37B8 STR X30, [X31 + 0x30]
	0x034C37BC STP X20, X19, [X31 + 0x40]
	0x034C37C0 ADRP X20, 0xF1B000
	0x034C37C4 LDR X8, [X20 + 0xA68]
	0x034C37C8 MOV X19, X0
	0x034C37CC CBNZ X8, 0x34C3818
	0x034C37D0 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C37D4 LDR V0, [X12 + 0x5B8]
	0x034C37D8 ADRP X8, 0xFFFFFFFFFD650000
	0x034C37DC ADRP X10, 0xFFFFFFFFFD65A000
	0x034C37E0 ADD X8, X8, 0xDD2
	0x034C37E4 MOVZ W9, 0x11
	0x034C37E8 ADD X10, X10, 0xF82
	0x034C37EC MOVZ W11, 0x1E
	0x034C37F0 MOVZ W13, 0x8
	0x034C37F4 ADD X0, X31, 0x0
	0x034C37F8 STP X8, X9, [X31]
	0x034C37FC STP X10, X11, [X31 + 0x10]
	0x034C3800 STR W13, [X31 + 0x28]
	0x034C3804 STR D0, [X31 + 0x20]
	0x034C3808 STRB W31, [X31 + 0x2C]
	0x034C380C BL 0x1C1729C
	0x034C3810 MOV X8, X0
	0x034C3814 STR X0, [X20 + 0xA68]
	0x034C3818 MOV X0, X19
	0x034C381C BLR X8
	0x034C3820 LDP X20, X19, [X31 + 0x40]
	0x034C3824 LDR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1C000
	007 Move X8, [X21+2352]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43864064
	013 Move V0, [X12+1464]
	014 Move X8, -43708416
	015 Move X10, -43683840
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3636
	019 Move W11, 20
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+2352], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UIntPtr ovr_DataStore_GetNumKeys(System.IntPtr obj)

Disassembly:
	0x034B49E0 RET
	0x034B49E4 SUB X31, X31, 0x50
	0x034B49E8 STR X30, [X31 + 0x30]
	0x034B49EC STP X20, X19, [X31 + 0x40]
	0x034B49F0 ADRP X20, 0xF29000
	0x034B49F4 LDR X8, [X20 + 0xBF0]
	0x034B49F8 MOV X19, X0
	0x034B49FC CBNZ X8, 0x34B4A48
	0x034B4A00 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4A04 LDR V0, [X12 + 0x5B8]
	0x034B4A08 ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4A0C ADRP X10, 0xFFFFFFFFFD646000
	0x034B4A10 ADD X8, X8, 0xDD2
	0x034B4A14 MOVZ W9, 0x11
	0x034B4A18 ADD X10, X10, 0x7A5
	0x034B4A1C MOVZ W11, 0x17
	0x034B4A20 MOVZ W13, 0x8
	0x034B4A24 ADD X0, X31, 0x0
	0x034B4A28 STP X8, X9, [X31]
	0x034B4A2C STP X10, X11, [X31 + 0x10]
	0x034B4A30 STR W13, [X31 + 0x28]
	0x034B4A34 STR D0, [X31 + 0x20]
	0x034B4A38 STRB W31, [X31 + 0x2C]
	0x034B4A3C BL 0x1C1729C
	0x034B4A40 MOV X8, X0
	0x034B4A44 STR X0, [X20 + 0xBF0]
	0x034B4A48 MOV X0, X19
	0x034B4A4C BLR X8
	0x034B4A50 LDP X20, X19, [X31 + 0x40]
	0x034B4A54 LDR X30, [X31 + 0x30]
	0x034B4A58 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF2B000
	006 Move X8, [X20+2360]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43802624
	011 Move V0, [X12+1464]
	012 Move X8, -43646976
	013 Move X10, -43659264
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1199
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2360], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_DataStore_GetValue(System.IntPtr obj, System.String key)

Disassembly:
	0x034B4AC4 RET
	0x034B4AC8 SUB X31, X31, 0x50
	0x034B4ACC STR X30, [X31 + 0x30]
	0x034B4AD0 STP X20, X19, [X31 + 0x40]
	0x034B4AD4 ADRP X20, 0xF29000
	0x034B4AD8 LDR X8, [X20 + 0xC00]
	0x034B4ADC MOV X19, X0
	0x034B4AE0 CBNZ X8, 0x34B4B2C
	0x034B4AE4 ADRP X12, 0xFFFFFFFFFD639000
	0x034B4AE8 LDR V0, [X12 + 0x5B8]
	0x034B4AEC ADRP X8, 0xFFFFFFFFFD65F000
	0x034B4AF0 ADRP X10, 0xFFFFFFFFFD663000
	0x034B4AF4 ADD X8, X8, 0xDD2
	0x034B4AF8 MOVZ W9, 0x11
	0x034B4AFC ADD X10, X10, 0xC6F
	0x034B4B00 MOVZ W11, 0x17
	0x034B4B04 MOVZ W13, 0x8
	0x034B4B08 ADD X0, X31, 0x0
	0x034B4B0C STP X8, X9, [X31]
	0x034B4B10 STP X10, X11, [X31 + 0x10]
	0x034B4B14 STR W13, [X31 + 0x28]
	0x034B4B18 STR D0, [X31 + 0x20]
	0x034B4B1C STRB W31, [X31 + 0x2C]
	0x034B4B20 BL 0x1C1729C
	0x034B4B24 MOV X8, X0
	0x034B4B28 STR X0, [X20 + 0xC00]
	0x034B4B2C MOV X0, X19
	0x034B4B30 BLR X8
	0x034B4B34 LDP X20, X19, [X31 + 0x40]
	0x034B4B38 LDR X30, [X31 + 0x30]
	0x034B4B3C ADD X31, X31, 0x50
	0x034B4B40 RET
	0x034B4B44 SUB X31, X31, 0x60
	0x034B4B48 STR X30, [X31 + 0x30]
	0x034B4B4C STP X22, X21, [X31 + 0x40]
	0x034B4B50 STP X20, X19, [X31 + 0x50]
	0x034B4B54 ADRP X22, 0xF29000
	0x034B4B58 LDR X8, [X22 + 0xC08]
	0x034B4B5C MOV X19, X2
	0x034B4B60 MOV X21, X1
	0x034B4B64 MOV X20, X0
	0x034B4B68 CBNZ X8, 0x34B4BB4
	0x034B4B6C ADRP X12, 0xFFFFFFFFFD639000
	0x034B4B70 LDR V0, [X12 + 0x5B8]
	0x034B4B74 ADRP X8, 0xFFFFFFFFFD65F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2B000
	007 Move X21, 0xC7F000
	008 Move W8, [X22+2368]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC7F000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC68000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2368], W8
	024 Move X0, [X21]
	025 Move X21, 0xC68000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_DataStore_GetValue_Native, X0, X1
	037 Call CAPI.StringFromNative, X0
	038 Move X8, [X21]
	039 Move X19, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Call Marshal.FreeCoTaskMem, X0
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0

Method: System.IntPtr ovr_DataStore_GetValue_Native(System.IntPtr obj, System.IntPtr key)

Disassembly:
	0x034C3828 ADD X31, X31, 0x50
	0x034C382C RET
	0x034C3830 SUB X31, X31, 0x50
	0x034C3834 STR X30, [X31 + 0x30]
	0x034C3838 STP X20, X19, [X31 + 0x40]
	0x034C383C ADRP X20, 0xF1B000
	0x034C3840 LDR X8, [X20 + 0xA70]
	0x034C3844 MOV X19, X0
	0x034C3848 CBNZ X8, 0x34C3894
	0x034C384C ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3850 LDR V0, [X12 + 0x5B8]
	0x034C3854 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3858 ADRP X10, 0xFFFFFFFFFD661000
	0x034C385C ADD X8, X8, 0xDD2
	0x034C3860 MOVZ W9, 0x11
	0x034C3864 ADD X10, X10, 0x32D
	0x034C3868 MOVZ W11, 0x22
	0x034C386C MOVZ W13, 0x8
	0x034C3870 ADD X0, X31, 0x0
	0x034C3874 STP X8, X9, [X31]
	0x034C3878 STP X10, X11, [X31 + 0x10]
	0x034C387C STR W13, [X31 + 0x28]
	0x034C3880 STR D0, [X31 + 0x20]
	0x034C3884 STRB W31, [X31 + 0x2C]
	0x034C3888 BL 0x1C1729C
	0x034C388C MOV X8, X0
	0x034C3890 STR X0, [X20 + 0xA70]
	0x034C3894 MOV X0, X19
	0x034C3898 BLR X8
	0x034C389C LDP X20, X19, [X31 + 0x40]
	0x034C38A0 LDR X30, [X31 + 0x30]
	0x034C38A4 CMP W0, 0x0
	0x034C38A8 CSET W0, NE

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1C000
	007 Move X8, [X21+2376]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43864064
	013 Move V0, [X12+1464]
	014 Move X8, -43708416
	015 Move X10, -43610112
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3178
	019 Move W11, 22
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+2376], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_Destination_GetApiName(System.IntPtr obj)

Disassembly:
	0x034C38AC ADD X31, X31, 0x50
	0x034C38B0 RET
	0x034C38B4 STP X30, X21, [X31 - 0x20]!
	0x034C38B8 STP X20, X19, [X31 + 0x10]
	0x034C38BC ADRP X20, 0xF1B000
	0x034C38C0 ADRP X21, 0xC6F000
	0x034C38C4 LDRB W8, [X20 + 0xA78]
	0x034C38C8 LDR X21, [X21 + 0x328]
	0x034C38CC MOV X19, X0
	0x034C38D0 TBNZ X8, 0x0, 0x34C38E8
	0x034C38D4 ADRP X0, 0xC6F000
	0x034C38D8 LDR X0, [X0 + 0x328]
	0x034C38DC BL 0x1C16CF4
	0x034C38E0 MOVZ W8, 0x1
	0x034C38E4 STRB W8, [X20 + 0xA78]
	0x034C38E8 LDR X0, [X21]
	0x034C38EC LDR W8, [X0 + 0xE0]
	0x034C38F0 CBNZ W8, 0x34C38F8
	0x034C38F4 BL 0x1C16DFC
	0x034C38F8 MOV X0, X19
	0x034C38FC BL 0x34C390C
	0x034C3900 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1C000
	006 Move X21, 0xC70000
	007 Move W8, [X20+2384]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC70000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2384], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Destination_GetApiName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Destination_GetApiName_Native(System.IntPtr obj)

Disassembly:
	0x034C3904 LDP X30, X21, [X31], #0x20
	0x034C3908 B 0x34B3B78
	0x034C390C SUB X31, X31, 0x50
	0x034C3910 STR X30, [X31 + 0x30]
	0x034C3914 STP X20, X19, [X31 + 0x40]
	0x034C3918 ADRP X20, 0xF1B000
	0x034C391C LDR X8, [X20 + 0xA80]
	0x034C3920 MOV X19, X0
	0x034C3924 CBNZ X8, 0x34C3970
	0x034C3928 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C392C LDR V0, [X12 + 0x5B8]
	0x034C3930 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3934 ADRP X10, 0xFFFFFFFFFD64D000
	0x034C3938 ADD X8, X8, 0xDD2
	0x034C393C MOVZ W9, 0x11
	0x034C3940 ADD X10, X10, 0x4C8
	0x034C3944 MOVZ W11, 0x29
	0x034C3948 MOVZ W13, 0x8
	0x034C394C ADD X0, X31, 0x0
	0x034C3950 STP X8, X9, [X31]
	0x034C3954 STP X10, X11, [X31 + 0x10]
	0x034C3958 STR W13, [X31 + 0x28]
	0x034C395C STR D0, [X31 + 0x20]
	0x034C3960 STRB W31, [X31 + 0x2C]
	0x034C3964 BL 0x1C1729C
	0x034C3968 MOV X8, X0
	0x034C396C STR X0, [X20 + 0xA80]
	0x034C3970 MOV X0, X19
	0x034C3974 BLR X8
	0x034C3978 LDP X20, X19, [X31 + 0x40]
	0x034C397C LDR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2392]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43769856
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1913
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2392], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Destination_GetDeeplinkMessage(System.IntPtr obj)

Disassembly:
	0x034C3980 ADD X31, X31, 0x50
	0x034C3984 RET
	0x034C3988 STP X30, X21, [X31 - 0x20]!
	0x034C398C STP X20, X19, [X31 + 0x10]
	0x034C3990 ADRP X20, 0xF1B000
	0x034C3994 ADRP X21, 0xC6F000
	0x034C3998 LDRB W8, [X20 + 0xA88]
	0x034C399C LDR X21, [X21 + 0x328]
	0x034C39A0 MOV X19, X0
	0x034C39A4 TBNZ X8, 0x0, 0x34C39BC
	0x034C39A8 ADRP X0, 0xC6F000
	0x034C39AC LDR X0, [X0 + 0x328]
	0x034C39B0 BL 0x1C16CF4
	0x034C39B4 MOVZ W8, 0x1
	0x034C39B8 STRB W8, [X20 + 0xA88]
	0x034C39BC LDR X0, [X21]
	0x034C39C0 LDR W8, [X0 + 0xE0]
	0x034C39C4 CBNZ W8, 0x34C39CC
	0x034C39C8 BL 0x1C16DFC
	0x034C39CC MOV X0, X19
	0x034C39D0 BL 0x34C39E0
	0x034C39D4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1C000
	006 Move X21, 0xC70000
	007 Move W8, [X20+2400]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC70000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2400], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Destination_GetDeeplinkMessage_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Destination_GetDeeplinkMessage_Native(System.IntPtr obj)

Disassembly:
	0x034C39D8 LDP X30, X21, [X31], #0x20
	0x034C39DC B 0x34B3B78
	0x034C39E0 SUB X31, X31, 0x50
	0x034C39E4 STR X30, [X31 + 0x30]
	0x034C39E8 STP X20, X19, [X31 + 0x40]
	0x034C39EC ADRP X20, 0xF1B000
	0x034C39F0 LDR X8, [X20 + 0xA90]
	0x034C39F4 MOV X19, X0
	0x034C39F8 CBNZ X8, 0x34C3A44
	0x034C39FC ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3A00 LDR V0, [X12 + 0x5B8]
	0x034C3A04 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3A08 ADRP X10, 0xFFFFFFFFFD633000
	0x034C3A0C ADD X8, X8, 0xDD2
	0x034C3A10 MOVZ W9, 0x11
	0x034C3A14 ADD X10, X10, 0x732
	0x034C3A18 MOVZ W11, 0x27
	0x034C3A1C MOVZ W13, 0x8
	0x034C3A20 ADD X0, X31, 0x0
	0x034C3A24 STP X8, X9, [X31]
	0x034C3A28 STP X10, X11, [X31 + 0x10]
	0x034C3A2C STR W13, [X31 + 0x28]
	0x034C3A30 STR D0, [X31 + 0x20]
	0x034C3A34 STRB W31, [X31 + 0x2C]
	0x034C3A38 BL 0x1C1729C
	0x034C3A3C MOV X8, X0
	0x034C3A40 STR X0, [X20 + 0xA90]
	0x034C3A44 MOV X0, X19
	0x034C3A48 BLR X8
	0x034C3A4C LDP X20, X19, [X31 + 0x40]
	0x034C3A50 LDR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2408]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43671552
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 585
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2408], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Destination_GetDisplayName(System.IntPtr obj)

Disassembly:
	0x034C3A54 ADD X31, X31, 0x50
	0x034C3A58 RET
	0x034C3A5C STP X30, X21, [X31 - 0x20]!
	0x034C3A60 STP X20, X19, [X31 + 0x10]
	0x034C3A64 ADRP X20, 0xF1B000
	0x034C3A68 ADRP X21, 0xC6F000
	0x034C3A6C LDRB W8, [X20 + 0xA98]
	0x034C3A70 LDR X21, [X21 + 0x328]
	0x034C3A74 MOV X19, X0
	0x034C3A78 TBNZ X8, 0x0, 0x34C3A90
	0x034C3A7C ADRP X0, 0xC6F000
	0x034C3A80 LDR X0, [X0 + 0x328]
	0x034C3A84 BL 0x1C16CF4
	0x034C3A88 MOVZ W8, 0x1
	0x034C3A8C STRB W8, [X20 + 0xA98]
	0x034C3A90 LDR X0, [X21]
	0x034C3A94 LDR W8, [X0 + 0xE0]
	0x034C3A98 CBNZ W8, 0x34C3AA0
	0x034C3A9C BL 0x1C16DFC
	0x034C3AA0 MOV X0, X19
	0x034C3AA4 BL 0x34C3AB4
	0x034C3AA8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1C000
	006 Move X21, 0xC70000
	007 Move W8, [X20+2416]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC70000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2416], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Destination_GetDisplayName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Destination_GetDisplayName_Native(System.IntPtr obj)

Disassembly:
	0x034C3AAC LDP X30, X21, [X31], #0x20
	0x034C3AB0 B 0x34B3B78
	0x034C3AB4 SUB X31, X31, 0x50
	0x034C3AB8 STR X30, [X31 + 0x30]
	0x034C3ABC STP X20, X19, [X31 + 0x40]
	0x034C3AC0 ADRP X20, 0xF1B000
	0x034C3AC4 LDR X8, [X20 + 0xAA0]
	0x034C3AC8 MOV X19, X0
	0x034C3ACC CBNZ X8, 0x34C3B18
	0x034C3AD0 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3AD4 LDR V0, [X12 + 0x5B8]
	0x034C3AD8 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3ADC ADRP X10, 0xFFFFFFFFFD666000
	0x034C3AE0 ADD X8, X8, 0xDD2
	0x034C3AE4 MOVZ W9, 0x11
	0x034C3AE8 ADD X10, X10, 0xE0A
	0x034C3AEC MOVZ W11, 0x22
	0x034C3AF0 MOVZ W13, 0x8
	0x034C3AF4 ADD X0, X31, 0x0
	0x034C3AF8 STP X8, X9, [X31]
	0x034C3AFC STP X10, X11, [X31 + 0x10]
	0x034C3B00 STR W13, [X31 + 0x28]
	0x034C3B04 STR D0, [X31 + 0x20]
	0x034C3B08 STRB W31, [X31 + 0x2C]
	0x034C3B0C BL 0x1C1729C
	0x034C3B10 MOV X8, X0
	0x034C3B14 STR X0, [X20 + 0xAA0]
	0x034C3B18 MOV X0, X19
	0x034C3B1C BLR X8
	0x034C3B20 LDP X20, X19, [X31 + 0x40]
	0x034C3B24 LDR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2424]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1385
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2424], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Destination_GetShareableUri(System.IntPtr obj)

Disassembly:
	0x034C3B28 ADD X31, X31, 0x50
	0x034C3B2C RET
	0x034C3B30 SUB X31, X31, 0x50
	0x034C3B34 STR X30, [X31 + 0x30]
	0x034C3B38 STP X20, X19, [X31 + 0x40]
	0x034C3B3C ADRP X20, 0xF1B000
	0x034C3B40 LDR X8, [X20 + 0xAA8]
	0x034C3B44 MOV X19, X0
	0x034C3B48 CBNZ X8, 0x34C3B94
	0x034C3B4C ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3B50 LDR V0, [X12 + 0x5B8]
	0x034C3B54 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3B58 ADRP X10, 0xFFFFFFFFFD65D000
	0x034C3B5C ADD X8, X8, 0xDD2
	0x034C3B60 MOVZ W9, 0x11
	0x034C3B64 ADD X10, X10, 0x1DF
	0x034C3B68 MOVZ W11, 0x27
	0x034C3B6C MOVZ W13, 0x8
	0x034C3B70 ADD X0, X31, 0x0
	0x034C3B74 STP X8, X9, [X31]
	0x034C3B78 STP X10, X11, [X31 + 0x10]
	0x034C3B7C STR W13, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1C000
	006 Move X21, 0xC70000
	007 Move W8, [X20+2432]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC70000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2432], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Destination_GetShareableUri_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Destination_GetShareableUri_Native(System.IntPtr obj)

Disassembly:
	0x034C3B80 STR D0, [X31 + 0x20]
	0x034C3B84 STRB W31, [X31 + 0x2C]
	0x034C3B88 BL 0x1C1729C
	0x034C3B8C MOV X8, X0
	0x034C3B90 STR X0, [X20 + 0xAA8]
	0x034C3B94 MOV X0, X19
	0x034C3B98 BLR X8
	0x034C3B9C LDP X20, X19, [X31 + 0x40]
	0x034C3BA0 LDR X30, [X31 + 0x30]
	0x034C3BA4 ADD X31, X31, 0x50
	0x034C3BA8 RET
	0x034C3BAC STP X30, X21, [X31 - 0x20]!
	0x034C3BB0 STP X20, X19, [X31 + 0x10]
	0x034C3BB4 ADRP X20, 0xF1B000
	0x034C3BB8 ADRP X21, 0xC6F000
	0x034C3BBC LDRB W8, [X20 + 0xAB0]
	0x034C3BC0 LDR X21, [X21 + 0x328]
	0x034C3BC4 MOV X19, X0
	0x034C3BC8 TBNZ X8, 0x0, 0x34C3BE0
	0x034C3BCC ADRP X0, 0xC6F000
	0x034C3BD0 LDR X0, [X0 + 0x328]
	0x034C3BD4 BL 0x1C16CF4
	0x034C3BD8 MOVZ W8, 0x1
	0x034C3BDC STRB W8, [X20 + 0xAB0]
	0x034C3BE0 LDR X0, [X21]
	0x034C3BE4 LDR W8, [X0 + 0xE0]
	0x034C3BE8 CBNZ W8, 0x34C3BF0
	0x034C3BEC BL 0x1C16DFC
	0x034C3BF0 MOV X0, X19
	0x034C3BF4 BL 0x34C3C04
	0x034C3BF8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2440]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43655168
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 447
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2440], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_DestinationArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C3BFC LDP X30, X21, [X31], #0x20
	0x034C3C00 B 0x34B3B78
	0x034C3C04 SUB X31, X31, 0x50
	0x034C3C08 STR X30, [X31 + 0x30]
	0x034C3C0C STP X20, X19, [X31 + 0x40]
	0x034C3C10 ADRP X20, 0xF1B000
	0x034C3C14 LDR X8, [X20 + 0xAB8]
	0x034C3C18 MOV X19, X0
	0x034C3C1C CBNZ X8, 0x34C3C68
	0x034C3C20 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3C24 LDR V0, [X12 + 0x5B8]
	0x034C3C28 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3C2C ADRP X10, 0xFFFFFFFFFD656000
	0x034C3C30 ADD X8, X8, 0xDD2
	0x034C3C34 MOVZ W9, 0x11
	0x034C3C38 ADD X10, X10, 0xE49
	0x034C3C3C MOVZ W11, 0x27
	0x034C3C40 MOVZ W13, 0x8
	0x034C3C44 ADD X0, X31, 0x0
	0x034C3C48 STP X8, X9, [X31]
	0x034C3C4C STP X10, X11, [X31 + 0x10]
	0x034C3C50 STR W13, [X31 + 0x28]
	0x034C3C54 STR D0, [X31 + 0x20]
	0x034C3C58 STRB W31, [X31 + 0x2C]
	0x034C3C5C BL 0x1C1729C
	0x034C3C60 MOV X8, X0
	0x034C3C64 STR X0, [X20 + 0xAB8]
	0x034C3C68 MOV X0, X19
	0x034C3C6C BLR X8
	0x034C3C70 LDP X20, X19, [X31 + 0x40]
	0x034C3C74 LDR X30, [X31 + 0x30]
	0x034C3C78 ADD X31, X31, 0x50
	0x034C3C7C RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1C000
	007 Move X8, [X21+2448]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43864064
	013 Move V0, [X12+1464]
	014 Move X8, -43708416
	015 Move X10, -43745280
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1933
	019 Move W11, 31
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+2448], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_DestinationArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034C3C80 SUB X31, X31, 0x50
	0x034C3C84 STP X30, X21, [X31 + 0x30]
	0x034C3C88 STP X20, X19, [X31 + 0x40]
	0x034C3C8C ADRP X21, 0xF1B000
	0x034C3C90 LDR X8, [X21 + 0xAC0]
	0x034C3C94 MOV X19, X1
	0x034C3C98 MOV X20, X0
	0x034C3C9C CBNZ X8, 0x34C3CE8
	0x034C3CA0 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3CA4 LDR V0, [X12 + 0x5B8]
	0x034C3CA8 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3CAC ADRP X10, 0xFFFFFFFFFD639000
	0x034C3CB0 ADD X8, X8, 0xDD2
	0x034C3CB4 MOVZ W9, 0x11
	0x034C3CB8 ADD X10, X10, 0x78F
	0x034C3CBC MOVZ W11, 0x28
	0x034C3CC0 MOVZ W13, 0x10
	0x034C3CC4 ADD X0, X31, 0x0
	0x034C3CC8 STP X8, X9, [X31]
	0x034C3CCC STP X10, X11, [X31 + 0x10]
	0x034C3CD0 STR W13, [X31 + 0x28]
	0x034C3CD4 STR D0, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1C000
	006 Move X21, 0xC70000
	007 Move W8, [X20+2456]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC70000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2456], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_DestinationArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_DestinationArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C3CD8 STRB W31, [X31 + 0x2C]
	0x034C3CDC BL 0x1C1729C
	0x034C3CE0 MOV X8, X0
	0x034C3CE4 STR X0, [X21 + 0xAC0]
	0x034C3CE8 MOV X0, X20
	0x034C3CEC MOV X1, X19
	0x034C3CF0 BLR X8
	0x034C3CF4 LDP X20, X19, [X31 + 0x40]
	0x034C3CF8 LDP X30, X21, [X31 + 0x30]
	0x034C3CFC ADD X31, X31, 0x50
	0x034C3D00 RET
	0x034C3D04 SUB X31, X31, 0x50
	0x034C3D08 STR X30, [X31 + 0x30]
	0x034C3D0C STP X20, X19, [X31 + 0x40]
	0x034C3D10 ADRP X20, 0xF1B000
	0x034C3D14 LDR X8, [X20 + 0xAC8]
	0x034C3D18 MOV X19, X0
	0x034C3D1C CBNZ X8, 0x34C3D68
	0x034C3D20 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3D24 LDR V0, [X12 + 0x5B8]
	0x034C3D28 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3D2C ADRP X10, 0xFFFFFFFFFD663000
	0x034C3D30 ADD X8, X8, 0xDD2
	0x034C3D34 MOVZ W9, 0x11
	0x034C3D38 ADD X10, X10, 0x3AE
	0x034C3D3C MOVZ W11, 0x25
	0x034C3D40 MOVZ W13, 0x8
	0x034C3D44 ADD X0, X31, 0x0
	0x034C3D48 STP X8, X9, [X31]
	0x034C3D4C STP X10, X11, [X31 + 0x10]
	0x034C3D50 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2464]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1416
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2464], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_DestinationArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C3D54 STR D0, [X31 + 0x20]
	0x034C3D58 STRB W31, [X31 + 0x2C]
	0x034C3D5C BL 0x1C1729C
	0x034C3D60 MOV X8, X0
	0x034C3D64 STR X0, [X20 + 0xAC8]
	0x034C3D68 MOV X0, X19
	0x034C3D6C BLR X8
	0x034C3D70 LDP X20, X19, [X31 + 0x40]
	0x034C3D74 LDR X30, [X31 + 0x30]
	0x034C3D78 ADD X31, X31, 0x50
	0x034C3D7C RET
	0x034C3D80 SUB X31, X31, 0x50
	0x034C3D84 STR X30, [X31 + 0x30]
	0x034C3D88 STP X20, X19, [X31 + 0x40]
	0x034C3D8C ADRP X20, 0xF1B000
	0x034C3D90 LDR X8, [X20 + 0xAD0]
	0x034C3D94 MOV X19, X0
	0x034C3D98 CBNZ X8, 0x34C3DE4
	0x034C3D9C ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3DA0 LDR V0, [X12 + 0x5B8]
	0x034C3DA4 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3DA8 ADRP X10, 0xFFFFFFFFFD641000
	0x034C3DAC ADD X8, X8, 0xDD2
	0x034C3DB0 MOVZ W9, 0x11
	0x034C3DB4 ADD X10, X10, 0x794
	0x034C3DB8 MOVZ W11, 0x28
	0x034C3DBC MOVZ W13, 0x8
	0x034C3DC0 ADD X0, X31, 0x0
	0x034C3DC4 STP X8, X9, [X31]
	0x034C3DC8 STP X10, X11, [X31 + 0x10]
	0x034C3DCC STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2472]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43618304
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3565
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2472], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_DestinationArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034C3DD0 STR D0, [X31 + 0x20]
	0x034C3DD4 STRB W31, [X31 + 0x2C]
	0x034C3DD8 BL 0x1C1729C
	0x034C3DDC MOV X8, X0
	0x034C3DE0 STR X0, [X20 + 0xAD0]
	0x034C3DE4 MOV X0, X19
	0x034C3DE8 BLR X8
	0x034C3DEC LDP X20, X19, [X31 + 0x40]
	0x034C3DF0 LDR X30, [X31 + 0x30]
	0x034C3DF4 CMP W0, 0x0
	0x034C3DF8 CSET W0, NE
	0x034C3DFC ADD X31, X31, 0x50
	0x034C3E00 RET
	0x034C3E04 STP X30, X21, [X31 - 0x20]!
	0x034C3E08 STP X20, X19, [X31 + 0x10]
	0x034C3E0C ADRP X20, 0xF1B000
	0x034C3E10 ADRP X21, 0xC6F000
	0x034C3E14 LDRB W8, [X20 + 0xAD8]
	0x034C3E18 LDR X21, [X21 + 0x328]
	0x034C3E1C MOV X19, X0
	0x034C3E20 TBNZ X8, 0x0, 0x34C3E38
	0x034C3E24 ADRP X0, 0xC6F000
	0x034C3E28 LDR X0, [X0 + 0x328]
	0x034C3E2C BL 0x1C16CF4
	0x034C3E30 MOVZ W8, 0x1
	0x034C3E34 STRB W8, [X20 + 0xAD8]
	0x034C3E38 LDR X0, [X21]
	0x034C3E3C LDR W8, [X0 + 0xE0]
	0x034C3E40 CBNZ W8, 0x34C3E48
	0x034C3E44 BL 0x1C16DFC
	0x034C3E48 MOV X0, X19
	0x034C3E4C BL 0x34C3E5C
	0x034C3E50 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2480]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43835392
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1641
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2480], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Int32 ovr_Error_GetCode(System.IntPtr obj)

Disassembly:
	0x034C3E54 LDP X30, X21, [X31], #0x20
	0x034C3E58 B 0x34B3B78
	0x034C3E5C SUB X31, X31, 0x50
	0x034C3E60 STR X30, [X31 + 0x30]
	0x034C3E64 STP X20, X19, [X31 + 0x40]
	0x034C3E68 ADRP X20, 0xF1B000
	0x034C3E6C LDR X8, [X20 + 0xAE0]
	0x034C3E70 MOV X19, X0
	0x034C3E74 CBNZ X8, 0x34C3EC0
	0x034C3E78 ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3E7C LDR V0, [X12 + 0x5B8]
	0x034C3E80 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3E84 ADRP X10, 0xFFFFFFFFFD643000
	0x034C3E88 ADD X8, X8, 0xDD2
	0x034C3E8C MOVZ W9, 0x11
	0x034C3E90 ADD X10, X10, 0x5A8
	0x034C3E94 MOVZ W11, 0x23
	0x034C3E98 MOVZ W13, 0x8
	0x034C3E9C ADD X0, X31, 0x0
	0x034C3EA0 STP X8, X9, [X31]
	0x034C3EA4 STP X10, X11, [X31 + 0x10]
	0x034C3EA8 STR W13, [X31 + 0x28]
	0x034C3EAC STR D0, [X31 + 0x20]
	0x034C3EB0 STRB W31, [X31 + 0x2C]
	0x034C3EB4 BL 0x1C1729C
	0x034C3EB8 MOV X8, X0
	0x034C3EBC STR X0, [X20 + 0xAE0]
	0x034C3EC0 MOV X0, X19
	0x034C3EC4 BLR X8
	0x034C3EC8 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2488]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X11, -43864064
	011 Move V0, [X11+1464]
	012 Move X8, -43708416
	013 Move X10, -43778048
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 854
	017 Move W12, 8
	018 Add X0, X31, 0
	019 Move [X31], X8
	020 Move [X31+8], X9
	021 Move [X31+16], X10
	022 Move [X31+24], X9
	023 Move [X31+40], W12
	024 Move [X31+32], D0
	025 Move [X31+44], W31
	026 Call 0x1C1829C
	027 Move X8, X0
	028 Move [X20+2488], X0
	029 Move X0, X19
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Move X30, [X31+48]
	034 Add X31, X31, 80
	035 Return X0

Method: System.String ovr_Error_GetDisplayableMessage(System.IntPtr obj)

Disassembly:
	0x034C3ECC LDR X30, [X31 + 0x30]
	0x034C3ED0 ADD X31, X31, 0x50
	0x034C3ED4 RET
	0x034C3ED8 STP X30, X21, [X31 - 0x20]!
	0x034C3EDC STP X20, X19, [X31 + 0x10]
	0x034C3EE0 ADRP X20, 0xF1B000
	0x034C3EE4 ADRP X21, 0xC6F000
	0x034C3EE8 LDRB W8, [X20 + 0xAE8]
	0x034C3EEC LDR X21, [X21 + 0x328]
	0x034C3EF0 MOV X19, X0
	0x034C3EF4 TBNZ X8, 0x0, 0x34C3F0C
	0x034C3EF8 ADRP X0, 0xC6F000
	0x034C3EFC LDR X0, [X0 + 0x328]
	0x034C3F00 BL 0x1C16CF4
	0x034C3F04 MOVZ W8, 0x1
	0x034C3F08 STRB W8, [X20 + 0xAE8]
	0x034C3F0C LDR X0, [X21]
	0x034C3F10 LDR W8, [X0 + 0xE0]
	0x034C3F14 CBNZ W8, 0x34C3F1C
	0x034C3F18 BL 0x1C16DFC
	0x034C3F1C MOV X0, X19
	0x034C3F20 BL 0x34C3F30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1C000
	006 Move X21, 0xC70000
	007 Move W8, [X20+2496]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC70000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2496], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Error_GetDisplayableMessage_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Error_GetDisplayableMessage_Native(System.IntPtr obj)

Disassembly:
	0x034C3F24 LDP X20, X19, [X31 + 0x10]
	0x034C3F28 LDP X30, X21, [X31], #0x20
	0x034C3F2C B 0x34B3B78
	0x034C3F30 SUB X31, X31, 0x50
	0x034C3F34 STR X30, [X31 + 0x30]
	0x034C3F38 STP X20, X19, [X31 + 0x40]
	0x034C3F3C ADRP X20, 0xF1B000
	0x034C3F40 LDR X8, [X20 + 0xAF0]
	0x034C3F44 MOV X19, X0
	0x034C3F48 CBNZ X8, 0x34C3F94
	0x034C3F4C ADRP X12, 0xFFFFFFFFFD62A000
	0x034C3F50 LDR V0, [X12 + 0x5B8]
	0x034C3F54 ADRP X8, 0xFFFFFFFFFD650000
	0x034C3F58 ADRP X10, 0xFFFFFFFFFD668000
	0x034C3F5C ADD X8, X8, 0xDD2
	0x034C3F60 MOVZ W9, 0x11
	0x034C3F64 ADD X10, X10, 0xC9E
	0x034C3F68 MOVZ W11, 0x22
	0x034C3F6C MOVZ W13, 0x8
	0x034C3F70 ADD X0, X31, 0x0
	0x034C3F74 STP X8, X9, [X31]
	0x034C3F78 STP X10, X11, [X31 + 0x10]
	0x034C3F7C STR W13, [X31 + 0x28]
	0x034C3F80 STR D0, [X31 + 0x20]
	0x034C3F84 STRB W31, [X31 + 0x2C]
	0x034C3F88 BL 0x1C1729C
	0x034C3F8C MOV X8, X0
	0x034C3F90 STR X0, [X20 + 0xAF0]
	0x034C3F94 MOV X0, X19
	0x034C3F98 BLR X8
	0x034C3F9C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2504]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43802624
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1903
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2504], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int32 ovr_Error_GetHttpCode(System.IntPtr obj)

Disassembly:
	0x034C3FA0 LDR X30, [X31 + 0x30]
	0x034C3FA4 ADD X31, X31, 0x50
	0x034C3FA8 RET
	0x034C3FAC STP X30, X21, [X31 - 0x20]!
	0x034C3FB0 STP X20, X19, [X31 + 0x10]
	0x034C3FB4 ADRP X20, 0xF1B000
	0x034C3FB8 ADRP X21, 0xC6F000
	0x034C3FBC LDRB W8, [X20 + 0xAF8]
	0x034C3FC0 LDR X21, [X21 + 0x328]
	0x034C3FC4 MOV X19, X0
	0x034C3FC8 TBNZ X8, 0x0, 0x34C3FE0
	0x034C3FCC ADRP X0, 0xC6F000
	0x034C3FD0 LDR X0, [X0 + 0x328]
	0x034C3FD4 BL 0x1C16CF4
	0x034C3FD8 MOVZ W8, 0x1
	0x034C3FDC STRB W8, [X20 + 0xAF8]
	0x034C3FE0 LDR X0, [X21]
	0x034C3FE4 LDR W8, [X0 + 0xE0]
	0x034C3FE8 CBNZ W8, 0x34C3FF0
	0x034C3FEC BL 0x1C16DFC
	0x034C3FF0 MOV X0, X19
	0x034C3FF4 BL 0x34C4004
	0x034C3FF8 LDP X20, X19, [X31 + 0x10]
	0x034C3FFC LDP X30, X21, [X31], #0x20
	0x034C4000 B 0x34B3B78
	0x034C4004 SUB X31, X31, 0x50
	0x034C4008 STR X30, [X31 + 0x30]
	0x034C400C STP X20, X19, [X31 + 0x40]
	0x034C4010 ADRP X20, 0xF1A000
	0x034C4014 LDR X8, [X20 + 0xB00]
	0x034C4018 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1C000
	006 Move X8, [X20+2512]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43864064
	011 Move V0, [X12+1464]
	012 Move X8, -43708416
	013 Move X10, -43753472
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1395
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2512], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Error_GetMessage(System.IntPtr obj)

Disassembly:
	0x034C401C CBNZ X8, 0x34C4068
	0x034C4020 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4024 LDR V0, [X12 + 0x5B8]
	0x034C4028 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C402C ADRP X10, 0xFFFFFFFFFD648000
	0x034C4030 ADD X8, X8, 0xDD2
	0x034C4034 MOVZ W9, 0x11
	0x034C4038 ADD X10, X10, 0x381
	0x034C403C MOVZ W11, 0x1B
	0x034C4040 MOVZ W13, 0x8
	0x034C4044 ADD X0, X31, 0x0
	0x034C4048 STP X8, X9, [X31]
	0x034C404C STP X10, X11, [X31 + 0x10]
	0x034C4050 STR W13, [X31 + 0x28]
	0x034C4054 STR D0, [X31 + 0x20]
	0x034C4058 STRB W31, [X31 + 0x2C]
	0x034C405C BL 0x1C1729C
	0x034C4060 MOV X8, X0
	0x034C4064 STR X0, [X20 + 0xB00]
	0x034C4068 MOV X0, X19
	0x034C406C BLR X8
	0x034C4070 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2520]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2520], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Error_GetMessage_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Error_GetMessage_Native(System.IntPtr obj)

Disassembly:
	0x034C4074 LDR X30, [X31 + 0x30]
	0x034C4078 ADD X31, X31, 0x50
	0x034C407C RET
	0x034C4080 SUB X31, X31, 0x50
	0x034C4084 STR X30, [X31 + 0x30]
	0x034C4088 STP X20, X19, [X31 + 0x40]
	0x034C408C ADRP X20, 0xF1A000
	0x034C4090 LDR X8, [X20 + 0xB08]
	0x034C4094 MOV X19, X0
	0x034C4098 CBNZ X8, 0x34C40E4
	0x034C409C ADRP X12, 0xFFFFFFFFFD629000
	0x034C40A0 LDR V0, [X12 + 0x5B8]
	0x034C40A4 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C40A8 ADRP X10, 0xFFFFFFFFFD64A000
	0x034C40AC ADD X8, X8, 0xDD2
	0x034C40B0 MOVZ W9, 0x11
	0x034C40B4 ADD X10, X10, 0x4A9
	0x034C40B8 MOVZ W11, 0x25
	0x034C40BC MOVZ W13, 0x8
	0x034C40C0 ADD X0, X31, 0x0
	0x034C40C4 STP X8, X9, [X31]
	0x034C40C8 STP X10, X11, [X31 + 0x10]
	0x034C40CC STR W13, [X31 + 0x28]
	0x034C40D0 STR D0, [X31 + 0x20]
	0x034C40D4 STRB W31, [X31 + 0x2C]
	0x034C40D8 BL 0x1C1729C
	0x034C40DC MOV X8, X0
	0x034C40E0 STR X0, [X20 + 0xB08]
	0x034C40E4 MOV X0, X19
	0x034C40E8 BLR X8
	0x034C40EC LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2528]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3482
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2528], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_GroupPresenceJoinIntent_GetDeeplinkMessage(System.IntPtr obj)

Disassembly:
	0x034C40F0 LDR X30, [X31 + 0x30]
	0x034C40F4 CMP W0, 0x0
	0x034C40F8 CSET W0, NE
	0x034C40FC ADD X31, X31, 0x50
	0x034C4100 RET
	0x034C4104 SUB X31, X31, 0x50
	0x034C4108 STR X30, [X31 + 0x30]
	0x034C410C STP X20, X19, [X31 + 0x40]
	0x034C4110 ADRP X20, 0xF1A000
	0x034C4114 LDR X8, [X20 + 0xB10]
	0x034C4118 MOV X19, X0
	0x034C411C CBNZ X8, 0x34C4168
	0x034C4120 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4124 LDR V0, [X12 + 0x5B8]
	0x034C4128 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C412C ADRP X10, 0xFFFFFFFFFD63C000
	0x034C4130 ADD X8, X8, 0xDD2
	0x034C4134 MOVZ W9, 0x11
	0x034C4138 ADD X10, X10, 0x2A4
	0x034C413C MOVZ W11, 0x26
	0x034C4140 MOVZ W13, 0x8
	0x034C4144 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2536]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2536], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native(System.IntPtr obj)

Disassembly:
	0x034C4148 STP X8, X9, [X31]
	0x034C414C STP X10, X11, [X31 + 0x10]
	0x034C4150 STR W13, [X31 + 0x28]
	0x034C4154 STR D0, [X31 + 0x20]
	0x034C4158 STRB W31, [X31 + 0x2C]
	0x034C415C BL 0x1C1729C
	0x034C4160 MOV X8, X0
	0x034C4164 STR X0, [X20 + 0xB10]
	0x034C4168 MOV X0, X19
	0x034C416C BLR X8
	0x034C4170 LDP X20, X19, [X31 + 0x40]
	0x034C4174 LDR X30, [X31 + 0x30]
	0x034C4178 CMP W0, 0x0
	0x034C417C CSET W0, NE
	0x034C4180 ADD X31, X31, 0x50
	0x034C4184 RET
	0x034C4188 STP X30, X21, [X31 - 0x20]!
	0x034C418C STP X20, X19, [X31 + 0x10]
	0x034C4190 ADRP X20, 0xF1A000
	0x034C4194 ADRP X21, 0xC6E000
	0x034C4198 LDRB W8, [X20 + 0xB18]
	0x034C419C LDR X21, [X21 + 0x328]
	0x034C41A0 MOV X19, X0
	0x034C41A4 TBNZ X8, 0x0, 0x34C41BC
	0x034C41A8 ADRP X0, 0xC6E000
	0x034C41AC LDR X0, [X0 + 0x328]
	0x034C41B0 BL 0x1C16CF4
	0x034C41B4 MOVZ W8, 0x1
	0x034C41B8 STRB W8, [X20 + 0xB18]
	0x034C41BC LDR X0, [X21]
	0x034C41C0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2544]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43839488
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1674
	017 Move W11, 46
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2544], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_GroupPresenceJoinIntent_GetDestinationApiName(System.IntPtr obj)

Disassembly:
	0x034C41C4 CBNZ W8, 0x34C41CC
	0x034C41C8 BL 0x1C16DFC
	0x034C41CC MOV X0, X19
	0x034C41D0 BL 0x34C41E0
	0x034C41D4 LDP X20, X19, [X31 + 0x10]
	0x034C41D8 LDP X30, X21, [X31], #0x20
	0x034C41DC B 0x34B3B78
	0x034C41E0 SUB X31, X31, 0x50
	0x034C41E4 STR X30, [X31 + 0x30]
	0x034C41E8 STP X20, X19, [X31 + 0x40]
	0x034C41EC ADRP X20, 0xF1A000
	0x034C41F0 LDR X8, [X20 + 0xB20]
	0x034C41F4 MOV X19, X0
	0x034C41F8 CBNZ X8, 0x34C4244
	0x034C41FC ADRP X12, 0xFFFFFFFFFD629000
	0x034C4200 LDR V0, [X12 + 0x5B8]
	0x034C4204 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4208 ADRP X10, 0xFFFFFFFFFD62A000
	0x034C420C ADD X8, X8, 0xDD2
	0x034C4210 MOVZ W9, 0x11
	0x034C4214 ADD X10, X10, 0x87A
	0x034C4218 MOVZ W11, 0x24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2552]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2552], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native(System.IntPtr obj)

Disassembly:
	0x034C421C MOVZ W13, 0x8
	0x034C4220 ADD X0, X31, 0x0
	0x034C4224 STP X8, X9, [X31]
	0x034C4228 STP X10, X11, [X31 + 0x10]
	0x034C422C STR W13, [X31 + 0x28]
	0x034C4230 STR D0, [X31 + 0x20]
	0x034C4234 STRB W31, [X31 + 0x2C]
	0x034C4238 BL 0x1C1729C
	0x034C423C MOV X8, X0
	0x034C4240 STR X0, [X20 + 0xB20]
	0x034C4244 MOV X0, X19
	0x034C4248 BLR X8
	0x034C424C LDP X20, X19, [X31 + 0x40]
	0x034C4250 LDR X30, [X31 + 0x30]
	0x034C4254 ADD X31, X31, 0x50
	0x034C4258 RET
	0x034C425C STP X30, X21, [X31 - 0x20]!
	0x034C4260 STP X20, X19, [X31 + 0x10]
	0x034C4264 ADRP X20, 0xF1A000
	0x034C4268 ADRP X21, 0xC6E000
	0x034C426C LDRB W8, [X20 + 0xB28]
	0x034C4270 LDR X21, [X21 + 0x328]
	0x034C4274 MOV X19, X0
	0x034C4278 TBNZ X8, 0x0, 0x34C4290
	0x034C427C ADRP X0, 0xC6E000
	0x034C4280 LDR X0, [X0 + 0x328]
	0x034C4284 BL 0x1C16CF4
	0x034C4288 MOVZ W8, 0x1
	0x034C428C STRB W8, [X20 + 0xB28]
	0x034C4290 LDR X0, [X21]
	0x034C4294 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2560]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3503
	017 Move W11, 49
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2560], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_GroupPresenceJoinIntent_GetLobbySessionId(System.IntPtr obj)

Disassembly:
	0x034C4298 CBNZ W8, 0x34C42A0
	0x034C429C BL 0x1C16DFC
	0x034C42A0 MOV X0, X19
	0x034C42A4 BL 0x34C42B4
	0x034C42A8 LDP X20, X19, [X31 + 0x10]
	0x034C42AC LDP X30, X21, [X31], #0x20
	0x034C42B0 B 0x34B3B78
	0x034C42B4 SUB X31, X31, 0x50
	0x034C42B8 STR X30, [X31 + 0x30]
	0x034C42BC STP X20, X19, [X31 + 0x40]
	0x034C42C0 ADRP X20, 0xF1A000
	0x034C42C4 LDR X8, [X20 + 0xB30]
	0x034C42C8 MOV X19, X0
	0x034C42CC CBNZ X8, 0x34C4318
	0x034C42D0 ADRP X12, 0xFFFFFFFFFD629000
	0x034C42D4 LDR V0, [X12 + 0x5B8]
	0x034C42D8 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C42DC ADRP X10, 0xFFFFFFFFFD63A000
	0x034C42E0 ADD X8, X8, 0xDD2
	0x034C42E4 MOVZ W9, 0x11
	0x034C42E8 ADD X10, X10, 0x48A
	0x034C42EC MOVZ W11, 0x27

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2568]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2568], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native(System.IntPtr obj)

Disassembly:
	0x034C42F0 MOVZ W13, 0x8
	0x034C42F4 ADD X0, X31, 0x0
	0x034C42F8 STP X8, X9, [X31]
	0x034C42FC STP X10, X11, [X31 + 0x10]
	0x034C4300 STR W13, [X31 + 0x28]
	0x034C4304 STR D0, [X31 + 0x20]
	0x034C4308 STRB W31, [X31 + 0x2C]
	0x034C430C BL 0x1C1729C
	0x034C4310 MOV X8, X0
	0x034C4314 STR X0, [X20 + 0xB30]
	0x034C4318 MOV X0, X19
	0x034C431C BLR X8
	0x034C4320 LDP X20, X19, [X31 + 0x40]
	0x034C4324 LDR X30, [X31 + 0x30]
	0x034C4328 ADD X31, X31, 0x50
	0x034C432C RET
	0x034C4330 STP X30, X21, [X31 - 0x20]!
	0x034C4334 STP X20, X19, [X31 + 0x10]
	0x034C4338 ADRP X20, 0xF1A000
	0x034C433C ADRP X21, 0xC6E000
	0x034C4340 LDRB W8, [X20 + 0xB38]
	0x034C4344 LDR X21, [X21 + 0x328]
	0x034C4348 MOV X19, X0
	0x034C434C TBNZ X8, 0x0, 0x34C4364
	0x034C4350 ADRP X0, 0xC6E000
	0x034C4354 LDR X0, [X0 + 0x328]
	0x034C4358 BL 0x1C16CF4
	0x034C435C MOVZ W8, 0x1
	0x034C4360 STRB W8, [X20 + 0xB38]
	0x034C4364 LDR X0, [X21]
	0x034C4368 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2576]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43712512
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3714
	017 Move W11, 45
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2576], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_GroupPresenceJoinIntent_GetMatchSessionId(System.IntPtr obj)

Disassembly:
	0x034C436C CBNZ W8, 0x34C4374
	0x034C4370 BL 0x1C16DFC
	0x034C4374 MOV X0, X19
	0x034C4378 BL 0x34C4388
	0x034C437C LDP X20, X19, [X31 + 0x10]
	0x034C4380 LDP X30, X21, [X31], #0x20
	0x034C4384 B 0x34B3B78
	0x034C4388 SUB X31, X31, 0x50
	0x034C438C STR X30, [X31 + 0x30]
	0x034C4390 STP X20, X19, [X31 + 0x40]
	0x034C4394 ADRP X20, 0xF1A000
	0x034C4398 LDR X8, [X20 + 0xB40]
	0x034C439C MOV X19, X0
	0x034C43A0 CBNZ X8, 0x34C43EC
	0x034C43A4 ADRP X12, 0xFFFFFFFFFD629000
	0x034C43A8 LDR V0, [X12 + 0x5B8]
	0x034C43AC ADRP X8, 0xFFFFFFFFFD64F000
	0x034C43B0 ADRP X10, 0xFFFFFFFFFD64F000
	0x034C43B4 ADD X8, X8, 0xDD2
	0x034C43B8 MOVZ W9, 0x11
	0x034C43BC ADD X10, X10, 0xEB0
	0x034C43C0 MOVZ W11, 0x21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2584]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2584], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native(System.IntPtr obj)

Disassembly:
	0x034C43C4 MOVZ W13, 0x8
	0x034C43C8 ADD X0, X31, 0x0
	0x034C43CC STP X8, X9, [X31]
	0x034C43D0 STP X10, X11, [X31 + 0x10]
	0x034C43D4 STR W13, [X31 + 0x28]
	0x034C43D8 STR D0, [X31 + 0x20]
	0x034C43DC STRB W31, [X31 + 0x2C]
	0x034C43E0 BL 0x1C1729C
	0x034C43E4 MOV X8, X0
	0x034C43E8 STR X0, [X20 + 0xB40]
	0x034C43EC MOV X0, X19
	0x034C43F0 BLR X8
	0x034C43F4 LDP X20, X19, [X31 + 0x40]
	0x034C43F8 LDR X30, [X31 + 0x30]
	0x034C43FC ADD X31, X31, 0x50
	0x034C4400 RET
	0x034C4404 SUB X31, X31, 0x50
	0x034C4408 STR X30, [X31 + 0x30]
	0x034C440C STP X20, X19, [X31 + 0x40]
	0x034C4410 ADRP X20, 0xF1A000
	0x034C4414 LDR X8, [X20 + 0xB48]
	0x034C4418 MOV X19, X0
	0x034C441C CBNZ X8, 0x34C4468
	0x034C4420 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4424 LDR V0, [X12 + 0x5B8]
	0x034C4428 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C442C ADRP X10, 0xFFFFFFFFFD663000
	0x034C4430 ADD X8, X8, 0xDD2
	0x034C4434 MOVZ W9, 0x11
	0x034C4438 ADD X10, X10, 0xDB2
	0x034C443C MOVZ W11, 0x1F

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2592]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43651072
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1230
	017 Move W11, 45
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2592], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_GroupPresenceLeaveIntent_GetDestinationApiName(System.IntPtr obj)

Disassembly:
	0x034C4440 MOVZ W13, 0x8
	0x034C4444 ADD X0, X31, 0x0
	0x034C4448 STP X8, X9, [X31]
	0x034C444C STP X10, X11, [X31 + 0x10]
	0x034C4450 STR W13, [X31 + 0x28]
	0x034C4454 STR D0, [X31 + 0x20]
	0x034C4458 STRB W31, [X31 + 0x2C]
	0x034C445C BL 0x1C1729C
	0x034C4460 MOV X8, X0
	0x034C4464 STR X0, [X20 + 0xB48]
	0x034C4468 MOV X0, X19
	0x034C446C BLR X8
	0x034C4470 LDP X20, X19, [X31 + 0x40]
	0x034C4474 LDR X30, [X31 + 0x30]
	0x034C4478 ADD X31, X31, 0x50
	0x034C447C RET
	0x034C4480 STP X30, X21, [X31 - 0x20]!
	0x034C4484 STP X20, X19, [X31 + 0x10]
	0x034C4488 ADRP X20, 0xF1A000
	0x034C448C ADRP X21, 0xC6E000
	0x034C4490 LDRB W8, [X20 + 0xB50]
	0x034C4494 LDR X21, [X21 + 0x328]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2600]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2600], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native(System.IntPtr obj)

Disassembly:
	0x034C4498 MOV X19, X0
	0x034C449C TBNZ X8, 0x0, 0x34C44B4
	0x034C44A0 ADRP X0, 0xC6E000
	0x034C44A4 LDR X0, [X0 + 0x328]
	0x034C44A8 BL 0x1C16CF4
	0x034C44AC MOVZ W8, 0x1
	0x034C44B0 STRB W8, [X20 + 0xB50]
	0x034C44B4 LDR X0, [X21]
	0x034C44B8 LDR W8, [X0 + 0xE0]
	0x034C44BC CBNZ W8, 0x34C44C4
	0x034C44C0 BL 0x1C16DFC
	0x034C44C4 MOV X0, X19
	0x034C44C8 BL 0x34C44D8
	0x034C44CC LDP X20, X19, [X31 + 0x10]
	0x034C44D0 LDP X30, X21, [X31], #0x20
	0x034C44D4 B 0x34B3B78
	0x034C44D8 SUB X31, X31, 0x50
	0x034C44DC STR X30, [X31 + 0x30]
	0x034C44E0 STP X20, X19, [X31 + 0x40]
	0x034C44E4 ADRP X20, 0xF1A000
	0x034C44E8 LDR X8, [X20 + 0xB58]
	0x034C44EC MOV X19, X0
	0x034C44F0 CBNZ X8, 0x34C453C
	0x034C44F4 ADRP X12, 0xFFFFFFFFFD629000
	0x034C44F8 LDR V0, [X12 + 0x5B8]
	0x034C44FC ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4500 ADRP X10, 0xFFFFFFFFFD63C000
	0x034C4504 ADD X8, X8, 0xDD2
	0x034C4508 MOVZ W9, 0x11
	0x034C450C ADD X10, X10, 0x2CB
	0x034C4510 MOVZ W11, 0x23

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2608]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43671552
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3919
	017 Move W11, 50
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2608], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_GroupPresenceLeaveIntent_GetLobbySessionId(System.IntPtr obj)

Disassembly:
	0x034C4514 MOVZ W13, 0x8
	0x034C4518 ADD X0, X31, 0x0
	0x034C451C STP X8, X9, [X31]
	0x034C4520 STP X10, X11, [X31 + 0x10]
	0x034C4524 STR W13, [X31 + 0x28]
	0x034C4528 STR D0, [X31 + 0x20]
	0x034C452C STRB W31, [X31 + 0x2C]
	0x034C4530 BL 0x1C1729C
	0x034C4534 MOV X8, X0
	0x034C4538 STR X0, [X20 + 0xB58]
	0x034C453C MOV X0, X19
	0x034C4540 BLR X8
	0x034C4544 LDP X20, X19, [X31 + 0x40]
	0x034C4548 LDR X30, [X31 + 0x30]
	0x034C454C ADD X31, X31, 0x50
	0x034C4550 RET
	0x034C4554 STP X30, X21, [X31 - 0x20]!
	0x034C4558 STP X20, X19, [X31 + 0x10]
	0x034C455C ADRP X20, 0xF1A000
	0x034C4560 ADRP X21, 0xC6E000
	0x034C4564 LDRB W8, [X20 + 0xB60]
	0x034C4568 LDR X21, [X21 + 0x328]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2616]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2616], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native(System.IntPtr obj)

Disassembly:
	0x034C456C MOV X19, X0
	0x034C4570 TBNZ X8, 0x0, 0x34C4588
	0x034C4574 ADRP X0, 0xC6E000
	0x034C4578 LDR X0, [X0 + 0x328]
	0x034C457C BL 0x1C16CF4
	0x034C4580 MOVZ W8, 0x1
	0x034C4584 STRB W8, [X20 + 0xB60]
	0x034C4588 LDR X0, [X21]
	0x034C458C LDR W8, [X0 + 0xE0]
	0x034C4590 CBNZ W8, 0x34C4598
	0x034C4594 BL 0x1C16DFC
	0x034C4598 MOV X0, X19
	0x034C459C BL 0x34C45AC
	0x034C45A0 LDP X20, X19, [X31 + 0x10]
	0x034C45A4 LDP X30, X21, [X31], #0x20
	0x034C45A8 B 0x34B3B78
	0x034C45AC SUB X31, X31, 0x50
	0x034C45B0 STR X30, [X31 + 0x30]
	0x034C45B4 STP X20, X19, [X31 + 0x40]
	0x034C45B8 ADRP X20, 0xF1A000
	0x034C45BC LDR X8, [X20 + 0xB68]
	0x034C45C0 MOV X19, X0
	0x034C45C4 CBNZ X8, 0x34C4610
	0x034C45C8 ADRP X12, 0xFFFFFFFFFD629000
	0x034C45CC LDR V0, [X12 + 0x5B8]
	0x034C45D0 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C45D4 ADRP X10, 0xFFFFFFFFFD64F000
	0x034C45D8 ADD X8, X8, 0xDD2
	0x034C45DC MOVZ W9, 0x11
	0x034C45E0 ADD X10, X10, 0xED2
	0x034C45E4 MOVZ W11, 0x23

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2624]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43749376
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1965
	017 Move W11, 46
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2624], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_GroupPresenceLeaveIntent_GetMatchSessionId(System.IntPtr obj)

Disassembly:
	0x034C45E8 MOVZ W13, 0x8
	0x034C45EC ADD X0, X31, 0x0
	0x034C45F0 STP X8, X9, [X31]
	0x034C45F4 STP X10, X11, [X31 + 0x10]
	0x034C45F8 STR W13, [X31 + 0x28]
	0x034C45FC STR D0, [X31 + 0x20]
	0x034C4600 STRB W31, [X31 + 0x2C]
	0x034C4604 BL 0x1C1729C
	0x034C4608 MOV X8, X0
	0x034C460C STR X0, [X20 + 0xB68]
	0x034C4610 MOV X0, X19
	0x034C4614 BLR X8
	0x034C4618 LDP X20, X19, [X31 + 0x40]
	0x034C461C LDR X30, [X31 + 0x30]
	0x034C4620 ADD X31, X31, 0x50
	0x034C4624 RET
	0x034C4628 STP X30, X21, [X31 - 0x20]!
	0x034C462C STP X20, X19, [X31 + 0x10]
	0x034C4630 ADRP X20, 0xF1A000
	0x034C4634 ADRP X21, 0xC6E000
	0x034C4638 LDRB W8, [X20 + 0xB70]
	0x034C463C LDR X21, [X21 + 0x328]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2632]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2632], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native(System.IntPtr obj)

Disassembly:
	0x034C4640 MOV X19, X0
	0x034C4644 TBNZ X8, 0x0, 0x34C465C
	0x034C4648 ADRP X0, 0xC6E000
	0x034C464C LDR X0, [X0 + 0x328]
	0x034C4650 BL 0x1C16CF4
	0x034C4654 MOVZ W8, 0x1
	0x034C4658 STRB W8, [X20 + 0xB70]
	0x034C465C LDR X0, [X21]
	0x034C4660 LDR W8, [X0 + 0xE0]
	0x034C4664 CBNZ W8, 0x34C466C
	0x034C4668 BL 0x1C16DFC
	0x034C466C MOV X0, X19
	0x034C4670 BL 0x34C4680
	0x034C4674 LDP X20, X19, [X31 + 0x10]
	0x034C4678 LDP X30, X21, [X31], #0x20
	0x034C467C B 0x34B3B78
	0x034C4680 SUB X31, X31, 0x50
	0x034C4684 STR X30, [X31 + 0x30]
	0x034C4688 STP X20, X19, [X31 + 0x40]
	0x034C468C ADRP X20, 0xF1A000
	0x034C4690 LDR X8, [X20 + 0xB78]
	0x034C4694 MOV X19, X0
	0x034C4698 CBNZ X8, 0x34C46E4
	0x034C469C ADRP X12, 0xFFFFFFFFFD629000
	0x034C46A0 LDR V0, [X12 + 0x5B8]
	0x034C46A4 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C46A8 ADRP X10, 0xFFFFFFFFFD658000
	0x034C46AC ADD X8, X8, 0xDD2
	0x034C46B0 MOVZ W9, 0x11
	0x034C46B4 ADD X10, X10, 0x26C
	0x034C46B8 MOVZ W11, 0x1F

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2640]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43757568
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1417
	017 Move W11, 46
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2640], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_HttpTransferUpdate_GetBytes(System.IntPtr obj)

Disassembly:
	0x034C46BC MOVZ W13, 0x8
	0x034C46C0 ADD X0, X31, 0x0
	0x034C46C4 STP X8, X9, [X31]
	0x034C46C8 STP X10, X11, [X31 + 0x10]
	0x034C46CC STR W13, [X31 + 0x28]
	0x034C46D0 STR D0, [X31 + 0x20]
	0x034C46D4 STRB W31, [X31 + 0x2C]
	0x034C46D8 BL 0x1C1729C
	0x034C46DC MOV X8, X0
	0x034C46E0 STR X0, [X20 + 0xB78]
	0x034C46E4 MOV X0, X19
	0x034C46E8 BLR X8
	0x034C46EC LDP X20, X19, [X31 + 0x40]
	0x034C46F0 LDR X30, [X31 + 0x30]
	0x034C46F4 ADD X31, X31, 0x50
	0x034C46F8 RET
	0x034C46FC SUB X31, X31, 0x50
	0x034C4700 STR X30, [X31 + 0x30]
	0x034C4704 STP X20, X19, [X31 + 0x40]
	0x034C4708 ADRP X20, 0xF1A000
	0x034C470C LDR X8, [X20 + 0xB80]
	0x034C4710 MOV X19, X0
	0x034C4714 CBNZ X8, 0x34C4760
	0x034C4718 ADRP X12, 0xFFFFFFFFFD629000
	0x034C471C LDR V0, [X12 + 0x5B8]
	0x034C4720 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4724 ADRP X10, 0xFFFFFFFFFD63E000
	0x034C4728 ADD X8, X8, 0xDD2
	0x034C472C MOVZ W9, 0x11
	0x034C4730 ADD X10, X10, 0x368
	0x034C4734 MOVZ W11, 0x1A

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2648]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43855872
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 793
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2648], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_HttpTransferUpdate_GetID(System.IntPtr obj)

Disassembly:
	0x034C4738 MOVZ W13, 0x8
	0x034C473C ADD X0, X31, 0x0
	0x034C4740 STP X8, X9, [X31]
	0x034C4744 STP X10, X11, [X31 + 0x10]
	0x034C4748 STR W13, [X31 + 0x28]
	0x034C474C STR D0, [X31 + 0x20]
	0x034C4750 STRB W31, [X31 + 0x2C]
	0x034C4754 BL 0x1C1729C
	0x034C4758 MOV X8, X0
	0x034C475C STR X0, [X20 + 0xB80]
	0x034C4760 MOV X0, X19
	0x034C4764 BLR X8
	0x034C4768 LDP X20, X19, [X31 + 0x40]
	0x034C476C LDR X30, [X31 + 0x30]
	0x034C4770 ADD X31, X31, 0x50
	0x034C4774 RET
	0x034C4778 SUB X31, X31, 0x50
	0x034C477C STR X30, [X31 + 0x30]
	0x034C4780 STP X20, X19, [X31 + 0x40]
	0x034C4784 ADRP X20, 0xF1A000
	0x034C4788 LDR X8, [X20 + 0xB88]
	0x034C478C MOV X19, X0
	0x034C4790 CBNZ X8, 0x34C47DC
	0x034C4794 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4798 LDR V0, [X12 + 0x5B8]
	0x034C479C ADRP X8, 0xFFFFFFFFFD64F000
	0x034C47A0 ADRP X10, 0xFFFFFFFFFD638000
	0x034C47A4 ADD X8, X8, 0xDD2
	0x034C47A8 MOVZ W9, 0x11
	0x034C47AC ADD X10, X10, 0x7B8
	0x034C47B0 MOVZ W11, 0x2E

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2656]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43614208
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3201
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2656], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_HttpTransferUpdate_GetSize(System.IntPtr obj)

Disassembly:
	0x034C47B4 MOVZ W13, 0x8
	0x034C47B8 ADD X0, X31, 0x0
	0x034C47BC STP X8, X9, [X31]
	0x034C47C0 STP X10, X11, [X31 + 0x10]
	0x034C47C4 STR W13, [X31 + 0x28]
	0x034C47C8 STR D0, [X31 + 0x20]
	0x034C47CC STRB W31, [X31 + 0x2C]
	0x034C47D0 BL 0x1C1729C
	0x034C47D4 MOV X8, X0
	0x034C47D8 STR X0, [X20 + 0xB88]
	0x034C47DC MOV X0, X19
	0x034C47E0 BLR X8
	0x034C47E4 LDP X20, X19, [X31 + 0x40]
	0x034C47E8 LDR X30, [X31 + 0x30]
	0x034C47EC CMP W0, 0x0
	0x034C47F0 CSET W0, NE
	0x034C47F4 ADD X31, X31, 0x50
	0x034C47F8 RET
	0x034C47FC SUB X31, X31, 0x50
	0x034C4800 STR X30, [X31 + 0x30]
	0x034C4804 STP X20, X19, [X31 + 0x40]
	0x034C4808 ADRP X20, 0xF1A000
	0x034C480C LDR X8, [X20 + 0xB90]
	0x034C4810 MOV X19, X0
	0x034C4814 CBNZ X8, 0x34C4860
	0x034C4818 ADRP X12, 0xFFFFFFFFFD629000
	0x034C481C LDR V0, [X12 + 0x5B8]
	0x034C4820 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4824 ADRP X10, 0xFFFFFFFFFD658000
	0x034C4828 ADD X8, X8, 0xDD2
	0x034C482C MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2664]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43671552
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3970
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2664], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_HttpTransferUpdate_IsCompleted(System.IntPtr obj)

Disassembly:
	0x034C4830 ADD X10, X10, 0x28C
	0x034C4834 MOVZ W11, 0x33
	0x034C4838 MOVZ W13, 0x8
	0x034C483C ADD X0, X31, 0x0
	0x034C4840 STP X8, X9, [X31]
	0x034C4844 STP X10, X11, [X31 + 0x10]
	0x034C4848 STR W13, [X31 + 0x28]
	0x034C484C STR D0, [X31 + 0x20]
	0x034C4850 STRB W31, [X31 + 0x2C]
	0x034C4854 BL 0x1C1729C
	0x034C4858 MOV X8, X0
	0x034C485C STR X0, [X20 + 0xB90]
	0x034C4860 MOV X0, X19
	0x034C4864 BLR X8
	0x034C4868 LDP X20, X19, [X31 + 0x40]
	0x034C486C LDR X30, [X31 + 0x30]
	0x034C4870 CMP W0, 0x0
	0x034C4874 CSET W0, NE
	0x034C4878 ADD X31, X31, 0x50
	0x034C487C RET
	0x034C4880 SUB X31, X31, 0x50
	0x034C4884 STR X30, [X31 + 0x30]
	0x034C4888 STP X20, X19, [X31 + 0x40]
	0x034C488C ADRP X20, 0xF1A000
	0x034C4890 LDR X8, [X20 + 0xB98]
	0x034C4894 MOV X19, X0
	0x034C4898 CBNZ X8, 0x34C48E4
	0x034C489C ADRP X12, 0xFFFFFFFFFD629000
	0x034C48A0 LDR V0, [X12 + 0x5B8]
	0x034C48A4 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C48A8 ADRP X10, 0xFFFFFFFFFD663000
	0x034C48AC ADD X8, X8, 0xDD2
	0x034C48B0 MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2672]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43642880
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 813
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2672], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_InstalledApplication_GetApplicationId(System.IntPtr obj)

Disassembly:
	0x034C48B4 ADD X10, X10, 0xDD2
	0x034C48B8 MOVZ W11, 0x2F
	0x034C48BC MOVZ W13, 0x8
	0x034C48C0 ADD X0, X31, 0x0
	0x034C48C4 STP X8, X9, [X31]
	0x034C48C8 STP X10, X11, [X31 + 0x10]
	0x034C48CC STR W13, [X31 + 0x28]
	0x034C48D0 STR D0, [X31 + 0x20]
	0x034C48D4 STRB W31, [X31 + 0x2C]
	0x034C48D8 BL 0x1C1729C
	0x034C48DC MOV X8, X0
	0x034C48E0 STR X0, [X20 + 0xB98]
	0x034C48E4 MOV X0, X19
	0x034C48E8 BLR X8
	0x034C48EC LDP X20, X19, [X31 + 0x40]
	0x034C48F0 LDR X30, [X31 + 0x30]
	0x034C48F4 ADD X31, X31, 0x50
	0x034C48F8 RET
	0x034C48FC SUB X31, X31, 0x50
	0x034C4900 STR X30, [X31 + 0x30]
	0x034C4904 STP X20, X19, [X31 + 0x40]
	0x034C4908 ADRP X20, 0xF1A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2680]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2680], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_InstalledApplication_GetApplicationId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_InstalledApplication_GetApplicationId_Native(System.IntPtr obj)

Disassembly:
	0x034C490C LDR X8, [X20 + 0xBA0]
	0x034C4910 MOV X19, X0
	0x034C4914 CBNZ X8, 0x34C4960
	0x034C4918 ADRP X12, 0xFFFFFFFFFD629000
	0x034C491C LDR V0, [X12 + 0x5B8]
	0x034C4920 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4924 ADRP X10, 0xFFFFFFFFFD64C000
	0x034C4928 ADD X8, X8, 0xDD2
	0x034C492C MOVZ W9, 0x11
	0x034C4930 ADD X10, X10, 0x4F2
	0x034C4934 MOVZ W11, 0x27
	0x034C4938 MOVZ W13, 0x8
	0x034C493C ADD X0, X31, 0x0
	0x034C4940 STP X8, X9, [X31]
	0x034C4944 STP X10, X11, [X31 + 0x10]
	0x034C4948 STR W13, [X31 + 0x28]
	0x034C494C STR D0, [X31 + 0x20]
	0x034C4950 STRB W31, [X31 + 0x2C]
	0x034C4954 BL 0x1C1729C
	0x034C4958 MOV X8, X0
	0x034C495C STR X0, [X20 + 0xBA0]
	0x034C4960 MOV X0, X19
	0x034C4964 BLR X8
	0x034C4968 LDP X20, X19, [X31 + 0x40]
	0x034C496C LDR X30, [X31 + 0x30]
	0x034C4970 CMP W0, 0x0
	0x034C4974 CSET W0, NE
	0x034C4978 ADD X31, X31, 0x50
	0x034C497C RET
	0x034C4980 SUB X31, X31, 0x50
	0x034C4984 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2688]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43724800
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1224
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2688], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_InstalledApplication_GetPackageName(System.IntPtr obj)

Disassembly:
	0x034C4988 STP X20, X19, [X31 + 0x40]
	0x034C498C ADRP X20, 0xF1A000
	0x034C4990 LDR X8, [X20 + 0xBA8]
	0x034C4994 MOV X19, X0
	0x034C4998 CBNZ X8, 0x34C49E4
	0x034C499C ADRP X12, 0xFFFFFFFFFD629000
	0x034C49A0 LDR V0, [X12 + 0x5B8]
	0x034C49A4 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C49A8 ADRP X10, 0xFFFFFFFFFD630000
	0x034C49AC ADD X8, X8, 0xDD2
	0x034C49B0 MOVZ W9, 0x11
	0x034C49B4 ADD X10, X10, 0x6B9
	0x034C49B8 MOVZ W11, 0x2A
	0x034C49BC MOVZ W13, 0x8
	0x034C49C0 ADD X0, X31, 0x0
	0x034C49C4 STP X8, X9, [X31]
	0x034C49C8 STP X10, X11, [X31 + 0x10]
	0x034C49CC STR W13, [X31 + 0x28]
	0x034C49D0 STR D0, [X31 + 0x20]
	0x034C49D4 STRB W31, [X31 + 0x2C]
	0x034C49D8 BL 0x1C1729C
	0x034C49DC MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2696]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2696], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_InstalledApplication_GetPackageName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_InstalledApplication_GetPackageName_Native(System.IntPtr obj)

Disassembly:
	0x034C49E0 STR X0, [X20 + 0xBA8]
	0x034C49E4 MOV X0, X19
	0x034C49E8 BLR X8
	0x034C49EC LDP X20, X19, [X31 + 0x40]
	0x034C49F0 LDR X30, [X31 + 0x30]
	0x034C49F4 ADD X31, X31, 0x50
	0x034C49F8 RET
	0x034C49FC SUB X31, X31, 0x50
	0x034C4A00 STR X30, [X31 + 0x30]
	0x034C4A04 STP X20, X19, [X31 + 0x40]
	0x034C4A08 ADRP X20, 0xF1A000
	0x034C4A0C LDR X8, [X20 + 0xBB0]
	0x034C4A10 MOV X19, X0
	0x034C4A14 CBNZ X8, 0x34C4A60
	0x034C4A18 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4A1C LDR V0, [X12 + 0x5B8]
	0x034C4A20 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4A24 ADRP X10, 0xFFFFFFFFFD636000
	0x034C4A28 ADD X8, X8, 0xDD2
	0x034C4A2C MOVZ W9, 0x11
	0x034C4A30 ADD X10, X10, 0x830
	0x034C4A34 MOVZ W11, 0x28
	0x034C4A38 MOVZ W13, 0x8
	0x034C4A3C ADD X0, X31, 0x0
	0x034C4A40 STP X8, X9, [X31]
	0x034C4A44 STP X10, X11, [X31 + 0x10]
	0x034C4A48 STR W13, [X31 + 0x28]
	0x034C4A4C STR D0, [X31 + 0x20]
	0x034C4A50 STRB W31, [X31 + 0x2C]
	0x034C4A54 BL 0x1C1729C
	0x034C4A58 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2704]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1842
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2704], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_InstalledApplication_GetStatus(System.IntPtr obj)

Disassembly:
	0x034C4A5C STR X0, [X20 + 0xBB0]
	0x034C4A60 MOV X0, X19
	0x034C4A64 BLR X8
	0x034C4A68 LDP X20, X19, [X31 + 0x40]
	0x034C4A6C LDR X30, [X31 + 0x30]
	0x034C4A70 CMP W0, 0x0
	0x034C4A74 CSET W0, NE
	0x034C4A78 ADD X31, X31, 0x50
	0x034C4A7C RET
	0x034C4A80 SUB X31, X31, 0x50
	0x034C4A84 STR X30, [X31 + 0x30]
	0x034C4A88 STP X20, X19, [X31 + 0x40]
	0x034C4A8C ADRP X20, 0xF1A000
	0x034C4A90 LDR X8, [X20 + 0xBB8]
	0x034C4A94 MOV X19, X0
	0x034C4A98 CBNZ X8, 0x34C4AE4
	0x034C4A9C ADRP X12, 0xFFFFFFFFFD629000
	0x034C4AA0 LDR V0, [X12 + 0x5B8]
	0x034C4AA4 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4AA8 ADRP X10, 0xFFFFFFFFFD630000
	0x034C4AAC ADD X8, X8, 0xDD2
	0x034C4AB0 MOVZ W9, 0x11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2712]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2712], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_InstalledApplication_GetStatus_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_InstalledApplication_GetStatus_Native(System.IntPtr obj)

Disassembly:
	0x034C4AB4 ADD X10, X10, 0x6E4
	0x034C4AB8 MOVZ W11, 0x29
	0x034C4ABC MOVZ W13, 0x8
	0x034C4AC0 ADD X0, X31, 0x0
	0x034C4AC4 STP X8, X9, [X31]
	0x034C4AC8 STP X10, X11, [X31 + 0x10]
	0x034C4ACC STR W13, [X31 + 0x28]
	0x034C4AD0 STR D0, [X31 + 0x20]
	0x034C4AD4 STRB W31, [X31 + 0x2C]
	0x034C4AD8 BL 0x1C1729C
	0x034C4ADC MOV X8, X0
	0x034C4AE0 STR X0, [X20 + 0xBB8]
	0x034C4AE4 MOV X0, X19
	0x034C4AE8 BLR X8
	0x034C4AEC LDP X20, X19, [X31 + 0x40]
	0x034C4AF0 LDR X30, [X31 + 0x30]
	0x034C4AF4 CMP W0, 0x0
	0x034C4AF8 CSET W0, NE
	0x034C4AFC ADD X31, X31, 0x50
	0x034C4B00 RET
	0x034C4B04 STP X30, X21, [X31 - 0x20]!
	0x034C4B08 STP X20, X19, [X31 + 0x10]
	0x034C4B0C ADRP X20, 0xF1A000
	0x034C4B10 ADRP X21, 0xC6E000
	0x034C4B14 LDRB W8, [X20 + 0xBC0]
	0x034C4B18 LDR X21, [X21 + 0x328]
	0x034C4B1C MOV X19, X0
	0x034C4B20 TBNZ X8, 0x0, 0x34C4B38
	0x034C4B24 ADRP X0, 0xC6E000
	0x034C4B28 LDR X0, [X0 + 0x328]
	0x034C4B2C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2720]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43622400
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3594
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2720], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int32 ovr_InstalledApplication_GetVersionCode(System.IntPtr obj)

Disassembly:
	0x034C4B30 MOVZ W8, 0x1
	0x034C4B34 STRB W8, [X20 + 0xBC0]
	0x034C4B38 LDR X0, [X21]
	0x034C4B3C LDR W8, [X0 + 0xE0]
	0x034C4B40 CBNZ W8, 0x34C4B48
	0x034C4B44 BL 0x1C16DFC
	0x034C4B48 MOV X0, X19
	0x034C4B4C BL 0x34C4B5C
	0x034C4B50 LDP X20, X19, [X31 + 0x10]
	0x034C4B54 LDP X30, X21, [X31], #0x20
	0x034C4B58 B 0x34B3B78
	0x034C4B5C SUB X31, X31, 0x50
	0x034C4B60 STR X30, [X31 + 0x30]
	0x034C4B64 STP X20, X19, [X31 + 0x40]
	0x034C4B68 ADRP X20, 0xF1A000
	0x034C4B6C LDR X8, [X20 + 0xBC8]
	0x034C4B70 MOV X19, X0
	0x034C4B74 CBNZ X8, 0x34C4BC0
	0x034C4B78 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4B7C LDR V0, [X12 + 0x5B8]
	0x034C4B80 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4B84 ADRP X10, 0xFFFFFFFFFD651000
	0x034C4B88 ADD X8, X8, 0xDD2
	0x034C4B8C MOVZ W9, 0x11
	0x034C4B90 ADD X10, X10, 0xCAA
	0x034C4B94 MOVZ W11, 0x1A
	0x034C4B98 MOVZ W13, 0x8
	0x034C4B9C ADD X0, X31, 0x0
	0x034C4BA0 STP X8, X9, [X31]
	0x034C4BA4 STP X10, X11, [X31 + 0x10]
	0x034C4BA8 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2728]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43659264
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 479
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2728], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_InstalledApplication_GetVersionName(System.IntPtr obj)

Disassembly:
	0x034C4BAC STR D0, [X31 + 0x20]
	0x034C4BB0 STRB W31, [X31 + 0x2C]
	0x034C4BB4 BL 0x1C1729C
	0x034C4BB8 MOV X8, X0
	0x034C4BBC STR X0, [X20 + 0xBC8]
	0x034C4BC0 MOV X0, X19
	0x034C4BC4 BLR X8
	0x034C4BC8 LDP X20, X19, [X31 + 0x40]
	0x034C4BCC LDR X30, [X31 + 0x30]
	0x034C4BD0 ADD X31, X31, 0x50
	0x034C4BD4 RET
	0x034C4BD8 SUB X31, X31, 0x50
	0x034C4BDC STR X30, [X31 + 0x30]
	0x034C4BE0 STP X20, X19, [X31 + 0x40]
	0x034C4BE4 ADRP X20, 0xF1A000
	0x034C4BE8 LDR X8, [X20 + 0xBD0]
	0x034C4BEC MOV X19, X0
	0x034C4BF0 CBNZ X8, 0x34C4C3C
	0x034C4BF4 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4BF8 LDR V0, [X12 + 0x5B8]
	0x034C4BFC ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4C00 ADRP X10, 0xFFFFFFFFFD648000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2736]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2736], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_InstalledApplication_GetVersionName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_InstalledApplication_GetVersionName_Native(System.IntPtr obj)

Disassembly:
	0x034C4C04 ADD X8, X8, 0xDD2
	0x034C4C08 MOVZ W9, 0x11
	0x034C4C0C ADD X10, X10, 0x39D
	0x034C4C10 MOVZ W11, 0x1E
	0x034C4C14 MOVZ W13, 0x8
	0x034C4C18 ADD X0, X31, 0x0
	0x034C4C1C STP X8, X9, [X31]
	0x034C4C20 STP X10, X11, [X31 + 0x10]
	0x034C4C24 STR W13, [X31 + 0x28]
	0x034C4C28 STR D0, [X31 + 0x20]
	0x034C4C2C STRB W31, [X31 + 0x2C]
	0x034C4C30 BL 0x1C1729C
	0x034C4C34 MOV X8, X0
	0x034C4C38 STR X0, [X20 + 0xBD0]
	0x034C4C3C MOV X0, X19
	0x034C4C40 BLR X8
	0x034C4C44 LDP X20, X19, [X31 + 0x40]
	0x034C4C48 LDR X30, [X31 + 0x30]
	0x034C4C4C ADD X31, X31, 0x50
	0x034C4C50 RET
	0x034C4C54 SUB X31, X31, 0x50
	0x034C4C58 STR X30, [X31 + 0x30]
	0x034C4C5C STP X20, X19, [X31 + 0x40]
	0x034C4C60 ADRP X20, 0xF1A000
	0x034C4C64 LDR X8, [X20 + 0xBD8]
	0x034C4C68 MOV X19, X0
	0x034C4C6C CBNZ X8, 0x34C4CB8
	0x034C4C70 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4C74 LDR V0, [X12 + 0x5B8]
	0x034C4C78 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4C7C ADRP X10, 0xFFFFFFFFFD62E000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2744]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3657
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2744], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_InstalledApplicationArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C4C80 ADD X8, X8, 0xDD2
	0x034C4C84 MOVZ W9, 0x11
	0x034C4C88 ADD X10, X10, 0x7CF
	0x034C4C8C MOVZ W11, 0x15
	0x034C4C90 MOVZ W13, 0x8
	0x034C4C94 ADD X0, X31, 0x0
	0x034C4C98 STP X8, X9, [X31]
	0x034C4C9C STP X10, X11, [X31 + 0x10]
	0x034C4CA0 STR W13, [X31 + 0x28]
	0x034C4CA4 STR D0, [X31 + 0x20]
	0x034C4CA8 STRB W31, [X31 + 0x2C]
	0x034C4CAC BL 0x1C1729C
	0x034C4CB0 MOV X8, X0
	0x034C4CB4 STR X0, [X20 + 0xBD8]
	0x034C4CB8 MOV X0, X19
	0x034C4CBC BLR X8
	0x034C4CC0 LDP X20, X19, [X31 + 0x40]
	0x034C4CC4 LDR X30, [X31 + 0x30]
	0x034C4CC8 ADD X31, X31, 0x50
	0x034C4CCC RET
	0x034C4CD0 SUB X31, X31, 0x50
	0x034C4CD4 STP X30, X21, [X31 + 0x30]
	0x034C4CD8 STP X20, X19, [X31 + 0x40]
	0x034C4CDC ADRP X21, 0xF1A000
	0x034C4CE0 LDR X8, [X21 + 0xBE0]
	0x034C4CE4 MOV X19, X1
	0x034C4CE8 MOV X20, X0
	0x034C4CEC CBNZ X8, 0x34C4D38
	0x034C4CF0 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4CF4 LDR V0, [X12 + 0x5B8]
	0x034C4CF8 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4CFC ADRP X10, 0xFFFFFFFFFD62E000
	0x034C4D00 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1B000
	007 Move X8, [X21+2752]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43868160
	013 Move V0, [X12+1464]
	014 Move X8, -43712512
	015 Move X10, -43806720
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1935
	019 Move W11, 40
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+2752], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UIntPtr ovr_InstalledApplicationArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C4D04 MOVZ W9, 0x11
	0x034C4D08 ADD X10, X10, 0x7E5
	0x034C4D0C MOVZ W11, 0x1F
	0x034C4D10 MOVZ W13, 0x10
	0x034C4D14 ADD X0, X31, 0x0
	0x034C4D18 STP X8, X9, [X31]
	0x034C4D1C STP X10, X11, [X31 + 0x10]
	0x034C4D20 STR W13, [X31 + 0x28]
	0x034C4D24 STR D0, [X31 + 0x20]
	0x034C4D28 STRB W31, [X31 + 0x2C]
	0x034C4D2C BL 0x1C1729C
	0x034C4D30 MOV X8, X0
	0x034C4D34 STR X0, [X21 + 0xBE0]
	0x034C4D38 MOV X0, X20
	0x034C4D3C MOV X1, X19
	0x034C4D40 BLR X8
	0x034C4D44 LDP X20, X19, [X31 + 0x40]
	0x034C4D48 LDP X30, X21, [X31 + 0x30]
	0x034C4D4C ADD X31, X31, 0x50
	0x034C4D50 RET
	0x034C4D54 STP X30, X21, [X31 - 0x20]!
	0x034C4D58 STP X20, X19, [X31 + 0x10]
	0x034C4D5C ADRP X20, 0xF1A000
	0x034C4D60 ADRP X21, 0xC6E000
	0x034C4D64 LDRB W8, [X20 + 0xBE8]
	0x034C4D68 LDR X21, [X21 + 0x328]
	0x034C4D6C MOV X19, X0
	0x034C4D70 TBNZ X8, 0x0, 0x34C4D88
	0x034C4D74 ADRP X0, 0xC6E000
	0x034C4D78 LDR X0, [X0 + 0x328]
	0x034C4D7C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2760]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 942
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2760], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_InvitePanelResultInfo_GetInvitesSent(System.IntPtr obj)

Disassembly:
	0x034C4D80 MOVZ W8, 0x1
	0x034C4D84 STRB W8, [X20 + 0xBE8]
	0x034C4D88 LDR X0, [X21]
	0x034C4D8C LDR W8, [X0 + 0xE0]
	0x034C4D90 CBNZ W8, 0x34C4D98
	0x034C4D94 BL 0x1C16DFC
	0x034C4D98 MOV X0, X19
	0x034C4D9C BL 0x34C4DAC
	0x034C4DA0 LDP X20, X19, [X31 + 0x10]
	0x034C4DA4 LDP X30, X21, [X31], #0x20
	0x034C4DA8 B 0x34B3B78
	0x034C4DAC SUB X31, X31, 0x50
	0x034C4DB0 STR X30, [X31 + 0x30]
	0x034C4DB4 STP X20, X19, [X31 + 0x40]
	0x034C4DB8 ADRP X20, 0xF1A000
	0x034C4DBC LDR X8, [X20 + 0xBF0]
	0x034C4DC0 MOV X19, X0
	0x034C4DC4 CBNZ X8, 0x34C4E10
	0x034C4DC8 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4DCC LDR V0, [X12 + 0x5B8]
	0x034C4DD0 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4DD4 ADRP X10, 0xFFFFFFFFFD64C000
	0x034C4DD8 ADD X8, X8, 0xDD2
	0x034C4DDC MOVZ W9, 0x11
	0x034C4DE0 ADD X10, X10, 0x51A
	0x034C4DE4 MOVZ W11, 0x1F
	0x034C4DE8 MOVZ W13, 0x8
	0x034C4DEC ADD X0, X31, 0x0
	0x034C4DF0 STP X8, X9, [X31]
	0x034C4DF4 STP X10, X11, [X31 + 0x10]
	0x034C4DF8 STR W13, [X31 + 0x28]
	0x034C4DFC STR D0, [X31 + 0x20]
	0x034C4E00 STRB W31, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2768]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1940
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2768], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_LanguagePackInfo_GetEnglishName(System.IntPtr obj)

Disassembly:
	0x034C4E04 BL 0x1C1729C
	0x034C4E08 MOV X8, X0
	0x034C4E0C STR X0, [X20 + 0xBF0]
	0x034C4E10 MOV X0, X19
	0x034C4E14 BLR X8
	0x034C4E18 LDP X20, X19, [X31 + 0x40]
	0x034C4E1C LDR X30, [X31 + 0x30]
	0x034C4E20 ADD X31, X31, 0x50
	0x034C4E24 RET
	0x034C4E28 SUB X31, X31, 0x50
	0x034C4E2C STR X30, [X31 + 0x30]
	0x034C4E30 STP X20, X19, [X31 + 0x40]
	0x034C4E34 ADRP X20, 0xF1A000
	0x034C4E38 LDR X8, [X20 + 0xBF8]
	0x034C4E3C MOV X19, X0
	0x034C4E40 CBNZ X8, 0x34C4E8C
	0x034C4E44 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4E48 LDR V0, [X12 + 0x5B8]
	0x034C4E4C ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4E50 ADRP X10, 0xFFFFFFFFFD63C000
	0x034C4E54 ADD X8, X8, 0xDD2
	0x034C4E58 MOVZ W9, 0x11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2776]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2776], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LanguagePackInfo_GetEnglishName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(System.IntPtr obj)

Disassembly:
	0x034C4E5C ADD X10, X10, 0x2EF
	0x034C4E60 MOVZ W11, 0x1C
	0x034C4E64 MOVZ W13, 0x8
	0x034C4E68 ADD X0, X31, 0x0
	0x034C4E6C STP X8, X9, [X31]
	0x034C4E70 STP X10, X11, [X31 + 0x10]
	0x034C4E74 STR W13, [X31 + 0x28]
	0x034C4E78 STR D0, [X31 + 0x20]
	0x034C4E7C STRB W31, [X31 + 0x2C]
	0x034C4E80 BL 0x1C1729C
	0x034C4E84 MOV X8, X0
	0x034C4E88 STR X0, [X20 + 0xBF8]
	0x034C4E8C MOV X0, X19
	0x034C4E90 BLR X8
	0x034C4E94 LDP X20, X19, [X31 + 0x40]
	0x034C4E98 LDR X30, [X31 + 0x30]
	0x034C4E9C ADD X31, X31, 0x50
	0x034C4EA0 RET
	0x034C4EA4 SUB X31, X31, 0x50
	0x034C4EA8 STR X30, [X31 + 0x30]
	0x034C4EAC STP X20, X19, [X31 + 0x40]
	0x034C4EB0 ADRP X20, 0xF1A000
	0x034C4EB4 LDR X8, [X20 + 0xC00]
	0x034C4EB8 MOV X19, X0
	0x034C4EBC CBNZ X8, 0x34C4F08
	0x034C4EC0 ADRP X12, 0xFFFFFFFFFD629000
	0x034C4EC4 LDR V0, [X12 + 0x5B8]
	0x034C4EC8 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4ECC ADRP X10, 0xFFFFFFFFFD659000
	0x034C4ED0 ADD X8, X8, 0xDD2
	0x034C4ED4 MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2784]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43765760
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1448
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2784], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LanguagePackInfo_GetNativeName(System.IntPtr obj)

Disassembly:
	0x034C4ED8 ADD X10, X10, 0xFA1
	0x034C4EDC MOVZ W11, 0x20
	0x034C4EE0 MOVZ W13, 0x8
	0x034C4EE4 ADD X0, X31, 0x0
	0x034C4EE8 STP X8, X9, [X31]
	0x034C4EEC STP X10, X11, [X31 + 0x10]
	0x034C4EF0 STR W13, [X31 + 0x28]
	0x034C4EF4 STR D0, [X31 + 0x20]
	0x034C4EF8 STRB W31, [X31 + 0x2C]
	0x034C4EFC BL 0x1C1729C
	0x034C4F00 MOV X8, X0
	0x034C4F04 STR X0, [X20 + 0xC00]
	0x034C4F08 MOV X0, X19
	0x034C4F0C BLR X8
	0x034C4F10 LDP X20, X19, [X31 + 0x40]
	0x034C4F14 LDR X30, [X31 + 0x30]
	0x034C4F18 CMP W0, 0x0
	0x034C4F1C CSET W0, NE
	0x034C4F20 ADD X31, X31, 0x50
	0x034C4F24 RET
	0x034C4F28 STP X30, X21, [X31 - 0x20]!
	0x034C4F2C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2792]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2792], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LanguagePackInfo_GetNativeName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LanguagePackInfo_GetNativeName_Native(System.IntPtr obj)

Disassembly:
	0x034C4F30 ADRP X20, 0xF1A000
	0x034C4F34 ADRP X21, 0xC6E000
	0x034C4F38 LDRB W8, [X20 + 0xC08]
	0x034C4F3C LDR X21, [X21 + 0x328]
	0x034C4F40 MOV X19, X0
	0x034C4F44 TBNZ X8, 0x0, 0x34C4F5C
	0x034C4F48 ADRP X0, 0xC6E000
	0x034C4F4C LDR X0, [X0 + 0x328]
	0x034C4F50 BL 0x1C16CF4
	0x034C4F54 MOVZ W8, 0x1
	0x034C4F58 STRB W8, [X20 + 0xC08]
	0x034C4F5C LDR X0, [X21]
	0x034C4F60 LDR W8, [X0 + 0xE0]
	0x034C4F64 CBNZ W8, 0x34C4F6C
	0x034C4F68 BL 0x1C16DFC
	0x034C4F6C MOV X0, X19
	0x034C4F70 BL 0x34C4F80
	0x034C4F74 LDP X20, X19, [X31 + 0x10]
	0x034C4F78 LDP X30, X21, [X31], #0x20
	0x034C4F7C B 0x34B3B78
	0x034C4F80 SUB X31, X31, 0x50
	0x034C4F84 STR X30, [X31 + 0x30]
	0x034C4F88 STP X20, X19, [X31 + 0x40]
	0x034C4F8C ADRP X20, 0xF1A000
	0x034C4F90 LDR X8, [X20 + 0xC10]
	0x034C4F94 MOV X19, X0
	0x034C4F98 CBNZ X8, 0x34C4FE4
	0x034C4F9C ADRP X12, 0xFFFFFFFFFD629000
	0x034C4FA0 LDR V0, [X12 + 0x5B8]
	0x034C4FA4 ADRP X8, 0xFFFFFFFFFD64F000
	0x034C4FA8 ADRP X10, 0xFFFFFFFFFD655000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1B000
	006 Move X8, [X20+2800]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43868160
	011 Move V0, [X12+1464]
	012 Move X8, -43712512
	013 Move X10, -43614208
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3230
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2800], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LanguagePackInfo_GetTag(System.IntPtr obj)

Disassembly:
	0x034C4FAC ADD X8, X8, 0xDD2
	0x034C4FB0 MOVZ W9, 0x11
	0x034C4FB4 ADD X10, X10, 0xE71
	0x034C4FB8 MOVZ W11, 0x24
	0x034C4FBC MOVZ W13, 0x8
	0x034C4FC0 ADD X0, X31, 0x0
	0x034C4FC4 STP X8, X9, [X31]
	0x034C4FC8 STP X10, X11, [X31 + 0x10]
	0x034C4FCC STR W13, [X31 + 0x28]
	0x034C4FD0 STR D0, [X31 + 0x20]
	0x034C4FD4 STRB W31, [X31 + 0x2C]
	0x034C4FD8 BL 0x1C1729C
	0x034C4FDC MOV X8, X0
	0x034C4FE0 STR X0, [X20 + 0xC10]
	0x034C4FE4 MOV X0, X19
	0x034C4FE8 BLR X8
	0x034C4FEC LDP X20, X19, [X31 + 0x40]
	0x034C4FF0 LDR X30, [X31 + 0x30]
	0x034C4FF4 ADD X31, X31, 0x50
	0x034C4FF8 RET
	0x034C4FFC STP X30, X21, [X31 - 0x20]!
	0x034C5000 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1B000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2808]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2808], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LanguagePackInfo_GetTag_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LanguagePackInfo_GetTag_Native(System.IntPtr obj)

Disassembly:
	0x034C5004 ADRP X20, 0xF19000
	0x034C5008 ADRP X21, 0xC6D000
	0x034C500C LDRB W8, [X20 + 0xC18]
	0x034C5010 LDR X21, [X21 + 0x328]
	0x034C5014 MOV X19, X0
	0x034C5018 TBNZ X8, 0x0, 0x34C5030
	0x034C501C ADRP X0, 0xC6D000
	0x034C5020 LDR X0, [X0 + 0x328]
	0x034C5024 BL 0x1C16CF4
	0x034C5028 MOVZ W8, 0x1
	0x034C502C STRB W8, [X20 + 0xC18]
	0x034C5030 LDR X0, [X21]
	0x034C5034 LDR W8, [X0 + 0xE0]
	0x034C5038 CBNZ W8, 0x34C5040
	0x034C503C BL 0x1C16DFC
	0x034C5040 MOV X0, X19
	0x034C5044 BL 0x34C18E8
	0x034C5048 MOV W20, W0
	0x034C504C MOV X0, X19
	0x034C5050 BL 0x34C5068
	0x034C5054 MOV X1, X0
	0x034C5058 MOV W0, W20
	0x034C505C LDP X20, X19, [X31 + 0x10]
	0x034C5060 LDP X30, X21, [X31], #0x20
	0x034C5064 B 0x34B3ED4
	0x034C5068 SUB X31, X31, 0x50
	0x034C506C STR X30, [X31 + 0x30]
	0x034C5070 STP X20, X19, [X31 + 0x40]
	0x034C5074 ADRP X20, 0xF19000
	0x034C5078 LDR X8, [X20 + 0xC20]
	0x034C507C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2816]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43745280
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 897
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2816], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_LaunchBlockFlowResult_GetDidBlock(System.IntPtr obj)

Disassembly:
	0x034C5080 CBNZ X8, 0x34C50CC
	0x034C5084 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5088 LDR V0, [X12 + 0x5B8]
	0x034C508C ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5090 ADRP X10, 0xFFFFFFFFFD629000
	0x034C5094 ADD X8, X8, 0xDD2
	0x034C5098 MOVZ W9, 0x11
	0x034C509C ADD X10, X10, 0x89F
	0x034C50A0 MOVZ W11, 0x21
	0x034C50A4 MOVZ W13, 0x8
	0x034C50A8 ADD X0, X31, 0x0
	0x034C50AC STP X8, X9, [X31]
	0x034C50B0 STP X10, X11, [X31 + 0x10]
	0x034C50B4 STR W13, [X31 + 0x28]
	0x034C50B8 STR D0, [X31 + 0x20]
	0x034C50BC STRB W31, [X31 + 0x2C]
	0x034C50C0 BL 0x1C1729C
	0x034C50C4 MOV X8, X0
	0x034C50C8 STR X0, [X20 + 0xC20]
	0x034C50CC MOV X0, X19
	0x034C50D0 BLR X8
	0x034C50D4 LDP X20, X19, [X31 + 0x40]
	0x034C50D8 LDR X30, [X31 + 0x30]
	0x034C50DC ADD X31, X31, 0x50
	0x034C50E0 RET
	0x034C50E4 SUB X31, X31, 0x50
	0x034C50E8 STR X30, [X31 + 0x30]
	0x034C50EC STP X20, X19, [X31 + 0x40]
	0x034C50F0 ADRP X20, 0xF19000
	0x034C50F4 LDR X8, [X20 + 0xC30]
	0x034C50F8 MOV X19, X0
	0x034C50FC CBNZ X8, 0x34C5148
	0x034C5100 ADRP X12, 0xFFFFFFFFFD628000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2824]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43737088
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1193
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2824], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_LaunchBlockFlowResult_GetDidCancel(System.IntPtr obj)

Disassembly:
	0x034C5104 LDR V0, [X12 + 0x5B8]
	0x034C5108 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C510C ADRP X10, 0xFFFFFFFFFD661000
	0x034C5110 ADD X8, X8, 0xDD2
	0x034C5114 MOVZ W9, 0x11
	0x034C5118 ADD X10, X10, 0x3D4
	0x034C511C MOVZ W11, 0x1A
	0x034C5120 MOVZ W13, 0x8
	0x034C5124 ADD X0, X31, 0x0
	0x034C5128 STP X8, X9, [X31]
	0x034C512C STP X10, X11, [X31 + 0x10]
	0x034C5130 STR W13, [X31 + 0x28]
	0x034C5134 STR D0, [X31 + 0x20]
	0x034C5138 STRB W31, [X31 + 0x2C]
	0x034C513C BL 0x1C1729C
	0x034C5140 MOV X8, X0
	0x034C5144 STR X0, [X20 + 0xC30]
	0x034C5148 MOV X0, X19
	0x034C514C BLR X8
	0x034C5150 LDP X20, X19, [X31 + 0x40]
	0x034C5154 LDR X30, [X31 + 0x30]
	0x034C5158 ADD X31, X31, 0x50
	0x034C515C RET
	0x034C5160 SUB X31, X31, 0x50
	0x034C5164 STR X30, [X31 + 0x30]
	0x034C5168 STP X20, X19, [X31 + 0x40]
	0x034C516C ADRP X20, 0xF19000
	0x034C5170 LDR X8, [X20 + 0xC38]
	0x034C5174 MOV X19, X0
	0x034C5178 CBNZ X8, 0x34C51C4
	0x034C517C ADRP X12, 0xFFFFFFFFFD628000
	0x034C5180 LDR V0, [X12 + 0x5B8]
	0x034C5184 ADRP X8, 0xFFFFFFFFFD64E000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2832]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 676
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2832], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_LaunchDetails_GetDeeplinkMessage(System.IntPtr obj)

Disassembly:
	0x034C5188 ADRP X10, 0xFFFFFFFFFD631000
	0x034C518C ADD X8, X8, 0xDD2
	0x034C5190 MOVZ W9, 0x11
	0x034C5194 ADD X10, X10, 0x75A
	0x034C5198 MOVZ W11, 0x1C
	0x034C519C MOVZ W13, 0x8
	0x034C51A0 ADD X0, X31, 0x0
	0x034C51A4 STP X8, X9, [X31]
	0x034C51A8 STP X10, X11, [X31 + 0x10]
	0x034C51AC STR W13, [X31 + 0x28]
	0x034C51B0 STR D0, [X31 + 0x20]
	0x034C51B4 STRB W31, [X31 + 0x2C]
	0x034C51B8 BL 0x1C1729C
	0x034C51BC MOV X8, X0
	0x034C51C0 STR X0, [X20 + 0xC38]
	0x034C51C4 MOV X0, X19
	0x034C51C8 BLR X8
	0x034C51CC LDP X20, X19, [X31 + 0x40]
	0x034C51D0 LDR X30, [X31 + 0x30]
	0x034C51D4 ADD X31, X31, 0x50
	0x034C51D8 RET
	0x034C51DC SUB X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1A000
	006 Move X21, 0xC6E000
	007 Move W8, [X20+2840]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6E000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2840], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LaunchDetails_GetDeeplinkMessage_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(System.IntPtr obj)

Disassembly:
	0x034C51E0 STR X30, [X31 + 0x30]
	0x034C51E4 STP X20, X19, [X31 + 0x40]
	0x034C51E8 ADRP X20, 0xF19000
	0x034C51EC LDR X8, [X20 + 0xC40]
	0x034C51F0 MOV X19, X0
	0x034C51F4 CBNZ X8, 0x34C5240
	0x034C51F8 ADRP X12, 0xFFFFFFFFFD628000
	0x034C51FC LDR V0, [X12 + 0x5B8]
	0x034C5200 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5204 ADRP X10, 0xFFFFFFFFFD647000
	0x034C5208 ADD X8, X8, 0xDD2
	0x034C520C MOVZ W9, 0x11
	0x034C5210 ADD X10, X10, 0x3BC
	0x034C5214 MOVZ W11, 0x1D
	0x034C5218 MOVZ W13, 0x8
	0x034C521C ADD X0, X31, 0x0
	0x034C5220 STP X8, X9, [X31]
	0x034C5224 STP X10, X11, [X31 + 0x10]
	0x034C5228 STR W13, [X31 + 0x28]
	0x034C522C STR D0, [X31 + 0x20]
	0x034C5230 STRB W31, [X31 + 0x2C]
	0x034C5234 BL 0x1C1729C
	0x034C5238 MOV X8, X0
	0x034C523C STR X0, [X20 + 0xC40]
	0x034C5240 MOV X0, X19
	0x034C5244 BLR X8
	0x034C5248 LDP X20, X19, [X31 + 0x40]
	0x034C524C LDR X30, [X31 + 0x30]
	0x034C5250 ADD X31, X31, 0x50
	0x034C5254 RET
	0x034C5258 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2848]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43868160
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2170
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2848], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LaunchDetails_GetDestinationApiName(System.IntPtr obj)

Disassembly:
	0x034C525C STR X30, [X31 + 0x30]
	0x034C5260 STP X20, X19, [X31 + 0x40]
	0x034C5264 ADRP X20, 0xF19000
	0x034C5268 LDR X8, [X20 + 0xC48]
	0x034C526C MOV X19, X0
	0x034C5270 CBNZ X8, 0x34C52BC
	0x034C5274 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5278 LDR V0, [X12 + 0x5B8]
	0x034C527C ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5280 ADRP X10, 0xFFFFFFFFFD647000
	0x034C5284 ADD X8, X8, 0xDD2
	0x034C5288 MOVZ W9, 0x11
	0x034C528C ADD X10, X10, 0x3DA
	0x034C5290 MOVZ W11, 0x2B
	0x034C5294 MOVZ W13, 0x8
	0x034C5298 ADD X0, X31, 0x0
	0x034C529C STP X8, X9, [X31]
	0x034C52A0 STP X10, X11, [X31 + 0x10]
	0x034C52A4 STR W13, [X31 + 0x28]
	0x034C52A8 STR D0, [X31 + 0x20]
	0x034C52AC STRB W31, [X31 + 0x2C]
	0x034C52B0 BL 0x1C1729C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1A000
	006 Move X21, 0xC6E000
	007 Move W8, [X20+2856]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6E000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2856], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LaunchDetails_GetDestinationApiName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(System.IntPtr obj)

Disassembly:
	0x034C52B4 MOV X8, X0
	0x034C52B8 STR X0, [X20 + 0xC48]
	0x034C52BC MOV X0, X19
	0x034C52C0 BLR X8
	0x034C52C4 LDP X20, X19, [X31 + 0x40]
	0x034C52C8 LDR X30, [X31 + 0x30]
	0x034C52CC ADD X31, X31, 0x50
	0x034C52D0 RET
	0x034C52D4 STP X30, X21, [X31 - 0x20]!
	0x034C52D8 STP X20, X19, [X31 + 0x10]
	0x034C52DC ADRP X20, 0xF19000
	0x034C52E0 ADRP X21, 0xC6D000
	0x034C52E4 LDRB W8, [X20 + 0xC50]
	0x034C52E8 LDR X21, [X21 + 0x328]
	0x034C52EC MOV X19, X0
	0x034C52F0 TBNZ X8, 0x0, 0x34C5308
	0x034C52F4 ADRP X0, 0xC6D000
	0x034C52F8 LDR X0, [X0 + 0x328]
	0x034C52FC BL 0x1C16CF4
	0x034C5300 MOVZ W8, 0x1
	0x034C5304 STRB W8, [X20 + 0xC50]
	0x034C5308 LDR X0, [X21]
	0x034C530C LDR W8, [X0 + 0xE0]
	0x034C5310 CBNZ W8, 0x34C5318
	0x034C5314 BL 0x1C16DFC
	0x034C5318 MOV X0, X19
	0x034C531C BL 0x34C532C
	0x034C5320 LDP X20, X19, [X31 + 0x10]
	0x034C5324 LDP X30, X21, [X31], #0x20
	0x034C5328 B 0x34B3D04
	0x034C532C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2864]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43802624
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1162
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2864], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LaunchDetails_GetLaunchSource(System.IntPtr obj)

Disassembly:
	0x034C5330 STR X30, [X31 + 0x30]
	0x034C5334 STP X20, X19, [X31 + 0x40]
	0x034C5338 ADRP X20, 0xF19000
	0x034C533C LDR X8, [X20 + 0xC58]
	0x034C5340 MOV X19, X0
	0x034C5344 CBNZ X8, 0x34C5390
	0x034C5348 ADRP X12, 0xFFFFFFFFFD628000
	0x034C534C LDR V0, [X12 + 0x5B8]
	0x034C5350 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5354 ADRP X10, 0xFFFFFFFFFD639000
	0x034C5358 ADD X8, X8, 0xDD2
	0x034C535C MOVZ W9, 0x11
	0x034C5360 ADD X10, X10, 0x4B2
	0x034C5364 MOVZ W11, 0x21
	0x034C5368 MOVZ W13, 0x8
	0x034C536C ADD X0, X31, 0x0
	0x034C5370 STP X8, X9, [X31]
	0x034C5374 STP X10, X11, [X31 + 0x10]
	0x034C5378 STR W13, [X31 + 0x28]
	0x034C537C STR D0, [X31 + 0x20]
	0x034C5380 STRB W31, [X31 + 0x2C]
	0x034C5384 BL 0x1C1729C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1A000
	006 Move X21, 0xC6E000
	007 Move W8, [X20+2872]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6E000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2872], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LaunchDetails_GetLaunchSource_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LaunchDetails_GetLaunchSource_Native(System.IntPtr obj)

Disassembly:
	0x034C5388 MOV X8, X0
	0x034C538C STR X0, [X20 + 0xC58]
	0x034C5390 MOV X0, X19
	0x034C5394 BLR X8
	0x034C5398 LDP X20, X19, [X31 + 0x40]
	0x034C539C LDR X30, [X31 + 0x30]
	0x034C53A0 ADD X31, X31, 0x50
	0x034C53A4 RET
	0x034C53A8 SUB X31, X31, 0x50
	0x034C53AC STR X30, [X31 + 0x30]
	0x034C53B0 STP X20, X19, [X31 + 0x40]
	0x034C53B4 ADRP X20, 0xF19000
	0x034C53B8 LDR X8, [X20 + 0xC60]
	0x034C53BC MOV X19, X0
	0x034C53C0 CBNZ X8, 0x34C540C
	0x034C53C4 ADRP X12, 0xFFFFFFFFFD628000
	0x034C53C8 LDR V0, [X12 + 0x5B8]
	0x034C53CC ADRP X8, 0xFFFFFFFFFD64E000
	0x034C53D0 ADRP X10, 0xFFFFFFFFFD650000
	0x034C53D4 ADD X8, X8, 0xDD2
	0x034C53D8 MOVZ W9, 0x11
	0x034C53DC ADD X10, X10, 0xCC5
	0x034C53E0 MOVZ W11, 0x1C
	0x034C53E4 MOVZ W13, 0x8
	0x034C53E8 ADD X0, X31, 0x0
	0x034C53EC STP X8, X9, [X31]
	0x034C53F0 STP X10, X11, [X31 + 0x10]
	0x034C53F4 STR W13, [X31 + 0x28]
	0x034C53F8 STR D0, [X31 + 0x20]
	0x034C53FC STRB W31, [X31 + 0x2C]
	0x034C5400 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2880]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43716608
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3760
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2880], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.LaunchType ovr_LaunchDetails_GetLaunchType(System.IntPtr obj)

Disassembly:
	0x034C5404 MOV X8, X0
	0x034C5408 STR X0, [X20 + 0xC60]
	0x034C540C MOV X0, X19
	0x034C5410 BLR X8
	0x034C5414 LDP X20, X19, [X31 + 0x40]
	0x034C5418 LDR X30, [X31 + 0x30]
	0x034C541C ADD X31, X31, 0x50
	0x034C5420 RET
	0x034C5424 SUB X31, X31, 0x50
	0x034C5428 STP X30, X21, [X31 + 0x30]
	0x034C542C STP X20, X19, [X31 + 0x40]
	0x034C5430 ADRP X21, 0xF19000
	0x034C5434 LDR X8, [X21 + 0xC68]
	0x034C5438 MOV X19, X1
	0x034C543C MOV X20, X0
	0x034C5440 CBNZ X8, 0x34C548C
	0x034C5444 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5448 LDR V0, [X12 + 0x5B8]
	0x034C544C ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5450 ADRP X10, 0xFFFFFFFFFD629000
	0x034C5454 ADD X8, X8, 0xDD2
	0x034C5458 MOVZ W9, 0x11
	0x034C545C ADD X10, X10, 0x8C1
	0x034C5460 MOVZ W11, 0x24
	0x034C5464 MOVZ W13, 0x10
	0x034C5468 ADD X0, X31, 0x0
	0x034C546C STP X8, X9, [X31]
	0x034C5470 STP X10, X11, [X31 + 0x10]
	0x034C5474 STR W13, [X31 + 0x28]
	0x034C5478 STR D0, [X31 + 0x20]
	0x034C547C STRB W31, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2888]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3506
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2888], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LaunchDetails_GetLobbySessionID(System.IntPtr obj)

Disassembly:
	0x034C5480 BL 0x1C1729C
	0x034C5484 MOV X8, X0
	0x034C5488 STR X0, [X21 + 0xC68]
	0x034C548C MOV X0, X20
	0x034C5490 MOV X1, X19
	0x034C5494 BLR X8
	0x034C5498 LDP X20, X19, [X31 + 0x40]
	0x034C549C LDP X30, X21, [X31 + 0x30]
	0x034C54A0 ADD X31, X31, 0x50
	0x034C54A4 RET
	0x034C54A8 STP X30, X21, [X31 - 0x20]!
	0x034C54AC STP X20, X19, [X31 + 0x10]
	0x034C54B0 ADRP X20, 0xF19000
	0x034C54B4 ADRP X21, 0xC6D000
	0x034C54B8 LDRB W8, [X20 + 0xC70]
	0x034C54BC LDR X21, [X21 + 0x328]
	0x034C54C0 MOV X19, X0
	0x034C54C4 TBNZ X8, 0x0, 0x34C54DC
	0x034C54C8 ADRP X0, 0xC6D000
	0x034C54CC LDR X0, [X0 + 0x328]
	0x034C54D0 BL 0x1C16CF4
	0x034C54D4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1A000
	006 Move X21, 0xC6E000
	007 Move W8, [X20+2896]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6E000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2896], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LaunchDetails_GetLobbySessionID_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LaunchDetails_GetLobbySessionID_Native(System.IntPtr obj)

Disassembly:
	0x034C54D8 STRB W8, [X20 + 0xC70]
	0x034C54DC LDR X0, [X21]
	0x034C54E0 LDR W8, [X0 + 0xE0]
	0x034C54E4 CBNZ W8, 0x34C54EC
	0x034C54E8 BL 0x1C16DFC
	0x034C54EC MOV X0, X19
	0x034C54F0 BL 0x34C5500
	0x034C54F4 LDP X20, X19, [X31 + 0x10]
	0x034C54F8 LDP X30, X21, [X31], #0x20
	0x034C54FC B 0x34B3B78
	0x034C5500 SUB X31, X31, 0x50
	0x034C5504 STR X30, [X31 + 0x30]
	0x034C5508 STP X20, X19, [X31 + 0x40]
	0x034C550C ADRP X20, 0xF19000
	0x034C5510 LDR X8, [X20 + 0xC78]
	0x034C5514 MOV X19, X0
	0x034C5518 CBNZ X8, 0x34C5564
	0x034C551C ADRP X12, 0xFFFFFFFFFD628000
	0x034C5520 LDR V0, [X12 + 0x5B8]
	0x034C5524 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5528 ADRP X10, 0xFFFFFFFFFD657000
	0x034C552C ADD X8, X8, 0xDD2
	0x034C5530 MOVZ W9, 0x11
	0x034C5534 ADD X10, X10, 0x2C0
	0x034C5538 MOVZ W11, 0x24
	0x034C553C MOVZ W13, 0x8
	0x034C5540 ADD X0, X31, 0x0
	0x034C5544 STP X8, X9, [X31]
	0x034C5548 STP X10, X11, [X31 + 0x10]
	0x034C554C STR W13, [X31 + 0x28]
	0x034C5550 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2904]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 715
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2904], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LaunchDetails_GetMatchSessionID(System.IntPtr obj)

Disassembly:
	0x034C5554 STRB W31, [X31 + 0x2C]
	0x034C5558 BL 0x1C1729C
	0x034C555C MOV X8, X0
	0x034C5560 STR X0, [X20 + 0xC78]
	0x034C5564 MOV X0, X19
	0x034C5568 BLR X8
	0x034C556C LDP X20, X19, [X31 + 0x40]
	0x034C5570 LDR X30, [X31 + 0x30]
	0x034C5574 ADD X31, X31, 0x50
	0x034C5578 RET
	0x034C557C STP X30, X21, [X31 - 0x20]!
	0x034C5580 STP X20, X19, [X31 + 0x10]
	0x034C5584 ADRP X20, 0xF19000
	0x034C5588 ADRP X21, 0xC6D000
	0x034C558C LDRB W8, [X20 + 0xC80]
	0x034C5590 LDR X21, [X21 + 0x328]
	0x034C5594 MOV X19, X0
	0x034C5598 TBNZ X8, 0x0, 0x34C55B0
	0x034C559C ADRP X0, 0xC6D000
	0x034C55A0 LDR X0, [X0 + 0x328]
	0x034C55A4 BL 0x1C16CF4
	0x034C55A8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1A000
	006 Move X21, 0xC6E000
	007 Move W8, [X20+2912]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6E000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2912], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LaunchDetails_GetMatchSessionID_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LaunchDetails_GetMatchSessionID_Native(System.IntPtr obj)

Disassembly:
	0x034C55AC STRB W8, [X20 + 0xC80]
	0x034C55B0 LDR X0, [X21]
	0x034C55B4 LDR W8, [X0 + 0xE0]
	0x034C55B8 CBNZ W8, 0x34C55C0
	0x034C55BC BL 0x1C16DFC
	0x034C55C0 MOV X0, X19
	0x034C55C4 BL 0x34C55D4
	0x034C55C8 LDP X20, X19, [X31 + 0x10]
	0x034C55CC LDP X30, X21, [X31], #0x20
	0x034C55D0 B 0x34B3B78
	0x034C55D4 SUB X31, X31, 0x50
	0x034C55D8 STR X30, [X31 + 0x30]
	0x034C55DC STP X20, X19, [X31 + 0x40]
	0x034C55E0 ADRP X20, 0xF19000
	0x034C55E4 LDR X8, [X20 + 0xC88]
	0x034C55E8 MOV X19, X0
	0x034C55EC CBNZ X8, 0x34C5638
	0x034C55F0 ADRP X12, 0xFFFFFFFFFD628000
	0x034C55F4 LDR V0, [X12 + 0x5B8]
	0x034C55F8 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C55FC ADRP X10, 0xFFFFFFFFFD654000
	0x034C5600 ADD X8, X8, 0xDD2
	0x034C5604 MOVZ W9, 0x11
	0x034C5608 ADD X10, X10, 0xEBE
	0x034C560C MOVZ W11, 0x28
	0x034C5610 MOVZ W13, 0x8
	0x034C5614 ADD X0, X31, 0x0
	0x034C5618 STP X8, X9, [X31]
	0x034C561C STP X10, X11, [X31 + 0x10]
	0x034C5620 STR W13, [X31 + 0x28]
	0x034C5624 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2920]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43716608
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3794
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2920], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LaunchDetails_GetTrackingID(System.IntPtr obj)

Disassembly:
	0x034C5628 STRB W31, [X31 + 0x2C]
	0x034C562C BL 0x1C1729C
	0x034C5630 MOV X8, X0
	0x034C5634 STR X0, [X20 + 0xC88]
	0x034C5638 MOV X0, X19
	0x034C563C BLR X8
	0x034C5640 LDP X20, X19, [X31 + 0x40]
	0x034C5644 LDR X30, [X31 + 0x30]
	0x034C5648 ADD X31, X31, 0x50
	0x034C564C RET
	0x034C5650 SUB X31, X31, 0x50
	0x034C5654 STR X30, [X31 + 0x30]
	0x034C5658 STP X20, X19, [X31 + 0x40]
	0x034C565C ADRP X20, 0xF19000
	0x034C5660 LDR X8, [X20 + 0xC90]
	0x034C5664 MOV X19, X0
	0x034C5668 CBNZ X8, 0x34C56B4
	0x034C566C ADRP X12, 0xFFFFFFFFFD628000
	0x034C5670 LDR V0, [X12 + 0x5B8]
	0x034C5674 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5678 ADRP X10, 0xFFFFFFFFFD647000
	0x034C567C ADD X8, X8, 0xDD2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1A000
	006 Move X21, 0xC6E000
	007 Move W8, [X20+2928]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6E000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2928], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LaunchDetails_GetTrackingID_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LaunchDetails_GetTrackingID_Native(System.IntPtr obj)

Disassembly:
	0x034C5680 MOVZ W9, 0x11
	0x034C5684 ADD X10, X10, 0x406
	0x034C5688 MOVZ W11, 0x21
	0x034C568C MOVZ W13, 0x8
	0x034C5690 ADD X0, X31, 0x0
	0x034C5694 STP X8, X9, [X31]
	0x034C5698 STP X10, X11, [X31 + 0x10]
	0x034C569C STR W13, [X31 + 0x28]
	0x034C56A0 STR D0, [X31 + 0x20]
	0x034C56A4 STRB W31, [X31 + 0x2C]
	0x034C56A8 BL 0x1C1729C
	0x034C56AC MOV X8, X0
	0x034C56B0 STR X0, [X20 + 0xC90]
	0x034C56B4 MOV X0, X19
	0x034C56B8 BLR X8
	0x034C56BC LDP X20, X19, [X31 + 0x40]
	0x034C56C0 LDR X30, [X31 + 0x30]
	0x034C56C4 ADD X31, X31, 0x50
	0x034C56C8 RET
	0x034C56CC SUB X31, X31, 0x50
	0x034C56D0 STR X30, [X31 + 0x30]
	0x034C56D4 STP X20, X19, [X31 + 0x40]
	0x034C56D8 ADRP X20, 0xF19000
	0x034C56DC LDR X8, [X20 + 0xC98]
	0x034C56E0 MOV X19, X0
	0x034C56E4 CBNZ X8, 0x34C5730
	0x034C56E8 ADRP X12, 0xFFFFFFFFFD628000
	0x034C56EC LDR V0, [X12 + 0x5B8]
	0x034C56F0 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C56F4 ADRP X10, 0xFFFFFFFFFD645000
	0x034C56F8 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2936]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43679744
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 620
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2936], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_LaunchDetails_GetUsers(System.IntPtr obj)

Disassembly:
	0x034C56FC MOVZ W9, 0x11
	0x034C5700 ADD X10, X10, 0x7DC
	0x034C5704 MOVZ W11, 0x27
	0x034C5708 MOVZ W13, 0x8
	0x034C570C ADD X0, X31, 0x0
	0x034C5710 STP X8, X9, [X31]
	0x034C5714 STP X10, X11, [X31 + 0x10]
	0x034C5718 STR W13, [X31 + 0x28]
	0x034C571C STR D0, [X31 + 0x20]
	0x034C5720 STRB W31, [X31 + 0x2C]
	0x034C5724 BL 0x1C1729C
	0x034C5728 MOV X8, X0
	0x034C572C STR X0, [X20 + 0xC98]
	0x034C5730 MOV X0, X19
	0x034C5734 BLR X8
	0x034C5738 LDP X20, X19, [X31 + 0x40]
	0x034C573C LDR X30, [X31 + 0x30]
	0x034C5740 ADD X31, X31, 0x50
	0x034C5744 RET
	0x034C5748 SUB X31, X31, 0x50
	0x034C574C STR X30, [X31 + 0x30]
	0x034C5750 STP X20, X19, [X31 + 0x40]
	0x034C5754 ADRP X20, 0xF19000
	0x034C5758 LDR X8, [X20 + 0xCA0]
	0x034C575C MOV X19, X0
	0x034C5760 CBNZ X8, 0x34C57AC
	0x034C5764 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5768 LDR V0, [X12 + 0x5B8]
	0x034C576C ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5770 ADRP X10, 0xFFFFFFFFFD639000
	0x034C5774 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2944]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43786240
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 872
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2944], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidCancel(System.IntPtr obj)

Disassembly:
	0x034C5778 MOVZ W9, 0x11
	0x034C577C ADD X10, X10, 0x4D4
	0x034C5780 MOVZ W11, 0x25
	0x034C5784 MOVZ W13, 0x8
	0x034C5788 ADD X0, X31, 0x0
	0x034C578C STP X8, X9, [X31]
	0x034C5790 STP X10, X11, [X31 + 0x10]
	0x034C5794 STR W13, [X31 + 0x28]
	0x034C5798 STR D0, [X31 + 0x20]
	0x034C579C STRB W31, [X31 + 0x2C]
	0x034C57A0 BL 0x1C1729C
	0x034C57A4 MOV X8, X0
	0x034C57A8 STR X0, [X20 + 0xCA0]
	0x034C57AC MOV X0, X19
	0x034C57B0 BLR X8
	0x034C57B4 LDP X20, X19, [X31 + 0x40]
	0x034C57B8 LDR X30, [X31 + 0x30]
	0x034C57BC CMP W0, 0x0
	0x034C57C0 CSET W0, NE
	0x034C57C4 ADD X31, X31, 0x50
	0x034C57C8 RET
	0x034C57CC SUB X31, X31, 0x50
	0x034C57D0 STR X30, [X31 + 0x30]
	0x034C57D4 STP X20, X19, [X31 + 0x40]
	0x034C57D8 ADRP X20, 0xF19000
	0x034C57DC LDR X8, [X20 + 0xCA8]
	0x034C57E0 MOV X19, X0
	0x034C57E4 CBNZ X8, 0x34C5830
	0x034C57E8 ADRP X12, 0xFFFFFFFFFD628000
	0x034C57EC LDR V0, [X12 + 0x5B8]
	0x034C57F0 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C57F4 ADRP X10, 0xFFFFFFFFFD645000
	0x034C57F8 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2952]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43810816
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1976
	017 Move W11, 46
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2952], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(System.IntPtr obj)

Disassembly:
	0x034C57FC MOVZ W9, 0x11
	0x034C5800 ADD X10, X10, 0x804
	0x034C5804 MOVZ W11, 0x29
	0x034C5808 MOVZ W13, 0x8
	0x034C580C ADD X0, X31, 0x0
	0x034C5810 STP X8, X9, [X31]
	0x034C5814 STP X10, X11, [X31 + 0x10]
	0x034C5818 STR W13, [X31 + 0x28]
	0x034C581C STR D0, [X31 + 0x20]
	0x034C5820 STRB W31, [X31 + 0x2C]
	0x034C5824 BL 0x1C1729C
	0x034C5828 MOV X8, X0
	0x034C582C STR X0, [X20 + 0xCA8]
	0x034C5830 MOV X0, X19
	0x034C5834 BLR X8
	0x034C5838 LDP X20, X19, [X31 + 0x40]
	0x034C583C LDR X30, [X31 + 0x30]
	0x034C5840 CMP W0, 0x0
	0x034C5844 CSET W0, NE
	0x034C5848 ADD X31, X31, 0x50
	0x034C584C RET
	0x034C5850 SUB X31, X31, 0x50
	0x034C5854 STR X30, [X31 + 0x30]
	0x034C5858 STP X20, X19, [X31 + 0x40]
	0x034C585C ADRP X20, 0xF19000
	0x034C5860 LDR X8, [X20 + 0xCB0]
	0x034C5864 MOV X19, X0
	0x034C5868 CBNZ X8, 0x34C58B4
	0x034C586C ADRP X12, 0xFFFFFFFFFD628000
	0x034C5870 LDR V0, [X12 + 0x5B8]
	0x034C5874 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5878 ADRP X10, 0xFFFFFFFFFD635000
	0x034C587C ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2960]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43679744
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 652
	017 Move W11, 51
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2960], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.IntPtr ovr_LaunchInvitePanelFlowResult_GetInvitedUsers(System.IntPtr obj)

Disassembly:
	0x034C5880 MOVZ W9, 0x11
	0x034C5884 ADD X10, X10, 0x859
	0x034C5888 MOVZ W11, 0x28
	0x034C588C MOVZ W13, 0x8
	0x034C5890 ADD X0, X31, 0x0
	0x034C5894 STP X8, X9, [X31]
	0x034C5898 STP X10, X11, [X31 + 0x10]
	0x034C589C STR W13, [X31 + 0x28]
	0x034C58A0 STR D0, [X31 + 0x20]
	0x034C58A4 STRB W31, [X31 + 0x2C]
	0x034C58A8 BL 0x1C1729C
	0x034C58AC MOV X8, X0
	0x034C58B0 STR X0, [X20 + 0xCB0]
	0x034C58B4 MOV X0, X19
	0x034C58B8 BLR X8
	0x034C58BC LDP X20, X19, [X31 + 0x40]
	0x034C58C0 LDR X30, [X31 + 0x30]
	0x034C58C4 CMP W0, 0x0
	0x034C58C8 CSET W0, NE
	0x034C58CC ADD X31, X31, 0x50
	0x034C58D0 RET
	0x034C58D4 SUB X31, X31, 0x50
	0x034C58D8 STP X30, X21, [X31 + 0x30]
	0x034C58DC STP X20, X19, [X31 + 0x40]
	0x034C58E0 ADRP X21, 0xF19000
	0x034C58E4 LDR X8, [X21 + 0xCB8]
	0x034C58E8 MOV W19, W1
	0x034C58EC MOV X20, X0
	0x034C58F0 CBNZ X8, 0x34C593C
	0x034C58F4 ADRP X12, 0xFFFFFFFFFD628000
	0x034C58F8 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2968]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3538
	017 Move W11, 47
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2968], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_LaunchReportFlowResult_GetDidCancel(System.IntPtr obj)

Disassembly:
	0x034C58FC ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5900 ADRP X10, 0xFFFFFFFFFD65F000
	0x034C5904 ADD X8, X8, 0xDD2
	0x034C5908 MOVZ W9, 0x11
	0x034C590C ADD X10, X10, 0x350
	0x034C5910 MOVZ W11, 0x31
	0x034C5914 MOVZ W13, 0xC
	0x034C5918 ADD X0, X31, 0x0
	0x034C591C STP X8, X9, [X31]
	0x034C5920 STP X10, X11, [X31 + 0x10]
	0x034C5924 STR W13, [X31 + 0x28]
	0x034C5928 STR D0, [X31 + 0x20]
	0x034C592C STRB W31, [X31 + 0x2C]
	0x034C5930 BL 0x1C1729C
	0x034C5934 MOV X8, X0
	0x034C5938 STR X0, [X21 + 0xCB8]
	0x034C593C MOV X0, X20
	0x034C5940 MOV W1, W19
	0x034C5944 BLR X8
	0x034C5948 LDP X20, X19, [X31 + 0x40]
	0x034C594C LDP X30, X21, [X31 + 0x30]
	0x034C5950 ADD X31, X31, 0x50
	0x034C5954 RET
	0x034C5958 SUB X31, X31, 0x50
	0x034C595C STR X30, [X31 + 0x30]
	0x034C5960 STP X20, X19, [X31 + 0x40]
	0x034C5964 ADRP X20, 0xF19000
	0x034C5968 LDR X8, [X20 + 0xCC0]
	0x034C596C MOV X19, X0
	0x034C5970 CBNZ X8, 0x34C59BC
	0x034C5974 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5978 LDR V0, [X12 + 0x5B8]
	0x034C597C ADRP X8, 0xFFFFFFFFFD64E000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2976]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1266
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2976], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.UInt64 ovr_LaunchReportFlowResult_GetUserReportId(System.IntPtr obj)

Disassembly:
	0x034C5980 ADRP X10, 0xFFFFFFFFFD635000
	0x034C5984 ADD X8, X8, 0xDD2
	0x034C5988 MOVZ W9, 0x11
	0x034C598C ADD X10, X10, 0x882
	0x034C5990 MOVZ W11, 0x36
	0x034C5994 MOVZ W13, 0x8
	0x034C5998 ADD X0, X31, 0x0
	0x034C599C STP X8, X9, [X31]
	0x034C59A0 STP X10, X11, [X31 + 0x10]
	0x034C59A4 STR W13, [X31 + 0x28]
	0x034C59A8 STR D0, [X31 + 0x20]
	0x034C59AC STRB W31, [X31 + 0x2C]
	0x034C59B0 BL 0x1C1729C
	0x034C59B4 MOV X8, X0
	0x034C59B8 STR X0, [X20 + 0xCC0]
	0x034C59BC MOV X0, X19
	0x034C59C0 BLR X8
	0x034C59C4 LDP X20, X19, [X31 + 0x40]
	0x034C59C8 LDR X30, [X31 + 0x30]
	0x034C59CC ADD X31, X31, 0x50
	0x034C59D0 RET
	0x034C59D4 STP X30, X21, [X31 - 0x20]!
	0x034C59D8 STP X20, X19, [X31 + 0x10]
	0x034C59DC ADRP X20, 0xF19000
	0x034C59E0 ADRP X21, 0xC6D000
	0x034C59E4 LDRB W8, [X20 + 0xCC8]
	0x034C59E8 LDR X21, [X21 + 0x328]
	0x034C59EC MOV X19, X0
	0x034C59F0 TBNZ X8, 0x0, 0x34C5A08
	0x034C59F4 ADRP X0, 0xC6D000
	0x034C59F8 LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2984]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43843584
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1721
	017 Move W11, 42
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2984], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_LaunchUnblockFlowResult_GetDidCancel(System.IntPtr obj)

Disassembly:
	0x034C59FC BL 0x1C16CF4
	0x034C5A00 MOVZ W8, 0x1
	0x034C5A04 STRB W8, [X20 + 0xCC8]
	0x034C5A08 LDR X0, [X21]
	0x034C5A0C LDR W8, [X0 + 0xE0]
	0x034C5A10 CBNZ W8, 0x34C5A18
	0x034C5A14 BL 0x1C16DFC
	0x034C5A18 MOV X0, X19
	0x034C5A1C BL 0x34C5A2C
	0x034C5A20 LDP X20, X19, [X31 + 0x10]
	0x034C5A24 LDP X30, X21, [X31], #0x20
	0x034C5A28 B 0x34B3B78
	0x034C5A2C SUB X31, X31, 0x50
	0x034C5A30 STR X30, [X31 + 0x30]
	0x034C5A34 STP X20, X19, [X31 + 0x40]
	0x034C5A38 ADRP X20, 0xF19000
	0x034C5A3C LDR X8, [X20 + 0xCD0]
	0x034C5A40 MOV X19, X0
	0x034C5A44 CBNZ X8, 0x34C5A90
	0x034C5A48 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5A4C LDR V0, [X12 + 0x5B8]
	0x034C5A50 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5A54 ADRP X10, 0xFFFFFFFFFD65B000
	0x034C5A58 ADD X8, X8, 0xDD2
	0x034C5A5C MOVZ W9, 0x11
	0x034C5A60 ADD X10, X10, 0x207
	0x034C5A64 MOVZ W11, 0x20
	0x034C5A68 MOVZ W13, 0x8
	0x034C5A6C ADD X0, X31, 0x0
	0x034C5A70 STP X8, X9, [X31]
	0x034C5A74 STP X10, X11, [X31 + 0x10]
	0x034C5A78 STR W13, [X31 + 0x28]
	0x034C5A7C STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+2992]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2096
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+2992], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_LaunchUnblockFlowResult_GetDidUnblock(System.IntPtr obj)

Disassembly:
	0x034C5A80 STRB W31, [X31 + 0x2C]
	0x034C5A84 BL 0x1C1729C
	0x034C5A88 MOV X8, X0
	0x034C5A8C STR X0, [X20 + 0xCD0]
	0x034C5A90 MOV X0, X19
	0x034C5A94 BLR X8
	0x034C5A98 LDP X20, X19, [X31 + 0x40]
	0x034C5A9C LDR X30, [X31 + 0x30]
	0x034C5AA0 ADD X31, X31, 0x50
	0x034C5AA4 RET
	0x034C5AA8 SUB X31, X31, 0x50
	0x034C5AAC STR X30, [X31 + 0x30]
	0x034C5AB0 STP X20, X19, [X31 + 0x40]
	0x034C5AB4 ADRP X20, 0xF19000
	0x034C5AB8 LDR X8, [X20 + 0xCD8]
	0x034C5ABC MOV X19, X0
	0x034C5AC0 CBNZ X8, 0x34C5B0C
	0x034C5AC4 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5AC8 LDR V0, [X12 + 0x5B8]
	0x034C5ACC ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5AD0 ADRP X10, 0xFFFFFFFFFD652000
	0x034C5AD4 ADD X8, X8, 0xDD2
	0x034C5AD8 MOVZ W9, 0x11
	0x034C5ADC ADD X10, X10, 0xDE1
	0x034C5AE0 MOVZ W11, 0x24
	0x034C5AE4 MOVZ W13, 0x8
	0x034C5AE8 ADD X0, X31, 0x0
	0x034C5AEC STP X8, X9, [X31]
	0x034C5AF0 STP X10, X11, [X31 + 0x10]
	0x034C5AF4 STR W13, [X31 + 0x28]
	0x034C5AF8 STR D0, [X31 + 0x20]
	0x034C5AFC STRB W31, [X31 + 0x2C]
	0x034C5B00 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+3000]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43843584
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1764
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3000], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_Leaderboard_GetApiName(System.IntPtr obj)

Disassembly:
	0x034C5B04 MOV X8, X0
	0x034C5B08 STR X0, [X20 + 0xCD8]
	0x034C5B0C MOV X0, X19
	0x034C5B10 BLR X8
	0x034C5B14 LDP X20, X19, [X31 + 0x40]
	0x034C5B18 LDR X30, [X31 + 0x30]
	0x034C5B1C ADD X31, X31, 0x50
	0x034C5B20 RET
	0x034C5B24 STP X30, X21, [X31 - 0x20]!
	0x034C5B28 STP X20, X19, [X31 + 0x10]
	0x034C5B2C ADRP X20, 0xF19000
	0x034C5B30 ADRP X21, 0xC6D000
	0x034C5B34 LDRB W8, [X20 + 0xCE0]
	0x034C5B38 LDR X21, [X21 + 0x328]
	0x034C5B3C MOV X19, X0
	0x034C5B40 TBNZ X8, 0x0, 0x34C5B58
	0x034C5B44 ADRP X0, 0xC6D000
	0x034C5B48 LDR X0, [X0 + 0x328]
	0x034C5B4C BL 0x1C16CF4
	0x034C5B50 MOVZ W8, 0x1
	0x034C5B54 STRB W8, [X20 + 0xCE0]
	0x034C5B58 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1A000
	006 Move X21, 0xC6E000
	007 Move W8, [X20+3008]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6E000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3008], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Leaderboard_GetApiName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Leaderboard_GetApiName_Native(System.IntPtr obj)

Disassembly:
	0x034C5B5C LDR W8, [X0 + 0xE0]
	0x034C5B60 CBNZ W8, 0x34C5B68
	0x034C5B64 BL 0x1C16DFC
	0x034C5B68 MOV X0, X19
	0x034C5B6C BL 0x34C5B7C
	0x034C5B70 LDP X20, X19, [X31 + 0x10]
	0x034C5B74 LDP X30, X21, [X31], #0x20
	0x034C5B78 B 0x34B3B78
	0x034C5B7C SUB X31, X31, 0x50
	0x034C5B80 STR X30, [X31 + 0x30]
	0x034C5B84 STP X20, X19, [X31 + 0x40]
	0x034C5B88 ADRP X20, 0xF19000
	0x034C5B8C LDR X8, [X20 + 0xCE8]
	0x034C5B90 MOV X19, X0
	0x034C5B94 CBNZ X8, 0x34C5BE0
	0x034C5B98 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5B9C LDR V0, [X12 + 0x5B8]
	0x034C5BA0 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5BA4 ADRP X10, 0xFFFFFFFFFD631000
	0x034C5BA8 ADD X8, X8, 0xDD2
	0x034C5BAC MOVZ W9, 0x11
	0x034C5BB0 ADD X10, X10, 0x777
	0x034C5BB4 MOVZ W11, 0x1B
	0x034C5BB8 MOVZ W13, 0x8
	0x034C5BBC ADD X0, X31, 0x0
	0x034C5BC0 STP X8, X9, [X31]
	0x034C5BC4 STP X10, X11, [X31 + 0x10]
	0x034C5BC8 STR W13, [X31 + 0x28]
	0x034C5BCC STR D0, [X31 + 0x20]
	0x034C5BD0 STRB W31, [X31 + 0x2C]
	0x034C5BD4 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+3016]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43708416
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3242
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3016], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Leaderboard_GetDestination(System.IntPtr obj)

Disassembly:
	0x034C5BD8 MOV X8, X0
	0x034C5BDC STR X0, [X20 + 0xCE8]
	0x034C5BE0 MOV X0, X19
	0x034C5BE4 BLR X8
	0x034C5BE8 LDP X20, X19, [X31 + 0x40]
	0x034C5BEC LDR X30, [X31 + 0x30]
	0x034C5BF0 ADD X31, X31, 0x50
	0x034C5BF4 RET
	0x034C5BF8 SUB X31, X31, 0x50
	0x034C5BFC STP X30, X21, [X31 + 0x30]
	0x034C5C00 STP X20, X19, [X31 + 0x40]
	0x034C5C04 ADRP X21, 0xF19000
	0x034C5C08 LDR X8, [X21 + 0xCF0]
	0x034C5C0C MOV X19, X1
	0x034C5C10 MOV X20, X0
	0x034C5C14 CBNZ X8, 0x34C5C60
	0x034C5C18 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5C1C LDR V0, [X12 + 0x5B8]
	0x034C5C20 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5C24 ADRP X10, 0xFFFFFFFFFD662000
	0x034C5C28 ADD X8, X8, 0xDD2
	0x034C5C2C MOVZ W9, 0x11
	0x034C5C30 ADD X10, X10, 0xE02
	0x034C5C34 MOVZ W11, 0x21
	0x034C5C38 MOVZ W13, 0x10
	0x034C5C3C ADD X0, X31, 0x0
	0x034C5C40 STP X8, X9, [X31]
	0x034C5C44 STP X10, X11, [X31 + 0x10]
	0x034C5C48 STR W13, [X31 + 0x28]
	0x034C5C4C STR D0, [X31 + 0x20]
	0x034C5C50 STRB W31, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+3024]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43745280
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 925
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3024], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Leaderboard_GetID(System.IntPtr obj)

Disassembly:
	0x034C5C54 BL 0x1C1729C
	0x034C5C58 MOV X8, X0
	0x034C5C5C STR X0, [X21 + 0xCF0]
	0x034C5C60 MOV X0, X20
	0x034C5C64 MOV X1, X19
	0x034C5C68 BLR X8
	0x034C5C6C LDP X20, X19, [X31 + 0x40]
	0x034C5C70 LDP X30, X21, [X31 + 0x30]
	0x034C5C74 ADD X31, X31, 0x50
	0x034C5C78 RET
	0x034C5C7C SUB X31, X31, 0x50
	0x034C5C80 STR X30, [X31 + 0x30]
	0x034C5C84 STP X20, X19, [X31 + 0x40]
	0x034C5C88 ADRP X20, 0xF19000
	0x034C5C8C LDR X8, [X20 + 0xCF8]
	0x034C5C90 MOV X19, X0
	0x034C5C94 CBNZ X8, 0x34C5CE0
	0x034C5C98 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5C9C LDR V0, [X12 + 0x5B8]
	0x034C5CA0 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5CA4 ADRP X10, 0xFFFFFFFFFD652000
	0x034C5CA8 ADD X8, X8, 0xDD2
	0x034C5CAC MOVZ W9, 0x11
	0x034C5CB0 ADD X10, X10, 0xE06
	0x034C5CB4 MOVZ W11, 0x1E
	0x034C5CB8 MOVZ W13, 0x8
	0x034C5CBC ADD X0, X31, 0x0
	0x034C5CC0 STP X8, X9, [X31]
	0x034C5CC4 STP X10, X11, [X31 + 0x10]
	0x034C5CC8 STR W13, [X31 + 0x28]
	0x034C5CCC STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+3032]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43851776
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1999
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3032], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_LeaderboardArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C5CD0 STRB W31, [X31 + 0x2C]
	0x034C5CD4 BL 0x1C1729C
	0x034C5CD8 MOV X8, X0
	0x034C5CDC STR X0, [X20 + 0xCF8]
	0x034C5CE0 MOV X0, X19
	0x034C5CE4 BLR X8
	0x034C5CE8 LDP X20, X19, [X31 + 0x40]
	0x034C5CEC LDR X30, [X31 + 0x30]
	0x034C5CF0 ADD X31, X31, 0x50
	0x034C5CF4 RET
	0x034C5CF8 SUB X31, X31, 0x50
	0x034C5CFC STR X30, [X31 + 0x30]
	0x034C5D00 STP X20, X19, [X31 + 0x40]
	0x034C5D04 ADRP X20, 0xF19000
	0x034C5D08 LDR X8, [X20 + 0xD00]
	0x034C5D0C MOV X19, X0
	0x034C5D10 CBNZ X8, 0x34C5D5C
	0x034C5D14 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5D18 LDR V0, [X12 + 0x5B8]
	0x034C5D1C ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5D20 ADRP X10, 0xFFFFFFFFFD641000
	0x034C5D24 ADD X8, X8, 0xDD2
	0x034C5D28 MOVZ W9, 0x11
	0x034C5D2C ADD X10, X10, 0x5CC
	0x034C5D30 MOVZ W11, 0x36
	0x034C5D34 MOVZ W13, 0x8
	0x034C5D38 ADD X0, X31, 0x0
	0x034C5D3C STP X8, X9, [X31]
	0x034C5D40 STP X10, X11, [X31 + 0x10]
	0x034C5D44 STR W13, [X31 + 0x28]
	0x034C5D48 STR D0, [X31 + 0x20]
	0x034C5D4C STRB W31, [X31 + 0x2C]
	0x034C5D50 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF1A000
	007 Move X8, [X21+3040]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43872256
	013 Move V0, [X12+1464]
	014 Move X8, -43716608
	015 Move X10, -43851776
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2021
	019 Move W11, 31
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3040], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_LeaderboardArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034C5D54 MOV X8, X0
	0x034C5D58 STR X0, [X20 + 0xD00]
	0x034C5D5C MOV X0, X19
	0x034C5D60 BLR X8
	0x034C5D64 LDP X20, X19, [X31 + 0x40]
	0x034C5D68 LDR X30, [X31 + 0x30]
	0x034C5D6C CMP W0, 0x0
	0x034C5D70 CSET W0, NE
	0x034C5D74 ADD X31, X31, 0x50
	0x034C5D78 RET
	0x034C5D7C SUB X31, X31, 0x50
	0x034C5D80 STR X30, [X31 + 0x30]
	0x034C5D84 STP X20, X19, [X31 + 0x40]
	0x034C5D88 ADRP X20, 0xF19000
	0x034C5D8C LDR X8, [X20 + 0xD08]
	0x034C5D90 MOV X19, X0
	0x034C5D94 CBNZ X8, 0x34C5DE0
	0x034C5D98 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5D9C LDR V0, [X12 + 0x5B8]
	0x034C5DA0 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5DA4 ADRP X10, 0xFFFFFFFFFD635000
	0x034C5DA8 ADD X8, X8, 0xDD2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1A000
	006 Move X21, 0xC6E000
	007 Move W8, [X20+3048]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6E000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3048], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LeaderboardArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LeaderboardArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C5DAC MOVZ W9, 0x11
	0x034C5DB0 ADD X10, X10, 0x8B9
	0x034C5DB4 MOVZ W11, 0x2F
	0x034C5DB8 MOVZ W13, 0x8
	0x034C5DBC ADD X0, X31, 0x0
	0x034C5DC0 STP X8, X9, [X31]
	0x034C5DC4 STP X10, X11, [X31 + 0x10]
	0x034C5DC8 STR W13, [X31 + 0x28]
	0x034C5DCC STR D0, [X31 + 0x20]
	0x034C5DD0 STRB W31, [X31 + 0x2C]
	0x034C5DD4 BL 0x1C1729C
	0x034C5DD8 MOV X8, X0
	0x034C5DDC STR X0, [X20 + 0xD08]
	0x034C5DE0 MOV X0, X19
	0x034C5DE4 BLR X8
	0x034C5DE8 LDP X20, X19, [X31 + 0x40]
	0x034C5DEC LDR X30, [X31 + 0x30]
	0x034C5DF0 ADD X31, X31, 0x50
	0x034C5DF4 RET
	0x034C5DF8 SUB X31, X31, 0x50
	0x034C5DFC STR X30, [X31 + 0x30]
	0x034C5E00 STP X20, X19, [X31 + 0x40]
	0x034C5E04 ADRP X20, 0xF19000
	0x034C5E08 LDR X8, [X20 + 0xD10]
	0x034C5E0C MOV X19, X0
	0x034C5E10 CBNZ X8, 0x34C5E5C
	0x034C5E14 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5E18 LDR V0, [X12 + 0x5B8]
	0x034C5E1C ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5E20 ADRP X10, 0xFFFFFFFFFD62B000
	0x034C5E24 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+3056]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1306
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3056], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_LeaderboardArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C5E28 MOVZ W9, 0x11
	0x034C5E2C ADD X10, X10, 0x339
	0x034C5E30 MOVZ W11, 0x2A
	0x034C5E34 MOVZ W13, 0x8
	0x034C5E38 ADD X0, X31, 0x0
	0x034C5E3C STP X8, X9, [X31]
	0x034C5E40 STP X10, X11, [X31 + 0x10]
	0x034C5E44 STR W13, [X31 + 0x28]
	0x034C5E48 STR D0, [X31 + 0x20]
	0x034C5E4C STRB W31, [X31 + 0x2C]
	0x034C5E50 BL 0x1C1729C
	0x034C5E54 MOV X8, X0
	0x034C5E58 STR X0, [X20 + 0xD10]
	0x034C5E5C MOV X0, X19
	0x034C5E60 BLR X8
	0x034C5E64 LDP X20, X19, [X31 + 0x40]
	0x034C5E68 LDR X30, [X31 + 0x30]
	0x034C5E6C CMP W0, 0x0
	0x034C5E70 CSET W0, NE
	0x034C5E74 ADD X31, X31, 0x50
	0x034C5E78 RET
	0x034C5E7C SUB X31, X31, 0x50
	0x034C5E80 STR X30, [X31 + 0x30]
	0x034C5E84 STP X20, X19, [X31 + 0x40]
	0x034C5E88 ADRP X20, 0xF19000
	0x034C5E8C LDR X8, [X20 + 0xD18]
	0x034C5E90 MOV X19, X0
	0x034C5E94 CBNZ X8, 0x34C5EE0
	0x034C5E98 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5E9C LDR V0, [X12 + 0x5B8]
	0x034C5EA0 ADRP X8, 0xFFFFFFFFFD64E000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+3064]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 751
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3064], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_LeaderboardArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034C5EA4 ADRP X10, 0xFFFFFFFFFD62B000
	0x034C5EA8 ADD X8, X8, 0xDD2
	0x034C5EAC MOVZ W9, 0x11
	0x034C5EB0 ADD X10, X10, 0x364
	0x034C5EB4 MOVZ W11, 0x23
	0x034C5EB8 MOVZ W13, 0x8
	0x034C5EBC ADD X0, X31, 0x0
	0x034C5EC0 STP X8, X9, [X31]
	0x034C5EC4 STP X10, X11, [X31 + 0x10]
	0x034C5EC8 STR W13, [X31 + 0x28]
	0x034C5ECC STR D0, [X31 + 0x20]
	0x034C5ED0 STRB W31, [X31 + 0x2C]
	0x034C5ED4 BL 0x1C1729C
	0x034C5ED8 MOV X8, X0
	0x034C5EDC STR X0, [X20 + 0xD18]
	0x034C5EE0 MOV X0, X19
	0x034C5EE4 BLR X8
	0x034C5EE8 LDP X20, X19, [X31 + 0x40]
	0x034C5EEC LDR X30, [X31 + 0x30]
	0x034C5EF0 CMP W0, 0x0
	0x034C5EF4 CSET W0, NE
	0x034C5EF8 ADD X31, X31, 0x50
	0x034C5EFC RET
	0x034C5F00 SUB X31, X31, 0x50
	0x034C5F04 STR X30, [X31 + 0x30]
	0x034C5F08 STP X20, X19, [X31 + 0x40]
	0x034C5F0C ADRP X20, 0xF19000
	0x034C5F10 LDR X8, [X20 + 0xD20]
	0x034C5F14 MOV X19, X0
	0x034C5F18 CBNZ X8, 0x34C5F64
	0x034C5F1C ADRP X12, 0xFFFFFFFFFD628000
	0x034C5F20 LDR V0, [X12 + 0x5B8]
	0x034C5F24 ADRP X8, 0xFFFFFFFFFD64E000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+3072]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43675648
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 4001
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3072], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_LeaderboardEntry_GetDisplayScore(System.IntPtr obj)

Disassembly:
	0x034C5F28 ADRP X10, 0xFFFFFFFFFD637000
	0x034C5F2C ADD X8, X8, 0xDD2
	0x034C5F30 MOVZ W9, 0x11
	0x034C5F34 ADD X10, X10, 0x7E7
	0x034C5F38 MOVZ W11, 0x2F
	0x034C5F3C MOVZ W13, 0x8
	0x034C5F40 ADD X0, X31, 0x0
	0x034C5F44 STP X8, X9, [X31]
	0x034C5F48 STP X10, X11, [X31 + 0x10]
	0x034C5F4C STR W13, [X31 + 0x28]
	0x034C5F50 STR D0, [X31 + 0x20]
	0x034C5F54 STRB W31, [X31 + 0x2C]
	0x034C5F58 BL 0x1C1729C
	0x034C5F5C MOV X8, X0
	0x034C5F60 STR X0, [X20 + 0xD20]
	0x034C5F64 MOV X0, X19
	0x034C5F68 BLR X8
	0x034C5F6C LDP X20, X19, [X31 + 0x40]
	0x034C5F70 LDR X30, [X31 + 0x30]
	0x034C5F74 CMP W0, 0x0
	0x034C5F78 CSET W0, NE
	0x034C5F7C ADD X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF1A000
	006 Move X21, 0xC6E000
	007 Move W8, [X20+3080]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6E000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3080], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LeaderboardEntry_GetDisplayScore_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LeaderboardEntry_GetDisplayScore_Native(System.IntPtr obj)

Disassembly:
	0x034C5F80 RET
	0x034C5F84 SUB X31, X31, 0x50
	0x034C5F88 STR X30, [X31 + 0x30]
	0x034C5F8C STP X20, X19, [X31 + 0x40]
	0x034C5F90 ADRP X20, 0xF19000
	0x034C5F94 LDR X8, [X20 + 0xD28]
	0x034C5F98 MOV X19, X0
	0x034C5F9C CBNZ X8, 0x34C5FE8
	0x034C5FA0 ADRP X12, 0xFFFFFFFFFD628000
	0x034C5FA4 LDR V0, [X12 + 0x5B8]
	0x034C5FA8 ADRP X8, 0xFFFFFFFFFD64E000
	0x034C5FAC ADRP X10, 0xFFFFFFFFFD658000
	0x034C5FB0 ADD X8, X8, 0xDD2
	0x034C5FB4 MOVZ W9, 0x11
	0x034C5FB8 ADD X10, X10, 0xFC2
	0x034C5FBC MOVZ W11, 0x2C
	0x034C5FC0 MOVZ W13, 0x8
	0x034C5FC4 ADD X0, X31, 0x0
	0x034C5FC8 STP X8, X9, [X31]
	0x034C5FCC STP X10, X11, [X31 + 0x10]
	0x034C5FD0 STR W13, [X31 + 0x28]
	0x034C5FD4 STR D0, [X31 + 0x20]
	0x034C5FD8 STRB W31, [X31 + 0x2C]
	0x034C5FDC BL 0x1C1729C
	0x034C5FE0 MOV X8, X0
	0x034C5FE4 STR X0, [X20 + 0xD28]
	0x034C5FE8 MOV X0, X19
	0x034C5FEC BLR X8
	0x034C5FF0 LDP X20, X19, [X31 + 0x40]
	0x034C5FF4 LDR X30, [X31 + 0x30]
	0x034C5FF8 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1A000
	006 Move X8, [X20+3088]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43872256
	011 Move V0, [X12+1464]
	012 Move X8, -43716608
	013 Move X10, -43692032
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3697
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3088], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Byte[] ovr_LeaderboardEntry_GetExtraData(System.IntPtr obj)

Disassembly:
	0x034C5FFC RET
	0x034C6000 SUB X31, X31, 0x50
	0x034C6004 STR X30, [X31 + 0x30]
	0x034C6008 STP X20, X19, [X31 + 0x40]
	0x034C600C ADRP X20, 0xF18000
	0x034C6010 LDR X8, [X20 + 0xD30]
	0x034C6014 MOV X19, X0
	0x034C6018 CBNZ X8, 0x34C6064
	0x034C601C ADRP X12, 0xFFFFFFFFFD627000
	0x034C6020 LDR V0, [X12 + 0x5B8]
	0x034C6024 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6028 ADRP X10, 0xFFFFFFFFFD653000
	0x034C602C ADD X8, X8, 0xDD2
	0x034C6030 MOVZ W9, 0x11
	0x034C6034 ADD X10, X10, 0xEE7
	0x034C6038 MOVZ W11, 0x25
	0x034C603C MOVZ W13, 0x8
	0x034C6040 ADD X0, X31, 0x0
	0x034C6044 STP X8, X9, [X31]
	0x034C6048 STP X10, X11, [X31 + 0x10]
	0x034C604C STR W13, [X31 + 0x28]
	0x034C6050 STR D0, [X31 + 0x20]
	0x034C6054 STRB W31, [X31 + 0x2C]
	0x034C6058 BL 0x1C1729C
	0x034C605C MOV X8, X0
	0x034C6060 STR X0, [X20 + 0xD30]
	0x034C6064 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF19000
	006 Move X21, 0xC6D000
	007 Move W8, [X20+3096]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6D000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3096], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LeaderboardEntry_GetExtraDataLength, X0
	026 Move W20, W0
	027 Move X0, X19
	028 Call CAPI.ovr_LeaderboardEntry_GetExtraData_Native, X0
	029 Move X1, X0
	030 Move W0, W20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call CAPI.BlobFromNative, X0, X1
	036 Return X0

Method: System.IntPtr ovr_LeaderboardEntry_GetExtraData_Native(System.IntPtr obj)

Disassembly:
	0x034C6068 BLR X8
	0x034C606C LDP X20, X19, [X31 + 0x40]
	0x034C6070 LDR X30, [X31 + 0x30]
	0x034C6074 CMP W0, 0x0
	0x034C6078 CSET W0, NE
	0x034C607C ADD X31, X31, 0x50
	0x034C6080 RET
	0x034C6084 SUB X31, X31, 0x50
	0x034C6088 STR X30, [X31 + 0x30]
	0x034C608C STP X20, X19, [X31 + 0x40]
	0x034C6090 ADRP X20, 0xF18000
	0x034C6094 LDR X8, [X20 + 0xD38]
	0x034C6098 MOV X19, X0
	0x034C609C CBNZ X8, 0x34C60E8
	0x034C60A0 ADRP X12, 0xFFFFFFFFFD627000
	0x034C60A4 LDR V0, [X12 + 0x5B8]
	0x034C60A8 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C60AC ADRP X10, 0xFFFFFFFFFD644000
	0x034C60B0 ADD X8, X8, 0xDD2
	0x034C60B4 MOVZ W9, 0x11
	0x034C60B8 ADD X10, X10, 0x82E
	0x034C60BC MOVZ W11, 0x2B
	0x034C60C0 MOVZ W13, 0x8
	0x034C60C4 ADD X0, X31, 0x0
	0x034C60C8 STP X8, X9, [X31]
	0x034C60CC STP X10, X11, [X31 + 0x10]
	0x034C60D0 STR W13, [X31 + 0x28]
	0x034C60D4 STR D0, [X31 + 0x20]
	0x034C60D8 STRB W31, [X31 + 0x2C]
	0x034C60DC BL 0x1C1729C
	0x034C60E0 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3104]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43872256
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2207
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3104], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt32 ovr_LeaderboardEntry_GetExtraDataLength(System.IntPtr obj)

Disassembly:
	0x034C28E8 CBNZ W8, 0x34C28F0
	0x034C28EC BL 0x1C16DFC
	0x034C28F0 MOV X0, X19
	0x034C28F4 BL 0x34C2904
	0x034C28F8 LDP X20, X19, [X31 + 0x10]
	0x034C28FC LDP X30, X21, [X31], #0x20
	0x034C2900 B 0x34B3B78
	0x034C2904 SUB X31, X31, 0x50
	0x034C2908 STR X30, [X31 + 0x30]
	0x034C290C STP X20, X19, [X31 + 0x40]
	0x034C2910 ADRP X20, 0xF1C000
	0x034C2914 LDR X8, [X20 + 0x958]
	0x034C2918 MOV X19, X0
	0x034C291C CBNZ X8, 0x34C2968
	0x034C2920 ADRP X12, 0xFFFFFFFFFD62B000
	0x034C2924 LDR V0, [X12 + 0x5B8]
	0x034C2928 ADRP X8, 0xFFFFFFFFFD651000
	0x034C292C ADRP X10, 0xFFFFFFFFFD642000
	0x034C2930 ADD X8, X8, 0xDD2
	0x034C2934 MOVZ W9, 0x11
	0x034C2938 ADD X10, X10, 0x779
	0x034C293C MOVZ W11, 0x1A
	0x034C2940 MOVZ W13, 0x8
	0x034C2944 ADD X0, X31, 0x0
	0x034C2948 STP X8, X9, [X31]
	0x034C294C STP X10, X11, [X31 + 0x10]
	0x034C2950 STR W13, [X31 + 0x28]
	0x034C2954 STR D0, [X31 + 0x20]
	0x034C2958 STRB W31, [X31 + 0x2C]
	0x034C295C BL 0x1C1729C
	0x034C2960 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF1D000
	006 Move X8, [X20+3112]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43859968
	011 Move V0, [X12+1464]
	012 Move X8, -43704320
	013 Move X10, -43679744
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3734
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3112], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_LeaderboardEntry_GetID(System.IntPtr obj)

Disassembly:
	0x034C60E4 STR X0, [X20 + 0xD38]
	0x034C60E8 MOV X0, X19
	0x034C60EC BLR X8
	0x034C60F0 LDP X20, X19, [X31 + 0x40]
	0x034C60F4 LDR X30, [X31 + 0x30]
	0x034C60F8 ADD X31, X31, 0x50
	0x034C60FC RET
	0x034C6100 SUB X31, X31, 0x50
	0x034C6104 STR X30, [X31 + 0x30]
	0x034C6108 STP X20, X19, [X31 + 0x40]
	0x034C610C ADRP X20, 0xF18000
	0x034C6110 LDR X8, [X20 + 0xD40]
	0x034C6114 MOV X19, X0
	0x034C6118 CBNZ X8, 0x34C6164
	0x034C611C ADRP X12, 0xFFFFFFFFFD627000
	0x034C6120 LDR V0, [X12 + 0x5B8]
	0x034C6124 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6128 ADRP X10, 0xFFFFFFFFFD648000
	0x034C612C ADD X8, X8, 0xDD2
	0x034C6130 MOVZ W9, 0x11
	0x034C6134 ADD X10, X10, 0x4CF
	0x034C6138 MOVZ W11, 0x2C
	0x034C613C MOVZ W13, 0x8
	0x034C6140 ADD X0, X31, 0x0
	0x034C6144 STP X8, X9, [X31]
	0x034C6148 STP X10, X11, [X31 + 0x10]
	0x034C614C STR W13, [X31 + 0x28]
	0x034C6150 STR D0, [X31 + 0x20]
	0x034C6154 STRB W31, [X31 + 0x2C]
	0x034C6158 BL 0x1C1729C
	0x034C615C MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3120]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43642880
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 980
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3120], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int32 ovr_LeaderboardEntry_GetRank(System.IntPtr obj)

Disassembly:
	0x034C6160 STR X0, [X20 + 0xD40]
	0x034C6164 MOV X0, X19
	0x034C6168 BLR X8
	0x034C616C LDP X20, X19, [X31 + 0x40]
	0x034C6170 LDR X30, [X31 + 0x30]
	0x034C6174 ADD X31, X31, 0x50
	0x034C6178 RET
	0x034C617C STP X30, X21, [X31 - 0x20]!
	0x034C6180 STP X20, X19, [X31 + 0x10]
	0x034C6184 ADRP X20, 0xF18000
	0x034C6188 ADRP X21, 0xC6C000
	0x034C618C LDRB W8, [X20 + 0xD48]
	0x034C6190 LDR X21, [X21 + 0x328]
	0x034C6194 MOV X19, X0
	0x034C6198 TBNZ X8, 0x0, 0x34C61B0
	0x034C619C ADRP X0, 0xC6C000
	0x034C61A0 LDR X0, [X0 + 0x328]
	0x034C61A4 BL 0x1C16CF4
	0x034C61A8 MOVZ W8, 0x1
	0x034C61AC STRB W8, [X20 + 0xD48]
	0x034C61B0 LDR X0, [X21]
	0x034C61B4 LDR W8, [X0 + 0xE0]
	0x034C61B8 CBNZ W8, 0x34C61C0
	0x034C61BC BL 0x1C16DFC
	0x034C61C0 MOV X0, X19
	0x034C61C4 BL 0x34C61D4
	0x034C61C8 LDP X20, X19, [X31 + 0x10]
	0x034C61CC LDP X30, X21, [X31], #0x20
	0x034C61D0 B 0x34B3B78
	0x034C61D4 SUB X31, X31, 0x50
	0x034C61D8 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3128]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43839488
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1882
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3128], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_LeaderboardEntry_GetScore(System.IntPtr obj)

Disassembly:
	0x034C61DC STP X20, X19, [X31 + 0x40]
	0x034C61E0 ADRP X20, 0xF18000
	0x034C61E4 LDR X8, [X20 + 0xD50]
	0x034C61E8 MOV X19, X0
	0x034C61EC CBNZ X8, 0x34C6238
	0x034C61F0 ADRP X12, 0xFFFFFFFFFD627000
	0x034C61F4 LDR V0, [X12 + 0x5B8]
	0x034C61F8 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C61FC ADRP X10, 0xFFFFFFFFFD63A000
	0x034C6200 ADD X8, X8, 0xDD2
	0x034C6204 MOVZ W9, 0x11
	0x034C6208 ADD X10, X10, 0x30C
	0x034C620C MOVZ W11, 0x29
	0x034C6210 MOVZ W13, 0x8
	0x034C6214 ADD X0, X31, 0x0
	0x034C6218 STP X8, X9, [X31]
	0x034C621C STP X10, X11, [X31 + 0x10]
	0x034C6220 STR W13, [X31 + 0x28]
	0x034C6224 STR D0, [X31 + 0x20]
	0x034C6228 STRB W31, [X31 + 0x2C]
	0x034C622C BL 0x1C1729C
	0x034C6230 MOV X8, X0
	0x034C6234 STR X0, [X20 + 0xD50]
	0x034C6238 MOV X0, X19
	0x034C623C BLR X8
	0x034C6240 LDP X20, X19, [X31 + 0x40]
	0x034C6244 LDR X30, [X31 + 0x30]
	0x034C6248 ADD X31, X31, 0x50
	0x034C624C RET
	0x034C6250 SUB X31, X31, 0x50
	0x034C6254 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3136]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43749376
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 956
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3136], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_LeaderboardEntry_GetSupplementaryMetric(System.IntPtr obj)

Disassembly:
	0x034C6258 STP X20, X19, [X31 + 0x40]
	0x034C625C ADRP X20, 0xF18000
	0x034C6260 LDR X8, [X20 + 0xD58]
	0x034C6264 MOV X19, X0
	0x034C6268 CBNZ X8, 0x34C62B4
	0x034C626C ADRP X12, 0xFFFFFFFFFD627000
	0x034C6270 LDR V0, [X12 + 0x5B8]
	0x034C6274 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6278 ADRP X10, 0xFFFFFFFFFD648000
	0x034C627C ADD X8, X8, 0xDD2
	0x034C6280 MOVZ W9, 0x11
	0x034C6284 ADD X10, X10, 0x4FC
	0x034C6288 MOVZ W11, 0x23
	0x034C628C MOVZ W13, 0x8
	0x034C6290 ADD X0, X31, 0x0
	0x034C6294 STP X8, X9, [X31]
	0x034C6298 STP X10, X11, [X31 + 0x10]
	0x034C629C STR W13, [X31 + 0x28]
	0x034C62A0 STR D0, [X31 + 0x20]
	0x034C62A4 STRB W31, [X31 + 0x2C]
	0x034C62A8 BL 0x1C1729C
	0x034C62AC MOV X8, X0
	0x034C62B0 STR X0, [X20 + 0xD58]
	0x034C62B4 MOV X0, X19
	0x034C62B8 BLR X8
	0x034C62BC LDP X20, X19, [X31 + 0x40]
	0x034C62C0 LDR X30, [X31 + 0x30]
	0x034C62C4 ADD X31, X31, 0x50
	0x034C62C8 RET
	0x034C62CC SUB X31, X31, 0x50
	0x034C62D0 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3144]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43749376
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 986
	017 Move W11, 43
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3144], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.DateTime ovr_LeaderboardEntry_GetTimestamp(System.IntPtr obj)

Disassembly:
	0x034C62D4 STP X20, X19, [X31 + 0x40]
	0x034C62D8 ADRP X20, 0xF18000
	0x034C62DC LDR X8, [X20 + 0xD60]
	0x034C62E0 MOV X19, X0
	0x034C62E4 CBNZ X8, 0x34C6330
	0x034C62E8 ADRP X12, 0xFFFFFFFFFD627000
	0x034C62EC LDR V0, [X12 + 0x5B8]
	0x034C62F0 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C62F4 ADRP X10, 0xFFFFFFFFFD64D000
	0x034C62F8 ADD X8, X8, 0xDD2
	0x034C62FC MOVZ W9, 0x11
	0x034C6300 ADD X10, X10, 0xEF6
	0x034C6304 MOVZ W11, 0x29
	0x034C6308 MOVZ W13, 0x8
	0x034C630C ADD X0, X31, 0x0
	0x034C6310 STP X8, X9, [X31]
	0x034C6314 STP X10, X11, [X31 + 0x10]
	0x034C6318 STR W13, [X31 + 0x28]
	0x034C631C STR D0, [X31 + 0x20]
	0x034C6320 STRB W31, [X31 + 0x2C]
	0x034C6324 BL 0x1C1729C
	0x034C6328 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF19000
	006 Move X21, 0xC6D000
	007 Move W8, [X20+3152]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6D000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3152], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LeaderboardEntry_GetTimestamp_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.DateTimeFromNative, X0
	031 Return X0

Method: System.UInt64 ovr_LeaderboardEntry_GetTimestamp_Native(System.IntPtr obj)

Disassembly:
	0x034C632C STR X0, [X20 + 0xD60]
	0x034C6330 MOV X0, X19
	0x034C6334 BLR X8
	0x034C6338 LDP X20, X19, [X31 + 0x40]
	0x034C633C LDR X30, [X31 + 0x30]
	0x034C6340 ADD X31, X31, 0x50
	0x034C6344 RET
	0x034C6348 SUB X31, X31, 0x50
	0x034C634C STR X30, [X31 + 0x30]
	0x034C6350 STP X20, X19, [X31 + 0x40]
	0x034C6354 ADRP X20, 0xF18000
	0x034C6358 LDR X8, [X20 + 0xD68]
	0x034C635C MOV X19, X0
	0x034C6360 CBNZ X8, 0x34C63AC
	0x034C6364 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6368 LDR V0, [X12 + 0x5B8]
	0x034C636C ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6370 ADRP X10, 0xFFFFFFFFFD65C000
	0x034C6374 ADD X8, X8, 0xDD2
	0x034C6378 MOVZ W9, 0x11
	0x034C637C ADD X10, X10, 0x4FC
	0x034C6380 MOVZ W11, 0x27
	0x034C6384 MOVZ W13, 0x8
	0x034C6388 ADD X0, X31, 0x0
	0x034C638C STP X8, X9, [X31]
	0x034C6390 STP X10, X11, [X31 + 0x10]
	0x034C6394 STR W13, [X31 + 0x28]
	0x034C6398 STR D0, [X31 + 0x20]
	0x034C639C STRB W31, [X31 + 0x2C]
	0x034C63A0 BL 0x1C1729C
	0x034C63A4 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3160]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43806720
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1202
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3160], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_LeaderboardEntry_GetUser(System.IntPtr obj)

Disassembly:
	0x034C63A8 STR X0, [X20 + 0xD68]
	0x034C63AC MOV X0, X19
	0x034C63B0 BLR X8
	0x034C63B4 LDP X20, X19, [X31 + 0x40]
	0x034C63B8 LDR X30, [X31 + 0x30]
	0x034C63BC ADD X31, X31, 0x50
	0x034C63C0 RET
	0x034C63C4 SUB X31, X31, 0x50
	0x034C63C8 STR X30, [X31 + 0x30]
	0x034C63CC STP X20, X19, [X31 + 0x40]
	0x034C63D0 ADRP X20, 0xF18000
	0x034C63D4 LDR X8, [X20 + 0xD70]
	0x034C63D8 MOV X19, X0
	0x034C63DC CBNZ X8, 0x34C6428
	0x034C63E0 ADRP X12, 0xFFFFFFFFFD627000
	0x034C63E4 LDR V0, [X12 + 0x5B8]
	0x034C63E8 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C63EC ADRP X10, 0xFFFFFFFFFD665000
	0x034C63F0 ADD X8, X8, 0xDD2
	0x034C63F4 MOVZ W9, 0x11
	0x034C63F8 ADD X10, X10, 0xCC1
	0x034C63FC MOVZ W11, 0x20
	0x034C6400 MOVZ W13, 0x8
	0x034C6404 ADD X0, X31, 0x0
	0x034C6408 STP X8, X9, [X31]
	0x034C640C STP X10, X11, [X31 + 0x10]
	0x034C6410 STR W13, [X31 + 0x28]
	0x034C6414 STR D0, [X31 + 0x20]
	0x034C6418 STRB W31, [X31 + 0x2C]
	0x034C641C BL 0x1C1729C
	0x034C6420 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3168]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43712512
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3269
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3168], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_LeaderboardEntryArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C6424 STR X0, [X20 + 0xD70]
	0x034C6428 MOV X0, X19
	0x034C642C BLR X8
	0x034C6430 LDP X20, X19, [X31 + 0x40]
	0x034C6434 LDR X30, [X31 + 0x30]
	0x034C6438 ADD X31, X31, 0x50
	0x034C643C RET
	0x034C6440 SUB X31, X31, 0x50
	0x034C6444 STR X30, [X31 + 0x30]
	0x034C6448 STP X20, X19, [X31 + 0x40]
	0x034C644C ADRP X20, 0xF18000
	0x034C6450 LDR X8, [X20 + 0xD78]
	0x034C6454 MOV X19, X0
	0x034C6458 CBNZ X8, 0x34C64A4
	0x034C645C ADRP X12, 0xFFFFFFFFFD627000
	0x034C6460 LDR V0, [X12 + 0x5B8]
	0x034C6464 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6468 ADRP X10, 0xFFFFFFFFFD64F000
	0x034C646C ADD X8, X8, 0xDD2
	0x034C6470 MOVZ W9, 0x11
	0x034C6474 ADD X10, X10, 0xCE2
	0x034C6478 MOVZ W11, 0x28
	0x034C647C MOVZ W13, 0x8
	0x034C6480 ADD X0, X31, 0x0
	0x034C6484 STP X8, X9, [X31]
	0x034C6488 STP X10, X11, [X31 + 0x10]
	0x034C648C STR W13, [X31 + 0x28]
	0x034C6490 STR D0, [X31 + 0x20]
	0x034C6494 STRB W31, [X31 + 0x2C]
	0x034C6498 BL 0x1C1729C
	0x034C649C MOV X8, X0
	0x034C64A0 STR X0, [X20 + 0xD78]
	0x034C64A4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF19000
	007 Move X8, [X21+3176]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43876352
	013 Move V0, [X12+1464]
	014 Move X8, -43720704
	015 Move X10, -43872256
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2241
	019 Move W11, 36
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3176], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_LeaderboardEntryArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034C64A8 BLR X8
	0x034C64AC LDP X20, X19, [X31 + 0x40]
	0x034C64B0 LDR X30, [X31 + 0x30]
	0x034C64B4 ADD X31, X31, 0x50
	0x034C64B8 RET
	0x034C64BC SUB X31, X31, 0x50
	0x034C64C0 STR X30, [X31 + 0x30]
	0x034C64C4 STP X20, X19, [X31 + 0x40]
	0x034C64C8 ADRP X20, 0xF18000
	0x034C64CC LDR X8, [X20 + 0xD80]
	0x034C64D0 MOV X19, X0
	0x034C64D4 CBNZ X8, 0x34C6520
	0x034C64D8 ADRP X12, 0xFFFFFFFFFD627000
	0x034C64DC LDR V0, [X12 + 0x5B8]
	0x034C64E0 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C64E4 ADRP X10, 0xFFFFFFFFFD642000
	0x034C64E8 ADD X8, X8, 0xDD2
	0x034C64EC MOVZ W9, 0x11
	0x034C64F0 ADD X10, X10, 0x5B8
	0x034C64F4 MOVZ W11, 0x20
	0x034C64F8 MOVZ W13, 0x8
	0x034C64FC ADD X0, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF19000
	006 Move X21, 0xC6D000
	007 Move W8, [X20+3184]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6D000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3184], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LeaderboardEntryArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C6500 STP X8, X9, [X31]
	0x034C6504 STP X10, X11, [X31 + 0x10]
	0x034C6508 STR W13, [X31 + 0x28]
	0x034C650C STR D0, [X31 + 0x20]
	0x034C6510 STRB W31, [X31 + 0x2C]
	0x034C6514 BL 0x1C1729C
	0x034C6518 MOV X8, X0
	0x034C651C STR X0, [X20 + 0xD80]
	0x034C6520 MOV X0, X19
	0x034C6524 BLR X8
	0x034C6528 LDP X20, X19, [X31 + 0x40]
	0x034C652C LDR X30, [X31 + 0x30]
	0x034C6530 ADD X31, X31, 0x50
	0x034C6534 RET
	0x034C6538 SUB X31, X31, 0x50
	0x034C653C STR X30, [X31 + 0x30]
	0x034C6540 STP X20, X19, [X31 + 0x40]
	0x034C6544 ADRP X20, 0xF18000
	0x034C6548 LDR X8, [X20 + 0xD88]
	0x034C654C MOV X19, X0
	0x034C6550 CBNZ X8, 0x34C659C
	0x034C6554 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6558 LDR V0, [X12 + 0x5B8]
	0x034C655C ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6560 ADRP X10, 0xFFFFFFFFFD64C000
	0x034C6564 ADD X8, X8, 0xDD2
	0x034C6568 MOVZ W9, 0x11
	0x034C656C ADD X10, X10, 0x11B
	0x034C6570 MOVZ W11, 0x25
	0x034C6574 MOVZ W13, 0x8
	0x034C6578 ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3192]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43683840
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 704
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3192], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LeaderboardEntryArray_GetPreviousUrl(System.IntPtr obj)

Disassembly:
	0x034C657C STP X8, X9, [X31]
	0x034C6580 STP X10, X11, [X31 + 0x10]
	0x034C6584 STR W13, [X31 + 0x28]
	0x034C6588 STR D0, [X31 + 0x20]
	0x034C658C STRB W31, [X31 + 0x2C]
	0x034C6590 BL 0x1C1729C
	0x034C6594 MOV X8, X0
	0x034C6598 STR X0, [X20 + 0xD88]
	0x034C659C MOV X0, X19
	0x034C65A0 BLR X8
	0x034C65A4 LDP X20, X19, [X31 + 0x40]
	0x034C65A8 LDR X30, [X31 + 0x30]
	0x034C65AC ADD X31, X31, 0x50
	0x034C65B0 RET
	0x034C65B4 SUB X31, X31, 0x50
	0x034C65B8 STR X30, [X31 + 0x30]
	0x034C65BC STP X20, X19, [X31 + 0x40]
	0x034C65C0 ADRP X20, 0xF18000
	0x034C65C4 LDR X8, [X20 + 0xD90]
	0x034C65C8 MOV X19, X0
	0x034C65CC CBNZ X8, 0x34C6618
	0x034C65D0 ADRP X12, 0xFFFFFFFFFD627000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF19000
	006 Move X21, 0xC6D000
	007 Move W8, [X20+3200]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6D000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3200], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(System.IntPtr obj)

Disassembly:
	0x034C65D4 LDR V0, [X12 + 0x5B8]
	0x034C65D8 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C65DC ADRP X10, 0xFFFFFFFFFD665000
	0x034C65E0 ADD X8, X8, 0xDD2
	0x034C65E4 MOVZ W9, 0x11
	0x034C65E8 ADD X10, X10, 0xCE2
	0x034C65EC MOVZ W11, 0x21
	0x034C65F0 MOVZ W13, 0x8
	0x034C65F4 ADD X0, X31, 0x0
	0x034C65F8 STP X8, X9, [X31]
	0x034C65FC STP X10, X11, [X31 + 0x10]
	0x034C6600 STR W13, [X31 + 0x28]
	0x034C6604 STR D0, [X31 + 0x20]
	0x034C6608 STRB W31, [X31 + 0x2C]
	0x034C660C BL 0x1C1729C
	0x034C6610 MOV X8, X0
	0x034C6614 STR X0, [X20 + 0xD90]
	0x034C6618 MOV X0, X19
	0x034C661C BLR X8
	0x034C6620 LDP X20, X19, [X31 + 0x40]
	0x034C6624 LDR X30, [X31 + 0x30]
	0x034C6628 ADD X31, X31, 0x50
	0x034C662C RET
	0x034C6630 SUB X31, X31, 0x50
	0x034C6634 STR X30, [X31 + 0x30]
	0x034C6638 STP X20, X19, [X31 + 0x40]
	0x034C663C ADRP X20, 0xF18000
	0x034C6640 LDR X8, [X20 + 0xD98]
	0x034C6644 MOV X19, X0
	0x034C6648 CBNZ X8, 0x34C6694
	0x034C664C ADRP X12, 0xFFFFFFFFFD627000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3208]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3774
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3208], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_LeaderboardEntryArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C6650 LDR V0, [X12 + 0x5B8]
	0x034C6654 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6658 ADRP X10, 0xFFFFFFFFFD64C000
	0x034C665C ADD X8, X8, 0xDD2
	0x034C6660 MOVZ W9, 0x11
	0x034C6664 ADD X10, X10, 0x141
	0x034C6668 MOVZ W11, 0x1B
	0x034C666C MOVZ W13, 0x8
	0x034C6670 ADD X0, X31, 0x0
	0x034C6674 STP X8, X9, [X31]
	0x034C6678 STP X10, X11, [X31 + 0x10]
	0x034C667C STR W13, [X31 + 0x28]
	0x034C6680 STR D0, [X31 + 0x20]
	0x034C6684 STRB W31, [X31 + 0x2C]
	0x034C6688 BL 0x1C1729C
	0x034C668C MOV X8, X0
	0x034C6690 STR X0, [X20 + 0xD98]
	0x034C6694 MOV X0, X19
	0x034C6698 BLR X8
	0x034C669C LDP X20, X19, [X31 + 0x40]
	0x034C66A0 LDR X30, [X31 + 0x30]
	0x034C66A4 ADD X31, X31, 0x50
	0x034C66A8 RET
	0x034C66AC SUB X31, X31, 0x50
	0x034C66B0 STR X30, [X31 + 0x30]
	0x034C66B4 STP X20, X19, [X31 + 0x40]
	0x034C66B8 ADRP X20, 0xF18000
	0x034C66BC LDR X8, [X20 + 0xDA0]
	0x034C66C0 MOV X19, X0
	0x034C66C4 CBNZ X8, 0x34C6710
	0x034C66C8 ADRP X12, 0xFFFFFFFFFD627000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3216]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43749376
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1030
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3216], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_LeaderboardEntryArray_GetTotalCount(System.IntPtr obj)

Disassembly:
	0x034C66CC LDR V0, [X12 + 0x5B8]
	0x034C66D0 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C66D4 ADRP X10, 0xFFFFFFFFFD636000
	0x034C66D8 ADD X8, X8, 0xDD2
	0x034C66DC MOVZ W9, 0x11
	0x034C66E0 ADD X10, X10, 0x817
	0x034C66E4 MOVZ W11, 0x20
	0x034C66E8 MOVZ W13, 0x8
	0x034C66EC ADD X0, X31, 0x0
	0x034C66F0 STP X8, X9, [X31]
	0x034C66F4 STP X10, X11, [X31 + 0x10]
	0x034C66F8 STR W13, [X31 + 0x28]
	0x034C66FC STR D0, [X31 + 0x20]
	0x034C6700 STRB W31, [X31 + 0x2C]
	0x034C6704 BL 0x1C1729C
	0x034C6708 MOV X8, X0
	0x034C670C STR X0, [X20 + 0xDA0]
	0x034C6710 MOV X0, X19
	0x034C6714 BLR X8
	0x034C6718 LDP X20, X19, [X31 + 0x40]
	0x034C671C LDR X30, [X31 + 0x30]
	0x034C6720 ADD X31, X31, 0x50
	0x034C6724 RET
	0x034C6728 SUB X31, X31, 0x50
	0x034C672C STR X30, [X31 + 0x30]
	0x034C6730 STP X20, X19, [X31 + 0x40]
	0x034C6734 ADRP X20, 0xF18000
	0x034C6738 LDR X8, [X20 + 0xDA8]
	0x034C673C MOV X19, X0
	0x034C6740 CBNZ X8, 0x34C678C
	0x034C6744 ADRP X12, 0xFFFFFFFFFD627000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3224]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43757568
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2012
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3224], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_LeaderboardEntryArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034C6748 LDR V0, [X12 + 0x5B8]
	0x034C674C ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6750 ADRP X10, 0xFFFFFFFFFD62E000
	0x034C6754 ADD X8, X8, 0xDD2
	0x034C6758 MOVZ W9, 0x11
	0x034C675C ADD X10, X10, 0x70E
	0x034C6760 MOVZ W11, 0x24
	0x034C6764 MOVZ W13, 0x8
	0x034C6768 ADD X0, X31, 0x0
	0x034C676C STP X8, X9, [X31]
	0x034C6770 STP X10, X11, [X31 + 0x10]
	0x034C6774 STR W13, [X31 + 0x28]
	0x034C6778 STR D0, [X31 + 0x20]
	0x034C677C STRB W31, [X31 + 0x2C]
	0x034C6780 BL 0x1C1729C
	0x034C6784 MOV X8, X0
	0x034C6788 STR X0, [X20 + 0xDA8]
	0x034C678C MOV X0, X19
	0x034C6790 BLR X8
	0x034C6794 LDP X20, X19, [X31 + 0x40]
	0x034C6798 LDR X30, [X31 + 0x30]
	0x034C679C ADD X31, X31, 0x50
	0x034C67A0 RET
	0x034C67A4 SUB X31, X31, 0x50
	0x034C67A8 STR X30, [X31 + 0x30]
	0x034C67AC STP X20, X19, [X31 + 0x40]
	0x034C67B0 ADRP X20, 0xF18000
	0x034C67B4 LDR X8, [X20 + 0xDB0]
	0x034C67B8 MOV X19, X0
	0x034C67BC CBNZ X8, 0x34C6808
	0x034C67C0 ADRP X12, 0xFFFFFFFFFD627000
	0x034C67C4 LDR V0, [X12 + 0x5B8]
	0x034C67C8 ADRP X8, 0xFFFFFFFFFD64D000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3232]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43806720
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1236
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3232], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_LeaderboardEntryArray_HasPreviousPage(System.IntPtr obj)

Disassembly:
	0x034C67CC ADRP X10, 0xFFFFFFFFFD63C000
	0x034C67D0 ADD X8, X8, 0xDD2
	0x034C67D4 MOVZ W9, 0x11
	0x034C67D8 ADD X10, X10, 0x383
	0x034C67DC MOVZ W11, 0x2C
	0x034C67E0 MOVZ W13, 0x8
	0x034C67E4 ADD X0, X31, 0x0
	0x034C67E8 STP X8, X9, [X31]
	0x034C67EC STP X10, X11, [X31 + 0x10]
	0x034C67F0 STR W13, [X31 + 0x28]
	0x034C67F4 STR D0, [X31 + 0x20]
	0x034C67F8 STRB W31, [X31 + 0x2C]
	0x034C67FC BL 0x1C1729C
	0x034C6800 MOV X8, X0
	0x034C6804 STR X0, [X20 + 0xDB0]
	0x034C6808 MOV X0, X19
	0x034C680C BLR X8
	0x034C6810 LDP X20, X19, [X31 + 0x40]
	0x034C6814 LDR X30, [X31 + 0x30]
	0x034C6818 ADD X31, X31, 0x50
	0x034C681C RET
	0x034C6820 SUB X31, X31, 0x50
	0x034C6824 STR X30, [X31 + 0x30]
	0x034C6828 STP X20, X19, [X31 + 0x40]
	0x034C682C ADRP X20, 0xF18000
	0x034C6830 LDR X8, [X20 + 0xDB8]
	0x034C6834 MOV X19, X0
	0x034C6838 CBNZ X8, 0x34C6884
	0x034C683C ADRP X12, 0xFFFFFFFFFD627000
	0x034C6840 LDR V0, [X12 + 0x5B8]
	0x034C6844 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6848 ADRP X10, 0xFFFFFFFFFD64A000
	0x034C684C ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3240]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43757568
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2052
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3240], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_LeaderboardUpdateStatus_GetDidUpdate(System.IntPtr obj)

Disassembly:
	0x034C6850 MOVZ W9, 0x11
	0x034C6854 ADD X10, X10, 0x53A
	0x034C6858 MOVZ W11, 0x26
	0x034C685C MOVZ W13, 0x8
	0x034C6860 ADD X0, X31, 0x0
	0x034C6864 STP X8, X9, [X31]
	0x034C6868 STP X10, X11, [X31 + 0x10]
	0x034C686C STR W13, [X31 + 0x28]
	0x034C6870 STR D0, [X31 + 0x20]
	0x034C6874 STRB W31, [X31 + 0x2C]
	0x034C6878 BL 0x1C1729C
	0x034C687C MOV X8, X0
	0x034C6880 STR X0, [X20 + 0xDB8]
	0x034C6884 MOV X0, X19
	0x034C6888 BLR X8
	0x034C688C LDP X20, X19, [X31 + 0x40]
	0x034C6890 LDR X30, [X31 + 0x30]
	0x034C6894 ADD X31, X31, 0x50
	0x034C6898 RET
	0x034C689C SUB X31, X31, 0x50
	0x034C68A0 STR X30, [X31 + 0x30]
	0x034C68A4 STP X20, X19, [X31 + 0x40]
	0x034C68A8 ADRP X20, 0xF18000
	0x034C68AC LDR X8, [X20 + 0xDC0]
	0x034C68B0 MOV X19, X0
	0x034C68B4 CBNZ X8, 0x34C6900
	0x034C68B8 ADRP X12, 0xFFFFFFFFFD627000
	0x034C68BC LDR V0, [X12 + 0x5B8]
	0x034C68C0 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C68C4 ADRP X10, 0xFFFFFFFFFD64C000
	0x034C68C8 ADD X8, X8, 0xDD2
	0x034C68CC MOVZ W9, 0x11
	0x034C68D0 ADD X10, X10, 0x15D

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3248]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43823104
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2137
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3248], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.UInt64 ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(System.IntPtr obj, System.UInt32 index)

Disassembly:
	0x034C68D4 MOVZ W11, 0x26
	0x034C68D8 MOVZ W13, 0x8
	0x034C68DC ADD X0, X31, 0x0
	0x034C68E0 STP X8, X9, [X31]
	0x034C68E4 STP X10, X11, [X31 + 0x10]
	0x034C68E8 STR W13, [X31 + 0x28]
	0x034C68EC STR D0, [X31 + 0x20]
	0x034C68F0 STRB W31, [X31 + 0x2C]
	0x034C68F4 BL 0x1C1729C
	0x034C68F8 MOV X8, X0
	0x034C68FC STR X0, [X20 + 0xDC0]
	0x034C6900 MOV X0, X19
	0x034C6904 BLR X8
	0x034C6908 LDP X20, X19, [X31 + 0x40]
	0x034C690C LDR X30, [X31 + 0x30]
	0x034C6910 ADD X31, X31, 0x50
	0x034C6914 RET
	0x034C6918 SUB X31, X31, 0x50
	0x034C691C STR X30, [X31 + 0x30]
	0x034C6920 STP X20, X19, [X31 + 0x40]
	0x034C6924 ADRP X20, 0xF18000
	0x034C6928 LDR X8, [X20 + 0xDC8]
	0x034C692C MOV X19, X0
	0x034C6930 CBNZ X8, 0x34C697C
	0x034C6934 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6938 LDR V0, [X12 + 0x5B8]
	0x034C693C ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6940 ADRP X10, 0xFFFFFFFFFD64D000
	0x034C6944 ADD X8, X8, 0xDD2
	0x034C6948 MOVZ W9, 0x11
	0x034C694C ADD X10, X10, 0xF20
	0x034C6950 MOVZ W11, 0x21
	0x034C6954 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF19000
	007 Move X8, [X21+3256]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43876352
	013 Move V0, [X12+1464]
	014 Move X8, -43720704
	015 Move X10, -43651072
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 848
	019 Move W11, 49
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3256], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UInt32 ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(System.IntPtr obj)

Disassembly:
	0x034C6958 ADD X0, X31, 0x0
	0x034C695C STP X8, X9, [X31]
	0x034C6960 STP X10, X11, [X31 + 0x10]
	0x034C6964 STR W13, [X31 + 0x28]
	0x034C6968 STR D0, [X31 + 0x20]
	0x034C696C STRB W31, [X31 + 0x2C]
	0x034C6970 BL 0x1C1729C
	0x034C6974 MOV X8, X0
	0x034C6978 STR X0, [X20 + 0xDC8]
	0x034C697C MOV X0, X19
	0x034C6980 BLR X8
	0x034C6984 LDP X20, X19, [X31 + 0x40]
	0x034C6988 LDR X30, [X31 + 0x30]
	0x034C698C ADD X31, X31, 0x50
	0x034C6990 RET
	0x034C6994 SUB X31, X31, 0x50
	0x034C6998 STR X30, [X31 + 0x30]
	0x034C699C STP X20, X19, [X31 + 0x40]
	0x034C69A0 ADRP X20, 0xF18000
	0x034C69A4 LDR X8, [X20 + 0xDD0]
	0x034C69A8 MOV X19, X0
	0x034C69AC CBNZ X8, 0x34C69F8
	0x034C69B0 ADRP X12, 0xFFFFFFFFFD627000
	0x034C69B4 LDR V0, [X12 + 0x5B8]
	0x034C69B8 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C69BC ADRP X10, 0xFFFFFFFFFD651000
	0x034C69C0 ADD X8, X8, 0xDD2
	0x034C69C4 MOVZ W9, 0x11
	0x034C69C8 ADD X10, X10, 0xE25
	0x034C69CC MOVZ W11, 0x1F
	0x034C69D0 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3264]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43823104
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2178
	017 Move W11, 54
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3264], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LinkedAccount_GetAccessToken(System.IntPtr obj)

Disassembly:
	0x034C69D4 ADD X0, X31, 0x0
	0x034C69D8 STP X8, X9, [X31]
	0x034C69DC STP X10, X11, [X31 + 0x10]
	0x034C69E0 STR W13, [X31 + 0x28]
	0x034C69E4 STR D0, [X31 + 0x20]
	0x034C69E8 STRB W31, [X31 + 0x2C]
	0x034C69EC BL 0x1C1729C
	0x034C69F0 MOV X8, X0
	0x034C69F4 STR X0, [X20 + 0xDD0]
	0x034C69F8 MOV X0, X19
	0x034C69FC BLR X8
	0x034C6A00 LDP X20, X19, [X31 + 0x40]
	0x034C6A04 LDR X30, [X31 + 0x30]
	0x034C6A08 ADD X31, X31, 0x50
	0x034C6A0C RET
	0x034C6A10 SUB X31, X31, 0x50
	0x034C6A14 STR X30, [X31 + 0x30]
	0x034C6A18 STP X20, X19, [X31 + 0x40]
	0x034C6A1C ADRP X20, 0xF18000
	0x034C6A20 LDR X8, [X20 + 0xDD8]
	0x034C6A24 MOV X19, X0
	0x034C6A28 CBNZ X8, 0x34C6A74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF19000
	006 Move X21, 0xC6D000
	007 Move W8, [X20+3272]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6D000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3272], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LinkedAccount_GetAccessToken_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LinkedAccount_GetAccessToken_Native(System.IntPtr obj)

Disassembly:
	0x034C6A2C ADRP X12, 0xFFFFFFFFFD627000
	0x034C6A30 LDR V0, [X12 + 0x5B8]
	0x034C6A34 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6A38 ADRP X10, 0xFFFFFFFFFD651000
	0x034C6A3C ADD X8, X8, 0xDD2
	0x034C6A40 MOVZ W9, 0x11
	0x034C6A44 ADD X10, X10, 0xE45
	0x034C6A48 MOVZ W11, 0x18
	0x034C6A4C MOVZ W13, 0x8
	0x034C6A50 ADD X0, X31, 0x0
	0x034C6A54 STP X8, X9, [X31]
	0x034C6A58 STP X10, X11, [X31 + 0x10]
	0x034C6A5C STR W13, [X31 + 0x28]
	0x034C6A60 STR D0, [X31 + 0x20]
	0x034C6A64 STRB W31, [X31 + 0x2C]
	0x034C6A68 BL 0x1C1729C
	0x034C6A6C MOV X8, X0
	0x034C6A70 STR X0, [X20 + 0xDD8]
	0x034C6A74 MOV X0, X19
	0x034C6A78 BLR X8
	0x034C6A7C LDP X20, X19, [X31 + 0x40]
	0x034C6A80 LDR X30, [X31 + 0x30]
	0x034C6A84 ADD X31, X31, 0x50
	0x034C6A88 RET
	0x034C6A8C SUB X31, X31, 0x50
	0x034C6A90 STR X30, [X31 + 0x30]
	0x034C6A94 STP X20, X19, [X31 + 0x40]
	0x034C6A98 ADRP X20, 0xF18000
	0x034C6A9C LDR X8, [X20 + 0xDE0]
	0x034C6AA0 MOV X19, X0
	0x034C6AA4 CBNZ X8, 0x34C6AF0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3280]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 519
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3280], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.ServiceProvider ovr_LinkedAccount_GetServiceProvider(System.IntPtr obj)

Disassembly:
	0x034C6AA8 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6AAC LDR V0, [X12 + 0x5B8]
	0x034C6AB0 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6AB4 ADRP X10, 0xFFFFFFFFFD657000
	0x034C6AB8 ADD X8, X8, 0xDD2
	0x034C6ABC MOVZ W9, 0x11
	0x034C6AC0 ADD X10, X10, 0xFEF
	0x034C6AC4 MOVZ W11, 0x1D
	0x034C6AC8 MOVZ W13, 0x8
	0x034C6ACC ADD X0, X31, 0x0
	0x034C6AD0 STP X8, X9, [X31]
	0x034C6AD4 STP X10, X11, [X31 + 0x10]
	0x034C6AD8 STR W13, [X31 + 0x28]
	0x034C6ADC STR D0, [X31 + 0x20]
	0x034C6AE0 STRB W31, [X31 + 0x2C]
	0x034C6AE4 BL 0x1C1729C
	0x034C6AE8 MOV X8, X0
	0x034C6AEC STR X0, [X20 + 0xDE0]
	0x034C6AF0 MOV X0, X19
	0x034C6AF4 BLR X8
	0x034C6AF8 LDP X20, X19, [X31 + 0x40]
	0x034C6AFC LDR X30, [X31 + 0x30]
	0x034C6B00 ADD X31, X31, 0x50
	0x034C6B04 RET
	0x034C6B08 SUB X31, X31, 0x50
	0x034C6B0C STR X30, [X31 + 0x30]
	0x034C6B10 STP X20, X19, [X31 + 0x40]
	0x034C6B14 ADRP X20, 0xF18000
	0x034C6B18 LDR X8, [X20 + 0xDE8]
	0x034C6B1C MOV X19, X0
	0x034C6B20 CBNZ X8, 0x34C6B6C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3288]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43704320
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3553
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3288], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LinkedAccount_GetUserId(System.IntPtr obj)

Disassembly:
	0x034C6B24 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6B28 LDR V0, [X12 + 0x5B8]
	0x034C6B2C ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6B30 ADRP X10, 0xFFFFFFFFFD62E000
	0x034C6B34 ADD X8, X8, 0xDD2
	0x034C6B38 MOVZ W9, 0x11
	0x034C6B3C ADD X10, X10, 0x733
	0x034C6B40 MOVZ W11, 0x22
	0x034C6B44 MOVZ W13, 0x8
	0x034C6B48 ADD X0, X31, 0x0
	0x034C6B4C STP X8, X9, [X31]
	0x034C6B50 STP X10, X11, [X31 + 0x10]
	0x034C6B54 STR W13, [X31 + 0x28]
	0x034C6B58 STR D0, [X31 + 0x20]
	0x034C6B5C STRB W31, [X31 + 0x2C]
	0x034C6B60 BL 0x1C1729C
	0x034C6B64 MOV X8, X0
	0x034C6B68 STR X0, [X20 + 0xDE8]
	0x034C6B6C MOV X0, X19
	0x034C6B70 BLR X8
	0x034C6B74 LDP X20, X19, [X31 + 0x40]
	0x034C6B78 LDR X30, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF19000
	006 Move X21, 0xC6D000
	007 Move W8, [X20+3296]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6D000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3296], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LinkedAccount_GetUserId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LinkedAccount_GetUserId_Native(System.IntPtr obj)

Disassembly:
	0x034C6B7C ADD X31, X31, 0x50
	0x034C6B80 RET
	0x034C6B84 SUB X31, X31, 0x50
	0x034C6B88 STR X30, [X31 + 0x30]
	0x034C6B8C STP X20, X19, [X31 + 0x40]
	0x034C6B90 ADRP X20, 0xF18000
	0x034C6B94 LDR X8, [X20 + 0xDF0]
	0x034C6B98 MOV X19, X0
	0x034C6B9C CBNZ X8, 0x34C6BE8
	0x034C6BA0 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6BA4 LDR V0, [X12 + 0x5B8]
	0x034C6BA8 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6BAC ADRP X10, 0xFFFFFFFFFD64F000
	0x034C6BB0 ADD X8, X8, 0xDD2
	0x034C6BB4 MOVZ W9, 0x11
	0x034C6BB8 ADD X10, X10, 0xD0B
	0x034C6BBC MOVZ W11, 0x21
	0x034C6BC0 MOVZ W13, 0x8
	0x034C6BC4 ADD X0, X31, 0x0
	0x034C6BC8 STP X8, X9, [X31]
	0x034C6BCC STP X10, X11, [X31 + 0x10]
	0x034C6BD0 STR W13, [X31 + 0x28]
	0x034C6BD4 STR D0, [X31 + 0x20]
	0x034C6BD8 STRB W31, [X31 + 0x2C]
	0x034C6BDC BL 0x1C1729C
	0x034C6BE0 MOV X8, X0
	0x034C6BE4 STR X0, [X20 + 0xDF0]
	0x034C6BE8 MOV X0, X19
	0x034C6BEC BLR X8
	0x034C6BF0 LDP X20, X19, [X31 + 0x40]
	0x034C6BF4 LDR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3304]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43839488
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1911
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3304], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_LinkedAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034C6BF8 ADD X31, X31, 0x50
	0x034C6BFC RET
	0x034C6C00 SUB X31, X31, 0x50
	0x034C6C04 STR X30, [X31 + 0x30]
	0x034C6C08 STP X20, X19, [X31 + 0x40]
	0x034C6C0C ADRP X20, 0xF18000
	0x034C6C10 LDR X8, [X20 + 0xDF8]
	0x034C6C14 MOV X19, X0
	0x034C6C18 CBNZ X8, 0x34C6C64
	0x034C6C1C ADRP X12, 0xFFFFFFFFFD627000
	0x034C6C20 LDR V0, [X12 + 0x5B8]
	0x034C6C24 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6C28 ADRP X10, 0xFFFFFFFFFD640000
	0x034C6C2C ADD X8, X8, 0xDD2
	0x034C6C30 MOVZ W9, 0x11
	0x034C6C34 ADD X10, X10, 0x603
	0x034C6C38 MOVZ W11, 0x22
	0x034C6C3C MOVZ W13, 0x8
	0x034C6C40 ADD X0, X31, 0x0
	0x034C6C44 STP X8, X9, [X31]
	0x034C6C48 STP X10, X11, [X31 + 0x10]
	0x034C6C4C STR W13, [X31 + 0x28]
	0x034C6C50 STR D0, [X31 + 0x20]
	0x034C6C54 STRB W31, [X31 + 0x2C]
	0x034C6C58 BL 0x1C1729C
	0x034C6C5C MOV X8, X0
	0x034C6C60 STR X0, [X20 + 0xDF8]
	0x034C6C64 MOV X0, X19
	0x034C6C68 BLR X8
	0x034C6C6C LDP X20, X19, [X31 + 0x40]
	0x034C6C70 LDR X30, [X31 + 0x30]
	0x034C6C74 ADD X31, X31, 0x50
	0x034C6C78 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF19000
	007 Move X8, [X21+3312]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43876352
	013 Move V0, [X12+1464]
	014 Move X8, -43720704
	015 Move X10, -43638784
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3586
	019 Move W11, 33
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+3312], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UIntPtr ovr_LinkedAccountArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034C6C7C SUB X31, X31, 0x50
	0x034C6C80 STR X30, [X31 + 0x30]
	0x034C6C84 STP X20, X19, [X31 + 0x40]
	0x034C6C88 ADRP X20, 0xF18000
	0x034C6C8C LDR X8, [X20 + 0xE00]
	0x034C6C90 MOV X19, X0
	0x034C6C94 CBNZ X8, 0x34C6CE0
	0x034C6C98 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6C9C LDR V0, [X12 + 0x5B8]
	0x034C6CA0 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6CA4 ADRP X10, 0xFFFFFFFFFD65E000
	0x034C6CA8 ADD X8, X8, 0xDD2
	0x034C6CAC MOVZ W9, 0x11
	0x034C6CB0 ADD X10, X10, 0x382
	0x034C6CB4 MOVZ W11, 0x1E
	0x034C6CB8 MOVZ W13, 0x8
	0x034C6CBC ADD X0, X31, 0x0
	0x034C6CC0 STP X8, X9, [X31]
	0x034C6CC4 STP X10, X11, [X31 + 0x10]
	0x034C6CC8 STR W13, [X31 + 0x28]
	0x034C6CCC STR D0, [X31 + 0x20]
	0x034C6CD0 STRB W31, [X31 + 0x2C]
	0x034C6CD4 BL 0x1C1729C
	0x034C6CD8 MOV X8, X0
	0x034C6CDC STR X0, [X20 + 0xE00]
	0x034C6CE0 MOV X0, X19
	0x034C6CE4 BLR X8
	0x034C6CE8 LDP X20, X19, [X31 + 0x40]
	0x034C6CEC LDR X30, [X31 + 0x30]
	0x034C6CF0 ADD X31, X31, 0x50
	0x034C6CF4 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3320]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43704320
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3590
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3320], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_LivestreamingApplicationStatus_GetStreamingEnabled(System.IntPtr obj)

Disassembly:
	0x034C6CF8 SUB X31, X31, 0x50
	0x034C6CFC STR X30, [X31 + 0x30]
	0x034C6D00 STP X20, X19, [X31 + 0x40]
	0x034C6D04 ADRP X20, 0xF18000
	0x034C6D08 LDR X8, [X20 + 0xE08]
	0x034C6D0C MOV X19, X0
	0x034C6D10 CBNZ X8, 0x34C6D5C
	0x034C6D14 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6D18 LDR V0, [X12 + 0x5B8]
	0x034C6D1C ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6D20 ADRP X10, 0xFFFFFFFFFD62A000
	0x034C6D24 ADD X8, X8, 0xDD2
	0x034C6D28 MOVZ W9, 0x11
	0x034C6D2C ADD X10, X10, 0x388
	0x034C6D30 MOVZ W11, 0x18
	0x034C6D34 MOVZ W13, 0x8
	0x034C6D38 ADD X0, X31, 0x0
	0x034C6D3C STP X8, X9, [X31]
	0x034C6D40 STP X10, X11, [X31 + 0x10]
	0x034C6D44 STR W13, [X31 + 0x28]
	0x034C6D48 STR D0, [X31 + 0x20]
	0x034C6D4C STRB W31, [X31 + 0x2C]
	0x034C6D50 BL 0x1C1729C
	0x034C6D54 MOV X8, X0
	0x034C6D58 STR X0, [X20 + 0xE08]
	0x034C6D5C MOV X0, X19
	0x034C6D60 BLR X8
	0x034C6D64 LDP X20, X19, [X31 + 0x40]
	0x034C6D68 LDR X30, [X31 + 0x30]
	0x034C6D6C ADD X31, X31, 0x50
	0x034C6D70 RET
	0x034C6D74 SUB X31, X31, 0x50
	0x034C6D78 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3328]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1484
	017 Move W11, 54
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3328], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: Oculus.Platform.LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(System.IntPtr obj)

Disassembly:
	0x034C6D7C STP X20, X19, [X31 + 0x40]
	0x034C6D80 ADRP X20, 0xF18000
	0x034C6D84 LDR X8, [X20 + 0xE10]
	0x034C6D88 MOV X19, X0
	0x034C6D8C CBNZ X8, 0x34C6DD8
	0x034C6D90 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6D94 LDR V0, [X12 + 0x5B8]
	0x034C6D98 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6D9C ADRP X10, 0xFFFFFFFFFD634000
	0x034C6DA0 ADD X8, X8, 0xDD2
	0x034C6DA4 MOVZ W9, 0x11
	0x034C6DA8 ADD X10, X10, 0x8E9
	0x034C6DAC MOVZ W11, 0x1F
	0x034C6DB0 MOVZ W13, 0x8
	0x034C6DB4 ADD X0, X31, 0x0
	0x034C6DB8 STP X8, X9, [X31]
	0x034C6DBC STP X10, X11, [X31 + 0x10]
	0x034C6DC0 STR W13, [X31 + 0x28]
	0x034C6DC4 STR D0, [X31 + 0x20]
	0x034C6DC8 STRB W31, [X31 + 0x2C]
	0x034C6DCC BL 0x1C1729C
	0x034C6DD0 MOV X8, X0
	0x034C6DD4 STR X0, [X20 + 0xE10]
	0x034C6DD8 MOV X0, X19
	0x034C6DDC BLR X8
	0x034C6DE0 LDP X20, X19, [X31 + 0x40]
	0x034C6DE4 LDR X30, [X31 + 0x30]
	0x034C6DE8 ADD X31, X31, 0x50
	0x034C6DEC RET
	0x034C6DF0 SUB X31, X31, 0x50
	0x034C6DF4 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3336]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43823104
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2233
	017 Move W11, 47
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3336], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_LivestreamingStatus_GetCommentsVisible(System.IntPtr obj)

Disassembly:
	0x034C6DF8 STP X20, X19, [X31 + 0x40]
	0x034C6DFC ADRP X20, 0xF18000
	0x034C6E00 LDR X8, [X20 + 0xE18]
	0x034C6E04 MOV X19, X0
	0x034C6E08 CBNZ X8, 0x34C6E54
	0x034C6E0C ADRP X12, 0xFFFFFFFFFD627000
	0x034C6E10 LDR V0, [X12 + 0x5B8]
	0x034C6E14 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6E18 ADRP X10, 0xFFFFFFFFFD653000
	0x034C6E1C ADD X8, X8, 0xDD2
	0x034C6E20 MOVZ W9, 0x11
	0x034C6E24 ADD X10, X10, 0xF0D
	0x034C6E28 MOVZ W11, 0x14
	0x034C6E2C MOVZ W13, 0x8
	0x034C6E30 ADD X0, X31, 0x0
	0x034C6E34 STP X8, X9, [X31]
	0x034C6E38 STP X10, X11, [X31 + 0x10]
	0x034C6E3C STR W13, [X31 + 0x28]
	0x034C6E40 STR D0, [X31 + 0x20]
	0x034C6E44 STRB W31, [X31 + 0x2C]
	0x034C6E48 BL 0x1C1729C
	0x034C6E4C MOV X8, X0
	0x034C6E50 STR X0, [X20 + 0xE18]
	0x034C6E54 MOV X0, X19
	0x034C6E58 BLR X8
	0x034C6E5C LDP X20, X19, [X31 + 0x40]
	0x034C6E60 LDR X30, [X31 + 0x30]
	0x034C6E64 ADD X31, X31, 0x50
	0x034C6E68 RET
	0x034C6E6C SUB X31, X31, 0x50
	0x034C6E70 STR X30, [X31 + 0x30]
	0x034C6E74 STP X20, X19, [X31 + 0x40]
	0x034C6E78 ADRP X20, 0xF18000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3344]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43864064
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 825
	017 Move W11, 42
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3344], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_LivestreamingStatus_GetIsPaused(System.IntPtr obj)

Disassembly:
	0x034C6E7C LDR X8, [X20 + 0xE20]
	0x034C6E80 MOV X19, X0
	0x034C6E84 CBNZ X8, 0x34C6ED0
	0x034C6E88 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6E8C LDR V0, [X12 + 0x5B8]
	0x034C6E90 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6E94 ADRP X10, 0xFFFFFFFFFD636000
	0x034C6E98 ADD X8, X8, 0xDD2
	0x034C6E9C MOVZ W9, 0x11
	0x034C6EA0 ADD X10, X10, 0x838
	0x034C6EA4 MOVZ W11, 0x26
	0x034C6EA8 MOVZ W13, 0x8
	0x034C6EAC ADD X0, X31, 0x0
	0x034C6EB0 STP X8, X9, [X31]
	0x034C6EB4 STP X10, X11, [X31 + 0x10]
	0x034C6EB8 STR W13, [X31 + 0x28]
	0x034C6EBC STR D0, [X31 + 0x20]
	0x034C6EC0 STRB W31, [X31 + 0x2C]
	0x034C6EC4 BL 0x1C1729C
	0x034C6EC8 MOV X8, X0
	0x034C6ECC STR X0, [X20 + 0xE20]
	0x034C6ED0 MOV X0, X19
	0x034C6ED4 BLR X8
	0x034C6ED8 LDP X20, X19, [X31 + 0x40]
	0x034C6EDC LDR X30, [X31 + 0x30]
	0x034C6EE0 ADD X31, X31, 0x50
	0x034C6EE4 RET
	0x034C6EE8 SUB X31, X31, 0x50
	0x034C6EEC STR X30, [X31 + 0x30]
	0x034C6EF0 STP X20, X19, [X31 + 0x40]
	0x034C6EF4 ADRP X20, 0xF18000
	0x034C6EF8 LDR X8, [X20 + 0xE28]
	0x034C6EFC MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3352]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43864064
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 868
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3352], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_LivestreamingStatus_GetLivestreamingEnabled(System.IntPtr obj)

Disassembly:
	0x034C6F00 CBNZ X8, 0x34C6F4C
	0x034C6F04 ADRP X12, 0xFFFFFFFFFD627000
	0x034C6F08 LDR V0, [X12 + 0x5B8]
	0x034C6F0C ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6F10 ADRP X10, 0xFFFFFFFFFD63E000
	0x034C6F14 ADD X8, X8, 0xDD2
	0x034C6F18 MOVZ W9, 0x11
	0x034C6F1C ADD X10, X10, 0x7BD
	0x034C6F20 MOVZ W11, 0x27
	0x034C6F24 MOVZ W13, 0x8
	0x034C6F28 ADD X0, X31, 0x0
	0x034C6F2C STP X8, X9, [X31]
	0x034C6F30 STP X10, X11, [X31 + 0x10]
	0x034C6F34 STR W13, [X31 + 0x28]
	0x034C6F38 STR D0, [X31 + 0x20]
	0x034C6F3C STRB W31, [X31 + 0x2C]
	0x034C6F40 BL 0x1C1729C
	0x034C6F44 MOV X8, X0
	0x034C6F48 STR X0, [X20 + 0xE28]
	0x034C6F4C MOV X0, X19
	0x034C6F50 BLR X8
	0x034C6F54 LDP X20, X19, [X31 + 0x40]
	0x034C6F58 LDR X30, [X31 + 0x30]
	0x034C6F5C ADD X31, X31, 0x50
	0x034C6F60 RET
	0x034C6F64 SUB X31, X31, 0x50
	0x034C6F68 STR X30, [X31 + 0x30]
	0x034C6F6C STP X20, X19, [X31 + 0x40]
	0x034C6F70 ADRP X20, 0xF18000
	0x034C6F74 LDR X8, [X20 + 0xE30]
	0x034C6F78 MOV X19, X0
	0x034C6F7C CBNZ X8, 0x34C6FC8
	0x034C6F80 ADRP X12, 0xFFFFFFFFFD627000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3360]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43814912
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2023
	017 Move W11, 47
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3360], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Int32 ovr_LivestreamingStatus_GetLivestreamingType(System.IntPtr obj)

Disassembly:
	0x034C6F84 LDR V0, [X12 + 0x5B8]
	0x034C6F88 ADRP X8, 0xFFFFFFFFFD64D000
	0x034C6F8C ADRP X10, 0xFFFFFFFFFD634000
	0x034C6F90 ADD X8, X8, 0xDD2
	0x034C6F94 MOVZ W9, 0x11
	0x034C6F98 ADD X10, X10, 0x909
	0x034C6F9C MOVZ W11, 0x21
	0x034C6FA0 MOVZ W13, 0x8
	0x034C6FA4 ADD X0, X31, 0x0
	0x034C6FA8 STP X8, X9, [X31]
	0x034C6FAC STP X10, X11, [X31 + 0x10]
	0x034C6FB0 STR W13, [X31 + 0x28]
	0x034C6FB4 STR D0, [X31 + 0x20]
	0x034C6FB8 STRB W31, [X31 + 0x2C]
	0x034C6FBC BL 0x1C1729C
	0x034C6FC0 MOV X8, X0
	0x034C6FC4 STR X0, [X20 + 0xE30]
	0x034C6FC8 MOV X0, X19
	0x034C6FCC BLR X8
	0x034C6FD0 LDP X20, X19, [X31 + 0x40]
	0x034C6FD4 LDR X30, [X31 + 0x30]
	0x034C6FD8 ADD X31, X31, 0x50
	0x034C6FDC RET
	0x034C6FE0 SUB X31, X31, 0x50
	0x034C6FE4 STR X30, [X31 + 0x30]
	0x034C6FE8 STP X20, X19, [X31 + 0x40]
	0x034C6FEC ADRP X20, 0xF18000
	0x034C6FF0 LDR X8, [X20 + 0xE38]
	0x034C6FF4 MOV X19, X0
	0x034C6FF8 CBNZ X8, 0x34C7044
	0x034C6FFC ADRP X12, 0xFFFFFFFFFD627000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF19000
	006 Move X8, [X20+3368]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43876352
	011 Move V0, [X12+1464]
	012 Move X8, -43720704
	013 Move X10, -43679744
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 4034
	017 Move W11, 44
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3368], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_LivestreamingStatus_GetMicEnabled(System.IntPtr obj)

Disassembly:
	0x034C7000 LDR V0, [X12 + 0x5B8]
	0x034C7004 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7008 ADRP X10, 0xFFFFFFFFFD657000
	0x034C700C ADD X8, X8, 0xDD2
	0x034C7010 MOVZ W9, 0x11
	0x034C7014 ADD X10, X10, 0xD
	0x034C7018 MOVZ W11, 0x28
	0x034C701C MOVZ W13, 0x8
	0x034C7020 ADD X0, X31, 0x0
	0x034C7024 STP X8, X9, [X31]
	0x034C7028 STP X10, X11, [X31 + 0x10]
	0x034C702C STR W13, [X31 + 0x28]
	0x034C7030 STR D0, [X31 + 0x20]
	0x034C7034 STRB W31, [X31 + 0x2C]
	0x034C7038 BL 0x1C1729C
	0x034C703C MOV X8, X0
	0x034C7040 STR X0, [X20 + 0xE38]
	0x034C7044 MOV X0, X19
	0x034C7048 BLR X8
	0x034C704C LDP X20, X19, [X31 + 0x40]
	0x034C7050 LDR X30, [X31 + 0x30]
	0x034C7054 ADD X31, X31, 0x50
	0x034C7058 RET
	0x034C705C SUB X31, X31, 0x50
	0x034C7060 STR X30, [X31 + 0x30]
	0x034C7064 STP X20, X19, [X31 + 0x40]
	0x034C7068 ADRP X20, 0xF17000
	0x034C706C LDR X8, [X20 + 0xE40]
	0x034C7070 MOV X19, X0
	0x034C7074 CBNZ X8, 0x34C70C0
	0x034C7078 ADRP X12, 0xFFFFFFFFFD626000
	0x034C707C LDR V0, [X12 + 0x5B8]
	0x034C7080 ADRP X8, 0xFFFFFFFFFD64C000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3376]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43700224
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3815
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3376], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Int32 ovr_LivestreamingVideoStats_GetCommentCount(System.IntPtr obj)

Disassembly:
	0x034C7084 ADRP X10, 0xFFFFFFFFFD65F000
	0x034C7088 ADD X8, X8, 0xDD2
	0x034C708C MOVZ W9, 0x11
	0x034C7090 ADD X10, X10, 0x3EF
	0x034C7094 MOVZ W11, 0x24
	0x034C7098 MOVZ W13, 0x8
	0x034C709C ADD X0, X31, 0x0
	0x034C70A0 STP X8, X9, [X31]
	0x034C70A4 STP X10, X11, [X31 + 0x10]
	0x034C70A8 STR W13, [X31 + 0x28]
	0x034C70AC STR D0, [X31 + 0x20]
	0x034C70B0 STRB W31, [X31 + 0x2C]
	0x034C70B4 BL 0x1C1729C
	0x034C70B8 MOV X8, X0
	0x034C70BC STR X0, [X20 + 0xE40]
	0x034C70C0 MOV X0, X19
	0x034C70C4 BLR X8
	0x034C70C8 LDP X20, X19, [X31 + 0x40]
	0x034C70CC LDR X30, [X31 + 0x30]
	0x034C70D0 ADD X31, X31, 0x50
	0x034C70D4 RET
	0x034C70D8 SUB X31, X31, 0x50
	0x034C70DC STR X30, [X31 + 0x30]
	0x034C70E0 STP X20, X19, [X31 + 0x40]
	0x034C70E4 ADRP X20, 0xF17000
	0x034C70E8 LDR X8, [X20 + 0xE48]
	0x034C70EC MOV X19, X0
	0x034C70F0 CBNZ X8, 0x34C713C
	0x034C70F4 ADRP X12, 0xFFFFFFFFFD626000
	0x034C70F8 LDR V0, [X12 + 0x5B8]
	0x034C70FC ADRP X8, 0xFFFFFFFFFD64C000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3384]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2094
	017 Move W11, 43
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3384], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int32 ovr_LivestreamingVideoStats_GetReactionCount(System.IntPtr obj)

Disassembly:
	0x034C7100 ADRP X10, 0xFFFFFFFFFD62F000
	0x034C7104 ADD X8, X8, 0xDD2
	0x034C7108 MOVZ W9, 0x11
	0x034C710C ADD X10, X10, 0x793
	0x034C7110 MOVZ W11, 0x24
	0x034C7114 MOVZ W13, 0x8
	0x034C7118 ADD X0, X31, 0x0
	0x034C711C STP X8, X9, [X31]
	0x034C7120 STP X10, X11, [X31 + 0x10]
	0x034C7124 STR W13, [X31 + 0x28]
	0x034C7128 STR D0, [X31 + 0x20]
	0x034C712C STRB W31, [X31 + 0x2C]
	0x034C7130 BL 0x1C1729C
	0x034C7134 MOV X8, X0
	0x034C7138 STR X0, [X20 + 0xE48]
	0x034C713C MOV X0, X19
	0x034C7140 BLR X8
	0x034C7144 LDP X20, X19, [X31 + 0x40]
	0x034C7148 LDR X30, [X31 + 0x30]
	0x034C714C ADD X31, X31, 0x50
	0x034C7150 RET
	0x034C7154 SUB X31, X31, 0x50
	0x034C7158 STR X30, [X31 + 0x30]
	0x034C715C STP X20, X19, [X31 + 0x40]
	0x034C7160 ADRP X20, 0xF17000
	0x034C7164 LDR X8, [X20 + 0xE50]
	0x034C7168 MOV X19, X0
	0x034C716C CBNZ X8, 0x34C71B8
	0x034C7170 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7174 LDR V0, [X12 + 0x5B8]
	0x034C7178 ADRP X8, 0xFFFFFFFFFD64C000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3392]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43745280
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1231
	017 Move W11, 44
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3392], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_LivestreamingVideoStats_GetTotalViews(System.IntPtr obj)

Disassembly:
	0x034C717C ADRP X10, 0xFFFFFFFFFD65B000
	0x034C7180 ADD X8, X8, 0xDD2
	0x034C7184 MOVZ W9, 0x11
	0x034C7188 ADD X10, X10, 0x524
	0x034C718C MOVZ W11, 0x2C
	0x034C7190 MOVZ W13, 0x8
	0x034C7194 ADD X0, X31, 0x0
	0x034C7198 STP X8, X9, [X31]
	0x034C719C STP X10, X11, [X31 + 0x10]
	0x034C71A0 STR W13, [X31 + 0x28]
	0x034C71A4 STR D0, [X31 + 0x20]
	0x034C71A8 STRB W31, [X31 + 0x2C]
	0x034C71AC BL 0x1C1729C
	0x034C71B0 MOV X8, X0
	0x034C71B4 STR X0, [X20 + 0xE50]
	0x034C71B8 MOV X0, X19
	0x034C71BC BLR X8
	0x034C71C0 LDP X20, X19, [X31 + 0x40]
	0x034C71C4 LDR X30, [X31 + 0x30]
	0x034C71C8 ADD X31, X31, 0x50
	0x034C71CC RET
	0x034C71D0 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF18000
	006 Move X21, 0xC6C000
	007 Move W8, [X20+3400]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6C000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3400], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_LivestreamingVideoStats_GetTotalViews_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(System.IntPtr obj)

Disassembly:
	0x034C71D4 STR X30, [X31 + 0x30]
	0x034C71D8 STP X20, X19, [X31 + 0x40]
	0x034C71DC ADRP X20, 0xF17000
	0x034C71E0 LDR X8, [X20 + 0xE58]
	0x034C71E4 MOV X19, X0
	0x034C71E8 CBNZ X8, 0x34C7234
	0x034C71EC ADRP X12, 0xFFFFFFFFFD626000
	0x034C71F0 LDR V0, [X12 + 0x5B8]
	0x034C71F4 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C71F8 ADRP X10, 0xFFFFFFFFFD65B000
	0x034C71FC ADD X8, X8, 0xDD2
	0x034C7200 MOVZ W9, 0x11
	0x034C7204 ADD X10, X10, 0x551
	0x034C7208 MOVZ W11, 0x2A
	0x034C720C MOVZ W13, 0x8
	0x034C7210 ADD X0, X31, 0x0
	0x034C7214 STP X8, X9, [X31]
	0x034C7218 STP X10, X11, [X31 + 0x10]
	0x034C721C STR W13, [X31 + 0x28]
	0x034C7220 STR D0, [X31 + 0x20]
	0x034C7224 STRB W31, [X31 + 0x2C]
	0x034C7228 BL 0x1C1729C
	0x034C722C MOV X8, X0
	0x034C7230 STR X0, [X20 + 0xE58]
	0x034C7234 MOV X0, X19
	0x034C7238 BLR X8
	0x034C723C LDP X20, X19, [X31 + 0x40]
	0x034C7240 LDR X30, [X31 + 0x30]
	0x034C7244 ADD X31, X31, 0x50
	0x034C7248 RET
	0x034C724C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3408]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43802624
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 780
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3408], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAbuseReportRecording(System.IntPtr obj)

Disassembly:
	0x034C7250 STR X30, [X31 + 0x30]
	0x034C7254 STP X20, X19, [X31 + 0x40]
	0x034C7258 ADRP X20, 0xF17000
	0x034C725C LDR X8, [X20 + 0xE60]
	0x034C7260 MOV X19, X0
	0x034C7264 CBNZ X8, 0x34C72B0
	0x034C7268 ADRP X12, 0xFFFFFFFFFD626000
	0x034C726C LDR V0, [X12 + 0x5B8]
	0x034C7270 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7274 ADRP X10, 0xFFFFFFFFFD649000
	0x034C7278 ADD X8, X8, 0xDD2
	0x034C727C MOVZ W9, 0x11
	0x034C7280 ADD X10, X10, 0x561
	0x034C7284 MOVZ W11, 0x25
	0x034C7288 MOVZ W13, 0x8
	0x034C728C ADD X0, X31, 0x0
	0x034C7290 STP X8, X9, [X31]
	0x034C7294 STP X10, X11, [X31 + 0x10]
	0x034C7298 STR W13, [X31 + 0x28]
	0x034C729C STR D0, [X31 + 0x20]
	0x034C72A0 STRB W31, [X31 + 0x2C]
	0x034C72A4 BL 0x1C1729C
	0x034C72A8 MOV X8, X0
	0x034C72AC STR X0, [X20 + 0xE60]
	0x034C72B0 MOV X0, X19
	0x034C72B4 BLR X8
	0x034C72B8 LDP X20, X19, [X31 + 0x40]
	0x034C72BC LDR X30, [X31 + 0x30]
	0x034C72C0 ADD X31, X31, 0x50
	0x034C72C4 RET
	0x034C72C8 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3416]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43745280
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1276
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3416], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAchievementDefinitionArray(System.IntPtr obj)

Disassembly:
	0x034C72CC STR X30, [X31 + 0x30]
	0x034C72D0 STP X20, X19, [X31 + 0x40]
	0x034C72D4 ADRP X20, 0xF17000
	0x034C72D8 LDR X8, [X20 + 0xE68]
	0x034C72DC MOV X19, X0
	0x034C72E0 CBNZ X8, 0x34C732C
	0x034C72E4 ADRP X12, 0xFFFFFFFFFD626000
	0x034C72E8 LDR V0, [X12 + 0x5B8]
	0x034C72EC ADRP X8, 0xFFFFFFFFFD64C000
	0x034C72F0 ADRP X10, 0xFFFFFFFFFD660000
	0x034C72F4 ADD X8, X8, 0xDD2
	0x034C72F8 MOVZ W9, 0x11
	0x034C72FC ADD X10, X10, 0xE24
	0x034C7300 MOVZ W11, 0x26
	0x034C7304 MOVZ W13, 0x8
	0x034C7308 ADD X0, X31, 0x0
	0x034C730C STP X8, X9, [X31]
	0x034C7310 STP X10, X11, [X31 + 0x10]
	0x034C7314 STR W13, [X31 + 0x28]
	0x034C7318 STR D0, [X31 + 0x20]
	0x034C731C STRB W31, [X31 + 0x2C]
	0x034C7320 BL 0x1C1729C
	0x034C7324 MOV X8, X0
	0x034C7328 STR X0, [X20 + 0xE68]
	0x034C732C MOV X0, X19
	0x034C7330 BLR X8
	0x034C7334 LDP X20, X19, [X31 + 0x40]
	0x034C7338 LDR X30, [X31 + 0x30]
	0x034C733C ADD X31, X31, 0x50
	0x034C7340 RET
	0x034C7344 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3424]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43724800
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3830
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3424], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAchievementProgressArray(System.IntPtr obj)

Disassembly:
	0x034C7348 STR X30, [X31 + 0x30]
	0x034C734C STP X20, X19, [X31 + 0x40]
	0x034C7350 ADRP X20, 0xF17000
	0x034C7354 LDR X8, [X20 + 0xE70]
	0x034C7358 MOV X19, X0
	0x034C735C CBNZ X8, 0x34C73A8
	0x034C7360 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7364 LDR V0, [X12 + 0x5B8]
	0x034C7368 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C736C ADRP X10, 0xFFFFFFFFFD650000
	0x034C7370 ADD X8, X8, 0xDD2
	0x034C7374 MOVZ W9, 0x11
	0x034C7378 ADD X10, X10, 0xE5E
	0x034C737C MOVZ W11, 0x1F
	0x034C7380 MOVZ W13, 0x8
	0x034C7384 ADD X0, X31, 0x0
	0x034C7388 STP X8, X9, [X31]
	0x034C738C STP X10, X11, [X31 + 0x10]
	0x034C7390 STR W13, [X31 + 0x28]
	0x034C7394 STR D0, [X31 + 0x20]
	0x034C7398 STRB W31, [X31 + 0x2C]
	0x034C739C BL 0x1C1729C
	0x034C73A0 MOV X8, X0
	0x034C73A4 STR X0, [X20 + 0xE70]
	0x034C73A8 MOV X0, X19
	0x034C73AC BLR X8
	0x034C73B0 LDP X20, X19, [X31 + 0x40]
	0x034C73B4 LDR X30, [X31 + 0x30]
	0x034C73B8 ADD X31, X31, 0x50
	0x034C73BC RET
	0x034C73C0 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3432]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43663360
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1276
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3432], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAchievementUpdate(System.IntPtr obj)

Disassembly:
	0x034C73C4 STR X30, [X31 + 0x30]
	0x034C73C8 STP X20, X19, [X31 + 0x40]
	0x034C73CC ADRP X20, 0xF17000
	0x034C73D0 LDR X8, [X20 + 0xE78]
	0x034C73D4 MOV X19, X0
	0x034C73D8 CBNZ X8, 0x34C7424
	0x034C73DC ADRP X12, 0xFFFFFFFFFD626000
	0x034C73E0 LDR V0, [X12 + 0x5B8]
	0x034C73E4 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C73E8 ADRP X10, 0xFFFFFFFFFD639000
	0x034C73EC ADD X8, X8, 0xDD2
	0x034C73F0 MOVZ W9, 0x11
	0x034C73F4 ADD X10, X10, 0x336
	0x034C73F8 MOVZ W11, 0x24
	0x034C73FC MOVZ W13, 0x8
	0x034C7400 ADD X0, X31, 0x0
	0x034C7404 STP X8, X9, [X31]
	0x034C7408 STP X10, X11, [X31 + 0x10]
	0x034C740C STR W13, [X31 + 0x28]
	0x034C7410 STR D0, [X31 + 0x20]
	0x034C7414 STRB W31, [X31 + 0x2C]
	0x034C7418 BL 0x1C1729C
	0x034C741C MOV X8, X0
	0x034C7420 STR X0, [X20 + 0xE78]
	0x034C7424 MOV X0, X19
	0x034C7428 BLR X8
	0x034C742C LDP X20, X19, [X31 + 0x40]
	0x034C7430 LDR X30, [X31 + 0x30]
	0x034C7434 ADD X31, X31, 0x50
	0x034C7438 RET
	0x034C743C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3440]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43626496
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3265
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3440], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAppDownloadProgressResult(System.IntPtr obj)

Disassembly:
	0x034C7440 STR X30, [X31 + 0x30]
	0x034C7444 STP X20, X19, [X31 + 0x40]
	0x034C7448 ADRP X20, 0xF17000
	0x034C744C LDR X8, [X20 + 0xE80]
	0x034C7450 MOV X19, X0
	0x034C7454 CBNZ X8, 0x34C74A0
	0x034C7458 ADRP X12, 0xFFFFFFFFFD626000
	0x034C745C LDR V0, [X12 + 0x5B8]
	0x034C7460 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7464 ADRP X10, 0xFFFFFFFFFD627000
	0x034C7468 ADD X8, X8, 0xDD2
	0x034C746C MOVZ W9, 0x11
	0x034C7470 ADD X10, X10, 0x8E6
	0x034C7474 MOVZ W11, 0x26
	0x034C7478 MOVZ W13, 0x8
	0x034C747C ADD X0, X31, 0x0
	0x034C7480 STP X8, X9, [X31]
	0x034C7484 STP X10, X11, [X31 + 0x10]
	0x034C7488 STR W13, [X31 + 0x28]
	0x034C748C STR D0, [X31 + 0x20]
	0x034C7490 STRB W31, [X31 + 0x2C]
	0x034C7494 BL 0x1C1729C
	0x034C7498 MOV X8, X0
	0x034C749C STR X0, [X20 + 0xE80]
	0x034C74A0 MOV X0, X19
	0x034C74A4 BLR X8
	0x034C74A8 LDP X20, X19, [X31 + 0x40]
	0x034C74AC LDR X30, [X31 + 0x30]
	0x034C74B0 ADD X31, X31, 0x50
	0x034C74B4 RET
	0x034C74B8 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3448]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43716608
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3298
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3448], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAppDownloadResult(System.IntPtr obj)

Disassembly:
	0x034C74BC STR X30, [X31 + 0x30]
	0x034C74C0 STP X20, X19, [X31 + 0x40]
	0x034C74C4 ADRP X20, 0xF17000
	0x034C74C8 LDR X8, [X20 + 0xE88]
	0x034C74CC MOV X19, X0
	0x034C74D0 CBNZ X8, 0x34C751C
	0x034C74D4 ADRP X12, 0xFFFFFFFFFD626000
	0x034C74D8 LDR V0, [X12 + 0x5B8]
	0x034C74DC ADRP X8, 0xFFFFFFFFFD64C000
	0x034C74E0 ADRP X10, 0xFFFFFFFFFD62B000
	0x034C74E4 ADD X8, X8, 0xDD2
	0x034C74E8 MOVZ W9, 0x11
	0x034C74EC ADD X10, X10, 0x805
	0x034C74F0 MOVZ W11, 0x21
	0x034C74F4 MOVZ W13, 0x8
	0x034C74F8 ADD X0, X31, 0x0
	0x034C74FC STP X8, X9, [X31]
	0x034C7500 STP X10, X11, [X31 + 0x10]
	0x034C7504 STR W13, [X31 + 0x28]
	0x034C7508 STR D0, [X31 + 0x20]
	0x034C750C STRB W31, [X31 + 0x2C]
	0x034C7510 BL 0x1C1729C
	0x034C7514 MOV X8, X0
	0x034C7518 STR X0, [X20 + 0xE88]
	0x034C751C MOV X0, X19
	0x034C7520 BLR X8
	0x034C7524 LDP X20, X19, [X31 + 0x40]
	0x034C7528 LDR X30, [X31 + 0x30]
	0x034C752C ADD X31, X31, 0x50
	0x034C7530 RET
	0x034C7534 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3456]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43769856
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1464
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3456], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetApplicationInviteArray(System.IntPtr obj)

Disassembly:
	0x034C7538 STR X30, [X31 + 0x30]
	0x034C753C STP X20, X19, [X31 + 0x40]
	0x034C7540 ADRP X20, 0xF17000
	0x034C7544 LDR X8, [X20 + 0xE90]
	0x034C7548 MOV X19, X0
	0x034C754C CBNZ X8, 0x34C7598
	0x034C7550 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7554 LDR V0, [X12 + 0x5B8]
	0x034C7558 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C755C ADRP X10, 0xFFFFFFFFFD64E000
	0x034C7560 ADD X8, X8, 0xDD2
	0x034C7564 MOVZ W9, 0x11
	0x034C7568 ADD X10, X10, 0xD2D
	0x034C756C MOVZ W11, 0x2D
	0x034C7570 MOVZ W13, 0x8
	0x034C7574 ADD X0, X31, 0x0
	0x034C7578 STP X8, X9, [X31]
	0x034C757C STP X10, X11, [X31 + 0x10]
	0x034C7580 STR W13, [X31 + 0x28]
	0x034C7584 STR D0, [X31 + 0x20]
	0x034C7588 STRB W31, [X31 + 0x2C]
	0x034C758C BL 0x1C1729C
	0x034C7590 MOV X8, X0
	0x034C7594 STR X0, [X20 + 0xE90]
	0x034C7598 MOV X0, X19
	0x034C759C BLR X8
	0x034C75A0 LDP X20, X19, [X31 + 0x40]
	0x034C75A4 LDR X30, [X31 + 0x30]
	0x034C75A8 ADD X31, X31, 0x50
	0x034C75AC RET
	0x034C75B0 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3464]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 283
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3464], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetApplicationVersion(System.IntPtr obj)

Disassembly:
	0x034C75B4 STR X30, [X31 + 0x30]
	0x034C75B8 STP X20, X19, [X31 + 0x40]
	0x034C75BC ADRP X20, 0xF17000
	0x034C75C0 LDR X8, [X20 + 0xE98]
	0x034C75C4 MOV X19, X0
	0x034C75C8 CBNZ X8, 0x34C7614
	0x034C75CC ADRP X12, 0xFFFFFFFFFD626000
	0x034C75D0 LDR V0, [X12 + 0x5B8]
	0x034C75D4 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C75D8 ADRP X10, 0xFFFFFFFFFD659000
	0x034C75DC ADD X8, X8, 0xDD2
	0x034C75E0 MOVZ W9, 0x11
	0x034C75E4 ADD X10, X10, 0x228
	0x034C75E8 MOVZ W11, 0x27
	0x034C75EC MOVZ W13, 0x8
	0x034C75F0 ADD X0, X31, 0x0
	0x034C75F4 STP X8, X9, [X31]
	0x034C75F8 STP X10, X11, [X31 + 0x10]
	0x034C75FC STR W13, [X31 + 0x28]
	0x034C7600 STR D0, [X31 + 0x20]
	0x034C7604 STRB W31, [X31 + 0x2C]
	0x034C7608 BL 0x1C1729C
	0x034C760C MOV X8, X0
	0x034C7610 STR X0, [X20 + 0xE98]
	0x034C7614 MOV X0, X19
	0x034C7618 BLR X8
	0x034C761C LDP X20, X19, [X31 + 0x40]
	0x034C7620 LDR X30, [X31 + 0x30]
	0x034C7624 ADD X31, X31, 0x50
	0x034C7628 RET
	0x034C762C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3472]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43626496
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3298
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3472], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAssetDetails(System.IntPtr obj)

Disassembly:
	0x034C7630 STR X30, [X31 + 0x30]
	0x034C7634 STP X20, X19, [X31 + 0x40]
	0x034C7638 ADRP X20, 0xF17000
	0x034C763C LDR X8, [X20 + 0xEA0]
	0x034C7640 MOV X19, X0
	0x034C7644 CBNZ X8, 0x34C7690
	0x034C7648 ADRP X12, 0xFFFFFFFFFD626000
	0x034C764C LDR V0, [X12 + 0x5B8]
	0x034C7650 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7654 ADRP X10, 0xFFFFFFFFFD62F000
	0x034C7658 ADD X8, X8, 0xDD2
	0x034C765C MOVZ W9, 0x11
	0x034C7660 ADD X10, X10, 0x7B8
	0x034C7664 MOVZ W11, 0x22
	0x034C7668 MOVZ W13, 0x8
	0x034C766C ADD X0, X31, 0x0
	0x034C7670 STP X8, X9, [X31]
	0x034C7674 STP X10, X11, [X31 + 0x10]
	0x034C7678 STR W13, [X31 + 0x28]
	0x034C767C STR D0, [X31 + 0x20]
	0x034C7680 STRB W31, [X31 + 0x2C]
	0x034C7684 BL 0x1C1729C
	0x034C7688 MOV X8, X0
	0x034C768C STR X0, [X20 + 0xEA0]
	0x034C7690 MOV X0, X19
	0x034C7694 BLR X8
	0x034C7698 LDP X20, X19, [X31 + 0x40]
	0x034C769C LDR X30, [X31 + 0x30]
	0x034C76A0 ADD X31, X31, 0x50
	0x034C76A4 RET
	0x034C76A8 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3480]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 321
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3480], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAssetDetailsArray(System.IntPtr obj)

Disassembly:
	0x034C76AC STR X30, [X31 + 0x30]
	0x034C76B0 STP X20, X19, [X31 + 0x40]
	0x034C76B4 ADRP X20, 0xF17000
	0x034C76B8 LDR X8, [X20 + 0xEA8]
	0x034C76BC MOV X19, X0
	0x034C76C0 CBNZ X8, 0x34C770C
	0x034C76C4 ADRP X12, 0xFFFFFFFFFD626000
	0x034C76C8 LDR V0, [X12 + 0x5B8]
	0x034C76CC ADRP X8, 0xFFFFFFFFFD64C000
	0x034C76D0 ADRP X10, 0xFFFFFFFFFD660000
	0x034C76D4 ADD X8, X8, 0xDD2
	0x034C76D8 MOVZ W9, 0x11
	0x034C76DC ADD X10, X10, 0xE4B
	0x034C76E0 MOVZ W11, 0x26
	0x034C76E4 MOVZ W13, 0x8
	0x034C76E8 ADD X0, X31, 0x0
	0x034C76EC STP X8, X9, [X31]
	0x034C76F0 STP X10, X11, [X31 + 0x10]
	0x034C76F4 STR W13, [X31 + 0x28]
	0x034C76F8 STR D0, [X31 + 0x20]
	0x034C76FC STRB W31, [X31 + 0x2C]
	0x034C7700 BL 0x1C1729C
	0x034C7704 MOV X8, X0
	0x034C7708 STR X0, [X20 + 0xEA8]
	0x034C770C MOV X0, X19
	0x034C7710 BLR X8
	0x034C7714 LDP X20, X19, [X31 + 0x40]
	0x034C7718 LDR X30, [X31 + 0x30]
	0x034C771C ADD X31, X31, 0x50
	0x034C7720 RET
	0x034C7724 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3488]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2071
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3488], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAssetFileDeleteResult(System.IntPtr obj)

Disassembly:
	0x034C7728 STR X30, [X31 + 0x30]
	0x034C772C STP X20, X19, [X31 + 0x40]
	0x034C7730 ADRP X20, 0xF17000
	0x034C7734 LDR X8, [X20 + 0xEB0]
	0x034C7738 MOV X19, X0
	0x034C773C CBNZ X8, 0x34C7788
	0x034C7740 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7744 LDR V0, [X12 + 0x5B8]
	0x034C7748 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C774C ADRP X10, 0xFFFFFFFFFD637000
	0x034C7750 ADD X8, X8, 0xDD2
	0x034C7754 MOVZ W9, 0x11
	0x034C7758 ADD X10, X10, 0x4FA
	0x034C775C MOVZ W11, 0x2A
	0x034C7760 MOVZ W13, 0x8
	0x034C7764 ADD X0, X31, 0x0
	0x034C7768 STP X8, X9, [X31]
	0x034C776C STP X10, X11, [X31 + 0x10]
	0x034C7770 STR W13, [X31 + 0x28]
	0x034C7774 STR D0, [X31 + 0x20]
	0x034C7778 STRB W31, [X31 + 0x2C]
	0x034C777C BL 0x1C1729C
	0x034C7780 MOV X8, X0
	0x034C7784 STR X0, [X20 + 0xEB0]
	0x034C7788 MOV X0, X19
	0x034C778C BLR X8
	0x034C7790 LDP X20, X19, [X31 + 0x40]
	0x034C7794 LDR X30, [X31 + 0x30]
	0x034C7798 ADD X31, X31, 0x50
	0x034C779C RET
	0x034C77A0 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3496]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43851776
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1806
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3496], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAssetFileDownloadCancelResult(System.IntPtr obj)

Disassembly:
	0x034C77A4 STR X30, [X31 + 0x30]
	0x034C77A8 STP X20, X19, [X31 + 0x40]
	0x034C77AC ADRP X20, 0xF17000
	0x034C77B0 LDR X8, [X20 + 0xEB8]
	0x034C77B4 MOV X19, X0
	0x034C77B8 CBNZ X8, 0x34C7804
	0x034C77BC ADRP X12, 0xFFFFFFFFFD626000
	0x034C77C0 LDR V0, [X12 + 0x5B8]
	0x034C77C4 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C77C8 ADRP X10, 0xFFFFFFFFFD633000
	0x034C77CC ADD X8, X8, 0xDD2
	0x034C77D0 MOVZ W9, 0x11
	0x034C77D4 ADD X10, X10, 0x92B
	0x034C77D8 MOVZ W11, 0x1C
	0x034C77DC MOVZ W13, 0x8
	0x034C77E0 ADD X0, X31, 0x0
	0x034C77E4 STP X8, X9, [X31]
	0x034C77E8 STP X10, X11, [X31 + 0x10]
	0x034C77EC STR W13, [X31 + 0x28]
	0x034C77F0 STR D0, [X31 + 0x20]
	0x034C77F4 STRB W31, [X31 + 0x2C]
	0x034C77F8 BL 0x1C1729C
	0x034C77FC MOV X8, X0
	0x034C7800 STR X0, [X20 + 0xEB8]
	0x034C7804 MOV X0, X19
	0x034C7808 BLR X8
	0x034C780C LDP X20, X19, [X31 + 0x40]
	0x034C7810 LDR X30, [X31 + 0x30]
	0x034C7814 ADD X31, X31, 0x50
	0x034C7818 RET
	0x034C781C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3504]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 899
	017 Move W11, 44
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3504], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAssetFileDownloadResult(System.IntPtr obj)

Disassembly:
	0x034C7820 STR X30, [X31 + 0x30]
	0x034C7824 STP X20, X19, [X31 + 0x40]
	0x034C7828 ADRP X20, 0xF17000
	0x034C782C LDR X8, [X20 + 0xEC0]
	0x034C7830 MOV X19, X0
	0x034C7834 CBNZ X8, 0x34C7880
	0x034C7838 ADRP X12, 0xFFFFFFFFFD626000
	0x034C783C LDR V0, [X12 + 0x5B8]
	0x034C7840 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7844 ADRP X10, 0xFFFFFFFFFD664000
	0x034C7848 ADD X8, X8, 0xDD2
	0x034C784C MOVZ W9, 0x11
	0x034C7850 ADD X10, X10, 0xD04
	0x034C7854 MOVZ W11, 0x20
	0x034C7858 MOVZ W13, 0x8
	0x034C785C ADD X0, X31, 0x0
	0x034C7860 STP X8, X9, [X31]
	0x034C7864 STP X10, X11, [X31 + 0x10]
	0x034C7868 STR W13, [X31 + 0x28]
	0x034C786C STR D0, [X31 + 0x20]
	0x034C7870 STRB W31, [X31 + 0x2C]
	0x034C7874 BL 0x1C1729C
	0x034C7878 MOV X8, X0
	0x034C787C STR X0, [X20 + 0xEC0]
	0x034C7880 MOV X0, X19
	0x034C7884 BLR X8
	0x034C7888 LDP X20, X19, [X31 + 0x40]
	0x034C788C LDR X30, [X31 + 0x30]
	0x034C7890 ADD X31, X31, 0x50
	0x034C7894 RET
	0x034C7898 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3512]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43737088
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1338
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3512], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAssetFileDownloadUpdate(System.IntPtr obj)

Disassembly:
	0x034C789C STR X30, [X31 + 0x30]
	0x034C78A0 STP X20, X19, [X31 + 0x40]
	0x034C78A4 ADRP X20, 0xF17000
	0x034C78A8 LDR X8, [X20 + 0xEC8]
	0x034C78AC MOV X19, X0
	0x034C78B0 CBNZ X8, 0x34C78FC
	0x034C78B4 ADRP X12, 0xFFFFFFFFFD626000
	0x034C78B8 LDR V0, [X12 + 0x5B8]
	0x034C78BC ADRP X8, 0xFFFFFFFFFD64C000
	0x034C78C0 ADRP X10, 0xFFFFFFFFFD63F000
	0x034C78C4 ADD X8, X8, 0xDD2
	0x034C78C8 MOVZ W9, 0x11
	0x034C78CC ADD X10, X10, 0x626
	0x034C78D0 MOVZ W11, 0x22
	0x034C78D4 MOVZ W13, 0x8
	0x034C78D8 ADD X0, X31, 0x0
	0x034C78DC STP X8, X9, [X31]
	0x034C78E0 STP X10, X11, [X31 + 0x10]
	0x034C78E4 STR W13, [X31 + 0x28]
	0x034C78E8 STR D0, [X31 + 0x20]
	0x034C78EC STRB W31, [X31 + 0x2C]
	0x034C78F0 BL 0x1C1729C
	0x034C78F4 MOV X8, X0
	0x034C78F8 STR X0, [X20 + 0xEC8]
	0x034C78FC MOV X0, X19
	0x034C7900 BLR X8
	0x034C7904 LDP X20, X19, [X31 + 0x40]
	0x034C7908 LDR X30, [X31 + 0x30]
	0x034C790C ADD X31, X31, 0x50
	0x034C7910 RET
	0x034C7914 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3520]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 349
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3520], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetAvatarEditorResult(System.IntPtr obj)

Disassembly:
	0x034C7918 STR X30, [X31 + 0x30]
	0x034C791C STP X20, X19, [X31 + 0x40]
	0x034C7920 ADRP X20, 0xF17000
	0x034C7924 LDR X8, [X20 + 0xED0]
	0x034C7928 MOV X19, X0
	0x034C792C CBNZ X8, 0x34C7978
	0x034C7930 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7934 LDR V0, [X12 + 0x5B8]
	0x034C7938 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C793C ADRP X10, 0xFFFFFFFFFD64E000
	0x034C7940 ADD X8, X8, 0xDD2
	0x034C7944 MOVZ W9, 0x11
	0x034C7948 ADD X10, X10, 0xD5B
	0x034C794C MOVZ W11, 0x31
	0x034C7950 MOVZ W13, 0x8
	0x034C7954 ADD X0, X31, 0x0
	0x034C7958 STP X8, X9, [X31]
	0x034C795C STP X10, X11, [X31 + 0x10]
	0x034C7960 STR W13, [X31 + 0x28]
	0x034C7964 STR D0, [X31 + 0x20]
	0x034C7968 STRB W31, [X31 + 0x2C]
	0x034C796C BL 0x1C1729C
	0x034C7970 MOV X8, X0
	0x034C7974 STR X0, [X20 + 0xED0]
	0x034C7978 MOV X0, X19
	0x034C797C BLR X8
	0x034C7980 LDP X20, X19, [X31 + 0x40]
	0x034C7984 LDR X30, [X31 + 0x30]
	0x034C7988 ADD X31, X31, 0x50
	0x034C798C RET
	0x034C7990 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3528]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43724800
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3872
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3528], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetBlockedUserArray(System.IntPtr obj)

Disassembly:
	0x034C7994 STR X30, [X31 + 0x30]
	0x034C7998 STP X20, X19, [X31 + 0x40]
	0x034C799C ADRP X20, 0xF17000
	0x034C79A0 LDR X8, [X20 + 0xED8]
	0x034C79A4 MOV X19, X0
	0x034C79A8 CBNZ X8, 0x34C79F4
	0x034C79AC ADRP X12, 0xFFFFFFFFFD626000
	0x034C79B0 LDR V0, [X12 + 0x5B8]
	0x034C79B4 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C79B8 ADRP X10, 0xFFFFFFFFFD629000
	0x034C79BC ADD X8, X8, 0xDD2
	0x034C79C0 MOVZ W9, 0x11
	0x034C79C4 ADD X10, X10, 0x3A1
	0x034C79C8 MOVZ W11, 0x2E
	0x034C79CC MOVZ W13, 0x8
	0x034C79D0 ADD X0, X31, 0x0
	0x034C79D4 STP X8, X9, [X31]
	0x034C79D8 STP X10, X11, [X31 + 0x10]
	0x034C79DC STR W13, [X31 + 0x28]
	0x034C79E0 STR D0, [X31 + 0x20]
	0x034C79E4 STRB W31, [X31 + 0x2C]
	0x034C79E8 BL 0x1C1729C
	0x034C79EC MOV X8, X0
	0x034C79F0 STR X0, [X20 + 0xED8]
	0x034C79F4 MOV X0, X19
	0x034C79F8 BLR X8
	0x034C79FC LDP X20, X19, [X31 + 0x40]
	0x034C7A00 LDR X30, [X31 + 0x30]
	0x034C7A04 ADD X31, X31, 0x50
	0x034C7A08 RET
	0x034C7A0C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3536]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43708416
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3621
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3536], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetChallenge(System.IntPtr obj)

Disassembly:
	0x034C7A10 STR X30, [X31 + 0x30]
	0x034C7A14 STP X20, X19, [X31 + 0x40]
	0x034C7A18 ADRP X20, 0xF17000
	0x034C7A1C LDR X8, [X20 + 0xEE0]
	0x034C7A20 MOV X19, X0
	0x034C7A24 CBNZ X8, 0x34C7A70
	0x034C7A28 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7A2C LDR V0, [X12 + 0x5B8]
	0x034C7A30 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7A34 ADRP X10, 0xFFFFFFFFFD63D000
	0x034C7A38 ADD X8, X8, 0xDD2
	0x034C7A3C MOVZ W9, 0x11
	0x034C7A40 ADD X10, X10, 0x7E5
	0x034C7A44 MOVZ W11, 0x2F
	0x034C7A48 MOVZ W13, 0x8
	0x034C7A4C ADD X0, X31, 0x0
	0x034C7A50 STP X8, X9, [X31]
	0x034C7A54 STP X10, X11, [X31 + 0x10]
	0x034C7A58 STR W13, [X31 + 0x28]
	0x034C7A5C STR D0, [X31 + 0x20]
	0x034C7A60 STRB W31, [X31 + 0x2C]
	0x034C7A64 BL 0x1C1729C
	0x034C7A68 MOV X8, X0
	0x034C7A6C STR X0, [X20 + 0xEE0]
	0x034C7A70 MOV X0, X19
	0x034C7A74 BLR X8
	0x034C7A78 LDP X20, X19, [X31 + 0x40]
	0x034C7A7C LDR X30, [X31 + 0x30]
	0x034C7A80 ADD X31, X31, 0x50
	0x034C7A84 RET
	0x034C7A88 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3544]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43708416
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3653
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3544], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetChallengeArray(System.IntPtr obj)

Disassembly:
	0x034C7A8C STR X30, [X31 + 0x30]
	0x034C7A90 STP X20, X19, [X31 + 0x40]
	0x034C7A94 ADRP X20, 0xF17000
	0x034C7A98 LDR X8, [X20 + 0xEE8]
	0x034C7A9C MOV X19, X0
	0x034C7AA0 CBNZ X8, 0x34C7AEC
	0x034C7AA4 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7AA8 LDR V0, [X12 + 0x5B8]
	0x034C7AAC ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7AB0 ADRP X10, 0xFFFFFFFFFD639000
	0x034C7AB4 ADD X8, X8, 0xDD2
	0x034C7AB8 MOVZ W9, 0x11
	0x034C7ABC ADD X10, X10, 0x35B
	0x034C7AC0 MOVZ W11, 0x1A
	0x034C7AC4 MOVZ W13, 0x8
	0x034C7AC8 ADD X0, X31, 0x0
	0x034C7ACC STP X8, X9, [X31]
	0x034C7AD0 STP X10, X11, [X31 + 0x10]
	0x034C7AD4 STR W13, [X31 + 0x28]
	0x034C7AD8 STR D0, [X31 + 0x20]
	0x034C7ADC STRB W31, [X31 + 0x2C]
	0x034C7AE0 BL 0x1C1729C
	0x034C7AE4 MOV X8, X0
	0x034C7AE8 STR X0, [X20 + 0xEE8]
	0x034C7AEC MOV X0, X19
	0x034C7AF0 BLR X8
	0x034C7AF4 LDP X20, X19, [X31 + 0x40]
	0x034C7AF8 LDR X30, [X31 + 0x30]
	0x034C7AFC ADD X31, X31, 0x50
	0x034C7B00 RET
	0x034C7B04 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3552]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43683840
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 4079
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3552], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetChallengeEntryArray(System.IntPtr obj)

Disassembly:
	0x034C7B08 STR X30, [X31 + 0x30]
	0x034C7B0C STP X20, X19, [X31 + 0x40]
	0x034C7B10 ADRP X20, 0xF17000
	0x034C7B14 LDR X8, [X20 + 0xEF0]
	0x034C7B18 MOV X19, X0
	0x034C7B1C CBNZ X8, 0x34C7B68
	0x034C7B20 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7B24 LDR V0, [X12 + 0x5B8]
	0x034C7B28 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7B2C ADRP X10, 0xFFFFFFFFFD63D000
	0x034C7B30 ADD X8, X8, 0xDD2
	0x034C7B34 MOVZ W9, 0x11
	0x034C7B38 ADD X10, X10, 0x815
	0x034C7B3C MOVZ W11, 0x14
	0x034C7B40 MOVZ W13, 0x8
	0x034C7B44 ADD X0, X31, 0x0
	0x034C7B48 STP X8, X9, [X31]
	0x034C7B4C STP X10, X11, [X31 + 0x10]
	0x034C7B50 STR W13, [X31 + 0x28]
	0x034C7B54 STR D0, [X31 + 0x20]
	0x034C7B58 STRB W31, [X31 + 0x2C]
	0x034C7B5C BL 0x1C1729C
	0x034C7B60 MOV X8, X0
	0x034C7B64 STR X0, [X20 + 0xEF0]
	0x034C7B68 MOV X0, X19
	0x034C7B6C BLR X8
	0x034C7B70 LDP X20, X19, [X31 + 0x40]
	0x034C7B74 LDR X30, [X31 + 0x30]
	0x034C7B78 ADD X31, X31, 0x50
	0x034C7B7C RET
	0x034C7B80 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3560]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43851776
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1843
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3560], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetCowatchViewerArray(System.IntPtr obj)

Disassembly:
	0x034C7B84 STR X30, [X31 + 0x30]
	0x034C7B88 STP X20, X19, [X31 + 0x40]
	0x034C7B8C ADRP X20, 0xF17000
	0x034C7B90 LDR X8, [X20 + 0xEF8]
	0x034C7B94 MOV X19, X0
	0x034C7B98 CBNZ X8, 0x34C7BE4
	0x034C7B9C ADRP X12, 0xFFFFFFFFFD626000
	0x034C7BA0 LDR V0, [X12 + 0x5B8]
	0x034C7BA4 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7BA8 ADRP X10, 0xFFFFFFFFFD65D000
	0x034C7BAC ADD X8, X8, 0xDD2
	0x034C7BB0 MOVZ W9, 0x11
	0x034C7BB4 ADD X10, X10, 0x3A1
	0x034C7BB8 MOVZ W11, 0x16
	0x034C7BBC MOVZ W13, 0x8
	0x034C7BC0 ADD X0, X31, 0x0
	0x034C7BC4 STP X8, X9, [X31]
	0x034C7BC8 STP X10, X11, [X31 + 0x10]
	0x034C7BCC STR W13, [X31 + 0x28]
	0x034C7BD0 STR D0, [X31 + 0x20]
	0x034C7BD4 STRB W31, [X31 + 0x2C]
	0x034C7BD8 BL 0x1C1729C
	0x034C7BDC MOV X8, X0
	0x034C7BE0 STR X0, [X20 + 0xEF8]
	0x034C7BE4 MOV X0, X19
	0x034C7BE8 BLR X8
	0x034C7BEC LDP X20, X19, [X31 + 0x40]
	0x034C7BF0 LDR X30, [X31 + 0x30]
	0x034C7BF4 ADD X31, X31, 0x50
	0x034C7BF8 RET
	0x034C7BFC SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3568]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43716608
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3339
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3568], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetCowatchViewerUpdate(System.IntPtr obj)

Disassembly:
	0x034C7C00 STR X30, [X31 + 0x30]
	0x034C7C04 STP X20, X19, [X31 + 0x40]
	0x034C7C08 ADRP X20, 0xF17000
	0x034C7C0C LDR X8, [X20 + 0xF00]
	0x034C7C10 MOV X19, X0
	0x034C7C14 CBNZ X8, 0x34C7C60
	0x034C7C18 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7C1C LDR V0, [X12 + 0x5B8]
	0x034C7C20 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7C24 ADRP X10, 0xFFFFFFFFFD62D000
	0x034C7C28 ADD X8, X8, 0xDD2
	0x034C7C2C MOVZ W9, 0x11
	0x034C7C30 ADD X10, X10, 0x756
	0x034C7C34 MOVZ W11, 0x26
	0x034C7C38 MOVZ W13, 0x8
	0x034C7C3C ADD X0, X31, 0x0
	0x034C7C40 STP X8, X9, [X31]
	0x034C7C44 STP X10, X11, [X31 + 0x10]
	0x034C7C48 STR W13, [X31 + 0x28]
	0x034C7C4C STR D0, [X31 + 0x20]
	0x034C7C50 STRB W31, [X31 + 0x2C]
	0x034C7C54 BL 0x1C1729C
	0x034C7C58 MOV X8, X0
	0x034C7C5C STR X0, [X20 + 0xF00]
	0x034C7C60 MOV X0, X19
	0x034C7C64 BLR X8
	0x034C7C68 LDP X20, X19, [X31 + 0x40]
	0x034C7C6C LDR X30, [X31 + 0x30]
	0x034C7C70 ADD X31, X31, 0x50
	0x034C7C74 RET
	0x034C7C78 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3576]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43778048
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1539
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3576], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetCowatchingState(System.IntPtr obj)

Disassembly:
	0x034C7C7C STR X30, [X31 + 0x30]
	0x034C7C80 STP X20, X19, [X31 + 0x40]
	0x034C7C84 ADRP X20, 0xF17000
	0x034C7C88 LDR X8, [X20 + 0xF08]
	0x034C7C8C MOV X19, X0
	0x034C7C90 CBNZ X8, 0x34C7CDC
	0x034C7C94 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7C98 LDR V0, [X12 + 0x5B8]
	0x034C7C9C ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7CA0 ADRP X10, 0xFFFFFFFFFD645000
	0x034C7CA4 ADD X8, X8, 0xDD2
	0x034C7CA8 MOVZ W9, 0x11
	0x034C7CAC ADD X10, X10, 0x428
	0x034C7CB0 MOVZ W11, 0x17
	0x034C7CB4 MOVZ W13, 0x8
	0x034C7CB8 ADD X0, X31, 0x0
	0x034C7CBC STP X8, X9, [X31]
	0x034C7CC0 STP X10, X11, [X31 + 0x10]
	0x034C7CC4 STR W13, [X31 + 0x28]
	0x034C7CC8 STR D0, [X31 + 0x20]
	0x034C7CCC STRB W31, [X31 + 0x2C]
	0x034C7CD0 BL 0x1C1729C
	0x034C7CD4 MOV X8, X0
	0x034C7CD8 STR X0, [X20 + 0xF08]
	0x034C7CDC MOV X0, X19
	0x034C7CE0 BLR X8
	0x034C7CE4 LDP X20, X19, [X31 + 0x40]
	0x034C7CE8 LDR X30, [X31 + 0x30]
	0x034C7CEC ADD X31, X31, 0x50
	0x034C7CF0 RET
	0x034C7CF4 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3584]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43655168
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 898
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3584], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetDataStore(System.IntPtr obj)

Disassembly:
	0x034C7CF8 STR X30, [X31 + 0x30]
	0x034C7CFC STP X20, X19, [X31 + 0x40]
	0x034C7D00 ADRP X20, 0xF17000
	0x034C7D04 LDR X8, [X20 + 0xF10]
	0x034C7D08 MOV X19, X0
	0x034C7D0C CBNZ X8, 0x34C7D58
	0x034C7D10 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7D14 LDR V0, [X12 + 0x5B8]
	0x034C7D18 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7D1C ADRP X10, 0xFFFFFFFFFD62B000
	0x034C7D20 ADD X8, X8, 0xDD2
	0x034C7D24 MOVZ W9, 0x11
	0x034C7D28 ADD X10, X10, 0x827
	0x034C7D2C MOVZ W11, 0x21
	0x034C7D30 MOVZ W13, 0x8
	0x034C7D34 ADD X0, X31, 0x0
	0x034C7D38 STP X8, X9, [X31]
	0x034C7D3C STP X10, X11, [X31 + 0x10]
	0x034C7D40 STR W13, [X31 + 0x28]
	0x034C7D44 STR D0, [X31 + 0x20]
	0x034C7D48 STRB W31, [X31 + 0x2C]
	0x034C7D4C BL 0x1C1729C
	0x034C7D50 MOV X8, X0
	0x034C7D54 STR X0, [X20 + 0xF10]
	0x034C7D58 MOV X0, X19
	0x034C7D5C BLR X8
	0x034C7D60 LDP X20, X19, [X31 + 0x40]
	0x034C7D64 LDR X30, [X31 + 0x30]
	0x034C7D68 ADD X31, X31, 0x50
	0x034C7D6C RET
	0x034C7D70 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3592]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43868160
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 904
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3592], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetDestinationArray(System.IntPtr obj)

Disassembly:
	0x034C7D74 STR X30, [X31 + 0x30]
	0x034C7D78 STP X20, X19, [X31 + 0x40]
	0x034C7D7C ADRP X20, 0xF17000
	0x034C7D80 LDR X8, [X20 + 0xF18]
	0x034C7D84 MOV X19, X0
	0x034C7D88 CBNZ X8, 0x34C7DD4
	0x034C7D8C ADRP X12, 0xFFFFFFFFFD626000
	0x034C7D90 LDR V0, [X12 + 0x5B8]
	0x034C7D94 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7D98 ADRP X10, 0xFFFFFFFFFD65F000
	0x034C7D9C ADD X8, X8, 0xDD2
	0x034C7DA0 MOVZ W9, 0x11
	0x034C7DA4 ADD X10, X10, 0x414
	0x034C7DA8 MOVZ W11, 0x1B
	0x034C7DAC MOVZ W13, 0x8
	0x034C7DB0 ADD X0, X31, 0x0
	0x034C7DB4 STP X8, X9, [X31]
	0x034C7DB8 STP X10, X11, [X31 + 0x10]
	0x034C7DBC STR W13, [X31 + 0x28]
	0x034C7DC0 STR D0, [X31 + 0x20]
	0x034C7DC4 STRB W31, [X31 + 0x2C]
	0x034C7DC8 BL 0x1C1729C
	0x034C7DCC MOV X8, X0
	0x034C7DD0 STR X0, [X20 + 0xF18]
	0x034C7DD4 MOV X0, X19
	0x034C7DD8 BLR X8
	0x034C7DDC LDP X20, X19, [X31 + 0x40]
	0x034C7DE0 LDR X30, [X31 + 0x30]
	0x034C7DE4 ADD X31, X31, 0x50
	0x034C7DE8 RET
	0x034C7DEC SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3600]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43827200
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2281
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3600], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetError(System.IntPtr obj)

Disassembly:
	0x034C7DF0 STR X30, [X31 + 0x30]
	0x034C7DF4 STP X20, X19, [X31 + 0x40]
	0x034C7DF8 ADRP X20, 0xF17000
	0x034C7DFC LDR X8, [X20 + 0xF20]
	0x034C7E00 MOV X19, X0
	0x034C7E04 CBNZ X8, 0x34C7E50
	0x034C7E08 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7E0C LDR V0, [X12 + 0x5B8]
	0x034C7E10 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7E14 ADRP X10, 0xFFFFFFFFFD650000
	0x034C7E18 ADD X8, X8, 0xDD2
	0x034C7E1C MOVZ W9, 0x11
	0x034C7E20 ADD X10, X10, 0xE7E
	0x034C7E24 MOVZ W11, 0x17
	0x034C7E28 MOVZ W13, 0x8
	0x034C7E2C ADD X0, X31, 0x0
	0x034C7E30 STP X8, X9, [X31]
	0x034C7E34 STP X10, X11, [X31 + 0x10]
	0x034C7E38 STR W13, [X31 + 0x28]
	0x034C7E3C STR D0, [X31 + 0x20]
	0x034C7E40 STRB W31, [X31 + 0x2C]
	0x034C7E44 BL 0x1C1729C
	0x034C7E48 MOV X8, X0
	0x034C7E4C STR X0, [X20 + 0xF20]
	0x034C7E50 MOV X0, X19
	0x034C7E54 BLR X8
	0x034C7E58 LDP X20, X19, [X31 + 0x40]
	0x034C7E5C LDR X30, [X31 + 0x30]
	0x034C7E60 ADD X31, X31, 0x50
	0x034C7E64 RET
	0x034C7E68 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3608]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43700224
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3853
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3608], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetGroupPresenceJoinIntent(System.IntPtr obj)

Disassembly:
	0x034C7E6C STR X30, [X31 + 0x30]
	0x034C7E70 STP X20, X19, [X31 + 0x40]
	0x034C7E74 ADRP X20, 0xF17000
	0x034C7E78 LDR X8, [X20 + 0xF28]
	0x034C7E7C MOV X19, X0
	0x034C7E80 CBNZ X8, 0x34C7ECC
	0x034C7E84 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7E88 LDR V0, [X12 + 0x5B8]
	0x034C7E8C ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7E90 ADRP X10, 0xFFFFFFFFFD62D000
	0x034C7E94 ADD X8, X8, 0xDD2
	0x034C7E98 MOVZ W9, 0x11
	0x034C7E9C ADD X10, X10, 0x77D
	0x034C7EA0 MOVZ W11, 0x1C
	0x034C7EA4 MOVZ W13, 0x8
	0x034C7EA8 ADD X0, X31, 0x0
	0x034C7EAC STP X8, X9, [X31]
	0x034C7EB0 STP X10, X11, [X31 + 0x10]
	0x034C7EB4 STR W13, [X31 + 0x28]
	0x034C7EB8 STR D0, [X31 + 0x20]
	0x034C7EBC STRB W31, [X31 + 0x2C]
	0x034C7EC0 BL 0x1C1729C
	0x034C7EC4 MOV X8, X0
	0x034C7EC8 STR X0, [X20 + 0xF28]
	0x034C7ECC MOV X0, X19
	0x034C7ED0 BLR X8
	0x034C7ED4 LDP X20, X19, [X31 + 0x40]
	0x034C7ED8 LDR X30, [X31 + 0x30]
	0x034C7EDC ADD X31, X31, 0x50
	0x034C7EE0 RET
	0x034C7EE4 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3616]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2104
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3616], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetGroupPresenceLeaveIntent(System.IntPtr obj)

Disassembly:
	0x034C7EE8 STR X30, [X31 + 0x30]
	0x034C7EEC STP X20, X19, [X31 + 0x40]
	0x034C7EF0 ADRP X20, 0xF17000
	0x034C7EF4 LDR X8, [X20 + 0xF30]
	0x034C7EF8 MOV X19, X0
	0x034C7EFC CBNZ X8, 0x34C7F48
	0x034C7F00 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7F04 LDR V0, [X12 + 0x5B8]
	0x034C7F08 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7F0C ADRP X10, 0xFFFFFFFFFD641000
	0x034C7F10 ADD X8, X8, 0xDD2
	0x034C7F14 MOVZ W9, 0x11
	0x034C7F18 ADD X10, X10, 0x5D9
	0x034C7F1C MOVZ W11, 0x21
	0x034C7F20 MOVZ W13, 0x8
	0x034C7F24 ADD X0, X31, 0x0
	0x034C7F28 STP X8, X9, [X31]
	0x034C7F2C STP X10, X11, [X31 + 0x10]
	0x034C7F30 STR W13, [X31 + 0x28]
	0x034C7F34 STR D0, [X31 + 0x20]
	0x034C7F38 STRB W31, [X31 + 0x2C]
	0x034C7F3C BL 0x1C1729C
	0x034C7F40 MOV X8, X0
	0x034C7F44 STR X0, [X20 + 0xF30]
	0x034C7F48 MOV X0, X19
	0x034C7F4C BLR X8
	0x034C7F50 LDP X20, X19, [X31 + 0x40]
	0x034C7F54 LDR X30, [X31 + 0x30]
	0x034C7F58 ADD X31, X31, 0x50
	0x034C7F5C RET
	0x034C7F60 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3624]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43786240
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1981
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3624], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetHttpTransferUpdate(System.IntPtr obj)

Disassembly:
	0x034C7F64 STR X30, [X31 + 0x30]
	0x034C7F68 STP X20, X19, [X31 + 0x40]
	0x034C7F6C ADRP X20, 0xF17000
	0x034C7F70 LDR X8, [X20 + 0xF38]
	0x034C7F74 MOV X19, X0
	0x034C7F78 CBNZ X8, 0x34C7FC4
	0x034C7F7C ADRP X12, 0xFFFFFFFFFD626000
	0x034C7F80 LDR V0, [X12 + 0x5B8]
	0x034C7F84 ADRP X8, 0xFFFFFFFFFD64C000
	0x034C7F88 ADRP X10, 0xFFFFFFFFFD649000
	0x034C7F8C ADD X8, X8, 0xDD2
	0x034C7F90 MOVZ W9, 0x11
	0x034C7F94 ADD X10, X10, 0x587
	0x034C7F98 MOVZ W11, 0x18
	0x034C7F9C MOVZ W13, 0x8
	0x034C7FA0 ADD X0, X31, 0x0
	0x034C7FA4 STP X8, X9, [X31]
	0x034C7FA8 STP X10, X11, [X31 + 0x10]
	0x034C7FAC STR W13, [X31 + 0x28]
	0x034C7FB0 STR D0, [X31 + 0x20]
	0x034C7FB4 STRB W31, [X31 + 0x2C]
	0x034C7FB8 BL 0x1C1729C
	0x034C7FBC MOV X8, X0
	0x034C7FC0 STR X0, [X20 + 0xF38]
	0x034C7FC4 MOV X0, X19
	0x034C7FC8 BLR X8
	0x034C7FCC LDP X20, X19, [X31 + 0x40]
	0x034C7FD0 LDR X30, [X31 + 0x30]
	0x034C7FD4 ADD X31, X31, 0x50
	0x034C7FD8 RET
	0x034C7FDC SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3632]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43724800
	013 Move X10, -43827200
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2313
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3632], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetInstalledApplicationArray(System.IntPtr obj)

Disassembly:
	0x034C7FE0 STR X30, [X31 + 0x30]
	0x034C7FE4 STP X20, X19, [X31 + 0x40]
	0x034C7FE8 ADRP X20, 0xF17000
	0x034C7FEC LDR X8, [X20 + 0xF40]
	0x034C7FF0 MOV X19, X0
	0x034C7FF4 CBNZ X8, 0x34C8040
	0x034C7FF8 ADRP X12, 0xFFFFFFFFFD626000
	0x034C7FFC LDR V0, [X12 + 0x5B8]
	0x034C8000 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8004 ADRP X10, 0xFFFFFFFFFD663000
	0x034C8008 ADD X8, X8, 0xDD2
	0x034C800C MOVZ W9, 0x11
	0x034C8010 ADD X10, X10, 0xD25
	0x034C8014 MOVZ W11, 0x1E
	0x034C8018 MOVZ W13, 0x8
	0x034C801C ADD X0, X31, 0x0
	0x034C8020 STP X8, X9, [X31]
	0x034C8024 STP X10, X11, [X31 + 0x10]
	0x034C8028 STR W13, [X31 + 0x28]
	0x034C802C STR D0, [X31 + 0x20]
	0x034C8030 STRB W31, [X31 + 0x2C]
	0x034C8034 BL 0x1C1729C
	0x034C8038 MOV X8, X0
	0x034C803C STR X0, [X20 + 0xF40]
	0x034C8040 MOV X0, X19
	0x034C8044 BLR X8
	0x034C8048 LDP X20, X19, [X31 + 0x40]
	0x034C804C LDR X30, [X31 + 0x30]
	0x034C8050 ADD X31, X31, 0x50
	0x034C8054 RET
	0x034C8058 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF18000
	006 Move X8, [X20+3640]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43880448
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43683840
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 13
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3640], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetInvitePanelResultInfo(System.IntPtr obj)

Disassembly:
	0x034C805C STR X30, [X31 + 0x30]
	0x034C8060 STP X20, X19, [X31 + 0x40]
	0x034C8064 ADRP X20, 0xF16000
	0x034C8068 LDR X8, [X20 + 0xF48]
	0x034C806C MOV X19, X0
	0x034C8070 CBNZ X8, 0x34C80BC
	0x034C8074 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8078 LDR V0, [X12 + 0x5B8]
	0x034C807C ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8080 ADRP X10, 0xFFFFFFFFFD63C000
	0x034C8084 ADD X8, X8, 0xDD2
	0x034C8088 MOVZ W9, 0x11
	0x034C808C ADD X10, X10, 0x82A
	0x034C8090 MOVZ W11, 0x20
	0x034C8094 MOVZ W13, 0x8
	0x034C8098 ADD X0, X31, 0x0
	0x034C809C STP X8, X9, [X31]
	0x034C80A0 STP X10, X11, [X31 + 0x10]
	0x034C80A4 STR W13, [X31 + 0x28]
	0x034C80A8 STR D0, [X31 + 0x20]
	0x034C80AC STRB W31, [X31 + 0x2C]
	0x034C80B0 BL 0x1C1729C
	0x034C80B4 MOV X8, X0
	0x034C80B8 STR X0, [X20 + 0xF48]
	0x034C80BC MOV X0, X19
	0x034C80C0 BLR X8
	0x034C80C4 LDP X20, X19, [X31 + 0x40]
	0x034C80C8 LDR X30, [X31 + 0x30]
	0x034C80CC ADD X31, X31, 0x50
	0x034C80D0 RET
	0x034C80D4 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3648]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43651072
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1007
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3648], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLaunchBlockFlowResult(System.IntPtr obj)

Disassembly:
	0x034C80D8 STR X30, [X31 + 0x30]
	0x034C80DC STP X20, X19, [X31 + 0x40]
	0x034C80E0 ADRP X20, 0xF16000
	0x034C80E4 LDR X8, [X20 + 0xF50]
	0x034C80E8 MOV X19, X0
	0x034C80EC CBNZ X8, 0x34C8138
	0x034C80F0 ADRP X12, 0xFFFFFFFFFD625000
	0x034C80F4 LDR V0, [X12 + 0x5B8]
	0x034C80F8 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C80FC ADRP X10, 0xFFFFFFFFFD65E000
	0x034C8100 ADD X8, X8, 0xDD2
	0x034C8104 MOVZ W9, 0x11
	0x034C8108 ADD X10, X10, 0x430
	0x034C810C MOVZ W11, 0x1F
	0x034C8110 MOVZ W13, 0x8
	0x034C8114 ADD X0, X31, 0x0
	0x034C8118 STP X8, X9, [X31]
	0x034C811C STP X10, X11, [X31 + 0x10]
	0x034C8120 STR W13, [X31 + 0x28]
	0x034C8124 STR D0, [X31 + 0x20]
	0x034C8128 STRB W31, [X31 + 0x2C]
	0x034C812C BL 0x1C1729C
	0x034C8130 MOV X8, X0
	0x034C8134 STR X0, [X20 + 0xF50]
	0x034C8138 MOV X0, X19
	0x034C813C BLR X8
	0x034C8140 LDP X20, X19, [X31 + 0x40]
	0x034C8144 LDR X30, [X31 + 0x30]
	0x034C8148 ADD X31, X31, 0x50
	0x034C814C RET
	0x034C8150 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3656]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43847680
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1939
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3656], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(System.IntPtr obj)

Disassembly:
	0x034C8154 STP X20, X19, [X31 + 0x10]
	0x034C8158 ADRP X20, 0xF16000
	0x034C815C ADRP X21, 0xC6A000
	0x034C8160 LDRB W8, [X20 + 0xF58]
	0x034C8164 LDR X21, [X21 + 0x328]
	0x034C8168 MOV X19, X0
	0x034C816C TBNZ X8, 0x0, 0x34C8184
	0x034C8170 ADRP X0, 0xC6A000
	0x034C8174 LDR X0, [X0 + 0x328]
	0x034C8178 BL 0x1C16CF4
	0x034C817C MOVZ W8, 0x1
	0x034C8180 STRB W8, [X20 + 0xF58]
	0x034C8184 LDR X0, [X21]
	0x034C8188 LDR W8, [X0 + 0xE0]
	0x034C818C CBNZ W8, 0x34C8194
	0x034C8190 BL 0x1C16DFC
	0x034C8194 MOV X0, X19
	0x034C8198 BL 0x34C81A8
	0x034C819C LDP X20, X19, [X31 + 0x10]
	0x034C81A0 LDP X30, X21, [X31], #0x20
	0x034C81A4 B 0x34B3B78
	0x034C81A8 SUB X31, X31, 0x50
	0x034C81AC STR X30, [X31 + 0x30]
	0x034C81B0 STP X20, X19, [X31 + 0x40]
	0x034C81B4 ADRP X20, 0xF16000
	0x034C81B8 LDR X8, [X20 + 0xF60]
	0x034C81BC MOV X19, X0
	0x034C81C0 CBNZ X8, 0x34C820C
	0x034C81C4 ADRP X12, 0xFFFFFFFFFD625000
	0x034C81C8 LDR V0, [X12 + 0x5B8]
	0x034C81CC ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3664]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1316
	017 Move W11, 44
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3664], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLaunchInvitePanelFlowResult(System.IntPtr obj)

Disassembly:
	0x034C81D0 ADRP X10, 0xFFFFFFFFFD634000
	0x034C81D4 ADD X8, X8, 0xDD2
	0x034C81D8 MOVZ W9, 0x11
	0x034C81DC ADD X10, X10, 0x85F
	0x034C81E0 MOVZ W11, 0x15
	0x034C81E4 MOVZ W13, 0x8
	0x034C81E8 ADD X0, X31, 0x0
	0x034C81EC STP X8, X9, [X31]
	0x034C81F0 STP X10, X11, [X31 + 0x10]
	0x034C81F4 STR W13, [X31 + 0x28]
	0x034C81F8 STR D0, [X31 + 0x20]
	0x034C81FC STRB W31, [X31 + 0x2C]
	0x034C8200 BL 0x1C1729C
	0x034C8204 MOV X8, X0
	0x034C8208 STR X0, [X20 + 0xF60]
	0x034C820C MOV X0, X19
	0x034C8210 BLR X8
	0x034C8214 LDP X20, X19, [X31 + 0x40]
	0x034C8218 LDR X30, [X31 + 0x30]
	0x034C821C ADD X31, X31, 0x50
	0x034C8220 RET
	0x034C8224 SUB X31, X31, 0x50
	0x034C8228 STR X30, [X31 + 0x30]
	0x034C822C STP X20, X19, [X31 + 0x40]
	0x034C8230 ADRP X20, 0xF16000
	0x034C8234 LDR X8, [X20 + 0xF68]
	0x034C8238 MOV X19, X0
	0x034C823C CBNZ X8, 0x34C8288
	0x034C8240 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8244 LDR V0, [X12 + 0x5B8]
	0x034C8248 ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3672]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1361
	017 Move W11, 42
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3672], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLaunchReportFlowResult(System.IntPtr obj)

Disassembly:
	0x034C824C ADRP X10, 0xFFFFFFFFFD656000
	0x034C8250 ADD X8, X8, 0xDD2
	0x034C8254 MOVZ W9, 0x11
	0x034C8258 ADD X10, X10, 0x36
	0x034C825C MOVZ W11, 0x1E
	0x034C8260 MOVZ W13, 0x8
	0x034C8264 ADD X0, X31, 0x0
	0x034C8268 STP X8, X9, [X31]
	0x034C826C STP X10, X11, [X31 + 0x10]
	0x034C8270 STR W13, [X31 + 0x28]
	0x034C8274 STR D0, [X31 + 0x20]
	0x034C8278 STRB W31, [X31 + 0x2C]
	0x034C827C BL 0x1C1729C
	0x034C8280 MOV X8, X0
	0x034C8284 STR X0, [X20 + 0xF68]
	0x034C8288 MOV X0, X19
	0x034C828C BLR X8
	0x034C8290 LDP X20, X19, [X31 + 0x40]
	0x034C8294 LDR X30, [X31 + 0x30]
	0x034C8298 ADD X31, X31, 0x50
	0x034C829C RET
	0x034C82A0 SUB X31, X31, 0x50
	0x034C82A4 STR X30, [X31 + 0x30]
	0x034C82A8 STP X20, X19, [X31 + 0x40]
	0x034C82AC ADRP X20, 0xF16000
	0x034C82B0 LDR X8, [X20 + 0xF70]
	0x034C82B4 MOV X19, X0
	0x034C82B8 CBNZ X8, 0x34C8304
	0x034C82BC ADRP X12, 0xFFFFFFFFFD625000
	0x034C82C0 LDR V0, [X12 + 0x5B8]
	0x034C82C4 ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3680]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43741184
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1377
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3680], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLaunchUnblockFlowResult(System.IntPtr obj)

Disassembly:
	0x034C82C8 ADRP X10, 0xFFFFFFFFFD64B000
	0x034C82CC ADD X8, X8, 0xDD2
	0x034C82D0 MOVZ W9, 0x11
	0x034C82D4 ADD X10, X10, 0xF42
	0x034C82D8 MOVZ W11, 0x13
	0x034C82DC MOVZ W13, 0x8
	0x034C82E0 ADD X0, X31, 0x0
	0x034C82E4 STP X8, X9, [X31]
	0x034C82E8 STP X10, X11, [X31 + 0x10]
	0x034C82EC STR W13, [X31 + 0x28]
	0x034C82F0 STR D0, [X31 + 0x20]
	0x034C82F4 STRB W31, [X31 + 0x2C]
	0x034C82F8 BL 0x1C1729C
	0x034C82FC MOV X8, X0
	0x034C8300 STR X0, [X20 + 0xF70]
	0x034C8304 MOV X0, X19
	0x034C8308 BLR X8
	0x034C830C LDP X20, X19, [X31 + 0x40]
	0x034C8310 LDR X30, [X31 + 0x30]
	0x034C8314 ADD X31, X31, 0x50
	0x034C8318 RET
	0x034C831C SUB X31, X31, 0x50
	0x034C8320 STR X30, [X31 + 0x30]
	0x034C8324 STP X20, X19, [X31 + 0x40]
	0x034C8328 ADRP X20, 0xF16000
	0x034C832C LDR X8, [X20 + 0xF78]
	0x034C8330 MOV X19, X0
	0x034C8334 CBNZ X8, 0x34C8380
	0x034C8338 ADRP X12, 0xFFFFFFFFFD625000
	0x034C833C LDR V0, [X12 + 0x5B8]
	0x034C8340 ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3688]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43646976
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3620
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3688], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLeaderboardArray(System.IntPtr obj)

Disassembly:
	0x034C8344 ADRP X10, 0xFFFFFFFFFD636000
	0x034C8348 ADD X8, X8, 0xDD2
	0x034C834C MOVZ W9, 0x11
	0x034C8350 ADD X10, X10, 0x525
	0x034C8354 MOVZ W11, 0x13
	0x034C8358 MOVZ W13, 0x8
	0x034C835C ADD X0, X31, 0x0
	0x034C8360 STP X8, X9, [X31]
	0x034C8364 STP X10, X11, [X31 + 0x10]
	0x034C8368 STR W13, [X31 + 0x28]
	0x034C836C STR D0, [X31 + 0x20]
	0x034C8370 STRB W31, [X31 + 0x2C]
	0x034C8374 BL 0x1C1729C
	0x034C8378 MOV X8, X0
	0x034C837C STR X0, [X20 + 0xF78]
	0x034C8380 MOV X0, X19
	0x034C8384 BLR X8
	0x034C8388 LDP X20, X19, [X31 + 0x40]
	0x034C838C LDR X30, [X31 + 0x30]
	0x034C8390 ADD X31, X31, 0x50
	0x034C8394 RET
	0x034C8398 SUB X31, X31, 0x50
	0x034C839C STR X30, [X31 + 0x30]
	0x034C83A0 STP X20, X19, [X31 + 0x40]
	0x034C83A4 ADRP X20, 0xF16000
	0x034C83A8 LDR X8, [X20 + 0xF80]
	0x034C83AC MOV X19, X0
	0x034C83B0 CBNZ X8, 0x34C83FC
	0x034C83B4 ADRP X12, 0xFFFFFFFFFD625000
	0x034C83B8 LDR V0, [X12 + 0x5B8]
	0x034C83BC ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3696]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43712512
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3678
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3696], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLeaderboardEntryArray(System.IntPtr obj)

Disassembly:
	0x034C83C0 ADRP X10, 0xFFFFFFFFFD658000
	0x034C83C4 ADD X8, X8, 0xDD2
	0x034C83C8 MOVZ W9, 0x11
	0x034C83CC ADD X10, X10, 0x250
	0x034C83D0 MOVZ W11, 0x25
	0x034C83D4 MOVZ W13, 0x8
	0x034C83D8 ADD X0, X31, 0x0
	0x034C83DC STP X8, X9, [X31]
	0x034C83E0 STP X10, X11, [X31 + 0x10]
	0x034C83E4 STR W13, [X31 + 0x28]
	0x034C83E8 STR D0, [X31 + 0x20]
	0x034C83EC STRB W31, [X31 + 0x2C]
	0x034C83F0 BL 0x1C1729C
	0x034C83F4 MOV X8, X0
	0x034C83F8 STR X0, [X20 + 0xF80]
	0x034C83FC MOV X0, X19
	0x034C8400 BLR X8
	0x034C8404 LDP X20, X19, [X31 + 0x40]
	0x034C8408 LDR X30, [X31 + 0x30]
	0x034C840C ADD X31, X31, 0x50
	0x034C8410 RET
	0x034C8414 SUB X31, X31, 0x50
	0x034C8418 STR X30, [X31 + 0x30]
	0x034C841C STP X20, X19, [X31 + 0x40]
	0x034C8420 ADRP X20, 0xF16000
	0x034C8424 LDR X8, [X20 + 0xF88]
	0x034C8428 MOV X19, X0
	0x034C842C CBNZ X8, 0x34C8478
	0x034C8430 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8434 LDR V0, [X12 + 0x5B8]
	0x034C8438 ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3704]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43806720
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 822
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3704], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLeaderboardUpdateStatus(System.IntPtr obj)

Disassembly:
	0x034C843C ADRP X10, 0xFFFFFFFFFD636000
	0x034C8440 ADD X8, X8, 0xDD2
	0x034C8444 MOVZ W9, 0x11
	0x034C8448 ADD X10, X10, 0x539
	0x034C844C MOVZ W11, 0x18
	0x034C8450 MOVZ W13, 0x8
	0x034C8454 ADD X0, X31, 0x0
	0x034C8458 STP X8, X9, [X31]
	0x034C845C STP X10, X11, [X31 + 0x10]
	0x034C8460 STR W13, [X31 + 0x28]
	0x034C8464 STR D0, [X31 + 0x20]
	0x034C8468 STRB W31, [X31 + 0x2C]
	0x034C846C BL 0x1C1729C
	0x034C8470 MOV X8, X0
	0x034C8474 STR X0, [X20 + 0xF88]
	0x034C8478 MOV X0, X19
	0x034C847C BLR X8
	0x034C8480 LDP X20, X19, [X31 + 0x40]
	0x034C8484 LDR X30, [X31 + 0x30]
	0x034C8488 ADD X31, X31, 0x50
	0x034C848C RET
	0x034C8490 SUB X31, X31, 0x50
	0x034C8494 STR X30, [X31 + 0x30]
	0x034C8498 STP X20, X19, [X31 + 0x40]
	0x034C849C ADRP X20, 0xF16000
	0x034C84A0 LDR X8, [X20 + 0xF90]
	0x034C84A4 MOV X19, X0
	0x034C84A8 CBNZ X8, 0x34C84F4
	0x034C84AC ADRP X12, 0xFFFFFFFFFD625000
	0x034C84B0 LDR V0, [X12 + 0x5B8]
	0x034C84B4 ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3712]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43880448
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2278
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3712], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLinkedAccountArray(System.IntPtr obj)

Disassembly:
	0x034C84B8 ADRP X10, 0xFFFFFFFFFD654000
	0x034C84BC ADD X8, X8, 0xDD2
	0x034C84C0 MOVZ W9, 0x11
	0x034C84C4 ADD X10, X10, 0x2E5
	0x034C84C8 MOVZ W11, 0x22
	0x034C84CC MOVZ W13, 0x8
	0x034C84D0 ADD X0, X31, 0x0
	0x034C84D4 STP X8, X9, [X31]
	0x034C84D8 STP X10, X11, [X31 + 0x10]
	0x034C84DC STR W13, [X31 + 0x28]
	0x034C84E0 STR D0, [X31 + 0x20]
	0x034C84E4 STRB W31, [X31 + 0x2C]
	0x034C84E8 BL 0x1C1729C
	0x034C84EC MOV X8, X0
	0x034C84F0 STR X0, [X20 + 0xF90]
	0x034C84F4 MOV X0, X19
	0x034C84F8 BLR X8
	0x034C84FC LDP X20, X19, [X31 + 0x40]
	0x034C8500 LDR X30, [X31 + 0x30]
	0x034C8504 ADD X31, X31, 0x50
	0x034C8508 RET
	0x034C850C SUB X31, X31, 0x50
	0x034C8510 STR X30, [X31 + 0x30]
	0x034C8514 STP X20, X19, [X31 + 0x40]
	0x034C8518 ADRP X20, 0xF16000
	0x034C851C LDR X8, [X20 + 0xF98]
	0x034C8520 MOV X19, X0
	0x034C8524 CBNZ X8, 0x34C8570
	0x034C8528 ADRP X12, 0xFFFFFFFFFD625000
	0x034C852C LDR V0, [X12 + 0x5B8]
	0x034C8530 ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3720]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43864064
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2053
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3720], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLivestreamingApplicationStatus(System.IntPtr obj)

Disassembly:
	0x034C8534 ADRP X10, 0xFFFFFFFFFD644000
	0x034C8538 ADD X8, X8, 0xDD2
	0x034C853C MOVZ W9, 0x11
	0x034C8540 ADD X10, X10, 0x440
	0x034C8544 MOVZ W11, 0x2A
	0x034C8548 MOVZ W13, 0x8
	0x034C854C ADD X0, X31, 0x0
	0x034C8550 STP X8, X9, [X31]
	0x034C8554 STP X10, X11, [X31 + 0x10]
	0x034C8558 STR W13, [X31 + 0x28]
	0x034C855C STR D0, [X31 + 0x20]
	0x034C8560 STRB W31, [X31 + 0x2C]
	0x034C8564 BL 0x1C1729C
	0x034C8568 MOV X8, X0
	0x034C856C STR X0, [X20 + 0xF98]
	0x034C8570 MOV X0, X19
	0x034C8574 BLR X8
	0x034C8578 LDP X20, X19, [X31 + 0x40]
	0x034C857C LDR X30, [X31 + 0x30]
	0x034C8580 ADD X31, X31, 0x50
	0x034C8584 RET
	0x034C8588 SUB X31, X31, 0x50
	0x034C858C STR X30, [X31 + 0x30]
	0x034C8590 STP X20, X19, [X31 + 0x40]
	0x034C8594 ADRP X20, 0xF16000
	0x034C8598 LDR X8, [X20 + 0xFA0]
	0x034C859C MOV X19, X0
	0x034C85A0 CBNZ X8, 0x34C85EC
	0x034C85A4 ADRP X12, 0xFFFFFFFFFD625000
	0x034C85A8 LDR V0, [X12 + 0x5B8]
	0x034C85AC ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3728]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3373
	017 Move W11, 45
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3728], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLivestreamingStartResult(System.IntPtr obj)

Disassembly:
	0x034C85B0 ADRP X10, 0xFFFFFFFFFD654000
	0x034C85B4 ADD X8, X8, 0xDD2
	0x034C85B8 MOVZ W9, 0x11
	0x034C85BC ADD X10, X10, 0x308
	0x034C85C0 MOVZ W11, 0x18
	0x034C85C4 MOVZ W13, 0x8
	0x034C85C8 ADD X0, X31, 0x0
	0x034C85CC STP X8, X9, [X31]
	0x034C85D0 STP X10, X11, [X31 + 0x10]
	0x034C85D4 STR W13, [X31 + 0x28]
	0x034C85D8 STR D0, [X31 + 0x20]
	0x034C85DC STRB W31, [X31 + 0x2C]
	0x034C85E0 BL 0x1C1729C
	0x034C85E4 MOV X8, X0
	0x034C85E8 STR X0, [X20 + 0xFA0]
	0x034C85EC MOV X0, X19
	0x034C85F0 BLR X8
	0x034C85F4 LDP X20, X19, [X31 + 0x40]
	0x034C85F8 LDR X30, [X31 + 0x30]
	0x034C85FC ADD X31, X31, 0x50
	0x034C8600 RET
	0x034C8604 SUB X31, X31, 0x50
	0x034C8608 STR X30, [X31 + 0x30]
	0x034C860C STP X20, X19, [X31 + 0x40]
	0x034C8610 ADRP X20, 0xF16000
	0x034C8614 LDR X8, [X20 + 0xFA8]
	0x034C8618 MOV X19, X0
	0x034C861C CBNZ X8, 0x34C8668
	0x034C8620 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8624 LDR V0, [X12 + 0x5B8]
	0x034C8628 ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3736]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43675648
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 552
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3736], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLivestreamingStatus(System.IntPtr obj)

Disassembly:
	0x034C862C ADRP X10, 0xFFFFFFFFFD642000
	0x034C8630 ADD X8, X8, 0xDD2
	0x034C8634 MOVZ W9, 0x11
	0x034C8638 ADD X10, X10, 0x85A
	0x034C863C MOVZ W11, 0x1B
	0x034C8640 MOVZ W13, 0x8
	0x034C8644 ADD X0, X31, 0x0
	0x034C8648 STP X8, X9, [X31]
	0x034C864C STP X10, X11, [X31 + 0x10]
	0x034C8650 STR W13, [X31 + 0x28]
	0x034C8654 STR D0, [X31 + 0x20]
	0x034C8658 STRB W31, [X31 + 0x2C]
	0x034C865C BL 0x1C1729C
	0x034C8660 MOV X8, X0
	0x034C8664 STR X0, [X20 + 0xFA8]
	0x034C8668 MOV X0, X19
	0x034C866C BLR X8
	0x034C8670 LDP X20, X19, [X31 + 0x40]
	0x034C8674 LDR X30, [X31 + 0x30]
	0x034C8678 ADD X31, X31, 0x50
	0x034C867C RET
	0x034C8680 SUB X31, X31, 0x50
	0x034C8684 STR X30, [X31 + 0x30]
	0x034C8688 STP X20, X19, [X31 + 0x40]
	0x034C868C ADRP X20, 0xF16000
	0x034C8690 LDR X8, [X20 + 0xFB0]
	0x034C8694 MOV X19, X0
	0x034C8698 CBNZ X8, 0x34C86E4
	0x034C869C ADRP X12, 0xFFFFFFFFFD625000
	0x034C86A0 LDR V0, [X12 + 0x5B8]
	0x034C86A4 ADRP X8, 0xFFFFFFFFFD64B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3744]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43847680
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1976
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3744], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetLivestreamingVideoStats(System.IntPtr obj)

Disassembly:
	0x034C86A8 ADRP X10, 0xFFFFFFFFFD646000
	0x034C86AC ADD X8, X8, 0xDD2
	0x034C86B0 MOVZ W9, 0x11
	0x034C86B4 ADD X10, X10, 0x520
	0x034C86B8 MOVZ W11, 0x13
	0x034C86BC MOVZ W13, 0x8
	0x034C86C0 ADD X0, X31, 0x0
	0x034C86C4 STP X8, X9, [X31]
	0x034C86C8 STP X10, X11, [X31 + 0x10]
	0x034C86CC STR W13, [X31 + 0x28]
	0x034C86D0 STR D0, [X31 + 0x20]
	0x034C86D4 STRB W31, [X31 + 0x2C]
	0x034C86D8 BL 0x1C1729C
	0x034C86DC MOV X8, X0
	0x034C86E0 STR X0, [X20 + 0xFB0]
	0x034C86E4 MOV X0, X19
	0x034C86E8 BLR X8
	0x034C86EC LDP X20, X19, [X31 + 0x40]
	0x034C86F0 LDR X30, [X31 + 0x30]
	0x034C86F4 CMP W0, 0x0
	0x034C86F8 CSET W0, NE
	0x034C86FC ADD X31, X31, 0x50
	0x034C8700 RET
	0x034C8704 SUB X31, X31, 0x50
	0x034C8708 STR X30, [X31 + 0x30]
	0x034C870C STP X20, X19, [X31 + 0x40]
	0x034C8710 ADRP X20, 0xF16000
	0x034C8714 LDR X8, [X20 + 0xFB8]
	0x034C8718 MOV X19, X0
	0x034C871C CBNZ X8, 0x34C8768
	0x034C8720 ADRP X12, 0xFFFFFFFFFD625000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3752]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43646976
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3659
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3752], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetMicrophoneAvailabilityState(System.IntPtr obj)

Disassembly:
	0x034C8724 LDR V0, [X12 + 0x5B8]
	0x034C8728 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C872C ADRP X10, 0xFFFFFFFFFD64A000
	0x034C8730 ADD X8, X8, 0xDD2
	0x034C8734 MOVZ W9, 0x11
	0x034C8738 ADD X10, X10, 0x184
	0x034C873C MOVZ W11, 0x25
	0x034C8740 MOVZ W13, 0x8
	0x034C8744 ADD X0, X31, 0x0
	0x034C8748 STP X8, X9, [X31]
	0x034C874C STP X10, X11, [X31 + 0x10]
	0x034C8750 STR W13, [X31 + 0x28]
	0x034C8754 STR D0, [X31 + 0x20]
	0x034C8758 STRB W31, [X31 + 0x2C]
	0x034C875C BL 0x1C1729C
	0x034C8760 MOV X8, X0
	0x034C8764 STR X0, [X20 + 0xFB8]
	0x034C8768 MOV X0, X19
	0x034C876C BLR X8
	0x034C8770 LDP X20, X19, [X31 + 0x40]
	0x034C8774 LDR X30, [X31 + 0x30]
	0x034C8778 ADD X31, X31, 0x50
	0x034C877C RET
	0x034C8780 SUB X31, X31, 0x50
	0x034C8784 STR X30, [X31 + 0x30]
	0x034C8788 STP X20, X19, [X31 + 0x40]
	0x034C878C ADRP X20, 0xF16000
	0x034C8790 LDR X8, [X20 + 0xFC0]
	0x034C8794 MOV X19, X0
	0x034C8798 CBNZ X8, 0x34C87E4
	0x034C879C ADRP X12, 0xFFFFFFFFFD625000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3760]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43814912
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1274
	017 Move W11, 42
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3760], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetNativeMessage(System.IntPtr obj)

Disassembly:
	0x034C87A0 LDR V0, [X12 + 0x5B8]
	0x034C87A4 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C87A8 ADRP X10, 0xFFFFFFFFFD642000
	0x034C87AC ADD X8, X8, 0xDD2
	0x034C87B0 MOVZ W9, 0x11
	0x034C87B4 ADD X10, X10, 0x876
	0x034C87B8 MOVZ W11, 0x25
	0x034C87BC MOVZ W13, 0x8
	0x034C87C0 ADD X0, X31, 0x0
	0x034C87C4 STP X8, X9, [X31]
	0x034C87C8 STP X10, X11, [X31 + 0x10]
	0x034C87CC STR W13, [X31 + 0x28]
	0x034C87D0 STR D0, [X31 + 0x20]
	0x034C87D4 STRB W31, [X31 + 0x2C]
	0x034C87D8 BL 0x1C1729C
	0x034C87DC MOV X8, X0
	0x034C87E0 STR X0, [X20 + 0xFC0]
	0x034C87E4 MOV X0, X19
	0x034C87E8 BLR X8
	0x034C87EC LDP X20, X19, [X31 + 0x40]
	0x034C87F0 LDR X30, [X31 + 0x30]
	0x034C87F4 ADD X31, X31, 0x50
	0x034C87F8 RET
	0x034C87FC SUB X31, X31, 0x60
	0x034C8800 STR X30, [X31 + 0x30]
	0x034C8804 STP X22, X21, [X31 + 0x40]
	0x034C8808 STP X20, X19, [X31 + 0x50]
	0x034C880C ADRP X22, 0xF16000
	0x034C8810 LDR X8, [X22 + 0xFC8]
	0x034C8814 MOV X19, X2
	0x034C8818 MOV X21, X1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3768]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2347
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3768], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetNetSyncConnection(System.IntPtr obj)

Disassembly:
	0x034C881C MOV X20, X0
	0x034C8820 CBNZ X8, 0x34C886C
	0x034C8824 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8828 LDR V0, [X12 + 0x5B8]
	0x034C882C ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8830 ADRP X10, 0xFFFFFFFFFD62C000
	0x034C8834 ADD X8, X8, 0xDD2
	0x034C8838 MOVZ W9, 0x11
	0x034C883C ADD X10, X10, 0x79A
	0x034C8840 MOVZ W11, 0x15
	0x034C8844 MOVZ W13, 0x18
	0x034C8848 ADD X0, X31, 0x0
	0x034C884C STP X8, X9, [X31]
	0x034C8850 STP X10, X11, [X31 + 0x10]
	0x034C8854 STR W13, [X31 + 0x28]
	0x034C8858 STR D0, [X31 + 0x20]
	0x034C885C STRB W31, [X31 + 0x2C]
	0x034C8860 BL 0x1C1729C
	0x034C8864 MOV X8, X0
	0x034C8868 STR X0, [X22 + 0xFC8]
	0x034C886C ADD X9, X21, 0x20
	0x034C8870 CMP X21, 0x0
	0x034C8874 CSEL X1, X31, X9, EQ
	0x034C8878 MOV X0, X20
	0x034C887C MOV X2, X19
	0x034C8880 BLR X8
	0x034C8884 LDP X20, X19, [X31 + 0x50]
	0x034C8888 LDP X22, X21, [X31 + 0x40]
	0x034C888C LDR X30, [X31 + 0x30]
	0x034C8890 ADD X31, X31, 0x60
	0x034C8894 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3776]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43630592
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3332
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3776], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetNetSyncSessionArray(System.IntPtr obj)

Disassembly:
	0x034C8898 SUB X31, X31, 0x60
	0x034C889C STR X30, [X31 + 0x30]
	0x034C88A0 STP X22, X21, [X31 + 0x40]
	0x034C88A4 STP X20, X19, [X31 + 0x50]
	0x034C88A8 ADRP X22, 0xF16000
	0x034C88AC LDR X8, [X22 + 0xFD0]
	0x034C88B0 MOV X19, X2
	0x034C88B4 MOV X21, X1
	0x034C88B8 MOV X20, X0
	0x034C88BC CBNZ X8, 0x34C8908
	0x034C88C0 ADRP X12, 0xFFFFFFFFFD625000
	0x034C88C4 LDR V0, [X12 + 0x5B8]
	0x034C88C8 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C88CC ADRP X10, 0xFFFFFFFFFD62C000
	0x034C88D0 ADD X8, X8, 0xDD2
	0x034C88D4 MOVZ W9, 0x11
	0x034C88D8 ADD X10, X10, 0x7B0
	0x034C88DC MOVZ W11, 0x1A
	0x034C88E0 MOVZ W13, 0x18
	0x034C88E4 ADD X0, X31, 0x0
	0x034C88E8 STP X8, X9, [X31]
	0x034C88EC STP X10, X11, [X31 + 0x10]
	0x034C88F0 STR W13, [X31 + 0x28]
	0x034C88F4 STR D0, [X31 + 0x20]
	0x034C88F8 STRB W31, [X31 + 0x2C]
	0x034C88FC BL 0x1C1729C
	0x034C8900 MOV X8, X0
	0x034C8904 STR X0, [X22 + 0xFD0]
	0x034C8908 ADD X9, X21, 0x20
	0x034C890C CMP X21, 0x0
	0x034C8910 CSEL X1, X31, X9, EQ

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3784]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1574
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3784], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(System.IntPtr obj)

Disassembly:
	0x034C8914 MOV X0, X20
	0x034C8918 MOV X2, X19
	0x034C891C BLR X8
	0x034C8920 LDP X20, X19, [X31 + 0x50]
	0x034C8924 LDP X22, X21, [X31 + 0x40]
	0x034C8928 LDR X30, [X31 + 0x30]
	0x034C892C ADD X31, X31, 0x60
	0x034C8930 RET
	0x034C8934 SUB X31, X31, 0x60
	0x034C8938 STR X30, [X31 + 0x30]
	0x034C893C STP X22, X21, [X31 + 0x40]
	0x034C8940 STP X20, X19, [X31 + 0x50]
	0x034C8944 ADRP X22, 0xF16000
	0x034C8948 LDR X8, [X22 + 0xFD8]
	0x034C894C MOV X19, X2
	0x034C8950 MOV X21, X1
	0x034C8954 MOV X20, X0
	0x034C8958 CBNZ X8, 0x34C89A4
	0x034C895C ADRP X12, 0xFFFFFFFFFD625000
	0x034C8960 LDR V0, [X12 + 0x5B8]
	0x034C8964 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8968 ADRP X10, 0xFFFFFFFFFD630000
	0x034C896C ADD X8, X8, 0xDD2
	0x034C8970 MOVZ W9, 0x11
	0x034C8974 ADD X10, X10, 0x770
	0x034C8978 MOVZ W11, 0x17
	0x034C897C MOVZ W13, 0x18
	0x034C8980 ADD X0, X31, 0x0
	0x034C8984 STP X8, X9, [X31]
	0x034C8988 STP X10, X11, [X31 + 0x10]
	0x034C898C STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3792]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3419
	017 Move W11, 49
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3792], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(System.IntPtr obj)

Disassembly:
	0x034C8990 STR D0, [X31 + 0x20]
	0x034C8994 STRB W31, [X31 + 0x2C]
	0x034C8998 BL 0x1C1729C
	0x034C899C MOV X8, X0
	0x034C89A0 STR X0, [X22 + 0xFD8]
	0x034C89A4 ADD X9, X21, 0x20
	0x034C89A8 CMP X21, 0x0
	0x034C89AC CSEL X1, X31, X9, EQ
	0x034C89B0 MOV X0, X20
	0x034C89B4 MOV X2, X19
	0x034C89B8 BLR X8
	0x034C89BC LDP X20, X19, [X31 + 0x50]
	0x034C89C0 LDP X22, X21, [X31 + 0x40]
	0x034C89C4 LDR X30, [X31 + 0x30]
	0x034C89C8 ADD X31, X31, 0x60
	0x034C89CC RET
	0x034C89D0 SUB X31, X31, 0x50
	0x034C89D4 STP X30, X21, [X31 + 0x30]
	0x034C89D8 STP X20, X19, [X31 + 0x40]
	0x034C89DC ADRP X21, 0xF16000
	0x034C89E0 LDR X8, [X21 + 0xFE0]
	0x034C89E4 MOV X19, X1
	0x034C89E8 MOV X20, X0
	0x034C89EC CBNZ X8, 0x34C8A38
	0x034C89F0 ADRP X12, 0xFFFFFFFFFD625000
	0x034C89F4 LDR V0, [X12 + 0x5B8]
	0x034C89F8 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C89FC ADRP X10, 0xFFFFFFFFFD654000
	0x034C8A00 ADD X8, X8, 0xDD2
	0x034C8A04 MOVZ W9, 0x11
	0x034C8A08 ADD X10, X10, 0x321

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3800]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43872256
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 929
	017 Move W11, 46
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3800], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetNetSyncVoipAttenuationValueArray(System.IntPtr obj)

Disassembly:
	0x034C8A0C MOVZ W11, 0x2E
	0x034C8A10 MOVZ W13, 0x10
	0x034C8A14 ADD X0, X31, 0x0
	0x034C8A18 STP X8, X9, [X31]
	0x034C8A1C STP X10, X11, [X31 + 0x10]
	0x034C8A20 STR W13, [X31 + 0x28]
	0x034C8A24 STR D0, [X31 + 0x20]
	0x034C8A28 STRB W31, [X31 + 0x2C]
	0x034C8A2C BL 0x1C1729C
	0x034C8A30 MOV X8, X0
	0x034C8A34 STR X0, [X21 + 0xFE0]
	0x034C8A38 MOV X0, X20
	0x034C8A3C MOV X1, X19
	0x034C8A40 BLR X8
	0x034C8A44 LDP X20, X19, [X31 + 0x40]
	0x034C8A48 LDP X30, X21, [X31 + 0x30]
	0x034C8A4C ADD X31, X31, 0x50
	0x034C8A50 RET
	0x034C8A54 SUB X31, X31, 0x50
	0x034C8A58 STR X30, [X31 + 0x30]
	0x034C8A5C STP X20, X19, [X31 + 0x40]
	0x034C8A60 ADRP X20, 0xF16000
	0x034C8A64 LDR X8, [X20 + 0xFE8]
	0x034C8A68 MOV X19, X0
	0x034C8A6C CBNZ X8, 0x34C8AB8
	0x034C8A70 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8A74 LDR V0, [X12 + 0x5B8]
	0x034C8A78 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8A7C ADRP X10, 0xFFFFFFFFFD65F000
	0x034C8A80 ADD X8, X8, 0xDD2
	0x034C8A84 MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3808]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43790336
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2021
	017 Move W11, 47
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3808], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetOrgScopedID(System.IntPtr obj)

Disassembly:
	0x034C8A88 ADD X10, X10, 0xE72
	0x034C8A8C MOVZ W11, 0x14
	0x034C8A90 MOVZ W13, 0x8
	0x034C8A94 ADD X0, X31, 0x0
	0x034C8A98 STP X8, X9, [X31]
	0x034C8A9C STP X10, X11, [X31 + 0x10]
	0x034C8AA0 STR W13, [X31 + 0x28]
	0x034C8AA4 STR D0, [X31 + 0x20]
	0x034C8AA8 STRB W31, [X31 + 0x2C]
	0x034C8AAC BL 0x1C1729C
	0x034C8AB0 MOV X8, X0
	0x034C8AB4 STR X0, [X20 + 0xFE8]
	0x034C8AB8 MOV X0, X19
	0x034C8ABC BLR X8
	0x034C8AC0 LDP X20, X19, [X31 + 0x40]
	0x034C8AC4 LDR X30, [X31 + 0x30]
	0x034C8AC8 ADD X31, X31, 0x50
	0x034C8ACC RET
	0x034C8AD0 SUB X31, X31, 0x50
	0x034C8AD4 STR X30, [X31 + 0x30]
	0x034C8AD8 STP X20, X19, [X31 + 0x40]
	0x034C8ADC ADRP X20, 0xF16000
	0x034C8AE0 LDR X8, [X20 + 0xFF0]
	0x034C8AE4 MOV X19, X0
	0x034C8AE8 CBNZ X8, 0x34C8B34
	0x034C8AEC ADRP X12, 0xFFFFFFFFFD625000
	0x034C8AF0 LDR V0, [X12 + 0x5B8]
	0x034C8AF4 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8AF8 ADRP X10, 0xFFFFFFFFFD634000
	0x034C8AFC ADD X8, X8, 0xDD2
	0x034C8B00 MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3816]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43806720
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 859
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3816], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetParty(System.IntPtr obj)

Disassembly:
	0x034C8B04 ADD X10, X10, 0x875
	0x034C8B08 MOVZ W11, 0x13
	0x034C8B0C MOVZ W13, 0x8
	0x034C8B10 ADD X0, X31, 0x0
	0x034C8B14 STP X8, X9, [X31]
	0x034C8B18 STP X10, X11, [X31 + 0x10]
	0x034C8B1C STR W13, [X31 + 0x28]
	0x034C8B20 STR D0, [X31 + 0x20]
	0x034C8B24 STRB W31, [X31 + 0x2C]
	0x034C8B28 BL 0x1C1729C
	0x034C8B2C MOV X8, X0
	0x034C8B30 STR X0, [X20 + 0xFF0]
	0x034C8B34 MOV X0, X19
	0x034C8B38 BLR X8
	0x034C8B3C LDP X20, X19, [X31 + 0x40]
	0x034C8B40 LDR X30, [X31 + 0x30]
	0x034C8B44 ADD X31, X31, 0x50
	0x034C8B48 RET
	0x034C8B4C SUB X31, X31, 0x50
	0x034C8B50 STR X30, [X31 + 0x30]
	0x034C8B54 STP X20, X19, [X31 + 0x40]
	0x034C8B58 ADRP X20, 0xF16000
	0x034C8B5C LDR X8, [X20 + 0xFF8]
	0x034C8B60 MOV X19, X0
	0x034C8B64 CBNZ X8, 0x34C8BB0
	0x034C8B68 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8B6C LDR V0, [X12 + 0x5B8]
	0x034C8B70 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8B74 ADRP X10, 0xFFFFFFFFFD63C000
	0x034C8B78 ADD X8, X8, 0xDD2
	0x034C8B7C MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3824]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43790336
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2069
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3824], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetPartyID(System.IntPtr obj)

Disassembly:
	0x034C8B80 ADD X10, X10, 0x84B
	0x034C8B84 MOVZ W11, 0x36
	0x034C8B88 MOVZ W13, 0x8
	0x034C8B8C ADD X0, X31, 0x0
	0x034C8B90 STP X8, X9, [X31]
	0x034C8B94 STP X10, X11, [X31 + 0x10]
	0x034C8B98 STR W13, [X31 + 0x28]
	0x034C8B9C STR D0, [X31 + 0x20]
	0x034C8BA0 STRB W31, [X31 + 0x2C]
	0x034C8BA4 BL 0x1C1729C
	0x034C8BA8 MOV X8, X0
	0x034C8BAC STR X0, [X20 + 0xFF8]
	0x034C8BB0 MOV X0, X19
	0x034C8BB4 BLR X8
	0x034C8BB8 LDP X20, X19, [X31 + 0x40]
	0x034C8BBC LDR X30, [X31 + 0x30]
	0x034C8BC0 CMP W0, 0x0
	0x034C8BC4 CSET W0, NE
	0x034C8BC8 ADD X31, X31, 0x50
	0x034C8BCC RET
	0x034C8BD0 SUB X31, X31, 0x50
	0x034C8BD4 STR X30, [X31 + 0x30]
	0x034C8BD8 STP X20, X19, [X31 + 0x40]
	0x034C8BDC ADRP X20, 0xF17000
	0x034C8BE0 LDR X8, [X20]
	0x034C8BE4 MOV X19, X0
	0x034C8BE8 CBNZ X8, 0x34C8C34
	0x034C8BEC ADRP X12, 0xFFFFFFFFFD625000
	0x034C8BF0 LDR V0, [X12 + 0x5B8]
	0x034C8BF4 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8BF8 ADRP X10, 0xFFFFFFFFFD638000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3832]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43659264
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 929
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3832], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetPartyUpdateNotification(System.IntPtr obj)

Disassembly:
	0x034C8BFC ADD X8, X8, 0xDD2
	0x034C8C00 MOVZ W9, 0x11
	0x034C8C04 ADD X10, X10, 0x376
	0x034C8C08 MOVZ W11, 0x25
	0x034C8C0C MOVZ W13, 0x8
	0x034C8C10 ADD X0, X31, 0x0
	0x034C8C14 STP X8, X9, [X31]
	0x034C8C18 STP X10, X11, [X31 + 0x10]
	0x034C8C1C STR W13, [X31 + 0x28]
	0x034C8C20 STR D0, [X31 + 0x20]
	0x034C8C24 STRB W31, [X31 + 0x2C]
	0x034C8C28 BL 0x1C1729C
	0x034C8C2C MOV X8, X0
	0x034C8C30 STR X0, [X20]
	0x034C8C34 MOV X0, X19
	0x034C8C38 BLR X8
	0x034C8C3C LDP X20, X19, [X31 + 0x40]
	0x034C8C40 LDR X30, [X31 + 0x30]
	0x034C8C44 ADD X31, X31, 0x50
	0x034C8C48 RET
	0x034C8C4C SUB X31, X31, 0x50
	0x034C8C50 STR X30, [X31 + 0x30]
	0x034C8C54 STP X20, X19, [X31 + 0x40]
	0x034C8C58 ADRP X20, 0xF17000
	0x034C8C5C LDR X8, [X20 + 0x8]
	0x034C8C60 MOV X19, X0
	0x034C8C64 CBNZ X8, 0x34C8CB0
	0x034C8C68 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8C6C LDR V0, [X12 + 0x5B8]
	0x034C8C70 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8C74 ADRP X10, 0xFFFFFFFFFD65A000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3840]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43855872
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1878
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3840], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetPidArray(System.IntPtr obj)

Disassembly:
	0x034C8C78 ADD X8, X8, 0xDD2
	0x034C8C7C MOVZ W9, 0x11
	0x034C8C80 ADD X10, X10, 0x57C
	0x034C8C84 MOVZ W11, 0x29
	0x034C8C88 MOVZ W13, 0x8
	0x034C8C8C ADD X0, X31, 0x0
	0x034C8C90 STP X8, X9, [X31]
	0x034C8C94 STP X10, X11, [X31 + 0x10]
	0x034C8C98 STR W13, [X31 + 0x28]
	0x034C8C9C STR D0, [X31 + 0x20]
	0x034C8CA0 STRB W31, [X31 + 0x2C]
	0x034C8CA4 BL 0x1C1729C
	0x034C8CA8 MOV X8, X0
	0x034C8CAC STR X0, [X20 + 0x8]
	0x034C8CB0 MOV X0, X19
	0x034C8CB4 BLR X8
	0x034C8CB8 LDP X20, X19, [X31 + 0x40]
	0x034C8CBC LDR X30, [X31 + 0x30]
	0x034C8CC0 ADD X31, X31, 0x50
	0x034C8CC4 RET
	0x034C8CC8 SUB X31, X31, 0x50
	0x034C8CCC STR X30, [X31 + 0x30]
	0x034C8CD0 STP X20, X19, [X31 + 0x40]
	0x034C8CD4 ADRP X20, 0xF17000
	0x034C8CD8 LDR X8, [X20 + 0x10]
	0x034C8CDC MOV X19, X0
	0x034C8CE0 CBNZ X8, 0x34C8D2C
	0x034C8CE4 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8CE8 LDR V0, [X12 + 0x5B8]
	0x034C8CEC ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8CF0 ADRP X10, 0xFFFFFFFFFD630000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3848]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43757568
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1064
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3848], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetPlatformInitialize(System.IntPtr obj)

Disassembly:
	0x034C8CF4 ADD X8, X8, 0xDD2
	0x034C8CF8 MOVZ W9, 0x11
	0x034C8CFC ADD X10, X10, 0x788
	0x034C8D00 MOVZ W11, 0x22
	0x034C8D04 MOVZ W13, 0x8
	0x034C8D08 ADD X0, X31, 0x0
	0x034C8D0C STP X8, X9, [X31]
	0x034C8D10 STP X10, X11, [X31 + 0x10]
	0x034C8D14 STR W13, [X31 + 0x28]
	0x034C8D18 STR D0, [X31 + 0x20]
	0x034C8D1C STRB W31, [X31 + 0x2C]
	0x034C8D20 BL 0x1C1729C
	0x034C8D24 MOV X8, X0
	0x034C8D28 STR X0, [X20 + 0x10]
	0x034C8D2C MOV X0, X19
	0x034C8D30 BLR X8
	0x034C8D34 LDP X20, X19, [X31 + 0x40]
	0x034C8D38 LDR X30, [X31 + 0x30]
	0x034C8D3C ADD X31, X31, 0x50
	0x034C8D40 RET
	0x034C8D44 SUB X31, X31, 0x50
	0x034C8D48 STR X30, [X31 + 0x30]
	0x034C8D4C STP X20, X19, [X31 + 0x40]
	0x034C8D50 ADRP X20, 0xF17000
	0x034C8D54 LDR X8, [X20 + 0x18]
	0x034C8D58 MOV X19, X0
	0x034C8D5C CBNZ X8, 0x34C8DA8
	0x034C8D60 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8D64 LDR V0, [X12 + 0x5B8]
	0x034C8D68 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8D6C ADRP X10, 0xFFFFFFFFFD654000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3856]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43864064
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2087
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3856], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetProductArray(System.IntPtr obj)

Disassembly:
	0x034C8D70 ADD X8, X8, 0xDD2
	0x034C8D74 MOVZ W9, 0x11
	0x034C8D78 ADD X10, X10, 0x350
	0x034C8D7C MOVZ W11, 0x1F
	0x034C8D80 MOVZ W13, 0x8
	0x034C8D84 ADD X0, X31, 0x0
	0x034C8D88 STP X8, X9, [X31]
	0x034C8D8C STP X10, X11, [X31 + 0x10]
	0x034C8D90 STR W13, [X31 + 0x28]
	0x034C8D94 STR D0, [X31 + 0x20]
	0x034C8D98 STRB W31, [X31 + 0x2C]
	0x034C8D9C BL 0x1C1729C
	0x034C8DA0 MOV X8, X0
	0x034C8DA4 STR X0, [X20 + 0x18]
	0x034C8DA8 MOV X0, X19
	0x034C8DAC BLR X8
	0x034C8DB0 LDP X20, X19, [X31 + 0x40]
	0x034C8DB4 LDR X30, [X31 + 0x30]
	0x034C8DB8 ADD X31, X31, 0x50
	0x034C8DBC RET
	0x034C8DC0 STP X30, X21, [X31 - 0x20]!
	0x034C8DC4 STP X20, X19, [X31 + 0x10]
	0x034C8DC8 ADRP X20, 0xF17000
	0x034C8DCC ADRP X21, 0xC6A000
	0x034C8DD0 LDRB W8, [X20 + 0x20]
	0x034C8DD4 LDR X21, [X21 + 0x328]
	0x034C8DD8 MOV X19, X0
	0x034C8DDC TBNZ X8, 0x0, 0x34C8DF4
	0x034C8DE0 ADRP X0, 0xC6A000
	0x034C8DE4 LDR X0, [X0 + 0x328]
	0x034C8DE8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3864]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43651072
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1044
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3864], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetPurchase(System.IntPtr obj)

Disassembly:
	0x034C8DEC MOVZ W8, 0x1
	0x034C8DF0 STRB W8, [X20 + 0x20]
	0x034C8DF4 LDR X0, [X21]
	0x034C8DF8 LDR W8, [X0 + 0xE0]
	0x034C8DFC CBNZ W8, 0x34C8E04
	0x034C8E00 BL 0x1C16DFC
	0x034C8E04 MOV X0, X19
	0x034C8E08 BL 0x34C8E18
	0x034C8E0C LDP X20, X19, [X31 + 0x10]
	0x034C8E10 LDP X30, X21, [X31], #0x20
	0x034C8E14 B 0x34B3B78
	0x034C8E18 SUB X31, X31, 0x50
	0x034C8E1C STR X30, [X31 + 0x30]
	0x034C8E20 STP X20, X19, [X31 + 0x40]
	0x034C8E24 ADRP X20, 0xF17000
	0x034C8E28 LDR X8, [X20 + 0x28]
	0x034C8E2C MOV X19, X0
	0x034C8E30 CBNZ X8, 0x34C8E7C
	0x034C8E34 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8E38 LDR V0, [X12 + 0x5B8]
	0x034C8E3C ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8E40 ADRP X10, 0xFFFFFFFFFD654000
	0x034C8E44 ADD X8, X8, 0xDD2
	0x034C8E48 MOVZ W9, 0x11
	0x034C8E4C ADD X10, X10, 0x370
	0x034C8E50 MOVZ W11, 0x1F
	0x034C8E54 MOVZ W13, 0x8
	0x034C8E58 ADD X0, X31, 0x0
	0x034C8E5C STP X8, X9, [X31]
	0x034C8E60 STP X10, X11, [X31 + 0x10]
	0x034C8E64 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3872]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43712512
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3710
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3872], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetPurchaseArray(System.IntPtr obj)

Disassembly:
	0x034C8E68 STR D0, [X31 + 0x20]
	0x034C8E6C STRB W31, [X31 + 0x2C]
	0x034C8E70 BL 0x1C1729C
	0x034C8E74 MOV X8, X0
	0x034C8E78 STR X0, [X20 + 0x28]
	0x034C8E7C MOV X0, X19
	0x034C8E80 BLR X8
	0x034C8E84 LDP X20, X19, [X31 + 0x40]
	0x034C8E88 LDR X30, [X31 + 0x30]
	0x034C8E8C ADD X31, X31, 0x50
	0x034C8E90 RET
	0x034C8E94 SUB X31, X31, 0x50
	0x034C8E98 STR X30, [X31 + 0x30]
	0x034C8E9C STP X20, X19, [X31 + 0x40]
	0x034C8EA0 ADRP X20, 0xF17000
	0x034C8EA4 LDR X8, [X20 + 0x30]
	0x034C8EA8 MOV X19, X0
	0x034C8EAC CBNZ X8, 0x34C8EF8
	0x034C8EB0 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8EB4 LDR V0, [X12 + 0x5B8]
	0x034C8EB8 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8EBC ADRP X10, 0xFFFFFFFFFD65E000
	0x034C8EC0 ADD X8, X8, 0xDD2
	0x034C8EC4 MOVZ W9, 0x11
	0x034C8EC8 ADD X10, X10, 0x450
	0x034C8ECC MOVZ W11, 0x22
	0x034C8ED0 MOVZ W13, 0x8
	0x034C8ED4 ADD X0, X31, 0x0
	0x034C8ED8 STP X8, X9, [X31]
	0x034C8EDC STP X10, X11, [X31 + 0x10]
	0x034C8EE0 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3880]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43855872
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1917
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3880], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetRejoinDialogResult(System.IntPtr obj)

Disassembly:
	0x034C8EE4 STR D0, [X31 + 0x20]
	0x034C8EE8 STRB W31, [X31 + 0x2C]
	0x034C8EEC BL 0x1C1729C
	0x034C8EF0 MOV X8, X0
	0x034C8EF4 STR X0, [X20 + 0x30]
	0x034C8EF8 MOV X0, X19
	0x034C8EFC BLR X8
	0x034C8F00 LDP X20, X19, [X31 + 0x40]
	0x034C8F04 LDR X30, [X31 + 0x30]
	0x034C8F08 ADD X31, X31, 0x50
	0x034C8F0C RET
	0x034C8F10 SUB X31, X31, 0x50
	0x034C8F14 STR X30, [X31 + 0x30]
	0x034C8F18 STP X20, X19, [X31 + 0x40]
	0x034C8F1C ADRP X20, 0xF17000
	0x034C8F20 LDR X8, [X20 + 0x38]
	0x034C8F24 MOV X19, X0
	0x034C8F28 CBNZ X8, 0x34C8F74
	0x034C8F2C ADRP X12, 0xFFFFFFFFFD625000
	0x034C8F30 LDR V0, [X12 + 0x5B8]
	0x034C8F34 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8F38 ADRP X10, 0xFFFFFFFFFD654000
	0x034C8F3C ADD X8, X8, 0xDD2
	0x034C8F40 MOVZ W9, 0x11
	0x034C8F44 ADD X10, X10, 0x390
	0x034C8F48 MOVZ W11, 0x1B
	0x034C8F4C MOVZ W13, 0x8
	0x034C8F50 ADD X0, X31, 0x0
	0x034C8F54 STP X8, X9, [X31]
	0x034C8F58 STP X10, X11, [X31 + 0x10]
	0x034C8F5C STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3888]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1497
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3888], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Message_GetRequestID(System.IntPtr obj)

Disassembly:
	0x034C8F60 STR D0, [X31 + 0x20]
	0x034C8F64 STRB W31, [X31 + 0x2C]
	0x034C8F68 BL 0x1C1729C
	0x034C8F6C MOV X8, X0
	0x034C8F70 STR X0, [X20 + 0x38]
	0x034C8F74 MOV X0, X19
	0x034C8F78 BLR X8
	0x034C8F7C LDP X20, X19, [X31 + 0x40]
	0x034C8F80 LDR X30, [X31 + 0x30]
	0x034C8F84 CMP W0, 0x0
	0x034C8F88 CSET W0, NE
	0x034C8F8C ADD X31, X31, 0x50
	0x034C8F90 RET
	0x034C8F94 SUB X31, X31, 0x50
	0x034C8F98 STR X30, [X31 + 0x30]
	0x034C8F9C STP X20, X19, [X31 + 0x40]
	0x034C8FA0 ADRP X20, 0xF17000
	0x034C8FA4 LDR X8, [X20 + 0x40]
	0x034C8FA8 MOV X19, X0
	0x034C8FAC CBNZ X8, 0x34C8FF8
	0x034C8FB0 ADRP X12, 0xFFFFFFFFFD625000
	0x034C8FB4 LDR V0, [X12 + 0x5B8]
	0x034C8FB8 ADRP X8, 0xFFFFFFFFFD64B000
	0x034C8FBC ADRP X10, 0xFFFFFFFFFD648000
	0x034C8FC0 ADD X8, X8, 0xDD2
	0x034C8FC4 MOVZ W9, 0x11
	0x034C8FC8 ADD X10, X10, 0x5A0
	0x034C8FCC MOVZ W11, 0x1F
	0x034C8FD0 MOVZ W13, 0x8
	0x034C8FD4 ADD X0, X31, 0x0
	0x034C8FD8 STP X8, X9, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3896]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43728896
	013 Move X10, -43741184
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1415
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3896], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetSdkAccountArray(System.IntPtr obj)

Disassembly:
	0x034C8FDC STP X10, X11, [X31 + 0x10]
	0x034C8FE0 STR W13, [X31 + 0x28]
	0x034C8FE4 STR D0, [X31 + 0x20]
	0x034C8FE8 STRB W31, [X31 + 0x2C]
	0x034C8FEC BL 0x1C1729C
	0x034C8FF0 MOV X8, X0
	0x034C8FF4 STR X0, [X20 + 0x40]
	0x034C8FF8 MOV X0, X19
	0x034C8FFC BLR X8
	0x034C9000 LDP X20, X19, [X31 + 0x40]
	0x034C9004 LDR X30, [X31 + 0x30]
	0x034C9008 ADD X31, X31, 0x50
	0x034C900C RET
	0x034C9010 SUB X31, X31, 0x50
	0x034C9014 STR X30, [X31 + 0x30]
	0x034C9018 STP X20, X19, [X31 + 0x40]
	0x034C901C ADRP X20, 0xF16000
	0x034C9020 LDR X8, [X20 + 0x48]
	0x034C9024 MOV X19, X0
	0x034C9028 CBNZ X8, 0x34C9074
	0x034C902C ADRP X12, 0xFFFFFFFFFD624000
	0x034C9030 LDR V0, [X12 + 0x5B8]
	0x034C9034 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9038 ADRP X10, 0xFFFFFFFFFD65B000
	0x034C903C ADD X8, X8, 0xDD2
	0x034C9040 MOVZ W9, 0x11
	0x034C9044 ADD X10, X10, 0x3B8
	0x034C9048 MOVZ W11, 0x1C
	0x034C904C MOVZ W13, 0x8
	0x034C9050 ADD X0, X31, 0x0
	0x034C9054 STP X8, X9, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+3904]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43884544
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43634688
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3365
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3904], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetSendInvitesResult(System.IntPtr obj)

Disassembly:
	0x034C9058 STP X10, X11, [X31 + 0x10]
	0x034C905C STR W13, [X31 + 0x28]
	0x034C9060 STR D0, [X31 + 0x20]
	0x034C9064 STRB W31, [X31 + 0x2C]
	0x034C9068 BL 0x1C1729C
	0x034C906C MOV X8, X0
	0x034C9070 STR X0, [X20 + 0x48]
	0x034C9074 MOV X0, X19
	0x034C9078 BLR X8
	0x034C907C LDP X20, X19, [X31 + 0x40]
	0x034C9080 LDR X30, [X31 + 0x30]
	0x034C9084 ADD X31, X31, 0x50
	0x034C9088 RET
	0x034C908C STP X30, X21, [X31 - 0x20]!
	0x034C9090 STP X20, X19, [X31 + 0x10]
	0x034C9094 ADRP X20, 0xF16000
	0x034C9098 ADRP X21, 0xC69000
	0x034C909C LDRB W8, [X20 + 0x50]
	0x034C90A0 LDR X21, [X21 + 0x328]
	0x034C90A4 MOV X19, X0
	0x034C90A8 TBNZ X8, 0x0, 0x34C90C0
	0x034C90AC ADRP X0, 0xC69000
	0x034C90B0 LDR X0, [X0 + 0x328]
	0x034C90B4 BL 0x1C16CF4
	0x034C90B8 MOVZ W8, 0x1
	0x034C90BC STRB W8, [X20 + 0x50]
	0x034C90C0 LDR X0, [X21]
	0x034C90C4 LDR W8, [X0 + 0xE0]
	0x034C90C8 CBNZ W8, 0x34C90D0
	0x034C90CC BL 0x1C16DFC
	0x034C90D0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3912]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2090
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3912], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetShareMediaResult(System.IntPtr obj)

Disassembly:
	0x034C90D4 BL 0x34C90E4
	0x034C90D8 LDP X20, X19, [X31 + 0x10]
	0x034C90DC LDP X30, X21, [X31], #0x20
	0x034C90E0 B 0x34B3B78
	0x034C90E4 SUB X31, X31, 0x50
	0x034C90E8 STR X30, [X31 + 0x30]
	0x034C90EC STP X20, X19, [X31 + 0x40]
	0x034C90F0 ADRP X20, 0xF16000
	0x034C90F4 LDR X8, [X20 + 0x58]
	0x034C90F8 MOV X19, X0
	0x034C90FC CBNZ X8, 0x34C9148
	0x034C9100 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9104 LDR V0, [X12 + 0x5B8]
	0x034C9108 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C910C ADRP X10, 0xFFFFFFFFFD63F000
	0x034C9110 ADD X8, X8, 0xDD2
	0x034C9114 MOVZ W9, 0x11
	0x034C9118 ADD X10, X10, 0x5FB
	0x034C911C MOVZ W11, 0x1F
	0x034C9120 MOVZ W13, 0x8
	0x034C9124 ADD X0, X31, 0x0
	0x034C9128 STP X8, X9, [X31]
	0x034C912C STP X10, X11, [X31 + 0x10]
	0x034C9130 STR W13, [X31 + 0x28]
	0x034C9134 STR D0, [X31 + 0x20]
	0x034C9138 STRB W31, [X31 + 0x2C]
	0x034C913C BL 0x1C1729C
	0x034C9140 MOV X8, X0
	0x034C9144 STR X0, [X20 + 0x58]
	0x034C9148 MOV X0, X19
	0x034C914C BLR X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3920]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43655168
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1072
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3920], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Message_GetString(System.IntPtr obj)

Disassembly:
	0x034C9150 LDP X20, X19, [X31 + 0x40]
	0x034C9154 LDR X30, [X31 + 0x30]
	0x034C9158 ADD X31, X31, 0x50
	0x034C915C RET
	0x034C9160 SUB X31, X31, 0x50
	0x034C9164 STP X30, X21, [X31 + 0x30]
	0x034C9168 STP X20, X19, [X31 + 0x40]
	0x034C916C ADRP X21, 0xF16000
	0x034C9170 LDR X8, [X21 + 0x60]
	0x034C9174 MOV X19, X1
	0x034C9178 MOV X20, X0
	0x034C917C CBNZ X8, 0x34C91C8
	0x034C9180 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9184 LDR V0, [X12 + 0x5B8]
	0x034C9188 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C918C ADRP X10, 0xFFFFFFFFFD62B000
	0x034C9190 ADD X8, X8, 0xDD2
	0x034C9194 MOVZ W9, 0x11
	0x034C9198 ADD X10, X10, 0x7CB
	0x034C919C MOVZ W11, 0x22
	0x034C91A0 MOVZ W13, 0x10
	0x034C91A4 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF16000
	006 Move X21, 0xC6A000
	007 Move W8, [X20+3928]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6A000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3928], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Message_GetString_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Message_GetString_Native(System.IntPtr obj)

Disassembly:
	0x034C91A8 STP X8, X9, [X31]
	0x034C91AC STP X10, X11, [X31 + 0x10]
	0x034C91B0 STR W13, [X31 + 0x28]
	0x034C91B4 STR D0, [X31 + 0x20]
	0x034C91B8 STRB W31, [X31 + 0x2C]
	0x034C91BC BL 0x1C1729C
	0x034C91C0 MOV X8, X0
	0x034C91C4 STR X0, [X21 + 0x60]
	0x034C91C8 MOV X0, X20
	0x034C91CC MOV X1, X19
	0x034C91D0 BLR X8
	0x034C91D4 LDP X20, X19, [X31 + 0x40]
	0x034C91D8 LDP X30, X21, [X31 + 0x30]
	0x034C91DC ADD X31, X31, 0x50
	0x034C91E0 RET
	0x034C91E4 SUB X31, X31, 0x50
	0x034C91E8 STR X30, [X31 + 0x30]
	0x034C91EC STP X20, X19, [X31 + 0x40]
	0x034C91F0 ADRP X20, 0xF16000
	0x034C91F4 LDR X8, [X20 + 0x68]
	0x034C91F8 MOV X19, X0
	0x034C91FC CBNZ X8, 0x34C9248
	0x034C9200 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9204 LDR V0, [X12 + 0x5B8]
	0x034C9208 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C920C ADRP X10, 0xFFFFFFFFFD65E000
	0x034C9210 ADD X8, X8, 0xDD2
	0x034C9214 MOVZ W9, 0x11
	0x034C9218 ADD X10, X10, 0xE87
	0x034C921C MOVZ W11, 0x1F
	0x034C9220 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3936]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43827200
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2143
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3936], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetSystemVoipState(System.IntPtr obj)

Disassembly:
	0x034C9224 ADD X0, X31, 0x0
	0x034C9228 STP X8, X9, [X31]
	0x034C922C STP X10, X11, [X31 + 0x10]
	0x034C9230 STR W13, [X31 + 0x28]
	0x034C9234 STR D0, [X31 + 0x20]
	0x034C9238 STRB W31, [X31 + 0x2C]
	0x034C923C BL 0x1C1729C
	0x034C9240 MOV X8, X0
	0x034C9244 STR X0, [X20 + 0x68]
	0x034C9248 MOV X0, X19
	0x034C924C BLR X8
	0x034C9250 LDP X20, X19, [X31 + 0x40]
	0x034C9254 LDR X30, [X31 + 0x30]
	0x034C9258 ADD X31, X31, 0x50
	0x034C925C RET
	0x034C9260 SUB X31, X31, 0x50
	0x034C9264 STR X30, [X31 + 0x30]
	0x034C9268 STP X20, X19, [X31 + 0x40]
	0x034C926C ADRP X20, 0xF16000
	0x034C9270 LDR X8, [X20 + 0x70]
	0x034C9274 MOV X19, X0
	0x034C9278 CBNZ X8, 0x34C92C4
	0x034C927C ADRP X12, 0xFFFFFFFFFD624000
	0x034C9280 LDR V0, [X12 + 0x5B8]
	0x034C9284 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9288 ADRP X10, 0xFFFFFFFFFD641000
	0x034C928C ADD X8, X8, 0xDD2
	0x034C9290 MOVZ W9, 0x11
	0x034C9294 ADD X10, X10, 0x89C
	0x034C9298 MOVZ W11, 0x36
	0x034C929C MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3944]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 54
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3944], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.Message/MessageType ovr_Message_GetType(System.IntPtr obj)

Disassembly:
	0x034C92A0 ADD X0, X31, 0x0
	0x034C92A4 STP X8, X9, [X31]
	0x034C92A8 STP X10, X11, [X31 + 0x10]
	0x034C92AC STR W13, [X31 + 0x28]
	0x034C92B0 STR D0, [X31 + 0x20]
	0x034C92B4 STRB W31, [X31 + 0x2C]
	0x034C92B8 BL 0x1C1729C
	0x034C92BC MOV X8, X0
	0x034C92C0 STR X0, [X20 + 0x70]
	0x034C92C4 MOV X0, X19
	0x034C92C8 BLR X8
	0x034C92CC LDP X20, X19, [X31 + 0x40]
	0x034C92D0 LDR X30, [X31 + 0x30]
	0x034C92D4 ADD X31, X31, 0x50
	0x034C92D8 RET
	0x034C92DC SUB X31, X31, 0x50
	0x034C92E0 STR X30, [X31 + 0x30]
	0x034C92E4 STP X20, X19, [X31 + 0x40]
	0x034C92E8 ADRP X20, 0xF16000
	0x034C92EC LDR X8, [X20 + 0x78]
	0x034C92F0 MOV X19, X0
	0x034C92F4 CBNZ X8, 0x34C9340
	0x034C92F8 ADRP X12, 0xFFFFFFFFFD624000
	0x034C92FC LDR V0, [X12 + 0x5B8]
	0x034C9300 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9304 ADRP X10, 0xFFFFFFFFFD657000
	0x034C9308 ADD X8, X8, 0xDD2
	0x034C930C MOVZ W9, 0x11
	0x034C9310 ADD X10, X10, 0x276
	0x034C9314 MOVZ W11, 0x32
	0x034C9318 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3952]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43732992
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3906
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3952], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetUser(System.IntPtr obj)

Disassembly:
	0x034C931C ADD X0, X31, 0x0
	0x034C9320 STP X8, X9, [X31]
	0x034C9324 STP X10, X11, [X31 + 0x10]
	0x034C9328 STR W13, [X31 + 0x28]
	0x034C932C STR D0, [X31 + 0x20]
	0x034C9330 STRB W31, [X31 + 0x2C]
	0x034C9334 BL 0x1C1729C
	0x034C9338 MOV X8, X0
	0x034C933C STR X0, [X20 + 0x78]
	0x034C9340 MOV X0, X19
	0x034C9344 BLR X8
	0x034C9348 LDP X20, X19, [X31 + 0x40]
	0x034C934C LDR X30, [X31 + 0x30]
	0x034C9350 ADD X31, X31, 0x50
	0x034C9354 RET
	0x034C9358 SUB X31, X31, 0x50
	0x034C935C STR X30, [X31 + 0x30]
	0x034C9360 STP X20, X19, [X31 + 0x40]
	0x034C9364 ADRP X20, 0xF16000
	0x034C9368 LDR X8, [X20 + 0x80]
	0x034C936C MOV X19, X0
	0x034C9370 CBNZ X8, 0x34C93BC
	0x034C9374 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9378 LDR V0, [X12 + 0x5B8]
	0x034C937C ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9380 ADRP X10, 0xFFFFFFFFFD65B000
	0x034C9384 ADD X8, X8, 0xDD2
	0x034C9388 MOVZ W9, 0x11
	0x034C938C ADD X10, X10, 0x3D5
	0x034C9390 MOVZ W11, 0x2E
	0x034C9394 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3960]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1317
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3960], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetUserAccountAgeCategory(System.IntPtr obj)

Disassembly:
	0x034C9398 ADD X0, X31, 0x0
	0x034C939C STP X8, X9, [X31]
	0x034C93A0 STP X10, X11, [X31 + 0x10]
	0x034C93A4 STR W13, [X31 + 0x28]
	0x034C93A8 STR D0, [X31 + 0x20]
	0x034C93AC STRB W31, [X31 + 0x2C]
	0x034C93B0 BL 0x1C1729C
	0x034C93B4 MOV X8, X0
	0x034C93B8 STR X0, [X20 + 0x80]
	0x034C93BC MOV X0, X19
	0x034C93C0 BLR X8
	0x034C93C4 LDP X20, X19, [X31 + 0x40]
	0x034C93C8 LDR X30, [X31 + 0x30]
	0x034C93CC ADD X31, X31, 0x50
	0x034C93D0 RET
	0x034C93D4 SUB X31, X31, 0x50
	0x034C93D8 STR X30, [X31 + 0x30]
	0x034C93DC STP X20, X19, [X31 + 0x40]
	0x034C93E0 ADRP X20, 0xF16000
	0x034C93E4 LDR X8, [X20 + 0x88]
	0x034C93E8 MOV X19, X0
	0x034C93EC CBNZ X8, 0x34C9438
	0x034C93F0 ADRP X12, 0xFFFFFFFFFD624000
	0x034C93F4 LDR V0, [X12 + 0x5B8]
	0x034C93F8 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C93FC ADRP X10, 0xFFFFFFFFFD643000
	0x034C9400 ADD X8, X8, 0xDD2
	0x034C9404 MOVZ W9, 0x11
	0x034C9408 ADD X10, X10, 0x46B
	0x034C940C MOVZ W11, 0x2B
	0x034C9410 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3968]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43679744
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 592
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3968], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetUserArray(System.IntPtr obj)

Disassembly:
	0x034C9414 ADD X0, X31, 0x0
	0x034C9418 STP X8, X9, [X31]
	0x034C941C STP X10, X11, [X31 + 0x10]
	0x034C9420 STR W13, [X31 + 0x28]
	0x034C9424 STR D0, [X31 + 0x20]
	0x034C9428 STRB W31, [X31 + 0x2C]
	0x034C942C BL 0x1C1729C
	0x034C9430 MOV X8, X0
	0x034C9434 STR X0, [X20 + 0x88]
	0x034C9438 MOV X0, X19
	0x034C943C BLR X8
	0x034C9440 LDP X20, X19, [X31 + 0x40]
	0x034C9444 LDR X30, [X31 + 0x30]
	0x034C9448 ADD X31, X31, 0x50
	0x034C944C RET
	0x034C9450 SUB X31, X31, 0x50
	0x034C9454 STR X30, [X31 + 0x30]
	0x034C9458 STP X20, X19, [X31 + 0x40]
	0x034C945C ADRP X20, 0xF16000
	0x034C9460 LDR X8, [X20 + 0x90]
	0x034C9464 MOV X19, X0
	0x034C9468 CBNZ X8, 0x34C94B4
	0x034C946C ADRP X12, 0xFFFFFFFFFD624000
	0x034C9470 LDR V0, [X12 + 0x5B8]
	0x034C9474 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9478 ADRP X10, 0xFFFFFFFFFD633000
	0x034C947C ADD X8, X8, 0xDD2
	0x034C9480 MOVZ W9, 0x11
	0x034C9484 ADD X10, X10, 0x889
	0x034C9488 MOVZ W11, 0x2B
	0x034C948C MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3976]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1337
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3976], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetUserCapabilityArray(System.IntPtr obj)

Disassembly:
	0x034C9490 ADD X0, X31, 0x0
	0x034C9494 STP X8, X9, [X31]
	0x034C9498 STP X10, X11, [X31 + 0x10]
	0x034C949C STR W13, [X31 + 0x28]
	0x034C94A0 STR D0, [X31 + 0x20]
	0x034C94A4 STRB W31, [X31 + 0x2C]
	0x034C94A8 BL 0x1C1729C
	0x034C94AC MOV X8, X0
	0x034C94B0 STR X0, [X20 + 0x90]
	0x034C94B4 MOV X0, X19
	0x034C94B8 BLR X8
	0x034C94BC LDP X20, X19, [X31 + 0x40]
	0x034C94C0 LDR X30, [X31 + 0x30]
	0x034C94C4 ADD X31, X31, 0x50
	0x034C94C8 RET
	0x034C94CC SUB X31, X31, 0x50
	0x034C94D0 STP X30, X21, [X31 + 0x30]
	0x034C94D4 STP X20, X19, [X31 + 0x40]
	0x034C94D8 ADRP X21, 0xF16000
	0x034C94DC LDR X8, [X21 + 0x98]
	0x034C94E0 MOV X19, X1
	0x034C94E4 MOV X20, X0
	0x034C94E8 CBNZ X8, 0x34C9534
	0x034C94EC ADRP X12, 0xFFFFFFFFFD624000
	0x034C94F0 LDR V0, [X12 + 0x5B8]
	0x034C94F4 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C94F8 ADRP X10, 0xFFFFFFFFFD650000
	0x034C94FC ADD X8, X8, 0xDD2
	0x034C9500 MOVZ W9, 0x11
	0x034C9504 ADD X10, X10, 0xF22
	0x034C9508 MOVZ W11, 0x2F

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3984]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 741
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3984], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetUserDataStoreUpdateResponse(System.IntPtr obj)

Disassembly:
	0x034C950C MOVZ W13, 0x10
	0x034C9510 ADD X0, X31, 0x0
	0x034C9514 STP X8, X9, [X31]
	0x034C9518 STP X10, X11, [X31 + 0x10]
	0x034C951C STR W13, [X31 + 0x28]
	0x034C9520 STR D0, [X31 + 0x20]
	0x034C9524 STRB W31, [X31 + 0x2C]
	0x034C9528 BL 0x1C1729C
	0x034C952C MOV X8, X0
	0x034C9530 STR X0, [X21 + 0x98]
	0x034C9534 MOV X0, X20
	0x034C9538 MOV X1, X19
	0x034C953C BLR X8
	0x034C9540 LDP X20, X19, [X31 + 0x40]
	0x034C9544 LDP X30, X21, [X31 + 0x30]
	0x034C9548 ADD X31, X31, 0x50
	0x034C954C RET
	0x034C9550 SUB X31, X31, 0x50
	0x034C9554 STR X30, [X31 + 0x30]
	0x034C9558 STP X20, X19, [X31 + 0x40]
	0x034C955C ADRP X20, 0xF16000
	0x034C9560 LDR X8, [X20 + 0xA0]
	0x034C9564 MOV X19, X0
	0x034C9568 CBNZ X8, 0x34C95B4
	0x034C956C ADRP X12, 0xFFFFFFFFFD624000
	0x034C9570 LDR V0, [X12 + 0x5B8]
	0x034C9574 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9578 ADRP X10, 0xFFFFFFFFFD62B000
	0x034C957C ADD X8, X8, 0xDD2
	0x034C9580 MOVZ W9, 0x11
	0x034C9584 ADD X10, X10, 0x7EE

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+3992]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1088
	017 Move W11, 42
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+3992], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetUserProof(System.IntPtr obj)

Disassembly:
	0x034C9588 MOVZ W11, 0x2C
	0x034C958C MOVZ W13, 0x8
	0x034C9590 ADD X0, X31, 0x0
	0x034C9594 STP X8, X9, [X31]
	0x034C9598 STP X10, X11, [X31 + 0x10]
	0x034C959C STR W13, [X31 + 0x28]
	0x034C95A0 STR D0, [X31 + 0x20]
	0x034C95A4 STRB W31, [X31 + 0x2C]
	0x034C95A8 BL 0x1C1729C
	0x034C95AC MOV X8, X0
	0x034C95B0 STR X0, [X20 + 0xA0]
	0x034C95B4 MOV X0, X19
	0x034C95B8 BLR X8
	0x034C95BC LDP X20, X19, [X31 + 0x40]
	0x034C95C0 LDR X30, [X31 + 0x30]
	0x034C95C4 ADD X31, X31, 0x50
	0x034C95C8 RET
	0x034C95CC SUB X31, X31, 0x50
	0x034C95D0 STR X30, [X31 + 0x30]
	0x034C95D4 STP X20, X19, [X31 + 0x40]
	0x034C95D8 ADRP X20, 0xF16000
	0x034C95DC LDR X8, [X20 + 0xA8]
	0x034C95E0 MOV X19, X0
	0x034C95E4 CBNZ X8, 0x34C9630
	0x034C95E8 ADRP X12, 0xFFFFFFFFFD624000
	0x034C95EC LDR V0, [X12 + 0x5B8]
	0x034C95F0 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C95F4 ADRP X10, 0xFFFFFFFFFD653000
	0x034C95F8 ADD X8, X8, 0xDD2
	0x034C95FC MOVZ W9, 0x11
	0x034C9600 ADD X10, X10, 0x3AC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+4000]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 776
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4000], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Message_GetUserReportID(System.IntPtr obj)

Disassembly:
	0x034C9604 MOVZ W11, 0x15
	0x034C9608 MOVZ W13, 0x8
	0x034C960C ADD X0, X31, 0x0
	0x034C9610 STP X8, X9, [X31]
	0x034C9614 STP X10, X11, [X31 + 0x10]
	0x034C9618 STR W13, [X31 + 0x28]
	0x034C961C STR D0, [X31 + 0x20]
	0x034C9620 STRB W31, [X31 + 0x2C]
	0x034C9624 BL 0x1C1729C
	0x034C9628 MOV X8, X0
	0x034C962C STR X0, [X20 + 0xA8]
	0x034C9630 MOV X0, X19
	0x034C9634 BLR X8
	0x034C9638 LDP X20, X19, [X31 + 0x40]
	0x034C963C LDR X30, [X31 + 0x30]
	0x034C9640 ADD X31, X31, 0x50
	0x034C9644 RET
	0x034C9648 SUB X31, X31, 0x50
	0x034C964C STR X30, [X31 + 0x30]
	0x034C9650 STP X20, X19, [X31 + 0x40]
	0x034C9654 ADRP X20, 0xF16000
	0x034C9658 LDR X8, [X20 + 0xB0]
	0x034C965C MOV X19, X0
	0x034C9660 CBNZ X8, 0x34C96AC
	0x034C9664 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9668 LDR V0, [X12 + 0x5B8]
	0x034C966C ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9670 ADRP X10, 0xFFFFFFFFFD639000
	0x034C9674 ADD X8, X8, 0xDD2
	0x034C9678 MOVZ W9, 0x11
	0x034C967C ADD X10, X10, 0x3B0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+4008]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43769856
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2138
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4008], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_Message_IsError(System.IntPtr obj)

Disassembly:
	0x034C9680 MOVZ W11, 0xF
	0x034C9684 MOVZ W13, 0x8
	0x034C9688 ADD X0, X31, 0x0
	0x034C968C STP X8, X9, [X31]
	0x034C9690 STP X10, X11, [X31 + 0x10]
	0x034C9694 STR W13, [X31 + 0x28]
	0x034C9698 STR D0, [X31 + 0x20]
	0x034C969C STRB W31, [X31 + 0x2C]
	0x034C96A0 BL 0x1C1729C
	0x034C96A4 MOV X8, X0
	0x034C96A8 STR X0, [X20 + 0xB0]
	0x034C96AC MOV X0, X19
	0x034C96B0 BLR X8
	0x034C96B4 LDP X20, X19, [X31 + 0x40]
	0x034C96B8 LDR X30, [X31 + 0x30]
	0x034C96BC ADD X31, X31, 0x50
	0x034C96C0 RET
	0x034C96C4 SUB X31, X31, 0x50
	0x034C96C8 STR X30, [X31 + 0x30]
	0x034C96CC STP X20, X19, [X31 + 0x40]
	0x034C96D0 ADRP X20, 0xF16000
	0x034C96D4 LDR X8, [X20 + 0xB8]
	0x034C96D8 MOV X19, X0
	0x034C96DC CBNZ X8, 0x34C9728
	0x034C96E0 ADRP X12, 0xFFFFFFFFFD624000
	0x034C96E4 LDR V0, [X12 + 0x5B8]
	0x034C96E8 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C96EC ADRP X10, 0xFFFFFFFFFD65B000
	0x034C96F0 ADD X8, X8, 0xDD2
	0x034C96F4 MOVZ W9, 0x11
	0x034C96F8 ADD X10, X10, 0x404
	0x034C96FC MOVZ W11, 0x13
	0x034C9700 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+4016]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43753472
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1312
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4016], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.UIntPtr ovr_Microphone_GetNumSamplesAvailable(System.IntPtr obj)

Disassembly:
	0x034C9704 ADD X0, X31, 0x0
	0x034C9708 STP X8, X9, [X31]
	0x034C970C STP X10, X11, [X31 + 0x10]
	0x034C9710 STR W13, [X31 + 0x28]
	0x034C9714 STR D0, [X31 + 0x20]
	0x034C9718 STRB W31, [X31 + 0x2C]
	0x034C971C BL 0x1C1729C
	0x034C9720 MOV X8, X0
	0x034C9724 STR X0, [X20 + 0xB8]
	0x034C9728 MOV X0, X19
	0x034C972C BLR X8
	0x034C9730 LDP X20, X19, [X31 + 0x40]
	0x034C9734 LDR X30, [X31 + 0x30]
	0x034C9738 ADD X31, X31, 0x50
	0x034C973C RET
	0x034C9740 SUB X31, X31, 0x50
	0x034C9744 STR X30, [X31 + 0x30]
	0x034C9748 STP X20, X19, [X31 + 0x40]
	0x034C974C ADRP X20, 0xF16000
	0x034C9750 LDR X8, [X20 + 0xC0]
	0x034C9754 MOV X19, X0
	0x034C9758 CBNZ X8, 0x34C97A4
	0x034C975C ADRP X12, 0xFFFFFFFFFD624000
	0x034C9760 LDR V0, [X12 + 0x5B8]
	0x034C9764 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9768 ADRP X10, 0xFFFFFFFFFD63F000
	0x034C976C ADD X8, X8, 0xDD2
	0x034C9770 MOVZ W9, 0x11
	0x034C9774 ADD X10, X10, 0x61B
	0x034C9778 MOVZ W11, 0x16
	0x034C977C MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+4024]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43737088
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 388
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4024], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_Microphone_GetOutputBufferMaxSize(System.IntPtr obj)

Disassembly:
	0x034C9780 ADD X0, X31, 0x0
	0x034C9784 STP X8, X9, [X31]
	0x034C9788 STP X10, X11, [X31 + 0x10]
	0x034C978C STR W13, [X31 + 0x28]
	0x034C9790 STR D0, [X31 + 0x20]
	0x034C9794 STRB W31, [X31 + 0x2C]
	0x034C9798 BL 0x1C1729C
	0x034C979C MOV X8, X0
	0x034C97A0 STR X0, [X20 + 0xC0]
	0x034C97A4 MOV X0, X19
	0x034C97A8 BLR X8
	0x034C97AC LDP X20, X19, [X31 + 0x40]
	0x034C97B0 LDR X30, [X31 + 0x30]
	0x034C97B4 ADD X31, X31, 0x50
	0x034C97B8 RET
	0x034C97BC SUB X31, X31, 0x50
	0x034C97C0 STR X30, [X31 + 0x30]
	0x034C97C4 STP X20, X19, [X31 + 0x40]
	0x034C97C8 ADRP X20, 0xF16000
	0x034C97CC LDR X8, [X20 + 0xC8]
	0x034C97D0 MOV X19, X0
	0x034C97D4 CBNZ X8, 0x34C9820
	0x034C97D8 ADRP X12, 0xFFFFFFFFFD624000
	0x034C97DC LDR V0, [X12 + 0x5B8]
	0x034C97E0 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C97E4 ADRP X10, 0xFFFFFFFFFD63F000
	0x034C97E8 ADD X8, X8, 0xDD2
	0x034C97EC MOVZ W9, 0x11
	0x034C97F0 ADD X10, X10, 0x632
	0x034C97F4 MOVZ W11, 0x12
	0x034C97F8 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+4032]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43769856
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2166
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4032], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_Microphone_GetPCM(System.IntPtr obj, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034C97FC ADD X0, X31, 0x0
	0x034C9800 STP X8, X9, [X31]
	0x034C9804 STP X10, X11, [X31 + 0x10]
	0x034C9808 STR W13, [X31 + 0x28]
	0x034C980C STR D0, [X31 + 0x20]
	0x034C9810 STRB W31, [X31 + 0x2C]
	0x034C9814 BL 0x1C1729C
	0x034C9818 MOV X8, X0
	0x034C981C STR X0, [X20 + 0xC8]
	0x034C9820 MOV X0, X19
	0x034C9824 BLR X8
	0x034C9828 LDP X20, X19, [X31 + 0x40]
	0x034C982C LDR X30, [X31 + 0x30]
	0x034C9830 ADD X31, X31, 0x50
	0x034C9834 RET
	0x034C9838 SUB X31, X31, 0x50
	0x034C983C STR X30, [X31 + 0x30]
	0x034C9840 STP X20, X19, [X31 + 0x40]
	0x034C9844 ADRP X20, 0xF16000
	0x034C9848 LDR X8, [X20 + 0xD0]
	0x034C984C MOV X19, X0
	0x034C9850 CBNZ X8, 0x34C989C
	0x034C9854 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9858 LDR V0, [X12 + 0x5B8]
	0x034C985C ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9860 ADRP X10, 0xFFFFFFFFFD62D000
	0x034C9864 ADD X8, X8, 0xDD2
	0x034C9868 MOVZ W9, 0x11
	0x034C986C ADD X10, X10, 0x7DB
	0x034C9870 MOVZ W11, 0xF
	0x034C9874 MOVZ W13, 0x8
	0x034C9878 ADD X0, X31, 0x0
	0x034C987C STP X8, X9, [X31]
	0x034C9880 STP X10, X11, [X31 + 0x10]
	0x034C9884 STR W13, [X31 + 0x28]
	0x034C9888 STR D0, [X31 + 0x20]
	0x034C988C STRB W31, [X31 + 0x2C]
	0x034C9890 BL 0x1C1729C
	0x034C9894 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF16000
	008 Move X8, [X22+4040]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43888640
	015 Move V0, [X12+1464]
	016 Move X8, -43732992
	017 Move X10, -43859968
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1946
	021 Move W11, 21
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+4040], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.UIntPtr ovr_Microphone_GetPCMFloat(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)

Disassembly:
	0x034C9898 STR X0, [X20 + 0xD0]
	0x034C989C MOV X0, X19
	0x034C98A0 BLR X8
	0x034C98A4 LDP X20, X19, [X31 + 0x40]
	0x034C98A8 LDR X30, [X31 + 0x30]
	0x034C98AC ADD X31, X31, 0x50
	0x034C98B0 RET
	0x034C98B4 SUB X31, X31, 0x50
	0x034C98B8 STR X30, [X31 + 0x30]
	0x034C98BC STP X20, X19, [X31 + 0x40]
	0x034C98C0 ADRP X20, 0xF16000
	0x034C98C4 LDR X8, [X20 + 0xD8]
	0x034C98C8 MOV X19, X0
	0x034C98CC CBNZ X8, 0x34C9918
	0x034C98D0 ADRP X12, 0xFFFFFFFFFD624000
	0x034C98D4 LDR V0, [X12 + 0x5B8]
	0x034C98D8 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C98DC ADRP X10, 0xFFFFFFFFFD63F000
	0x034C98E0 ADD X8, X8, 0xDD2
	0x034C98E4 MOVZ W9, 0x11
	0x034C98E8 ADD X10, X10, 0x645
	0x034C98EC MOVZ W11, 0x19
	0x034C98F0 MOVZ W13, 0x8
	0x034C98F4 ADD X0, X31, 0x0
	0x034C98F8 STP X8, X9, [X31]
	0x034C98FC STP X10, X11, [X31 + 0x10]
	0x034C9900 STR W13, [X31 + 0x28]
	0x034C9904 STR D0, [X31 + 0x20]
	0x034C9908 STRB W31, [X31 + 0x2C]
	0x034C990C BL 0x1C1729C
	0x034C9910 MOV X8, X0
	0x034C9914 STR X0, [X20 + 0xD8]
	0x034C9918 MOV X0, X19
	0x034C991C BLR X8
	0x034C9920 LDP X20, X19, [X31 + 0x40]
	0x034C9924 LDR X30, [X31 + 0x30]
	0x034C9928 ADD X31, X31, 0x50
	0x034C992C RET
	0x034C9930 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF16000
	008 Move X8, [X22+4048]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43888640
	015 Move V0, [X12+1464]
	016 Move X8, -43732992
	017 Move X10, -43859968
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1968
	021 Move W11, 26
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+4048], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.UIntPtr ovr_Microphone_ReadData(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)

Disassembly:
	0x034C9934 STR X30, [X31 + 0x30]
	0x034C9938 STP X20, X19, [X31 + 0x40]
	0x034C993C ADRP X20, 0xF16000
	0x034C9940 LDR X8, [X20 + 0xE0]
	0x034C9944 MOV X19, X0
	0x034C9948 CBNZ X8, 0x34C9994
	0x034C994C ADRP X12, 0xFFFFFFFFFD624000
	0x034C9950 LDR V0, [X12 + 0x5B8]
	0x034C9954 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9958 ADRP X10, 0xFFFFFFFFFD63D000
	0x034C995C ADD X8, X8, 0xDD2
	0x034C9960 MOVZ W9, 0x11
	0x034C9964 ADD X10, X10, 0x649
	0x034C9968 MOVZ W11, 0x13
	0x034C996C MOVZ W13, 0x8
	0x034C9970 ADD X0, X31, 0x0
	0x034C9974 STP X8, X9, [X31]
	0x034C9978 STP X10, X11, [X31 + 0x10]
	0x034C997C STR W13, [X31 + 0x28]
	0x034C9980 STR D0, [X31 + 0x20]
	0x034C9984 STRB W31, [X31 + 0x2C]
	0x034C9988 BL 0x1C1729C
	0x034C998C MOV X8, X0
	0x034C9990 STR X0, [X20 + 0xE0]
	0x034C9994 MOV X0, X19
	0x034C9998 BLR X8
	0x034C999C LDP X20, X19, [X31 + 0x40]
	0x034C99A0 LDR X30, [X31 + 0x30]
	0x034C99A4 ADD X31, X31, 0x50
	0x034C99A8 RET
	0x034C99AC SUB X31, X31, 0x50
	0x034C99B0 STR X30, [X31 + 0x30]
	0x034C99B4 STP X20, X19, [X31 + 0x40]
	0x034C99B8 ADRP X20, 0xF16000
	0x034C99BC LDR X8, [X20 + 0xE8]
	0x034C99C0 MOV X19, X0
	0x034C99C4 CBNZ X8, 0x34C9A10
	0x034C99C8 ADRP X12, 0xFFFFFFFFFD624000
	0x034C99CC LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF16000
	008 Move X8, [X22+4056]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43888640
	015 Move V0, [X12+1464]
	016 Move X8, -43732992
	017 Move X10, -43843584
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 1904
	021 Move W11, 23
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+4056], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.Void ovr_Microphone_SetAcceptableRecordingDelayHint(System.IntPtr obj, System.UIntPtr delayMs)

Disassembly:
	0x034C99D0 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C99D4 ADRP X10, 0xFFFFFFFFFD64C000
	0x034C99D8 ADD X8, X8, 0xDD2
	0x034C99DC MOVZ W9, 0x11
	0x034C99E0 ADD X10, X10, 0xD8D
	0x034C99E4 MOVZ W11, 0x12
	0x034C99E8 MOVZ W13, 0x8
	0x034C99EC ADD X0, X31, 0x0
	0x034C99F0 STP X8, X9, [X31]
	0x034C99F4 STP X10, X11, [X31 + 0x10]
	0x034C99F8 STR W13, [X31 + 0x28]
	0x034C99FC STR D0, [X31 + 0x20]
	0x034C9A00 STRB W31, [X31 + 0x2C]
	0x034C9A04 BL 0x1C1729C
	0x034C9A08 MOV X8, X0
	0x034C9A0C STR X0, [X20 + 0xE8]
	0x034C9A10 MOV X0, X19
	0x034C9A14 BLR X8
	0x034C9A18 LDP X20, X19, [X31 + 0x40]
	0x034C9A1C LDR X30, [X31 + 0x30]
	0x034C9A20 ADD X31, X31, 0x50
	0x034C9A24 RET
	0x034C9A28 SUB X31, X31, 0x50
	0x034C9A2C STR X30, [X31 + 0x30]
	0x034C9A30 STP X20, X19, [X31 + 0x40]
	0x034C9A34 ADRP X20, 0xF16000
	0x034C9A38 LDR X8, [X20 + 0xF0]
	0x034C9A3C MOV X19, X0
	0x034C9A40 CBNZ X8, 0x34C9A88
	0x034C9A44 ADRP X11, 0xFFFFFFFFFD624000
	0x034C9A48 LDR V0, [X11 + 0x5B8]
	0x034C9A4C ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9A50 ADRP X10, 0xFFFFFFFFFD62D000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF16000
	007 Move X8, [X21+4064]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43888640
	013 Move V0, [X12+1464]
	014 Move X8, -43732992
	015 Move X10, -43696128
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 801
	019 Move W11, 46
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+4064], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_Microphone_Start(System.IntPtr obj)

Disassembly:
	0x034C9A54 ADD X8, X8, 0xDD2
	0x034C9A58 MOVZ W9, 0x11
	0x034C9A5C ADD X10, X10, 0x7EB
	0x034C9A60 MOVZ W12, 0x8
	0x034C9A64 ADD X0, X31, 0x0
	0x034C9A68 STP X8, X9, [X31]
	0x034C9A6C STP X10, X9, [X31 + 0x10]
	0x034C9A70 STR W12, [X31 + 0x28]
	0x034C9A74 STR D0, [X31 + 0x20]
	0x034C9A78 STRB W31, [X31 + 0x2C]
	0x034C9A7C BL 0x1C1729C
	0x034C9A80 MOV X8, X0
	0x034C9A84 STR X0, [X20 + 0xF0]
	0x034C9A88 MOV X0, X19
	0x034C9A8C BLR X8
	0x034C9A90 LDP X20, X19, [X31 + 0x40]
	0x034C9A94 LDR X30, [X31 + 0x30]
	0x034C9A98 ADD X31, X31, 0x50
	0x034C9A9C RET
	0x034C9AA0 SUB X31, X31, 0x50
	0x034C9AA4 STR X30, [X31 + 0x30]
	0x034C9AA8 STP X20, X19, [X31 + 0x40]
	0x034C9AAC ADRP X20, 0xF16000
	0x034C9AB0 LDR X8, [X20 + 0xF8]
	0x034C9AB4 MOV X19, X0
	0x034C9AB8 CBNZ X8, 0x34C9B04
	0x034C9ABC ADRP X12, 0xFFFFFFFFFD624000
	0x034C9AC0 LDR V0, [X12 + 0x5B8]
	0x034C9AC4 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9AC8 ADRP X10, 0xFFFFFFFFFD655000
	0x034C9ACC ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+4072]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43651072
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3698
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4072], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_Microphone_Stop(System.IntPtr obj)

Disassembly:
	0x034C9AD0 MOVZ W9, 0x11
	0x034C9AD4 ADD X10, X10, 0x55
	0x034C9AD8 MOVZ W11, 0x25
	0x034C9ADC MOVZ W13, 0x8
	0x034C9AE0 ADD X0, X31, 0x0
	0x034C9AE4 STP X8, X9, [X31]
	0x034C9AE8 STP X10, X11, [X31 + 0x10]
	0x034C9AEC STR W13, [X31 + 0x28]
	0x034C9AF0 STR D0, [X31 + 0x20]
	0x034C9AF4 STRB W31, [X31 + 0x2C]
	0x034C9AF8 BL 0x1C1729C
	0x034C9AFC MOV X8, X0
	0x034C9B00 STR X0, [X20 + 0xF8]
	0x034C9B04 MOV X0, X19
	0x034C9B08 BLR X8
	0x034C9B0C LDP X20, X19, [X31 + 0x40]
	0x034C9B10 LDR X30, [X31 + 0x30]
	0x034C9B14 ADD X31, X31, 0x50
	0x034C9B18 RET
	0x034C9B1C SUB X31, X31, 0x50
	0x034C9B20 STR X30, [X31 + 0x30]
	0x034C9B24 STP X20, X19, [X31 + 0x40]
	0x034C9B28 ADRP X20, 0xF16000
	0x034C9B2C LDR X8, [X20 + 0x100]
	0x034C9B30 MOV X19, X0
	0x034C9B34 CBNZ X8, 0x34C9B80
	0x034C9B38 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9B3C LDR V0, [X12 + 0x5B8]
	0x034C9B40 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9B44 ADRP X10, 0xFFFFFFFFFD629000
	0x034C9B48 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+4080]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43827200
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2165
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4080], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Boolean ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable(System.IntPtr obj)

Disassembly:
	0x034C9B4C MOVZ W9, 0x11
	0x034C9B50 ADD X10, X10, 0x849
	0x034C9B54 MOVZ W11, 0x26
	0x034C9B58 MOVZ W13, 0x8
	0x034C9B5C ADD X0, X31, 0x0
	0x034C9B60 STP X8, X9, [X31]
	0x034C9B64 STP X10, X11, [X31 + 0x10]
	0x034C9B68 STR W13, [X31 + 0x28]
	0x034C9B6C STR D0, [X31 + 0x20]
	0x034C9B70 STRB W31, [X31 + 0x2C]
	0x034C9B74 BL 0x1C1729C
	0x034C9B78 MOV X8, X0
	0x034C9B7C STR X0, [X20 + 0x100]
	0x034C9B80 MOV X0, X19
	0x034C9B84 BLR X8
	0x034C9B88 LDP X20, X19, [X31 + 0x40]
	0x034C9B8C LDR X30, [X31 + 0x30]
	0x034C9B90 ADD X31, X31, 0x50
	0x034C9B94 RET
	0x034C9B98 SUB X31, X31, 0x50
	0x034C9B9C STR X30, [X31 + 0x30]
	0x034C9BA0 STP X20, X19, [X31 + 0x40]
	0x034C9BA4 ADRP X20, 0xF16000
	0x034C9BA8 LDR X8, [X20 + 0x108]
	0x034C9BAC MOV X19, X0
	0x034C9BB0 CBNZ X8, 0x34C9BFC
	0x034C9BB4 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9BB8 LDR V0, [X12 + 0x5B8]
	0x034C9BBC ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9BC0 ADRP X10, 0xFFFFFFFFFD650000
	0x034C9BC4 ADD X8, X8, 0xDD2
	0x034C9BC8 MOVZ W9, 0x11
	0x034C9BCC ADD X10, X10, 0xF52

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+4088]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2123
	017 Move W11, 54
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+4088], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Int64 ovr_NetSyncConnection_GetConnectionId(System.IntPtr obj)

Disassembly:
	0x034C9BD0 MOVZ W11, 0x27
	0x034C9BD4 MOVZ W13, 0x8
	0x034C9BD8 ADD X0, X31, 0x0
	0x034C9BDC STP X8, X9, [X31]
	0x034C9BE0 STP X10, X11, [X31 + 0x10]
	0x034C9BE4 STR W13, [X31 + 0x28]
	0x034C9BE8 STR D0, [X31 + 0x20]
	0x034C9BEC STRB W31, [X31 + 0x2C]
	0x034C9BF0 BL 0x1C1729C
	0x034C9BF4 MOV X8, X0
	0x034C9BF8 STR X0, [X20 + 0x108]
	0x034C9BFC MOV X0, X19
	0x034C9C00 BLR X8
	0x034C9C04 LDP X20, X19, [X31 + 0x40]
	0x034C9C08 LDR X30, [X31 + 0x30]
	0x034C9C0C ADD X31, X31, 0x50
	0x034C9C10 RET
	0x034C9C14 STP X30, X21, [X31 - 0x20]!
	0x034C9C18 STP X20, X19, [X31 + 0x10]
	0x034C9C1C ADRP X20, 0xF16000
	0x034C9C20 ADRP X21, 0xC69000
	0x034C9C24 LDRB W8, [X20 + 0x110]
	0x034C9C28 LDR X21, [X21 + 0x328]
	0x034C9C2C MOV X19, X0
	0x034C9C30 TBNZ X8, 0x0, 0x34C9C48
	0x034C9C34 ADRP X0, 0xC69000
	0x034C9C38 LDR X0, [X0 + 0x328]
	0x034C9C3C BL 0x1C16CF4
	0x034C9C40 MOVZ W8, 0x1
	0x034C9C44 STRB W8, [X20 + 0x110]
	0x034C9C48 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43810816
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 886
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(System.IntPtr obj)

Disassembly:
	0x034C9C4C LDR W8, [X0 + 0xE0]
	0x034C9C50 CBNZ W8, 0x34C9C58
	0x034C9C54 BL 0x1C16DFC
	0x034C9C58 MOV X0, X19
	0x034C9C5C BL 0x34C9C6C
	0x034C9C60 LDP X20, X19, [X31 + 0x10]
	0x034C9C64 LDP X30, X21, [X31], #0x20
	0x034C9C68 B 0x34B3B78
	0x034C9C6C SUB X31, X31, 0x50
	0x034C9C70 STR X30, [X31 + 0x30]
	0x034C9C74 STP X20, X19, [X31 + 0x40]
	0x034C9C78 ADRP X20, 0xF16000
	0x034C9C7C LDR X8, [X20 + 0x118]
	0x034C9C80 MOV X19, X0
	0x034C9C84 CBNZ X8, 0x34C9CD0
	0x034C9C88 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9C8C LDR V0, [X12 + 0x5B8]
	0x034C9C90 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9C94 ADRP X10, 0xFFFFFFFFFD660000
	0x034C9C98 ADD X8, X8, 0xDD2
	0x034C9C9C MOVZ W9, 0x11
	0x034C9CA0 ADD X10, X10, 0xE2D
	0x034C9CA4 MOVZ W11, 0x2E
	0x034C9CA8 MOVZ W13, 0x8
	0x034C9CAC ADD X0, X31, 0x0
	0x034C9CB0 STP X8, X9, [X31]
	0x034C9CB4 STP X10, X11, [X31 + 0x10]
	0x034C9CB8 STR W13, [X31 + 0x28]
	0x034C9CBC STR D0, [X31 + 0x20]
	0x034C9CC0 STRB W31, [X31 + 0x2C]
	0x034C9CC4 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+8]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43671552
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1404
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+8], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_NetSyncConnection_GetSessionId(System.IntPtr obj)

Disassembly:
	0x034C9CC8 MOV X8, X0
	0x034C9CCC STR X0, [X20 + 0x118]
	0x034C9CD0 MOV X0, X19
	0x034C9CD4 BLR X8
	0x034C9CD8 LDP X20, X19, [X31 + 0x40]
	0x034C9CDC LDR X30, [X31 + 0x30]
	0x034C9CE0 ADD X31, X31, 0x50
	0x034C9CE4 RET
	0x034C9CE8 STP X30, X21, [X31 - 0x20]!
	0x034C9CEC STP X20, X19, [X31 + 0x10]
	0x034C9CF0 ADRP X20, 0xF16000
	0x034C9CF4 ADRP X21, 0xC69000
	0x034C9CF8 LDRB W8, [X20 + 0x120]
	0x034C9CFC LDR X21, [X21 + 0x328]
	0x034C9D00 MOV X19, X0
	0x034C9D04 TBNZ X8, 0x0, 0x34C9D1C
	0x034C9D08 ADRP X0, 0xC69000
	0x034C9D0C LDR X0, [X0 + 0x328]
	0x034C9D10 BL 0x1C16CF4
	0x034C9D14 MOVZ W8, 0x1
	0x034C9D18 STRB W8, [X20 + 0x120]
	0x034C9D1C LDR X0, [X21]
	0x034C9D20 LDR W8, [X0 + 0xE0]
	0x034C9D24 CBNZ W8, 0x34C9D2C
	0x034C9D28 BL 0x1C16DFC
	0x034C9D2C MOV X0, X19
	0x034C9D30 BL 0x34C9D40
	0x034C9D34 LDP X20, X19, [X31 + 0x10]
	0x034C9D38 LDP X30, X21, [X31], #0x20
	0x034C9D3C B 0x34B3B78
	0x034C9D40 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+16]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43843584
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1928
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+16], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(System.IntPtr obj)

Disassembly:
	0x034C9D44 STR X30, [X31 + 0x30]
	0x034C9D48 STP X20, X19, [X31 + 0x40]
	0x034C9D4C ADRP X20, 0xF16000
	0x034C9D50 LDR X8, [X20 + 0x128]
	0x034C9D54 MOV X19, X0
	0x034C9D58 CBNZ X8, 0x34C9DA4
	0x034C9D5C ADRP X12, 0xFFFFFFFFFD624000
	0x034C9D60 LDR V0, [X12 + 0x5B8]
	0x034C9D64 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9D68 ADRP X10, 0xFFFFFFFFFD64E000
	0x034C9D6C ADD X8, X8, 0xDD2
	0x034C9D70 MOVZ W9, 0x11
	0x034C9D74 ADD X10, X10, 0xE96
	0x034C9D78 MOVZ W11, 0x28
	0x034C9D7C MOVZ W13, 0x8
	0x034C9D80 ADD X0, X31, 0x0
	0x034C9D84 STP X8, X9, [X31]
	0x034C9D88 STP X10, X11, [X31 + 0x10]
	0x034C9D8C STR W13, [X31 + 0x28]
	0x034C9D90 STR D0, [X31 + 0x20]
	0x034C9D94 STRB W31, [X31 + 0x2C]
	0x034C9D98 BL 0x1C1729C
	0x034C9D9C MOV X8, X0
	0x034C9DA0 STR X0, [X20 + 0x128]
	0x034C9DA4 MOV X0, X19
	0x034C9DA8 BLR X8
	0x034C9DAC LDP X20, X19, [X31 + 0x40]
	0x034C9DB0 LDR X30, [X31 + 0x30]
	0x034C9DB4 ADD X31, X31, 0x50
	0x034C9DB8 RET
	0x034C9DBC SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+24]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 848
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+24], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_NetSyncConnection_GetZoneId(System.IntPtr obj)

Disassembly:
	0x034C9DC0 STR X30, [X31 + 0x30]
	0x034C9DC4 STP X20, X19, [X31 + 0x40]
	0x034C9DC8 ADRP X20, 0xF16000
	0x034C9DCC LDR X8, [X20 + 0x130]
	0x034C9DD0 MOV X19, X0
	0x034C9DD4 CBNZ X8, 0x34C9E20
	0x034C9DD8 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9DDC LDR V0, [X12 + 0x5B8]
	0x034C9DE0 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9DE4 ADRP X10, 0xFFFFFFFFFD62F000
	0x034C9DE8 ADD X8, X8, 0xDD2
	0x034C9DEC MOVZ W9, 0x11
	0x034C9DF0 ADD X10, X10, 0x7AB
	0x034C9DF4 MOVZ W11, 0x25
	0x034C9DF8 MOVZ W13, 0x8
	0x034C9DFC ADD X0, X31, 0x0
	0x034C9E00 STP X8, X9, [X31]
	0x034C9E04 STP X10, X11, [X31 + 0x10]
	0x034C9E08 STR W13, [X31 + 0x28]
	0x034C9E0C STR D0, [X31 + 0x20]
	0x034C9E10 STRB W31, [X31 + 0x2C]
	0x034C9E14 BL 0x1C1729C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF17000
	006 Move X21, 0xC6A000
	007 Move W8, [X20+32]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC6A000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+32], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_NetSyncConnection_GetZoneId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_NetSyncConnection_GetZoneId_Native(System.IntPtr obj)

Disassembly:
	0x034C9E18 MOV X8, X0
	0x034C9E1C STR X0, [X20 + 0x130]
	0x034C9E20 MOV X0, X19
	0x034C9E24 BLR X8
	0x034C9E28 LDP X20, X19, [X31 + 0x40]
	0x034C9E2C LDR X30, [X31 + 0x30]
	0x034C9E30 ADD X31, X31, 0x50
	0x034C9E34 RET
	0x034C9E38 STP X30, X21, [X31 - 0x20]!
	0x034C9E3C STP X20, X19, [X31 + 0x10]
	0x034C9E40 ADRP X20, 0xF16000
	0x034C9E44 ADRP X21, 0xC69000
	0x034C9E48 LDRB W8, [X20 + 0x138]
	0x034C9E4C LDR X21, [X21 + 0x328]
	0x034C9E50 MOV X19, X0
	0x034C9E54 TBNZ X8, 0x0, 0x34C9E6C
	0x034C9E58 ADRP X0, 0xC69000
	0x034C9E5C LDR X0, [X0 + 0x328]
	0x034C9E60 BL 0x1C16CF4
	0x034C9E64 MOVZ W8, 0x1
	0x034C9E68 STRB W8, [X20 + 0x138]
	0x034C9E6C LDR X0, [X21]
	0x034C9E70 LDR W8, [X0 + 0xE0]
	0x034C9E74 CBNZ W8, 0x34C9E7C
	0x034C9E78 BL 0x1C16DFC
	0x034C9E7C MOV X0, X19
	0x034C9E80 BL 0x34C9E90
	0x034C9E84 LDP X20, X19, [X31 + 0x10]
	0x034C9E88 LDP X30, X21, [X31], #0x20
	0x034C9E8C B 0x34B3B78
	0x034C9E90 SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+40]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 880
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+40], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_NetSyncSession_GetConnectionId(System.IntPtr obj)

Disassembly:
	0x034C9E94 STR X30, [X31 + 0x30]
	0x034C9E98 STP X20, X19, [X31 + 0x40]
	0x034C9E9C ADRP X20, 0xF16000
	0x034C9EA0 LDR X8, [X20 + 0x140]
	0x034C9EA4 MOV X19, X0
	0x034C9EA8 CBNZ X8, 0x34C9EF4
	0x034C9EAC ADRP X12, 0xFFFFFFFFFD624000
	0x034C9EB0 LDR V0, [X12 + 0x5B8]
	0x034C9EB4 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9EB8 ADRP X10, 0xFFFFFFFFFD63F000
	0x034C9EBC ADD X8, X8, 0xDD2
	0x034C9EC0 MOVZ W9, 0x11
	0x034C9EC4 ADD X10, X10, 0x65F
	0x034C9EC8 MOVZ W11, 0x27
	0x034C9ECC MOVZ W13, 0x8
	0x034C9ED0 ADD X0, X31, 0x0
	0x034C9ED4 STP X8, X9, [X31]
	0x034C9ED8 STP X10, X11, [X31 + 0x10]
	0x034C9EDC STR W13, [X31 + 0x28]
	0x034C9EE0 STR D0, [X31 + 0x20]
	0x034C9EE4 STRB W31, [X31 + 0x2C]
	0x034C9EE8 BL 0x1C1729C
	0x034C9EEC MOV X8, X0
	0x034C9EF0 STR X0, [X20 + 0x140]
	0x034C9EF4 MOV X0, X19
	0x034C9EF8 BLR X8
	0x034C9EFC LDP X20, X19, [X31 + 0x40]
	0x034C9F00 LDR X30, [X31 + 0x30]
	0x034C9F04 ADD X31, X31, 0x50
	0x034C9F08 RET
	0x034C9F0C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+48]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43655168
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1104
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+48], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_NetSyncSession_GetMuted(System.IntPtr obj)

Disassembly:
	0x034C9F10 STP X20, X19, [X31 + 0x10]
	0x034C9F14 ADRP X20, 0xF16000
	0x034C9F18 ADRP X21, 0xC69000
	0x034C9F1C LDRB W8, [X20 + 0x148]
	0x034C9F20 LDR X21, [X21 + 0x328]
	0x034C9F24 MOV X19, X0
	0x034C9F28 TBNZ X8, 0x0, 0x34C9F40
	0x034C9F2C ADRP X0, 0xC69000
	0x034C9F30 LDR X0, [X0 + 0x328]
	0x034C9F34 BL 0x1C16CF4
	0x034C9F38 MOVZ W8, 0x1
	0x034C9F3C STRB W8, [X20 + 0x148]
	0x034C9F40 LDR X0, [X21]
	0x034C9F44 LDR W8, [X0 + 0xE0]
	0x034C9F48 CBNZ W8, 0x34C9F50
	0x034C9F4C BL 0x1C16DFC
	0x034C9F50 MOV X0, X19
	0x034C9F54 BL 0x34C9F64
	0x034C9F58 LDP X20, X19, [X31 + 0x10]
	0x034C9F5C LDP X30, X21, [X31], #0x20
	0x034C9F60 B 0x34B3B78
	0x034C9F64 SUB X31, X31, 0x50
	0x034C9F68 STR X30, [X31 + 0x30]
	0x034C9F6C STP X20, X19, [X31 + 0x40]
	0x034C9F70 ADRP X20, 0xF16000
	0x034C9F74 LDR X8, [X20 + 0x150]
	0x034C9F78 MOV X19, X0
	0x034C9F7C CBNZ X8, 0x34C9FC8
	0x034C9F80 ADRP X12, 0xFFFFFFFFFD624000
	0x034C9F84 LDR V0, [X12 + 0x5B8]
	0x034C9F88 ADRP X8, 0xFFFFFFFFFD64A000
	0x034C9F8C ADRP X10, 0xFFFFFFFFFD64E000
	0x034C9F90 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+56]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 912
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+56], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.UInt64 ovr_NetSyncSession_GetSessionId(System.IntPtr obj)

Disassembly:
	0x034C9F94 MOVZ W9, 0x11
	0x034C9F98 ADD X10, X10, 0xEBF
	0x034C9F9C MOVZ W11, 0xD
	0x034C9FA0 MOVZ W13, 0x8
	0x034C9FA4 ADD X0, X31, 0x0
	0x034C9FA8 STP X8, X9, [X31]
	0x034C9FAC STP X10, X11, [X31 + 0x10]
	0x034C9FB0 STR W13, [X31 + 0x28]
	0x034C9FB4 STR D0, [X31 + 0x20]
	0x034C9FB8 STRB W31, [X31 + 0x2C]
	0x034C9FBC BL 0x1C1729C
	0x034C9FC0 MOV X8, X0
	0x034C9FC4 STR X0, [X20 + 0x150]
	0x034C9FC8 MOV X0, X19
	0x034C9FCC BLR X8
	0x034C9FD0 LDP X20, X19, [X31 + 0x40]
	0x034C9FD4 LDR X30, [X31 + 0x30]
	0x034C9FD8 ADD X31, X31, 0x50
	0x034C9FDC RET
	0x034C9FE0 SUB X31, X31, 0x50
	0x034C9FE4 STP X30, X21, [X31 + 0x30]
	0x034C9FE8 STP X20, X19, [X31 + 0x40]
	0x034C9FEC ADRP X21, 0xF16000
	0x034C9FF0 LDR X8, [X21 + 0x158]
	0x034C9FF4 MOV X19, X1
	0x034C9FF8 MOV X20, X0
	0x034C9FFC CBNZ X8, 0x34CA048
	0x034CA000 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA004 LDR V0, [X12 + 0x5B8]
	0x034CA008 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA00C ADRP X10, 0xFFFFFFFFFD638000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF17000
	006 Move X8, [X20+64]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43888640
	011 Move V0, [X12+1464]
	012 Move X8, -43732992
	013 Move X10, -43745280
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1440
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+64], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_NetSyncSession_GetUserId(System.IntPtr obj)

Disassembly:
	0x034CA010 ADD X8, X8, 0xDD2
	0x034CA014 MOVZ W9, 0x11
	0x034CA018 ADD X10, X10, 0x3C0
	0x034CA01C MOVZ W11, 0x17
	0x034CA020 MOVZ W13, 0x10
	0x034CA024 ADD X0, X31, 0x0
	0x034CA028 STP X8, X9, [X31]
	0x034CA02C STP X10, X11, [X31 + 0x10]
	0x034CA030 STR W13, [X31 + 0x28]
	0x034CA034 STR D0, [X31 + 0x20]
	0x034CA038 STRB W31, [X31 + 0x2C]
	0x034CA03C BL 0x1C1729C
	0x034CA040 MOV X8, X0
	0x034CA044 STR X0, [X21 + 0x158]
	0x034CA048 MOV X0, X20
	0x034CA04C MOV X1, X19
	0x034CA050 BLR X8
	0x034CA054 LDP X20, X19, [X31 + 0x40]
	0x034CA058 LDP X30, X21, [X31 + 0x30]
	0x034CA05C ADD X31, X31, 0x50
	0x034CA060 RET
	0x034CA064 SUB X31, X31, 0x50
	0x034CA068 STR X30, [X31 + 0x30]
	0x034CA06C STP X20, X19, [X31 + 0x40]
	0x034CA070 ADRP X20, 0xF15000
	0x034CA074 LDR X8, [X20 + 0x160]
	0x034CA078 MOV X19, X0
	0x034CA07C CBNZ X8, 0x34CA0C8
	0x034CA080 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA084 LDR V0, [X12 + 0x5B8]
	0x034CA088 ADRP X8, 0xFFFFFFFFFD649000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+72]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 952
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+72], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_NetSyncSession_GetVoipGroup(System.IntPtr obj)

Disassembly:
	0x034CA08C ADRP X10, 0xFFFFFFFFFD63C000
	0x034CA090 ADD X8, X8, 0xDD2
	0x034CA094 MOVZ W9, 0x11
	0x034CA098 ADD X10, X10, 0x65D
	0x034CA09C MOVZ W11, 0x14
	0x034CA0A0 MOVZ W13, 0x8
	0x034CA0A4 ADD X0, X31, 0x0
	0x034CA0A8 STP X8, X9, [X31]
	0x034CA0AC STP X10, X11, [X31 + 0x10]
	0x034CA0B0 STR W13, [X31 + 0x28]
	0x034CA0B4 STR D0, [X31 + 0x20]
	0x034CA0B8 STRB W31, [X31 + 0x2C]
	0x034CA0BC BL 0x1C1729C
	0x034CA0C0 MOV X8, X0
	0x034CA0C4 STR X0, [X20 + 0x160]
	0x034CA0C8 MOV X0, X19
	0x034CA0CC BLR X8
	0x034CA0D0 LDP X20, X19, [X31 + 0x40]
	0x034CA0D4 LDR X30, [X31 + 0x30]
	0x034CA0D8 ADD X31, X31, 0x50
	0x034CA0DC RET
	0x034CA0E0 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF16000
	006 Move X21, 0xC69000
	007 Move W8, [X20+80]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC69000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+80], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_NetSyncSession_GetVoipGroup_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_NetSyncSession_GetVoipGroup_Native(System.IntPtr obj)

Disassembly:
	0x034CA0E4 STR X30, [X31 + 0x30]
	0x034CA0E8 STP X20, X19, [X31 + 0x40]
	0x034CA0EC ADRP X20, 0xF15000
	0x034CA0F0 LDR X8, [X20 + 0x168]
	0x034CA0F4 MOV X19, X0
	0x034CA0F8 CBNZ X8, 0x34CA144
	0x034CA0FC ADRP X12, 0xFFFFFFFFFD623000
	0x034CA100 LDR V0, [X12 + 0x5B8]
	0x034CA104 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA108 ADRP X10, 0xFFFFFFFFFD65C000
	0x034CA10C ADD X8, X8, 0xDD2
	0x034CA110 MOVZ W9, 0x11
	0x034CA114 ADD X10, X10, 0x473
	0x034CA118 MOVZ W11, 0x20
	0x034CA11C MOVZ W13, 0x8
	0x034CA120 ADD X0, X31, 0x0
	0x034CA124 STP X8, X9, [X31]
	0x034CA128 STP X10, X11, [X31 + 0x10]
	0x034CA12C STR W13, [X31 + 0x28]
	0x034CA130 STR D0, [X31 + 0x20]
	0x034CA134 STRB W31, [X31 + 0x2C]
	0x034CA138 BL 0x1C1729C
	0x034CA13C MOV X8, X0
	0x034CA140 STR X0, [X20 + 0x168]
	0x034CA144 MOV X0, X19
	0x034CA148 BLR X8
	0x034CA14C LDP X20, X19, [X31 + 0x40]
	0x034CA150 LDR X30, [X31 + 0x30]
	0x034CA154 ADD X31, X31, 0x50
	0x034CA158 RET
	0x034CA15C SUB X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+88]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1531
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+88], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_NetSyncSessionArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034CA160 STR X30, [X31 + 0x30]
	0x034CA164 STP X20, X19, [X31 + 0x40]
	0x034CA168 ADRP X20, 0xF15000
	0x034CA16C LDR X8, [X20 + 0x170]
	0x034CA170 MOV X19, X0
	0x034CA174 CBNZ X8, 0x34CA1C0
	0x034CA178 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA17C LDR V0, [X12 + 0x5B8]
	0x034CA180 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA184 ADRP X10, 0xFFFFFFFFFD65A000
	0x034CA188 ADD X8, X8, 0xDD2
	0x034CA18C MOVZ W9, 0x11
	0x034CA190 ADD X10, X10, 0x418
	0x034CA194 MOVZ W11, 0x1F
	0x034CA198 MOVZ W13, 0x8
	0x034CA19C ADD X0, X31, 0x0
	0x034CA1A0 STP X8, X9, [X31]
	0x034CA1A4 STP X10, X11, [X31 + 0x10]
	0x034CA1A8 STR W13, [X31 + 0x28]
	0x034CA1AC STR D0, [X31 + 0x20]
	0x034CA1B0 STRB W31, [X31 + 0x2C]
	0x034CA1B4 BL 0x1C1729C
	0x034CA1B8 MOV X8, X0
	0x034CA1BC STR X0, [X20 + 0x170]
	0x034CA1C0 MOV X0, X19
	0x034CA1C4 BLR X8
	0x034CA1C8 LDP X20, X19, [X31 + 0x40]
	0x034CA1CC LDR X30, [X31 + 0x30]
	0x034CA1D0 ADD X31, X31, 0x50
	0x034CA1D4 RET
	0x034CA1D8 STP X30, X21, [X31 - 0x20]!
	0x034CA1DC STP X20, X19, [X31 + 0x10]
	0x034CA1E0 ADRP X20, 0xF15000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF16000
	007 Move X8, [X21+96]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43892736
	013 Move V0, [X12+1464]
	014 Move X8, -43737088
	015 Move X10, -43864064
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1995
	019 Move W11, 34
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+96], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UIntPtr ovr_NetSyncSessionArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034CA1E4 ADRP X21, 0xC68000
	0x034CA1E8 LDRB W8, [X20 + 0x178]
	0x034CA1EC LDR X21, [X21 + 0x328]
	0x034CA1F0 MOV X19, X0
	0x034CA1F4 TBNZ X8, 0x0, 0x34CA20C
	0x034CA1F8 ADRP X0, 0xC68000
	0x034CA1FC LDR X0, [X0 + 0x328]
	0x034CA200 BL 0x1C16CF4
	0x034CA204 MOVZ W8, 0x1
	0x034CA208 STRB W8, [X20 + 0x178]
	0x034CA20C LDR X0, [X21]
	0x034CA210 LDR W8, [X0 + 0xE0]
	0x034CA214 CBNZ W8, 0x34CA21C
	0x034CA218 BL 0x1C16DFC
	0x034CA21C MOV X0, X19
	0x034CA220 BL 0x34CA230
	0x034CA224 LDP X20, X19, [X31 + 0x10]
	0x034CA228 LDP X30, X21, [X31], #0x20
	0x034CA22C B 0x34B3B78
	0x034CA230 SUB X31, X31, 0x50
	0x034CA234 STR X30, [X31 + 0x30]
	0x034CA238 STP X20, X19, [X31 + 0x40]
	0x034CA23C ADRP X20, 0xF15000
	0x034CA240 LDR X8, [X20 + 0x180]
	0x034CA244 MOV X19, X0
	0x034CA248 CBNZ X8, 0x34CA294
	0x034CA24C ADRP X12, 0xFFFFFFFFFD623000
	0x034CA250 LDR V0, [X12 + 0x5B8]
	0x034CA254 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA258 ADRP X10, 0xFFFFFFFFFD661000
	0x034CA25C ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+104]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43655168
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3719
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+104], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_NetSyncSessionsChangedNotification_GetConnectionId(System.IntPtr obj)

Disassembly:
	0x034CA260 MOVZ W9, 0x11
	0x034CA264 ADD X10, X10, 0xD44
	0x034CA268 MOVZ W11, 0x15
	0x034CA26C MOVZ W13, 0x8
	0x034CA270 ADD X0, X31, 0x0
	0x034CA274 STP X8, X9, [X31]
	0x034CA278 STP X10, X11, [X31 + 0x10]
	0x034CA27C STR W13, [X31 + 0x28]
	0x034CA280 STR D0, [X31 + 0x20]
	0x034CA284 STRB W31, [X31 + 0x2C]
	0x034CA288 BL 0x1C1729C
	0x034CA28C MOV X8, X0
	0x034CA290 STR X0, [X20 + 0x180]
	0x034CA294 MOV X0, X19
	0x034CA298 BLR X8
	0x034CA29C LDP X20, X19, [X31 + 0x40]
	0x034CA2A0 LDR X30, [X31 + 0x30]
	0x034CA2A4 ADD X31, X31, 0x50
	0x034CA2A8 RET
	0x034CA2AC STP X30, X21, [X31 - 0x20]!
	0x034CA2B0 STP X20, X19, [X31 + 0x10]
	0x034CA2B4 ADRP X20, 0xF15000
	0x034CA2B8 ADRP X21, 0xC68000
	0x034CA2BC LDRB W8, [X20 + 0x188]
	0x034CA2C0 LDR X21, [X21 + 0x328]
	0x034CA2C4 MOV X19, X0
	0x034CA2C8 TBNZ X8, 0x0, 0x34CA2E0
	0x034CA2CC ADRP X0, 0xC68000
	0x034CA2D0 LDR X0, [X0 + 0x328]
	0x034CA2D4 BL 0x1C16CF4
	0x034CA2D8 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+112]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2204
	017 Move W11, 54
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+112], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(System.IntPtr obj)

Disassembly:
	0x034CA2DC STRB W8, [X20 + 0x188]
	0x034CA2E0 LDR X0, [X21]
	0x034CA2E4 LDR W8, [X0 + 0xE0]
	0x034CA2E8 CBNZ W8, 0x34CA2F0
	0x034CA2EC BL 0x1C16DFC
	0x034CA2F0 MOV X0, X19
	0x034CA2F4 BL 0x34CA304
	0x034CA2F8 LDP X20, X19, [X31 + 0x10]
	0x034CA2FC LDP X30, X21, [X31], #0x20
	0x034CA300 B 0x34B3B78
	0x034CA304 SUB X31, X31, 0x50
	0x034CA308 STR X30, [X31 + 0x30]
	0x034CA30C STP X20, X19, [X31 + 0x40]
	0x034CA310 ADRP X20, 0xF15000
	0x034CA314 LDR X8, [X20 + 0x190]
	0x034CA318 MOV X19, X0
	0x034CA31C CBNZ X8, 0x34CA368
	0x034CA320 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA324 LDR V0, [X12 + 0x5B8]
	0x034CA328 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA32C ADRP X10, 0xFFFFFFFFFD652000
	0x034CA330 ADD X8, X8, 0xDD2
	0x034CA334 MOVZ W9, 0x11
	0x034CA338 ADD X10, X10, 0x3C2
	0x034CA33C MOVZ W11, 0x16
	0x034CA340 MOVZ W13, 0x8
	0x034CA344 ADD X0, X31, 0x0
	0x034CA348 STP X8, X9, [X31]
	0x034CA34C STP X10, X11, [X31 + 0x10]
	0x034CA350 STR W13, [X31 + 0x28]
	0x034CA354 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+120]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43683840
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 630
	017 Move W11, 50
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+120], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(System.IntPtr obj)

Disassembly:
	0x034CA358 STRB W31, [X31 + 0x2C]
	0x034CA35C BL 0x1C1729C
	0x034CA360 MOV X8, X0
	0x034CA364 STR X0, [X20 + 0x190]
	0x034CA368 MOV X0, X19
	0x034CA36C BLR X8
	0x034CA370 LDP X20, X19, [X31 + 0x40]
	0x034CA374 LDR X30, [X31 + 0x30]
	0x034CA378 ADD X31, X31, 0x50
	0x034CA37C RET
	0x034CA380 STP X30, X21, [X31 - 0x20]!
	0x034CA384 STP X20, X19, [X31 + 0x10]
	0x034CA388 ADRP X20, 0xF15000
	0x034CA38C ADRP X21, 0xC68000
	0x034CA390 LDRB W8, [X20 + 0x198]
	0x034CA394 LDR X21, [X21 + 0x328]
	0x034CA398 MOV X19, X0
	0x034CA39C TBNZ X8, 0x0, 0x34CA3B4
	0x034CA3A0 ADRP X0, 0xC68000
	0x034CA3A4 LDR X0, [X0 + 0x328]
	0x034CA3A8 BL 0x1C16CF4
	0x034CA3AC MOVZ W8, 0x1
	0x034CA3B0 STRB W8, [X20 + 0x198]
	0x034CA3B4 LDR X0, [X21]
	0x034CA3B8 LDR W8, [X0 + 0xE0]
	0x034CA3BC CBNZ W8, 0x34CA3C4
	0x034CA3C0 BL 0x1C16DFC
	0x034CA3C4 MOV X0, X19
	0x034CA3C8 BL 0x34CA3D8
	0x034CA3CC LDP X20, X19, [X31 + 0x10]
	0x034CA3D0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+128]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 981
	017 Move W11, 46
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+128], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Single ovr_NetSyncVoipAttenuationValue_GetDecibels(System.IntPtr obj)

Disassembly:
	0x034CA3D4 B 0x34B3B78
	0x034CA3D8 SUB X31, X31, 0x50
	0x034CA3DC STR X30, [X31 + 0x30]
	0x034CA3E0 STP X20, X19, [X31 + 0x40]
	0x034CA3E4 ADRP X20, 0xF15000
	0x034CA3E8 LDR X8, [X20 + 0x1A0]
	0x034CA3EC MOV X19, X0
	0x034CA3F0 CBNZ X8, 0x34CA43C
	0x034CA3F4 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA3F8 LDR V0, [X12 + 0x5B8]
	0x034CA3FC ADRP X8, 0xFFFFFFFFFD649000
	0x034CA400 ADRP X10, 0xFFFFFFFFFD644000
	0x034CA404 ADD X8, X8, 0xDD2
	0x034CA408 MOVZ W9, 0x11
	0x034CA40C ADD X10, X10, 0x534
	0x034CA410 MOVZ W11, 0x1A
	0x034CA414 MOVZ W13, 0x8
	0x034CA418 ADD X0, X31, 0x0
	0x034CA41C STP X8, X9, [X31]
	0x034CA420 STP X10, X11, [X31 + 0x10]
	0x034CA424 STR W13, [X31 + 0x28]
	0x034CA428 STR D0, [X31 + 0x20]
	0x034CA42C STRB W31, [X31 + 0x2C]
	0x034CA430 BL 0x1C1729C
	0x034CA434 MOV X8, X0
	0x034CA438 STR X0, [X20 + 0x1A0]
	0x034CA43C MOV X0, X19
	0x034CA440 BLR X8
	0x034CA444 LDP X20, X19, [X31 + 0x40]
	0x034CA448 LDR X30, [X31 + 0x30]
	0x034CA44C ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+136]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43765760
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1131
	017 Move W11, 43
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+136], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return V0

Method: System.Single ovr_NetSyncVoipAttenuationValue_GetDistance(System.IntPtr obj)

Disassembly:
	0x034CA450 RET
	0x034CA454 STP X30, X21, [X31 - 0x20]!
	0x034CA458 STP X20, X19, [X31 + 0x10]
	0x034CA45C ADRP X20, 0xF15000
	0x034CA460 ADRP X21, 0xC68000
	0x034CA464 LDRB W8, [X20 + 0x1A8]
	0x034CA468 LDR X21, [X21 + 0x328]
	0x034CA46C MOV X19, X0
	0x034CA470 TBNZ X8, 0x0, 0x34CA488
	0x034CA474 ADRP X0, 0xC68000
	0x034CA478 LDR X0, [X0 + 0x328]
	0x034CA47C BL 0x1C16CF4
	0x034CA480 MOVZ W8, 0x1
	0x034CA484 STRB W8, [X20 + 0x1A8]
	0x034CA488 LDR X0, [X21]
	0x034CA48C LDR W8, [X0 + 0xE0]
	0x034CA490 CBNZ W8, 0x34CA498
	0x034CA494 BL 0x1C16DFC
	0x034CA498 MOV X0, X19
	0x034CA49C BL 0x34CA4AC
	0x034CA4A0 LDP X20, X19, [X31 + 0x10]
	0x034CA4A4 LDP X30, X21, [X31], #0x20
	0x034CA4A8 B 0x34B3B78
	0x034CA4AC SUB X31, X31, 0x50
	0x034CA4B0 STR X30, [X31 + 0x30]
	0x034CA4B4 STP X20, X19, [X31 + 0x40]
	0x034CA4B8 ADRP X20, 0xF15000
	0x034CA4BC LDR X8, [X20 + 0x1B0]
	0x034CA4C0 MOV X19, X0
	0x034CA4C4 CBNZ X8, 0x34CA510
	0x034CA4C8 ADRP X12, 0xFFFFFFFFFD623000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+144]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2185
	017 Move W11, 43
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+144], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return V0

Method: System.IntPtr ovr_NetSyncVoipAttenuationValueArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034CA4CC LDR V0, [X12 + 0x5B8]
	0x034CA4D0 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA4D4 ADRP X10, 0xFFFFFFFFFD62C000
	0x034CA4D8 ADD X8, X8, 0xDD2
	0x034CA4DC MOVZ W9, 0x11
	0x034CA4E0 ADD X10, X10, 0x7FD
	0x034CA4E4 MOVZ W11, 0x1D
	0x034CA4E8 MOVZ W13, 0x8
	0x034CA4EC ADD X0, X31, 0x0
	0x034CA4F0 STP X8, X9, [X31]
	0x034CA4F4 STP X10, X11, [X31 + 0x10]
	0x034CA4F8 STR W13, [X31 + 0x28]
	0x034CA4FC STR D0, [X31 + 0x20]
	0x034CA500 STRB W31, [X31 + 0x2C]
	0x034CA504 BL 0x1C1729C
	0x034CA508 MOV X8, X0
	0x034CA50C STR X0, [X20 + 0x1B0]
	0x034CA510 MOV X0, X19
	0x034CA514 BLR X8
	0x034CA518 LDP X20, X19, [X31 + 0x40]
	0x034CA51C LDR X30, [X31 + 0x30]
	0x034CA520 ADD X31, X31, 0x50
	0x034CA524 RET
	0x034CA528 STP X30, X21, [X31 - 0x20]!
	0x034CA52C STP X20, X19, [X31 + 0x10]
	0x034CA530 ADRP X20, 0xF15000
	0x034CA534 ADRP X21, 0xC68000
	0x034CA538 LDRB W8, [X20 + 0x1B8]
	0x034CA53C LDR X21, [X21 + 0x328]
	0x034CA540 MOV X19, X0
	0x034CA544 TBNZ X8, 0x0, 0x34CA55C
	0x034CA548 ADRP X0, 0xC68000
	0x034CA54C LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF16000
	007 Move X8, [X21+152]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43892736
	013 Move V0, [X12+1464]
	014 Move X8, -43737088
	015 Move X10, -43712512
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3874
	019 Move W11, 47
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+152], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UIntPtr ovr_NetSyncVoipAttenuationValueArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034CA550 BL 0x1C16CF4
	0x034CA554 MOVZ W8, 0x1
	0x034CA558 STRB W8, [X20 + 0x1B8]
	0x034CA55C LDR X0, [X21]
	0x034CA560 LDR W8, [X0 + 0xE0]
	0x034CA564 CBNZ W8, 0x34CA56C
	0x034CA568 BL 0x1C16DFC
	0x034CA56C MOV X0, X19
	0x034CA570 BL 0x34CA580
	0x034CA574 LDP X20, X19, [X31 + 0x10]
	0x034CA578 LDP X30, X21, [X31], #0x20
	0x034CA57C B 0x34B3B78
	0x034CA580 SUB X31, X31, 0x50
	0x034CA584 STR X30, [X31 + 0x30]
	0x034CA588 STP X20, X19, [X31 + 0x40]
	0x034CA58C ADRP X20, 0xF15000
	0x034CA590 LDR X8, [X20 + 0x1C0]
	0x034CA594 MOV X19, X0
	0x034CA598 CBNZ X8, 0x34CA5E4
	0x034CA59C ADRP X12, 0xFFFFFFFFFD623000
	0x034CA5A0 LDR V0, [X12 + 0x5B8]
	0x034CA5A4 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA5A8 ADRP X10, 0xFFFFFFFFFD654000
	0x034CA5AC ADD X8, X8, 0xDD2
	0x034CA5B0 MOVZ W9, 0x11
	0x034CA5B4 ADD X10, X10, 0x7B
	0x034CA5B8 MOVZ W11, 0x13
	0x034CA5BC MOVZ W13, 0x8
	0x034CA5C0 ADD X0, X31, 0x0
	0x034CA5C4 STP X8, X9, [X31]
	0x034CA5C8 STP X10, X11, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+160]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43864064
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2030
	017 Move W11, 44
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+160], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_OrgScopedID_GetID(System.IntPtr obj)

Disassembly:
	0x034CA5CC STR W13, [X31 + 0x28]
	0x034CA5D0 STR D0, [X31 + 0x20]
	0x034CA5D4 STRB W31, [X31 + 0x2C]
	0x034CA5D8 BL 0x1C1729C
	0x034CA5DC MOV X8, X0
	0x034CA5E0 STR X0, [X20 + 0x1C0]
	0x034CA5E4 MOV X0, X19
	0x034CA5E8 BLR X8
	0x034CA5EC LDP X20, X19, [X31 + 0x40]
	0x034CA5F0 LDR X30, [X31 + 0x30]
	0x034CA5F4 ADD X31, X31, 0x50
	0x034CA5F8 RET
	0x034CA5FC STP X30, X21, [X31 - 0x20]!
	0x034CA600 STP X20, X19, [X31 + 0x10]
	0x034CA604 ADRP X20, 0xF15000
	0x034CA608 ADRP X21, 0xC68000
	0x034CA60C LDRB W8, [X20 + 0x1C8]
	0x034CA610 LDR X21, [X21 + 0x328]
	0x034CA614 MOV X19, X0
	0x034CA618 TBNZ X8, 0x0, 0x34CA630
	0x034CA61C ADRP X0, 0xC68000
	0x034CA620 LDR X0, [X0 + 0x328]
	0x034CA624 BL 0x1C16CF4
	0x034CA628 MOVZ W8, 0x1
	0x034CA62C STRB W8, [X20 + 0x1C8]
	0x034CA630 LDR X0, [X21]
	0x034CA634 LDR W8, [X0 + 0xE0]
	0x034CA638 CBNZ W8, 0x34CA640
	0x034CA63C BL 0x1C16DFC
	0x034CA640 MOV X0, X19
	0x034CA644 BL 0x34CA654

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+168]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43700224
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 940
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+168], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Void ovr_Packet_Free(System.IntPtr obj)

Disassembly:
	0x034CA648 LDP X20, X19, [X31 + 0x10]
	0x034CA64C LDP X30, X21, [X31], #0x20
	0x034CA650 B 0x34B3B78
	0x034CA654 SUB X31, X31, 0x50
	0x034CA658 STR X30, [X31 + 0x30]
	0x034CA65C STP X20, X19, [X31 + 0x40]
	0x034CA660 ADRP X20, 0xF15000
	0x034CA664 LDR X8, [X20 + 0x1D0]
	0x034CA668 MOV X19, X0
	0x034CA66C CBNZ X8, 0x34CA6B8
	0x034CA670 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA674 LDR V0, [X12 + 0x5B8]
	0x034CA678 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA67C ADRP X10, 0xFFFFFFFFFD62C000
	0x034CA680 ADD X8, X8, 0xDD2
	0x034CA684 MOVZ W9, 0x11
	0x034CA688 ADD X10, X10, 0x81B
	0x034CA68C MOVZ W11, 0x12
	0x034CA690 MOVZ W13, 0x8
	0x034CA694 ADD X0, X31, 0x0
	0x034CA698 STP X8, X9, [X31]
	0x034CA69C STP X10, X11, [X31 + 0x10]
	0x034CA6A0 STR W13, [X31 + 0x28]
	0x034CA6A4 STR D0, [X31 + 0x20]
	0x034CA6A8 STRB W31, [X31 + 0x2C]
	0x034CA6AC BL 0x1C1729C
	0x034CA6B0 MOV X8, X0
	0x034CA6B4 STR X0, [X20 + 0x1D0]
	0x034CA6B8 MOV X0, X19
	0x034CA6BC BLR X8
	0x034CA6C0 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+176]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43806720
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 944
	017 Move W11, 15
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+176], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.IntPtr ovr_Packet_GetBytes(System.IntPtr obj)

Disassembly:
	0x034CA6C4 LDR X30, [X31 + 0x30]
	0x034CA6C8 ADD X31, X31, 0x50
	0x034CA6CC RET
	0x034CA6D0 SUB X31, X31, 0x50
	0x034CA6D4 STP X30, X21, [X31 + 0x30]
	0x034CA6D8 STP X20, X19, [X31 + 0x40]
	0x034CA6DC ADRP X21, 0xF15000
	0x034CA6E0 LDR X8, [X21 + 0x1D8]
	0x034CA6E4 MOV X19, X1
	0x034CA6E8 MOV X20, X0
	0x034CA6EC CBNZ X8, 0x34CA738
	0x034CA6F0 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA6F4 LDR V0, [X12 + 0x5B8]
	0x034CA6F8 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA6FC ADRP X10, 0xFFFFFFFFFD62E000
	0x034CA700 ADD X8, X8, 0xDD2
	0x034CA704 MOVZ W9, 0x11
	0x034CA708 ADD X10, X10, 0x7D1
	0x034CA70C MOVZ W11, 0x1B
	0x034CA710 MOVZ W13, 0x10
	0x034CA714 ADD X0, X31, 0x0
	0x034CA718 STP X8, X9, [X31]
	0x034CA71C STP X10, X11, [X31 + 0x10]
	0x034CA720 STR W13, [X31 + 0x28]
	0x034CA724 STR D0, [X31 + 0x20]
	0x034CA728 STRB W31, [X31 + 0x2C]
	0x034CA72C BL 0x1C1729C
	0x034CA730 MOV X8, X0
	0x034CA734 STR X0, [X21 + 0x1D8]
	0x034CA738 MOV X0, X20
	0x034CA73C MOV X1, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+184]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1028
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+184], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Packet_GetSenderID(System.IntPtr obj)

Disassembly:
	0x034CA740 BLR X8
	0x034CA744 LDP X20, X19, [X31 + 0x40]
	0x034CA748 LDP X30, X21, [X31 + 0x30]
	0x034CA74C ADD X31, X31, 0x50
	0x034CA750 RET
	0x034CA754 STP X30, X21, [X31 - 0x20]!
	0x034CA758 STP X20, X19, [X31 + 0x10]
	0x034CA75C ADRP X20, 0xF15000
	0x034CA760 ADRP X21, 0xC68000
	0x034CA764 LDRB W8, [X20 + 0x1E0]
	0x034CA768 LDR X21, [X21 + 0x328]
	0x034CA76C MOV X19, X0
	0x034CA770 TBNZ X8, 0x0, 0x34CA788
	0x034CA774 ADRP X0, 0xC68000
	0x034CA778 LDR X0, [X0 + 0x328]
	0x034CA77C BL 0x1C16CF4
	0x034CA780 MOVZ W8, 0x1
	0x034CA784 STRB W8, [X20 + 0x1E0]
	0x034CA788 LDR X0, [X21]
	0x034CA78C LDR W8, [X0 + 0xE0]
	0x034CA790 CBNZ W8, 0x34CA798
	0x034CA794 BL 0x1C16DFC
	0x034CA798 MOV X0, X19
	0x034CA79C BL 0x34CA7AC
	0x034CA7A0 LDP X20, X19, [X31 + 0x10]
	0x034CA7A4 LDP X30, X21, [X31], #0x20
	0x034CA7A8 B 0x34B3B78
	0x034CA7AC SUB X31, X31, 0x50
	0x034CA7B0 STR X30, [X31 + 0x30]
	0x034CA7B4 STP X20, X19, [X31 + 0x40]
	0x034CA7B8 ADRP X20, 0xF15000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+192]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1563
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+192], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_Packet_GetSize(System.IntPtr obj)

Disassembly:
	0x034CA7BC LDR X8, [X20 + 0x1E8]
	0x034CA7C0 MOV X19, X0
	0x034CA7C4 CBNZ X8, 0x34CA810
	0x034CA7C8 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA7CC LDR V0, [X12 + 0x5B8]
	0x034CA7D0 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA7D4 ADRP X10, 0xFFFFFFFFFD64F000
	0x034CA7D8 ADD X8, X8, 0xDD2
	0x034CA7DC MOVZ W9, 0x11
	0x034CA7E0 ADD X10, X10, 0xF7A
	0x034CA7E4 MOVZ W11, 0x1B
	0x034CA7E8 MOVZ W13, 0x8
	0x034CA7EC ADD X0, X31, 0x0
	0x034CA7F0 STP X8, X9, [X31]
	0x034CA7F4 STP X10, X11, [X31 + 0x10]
	0x034CA7F8 STR W13, [X31 + 0x28]
	0x034CA7FC STR D0, [X31 + 0x20]
	0x034CA800 STRB W31, [X31 + 0x2C]
	0x034CA804 BL 0x1C1729C
	0x034CA808 MOV X8, X0
	0x034CA80C STR X0, [X20 + 0x1E8]
	0x034CA810 MOV X0, X19
	0x034CA814 BLR X8
	0x034CA818 LDP X20, X19, [X31 + 0x40]
	0x034CA81C LDR X30, [X31 + 0x30]
	0x034CA820 ADD X31, X31, 0x50
	0x034CA824 RET
	0x034CA828 SUB X31, X31, 0x50
	0x034CA82C STR X30, [X31 + 0x30]
	0x034CA830 STP X20, X19, [X31 + 0x40]
	0x034CA834 ADRP X20, 0xF15000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+200]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1586
	017 Move W11, 18
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+200], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Party_GetID(System.IntPtr obj)

Disassembly:
	0x034CA838 LDR X8, [X20 + 0x1F0]
	0x034CA83C MOV X19, X0
	0x034CA840 CBNZ X8, 0x34CA88C
	0x034CA844 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA848 LDR V0, [X12 + 0x5B8]
	0x034CA84C ADRP X8, 0xFFFFFFFFFD649000
	0x034CA850 ADRP X10, 0xFFFFFFFFFD62C000
	0x034CA854 ADD X8, X8, 0xDD2
	0x034CA858 MOVZ W9, 0x11
	0x034CA85C ADD X10, X10, 0x82E
	0x034CA860 MOVZ W11, 0x18
	0x034CA864 MOVZ W13, 0x8
	0x034CA868 ADD X0, X31, 0x0
	0x034CA86C STP X8, X9, [X31]
	0x034CA870 STP X10, X11, [X31 + 0x10]
	0x034CA874 STR W13, [X31 + 0x28]
	0x034CA878 STR D0, [X31 + 0x20]
	0x034CA87C STRB W31, [X31 + 0x2C]
	0x034CA880 BL 0x1C1729C
	0x034CA884 MOV X8, X0
	0x034CA888 STR X0, [X20 + 0x1F0]
	0x034CA88C MOV X0, X19
	0x034CA890 BLR X8
	0x034CA894 LDP X20, X19, [X31 + 0x40]
	0x034CA898 LDR X30, [X31 + 0x30]
	0x034CA89C ADD X31, X31, 0x50
	0x034CA8A0 RET
	0x034CA8A4 SUB X31, X31, 0x50
	0x034CA8A8 STR X30, [X31 + 0x30]
	0x034CA8AC STP X20, X19, [X31 + 0x40]
	0x034CA8B0 ADRP X20, 0xF15000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+208]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43855872
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2011
	017 Move W11, 15
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+208], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Party_GetInvitedUsers(System.IntPtr obj)

Disassembly:
	0x034CA8B4 LDR X8, [X20 + 0x1F8]
	0x034CA8B8 MOV X19, X0
	0x034CA8BC CBNZ X8, 0x34CA908
	0x034CA8C0 ADRP X12, 0xFFFFFFFFFD623000
	0x034CA8C4 LDR V0, [X12 + 0x5B8]
	0x034CA8C8 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA8CC ADRP X10, 0xFFFFFFFFFD632000
	0x034CA8D0 ADD X8, X8, 0xDD2
	0x034CA8D4 MOVZ W9, 0x11
	0x034CA8D8 ADD X10, X10, 0x8B5
	0x034CA8DC MOVZ W11, 0x1C
	0x034CA8E0 MOVZ W13, 0x8
	0x034CA8E4 ADD X0, X31, 0x0
	0x034CA8E8 STP X8, X9, [X31]
	0x034CA8EC STP X10, X11, [X31 + 0x10]
	0x034CA8F0 STR W13, [X31 + 0x28]
	0x034CA8F4 STR D0, [X31 + 0x20]
	0x034CA8F8 STRB W31, [X31 + 0x2C]
	0x034CA8FC BL 0x1C1729C
	0x034CA900 MOV X8, X0
	0x034CA904 STR X0, [X20 + 0x1F8]
	0x034CA908 MOV X0, X19
	0x034CA90C BLR X8
	0x034CA910 LDP X20, X19, [X31 + 0x40]
	0x034CA914 LDR X30, [X31 + 0x30]
	0x034CA918 CMP W0, 0x0
	0x034CA91C CSET W0, NE
	0x034CA920 ADD X31, X31, 0x50
	0x034CA924 RET
	0x034CA928 STP X30, X21, [X31 - 0x20]!
	0x034CA92C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+216]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1605
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+216], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Party_GetLeader(System.IntPtr obj)

Disassembly:
	0x034CA930 ADRP X20, 0xF15000
	0x034CA934 ADRP X21, 0xC68000
	0x034CA938 LDRB W8, [X20 + 0x200]
	0x034CA93C LDR X21, [X21 + 0x328]
	0x034CA940 MOV X19, X0
	0x034CA944 TBNZ X8, 0x0, 0x34CA95C
	0x034CA948 ADRP X0, 0xC68000
	0x034CA94C LDR X0, [X0 + 0x328]
	0x034CA950 BL 0x1C16CF4
	0x034CA954 MOVZ W8, 0x1
	0x034CA958 STRB W8, [X20 + 0x200]
	0x034CA95C LDR X0, [X21]
	0x034CA960 LDR W8, [X0 + 0xE0]
	0x034CA964 CBNZ W8, 0x34CA96C
	0x034CA968 BL 0x1C16DFC
	0x034CA96C MOV X0, X19
	0x034CA970 BL 0x34CA980
	0x034CA974 LDP X20, X19, [X31 + 0x10]
	0x034CA978 LDP X30, X21, [X31], #0x20
	0x034CA97C B 0x34B3B78
	0x034CA980 SUB X31, X31, 0x50
	0x034CA984 STR X30, [X31 + 0x30]
	0x034CA988 STP X20, X19, [X31 + 0x40]
	0x034CA98C ADRP X20, 0xF15000
	0x034CA990 LDR X8, [X20 + 0x208]
	0x034CA994 MOV X19, X0
	0x034CA998 CBNZ X8, 0x34CA9E4
	0x034CA99C ADRP X12, 0xFFFFFFFFFD623000
	0x034CA9A0 LDR V0, [X12 + 0x5B8]
	0x034CA9A4 ADRP X8, 0xFFFFFFFFFD649000
	0x034CA9A8 ADRP X10, 0xFFFFFFFFFD648000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+224]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43790336
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1609
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+224], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_Party_GetUsers(System.IntPtr obj)

Disassembly:
	0x034CA9AC ADD X8, X8, 0xDD2
	0x034CA9B0 MOVZ W9, 0x11
	0x034CA9B4 ADD X10, X10, 0x1AA
	0x034CA9B8 MOVZ W11, 0x20
	0x034CA9BC MOVZ W13, 0x8
	0x034CA9C0 ADD X0, X31, 0x0
	0x034CA9C4 STP X8, X9, [X31]
	0x034CA9C8 STP X10, X11, [X31 + 0x10]
	0x034CA9CC STR W13, [X31 + 0x28]
	0x034CA9D0 STR D0, [X31 + 0x20]
	0x034CA9D4 STRB W31, [X31 + 0x2C]
	0x034CA9D8 BL 0x1C1729C
	0x034CA9DC MOV X8, X0
	0x034CA9E0 STR X0, [X20 + 0x208]
	0x034CA9E4 MOV X0, X19
	0x034CA9E8 BLR X8
	0x034CA9EC LDP X20, X19, [X31 + 0x40]
	0x034CA9F0 LDR X30, [X31 + 0x30]
	0x034CA9F4 ADD X31, X31, 0x50
	0x034CA9F8 RET
	0x034CA9FC STP X30, X21, [X31 - 0x20]!
	0x034CAA00 STP X20, X19, [X31 + 0x10]
	0x034CAA04 ADRP X20, 0xF15000
	0x034CAA08 ADRP X21, 0xC68000
	0x034CAA0C LDRB W8, [X20 + 0x210]
	0x034CAA10 LDR X21, [X21 + 0x328]
	0x034CAA14 MOV X19, X0
	0x034CAA18 TBNZ X8, 0x0, 0x34CAA30
	0x034CAA1C ADRP X0, 0xC68000
	0x034CAA20 LDR X0, [X0 + 0x328]
	0x034CAA24 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+232]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3469
	017 Move W11, 18
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+232], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_PartyID_GetID(System.IntPtr obj)

Disassembly:
	0x034CAA28 MOVZ W8, 0x1
	0x034CAA2C STRB W8, [X20 + 0x210]
	0x034CAA30 LDR X0, [X21]
	0x034CAA34 LDR W8, [X0 + 0xE0]
	0x034CAA38 CBNZ W8, 0x34CAA40
	0x034CAA3C BL 0x1C16DFC
	0x034CAA40 MOV X0, X19
	0x034CAA44 BL 0x34CAA54
	0x034CAA48 LDP X20, X19, [X31 + 0x10]
	0x034CAA4C LDP X30, X21, [X31], #0x20
	0x034CAA50 B 0x34B3D04
	0x034CAA54 SUB X31, X31, 0x50
	0x034CAA58 STR X30, [X31 + 0x30]
	0x034CAA5C STP X20, X19, [X31 + 0x40]
	0x034CAA60 ADRP X20, 0xF15000
	0x034CAA64 LDR X8, [X20 + 0x218]
	0x034CAA68 MOV X19, X0
	0x034CAA6C CBNZ X8, 0x34CAAB8
	0x034CAA70 ADRP X12, 0xFFFFFFFFFD623000
	0x034CAA74 LDR V0, [X12 + 0x5B8]
	0x034CAA78 ADRP X8, 0xFFFFFFFFFD649000
	0x034CAA7C ADRP X10, 0xFFFFFFFFFD624000
	0x034CAA80 ADD X8, X8, 0xDD2
	0x034CAA84 MOVZ W9, 0x11
	0x034CAA88 ADD X10, X10, 0x90D
	0x034CAA8C MOVZ W11, 0x1E
	0x034CAA90 MOVZ W13, 0x8
	0x034CAA94 ADD X0, X31, 0x0
	0x034CAA98 STP X8, X9, [X31]
	0x034CAA9C STP X10, X11, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+240]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {29}
	010 Move X11, -43892736
	011 Move V0, [X11+1464]
	012 Move X8, -43737088
	013 Move X10, -43855872
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2027
	017 Move W12, 8
	018 Add X0, X31, 0
	019 Move [X31], X8
	020 Move [X31+8], X9
	021 Move [X31+16], X10
	022 Move [X31+24], X9
	023 Move [X31+40], W12
	024 Move [X31+32], D0
	025 Move [X31+44], W31
	026 Call 0x1C1829C
	027 Move X8, X0
	028 Move [X20+240], X0
	029 Move X0, X19
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Move X30, [X31+48]
	034 Add X31, X31, 80
	035 Return X0

Method: Oculus.Platform.PartyUpdateAction ovr_PartyUpdateNotification_GetAction(System.IntPtr obj)

Disassembly:
	0x034CAAA0 STR W13, [X31 + 0x28]
	0x034CAAA4 STR D0, [X31 + 0x20]
	0x034CAAA8 STRB W31, [X31 + 0x2C]
	0x034CAAAC BL 0x1C1729C
	0x034CAAB0 MOV X8, X0
	0x034CAAB4 STR X0, [X20 + 0x218]
	0x034CAAB8 MOV X0, X19
	0x034CAABC BLR X8
	0x034CAAC0 LDP X20, X19, [X31 + 0x40]
	0x034CAAC4 LDR X30, [X31 + 0x30]
	0x034CAAC8 ADD X31, X31, 0x50
	0x034CAACC RET
	0x034CAAD0 STP X30, X21, [X31 - 0x20]!
	0x034CAAD4 STP X20, X19, [X31 + 0x10]
	0x034CAAD8 ADRP X20, 0xF15000
	0x034CAADC ADRP X21, 0xC68000
	0x034CAAE0 LDRB W8, [X20 + 0x220]
	0x034CAAE4 LDR X21, [X21 + 0x328]
	0x034CAAE8 MOV X19, X0
	0x034CAAEC TBNZ X8, 0x0, 0x34CAB04
	0x034CAAF0 ADRP X0, 0xC68000
	0x034CAAF4 LDR X0, [X0 + 0x328]
	0x034CAAF8 BL 0x1C16CF4
	0x034CAAFC MOVZ W8, 0x1
	0x034CAB00 STRB W8, [X20 + 0x220]
	0x034CAB04 LDR X0, [X21]
	0x034CAB08 LDR W8, [X0 + 0xE0]
	0x034CAB0C CBNZ W8, 0x34CAB14
	0x034CAB10 BL 0x1C16DFC
	0x034CAB14 MOV X0, X19
	0x034CAB18 BL 0x34CAB28

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+248]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43692032
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 85
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+248], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_PartyUpdateNotification_GetPartyId(System.IntPtr obj)

Disassembly:
	0x034CAB1C LDP X20, X19, [X31 + 0x10]
	0x034CAB20 LDP X30, X21, [X31], #0x20
	0x034CAB24 B 0x34B3D04
	0x034CAB28 SUB X31, X31, 0x50
	0x034CAB2C STR X30, [X31 + 0x30]
	0x034CAB30 STP X20, X19, [X31 + 0x40]
	0x034CAB34 ADRP X20, 0xF15000
	0x034CAB38 LDR X8, [X20 + 0x228]
	0x034CAB3C MOV X19, X0
	0x034CAB40 CBNZ X8, 0x34CAB8C
	0x034CAB44 ADRP X12, 0xFFFFFFFFFD623000
	0x034CAB48 LDR V0, [X12 + 0x5B8]
	0x034CAB4C ADRP X8, 0xFFFFFFFFFD649000
	0x034CAB50 ADRP X10, 0xFFFFFFFFFD64B000
	0x034CAB54 ADD X8, X8, 0xDD2
	0x034CAB58 MOVZ W9, 0x11
	0x034CAB5C ADD X10, X10, 0xDA0
	0x034CAB60 MOVZ W11, 0x19
	0x034CAB64 MOVZ W13, 0x8
	0x034CAB68 ADD X0, X31, 0x0
	0x034CAB6C STP X8, X9, [X31]
	0x034CAB70 STP X10, X11, [X31 + 0x10]
	0x034CAB74 STR W13, [X31 + 0x28]
	0x034CAB78 STR D0, [X31 + 0x20]
	0x034CAB7C STRB W31, [X31 + 0x2C]
	0x034CAB80 BL 0x1C1729C
	0x034CAB84 MOV X8, X0
	0x034CAB88 STR X0, [X20 + 0x228]
	0x034CAB8C MOV X0, X19
	0x034CAB90 BLR X8
	0x034CAB94 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+256]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43872256
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2121
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+256], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_PartyUpdateNotification_GetSenderId(System.IntPtr obj)

Disassembly:
	0x034CAB98 LDR X30, [X31 + 0x30]
	0x034CAB9C ADD X31, X31, 0x50
	0x034CABA0 RET
	0x034CABA4 SUB X31, X31, 0x50
	0x034CABA8 STR X30, [X31 + 0x30]
	0x034CABAC STP X20, X19, [X31 + 0x40]
	0x034CABB0 ADRP X20, 0xF15000
	0x034CABB4 LDR X8, [X20 + 0x230]
	0x034CABB8 MOV X19, X0
	0x034CABBC CBNZ X8, 0x34CAC08
	0x034CABC0 ADRP X12, 0xFFFFFFFFFD623000
	0x034CABC4 LDR V0, [X12 + 0x5B8]
	0x034CABC8 ADRP X8, 0xFFFFFFFFFD649000
	0x034CABCC ADRP X10, 0xFFFFFFFFFD661000
	0x034CABD0 ADD X8, X8, 0xDD2
	0x034CABD4 MOVZ W9, 0x11
	0x034CABD8 ADD X10, X10, 0xD5A
	0x034CABDC MOVZ W11, 0x1A
	0x034CABE0 MOVZ W13, 0x8
	0x034CABE4 ADD X0, X31, 0x0
	0x034CABE8 STP X8, X9, [X31]
	0x034CABEC STP X10, X11, [X31 + 0x10]
	0x034CABF0 STR W13, [X31 + 0x28]
	0x034CABF4 STR D0, [X31 + 0x20]
	0x034CABF8 STRB W31, [X31 + 0x2C]
	0x034CABFC BL 0x1C1729C
	0x034CAC00 MOV X8, X0
	0x034CAC04 STR X0, [X20 + 0x230]
	0x034CAC08 MOV X0, X19
	0x034CAC0C BLR X8
	0x034CAC10 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+264]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43712512
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3922
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+264], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_PartyUpdateNotification_GetUpdateTimestamp(System.IntPtr obj)

Disassembly:
	0x034CAC14 LDR X30, [X31 + 0x30]
	0x034CAC18 ADD X31, X31, 0x50
	0x034CAC1C RET
	0x034CAC20 STP X30, X21, [X31 - 0x20]!
	0x034CAC24 STP X20, X19, [X31 + 0x10]
	0x034CAC28 ADRP X20, 0xF15000
	0x034CAC2C ADRP X21, 0xC68000
	0x034CAC30 LDRB W8, [X20 + 0x238]
	0x034CAC34 LDR X21, [X21 + 0x328]
	0x034CAC38 MOV X19, X0
	0x034CAC3C TBNZ X8, 0x0, 0x34CAC54
	0x034CAC40 ADRP X0, 0xC68000
	0x034CAC44 LDR X0, [X0 + 0x328]
	0x034CAC48 BL 0x1C16CF4
	0x034CAC4C MOVZ W8, 0x1
	0x034CAC50 STRB W8, [X20 + 0x238]
	0x034CAC54 LDR X0, [X21]
	0x034CAC58 LDR W8, [X0 + 0xE0]
	0x034CAC5C CBNZ W8, 0x34CAC64
	0x034CAC60 BL 0x1C16DFC
	0x034CAC64 MOV X0, X19
	0x034CAC68 BL 0x34CAC78

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF16000
	006 Move X21, 0xC69000
	007 Move W8, [X20+272]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC69000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+272], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(System.IntPtr obj)

Disassembly:
	0x034CAC6C LDP X20, X19, [X31 + 0x10]
	0x034CAC70 LDP X30, X21, [X31], #0x20
	0x034CAC74 B 0x34B3B78
	0x034CAC78 SUB X31, X31, 0x50
	0x034CAC7C STR X30, [X31 + 0x30]
	0x034CAC80 STP X20, X19, [X31 + 0x40]
	0x034CAC84 ADRP X20, 0xF15000
	0x034CAC88 LDR X8, [X20 + 0x240]
	0x034CAC8C MOV X19, X0
	0x034CAC90 CBNZ X8, 0x34CACDC
	0x034CAC94 ADRP X12, 0xFFFFFFFFFD623000
	0x034CAC98 LDR V0, [X12 + 0x5B8]
	0x034CAC9C ADRP X8, 0xFFFFFFFFFD649000
	0x034CACA0 ADRP X10, 0xFFFFFFFFFD62E000
	0x034CACA4 ADD X8, X8, 0xDD2
	0x034CACA8 MOVZ W9, 0x11
	0x034CACAC ADD X10, X10, 0x7ED
	0x034CACB0 MOVZ W11, 0x1D
	0x034CACB4 MOVZ W13, 0x8
	0x034CACB8 ADD X0, X31, 0x0
	0x034CACBC STP X8, X9, [X31]
	0x034CACC0 STP X10, X11, [X31 + 0x10]
	0x034CACC4 STR W13, [X31 + 0x28]
	0x034CACC8 STR D0, [X31 + 0x20]
	0x034CACCC STRB W31, [X31 + 0x2C]
	0x034CACD0 BL 0x1C1729C
	0x034CACD4 MOV X8, X0
	0x034CACD8 STR X0, [X20 + 0x240]
	0x034CACDC MOV X0, X19
	0x034CACE0 BLR X8
	0x034CACE4 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+280]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43646976
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3629
	017 Move W11, 46
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+280], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_PartyUpdateNotification_GetUserAlias(System.IntPtr obj)

Disassembly:
	0x034CACE8 LDR X30, [X31 + 0x30]
	0x034CACEC ADD X31, X31, 0x50
	0x034CACF0 RET
	0x034CACF4 STP X30, X21, [X31 - 0x20]!
	0x034CACF8 STP X20, X19, [X31 + 0x10]
	0x034CACFC ADRP X20, 0xF15000
	0x034CAD00 ADRP X21, 0xC68000
	0x034CAD04 LDRB W8, [X20 + 0x248]
	0x034CAD08 LDR X21, [X21 + 0x328]
	0x034CAD0C MOV X19, X0
	0x034CAD10 TBNZ X8, 0x0, 0x34CAD28
	0x034CAD14 ADRP X0, 0xC68000
	0x034CAD18 LDR X0, [X0 + 0x328]
	0x034CAD1C BL 0x1C16CF4
	0x034CAD20 MOVZ W8, 0x1
	0x034CAD24 STRB W8, [X20 + 0x248]
	0x034CAD28 LDR X0, [X21]
	0x034CAD2C LDR W8, [X0 + 0xE0]
	0x034CAD30 CBNZ W8, 0x34CAD38
	0x034CAD34 BL 0x1C16DFC
	0x034CAD38 MOV X0, X19
	0x034CAD3C BL 0x34CAD4C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF16000
	006 Move X21, 0xC69000
	007 Move W8, [X20+288]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC69000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+288], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_PartyUpdateNotification_GetUserAlias_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(System.IntPtr obj)

Disassembly:
	0x034CAD40 LDP X20, X19, [X31 + 0x10]
	0x034CAD44 LDP X30, X21, [X31], #0x20
	0x034CAD48 B 0x34B3B78
	0x034CAD4C SUB X31, X31, 0x50
	0x034CAD50 STR X30, [X31 + 0x30]
	0x034CAD54 STP X20, X19, [X31 + 0x40]
	0x034CAD58 ADRP X20, 0xF15000
	0x034CAD5C LDR X8, [X20 + 0x250]
	0x034CAD60 MOV X19, X0
	0x034CAD64 CBNZ X8, 0x34CADB0
	0x034CAD68 ADRP X12, 0xFFFFFFFFFD623000
	0x034CAD6C LDR V0, [X12 + 0x5B8]
	0x034CAD70 ADRP X8, 0xFFFFFFFFFD649000
	0x034CAD74 ADRP X10, 0xFFFFFFFFFD644000
	0x034CAD78 ADD X8, X8, 0xDD2
	0x034CAD7C MOVZ W9, 0x11
	0x034CAD80 ADD X10, X10, 0x54F
	0x034CAD84 MOVZ W11, 0x1B
	0x034CAD88 MOVZ W13, 0x8
	0x034CAD8C ADD X0, X31, 0x0
	0x034CAD90 STP X8, X9, [X31]
	0x034CAD94 STP X10, X11, [X31 + 0x10]
	0x034CAD98 STR W13, [X31 + 0x28]
	0x034CAD9C STR D0, [X31 + 0x20]
	0x034CADA0 STRB W31, [X31 + 0x2C]
	0x034CADA4 BL 0x1C1729C
	0x034CADA8 MOV X8, X0
	0x034CADAC STR X0, [X20 + 0x250]
	0x034CADB0 MOV X0, X19
	0x034CADB4 BLR X8
	0x034CADB8 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+296]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3734
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+296], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_PartyUpdateNotification_GetUserId(System.IntPtr obj)

Disassembly:
	0x034CADBC LDR X30, [X31 + 0x30]
	0x034CADC0 ADD X31, X31, 0x50
	0x034CADC4 RET
	0x034CADC8 STP X30, X21, [X31 - 0x20]!
	0x034CADCC STP X20, X19, [X31 + 0x10]
	0x034CADD0 ADRP X20, 0xF15000
	0x034CADD4 ADRP X21, 0xC68000
	0x034CADD8 LDRB W8, [X20 + 0x258]
	0x034CADDC LDR X21, [X21 + 0x328]
	0x034CADE0 MOV X19, X0
	0x034CADE4 TBNZ X8, 0x0, 0x34CADFC
	0x034CADE8 ADRP X0, 0xC68000
	0x034CADEC LDR X0, [X0 + 0x328]
	0x034CADF0 BL 0x1C16CF4
	0x034CADF4 MOVZ W8, 0x1
	0x034CADF8 STRB W8, [X20 + 0x258]
	0x034CADFC LDR X0, [X21]
	0x034CAE00 LDR W8, [X0 + 0xE0]
	0x034CAE04 CBNZ W8, 0x34CAE0C
	0x034CAE08 BL 0x1C16DFC
	0x034CAE0C MOV X0, X19
	0x034CAE10 BL 0x34CAE20
	0x034CAE14 LDP X20, X19, [X31 + 0x10]
	0x034CAE18 LDP X30, X21, [X31], #0x20
	0x034CAE1C B 0x34B3B78
	0x034CAE20 SUB X31, X31, 0x50
	0x034CAE24 STR X30, [X31 + 0x30]
	0x034CAE28 STP X20, X19, [X31 + 0x40]
	0x034CAE2C ADRP X20, 0xF15000
	0x034CAE30 LDR X8, [X20 + 0x260]
	0x034CAE34 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+304]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43847680
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1963
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+304], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_PartyUpdateNotification_GetUserName(System.IntPtr obj)

Disassembly:
	0x034CAE38 CBNZ X8, 0x34CAE84
	0x034CAE3C ADRP X12, 0xFFFFFFFFFD623000
	0x034CAE40 LDR V0, [X12 + 0x5B8]
	0x034CAE44 ADRP X8, 0xFFFFFFFFFD649000
	0x034CAE48 ADRP X10, 0xFFFFFFFFFD654000
	0x034CAE4C ADD X8, X8, 0xDD2
	0x034CAE50 MOVZ W9, 0x11
	0x034CAE54 ADD X10, X10, 0x8F
	0x034CAE58 MOVZ W11, 0x13
	0x034CAE5C MOVZ W13, 0x8
	0x034CAE60 ADD X0, X31, 0x0
	0x034CAE64 STP X8, X9, [X31]
	0x034CAE68 STP X10, X11, [X31 + 0x10]
	0x034CAE6C STR W13, [X31 + 0x28]
	0x034CAE70 STR D0, [X31 + 0x20]
	0x034CAE74 STRB W31, [X31 + 0x2C]
	0x034CAE78 BL 0x1C1729C
	0x034CAE7C MOV X8, X0
	0x034CAE80 STR X0, [X20 + 0x260]
	0x034CAE84 MOV X0, X19
	0x034CAE88 BLR X8
	0x034CAE8C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF16000
	006 Move X21, 0xC69000
	007 Move W8, [X20+312]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC69000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+312], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_PartyUpdateNotification_GetUserName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_PartyUpdateNotification_GetUserName_Native(System.IntPtr obj)

Disassembly:
	0x034CAE90 LDR X30, [X31 + 0x30]
	0x034CAE94 ADD X31, X31, 0x50
	0x034CAE98 RET
	0x034CAE9C SUB X31, X31, 0x50
	0x034CAEA0 STP X30, X21, [X31 + 0x30]
	0x034CAEA4 STP X20, X19, [X31 + 0x40]
	0x034CAEA8 ADRP X21, 0xF15000
	0x034CAEAC LDR X8, [X21 + 0x268]
	0x034CAEB0 MOV X19, X1
	0x034CAEB4 MOV X20, X0
	0x034CAEB8 CBNZ X8, 0x34CAF04
	0x034CAEBC ADRP X12, 0xFFFFFFFFFD623000
	0x034CAEC0 LDR V0, [X12 + 0x5B8]
	0x034CAEC4 ADRP X8, 0xFFFFFFFFFD649000
	0x034CAEC8 ADRP X10, 0xFFFFFFFFFD654000
	0x034CAECC ADD X8, X8, 0xDD2
	0x034CAED0 MOVZ W9, 0x11
	0x034CAED4 ADD X10, X10, 0xA3
	0x034CAED8 MOVZ W11, 0x1C
	0x034CAEDC MOVZ W13, 0x10
	0x034CAEE0 ADD X0, X31, 0x0
	0x034CAEE4 STP X8, X9, [X31]
	0x034CAEE8 STP X10, X11, [X31 + 0x10]
	0x034CAEEC STR W13, [X31 + 0x28]
	0x034CAEF0 STR D0, [X31 + 0x20]
	0x034CAEF4 STRB W31, [X31 + 0x2C]
	0x034CAEF8 BL 0x1C1729C
	0x034CAEFC MOV X8, X0
	0x034CAF00 STR X0, [X21 + 0x268]
	0x034CAF04 MOV X0, X20
	0x034CAF08 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+320]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43782144
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1631
	017 Move W11, 39
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+320], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Pid_GetId(System.IntPtr obj)

Disassembly:
	0x034CAF0C BLR X8
	0x034CAF10 LDP X20, X19, [X31 + 0x40]
	0x034CAF14 LDP X30, X21, [X31 + 0x30]
	0x034CAF18 ADD X31, X31, 0x50
	0x034CAF1C RET
	0x034CAF20 STP X30, X21, [X31 - 0x20]!
	0x034CAF24 STP X20, X19, [X31 + 0x10]
	0x034CAF28 ADRP X20, 0xF15000
	0x034CAF2C ADRP X21, 0xC68000
	0x034CAF30 LDRB W8, [X20 + 0x270]
	0x034CAF34 LDR X21, [X21 + 0x328]
	0x034CAF38 MOV X19, X0
	0x034CAF3C TBNZ X8, 0x0, 0x34CAF54
	0x034CAF40 ADRP X0, 0xC68000
	0x034CAF44 LDR X0, [X0 + 0x328]
	0x034CAF48 BL 0x1C16CF4
	0x034CAF4C MOVZ W8, 0x1
	0x034CAF50 STRB W8, [X20 + 0x270]
	0x034CAF54 LDR X0, [X21]
	0x034CAF58 LDR W8, [X0 + 0xE0]
	0x034CAF5C CBNZ W8, 0x34CAF64
	0x034CAF60 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF16000
	006 Move X21, 0xC69000
	007 Move W8, [X20+328]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC69000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+328], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Pid_GetId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Pid_GetId_Native(System.IntPtr obj)

Disassembly:
	0x034CAF64 MOV X0, X19
	0x034CAF68 BL 0x34CAF78
	0x034CAF6C LDP X20, X19, [X31 + 0x10]
	0x034CAF70 LDP X30, X21, [X31], #0x20
	0x034CAF74 B 0x34B3B78
	0x034CAF78 SUB X31, X31, 0x50
	0x034CAF7C STR X30, [X31 + 0x30]
	0x034CAF80 STP X20, X19, [X31 + 0x40]
	0x034CAF84 ADRP X20, 0xF15000
	0x034CAF88 LDR X8, [X20 + 0x278]
	0x034CAF8C MOV X19, X0
	0x034CAF90 CBNZ X8, 0x34CAFDC
	0x034CAF94 ADRP X12, 0xFFFFFFFFFD623000
	0x034CAF98 LDR V0, [X12 + 0x5B8]
	0x034CAF9C ADRP X8, 0xFFFFFFFFFD649000
	0x034CAFA0 ADRP X10, 0xFFFFFFFFFD64B000
	0x034CAFA4 ADD X8, X8, 0xDD2
	0x034CAFA8 MOVZ W9, 0x11
	0x034CAFAC ADD X10, X10, 0xDBA
	0x034CAFB0 MOVZ W11, 0x1C
	0x034CAFB4 MOVZ W13, 0x8
	0x034CAFB8 ADD X0, X31, 0x0
	0x034CAFBC STP X8, X9, [X31]
	0x034CAFC0 STP X10, X11, [X31 + 0x10]
	0x034CAFC4 STR W13, [X31 + 0x28]
	0x034CAFC8 STR D0, [X31 + 0x20]
	0x034CAFCC STRB W31, [X31 + 0x2C]
	0x034CAFD0 BL 0x1C1729C
	0x034CAFD4 MOV X8, X0
	0x034CAFD8 STR X0, [X20 + 0x278]
	0x034CAFDC MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF16000
	006 Move X8, [X20+336]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43892736
	011 Move V0, [X12+1464]
	012 Move X8, -43737088
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3775
	017 Move W11, 13
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+336], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_PidArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034CAFE0 BLR X8
	0x034CAFE4 LDP X20, X19, [X31 + 0x40]
	0x034CAFE8 LDR X30, [X31 + 0x30]
	0x034CAFEC ADD X31, X31, 0x50
	0x034CAFF0 RET
	0x034CAFF4 SUB X31, X31, 0x50
	0x034CAFF8 STR X30, [X31 + 0x30]
	0x034CAFFC STP X20, X19, [X31 + 0x40]
	0x034CB000 ADRP X20, 0xF14000
	0x034CB004 LDR X8, [X20 + 0x280]
	0x034CB008 MOV X19, X0
	0x034CB00C CBNZ X8, 0x34CB058
	0x034CB010 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB014 LDR V0, [X12 + 0x5B8]
	0x034CB018 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB01C ADRP X10, 0xFFFFFFFFFD65B000
	0x034CB020 ADD X8, X8, 0xDD2
	0x034CB024 MOVZ W9, 0x11
	0x034CB028 ADD X10, X10, 0x494
	0x034CB02C MOVZ W11, 0x19
	0x034CB030 MOVZ W13, 0x8
	0x034CB034 ADD X0, X31, 0x0
	0x034CB038 STP X8, X9, [X31]
	0x034CB03C STP X10, X11, [X31 + 0x10]
	0x034CB040 STR W13, [X31 + 0x28]
	0x034CB044 STR D0, [X31 + 0x20]
	0x034CB048 STRB W31, [X31 + 0x2C]
	0x034CB04C BL 0x1C1729C
	0x034CB050 MOV X8, X0
	0x034CB054 STR X0, [X20 + 0x280]
	0x034CB058 MOV X0, X19
	0x034CB05C BLR X8
	0x034CB060 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF16000
	007 Move X8, [X21+344]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43896832
	013 Move V0, [X12+1464]
	014 Move X8, -43741184
	015 Move X10, -43810816
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 960
	019 Move W11, 23
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+344], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UIntPtr ovr_PidArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034CB064 LDR X30, [X31 + 0x30]
	0x034CB068 ADD X31, X31, 0x50
	0x034CB06C RET
	0x034CB070 SUB X31, X31, 0x50
	0x034CB074 STR X30, [X31 + 0x30]
	0x034CB078 STP X20, X19, [X31 + 0x40]
	0x034CB07C ADRP X20, 0xF14000
	0x034CB080 LDR X8, [X20 + 0x288]
	0x034CB084 MOV X19, X0
	0x034CB088 CBNZ X8, 0x34CB0D4
	0x034CB08C ADRP X12, 0xFFFFFFFFFD622000
	0x034CB090 LDR V0, [X12 + 0x5B8]
	0x034CB094 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB098 ADRP X10, 0xFFFFFFFFFD641000
	0x034CB09C ADD X8, X8, 0xDD2
	0x034CB0A0 MOVZ W9, 0x11
	0x034CB0A4 ADD X10, X10, 0x497
	0x034CB0A8 MOVZ W11, 0x1D
	0x034CB0AC MOVZ W13, 0x8
	0x034CB0B0 ADD X0, X31, 0x0
	0x034CB0B4 STP X8, X9, [X31]
	0x034CB0B8 STP X10, X11, [X31 + 0x10]
	0x034CB0BC STR W13, [X31 + 0x28]
	0x034CB0C0 STR D0, [X31 + 0x20]
	0x034CB0C4 STRB W31, [X31 + 0x2C]
	0x034CB0C8 BL 0x1C1729C
	0x034CB0CC MOV X8, X0
	0x034CB0D0 STR X0, [X20 + 0x288]
	0x034CB0D4 MOV X0, X19
	0x034CB0D8 BLR X8
	0x034CB0DC LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+352]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1629
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+352], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.PlatformInitializeResult ovr_PlatformInitialize_GetResult(System.IntPtr obj)

Disassembly:
	0x034CB0E0 LDR X30, [X31 + 0x30]
	0x034CB0E4 CMP W0, 0x0
	0x034CB0E8 CSET W0, NE
	0x034CB0EC ADD X31, X31, 0x50
	0x034CB0F0 RET
	0x034CB0F4 SUB X31, X31, 0x50
	0x034CB0F8 STR X30, [X31 + 0x30]
	0x034CB0FC STP X20, X19, [X31 + 0x40]
	0x034CB100 ADRP X20, 0xF14000
	0x034CB104 LDR X8, [X20 + 0x290]
	0x034CB108 MOV X19, X0
	0x034CB10C CBNZ X8, 0x34CB158
	0x034CB110 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB114 LDR V0, [X12 + 0x5B8]
	0x034CB118 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB11C ADRP X10, 0xFFFFFFFFFD64C000
	0x034CB120 ADD X8, X8, 0xDD2
	0x034CB124 MOVZ W9, 0x11
	0x034CB128 ADD X10, X10, 0xECD
	0x034CB12C MOVZ W11, 0x28
	0x034CB130 MOVZ W13, 0x8
	0x034CB134 ADD X0, X31, 0x0
	0x034CB138 STP X8, X9, [X31]
	0x034CB13C STP X10, X11, [X31 + 0x10]
	0x034CB140 STR W13, [X31 + 0x28]
	0x034CB144 STR D0, [X31 + 0x20]
	0x034CB148 STRB W31, [X31 + 0x2C]
	0x034CB14C BL 0x1C1729C
	0x034CB150 MOV X8, X0
	0x034CB154 STR X0, [X20 + 0x290]
	0x034CB158 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+360]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43663360
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1139
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+360], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt32 ovr_Price_GetAmountInHundredths(System.IntPtr obj)

Disassembly:
	0x034CB15C BLR X8
	0x034CB160 LDP X20, X19, [X31 + 0x40]
	0x034CB164 LDR X30, [X31 + 0x30]
	0x034CB168 CMP W0, 0x0
	0x034CB16C CSET W0, NE
	0x034CB170 ADD X31, X31, 0x50
	0x034CB174 RET
	0x034CB178 SUB X31, X31, 0x50
	0x034CB17C STR X30, [X31 + 0x30]
	0x034CB180 STP X20, X19, [X31 + 0x40]
	0x034CB184 ADRP X20, 0xF14000
	0x034CB188 LDR X8, [X20 + 0x298]
	0x034CB18C MOV X19, X0
	0x034CB190 CBNZ X8, 0x34CB1DC
	0x034CB194 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB198 LDR V0, [X12 + 0x5B8]
	0x034CB19C ADRP X8, 0xFFFFFFFFFD648000
	0x034CB1A0 ADRP X10, 0xFFFFFFFFFD63D000
	0x034CB1A4 ADD X8, X8, 0xDD2
	0x034CB1A8 MOVZ W9, 0x11
	0x034CB1AC ADD X10, X10, 0x687
	0x034CB1B0 MOVZ W11, 0x1D
	0x034CB1B4 MOVZ W13, 0x8
	0x034CB1B8 ADD X0, X31, 0x0
	0x034CB1BC STP X8, X9, [X31]
	0x034CB1C0 STP X10, X11, [X31 + 0x10]
	0x034CB1C4 STR W13, [X31 + 0x28]
	0x034CB1C8 STR D0, [X31 + 0x20]
	0x034CB1CC STRB W31, [X31 + 0x2C]
	0x034CB1D0 BL 0x1C1729C
	0x034CB1D4 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+368]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43671552
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1048
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+368], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Price_GetCurrency(System.IntPtr obj)

Disassembly:
	0x034CB1D8 STR X0, [X20 + 0x298]
	0x034CB1DC MOV X0, X19
	0x034CB1E0 BLR X8
	0x034CB1E4 LDP X20, X19, [X31 + 0x40]
	0x034CB1E8 LDR X30, [X31 + 0x30]
	0x034CB1EC ADD X31, X31, 0x50
	0x034CB1F0 RET
	0x034CB1F4 SUB X31, X31, 0x50
	0x034CB1F8 STR X30, [X31 + 0x30]
	0x034CB1FC STP X20, X19, [X31 + 0x40]
	0x034CB200 ADRP X20, 0xF14000
	0x034CB204 LDR X8, [X20 + 0x2A0]
	0x034CB208 MOV X19, X0
	0x034CB20C CBNZ X8, 0x34CB258
	0x034CB210 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB214 LDR V0, [X12 + 0x5B8]
	0x034CB218 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB21C ADRP X10, 0xFFFFFFFFFD641000
	0x034CB220 ADD X8, X8, 0xDD2
	0x034CB224 MOVZ W9, 0x11
	0x034CB228 ADD X10, X10, 0x4B5
	0x034CB22C MOVZ W11, 0x18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+376]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+376], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Price_GetCurrency_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Price_GetCurrency_Native(System.IntPtr obj)

Disassembly:
	0x034CB230 MOVZ W13, 0x8
	0x034CB234 ADD X0, X31, 0x0
	0x034CB238 STP X8, X9, [X31]
	0x034CB23C STP X10, X11, [X31 + 0x10]
	0x034CB240 STR W13, [X31 + 0x28]
	0x034CB244 STR D0, [X31 + 0x20]
	0x034CB248 STRB W31, [X31 + 0x2C]
	0x034CB24C BL 0x1C1729C
	0x034CB250 MOV X8, X0
	0x034CB254 STR X0, [X20 + 0x2A0]
	0x034CB258 MOV X0, X19
	0x034CB25C BLR X8
	0x034CB260 LDP X20, X19, [X31 + 0x40]
	0x034CB264 LDR X30, [X31 + 0x30]
	0x034CB268 ADD X31, X31, 0x50
	0x034CB26C RET
	0x034CB270 SUB X31, X31, 0x50
	0x034CB274 STP X30, X21, [X31 + 0x30]
	0x034CB278 STP X20, X19, [X31 + 0x40]
	0x034CB27C ADRP X21, 0xF14000
	0x034CB280 LDR X8, [X21 + 0x2A8]
	0x034CB284 MOV X19, X1
	0x034CB288 MOV X20, X0
	0x034CB28C CBNZ X8, 0x34CB2D8
	0x034CB290 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB294 LDR V0, [X12 + 0x5B8]
	0x034CB298 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB29C ADRP X10, 0xFFFFFFFFFD659000
	0x034CB2A0 ADD X8, X8, 0xDD2
	0x034CB2A4 MOVZ W9, 0x11
	0x034CB2A8 ADD X10, X10, 0x438

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+384]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43642880
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3396
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+384], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Price_GetFormatted(System.IntPtr obj)

Disassembly:
	0x034CB2AC MOVZ W11, 0x1E
	0x034CB2B0 MOVZ W13, 0x10
	0x034CB2B4 ADD X0, X31, 0x0
	0x034CB2B8 STP X8, X9, [X31]
	0x034CB2BC STP X10, X11, [X31 + 0x10]
	0x034CB2C0 STR W13, [X31 + 0x28]
	0x034CB2C4 STR D0, [X31 + 0x20]
	0x034CB2C8 STRB W31, [X31 + 0x2C]
	0x034CB2CC BL 0x1C1729C
	0x034CB2D0 MOV X8, X0
	0x034CB2D4 STR X0, [X21 + 0x2A8]
	0x034CB2D8 MOV X0, X20
	0x034CB2DC MOV X1, X19
	0x034CB2E0 BLR X8
	0x034CB2E4 LDP X20, X19, [X31 + 0x40]
	0x034CB2E8 LDP X30, X21, [X31 + 0x30]
	0x034CB2EC ADD X31, X31, 0x50
	0x034CB2F0 RET
	0x034CB2F4 SUB X31, X31, 0x50
	0x034CB2F8 STR X30, [X31 + 0x30]
	0x034CB2FC STP X20, X19, [X31 + 0x40]
	0x034CB300 ADRP X20, 0xF14000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+392]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+392], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Price_GetFormatted_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Price_GetFormatted_Native(System.IntPtr obj)

Disassembly:
	0x034CB304 LDR X8, [X20 + 0x2B0]
	0x034CB308 MOV X19, X0
	0x034CB30C CBNZ X8, 0x34CB358
	0x034CB310 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB314 LDR V0, [X12 + 0x5B8]
	0x034CB318 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB31C ADRP X10, 0xFFFFFFFFFD62F000
	0x034CB320 ADD X8, X8, 0xDD2
	0x034CB324 MOVZ W9, 0x11
	0x034CB328 ADD X10, X10, 0x948
	0x034CB32C MOVZ W11, 0x1B
	0x034CB330 MOVZ W13, 0x8
	0x034CB334 ADD X0, X31, 0x0
	0x034CB338 STP X8, X9, [X31]
	0x034CB33C STP X10, X11, [X31 + 0x10]
	0x034CB340 STR W13, [X31 + 0x28]
	0x034CB344 STR D0, [X31 + 0x20]
	0x034CB348 STRB W31, [X31 + 0x2C]
	0x034CB34C BL 0x1C1729C
	0x034CB350 MOV X8, X0
	0x034CB354 STR X0, [X20 + 0x2B0]
	0x034CB358 MOV X0, X19
	0x034CB35C BLR X8
	0x034CB360 LDP X20, X19, [X31 + 0x40]
	0x034CB364 LDR X30, [X31 + 0x30]
	0x034CB368 ADD X31, X31, 0x50
	0x034CB36C RET
	0x034CB370 SUB X31, X31, 0x50
	0x034CB374 STR X30, [X31 + 0x30]
	0x034CB378 STP X20, X19, [X31 + 0x40]
	0x034CB37C ADRP X20, 0xF14000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+400]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43704320
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 962
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+400], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Product_GetDescription(System.IntPtr obj)

Disassembly:
	0x034CB380 LDR X8, [X20 + 0x2B8]
	0x034CB384 MOV X19, X0
	0x034CB388 CBNZ X8, 0x34CB3D4
	0x034CB38C ADRP X12, 0xFFFFFFFFFD622000
	0x034CB390 LDR V0, [X12 + 0x5B8]
	0x034CB394 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB398 ADRP X10, 0xFFFFFFFFFD62F000
	0x034CB39C ADD X8, X8, 0xDD2
	0x034CB3A0 MOVZ W9, 0x11
	0x034CB3A4 ADD X10, X10, 0x964
	0x034CB3A8 MOVZ W11, 0x20
	0x034CB3AC MOVZ W13, 0x8
	0x034CB3B0 ADD X0, X31, 0x0
	0x034CB3B4 STP X8, X9, [X31]
	0x034CB3B8 STP X10, X11, [X31 + 0x10]
	0x034CB3BC STR W13, [X31 + 0x28]
	0x034CB3C0 STR D0, [X31 + 0x20]
	0x034CB3C4 STRB W31, [X31 + 0x2C]
	0x034CB3C8 BL 0x1C1729C
	0x034CB3CC MOV X8, X0
	0x034CB3D0 STR X0, [X20 + 0x2B8]
	0x034CB3D4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+408]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+408], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Product_GetDescription_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Product_GetDescription_Native(System.IntPtr obj)

Disassembly:
	0x034CB3D8 BLR X8
	0x034CB3DC LDP X20, X19, [X31 + 0x40]
	0x034CB3E0 LDR X30, [X31 + 0x30]
	0x034CB3E4 ADD X31, X31, 0x50
	0x034CB3E8 RET
	0x034CB3EC SUB X31, X31, 0x50
	0x034CB3F0 STR X30, [X31 + 0x30]
	0x034CB3F4 STP X20, X19, [X31 + 0x40]
	0x034CB3F8 ADRP X20, 0xF14000
	0x034CB3FC LDR X8, [X20 + 0x2C0]
	0x034CB400 MOV X19, X0
	0x034CB404 CBNZ X8, 0x34CB450
	0x034CB408 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB40C LDR V0, [X12 + 0x5B8]
	0x034CB410 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB414 ADRP X10, 0xFFFFFFFFFD651000
	0x034CB418 ADD X8, X8, 0xDD2
	0x034CB41C MOVZ W9, 0x11
	0x034CB420 ADD X10, X10, 0x3D9
	0x034CB424 MOVZ W11, 0x1E
	0x034CB428 MOVZ W13, 0x8
	0x034CB42C ADD X0, X31, 0x0
	0x034CB430 STP X8, X9, [X31]
	0x034CB434 STP X10, X11, [X31 + 0x10]
	0x034CB438 STR W13, [X31 + 0x28]
	0x034CB43C STR D0, [X31 + 0x20]
	0x034CB440 STRB W31, [X31 + 0x2C]
	0x034CB444 BL 0x1C1729C
	0x034CB448 MOV X8, X0
	0x034CB44C STR X0, [X20 + 0x2C0]
	0x034CB450 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+416]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1332
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+416], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Product_GetFormattedPrice(System.IntPtr obj)

Disassembly:
	0x034CB454 BLR X8
	0x034CB458 LDP X20, X19, [X31 + 0x40]
	0x034CB45C LDR X30, [X31 + 0x30]
	0x034CB460 ADD X31, X31, 0x50
	0x034CB464 RET
	0x034CB468 SUB X31, X31, 0x50
	0x034CB46C STR X30, [X31 + 0x30]
	0x034CB470 STP X20, X19, [X31 + 0x40]
	0x034CB474 ADRP X20, 0xF14000
	0x034CB478 LDR X8, [X20 + 0x2C8]
	0x034CB47C MOV X19, X0
	0x034CB480 CBNZ X8, 0x34CB4CC
	0x034CB484 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB488 LDR V0, [X12 + 0x5B8]
	0x034CB48C ADRP X8, 0xFFFFFFFFFD648000
	0x034CB490 ADRP X10, 0xFFFFFFFFFD65C000
	0x034CB494 ADD X8, X8, 0xDD2
	0x034CB498 MOVZ W9, 0x11
	0x034CB49C ADD X10, X10, 0xEA7
	0x034CB4A0 MOVZ W11, 0x1D
	0x034CB4A4 MOVZ W13, 0x8
	0x034CB4A8 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+424]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+424], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Product_GetFormattedPrice_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Product_GetFormattedPrice_Native(System.IntPtr obj)

Disassembly:
	0x034CB4AC STP X8, X9, [X31]
	0x034CB4B0 STP X10, X11, [X31 + 0x10]
	0x034CB4B4 STR W13, [X31 + 0x28]
	0x034CB4B8 STR D0, [X31 + 0x20]
	0x034CB4BC STRB W31, [X31 + 0x2C]
	0x034CB4C0 BL 0x1C1729C
	0x034CB4C4 MOV X8, X0
	0x034CB4C8 STR X0, [X20 + 0x2C8]
	0x034CB4CC MOV X0, X19
	0x034CB4D0 BLR X8
	0x034CB4D4 LDP X20, X19, [X31 + 0x40]
	0x034CB4D8 LDR X30, [X31 + 0x30]
	0x034CB4DC ADD X31, X31, 0x50
	0x034CB4E0 RET
	0x034CB4E4 SUB X31, X31, 0x50
	0x034CB4E8 STR X30, [X31 + 0x30]
	0x034CB4EC STP X20, X19, [X31 + 0x40]
	0x034CB4F0 ADRP X20, 0xF14000
	0x034CB4F4 LDR X8, [X20 + 0x2D0]
	0x034CB4F8 MOV X19, X0
	0x034CB4FC CBNZ X8, 0x34CB548
	0x034CB500 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB504 LDR V0, [X12 + 0x5B8]
	0x034CB508 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB50C ADRP X10, 0xFFFFFFFFFD62D000
	0x034CB510 ADD X8, X8, 0xDD2
	0x034CB514 MOVZ W9, 0x11
	0x034CB518 ADD X10, X10, 0x80B
	0x034CB51C MOVZ W11, 0x21
	0x034CB520 MOVZ W13, 0x8
	0x034CB524 ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+432]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43859968
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2045
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+432], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Product_GetName(System.IntPtr obj)

Disassembly:
	0x034CB528 STP X8, X9, [X31]
	0x034CB52C STP X10, X11, [X31 + 0x10]
	0x034CB530 STR W13, [X31 + 0x28]
	0x034CB534 STR D0, [X31 + 0x20]
	0x034CB538 STRB W31, [X31 + 0x2C]
	0x034CB53C BL 0x1C1729C
	0x034CB540 MOV X8, X0
	0x034CB544 STR X0, [X20 + 0x2D0]
	0x034CB548 MOV X0, X19
	0x034CB54C BLR X8
	0x034CB550 LDP X20, X19, [X31 + 0x40]
	0x034CB554 LDR X30, [X31 + 0x30]
	0x034CB558 ADD X31, X31, 0x50
	0x034CB55C RET
	0x034CB560 SUB X31, X31, 0x50
	0x034CB564 STR X30, [X31 + 0x30]
	0x034CB568 STP X20, X19, [X31 + 0x40]
	0x034CB56C ADRP X20, 0xF14000
	0x034CB570 LDR X8, [X20 + 0x2D8]
	0x034CB574 MOV X19, X0
	0x034CB578 CBNZ X8, 0x34CB5C4
	0x034CB57C ADRP X12, 0xFFFFFFFFFD622000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+440]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+440], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Product_GetName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Product_GetName_Native(System.IntPtr obj)

Disassembly:
	0x034CB580 LDR V0, [X12 + 0x5B8]
	0x034CB584 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB588 ADRP X10, 0xFFFFFFFFFD63D000
	0x034CB58C ADD X8, X8, 0xDD2
	0x034CB590 MOVZ W9, 0x11
	0x034CB594 ADD X10, X10, 0x6A5
	0x034CB598 MOVZ W11, 0x26
	0x034CB59C MOVZ W13, 0x8
	0x034CB5A0 ADD X0, X31, 0x0
	0x034CB5A4 STP X8, X9, [X31]
	0x034CB5A8 STP X10, X11, [X31 + 0x10]
	0x034CB5AC STR W13, [X31 + 0x28]
	0x034CB5B0 STR D0, [X31 + 0x20]
	0x034CB5B4 STRB W31, [X31 + 0x2C]
	0x034CB5B8 BL 0x1C1729C
	0x034CB5BC MOV X8, X0
	0x034CB5C0 STR X0, [X20 + 0x2D8]
	0x034CB5C4 MOV X0, X19
	0x034CB5C8 BLR X8
	0x034CB5CC LDP X20, X19, [X31 + 0x40]
	0x034CB5D0 LDR X30, [X31 + 0x30]
	0x034CB5D4 ADD X31, X31, 0x50
	0x034CB5D8 RET
	0x034CB5DC SUB X31, X31, 0x50
	0x034CB5E0 STR X30, [X31 + 0x30]
	0x034CB5E4 STP X20, X19, [X31 + 0x40]
	0x034CB5E8 ADRP X20, 0xF14000
	0x034CB5EC LDR X8, [X20 + 0x2E0]
	0x034CB5F0 MOV X19, X0
	0x034CB5F4 CBNZ X8, 0x34CB640
	0x034CB5F8 ADRP X12, 0xFFFFFFFFFD622000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+448]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 123
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+448], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Product_GetSKU(System.IntPtr obj)

Disassembly:
	0x034CB5FC LDR V0, [X12 + 0x5B8]
	0x034CB600 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB604 ADRP X10, 0xFFFFFFFFFD62F000
	0x034CB608 ADD X8, X8, 0xDD2
	0x034CB60C MOVZ W9, 0x11
	0x034CB610 ADD X10, X10, 0x985
	0x034CB614 MOVZ W11, 0x1D
	0x034CB618 MOVZ W13, 0x8
	0x034CB61C ADD X0, X31, 0x0
	0x034CB620 STP X8, X9, [X31]
	0x034CB624 STP X10, X11, [X31 + 0x10]
	0x034CB628 STR W13, [X31 + 0x28]
	0x034CB62C STR D0, [X31 + 0x20]
	0x034CB630 STRB W31, [X31 + 0x2C]
	0x034CB634 BL 0x1C1729C
	0x034CB638 MOV X8, X0
	0x034CB63C STR X0, [X20 + 0x2E0]
	0x034CB640 MOV X0, X19
	0x034CB644 BLR X8
	0x034CB648 LDP X20, X19, [X31 + 0x40]
	0x034CB64C LDR X30, [X31 + 0x30]
	0x034CB650 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+456]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+456], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Product_GetSKU_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Product_GetSKU_Native(System.IntPtr obj)

Disassembly:
	0x034CB654 RET
	0x034CB658 STP X30, X21, [X31 - 0x20]!
	0x034CB65C STP X20, X19, [X31 + 0x10]
	0x034CB660 ADRP X20, 0xF14000
	0x034CB664 ADRP X21, 0xC67000
	0x034CB668 LDRB W8, [X20 + 0x2E8]
	0x034CB66C LDR X21, [X21 + 0x328]
	0x034CB670 MOV X19, X0
	0x034CB674 TBNZ X8, 0x0, 0x34CB68C
	0x034CB678 ADRP X0, 0xC67000
	0x034CB67C LDR X0, [X0 + 0x328]
	0x034CB680 BL 0x1C16CF4
	0x034CB684 MOVZ W8, 0x1
	0x034CB688 STRB W8, [X20 + 0x2E8]
	0x034CB68C LDR X0, [X21]
	0x034CB690 LDR W8, [X0 + 0xE0]
	0x034CB694 CBNZ W8, 0x34CB69C
	0x034CB698 BL 0x1C16DFC
	0x034CB69C MOV X0, X19
	0x034CB6A0 BL 0x34CB6B0
	0x034CB6A4 LDP X20, X19, [X31 + 0x10]
	0x034CB6A8 LDP X30, X21, [X31], #0x20
	0x034CB6AC B 0x34B3B78
	0x034CB6B0 SUB X31, X31, 0x50
	0x034CB6B4 STR X30, [X31 + 0x30]
	0x034CB6B8 STP X20, X19, [X31 + 0x40]
	0x034CB6BC ADRP X20, 0xF14000
	0x034CB6C0 LDR X8, [X20 + 0x2F0]
	0x034CB6C4 MOV X19, X0
	0x034CB6C8 CBNZ X8, 0x34CB714
	0x034CB6CC ADRP X12, 0xFFFFFFFFFD622000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+464]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43859968
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2075
	017 Move W11, 18
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+464], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_ProductArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034CB6D0 LDR V0, [X12 + 0x5B8]
	0x034CB6D4 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB6D8 ADRP X10, 0xFFFFFFFFFD62F000
	0x034CB6DC ADD X8, X8, 0xDD2
	0x034CB6E0 MOVZ W9, 0x11
	0x034CB6E4 ADD X10, X10, 0x9A3
	0x034CB6E8 MOVZ W11, 0x1B
	0x034CB6EC MOVZ W13, 0x8
	0x034CB6F0 ADD X0, X31, 0x0
	0x034CB6F4 STP X8, X9, [X31]
	0x034CB6F8 STP X10, X11, [X31 + 0x10]
	0x034CB6FC STR W13, [X31 + 0x28]
	0x034CB700 STR D0, [X31 + 0x20]
	0x034CB704 STRB W31, [X31 + 0x2C]
	0x034CB708 BL 0x1C1729C
	0x034CB70C MOV X8, X0
	0x034CB710 STR X0, [X20 + 0x2F0]
	0x034CB714 MOV X0, X19
	0x034CB718 BLR X8
	0x034CB71C LDP X20, X19, [X31 + 0x40]
	0x034CB720 LDR X30, [X31 + 0x30]
	0x034CB724 ADD X31, X31, 0x50
	0x034CB728 RET
	0x034CB72C SUB X31, X31, 0x50
	0x034CB730 STR X30, [X31 + 0x30]
	0x034CB734 STP X20, X19, [X31 + 0x40]
	0x034CB738 ADRP X20, 0xF14000
	0x034CB73C LDR X8, [X20 + 0x2F8]
	0x034CB740 MOV X19, X0
	0x034CB744 CBNZ X8, 0x34CB790
	0x034CB748 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB74C LDR V0, [X12 + 0x5B8]
	0x034CB750 ADRP X8, 0xFFFFFFFFFD648000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF15000
	007 Move X8, [X21+472]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43896832
	013 Move V0, [X12+1464]
	014 Move X8, -43741184
	015 Move X10, -43851776
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2001
	019 Move W11, 27
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+472], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_ProductArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034CB754 ADRP X10, 0xFFFFFFFFFD65B000
	0x034CB758 ADD X8, X8, 0xDD2
	0x034CB75C MOVZ W9, 0x11
	0x034CB760 ADD X10, X10, 0x4AE
	0x034CB764 MOVZ W11, 0x1E
	0x034CB768 MOVZ W13, 0x8
	0x034CB76C ADD X0, X31, 0x0
	0x034CB770 STP X8, X9, [X31]
	0x034CB774 STP X10, X11, [X31 + 0x10]
	0x034CB778 STR W13, [X31 + 0x28]
	0x034CB77C STR D0, [X31 + 0x20]
	0x034CB780 STRB W31, [X31 + 0x2C]
	0x034CB784 BL 0x1C1729C
	0x034CB788 MOV X8, X0
	0x034CB78C STR X0, [X20 + 0x2F8]
	0x034CB790 MOV X0, X19
	0x034CB794 BLR X8
	0x034CB798 LDP X20, X19, [X31 + 0x40]
	0x034CB79C LDR X30, [X31 + 0x30]
	0x034CB7A0 ADD X31, X31, 0x50
	0x034CB7A4 RET
	0x034CB7A8 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+480]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+480], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_ProductArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_ProductArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034CB7AC STR X30, [X31 + 0x30]
	0x034CB7B0 STP X20, X19, [X31 + 0x40]
	0x034CB7B4 ADRP X20, 0xF14000
	0x034CB7B8 LDR X8, [X20 + 0x300]
	0x034CB7BC MOV X19, X0
	0x034CB7C0 CBNZ X8, 0x34CB80C
	0x034CB7C4 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB7C8 LDR V0, [X12 + 0x5B8]
	0x034CB7CC ADRP X8, 0xFFFFFFFFFD648000
	0x034CB7D0 ADRP X10, 0xFFFFFFFFFD62F000
	0x034CB7D4 ADD X8, X8, 0xDD2
	0x034CB7D8 MOVZ W9, 0x11
	0x034CB7DC ADD X10, X10, 0x9BF
	0x034CB7E0 MOVZ W11, 0x20
	0x034CB7E4 MOVZ W13, 0x8
	0x034CB7E8 ADD X0, X31, 0x0
	0x034CB7EC STP X8, X9, [X31]
	0x034CB7F0 STP X10, X11, [X31 + 0x10]
	0x034CB7F4 STR W13, [X31 + 0x28]
	0x034CB7F8 STR D0, [X31 + 0x20]
	0x034CB7FC STRB W31, [X31 + 0x2C]
	0x034CB800 BL 0x1C1729C
	0x034CB804 MOV X8, X0
	0x034CB808 STR X0, [X20 + 0x300]
	0x034CB80C MOV X0, X19
	0x034CB810 BLR X8
	0x034CB814 LDP X20, X19, [X31 + 0x40]
	0x034CB818 LDR X30, [X31 + 0x30]
	0x034CB81C ADD X31, X31, 0x50
	0x034CB820 RET
	0x034CB824 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+488]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43716608
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3962
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+488], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_ProductArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034CB828 STP X20, X19, [X31 + 0x10]
	0x034CB82C ADRP X20, 0xF14000
	0x034CB830 ADRP X21, 0xC67000
	0x034CB834 LDRB W8, [X20 + 0x308]
	0x034CB838 LDR X21, [X21 + 0x328]
	0x034CB83C MOV X19, X0
	0x034CB840 TBNZ X8, 0x0, 0x34CB858
	0x034CB844 ADRP X0, 0xC67000
	0x034CB848 LDR X0, [X0 + 0x328]
	0x034CB84C BL 0x1C16CF4
	0x034CB850 MOVZ W8, 0x1
	0x034CB854 STRB W8, [X20 + 0x308]
	0x034CB858 LDR X0, [X21]
	0x034CB85C LDR W8, [X0 + 0xE0]
	0x034CB860 CBNZ W8, 0x34CB868
	0x034CB864 BL 0x1C16DFC
	0x034CB868 MOV X0, X19
	0x034CB86C BL 0x34CB87C
	0x034CB870 LDP X20, X19, [X31 + 0x10]
	0x034CB874 LDP X30, X21, [X31], #0x20
	0x034CB878 B 0x34B3B78
	0x034CB87C SUB X31, X31, 0x50
	0x034CB880 STR X30, [X31 + 0x30]
	0x034CB884 STP X20, X19, [X31 + 0x40]
	0x034CB888 ADRP X20, 0xF14000
	0x034CB88C LDR X8, [X20 + 0x310]
	0x034CB890 MOV X19, X0
	0x034CB894 CBNZ X8, 0x34CB8E0
	0x034CB898 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB89C LDR V0, [X12 + 0x5B8]
	0x034CB8A0 ADRP X8, 0xFFFFFFFFFD648000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+496]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43859968
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2094
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+496], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_ProductArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034CB8A4 ADRP X10, 0xFFFFFFFFFD639000
	0x034CB8A8 ADD X8, X8, 0xDD2
	0x034CB8AC MOVZ W9, 0x11
	0x034CB8B0 ADD X10, X10, 0x882
	0x034CB8B4 MOVZ W11, 0x21
	0x034CB8B8 MOVZ W13, 0x8
	0x034CB8BC ADD X0, X31, 0x0
	0x034CB8C0 STP X8, X9, [X31]
	0x034CB8C4 STP X10, X11, [X31 + 0x10]
	0x034CB8C8 STR W13, [X31 + 0x28]
	0x034CB8CC STR D0, [X31 + 0x20]
	0x034CB8D0 STRB W31, [X31 + 0x2C]
	0x034CB8D4 BL 0x1C1729C
	0x034CB8D8 MOV X8, X0
	0x034CB8DC STR X0, [X20 + 0x310]
	0x034CB8E0 MOV X0, X19
	0x034CB8E4 BLR X8
	0x034CB8E8 LDP X20, X19, [X31 + 0x40]
	0x034CB8EC LDR X30, [X31 + 0x30]
	0x034CB8F0 ADD X31, X31, 0x50
	0x034CB8F4 RET
	0x034CB8F8 SUB X31, X31, 0x50
	0x034CB8FC STR X30, [X31 + 0x30]
	0x034CB900 STP X20, X19, [X31 + 0x40]
	0x034CB904 ADRP X20, 0xF14000
	0x034CB908 LDR X8, [X20 + 0x318]
	0x034CB90C MOV X19, X0
	0x034CB910 CBNZ X8, 0x34CB95C
	0x034CB914 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB918 LDR V0, [X12 + 0x5B8]
	0x034CB91C ADRP X8, 0xFFFFFFFFFD648000
	0x034CB920 ADRP X10, 0xFFFFFFFFFD64A000
	0x034CB924 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+504]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43835392
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2229
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+504], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_Purchase_GetDeveloperPayload(System.IntPtr obj)

Disassembly:
	0x034CB928 MOVZ W9, 0x11
	0x034CB92C ADD X10, X10, 0xDD7
	0x034CB930 MOVZ W11, 0x24
	0x034CB934 MOVZ W13, 0x8
	0x034CB938 ADD X0, X31, 0x0
	0x034CB93C STP X8, X9, [X31]
	0x034CB940 STP X10, X11, [X31 + 0x10]
	0x034CB944 STR W13, [X31 + 0x28]
	0x034CB948 STR D0, [X31 + 0x20]
	0x034CB94C STRB W31, [X31 + 0x2C]
	0x034CB950 BL 0x1C1729C
	0x034CB954 MOV X8, X0
	0x034CB958 STR X0, [X20 + 0x318]
	0x034CB95C MOV X0, X19
	0x034CB960 BLR X8
	0x034CB964 LDP X20, X19, [X31 + 0x40]
	0x034CB968 LDR X30, [X31 + 0x30]
	0x034CB96C ADD X31, X31, 0x50
	0x034CB970 RET
	0x034CB974 STP X30, X21, [X31 - 0x20]!
	0x034CB978 STP X20, X19, [X31 + 0x10]
	0x034CB97C ADRP X20, 0xF14000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+512]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+512], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Purchase_GetDeveloperPayload_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Purchase_GetDeveloperPayload_Native(System.IntPtr obj)

Disassembly:
	0x034CB980 ADRP X21, 0xC67000
	0x034CB984 LDRB W8, [X20 + 0x320]
	0x034CB988 LDR X21, [X21 + 0x328]
	0x034CB98C MOV X19, X0
	0x034CB990 TBNZ X8, 0x0, 0x34CB9A8
	0x034CB994 ADRP X0, 0xC67000
	0x034CB998 LDR X0, [X0 + 0x328]
	0x034CB99C BL 0x1C16CF4
	0x034CB9A0 MOVZ W8, 0x1
	0x034CB9A4 STRB W8, [X20 + 0x320]
	0x034CB9A8 LDR X0, [X21]
	0x034CB9AC LDR W8, [X0 + 0xE0]
	0x034CB9B0 CBNZ W8, 0x34CB9B8
	0x034CB9B4 BL 0x1C16DFC
	0x034CB9B8 MOV X0, X19
	0x034CB9BC BL 0x34CB9CC
	0x034CB9C0 LDP X20, X19, [X31 + 0x10]
	0x034CB9C4 LDP X30, X21, [X31], #0x20
	0x034CB9C8 B 0x34B3B78
	0x034CB9CC SUB X31, X31, 0x50
	0x034CB9D0 STR X30, [X31 + 0x30]
	0x034CB9D4 STP X20, X19, [X31 + 0x40]
	0x034CB9D8 ADRP X20, 0xF14000
	0x034CB9DC LDR X8, [X20 + 0x328]
	0x034CB9E0 MOV X19, X0
	0x034CB9E4 CBNZ X8, 0x34CBA30
	0x034CB9E8 ADRP X12, 0xFFFFFFFFFD622000
	0x034CB9EC LDR V0, [X12 + 0x5B8]
	0x034CB9F0 ADRP X8, 0xFFFFFFFFFD648000
	0x034CB9F4 ADRP X10, 0xFFFFFFFFFD659000
	0x034CB9F8 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+520]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43745280
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 426
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+520], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.DateTime ovr_Purchase_GetExpirationTime(System.IntPtr obj)

Disassembly:
	0x034CB9FC MOVZ W9, 0x11
	0x034CBA00 ADD X10, X10, 0x457
	0x034CBA04 MOVZ W11, 0x19
	0x034CBA08 MOVZ W13, 0x8
	0x034CBA0C ADD X0, X31, 0x0
	0x034CBA10 STP X8, X9, [X31]
	0x034CBA14 STP X10, X11, [X31 + 0x10]
	0x034CBA18 STR W13, [X31 + 0x28]
	0x034CBA1C STR D0, [X31 + 0x20]
	0x034CBA20 STRB W31, [X31 + 0x2C]
	0x034CBA24 BL 0x1C1729C
	0x034CBA28 MOV X8, X0
	0x034CBA2C STR X0, [X20 + 0x328]
	0x034CBA30 MOV X0, X19
	0x034CBA34 BLR X8
	0x034CBA38 LDP X20, X19, [X31 + 0x40]
	0x034CBA3C LDR X30, [X31 + 0x30]
	0x034CBA40 ADD X31, X31, 0x50
	0x034CBA44 RET
	0x034CBA48 SUB X31, X31, 0x50
	0x034CBA4C STR X30, [X31 + 0x30]
	0x034CBA50 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+528]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+528], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Purchase_GetExpirationTime_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.DateTimeFromNative, X0
	031 Return X0

Method: System.UInt64 ovr_Purchase_GetExpirationTime_Native(System.IntPtr obj)

Disassembly:
	0x034CBA54 ADRP X20, 0xF14000
	0x034CBA58 LDR X8, [X20 + 0x330]
	0x034CBA5C MOV X19, X0
	0x034CBA60 CBNZ X8, 0x34CBAAC
	0x034CBA64 ADRP X12, 0xFFFFFFFFFD622000
	0x034CBA68 LDR V0, [X12 + 0x5B8]
	0x034CBA6C ADRP X8, 0xFFFFFFFFFD648000
	0x034CBA70 ADRP X10, 0xFFFFFFFFFD65E000
	0x034CBA74 ADD X8, X8, 0xDD2
	0x034CBA78 MOVZ W9, 0x11
	0x034CBA7C ADD X10, X10, 0xE5C
	0x034CBA80 MOVZ W11, 0x18
	0x034CBA84 MOVZ W13, 0x8
	0x034CBA88 ADD X0, X31, 0x0
	0x034CBA8C STP X8, X9, [X31]
	0x034CBA90 STP X10, X11, [X31 + 0x10]
	0x034CBA94 STR W13, [X31 + 0x28]
	0x034CBA98 STR D0, [X31 + 0x20]
	0x034CBA9C STRB W31, [X31 + 0x2C]
	0x034CBAA0 BL 0x1C1729C
	0x034CBAA4 MOV X8, X0
	0x034CBAA8 STR X0, [X20 + 0x330]
	0x034CBAAC MOV X0, X19
	0x034CBAB0 BLR X8
	0x034CBAB4 LDP X20, X19, [X31 + 0x40]
	0x034CBAB8 LDR X30, [X31 + 0x30]
	0x034CBABC ADD X31, X31, 0x50
	0x034CBAC0 RET
	0x034CBAC4 SUB X31, X31, 0x50
	0x034CBAC8 STR X30, [X31 + 0x30]
	0x034CBACC STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+536]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43892736
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2317
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+536], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.DateTime ovr_Purchase_GetGrantTime(System.IntPtr obj)

Disassembly:
	0x034CBAD0 ADRP X20, 0xF14000
	0x034CBAD4 LDR X8, [X20 + 0x338]
	0x034CBAD8 MOV X19, X0
	0x034CBADC CBNZ X8, 0x34CBB28
	0x034CBAE0 ADRP X12, 0xFFFFFFFFFD622000
	0x034CBAE4 LDR V0, [X12 + 0x5B8]
	0x034CBAE8 ADRP X8, 0xFFFFFFFFFD648000
	0x034CBAEC ADRP X10, 0xFFFFFFFFFD643000
	0x034CBAF0 ADD X8, X8, 0xDD2
	0x034CBAF4 MOVZ W9, 0x11
	0x034CBAF8 ADD X10, X10, 0x56B
	0x034CBAFC MOVZ W11, 0x16
	0x034CBB00 MOVZ W13, 0x8
	0x034CBB04 ADD X0, X31, 0x0
	0x034CBB08 STP X8, X9, [X31]
	0x034CBB0C STP X10, X11, [X31 + 0x10]
	0x034CBB10 STR W13, [X31 + 0x28]
	0x034CBB14 STR D0, [X31 + 0x20]
	0x034CBB18 STRB W31, [X31 + 0x2C]
	0x034CBB1C BL 0x1C1729C
	0x034CBB20 MOV X8, X0
	0x034CBB24 STR X0, [X20 + 0x338]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+544]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+544], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Purchase_GetGrantTime_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.DateTimeFromNative, X0
	031 Return X0

Method: System.UInt64 ovr_Purchase_GetGrantTime_Native(System.IntPtr obj)

Disassembly:
	0x034CBB28 MOV X0, X19
	0x034CBB2C BLR X8
	0x034CBB30 LDP X20, X19, [X31 + 0x40]
	0x034CBB34 LDR X30, [X31 + 0x30]
	0x034CBB38 ADD X31, X31, 0x50
	0x034CBB3C RET
	0x034CBB40 STP X30, X21, [X31 - 0x20]!
	0x034CBB44 STP X20, X19, [X31 + 0x10]
	0x034CBB48 ADRP X20, 0xF14000
	0x034CBB4C ADRP X21, 0xC67000
	0x034CBB50 LDRB W8, [X20 + 0x340]
	0x034CBB54 LDR X21, [X21 + 0x328]
	0x034CBB58 MOV X19, X0
	0x034CBB5C TBNZ X8, 0x0, 0x34CBB74
	0x034CBB60 ADRP X0, 0xC67000
	0x034CBB64 LDR X0, [X0 + 0x328]
	0x034CBB68 BL 0x1C16CF4
	0x034CBB6C MOVZ W8, 0x1
	0x034CBB70 STRB W8, [X20 + 0x340]
	0x034CBB74 LDR X0, [X21]
	0x034CBB78 LDR W8, [X0 + 0xE0]
	0x034CBB7C CBNZ W8, 0x34CBB84
	0x034CBB80 BL 0x1C16DFC
	0x034CBB84 MOV X0, X19
	0x034CBB88 BL 0x34CBB98
	0x034CBB8C LDP X20, X19, [X31 + 0x10]
	0x034CBB90 LDP X30, X21, [X31], #0x20
	0x034CBB94 B 0x34B3B78
	0x034CBB98 SUB X31, X31, 0x50
	0x034CBB9C STR X30, [X31 + 0x30]
	0x034CBBA0 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+552]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43732992
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3488
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+552], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_Purchase_GetPurchaseID(System.IntPtr obj)

Disassembly:
	0x034CBBA4 ADRP X20, 0xF14000
	0x034CBBA8 LDR X8, [X20 + 0x348]
	0x034CBBAC MOV X19, X0
	0x034CBBB0 CBNZ X8, 0x34CBBFC
	0x034CBBB4 ADRP X12, 0xFFFFFFFFFD622000
	0x034CBBB8 LDR V0, [X12 + 0x5B8]
	0x034CBBBC ADRP X8, 0xFFFFFFFFFD648000
	0x034CBBC0 ADRP X10, 0xFFFFFFFFFD635000
	0x034CBBC4 ADD X8, X8, 0xDD2
	0x034CBBC8 MOVZ W9, 0x11
	0x034CBBCC ADD X10, X10, 0x39C
	0x034CBBD0 MOVZ W11, 0x24
	0x034CBBD4 MOVZ W13, 0x8
	0x034CBBD8 ADD X0, X31, 0x0
	0x034CBBDC STP X8, X9, [X31]
	0x034CBBE0 STP X10, X11, [X31 + 0x10]
	0x034CBBE4 STR W13, [X31 + 0x28]
	0x034CBBE8 STR D0, [X31 + 0x20]
	0x034CBBEC STRB W31, [X31 + 0x2C]
	0x034CBBF0 BL 0x1C1729C
	0x034CBBF4 MOV X8, X0
	0x034CBBF8 STR X0, [X20 + 0x348]
	0x034CBBFC MOV X0, X19
	0x034CBC00 BLR X8
	0x034CBC04 LDP X20, X19, [X31 + 0x40]
	0x034CBC08 LDR X30, [X31 + 0x30]
	0x034CBC0C ADD X31, X31, 0x50
	0x034CBC10 RET
	0x034CBC14 SUB X31, X31, 0x50
	0x034CBC18 STR X30, [X31 + 0x30]
	0x034CBC1C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+560]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43642880
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3418
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+560], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Purchase_GetPurchaseStrID(System.IntPtr obj)

Disassembly:
	0x034CBC20 ADRP X20, 0xF14000
	0x034CBC24 LDR X8, [X20 + 0x350]
	0x034CBC28 MOV X19, X0
	0x034CBC2C CBNZ X8, 0x34CBC78
	0x034CBC30 ADRP X12, 0xFFFFFFFFFD622000
	0x034CBC34 LDR V0, [X12 + 0x5B8]
	0x034CBC38 ADRP X8, 0xFFFFFFFFFD648000
	0x034CBC3C ADRP X10, 0xFFFFFFFFFD655000
	0x034CBC40 ADD X8, X8, 0xDD2
	0x034CBC44 MOVZ W9, 0x11
	0x034CBC48 ADD X10, X10, 0x2A9
	0x034CBC4C MOVZ W11, 0x1E
	0x034CBC50 MOVZ W13, 0x8
	0x034CBC54 ADD X0, X31, 0x0
	0x034CBC58 STP X8, X9, [X31]
	0x034CBC5C STP X10, X11, [X31 + 0x10]
	0x034CBC60 STR W13, [X31 + 0x28]
	0x034CBC64 STR D0, [X31 + 0x20]
	0x034CBC68 STRB W31, [X31 + 0x2C]
	0x034CBC6C BL 0x1C1729C
	0x034CBC70 MOV X8, X0
	0x034CBC74 STR X0, [X20 + 0x350]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+568]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+568], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Purchase_GetPurchaseStrID_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Purchase_GetPurchaseStrID_Native(System.IntPtr obj)

Disassembly:
	0x034CBC78 MOV X0, X19
	0x034CBC7C BLR X8
	0x034CBC80 LDP X20, X19, [X31 + 0x40]
	0x034CBC84 LDR X30, [X31 + 0x30]
	0x034CBC88 ADD X31, X31, 0x50
	0x034CBC8C RET
	0x034CBC90 SUB X31, X31, 0x50
	0x034CBC94 STR X30, [X31 + 0x30]
	0x034CBC98 STP X20, X19, [X31 + 0x40]
	0x034CBC9C ADRP X20, 0xF14000
	0x034CBCA0 LDR X8, [X20 + 0x358]
	0x034CBCA4 MOV X19, X0
	0x034CBCA8 CBNZ X8, 0x34CBCF4
	0x034CBCAC ADRP X12, 0xFFFFFFFFFD622000
	0x034CBCB0 LDR V0, [X12 + 0x5B8]
	0x034CBCB4 ADRP X8, 0xFFFFFFFFFD648000
	0x034CBCB8 ADRP X10, 0xFFFFFFFFFD633000
	0x034CBCBC ADD X8, X8, 0xDD2
	0x034CBCC0 MOVZ W9, 0x11
	0x034CBCC4 ADD X10, X10, 0x552
	0x034CBCC8 MOVZ W11, 0x1F
	0x034CBCCC MOVZ W13, 0x8
	0x034CBCD0 ADD X0, X31, 0x0
	0x034CBCD4 STP X8, X9, [X31]
	0x034CBCD8 STP X10, X11, [X31 + 0x10]
	0x034CBCDC STR W13, [X31 + 0x28]
	0x034CBCE0 STR D0, [X31 + 0x20]
	0x034CBCE4 STRB W31, [X31 + 0x2C]
	0x034CBCE8 BL 0x1C1729C
	0x034CBCEC MOV X8, X0
	0x034CBCF0 STR X0, [X20 + 0x358]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+576]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43851776
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2029
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+576], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Purchase_GetReportingId(System.IntPtr obj)

Disassembly:
	0x034CBCF4 MOV X0, X19
	0x034CBCF8 BLR X8
	0x034CBCFC LDP X20, X19, [X31 + 0x40]
	0x034CBD00 LDR X30, [X31 + 0x30]
	0x034CBD04 ADD X31, X31, 0x50
	0x034CBD08 RET
	0x034CBD0C SUB X31, X31, 0x50
	0x034CBD10 STP X30, X21, [X31 + 0x30]
	0x034CBD14 STP X20, X19, [X31 + 0x40]
	0x034CBD18 ADRP X21, 0xF14000
	0x034CBD1C LDR X8, [X21 + 0x360]
	0x034CBD20 MOV X19, X1
	0x034CBD24 MOV X20, X0
	0x034CBD28 CBNZ X8, 0x34CBD74
	0x034CBD2C ADRP X12, 0xFFFFFFFFFD622000
	0x034CBD30 LDR V0, [X12 + 0x5B8]
	0x034CBD34 ADRP X8, 0xFFFFFFFFFD648000
	0x034CBD38 ADRP X10, 0xFFFFFFFFFD63B000
	0x034CBD3C ADD X8, X8, 0xDD2
	0x034CBD40 MOVZ W9, 0x11
	0x034CBD44 ADD X10, X10, 0x672
	0x034CBD48 MOVZ W11, 0x25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+584]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+584], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Purchase_GetReportingId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Purchase_GetReportingId_Native(System.IntPtr obj)

Disassembly:
	0x034CBD4C MOVZ W13, 0x10
	0x034CBD50 ADD X0, X31, 0x0
	0x034CBD54 STP X8, X9, [X31]
	0x034CBD58 STP X10, X11, [X31 + 0x10]
	0x034CBD5C STR W13, [X31 + 0x28]
	0x034CBD60 STR D0, [X31 + 0x20]
	0x034CBD64 STRB W31, [X31 + 0x2C]
	0x034CBD68 BL 0x1C1729C
	0x034CBD6C MOV X8, X0
	0x034CBD70 STR X0, [X21 + 0x360]
	0x034CBD74 MOV X0, X20
	0x034CBD78 MOV X1, X19
	0x034CBD7C BLR X8
	0x034CBD80 LDP X20, X19, [X31 + 0x40]
	0x034CBD84 LDP X30, X21, [X31 + 0x30]
	0x034CBD88 ADD X31, X31, 0x50
	0x034CBD8C RET
	0x034CBD90 SUB X31, X31, 0x50
	0x034CBD94 STR X30, [X31 + 0x30]
	0x034CBD98 STP X20, X19, [X31 + 0x40]
	0x034CBD9C ADRP X20, 0xF14000
	0x034CBDA0 LDR X8, [X20 + 0x368]
	0x034CBDA4 MOV X19, X0
	0x034CBDA8 CBNZ X8, 0x34CBDF4
	0x034CBDAC ADRP X12, 0xFFFFFFFFFD622000
	0x034CBDB0 LDR V0, [X12 + 0x5B8]
	0x034CBDB4 ADRP X8, 0xFFFFFFFFFD648000
	0x034CBDB8 ADRP X10, 0xFFFFFFFFFD648000
	0x034CBDBC ADD X8, X8, 0xDD2
	0x034CBDC0 MOVZ W9, 0x11
	0x034CBDC4 ADD X10, X10, 0xF56

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+592]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1359
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+592], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_Purchase_GetSKU(System.IntPtr obj)

Disassembly:
	0x034CBDC8 MOVZ W11, 0x22
	0x034CBDCC MOVZ W13, 0x8
	0x034CBDD0 ADD X0, X31, 0x0
	0x034CBDD4 STP X8, X9, [X31]
	0x034CBDD8 STP X10, X11, [X31 + 0x10]
	0x034CBDDC STR W13, [X31 + 0x28]
	0x034CBDE0 STR D0, [X31 + 0x20]
	0x034CBDE4 STRB W31, [X31 + 0x2C]
	0x034CBDE8 BL 0x1C1729C
	0x034CBDEC MOV X8, X0
	0x034CBDF0 STR X0, [X20 + 0x368]
	0x034CBDF4 MOV X0, X19
	0x034CBDF8 BLR X8
	0x034CBDFC LDP X20, X19, [X31 + 0x40]
	0x034CBE00 LDR X30, [X31 + 0x30]
	0x034CBE04 ADD X31, X31, 0x50
	0x034CBE08 RET
	0x034CBE0C STP X30, X21, [X31 - 0x20]!
	0x034CBE10 STP X20, X19, [X31 + 0x10]
	0x034CBE14 ADRP X20, 0xF14000
	0x034CBE18 ADRP X21, 0xC67000
	0x034CBE1C LDRB W8, [X20 + 0x370]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+600]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+600], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_Purchase_GetSKU_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_Purchase_GetSKU_Native(System.IntPtr obj)

Disassembly:
	0x034CBE20 LDR X21, [X21 + 0x328]
	0x034CBE24 MOV X19, X0
	0x034CBE28 TBNZ X8, 0x0, 0x34CBE40
	0x034CBE2C ADRP X0, 0xC67000
	0x034CBE30 LDR X0, [X0 + 0x328]
	0x034CBE34 BL 0x1C16CF4
	0x034CBE38 MOVZ W8, 0x1
	0x034CBE3C STRB W8, [X20 + 0x370]
	0x034CBE40 LDR X0, [X21]
	0x034CBE44 LDR W8, [X0 + 0xE0]
	0x034CBE48 CBNZ W8, 0x34CBE50
	0x034CBE4C BL 0x1C16DFC
	0x034CBE50 MOV X0, X19
	0x034CBE54 BL 0x34CBE64
	0x034CBE58 LDP X20, X19, [X31 + 0x10]
	0x034CBE5C LDP X30, X21, [X31], #0x20
	0x034CBE60 B 0x34B3B78
	0x034CBE64 SUB X31, X31, 0x50
	0x034CBE68 STR X30, [X31 + 0x30]
	0x034CBE6C STP X20, X19, [X31 + 0x40]
	0x034CBE70 ADRP X20, 0xF14000
	0x034CBE74 LDR X8, [X20 + 0x378]
	0x034CBE78 MOV X19, X0
	0x034CBE7C CBNZ X8, 0x34CBEC8
	0x034CBE80 ADRP X12, 0xFFFFFFFFFD622000
	0x034CBE84 LDR V0, [X12 + 0x5B8]
	0x034CBE88 ADRP X8, 0xFFFFFFFFFD648000
	0x034CBE8C ADRP X10, 0xFFFFFFFFFD63B000
	0x034CBE90 ADD X8, X8, 0xDD2
	0x034CBE94 MOVZ W9, 0x11
	0x034CBE98 ADD X10, X10, 0x698

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+608]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43696128
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 143
	017 Move W11, 19
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+608], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_PurchaseArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034CBE9C MOVZ W11, 0x17
	0x034CBEA0 MOVZ W13, 0x8
	0x034CBEA4 ADD X0, X31, 0x0
	0x034CBEA8 STP X8, X9, [X31]
	0x034CBEAC STP X10, X11, [X31 + 0x10]
	0x034CBEB0 STR W13, [X31 + 0x28]
	0x034CBEB4 STR D0, [X31 + 0x20]
	0x034CBEB8 STRB W31, [X31 + 0x2C]
	0x034CBEBC BL 0x1C1729C
	0x034CBEC0 MOV X8, X0
	0x034CBEC4 STR X0, [X20 + 0x378]
	0x034CBEC8 MOV X0, X19
	0x034CBECC BLR X8
	0x034CBED0 LDP X20, X19, [X31 + 0x40]
	0x034CBED4 LDR X30, [X31 + 0x30]
	0x034CBED8 ADD X31, X31, 0x50
	0x034CBEDC RET
	0x034CBEE0 SUB X31, X31, 0x50
	0x034CBEE4 STR X30, [X31 + 0x30]
	0x034CBEE8 STP X20, X19, [X31 + 0x40]
	0x034CBEEC ADRP X20, 0xF14000
	0x034CBEF0 LDR X8, [X20 + 0x380]
	0x034CBEF4 MOV X19, X0
	0x034CBEF8 CBNZ X8, 0x34CBF44
	0x034CBEFC ADRP X12, 0xFFFFFFFFFD622000
	0x034CBF00 LDR V0, [X12 + 0x5B8]
	0x034CBF04 ADRP X8, 0xFFFFFFFFFD648000
	0x034CBF08 ADRP X10, 0xFFFFFFFFFD64C000
	0x034CBF0C ADD X8, X8, 0xDD2
	0x034CBF10 MOVZ W9, 0x11
	0x034CBF14 ADD X10, X10, 0xEF6
	0x034CBF18 MOVZ W11, 0xE
	0x034CBF1C MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF15000
	007 Move X8, [X21+616]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43896832
	013 Move V0, [X12+1464]
	014 Move X8, -43741184
	015 Move X10, -43696128
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 163
	019 Move W11, 28
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+616], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_PurchaseArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034CBF20 ADD X0, X31, 0x0
	0x034CBF24 STP X8, X9, [X31]
	0x034CBF28 STP X10, X11, [X31 + 0x10]
	0x034CBF2C STR W13, [X31 + 0x28]
	0x034CBF30 STR D0, [X31 + 0x20]
	0x034CBF34 STRB W31, [X31 + 0x2C]
	0x034CBF38 BL 0x1C1729C
	0x034CBF3C MOV X8, X0
	0x034CBF40 STR X0, [X20 + 0x380]
	0x034CBF44 MOV X0, X19
	0x034CBF48 BLR X8
	0x034CBF4C LDP X20, X19, [X31 + 0x40]
	0x034CBF50 LDR X30, [X31 + 0x30]
	0x034CBF54 ADD X31, X31, 0x50
	0x034CBF58 RET
	0x034CBF5C STP X30, X21, [X31 - 0x20]!
	0x034CBF60 STP X20, X19, [X31 + 0x10]
	0x034CBF64 ADRP X20, 0xF14000
	0x034CBF68 ADRP X21, 0xC67000
	0x034CBF6C LDRB W8, [X20 + 0x388]
	0x034CBF70 LDR X21, [X21 + 0x328]
	0x034CBF74 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF15000
	006 Move X21, 0xC68000
	007 Move W8, [X20+624]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC68000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+624], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_PurchaseArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_PurchaseArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034CBF78 TBNZ X8, 0x0, 0x34CBF90
	0x034CBF7C ADRP X0, 0xC67000
	0x034CBF80 LDR X0, [X0 + 0x328]
	0x034CBF84 BL 0x1C16CF4
	0x034CBF88 MOVZ W8, 0x1
	0x034CBF8C STRB W8, [X20 + 0x388]
	0x034CBF90 LDR X0, [X21]
	0x034CBF94 LDR W8, [X0 + 0xE0]
	0x034CBF98 CBNZ W8, 0x34CBFA0
	0x034CBF9C BL 0x1C16DFC
	0x034CBFA0 MOV X0, X19
	0x034CBFA4 BL 0x34CBFB4
	0x034CBFA8 LDP X20, X19, [X31 + 0x10]
	0x034CBFAC LDP X30, X21, [X31], #0x20
	0x034CBFB0 B 0x34B3B78
	0x034CBFB4 SUB X31, X31, 0x50
	0x034CBFB8 STR X30, [X31 + 0x30]
	0x034CBFBC STP X20, X19, [X31 + 0x40]
	0x034CBFC0 ADRP X20, 0xF14000
	0x034CBFC4 LDR X8, [X20 + 0x390]
	0x034CBFC8 MOV X19, X0
	0x034CBFCC CBNZ X8, 0x34CC018
	0x034CBFD0 ADRP X12, 0xFFFFFFFFFD622000
	0x034CBFD4 LDR V0, [X12 + 0x5B8]
	0x034CBFD8 ADRP X8, 0xFFFFFFFFFD648000
	0x034CBFDC ADRP X10, 0xFFFFFFFFFD65C000
	0x034CBFE0 ADD X8, X8, 0xDD2
	0x034CBFE4 MOVZ W9, 0x11
	0x034CBFE8 ADD X10, X10, 0xEC5
	0x034CBFEC MOVZ W11, 0x14
	0x034CBFF0 MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF15000
	006 Move X8, [X20+632]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43896832
	011 Move V0, [X12+1464]
	012 Move X8, -43741184
	013 Move X10, -43732992
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3514
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+632], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_PurchaseArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034CBFF4 ADD X0, X31, 0x0
	0x034CBFF8 STP X8, X9, [X31]
	0x034CBFFC STP X10, X11, [X31 + 0x10]
	0x034CC000 STR W13, [X31 + 0x28]
	0x034CC004 STR D0, [X31 + 0x20]
	0x034CC008 STRB W31, [X31 + 0x2C]
	0x034CC00C BL 0x1C1729C
	0x034CC010 MOV X8, X0
	0x034CC014 STR X0, [X20 + 0x390]
	0x034CC018 MOV X0, X19
	0x034CC01C BLR X8
	0x034CC020 LDP X20, X19, [X31 + 0x40]
	0x034CC024 LDR X30, [X31 + 0x30]
	0x034CC028 ADD X31, X31, 0x50
	0x034CC02C RET
	0x034CC030 STP X30, X21, [X31 - 0x20]!
	0x034CC034 STP X20, X19, [X31 + 0x10]
	0x034CC038 ADRP X20, 0xF13000
	0x034CC03C ADRP X21, 0xC66000
	0x034CC040 LDRB W8, [X20 + 0x398]
	0x034CC044 LDR X21, [X21 + 0x328]
	0x034CC048 MOV X19, X0
	0x034CC04C TBNZ X8, 0x0, 0x34CC064
	0x034CC050 ADRP X0, 0xC66000
	0x034CC054 LDR X0, [X0 + 0x328]
	0x034CC058 BL 0x1C16CF4
	0x034CC05C MOVZ W8, 0x1
	0x034CC060 STRB W8, [X20 + 0x398]
	0x034CC064 LDR X0, [X21]
	0x034CC068 LDR W8, [X0 + 0xE0]
	0x034CC06C CBNZ W8, 0x34CC074

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+640]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1172
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+640], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_PurchaseArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034CC070 BL 0x1C16DFC
	0x034CC074 MOV X0, X19
	0x034CC078 BL 0x34CC088
	0x034CC07C LDP X20, X19, [X31 + 0x10]
	0x034CC080 LDP X30, X21, [X31], #0x20
	0x034CC084 B 0x34B3B78
	0x034CC088 SUB X31, X31, 0x50
	0x034CC08C STR X30, [X31 + 0x30]
	0x034CC090 STP X20, X19, [X31 + 0x40]
	0x034CC094 ADRP X20, 0xF13000
	0x034CC098 LDR X8, [X20 + 0x3A0]
	0x034CC09C MOV X19, X0
	0x034CC0A0 CBNZ X8, 0x34CC0EC
	0x034CC0A4 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC0A8 LDR V0, [X12 + 0x5B8]
	0x034CC0AC ADRP X8, 0xFFFFFFFFFD647000
	0x034CC0B0 ADRP X10, 0xFFFFFFFFFD646000
	0x034CC0B4 ADD X8, X8, 0xDD2
	0x034CC0B8 MOVZ W9, 0x11
	0x034CC0BC ADD X10, X10, 0x1CB
	0x034CC0C0 MOVZ W11, 0x14
	0x034CC0C4 MOVZ W13, 0x8
	0x034CC0C8 ADD X0, X31, 0x0
	0x034CC0CC STP X8, X9, [X31]
	0x034CC0D0 STP X10, X11, [X31 + 0x10]
	0x034CC0D4 STR W13, [X31 + 0x28]
	0x034CC0D8 STR D0, [X31 + 0x20]
	0x034CC0DC STRB W31, [X31 + 0x2C]
	0x034CC0E0 BL 0x1C1729C
	0x034CC0E4 MOV X8, X0
	0x034CC0E8 STR X0, [X20 + 0x3A0]
	0x034CC0EC MOV X0, X19
	0x034CC0F0 BLR X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+648]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1175
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+648], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_RejoinDialogResult_GetRejoinSelected(System.IntPtr obj)

Disassembly:
	0x034CC0F4 LDP X20, X19, [X31 + 0x40]
	0x034CC0F8 LDR X30, [X31 + 0x30]
	0x034CC0FC ADD X31, X31, 0x50
	0x034CC100 RET
	0x034CC104 STP X30, X21, [X31 - 0x20]!
	0x034CC108 STP X20, X19, [X31 + 0x10]
	0x034CC10C ADRP X20, 0xF13000
	0x034CC110 ADRP X21, 0xC66000
	0x034CC114 LDRB W8, [X20 + 0x3A8]
	0x034CC118 LDR X21, [X21 + 0x328]
	0x034CC11C MOV X19, X0
	0x034CC120 TBNZ X8, 0x0, 0x34CC138
	0x034CC124 ADRP X0, 0xC66000
	0x034CC128 LDR X0, [X0 + 0x328]
	0x034CC12C BL 0x1C16CF4
	0x034CC130 MOVZ W8, 0x1
	0x034CC134 STRB W8, [X20 + 0x3A8]
	0x034CC138 LDR X0, [X21]
	0x034CC13C LDR W8, [X0 + 0xE0]
	0x034CC140 CBNZ W8, 0x34CC148
	0x034CC144 BL 0x1C16DFC
	0x034CC148 MOV X0, X19
	0x034CC14C BL 0x34CC15C
	0x034CC150 LDP X20, X19, [X31 + 0x10]
	0x034CC154 LDP X30, X21, [X31], #0x20
	0x034CC158 B 0x34B3B78
	0x034CC15C SUB X31, X31, 0x50
	0x034CC160 STR X30, [X31 + 0x30]
	0x034CC164 STP X20, X19, [X31 + 0x40]
	0x034CC168 ADRP X20, 0xF13000
	0x034CC16C LDR X8, [X20 + 0x3B0]
	0x034CC170 MOV X19, X0
	0x034CC174 CBNZ X8, 0x34CC1C0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+656]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3789
	017 Move W11, 40
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+656], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: Oculus.Platform.SdkAccountType ovr_SdkAccount_GetAccountType(System.IntPtr obj)

Disassembly:
	0x034CC178 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC17C LDR V0, [X12 + 0x5B8]
	0x034CC180 ADRP X8, 0xFFFFFFFFFD647000
	0x034CC184 ADRP X10, 0xFFFFFFFFFD642000
	0x034CC188 ADD X8, X8, 0xDD2
	0x034CC18C MOVZ W9, 0x11
	0x034CC190 ADD X10, X10, 0x582
	0x034CC194 MOVZ W11, 0x14
	0x034CC198 MOVZ W13, 0x8
	0x034CC19C ADD X0, X31, 0x0
	0x034CC1A0 STP X8, X9, [X31]
	0x034CC1A4 STP X10, X11, [X31 + 0x10]
	0x034CC1A8 STR W13, [X31 + 0x28]
	0x034CC1AC STR D0, [X31 + 0x20]
	0x034CC1B0 STRB W31, [X31 + 0x2C]
	0x034CC1B4 BL 0x1C1729C
	0x034CC1B8 MOV X8, X0
	0x034CC1BC STR X0, [X20 + 0x3B0]
	0x034CC1C0 MOV X0, X19
	0x034CC1C4 BLR X8
	0x034CC1C8 LDP X20, X19, [X31 + 0x40]
	0x034CC1CC LDR X30, [X31 + 0x30]
	0x034CC1D0 ADD X31, X31, 0x50
	0x034CC1D4 RET
	0x034CC1D8 STP X30, X21, [X31 - 0x20]!
	0x034CC1DC STP X20, X19, [X31 + 0x10]
	0x034CC1E0 ADRP X20, 0xF13000
	0x034CC1E4 ADRP X21, 0xC66000
	0x034CC1E8 LDRB W8, [X20 + 0x3B8]
	0x034CC1EC LDR X21, [X21 + 0x328]
	0x034CC1F0 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+664]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43790336
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1671
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+664], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_SdkAccount_GetUserId(System.IntPtr obj)

Disassembly:
	0x034CC1F4 TBNZ X8, 0x0, 0x34CC20C
	0x034CC1F8 ADRP X0, 0xC66000
	0x034CC1FC LDR X0, [X0 + 0x328]
	0x034CC200 BL 0x1C16CF4
	0x034CC204 MOVZ W8, 0x1
	0x034CC208 STRB W8, [X20 + 0x3B8]
	0x034CC20C LDR X0, [X21]
	0x034CC210 LDR W8, [X0 + 0xE0]
	0x034CC214 CBNZ W8, 0x34CC21C
	0x034CC218 BL 0x1C16DFC
	0x034CC21C MOV X0, X19
	0x034CC220 BL 0x34CC230
	0x034CC224 LDP X20, X19, [X31 + 0x10]
	0x034CC228 LDP X30, X21, [X31], #0x20
	0x034CC22C B 0x34B3B78
	0x034CC230 SUB X31, X31, 0x50
	0x034CC234 STR X30, [X31 + 0x30]
	0x034CC238 STP X20, X19, [X31 + 0x40]
	0x034CC23C ADRP X20, 0xF13000
	0x034CC240 LDR X8, [X20 + 0x3C0]
	0x034CC244 MOV X19, X0
	0x034CC248 CBNZ X8, 0x34CC294
	0x034CC24C ADRP X12, 0xFFFFFFFFFD621000
	0x034CC250 LDR V0, [X12 + 0x5B8]
	0x034CC254 ADRP X8, 0xFFFFFFFFFD647000
	0x034CC258 ADRP X10, 0xFFFFFFFFFD63A000
	0x034CC25C ADD X8, X8, 0xDD2
	0x034CC260 MOVZ W9, 0x11
	0x034CC264 ADD X10, X10, 0x6B0
	0x034CC268 MOVZ W11, 0x23
	0x034CC26C MOVZ W13, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+672]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43773952
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1205
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+672], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_SdkAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034CC270 ADD X0, X31, 0x0
	0x034CC274 STP X8, X9, [X31]
	0x034CC278 STP X10, X11, [X31 + 0x10]
	0x034CC27C STR W13, [X31 + 0x28]
	0x034CC280 STR D0, [X31 + 0x20]
	0x034CC284 STRB W31, [X31 + 0x2C]
	0x034CC288 BL 0x1C1729C
	0x034CC28C MOV X8, X0
	0x034CC290 STR X0, [X20 + 0x3C0]
	0x034CC294 MOV X0, X19
	0x034CC298 BLR X8
	0x034CC29C LDP X20, X19, [X31 + 0x40]
	0x034CC2A0 LDR X30, [X31 + 0x30]
	0x034CC2A4 ADD X31, X31, 0x50
	0x034CC2A8 RET
	0x034CC2AC STP X30, X21, [X31 - 0x20]!
	0x034CC2B0 STP X20, X19, [X31 + 0x10]
	0x034CC2B4 ADRP X20, 0xF13000
	0x034CC2B8 ADRP X21, 0xC66000
	0x034CC2BC LDRB W8, [X20 + 0x3C8]
	0x034CC2C0 LDR X21, [X21 + 0x328]
	0x034CC2C4 MOV X19, X0
	0x034CC2C8 TBNZ X8, 0x0, 0x34CC2E0
	0x034CC2CC ADRP X0, 0xC66000
	0x034CC2D0 LDR X0, [X0 + 0x328]
	0x034CC2D4 BL 0x1C16CF4
	0x034CC2D8 MOVZ W8, 0x1
	0x034CC2DC STRB W8, [X20 + 0x3C8]
	0x034CC2E0 LDR X0, [X21]
	0x034CC2E4 LDR W8, [X0 + 0xE0]
	0x034CC2E8 CBNZ W8, 0x34CC2F0
	0x034CC2EC BL 0x1C16DFC
	0x034CC2F0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF14000
	007 Move X8, [X21+680]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43900928
	013 Move V0, [X12+1464]
	014 Move X8, -43745280
	015 Move X10, -43675648
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1080
	019 Move W11, 30
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+680], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UIntPtr ovr_SdkAccountArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034CC2F4 BL 0x34CC304
	0x034CC2F8 LDP X20, X19, [X31 + 0x10]
	0x034CC2FC LDP X30, X21, [X31], #0x20
	0x034CC300 B 0x34B3B78
	0x034CC304 SUB X31, X31, 0x50
	0x034CC308 STR X30, [X31 + 0x30]
	0x034CC30C STP X20, X19, [X31 + 0x40]
	0x034CC310 ADRP X20, 0xF13000
	0x034CC314 LDR X8, [X20 + 0x3D0]
	0x034CC318 MOV X19, X0
	0x034CC31C CBNZ X8, 0x34CC368
	0x034CC320 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC324 LDR V0, [X12 + 0x5B8]
	0x034CC328 ADRP X8, 0xFFFFFFFFFD647000
	0x034CC32C ADRP X10, 0xFFFFFFFFFD642000
	0x034CC330 ADD X8, X8, 0xDD2
	0x034CC334 MOVZ W9, 0x11
	0x034CC338 ADD X10, X10, 0x597
	0x034CC33C MOVZ W11, 0x26
	0x034CC340 MOVZ W13, 0x8
	0x034CC344 ADD X0, X31, 0x0
	0x034CC348 STP X8, X9, [X31]
	0x034CC34C STP X10, X11, [X31 + 0x10]
	0x034CC350 STR W13, [X31 + 0x28]
	0x034CC354 STR D0, [X31 + 0x20]
	0x034CC358 STRB W31, [X31 + 0x2C]
	0x034CC35C BL 0x1C1729C
	0x034CC360 MOV X8, X0
	0x034CC364 STR X0, [X20 + 0x3D0]
	0x034CC368 MOV X0, X19
	0x034CC36C BLR X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+688]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43847680
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2376
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+688], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_SendInvitesResult_GetInvites(System.IntPtr obj)

Disassembly:
	0x034CC370 LDP X20, X19, [X31 + 0x40]
	0x034CC374 LDR X30, [X31 + 0x30]
	0x034CC378 ADD X31, X31, 0x50
	0x034CC37C RET
	0x034CC380 STP X30, X21, [X31 - 0x20]!
	0x034CC384 STP X20, X19, [X31 + 0x10]
	0x034CC388 ADRP X20, 0xF13000
	0x034CC38C ADRP X21, 0xC66000
	0x034CC390 LDRB W8, [X20 + 0x3D8]
	0x034CC394 LDR X21, [X21 + 0x328]
	0x034CC398 MOV X19, X0
	0x034CC39C TBNZ X8, 0x0, 0x34CC3B4
	0x034CC3A0 ADRP X0, 0xC66000
	0x034CC3A4 LDR X0, [X0 + 0x328]
	0x034CC3A8 BL 0x1C16CF4
	0x034CC3AC MOVZ W8, 0x1
	0x034CC3B0 STRB W8, [X20 + 0x3D8]
	0x034CC3B4 LDR X0, [X21]
	0x034CC3B8 LDR W8, [X0 + 0xE0]
	0x034CC3BC CBNZ W8, 0x34CC3C4
	0x034CC3C0 BL 0x1C16DFC
	0x034CC3C4 MOV X0, X19
	0x034CC3C8 BL 0x34CC3D8
	0x034CC3CC LDP X20, X19, [X31 + 0x10]
	0x034CC3D0 LDP X30, X21, [X31], #0x20
	0x034CC3D4 B 0x34B3B78
	0x034CC3D8 SUB X31, X31, 0x50
	0x034CC3DC STR X30, [X31 + 0x30]
	0x034CC3E0 STP X20, X19, [X31 + 0x40]
	0x034CC3E4 ADRP X20, 0xF13000
	0x034CC3E8 LDR X8, [X20 + 0x3E0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+696]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43847680
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2404
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+696], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.ShareMediaStatus ovr_ShareMediaResult_GetStatus(System.IntPtr obj)

Disassembly:
	0x034CC3EC MOV X19, X0
	0x034CC3F0 CBNZ X8, 0x34CC43C
	0x034CC3F4 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC3F8 LDR V0, [X12 + 0x5B8]
	0x034CC3FC ADRP X8, 0xFFFFFFFFFD647000
	0x034CC400 ADRP X10, 0xFFFFFFFFFD649000
	0x034CC404 ADD X8, X8, 0xDD2
	0x034CC408 MOVZ W9, 0x11
	0x034CC40C ADD X10, X10, 0xDFC
	0x034CC410 MOVZ W11, 0x22
	0x034CC414 MOVZ W13, 0x8
	0x034CC418 ADD X0, X31, 0x0
	0x034CC41C STP X8, X9, [X31]
	0x034CC420 STP X10, X11, [X31 + 0x10]
	0x034CC424 STR W13, [X31 + 0x28]
	0x034CC428 STR D0, [X31 + 0x20]
	0x034CC42C STRB W31, [X31 + 0x2C]
	0x034CC430 BL 0x1C1729C
	0x034CC434 MOV X8, X0
	0x034CC438 STR X0, [X20 + 0x3E0]
	0x034CC43C MOV X0, X19
	0x034CC440 BLR X8
	0x034CC444 LDP X20, X19, [X31 + 0x40]
	0x034CC448 LDR X30, [X31 + 0x30]
	0x034CC44C ADD X31, X31, 0x50
	0x034CC450 RET
	0x034CC454 STP X30, X21, [X31 - 0x20]!
	0x034CC458 STP X20, X19, [X31 + 0x10]
	0x034CC45C ADRP X20, 0xF13000
	0x034CC460 ADRP X21, 0xC66000
	0x034CC464 LDRB W8, [X20 + 0x3E8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+704]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43708416
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 985
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+704], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_SupplementaryMetric_GetID(System.IntPtr obj)

Disassembly:
	0x034CC468 LDR X21, [X21 + 0x328]
	0x034CC46C MOV X19, X0
	0x034CC470 TBNZ X8, 0x0, 0x34CC488
	0x034CC474 ADRP X0, 0xC66000
	0x034CC478 LDR X0, [X0 + 0x328]
	0x034CC47C BL 0x1C16CF4
	0x034CC480 MOVZ W8, 0x1
	0x034CC484 STRB W8, [X20 + 0x3E8]
	0x034CC488 LDR X0, [X21]
	0x034CC48C LDR W8, [X0 + 0xE0]
	0x034CC490 CBNZ W8, 0x34CC498
	0x034CC494 BL 0x1C16DFC
	0x034CC498 MOV X0, X19
	0x034CC49C BL 0x34CC4AC
	0x034CC4A0 LDP X20, X19, [X31 + 0x10]
	0x034CC4A4 LDP X30, X21, [X31], #0x20
	0x034CC4A8 B 0x34B3B78
	0x034CC4AC SUB X31, X31, 0x50
	0x034CC4B0 STR X30, [X31 + 0x30]
	0x034CC4B4 STP X20, X19, [X31 + 0x40]
	0x034CC4B8 ADRP X20, 0xF13000
	0x034CC4BC LDR X8, [X20 + 0x3F0]
	0x034CC4C0 MOV X19, X0
	0x034CC4C4 CBNZ X8, 0x34CC510
	0x034CC4C8 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC4CC LDR V0, [X12 + 0x5B8]
	0x034CC4D0 ADRP X8, 0xFFFFFFFFFD647000
	0x034CC4D4 ADRP X10, 0xFFFFFFFFFD656000
	0x034CC4D8 ADD X8, X8, 0xDD2
	0x034CC4DC MOVZ W9, 0x11
	0x034CC4E0 ADD X10, X10, 0x5A6

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+712]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43663360
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3751
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+712], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Int64 ovr_SupplementaryMetric_GetMetric(System.IntPtr obj)

Disassembly:
	0x034CC4E4 MOVZ W11, 0x22
	0x034CC4E8 MOVZ W13, 0x8
	0x034CC4EC ADD X0, X31, 0x0
	0x034CC4F0 STP X8, X9, [X31]
	0x034CC4F4 STP X10, X11, [X31 + 0x10]
	0x034CC4F8 STR W13, [X31 + 0x28]
	0x034CC4FC STR D0, [X31 + 0x20]
	0x034CC500 STRB W31, [X31 + 0x2C]
	0x034CC504 BL 0x1C1729C
	0x034CC508 MOV X8, X0
	0x034CC50C STR X0, [X20 + 0x3F0]
	0x034CC510 MOV X0, X19
	0x034CC514 BLR X8
	0x034CC518 LDP X20, X19, [X31 + 0x40]
	0x034CC51C LDR X30, [X31 + 0x30]
	0x034CC520 ADD X31, X31, 0x50
	0x034CC524 RET
	0x034CC528 SUB X31, X31, 0x50
	0x034CC52C STR X30, [X31 + 0x30]
	0x034CC530 STP X20, X19, [X31 + 0x40]
	0x034CC534 ADRP X20, 0xF13000
	0x034CC538 LDR X8, [X20 + 0x3F8]
	0x034CC53C MOV X19, X0
	0x034CC540 CBNZ X8, 0x34CC58C
	0x034CC544 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC548 LDR V0, [X12 + 0x5B8]
	0x034CC54C ADRP X8, 0xFFFFFFFFFD647000
	0x034CC550 ADRP X10, 0xFFFFFFFFFD64B000
	0x034CC554 ADD X8, X8, 0xDD2
	0x034CC558 MOVZ W9, 0x11
	0x034CC55C ADD X10, X10, 0xF05

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+720]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43855872
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2059
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+720], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(System.IntPtr obj)

Disassembly:
	0x034CC560 MOVZ W11, 0x1A
	0x034CC564 MOVZ W13, 0x8
	0x034CC568 ADD X0, X31, 0x0
	0x034CC56C STP X8, X9, [X31]
	0x034CC570 STP X10, X11, [X31 + 0x10]
	0x034CC574 STR W13, [X31 + 0x28]
	0x034CC578 STR D0, [X31 + 0x20]
	0x034CC57C STRB W31, [X31 + 0x2C]
	0x034CC580 BL 0x1C1729C
	0x034CC584 MOV X8, X0
	0x034CC588 STR X0, [X20 + 0x3F8]
	0x034CC58C MOV X0, X19
	0x034CC590 BLR X8
	0x034CC594 LDP X20, X19, [X31 + 0x40]
	0x034CC598 LDR X30, [X31 + 0x30]
	0x034CC59C ADD X31, X31, 0x50
	0x034CC5A0 RET
	0x034CC5A4 STP X30, X21, [X31 - 0x20]!
	0x034CC5A8 STP X20, X19, [X31 + 0x10]
	0x034CC5AC ADRP X20, 0xF13000
	0x034CC5B0 ADRP X21, 0xC66000
	0x034CC5B4 LDRB W8, [X20 + 0x400]
	0x034CC5B8 LDR X21, [X21 + 0x328]
	0x034CC5BC MOV X19, X0
	0x034CC5C0 TBNZ X8, 0x0, 0x34CC5D8
	0x034CC5C4 ADRP X0, 0xC66000
	0x034CC5C8 LDR X0, [X0 + 0x328]
	0x034CC5CC BL 0x1C16CF4
	0x034CC5D0 MOVZ W8, 0x1
	0x034CC5D4 STRB W8, [X20 + 0x400]
	0x034CC5D8 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+728]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43790336
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1701
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+728], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.SystemVoipStatus ovr_SystemVoipState_GetStatus(System.IntPtr obj)

Disassembly:
	0x034CC5DC LDR W8, [X0 + 0xE0]
	0x034CC5E0 CBNZ W8, 0x34CC5E8
	0x034CC5E4 BL 0x1C16DFC
	0x034CC5E8 MOV X0, X19
	0x034CC5EC BL 0x34CC5FC
	0x034CC5F0 LDP X20, X19, [X31 + 0x10]
	0x034CC5F4 LDP X30, X21, [X31], #0x20
	0x034CC5F8 B 0x34B3B78
	0x034CC5FC SUB X31, X31, 0x50
	0x034CC600 STR X30, [X31 + 0x30]
	0x034CC604 STP X20, X19, [X31 + 0x40]
	0x034CC608 ADRP X20, 0xF13000
	0x034CC60C LDR X8, [X20 + 0x408]
	0x034CC610 MOV X19, X0
	0x034CC614 CBNZ X8, 0x34CC660
	0x034CC618 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC61C LDR V0, [X12 + 0x5B8]
	0x034CC620 ADRP X8, 0xFFFFFFFFFD647000
	0x034CC624 ADRP X10, 0xFFFFFFFFFD656000
	0x034CC628 ADD X8, X8, 0xDD2
	0x034CC62C MOVZ W9, 0x11
	0x034CC630 ADD X10, X10, 0x5C9
	0x034CC634 MOVZ W11, 0x19
	0x034CC638 MOVZ W13, 0x8
	0x034CC63C ADD X0, X31, 0x0
	0x034CC640 STP X8, X9, [X31]
	0x034CC644 STP X10, X11, [X31 + 0x10]
	0x034CC648 STR W13, [X31 + 0x28]
	0x034CC64C STR D0, [X31 + 0x20]
	0x034CC650 STRB W31, [X31 + 0x2C]
	0x034CC654 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+736]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43847680
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2437
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+736], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_TestUser_GetAccessToken(System.IntPtr obj)

Disassembly:
	0x034CC658 MOV X8, X0
	0x034CC65C STR X0, [X20 + 0x408]
	0x034CC660 MOV X0, X19
	0x034CC664 BLR X8
	0x034CC668 LDP X20, X19, [X31 + 0x40]
	0x034CC66C LDR X30, [X31 + 0x30]
	0x034CC670 ADD X31, X31, 0x50
	0x034CC674 RET
	0x034CC678 SUB X31, X31, 0x50
	0x034CC67C STR X30, [X31 + 0x30]
	0x034CC680 STP X20, X19, [X31 + 0x40]
	0x034CC684 ADRP X20, 0xF13000
	0x034CC688 LDR X8, [X20 + 0x410]
	0x034CC68C MOV X19, X0
	0x034CC690 CBNZ X8, 0x34CC6DC
	0x034CC694 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC698 LDR V0, [X12 + 0x5B8]
	0x034CC69C ADRP X8, 0xFFFFFFFFFD647000
	0x034CC6A0 ADRP X10, 0xFFFFFFFFFD638000
	0x034CC6A4 ADD X8, X8, 0xDD2
	0x034CC6A8 MOVZ W9, 0x11
	0x034CC6AC ADD X10, X10, 0x8A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF14000
	006 Move X21, 0xC67000
	007 Move W8, [X20+744]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC67000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+744], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_TestUser_GetAccessToken_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_TestUser_GetAccessToken_Native(System.IntPtr obj)

Disassembly:
	0x034CC6B0 MOVZ W11, 0x29
	0x034CC6B4 MOVZ W13, 0x8
	0x034CC6B8 ADD X0, X31, 0x0
	0x034CC6BC STP X8, X9, [X31]
	0x034CC6C0 STP X10, X11, [X31 + 0x10]
	0x034CC6C4 STR W13, [X31 + 0x28]
	0x034CC6C8 STR D0, [X31 + 0x20]
	0x034CC6CC STRB W31, [X31 + 0x2C]
	0x034CC6D0 BL 0x1C1729C
	0x034CC6D4 MOV X8, X0
	0x034CC6D8 STR X0, [X20 + 0x410]
	0x034CC6DC MOV X0, X19
	0x034CC6E0 BLR X8
	0x034CC6E4 LDP X20, X19, [X31 + 0x40]
	0x034CC6E8 LDR X30, [X31 + 0x30]
	0x034CC6EC ADD X31, X31, 0x50
	0x034CC6F0 RET
	0x034CC6F4 SUB X31, X31, 0x50
	0x034CC6F8 STP X30, X21, [X31 + 0x30]
	0x034CC6FC STP X20, X19, [X31 + 0x40]
	0x034CC700 ADRP X21, 0xF13000
	0x034CC704 LDR X8, [X21 + 0x418]
	0x034CC708 MOV X19, X1
	0x034CC70C MOV X20, X0
	0x034CC710 CBNZ X8, 0x34CC75C
	0x034CC714 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC718 LDR V0, [X12 + 0x5B8]
	0x034CC71C ADRP X8, 0xFFFFFFFFFD647000
	0x034CC720 ADRP X10, 0xFFFFFFFFFD62E000
	0x034CC724 ADD X8, X8, 0xDD2
	0x034CC728 MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+752]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43847680
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2467
	017 Move W11, 27
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+752], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_TestUser_GetAppAccessArray(System.IntPtr obj)

Disassembly:
	0x034CC72C ADD X10, X10, 0x9E0
	0x034CC730 MOVZ W11, 0x18
	0x034CC734 MOVZ W13, 0x10
	0x034CC738 ADD X0, X31, 0x0
	0x034CC73C STP X8, X9, [X31]
	0x034CC740 STP X10, X11, [X31 + 0x10]
	0x034CC744 STR W13, [X31 + 0x28]
	0x034CC748 STR D0, [X31 + 0x20]
	0x034CC74C STRB W31, [X31 + 0x2C]
	0x034CC750 BL 0x1C1729C
	0x034CC754 MOV X8, X0
	0x034CC758 STR X0, [X21 + 0x418]
	0x034CC75C MOV X0, X20
	0x034CC760 MOV X1, X19
	0x034CC764 BLR X8
	0x034CC768 LDP X20, X19, [X31 + 0x40]
	0x034CC76C LDP X30, X21, [X31 + 0x30]
	0x034CC770 ADD X31, X31, 0x50
	0x034CC774 RET
	0x034CC778 STP X30, X21, [X31 - 0x20]!
	0x034CC77C STP X20, X19, [X31 + 0x10]
	0x034CC780 ADRP X20, 0xF13000
	0x034CC784 ADRP X21, 0xC66000
	0x034CC788 LDRB W8, [X20 + 0x420]
	0x034CC78C LDR X21, [X21 + 0x328]
	0x034CC790 MOV X19, X0
	0x034CC794 TBNZ X8, 0x0, 0x34CC7AC
	0x034CC798 ADRP X0, 0xC66000
	0x034CC79C LDR X0, [X0 + 0x328]
	0x034CC7A0 BL 0x1C16CF4
	0x034CC7A4 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+760]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1198
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+760], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_TestUser_GetFbAppAccessArray(System.IntPtr obj)

Disassembly:
	0x034CC7A8 STRB W8, [X20 + 0x420]
	0x034CC7AC LDR X0, [X21]
	0x034CC7B0 LDR W8, [X0 + 0xE0]
	0x034CC7B4 CBNZ W8, 0x34CC7BC
	0x034CC7B8 BL 0x1C16DFC
	0x034CC7BC MOV X0, X19
	0x034CC7C0 BL 0x34CC7D0
	0x034CC7C4 LDP X20, X19, [X31 + 0x10]
	0x034CC7C8 LDP X30, X21, [X31], #0x20
	0x034CC7CC B 0x34B3B78
	0x034CC7D0 SUB X31, X31, 0x50
	0x034CC7D4 STR X30, [X31 + 0x30]
	0x034CC7D8 STP X20, X19, [X31 + 0x40]
	0x034CC7DC ADRP X20, 0xF13000
	0x034CC7E0 LDR X8, [X20 + 0x428]
	0x034CC7E4 MOV X19, X0
	0x034CC7E8 CBNZ X8, 0x34CC834
	0x034CC7EC ADRP X12, 0xFFFFFFFFFD621000
	0x034CC7F0 LDR V0, [X12 + 0x5B8]
	0x034CC7F4 ADRP X8, 0xFFFFFFFFFD647000
	0x034CC7F8 ADRP X10, 0xFFFFFFFFFD65F000
	0x034CC7FC ADD X8, X8, 0xDD2
	0x034CC800 MOVZ W9, 0x11
	0x034CC804 ADD X10, X10, 0xD75
	0x034CC808 MOVZ W11, 0x18
	0x034CC80C MOVZ W13, 0x8
	0x034CC810 ADD X0, X31, 0x0
	0x034CC814 STP X8, X9, [X31]
	0x034CC818 STP X10, X11, [X31 + 0x10]
	0x034CC81C STR W13, [X31 + 0x28]
	0x034CC820 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+768]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43847680
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2495
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+768], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_TestUser_GetFriendAccessToken(System.IntPtr obj)

Disassembly:
	0x034CC824 STRB W31, [X31 + 0x2C]
	0x034CC828 BL 0x1C1729C
	0x034CC82C MOV X8, X0
	0x034CC830 STR X0, [X20 + 0x428]
	0x034CC834 MOV X0, X19
	0x034CC838 BLR X8
	0x034CC83C LDP X20, X19, [X31 + 0x40]
	0x034CC840 LDR X30, [X31 + 0x30]
	0x034CC844 ADD X31, X31, 0x50
	0x034CC848 RET
	0x034CC84C SUB X31, X31, 0x50
	0x034CC850 STR X30, [X31 + 0x30]
	0x034CC854 STP X20, X19, [X31 + 0x40]
	0x034CC858 ADRP X20, 0xF13000
	0x034CC85C LDR X8, [X20 + 0x430]
	0x034CC860 MOV X19, X0
	0x034CC864 CBNZ X8, 0x34CC8B0
	0x034CC868 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC86C LDR V0, [X12 + 0x5B8]
	0x034CC870 ADRP X8, 0xFFFFFFFFFD647000
	0x034CC874 ADRP X10, 0xFFFFFFFFFD644000
	0x034CC878 ADD X8, X8, 0xDD2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF14000
	006 Move X21, 0xC67000
	007 Move W8, [X20+776]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC67000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+776], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_TestUser_GetFriendAccessToken_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_TestUser_GetFriendAccessToken_Native(System.IntPtr obj)

Disassembly:
	0x034CC87C MOVZ W9, 0x11
	0x034CC880 ADD X10, X10, 0x5C0
	0x034CC884 MOVZ W11, 0x15
	0x034CC888 MOVZ W13, 0x8
	0x034CC88C ADD X0, X31, 0x0
	0x034CC890 STP X8, X9, [X31]
	0x034CC894 STP X10, X11, [X31 + 0x10]
	0x034CC898 STR W13, [X31 + 0x28]
	0x034CC89C STR D0, [X31 + 0x20]
	0x034CC8A0 STRB W31, [X31 + 0x2C]
	0x034CC8A4 BL 0x1C1729C
	0x034CC8A8 MOV X8, X0
	0x034CC8AC STR X0, [X20 + 0x430]
	0x034CC8B0 MOV X0, X19
	0x034CC8B4 BLR X8
	0x034CC8B8 LDP X20, X19, [X31 + 0x40]
	0x034CC8BC LDR X30, [X31 + 0x30]
	0x034CC8C0 ADD X31, X31, 0x50
	0x034CC8C4 RET
	0x034CC8C8 SUB X31, X31, 0x50
	0x034CC8CC STR X30, [X31 + 0x30]
	0x034CC8D0 STP X20, X19, [X31 + 0x40]
	0x034CC8D4 ADRP X20, 0xF13000
	0x034CC8D8 LDR X8, [X20 + 0x438]
	0x034CC8DC MOV X19, X0
	0x034CC8E0 CBNZ X8, 0x34CC92C
	0x034CC8E4 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC8E8 LDR V0, [X12 + 0x5B8]
	0x034CC8EC ADRP X8, 0xFFFFFFFFFD647000
	0x034CC8F0 ADRP X10, 0xFFFFFFFFFD658000
	0x034CC8F4 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+784]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43806720
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2178
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+784], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_TestUser_GetFriendAppAccessArray(System.IntPtr obj)

Disassembly:
	0x034CC8F8 MOVZ W9, 0x11
	0x034CC8FC ADD X10, X10, 0x471
	0x034CC900 MOVZ W11, 0x19
	0x034CC904 MOVZ W13, 0x8
	0x034CC908 ADD X0, X31, 0x0
	0x034CC90C STP X8, X9, [X31]
	0x034CC910 STP X10, X11, [X31 + 0x10]
	0x034CC914 STR W13, [X31 + 0x28]
	0x034CC918 STR D0, [X31 + 0x20]
	0x034CC91C STRB W31, [X31 + 0x2C]
	0x034CC920 BL 0x1C1729C
	0x034CC924 MOV X8, X0
	0x034CC928 STR X0, [X20 + 0x438]
	0x034CC92C MOV X0, X19
	0x034CC930 BLR X8
	0x034CC934 LDP X20, X19, [X31 + 0x40]
	0x034CC938 LDR X30, [X31 + 0x30]
	0x034CC93C CMP W0, 0x0
	0x034CC940 CSET W0, NE
	0x034CC944 ADD X31, X31, 0x50
	0x034CC948 RET
	0x034CC94C STP X30, X21, [X31 - 0x20]!
	0x034CC950 STP X20, X19, [X31 + 0x10]
	0x034CC954 ADRP X20, 0xF13000
	0x034CC958 ADRP X21, 0xC66000
	0x034CC95C LDRB W8, [X20 + 0x440]
	0x034CC960 LDR X21, [X21 + 0x328]
	0x034CC964 MOV X19, X0
	0x034CC968 TBNZ X8, 0x0, 0x34CC980
	0x034CC96C ADRP X0, 0xC66000
	0x034CC970 LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+792]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43737088
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3543
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+792], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_TestUser_GetUserAlias(System.IntPtr obj)

Disassembly:
	0x034CC974 BL 0x1C16CF4
	0x034CC978 MOVZ W8, 0x1
	0x034CC97C STRB W8, [X20 + 0x440]
	0x034CC980 LDR X0, [X21]
	0x034CC984 LDR W8, [X0 + 0xE0]
	0x034CC988 CBNZ W8, 0x34CC990
	0x034CC98C BL 0x1C16DFC
	0x034CC990 MOV X0, X19
	0x034CC994 BL 0x34CC9A4
	0x034CC998 LDP X20, X19, [X31 + 0x10]
	0x034CC99C LDP X30, X21, [X31], #0x20
	0x034CC9A0 B 0x34B3B78
	0x034CC9A4 SUB X31, X31, 0x50
	0x034CC9A8 STR X30, [X31 + 0x30]
	0x034CC9AC STP X20, X19, [X31 + 0x40]
	0x034CC9B0 ADRP X20, 0xF13000
	0x034CC9B4 LDR X8, [X20 + 0x448]
	0x034CC9B8 MOV X19, X0
	0x034CC9BC CBNZ X8, 0x34CCA08
	0x034CC9C0 ADRP X12, 0xFFFFFFFFFD621000
	0x034CC9C4 LDR V0, [X12 + 0x5B8]
	0x034CC9C8 ADRP X8, 0xFFFFFFFFFD647000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF14000
	006 Move X21, 0xC67000
	007 Move W8, [X20+800]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC67000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+800], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_TestUser_GetUserAlias_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_TestUser_GetUserAlias_Native(System.IntPtr obj)

Disassembly:
	0x034CC9CC ADRP X10, 0xFFFFFFFFFD640000
	0x034CC9D0 ADD X8, X8, 0xDD2
	0x034CC9D4 MOVZ W9, 0x11
	0x034CC9D8 ADD X10, X10, 0x4CE
	0x034CC9DC MOVZ W11, 0x21
	0x034CC9E0 MOVZ W13, 0x8
	0x034CC9E4 ADD X0, X31, 0x0
	0x034CC9E8 STP X8, X9, [X31]
	0x034CC9EC STP X10, X11, [X31 + 0x10]
	0x034CC9F0 STR W13, [X31 + 0x28]
	0x034CC9F4 STR D0, [X31 + 0x20]
	0x034CC9F8 STRB W31, [X31 + 0x2C]
	0x034CC9FC BL 0x1C1729C
	0x034CCA00 MOV X8, X0
	0x034CCA04 STR X0, [X20 + 0x448]
	0x034CCA08 MOV X0, X19
	0x034CCA0C BLR X8
	0x034CCA10 LDP X20, X19, [X31 + 0x40]
	0x034CCA14 LDR X30, [X31 + 0x30]
	0x034CCA18 ADD X31, X31, 0x50
	0x034CCA1C RET
	0x034CCA20 SUB X31, X31, 0x50
	0x034CCA24 STR X30, [X31 + 0x30]
	0x034CCA28 STP X20, X19, [X31 + 0x40]
	0x034CCA2C ADRP X20, 0xF13000
	0x034CCA30 LDR X8, [X20 + 0x450]
	0x034CCA34 MOV X19, X0
	0x034CCA38 CBNZ X8, 0x34CCA84
	0x034CCA3C ADRP X12, 0xFFFFFFFFFD621000
	0x034CCA40 LDR V0, [X12 + 0x5B8]
	0x034CCA44 ADRP X8, 0xFFFFFFFFFD647000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+808]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43675648
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1111
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+808], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_TestUser_GetUserFbid(System.IntPtr obj)

Disassembly:
	0x034CCA48 ADRP X10, 0xFFFFFFFFFD636000
	0x034CCA4C ADD X8, X8, 0xDD2
	0x034CCA50 MOVZ W9, 0x11
	0x034CCA54 ADD X10, X10, 0x3D8
	0x034CCA58 MOVZ W11, 0x1F
	0x034CCA5C MOVZ W13, 0x8
	0x034CCA60 ADD X0, X31, 0x0
	0x034CCA64 STP X8, X9, [X31]
	0x034CCA68 STP X10, X11, [X31 + 0x10]
	0x034CCA6C STR W13, [X31 + 0x28]
	0x034CCA70 STR D0, [X31 + 0x20]
	0x034CCA74 STRB W31, [X31 + 0x2C]
	0x034CCA78 BL 0x1C1729C
	0x034CCA7C MOV X8, X0
	0x034CCA80 STR X0, [X20 + 0x450]
	0x034CCA84 MOV X0, X19
	0x034CCA88 BLR X8
	0x034CCA8C LDP X20, X19, [X31 + 0x40]
	0x034CCA90 LDR X30, [X31 + 0x30]
	0x034CCA94 CMP W0, 0x0
	0x034CCA98 CSET W0, NE
	0x034CCA9C ADD X31, X31, 0x50
	0x034CCAA0 RET
	0x034CCAA4 STP X30, X21, [X31 - 0x20]!
	0x034CCAA8 STP X20, X19, [X31 + 0x10]
	0x034CCAAC ADRP X20, 0xF13000
	0x034CCAB0 ADRP X21, 0xC66000
	0x034CCAB4 LDRB W8, [X20 + 0x458]
	0x034CCAB8 LDR X21, [X21 + 0x328]
	0x034CCABC MOV X19, X0
	0x034CCAC0 TBNZ X8, 0x0, 0x34CCAD8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+816]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43655168
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3676
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+816], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_TestUser_GetUserId(System.IntPtr obj)

Disassembly:
	0x034CCAC4 ADRP X0, 0xC66000
	0x034CCAC8 LDR X0, [X0 + 0x328]
	0x034CCACC BL 0x1C16CF4
	0x034CCAD0 MOVZ W8, 0x1
	0x034CCAD4 STRB W8, [X20 + 0x458]
	0x034CCAD8 LDR X0, [X21]
	0x034CCADC LDR W8, [X0 + 0xE0]
	0x034CCAE0 CBNZ W8, 0x34CCAE8
	0x034CCAE4 BL 0x1C16DFC
	0x034CCAE8 MOV X0, X19
	0x034CCAEC BL 0x34CCAFC
	0x034CCAF0 LDP X20, X19, [X31 + 0x10]
	0x034CCAF4 LDP X30, X21, [X31], #0x20
	0x034CCAF8 B 0x34B3B78
	0x034CCAFC SUB X31, X31, 0x50
	0x034CCB00 STR X30, [X31 + 0x30]
	0x034CCB04 STP X20, X19, [X31 + 0x40]
	0x034CCB08 ADRP X20, 0xF13000
	0x034CCB0C LDR X8, [X20 + 0x460]
	0x034CCB10 MOV X19, X0
	0x034CCB14 CBNZ X8, 0x34CCB60
	0x034CCB18 ADRP X12, 0xFFFFFFFFFD621000
	0x034CCB1C LDR V0, [X12 + 0x5B8]
	0x034CCB20 ADRP X8, 0xFFFFFFFFFD647000
	0x034CCB24 ADRP X10, 0xFFFFFFFFFD636000
	0x034CCB28 ADD X8, X8, 0xDD2
	0x034CCB2C MOVZ W9, 0x11
	0x034CCB30 ADD X10, X10, 0x3F8
	0x034CCB34 MOVZ W11, 0x1A
	0x034CCB38 MOVZ W13, 0x8
	0x034CCB3C ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+824]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43765760
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1387
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+824], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_TestUserAppAccess_GetAccessToken(System.IntPtr obj)

Disassembly:
	0x034CCB40 STP X8, X9, [X31]
	0x034CCB44 STP X10, X11, [X31 + 0x10]
	0x034CCB48 STR W13, [X31 + 0x28]
	0x034CCB4C STR D0, [X31 + 0x20]
	0x034CCB50 STRB W31, [X31 + 0x2C]
	0x034CCB54 BL 0x1C1729C
	0x034CCB58 MOV X8, X0
	0x034CCB5C STR X0, [X20 + 0x460]
	0x034CCB60 MOV X0, X19
	0x034CCB64 BLR X8
	0x034CCB68 LDP X20, X19, [X31 + 0x40]
	0x034CCB6C LDR X30, [X31 + 0x30]
	0x034CCB70 ADD X31, X31, 0x50
	0x034CCB74 RET
	0x034CCB78 STP X30, X21, [X31 - 0x20]!
	0x034CCB7C STP X20, X19, [X31 + 0x10]
	0x034CCB80 ADRP X20, 0xF13000
	0x034CCB84 ADRP X21, 0xC66000
	0x034CCB88 LDRB W8, [X20 + 0x468]
	0x034CCB8C LDR X21, [X21 + 0x328]
	0x034CCB90 MOV X19, X0
	0x034CCB94 TBNZ X8, 0x0, 0x34CCBAC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF14000
	006 Move X21, 0xC67000
	007 Move W8, [X20+832]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC67000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+832], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_TestUserAppAccess_GetAccessToken_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(System.IntPtr obj)

Disassembly:
	0x034CCB98 ADRP X0, 0xC66000
	0x034CCB9C LDR X0, [X0 + 0x328]
	0x034CCBA0 BL 0x1C16CF4
	0x034CCBA4 MOVZ W8, 0x1
	0x034CCBA8 STRB W8, [X20 + 0x468]
	0x034CCBAC LDR X0, [X21]
	0x034CCBB0 LDR W8, [X0 + 0xE0]
	0x034CCBB4 CBNZ W8, 0x34CCBBC
	0x034CCBB8 BL 0x1C16DFC
	0x034CCBBC MOV X0, X19
	0x034CCBC0 BL 0x34CCBD0
	0x034CCBC4 LDP X20, X19, [X31 + 0x10]
	0x034CCBC8 LDP X30, X21, [X31], #0x20
	0x034CCBCC B 0x34B3B78
	0x034CCBD0 SUB X31, X31, 0x50
	0x034CCBD4 STR X30, [X31 + 0x30]
	0x034CCBD8 STP X20, X19, [X31 + 0x40]
	0x034CCBDC ADRP X20, 0xF13000
	0x034CCBE0 LDR X8, [X20 + 0x470]
	0x034CCBE4 MOV X19, X0
	0x034CCBE8 CBNZ X8, 0x34CCC34
	0x034CCBEC ADRP X12, 0xFFFFFFFFFD621000
	0x034CCBF0 LDR V0, [X12 + 0x5B8]
	0x034CCBF4 ADRP X8, 0xFFFFFFFFFD647000
	0x034CCBF8 ADRP X10, 0xFFFFFFFFFD656000
	0x034CCBFC ADD X8, X8, 0xDD2
	0x034CCC00 MOVZ W9, 0x11
	0x034CCC04 ADD X10, X10, 0x5E3
	0x034CCC08 MOVZ W11, 0x20
	0x034CCC0C MOVZ W13, 0x8
	0x034CCC10 ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+840]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43823104
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 924
	017 Move W11, 36
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+840], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_TestUserAppAccess_GetAppId(System.IntPtr obj)

Disassembly:
	0x034CCC14 STP X8, X9, [X31]
	0x034CCC18 STP X10, X11, [X31 + 0x10]
	0x034CCC1C STR W13, [X31 + 0x28]
	0x034CCC20 STR D0, [X31 + 0x20]
	0x034CCC24 STRB W31, [X31 + 0x2C]
	0x034CCC28 BL 0x1C1729C
	0x034CCC2C MOV X8, X0
	0x034CCC30 STR X0, [X20 + 0x470]
	0x034CCC34 MOV X0, X19
	0x034CCC38 BLR X8
	0x034CCC3C LDP X20, X19, [X31 + 0x40]
	0x034CCC40 LDR X30, [X31 + 0x30]
	0x034CCC44 ADD X31, X31, 0x50
	0x034CCC48 RET
	0x034CCC4C SUB X31, X31, 0x50
	0x034CCC50 STP X30, X21, [X31 + 0x30]
	0x034CCC54 STP X20, X19, [X31 + 0x40]
	0x034CCC58 ADRP X21, 0xF13000
	0x034CCC5C LDR X8, [X21 + 0x478]
	0x034CCC60 MOV X19, X1
	0x034CCC64 MOV X20, X0
	0x034CCC68 CBNZ X8, 0x34CCCB4
	0x034CCC6C ADRP X12, 0xFFFFFFFFFD621000
	0x034CCC70 LDR V0, [X12 + 0x5B8]
	0x034CCC74 ADRP X8, 0xFFFFFFFFFD647000
	0x034CCC78 ADRP X10, 0xFFFFFFFFFD649000
	0x034CCC7C ADD X8, X8, 0xDD2
	0x034CCC80 MOVZ W9, 0x11
	0x034CCC84 ADD X10, X10, 0xE1F
	0x034CCC88 MOVZ W11, 0x22
	0x034CCC8C MOVZ W13, 0x10

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+848]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43692032
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 681
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+848], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_TestUserAppAccess_GetUserId(System.IntPtr obj)

Disassembly:
	0x034CCC90 ADD X0, X31, 0x0
	0x034CCC94 STP X8, X9, [X31]
	0x034CCC98 STP X10, X11, [X31 + 0x10]
	0x034CCC9C STR W13, [X31 + 0x28]
	0x034CCCA0 STR D0, [X31 + 0x20]
	0x034CCCA4 STRB W31, [X31 + 0x2C]
	0x034CCCA8 BL 0x1C1729C
	0x034CCCAC MOV X8, X0
	0x034CCCB0 STR X0, [X21 + 0x478]
	0x034CCCB4 MOV X0, X20
	0x034CCCB8 MOV X1, X19
	0x034CCCBC BLR X8
	0x034CCCC0 LDP X20, X19, [X31 + 0x40]
	0x034CCCC4 LDP X30, X21, [X31 + 0x30]
	0x034CCCC8 ADD X31, X31, 0x50
	0x034CCCCC RET
	0x034CCCD0 STP X30, X21, [X31 - 0x20]!
	0x034CCCD4 STP X20, X19, [X31 + 0x10]
	0x034CCCD8 ADRP X20, 0xF13000
	0x034CCCDC ADRP X21, 0xC66000
	0x034CCCE0 LDRB W8, [X20 + 0x480]
	0x034CCCE4 LDR X21, [X21 + 0x328]
	0x034CCCE8 MOV X19, X0
	0x034CCCEC TBNZ X8, 0x0, 0x34CCD04
	0x034CCCF0 ADRP X0, 0xC66000
	0x034CCCF4 LDR X0, [X0 + 0x328]
	0x034CCCF8 BL 0x1C16CF4
	0x034CCCFC MOVZ W8, 0x1
	0x034CCD00 STRB W8, [X20 + 0x480]
	0x034CCD04 LDR X0, [X21]
	0x034CCD08 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+856]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1362
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+856], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_TestUserAppAccessArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034CCD0C CBNZ W8, 0x34CCD14
	0x034CCD10 BL 0x1C16DFC
	0x034CCD14 MOV X0, X19
	0x034CCD18 BL 0x34CCD28
	0x034CCD1C LDP X20, X19, [X31 + 0x10]
	0x034CCD20 LDP X30, X21, [X31], #0x20
	0x034CCD24 B 0x34B3B78
	0x034CCD28 SUB X31, X31, 0x50
	0x034CCD2C STR X30, [X31 + 0x30]
	0x034CCD30 STP X20, X19, [X31 + 0x40]
	0x034CCD34 ADRP X20, 0xF13000
	0x034CCD38 LDR X8, [X20 + 0x488]
	0x034CCD3C MOV X19, X0
	0x034CCD40 CBNZ X8, 0x34CCD8C
	0x034CCD44 ADRP X12, 0xFFFFFFFFFD621000
	0x034CCD48 LDR V0, [X12 + 0x5B8]
	0x034CCD4C ADRP X8, 0xFFFFFFFFFD647000
	0x034CCD50 ADRP X10, 0xFFFFFFFFFD65D000
	0x034CCD54 ADD X8, X8, 0xDD2
	0x034CCD58 MOVZ W9, 0x11
	0x034CCD5C ADD X10, X10, 0xE75
	0x034CCD60 MOVZ W11, 0x22
	0x034CCD64 MOVZ W13, 0x8
	0x034CCD68 ADD X0, X31, 0x0
	0x034CCD6C STP X8, X9, [X31]
	0x034CCD70 STP X10, X11, [X31 + 0x10]
	0x034CCD74 STR W13, [X31 + 0x28]
	0x034CCD78 STR D0, [X31 + 0x20]
	0x034CCD7C STRB W31, [X31 + 0x2C]
	0x034CCD80 BL 0x1C1729C
	0x034CCD84 MOV X8, X0
	0x034CCD88 STR X0, [X20 + 0x488]
	0x034CCD8C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF14000
	007 Move X8, [X21+864]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43900928
	013 Move V0, [X12+1464]
	014 Move X8, -43745280
	015 Move X10, -43798528
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1650
	019 Move W11, 37
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+864], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.UIntPtr ovr_TestUserAppAccessArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034CCD90 BLR X8
	0x034CCD94 LDP X20, X19, [X31 + 0x40]
	0x034CCD98 LDR X30, [X31 + 0x30]
	0x034CCD9C ADD X31, X31, 0x50
	0x034CCDA0 RET
	0x034CCDA4 SUB X31, X31, 0x50
	0x034CCDA8 STR X30, [X31 + 0x30]
	0x034CCDAC STP X20, X19, [X31 + 0x40]
	0x034CCDB0 ADRP X20, 0xF13000
	0x034CCDB4 LDR X8, [X20 + 0x490]
	0x034CCDB8 MOV X19, X0
	0x034CCDBC CBNZ X8, 0x34CCE08
	0x034CCDC0 ADRP X12, 0xFFFFFFFFFD621000
	0x034CCDC4 LDR V0, [X12 + 0x5B8]
	0x034CCDC8 ADRP X8, 0xFFFFFFFFFD647000
	0x034CCDCC ADRP X10, 0xFFFFFFFFFD65F000
	0x034CCDD0 ADD X8, X8, 0xDD2
	0x034CCDD4 MOVZ W9, 0x11
	0x034CCDD8 ADD X10, X10, 0xD8E
	0x034CCDDC MOVZ W11, 0x1F
	0x034CCDE0 MOVZ W13, 0x8
	0x034CCDE4 ADD X0, X31, 0x0
	0x034CCDE8 STP X8, X9, [X31]
	0x034CCDEC STP X10, X11, [X31 + 0x10]
	0x034CCDF0 STR W13, [X31 + 0x28]
	0x034CCDF4 STR D0, [X31 + 0x20]
	0x034CCDF8 STRB W31, [X31 + 0x2C]
	0x034CCDFC BL 0x1C1729C
	0x034CCE00 MOV X8, X0
	0x034CCE04 STR X0, [X20 + 0x490]
	0x034CCE08 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+872]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43745280
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3926
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+872], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_User_GetDisplayName(System.IntPtr obj)

Disassembly:
	0x034CCE0C BLR X8
	0x034CCE10 LDP X20, X19, [X31 + 0x40]
	0x034CCE14 LDR X30, [X31 + 0x30]
	0x034CCE18 ADD X31, X31, 0x50
	0x034CCE1C RET
	0x034CCE20 SUB X31, X31, 0x50
	0x034CCE24 STR X30, [X31 + 0x30]
	0x034CCE28 STP X20, X19, [X31 + 0x40]
	0x034CCE2C ADRP X20, 0xF13000
	0x034CCE30 LDR X8, [X20 + 0x498]
	0x034CCE34 MOV X19, X0
	0x034CCE38 CBNZ X8, 0x34CCE84
	0x034CCE3C ADRP X12, 0xFFFFFFFFFD621000
	0x034CCE40 LDR V0, [X12 + 0x5B8]
	0x034CCE44 ADRP X8, 0xFFFFFFFFFD647000
	0x034CCE48 ADRP X10, 0xFFFFFFFFFD644000
	0x034CCE4C ADD X8, X8, 0xDD2
	0x034CCE50 MOVZ W9, 0x11
	0x034CCE54 ADD X10, X10, 0x5D6
	0x034CCE58 MOVZ W11, 0x23
	0x034CCE5C MOVZ W13, 0x8
	0x034CCE60 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF14000
	006 Move X21, 0xC67000
	007 Move W8, [X20+880]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC67000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+880], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_User_GetDisplayName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_User_GetDisplayName_Native(System.IntPtr obj)

Disassembly:
	0x034CCE64 STP X8, X9, [X31]
	0x034CCE68 STP X10, X11, [X31 + 0x10]
	0x034CCE6C STR W13, [X31 + 0x28]
	0x034CCE70 STR D0, [X31 + 0x20]
	0x034CCE74 STRB W31, [X31 + 0x2C]
	0x034CCE78 BL 0x1C1729C
	0x034CCE7C MOV X8, X0
	0x034CCE80 STR X0, [X20 + 0x498]
	0x034CCE84 MOV X0, X19
	0x034CCE88 BLR X8
	0x034CCE8C LDP X20, X19, [X31 + 0x40]
	0x034CCE90 LDR X30, [X31 + 0x30]
	0x034CCE94 CMP W0, 0x0
	0x034CCE98 CSET W0, NE
	0x034CCE9C ADD X31, X31, 0x50
	0x034CCEA0 RET
	0x034CCEA4 SUB X31, X31, 0x50
	0x034CCEA8 STR X30, [X31 + 0x30]
	0x034CCEAC STP X20, X19, [X31 + 0x40]
	0x034CCEB0 ADRP X20, 0xF13000
	0x034CCEB4 LDR X8, [X20 + 0x4A0]
	0x034CCEB8 MOV X19, X0
	0x034CCEBC CBNZ X8, 0x34CCF08
	0x034CCEC0 ADRP X12, 0xFFFFFFFFFD621000
	0x034CCEC4 LDR V0, [X12 + 0x5B8]
	0x034CCEC8 ADRP X8, 0xFFFFFFFFFD647000
	0x034CCECC ADRP X10, 0xFFFFFFFFFD636000
	0x034CCED0 ADD X8, X8, 0xDD2
	0x034CCED4 MOVZ W9, 0x11
	0x034CCED8 ADD X10, X10, 0x413
	0x034CCEDC MOVZ W11, 0x2A

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+888]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43798528
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1688
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+888], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UInt64 ovr_User_GetID(System.IntPtr obj)

Disassembly:
	0x034CCEE0 MOVZ W13, 0x8
	0x034CCEE4 ADD X0, X31, 0x0
	0x034CCEE8 STP X8, X9, [X31]
	0x034CCEEC STP X10, X11, [X31 + 0x10]
	0x034CCEF0 STR W13, [X31 + 0x28]
	0x034CCEF4 STR D0, [X31 + 0x20]
	0x034CCEF8 STRB W31, [X31 + 0x2C]
	0x034CCEFC BL 0x1C1729C
	0x034CCF00 MOV X8, X0
	0x034CCF04 STR X0, [X20 + 0x4A0]
	0x034CCF08 MOV X0, X19
	0x034CCF0C BLR X8
	0x034CCF10 LDP X20, X19, [X31 + 0x40]
	0x034CCF14 LDR X30, [X31 + 0x30]
	0x034CCF18 CMP W0, 0x0
	0x034CCF1C CSET W0, NE
	0x034CCF20 ADD X31, X31, 0x50
	0x034CCF24 RET
	0x034CCF28 STP X30, X21, [X31 - 0x20]!
	0x034CCF2C STP X20, X19, [X31 + 0x10]
	0x034CCF30 ADRP X20, 0xF13000
	0x034CCF34 ADRP X21, 0xC66000
	0x034CCF38 LDRB W8, [X20 + 0x4A8]
	0x034CCF3C LDR X21, [X21 + 0x328]
	0x034CCF40 MOV X19, X0
	0x034CCF44 TBNZ X8, 0x0, 0x34CCF5C
	0x034CCF48 ADRP X0, 0xC66000
	0x034CCF4C LDR X0, [X0 + 0x328]
	0x034CCF50 BL 0x1C16CF4
	0x034CCF54 MOVZ W8, 0x1
	0x034CCF58 STRB W8, [X20 + 0x4A8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+896]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43728896
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3830
	017 Move W11, 14
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+896], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_User_GetImageUrl(System.IntPtr obj)

Disassembly:
	0x034CCF5C LDR X0, [X21]
	0x034CCF60 LDR W8, [X0 + 0xE0]
	0x034CCF64 CBNZ W8, 0x34CCF6C
	0x034CCF68 BL 0x1C16DFC
	0x034CCF6C MOV X0, X19
	0x034CCF70 BL 0x34CCF80
	0x034CCF74 LDP X20, X19, [X31 + 0x10]
	0x034CCF78 LDP X30, X21, [X31], #0x20
	0x034CCF7C B 0x34B3B78
	0x034CCF80 SUB X31, X31, 0x50
	0x034CCF84 STR X30, [X31 + 0x30]
	0x034CCF88 STP X20, X19, [X31 + 0x40]
	0x034CCF8C ADRP X20, 0xF13000
	0x034CCF90 LDR X8, [X20 + 0x4B0]
	0x034CCF94 MOV X19, X0
	0x034CCF98 CBNZ X8, 0x34CCFE4
	0x034CCF9C ADRP X12, 0xFFFFFFFFFD621000
	0x034CCFA0 LDR V0, [X12 + 0x5B8]
	0x034CCFA4 ADRP X8, 0xFFFFFFFFFD647000
	0x034CCFA8 ADRP X10, 0xFFFFFFFFFD63C000
	0x034CCFAC ADD X8, X8, 0xDD2
	0x034CCFB0 MOVZ W9, 0x11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF14000
	006 Move X21, 0xC67000
	007 Move W8, [X20+904]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC67000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+904], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_User_GetImageUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_User_GetImageUrl_Native(System.IntPtr obj)

Disassembly:
	0x034CCFB4 ADD X10, X10, 0x6CC
	0x034CCFB8 MOVZ W11, 0x16
	0x034CCFBC MOVZ W13, 0x8
	0x034CCFC0 ADD X0, X31, 0x0
	0x034CCFC4 STP X8, X9, [X31]
	0x034CCFC8 STP X10, X11, [X31 + 0x10]
	0x034CCFCC STR W13, [X31 + 0x28]
	0x034CCFD0 STR D0, [X31 + 0x20]
	0x034CCFD4 STRB W31, [X31 + 0x2C]
	0x034CCFD8 BL 0x1C1729C
	0x034CCFDC MOV X8, X0
	0x034CCFE0 STR X0, [X20 + 0x4B0]
	0x034CCFE4 MOV X0, X19
	0x034CCFE8 BLR X8
	0x034CCFEC LDP X20, X19, [X31 + 0x40]
	0x034CCFF0 LDR X30, [X31 + 0x30]
	0x034CCFF4 ADD X31, X31, 0x50
	0x034CCFF8 RET
	0x034CCFFC SUB X31, X31, 0x50
	0x034CD000 STR X30, [X31 + 0x30]
	0x034CD004 STP X20, X19, [X31 + 0x40]
	0x034CD008 ADRP X20, 0xF12000
	0x034CD00C LDR X8, [X20 + 0x4B8]
	0x034CD010 MOV X19, X0
	0x034CD014 CBNZ X8, 0x34CD060
	0x034CD018 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD01C LDR V0, [X12 + 0x5B8]
	0x034CD020 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD024 ADRP X10, 0xFFFFFFFFFD62D000
	0x034CD028 ADD X8, X8, 0xDD2
	0x034CD02C MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF14000
	006 Move X8, [X20+912]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43900928
	011 Move V0, [X12+1464]
	012 Move X8, -43745280
	013 Move X10, -43663360
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3781
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+912], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_User_GetOculusID(System.IntPtr obj)

Disassembly:
	0x034CD030 ADD X10, X10, 0x9F9
	0x034CD034 MOVZ W11, 0x1D
	0x034CD038 MOVZ W13, 0x8
	0x034CD03C ADD X0, X31, 0x0
	0x034CD040 STP X8, X9, [X31]
	0x034CD044 STP X10, X11, [X31 + 0x10]
	0x034CD048 STR W13, [X31 + 0x28]
	0x034CD04C STR D0, [X31 + 0x20]
	0x034CD050 STRB W31, [X31 + 0x2C]
	0x034CD054 BL 0x1C1729C
	0x034CD058 MOV X8, X0
	0x034CD05C STR X0, [X20 + 0x4B8]
	0x034CD060 MOV X0, X19
	0x034CD064 BLR X8
	0x034CD068 LDP X20, X19, [X31 + 0x40]
	0x034CD06C LDR X30, [X31 + 0x30]
	0x034CD070 CMP W0, 0x0
	0x034CD074 CSET W0, NE
	0x034CD078 ADD X31, X31, 0x50
	0x034CD07C RET
	0x034CD080 SUB X31, X31, 0x50
	0x034CD084 STR X30, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+920]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+920], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_User_GetOculusID_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_User_GetOculusID_Native(System.IntPtr obj)

Disassembly:
	0x034CD088 STP X20, X19, [X31 + 0x40]
	0x034CD08C ADRP X20, 0xF12000
	0x034CD090 LDR X8, [X20 + 0x4C0]
	0x034CD094 MOV X19, X0
	0x034CD098 CBNZ X8, 0x34CD0E4
	0x034CD09C ADRP X12, 0xFFFFFFFFFD620000
	0x034CD0A0 LDR V0, [X12 + 0x5B8]
	0x034CD0A4 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD0A8 ADRP X10, 0xFFFFFFFFFD651000
	0x034CD0AC ADD X8, X8, 0xDD2
	0x034CD0B0 MOVZ W9, 0x11
	0x034CD0B4 ADD X10, X10, 0xC0
	0x034CD0B8 MOVZ W11, 0x16
	0x034CD0BC MOVZ W13, 0x8
	0x034CD0C0 ADD X0, X31, 0x0
	0x034CD0C4 STP X8, X9, [X31]
	0x034CD0C8 STP X10, X11, [X31 + 0x10]
	0x034CD0CC STR W13, [X31 + 0x28]
	0x034CD0D0 STR D0, [X31 + 0x20]
	0x034CD0D4 STRB W31, [X31 + 0x2C]
	0x034CD0D8 BL 0x1C1729C
	0x034CD0DC MOV X8, X0
	0x034CD0E0 STR X0, [X20 + 0x4C0]
	0x034CD0E4 MOV X0, X19
	0x034CD0E8 BLR X8
	0x034CD0EC LDP X20, X19, [X31 + 0x40]
	0x034CD0F0 LDR X30, [X31 + 0x30]
	0x034CD0F4 ADD X31, X31, 0x50
	0x034CD0F8 RET
	0x034CD0FC SUB X31, X31, 0x60
	0x034CD100 STR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+928]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43753472
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 459
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+928], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_User_GetPresence(System.IntPtr obj)

Disassembly:
	0x034CD104 STP X22, X21, [X31 + 0x40]
	0x034CD108 STP X20, X19, [X31 + 0x50]
	0x034CD10C ADRP X22, 0xF12000
	0x034CD110 LDR X8, [X22 + 0x4C8]
	0x034CD114 MOV X19, X2
	0x034CD118 MOV X21, X1
	0x034CD11C MOV X20, X0
	0x034CD120 CBNZ X8, 0x34CD16C
	0x034CD124 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD128 LDR V0, [X12 + 0x5B8]
	0x034CD12C ADRP X8, 0xFFFFFFFFFD646000
	0x034CD130 ADRP X10, 0xFFFFFFFFFD65A000
	0x034CD134 ADD X8, X8, 0xDD2
	0x034CD138 MOVZ W9, 0x11
	0x034CD13C ADD X10, X10, 0xB5C
	0x034CD140 MOVZ W11, 0x16
	0x034CD144 MOVZ W13, 0x18
	0x034CD148 ADD X0, X31, 0x0
	0x034CD14C STP X8, X9, [X31]
	0x034CD150 STP X10, X11, [X31 + 0x10]
	0x034CD154 STR W13, [X31 + 0x28]
	0x034CD158 STR D0, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+936]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+936], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_User_GetPresence_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_User_GetPresence_Native(System.IntPtr obj)

Disassembly:
	0x034CD15C STRB W31, [X31 + 0x2C]
	0x034CD160 BL 0x1C1729C
	0x034CD164 MOV X8, X0
	0x034CD168 STR X0, [X22 + 0x4C8]
	0x034CD16C ADD X9, X21, 0x20
	0x034CD170 CMP X21, 0x0
	0x034CD174 CSEL X1, X31, X9, EQ
	0x034CD178 MOV X0, X20
	0x034CD17C MOV X2, X19
	0x034CD180 BLR X8
	0x034CD184 LDP X20, X19, [X31 + 0x50]
	0x034CD188 LDP X22, X21, [X31 + 0x40]
	0x034CD18C LDR X30, [X31 + 0x30]
	0x034CD190 ADD X31, X31, 0x60
	0x034CD194 RET
	0x034CD198 SUB X31, X31, 0x60
	0x034CD19C STR X30, [X31 + 0x30]
	0x034CD1A0 STP X22, X21, [X31 + 0x40]
	0x034CD1A4 STP X20, X19, [X31 + 0x50]
	0x034CD1A8 ADRP X22, 0xF12000
	0x034CD1AC LDR X8, [X22 + 0x4D0]
	0x034CD1B0 MOV X19, X2
	0x034CD1B4 MOV X21, X1
	0x034CD1B8 MOV X20, X0
	0x034CD1BC CBNZ X8, 0x34CD208
	0x034CD1C0 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD1C4 LDR V0, [X12 + 0x5B8]
	0x034CD1C8 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD1CC ADRP X10, 0xFFFFFFFFFD625000
	0x034CD1D0 ADD X8, X8, 0xDD2
	0x034CD1D4 MOVZ W9, 0x11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+944]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43769856
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1410
	017 Move W11, 20
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+944], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_User_GetPresenceDeeplinkMessage(System.IntPtr obj)

Disassembly:
	0x034CD1D8 ADD X10, X10, 0x870
	0x034CD1DC MOVZ W11, 0x1D
	0x034CD1E0 MOVZ W13, 0x18
	0x034CD1E4 ADD X0, X31, 0x0
	0x034CD1E8 STP X8, X9, [X31]
	0x034CD1EC STP X10, X11, [X31 + 0x10]
	0x034CD1F0 STR W13, [X31 + 0x28]
	0x034CD1F4 STR D0, [X31 + 0x20]
	0x034CD1F8 STRB W31, [X31 + 0x2C]
	0x034CD1FC BL 0x1C1729C
	0x034CD200 MOV X8, X0
	0x034CD204 STR X0, [X22 + 0x4D0]
	0x034CD208 ADD X9, X21, 0x20
	0x034CD20C CMP X21, 0x0
	0x034CD210 CSEL X1, X31, X9, EQ
	0x034CD214 MOV X0, X20
	0x034CD218 MOV X2, X19
	0x034CD21C BLR X8
	0x034CD220 LDP X20, X19, [X31 + 0x50]
	0x034CD224 LDP X22, X21, [X31 + 0x40]
	0x034CD228 LDR X30, [X31 + 0x30]
	0x034CD22C ADD X31, X31, 0x60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+952]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+952], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_User_GetPresenceDeeplinkMessage_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(System.IntPtr obj)

Disassembly:
	0x034CD230 RET
	0x034CD234 SUB X31, X31, 0x60
	0x034CD238 STR X30, [X31 + 0x30]
	0x034CD23C STP X22, X21, [X31 + 0x40]
	0x034CD240 STP X20, X19, [X31 + 0x50]
	0x034CD244 ADRP X22, 0xF12000
	0x034CD248 LDR X8, [X22 + 0x4D8]
	0x034CD24C MOV W19, W2
	0x034CD250 MOV X21, X1
	0x034CD254 MOV X20, X0
	0x034CD258 CBNZ X8, 0x34CD2A4
	0x034CD25C ADRP X12, 0xFFFFFFFFFD620000
	0x034CD260 LDR V0, [X12 + 0x5B8]
	0x034CD264 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD268 ADRP X10, 0xFFFFFFFFFD623000
	0x034CD26C ADD X8, X8, 0xDD2
	0x034CD270 MOVZ W9, 0x11
	0x034CD274 ADD X10, X10, 0x3D0
	0x034CD278 MOVZ W11, 0x16
	0x034CD27C MOVZ W13, 0x14
	0x034CD280 ADD X0, X31, 0x0
	0x034CD284 STP X8, X9, [X31]
	0x034CD288 STP X10, X11, [X31 + 0x10]
	0x034CD28C STR W13, [X31 + 0x28]
	0x034CD290 STR D0, [X31 + 0x20]
	0x034CD294 STRB W31, [X31 + 0x2C]
	0x034CD298 BL 0x1C1729C
	0x034CD29C MOV X8, X0
	0x034CD2A0 STR X0, [X22 + 0x4D8]
	0x034CD2A4 ADD X9, X21, 0x20
	0x034CD2A8 CMP X21, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+960]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43802624
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1712
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+960], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_User_GetPresenceDestinationApiName(System.IntPtr obj)

Disassembly:
	0x034CD2AC CSEL X1, X31, X9, EQ
	0x034CD2B0 MOV X0, X20
	0x034CD2B4 MOV W2, W19
	0x034CD2B8 BLR X8
	0x034CD2BC LDP X20, X19, [X31 + 0x50]
	0x034CD2C0 LDP X22, X21, [X31 + 0x40]
	0x034CD2C4 LDR X30, [X31 + 0x30]
	0x034CD2C8 ADD X31, X31, 0x60
	0x034CD2CC RET
	0x034CD2D0 SUB X31, X31, 0x60
	0x034CD2D4 STR X30, [X31 + 0x30]
	0x034CD2D8 STP X22, X21, [X31 + 0x40]
	0x034CD2DC STP X20, X19, [X31 + 0x50]
	0x034CD2E0 ADRP X22, 0xF12000
	0x034CD2E4 LDR X8, [X22 + 0x4E0]
	0x034CD2E8 MOV X19, X2
	0x034CD2EC MOV X21, X1
	0x034CD2F0 MOV X20, X0
	0x034CD2F4 CBNZ X8, 0x34CD340
	0x034CD2F8 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD2FC LDR V0, [X12 + 0x5B8]
	0x034CD300 ADRP X8, 0xFFFFFFFFFD646000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+968]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+968], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_User_GetPresenceDestinationApiName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_User_GetPresenceDestinationApiName_Native(System.IntPtr obj)

Disassembly:
	0x034CD304 ADRP X10, 0xFFFFFFFFFD63D000
	0x034CD308 ADD X8, X8, 0xDD2
	0x034CD30C MOVZ W9, 0x11
	0x034CD310 ADD X10, X10, 0x8D3
	0x034CD314 MOVZ W11, 0x21
	0x034CD318 MOVZ W13, 0x18
	0x034CD31C ADD X0, X31, 0x0
	0x034CD320 STP X8, X9, [X31]
	0x034CD324 STP X10, X11, [X31 + 0x10]
	0x034CD328 STR W13, [X31 + 0x28]
	0x034CD32C STR D0, [X31 + 0x20]
	0x034CD330 STRB W31, [X31 + 0x2C]
	0x034CD334 BL 0x1C1729C
	0x034CD338 MOV X8, X0
	0x034CD33C STR X0, [X22 + 0x4E0]
	0x034CD340 ADD X9, X21, 0x20
	0x034CD344 CMP X21, 0x0
	0x034CD348 CSEL X1, X31, X9, EQ
	0x034CD34C MOV X0, X20
	0x034CD350 MOV X2, X19
	0x034CD354 BLR X8
	0x034CD358 LDP X20, X19, [X31 + 0x50]
	0x034CD35C LDP X22, X21, [X31 + 0x40]
	0x034CD360 LDR X30, [X31 + 0x30]
	0x034CD364 ADD X31, X31, 0x60
	0x034CD368 RET
	0x034CD36C SUB X31, X31, 0x50
	0x034CD370 STR X30, [X31 + 0x30]
	0x034CD374 STP X20, X19, [X31 + 0x40]
	0x034CD378 ADRP X20, 0xF12000
	0x034CD37C LDR X8, [X20 + 0x4E8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+976]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43769856
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1431
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+976], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_User_GetPresenceLobbySessionId(System.IntPtr obj)

Disassembly:
	0x034CD380 MOV X19, X0
	0x034CD384 CBNZ X8, 0x34CD3D0
	0x034CD388 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD38C LDR V0, [X12 + 0x5B8]
	0x034CD390 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD394 ADRP X10, 0xFFFFFFFFFD63B000
	0x034CD398 ADD X8, X8, 0xDD2
	0x034CD39C MOVZ W9, 0x11
	0x034CD3A0 ADD X10, X10, 0x6E3
	0x034CD3A4 MOVZ W11, 0x25
	0x034CD3A8 MOVZ W13, 0x8
	0x034CD3AC ADD X0, X31, 0x0
	0x034CD3B0 STP X8, X9, [X31]
	0x034CD3B4 STP X10, X11, [X31 + 0x10]
	0x034CD3B8 STR W13, [X31 + 0x28]
	0x034CD3BC STR D0, [X31 + 0x20]
	0x034CD3C0 STRB W31, [X31 + 0x2C]
	0x034CD3C4 BL 0x1C1729C
	0x034CD3C8 MOV X8, X0
	0x034CD3CC STR X0, [X20 + 0x4E8]
	0x034CD3D0 MOV X0, X19
	0x034CD3D4 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+984]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+984], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_User_GetPresenceLobbySessionId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_User_GetPresenceLobbySessionId_Native(System.IntPtr obj)

Disassembly:
	0x034CD3D8 LDP X20, X19, [X31 + 0x40]
	0x034CD3DC LDR X30, [X31 + 0x30]
	0x034CD3E0 ADD X31, X31, 0x50
	0x034CD3E4 RET
	0x034CD3E8 SUB X31, X31, 0x60
	0x034CD3EC STR X30, [X31 + 0x30]
	0x034CD3F0 STP X22, X21, [X31 + 0x40]
	0x034CD3F4 STP X20, X19, [X31 + 0x50]
	0x034CD3F8 ADRP X22, 0xF12000
	0x034CD3FC LDR X8, [X22 + 0x528]
	0x034CD400 MOV X19, X2
	0x034CD404 MOV X20, X1
	0x034CD408 MOV X21, X0
	0x034CD40C CBNZ X8, 0x34CD458
	0x034CD410 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD414 LDR V0, [X12 + 0x5B8]
	0x034CD418 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD41C ADRP X10, 0xFFFFFFFFFD645000
	0x034CD420 ADD X8, X8, 0xDD2
	0x034CD424 MOVZ W9, 0x11
	0x034CD428 ADD X10, X10, 0x206
	0x034CD42C MOVZ W11, 0x3F
	0x034CD430 MOVZ W13, 0x18
	0x034CD434 ADD X0, X31, 0x0
	0x034CD438 STP X8, X9, [X31]
	0x034CD43C STP X10, X11, [X31 + 0x10]
	0x034CD440 STR W13, [X31 + 0x28]
	0x034CD444 STR D0, [X31 + 0x20]
	0x034CD448 STRB W31, [X31 + 0x2C]
	0x034CD44C BL 0x1C1729C
	0x034CD450 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+992]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43741184
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3580
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+992], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_User_GetPresenceMatchSessionId(System.IntPtr obj)

Disassembly:
	0x034CD454 STR X0, [X22 + 0x528]
	0x034CD458 MOV X0, X21
	0x034CD45C MOV X1, X20
	0x034CD460 MOV X2, X19
	0x034CD464 BLR X8
	0x034CD468 LDP X20, X19, [X31 + 0x50]
	0x034CD46C LDP X22, X21, [X31 + 0x40]
	0x034CD470 LDR X30, [X31 + 0x30]
	0x034CD474 ADD X31, X31, 0x60
	0x034CD478 RET
	0x034CD47C SUB X31, X31, 0x50
	0x034CD480 STP X30, X21, [X31 + 0x30]
	0x034CD484 STP X20, X19, [X31 + 0x40]
	0x034CD488 ADRP X21, 0xF12000
	0x034CD48C LDR X8, [X21 + 0x540]
	0x034CD490 MOV X19, X1
	0x034CD494 MOV X20, X0
	0x034CD498 CBNZ X8, 0x34CD4E4
	0x034CD49C ADRP X12, 0xFFFFFFFFFD620000
	0x034CD4A0 LDR V0, [X12 + 0x5B8]
	0x034CD4A4 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD4A8 ADRP X10, 0xFFFFFFFFFD659000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+1000]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1000], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_User_GetPresenceMatchSessionId_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_User_GetPresenceMatchSessionId_Native(System.IntPtr obj)

Disassembly:
	0x034CD4AC ADD X8, X8, 0xDD2
	0x034CD4B0 MOVZ W9, 0x11
	0x034CD4B4 ADD X10, X10, 0x4CD
	0x034CD4B8 MOVZ W11, 0x2C
	0x034CD4BC MOVZ W13, 0x10
	0x034CD4C0 ADD X0, X31, 0x0
	0x034CD4C4 STP X8, X9, [X31]
	0x034CD4C8 STP X10, X11, [X31 + 0x10]
	0x034CD4CC STR W13, [X31 + 0x28]
	0x034CD4D0 STR D0, [X31 + 0x20]
	0x034CD4D4 STRB W31, [X31 + 0x2C]
	0x034CD4D8 BL 0x1C1729C
	0x034CD4DC MOV X8, X0
	0x034CD4E0 STR X0, [X21 + 0x540]
	0x034CD4E4 MOV X0, X20
	0x034CD4E8 MOV X1, X19
	0x034CD4EC BLR X8
	0x034CD4F0 LDP X20, X19, [X31 + 0x40]
	0x034CD4F4 LDP X30, X21, [X31 + 0x30]
	0x034CD4F8 ADD X31, X31, 0x50
	0x034CD4FC RET
	0x034CD500 SUB X31, X31, 0x50
	0x034CD504 STP X30, X21, [X31 + 0x30]
	0x034CD508 STP X20, X19, [X31 + 0x40]
	0x034CD50C ADRP X21, 0xF12000
	0x034CD510 LDR X8, [X21 + 0x580]
	0x034CD514 MOV X19, X1
	0x034CD518 MOV X20, X0
	0x034CD51C CBNZ X8, 0x34CD568
	0x034CD520 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD524 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1008]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1446
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1008], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.UserPresenceStatus ovr_User_GetPresenceStatus(System.IntPtr obj)

Disassembly:
	0x034CD528 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD52C ADRP X10, 0xFFFFFFFFFD641000
	0x034CD530 ADD X8, X8, 0xDD2
	0x034CD534 MOVZ W9, 0x11
	0x034CD538 ADD X10, X10, 0x5E5
	0x034CD53C MOVZ W11, 0x29
	0x034CD540 MOVZ W13, 0x10
	0x034CD544 ADD X0, X31, 0x0
	0x034CD548 STP X8, X9, [X31]
	0x034CD54C STP X10, X11, [X31 + 0x10]
	0x034CD550 STR W13, [X31 + 0x28]
	0x034CD554 STR D0, [X31 + 0x20]
	0x034CD558 STRB W31, [X31 + 0x2C]
	0x034CD55C BL 0x1C1729C
	0x034CD560 MOV X8, X0
	0x034CD564 STR X0, [X21 + 0x580]
	0x034CD568 MOV X0, X20
	0x034CD56C MOV X1, X19
	0x034CD570 BLR X8
	0x034CD574 LDP X20, X19, [X31 + 0x40]
	0x034CD578 LDP X30, X21, [X31 + 0x30]
	0x034CD57C ADD X31, X31, 0x50
	0x034CD580 RET
	0x034CD584 SUB X31, X31, 0x50
	0x034CD588 STP X30, X21, [X31 + 0x30]
	0x034CD58C STP X20, X19, [X31 + 0x40]
	0x034CD590 ADRP X21, 0xF12000
	0x034CD594 LDR X8, [X21 + 0x590]
	0x034CD598 MOV X19, X1
	0x034CD59C MOV X20, X0
	0x034CD5A0 CBNZ X8, 0x34CD5EC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1016]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43732992
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3845
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1016], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_User_GetSmallImageUrl(System.IntPtr obj)

Disassembly:
	0x034CD5A4 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD5A8 LDR V0, [X12 + 0x5B8]
	0x034CD5AC ADRP X8, 0xFFFFFFFFFD646000
	0x034CD5B0 ADRP X10, 0xFFFFFFFFFD639000
	0x034CD5B4 ADD X8, X8, 0xDD2
	0x034CD5B8 MOVZ W9, 0x11
	0x034CD5BC ADD X10, X10, 0x6D4
	0x034CD5C0 MOVZ W11, 0x2C
	0x034CD5C4 MOVZ W13, 0x10
	0x034CD5C8 ADD X0, X31, 0x0
	0x034CD5CC STP X8, X9, [X31]
	0x034CD5D0 STP X10, X11, [X31 + 0x10]
	0x034CD5D4 STR W13, [X31 + 0x28]
	0x034CD5D8 STR D0, [X31 + 0x20]
	0x034CD5DC STRB W31, [X31 + 0x2C]
	0x034CD5E0 BL 0x1C1729C
	0x034CD5E4 MOV X8, X0
	0x034CD5E8 STR X0, [X21 + 0x590]
	0x034CD5EC MOV X0, X20
	0x034CD5F0 MOV X1, X19
	0x034CD5F4 BLR X8
	0x034CD5F8 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+1024]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1024], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_User_GetSmallImageUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_User_GetSmallImageUrl_Native(System.IntPtr obj)

Disassembly:
	0x034CD5FC LDP X30, X21, [X31 + 0x30]
	0x034CD600 ADD X31, X31, 0x50
	0x034CD604 RET
	0x034CD608 SUB X31, X31, 0x50
	0x034CD60C STP X30, X21, [X31 + 0x30]
	0x034CD610 STP X20, X19, [X31 + 0x40]
	0x034CD614 ADRP X21, 0xF12000
	0x034CD618 LDR X8, [X21 + 0x5A0]
	0x034CD61C MOV X19, X1
	0x034CD620 MOV X20, X0
	0x034CD624 CBNZ X8, 0x34CD670
	0x034CD628 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD62C LDR V0, [X12 + 0x5B8]
	0x034CD630 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD634 ADRP X10, 0xFFFFFFFFFD648000
	0x034CD638 ADD X8, X8, 0xDD2
	0x034CD63C MOVZ W9, 0x11
	0x034CD640 ADD X10, X10, 0xE60
	0x034CD644 MOVZ W11, 0x28
	0x034CD648 MOVZ W13, 0x10
	0x034CD64C ADD X0, X31, 0x0
	0x034CD650 STP X8, X9, [X31]
	0x034CD654 STP X10, X11, [X31 + 0x10]
	0x034CD658 STR W13, [X31 + 0x28]
	0x034CD65C STR D0, [X31 + 0x20]
	0x034CD660 STRB W31, [X31 + 0x2C]
	0x034CD664 BL 0x1C1729C
	0x034CD668 MOV X8, X0
	0x034CD66C STR X0, [X21 + 0x5A0]
	0x034CD670 MOV X0, X20
	0x034CD674 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1032]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1481
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1032], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: Oculus.Platform.AccountAgeCategory ovr_UserAccountAgeCategory_GetAgeCategory(System.IntPtr obj)

Disassembly:
	0x034CD678 BLR X8
	0x034CD67C LDP X20, X19, [X31 + 0x40]
	0x034CD680 LDP X30, X21, [X31 + 0x30]
	0x034CD684 ADD X31, X31, 0x50
	0x034CD688 RET
	0x034CD68C SUB X31, X31, 0x50
	0x034CD690 STP X30, X21, [X31 + 0x30]
	0x034CD694 STP X20, X19, [X31 + 0x40]
	0x034CD698 ADRP X21, 0xF12000
	0x034CD69C LDR X8, [X21 + 0x5B0]
	0x034CD6A0 MOV X19, X1
	0x034CD6A4 MOV X20, X0
	0x034CD6A8 CBNZ X8, 0x34CD6F4
	0x034CD6AC ADRP X12, 0xFFFFFFFFFD620000
	0x034CD6B0 LDR V0, [X12 + 0x5B8]
	0x034CD6B4 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD6B8 ADRP X10, 0xFFFFFFFFFD641000
	0x034CD6BC ADD X8, X8, 0xDD2
	0x034CD6C0 MOVZ W9, 0x11
	0x034CD6C4 ADD X10, X10, 0x60F
	0x034CD6C8 MOVZ W11, 0x28
	0x034CD6CC MOVZ W13, 0x10
	0x034CD6D0 ADD X0, X31, 0x0
	0x034CD6D4 STP X8, X9, [X31]
	0x034CD6D8 STP X10, X11, [X31 + 0x10]
	0x034CD6DC STR W13, [X31 + 0x28]
	0x034CD6E0 STR D0, [X31 + 0x20]
	0x034CD6E4 STRB W31, [X31 + 0x2C]
	0x034CD6E8 BL 0x1C1729C
	0x034CD6EC MOV X8, X0
	0x034CD6F0 STR X0, [X21 + 0x5B0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1040]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43810816
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2212
	017 Move W11, 41
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1040], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_UserArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034CD6F4 MOV X0, X20
	0x034CD6F8 MOV X1, X19
	0x034CD6FC BLR X8
	0x034CD700 LDP X20, X19, [X31 + 0x40]
	0x034CD704 LDP X30, X21, [X31 + 0x30]
	0x034CD708 ADD X31, X31, 0x50
	0x034CD70C RET
	0x034CD710 SUB X31, X31, 0x50
	0x034CD714 STP X30, X21, [X31 + 0x30]
	0x034CD718 STP X20, X19, [X31 + 0x40]
	0x034CD71C ADRP X21, 0xF12000
	0x034CD720 LDR X8, [X21 + 0x5D8]
	0x034CD724 MOV X19, X1
	0x034CD728 MOV X20, X0
	0x034CD72C CBNZ X8, 0x34CD778
	0x034CD730 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD734 LDR V0, [X12 + 0x5B8]
	0x034CD738 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD73C ADRP X10, 0xFFFFFFFFFD659000
	0x034CD740 ADD X8, X8, 0xDD2
	0x034CD744 MOVZ W9, 0x11
	0x034CD748 ADD X10, X10, 0x4FA
	0x034CD74C MOVZ W11, 0x29
	0x034CD750 MOVZ W13, 0x10
	0x034CD754 ADD X0, X31, 0x0
	0x034CD758 STP X8, X9, [X31]
	0x034CD75C STP X10, X11, [X31 + 0x10]
	0x034CD760 STR W13, [X31 + 0x28]
	0x034CD764 STR D0, [X31 + 0x20]
	0x034CD768 STRB W31, [X31 + 0x2C]
	0x034CD76C BL 0x1C1729C
	0x034CD770 MOV X8, X0
	0x034CD774 STR X0, [X21 + 0x5D8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF13000
	007 Move X8, [X21+1048]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43905024
	013 Move V0, [X12+1464]
	014 Move X8, -43749376
	015 Move X10, -43851776
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2528
	019 Move W11, 24
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1048], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_UserArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034CD778 MOV X0, X20
	0x034CD77C MOV X1, X19
	0x034CD780 BLR X8
	0x034CD784 LDP X20, X19, [X31 + 0x40]
	0x034CD788 LDP X30, X21, [X31 + 0x30]
	0x034CD78C ADD X31, X31, 0x50
	0x034CD790 RET
	0x034CD794 SUB X31, X31, 0x40
	0x034CD798 STP X30, X19, [X31 + 0x30]
	0x034CD79C ADRP X19, 0xF12000
	0x034CD7A0 LDR X8, [X19 + 0x5E0]
	0x034CD7A4 CBNZ X8, 0x34CD7EC
	0x034CD7A8 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD7AC LDR V0, [X12 + 0x5B8]
	0x034CD7B0 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD7B4 ADRP X10, 0xFFFFFFFFFD648000
	0x034CD7B8 ADD X8, X8, 0xDD2
	0x034CD7BC MOVZ W9, 0x11
	0x034CD7C0 ADD X10, X10, 0xEAA
	0x034CD7C4 MOVZ W11, 0x1B
	0x034CD7C8 ADD X0, X31, 0x0
	0x034CD7CC STR W31, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+1056]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1056], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_UserArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_UserArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034CD7D0 STP X8, X9, [X31]
	0x034CD7D4 STP X10, X11, [X31 + 0x10]
	0x034CD7D8 STR D0, [X31 + 0x20]
	0x034CD7DC STRB W31, [X31 + 0x2C]
	0x034CD7E0 BL 0x1C1729C
	0x034CD7E4 MOV X8, X0
	0x034CD7E8 STR X0, [X19 + 0x5E0]
	0x034CD7EC BLR X8
	0x034CD7F0 LDP X30, X19, [X31 + 0x30]
	0x034CD7F4 ADD X31, X31, 0x40
	0x034CD7F8 RET
	0x034CD7FC SUB X31, X31, 0x50
	0x034CD800 STR X30, [X31 + 0x30]
	0x034CD804 STP X20, X19, [X31 + 0x40]
	0x034CD808 ADRP X20, 0xF12000
	0x034CD80C LDR X8, [X20 + 0x5E8]
	0x034CD810 MOV X19, X0
	0x034CD814 CBNZ X8, 0x34CD860
	0x034CD818 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD81C LDR V0, [X12 + 0x5B8]
	0x034CD820 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD824 ADRP X10, 0xFFFFFFFFFD627000
	0x034CD828 ADD X8, X8, 0xDD2
	0x034CD82C MOVZ W9, 0x11
	0x034CD830 ADD X10, X10, 0x81B
	0x034CD834 MOVZ W11, 0x1C
	0x034CD838 MOVZ W13, 0x8
	0x034CD83C ADD X0, X31, 0x0
	0x034CD840 STP X8, X9, [X31]
	0x034CD844 STP X10, X11, [X31 + 0x10]
	0x034CD848 STR W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1064]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43651072
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3445
	017 Move W11, 24
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1064], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_UserArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034CD84C STR D0, [X31 + 0x20]
	0x034CD850 STRB W31, [X31 + 0x2C]
	0x034CD854 BL 0x1C1729C
	0x034CD858 MOV X8, X0
	0x034CD85C STR X0, [X20 + 0x5E8]
	0x034CD860 MOV X0, X19
	0x034CD864 BLR X8
	0x034CD868 LDP X20, X19, [X31 + 0x40]
	0x034CD86C LDR X30, [X31 + 0x30]
	0x034CD870 ADD X31, X31, 0x50
	0x034CD874 RET
	0x034CD878 STR X30, [X31 - 0x30]!
	0x034CD87C STP X22, X21, [X31 + 0x10]
	0x034CD880 STP X20, X19, [X31 + 0x20]
	0x034CD884 ADRP X22, 0xF12000
	0x034CD888 ADRP X21, 0xC65000
	0x034CD88C LDRB W8, [X22 + 0x5F0]
	0x034CD890 LDR X21, [X21 + 0x328]
	0x034CD894 MOV X20, X1
	0x034CD898 MOV X19, X0
	0x034CD89C TBNZ X8, 0x0, 0x34CD8C0
	0x034CD8A0 ADRP X0, 0xC65000
	0x034CD8A4 LDR X0, [X0 + 0x328]
	0x034CD8A8 BL 0x1C16CF4
	0x034CD8AC ADRP X0, 0xC4E000
	0x034CD8B0 LDR X0, [X0 + 0x850]
	0x034CD8B4 BL 0x1C16CF4
	0x034CD8B8 MOVZ W8, 0x1
	0x034CD8BC STRB W8, [X22 + 0x5F0]
	0x034CD8C0 LDR X0, [X21]
	0x034CD8C4 ADRP X21, 0xC4E000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1072]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1472
	017 Move W11, 21
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1072], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_UserArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034CD8C8 LDR W8, [X0 + 0xE0]
	0x034CD8CC LDR X21, [X21 + 0x850]
	0x034CD8D0 CBNZ W8, 0x34CD8D8
	0x034CD8D4 BL 0x1C16DFC
	0x034CD8D8 MOV X0, X20
	0x034CD8DC BL 0x34B404C
	0x034CD8E0 MOV X20, X0
	0x034CD8E4 MOV X0, X19
	0x034CD8E8 MOV X1, X20
	0x034CD8EC BL 0x34CD918
	0x034CD8F0 LDR X0, [X21]
	0x034CD8F4 LDR W8, [X0 + 0xE0]
	0x034CD8F8 CBNZ W8, 0x34CD900
	0x034CD8FC BL 0x1C16DFC
	0x034CD900 MOV X0, X20
	0x034CD904 LDP X20, X19, [X31 + 0x20]
	0x034CD908 LDP X22, X21, [X31 + 0x10]
	0x034CD90C MOV X1, X31
	0x034CD910 LDR X30, [X31], #0x30
	0x034CD914 B 0x32C1060
	0x034CD918 SUB X31, X31, 0x50
	0x034CD91C STP X30, X21, [X31 + 0x30]
	0x034CD920 STP X20, X19, [X31 + 0x40]
	0x034CD924 ADRP X21, 0xF12000
	0x034CD928 LDR X8, [X21 + 0x5F8]
	0x034CD92C MOV X19, X1
	0x034CD930 MOV X20, X0
	0x034CD934 CBNZ X8, 0x34CD980
	0x034CD938 ADRP X12, 0xFFFFFFFFFD620000
	0x034CD93C LDR V0, [X12 + 0x5B8]
	0x034CD940 ADRP X8, 0xFFFFFFFFFD646000
	0x034CD944 ADRP X10, 0xFFFFFFFFFD63F000
	0x034CD948 ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1080]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43679744
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1137
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1080], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_UserCapability_GetDescription(System.IntPtr obj)

Disassembly:
	0x034CD94C MOVZ W9, 0x11
	0x034CD950 ADD X10, X10, 0x4F0
	0x034CD954 MOVZ W11, 0x23
	0x034CD958 MOVZ W13, 0x10
	0x034CD95C ADD X0, X31, 0x0
	0x034CD960 STP X8, X9, [X31]
	0x034CD964 STP X10, X11, [X31 + 0x10]
	0x034CD968 STR W13, [X31 + 0x28]
	0x034CD96C STR D0, [X31 + 0x20]
	0x034CD970 STRB W31, [X31 + 0x2C]
	0x034CD974 BL 0x1C1729C
	0x034CD978 MOV X8, X0
	0x034CD97C STR X0, [X21 + 0x5F8]
	0x034CD980 MOV X0, X20
	0x034CD984 MOV X1, X19
	0x034CD988 BLR X8
	0x034CD98C LDP X20, X19, [X31 + 0x40]
	0x034CD990 LDP X30, X21, [X31 + 0x30]
	0x034CD994 ADD X31, X31, 0x50
	0x034CD998 RET
	0x034CD99C STR X30, [X31 - 0x30]!
	0x034CD9A0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+1088]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1088], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_UserCapability_GetDescription_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_UserCapability_GetDescription_Native(System.IntPtr obj)

Disassembly:
	0x034CD9A4 STP X20, X19, [X31 + 0x20]
	0x034CD9A8 ADRP X21, 0xF12000
	0x034CD9AC ADRP X22, 0xC65000
	0x034CD9B0 LDRB W8, [X21 + 0x600]
	0x034CD9B4 LDR X22, [X22 + 0x328]
	0x034CD9B8 MOV X20, X1
	0x034CD9BC MOV X19, X0
	0x034CD9C0 TBNZ X8, 0x0, 0x34CD9D8
	0x034CD9C4 ADRP X0, 0xC65000
	0x034CD9C8 LDR X0, [X0 + 0x328]
	0x034CD9CC BL 0x1C16CF4
	0x034CD9D0 MOVZ W8, 0x1
	0x034CD9D4 STRB W8, [X21 + 0x600]
	0x034CD9D8 LDR X0, [X22]
	0x034CD9DC LDR W8, [X0 + 0xE0]
	0x034CD9E0 CBNZ W8, 0x34CD9E8
	0x034CD9E4 BL 0x1C16DFC
	0x034CD9E8 MOV X0, X20
	0x034CD9EC BL 0x34B3DA8
	0x034CD9F0 MOV X1, X0
	0x034CD9F4 MOV X0, X19
	0x034CD9F8 LDP X20, X19, [X31 + 0x20]
	0x034CD9FC LDP X22, X21, [X31 + 0x10]
	0x034CDA00 LDR X30, [X31], #0x30
	0x034CDA04 B 0x34CDA08
	0x034CDA08 SUB X31, X31, 0x50
	0x034CDA0C STP X30, X21, [X31 + 0x30]
	0x034CDA10 STP X20, X19, [X31 + 0x40]
	0x034CDA14 ADRP X21, 0xF12000
	0x034CDA18 LDR X8, [X21 + 0x608]
	0x034CDA1C MOV X19, X1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1096]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43778048
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1230
	017 Move W11, 33
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1096], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_UserCapability_GetIsEnabled(System.IntPtr obj)

Disassembly:
	0x034CDA20 MOV X20, X0
	0x034CDA24 CBNZ X8, 0x34CDA70
	0x034CDA28 ADRP X12, 0xFFFFFFFFFD620000
	0x034CDA2C LDR V0, [X12 + 0x5B8]
	0x034CDA30 ADRP X8, 0xFFFFFFFFFD646000
	0x034CDA34 ADRP X10, 0xFFFFFFFFFD643000
	0x034CDA38 ADD X8, X8, 0xDD2
	0x034CDA3C MOVZ W9, 0x11
	0x034CDA40 ADD X10, X10, 0x618
	0x034CDA44 MOVZ W11, 0x1F
	0x034CDA48 MOVZ W13, 0x10
	0x034CDA4C ADD X0, X31, 0x0
	0x034CDA50 STP X8, X9, [X31]
	0x034CDA54 STP X10, X11, [X31 + 0x10]
	0x034CDA58 STR W13, [X31 + 0x28]
	0x034CDA5C STR D0, [X31 + 0x20]
	0x034CDA60 STRB W31, [X31 + 0x2C]
	0x034CDA64 BL 0x1C1729C
	0x034CDA68 MOV X8, X0
	0x034CDA6C STR X0, [X21 + 0x608]
	0x034CDA70 MOV X0, X20
	0x034CDA74 MOV X1, X19
	0x034CDA78 BLR X8
	0x034CDA7C LDP X20, X19, [X31 + 0x40]
	0x034CDA80 LDP X30, X21, [X31 + 0x30]
	0x034CDA84 ADD X31, X31, 0x50
	0x034CDA88 RET
	0x034CDA8C SUB X31, X31, 0x50
	0x034CDA90 STP X30, X21, [X31 + 0x30]
	0x034CDA94 STP X20, X19, [X31 + 0x40]
	0x034CDA98 ADRP X21, 0xF12000
	0x034CDA9C LDR X8, [X21 + 0x610]
	0x034CDAA0 MOV W19, W1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1104]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 984
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1104], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_UserCapability_GetName(System.IntPtr obj)

Disassembly:
	0x034CDAA4 MOV X20, X0
	0x034CDAA8 CBNZ X8, 0x34CDAF4
	0x034CDAAC ADRP X12, 0xFFFFFFFFFD620000
	0x034CDAB0 LDR V0, [X12 + 0x5B8]
	0x034CDAB4 ADRP X8, 0xFFFFFFFFFD646000
	0x034CDAB8 ADRP X10, 0xFFFFFFFFFD65C000
	0x034CDABC ADD X8, X8, 0xDD2
	0x034CDAC0 MOVZ W9, 0x11
	0x034CDAC4 ADD X10, X10, 0xE98
	0x034CDAC8 MOVZ W11, 0x2F
	0x034CDACC MOVZ W13, 0xC
	0x034CDAD0 ADD X0, X31, 0x0
	0x034CDAD4 STP X8, X9, [X31]
	0x034CDAD8 STP X10, X11, [X31 + 0x10]
	0x034CDADC STR W13, [X31 + 0x28]
	0x034CDAE0 STR D0, [X31 + 0x20]
	0x034CDAE4 STRB W31, [X31 + 0x2C]
	0x034CDAE8 BL 0x1C1729C
	0x034CDAEC MOV X8, X0
	0x034CDAF0 STR X0, [X21 + 0x610]
	0x034CDAF4 AND W1, W19, 0x1
	0x034CDAF8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+1112]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1112], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_UserCapability_GetName_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_UserCapability_GetName_Native(System.IntPtr obj)

Disassembly:
	0x034CDAFC BLR X8
	0x034CDB00 LDP X20, X19, [X31 + 0x40]
	0x034CDB04 LDP X30, X21, [X31 + 0x30]
	0x034CDB08 ADD X31, X31, 0x50
	0x034CDB0C RET
	0x034CDB10 SUB X31, X31, 0x50
	0x034CDB14 STP X30, X21, [X31 + 0x30]
	0x034CDB18 STP X20, X19, [X31 + 0x40]
	0x034CDB1C ADRP X21, 0xF12000
	0x034CDB20 LDR X8, [X21 + 0x618]
	0x034CDB24 MOV W19, W1
	0x034CDB28 MOV X20, X0
	0x034CDB2C CBNZ X8, 0x34CDB78
	0x034CDB30 ADRP X12, 0xFFFFFFFFFD620000
	0x034CDB34 LDR V0, [X12 + 0x5B8]
	0x034CDB38 ADRP X8, 0xFFFFFFFFFD646000
	0x034CDB3C ADRP X10, 0xFFFFFFFFFD63D000
	0x034CDB40 ADD X8, X8, 0xDD2
	0x034CDB44 MOVZ W9, 0x11
	0x034CDB48 ADD X10, X10, 0x8F5
	0x034CDB4C MOVZ W11, 0x2F
	0x034CDB50 MOVZ W13, 0xC
	0x034CDB54 ADD X0, X31, 0x0
	0x034CDB58 STP X8, X9, [X31]
	0x034CDB5C STP X10, X11, [X31 + 0x10]
	0x034CDB60 STR W13, [X31 + 0x28]
	0x034CDB64 STR D0, [X31 + 0x20]
	0x034CDB68 STRB W31, [X31 + 0x2C]
	0x034CDB6C BL 0x1C1729C
	0x034CDB70 MOV X8, X0
	0x034CDB74 STR X0, [X21 + 0x618]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1120]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1016
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1120], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.String ovr_UserCapability_GetReasonCode(System.IntPtr obj)

Disassembly:
	0x034CDB78 AND W1, W19, 0x1
	0x034CDB7C MOV X0, X20
	0x034CDB80 BLR X8
	0x034CDB84 LDP X20, X19, [X31 + 0x40]
	0x034CDB88 LDP X30, X21, [X31 + 0x30]
	0x034CDB8C ADD X31, X31, 0x50
	0x034CDB90 RET
	0x034CDB94 SUB X31, X31, 0x50
	0x034CDB98 STP X30, X21, [X31 + 0x30]
	0x034CDB9C STP X20, X19, [X31 + 0x40]
	0x034CDBA0 ADRP X21, 0xF12000
	0x034CDBA4 LDR X8, [X21 + 0x620]
	0x034CDBA8 MOV W19, W1
	0x034CDBAC MOV X20, X0
	0x034CDBB0 CBNZ X8, 0x34CDBFC
	0x034CDBB4 ADRP X12, 0xFFFFFFFFFD620000
	0x034CDBB8 LDR V0, [X12 + 0x5B8]
	0x034CDBBC ADRP X8, 0xFFFFFFFFFD646000
	0x034CDBC0 ADRP X10, 0xFFFFFFFFFD62F000
	0x034CDBC4 ADD X8, X8, 0xDD2
	0x034CDBC8 MOVZ W9, 0x11
	0x034CDBCC ADD X10, X10, 0x8D2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+1128]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1128], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_UserCapability_GetReasonCode_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_UserCapability_GetReasonCode_Native(System.IntPtr obj)

Disassembly:
	0x034CDBD0 MOVZ W11, 0x2D
	0x034CDBD4 MOVZ W13, 0xC
	0x034CDBD8 ADD X0, X31, 0x0
	0x034CDBDC STP X8, X9, [X31]
	0x034CDBE0 STP X10, X11, [X31 + 0x10]
	0x034CDBE4 STR W13, [X31 + 0x28]
	0x034CDBE8 STR D0, [X31 + 0x20]
	0x034CDBEC STRB W31, [X31 + 0x2C]
	0x034CDBF0 BL 0x1C1729C
	0x034CDBF4 MOV X8, X0
	0x034CDBF8 STR X0, [X21 + 0x620]
	0x034CDBFC AND W1, W19, 0x1
	0x034CDC00 MOV X0, X20
	0x034CDC04 BLR X8
	0x034CDC08 LDP X20, X19, [X31 + 0x40]
	0x034CDC0C LDP X30, X21, [X31 + 0x30]
	0x034CDC10 ADD X31, X31, 0x50
	0x034CDC14 RET
	0x034CDC18 STR X30, [X31 - 0x30]!
	0x034CDC1C STP X22, X21, [X31 + 0x10]
	0x034CDC20 STP X20, X19, [X31 + 0x20]
	0x034CDC24 ADRP X22, 0xF12000
	0x034CDC28 ADRP X21, 0xC65000
	0x034CDC2C LDRB W8, [X22 + 0x628]
	0x034CDC30 LDR X21, [X21 + 0x328]
	0x034CDC34 MOV X20, X1
	0x034CDC38 MOV X19, X0
	0x034CDC3C TBNZ X8, 0x0, 0x34CDC60
	0x034CDC40 ADRP X0, 0xC65000
	0x034CDC44 LDR X0, [X0 + 0x328]
	0x034CDC48 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1136]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43687936
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1507
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1136], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_UserCapabilityArray_GetElement(System.IntPtr obj, System.UIntPtr index)

Disassembly:
	0x034CDC4C ADRP X0, 0xC4E000
	0x034CDC50 LDR X0, [X0 + 0x850]
	0x034CDC54 BL 0x1C16CF4
	0x034CDC58 MOVZ W8, 0x1
	0x034CDC5C STRB W8, [X22 + 0x628]
	0x034CDC60 LDR X0, [X21]
	0x034CDC64 ADRP X21, 0xC4E000
	0x034CDC68 LDR W8, [X0 + 0xE0]
	0x034CDC6C LDR X21, [X21 + 0x850]
	0x034CDC70 CBNZ W8, 0x34CDC78
	0x034CDC74 BL 0x1C16DFC
	0x034CDC78 MOV X0, X20
	0x034CDC7C BL 0x34B404C
	0x034CDC80 MOV X20, X0
	0x034CDC84 MOV X0, X19
	0x034CDC88 MOV X1, X20
	0x034CDC8C BL 0x34CDCB8
	0x034CDC90 LDR X0, [X21]
	0x034CDC94 LDR W8, [X0 + 0xE0]
	0x034CDC98 CBNZ W8, 0x34CDCA0
	0x034CDC9C BL 0x1C16DFC
	0x034CDCA0 MOV X0, X20
	0x034CDCA4 LDP X20, X19, [X31 + 0x20]
	0x034CDCA8 LDP X22, X21, [X31 + 0x10]
	0x034CDCAC MOV X1, X31
	0x034CDCB0 LDR X30, [X31], #0x30
	0x034CDCB4 B 0x32C1060
	0x034CDCB8 SUB X31, X31, 0x50
	0x034CDCBC STP X30, X21, [X31 + 0x30]
	0x034CDCC0 STP X20, X19, [X31 + 0x40]
	0x034CDCC4 ADRP X21, 0xF12000
	0x034CDCC8 LDR X8, [X21 + 0x630]
	0x034CDCCC MOV X19, X1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF13000
	007 Move X8, [X21+1144]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43905024
	013 Move V0, [X12+1464]
	014 Move X8, -43749376
	015 Move X10, -43741184
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3615
	019 Move W11, 34
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1144], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ovr_UserCapabilityArray_GetNextUrl(System.IntPtr obj)

Disassembly:
	0x034CDCD0 MOV X20, X0
	0x034CDCD4 CBNZ X8, 0x34CDD20
	0x034CDCD8 ADRP X12, 0xFFFFFFFFFD620000
	0x034CDCDC LDR V0, [X12 + 0x5B8]
	0x034CDCE0 ADRP X8, 0xFFFFFFFFFD646000
	0x034CDCE4 ADRP X10, 0xFFFFFFFFFD633000
	0x034CDCE8 ADD X8, X8, 0xDD2
	0x034CDCEC MOVZ W9, 0x11
	0x034CDCF0 ADD X10, X10, 0x3C1
	0x034CDCF4 MOVZ W11, 0x27
	0x034CDCF8 MOVZ W13, 0x10
	0x034CDCFC ADD X0, X31, 0x0
	0x034CDD00 STP X8, X9, [X31]
	0x034CDD04 STP X10, X11, [X31 + 0x10]
	0x034CDD08 STR W13, [X31 + 0x28]
	0x034CDD0C STR D0, [X31 + 0x20]
	0x034CDD10 STRB W31, [X31 + 0x2C]
	0x034CDD14 BL 0x1C1729C
	0x034CDD18 MOV X8, X0
	0x034CDD1C STR X0, [X21 + 0x630]
	0x034CDD20 MOV X0, X20
	0x034CDD24 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+1152]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1152], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_UserCapabilityArray_GetNextUrl_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_UserCapabilityArray_GetNextUrl_Native(System.IntPtr obj)

Disassembly:
	0x034CDD28 BLR X8
	0x034CDD2C LDP X20, X19, [X31 + 0x40]
	0x034CDD30 LDP X30, X21, [X31 + 0x30]
	0x034CDD34 ADD X31, X31, 0x50
	0x034CDD38 RET
	0x034CDD3C STR X30, [X31 - 0x30]!
	0x034CDD40 STP X22, X21, [X31 + 0x10]
	0x034CDD44 STP X20, X19, [X31 + 0x20]
	0x034CDD48 ADRP X21, 0xF12000
	0x034CDD4C ADRP X22, 0xC65000
	0x034CDD50 LDRB W8, [X21 + 0x638]
	0x034CDD54 LDR X22, [X22 + 0x328]
	0x034CDD58 MOV X20, X1
	0x034CDD5C MOV X19, X0
	0x034CDD60 TBNZ X8, 0x0, 0x34CDD78
	0x034CDD64 ADRP X0, 0xC65000
	0x034CDD68 LDR X0, [X0 + 0x328]
	0x034CDD6C BL 0x1C16CF4
	0x034CDD70 MOVZ W8, 0x1
	0x034CDD74 STRB W8, [X21 + 0x638]
	0x034CDD78 LDR X0, [X22]
	0x034CDD7C LDR W8, [X0 + 0xE0]
	0x034CDD80 CBNZ W8, 0x34CDD88
	0x034CDD84 BL 0x1C16DFC
	0x034CDD88 MOV X0, X20
	0x034CDD8C BL 0x34B3DA8
	0x034CDD90 MOV X1, X0
	0x034CDD94 MOV X0, X19
	0x034CDD98 LDP X20, X19, [X31 + 0x20]
	0x034CDD9C LDP X22, X21, [X31 + 0x10]
	0x034CDDA0 LDR X30, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1160]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43659264
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3701
	017 Move W11, 34
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1160], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.UIntPtr ovr_UserCapabilityArray_GetSize(System.IntPtr obj)

Disassembly:
	0x034CDDA4 B 0x34CDDA8
	0x034CDDA8 SUB X31, X31, 0x50
	0x034CDDAC STP X30, X21, [X31 + 0x30]
	0x034CDDB0 STP X20, X19, [X31 + 0x40]
	0x034CDDB4 ADRP X21, 0xF12000
	0x034CDDB8 LDR X8, [X21 + 0x640]
	0x034CDDBC MOV X19, X1
	0x034CDDC0 MOV X20, X0
	0x034CDDC4 CBNZ X8, 0x34CDE10
	0x034CDDC8 ADRP X12, 0xFFFFFFFFFD620000
	0x034CDDCC LDR V0, [X12 + 0x5B8]
	0x034CDDD0 ADRP X8, 0xFFFFFFFFFD646000
	0x034CDDD4 ADRP X10, 0xFFFFFFFFFD653000
	0x034CDDD8 ADD X8, X8, 0xDD2
	0x034CDDDC MOVZ W9, 0x11
	0x034CDDE0 ADD X10, X10, 0x2C8
	0x034CDDE4 MOVZ W11, 0x21
	0x034CDDE8 MOVZ W13, 0x10
	0x034CDDEC ADD X0, X31, 0x0
	0x034CDDF0 STP X8, X9, [X31]
	0x034CDDF4 STP X10, X11, [X31 + 0x10]
	0x034CDDF8 STR W13, [X31 + 0x28]
	0x034CDDFC STR D0, [X31 + 0x20]
	0x034CDE00 STRB W31, [X31 + 0x2C]
	0x034CDE04 BL 0x1C1729C
	0x034CDE08 MOV X8, X0
	0x034CDE0C STR X0, [X21 + 0x640]
	0x034CDE10 MOV X0, X20
	0x034CDE14 MOV X1, X19
	0x034CDE18 BLR X8
	0x034CDE1C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1168]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43651072
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3470
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1168], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_UserCapabilityArray_HasNextPage(System.IntPtr obj)

Disassembly:
	0x034CDE20 LDP X30, X21, [X31 + 0x30]
	0x034CDE24 ADD X31, X31, 0x50
	0x034CDE28 RET
	0x034CDE2C STR X30, [X31 - 0x30]!
	0x034CDE30 STP X22, X21, [X31 + 0x10]
	0x034CDE34 STP X20, X19, [X31 + 0x20]
	0x034CDE38 ADRP X22, 0xF12000
	0x034CDE3C ADRP X21, 0xC65000
	0x034CDE40 LDRB W8, [X22 + 0x648]
	0x034CDE44 LDR X21, [X21 + 0x328]
	0x034CDE48 MOV X20, X1
	0x034CDE4C MOV X19, X0
	0x034CDE50 TBNZ X8, 0x0, 0x34CDE74
	0x034CDE54 ADRP X0, 0xC65000
	0x034CDE58 LDR X0, [X0 + 0x328]
	0x034CDE5C BL 0x1C16CF4
	0x034CDE60 ADRP X0, 0xC4E000
	0x034CDE64 LDR X0, [X0 + 0x850]
	0x034CDE68 BL 0x1C16CF4
	0x034CDE6C MOVZ W8, 0x1
	0x034CDE70 STRB W8, [X22 + 0x648]
	0x034CDE74 LDR X0, [X21]
	0x034CDE78 ADRP X21, 0xC4E000
	0x034CDE7C LDR W8, [X0 + 0xE0]
	0x034CDE80 LDR X21, [X21 + 0x850]
	0x034CDE84 CBNZ W8, 0x34CDE8C
	0x034CDE88 BL 0x1C16DFC
	0x034CDE8C MOV X0, X20
	0x034CDE90 BL 0x34B404C
	0x034CDE94 MOV X20, X0
	0x034CDE98 MOV X0, X19
	0x034CDE9C MOV X1, X20
	0x034CDEA0 BL 0x34CDECC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1176]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1494
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1176], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.Boolean ovr_UserDataStoreUpdateResponse_GetSuccess(System.IntPtr obj)

Disassembly:
	0x034CDEA4 LDR X0, [X21]
	0x034CDEA8 LDR W8, [X0 + 0xE0]
	0x034CDEAC CBNZ W8, 0x34CDEB4
	0x034CDEB0 BL 0x1C16DFC
	0x034CDEB4 MOV X0, X20
	0x034CDEB8 LDP X20, X19, [X31 + 0x20]
	0x034CDEBC LDP X22, X21, [X31 + 0x10]
	0x034CDEC0 MOV X1, X31
	0x034CDEC4 LDR X30, [X31], #0x30
	0x034CDEC8 B 0x32C1060
	0x034CDECC SUB X31, X31, 0x50
	0x034CDED0 STP X30, X21, [X31 + 0x30]
	0x034CDED4 STP X20, X19, [X31 + 0x40]
	0x034CDED8 ADRP X21, 0xF12000
	0x034CDEDC LDR X8, [X21 + 0x650]
	0x034CDEE0 MOV X19, X1
	0x034CDEE4 MOV X20, X0
	0x034CDEE8 CBNZ X8, 0x34CDF34
	0x034CDEEC ADRP X12, 0xFFFFFFFFFD620000
	0x034CDEF0 LDR V0, [X12 + 0x5B8]
	0x034CDEF4 ADRP X8, 0xFFFFFFFFFD646000
	0x034CDEF8 ADRP X10, 0xFFFFFFFFFD645000
	0x034CDEFC ADD X8, X8, 0xDD2
	0x034CDF00 MOVZ W9, 0x11
	0x034CDF04 ADD X10, X10, 0x246
	0x034CDF08 MOVZ W11, 0x1D
	0x034CDF0C MOVZ W13, 0x10
	0x034CDF10 ADD X0, X31, 0x0
	0x034CDF14 STP X8, X9, [X31]
	0x034CDF18 STP X10, X11, [X31 + 0x10]
	0x034CDF1C STR W13, [X31 + 0x28]
	0x034CDF20 STR D0, [X31 + 0x20]
	0x034CDF24 STRB W31, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1184]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43819008
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1043
	017 Move W11, 42
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1184], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.String ovr_UserProof_GetNonce(System.IntPtr obj)

Disassembly:
	0x034CDF28 BL 0x1C1729C
	0x034CDF2C MOV X8, X0
	0x034CDF30 STR X0, [X21 + 0x650]
	0x034CDF34 MOV X0, X20
	0x034CDF38 MOV X1, X19
	0x034CDF3C BLR X8
	0x034CDF40 LDP X20, X19, [X31 + 0x40]
	0x034CDF44 LDP X30, X21, [X31 + 0x30]
	0x034CDF48 ADD X31, X31, 0x50
	0x034CDF4C RET
	0x034CDF50 SUB X31, X31, 0x50
	0x034CDF54 STP X30, X21, [X31 + 0x30]
	0x034CDF58 STP X20, X19, [X31 + 0x40]
	0x034CDF5C ADRP X21, 0xF12000
	0x034CDF60 LDR X8, [X21 + 0x658]
	0x034CDF64 MOV W19, W1
	0x034CDF68 MOV X20, X0
	0x034CDF6C CBNZ X8, 0x34CDFB8
	0x034CDF70 ADRP X12, 0xFFFFFFFFFD620000
	0x034CDF74 LDR V0, [X12 + 0x5B8]
	0x034CDF78 ADRP X8, 0xFFFFFFFFFD646000
	0x034CDF7C ADRP X10, 0xFFFFFFFFFD623000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF13000
	006 Move X21, 0xC66000
	007 Move W8, [X20+1192]
	008 Move X21, [X21+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC66000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1192], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call CAPI.ovr_UserProof_GetNonce_Native, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.StringFromNative, X0
	031 Return X0

Method: System.IntPtr ovr_UserProof_GetNonce_Native(System.IntPtr obj)

Disassembly:
	0x034CDF80 ADD X8, X8, 0xDD2
	0x034CDF84 MOVZ W9, 0x11
	0x034CDF88 ADD X10, X10, 0x3E7
	0x034CDF8C MOVZ W11, 0x24
	0x034CDF90 MOVZ W13, 0xC
	0x034CDF94 ADD X0, X31, 0x0
	0x034CDF98 STP X8, X9, [X31]
	0x034CDF9C STP X10, X11, [X31 + 0x10]
	0x034CDFA0 STR W13, [X31 + 0x28]
	0x034CDFA4 STR D0, [X31 + 0x20]
	0x034CDFA8 STRB W31, [X31 + 0x2C]
	0x034CDFAC BL 0x1C1729C
	0x034CDFB0 MOV X8, X0
	0x034CDFB4 STR X0, [X21 + 0x658]
	0x034CDFB8 MOV X0, X20
	0x034CDFBC MOV W1, W19
	0x034CDFC0 BLR X8
	0x034CDFC4 LDP X20, X19, [X31 + 0x40]
	0x034CDFC8 LDP X30, X21, [X31 + 0x30]
	0x034CDFCC ADD X31, X31, 0x50
	0x034CDFD0 RET
	0x034CDFD4 SUB X31, X31, 0x50
	0x034CDFD8 STP X30, X21, [X31 + 0x30]
	0x034CDFDC STP X20, X19, [X31 + 0x40]
	0x034CDFE0 ADRP X21, 0xF12000
	0x034CDFE4 LDR X8, [X21 + 0x660]
	0x034CDFE8 MOV W19, W1
	0x034CDFEC MOV X20, X0
	0x034CDFF0 CBNZ X8, 0x34CE03C
	0x034CDFF4 ADRP X12, 0xFFFFFFFFFD620000
	0x034CDFF8 LDR V0, [X12 + 0x5B8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF13000
	006 Move X8, [X20+1200]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43905024
	011 Move V0, [X12+1464]
	012 Move X8, -43749376
	013 Move X10, -43794432
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1740
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1200], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean ovr_UserReportID_GetDidCancel(System.IntPtr obj)

Disassembly:
	0x034CDFFC ADRP X8, 0xFFFFFFFFFD646000
	0x034CE000 ADRP X10, 0xFFFFFFFFFD63A000
	0x034CE004 ADD X8, X8, 0xDD2
	0x034CE008 MOVZ W9, 0x11
	0x034CE00C ADD X10, X10, 0x709
	0x034CE010 MOVZ W11, 0x22
	0x034CE014 MOVZ W13, 0xC
	0x034CE018 ADD X0, X31, 0x0
	0x034CE01C STP X8, X9, [X31]
	0x034CE020 STP X10, X11, [X31 + 0x10]
	0x034CE024 STR W13, [X31 + 0x28]
	0x034CE028 STR D0, [X31 + 0x20]
	0x034CE02C STRB W31, [X31 + 0x2C]
	0x034CE030 BL 0x1C1729C
	0x034CE034 MOV X8, X0
	0x034CE038 STR X0, [X21 + 0x660]
	0x034CE03C MOV X0, X20
	0x034CE040 MOV W1, W19
	0x034CE044 BLR X8
	0x034CE048 LDP X20, X19, [X31 + 0x40]
	0x034CE04C LDP X30, X21, [X31 + 0x30]
	0x034CE050 ADD X31, X31, 0x50
	0x034CE054 RET
	0x034CE058 SUB X31, X31, 0x40
	0x034CE05C STP X30, X19, [X31 + 0x30]
	0x034CE060 ADRP X19, 0xF11000
	0x034CE064 LDR X8, [X19 + 0x668]
	0x034CE068 CBNZ X8, 0x34CE0B0
	0x034CE06C ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE070 LDR V0, [X12 + 0x5B8]
	0x034CE074 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE078 ADRP X10, 0xFFFFFFFFFD645000
	0x034CE07C ADD X8, X8, 0xDD2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF12000
	006 Move X8, [X20+1208]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43909120
	011 Move V0, [X12+1464]
	012 Move X8, -43753472
	013 Move X10, -43855872
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2553
	017 Move W11, 29
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1208], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X31, X31, 80
	038 Return X0

Method: System.UInt64 ovr_UserReportID_GetID(System.IntPtr obj)

Disassembly:
	0x034CE080 MOVZ W9, 0x11
	0x034CE084 ADD X10, X10, 0xF79
	0x034CE088 MOVZ W11, 0x1F
	0x034CE08C ADD X0, X31, 0x0
	0x034CE090 STR W31, [X31 + 0x28]
	0x034CE094 STP X8, X9, [X31]
	0x034CE098 STP X10, X11, [X31 + 0x10]
	0x034CE09C STR D0, [X31 + 0x20]
	0x034CE0A0 STRB W31, [X31 + 0x2C]
	0x034CE0A4 BL 0x1C1729C
	0x034CE0A8 MOV X8, X0
	0x034CE0AC STR X0, [X19 + 0x668]
	0x034CE0B0 BLR X8
	0x034CE0B4 LDP X30, X19, [X31 + 0x30]
	0x034CE0B8 ADD X31, X31, 0x40
	0x034CE0BC RET
	0x034CE0C0 SUB X31, X31, 0x50
	0x034CE0C4 STR X30, [X31 + 0x30]
	0x034CE0C8 STP X20, X19, [X31 + 0x40]
	0x034CE0CC ADRP X20, 0xF11000
	0x034CE0D0 LDR X8, [X20 + 0x670]
	0x034CE0D4 MOV X19, X0
	0x034CE0D8 CBNZ X8, 0x34CE124
	0x034CE0DC ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE0E0 LDR V0, [X12 + 0x5B8]
	0x034CE0E4 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE0E8 ADRP X10, 0xFFFFFFFFFD62A000
	0x034CE0EC ADD X8, X8, 0xDD2
	0x034CE0F0 MOVZ W9, 0x11
	0x034CE0F4 ADD X10, X10, 0x82D
	0x034CE0F8 MOVZ W11, 0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF12000
	006 Move X8, [X20+1216]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43909120
	011 Move V0, [X12+1464]
	012 Move X8, -43753472
	013 Move X10, -43708416
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 192
	017 Move W11, 22
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1216], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UIntPtr compressedSize)

Disassembly:
	0x034CE0FC MOVZ W13, 0x8
	0x034CE100 ADD X0, X31, 0x0
	0x034CE104 STP X8, X9, [X31]
	0x034CE108 STP X10, X11, [X31 + 0x10]
	0x034CE10C STR W13, [X31 + 0x28]
	0x034CE110 STR D0, [X31 + 0x20]
	0x034CE114 STRB W31, [X31 + 0x2C]
	0x034CE118 BL 0x1C1729C
	0x034CE11C MOV X8, X0
	0x034CE120 STR X0, [X20 + 0x670]
	0x034CE124 MOV X0, X19
	0x034CE128 BLR X8
	0x034CE12C LDP X20, X19, [X31 + 0x40]
	0x034CE130 LDR X30, [X31 + 0x30]
	0x034CE134 ADD X31, X31, 0x50
	0x034CE138 RET
	0x034CE13C STR X30, [X31 - 0x30]!
	0x034CE140 STP X22, X21, [X31 + 0x10]
	0x034CE144 STP X20, X19, [X31 + 0x20]
	0x034CE148 ADRP X22, 0xF11000
	0x034CE14C ADRP X21, 0xC64000
	0x034CE150 LDRB W8, [X22 + 0x678]
	0x034CE154 LDR X21, [X21 + 0x328]
	0x034CE158 MOV X20, X1
	0x034CE15C MOV X19, X0
	0x034CE160 TBNZ X8, 0x0, 0x34CE184
	0x034CE164 ADRP X0, 0xC64000
	0x034CE168 LDR X0, [X0 + 0x328]
	0x034CE16C BL 0x1C16CF4
	0x034CE170 ADRP X0, 0xC4D000
	0x034CE174 LDR X0, [X0 + 0x850]
	0x034CE178 BL 0x1C16CF4
	0x034CE17C MOVZ W8, 0x1
	0x034CE180 STRB W8, [X22 + 0x678]
	0x034CE184 LDR X0, [X21]
	0x034CE188 ADRP X21, 0xC4D000
	0x034CE18C LDR W8, [X0 + 0xE0]
	0x034CE190 LDR X21, [X21 + 0x850]
	0x034CE194 CBNZ W8, 0x34CE19C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF12000
	008 Move X8, [X22+1224]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43909120
	015 Move V0, [X12+1464]
	016 Move X8, -43753472
	017 Move X10, -43671552
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 2908
	021 Move W11, 22
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+1224], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return 

Method: System.UIntPtr ovr_VoipDecoder_GetDecodedPCM(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)

Disassembly:
	0x034CE198 BL 0x1C16DFC
	0x034CE19C MOV X0, X20
	0x034CE1A0 BL 0x34B404C
	0x034CE1A4 MOV X20, X0
	0x034CE1A8 MOV X0, X19
	0x034CE1AC MOV X1, X20
	0x034CE1B0 BL 0x34CE1DC
	0x034CE1B4 LDR X0, [X21]
	0x034CE1B8 LDR W8, [X0 + 0xE0]
	0x034CE1BC CBNZ W8, 0x34CE1C4
	0x034CE1C0 BL 0x1C16DFC
	0x034CE1C4 MOV X0, X20
	0x034CE1C8 LDP X20, X19, [X31 + 0x20]
	0x034CE1CC LDP X22, X21, [X31 + 0x10]
	0x034CE1D0 MOV X1, X31
	0x034CE1D4 LDR X30, [X31], #0x30
	0x034CE1D8 B 0x32C1060
	0x034CE1DC SUB X31, X31, 0x50
	0x034CE1E0 STP X30, X21, [X31 + 0x30]
	0x034CE1E4 STP X20, X19, [X31 + 0x40]
	0x034CE1E8 ADRP X21, 0xF11000
	0x034CE1EC LDR X8, [X21 + 0x680]
	0x034CE1F0 MOV X19, X1
	0x034CE1F4 MOV X20, X0
	0x034CE1F8 CBNZ X8, 0x34CE244
	0x034CE1FC ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE200 LDR V0, [X12 + 0x5B8]
	0x034CE204 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE208 ADRP X10, 0xFFFFFFFFFD62E000
	0x034CE20C ADD X8, X8, 0xDD2
	0x034CE210 MOVZ W9, 0x11
	0x034CE214 ADD X10, X10, 0x900
	0x034CE218 MOVZ W11, 0x33
	0x034CE21C MOVZ W13, 0x10
	0x034CE220 ADD X0, X31, 0x0
	0x034CE224 STP X8, X9, [X31]
	0x034CE228 STP X10, X11, [X31 + 0x10]
	0x034CE22C STR W13, [X31 + 0x28]
	0x034CE230 STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF12000
	008 Move X8, [X22+1232]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43909120
	015 Move V0, [X12+1464]
	016 Move X8, -43753472
	017 Move X10, -43888640
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 2160
	021 Move W11, 29
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+1232], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.Void ovr_VoipEncoder_AddPCM(System.IntPtr obj, System.Single[] inputData, System.UInt32 inputSize)

Disassembly:
	0x034CE234 STRB W31, [X31 + 0x2C]
	0x034CE238 BL 0x1C1729C
	0x034CE23C MOV X8, X0
	0x034CE240 STR X0, [X21 + 0x680]
	0x034CE244 MOV X0, X20
	0x034CE248 MOV X1, X19
	0x034CE24C BLR X8
	0x034CE250 LDP X20, X19, [X31 + 0x40]
	0x034CE254 LDP X30, X21, [X31 + 0x30]
	0x034CE258 ADD X31, X31, 0x50
	0x034CE25C RET
	0x034CE260 STR X30, [X31 - 0x30]!
	0x034CE264 STP X22, X21, [X31 + 0x10]
	0x034CE268 STP X20, X19, [X31 + 0x20]
	0x034CE26C ADRP X22, 0xF11000
	0x034CE270 ADRP X21, 0xC64000
	0x034CE274 LDRB W8, [X22 + 0x688]
	0x034CE278 LDR X21, [X21 + 0x328]
	0x034CE27C MOV X20, X1
	0x034CE280 MOV X19, X0
	0x034CE284 TBNZ X8, 0x0, 0x34CE2A8
	0x034CE288 ADRP X0, 0xC64000
	0x034CE28C LDR X0, [X0 + 0x328]
	0x034CE290 BL 0x1C16CF4
	0x034CE294 ADRP X0, 0xC4D000
	0x034CE298 LDR X0, [X0 + 0x850]
	0x034CE29C BL 0x1C16CF4
	0x034CE2A0 MOVZ W8, 0x1
	0x034CE2A4 STRB W8, [X22 + 0x688]
	0x034CE2A8 LDR X0, [X21]
	0x034CE2AC ADRP X21, 0xC4D000
	0x034CE2B0 LDR W8, [X0 + 0xE0]
	0x034CE2B4 LDR X21, [X21 + 0x850]
	0x034CE2B8 CBNZ W8, 0x34CE2C0
	0x034CE2BC BL 0x1C16DFC
	0x034CE2C0 MOV X0, X20
	0x034CE2C4 BL 0x34B404C
	0x034CE2C8 MOV X20, X0
	0x034CE2CC MOV X0, X19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF12000
	008 Move X8, [X22+1240]
	009 Move W19, W2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43909120
	015 Move V0, [X12+1464]
	016 Move X8, -43753472
	017 Move X10, -43896832
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 976
	021 Move W11, 22
	022 Move W13, 20
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+1240], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move W2, W19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return 

Method: System.UIntPtr ovr_VoipEncoder_GetCompressedData(System.IntPtr obj, System.Byte[] outputBuffer, System.UIntPtr intputSize)

Disassembly:
	0x034CE2D0 MOV X1, X20
	0x034CE2D4 BL 0x34CE300
	0x034CE2D8 LDR X0, [X21]
	0x034CE2DC LDR W8, [X0 + 0xE0]
	0x034CE2E0 CBNZ W8, 0x34CE2E8
	0x034CE2E4 BL 0x1C16DFC
	0x034CE2E8 MOV X0, X20
	0x034CE2EC LDP X20, X19, [X31 + 0x20]
	0x034CE2F0 LDP X22, X21, [X31 + 0x10]
	0x034CE2F4 MOV X1, X31
	0x034CE2F8 LDR X30, [X31], #0x30
	0x034CE2FC B 0x32C1060
	0x034CE300 SUB X31, X31, 0x50
	0x034CE304 STP X30, X21, [X31 + 0x30]
	0x034CE308 STP X20, X19, [X31 + 0x40]
	0x034CE30C ADRP X21, 0xF11000
	0x034CE310 LDR X8, [X21 + 0x690]
	0x034CE314 MOV X19, X1
	0x034CE318 MOV X20, X0
	0x034CE31C CBNZ X8, 0x34CE368
	0x034CE320 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE324 LDR V0, [X12 + 0x5B8]
	0x034CE328 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE32C ADRP X10, 0xFFFFFFFFFD644000
	0x034CE330 ADD X8, X8, 0xDD2
	0x034CE334 MOVZ W9, 0x11
	0x034CE338 ADD X10, X10, 0x264
	0x034CE33C MOVZ W11, 0x2E
	0x034CE340 MOVZ W13, 0x10
	0x034CE344 ADD X0, X31, 0x0
	0x034CE348 STP X8, X9, [X31]
	0x034CE34C STP X10, X11, [X31 + 0x10]
	0x034CE350 STR W13, [X31 + 0x28]
	0x034CE354 STR D0, [X31 + 0x20]
	0x034CE358 STRB W31, [X31 + 0x2C]
	0x034CE35C BL 0x1C1729C
	0x034CE360 MOV X8, X0
	0x034CE364 STR X0, [X21 + 0x690]
	0x034CE368 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF12000
	008 Move X8, [X22+1248]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43909120
	015 Move V0, [X12+1464]
	016 Move X8, -43753472
	017 Move X10, -43790336
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 2259
	021 Move W11, 33
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+1248], X0
	034 Add X9, X21, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X0, X20
	038 Move X2, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X30, [X31+48]
	045 Add X31, X31, 96
	046 Return X0

Method: System.UIntPtr ovr_VoipEncoder_GetCompressedDataSize(System.IntPtr obj)

Disassembly:
	0x034CE36C MOV X1, X19
	0x034CE370 BLR X8
	0x034CE374 LDP X20, X19, [X31 + 0x40]
	0x034CE378 LDP X30, X21, [X31 + 0x30]
	0x034CE37C ADD X31, X31, 0x50
	0x034CE380 RET
	0x034CE384 SUB X31, X31, 0x50
	0x034CE388 STP X30, X21, [X31 + 0x30]
	0x034CE38C STP X20, X19, [X31 + 0x40]
	0x034CE390 ADRP X21, 0xF11000
	0x034CE394 LDR X8, [X21 + 0x698]
	0x034CE398 MOV W19, W1
	0x034CE39C MOV X20, X0
	0x034CE3A0 CBNZ X8, 0x34CE3EC
	0x034CE3A4 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE3A8 LDR V0, [X12 + 0x5B8]
	0x034CE3AC ADRP X8, 0xFFFFFFFFFD645000
	0x034CE3B0 ADRP X10, 0xFFFFFFFFFD634000
	0x034CE3B4 ADD X8, X8, 0xDD2
	0x034CE3B8 MOVZ W9, 0x11
	0x034CE3BC ADD X10, X10, 0x463
	0x034CE3C0 MOVZ W11, 0x26
	0x034CE3C4 MOVZ W13, 0xC
	0x034CE3C8 ADD X0, X31, 0x0
	0x034CE3CC STP X8, X9, [X31]
	0x034CE3D0 STP X10, X11, [X31 + 0x10]
	0x034CE3D4 STR W13, [X31 + 0x28]
	0x034CE3D8 STR D0, [X31 + 0x20]
	0x034CE3DC STRB W31, [X31 + 0x2C]
	0x034CE3E0 BL 0x1C1729C
	0x034CE3E4 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF12000
	006 Move X8, [X20+1256]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43909120
	011 Move V0, [X12+1464]
	012 Move X8, -43753472
	013 Move X10, -43798528
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1763
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1256], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return X0

Method: System.IntPtr ovr_AbuseReportOptions_Create()

Disassembly:
	0x034B1AA8 BLR X8
	0x034B1AAC LDP X30, X19, [X31 + 0x30]
	0x034B1AB0 ADD X31, X31, 0x40
	0x034B1AB4 RET
	0x034B1AB8 STR X30, [X31 - 0x30]!
	0x034B1ABC STP X22, X21, [X31 + 0x10]
	0x034B1AC0 STP X20, X19, [X31 + 0x20]
	0x034B1AC4 ADRP X22, 0xF2C000
	0x034B1AC8 ADRP X21, 0xC81000
	0x034B1ACC LDRB W8, [X22 + 0xB4C]
	0x034B1AD0 LDR X21, [X21 + 0x328]
	0x034B1AD4 MOV X19, X1
	0x034B1AD8 MOV X20, X0
	0x034B1ADC TBNZ X8, 0x0, 0x34B1AF4
	0x034B1AE0 ADRP X0, 0xC81000
	0x034B1AE4 LDR X0, [X0 + 0x328]
	0x034B1AE8 BL 0x1C16CF4
	0x034B1AEC MOVZ W8, 0x1
	0x034B1AF0 STRB W8, [X22 + 0xB4C]
	0x034B1AF4 LDR X0, [X21]
	0x034B1AF8 LDR X20, [X20 + 0x10]
	0x034B1AFC LDR W8, [X0 + 0xE0]
	0x034B1B00 CBNZ W8, 0x34B1B08
	0x034B1B04 BL 0x1C16DFC
	0x034B1B08 MOV X0, X20
	0x034B1B0C MOV X1, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF2F000
	005 Move X8, [X19+1264]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43790336
	009 Move V0, [X12+1464]
	010 Move X8, -43634688
	011 Move X10, -43646976
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1530
	015 Move W11, 29
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1264], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_AbuseReportOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034B1DC8 LDR X30, [X31], #0x30
	0x034B1DCC B 0x32C1060
	0x034B1DD0 STR X30, [X31 - 0x30]!
	0x034B1DD4 STP X22, X21, [X31 + 0x10]
	0x034B1DD8 STP X20, X19, [X31 + 0x20]
	0x034B1DDC ADRP X22, 0xF2C000
	0x034B1DE0 ADRP X21, 0xC81000
	0x034B1DE4 LDRB W8, [X22 + 0xB4F]
	0x034B1DE8 LDR X21, [X21 + 0x328]
	0x034B1DEC MOV X19, X1
	0x034B1DF0 MOV X20, X0
	0x034B1DF4 TBNZ X8, 0x0, 0x34B1E0C
	0x034B1DF8 ADRP X0, 0xC81000
	0x034B1DFC LDR X0, [X0 + 0x328]
	0x034B1E00 BL 0x1C16CF4
	0x034B1E04 MOVZ W8, 0x1
	0x034B1E08 STRB W8, [X22 + 0xB4F]
	0x034B1E0C LDR X0, [X21]
	0x034B1E10 LDR X20, [X20 + 0x10]
	0x034B1E14 LDR W8, [X0 + 0xE0]
	0x034B1E18 CBNZ W8, 0x34B1E20
	0x034B1E1C BL 0x1C16DFC
	0x034B1E20 MOV X0, X20
	0x034B1E24 MOV X1, X19
	0x034B1E28 LDP X20, X19, [X31 + 0x20]
	0x034B1E2C LDP X22, X21, [X31 + 0x10]
	0x034B1E30 LDR X30, [X31], #0x30
	0x034B1E34 B 0x34B1E38
	0x034B1E38 STR X30, [X31 - 0x30]!
	0x034B1E3C STP X22, X21, [X31 + 0x10]
	0x034B1E40 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF2F000
	006 Move X8, [X20+1272]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43790336
	011 Move V0, [X12+1464]
	012 Move X8, -43634688
	013 Move X10, -43737088
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2583
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1272], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_AbuseReportOptions_SetPreventPeopleChooser(System.IntPtr handle, System.Boolean value)

Disassembly:
	0x034B1B78 CBNZ W8, 0x34B1B80
	0x034B1B7C BL 0x1C16DFC
	0x034B1B80 MOV X0, X20
	0x034B1B84 BL 0x34B404C
	0x034B1B88 MOV X20, X0
	0x034B1B8C MOV X0, X19
	0x034B1B90 MOV X1, X20
	0x034B1B94 BL 0x34CD500
	0x034B1B98 LDR X0, [X21]
	0x034B1B9C LDR W8, [X0 + 0xE0]
	0x034B1BA0 CBNZ W8, 0x34B1BA8
	0x034B1BA4 BL 0x1C16DFC
	0x034B1BA8 MOV X0, X20
	0x034B1BAC LDP X20, X19, [X31 + 0x20]
	0x034B1BB0 LDP X22, X21, [X31 + 0x10]
	0x034B1BB4 MOV X1, X31
	0x034B1BB8 LDR X30, [X31], #0x30
	0x034B1BBC B 0x32C1060
	0x034B1BC0 STR X30, [X31 - 0x30]!
	0x034B1BC4 STP X22, X21, [X31 + 0x10]
	0x034B1BC8 STP X20, X19, [X31 + 0x20]
	0x034B1BCC ADRP X22, 0xF2C000
	0x034B1BD0 ADRP X21, 0xC81000
	0x034B1BD4 LDRB W8, [X22 + 0xB4D]
	0x034B1BD8 LDR X21, [X21 + 0x328]
	0x034B1BDC MOV X19, X1
	0x034B1BE0 MOV X20, X0
	0x034B1BE4 TBNZ X8, 0x0, 0x34B1BFC
	0x034B1BE8 ADRP X0, 0xC81000
	0x034B1BEC LDR X0, [X0 + 0x328]
	0x034B1BF0 BL 0x1C16CF4
	0x034B1BF4 MOVZ W8, 0x1
	0x034B1BF8 STRB W8, [X22 + 0xB4D]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF2F000
	007 Move X8, [X21+1280]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43790336
	013 Move V0, [X12+1464]
	014 Move X8, -43634688
	015 Move X10, -43610112
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3990
	019 Move W11, 46
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1280], X0
	032 And W1, W19, 1
	033 Move X0, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_AbuseReportOptions_SetReportType(System.IntPtr handle, Oculus.Platform.AbuseReportType value)

Disassembly:
	0x034B1C64 BL 0x1C16CF4
	0x034B1C68 MOVZ W8, 0x1
	0x034B1C6C STRB W8, [X22 + 0x588]
	0x034B1C70 LDR X0, [X21]
	0x034B1C74 ADRP X21, 0xC6A000
	0x034B1C78 LDR W8, [X0 + 0xE0]
	0x034B1C7C LDR X21, [X21 + 0x850]
	0x034B1C80 CBNZ W8, 0x34B1C88
	0x034B1C84 BL 0x1C16DFC
	0x034B1C88 MOV X0, X20
	0x034B1C8C BL 0x34B404C
	0x034B1C90 MOV X20, X0
	0x034B1C94 MOV X0, X19
	0x034B1C98 MOV X1, X20
	0x034B1C9C BL 0x34CD584
	0x034B1CA0 LDR X0, [X21]
	0x034B1CA4 LDR W8, [X0 + 0xE0]
	0x034B1CA8 CBNZ W8, 0x34B1CB0
	0x034B1CAC BL 0x1C16DFC
	0x034B1CB0 MOV X0, X20
	0x034B1CB4 LDP X20, X19, [X31 + 0x20]
	0x034B1CB8 LDP X22, X21, [X31 + 0x10]
	0x034B1CBC MOV X1, X31
	0x034B1CC0 LDR X30, [X31], #0x30
	0x034B1CC4 B 0x32C1060
	0x034B1CC8 STR X30, [X31 - 0x30]!
	0x034B1CCC STP X22, X21, [X31 + 0x10]
	0x034B1CD0 STP X20, X19, [X31 + 0x20]
	0x034B1CD4 ADRP X22, 0xF2C000
	0x034B1CD8 ADRP X21, 0xC81000
	0x034B1CDC LDRB W8, [X22 + 0xB4E]
	0x034B1CE0 LDR X21, [X21 + 0x328]
	0x034B1CE4 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF2F000
	007 Move X8, [X21+1288]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43790336
	013 Move V0, [X12+1464]
	014 Move X8, -43634688
	015 Move X10, -43704320
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1086
	019 Move W11, 36
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1288], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_AdvancedAbuseReportOptions_Create()

Disassembly:
	0x034B1EA8 MOV X1, X20
	0x034B1EAC BL 0x34CD68C
	0x034B1EB0 LDR X0, [X21]
	0x034B1EB4 LDR W8, [X0 + 0xE0]
	0x034B1EB8 CBNZ W8, 0x34B1EC0
	0x034B1EBC BL 0x1C16DFC
	0x034B1EC0 MOV X0, X20
	0x034B1EC4 LDP X20, X19, [X31 + 0x20]
	0x034B1EC8 LDP X22, X21, [X31 + 0x10]
	0x034B1ECC MOV X1, X31
	0x034B1ED0 LDR X30, [X31], #0x30
	0x034B1ED4 B 0x32C1060
	0x034B1ED8 STR X30, [X31 - 0x30]!
	0x034B1EDC STP X22, X21, [X31 + 0x10]
	0x034B1EE0 STP X20, X19, [X31 + 0x20]
	0x034B1EE4 ADRP X22, 0xF2C000
	0x034B1EE8 ADRP X21, 0xC81000
	0x034B1EEC LDRB W8, [X22 + 0xB50]
	0x034B1EF0 LDR X21, [X21 + 0x328]
	0x034B1EF4 MOV X19, X1
	0x034B1EF8 MOV X20, X0
	0x034B1EFC TBNZ X8, 0x0, 0x34B1F14
	0x034B1F00 ADRP X0, 0xC81000
	0x034B1F04 LDR X0, [X0 + 0x328]
	0x034B1F08 BL 0x1C16CF4
	0x034B1F0C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF2F000
	005 Move X8, [X19+1296]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43790336
	009 Move V0, [X12+1464]
	010 Move X8, -43634688
	011 Move X10, -43638784
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 480
	015 Move W11, 37
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1296], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_AdvancedAbuseReportOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034B2694 LDR X20, [X20 + 0x880]
	0x034B2698 MOV X19, X0
	0x034B269C LDR X0, [X20]
	0x034B26A0 LDR W8, [X0 + 0xE0]
	0x034B26A4 CBNZ W8, 0x34B26AC
	0x034B26A8 BL 0x1C16DFC
	0x034B26AC MOV X0, X19
	0x034B26B0 BL 0x34B27A0
	0x034B26B4 BL 0x34B26CC
	0x034B26B8 MOV X19, X0
	0x034B26BC CBNZ X0, 0x34B269C
	0x034B26C0 LDP X20, X19, [X31 + 0x10]
	0x034B26C4 LDR X30, [X31], #0x20
	0x034B26C8 RET
	0x034B26CC STR X30, [X31 - 0x20]!
	0x034B26D0 STP X20, X19, [X31 + 0x10]
	0x034B26D4 ADRP X20, 0xF2D000
	0x034B26D8 ADRP X19, 0xC41000
	0x034B26DC LDRB W8, [X20 + 0x7F3]
	0x034B26E0 LDR X19, [X19 + 0xC50]
	0x034B26E4 TBNZ X8, 0x0, 0x34B2708
	0x034B26E8 ADRP X0, 0xC80000
	0x034B26EC LDR X0, [X0 + 0x328]
	0x034B26F0 BL 0x1C16CF4
	0x034B26F4 ADRP X0, 0xC41000
	0x034B26F8 LDR X0, [X0 + 0xC50]
	0x034B26FC BL 0x1C16CF4
	0x034B2700 MOVZ W8, 0x1
	0x034B2704 STRB W8, [X20 + 0x7F3]
	0x034B2708 LDR X0, [X19]
	0x034B270C LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF2E000
	006 Move X8, [X20+1304]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43794432
	011 Move V0, [X12+1464]
	012 Move X8, -43638784
	013 Move X10, -43659264
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1470
	017 Move W11, 38
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1304], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString(System.IntPtr handle, System.String key, System.String value)

Disassembly:
	0x034B1F80 MOVZ W13, 0x10
	0x034B1F84 ADD X0, X31, 0x0
	0x034B1F88 STP X8, X9, [X31]
	0x034B1F8C STP X10, X11, [X31 + 0x10]
	0x034B1F90 STR W13, [X31 + 0x28]
	0x034B1F94 STR D0, [X31 + 0x20]
	0x034B1F98 STRB W31, [X31 + 0x2C]
	0x034B1F9C BL 0x1C1729C
	0x034B1FA0 MOV X8, X0
	0x034B1FA4 STR X0, [X21 + 0x5B8]
	0x034B1FA8 MOV X0, X20
	0x034B1FAC MOV X1, X19
	0x034B1FB0 BLR X8
	0x034B1FB4 LDP X20, X19, [X31 + 0x40]
	0x034B1FB8 LDP X30, X21, [X31 + 0x30]
	0x034B1FBC ADD X31, X31, 0x50
	0x034B1FC0 RET
	0x034B1FC4 CBZ X0, 0x34B1FCC
	0x034B1FC8 LDR X0, [X0 + 0x10]
	0x034B1FCC RET
	0x034B1FD0 STP X30, X21, [X31 - 0x20]!
	0x034B1FD4 STP X20, X19, [X31 + 0x10]
	0x034B1FD8 ADRP X21, 0xF2C000
	0x034B1FDC ADRP X20, 0xC81000
	0x034B1FE0 LDRB W8, [X21 + 0xB51]
	0x034B1FE4 LDR X20, [X20 + 0x328]
	0x034B1FE8 MOV X19, X0
	0x034B1FEC TBNZ X8, 0x0, 0x34B2004
	0x034B1FF0 ADRP X0, 0xC81000
	0x034B1FF4 LDR X0, [X0 + 0x328]
	0x034B1FF8 BL 0x1C16CF4
	0x034B1FFC MOVZ W8, 0x1
	0x034B2000 STRB W8, [X21 + 0xB51]
	0x034B2004 LDR X0, [X20]
	0x034B2008 LDR X20, [X19 + 0x10]
	0x034B200C LDR W8, [X0 + 0xE0]
	0x034B2010 CBNZ W8, 0x34B2018
	0x034B2014 BL 0x1C16DFC
	0x034B2018 MOV X0, X20
	0x034B201C BL 0x34B20A4
	0x034B2020 MOV X0, X19
	0x034B2024 LDP X20, X19, [X31 + 0x10]
	0x034B2028 MOV X1, X31
	0x034B202C LDP X30, X21, [X31], #0x20
	0x034B2030 B 0x33CB4DC
	0x034B2034 CMP W1, 0x1
	0x034B2038 MOV X21, X0
	0x034B203C B.NE 0x34B206C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF2F000
	008 Move X22, 0xC82000
	009 Move W8, [X23+1312]
	010 Move X22, [X22+808]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC82000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0xC6B000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1312], W8
	026 Move X0, [X22]
	027 Move X22, 0xC6B000
	028 Move W8, [X0+224]
	029 Move X22, [X22+2128]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Call CAPI.StringToNative, X0
	035 Move X21, X0
	036 Move X0, X20
	037 Call CAPI.StringToNative, X0
	038 Move X20, X0
	039 Move X0, X19
	040 Move X1, X21
	041 Move X2, X20
	042 Call CAPI.ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native, X0, X1, X2
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Call Marshal.FreeCoTaskMem, X0
	051 Move X0, X20
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Call Marshal.FreeCoTaskMem, X0
	060 Return 

Method: System.Void ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)

Disassembly:
	0x034CE3E8 STR X0, [X21 + 0x698]
	0x034CE3EC AND W1, W19, 0x1
	0x034CE3F0 MOV X0, X20
	0x034CE3F4 BLR X8
	0x034CE3F8 LDP X20, X19, [X31 + 0x40]
	0x034CE3FC LDP X30, X21, [X31 + 0x30]
	0x034CE400 ADD X31, X31, 0x50
	0x034CE404 RET
	0x034CE408 STR X30, [X31 - 0x30]!
	0x034CE40C STP X22, X21, [X31 + 0x10]
	0x034CE410 STP X20, X19, [X31 + 0x20]
	0x034CE414 ADRP X22, 0xF11000
	0x034CE418 ADRP X21, 0xC64000
	0x034CE41C LDRB W8, [X22 + 0x6A0]
	0x034CE420 LDR X21, [X21 + 0x328]
	0x034CE424 MOV X20, X1
	0x034CE428 MOV X19, X0
	0x034CE42C TBNZ X8, 0x0, 0x34CE450
	0x034CE430 ADRP X0, 0xC64000
	0x034CE434 LDR X0, [X0 + 0x328]
	0x034CE438 BL 0x1C16CF4
	0x034CE43C ADRP X0, 0xC4D000
	0x034CE440 LDR X0, [X0 + 0x850]
	0x034CE444 BL 0x1C16CF4
	0x034CE448 MOVZ W8, 0x1
	0x034CE44C STRB W8, [X22 + 0x6A0]
	0x034CE450 LDR X0, [X21]
	0x034CE454 ADRP X21, 0xC4D000
	0x034CE458 LDR W8, [X0 + 0xE0]
	0x034CE45C LDR X21, [X21 + 0x850]
	0x034CE460 CBNZ W8, 0x34CE468
	0x034CE464 BL 0x1C16DFC
	0x034CE468 MOV X0, X20
	0x034CE46C BL 0x34B404C
	0x034CE470 MOV X20, X0
	0x034CE474 MOV X0, X19
	0x034CE478 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xF12000
	008 Move X8, [X22+1320]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X12, -43909120
	015 Move V0, [X12+1464]
	016 Move X8, -43753472
	017 Move X10, -43757568
	018 Add X8, X8, 3538
	019 Move W9, 17
	020 Add X10, X10, 518
	021 Move W11, 63
	022 Move W13, 24
	023 Add X0, X31, 0
	024 Move [X31], X8
	025 Move [X31+8], X9
	026 Move [X31+16], X10
	027 Move [X31+24], X11
	028 Move [X31+40], W13
	029 Move [X31+32], D0
	030 Move [X31+44], W31
	031 Call 0x1C1829C
	032 Move X8, X0
	033 Move [X22+1320], X0
	034 Move X0, X21
	035 Move X1, X20
	036 Move X2, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X30, [X31+48]
	043 Add X31, X31, 96
	044 Return 

Method: System.Void ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext(System.IntPtr handle)

Disassembly:
	0x034B2098 MOV X0, X20
	0x034B209C BL 0x1C16F18
	0x034B20A0 BL 0x1990590
	0x034B20A4 SUB X31, X31, 0x50
	0x034B20A8 STR X30, [X31 + 0x30]
	0x034B20AC STP X20, X19, [X31 + 0x40]
	0x034B20B0 ADRP X20, 0xF2D000
	0x034B20B4 LDR X8, [X20 + 0x570]
	0x034B20B8 MOV X19, X0
	0x034B20BC CBNZ X8, 0x34B2108
	0x034B20C0 ADRP X12, 0xFFFFFFFFFD63B000
	0x034B20C4 LDR V0, [X12 + 0x5B8]
	0x034B20C8 ADRP X8, 0xFFFFFFFFFD661000
	0x034B20CC ADRP X10, 0xFFFFFFFFFD665000
	0x034B20D0 ADD X8, X8, 0xDD2
	0x034B20D4 MOVZ W9, 0x11
	0x034B20D8 ADD X10, X10, 0xF20
	0x034B20DC MOVZ W11, 0x1E
	0x034B20E0 MOVZ W13, 0x8
	0x034B20E4 ADD X0, X31, 0x0
	0x034B20E8 STP X8, X9, [X31]
	0x034B20EC STP X10, X11, [X31 + 0x10]
	0x034B20F0 STR W13, [X31 + 0x28]
	0x034B20F4 STR D0, [X31 + 0x20]
	0x034B20F8 STRB W31, [X31 + 0x2C]
	0x034B20FC BL 0x1C1729C
	0x034B2100 MOV X8, X0
	0x034B2104 STR X0, [X20 + 0x570]
	0x034B2108 MOV X0, X19
	0x034B210C BLR X8
	0x034B2110 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF2E000
	006 Move X8, [X20+1328]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43794432
	011 Move V0, [X12+1464]
	012 Move X8, -43638784
	013 Move X10, -43577344
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1540
	017 Move W11, 59
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1328], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_AdvancedAbuseReportOptions_SetObjectType(System.IntPtr handle, System.String value)

Disassembly:
	0x034B217C LDP X30, X21, [X31], #0x20
	0x034B2180 RET
	0x034B2184 SUB X31, X31, 0x40
	0x034B2188 STP X30, X19, [X31 + 0x30]
	0x034B218C ADRP X19, 0xF2D000
	0x034B2190 LDR X8, [X19 + 0x5C0]
	0x034B2194 CBNZ X8, 0x34B21DC
	0x034B2198 ADRP X12, 0xFFFFFFFFFD63B000
	0x034B219C LDR V0, [X12 + 0x5B8]
	0x034B21A0 ADRP X8, 0xFFFFFFFFFD661000
	0x034B21A4 ADRP X10, 0xFFFFFFFFFD64C000
	0x034B21A8 ADD X8, X8, 0xDD2
	0x034B21AC MOVZ W9, 0x11
	0x034B21B0 ADD X10, X10, 0x572
	0x034B21B4 MOVZ W11, 0x1E
	0x034B21B8 ADD X0, X31, 0x0
	0x034B21BC STR W31, [X31 + 0x28]
	0x034B21C0 STP X8, X9, [X31]
	0x034B21C4 STP X10, X11, [X31 + 0x10]
	0x034B21C8 STR D0, [X31 + 0x20]
	0x034B21CC STRB W31, [X31 + 0x2C]
	0x034B21D0 BL 0x1C1729C
	0x034B21D4 MOV X8, X0
	0x034B21D8 STR X0, [X19 + 0x5C0]
	0x034B21DC BLR X8
	0x034B21E0 LDP X30, X19, [X31 + 0x30]
	0x034B21E4 ADD X31, X31, 0x40
	0x034B21E8 RET
	0x034B21EC STR X30, [X31 - 0x30]!
	0x034B21F0 STP X22, X21, [X31 + 0x10]
	0x034B21F4 STP X20, X19, [X31 + 0x20]
	0x034B21F8 ADRP X22, 0xF2B000
	0x034B21FC ADRP X21, 0xC80000
	0x034B2200 LDRB W8, [X22 + 0xB53]
	0x034B2204 LDR X21, [X21 + 0x328]
	0x034B2208 MOV X19, X1
	0x034B220C MOV X20, X0
	0x034B2210 TBNZ X8, 0x0, 0x34B2228
	0x034B2214 ADRP X0, 0xC80000
	0x034B2218 LDR X0, [X0 + 0x328]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2E000
	007 Move X21, 0xC81000
	008 Move W8, [X22+1336]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC6A000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1336], W8
	024 Move X0, [X21]
	025 Move X21, 0xC6A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_AdvancedAbuseReportOptions_SetObjectType_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_AdvancedAbuseReportOptions_SetObjectType_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CE47C BL 0x34CE4A8
	0x034CE480 LDR X0, [X21]
	0x034CE484 LDR W8, [X0 + 0xE0]
	0x034CE488 CBNZ W8, 0x34CE490
	0x034CE48C BL 0x1C16DFC
	0x034CE490 MOV X0, X20
	0x034CE494 LDP X20, X19, [X31 + 0x20]
	0x034CE498 LDP X22, X21, [X31 + 0x10]
	0x034CE49C MOV X1, X31
	0x034CE4A0 LDR X30, [X31], #0x30
	0x034CE4A4 B 0x32C1060
	0x034CE4A8 SUB X31, X31, 0x50
	0x034CE4AC STP X30, X21, [X31 + 0x30]
	0x034CE4B0 STP X20, X19, [X31 + 0x40]
	0x034CE4B4 ADRP X21, 0xF11000
	0x034CE4B8 LDR X8, [X21 + 0x6A8]
	0x034CE4BC MOV X19, X1
	0x034CE4C0 MOV X20, X0
	0x034CE4C4 CBNZ X8, 0x34CE510
	0x034CE4C8 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE4CC LDR V0, [X12 + 0x5B8]
	0x034CE4D0 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE4D4 ADRP X10, 0xFFFFFFFFFD644000
	0x034CE4D8 ADD X8, X8, 0xDD2
	0x034CE4DC MOVZ W9, 0x11
	0x034CE4E0 ADD X10, X10, 0x293
	0x034CE4E4 MOVZ W11, 0x2A
	0x034CE4E8 MOVZ W13, 0x10
	0x034CE4EC ADD X0, X31, 0x0
	0x034CE4F0 STP X8, X9, [X31]
	0x034CE4F4 STP X10, X11, [X31 + 0x10]
	0x034CE4F8 STR W13, [X31 + 0x28]
	0x034CE4FC STR D0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1344]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43675648
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1229
	019 Move W11, 44
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1344], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_AdvancedAbuseReportOptions_SetReportType(System.IntPtr handle, Oculus.Platform.AbuseReportType value)

Disassembly:
	0x034B2284 BL 0x1C16CF4
	0x034B2288 ADRP X0, 0xC69000
	0x034B228C LDR X0, [X0 + 0x850]
	0x034B2290 BL 0x1C16CF4
	0x034B2294 MOVZ W8, 0x1
	0x034B2298 STRB W8, [X22 + 0x5D0]
	0x034B229C LDR X0, [X21]
	0x034B22A0 ADRP X21, 0xC69000
	0x034B22A4 LDR W8, [X0 + 0xE0]
	0x034B22A8 LDR X21, [X21 + 0x850]
	0x034B22AC CBNZ W8, 0x34B22B4
	0x034B22B0 BL 0x1C16DFC
	0x034B22B4 MOV X0, X20
	0x034B22B8 BL 0x34B404C
	0x034B22BC MOV X20, X0
	0x034B22C0 MOV X0, X19
	0x034B22C4 MOV X1, X20
	0x034B22C8 BL 0x34CD710
	0x034B22CC LDR X0, [X21]
	0x034B22D0 LDR W8, [X0 + 0xE0]
	0x034B22D4 CBNZ W8, 0x34B22DC
	0x034B22D8 BL 0x1C16DFC
	0x034B22DC MOV X0, X20
	0x034B22E0 LDP X20, X19, [X31 + 0x20]
	0x034B22E4 LDP X22, X21, [X31 + 0x10]
	0x034B22E8 MOV X1, X31
	0x034B22EC LDR X30, [X31], #0x30
	0x034B22F0 B 0x32C1060
	0x034B22F4 CBZ X0, 0x34B22FC
	0x034B22F8 LDR X0, [X0 + 0x10]
	0x034B22FC RET
	0x034B2300 STP X30, X21, [X31 - 0x20]!
	0x034B2304 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF2E000
	007 Move X8, [X21+1352]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43794432
	013 Move V0, [X12+1464]
	014 Move X8, -43638784
	015 Move X10, -43790336
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2348
	019 Move W11, 44
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1352], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_AdvancedAbuseReportOptions_AddSuggestedUser(System.IntPtr handle, System.UInt64 value)

Disassembly:
	0x034B2370 MOV X0, X21
	0x034B2374 BL 0x3EB1AD0
	0x034B2378 LDR X20, [X0]
	0x034B237C BL 0x3EB1AE0
	0x034B2380 MOV X0, X19
	0x034B2384 MOV X1, X31
	0x034B2388 BL 0x33CB4DC
	0x034B238C CBNZ X20, 0x34B23A4
	0x034B2390 LDP X20, X19, [X31 + 0x10]
	0x034B2394 LDP X30, X21, [X31], #0x20
	0x034B2398 RET
	0x034B239C MOV X20, X31
	0x034B23A0 B 0x34B23B0
	0x034B23A4 MOV X0, X20
	0x034B23A8 BL 0x1C16F18
	0x034B23AC MOV X21, X0
	0x034B23B0 MOV X0, X19
	0x034B23B4 MOV X1, X31
	0x034B23B8 BL 0x33CB4DC
	0x034B23BC CBNZ X20, 0x34B23C8
	0x034B23C0 MOV X0, X21
	0x034B23C4 BL 0x1D2C690
	0x034B23C8 MOV X0, X20
	0x034B23CC BL 0x1C16F18
	0x034B23D0 BL 0x1990590
	0x034B23D4 SUB X31, X31, 0x50
	0x034B23D8 STR X30, [X31 + 0x30]
	0x034B23DC STP X20, X19, [X31 + 0x40]
	0x034B23E0 ADRP X20, 0xF2D000
	0x034B23E4 LDR X8, [X20 + 0x5C8]
	0x034B23E8 MOV X19, X0
	0x034B23EC CBNZ X8, 0x34B2438
	0x034B23F0 ADRP X12, 0xFFFFFFFFFD63B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF2E000
	007 Move X8, [X21+1360]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43794432
	013 Move V0, [X12+1464]
	014 Move X8, -43638784
	015 Move X10, -43601920
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1016
	019 Move W11, 47
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1360], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers(System.IntPtr handle)

Disassembly:
	0x034B244C RET
	0x034B2450 STR X30, [X31 - 0x30]!
	0x034B2454 STP X22, X21, [X31 + 0x10]
	0x034B2458 STP X20, X19, [X31 + 0x20]
	0x034B245C ADRP X21, 0xF2B000
	0x034B2460 LDRB W8, [X21 + 0xB55]
	0x034B2464 MOV X20, X1
	0x034B2468 MOV W19, W0
	0x034B246C TBNZ X8, 0x0, 0x34B249C
	0x034B2470 ADRP X0, 0xC69000
	0x034B2474 LDR X0, [X0 + 0x880]
	0x034B2478 BL 0x1C16CF4
	0x034B247C ADRP X0, 0xC69000
	0x034B2480 LDR X0, [X0 + 0x888]
	0x034B2484 BL 0x1C16CF4
	0x034B2488 ADRP X0, 0xC80000
	0x034B248C LDR X0, [X0 + 0x358]
	0x034B2490 BL 0x1C16CF4
	0x034B2494 MOVZ W8, 0x1
	0x034B2498 STRB W8, [X21 + 0xB55]
	0x034B249C CBZ X20, 0x34B2510
	0x034B24A0 ADRP X21, 0xC69000
	0x034B24A4 LDR X21, [X21 + 0x880]
	0x034B24A8 ADRP X22, 0xC80000
	0x034B24AC LDR X0, [X21]
	0x034B24B0 LDR W8, [X0 + 0xE0]
	0x034B24B4 LDR X22, [X22 + 0x358]
	0x034B24B8 CBNZ W8, 0x34B24C4
	0x034B24BC BL 0x1C16DFC
	0x034B24C0 LDR X0, [X21]
	0x034B24C4 LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF2E000
	006 Move X8, [X20+1368]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43794432
	011 Move V0, [X12+1464]
	012 Move X8, -43638784
	013 Move X10, -43757568
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2119
	017 Move W11, 50
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1368], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_AdvancedAbuseReportOptions_SetVideoMode(System.IntPtr handle, Oculus.Platform.AbuseReportVideoMode value)

Disassembly:
	0x034B2530 MOV X1, X0
	0x034B2534 MOV X0, X19
	0x034B2538 MOV X2, X31
	0x034B253C BL 0x33B2C70
	0x034B2540 ADRP X0, 0xC80000
	0x034B2544 LDR X0, [X0 + 0x360]
	0x034B2548 BL 0x1C16D08
	0x034B254C MOV X1, X0
	0x034B2550 MOV X0, X19
	0x034B2554 BL 0x1C16DEC
	0x034B2558 BL 0x1C16F20
	0x034B255C STR X30, [X31 - 0x20]!
	0x034B2560 STP X20, X19, [X31 + 0x10]
	0x034B2564 MOV X19, X1
	0x034B2568 MOV X1, X31
	0x034B256C MOV X20, X0
	0x034B2570 BL 0x33BDD8C
	0x034B2574 STR X19, [X20 + 0x10]
	0x034B2578 LDP X20, X19, [X31 + 0x10]
	0x034B257C LDR X30, [X31], #0x20
	0x034B2580 RET
	0x034B2584 STR X30, [X31 - 0x20]!
	0x034B2588 STP X20, X19, [X31 + 0x10]
	0x034B258C ADRP X20, 0xF2B000
	0x034B2590 LDRB W8, [X20 + 0xB56]
	0x034B2594 MOV X19, X0
	0x034B2598 TBNZ X8, 0x0, 0x34B25D4
	0x034B259C ADRP X0, 0xC69000
	0x034B25A0 LDR X0, [X0 + 0x880]
	0x034B25A4 BL 0x1C16CF4
	0x034B25A8 ADRP X0, 0xC41000
	0x034B25AC LDR X0, [X0 + 0xA28]
	0x034B25B0 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF2E000
	007 Move X8, [X21+1376]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43794432
	013 Move V0, [X12+1464]
	014 Move X8, -43638784
	015 Move X10, -43540480
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3502
	019 Move W11, 43
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1376], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_ApplicationOptions_Create()

Disassembly:
	0x034B2A50 SXTW X8, W22
	0x034B2A54 CMP X8, X21
	0x034B2A58 ADD W22, W22, 0x1
	0x034B2A5C B.LT 0x34B2A2C
	0x034B2A60 LDP X20, X19, [X31 + 0x20]
	0x034B2A64 LDP X22, X21, [X31 + 0x10]
	0x034B2A68 LDR X30, [X31], #0x30
	0x034B2A6C RET
	0x034B2A70 STR X30, [X31 - 0x20]!
	0x034B2A74 STP X20, X19, [X31 + 0x10]
	0x034B2A78 ADRP X20, 0xF2B000
	0x034B2A7C ADRP X19, 0xC69000
	0x034B2A80 LDRB W8, [X20 + 0xB59]
	0x034B2A84 LDR X19, [X19 + 0x880]
	0x034B2A88 TBNZ X8, 0x0, 0x34B2AB8
	0x034B2A8C ADRP X0, 0xC69000
	0x034B2A90 LDR X0, [X0 + 0x880]
	0x034B2A94 BL 0x1C16CF4
	0x034B2A98 ADRP X0, 0xC80000
	0x034B2A9C LDR X0, [X0 + 0x390]
	0x034B2AA0 BL 0x1C16CF4
	0x034B2AA4 ADRP X0, 0xC80000
	0x034B2AA8 LDR X0, [X0 + 0x398]
	0x034B2AAC BL 0x1C16CF4
	0x034B2AB0 MOVZ W8, 0x1
	0x034B2AB4 STRB W8, [X20 + 0xB59]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF2E000
	005 Move X8, [X19+1384]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43794432
	009 Move V0, [X12+1464]
	010 Move X8, -43638784
	011 Move X10, -43630592
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3650
	015 Move W11, 29
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1384], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_ApplicationOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034B30A4 MOV X20, X0
	0x034B30A8 TBNZ X8, 0x0, 0x34B3120
	0x034B30AC ADRP X0, 0xC7F000
	0x034B30B0 LDR X0, [X0 + 0x3D0]
	0x034B30B4 BL 0x1C16CF4
	0x034B30B8 ADRP X0, 0xC7F000
	0x034B30BC LDR X0, [X0 + 0x3D8]
	0x034B30C0 BL 0x1C16CF4
	0x034B30C4 ADRP X0, 0xC7F000
	0x034B30C8 LDR X0, [X0 + 0x3E0]
	0x034B30CC BL 0x1C16CF4
	0x034B30D0 ADRP X0, 0xC7F000
	0x034B30D4 LDR X0, [X0 + 0x3E8]
	0x034B30D8 BL 0x1C16CF4
	0x034B30DC ADRP X0, 0xC7F000
	0x034B30E0 LDR X0, [X0 + 0x3F0]
	0x034B30E4 BL 0x1C16CF4
	0x034B30E8 ADRP X0, 0xC7F000
	0x034B30EC LDR X0, [X0 + 0x3F8]
	0x034B30F0 BL 0x1C16CF4
	0x034B30F4 ADRP X0, 0xC7F000
	0x034B30F8 LDR X0, [X0 + 0x400]
	0x034B30FC BL 0x1C16CF4
	0x034B3100 ADRP X0, 0xC7F000
	0x034B3104 LDR X0, [X0 + 0x408]
	0x034B3108 BL 0x1C16CF4
	0x034B310C ADRP X0, 0xC7F000
	0x034B3110 LDR X0, [X0 + 0x410]
	0x034B3114 BL 0x1C16CF4
	0x034B3118 MOVZ W8, 0x1
	0x034B311C STRB W8, [X19 + 0xB6B]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF2D000
	006 Move X8, [X20+1392]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43798528
	011 Move V0, [X12+1464]
	012 Move X8, -43642880
	013 Move X10, -43626496
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3872
	017 Move W11, 30
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1392], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_ApplicationOptions_SetDeeplinkMessage(System.IntPtr handle, System.String value)

Disassembly:
	0x034B2B20 ADRP X19, 0xC69000
	0x034B2B24 LDRB W8, [X20 + 0xB5A]
	0x034B2B28 LDR X19, [X19 + 0x880]
	0x034B2B2C TBNZ X8, 0x0, 0x34B2B44
	0x034B2B30 ADRP X0, 0xC69000
	0x034B2B34 LDR X0, [X0 + 0x880]
	0x034B2B38 BL 0x1C16CF4
	0x034B2B3C MOVZ W8, 0x1
	0x034B2B40 STRB W8, [X20 + 0xB5A]
	0x034B2B44 LDR X0, [X19]
	0x034B2B48 LDR W8, [X0 + 0xE0]
	0x034B2B4C CBNZ W8, 0x34B2B58
	0x034B2B50 BL 0x1C16DFC
	0x034B2B54 LDR X0, [X19]
	0x034B2B58 LDR X9, [X0 + 0xB8]
	0x034B2B5C MOVZ W10, 0x1
	0x034B2B60 LDR X8, [X9 + 0x18]
	0x034B2B64 STRB W10, [X9 + 0x10]
	0x034B2B68 CBZ X8, 0x34B2B90
	0x034B2B6C LDR W9, [X0 + 0xE0]
	0x034B2B70 CBNZ W9, 0x34B2B84
	0x034B2B74 BL 0x1C16DFC
	0x034B2B78 LDR X8, [X19]
	0x034B2B7C LDR X8, [X8 + 0xB8]
	0x034B2B80 LDR X8, [X8 + 0x18]
	0x034B2B84 MOV X0, X8
	0x034B2B88 BL 0x34B27A0
	0x034B2B8C LDR X0, [X19]
	0x034B2B90 LDR W8, [X0 + 0xE0]
	0x034B2B94 CBNZ W8, 0x34B2BA0
	0x034B2B98 BL 0x1C16DFC
	0x034B2B9C LDR X0, [X19]
	0x034B2BA0 LDR X8, [X0 + 0xB8]
	0x034B2BA4 LDP X20, X19, [X31 + 0x10]
	0x034B2BA8 STR X31, [X8 + 0x18]
	0x034B2BAC LDR X30, [X31], #0x20
	0x034B2BB0 RET
	0x034B2BB4 STR X30, [X31 - 0x40]!
	0x034B2BB8 STP X24, X23, [X31 + 0x10]
	0x034B2BBC STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2E000
	007 Move X21, 0xC81000
	008 Move W8, [X22+1400]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC6A000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1400], W8
	024 Move X0, [X21]
	025 Move X21, 0xC6A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_ApplicationOptions_SetDeeplinkMessage_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_ApplicationOptions_SetDeeplinkMessage_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CE500 STRB W31, [X31 + 0x2C]
	0x034CE504 BL 0x1C1729C
	0x034CE508 MOV X8, X0
	0x034CE50C STR X0, [X21 + 0x6A8]
	0x034CE510 MOV X0, X20
	0x034CE514 MOV X1, X19
	0x034CE518 BLR X8
	0x034CE51C LDP X20, X19, [X31 + 0x40]
	0x034CE520 LDP X30, X21, [X31 + 0x30]
	0x034CE524 ADD X31, X31, 0x50
	0x034CE528 RET
	0x034CE52C STR X30, [X31 - 0x30]!
	0x034CE530 STP X22, X21, [X31 + 0x10]
	0x034CE534 STP X20, X19, [X31 + 0x20]
	0x034CE538 ADRP X22, 0xF11000
	0x034CE53C ADRP X21, 0xC64000
	0x034CE540 LDRB W8, [X22 + 0x6B0]
	0x034CE544 LDR X21, [X21 + 0x328]
	0x034CE548 MOV X20, X1
	0x034CE54C MOV X19, X0
	0x034CE550 TBNZ X8, 0x0, 0x34CE574
	0x034CE554 ADRP X0, 0xC64000
	0x034CE558 LDR X0, [X0 + 0x328]
	0x034CE55C BL 0x1C16CF4
	0x034CE560 ADRP X0, 0xC4D000
	0x034CE564 LDR X0, [X0 + 0x850]
	0x034CE568 BL 0x1C16CF4
	0x034CE56C MOVZ W8, 0x1
	0x034CE570 STRB W8, [X22 + 0x6B0]
	0x034CE574 LDR X0, [X21]
	0x034CE578 ADRP X21, 0xC4D000
	0x034CE57C LDR W8, [X0 + 0xE0]
	0x034CE580 LDR X21, [X21 + 0x850]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1408]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43773952
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1509
	019 Move W11, 41
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1408], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ApplicationOptions_SetDestinationApiName(System.IntPtr handle, System.String value)

Disassembly:
	0x034B2C28 ADRP X0, 0xC80000
	0x034B2C2C LDR X0, [X0 + 0x3B0]
	0x034B2C30 BL 0x1C16CF4
	0x034B2C34 MOVZ W8, 0x1
	0x034B2C38 STRB W8, [X23 + 0xB5C]
	0x034B2C3C LDR X0, [X24]
	0x034B2C40 BL 0x1C16F10
	0x034B2C44 LDR X1, [X19]
	0x034B2C48 MOV X19, X0
	0x034B2C4C BL 0x2B1D614
	0x034B2C50 LDR X8, [X20]
	0x034B2C54 LDR X8, [X8 + 0xB8]
	0x034B2C58 STR X19, [X8]
	0x034B2C5C LDR X0, [X22]
	0x034B2C60 BL 0x1C16F10
	0x034B2C64 LDR X1, [X21]
	0x034B2C68 MOV X19, X0
	0x034B2C6C BL 0x2B1A5F4
	0x034B2C70 LDR X8, [X20]
	0x034B2C74 LDP X22, X21, [X31 + 0x20]
	0x034B2C78 LDP X24, X23, [X31 + 0x10]
	0x034B2C7C LDR X8, [X8 + 0xB8]
	0x034B2C80 STR X19, [X8 + 0x8]
	0x034B2C84 LDP X20, X19, [X31 + 0x30]
	0x034B2C88 STRB W31, [X8 + 0x10]
	0x034B2C8C LDR X30, [X31], #0x40
	0x034B2C90 RET
	0x034B2C94 MOV X1, X31
	0x034B2C98 B 0x33BDD8C
	0x034B2C9C LDR X8, [X0 + 0x10]
	0x034B2CA0 CBZ X8, 0x34B2CB4
	0x034B2CA4 LDR X3, [X8 + 0x18]
	0x034B2CA8 LDR X0, [X8 + 0x40]
	0x034B2CAC LDR X2, [X8 + 0x28]
	0x034B2CB0 BR X3
	0x034B2CB4 RET
	0x034B2CB8 SUB X31, X31, 0x40
	0x034B2CBC STP X30, X19, [X31 + 0x30]
	0x034B2CC0 ADRP X19, 0xF2B000
	0x034B2CC4 LDR X0, [X19 + 0xB60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2E000
	007 Move X21, 0xC81000
	008 Move W8, [X22+1416]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC6A000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1416], W8
	024 Move X0, [X21]
	025 Move X21, 0xC6A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_ApplicationOptions_SetDestinationApiName_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_ApplicationOptions_SetDestinationApiName_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CE584 CBNZ W8, 0x34CE58C
	0x034CE588 BL 0x1C16DFC
	0x034CE58C MOV X0, X20
	0x034CE590 BL 0x34B404C
	0x034CE594 MOV X20, X0
	0x034CE598 MOV X0, X19
	0x034CE59C MOV X1, X20
	0x034CE5A0 BL 0x34CE5CC
	0x034CE5A4 LDR X0, [X21]
	0x034CE5A8 LDR W8, [X0 + 0xE0]
	0x034CE5AC CBNZ W8, 0x34CE5B4
	0x034CE5B0 BL 0x1C16DFC
	0x034CE5B4 MOV X0, X20
	0x034CE5B8 LDP X20, X19, [X31 + 0x20]
	0x034CE5BC LDP X22, X21, [X31 + 0x10]
	0x034CE5C0 MOV X1, X31
	0x034CE5C4 LDR X30, [X31], #0x30
	0x034CE5C8 B 0x32C1060
	0x034CE5CC SUB X31, X31, 0x50
	0x034CE5D0 STP X30, X21, [X31 + 0x30]
	0x034CE5D4 STP X20, X19, [X31 + 0x40]
	0x034CE5D8 ADRP X21, 0xF11000
	0x034CE5DC LDR X8, [X21 + 0x6B8]
	0x034CE5E0 MOV X19, X1
	0x034CE5E4 MOV X20, X0
	0x034CE5E8 CBNZ X8, 0x34CE634
	0x034CE5EC ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE5F0 LDR V0, [X12 + 0x5B8]
	0x034CE5F4 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE5F8 ADRP X10, 0xFFFFFFFFFD647000
	0x034CE5FC ADD X8, X8, 0xDD2
	0x034CE600 MOVZ W9, 0x11
	0x034CE604 ADD X10, X10, 0xEC6

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1424]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43806720
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1748
	019 Move W11, 44
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1424], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ApplicationOptions_SetLobbySessionId(System.IntPtr handle, System.String value)

Disassembly:
	0x034B2D30 LDR X20, [X20 + 0x598]
	0x034B2D34 MOV X19, X0
	0x034B2D38 TBNZ X8, 0x0, 0x34B2D74
	0x034B2D3C ADRP X0, 0xC41000
	0x034B2D40 LDR X0, [X0 + 0xA28]
	0x034B2D44 BL 0x1C16CF4
	0x034B2D48 ADRP X0, 0xC80000
	0x034B2D4C LDR X0, [X0 + 0x3C0]
	0x034B2D50 BL 0x1C16CF4
	0x034B2D54 ADRP X0, 0xC41000
	0x034B2D58 LDR X0, [X0 + 0x598]
	0x034B2D5C BL 0x1C16CF4
	0x034B2D60 ADRP X0, 0xC80000
	0x034B2D64 LDR X0, [X0 + 0x3C8]
	0x034B2D68 BL 0x1C16CF4
	0x034B2D6C MOVZ W8, 0x1
	0x034B2D70 STRB W8, [X21 + 0xB68]
	0x034B2D74 LDR X0, [X20]
	0x034B2D78 ADRP X21, 0xC80000
	0x034B2D7C LDR W8, [X0 + 0xE0]
	0x034B2D80 LDR X21, [X21 + 0x3C0]
	0x034B2D84 CBNZ W8, 0x34B2D8C
	0x034B2D88 BL 0x1C16DFC
	0x034B2D8C LDR X0, [X21]
	0x034B2D90 BL 0x222D02C
	0x034B2D94 MOV X1, X19
	0x034B2D98 MOV X2, X31
	0x034B2D9C BL 0x3C354F8
	0x034B2DA0 TBZ X0, 0x0, 0x34B2DD0
	0x034B2DA4 ADRP X8, 0xC41000
	0x034B2DA8 LDR X8, [X8 + 0xA28]
	0x034B2DAC ADRP X21, 0xC80000
	0x034B2DB0 LDR X0, [X8]
	0x034B2DB4 LDR W8, [X0 + 0xE0]
	0x034B2DB8 LDR X21, [X21 + 0x3C8]
	0x034B2DBC CBNZ W8, 0x34B2DC4
	0x034B2DC0 BL 0x1C16DFC
	0x034B2DC4 LDR X0, [X21]
	0x034B2DC8 MOV X1, X31
	0x034B2DCC BL 0x3C06A04

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2E000
	007 Move X21, 0xC81000
	008 Move W8, [X22+1432]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC6A000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1432], W8
	024 Move X0, [X21]
	025 Move X21, 0xC6A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_ApplicationOptions_SetLobbySessionId_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_ApplicationOptions_SetLobbySessionId_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CE608 MOVZ W11, 0x2A
	0x034CE60C MOVZ W13, 0x10
	0x034CE610 ADD X0, X31, 0x0
	0x034CE614 STP X8, X9, [X31]
	0x034CE618 STP X10, X11, [X31 + 0x10]
	0x034CE61C STR W13, [X31 + 0x28]
	0x034CE620 STR D0, [X31 + 0x20]
	0x034CE624 STRB W31, [X31 + 0x2C]
	0x034CE628 BL 0x1C1729C
	0x034CE62C MOV X8, X0
	0x034CE630 STR X0, [X21 + 0x6B8]
	0x034CE634 MOV X0, X20
	0x034CE638 MOV X1, X19
	0x034CE63C BLR X8
	0x034CE640 LDP X20, X19, [X31 + 0x40]
	0x034CE644 LDP X30, X21, [X31 + 0x30]
	0x034CE648 ADD X31, X31, 0x50
	0x034CE64C RET
	0x034CE650 SUB X31, X31, 0x40
	0x034CE654 STP X30, X19, [X31 + 0x30]
	0x034CE658 ADRP X19, 0xF11000
	0x034CE65C LDR X8, [X19 + 0x6C0]
	0x034CE660 CBNZ X8, 0x34CE6A8
	0x034CE664 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE668 LDR V0, [X12 + 0x5B8]
	0x034CE66C ADRP X8, 0xFFFFFFFFFD645000
	0x034CE670 ADRP X10, 0xFFFFFFFFFD652000
	0x034CE674 ADD X8, X8, 0xDD2
	0x034CE678 MOVZ W9, 0x11
	0x034CE67C ADD X10, X10, 0x2EA
	0x034CE680 MOVZ W11, 0x18
	0x034CE684 ADD X0, X31, 0x0
	0x034CE688 STR W31, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1440]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43745280
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3680
	019 Move W11, 40
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1440], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ApplicationOptions_SetMatchSessionId(System.IntPtr handle, System.String value)

Disassembly:
	0x034B2E38 LDR X21, [X21 + 0x880]
	0x034B2E3C MOV W19, W0
	0x034B2E40 TBNZ X8, 0x0, 0x34B2E58
	0x034B2E44 ADRP X0, 0xC69000
	0x034B2E48 LDR X0, [X0 + 0x880]
	0x034B2E4C BL 0x1C16CF4
	0x034B2E50 MOVZ W8, 0x1
	0x034B2E54 STRB W8, [X20 + 0x97B]
	0x034B2E58 LDR X0, [X21]
	0x034B2E5C LDR W8, [X0 + 0xE0]
	0x034B2E60 CBZ W8, 0x34B2E78
	0x034B2E64 CBZ W19, 0x34B2E80
	0x034B2E68 MOV W0, W19
	0x034B2E6C LDP X20, X19, [X31 + 0x10]
	0x034B2E70 LDP X30, X21, [X31], #0x20
	0x034B2E74 B 0x34B29E8
	0x034B2E78 BL 0x1C16DFC
	0x034B2E7C CBNZ W19, 0x34B2E68
	0x034B2E80 LDP X20, X19, [X31 + 0x10]
	0x034B2E84 LDP X30, X21, [X31], #0x20
	0x034B2E88 B 0x34B2660
	0x034B2E8C RET
	0x034B2E90 STR X30, [X31 - 0x20]!
	0x034B2E94 STP X20, X19, [X31 + 0x10]
	0x034B2E98 ADRP X19, 0xF2B000
	0x034B2E9C ADRP X20, 0xC69000
	0x034B2EA0 LDRB W8, [X19 + 0xB69]
	0x034B2EA4 LDR X20, [X20 + 0x880]
	0x034B2EA8 TBNZ X8, 0x0, 0x34B2EC0
	0x034B2EAC ADRP X0, 0xC69000
	0x034B2EB0 LDR X0, [X0 + 0x880]
	0x034B2EB4 BL 0x1C16CF4
	0x034B2EB8 MOVZ W8, 0x1
	0x034B2EBC STRB W8, [X19 + 0xB69]
	0x034B2EC0 LDR X0, [X20]
	0x034B2EC4 LDR W8, [X0 + 0xE0]
	0x034B2EC8 CBNZ W8, 0x34B2ED0
	0x034B2ECC BL 0x1C16DFC
	0x034B2ED0 LDP X20, X19, [X31 + 0x10]
	0x034B2ED4 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2E000
	007 Move X21, 0xC81000
	008 Move W8, [X22+1448]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC6A000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1448], W8
	024 Move X0, [X21]
	025 Move X21, 0xC6A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_ApplicationOptions_SetMatchSessionId_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_ApplicationOptions_SetMatchSessionId_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CE68C STP X8, X9, [X31]
	0x034CE690 STP X10, X11, [X31 + 0x10]
	0x034CE694 STR D0, [X31 + 0x20]
	0x034CE698 STRB W31, [X31 + 0x2C]
	0x034CE69C BL 0x1C1729C
	0x034CE6A0 MOV X8, X0
	0x034CE6A4 STR X0, [X19 + 0x6C0]
	0x034CE6A8 BLR X8
	0x034CE6AC LDP X30, X19, [X31 + 0x30]
	0x034CE6B0 ADD X31, X31, 0x40
	0x034CE6B4 RET
	0x034CE6B8 SUB X31, X31, 0x50
	0x034CE6BC STR X30, [X31 + 0x30]
	0x034CE6C0 STP X20, X19, [X31 + 0x40]
	0x034CE6C4 ADRP X20, 0xF11000
	0x034CE6C8 LDR X8, [X20 + 0x6C8]
	0x034CE6CC MOV X19, X0
	0x034CE6D0 CBNZ X8, 0x34CE71C
	0x034CE6D4 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE6D8 LDR V0, [X12 + 0x5B8]
	0x034CE6DC ADRP X8, 0xFFFFFFFFFD645000
	0x034CE6E0 ADRP X10, 0xFFFFFFFFFD644000
	0x034CE6E4 ADD X8, X8, 0xDD2
	0x034CE6E8 MOVZ W9, 0x11
	0x034CE6EC ADD X10, X10, 0x2BE
	0x034CE6F0 MOVZ W11, 0x19
	0x034CE6F4 MOVZ W13, 0x8
	0x034CE6F8 ADD X0, X31, 0x0
	0x034CE6FC STP X8, X9, [X31]
	0x034CE700 STP X10, X11, [X31 + 0x10]
	0x034CE704 STR W13, [X31 + 0x28]
	0x034CE708 STR D0, [X31 + 0x20]
	0x034CE70C STRB W31, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1456]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43773952
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1551
	019 Move W11, 40
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1456], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ApplicationOptions_SetRoomId(System.IntPtr handle, System.UInt64 value)

Disassembly:
	0x034B2F40 MOV W21, W31
	0x034B2F44 MOV W20, W31
	0x034B2F48 MOV X0, X19
	0x034B2F4C MOV W1, W21
	0x034B2F50 MOV X2, X31
	0x034B2F54 BL 0x3395BDC
	0x034B2F58 LDR X8, [X24]
	0x034B2F5C MOV X22, X0
	0x034B2F60 LDR W9, [X8 + 0xE0]
	0x034B2F64 CBNZ W9, 0x34B2F70
	0x034B2F68 MOV X0, X8
	0x034B2F6C BL 0x1C16DFC
	0x034B2F70 MOV X0, X22
	0x034B2F74 MOV X1, X31
	0x034B2F78 BL 0x32C133C
	0x034B2F7C ADD W20, W0, W20
	0x034B2F80 MOV X0, X19
	0x034B2F84 MOV X1, X31
	0x034B2F88 ADD W21, W21, 0x1
	0x034B2F8C BL 0x3395B7C
	0x034B2F90 CMP W21, W0
	0x034B2F94 B.LT 0x34B2F48
	0x034B2F98 B 0x34B2FA0
	0x034B2F9C MOV W20, W31
	0x034B2FA0 LDR X0, [X24]
	0x034B2FA4 LDR W8, [X0 + 0xE0]
	0x034B2FA8 CBNZ W8, 0x34B2FB0
	0x034B2FAC BL 0x1C16DFC
	0x034B2FB0 MOV W0, W20
	0x034B2FB4 MOV X1, X31
	0x034B2FB8 BL 0x32C098C
	0x034B2FBC MOV X20, X0
	0x034B2FC0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF2E000
	007 Move X8, [X21+1464]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43794432
	013 Move V0, [X12+1464]
	014 Move X8, -43638784
	015 Move X10, -43630592
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3721
	019 Move W11, 32
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1464], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_AvatarEditorOptions_Create()

Disassembly:
	0x034B3184 ADRP X21, 0xC7F000
	0x034B3188 ADRP X8, 0xFFFFFFFFFD63A000
	0x034B318C ADRP X22, 0xC7F000
	0x034B3190 LDR X21, [X21 + 0x3E8]
	0x034B3194 LDR V8, [X8 + 0xEC0]
	0x034B3198 LDR X22, [X22 + 0x3F8]
	0x034B319C MOV W20, W31
	0x034B31A0 MOVN X23, 0x0
	0x034B31A4 MOVZ W24, 0x28
	0x034B31A8 LDR X1, [X21]
	0x034B31AC ADD X0, X31, 0x20
	0x034B31B0 BL 0x2C1D7A0
	0x034B31B4 TBZ X0, 0x0, 0x34B3214
	0x034B31B8 LDR X8, [X22]
	0x034B31BC LDR X25, [X31 + 0x30]
	0x034B31C0 STP X8, X23, [X31 + 0x8]
	0x034B31C4 STR W25, [X31 + 0x18]
	0x034B31C8 ADD X0, X31, 0x8
	0x034B31CC MOV X1, X31
	0x034B31D0 BL 0x33B162C
	0x034B31D4 ANDS X31, X25, 0xFFFFFFFFFF
	0x034B31D8 CSET W8, NE
	0x034B31DC CBZ X19, 0x34B3248
	0x034B31E0 LDR W9, [X19 + 0x18]
	0x034B31E4 CMP W20, W9
	0x034B31E8 B.CS 0x34B324C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF2D000
	005 Move X8, [X19+1472]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43798528
	009 Move V0, [X12+1464]
	010 Move X8, -43642880
	011 Move X10, -43728896
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1394
	015 Move W11, 30
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1472], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_AvatarEditorOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034B33D4 STR X31, [X31 + 0x50]
	0x034B33D8 STP V0, V0, [X31 + 0x30]
	0x034B33DC CBZ X20, 0x34B3650
	0x034B33E0 ADRP X19, 0xC7F000
	0x034B33E4 LDR X19, [X19 + 0x418]
	0x034B33E8 MOV X0, X20
	0x034B33EC LDR X1, [X19]
	0x034B33F0 BL 0x2AA4E88
	0x034B33F4 CBZ W0, 0x34B3650
	0x034B33F8 LDR X1, [X19]
	0x034B33FC MOV X0, X20
	0x034B3400 BL 0x2AA4E88
	0x034B3404 ADRP X8, 0xC7F000
	0x034B3408 LDR X8, [X8 + 0x410]
	0x034B340C MOV W1, W0
	0x034B3410 LDR X8, [X8]
	0x034B3414 MOV X0, X8
	0x034B3418 BL 0x1C16D6C
	0x034B341C ADRP X8, 0xC45000
	0x034B3420 LDR X8, [X8 + 0x700]
	0x034B3424 MOV X19, X0
	0x034B3428 MOV X0, X20
	0x034B342C LDR X1, [X8]
	0x034B3430 ADD X8, X31, 0x8
	0x034B3434 BL 0x2AA54BC
	0x034B3438 ADRP X24, 0xC45000
	0x034B343C ADRP X25, 0xC67000
	0x034B3440 ADRP X26, 0xC40000
	0x034B3444 ADRP X29, 0xC68000
	0x034B3448 LDUR V0, [X31 + 0x8]
	0x034B344C LDUR V1, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF2D000
	006 Move X8, [X20+1480]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43798528
	011 Move V0, [X12+1464]
	012 Move X8, -43642880
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2170
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1480], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_AvatarEditorOptions_SetSourceOverride(System.IntPtr handle, System.String value)

Disassembly:
	0x034B3254 B 0x34B3258
	0x034B3258 MOV X20, X0
	0x034B325C CMP W1, 0x1
	0x034B3260 B.NE 0x34B3294
	0x034B3264 MOV X0, X20
	0x034B3268 BL 0x3EB1AD0
	0x034B326C LDR X21, [X0]
	0x034B3270 BL 0x3EB1AE0
	0x034B3274 ADRP X8, 0xC7F000
	0x034B3278 LDR X8, [X8 + 0x3E0]
	0x034B327C ADD X0, X31, 0x20
	0x034B3280 LDR X1, [X8]
	0x034B3284 BL 0x2C1D8A8
	0x034B3288 CBZ X21, 0x34B3228
	0x034B328C MOV X0, X21
	0x034B3290 BL 0x1C16F18
	0x034B3294 MOV X21, X31
	0x034B3298 B 0x34B32A0
	0x034B329C MOV X20, X0
	0x034B32A0 ADRP X8, 0xC7F000
	0x034B32A4 LDR X8, [X8 + 0x3E0]
	0x034B32A8 LDR X1, [X8]
	0x034B32AC ADD X0, X31, 0x20
	0x034B32B0 BL 0x2C1D8A8
	0x034B32B4 CBNZ X21, 0x34B32C0
	0x034B32B8 MOV X0, X20
	0x034B32BC BL 0x1D2C690
	0x034B32C0 MOV X0, X21
	0x034B32C4 BL 0x1C16F18
	0x034B32C8 BL 0x1990590
	0x034B32CC MOVZ W8, 0x1
	0x034B32D0 STR X1, [X0]
	0x034B32D4 STR W2, [X0 + 0x18]
	0x034B32D8 STR X31, [X0 + 0x10]
	0x034B32DC STR W8, [X0 + 0x8]
	0x034B32E0 STR X31, [X0 + 0x20]
	0x034B32E4 RET
	0x034B32E8 SUB X31, X31, 0xC0
	0x034B32EC STP X29, X30, [X31 + 0x60]
	0x034B32F0 STP X28, X27, [X31 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2D000
	007 Move X21, 0xC80000
	008 Move W8, [X22+1488]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC80000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC69000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1488], W8
	024 Move X0, [X21]
	025 Move X21, 0xC69000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_AvatarEditorOptions_SetSourceOverride_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_AvatarEditorOptions_SetSourceOverride_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CE710 BL 0x1C1729C
	0x034CE714 MOV X8, X0
	0x034CE718 STR X0, [X20 + 0x6C8]
	0x034CE71C MOV X0, X19
	0x034CE720 BLR X8
	0x034CE724 LDP X20, X19, [X31 + 0x40]
	0x034CE728 LDR X30, [X31 + 0x30]
	0x034CE72C ADD X31, X31, 0x50
	0x034CE730 RET
	0x034CE734 SUB X31, X31, 0x50
	0x034CE738 STP X30, X21, [X31 + 0x30]
	0x034CE73C STP X20, X19, [X31 + 0x40]
	0x034CE740 ADRP X21, 0xF11000
	0x034CE744 LDR X8, [X21 + 0x6D0]
	0x034CE748 MOV X19, X1
	0x034CE74C MOV X20, X0
	0x034CE750 CBNZ X8, 0x34CE79C
	0x034CE754 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE758 LDR V0, [X12 + 0x5B8]
	0x034CE75C ADRP X8, 0xFFFFFFFFFD645000
	0x034CE760 ADRP X10, 0xFFFFFFFFFD658000
	0x034CE764 ADD X8, X8, 0xDD2
	0x034CE768 MOVZ W9, 0x11
	0x034CE76C ADD X10, X10, 0x524
	0x034CE770 MOVZ W11, 0x22
	0x034CE774 MOVZ W13, 0x10
	0x034CE778 ADD X0, X31, 0x0
	0x034CE77C STP X8, X9, [X31]
	0x034CE780 STP X10, X11, [X31 + 0x10]
	0x034CE784 STR W13, [X31 + 0x28]
	0x034CE788 STR D0, [X31 + 0x20]
	0x034CE78C STRB W31, [X31 + 0x2C]
	0x034CE790 BL 0x1C1729C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1496]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43675648
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1274
	019 Move W11, 41
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1496], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_ChallengeOptions_Create()

Disassembly:
	0x034CE794 MOV X8, X0
	0x034CE798 STR X0, [X21 + 0x6D0]
	0x034CE79C MOV X0, X20
	0x034CE7A0 MOV X1, X19
	0x034CE7A4 BLR X8
	0x034CE7A8 LDP X20, X19, [X31 + 0x40]
	0x034CE7AC LDP X30, X21, [X31 + 0x30]
	0x034CE7B0 ADD X31, X31, 0x50
	0x034CE7B4 RET
	0x034CE7B8 SUB X31, X31, 0x50
	0x034CE7BC STR X30, [X31 + 0x30]
	0x034CE7C0 STP X20, X19, [X31 + 0x40]
	0x034CE7C4 ADRP X20, 0xF11000
	0x034CE7C8 LDR X8, [X20 + 0x6D8]
	0x034CE7CC MOV X19, X0
	0x034CE7D0 CBNZ X8, 0x34CE81C
	0x034CE7D4 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE7D8 LDR V0, [X12 + 0x5B8]
	0x034CE7DC ADRP X8, 0xFFFFFFFFFD645000
	0x034CE7E0 ADRP X10, 0xFFFFFFFFFD62A000
	0x034CE7E4 ADD X8, X8, 0xDD2
	0x034CE7E8 MOVZ W9, 0x11
	0x034CE7EC ADD X10, X10, 0x84E
	0x034CE7F0 MOVZ W11, 0x25
	0x034CE7F4 MOVZ W13, 0x8
	0x034CE7F8 ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF12000
	005 Move X8, [X19+1504]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43909120
	009 Move V0, [X12+1464]
	010 Move X8, -43753472
	011 Move X10, -43745280
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3754
	015 Move W11, 27
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1504], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_ChallengeOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034CE7FC STP X8, X9, [X31]
	0x034CE800 STP X10, X11, [X31 + 0x10]
	0x034CE804 STR W13, [X31 + 0x28]
	0x034CE808 STR D0, [X31 + 0x20]
	0x034CE80C STRB W31, [X31 + 0x2C]
	0x034CE810 BL 0x1C1729C
	0x034CE814 MOV X8, X0
	0x034CE818 STR X0, [X20 + 0x6D8]
	0x034CE81C MOV X0, X19
	0x034CE820 BLR X8
	0x034CE824 LDP X20, X19, [X31 + 0x40]
	0x034CE828 LDR X30, [X31 + 0x30]
	0x034CE82C ADD X31, X31, 0x50
	0x034CE830 RET
	0x034CE834 SUB X31, X31, 0x40
	0x034CE838 STP X30, X19, [X31 + 0x30]
	0x034CE83C ADRP X19, 0xF11000
	0x034CE840 LDR X8, [X19 + 0x6E0]
	0x034CE844 CBNZ X8, 0x34CE88C
	0x034CE848 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE84C LDR V0, [X12 + 0x5B8]
	0x034CE850 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE854 ADRP X10, 0xFFFFFFFFFD630000
	0x034CE858 ADD X8, X8, 0xDD2
	0x034CE85C MOVZ W9, 0x11
	0x034CE860 ADD X10, X10, 0x591
	0x034CE864 MOVZ W11, 0x22
	0x034CE868 ADD X0, X31, 0x0
	0x034CE86C STR W31, [X31 + 0x28]
	0x034CE870 STP X8, X9, [X31]
	0x034CE874 STP X10, X11, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF12000
	006 Move X8, [X20+1512]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43909120
	011 Move V0, [X12+1464]
	012 Move X8, -43753472
	013 Move X10, -43880448
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2075
	017 Move W11, 28
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1512], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_ChallengeOptions_SetDescription(System.IntPtr handle, System.String value)

Disassembly:
	0x034CE878 STR D0, [X31 + 0x20]
	0x034CE87C STRB W31, [X31 + 0x2C]
	0x034CE880 BL 0x1C1729C
	0x034CE884 MOV X8, X0
	0x034CE888 STR X0, [X19 + 0x6E0]
	0x034CE88C BLR X8
	0x034CE890 LDP X30, X19, [X31 + 0x30]
	0x034CE894 ADD X31, X31, 0x40
	0x034CE898 RET
	0x034CE89C SUB X31, X31, 0x50
	0x034CE8A0 STR X30, [X31 + 0x30]
	0x034CE8A4 STP X20, X19, [X31 + 0x40]
	0x034CE8A8 ADRP X20, 0xF11000
	0x034CE8AC LDR X8, [X20 + 0x6E8]
	0x034CE8B0 MOV X19, X0
	0x034CE8B4 CBNZ X8, 0x34CE900
	0x034CE8B8 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE8BC LDR V0, [X12 + 0x5B8]
	0x034CE8C0 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE8C4 ADRP X10, 0xFFFFFFFFFD64E000
	0x034CE8C8 ADD X8, X8, 0xDD2
	0x034CE8CC MOVZ W9, 0x11
	0x034CE8D0 ADD X10, X10, 0x428
	0x034CE8D4 MOVZ W11, 0x23
	0x034CE8D8 MOVZ W13, 0x8
	0x034CE8DC ADD X0, X31, 0x0
	0x034CE8E0 STP X8, X9, [X31]
	0x034CE8E4 STP X10, X11, [X31 + 0x10]
	0x034CE8E8 STR W13, [X31 + 0x28]
	0x034CE8EC STR D0, [X31 + 0x20]
	0x034CE8F0 STRB W31, [X31 + 0x2C]
	0x034CE8F4 BL 0x1C1729C
	0x034CE8F8 MOV X8, X0
	0x034CE8FC STR X0, [X20 + 0x6E8]
	0x034CE900 MOV X0, X19
	0x034CE904 BLR X8
	0x034CE908 LDP X20, X19, [X31 + 0x40]
	0x034CE90C LDR X30, [X31 + 0x30]
	0x034CE910 ADD X31, X31, 0x50
	0x034CE914 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF12000
	007 Move X21, 0xC65000
	008 Move W8, [X22+1520]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC65000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4E000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1520], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4E000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_ChallengeOptions_SetDescription_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_ChallengeOptions_SetDescription_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CE918 SUB X31, X31, 0x50
	0x034CE91C STP X30, X21, [X31 + 0x30]
	0x034CE920 STP X20, X19, [X31 + 0x40]
	0x034CE924 ADRP X21, 0xF11000
	0x034CE928 LDR X8, [X21 + 0x6F0]
	0x034CE92C MOV W19, W1
	0x034CE930 MOV X20, X0
	0x034CE934 CBNZ X8, 0x34CE980
	0x034CE938 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE93C LDR V0, [X12 + 0x5B8]
	0x034CE940 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE944 ADRP X10, 0xFFFFFFFFFD642000
	0x034CE948 ADD X8, X8, 0xDD2
	0x034CE94C MOVZ W9, 0x11
	0x034CE950 ADD X10, X10, 0x638
	0x034CE954 MOVZ W11, 0x27
	0x034CE958 MOVZ W13, 0xC
	0x034CE95C ADD X0, X31, 0x0
	0x034CE960 STP X8, X9, [X31]
	0x034CE964 STP X10, X11, [X31 + 0x10]
	0x034CE968 STR W13, [X31 + 0x28]
	0x034CE96C STR D0, [X31 + 0x20]
	0x034CE970 STRB W31, [X31 + 0x2C]
	0x034CE974 BL 0x1C1729C
	0x034CE978 MOV X8, X0
	0x034CE97C STR X0, [X21 + 0x6F0]
	0x034CE980 MOV X0, X20
	0x034CE984 MOV W1, W19
	0x034CE988 BLR X8
	0x034CE98C LDP X20, X19, [X31 + 0x40]
	0x034CE990 LDP X30, X21, [X31 + 0x30]
	0x034CE994 ADD X31, X31, 0x50
	0x034CE998 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1528]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43782144
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1264
	019 Move W11, 35
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1528], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ChallengeOptions_SetEndDate(System.IntPtr handle, System.DateTime value)

Disassembly:
	0x034CE99C SUB X31, X31, 0x40
	0x034CE9A0 STP X30, X19, [X31 + 0x30]
	0x034CE9A4 ADRP X19, 0xF11000
	0x034CE9A8 LDR X8, [X19 + 0x6F8]
	0x034CE9AC CBNZ X8, 0x34CE9F4
	0x034CE9B0 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CE9B4 LDR V0, [X12 + 0x5B8]
	0x034CE9B8 ADRP X8, 0xFFFFFFFFFD645000
	0x034CE9BC ADRP X10, 0xFFFFFFFFFD63C000
	0x034CE9C0 ADD X8, X8, 0xDD2
	0x034CE9C4 MOVZ W9, 0x11
	0x034CE9C8 ADD X10, X10, 0x925
	0x034CE9CC MOVZ W11, 0x19
	0x034CE9D0 ADD X0, X31, 0x0
	0x034CE9D4 STR W31, [X31 + 0x28]
	0x034CE9D8 STP X8, X9, [X31]
	0x034CE9DC STP X10, X11, [X31 + 0x10]
	0x034CE9E0 STR D0, [X31 + 0x20]
	0x034CE9E4 STRB W31, [X31 + 0x2C]
	0x034CE9E8 BL 0x1C1729C
	0x034CE9EC MOV X8, X0
	0x034CE9F0 STR X0, [X19 + 0x6F8]
	0x034CE9F4 BLR X8
	0x034CE9F8 LDP X30, X19, [X31 + 0x30]
	0x034CE9FC ADD X31, X31, 0x40
	0x034CEA00 RET
	0x034CEA04 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF12000
	007 Move X22, 0xC65000
	008 Move W8, [X21+1536]
	009 Move X22, [X22+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC65000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1536], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Call CAPI.DateTimeToNative, X0
	028 Move X1, X0
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]

Method: System.Void ovr_ChallengeOptions_SetEndDate_Native(System.IntPtr handle, System.UInt64 value)

Disassembly:
	0x034CEA08 STR X30, [X31 + 0x30]
	0x034CEA0C STP X20, X19, [X31 + 0x40]
	0x034CEA10 ADRP X20, 0xF11000
	0x034CEA14 LDR X8, [X20 + 0x700]
	0x034CEA18 MOV X19, X0
	0x034CEA1C CBNZ X8, 0x34CEA68
	0x034CEA20 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CEA24 LDR V0, [X12 + 0x5B8]
	0x034CEA28 ADRP X8, 0xFFFFFFFFFD645000
	0x034CEA2C ADRP X10, 0xFFFFFFFFFD630000
	0x034CEA30 ADD X8, X8, 0xDD2
	0x034CEA34 MOVZ W9, 0x11
	0x034CEA38 ADD X10, X10, 0x5B4
	0x034CEA3C MOVZ W11, 0x1A
	0x034CEA40 MOVZ W13, 0x8
	0x034CEA44 ADD X0, X31, 0x0
	0x034CEA48 STP X8, X9, [X31]
	0x034CEA4C STP X10, X11, [X31 + 0x10]
	0x034CEA50 STR W13, [X31 + 0x28]
	0x034CEA54 STR D0, [X31 + 0x20]
	0x034CEA58 STRB W31, [X31 + 0x2C]
	0x034CEA5C BL 0x1C1729C
	0x034CEA60 MOV X8, X0
	0x034CEA64 STR X0, [X20 + 0x700]
	0x034CEA68 MOV X0, X19
	0x034CEA6C BLR X8
	0x034CEA70 LDP X20, X19, [X31 + 0x40]
	0x034CEA74 LDR X30, [X31 + 0x30]
	0x034CEA78 ADD X31, X31, 0x50
	0x034CEA7C RET
	0x034CEA80 STR X30, [X31 - 0x30]!
	0x034CEA84 STP X22, X21, [X31 + 0x10]
	0x034CEA88 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1544]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43765760
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1560
	019 Move W11, 31
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1544], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ChallengeOptions_SetIncludeActiveChallenges(System.IntPtr handle, System.Boolean value)

Disassembly:
	0x034CEA8C ADRP X22, 0xF11000
	0x034CEA90 ADRP X21, 0xC64000
	0x034CEA94 LDRB W8, [X22 + 0x708]
	0x034CEA98 LDR X21, [X21 + 0x328]
	0x034CEA9C MOV X20, X1
	0x034CEAA0 MOV X19, X0
	0x034CEAA4 TBNZ X8, 0x0, 0x34CEAC8
	0x034CEAA8 ADRP X0, 0xC64000
	0x034CEAAC LDR X0, [X0 + 0x328]
	0x034CEAB0 BL 0x1C16CF4
	0x034CEAB4 ADRP X0, 0xC4D000
	0x034CEAB8 LDR X0, [X0 + 0x850]
	0x034CEABC BL 0x1C16CF4
	0x034CEAC0 MOVZ W8, 0x1
	0x034CEAC4 STRB W8, [X22 + 0x708]
	0x034CEAC8 LDR X0, [X21]
	0x034CEACC ADRP X21, 0xC4D000
	0x034CEAD0 LDR W8, [X0 + 0xE0]
	0x034CEAD4 LDR X21, [X21 + 0x850]
	0x034CEAD8 CBNZ W8, 0x34CEAE0
	0x034CEADC BL 0x1C16DFC
	0x034CEAE0 MOV X0, X20
	0x034CEAE4 BL 0x34B404C
	0x034CEAE8 MOV X20, X0
	0x034CEAEC MOV X0, X19
	0x034CEAF0 MOV X1, X20
	0x034CEAF4 BL 0x34CEB20
	0x034CEAF8 LDR X0, [X21]
	0x034CEAFC LDR W8, [X0 + 0xE0]
	0x034CEB00 CBNZ W8, 0x34CEB08
	0x034CEB04 BL 0x1C16DFC
	0x034CEB08 MOV X0, X20
	0x034CEB0C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1552]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43663360
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3736
	019 Move W11, 47
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1552], X0
	032 And W1, W19, 1
	033 Move X0, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ChallengeOptions_SetIncludeFutureChallenges(System.IntPtr handle, System.Boolean value)

Disassembly:
	0x034CEB10 LDP X22, X21, [X31 + 0x10]
	0x034CEB14 MOV X1, X31
	0x034CEB18 LDR X30, [X31], #0x30
	0x034CEB1C B 0x32C1060
	0x034CEB20 SUB X31, X31, 0x50
	0x034CEB24 STP X30, X21, [X31 + 0x30]
	0x034CEB28 STP X20, X19, [X31 + 0x40]
	0x034CEB2C ADRP X21, 0xF11000
	0x034CEB30 LDR X8, [X21 + 0x710]
	0x034CEB34 MOV X19, X1
	0x034CEB38 MOV X20, X0
	0x034CEB3C CBNZ X8, 0x34CEB88
	0x034CEB40 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CEB44 LDR V0, [X12 + 0x5B8]
	0x034CEB48 ADRP X8, 0xFFFFFFFFFD645000
	0x034CEB4C ADRP X10, 0xFFFFFFFFFD650000
	0x034CEB50 ADD X8, X8, 0xDD2
	0x034CEB54 MOVZ W9, 0x11
	0x034CEB58 ADD X10, X10, 0xD7
	0x034CEB5C MOVZ W11, 0x1F
	0x034CEB60 MOVZ W13, 0x10
	0x034CEB64 ADD X0, X31, 0x0
	0x034CEB68 STP X8, X9, [X31]
	0x034CEB6C STP X10, X11, [X31 + 0x10]
	0x034CEB70 STR W13, [X31 + 0x28]
	0x034CEB74 STR D0, [X31 + 0x20]
	0x034CEB78 STRB W31, [X31 + 0x2C]
	0x034CEB7C BL 0x1C1729C
	0x034CEB80 MOV X8, X0
	0x034CEB84 STR X0, [X21 + 0x710]
	0x034CEB88 MOV X0, X20
	0x034CEB8C MOV X1, X19
	0x034CEB90 BLR X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1560]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43790336
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2293
	019 Move W11, 47
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1560], X0
	032 And W1, W19, 1
	033 Move X0, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ChallengeOptions_SetIncludePastChallenges(System.IntPtr handle, System.Boolean value)

Disassembly:
	0x034CEB94 LDP X20, X19, [X31 + 0x40]
	0x034CEB98 LDP X30, X21, [X31 + 0x30]
	0x034CEB9C ADD X31, X31, 0x50
	0x034CEBA0 RET
	0x034CEBA4 SUB X31, X31, 0x50
	0x034CEBA8 STP X30, X21, [X31 + 0x30]
	0x034CEBAC STP X20, X19, [X31 + 0x40]
	0x034CEBB0 ADRP X21, 0xF11000
	0x034CEBB4 LDR X8, [X21 + 0x718]
	0x034CEBB8 MOV W19, W1
	0x034CEBBC MOV X20, X0
	0x034CEBC0 CBNZ X8, 0x34CEC0C
	0x034CEBC4 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CEBC8 LDR V0, [X12 + 0x5B8]
	0x034CEBCC ADRP X8, 0xFFFFFFFFFD645000
	0x034CEBD0 ADRP X10, 0xFFFFFFFFFD652000
	0x034CEBD4 ADD X8, X8, 0xDD2
	0x034CEBD8 MOVZ W9, 0x11
	0x034CEBDC ADD X10, X10, 0x303
	0x034CEBE0 MOVZ W11, 0x27
	0x034CEBE4 MOVZ W13, 0xC
	0x034CEBE8 ADD X0, X31, 0x0
	0x034CEBEC STP X8, X9, [X31]
	0x034CEBF0 STP X10, X11, [X31 + 0x10]
	0x034CEBF4 STR W13, [X31 + 0x28]
	0x034CEBF8 STR D0, [X31 + 0x20]
	0x034CEBFC STRB W31, [X31 + 0x2C]
	0x034CEC00 BL 0x1C1729C
	0x034CEC04 MOV X8, X0
	0x034CEC08 STR X0, [X21 + 0x718]
	0x034CEC0C MOV X0, X20
	0x034CEC10 MOV W1, W19
	0x034CEC14 BLR X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1568]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43847680
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2258
	019 Move W11, 45
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1568], X0
	032 And W1, W19, 1
	033 Move X0, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ChallengeOptions_SetLeaderboardName(System.IntPtr handle, System.String value)

Disassembly:
	0x034CEC18 LDP X20, X19, [X31 + 0x40]
	0x034CEC1C LDP X30, X21, [X31 + 0x30]
	0x034CEC20 ADD X31, X31, 0x50
	0x034CEC24 RET
	0x034CEC28 STR X30, [X31 - 0x30]!
	0x034CEC2C STP X22, X21, [X31 + 0x10]
	0x034CEC30 STP X20, X19, [X31 + 0x20]
	0x034CEC34 ADRP X22, 0xF11000
	0x034CEC38 ADRP X21, 0xC64000
	0x034CEC3C LDRB W8, [X22 + 0x720]
	0x034CEC40 LDR X21, [X21 + 0x328]
	0x034CEC44 MOV X20, X1
	0x034CEC48 MOV X19, X0
	0x034CEC4C TBNZ X8, 0x0, 0x34CEC70
	0x034CEC50 ADRP X0, 0xC64000
	0x034CEC54 LDR X0, [X0 + 0x328]
	0x034CEC58 BL 0x1C16CF4
	0x034CEC5C ADRP X0, 0xC4D000
	0x034CEC60 LDR X0, [X0 + 0x850]
	0x034CEC64 BL 0x1C16CF4
	0x034CEC68 MOVZ W8, 0x1
	0x034CEC6C STRB W8, [X22 + 0x720]
	0x034CEC70 LDR X0, [X21]
	0x034CEC74 ADRP X21, 0xC4D000
	0x034CEC78 LDR W8, [X0 + 0xE0]
	0x034CEC7C LDR X21, [X21 + 0x850]
	0x034CEC80 CBNZ W8, 0x34CEC88
	0x034CEC84 BL 0x1C16DFC
	0x034CEC88 MOV X0, X20
	0x034CEC8C BL 0x34B404C
	0x034CEC90 MOV X20, X0
	0x034CEC94 MOV X0, X19
	0x034CEC98 MOV X1, X20
	0x034CEC9C BL 0x34CECC8
	0x034CECA0 LDR X0, [X21]
	0x034CECA4 LDR W8, [X0 + 0xE0]
	0x034CECA8 CBNZ W8, 0x34CECB0
	0x034CECAC BL 0x1C16DFC
	0x034CECB0 MOV X0, X20
	0x034CECB4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF12000
	007 Move X21, 0xC65000
	008 Move W8, [X22+1576]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC65000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4E000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1576], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4E000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_ChallengeOptions_SetLeaderboardName_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_ChallengeOptions_SetLeaderboardName_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CECB8 LDP X22, X21, [X31 + 0x10]
	0x034CECBC MOV X1, X31
	0x034CECC0 LDR X30, [X31], #0x30
	0x034CECC4 B 0x32C1060
	0x034CECC8 SUB X31, X31, 0x50
	0x034CECCC STP X30, X21, [X31 + 0x30]
	0x034CECD0 STP X20, X19, [X31 + 0x40]
	0x034CECD4 ADRP X21, 0xF11000
	0x034CECD8 LDR X8, [X21 + 0x728]
	0x034CECDC MOV X19, X1
	0x034CECE0 MOV X20, X0
	0x034CECE4 CBNZ X8, 0x34CED30
	0x034CECE8 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CECEC LDR V0, [X12 + 0x5B8]
	0x034CECF0 ADRP X8, 0xFFFFFFFFFD645000
	0x034CECF4 ADRP X10, 0xFFFFFFFFFD650000
	0x034CECF8 ADD X8, X8, 0xDD2
	0x034CECFC MOVZ W9, 0x11
	0x034CED00 ADD X10, X10, 0xF7
	0x034CED04 MOVZ W11, 0x1C
	0x034CED08 MOVZ W13, 0x10
	0x034CED0C ADD X0, X31, 0x0
	0x034CED10 STP X8, X9, [X31]
	0x034CED14 STP X10, X11, [X31 + 0x10]
	0x034CED18 STR W13, [X31 + 0x28]
	0x034CED1C STR D0, [X31 + 0x20]
	0x034CED20 STRB W31, [X31 + 0x2C]
	0x034CED24 BL 0x1C1729C
	0x034CED28 MOV X8, X0
	0x034CED2C STR X0, [X21 + 0x728]
	0x034CED30 MOV X0, X20
	0x034CED34 MOV X1, X19
	0x034CED38 BLR X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1584]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43831296
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 961
	019 Move W11, 39
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1584], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ChallengeOptions_SetStartDate(System.IntPtr handle, System.DateTime value)

Disassembly:
	0x034CED3C LDP X20, X19, [X31 + 0x40]
	0x034CED40 LDP X30, X21, [X31 + 0x30]
	0x034CED44 ADD X31, X31, 0x50
	0x034CED48 RET
	0x034CED4C SUB X31, X31, 0x40
	0x034CED50 STP X30, X19, [X31 + 0x30]
	0x034CED54 ADRP X19, 0xF11000
	0x034CED58 LDR X8, [X19 + 0x730]
	0x034CED5C CBNZ X8, 0x34CEDA4
	0x034CED60 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CED64 LDR V0, [X12 + 0x5B8]
	0x034CED68 ADRP X8, 0xFFFFFFFFFD645000
	0x034CED6C ADRP X10, 0xFFFFFFFFFD645000
	0x034CED70 ADD X8, X8, 0xDD2
	0x034CED74 MOVZ W9, 0x11
	0x034CED78 ADD X10, X10, 0xF99
	0x034CED7C MOVZ W11, 0x1E
	0x034CED80 ADD X0, X31, 0x0
	0x034CED84 STR W31, [X31 + 0x28]
	0x034CED88 STP X8, X9, [X31]
	0x034CED8C STP X10, X11, [X31 + 0x10]
	0x034CED90 STR D0, [X31 + 0x20]
	0x034CED94 STRB W31, [X31 + 0x2C]
	0x034CED98 BL 0x1C1729C
	0x034CED9C MOV X8, X0
	0x034CEDA0 STR X0, [X19 + 0x730]
	0x034CEDA4 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF12000
	007 Move X22, 0xC65000
	008 Move W8, [X21+1592]
	009 Move X22, [X22+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC65000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1592], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Call CAPI.DateTimeToNative, X0
	028 Move X1, X0
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]

Method: System.Void ovr_ChallengeOptions_SetStartDate_Native(System.IntPtr handle, System.UInt64 value)

Disassembly:
	0x034CEDA8 LDP X30, X19, [X31 + 0x30]
	0x034CEDAC ADD X31, X31, 0x40
	0x034CEDB0 RET
	0x034CEDB4 SUB X31, X31, 0x50
	0x034CEDB8 STR X30, [X31 + 0x30]
	0x034CEDBC STP X20, X19, [X31 + 0x40]
	0x034CEDC0 ADRP X20, 0xF11000
	0x034CEDC4 LDR X8, [X20 + 0x738]
	0x034CEDC8 MOV X19, X0
	0x034CEDCC CBNZ X8, 0x34CEE18
	0x034CEDD0 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CEDD4 LDR V0, [X12 + 0x5B8]
	0x034CEDD8 ADRP X8, 0xFFFFFFFFFD645000
	0x034CEDDC ADRP X10, 0xFFFFFFFFFD65B000
	0x034CEDE0 ADD X8, X8, 0xDD2
	0x034CEDE4 MOVZ W9, 0x11
	0x034CEDE8 ADD X10, X10, 0xEC8
	0x034CEDEC MOVZ W11, 0x1F
	0x034CEDF0 MOVZ W13, 0x8
	0x034CEDF4 ADD X0, X31, 0x0
	0x034CEDF8 STP X8, X9, [X31]
	0x034CEDFC STP X10, X11, [X31 + 0x10]
	0x034CEE00 STR W13, [X31 + 0x28]
	0x034CEE04 STR D0, [X31 + 0x20]
	0x034CEE08 STRB W31, [X31 + 0x2C]
	0x034CEE0C BL 0x1C1729C
	0x034CEE10 MOV X8, X0
	0x034CEE14 STR X0, [X20 + 0x738]
	0x034CEE18 MOV X0, X19
	0x034CEE1C BLR X8
	0x034CEE20 LDP X20, X19, [X31 + 0x40]
	0x034CEE24 LDR X30, [X31 + 0x30]
	0x034CEE28 ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1600]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43700224
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 712
	019 Move W11, 33
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1600], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ChallengeOptions_SetTitle(System.IntPtr handle, System.String value)

Disassembly:
	0x034CEE2C RET
	0x034CEE30 STR X30, [X31 - 0x30]!
	0x034CEE34 STP X22, X21, [X31 + 0x10]
	0x034CEE38 STP X20, X19, [X31 + 0x20]
	0x034CEE3C ADRP X22, 0xF11000
	0x034CEE40 ADRP X21, 0xC64000
	0x034CEE44 LDRB W8, [X22 + 0x740]
	0x034CEE48 LDR X21, [X21 + 0x328]
	0x034CEE4C MOV X20, X1
	0x034CEE50 MOV X19, X0
	0x034CEE54 TBNZ X8, 0x0, 0x34CEE78
	0x034CEE58 ADRP X0, 0xC64000
	0x034CEE5C LDR X0, [X0 + 0x328]
	0x034CEE60 BL 0x1C16CF4
	0x034CEE64 ADRP X0, 0xC4D000
	0x034CEE68 LDR X0, [X0 + 0x850]
	0x034CEE6C BL 0x1C16CF4
	0x034CEE70 MOVZ W8, 0x1
	0x034CEE74 STRB W8, [X22 + 0x740]
	0x034CEE78 LDR X0, [X21]
	0x034CEE7C ADRP X21, 0xC4D000
	0x034CEE80 LDR W8, [X0 + 0xE0]
	0x034CEE84 LDR X21, [X21 + 0x850]
	0x034CEE88 CBNZ W8, 0x34CEE90
	0x034CEE8C BL 0x1C16DFC
	0x034CEE90 MOV X0, X20
	0x034CEE94 BL 0x34B404C
	0x034CEE98 MOV X20, X0
	0x034CEE9C MOV X0, X19
	0x034CEEA0 MOV X1, X20
	0x034CEEA4 BL 0x34CEED0
	0x034CEEA8 LDR X0, [X21]
	0x034CEEAC LDR W8, [X0 + 0xE0]
	0x034CEEB0 CBNZ W8, 0x34CEEB8
	0x034CEEB4 BL 0x1C16DFC
	0x034CEEB8 MOV X0, X20
	0x034CEEBC LDP X20, X19, [X31 + 0x20]
	0x034CEEC0 LDP X22, X21, [X31 + 0x10]
	0x034CEEC4 MOV X1, X31
	0x034CEEC8 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF12000
	007 Move X21, 0xC65000
	008 Move W8, [X22+1608]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC65000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4E000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1608], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4E000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_ChallengeOptions_SetTitle_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_ChallengeOptions_SetTitle_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CEECC B 0x32C1060
	0x034CEED0 SUB X31, X31, 0x50
	0x034CEED4 STP X30, X21, [X31 + 0x30]
	0x034CEED8 STP X20, X19, [X31 + 0x40]
	0x034CEEDC ADRP X21, 0xF11000
	0x034CEEE0 LDR X8, [X21 + 0x748]
	0x034CEEE4 MOV X19, X1
	0x034CEEE8 MOV X20, X0
	0x034CEEEC CBNZ X8, 0x34CEF38
	0x034CEEF0 ADRP X12, 0xFFFFFFFFFD61F000
	0x034CEEF4 LDR V0, [X12 + 0x5B8]
	0x034CEEF8 ADRP X8, 0xFFFFFFFFFD645000
	0x034CEEFC ADRP X10, 0xFFFFFFFFFD650000
	0x034CEF00 ADD X8, X8, 0xDD2
	0x034CEF04 MOVZ W9, 0x11
	0x034CEF08 ADD X10, X10, 0x114
	0x034CEF0C MOVZ W11, 0x22
	0x034CEF10 MOVZ W13, 0x10
	0x034CEF14 ADD X0, X31, 0x0
	0x034CEF18 STP X8, X9, [X31]
	0x034CEF1C STP X10, X11, [X31 + 0x10]
	0x034CEF20 STR W13, [X31 + 0x28]
	0x034CEF24 STR D0, [X31 + 0x20]
	0x034CEF28 STRB W31, [X31 + 0x2C]
	0x034CEF2C BL 0x1C1729C
	0x034CEF30 MOV X8, X0
	0x034CEF34 STR X0, [X21 + 0x748]
	0x034CEF38 MOV X0, X20
	0x034CEF3C MOV X1, X19
	0x034CEF40 BLR X8
	0x034CEF44 LDP X20, X19, [X31 + 0x40]
	0x034CEF48 LDP X30, X21, [X31 + 0x30]
	0x034CEF4C ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1616]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43757568
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 582
	019 Move W11, 29
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1616], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ChallengeOptions_SetViewerFilter(System.IntPtr handle, Oculus.Platform.ChallengeViewerFilter value)

Disassembly:
	0x034CEF50 RET
	0x034CEF54 STR X30, [X31 - 0x30]!
	0x034CEF58 STP X22, X21, [X31 + 0x10]
	0x034CEF5C STP X20, X19, [X31 + 0x20]
	0x034CEF60 ADRP X22, 0xF11000
	0x034CEF64 ADRP X21, 0xC64000
	0x034CEF68 LDRB W8, [X22 + 0x750]
	0x034CEF6C LDR X21, [X21 + 0x328]
	0x034CEF70 MOV X20, X1
	0x034CEF74 MOV X19, X0
	0x034CEF78 TBNZ X8, 0x0, 0x34CEF9C
	0x034CEF7C ADRP X0, 0xC64000
	0x034CEF80 LDR X0, [X0 + 0x328]
	0x034CEF84 BL 0x1C16CF4
	0x034CEF88 ADRP X0, 0xC4D000
	0x034CEF8C LDR X0, [X0 + 0x850]
	0x034CEF90 BL 0x1C16CF4
	0x034CEF94 MOVZ W8, 0x1
	0x034CEF98 STRB W8, [X22 + 0x750]
	0x034CEF9C LDR X0, [X21]
	0x034CEFA0 ADRP X21, 0xC4D000
	0x034CEFA4 LDR W8, [X0 + 0xE0]
	0x034CEFA8 LDR X21, [X21 + 0x850]
	0x034CEFAC CBNZ W8, 0x34CEFB4
	0x034CEFB0 BL 0x1C16DFC
	0x034CEFB4 MOV X0, X20
	0x034CEFB8 BL 0x34B404C
	0x034CEFBC MOV X20, X0
	0x034CEFC0 MOV X0, X19
	0x034CEFC4 MOV X1, X20
	0x034CEFC8 BL 0x34CEFF4
	0x034CEFCC LDR X0, [X21]
	0x034CEFD0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1624]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43896832
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 999
	019 Move W11, 36
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1624], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_ChallengeOptions_SetVisibility(System.IntPtr handle, Oculus.Platform.ChallengeVisibility value)

Disassembly:
	0x034CEFD4 CBNZ W8, 0x34CEFDC
	0x034CEFD8 BL 0x1C16DFC
	0x034CEFDC MOV X0, X20
	0x034CEFE0 LDP X20, X19, [X31 + 0x20]
	0x034CEFE4 LDP X22, X21, [X31 + 0x10]
	0x034CEFE8 MOV X1, X31
	0x034CEFEC LDR X30, [X31], #0x30
	0x034CEFF0 B 0x32C1060
	0x034CEFF4 SUB X31, X31, 0x50
	0x034CEFF8 STP X30, X21, [X31 + 0x30]
	0x034CEFFC STP X20, X19, [X31 + 0x40]
	0x034CF000 ADRP X21, 0xF10000
	0x034CF004 LDR X8, [X21 + 0x758]
	0x034CF008 MOV X19, X1
	0x034CF00C MOV X20, X0
	0x034CF010 CBNZ X8, 0x34CF05C
	0x034CF014 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF018 LDR V0, [X12 + 0x5B8]
	0x034CF01C ADRP X8, 0xFFFFFFFFFD644000
	0x034CF020 ADRP X10, 0xFFFFFFFFFD64A000
	0x034CF024 ADD X8, X8, 0xDD2
	0x034CF028 MOVZ W9, 0x11
	0x034CF02C ADD X10, X10, 0xFC5
	0x034CF030 MOVZ W11, 0x32
	0x034CF034 MOVZ W13, 0x10
	0x034CF038 ADD X0, X31, 0x0
	0x034CF03C STP X8, X9, [X31]
	0x034CF040 STP X10, X11, [X31 + 0x10]
	0x034CF044 STR W13, [X31 + 0x28]
	0x034CF048 STR D0, [X31 + 0x20]
	0x034CF04C STRB W31, [X31 + 0x2C]
	0x034CF050 BL 0x1C1729C
	0x034CF054 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF12000
	007 Move X8, [X21+1632]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43909120
	013 Move V0, [X12+1464]
	014 Move X8, -43753472
	015 Move X10, -43802624
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1801
	019 Move W11, 34
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1632], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_GroupPresenceOptions_Create()

Disassembly:
	0x034CF058 STR X0, [X21 + 0x758]
	0x034CF05C MOV X0, X20
	0x034CF060 MOV X1, X19
	0x034CF064 BLR X8
	0x034CF068 LDP X20, X19, [X31 + 0x40]
	0x034CF06C LDP X30, X21, [X31 + 0x30]
	0x034CF070 ADD X31, X31, 0x50
	0x034CF074 RET
	0x034CF078 SUB X31, X31, 0x50
	0x034CF07C STP X30, X21, [X31 + 0x30]
	0x034CF080 STP X20, X19, [X31 + 0x40]
	0x034CF084 ADRP X21, 0xF10000
	0x034CF088 LDR X8, [X21 + 0x760]
	0x034CF08C MOV W19, W1
	0x034CF090 MOV X20, X0
	0x034CF094 CBNZ X8, 0x34CF0E0
	0x034CF098 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF09C LDR V0, [X12 + 0x5B8]
	0x034CF0A0 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF0A4 ADRP X10, 0xFFFFFFFFFD621000
	0x034CF0A8 ADD X8, X8, 0xDD2
	0x034CF0AC MOVZ W9, 0x11
	0x034CF0B0 ADD X10, X10, 0x40C
	0x034CF0B4 MOVZ W11, 0x25
	0x034CF0B8 MOVZ W13, 0xC
	0x034CF0BC ADD X0, X31, 0x0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF11000
	005 Move X8, [X19+1640]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43913216
	009 Move V0, [X12+1464]
	010 Move X8, -43757568
	011 Move X10, -43757568
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3961
	015 Move W11, 31
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1640], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_GroupPresenceOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034CF0C0 STP X8, X9, [X31]
	0x034CF0C4 STP X10, X11, [X31 + 0x10]
	0x034CF0C8 STR W13, [X31 + 0x28]
	0x034CF0CC STR D0, [X31 + 0x20]
	0x034CF0D0 STRB W31, [X31 + 0x2C]
	0x034CF0D4 BL 0x1C1729C
	0x034CF0D8 MOV X8, X0
	0x034CF0DC STR X0, [X21 + 0x760]
	0x034CF0E0 AND W1, W19, 0x1
	0x034CF0E4 MOV X0, X20
	0x034CF0E8 BLR X8
	0x034CF0EC LDP X20, X19, [X31 + 0x40]
	0x034CF0F0 LDP X30, X21, [X31 + 0x30]
	0x034CF0F4 ADD X31, X31, 0x50
	0x034CF0F8 RET
	0x034CF0FC SUB X31, X31, 0x40
	0x034CF100 STP X30, X19, [X31 + 0x30]
	0x034CF104 ADRP X19, 0xF10000
	0x034CF108 LDR X8, [X19 + 0x768]
	0x034CF10C CBNZ X8, 0x34CF154
	0x034CF110 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF114 LDR V0, [X12 + 0x5B8]
	0x034CF118 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF11C ADRP X10, 0xFFFFFFFFFD65A000
	0x034CF120 ADD X8, X8, 0xDD2
	0x034CF124 MOVZ W9, 0x11
	0x034CF128 ADD X10, X10, 0xEE8
	0x034CF12C MOVZ W11, 0x18
	0x034CF130 ADD X0, X31, 0x0
	0x034CF134 STR W31, [X31 + 0x28]
	0x034CF138 STP X8, X9, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF11000
	006 Move X8, [X20+1648]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43913216
	011 Move V0, [X12+1464]
	012 Move X8, -43757568
	013 Move X10, -43868160
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2093
	017 Move W11, 32
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1648], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_GroupPresenceOptions_SetDeeplinkMessageOverride(System.IntPtr handle, System.String value)

Disassembly:
	0x034CF13C STP X10, X11, [X31 + 0x10]
	0x034CF140 STR D0, [X31 + 0x20]
	0x034CF144 STRB W31, [X31 + 0x2C]
	0x034CF148 BL 0x1C1729C
	0x034CF14C MOV X8, X0
	0x034CF150 STR X0, [X19 + 0x768]
	0x034CF154 BLR X8
	0x034CF158 LDP X30, X19, [X31 + 0x30]
	0x034CF15C ADD X31, X31, 0x40
	0x034CF160 RET
	0x034CF164 SUB X31, X31, 0x50
	0x034CF168 STR X30, [X31 + 0x30]
	0x034CF16C STP X20, X19, [X31 + 0x40]
	0x034CF170 ADRP X20, 0xF10000
	0x034CF174 LDR X8, [X20 + 0x770]
	0x034CF178 MOV X19, X0
	0x034CF17C CBNZ X8, 0x34CF1C8
	0x034CF180 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF184 LDR V0, [X12 + 0x5B8]
	0x034CF188 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF18C ADRP X10, 0xFFFFFFFFFD633000
	0x034CF190 ADD X8, X8, 0xDD2
	0x034CF194 MOVZ W9, 0x11
	0x034CF198 ADD X10, X10, 0x48A
	0x034CF19C MOVZ W11, 0x19
	0x034CF1A0 MOVZ W13, 0x8
	0x034CF1A4 ADD X0, X31, 0x0
	0x034CF1A8 STP X8, X9, [X31]
	0x034CF1AC STP X10, X11, [X31 + 0x10]
	0x034CF1B0 STR W13, [X31 + 0x28]
	0x034CF1B4 STR D0, [X31 + 0x20]
	0x034CF1B8 STRB W31, [X31 + 0x2C]
	0x034CF1BC BL 0x1C1729C
	0x034CF1C0 MOV X8, X0
	0x034CF1C4 STR X0, [X20 + 0x770]
	0x034CF1C8 MOV X0, X19
	0x034CF1CC BLR X8
	0x034CF1D0 LDP X20, X19, [X31 + 0x40]
	0x034CF1D4 LDR X30, [X31 + 0x30]
	0x034CF1D8 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF11000
	007 Move X21, 0xC64000
	008 Move W8, [X22+1656]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC64000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4D000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1656], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CF1DC RET
	0x034CF1E0 SUB X31, X31, 0x50
	0x034CF1E4 STP X30, X21, [X31 + 0x30]
	0x034CF1E8 STP X20, X19, [X31 + 0x40]
	0x034CF1EC ADRP X21, 0xF10000
	0x034CF1F0 LDR X8, [X21 + 0x778]
	0x034CF1F4 MOV X19, X1
	0x034CF1F8 MOV X20, X0
	0x034CF1FC CBNZ X8, 0x34CF248
	0x034CF200 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF204 LDR V0, [X12 + 0x5B8]
	0x034CF208 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF20C ADRP X10, 0xFFFFFFFFFD637000
	0x034CF210 ADD X8, X8, 0xDD2
	0x034CF214 MOVZ W9, 0x11
	0x034CF218 ADD X10, X10, 0x701
	0x034CF21C MOVZ W11, 0x22
	0x034CF220 MOVZ W13, 0x10
	0x034CF224 ADD X0, X31, 0x0
	0x034CF228 STP X8, X9, [X31]
	0x034CF22C STP X10, X11, [X31 + 0x10]
	0x034CF230 STR W13, [X31 + 0x28]
	0x034CF234 STR D0, [X31 + 0x20]
	0x034CF238 STRB W31, [X31 + 0x2C]
	0x034CF23C BL 0x1C1729C
	0x034CF240 MOV X8, X0
	0x034CF244 STR X0, [X21 + 0x778]
	0x034CF248 MOV X0, X20
	0x034CF24C MOV X1, X19
	0x034CF250 BLR X8
	0x034CF254 LDP X20, X19, [X31 + 0x40]
	0x034CF258 LDP X30, X21, [X31 + 0x30]
	0x034CF25C ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1664]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43851776
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 2304
	019 Move W11, 51
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1664], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_GroupPresenceOptions_SetDestinationApiName(System.IntPtr handle, System.String value)

Disassembly:
	0x034CF260 RET
	0x034CF264 SUB X31, X31, 0x50
	0x034CF268 STR X30, [X31 + 0x30]
	0x034CF26C STP X20, X19, [X31 + 0x40]
	0x034CF270 ADRP X20, 0xF10000
	0x034CF274 LDR X8, [X20 + 0x780]
	0x034CF278 MOV X19, X0
	0x034CF27C CBNZ X8, 0x34CF2C8
	0x034CF280 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF284 LDR V0, [X12 + 0x5B8]
	0x034CF288 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF28C ADRP X10, 0xFFFFFFFFFD633000
	0x034CF290 ADD X8, X8, 0xDD2
	0x034CF294 MOVZ W9, 0x11
	0x034CF298 ADD X10, X10, 0x4A4
	0x034CF29C MOVZ W11, 0x25
	0x034CF2A0 MOVZ W13, 0x8
	0x034CF2A4 ADD X0, X31, 0x0
	0x034CF2A8 STP X8, X9, [X31]
	0x034CF2AC STP X10, X11, [X31 + 0x10]
	0x034CF2B0 STR W13, [X31 + 0x28]
	0x034CF2B4 STR D0, [X31 + 0x20]
	0x034CF2B8 STRB W31, [X31 + 0x2C]
	0x034CF2BC BL 0x1C1729C
	0x034CF2C0 MOV X8, X0
	0x034CF2C4 STR X0, [X20 + 0x780]
	0x034CF2C8 MOV X0, X19
	0x034CF2CC BLR X8
	0x034CF2D0 LDP X20, X19, [X31 + 0x40]
	0x034CF2D4 LDR X30, [X31 + 0x30]
	0x034CF2D8 ADD X31, X31, 0x50
	0x034CF2DC RET
	0x034CF2E0 SUB X31, X31, 0x40
	0x034CF2E4 STP X30, X19, [X31 + 0x30]
	0x034CF2E8 ADRP X19, 0xF10000
	0x034CF2EC LDR X8, [X19 + 0x788]
	0x034CF2F0 CBNZ X8, 0x34CF338
	0x034CF2F4 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF2F8 LDR V0, [X12 + 0x5B8]
	0x034CF2FC ADRP X8, 0xFFFFFFFFFD644000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF11000
	007 Move X21, 0xC64000
	008 Move W8, [X22+1672]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC64000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4D000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1672], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_GroupPresenceOptions_SetDestinationApiName_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_GroupPresenceOptions_SetDestinationApiName_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CF300 ADRP X10, 0xFFFFFFFFFD631000
	0x034CF304 ADD X8, X8, 0xDD2
	0x034CF308 MOVZ W9, 0x11
	0x034CF30C ADD X10, X10, 0x3E9
	0x034CF310 MOVZ W11, 0x16
	0x034CF314 ADD X0, X31, 0x0
	0x034CF318 STR W31, [X31 + 0x28]
	0x034CF31C STP X8, X9, [X31]
	0x034CF320 STP X10, X11, [X31 + 0x10]
	0x034CF324 STR D0, [X31 + 0x20]
	0x034CF328 STRB W31, [X31 + 0x2C]
	0x034CF32C BL 0x1C1729C
	0x034CF330 MOV X8, X0
	0x034CF334 STR X0, [X19 + 0x788]
	0x034CF338 BLR X8
	0x034CF33C LDP X30, X19, [X31 + 0x30]
	0x034CF340 ADD X31, X31, 0x40
	0x034CF344 RET
	0x034CF348 SUB X31, X31, 0x50
	0x034CF34C STR X30, [X31 + 0x30]
	0x034CF350 STP X20, X19, [X31 + 0x40]
	0x034CF354 ADRP X20, 0xF10000
	0x034CF358 LDR X8, [X20 + 0x790]
	0x034CF35C MOV X19, X0
	0x034CF360 CBNZ X8, 0x34CF3AC
	0x034CF364 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF368 LDR V0, [X12 + 0x5B8]
	0x034CF36C ADRP X8, 0xFFFFFFFFFD644000
	0x034CF370 ADRP X10, 0xFFFFFFFFFD643000
	0x034CF374 ADD X8, X8, 0xDD2
	0x034CF378 MOVZ W9, 0x11
	0x034CF37C ADD X10, X10, 0x2D8
	0x034CF380 MOVZ W11, 0x17

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1680]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43761664
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 612
	019 Move W11, 46
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1680], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_GroupPresenceOptions_SetIsJoinable(System.IntPtr handle, System.Boolean value)

Disassembly:
	0x034CF384 MOVZ W13, 0x8
	0x034CF388 ADD X0, X31, 0x0
	0x034CF38C STP X8, X9, [X31]
	0x034CF390 STP X10, X11, [X31 + 0x10]
	0x034CF394 STR W13, [X31 + 0x28]
	0x034CF398 STR D0, [X31 + 0x20]
	0x034CF39C STRB W31, [X31 + 0x2C]
	0x034CF3A0 BL 0x1C1729C
	0x034CF3A4 MOV X8, X0
	0x034CF3A8 STR X0, [X20 + 0x790]
	0x034CF3AC MOV X0, X19
	0x034CF3B0 BLR X8
	0x034CF3B4 LDP X20, X19, [X31 + 0x40]
	0x034CF3B8 LDR X30, [X31 + 0x30]
	0x034CF3BC ADD X31, X31, 0x50
	0x034CF3C0 RET
	0x034CF3C4 SUB X31, X31, 0x50
	0x034CF3C8 STP X30, X21, [X31 + 0x30]
	0x034CF3CC STP X20, X19, [X31 + 0x40]
	0x034CF3D0 ADRP X21, 0xF10000
	0x034CF3D4 LDR X8, [X21 + 0x798]
	0x034CF3D8 MOV W19, W1
	0x034CF3DC MOV X20, X0
	0x034CF3E0 CBNZ X8, 0x34CF42C
	0x034CF3E4 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF3E8 LDR V0, [X12 + 0x5B8]
	0x034CF3EC ADRP X8, 0xFFFFFFFFFD644000
	0x034CF3F0 ADRP X10, 0xFFFFFFFFFD633000
	0x034CF3F4 ADD X8, X8, 0xDD2
	0x034CF3F8 MOVZ W9, 0x11
	0x034CF3FC ADD X10, X10, 0x4CA
	0x034CF400 MOVZ W11, 0x1B
	0x034CF404 MOVZ W13, 0xC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1688]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43827200
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1123
	019 Move W11, 38
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1688], X0
	032 And W1, W19, 1
	033 Move X0, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_GroupPresenceOptions_SetLobbySessionId(System.IntPtr handle, System.String value)

Disassembly:
	0x034CF408 ADD X0, X31, 0x0
	0x034CF40C STP X8, X9, [X31]
	0x034CF410 STP X10, X11, [X31 + 0x10]
	0x034CF414 STR W13, [X31 + 0x28]
	0x034CF418 STR D0, [X31 + 0x20]
	0x034CF41C STRB W31, [X31 + 0x2C]
	0x034CF420 BL 0x1C1729C
	0x034CF424 MOV X8, X0
	0x034CF428 STR X0, [X21 + 0x798]
	0x034CF42C MOV X0, X20
	0x034CF430 MOV W1, W19
	0x034CF434 BLR X8
	0x034CF438 LDP X20, X19, [X31 + 0x40]
	0x034CF43C LDP X30, X21, [X31 + 0x30]
	0x034CF440 ADD X31, X31, 0x50
	0x034CF444 RET
	0x034CF448 SUB X31, X31, 0x50
	0x034CF44C STP X30, X21, [X31 + 0x30]
	0x034CF450 STP X20, X19, [X31 + 0x40]
	0x034CF454 ADRP X21, 0xF10000
	0x034CF458 LDR X8, [X21 + 0x7A0]
	0x034CF45C MOV W19, W1
	0x034CF460 MOV X20, X0
	0x034CF464 CBNZ X8, 0x34CF4B0
	0x034CF468 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF46C LDR V0, [X12 + 0x5B8]
	0x034CF470 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF474 ADRP X10, 0xFFFFFFFFFD657000
	0x034CF478 ADD X8, X8, 0xDD2
	0x034CF47C MOVZ W9, 0x11
	0x034CF480 ADD X10, X10, 0x547
	0x034CF484 MOVZ W11, 0x22
	0x034CF488 MOVZ W13, 0xC
	0x034CF48C ADD X0, X31, 0x0
	0x034CF490 STP X8, X9, [X31]
	0x034CF494 STP X10, X11, [X31 + 0x10]
	0x034CF498 STR W13, [X31 + 0x28]
	0x034CF49C STR D0, [X31 + 0x20]
	0x034CF4A0 STRB W31, [X31 + 0x2C]
	0x034CF4A4 BL 0x1C1729C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF11000
	007 Move X21, 0xC64000
	008 Move W8, [X22+1696]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC64000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4D000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1696], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_GroupPresenceOptions_SetLobbySessionId_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_GroupPresenceOptions_SetLobbySessionId_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CF4A8 MOV X8, X0
	0x034CF4AC STR X0, [X21 + 0x7A0]
	0x034CF4B0 MOV X0, X20
	0x034CF4B4 MOV W1, W19
	0x034CF4B8 BLR X8
	0x034CF4BC LDP X20, X19, [X31 + 0x40]
	0x034CF4C0 LDP X30, X21, [X31 + 0x30]
	0x034CF4C4 ADD X31, X31, 0x50
	0x034CF4C8 RET
	0x034CF4CC SUB X31, X31, 0x50
	0x034CF4D0 STR X30, [X31 + 0x30]
	0x034CF4D4 STP X20, X19, [X31 + 0x40]
	0x034CF4D8 ADRP X20, 0xF10000
	0x034CF4DC LDR X8, [X20 + 0x7A8]
	0x034CF4E0 MOV X19, X0
	0x034CF4E4 CBNZ X8, 0x34CF530
	0x034CF4E8 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF4EC LDR V0, [X12 + 0x5B8]
	0x034CF4F0 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF4F4 ADRP X10, 0xFFFFFFFFFD62D000
	0x034CF4F8 ADD X8, X8, 0xDD2
	0x034CF4FC MOVZ W9, 0x11
	0x034CF500 ADD X10, X10, 0x934
	0x034CF504 MOVZ W11, 0x25
	0x034CF508 MOVZ W13, 0x8
	0x034CF50C ADD X0, X31, 0x0
	0x034CF510 STP X8, X9, [X31]
	0x034CF514 STP X10, X11, [X31 + 0x10]
	0x034CF518 STR W13, [X31 + 0x28]
	0x034CF51C STR D0, [X31 + 0x20]
	0x034CF520 STRB W31, [X31 + 0x2C]
	0x034CF524 BL 0x1C1729C
	0x034CF528 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1704]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43761664
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 659
	019 Move W11, 42
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1704], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_GroupPresenceOptions_SetMatchSessionId(System.IntPtr handle, System.String value)

Disassembly:
	0x034CF52C STR X0, [X20 + 0x7A8]
	0x034CF530 MOV X0, X19
	0x034CF534 BLR X8
	0x034CF538 LDP X20, X19, [X31 + 0x40]
	0x034CF53C LDR X30, [X31 + 0x30]
	0x034CF540 ADD X31, X31, 0x50
	0x034CF544 RET
	0x034CF548 SUB X31, X31, 0x50
	0x034CF54C STP X30, X21, [X31 + 0x30]
	0x034CF550 STP X20, X19, [X31 + 0x40]
	0x034CF554 ADRP X21, 0xF10000
	0x034CF558 LDR X8, [X21 + 0x7B0]
	0x034CF55C MOV W19, W1
	0x034CF560 MOV X20, X0
	0x034CF564 CBNZ X8, 0x34CF5B0
	0x034CF568 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF56C LDR V0, [X12 + 0x5B8]
	0x034CF570 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF574 ADRP X10, 0xFFFFFFFFFD64F000
	0x034CF578 ADD X8, X8, 0xDD2
	0x034CF57C MOVZ W9, 0x11
	0x034CF580 ADD X10, X10, 0x137
	0x034CF584 MOVZ W11, 0x1D
	0x034CF588 MOVZ W13, 0xC
	0x034CF58C ADD X0, X31, 0x0
	0x034CF590 STP X8, X9, [X31]
	0x034CF594 STP X10, X11, [X31 + 0x10]
	0x034CF598 STR W13, [X31 + 0x28]
	0x034CF59C STR D0, [X31 + 0x20]
	0x034CF5A0 STRB W31, [X31 + 0x2C]
	0x034CF5A4 BL 0x1C1729C
	0x034CF5A8 MOV X8, X0
	0x034CF5AC STR X0, [X21 + 0x7B0]
	0x034CF5B0 MOV X0, X20
	0x034CF5B4 MOV W1, W19
	0x034CF5B8 BLR X8
	0x034CF5BC LDP X20, X19, [X31 + 0x40]
	0x034CF5C0 LDP X30, X21, [X31 + 0x30]
	0x034CF5C4 ADD X31, X31, 0x50
	0x034CF5C8 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF11000
	007 Move X21, 0xC64000
	008 Move W8, [X22+1712]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC64000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4D000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1712], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_GroupPresenceOptions_SetMatchSessionId_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_GroupPresenceOptions_SetMatchSessionId_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CF5CC SUB X31, X31, 0x40
	0x034CF5D0 STP X30, X19, [X31 + 0x30]
	0x034CF5D4 ADRP X19, 0xF10000
	0x034CF5D8 LDR X8, [X19 + 0x7B8]
	0x034CF5DC CBNZ X8, 0x34CF624
	0x034CF5E0 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF5E4 LDR V0, [X12 + 0x5B8]
	0x034CF5E8 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF5EC ADRP X10, 0xFFFFFFFFFD643000
	0x034CF5F0 ADD X8, X8, 0xDD2
	0x034CF5F4 MOVZ W9, 0x11
	0x034CF5F8 ADD X10, X10, 0x2F0
	0x034CF5FC MOVZ W11, 0x16
	0x034CF600 ADD X0, X31, 0x0
	0x034CF604 STR W31, [X31 + 0x28]
	0x034CF608 STP X8, X9, [X31]
	0x034CF60C STP X10, X11, [X31 + 0x10]
	0x034CF610 STR D0, [X31 + 0x20]
	0x034CF614 STRB W31, [X31 + 0x2C]
	0x034CF618 BL 0x1C1729C
	0x034CF61C MOV X8, X0
	0x034CF620 STR X0, [X19 + 0x7B8]
	0x034CF624 BLR X8
	0x034CF628 LDP X30, X19, [X31 + 0x30]
	0x034CF62C ADD X31, X31, 0x40
	0x034CF630 RET
	0x034CF634 SUB X31, X31, 0x50
	0x034CF638 STR X30, [X31 + 0x30]
	0x034CF63C STP X20, X19, [X31 + 0x40]
	0x034CF640 ADRP X20, 0xF10000
	0x034CF644 LDR X8, [X20 + 0x7C0]
	0x034CF648 MOV X19, X0
	0x034CF64C CBNZ X8, 0x34CF698

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1720]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43749376
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 3782
	019 Move W11, 42
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1720], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_InviteOptions_Create()

Disassembly:
	0x034CF650 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF654 LDR V0, [X12 + 0x5B8]
	0x034CF658 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF65C ADRP X10, 0xFFFFFFFFFD635000
	0x034CF660 ADD X8, X8, 0xDD2
	0x034CF664 MOVZ W9, 0x11
	0x034CF668 ADD X10, X10, 0x8CE
	0x034CF66C MOVZ W11, 0x17
	0x034CF670 MOVZ W13, 0x8
	0x034CF674 ADD X0, X31, 0x0
	0x034CF678 STP X8, X9, [X31]
	0x034CF67C STP X10, X11, [X31 + 0x10]
	0x034CF680 STR W13, [X31 + 0x28]
	0x034CF684 STR D0, [X31 + 0x20]
	0x034CF688 STRB W31, [X31 + 0x2C]
	0x034CF68C BL 0x1C1729C
	0x034CF690 MOV X8, X0
	0x034CF694 STR X0, [X20 + 0x7C0]
	0x034CF698 MOV X0, X19
	0x034CF69C BLR X8
	0x034CF6A0 LDP X20, X19, [X31 + 0x40]
	0x034CF6A4 LDR X30, [X31 + 0x30]
	0x034CF6A8 ADD X31, X31, 0x50
	0x034CF6AC RET
	0x034CF6B0 SUB X31, X31, 0x50
	0x034CF6B4 STP X30, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF11000
	005 Move X8, [X19+1728]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43913216
	009 Move V0, [X12+1464]
	010 Move X8, -43757568
	011 Move X10, -43704320
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 746
	015 Move W11, 24
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1728], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_InviteOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034CF6B8 STP X20, X19, [X31 + 0x40]
	0x034CF6BC ADRP X21, 0xF10000
	0x034CF6C0 LDR X8, [X21 + 0x7C8]
	0x034CF6C4 MOV W19, W1
	0x034CF6C8 MOV X20, X0
	0x034CF6CC CBNZ X8, 0x34CF718
	0x034CF6D0 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF6D4 LDR V0, [X12 + 0x5B8]
	0x034CF6D8 ADRP X8, 0xFFFFFFFFFD644000
	0x034CF6DC ADRP X10, 0xFFFFFFFFFD639000
	0x034CF6E0 ADD X8, X8, 0xDD2
	0x034CF6E4 MOVZ W9, 0x11
	0x034CF6E8 ADD X10, X10, 0x72C
	0x034CF6EC MOVZ W11, 0x2B
	0x034CF6F0 MOVZ W13, 0xC
	0x034CF6F4 ADD X0, X31, 0x0
	0x034CF6F8 STP X8, X9, [X31]
	0x034CF6FC STP X10, X11, [X31 + 0x10]
	0x034CF700 STR W13, [X31 + 0x28]
	0x034CF704 STR D0, [X31 + 0x20]
	0x034CF708 STRB W31, [X31 + 0x2C]
	0x034CF70C BL 0x1C1729C
	0x034CF710 MOV X8, X0
	0x034CF714 STR X0, [X21 + 0x7C8]
	0x034CF718 MOV X0, X20
	0x034CF71C MOV W1, W19
	0x034CF720 BLR X8
	0x034CF724 LDP X20, X19, [X31 + 0x40]
	0x034CF728 LDP X30, X21, [X31 + 0x30]
	0x034CF72C ADD X31, X31, 0x50
	0x034CF730 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF11000
	006 Move X8, [X20+1736]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43913216
	011 Move V0, [X12+1464]
	012 Move X8, -43757568
	013 Move X10, -43761664
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 702
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1736], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_InviteOptions_AddSuggestedUser(System.IntPtr handle, System.UInt64 value)

Disassembly:
	0x034CF734 SUB X31, X31, 0x50
	0x034CF738 STP X30, X21, [X31 + 0x30]
	0x034CF73C STP X20, X19, [X31 + 0x40]
	0x034CF740 ADRP X21, 0xF10000
	0x034CF744 LDR X8, [X21 + 0x7D0]
	0x034CF748 MOV W19, W1
	0x034CF74C MOV X20, X0
	0x034CF750 CBNZ X8, 0x34CF79C
	0x034CF754 ADRP X12, 0xFFFFFFFFFD61E000
	0x034CF758 LDR V0, [X12 + 0x5B8]
	0x034CF75C ADRP X8, 0xFFFFFFFFFD644000
	0x034CF760 ADRP X10, 0xFFFFFFFFFD621000
	0x034CF764 ADD X8, X8, 0xDD2
	0x034CF768 MOVZ W9, 0x11
	0x034CF76C ADD X10, X10, 0x432
	0x034CF770 MOVZ W11, 0x2C
	0x034CF774 MOVZ W13, 0xC
	0x034CF778 ADD X0, X31, 0x0
	0x034CF77C STP X8, X9, [X31]
	0x034CF780 STP X10, X11, [X31 + 0x10]
	0x034CF784 STR W13, [X31 + 0x28]
	0x034CF788 STR D0, [X31 + 0x20]
	0x034CF78C STRB W31, [X31 + 0x2C]
	0x034CF790 BL 0x1C1729C
	0x034CF794 MOV X8, X0
	0x034CF798 STR X0, [X21 + 0x7D0]
	0x034CF79C MOV X0, X20
	0x034CF7A0 MOV W1, W19
	0x034CF7A4 BLR X8
	0x034CF7A8 LDP X20, X19, [X31 + 0x40]
	0x034CF7AC LDP X30, X21, [X31 + 0x30]
	0x034CF7B0 ADD X31, X31, 0x50
	0x034CF7B4 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1744]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43679744
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1316
	019 Move W11, 34
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1744], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_InviteOptions_ClearSuggestedUsers(System.IntPtr handle)

Disassembly:
	0x034CF7B8 MOV X1, X31
	0x034CF7BC B 0x33BDD8C
	0x034CF7C0 STP X30, X21, [X31 - 0x20]!
	0x034CF7C4 STP X20, X19, [X31 + 0x10]
	0x034CF7C8 ADRP X19, 0xF10000
	0x034CF7CC ADRP X21, 0xC53000
	0x034CF7D0 ADRP X20, 0xC63000
	0x034CF7D4 LDRB W8, [X19 + 0x7D8]
	0x034CF7D8 LDR X21, [X21 + 0x828]
	0x034CF7DC LDR X20, [X20 + 0x328]
	0x034CF7E0 TBNZ X8, 0x0, 0x34CF804
	0x034CF7E4 ADRP X0, 0xC63000
	0x034CF7E8 LDR X0, [X0 + 0x328]
	0x034CF7EC BL 0x1C16CF4
	0x034CF7F0 ADRP X0, 0xC53000
	0x034CF7F4 LDR X0, [X0 + 0x828]
	0x034CF7F8 BL 0x1C16CF4
	0x034CF7FC MOVZ W8, 0x1
	0x034CF800 STRB W8, [X19 + 0x7D8]
	0x034CF804 LDR X0, [X21]
	0x034CF808 BL 0x1C16F10
	0x034CF80C MOV W1, W31
	0x034CF810 MOV X2, X31
	0x034CF814 MOV X19, X0
	0x034CF818 BL 0x323A304
	0x034CF81C LDR X8, [X20]
	0x034CF820 LDR X8, [X8 + 0xB8]
	0x034CF824 STR X19, [X8]
	0x034CF828 LDP X20, X19, [X31 + 0x10]
	0x034CF82C LDP X30, X21, [X31], #0x20
	0x034CF830 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF11000
	006 Move X8, [X20+1752]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43913216
	011 Move V0, [X12+1464]
	012 Move X8, -43757568
	013 Move X10, -43868160
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2126
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1752], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.IntPtr ovr_MultiplayerErrorOptions_Create()

Disassembly:
	0x034CF834 STP X30, X21, [X31 - 0x20]!
	0x034CF838 STP X20, X19, [X31 + 0x10]
	0x034CF83C LDR X8, [X2 + 0x8]
	0x034CF840 STP X1, X2, [X0 + 0x20]
	0x034CF844 MOV X19, X0
	0x034CF848 MOV X20, X1
	0x034CF84C STR X8, [X0 + 0x10]
	0x034CF850 LDRB W21, [X2 + 0x52]
	0x034CF854 STR X0, [X0 + 0x40]
	0x034CF858 MOV X0, X2
	0x034CF85C BL 0x1C16D84
	0x034CF860 TBZ X0, 0x0, 0x34CF878
	0x034CF864 CMP W21, 0x4
	0x034CF868 B.NE 0x34CF894
	0x034CF86C ADRP X8, 0xFFFFFFFFFE6EF000
	0x034CF870 ADD X8, X8, 0xD74
	0x034CF874 B 0x34CF888
	0x034CF878 CMP W21, 0x3
	0x034CF87C B.NE 0x34CF890
	0x034CF880 ADRP X8, 0xFFFFFFFFFE6EF000
	0x034CF884 ADD X8, X8, 0xD48
	0x034CF888 STR X8, [X19 + 0x18]
	0x034CF88C B 0x34CF8A4
	0x034CF890 CBZ X20, 0x34CF8BC
	0x034CF894 LDR X8, [X19 + 0x10]
	0x034CF898 LDR X9, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF11000
	005 Move X8, [X19+1760]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43913216
	009 Move V0, [X12+1464]
	010 Move X8, -43757568
	011 Move X10, -43843584
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1425
	015 Move W11, 34
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1760], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_MultiplayerErrorOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034CF89C STR X8, [X19 + 0x18]
	0x034CF8A0 STR X9, [X19 + 0x40]
	0x034CF8A4 ADRP X8, 0xFFFFFFFFFE6EF000
	0x034CF8A8 ADD X8, X8, 0xCD8
	0x034CF8AC STR X8, [X19 + 0x38]
	0x034CF8B0 LDP X20, X19, [X31 + 0x10]
	0x034CF8B4 LDP X30, X21, [X31], #0x20
	0x034CF8B8 RET
	0x034CF8BC ADRP X1, 0xFFFFFFFFFD64C000
	0x034CF8C0 ADD X1, X1, 0xEE3
	0x034CF8C4 MOV X0, X31
	0x034CF8C8 BL 0x1C16F3C
	0x034CF8CC MOV X1, X31
	0x034CF8D0 BL 0x1C16DEC
	0x034CF8D4 LDR X8, [X0 + 0x40]
	0x034CF8D8 LDR X6, [X0 + 0x18]
	0x034CF8DC LDR X5, [X0 + 0x28]
	0x034CF8E0 MOV X0, X8
	0x034CF8E4 BR X6
	0x034CF8E8 SUB X31, X31, 0x80
	0x034CF8EC STP X30, X25, [X31 + 0x40]
	0x034CF8F0 STP X24, X23, [X31 + 0x50]
	0x034CF8F4 STP X22, X21, [X31 + 0x60]
	0x034CF8F8 STP X20, X19, [X31 + 0x70]
	0x034CF8FC STR X2, [X31 + 0x38]
	0x034CF900 ADRP X25, 0xF10000
	0x034CF904 STP W4, W3, [X31 + 0x30]
	0x034CF908 ADRP X24, 0xC4D000
	0x034CF90C ADRP X23, 0xC24000
	0x034CF910 LDRB W8, [X25 + 0x7D9]
	0x034CF914 LDR X24, [X24 + 0xF30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF11000
	006 Move X8, [X20+1768]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43913216
	011 Move V0, [X12+1464]
	012 Move X8, -43757568
	013 Move X10, -43720704
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1064
	017 Move W11, 35
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1768], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_MultiplayerErrorOptions_SetErrorKey(System.IntPtr handle, Oculus.Platform.MultiplayerErrorErrorKey value)

Disassembly:
	0x034CF918 LDR X23, [X23 + 0x758]
	0x034CF91C MOV X19, X6
	0x034CF920 MOV X20, X5
	0x034CF924 MOV X22, X1
	0x034CF928 MOV X21, X0
	0x034CF92C TBNZ X8, 0x0, 0x34CF950
	0x034CF930 ADRP X0, 0xC24000
	0x034CF934 LDR X0, [X0 + 0x758]
	0x034CF938 BL 0x1C16CF4
	0x034CF93C ADRP X0, 0xC4D000
	0x034CF940 LDR X0, [X0 + 0xF30]
	0x034CF944 BL 0x1C16CF4
	0x034CF948 MOVZ W8, 0x1
	0x034CF94C STRB W8, [X25 + 0x7D9]
	0x034CF950 LDR X0, [X24]
	0x034CF954 MOVI V0.2D, 0x0
	0x034CF958 ADD X1, X31, 0x38
	0x034CF95C STP V0, V0, [X31 + 0x10]
	0x034CF960 STR X22, [X31 + 0x8]
	0x034CF964 BL 0x1C16E04
	0x034CF968 LDR X8, [X23]
	0x034CF96C STR X0, [X31 + 0x10]
	0x034CF970 ADD X1, X31, 0x34
	0x034CF974 MOV X0, X8
	0x034CF978 BL 0x1C16E04
	0x034CF97C LDR X8, [X23]
	0x034CF980 STR X0, [X31 + 0x18]
	0x034CF984 ADD X1, X31, 0x30
	0x034CF988 MOV X0, X8
	0x034CF98C BL 0x1C16E04
	0x034CF990 STR X0, [X31 + 0x20]
	0x034CF994 ADD X1, X31, 0x8
	0x034CF998 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1776]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43769856
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1592
	019 Move W11, 39
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1776], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_NetSyncOptions_Create()

Disassembly:
	0x034CF99C MOV X2, X20
	0x034CF9A0 MOV X3, X19
	0x034CF9A4 BL 0x1C16CB0
	0x034CF9A8 LDP X20, X19, [X31 + 0x70]
	0x034CF9AC LDP X22, X21, [X31 + 0x60]
	0x034CF9B0 LDP X24, X23, [X31 + 0x50]
	0x034CF9B4 LDP X30, X25, [X31 + 0x40]
	0x034CF9B8 ADD X31, X31, 0x80
	0x034CF9BC RET
	0x034CF9C0 MOV X0, X1
	0x034CF9C4 MOV X1, X31
	0x034CF9C8 B 0x1C16CB4
	0x034CF9CC STP X30, X21, [X31 - 0x20]!
	0x034CF9D0 STP X20, X19, [X31 + 0x10]
	0x034CF9D4 ADRP X21, 0xF10000
	0x034CF9D8 ADRP X20, 0xC63000
	0x034CF9DC LDRB W8, [X21 + 0x7DA]
	0x034CF9E0 LDR X20, [X20 + 0x328]
	0x034CF9E4 MOV X19, X0
	0x034CF9E8 TBNZ X8, 0x0, 0x34CFA00
	0x034CF9EC ADRP X0, 0xC63000
	0x034CF9F0 LDR X0, [X0 + 0x328]
	0x034CF9F4 BL 0x1C16CF4
	0x034CF9F8 MOVZ W8, 0x1
	0x034CF9FC STRB W8, [X21 + 0x7DA]
	0x034CFA00 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF11000
	005 Move X8, [X19+1784]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43913216
	009 Move V0, [X12+1464]
	010 Move X8, -43757568
	011 Move X10, -43794432
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 2341
	015 Move W11, 25
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1784], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_NetSyncOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034CFA04 MOV X1, X31
	0x034CFA08 BL 0x33BDD8C
	0x034CFA0C LDR X0, [X20]
	0x034CFA10 LDR W8, [X0 + 0xE0]
	0x034CFA14 CBNZ W8, 0x34CFA1C
	0x034CFA18 BL 0x1C16DFC
	0x034CFA1C BL 0x34CD794
	0x034CFA20 STR X0, [X19 + 0x10]
	0x034CFA24 LDP X20, X19, [X31 + 0x10]
	0x034CFA28 LDP X30, X21, [X31], #0x20
	0x034CFA2C RET
	0x034CFA30 STR X30, [X31 - 0x30]!
	0x034CFA34 STP X22, X21, [X31 + 0x10]
	0x034CFA38 STP X20, X19, [X31 + 0x20]
	0x034CFA3C ADRP X22, 0xF10000
	0x034CFA40 ADRP X21, 0xC63000
	0x034CFA44 LDRB W8, [X22 + 0x7DB]
	0x034CFA48 LDR X21, [X21 + 0x328]
	0x034CFA4C MOV X19, X1
	0x034CFA50 MOV X20, X0
	0x034CFA54 TBNZ X8, 0x0, 0x34CFA6C
	0x034CFA58 ADRP X0, 0xC63000
	0x034CFA5C LDR X0, [X0 + 0x328]
	0x034CFA60 BL 0x1C16CF4
	0x034CFA64 MOVZ W8, 0x1
	0x034CFA68 STRB W8, [X22 + 0x7DB]
	0x034CFA6C LDR X0, [X21]
	0x034CFA70 LDR X20, [X20 + 0x10]
	0x034CFA74 LDR W8, [X0 + 0xE0]
	0x034CFA78 CBNZ W8, 0x34CFA80
	0x034CFA7C BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF11000
	006 Move X8, [X20+1792]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43913216
	011 Move V0, [X12+1464]
	012 Move X8, -43757568
	013 Move X10, -43843584
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1460
	017 Move W11, 26
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1792], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_NetSyncOptions_SetVoipGroup(System.IntPtr handle, System.String value)

Disassembly:
	0x034CFA80 MOV X0, X20
	0x034CFA84 MOV X1, X19
	0x034CFA88 LDP X20, X19, [X31 + 0x20]
	0x034CFA8C LDP X22, X21, [X31 + 0x10]
	0x034CFA90 LDR X30, [X31], #0x30
	0x034CFA94 B 0x34CD878
	0x034CFA98 STR X30, [X31 - 0x30]!
	0x034CFA9C STP X22, X21, [X31 + 0x10]
	0x034CFAA0 STP X20, X19, [X31 + 0x20]
	0x034CFAA4 ADRP X22, 0xF10000
	0x034CFAA8 ADRP X21, 0xC63000
	0x034CFAAC LDRB W8, [X22 + 0x7DC]
	0x034CFAB0 LDR X21, [X21 + 0x328]
	0x034CFAB4 MOV X19, X1
	0x034CFAB8 MOV X20, X0
	0x034CFABC TBNZ X8, 0x0, 0x34CFAD4
	0x034CFAC0 ADRP X0, 0xC63000
	0x034CFAC4 LDR X0, [X0 + 0x328]
	0x034CFAC8 BL 0x1C16CF4
	0x034CFACC MOVZ W8, 0x1
	0x034CFAD0 STRB W8, [X22 + 0x7DC]
	0x034CFAD4 LDR X0, [X21]
	0x034CFAD8 LDR X20, [X20 + 0x10]
	0x034CFADC LDR W8, [X0 + 0xE0]
	0x034CFAE0 CBNZ W8, 0x34CFAE8
	0x034CFAE4 BL 0x1C16DFC
	0x034CFAE8 MOV X0, X20
	0x034CFAEC MOV X1, X19
	0x034CFAF0 LDP X20, X19, [X31 + 0x20]
	0x034CFAF4 LDP X22, X21, [X31 + 0x10]
	0x034CFAF8 LDR X30, [X31], #0x30
	0x034CFAFC B 0x34CD99C
	0x034CFB00 STR X30, [X31 - 0x30]!
	0x034CFB04 STP X22, X21, [X31 + 0x10]
	0x034CFB08 STP X20, X19, [X31 + 0x20]
	0x034CFB0C ADRP X22, 0xF10000
	0x034CFB10 ADRP X21, 0xC63000
	0x034CFB14 LDRB W8, [X22 + 0x7DD]
	0x034CFB18 LDR X21, [X21 + 0x328]
	0x034CFB1C MOV W19, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF11000
	007 Move X21, 0xC64000
	008 Move W8, [X22+1800]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC64000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4D000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1800], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_NetSyncOptions_SetVoipGroup_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_NetSyncOptions_SetVoipGroup_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CFB20 MOV X20, X0
	0x034CFB24 TBNZ X8, 0x0, 0x34CFB3C
	0x034CFB28 ADRP X0, 0xC63000
	0x034CFB2C LDR X0, [X0 + 0x328]
	0x034CFB30 BL 0x1C16CF4
	0x034CFB34 MOVZ W8, 0x1
	0x034CFB38 STRB W8, [X22 + 0x7DD]
	0x034CFB3C LDR X0, [X21]
	0x034CFB40 LDR X20, [X20 + 0x10]
	0x034CFB44 LDR W8, [X0 + 0xE0]
	0x034CFB48 CBNZ W8, 0x34CFB50
	0x034CFB4C BL 0x1C16DFC
	0x034CFB50 AND W1, W19, 0x1
	0x034CFB54 MOV X0, X20
	0x034CFB58 LDP X20, X19, [X31 + 0x20]
	0x034CFB5C LDP X22, X21, [X31 + 0x10]
	0x034CFB60 LDR X30, [X31], #0x30
	0x034CFB64 B 0x34CDA8C
	0x034CFB68 STR X30, [X31 - 0x30]!
	0x034CFB6C STP X22, X21, [X31 + 0x10]
	0x034CFB70 STP X20, X19, [X31 + 0x20]
	0x034CFB74 ADRP X22, 0xF10000
	0x034CFB78 ADRP X21, 0xC63000
	0x034CFB7C LDRB W8, [X22 + 0x7DE]
	0x034CFB80 LDR X21, [X21 + 0x328]
	0x034CFB84 MOV W19, W1
	0x034CFB88 MOV X20, X0
	0x034CFB8C TBNZ X8, 0x0, 0x34CFBA4
	0x034CFB90 ADRP X0, 0xC63000
	0x034CFB94 LDR X0, [X0 + 0x328]
	0x034CFB98 BL 0x1C16CF4
	0x034CFB9C MOVZ W8, 0x1
	0x034CFBA0 STRB W8, [X22 + 0x7DE]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1808]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43712512
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 215
	019 Move W11, 31
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1808], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_NetSyncOptions_SetVoipStreamDefault(System.IntPtr handle, Oculus.Platform.NetSyncVoipStreamMode value)

Disassembly:
	0x034CFBA4 LDR X0, [X21]
	0x034CFBA8 LDR X20, [X20 + 0x10]
	0x034CFBAC LDR W8, [X0 + 0xE0]
	0x034CFBB0 CBNZ W8, 0x34CFBB8
	0x034CFBB4 BL 0x1C16DFC
	0x034CFBB8 AND W1, W19, 0x1
	0x034CFBBC MOV X0, X20
	0x034CFBC0 LDP X20, X19, [X31 + 0x20]
	0x034CFBC4 LDP X22, X21, [X31 + 0x10]
	0x034CFBC8 LDR X30, [X31], #0x30
	0x034CFBCC B 0x34CDB10
	0x034CFBD0 STR X30, [X31 - 0x30]!
	0x034CFBD4 STP X22, X21, [X31 + 0x10]
	0x034CFBD8 STP X20, X19, [X31 + 0x20]
	0x034CFBDC ADRP X22, 0xF10000
	0x034CFBE0 ADRP X21, 0xC63000
	0x034CFBE4 LDRB W8, [X22 + 0x7DF]
	0x034CFBE8 LDR X21, [X21 + 0x328]
	0x034CFBEC MOV W19, W1
	0x034CFBF0 MOV X20, X0
	0x034CFBF4 TBNZ X8, 0x0, 0x34CFC0C
	0x034CFBF8 ADRP X0, 0xC63000
	0x034CFBFC LDR X0, [X0 + 0x328]
	0x034CFC00 BL 0x1C16CF4
	0x034CFC04 MOVZ W8, 0x1
	0x034CFC08 STRB W8, [X22 + 0x7DF]
	0x034CFC0C LDR X0, [X21]
	0x034CFC10 LDR X20, [X20 + 0x10]
	0x034CFC14 LDR W8, [X0 + 0xE0]
	0x034CFC18 CBNZ W8, 0x34CFC20
	0x034CFC1C BL 0x1C16DFC
	0x034CFC20 AND W1, W19, 0x1
	0x034CFC24 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1816]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43704320
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 771
	019 Move W11, 39
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1816], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_NetSyncOptions_SetZoneId(System.IntPtr handle, System.String value)

Disassembly:
	0x034CFC28 LDP X20, X19, [X31 + 0x20]
	0x034CFC2C LDP X22, X21, [X31 + 0x10]
	0x034CFC30 LDR X30, [X31], #0x30
	0x034CFC34 B 0x34CDB94
	0x034CFC38 STR X30, [X31 - 0x30]!
	0x034CFC3C STP X22, X21, [X31 + 0x10]
	0x034CFC40 STP X20, X19, [X31 + 0x20]
	0x034CFC44 ADRP X22, 0xF10000
	0x034CFC48 ADRP X21, 0xC63000
	0x034CFC4C LDRB W8, [X22 + 0x7E0]
	0x034CFC50 LDR X21, [X21 + 0x328]
	0x034CFC54 MOV X19, X1
	0x034CFC58 MOV X20, X0
	0x034CFC5C TBNZ X8, 0x0, 0x34CFC74
	0x034CFC60 ADRP X0, 0xC63000
	0x034CFC64 LDR X0, [X0 + 0x328]
	0x034CFC68 BL 0x1C16CF4
	0x034CFC6C MOVZ W8, 0x1
	0x034CFC70 STRB W8, [X22 + 0x7E0]
	0x034CFC74 LDR X0, [X21]
	0x034CFC78 LDR X20, [X20 + 0x10]
	0x034CFC7C LDR W8, [X0 + 0xE0]
	0x034CFC80 CBNZ W8, 0x34CFC88
	0x034CFC84 BL 0x1C16DFC
	0x034CFC88 MOV X0, X20
	0x034CFC8C MOV X1, X19
	0x034CFC90 LDP X20, X19, [X31 + 0x20]
	0x034CFC94 LDP X22, X21, [X31 + 0x10]
	0x034CFC98 LDR X30, [X31], #0x30
	0x034CFC9C B 0x34CDC18
	0x034CFCA0 STR X30, [X31 - 0x30]!
	0x034CFCA4 STP X22, X21, [X31 + 0x10]
	0x034CFCA8 STP X20, X19, [X31 + 0x20]
	0x034CFCAC ADRP X22, 0xF10000
	0x034CFCB0 ADRP X21, 0xC63000
	0x034CFCB4 LDRB W8, [X22 + 0x7E1]
	0x034CFCB8 LDR X21, [X21 + 0x328]
	0x034CFCBC MOV X19, X1
	0x034CFCC0 MOV X20, X0
	0x034CFCC4 TBNZ X8, 0x0, 0x34CFCDC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF11000
	007 Move X21, 0xC64000
	008 Move W8, [X22+1824]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC64000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4D000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1824], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_NetSyncOptions_SetZoneId_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_NetSyncOptions_SetZoneId_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CFCC8 ADRP X0, 0xC63000
	0x034CFCCC LDR X0, [X0 + 0x328]
	0x034CFCD0 BL 0x1C16CF4
	0x034CFCD4 MOVZ W8, 0x1
	0x034CFCD8 STRB W8, [X22 + 0x7E1]
	0x034CFCDC LDR X0, [X21]
	0x034CFCE0 LDR X20, [X20 + 0x10]
	0x034CFCE4 LDR W8, [X0 + 0xE0]
	0x034CFCE8 CBNZ W8, 0x34CFCF0
	0x034CFCEC BL 0x1C16DFC
	0x034CFCF0 MOV X0, X20
	0x034CFCF4 MOV X1, X19
	0x034CFCF8 LDP X20, X19, [X31 + 0x20]
	0x034CFCFC LDP X22, X21, [X31 + 0x10]
	0x034CFD00 LDR X30, [X31], #0x30
	0x034CFD04 B 0x34CDD3C
	0x034CFD08 STR X30, [X31 - 0x30]!
	0x034CFD0C STP X22, X21, [X31 + 0x10]
	0x034CFD10 STP X20, X19, [X31 + 0x20]
	0x034CFD14 ADRP X22, 0xF10000
	0x034CFD18 ADRP X21, 0xC63000
	0x034CFD1C LDRB W8, [X22 + 0x7E2]
	0x034CFD20 LDR X21, [X21 + 0x328]
	0x034CFD24 MOV X19, X1
	0x034CFD28 MOV X20, X0
	0x034CFD2C TBNZ X8, 0x0, 0x34CFD44
	0x034CFD30 ADRP X0, 0xC63000
	0x034CFD34 LDR X0, [X0 + 0x328]
	0x034CFD38 BL 0x1C16CF4
	0x034CFD3C MOVZ W8, 0x1
	0x034CFD40 STRB W8, [X22 + 0x7E2]
	0x034CFD44 LDR X0, [X21]
	0x034CFD48 LDR X20, [X20 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1832]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43712512
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 247
	019 Move W11, 28
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1832], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_RichPresenceOptions_Create()

Disassembly:
	0x034CFD4C LDR W8, [X0 + 0xE0]
	0x034CFD50 CBNZ W8, 0x34CFD58
	0x034CFD54 BL 0x1C16DFC
	0x034CFD58 MOV X0, X20
	0x034CFD5C MOV X1, X19
	0x034CFD60 LDP X20, X19, [X31 + 0x20]
	0x034CFD64 LDP X22, X21, [X31 + 0x10]
	0x034CFD68 LDR X30, [X31], #0x30
	0x034CFD6C B 0x34CDE2C
	0x034CFD70 STR X30, [X31 - 0x30]!
	0x034CFD74 STP X22, X21, [X31 + 0x10]
	0x034CFD78 STP X20, X19, [X31 + 0x20]
	0x034CFD7C ADRP X22, 0xF10000
	0x034CFD80 ADRP X21, 0xC63000
	0x034CFD84 LDRB W8, [X22 + 0x7E3]
	0x034CFD88 LDR X21, [X21 + 0x328]
	0x034CFD8C MOV W19, W1
	0x034CFD90 MOV X20, X0
	0x034CFD94 TBNZ X8, 0x0, 0x34CFDAC
	0x034CFD98 ADRP X0, 0xC63000
	0x034CFD9C LDR X0, [X0 + 0x328]
	0x034CFDA0 BL 0x1C16CF4
	0x034CFDA4 MOVZ W8, 0x1
	0x034CFDA8 STRB W8, [X22 + 0x7E3]
	0x034CFDAC LDR X0, [X21]
	0x034CFDB0 LDR X20, [X20 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF11000
	005 Move X8, [X19+1840]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43913216
	009 Move V0, [X12+1464]
	010 Move X8, -43757568
	011 Move X10, -43757568
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3993
	015 Move W11, 30
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1840], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_RichPresenceOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034CFDB4 LDR W8, [X0 + 0xE0]
	0x034CFDB8 CBNZ W8, 0x34CFDC0
	0x034CFDBC BL 0x1C16DFC
	0x034CFDC0 MOV X0, X20
	0x034CFDC4 MOV W1, W19
	0x034CFDC8 LDP X20, X19, [X31 + 0x20]
	0x034CFDCC LDP X22, X21, [X31 + 0x10]
	0x034CFDD0 LDR X30, [X31], #0x30
	0x034CFDD4 B 0x34CDF50
	0x034CFDD8 STR X30, [X31 - 0x30]!
	0x034CFDDC STP X22, X21, [X31 + 0x10]
	0x034CFDE0 STP X20, X19, [X31 + 0x20]
	0x034CFDE4 ADRP X22, 0xF10000
	0x034CFDE8 ADRP X21, 0xC63000
	0x034CFDEC LDRB W8, [X22 + 0x7E4]
	0x034CFDF0 LDR X21, [X21 + 0x328]
	0x034CFDF4 MOV W19, W1
	0x034CFDF8 MOV X20, X0
	0x034CFDFC TBNZ X8, 0x0, 0x34CFE14
	0x034CFE00 ADRP X0, 0xC63000
	0x034CFE04 LDR X0, [X0 + 0x328]
	0x034CFE08 BL 0x1C16CF4
	0x034CFE0C MOVZ W8, 0x1
	0x034CFE10 STRB W8, [X22 + 0x7E4]
	0x034CFE14 LDR X0, [X21]
	0x034CFE18 LDR X20, [X20 + 0x10]
	0x034CFE1C LDR W8, [X0 + 0xE0]
	0x034CFE20 CBNZ W8, 0x34CFE28
	0x034CFE24 BL 0x1C16DFC
	0x034CFE28 MOV X0, X20
	0x034CFE2C MOV W1, W19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF11000
	006 Move X8, [X20+1848]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43913216
	011 Move V0, [X12+1464]
	012 Move X8, -43757568
	013 Move X10, -43667456
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 3784
	017 Move W11, 31
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1848], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_RichPresenceOptions_SetApiName(System.IntPtr handle, System.String value)

Disassembly:
	0x034CFE30 LDP X20, X19, [X31 + 0x20]
	0x034CFE34 LDP X22, X21, [X31 + 0x10]
	0x034CFE38 LDR X30, [X31], #0x30
	0x034CFE3C B 0x34CDFD4
	0x034CFE40 CBZ X0, 0x34CFE48
	0x034CFE44 LDR X0, [X0 + 0x10]
	0x034CFE48 RET
	0x034CFE4C STP X30, X21, [X31 - 0x20]!
	0x034CFE50 STP X20, X19, [X31 + 0x10]
	0x034CFE54 ADRP X21, 0xF10000
	0x034CFE58 ADRP X20, 0xC63000
	0x034CFE5C LDRB W8, [X21 + 0x7E5]
	0x034CFE60 LDR X20, [X20 + 0x328]
	0x034CFE64 MOV X19, X0
	0x034CFE68 TBNZ X8, 0x0, 0x34CFE80
	0x034CFE6C ADRP X0, 0xC63000
	0x034CFE70 LDR X0, [X0 + 0x328]
	0x034CFE74 BL 0x1C16CF4
	0x034CFE78 MOVZ W8, 0x1
	0x034CFE7C STRB W8, [X21 + 0x7E5]
	0x034CFE80 LDR X0, [X20]
	0x034CFE84 LDR X20, [X19 + 0x10]
	0x034CFE88 LDR W8, [X0 + 0xE0]
	0x034CFE8C CBNZ W8, 0x34CFE94
	0x034CFE90 BL 0x1C16DFC
	0x034CFE94 MOV X0, X20
	0x034CFE98 BL 0x34CD7FC
	0x034CFE9C MOV X0, X19
	0x034CFEA0 LDP X20, X19, [X31 + 0x10]
	0x034CFEA4 MOV X1, X31
	0x034CFEA8 LDP X30, X21, [X31], #0x20
	0x034CFEAC B 0x33CB4DC
	0x034CFEB0 CMP W1, 0x1
	0x034CFEB4 MOV X21, X0
	0x034CFEB8 B.NE 0x34CFEE8
	0x034CFEBC MOV X0, X21
	0x034CFEC0 BL 0x3EB1AD0
	0x034CFEC4 LDR X20, [X0]
	0x034CFEC8 BL 0x3EB1AE0
	0x034CFECC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF11000
	007 Move X21, 0xC64000
	008 Move W8, [X22+1856]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC64000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4D000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1856], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_RichPresenceOptions_SetApiName_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_RichPresenceOptions_SetApiName_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CFED0 MOV X1, X31
	0x034CFED4 BL 0x33CB4DC
	0x034CFED8 CBNZ X20, 0x34CFEF0
	0x034CFEDC LDP X20, X19, [X31 + 0x10]
	0x034CFEE0 LDP X30, X21, [X31], #0x20
	0x034CFEE4 RET
	0x034CFEE8 MOV X20, X31
	0x034CFEEC B 0x34CFEFC
	0x034CFEF0 MOV X0, X20
	0x034CFEF4 BL 0x1C16F18
	0x034CFEF8 MOV X21, X0
	0x034CFEFC MOV X0, X19
	0x034CFF00 MOV X1, X31
	0x034CFF04 BL 0x33CB4DC
	0x034CFF08 CBNZ X20, 0x34CFF14
	0x034CFF0C MOV X0, X21
	0x034CFF10 BL 0x1D2C690
	0x034CFF14 MOV X0, X20
	0x034CFF18 BL 0x1C16F18
	0x034CFF1C BL 0x1990590
	0x034CFF20 STP X30, X21, [X31 - 0x20]!
	0x034CFF24 STP X20, X19, [X31 + 0x10]
	0x034CFF28 ADRP X21, 0xF10000
	0x034CFF2C ADRP X20, 0xC63000
	0x034CFF30 LDRB W8, [X21 + 0x7E6]
	0x034CFF34 LDR X20, [X20 + 0x328]
	0x034CFF38 MOV X19, X0
	0x034CFF3C TBNZ X8, 0x0, 0x34CFF54
	0x034CFF40 ADRP X0, 0xC63000
	0x034CFF44 LDR X0, [X0 + 0x328]
	0x034CFF48 BL 0x1C16CF4
	0x034CFF4C MOVZ W8, 0x1
	0x034CFF50 STRB W8, [X21 + 0x7E6]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF11000
	007 Move X8, [X21+1864]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43913216
	013 Move V0, [X12+1464]
	014 Move X8, -43757568
	015 Move X10, -43712512
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 276
	019 Move W11, 34
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1864], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(System.IntPtr handle, System.String value)

Disassembly:
	0x034CFF54 MOV X0, X19
	0x034CFF58 MOV X1, X31
	0x034CFF5C BL 0x33BDD8C
	0x034CFF60 LDR X0, [X20]
	0x034CFF64 LDR W8, [X0 + 0xE0]
	0x034CFF68 CBNZ W8, 0x34CFF70
	0x034CFF6C BL 0x1C16DFC
	0x034CFF70 BL 0x34CE058
	0x034CFF74 STR X0, [X19 + 0x10]
	0x034CFF78 LDP X20, X19, [X31 + 0x10]
	0x034CFF7C LDP X30, X21, [X31], #0x20
	0x034CFF80 RET
	0x034CFF84 STR X30, [X31 - 0x30]!
	0x034CFF88 STP X22, X21, [X31 + 0x10]
	0x034CFF8C STP X20, X19, [X31 + 0x20]
	0x034CFF90 ADRP X22, 0xF10000
	0x034CFF94 ADRP X21, 0xC63000
	0x034CFF98 LDRB W8, [X22 + 0x7E7]
	0x034CFF9C LDR X21, [X21 + 0x328]
	0x034CFFA0 MOV X19, X1
	0x034CFFA4 MOV X20, X0
	0x034CFFA8 TBNZ X8, 0x0, 0x34CFFC0
	0x034CFFAC ADRP X0, 0xC63000
	0x034CFFB0 LDR X0, [X0 + 0x328]
	0x034CFFB4 BL 0x1C16CF4
	0x034CFFB8 MOVZ W8, 0x1
	0x034CFFBC STRB W8, [X22 + 0x7E7]
	0x034CFFC0 LDR X0, [X21]
	0x034CFFC4 LDR X20, [X20 + 0x10]
	0x034CFFC8 LDR W8, [X0 + 0xE0]
	0x034CFFCC CBNZ W8, 0x34CFFD4
	0x034CFFD0 BL 0x1C16DFC
	0x034CFFD4 MOV X0, X20
	0x034CFFD8 MOV X1, X19
	0x034CFFDC LDP X20, X19, [X31 + 0x20]
	0x034CFFE0 LDP X22, X21, [X31 + 0x10]
	0x034CFFE4 LDR X30, [X31], #0x30
	0x034CFFE8 B 0x34CE13C
	0x034CFFEC STR X30, [X31 - 0x30]!
	0x034CFFF0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF11000
	007 Move X21, 0xC64000
	008 Move W8, [X22+1872]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC64000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4D000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1872], W8
	024 Move X0, [X21]
	025 Move X21, 0xC4D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call CAPI.StringToNative, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Call CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call Marshal.FreeCoTaskMem, X0
	050 Return 

Method: System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(System.IntPtr handle, System.IntPtr value)

Disassembly:
	0x034CFFF4 STP X20, X19, [X31 + 0x20]
	0x034CFFF8 ADRP X22, 0xF10000
	0x034CFFFC ADRP X21, 0xC63000
	0x034D0000 LDRB W8, [X22 + 0x7E8]
	0x034D0004 B 0x3EB18CC
	0x034D0008 MOV X19, X1
	0x034D000C MOV X20, X0
	0x034D0010 TBNZ X8, 0x0, 0x34D0028
	0x034D0014 ADRP X0, 0xC62000
	0x034D0018 LDR X0, [X0 + 0x328]
	0x034D001C BL 0x1C16CF4
	0x034D0020 MOVZ W8, 0x1
	0x034D0024 STRB W8, [X22 + 0x7E8]
	0x034D0028 LDR X0, [X21]
	0x034D002C LDR X20, [X20 + 0x10]
	0x034D0030 LDR W8, [X0 + 0xE0]
	0x034D0034 CBNZ W8, 0x34D003C
	0x034D0038 BL 0x1C16DFC
	0x034D003C MOV X0, X20
	0x034D0040 MOV X1, X19
	0x034D0044 LDP X20, X19, [X31 + 0x20]
	0x034D0048 LDP X22, X21, [X31 + 0x10]
	0x034D004C LDR X30, [X31], #0x30
	0x034D0050 B 0x34CE260
	0x034D0054 STR X30, [X31 - 0x30]!
	0x034D0058 STP X22, X21, [X31 + 0x10]
	0x034D005C STP X20, X19, [X31 + 0x20]
	0x034D0060 ADRP X22, 0xF0F000
	0x034D0064 ADRP X21, 0xC62000
	0x034D0068 LDRB W8, [X22 + 0x7E9]
	0x034D006C LDR X21, [X21 + 0x328]
	0x034D0070 MOV W19, W1
	0x034D0074 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF10000
	007 Move X8, [X21+1880]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43917312
	013 Move V0, [X12+1464]
	014 Move X8, -43761664
	015 Move X10, -43737088
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 4037
	019 Move W11, 50
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1880], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_RichPresenceOptions_SetIsJoinable(System.IntPtr handle, System.Boolean value)

Disassembly:
	0x034D0078 TBNZ X8, 0x0, 0x34D0090
	0x034D007C ADRP X0, 0xC62000
	0x034D0080 LDR X0, [X0 + 0x328]
	0x034D0084 BL 0x1C16CF4
	0x034D0088 MOVZ W8, 0x1
	0x034D008C STRB W8, [X22 + 0x7E9]
	0x034D0090 LDR X0, [X21]
	0x034D0094 LDR X20, [X20 + 0x10]
	0x034D0098 LDR W8, [X0 + 0xE0]
	0x034D009C CBNZ W8, 0x34D00A4
	0x034D00A0 BL 0x1C16DFC
	0x034D00A4 AND W1, W19, 0x1
	0x034D00A8 MOV X0, X20
	0x034D00AC LDP X20, X19, [X31 + 0x20]
	0x034D00B0 LDP X22, X21, [X31 + 0x10]
	0x034D00B4 LDR X30, [X31], #0x30
	0x034D00B8 B 0x34CE384
	0x034D00BC STR X30, [X31 - 0x30]!
	0x034D00C0 STP X22, X21, [X31 + 0x10]
	0x034D00C4 STP X20, X19, [X31 + 0x20]
	0x034D00C8 ADRP X22, 0xF0F000
	0x034D00CC ADRP X21, 0xC62000
	0x034D00D0 LDRB W8, [X22 + 0x7EA]
	0x034D00D4 LDR X21, [X21 + 0x328]
	0x034D00D8 MOV X19, X1
	0x034D00DC MOV X20, X0
	0x034D00E0 TBNZ X8, 0x0, 0x34D00F8
	0x034D00E4 ADRP X0, 0xC62000
	0x034D00E8 LDR X0, [X0 + 0x328]
	0x034D00EC BL 0x1C16CF4
	0x034D00F0 MOVZ W8, 0x1
	0x034D00F4 STRB W8, [X22 + 0x7EA]
	0x034D00F8 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF10000
	007 Move X8, [X21+1888]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43917312
	013 Move V0, [X12+1464]
	014 Move X8, -43761664
	015 Move X10, -43905024
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1036
	019 Move W11, 37
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1888], X0
	032 And W1, W19, 1
	033 Move X0, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_RosterOptions_Create()

Disassembly:
	0x034D00FC LDR X20, [X20 + 0x10]
	0x034D0100 LDR W8, [X0 + 0xE0]
	0x034D0104 CBNZ W8, 0x34D010C
	0x034D0108 BL 0x1C16DFC
	0x034D010C MOV X0, X20
	0x034D0110 MOV X1, X19
	0x034D0114 LDP X20, X19, [X31 + 0x20]
	0x034D0118 LDP X22, X21, [X31 + 0x10]
	0x034D011C LDR X30, [X31], #0x30
	0x034D0120 B 0x34CE408
	0x034D0124 STR X30, [X31 - 0x30]!
	0x034D0128 STP X22, X21, [X31 + 0x10]
	0x034D012C STP X20, X19, [X31 + 0x20]
	0x034D0130 ADRP X22, 0xF0F000
	0x034D0134 ADRP X21, 0xC62000
	0x034D0138 LDRB W8, [X22 + 0x7EB]
	0x034D013C LDR X21, [X21 + 0x328]
	0x034D0140 MOV X19, X1
	0x034D0144 MOV X20, X0
	0x034D0148 TBNZ X8, 0x0, 0x34D0160
	0x034D014C ADRP X0, 0xC62000
	0x034D0150 LDR X0, [X0 + 0x328]
	0x034D0154 BL 0x1C16CF4
	0x034D0158 MOVZ W8, 0x1
	0x034D015C STRB W8, [X22 + 0x7EB]
	0x034D0160 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF10000
	005 Move X8, [X19+1896]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43917312
	009 Move V0, [X12+1464]
	010 Move X8, -43761664
	011 Move X10, -43671552
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 3816
	015 Move W11, 24
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1896], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_RosterOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034D0164 LDR X20, [X20 + 0x10]
	0x034D0168 LDR W8, [X0 + 0xE0]
	0x034D016C CBNZ W8, 0x34D0174
	0x034D0170 BL 0x1C16DFC
	0x034D0174 MOV X0, X20
	0x034D0178 MOV X1, X19
	0x034D017C LDP X20, X19, [X31 + 0x20]
	0x034D0180 LDP X22, X21, [X31 + 0x10]
	0x034D0184 LDR X30, [X31], #0x30
	0x034D0188 B 0x34CE52C
	0x034D018C CBZ X0, 0x34D0194
	0x034D0190 LDR X0, [X0 + 0x10]
	0x034D0194 RET
	0x034D0198 STP X30, X21, [X31 - 0x20]!
	0x034D019C STP X20, X19, [X31 + 0x10]
	0x034D01A0 ADRP X21, 0xF0F000
	0x034D01A4 ADRP X20, 0xC62000
	0x034D01A8 LDRB W8, [X21 + 0x7EC]
	0x034D01AC LDR X20, [X20 + 0x328]
	0x034D01B0 MOV X19, X0
	0x034D01B4 TBNZ X8, 0x0, 0x34D01CC
	0x034D01B8 ADRP X0, 0xC62000
	0x034D01BC LDR X0, [X0 + 0x328]
	0x034D01C0 BL 0x1C16CF4
	0x034D01C4 MOVZ W8, 0x1
	0x034D01C8 STRB W8, [X21 + 0x7EC]
	0x034D01CC LDR X0, [X20]
	0x034D01D0 LDR X20, [X19 + 0x10]
	0x034D01D4 LDR W8, [X0 + 0xE0]
	0x034D01D8 CBNZ W8, 0x34D01E0
	0x034D01DC BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF10000
	006 Move X8, [X20+1904]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43917312
	011 Move V0, [X12+1464]
	012 Move X8, -43761664
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1162
	017 Move W11, 25
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1904], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_RosterOptions_AddSuggestedUser(System.IntPtr handle, System.UInt64 value)

Disassembly:
	0x034D01E0 MOV X0, X20
	0x034D01E4 BL 0x34CE0C0
	0x034D01E8 MOV X0, X19
	0x034D01EC LDP X20, X19, [X31 + 0x10]
	0x034D01F0 MOV X1, X31
	0x034D01F4 LDP X30, X21, [X31], #0x20
	0x034D01F8 B 0x33CB4DC
	0x034D01FC CMP W1, 0x1
	0x034D0200 MOV X21, X0
	0x034D0204 B.NE 0x34D0234
	0x034D0208 MOV X0, X21
	0x034D020C BL 0x3EB1AD0
	0x034D0210 LDR X20, [X0]
	0x034D0214 BL 0x3EB1AE0
	0x034D0218 MOV X0, X19
	0x034D021C MOV X1, X31
	0x034D0220 BL 0x33CB4DC
	0x034D0224 CBNZ X20, 0x34D023C
	0x034D0228 LDP X20, X19, [X31 + 0x10]
	0x034D022C LDP X30, X21, [X31], #0x20
	0x034D0230 RET
	0x034D0234 MOV X20, X31
	0x034D0238 B 0x34D0248
	0x034D023C MOV X0, X20
	0x034D0240 BL 0x1C16F18
	0x034D0244 MOV X21, X0
	0x034D0248 MOV X0, X19
	0x034D024C MOV X1, X31
	0x034D0250 BL 0x33CB4DC
	0x034D0254 CBNZ X20, 0x34D0260
	0x034D0258 MOV X0, X21
	0x034D025C BL 0x1D2C690
	0x034D0260 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF10000
	007 Move X8, [X21+1912]
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43917312
	013 Move V0, [X12+1464]
	014 Move X8, -43761664
	015 Move X10, -43814912
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1793
	019 Move W11, 34
	020 Move W13, 16
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1912], X0
	032 Move X0, X20
	033 Move X1, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_RosterOptions_ClearSuggestedUsers(System.IntPtr handle)

Disassembly:
	0x034D0264 BL 0x1C16F18
	0x034D0268 BL 0x1990590
	0x034D026C STP X30, X21, [X31 - 0x20]!
	0x034D0270 STP X20, X19, [X31 + 0x10]
	0x034D0274 ADRP X21, 0xF0F000
	0x034D0278 ADRP X20, 0xC62000
	0x034D027C LDRB W8, [X21 + 0x7ED]
	0x034D0280 LDR X20, [X20 + 0x328]
	0x034D0284 MOV X19, X0
	0x034D0288 TBNZ X8, 0x0, 0x34D02A0
	0x034D028C ADRP X0, 0xC62000
	0x034D0290 LDR X0, [X0 + 0x328]
	0x034D0294 BL 0x1C16CF4
	0x034D0298 MOVZ W8, 0x1
	0x034D029C STRB W8, [X21 + 0x7ED]
	0x034D02A0 MOV X0, X19
	0x034D02A4 MOV X1, X31
	0x034D02A8 BL 0x33BDD8C
	0x034D02AC LDR X0, [X20]
	0x034D02B0 LDR W8, [X0 + 0xE0]
	0x034D02B4 CBNZ W8, 0x34D02BC
	0x034D02B8 BL 0x1C16DFC
	0x034D02BC BL 0x34CE650
	0x034D02C0 STR X0, [X19 + 0x10]
	0x034D02C4 LDP X20, X19, [X31 + 0x10]
	0x034D02C8 LDP X30, X21, [X31], #0x20
	0x034D02CC RET
	0x034D02D0 STR X30, [X31 - 0x30]!
	0x034D02D4 STP X22, X21, [X31 + 0x10]
	0x034D02D8 STP X20, X19, [X31 + 0x20]
	0x034D02DC ADRP X22, 0xF0F000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF10000
	006 Move X8, [X20+1920]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43917312
	011 Move V0, [X12+1464]
	012 Move X8, -43761664
	013 Move X10, -43831296
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 1188
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1920], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.IntPtr ovr_UserOptions_Create()

Disassembly:
	0x034D02E0 ADRP X21, 0xC62000
	0x034D02E4 LDRB W8, [X22 + 0x7EE]
	0x034D02E8 LDR X21, [X21 + 0x328]
	0x034D02EC MOV X19, X1
	0x034D02F0 MOV X20, X0
	0x034D02F4 TBNZ X8, 0x0, 0x34D030C
	0x034D02F8 ADRP X0, 0xC62000
	0x034D02FC LDR X0, [X0 + 0x328]
	0x034D0300 BL 0x1C16CF4
	0x034D0304 MOVZ W8, 0x1
	0x034D0308 STRB W8, [X22 + 0x7EE]
	0x034D030C LDR X0, [X21]
	0x034D0310 LDR X20, [X20 + 0x10]
	0x034D0314 LDR W8, [X0 + 0xE0]
	0x034D0318 CBNZ W8, 0x34D0320
	0x034D031C BL 0x1C16DFC
	0x034D0320 MOV X0, X20
	0x034D0324 MOV X1, X19
	0x034D0328 LDP X20, X19, [X31 + 0x20]
	0x034D032C LDP X22, X21, [X31 + 0x10]
	0x034D0330 LDR X30, [X31], #0x30
	0x034D0334 B 0x34CE734
	0x034D0338 STP X30, X21, [X31 - 0x20]!
	0x034D033C STP X20, X19, [X31 + 0x10]
	0x034D0340 ADRP X21, 0xF0F000
	0x034D0344 ADRP X20, 0xC62000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF10000
	005 Move X8, [X19+1928]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43917312
	009 Move V0, [X12+1464]
	010 Move X8, -43761664
	011 Move X10, -43839488
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1001
	015 Move W11, 22
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1928], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_UserOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034D0348 LDRB W8, [X21 + 0x7EF]
	0x034D034C LDR X20, [X20 + 0x328]
	0x034D0350 MOV X19, X0
	0x034D0354 TBNZ X8, 0x0, 0x34D036C
	0x034D0358 ADRP X0, 0xC62000
	0x034D035C LDR X0, [X0 + 0x328]
	0x034D0360 BL 0x1C16CF4
	0x034D0364 MOVZ W8, 0x1
	0x034D0368 STRB W8, [X21 + 0x7EF]
	0x034D036C LDR X0, [X20]
	0x034D0370 LDR X19, [X19 + 0x10]
	0x034D0374 LDR W8, [X0 + 0xE0]
	0x034D0378 CBNZ W8, 0x34D0380
	0x034D037C BL 0x1C16DFC
	0x034D0380 MOV X0, X19
	0x034D0384 LDP X20, X19, [X31 + 0x10]
	0x034D0388 LDP X30, X21, [X31], #0x20
	0x034D038C B 0x34CE7B8
	0x034D0390 CBZ X0, 0x34D0398
	0x034D0394 LDR X0, [X0 + 0x10]
	0x034D0398 RET
	0x034D039C STP X30, X21, [X31 - 0x20]!
	0x034D03A0 STP X20, X19, [X31 + 0x10]
	0x034D03A4 ADRP X21, 0xF0F000
	0x034D03A8 ADRP X20, 0xC62000
	0x034D03AC LDRB W8, [X21 + 0x7F0]
	0x034D03B0 LDR X20, [X20 + 0x328]
	0x034D03B4 MOV X19, X0
	0x034D03B8 TBNZ X8, 0x0, 0x34D03D0
	0x034D03BC ADRP X0, 0xC62000
	0x034D03C0 LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF10000
	006 Move X8, [X20+1936]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43917312
	011 Move V0, [X12+1464]
	012 Move X8, -43761664
	013 Move X10, -43765760
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 728
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1936], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_UserOptions_SetMaxUsers(System.IntPtr handle, System.UInt32 value)

Disassembly:
	0x034D03C4 BL 0x1C16CF4
	0x034D03C8 MOVZ W8, 0x1
	0x034D03CC STRB W8, [X21 + 0x7F0]
	0x034D03D0 LDR X0, [X20]
	0x034D03D4 LDR X20, [X19 + 0x10]
	0x034D03D8 LDR W8, [X0 + 0xE0]
	0x034D03DC CBNZ W8, 0x34D03E4
	0x034D03E0 BL 0x1C16DFC
	0x034D03E4 MOV X0, X20
	0x034D03E8 BL 0x34CE6B8
	0x034D03EC MOV X0, X19
	0x034D03F0 LDP X20, X19, [X31 + 0x10]
	0x034D03F4 MOV X1, X31
	0x034D03F8 LDP X30, X21, [X31], #0x20
	0x034D03FC B 0x33CB4DC
	0x034D0400 CMP W1, 0x1
	0x034D0404 MOV X21, X0
	0x034D0408 B.NE 0x34D0438
	0x034D040C MOV X0, X21
	0x034D0410 BL 0x3EB1AD0
	0x034D0414 LDR X20, [X0]
	0x034D0418 BL 0x3EB1AE0
	0x034D041C MOV X0, X19
	0x034D0420 MOV X1, X31
	0x034D0424 BL 0x33CB4DC
	0x034D0428 CBNZ X20, 0x34D0440
	0x034D042C LDP X20, X19, [X31 + 0x10]
	0x034D0430 LDP X30, X21, [X31], #0x20
	0x034D0434 RET
	0x034D0438 MOV X20, X31
	0x034D043C B 0x34D044C
	0x034D0440 MOV X0, X20
	0x034D0444 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF10000
	007 Move X8, [X21+1944]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43917312
	013 Move V0, [X12+1464]
	014 Move X8, -43761664
	015 Move X10, -43831296
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1226
	019 Move W11, 27
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1944], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_UserOptions_AddServiceProvider(System.IntPtr handle, Oculus.Platform.ServiceProvider value)

Disassembly:
	0x034D0448 MOV X21, X0
	0x034D044C MOV X0, X19
	0x034D0450 MOV X1, X31
	0x034D0454 BL 0x33CB4DC
	0x034D0458 CBNZ X20, 0x34D0464
	0x034D045C MOV X0, X21
	0x034D0460 BL 0x1D2C690
	0x034D0464 MOV X0, X20
	0x034D0468 BL 0x1C16F18
	0x034D046C BL 0x1990590
	0x034D0470 STR X30, [X31 - 0x50]!
	0x034D0474 STP X26, X25, [X31 + 0x10]
	0x034D0478 STP X24, X23, [X31 + 0x20]
	0x034D047C STP X22, X21, [X31 + 0x30]
	0x034D0480 STP X20, X19, [X31 + 0x40]
	0x034D0484 ADRP X21, 0xF0F000
	0x034D0488 ADRP X25, 0xC62000
	0x034D048C LDRB W8, [X21 + 0x7F1]
	0x034D0490 LDR X25, [X25 + 0x328]
	0x034D0494 MOV X19, X1
	0x034D0498 MOV X20, X0
	0x034D049C TBNZ X8, 0x0, 0x34D04F0
	0x034D04A0 ADRP X0, 0xC62000
	0x034D04A4 LDR X0, [X0 + 0x328]
	0x034D04A8 BL 0x1C16CF4
	0x034D04AC ADRP X0, 0xC23000
	0x034D04B0 LDR X0, [X0 + 0xC50]
	0x034D04B4 BL 0x1C16CF4
	0x034D04B8 ADRP X0, 0xC23000
	0x034D04BC LDR X0, [X0 + 0xA28]
	0x034D04C0 BL 0x1C16CF4
	0x034D04C4 ADRP X0, 0xC62000
	0x034D04C8 LDR X0, [X0 + 0x450]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF10000
	007 Move X8, [X21+1952]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43917312
	013 Move V0, [X12+1464]
	014 Move X8, -43761664
	015 Move X10, -43683840
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1351
	019 Move W11, 34
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1952], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_UserOptions_ClearServiceProviders(System.IntPtr handle)

Disassembly:
	0x034D04CC BL 0x1C16CF4
	0x034D04D0 ADRP X0, 0xC4C000
	0x034D04D4 LDR X0, [X0 + 0xF20]
	0x034D04D8 BL 0x1C16CF4
	0x034D04DC ADRP X0, 0xC62000
	0x034D04E0 LDR X0, [X0 + 0x458]
	0x034D04E4 BL 0x1C16CF4
	0x034D04E8 MOVZ W8, 0x1
	0x034D04EC STRB W8, [X21 + 0x7F1]
	0x034D04F0 MOV X0, X20
	0x034D04F4 MOV X1, X31
	0x034D04F8 BL 0x33BDD8C
	0x034D04FC LDR X0, [X25]
	0x034D0500 LDR W8, [X0 + 0xE0]
	0x034D0504 CBNZ W8, 0x34D050C
	0x034D0508 BL 0x1C16DFC
	0x034D050C ADRP X24, 0xC62000
	0x034D0510 LDR X24, [X24 + 0x450]
	0x034D0514 MOV X0, X19
	0x034D0518 BL 0x34C82A0
	0x034D051C STR W0, [X20 + 0x10]
	0x034D0520 MOV X0, X19
	0x034D0524 BL 0x34C8680
	0x034D0528 MOV W21, W0
	0x034D052C MOV X0, X19
	0x034D0530 BL 0x34C7F60
	0x034D0534 STR X0, [X20 + 0x18]
	0x034D0538 LDR X0, [X25]
	0x034D053C LDR W8, [X0 + 0xE0]
	0x034D0540 TBZ X21, 0x0, 0x34D05A4
	0x034D0544 CBNZ W8, 0x34D054C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF10000
	006 Move X8, [X20+1960]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43917312
	011 Move V0, [X12+1464]
	012 Move X8, -43761664
	013 Move X10, -43855872
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2356
	017 Move W11, 37
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1960], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_UserOptions_SetTimeWindow(System.IntPtr handle, Oculus.Platform.TimeWindow value)

Disassembly:
	0x034D0548 BL 0x1C16DFC
	0x034D054C MOV X0, X19
	0x034D0550 BL 0x34C6DF0
	0x034D0554 MOV X19, X0
	0x034D0558 BL 0x34C2E54
	0x034D055C MOV W21, W0
	0x034D0560 MOV X0, X19
	0x034D0564 BL 0x34C301C
	0x034D0568 MOV X22, X0
	0x034D056C MOV X0, X19
	0x034D0570 BL 0x34C2FA0
	0x034D0574 LDR X8, [X24]
	0x034D0578 MOV W19, W0
	0x034D057C MOV X0, X8
	0x034D0580 BL 0x1C16F10
	0x034D0584 MOV W1, W21
	0x034D0588 MOV X2, X22
	0x034D058C MOV W3, W19
	0x034D0590 MOV X4, X31
	0x034D0594 MOV X23, X0
	0x034D0598 BL 0x34E9178
	0x034D059C STR X23, [X20 + 0x20]
	0x034D05A0 B 0x34D0704
	0x034D05A4 CBNZ W8, 0x34D05AC
	0x034D05A8 BL 0x1C16DFC
	0x034D05AC ADRP X26, 0xC23000
	0x034D05B0 LDR X26, [X26 + 0xC50]
	0x034D05B4 MOV X0, X19
	0x034D05B8 BL 0x34C77A0
	0x034D05BC MOV X21, X0
	0x034D05C0 BL 0x34C8680
	0x034D05C4 TBZ X0, 0x0, 0x34D062C
	0x034D05C8 LDR X0, [X25]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF10000
	007 Move X8, [X21+1968]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43917312
	013 Move V0, [X12+1464]
	014 Move X8, -43761664
	015 Move X10, -43716608
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 311
	019 Move W11, 29
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1968], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.IntPtr ovr_VoipOptions_Create()

Disassembly:
	0x034D05CC LDR W8, [X0 + 0xE0]
	0x034D05D0 CBNZ W8, 0x34D05D8
	0x034D05D4 BL 0x1C16DFC
	0x034D05D8 MOV X0, X21
	0x034D05DC BL 0x34C6DF0
	0x034D05E0 MOV X21, X0
	0x034D05E4 BL 0x34C2E54
	0x034D05E8 MOV W22, W0
	0x034D05EC MOV X0, X21
	0x034D05F0 BL 0x34C301C
	0x034D05F4 MOV X23, X0
	0x034D05F8 MOV X0, X21
	0x034D05FC BL 0x34C2FA0
	0x034D0600 LDR X8, [X24]
	0x034D0604 MOV W21, W0
	0x034D0608 MOV X0, X8
	0x034D060C BL 0x1C16F10
	0x034D0610 MOV W1, W22
	0x034D0614 MOV X2, X23
	0x034D0618 MOV W3, W21
	0x034D061C MOV X4, X31
	0x034D0620 MOV X24, X0
	0x034D0624 BL 0x34E9178
	0x034D0628 STR X24, [X20 + 0x20]
	0x034D062C LDR X0, [X26]
	0x034D0630 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF10000
	005 Move X8, [X19+1976]
	006 Compare X8, 0
	007 JumpIfNotEqual {27}
	008 Move X12, -43917312
	009 Move V0, [X12+1464]
	010 Move X8, -43761664
	011 Move X10, -43765760
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 752
	015 Move W11, 22
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move X8, X0
	026 Move [X19+1976], X0
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X30, [X31+48]
	029 Move X19, [X31+56]
	030 Add X31, X31, 64
	031 Return X0

Method: System.Void ovr_VoipOptions_Destroy(System.IntPtr handle)

Disassembly:
	0x034D0634 CBNZ W8, 0x34D0640
	0x034D0638 BL 0x1C16DFC
	0x034D063C LDR X0, [X26]
	0x034D0640 LDR X8, [X0 + 0xB8]
	0x034D0644 LDRB W8, [X8 + 0x1]
	0x034D0648 CBZ W8, 0x34D0704
	0x034D064C LDR X0, [X25]
	0x034D0650 LDR W8, [X0 + 0xE0]
	0x034D0654 CBNZ W8, 0x34D065C
	0x034D0658 BL 0x1C16DFC
	0x034D065C MOV X0, X19
	0x034D0660 BL 0x34C8150
	0x034D0664 CBZ X0, 0x34D06A4
	0x034D0668 ADRP X8, 0xC23000
	0x034D066C LDR X8, [X8 + 0xA28]
	0x034D0670 MOV X20, X0
	0x034D0674 LDR X0, [X8]
	0x034D0678 LDR W8, [X0 + 0xE0]
	0x034D067C CBNZ W8, 0x34D0684
	0x034D0680 BL 0x1C16DFC
	0x034D0684 MOV X0, X20
	0x034D0688 LDP X20, X19, [X31 + 0x40]
	0x034D068C LDP X22, X21, [X31 + 0x30]
	0x034D0690 LDP X24, X23, [X31 + 0x20]
	0x034D0694 LDP X26, X25, [X31 + 0x10]
	0x034D0698 MOV X1, X31
	0x034D069C LDR X30, [X31], #0x50
	0x034D06A0 B 0x3C06048
	0x034D06A4 ADRP X8, 0xC4C000
	0x034D06A8 LDR X8, [X8 + 0xF20]
	0x034D06AC ADD X1, X31, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xF10000
	006 Move X8, [X20+1984]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {30}
	010 Move X12, -43917312
	011 Move V0, [X12+1464]
	012 Move X8, -43761664
	013 Move X10, -43823104
	014 Add X8, X8, 3538
	015 Move W9, 17
	016 Add X10, X10, 2254
	017 Move W11, 23
	018 Move W13, 8
	019 Add X0, X31, 0
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X10
	023 Move [X31+24], X11
	024 Move [X31+40], W13
	025 Move [X31+32], D0
	026 Move [X31+44], W31
	027 Call 0x1C1829C
	028 Move X8, X0
	029 Move [X20+1984], X0
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 

Method: System.Void ovr_VoipOptions_SetBitrateForNewConnections(System.IntPtr handle, Oculus.Platform.VoipBitrate value)

Disassembly:
	0x034D06B0 STR X19, [X31 + 0x8]
	0x034D06B4 LDR X0, [X8]
	0x034D06B8 BL 0x1C16E04
	0x034D06BC ADRP X8, 0xC62000
	0x034D06C0 LDR X8, [X8 + 0x458]
	0x034D06C4 MOV X1, X0
	0x034D06C8 MOV X2, X31
	0x034D06CC LDR X8, [X8]
	0x034D06D0 MOV X0, X8
	0x034D06D4 BL 0x321EFD0
	0x034D06D8 ADRP X8, 0xC23000
	0x034D06DC LDR X8, [X8 + 0xA28]
	0x034D06E0 MOV X19, X0
	0x034D06E4 LDR X8, [X8]
	0x034D06E8 LDR W9, [X8 + 0xE0]
	0x034D06EC CBNZ W9, 0x34D06F8
	0x034D06F0 MOV X0, X8
	0x034D06F4 BL 0x1C16DFC
	0x034D06F8 MOV X0, X19
	0x034D06FC MOV X1, X31
	0x034D0700 BL 0x3C06048
	0x034D0704 LDP X20, X19, [X31 + 0x40]
	0x034D0708 LDP X22, X21, [X31 + 0x30]
	0x034D070C LDP X24, X23, [X31 + 0x20]
	0x034D0710 LDP X26, X25, [X31 + 0x10]
	0x034D0714 LDR X30, [X31], #0x50
	0x034D0718 RET
	0x034D071C MOV X1, X31
	0x034D0720 B 0x33CB4DC
	0x034D0724 LDR W0, [X0 + 0x10]
	0x034D0728 RET
	0x034D072C LDR X8, [X0 + 0x20]
	0x034D0730 CMP X8, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF10000
	007 Move X8, [X21+1992]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43917312
	013 Move V0, [X12+1464]
	014 Move X8, -43761664
	015 Move X10, -43806720
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1836
	019 Move W11, 43
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+1992], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void ovr_VoipOptions_SetCreateNewConnectionUseDtx(System.IntPtr handle, Oculus.Platform.VoipDtxState value)

Disassembly:
	0x034D0734 CSET W0, NE
	0x034D0738 RET
	0x034D073C LDR X0, [X0 + 0x18]
	0x034D0740 RET
	0x034D0744 LDR X0, [X0 + 0x20]
	0x034D0748 RET
	0x034D074C MOV X0, X31
	0x034D0750 RET
	0x034D0754 MOV X0, X31
	0x034D0758 RET
	0x034D075C MOV X0, X31
	0x034D0760 RET
	0x034D0764 MOV X0, X31
	0x034D0768 RET
	0x034D076C MOV X0, X31
	0x034D0770 RET
	0x034D0774 MOV X0, X31
	0x034D0778 RET
	0x034D077C MOV X0, X31
	0x034D0780 RET
	0x034D0784 MOV X0, X31
	0x034D0788 RET
	0x034D078C MOV X0, X31
	0x034D0790 RET
	0x034D0794 MOV X0, X31
	0x034D0798 RET
	0x034D079C MOV X0, X31
	0x034D07A0 RET
	0x034D07A4 MOV X0, X31
	0x034D07A8 RET
	0x034D07AC MOV X0, X31
	0x034D07B0 RET
	0x034D07B4 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xF10000
	007 Move X8, [X21+2000]
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {32}
	012 Move X12, -43917312
	013 Move V0, [X12+1464]
	014 Move X8, -43761664
	015 Move X10, -43905024
	016 Add X8, X8, 3538
	017 Move W9, 17
	018 Add X10, X10, 1074
	019 Move W11, 44
	020 Move W13, 12
	021 Add X0, X31, 0
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Move [X31+16], X10
	025 Move [X31+24], X11
	026 Move [X31+40], W13
	027 Move [X31+32], D0
	028 Move [X31+44], W31
	029 Call 0x1C1829C
	030 Move X8, X0
	031 Move [X21+2000], X0
	032 Move X0, X20
	033 Move W1, W19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X30, [X31+48]
	038 Move X21, [X31+56]
	039 Add X31, X31, 80
	040 Return 

Method: System.Void .ctor()

Disassembly:
	0x034D07B8 RET
	0x034D07BC MOV X0, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x034D07C0 RET
	0x034D07C4 MOV X0, X31
	0x034D07C8 RET
	0x034D07CC MOV X0, X31
	0x034D07D0 RET
	0x034D07D4 MOV X0, X31
	0x034D07D8 RET
	0x034D07DC MOV X0, X31
	0x034D07E0 RET
	0x034D07E4 MOV X0, X31
	0x034D07E8 RET
	0x034D07EC MOV X0, X31
	0x034D07F0 RET
	0x034D07F4 MOV X0, X31
	0x034D07F8 RET
	0x034D07FC MOV X0, X31
	0x034D0800 RET
	0x034D0804 MOV X0, X31
	0x034D0808 RET
	0x034D080C MOV X0, X31
	0x034D0810 RET
	0x034D0814 MOV X0, X31
	0x034D0818 RET
	0x034D081C MOV X0, X31
	0x034D0820 RET
	0x034D0824 MOV X0, X31
	0x034D0828 RET
	0x034D082C MOV X0, X31
	0x034D0830 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xF10000
	006 Move X21, 0xC53000
	007 Move X20, 0xC63000
	008 Move W8, [X19+2008]
	009 Move X21, [X21+2088]
	010 Move X20, [X20+808]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xC63000
	016 Move X0, [X0+808]
	017 Call 0x1C17CF4
	018 Move X0, 0xC53000
	019 Move X0, [X0+2088]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2008], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move W1, W31
	026 Move X2, X31
	027 Move X19, X0
	028 Call UTF8Encoding..ctor, X0, X1
	029 Move X8, [X20]
	030 Move X8, [X8+184]
	031 Move [X8], X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

