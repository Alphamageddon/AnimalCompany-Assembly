Type: Oculus.Platform.CallbackRunner

Method: System.Void ovr_UnityResetTestPlatform()

Disassembly:
	0x034B3CB8 STRB W8, [X20 + 0xB70]
	0x034B3CBC ADRP X21, 0xC68000
	0x034B3CC0 LDR X21, [X21 + 0x850]
	0x034B3CC4 MOVN W20, 0x0
	0x034B3CC8 LDR X0, [X21]
	0x034B3CCC LDR W8, [X0 + 0xE0]
	0x034B3CD0 CBNZ W8, 0x34B3CD8
	0x034B3CD4 BL 0x1C16DFC
	0x034B3CD8 ADD W20, W20, 0x1
	0x034B3CDC MOV X0, X19
	0x034B3CE0 MOV W1, W20
	0x034B3CE4 MOV X2, X31
	0x034B3CE8 BL 0x32C1128
	0x034B3CEC ANDS W31, W0, 0xFF
	0x034B3CF0 B.NE 0x34B3CC8
	0x034B3CF4 MOV W0, W20
	0x034B3CF8 LDP X20, X19, [X31 + 0x10]
	0x034B3CFC LDP X30, X21, [X31], #0x20
	0x034B3D00 RET
	0x034B3D04 SUB X31, X31, 0x40
	0x034B3D08 STP X30, X21, [X31 + 0x20]
	0x034B3D0C STP X20, X19, [X31 + 0x30]
	0x034B3D10 ADRP X21, 0xF2A000
	0x034B3D14 ADRP X20, 0xC41000
	0x034B3D18 LDRB W8, [X21 + 0xB71]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, 0xF2B000
	005 Move X0, [X19+2912]
	006 Compare X0, 0
	007 JumpIfNotEqual {26}
	008 Move X12, -43798528
	009 Move V0, [X12+1800]
	010 Move X8, -43642880
	011 Move X10, -43687936
	012 Add X8, X8, 3538
	013 Move W9, 17
	014 Add X10, X10, 1016
	015 Move W11, 26
	016 Add X0, X31, 0
	017 Move [X31+40], W31
	018 Move [X31], X8
	019 Move [X31+8], X9
	020 Move [X31+16], X10
	021 Move [X31+24], X11
	022 Move [X31+32], D0
	023 Move [X31+44], W31
	024 Call 0x1C1829C
	025 Move [X19+2912], X0
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X30, [X31+48]
	028 Move X19, [X31+56]
	029 Add X31, X31, 64
	030 Return 

Method: System.Void Awake()

Disassembly:
	0x034B3D1C LDR X20, [X20 + 0x9F0]
	0x034B3D20 MOV X19, X0
	0x034B3D24 TBNZ X8, 0x0, 0x34B3D3C
	0x034B3D28 ADRP X0, 0xC41000
	0x034B3D2C LDR X0, [X0 + 0x9F0]
	0x034B3D30 BL 0x1C16CF4
	0x034B3D34 MOVZ W8, 0x1
	0x034B3D38 STRB W8, [X21 + 0xB71]
	0x034B3D3C LDR X0, [X20]
	0x034B3D40 STP X31, X31, [X31 + 0x10]
	0x034B3D44 LDR W8, [X0 + 0xE0]
	0x034B3D48 CBNZ W8, 0x34B3D50
	0x034B3D4C BL 0x1C16DFC
	0x034B3D50 ADD X0, X31, 0x18
	0x034B3D54 MOVZ W1, 0x7B2
	0x034B3D58 MOVZ W2, 0x1
	0x034B3D5C MOVZ W3, 0x1
	0x034B3D60 MOV W4, W31
	0x034B3D64 MOV W5, W31
	0x034B3D68 MOV W6, W31
	0x034B3D6C MOV W7, W31
	0x034B3D70 STR X31, [X31]
	0x034B3D74 BL 0x335F594
	0x034B3D78 UCVTF D0, X19
	0x034B3D7C ADD X0, X31, 0x18
	0x034B3D80 MOV X1, X31
	0x034B3D84 BL 0x336059C
	0x034B3D88 STR X0, [X31 + 0x10]
	0x034B3D8C ADD X0, X31, 0x10
	0x034B3D90 MOV X1, X31
	0x034B3D94 BL 0x3361FC4
	0x034B3D98 LDP X20, X19, [X31 + 0x30]
	0x034B3D9C LDP X30, X21, [X31 + 0x20]
	0x034B3DA0 ADD X31, X31, 0x40
	0x034B3DA4 RET
	0x034B3DA8 SUB X31, X31, 0x40
	0x034B3DAC STP X30, X0, [X31 + 0x20]
	0x034B3DB0 STP X20, X19, [X31 + 0x30]
	0x034B3DB4 ADRP X19, 0xF2A000
	0x034B3DB8 ADRP X20, 0xC41000
	0x034B3DBC LDRB W8, [X19 + 0xB72]
	0x034B3DC0 LDR X20, [X20 + 0x9F0]
	0x034B3DC4 TBNZ X8, 0x0, 0x34B3DE8
	0x034B3DC8 ADRP X0, 0xC41000
	0x034B3DCC LDR X0, [X0 + 0x9F0]
	0x034B3DD0 BL 0x1C16CF4
	0x034B3DD4 ADRP X0, 0xC42000
	0x034B3DD8 LDR X0, [X0 + 0x570]
	0x034B3DDC BL 0x1C16CF4
	0x034B3DE0 MOVZ W8, 0x1
	0x034B3DE4 STRB W8, [X19 + 0xB72]
	0x034B3DE8 LDR X0, [X20]
	0x034B3DEC STP X31, X31, [X31 + 0x10]
	0x034B3DF0 LDR W8, [X0 + 0xE0]
	0x034B3DF4 CBNZ W8, 0x34B3DFC
	0x034B3DF8 BL 0x1C16DFC
	0x034B3DFC ADD X0, X31, 0x28
	0x034B3E00 MOV X1, X31
	0x034B3E04 BL 0x336139C
	0x034B3E08 CMP W0, 0x1
	0x034B3E0C B.NE 0x34B3E18
	0x034B3E10 LDR X19, [X31 + 0x28]
	0x034B3E14 B 0x34B3E38
	0x034B3E18 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2B000
	006 Move X20, 0xC41000
	007 Move W8, [X21+2920]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xC41000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0xC80000
	018 Move X0, [X0+960]
	019 Call 0x1C17CF4
	020 Move X0, 0xC41000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0xC80000
	024 Move X0, [X0+968]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2920], W8
	028 Move X0, [X20]
	029 Move X21, 0xC80000
	030 Move W8, [X0+224]
	031 Move X21, [X21+960]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 Call 0x222E02C
	037 Move X1, X19
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {56}
	044 Move X8, 0xC41000
	045 Move X8, [X8+2600]
	046 Move X21, 0xC80000
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Move X21, [X21+968]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Move X1, X31
	055 Call Debug.LogWarning, X0
	056 Move W8, [X19+32]
	057 Compare W8, 0
	058 JumpIfEqual {77}
	059 Move X0, X19
	060 Move X1, X31
	061 Call Component.get_gameObject, X0
	062 Move X8, [X20]
	063 Move X19, X0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X0, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X1, X31
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Call Object.DontDestroyOnLoad, X0
	076 Return 
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return 

Method: System.Void Update()

Disassembly:
	0x034B3E1C LDR W8, [X0 + 0xE0]
	0x034B3E20 CBNZ W8, 0x34B3E28

ISIL:
	001 Move W0, W31

Method: System.Void OnDestroy()

Disassembly:
	0x034B3E8C BL 0x3363010

ISIL:
	001 Return 

Method: System.Void OnApplicationQuit()

Disassembly:
	0x034B3E90 LDR X8, [X20]
	0x034B3E94 STR X0, [X31 + 0x10]
	0x034B3E98 LDR W9, [X8 + 0xE0]
	0x034B3E9C CBNZ W9, 0x34B3EA8
	0x034B3EA0 MOV X0, X8
	0x034B3EA4 BL 0x1C16DFC
	0x034B3EA8 ADD X0, X31, 0x10
	0x034B3EAC MOV X1, X31
	0x034B3EB0 BL 0x3394234
	0x034B3EB4 LDP X20, X19, [X31 + 0x30]
	0x034B3EB8 LDR X30, [X31 + 0x20]
	0x034B3EBC FCVTZS X8, D0
	0x034B3EC0 FCVTZU X9, D0
	0x034B3EC4 FCMP D0, 0x0
	0x034B3EC8 CSEL X0, X8, X9, MI
	0x034B3ECC ADD X31, X31, 0x40
	0x034B3ED0 RET
	0x034B3ED4 STR X30, [X31 - 0x40]!
	0x034B3ED8 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xF2B000
	005 Move X20, 0xC69000
	006 Move W8, [X19+2921]
	007 Move X20, [X20+2176]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xC69000
	013 Move X0, [X0+2176]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2921], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call Callback.OnApplicationQuit
	026 Return 

Method: System.Void .ctor()

Disassembly:
	0x034B3EDC STP X22, X21, [X31 + 0x20]
	0x034B3EE0 STP X20, X19, [X31 + 0x30]
	0x034B3EE4 ADRP X20, 0xF2A000
	0x034B3EE8 ADRP X21, 0xC40000

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

