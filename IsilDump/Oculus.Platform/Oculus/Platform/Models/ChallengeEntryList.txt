Type: Oculus.Platform.Models.ChallengeEntryList

Method: System.Void .ctor(System.IntPtr a)

Disassembly:
	0x034E98C4 LDR X0, [X22]
	0x034E98C8 LDR W8, [X0 + 0xE0]
	0x034E98CC CBNZ W8, 0x34E98D4
	0x034E98D0 BL 0x1C16DFC
	0x034E98D4 MOV X0, X20
	0x034E98D8 MOV X1, X31
	0x034E98DC BL 0x34C4188
	0x034E98E0 STR X0, [X19 + 0x10]
	0x034E98E4 MOV X0, X20
	0x034E98E8 MOV X1, X31
	0x034E98EC BL 0x34C425C
	0x034E98F0 STR X0, [X19 + 0x18]
	0x034E98F4 MOV X0, X20
	0x034E98F8 MOV X1, X31
	0x034E98FC BL 0x34C4330
	0x034E9900 STR X0, [X19 + 0x20]
	0x034E9904 MOV X0, X20
	0x034E9908 MOV X1, X31
	0x034E990C BL 0x34C4404
	0x034E9910 STR W0, [X19 + 0x28]
	0x034E9914 MOV X0, X20
	0x034E9918 MOV X1, X31
	0x034E991C BL 0x34C4480
	0x034E9920 STR X0, [X19 + 0x30]
	0x034E9924 MOV X0, X20
	0x034E9928 MOV X1, X31
	0x034E992C BL 0x34C4554
	0x034E9930 STR X0, [X19 + 0x38]
	0x034E9934 MOV X0, X20
	0x034E9938 MOV X1, X31
	0x034E993C BL 0x34C4628
	0x034E9940 STR X0, [X19 + 0x40]
	0x034E9944 MOV X0, X20
	0x034E9948 MOV X1, X31
	0x034E994C BL 0x34C46FC
	0x034E9950 LDR X8, [X21]
	0x034E9954 MOV X20, X0
	0x034E9958 MOV X0, X8
	0x034E995C BL 0x1C16F10
	0x034E9960 MOV X1, X20
	0x034E9964 MOV X21, X0
	0x034E9968 BL 0x34E99A0
	0x034E996C MOV X0, X20
	0x034E9970 MOV X1, X31
	0x034E9974 MOV X2, X31
	0x034E9978 STR X21, [X19 + 0x50]
	0x034E997C BL 0x33BE5B0
	0x034E9980 MOV X8, X31
	0x034E9984 TBNZ X0, 0x0, 0x34E998C
	0x034E9988 LDR X8, [X19 + 0x50]
	0x034E998C STR X8, [X19 + 0x48]
	0x034E9990 LDP X20, X19, [X31 + 0x20]
	0x034E9994 LDP X22, X21, [X31 + 0x10]
	0x034E9998 LDR X30, [X31], #0x30
	0x034E999C RET
	0x034E99A0 STR X30, [X31 - 0x60]!
	0x034E99A4 STP X28, X27, [X31 + 0x10]
	0x034E99A8 STP X26, X25, [X31 + 0x20]
	0x034E99AC STP X24, X23, [X31 + 0x30]
	0x034E99B0 STP X22, X21, [X31 + 0x40]
	0x034E99B4 STP X20, X19, [X31 + 0x50]
	0x034E99B8 ADRP X22, 0xEF6000
	0x034E99BC ADRP X21, 0xC4A000
	0x034E99C0 ADRP X25, 0xC49000
	0x034E99C4 LDRB W8, [X22 + 0x9F2]
	0x034E99C8 LDR X21, [X21 + 0x458]
	0x034E99CC LDR X25, [X25 + 0x328]
	0x034E99D0 MOV X20, X1
	0x034E99D4 MOV X19, X0
	0x034E99D8 TBNZ X8, 0x0, 0x34E9A2C
	0x034E99DC ADRP X0, 0xC49000
	0x034E99E0 LDR X0, [X0 + 0x328]
	0x034E99E4 BL 0x1C16CF4
	0x034E99E8 ADRP X0, 0xC4A000
	0x034E99EC LDR X0, [X0 + 0x458]
	0x034E99F0 BL 0x1C16CF4
	0x034E99F4 ADRP X0, 0xC4A000
	0x034E99F8 LDR X0, [X0 + 0x460]
	0x034E99FC BL 0x1C16CF4
	0x034E9A00 ADRP X0, 0xC4A000
	0x034E9A04 LDR X0, [X0 + 0x468]
	0x034E9A08 BL 0x1C16CF4
	0x034E9A0C ADRP X0, 0xC4A000
	0x034E9A10 LDR X0, [X0 + 0x470]
	0x034E9A14 BL 0x1C16CF4
	0x034E9A18 ADRP X0, 0xC49000
	0x034E9A1C LDR X0, [X0 + 0xD48]
	0x034E9A20 BL 0x1C16CF4
	0x034E9A24 MOVZ W8, 0x1
	0x034E9A28 STRB W8, [X22 + 0x9F2]
	0x034E9A2C LDR X1, [X21]
	0x034E9A30 ADRP X22, 0xC4A000
	0x034E9A34 ADRP X21, 0xC4A000
	0x034E9A38 LDR X22, [X22 + 0x470]
	0x034E9A3C LDR X21, [X21 + 0x468]
	0x034E9A40 MOV X0, X19
	0x034E9A44 BL 0x29B48F8
	0x034E9A48 LDR X0, [X25]
	0x034E9A4C LDR W8, [X0 + 0xE0]
	0x034E9A50 CBNZ W8, 0x34E9A58
	0x034E9A54 BL 0x1C16DFC
	0x034E9A58 MOV X0, X20
	0x034E9A5C MOV X1, X31
	0x034E9A60 BL 0x34CC84C
	0x034E9A64 MOV X1, X31
	0x034E9A68 BL 0x33D53AC
	0x034E9A6C LDR X8, [X22]
	0x034E9A70 MOV W23, W0
	0x034E9A74 MOV X0, X8
	0x034E9A78 BL 0x1C16F10
	0x034E9A7C LDR X2, [X21]
	0x034E9A80 MOV W1, W23
	0x034E9A84 MOV X22, X0
	0x034E9A88 BL 0x301B830
	0x034E9A8C CMP W23, 0x1
	0x034E9A90 STR X22, [X19 + 0x10]
	0x034E9A94 B.LT 0x34E9B70
	0x034E9A98 ADRP X26, 0xC49000
	0x034E9A9C ADRP X27, 0xC4A000
	0x034E9AA0 LDR X26, [X26 + 0xD48]
	0x034E9AA4 LDR X27, [X27 + 0x460]
	0x034E9AA8 MOV W8, W23
	0x034E9AAC MOV X21, X31
	0x034E9AB0 SUB X28, X8, 0x1
	0x034E9AB4 MOV X0, X21
	0x034E9AB8 MOV X1, X31
	0x034E9ABC BL 0x33D53B0
	0x034E9AC0 LDR X8, [X25]
	0x034E9AC4 MOV X23, X0
	0x034E9AC8 LDR W9, [X8 + 0xE0]
	0x034E9ACC CBNZ W9, 0x34E9AD8
	0x034E9AD0 MOV X0, X8
	0x034E9AD4 BL 0x1C16DFC
	0x034E9AD8 MOV X0, X20
	0x034E9ADC MOV X1, X23
	0x034E9AE0 MOV X2, X31
	0x034E9AE4 BL 0x34CC6F4
	0x034E9AE8 LDR X8, [X26]
	0x034E9AEC MOV X24, X0
	0x034E9AF0 MOV X0, X8

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xEF7000
	013 Move X21, 0xC4B000
	014 Move X25, 0xC4A000
	015 Move W8, [X22+2487]
	016 Move X21, [X21+952]
	017 Move X25, [X25+808]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0xC4A000
	025 Move X0, [X0+808]
	026 Call 0x1C17CF4
	027 Move X0, 0xC4B000
	028 Move X0, [X0+960]
	029 Call 0x1C17CF4
	030 Move X0, 0xC4B000
	031 Move X0, [X0+952]
	032 Call 0x1C17CF4
	033 Move X0, 0xC4B000
	034 Move X0, [X0+968]
	035 Call 0x1C17CF4
	036 Move X0, 0xC4B000
	037 Move X0, [X0+976]
	038 Call 0x1C17CF4
	039 Move X0, 0xC4B000
	040 Move X0, [X0+984]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2487], W8
	044 Move X1, [X21]
	045 Move X22, 0xC4B000
	046 Move X21, 0xC4B000
	047 Move X22, [X22+984]
	048 Move X21, [X21+976]
	049 Move X0, X19
	050 Call 0x29B58F8, X0
	051 Move X0, [X25]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Move X1, X31
	058 Call CAPI.ovr_ChallengeEntryArray_GetSize, X0
	059 Move X1, X31
	060 Call UIntPtr.op_Explicit, X0
	061 Move X8, [X22]
	062 Move W23, W0
	063 Move X0, X8
	064 Call 0x1C17F10
	065 Move X2, [X21]
	066 Move W1, W23
	067 Move X22, X0
	068 Call List`1<Object>..ctor, X0, X1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X19+16], X22
	071 Move X26, 0xC4B000
	072 Move X27, 0xC4B000
	073 Move X26, [X26+960]
	074 Move X27, [X27+968]
	075 Move W8, W23
	076 Move X21, X31
	077 Subtract X28, X8, 1
	078 Move X0, X21
	079 Move X1, X31
	080 Call UIntPtr.op_Explicit, X0
	081 Move X8, [X25]
	082 Move X23, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, X20
	089 Move X1, X23
	090 Move X2, X31
	091 Call CAPI.ovr_ChallengeEntryArray_GetElement, X0, X1
	092 Move X8, [X26]
	093 Move X24, X0
	094 Move X0, X8
	095 Call 0x1C17F10
	096 Move X1, X24
	097 Move X23, X0
	098 Call ChallengeEntry..ctor, X0, X1
	099 Compare X22, 0
	100 JumpIfEqual {153}
	101 Move W10, [X22+28]
	102 Move X8, [X22+16]
	103 Move X9, [X27]
	104 Add W10, W10, 1
	105 Move [X22+28], W10
	106 Compare X8, 0
	107 JumpIfEqual {153}
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Move W11, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add W9, W10, 1
	112 Add X8, X8, X10
	113 Move [X22+24], W9
	114 Move [X8+32], X23
	115 Move X8, [X9+32]
	116 Move X0, X22
	117 Move X1, X23
	118 Move X8, [X8+192]
	119 Move X2, [X8+112]
	120 Call List`1<Object>.AddWithResize, X0, X1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X22, [X19+16]
	123 Add X21, X21, 1
	124 Move X0, [X25]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X20
	130 Move X1, X31
	131 Call CAPI.ovr_ChallengeEntryArray_GetTotalCount, X0
	132 Move [X19+40], X0
	133 Move X0, X20
	134 Move X1, X31
	135 Call CAPI.ovr_ChallengeEntryArray_GetPreviousUrl, X0
	136 Move [X19+32], X0
	137 Move X0, X20
	138 Move X1, X31
	139 Call CAPI.ovr_ChallengeEntryArray_GetNextUrl, X0
	140 Move [X19+24], X0
	141 Move X20, [X31+80]
	142 Move X19, [X31+88]
	143 Move X22, [X31+64]
	144 Move X21, [X31+72]
	145 Move X24, [X31+48]
	146 Move X23, [X31+56]
	147 Move X26, [X31+32]
	148 Move X25, [X31+40]
	149 Move X28, [X31+16]
	150 Move X27, [X31+24]
	151 Move X30, [X31+96]
	152 Return 
	153 Call 0x1C17F20

