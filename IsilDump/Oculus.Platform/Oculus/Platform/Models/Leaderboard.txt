Type: Oculus.Platform.Models.Leaderboard

Method: System.Void .ctor(System.IntPtr o)

Disassembly:
	0x034EAE04 ADRP X21, 0xEF5000
	0x034EAE08 ADRP X22, 0xC48000
	0x034EAE0C LDRB W8, [X21 + 0x9D9]
	0x034EAE10 LDR X22, [X22 + 0x328]
	0x034EAE14 MOV X20, X1
	0x034EAE18 MOV X19, X0
	0x034EAE1C TBNZ X8, 0x0, 0x34EAE40
	0x034EAE20 ADRP X0, 0xC48000
	0x034EAE24 LDR X0, [X0 + 0x328]
	0x034EAE28 BL 0x1C16CF4
	0x034EAE2C ADRP X0, 0xC48000
	0x034EAE30 LDR X0, [X0 + 0xC28]
	0x034EAE34 BL 0x1C16CF4
	0x034EAE38 MOVZ W8, 0x1
	0x034EAE3C STRB W8, [X21 + 0x9D9]
	0x034EAE40 ADRP X21, 0xC48000
	0x034EAE44 LDR X21, [X21 + 0xC28]
	0x034EAE48 MOV X0, X19
	0x034EAE4C MOV X1, X31
	0x034EAE50 BL 0x33BDD8C
	0x034EAE54 LDR X0, [X22]
	0x034EAE58 LDR W8, [X0 + 0xE0]
	0x034EAE5C CBNZ W8, 0x34EAE64
	0x034EAE60 BL 0x1C16DFC
	0x034EAE64 MOV X0, X20
	0x034EAE68 MOV X1, X31
	0x034EAE6C BL 0x34C9260
	0x034EAE70 STR X0, [X19 + 0x10]
	0x034EAE74 MOV X0, X20
	0x034EAE78 MOV X1, X31
	0x034EAE7C BL 0x34C92DC
	0x034EAE80 LDR X8, [X21]
	0x034EAE84 MOV X20, X0
	0x034EAE88 MOV X0, X8
	0x034EAE8C BL 0x1C16F10
	0x034EAE90 MOV X1, X20
	0x034EAE94 MOV X21, X0
	0x034EAE98 BL 0x34EAC08
	0x034EAE9C STR X21, [X19 + 0x18]
	0x034EAEA0 LDP X20, X19, [X31 + 0x20]
	0x034EAEA4 LDP X22, X21, [X31 + 0x10]
	0x034EAEA8 LDR X30, [X31], #0x30
	0x034EAEAC RET
	0x034EAEB0 STR X30, [X31 - 0x30]!
	0x034EAEB4 STP X22, X21, [X31 + 0x10]
	0x034EAEB8 STP X20, X19, [X31 + 0x20]
	0x034EAEBC ADRP X21, 0xEF5000
	0x034EAEC0 ADRP X22, 0xC48000
	0x034EAEC4 LDRB W8, [X21 + 0x9DA]
	0x034EAEC8 LDR X22, [X22 + 0x328]
	0x034EAECC MOV X20, X1
	0x034EAED0 MOV X19, X0
	0x034EAED4 TBNZ X8, 0x0, 0x34EAEF8
	0x034EAED8 ADRP X0, 0xC48000
	0x034EAEDC LDR X0, [X0 + 0x328]
	0x034EAEE0 BL 0x1C16CF4
	0x034EAEE4 ADRP X0, 0xC49000
	0x034EAEE8 LDR X0, [X0 + 0x510]
	0x034EAEEC BL 0x1C16CF4
	0x034EAEF0 MOVZ W8, 0x1
	0x034EAEF4 STRB W8, [X21 + 0x9DA]
	0x034EAEF8 ADRP X21, 0xC49000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xEF6000
	008 Move X23, 0xC49000
	009 Move W8, [X21+2507]
	010 Move X23, [X23+808]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC49000
	018 Move X0, [X0+808]
	019 Call 0x1C17CF4
	020 Move X0, 0xC4A000
	021 Move X0, [X0+944]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2507], W8
	025 Move X21, 0xC4A000
	026 Move X21, [X21+944]
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Move X0, [X23]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Call CAPI.ovr_Leaderboard_GetApiName, X0
	038 Move [X19+16], X0
	039 Move X0, X20
	040 Move X1, X31
	041 Call CAPI.ovr_Leaderboard_GetDestination, X0
	042 Move X8, [X21]
	043 Move X21, X0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, X21
	047 Move X22, X0
	048 Call Destination..ctor, X0, X1
	049 Move X0, X21
	050 Move X1, X31
	051 Move X2, X31
	052 Move [X19+32], X22
	053 Call IntPtr.op_Equality, X0, X1
	054 Move X8, X31
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Move X8, [X19+32]
	060 Move [X19+24], X8
	061 Move X0, [X23]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Call CAPI.ovr_Leaderboard_GetID, X0
	069 Move [X19+40], X0
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return 

