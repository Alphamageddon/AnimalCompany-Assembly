Type: Oculus.Platform.ApplicationOptions

Method: System.Void .ctor()

Disassembly:
	0x034B29EC STP X22, X21, [X31 + 0x10]
	0x034B29F0 STP X20, X19, [X31 + 0x20]
	0x034B29F4 ADRP X20, 0xF2B000
	0x034B29F8 LDRB W8, [X20 + 0xB58]
	0x034B29FC MOV W19, W0
	0x034B2A00 TBNZ X8, 0x0, 0x34B2A18
	0x034B2A04 ADRP X0, 0xC69000
	0x034B2A08 LDR X0, [X0 + 0x880]
	0x034B2A0C BL 0x1C16CF4
	0x034B2A10 MOVZ W8, 0x1
	0x034B2A14 STRB W8, [X20 + 0xB58]
	0x034B2A18 CBZ W19, 0x34B2A60
	0x034B2A1C ADRP X20, 0xC69000
	0x034B2A20 LDR X20, [X20 + 0x880]
	0x034B2A24 MOV W21, W19
	0x034B2A28 MOVZ W22, 0x1
	0x034B2A2C BL 0x34B26CC
	0x034B2A30 CBZ X0, 0x34B2A60
	0x034B2A34 MOV X19, X0
	0x034B2A38 LDR X0, [X20]
	0x034B2A3C LDR W8, [X0 + 0xE0]
	0x034B2A40 CBNZ W8, 0x34B2A48
	0x034B2A44 BL 0x1C16DFC
	0x034B2A48 MOV X0, X19
	0x034B2A4C BL 0x34B27A0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2C000
	006 Move X20, 0xC81000
	007 Move W8, [X21+2891]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC81000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2891], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call CAPI.ovr_ApplicationOptions_Create
	028 Move [X19+16], X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Void SetDeeplinkMessage(System.String value)

Disassembly:
	0x034B2AB8 LDR X0, [X19]
	0x034B2ABC LDR W8, [X0 + 0xE0]
	0x034B2AC0 CBNZ W8, 0x34B2ACC
	0x034B2AC4 BL 0x1C16DFC
	0x034B2AC8 LDR X0, [X19]
	0x034B2ACC LDR X8, [X0 + 0xB8]
	0x034B2AD0 LDR X0, [X8]
	0x034B2AD4 CBZ X0, 0x34B2B10
	0x034B2AD8 ADRP X8, 0xC80000
	0x034B2ADC LDR X8, [X8 + 0x398]
	0x034B2AE0 LDR X1, [X8]
	0x034B2AE4 BL 0x2B1E050
	0x034B2AE8 LDR X8, [X19]
	0x034B2AEC LDR X8, [X8 + 0xB8]
	0x034B2AF0 LDR X0, [X8 + 0x8]
	0x034B2AF4 CBZ X0, 0x34B2B10
	0x034B2AF8 ADRP X8, 0xC80000
	0x034B2AFC LDR X8, [X8 + 0x390]
	0x034B2B00 LDP X20, X19, [X31 + 0x10]
	0x034B2B04 LDR X1, [X8]
	0x034B2B08 LDR X30, [X31], #0x20
	0x034B2B0C B 0x2B1B034
	0x034B2B10 BL 0x1C16F20
	0x034B2B14 STR X30, [X31 - 0x20]!
	0x034B2B18 STP X20, X19, [X31 + 0x10]
	0x034B2B1C ADRP X20, 0xF2B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2C000
	007 Move X21, 0xC81000
	008 Move W8, [X22+2892]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2892], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.Void SetDestinationApiName(System.String value)

Disassembly:
	0x034B2BC0 STP X20, X19, [X31 + 0x30]
	0x034B2BC4 ADRP X23, 0xF2B000
	0x034B2BC8 ADRP X24, 0xC80000
	0x034B2BCC ADRP X19, 0xC80000
	0x034B2BD0 ADRP X20, 0xC69000
	0x034B2BD4 ADRP X22, 0xC80000
	0x034B2BD8 ADRP X21, 0xC80000
	0x034B2BDC LDRB W8, [X23 + 0xB5C]
	0x034B2BE0 LDR X24, [X24 + 0x3A0]
	0x034B2BE4 LDR X19, [X19 + 0x3A8]
	0x034B2BE8 LDR X20, [X20 + 0x880]
	0x034B2BEC LDR X22, [X22 + 0x3B0]
	0x034B2BF0 LDR X21, [X21 + 0x3B8]
	0x034B2BF4 TBNZ X8, 0x0, 0x34B2C3C
	0x034B2BF8 ADRP X0, 0xC69000
	0x034B2BFC LDR X0, [X0 + 0x880]
	0x034B2C00 BL 0x1C16CF4
	0x034B2C04 ADRP X0, 0xC80000
	0x034B2C08 LDR X0, [X0 + 0x3A8]
	0x034B2C0C BL 0x1C16CF4
	0x034B2C10 ADRP X0, 0xC80000
	0x034B2C14 LDR X0, [X0 + 0x3B8]
	0x034B2C18 BL 0x1C16CF4
	0x034B2C1C ADRP X0, 0xC80000
	0x034B2C20 LDR X0, [X0 + 0x3A0]
	0x034B2C24 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2C000
	007 Move X21, 0xC81000
	008 Move W8, [X22+2893]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2893], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.Void SetLobbySessionId(System.String value)

Disassembly:
	0x034B2CC8 CBNZ X0, 0x34B2D0C
	0x034B2CCC ADRP X12, 0xFFFFFFFFFD63B000
	0x034B2CD0 LDR V0, [X12 + 0x708]
	0x034B2CD4 ADRP X8, 0xFFFFFFFFFD661000
	0x034B2CD8 ADRP X10, 0xFFFFFFFFFD656000
	0x034B2CDC ADD X8, X8, 0xDD2
	0x034B2CE0 MOVZ W9, 0x11
	0x034B2CE4 ADD X10, X10, 0x3F8
	0x034B2CE8 MOVZ W11, 0x1A
	0x034B2CEC ADD X0, X31, 0x0
	0x034B2CF0 STR W31, [X31 + 0x28]
	0x034B2CF4 STP X8, X9, [X31]
	0x034B2CF8 STP X10, X11, [X31 + 0x10]
	0x034B2CFC STR D0, [X31 + 0x20]
	0x034B2D00 STRB W31, [X31 + 0x2C]
	0x034B2D04 BL 0x1C1729C
	0x034B2D08 STR X0, [X19 + 0xB60]
	0x034B2D0C BLR X0
	0x034B2D10 LDP X30, X19, [X31 + 0x30]
	0x034B2D14 ADD X31, X31, 0x40
	0x034B2D18 RET
	0x034B2D1C STP X30, X21, [X31 - 0x20]!
	0x034B2D20 STP X20, X19, [X31 + 0x10]
	0x034B2D24 ADRP X21, 0xF2B000
	0x034B2D28 ADRP X20, 0xC41000
	0x034B2D2C LDRB W8, [X21 + 0xB68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2C000
	007 Move X21, 0xC81000
	008 Move W8, [X22+2894]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2894], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.Void SetMatchSessionId(System.String value)

Disassembly:
	0x034B2DD0 LDRB W8, [X19 + 0x20]
	0x034B2DD4 CBZ W8, 0x34B2E10
	0x034B2DD8 MOV X0, X19
	0x034B2DDC MOV X1, X31
	0x034B2DE0 BL 0x3C32ECC
	0x034B2DE4 LDR X8, [X20]
	0x034B2DE8 MOV X19, X0
	0x034B2DEC LDR W9, [X8 + 0xE0]
	0x034B2DF0 CBNZ W9, 0x34B2DFC
	0x034B2DF4 MOV X0, X8
	0x034B2DF8 BL 0x1C16DFC
	0x034B2DFC MOV X0, X19
	0x034B2E00 LDP X20, X19, [X31 + 0x10]
	0x034B2E04 MOV X1, X31
	0x034B2E08 LDP X30, X21, [X31], #0x20
	0x034B2E0C B 0x3C39674
	0x034B2E10 LDP X20, X19, [X31 + 0x10]
	0x034B2E14 LDP X30, X21, [X31], #0x20
	0x034B2E18 RET
	0x034B2E1C MOV W0, W31
	0x034B2E20 B 0x34B2E24
	0x034B2E24 STP X30, X21, [X31 - 0x20]!
	0x034B2E28 STP X20, X19, [X31 + 0x10]
	0x034B2E2C ADRP X20, 0xF2D000
	0x034B2E30 ADRP X21, 0xC69000
	0x034B2E34 LDRB W8, [X20 + 0x97B]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2C000
	007 Move X21, 0xC81000
	008 Move W8, [X22+2895]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2895], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.Void SetRoomId(System.UInt64 value)

Disassembly:
	0x034B2ED8 B 0x34B2A70
	0x034B2EDC MOVZ W8, 0x1
	0x034B2EE0 MOV X1, X31
	0x034B2EE4 STRB W8, [X0 + 0x20]
	0x034B2EE8 B 0x3C36C30
	0x034B2EEC STR X30, [X31 - 0x40]!
	0x034B2EF0 STP X24, X23, [X31 + 0x10]
	0x034B2EF4 STP X22, X21, [X31 + 0x20]
	0x034B2EF8 STP X20, X19, [X31 + 0x30]
	0x034B2EFC ADRP X20, 0xF2B000
	0x034B2F00 LDRB W8, [X20 + 0xB6A]
	0x034B2F04 MOV X19, X0
	0x034B2F08 TBNZ X8, 0x0, 0x34B2F20
	0x034B2F0C ADRP X0, 0xC69000
	0x034B2F10 LDR X0, [X0 + 0x850]
	0x034B2F14 BL 0x1C16CF4
	0x034B2F18 MOVZ W8, 0x1
	0x034B2F1C STRB W8, [X20 + 0xB6A]
	0x034B2F20 CBZ X19, 0x34B3080
	0x034B2F24 ADRP X24, 0xC69000
	0x034B2F28 LDR X24, [X24 + 0x850]
	0x034B2F2C MOV X0, X19
	0x034B2F30 MOV X1, X31
	0x034B2F34 BL 0x3395B7C
	0x034B2F38 CMP W0, 0x1
	0x034B2F3C B.LT 0x34B2F9C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2C000
	007 Move X21, 0xC81000
	008 Move W8, [X22+2896]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2896], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.IntPtr op_Explicit(Oculus.Platform.ApplicationOptions options)

Disassembly:
	0x034B2FC4 MOV X1, X31
	0x034B2FC8 BL 0x3395B7C
	0x034B2FCC CMP W0, 0x1

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Move X0, [X0+16]
	004 Return X0

Method: System.Void Finalize()

Disassembly:
	0x034B2FD0 B.LT 0x34B3068
	0x034B2FD4 MOV W21, W31
	0x034B2FD8 MOV X22, X20
	0x034B2FDC MOV X0, X19
	0x034B2FE0 MOV W1, W21
	0x034B2FE4 MOV X2, X31
	0x034B2FE8 BL 0x3395BDC
	0x034B2FEC LDR X8, [X24]
	0x034B2FF0 MOV X23, X0
	0x034B2FF4 LDR W9, [X8 + 0xE0]
	0x034B2FF8 CBNZ W9, 0x34B3004
	0x034B2FFC MOV X0, X8
	0x034B3000 BL 0x1C16DFC
	0x034B3004 MOV X0, X23
	0x034B3008 MOV X1, X22
	0x034B300C MOV W2, W31
	0x034B3010 MOV X3, X31
	0x034B3014 BL 0x32C186C
	0x034B3018 MOV X0, X22
	0x034B301C MOV X1, X31
	0x034B3020 BL 0x33C6944
	0x034B3024 MOV X22, X0
	0x034B3028 MOV X0, X19
	0x034B302C MOV W1, W21
	0x034B3030 MOV X2, X31
	0x034B3034 BL 0x3395BDC
	0x034B3038 MOV X1, X31
	0x034B303C BL 0x32C133C
	0x034B3040 ADD X0, X22, W0, SXTW
	0x034B3044 MOV X1, X31
	0x034B3048 BL 0x33C6938
	0x034B304C MOV X22, X0
	0x034B3050 MOV X0, X19
	0x034B3054 MOV X1, X31
	0x034B3058 ADD W21, W21, 0x1
	0x034B305C BL 0x3395B7C
	0x034B3060 CMP W21, W0
	0x034B3064 B.LT 0x34B2FDC
	0x034B3068 MOV X0, X20
	0x034B306C LDP X20, X19, [X31 + 0x30]
	0x034B3070 LDP X22, X21, [X31 + 0x20]
	0x034B3074 LDP X24, X23, [X31 + 0x10]
	0x034B3078 LDR X30, [X31], #0x40
	0x034B307C RET
	0x034B3080 BL 0x1C16F20
	0x034B3084 SUB X31, X31, 0x90
	0x034B3088 STR D8, [X31 + 0x40]
	0x034B308C STP X30, X25, [X31 + 0x50]
	0x034B3090 STP X24, X23, [X31 + 0x60]
	0x034B3094 STP X22, X21, [X31 + 0x70]
	0x034B3098 STP X20, X19, [X31 + 0x80]
	0x034B309C ADRP X19, 0xF2A000
	0x034B30A0 LDRB W8, [X19 + 0xB6B]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2C000
	006 Move X20, 0xC81000
	007 Move W8, [X21+2897]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC81000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2897], W8
	019 Move X0, [X20]
	020 Move X20, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Call CAPI.ovr_ApplicationOptions_Destroy, X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Object.Finalize, X0
	034 Return 
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X21, X0
	037 Move X0, X21
	038 Call 0x3EB2AD0
	039 Move X20, [X0]
	040 Call 0x3EB2AE0
	041 Move X0, X19
	042 Move X1, X31
	043 Call Object.Finalize, X0
	044 Compare X20, 0
	045 JumpIfNotEqual {52}
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Move X20, X31
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Move X21, X0
	055 Move X0, X19
	056 Move X1, X31
	057 Call Object.Finalize, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X21
	061 Call 0x1D2D690
	062 Move X0, X20
	063 Call 0x1C17F18
	064 Call 0x1991590

