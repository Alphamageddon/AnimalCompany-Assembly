Type: Oculus.Platform.VoipPCMSourceNative

Method: System.Int32 GetPCM(System.Single[] dest, System.Int32 length)

Disassembly:
	0x034E9064 ADRP X27, 0xC4A000
	0x034E9068 LDR X26, [X26 + 0x3B0]
	0x034E906C LDR X27, [X27 + 0x410]
	0x034E9070 MOV W8, W23
	0x034E9074 MOV X21, X31
	0x034E9078 SUB X28, X8, 0x1
	0x034E907C MOV X0, X21
	0x034E9080 MOV X1, X31
	0x034E9084 BL 0x33D53B0
	0x034E9088 LDR X8, [X25]
	0x034E908C MOV X23, X0
	0x034E9090 LDR W9, [X8 + 0xE0]
	0x034E9094 CBNZ W9, 0x34E90A0
	0x034E9098 MOV X0, X8
	0x034E909C BL 0x1C16DFC
	0x034E90A0 MOV X0, X20
	0x034E90A4 MOV X1, X23
	0x034E90A8 MOV X2, X31
	0x034E90AC BL 0x34C2BFC
	0x034E90B0 LDR X8, [X26]
	0x034E90B4 MOV X24, X0
	0x034E90B8 MOV X0, X8
	0x034E90BC BL 0x1C16F10
	0x034E90C0 MOV X1, X24
	0x034E90C4 MOV X23, X0
	0x034E90C8 BL 0x34E8EC0
	0x034E90CC CBZ X22, 0x34E9174
	0x034E90D0 LDR W10, [X22 + 0x1C]
	0x034E90D4 LDR X8, [X22 + 0x10]
	0x034E90D8 LDR X9, [X27]
	0x034E90DC ADD W10, W10, 0x1
	0x034E90E0 STR W10, [X22 + 0x1C]
	0x034E90E4 CBZ X8, 0x34E9174
	0x034E90E8 LDRSW X10, [X22 + 0x18]
	0x034E90EC LDR W11, [X8 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xEF7000
	008 Move X22, 0xC4A000
	009 Move W8, [X23+2457]
	010 Move X22, [X22+808]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xC4A000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2457], W8
	023 Move X20, [X20+16]
	024 Move X0, W21
	025 Move X1, X31
	026 Call UIntPtr.op_Explicit, X0
	027 Move X8, [X22]
	028 Move X21, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X21
	037 Call CAPI.ovr_Voip_GetPCMFloat, X0, X1, X2
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Call UIntPtr.op_Explicit, X0
	046 Return X0

Method: System.Void SetSenderID(System.UInt64 senderID)

Disassembly:
	0x034E90F0 CMP W10, W11
	0x034E90F4 B.CS 0x34E910C

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 PeekSizeElements()

Disassembly:
	0x034E90F8 ADD W9, W10, 0x1
	0x034E90FC ADD X8, X8, X10, 0x3, LSL
	0x034E9100 STR W9, [X22 + 0x18]
	0x034E9104 STR X23, [X8 + 0x20]
	0x034E9108 B 0x34E9124
	0x034E910C LDR X8, [X9 + 0x20]
	0x034E9110 MOV X0, X22
	0x034E9114 MOV X1, X23
	0x034E9118 LDR X8, [X8 + 0xC0]
	0x034E911C LDR X2, [X8 + 0x70]
	0x034E9120 BL 0x301BF90
	0x034E9124 CMP X28, X21
	0x034E9128 B.EQ 0x34E9138
	0x034E912C LDR X22, [X19 + 0x10]
	0x034E9130 ADD X21, X21, 0x1
	0x034E9134 B 0x34E907C
	0x034E9138 LDR X0, [X25]
	0x034E913C LDR W8, [X0 + 0xE0]
	0x034E9140 CBNZ W8, 0x34E9148
	0x034E9144 BL 0x1C16DFC
	0x034E9148 MOV X0, X20
	0x034E914C MOV X1, X31
	0x034E9150 BL 0x34C2C80
	0x034E9154 STR X0, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEF7000
	006 Move X20, 0xC4A000
	007 Move W8, [X21+2458]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC4A000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2458], W8
	019 Move X0, [X20]
	020 Move X19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Call CAPI.ovr_Voip_GetPCMSize, X0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call UIntPtr.op_Explicit, X0
	033 Return X0

Method: System.Void Update()

Disassembly:
	0x034E9158 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x034E8590 LDR W8, [X0 + 0xE0]
	0x034E8594 LDR X21, [X21 + 0xD48]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

