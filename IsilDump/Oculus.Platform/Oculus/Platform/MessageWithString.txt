Type: Oculus.Platform.MessageWithString

Method: System.Void .ctor(System.IntPtr c_message)

Disassembly:
	0x034D4230 TBNZ X8, 0x0, 0x34D4248
	0x034D4234 ADRP X0, 0xC5E000
	0x034D4238 LDR X0, [X0 + 0x328]
	0x034D423C BL 0x1C16CF4
	0x034D4240 MOVZ W8, 0x1
	0x034D4244 STRB W8, [X22 + 0x99F]
	0x034D4248 MOV X0, X19
	0x034D424C MOV X1, X31
	0x034D4250 BL 0x33BDD8C
	0x034D4254 LDR X0, [X21]
	0x034D4258 LDR W8, [X0 + 0xE0]
	0x034D425C CBNZ W8, 0x34D4264
	0x034D4260 BL 0x1C16DFC
	0x034D4264 MOV X0, X20
	0x034D4268 BL 0x34BE104
	0x034D426C STR X0, [X19 + 0x10]
	0x034D4270 LDP X20, X19, [X31 + 0x20]
	0x034D4274 LDP X22, X21, [X31 + 0x10]
	0x034D4278 LDR X30, [X31], #0x30
	0x034D427C RET
	0x034D4280 STR X30, [X31 - 0x20]!
	0x034D4284 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF0C000
	007 Move X22, 0xC5F000
	008 Move W8, [X21+2213]
	009 Move X22, [X22+1960]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC5F000
	017 Move X0, [X0+1960]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2213], W8
	021 Move X2, [X22]
	022 Move X0, X20
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call Message`1<Object>..ctor, X0, X1
	030 Return 

Method: System.String GetString()

Disassembly:
	0x034D9870 BL 0x1C16DFC
	0x034D9874 MOV X0, X20
	0x034D9878 BL 0x34C9648
	0x034D987C LDR X0, [X21]
	0x034D9880 LDR W8, [X0 + 0xE0]
	0x034D9884 CBNZ W8, 0x34D988C
	0x034D9888 BL 0x1C16DFC
	0x034D988C MOV X0, X19
	0x034D9890 LDP X20, X19, [X31 + 0x10]
	0x034D9894 MOV X1, X31
	0x034D9898 LDP X30, X21, [X31], #0x20
	0x034D989C B 0x33B3E9C
	0x034D98A0 STR X30, [X31 - 0x20]!
	0x034D98A4 STP X20, X19, [X31 + 0x10]
	0x034D98A8 ADRP X20, 0xF06000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF07000
	005 Move W8, [X20+2214]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC5A000
	012 Move X0, [X0+3376]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2214], W8
	016 Move X0, [X19+40]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0

Method: System.String GetDataFromMessage(System.IntPtr c_message)

Disassembly:
	0x034D98AC ADRP X19, 0xC1A000
	0x034D98B0 LDRB W8, [X20 + 0x8D2]
	0x034D98B4 LDR X19, [X19 + 0xC50]
	0x034D98B8 TBNZ X8, 0x0, 0x34D98D0
	0x034D98BC ADRP X0, 0xC1A000
	0x034D98C0 LDR X0, [X0 + 0xC50]
	0x034D98C4 BL 0x1C16CF4
	0x034D98C8 MOVZ W8, 0x1
	0x034D98CC STRB W8, [X20 + 0x8D2]
	0x034D98D0 LDR X0, [X19]
	0x034D98D4 LDR W8, [X0 + 0xE0]
	0x034D98D8 CBNZ W8, 0x34D98E4
	0x034D98DC BL 0x1C16DFC
	0x034D98E0 LDR X0, [X19]
	0x034D98E4 LDR X8, [X0 + 0xB8]
	0x034D98E8 LDP X20, X19, [X31 + 0x10]
	0x034D98EC LDRB W0, [X8]
	0x034D98F0 LDR X30, [X31], #0x20
	0x034D98F4 RET
	0x034D98F8 STR X30, [X31 - 0x20]!
	0x034D98FC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF07000
	006 Move X21, 0xC5A000
	007 Move W8, [X20+2215]
	008 Move X21, [X21+808]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC5A000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2215], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call CAPI.ovr_Message_GetString, X0
	030 Return X0

