Type: Oculus.Platform.StandalonePlatform/UnityLogDelegate

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x034E7D54 B.NE 0x34E7CF0
	0x034E7D58 B 0x34E7D60
	0x034E7D5C FMOV S0, -1
	0x034E7D60 LDR X8, [X19 + 0x20]
	0x034E7D64 CBZ X8, 0x34E7D88
	0x034E7D68 STR S0, [X8 + 0x30]
	0x034E7D6C LDP X20, X19, [X31 + 0x40]
	0x034E7D70 LDP X22, X21, [X31 + 0x30]
	0x034E7D74 LDP X24, X23, [X31 + 0x20]
	0x034E7D78 LDP X30, X25, [X31 + 0x10]
	0x034E7D7C ADD X31, X31, 0x50
	0x034E7D80 RET
	0x034E7D84 BL 0x1C16F28
	0x034E7D88 BL 0x1C16F20
	0x034E7D8C MOV X0, X20
	0x034E7D90 BL 0x19903C0
	0x034E7D94 LDR W2, [X20 + 0x18]
	0x034E7D98 MOV X0, X20
	0x034E7D9C MOV W1, W31
	0x034E7DA0 MOV X3, X31
	0x034E7DA4 BL 0x339FA34
	0x034E7DA8 STR W22, [X31 + 0xC]
	0x034E7DAC ADRP X20, 0xC0C000
	0x034E7DB0 LDR X20, [X20 + 0x758]
	0x034E7DB4 MOV X0, X20
	0x034E7DB8 BL 0x1C16D08
	0x034E7DBC ADD X1, X31, 0xC
	0x034E7DC0 BL 0x1C16E04
	0x034E7DC4 LDR X19, [X19 + 0x28]
	0x034E7DC8 MOV X21, X0
	0x034E7DCC MOV X0, X19
	0x034E7DD0 BL 0x19903C0
	0x034E7DD4 LDR X8, [X19 + 0x18]
	0x034E7DD8 MOV X0, X20
	0x034E7DDC STR W8, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {23}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -26374144
	021 Add X8, X8, 108
	022 Move [X19+24], X8
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X19+16]
	026 Move X9, [X19+32]
	027 Move [X19+24], X8
	028 Move [X19+64], X9
	029 Move X8, -26374144
	030 Add X8, X8, 20
	031 Move [X19+56], X8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move X1, -43823104
	038 Add X1, X1, 3811
	039 Move X0, X31
	040 Call 0x1C17F3C
	041 Move X1, X31
	042 Call 0x1C17DEC

Method: System.Void Invoke(System.IntPtr tag, System.IntPtr msg)

Disassembly:
	0x034E7DE0 BL 0x1C16D08
	0x034E7DE4 ADD X1, X31, 0x8
	0x034E7DE8 BL 0x1C16E04
	0x034E7DEC MOV X19, X0
	0x034E7DF0 ADRP X0, 0xC4C000

ISIL:
	001 Move X8, [X0+64]
	002 Move X4, [X0+24]
	003 Move X3, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X4

Method: System.IAsyncResult BeginInvoke(System.IntPtr tag, System.IntPtr msg, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x034E7DF4 LDR X0, [X0 + 0x3A0]
	0x034E7DF8 BL 0x1C16D08
	0x034E7DFC MOV X1, X21
	0x034E7E00 MOV X2, X19
	0x034E7E04 MOV X3, X31
	0x034E7E08 BL 0x3227BD4
	0x034E7E0C MOV X19, X0
	0x034E7E10 ADRP X0, 0xC0C000
	0x034E7E14 LDR X0, [X0 + 0x7D0]
	0x034E7E18 BL 0x1C16D08
	0x034E7E1C BL 0x1C16F10
	0x034E7E20 MOV X1, X19
	0x034E7E24 MOV X2, X31
	0x034E7E28 MOV X20, X0
	0x034E7E2C BL 0x33B2C70
	0x034E7E30 ADRP X0, 0xC4C000
	0x034E7E34 LDR X0, [X0 + 0x3A8]
	0x034E7E38 BL 0x1C16D08
	0x034E7E3C MOV X1, X0
	0x034E7E40 MOV X0, X20
	0x034E7E44 BL 0x1C16DEC
	0x034E7E48 BL 0x1C16F44
	0x034E7E4C MOV X1, X31
	0x034E7E50 BL 0x1C16DEC
	0x034E7E54 MOV X1, X31
	0x034E7E58 B 0x3C36C30
	0x034E7E5C STP X30, X21, [X31 - 0x20]!
	0x034E7E60 STP X20, X19, [X31 + 0x10]
	0x034E7E64 ADRP X21, 0xEF8000
	0x034E7E68 ADRP X20, 0xC4B000
	0x034E7E6C LDRB W8, [X21 + 0x995]
	0x034E7E70 LDR X20, [X20 + 0x328]
	0x034E7E74 MOV X19, X0
	0x034E7E78 TBNZ X8, 0x0, 0x34E7E90
	0x034E7E7C ADRP X0, 0xC4B000
	0x034E7E80 LDR X0, [X0 + 0x328]
	0x034E7E84 BL 0x1C16CF4
	0x034E7E88 MOVZ W8, 0x1
	0x034E7E8C STRB W8, [X21 + 0x995]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xEF9000
	009 Move [X31+32], X2
	010 Move [X31+40], X1
	011 Move X22, 0xC36000
	012 Move W8, [X23+2436]
	013 Move X22, [X22+3872]
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xC36000
	022 Move X0, [X0+3872]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2436], W8
	026 Move X0, [X22]
	027 Add X1, X31, 40
	028 Move [X31+8], X31
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Call 0x1C17E04
	032 Move X8, [X22]
	033 Move [X31+8], X0
	034 Add X1, X31, 32
	035 Move X0, X8
	036 Call 0x1C17E04
	037 Move [X31+16], X0
	038 Add X1, X31, 8
	039 Move X0, X21
	040 Move X2, X20
	041 Move X3, X19
	042 Call 0x1C17CB0
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Add X31, X31, 96
	050 Return X0

Method: System.Void EndInvoke(System.IAsyncResult result)

Disassembly:
	0x034E7E90 MOV X0, X19
	0x034E7E94 MOV X1, X31
	0x034E7E98 BL 0x33BDD8C

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

