Type: Oculus.Platform.VoipAudioSourceHiLevel

Method: System.Void set_senderID(System.UInt64 value)

Disassembly:
	0x034E8184 ADRP X0, 0xC0B000
	0x034E8188 LDR X0, [X0 + 0xA28]
	0x034E818C BL 0x1C16CF4
	0x034E8190 ADRP X0, 0xC33000
	0x034E8194 LDR X0, [X0 + 0x850]
	0x034E8198 BL 0x1C16CF4
	0x034E819C ADRP X0, 0xC3B000
	0x034E81A0 LDR X0, [X0 + 0xB28]
	0x034E81A4 BL 0x1C16CF4
	0x034E81A8 MOVZ W8, 0x1
	0x034E81AC STRB W8, [X22 + 0x99B]
	0x034E81B0 LDR X0, [X21]
	0x034E81B4 ADRP X22, 0xC3B000
	0x034E81B8 ADRP X21, 0xC0B000
	0x034E81BC LDR W8, [X0 + 0xE0]
	0x034E81C0 LDR X22, [X22 + 0xB28]
	0x034E81C4 LDR X21, [X21 + 0xA28]
	0x034E81C8 CBNZ W8, 0x34E81D0
	0x034E81CC BL 0x1C16DFC
	0x034E81D0 MOV X0, X20
	0x034E81D4 MOV X1, X31
	0x034E81D8 BL 0x32C132C
	0x034E81DC MOV X20, X0
	0x034E81E0 MOV X0, X19
	0x034E81E4 MOV X1, X31
	0x034E81E8 BL 0x32C132C
	0x034E81EC LDR X8, [X22]
	0x034E81F0 MOV X2, X0
	0x034E81F4 MOV X1, X20
	0x034E81F8 MOV X3, X31
	0x034E81FC MOV X0, X8
	0x034E8200 BL 0x3227BD4
	0x034E8204 LDR X8, [X21]
	0x034E8208 MOV X19, X0
	0x034E820C LDR W9, [X8 + 0xE0]
	0x034E8210 CBNZ W9, 0x34E821C
	0x034E8214 MOV X0, X8
	0x034E8218 BL 0x1C16DFC
	0x034E821C MOV X0, X19
	0x034E8220 LDP X20, X19, [X31 + 0x20]
	0x034E8224 LDP X22, X21, [X31 + 0x10]
	0x034E8228 MOV X1, X31
	0x034E822C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEF8000
	006 Move W8, [X21+2446]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xC4C000
	014 Move X0, [X0+856]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2446], W8
	018 Move X20, [X20+56]
	019 Compare X20, 0
	020 JumpIfEqual {50}
	021 Move X10, 0xC4C000
	022 Move X8, [X20]
	023 Move X10, [X10+856]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 1
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 1
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X3, [X0]
	042 Move X2, [X0+8]
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 CallNoReturn X3
	050 Call 0x1C17F20

Method: System.Void Stop()

Disassembly:
	0x034E8230 B 0x3C06048

ISIL:
	001 Return 

Method: Oculus.Platform.VoipSampleRate SampleRateToEnum(System.Int32 rate)

Disassembly:
	0x034E8234 MOV X0, X31
	0x034E8238 RET
	0x034E823C STP X30, X21, [X31 - 0x20]!
	0x034E8240 STP X20, X19, [X31 + 0x10]
	0x034E8244 LDR X8, [X2 + 0x8]
	0x034E8248 STP X1, X2, [X0 + 0x20]
	0x034E824C MOV X19, X0
	0x034E8250 MOV X20, X1
	0x034E8254 STR X8, [X0 + 0x10]
	0x034E8258 LDRB W21, [X2 + 0x52]
	0x034E825C STR X0, [X0 + 0x40]
	0x034E8260 MOV X0, X2
	0x034E8264 BL 0x1C16D84
	0x034E8268 TBZ X0, 0x0, 0x34E8284
	0x034E826C CMP W21, 0x2
	0x034E8270 B.NE 0x34E8288
	0x034E8274 ADRP X8, 0xFFFFFFFFFE6D7000

ISIL:
	001 Move W8, 0x5DC0
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 0xAC44
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, 0xBB80
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, 3
	008 Return X0
	009 Move W0, 1
	010 Return X0
	011 Move W0, 2
	012 Return X0
	013 Move W0, W31
	014 Return X0

Method: System.Void Awake()

Disassembly:
	0x034E8278 ADD X8, X8, 0xE8
	0x034E827C STR X8, [X19 + 0x18]
	0x034E8280 B 0x34E8298
	0x034E8284 CBZ X20, 0x34E82B0
	0x034E8288 LDR X8, [X19 + 0x10]
	0x034E828C LDR X9, [X19 + 0x20]
	0x034E8290 STR X8, [X19 + 0x18]
	0x034E8294 STR X9, [X19 + 0x40]
	0x034E8298 ADRP X8, 0xFFFFFFFFFE6D7000
	0x034E829C ADD X8, X8, 0x90
	0x034E82A0 STR X8, [X19 + 0x38]
	0x034E82A4 LDP X20, X19, [X31 + 0x10]
	0x034E82A8 LDP X30, X21, [X31], #0x20
	0x034E82AC RET
	0x034E82B0 ADRP X1, 0xFFFFFFFFFD633000
	0x034E82B4 ADD X1, X1, 0xEE3
	0x034E82B8 MOV X0, X31
	0x034E82BC BL 0x1C16F3C
	0x034E82C0 MOV X1, X31
	0x034E82C4 BL 0x1C16DEC
	0x034E82C8 LDR X8, [X0 + 0x40]
	0x034E82CC LDR X4, [X0 + 0x18]
	0x034E82D0 LDR X3, [X0 + 0x28]
	0x034E82D4 MOV X0, X8
	0x034E82D8 BR X4
	0x034E82DC SUB X31, X31, 0x60
	0x034E82E0 STP X30, X23, [X31 + 0x30]
	0x034E82E4 STP X22, X21, [X31 + 0x40]
	0x034E82E8 STP X20, X19, [X31 + 0x50]
	0x034E82EC ADRP X23, 0xEF7000
	0x034E82F0 STP X2, X1, [X31 + 0x20]
	0x034E82F4 ADRP X22, 0xC34000
	0x034E82F8 LDRB W8, [X23 + 0x99E]
	0x034E82FC LDR X22, [X22 + 0xF20]
	0x034E8300 MOV X19, X4
	0x034E8304 MOV X20, X3
	0x034E8308 MOV X21, X0
	0x034E830C TBNZ X8, 0x0, 0x34E8324
	0x034E8310 ADRP X0, 0xC34000
	0x034E8314 LDR X0, [X0 + 0xF20]
	0x034E8318 BL 0x1C16CF4
	0x034E831C MOVZ W8, 0x1
	0x034E8320 STRB W8, [X23 + 0x99E]
	0x034E8324 LDR X0, [X22]
	0x034E8328 ADD X1, X31, 0x28
	0x034E832C STP X31, X31, [X31 + 0x8]
	0x034E8330 STR X31, [X31 + 0x18]
	0x034E8334 BL 0x1C16E04
	0x034E8338 LDR X8, [X22]
	0x034E833C STR X0, [X31 + 0x8]
	0x034E8340 ADD X1, X31, 0x20
	0x034E8344 MOV X0, X8
	0x034E8348 BL 0x1C16E04
	0x034E834C STR X0, [X31 + 0x10]
	0x034E8350 ADD X1, X31, 0x8
	0x034E8354 MOV X0, X21
	0x034E8358 MOV X2, X20
	0x034E835C MOV X3, X19
	0x034E8360 BL 0x1C16CB0
	0x034E8364 LDP X20, X19, [X31 + 0x50]
	0x034E8368 LDP X22, X21, [X31 + 0x40]
	0x034E836C LDP X30, X23, [X31 + 0x30]
	0x034E8370 ADD X31, X31, 0x60
	0x034E8374 RET
	0x034E8378 MOV X0, X1
	0x034E837C MOV X1, X31
	0x034E8380 B 0x1C16CB4
	0x034E8384 STR X30, [X31 - 0x30]!
	0x034E8388 STP X22, X21, [X31 + 0x10]
	0x034E838C STP X20, X19, [X31 + 0x20]
	0x034E8390 ADRP X22, 0xEF7000
	0x034E8394 ADRP X21, 0xC4A000
	0x034E8398 LDRB W8, [X22 + 0x9A0]
	0x034E839C LDR X21, [X21 + 0x328]
	0x034E83A0 MOV X20, X1
	0x034E83A4 MOV X19, X0
	0x034E83A8 TBNZ X8, 0x0, 0x34E83C0
	0x034E83AC ADRP X0, 0xC4A000
	0x034E83B0 LDR X0, [X0 + 0x328]
	0x034E83B4 BL 0x1C16CF4
	0x034E83B8 MOVZ W8, 0x1
	0x034E83BC STRB W8, [X22 + 0x9A0]
	0x034E83C0 MOV X0, X19
	0x034E83C4 MOV X1, X31
	0x034E83C8 BL 0x33BDD8C
	0x034E83CC LDR X0, [X21]
	0x034E83D0 LDR W8, [X0 + 0xE0]
	0x034E83D4 CBNZ W8, 0x34E83DC
	0x034E83D8 BL 0x1C16DFC
	0x034E83DC MOV X0, X20
	0x034E83E0 BL 0x34BE3A4
	0x034E83E4 STR W0, [X19 + 0x10]
	0x034E83E8 MOV X0, X20
	0x034E83EC BL 0x34BE254
	0x034E83F0 STR X0, [X19 + 0x18]
	0x034E83F4 MOV X0, X20
	0x034E83F8 BL 0x34BE1D8
	0x034E83FC STR W0, [X19 + 0x20]
	0x034E8400 MOV X0, X20
	0x034E8404 BL 0x34BE328
	0x034E8408 STR X0, [X19 + 0x28]
	0x034E840C LDP X20, X19, [X31 + 0x20]
	0x034E8410 LDP X22, X21, [X31 + 0x10]
	0x034E8414 LDR X30, [X31], #0x30
	0x034E8418 RET
	0x034E841C STR X30, [X31 - 0x30]!
	0x034E8420 STP X22, X21, [X31 + 0x10]
	0x034E8424 STP X20, X19, [X31 + 0x20]
	0x034E8428 ADRP X22, 0xEF7000
	0x034E842C ADRP X21, 0xC4A000
	0x034E8430 LDRB W8, [X22 + 0x9A2]
	0x034E8434 LDR X21, [X21 + 0x328]
	0x034E8438 MOV X20, X1
	0x034E843C MOV X19, X0
	0x034E8440 TBNZ X8, 0x0, 0x34E8458
	0x034E8444 ADRP X0, 0xC4A000
	0x034E8448 LDR X0, [X0 + 0x328]
	0x034E844C BL 0x1C16CF4
	0x034E8450 MOVZ W8, 0x1
	0x034E8454 STRB W8, [X22 + 0x9A2]
	0x034E8458 MOV X0, X19
	0x034E845C MOV X1, X31
	0x034E8460 BL 0x33BDD8C
	0x034E8464 LDR X0, [X21]
	0x034E8468 LDR W8, [X0 + 0xE0]
	0x034E846C CBNZ W8, 0x34E8474
	0x034E8470 BL 0x1C16DFC
	0x034E8474 MOV X0, X20
	0x034E8478 BL 0x34BE678
	0x034E847C STR X0, [X19 + 0x10]
	0x034E8480 MOV X0, X20
	0x034E8484 BL 0x34BE74C
	0x034E8488 STR X0, [X19 + 0x18]
	0x034E848C MOV X0, X20
	0x034E8490 BL 0x34BE7C8
	0x034E8494 AND W8, W0, 0x1
	0x034E8498 MOV X0, X20
	0x034E849C STRB W8, [X19 + 0x20]
	0x034E84A0 BL 0x34BE84C
	0x034E84A4 STR X0, [X19 + 0x28]
	0x034E84A8 MOV X0, X20
	0x034E84AC BL 0x34BE920
	0x034E84B0 STR X0, [X19 + 0x30]
	0x034E84B4 LDP X20, X19, [X31 + 0x20]
	0x034E84B8 LDP X22, X21, [X31 + 0x10]
	0x034E84BC LDR X30, [X31], #0x30
	0x034E84C0 RET
	0x034E84C4 STP X30, X23, [X31 - 0x30]!
	0x034E84C8 STP X22, X21, [X31 + 0x10]
	0x034E84CC STP X20, X19, [X31 + 0x20]
	0x034E84D0 ADRP X21, 0xEF7000
	0x034E84D4 ADRP X23, 0xC4A000
	0x034E84D8 LDRB W8, [X21 + 0x9A7]
	0x034E84DC LDR X23, [X23 + 0x328]
	0x034E84E0 MOV X20, X1
	0x034E84E4 MOV X19, X0
	0x034E84E8 TBNZ X8, 0x0, 0x34E8518
	0x034E84EC ADRP X0, 0xC4A000
	0x034E84F0 LDR X0, [X0 + 0x328]
	0x034E84F4 BL 0x1C16CF4
	0x034E84F8 ADRP X0, 0xC4B000
	0x034E84FC LDR X0, [X0 + 0x3B0]
	0x034E8500 BL 0x1C16CF4
	0x034E8504 ADRP X0, 0xC4A000
	0x034E8508 LDR X0, [X0 + 0xD48]
	0x034E850C BL 0x1C16CF4
	0x034E8510 MOVZ W8, 0x1
	0x034E8514 STRB W8, [X21 + 0x9A7]
	0x034E8518 ADRP X21, 0xC4B000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEF8000
	007 Move X20, 0xC0C000
	008 Move W8, [X21+2447]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xC4B000
	016 Move X0, [X0+808]
	017 Call 0x1C17CF4
	018 Move X0, 0xC0C000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0xC11000
	022 Move X0, [X0+1600]
	023 Call 0x1C17CF4
	024 Move X0, 0xC4C000
	025 Move X0, [X0+864]
	026 Call 0x1C17CF4
	027 Move X0, 0xC4C000
	028 Move X0, [X0+872]
	029 Call 0x1C17CF4
	030 Move X0, 0xC0C000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0xC0C000
	034 Move X0, [X0+2512]
	035 Call 0x1C17CF4
	036 Move X0, 0xC0C000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0xC4C000
	040 Move X0, [X0+880]
	041 Call 0x1C17CF4
	042 Move X0, 0xC4C000
	043 Move X0, [X0+888]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2447], W8
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X9, [X8+376]
	050 Move X1, [X8+384]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X0, [X20]
	053 Move X20, [X19+40]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {76}
	066 Move X0, X19
	067 Move X1, X31
	068 Call Component.get_gameObject, X0
	069 Compare X0, 0
	070 JumpIfEqual {183}
	071 Move X8, 0xC11000
	072 Move X8, [X8+1600]
	073 Move X1, [X8]
	074 Call 0x21E61FC, X0
	075 Move [X19+40], X0
	076 Move X0, [X19+40]
	077 Compare X0, 0
	078 JumpIfEqual {183}
	079 Move X1, X31
	080 Call Component.get_gameObject, X0
	081 Compare X0, 0
	082 JumpIfEqual {183}
	083 Move X8, 0xC4C000
	084 Move X8, [X8+864]
	085 Move X1, [X8]
	086 Call 0x21E61FC, X0
	087 Move X0, [X19+40]
	088 Compare X0, 0
	089 JumpIfEqual {183}
	090 Move X1, X31
	091 Call Component.get_gameObject, X0
	092 Compare X0, 0
	093 JumpIfEqual {183}
	094 Move X8, 0xC4C000
	095 Move X8, [X8+872]
	096 Move X1, [X8]
	097 Call 0x21E62E4, X0
	098 Compare X0, 0
	099 JumpIfEqual {183}
	100 Move X20, 0xC4C000
	101 Move X21, 0xC4B000
	102 Move X20, [X20+880]
	103 Move X21, [X21+808]
	104 Move [X0+32], X19
	105 Move W8, 40
	106 Move X0, X31
	107 Move [X19+32], W8
	108 Call AudioSettings.get_outputSampleRate
	109 Move X8, [X20]
	110 Move W9, 0x5DC0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X8+184]
	113 Move [X8], W0
	114 Move W8, 0xAC44
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, 0xBB80
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W19, 3
	119 Move W19, 1
	120 Move W19, 2
	121 Move W19, W31
	122 Move X0, [X21]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move W0, W19
	128 Call CAPI.ovr_Voip_SetOutputSampleRate, X0
	129 Move X8, [X20]
	130 Move X8, [X8+184]
	131 Move W8, [X8+4]
	132 Compare W8, 0
	133 JumpIfEqual {177}
	134 Move X8, 0xC0C000
	135 Move X8, [X8+2512]
	136 Move X21, 0xC0C000
	137 Move W1, 1
	138 Move X0, [X8]
	139 Move X21, [X21+1880]
	140 Call 0x1C17D6C
	141 Move X8, [X20]
	142 Move X19, X0
	143 Move X0, [X21]
	144 Add X1, X31, 12
	145 Move X8, [X8+184]
	146 Move W8, [X8]
	147 Move [X31+12], W8
	148 Call 0x1C17E04
	149 Compare X19, 0
	150 JumpIfEqual {183}
	151 Move X20, X0
	152 Compare X0, 0
	153 JumpIfEqual {160}
	154 Move X8, [X19]
	155 Move X0, X20
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {185}
	160 Move W8, [X19+24]
	161 Compare W8, 0
	162 JumpIfEqual {184}
	163 Move X8, 0xC0C000
	164 Move X8, [X8+2600]
	165 Move [X19+32], X20
	166 Move X20, 0xC4C000
	167 Move X0, [X8]
	168 Move W8, [X0+224]
	169 Move X20, [X20+888]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, [X20]
	174 Move X1, X19
	175 Move X2, X31
	176 Call Debug.LogFormat, X0, X1
	177 Move X20, [X31+32]
	178 Move X19, [X31+40]
	179 Move X30, [X31+16]
	180 Move X21, [X31+24]
	181 Add X31, X31, 48
	182 Return 
	183 Call 0x1C17F20
	184 Call 0x1C17F28
	185 Call 0x1C17F44
	186 Move X1, X31
	187 Call 0x1C17DEC

Method: System.Void Start()

Disassembly:
	0x034E851C LDR X21, [X21 + 0x3B0]
	0x034E8520 MOV X0, X19
	0x034E8524 MOV X1, X31
	0x034E8528 BL 0x33BDD8C
	0x034E852C LDR X0, [X23]
	0x034E8530 LDR W8, [X0 + 0xE0]
	0x034E8534 CBNZ W8, 0x34E853C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call AudioSource.Stop, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void CreatePCMSource()

Disassembly:
	0x034E8538 BL 0x1C16DFC
	0x034E853C MOV X0, X20
	0x034E8540 BL 0x34BF08C
	0x034E8544 LDR X8, [X21]
	0x034E8548 MOV X21, X0
	0x034E854C MOV X0, X8
	0x034E8550 BL 0x1C16F10
	0x034E8554 MOV X1, X21
	0x034E8558 MOV X2, X31
	0x034E855C MOV X22, X0
	0x034E8560 BL 0x34E8EC0
	0x034E8564 MOV X0, X21
	0x034E8568 MOV X1, X31
	0x034E856C MOV X2, X31
	0x034E8570 STR X22, [X19 + 0x18]
	0x034E8574 BL 0x33BE5B0
	0x034E8578 MOV X8, X31
	0x034E857C TBNZ X0, 0x0, 0x34E8584
	0x034E8580 LDR X8, [X19 + 0x18]
	0x034E8584 STR X8, [X19 + 0x10]
	0x034E8588 LDR X0, [X23]
	0x034E858C ADRP X21, 0xC4A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEF8000
	006 Move X21, 0xC4C000
	007 Move W8, [X20+2448]
	008 Move X21, [X21+896]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC4C000
	015 Move X0, [X0+896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2448], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X19+56], X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 

Method: System.Int32 MSToElements(System.Int32 ms)

Disassembly:
	0x034E8598 CBNZ W8, 0x34E85A0
	0x034E859C BL 0x1C16DFC
	0x034E85A0 MOV X0, X20
	0x034E85A4 BL 0x34BF108
	0x034E85A8 STR X0, [X19 + 0x20]
	0x034E85AC MOV X0, X20
	0x034E85B0 BL 0x34BF184
	0x034E85B4 AND W8, W0, 0x1
	0x034E85B8 MOV X0, X20
	0x034E85BC STRB W8, [X19 + 0x28]
	0x034E85C0 BL 0x34BF208
	0x034E85C4 STR X0, [X19 + 0x30]
	0x034E85C8 MOV X0, X20
	0x034E85CC BL 0x34BF2DC
	0x034E85D0 STR X0, [X19 + 0x38]
	0x034E85D4 MOV X0, X20
	0x034E85D8 BL 0x34BF3B0
	0x034E85DC LDR X8, [X21]
	0x034E85E0 MOV X20, X0
	0x034E85E4 MOV X0, X8
	0x034E85E8 BL 0x1C16F10
	0x034E85EC MOV X1, X20
	0x034E85F0 MOV X2, X31
	0x034E85F4 MOV X21, X0
	0x034E85F8 BL 0x34E87AC
	0x034E85FC MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEF8000
	006 Move X21, 0xC4C000
	007 Move W8, [X20+2449]
	008 Move X21, [X21+880]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC4C000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2449], W8
	019 Move X8, [X21]
	020 Move W9, 0x4DD3
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 Move X8, [X8+184]
	023 Move W8, [X8]
	024 Multiply W8, W8, W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 NotImplemented "Instruction SMADDL not yet implemented."
	028 Move X9, X8
	029 ShiftRight X9, 63
	030 And X9, X9, 0x7FFFFFFF
	031 NotImplemented "Instruction SBFM not yet implemented."
	032 Add W0, W8, W9
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Void Update()

Disassembly:
	0x034E8600 MOV X1, X31
	0x034E8604 MOV X2, X31
	0x034E8608 STR X21, [X19 + 0x48]
	0x034E860C BL 0x33BE5B0
	0x034E8610 MOV X8, X31
	0x034E8614 TBNZ X0, 0x0, 0x34E861C
	0x034E8618 LDR X8, [X19 + 0x48]
	0x034E861C STR X8, [X19 + 0x40]
	0x034E8620 LDP X20, X19, [X31 + 0x20]
	0x034E8624 LDP X22, X21, [X31 + 0x10]
	0x034E8628 LDP X30, X23, [X31], #0x30
	0x034E862C RET
	0x034E8630 STR X30, [X31 - 0x30]!
	0x034E8634 STP X22, X21, [X31 + 0x10]
	0x034E8638 STP X20, X19, [X31 + 0x20]
	0x034E863C ADRP X22, 0xEF7000
	0x034E8640 ADRP X21, 0xC4A000
	0x034E8644 LDRB W8, [X22 + 0x9B1]
	0x034E8648 LDR X21, [X21 + 0x328]
	0x034E864C MOV X20, X1
	0x034E8650 MOV X19, X0
	0x034E8654 TBNZ X8, 0x0, 0x34E866C
	0x034E8658 ADRP X0, 0xC4A000
	0x034E865C LDR X0, [X0 + 0x328]
	0x034E8660 BL 0x1C16CF4
	0x034E8664 MOVZ W8, 0x1
	0x034E8668 STRB W8, [X22 + 0x9B1]
	0x034E866C MOV X0, X19
	0x034E8670 MOV X1, X31
	0x034E8674 BL 0x33BDD8C
	0x034E8678 LDR X0, [X21]
	0x034E867C LDR W8, [X0 + 0xE0]
	0x034E8680 CBNZ W8, 0x34E8688
	0x034E8684 BL 0x1C16DFC
	0x034E8688 MOV X0, X20
	0x034E868C BL 0x34C0A70
	0x034E8690 STR X0, [X19 + 0x10]
	0x034E8694 LDP X20, X19, [X31 + 0x20]
	0x034E8698 LDP X22, X21, [X31 + 0x10]
	0x034E869C LDR X30, [X31], #0x30
	0x034E86A0 RET
	0x034E86A4 STR X30, [X31 - 0x30]!
	0x034E86A8 STP X22, X21, [X31 + 0x10]
	0x034E86AC STP X20, X19, [X31 + 0x20]
	0x034E86B0 ADRP X21, 0xEF7000
	0x034E86B4 ADRP X22, 0xC4A000
	0x034E86B8 LDRB W8, [X21 + 0x9B6]
	0x034E86BC LDR X22, [X22 + 0x328]
	0x034E86C0 MOV X20, X1
	0x034E86C4 MOV X19, X0
	0x034E86C8 TBNZ X8, 0x0, 0x34E86EC
	0x034E86CC ADRP X0, 0xC4A000
	0x034E86D0 LDR X0, [X0 + 0x328]
	0x034E86D4 BL 0x1C16CF4
	0x034E86D8 ADRP X0, 0xC4A000
	0x034E86DC LDR X0, [X0 + 0xD48]
	0x034E86E0 BL 0x1C16CF4
	0x034E86E4 MOVZ W8, 0x1
	0x034E86E8 STRB W8, [X21 + 0x9B6]
	0x034E86EC ADRP X21, 0xC4A000
	0x034E86F0 LDR X21, [X21 + 0xD48]
	0x034E86F4 MOV X0, X19
	0x034E86F8 MOV X1, X31
	0x034E86FC BL 0x33BDD8C
	0x034E8700 LDR X0, [X22]
	0x034E8704 LDR W8, [X0 + 0xE0]
	0x034E8708 CBNZ W8, 0x34E8710
	0x034E870C BL 0x1C16DFC
	0x034E8710 MOV X0, X20
	0x034E8714 MOV X1, X31
	0x034E8718 BL 0x34C17A8
	0x034E871C STR X0, [X19 + 0x10]
	0x034E8720 MOV X0, X20
	0x034E8724 MOV X1, X31
	0x034E8728 BL 0x34C187C
	0x034E872C STR X0, [X19 + 0x18]
	0x034E8730 MOV X0, X20
	0x034E8734 MOV X1, X31
	0x034E8738 BL 0x34C1A5C
	0x034E873C STR X0, [X19 + 0x20]
	0x034E8740 MOV X0, X20
	0x034E8744 MOV X1, X31
	0x034E8748 BL 0x34C1AD8
	0x034E874C STR W0, [X19 + 0x28]
	0x034E8750 MOV X0, X20
	0x034E8754 MOV X1, X31
	0x034E8758 BL 0x34C1B54
	0x034E875C STR X0, [X19 + 0x30]
	0x034E8760 MOV X0, X20
	0x034E8764 MOV X1, X31
	0x034E8768 BL 0x34C1BD0
	0x034E876C STR X0, [X19 + 0x38]
	0x034E8770 MOV X0, X20
	0x034E8774 MOV X1, X31
	0x034E8778 BL 0x34C1CA4
	0x034E877C LDR X8, [X21]
	0x034E8780 MOV X20, X0
	0x034E8784 MOV X0, X8
	0x034E8788 BL 0x1C16F10
	0x034E878C MOV X1, X20
	0x034E8790 MOV X21, X0
	0x034E8794 BL 0x34E87AC
	0x034E8798 STR X21, [X19 + 0x40]
	0x034E879C LDP X20, X19, [X31 + 0x20]
	0x034E87A0 LDP X22, X21, [X31 + 0x10]
	0x034E87A4 LDR X30, [X31], #0x30
	0x034E87A8 RET
	0x034E87AC STR X30, [X31 - 0x30]!
	0x034E87B0 STP X22, X21, [X31 + 0x10]
	0x034E87B4 STP X20, X19, [X31 + 0x20]
	0x034E87B8 ADRP X22, 0xEF7000
	0x034E87BC ADRP X21, 0xC4A000
	0x034E87C0 LDRB W8, [X22 + 0x9F1]
	0x034E87C4 LDR X21, [X21 + 0x328]
	0x034E87C8 MOV X20, X1
	0x034E87CC MOV X19, X0
	0x034E87D0 TBNZ X8, 0x0, 0x34E87E8
	0x034E87D4 ADRP X0, 0xC4A000
	0x034E87D8 LDR X0, [X0 + 0x328]
	0x034E87DC BL 0x1C16CF4
	0x034E87E0 MOVZ W8, 0x1
	0x034E87E4 STRB W8, [X22 + 0x9F1]
	0x034E87E8 MOV X0, X19
	0x034E87EC MOV X1, X31
	0x034E87F0 BL 0x33BDD8C
	0x034E87F4 LDR X0, [X21]
	0x034E87F8 LDR W8, [X0 + 0xE0]
	0x034E87FC CBNZ W8, 0x34E8804
	0x034E8800 BL 0x1C16DFC
	0x034E8804 MOV X0, X20
	0x034E8808 MOV X1, X31
	0x034E880C BL 0x34CBE0C
	0x034E8810 STR X0, [X19 + 0x10]
	0x034E8814 MOV X0, X20
	0x034E8818 MOV X1, X31
	0x034E881C BL 0x34CBEE0
	0x034E8820 STR X0, [X19 + 0x18]
	0x034E8824 MOV X0, X20
	0x034E8828 MOV X1, X31
	0x034E882C BL 0x34CBF5C
	0x034E8830 STR X0, [X19 + 0x20]
	0x034E8834 MOV X0, X20
	0x034E8838 MOV X1, X31
	0x034E883C BL 0x34CC030
	0x034E8840 STR X0, [X19 + 0x28]
	0x034E8844 MOV X0, X20
	0x034E8848 MOV X1, X31
	0x034E884C BL 0x34CC104
	0x034E8850 STR X0, [X19 + 0x30]
	0x034E8854 MOV X0, X20
	0x034E8858 MOV X1, X31
	0x034E885C BL 0x34CC1D8
	0x034E8860 STR X0, [X19 + 0x38]
	0x034E8864 MOV X0, X20
	0x034E8868 MOV X1, X31
	0x034E886C BL 0x34CC2AC
	0x034E8870 STR X0, [X19 + 0x40]
	0x034E8874 MOV X0, X20
	0x034E8878 MOV X1, X31
	0x034E887C BL 0x34CC380
	0x034E8880 STR X0, [X19 + 0x48]
	0x034E8884 MOV X0, X20
	0x034E8888 MOV X1, X31
	0x034E888C BL 0x34CC454
	0x034E8890 STR X0, [X19 + 0x50]
	0x034E8894 MOV X0, X20
	0x034E8898 MOV X1, X31
	0x034E889C BL 0x34CC528
	0x034E88A0 STR W0, [X19 + 0x58]
	0x034E88A4 MOV X0, X20
	0x034E88A8 MOV X1, X31
	0x034E88AC BL 0x34CC5A4
	0x034E88B0 STR X0, [X19 + 0x60]
	0x034E88B4 LDP X20, X19, [X31 + 0x20]
	0x034E88B8 LDP X22, X21, [X31 + 0x10]
	0x034E88BC LDR X30, [X31], #0x30
	0x034E88C0 RET
	0x034E88C4 STR X30, [X31 - 0x60]!
	0x034E88C8 STP X28, X27, [X31 + 0x10]
	0x034E88CC STP X26, X25, [X31 + 0x20]
	0x034E88D0 STP X24, X23, [X31 + 0x30]
	0x034E88D4 STP X22, X21, [X31 + 0x40]
	0x034E88D8 STP X20, X19, [X31 + 0x50]
	0x034E88DC ADRP X22, 0xEF7000
	0x034E88E0 ADRP X21, 0xC4B000
	0x034E88E4 ADRP X25, 0xC4A000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xEF8000
	009 Move W8, [X20+2450]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xC0C000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0xC4C000
	019 Move X0, [X0+856]
	020 Call 0x1C17CF4
	021 Move X0, 0xC0C000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xC0C000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xC4C000
	028 Move X0, [X0+880]
	029 Call 0x1C17CF4
	030 Move X0, 0xC4C000
	031 Move X0, [X0+904]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2450], W8
	035 Move X20, [X19+56]
	036 Compare X20, 0
	037 JumpIfEqual {206}
	038 Move X22, 0xC4C000
	039 Move X8, [X20]
	040 Move X22, [X22+856]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X22]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 2
	052 Move X0, X20
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 2
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X0, X20
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X0, [X19+40]
	063 Compare X0, 0
	064 JumpIfEqual {206}
	065 Move X1, X31
	066 Call AudioSource.get_isPlaying, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {198}
	071 Move X20, [X19+56]
	072 Compare X20, 0
	073 JumpIfEqual {206}
	074 Move X8, [X20]
	075 Move X1, [X22]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 3
	086 Move X0, X20
	087 Call 0x1C5D788
	088 Move W9, [X10]
	089 Add W9, W9, 3
	090 Add X8, X8, W9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X23, 0xEF8000
	097 Move W8, [X23+2449]
	098 Move W21, [X19+32]
	099 Move W20, W0
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {109}
	104 Move X0, 0xC4C000
	105 Move X0, [X0+880]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X23+2449], W8
	109 Move X8, 0xC4C000
	110 Move X8, [X8+880]
	111 Move W10, 0x4DD3
	112 NotImplemented "Instruction MOVK not yet implemented."
	113 Move X8, [X8]
	114 Move X8, [X8+184]
	115 Move W9, [X8]
	116 Multiply W9, W9, W21
	117 NotImplemented "Instruction SMADDL not yet implemented."
	118 Move X10, X9
	119 ShiftRight X10, 63
	120 And X10, X10, 0x7FFFFFFF
	121 NotImplemented "Instruction SBFM not yet implemented."
	122 Add W9, W9, W10
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W8, [X8+4]
	125 Compare W8, 0
	126 JumpIfEqual {193}
	127 Move X8, 0xC0C000
	128 Move X8, [X8+2512]
	129 Move W1, 1
	130 Move X0, [X8]
	131 Call 0x1C17D6C
	132 Move X21, [X19+56]
	133 Compare X21, 0
	134 JumpIfEqual {206}
	135 Move X8, [X21]
	136 Move X1, [X22]
	137 Move X20, X0
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 3
	148 Move X0, X21
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 3
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X8, 0xC0C000
	159 Move X8, [X8+1880]
	160 Move [X31+12], W0
	161 Add X1, X31, 12
	162 Move X8, [X8]
	163 Move X0, X8
	164 Call 0x1C17E04
	165 Compare X20, 0
	166 JumpIfEqual {206}
	167 Move X21, X0
	168 Compare X0, 0
	169 JumpIfEqual {176}
	170 Move X8, [X20]
	171 Move X0, X21
	172 Move X1, [X8+64]
	173 Call 0x1C17E00
	174 Compare X0, 0
	175 JumpIfEqual {208}
	176 Move W8, [X20+24]
	177 Compare W8, 0
	178 JumpIfEqual {207}
	179 Move [X20+32], X21
	180 Move X8, 0xC0C000
	181 Move X8, [X8+2600]
	182 Move X0, [X8]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X8, 0xC4C000
	188 Move X8, [X8+904]
	189 Move X1, X20
	190 Move X2, X31
	191 Move X0, [X8]
	192 Call Debug.LogFormat, X0, X1
	193 Move X0, [X19+40]
	194 Compare X0, 0
	195 JumpIfEqual {206}
	196 Move X1, X31
	197 Call AudioSource.Play, X0
	198 Move X20, [X31+48]
	199 Move X19, [X31+56]
	200 Move X22, [X31+32]
	201 Move X21, [X31+40]
	202 Move X30, [X31+16]
	203 Move X23, [X31+24]
	204 Add X31, X31, 64
	205 Return 
	206 Call 0x1C17F20
	207 Call 0x1C17F28
	208 Call 0x1C17F44
	209 Move X1, X31
	210 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x034E88E8 LDRB W8, [X22 + 0x9B7]
	0x034E88EC LDR X21, [X21 + 0x3B8]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

