Type: Oculus.Platform.AbuseReportOptions

Method: System.Void .ctor()

Disassembly:
	0x034B1A44 LDP X20, X19, [X31 + 0x10]
	0x034B1A48 LDP X30, X21, [X31], #0x20
	0x034B1A4C RET
	0x034B1A50 SUB X31, X31, 0x40
	0x034B1A54 STP X30, X19, [X31 + 0x30]
	0x034B1A58 ADRP X19, 0xF2E000
	0x034B1A5C LDR X8, [X19 + 0x568]
	0x034B1A60 CBNZ X8, 0x34B1AA8
	0x034B1A64 ADRP X12, 0xFFFFFFFFFD63C000
	0x034B1A68 LDR V0, [X12 + 0x5B8]
	0x034B1A6C ADRP X8, 0xFFFFFFFFFD662000
	0x034B1A70 ADRP X10, 0xFFFFFFFFFD664000
	0x034B1A74 ADD X8, X8, 0xDD2
	0x034B1A78 MOVZ W9, 0x11
	0x034B1A7C ADD X10, X10, 0xE42
	0x034B1A80 MOVZ W11, 0x1D
	0x034B1A84 ADD X0, X31, 0x0
	0x034B1A88 STR W31, [X31 + 0x28]
	0x034B1A8C STP X8, X9, [X31]
	0x034B1A90 STP X10, X11, [X31 + 0x10]
	0x034B1A94 STR D0, [X31 + 0x20]
	0x034B1A98 STRB W31, [X31 + 0x2C]
	0x034B1A9C BL 0x1C1729C
	0x034B1AA0 MOV X8, X0
	0x034B1AA4 STR X0, [X19 + 0x568]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2D000
	006 Move X20, 0xC82000
	007 Move W8, [X21+2876]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC82000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2876], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call CAPI.ovr_AbuseReportOptions_Create
	028 Move [X19+16], X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Void SetPreventPeopleChooser(System.Boolean value)

Disassembly:
	0x034B1B10 LDP X20, X19, [X31 + 0x20]
	0x034B1B14 LDP X22, X21, [X31 + 0x10]
	0x034B1B18 LDR X30, [X31], #0x30
	0x034B1B1C B 0x34B1B20
	0x034B1B20 STR X30, [X31 - 0x30]!
	0x034B1B24 STP X22, X21, [X31 + 0x10]
	0x034B1B28 STP X20, X19, [X31 + 0x20]
	0x034B1B2C ADRP X22, 0xF2E000
	0x034B1B30 ADRP X21, 0xC81000
	0x034B1B34 LDRB W8, [X22 + 0x578]
	0x034B1B38 LDR X21, [X21 + 0x328]
	0x034B1B3C MOV X20, X1
	0x034B1B40 MOV X19, X0
	0x034B1B44 TBNZ X8, 0x0, 0x34B1B68
	0x034B1B48 ADRP X0, 0xC81000
	0x034B1B4C LDR X0, [X0 + 0x328]
	0x034B1B50 BL 0x1C16CF4
	0x034B1B54 ADRP X0, 0xC6A000
	0x034B1B58 LDR X0, [X0 + 0x850]
	0x034B1B5C BL 0x1C16CF4
	0x034B1B60 MOVZ W8, 0x1
	0x034B1B64 STRB W8, [X22 + 0x578]
	0x034B1B68 LDR X0, [X21]
	0x034B1B6C ADRP X21, 0xC6A000
	0x034B1B70 LDR W8, [X0 + 0xE0]
	0x034B1B74 LDR X21, [X21 + 0x850]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2D000
	007 Move X21, 0xC82000
	008 Move W8, [X22+2877]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC82000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2877], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 And W1, W19, 1
	028 Move X0, X20
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.Void SetReportType(Oculus.Platform.AbuseReportType value)

Disassembly:
	0x034B1BFC LDR X0, [X21]
	0x034B1C00 LDR X20, [X20 + 0x10]
	0x034B1C04 LDR W8, [X0 + 0xE0]
	0x034B1C08 CBNZ W8, 0x34B1C10
	0x034B1C0C BL 0x1C16DFC
	0x034B1C10 MOV X0, X20
	0x034B1C14 MOV X1, X19
	0x034B1C18 LDP X20, X19, [X31 + 0x20]
	0x034B1C1C LDP X22, X21, [X31 + 0x10]
	0x034B1C20 LDR X30, [X31], #0x30
	0x034B1C24 B 0x34B1C28
	0x034B1C28 STR X30, [X31 - 0x30]!
	0x034B1C2C STP X22, X21, [X31 + 0x10]
	0x034B1C30 STP X20, X19, [X31 + 0x20]
	0x034B1C34 ADRP X22, 0xF2E000
	0x034B1C38 ADRP X21, 0xC81000
	0x034B1C3C LDRB W8, [X22 + 0x588]
	0x034B1C40 LDR X21, [X21 + 0x328]
	0x034B1C44 MOV X20, X1
	0x034B1C48 MOV X19, X0
	0x034B1C4C TBNZ X8, 0x0, 0x34B1C70
	0x034B1C50 ADRP X0, 0xC81000
	0x034B1C54 LDR X0, [X0 + 0x328]
	0x034B1C58 BL 0x1C16CF4
	0x034B1C5C ADRP X0, 0xC6A000
	0x034B1C60 LDR X0, [X0 + 0x850]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2D000
	007 Move X21, 0xC82000
	008 Move W8, [X22+2878]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC82000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2878], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move W1, W19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.IntPtr op_Explicit(Oculus.Platform.AbuseReportOptions options)

Disassembly:
	0x034B1CE8 MOV X20, X0
	0x034B1CEC TBNZ X8, 0x0, 0x34B1D04
	0x034B1CF0 ADRP X0, 0xC81000

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Move X0, [X0+16]
	004 Return X0

Method: System.Void Finalize()

Disassembly:
	0x034B1CF4 LDR X0, [X0 + 0x328]
	0x034B1CF8 BL 0x1C16CF4
	0x034B1CFC MOVZ W8, 0x1
	0x034B1D00 STRB W8, [X22 + 0xB4E]
	0x034B1D04 LDR X0, [X21]
	0x034B1D08 LDR X20, [X20 + 0x10]
	0x034B1D0C LDR W8, [X0 + 0xE0]
	0x034B1D10 CBNZ W8, 0x34B1D18
	0x034B1D14 BL 0x1C16DFC
	0x034B1D18 MOV X0, X20
	0x034B1D1C MOV X1, X19
	0x034B1D20 LDP X20, X19, [X31 + 0x20]
	0x034B1D24 LDP X22, X21, [X31 + 0x10]
	0x034B1D28 LDR X30, [X31], #0x30
	0x034B1D2C B 0x34B1D30
	0x034B1D30 STR X30, [X31 - 0x30]!
	0x034B1D34 STP X22, X21, [X31 + 0x10]
	0x034B1D38 STP X20, X19, [X31 + 0x20]
	0x034B1D3C ADRP X22, 0xF2E000
	0x034B1D40 ADRP X21, 0xC81000
	0x034B1D44 LDRB W8, [X22 + 0x598]
	0x034B1D48 LDR X21, [X21 + 0x328]
	0x034B1D4C MOV X20, X1
	0x034B1D50 MOV X19, X0
	0x034B1D54 TBNZ X8, 0x0, 0x34B1D78
	0x034B1D58 ADRP X0, 0xC81000
	0x034B1D5C LDR X0, [X0 + 0x328]
	0x034B1D60 BL 0x1C16CF4
	0x034B1D64 ADRP X0, 0xC6A000
	0x034B1D68 LDR X0, [X0 + 0x850]
	0x034B1D6C BL 0x1C16CF4
	0x034B1D70 MOVZ W8, 0x1
	0x034B1D74 STRB W8, [X22 + 0x598]
	0x034B1D78 LDR X0, [X21]
	0x034B1D7C ADRP X21, 0xC6A000
	0x034B1D80 LDR W8, [X0 + 0xE0]
	0x034B1D84 LDR X21, [X21 + 0x850]
	0x034B1D88 CBNZ W8, 0x34B1D90
	0x034B1D8C BL 0x1C16DFC
	0x034B1D90 MOV X0, X20
	0x034B1D94 BL 0x34B404C
	0x034B1D98 MOV X20, X0
	0x034B1D9C MOV X0, X19
	0x034B1DA0 MOV X1, X20
	0x034B1DA4 BL 0x34CD608
	0x034B1DA8 LDR X0, [X21]
	0x034B1DAC LDR W8, [X0 + 0xE0]
	0x034B1DB0 CBNZ W8, 0x34B1DB8
	0x034B1DB4 BL 0x1C16DFC
	0x034B1DB8 MOV X0, X20
	0x034B1DBC LDP X20, X19, [X31 + 0x20]
	0x034B1DC0 LDP X22, X21, [X31 + 0x10]
	0x034B1DC4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2D000
	006 Move X20, 0xC82000
	007 Move W8, [X21+2879]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC82000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2879], W8
	019 Move X0, [X20]
	020 Move X20, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Call CAPI.ovr_AbuseReportOptions_Destroy, X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Object.Finalize, X0
	034 Return 
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X21, X0
	037 Move X0, X21
	038 Call 0x3EB2AD0
	039 Move X20, [X0]
	040 Call 0x3EB2AE0
	041 Move X0, X19
	042 Move X1, X31
	043 Call Object.Finalize, X0
	044 Compare X20, 0
	045 JumpIfNotEqual {52}
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Move X20, X31
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Move X21, X0
	055 Move X0, X19
	056 Move X1, X31
	057 Call Object.Finalize, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X21
	061 Call 0x1D2D690
	062 Move X0, X20
	063 Call 0x1C17F18
	064 Call 0x1991590

