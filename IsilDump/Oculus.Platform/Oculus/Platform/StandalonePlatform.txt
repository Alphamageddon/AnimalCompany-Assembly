Type: Oculus.Platform.StandalonePlatform

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.PlatformInitialize> InitializeInEditor()

Disassembly:
	0x034DAEB4 LDR W9, [X0 + 0xE0]
	0x034DAEB8 CBNZ W9, 0x34DAEC0
	0x034DAEBC BL 0x1C16DFC
	0x034DAEC0 MOV X0, X19
	0x034DAEC4 MOV X1, X31
	0x034DAEC8 BL 0x3C0649C
	0x034DAECC MOV X19, X31
	0x034DAED0 MOV X0, X19
	0x034DAED4 LDP X20, X19, [X31 + 0x10]
	0x034DAED8 LDP X30, X21, [X31], #0x20
	0x034DAEDC RET
	0x034DAEE0 BL 0x1C16F20
	0x034DAEE4 STP X30, X21, [X31 - 0x20]!
	0x034DAEE8 STP X20, X19, [X31 + 0x10]
	0x034DAEEC ADRP X21, 0xF05000
	0x034DAEF0 ADRP X20, 0xC19000
	0x034DAEF4 LDRB W8, [X21 + 0x8DF]
	0x034DAEF8 LDR X20, [X20 + 0xC50]
	0x034DAEFC MOV X19, X0
	0x034DAF00 TBNZ X8, 0x0, 0x34DAF48
	0x034DAF04 ADRP X0, 0xC58000
	0x034DAF08 LDR X0, [X0 + 0x328]
	0x034DAF0C BL 0x1C16CF4
	0x034DAF10 ADRP X0, 0xC19000
	0x034DAF14 LDR X0, [X0 + 0xC50]
	0x034DAF18 BL 0x1C16CF4
	0x034DAF1C ADRP X0, 0xC19000
	0x034DAF20 LDR X0, [X0 + 0xA28]
	0x034DAF24 BL 0x1C16CF4
	0x034DAF28 ADRP X0, 0xC58000
	0x034DAF2C LDR X0, [X0 + 0xEC0]
	0x034DAF30 BL 0x1C16CF4
	0x034DAF34 ADRP X0, 0xC58000
	0x034DAF38 LDR X0, [X0 + 0xEC8]
	0x034DAF3C BL 0x1C16CF4
	0x034DAF40 MOVZ W8, 0x1
	0x034DAF44 STRB W8, [X21 + 0x8DF]
	0x034DAF48 LDR X0, [X20]
	0x034DAF4C LDR W8, [X0 + 0xE0]
	0x034DAF50 CBNZ W8, 0x34DAF58
	0x034DAF54 BL 0x1C16DFC
	0x034DAF58 ADRP X21, 0xEFE000
	0x034DAF5C LDRB W8, [X21 + 0x78D]
	0x034DAF60 CBNZ W8, 0x34DAF78
	0x034DAF64 ADRP X0, 0xC19000
	0x034DAF68 LDR X0, [X0 + 0xC50]
	0x034DAF6C BL 0x1C16CF4
	0x034DAF70 MOVZ W8, 0x1
	0x034DAF74 STRB W8, [X21 + 0x78D]
	0x034DAF78 LDR X0, [X20]
	0x034DAF7C LDR W8, [X0 + 0xE0]
	0x034DAF80 CBNZ W8, 0x34DAF8C
	0x034DAF84 BL 0x1C16DFC
	0x034DAF88 LDR X0, [X20]
	0x034DAF8C LDR X8, [X0 + 0xB8]
	0x034DAF90 LDRB W9, [X8]
	0x034DAF94 CBZ W9, 0x34DAFEC
	0x034DAF98 ADRP X8, 0xC58000
	0x034DAF9C LDR X8, [X8 + 0x328]
	0x034DAFA0 ADRP X20, 0xC58000
	0x034DAFA4 ADRP X21, 0xC58000
	0x034DAFA8 LDR X0, [X8]
	0x034DAFAC LDR W8, [X0 + 0xE0]
	0x034DAFB0 LDR X20, [X20 + 0xEC8]
	0x034DAFB4 LDR X21, [X21 + 0xEC0]
	0x034DAFB8 CBNZ W8, 0x34DAFC0
	0x034DAFBC BL 0x1C16DFC
	0x034DAFC0 MOV X0, X19
	0x034DAFC4 BL 0x34BAEB0
	0x034DAFC8 LDR X8, [X20]
	0x034DAFCC MOV X20, X0
	0x034DAFD0 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Call PlatformSettings.get_Instance
	006 Compare X0, 0
	007 JumpIfEqual {61}
	008 Move X0, [X0+32]
	009 Move X1, X31
	010 Call String.IsNullOrEmpty, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {62}
	015 Call PlatformSettings.get_Instance
	016 Compare X0, 0
	017 JumpIfEqual {61}
	018 Move X20, 0xF06000
	019 Move W8, [X20+2485]
	020 Move X19, [X0+32]
	021 Compare W8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, 0xC1C000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2485], W8
	028 Move X21, 0xC1C000
	029 Move X21, [X21+632]
	030 Move X1, X31
	031 Move X8, [X21]
	032 Move X8, [X8+184]
	033 Move X0, [X8]
	034 Call String.IsNullOrEmpty, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {69}
	039 Move W8, [X20+2485]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0xC1C000
	043 Move X0, [X0+632]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2485], W8
	047 Move X8, [X21]
	048 Move X0, X19
	049 Move X1, X31
	050 Move X8, [X8+184]
	051 Move X20, [X8]
	052 Call UInt64.Parse, X0
	053 Move X2, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X1, X0
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call StandalonePlatform.AsyncInitialize, X0, X1, X2
	060 Return X0
	061 Call 0x1C17F20
	062 Move X0, 0xC43000
	063 Move X0, [X0+464]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X19, X0
	067 Move X0, 0xC59000
	068 Move X0, [X0+3632]
	069 Move X0, 0xC43000
	070 Move X0, [X0+464]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0xC59000
	075 Move X0, [X0+3640]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call UnityException..ctor, X0, X1
	081 Move X0, 0xC59000
	082 Move X0, [X0+3648]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.PlatformInitialize> AsyncInitialize(System.UInt64 appID, System.String accessToken)

Disassembly:
	0x034E7370 BL 0x21E51FC
	0x034E7374 STR X0, [X19 + 0x28]
	0x034E7378 B 0x34E7380
	0x034E737C LDR X0, [X19 + 0x28]
	0x034E7380 CBZ X0, 0x34E7508
	0x034E7384 MOV X1, X31
	0x034E7388 BL 0x3C32ECC
	0x034E738C CBZ X0, 0x34E7508
	0x034E7390 ADRP X8, 0xC4C000
	0x034E7394 LDR X8, [X8 + 0x360]
	0x034E7398 LDR X1, [X8]
	0x034E739C BL 0x21E51FC
	0x034E73A0 LDR X0, [X19 + 0x28]
	0x034E73A4 CBZ X0, 0x34E7508
	0x034E73A8 MOV X1, X31
	0x034E73AC BL 0x3C32ECC
	0x034E73B0 CBZ X0, 0x34E7508
	0x034E73B4 ADRP X8, 0xC4C000
	0x034E73B8 LDR X8, [X8 + 0x368]
	0x034E73BC LDR X1, [X8]
	0x034E73C0 BL 0x21E52E4
	0x034E73C4 CBZ X0, 0x34E7508
	0x034E73C8 ADRP X20, 0xC4C000
	0x034E73CC ADRP X21, 0xC4B000
	0x034E73D0 LDR X20, [X20 + 0x370]
	0x034E73D4 LDR X21, [X21 + 0x328]
	0x034E73D8 STR X19, [X0 + 0x20]
	0x034E73DC MOVZ W8, 0x28
	0x034E73E0 MOV X0, X31
	0x034E73E4 STR W8, [X19 + 0x20]
	0x034E73E8 BL 0x3BFB488
	0x034E73EC LDR X8, [X20]
	0x034E73F0 MOVZ W9, 0x5DC0
	0x034E73F4 CMP W0, W9
	0x034E73F8 LDR X8, [X8 + 0xB8]
	0x034E73FC STR W0, [X8]
	0x034E7400 B.EQ 0x34E7424
	0x034E7404 MOVZ W8, 0xAC44
	0x034E7408 CMP W0, W8
	0x034E740C B.EQ 0x34E742C
	0x034E7410 MOVZ W8, 0xBB80
	0x034E7414 CMP W0, W8
	0x034E7418 B.NE 0x34E7434
	0x034E741C MOVZ W19, 0x3
	0x034E7420 B 0x34E7438
	0x034E7424 MOVZ W19, 0x1
	0x034E7428 B 0x34E7438
	0x034E742C MOVZ W19, 0x2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEF9000
	007 Move X21, 0xC4C000
	008 Move W8, [X22+2434]
	009 Move X21, [X21+808]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xC4C000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC4C000
	020 Move X0, [X0+832]
	021 Call 0x1C17CF4
	022 Move X0, 0xC4C000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2434], W8
	027 Move X0, [X21]
	028 Move X22, 0xC4C000
	029 Move X21, 0xC4C000
	030 Move W8, [X0+224]
	031 Move X22, [X22+840]
	032 Move X21, [X21+832]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Call CAPI.ovr_UnityResetTestPlatform
	037 Move X0, X31
	038 Call CAPI.ovr_UnityInitGlobals, X0
	039 Move X0, X20
	040 Move X1, X19
	041 Call CAPI.ovr_PlatformInitializeWithAccessToken, X0, X1
	042 Move X8, [X22]
	043 Move X19, X0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X2, [X21]
	047 Move X1, X19
	048 Move X20, X0
	049 Call Request`1<Object>..ctor, X0, X1
	050 Move X0, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.PlatformInitialize> AsyncInitializeWithAccessTokenAndOptions(System.String appId, System.String accessToken, System.Collections.Generic.Dictionary`2<Oculus.Platform.InitConfigOptions, System.Boolean> initConfigOptions)

Disassembly:
	0x034DB410 BL 0x1C16DFC
	0x034DB414 LDR X8, [X23]
	0x034DB418 LDR X8, [X8 + 0xB8]
	0x034DB41C ADRP X9, 0xC18000
	0x034DB420 LDR X9, [X9 + 0xA28]
	0x034DB424 LDR X19, [X8 + 0x8]
	0x034DB428 LDR X0, [X9]
	0x034DB42C LDR W9, [X0 + 0xE0]
	0x034DB430 CBNZ W9, 0x34DB438
	0x034DB434 BL 0x1C16DFC
	0x034DB438 MOV X0, X19
	0x034DB43C MOV X1, X31
	0x034DB440 BL 0x3C0649C
	0x034DB444 MOV X19, X31
	0x034DB448 B 0x34DB4A8
	0x034DB44C MOV W23, W31
	0x034DB450 LDR X0, [X8]
	0x034DB454 ADRP X25, 0xC57000
	0x034DB458 ADRP X24, 0xC57000
	0x034DB45C LDR W8, [X0 + 0xE0]
	0x034DB460 LDR X25, [X25 + 0xEB0]
	0x034DB464 LDR X24, [X24 + 0xEA8]
	0x034DB468 CBNZ W8, 0x34DB470
	0x034DB46C BL 0x1C16DFC
	0x034DB470 MOV X0, X22
	0x034DB474 MOV W1, W21
	0x034DB478 MOV W2, W20
	0x034DB47C MOV X3, X19
	0x034DB480 MOV W4, W23
	0x034DB484 BL 0x34BB270
	0x034DB488 LDR X8, [X25]
	0x034DB48C MOV X20, X0
	0x034DB490 MOV X0, X8
	0x034DB494 BL 0x1C16F10
	0x034DB498 LDR X2, [X24]
	0x034DB49C MOV X1, X20
	0x034DB4A0 MOV X19, X0
	0x034DB4A4 BL 0x25C95C8
	0x034DB4A8 MOV X0, X19
	0x034DB4AC LDP X20, X19, [X31 + 0x30]
	0x034DB4B0 LDP X22, X21, [X31 + 0x20]
	0x034DB4B4 LDP X24, X23, [X31 + 0x10]
	0x034DB4B8 LDP X30, X25, [X31], #0x40
	0x034DB4BC RET
	0x034DB4C0 STP X30, X25, [X31 - 0x40]!
	0x034DB4C4 STP X24, X23, [X31 + 0x10]
	0x034DB4C8 STP X22, X21, [X31 + 0x20]
	0x034DB4CC STP X20, X19, [X31 + 0x30]
	0x034DB4D0 ADRP X24, 0xF04000
	0x034DB4D4 ADRP X23, 0xC18000
	0x034DB4D8 LDRB W8, [X24 + 0x8E3]
	0x034DB4DC LDR X23, [X23 + 0xC50]
	0x034DB4E0 MOV W21, W3
	0x034DB4E4 MOV X19, X2
	0x034DB4E8 MOV X20, X1
	0x034DB4EC MOV X22, X0
	0x034DB4F0 TBNZ X8, 0x0, 0x34DB538
	0x034DB4F4 ADRP X0, 0xC57000
	0x034DB4F8 LDR X0, [X0 + 0x328]
	0x034DB4FC BL 0x1C16CF4
	0x034DB500 ADRP X0, 0xC18000
	0x034DB504 LDR X0, [X0 + 0xC50]
	0x034DB508 BL 0x1C16CF4
	0x034DB50C ADRP X0, 0xC18000
	0x034DB510 LDR X0, [X0 + 0xA28]
	0x034DB514 BL 0x1C16CF4
	0x034DB518 ADRP X0, 0xC57000
	0x034DB51C LDR X0, [X0 + 0xED0]
	0x034DB520 BL 0x1C16CF4
	0x034DB524 ADRP X0, 0xC57000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF05000
	009 Move W8, [X22+2435]
	010 Move X21, X3
	011 Move X19, X2
	012 Move X20, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xC58000
	018 Move X0, [X0+808]
	019 Call 0x1C17CF4
	020 Move X0, 0xC58000
	021 Move X0, [X0+984]
	022 Call 0x1C17CF4
	023 Move X0, 0xC58000
	024 Move X0, [X0+832]
	025 Call 0x1C17CF4
	026 Move X0, 0xC58000
	027 Move X0, [X0+840]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2435], W8
	031 Compare X21, 0
	032 JumpIfEqual {81}
	033 Move X8, 0xC58000
	034 Move X8, [X8+984]
	035 Move X22, 0xC58000
	036 Move X24, 0xC58000
	037 Move X23, 0xC58000
	038 Move X1, [X8]
	039 Move X22, [X22+808]
	040 Move X24, [X24+840]
	041 Move X23, [X23+832]
	042 Move X0, X21
	043 Call Dictionary`2<UInt32Enum, Boolean>.get_Count, X0
	044 Move X1, X31
	045 Move X0, W0
	046 Call UIntPtr.op_Explicit, X0
	047 Move X8, [X22]
	048 Move X22, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Call CAPI.DictionaryToOVRKeyValuePairs, X0
	056 Move X21, X0
	057 Move X0, X20
	058 Move X1, X31
	059 Call UInt64.Parse, X0
	060 Move X1, X19
	061 Move X2, X21
	062 Move X3, X22
	063 Call CAPI.ovr_PlatformInitializeWithAccessTokenAndOptions, X0, X1, X2, X3
	064 Move X8, [X24]
	065 Move X19, X0
	066 Move X0, X8
	067 Call 0x1C17F10
	068 Move X2, [X23]
	069 Move X1, X19
	070 Move X20, X0
	071 Call Request`1<Object>..ctor, X0, X1
	072 Move X0, X20
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return X0
	081 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034DAEAC LDR X19, [X8 + 0x8]
	0x034DAEB0 LDR X0, [X9]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

