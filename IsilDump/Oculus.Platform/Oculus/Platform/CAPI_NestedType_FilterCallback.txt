Type: Oculus.Platform.CAPI/FilterCallback

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x034D0834 MOV X0, X31
	0x034D0838 RET
	0x034D083C MOV X0, X31
	0x034D0840 RET
	0x034D0844 MOV X0, X31
	0x034D0848 RET
	0x034D084C MOV X0, X31
	0x034D0850 RET
	0x034D0854 MOV X0, X31
	0x034D0858 RET
	0x034D085C MOV W0, W31
	0x034D0860 RET
	0x034D0864 MOV X0, X31
	0x034D0868 RET
	0x034D086C MOV X0, X31
	0x034D0870 RET
	0x034D0874 MOV X0, X31
	0x034D0878 RET
	0x034D087C MOV X0, X31
	0x034D0880 RET
	0x034D0884 MOV X0, X31
	0x034D0888 RET
	0x034D088C MOV X0, X31
	0x034D0890 RET
	0x034D0894 MOV X0, X31
	0x034D0898 RET
	0x034D089C MOV X0, X31
	0x034D08A0 RET
	0x034D08A4 MOV X0, X31
	0x034D08A8 RET
	0x034D08AC MOV X0, X31
	0x034D08B0 RET
	0x034D08B4 MOV X0, X31
	0x034D08B8 RET
	0x034D08BC MOV X0, X31
	0x034D08C0 RET
	0x034D08C4 MOV X0, X31
	0x034D08C8 RET
	0x034D08CC MOV X0, X31
	0x034D08D0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -26284032
	021 Add X8, X8, 3444
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -26284032
	024 Add X8, X8, 3400
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -26284032
	033 Add X8, X8, 3288
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -43728896
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(out System.Int16[] pcmData, System.UIntPtr pcmDataLength, System.Int32 frequency, System.Int32 numChannels)

Disassembly:
	0x034D08D4 MOV X0, X31
	0x034D08D8 RET
	0x034D08DC MOV X0, X31
	0x034D08E0 RET
	0x034D08E4 MOV X0, X31

ISIL:
	001 Move X8, [X0+64]
	002 Move X6, [X0+24]
	003 Move X5, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X6

Method: System.IAsyncResult BeginInvoke(out System.Int16[] pcmData, System.UIntPtr pcmDataLength, System.Int32 frequency, System.Int32 numChannels, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x034D08E8 RET
	0x034D08EC MOV X0, X31
	0x034D08F0 RET
	0x034D08F4 MOV X0, X31
	0x034D08F8 RET
	0x034D08FC MOV X0, X31
	0x034D0900 RET
	0x034D0904 MOV X0, X31
	0x034D0908 RET
	0x034D090C MOV X0, X31
	0x034D0910 RET
	0x034D0914 MOV X0, X31
	0x034D0918 RET
	0x034D091C MOV X0, X31
	0x034D0920 RET
	0x034D0924 MOV X0, X31
	0x034D0928 RET
	0x034D092C MOV X0, X31
	0x034D0930 RET
	0x034D0934 MOV X0, X31
	0x034D0938 RET
	0x034D093C MOV X0, X31
	0x034D0940 RET
	0x034D0944 MOV X0, X31
	0x034D0948 RET
	0x034D094C MOV X0, X31
	0x034D0950 RET
	0x034D0954 MOV X0, X31
	0x034D0958 RET
	0x034D095C MOV X0, X31
	0x034D0960 RET
	0x034D0964 MOV X0, X31
	0x034D0968 RET
	0x034D096C SUB X31, X31, 0x30
	0x034D0970 STP X30, X0, [X31 + 0x10]
	0x034D0974 STP X20, X19, [X31 + 0x20]
	0x034D0978 ADRP X19, 0xF0F000
	0x034D097C LDRB W8, [X19 + 0x7F2]
	0x034D0980 TBNZ X8, 0x0, 0x34D0C68
	0x034D0984 ADRP X0, 0xC62000
	0x034D0988 LDR X0, [X0 + 0x328]
	0x034D098C BL 0x1C16CF4
	0x034D0990 ADRP X0, 0xC23000
	0x034D0994 LDR X0, [X0 + 0xA28]
	0x034D0998 BL 0x1C16CF4
	0x034D099C ADRP X0, 0xC24000
	0x034D09A0 LDR X0, [X0 + 0x468]
	0x034D09A4 BL 0x1C16CF4
	0x034D09A8 ADRP X0, 0xC62000
	0x034D09AC LDR X0, [X0 + 0x460]
	0x034D09B0 BL 0x1C16CF4
	0x034D09B4 ADRP X0, 0xC62000
	0x034D09B8 LDR X0, [X0 + 0x468]
	0x034D09BC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move [X31+56], X2
	011 Move X25, 0xF10000
	012 Move [X31+48], W4
	013 Move [X31+52], W3
	014 Move X24, 0xC4D000
	015 Move X23, 0xC24000
	016 Move W8, [X25+2009]
	017 Move X24, [X24+3888]
	018 Move X23, [X23+1880]
	019 Move X19, X6
	020 Move X20, X5
	021 Move X22, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xC24000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0xC4D000
	031 Move X0, [X0+3888]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+2009], W8
	035 Move X0, [X24]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Add X1, X31, 56
	038 Move [X31+16], V0
	039 Move [X31+24], V0
	040 Move [X31+8], X22
	041 Call 0x1C17E04
	042 Move X8, [X23]
	043 Move [X31+16], X0
	044 Add X1, X31, 52
	045 Move X0, X8
	046 Call 0x1C17E04
	047 Move X8, [X23]
	048 Move [X31+24], X0
	049 Add X1, X31, 48
	050 Move X0, X8
	051 Call 0x1C17E04
	052 Move [X31+32], X0
	053 Add X1, X31, 8
	054 Move X0, X21
	055 Move X2, X20
	056 Move X3, X19
	057 Call 0x1C17CB0
	058 Move X20, [X31+112]
	059 Move X19, [X31+120]
	060 Move X22, [X31+96]
	061 Move X21, [X31+104]
	062 Move X24, [X31+80]
	063 Move X23, [X31+88]
	064 Move X30, [X31+64]
	065 Move X25, [X31+72]
	066 Add X31, X31, 128
	067 Return X0

Method: System.Void EndInvoke(System.IAsyncResult result)

Disassembly:
	0x034D09C0 ADRP X0, 0xC62000
	0x034D09C4 LDR X0, [X0 + 0x470]
	0x034D09C8 BL 0x1C16CF4

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

