Type: Oculus.Platform.Challenges

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.ChallengeEntryList> GetNextEntries(Oculus.Platform.Models.ChallengeEntryList list)

Disassembly:
	0x034DC9D0 ADRP X21, 0xC17000
	0x034DC9D4 LDRB W8, [X22 + 0x8F1]
	0x034DC9D8 LDR X21, [X21 + 0xC50]
	0x034DC9DC MOV W19, W1
	0x034DC9E0 MOV X20, X0
	0x034DC9E4 TBNZ X8, 0x0, 0x34DCA2C
	0x034DC9E8 ADRP X0, 0xC56000
	0x034DC9EC LDR X0, [X0 + 0x328]
	0x034DC9F0 BL 0x1C16CF4
	0x034DC9F4 ADRP X0, 0xC17000
	0x034DC9F8 LDR X0, [X0 + 0xC50]
	0x034DC9FC BL 0x1C16CF4
	0x034DCA00 ADRP X0, 0xC17000
	0x034DCA04 LDR X0, [X0 + 0xA28]
	0x034DCA08 BL 0x1C16CF4
	0x034DCA0C ADRP X0, 0xC56000
	0x034DCA10 LDR X0, [X0 + 0xF20]
	0x034DCA14 BL 0x1C16CF4
	0x034DCA18 ADRP X0, 0xC56000
	0x034DCA1C LDR X0, [X0 + 0xF28]
	0x034DCA20 BL 0x1C16CF4
	0x034DCA24 MOVZ W8, 0x1
	0x034DCA28 STRB W8, [X22 + 0x8F1]
	0x034DCA2C LDR X0, [X21]
	0x034DCA30 LDR W8, [X0 + 0xE0]
	0x034DCA34 CBNZ W8, 0x34DCA3C
	0x034DCA38 BL 0x1C16DFC
	0x034DCA3C ADRP X22, 0xEFC000
	0x034DCA40 LDRB W8, [X22 + 0x78D]
	0x034DCA44 CBNZ W8, 0x34DCA5C
	0x034DCA48 ADRP X0, 0xC17000
	0x034DCA4C LDR X0, [X0 + 0xC50]
	0x034DCA50 BL 0x1C16CF4
	0x034DCA54 MOVZ W8, 0x1
	0x034DCA58 STRB W8, [X22 + 0x78D]
	0x034DCA5C LDR X0, [X21]
	0x034DCA60 LDR W8, [X0 + 0xE0]
	0x034DCA64 CBNZ W8, 0x34DCA70
	0x034DCA68 BL 0x1C16DFC
	0x034DCA6C LDR X0, [X21]
	0x034DCA70 LDR X8, [X0 + 0xB8]
	0x034DCA74 LDRB W9, [X8]
	0x034DCA78 CBZ W9, 0x34DCADC
	0x034DCA7C ADRP X8, 0xC56000
	0x034DCA80 LDR X8, [X8 + 0x328]
	0x034DCA84 CBZ X20, 0x34DCA8C
	0x034DCA88 LDR X20, [X20 + 0x10]
	0x034DCA8C LDR X0, [X8]
	0x034DCA90 ADRP X22, 0xC56000
	0x034DCA94 ADRP X21, 0xC56000
	0x034DCA98 LDR W8, [X0 + 0xE0]
	0x034DCA9C LDR X22, [X22 + 0xF28]
	0x034DCAA0 LDR X21, [X21 + 0xF20]
	0x034DCAA4 CBNZ W8, 0x34DCAAC
	0x034DCAA8 BL 0x1C16DFC
	0x034DCAAC MOV X0, X20
	0x034DCAB0 MOV W1, W19
	0x034DCAB4 BL 0x34B8758
	0x034DCAB8 LDR X8, [X22]
	0x034DCABC MOV X20, X0
	0x034DCAC0 MOV X0, X8
	0x034DCAC4 BL 0x1C16F10
	0x034DCAC8 LDR X2, [X21]
	0x034DCACC MOV X1, X20
	0x034DCAD0 MOV X19, X0
	0x034DCAD4 BL 0x25C95C8
	0x034DCAD8 B 0x34DCB1C
	0x034DCADC LDR W9, [X0 + 0xE0]
	0x034DCAE0 CBNZ W9, 0x34DCAF0
	0x034DCAE4 BL 0x1C16DFC
	0x034DCAE8 LDR X8, [X21]
	0x034DCAEC LDR X8, [X8 + 0xB8]
	0x034DCAF0 ADRP X9, 0xC17000
	0x034DCAF4 LDR X9, [X9 + 0xA28]
	0x034DCAF8 LDR X19, [X8 + 0x8]
	0x034DCAFC LDR X0, [X9]
	0x034DCB00 LDR W9, [X0 + 0xE0]
	0x034DCB04 CBNZ W9, 0x34DCB0C
	0x034DCB08 BL 0x1C16DFC
	0x034DCB0C MOV X0, X19
	0x034DCB10 MOV X1, X31
	0x034DCB14 BL 0x3C0649C
	0x034DCB18 MOV X19, X31
	0x034DCB1C MOV X0, X19
	0x034DCB20 LDP X20, X19, [X31 + 0x20]
	0x034DCB24 LDP X22, X21, [X31 + 0x10]
	0x034DCB28 LDR X30, [X31], #0x30
	0x034DCB2C RET
	0x034DCB30 STP X30, X21, [X31 - 0x20]!
	0x034DCB34 STP X20, X19, [X31 + 0x10]
	0x034DCB38 ADRP X21, 0xF03000
	0x034DCB3C ADRP X20, 0xC17000
	0x034DCB40 LDRB W8, [X21 + 0x8F2]
	0x034DCB44 LDR X20, [X20 + 0xC50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF04000
	006 Move X20, 0xC18000
	007 Move W8, [X21+2278]
	008 Move X20, [X20+3152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xC57000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC18000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC18000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xC57000
	024 Move X0, [X0+3832]
	025 Call 0x1C17CF4
	026 Move X0, 0xC57000
	027 Move X0, [X0+3840]
	028 Call 0x1C17CF4
	029 Move X0, 0xC57000
	030 Move X0, [X0+3848]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2278], W8
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X21, 0xEFD000
	040 Move W8, [X21+1933]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xC18000
	044 Move X0, [X0+3152]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1933], W8
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Move X8, [X0+184]
	055 Move W9, [X8]
	056 Compare W9, 0
	057 JumpIfEqual {84}
	058 Compare X19, 0
	059 JumpIfEqual {108}
	060 Move X8, 0xC57000
	061 Move X8, [X8+808]
	062 Move X20, 0xC57000
	063 Move X21, 0xC57000
	064 Move X19, [X19+24]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Move X20, [X20+3848]
	068 Move X21, [X21+3840]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W1, 0xA0C6
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 Move X0, X19
	075 Call CAPI.ovr_HTTP_GetWithMessageType, X0, X1
	076 Move X8, [X20]
	077 Move X20, X0
	078 Move X0, X8
	079 Call 0x1C17F10
	080 Move X2, [X21]
	081 Move X1, X20
	082 Move X19, X0
	083 Call Request`1<Object>..ctor, X0, X1
	084 Move W9, [X0+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Call 0x1C17DFC
	088 Move X8, [X20]
	089 Move X8, [X8+184]
	090 Move X9, 0xC18000
	091 Move X9, [X9+2600]
	092 Move X19, [X8+8]
	093 Move X0, [X9]
	094 Move W9, [X0+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X19
	099 Move X1, X31
	100 Call Debug.LogError, X0
	101 Move X19, X31
	102 Move X0, X19
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 Return X0
	108 Call 0x1C17F20

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.ChallengeEntryList> GetPreviousEntries(Oculus.Platform.Models.ChallengeEntryList list)

Disassembly:
	0x034DCB48 MOV X19, X0
	0x034DCB4C TBNZ X8, 0x0, 0x34DCB94
	0x034DCB50 ADRP X0, 0xC56000
	0x034DCB54 LDR X0, [X0 + 0x328]
	0x034DCB58 BL 0x1C16CF4
	0x034DCB5C ADRP X0, 0xC17000
	0x034DCB60 LDR X0, [X0 + 0xC50]
	0x034DCB64 BL 0x1C16CF4
	0x034DCB68 ADRP X0, 0xC17000
	0x034DCB6C LDR X0, [X0 + 0xA28]
	0x034DCB70 BL 0x1C16CF4
	0x034DCB74 ADRP X0, 0xC56000
	0x034DCB78 LDR X0, [X0 + 0xF38]
	0x034DCB7C BL 0x1C16CF4
	0x034DCB80 ADRP X0, 0xC56000
	0x034DCB84 LDR X0, [X0 + 0xF40]
	0x034DCB88 BL 0x1C16CF4
	0x034DCB8C MOVZ W8, 0x1
	0x034DCB90 STRB W8, [X21 + 0x8F2]
	0x034DCB94 LDR X0, [X20]
	0x034DCB98 LDR W8, [X0 + 0xE0]
	0x034DCB9C CBNZ W8, 0x34DCBA4
	0x034DCBA0 BL 0x1C16DFC
	0x034DCBA4 ADRP X21, 0xEFC000
	0x034DCBA8 LDRB W8, [X21 + 0x78D]
	0x034DCBAC CBNZ W8, 0x34DCBC4
	0x034DCBB0 ADRP X0, 0xC17000
	0x034DCBB4 LDR X0, [X0 + 0xC50]
	0x034DCBB8 BL 0x1C16CF4
	0x034DCBBC MOVZ W8, 0x1
	0x034DCBC0 STRB W8, [X21 + 0x78D]
	0x034DCBC4 LDR X0, [X20]
	0x034DCBC8 LDR W8, [X0 + 0xE0]
	0x034DCBCC CBNZ W8, 0x34DCBD8
	0x034DCBD0 BL 0x1C16DFC
	0x034DCBD4 LDR X0, [X20]
	0x034DCBD8 LDR X8, [X0 + 0xB8]
	0x034DCBDC LDRB W9, [X8]
	0x034DCBE0 CBZ W9, 0x34DCC38
	0x034DCBE4 ADRP X8, 0xC56000
	0x034DCBE8 LDR X8, [X8 + 0x328]
	0x034DCBEC ADRP X20, 0xC56000
	0x034DCBF0 ADRP X21, 0xC56000
	0x034DCBF4 LDR X0, [X8]
	0x034DCBF8 LDR W8, [X0 + 0xE0]
	0x034DCBFC LDR X20, [X20 + 0xF40]
	0x034DCC00 LDR X21, [X21 + 0xF38]
	0x034DCC04 CBNZ W8, 0x34DCC0C
	0x034DCC08 BL 0x1C16DFC
	0x034DCC0C MOV X0, X19
	0x034DCC10 BL 0x34B89CC
	0x034DCC14 LDR X8, [X20]
	0x034DCC18 MOV X20, X0
	0x034DCC1C MOV X0, X8
	0x034DCC20 BL 0x1C16F10
	0x034DCC24 LDR X2, [X21]
	0x034DCC28 MOV X1, X20
	0x034DCC2C MOV X19, X0
	0x034DCC30 BL 0x25C95C8
	0x034DCC34 B 0x34DCC78
	0x034DCC38 LDR W9, [X0 + 0xE0]
	0x034DCC3C CBNZ W9, 0x34DCC4C
	0x034DCC40 BL 0x1C16DFC
	0x034DCC44 LDR X8, [X20]
	0x034DCC48 LDR X8, [X8 + 0xB8]
	0x034DCC4C ADRP X9, 0xC17000
	0x034DCC50 LDR X9, [X9 + 0xA28]
	0x034DCC54 LDR X19, [X8 + 0x8]
	0x034DCC58 LDR X0, [X9]
	0x034DCC5C LDR W9, [X0 + 0xE0]
	0x034DCC60 CBNZ W9, 0x34DCC68
	0x034DCC64 BL 0x1C16DFC
	0x034DCC68 MOV X0, X19
	0x034DCC6C MOV X1, X31
	0x034DCC70 BL 0x3C0649C
	0x034DCC74 MOV X19, X31
	0x034DCC78 MOV X0, X19
	0x034DCC7C LDP X20, X19, [X31 + 0x10]
	0x034DCC80 LDP X30, X21, [X31], #0x20
	0x034DCC84 RET
	0x034DCC88 STP X30, X21, [X31 - 0x20]!
	0x034DCC8C STP X20, X19, [X31 + 0x10]
	0x034DCC90 ADRP X21, 0xF03000
	0x034DCC94 ADRP X20, 0xC17000
	0x034DCC98 LDRB W8, [X21 + 0x8F3]
	0x034DCC9C LDR X20, [X20 + 0xC50]
	0x034DCCA0 MOV X19, X0
	0x034DCCA4 TBNZ X8, 0x0, 0x34DCCEC
	0x034DCCA8 ADRP X0, 0xC56000
	0x034DCCAC LDR X0, [X0 + 0x328]
	0x034DCCB0 BL 0x1C16CF4
	0x034DCCB4 ADRP X0, 0xC17000
	0x034DCCB8 LDR X0, [X0 + 0xC50]
	0x034DCCBC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF04000
	006 Move X20, 0xC18000
	007 Move W8, [X21+2279]
	008 Move X20, [X20+3152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xC57000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC18000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC18000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xC57000
	024 Move X0, [X0+3856]
	025 Call 0x1C17CF4
	026 Move X0, 0xC57000
	027 Move X0, [X0+3840]
	028 Call 0x1C17CF4
	029 Move X0, 0xC57000
	030 Move X0, [X0+3848]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2279], W8
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X21, 0xEFD000
	040 Move W8, [X21+1933]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xC18000
	044 Move X0, [X0+3152]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1933], W8
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Move X8, [X0+184]
	055 Move W9, [X8]
	056 Compare W9, 0
	057 JumpIfEqual {84}
	058 Compare X19, 0
	059 JumpIfEqual {108}
	060 Move X8, 0xC57000
	061 Move X8, [X8+808]
	062 Move X20, 0xC57000
	063 Move X21, 0xC57000
	064 Move X19, [X19+32]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Move X20, [X20+3848]
	068 Move X21, [X21+3840]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W1, 1136
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 Move X0, X19
	075 Call CAPI.ovr_HTTP_GetWithMessageType, X0, X1
	076 Move X8, [X20]
	077 Move X20, X0
	078 Move X0, X8
	079 Call 0x1C17F10
	080 Move X2, [X21]
	081 Move X1, X20
	082 Move X19, X0
	083 Call Request`1<Object>..ctor, X0, X1
	084 Move W9, [X0+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Call 0x1C17DFC
	088 Move X8, [X20]
	089 Move X8, [X8+184]
	090 Move X9, 0xC18000
	091 Move X9, [X9+2600]
	092 Move X19, [X8+8]
	093 Move X0, [X9]
	094 Move W9, [X0+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X19
	099 Move X1, X31
	100 Call Debug.LogError, X0
	101 Move X19, X31
	102 Move X0, X19
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 Return X0
	108 Call 0x1C17F20

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.ChallengeList> GetNextChallenges(Oculus.Platform.Models.ChallengeList list)

Disassembly:
	0x034DCCC0 ADRP X0, 0xC17000
	0x034DCCC4 LDR X0, [X0 + 0xA28]
	0x034DCCC8 BL 0x1C16CF4
	0x034DCCCC ADRP X0, 0xC56000
	0x034DCCD0 LDR X0, [X0 + 0xF38]
	0x034DCCD4 BL 0x1C16CF4
	0x034DCCD8 ADRP X0, 0xC56000
	0x034DCCDC LDR X0, [X0 + 0xF40]
	0x034DCCE0 BL 0x1C16CF4
	0x034DCCE4 MOVZ W8, 0x1
	0x034DCCE8 STRB W8, [X21 + 0x8F3]
	0x034DCCEC LDR X0, [X20]
	0x034DCCF0 LDR W8, [X0 + 0xE0]
	0x034DCCF4 CBNZ W8, 0x34DCCFC
	0x034DCCF8 BL 0x1C16DFC
	0x034DCCFC ADRP X21, 0xEFC000
	0x034DCD00 LDRB W8, [X21 + 0x78D]
	0x034DCD04 CBNZ W8, 0x34DCD1C
	0x034DCD08 ADRP X0, 0xC17000
	0x034DCD0C LDR X0, [X0 + 0xC50]
	0x034DCD10 BL 0x1C16CF4
	0x034DCD14 MOVZ W8, 0x1
	0x034DCD18 STRB W8, [X21 + 0x78D]
	0x034DCD1C LDR X0, [X20]
	0x034DCD20 LDR W8, [X0 + 0xE0]
	0x034DCD24 CBNZ W8, 0x34DCD30
	0x034DCD28 BL 0x1C16DFC
	0x034DCD2C LDR X0, [X20]
	0x034DCD30 LDR X8, [X0 + 0xB8]
	0x034DCD34 LDRB W9, [X8]
	0x034DCD38 CBZ W9, 0x34DCD90
	0x034DCD3C ADRP X8, 0xC56000
	0x034DCD40 LDR X8, [X8 + 0x328]
	0x034DCD44 ADRP X20, 0xC56000
	0x034DCD48 ADRP X21, 0xC56000
	0x034DCD4C LDR X0, [X8]
	0x034DCD50 LDR W8, [X0 + 0xE0]
	0x034DCD54 LDR X20, [X20 + 0xF40]
	0x034DCD58 LDR X21, [X21 + 0xF38]
	0x034DCD5C CBNZ W8, 0x34DCD64
	0x034DCD60 BL 0x1C16DFC
	0x034DCD64 MOV X0, X19
	0x034DCD68 BL 0x34B8A48
	0x034DCD6C LDR X8, [X20]
	0x034DCD70 MOV X20, X0
	0x034DCD74 MOV X0, X8
	0x034DCD78 BL 0x1C16F10
	0x034DCD7C LDR X2, [X21]
	0x034DCD80 MOV X1, X20
	0x034DCD84 MOV X19, X0
	0x034DCD88 BL 0x25C95C8
	0x034DCD8C B 0x34DCDD0
	0x034DCD90 LDR W9, [X0 + 0xE0]
	0x034DCD94 CBNZ W9, 0x34DCDA4
	0x034DCD98 BL 0x1C16DFC
	0x034DCD9C LDR X8, [X20]
	0x034DCDA0 LDR X8, [X8 + 0xB8]
	0x034DCDA4 ADRP X9, 0xC17000
	0x034DCDA8 LDR X9, [X9 + 0xA28]
	0x034DCDAC LDR X19, [X8 + 0x8]
	0x034DCDB0 LDR X0, [X9]
	0x034DCDB4 LDR W9, [X0 + 0xE0]
	0x034DCDB8 CBNZ W9, 0x34DCDC0
	0x034DCDBC BL 0x1C16DFC
	0x034DCDC0 MOV X0, X19
	0x034DCDC4 MOV X1, X31
	0x034DCDC8 BL 0x3C0649C
	0x034DCDCC MOV X19, X31
	0x034DCDD0 MOV X0, X19
	0x034DCDD4 LDP X20, X19, [X31 + 0x10]
	0x034DCDD8 LDP X30, X21, [X31], #0x20
	0x034DCDDC RET
	0x034DCDE0 STR X30, [X31 - 0x30]!
	0x034DCDE4 STP X22, X21, [X31 + 0x10]
	0x034DCDE8 STP X20, X19, [X31 + 0x20]
	0x034DCDEC ADRP X22, 0xF03000
	0x034DCDF0 ADRP X21, 0xC17000
	0x034DCDF4 LDRB W8, [X22 + 0x8F4]
	0x034DCDF8 LDR X21, [X21 + 0xC50]
	0x034DCDFC MOV X20, X1
	0x034DCE00 MOV X19, X0
	0x034DCE04 TBNZ X8, 0x0, 0x34DCE4C
	0x034DCE08 ADRP X0, 0xC56000
	0x034DCE0C LDR X0, [X0 + 0x328]
	0x034DCE10 BL 0x1C16CF4
	0x034DCE14 ADRP X0, 0xC17000
	0x034DCE18 LDR X0, [X0 + 0xC50]
	0x034DCE1C BL 0x1C16CF4
	0x034DCE20 ADRP X0, 0xC17000
	0x034DCE24 LDR X0, [X0 + 0xA28]
	0x034DCE28 BL 0x1C16CF4
	0x034DCE2C ADRP X0, 0xC56000
	0x034DCE30 LDR X0, [X0 + 0xF38]
	0x034DCE34 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF04000
	006 Move X20, 0xC18000
	007 Move W8, [X21+2280]
	008 Move X20, [X20+3152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xC57000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC18000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC18000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xC57000
	024 Move X0, [X0+3864]
	025 Call 0x1C17CF4
	026 Move X0, 0xC57000
	027 Move X0, [X0+3872]
	028 Call 0x1C17CF4
	029 Move X0, 0xC57000
	030 Move X0, [X0+3880]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2280], W8
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X21, 0xEFD000
	040 Move W8, [X21+1933]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xC18000
	044 Move X0, [X0+3152]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1933], W8
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Move X8, [X0+184]
	055 Move W9, [X8]
	056 Compare W9, 0
	057 JumpIfEqual {84}
	058 Compare X19, 0
	059 JumpIfEqual {108}
	060 Move X8, 0xC57000
	061 Move X8, [X8+808]
	062 Move X20, 0xC57000
	063 Move X21, 0xC57000
	064 Move X19, [X19+24]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Move X20, [X20+3880]
	068 Move X21, [X21+3872]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W1, 0xA1B6
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 Move X0, X19
	075 Call CAPI.ovr_HTTP_GetWithMessageType, X0, X1
	076 Move X8, [X20]
	077 Move X20, X0
	078 Move X0, X8
	079 Call 0x1C17F10
	080 Move X2, [X21]
	081 Move X1, X20
	082 Move X19, X0
	083 Call Request`1<Object>..ctor, X0, X1
	084 Move W9, [X0+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Call 0x1C17DFC
	088 Move X8, [X20]
	089 Move X8, [X8+184]
	090 Move X9, 0xC18000
	091 Move X9, [X9+2600]
	092 Move X19, [X8+8]
	093 Move X0, [X9]
	094 Move W9, [X0+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X19
	099 Move X1, X31
	100 Call Debug.LogError, X0
	101 Move X19, X31
	102 Move X0, X19
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 Return X0
	108 Call 0x1C17F20

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.ChallengeList> GetPreviousChallenges(Oculus.Platform.Models.ChallengeList list)

Disassembly:
	0x034DCE38 ADRP X0, 0xC56000
	0x034DCE3C LDR X0, [X0 + 0xF40]
	0x034DCE40 BL 0x1C16CF4
	0x034DCE44 MOVZ W8, 0x1
	0x034DCE48 STRB W8, [X22 + 0x8F4]
	0x034DCE4C LDR X0, [X21]
	0x034DCE50 LDR W8, [X0 + 0xE0]
	0x034DCE54 CBNZ W8, 0x34DCE5C
	0x034DCE58 BL 0x1C16DFC
	0x034DCE5C ADRP X22, 0xEFC000
	0x034DCE60 LDRB W8, [X22 + 0x78D]
	0x034DCE64 CBNZ W8, 0x34DCE7C
	0x034DCE68 ADRP X0, 0xC17000
	0x034DCE6C LDR X0, [X0 + 0xC50]
	0x034DCE70 BL 0x1C16CF4
	0x034DCE74 MOVZ W8, 0x1
	0x034DCE78 STRB W8, [X22 + 0x78D]
	0x034DCE7C LDR X0, [X21]
	0x034DCE80 LDR W8, [X0 + 0xE0]
	0x034DCE84 CBNZ W8, 0x34DCE90
	0x034DCE88 BL 0x1C16DFC
	0x034DCE8C LDR X0, [X21]
	0x034DCE90 LDR X8, [X0 + 0xB8]
	0x034DCE94 LDRB W9, [X8]
	0x034DCE98 CBZ W9, 0x34DCEFC
	0x034DCE9C ADRP X8, 0xC56000
	0x034DCEA0 LDR X8, [X8 + 0x328]
	0x034DCEA4 CBZ X20, 0x34DCEAC
	0x034DCEA8 LDR X20, [X20 + 0x10]
	0x034DCEAC LDR X0, [X8]
	0x034DCEB0 ADRP X22, 0xC56000
	0x034DCEB4 ADRP X21, 0xC56000
	0x034DCEB8 LDR W8, [X0 + 0xE0]
	0x034DCEBC LDR X22, [X22 + 0xF40]
	0x034DCEC0 LDR X21, [X21 + 0xF38]
	0x034DCEC4 CBNZ W8, 0x34DCECC
	0x034DCEC8 BL 0x1C16DFC
	0x034DCECC MOV X0, X19
	0x034DCED0 MOV X1, X20
	0x034DCED4 BL 0x34B8AC4
	0x034DCED8 LDR X8, [X22]
	0x034DCEDC MOV X20, X0
	0x034DCEE0 MOV X0, X8
	0x034DCEE4 BL 0x1C16F10
	0x034DCEE8 LDR X2, [X21]
	0x034DCEEC MOV X1, X20
	0x034DCEF0 MOV X19, X0
	0x034DCEF4 BL 0x25C95C8
	0x034DCEF8 B 0x34DCF3C
	0x034DCEFC LDR W9, [X0 + 0xE0]
	0x034DCF00 CBNZ W9, 0x34DCF10
	0x034DCF04 BL 0x1C16DFC
	0x034DCF08 LDR X8, [X21]
	0x034DCF0C LDR X8, [X8 + 0xB8]
	0x034DCF10 ADRP X9, 0xC17000
	0x034DCF14 LDR X9, [X9 + 0xA28]
	0x034DCF18 LDR X19, [X8 + 0x8]
	0x034DCF1C LDR X0, [X9]
	0x034DCF20 LDR W9, [X0 + 0xE0]
	0x034DCF24 CBNZ W9, 0x34DCF2C
	0x034DCF28 BL 0x1C16DFC
	0x034DCF2C MOV X0, X19
	0x034DCF30 MOV X1, X31
	0x034DCF34 BL 0x3C0649C
	0x034DCF38 MOV X19, X31
	0x034DCF3C MOV X0, X19
	0x034DCF40 LDP X20, X19, [X31 + 0x20]
	0x034DCF44 LDP X22, X21, [X31 + 0x10]
	0x034DCF48 LDR X30, [X31], #0x30
	0x034DCF4C RET
	0x034DCF50 STP X30, X21, [X31 - 0x20]!
	0x034DCF54 STP X20, X19, [X31 + 0x10]
	0x034DCF58 ADRP X21, 0xF03000
	0x034DCF5C ADRP X20, 0xC17000
	0x034DCF60 LDRB W8, [X21 + 0x8F5]
	0x034DCF64 LDR X20, [X20 + 0xC50]
	0x034DCF68 MOV X19, X0
	0x034DCF6C TBNZ X8, 0x0, 0x34DCF90
	0x034DCF70 ADRP X0, 0xC56000
	0x034DCF74 LDR X0, [X0 + 0x328]
	0x034DCF78 BL 0x1C16CF4
	0x034DCF7C ADRP X0, 0xC17000
	0x034DCF80 LDR X0, [X0 + 0xC50]
	0x034DCF84 BL 0x1C16CF4
	0x034DCF88 MOVZ W8, 0x1
	0x034DCF8C STRB W8, [X21 + 0x8F5]
	0x034DCF90 LDR X0, [X20]
	0x034DCF94 LDR W8, [X0 + 0xE0]
	0x034DCF98 CBNZ W8, 0x34DCFA0
	0x034DCF9C BL 0x1C16DFC
	0x034DCFA0 ADRP X21, 0xEFC000
	0x034DCFA4 LDRB W8, [X21 + 0x78D]
	0x034DCFA8 CBNZ W8, 0x34DCFC0
	0x034DCFAC ADRP X0, 0xC17000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF04000
	006 Move X20, 0xC18000
	007 Move W8, [X21+2281]
	008 Move X20, [X20+3152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xC57000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC18000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC18000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xC57000
	024 Move X0, [X0+3888]
	025 Call 0x1C17CF4
	026 Move X0, 0xC57000
	027 Move X0, [X0+3872]
	028 Call 0x1C17CF4
	029 Move X0, 0xC57000
	030 Move X0, [X0+3880]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2281], W8
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X21, 0xEFD000
	040 Move W8, [X21+1933]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xC18000
	044 Move X0, [X0+3152]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1933], W8
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Move X8, [X0+184]
	055 Move W9, [X8]
	056 Compare W9, 0
	057 JumpIfEqual {84}
	058 Compare X19, 0
	059 JumpIfEqual {108}
	060 Move X8, 0xC57000
	061 Move X8, [X8+808]
	062 Move X20, 0xC57000
	063 Move X21, 0xC57000
	064 Move X19, [X19+32]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Move X20, [X20+3880]
	068 Move X21, [X21+3872]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W1, 1037
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 Move X0, X19
	075 Call CAPI.ovr_HTTP_GetWithMessageType, X0, X1
	076 Move X8, [X20]
	077 Move X20, X0
	078 Move X0, X8
	079 Call 0x1C17F10
	080 Move X2, [X21]
	081 Move X1, X20
	082 Move X19, X0
	083 Call Request`1<Object>..ctor, X0, X1
	084 Move W9, [X0+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Call 0x1C17DFC
	088 Move X8, [X20]
	089 Move X8, [X8+184]
	090 Move X9, 0xC18000
	091 Move X9, [X9+2600]
	092 Move X19, [X8+8]
	093 Move X0, [X9]
	094 Move W9, [X0+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X19
	099 Move X1, X31
	100 Call Debug.LogError, X0
	101 Move X19, X31
	102 Move X0, X19
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 Return X0
	108 Call 0x1C17F20

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.Challenge> Create(System.String leaderboardName, Oculus.Platform.ChallengeOptions challengeOptions)

Disassembly:
	0x034DCFB0 LDR X0, [X0 + 0xC50]
	0x034DCFB4 BL 0x1C16CF4
	0x034DCFB8 MOVZ W8, 0x1
	0x034DCFBC STRB W8, [X21 + 0x78D]
	0x034DCFC0 LDR X0, [X20]
	0x034DCFC4 LDR W8, [X0 + 0xE0]
	0x034DCFC8 CBNZ W8, 0x34DCFD4
	0x034DCFCC BL 0x1C16DFC
	0x034DCFD0 LDR X0, [X20]
	0x034DCFD4 LDR X8, [X0 + 0xB8]
	0x034DCFD8 LDRB W8, [X8]
	0x034DCFDC CBZ W8, 0x34DD008
	0x034DCFE0 ADRP X8, 0xC56000
	0x034DCFE4 LDR X8, [X8 + 0x328]
	0x034DCFE8 LDR X0, [X8]
	0x034DCFEC LDR W8, [X0 + 0xE0]
	0x034DCFF0 CBNZ W8, 0x34DCFF8
	0x034DCFF4 BL 0x1C16DFC
	0x034DCFF8 MOV X0, X19
	0x034DCFFC LDP X20, X19, [X31 + 0x10]
	0x034DD000 LDP X30, X21, [X31], #0x20
	0x034DD004 B 0x34B6ABC
	0x034DD008 LDP X20, X19, [X31 + 0x10]
	0x034DD00C LDP X30, X21, [X31], #0x20
	0x034DD010 RET
	0x034DD014 STP X30, X21, [X31 - 0x20]!
	0x034DD018 STP X20, X19, [X31 + 0x10]
	0x034DD01C ADRP X21, 0xF02000
	0x034DD020 ADRP X20, 0xC16000
	0x034DD024 LDRB W8, [X21 + 0x8F6]
	0x034DD028 LDR X20, [X20 + 0xC50]
	0x034DD02C MOV X19, X0
	0x034DD030 TBNZ X8, 0x0, 0x34DD054
	0x034DD034 ADRP X0, 0xC55000
	0x034DD038 LDR X0, [X0 + 0x328]
	0x034DD03C BL 0x1C16CF4
	0x034DD040 ADRP X0, 0xC16000
	0x034DD044 LDR X0, [X0 + 0xC50]
	0x034DD048 BL 0x1C16CF4
	0x034DD04C MOVZ W8, 0x1
	0x034DD050 STRB W8, [X21 + 0x8F6]
	0x034DD054 LDR X0, [X20]
	0x034DD058 LDR W8, [X0 + 0xE0]
	0x034DD05C CBNZ W8, 0x34DD064
	0x034DD060 BL 0x1C16DFC
	0x034DD064 ADRP X21, 0xEFB000
	0x034DD068 LDRB W8, [X21 + 0x78D]
	0x034DD06C CBNZ W8, 0x34DD084
	0x034DD070 ADRP X0, 0xC16000
	0x034DD074 LDR X0, [X0 + 0xC50]
	0x034DD078 BL 0x1C16CF4
	0x034DD07C MOVZ W8, 0x1
	0x034DD080 STRB W8, [X21 + 0x78D]
	0x034DD084 LDR X0, [X20]
	0x034DD088 LDR W8, [X0 + 0xE0]
	0x034DD08C CBNZ W8, 0x34DD098
	0x034DD090 BL 0x1C16DFC
	0x034DD094 LDR X0, [X20]
	0x034DD098 LDR X8, [X0 + 0xB8]
	0x034DD09C LDRB W8, [X8]
	0x034DD0A0 CBZ W8, 0x34DD0CC
	0x034DD0A4 ADRP X8, 0xC55000
	0x034DD0A8 LDR X8, [X8 + 0x328]
	0x034DD0AC LDR X0, [X8]
	0x034DD0B0 LDR W8, [X0 + 0xE0]
	0x034DD0B4 CBNZ W8, 0x34DD0BC
	0x034DD0B8 BL 0x1C16DFC
	0x034DD0BC MOV X0, X19
	0x034DD0C0 LDP X20, X19, [X31 + 0x10]
	0x034DD0C4 LDP X30, X21, [X31], #0x20
	0x034DD0C8 B 0x34B6214
	0x034DD0CC LDP X20, X19, [X31 + 0x10]
	0x034DD0D0 LDP X30, X21, [X31], #0x20
	0x034DD0D4 RET
	0x034DD0D8 STP X30, X21, [X31 - 0x20]!
	0x034DD0DC STP X20, X19, [X31 + 0x10]
	0x034DD0E0 ADRP X21, 0xF02000
	0x034DD0E4 ADRP X20, 0xC16000
	0x034DD0E8 LDRB W8, [X21 + 0x8F7]
	0x034DD0EC LDR X20, [X20 + 0xC50]
	0x034DD0F0 MOV X19, X0
	0x034DD0F4 TBNZ X8, 0x0, 0x34DD118
	0x034DD0F8 ADRP X0, 0xC55000
	0x034DD0FC LDR X0, [X0 + 0x328]
	0x034DD100 BL 0x1C16CF4
	0x034DD104 ADRP X0, 0xC16000
	0x034DD108 LDR X0, [X0 + 0xC50]
	0x034DD10C BL 0x1C16CF4
	0x034DD110 MOVZ W8, 0x1
	0x034DD114 STRB W8, [X21 + 0x8F7]
	0x034DD118 LDR X0, [X20]
	0x034DD11C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF04000
	007 Move X21, 0xC18000
	008 Move W8, [X22+2282]
	009 Move X21, [X21+3152]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xC57000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC18000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move X0, 0xC18000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0xC57000
	026 Move X0, [X0+3896]
	027 Call 0x1C17CF4
	028 Move X0, 0xC56000
	029 Move X0, [X0+3904]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2282], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X22, 0xEFC000
	039 Move W8, [X22+1933]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0xC17000
	043 Move X0, [X0+3152]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+1933], W8
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move W9, [X8]
	055 Compare W9, 0
	056 JumpIfEqual {82}
	057 Move X8, 0xC56000
	058 Move X8, [X8+808]
	059 Compare X20, 0
	060 JumpIfEqual {62}
	061 Move X20, [X20+16]
	062 Move X0, [X8]
	063 Move X22, 0xC56000
	064 Move X21, 0xC56000
	065 Move W8, [X0+224]
	066 Move X22, [X22+3904]
	067 Move X21, [X21+3896]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X19
	072 Move X1, X20
	073 Call CAPI.ovr_Challenges_Create, X0, X1
	074 Move X8, [X22]
	075 Move X20, X0
	076 Move X0, X8
	077 Call 0x1C17F10
	078 Move X2, [X21]
	079 Move X1, X20
	080 Move X19, X0
	081 Call Request`1<Object>..ctor, X0, X1
	082 Move W9, [X0+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Call 0x1C17DFC
	086 Move X8, [X21]
	087 Move X8, [X8+184]
	088 Move X9, 0xC17000
	089 Move X9, [X9+2600]
	090 Move X19, [X8+8]
	091 Move X0, [X9]
	092 Move W9, [X0+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X19
	097 Move X1, X31
	098 Call Debug.LogError, X0
	099 Move X19, X31
	100 Move X0, X19
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.Challenge> DeclineInvite(System.UInt64 challengeID)

Disassembly:
	0x034DD120 CBNZ W8, 0x34DD128
	0x034DD124 BL 0x1C16DFC
	0x034DD128 ADRP X21, 0xEFB000
	0x034DD12C LDRB W8, [X21 + 0x78D]
	0x034DD130 CBNZ W8, 0x34DD148
	0x034DD134 ADRP X0, 0xC16000
	0x034DD138 LDR X0, [X0 + 0xC50]
	0x034DD13C BL 0x1C16CF4
	0x034DD140 MOVZ W8, 0x1
	0x034DD144 STRB W8, [X21 + 0x78D]
	0x034DD148 LDR X0, [X20]
	0x034DD14C LDR W8, [X0 + 0xE0]
	0x034DD150 CBNZ W8, 0x34DD15C
	0x034DD154 BL 0x1C16DFC
	0x034DD158 LDR X0, [X20]
	0x034DD15C LDR X8, [X0 + 0xB8]
	0x034DD160 LDRB W8, [X8]
	0x034DD164 CBZ W8, 0x34DD190
	0x034DD168 ADRP X8, 0xC55000
	0x034DD16C LDR X8, [X8 + 0x328]
	0x034DD170 LDR X0, [X8]
	0x034DD174 LDR W8, [X0 + 0xE0]
	0x034DD178 CBNZ W8, 0x34DD180
	0x034DD17C BL 0x1C16DFC
	0x034DD180 MOV X0, X19
	0x034DD184 LDP X20, X19, [X31 + 0x10]
	0x034DD188 LDP X30, X21, [X31], #0x20
	0x034DD18C B 0x34B6B38
	0x034DD190 LDP X20, X19, [X31 + 0x10]
	0x034DD194 LDP X30, X21, [X31], #0x20
	0x034DD198 RET
	0x034DD19C STP X30, X21, [X31 - 0x20]!
	0x034DD1A0 STP X20, X19, [X31 + 0x10]
	0x034DD1A4 ADRP X21, 0xF02000
	0x034DD1A8 ADRP X20, 0xC16000
	0x034DD1AC LDRB W8, [X21 + 0x8F8]
	0x034DD1B0 LDR X20, [X20 + 0xC50]
	0x034DD1B4 MOV X19, X0
	0x034DD1B8 TBNZ X8, 0x0, 0x34DD1DC
	0x034DD1BC ADRP X0, 0xC55000
	0x034DD1C0 LDR X0, [X0 + 0x328]
	0x034DD1C4 BL 0x1C16CF4
	0x034DD1C8 ADRP X0, 0xC16000
	0x034DD1CC LDR X0, [X0 + 0xC50]
	0x034DD1D0 BL 0x1C16CF4
	0x034DD1D4 MOVZ W8, 0x1
	0x034DD1D8 STRB W8, [X21 + 0x8F8]
	0x034DD1DC LDR X0, [X20]
	0x034DD1E0 LDR W8, [X0 + 0xE0]
	0x034DD1E4 CBNZ W8, 0x34DD1EC
	0x034DD1E8 BL 0x1C16DFC
	0x034DD1EC ADRP X21, 0xEFB000
	0x034DD1F0 LDRB W8, [X21 + 0x78D]
	0x034DD1F4 CBNZ W8, 0x34DD20C
	0x034DD1F8 ADRP X0, 0xC16000
	0x034DD1FC LDR X0, [X0 + 0xC50]
	0x034DD200 BL 0x1C16CF4
	0x034DD204 MOVZ W8, 0x1
	0x034DD208 STRB W8, [X21 + 0x78D]
	0x034DD20C LDR X0, [X20]
	0x034DD210 LDR W8, [X0 + 0xE0]
	0x034DD214 CBNZ W8, 0x34DD220
	0x034DD218 BL 0x1C16DFC
	0x034DD21C LDR X0, [X20]
	0x034DD220 LDR X8, [X0 + 0xB8]
	0x034DD224 LDRB W8, [X8]
	0x034DD228 CBZ W8, 0x34DD26C
	0x034DD22C ADRP X20, 0xC55000
	0x034DD230 LDR X20, [X20 + 0x328]
	0x034DD234 MOVZ W0, 0x1E0
	0x034DD238 MOV X1, X31
	0x034DD23C BL 0x33D53B0
	0x034DD240 LDR X8, [X20]
	0x034DD244 MOV X20, X0
	0x034DD248 LDR W9, [X8 + 0xE0]
	0x034DD24C CBNZ W9, 0x34DD258
	0x034DD250 MOV X0, X8
	0x034DD254 BL 0x1C16DFC
	0x034DD258 MOV X0, X19
	0x034DD25C MOV X1, X20
	0x034DD260 LDP X20, X19, [X31 + 0x10]
	0x034DD264 LDP X30, X21, [X31], #0x20
	0x034DD268 B 0x34B4FA0
	0x034DD26C LDP X20, X19, [X31 + 0x10]
	0x034DD270 LDP X30, X21, [X31], #0x20
	0x034DD274 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF03000
	006 Move X20, 0xC17000
	007 Move W8, [X21+2283]
	008 Move X20, [X20+3152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xC56000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC17000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC17000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xC56000
	024 Move X0, [X0+3896]
	025 Call 0x1C17CF4
	026 Move X0, 0xC56000
	027 Move X0, [X0+3904]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2283], W8
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X21, 0xEFC000
	037 Move W8, [X21+1933]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0xC17000
	041 Move X0, [X0+3152]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1933], W8
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X20]
	051 Move X8, [X0+184]
	052 Move W9, [X8]
	053 Compare W9, 0
	054 JumpIfEqual {76}
	055 Move X8, 0xC56000
	056 Move X8, [X8+808]
	057 Move X20, 0xC56000
	058 Move X21, 0xC56000
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Move X20, [X20+3904]
	062 Move X21, [X21+3896]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Call CAPI.ovr_Challenges_DeclineInvite, X0
	068 Move X8, [X20]
	069 Move X20, X0
	070 Move X0, X8
	071 Call 0x1C17F10
	072 Move X2, [X21]
	073 Move X1, X20
	074 Move X19, X0
	075 Call Request`1<Object>..ctor, X0, X1
	076 Move W9, [X0+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {82}
	079 Call 0x1C17DFC
	080 Move X8, [X20]
	081 Move X8, [X8+184]
	082 Move X9, 0xC17000
	083 Move X9, [X9+2600]
	084 Move X19, [X8+8]
	085 Move X0, [X9]
	086 Move W9, [X0+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move X1, X31
	092 Call Debug.LogError, X0
	093 Move X19, X31
	094 Move X0, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 Return X0

Method: Oculus.Platform.Request Delete(System.UInt64 challengeID)

Disassembly:
	0x034DD278 STP X30, X21, [X31 - 0x20]!
	0x034DD27C STP X20, X19, [X31 + 0x10]
	0x034DD280 ADRP X21, 0xF02000
	0x034DD284 ADRP X20, 0xC16000
	0x034DD288 LDRB W8, [X21 + 0x8F9]
	0x034DD28C LDR X20, [X20 + 0xC50]
	0x034DD290 MOV W19, W0
	0x034DD294 TBNZ X8, 0x0, 0x34DD2B8
	0x034DD298 ADRP X0, 0xC55000
	0x034DD29C LDR X0, [X0 + 0x328]
	0x034DD2A0 BL 0x1C16CF4
	0x034DD2A4 ADRP X0, 0xC16000
	0x034DD2A8 LDR X0, [X0 + 0xC50]
	0x034DD2AC BL 0x1C16CF4
	0x034DD2B0 MOVZ W8, 0x1
	0x034DD2B4 STRB W8, [X21 + 0x8F9]
	0x034DD2B8 LDR X0, [X20]
	0x034DD2BC LDR W8, [X0 + 0xE0]
	0x034DD2C0 CBNZ W8, 0x34DD2C8
	0x034DD2C4 BL 0x1C16DFC
	0x034DD2C8 ADRP X21, 0xEFB000
	0x034DD2CC LDRB W8, [X21 + 0x78D]
	0x034DD2D0 CBNZ W8, 0x34DD2E8
	0x034DD2D4 ADRP X0, 0xC16000
	0x034DD2D8 LDR X0, [X0 + 0xC50]
	0x034DD2DC BL 0x1C16CF4
	0x034DD2E0 MOVZ W8, 0x1
	0x034DD2E4 STRB W8, [X21 + 0x78D]
	0x034DD2E8 LDR X0, [X20]
	0x034DD2EC LDR W8, [X0 + 0xE0]
	0x034DD2F0 CBNZ W8, 0x34DD2FC
	0x034DD2F4 BL 0x1C16DFC
	0x034DD2F8 LDR X0, [X20]
	0x034DD2FC LDR X8, [X0 + 0xB8]
	0x034DD300 LDRB W8, [X8]
	0x034DD304 CBZ W8, 0x34DD330
	0x034DD308 ADRP X8, 0xC55000
	0x034DD30C LDR X8, [X8 + 0x328]
	0x034DD310 LDR X0, [X8]
	0x034DD314 LDR W8, [X0 + 0xE0]
	0x034DD318 CBNZ W8, 0x34DD320
	0x034DD31C BL 0x1C16DFC
	0x034DD320 MOV W0, W19
	0x034DD324 LDP X20, X19, [X31 + 0x10]
	0x034DD328 LDP X30, X21, [X31], #0x20
	0x034DD32C B 0x34B6948
	0x034DD330 LDP X20, X19, [X31 + 0x10]
	0x034DD334 LDP X30, X21, [X31], #0x20
	0x034DD338 RET
	0x034DD33C STR X30, [X31 - 0x20]!
	0x034DD340 STP X20, X19, [X31 + 0x10]
	0x034DD344 ADRP X20, 0xF02000
	0x034DD348 ADRP X19, 0xC16000
	0x034DD34C LDRB W8, [X20 + 0x8FA]
	0x034DD350 LDR X19, [X19 + 0xC50]
	0x034DD354 TBNZ X8, 0x0, 0x34DD378
	0x034DD358 ADRP X0, 0xC55000
	0x034DD35C LDR X0, [X0 + 0x328]
	0x034DD360 BL 0x1C16CF4
	0x034DD364 ADRP X0, 0xC16000
	0x034DD368 LDR X0, [X0 + 0xC50]
	0x034DD36C BL 0x1C16CF4
	0x034DD370 MOVZ W8, 0x1
	0x034DD374 STRB W8, [X20 + 0x8FA]
	0x034DD378 LDR X0, [X19]
	0x034DD37C LDR W8, [X0 + 0xE0]
	0x034DD380 CBNZ W8, 0x34DD388
	0x034DD384 BL 0x1C16DFC
	0x034DD388 ADRP X20, 0xEFB000
	0x034DD38C LDRB W8, [X20 + 0x78D]
	0x034DD390 CBNZ W8, 0x34DD3A8
	0x034DD394 ADRP X0, 0xC16000
	0x034DD398 LDR X0, [X0 + 0xC50]
	0x034DD39C BL 0x1C16CF4
	0x034DD3A0 MOVZ W8, 0x1
	0x034DD3A4 STRB W8, [X20 + 0x78D]
	0x034DD3A8 LDR X0, [X19]
	0x034DD3AC LDR W8, [X0 + 0xE0]
	0x034DD3B0 CBNZ W8, 0x34DD3BC
	0x034DD3B4 BL 0x1C16DFC
	0x034DD3B8 LDR X0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF03000
	006 Move X20, 0xC17000
	007 Move W8, [X21+2284]
	008 Move X20, [X20+3152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xC56000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC17000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC17000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xC56000
	024 Move X0, [X0+3912]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2284], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X21, 0xEFC000
	034 Move W8, [X21+1933]
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0xC17000
	038 Move X0, [X0+3152]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+1933], W8
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move X8, [X0+184]
	049 Move W9, [X8]
	050 Compare W9, 0
	051 JumpIfEqual {71}
	052 Move X8, 0xC56000
	053 Move X8, [X8+808]
	054 Move X20, 0xC56000
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Move X20, [X20+3912]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Call CAPI.ovr_Challenges_Delete, X0
	063 Move X8, [X20]
	064 Move X20, X0
	065 Move X0, X8
	066 Call 0x1C17F10
	067 Move X1, X31
	068 Move X19, X0
	069 Call Object..ctor, X0
	070 Move [X19+24], X20
	071 Move W9, [X0+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Call 0x1C17DFC
	075 Move X8, [X20]
	076 Move X8, [X8+184]
	077 Move X9, 0xC17000
	078 Move X9, [X9+2600]
	079 Move X19, [X8+8]
	080 Move X0, [X9]
	081 Move W9, [X0+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X19
	086 Move X1, X31
	087 Call Debug.LogError, X0
	088 Move X19, X31
	089 Move X0, X19
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.Challenge> Get(System.UInt64 challengeID)

Disassembly:
	0x034DD3E4 LDR X30, [X31], #0x20
	0x034DD3E8 B 0x34B6878
	0x034DD3EC LDP X20, X19, [X31 + 0x10]
	0x034DD3F0 MOV W0, W31
	0x034DD3F4 LDR X30, [X31], #0x20
	0x034DD3F8 RET
	0x034DD3FC STR X30, [X31 - 0x20]!
	0x034DD400 STP X20, X19, [X31 + 0x10]
	0x034DD404 ADRP X20, 0xF02000
	0x034DD408 ADRP X19, 0xC16000
	0x034DD40C LDRB W8, [X20 + 0x8FB]
	0x034DD410 LDR X19, [X19 + 0xC50]
	0x034DD414 TBNZ X8, 0x0, 0x34DD438
	0x034DD418 ADRP X0, 0xC55000
	0x034DD41C LDR X0, [X0 + 0x328]
	0x034DD420 BL 0x1C16CF4
	0x034DD424 ADRP X0, 0xC16000
	0x034DD428 LDR X0, [X0 + 0xC50]
	0x034DD42C BL 0x1C16CF4
	0x034DD430 MOVZ W8, 0x1
	0x034DD434 STRB W8, [X20 + 0x8FB]
	0x034DD438 LDR X0, [X19]
	0x034DD43C LDR W8, [X0 + 0xE0]
	0x034DD440 CBNZ W8, 0x34DD448
	0x034DD444 BL 0x1C16DFC
	0x034DD448 ADRP X20, 0xEFB000
	0x034DD44C LDRB W8, [X20 + 0x78D]
	0x034DD450 CBNZ W8, 0x34DD468
	0x034DD454 ADRP X0, 0xC16000
	0x034DD458 LDR X0, [X0 + 0xC50]
	0x034DD45C BL 0x1C16CF4
	0x034DD460 MOVZ W8, 0x1
	0x034DD464 STRB W8, [X20 + 0x78D]
	0x034DD468 LDR X0, [X19]
	0x034DD46C LDR W8, [X0 + 0xE0]
	0x034DD470 CBNZ W8, 0x34DD47C
	0x034DD474 BL 0x1C16DFC
	0x034DD478 LDR X0, [X19]
	0x034DD47C LDR X8, [X0 + 0xB8]
	0x034DD480 LDRB W8, [X8]
	0x034DD484 CBZ W8, 0x34DD4AC
	0x034DD488 ADRP X8, 0xC55000
	0x034DD48C LDR X8, [X8 + 0x328]
	0x034DD490 LDR X0, [X8]
	0x034DD494 LDR W8, [X0 + 0xE0]
	0x034DD498 CBNZ W8, 0x34DD4A0
	0x034DD49C BL 0x1C16DFC
	0x034DD4A0 LDP X20, X19, [X31 + 0x10]
	0x034DD4A4 LDR X30, [X31], #0x20
	0x034DD4A8 B 0x34B68E0
	0x034DD4AC LDP X20, X19, [X31 + 0x10]
	0x034DD4B0 MOV W0, W31
	0x034DD4B4 LDR X30, [X31], #0x20
	0x034DD4B8 RET
	0x034DD4BC STP X30, X21, [X31 - 0x20]!
	0x034DD4C0 STP X20, X19, [X31 + 0x10]
	0x034DD4C4 ADRP X21, 0xF02000
	0x034DD4C8 ADRP X20, 0xC16000
	0x034DD4CC LDRB W8, [X21 + 0x8FC]
	0x034DD4D0 LDR X20, [X20 + 0xC50]
	0x034DD4D4 MOV X19, X0
	0x034DD4D8 TBNZ X8, 0x0, 0x34DD4FC
	0x034DD4DC ADRP X0, 0xC55000
	0x034DD4E0 LDR X0, [X0 + 0x328]
	0x034DD4E4 BL 0x1C16CF4
	0x034DD4E8 ADRP X0, 0xC16000
	0x034DD4EC LDR X0, [X0 + 0xC50]
	0x034DD4F0 BL 0x1C16CF4
	0x034DD4F4 MOVZ W8, 0x1
	0x034DD4F8 STRB W8, [X21 + 0x8FC]
	0x034DD4FC LDR X0, [X20]
	0x034DD500 LDR W8, [X0 + 0xE0]
	0x034DD504 CBNZ W8, 0x34DD50C
	0x034DD508 BL 0x1C16DFC
	0x034DD50C ADRP X21, 0xEFB000
	0x034DD510 LDRB W8, [X21 + 0x78D]
	0x034DD514 CBNZ W8, 0x34DD52C
	0x034DD518 ADRP X0, 0xC16000
	0x034DD51C LDR X0, [X0 + 0xC50]
	0x034DD520 BL 0x1C16CF4
	0x034DD524 MOVZ W8, 0x1
	0x034DD528 STRB W8, [X21 + 0x78D]
	0x034DD52C LDR X0, [X20]
	0x034DD530 LDR W8, [X0 + 0xE0]
	0x034DD534 CBNZ W8, 0x34DD540
	0x034DD538 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF03000
	006 Move X20, 0xC17000
	007 Move W8, [X21+2285]
	008 Move X20, [X20+3152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xC56000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC17000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC17000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xC56000
	024 Move X0, [X0+3896]
	025 Call 0x1C17CF4
	026 Move X0, 0xC56000
	027 Move X0, [X0+3904]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2285], W8
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X21, 0xEFC000
	037 Move W8, [X21+1933]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0xC17000
	041 Move X0, [X0+3152]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1933], W8
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X20]
	051 Move X8, [X0+184]
	052 Move W9, [X8]
	053 Compare W9, 0
	054 JumpIfEqual {76}
	055 Move X8, 0xC56000
	056 Move X8, [X8+808]
	057 Move X20, 0xC56000
	058 Move X21, 0xC56000
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Move X20, [X20+3904]
	062 Move X21, [X21+3896]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Call CAPI.ovr_Challenges_Get, X0
	068 Move X8, [X20]
	069 Move X20, X0
	070 Move X0, X8
	071 Call 0x1C17F10
	072 Move X2, [X21]
	073 Move X1, X20
	074 Move X19, X0
	075 Call Request`1<Object>..ctor, X0, X1
	076 Move W9, [X0+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {82}
	079 Call 0x1C17DFC
	080 Move X8, [X20]
	081 Move X8, [X8+184]
	082 Move X9, 0xC17000
	083 Move X9, [X9+2600]
	084 Move X19, [X8+8]
	085 Move X0, [X9]
	086 Move W9, [X0+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move X1, X31
	092 Call Debug.LogError, X0
	093 Move X19, X31
	094 Move X0, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.ChallengeEntryList> GetEntries(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)

Disassembly:
	0x034DD53C LDR X0, [X20]
	0x034DD540 LDR X8, [X0 + 0xB8]
	0x034DD544 LDRB W8, [X8]
	0x034DD548 CBZ W8, 0x34DD574
	0x034DD54C ADRP X8, 0xC55000
	0x034DD550 LDR X8, [X8 + 0x328]
	0x034DD554 LDR X0, [X8]
	0x034DD558 LDR W8, [X0 + 0xE0]
	0x034DD55C CBNZ W8, 0x34DD564
	0x034DD560 BL 0x1C16DFC
	0x034DD564 MOV X0, X19
	0x034DD568 LDP X20, X19, [X31 + 0x10]
	0x034DD56C LDP X30, X21, [X31], #0x20
	0x034DD570 B 0x34B6290
	0x034DD574 LDP X20, X19, [X31 + 0x10]
	0x034DD578 MOV W0, W31
	0x034DD57C LDP X30, X21, [X31], #0x20
	0x034DD580 RET
	0x034DD584 STP X30, X21, [X31 - 0x20]!
	0x034DD588 STP X20, X19, [X31 + 0x10]
	0x034DD58C ADRP X21, 0xF02000
	0x034DD590 ADRP X20, 0xC16000
	0x034DD594 LDRB W8, [X21 + 0x8FD]
	0x034DD598 LDR X20, [X20 + 0xC50]
	0x034DD59C MOV X19, X0
	0x034DD5A0 TBNZ X8, 0x0, 0x34DD5C4
	0x034DD5A4 ADRP X0, 0xC55000
	0x034DD5A8 LDR X0, [X0 + 0x328]
	0x034DD5AC BL 0x1C16CF4
	0x034DD5B0 ADRP X0, 0xC16000
	0x034DD5B4 LDR X0, [X0 + 0xC50]
	0x034DD5B8 BL 0x1C16CF4
	0x034DD5BC MOVZ W8, 0x1
	0x034DD5C0 STRB W8, [X21 + 0x8FD]
	0x034DD5C4 LDR X0, [X20]
	0x034DD5C8 LDR W8, [X0 + 0xE0]
	0x034DD5CC CBNZ W8, 0x34DD5D4
	0x034DD5D0 BL 0x1C16DFC
	0x034DD5D4 ADRP X21, 0xEFB000
	0x034DD5D8 LDRB W8, [X21 + 0x78D]
	0x034DD5DC CBNZ W8, 0x34DD5F4
	0x034DD5E0 ADRP X0, 0xC16000
	0x034DD5E4 LDR X0, [X0 + 0xC50]
	0x034DD5E8 BL 0x1C16CF4
	0x034DD5EC MOVZ W8, 0x1
	0x034DD5F0 STRB W8, [X21 + 0x78D]
	0x034DD5F4 LDR X0, [X20]
	0x034DD5F8 LDR W8, [X0 + 0xE0]
	0x034DD5FC CBNZ W8, 0x34DD608
	0x034DD600 BL 0x1C16DFC
	0x034DD604 LDR X0, [X20]
	0x034DD608 LDR X8, [X0 + 0xB8]
	0x034DD60C LDRB W8, [X8]
	0x034DD610 CBZ W8, 0x34DD63C
	0x034DD614 ADRP X8, 0xC55000
	0x034DD618 LDR X8, [X8 + 0x328]
	0x034DD61C LDR X0, [X8]
	0x034DD620 LDR W8, [X0 + 0xE0]
	0x034DD624 CBNZ W8, 0x34DD62C
	0x034DD628 BL 0x1C16DFC
	0x034DD62C MOV X0, X19
	0x034DD630 LDP X20, X19, [X31 + 0x10]
	0x034DD634 LDP X30, X21, [X31], #0x20
	0x034DD638 B 0x34B630C
	0x034DD63C LDP X20, X19, [X31 + 0x10]
	0x034DD640 MOV W0, W31
	0x034DD644 LDP X30, X21, [X31], #0x20
	0x034DD648 RET
	0x034DD64C STP X30, X21, [X31 - 0x20]!
	0x034DD650 STP X20, X19, [X31 + 0x10]
	0x034DD654 ADRP X21, 0xF02000
	0x034DD658 ADRP X20, 0xC16000
	0x034DD65C LDRB W8, [X21 + 0x8FE]
	0x034DD660 LDR X20, [X20 + 0xC50]
	0x034DD664 MOV X19, X0
	0x034DD668 TBNZ X8, 0x0, 0x34DD68C
	0x034DD66C ADRP X0, 0xC55000
	0x034DD670 LDR X0, [X0 + 0x328]
	0x034DD674 BL 0x1C16CF4
	0x034DD678 ADRP X0, 0xC16000
	0x034DD67C LDR X0, [X0 + 0xC50]
	0x034DD680 BL 0x1C16CF4
	0x034DD684 MOVZ W8, 0x1
	0x034DD688 STRB W8, [X21 + 0x8FE]
	0x034DD68C LDR X0, [X20]
	0x034DD690 LDR W8, [X0 + 0xE0]
	0x034DD694 CBNZ W8, 0x34DD69C
	0x034DD698 BL 0x1C16DFC
	0x034DD69C ADRP X21, 0xEFB000
	0x034DD6A0 LDRB W8, [X21 + 0x78D]
	0x034DD6A4 CBNZ W8, 0x34DD6BC
	0x034DD6A8 ADRP X0, 0xC16000
	0x034DD6AC LDR X0, [X0 + 0xC50]
	0x034DD6B0 BL 0x1C16CF4
	0x034DD6B4 MOVZ W8, 0x1
	0x034DD6B8 STRB W8, [X21 + 0x78D]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xF03000
	009 Move X23, 0xC17000
	010 Move W8, [X24+2286]
	011 Move X23, [X23+3152]
	012 Move W19, W3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xC56000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0xC17000
	024 Move X0, [X0+3152]
	025 Call 0x1C17CF4
	026 Move X0, 0xC17000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0xC56000
	030 Move X0, [X0+3840]
	031 Call 0x1C17CF4
	032 Move X0, 0xC56000
	033 Move X0, [X0+3848]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+2286], W8
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X24, 0xEFC000
	043 Move W8, [X24+1933]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0xC17000
	047 Move X0, [X0+3152]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X24+1933], W8
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X23]
	057 Move X8, [X0+184]
	058 Move W9, [X8]
	059 Compare W9, 0
	060 JumpIfEqual {85}
	061 Move X8, 0xC56000
	062 Move X8, [X8+808]
	063 Move X24, 0xC56000
	064 Move X23, 0xC56000
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Move X24, [X24+3848]
	068 Move X23, [X23+3840]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X22
	073 Move W1, W21
	074 Move W2, W20
	075 Move W3, W19
	076 Call CAPI.ovr_Challenges_GetEntries, X0, X1, X2, X3
	077 Move X8, [X24]
	078 Move X20, X0
	079 Move X0, X8
	080 Call 0x1C17F10
	081 Move X2, [X23]
	082 Move X1, X20
	083 Move X19, X0
	084 Call Request`1<Object>..ctor, X0, X1
	085 Move W9, [X0+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {91}
	088 Call 0x1C17DFC
	089 Move X8, [X23]
	090 Move X8, [X8+184]
	091 Move X9, 0xC17000
	092 Move X9, [X9+2600]
	093 Move X19, [X8+8]
	094 Move X0, [X9]
	095 Move W9, [X0+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X19
	100 Move X1, X31
	101 Call Debug.LogError, X0
	102 Move X19, X31
	103 Move X0, X19
	104 Move X20, [X31+48]
	105 Move X19, [X31+56]
	106 Move X22, [X31+32]
	107 Move X21, [X31+40]
	108 Move X24, [X31+16]
	109 Move X23, [X31+24]
	110 Move X30, [X31+64]
	111 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.ChallengeEntryList> GetEntriesAfterRank(System.UInt64 challengeID, System.Int32 limit, System.UInt64 afterRank)

Disassembly:
	0x034DD6BC LDR X0, [X20]
	0x034DD6C0 LDR W8, [X0 + 0xE0]
	0x034DD6C4 CBNZ W8, 0x34DD6D0
	0x034DD6C8 BL 0x1C16DFC
	0x034DD6CC LDR X0, [X20]
	0x034DD6D0 LDR X8, [X0 + 0xB8]
	0x034DD6D4 LDRB W8, [X8]
	0x034DD6D8 CBZ W8, 0x34DD704
	0x034DD6DC ADRP X8, 0xC55000
	0x034DD6E0 LDR X8, [X8 + 0x328]
	0x034DD6E4 LDR X0, [X8]
	0x034DD6E8 LDR W8, [X0 + 0xE0]
	0x034DD6EC CBNZ W8, 0x34DD6F4
	0x034DD6F0 BL 0x1C16DFC
	0x034DD6F4 MOV X0, X19
	0x034DD6F8 LDP X20, X19, [X31 + 0x10]
	0x034DD6FC LDP X30, X21, [X31], #0x20
	0x034DD700 B 0x34B66FC
	0x034DD704 LDP X20, X19, [X31 + 0x10]
	0x034DD708 MOV W0, W31
	0x034DD70C LDP X30, X21, [X31], #0x20
	0x034DD710 RET
	0x034DD714 STP X30, X21, [X31 - 0x20]!
	0x034DD718 STP X20, X19, [X31 + 0x10]
	0x034DD71C ADRP X21, 0xF02000
	0x034DD720 ADRP X20, 0xC16000
	0x034DD724 LDRB W8, [X21 + 0x8FF]
	0x034DD728 LDR X20, [X20 + 0xC50]
	0x034DD72C MOV X19, X0
	0x034DD730 TBNZ X8, 0x0, 0x34DD754
	0x034DD734 ADRP X0, 0xC55000
	0x034DD738 LDR X0, [X0 + 0x328]
	0x034DD73C BL 0x1C16CF4
	0x034DD740 ADRP X0, 0xC16000
	0x034DD744 LDR X0, [X0 + 0xC50]
	0x034DD748 BL 0x1C16CF4
	0x034DD74C MOVZ W8, 0x1
	0x034DD750 STRB W8, [X21 + 0x8FF]
	0x034DD754 LDR X0, [X20]
	0x034DD758 LDR W8, [X0 + 0xE0]
	0x034DD75C CBNZ W8, 0x34DD764
	0x034DD760 BL 0x1C16DFC
	0x034DD764 ADRP X21, 0xEFB000
	0x034DD768 LDRB W8, [X21 + 0x78D]
	0x034DD76C CBNZ W8, 0x34DD784
	0x034DD770 ADRP X0, 0xC16000
	0x034DD774 LDR X0, [X0 + 0xC50]
	0x034DD778 BL 0x1C16CF4
	0x034DD77C MOVZ W8, 0x1
	0x034DD780 STRB W8, [X21 + 0x78D]
	0x034DD784 LDR X0, [X20]
	0x034DD788 LDR W8, [X0 + 0xE0]
	0x034DD78C CBNZ W8, 0x34DD798
	0x034DD790 BL 0x1C16DFC
	0x034DD794 LDR X0, [X20]
	0x034DD798 LDR X8, [X0 + 0xB8]
	0x034DD79C LDRB W8, [X8]
	0x034DD7A0 CBZ W8, 0x34DD7D4
	0x034DD7A4 ADRP X8, 0xC55000
	0x034DD7A8 LDR X8, [X8 + 0x328]
	0x034DD7AC CBZ X19, 0x34DD7B4
	0x034DD7B0 LDR X19, [X19 + 0x10]
	0x034DD7B4 LDR X0, [X8]
	0x034DD7B8 LDR W8, [X0 + 0xE0]
	0x034DD7BC CBNZ W8, 0x34DD7C4
	0x034DD7C0 BL 0x1C16DFC
	0x034DD7C4 MOV X0, X19
	0x034DD7C8 LDP X20, X19, [X31 + 0x10]
	0x034DD7CC LDP X30, X21, [X31], #0x20
	0x034DD7D0 B 0x34B69C4
	0x034DD7D4 LDP X20, X19, [X31 + 0x10]
	0x034DD7D8 LDP X30, X21, [X31], #0x20
	0x034DD7DC RET
	0x034DD7E0 CBZ X0, 0x34DD7E8
	0x034DD7E4 LDR X0, [X0 + 0x10]
	0x034DD7E8 RET
	0x034DD7EC STR X30, [X31 - 0x20]!
	0x034DD7F0 STP X20, X19, [X31 + 0x10]
	0x034DD7F4 ADRP X20, 0xF02000
	0x034DD7F8 ADRP X19, 0xC16000
	0x034DD7FC LDRB W8, [X20 + 0x900]
	0x034DD800 LDR X19, [X19 + 0xC50]
	0x034DD804 TBNZ X8, 0x0, 0x34DD84C
	0x034DD808 ADRP X0, 0xC55000
	0x034DD80C LDR X0, [X0 + 0x328]
	0x034DD810 BL 0x1C16CF4
	0x034DD814 ADRP X0, 0xC16000
	0x034DD818 LDR X0, [X0 + 0xC50]
	0x034DD81C BL 0x1C16CF4
	0x034DD820 ADRP X0, 0xC16000
	0x034DD824 LDR X0, [X0 + 0xA28]
	0x034DD828 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF03000
	008 Move X22, 0xC17000
	009 Move W8, [X23+2287]
	010 Move X22, [X22+3152]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xC56000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0xC17000
	022 Move X0, [X0+3152]
	023 Call 0x1C17CF4
	024 Move X0, 0xC17000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0xC56000
	028 Move X0, [X0+3840]
	029 Call 0x1C17CF4
	030 Move X0, 0xC56000
	031 Move X0, [X0+3848]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2287], W8
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X23, 0xEFC000
	041 Move W8, [X23+1933]
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0xC17000
	045 Move X0, [X0+3152]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X23+1933], W8
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X22]
	055 Move X8, [X0+184]
	056 Move W9, [X8]
	057 Compare W9, 0
	058 JumpIfEqual {82}
	059 Move X8, 0xC56000
	060 Move X8, [X8+808]
	061 Move X23, 0xC56000
	062 Move X22, 0xC56000
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Move X23, [X23+3848]
	066 Move X22, [X22+3840]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move W1, W20
	072 Move X2, X19
	073 Call CAPI.ovr_Challenges_GetEntriesAfterRank, X0, X1, X2
	074 Move X8, [X23]
	075 Move X20, X0
	076 Move X0, X8
	077 Call 0x1C17F10
	078 Move X2, [X22]
	079 Move X1, X20
	080 Move X19, X0
	081 Call Request`1<Object>..ctor, X0, X1
	082 Move W9, [X0+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Call 0x1C17DFC
	086 Move X8, [X22]
	087 Move X8, [X8+184]
	088 Move X9, 0xC17000
	089 Move X9, [X9+2600]
	090 Move X19, [X8+8]
	091 Move X0, [X9]
	092 Move W9, [X0+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X19
	097 Move X1, X31
	098 Call Debug.LogError, X0
	099 Move X19, X31
	100 Move X0, X19
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.ChallengeEntryList> GetEntriesByIds(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs)

Disassembly:
	0x034DD82C ADRP X0, 0xC55000
	0x034DD830 LDR X0, [X0 + 0xF50]
	0x034DD834 BL 0x1C16CF4
	0x034DD838 ADRP X0, 0xC55000
	0x034DD83C LDR X0, [X0 + 0xF58]
	0x034DD840 BL 0x1C16CF4
	0x034DD844 MOVZ W8, 0x1
	0x034DD848 STRB W8, [X20 + 0x900]
	0x034DD84C LDR X0, [X19]
	0x034DD850 LDR W8, [X0 + 0xE0]
	0x034DD854 CBNZ W8, 0x34DD85C
	0x034DD858 BL 0x1C16DFC
	0x034DD85C ADRP X20, 0xEFB000
	0x034DD860 LDRB W8, [X20 + 0x78D]
	0x034DD864 CBNZ W8, 0x34DD87C
	0x034DD868 ADRP X0, 0xC16000
	0x034DD86C LDR X0, [X0 + 0xC50]
	0x034DD870 BL 0x1C16CF4
	0x034DD874 MOVZ W8, 0x1
	0x034DD878 STRB W8, [X20 + 0x78D]
	0x034DD87C LDR X0, [X19]
	0x034DD880 LDR W8, [X0 + 0xE0]
	0x034DD884 CBNZ W8, 0x34DD890
	0x034DD888 BL 0x1C16DFC
	0x034DD88C LDR X0, [X19]
	0x034DD890 LDR X8, [X0 + 0xB8]
	0x034DD894 LDRB W9, [X8]
	0x034DD898 CBZ W9, 0x34DD8EC
	0x034DD89C ADRP X8, 0xC55000
	0x034DD8A0 LDR X8, [X8 + 0x328]
	0x034DD8A4 ADRP X20, 0xC55000
	0x034DD8A8 ADRP X19, 0xC55000
	0x034DD8AC LDR X0, [X8]
	0x034DD8B0 LDR W8, [X0 + 0xE0]
	0x034DD8B4 LDR X20, [X20 + 0xF58]
	0x034DD8B8 LDR X19, [X19 + 0xF50]
	0x034DD8BC CBNZ W8, 0x34DD8C4
	0x034DD8C0 BL 0x1C16DFC
	0x034DD8C4 BL 0x34BDF9C
	0x034DD8C8 LDR X8, [X20]
	0x034DD8CC MOV X20, X0
	0x034DD8D0 MOV X0, X8
	0x034DD8D4 BL 0x1C16F10
	0x034DD8D8 LDR X2, [X19]
	0x034DD8DC MOV X1, X20
	0x034DD8E0 MOV X19, X0
	0x034DD8E4 BL 0x25C95C8
	0x034DD8E8 B 0x34DD92C
	0x034DD8EC LDR W9, [X0 + 0xE0]
	0x034DD8F0 CBNZ W9, 0x34DD900
	0x034DD8F4 BL 0x1C16DFC
	0x034DD8F8 LDR X8, [X19]
	0x034DD8FC LDR X8, [X8 + 0xB8]
	0x034DD900 ADRP X9, 0xC16000
	0x034DD904 LDR X9, [X9 + 0xA28]
	0x034DD908 LDR X19, [X8 + 0x8]
	0x034DD90C LDR X0, [X9]
	0x034DD910 LDR W9, [X0 + 0xE0]
	0x034DD914 CBNZ W9, 0x34DD91C
	0x034DD918 BL 0x1C16DFC
	0x034DD91C MOV X0, X19
	0x034DD920 MOV X1, X31
	0x034DD924 BL 0x3C0649C
	0x034DD928 MOV X19, X31
	0x034DD92C MOV X0, X19
	0x034DD930 LDP X20, X19, [X31 + 0x10]
	0x034DD934 LDR X30, [X31], #0x20
	0x034DD938 RET
	0x034DD93C STP X30, X21, [X31 - 0x20]!
	0x034DD940 STP X20, X19, [X31 + 0x10]
	0x034DD944 ADRP X21, 0xF02000
	0x034DD948 ADRP X20, 0xC16000
	0x034DD94C LDRB W8, [X21 + 0x901]
	0x034DD950 LDR X20, [X20 + 0xC50]
	0x034DD954 MOV W19, W0
	0x034DD958 TBNZ X8, 0x0, 0x34DD9A0
	0x034DD95C ADRP X0, 0xC55000
	0x034DD960 LDR X0, [X0 + 0x328]
	0x034DD964 BL 0x1C16CF4
	0x034DD968 ADRP X0, 0xC16000
	0x034DD96C LDR X0, [X0 + 0xC50]
	0x034DD970 BL 0x1C16CF4
	0x034DD974 ADRP X0, 0xC16000
	0x034DD978 LDR X0, [X0 + 0xA28]
	0x034DD97C BL 0x1C16CF4
	0x034DD980 ADRP X0, 0xC55000
	0x034DD984 LDR X0, [X0 + 0xF60]
	0x034DD988 BL 0x1C16CF4
	0x034DD98C ADRP X0, 0xC55000
	0x034DD990 LDR X0, [X0 + 0xF68]
	0x034DD994 BL 0x1C16CF4
	0x034DD998 MOVZ W8, 0x1
	0x034DD99C STRB W8, [X21 + 0x901]
	0x034DD9A0 LDR X0, [X20]
	0x034DD9A4 LDR W8, [X0 + 0xE0]
	0x034DD9A8 CBNZ W8, 0x34DD9B0
	0x034DD9AC BL 0x1C16DFC
	0x034DD9B0 ADRP X21, 0xEFB000
	0x034DD9B4 LDRB W8, [X21 + 0x78D]
	0x034DD9B8 CBNZ W8, 0x34DD9D0
	0x034DD9BC ADRP X0, 0xC16000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xF03000
	010 Move X23, 0xC17000
	011 Move W8, [X24+2288]
	012 Move X23, [X23+3152]
	013 Move X19, X3
	014 Move W20, W2
	015 Move W21, W1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xC56000
	022 Move X0, [X0+808]
	023 Call 0x1C17CF4
	024 Move X0, 0xC17000
	025 Move X0, [X0+3152]
	026 Call 0x1C17CF4
	027 Move X0, 0xC17000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0xC56000
	031 Move X0, [X0+3840]
	032 Call 0x1C17CF4
	033 Move X0, 0xC56000
	034 Move X0, [X0+3848]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2288], W8
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X24, 0xEFC000
	044 Move W8, [X24+1933]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0xC17000
	048 Move X0, [X0+3152]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X24+1933], W8
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X23]
	058 Move X8, [X0+184]
	059 Move W9, [X8]
	060 Compare W9, 0
	061 JumpIfEqual {67}
	062 Move X8, 0xC56000
	063 Move X8, [X8+808]
	064 Compare X19, 0
	065 JumpIfEqual {85}
	066 Move W23, [X19+24]
	067 Move W9, [X0+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {73}
	070 Call 0x1C17DFC
	071 Move X8, [X23]
	072 Move X8, [X8+184]
	073 Move X9, 0xC17000
	074 Move X9, [X9+2600]
	075 Move X19, [X8+8]
	076 Move X0, [X9]
	077 Move W9, [X0+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Move X1, X31
	083 Call Debug.LogError, X0
	084 Move X19, X31
	085 Move W23, W31
	086 Move X0, [X8]
	087 Move X25, 0xC56000
	088 Move X24, 0xC56000
	089 Move W8, [X0+224]
	090 Move X25, [X25+3848]
	091 Move X24, [X24+3840]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X22
	096 Move W1, W21
	097 Move W2, W20
	098 Move X3, X19
	099 Move W4, W23
	100 Call CAPI.ovr_Challenges_GetEntriesByIds, X0, X1, X2, X3, X4
	101 Move X8, [X25]
	102 Move X20, X0
	103 Move X0, X8
	104 Call 0x1C17F10
	105 Move X2, [X24]
	106 Move X1, X20
	107 Move X19, X0
	108 Call Request`1<Object>..ctor, X0, X1
	109 Move X0, X19
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Move X25, [X31+72]
	118 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.ChallengeList> GetList(Oculus.Platform.ChallengeOptions challengeOptions, System.Int32 limit)

Disassembly:
	0x034DD9C0 LDR X0, [X0 + 0xC50]
	0x034DD9C4 BL 0x1C16CF4
	0x034DD9C8 MOVZ W8, 0x1
	0x034DD9CC STRB W8, [X21 + 0x78D]
	0x034DD9D0 LDR X0, [X20]
	0x034DD9D4 LDR W8, [X0 + 0xE0]
	0x034DD9D8 CBNZ W8, 0x34DD9E4
	0x034DD9DC BL 0x1C16DFC
	0x034DD9E0 LDR X0, [X20]
	0x034DD9E4 LDR X8, [X0 + 0xB8]
	0x034DD9E8 LDRB W9, [X8]
	0x034DD9EC CBZ W9, 0x34DDA44
	0x034DD9F0 ADRP X8, 0xC55000
	0x034DD9F4 LDR X8, [X8 + 0x328]
	0x034DD9F8 ADRP X20, 0xC55000
	0x034DD9FC ADRP X21, 0xC55000
	0x034DDA00 LDR X0, [X8]
	0x034DDA04 LDR W8, [X0 + 0xE0]
	0x034DDA08 LDR X20, [X20 + 0xF68]
	0x034DDA0C LDR X21, [X21 + 0xF60]
	0x034DDA10 CBNZ W8, 0x34DDA18
	0x034DDA14 BL 0x1C16DFC
	0x034DDA18 AND W0, W19, 0x1
	0x034DDA1C BL 0x34BE088
	0x034DDA20 LDR X8, [X20]
	0x034DDA24 MOV X20, X0
	0x034DDA28 MOV X0, X8
	0x034DDA2C BL 0x1C16F10
	0x034DDA30 LDR X2, [X21]
	0x034DDA34 MOV X1, X20
	0x034DDA38 MOV X19, X0
	0x034DDA3C BL 0x25C95C8
	0x034DDA40 B 0x34DDA84
	0x034DDA44 LDR W9, [X0 + 0xE0]
	0x034DDA48 CBNZ W9, 0x34DDA58
	0x034DDA4C BL 0x1C16DFC
	0x034DDA50 LDR X8, [X20]
	0x034DDA54 LDR X8, [X8 + 0xB8]
	0x034DDA58 ADRP X9, 0xC16000
	0x034DDA5C LDR X9, [X9 + 0xA28]
	0x034DDA60 LDR X19, [X8 + 0x8]
	0x034DDA64 LDR X0, [X9]
	0x034DDA68 LDR W9, [X0 + 0xE0]
	0x034DDA6C CBNZ W9, 0x34DDA74
	0x034DDA70 BL 0x1C16DFC
	0x034DDA74 MOV X0, X19
	0x034DDA78 MOV X1, X31
	0x034DDA7C BL 0x3C0649C
	0x034DDA80 MOV X19, X31
	0x034DDA84 MOV X0, X19
	0x034DDA88 LDP X20, X19, [X31 + 0x10]
	0x034DDA8C LDP X30, X21, [X31], #0x20
	0x034DDA90 RET
	0x034DDA94 STP X30, X21, [X31 - 0x20]!
	0x034DDA98 STP X20, X19, [X31 + 0x10]
	0x034DDA9C ADRP X21, 0xF02000
	0x034DDAA0 ADRP X20, 0xC3E000
	0x034DDAA4 LDRB W8, [X21 + 0x902]
	0x034DDAA8 LDR X20, [X20 + 0x880]
	0x034DDAAC MOV X19, X0
	0x034DDAB0 TBNZ X8, 0x0, 0x34DDAD4
	0x034DDAB4 ADRP X0, 0xC55000
	0x034DDAB8 LDR X0, [X0 + 0xE98]
	0x034DDABC BL 0x1C16CF4
	0x034DDAC0 ADRP X0, 0xC3E000
	0x034DDAC4 LDR X0, [X0 + 0x880]
	0x034DDAC8 BL 0x1C16CF4
	0x034DDACC MOVZ W8, 0x1
	0x034DDAD0 STRB W8, [X21 + 0x902]
	0x034DDAD4 LDR X0, [X20]
	0x034DDAD8 ADRP X20, 0xC55000
	0x034DDADC LDR W8, [X0 + 0xE0]
	0x034DDAE0 LDR X20, [X20 + 0xE98]
	0x034DDAE4 CBNZ W8, 0x34DDAEC
	0x034DDAE8 BL 0x1C16DFC
	0x034DDAEC LDR X2, [X20]
	0x034DDAF0 MOV X1, X19
	0x034DDAF4 LDP X20, X19, [X31 + 0x10]
	0x034DDAF8 MOVZ W0, 0xCB57
	0x034DDAFC MOVK W0, 0x3E200000
	0x034DDB00 LDP X30, X21, [X31], #0x20
	0x034DDB04 B 0x21A11B8
	0x034DDB08 STP X30, X21, [X31 - 0x20]!
	0x034DDB0C STP X20, X19, [X31 + 0x10]
	0x034DDB10 ADRP X21, 0xF02000
	0x034DDB14 ADRP X20, 0xC3E000
	0x034DDB18 LDRB W8, [X21 + 0x903]
	0x034DDB1C LDR X20, [X20 + 0x880]
	0x034DDB20 MOV X19, X0
	0x034DDB24 TBNZ X8, 0x0, 0x34DDB48
	0x034DDB28 ADRP X0, 0xC55000
	0x034DDB2C LDR X0, [X0 + 0xF70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF03000
	007 Move X21, 0xC17000
	008 Move W8, [X22+2289]
	009 Move X21, [X21+3152]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xC56000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC17000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move X0, 0xC17000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0xC56000
	026 Move X0, [X0+3872]
	027 Call 0x1C17CF4
	028 Move X0, 0xC56000
	029 Move X0, [X0+3880]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2289], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X22, 0xEFC000
	039 Move W8, [X22+1933]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0xC17000
	043 Move X0, [X0+3152]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+1933], W8
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move W9, [X8]
	055 Compare W9, 0
	056 JumpIfEqual {82}
	057 Move X8, 0xC56000
	058 Move X8, [X8+808]
	059 Compare X20, 0
	060 JumpIfEqual {62}
	061 Move X20, [X20+16]
	062 Move X0, [X8]
	063 Move X22, 0xC56000
	064 Move X21, 0xC56000
	065 Move W8, [X0+224]
	066 Move X22, [X22+3880]
	067 Move X21, [X21+3872]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X20
	072 Move W1, W19
	073 Call CAPI.ovr_Challenges_GetList, X0, X1
	074 Move X8, [X22]
	075 Move X20, X0
	076 Move X0, X8
	077 Call 0x1C17F10
	078 Move X2, [X21]
	079 Move X1, X20
	080 Move X19, X0
	081 Call Request`1<Object>..ctor, X0, X1
	082 Move W9, [X0+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Call 0x1C17DFC
	086 Move X8, [X21]
	087 Move X8, [X8+184]
	088 Move X9, 0xC17000
	089 Move X9, [X9+2600]
	090 Move X19, [X8+8]
	091 Move X0, [X9]
	092 Move W9, [X0+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X19
	097 Move X1, X31
	098 Call Debug.LogError, X0
	099 Move X19, X31
	100 Move X0, X19
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.Challenge> Join(System.UInt64 challengeID)

Disassembly:
	0x034DDB30 BL 0x1C16CF4
	0x034DDB34 ADRP X0, 0xC3E000
	0x034DDB38 LDR X0, [X0 + 0x880]
	0x034DDB3C BL 0x1C16CF4
	0x034DDB40 MOVZ W8, 0x1
	0x034DDB44 STRB W8, [X21 + 0x903]
	0x034DDB48 LDR X0, [X20]
	0x034DDB4C ADRP X20, 0xC55000
	0x034DDB50 LDR W8, [X0 + 0xE0]
	0x034DDB54 LDR X20, [X20 + 0xF70]
	0x034DDB58 CBNZ W8, 0x34DDB60
	0x034DDB5C BL 0x1C16DFC
	0x034DDB60 LDR X2, [X20]
	0x034DDB64 MOV X1, X19
	0x034DDB68 LDP X20, X19, [X31 + 0x10]
	0x034DDB6C MOVZ W0, 0x54A5
	0x034DDB70 MOVK W0, 0x58D20000
	0x034DDB74 LDP X30, X21, [X31], #0x20
	0x034DDB78 B 0x21A11B8
	0x034DDB7C STR X30, [X31 - 0x20]!
	0x034DDB80 STP X20, X19, [X31 + 0x10]
	0x034DDB84 ADRP X20, 0xF02000
	0x034DDB88 ADRP X19, 0xC16000
	0x034DDB8C LDRB W8, [X20 + 0x904]
	0x034DDB90 LDR X19, [X19 + 0xC50]
	0x034DDB94 TBNZ X8, 0x0, 0x34DDBC4
	0x034DDB98 ADRP X0, 0xC55000
	0x034DDB9C LDR X0, [X0 + 0x328]
	0x034DDBA0 BL 0x1C16CF4
	0x034DDBA4 ADRP X0, 0xC16000
	0x034DDBA8 LDR X0, [X0 + 0xC50]
	0x034DDBAC BL 0x1C16CF4
	0x034DDBB0 ADRP X0, 0xC16000
	0x034DDBB4 LDR X0, [X0 + 0x988]
	0x034DDBB8 BL 0x1C16CF4
	0x034DDBBC MOVZ W8, 0x1
	0x034DDBC0 STRB W8, [X20 + 0x904]
	0x034DDBC4 LDR X0, [X19]
	0x034DDBC8 LDR W8, [X0 + 0xE0]
	0x034DDBCC CBNZ W8, 0x34DDBD4
	0x034DDBD0 BL 0x1C16DFC
	0x034DDBD4 ADRP X20, 0xEFB000
	0x034DDBD8 LDRB W8, [X20 + 0x78D]
	0x034DDBDC CBNZ W8, 0x34DDBF4
	0x034DDBE0 ADRP X0, 0xC16000
	0x034DDBE4 LDR X0, [X0 + 0xC50]
	0x034DDBE8 BL 0x1C16CF4
	0x034DDBEC MOVZ W8, 0x1
	0x034DDBF0 STRB W8, [X20 + 0x78D]
	0x034DDBF4 LDR X0, [X19]
	0x034DDBF8 LDR W8, [X0 + 0xE0]
	0x034DDBFC CBNZ W8, 0x34DDC08
	0x034DDC00 BL 0x1C16DFC
	0x034DDC04 LDR X0, [X19]
	0x034DDC08 LDR X8, [X0 + 0xB8]
	0x034DDC0C LDRB W8, [X8]
	0x034DDC10 CBZ W8, 0x34DDC38
	0x034DDC14 ADRP X8, 0xC55000
	0x034DDC18 LDR X8, [X8 + 0x328]
	0x034DDC1C LDR X0, [X8]
	0x034DDC20 LDR W8, [X0 + 0xE0]
	0x034DDC24 CBNZ W8, 0x34DDC2C
	0x034DDC28 BL 0x1C16DFC
	0x034DDC2C LDP X20, X19, [X31 + 0x10]
	0x034DDC30 LDR X30, [X31], #0x20
	0x034DDC34 B 0x34B47E0
	0x034DDC38 ADRP X8, 0xC16000
	0x034DDC3C LDR X8, [X8 + 0x988]
	0x034DDC40 LDP X20, X19, [X31 + 0x10]
	0x034DDC44 LDR X0, [X8]
	0x034DDC48 LDR X30, [X31], #0x20
	0x034DDC4C RET
	0x034DDC50 STP X30, X21, [X31 - 0x20]!
	0x034DDC54 STP X20, X19, [X31 + 0x10]
	0x034DDC58 ADRP X21, 0xF02000
	0x034DDC5C ADRP X20, 0xC16000
	0x034DDC60 LDRB W8, [X21 + 0x905]
	0x034DDC64 LDR X20, [X20 + 0xC50]
	0x034DDC68 MOV X19, X0
	0x034DDC6C TBNZ X8, 0x0, 0x34DDCB4
	0x034DDC70 ADRP X0, 0xC55000
	0x034DDC74 LDR X0, [X0 + 0x328]
	0x034DDC78 BL 0x1C16CF4
	0x034DDC7C ADRP X0, 0xC16000
	0x034DDC80 LDR X0, [X0 + 0xC50]
	0x034DDC84 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF03000
	006 Move X20, 0xC17000
	007 Move W8, [X21+2290]
	008 Move X20, [X20+3152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xC56000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC17000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC17000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xC56000
	024 Move X0, [X0+3896]
	025 Call 0x1C17CF4
	026 Move X0, 0xC56000
	027 Move X0, [X0+3904]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2290], W8
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X21, 0xEFC000
	037 Move W8, [X21+1933]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0xC17000
	041 Move X0, [X0+3152]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1933], W8
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X20]
	051 Move X8, [X0+184]
	052 Move W9, [X8]
	053 Compare W9, 0
	054 JumpIfEqual {76}
	055 Move X8, 0xC56000
	056 Move X8, [X8+808]
	057 Move X20, 0xC56000
	058 Move X21, 0xC56000
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Move X20, [X20+3904]
	062 Move X21, [X21+3896]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Call CAPI.ovr_Challenges_Join, X0
	068 Move X8, [X20]
	069 Move X20, X0
	070 Move X0, X8
	071 Call 0x1C17F10
	072 Move X2, [X21]
	073 Move X1, X20
	074 Move X19, X0
	075 Call Request`1<Object>..ctor, X0, X1
	076 Move W9, [X0+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {82}
	079 Call 0x1C17DFC
	080 Move X8, [X20]
	081 Move X8, [X8+184]
	082 Move X9, 0xC17000
	083 Move X9, [X9+2600]
	084 Move X19, [X8+8]
	085 Move X0, [X9]
	086 Move W9, [X0+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move X1, X31
	092 Call Debug.LogError, X0
	093 Move X19, X31
	094 Move X0, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.Challenge> Leave(System.UInt64 challengeID)

Disassembly:
	0x034DDC88 ADRP X0, 0xC16000
	0x034DDC8C LDR X0, [X0 + 0xA28]
	0x034DDC90 BL 0x1C16CF4
	0x034DDC94 ADRP X0, 0xC55000
	0x034DDC98 LDR X0, [X0 + 0xF78]
	0x034DDC9C BL 0x1C16CF4
	0x034DDCA0 ADRP X0, 0xC55000
	0x034DDCA4 LDR X0, [X0 + 0xF80]
	0x034DDCA8 BL 0x1C16CF4
	0x034DDCAC MOVZ W8, 0x1
	0x034DDCB0 STRB W8, [X21 + 0x905]
	0x034DDCB4 LDR X0, [X20]
	0x034DDCB8 LDR W8, [X0 + 0xE0]
	0x034DDCBC CBNZ W8, 0x34DDCC4
	0x034DDCC0 BL 0x1C16DFC
	0x034DDCC4 ADRP X21, 0xEFB000
	0x034DDCC8 LDRB W8, [X21 + 0x78D]
	0x034DDCCC CBNZ W8, 0x34DDCE4
	0x034DDCD0 ADRP X0, 0xC16000
	0x034DDCD4 LDR X0, [X0 + 0xC50]
	0x034DDCD8 BL 0x1C16CF4
	0x034DDCDC MOVZ W8, 0x1
	0x034DDCE0 STRB W8, [X21 + 0x78D]
	0x034DDCE4 LDR X0, [X20]
	0x034DDCE8 LDR W8, [X0 + 0xE0]
	0x034DDCEC CBNZ W8, 0x34DDCF8
	0x034DDCF0 BL 0x1C16DFC
	0x034DDCF4 LDR X0, [X20]
	0x034DDCF8 LDR X8, [X0 + 0xB8]
	0x034DDCFC LDRB W9, [X8]
	0x034DDD00 CBZ W9, 0x34DDD58
	0x034DDD04 ADRP X8, 0xC55000
	0x034DDD08 LDR X8, [X8 + 0x328]
	0x034DDD0C ADRP X20, 0xC55000
	0x034DDD10 ADRP X21, 0xC55000
	0x034DDD14 LDR X0, [X8]
	0x034DDD18 LDR W8, [X0 + 0xE0]
	0x034DDD1C LDR X20, [X20 + 0xF80]
	0x034DDD20 LDR X21, [X21 + 0xF78]
	0x034DDD24 CBNZ W8, 0x34DDD2C
	0x034DDD28 BL 0x1C16DFC
	0x034DDD2C MOV X0, X19
	0x034DDD30 BL 0x34BD288
	0x034DDD34 LDR X8, [X20]
	0x034DDD38 MOV X20, X0
	0x034DDD3C MOV X0, X8
	0x034DDD40 BL 0x1C16F10
	0x034DDD44 LDR X2, [X21]
	0x034DDD48 MOV X1, X20
	0x034DDD4C MOV X19, X0
	0x034DDD50 BL 0x25C95C8
	0x034DDD54 B 0x34DDD98
	0x034DDD58 LDR W9, [X0 + 0xE0]
	0x034DDD5C CBNZ W9, 0x34DDD6C
	0x034DDD60 BL 0x1C16DFC
	0x034DDD64 LDR X8, [X20]
	0x034DDD68 LDR X8, [X8 + 0xB8]
	0x034DDD6C ADRP X9, 0xC16000
	0x034DDD70 LDR X9, [X9 + 0xA28]
	0x034DDD74 LDR X19, [X8 + 0x8]
	0x034DDD78 LDR X0, [X9]
	0x034DDD7C LDR W9, [X0 + 0xE0]
	0x034DDD80 CBNZ W9, 0x34DDD88
	0x034DDD84 BL 0x1C16DFC
	0x034DDD88 MOV X0, X19
	0x034DDD8C MOV X1, X31
	0x034DDD90 BL 0x3C0649C
	0x034DDD94 MOV X19, X31
	0x034DDD98 MOV X0, X19
	0x034DDD9C LDP X20, X19, [X31 + 0x10]
	0x034DDDA0 LDP X30, X21, [X31], #0x20
	0x034DDDA4 RET
	0x034DDDA8 STR X30, [X31 - 0x20]!
	0x034DDDAC STP X20, X19, [X31 + 0x10]
	0x034DDDB0 ADRP X20, 0xF02000
	0x034DDDB4 ADRP X19, 0xC16000
	0x034DDDB8 LDRB W8, [X20 + 0x906]
	0x034DDDBC LDR X19, [X19 + 0xC50]
	0x034DDDC0 TBNZ X8, 0x0, 0x34DDE08
	0x034DDDC4 ADRP X0, 0xC55000
	0x034DDDC8 LDR X0, [X0 + 0x328]
	0x034DDDCC BL 0x1C16CF4
	0x034DDDD0 ADRP X0, 0xC16000
	0x034DDDD4 LDR X0, [X0 + 0xC50]
	0x034DDDD8 BL 0x1C16CF4
	0x034DDDDC ADRP X0, 0xC16000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF03000
	006 Move X20, 0xC17000
	007 Move W8, [X21+2291]
	008 Move X20, [X20+3152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xC56000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC17000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC17000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xC56000
	024 Move X0, [X0+3896]
	025 Call 0x1C17CF4
	026 Move X0, 0xC56000
	027 Move X0, [X0+3904]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2291], W8
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X21, 0xEFC000
	037 Move W8, [X21+1933]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0xC17000
	041 Move X0, [X0+3152]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1933], W8
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X20]
	051 Move X8, [X0+184]
	052 Move W9, [X8]
	053 Compare W9, 0
	054 JumpIfEqual {76}
	055 Move X8, 0xC56000
	056 Move X8, [X8+808]
	057 Move X20, 0xC56000
	058 Move X21, 0xC56000
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Move X20, [X20+3904]
	062 Move X21, [X21+3896]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Call CAPI.ovr_Challenges_Leave, X0
	068 Move X8, [X20]
	069 Move X20, X0
	070 Move X0, X8
	071 Call 0x1C17F10
	072 Move X2, [X21]
	073 Move X1, X20
	074 Move X19, X0
	075 Call Request`1<Object>..ctor, X0, X1
	076 Move W9, [X0+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {82}
	079 Call 0x1C17DFC
	080 Move X8, [X20]
	081 Move X8, [X8+184]
	082 Move X9, 0xC17000
	083 Move X9, [X9+2600]
	084 Move X19, [X8+8]
	085 Move X0, [X9]
	086 Move W9, [X0+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move X1, X31
	092 Call Debug.LogError, X0
	093 Move X19, X31
	094 Move X0, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 Return X0

Method: Oculus.Platform.Request`1<Oculus.Platform.Models.Challenge> UpdateInfo(System.UInt64 challengeID, Oculus.Platform.ChallengeOptions challengeOptions)

Disassembly:
	0x034DDDE0 LDR X0, [X0 + 0xA28]
	0x034DDDE4 BL 0x1C16CF4
	0x034DDDE8 ADRP X0, 0xC55000
	0x034DDDEC LDR X0, [X0 + 0xF88]
	0x034DDDF0 BL 0x1C16CF4
	0x034DDDF4 ADRP X0, 0xC55000
	0x034DDDF8 LDR X0, [X0 + 0xF90]
	0x034DDDFC BL 0x1C16CF4
	0x034DDE00 MOVZ W8, 0x1
	0x034DDE04 STRB W8, [X20 + 0x906]
	0x034DDE08 LDR X0, [X19]
	0x034DDE0C LDR W8, [X0 + 0xE0]
	0x034DDE10 CBNZ W8, 0x34DDE18
	0x034DDE14 BL 0x1C16DFC
	0x034DDE18 ADRP X20, 0xEFB000
	0x034DDE1C LDRB W8, [X20 + 0x78D]
	0x034DDE20 CBNZ W8, 0x34DDE38
	0x034DDE24 ADRP X0, 0xC16000
	0x034DDE28 LDR X0, [X0 + 0xC50]
	0x034DDE2C BL 0x1C16CF4
	0x034DDE30 MOVZ W8, 0x1
	0x034DDE34 STRB W8, [X20 + 0x78D]
	0x034DDE38 LDR X0, [X19]
	0x034DDE3C LDR W8, [X0 + 0xE0]
	0x034DDE40 CBNZ W8, 0x34DDE4C
	0x034DDE44 BL 0x1C16DFC
	0x034DDE48 LDR X0, [X19]
	0x034DDE4C LDR X8, [X0 + 0xB8]
	0x034DDE50 LDRB W9, [X8]
	0x034DDE54 CBZ W9, 0x34DDEA8
	0x034DDE58 ADRP X8, 0xC55000
	0x034DDE5C LDR X8, [X8 + 0x328]
	0x034DDE60 ADRP X20, 0xC55000
	0x034DDE64 ADRP X19, 0xC55000
	0x034DDE68 LDR X0, [X8]
	0x034DDE6C LDR W8, [X0 + 0xE0]
	0x034DDE70 LDR X20, [X20 + 0xF90]
	0x034DDE74 LDR X19, [X19 + 0xF88]
	0x034DDE78 CBNZ W8, 0x34DDE80
	0x034DDE7C BL 0x1C16DFC
	0x034DDE80 BL 0x34BD304
	0x034DDE84 LDR X8, [X20]
	0x034DDE88 MOV X20, X0
	0x034DDE8C MOV X0, X8
	0x034DDE90 BL 0x1C16F10
	0x034DDE94 LDR X2, [X19]
	0x034DDE98 MOV X1, X20
	0x034DDE9C MOV X19, X0
	0x034DDEA0 BL 0x25C95C8
	0x034DDEA4 B 0x34DDEE8
	0x034DDEA8 LDR W9, [X0 + 0xE0]
	0x034DDEAC CBNZ W9, 0x34DDEBC
	0x034DDEB0 BL 0x1C16DFC
	0x034DDEB4 LDR X8, [X19]
	0x034DDEB8 LDR X8, [X8 + 0xB8]
	0x034DDEBC ADRP X9, 0xC16000
	0x034DDEC0 LDR X9, [X9 + 0xA28]
	0x034DDEC4 LDR X19, [X8 + 0x8]
	0x034DDEC8 LDR X0, [X9]
	0x034DDECC LDR W9, [X0 + 0xE0]
	0x034DDED0 CBNZ W9, 0x34DDED8
	0x034DDED4 BL 0x1C16DFC
	0x034DDED8 MOV X0, X19
	0x034DDEDC MOV X1, X31
	0x034DDEE0 BL 0x3C0649C
	0x034DDEE4 MOV X19, X31
	0x034DDEE8 MOV X0, X19
	0x034DDEEC LDP X20, X19, [X31 + 0x10]
	0x034DDEF0 LDR X30, [X31], #0x20
	0x034DDEF4 RET
	0x034DDEF8 STR X30, [X31 - 0x20]!
	0x034DDEFC STP X20, X19, [X31 + 0x10]
	0x034DDF00 ADRP X20, 0xF02000
	0x034DDF04 ADRP X19, 0xC16000
	0x034DDF08 LDRB W8, [X20 + 0x907]
	0x034DDF0C LDR X19, [X19 + 0xC50]
	0x034DDF10 TBNZ X8, 0x0, 0x34DDF58
	0x034DDF14 ADRP X0, 0xC55000
	0x034DDF18 LDR X0, [X0 + 0x328]
	0x034DDF1C BL 0x1C16CF4
	0x034DDF20 ADRP X0, 0xC16000
	0x034DDF24 LDR X0, [X0 + 0xC50]
	0x034DDF28 BL 0x1C16CF4
	0x034DDF2C ADRP X0, 0xC16000
	0x034DDF30 LDR X0, [X0 + 0xA28]
	0x034DDF34 BL 0x1C16CF4
	0x034DDF38 ADRP X0, 0xC55000
	0x034DDF3C LDR X0, [X0 + 0xF98]
	0x034DDF40 BL 0x1C16CF4
	0x034DDF44 ADRP X0, 0xC55000
	0x034DDF48 LDR X0, [X0 + 0xFA0]
	0x034DDF4C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF03000
	007 Move X21, 0xC17000
	008 Move W8, [X22+2292]
	009 Move X21, [X21+3152]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xC56000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0xC17000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move X0, 0xC17000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0xC56000
	026 Move X0, [X0+3896]
	027 Call 0x1C17CF4
	028 Move X0, 0xC56000
	029 Move X0, [X0+3904]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2292], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X22, 0xEFC000
	039 Move W8, [X22+1933]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0xC17000
	043 Move X0, [X0+3152]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+1933], W8
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move W9, [X8]
	055 Compare W9, 0
	056 JumpIfEqual {82}
	057 Move X8, 0xC56000
	058 Move X8, [X8+808]
	059 Compare X20, 0
	060 JumpIfEqual {62}
	061 Move X20, [X20+16]
	062 Move X0, [X8]
	063 Move X22, 0xC56000
	064 Move X21, 0xC56000
	065 Move W8, [X0+224]
	066 Move X22, [X22+3904]
	067 Move X21, [X21+3896]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X19
	072 Move X1, X20
	073 Call CAPI.ovr_Challenges_UpdateInfo, X0, X1
	074 Move X8, [X22]
	075 Move X20, X0
	076 Move X0, X8
	077 Call 0x1C17F10
	078 Move X2, [X21]
	079 Move X1, X20
	080 Move X19, X0
	081 Call Request`1<Object>..ctor, X0, X1
	082 Move W9, [X0+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Call 0x1C17DFC
	086 Move X8, [X21]
	087 Move X8, [X8+184]
	088 Move X9, 0xC17000
	089 Move X9, [X9+2600]
	090 Move X19, [X8+8]
	091 Move X0, [X9]
	092 Move W9, [X0+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X19
	097 Move X1, X31
	098 Call Debug.LogError, X0
	099 Move X19, X31
	100 Move X0, X19
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Return X0

