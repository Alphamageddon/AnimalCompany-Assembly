Type: Oculus.Platform.PlatformSettings

Method: System.String get_AppID()

Disassembly:
	0x034DBA0C LDR X0, [X0 + 0xA28]
	0x034DBA10 BL 0x1C16CF4
	0x034DBA14 ADRP X0, 0xC57000
	0x034DBA18 LDR X0, [X0 + 0xEF8]
	0x034DBA1C BL 0x1C16CF4
	0x034DBA20 ADRP X0, 0xC57000
	0x034DBA24 LDR X0, [X0 + 0xF00]

ISIL:
	001 Move [X31-16], X30
	002 Call PlatformSettings.get_Instance
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X0, [X0+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_AppID(System.String value)

Disassembly:
	0x034E7838 ADRP X8, 0xC0C000
	0x034E783C LDR X8, [X8 + 0x758]
	0x034E7840 STR W0, [X31 + 0xC]
	0x034E7844 ADD X1, X31, 0xC
	0x034E7848 LDR X8, [X8]
	0x034E784C MOV X0, X8
	0x034E7850 BL 0x1C16E04
	0x034E7854 CBZ X20, 0x34E78D4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call PlatformSettings.get_Instance
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move [X0+24], X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Call 0x1C17F20

Method: System.String get_MobileAppID()

Disassembly:
	0x034DB9F0 ADRP X0, 0xC57000
	0x034DB9F4 LDR X0, [X0 + 0x328]
	0x034DB9F8 BL 0x1C16CF4
	0x034DB9FC ADRP X0, 0xC18000
	0x034DBA00 LDR X0, [X0 + 0xC50]
	0x034DBA04 BL 0x1C16CF4
	0x034DBA08 ADRP X0, 0xC18000

ISIL:
	001 Move [X31-16], X30
	002 Call PlatformSettings.get_Instance
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X0, [X0+32]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_MobileAppID(System.String value)

Disassembly:
	0x034E7858 MOV X21, X0
	0x034E785C CBZ X0, 0x34E7874
	0x034E7860 LDR X8, [X20]
	0x034E7864 MOV X0, X21
	0x034E7868 LDR X1, [X8 + 0x40]
	0x034E786C BL 0x1C16E00
	0x034E7870 CBZ X0, 0x34E78DC
	0x034E7874 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call PlatformSettings.get_Instance
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move [X0+32], X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Call 0x1C17F20

Method: System.Boolean get_UseStandalonePlatform()

Disassembly:
	0x034DAE90 LDR W9, [X0 + 0xE0]
	0x034DAE94 CBNZ W9, 0x34DAEA4
	0x034DAE98 BL 0x1C16DFC
	0x034DAE9C LDR X8, [X20]
	0x034DAEA0 LDR X8, [X8 + 0xB8]
	0x034DAEA4 ADRP X9, 0xC19000
	0x034DAEA8 LDR X9, [X9 + 0xA28]

ISIL:
	001 Move [X31-16], X30
	002 Call PlatformSettings.get_Instance
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move W0, [X0+40]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_UseStandalonePlatform(System.Boolean value)

Disassembly:
	0x034E7878 CBZ W8, 0x34E78D8
	0x034E787C STR X21, [X20 + 0x20]
	0x034E7880 ADRP X8, 0xC0C000
	0x034E7884 LDR X8, [X8 + 0xA28]
	0x034E7888 LDR X0, [X8]
	0x034E788C LDR W8, [X0 + 0xE0]
	0x034E7890 CBNZ W8, 0x34E7898
	0x034E7894 BL 0x1C16DFC
	0x034E7898 ADRP X8, 0xC4C000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, W0
	004 Call PlatformSettings.get_Instance
	005 Compare X0, 0
	006 JumpIfEqual {12}
	007 And W8, W19, 1
	008 Move [X0+40], W8
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 
	012 Call 0x1C17F20

Method: Oculus.Platform.PlatformSettings get_Instance()

Disassembly:
	0x034E7714 CMP X11, X1
	0x034E7718 B.EQ 0x34E7738
	0x034E771C SUBS X9, X9, 0x1
	0x034E7720 ADD X10, X10, 0x10
	0x034E7724 B.NE 0x34E7710
	0x034E7728 MOVZ W2, 0x3
	0x034E772C MOV X0, X20
	0x034E7730 BL 0x1C5C788
	0x034E7734 B 0x34E7748
	0x034E7738 LDR W9, [X10]
	0x034E773C ADD W9, W9, 0x3
	0x034E7740 ADD X8, X8, W9, 0x4, SXTW
	0x034E7744 ADD X0, X8, 0x138
	0x034E7748 LDP X8, X1, [X0]
	0x034E774C MOV X0, X20
	0x034E7750 BLR X8
	0x034E7754 ADRP X23, 0xEF8000
	0x034E7758 LDRB W8, [X23 + 0x991]
	0x034E775C LDR W21, [X19 + 0x20]
	0x034E7760 MOV W20, W0
	0x034E7764 TBNZ X8, 0x0, 0x34E777C
	0x034E7768 ADRP X0, 0xC4C000
	0x034E776C LDR X0, [X0 + 0x370]
	0x034E7770 BL 0x1C16CF4
	0x034E7774 MOVZ W8, 0x1
	0x034E7778 STRB W8, [X23 + 0x991]
	0x034E777C ADRP X8, 0xC4C000
	0x034E7780 LDR X8, [X8 + 0x370]
	0x034E7784 MOVZ W10, 0x4DD3
	0x034E7788 MOVK W10, 0x10620000
	0x034E778C LDR X8, [X8]
	0x034E7790 LDR X8, [X8 + 0xB8]
	0x034E7794 LDR W9, [X8]
	0x034E7798 MUL W9, W9, W21
	0x034E779C SMADDL X9, X9, X10, X31
	0x034E77A0 UBFM X10, X9, 0x3F, 0x3F
	0x034E77A4 SBFM X9, X9, 0x26, 0x3F
	0x034E77A8 ADD W9, W9, W10
	0x034E77AC CMP W20, W9
	0x034E77B0 B.LT 0x34E78C0
	0x034E77B4 LDRB W8, [X8 + 0x4]
	0x034E77B8 CBZ W8, 0x34E78B0
	0x034E77BC ADRP X8, 0xC0C000
	0x034E77C0 LDR X8, [X8 + 0x9D0]
	0x034E77C4 MOVZ W1, 0x1
	0x034E77C8 LDR X0, [X8]
	0x034E77CC BL 0x1C16D6C
	0x034E77D0 LDR X21, [X19 + 0x38]
	0x034E77D4 CBZ X21, 0x34E78D4
	0x034E77D8 LDR X8, [X21]
	0x034E77DC LDR X1, [X22]
	0x034E77E0 MOV X20, X0
	0x034E77E4 LDRH W9, [X8 + 0x12E]
	0x034E77E8 CBZ X9, 0x34E780C
	0x034E77EC LDR X10, [X8 + 0xB0]
	0x034E77F0 ADD X10, X10, 0x8
	0x034E77F4 LDUR X11, [X10 - 0x8]
	0x034E77F8 CMP X11, X1
	0x034E77FC B.EQ 0x34E781C
	0x034E7800 SUBS X9, X9, 0x1
	0x034E7804 ADD X10, X10, 0x10
	0x034E7808 B.NE 0x34E77F4
	0x034E780C MOVZ W2, 0x3
	0x034E7810 MOV X0, X21
	0x034E7814 BL 0x1C5C788
	0x034E7818 B 0x34E782C
	0x034E781C LDR W9, [X10]
	0x034E7820 ADD W9, W9, 0x3
	0x034E7824 ADD X8, X8, W9, 0x4, SXTW
	0x034E7828 ADD X0, X8, 0x138
	0x034E782C LDP X8, X1, [X0]
	0x034E7830 MOV X0, X21
	0x034E7834 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xEF9000
	006 Move X20, 0xC4D000
	007 Move X21, 0xC0D000
	008 Move W8, [X19+2423]
	009 Move X20, [X20+816]
	010 Move X21, [X21+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xC0D000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0xC4D000
	019 Move X0, [X0+816]
	020 Call 0x1C17CF4
	021 Move X0, 0xC4D000
	022 Move X0, [X0+824]
	023 Call 0x1C17CF4
	024 Move X0, 0xC4D000
	025 Move X0, [X0+832]
	026 Call 0x1C17CF4
	027 Move X0, 0xC4D000
	028 Move X0, [X0+840]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+2423], W8
	032 Move X8, [X20]
	033 Move X0, [X21]
	034 Move X8, [X8+184]
	035 Move W9, [X0+224]
	036 Move X19, [X8]
	037 Compare W9, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {81}
	048 Move X8, 0xC4D000
	049 Move X9, 0xC4D000
	050 Move X8, [X8+840]
	051 Move X9, [X9+824]
	052 Move X0, [X8]
	053 Move X1, [X9]
	054 Call 0x2242FB8, X0
	055 Move X8, [X20]
	056 Move X8, [X8+184]
	057 Move [X8], X0
	058 Move X8, [X20]
	059 Move X0, [X21]
	060 Move X8, [X8+184]
	061 Move W9, [X0+224]
	062 Move X19, [X8]
	063 Compare W9, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Equality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {81}
	074 Move X8, 0xC4D000
	075 Move X8, [X8+832]
	076 Move X0, [X8]
	077 Call 0x22547A0
	078 Move X8, [X20]
	079 Move X8, [X8+184]
	080 Move [X8], X0
	081 Move X8, [X20]
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X8, [X8+184]
	085 Move X0, [X8]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return X0

Method: System.Void set_Instance(Oculus.Platform.PlatformSettings value)

Disassembly:
	0x034E789C LDR X8, [X8 + 0x388]
	0x034E78A0 MOV X1, X20
	0x034E78A4 MOV X2, X31
	0x034E78A8 LDR X0, [X8]
	0x034E78AC BL 0x3C06268
	0x034E78B0 LDR X0, [X19 + 0x28]
	0x034E78B4 CBZ X0, 0x34E78D4
	0x034E78B8 MOV X1, X31
	0x034E78BC BL 0x3BFCAC0
	0x034E78C0 LDP X20, X19, [X31 + 0x30]
	0x034E78C4 LDP X22, X21, [X31 + 0x20]
	0x034E78C8 LDP X30, X23, [X31 + 0x10]
	0x034E78CC ADD X31, X31, 0x40
	0x034E78D0 RET
	0x034E78D4 BL 0x1C16F20
	0x034E78D8 BL 0x1C16F28
	0x034E78DC BL 0x1C16F44
	0x034E78E0 MOV X1, X31
	0x034E78E4 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEF9000
	006 Move X21, 0xC4D000
	007 Move W8, [X20+2424]
	008 Move X21, [X21+816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC4D000
	015 Move X0, [X0+816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2424], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void .ctor()

Disassembly:
	0x034E78E8 MOV X1, X31
	0x034E78EC B 0x3C36C30
	0x034E78F0 STP X30, X21, [X31 - 0x20]!
	0x034E78F4 STP X20, X19, [X31 + 0x10]
	0x034E78F8 ADRP X21, 0xEF8000
	0x034E78FC ADRP X20, 0xC4B000
	0x034E7900 LDRB W8, [X21 + 0x993]
	0x034E7904 LDR X20, [X20 + 0x328]
	0x034E7908 MOV X19, X0
	0x034E790C TBNZ X8, 0x0, 0x34E7930
	0x034E7910 ADRP X0, 0xC4B000
	0x034E7914 LDR X0, [X0 + 0x328]
	0x034E7918 BL 0x1C16CF4
	0x034E791C ADRP X0, 0xC0C000
	0x034E7920 LDR X0, [X0 + 0x638]
	0x034E7924 BL 0x1C16CF4
	0x034E7928 MOVZ W8, 0x1
	0x034E792C STRB W8, [X21 + 0x993]
	0x034E7930 LDR X0, [X20]
	0x034E7934 ADRP X20, 0xC0C000
	0x034E7938 LDR W8, [X0 + 0xE0]
	0x034E793C LDR X20, [X20 + 0x638]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEF9000
	006 Move X21, 0xC0D000
	007 Move W8, [X20+2425]
	008 Move X21, [X21+2440]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC0D000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2425], W8
	019 Move X8, [X21]
	020 Move W9, 1
	021 Move [X19+40], W9
	022 Move X0, X19
	023 Move [X19+24], X8
	024 Move [X19+32], X8
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call ScriptableObject..ctor, X0
	031 Return 

