Type: Oculus.Platform.AdvancedAbuseReportOptions

Method: System.Void .ctor()

Disassembly:
	0x034B1E44 ADRP X22, 0xF2E000
	0x034B1E48 ADRP X21, 0xC81000
	0x034B1E4C LDRB W8, [X22 + 0x5A8]
	0x034B1E50 LDR X21, [X21 + 0x328]
	0x034B1E54 MOV X20, X1
	0x034B1E58 MOV X19, X0
	0x034B1E5C TBNZ X8, 0x0, 0x34B1E80
	0x034B1E60 ADRP X0, 0xC81000
	0x034B1E64 LDR X0, [X0 + 0x328]
	0x034B1E68 BL 0x1C16CF4
	0x034B1E6C ADRP X0, 0xC6A000
	0x034B1E70 LDR X0, [X0 + 0x850]
	0x034B1E74 BL 0x1C16CF4
	0x034B1E78 MOVZ W8, 0x1
	0x034B1E7C STRB W8, [X22 + 0x5A8]
	0x034B1E80 LDR X0, [X21]
	0x034B1E84 ADRP X21, 0xC6A000
	0x034B1E88 LDR W8, [X0 + 0xE0]
	0x034B1E8C LDR X21, [X21 + 0x850]
	0x034B1E90 CBNZ W8, 0x34B1E98
	0x034B1E94 BL 0x1C16DFC
	0x034B1E98 MOV X0, X20
	0x034B1E9C BL 0x34B404C
	0x034B1EA0 MOV X20, X0
	0x034B1EA4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2D000
	006 Move X20, 0xC82000
	007 Move W8, [X21+2880]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC82000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2880], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call CAPI.ovr_AdvancedAbuseReportOptions_Create
	028 Move [X19+16], X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Void SetDeveloperDefinedContext(System.String key, System.String value)

Disassembly:
	0x034B1F10 STRB W8, [X22 + 0xB50]
	0x034B1F14 LDR X0, [X21]
	0x034B1F18 LDR X20, [X20 + 0x10]
	0x034B1F1C LDR W8, [X0 + 0xE0]
	0x034B1F20 CBNZ W8, 0x34B1F28
	0x034B1F24 BL 0x1C16DFC
	0x034B1F28 MOV X0, X20
	0x034B1F2C MOV X1, X19
	0x034B1F30 LDP X20, X19, [X31 + 0x20]
	0x034B1F34 LDP X22, X21, [X31 + 0x10]
	0x034B1F38 LDR X30, [X31], #0x30
	0x034B1F3C B 0x34B1F40
	0x034B1F40 SUB X31, X31, 0x50
	0x034B1F44 STP X30, X21, [X31 + 0x30]
	0x034B1F48 STP X20, X19, [X31 + 0x40]
	0x034B1F4C ADRP X21, 0xF2E000
	0x034B1F50 LDR X8, [X21 + 0x5B8]
	0x034B1F54 MOV X19, X1
	0x034B1F58 MOV X20, X0
	0x034B1F5C CBNZ X8, 0x34B1FA8
	0x034B1F60 ADRP X12, 0xFFFFFFFFFD63C000
	0x034B1F64 LDR V0, [X12 + 0x5B8]
	0x034B1F68 ADRP X8, 0xFFFFFFFFFD662000
	0x034B1F6C ADRP X10, 0xFFFFFFFFFD664000
	0x034B1F70 ADD X8, X8, 0xDD2
	0x034B1F74 MOVZ W9, 0x11
	0x034B1F78 ADD X10, X10, 0xE89
	0x034B1F7C MOVZ W11, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF2D000
	008 Move X22, 0xC82000
	009 Move W8, [X23+2881]
	010 Move X22, [X22+808]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xC82000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2881], W8
	023 Move X0, [X22]
	024 Move X21, [X21+16]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X21
	030 Move X1, X20
	031 Move X2, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]

Method: System.Void ClearDeveloperDefinedContext()

Disassembly:
	0x034B2040 MOV X0, X21
	0x034B2044 BL 0x3EB1AD0
	0x034B2048 LDR X20, [X0]
	0x034B204C BL 0x3EB1AE0
	0x034B2050 MOV X0, X19
	0x034B2054 MOV X1, X31
	0x034B2058 BL 0x33CB4DC
	0x034B205C CBNZ X20, 0x34B2074
	0x034B2060 LDP X20, X19, [X31 + 0x10]
	0x034B2064 LDP X30, X21, [X31], #0x20
	0x034B2068 RET
	0x034B206C MOV X20, X31
	0x034B2070 B 0x34B2080
	0x034B2074 MOV X0, X20
	0x034B2078 BL 0x1C16F18
	0x034B207C MOV X21, X0
	0x034B2080 MOV X0, X19
	0x034B2084 MOV X1, X31
	0x034B2088 BL 0x33CB4DC
	0x034B208C CBNZ X20, 0x34B2098
	0x034B2090 MOV X0, X21
	0x034B2094 BL 0x1D2C690

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2C000
	006 Move X20, 0xC81000
	007 Move W8, [X21+2882]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC81000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2882], W8
	019 Move X0, [X20]
	020 Move X19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Void SetObjectType(System.String value)

Disassembly:
	0x034B2114 LDR X30, [X31 + 0x30]
	0x034B2118 ADD X31, X31, 0x50
	0x034B211C RET
	0x034B2120 STP X30, X21, [X31 - 0x20]!
	0x034B2124 STP X20, X19, [X31 + 0x10]
	0x034B2128 ADRP X21, 0xF2B000
	0x034B212C ADRP X20, 0xC80000
	0x034B2130 LDRB W8, [X21 + 0xB52]
	0x034B2134 LDR X20, [X20 + 0x328]
	0x034B2138 MOV X19, X0
	0x034B213C TBNZ X8, 0x0, 0x34B2154
	0x034B2140 ADRP X0, 0xC80000
	0x034B2144 LDR X0, [X0 + 0x328]
	0x034B2148 BL 0x1C16CF4
	0x034B214C MOVZ W8, 0x1
	0x034B2150 STRB W8, [X21 + 0xB52]
	0x034B2154 MOV X0, X19
	0x034B2158 MOV X1, X31
	0x034B215C BL 0x33BDD8C
	0x034B2160 LDR X0, [X20]
	0x034B2164 LDR W8, [X0 + 0xE0]
	0x034B2168 CBNZ W8, 0x34B2170
	0x034B216C BL 0x1C16DFC
	0x034B2170 BL 0x34B2184
	0x034B2174 STR X0, [X19 + 0x10]
	0x034B2178 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2C000
	007 Move X21, 0xC81000
	008 Move W8, [X22+2883]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2883], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.Void SetReportType(Oculus.Platform.AbuseReportType value)

Disassembly:
	0x034B221C BL 0x1C16CF4
	0x034B2220 MOVZ W8, 0x1
	0x034B2224 STRB W8, [X22 + 0xB53]
	0x034B2228 LDR X0, [X21]
	0x034B222C LDR X20, [X20 + 0x10]
	0x034B2230 LDR W8, [X0 + 0xE0]
	0x034B2234 CBNZ W8, 0x34B223C
	0x034B2238 BL 0x1C16DFC
	0x034B223C MOV X0, X20
	0x034B2240 MOV X1, X19
	0x034B2244 LDP X20, X19, [X31 + 0x20]
	0x034B2248 LDP X22, X21, [X31 + 0x10]
	0x034B224C LDR X30, [X31], #0x30
	0x034B2250 B 0x34B2254
	0x034B2254 STR X30, [X31 - 0x30]!
	0x034B2258 STP X22, X21, [X31 + 0x10]
	0x034B225C STP X20, X19, [X31 + 0x20]
	0x034B2260 ADRP X22, 0xF2D000
	0x034B2264 ADRP X21, 0xC80000
	0x034B2268 LDRB W8, [X22 + 0x5D0]
	0x034B226C LDR X21, [X21 + 0x328]
	0x034B2270 MOV X20, X1
	0x034B2274 MOV X19, X0
	0x034B2278 TBNZ X8, 0x0, 0x34B229C
	0x034B227C ADRP X0, 0xC80000
	0x034B2280 LDR X0, [X0 + 0x328]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2C000
	007 Move X21, 0xC81000
	008 Move W8, [X22+2884]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2884], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move W1, W19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.Void AddSuggestedUser(System.UInt64 userID)

Disassembly:
	0x034B2308 ADRP X21, 0xF2B000
	0x034B230C ADRP X20, 0xC80000
	0x034B2310 LDRB W8, [X21 + 0xB54]
	0x034B2314 LDR X20, [X20 + 0x328]
	0x034B2318 MOV X19, X0
	0x034B231C TBNZ X8, 0x0, 0x34B2334
	0x034B2320 ADRP X0, 0xC80000
	0x034B2324 LDR X0, [X0 + 0x328]
	0x034B2328 BL 0x1C16CF4
	0x034B232C MOVZ W8, 0x1
	0x034B2330 STRB W8, [X21 + 0xB54]
	0x034B2334 LDR X0, [X20]
	0x034B2338 LDR X20, [X19 + 0x10]
	0x034B233C LDR W8, [X0 + 0xE0]
	0x034B2340 CBNZ W8, 0x34B2348
	0x034B2344 BL 0x1C16DFC
	0x034B2348 MOV X0, X20
	0x034B234C BL 0x34B23D4
	0x034B2350 MOV X0, X19
	0x034B2354 LDP X20, X19, [X31 + 0x10]
	0x034B2358 MOV X1, X31
	0x034B235C LDP X30, X21, [X31], #0x20
	0x034B2360 B 0x33CB4DC
	0x034B2364 CMP W1, 0x1
	0x034B2368 MOV X21, X0
	0x034B236C B.NE 0x34B239C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2C000
	007 Move X21, 0xC81000
	008 Move W8, [X22+2885]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2885], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.Void ClearSuggestedUsers()

Disassembly:
	0x034B23F4 LDR V0, [X12 + 0x5B8]
	0x034B23F8 ADRP X8, 0xFFFFFFFFFD661000
	0x034B23FC ADRP X10, 0xFFFFFFFFFD644000
	0x034B2400 ADD X8, X8, 0xDD2
	0x034B2404 MOVZ W9, 0x11
	0x034B2408 ADD X10, X10, 0x87A
	0x034B240C MOVZ W11, 0x1F
	0x034B2410 MOVZ W13, 0x8
	0x034B2414 ADD X0, X31, 0x0
	0x034B2418 STP X8, X9, [X31]
	0x034B241C STP X10, X11, [X31 + 0x10]
	0x034B2420 STR W13, [X31 + 0x28]
	0x034B2424 STR D0, [X31 + 0x20]
	0x034B2428 STRB W31, [X31 + 0x2C]
	0x034B242C BL 0x1C1729C
	0x034B2430 MOV X8, X0
	0x034B2434 STR X0, [X20 + 0x5C8]
	0x034B2438 MOV X0, X19
	0x034B243C BLR X8
	0x034B2440 LDP X20, X19, [X31 + 0x40]
	0x034B2444 LDR X30, [X31 + 0x30]
	0x034B2448 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2C000
	006 Move X20, 0xC81000
	007 Move W8, [X21+2886]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC81000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2886], W8
	019 Move X0, [X20]
	020 Move X19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Void SetVideoMode(Oculus.Platform.AbuseReportVideoMode value)

Disassembly:
	0x034B24C8 LDR X0, [X22]
	0x034B24CC LDR X21, [X8 + 0x8]
	0x034B24D0 BL 0x1C16F10
	0x034B24D4 MOV X1, X31
	0x034B24D8 MOV X22, X0
	0x034B24DC BL 0x33BDD8C
	0x034B24E0 STR X20, [X22 + 0x10]
	0x034B24E4 CBZ X21, 0x34B2558
	0x034B24E8 ADRP X8, 0xC69000
	0x034B24EC LDR X8, [X8 + 0x888]
	0x034B24F0 MOV X0, X21
	0x034B24F4 MOV W1, W19
	0x034B24F8 MOV X2, X22
	0x034B24FC LDR X3, [X8]
	0x034B2500 LDP X20, X19, [X31 + 0x20]
	0x034B2504 LDP X22, X21, [X31 + 0x10]
	0x034B2508 LDR X30, [X31], #0x30
	0x034B250C B 0x2B1AE98
	0x034B2510 ADRP X0, 0xC41000
	0x034B2514 LDR X0, [X0 + 0x7D0]
	0x034B2518 BL 0x1C16D08
	0x034B251C BL 0x1C16F10
	0x034B2520 MOV X19, X0
	0x034B2524 ADRP X0, 0xC69000
	0x034B2528 LDR X0, [X0 + 0x890]
	0x034B252C BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2C000
	007 Move X21, 0xC81000
	008 Move W8, [X22+2887]
	009 Move X21, [X21+808]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC81000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2887], W8
	021 Move X0, [X21]
	022 Move X20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move W1, W19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]

Method: System.IntPtr op_Explicit(Oculus.Platform.AdvancedAbuseReportOptions options)

Disassembly:
	0x034B25B4 ADRP X0, 0xC80000
	0x034B25B8 LDR X0, [X0 + 0x368]
	0x034B25BC BL 0x1C16CF4

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Move X0, [X0+16]
	004 Return X0

Method: System.Void Finalize()

Disassembly:
	0x034B25C0 ADRP X0, 0xC80000
	0x034B25C4 LDR X0, [X0 + 0x370]
	0x034B25C8 BL 0x1C16CF4
	0x034B25CC MOVZ W8, 0x1
	0x034B25D0 STRB W8, [X20 + 0xB56]
	0x034B25D4 CBZ X19, 0x34B265C
	0x034B25D8 LDR X8, [X19 + 0x18]
	0x034B25DC CBZ X8, 0x34B2628
	0x034B25E0 ADRP X20, 0xC69000
	0x034B25E4 LDR X20, [X20 + 0x880]
	0x034B25E8 LDR X0, [X20]
	0x034B25EC LDR W8, [X0 + 0xE0]
	0x034B25F0 CBNZ W8, 0x34B25FC
	0x034B25F4 BL 0x1C16DFC
	0x034B25F8 LDR X0, [X20]
	0x034B25FC LDR X8, [X0 + 0xB8]
	0x034B2600 LDR X0, [X8]
	0x034B2604 CBZ X0, 0x34B265C
	0x034B2608 ADRP X8, 0xC80000
	0x034B260C LDR X8, [X8 + 0x368]
	0x034B2610 LDR X1, [X19 + 0x18]
	0x034B2614 MOV X2, X19
	0x034B2618 LDP X20, X19, [X31 + 0x10]
	0x034B261C LDR X3, [X8]
	0x034B2620 LDR X30, [X31], #0x20
	0x034B2624 B 0x2B1DEB4
	0x034B2628 ADRP X8, 0xC41000
	0x034B262C LDR X8, [X8 + 0xA28]
	0x034B2630 LDR X0, [X8]
	0x034B2634 LDR W8, [X0 + 0xE0]
	0x034B2638 CBNZ W8, 0x34B2640
	0x034B263C BL 0x1C16DFC
	0x034B2640 ADRP X8, 0xC80000
	0x034B2644 LDR X8, [X8 + 0x370]
	0x034B2648 LDP X20, X19, [X31 + 0x10]
	0x034B264C MOV X1, X31
	0x034B2650 LDR X0, [X8]
	0x034B2654 LDR X30, [X31], #0x20
	0x034B2658 B 0x3C0649C
	0x034B265C BL 0x1C16F20
	0x034B2660 STR X30, [X31 - 0x20]!
	0x034B2664 STP X20, X19, [X31 + 0x10]
	0x034B2668 ADRP X19, 0xF2B000
	0x034B266C LDRB W8, [X19 + 0xB57]
	0x034B2670 TBNZ X8, 0x0, 0x34B2688
	0x034B2674 ADRP X0, 0xC69000
	0x034B2678 LDR X0, [X0 + 0x880]
	0x034B267C BL 0x1C16CF4
	0x034B2680 MOVZ W8, 0x1
	0x034B2684 STRB W8, [X19 + 0xB57]
	0x034B2688 BL 0x34B26CC
	0x034B268C CBZ X0, 0x34B26C0
	0x034B2690 ADRP X20, 0xC69000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF2C000
	006 Move X20, 0xC81000
	007 Move W8, [X21+2888]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC81000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2888], W8
	019 Move X0, [X20]
	020 Move X20, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Call CAPI.ovr_AdvancedAbuseReportOptions_Destroy, X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Object.Finalize, X0
	034 Return 
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X21, X0
	037 Move X0, X21
	038 Call 0x3EB2AD0
	039 Move X20, [X0]
	040 Call 0x3EB2AE0
	041 Move X0, X19
	042 Move X1, X31
	043 Call Object.Finalize, X0
	044 Compare X20, 0
	045 JumpIfNotEqual {52}
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Move X20, X31
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Move X21, X0
	055 Move X0, X19
	056 Move X1, X31
	057 Call Object.Finalize, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X21
	061 Call 0x1D2D690
	062 Move X0, X20
	063 Call 0x1C17F18
	064 Call 0x1991590

