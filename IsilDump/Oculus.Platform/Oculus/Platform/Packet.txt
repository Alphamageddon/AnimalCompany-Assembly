Type: Oculus.Platform.Packet

Method: System.Void .ctor(System.IntPtr packetHandle)

Disassembly:
	0x034DA568 BL 0x1C16CF4
	0x034DA56C ADRP X0, 0xC19000
	0x034DA570 LDR X0, [X0 + 0xA28]
	0x034DA574 BL 0x1C16CF4
	0x034DA578 ADRP X0, 0xC58000
	0x034DA57C LDR X0, [X0 + 0xDF0]
	0x034DA580 BL 0x1C16CF4
	0x034DA584 ADRP X0, 0xC19000
	0x034DA588 LDR X0, [X0 + 0xA58]
	0x034DA58C BL 0x1C16CF4
	0x034DA590 ADRP X0, 0xC58000
	0x034DA594 LDR X0, [X0 + 0xDF8]
	0x034DA598 BL 0x1C16CF4
	0x034DA59C ADRP X0, 0xC58000
	0x034DA5A0 LDR X0, [X0 + 0xE00]
	0x034DA5A4 BL 0x1C16CF4
	0x034DA5A8 ADRP X0, 0xC58000
	0x034DA5AC LDR X0, [X0 + 0xE08]
	0x034DA5B0 BL 0x1C16CF4
	0x034DA5B4 ADRP X0, 0xC58000
	0x034DA5B8 LDR X0, [X0 + 0xE10]
	0x034DA5BC BL 0x1C16CF4
	0x034DA5C0 MOVZ W8, 0x1
	0x034DA5C4 STRB W8, [X20 + 0x8D7]
	0x034DA5C8 LDR X0, [X21]
	0x034DA5CC ADRP X20, 0xC19000
	0x034DA5D0 LDR W8, [X0 + 0xE0]
	0x034DA5D4 LDR X20, [X20 + 0x970]
	0x034DA5D8 CBNZ W8, 0x34DA5E0
	0x034DA5DC BL 0x1C16DFC
	0x034DA5E0 MOV X0, X19
	0x034DA5E4 BL 0x34D9954

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF06000
	007 Move X21, 0xC59000
	008 Move W8, [X22+2254]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC59000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2254], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move [X19+24], X20
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Call CAPI.ovr_Packet_GetSize, X0
	032 Move X1, X31
	033 Call UIntPtr.op_Explicit, X0
	034 Move [X19+16], X0
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 

Method: System.UInt64 ReadBytes(System.Byte[] destination)

Disassembly:
	0x034DA5E8 LDR X8, [X20]
	0x034DA5EC MOV X19, X0
	0x034DA5F0 LDR W9, [X8 + 0xE0]
	0x034DA5F4 CBNZ W9, 0x34DA600
	0x034DA5F8 MOV X0, X8
	0x034DA5FC BL 0x1C16DFC
	0x034DA600 MOV X0, X31
	0x034DA604 BL 0x3C03278
	0x034DA608 TBZ X0, 0x0, 0x34DA668
	0x034DA60C BL 0x34D9E90
	0x034DA610 TBZ X0, 0x0, 0x34DA668
	0x034DA614 ADRP X8, 0xC58000
	0x034DA618 LDR X8, [X8 + 0xDF8]
	0x034DA61C LDR X0, [X8]
	0x034DA620 BL 0x1C16F10
	0x034DA624 MOV X1, X31
	0x034DA628 MOV X19, X0
	0x034DA62C BL 0x33BDD8C
	0x034DA630 CBZ X19, 0x34DA81C
	0x034DA634 MOV X0, X19
	0x034DA638 BL 0x34D9EB4
	0x034DA63C LDR X8, [X21]
	0x034DA640 MOV X19, X0
	0x034DA644 LDR W9, [X8 + 0xE0]
	0x034DA648 CBNZ W9, 0x34DA658
	0x034DA64C MOV X0, X8
	0x034DA650 BL 0x1C16DFC
	0x034DA654 LDR X8, [X21]
	0x034DA658 LDR X9, [X8 + 0xB8]
	0x034DA65C CMP X19, 0x0
	0x034DA660 CSET W10, NE
	0x034DA664 B 0x34DA6F4
	0x034DA668 LDR X0, [X20]
	0x034DA66C LDR W8, [X0 + 0xE0]
	0x034DA670 CBNZ W8, 0x34DA678
	0x034DA674 BL 0x1C16DFC
	0x034DA678 MOV X0, X31
	0x034DA67C BL 0x3C01AB0
	0x034DA680 CMP W0, 0x7
	0x034DA684 B.EQ 0x34DA6A8
	0x034DA688 LDR X0, [X20]
	0x034DA68C LDR W8, [X0 + 0xE0]
	0x034DA690 CBNZ W8, 0x34DA698
	0x034DA694 BL 0x1C16DFC
	0x034DA698 MOV X0, X31
	0x034DA69C BL 0x3C01AB0
	0x034DA6A0 CMP W0, 0x2
	0x034DA6A4 B.NE 0x34DA7AC
	0x034DA6A8 ADRP X8, 0xC58000
	0x034DA6AC LDR X8, [X8 + 0xE00]
	0x034DA6B0 LDR X0, [X8]
	0x034DA6B4 BL 0x1C16F10
	0x034DA6B8 MOV X1, X31
	0x034DA6BC MOV X20, X0
	0x034DA6C0 BL 0x33BDD8C
	0x034DA6C4 CBZ X20, 0x34DA81C
	0x034DA6C8 MOV X0, X20
	0x034DA6CC MOV X1, X19
	0x034DA6D0 BL 0x34DA89C
	0x034DA6D4 LDR X8, [X21]
	0x034DA6D8 LDR W9, [X8 + 0xE0]
	0x034DA6DC CBNZ W9, 0x34DA6EC
	0x034DA6E0 MOV X0, X8
	0x034DA6E4 BL 0x1C16DFC
	0x034DA6E8 LDR X8, [X21]
	0x034DA6EC LDR X9, [X8 + 0xB8]
	0x034DA6F0 MOVZ W10, 0x1
	0x034DA6F4 STRB W10, [X9]
	0x034DA6F8 LDR W9, [X8 + 0xE0]
	0x034DA6FC CBNZ W9, 0x34DA70C
	0x034DA700 MOV X0, X8
	0x034DA704 BL 0x1C16DFC
	0x034DA708 LDR X8, [X21]
	0x034DA70C LDR X9, [X8 + 0xB8]
	0x034DA710 LDRB W10, [X9]
	0x034DA714 CBZ W10, 0x34DA820
	0x034DA718 LDR W10, [X8 + 0xE0]
	0x034DA71C CBNZ W10, 0x34DA730
	0x034DA720 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF06000
	007 Move W8, [X21+2255]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC59000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC42000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2255], W8
	022 Compare X20, 0
	023 JumpIfEqual {60}
	024 Move X8, [X19+16]
	025 NotImplemented "Instruction LDRSW not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, 0xC59000
	028 Move X8, [X8+808]
	029 Move X22, 0xC42000
	030 Move X21, [X19+24]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Move X22, [X22+2128]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Call CAPI.ovr_Packet_GetBytes, X0
	039 Move X8, [X22]
	040 Move X21, [X19+16]
	041 Move X22, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X22
	048 Move X1, X20
	049 Move W2, W31
	050 Move W3, W21
	051 Move X4, X31
	052 Call Marshal.Copy, X0, X1, X2, X3
	053 Move X0, [X19+16]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Call 0x1C17F20
	061 Move [X31+8], X8
	062 Move X0, 0xC1B000
	063 Move X0, [X0+1880]
	064 Call 0x1C17D08
	065 Add X1, X31, 8
	066 Call 0x1C17E04
	067 Move X19, X0
	068 Move X0, 0xC59000
	069 Move X0, [X0+3520]
	070 Call 0x1C17D08
	071 Move X1, X19
	072 Move X2, X31
	073 Call String.Format, X0, X1
	074 Move X19, X0
	075 Move X0, 0xC22000
	076 Move X0, [X0+1400]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X19
	080 Move X2, X31
	081 Move X20, X0
	082 Call ArgumentException..ctor, X0, X1
	083 Move X0, 0xC59000
	084 Move X0, [X0+3528]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Call 0x1C17DEC

Method: System.UInt64 get_SenderID()

Disassembly:
	0x034DA724 BL 0x1C16DFC
	0x034DA728 LDR X8, [X21]
	0x034DA72C LDR X9, [X8 + 0xB8]
	0x034DA730 ADRP X20, 0xC19000
	0x034DA734 ADRP X19, 0xC58000
	0x034DA738 LDRB W8, [X9 + 0x1]
	0x034DA73C LDR X20, [X20 + 0xA58]
	0x034DA740 LDR X19, [X19 + 0xE10]
	0x034DA744 CBZ W8, 0x34DA774
	0x034DA748 ADRP X8, 0xC19000
	0x034DA74C LDR X8, [X8 + 0xA28]
	0x034DA750 ADRP X21, 0xC58000
	0x034DA754 LDR X0, [X8]
	0x034DA758 LDR W8, [X0 + 0xE0]
	0x034DA75C LDR X21, [X21 + 0xE08]
	0x034DA760 CBNZ W8, 0x34DA768
	0x034DA764 BL 0x1C16DFC
	0x034DA768 LDR X0, [X21]
	0x034DA76C MOV X1, X31
	0x034DA770 BL 0x3C06A04
	0x034DA774 LDR X0, [X20]
	0x034DA778 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF06000
	006 Move X20, 0xC59000
	007 Move W8, [X21+2256]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC59000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2256], W8
	019 Move X0, [X20]
	020 Move X19, [X19+24]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CAPI.ovr_Packet_GetSenderID, X0
	031 Return X0

Method: System.UInt64 get_Size()

Disassembly:
	0x034DA77C LDR X1, [X19]
	0x034DA780 MOV X2, X31

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void Finalize()

Disassembly:
	0x034DA784 MOV X19, X0
	0x034DA788 BL 0x3C35934
	0x034DA78C CBZ X19, 0x34DA81C
	0x034DA790 ADRP X8, 0xC58000
	0x034DA794 LDR X8, [X8 + 0xDF0]
	0x034DA798 MOV X0, X19
	0x034DA79C LDP X20, X19, [X31 + 0x10]
	0x034DA7A0 LDR X1, [X8]
	0x034DA7A4 LDP X30, X21, [X31], #0x20
	0x034DA7A8 B 0x21E51FC
	0x034DA7AC LDR X0, [X20]
	0x034DA7B0 LDR W8, [X0 + 0xE0]
	0x034DA7B4 CBNZ W8, 0x34DA7BC
	0x034DA7B8 BL 0x1C16DFC
	0x034DA7BC MOV X0, X31
	0x034DA7C0 BL 0x3C01AB0
	0x034DA7C4 CMP W0, 0xB
	0x034DA7C8 B.NE 0x34DA868
	0x034DA7CC ADRP X8, 0xC58000
	0x034DA7D0 LDR X8, [X8 + 0xDE8]
	0x034DA7D4 LDR X0, [X8]
	0x034DA7D8 BL 0x1C16F10
	0x034DA7DC MOV X1, X31
	0x034DA7E0 MOV X20, X0
	0x034DA7E4 BL 0x33BDD8C
	0x034DA7E8 CBZ X20, 0x34DA81C
	0x034DA7EC MOV X1, X19
	0x034DA7F0 BL 0x34B1710
	0x034DA7F4 LDR X8, [X21]
	0x034DA7F8 AND W19, W0, 0x1
	0x034DA7FC LDR W9, [X8 + 0xE0]
	0x034DA800 CBNZ W9, 0x34DA810
	0x034DA804 MOV X0, X8
	0x034DA808 BL 0x1C16DFC
	0x034DA80C LDR X8, [X21]
	0x034DA810 LDR X9, [X8 + 0xB8]
	0x034DA814 STRB W19, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Call Packet.Dispose, X0
	007 Move X0, X19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X1, X31
	011 Move X30, [X31+32]
	012 Move X21, [X31+40]
	013 Call Object.Finalize, X0
	014 Return 
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X21, X0
	017 Move X0, X21
	018 Call 0x3EB2AD0
	019 Move X20, [X0]
	020 Call 0x3EB2AE0
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object.Finalize, X0
	024 Compare X20, 0
	025 JumpIfNotEqual {32}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move X20, X31
	032 Move X0, X20
	033 Call 0x1C17F18
	034 Move X21, X0
	035 Move X0, X19
	036 Move X1, X31
	037 Call Object.Finalize, X0
	038 Compare X20, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X21
	041 Call 0x1D2D690
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x034DA818 B 0x34DA6F8
	0x034DA81C BL 0x1C16F20
	0x034DA820 ADRP X0, 0xC42000
	0x034DA824 LDR X0, [X0 + 0x1D0]
	0x034DA828 BL 0x1C16D08
	0x034DA82C BL 0x1C16F10
	0x034DA830 MOV X19, X0
	0x034DA834 ADRP X0, 0xC58000
	0x034DA838 LDR X0, [X0 + 0xE18]
	0x034DA83C BL 0x1C16D08
	0x034DA840 MOV X1, X0
	0x034DA844 MOV X0, X19
	0x034DA848 MOV X2, X31
	0x034DA84C BL 0x3C363D0
	0x034DA850 ADRP X0, 0xC58000
	0x034DA854 LDR X0, [X0 + 0xE78]
	0x034DA858 BL 0x1C16D08
	0x034DA85C MOV X1, X0
	0x034DA860 MOV X0, X19
	0x034DA864 BL 0x1C16DEC
	0x034DA868 ADRP X0, 0xC22000
	0x034DA86C LDR X0, [X0 + 0x758]
	0x034DA870 BL 0x1C16D08
	0x034DA874 BL 0x1C16F10
	0x034DA878 MOV X19, X0
	0x034DA87C ADRP X0, 0xC58000
	0x034DA880 LDR X0, [X0 + 0xE28]
	0x034DA884 BL 0x1C16D08
	0x034DA888 MOV X1, X0
	0x034DA88C MOV X0, X19
	0x034DA890 MOV X2, X31
	0x034DA894 BL 0x33802E4
	0x034DA898 B 0x34DA850
	0x034DA89C STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF06000
	006 Move X20, 0xC59000
	007 Move W8, [X21+2257]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC59000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC21000
	018 Move X0, [X0+3088]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2257], W8
	022 Move X0, [X20]
	023 Move X21, 0xC21000
	024 Move X20, [X19+24]
	025 Move W8, [X0+224]
	026 Move X21, [X21+3088]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Call CAPI.ovr_Packet_Free, X0
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call GC.SuppressFinalize, X0
	044 Return 

