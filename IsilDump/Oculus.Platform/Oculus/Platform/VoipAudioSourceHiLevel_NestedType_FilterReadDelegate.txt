Type: Oculus.Platform.VoipAudioSourceHiLevel/FilterReadDelegate

Method: System.Void Awake()

Disassembly:
	0x034E88F0 LDR X25, [X25 + 0x328]
	0x034E88F4 MOV X20, X1
	0x034E88F8 MOV X19, X0
	0x034E88FC TBNZ X8, 0x0, 0x34E8950
	0x034E8900 ADRP X0, 0xC4A000
	0x034E8904 LDR X0, [X0 + 0x328]
	0x034E8908 BL 0x1C16CF4
	0x034E890C ADRP X0, 0xC4B000
	0x034E8910 LDR X0, [X0 + 0x3C0]
	0x034E8914 BL 0x1C16CF4
	0x034E8918 ADRP X0, 0xC4B000
	0x034E891C LDR X0, [X0 + 0x3B8]
	0x034E8920 BL 0x1C16CF4
	0x034E8924 ADRP X0, 0xC4B000
	0x034E8928 LDR X0, [X0 + 0x3C8]
	0x034E892C BL 0x1C16CF4
	0x034E8930 ADRP X0, 0xC4B000
	0x034E8934 LDR X0, [X0 + 0x3D0]
	0x034E8938 BL 0x1C16CF4
	0x034E893C ADRP X0, 0xC4B000
	0x034E8940 LDR X0, [X0 + 0x3D8]
	0x034E8944 BL 0x1C16CF4
	0x034E8948 MOVZ W8, 0x1
	0x034E894C STRB W8, [X22 + 0x9B7]
	0x034E8950 LDR X1, [X21]
	0x034E8954 ADRP X22, 0xC4B000
	0x034E8958 ADRP X21, 0xC4B000
	0x034E895C LDR X22, [X22 + 0x3D8]
	0x034E8960 LDR X21, [X21 + 0x3D0]
	0x034E8964 MOV X0, X19
	0x034E8968 BL 0x29B48F8
	0x034E896C LDR X0, [X25]
	0x034E8970 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEF8000
	006 Move X20, 0xC4B000
	007 Move W8, [X21+2451]
	008 Move X20, [X20+808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC4B000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC0C000
	018 Move X0, [X0+1592]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2451], W8
	022 Move X0, [X20]
	023 Move X20, 0xC0C000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1592]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Call CAPI.ovr_Voip_GetOutputBufferMaxSize
	030 Move X1, X31
	031 Call UIntPtr.op_Explicit, X0
	032 Move X8, [X20]
	033 Move W1, W0
	034 Move X0, X8
	035 Call 0x1C17D6C
	036 Move [X19+40], X0
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 

Method: System.Void OnAudioFilterRead(System.Single[] data, System.Int32 channels)

Disassembly:
	0x034E8974 CBNZ W8, 0x34E897C
	0x034E8978 BL 0x1C16DFC
	0x034E897C MOV X0, X20
	0x034E8980 MOV X1, X31
	0x034E8984 BL 0x34C1F4C
	0x034E8988 MOV X1, X31
	0x034E898C BL 0x33D53AC
	0x034E8990 LDR X8, [X22]
	0x034E8994 MOV W23, W0
	0x034E8998 MOV X0, X8
	0x034E899C BL 0x1C16F10
	0x034E89A0 LDR X2, [X21]
	0x034E89A4 MOV W1, W23
	0x034E89A8 MOV X22, X0
	0x034E89AC BL 0x301B830
	0x034E89B0 CMP W23, 0x1
	0x034E89B4 STR X22, [X19 + 0x10]
	0x034E89B8 B.LT 0x34E8A94
	0x034E89BC ADRP X26, 0xC4B000
	0x034E89C0 ADRP X27, 0xC4B000
	0x034E89C4 LDR X26, [X26 + 0x3C0]
	0x034E89C8 LDR X27, [X27 + 0x3C8]
	0x034E89CC MOV W8, W23
	0x034E89D0 MOV X21, X31
	0x034E89D4 SUB X28, X8, 0x1
	0x034E89D8 MOV X0, X21
	0x034E89DC MOV X1, X31
	0x034E89E0 BL 0x33D53B0
	0x034E89E4 LDR X8, [X25]
	0x034E89E8 MOV X23, X0
	0x034E89EC LDR W9, [X8 + 0xE0]
	0x034E89F0 CBNZ W9, 0x34E89FC
	0x034E89F4 MOV X0, X8
	0x034E89F8 BL 0x1C16DFC
	0x034E89FC MOV X0, X20
	0x034E8A00 MOV X1, X23
	0x034E8A04 MOV X2, X31
	0x034E8A08 BL 0x34C1D20
	0x034E8A0C LDR X8, [X26]
	0x034E8A10 MOV X24, X0
	0x034E8A14 MOV X0, X8
	0x034E8A18 BL 0x1C16F10
	0x034E8A1C MOV X1, X24
	0x034E8A20 MOV X23, X0
	0x034E8A24 BL 0x34E86A4
	0x034E8A28 CBZ X22, 0x34E8AF0
	0x034E8A2C LDR W10, [X22 + 0x1C]
	0x034E8A30 LDR X8, [X22 + 0x10]
	0x034E8A34 LDR X9, [X27]
	0x034E8A38 ADD W10, W10, 0x1
	0x034E8A3C STR W10, [X22 + 0x1C]
	0x034E8A40 CBZ X8, 0x34E8AF0
	0x034E8A44 LDRSW X10, [X22 + 0x18]
	0x034E8A48 LDR W11, [X8 + 0x18]
	0x034E8A4C CMP W10, W11
	0x034E8A50 B.CS 0x34E8A68
	0x034E8A54 ADD W9, W10, 0x1
	0x034E8A58 ADD X8, X8, X10, 0x3, LSL
	0x034E8A5C STR W9, [X22 + 0x18]
	0x034E8A60 STR X23, [X8 + 0x20]
	0x034E8A64 B 0x34E8A80
	0x034E8A68 LDR X8, [X9 + 0x20]
	0x034E8A6C MOV X0, X22
	0x034E8A70 MOV X1, X23
	0x034E8A74 LDR X8, [X8 + 0xC0]
	0x034E8A78 LDR X2, [X8 + 0x70]
	0x034E8A7C BL 0x301BF90
	0x034E8A80 CMP X28, X21
	0x034E8A84 B.EQ 0x34E8A94
	0x034E8A88 LDR X22, [X19 + 0x10]
	0x034E8A8C ADD X21, X21, 0x1
	0x034E8A90 B 0x34E89D8
	0x034E8A94 LDR X0, [X25]
	0x034E8A98 LDR W8, [X0 + 0xE0]
	0x034E8A9C CBNZ W8, 0x34E8AA4
	0x034E8AA0 BL 0x1C16DFC
	0x034E8AA4 MOV X0, X20
	0x034E8AA8 MOV X1, X31
	0x034E8AAC BL 0x34C1FC8
	0x034E8AB0 STR X0, [X19 + 0x28]
	0x034E8AB4 MOV X0, X20
	0x034E8AB8 MOV X1, X31
	0x034E8ABC BL 0x34C1E78
	0x034E8AC0 STR X0, [X19 + 0x20]
	0x034E8AC4 MOV X0, X20
	0x034E8AC8 MOV X1, X31
	0x034E8ACC BL 0x34C1DA4
	0x034E8AD0 STR X0, [X19 + 0x18]
	0x034E8AD4 LDP X20, X19, [X31 + 0x50]
	0x034E8AD8 LDP X22, X21, [X31 + 0x40]
	0x034E8ADC LDP X24, X23, [X31 + 0x30]
	0x034E8AE0 LDP X26, X25, [X31 + 0x20]
	0x034E8AE4 LDP X28, X27, [X31 + 0x10]
	0x034E8AE8 LDR X30, [X31], #0x60
	0x034E8AEC RET
	0x034E8AF0 BL 0x1C16F20
	0x034E8AF4 STR X30, [X31 - 0x30]!
	0x034E8AF8 STP X22, X21, [X31 + 0x10]
	0x034E8AFC STP X20, X19, [X31 + 0x20]
	0x034E8B00 ADRP X22, 0xEF7000
	0x034E8B04 ADRP X21, 0xC4A000
	0x034E8B08 LDRB W8, [X22 + 0x9B8]
	0x034E8B0C LDR X21, [X21 + 0x328]
	0x034E8B10 MOV X20, X1
	0x034E8B14 MOV X19, X0
	0x034E8B18 TBNZ X8, 0x0, 0x34E8B30
	0x034E8B1C ADRP X0, 0xC4A000
	0x034E8B20 LDR X0, [X0 + 0x328]
	0x034E8B24 BL 0x1C16CF4
	0x034E8B28 MOVZ W8, 0x1
	0x034E8B2C STRB W8, [X22 + 0x9B8]
	0x034E8B30 MOV X0, X19
	0x034E8B34 MOV X1, X31
	0x034E8B38 BL 0x33BDD8C
	0x034E8B3C LDR X0, [X21]
	0x034E8B40 LDR W8, [X0 + 0xE0]
	0x034E8B44 CBNZ W8, 0x34E8B4C
	0x034E8B48 BL 0x1C16DFC
	0x034E8B4C MOV X0, X20
	0x034E8B50 MOV X1, X31
	0x034E8B54 BL 0x34C25EC
	0x034E8B58 AND W8, W0, 0x1
	0x034E8B5C STRB W8, [X19 + 0x10]
	0x034E8B60 LDP X20, X19, [X31 + 0x20]
	0x034E8B64 LDP X22, X21, [X31 + 0x10]
	0x034E8B68 LDR X30, [X31], #0x30
	0x034E8B6C RET
	0x034E8B70 STR X30, [X31 - 0x30]!
	0x034E8B74 STP X22, X21, [X31 + 0x10]
	0x034E8B78 STP X20, X19, [X31 + 0x20]
	0x034E8B7C ADRP X22, 0xEF7000
	0x034E8B80 ADRP X21, 0xC4A000
	0x034E8B84 LDRB W8, [X22 + 0x9B9]
	0x034E8B88 LDR X21, [X21 + 0x328]
	0x034E8B8C MOV X20, X1
	0x034E8B90 MOV X19, X0
	0x034E8B94 TBNZ X8, 0x0, 0x34E8BAC
	0x034E8B98 ADRP X0, 0xC4A000
	0x034E8B9C LDR X0, [X0 + 0x328]
	0x034E8BA0 BL 0x1C16CF4
	0x034E8BA4 MOVZ W8, 0x1
	0x034E8BA8 STRB W8, [X22 + 0x9B9]
	0x034E8BAC MOV X0, X19
	0x034E8BB0 MOV X1, X31
	0x034E8BB4 BL 0x33BDD8C
	0x034E8BB8 LDR X0, [X21]
	0x034E8BBC LDR W8, [X0 + 0xE0]
	0x034E8BC0 CBNZ W8, 0x34E8BC8
	0x034E8BC4 BL 0x1C16DFC
	0x034E8BC8 MOV X0, X20
	0x034E8BCC MOV X1, X31
	0x034E8BD0 BL 0x34C214C
	0x034E8BD4 STR X0, [X19 + 0x10]
	0x034E8BD8 MOV X0, X20
	0x034E8BDC MOV X1, X31
	0x034E8BE0 BL 0x34C2220
	0x034E8BE4 STR X0, [X19 + 0x18]
	0x034E8BE8 LDP X20, X19, [X31 + 0x20]
	0x034E8BEC LDP X22, X21, [X31 + 0x10]
	0x034E8BF0 LDR X30, [X31], #0x30
	0x034E8BF4 RET
	0x034E8BF8 STR X30, [X31 - 0x60]!
	0x034E8BFC STP X28, X27, [X31 + 0x10]
	0x034E8C00 STP X26, X25, [X31 + 0x20]
	0x034E8C04 STP X24, X23, [X31 + 0x30]
	0x034E8C08 STP X22, X21, [X31 + 0x40]
	0x034E8C0C STP X20, X19, [X31 + 0x50]
	0x034E8C10 ADRP X22, 0xEF7000
	0x034E8C14 ADRP X21, 0xC4B000
	0x034E8C18 ADRP X25, 0xC4A000
	0x034E8C1C LDRB W8, [X22 + 0x9BA]
	0x034E8C20 LDR X21, [X21 + 0x3E0]
	0x034E8C24 LDR X25, [X25 + 0x328]
	0x034E8C28 MOV X20, X1
	0x034E8C2C MOV X19, X0
	0x034E8C30 TBNZ X8, 0x0, 0x34E8C84
	0x034E8C34 ADRP X0, 0xC4A000
	0x034E8C38 LDR X0, [X0 + 0x328]
	0x034E8C3C BL 0x1C16CF4
	0x034E8C40 ADRP X0, 0xC4B000
	0x034E8C44 LDR X0, [X0 + 0x3E8]
	0x034E8C48 BL 0x1C16CF4
	0x034E8C4C ADRP X0, 0xC4B000
	0x034E8C50 LDR X0, [X0 + 0x3E0]
	0x034E8C54 BL 0x1C16CF4
	0x034E8C58 ADRP X0, 0xC4B000
	0x034E8C5C LDR X0, [X0 + 0x3F0]
	0x034E8C60 BL 0x1C16CF4
	0x034E8C64 ADRP X0, 0xC4B000
	0x034E8C68 LDR X0, [X0 + 0x3F8]
	0x034E8C6C BL 0x1C16CF4
	0x034E8C70 ADRP X0, 0xC4B000
	0x034E8C74 LDR X0, [X0 + 0x400]
	0x034E8C78 BL 0x1C16CF4
	0x034E8C7C MOVZ W8, 0x1
	0x034E8C80 STRB W8, [X22 + 0x9BA]
	0x034E8C84 LDR X1, [X21]
	0x034E8C88 ADRP X22, 0xC4B000
	0x034E8C8C ADRP X21, 0xC4B000
	0x034E8C90 LDR X22, [X22 + 0x400]
	0x034E8C94 LDR X21, [X21 + 0x3F8]
	0x034E8C98 MOV X0, X19
	0x034E8C9C BL 0x29B48F8
	0x034E8CA0 LDR X0, [X25]
	0x034E8CA4 LDR W8, [X0 + 0xE0]
	0x034E8CA8 CBNZ W8, 0x34E8CB0
	0x034E8CAC BL 0x1C16DFC
	0x034E8CB0 MOV X0, X20
	0x034E8CB4 MOV X1, X31
	0x034E8CB8 BL 0x34C23F4
	0x034E8CBC MOV X1, X31
	0x034E8CC0 BL 0x33D53AC
	0x034E8CC4 LDR X8, [X22]
	0x034E8CC8 MOV W23, W0
	0x034E8CCC MOV X0, X8
	0x034E8CD0 BL 0x1C16F10
	0x034E8CD4 LDR X2, [X21]
	0x034E8CD8 MOV W1, W23
	0x034E8CDC MOV X22, X0
	0x034E8CE0 BL 0x301B830
	0x034E8CE4 CMP W23, 0x1
	0x034E8CE8 STR X22, [X19 + 0x10]
	0x034E8CEC B.LT 0x34E8DC8
	0x034E8CF0 ADRP X26, 0xC4B000
	0x034E8CF4 ADRP X27, 0xC4B000
	0x034E8CF8 LDR X26, [X26 + 0x3E8]
	0x034E8CFC LDR X27, [X27 + 0x3F0]
	0x034E8D00 MOV W8, W23
	0x034E8D04 MOV X21, X31
	0x034E8D08 SUB X28, X8, 0x1
	0x034E8D0C MOV X0, X21
	0x034E8D10 MOV X1, X31
	0x034E8D14 BL 0x33D53B0
	0x034E8D18 LDR X8, [X25]
	0x034E8D1C MOV X23, X0
	0x034E8D20 LDR W9, [X8 + 0xE0]
	0x034E8D24 CBNZ W9, 0x34E8D30
	0x034E8D28 MOV X0, X8
	0x034E8D2C BL 0x1C16DFC
	0x034E8D30 MOV X0, X20
	0x034E8D34 MOV X1, X23
	0x034E8D38 MOV X2, X31
	0x034E8D3C BL 0x34C229C
	0x034E8D40 LDR X8, [X26]
	0x034E8D44 MOV X24, X0
	0x034E8D48 MOV X0, X8
	0x034E8D4C BL 0x1C16F10
	0x034E8D50 MOV X1, X24
	0x034E8D54 MOV X23, X0
	0x034E8D58 BL 0x34E8B70
	0x034E8D5C CBZ X22, 0x34E8E04
	0x034E8D60 LDR W10, [X22 + 0x1C]
	0x034E8D64 LDR X8, [X22 + 0x10]
	0x034E8D68 LDR X9, [X27]
	0x034E8D6C ADD W10, W10, 0x1
	0x034E8D70 STR W10, [X22 + 0x1C]
	0x034E8D74 CBZ X8, 0x34E8E04
	0x034E8D78 LDRSW X10, [X22 + 0x18]
	0x034E8D7C LDR W11, [X8 + 0x18]
	0x034E8D80 CMP W10, W11
	0x034E8D84 B.CS 0x34E8D9C
	0x034E8D88 ADD W9, W10, 0x1
	0x034E8D8C ADD X8, X8, X10, 0x3, LSL
	0x034E8D90 STR W9, [X22 + 0x18]
	0x034E8D94 STR X23, [X8 + 0x20]
	0x034E8D98 B 0x34E8DB4
	0x034E8D9C LDR X8, [X9 + 0x20]
	0x034E8DA0 MOV X0, X22
	0x034E8DA4 MOV X1, X23
	0x034E8DA8 LDR X8, [X8 + 0xC0]
	0x034E8DAC LDR X2, [X8 + 0x70]
	0x034E8DB0 BL 0x301BF90
	0x034E8DB4 CMP X28, X21
	0x034E8DB8 B.EQ 0x34E8DC8
	0x034E8DBC LDR X22, [X19 + 0x10]
	0x034E8DC0 ADD X21, X21, 0x1
	0x034E8DC4 B 0x34E8D0C
	0x034E8DC8 LDR X0, [X25]
	0x034E8DCC LDR W8, [X0 + 0xE0]
	0x034E8DD0 CBNZ W8, 0x34E8DD8
	0x034E8DD4 BL 0x1C16DFC
	0x034E8DD8 MOV X0, X20
	0x034E8DDC MOV X1, X31
	0x034E8DE0 BL 0x34C2320
	0x034E8DE4 STR X0, [X19 + 0x18]
	0x034E8DE8 LDP X20, X19, [X31 + 0x50]
	0x034E8DEC LDP X22, X21, [X31 + 0x40]
	0x034E8DF0 LDP X24, X23, [X31 + 0x30]
	0x034E8DF4 LDP X26, X25, [X31 + 0x20]
	0x034E8DF8 LDP X28, X27, [X31 + 0x10]
	0x034E8DFC LDR X30, [X31], #0x60
	0x034E8E00 RET
	0x034E8E04 BL 0x1C16F20
	0x034E8E08 STR X30, [X31 - 0x30]!
	0x034E8E0C STP X22, X21, [X31 + 0x10]
	0x034E8E10 STP X20, X19, [X31 + 0x20]
	0x034E8E14 ADRP X21, 0xEF7000
	0x034E8E18 ADRP X22, 0xC4A000
	0x034E8E1C LDRB W8, [X21 + 0x9BB]
	0x034E8E20 LDR X22, [X22 + 0x328]
	0x034E8E24 MOV X20, X1
	0x034E8E28 MOV X19, X0
	0x034E8E2C TBNZ X8, 0x0, 0x34E8E50
	0x034E8E30 ADRP X0, 0xC4A000
	0x034E8E34 LDR X0, [X0 + 0x328]
	0x034E8E38 BL 0x1C16CF4
	0x034E8E3C ADRP X0, 0xC4A000
	0x034E8E40 LDR X0, [X0 + 0xA90]
	0x034E8E44 BL 0x1C16CF4
	0x034E8E48 MOVZ W8, 0x1
	0x034E8E4C STRB W8, [X21 + 0x9BB]
	0x034E8E50 ADRP X21, 0xC4A000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xEF8000
	011 Move W8, [X22+2452]
	012 Move W21, W2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xC0C000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0xC4C000
	023 Move X0, [X0+856]
	024 Call 0x1C17CF4
	025 Move X0, 0xC0C000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xC0C000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0xC4C000
	032 Move X0, [X0+880]
	033 Call 0x1C17CF4
	034 Move X0, 0xC4C000
	035 Move X0, [X0+912]
	036 Call 0x1C17CF4
	037 Move X0, 0xC4C000
	038 Move X0, [X0+920]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2452], W8
	042 Compare X20, 0
	043 JumpIfEqual {281}
	044 Move X8, [X19+40]
	045 Compare X8, 0
	046 JumpIfEqual {281}
	047 Move W9, [X20+24]
	048 Move W8, [X8+24]
	049 NotImplemented "Instruction SDIV not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X19+32]
	052 Compare X8, 0
	053 JumpIfEqual {281}
	054 Move X23, [X8+56]
	055 Compare X23, 0
	056 JumpIfEqual {281}
	057 Move X25, 0xC4C000
	058 Move X8, [X23]
	059 Move X25, [X25+856]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X25]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 3
	071 Move X0, X23
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 3
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X23
	080 NotImplemented "Instruction BLR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, 0xC4C000
	083 Move X8, [X8+880]
	084 Move X8, [X8]
	085 Move X8, [X8+184]
	086 Move W8, [X8+4]
	087 Compare W8, 0
	088 JumpIfEqual {270}
	089 Move X8, 0xC0C000
	090 Move X8, [X8+2512]
	091 Move W23, W0
	092 Move W1, 2
	093 Move X0, [X8]
	094 Call 0x1C17D6C
	095 Move X21, 0xC0C000
	096 Move X21, [X21+1880]
	097 Move X19, X0
	098 Add X1, X31, 12
	099 Move [X31+12], W22
	100 Move X0, [X21]
	101 Call 0x1C17E04
	102 Compare X19, 0
	103 JumpIfEqual {281}
	104 Move X20, X0
	105 Compare X0, 0
	106 JumpIfEqual {113}
	107 Move X8, [X19]
	108 Move X0, X20
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {329}
	113 Move W8, [X19+24]
	114 Compare W8, 0
	115 JumpIfEqual {280}
	116 Move [X19+32], X20
	117 Move X0, [X21]
	118 Add X1, X31, 8
	119 Move [X31+8], W23
	120 Call 0x1C17E04
	121 Move X20, X0
	122 Compare X0, 0
	123 JumpIfEqual {130}
	124 Move X8, [X19]
	125 Move X0, X20
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {329}
	130 Move W8, [X19+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X19+40], X20
	133 Move X8, 0xC0C000
	134 Move X8, [X8+2600]
	135 Move X0, [X8]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X8, 0xC4C000
	141 Move X8, [X8+912]
	142 Move X1, X19
	143 Move X2, X31
	144 Move X0, [X8]
	145 Call Debug.LogFormat, X0, X1
	146 Move X8, [X19+32]
	147 Compare X8, 0
	148 JumpIfEqual {281}
	149 Move X23, [X8+56]
	150 Compare X23, 0
	151 JumpIfEqual {281}
	152 Move X8, [X23]
	153 Move X24, [X19+40]
	154 Move X1, [X25]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move X0, X23
	165 Move W2, W31
	166 Call 0x1C5D788
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Add X8, X8, X9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X3, [X0+8]
	172 Move X0, X23
	173 Move X1, X24
	174 Move W2, W22
	175 NotImplemented "Instruction BLR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X8, 0xC0C000
	178 Move X8, [X8+2512]
	179 Move W23, W0
	180 Move W1, 2
	181 Move X0, [X8]
	182 Call 0x1C17D6C
	183 Move X21, 0xC0C000
	184 Move X21, [X21+1880]
	185 Move X19, X0
	186 Add X1, X31, 12
	187 Move [X31+12], W23
	188 Move X0, [X21]
	189 Call 0x1C17E04
	190 Compare X19, 0
	191 JumpIfEqual {281}
	192 Move X20, X0
	193 Compare X0, 0
	194 JumpIfEqual {201}
	195 Move X8, [X19]
	196 Move X0, X20
	197 Move X1, [X8+64]
	198 Call 0x1C17E00
	199 Compare X0, 0
	200 JumpIfEqual {329}
	201 Move W8, [X19+24]
	202 Compare W8, 0
	203 JumpIfEqual {280}
	204 Move [X19+32], X20
	205 Move X0, [X21]
	206 Add X1, X31, 8
	207 Move [X31+8], W22
	208 Call 0x1C17E04
	209 Move X20, X0
	210 Compare X0, 0
	211 JumpIfEqual {218}
	212 Move X8, [X19]
	213 Move X0, X20
	214 Move X1, [X8+64]
	215 Call 0x1C17E00
	216 Compare X0, 0
	217 JumpIfEqual {329}
	218 Move W8, [X19+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move [X19+40], X20
	221 Move X8, 0xC0C000
	222 Move X8, [X8+2600]
	223 Move X0, [X8]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X8, 0xC4C000
	229 Move X8, [X8+920]
	230 Move X1, X19
	231 Move X2, X31
	232 Move X0, [X8]
	233 Call Debug.LogWarningFormat, X0, X1
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X8, [X19+40]
	236 Compare X8, 0
	237 JumpIfEqual {281}
	238 Move W10, [X8+24]
	239 Move X9, X31
	240 Move W12, W31
	241 Move W11, W22
	242 Move S0, -1
	243 NotImplemented "Instruction CMP not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move W13, [X20+24]
	246 Add X14, X8, X9
	247 Move V1, [X14+32]
	248 Move W14, W21
	249 Subtract W13, W13, W12
	250 NotImplemented "Instruction CSEL not yet implemented."
	251 Compare W13, 0
	252 JumpIfEqual {280}
	253 Add W15, W12, 1
	254 Add X12, X20, W12
	255 NotImplemented "Instruction FCMP not yet implemented."
	256 Move [X12+32], S1
	257 NotImplemented "Instruction FCSEL not yet implemented."
	258 Subtract W14, W14, 1
	259 Subtract W13, W13, 1
	260 Move W12, W15
	261 Move W15, W12
	262 Add X9, X9, 1
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W12, W15
	265 Move S0, -1
	266 Move X8, [X19+32]
	267 Compare X8, 0
	268 JumpIfEqual {281}
	269 Move [X8+48], S0
	270 Move X20, [X31+64]
	271 Move X19, [X31+72]
	272 Move X22, [X31+48]
	273 Move X21, [X31+56]
	274 Move X24, [X31+32]
	275 Move X23, [X31+40]
	276 Move X30, [X31+16]
	277 Move X25, [X31+24]
	278 Add X31, X31, 80
	279 Return 
	280 Call 0x1C17F28
	281 Call 0x1C17F20
	282 Move X0, X20
	283 Call 0x19913C0
	284 Move W2, [X20+24]
	285 Move X0, X20
	286 Move W1, W31
	287 Move X3, X31
	288 Call Array.Clear, X0, X1, X2
	289 Move [X31+12], W22
	290 Move X20, 0xC0C000
	291 Move X20, [X20+1880]
	292 Move X0, X20
	293 Call 0x1C17D08
	294 Add X1, X31, 12
	295 Call 0x1C17E04
	296 Move X19, [X19+40]
	297 Move X21, X0
	298 Move X0, X19
	299 Call 0x19913C0
	300 Move X8, [X19+24]
	301 Move X0, X20
	302 Move [X31+8], W8
	303 Call 0x1C17D08
	304 Add X1, X31, 8
	305 Call 0x1C17E04
	306 Move X19, X0
	307 Move X0, 0xC4C000
	308 Move X0, [X0+928]
	309 Call 0x1C17D08
	310 Move X1, X21
	311 Move X2, X19
	312 Move X3, X31
	313 Call String.Format, X0, X1, X2
	314 Move X19, X0
	315 Move X0, 0xC0C000
	316 Move X0, [X0+2000]
	317 Call 0x1C17D08
	318 Call 0x1C17F10
	319 Move X1, X19
	320 Move X2, X31
	321 Move X20, X0
	322 Call Exception..ctor, X0, X1
	323 Move X0, 0xC4C000
	324 Move X0, [X0+936]
	325 Call 0x1C17D08
	326 Move X1, X0
	327 Move X0, X20
	328 Call 0x1C17DEC
	329 Call 0x1C17F44
	330 Move X1, X31
	331 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x034E8E54 LDR X21, [X21 + 0xA90]
	0x034E8E58 MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

