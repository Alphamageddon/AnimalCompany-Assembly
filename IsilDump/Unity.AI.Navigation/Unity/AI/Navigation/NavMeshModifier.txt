Type: Unity.AI.Navigation.NavMeshModifier

Method: System.Boolean get_overrideArea()

Disassembly:
	0x036E0004 B 0x3EB1924
	0x036E0008 LDR X19, [X8]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_overrideArea(System.Boolean value)

Disassembly:
	0x036E000C LDR X0, [X22]
	0x036E0010 BL 0x1C16F10
	0x036E0014 ADRP X8, 0xA60000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Int32 get_area()

Disassembly:
	0x036E0018 LDR X8, [X8 + 0x5B0]
	0x036E001C MOV X1, X31

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_area(System.Int32 value)

Disassembly:
	0x036E0020 MOV X3, X31
	0x036E0024 MOV X20, X0

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Boolean get_overrideGenerateLinks()

Disassembly:
	0x036E0028 LDR X2, [X8]
	0x036E002C BL 0x3BE25BC

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_overrideGenerateLinks(System.Boolean value)

Disassembly:
	0x036E0030 MOV X0, X19
	0x036E0034 MOV X1, X20
	0x036E0038 MOV X2, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+40], W8
	003 Return 

Method: System.Boolean get_generateLinks()

Disassembly:
	0x036E003C BL 0x33C0FDC
	0x036E0040 CBZ X0, 0x36E0074

ISIL:
	001 Move W0, [X0+41]
	002 Return X0

Method: System.Void set_generateLinks(System.Boolean value)

Disassembly:
	0x036E0044 LDR X1, [X22]
	0x036E0048 LDR X8, [X0]
	0x036E004C CMP X8, X1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+41], W8
	003 Return 

Method: System.Boolean get_ignoreFromBuild()

Disassembly:
	0x036E0050 B.NE 0x36E0070
	0x036E0054 LDR X8, [X21]

ISIL:
	001 Move W0, [X0+42]
	002 Return X0

Method: System.Void set_ignoreFromBuild(System.Boolean value)

Disassembly:
	0x036E0058 LDR X8, [X8 + 0xB8]
	0x036E005C STR X0, [X8]
	0x036E0060 LDR X1, [X22]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+42], W8
	003 Return 

Method: System.Boolean get_applyToChildren()

Disassembly:
	0x036E0064 LDR X8, [X0]
	0x036E0068 CMP X8, X1

ISIL:
	001 Move W0, [X0+43]
	002 Return X0

Method: System.Void set_applyToChildren(System.Boolean value)

Disassembly:
	0x036E006C B.EQ 0x36E0080
	0x036E0070 BL 0x1C171E0
	0x036E0074 LDR X8, [X21]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+43], W8
	003 Return 

Method: System.Collections.Generic.List`1<Unity.AI.Navigation.NavMeshModifier> get_activeModifiers()

Disassembly:
	0x036E0078 LDR X8, [X8 + 0xB8]
	0x036E007C STR X0, [X8]
	0x036E0080 LDP X20, X19, [X31 + 0x20]
	0x036E0084 LDP X22, X21, [X31 + 0x10]
	0x036E0088 LDR X30, [X31], #0x30
	0x036E008C RET
	0x036E0090 BL 0x1C16F20
	0x036E0094 SUB X31, X31, 0xB0
	0x036E0098 STP X30, X21, [X31 + 0x90]
	0x036E009C STP X20, X19, [X31 + 0xA0]
	0x036E00A0 ADRP X21, 0xD00000
	0x036E00A4 LDRB W9, [X21 + 0xAFF]
	0x036E00A8 MOV X20, X0
	0x036E00AC MOV X19, X8
	0x036E00B0 TBNZ X9, 0x0, 0x36E00D4
	0x036E00B4 ADRP X0, 0xA13000
	0x036E00B8 LDR X0, [X0 + 0xA28]
	0x036E00BC BL 0x1C16CF4
	0x036E00C0 ADRP X0, 0xA60000
	0x036E00C4 LDR X0, [X0 + 0x5C0]
	0x036E00C8 BL 0x1C16CF4
	0x036E00CC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD01000
	005 Move X19, 0xA61000
	006 Move W8, [X20+2799]
	007 Move X19, [X19+1320]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA61000
	013 Move X0, [X0+1320]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2799], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void OnEnable()

Disassembly:
	0x036E00D0 STRB W8, [X21 + 0xAFF]
	0x036E00D4 MOVI V0.2D, 0x0
	0x036E00D8 STP V0, V0, [X31 + 0x70]
	0x036E00DC STP V0, V0, [X31 + 0x50]
	0x036E00E0 STR W31, [X31 + 0x4C]
	0x036E00E4 LDR W0, [X20 + 0x20]
	0x036E00E8 ADD X8, X31, 0x8
	0x036E00EC MOV X1, X31
	0x036E00F0 BL 0x3BE250C
	0x036E00F4 LDUR V0, [X31 + 0x8]
	0x036E00F8 LDUR V1, [X31 + 0x18]
	0x036E00FC LDUR V2, [X31 + 0x28]
	0x036E0100 LDUR V3, [X31 + 0x38]
	0x036E0104 ADD X0, X31, 0x50
	0x036E0108 MOV X1, X31
	0x036E010C STP V0, V1, [X31 + 0x50]
	0x036E0110 STP V2, V3, [X31 + 0x70]
	0x036E0114 BL 0x3BE1000
	0x036E0118 ADDS W31, W0, 0x1
	0x036E011C B.NE 0x36E0190
	0x036E0120 LDR W8, [X20 + 0x20]
	0x036E0124 ADD X0, X31, 0x4C
	0x036E0128 MOV X1, X31
	0x036E012C STR W8, [X31 + 0x4C]
	0x036E0130 BL 0x337B6E0
	0x036E0134 ADRP X8, 0xA60000
	0x036E0138 LDR X8, [X8 + 0x5C0]
	0x036E013C MOV X1, X0
	0x036E0140 MOV X2, X31
	0x036E0144 LDR X8, [X8]
	0x036E0148 MOV X0, X8
	0x036E014C BL 0x321B938
	0x036E0150 ADRP X8, 0xA13000
	0x036E0154 LDR X8, [X8 + 0xA28]
	0x036E0158 MOV X21, X0
	0x036E015C LDR X8, [X8]
	0x036E0160 LDR W9, [X8 + 0xE0]
	0x036E0164 CBNZ W9, 0x36E0170
	0x036E0168 MOV X0, X8
	0x036E016C BL 0x1C16DFC
	0x036E0170 MOV X0, X21
	0x036E0174 MOV X1, X20
	0x036E0178 MOV X2, X31
	0x036E017C BL 0x3C06B0C
	0x036E0180 LDR W1, [X20 + 0x20]
	0x036E0184 ADD X0, X31, 0x50
	0x036E0188 MOV X2, X31
	0x036E018C BL 0x3BE2AF4
	0x036E0190 LDRB W8, [X20 + 0x4F]
	0x036E0194 CBZ W8, 0x36E01B8
	0x036E0198 ADD X0, X31, 0x50
	0x036E019C MOVZ W1, 0x1
	0x036E01A0 MOV X2, X31
	0x036E01A4 BL 0x3BE2B20
	0x036E01A8 LDR W1, [X20 + 0x50]
	0x036E01AC ADD X0, X31, 0x50
	0x036E01B0 MOV X2, X31
	0x036E01B4 BL 0x3BE2B2C
	0x036E01B8 LDRB W8, [X20 + 0x54]
	0x036E01BC CBZ W8, 0x36E01E0
	0x036E01C0 ADD X0, X31, 0x50
	0x036E01C4 MOVZ W1, 0x1
	0x036E01C8 MOV X2, X31
	0x036E01CC BL 0x3BE2B0C
	0x036E01D0 LDR V0, [X20 + 0x58]
	0x036E01D4 ADD X0, X31, 0x50
	0x036E01D8 MOV X1, X31
	0x036E01DC BL 0x3BE2B18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD01000
	006 Move X20, 0xA61000
	007 Move W8, [X21+2800]
	008 Move X20, [X20+1320]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xA61000
	015 Move X0, [X0+1328]
	016 Call 0x1C17CF4
	017 Move X0, 0xA61000
	018 Move X0, [X0+1336]
	019 Call 0x1C17CF4
	020 Move X0, 0xA61000
	021 Move X0, [X0+1320]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2800], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X0, [X8]
	033 Compare X0, 0
	034 JumpIfEqual {85}
	035 Move X8, 0xA61000
	036 Move X8, [X8+1336]
	037 Move X1, X19
	038 Move X2, [X8]
	039 Call List`1<Object>.Contains, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {70}
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move X0, [X8]
	052 Compare X0, 0
	053 JumpIfEqual {85}
	054 Move X9, 0xA61000
	055 Move X9, [X9+1328]
	056 Move W10, [X0+28]
	057 Move X8, [X0+16]
	058 Move X9, [X9]
	059 Add W10, W10, 1
	060 Move [X0+28], W10
	061 Compare X8, 0
	062 JumpIfEqual {85}
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Move W11, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add W9, W10, 1
	067 Add X8, X8, X10
	068 Move [X0+24], W9
	069 Move [X8+32], X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return 
	075 Move X8, [X9+32]
	076 Move X1, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X8, [X8+192]
	080 Move X2, [X8+112]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call List`1<Object>.AddWithResize, X0, X1
	084 Return 
	085 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x036E01E0 LDR V0, [X20 + 0x5C]
	0x036E01E4 ADD X0, X31, 0x50
	0x036E01E8 MOV X1, X31
	0x036E01EC BL 0x3BE2B04
	0x036E01F0 LDRB W1, [X20 + 0x68]
	0x036E01F4 ADD X0, X31, 0x50
	0x036E01F8 MOV X2, X31
	0x036E01FC BL 0x3BE2B34
	0x036E0200 LDP V1, V0, [X31 + 0x70]
	0x036E0204 LDP V3, V2, [X31 + 0x50]
	0x036E0208 LDP X30, X21, [X31 + 0x90]
	0x036E020C STP V1, V0, [X19 + 0x20]
	0x036E0210 STP V3, V2, [X19]
	0x036E0214 LDP X20, X19, [X31 + 0xA0]
	0x036E0218 ADD X31, X31, 0xB0
	0x036E021C RET
	0x036E0220 SUB X31, X31, 0x100
	0x036E0224 STR D14, [X31 + 0xA0]
	0x036E0228 STP D13, D12, [X31 + 0xB0]
	0x036E022C STP D11, D10, [X31 + 0xC0]
	0x036E0230 STP D9, D8, [X31 + 0xD0]
	0x036E0234 STP X30, X21, [X31 + 0xE0]
	0x036E0238 STP X20, X19, [X31 + 0xF0]
	0x036E023C ADRP X21, 0xD00000
	0x036E0240 ADRP X20, 0xA60000
	0x036E0244 LDRB W8, [X21 + 0xB00]
	0x036E0248 LDR X20, [X20 + 0x590]
	0x036E024C MOV X19, X0
	0x036E0250 TBNZ X8, 0x0, 0x36E0274
	0x036E0254 ADRP X0, 0xA60000
	0x036E0258 LDR X0, [X0 + 0x590]
	0x036E025C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD01000
	006 Move X20, 0xA61000
	007 Move W8, [X21+2801]
	008 Move X20, [X20+1320]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA61000
	015 Move X0, [X0+1344]
	016 Call 0x1C17CF4
	017 Move X0, 0xA61000
	018 Move X0, [X0+1320]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2801], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0xA61000
	033 Move X8, [X8+1344]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call List`1<Object>.Remove, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Boolean AffectsAgentType(System.Int32 agentTypeID)

Disassembly:
	0x036E0260 ADRP X0, 0xA13000
	0x036E0264 LDR X0, [X0 + 0x598]
	0x036E0268 BL 0x1C16CF4
	0x036E026C MOVZ W8, 0x1
	0x036E0270 STRB W8, [X21 + 0xB00]
	0x036E0274 MOV X0, X19
	0x036E0278 BL 0x36E0444
	0x036E027C LDR X8, [X20]
	0x036E0280 LDUR V11, [X19 + 0x34]
	0x036E0284 LDR V12, [X19 + 0x3C]
	0x036E0288 LDR V8, [X19 + 0x28]
	0x036E028C LDR W9, [X8 + 0xE0]
	0x036E0290 LDR V9, [X19 + 0x30]
	0x036E0294 MOV X20, X0
	0x036E0298 CBNZ W9, 0x36E02A4
	0x036E029C MOV X0, X8
	0x036E02A0 BL 0x1C16DFC
	0x036E02A4 LDR W8, [X19 + 0x24]
	0x036E02A8 CMP W8, 0x1
	0x036E02AC B.NE 0x36E02CC
	0x036E02B0 UNIMPLEMENTED
	0x036E02B4 FABS S1, S9
	0x036E02B8 MOVI V2.2S, 0x3F, 0x18
	0x036E02BC FMOV S3, 0.5
	0x00000000 INVALID
	0x036E02C4 FMUL S13, S1, S3
	0x036E02C8 B 0x36E02EC
	0x036E02CC ADD X8, X31, 0x60
	0x036E02D0 MOV X0, X19
	0x036E02D4 MOV X1, X20
	0x036E02D8 BL 0x36E0D04
	0x036E02DC LDR V11, [X31 + 0x60]
	0x036E02E0 LDR V12, [X31 + 0x68]
	0x036E02E4 LDUR V14, [X31 + 0x6C]
	0x036E02E8 LDR V13, [X31 + 0x74]
	0x036E02EC ADD X8, X31, 0x60
	0x036E02F0 MOV X0, X19
	0x036E02F4 BL 0x36E0094
	0x036E02F8 MOV X0, X19
	0x036E02FC MOV X1, X31
	0x036E0300 BL 0x3C32E90
	0x036E0304 CBZ X0, 0x36E0440
	0x036E0308 MOV X1, X31
	0x036E030C BL 0x3C3F58C
	0x036E0310 MOV X0, X19
	0x036E0314 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD01000
	006 Move W8, [X21+2802]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xA61000
	014 Move X0, [X0+1352]
	015 Call 0x1C17CF4
	016 Move X0, 0xA15000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move X0, 0xA3E000
	020 Move X0, [X0+3896]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2802], W8
	024 Move X0, [X20+48]
	025 Compare X0, 0
	026 JumpIfEqual {53}
	027 Move W8, [X0+24]
	028 Compare W8, 0
	029 JumpIfEqual {46}
	030 Move X8, 0xA3E000
	031 Move X8, [X8+3896]
	032 Move W1, W31
	033 Move X2, [X8]
	034 Call List`1<Int32>.get_Item, X0, X1
	035 Add W31, W0, 1
	036 Move X0, [X20+48]
	037 Compare X0, 0
	038 JumpIfEqual {53}
	039 Move X8, 0xA61000
	040 Move X8, [X8+1352]
	041 Move W1, W19
	042 Move X2, [X8]
	043 Call List`1<Int32>.IndexOf, X0, X1
	044 Add W31, W0, 1
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move W0, W31
	047 Move W0, 1
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x036E0318 MOV V8.16B, V0.16B
	0x036E031C MOV V9.16B, V1.16B
	0x036E0320 MOV V10.16B, V2.16B
	0x036E0324 BL 0x3C32E90
	0x036E0328 CBZ X0, 0x36E0440
	0x036E032C ADRP X21, 0xA13000
	0x036E0330 LDR X21, [X21 + 0x598]
	0x036E0334 MOV X1, X31
	0x036E0338 BL 0x3C3DEB4
	0x036E033C MOV V4.16B, V0.16B
	0x036E0340 MOV V5.16B, V1.16B
	0x036E0344 MOV V6.16B, V2.16B
	0x036E0348 MOV V7.16B, V3.16B
	0x036E034C LDP V0, V1, [X31 + 0x60]
	0x036E0350 LDP V2, V3, [X31 + 0x80]
	0x036E0354 ADD X0, X31, 0x20
	0x036E0358 ADD X2, X31, 0x8
	0x036E035C STP V0, V1, [X31 + 0x20]
	0x036E0360 STP V2, V3, [X31 + 0x40]
	0x036E0364 MOV X1, X20
	0x036E0368 MOV V0.16B, V8.16B
	0x036E036C MOV V1.16B, V9.16B
	0x036E0370 MOV V2.16B, V10.16B
	0x036E0374 MOV V3.16B, V4.16B
	0x036E0378 MOV V4.16B, V5.16B
	0x036E037C MOV V5.16B, V6.16B
	0x036E0380 MOV V6.16B, V7.16B
	0x036E0384 MOV X3, X31
	0x036E0388 STR D11, [X31 + 0x8]
	0x036E038C STR S12, [X31 + 0x10]
	0x036E0390 STUR D14, [X31 + 0x14]
	0x036E0394 STR S13, [X31 + 0x1C]
	0x036E0398 BL 0x3BE0E7C
	0x036E039C LDR X8, [X21]
	0x036E03A0 MOV X20, X0
	0x036E03A4 LDR W9, [X8 + 0xE0]
	0x036E03A8 CBNZ W9, 0x36E03B4
	0x036E03AC MOV X0, X8
	0x036E03B0 BL 0x1C16DFC
	0x036E03B4 MOV X0, X20
	0x036E03B8 MOV X1, X31
	0x036E03BC MOV X2, X31
	0x036E03C0 BL 0x3C354F8
	0x036E03C4 TBZ X0, 0x0, 0x36E0420
	0x036E03C8 MOV X0, X19
	0x036E03CC MOV X1, X31
	0x036E03D0 BL 0x3C32ECC
	0x036E03D4 CBZ X0, 0x36E0440

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD01000
	006 Move X20, 0xA15000
	007 Move W8, [X21+2803]
	008 Move X20, [X20+3672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xA15000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move X0, 0xA3C000
	018 Move X0, [X0+1944]
	019 Call 0x1C17CF4
	020 Move X0, 0xA15000
	021 Move X0, [X0+3632]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2803], W8
	025 Move W8, 1
	026 Move [X19+43], W8
	027 Move X0, [X20]
	028 Move W1, 1
	029 Call 0x1C17D6C
	030 Compare X0, 0
	031 JumpIfEqual {59}
	032 Move W8, [X0+24]
	033 Move X20, X0
	034 Compare W8, 0
	035 JumpIfEqual {60}
	036 Move X8, 0xA15000
	037 Move X8, [X8+3632]
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W9, TEMP
	041 Move [X20+32], W9
	042 Move X21, 0xA3C000
	043 Move X0, [X8]
	044 Move X21, [X21+1944]
	045 Call 0x1C17F10
	046 Move X2, [X21]
	047 Move X1, X20
	048 Move X21, X0
	049 Call List`1<Int32>..ctor, X0, X1
	050 Move [X19+48], X21
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call MonoBehaviour..ctor, X0
	058 Return 
	059 Call 0x1C17F20
	060 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x036E03D8 MOV X1, X31
	0x036E03DC BL 0x3C389D4
	0x036E03E0 CBZ X20, 0x36E0440
	0x036E03E4 MOV X1, X0
	0x036E03E8 MOV X0, X20
	0x036E03EC MOV X2, X31
	0x036E03F0 BL 0x3C38A84
	0x036E03F4 ADD X0, X19, 0x6C
	0x036E03F8 MOV X1, X31
	0x036E03FC BL 0x3BE1CB8
	0x036E0400 MOV X0, X19
	0x036E0404 MOV X1, X31
	0x036E0408 STR W31, [X19 + 0x6C]
	0x036E040C STR X20, [X19 + 0x60]
	0x036E0410 BL 0x3C32454
	0x036E0414 TBZ X0, 0x0, 0x36E0420
	0x036E0418 MOV X0, X19
	0x036E041C BL 0x36DFD50
	0x036E0420 LDP X20, X19, [X31 + 0xF0]
	0x036E0424 LDP X30, X21, [X31 + 0xE0]
	0x036E0428 LDP D9, D8, [X31 + 0xD0]
	0x036E042C LDP D11, D10, [X31 + 0xC0]
	0x036E0430 LDP D13, D12, [X31 + 0xB0]
	0x036E0434 LDR V14, [X31 + 0xA0]
	0x036E0438 ADD X31, X31, 0x100
	0x036E043C RET
	0x036E0440 BL 0x1C16F20
	0x036E0444 STR D14, [X31 - 0xA0]!
	0x036E0448 STP D13, D12, [X31 + 0x10]
	0x036E044C STP D11, D10, [X31 + 0x20]
	0x036E0450 STP D9, D8, [X31 + 0x30]
	0x036E0454 STP X29, X30, [X31 + 0x40]
	0x036E0458 STP X28, X27, [X31 + 0x50]
	0x036E045C STP X26, X25, [X31 + 0x60]
	0x036E0460 STP X24, X23, [X31 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD01000
	007 Move X22, 0xA61000
	008 Move X19, 0xA61000
	009 Move X20, 0xA61000
	010 Move W8, [X21+2804]
	011 Move X22, [X22+1360]
	012 Move X19, [X19+1368]
	013 Move X20, [X20+1320]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA61000
	019 Move X0, [X0+1368]
	020 Call 0x1C17CF4
	021 Move X0, 0xA61000
	022 Move X0, [X0+1360]
	023 Call 0x1C17CF4
	024 Move X0, 0xA61000
	025 Move X0, [X0+1320]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2804], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

