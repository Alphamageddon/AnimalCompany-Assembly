Type: Unity.AI.Navigation.NavMeshSurface/<>c

Method: System.Void .cctor()

Disassembly:
	0x036E3144 FMUL S25, S3, S5
	0x036E3148 FMUL S26, S2, S6
	0x036E314C FMUL S3, S3, S6
	0x036E3150 FMUL S6, S0, S7
	0x036E3154 FMUL S0, S0, S4
	0x036E3158 FMUL S4, S1, S4
	0x036E315C FMUL S1, S1, S7
	0x036E3160 LDP V7, V16, [X20 + 0x10]
	0x036E3164 FMUL S2, S2, S5
	0x036E3168 LDR V5, [X20]
	0x036E316C FSUB S0, S3, S0
	0x036E3170 STP V7, V16, [X31 + 0x270]
	0x036E3174 FADD S16, S17, S18
	0x036E3178 FADD S17, S21, S22
	0x036E317C FADD S18, S25, S26
	0x036E3180 FADD S3, S19, S16
	0x036E3184 FADD S16, S23, S17
	0x036E3188 FADD S6, S6, S18
	0x036E318C FSUB S0, S0, S1
	0x036E3190 ADD X1, X31, 0x260
	0x036E3194 MOV X2, X31
	0x036E3198 STR X8, [X31 + 0x290]
	0x036E319C FSUB S13, S3, S20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCFE000
	005 Move X20, 0xA5E000
	006 Move W8, [X19+2826]
	007 Move X20, [X20+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA5E000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2826], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x036E31A0 FSUB S14, S16, S24
	0x036E31A4 FSUB S15, S6, S4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <AppendModifierVolumes>b__84_0(Unity.AI.Navigation.NavMeshModifierVolume x)

Disassembly:
	0x036E31A8 FSUB S9, S0, S2
	0x036E31AC STR V5, [X31 + 0x26]
	0x036E31B0 BL 0x3BF9750
	0x036E31B4 STR S0, [X31]
	0x036E31B8 LDR V0, [X31 + 0xC]
	0x036E31BC MOV V1.16B, V10.16B
	0x036E31C0 MOV V2.16B, V11.16B
	0x036E31C4 MOV V3.16B, V12.16B
	0x036E31C8 MOV V4.16B, V13.16B
	0x036E31CC MOV V5.16B, V14.16B

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X0, X1
	005 Move X1, X31
	006 Call Behaviour.get_isActiveAndEnabled, X0
	007 NotImplemented "Instruction ORN not yet implemented."
	008 And W0, W8, 1
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean <CollectSources>b__85_0(Unity.AI.Navigation.NavMeshModifier x)

Disassembly:
	0x036E31D0 MOV V6.16B, V15.16B
	0x036E31D4 MOV V7.16B, V9.16B
	0x036E31D8 MOV X0, X31
	0x036E31DC BL 0x3C2A4A0
	0x036E31E0 MOV V9.16B, V0.16B
	0x036E31E4 MOV V10.16B, V1.16B
	0x036E31E8 MOV V11.16B, V2.16B
	0x036E31EC LDR X8, [X20 + 0x30]
	0x036E31F0 LDP V2, V0, [X20 + 0x10]
	0x036E31F4 LDR V1, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X0, X1
	005 Move X1, X31
	006 Call Behaviour.get_isActiveAndEnabled, X0
	007 NotImplemented "Instruction ORN not yet implemented."
	008 And W0, W8, 1
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean <CollectSources>b__85_1(UnityEngine.AI.NavMeshBuildSource x)

Disassembly:
	0x036E31F8 ADD X1, X31, 0x260
	0x036E31FC STR X8, [X31 + 0xC0]
	0x036E3200 STP V2, V0, [X31 + 0xA0]
	0x036E3204 STR V1, [X31 + 0x9]
	0x036E3208 LDR X8, [X20 + 0x30]
	0x036E320C LDP V1, V0, [X20 + 0x10]
	0x036E3210 LDR V2, [X20]
	0x036E3214 MOV X0, X19
	0x036E3218 MOV X2, X31
	0x036E321C MOV V12.16B, V3.16B
	0x036E3220 STR X8, [X31 + 0x290]
	0x036E3224 STP V1, V0, [X31 + 0x270]
	0x036E3228 STR V2, [X31 + 0x26]
	0x036E322C BL 0x3BF871C
	0x036E3230 MOV V4.16B, V9.16B
	0x036E3234 MOV V5.16B, V10.16B
	0x036E3238 MOV V6.16B, V11.16B
	0x036E323C MOV V7.16B, V12.16B
	0x036E3240 MOV X0, X31
	0x036E3244 STR S8, [X31]
	0x036E3248 BL 0x3C2A4A0
	0x036E324C LDP V4, V5, [X31 + 0x90]
	0x036E3250 LDR V6, [X31 + 0xB]
	0x036E3254 LDR X8, [X31 + 0xC0]
	0x036E3258 ADD X1, X31, 0x260
	0x036E325C MOV X0, X19
	0x036E3260 MOV X2, X31
	0x036E3264 STP V4, V5, [X31 + 0x260]
	0x036E3268 STR V6, [X31 + 0x28]
	0x036E326C STR X8, [X31 + 0x290]
	0x036E3270 BL 0x3BF87A4
	0x036E3274 B 0x36E32E0
	0x036E3278 LDR X8, [X20 + 0x30]
	0x036E327C LDP V1, V0, [X20 + 0x10]
	0x036E3280 LDR V2, [X20]
	0x036E3284 ADD X1, X31, 0x260
	0x036E3288 STR X8, [X31 + 0x80]
	0x036E328C STP V1, V0, [X31 + 0x60]
	0x036E3290 STR V2, [X31 + 0x5]
	0x036E3294 LDR X8, [X20 + 0x30]
	0x036E3298 LDP V1, V0, [X20 + 0x10]
	0x036E329C LDR V2, [X20]
	0x036E32A0 MOV X0, X19
	0x036E32A4 MOV X2, X31
	0x036E32A8 STR X8, [X31 + 0x290]
	0x036E32AC STP V1, V0, [X31 + 0x270]
	0x036E32B0 STR V2, [X31 + 0x26]
	0x036E32B4 BL 0x3BF8990
	0x036E32B8 LDP V4, V5, [X31 + 0x50]
	0x036E32BC LDR V6, [X31 + 0x7]
	0x036E32C0 LDR X8, [X31 + 0x80]
	0x036E32C4 ADD X1, X31, 0x260
	0x036E32C8 MOV X0, X19
	0x036E32CC MOV X2, X31
	0x036E32D0 STP V4, V5, [X31 + 0x260]
	0x036E32D4 STR V6, [X31 + 0x28]
	0x036E32D8 STR X8, [X31 + 0x290]
	0x036E32DC BL 0x3BF8A18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCFE000
	006 Move X21, 0xA11000
	007 Move W8, [X20+2827]
	008 Move X21, [X21+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA5E000
	015 Move X0, [X0+1776]
	016 Call 0x1C17CF4
	017 Move X0, 0xA11000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2827], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call NavMeshBuildSource.get_component, X0
	025 Move X8, [X21]
	026 Move X20, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {69}
	040 Move X0, X19
	041 Move X1, X31
	042 Call NavMeshBuildSource.get_component, X0
	043 Compare X0, 0
	044 JumpIfEqual {75}
	045 Move X1, X31
	046 Call Component.get_gameObject, X0
	047 Compare X0, 0
	048 JumpIfEqual {75}
	049 Move X8, 0xA5E000
	050 Move X8, [X8+1776]
	051 Move X1, [X8]
	052 Call 0x21E62E4, X0
	053 Move X8, [X21]
	054 Move X19, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X1, X31
	064 Move X2, X31
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Call Object.op_Inequality, X0, X1
	068 Return X0
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move W0, W31
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return X0
	075 Call 0x1C17F20

Method: System.Boolean <CollectSources>b__85_2(UnityEngine.AI.NavMeshBuildSource x)

Disassembly:
	0x036E32E0 ADD X31, X31, 0x2A0
	0x036E32E4 LDP X20, X19, [X31 + 0x50]
	0x036E32E8 LDP X29, X30, [X31 + 0x40]
	0x036E32EC LDP D9, D8, [X31 + 0x30]
	0x036E32F0 LDP D11, D10, [X31 + 0x20]
	0x036E32F4 LDP D13, D12, [X31 + 0x10]
	0x036E32F8 LDP D15, D14, [X31], #0x60
	0x036E32FC RET
	0x036E3300 SUB X31, X31, 0x50
	0x036E3304 STR X30, [X31 + 0x40]
	0x036E3308 LDR X8, [X1 + 0x30]
	0x036E330C LDP V1, V0, [X1 + 0x10]
	0x036E3310 LDR V2, [X1]
	0x036E3314 ADD X1, X31, 0x0
	0x036E3318 MOV X2, X31
	0x036E331C STR X8, [X31 + 0x30]
	0x036E3320 STP V1, V0, [X31 + 0x10]
	0x036E3324 STR V2, [X31]
	0x036E3328 BL 0x3BF9750
	0x036E332C LDR X30, [X31 + 0x40]
	0x036E3330 ADD X31, X31, 0x50
	0x036E3334 RET
	0x036E3338 SUB X31, X31, 0x50
	0x036E333C STR X30, [X31 + 0x40]
	0x036E3340 LDR X8, [X1 + 0x30]
	0x036E3344 LDP V1, V0, [X1 + 0x10]
	0x036E3348 LDR V2, [X1]
	0x036E334C ADD X1, X31, 0x0
	0x036E3350 MOV X2, X31
	0x036E3354 STR X8, [X31 + 0x30]
	0x036E3358 STP V1, V0, [X31 + 0x10]
	0x036E335C STR V2, [X31]
	0x036E3360 BL 0x3BF9B18
	0x036E3364 LDR X30, [X31 + 0x40]
	0x036E3368 AND W0, W0, 0x1
	0x036E336C ADD X31, X31, 0x50
	0x036E3370 RET
	0x036E3374 SUB X31, X31, 0x90
	0x036E3378 STR X30, [X31 + 0x80]
	0x036E337C LDRB W8, [X0 + 0x14]
	0x036E3380 CMP W8, 0x1
	0x036E3384 B.NE 0x36E33B0
	0x036E3388 LDR X8, [X1 + 0x30]
	0x036E338C LDP V1, V0, [X1 + 0x10]
	0x036E3390 LDR V2, [X1]
	0x036E3394 ADD X1, X31, 0x0
	0x036E3398 MOV X2, X31
	0x036E339C STR X8, [X31 + 0x30]
	0x036E33A0 STP V1, V0, [X31 + 0x10]
	0x036E33A4 STR V2, [X31]
	0x036E33A8 BL 0x3BF85E4
	0x036E33AC B 0x36E33D8
	0x036E33B0 LDP V2, V0, [X1 + 0x10]
	0x036E33B4 LDR X8, [X1 + 0x30]
	0x036E33B8 LDR V1, [X1]
	0x036E33BC ADD X0, X0, 0xC
	0x036E33C0 ADD X1, X31, 0x40
	0x036E33C4 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCFE000
	006 Move X21, 0xA11000
	007 Move W8, [X20+2828]
	008 Move X21, [X21+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA5E000
	015 Move X0, [X0+1784]
	016 Call 0x1C17CF4
	017 Move X0, 0xA11000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2828], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call NavMeshBuildSource.get_component, X0
	025 Move X8, [X21]
	026 Move X20, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {69}
	040 Move X0, X19
	041 Move X1, X31
	042 Call NavMeshBuildSource.get_component, X0
	043 Compare X0, 0
	044 JumpIfEqual {75}
	045 Move X1, X31
	046 Call Component.get_gameObject, X0
	047 Compare X0, 0
	048 JumpIfEqual {75}
	049 Move X8, 0xA5E000
	050 Move X8, [X8+1784]
	051 Move X1, [X8]
	052 Call 0x21E62E4, X0
	053 Move X8, [X21]
	054 Move X19, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X1, X31
	064 Move X2, X31
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Call Object.op_Inequality, X0, X1
	068 Return X0
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move W0, W31
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return X0
	075 Call 0x1C17F20

