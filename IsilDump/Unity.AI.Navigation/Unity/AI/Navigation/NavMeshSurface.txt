Type: Unity.AI.Navigation.NavMeshSurface

Method: System.Int32 get_agentTypeID()

Disassembly:
	0x036E08A0 B 0x36E0774
	0x036E08A4 LDR X8, [X10 + 0x20]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_agentTypeID(System.Int32 value)

Disassembly:
	0x036E08A8 LDP V0, V1, [X31 + 0x170]
	0x036E08AC LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: Unity.AI.Navigation.CollectObjects get_collectObjects()

Disassembly:
	0x036E08B0 LDR X2, [X8 + 0x70]
	0x036E08B4 STP V0, V1, [X31 + 0x190]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_collectObjects(Unity.AI.Navigation.CollectObjects value)

Disassembly:
	0x036E08B8 ADD X1, X31, 0x190
	0x036E08BC MOV X0, X21

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: UnityEngine.Vector3 get_size()

Disassembly:
	0x036E08C0 BL 0x300A3DC
	0x036E08C4 B 0x36E0774
	0x036E08C8 LDR X1, [X26]

ISIL:
	001 Move S0, [X0+40]
	002 Move S1, [X0+44]
	003 Move V2, [X0+48]
	004 Return X0

Method: System.Void set_size(UnityEngine.Vector3 value)

Disassembly:
	0x036E08CC ADD X0, X31, 0x150
	0x036E08D0 BL 0x2BC434C
	0x036E08D4 LDR W8, [X19 + 0x24]

ISIL:
	001 Move [X0+40], S0
	002 Move [X0+48], S1
	003 Move [X0+48], S2
	004 Return 

Method: UnityEngine.Vector3 get_center()

Disassembly:
	0x036E08D8 CMP W8, 0x3
	0x036E08DC B.HI 0x36E0AE8
	0x036E08E0 ADRP X9, 0xFFFFFFFFFD4B7000

ISIL:
	001 Move S0, [X0+52]
	002 Move S1, [X0+56]
	003 Move V2, [X0+60]
	004 Return X0

Method: System.Void set_center(UnityEngine.Vector3 value)

Disassembly:
	0x036E08E4 ADD X9, X9, 0x80A
	0x036E08E8 ADR X10, 0x10
	0x036E08EC LDRB W11, [X9, X8, LSL]

ISIL:
	001 Move [X0+52], S0
	002 Move [X0+60], S1
	003 Move [X0+60], S2
	004 Return 

Method: UnityEngine.LayerMask get_layerMask()

Disassembly:
	0x036E08F0 ADD X10, X10, X11, 0x2, LSL
	0x036E08F4 BR X10

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_layerMask(UnityEngine.LayerMask value)

Disassembly:
	0x036E08F8 LDR W0, [X19 + 0x40]
	0x036E08FC MOV X1, X31

ISIL:
	001 Move [X0+64], W1
	002 Return 

Method: UnityEngine.AI.NavMeshCollectGeometry get_useGeometry()

Disassembly:
	0x036E0900 BL 0x3C35CB8
	0x036E0904 LDP W2, W3, [X19 + 0x44]

ISIL:
	001 Move W0, [X0+68]
	002 Return X0

Method: System.Void set_useGeometry(UnityEngine.AI.NavMeshCollectGeometry value)

Disassembly:
	0x036E0908 LDRB W4, [X19 + 0x4C]
	0x036E090C MOV W1, W0

ISIL:
	001 Move [X0+68], W1
	002 Return 

Method: System.Int32 get_defaultArea()

Disassembly:
	0x036E0910 MOV X0, X31
	0x036E0914 STR X31, [X31]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_defaultArea(System.Int32 value)

Disassembly:
	0x036E0918 B 0x36E0950
	0x036E091C MOV X0, X19

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.Boolean get_ignoreNavMeshAgent()

Disassembly:
	0x036E0920 MOV X1, X31
	0x036E0924 BL 0x3C32E90

ISIL:
	001 Move W0, [X0+77]
	002 Return X0

Method: System.Void set_ignoreNavMeshAgent(System.Boolean value)

Disassembly:
	0x036E0928 LDR W8, [X19 + 0x40]
	0x036E092C MOV X22, X0
	0x036E0930 MOV X1, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+77], W8
	003 Return 

Method: System.Boolean get_ignoreNavMeshObstacle()

Disassembly:
	0x036E0934 MOV X0, X8
	0x036E0938 BL 0x3C35CB8

ISIL:
	001 Move W0, [X0+78]
	002 Return X0

Method: System.Void set_ignoreNavMeshObstacle(System.Boolean value)

Disassembly:
	0x036E093C LDP W2, W3, [X19 + 0x44]
	0x036E0940 LDRB W4, [X19 + 0x4C]
	0x036E0944 MOV W1, W0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+78], W8
	003 Return 

Method: System.Boolean get_overrideTileSize()

Disassembly:
	0x036E0948 STR X31, [X31]
	0x036E094C MOV X0, X22

ISIL:
	001 Move W0, [X0+79]
	002 Return X0

Method: System.Void set_overrideTileSize(System.Boolean value)

Disassembly:
	0x036E0950 MOV X5, X21
	0x036E0954 MOV W6, W31
	0x036E0958 B 0x36E0984

ISIL:
	001 And W8, W1, 1
	002 Move [X0+79], W8
	003 Return 

Method: System.Int32 get_tileSize()

Disassembly:
	0x036E095C LDR W0, [X19 + 0x40]
	0x036E0960 MOV X1, X31

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_tileSize(System.Int32 value)

Disassembly:
	0x036E0964 BL 0x3C35CB8
	0x036E0968 LDP W2, W3, [X19 + 0x44]

ISIL:
	001 Move [X0+80], W1
	002 Return 

Method: System.Boolean get_overrideVoxelSize()

Disassembly:
	0x036E096C LDRB W4, [X19 + 0x4C]
	0x036E0970 MOV W1, W0

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_overrideVoxelSize(System.Boolean value)

Disassembly:
	0x036E0974 MOVZ W6, 0x1
	0x036E0978 MOV X0, X31
	0x036E097C MOV X5, X21

ISIL:
	001 And W8, W1, 1
	002 Move [X0+84], W8
	003 Return 

Method: System.Single get_voxelSize()

Disassembly:
	0x036E0980 STR X31, [X31]
	0x036E0984 MOV X7, X20

ISIL:
	001 Move V0, [X0+88]
	002 Return V0

Method: System.Void set_voxelSize(System.Single value)

Disassembly:
	0x036E0988 BL 0x3BE0C48
	0x036E098C B 0x36E0AE8

ISIL:
	001 Move [X0+88], S0
	002 Return 

Method: System.Single get_minRegionArea()

Disassembly:
	0x036E0990 MOV X0, X19
	0x036E0994 MOV X1, X31

ISIL:
	001 Move V0, [X0+92]
	002 Return V0

Method: System.Void set_minRegionArea(System.Single value)

Disassembly:
	0x036E0998 BL 0x3C32E90
	0x036E099C CBZ X0, 0x36E0C50

ISIL:
	001 Move [X0+92], S0
	002 Return 

Method: System.Boolean get_buildHeightMesh()

Disassembly:
	0x036E09A0 MOV X1, X31
	0x036E09A4 BL 0x3C3F58C

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_buildHeightMesh(System.Boolean value)

Disassembly:
	0x036E09A8 MOV X0, X19
	0x036E09AC MOV X1, X31
	0x036E09B0 MOV V8.16B, V0.16B

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: UnityEngine.AI.NavMeshData get_navMeshData()

Disassembly:
	0x036E09B4 MOV V9.16B, V1.16B
	0x036E09B8 MOV V10.16B, V2.16B

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_navMeshData(UnityEngine.AI.NavMeshData value)

Disassembly:
	0x036E09BC BL 0x3C32E90
	0x036E09C0 CBZ X0, 0x36E0C50

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: UnityEngine.AI.NavMeshDataInstance get_navMeshDataInstance()

Disassembly:
	0x036E09C4 MOV X1, X31
	0x036E09C8 BL 0x3C3DEB4

ISIL:
	001 Move W0, [X0+108]
	002 Return X0

Method: System.Collections.Generic.List`1<Unity.AI.Navigation.NavMeshSurface> get_activeSurfaces()

Disassembly:
	0x036E09CC ADRP X22, 0xCF8000
	0x036E09D0 LDRB W8, [X22 + 0x85B]
	0x036E09D4 MOV V11.16B, V0.16B
	0x036E09D8 MOV V12.16B, V1.16B
	0x036E09DC MOV V13.16B, V2.16B
	0x036E09E0 MOV V14.16B, V3.16B
	0x036E09E4 CBNZ W8, 0x36E09FC
	0x036E09E8 ADRP X0, 0xA13000
	0x036E09EC LDR X0, [X0 + 0x5A0]
	0x036E09F0 BL 0x1C16CF4
	0x036E09F4 MOVZ W8, 0x1
	0x036E09F8 STRB W8, [X22 + 0x85B]
	0x036E09FC ADRP X8, 0xA13000
	0x036E0A00 LDR X8, [X8 + 0x5A0]
	0x036E0A04 MOV V1.16B, V9.16B
	0x036E0A08 MOV V2.16B, V10.16B
	0x036E0A0C MOV V3.16B, V11.16B
	0x036E0A10 LDR X8, [X8]
	0x036E0A14 MOV V4.16B, V12.16B
	0x036E0A18 MOV V5.16B, V13.16B
	0x036E0A1C MOV V6.16B, V14.16B
	0x036E0A20 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD01000
	005 Move X19, 0xA61000
	006 Move W8, [X20+2811]
	007 Move X19, [X19+1424]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA61000
	013 Move X0, [X0+1424]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2811], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.Bounds GetInflatedBounds()

Disassembly:
	0x036E0A24 MOV X0, X31
	0x036E0A28 LDR V0, [X8 + 0x14]
	0x036E0A2C LDUR X9, [X8 + 0xC]
	0x036E0A30 ADD X8, X31, 0xB0
	0x036E0A34 STR S0, [X31 + 0x8]
	0x036E0A38 MOV V0.16B, V8.16B
	0x036E0A3C STR X9, [X31]
	0x036E0A40 BL 0x3C26FA8
	0x036E0A44 LDP V0, V1, [X31 + 0xB0]
	0x036E0A48 LDP V2, V3, [X31 + 0xD0]
	0x036E0A4C ADD X8, X31, 0xB0
	0x036E0A50 MOV X0, X19
	0x036E0A54 STP V0, V1, [X31 + 0xF0]
	0x036E0A58 STP V2, V3, [X31 + 0x110]
	0x036E0A5C BL 0x36DFA24
	0x036E0A60 ADRP X8, 0xA60000
	0x036E0A64 LDR X8, [X8 + 0x590]
	0x036E0A68 LDR X0, [X8]
	0x036E0A6C LDR W8, [X0 + 0xE0]
	0x036E0A70 CBNZ W8, 0x36E0A78
	0x036E0A74 BL 0x1C16DFC
	0x036E0A78 LDR X8, [X31 + 0xC0]
	0x036E0A7C LDP V0, V1, [X31 + 0xF0]
	0x036E0A80 LDP V2, V3, [X31 + 0x110]
	0x036E0A84 LDR V4, [X31 + 0xB]
	0x036E0A88 STR X8, [X31 + 0x40]
	0x036E0A8C ADD X8, X31, 0x98
	0x036E0A90 ADD X0, X31, 0x50
	0x036E0A94 ADD X1, X31, 0x30
	0x036E0A98 STP V0, V1, [X31 + 0x50]
	0x036E0A9C STP V2, V3, [X31 + 0x70]
	0x036E0AA0 STR V4, [X31 + 0x3]
	0x036E0AA4 BL 0x36E1D24
	0x036E0AA8 LDR W0, [X19 + 0x40]
	0x036E0AAC MOV X1, X31
	0x036E0AB0 BL 0x3C35CB8
	0x036E0AB4 LDP W2, W3, [X19 + 0x44]
	0x036E0AB8 LDUR V0, [X31 + 0x98]
	0x036E0ABC LDR X8, [X31 + 0xA8]
	0x036E0AC0 LDRB W4, [X19 + 0x4C]
	0x036E0AC4 MOV W1, W0
	0x036E0AC8 ADD X0, X31, 0x10
	0x036E0ACC MOV X5, X21
	0x036E0AD0 MOV W6, W31
	0x036E0AD4 MOV X7, X20
	0x036E0AD8 STR V0, [X31 + 0x1]
	0x036E0ADC STR X8, [X31 + 0x20]
	0x036E0AE0 STR X31, [X31]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+144], X20
	004 Move [X31+152], X19
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move [X31+96], V0
	007 Move [X31+104], V0
	008 Move [X31+64], V0
	009 Move [X31+72], V0
	010 Move X20, X0
	011 Move W0, [X0+32]
	012 Move X19, X8
	013 Add X8, X31, 0
	014 Move X1, X31
	015 Call NavMesh.GetSettingsByID, X0
	016 Move V0, [X31]
	017 Move V1, [X31+16]
	018 Move V2, [X31+32]
	019 Move V3, [X31+48]
	020 Add X0, X31, 64
	021 Move X1, X31
	022 Move [X31+64], V0
	023 Move [X31+72], V1
	024 Move [X31+96], V2
	025 Move [X31+104], V3
	026 Call NavMeshBuildSettings.get_agentTypeID, X0
	027 Add W31, W0, 1
	028 Add X0, X31, 64
	029 Move X1, X31
	030 Call NavMeshBuildSettings.get_agentRadius, X0
	031 Move S1, 0.5
	032 Multiply S0, S0, S1
	033 Move S0, W31
	034 Move V2, [X20+40]
	035 Move V4, [X20+48]
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move V3, [X20+60]
	039 NotImplemented "Instruction INVALID not yet implemented."
	040 Move S5, 0.5
	041 Multiply S4, S4, S5
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move V5.S[0], V0.S[0]
	044 Move [X19], D1
	045 Add V1, V5, V2
	046 Add S0, S0, S4
	047 Move [X19+8], S3
	048 Move [X19+12], D1
	049 Move [X19+20], S0
	050 Move X20, [X31+144]
	051 Move X19, [X31+152]
	052 Move X30, [X31+128]
	053 Add X31, X31, 160
	054 Return X0

Method: System.Void OnEnable()

Disassembly:
	0x036E0AE4 BL 0x3BE0990
	0x036E0AE8 LDRB W8, [X19 + 0x4D]
	0x036E0AEC CBZ W8, 0x36E0B74
	0x036E0AF0 LDR X0, [X25]
	0x036E0AF4 LDR W8, [X0 + 0xE0]
	0x036E0AF8 CBNZ W8, 0x36E0B04
	0x036E0AFC BL 0x1C16DFC
	0x036E0B00 LDR X0, [X25]
	0x036E0B04 LDR X8, [X0 + 0xB8]
	0x036E0B08 LDR X21, [X8 + 0x18]
	0x036E0B0C CBNZ X21, 0x36E0B60
	0x036E0B10 LDR W8, [X0 + 0xE0]
	0x036E0B14 CBNZ W8, 0x36E0B20
	0x036E0B18 BL 0x1C16DFC
	0x036E0B1C LDR X0, [X25]
	0x036E0B20 ADRP X9, 0xA60000
	0x036E0B24 LDR X8, [X0 + 0xB8]
	0x036E0B28 LDR X9, [X9 + 0x630]
	0x036E0B2C LDR X22, [X8]
	0x036E0B30 LDR X0, [X9]
	0x036E0B34 BL 0x1C16F10
	0x036E0B38 ADRP X8, 0xA60000
	0x036E0B3C LDR X8, [X8 + 0x648]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD01000
	006 Move X21, 0xA61000
	007 Move W8, [X20+2812]
	008 Move X21, [X21+1424]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA61000
	015 Move X0, [X0+1424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2812], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call NavMeshSurface.Register, X0
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call NavMeshSurface.AddData, X0
	032 Return 

Method: System.Void OnDisable()

Disassembly:
	0x036E0EAC ADD X0, X31, 0x4C0
	0x036E0EB0 MOV X1, X31
	0x036E0EB4 STUR V0, [X24 + 0x18]
	0x036E0EB8 STUR V1, [X24 + 0x28]
	0x036E0EBC STUR V2, [X24 + 0x38]
	0x036E0EC0 STUR V3, [X24 + 0x48]
	0x036E0EC4 BL 0x3C271CC
	0x036E0EC8 LDP V0, V1, [X25 + 0x40]
	0x036E0ECC LDP V2, V3, [X25 + 0x60]
	0x036E0ED0 STR X31, [X31 + 0x4B8]
	0x036E0ED4 STR X31, [X31 + 0x4A8]
	0x036E0ED8 STUR V0, [X24 + 0x18]
	0x036E0EDC STUR V1, [X24 + 0x28]
	0x036E0EE0 STUR V2, [X24 + 0x38]
	0x036E0EE4 STUR V3, [X24 + 0x48]
	0x036E0EE8 STR X31, [X31 + 0x4B0]
	0x036E0EEC CBZ X21, 0x36E1448
	0x036E0EF0 ADRP X8, 0xA60000
	0x036E0EF4 LDR X8, [X8 + 0x678]
	0x036E0EF8 ADRP X28, 0xA60000
	0x036E0EFC ADRP X29, 0xA60000
	0x036E0F00 LDR X28, [X28 + 0x668]
	0x036E0F04 LDR X29, [X29 + 0x590]
	0x036E0F08 LDR X1, [X8]
	0x036E0F0C ADD X8, X31, 0x360

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD01000
	006 Move X20, 0xA61000
	007 Move W8, [X21+2813]
	008 Move X20, [X20+1424]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA61000
	015 Move X0, [X0+1424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2813], W8
	019 Add X0, X19, 108
	020 Move X1, X31
	021 Call NavMeshDataInstance.Remove, X0
	022 Move [X19+108], W31
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call NavMeshSurface.Unregister, X0
	034 Return 

Method: System.Void AddData()

Disassembly:
	0x036E0D50 ADRP X0, 0xA60000
	0x036E0D54 LDR X0, [X0 + 0x660]
	0x036E0D58 BL 0x1C16CF4
	0x036E0D5C ADRP X0, 0xA60000
	0x036E0D60 LDR X0, [X0 + 0x668]
	0x036E0D64 BL 0x1C16CF4
	0x036E0D68 ADRP X0, 0xA60000
	0x036E0D6C LDR X0, [X0 + 0x670]
	0x036E0D70 BL 0x1C16CF4
	0x036E0D74 ADRP X0, 0xA60000
	0x036E0D78 LDR X0, [X0 + 0x678]
	0x036E0D7C BL 0x1C16CF4
	0x036E0D80 ADRP X0, 0xA1A000
	0x036E0D84 LDR X0, [X0 + 0x700]
	0x036E0D88 BL 0x1C16CF4
	0x036E0D8C ADRP X0, 0xA60000
	0x036E0D90 LDR X0, [X0 + 0x590]
	0x036E0D94 BL 0x1C16CF4
	0x036E0D98 ADRP X0, 0xA60000
	0x036E0D9C LDR X0, [X0 + 0x680]
	0x036E0DA0 BL 0x1C16CF4
	0x036E0DA4 MOVZ W8, 0x1
	0x036E0DA8 STRB W8, [X19 + 0xB08]
	0x036E0DAC MOVI V0.2D, 0x0
	0x036E0DB0 MOV X0, X20
	0x036E0DB4 MOV X1, X31
	0x036E0DB8 STR X31, [X31 + 0x4B0]
	0x036E0DBC STR X31, [X31 + 0x4A8]
	0x036E0DC0 STR X31, [X31 + 0x4B8]
	0x036E0DC4 STUR V0, [X24 + 0x48]
	0x036E0DC8 STUR V0, [X24 + 0x38]
	0x036E0DCC STUR V0, [X24 + 0x28]
	0x036E0DD0 STUR V0, [X24 + 0x18]
	0x036E0DD4 STP V0, V0, [X25 + 0x160]
	0x036E0DD8 STP V0, V0, [X25 + 0x140]
	0x036E0DDC STP V0, V0, [X25 + 0x120]
	0x036E0DE0 STP V0, V0, [X25 + 0x100]
	0x036E0DE4 STP V0, V0, [X25 + 0xE0]
	0x036E0DE8 STP V0, V0, [X25 + 0xC0]
	0x036E0DEC STR V0, [X25 + 0xB]
	0x036E0DF0 BL 0x3C32E90
	0x036E0DF4 CBZ X0, 0x36E1448
	0x036E0DF8 MOV X1, X31
	0x036E0DFC BL 0x3C3F58C
	0x036E0E00 MOV X0, X20
	0x036E0E04 MOV X1, X31
	0x036E0E08 MOV V8.16B, V0.16B
	0x036E0E0C MOV V9.16B, V1.16B
	0x036E0E10 MOV V10.16B, V2.16B
	0x036E0E14 BL 0x3C32E90
	0x036E0E18 CBZ X0, 0x36E1448
	0x036E0E1C MOV X1, X31
	0x036E0E20 BL 0x3C3DEB4
	0x036E0E24 ADRP X19, 0xCF8000
	0x036E0E28 LDRB W8, [X19 + 0x85B]
	0x036E0E2C MOV V11.16B, V0.16B
	0x036E0E30 MOV V12.16B, V1.16B
	0x036E0E34 MOV V13.16B, V2.16B
	0x036E0E38 MOV V14.16B, V3.16B
	0x036E0E3C CBNZ W8, 0x36E0E54
	0x036E0E40 ADRP X0, 0xA13000
	0x036E0E44 LDR X0, [X0 + 0x5A0]
	0x036E0E48 BL 0x1C16CF4
	0x036E0E4C MOVZ W8, 0x1
	0x036E0E50 STRB W8, [X19 + 0x85B]
	0x036E0E54 STR X22, [X31 + 0x20]
	0x036E0E58 ADRP X20, 0xA13000
	0x036E0E5C LDR X20, [X20 + 0x5A0]
	0x036E0E60 MOV V1.16B, V9.16B
	0x036E0E64 MOV V2.16B, V10.16B
	0x036E0E68 MOV V3.16B, V11.16B
	0x036E0E6C LDR X8, [X20]
	0x036E0E70 MOV V4.16B, V12.16B
	0x036E0E74 MOV V5.16B, V13.16B
	0x036E0E78 MOV V6.16B, V14.16B
	0x036E0E7C LDR X8, [X8 + 0xB8]
	0x036E0E80 MOV X0, X31
	0x036E0E84 LDR V0, [X8 + 0x14]
	0x036E0E88 LDUR X9, [X8 + 0xC]
	0x036E0E8C ADD X8, X31, 0x360
	0x036E0E90 STR S0, [X31 + 0x8]
	0x036E0E94 MOV V0.16B, V8.16B
	0x036E0E98 STR X9, [X31]
	0x036E0E9C BL 0x3C26FA8
	0x036E0EA0 LDP V0, V1, [X25 + 0x40]
	0x036E0EA4 LDP V2, V3, [X25 + 0x60]
	0x036E0EA8 ADD X8, X31, 0x360

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD01000
	009 Move W8, [X20+2814]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA14000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2814], W8
	020 Add X20, X19, 108
	021 Move X0, X20
	022 Move X1, X31
	023 Call NavMeshDataInstance.get_valid, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {102}
	028 Move X8, 0xA14000
	029 Move X8, [X8+1432]
	030 Move X21, [X19+96]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X21
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {81}
	044 Move X21, [X19+96]
	045 Move X0, X19
	046 Move X1, X31
	047 Call Component.get_transform, X0
	048 Compare X0, 0
	049 JumpIfEqual {110}
	050 Move X1, X31
	051 Call Transform.get_position, X0
	052 Move X0, X19
	053 Move X1, X31
	054 Move V8, V0
	055 Move V9, V1
	056 Move V10, V2
	057 Call Component.get_transform, X0
	058 Compare X0, 0
	059 JumpIfEqual {110}
	060 Move X1, X31
	061 Call Transform.get_rotation, X0
	062 Move V4, V0
	063 Move V5, V1
	064 Move V6, V2
	065 Move V7, V3
	066 Move X0, X21
	067 Move V0, V8
	068 Move V1, V9
	069 Move V2, V10
	070 Move V3, V4
	071 Move V4, V5
	072 Move V5, V6
	073 Move V6, V7
	074 Move X1, X31
	075 Call NavMesh.AddNavMeshData, X0, X1, X2
	076 Move [X19+108], W0
	077 Move X0, X20
	078 Move X1, X19
	079 Move X2, X31
	080 Call NavMeshDataInstance.set_owner, X0, X1
	081 Move X0, X19
	082 Move X1, X31
	083 Call Component.get_transform, X0
	084 Compare X0, 0
	085 JumpIfEqual {110}
	086 Move X1, X31
	087 Call Transform.get_position, X0
	088 Move X0, X19
	089 Move X1, X31
	090 Move [X19+112], S0
	091 Move [X19+120], S1
	092 Move [X19+120], S2
	093 Call Component.get_transform, X0
	094 Compare X0, 0
	095 JumpIfEqual {110}
	096 Move X1, X31
	097 Call Transform.get_rotation, X0
	098 Move [X19+124], S0
	099 Move [X19+132], S1
	100 Move [X19+132], S2
	101 Move [X19+140], S3
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X30, [X31+32]
	105 Move X21, [X31+40]
	106 Move D9, [X31+16]
	107 Move D8, [X31+24]
	108 Move V10, [X31+64]
	109 Return 
	110 Call 0x1C17F20

Method: System.Void RemoveData()

Disassembly:
	0x036E0F10 MOV X0, X21
	0x036E0F14 ADD X26, X31, 0x248
	0x036E0F18 ADD X27, X31, 0x80
	0x036E0F1C BL 0x300E1E8
	0x036E0F20 ADD X0, X31, 0x430
	0x036E0F24 ADD X1, X31, 0x360
	0x036E0F28 MOVZ W2, 0x70
	0x036E0F2C ADD X19, X31, 0x430

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 108
	005 Move X1, X31
	006 Call NavMeshDataInstance.Remove, X0
	007 Move [X19+108], W31
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: UnityEngine.AI.NavMeshBuildSettings GetBuildSettings()

Disassembly:
	0x036E1094 LDR V4, [X31 + 0x4A8]
	0x036E1098 LDUR V5, [X24 + 0xC]
	0x036E109C FSUB S17, S2, S3
	0x036E10A0 FSUB S19, S6, S7
	0x036E10A4 FSUB V16.2S, V0.2S, V1.2S
	0x036E10A8 FSUB V18.2S, V4.2S, V5.2S
	0x036E10AC FADD V4.2S, V4.2S, V5.2S
	0x036E10B0 FADD S5, S6, S7
	0x036E10B4 FCMP S19, S17
	0x036E10B8 FADD V0.2S, V0.2S, V1.2S
	0x036E10BC FADD S1, S2, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x036E10C8 FCSEL S6, S19, S17, MI
	0x036E10CC FCMP S5, S17
	0x00000000 INVALID
	0x00000000 INVALID
	0x036E10D8 FCSEL S4, S5, S17, GT
	0x036E10DC FSUB V3.2S, V3.2S, V2.2S
	0x036E10E0 FSUB S4, S4, S6
	0x00000000 INVALID
	0x036E10E8 FMUL S4, S4, S14
	0x036E10EC FADD V2.2S, V2.2S, V3.2S
	0x036E10F0 FADD S5, S6, S4
	0x036E10F4 FSUB V6.2S, V2.2S, V3.2S
	0x036E10F8 FADD V2.2S, V3.2S, V2.2S
	0x036E10FC FSUB S3, S5, S4
	0x00000000 INVALID
	0x036E1104 FADD S4, S4, S5
	0x00000000 INVALID
	0x036E110C FCMP S3, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x036E1118 FCSEL S2, S3, S1, MI
	0x036E111C FCMP S4, S1
	0x036E1120 FSUB V0.2S, V0.2S, V6.2S
	0x036E1124 FCSEL S1, S4, S1, GT
	0x00000000 INVALID
	0x036E112C FSUB S1, S1, S2
	0x036E1130 STUR D0, [X24 + 0xC]
	0x036E1134 FADD V0.2S, V6.2S, V0.2S
	0x036E1138 FMUL S1, S1, S14
	0x036E113C STR D0, [X31 + 0x4A8]
	0x036E1140 FADD S0, S2, S1
	0x036E1144 STR S1, [X31 + 0x4BC]
	0x036E1148 STR S0, [X31 + 0x4B0]
	0x036E114C B 0x36E0F48
	0x036E1150 CBZ W0, 0x36E1188
	0x036E1154 CMP W0, 0x1
	0x036E1158 B.NE 0x36E0F48
	0x036E115C ADD X0, X31, 0x3D0
	0x036E1160 MOV X1, X31
	0x036E1164 BL 0x3BE292C
	0x036E1168 CBZ X0, 0x36E12C0
	0x036E116C ADRP X8, 0xA5F000
	0x036E1170 LDR X8, [X8 + 0x680]
	0x036E1174 LDR X9, [X0]
	0x036E1178 LDR X8, [X8]
	0x036E117C CMP X9, X8
	0x036E1180 CSEL X22, X0, X31, EQ
	0x036E1184 B 0x36E12C4
	0x036E1188 ADD X0, X31, 0x3D0
	0x036E118C MOV X1, X31
	0x036E1190 BL 0x3BE292C
	0x036E1194 CBZ X0, 0x36E11B4
	0x036E1198 ADRP X8, 0xA19000
	0x036E119C LDR X8, [X8 + 0x700]
	0x036E11A0 LDR X9, [X0]
	0x036E11A4 LDR X8, [X8]
	0x036E11A8 CMP X9, X8
	0x036E11AC CSEL X22, X0, X31, EQ
	0x036E11B0 B 0x36E11B8
	0x036E11B4 MOV X22, X31
	0x036E11B8 LDUR V0, [X24 + 0x18]
	0x036E11BC LDUR V1, [X24 + 0x28]
	0x036E11C0 LDUR V2, [X24 + 0x38]
	0x036E11C4 LDUR V3, [X24 + 0x48]
	0x036E11C8 STP V0, V1, [X25 + 0x40]
	0x036E11CC STP V2, V3, [X25 + 0x60]
	0x036E11D0 ADD X8, X31, 0x320
	0x036E11D4 ADD X0, X31, 0x3D0
	0x036E11D8 MOV X1, X31
	0x036E11DC BL 0x3BE28D4
	0x036E11E0 LDUR V0, [X26 + 0xD8]
	0x036E11E4 LDUR V1, [X26 + 0xE8]
	0x036E11E8 LDUR V2, [X26 + 0xF8]
	0x036E11EC STUR V0, [X26 + 0x18]
	0x036E11F0 LDP V0, V3, [X25 + 0x30]
	0x036E11F4 STUR V1, [X26 + 0x28]
	0x036E11F8 STUR V2, [X26 + 0x38]
	0x036E11FC LDP V1, V2, [X25 + 0x50]
	0x036E1200 STUR V0, [X26 + 0x48]
	0x036E1204 LDR V0, [X25 + 0x7]
	0x036E1208 STUR V3, [X26 + 0x58]
	0x036E120C STUR V1, [X26 + 0x68]
	0x036E1210 STUR V2, [X26 + 0x78]
	0x036E1214 STUR V0, [X26 + 0x88]
	0x036E1218 ADD X8, X31, 0x2E0
	0x036E121C ADD X0, X31, 0x2A0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+152], X21
	004 Move [X31+160], X20
	005 Move [X31+168], X19
	006 Move X21, 0xD00000
	007 Move W9, [X21+2815]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA13000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0xA60000
	018 Move X0, [X0+1472]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2815], W8
	022 NotImplemented "Instruction MOVI not yet implemented."
	023 Move [X31+112], V0
	024 Move [X31+120], V0
	025 Move [X31+80], V0
	026 Move [X31+88], V0
	027 Move [X31+76], W31
	028 Move W0, [X20+32]
	029 Add X8, X31, 8
	030 Move X1, X31
	031 Call NavMesh.GetSettingsByID, X0
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Add X0, X31, 80
	037 Move X1, X31
	038 Move [X31+80], V0
	039 Move [X31+88], V1
	040 Move [X31+112], V2
	041 Move [X31+120], V3
	042 Call NavMeshBuildSettings.get_agentTypeID, X0
	043 Add W31, W0, 1
	044 Move W8, [X20+32]
	045 Add X0, X31, 76
	046 Move X1, X31
	047 Move [X31+76], W8
	048 Call Int32.ToString, X0
	049 Move X8, 0xA60000
	050 Move X8, [X8+1472]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X8, [X8]
	054 Move X0, X8
	055 Call String.Concat, X0, X1
	056 Move X8, 0xA13000
	057 Move X8, [X8+2600]
	058 Move X21, X0
	059 Move X8, [X8]
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X21
	066 Move X1, X20
	067 Move X2, X31
	068 Call Debug.LogWarning, X0, X1
	069 Move W1, [X20+32]
	070 Add X0, X31, 80
	071 Move X2, X31
	072 Call NavMeshBuildSettings.set_agentTypeID, X0, X1
	073 Move W8, [X20+79]
	074 Compare W8, 0
	075 JumpIfEqual {84}
	076 Add X0, X31, 80
	077 Move W1, 1
	078 Move X2, X31
	079 Call NavMeshBuildSettings.set_overrideTileSize, X0, X1
	080 Move W1, [X20+80]
	081 Add X0, X31, 80
	082 Move X2, X31
	083 Call NavMeshBuildSettings.set_tileSize, X0, X1
	084 Move W8, [X20+84]
	085 Compare W8, 0
	086 JumpIfEqual {95}
	087 Add X0, X31, 80
	088 Move W1, 1
	089 Move X2, X31
	090 Call NavMeshBuildSettings.set_overrideVoxelSize, X0, X1
	091 Move V0, [X20+88]
	092 Add X0, X31, 80
	093 Move X1, X31
	094 Call NavMeshBuildSettings.set_voxelSize, X0, V0
	095 Move V0, [X20+92]
	096 Add X0, X31, 80
	097 Move X1, X31
	098 Call NavMeshBuildSettings.set_minRegionArea, X0, V0
	099 Move W1, [X20+104]
	100 Add X0, X31, 80
	101 Move X2, X31
	102 Call NavMeshBuildSettings.set_buildHeightMesh, X0, X1
	103 Move V1, [X31+112]
	104 Move V0, [X31+128]
	105 Move V3, [X31+80]
	106 Move V2, [X31+96]
	107 Move X30, [X31+144]
	108 Move X21, [X31+152]
	109 Move [X19+32], V1
	110 Move [X19+40], V0
	111 Move [X19], V3
	112 Move [X19+8], V2
	113 Move X20, [X31+160]
	114 Move X19, [X31+168]
	115 Add X31, X31, 176
	116 Return X0

Method: System.Void BuildNavMesh()

Disassembly:
	0x036E1220 ADD X1, X31, 0x260
	0x036E1224 MOV X2, X31
	0x036E1228 BL 0x3C27F74
	0x036E122C LDUR V0, [X26 + 0x98]
	0x036E1230 LDUR V1, [X26 + 0xA8]
	0x036E1234 LDUR V2, [X26 + 0xB8]
	0x036E1238 LDUR V3, [X26 + 0xC8]
	0x036E123C STP V0, V1, [X25]
	0x036E1240 STP V2, V3, [X25 + 0x20]
	0x036E1244 CBZ X22, 0x36E1440
	0x036E1248 ADD X8, X31, 0x248
	0x036E124C MOV X0, X22
	0x036E1250 MOV X1, X31
	0x036E1254 BL 0x3C17768
	0x036E1258 ADD X8, X31, 0x149
	0x036E125C LDUR V0, [X8 + 0xFF]
	0x036E1260 LDR X8, [X31 + 0x258]
	0x036E1264 LDR X0, [X29]
	0x036E1268 STUR V0, [X26 + 0x98]
	0x036E126C STR X8, [X31 + 0x2F0]
	0x036E1270 LDR W8, [X0 + 0xE0]
	0x036E1274 CBNZ W8, 0x36E127C
	0x036E1278 BL 0x1C16DFC
	0x036E127C LDP V0, V1, [X25]
	0x036E1280 LDP V2, V3, [X25 + 0x20]
	0x036E1284 LDUR V4, [X26 + 0x98]
	0x036E1288 LDR X8, [X31 + 0x2F0]
	0x036E128C STP V0, V1, [X27 + 0x180]
	0x036E1290 STP V2, V3, [X27 + 0x1A0]
	0x036E1294 STR V4, [X27 + 0x16]
	0x036E1298 STR X8, [X31 + 0x1F0]
	0x036E129C ADD X8, X31, 0x248
	0x036E12A0 ADD X0, X31, 0x200
	0x036E12A4 ADD X1, X31, 0x1E0
	0x036E12A8 BL 0x36E1D24
	0x036E12AC LDR V0, [X31 + 0x248]
	0x036E12B0 LDUR V1, [X26 + 0xC]
	0x036E12B4 LDR V2, [X31 + 0x250]
	0x036E12B8 LDR V3, [X31 + 0x25C]
	0x036E12BC B 0x36E108C
	0x036E12C0 MOV X22, X31
	0x036E12C4 LDUR V0, [X24 + 0x18]
	0x036E12C8 LDUR V1, [X24 + 0x28]
	0x036E12CC LDUR V2, [X24 + 0x38]
	0x036E12D0 LDUR V3, [X24 + 0x48]
	0x036E12D4 STP V0, V1, [X25 + 0x40]
	0x036E12D8 STP V2, V3, [X25 + 0x60]
	0x036E12DC ADD X8, X31, 0x320
	0x036E12E0 ADD X0, X31, 0x3D0
	0x036E12E4 MOV X1, X31
	0x036E12E8 BL 0x3BE28D4
	0x036E12EC LDP V0, V1, [X25]
	0x036E12F0 LDP V2, V3, [X25 + 0x20]
	0x036E12F4 STP V0, V1, [X27 + 0xE0]
	0x036E12F8 LDP V0, V1, [X25 + 0x40]
	0x036E12FC STP V2, V3, [X27 + 0x100]
	0x036E1300 LDP V2, V3, [X25 + 0x60]
	0x036E1304 STP V0, V1, [X27 + 0x120]
	0x036E1308 STP V2, V3, [X27 + 0x140]
	0x036E130C ADD X8, X31, 0x2E0
	0x036E1310 ADD X0, X31, 0x1A0
	0x036E1314 ADD X1, X31, 0x160
	0x036E1318 MOV X2, X31
	0x036E131C BL 0x3C27F74
	0x036E1320 LDUR V0, [X26 + 0x98]
	0x036E1324 LDUR V1, [X26 + 0xA8]
	0x036E1328 LDUR V2, [X26 + 0xB8]
	0x036E132C LDUR V3, [X26 + 0xC8]
	0x036E1330 STP V0, V1, [X25]
	0x036E1334 STP V2, V3, [X25 + 0x20]
	0x036E1338 CBZ X22, 0x36E1444
	0x036E133C MOV X0, X22
	0x036E1340 MOV X1, X31
	0x036E1344 BL 0x3C9A0F8
	0x036E1348 MOV V8.16B, V0.16B
	0x036E134C MOV V9.16B, V1.16B
	0x036E1350 MOV V10.16B, V2.16B
	0x036E1354 MOV X0, X22
	0x036E1358 MOV X1, X31
	0x036E135C BL 0x3C9A0F8
	0x036E1360 LDR X0, [X29]
	0x036E1364 MOV V11.16B, V0.16B
	0x036E1368 MOV V12.16B, V1.16B
	0x036E136C MOV V13.16B, V2.16B
	0x036E1370 LDR W8, [X0 + 0xE0]
	0x036E1374 CBNZ W8, 0x36E137C
	0x036E1378 BL 0x1C16DFC
	0x036E137C FMUL S0, S8, S14
	0x036E1380 FMUL S1, S9, S14
	0x036E1384 LDP V6, V7, [X25]
	0x036E1388 STR S0, [X31 + 0x108]
	0x036E138C STR S1, [X31 + 0x10C]
	0x036E1390 LDP V0, V1, [X25 + 0x20]
	0x036E1394 FMUL S2, S10, S14
	0x036E1398 FMUL S3, S11, S14
	0x036E139C FMUL S4, S12, S14
	0x036E13A0 FMUL S5, S13, S14
	0x036E13A4 STR S2, [X31 + 0x110]
	0x036E13A8 STR S3, [X31 + 0x114]
	0x036E13AC STP V6, V7, [X27 + 0xA0]
	0x036E13B0 STP V0, V1, [X27 + 0xC0]
	0x036E13B4 STR S4, [X31 + 0x118]
	0x036E13B8 STR S5, [X31 + 0x11C]
	0x036E13BC ADD X8, X31, 0x2E0
	0x036E13C0 ADD X0, X31, 0x120
	0x036E13C4 ADD X1, X31, 0x108
	0x036E13C8 BL 0x36E1D24
	0x036E13CC B 0x36E107C
	0x036E13D0 ADRP X8, 0xA5F000
	0x036E13D4 LDR X8, [X8 + 0x660]
	0x036E13D8 ADD X0, X31, 0x430
	0x036E13DC LDR X1, [X8]
	0x036E13E0 BL 0x2BC263C
	0x036E13E4 LDR X19, [X31 + 0x20]
	0x036E13E8 ADRP X8, 0xFFFFFFFFFD409000
	0x036E13EC LDR V0, [X8 + 0xBC]
	0x036E13F0 ADD X0, X31, 0x4A8
	0x036E13F4 MOV X1, X31
	0x036E13F8 BL 0x3C09F08
	0x036E13FC ADD X9, X31, 0x3A9
	0x036E1400 LDR X8, [X31 + 0x4B8]
	0x036E1404 LDUR V0, [X9 + 0xFF]
	0x036E1408 STR X8, [X19 + 0x10]
	0x036E140C STR V0, [X19]
	0x036E1410 ADD X31, X31, 0x500
	0x036E1414 LDP X20, X19, [X31 + 0x90]
	0x036E1418 LDP X22, X21, [X31 + 0x80]
	0x036E141C LDP X24, X23, [X31 + 0x70]
	0x036E1420 LDP X26, X25, [X31 + 0x60]
	0x036E1424 LDP X28, X27, [X31 + 0x50]
	0x036E1428 LDP X29, X30, [X31 + 0x40]
	0x036E142C LDP D9, D8, [X31 + 0x30]
	0x036E1430 LDP D11, D10, [X31 + 0x20]
	0x036E1434 LDP D13, D12, [X31 + 0x10]
	0x036E1438 LDP D15, D14, [X31], #0xA0
	0x036E143C RET
	0x036E1440 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], D14
	003 Move [X31+176], D13
	004 Move [X31+184], D12
	005 Move [X31+192], D11
	006 Move [X31+200], D10
	007 Move [X31+208], D9
	008 Move [X31+216], D8
	009 Move [X31+224], X30
	010 Move [X31+232], X21
	011 Move [X31+240], X20
	012 Move [X31+248], X19
	013 Move X21, 0xD00000
	014 Move X20, 0xA60000
	015 Move W8, [X21+2816]
	016 Move X20, [X20+1424]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xA60000
	023 Move X0, [X0+1424]
	024 Call 0x1C17CF4
	025 Move X0, 0xA13000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2816], W8
	030 Move X0, X19
	031 Call NavMeshSurface.CollectSources, X0
	032 Move X8, [X20]
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Move V12, [X19+60]
	035 Move V8, [X19+40]
	036 Move W9, [X8+224]
	037 Move V9, [X19+48]
	038 Move X20, X0
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move W8, [X19+36]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	046 NotImplemented "Instruction FABS not yet implemented."
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move S3, 0.5
	049 NotImplemented "Instruction INVALID not yet implemented."
	050 Multiply S13, S1, S3
	051 Add X8, X31, 96
	052 Move X0, X19
	053 Move X1, X20
	054 Call NavMeshSurface.CalculateWorldBounds, X0, X1
	055 Move V11, [X31+96]
	056 Move V12, [X31+104]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move V13, [X31+116]
	059 Add X8, X31, 96
	060 Move X0, X19
	061 Call NavMeshSurface.GetBuildSettings, X0
	062 Move X0, X19
	063 Move X1, X31
	064 Call Component.get_transform, X0
	065 Compare X0, 0
	066 JumpIfEqual {164}
	067 Move X1, X31
	068 Call Transform.get_position, X0
	069 Move X0, X19
	070 Move X1, X31
	071 Move V8, V0
	072 Move V9, V1
	073 Move V10, V2
	074 Call Component.get_transform, X0
	075 Compare X0, 0
	076 JumpIfEqual {164}
	077 Move X21, 0xA13000
	078 Move X21, [X21+1432]
	079 Move X1, X31
	080 Call Transform.get_rotation, X0
	081 Move V4, V0
	082 Move V5, V1
	083 Move V6, V2
	084 Move V7, V3
	085 Move V0, [X31+96]
	086 Move V1, [X31+112]
	087 Move V2, [X31+128]
	088 Move V3, [X31+144]
	089 Add X0, X31, 32
	090 Add X2, X31, 8
	091 Move [X31+32], V0
	092 Move [X31+40], V1
	093 Move [X31+64], V2
	094 Move [X31+72], V3
	095 Move X1, X20
	096 Move V0, V8
	097 Move V1, V9
	098 Move V2, V10
	099 Move V3, V4
	100 Move V4, V5
	101 Move V5, V6
	102 Move V6, V7
	103 Move X3, X31
	104 Move [X31+8], D11
	105 Move [X31+16], S12
	106 Move [X31+20], D14
	107 Move [X31+28], S13
	108 Call NavMeshBuilder.BuildNavMeshData, X0, X1, X2, X3, X4
	109 Move X8, [X21]
	110 Move X20, X0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X20
	117 Move X1, X31
	118 Move X2, X31
	119 Call Object.op_Inequality, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {151}
	124 Move X0, X19
	125 Move X1, X31
	126 Call Component.get_gameObject, X0
	127 Compare X0, 0
	128 JumpIfEqual {164}
	129 Move X1, X31
	130 Call Object.get_name, X0
	131 Compare X20, 0
	132 JumpIfEqual {164}
	133 Move X1, X0
	134 Move X0, X20
	135 Move X2, X31
	136 Call Object.set_name, X0, X1
	137 Add X0, X19, 108
	138 Move X1, X31
	139 Call NavMeshDataInstance.Remove, X0
	140 Move X0, X19
	141 Move X1, X31
	142 Move [X19+108], W31
	143 Move [X19+96], X20
	144 Call Behaviour.get_isActiveAndEnabled, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {151}
	149 Move X0, X19
	150 Call NavMeshSurface.AddData, X0
	151 Move X20, [X31+240]
	152 Move X19, [X31+248]
	153 Move X30, [X31+224]
	154 Move X21, [X31+232]
	155 Move D9, [X31+208]
	156 Move D8, [X31+216]
	157 Move D11, [X31+192]
	158 Move D10, [X31+200]
	159 Move D13, [X31+176]
	160 Move D12, [X31+184]
	161 Move V14, [X31+160]
	162 Add X31, X31, 256
	163 Return 
	164 Call 0x1C17F20

Method: UnityEngine.AsyncOperation UpdateNavMesh(UnityEngine.AI.NavMeshData data)

Disassembly:
	0x036E251C STP X20, X19, [X31 + 0x10]
	0x036E2520 ADRP X20, 0xCFE000
	0x036E2524 ADRP X21, 0xA3B000
	0x036E2528 LDRB W8, [X20 + 0xB12]
	0x036E252C LDR X21, [X21 + 0x158]
	0x036E2530 MOV X19, X0
	0x036E2534 TBNZ X8, 0x0, 0x36E254C
	0x036E2538 ADRP X0, 0xA3B000
	0x036E253C LDR X0, [X0 + 0x158]
	0x036E2540 BL 0x1C16CF4
	0x036E2544 MOVZ W8, 0x1
	0x036E2548 STRB W8, [X20 + 0xB12]
	0x036E254C LDR X1, [X21]
	0x036E2550 MOV X0, X19
	0x036E2554 LDP X20, X19, [X31 + 0x10]
	0x036E2558 LDP X30, X21, [X31], #0x20
	0x036E255C B 0x23E53EC
	0x036E2560 LDR X8, [X0]
	0x036E2564 ADD W9, W1, W2
	0x036E2568 LDR V0, [X8, W9, SXTW]
	0x036E256C RET
	0x036E2570 LDR X8, [X0]
	0x036E2574 ADD W9, W1, W2
	0x036E2578 STR S0, [X8, W9, SXTW]
	0x036E257C RET
	0x036E2580 STR X30, [X31 - 0x30]!
	0x036E2584 STP X22, X21, [X31 + 0x10]
	0x036E2588 STP X20, X19, [X31 + 0x20]
	0x036E258C ADRP X22, 0xCFE000
	0x036E2590 ADRP X21, 0xA3D000
	0x036E2594 ADRP X20, 0xA3D000
	0x036E2598 LDRB W8, [X22 + 0xB13]
	0x036E259C LDR X21, [X21 + 0xCB8]
	0x036E25A0 LDR X20, [X20 + 0xCC0]
	0x036E25A4 MOV X19, X0
	0x036E25A8 TBNZ X8, 0x0, 0x36E25CC
	0x036E25AC ADRP X0, 0xA3D000
	0x036E25B0 LDR X0, [X0 + 0xCC0]
	0x036E25B4 BL 0x1C16CF4
	0x036E25B8 ADRP X0, 0xA3D000
	0x036E25BC LDR X0, [X0 + 0xCB8]
	0x036E25C0 BL 0x1C16CF4
	0x036E25C4 MOVZ W8, 0x1
	0x036E25C8 STRB W8, [X22 + 0xB13]
	0x036E25CC MOV X0, X19
	0x036E25D0 MOV X1, X31
	0x036E25D4 BL 0x33BDD8C
	0x036E25D8 LDR X0, [X21]
	0x036E25DC BL 0x1C16F10
	0x036E25E0 LDR X1, [X20]
	0x036E25E4 MOV X20, X0
	0x036E25E8 BL 0x305F484
	0x036E25EC STR X20, [X19 + 0x10]
	0x036E25F0 LDP X20, X19, [X31 + 0x20]
	0x036E25F4 LDP X22, X21, [X31 + 0x10]
	0x036E25F8 LDR X30, [X31], #0x30
	0x036E25FC RET
	0x036E2600 STR D8, [X31 - 0x20]!
	0x036E2604 STR X30, [X31 + 0x8]
	0x036E2608 STP X20, X19, [X31 + 0x10]
	0x036E260C ADRP X20, 0xCFE000
	0x036E2610 LDRB W8, [X20 + 0xB14]
	0x036E2614 MOV V8.16B, V0.16B
	0x036E2618 MOV X19, X0
	0x036E261C TBNZ X8, 0x0, 0x36E2640
	0x036E2620 ADRP X0, 0xA5E000
	0x036E2624 LDR X0, [X0 + 0x718]
	0x036E2628 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], D11
	003 Move [X31+120], D10
	004 Move [X31+128], D9
	005 Move [X31+136], D8
	006 Move [X31+144], X30
	007 Move [X31+160], X22
	008 Move [X31+168], X21
	009 Move [X31+176], X20
	010 Move [X31+184], X19
	011 Move X22, 0xCFF000
	012 Move X21, 0xA5F000
	013 Move W8, [X22+2817]
	014 Move X21, [X21+1424]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA5F000
	022 Move X0, [X0+1424]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2817], W8
	026 Move X0, X20
	027 Call NavMeshSurface.CollectSources, X0
	028 Move X8, [X21]
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move V9, [X20+60]
	031 Move V10, [X20+40]
	032 Move W9, [X8+224]
	033 Move V11, [X20+48]
	034 Move X21, X0
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move W8, [X20+36]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	042 NotImplemented "Instruction FABS not yet implemented."
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move S3, 0.5
	045 NotImplemented "Instruction INVALID not yet implemented."
	046 Multiply S11, S1, S3
	047 Add X8, X31, 88
	048 Move X0, X20
	049 Move X1, X21
	050 Call NavMeshSurface.CalculateWorldBounds, X0, X1
	051 Move V8, [X31+88]
	052 Move V9, [X31+96]
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move V11, [X31+108]
	055 Add X8, X31, 24
	056 Move X0, X20
	057 Call NavMeshSurface.GetBuildSettings, X0
	058 Add X1, X31, 24
	059 Add X3, X31, 0
	060 Move X0, X19
	061 Move X2, X21
	062 Move X4, X31
	063 Move [X31], D8
	064 Move [X31+8], S9
	065 Move [X31+12], D10
	066 Move [X31+20], S11
	067 Call NavMeshBuilder.UpdateNavMeshDataAsync, X0, X1, X2, X3
	068 Move X20, [X31+176]
	069 Move X19, [X31+184]
	070 Move X22, [X31+160]
	071 Move X21, [X31+168]
	072 Move X30, [X31+144]
	073 Move D9, [X31+128]
	074 Move D8, [X31+136]
	075 Move D11, [X31+112]
	076 Move D10, [X31+120]
	077 Add X31, X31, 192
	078 Return X0

Method: System.Void Register(Unity.AI.Navigation.NavMeshSurface surface)

Disassembly:
	0x036E0B40 MOV X1, X22
	0x036E0B44 MOV X3, X31
	0x036E0B48 MOV X21, X0
	0x036E0B4C LDR X2, [X8]
	0x036E0B50 BL 0x24ACE28
	0x036E0B54 LDR X8, [X25]
	0x036E0B58 LDR X8, [X8 + 0xB8]
	0x036E0B5C STR X21, [X8 + 0x18]
	0x036E0B60 CBZ X20, 0x36E0C50
	0x036E0B64 LDR X2, [X24]
	0x036E0B68 MOV X0, X20
	0x036E0B6C MOV X1, X21
	0x036E0B70 BL 0x300F22C
	0x036E0B74 LDRB W8, [X19 + 0x4E]
	0x036E0B78 CBZ W8, 0x36E0C00
	0x036E0B7C LDR X0, [X25]
	0x036E0B80 LDR W8, [X0 + 0xE0]
	0x036E0B84 CBNZ W8, 0x36E0B90
	0x036E0B88 BL 0x1C16DFC
	0x036E0B8C LDR X0, [X25]
	0x036E0B90 LDR X8, [X0 + 0xB8]
	0x036E0B94 LDR X21, [X8 + 0x20]
	0x036E0B98 CBNZ X21, 0x36E0BEC
	0x036E0B9C LDR W8, [X0 + 0xE0]
	0x036E0BA0 CBNZ W8, 0x36E0BAC
	0x036E0BA4 BL 0x1C16DFC
	0x036E0BA8 LDR X0, [X25]
	0x036E0BAC ADRP X9, 0xA60000
	0x036E0BB0 LDR X8, [X0 + 0xB8]
	0x036E0BB4 LDR X9, [X9 + 0x630]
	0x036E0BB8 LDR X22, [X8]
	0x036E0BBC LDR X0, [X9]
	0x036E0BC0 BL 0x1C16F10
	0x036E0BC4 ADRP X8, 0xA60000
	0x036E0BC8 LDR X8, [X8 + 0x650]
	0x036E0BCC MOV X1, X22
	0x036E0BD0 MOV X3, X31
	0x036E0BD4 MOV X21, X0
	0x036E0BD8 LDR X2, [X8]
	0x036E0BDC BL 0x24ACE28
	0x036E0BE0 LDR X8, [X25]
	0x036E0BE4 LDR X8, [X8 + 0xB8]
	0x036E0BE8 STR X21, [X8 + 0x20]
	0x036E0BEC CBZ X20, 0x36E0C50
	0x036E0BF0 LDR X2, [X24]
	0x036E0BF4 MOV X0, X20
	0x036E0BF8 MOV X1, X21
	0x036E0BFC BL 0x300F22C
	0x036E0C00 ADD X1, X31, 0x1B8
	0x036E0C04 MOV X0, X19
	0x036E0C08 BL 0x36E172C
	0x036E0C0C MOV X0, X20
	0x036E0C10 ADD X31, X31, 0x1B0
	0x036E0C14 LDP X20, X19, [X31 + 0x90]
	0x036E0C18 LDP X22, X21, [X31 + 0x80]
	0x036E0C1C LDP X24, X23, [X31 + 0x70]
	0x036E0C20 LDP X26, X25, [X31 + 0x60]
	0x036E0C24 LDP X28, X27, [X31 + 0x50]
	0x036E0C28 LDP X29, X30, [X31 + 0x40]
	0x036E0C2C LDP D9, D8, [X31 + 0x30]
	0x036E0C30 LDP D11, D10, [X31 + 0x20]
	0x036E0C34 LDP D13, D12, [X31 + 0x10]
	0x036E0C38 LDR V14, [X31], #0xA0
	0x036E0C3C RET
	0x036E0C40 BL 0x1C16F20
	0x036E0C44 BL 0x1C16F20
	0x036E0C48 BL 0x1C16F20
	0x036E0C4C BL 0x1C16F20
	0x036E0C50 BL 0x1C16F20
	0x036E0C54 B 0x36E0C90
	0x036E0C58 B 0x36E0C90
	0x036E0C5C B 0x36E0C90
	0x036E0C60 B 0x36E0C90
	0x036E0C64 B 0x36E0C90
	0x036E0C68 B 0x36E0C90
	0x036E0C6C B 0x36E0C90
	0x036E0C70 B 0x36E0C90
	0x036E0C74 B 0x36E0C90
	0x036E0C78 B 0x36E0C90
	0x036E0C7C B 0x36E0C90
	0x036E0C80 B 0x36E0C90
	0x036E0C84 B 0x36E0C90
	0x036E0C88 B 0x36E0C90
	0x036E0C8C B 0x36E0C90
	0x036E0C90 MOV X22, X0
	0x036E0C94 CMP W1, 0x1
	0x036E0C98 B.NE 0x36E0CC4
	0x036E0C9C MOV X0, X22
	0x036E0CA0 BL 0x3EB1AD0
	0x036E0CA4 LDR X23, [X0]
	0x036E0CA8 BL 0x3EB1AE0
	0x036E0CAC LDR X1, [X26]
	0x036E0CB0 ADD X0, X31, 0x150
	0x036E0CB4 BL 0x2BC434C
	0x036E0CB8 CBZ X23, 0x36E08D4
	0x036E0CBC MOV X0, X23
	0x036E0CC0 BL 0x1C16F18
	0x036E0CC4 MOV X23, X31
	0x036E0CC8 B 0x36E0CD0
	0x036E0CCC MOV X22, X0
	0x036E0CD0 LDR X1, [X26]
	0x036E0CD4 ADD X0, X31, 0x150
	0x036E0CD8 BL 0x2BC434C
	0x036E0CDC CBNZ X23, 0x36E0CE8
	0x036E0CE0 MOV X0, X22
	0x036E0CE4 BL 0x1D2C690
	0x036E0CE8 MOV X0, X23
	0x036E0CEC BL 0x1C16F18
	0x036E0CF0 BL 0x1990590
	0x036E0CF4 FABS S0, S0
	0x036E0CF8 FABS S1, S1
	0x036E0CFC FABS S2, S2
	0x036E0D00 RET
	0x036E0D04 STP D15, D14, [X31 - 0xA0]!
	0x036E0D08 STP D13, D12, [X31 + 0x10]
	0x036E0D0C STP D11, D10, [X31 + 0x20]
	0x036E0D10 STP D9, D8, [X31 + 0x30]
	0x036E0D14 STP X29, X30, [X31 + 0x40]
	0x036E0D18 STP X28, X27, [X31 + 0x50]
	0x036E0D1C STP X26, X25, [X31 + 0x60]
	0x036E0D20 STP X24, X23, [X31 + 0x70]
	0x036E0D24 STP X22, X21, [X31 + 0x80]
	0x036E0D28 STP X20, X19, [X31 + 0x90]
	0x036E0D2C SUB X31, X31, 0x500
	0x036E0D30 ADRP X19, 0xD00000
	0x036E0D34 MOV X22, X8
	0x036E0D38 LDRB W8, [X19 + 0xB08]
	0x036E0D3C MOV X21, X1
	0x036E0D40 MOV X20, X0
	0x036E0D44 ADD X24, X31, 0x4A8
	0x036E0D48 ADD X25, X31, 0x320
	0x036E0D4C TBNZ X8, 0x0, 0x36E0DAC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD01000
	009 Move X22, 0xA61000
	010 Move W8, [X20+2818]
	011 Move X22, [X22+1424]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xA61000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0xA61000
	021 Move X0, [X0+1440]
	022 Call 0x1C17CF4
	023 Move X0, 0xA61000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move X0, 0xA61000
	027 Move X0, [X0+1456]
	028 Call 0x1C17CF4
	029 Move X0, 0xA61000
	030 Move X0, [X0+1424]
	031 Call 0x1C17CF4
	032 Move X0, 0xA61000
	033 Move X0, [X0+1248]
	034 Call 0x1C17CF4
	035 Move X0, 0xA61000
	036 Move X0, [X0+1256]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2818], W8
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X0+184]
	047 Move X8, [X8]
	048 Compare X8, 0
	049 JumpIfEqual {154}
	050 Move W8, [X8+24]
	051 Compare W8, 0
	052 JumpIfNotEqual {88}
	053 Move X23, 0xA61000
	054 Move X23, [X23+1248]
	055 Move X24, 0xA61000
	056 Move X8, [X23]
	057 Move X8, [X8+184]
	058 Move X24, [X24+1256]
	059 Move X20, [X8]
	060 Move X0, [X24]
	061 Call 0x1C17F10
	062 Move X8, 0xA61000
	063 Move X8, [X8+1456]
	064 Move X1, X31
	065 Move X3, X31
	066 Move X21, X0
	067 Move X2, [X8]
	068 Call OnNavMeshPreUpdate..ctor, X0, X1, X2
	069 Move X0, X20
	070 Move X1, X21
	071 Move X2, X31
	072 Call Delegate.Combine, X0, X1
	073 Compare X0, 0
	074 JumpIfEqual {85}
	075 Move X1, [X24]
	076 Move X8, [X0]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X23]
	079 Move X8, [X8+184]
	080 Move [X8], X0
	081 Move X1, [X24]
	082 Move X8, [X0]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Call 0x1C181E0
	085 Move X8, [X23]
	086 Move X8, [X8+184]
	087 Move [X8], X0
	088 Move X0, [X22]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X22]
	094 Move X8, [X0+184]
	095 Move X0, [X8]
	096 Compare X0, 0
	097 JumpIfEqual {154}
	098 Move X8, 0xA61000
	099 Move X8, [X8+1440]
	100 Move X1, X19
	101 Move X2, [X8]
	102 Call List`1<Object>.Contains, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {133}
	107 Move X0, [X22]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X22]
	113 Move X8, [X0+184]
	114 Move X0, [X8]
	115 Compare X0, 0
	116 JumpIfEqual {154}
	117 Move X9, 0xA61000
	118 Move X9, [X9+1432]
	119 Move W10, [X0+28]
	120 Move X8, [X0+16]
	121 Move X9, [X9]
	122 Add W10, W10, 1
	123 Move [X0+28], W10
	124 Compare X8, 0
	125 JumpIfEqual {154}
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Move W11, [X8+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Add W9, W10, 1
	130 Add X8, X8, X10
	131 Move [X0+24], W9
	132 Move [X8+32], X19
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X22, [X31+32]
	136 Move X21, [X31+40]
	137 Move X24, [X31+16]
	138 Move X23, [X31+24]
	139 Move X30, [X31+64]
	140 Return 
	141 Move X8, [X9+32]
	142 Move X1, X19
	143 Move X20, [X31+48]
	144 Move X19, [X31+56]
	145 Move X22, [X31+32]
	146 Move X21, [X31+40]
	147 Move X8, [X8+192]
	148 Move X24, [X31+16]
	149 Move X23, [X31+24]
	150 Move X2, [X8+112]
	151 Move X30, [X31+64]
	152 Call List`1<Object>.AddWithResize, X0, X1
	153 Return 
	154 Call 0x1C17F20

Method: System.Void Unregister(Unity.AI.Navigation.NavMeshSurface surface)

Disassembly:
	0x036E0F30 BL 0x3EB1AC0
	0x036E0F34 ADD X21, X19, 0x10
	0x036E0F38 ADRP X23, 0xCF8000
	0x036E0F3C MOVZ W19, 0x1
	0x036E0F40 FMOV S14, 0.5
	0x036E0F44 MOVI V15.2S, 0x3F, 0x18
	0x036E0F48 LDR X1, [X28]
	0x036E0F4C ADD X0, X31, 0x430
	0x036E0F50 BL 0x2BC2640
	0x036E0F54 TBZ X0, 0x0, 0x36E13D0
	0x036E0F58 ADD X0, X31, 0x3D0
	0x036E0F5C MOVZ W2, 0x60
	0x036E0F60 MOV X1, X21
	0x036E0F64 BL 0x3EB1AC0
	0x036E0F68 ADD X0, X31, 0x3D0
	0x036E0F6C MOV X1, X31
	0x036E0F70 BL 0x3BE2914
	0x036E0F74 SUB W8, W0, 0x2
	0x036E0F78 CMP W8, 0x4
	0x036E0F7C B.CS 0x36E1150
	0x036E0F80 LDUR V0, [X24 + 0x18]
	0x036E0F84 LDUR V1, [X24 + 0x28]
	0x036E0F88 LDUR V2, [X24 + 0x38]
	0x036E0F8C LDUR V3, [X24 + 0x48]
	0x036E0F90 STP V0, V1, [X25 + 0x40]
	0x036E0F94 STP V2, V3, [X25 + 0x60]
	0x036E0F98 ADD X8, X31, 0x320
	0x036E0F9C ADD X0, X31, 0x3D0
	0x036E0FA0 MOV X1, X31
	0x036E0FA4 BL 0x3BE28D4
	0x036E0FA8 LDP V0, V1, [X25]
	0x036E0FAC LDP V2, V3, [X25 + 0x20]
	0x036E0FB0 LDP V4, V5, [X25 + 0x40]
	0x036E0FB4 STP V0, V1, [X31 + 0x80]
	0x036E0FB8 LDP V0, V1, [X25 + 0x60]
	0x036E0FBC STR V2, [X31 + 0xA]
	0x036E0FC0 STP V3, V4, [X27 + 0x30]
	0x036E0FC4 STP V5, V0, [X27 + 0x50]
	0x036E0FC8 STR V1, [X27 + 0x7]
	0x036E0FCC ADD X8, X31, 0x2E0
	0x036E0FD0 ADD X0, X31, 0xC0
	0x036E0FD4 ADD X1, X31, 0x80
	0x036E0FD8 MOV X2, X31
	0x036E0FDC BL 0x3C27F74
	0x036E0FE0 LDUR V0, [X26 + 0x98]
	0x036E0FE4 LDUR V1, [X26 + 0xA8]
	0x036E0FE8 LDUR V2, [X26 + 0xB8]
	0x036E0FEC LDUR V3, [X26 + 0xC8]
	0x036E0FF0 LDRB W8, [X23 + 0x783]
	0x036E0FF4 STP V0, V1, [X25]
	0x036E0FF8 STP V2, V3, [X25 + 0x20]
	0x036E0FFC CBNZ W8, 0x36E100C
	0x036E1000 MOV X0, X20
	0x036E1004 BL 0x1C16CF4
	0x036E1008 STRB W19, [X23 + 0x783]
	0x036E100C LDR X8, [X20]
	0x036E1010 LDR X8, [X8 + 0xB8]
	0x036E1014 LDR V11, [X8]
	0x036E1018 LDR V12, [X8 + 0x8]
	0x036E101C ADD X0, X31, 0x3D0
	0x036E1020 MOV X1, X31
	0x036E1024 BL 0x3BE28FC
	0x036E1028 LDR X0, [X29]
	0x036E102C MOV V8.16B, V0.16B
	0x036E1030 MOV V9.16B, V1.16B
	0x036E1034 MOV V10.16B, V2.16B
	0x036E1038 LDR W8, [X0 + 0xE0]
	0x036E103C CBNZ W8, 0x36E1044
	0x036E1040 BL 0x1C16DFC
	0x036E1044 FMUL S0, S8, S14
	0x036E1048 LDP V3, V4, [X25]
	0x036E104C STP S12, S0, [X31 + 0x30]
	0x036E1050 LDP V0, V5, [X25 + 0x20]
	0x036E1054 FMUL S1, S9, S14
	0x036E1058 FMUL S2, S10, S14
	0x036E105C STR D11, [X31 + 0x28]
	0x036E1060 STP V3, V4, [X31 + 0x40]
	0x036E1064 STP V0, V5, [X31 + 0x60]
	0x036E1068 STP S1, S2, [X31 + 0x38]
	0x036E106C ADD X8, X31, 0x2E0
	0x036E1070 ADD X0, X31, 0x40
	0x036E1074 ADD X1, X31, 0x28
	0x036E1078 BL 0x36E1D24
	0x036E107C LDR V0, [X31 + 0x2E0]
	0x036E1080 LDUR V1, [X26 + 0xA4]
	0x036E1084 LDR V2, [X31 + 0x2E8]
	0x036E1088 LDR V3, [X31 + 0x2F4]
	0x036E108C LDR V6, [X31 + 0x4B0]
	0x036E1090 LDR V7, [X31 + 0x4BC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD01000
	007 Move X20, 0xA61000
	008 Move W8, [X21+2819]
	009 Move X20, [X20+1424]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xA61000
	016 Move X0, [X0+1464]
	017 Call 0x1C17CF4
	018 Move X0, 0xA61000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move X0, 0xA61000
	022 Move X0, [X0+1456]
	023 Call 0x1C17CF4
	024 Move X0, 0xA61000
	025 Move X0, [X0+1424]
	026 Call 0x1C17CF4
	027 Move X0, 0xA61000
	028 Move X0, [X0+1248]
	029 Call 0x1C17CF4
	030 Move X0, 0xA61000
	031 Move X0, [X0+1256]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2819], W8
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X0, [X8]
	043 Compare X0, 0
	044 JumpIfEqual {100}
	045 Move X8, 0xA61000
	046 Move X8, [X8+1464]
	047 Move X1, X19
	048 Move X2, [X8]
	049 Call List`1<Object>.Remove, X0, X1
	050 Move X8, [X20]
	051 Move X8, [X8+184]
	052 Move X8, [X8]
	053 Compare X8, 0
	054 JumpIfEqual {100}
	055 Move W8, [X8+24]
	056 Compare W8, 0
	057 JumpIfNotEqual {94}
	058 Move X21, 0xA61000
	059 Move X21, [X21+1248]
	060 Move X22, 0xA61000
	061 Move X8, [X21]
	062 Move X8, [X8+184]
	063 Call 0x3EB2924
	064 Return 
	065 Move X19, [X8]
	066 Move X0, [X22]
	067 Call 0x1C17F10
	068 Move X8, 0xA60000
	069 Move X8, [X8+1456]
	070 Move X1, X31
	071 Move X3, X31
	072 Move X20, X0
	073 Move X2, [X8]
	074 Call OnNavMeshPreUpdate..ctor, X0, X1, X2
	075 Move X0, X19
	076 Move X1, X20
	077 Move X2, X31
	078 Call Delegate.Remove, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {91}
	081 Move X1, [X22]
	082 Move X8, [X0]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X8, [X21]
	085 Move X8, [X8+184]
	086 Move [X8], X0
	087 Move X1, [X22]
	088 Move X8, [X0]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Call 0x1C181E0
	091 Move X8, [X21]
	092 Move X8, [X8+184]
	093 Move [X8], X0
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Return 
	100 Call 0x1C17F20

Method: System.Void UpdateActive()

Disassembly:
	0x036E262C ADRP X0, 0xA5E000
	0x036E2630 LDR X0, [X0 + 0x720]
	0x036E2634 BL 0x1C16CF4
	0x036E2638 MOVZ W8, 0x1
	0x036E263C STRB W8, [X20 + 0xB14]
	0x036E2640 LDR X0, [X19 + 0x10]
	0x036E2644 CBZ X0, 0x36E26C0
	0x036E2648 ADRP X9, 0xA5E000
	0x036E264C LDR X9, [X9 + 0x718]
	0x036E2650 LDR W10, [X0 + 0x1C]
	0x036E2654 LDR X8, [X0 + 0x10]
	0x036E2658 LDR X9, [X9]
	0x036E265C ADD W10, W10, 0x1
	0x036E2660 STR W10, [X0 + 0x1C]
	0x036E2664 CBZ X8, 0x36E26C0
	0x036E2668 LDRSW X10, [X0 + 0x18]
	0x036E266C LDR W11, [X8 + 0x18]
	0x036E2670 CMP W10, W11
	0x036E2674 B.CS 0x36E268C
	0x036E2678 ADD W9, W10, 0x1
	0x036E267C ADD X8, X8, X10, 0x2, LSL
	0x036E2680 STR W9, [X0 + 0x18]
	0x036E2684 STR S8, [X8 + 0x20]
	0x036E2688 B 0x36E26A8
	0x036E268C LDR X8, [X9 + 0x20]
	0x036E2690 MOV V0.16B, V8.16B
	0x036E2694 LDR X8, [X8 + 0xC0]
	0x036E2698 LDR X1, [X8 + 0x70]
	0x036E269C BL 0x305FC84
	0x036E26A0 LDR X0, [X19 + 0x10]
	0x036E26A4 CBZ X0, 0x36E26C0
	0x036E26A8 LDR W8, [X0 + 0x18]
	0x036E26AC LDP X20, X19, [X31 + 0x10]
	0x036E26B0 LDR X30, [X31 + 0x8]
	0x036E26B4 SUB W0, W8, 0x1
	0x036E26B8 LDR V8, [X31], #0x20
	0x036E26BC RET
	0x036E26C0 BL 0x1C16F20
	0x036E26C4 STP D9, D8, [X31 - 0x30]!
	0x036E26C8 STR X30, [X31 + 0x10]
	0x036E26CC STP X20, X19, [X31 + 0x20]
	0x036E26D0 ADRP X20, 0xCFE000
	0x036E26D4 LDRB W8, [X20 + 0xB15]
	0x036E26D8 MOV V8.16B, V1.16B
	0x036E26DC MOV V9.16B, V0.16B
	0x036E26E0 MOV X19, X0
	0x036E26E4 TBNZ X8, 0x0, 0x36E2708
	0x036E26E8 ADRP X0, 0xA5E000
	0x036E26EC LDR X0, [X0 + 0x718]
	0x036E26F0 BL 0x1C16CF4
	0x036E26F4 ADRP X0, 0xA5E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xCFF000
	006 Move W8, [X19+2820]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xA5F000
	012 Move X0, [X0+1448]
	013 Call 0x1C17CF4
	014 Move X0, 0xA5F000
	015 Move X0, [X0+1672]
	016 Call 0x1C17CF4
	017 Move X0, 0xA5F000
	018 Move X0, [X0+1424]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+2820], W8
	022 Move X20, 0xA5F000
	023 Move X21, 0xA5F000
	024 Move X20, [X20+1424]
	025 Move X21, [X21+1672]
	026 Move W19, W31
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move X8, [X8]
	035 Compare X8, 0
	036 JumpIfEqual {61}
	037 Move W9, [X8+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {48}
	042 Call 0x1C17DFC
	043 Move X8, [X20]
	044 Move X8, [X8+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {61}
	048 Move X2, [X21]
	049 Move X0, X8
	050 Move W1, W19
	051 Call List`1<Object>.get_Item, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {61}
	054 Call NavMeshSurface.UpdateDataIfTransformChanged, X0
	055 Add W19, W19, 1
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void AppendModifierVolumes(ref System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildSource> sources)

Disassembly:
	0x036E272C CBZ X8, 0x36E27E0
	0x036E2730 LDRSW X10, [X0 + 0x18]
	0x036E2734 LDR W11, [X8 + 0x18]
	0x036E2738 CMP W10, W11
	0x036E273C B.CS 0x36E2754
	0x036E2740 ADD W9, W10, 0x1
	0x036E2744 ADD X8, X8, X10, 0x2, LSL
	0x036E2748 STR W9, [X0 + 0x18]
	0x036E274C STR S9, [X8 + 0x20]
	0x036E2750 B 0x36E2770
	0x036E2754 LDR X8, [X9 + 0x20]
	0x036E2758 MOV V0.16B, V9.16B
	0x036E275C LDR X8, [X8 + 0xC0]
	0x036E2760 LDR X1, [X8 + 0x70]
	0x036E2764 BL 0x305FC84
	0x036E2768 LDR X0, [X19 + 0x10]
	0x036E276C CBZ X0, 0x36E27E0
	0x036E2770 LDR W10, [X0 + 0x1C]
	0x036E2774 LDR X8, [X0 + 0x10]
	0x036E2778 LDR X9, [X20]
	0x036E277C ADD W10, W10, 0x1
	0x036E2780 STR W10, [X0 + 0x1C]
	0x036E2784 CBZ X8, 0x36E27E0
	0x036E2788 LDRSW X10, [X0 + 0x18]
	0x036E278C LDR W11, [X8 + 0x18]
	0x036E2790 CMP W10, W11
	0x036E2794 B.CS 0x36E27AC
	0x036E2798 ADD W9, W10, 0x1
	0x036E279C ADD X8, X8, X10, 0x2, LSL
	0x036E27A0 STR W9, [X0 + 0x18]
	0x036E27A4 STR S8, [X8 + 0x20]
	0x036E27A8 B 0x36E27C8
	0x036E27AC LDR X8, [X9 + 0x20]
	0x036E27B0 MOV V0.16B, V8.16B
	0x036E27B4 LDR X8, [X8 + 0xC0]
	0x036E27B8 LDR X1, [X8 + 0x70]
	0x036E27BC BL 0x305FC84
	0x036E27C0 LDR X0, [X19 + 0x10]
	0x036E27C4 CBZ X0, 0x36E27E0
	0x036E27C8 LDR W8, [X0 + 0x18]
	0x036E27CC LDP X20, X19, [X31 + 0x20]
	0x036E27D0 LDR X30, [X31 + 0x10]
	0x036E27D4 SUB W0, W8, 0x2
	0x036E27D8 LDP D9, D8, [X31], #0x30
	0x036E27DC RET
	0x036E27E0 BL 0x1C16F20
	0x036E27E4 STR D10, [X31 - 0x30]!
	0x036E27E8 STP D9, D8, [X31 + 0x8]
	0x036E27EC STR X30, [X31 + 0x18]
	0x036E27F0 STP X20, X19, [X31 + 0x20]
	0x036E27F4 ADRP X20, 0xCFE000
	0x036E27F8 LDRB W8, [X20 + 0xB16]
	0x036E27FC MOV V8.16B, V2.16B
	0x036E2800 MOV V9.16B, V1.16B
	0x036E2804 MOV V10.16B, V0.16B
	0x036E2808 MOV X19, X0
	0x036E280C TBNZ X8, 0x0, 0x36E2830
	0x036E2810 ADRP X0, 0xA5E000
	0x036E2814 LDR X0, [X0 + 0x718]
	0x036E2818 BL 0x1C16CF4
	0x036E281C ADRP X0, 0xA5E000
	0x036E2820 LDR X0, [X0 + 0x720]
	0x036E2824 BL 0x1C16CF4
	0x036E2828 MOVZ W8, 0x1
	0x036E282C STRB W8, [X20 + 0xB16]
	0x036E2830 LDR X0, [X19 + 0x10]
	0x036E2834 CBZ X0, 0x36E2964
	0x036E2838 ADRP X20, 0xA5E000
	0x036E283C LDR X20, [X20 + 0x718]
	0x036E2840 LDR W10, [X0 + 0x1C]
	0x036E2844 LDR X8, [X0 + 0x10]
	0x036E2848 LDR X9, [X20]
	0x036E284C ADD W10, W10, 0x1
	0x036E2850 STR W10, [X0 + 0x1C]
	0x036E2854 CBZ X8, 0x36E2964
	0x036E2858 LDRSW X10, [X0 + 0x18]
	0x036E285C LDR W11, [X8 + 0x18]
	0x036E2860 CMP W10, W11
	0x036E2864 B.CS 0x36E287C
	0x036E2868 ADD W9, W10, 0x1
	0x036E286C ADD X8, X8, X10, 0x2, LSL
	0x036E2870 STR W9, [X0 + 0x18]
	0x036E2874 STR S10, [X8 + 0x20]
	0x036E2878 B 0x36E2898
	0x036E287C LDR X8, [X9 + 0x20]
	0x036E2880 MOV V0.16B, V10.16B
	0x036E2884 LDR X8, [X8 + 0xC0]
	0x036E2888 LDR X1, [X8 + 0x70]
	0x036E288C BL 0x305FC84
	0x036E2890 LDR X0, [X19 + 0x10]
	0x036E2894 CBZ X0, 0x36E2964
	0x036E2898 LDR W10, [X0 + 0x1C]
	0x036E289C LDR X8, [X0 + 0x10]
	0x036E28A0 LDR X9, [X20]
	0x036E28A4 ADD W10, W10, 0x1
	0x036E28A8 STR W10, [X0 + 0x1C]
	0x036E28AC CBZ X8, 0x36E2964
	0x036E28B0 LDRSW X10, [X0 + 0x18]
	0x036E28B4 LDR W11, [X8 + 0x18]
	0x036E28B8 CMP W10, W11
	0x036E28BC B.CS 0x36E28D4
	0x036E28C0 ADD W9, W10, 0x1
	0x036E28C4 ADD X8, X8, X10, 0x2, LSL
	0x036E28C8 STR W9, [X0 + 0x18]
	0x036E28CC STR S9, [X8 + 0x20]
	0x036E28D0 B 0x36E28F0
	0x036E28D4 LDR X8, [X9 + 0x20]
	0x036E28D8 MOV V0.16B, V9.16B
	0x036E28DC LDR X8, [X8 + 0xC0]
	0x036E28E0 LDR X1, [X8 + 0x70]
	0x036E28E4 BL 0x305FC84
	0x036E28E8 LDR X0, [X19 + 0x10]
	0x036E28EC CBZ X0, 0x36E2964
	0x036E28F0 LDR W10, [X0 + 0x1C]
	0x036E28F4 LDR X8, [X0 + 0x10]
	0x036E28F8 LDR X9, [X20]
	0x036E28FC ADD W10, W10, 0x1
	0x036E2900 STR W10, [X0 + 0x1C]
	0x036E2904 CBZ X8, 0x36E2964
	0x036E2908 LDRSW X10, [X0 + 0x18]
	0x036E290C LDR W11, [X8 + 0x18]
	0x036E2910 CMP W10, W11
	0x036E2914 B.CS 0x36E292C
	0x036E2918 ADD W9, W10, 0x1
	0x036E291C ADD X8, X8, X10, 0x2, LSL
	0x036E2920 STR W9, [X0 + 0x18]
	0x036E2924 STR S8, [X8 + 0x20]
	0x036E2928 B 0x36E2948
	0x036E292C LDR X8, [X9 + 0x20]
	0x036E2930 MOV V0.16B, V8.16B
	0x036E2934 LDR X8, [X8 + 0xC0]
	0x036E2938 LDR X1, [X8 + 0x70]
	0x036E293C BL 0x305FC84
	0x036E2940 LDR X0, [X19 + 0x10]
	0x036E2944 CBZ X0, 0x36E2964
	0x036E2948 LDR W8, [X0 + 0x18]
	0x036E294C LDP X20, X19, [X31 + 0x20]
	0x036E2950 LDR X30, [X31 + 0x18]
	0x036E2954 LDP D9, D8, [X31 + 0x8]
	0x036E2958 SUB W0, W8, 0x3
	0x036E295C LDR V10, [X31], #0x30
	0x036E2960 RET
	0x036E2964 BL 0x1C16F20
	0x036E2968 STP D11, D10, [X31 - 0x40]!
	0x036E296C STP D9, D8, [X31 + 0x10]
	0x036E2970 STR X30, [X31 + 0x20]
	0x036E2974 STP X20, X19, [X31 + 0x30]
	0x036E2978 ADRP X20, 0xCFE000
	0x036E297C LDRB W8, [X20 + 0xB17]
	0x036E2980 MOV V8.16B, V3.16B
	0x036E2984 MOV V9.16B, V2.16B
	0x036E2988 MOV V10.16B, V1.16B
	0x036E298C MOV V11.16B, V0.16B
	0x036E2990 MOV X19, X0
	0x036E2994 TBNZ X8, 0x0, 0x36E29B8
	0x036E2998 ADRP X0, 0xA5E000
	0x036E299C LDR X0, [X0 + 0x718]
	0x036E29A0 BL 0x1C16CF4
	0x036E29A4 ADRP X0, 0xA5E000
	0x036E29A8 LDR X0, [X0 + 0x720]
	0x036E29AC BL 0x1C16CF4
	0x036E29B0 MOVZ W8, 0x1
	0x036E29B4 STRB W8, [X20 + 0xB17]
	0x036E29B8 LDR X0, [X19 + 0x10]
	0x036E29BC CBZ X0, 0x36E2B44
	0x036E29C0 ADRP X20, 0xA5E000
	0x036E29C4 LDR X20, [X20 + 0x718]
	0x036E29C8 LDR W10, [X0 + 0x1C]
	0x036E29CC LDR X8, [X0 + 0x10]
	0x036E29D0 LDR X9, [X20]
	0x036E29D4 ADD W10, W10, 0x1
	0x036E29D8 STR W10, [X0 + 0x1C]
	0x036E29DC CBZ X8, 0x36E2B44
	0x036E29E0 LDRSW X10, [X0 + 0x18]
	0x036E29E4 LDR W11, [X8 + 0x18]
	0x036E29E8 CMP W10, W11
	0x036E29EC B.CS 0x36E2A04
	0x036E29F0 ADD W9, W10, 0x1
	0x036E29F4 ADD X8, X8, X10, 0x2, LSL
	0x036E29F8 STR W9, [X0 + 0x18]
	0x036E29FC STR S11, [X8 + 0x20]
	0x036E2A00 B 0x36E2A20
	0x036E2A04 LDR X8, [X9 + 0x20]
	0x036E2A08 MOV V0.16B, V11.16B
	0x036E2A0C LDR X8, [X8 + 0xC0]
	0x036E2A10 LDR X1, [X8 + 0x70]
	0x036E2A14 BL 0x305FC84
	0x036E2A18 LDR X0, [X19 + 0x10]
	0x036E2A1C CBZ X0, 0x36E2B44
	0x036E2A20 LDR W10, [X0 + 0x1C]
	0x036E2A24 LDR X8, [X0 + 0x10]
	0x036E2A28 LDR X9, [X20]
	0x036E2A2C ADD W10, W10, 0x1
	0x036E2A30 STR W10, [X0 + 0x1C]
	0x036E2A34 CBZ X8, 0x36E2B44
	0x036E2A38 LDRSW X10, [X0 + 0x18]
	0x036E2A3C LDR W11, [X8 + 0x18]
	0x036E2A40 CMP W10, W11
	0x036E2A44 B.CS 0x36E2A5C
	0x036E2A48 ADD W9, W10, 0x1
	0x036E2A4C ADD X8, X8, X10, 0x2, LSL
	0x036E2A50 STR W9, [X0 + 0x18]
	0x036E2A54 STR S10, [X8 + 0x20]
	0x036E2A58 B 0x36E2A78
	0x036E2A5C LDR X8, [X9 + 0x20]
	0x036E2A60 MOV V0.16B, V10.16B
	0x036E2A64 LDR X8, [X8 + 0xC0]
	0x036E2A68 LDR X1, [X8 + 0x70]
	0x036E2A6C BL 0x305FC84
	0x036E2A70 LDR X0, [X19 + 0x10]
	0x036E2A74 CBZ X0, 0x36E2B44
	0x036E2A78 LDR W10, [X0 + 0x1C]
	0x036E2A7C LDR X8, [X0 + 0x10]
	0x036E2A80 LDR X9, [X20]
	0x036E2A84 ADD W10, W10, 0x1
	0x036E2A88 STR W10, [X0 + 0x1C]
	0x036E2A8C CBZ X8, 0x36E2B44
	0x036E2A90 LDRSW X10, [X0 + 0x18]
	0x036E2A94 LDR W11, [X8 + 0x18]
	0x036E2A98 CMP W10, W11
	0x036E2A9C B.CS 0x36E2AB4
	0x036E2AA0 ADD W9, W10, 0x1
	0x036E2AA4 ADD X8, X8, X10, 0x2, LSL
	0x036E2AA8 STR W9, [X0 + 0x18]
	0x036E2AAC STR S9, [X8 + 0x20]
	0x036E2AB0 B 0x36E2AD0
	0x036E2AB4 LDR X8, [X9 + 0x20]
	0x036E2AB8 MOV V0.16B, V9.16B
	0x036E2ABC LDR X8, [X8 + 0xC0]
	0x036E2AC0 LDR X1, [X8 + 0x70]
	0x036E2AC4 BL 0x305FC84
	0x036E2AC8 LDR X0, [X19 + 0x10]
	0x036E2ACC CBZ X0, 0x36E2B44
	0x036E2AD0 LDR W10, [X0 + 0x1C]
	0x036E2AD4 LDR X8, [X0 + 0x10]
	0x036E2AD8 LDR X9, [X20]
	0x036E2ADC ADD W10, W10, 0x1
	0x036E2AE0 STR W10, [X0 + 0x1C]
	0x036E2AE4 CBZ X8, 0x36E2B44
	0x036E2AE8 LDRSW X10, [X0 + 0x18]
	0x036E2AEC LDR W11, [X8 + 0x18]
	0x036E2AF0 CMP W10, W11
	0x036E2AF4 B.CS 0x36E2B0C
	0x036E2AF8 ADD W9, W10, 0x1
	0x036E2AFC ADD X8, X8, X10, 0x2, LSL
	0x036E2B00 STR W9, [X0 + 0x18]
	0x036E2B04 STR S8, [X8 + 0x20]
	0x036E2B08 B 0x36E2B28
	0x036E2B0C LDR X8, [X9 + 0x20]
	0x036E2B10 MOV V0.16B, V8.16B
	0x036E2B14 LDR X8, [X8 + 0xC0]
	0x036E2B18 LDR X1, [X8 + 0x70]
	0x036E2B1C BL 0x305FC84
	0x036E2B20 LDR X0, [X19 + 0x10]
	0x036E2B24 CBZ X0, 0x36E2B44
	0x036E2B28 LDR W8, [X0 + 0x18]
	0x036E2B2C LDP X20, X19, [X31 + 0x30]
	0x036E2B30 LDR X30, [X31 + 0x20]
	0x036E2B34 LDP D9, D8, [X31 + 0x10]
	0x036E2B38 SUB W0, W8, 0x4
	0x036E2B3C LDP D11, D10, [X31], #0x40
	0x036E2B40 RET
	0x036E2B44 BL 0x1C16F20
	0x036E2B48 STR X30, [X31 - 0x10]!
	0x036E2B4C BL 0x36E2968
	0x036E2B50 AND X0, X0, 0x0
	0x036E2B54 LDR X30, [X31], #0x10
	0x036E2B58 RET
	0x036E2B5C STP X30, X21, [X31 - 0x20]!
	0x036E2B60 STP X20, X19, [X31 + 0x10]
	0x036E2B64 ADRP X21, 0xCFE000
	0x036E2B68 LDRB W8, [X21 + 0xB18]
	0x036E2B6C MOV X20, X1
	0x036E2B70 MOV X19, X0
	0x036E2B74 TBNZ X8, 0x0, 0x36E2B8C
	0x036E2B78 ADRP X0, 0xA5E000
	0x036E2B7C LDR X0, [X0 + 0x720]
	0x036E2B80 BL 0x1C16CF4
	0x036E2B84 MOVZ W8, 0x1
	0x036E2B88 STRB W8, [X21 + 0xB18]
	0x036E2B8C LDP S0, S1, [X20]
	0x036E2B90 LDR V2, [X20 + 0x8]
	0x036E2B94 MOV X0, X19
	0x036E2B98 BL 0x36E27E4
	0x036E2B9C LDP S0, S1, [X20 + 0xC]
	0x036E2BA0 LDP S2, S3, [X20 + 0x14]
	0x036E2BA4 MOV X0, X19
	0x036E2BA8 BL 0x36E2968
	0x036E2BAC LDR X8, [X19 + 0x10]
	0x036E2BB0 CBZ X8, 0x36E2BC8
	0x036E2BB4 LDR W8, [X8 + 0x18]
	0x036E2BB8 LDP X20, X19, [X31 + 0x10]
	0x036E2BBC SUB W0, W8, 0x7
	0x036E2BC0 LDP X30, X21, [X31], #0x20
	0x036E2BC4 RET
	0x036E2BC8 BL 0x1C16F20
	0x036E2BCC STR X30, [X31 - 0x30]!
	0x036E2BD0 STP X22, X21, [X31 + 0x10]
	0x036E2BD4 STP X20, X19, [X31 + 0x20]
	0x036E2BD8 ADRP X21, 0xCFE000
	0x036E2BDC ADRP X22, 0xA11000
	0x036E2BE0 LDRB W8, [X21 + 0xB19]
	0x036E2BE4 LDR X22, [X22 + 0x638]
	0x036E2BE8 MOV W19, W1
	0x036E2BEC MOV X20, X0
	0x036E2BF0 TBNZ X8, 0x0, 0x36E2C20
	0x036E2BF4 ADRP X0, 0xA5E000
	0x036E2BF8 LDR X0, [X0 + 0x728]
	0x036E2BFC BL 0x1C16CF4
	0x036E2C00 ADRP X0, 0xA5E000
	0x036E2C04 LDR X0, [X0 + 0x720]
	0x036E2C08 BL 0x1C16CF4
	0x036E2C0C ADRP X0, 0xA11000
	0x036E2C10 LDR X0, [X0 + 0x638]
	0x036E2C14 BL 0x1C16CF4
	0x036E2C18 MOVZ W8, 0x1
	0x036E2C1C STRB W8, [X21 + 0xB19]
	0x036E2C20 LDR X0, [X22]
	0x036E2C24 LDR X21, [X20 + 0x10]
	0x036E2C28 MOV W1, W19
	0x036E2C2C BL 0x1C16D6C
	0x036E2C30 CBZ X21, 0x36E2C6C
	0x036E2C34 ADRP X8, 0xA5E000
	0x036E2C38 LDR X8, [X8 + 0x728]
	0x036E2C3C MOV X1, X0
	0x036E2C40 MOV X0, X21
	0x036E2C44 LDR X2, [X8]
	0x036E2C48 BL 0x305FE90
	0x036E2C4C LDR X8, [X20 + 0x10]
	0x036E2C50 CBZ X8, 0x36E2C6C
	0x036E2C54 LDR W8, [X8 + 0x18]
	0x036E2C58 LDP X22, X21, [X31 + 0x10]
	0x036E2C5C SUB W0, W8, W19
	0x036E2C60 LDP X20, X19, [X31 + 0x20]
	0x036E2C64 LDR X30, [X31], #0x30
	0x036E2C68 RET
	0x036E2C6C BL 0x1C16F20
	0x036E2C70 STR D8, [X31 - 0x30]!
	0x036E2C74 STR X30, [X31 + 0x8]
	0x036E2C78 STP X22, X21, [X31 + 0x10]
	0x036E2C7C STP X20, X19, [X31 + 0x20]
	0x036E2C80 ADRP X22, 0xCFE000
	0x036E2C84 LDRB W8, [X22 + 0xB1A]
	0x036E2C88 MOV V8.16B, V0.16B
	0x036E2C8C MOV W19, W2
	0x036E2C90 MOV X20, X1
	0x036E2C94 MOV X21, X0
	0x036E2C98 TBNZ X8, 0x0, 0x36E2CBC
	0x036E2C9C ADRP X0, 0xA5E000
	0x036E2CA0 LDR X0, [X0 + 0x720]
	0x036E2CA4 BL 0x1C16CF4
	0x036E2CA8 ADRP X0, 0xA5E000
	0x036E2CAC LDR X0, [X0 + 0x730]
	0x036E2CB0 BL 0x1C16CF4
	0x036E2CB4 MOVZ W8, 0x1
	0x036E2CB8 STRB W8, [X22 + 0xB1A]
	0x036E2CBC LDR X0, [X21 + 0x10]
	0x036E2CC0 CBZ X0, 0x36E2D0C
	0x036E2CC4 LDR W8, [X0 + 0x18]
	0x036E2CC8 ADD W1, W20, W19
	0x036E2CCC CMP W1, W8
	0x036E2CD0 B.GE 0x36E2CF8
	0x036E2CD4 ADRP X8, 0xA5E000
	0x036E2CD8 LDR X8, [X8 + 0x730]
	0x036E2CDC LDP X20, X19, [X31 + 0x20]
	0x036E2CE0 LDP X22, X21, [X31 + 0x10]
	0x036E2CE4 LDR X30, [X31 + 0x8]
	0x036E2CE8 LDR X2, [X8]
	0x036E2CEC MOV V0.16B, V8.16B
	0x036E2CF0 LDR V8, [X31], #0x30
	0x036E2CF4 B 0x305F9E0
	0x036E2CF8 LDP X20, X19, [X31 + 0x20]
	0x036E2CFC LDP X22, X21, [X31 + 0x10]
	0x036E2D00 LDR X30, [X31 + 0x8]
	0x036E2D04 LDR V8, [X31], #0x30
	0x036E2D08 RET
	0x036E2D0C BL 0x1C16F20
	0x036E2D10 SUB X31, X31, 0x30
	0x036E2D14 STR X30, [X31 + 0x10]
	0x036E2D18 STP X20, X19, [X31 + 0x20]
	0x036E2D1C ADRP X20, 0xCFE000
	0x036E2D20 LDRB W8, [X20 + 0xB1B]

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 528
	022 Move X21, 0xCFF000
	023 Move W8, [X21+2821]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {71}
	030 Move X0, 0xA5F000
	031 Move X0, [X0+1680]
	032 Call 0x1C17CF4
	033 Move X0, 0xA5F000
	034 Move X0, [X0+1688]
	035 Call 0x1C17CF4
	036 Move X0, 0xA5F000
	037 Move X0, [X0+1696]
	038 Call 0x1C17CF4
	039 Move X0, 0xA5F000
	040 Move X0, [X0+1704]
	041 Call 0x1C17CF4
	042 Move X0, 0xA5F000
	043 Move X0, [X0+1712]
	044 Call 0x1C17CF4
	045 Move X0, 0xA5F000
	046 Move X0, [X0+1720]
	047 Call 0x1C17CF4
	048 Move X0, 0xA5F000
	049 Move X0, [X0+1728]
	050 Call 0x1C17CF4
	051 Move X0, 0xA5F000
	052 Move X0, [X0+1736]
	053 Call 0x1C17CF4
	054 Move X0, 0xA5F000
	055 Move X0, [X0+1408]
	056 Call 0x1C17CF4
	057 Move X0, 0xA5F000
	058 Move X0, [X0+1376]
	059 Call 0x1C17CF4
	060 Move X0, 0xA5F000
	061 Move X0, [X0+1744]
	062 Call 0x1C17CF4
	063 Move X0, 0xA5F000
	064 Move X0, [X0+1752]
	065 Call 0x1C17CF4
	066 Move X0, 0xA5F000
	067 Move X0, [X0+1624]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X21+2821], W8
	071 NotImplemented "Instruction MOVI not yet implemented."
	072 Move [X31+304], X31
	073 Move [X31+312], X31
	074 Move [X31+320], X31
	075 Move [X31+272], V0
	076 Move [X31+280], V0
	077 Move [X31+240], V0
	078 Move [X31+248], V0
	079 Move [X31+208], V0
	080 Move [X31+216], V0
	081 Move W8, [X20+36]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, 0xA5F000
	084 Move X8, [X8+1680]
	085 Move X21, 0xA5F000
	086 Move X23, 0xA5F000
	087 Move X24, 0xA5F000
	088 Move X1, [X8]
	089 Move X21, [X21+1408]
	090 Move X23, [X23+1736]
	091 Move X24, [X24+1624]
	092 Move X0, X20
	093 Call 0x21A553C, X0
	094 Move X8, [X21]
	095 Move X22, X0
	096 Move X0, X8
	097 Call 0x1C17F10
	098 Move X2, [X23]
	099 Move X1, X22
	100 Move X21, X0
	101 Call List`1<Object>..ctor, X0, X1
	102 Move X0, [X24]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X24]
	108 Move X8, [X0+184]
	109 Move X22, [X8+8]
	110 Compare X22, 0
	111 JumpIfNotEqual {133}
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {117}
	115 Call 0x1C17DFC
	116 Move X0, [X24]
	117 Move X9, 0xA5F000
	118 Move X8, [X0+184]
	119 Move X9, [X9+1744]
	120 Move X23, [X8]
	121 Move X0, [X9]
	122 Call 0x1C17F10
	123 Move X8, 0xA5F000
	124 Move X8, [X8+1752]
	125 Move X1, X23
	126 Move X3, X31
	127 Move X22, X0
	128 Move X2, [X8]
	129 Call Predicate`1<Object>..ctor, X0, X1, X2
	130 Move X8, [X24]
	131 Move X8, [X8+184]
	132 Move [X8+8], X22
	133 Compare X21, 0
	134 JumpIfEqual {394}
	135 Move X8, 0xA5F000
	136 Move X8, [X8+1728]
	137 Move X0, X21
	138 Move X1, X22
	139 Move X2, [X8]
	140 Call List`1<Object>.RemoveAll, X0, X1
	141 Move X21, 0xA5F000
	142 Move X21, [X21+1376]
	143 Move X0, [X21]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X22, 0xCFF000
	149 Move W8, [X22+2829]
	150 Compare W8, 0
	151 JumpIfNotEqual {157}
	152 Move X0, 0xA5F000
	153 Move X0, [X0+1376]
	154 Call 0x1C17CF4
	155 Move W8, 1
	156 Move [X22+2829], W8
	157 Move X0, [X21]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {163}
	161 Call 0x1C17DFC
	162 Move X0, [X21]
	163 Move X8, [X0+184]
	164 Move X21, [X8]
	165 Compare X21, 0
	166 JumpIfEqual {394}
	167 Move X8, 0xA5F000
	168 Move X8, [X8+1720]
	169 Move X25, 0xA5F000
	170 Move X26, 0xA5F000
	171 Move X24, 0xA5F000
	172 Move X1, [X8]
	173 Move X25, [X25+1696]
	174 Move X26, [X26+1712]
	175 Move X24, [X24+1688]
	176 Add X8, X31, 432
	177 Move X0, X21
	178 Call List`1<Object>.GetEnumerator, X0
	179 Move V0, [X31+27]
	180 Move X8, [X31+448]
	181 Move X21, 0xA12000
	182 Move X21, [X21+1440]
	183 Move X27, 0xCF7000
	184 Move W28, 1
	185 Move [X31+19], V0
	186 Move [X31+320], X8
	187 Move W29, 96
	188 Move X1, [X25]
	189 Add X0, X31, 304
	190 Call Enumerator<Object>.MoveNext, X0
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {362}
	195 Move X22, [X31+320]
	196 Move W0, [X20+64]
	197 Move X1, X31
	198 Call LayerMask.op_Implicit, X0
	199 Compare X22, 0
	200 JumpIfEqual {387}
	201 Move W23, W0
	202 Move X0, X22
	203 Move X1, X31
	204 Call Component.get_gameObject, X0
	205 Compare X0, 0
	206 JumpIfEqual {388}
	207 Move X1, X31
	208 Call GameObject.get_layer, X0
	209 NotImplemented "Instruction LSRV not yet implemented."
	210 Move TEMP, X8
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {188}
	214 Move W1, [X20+32]
	215 Move X0, X22
	216 Call NavMeshModifierVolume.AffectsAgentType, X0, X1
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {188}
	221 Move X0, X22
	222 Move X1, X31
	223 Call Component.get_transform, X0
	224 Compare X0, 0
	225 JumpIfEqual {390}
	226 Move S1, [X22+48]
	227 Move S2, [X22+52]
	228 Move V0, [X22+44]
	229 Move X1, X31
	230 Call Transform.TransformPoint, X0, X1
	231 Move V11, V0
	232 Move V12, V1
	233 Move V13, V2
	234 Move X0, X22
	235 Move X1, X31
	236 Call Component.get_transform, X0
	237 Compare X0, 0
	238 JumpIfEqual {391}
	239 Move X1, X31
	240 Call Transform.get_lossyScale, X0
	241 Move [X31+40], S1
	242 Move [X31+48], S0
	243 Move [X31+36], S2
	244 Move S10, [X22+32]
	245 Move S1, [X22+36]
	246 Move V0, [X22+40]
	247 Move [X31+28], S0
	248 Move [X31+36], S1
	249 NotImplemented "Instruction MOVI not yet implemented."
	250 Move [X31+272], V0
	251 Move [X31+280], V0
	252 Move [X31+240], V0
	253 Move [X31+248], V0
	254 Move [X31+208], V0
	255 Move [X31+216], V0
	256 Add X0, X31, 208
	257 Move W1, 5
	258 Move X2, X31
	259 Call NavMeshBuildSource.set_shape, X0, X1
	260 Move X0, X22
	261 Move X1, X31
	262 Call Component.get_transform, X0
	263 Compare X0, 0
	264 JumpIfEqual {392}
	265 Move X1, X31
	266 Call Transform.get_rotation, X0
	267 Move W8, [X27+2139]
	268 Move V14, V0
	269 Move V15, V1
	270 Move V8, V2
	271 Move V9, V3
	272 Compare W8, 0
	273 JumpIfNotEqual {277}
	274 Move X0, X21
	275 Call 0x1C17CF4
	276 Move [X27+2139], W28
	277 Move X8, [X21]
	278 Move X8, [X8+184]
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 Move V0, [X8+20]
	281 Move [X31+8], S0
	282 Add X8, X31, 432
	283 Move V0, V11
	284 Move V1, V12
	285 Move V2, V13
	286 Move V3, V14
	287 Move V4, V15
	288 Move V5, V8
	289 Move V6, V9
	290 Move X0, X31
	291 Move [X31], X9
	292 Call Matrix4x4.TRS, X0, X1, X2
	293 Move V0, [X31+432]
	294 Move V1, [X31+448]
	295 Move V2, [X31+464]
	296 Move V3, [X31+480]
	297 Move [X31+144], V0
	298 Move [X31+152], V1
	299 Move [X31+176], V2
	300 Move [X31+184], V3
	301 Add X0, X31, 208
	302 Add X1, X31, 144
	303 Move X2, X31
	304 Call NavMeshBuildSource.set_transform, X0, X1
	305 Move S1, [X31+40]
	306 Move S0, [X31+44]
	307 Move S3, [X31+32]
	308 Move S2, [X31+36]
	309 NotImplemented "Instruction FABS not yet implemented."
	310 Multiply S1, S1, S3
	311 Move V3, [X31+28]
	312 NotImplemented "Instruction FABS not yet implemented."
	313 NotImplemented "Instruction FABS not yet implemented."
	314 Multiply S0, S0, S10
	315 Multiply S2, S2, S3
	316 Add X0, X31, 208
	317 Move X1, X31
	318 Call NavMeshBuildSource.set_size, X0, X1
	319 Move W1, [X22+56]
	320 Add X0, X31, 208
	321 Move X2, X31
	322 Call NavMeshBuildSource.set_area, X0, X1
	323 Move X22, [X19]
	324 Add X0, X31, 48
	325 Add X1, X31, 208
	326 Move W2, 96
	327 Call 0x3EB2AC0
	328 Compare X22, 0
	329 JumpIfEqual {393}
	330 Move X23, [X26]
	331 Add X0, X31, 336
	332 Add X1, X31, 48
	333 Move W2, 96
	334 Call 0x3EB2AC0
	335 Move W9, [X22+28]
	336 Move X8, [X22+16]
	337 Add W9, W9, 1
	338 Move [X22+28], W9
	339 Compare X8, 0
	340 JumpIfEqual {389}
	341 NotImplemented "Instruction LDRSW not yet implemented."
	342 Move W10, [X8+24]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 NotImplemented "Instruction MADD not yet implemented."
	345 Add W10, W9, 1
	346 Add X0, X8, 32
	347 Add X1, X31, 336
	348 Move W2, 96
	349 Move [X22+24], W10
	350 Call 0x3EB2AC0
	351 Move X8, [X23+32]
	352 Add X0, X31, 432
	353 Add X1, X31, 336
	354 Move W2, 96
	355 Move X8, [X8+192]
	356 Move X23, [X8+112]
	357 Call 0x3EB2AC0
	358 Add X1, X31, 432
	359 Move X0, X22
	360 Move X2, X23
	361 Call List`1<NavMeshBuildSource>.AddWithResize, X0, X1
	362 Move X1, [X24]
	363 Add X0, X31, 304
	364 Call Enumerator<Object>.Dispose, X0
	365 Add X31, X31, 528
	366 Move X20, [X31+144]
	367 Move X19, [X31+152]
	368 Move X22, [X31+128]
	369 Move X21, [X31+136]
	370 Move X24, [X31+112]
	371 Move X23, [X31+120]
	372 Move X26, [X31+96]
	373 Move X25, [X31+104]
	374 Move X28, [X31+80]
	375 Move X27, [X31+88]
	376 Move X29, [X31+64]
	377 Move X30, [X31+72]
	378 Move D9, [X31+48]
	379 Move D8, [X31+56]
	380 Move D11, [X31+32]
	381 Move D10, [X31+40]
	382 Move D13, [X31+16]
	383 Move D12, [X31+24]
	384 Move D15, [X31+160]
	385 Move D14, [X31+168]
	386 Return 
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Move X19, X0
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X0, X19
	398 Call 0x3EB2AD0
	399 Move X20, [X0]
	400 Call 0x3EB2AE0
	401 Move X1, [X24]
	402 Add X0, X31, 304
	403 Call Enumerator<Object>.Dispose, X0
	404 Compare X20, 0
	405 JumpIfEqual {365}
	406 Move X0, X20
	407 Call 0x1C17F18
	408 Move X20, X31
	409 Move X19, X0
	410 Move X1, [X24]
	411 Add X0, X31, 304
	412 Call Enumerator<Object>.Dispose, X0
	413 Compare X20, 0
	414 JumpIfNotEqual {417}
	415 Move X0, X19
	416 Call 0x1D2D690
	417 Move X0, X20
	418 Call 0x1C17F18
	419 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildSource> CollectSources()

Disassembly:
	0x036E1444 BL 0x1C16F20
	0x036E1448 BL 0x1C16F20
	0x036E144C B 0x36E14A4
	0x036E1450 B 0x36E14A4
	0x036E1454 B 0x36E14A4
	0x036E1458 B 0x36E14A4
	0x036E145C B 0x36E14A4
	0x036E1460 B 0x36E14A4
	0x036E1464 B 0x36E14A4
	0x036E1468 B 0x36E14A4
	0x036E146C B 0x36E14A4
	0x036E1470 B 0x36E14A4
	0x036E1474 B 0x36E14A4
	0x036E1478 B 0x36E14A4
	0x036E147C B 0x36E14A4
	0x036E1480 B 0x36E14A4
	0x036E1484 B 0x36E14A4
	0x036E1488 B 0x36E14A4
	0x036E148C B 0x36E14A4
	0x036E1490 B 0x36E14A4
	0x036E1494 B 0x36E14A4
	0x036E1498 B 0x36E14A4
	0x036E149C B 0x36E14A4
	0x036E14A0 B 0x36E14A4
	0x036E14A4 LDR X19, [X31 + 0x20]
	0x036E14A8 MOV X20, X0
	0x036E14AC CMP W1, 0x1
	0x036E14B0 B.NE 0x36E14E4
	0x036E14B4 MOV X0, X20
	0x036E14B8 BL 0x3EB1AD0
	0x036E14BC LDR X21, [X0]
	0x036E14C0 BL 0x3EB1AE0
	0x036E14C4 ADRP X8, 0xA5F000
	0x036E14C8 LDR X8, [X8 + 0x660]
	0x036E14CC ADD X0, X31, 0x430
	0x036E14D0 LDR X1, [X8]
	0x036E14D4 BL 0x2BC263C
	0x036E14D8 CBZ X21, 0x36E13E8
	0x036E14DC MOV X0, X21
	0x036E14E0 BL 0x1C16F18
	0x036E14E4 MOV X21, X31
	0x036E14E8 B 0x36E14F0
	0x036E14EC MOV X20, X0
	0x036E14F0 ADRP X8, 0xA5F000
	0x036E14F4 LDR X8, [X8 + 0x660]
	0x036E14F8 LDR X1, [X8]
	0x036E14FC ADD X0, X31, 0x430
	0x036E1500 BL 0x2BC263C
	0x036E1504 CBNZ X21, 0x36E1510
	0x036E1508 MOV X0, X20
	0x036E150C BL 0x1D2C690
	0x036E1510 MOV X0, X21
	0x036E1514 BL 0x1C16F18
	0x036E1518 BL 0x1990590
	0x036E151C SUB X31, X31, 0xC0
	0x036E1520 STP D11, D10, [X31 + 0x70]
	0x036E1524 STP D9, D8, [X31 + 0x80]
	0x036E1528 STR X30, [X31 + 0x90]
	0x036E152C STP X22, X21, [X31 + 0xA0]
	0x036E1530 STP X20, X19, [X31 + 0xB0]
	0x036E1534 ADRP X22, 0xCFF000
	0x036E1538 ADRP X21, 0xA5F000
	0x036E153C LDRB W8, [X22 + 0xB01]
	0x036E1540 LDR X21, [X21 + 0x590]
	0x036E1544 MOV X19, X1
	0x036E1548 MOV X20, X0
	0x036E154C TBNZ X8, 0x0, 0x36E1564
	0x036E1550 ADRP X0, 0xA5F000
	0x036E1554 LDR X0, [X0 + 0x590]
	0x036E1558 BL 0x1C16CF4
	0x036E155C MOVZ W8, 0x1
	0x036E1560 STRB W8, [X22 + 0xB01]
	0x036E1564 MOV X0, X20
	0x036E1568 BL 0x36E0444
	0x036E156C LDR X8, [X21]
	0x036E1570 LDUR V8, [X20 + 0x34]
	0x036E1574 LDR V9, [X20 + 0x3C]
	0x036E1578 LDR V10, [X20 + 0x28]
	0x036E157C LDR W9, [X8 + 0xE0]
	0x036E1580 LDR V11, [X20 + 0x30]
	0x036E1584 MOV X21, X0
	0x036E1588 CBNZ W9, 0x36E1594
	0x036E158C MOV X0, X8
	0x036E1590 BL 0x1C16DFC
	0x036E1594 LDR W8, [X20 + 0x24]
	0x036E1598 CMP W8, 0x1
	0x036E159C B.NE 0x36E15BC
	0x036E15A0 UNIMPLEMENTED
	0x036E15A4 FABS S1, S11
	0x036E15A8 MOVI V2.2S, 0x3F, 0x18
	0x036E15AC FMOV S3, 0.5
	0x00000000 INVALID
	0x036E15B4 FMUL S11, S1, S3
	0x036E15B8 B 0x36E15DC
	0x036E15BC ADD X8, X31, 0x58
	0x036E15C0 MOV X0, X20
	0x036E15C4 MOV X1, X21
	0x036E15C8 BL 0x36E0D04
	0x036E15CC LDR V8, [X31 + 0x58]
	0x036E15D0 LDR V9, [X31 + 0x60]
	0x036E15D4 LDUR V10, [X31 + 0x64]
	0x036E15D8 LDR V11, [X31 + 0x6C]
	0x036E15DC ADD X8, X31, 0x18
	0x036E15E0 MOV X0, X20
	0x036E15E4 BL 0x36E0094
	0x036E15E8 ADD X1, X31, 0x18
	0x036E15EC ADD X3, X31, 0x0
	0x036E15F0 MOV X0, X19
	0x036E15F4 MOV X2, X21
	0x036E15F8 MOV X4, X31
	0x036E15FC STR D8, [X31]
	0x036E1600 STR S9, [X31 + 0x8]
	0x036E1604 STUR D10, [X31 + 0xC]
	0x036E1608 STR S11, [X31 + 0x14]
	0x036E160C BL 0x3BE11F8
	0x036E1610 LDP X20, X19, [X31 + 0xB0]
	0x036E1614 LDP X22, X21, [X31 + 0xA0]
	0x036E1618 LDR X30, [X31 + 0x90]
	0x036E161C LDP D9, D8, [X31 + 0x80]
	0x036E1620 LDP D11, D10, [X31 + 0x70]
	0x036E1624 ADD X31, X31, 0xC0
	0x036E1628 RET
	0x036E162C STP X30, X21, [X31 - 0x20]!
	0x036E1630 STP X20, X19, [X31 + 0x10]
	0x036E1634 ADRP X19, 0xCFF000
	0x036E1638 LDRB W8, [X19 + 0xB04]
	0x036E163C TBNZ X8, 0x0, 0x36E166C
	0x036E1640 ADRP X0, 0xA5F000
	0x036E1644 LDR X0, [X0 + 0x5A8]
	0x036E1648 BL 0x1C16CF4
	0x036E164C ADRP X0, 0xA5F000
	0x036E1650 LDR X0, [X0 + 0x688]
	0x036E1654 BL 0x1C16CF4
	0x036E1658 ADRP X0, 0xA5F000
	0x036E165C LDR X0, [X0 + 0x590]
	0x036E1660 BL 0x1C16CF4
	0x036E1664 MOVZ W8, 0x1
	0x036E1668 STRB W8, [X19 + 0xB04]
	0x036E166C ADRP X20, 0xA5F000
	0x036E1670 ADRP X21, 0xA5F000
	0x036E1674 LDR X20, [X20 + 0x590]
	0x036E1678 LDR X21, [X21 + 0x688]
	0x036E167C MOV W19, W31
	0x036E1680 LDR X0, [X20]
	0x036E1684 LDR W8, [X0 + 0xE0]
	0x036E1688 CBNZ W8, 0x36E1694
	0x036E168C BL 0x1C16DFC
	0x036E1690 LDR X0, [X20]
	0x036E1694 LDR X8, [X0 + 0xB8]
	0x036E1698 LDR X8, [X8]
	0x036E169C CBZ X8, 0x36E16F4
	0x036E16A0 LDR W9, [X8 + 0x18]
	0x036E16A4 CMP W19, W9
	0x036E16A8 B.GE 0x36E16E8
	0x036E16AC LDR W9, [X0 + 0xE0]
	0x036E16B0 CBNZ W9, 0x36E16C8
	0x036E16B4 BL 0x1C16DFC
	0x036E16B8 LDR X8, [X20]
	0x036E16BC LDR X8, [X8 + 0xB8]
	0x036E16C0 LDR X8, [X8]
	0x036E16C4 CBZ X8, 0x36E16F4
	0x036E16C8 LDR X2, [X21]
	0x036E16CC MOV X0, X8
	0x036E16D0 MOV W1, W19
	0x036E16D4 BL 0x301BCCC
	0x036E16D8 CBZ X0, 0x36E16F4
	0x036E16DC BL 0x36E16F8
	0x036E16E0 ADD W19, W19, 0x1
	0x036E16E4 B 0x36E1680
	0x036E16E8 LDP X20, X19, [X31 + 0x10]
	0x036E16EC LDP X30, X21, [X31], #0x20
	0x036E16F0 RET
	0x036E16F4 BL 0x1C16F20
	0x036E16F8 STP X30, X19, [X31 - 0x10]!
	0x036E16FC MOV X19, X0
	0x036E1700 BL 0x36E1F1C
	0x036E1704 TBZ X0, 0x0, 0x36E1724
	0x036E1708 ADD X0, X19, 0x6C
	0x036E170C MOV X1, X31
	0x036E1710 BL 0x3BE1CB8
	0x036E1714 STR W31, [X19 + 0x6C]
	0x036E1718 MOV X0, X19
	0x036E171C LDP X30, X19, [X31], #0x10
	0x036E1720 B 0x36DFD50
	0x036E1724 LDP X30, X19, [X31], #0x10
	0x036E1728 RET
	0x036E172C STP D15, D14, [X31 - 0xA0]!
	0x036E1730 STP D13, D12, [X31 + 0x10]
	0x036E1734 STP D11, D10, [X31 + 0x20]
	0x036E1738 STP D9, D8, [X31 + 0x30]
	0x036E173C STP X29, X30, [X31 + 0x40]
	0x036E1740 STP X28, X27, [X31 + 0x50]
	0x036E1744 STP X26, X25, [X31 + 0x60]
	0x036E1748 STP X24, X23, [X31 + 0x70]
	0x036E174C STP X22, X21, [X31 + 0x80]
	0x036E1750 STP X20, X19, [X31 + 0x90]
	0x036E1754 SUB X31, X31, 0x210
	0x036E1758 ADRP X21, 0xCFF000
	0x036E175C LDRB W8, [X21 + 0xB05]
	0x036E1760 MOV X19, X1
	0x036E1764 MOV X20, X0
	0x036E1768 TBNZ X8, 0x0, 0x36E1810
	0x036E176C ADRP X0, 0xA5F000
	0x036E1770 LDR X0, [X0 + 0x690]
	0x036E1774 BL 0x1C16CF4
	0x036E1778 ADRP X0, 0xA5F000
	0x036E177C LDR X0, [X0 + 0x698]
	0x036E1780 BL 0x1C16CF4
	0x036E1784 ADRP X0, 0xA5F000
	0x036E1788 LDR X0, [X0 + 0x6A0]
	0x036E178C BL 0x1C16CF4
	0x036E1790 ADRP X0, 0xA5F000
	0x036E1794 LDR X0, [X0 + 0x6A8]
	0x036E1798 BL 0x1C16CF4
	0x036E179C ADRP X0, 0xA5F000
	0x036E17A0 LDR X0, [X0 + 0x6B0]
	0x036E17A4 BL 0x1C16CF4
	0x036E17A8 ADRP X0, 0xA5F000
	0x036E17AC LDR X0, [X0 + 0x6B8]
	0x036E17B0 BL 0x1C16CF4
	0x036E17B4 ADRP X0, 0xA5F000
	0x036E17B8 LDR X0, [X0 + 0x6C0]
	0x036E17BC BL 0x1C16CF4
	0x036E17C0 ADRP X0, 0xA5F000
	0x036E17C4 LDR X0, [X0 + 0x6C8]
	0x036E17C8 BL 0x1C16CF4
	0x036E17CC ADRP X0, 0xA5F000
	0x036E17D0 LDR X0, [X0 + 0x580]
	0x036E17D4 BL 0x1C16CF4
	0x036E17D8 ADRP X0, 0xA5F000
	0x036E17DC LDR X0, [X0 + 0x560]
	0x036E17E0 BL 0x1C16CF4
	0x036E17E4 ADRP X0, 0xA5F000
	0x036E17E8 LDR X0, [X0 + 0x6D0]
	0x036E17EC BL 0x1C16CF4
	0x036E17F0 ADRP X0, 0xA5F000
	0x036E17F4 LDR X0, [X0 + 0x6D8]
	0x036E17F8 BL 0x1C16CF4
	0x036E17FC ADRP X0, 0xA5F000
	0x036E1800 LDR X0, [X0 + 0x658]
	0x036E1804 BL 0x1C16CF4
	0x036E1808 MOVZ W8, 0x1
	0x036E180C STRB W8, [X21 + 0xB05]
	0x036E1810 MOVI V0.2D, 0x0
	0x036E1814 STP X31, X31, [X31 + 0x130]
	0x036E1818 STR X31, [X31 + 0x140]
	0x036E181C STP V0, V0, [X31 + 0x110]
	0x036E1820 STP V0, V0, [X31 + 0xF0]
	0x036E1824 STP V0, V0, [X31 + 0xD0]
	0x036E1828 LDR W8, [X20 + 0x24]
	0x036E182C CMP W8, 0x2
	0x036E1830 B.NE 0x36E1910
	0x036E1834 ADRP X8, 0xA5F000
	0x036E1838 LDR X8, [X8 + 0x690]
	0x036E183C ADRP X21, 0xA5F000
	0x036E1840 ADRP X23, 0xA5F000
	0x036E1844 ADRP X24, 0xA5F000
	0x036E1848 LDR X1, [X8]
	0x036E184C LDR X21, [X21 + 0x580]
	0x036E1850 LDR X23, [X23 + 0x6C8]
	0x036E1854 LDR X24, [X24 + 0x658]
	0x036E1858 MOV X0, X20
	0x036E185C BL 0x21A453C
	0x036E1860 LDR X8, [X21]
	0x036E1864 MOV X22, X0
	0x036E1868 MOV X0, X8
	0x036E186C BL 0x1C16F10
	0x036E1870 LDR X2, [X23]
	0x036E1874 MOV X1, X22
	0x036E1878 MOV X21, X0
	0x036E187C BL 0x301B8E0
	0x036E1880 LDR X0, [X24]
	0x036E1884 LDR W8, [X0 + 0xE0]
	0x036E1888 CBNZ W8, 0x36E1894
	0x036E188C BL 0x1C16DFC
	0x036E1890 LDR X0, [X24]
	0x036E1894 LDR X8, [X0 + 0xB8]
	0x036E1898 LDR X22, [X8 + 0x8]
	0x036E189C CBNZ X22, 0x36E18F0
	0x036E18A0 LDR W8, [X0 + 0xE0]
	0x036E18A4 CBNZ W8, 0x36E18B0
	0x036E18A8 BL 0x1C16DFC
	0x036E18AC LDR X0, [X24]
	0x036E18B0 ADRP X9, 0xA5F000
	0x036E18B4 LDR X8, [X0 + 0xB8]
	0x036E18B8 LDR X9, [X9 + 0x6D0]
	0x036E18BC LDR X23, [X8]
	0x036E18C0 LDR X0, [X9]
	0x036E18C4 BL 0x1C16F10
	0x036E18C8 ADRP X8, 0xA5F000
	0x036E18CC LDR X8, [X8 + 0x6D8]
	0x036E18D0 MOV X1, X23
	0x036E18D4 MOV X3, X31
	0x036E18D8 MOV X22, X0
	0x036E18DC LDR X2, [X8]
	0x036E18E0 BL 0x24AD1FC
	0x036E18E4 LDR X8, [X24]
	0x036E18E8 LDR X8, [X8 + 0xB8]
	0x036E18EC STR X22, [X8 + 0x8]
	0x036E18F0 CBZ X21, 0x36E1C60
	0x036E18F4 ADRP X8, 0xA5F000
	0x036E18F8 LDR X8, [X8 + 0x6C0]
	0x036E18FC MOV X0, X21
	0x036E1900 MOV X1, X22
	0x036E1904 LDR X2, [X8]
	0x036E1908 BL 0x301D8DC
	0x036E190C B 0x36E1964
	0x036E1910 ADRP X21, 0xA5F000
	0x036E1914 LDR X21, [X21 + 0x560]
	0x036E1918 LDR X0, [X21]
	0x036E191C LDR W8, [X0 + 0xE0]
	0x036E1920 CBNZ W8, 0x36E1928
	0x036E1924 BL 0x1C16DFC
	0x036E1928 ADRP X22, 0xCFF000
	0x036E192C LDRB W8, [X22 + 0xB0D]
	0x036E1930 CBNZ W8, 0x36E1948
	0x036E1934 ADRP X0, 0xA5F000
	0x036E1938 LDR X0, [X0 + 0x560]
	0x036E193C BL 0x1C16CF4
	0x036E1940 MOVZ W8, 0x1
	0x036E1944 STRB W8, [X22 + 0xB0D]
	0x036E1948 LDR X0, [X21]
	0x036E194C LDR W8, [X0 + 0xE0]
	0x036E1950 CBNZ W8, 0x36E195C
	0x036E1954 BL 0x1C16DFC
	0x036E1958 LDR X0, [X21]
	0x036E195C LDR X8, [X0 + 0xB8]
	0x036E1960 LDR X21, [X8]
	0x036E1964 CBZ X21, 0x36E1C60
	0x036E1968 ADRP X8, 0xA5F000
	0x036E196C LDR X8, [X8 + 0x6B8]
	0x036E1970 ADRP X25, 0xA5F000
	0x036E1974 ADRP X26, 0xA5F000
	0x036E1978 ADRP X24, 0xA5F000
	0x036E197C LDR X1, [X8]
	0x036E1980 LDR X25, [X25 + 0x6A0]
	0x036E1984 LDR X26, [X26 + 0x6B0]
	0x036E1988 LDR X24, [X24 + 0x698]
	0x036E198C ADD X8, X31, 0x1B0
	0x036E1990 MOV X0, X21
	0x036E1994 BL 0x301CB58
	0x036E1998 LDR V0, [X31 + 0x1B]
	0x036E199C LDR X8, [X31 + 0x1C0]
	0x036E19A0 ADRP X21, 0xA12000
	0x036E19A4 LDR X21, [X21 + 0x5A0]
	0x036E19A8 ADRP X27, 0xCF7000
	0x036E19AC MOVZ W28, 0x1
	0x036E19B0 STR V0, [X31 + 0x13]
	0x036E19B4 STR X8, [X31 + 0x140]
	0x036E19B8 MOVZ W29, 0x60
	0x036E19BC LDR X1, [X25]
	0x036E19C0 ADD X0, X31, 0x130
	0x036E19C4 BL 0x2BC4350
	0x036E19C8 TBZ X0, 0x0, 0x36E1C08
	0x036E19CC LDR X22, [X31 + 0x140]
	0x036E19D0 LDR W0, [X20 + 0x40]
	0x036E19D4 MOV X1, X31
	0x036E19D8 BL 0x3C35CB8
	0x036E19DC CBZ X22, 0x36E1C44
	0x036E19E0 MOV W23, W0
	0x036E19E4 MOV X0, X22
	0x036E19E8 MOV X1, X31
	0x036E19EC BL 0x3C32ECC
	0x036E19F0 CBZ X0, 0x36E1C48
	0x036E19F4 MOV X1, X31
	0x036E19F8 BL 0x3C35734
	0x036E19FC LSRV W8, W23, W0
	0x036E1A00 TBZ X8, 0x0, 0x36E19BC
	0x036E1A04 LDR W1, [X20 + 0x20]
	0x036E1A08 MOV X0, X22
	0x036E1A0C BL 0x36DF68C
	0x036E1A10 TBZ X0, 0x0, 0x36E19BC
	0x036E1A14 MOV X0, X22
	0x036E1A18 MOV X1, X31
	0x036E1A1C BL 0x3C32E90
	0x036E1A20 CBZ X0, 0x36E1C50
	0x036E1A24 LDP S1, S2, [X22 + 0x30]
	0x036E1A28 LDR V0, [X22 + 0x2C]
	0x036E1A2C MOV X1, X31
	0x036E1A30 BL 0x3C3DE4C
	0x036E1A34 MOV V11.16B, V0.16B
	0x036E1A38 MOV V12.16B, V1.16B
	0x036E1A3C MOV V13.16B, V2.16B
	0x036E1A40 MOV X0, X22
	0x036E1A44 MOV X1, X31
	0x036E1A48 BL 0x3C32E90
	0x036E1A4C CBZ X0, 0x36E1C54
	0x036E1A50 MOV X1, X31
	0x036E1A54 BL 0x3C40EA8
	0x036E1A58 STP S1, S0, [X31 + 0x28]
	0x036E1A5C STR S2, [X31 + 0x24]
	0x036E1A60 LDP S10, S1, [X22 + 0x20]
	0x036E1A64 LDR V0, [X22 + 0x28]
	0x036E1A68 STP S0, S1, [X31 + 0x1C]
	0x036E1A6C MOVI V0.2D, 0x0
	0x036E1A70 STP V0, V0, [X31 + 0x110]
	0x036E1A74 STP V0, V0, [X31 + 0xF0]
	0x036E1A78 STP V0, V0, [X31 + 0xD0]
	0x036E1A7C ADD X0, X31, 0xD0
	0x036E1A80 MOVZ W1, 0x5
	0x036E1A84 MOV X2, X31
	0x036E1A88 BL 0x3BE291C
	0x036E1A8C MOV X0, X22
	0x036E1A90 MOV X1, X31
	0x036E1A94 BL 0x3C32E90
	0x036E1A98 CBZ X0, 0x36E1C58
	0x036E1A9C MOV X1, X31
	0x036E1AA0 BL 0x3C3DEB4
	0x036E1AA4 LDRB W8, [X27 + 0x85B]
	0x036E1AA8 MOV V14.16B, V0.16B
	0x036E1AAC MOV V15.16B, V1.16B
	0x036E1AB0 MOV V8.16B, V2.16B
	0x036E1AB4 MOV V9.16B, V3.16B
	0x036E1AB8 CBNZ W8, 0x36E1AC8
	0x036E1ABC MOV X0, X21
	0x036E1AC0 BL 0x1C16CF4
	0x036E1AC4 STRB W28, [X27 + 0x85B]
	0x036E1AC8 LDR X8, [X21]
	0x036E1ACC LDR X8, [X8 + 0xB8]
	0x036E1AD0 LDUR X9, [X8 + 0xC]
	0x036E1AD4 LDR V0, [X8 + 0x14]
	0x036E1AD8 STR S0, [X31 + 0x8]
	0x036E1ADC ADD X8, X31, 0x1B0
	0x036E1AE0 MOV V0.16B, V11.16B
	0x036E1AE4 MOV V1.16B, V12.16B
	0x036E1AE8 MOV V2.16B, V13.16B
	0x036E1AEC MOV V3.16B, V14.16B
	0x036E1AF0 MOV V4.16B, V15.16B
	0x036E1AF4 MOV V5.16B, V8.16B
	0x036E1AF8 MOV V6.16B, V9.16B
	0x036E1AFC MOV X0, X31
	0x036E1B00 STR X9, [X31]
	0x036E1B04 BL 0x3C26FA8
	0x036E1B08 LDP V0, V1, [X31 + 0x1B0]
	0x036E1B0C LDP V2, V3, [X31 + 0x1D0]
	0x036E1B10 STP V0, V1, [X31 + 0x90]
	0x036E1B14 STP V2, V3, [X31 + 0xB0]
	0x036E1B18 ADD X0, X31, 0xD0
	0x036E1B1C ADD X1, X31, 0x90
	0x036E1B20 MOV X2, X31
	0x036E1B24 BL 0x3BE28E8
	0x036E1B28 LDP S1, S0, [X31 + 0x28]
	0x036E1B2C LDP S3, S2, [X31 + 0x20]
	0x036E1B30 FABS S1, S1
	0x036E1B34 FMUL S1, S1, S3
	0x036E1B38 LDR V3, [X31 + 0x1C]
	0x036E1B3C FABS S0, S0
	0x036E1B40 FABS S2, S2
	0x036E1B44 FMUL S0, S0, S10
	0x036E1B48 FMUL S2, S2, S3
	0x036E1B4C ADD X0, X31, 0xD0
	0x036E1B50 MOV X1, X31
	0x036E1B54 BL 0x3BE2908
	0x036E1B58 LDR W1, [X22 + 0x38]
	0x036E1B5C ADD X0, X31, 0xD0
	0x036E1B60 MOV X2, X31
	0x036E1B64 BL 0x3BE2924
	0x036E1B68 LDR X22, [X19]
	0x036E1B6C ADD X0, X31, 0x30
	0x036E1B70 ADD X1, X31, 0xD0
	0x036E1B74 MOVZ W2, 0x60
	0x036E1B78 BL 0x3EB1AC0
	0x036E1B7C CBZ X22, 0x36E1C5C
	0x036E1B80 LDR X23, [X26]
	0x036E1B84 ADD X0, X31, 0x150
	0x036E1B88 ADD X1, X31, 0x30
	0x036E1B8C MOVZ W2, 0x60
	0x036E1B90 BL 0x3EB1AC0
	0x036E1B94 LDR W9, [X22 + 0x1C]
	0x036E1B98 LDR X8, [X22 + 0x10]
	0x036E1B9C ADD W9, W9, 0x1
	0x036E1BA0 STR W9, [X22 + 0x1C]
	0x036E1BA4 CBZ X8, 0x36E1C4C
	0x036E1BA8 LDRSW X9, [X22 + 0x18]
	0x036E1BAC LDR W10, [X8 + 0x18]
	0x036E1BB0 CMP W9, W10
	0x036E1BB4 B.CS 0x36E1BD8
	0x036E1BB8 MADD X8, X9, X29, X8
	0x036E1BBC ADD W10, W9, 0x1
	0x036E1BC0 ADD X0, X8, 0x20
	0x036E1BC4 ADD X1, X31, 0x150
	0x036E1BC8 MOVZ W2, 0x60
	0x036E1BCC STR W10, [X22 + 0x18]
	0x036E1BD0 BL 0x3EB1AC0
	0x036E1BD4 B 0x36E19BC
	0x036E1BD8 LDR X8, [X23 + 0x20]
	0x036E1BDC ADD X0, X31, 0x1B0
	0x036E1BE0 ADD X1, X31, 0x150
	0x036E1BE4 MOVZ W2, 0x60
	0x036E1BE8 LDR X8, [X8 + 0xC0]
	0x036E1BEC LDR X23, [X8 + 0x70]
	0x036E1BF0 BL 0x3EB1AC0
	0x036E1BF4 ADD X1, X31, 0x1B0
	0x036E1BF8 MOV X0, X22
	0x036E1BFC MOV X2, X23
	0x036E1C00 BL 0x300D270
	0x036E1C04 B 0x36E19BC
	0x036E1C08 LDR X1, [X24]
	0x036E1C0C ADD X0, X31, 0x130
	0x036E1C10 BL 0x2BC434C
	0x036E1C14 ADD X31, X31, 0x210
	0x036E1C18 LDP X20, X19, [X31 + 0x90]
	0x036E1C1C LDP X22, X21, [X31 + 0x80]
	0x036E1C20 LDP X24, X23, [X31 + 0x70]
	0x036E1C24 LDP X26, X25, [X31 + 0x60]
	0x036E1C28 LDP X28, X27, [X31 + 0x50]
	0x036E1C2C LDP X29, X30, [X31 + 0x40]
	0x036E1C30 LDP D9, D8, [X31 + 0x30]
	0x036E1C34 LDP D11, D10, [X31 + 0x20]
	0x036E1C38 LDP D13, D12, [X31 + 0x10]
	0x036E1C3C LDP D15, D14, [X31], #0xA0
	0x036E1C40 RET
	0x036E1C44 BL 0x1C16F20
	0x036E1C48 BL 0x1C16F20
	0x036E1C4C BL 0x1C16F20
	0x036E1C50 BL 0x1C16F20
	0x036E1C54 BL 0x1C16F20
	0x036E1C58 BL 0x1C16F20
	0x036E1C5C BL 0x1C16F20
	0x036E1C60 BL 0x1C16F20
	0x036E1C64 B 0x36E1CC0
	0x036E1C68 B 0x36E1CC0
	0x036E1C6C B 0x36E1CC0
	0x036E1C70 B 0x36E1CC0
	0x036E1C74 B 0x36E1CC0
	0x036E1C78 B 0x36E1CC0
	0x036E1C7C B 0x36E1CC0
	0x036E1C80 B 0x36E1CC0
	0x036E1C84 B 0x36E1CC0
	0x036E1C88 B 0x36E1CC0
	0x036E1C8C B 0x36E1CC0
	0x036E1C90 B 0x36E1CC0
	0x036E1C94 B 0x36E1CC0
	0x036E1C98 B 0x36E1CC0
	0x036E1C9C B 0x36E1CC0
	0x036E1CA0 B 0x36E1CC0
	0x036E1CA4 B 0x36E1CC0
	0x036E1CA8 B 0x36E1CC0
	0x036E1CAC B 0x36E1CC0
	0x036E1CB0 B 0x36E1CC0
	0x036E1CB4 B 0x36E1CC0
	0x036E1CB8 B 0x36E1CC0
	0x036E1CBC B 0x36E1CC0
	0x036E1CC0 MOV X19, X0
	0x036E1CC4 CMP W1, 0x1
	0x036E1CC8 B.NE 0x36E1CF4
	0x036E1CCC MOV X0, X19
	0x036E1CD0 BL 0x3EB1AD0
	0x036E1CD4 LDR X20, [X0]
	0x036E1CD8 BL 0x3EB1AE0
	0x036E1CDC LDR X1, [X24]
	0x036E1CE0 ADD X0, X31, 0x130
	0x036E1CE4 BL 0x2BC434C
	0x036E1CE8 CBZ X20, 0x36E1C14
	0x036E1CEC MOV X0, X20
	0x036E1CF0 BL 0x1C16F18

ISIL:
	001 Move [X31-160], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X29
	009 Move [X31+72], X30
	010 Move [X31+80], X28
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Subtract X31, X31, 432
	021 Move X24, 0xD00000
	022 Move X23, 0xA60000
	023 Move X20, 0xA60000
	024 Move X22, 0xA60000
	025 Move X21, 0xA60000
	026 Move W8, [X24+2822]
	027 Move X23, [X23+1480]
	028 Move X20, [X20+1488]
	029 Move X22, [X22+1496]
	030 Move X21, [X21+1504]
	031 Move X19, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {104}
	036 Move X0, 0xA60000
	037 Move X0, [X0+1512]
	038 Call 0x1C17CF4
	039 Move X0, 0xA60000
	040 Move X0, [X0+1520]
	041 Call 0x1C17CF4
	042 Move X0, 0xA60000
	043 Move X0, [X0+1528]
	044 Call 0x1C17CF4
	045 Move X0, 0xA60000
	046 Move X0, [X0+1536]
	047 Call 0x1C17CF4
	048 Move X0, 0xA60000
	049 Move X0, [X0+1544]
	050 Call 0x1C17CF4
	051 Move X0, 0xA60000
	052 Move X0, [X0+1552]
	053 Call 0x1C17CF4
	054 Move X0, 0xA60000
	055 Move X0, [X0+1560]
	056 Call 0x1C17CF4
	057 Move X0, 0xA60000
	058 Move X0, [X0+1568]
	059 Call 0x1C17CF4
	060 Move X0, 0xA60000
	061 Move X0, [X0+1576]
	062 Call 0x1C17CF4
	063 Move X0, 0xA60000
	064 Move X0, [X0+1504]
	065 Call 0x1C17CF4
	066 Move X0, 0xA60000
	067 Move X0, [X0+1488]
	068 Call 0x1C17CF4
	069 Move X0, 0xA60000
	070 Move X0, [X0+1360]
	071 Call 0x1C17CF4
	072 Move X0, 0xA60000
	073 Move X0, [X0+1496]
	074 Call 0x1C17CF4
	075 Move X0, 0xA60000
	076 Move X0, [X0+1480]
	077 Call 0x1C17CF4
	078 Move X0, 0xA60000
	079 Move X0, [X0+1320]
	080 Call 0x1C17CF4
	081 Move X0, 0xA60000
	082 Move X0, [X0+1424]
	083 Call 0x1C17CF4
	084 Move X0, 0xA60000
	085 Move X0, [X0+1584]
	086 Call 0x1C17CF4
	087 Move X0, 0xA60000
	088 Move X0, [X0+1592]
	089 Call 0x1C17CF4
	090 Move X0, 0xA60000
	091 Move X0, [X0+1600]
	092 Call 0x1C17CF4
	093 Move X0, 0xA60000
	094 Move X0, [X0+1608]
	095 Call 0x1C17CF4
	096 Move X0, 0xA60000
	097 Move X0, [X0+1616]
	098 Call 0x1C17CF4
	099 Move X0, 0xA60000
	100 Move X0, [X0+1624]
	101 Call 0x1C17CF4
	102 Move W8, 1
	103 Move [X24+2822], W8
	104 Move X25, 0xA60000
	105 Move X25, [X25+1624]
	106 Move X0, [X23]
	107 NotImplemented "Instruction MOVI not yet implemented."
	108 Move [X31+336], X31
	109 Move [X31+344], X31
	110 Move [X31+352], X31
	111 Move [X31+304], V0
	112 Move [X31+312], V0
	113 Call 0x1C17F10
	114 Move X1, [X20]
	115 Move X20, X0
	116 Call List`1<NavMeshBuildSource>..ctor, X0
	117 Move X0, [X22]
	118 Move [X31+440], X20
	119 Call 0x1C17F10
	120 Move X1, [X21]
	121 Move X21, X0
	122 Call List`1<NavMeshBuildMarkup>..ctor, X0
	123 Move W8, [X19+36]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, 0xA60000
	126 Move X8, [X8+1512]
	127 Move X22, 0xA60000
	128 Move X24, 0xA60000
	129 Move X0, X19
	130 Move X1, [X8]
	131 Move X22, [X22+1360]
	132 Move X24, [X24+1576]
	133 Call 0x21A553C, X0
	134 Move X8, [X22]
	135 Move X23, X0
	136 Move X0, X8
	137 Call 0x1C17F10
	138 Move X2, [X24]
	139 Move X1, X23
	140 Move X22, X0
	141 Call List`1<Object>..ctor, X0, X1
	142 Move X0, [X25]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X25]
	148 Move X8, [X0+184]
	149 Move X23, [X8+16]
	150 Compare X23, 0
	151 JumpIfNotEqual {173}
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {157}
	155 Call 0x1C17DFC
	156 Move X0, [X25]
	157 Move X9, 0xA60000
	158 Move X8, [X0+184]
	159 Move X9, [X9+1592]
	160 Move X24, [X8]
	161 Move X0, [X9]
	162 Call 0x1C17F10
	163 Move X8, 0xA60000
	164 Move X8, [X8+1600]
	165 Move X1, X24
	166 Move X3, X31
	167 Move X23, X0
	168 Move X2, [X8]
	169 Call Predicate`1<Object>..ctor, X0, X1, X2
	170 Move X8, [X25]
	171 Move X8, [X8+184]
	172 Move [X8+16], X23
	173 Compare X22, 0
	174 JumpIfEqual {586}
	175 Move X8, 0xA60000
	176 Move X8, [X8+1568]
	177 Move X0, X22
	178 Move X1, X23
	179 Move X2, [X8]
	180 Call List`1<Object>.RemoveAll, X0, X1
	181 Move X22, 0xA60000
	182 Move X22, [X22+1320]
	183 Move X0, [X22]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X23, 0xD00000
	189 Move W8, [X23+2830]
	190 Compare W8, 0
	191 JumpIfNotEqual {197}
	192 Move X0, 0xA60000
	193 Move X0, [X0+1320]
	194 Call 0x1C17CF4
	195 Move W8, 1
	196 Move [X23+2830], W8
	197 Move X0, [X22]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X22]
	203 Move X8, [X0+184]
	204 Move X22, [X8]
	205 Compare X22, 0
	206 JumpIfEqual {586}
	207 Move X8, 0xA60000
	208 Move X8, [X8+1552]
	209 Move X27, 0xA60000
	210 Move X27, [X27+1528]
	211 Move X28, 0xA60000
	212 Move X1, [X8]
	213 Move X24, 0xA60000
	214 Move X26, 0xA60000
	215 Move X28, [X28+1544]
	216 Move X24, [X24+1560]
	217 Move X26, [X26+1520]
	218 Add X8, X31, 240
	219 Move X0, X22
	220 Call List`1<Object>.GetEnumerator, X0
	221 Move V0, [X31+15]
	222 Move X8, [X31+256]
	223 Move [X31+21], V0
	224 Move [X31+352], X8
	225 Move X1, [X27]
	226 Add X0, X31, 336
	227 Call Enumerator<Object>.MoveNext, X0
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {329}
	232 Move X22, [X31+352]
	233 Move W0, [X19+64]
	234 Move X1, X31
	235 Call LayerMask.op_Implicit, X0
	236 Compare X22, 0
	237 JumpIfEqual {582}
	238 Move W23, W0
	239 Move X0, X22
	240 Move X1, X31
	241 Call Component.get_gameObject, X0
	242 Compare X0, 0
	243 JumpIfEqual {583}
	244 Move X1, X31
	245 Call GameObject.get_layer, X0
	246 NotImplemented "Instruction LSRV not yet implemented."
	247 Move TEMP, X8
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {225}
	251 Move W1, [X19+32]
	252 Move X0, X22
	253 Call NavMeshModifier.AffectsAgentType, X0, X1
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {225}
	258 NotImplemented "Instruction MOVI not yet implemented."
	259 Move [X31+304], V0
	260 Move [X31+312], V0
	261 Move X0, X22
	262 Move X1, X31
	263 Call Component.get_transform, X0
	264 Move X1, X0
	265 Add X0, X31, 304
	266 Move X2, X31
	267 Call NavMeshBuildMarkup.set_root, X0, X1
	268 Move W1, [X22+32]
	269 Add X0, X31, 304
	270 Move X2, X31
	271 Call NavMeshBuildMarkup.set_overrideArea, X0, X1
	272 Move W1, [X22+36]
	273 Add X0, X31, 304
	274 Move X2, X31
	275 Call NavMeshBuildMarkup.set_area, X0, X1
	276 Move W1, [X22+42]
	277 Add X0, X31, 304
	278 Move X2, X31
	279 Call NavMeshBuildMarkup.set_ignoreFromBuild, X0, X1
	280 Move W1, [X22+43]
	281 Add X0, X31, 304
	282 Move X2, X31
	283 Call NavMeshBuildMarkup.set_applyToChildren, X0, X1
	284 Move W1, [X22+40]
	285 Add X0, X31, 304
	286 Move X2, X31
	287 Call NavMeshBuildMarkup.set_overrideGenerateLinks, X0, X1
	288 Move W1, [X22+41]
	289 Add X0, X31, 304
	290 Move X2, X31
	291 Call NavMeshBuildMarkup.set_generateLinks, X0, X1
	292 Move V0, [X31+304]
	293 Move V1, [X31+320]
	294 Move [X31+240], V0
	295 Move [X31+248], V1
	296 Compare X21, 0
	297 JumpIfEqual {584}
	298 Move V0, [X31+240]
	299 Move V1, [X31+256]
	300 Move X10, [X28]
	301 Move [X31+368], V0
	302 Move [X31+376], V1
	303 Move W9, [X21+28]
	304 Move X8, [X21+16]
	305 Add W9, W9, 1
	306 Move [X21+28], W9
	307 Compare X8, 0
	308 JumpIfEqual {585}
	309 NotImplemented "Instruction LDRSW not yet implemented."
	310 Move W11, [X8+24]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Add W10, W9, 1
	313 Move [X21+24], W10
	314 Move V1, [X31+368]
	315 Move V0, [X31+384]
	316 Add X8, X8, X9
	317 Move [X8+32], V1
	318 Move [X8+40], V0
	319 Move X8, [X10+32]
	320 Move V0, [X31+368]
	321 Move V1, [X31+384]
	322 Move X8, [X8+192]
	323 Move X2, [X8+112]
	324 Move [X31+400], V0
	325 Move [X31+408], V1
	326 Add X1, X31, 400
	327 Move X0, X21
	328 Call List`1<NavMeshBuildMarkup>.AddWithResize, X0, X1
	329 Move X1, [X26]
	330 Add X0, X31, 336
	331 Call Enumerator<Object>.Dispose, X0
	332 Move W8, [X19+36]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X9, -45387776
	335 Add X9, X9, 2058
	336 NotImplemented "Instruction ADR not yet implemented."
	337 Move W11, [X9]
	338 Add X10, X10, X11
	339 CallNoReturn X10
	340 Move W0, [X19+64]
	341 Move X1, X31
	342 Call LayerMask.op_Implicit, X0
	343 Move W2, [X19+68]
	344 Move W3, [X19+72]
	345 Move W4, [X19+76]
	346 Move W1, W0
	347 Move X0, X31
	348 Move [X31], X31
	349 Move X0, X19
	350 Move X1, X31
	351 Call Component.get_transform, X0
	352 Move W8, [X19+64]
	353 Move X22, X0
	354 Move X1, X31
	355 Move X0, X8
	356 Call LayerMask.op_Implicit, X0
	357 Move W2, [X19+68]
	358 Move W3, [X19+72]
	359 Move W4, [X19+76]
	360 Move W1, W0
	361 Move [X31], X31
	362 Move X0, X22
	363 Move X5, X21
	364 Move W6, W31
	365 Move W0, [X19+64]
	366 Move X1, X31
	367 Call LayerMask.op_Implicit, X0
	368 Move W2, [X19+68]
	369 Move W3, [X19+72]
	370 Move W4, [X19+76]
	371 Move W1, W0
	372 Move W6, 1
	373 Move X0, X31
	374 Move X5, X21
	375 Move [X31], X31
	376 Move X7, X20
	377 Call NavMeshBuilder.CollectSources, X0, X1, X2, X3, X4, X5, X6, X7
	378 Move X0, X19
	379 Move X1, X31
	380 Call Component.get_transform, X0
	381 Compare X0, 0
	382 JumpIfEqual {586}
	383 Move X1, X31
	384 Call Transform.get_position, X0
	385 Move X0, X19
	386 Move X1, X31
	387 Move V8, V0
	388 Move V9, V1
	389 Move V10, V2
	390 Call Component.get_transform, X0
	391 Compare X0, 0
	392 JumpIfEqual {586}
	393 Move X1, X31
	394 Call Transform.get_rotation, X0
	395 Move X22, 0xCF8000
	396 Move W8, [X22+2139]
	397 Move V11, V0
	398 Move V12, V1
	399 Move V13, V2
	400 Move V14, V3
	401 Compare W8, 0
	402 JumpIfNotEqual {408}
	403 Move X0, 0xA13000
	404 Move X0, [X0+1440]
	405 Call 0x1C17CF4
	406 Move W8, 1
	407 Move [X22+2139], W8
	408 Move X8, 0xA13000
	409 Move X8, [X8+1440]
	410 Move V1, V9
	411 Move V2, V10
	412 Move V3, V11
	413 Move X8, [X8]
	414 Move V4, V12
	415 Move V5, V13
	416 Move V6, V14
	417 Move X8, [X8+184]
	418 Move X0, X31
	419 Move V0, [X8+20]
	420 NotImplemented "Instruction LDUR not yet implemented."
	421 Add X8, X31, 176
	422 Move [X31+8], S0
	423 Move V0, V8
	424 Move [X31], X9
	425 Call Matrix4x4.TRS, X0, X1, X2
	426 Move V0, [X31+176]
	427 Move V1, [X31+192]
	428 Move V2, [X31+208]
	429 Move V3, [X31+224]
	430 Add X8, X31, 176
	431 Move X0, X19
	432 Move [X31+240], V0
	433 Move [X31+248], V1
	434 Move [X31+272], V2
	435 Move [X31+280], V3
	436 Call NavMeshSurface.GetInflatedBounds, X0
	437 Move X8, 0xA60000
	438 Move X8, [X8+1424]
	439 Move X0, [X8]
	440 Move W8, [X0+224]
	441 Compare W8, 0
	442 JumpIfNotEqual {444}
	443 Call 0x1C17DFC
	444 Move X8, [X31+192]
	445 Move V0, [X31+240]
	446 Move V1, [X31+256]
	447 Move V2, [X31+272]
	448 Move V3, [X31+288]
	449 Move V4, [X31+11]
	450 Move [X31+64], X8
	451 Add X8, X31, 152
	452 Add X0, X31, 80
	453 Add X1, X31, 48
	454 Move [X31+80], V0
	455 Move [X31+88], V1
	456 Move [X31+112], V2
	457 Move [X31+120], V3
	458 Move [X31+3], V4
	459 Call NavMeshSurface.GetWorldBounds, X0, X1
	460 Move W0, [X19+64]
	461 Move X1, X31
	462 Call LayerMask.op_Implicit, X0
	463 Move W2, [X19+68]
	464 Move W3, [X19+72]
	465 NotImplemented "Instruction LDUR not yet implemented."
	466 Move X8, [X31+168]
	467 Move W4, [X19+76]
	468 Move W1, W0
	469 Add X0, X31, 16
	470 Move X5, X21
	471 Move W6, W31
	472 Move X7, X20
	473 Move [X31+1], V0
	474 Move [X31+32], X8
	475 Move [X31], X31
	476 Call NavMeshBuilder.CollectSources, X0, X1, X2, X3, X4, X5, X6, X7
	477 Move W8, [X19+77]
	478 Compare W8, 0
	479 JumpIfEqual {517}
	480 Move X0, [X25]
	481 Move W8, [X0+224]
	482 Compare W8, 0
	483 JumpIfNotEqual {486}
	484 Call 0x1C17DFC
	485 Move X0, [X25]
	486 Move X8, [X0+184]
	487 Move X21, [X8+24]
	488 Compare X21, 0
	489 JumpIfNotEqual {511}
	490 Move W8, [X0+224]
	491 Compare W8, 0
	492 JumpIfNotEqual {495}
	493 Call 0x1C17DFC
	494 Move X0, [X25]
	495 Move X9, 0xA60000
	496 Move X8, [X0+184]
	497 Move X9, [X9+1584]
	498 Move X22, [X8]
	499 Move X0, [X9]
	500 Call 0x1C17F10
	501 Move X8, 0xA60000
	502 Move X8, [X8+1608]
	503 Move X1, X22
	504 Move X3, X31
	505 Move X21, X0
	506 Move X2, [X8]
	507 Call Predicate`1<NavMeshBuildSource>..ctor, X0, X1, X2
	508 Move X8, [X25]
	509 Move X8, [X8+184]
	510 Move [X8+24], X21
	511 Compare X20, 0
	512 JumpIfEqual {586}
	513 Move X2, [X24]
	514 Move X0, X20
	515 Move X1, X21
	516 Call List`1<NavMeshBuildSource>.RemoveAll, X0, X1
	517 Move W8, [X19+78]
	518 Compare W8, 0
	519 JumpIfEqual {557}
	520 Move X0, [X25]
	521 Move W8, [X0+224]
	522 Compare W8, 0
	523 JumpIfNotEqual {526}
	524 Call 0x1C17DFC
	525 Move X0, [X25]
	526 Move X8, [X0+184]
	527 Move X21, [X8+32]
	528 Compare X21, 0
	529 JumpIfNotEqual {551}
	530 Move W8, [X0+224]
	531 Compare W8, 0
	532 JumpIfNotEqual {535}
	533 Call 0x1C17DFC
	534 Move X0, [X25]
	535 Move X9, 0xA60000
	536 Move X8, [X0+184]
	537 Move X9, [X9+1584]
	538 Move X22, [X8]
	539 Move X0, [X9]
	540 Call 0x1C17F10
	541 Move X8, 0xA60000
	542 Move X8, [X8+1616]
	543 Move X1, X22
	544 Move X3, X31
	545 Move X21, X0
	546 Move X2, [X8]
	547 Call Predicate`1<NavMeshBuildSource>..ctor, X0, X1, X2
	548 Move X8, [X25]
	549 Move X8, [X8+184]
	550 Move [X8+32], X21
	551 Compare X20, 0
	552 JumpIfEqual {586}
	553 Move X2, [X24]
	554 Move X0, X20
	555 Move X1, X21
	556 Call List`1<NavMeshBuildSource>.RemoveAll, X0, X1
	557 Add X1, X31, 440
	558 Move X0, X19
	559 Call NavMeshSurface.AppendModifierVolumes, X0, X1
	560 Move X0, X20
	561 Add X31, X31, 432
	562 Move X20, [X31+144]
	563 Move X19, [X31+152]
	564 Move X22, [X31+128]
	565 Move X21, [X31+136]
	566 Move X24, [X31+112]
	567 Move X23, [X31+120]
	568 Move X26, [X31+96]
	569 Move X25, [X31+104]
	570 Move X28, [X31+80]
	571 Move X27, [X31+88]
	572 Move X29, [X31+64]
	573 Move X30, [X31+72]
	574 Move D9, [X31+48]
	575 Move D8, [X31+56]
	576 Move D11, [X31+32]
	577 Move D10, [X31+40]
	578 Move D13, [X31+16]
	579 Move D12, [X31+24]
	580 Move V14, [X31+160]
	581 Return X0
	582 Call 0x1C17F20
	583 Call 0x1C17F20
	584 Call 0x1C17F20
	585 Call 0x1C17F20
	586 Call 0x1C17F20
	587 Move X22, X0
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move X0, X22
	590 Call 0x3EB2AD0
	591 Move X23, [X0]
	592 Call 0x3EB2AE0
	593 Move X1, [X26]
	594 Add X0, X31, 336
	595 Call Enumerator<Object>.Dispose, X0
	596 Compare X23, 0
	597 JumpIfEqual {332}
	598 Move X0, X23
	599 Call 0x1C17F18
	600 Move X23, X31
	601 Move X22, X0
	602 Move X1, [X26]
	603 Add X0, X31, 336
	604 Call Enumerator<Object>.Dispose, X0
	605 Compare X23, 0
	606 JumpIfNotEqual {609}
	607 Move X0, X22
	608 Call 0x1D2D690
	609 Move X0, X23
	610 Call 0x1C17F18
	611 Call 0x1991590

Method: UnityEngine.Vector3 Abs(UnityEngine.Vector3 v)

Disassembly:
	0x036E1CF4 MOV X20, X31
	0x036E1CF8 B 0x36E1D00
	0x036E1CFC MOV X19, X0
	0x036E1D00 LDR X1, [X24]

ISIL:
	001 NotImplemented "Instruction FABS not yet implemented."
	002 NotImplemented "Instruction FABS not yet implemented."
	003 NotImplemented "Instruction FABS not yet implemented."
	004 Return X0

Method: UnityEngine.Bounds GetWorldBounds(UnityEngine.Matrix4x4 mat, UnityEngine.Bounds bounds)

Disassembly:
	0x036E2D24 MOV X19, X0
	0x036E2D28 TBNZ X8, 0x0, 0x36E2D40
	0x036E2D2C ADRP X0, 0xA3E000
	0x036E2D30 LDR X0, [X0 + 0x448]
	0x036E2D34 BL 0x1C16CF4
	0x036E2D38 MOVZ W8, 0x1
	0x036E2D3C STRB W8, [X20 + 0xB1B]
	0x036E2D40 LDR X0, [X19 + 0x10]
	0x036E2D44 CBZ X0, 0x36E2D7C
	0x036E2D48 ADRP X8, 0xA3E000
	0x036E2D4C LDR X8, [X8 + 0x448]
	0x036E2D50 LDR X1, [X8]
	0x036E2D54 BL 0x3061A54
	0x036E2D58 MOV X1, X0
	0x036E2D5C ADD X0, X31, 0x0
	0x036E2D60 STP X31, X31, [X31]
	0x036E2D64 BL 0x36E24A4
	0x036E2D68 LDP X0, X1, [X31]
	0x036E2D6C LDP X20, X19, [X31 + 0x20]
	0x036E2D70 LDR X30, [X31 + 0x10]
	0x036E2D74 ADD X31, X31, 0x30
	0x036E2D78 RET
	0x036E2D7C BL 0x1C16F20
	0x036E2D80 LDUR X8, [X0 + 0xB4]
	0x036E2D84 LDUR X1, [X0 + 0xBC]
	0x036E2D88 MOV X0, X8
	0x036E2D8C RET
	0x036E2D90 STUR X1, [X0 + 0xB4]
	0x036E2D94 STUR X2, [X0 + 0xBC]
	0x036E2D98 RET
	0x036E2D9C RET
	0x036E2DA0 STP D15, D14, [X31 - 0x60]!
	0x036E2DA4 STP D13, D12, [X31 + 0x10]
	0x036E2DA8 STP D11, D10, [X31 + 0x20]
	0x036E2DAC STP D9, D8, [X31 + 0x30]
	0x036E2DB0 STP X29, X30, [X31 + 0x40]
	0x036E2DB4 STP X20, X19, [X31 + 0x50]
	0x036E2DB8 SUB X31, X31, 0x2A0
	0x036E2DBC MOV X20, X1
	0x036E2DC0 MOV X1, X31
	0x036E2DC4 MOV X19, X0
	0x036E2DC8 BL 0x36F9E90
	0x036E2DCC STR X0, [X31 + 0x250]
	0x036E2DD0 STR X1, [X31 + 0x258]
	0x036E2DD4 LDR X8, [X20 + 0x30]
	0x036E2DD8 LDP V1, V0, [X20 + 0x10]
	0x036E2DDC LDR V2, [X20]
	0x036E2DE0 ADD X0, X31, 0x250
	0x036E2DE4 ADD X1, X31, 0x260
	0x036E2DE8 MOV X2, X31
	0x036E2DEC STR X8, [X31 + 0x290]
	0x036E2DF0 STP V1, V0, [X31 + 0x270]
	0x036E2DF4 STR V2, [X31 + 0x26]
	0x036E2DF8 BL 0x3BF9750
	0x036E2DFC FCMP S0, 0x0
	0x036E2E00 B.LE 0x36E2F90
	0x036E2E04 MOV V8.16B, V0.16B
	0x036E2E08 LDP V2, V0, [X20 + 0x10]
	0x036E2E0C LDR X8, [X20 + 0x30]
	0x036E2E10 LDR V1, [X20]
	0x036E2E14 ADD X0, X19, 0x74
	0x036E2E18 ADD X1, X31, 0x260
	0x036E2E1C MOV X2, X31
	0x036E2E20 STR X8, [X31 + 0x290]
	0x036E2E24 STP V2, V0, [X31 + 0x270]
	0x036E2E28 STR V1, [X31 + 0x26]
	0x036E2E2C BL 0x3BF9B18
	0x036E2E30 TBZ X0, 0x0, 0x36E2FBC
	0x036E2E34 LDP V2, V0, [X20 + 0x10]
	0x036E2E38 LDR X8, [X20 + 0x30]
	0x036E2E3C LDR V1, [X20]
	0x036E2E40 ADD X0, X19, 0xC
	0x036E2E44 ADD X1, X31, 0x210
	0x036E2E48 STR X8, [X31 + 0x240]
	0x036E2E4C STP V2, V0, [X31 + 0x220]
	0x036E2E50 STR V1, [X31 + 0x21]
	0x036E2E54 BL 0x36E3374
	0x036E2E58 LDUR V3, [X19 + 0x3C]
	0x036E2E5C LDR V4, [X19 + 0x44]
	0x036E2E60 LDR X8, [X20 + 0x30]
	0x036E2E64 MOV V0.S[1], V1.S[0]
	0x036E2E68 FADD V10.2S, V0.2S, V3.2S
	0x036E2E6C FADD S9, S2, S4
	0x036E2E70 LDR V0, [X20]
	0x036E2E74 LDP V2, V1, [X20 + 0x10]
	0x036E2E78 ADD X0, X19, 0x24
	0x036E2E7C ADD X1, X31, 0x1D0
	0x036E2E80 STR X8, [X31 + 0x200]
	0x036E2E84 STP V2, V1, [X31 + 0x1E0]
	0x036E2E88 STR V0, [X31 + 0x1D]
	0x036E2E8C BL 0x36E3374
	0x036E2E90 LDR V3, [X19 + 0x58]
	0x036E2E94 LDR V4, [X19 + 0x60]
	0x036E2E98 LDR X8, [X20 + 0x30]
	0x036E2E9C MOV V0.S[1], V1.S[0]
	0x036E2EA0 FADD V11.2S, V0.2S, V3.2S
	0x036E2EA4 FADD S12, S2, S4
	0x036E2EA8 LDR V0, [X20]
	0x036E2EAC LDP V2, V1, [X20 + 0x10]
	0x036E2EB0 ADD X0, X19, 0x94
	0x036E2EB4 ADD X1, X31, 0x260
	0x036E2EB8 MOV X2, X31
	0x036E2EBC STR X8, [X31 + 0x290]
	0x036E2EC0 STP V2, V1, [X31 + 0x270]
	0x036E2EC4 STR V0, [X31 + 0x26]
	0x036E2EC8 BL 0x3BF9750
	0x036E2ECC FMOV S13, 1
	0x036E2ED0 FCMP S0, 0x0
	0x036E2ED4 FMOV S14, W31
	0x036E2ED8 FMIN S0, S0, S13
	0x036E2EDC FSUB V1.2S, V11.2S, V10.2S
	0x036E2EE0 FSUB S2, S12, S9
	0x036E2EE4 FCSEL S0, S0, S14, PL
	0x036E2EE8 LDP V4, V3, [X20 + 0x10]
	0x036E2EEC LDR X8, [X20 + 0x30]
	0x00000000 INVALID
	0x036E2EF4 FMUL S0, S2, S0
	0x036E2EF8 LDR V2, [X20]
	0x036E2EFC STR X8, [X31 + 0x1C0]
	0x036E2F00 STP V4, V3, [X31 + 0x1A0]
	0x036E2F04 FADD V10.2S, V10.2S, V1.2S
	0x036E2F08 STR V2, [X31 + 0x19]
	0x036E2F0C LDP V3, V1, [X20 + 0x10]
	0x036E2F10 LDR X8, [X20 + 0x30]
	0x036E2F14 LDR V2, [X20]
	0x036E2F18 ADD X1, X31, 0x260

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D13
	003 Move [X31+72], D12
	004 Move [X31+80], D11
	005 Move [X31+88], D10
	006 Move [X31+96], D9
	007 Move [X31+104], D8
	008 Move [X31+112], X30
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X22, 0xCFF000
	015 Move W9, [X22+2823]
	016 Move X20, X1
	017 Move X21, X0
	018 Move X19, X8
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA5F000
	024 Move X0, [X0+1424]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2823], W8
	028 Move X22, 0xCF7000
	029 Move X23, 0xA5F000
	030 Move W8, [X22+2928]
	031 Move X23, [X23+1424]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0xA12000
	035 Move X0, [X0+1440]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+2928], W8
	039 Move X22, 0xA12000
	040 Move X22, [X22+1440]
	041 Move X0, X21
	042 Move X1, X31
	043 Move X8, [X22]
	044 Move X8, [X8+184]
	045 Move S0, [X8+60]
	046 Move S1, [X8+64]
	047 Move V2, [X8+68]
	048 Call Matrix4x4.MultiplyVector, X0, X1
	049 Move X0, [X23]
	050 Move V8, V2
	051 Move [X31+48], D0
	052 Move [X31+32], D1
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X23, 0xCF7000
	058 Move W8, [X23+1926]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0xA12000
	062 Move X0, [X0+1440]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X23+1926], W8
	066 Move X8, [X22]
	067 Move X0, X21
	068 Move X1, X31
	069 Move X8, [X8+184]
	070 Move S0, [X8+24]
	071 Move S1, [X8+28]
	072 Move V2, [X8+32]
	073 Call Matrix4x4.MultiplyVector, X0, X1
	074 Move X23, 0xCF7000
	075 Move W8, [X23+2591]
	076 Move V9, V2
	077 Compare W8, 0
	078 JumpIfNotEqual {88}
	079 Move X0, 0xA12000
	080 Move X0, [X0+1440]
	081 Move [X31], V1
	082 Move [X31+8], V0
	083 Call 0x1C17CF4
	084 Move V1, [X31]
	085 Move V0, [X31+16]
	086 Move W8, 1
	087 Move [X23+2591], W8
	088 Move X8, [X22]
	089 Move V0.S[1], V1.S[0]
	090 Move V4, [X31+32]
	091 Move V3, [X31+48]
	092 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	093 Move X8, [X8+184]
	094 Move X0, X21
	095 Move V3.S[1], V4.S[0]
	096 Move X1, X31
	097 Move S0, [X8+72]
	098 Move S1, [X8+76]
	099 Move V2, [X8+80]
	100 NotImplemented "Instruction FABS not yet implemented."
	101 NotImplemented "Instruction FABS not yet implemented."
	102 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	103 Call Matrix4x4.MultiplyVector, X0, X1
	104 Move S3, [X20]
	105 Move S4, [X20+4]
	106 Move V5, [X20+8]
	107 NotImplemented "Instruction FABS not yet implemented."
	108 Move V0.S[1], V1.S[0]
	109 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	110 Move X0, X21
	111 Move V0, V3
	112 Move V1, V4
	113 Move V2, V5
	114 Move X1, X31
	115 Call Matrix4x4.MultiplyPoint, X0, X1
	116 Move S3, [X20+12]
	117 Move S4, [X20+16]
	118 Move V5, [X20+20]
	119 Move [X19+8], S2
	120 Move [X19], S0
	121 Move [X19+8], S1
	122 Add S2, S3, S3
	123 Add S3, S4, S4
	124 Add S4, S5, S5
	125 NotImplemented "Instruction INVALID not yet implemented."
	126 Multiply S2, S8, S2
	127 NotImplemented "Instruction INVALID not yet implemented."
	128 Multiply S3, S9, S3
	129 NotImplemented "Instruction INVALID not yet implemented."
	130 Multiply S4, S13, S4
	131 Add V5, V5, V6
	132 Add S2, S2, S3
	133 NotImplemented "Instruction MOVI not yet implemented."
	134 Move S1, 0.5
	135 Add V3, V5, V7
	136 Add S2, S2, S4
	137 NotImplemented "Instruction INVALID not yet implemented."
	138 Multiply S1, S2, S1
	139 Move [X19+12], D0
	140 Move [X19+20], S1
	141 Move X20, [X31+144]
	142 Move X19, [X31+152]
	143 Move X22, [X31+128]
	144 Move X21, [X31+136]
	145 Move X30, [X31+112]
	146 Move X23, [X31+120]
	147 Move D9, [X31+96]
	148 Move D8, [X31+104]
	149 Move D11, [X31+80]
	150 Move D10, [X31+88]
	151 Move D13, [X31+64]
	152 Move D12, [X31+72]
	153 Add X31, X31, 160
	154 Return X0

Method: UnityEngine.Bounds CalculateWorldBounds(System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildSource> sources)

Disassembly:
	0x036E1D04 ADD X0, X31, 0x130
	0x036E1D08 BL 0x2BC434C
	0x036E1D0C CBNZ X20, 0x36E1D18
	0x036E1D10 MOV X0, X19
	0x036E1D14 BL 0x1D2C690
	0x036E1D18 MOV X0, X20
	0x036E1D1C BL 0x1C16F18
	0x036E1D20 BL 0x1990590
	0x036E1D24 SUB X31, X31, 0xA0
	0x036E1D28 STP D13, D12, [X31 + 0x40]
	0x036E1D2C STP D11, D10, [X31 + 0x50]
	0x036E1D30 STP D9, D8, [X31 + 0x60]
	0x036E1D34 STP X30, X23, [X31 + 0x70]
	0x036E1D38 STP X22, X21, [X31 + 0x80]
	0x036E1D3C STP X20, X19, [X31 + 0x90]
	0x036E1D40 ADRP X22, 0xCFF000
	0x036E1D44 LDRB W9, [X22 + 0xB07]
	0x036E1D48 MOV X20, X1
	0x036E1D4C MOV X21, X0
	0x036E1D50 MOV X19, X8
	0x036E1D54 TBNZ X9, 0x0, 0x36E1D6C
	0x036E1D58 ADRP X0, 0xA5F000
	0x036E1D5C LDR X0, [X0 + 0x590]
	0x036E1D60 BL 0x1C16CF4
	0x036E1D64 MOVZ W8, 0x1
	0x036E1D68 STRB W8, [X22 + 0xB07]
	0x036E1D6C ADRP X22, 0xCF7000
	0x036E1D70 ADRP X23, 0xA5F000
	0x036E1D74 LDRB W8, [X22 + 0xB70]
	0x036E1D78 LDR X23, [X23 + 0x590]
	0x036E1D7C CBNZ W8, 0x36E1D94
	0x036E1D80 ADRP X0, 0xA12000
	0x036E1D84 LDR X0, [X0 + 0x5A0]
	0x036E1D88 BL 0x1C16CF4
	0x036E1D8C MOVZ W8, 0x1
	0x036E1D90 STRB W8, [X22 + 0xB70]
	0x036E1D94 ADRP X22, 0xA12000
	0x036E1D98 LDR X22, [X22 + 0x5A0]
	0x036E1D9C MOV X0, X21
	0x036E1DA0 MOV X1, X31
	0x036E1DA4 LDR X8, [X22]
	0x036E1DA8 LDR X8, [X8 + 0xB8]
	0x036E1DAC LDP S0, S1, [X8 + 0x3C]
	0x036E1DB0 LDR V2, [X8 + 0x44]
	0x036E1DB4 BL 0x3C282D0
	0x036E1DB8 LDR X0, [X23]
	0x036E1DBC MOV V8.16B, V2.16B
	0x036E1DC0 STR D0, [X31 + 0x30]
	0x036E1DC4 STR D1, [X31 + 0x20]
	0x036E1DC8 LDR W8, [X0 + 0xE0]
	0x036E1DCC CBNZ W8, 0x36E1DD4
	0x036E1DD0 BL 0x1C16DFC
	0x036E1DD4 ADRP X23, 0xCF7000
	0x036E1DD8 LDRB W8, [X23 + 0x786]
	0x036E1DDC CBNZ W8, 0x36E1DF4
	0x036E1DE0 ADRP X0, 0xA12000
	0x036E1DE4 LDR X0, [X0 + 0x5A0]
	0x036E1DE8 BL 0x1C16CF4
	0x036E1DEC MOVZ W8, 0x1
	0x036E1DF0 STRB W8, [X23 + 0x786]
	0x036E1DF4 LDR X8, [X22]
	0x036E1DF8 MOV X0, X21
	0x036E1DFC MOV X1, X31
	0x036E1E00 LDR X8, [X8 + 0xB8]
	0x036E1E04 LDP S0, S1, [X8 + 0x18]
	0x036E1E08 LDR V2, [X8 + 0x20]
	0x036E1E0C BL 0x3C282D0
	0x036E1E10 ADRP X23, 0xCF7000
	0x036E1E14 LDRB W8, [X23 + 0xA1F]
	0x036E1E18 MOV V9.16B, V2.16B
	0x036E1E1C CBNZ W8, 0x36E1E3C
	0x036E1E20 ADRP X0, 0xA12000
	0x036E1E24 LDR X0, [X0 + 0x5A0]
	0x036E1E28 STP V1, V0, [X31]
	0x036E1E2C BL 0x1C16CF4
	0x036E1E30 LDP V1, V0, [X31]
	0x036E1E34 MOVZ W8, 0x1
	0x036E1E38 STRB W8, [X23 + 0xA1F]
	0x036E1E3C LDR X8, [X22]
	0x036E1E40 MOV V0.S[1], V1.S[0]
	0x036E1E44 LDP V4, V3, [X31 + 0x20]
	0x036E1E48 UNIMPLEMENTED
	0x036E1E4C LDR X8, [X8 + 0xB8]
	0x036E1E50 MOV X0, X21
	0x036E1E54 MOV V3.S[1], V4.S[0]
	0x036E1E58 MOV X1, X31
	0x036E1E5C LDP S0, S1, [X8 + 0x48]
	0x036E1E60 LDR V2, [X8 + 0x50]
	0x036E1E64 FABS S9, S9
	0x036E1E68 FABS S8, S8
	0x036E1E6C UNIMPLEMENTED
	0x036E1E70 BL 0x3C282D0
	0x036E1E74 LDP S3, S4, [X20]
	0x036E1E78 LDR V5, [X20 + 0x8]
	0x036E1E7C FABS S13, S2
	0x036E1E80 MOV V0.S[1], V1.S[0]
	0x036E1E84 UNIMPLEMENTED
	0x036E1E88 MOV X0, X21
	0x036E1E8C MOV V0.16B, V3.16B
	0x036E1E90 MOV V1.16B, V4.16B
	0x036E1E94 MOV V2.16B, V5.16B
	0x036E1E98 MOV X1, X31
	0x036E1E9C BL 0x3C281F8
	0x036E1EA0 LDP S3, S4, [X20 + 0xC]
	0x036E1EA4 LDR V5, [X20 + 0x14]
	0x036E1EA8 STR S2, [X19 + 0x8]
	0x036E1EAC STP S0, S1, [X19]
	0x036E1EB0 FADD S2, S3, S3
	0x036E1EB4 FADD S3, S4, S4
	0x036E1EB8 FADD S4, S5, S5
	0x00000000 INVALID
	0x036E1EC0 FMUL S2, S8, S2
	0x00000000 INVALID
	0x036E1EC8 FMUL S3, S9, S3
	0x00000000 INVALID
	0x036E1ED0 FMUL S4, S13, S4
	0x036E1ED4 FADD V5.2S, V5.2S, V6.2S
	0x036E1ED8 FADD S2, S2, S3
	0x036E1EDC MOVI V0.2S, 0x3F, 0x18
	0x036E1EE0 FMOV S1, 0.5
	0x036E1EE4 FADD V3.2S, V5.2S, V7.2S
	0x036E1EE8 FADD S2, S2, S4
	0x00000000 INVALID
	0x036E1EF0 FMUL S1, S2, S1
	0x036E1EF4 STUR D0, [X19 + 0xC]
	0x036E1EF8 STR S1, [X19 + 0x14]
	0x036E1EFC LDP X20, X19, [X31 + 0x90]
	0x036E1F00 LDP X22, X21, [X31 + 0x80]
	0x036E1F04 LDP X30, X23, [X31 + 0x70]
	0x036E1F08 LDP D9, D8, [X31 + 0x60]
	0x036E1F0C LDP D11, D10, [X31 + 0x50]
	0x036E1F10 LDP D13, D12, [X31 + 0x40]
	0x036E1F14 ADD X31, X31, 0xA0
	0x036E1F18 RET
	0x036E1F1C STP D11, D10, [X31 - 0x30]!
	0x036E1F20 STP D9, D8, [X31 + 0x10]
	0x036E1F24 STP X30, X19, [X31 + 0x20]
	0x036E1F28 LDP S8, S9, [X0 + 0x70]
	0x036E1F2C LDR V10, [X0 + 0x78]
	0x036E1F30 MOV X1, X31
	0x036E1F34 MOV X19, X0
	0x036E1F38 BL 0x3C32E90
	0x036E1F3C CBZ X0, 0x36E1FDC
	0x036E1F40 MOV X1, X31
	0x036E1F44 BL 0x3C3F58C
	0x036E1F48 ADRP X8, 0xFFFFFFFFFD408000
	0x036E1F4C FSUB S0, S8, S0
	0x036E1F50 FSUB S1, S9, S1
	0x036E1F54 LDR V3, [X8 + 0xF20]
	0x036E1F58 FSUB S2, S10, S2
	0x036E1F5C FMUL S0, S0, S0
	0x036E1F60 FMUL S1, S1, S1
	0x036E1F64 FADD S0, S0, S1
	0x036E1F68 FMUL S1, S2, S2
	0x036E1F6C FADD S0, S1, S0
	0x036E1F70 FCMP S0, S3
	0x036E1F74 B.MI 0x36E1F80
	0x036E1F78 MOVZ W0, 0x1
	0x036E1F7C B 0x36E1FCC
	0x036E1F80 LDP S10, S11, [X19 + 0x7C]
	0x036E1F84 LDP S9, S8, [X19 + 0x84]
	0x036E1F88 MOV X0, X19
	0x036E1F8C MOV X1, X31
	0x036E1F90 BL 0x3C32E90
	0x036E1F94 CBZ X0, 0x36E1FDC
	0x036E1F98 MOV X1, X31
	0x036E1F9C BL 0x3C3DEB4
	0x036E1FA0 FMUL S0, S10, S0
	0x036E1FA4 FMUL S1, S11, S1
	0x036E1FA8 ADRP X8, 0xFFFFFFFFFD409000
	0x036E1FAC FADD S0, S0, S1
	0x036E1FB0 LDR V1, [X8 + 0x1B4]
	0x036E1FB4 FMUL S2, S9, S2
	0x036E1FB8 FADD S0, S2, S0
	0x036E1FBC FMUL S2, S8, S3
	0x036E1FC0 FADD S0, S2, S0
	0x036E1FC4 FCMP S0, S1
	0x036E1FC8 CSET W0, LE
	0x036E1FCC LDP X30, X19, [X31 + 0x20]
	0x036E1FD0 LDP D9, D8, [X31 + 0x10]
	0x036E1FD4 LDP D11, D10, [X31], #0x30
	0x036E1FD8 RET
	0x036E1FDC BL 0x1C16F20
	0x036E1FE0 STR X30, [X31 - 0x20]!
	0x036E1FE4 STP X20, X19, [X31 + 0x10]
	0x036E1FE8 ADRP X8, 0xFFFFFFFFFD409000
	0x036E1FEC ADRP X9, 0xFFFFFFFFFD40C000
	0x036E1FF0 LDR V0, [X8 + 0x7B]
	0x036E1FF4 LDR V1, [X9 + 0x9A0]
	0x036E1FF8 MOV X19, X0
	0x036E1FFC MOV X1, X31
	0x036E2000 STUR V0, [X0 + 0x28]
	0x036E2004 STR D1, [X0 + 0x38]
	0x036E2008 MOVN W0, 0x0
	0x036E200C BL 0x3C35CBC
	0x036E2010 MOVZ W8, 0x101
	0x036E2014 MOVZ W9, 0x100
	0x036E2018 MOVZ W10, 0x40000000
	0x036E201C STR W0, [X19 + 0x40]
	0x036E2020 STURH W8, [X19 + 0x4D]
	0x036E2024 STR W9, [X19 + 0x50]
	0x036E2028 STR W10, [X19 + 0x5C]
	0x036E202C ADRP X20, 0xCF6000
	0x036E2030 LDRB W8, [X20 + 0x783]
	0x036E2034 CBNZ W8, 0x36E204C
	0x036E2038 ADRP X0, 0xA11000
	0x036E203C LDR X0, [X0 + 0x5A0]
	0x036E2040 BL 0x1C16CF4
	0x036E2044 MOVZ W8, 0x1
	0x036E2048 STRB W8, [X20 + 0x783]
	0x036E204C ADRP X8, 0xA11000
	0x036E2050 LDR X8, [X8 + 0x5A0]
	0x036E2054 ADRP X20, 0xCF6000
	0x036E2058 LDR X8, [X8]
	0x036E205C LDR X8, [X8 + 0xB8]
	0x036E2060 LDR V0, [X8]
	0x036E2064 LDR V1, [X8 + 0x8]
	0x036E2068 STR D0, [X19 + 0x70]
	0x036E206C STR S1, [X19 + 0x78]
	0x036E2070 LDRB W8, [X20 + 0x793]
	0x036E2074 CBNZ W8, 0x36E208C
	0x036E2078 ADRP X0, 0xA12000
	0x036E207C LDR X0, [X0 + 0x5A8]
	0x036E2080 BL 0x1C16CF4
	0x036E2084 MOVZ W8, 0x1
	0x036E2088 STRB W8, [X20 + 0x793]
	0x036E208C ADRP X8, 0xA12000
	0x036E2090 LDR X8, [X8 + 0x5A8]
	0x036E2094 MOV X0, X19
	0x036E2098 MOV X1, X31
	0x036E209C LDR X8, [X8]
	0x036E20A0 LDR X8, [X8 + 0xB8]
	0x036E20A4 LDR V0, [X8]
	0x036E20A8 STUR V0, [X19 + 0x7C]
	0x036E20AC LDP X20, X19, [X31 + 0x10]
	0x036E20B0 LDR X30, [X31], #0x20
	0x036E20B4 B 0x3C36C30
	0x036E20B8 STR X30, [X31 - 0x30]!
	0x036E20BC STP X22, X21, [X31 + 0x10]
	0x036E20C0 STP X20, X19, [X31 + 0x20]
	0x036E20C4 ADRP X21, 0xCFE000
	0x036E20C8 ADRP X22, 0xA5E000
	0x036E20CC ADRP X19, 0xA5E000
	0x036E20D0 ADRP X20, 0xA5E000
	0x036E20D4 LDRB W8, [X21 + 0xB09]
	0x036E20D8 LDR X22, [X22 + 0x6E0]
	0x036E20DC LDR X19, [X19 + 0x6E8]
	0x036E20E0 LDR X20, [X20 + 0x590]
	0x036E20E4 TBNZ X8, 0x0, 0x36E2114
	0x036E20E8 ADRP X0, 0xA5E000
	0x036E20EC LDR X0, [X0 + 0x6E8]
	0x036E20F0 BL 0x1C16CF4
	0x036E20F4 ADRP X0, 0xA5E000
	0x036E20F8 LDR X0, [X0 + 0x6E0]
	0x036E20FC BL 0x1C16CF4
	0x036E2100 ADRP X0, 0xA5E000
	0x036E2104 LDR X0, [X0 + 0x590]
	0x036E2108 BL 0x1C16CF4
	0x036E210C MOVZ W8, 0x1
	0x036E2110 STRB W8, [X21 + 0xB09]
	0x036E2114 LDR X0, [X22]
	0x036E2118 BL 0x1C16F10
	0x036E211C LDR X1, [X19]
	0x036E2120 MOV X19, X0
	0x036E2124 BL 0x301B7C4
	0x036E2128 LDR X8, [X20]
	0x036E212C LDP X22, X21, [X31 + 0x10]
	0x036E2130 LDR X8, [X8 + 0xB8]
	0x036E2134 STR X19, [X8]
	0x036E2138 LDP X20, X19, [X31 + 0x20]
	0x036E213C LDR X30, [X31], #0x30
	0x036E2140 RET
	0x036E2144 STR X30, [X31 - 0x20]!
	0x036E2148 STP X20, X19, [X31 + 0x10]
	0x036E214C ADRP X19, 0xCFE000
	0x036E2150 ADRP X20, 0xA5E000
	0x036E2154 LDRB W8, [X19 + 0xB0A]
	0x036E2158 LDR X20, [X20 + 0x658]
	0x036E215C TBNZ X8, 0x0, 0x36E2174
	0x036E2160 ADRP X0, 0xA5E000
	0x036E2164 LDR X0, [X0 + 0x658]
	0x036E2168 BL 0x1C16CF4
	0x036E216C MOVZ W8, 0x1
	0x036E2170 STRB W8, [X19 + 0xB0A]
	0x036E2174 LDR X0, [X20]
	0x036E2178 BL 0x1C16F10
	0x036E217C MOV X1, X31
	0x036E2180 MOV X19, X0
	0x036E2184 BL 0x33BDD8C
	0x036E2188 LDR X8, [X20]
	0x036E218C LDR X8, [X8 + 0xB8]
	0x036E2190 STR X19, [X8]
	0x036E2194 LDP X20, X19, [X31 + 0x10]
	0x036E2198 LDR X30, [X31], #0x20
	0x036E219C RET
	0x036E21A0 MOV X1, X31
	0x036E21A4 B 0x33BDD8C
	0x036E21A8 STR X30, [X31 - 0x10]!
	0x036E21AC CBZ X1, 0x36E21CC
	0x036E21B0 MOV X0, X1
	0x036E21B4 MOV X1, X31
	0x036E21B8 BL 0x3C32454
	0x036E21BC ORN W8, W31, W0, 0x0
	0x036E21C0 AND W0, W8, 0x1
	0x036E21C4 LDR X30, [X31], #0x10
	0x036E21C8 RET
	0x036E21CC BL 0x1C16F20
	0x036E21D0 STR X30, [X31 - 0x10]!
	0x036E21D4 CBZ X1, 0x36E21F4
	0x036E21D8 MOV X0, X1
	0x036E21DC MOV X1, X31
	0x036E21E0 BL 0x3C32454
	0x036E21E4 ORN W8, W31, W0, 0x0
	0x036E21E8 AND W0, W8, 0x1
	0x036E21EC LDR X30, [X31], #0x10
	0x036E21F0 RET
	0x036E21F4 BL 0x1C16F20
	0x036E21F8 STP X30, X21, [X31 - 0x20]!
	0x036E21FC STP X20, X19, [X31 + 0x10]
	0x036E2200 ADRP X20, 0xCFE000
	0x036E2204 ADRP X21, 0xA11000
	0x036E2208 LDRB W8, [X20 + 0xB0B]
	0x036E220C LDR X21, [X21 + 0x598]
	0x036E2210 MOV X19, X1
	0x036E2214 TBNZ X8, 0x0, 0x36E2238
	0x036E2218 ADRP X0, 0xA5E000
	0x036E221C LDR X0, [X0 + 0x6F0]
	0x036E2220 BL 0x1C16CF4
	0x036E2224 ADRP X0, 0xA11000
	0x036E2228 LDR X0, [X0 + 0x598]
	0x036E222C BL 0x1C16CF4
	0x036E2230 MOVZ W8, 0x1
	0x036E2234 STRB W8, [X20 + 0xB0B]
	0x036E2238 MOV X0, X19
	0x036E223C MOV X1, X31
	0x036E2240 BL 0x3BE29A4
	0x036E2244 LDR X8, [X21]
	0x036E2248 MOV X20, X0
	0x036E224C LDR W9, [X8 + 0xE0]
	0x036E2250 CBNZ W9, 0x36E225C
	0x036E2254 MOV X0, X8
	0x036E2258 BL 0x1C16DFC
	0x036E225C MOV X0, X20
	0x036E2260 MOV X1, X31
	0x036E2264 MOV X2, X31
	0x036E2268 BL 0x3C354F8
	0x036E226C TBZ X0, 0x0, 0x36E22CC
	0x036E2270 MOV X0, X19
	0x036E2274 MOV X1, X31
	0x036E2278 BL 0x3BE29A4
	0x036E227C CBZ X0, 0x36E22DC
	0x036E2280 MOV X1, X31
	0x036E2284 BL 0x3C32ECC
	0x036E2288 CBZ X0, 0x36E22DC
	0x036E228C ADRP X8, 0xA5E000
	0x036E2290 LDR X8, [X8 + 0x6F0]
	0x036E2294 LDR X1, [X8]
	0x036E2298 BL 0x21E52E4
	0x036E229C LDR X8, [X21]
	0x036E22A0 MOV X19, X0
	0x036E22A4 LDR W9, [X8 + 0xE0]
	0x036E22A8 CBNZ W9, 0x36E22B4
	0x036E22AC MOV X0, X8
	0x036E22B0 BL 0x1C16DFC
	0x036E22B4 MOV X0, X19
	0x036E22B8 LDP X20, X19, [X31 + 0x10]
	0x036E22BC MOV X1, X31
	0x036E22C0 MOV X2, X31
	0x036E22C4 LDP X30, X21, [X31], #0x20
	0x036E22C8 B 0x3C354F8
	0x036E22CC LDP X20, X19, [X31 + 0x10]
	0x036E22D0 MOV W0, W31
	0x036E22D4 LDP X30, X21, [X31], #0x20
	0x036E22D8 RET
	0x036E22DC BL 0x1C16F20
	0x036E22E0 STP X30, X21, [X31 - 0x20]!
	0x036E22E4 STP X20, X19, [X31 + 0x10]
	0x036E22E8 ADRP X20, 0xCFE000
	0x036E22EC ADRP X21, 0xA11000
	0x036E22F0 LDRB W8, [X20 + 0xB0C]
	0x036E22F4 LDR X21, [X21 + 0x598]
	0x036E22F8 MOV X19, X1
	0x036E22FC TBNZ X8, 0x0, 0x36E2320
	0x036E2300 ADRP X0, 0xA5E000
	0x036E2304 LDR X0, [X0 + 0x6F8]
	0x036E2308 BL 0x1C16CF4
	0x036E230C ADRP X0, 0xA11000
	0x036E2310 LDR X0, [X0 + 0x598]
	0x036E2314 BL 0x1C16CF4
	0x036E2318 MOVZ W8, 0x1
	0x036E231C STRB W8, [X20 + 0xB0C]
	0x036E2320 MOV X0, X19
	0x036E2324 MOV X1, X31
	0x036E2328 BL 0x3BE29A4
	0x036E232C LDR X8, [X21]
	0x036E2330 MOV X20, X0
	0x036E2334 LDR W9, [X8 + 0xE0]
	0x036E2338 CBNZ W9, 0x36E2344
	0x036E233C MOV X0, X8
	0x036E2340 BL 0x1C16DFC
	0x036E2344 MOV X0, X20
	0x036E2348 MOV X1, X31
	0x036E234C MOV X2, X31
	0x036E2350 BL 0x3C354F8
	0x036E2354 TBZ X0, 0x0, 0x36E23B4
	0x036E2358 MOV X0, X19
	0x036E235C MOV X1, X31
	0x036E2360 BL 0x3BE29A4
	0x036E2364 CBZ X0, 0x36E23C4
	0x036E2368 MOV X1, X31
	0x036E236C BL 0x3C32ECC
	0x036E2370 CBZ X0, 0x36E23C4
	0x036E2374 ADRP X8, 0xA5E000
	0x036E2378 LDR X8, [X8 + 0x6F8]
	0x036E237C LDR X1, [X8]
	0x036E2380 BL 0x21E52E4
	0x036E2384 LDR X8, [X21]
	0x036E2388 MOV X19, X0
	0x036E238C LDR W9, [X8 + 0xE0]
	0x036E2390 CBNZ W9, 0x36E239C
	0x036E2394 MOV X0, X8
	0x036E2398 BL 0x1C16DFC
	0x036E239C MOV X0, X19
	0x036E23A0 LDP X20, X19, [X31 + 0x10]
	0x036E23A4 MOV X1, X31
	0x036E23A8 MOV X2, X31
	0x036E23AC LDP X30, X21, [X31], #0x20
	0x036E23B0 B 0x3C354F8
	0x036E23B4 LDP X20, X19, [X31 + 0x10]
	0x036E23B8 MOV W0, W31
	0x036E23BC LDP X30, X21, [X31], #0x20
	0x036E23C0 RET
	0x036E23C4 BL 0x1C16F20
	0x036E23C8 MOV X1, X31
	0x036E23CC B 0x33A51F0
	0x036E23D0 MOV X1, X31
	0x036E23D4 B 0x33A51F0
	0x036E23D8 STP X30, X23, [X31 - 0x30]!
	0x036E23DC STP X22, X21, [X31 + 0x10]
	0x036E23E0 STP X20, X19, [X31 + 0x20]
	0x036E23E4 ADRP X23, 0xCFE000
	0x036E23E8 ADRP X22, 0xA11000
	0x036E23EC ADRP X20, 0xA5E000
	0x036E23F0 ADRP X21, 0xA5E000
	0x036E23F4 MOV X19, X8
	0x036E23F8 LDRB W8, [X23 + 0xB0F]
	0x036E23FC LDR X22, [X22 + 0x618]
	0x036E2400 LDR X20, [X20 + 0x700]
	0x036E2404 LDR X21, [X21 + 0x708]
	0x036E2408 TBNZ X8, 0x0, 0x36E2438
	0x036E240C ADRP X0, 0xA11000
	0x036E2410 LDR X0, [X0 + 0x618]
	0x036E2414 BL 0x1C16CF4
	0x036E2418 ADRP X0, 0xA5E000
	0x036E241C LDR X0, [X0 + 0x700]
	0x036E2420 BL 0x1C16CF4
	0x036E2424 ADRP X0, 0xA5E000
	0x036E2428 LDR X0, [X0 + 0x708]
	0x036E242C BL 0x1C16CF4
	0x036E2430 MOVZ W8, 0x1
	0x036E2434 STRB W8, [X23 + 0xB0F]
	0x036E2438 LDR X0, [X22]
	0x036E243C MOVZ W1, 0x180F
	0x036E2440 BL 0x1C16D6C
	0x036E2444 LDR X1, [X20]
	0x036E2448 MOV X2, X31
	0x036E244C MOV X20, X0
	0x036E2450 BL 0x32C5BD8
	0x036E2454 LDR X0, [X22]
	0x036E2458 MOVZ W1, 0x1A8C
	0x036E245C BL 0x1C16D6C
	0x036E2460 LDR X1, [X21]
	0x036E2464 MOV X2, X31
	0x036E2468 MOV X21, X0
	0x036E246C BL 0x32C5BD8
	0x036E2470 ADRP X8, 0xFFFFFFFFFD40C000
	0x036E2474 LDR V0, [X8 + 0xB8]
	0x036E2478 STP X20, X21, [X19]
	0x036E247C STRB W31, [X19 + 0x18]
	0x036E2480 STUR W31, [X19 + 0x19]
	0x036E2484 STR D0, [X19 + 0x10]
	0x036E2488 STR W31, [X19 + 0x1C]
	0x036E248C LDP X20, X19, [X31 + 0x20]
	0x036E2490 LDP X22, X21, [X31 + 0x10]
	0x036E2494 LDP X30, X23, [X31], #0x30
	0x036E2498 RET
	0x036E249C MOV X1, X31
	0x036E24A0 B 0x33BDD8C
	0x036E24A4 SUB X31, X31, 0x40
	0x036E24A8 STR X30, [X31 + 0x10]
	0x036E24AC STP X22, X21, [X31 + 0x20]
	0x036E24B0 STP X20, X19, [X31 + 0x30]
	0x036E24B4 ADRP X22, 0xCFE000
	0x036E24B8 ADRP X21, 0xA5E000
	0x036E24BC LDRB W8, [X22 + 0xB11]
	0x036E24C0 LDR X21, [X21 + 0x710]
	0x036E24C4 MOV X20, X1
	0x036E24C8 MOV X19, X0
	0x036E24CC TBNZ X8, 0x0, 0x36E24E4
	0x036E24D0 ADRP X0, 0xA5E000
	0x036E24D4 LDR X0, [X0 + 0x710]
	0x036E24D8 BL 0x1C16CF4
	0x036E24DC MOVZ W8, 0x1
	0x036E24E0 STRB W8, [X22 + 0xB11]
	0x036E24E4 LDR X3, [X21]
	0x036E24E8 ADD X0, X31, 0x0
	0x036E24EC MOVZ W2, 0x4
	0x036E24F0 MOV X1, X20
	0x036E24F4 STP X31, X31, [X31]
	0x036E24F8 BL 0x23E5254
	0x036E24FC LDR V0, [X31]
	0x036E2500 LDP X22, X21, [X31 + 0x20]
	0x036E2504 LDR X30, [X31 + 0x10]
	0x036E2508 STR V0, [X19]
	0x036E250C LDP X20, X19, [X31 + 0x30]
	0x036E2510 ADD X31, X31, 0x40
	0x036E2514 RET
	0x036E2518 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 1280
	022 Move X19, 0xD00000
	023 Move X22, X8
	024 Move W8, [X19+2824]
	025 Move X21, X1
	026 Move X20, X0
	027 Add X24, X31, 1192
	028 Add X25, X31, 800
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {56}
	033 Move X0, 0xA60000
	034 Move X0, [X0+1632]
	035 Call 0x1C17CF4
	036 Move X0, 0xA60000
	037 Move X0, [X0+1640]
	038 Call 0x1C17CF4
	039 Move X0, 0xA60000
	040 Move X0, [X0+1648]
	041 Call 0x1C17CF4
	042 Move X0, 0xA60000
	043 Move X0, [X0+1656]
	044 Call 0x1C17CF4
	045 Move X0, 0xA1A000
	046 Move X0, [X0+1792]
	047 Call 0x1C17CF4
	048 Move X0, 0xA60000
	049 Move X0, [X0+1424]
	050 Call 0x1C17CF4
	051 Move X0, 0xA60000
	052 Move X0, [X0+1664]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X19+2824], W8
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 Move X0, X20
	058 Move X1, X31
	059 Move [X31+1200], X31
	060 Move [X31+1192], X31
	061 Move [X31+1208], X31
	062 Move [X24+72], V0
	063 Move [X24+56], V0
	064 Move [X24+40], V0
	065 Move [X24+24], V0
	066 Move [X25+352], V0
	067 Move [X25+360], V0
	068 Move [X25+320], V0
	069 Move [X25+328], V0
	070 Move [X25+288], V0
	071 Move [X25+296], V0
	072 Move [X25+256], V0
	073 Move [X25+264], V0
	074 Move [X25+224], V0
	075 Move [X25+232], V0
	076 Move [X25+192], V0
	077 Move [X25+200], V0
	078 Move [X25+11], V0
	079 Call Component.get_transform, X0
	080 Compare X0, 0
	081 JumpIfEqual {551}
	082 Move X1, X31
	083 Call Transform.get_position, X0
	084 Move X0, X20
	085 Move X1, X31
	086 Move V8, V0
	087 Move V9, V1
	088 Move V10, V2
	089 Call Component.get_transform, X0
	090 Compare X0, 0
	091 JumpIfEqual {551}
	092 Move X1, X31
	093 Call Transform.get_rotation, X0
	094 Move X19, 0xCF8000
	095 Move W8, [X19+2139]
	096 Move V11, V0
	097 Move V12, V1
	098 Move V13, V2
	099 Move V14, V3
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0xA13000
	103 Move X0, [X0+1440]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X19+2139], W8
	107 Move [X31+32], X22
	108 Move X20, 0xA13000
	109 Move X20, [X20+1440]
	110 Move V1, V9
	111 Move V2, V10
	112 Move V3, V11
	113 Move X8, [X20]
	114 Move V4, V12
	115 Move V5, V13
	116 Move V6, V14
	117 Move X8, [X8+184]
	118 Move X0, X31
	119 Move V0, [X8+20]
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 Add X8, X31, 864
	122 Move [X31+8], S0
	123 Move V0, V8
	124 Move [X31], X9
	125 Call Matrix4x4.TRS, X0, X1, X2
	126 Move V0, [X25+64]
	127 Move V1, [X25+80]
	128 Move V2, [X25+96]
	129 Move V3, [X25+112]
	130 Add X8, X31, 864
	131 Add X0, X31, 1216
	132 Move X1, X31
	133 Move [X24+24], V0
	134 Move [X24+40], V1
	135 Move [X24+56], V2
	136 Move [X24+72], V3
	137 Call Matrix4x4.get_inverse, X0
	138 Move V0, [X25+64]
	139 Move V1, [X25+80]
	140 Move V2, [X25+96]
	141 Move V3, [X25+112]
	142 Move [X31+1208], X31
	143 Move [X31+1192], X31
	144 Move [X24+24], V0
	145 Move [X24+40], V1
	146 Move [X24+56], V2
	147 Move [X24+72], V3
	148 Move [X31+1200], X31
	149 Compare X21, 0
	150 JumpIfEqual {551}
	151 Move X8, 0xA60000
	152 Move X8, [X8+1656]
	153 Move X28, 0xA60000
	154 Move X29, 0xA60000
	155 Move X28, [X28+1640]
	156 Move X29, [X29+1424]
	157 Move X1, [X8]
	158 Add X8, X31, 864
	159 Move X0, X21
	160 Add X26, X31, 584
	161 Add X27, X31, 128
	162 Call List`1<NavMeshBuildSource>.GetEnumerator, X0
	163 Add X0, X31, 1072
	164 Add X1, X31, 864
	165 Move W2, 112
	166 Add X19, X31, 1072
	167 Call 0x3EB2AC0
	168 Add X21, X19, 16
	169 Move X23, 0xCF8000
	170 Move W19, 1
	171 Move S14, 0.5
	172 NotImplemented "Instruction MOVI not yet implemented."
	173 Move X1, [X28]
	174 Add X0, X31, 1072
	175 Call Enumerator<NavMeshBuildSource>.MoveNext, X0
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {511}
	180 Add X0, X31, 976
	181 Move W2, 96
	182 Move X1, X21
	183 Call 0x3EB2AC0
	184 Add X0, X31, 976
	185 Move X1, X31
	186 Call NavMeshBuildSource.get_shape, X0
	187 Subtract W8, W0, 2
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 Move [X25+64], V0
	194 Move [X25+72], V1
	195 Move [X25+96], V2
	196 Move [X25+104], V3
	197 Add X8, X31, 800
	198 Add X0, X31, 976
	199 Move X1, X31
	200 Call NavMeshBuildSource.get_transform, X0
	201 Move V0, [X25]
	202 Move V1, [X25+16]
	203 Move V2, [X25+32]
	204 Move V3, [X25+48]
	205 Move V4, [X25+64]
	206 Move V5, [X25+80]
	207 Move [X31+128], V0
	208 Move [X31+136], V1
	209 Move V0, [X25+96]
	210 Move V1, [X25+112]
	211 Move [X31+10], V2
	212 Move [X27+48], V3
	213 Move [X27+56], V4
	214 Move [X27+80], V5
	215 Move [X27+88], V0
	216 Move [X27+7], V1
	217 Add X8, X31, 736
	218 Add X0, X31, 192
	219 Add X1, X31, 128
	220 Move X2, X31
	221 Call Matrix4x4.op_Multiply, X0, X1
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 Move W8, [X23+1923]
	227 Move [X25], V0
	228 Move [X25+8], V1
	229 Move [X25+32], V2
	230 Move [X25+40], V3
	231 Compare W8, 0
	232 JumpIfNotEqual {236}
	233 Move X0, X20
	234 Call 0x1C17CF4
	235 Move [X23+1923], W19
	236 Move X8, [X20]
	237 Move X8, [X8+184]
	238 Move V11, [X8]
	239 Move V12, [X8+8]
	240 Add X0, X31, 976
	241 Move X1, X31
	242 Call NavMeshBuildSource.get_size, X0
	243 Move X0, [X29]
	244 Move V8, V0
	245 Move V9, V1
	246 Move V10, V2
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Multiply S0, S8, S14
	252 Move V3, [X25]
	253 Move V4, [X25+16]
	254 Move [X31+48], S12
	255 Move [X31+56], S0
	256 Move V0, [X25+32]
	257 Move V5, [X25+48]
	258 Multiply S1, S9, S14
	259 Multiply S2, S10, S14
	260 Move [X31+40], D11
	261 Move [X31+64], V3
	262 Move [X31+72], V4
	263 Move [X31+96], V0
	264 Move [X31+104], V5
	265 Move [X31+56], S1
	266 Move [X31+64], S2
	267 Add X8, X31, 736
	268 Add X0, X31, 64
	269 Add X1, X31, 40
	270 Call NavMeshSurface.GetWorldBounds, X0, X1
	271 Move V0, [X31+736]
	272 NotImplemented "Instruction LDUR not yet implemented."
	273 Move V2, [X31+744]
	274 Move V3, [X31+756]
	275 Move V6, [X31+1200]
	276 Move V7, [X31+1212]
	277 Move V4, [X31+1192]
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 Subtract S17, S2, S3
	280 Subtract S19, S6, S7
	281 Subtract V16, V0, V1
	282 Subtract V18, V4, V5
	283 Add V4, V4, V5
	284 Add S5, S6, S7
	285 NotImplemented "Instruction FCMP not yet implemented."
	286 Add V0, V0, V1
	287 Add S1, S2, S3
	288 NotImplemented "Instruction INVALID not yet implemented."
	289 NotImplemented "Instruction INVALID not yet implemented."
	290 NotImplemented "Instruction FCSEL not yet implemented."
	291 NotImplemented "Instruction FCMP not yet implemented."
	292 NotImplemented "Instruction INVALID not yet implemented."
	293 NotImplemented "Instruction INVALID not yet implemented."
	294 NotImplemented "Instruction FCSEL not yet implemented."
	295 Subtract V3, V3, V2
	296 Subtract S4, S4, S6
	297 NotImplemented "Instruction INVALID not yet implemented."
	298 Multiply S4, S4, S14
	299 Add V2, V2, V3
	300 Add S5, S6, S4
	301 Subtract V6, V2, V3
	302 Add V2, V3, V2
	303 Subtract S3, S5, S4
	304 NotImplemented "Instruction INVALID not yet implemented."
	305 Add S4, S4, S5
	306 NotImplemented "Instruction INVALID not yet implemented."
	307 NotImplemented "Instruction FCMP not yet implemented."
	308 NotImplemented "Instruction INVALID not yet implemented."
	309 NotImplemented "Instruction INVALID not yet implemented."
	310 NotImplemented "Instruction FCSEL not yet implemented."
	311 NotImplemented "Instruction FCMP not yet implemented."
	312 Subtract V0, V0, V6
	313 NotImplemented "Instruction FCSEL not yet implemented."
	314 NotImplemented "Instruction INVALID not yet implemented."
	315 Subtract S1, S1, S2
	316 Move [X24+12], D0
	317 Add V0, V6, V0
	318 Multiply S1, S1, S14
	319 Move [X31+1192], D0
	320 Add S0, S2, S1
	321 Move [X31+1212], S1
	322 Move [X31+1200], S0
	323 Compare W0, 0
	324 JumpIfEqual {337}
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Add X0, X31, 976
	327 Move X1, X31
	328 Call NavMeshBuildSource.get_sourceObject, X0
	329 Compare X0, 0
	330 JumpIfEqual {426}
	331 Move X8, 0xA5F000
	332 Move X8, [X8+1664]
	333 Move X9, [X0]
	334 Move X8, [X8]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 NotImplemented "Instruction CSEL not yet implemented."
	337 Add X0, X31, 976
	338 Move X1, X31
	339 Call NavMeshBuildSource.get_sourceObject, X0
	340 Compare X0, 0
	341 JumpIfEqual {348}
	342 Move X8, 0xA19000
	343 Move X8, [X8+1792]
	344 Move X9, [X0]
	345 Move X8, [X8]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 NotImplemented "Instruction CSEL not yet implemented."
	348 Move X22, X31
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction LDUR not yet implemented."
	351 NotImplemented "Instruction LDUR not yet implemented."
	352 NotImplemented "Instruction LDUR not yet implemented."
	353 Move [X25+64], V0
	354 Move [X25+72], V1
	355 Move [X25+96], V2
	356 Move [X25+104], V3
	357 Add X8, X31, 800
	358 Add X0, X31, 976
	359 Move X1, X31
	360 Call NavMeshBuildSource.get_transform, X0
	361 NotImplemented "Instruction LDUR not yet implemented."
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 NotImplemented "Instruction LDUR not yet implemented."
	364 Move [X26+24], V0
	365 Move V0, [X25+48]
	366 Move V3, [X25+64]
	367 Move [X26+40], V1
	368 Move [X26+56], V2
	369 Move V1, [X25+80]
	370 Move V2, [X25+96]
	371 Move [X26+72], V0
	372 Move V0, [X25+7]
	373 Move [X26+88], V3
	374 Move [X26+104], V1
	375 Move [X26+120], V2
	376 Move [X26+136], V0
	377 Add X8, X31, 736
	378 Add X0, X31, 672
	379 Add X1, X31, 608
	380 Move X2, X31
	381 Call Matrix4x4.op_Multiply, X0, X1
	382 NotImplemented "Instruction LDUR not yet implemented."
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 NotImplemented "Instruction LDUR not yet implemented."
	385 NotImplemented "Instruction LDUR not yet implemented."
	386 Move [X25], V0
	387 Move [X25+8], V1
	388 Move [X25+32], V2
	389 Move [X25+40], V3
	390 Compare X22, 0
	391 JumpIfEqual {549}
	392 Add X8, X31, 584
	393 Move X0, X22
	394 Move X1, X31
	395 Call Mesh.get_bounds, X0
	396 Add X8, X31, 329
	397 NotImplemented "Instruction LDUR not yet implemented."
	398 Move X8, [X31+600]
	399 Move X0, [X29]
	400 Move [X26+152], V0
	401 Move [X31+752], X8
	402 Move W8, [X0+224]
	403 Compare W8, 0
	404 JumpIfNotEqual {406}
	405 Call 0x1C17DFC
	406 Move V0, [X25]
	407 Move V1, [X25+16]
	408 Move V2, [X25+32]
	409 Move V3, [X25+48]
	410 NotImplemented "Instruction LDUR not yet implemented."
	411 Move X8, [X31+752]
	412 Move [X27+384], V0
	413 Move [X27+392], V1
	414 Move [X27+416], V2
	415 Move [X27+424], V3
	416 Move [X27+22], V4
	417 Move [X31+496], X8
	418 Add X8, X31, 584
	419 Add X0, X31, 512
	420 Add X1, X31, 480
	421 Call NavMeshSurface.GetWorldBounds, X0, X1
	422 Move V0, [X31+584]
	423 NotImplemented "Instruction LDUR not yet implemented."
	424 Move V2, [X31+592]
	425 Move V3, [X31+604]
	426 Move X22, X31
	427 NotImplemented "Instruction LDUR not yet implemented."
	428 NotImplemented "Instruction LDUR not yet implemented."
	429 NotImplemented "Instruction LDUR not yet implemented."
	430 NotImplemented "Instruction LDUR not yet implemented."
	431 Move [X25+64], V0
	432 Move [X25+72], V1
	433 Move [X25+96], V2
	434 Move [X25+104], V3
	435 Add X8, X31, 800
	436 Add X0, X31, 976
	437 Move X1, X31
	438 Call NavMeshBuildSource.get_transform, X0
	439 Move V0, [X25]
	440 Move V1, [X25+16]
	441 Move V2, [X25+32]
	442 Move V3, [X25+48]
	443 Move [X27+224], V0
	444 Move [X27+232], V1
	445 Move V0, [X25+64]
	446 Move V1, [X25+80]
	447 Move [X27+256], V2
	448 Move [X27+264], V3
	449 Move V2, [X25+96]
	450 Move V3, [X25+112]
	451 Move [X27+288], V0
	452 Move [X27+296], V1
	453 Move [X27+320], V2
	454 Move [X27+328], V3
	455 Add X8, X31, 736
	456 Add X0, X31, 416
	457 Add X1, X31, 352
	458 Move X2, X31
	459 Call Matrix4x4.op_Multiply, X0, X1
	460 NotImplemented "Instruction LDUR not yet implemented."
	461 NotImplemented "Instruction LDUR not yet implemented."
	462 NotImplemented "Instruction LDUR not yet implemented."
	463 NotImplemented "Instruction LDUR not yet implemented."
	464 Move [X25], V0
	465 Move [X25+8], V1
	466 Move [X25+32], V2
	467 Move [X25+40], V3
	468 Compare X22, 0
	469 JumpIfEqual {550}
	470 Move X0, X22
	471 Move X1, X31
	472 Call TerrainData.get_size, X0
	473 Move V8, V0
	474 Move V9, V1
	475 Move V10, V2
	476 Move X0, X22
	477 Move X1, X31
	478 Call TerrainData.get_size, X0
	479 Move X0, [X29]
	480 Move V11, V0
	481 Move V12, V1
	482 Move V13, V2
	483 Move W8, [X0+224]
	484 Compare W8, 0
	485 JumpIfNotEqual {487}
	486 Call 0x1C17DFC
	487 Multiply S0, S8, S14
	488 Multiply S1, S9, S14
	489 Move V6, [X25]
	490 Move V7, [X25+16]
	491 Move [X31+264], S0
	492 Move [X31+268], S1
	493 Move V0, [X25+32]
	494 Move V1, [X25+48]
	495 Multiply S2, S10, S14
	496 Multiply S3, S11, S14
	497 Multiply S4, S12, S14
	498 Multiply S5, S13, S14
	499 Move [X31+272], S2
	500 Move [X31+276], S3
	501 Move [X27+160], V6
	502 Move [X27+168], V7
	503 Move [X27+192], V0
	504 Move [X27+200], V1
	505 Move [X31+280], S4
	506 Move [X31+284], S5
	507 Add X8, X31, 736
	508 Add X0, X31, 288
	509 Add X1, X31, 264
	510 Call NavMeshSurface.GetWorldBounds, X0, X1
	511 Move X8, 0xA5F000
	512 Move X8, [X8+1632]
	513 Add X0, X31, 1072
	514 Move X1, [X8]
	515 Call Enumerator<NavMeshBuildSource>.Dispose, X0
	516 Move X19, [X31+32]
	517 Move X8, -46100480
	518 Move V0, [X8+188]
	519 Add X0, X31, 1192
	520 Move X1, X31
	521 Call Bounds.Expand, X0, V0
	522 Add X9, X31, 937
	523 Move X8, [X31+1208]
	524 NotImplemented "Instruction LDUR not yet implemented."
	525 Move [X19+16], X8
	526 Move [X19], V0
	527 Add X31, X31, 1280
	528 Move X20, [X31+144]
	529 Move X19, [X31+152]
	530 Move X22, [X31+128]
	531 Move X21, [X31+136]
	532 Move X24, [X31+112]
	533 Move X23, [X31+120]
	534 Move X26, [X31+96]
	535 Move X25, [X31+104]
	536 Move X28, [X31+80]
	537 Move X27, [X31+88]
	538 Move X29, [X31+64]
	539 Move X30, [X31+72]
	540 Move D9, [X31+48]
	541 Move D8, [X31+56]
	542 Move D11, [X31+32]
	543 Move D10, [X31+40]
	544 Move D13, [X31+16]
	545 Move D12, [X31+24]
	546 Move D15, [X31+160]
	547 Move D14, [X31+168]
	548 Return X0
	549 Call 0x1C17F20
	550 Call 0x1C17F20
	551 Call 0x1C17F20
	552 Move X19, [X31+32]
	553 Move X20, X0
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move X0, X20
	556 Call 0x3EB2AD0
	557 Move X21, [X0]
	558 Call 0x3EB2AE0
	559 Move X8, 0xA5F000
	560 Move X8, [X8+1632]
	561 Add X0, X31, 1072
	562 Move X1, [X8]
	563 Call Enumerator<NavMeshBuildSource>.Dispose, X0
	564 Compare X21, 0
	565 JumpIfEqual {517}
	566 Move X0, X21
	567 Call 0x1C17F18
	568 Move X21, X31
	569 Move X20, X0
	570 Move X8, 0xA5F000
	571 Move X8, [X8+1632]
	572 Move X1, [X8]
	573 Add X0, X31, 1072
	574 Call Enumerator<NavMeshBuildSource>.Dispose, X0
	575 Compare X21, 0
	576 JumpIfNotEqual {579}
	577 Move X0, X20
	578 Call 0x1D2D690
	579 Move X0, X21
	580 Call 0x1C17F18
	581 Call 0x1991590

Method: System.Boolean HasTransformChanged()

Disassembly:
	0x036E2F1C MOV X0, X19
	0x036E2F20 MOV X2, X31
	0x036E2F24 FADD S9, S9, S0
	0x036E2F28 STR X8, [X31 + 0x290]
	0x036E2F2C STP V3, V1, [X31 + 0x270]
	0x036E2F30 STR V2, [X31 + 0x26]
	0x036E2F34 BL 0x3BF85E4
	0x036E2F38 FMIN S3, S8, S13
	0x036E2F3C FCMP S8, 0x0
	0x036E2F40 MOV V0.S[1], V1.S[0]
	0x036E2F44 FSUB S4, S9, S2
	0x036E2F48 FCSEL S3, S3, S14, PL
	0x036E2F4C LDP V1, V5, [X31 + 0x190]
	0x036E2F50 FSUB V6.2S, V10.2S, V0.2S
	0x036E2F54 FMUL S4, S3, S4
	0x00000000 INVALID
	0x036E2F5C LDR V6, [X31 + 0x1B]
	0x036E2F60 LDR X8, [X31 + 0x1C0]
	0x036E2F64 FADD V0.2S, V0.2S, V3.2S
	0x036E2F68 FADD S2, S2, S4
	0x036E2F6C STP V1, V5, [X31 + 0x260]
	0x036E2F70 MOV S1, V0.S[1]
	0x036E2F74 ADD X1, X31, 0x260
	0x036E2F78 MOV X0, X19
	0x036E2F7C MOV X2, X31
	0x036E2F80 STR V6, [X31 + 0x28]
	0x036E2F84 STR X8, [X31 + 0x290]
	0x036E2F88 BL 0x3BF8670
	0x036E2F8C B 0x36E3024
	0x036E2F90 LDR X8, [X20 + 0x30]
	0x036E2F94 LDP V1, V0, [X20 + 0x10]
	0x036E2F98 LDR V2, [X20]
	0x036E2F9C ADD X0, X31, 0x10
	0x036E2FA0 STR X8, [X31 + 0x40]
	0x036E2FA4 STP V1, V0, [X31 + 0x20]
	0x036E2FA8 STR V2, [X31 + 0x1]
	0x036E2FAC LDR X1, [X19]
	0x036E2FB0 LDR W2, [X19 + 0x8]
	0x036E2FB4 BL 0x36E3614
	0x036E2FB8 B 0x36E32E0
	0x036E2FBC LDR X8, [X20 + 0x30]
	0x036E2FC0 LDP V1, V0, [X20 + 0x10]
	0x036E2FC4 LDR V2, [X20]
	0x036E2FC8 ADD X1, X31, 0x260
	0x036E2FCC STR X8, [X31 + 0x180]
	0x036E2FD0 STP V1, V0, [X31 + 0x160]
	0x036E2FD4 STR V2, [X31 + 0x15]
	0x036E2FD8 LDR X8, [X20 + 0x30]
	0x036E2FDC LDP V1, V0, [X20 + 0x10]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move S8, [X0+112]
	008 Move S9, [X0+116]
	009 Move V10, [X0+120]
	010 Move X1, X31
	011 Move X19, X0
	012 Call Component.get_transform, X0
	013 Compare X0, 0
	014 JumpIfEqual {58}
	015 Move X1, X31
	016 Call Transform.get_position, X0
	017 Move X8, -46104576
	018 Subtract S0, S8, S0
	019 Subtract S1, S9, S1
	020 Move V3, [X8+3872]
	021 Subtract S2, S10, S2
	022 Multiply S0, S0, S0
	023 Multiply S1, S1, S1
	024 Add S0, S0, S1
	025 Multiply S1, S2, S2
	026 Add S0, S1, S0
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move W0, 1
	029 Move S10, [X19+124]
	030 Move S11, [X19+128]
	031 Move S9, [X19+132]
	032 Move S8, [X19+136]
	033 Move X0, X19
	034 Move X1, X31
	035 Call Component.get_transform, X0
	036 Compare X0, 0
	037 JumpIfEqual {58}
	038 Move X1, X31
	039 Call Transform.get_rotation, X0
	040 Multiply S0, S10, S0
	041 Multiply S1, S11, S1
	042 Move X8, -46100480
	043 Add S0, S0, S1
	044 Move V1, [X8+436]
	045 Multiply S2, S9, S2
	046 Add S0, S2, S0
	047 Multiply S2, S8, S3
	048 Add S0, S2, S0
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move X30, [X31+32]
	052 Move X19, [X31+40]
	053 Move D9, [X31+16]
	054 Move D8, [X31+24]
	055 Move D11, [X31+48]
	056 Move D10, [X31+56]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void UpdateDataIfTransformChanged()

Disassembly:
	0x036E26F8 LDR X0, [X0 + 0x720]
	0x036E26FC BL 0x1C16CF4
	0x036E2700 MOVZ W8, 0x1
	0x036E2704 STRB W8, [X20 + 0xB15]
	0x036E2708 LDR X0, [X19 + 0x10]
	0x036E270C CBZ X0, 0x36E27E0
	0x036E2710 ADRP X20, 0xA5E000
	0x036E2714 LDR X20, [X20 + 0x718]
	0x036E2718 LDR W10, [X0 + 0x1C]
	0x036E271C LDR X8, [X0 + 0x10]
	0x036E2720 LDR X9, [X20]
	0x036E2724 ADD W10, W10, 0x1
	0x036E2728 STR W10, [X0 + 0x1C]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call NavMeshSurface.HasTransformChanged, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {18}
	009 Add X0, X19, 108
	010 Move X1, X31
	011 Call NavMeshDataInstance.Remove, X0
	012 Move [X19+108], W31
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call NavMeshSurface.AddData, X0
	017 Return 
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 

Method: System.Void .ctor()

Disassembly:
	0x036E2FE0 LDR V2, [X20]
	0x036E2FE4 MOV X0, X19
	0x036E2FE8 MOV X2, X31
	0x036E2FEC STR X8, [X31 + 0x290]
	0x036E2FF0 STP V1, V0, [X31 + 0x270]
	0x036E2FF4 STR V2, [X31 + 0x26]
	0x036E2FF8 BL 0x3BF8858
	0x036E2FFC LDP V3, V4, [X31 + 0x150]
	0x036E3000 LDR V5, [X31 + 0x17]
	0x036E3004 LDR X8, [X31 + 0x180]
	0x036E3008 ADD X1, X31, 0x260
	0x036E300C MOV X0, X19
	0x036E3010 MOV X2, X31
	0x036E3014 STP V3, V4, [X31 + 0x260]
	0x036E3018 STR V5, [X31 + 0x28]
	0x036E301C STR X8, [X31 + 0x290]
	0x036E3020 BL 0x3BF88E4
	0x036E3024 LDP V2, V0, [X20 + 0x10]
	0x036E3028 LDR X8, [X20 + 0x30]
	0x036E302C LDR V1, [X20]
	0x036E3030 ADD X0, X19, 0x84
	0x036E3034 ADD X1, X31, 0x260
	0x036E3038 MOV X2, X31
	0x036E303C STR X8, [X31 + 0x290]
	0x036E3040 STP V2, V0, [X31 + 0x270]
	0x036E3044 STR V1, [X31 + 0x26]
	0x036E3048 BL 0x3BF9B18
	0x036E304C TBZ X0, 0x0, 0x36E3278
	0x036E3050 LDP V2, V0, [X20 + 0x10]
	0x036E3054 LDR X8, [X20 + 0x30]
	0x036E3058 LDR V1, [X20]
	0x036E305C ADD X0, X19, 0xC
	0x036E3060 ADD X1, X31, 0x110
	0x036E3064 STR X8, [X31 + 0x140]
	0x036E3068 STP V2, V0, [X31 + 0x120]
	0x036E306C STR V1, [X31 + 0x11]
	0x036E3070 BL 0x36E34C4
	0x036E3074 LDP S4, S7, [X19 + 0x48]
	0x036E3078 LDP S5, S6, [X19 + 0x50]
	0x036E307C LDR X8, [X20 + 0x30]
	0x036E3080 ADD X0, X19, 0x24
	0x036E3084 FMUL S17, S3, S4
	0x036E3088 FMUL S18, S0, S6
	0x036E308C FMUL S19, S1, S5
	0x036E3090 FMUL S20, S2, S7
	0x036E3094 FMUL S21, S3, S7
	0x036E3098 FMUL S22, S1, S6
	0x036E309C FMUL S23, S2, S4
	0x036E30A0 FMUL S24, S0, S5
	0x036E30A4 FMUL S25, S3, S5
	0x036E30A8 FMUL S26, S2, S6
	0x036E30AC FMUL S3, S3, S6
	0x036E30B0 FMUL S6, S0, S7
	0x036E30B4 FMUL S0, S0, S4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, -46100480
	005 Move X9, -46088192
	006 Move V0, [X8+123]
	007 Move V1, [X9+2464]
	008 Move X19, X0
	009 Move X1, X31
	010 Move [X0+40], V0
	011 Move [X0+56], D1
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W0, TEMP
	015 Call LayerMask.op_Implicit, X0
	016 Move W8, 257
	017 Move W9, 256
	018 Move W10, 0x40000000
	019 Move [X19+64], W0
	020 NotImplemented "Instruction STURH not yet implemented."
	021 Move [X19+80], W9
	022 Move [X19+92], W10
	023 Move X20, 0xCF6000
	024 Move W8, [X20+1923]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0xA11000
	028 Move X0, [X0+1440]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1923], W8
	032 Move X8, 0xA11000
	033 Move X8, [X8+1440]
	034 Move X20, 0xCF6000
	035 Move X8, [X8]
	036 Move X8, [X8+184]
	037 Move V0, [X8]
	038 Move V1, [X8+8]
	039 Move [X19+112], D0
	040 Move [X19+120], S1
	041 Move W8, [X20+1939]
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0xA12000
	045 Move X0, [X0+1448]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1939], W8
	049 Move X8, 0xA12000
	050 Move X8, [X8+1448]
	051 Move X0, X19
	052 Move X1, X31
	053 Move X8, [X8]
	054 Move X8, [X8+184]
	055 Move V0, [X8]
	056 Move [X19+124], V0
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Call MonoBehaviour..ctor, X0
	061 Return 

Method: System.Void .cctor()

Disassembly:
	0x036E30B8 FMUL S4, S1, S4
	0x036E30BC FMUL S1, S1, S7
	0x036E30C0 LDP V7, V16, [X20 + 0x10]
	0x036E30C4 FMUL S2, S2, S5
	0x036E30C8 LDR V5, [X20]
	0x036E30CC FSUB S0, S3, S0
	0x036E30D0 STP V7, V16, [X31 + 0xE0]
	0x036E30D4 FADD S16, S17, S18
	0x036E30D8 FADD S17, S21, S22
	0x036E30DC FADD S18, S25, S26
	0x036E30E0 FADD S3, S19, S16
	0x036E30E4 FADD S16, S23, S17
	0x036E30E8 FADD S6, S6, S18
	0x036E30EC FSUB S0, S0, S1
	0x036E30F0 FSUB S1, S3, S20
	0x036E30F4 ADD X1, X31, 0xD0
	0x036E30F8 STR X8, [X31 + 0x100]
	0x036E30FC STR S1, [X31 + 0xC]
	0x036E3100 FSUB S10, S16, S24
	0x036E3104 FSUB S11, S6, S4
	0x036E3108 FSUB S12, S0, S2
	0x036E310C STR V5, [X31 + 0xD]
	0x036E3110 BL 0x36E34C4
	0x036E3114 LDP S4, S7, [X19 + 0x64]
	0x036E3118 LDP S5, S6, [X19 + 0x6C]
	0x036E311C LDR X8, [X20 + 0x30]
	0x036E3120 ADD X0, X19, 0xA4
	0x036E3124 FMUL S17, S3, S4
	0x036E3128 FMUL S18, S0, S6
	0x036E312C FMUL S19, S1, S5
	0x036E3130 FMUL S20, S2, S7
	0x036E3134 FMUL S21, S3, S7
	0x036E3138 FMUL S22, S1, S6
	0x036E313C FMUL S23, S2, S4
	0x036E3140 FMUL S24, S0, S5

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCFE000
	007 Move X22, 0xA5E000
	008 Move X19, 0xA5E000
	009 Move X20, 0xA5E000
	010 Move W8, [X21+2825]
	011 Move X22, [X22+1760]
	012 Move X19, [X19+1768]
	013 Move X20, [X20+1424]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA5E000
	019 Move X0, [X0+1768]
	020 Call 0x1C17CF4
	021 Move X0, 0xA5E000
	022 Move X0, [X0+1760]
	023 Call 0x1C17CF4
	024 Move X0, 0xA5E000
	025 Move X0, [X0+1424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2825], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

