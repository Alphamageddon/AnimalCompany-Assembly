Type: Unity.AI.Navigation.NavMeshLink

Method: System.Int32 get_agentTypeID()

Disassembly:
	0x036DF470 STP S0, S1, [X0 + 0x20]
	0x036DF474 STR S2, [X0 + 0x28]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_agentTypeID(System.Int32 value)

Disassembly:
	0x036DF478 RET
	0x036DF47C LDP S0, S1, [X0 + 0x2C]
	0x036DF480 LDR V2, [X0 + 0x34]
	0x036DF484 RET
	0x036DF488 STP S0, S1, [X0 + 0x2C]
	0x036DF48C STR S2, [X0 + 0x34]
	0x036DF490 RET
	0x036DF494 LDR W0, [X0 + 0x38]
	0x036DF498 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+32], W1
	005 Add X0, X0, 76
	006 Move X1, X31
	007 Call NavMeshLinkInstance.Remove, X0
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call NavMeshLink.AddLink, X0
	012 Return 

Method: UnityEngine.Vector3 get_startPoint()

Disassembly:
	0x036DF4BC TBNZ X8, 0x0, 0x36DF4D4
	0x036DF4C0 ADRP X0, 0xA61000
	0x036DF4C4 LDR X0, [X0 + 0x560]

ISIL:
	001 Move S0, [X0+36]
	002 Move S1, [X0+40]
	003 Move V2, [X0+44]
	004 Return X0

Method: System.Void set_startPoint(UnityEngine.Vector3 value)

Disassembly:
	0x036DF4C8 BL 0x1C16CF4
	0x036DF4CC MOVZ W8, 0x1
	0x036DF4D0 STRB W8, [X20 + 0xAF5]
	0x036DF4D4 LDR X0, [X19]
	0x036DF4D8 LDR W8, [X0 + 0xE0]
	0x036DF4DC CBNZ W8, 0x36DF4E8
	0x036DF4E0 BL 0x1C16DFC
	0x036DF4E4 LDR X0, [X19]
	0x036DF4E8 LDR X8, [X0 + 0xB8]
	0x036DF4EC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+36], S0
	005 Move [X0+44], S1
	006 Move [X0+44], S2
	007 Add X0, X0, 76
	008 Move X1, X31
	009 Call NavMeshLinkInstance.Remove, X0
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call NavMeshLink.AddLink, X0
	014 Return 

Method: UnityEngine.Vector3 get_endPoint()

Disassembly:
	0x036DF4F0 LDR X0, [X8]
	0x036DF4F4 LDR X30, [X31], #0x20
	0x036DF4F8 RET

ISIL:
	001 Move S0, [X0+48]
	002 Move S1, [X0+52]
	003 Move V2, [X0+56]
	004 Return X0

Method: System.Void set_endPoint(UnityEngine.Vector3 value)

Disassembly:
	0x036DF4FC STP X30, X21, [X31 - 0x20]!
	0x036DF500 STP X20, X19, [X31 + 0x10]
	0x036DF504 ADRP X21, 0xD01000
	0x036DF508 ADRP X20, 0xA61000
	0x036DF50C LDRB W8, [X21 + 0xAF6]
	0x036DF510 LDR X20, [X20 + 0x560]
	0x036DF514 MOV X19, X0
	0x036DF518 TBNZ X8, 0x0, 0x36DF548
	0x036DF51C ADRP X0, 0xA61000
	0x036DF520 LDR X0, [X0 + 0x568]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+48], S0
	005 Move [X0+56], S1
	006 Move [X0+56], S2
	007 Add X0, X0, 76
	008 Move X1, X31
	009 Call NavMeshLinkInstance.Remove, X0
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call NavMeshLink.AddLink, X0
	014 Return 

Method: System.Single get_width()

Disassembly:
	0x036DF524 BL 0x1C16CF4
	0x036DF528 ADRP X0, 0xA61000

ISIL:
	001 Move V0, [X0+60]
	002 Return V0

Method: System.Void set_width(System.Single value)

Disassembly:
	0x036DF52C LDR X0, [X0 + 0x570]
	0x036DF530 BL 0x1C16CF4
	0x036DF534 ADRP X0, 0xA61000
	0x036DF538 LDR X0, [X0 + 0x560]
	0x036DF53C BL 0x1C16CF4
	0x036DF540 MOVZ W8, 0x1
	0x036DF544 STRB W8, [X21 + 0xAF6]
	0x036DF548 LDR X0, [X20]
	0x036DF54C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+60], S0
	005 Add X0, X0, 76
	006 Move X1, X31
	007 Call NavMeshLinkInstance.Remove, X0
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call NavMeshLink.AddLink, X0
	012 Return 

Method: System.Int32 get_costModifier()

Disassembly:
	0x036DF550 CBNZ W8, 0x36DF55C
	0x036DF554 BL 0x1C16DFC

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_costModifier(System.Int32 value)

Disassembly:
	0x036DF558 LDR X0, [X20]
	0x036DF55C LDR X8, [X0 + 0xB8]
	0x036DF560 LDR X0, [X8]
	0x036DF564 CBZ X0, 0x36DF608
	0x036DF568 ADRP X8, 0xA61000
	0x036DF56C LDR X8, [X8 + 0x570]
	0x036DF570 MOV X1, X19
	0x036DF574 LDR X2, [X8]
	0x036DF578 BL 0x301C318

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+64], W1
	005 Add X0, X0, 76
	006 Move X1, X31
	007 Call NavMeshLinkInstance.Remove, X0
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call NavMeshLink.AddLink, X0
	012 Return 

Method: System.Boolean get_bidirectional()

Disassembly:
	0x036DF57C TBNZ X0, 0x0, 0x36DF5E0
	0x036DF580 LDR X0, [X20]

ISIL:
	001 Move W0, [X0+68]
	002 Return X0

Method: System.Void set_bidirectional(System.Boolean value)

Disassembly:
	0x036DF584 LDR W8, [X0 + 0xE0]
	0x036DF588 CBNZ W8, 0x36DF594
	0x036DF58C BL 0x1C16DFC
	0x036DF590 LDR X0, [X20]
	0x036DF594 LDR X8, [X0 + 0xB8]
	0x036DF598 LDR X0, [X8]
	0x036DF59C CBZ X0, 0x36DF608
	0x036DF5A0 ADRP X9, 0xA61000
	0x036DF5A4 LDR X9, [X9 + 0x568]
	0x036DF5A8 LDR W10, [X0 + 0x1C]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W8, W1, 1
	004 Move X19, X0
	005 Move [X0+68], W8
	006 Add X0, X0, 76
	007 Move X1, X31
	008 Call NavMeshLinkInstance.Remove, X0
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call NavMeshLink.AddLink, X0
	013 Return 

Method: System.Boolean get_autoUpdate()

Disassembly:
	0x036DF5AC LDR X8, [X0 + 0x10]
	0x036DF5B0 LDR X9, [X9]

ISIL:
	001 Move W0, [X0+69]
	002 Return X0

Method: System.Void set_autoUpdate(System.Boolean value)

Disassembly:
	0x036DF5B4 ADD W10, W10, 0x1
	0x036DF5B8 STR W10, [X0 + 0x1C]

ISIL:
	001 And W1, W1, 1

Method: System.Int32 get_area()

Disassembly:
	0x036DF654 CBNZ W8, 0x36DF660
	0x036DF658 BL 0x1C16DFC

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_area(System.Int32 value)

Disassembly:
	0x036DF65C LDR X0, [X20]
	0x036DF660 LDR X8, [X0 + 0xB8]
	0x036DF664 LDR X0, [X8]
	0x036DF668 CBZ X0, 0x36DF688
	0x036DF66C ADRP X8, 0xA61000
	0x036DF670 LDR X8, [X8 + 0x578]
	0x036DF674 MOV X1, X19
	0x036DF678 LDP X20, X19, [X31 + 0x10]
	0x036DF67C LDR X2, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+72], W1
	005 Add X0, X0, 76
	006 Move X1, X31
	007 Call NavMeshLinkInstance.Remove, X0
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call NavMeshLink.AddLink, X0
	012 Return 

Method: System.Void OnEnable()

Disassembly:
	0x036DF680 LDP X30, X21, [X31], #0x20
	0x036DF684 B 0x301D7A8
	0x036DF688 BL 0x1C16F20
	0x036DF68C STP X30, X21, [X31 - 0x20]!
	0x036DF690 STP X20, X19, [X31 + 0x10]
	0x036DF694 ADRP X21, 0xD01000
	0x036DF698 LDRB W8, [X21 + 0xAF8]
	0x036DF69C MOV W19, W1
	0x036DF6A0 MOV X20, X0
	0x036DF6A4 TBNZ X8, 0x0, 0x36DF6D4
	0x036DF6A8 ADRP X0, 0xA61000
	0x036DF6AC LDR X0, [X0 + 0x548]
	0x036DF6B0 BL 0x1C16CF4
	0x036DF6B4 ADRP X0, 0xA15000
	0x036DF6B8 LDR X0, [X0 + 0xE28]
	0x036DF6BC BL 0x1C16CF4
	0x036DF6C0 ADRP X0, 0xA3E000
	0x036DF6C4 LDR X0, [X0 + 0xF38]
	0x036DF6C8 BL 0x1C16CF4
	0x036DF6CC MOVZ W8, 0x1
	0x036DF6D0 STRB W8, [X21 + 0xAF8]
	0x036DF6D4 LDR X0, [X20 + 0x40]
	0x036DF6D8 CBZ X0, 0x36DF740
	0x036DF6DC LDR W8, [X0 + 0x18]
	0x036DF6E0 CBZ W8, 0x36DF728
	0x036DF6E4 ADRP X8, 0xA3E000
	0x036DF6E8 LDR X8, [X8 + 0xF38]
	0x036DF6EC MOV W1, W31
	0x036DF6F0 LDR X2, [X8]
	0x036DF6F4 BL 0x2FDC41C
	0x036DF6F8 ADDS W31, W0, 0x1
	0x036DF6FC B.EQ 0x36DF730

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD02000
	005 Move W8, [X20+2792]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA62000
	012 Move X0, [X0+1216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2792], W8
	016 Move X0, X19
	017 Call NavMeshLink.AddLink, X0
	018 Move W8, [X19+69]
	019 Compare W8, 0
	020 JumpIfEqual {41}
	021 Add X0, X19, 76
	022 Move X1, X31
	023 Call NavMeshLinkInstance.get_valid, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {41}
	028 Move X8, 0xA62000
	029 Move X8, [X8+1216]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Call NavMeshLink.AddTracking, X0
	040 Return 
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 

Method: System.Void OnDisable()

Disassembly:
	0x036DFA84 FMOV S1, 0.5
	0x036DFA88 FMUL S0, S0, S1
	0x036DFA8C B 0x36DFA94
	0x036DFA90 FMOV S0, W31
	0x036DFA94 LDR V2, [X20 + 0x28]
	0x036DFA98 LDR V4, [X20 + 0x30]
	0x036DFA9C LDUR V1, [X20 + 0x34]
	0x036DFAA0 MOVI V5.2S, 0x3F, 0x18
	0x036DFAA4 LDR V3, [X20 + 0x3C]
	0x00000000 INVALID
	0x036DFAAC FMOV S5, 0.5
	0x036DFAB0 FMUL S4, S4, S5
	0x036DFAB4 MOVI D5, 0x0
	0x036DFAB8 MOV V5.S[0], V0.S[0]
	0x036DFABC STR D1, [X19]
	0x036DFAC0 FADD V1.2S, V5.2S, V2.2S
	0x036DFAC4 FADD S0, S0, S4
	0x036DFAC8 STR S3, [X19 + 0x8]
	0x036DFACC STUR D1, [X19 + 0xC]
	0x036DFAD0 STR S0, [X19 + 0x14]
	0x036DFAD4 LDP X20, X19, [X31 + 0x90]
	0x036DFAD8 LDR X30, [X31 + 0x80]
	0x036DFADC ADD X31, X31, 0xA0
	0x036DFAE0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD02000
	006 Move X21, 0xA62000
	007 Move W8, [X20+2793]
	008 Move X21, [X21+1216]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA62000
	015 Move X0, [X0+1216]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2793], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call NavMeshLink.RemoveTracking, X0
	026 Add X0, X19, 76
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call NavMeshLinkInstance.Remove, X0
	033 Return 

Method: System.Void UpdateLink()

Disassembly:
	0x036DF49C STR W1, [X0 + 0x38]
	0x036DF4A0 RET
	0x036DF4A4 STR X30, [X31 - 0x20]!
	0x036DF4A8 STP X20, X19, [X31 + 0x10]
	0x036DF4AC ADRP X20, 0xD01000
	0x036DF4B0 ADRP X19, 0xA61000
	0x036DF4B4 LDRB W8, [X20 + 0xAF5]
	0x036DF4B8 LDR X19, [X19 + 0x560]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 76
	005 Move X1, X31
	006 Call NavMeshLinkInstance.Remove, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call NavMeshLink.AddLink, X0
	011 Return 

Method: System.Void AddTracking(Unity.AI.Navigation.NavMeshLink link)

Disassembly:
	0x036DF8B8 STR W1, [X0 + 0x24]
	0x036DF8BC RET
	0x036DF8C0 LDP S0, S1, [X0 + 0x28]
	0x036DF8C4 LDR V2, [X0 + 0x30]
	0x036DF8C8 RET
	0x036DF8CC STP S0, S1, [X0 + 0x28]
	0x036DF8D0 STR S2, [X0 + 0x30]
	0x036DF8D4 RET
	0x036DF8D8 LDP S0, S1, [X0 + 0x34]
	0x036DF8DC LDR V2, [X0 + 0x3C]
	0x036DF8E0 RET
	0x036DF8E4 STP S0, S1, [X0 + 0x34]
	0x036DF8E8 STR S2, [X0 + 0x3C]
	0x036DF8EC RET
	0x036DF8F0 LDR W0, [X0 + 0x40]
	0x036DF8F4 RET
	0x036DF8F8 STR W1, [X0 + 0x40]
	0x036DF8FC RET
	0x036DF900 LDR W0, [X0 + 0x44]
	0x036DF904 RET
	0x036DF908 STR W1, [X0 + 0x44]
	0x036DF90C RET
	0x036DF910 LDR W0, [X0 + 0x48]
	0x036DF914 RET
	0x036DF918 STR W1, [X0 + 0x48]
	0x036DF91C RET
	0x036DF920 LDRB W0, [X0 + 0x4D]
	0x036DF924 RET
	0x036DF928 AND W8, W1, 0x1
	0x036DF92C STRB W8, [X0 + 0x4D]
	0x036DF930 RET
	0x036DF934 LDRB W0, [X0 + 0x4E]
	0x036DF938 RET
	0x036DF93C AND W8, W1, 0x1
	0x036DF940 STRB W8, [X0 + 0x4E]
	0x036DF944 RET
	0x036DF948 LDRB W0, [X0 + 0x4F]
	0x036DF94C RET
	0x036DF950 AND W8, W1, 0x1
	0x036DF954 STRB W8, [X0 + 0x4F]
	0x036DF958 RET
	0x036DF95C LDR W0, [X0 + 0x50]
	0x036DF960 RET
	0x036DF964 STR W1, [X0 + 0x50]
	0x036DF968 RET
	0x036DF96C LDRB W0, [X0 + 0x54]
	0x036DF970 RET
	0x036DF974 AND W8, W1, 0x1
	0x036DF978 STRB W8, [X0 + 0x54]
	0x036DF97C RET
	0x036DF980 LDR V0, [X0 + 0x58]
	0x036DF984 RET
	0x036DF988 STR S0, [X0 + 0x58]
	0x036DF98C RET
	0x036DF990 LDR V0, [X0 + 0x5C]
	0x036DF994 RET
	0x036DF998 STR S0, [X0 + 0x5C]
	0x036DF99C RET
	0x036DF9A0 LDRB W0, [X0 + 0x68]
	0x036DF9A4 RET
	0x036DF9A8 AND W8, W1, 0x1
	0x036DF9AC STRB W8, [X0 + 0x68]
	0x036DF9B0 RET
	0x036DF9B4 LDR X0, [X0 + 0x60]
	0x036DF9B8 RET
	0x036DF9BC STR X1, [X0 + 0x60]
	0x036DF9C0 RET
	0x036DF9C4 LDR W0, [X0 + 0x6C]
	0x036DF9C8 RET
	0x036DF9CC STR X30, [X31 - 0x20]!
	0x036DF9D0 STP X20, X19, [X31 + 0x10]
	0x036DF9D4 ADRP X20, 0xD01000
	0x036DF9D8 ADRP X19, 0xA61000
	0x036DF9DC LDRB W8, [X20 + 0xAFB]
	0x036DF9E0 LDR X19, [X19 + 0x590]
	0x036DF9E4 TBNZ X8, 0x0, 0x36DF9FC
	0x036DF9E8 ADRP X0, 0xA61000
	0x036DF9EC LDR X0, [X0 + 0x590]
	0x036DF9F0 BL 0x1C16CF4
	0x036DF9F4 MOVZ W8, 0x1
	0x036DF9F8 STRB W8, [X20 + 0xAFB]
	0x036DF9FC LDR X0, [X19]
	0x036DFA00 LDR W8, [X0 + 0xE0]
	0x036DFA04 CBNZ W8, 0x36DFA10
	0x036DFA08 BL 0x1C16DFC
	0x036DFA0C LDR X0, [X19]
	0x036DFA10 LDR X8, [X0 + 0xB8]
	0x036DFA14 LDP X20, X19, [X31 + 0x10]
	0x036DFA18 LDR X0, [X8]
	0x036DFA1C LDR X30, [X31], #0x20
	0x036DFA20 RET
	0x036DFA24 SUB X31, X31, 0xA0
	0x036DFA28 STR X30, [X31 + 0x80]
	0x036DFA2C STP X20, X19, [X31 + 0x90]
	0x036DFA30 MOVI V0.2D, 0x0
	0x036DFA34 STP V0, V0, [X31 + 0x60]
	0x036DFA38 STP V0, V0, [X31 + 0x40]
	0x036DFA3C MOV X20, X0
	0x036DFA40 LDR W0, [X0 + 0x20]
	0x036DFA44 MOV X19, X8
	0x036DFA48 ADD X8, X31, 0x0
	0x036DFA4C MOV X1, X31
	0x036DFA50 BL 0x3BE250C
	0x036DFA54 LDP V0, V1, [X31]
	0x036DFA58 LDP V2, V3, [X31 + 0x20]
	0x036DFA5C ADD X0, X31, 0x40
	0x036DFA60 MOV X1, X31
	0x036DFA64 STP V0, V1, [X31 + 0x40]
	0x036DFA68 STP V2, V3, [X31 + 0x60]
	0x036DFA6C BL 0x3BE1000
	0x036DFA70 ADDS W31, W0, 0x1
	0x036DFA74 B.EQ 0x36DFA90
	0x036DFA78 ADD X0, X31, 0x40
	0x036DFA7C MOV X1, X31
	0x036DFA80 BL 0x3BE2AFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD02000
	009 Move X22, 0xA62000
	010 Move W8, [X20+2794]
	011 Move X22, [X22+1216]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xA62000
	018 Move X0, [X0+1224]
	019 Call 0x1C17CF4
	020 Move X0, 0xA62000
	021 Move X0, [X0+1232]
	022 Call 0x1C17CF4
	023 Move X0, 0xA62000
	024 Move X0, [X0+1240]
	025 Call 0x1C17CF4
	026 Move X0, 0xA62000
	027 Move X0, [X0+1216]
	028 Call 0x1C17CF4
	029 Move X0, 0xA62000
	030 Move X0, [X0+1248]
	031 Call 0x1C17CF4
	032 Move X0, 0xA62000
	033 Move X0, [X0+1256]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2794], W8
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X22]
	043 Move X8, [X0+184]
	044 Move X8, [X8]
	045 Compare X8, 0
	046 JumpIfEqual {132}
	047 Move W8, [X8+24]
	048 Compare W8, 0
	049 JumpIfNotEqual {85}
	050 Move X23, 0xA62000
	051 Move X23, [X23+1248]
	052 Move X24, 0xA62000
	053 Move X8, [X23]
	054 Move X8, [X8+184]
	055 Move X24, [X24+1256]
	056 Move X20, [X8]
	057 Move X0, [X24]
	058 Call 0x1C17F10
	059 Move X8, 0xA62000
	060 Move X8, [X8+1240]
	061 Move X1, X31
	062 Move X3, X31
	063 Move X21, X0
	064 Move X2, [X8]
	065 Call OnNavMeshPreUpdate..ctor, X0, X1, X2
	066 Move X0, X20
	067 Move X1, X21
	068 Move X2, X31
	069 Call Delegate.Combine, X0, X1
	070 Compare X0, 0
	071 JumpIfEqual {82}
	072 Move X1, [X24]
	073 Move X8, [X0]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move [X8], X0
	078 Move X1, [X24]
	079 Move X8, [X0]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Call 0x1C181E0
	082 Move X8, [X23]
	083 Move X8, [X8+184]
	084 Move [X8], X0
	085 Move X0, [X22]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X22]
	091 Move X8, [X0+184]
	092 Move X0, [X8]
	093 Compare X0, 0
	094 JumpIfEqual {132}
	095 Move X9, 0xA62000
	096 Move X9, [X9+1224]
	097 Move W10, [X0+28]
	098 Move X8, [X0+16]
	099 Move X9, [X9]
	100 Add W10, W10, 1
	101 Move [X0+28], W10
	102 Compare X8, 0
	103 JumpIfEqual {132}
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Move W11, [X8+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add W9, W10, 1
	108 Add X8, X8, X10
	109 Move [X0+24], W9
	110 Move [X8+32], X19
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X30, [X31+64]
	118 Return 
	119 Move X8, [X9+32]
	120 Move X1, X19
	121 Move X20, [X31+48]
	122 Move X19, [X31+56]
	123 Move X22, [X31+32]
	124 Move X21, [X31+40]
	125 Move X8, [X8+192]
	126 Move X24, [X31+16]
	127 Move X23, [X31+24]
	128 Move X2, [X8+112]
	129 Move X30, [X31+64]
	130 Call List`1<Object>.AddWithResize, X0, X1
	131 Return 
	132 Call 0x1C17F20

Method: System.Void RemoveTracking(Unity.AI.Navigation.NavMeshLink link)

Disassembly:
	0x036DFAE4 STP X30, X21, [X31 - 0x20]!
	0x036DFAE8 STP X20, X19, [X31 + 0x10]
	0x036DFAEC ADRP X20, 0xD01000
	0x036DFAF0 ADRP X21, 0xA61000
	0x036DFAF4 LDRB W8, [X20 + 0xAFC]
	0x036DFAF8 LDR X21, [X21 + 0x590]
	0x036DFAFC MOV X19, X0
	0x036DFB00 TBNZ X8, 0x0, 0x36DFB18
	0x036DFB04 ADRP X0, 0xA61000
	0x036DFB08 LDR X0, [X0 + 0x590]
	0x036DFB0C BL 0x1C16CF4
	0x036DFB10 MOVZ W8, 0x1
	0x036DFB14 STRB W8, [X20 + 0xAFC]
	0x036DFB18 LDR X0, [X21]
	0x036DFB1C LDR W8, [X0 + 0xE0]
	0x036DFB20 CBNZ W8, 0x36DFB28
	0x036DFB24 BL 0x1C16DFC
	0x036DFB28 MOV X0, X19
	0x036DFB2C BL 0x36DFB40
	0x036DFB30 MOV X0, X19
	0x036DFB34 LDP X20, X19, [X31 + 0x10]
	0x036DFB38 LDP X30, X21, [X31], #0x20
	0x036DFB3C B 0x36DFD50
	0x036DFB40 STR X30, [X31 - 0x40]!
	0x036DFB44 STP X24, X23, [X31 + 0x10]
	0x036DFB48 STP X22, X21, [X31 + 0x20]
	0x036DFB4C STP X20, X19, [X31 + 0x30]
	0x036DFB50 ADRP X20, 0xD01000
	0x036DFB54 ADRP X22, 0xA61000
	0x036DFB58 LDRB W8, [X20 + 0xB02]
	0x036DFB5C LDR X22, [X22 + 0x590]
	0x036DFB60 MOV X19, X0
	0x036DFB64 TBNZ X8, 0x0, 0x36DFBC4
	0x036DFB68 ADRP X0, 0xA61000
	0x036DFB6C LDR X0, [X0 + 0x598]
	0x036DFB70 BL 0x1C16CF4
	0x036DFB74 ADRP X0, 0xA61000
	0x036DFB78 LDR X0, [X0 + 0x5A0]
	0x036DFB7C BL 0x1C16CF4
	0x036DFB80 ADRP X0, 0xA61000
	0x036DFB84 LDR X0, [X0 + 0x5A8]
	0x036DFB88 BL 0x1C16CF4
	0x036DFB8C ADRP X0, 0xA61000
	0x036DFB90 LDR X0, [X0 + 0x5B0]
	0x036DFB94 BL 0x1C16CF4
	0x036DFB98 ADRP X0, 0xA61000
	0x036DFB9C LDR X0, [X0 + 0x590]
	0x036DFBA0 BL 0x1C16CF4
	0x036DFBA4 ADRP X0, 0xA61000
	0x036DFBA8 LDR X0, [X0 + 0x4E0]
	0x036DFBAC BL 0x1C16CF4
	0x036DFBB0 ADRP X0, 0xA61000
	0x036DFBB4 LDR X0, [X0 + 0x4E8]
	0x036DFBB8 BL 0x1C16CF4
	0x036DFBBC MOVZ W8, 0x1
	0x036DFBC0 STRB W8, [X20 + 0xB02]
	0x036DFBC4 LDR X0, [X22]
	0x036DFBC8 LDR W8, [X0 + 0xE0]
	0x036DFBCC CBNZ W8, 0x36DFBD8
	0x036DFBD0 BL 0x1C16DFC
	0x036DFBD4 LDR X0, [X22]
	0x036DFBD8 LDR X8, [X0 + 0xB8]
	0x036DFBDC LDR X8, [X8]
	0x036DFBE0 CBZ X8, 0x36DFD4C
	0x036DFBE4 LDR W8, [X8 + 0x18]
	0x036DFBE8 CBNZ W8, 0x36DFC7C
	0x036DFBEC ADRP X23, 0xA61000
	0x036DFBF0 LDR X23, [X23 + 0x4E0]
	0x036DFBF4 ADRP X24, 0xA61000
	0x036DFBF8 LDR X8, [X23]
	0x036DFBFC LDR X8, [X8 + 0xB8]
	0x036DFC00 LDR X24, [X24 + 0x4E8]
	0x036DFC04 LDR X20, [X8]
	0x036DFC08 LDR X0, [X24]
	0x036DFC0C BL 0x1C16F10
	0x036DFC10 ADRP X8, 0xA61000
	0x036DFC14 LDR X8, [X8 + 0x5B0]
	0x036DFC18 MOV X1, X31
	0x036DFC1C MOV X3, X31
	0x036DFC20 MOV X21, X0
	0x036DFC24 LDR X2, [X8]
	0x036DFC28 BL 0x3BE25BC
	0x036DFC2C MOV X0, X20
	0x036DFC30 MOV X1, X21
	0x036DFC34 MOV X2, X31
	0x036DFC38 BL 0x33C0DE4
	0x036DFC3C CBZ X0, 0x36DFC70
	0x036DFC40 LDR X1, [X24]
	0x036DFC44 LDR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD02000
	007 Move X20, 0xA62000
	008 Move W8, [X21+2795]
	009 Move X20, [X20+1216]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xA62000
	016 Move X0, [X0+1264]
	017 Call 0x1C17CF4
	018 Move X0, 0xA62000
	019 Move X0, [X0+1232]
	020 Call 0x1C17CF4
	021 Move X0, 0xA62000
	022 Move X0, [X0+1240]
	023 Call 0x1C17CF4
	024 Move X0, 0xA62000
	025 Move X0, [X0+1216]
	026 Call 0x1C17CF4
	027 Move X0, 0xA62000
	028 Move X0, [X0+1248]
	029 Call 0x1C17CF4
	030 Move X0, 0xA62000
	031 Move X0, [X0+1256]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2795], W8
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X0, [X8]
	043 Compare X0, 0
	044 JumpIfEqual {99}
	045 Move X8, 0xA62000
	046 Move X8, [X8+1264]
	047 Move X1, X19
	048 Move X2, [X8]
	049 Call List`1<Object>.Remove, X0, X1
	050 Move X8, [X20]
	051 Move X8, [X8+184]
	052 Move X8, [X8]
	053 Compare X8, 0
	054 JumpIfEqual {99}
	055 Move W8, [X8+24]
	056 Compare W8, 0
	057 JumpIfNotEqual {93}
	058 Move X21, 0xA62000
	059 Move X21, [X21+1248]
	060 Move X22, 0xA62000
	061 Move X8, [X21]
	062 Move X8, [X8+184]
	063 Move X22, [X22+1256]
	064 Move X19, [X8]
	065 Move X0, [X22]
	066 Call 0x1C17F10
	067 Move X8, 0xA62000
	068 Move X8, [X8+1240]
	069 Move X1, X31
	070 Move X3, X31
	071 Move X20, X0
	072 Move X2, [X8]
	073 Call OnNavMeshPreUpdate..ctor, X0, X1, X2
	074 Move X0, X19
	075 Move X1, X20
	076 Move X2, X31
	077 Call Delegate.Remove, X0, X1
	078 Compare X0, 0
	079 JumpIfEqual {90}
	080 Move X1, [X22]
	081 Move X8, [X0]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X21]
	084 Move X8, [X8+184]
	085 Move [X8], X0
	086 Move X1, [X22]
	087 Move X8, [X0]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Call 0x1C181E0
	090 Move X8, [X21]
	091 Move X8, [X8+184]
	092 Move [X8], X0
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Return 
	099 Call 0x1C17F20

Method: System.Void SetAutoUpdate(System.Boolean value)

Disassembly:
	0x036DF5BC CBZ X8, 0x36DF608
	0x036DF5C0 LDRSW X10, [X0 + 0x18]
	0x036DF5C4 LDR W11, [X8 + 0x18]
	0x036DF5C8 CMP W10, W11
	0x036DF5CC B.CS 0x36DF5EC
	0x036DF5D0 ADD W9, W10, 0x1
	0x036DF5D4 ADD X8, X8, X10, 0x3, LSL
	0x036DF5D8 STR W9, [X0 + 0x18]
	0x036DF5DC STR X19, [X8 + 0x20]
	0x036DF5E0 LDP X20, X19, [X31 + 0x10]
	0x036DF5E4 LDP X30, X21, [X31], #0x20
	0x036DF5E8 RET
	0x036DF5EC LDR X8, [X9 + 0x20]
	0x036DF5F0 MOV X1, X19
	0x036DF5F4 LDP X20, X19, [X31 + 0x10]
	0x036DF5F8 LDR X8, [X8 + 0xC0]
	0x036DF5FC LDR X2, [X8 + 0x70]
	0x036DF600 LDP X30, X21, [X31], #0x20
	0x036DF604 B 0x301BF90
	0x036DF608 BL 0x1C16F20
	0x036DF60C STP X30, X21, [X31 - 0x20]!
	0x036DF610 STP X20, X19, [X31 + 0x10]
	0x036DF614 ADRP X21, 0xD01000
	0x036DF618 ADRP X20, 0xA61000
	0x036DF61C LDRB W8, [X21 + 0xAF7]
	0x036DF620 LDR X20, [X20 + 0x560]
	0x036DF624 MOV X19, X0
	0x036DF628 TBNZ X8, 0x0, 0x36DF64C
	0x036DF62C ADRP X0, 0xA61000
	0x036DF630 LDR X0, [X0 + 0x578]
	0x036DF634 BL 0x1C16CF4
	0x036DF638 ADRP X0, 0xA61000
	0x036DF63C LDR X0, [X0 + 0x560]
	0x036DF640 BL 0x1C16CF4
	0x036DF644 MOVZ W8, 0x1
	0x036DF648 STRB W8, [X21 + 0xAF7]
	0x036DF64C LDR X0, [X20]
	0x036DF650 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD02000
	007 Move W8, [X22+2796]
	008 Move W20, W1
	009 Move X19, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA62000
	016 Move X0, [X0+1216]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2796], W8
	020 Move W8, [X19+69]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move X30, [X31+48]
	027 Return 
	028 Move X8, 0xA62000
	029 Move X8, [X8+1216]
	030 Move [X19+69], W21
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move TEMP, X20
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {48}
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Call NavMeshLink.AddTracking, X0
	047 Return 
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call NavMeshLink.RemoveTracking, X0
	054 Return 

Method: System.Void AddLink()

Disassembly:
	0x036DF700 LDR X0, [X20 + 0x40]
	0x036DF704 CBZ X0, 0x36DF740
	0x036DF708 ADRP X8, 0xA61000
	0x036DF70C LDR X8, [X8 + 0x548]
	0x036DF710 MOV W1, W19
	0x036DF714 LDR X2, [X8]
	0x036DF718 BL 0x2FDD464
	0x036DF71C ADDS W31, W0, 0x1
	0x036DF720 CSET W0, NE
	0x036DF724 B 0x36DF734
	0x036DF728 MOV W0, W31
	0x036DF72C B 0x36DF734
	0x036DF730 MOVZ W0, 0x1
	0x036DF734 LDP X20, X19, [X31 + 0x10]
	0x036DF738 LDP X30, X21, [X31], #0x20
	0x036DF73C RET
	0x036DF740 BL 0x1C16F20
	0x036DF744 STP X30, X21, [X31 - 0x20]!
	0x036DF748 STP X20, X19, [X31 + 0x10]
	0x036DF74C ADRP X21, 0xD01000
	0x036DF750 ADRP X20, 0xA15000
	0x036DF754 LDRB W8, [X21 + 0xAF9]
	0x036DF758 LDR X20, [X20 + 0xE58]
	0x036DF75C MOV X19, X0
	0x036DF760 TBNZ X8, 0x0, 0x36DF790
	0x036DF764 ADRP X0, 0xA15000
	0x036DF768 LDR X0, [X0 + 0xE58]
	0x036DF76C BL 0x1C16CF4
	0x036DF770 ADRP X0, 0xA3C000
	0x036DF774 LDR X0, [X0 + 0x798]
	0x036DF778 BL 0x1C16CF4
	0x036DF77C ADRP X0, 0xA15000
	0x036DF780 LDR X0, [X0 + 0xE30]
	0x036DF784 BL 0x1C16CF4
	0x036DF788 MOVZ W8, 0x1
	0x036DF78C STRB W8, [X21 + 0xAF9]
	0x036DF790 ADRP X8, 0xFFFFFFFFFD40C000
	0x036DF794 ADRP X9, 0xFFFFFFFFFD40E000
	0x036DF798 LDR V0, [X8 + 0xD9]
	0x036DF79C LDR V1, [X9 + 0x648]
	0x036DF7A0 MOVZ W1, 0x1
	0x036DF7A4 STR V0, [X19 + 0x2]
	0x036DF7A8 STR D1, [X19 + 0x30]
	0x036DF7AC LDR X0, [X20]
	0x036DF7B0 BL 0x1C16D6C
	0x036DF7B4 CBZ X0, 0x36DF80C
	0x036DF7B8 LDR W8, [X0 + 0x18]
	0x036DF7BC MOV X20, X0
	0x036DF7C0 CBZ W8, 0x36DF810
	0x036DF7C4 ADRP X8, 0xA15000
	0x036DF7C8 LDR X8, [X8 + 0xE30]
	0x036DF7CC MOVN W9, 0x0
	0x036DF7D0 STR W9, [X20 + 0x20]
	0x036DF7D4 ADRP X21, 0xA3C000
	0x036DF7D8 LDR X0, [X8]
	0x036DF7DC LDR X21, [X21 + 0x798]
	0x036DF7E0 BL 0x1C16F10
	0x036DF7E4 LDR X2, [X21]
	0x036DF7E8 MOV X1, X20
	0x036DF7EC MOV X21, X0
	0x036DF7F0 BL 0x2FDC030
	0x036DF7F4 STR X21, [X19 + 0x40]
	0x036DF7F8 MOV X0, X19
	0x036DF7FC LDP X20, X19, [X31 + 0x10]
	0x036DF800 MOV X1, X31
	0x036DF804 LDP X30, X21, [X31], #0x20
	0x036DF808 B 0x3C36C30
	0x036DF80C BL 0x1C16F20
	0x036DF810 BL 0x1C16F28
	0x036DF814 STR X30, [X31 - 0x30]!
	0x036DF818 STP X22, X21, [X31 + 0x10]
	0x036DF81C STP X20, X19, [X31 + 0x20]
	0x036DF820 ADRP X21, 0xD01000
	0x036DF824 ADRP X22, 0xA61000
	0x036DF828 ADRP X19, 0xA61000
	0x036DF82C ADRP X20, 0xA61000
	0x036DF830 LDRB W8, [X21 + 0xAFA]
	0x036DF834 LDR X22, [X22 + 0x580]
	0x036DF838 LDR X19, [X19 + 0x588]
	0x036DF83C LDR X20, [X20 + 0x560]
	0x036DF840 TBNZ X8, 0x0, 0x36DF870
	0x036DF844 ADRP X0, 0xA61000
	0x036DF848 LDR X0, [X0 + 0x588]
	0x036DF84C BL 0x1C16CF4
	0x036DF850 ADRP X0, 0xA61000
	0x036DF854 LDR X0, [X0 + 0x580]
	0x036DF858 BL 0x1C16CF4
	0x036DF85C ADRP X0, 0xA61000
	0x036DF860 LDR X0, [X0 + 0x560]
	0x036DF864 BL 0x1C16CF4
	0x036DF868 MOVZ W8, 0x1
	0x036DF86C STRB W8, [X21 + 0xAFA]
	0x036DF870 LDR X0, [X22]
	0x036DF874 BL 0x1C16F10
	0x036DF878 LDR X1, [X19]
	0x036DF87C MOV X19, X0
	0x036DF880 BL 0x301B7C4
	0x036DF884 LDR X8, [X20]
	0x036DF888 LDP X22, X21, [X31 + 0x10]
	0x036DF88C LDR X8, [X8 + 0xB8]
	0x036DF890 STR X19, [X8]
	0x036DF894 LDP X20, X19, [X31 + 0x20]
	0x036DF898 LDR X30, [X31], #0x30
	0x036DF89C RET
	0x036DF8A0 LDR W0, [X0 + 0x20]
	0x036DF8A4 RET
	0x036DF8A8 STR W1, [X0 + 0x20]
	0x036DF8AC RET
	0x036DF8B0 LDR W0, [X0 + 0x24]
	0x036DF8B4 RET

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], D10
	003 Move [X31+152], D9
	004 Move [X31+160], D8
	005 Move [X31+168], X30
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move [X31+124], V0
	010 Move [X31+96], V0
	011 Move [X31+104], V0
	012 Move S0, [X0+36]
	013 Move S1, [X0+40]
	014 Move V2, [X0+44]
	015 Move X19, X0
	016 Add X0, X31, 96
	017 Move X1, X31
	018 Call NavMeshLinkData.set_startPosition, X0, X1
	019 Move S0, [X19+48]
	020 Move S1, [X19+52]
	021 Move V2, [X19+56]
	022 Add X0, X31, 96
	023 Move X1, X31
	024 Call NavMeshLinkData.set_endPosition, X0, X1
	025 Move V0, [X19+60]
	026 Add X0, X31, 96
	027 Move X1, X31
	028 Call NavMeshLinkData.set_width, X0, V0
	029 Move V0, [X19+64]
	030 Add X0, X31, 96
	031 Move X1, X31
	032 NotImplemented "Instruction SCVTF not yet implemented."
	033 Call NavMeshLinkData.set_costModifier, X0, V0
	034 Move W1, [X19+68]
	035 Add X0, X31, 96
	036 Move X2, X31
	037 Call NavMeshLinkData.set_bidirectional, X0, X1
	038 Move W1, [X19+72]
	039 Add X0, X31, 96
	040 Move X2, X31
	041 Call NavMeshLinkData.set_area, X0, X1
	042 Move W1, [X19+32]
	043 Add X0, X31, 96
	044 Move X2, X31
	045 Call NavMeshLinkData.set_agentTypeID, X0, X1
	046 Move V0, [X31+96]
	047 Move V1, [X31+112]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X0, X19
	050 Move X1, X31
	051 Move [X31+48], V0
	052 Move [X31+56], V1
	053 Move [X31+76], V2
	054 Call Component.get_transform, X0
	055 Compare X0, 0
	056 JumpIfEqual {131}
	057 Move X1, X31
	058 Call Transform.get_position, X0
	059 Move X0, X19
	060 Move X1, X31
	061 Move V8, V0
	062 Move V9, V1
	063 Move V10, V2
	064 Call Component.get_transform, X0
	065 Compare X0, 0
	066 JumpIfEqual {131}
	067 Move X1, X31
	068 Call Transform.get_rotation, X0
	069 Move V4, V0
	070 Move V5, V1
	071 Move V6, V2
	072 Move V0, [X31+48]
	073 Move V1, [X31+64]
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Move V7, V3
	076 Add X0, X31, 0
	077 Move [X31], V0
	078 Move [X31+8], V1
	079 Move [X31+28], V2
	080 Move V0, V8
	081 Move V1, V9
	082 Move V2, V10
	083 Move V3, V4
	084 Move V4, V5
	085 Move V5, V6
	086 Move V6, V7
	087 Move X1, X31
	088 Call NavMesh.AddLink, X0, X1, X2
	089 Move X20, X19
	090 Move [X20+76], W0
	091 Move X0, X20
	092 Move X1, X31
	093 Call NavMeshLinkInstance.get_valid, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {102}
	098 Move X0, X20
	099 Move X1, X19
	100 Move X2, X31
	101 Call NavMeshLinkInstance.set_owner, X0, X1
	102 Move X0, X19
	103 Move X1, X31
	104 Call Component.get_transform, X0
	105 Compare X0, 0
	106 JumpIfEqual {131}
	107 Move X1, X31
	108 Call Transform.get_position, X0
	109 Move X0, X19
	110 Move X1, X31
	111 Move [X19+80], S0
	112 Move [X19+88], S1
	113 Move [X19+88], S2
	114 Call Component.get_transform, X0
	115 Compare X0, 0
	116 JumpIfEqual {131}
	117 Move X1, X31
	118 Call Transform.get_rotation, X0
	119 Move [X19+92], S0
	120 Move [X19+100], S1
	121 Move [X19+100], S2
	122 Move [X19+108], S3
	123 Move X20, [X31+176]
	124 Move X19, [X31+184]
	125 Move X30, [X31+168]
	126 Move D9, [X31+152]
	127 Move D8, [X31+160]
	128 Move V10, [X31+144]
	129 Add X31, X31, 192
	130 Return 
	131 Call 0x1C17F20

Method: System.Boolean HasTransformChanged()

Disassembly:
	0x036DFC48 CMP X8, X1
	0x036DFC4C B.NE 0x36DFC6C
	0x036DFC50 LDR X8, [X23]
	0x036DFC54 LDR X8, [X8 + 0xB8]
	0x036DFC58 STR X0, [X8]
	0x036DFC5C LDR X1, [X24]
	0x036DFC60 LDR X8, [X0]
	0x036DFC64 CMP X8, X1
	0x036DFC68 B.EQ 0x36DFC7C
	0x036DFC6C BL 0x1C171E0
	0x036DFC70 LDR X8, [X23]
	0x036DFC74 LDR X8, [X8 + 0xB8]
	0x036DFC78 STR X0, [X8]
	0x036DFC7C LDR X0, [X22]
	0x036DFC80 LDR W8, [X0 + 0xE0]
	0x036DFC84 CBNZ W8, 0x36DFC90
	0x036DFC88 BL 0x1C16DFC
	0x036DFC8C LDR X0, [X22]
	0x036DFC90 LDR X8, [X0 + 0xB8]
	0x036DFC94 LDR X0, [X8]
	0x036DFC98 CBZ X0, 0x36DFD4C
	0x036DFC9C ADRP X8, 0xA61000
	0x036DFCA0 LDR X8, [X8 + 0x5A0]
	0x036DFCA4 MOV X1, X19
	0x036DFCA8 LDR X2, [X8]
	0x036DFCAC BL 0x301C318
	0x036DFCB0 TBNZ X0, 0x0, 0x36DFD14
	0x036DFCB4 LDR X0, [X22]
	0x036DFCB8 LDR W8, [X0 + 0xE0]
	0x036DFCBC CBNZ W8, 0x36DFCC8
	0x036DFCC0 BL 0x1C16DFC
	0x036DFCC4 LDR X0, [X22]
	0x036DFCC8 LDR X8, [X0 + 0xB8]
	0x036DFCCC LDR X0, [X8]
	0x036DFCD0 CBZ X0, 0x36DFD4C
	0x036DFCD4 ADRP X9, 0xA61000
	0x036DFCD8 LDR X9, [X9 + 0x598]
	0x036DFCDC LDR W10, [X0 + 0x1C]
	0x036DFCE0 LDR X8, [X0 + 0x10]
	0x036DFCE4 LDR X9, [X9]
	0x036DFCE8 ADD W10, W10, 0x1
	0x036DFCEC STR W10, [X0 + 0x1C]
	0x036DFCF0 CBZ X8, 0x36DFD4C
	0x036DFCF4 LDRSW X10, [X0 + 0x18]
	0x036DFCF8 LDR W11, [X8 + 0x18]
	0x036DFCFC CMP W10, W11
	0x036DFD00 B.CS 0x36DFD28
	0x036DFD04 ADD W9, W10, 0x1
	0x036DFD08 ADD X8, X8, X10, 0x3, LSL

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move S8, [X0+80]
	008 Move S9, [X0+84]
	009 Move V10, [X0+88]
	010 Move X1, X31
	011 Move X19, X0
	012 Call Component.get_transform, X0
	013 Compare X0, 0
	014 JumpIfEqual {58}
	015 Move X1, X31
	016 Call Transform.get_position, X0
	017 Move X8, -46092288
	018 Subtract S0, S8, S0
	019 Subtract S1, S9, S1
	020 Move V3, [X8+3872]
	021 Subtract S2, S10, S2
	022 Multiply S0, S0, S0
	023 Multiply S1, S1, S1
	024 Add S0, S0, S1
	025 Multiply S1, S2, S2
	026 Add S0, S1, S0
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move W0, 1
	029 Move S10, [X19+92]
	030 Move S11, [X19+96]
	031 Move S9, [X19+100]
	032 Move S8, [X19+104]
	033 Move X0, X19
	034 Move X1, X31
	035 Call Component.get_transform, X0
	036 Compare X0, 0
	037 JumpIfEqual {58}
	038 Move X1, X31
	039 Call Transform.get_rotation, X0
	040 Multiply S0, S10, S0
	041 Multiply S1, S11, S1
	042 Move X8, -46088192
	043 Add S0, S0, S1
	044 Move V1, [X8+436]
	045 Multiply S2, S9, S2
	046 Add S0, S2, S0
	047 Multiply S2, S8, S3
	048 Add S0, S2, S0
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move X30, [X31+32]
	052 Move X19, [X31+40]
	053 Move D9, [X31+16]
	054 Move D8, [X31+24]
	055 Move D11, [X31+48]
	056 Move D10, [X31+56]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void OnDidApplyAnimationProperties()

Disassembly:
	0x036DFD0C STR W9, [X0 + 0x18]
	0x036DFD10 STR X19, [X8 + 0x20]
	0x036DFD14 LDP X20, X19, [X31 + 0x30]
	0x036DFD18 LDP X22, X21, [X31 + 0x20]
	0x036DFD1C LDP X24, X23, [X31 + 0x10]
	0x036DFD20 LDR X30, [X31], #0x40
	0x036DFD24 RET
	0x036DFD28 LDR X8, [X9 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 76
	005 Move X1, X31
	006 Call NavMeshLinkInstance.Remove, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call NavMeshLink.AddLink, X0
	011 Return 

Method: System.Void UpdateTrackedInstances()

Disassembly:
	0x036DFD2C MOV X1, X19
	0x036DFD30 LDP X20, X19, [X31 + 0x30]
	0x036DFD34 LDP X22, X21, [X31 + 0x20]
	0x036DFD38 LDR X8, [X8 + 0xC0]
	0x036DFD3C LDP X24, X23, [X31 + 0x10]
	0x036DFD40 LDR X2, [X8 + 0x70]
	0x036DFD44 LDR X30, [X31], #0x40
	0x036DFD48 B 0x301BF90
	0x036DFD4C BL 0x1C16F20
	0x036DFD50 STR D10, [X31 - 0x40]!
	0x036DFD54 STP D9, D8, [X31 + 0x10]
	0x036DFD58 STP X30, X21, [X31 + 0x20]
	0x036DFD5C STP X20, X19, [X31 + 0x30]
	0x036DFD60 ADRP X20, 0xD01000
	0x036DFD64 LDRB W8, [X20 + 0xAFE]
	0x036DFD68 MOV X19, X0
	0x036DFD6C TBNZ X8, 0x0, 0x36DFD84
	0x036DFD70 ADRP X0, 0xA14000
	0x036DFD74 LDR X0, [X0 + 0x598]
	0x036DFD78 BL 0x1C16CF4
	0x036DFD7C MOVZ W8, 0x1
	0x036DFD80 STRB W8, [X20 + 0xAFE]
	0x036DFD84 ADD X20, X19, 0x6C
	0x036DFD88 MOV X0, X20
	0x036DFD8C MOV X1, X31
	0x036DFD90 BL 0x3BE1C1C
	0x036DFD94 TBNZ X0, 0x0, 0x36DFE94
	0x036DFD98 ADRP X8, 0xA14000
	0x036DFD9C LDR X8, [X8 + 0x598]
	0x036DFDA0 LDR X21, [X19 + 0x60]
	0x036DFDA4 LDR X0, [X8]
	0x036DFDA8 LDR W8, [X0 + 0xE0]
	0x036DFDAC CBNZ W8, 0x36DFDB4
	0x036DFDB0 BL 0x1C16DFC
	0x036DFDB4 MOV X0, X21
	0x036DFDB8 MOV X1, X31
	0x036DFDBC MOV X2, X31
	0x036DFDC0 BL 0x3C354F8
	0x036DFDC4 TBZ X0, 0x0, 0x36DFE54
	0x036DFDC8 LDR X21, [X19 + 0x60]
	0x036DFDCC MOV X0, X19
	0x036DFDD0 MOV X1, X31
	0x036DFDD4 BL 0x3C32E90
	0x036DFDD8 CBZ X0, 0x36DFEA8
	0x036DFDDC MOV X1, X31
	0x036DFDE0 BL 0x3C3F58C
	0x036DFDE4 MOV X0, X19
	0x036DFDE8 MOV X1, X31
	0x036DFDEC MOV V8.16B, V0.16B
	0x036DFDF0 MOV V9.16B, V1.16B
	0x036DFDF4 MOV V10.16B, V2.16B
	0x036DFDF8 BL 0x3C32E90
	0x036DFDFC CBZ X0, 0x36DFEA8
	0x036DFE00 MOV X1, X31
	0x036DFE04 BL 0x3C3DEB4
	0x036DFE08 MOV V4.16B, V0.16B
	0x036DFE0C MOV V5.16B, V1.16B
	0x036DFE10 MOV V6.16B, V2.16B
	0x036DFE14 MOV V7.16B, V3.16B
	0x036DFE18 MOV X0, X21
	0x036DFE1C MOV V0.16B, V8.16B
	0x036DFE20 MOV V1.16B, V9.16B
	0x036DFE24 MOV V2.16B, V10.16B
	0x036DFE28 MOV V3.16B, V4.16B
	0x036DFE2C MOV V4.16B, V5.16B
	0x036DFE30 MOV V5.16B, V6.16B
	0x036DFE34 MOV V6.16B, V7.16B
	0x036DFE38 MOV X1, X31
	0x036DFE3C BL 0x3BE2264
	0x036DFE40 STR W0, [X19 + 0x6C]
	0x036DFE44 MOV X0, X20
	0x036DFE48 MOV X1, X19
	0x036DFE4C MOV X2, X31
	0x036DFE50 BL 0x3BE1D30
	0x036DFE54 MOV X0, X19
	0x036DFE58 MOV X1, X31
	0x036DFE5C BL 0x3C32E90
	0x036DFE60 CBZ X0, 0x36DFEA8
	0x036DFE64 MOV X1, X31
	0x036DFE68 BL 0x3C3F58C
	0x036DFE6C MOV X0, X19
	0x036DFE70 MOV X1, X31
	0x036DFE74 STP S0, S1, [X19 + 0x70]
	0x036DFE78 STR S2, [X19 + 0x78]
	0x036DFE7C BL 0x3C32E90
	0x036DFE80 CBZ X0, 0x36DFEA8
	0x036DFE84 MOV X1, X31
	0x036DFE88 BL 0x3C3DEB4
	0x036DFE8C STP S0, S1, [X19 + 0x7C]
	0x036DFE90 STP S2, S3, [X19 + 0x84]
	0x036DFE94 LDP X20, X19, [X31 + 0x30]
	0x036DFE98 LDP X30, X21, [X31 + 0x20]
	0x036DFE9C LDP D9, D8, [X31 + 0x10]
	0x036DFEA0 LDR V10, [X31], #0x40
	0x036DFEA4 RET
	0x036DFEA8 BL 0x1C16F20
	0x036DFEAC STP X30, X21, [X31 - 0x20]!
	0x036DFEB0 STP X20, X19, [X31 + 0x10]
	0x036DFEB4 ADRP X21, 0xD01000
	0x036DFEB8 ADRP X20, 0xA61000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xD02000
	007 Move X19, 0xA62000
	008 Move W8, [X20+2797]
	009 Move X19, [X19+1216]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xA62000
	015 Move X0, [X0+1272]
	016 Call 0x1C17CF4
	017 Move X0, 0xA62000
	018 Move X0, [X0+1280]
	019 Call 0x1C17CF4
	020 Move X0, 0xA62000
	021 Move X0, [X0+1288]
	022 Call 0x1C17CF4
	023 Move X0, 0xA62000
	024 Move X0, [X0+1296]
	025 Call 0x1C17CF4
	026 Move X0, 0xA62000
	027 Move X0, [X0+1216]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2797], W8
	031 Move X0, [X19]
	032 Move [X31+8], X31
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X8]
	042 Compare X0, 0
	043 JumpIfEqual {84}
	044 Move X8, 0xA62000
	045 Move X8, [X8+1296]
	046 Move X21, 0xA62000
	047 Move X20, 0xA62000
	048 Move X1, [X8]
	049 Move X21, [X21+1280]
	050 Move X20, [X20+1272]
	051 Add X8, X31, 8
	052 Call List`1<Object>.GetEnumerator, X0
	053 Move X1, [X21]
	054 Add X0, X31, 8
	055 Call Enumerator<Object>.MoveNext, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {74}
	060 Move X19, [X31+24]
	061 Compare X19, 0
	062 JumpIfEqual {83}
	063 Move X0, X19
	064 Call NavMeshLink.HasTransformChanged, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {53}
	069 Add X0, X19, 76
	070 Move X1, X31
	071 Call NavMeshLinkInstance.Remove, X0
	072 Move X0, X19
	073 Call NavMeshLink.AddLink, X0
	074 Move X1, [X20]
	075 Add X0, X31, 8
	076 Call Enumerator<Object>.Dispose, X0
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Add X31, X31, 64
	082 Return 
	083 Call 0x1C17F20
	084 Call 0x1C17F20
	085 Move X19, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X19
	088 Call 0x3EB2AD0
	089 Move X20, [X0]
	090 Call 0x3EB2AE0
	091 Move X8, 0xA62000
	092 Move X8, [X8+1272]
	093 Add X0, X31, 8
	094 Move X1, [X8]
	095 Call Enumerator<Object>.Dispose, X0
	096 Compare X20, 0
	097 JumpIfEqual {77}
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Move X20, X31
	101 Move X19, X0
	102 Move X8, 0xA62000
	103 Move X8, [X8+1272]
	104 Move X1, [X8]
	105 Add X0, X31, 8
	106 Call Enumerator<Object>.Dispose, X0
	107 Compare X20, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X19
	110 Call 0x1D2D690
	111 Move X0, X20
	112 Call 0x1C17F18
	113 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x036DFEBC LDRB W8, [X21 + 0xAFD]
	0x036DFEC0 LDR X20, [X20 + 0x590]
	0x036DFEC4 MOV X19, X0
	0x036DFEC8 TBNZ X8, 0x0, 0x36DFEE0
	0x036DFECC ADRP X0, 0xA61000
	0x036DFED0 LDR X0, [X0 + 0x590]
	0x036DFED4 BL 0x1C16CF4
	0x036DFED8 MOVZ W8, 0x1
	0x036DFEDC STRB W8, [X21 + 0xAFD]
	0x036DFEE0 ADD X0, X19, 0x6C
	0x036DFEE4 MOV X1, X31
	0x036DFEE8 BL 0x3BE1CB8
	0x036DFEEC STR W31, [X19 + 0x6C]
	0x036DFEF0 LDR X0, [X20]
	0x036DFEF4 LDR W8, [X0 + 0xE0]
	0x036DFEF8 CBNZ W8, 0x36DFF00
	0x036DFEFC BL 0x1C16DFC
	0x036DFF00 MOV X0, X19
	0x036DFF04 LDP X20, X19, [X31 + 0x10]
	0x036DFF08 LDP X30, X21, [X31], #0x20
	0x036DFF0C B 0x36DFF30
	0x036DFF10 STP X30, X19, [X31 - 0x10]!
	0x036DFF14 MOV X19, X0
	0x036DFF18 ADD X0, X0, 0x6C
	0x036DFF1C MOV X1, X31
	0x036DFF20 BL 0x3BE1CB8
	0x036DFF24 STR W31, [X19 + 0x6C]
	0x036DFF28 LDP X30, X19, [X31], #0x10
	0x036DFF2C RET
	0x036DFF30 STR X30, [X31 - 0x30]!
	0x036DFF34 STP X22, X21, [X31 + 0x10]
	0x036DFF38 STP X20, X19, [X31 + 0x20]
	0x036DFF3C ADRP X21, 0xD01000
	0x036DFF40 ADRP X20, 0xA61000
	0x036DFF44 LDRB W8, [X21 + 0xB03]
	0x036DFF48 LDR X20, [X20 + 0x590]
	0x036DFF4C MOV X19, X0
	0x036DFF50 TBNZ X8, 0x0, 0x36DFFA4
	0x036DFF54 ADRP X0, 0xA61000
	0x036DFF58 LDR X0, [X0 + 0x5B8]
	0x036DFF5C BL 0x1C16CF4
	0x036DFF60 ADRP X0, 0xA61000
	0x036DFF64 LDR X0, [X0 + 0x5A8]
	0x036DFF68 BL 0x1C16CF4
	0x036DFF6C ADRP X0, 0xA61000
	0x036DFF70 LDR X0, [X0 + 0x5B0]
	0x036DFF74 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, -46080000
	006 Move X9, -46071808
	007 Move V0, [X8+33]
	008 Move V1, [X9+656]
	009 Move TEMP, 0
	010 Not TEMP
	011 Move W10, TEMP
	012 Move W20, 1
	013 Move [X0+64], W10
	014 Move [X0+68], W20
	015 Move [X0+36], V0
	016 Move [X0+52], D1
	017 Move X21, 0xCFA000
	018 Move W8, [X21+1923]
	019 Move X19, X0
	020 Compare W8, 0
	021 JumpIfNotEqual {26}
	022 Move X0, 0xA15000
	023 Move X0, [X0+1440]
	024 Call 0x1C17CF4
	025 Move [X21+1923], W20
	026 Move X8, 0xA15000
	027 Move X8, [X8+1440]
	028 Move X20, 0xCFA000
	029 Move X8, [X8]
	030 Move X8, [X8+184]
	031 Move V0, [X8]
	032 Move V1, [X8+8]
	033 Move [X19+80], D0
	034 Move [X19+88], S1
	035 Move W8, [X20+1939]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0xA16000
	039 Move X0, [X0+1448]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1939], W8
	043 Move X8, 0xA16000
	044 Move X8, [X8+1448]
	045 Move X0, X19
	046 Move X1, X31
	047 Move X8, [X8]
	048 Move X8, [X8+184]
	049 Move V0, [X8]
	050 Move [X19+92], V0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call MonoBehaviour..ctor, X0
	056 Return 

Method: System.Void .cctor()

Disassembly:
	0x036DFF78 ADRP X0, 0xA61000
	0x036DFF7C LDR X0, [X0 + 0x590]
	0x036DFF80 BL 0x1C16CF4
	0x036DFF84 ADRP X0, 0xA61000
	0x036DFF88 LDR X0, [X0 + 0x4E0]
	0x036DFF8C BL 0x1C16CF4
	0x036DFF90 ADRP X0, 0xA61000
	0x036DFF94 LDR X0, [X0 + 0x4E8]
	0x036DFF98 BL 0x1C16CF4
	0x036DFF9C MOVZ W8, 0x1
	0x036DFFA0 STRB W8, [X21 + 0xB03]
	0x036DFFA4 LDR X0, [X20]
	0x036DFFA8 LDR W8, [X0 + 0xE0]
	0x036DFFAC CBNZ W8, 0x36DFFB8
	0x036DFFB0 BL 0x1C16DFC
	0x036DFFB4 LDR X0, [X20]
	0x036DFFB8 LDR X8, [X0 + 0xB8]
	0x036DFFBC LDR X0, [X8]
	0x036DFFC0 CBZ X0, 0x36E0090
	0x036DFFC4 ADRP X8, 0xA61000
	0x036DFFC8 LDR X8, [X8 + 0x5B8]
	0x036DFFCC MOV X1, X19
	0x036DFFD0 LDR X2, [X8]
	0x036DFFD4 BL 0x301D7A8
	0x036DFFD8 LDR X8, [X20]
	0x036DFFDC LDR X8, [X8 + 0xB8]
	0x036DFFE0 LDR X8, [X8]
	0x036DFFE4 CBZ X8, 0x36E0090
	0x036DFFE8 LDR W8, [X8 + 0x18]
	0x036DFFEC CBNZ W8, 0x36E0080
	0x036DFFF0 ADRP X21, 0xA61000
	0x036DFFF4 LDR X21, [X21 + 0x4E0]
	0x036DFFF8 ADRP X22, 0xA61000
	0x036DFFFC LDR X8, [X21]
	0x036E0000 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD02000
	007 Move X22, 0xA62000
	008 Move X19, 0xA62000
	009 Move X20, 0xA62000
	010 Move W8, [X21+2798]
	011 Move X22, [X22+1304]
	012 Move X19, [X19+1312]
	013 Move X20, [X20+1216]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA62000
	019 Move X0, [X0+1312]
	020 Call 0x1C17CF4
	021 Move X0, 0xA62000
	022 Move X0, [X0+1304]
	023 Call 0x1C17CF4
	024 Move X0, 0xA62000
	025 Move X0, [X0+1216]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2798], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

