Type: SpatialSys.CommandLib.WaitForPromiseCommand`1

Method: System.Void .ctor(RSG.IPromise`1<T> promise, System.Boolean abortOnReject = False)

Disassembly:
	0x02850D40 MOV X2, X31
	0x02850D44 MOV X21, X0
	0x02850D48 LDR X8, [X8 + 0xC0]
	0x02850D4C LDR X3, [X8 + 0x50]
	0x02850D50 BL 0x25C9C54
	0x02850D54 ADD X0, X20, 0x18
	0x02850D58 MOV X1, X21
	0x02850D5C MOV X2, X31
	0x02850D60 BL 0x1C24138
	0x02850D64 CBZ X0, 0x2850D78
	0x02850D68 LDP X20, X19, [X31 + 0x10]
	0x02850D6C MOV W0, W31
	0x02850D70 LDP X30, X21, [X31], #0x20
	0x02850D74 RET
	0x02850D78 LDR X0, [X20 + 0x10]
	0x02850D7C CBZ X0, 0x2850D9C
	0x02850D80 LDR X8, [X19 + 0x20]
	0x02850D84 LDP X20, X19, [X31 + 0x10]
	0x02850D88 MOV X1, X21
	0x02850D8C LDR X8, [X8 + 0xC0]
	0x02850D90 LDR X2, [X8 + 0x48]
	0x02850D94 LDP X30, X21, [X31], #0x20
	0x02850D98 B 0x267B1FC
	0x02850D9C BL 0x1C16F20
	0x02850DA0 STR X30, [X31 - 0x30]!
	0x02850DA4 STP X22, X21, [X31 + 0x10]
	0x02850DA8 STP X20, X19, [X31 + 0x20]
	0x02850DAC ADRP X21, 0x1B8A000
	0x02850DB0 ADRP X22, 0x18AB000
	0x02850DB4 LDRB W8, [X21 + 0xAF3]
	0x02850DB8 LDR X22, [X22 + 0x8A8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1B8B000
	009 Move X23, 0x18CF000
	010 Move W8, [X24+2797]
	011 Move X23, [X23+96]
	012 Move X22, X3
	013 Move W20, W2
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x18CF000
	021 Move X0, [X0+96]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2797], W8
	025 Move X8, [X22+32]
	026 Move X1, [X23]
	027 And W3, W20, 1
	028 Move X0, X21
	029 Move X8, [X8+192]
	030 Move X2, X19
	031 Move X20, [X31+48]
	032 Move X19, [X31+56]
	033 Move X22, [X31+32]
	034 Move X21, [X31+40]
	035 Move X4, [X8+8]
	036 Move X24, [X31+16]
	037 Move X23, [X31+24]
	038 Move X5, [X4]
	039 Move X30, [X31+64]
	040 CallNoReturn X5

Method: System.Void .ctor(System.String identifier, RSG.IPromise`1<T> promise, System.Boolean abortOnReject = False)

Disassembly:
	0x02850DBC MOV X20, X1
	0x02850DC0 MOV X19, X0
	0x02850DC4 TBNZ X8, 0x0, 0x2850DDC
	0x02850DC8 ADRP X0, 0x18AB000
	0x02850DCC LDR X0, [X0 + 0x8A8]
	0x02850DD0 BL 0x1C16CF4
	0x02850DD4 MOVZ W8, 0x1
	0x02850DD8 STRB W8, [X21 + 0xAF3]
	0x02850DDC LDR X0, [X22]
	0x02850DE0 BL 0x1C16F10
	0x02850DE4 MOV X1, X31
	0x02850DE8 MOV X21, X0
	0x02850DEC BL 0x338C880
	0x02850DF0 LDR X8, [X20 + 0x20]
	0x02850DF4 MOV X0, X19
	0x02850DF8 MOV X1, X21
	0x02850DFC LDP X20, X19, [X31 + 0x20]
	0x02850E00 LDR X8, [X8 + 0xC0]
	0x02850E04 LDP X22, X21, [X31 + 0x10]
	0x02850E08 LDR X2, [X8 + 0x60]
	0x02850E0C LDR X30, [X31], #0x30
	0x02850E10 B 0x2850E14
	0x02850E14 STR X30, [X31 - 0x30]!
	0x02850E18 STP X22, X21, [X31 + 0x10]
	0x02850E1C STP X20, X19, [X31 + 0x20]
	0x02850E20 MOV X20, X0
	0x02850E24 MOV X0, X1
	0x02850E28 MOV X1, X31
	0x02850E2C MOV X19, X2
	0x02850E30 BL 0x32C2380
	0x02850E34 LDR X8, [X19 + 0x20]
	0x02850E38 MOV X22, X0
	0x02850E3C LDR X8, [X8 + 0xC0]
	0x02850E40 LDR X8, [X8 + 0x18]
	0x02850E44 LDRB W9, [X8 + 0x135]
	0x02850E48 TBNZ X9, 0x0, 0x2850E58
	0x02850E4C MOV X0, X8
	0x02850E50 BL 0x1C5C684
	0x02850E54 MOV X8, X0
	0x02850E58 MOV X0, X8
	0x02850E5C BL 0x1C16F10
	0x02850E60 LDR X8, [X19 + 0x20]
	0x02850E64 MOVZ W1, 0x2
	0x02850E68 MOV X2, X22
	0x02850E6C MOV X21, X0
	0x02850E70 LDR X8, [X8 + 0xC0]
	0x02850E74 LDR X3, [X8 + 0x50]
	0x02850E78 BL 0x25C9C54
	0x02850E7C ADD X0, X20, 0x18
	0x02850E80 MOV X1, X21
	0x02850E84 MOV X2, X31
	0x02850E88 BL 0x1C24138
	0x02850E8C CBZ X0, 0x2850EA4
	0x02850E90 LDP X20, X19, [X31 + 0x20]
	0x02850E94 LDP X22, X21, [X31 + 0x10]
	0x02850E98 MOV W0, W31
	0x02850E9C LDR X30, [X31], #0x30
	0x02850EA0 RET
	0x02850EA4 LDR X0, [X20 + 0x10]
	0x02850EA8 CBZ X0, 0x2850ECC
	0x02850EAC LDR X8, [X19 + 0x20]
	0x02850EB0 MOV X1, X21
	0x02850EB4 LDP X20, X19, [X31 + 0x20]
	0x02850EB8 LDP X22, X21, [X31 + 0x10]
	0x02850EBC LDR X8, [X8 + 0xC0]
	0x02850EC0 LDR X2, [X8 + 0x48]
	0x02850EC4 LDR X30, [X31], #0x30
	0x02850EC8 B 0x267B1FC
	0x02850ECC BL 0x1C16F20
	0x02850ED0 STR X30, [X31 - 0x30]!
	0x02850ED4 STP X22, X21, [X31 + 0x10]
	0x02850ED8 STP X20, X19, [X31 + 0x20]
	0x02850EDC MOV X20, X0
	0x02850EE0 MOV X0, X1
	0x02850EE4 MOV X1, X31
	0x02850EE8 MOV X19, X2
	0x02850EEC BL 0x32C2380
	0x02850EF0 LDR X8, [X19 + 0x20]
	0x02850EF4 MOV X22, X0
	0x02850EF8 LDR X8, [X8 + 0xC0]
	0x02850EFC LDR X8, [X8 + 0x18]
	0x02850F00 LDRB W9, [X8 + 0x135]
	0x02850F04 TBNZ X9, 0x0, 0x2850F14
	0x02850F08 MOV X0, X8
	0x02850F0C BL 0x1C5C684
	0x02850F10 MOV X8, X0
	0x02850F14 MOV X0, X8
	0x02850F18 BL 0x1C16F10
	0x02850F1C LDR X8, [X19 + 0x20]
	0x02850F20 MOVZ W1, 0x3
	0x02850F24 MOV X2, X22
	0x02850F28 MOV X21, X0
	0x02850F2C LDR X8, [X8 + 0xC0]
	0x02850F30 LDR X3, [X8 + 0x50]
	0x02850F34 BL 0x25C9C54
	0x02850F38 ADD X0, X20, 0x18
	0x02850F3C MOV X1, X21
	0x02850F40 MOV X2, X31
	0x02850F44 BL 0x1C24138
	0x02850F48 CBZ X0, 0x2850F60
	0x02850F4C LDP X20, X19, [X31 + 0x20]
	0x02850F50 LDP X22, X21, [X31 + 0x10]
	0x02850F54 MOV W0, W31
	0x02850F58 LDR X30, [X31], #0x30
	0x02850F5C RET
	0x02850F60 LDR X0, [X20 + 0x10]
	0x02850F64 CBZ X0, 0x2850F88
	0x02850F68 LDR X8, [X19 + 0x20]
	0x02850F6C MOV X1, X21
	0x02850F70 LDP X20, X19, [X31 + 0x20]
	0x02850F74 LDP X22, X21, [X31 + 0x10]
	0x02850F78 LDR X8, [X8 + 0xC0]
	0x02850F7C LDR X2, [X8 + 0x48]
	0x02850F80 LDR X30, [X31], #0x30
	0x02850F84 B 0x267B1FC
	0x02850F88 BL 0x1C16F20
	0x02850F8C STR X30, [X31 - 0x20]!
	0x02850F90 STP X20, X19, [X31 + 0x10]
	0x02850F94 LDR X8, [X0 + 0x10]
	0x02850F98 CBZ X8, 0x2851000
	0x02850F9C MOV X20, X0
	0x02850FA0 LDR X0, [X8 + 0x10]
	0x02850FA4 CBZ X0, 0x2851000
	0x02850FA8 MOV X19, X1
	0x02850FAC MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1B8B000
	010 Move X23, 0x18A5000
	011 Move W8, [X25+2798]
	012 Move X23, [X23+3696]
	013 Move X20, X4
	014 Move X19, X2
	015 Move X22, X1
	016 Move X21, X0
	017 And W24, W3, 1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x18A7000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0x18A5000
	026 Move X0, [X0+3696]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2798], W8
	030 Move W2, 1
	031 Move X0, X21
	032 Move X1, X22
	033 Move X3, X31
	034 Move W25, 1
	035 Call Command..ctor, X0, X1, X2
	036 Move [X21+80], W24
	037 Move [X21+16], W25
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move X8, [X20+32]
	041 Move X1, X21
	042 Move X3, X31
	043 Move X22, X0
	044 Move X8, [X8+192]
	045 Move X2, [X8+24]
	046 Call Action..ctor, X0, X1, X2
	047 Compare X19, 0
	048 JumpIfEqual {146}
	049 Move X8, [X20+32]
	050 Move X8, [X8+192]
	051 Move X1, [X8]
	052 Move W8, [X1+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 Move X0, X1
	058 Call 0x1C5D684
	059 Move X1, X0
	060 Move X8, [X19]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 21
	071 Move X0, X19
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 21
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X2, [X0+8]
	079 Move X0, X19
	080 Move X1, X22
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move W8, [X21+80]
	083 Compare W8, 0
	084 JumpIfEqual {120}
	085 Move X8, 0x18A7000
	086 Move X8, [X8+712]
	087 Move X0, [X8]
	088 Call 0x1C17F10
	089 Move X8, [X20+32]
	090 Move X1, X21
	091 Move X3, X31
	092 Move X22, X0
	093 Move X8, [X8+192]
	094 Move X2, [X8+40]
	095 Call Action`1<Object>..ctor, X0, X1, X2
	096 Move X8, [X20+32]
	097 Move X8, [X8+192]
	098 Move X1, [X8]
	099 Move W8, [X1+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {107}
	104 Move X0, X1
	105 Call 0x1C5D684
	106 Move X1, X0
	107 Move X8, [X19]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move W2, 5
	118 Move X0, X19
	119 Call 0x1C5D788
	120 Move X20, [X31+48]
	121 Move X19, [X31+56]
	122 Move X22, [X31+32]
	123 Move X21, [X31+40]
	124 Move X24, [X31+16]
	125 Move X23, [X31+24]
	126 Move X30, [X31+64]
	127 Move X25, [X31+72]
	128 Return 
	129 Move W9, [X10]
	130 Add W9, W9, 5
	131 Add X8, X8, W9
	132 Add X0, X8, 312
	133 Move X3, [X0]
	134 Move X2, [X0+8]
	135 Move X0, X19
	136 Move X1, X22
	137 Move X20, [X31+48]
	138 Move X19, [X31+56]
	139 Move X22, [X31+32]
	140 Move X21, [X31+40]
	141 Move X24, [X31+16]
	142 Move X23, [X31+24]
	143 Move X30, [X31+64]
	144 Move X25, [X31+72]
	145 CallNoReturn X3
	146 Call 0x1C17F20

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x02850FB0 BL 0x33ED11C
	0x02850FB4 TBZ X0, 0x0, 0x2850FF4
	0x02850FB8 LDR X8, [X20 + 0x10]
	0x02850FBC CBZ X8, 0x2851000
	0x02850FC0 LDR X0, [X8 + 0x10]
	0x02850FC4 CBZ X0, 0x2851000
	0x02850FC8 LDR X8, [X19 + 0x20]
	0x02850FCC LDR X8, [X8 + 0xC0]
	0x02850FD0 LDR X1, [X8 + 0x68]
	0x02850FD4 BL 0x269F34C
	0x02850FD8 CBZ X0, 0x2851000
	0x02850FDC LDR X0, [X0 + 0x18]
	0x02850FE0 CBZ X0, 0x2850FF4
	0x02850FE4 LDP X20, X19, [X31 + 0x10]
	0x02850FE8 MOV X1, X31
	0x02850FEC LDR X30, [X31], #0x20
	0x02850FF0 B 0x32C2440
	0x02850FF4 LDP X20, X19, [X31 + 0x10]
	0x02850FF8 LDR X30, [X31], #0x20
	0x02850FFC RET
	0x02851000 BL 0x1C16F20
	0x02851004 SUB X31, X31, 0x80
	0x02851008 STR X30, [X31 + 0x60]
	0x0285100C STP X20, X19, [X31 + 0x70]
	0x02851010 MOVI V0.2D, 0x0
	0x02851014 STP V0, V0, [X31 + 0x30]
	0x02851018 STR V0, [X31 + 0x2]
	0x0285101C STR X31, [X31 + 0x50]
	0x02851020 STR X0, [X31 + 0x40]
	0x02851024 LDR X8, [X1 + 0x20]
	0x02851028 MOV X19, X1
	0x0285102C LDR X8, [X8 + 0xC0]
	0x02851030 LDR X0, [X8 + 0x88]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+72]
	007 Compare X8, 0
	008 JumpIfNotEqual {16}
	009 Move W0, [X0+64]
	010 Move X20, [X31+32]
	011 Move X19, [X31+40]
	012 Move X22, [X31+16]
	013 Move X21, [X31+24]
	014 Move X30, [X31+48]
	015 Return X0
	016 Move X8, 0x18CF000
	017 Move X8, [X8+104]
	018 Move X19, X0
	019 Move X20, X1
	020 Move X0, X8
	021 Call 0x1C17D08
	022 Move X1, X19
	023 Move X2, X31
	024 Call String.Format, X0, X1
	025 Move X21, X0
	026 Move X0, 0x18A3000
	027 Move X19, [X19+72]
	028 Call 0x3EB2594
	029 Return X0
	030 Call 0x1C17D08
	031 Call 0x1C17F10
	032 Move X1, X21
	033 Move X2, X19
	034 Move X3, X31
	035 Move X22, X0
	036 Call Exception..ctor, X0, X1, X2
	037 Move X0, X22
	038 Move X1, X20
	039 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x02851034 LDRB W8, [X0 + 0x135]
	0x02851038 TBNZ X8, 0x0, 0x2851040
	0x0285103C BL 0x1C5C684
	0x02851040 LDR W8, [X0 + 0xE0]
	0x02851044 CBNZ W8, 0x285104C
	0x02851048 BL 0x1C16DFC
	0x0285104C LDR X8, [X19 + 0x20]
	0x02851050 LDR X8, [X8 + 0xC0]
	0x02851054 LDR X0, [X8 + 0x80]
	0x02851058 ADD X8, X31, 0x8
	0x0285105C BL 0x263221C
	0x02851060 LDUR V0, [X31 + 0x8]
	0x02851064 LDR X8, [X31 + 0x18]
	0x02851068 MOVN W9, 0x0
	0x0285106C STR W9, [X31 + 0x20]
	0x02851070 STUR V0, [X31 + 0x28]
	0x02851074 STR X8, [X31 + 0x38]
	0x02851078 LDR X8, [X19 + 0x20]
	0x0285107C ADD X1, X31, 0x20
	0x02851080 LDR X8, [X8 + 0xC0]
	0x02851084 LDR X2, [X8 + 0x98]
	0x02851088 ADD X8, X31, 0x20
	0x0285108C ORR X20, X8, 0xF
	0x02851090 MOV X0, X20
	0x02851094 BL 0x1FC7F6C
	0x02851098 LDR X8, [X19 + 0x20]
	0x0285109C MOV X0, X20
	0x028510A0 LDR X8, [X8 + 0xC0]
	0x028510A4 LDR X1, [X8 + 0xA8]
	0x028510A8 BL 0x2632230
	0x028510AC LDP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1B8A000
	006 Move W8, [X20+2799]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x18CE000
	013 Move X0, [X0+112]
	014 Call 0x1C17CF4
	015 Move X0, 0x18A3000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2799], W8
	020 Compare X19, 0
	021 JumpIfEqual {40}
	022 Move X20, 0x18CE000
	023 Move X21, 0x18A3000
	024 Move X20, [X20+112]
	025 Move X21, [X21+2120]
	026 Move X0, X19
	027 Move X1, X31
	028 Call Command.get_identifier, X0
	029 Move X8, [X20]
	030 Move X2, [X21]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X0
	034 Move X0, X8
	035 Move X3, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call String.Concat, X0, X1, X2
	039 Return X0
	040 Call 0x1C17F20

Method: System.Void <.ctor>b__5_0()

Disassembly:
	0x028510B0 LDR X30, [X31 + 0x60]
	0x028510B4 ADD X31, X31, 0x80
	0x028510B8 RET

ISIL:
	001 Move W8, 1
	002 Move [X0+64], W8
	003 Return 

Method: System.Void <.ctor>b__5_1(System.Exception exc)

Disassembly:
	0x028510BC STP X30, X21, [X31 - 0x20]!
	0x028510C0 STP X20, X19, [X31 + 0x10]
	0x028510C4 MOV W21, W1
	0x028510C8 MOV X1, X31
	0x028510CC MOV X20, X2

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X2, X31
	004 Call Command.Abort, X0, X1
	005 Return 
	006 Move [X31-16], X30
	007 Call 0x1C17F20

