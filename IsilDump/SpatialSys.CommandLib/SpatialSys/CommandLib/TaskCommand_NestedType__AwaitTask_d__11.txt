Type: SpatialSys.CommandLib.TaskCommand/<AwaitTask>d__11

Method: System.Void MoveNext()

Disassembly:
	0x035C1000 STP X20, X19, [X31 + 0x10]
	0x035C1004 ADRP X21, 0xE1F000
	0x035C1008 ADRP X20, 0xB32000
	0x035C100C LDRB W8, [X21 + 0x17E]
	0x035C1010 LDR X20, [X20 + 0x788]
	0x035C1014 MOV W19, W0
	0x035C1018 TBNZ X8, 0x0, 0x35C1030
	0x035C101C ADRP X0, 0xB32000
	0x035C1020 LDR X0, [X0 + 0x788]
	0x035C1024 BL 0x1C16CF4
	0x035C1028 MOVZ W8, 0x1
	0x035C102C STRB W8, [X21 + 0x17E]
	0x035C1030 LDR X0, [X20]
	0x035C1034 LDR W8, [X0 + 0xE0]
	0x035C1038 CBNZ W8, 0x35C1044
	0x035C103C BL 0x1C16DFC
	0x035C1040 LDR X0, [X20]
	0x035C1044 LDR X8, [X0 + 0xB8]
	0x035C1048 STR W19, [X8 + 0x8]
	0x035C104C LDP X20, X19, [X31 + 0x10]
	0x035C1050 LDP X30, X21, [X31], #0x20
	0x035C1054 RET
	0x035C1058 STR X30, [X31 - 0x20]!
	0x035C105C STP X20, X19, [X31 + 0x10]
	0x035C1060 ADRP X20, 0xE1F000
	0x035C1064 ADRP X19, 0xB32000
	0x035C1068 LDRB W8, [X20 + 0x17F]
	0x035C106C LDR X19, [X19 + 0x788]
	0x035C1070 TBNZ X8, 0x0, 0x35C1088
	0x035C1074 ADRP X0, 0xB32000
	0x035C1078 LDR X0, [X0 + 0x788]
	0x035C107C BL 0x1C16CF4
	0x035C1080 MOVZ W8, 0x1
	0x035C1084 STRB W8, [X20 + 0x17F]
	0x035C1088 LDR X0, [X19]
	0x035C108C LDR W8, [X0 + 0xE0]
	0x035C1090 CBNZ W8, 0x35C109C
	0x035C1094 BL 0x1C16DFC
	0x035C1098 LDR X0, [X19]
	0x035C109C LDR X8, [X0 + 0xB8]
	0x035C10A0 LDP X20, X19, [X31 + 0x10]
	0x035C10A4 LDR W0, [X8 + 0xC]
	0x035C10A8 LDR X30, [X31], #0x20
	0x035C10AC RET
	0x035C10B0 STP X30, X21, [X31 - 0x20]!
	0x035C10B4 STP X20, X19, [X31 + 0x10]
	0x035C10B8 ADRP X21, 0xE1F000
	0x035C10BC ADRP X20, 0xB32000
	0x035C10C0 LDRB W8, [X21 + 0x180]
	0x035C10C4 LDR X20, [X20 + 0x788]
	0x035C10C8 MOV W19, W0
	0x035C10CC TBNZ X8, 0x0, 0x35C10E4
	0x035C10D0 ADRP X0, 0xB32000
	0x035C10D4 LDR X0, [X0 + 0x788]
	0x035C10D8 BL 0x1C16CF4
	0x035C10DC MOVZ W8, 0x1
	0x035C10E0 STRB W8, [X21 + 0x180]
	0x035C10E4 LDR X0, [X20]
	0x035C10E8 LDR W8, [X0 + 0xE0]
	0x035C10EC CBNZ W8, 0x35C10F8
	0x035C10F0 BL 0x1C16DFC
	0x035C10F4 LDR X0, [X20]
	0x035C10F8 LDR X8, [X0 + 0xB8]
	0x035C10FC STR W19, [X8 + 0xC]
	0x035C1100 LDP X20, X19, [X31 + 0x10]
	0x035C1104 LDP X30, X21, [X31], #0x20
	0x035C1108 RET
	0x035C110C STR X30, [X31 - 0x20]!
	0x035C1110 STP X20, X19, [X31 + 0x10]
	0x035C1114 ADRP X20, 0xE1F000
	0x035C1118 ADRP X19, 0xB32000
	0x035C111C LDRB W8, [X20 + 0x181]
	0x035C1120 LDR X19, [X19 + 0x788]
	0x035C1124 TBNZ X8, 0x0, 0x35C113C
	0x035C1128 ADRP X0, 0xB32000
	0x035C112C LDR X0, [X0 + 0x788]
	0x035C1130 BL 0x1C16CF4
	0x035C1134 MOVZ W8, 0x1
	0x035C1138 STRB W8, [X20 + 0x181]
	0x035C113C LDR X0, [X19]
	0x035C1140 LDR W8, [X0 + 0xE0]
	0x035C1144 CBNZ W8, 0x35C1150
	0x035C1148 BL 0x1C16DFC
	0x035C114C LDR X0, [X19]
	0x035C1150 LDR X8, [X0 + 0xB8]
	0x035C1154 LDP X20, X19, [X31 + 0x10]
	0x035C1158 LDRB W0, [X8 + 0x10]
	0x035C115C LDR X30, [X31], #0x20
	0x035C1160 RET
	0x035C1164 STP X30, X21, [X31 - 0x20]!
	0x035C1168 STP X20, X19, [X31 + 0x10]
	0x035C116C ADRP X21, 0xE1F000
	0x035C1170 ADRP X20, 0xB32000
	0x035C1174 LDRB W8, [X21 + 0x182]
	0x035C1178 LDR X20, [X20 + 0x788]
	0x035C117C MOV W19, W0
	0x035C1180 TBNZ X8, 0x0, 0x35C1198
	0x035C1184 ADRP X0, 0xB32000
	0x035C1188 LDR X0, [X0 + 0x788]
	0x035C118C BL 0x1C16CF4
	0x035C1190 MOVZ W8, 0x1
	0x035C1194 STRB W8, [X21 + 0x182]
	0x035C1198 LDR X0, [X20]
	0x035C119C LDR W8, [X0 + 0xE0]
	0x035C11A0 CBNZ W8, 0x35C11AC
	0x035C11A4 BL 0x1C16DFC
	0x035C11A8 LDR X0, [X20]
	0x035C11AC LDR X8, [X0 + 0xB8]
	0x035C11B0 AND W9, W19, 0x1
	0x035C11B4 LDP X20, X19, [X31 + 0x10]
	0x035C11B8 STRB W9, [X8 + 0x10]
	0x035C11BC LDP X30, X21, [X31], #0x20
	0x035C11C0 RET
	0x035C11C4 STR X30, [X31 - 0x30]!
	0x035C11C8 STP X22, X21, [X31 + 0x10]
	0x035C11CC STP X20, X19, [X31 + 0x20]
	0x035C11D0 ADRP X19, 0xE1F000
	0x035C11D4 ADRP X20, 0xB32000
	0x035C11D8 LDRB W8, [X19 + 0x183]
	0x035C11DC LDR X20, [X20 + 0x788]
	0x035C11E0 TBNZ X8, 0x0, 0x35C1228
	0x035C11E4 ADRP X0, 0xB32000
	0x035C11E8 LDR X0, [X0 + 0x970]
	0x035C11EC BL 0x1C16CF4
	0x035C11F0 ADRP X0, 0xB76000
	0x035C11F4 LDR X0, [X0 + 0xCE8]
	0x035C11F8 BL 0x1C16CF4
	0x035C11FC ADRP X0, 0xB32000
	0x035C1200 LDR X0, [X0 + 0x788]
	0x035C1204 BL 0x1C16CF4
	0x035C1208 ADRP X0, 0xB76000
	0x035C120C LDR X0, [X0 + 0xCF0]
	0x035C1210 BL 0x1C16CF4
	0x035C1214 ADRP X0, 0xB76000
	0x035C1218 LDR X0, [X0 + 0xCF8]
	0x035C121C BL 0x1C16CF4
	0x035C1220 MOVZ W8, 0x1
	0x035C1224 STRB W8, [X19 + 0x183]
	0x035C1228 ADRP X21, 0xB76000
	0x035C122C LDR X21, [X21 + 0xCF8]
	0x035C1230 MOV X0, X31
	0x035C1234 BL 0x33E3C68
	0x035C1238 LDR X8, [X20]
	0x035C123C MOV X19, X0
	0x035C1240 LDR W9, [X8 + 0xE0]
	0x035C1244 CBNZ W9, 0x35C1254
	0x035C1248 MOV X0, X8
	0x035C124C BL 0x1C16DFC
	0x035C1250 LDR X8, [X20]
	0x035C1254 LDR X8, [X8 + 0xB8]
	0x035C1258 STR X19, [X8 + 0x28]
	0x035C125C LDR X0, [X21]
	0x035C1260 LDR W8, [X0 + 0xE0]
	0x035C1264 CBNZ W8, 0x35C1270
	0x035C1268 BL 0x1C16DFC
	0x035C126C LDR X0, [X21]
	0x035C1270 LDR X8, [X0 + 0xB8]
	0x035C1274 ADRP X22, 0xB32000
	0x035C1278 LDR X19, [X8 + 0x8]
	0x035C127C LDR X22, [X22 + 0x970]
	0x035C1280 CBNZ X19, 0x35C12D4
	0x035C1284 LDR W8, [X0 + 0xE0]
	0x035C1288 CBNZ W8, 0x35C1294
	0x035C128C BL 0x1C16DFC
	0x035C1290 LDR X0, [X21]
	0x035C1294 ADRP X9, 0xB76000
	0x035C1298 LDR X8, [X0 + 0xB8]
	0x035C129C LDR X9, [X9 + 0xCE8]
	0x035C12A0 LDR X20, [X8]
	0x035C12A4 LDR X0, [X9]
	0x035C12A8 BL 0x1C16F10
	0x035C12AC ADRP X8, 0xB76000
	0x035C12B0 LDR X8, [X8 + 0xCF0]
	0x035C12B4 MOV X1, X20
	0x035C12B8 MOV X3, X31
	0x035C12BC MOV X19, X0
	0x035C12C0 LDR X2, [X8]
	0x035C12C4 BL 0x3C0343C
	0x035C12C8 LDR X8, [X21]
	0x035C12CC LDR X8, [X8 + 0xB8]
	0x035C12D0 STR X19, [X8 + 0x8]
	0x035C12D4 LDR X0, [X22]
	0x035C12D8 LDR W8, [X0 + 0xE0]
	0x035C12DC CBNZ W8, 0x35C12E4
	0x035C12E0 BL 0x1C16DFC
	0x035C12E4 MOV X0, X19
	0x035C12E8 LDP X20, X19, [X31 + 0x20]
	0x035C12EC LDP X22, X21, [X31 + 0x10]
	0x035C12F0 MOV X1, X31
	0x035C12F4 LDR X30, [X31], #0x30
	0x035C12F8 B 0x3C01D80
	0x035C12FC AND W8, W0, 0xFF00
	0x035C1300 BFM W8, W0, 0x10, 0x7
	0x035C1304 BFM W8, W0, 0x10, 0x17
	0x035C1308 MOV W0, W8
	0x035C130C RET
	0x035C1310 SUB X31, X31, 0x30
	0x035C1314 STP X30, X21, [X31 + 0x10]
	0x035C1318 STP X20, X19, [X31 + 0x20]
	0x035C131C ADRP X21, 0xE1F000
	0x035C1320 ADRP X20, 0xB32000
	0x035C1324 LDRB W8, [X21 + 0x184]
	0x035C1328 LDR X20, [X20 + 0x788]
	0x035C132C MOV X19, X0
	0x035C1330 TBNZ X8, 0x0, 0x35C1360
	0x035C1334 ADRP X0, 0xB32000
	0x035C1338 LDR X0, [X0 + 0x758]
	0x035C133C BL 0x1C16CF4
	0x035C1340 ADRP X0, 0xB32000
	0x035C1344 LDR X0, [X0 + 0x788]
	0x035C1348 BL 0x1C16CF4
	0x035C134C ADRP X0, 0xB3A000
	0x035C1350 LDR X0, [X0 + 0x988]
	0x035C1354 BL 0x1C16CF4
	0x035C1358 MOVZ W8, 0x1
	0x035C135C STRB W8, [X21 + 0x184]
	0x035C1360 LDR X0, [X20]
	0x035C1364 ADRP X21, 0xB32000
	0x035C1368 ADRP X20, 0xB3A000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE20000
	011 Move W8, [X20+360]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB77000
	018 Move X0, [X0+3240]
	019 Call 0x1C17CF4
	020 Move X0, 0xB35000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+360], W8
	025 Move [X31+8], X31
	026 Move W24, [X19]
	027 Move X23, [X19+40]
	028 Compare W24, 0
	029 JumpIfEqual {75}
	030 Move X8, 0xB35000
	031 Move X8, [X8+2640]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X20, X0
	035 Move X1, X31
	036 Call CancellationTokenSource..ctor, X0
	037 Compare X23, 0
	038 JumpIfEqual {128}
	039 Move [X23+80], X20
	040 Compare X20, 0
	041 JumpIfEqual {129}
	042 Move X21, [X23+56]
	043 Move X0, X20
	044 Move X1, X31
	045 Call CancellationTokenSource.get_Token, X0
	046 Move X1, X0
	047 Compare X21, 0
	048 JumpIfEqual {130}
	049 Move X0, [X21+64]
	050 Move X8, [X21+24]
	051 Move X2, [X21+40]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Compare X0, 0
	054 JumpIfEqual {131}
	055 Move X1, X31
	056 Call Task.GetAwaiter, X0
	057 Move [X31+8], X0
	058 Add X0, X31, 8
	059 Move X1, X31
	060 Call TaskAwaiter.get_IsCompleted, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {82}
	065 Move [X19], W31
	066 Move X8, [X31+8]
	067 Add X0, X19, 8
	068 Move [X19+48], X8
	069 Move X8, 0xB77000
	070 Move X8, [X8+3240]
	071 Move X3, [X8]
	072 Add X1, X31, 8
	073 Move X2, X19
	074 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	075 Move X8, [X19+48]
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W24, TEMP
	079 Move [X31+8], X8
	080 Move [X19+48], X31
	081 Move [X19], W24
	082 Add X0, X31, 8
	083 Move X1, X31
	084 Call TaskAwaiter.GetResult, X0
	085 Compare X23, 0
	086 JumpIfEqual {127}
	087 Move W8, 1
	088 Move X20, X31
	089 Move [X23+64], W8
	090 Move W21, 7
	091 Move TEMP, X24
	092 And TEMP, TEMP, -2147483648
	093 Compare TEMP, -2147483648
	094 JumpIfNotEqual {103}
	095 Compare X23, 0
	096 JumpIfEqual {132}
	097 Move X0, [X23+80]
	098 Compare X0, 0
	099 JumpIfEqual {133}
	100 Move X1, X31
	101 Call CancellationTokenSource.Dispose, X0
	102 Move [X23+80], X31
	103 Compare X20, 0
	104 JumpIfNotEqual {125}
	105 Compare W21, 0
	106 JumpIfEqual {108}
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move TEMP, 1
	109 Not TEMP
	110 Move W8, TEMP
	111 Move [X19+8], W8
	112 Move X0, X19
	113 Move X1, X31
	114 Call AsyncVoidMethodBuilder.SetResult, X0
	115 Move X20, [X31+64]
	116 Move X19, [X31+72]
	117 Move X22, [X31+48]
	118 Move X21, [X31+56]
	119 Move X24, [X31+32]
	120 Move X23, [X31+40]
	121 Move X30, [X31+16]
	122 Move X25, [X31+24]
	123 Add X31, X31, 80
	124 Return 
	125 Move X0, X20
	126 Call 0x1C17F18
	127 Call 0x1C17F20
	128 Call 0x1C17F20
	129 Call 0x1C17F20
	130 Call 0x1C17F20
	131 Call 0x1C17F20
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Move X22, X0
	135 Move W24, W31
	136 Move X21, X1
	137 Move X22, X0
	138 Move W25, 1
	139 Move X22, X0
	140 Move W21, W1
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X22
	143 Call 0x3EB2AD0
	144 Move X20, X0
	145 Move X0, 0xB33000
	146 Move X0, [X0+2000]
	147 Call 0x1C17D08
	148 Move X8, [X20]
	149 Move X1, [X8]
	150 Call 0x1C18270
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {163}
	155 Move X21, [X20]
	156 Call 0x3EB2AE0
	157 Compare X23, 0
	158 JumpIfEqual {171}
	159 Move W8, 1
	160 Move X20, X31
	161 Move [X23+72], X21
	162 Move [X23+65], W8
	163 Move W0, 8
	164 Call 0x3EB2AF0
	165 Move X8, [X20]
	166 Move [X0], X8
	167 Move X1, 0x8F4000
	168 Add X1, X1, 3672
	169 Move X2, X31
	170 Call 0x3EB2B00
	171 Call 0x1C17F20
	172 Move X22, X0
	173 Move W21, W1
	174 Move X21, X1
	175 Move X22, X0
	176 Call 0x3EB2AE0
	177 Move W25, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X22
	180 Call 0x3EB2AD0
	181 Move X20, [X0]
	182 Call 0x3EB2AE0
	183 Move W21, W31
	184 Move TEMP, X24
	185 And TEMP, TEMP, -2147483648
	186 Compare TEMP, -2147483648
	187 JumpIfNotEqual {103}
	188 Move X20, X31
	189 Move TEMP, X24
	190 And TEMP, TEMP, -2147483648
	191 Compare TEMP, -2147483648
	192 JumpIfNotEqual {201}
	193 Compare X23, 0
	194 JumpIfEqual {237}
	195 Move X0, [X23+80]
	196 Compare X0, 0
	197 JumpIfEqual {238}
	198 Move X1, X31
	199 Call CancellationTokenSource.Dispose, X0
	200 Move [X23+80], X31
	201 Compare X20, 0
	202 JumpIfNotEqual {235}
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X0, X22
	205 Call 0x3EB2AD0
	206 Move X20, X0
	207 Move X0, 0xB33000
	208 Move X0, [X0+2000]
	209 Call 0x1C17D08
	210 Move X8, [X20]
	211 Move X1, [X8]
	212 Call 0x1C18270
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {227}
	217 Move X20, [X20]
	218 Call 0x3EB2AE0
	219 Move TEMP, 1
	220 Not TEMP
	221 Move W8, TEMP
	222 Move [X19+8], W8
	223 Move X0, X19
	224 Move X1, X20
	225 Move X2, X31
	226 Call AsyncVoidMethodBuilder.SetException, X0, X1
	227 Move W0, 8
	228 Call 0x3EB2AF0
	229 Move X8, [X20]
	230 Move [X0], X8
	231 Move X1, 0x8F4000
	232 Add X1, X1, 3672
	233 Move X2, X31
	234 Call 0x3EB2B00
	235 Move X0, X20
	236 Call 0x1C17F18
	237 Call 0x1C17F20
	238 Call 0x1C17F20
	239 Move X22, X0
	240 Move W21, W1
	241 Move TEMP, X24
	242 And TEMP, TEMP, -2147483648
	243 Compare TEMP, -2147483648
	244 JumpIfNotEqual {201}
	245 Move X22, X0
	246 Call 0x3EB2AE0
	247 Move X0, X22
	248 Call 0x1D2D690
	249 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035C136C LDR W8, [X0 + 0xE0]
	0x035C1370 LDR X21, [X21 + 0x758]
	0x035C1374 LDR X20, [X20 + 0x988]

ISIL:
	001 Add X0, X0, 8
	002 Move X2, X31
	003 Call AsyncVoidMethodBuilder.SetStateMachine, X0, X1
	004 Return 

