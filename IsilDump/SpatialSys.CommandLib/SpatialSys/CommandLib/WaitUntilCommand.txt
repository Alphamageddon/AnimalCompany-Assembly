Type: SpatialSys.CommandLib.WaitUntilCommand

Method: System.Void .ctor(SpatialSys.CommandLib.CommandConditionEval commandDelegate)

Disassembly:
	0x035BBE7C LDR X0, [X0 + 0xA70]
	0x035BBE80 BL 0x1C16CF4
	0x035BBE84 MOVZ W8, 0x1
	0x035BBE88 STRB W8, [X22 + 0x136]
	0x035BBE8C LDR X0, [X23]
	0x035BBE90 BL 0x1C16F10
	0x035BBE94 MOV X1, X21
	0x035BBE98 MOV X2, X20
	0x035BBE9C MOV X3, X19
	0x035BBEA0 MOV X22, X0
	0x035BBEA4 BL 0x35BBEBC
	0x035BBEA8 MOV X0, X22
	0x035BBEAC LDP X20, X19, [X31 + 0x20]
	0x035BBEB0 LDP X22, X21, [X31 + 0x10]
	0x035BBEB4 LDP X30, X23, [X31], #0x30
	0x035BBEB8 RET
	0x035BBEBC STP X30, X25, [X31 - 0x40]!
	0x035BBEC0 STP X24, X23, [X31 + 0x10]
	0x035BBEC4 STP X22, X21, [X31 + 0x20]
	0x035BBEC8 STP X20, X19, [X31 + 0x30]
	0x035BBECC ADRP X25, 0xE25000
	0x035BBED0 ADRP X24, 0xB7C000
	0x035BBED4 ADRP X23, 0xB7C000
	0x035BBED8 LDRB W8, [X25 + 0x15A]
	0x035BBEDC LDR X24, [X24 + 0x9C0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE26000
	007 Move X22, 0xB7D000
	008 Move W8, [X21+368]
	009 Move X22, [X22+2520]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7D000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+368], W8
	021 Move X1, [X22]
	022 Move W2, 1
	023 Move X0, X20
	024 Call Command..ctor, X0, X1, X2
	025 Move [X20+56], W31
	026 Move [X20+64], X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Return 

Method: System.Void .ctor(System.String identifier, SpatialSys.CommandLib.CommandConditionEval commandDelegate)

Disassembly:
	0x035BBF7C LDR X1, [X23, X21, LSL #3]
	0x035BBF80 CBZ X1, 0x35BBF98
	0x035BBF84 STR X20, [X1 + 0x30]
	0x035BBF88 LDR X0, [X20 + 0x48]
	0x035BBF8C CBZ X0, 0x35BBFC0
	0x035BBF90 LDR X2, [X22]
	0x035BBF94 BL 0x24F1750
	0x035BBF98 LDR W8, [X19 + 0x18]
	0x035BBF9C ADD X21, X21, 0x1
	0x035BBFA0 CMP X21, W8, SXTW
	0x035BBFA4 B.LT 0x35BBF74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move W2, 1
	006 Move X20, X0
	007 Call Command..ctor, X0, X1, X2
	008 Move [X20+56], W31
	009 Move [X20+64], X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035C1710 LDR W3, [X1 + 0x18]
	0x035C1714 MOV W2, W31
	0x035C1718 LDR X9, [X8 + 0x388]
	0x035C171C LDR X4, [X8 + 0x390]
	0x035C1720 BLR X9
	0x035C1724 LDR X0, [X22]
	0x035C1728 LDR W8, [X0 + 0xE0]
	0x035C172C CBNZ W8, 0x35C1738
	0x035C1730 BL 0x1C16DFC
	0x035C1734 LDR X0, [X22]
	0x035C1738 LDR X1, [X31 + 0x8]
	0x035C173C CBZ X1, 0x35C18B8

ISIL:
	001 Move [X31-16], X30
	002 Move V1, [X0+56]
	003 Move X8, [X0+64]
	004 Add S0, S1, S0
	005 Move [X0+56], S0
	006 Compare X8, 0
	007 JumpIfEqual {13}
	008 Move X2, [X8+24]
	009 Move X0, [X8+64]
	010 Move X1, [X8+40]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x035C1740 LDR X8, [X0 + 0xB8]
	0x035C1744 LDR X0, [X8 + 0x18]
	0x035C1748 CBZ X0, 0x35C18B8
	0x035C174C LDR X8, [X0]
	0x035C1750 LDR W3, [X1 + 0x18]
	0x035C1754 MOV W2, W31
	0x035C1758 LDR X9, [X8 + 0x388]
	0x035C175C LDR X4, [X8 + 0x390]
	0x035C1760 BLR X9
	0x035C1764 LDR X0, [X22]
	0x035C1768 B 0x35C1628
	0x035C176C LDR X0, [X22]
	0x035C1770 LDR W8, [X0 + 0xE0]
	0x035C1774 CBNZ W8, 0x35C1780
	0x035C1778 BL 0x1C16DFC
	0x035C177C LDR X0, [X22]
	0x035C1780 LDR X8, [X0 + 0xB8]
	0x035C1784 LDR X0, [X8 + 0x18]
	0x035C1788 CBZ X0, 0x35C18B8
	0x035C178C LDR X8, [X0]
	0x035C1790 LDP X9, X1, [X8 + 0x1E8]
	0x035C1794 BLR X9
	0x035C1798 CBZ X0, 0x35C18A0
	0x035C179C LDR X0, [X22]
	0x035C17A0 LDR W8, [X0 + 0xE0]
	0x035C17A4 CBNZ W8, 0x35C17B0
	0x035C17A8 BL 0x1C16DFC
	0x035C17AC LDR X0, [X22]
	0x035C17B0 ADRP X9, 0xB6D000
	0x035C17B4 LDR X8, [X0 + 0xB8]
	0x035C17B8 LDR X9, [X9 + 0x978]
	0x035C17BC LDR X20, [X8 + 0x30]
	0x035C17C0 LDR X0, [X9]
	0x035C17C4 BL 0x1C16F10
	0x035C17C8 ADRP X8, 0xB5B000
	0x035C17CC LDR X8, [X8 + 0x4D8]
	0x035C17D0 MOV X1, X20
	0x035C17D4 MOV X3, X31
	0x035C17D8 MOV X19, X0
	0x035C17DC LDR X2, [X8]
	0x035C17E0 BL 0x3E5E770
	0x035C17E4 LDR X8, [X22]
	0x035C17E8 LDR X8, [X8 + 0xB8]
	0x035C17EC LDR X0, [X8 + 0x18]
	0x035C17F0 STR X19, [X8 + 0x20]
	0x035C17F4 CBZ X0, 0x35C18B8
	0x035C17F8 LDR X8, [X0]
	0x035C17FC LDR X9, [X8 + 0x3F8]
	0x035C1800 LDR X1, [X8 + 0x400]
	0x035C1804 BLR X9
	0x035C1808 ADRP X8, 0xB6D000
	0x035C180C LDR X8, [X8 + 0x980]
	0x035C1810 MOV X21, X0
	0x035C1814 LDR X8, [X8]
	0x035C1818 MOV X0, X8
	0x035C181C BL 0x1C16F10
	0x035C1820 MOV X1, X21
	0x035C1824 MOV X2, X31
	0x035C1828 MOV X20, X0
	0x035C182C BL 0x3E60878
	0x035C1830 CBZ X19, 0x35C18B8
	0x035C1834 MOV X0, X19
	0x035C1838 MOV X1, X20
	0x035C183C MOV X2, X31
	0x035C1840 BL 0x3E5ED00
	0x035C1844 LDR X8, [X22]
	0x035C1848 LDR X8, [X8 + 0xB8]
	0x035C184C LDR X0, [X8 + 0x20]
	0x035C1850 CBZ X0, 0x35C18B8
	0x035C1854 MOV X1, X31
	0x035C1858 BL 0x3E5F014
	0x035C185C CBZ X0, 0x35C18B8
	0x035C1860 ADRP X8, 0xB75000
	0x035C1864 LDR X8, [X8 + 0xB40]
	0x035C1868 MOV X2, X31
	0x035C186C LDR X1, [X8]
	0x035C1870 BL 0x3E61528
	0x035C1874 LDR X8, [X22]
	0x035C1878 LDR X8, [X8 + 0xB8]
	0x035C187C LDR X0, [X8 + 0x20]
	0x035C1880 CBZ X0, 0x35C18B8
	0x035C1884 MOV X1, X31
	0x035C1888 BL 0x3E5F060
	0x035C188C MOV X0, X31
	0x035C1890 BL 0x3C3A708
	0x035C1894 LDR X8, [X22]
	0x035C1898 LDR X8, [X8 + 0xB8]
	0x035C189C STR S0, [X8 + 0x38]
	0x035C18A0 LDP X20, X19, [X31 + 0x30]
	0x035C18A4 LDP X22, X21, [X31 + 0x20]
	0x035C18A8 LDR X30, [X31 + 0x18]
	0x035C18AC LDR V8, [X31 + 0x10]
	0x035C18B0 ADD X31, X31, 0x40
	0x035C18B4 RET
	0x035C18B8 BL 0x1C16F20
	0x035C18BC STP X30, X25, [X31 - 0x40]!
	0x035C18C0 STP X24, X23, [X31 + 0x10]
	0x035C18C4 STP X22, X21, [X31 + 0x20]
	0x035C18C8 STP X20, X19, [X31 + 0x30]
	0x035C18CC ADRP X25, 0xE1F000
	0x035C18D0 ADRP X20, 0xB32000
	0x035C18D4 ADRP X24, 0xB32000
	0x035C18D8 ADRP X19, 0xB32000
	0x035C18DC ADRP X23, 0xB76000
	0x035C18E0 ADRP X22, 0xB76000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE20000
	007 Move X21, 0xB33000
	008 Move W8, [X20+369]
	009 Move X21, [X21+2512]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB33000
	016 Move X0, [X0+2512]
	017 Call 0x1C17CF4
	018 Move X0, 0xB33000
	019 Move X0, [X0+2704]
	020 Call 0x1C17CF4
	021 Move X0, 0xB77000
	022 Move X0, [X0+2520]
	023 Call 0x1C17CF4
	024 Move X0, 0xB77000
	025 Move X0, [X0+3272]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+369], W8
	029 Move X0, [X21]
	030 Move W1, 4
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {119}
	034 Move X21, 0xB77000
	035 Move X21, [X21+2520]
	036 Move X20, X0
	037 Move X0, [X21]
	038 Compare X0, 0
	039 JumpIfEqual {45}
	040 Move X8, [X20]
	041 Move X1, [X8+64]
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {120}
	045 Move W8, [X20+24]
	046 Compare W8, 0
	047 JumpIfEqual {118}
	048 Move X8, [X21]
	049 Move X0, X19
	050 Move [X20+32], X8
	051 Call Command.get_identifier, X0
	052 Move X21, X0
	053 Compare X0, 0
	054 JumpIfEqual {61}
	055 Move X8, [X20]
	056 Move X0, X21
	057 Move X1, [X8+64]
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {120}
	061 Move W8, [X20+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X20+40], X21
	064 Move X0, [X19+64]
	065 Compare X0, 0
	066 JumpIfEqual {119}
	067 Move X1, X31
	068 Call Delegate.get_Method, X0
	069 Compare X0, 0
	070 JumpIfEqual {119}
	071 Move X8, [X0]
	072 Move X9, [X8+424]
	073 Move X1, [X8+432]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X21, X0
	076 Compare X0, 0
	077 JumpIfEqual {84}
	078 Move X8, [X20]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {120}
	084 Move W8, [X20+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, 0xB33000
	087 Move X8, [X8+2704]
	088 Move [X20+48], X21
	089 Move V0, [X19+56]
	090 Add X1, X31, 12
	091 Move X0, [X8]
	092 Move [X31+12], S0
	093 Call 0x1C17E04
	094 Move X19, X0
	095 Compare X0, 0
	096 JumpIfEqual {103}
	097 Move X8, [X20]
	098 Move X0, X19
	099 Move X1, [X8+64]
	100 Call 0x1C17E00
	101 Compare X0, 0
	102 JumpIfEqual {120}
	103 Move W8, [X20+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, 0xB77000
	106 Move X8, [X8+3272]
	107 Move [X20+56], X19
	108 Move X1, X20
	109 Move X2, X31
	110 Move X0, [X8]
	111 Call String.Format, X0, X1
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X30, [X31+16]
	115 Move X21, [X31+24]
	116 Add X31, X31, 48
	117 Return X0
	118 Call 0x1C17F28
	119 Call 0x1C17F20
	120 Call 0x1C17F44
	121 Move X1, X31
	122 Call 0x1C17DEC

