Type: SpatialSys.CommandLib.Commands

Method: SpatialSys.CommandLib.Command Do(System.Action commandDelegate, System.Boolean silent = False)

Disassembly:
	0x035BBC40 LDR X8, [X0]
	0x035BBC44 LDP X9, X1, [X8 + 0x1A8]
	0x035BBC48 BLR X9
	0x035BBC4C MOV X1, X0
	0x035BBC50 MOVZ W2, 0x1
	0x035BBC54 MOV X0, X20
	0x035BBC58 BL 0x35BC984
	0x035BBC5C STP X22, X21, [X20 + 0x38]
	0x035BBC60 STR X19, [X20 + 0x48]
	0x035BBC64 CBZ X21, 0x35BBC6C
	0x035BBC68 STR X20, [X21 + 0x30]
	0x035BBC6C CBZ X19, 0x35BBC74
	0x035BBC70 STR X20, [X19 + 0x30]
	0x035BBC74 LDP X20, X19, [X31 + 0x20]
	0x035BBC78 LDP X22, X21, [X31 + 0x10]
	0x035BBC7C LDR X30, [X31], #0x30
	0x035BBC80 RET
	0x035BBC84 BL 0x1C16F20
	0x035BBC88 STP X30, X25, [X31 - 0x40]!
	0x035BBC8C STP X24, X23, [X31 + 0x10]
	0x035BBC90 STP X22, X21, [X31 + 0x20]
	0x035BBC94 STP X20, X19, [X31 + 0x30]
	0x035BBC98 ADRP X21, 0xE25000
	0x035BBC9C ADRP X25, 0xB7C000
	0x035BBCA0 LDRB W8, [X21 + 0x134]
	0x035BBCA4 LDR X25, [X25 + 0xA68]
	0x035BBCA8 MOV W19, W4
	0x035BBCAC MOV X20, X3
	0x035BBCB0 MOV X22, X2
	0x035BBCB4 MOV X23, X1
	0x035BBCB8 MOV X24, X0
	0x035BBCBC TBNZ X8, 0x0, 0x35BBCD4
	0x035BBCC0 ADRP X0, 0xB7C000
	0x035BBCC4 LDR X0, [X0 + 0xA68]
	0x035BBCC8 BL 0x1C16CF4
	0x035BBCCC MOVZ W8, 0x1
	0x035BBCD0 STRB W8, [X21 + 0x134]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE26000
	007 Move X22, 0xB7D000
	008 Move W8, [X20+293]
	009 Move X22, [X22+2512]
	010 Move W19, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7D000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+293], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X21
	024 Move X20, X0
	025 Call DelegateCommand..ctor, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {45}
	028 Move W8, [X20+32]
	029 Move TEMP, X19
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {35}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, 2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 5
	037 Move [X20+32], W8
	038 Move X0, X20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return X0
	045 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command Do(System.String identifier, System.Action commandDelegate, System.Boolean silent = False)

Disassembly:
	0x035BBD28 STR W8, [X21 + 0x20]
	0x035BBD2C MOV X0, X21
	0x035BBD30 LDP X20, X19, [X31 + 0x30]
	0x035BBD34 LDP X22, X21, [X31 + 0x20]
	0x035BBD38 LDP X24, X23, [X31 + 0x10]
	0x035BBD3C LDP X30, X25, [X31], #0x40
	0x035BBD40 RET
	0x035BBD44 STR X30, [X31 - 0x30]!
	0x035BBD48 STP X22, X21, [X31 + 0x10]
	0x035BBD4C STP X20, X19, [X31 + 0x20]
	0x035BBD50 MOV X22, X2
	0x035BBD54 MOVZ W2, 0x1
	0x035BBD58 MOV X19, X4
	0x035BBD5C MOV X21, X3
	0x035BBD60 MOV X20, X0
	0x035BBD64 BL 0x35BC984
	0x035BBD68 STP X22, X21, [X20 + 0x38]
	0x035BBD6C STR X19, [X20 + 0x48]
	0x035BBD70 CBZ X21, 0x35BBD78
	0x035BBD74 STR X20, [X21 + 0x30]
	0x035BBD78 CBZ X19, 0x35BBD80
	0x035BBD7C STR X20, [X19 + 0x30]
	0x035BBD80 LDP X20, X19, [X31 + 0x20]
	0x035BBD84 LDP X22, X21, [X31 + 0x10]
	0x035BBD88 LDR X30, [X31], #0x30
	0x035BBD8C RET
	0x035BBD90 STR X30, [X31 - 0x30]!
	0x035BBD94 STP X22, X21, [X31 + 0x10]
	0x035BBD98 STP X20, X19, [X31 + 0x20]
	0x035BBD9C ADRP X21, 0xE25000
	0x035BBDA0 ADRP X22, 0xB7C000
	0x035BBDA4 LDRB W8, [X21 + 0x135]
	0x035BBDA8 LDR X22, [X22 + 0xA70]
	0x035BBDAC MOV X19, X1
	0x035BBDB0 MOV X20, X0
	0x035BBDB4 TBNZ X8, 0x0, 0x35BBDCC
	0x035BBDB8 ADRP X0, 0xB7C000
	0x035BBDBC LDR X0, [X0 + 0xA70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE26000
	008 Move X23, 0xB7D000
	009 Move W8, [X21+294]
	010 Move X23, [X23+2512]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB7D000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+294], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move W2, 1
	026 Move X1, X22
	027 Move X21, X0
	028 Call Command..ctor, X0, X1, X2
	029 Move W8, [X21+32]
	030 Move [X21+56], X20
	031 Move TEMP, X19
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {37}
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 2
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, 5
	039 Move [X21+32], W8
	040 Move X0, X21
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return X0

Method: SpatialSys.CommandLib.Command WaitUntil(SpatialSys.CommandLib.CommandConditionEval commandDelegate, System.Boolean silent = False)

Disassembly:
	0x035BBDE8 LDP X20, X19, [X31 + 0x20]
	0x035BBDEC LDP X22, X21, [X31 + 0x10]
	0x035BBDF0 LDR X30, [X31], #0x30
	0x035BBDF4 RET
	0x035BBDF8 STP X30, X21, [X31 - 0x20]!
	0x035BBDFC STP X20, X19, [X31 + 0x10]
	0x035BBE00 CBZ X1, 0x35BBE48
	0x035BBE04 MOV X20, X1
	0x035BBE08 MOV X21, X0
	0x035BBE0C MOV X0, X1
	0x035BBE10 MOV X1, X31
	0x035BBE14 MOV X19, X2
	0x035BBE18 BL 0x33C4268
	0x035BBE1C CBZ X0, 0x35BBE48
	0x035BBE20 LDR X8, [X0]
	0x035BBE24 LDP X9, X1, [X8 + 0x1A8]
	0x035BBE28 BLR X9
	0x035BBE2C MOV X2, X20
	0x035BBE30 MOV X3, X19
	0x035BBE34 LDP X20, X19, [X31 + 0x10]
	0x035BBE38 MOV X1, X0
	0x035BBE3C MOV X0, X21
	0x035BBE40 LDP X30, X21, [X31], #0x20
	0x035BBE44 B 0x35BBEBC
	0x035BBE48 BL 0x1C16F20
	0x035BBE4C STP X30, X23, [X31 - 0x30]!
	0x035BBE50 STP X22, X21, [X31 + 0x10]
	0x035BBE54 STP X20, X19, [X31 + 0x20]
	0x035BBE58 ADRP X22, 0xE25000
	0x035BBE5C ADRP X23, 0xB7C000
	0x035BBE60 LDRB W8, [X22 + 0x136]
	0x035BBE64 LDR X23, [X23 + 0xA70]
	0x035BBE68 MOV X19, X2
	0x035BBE6C MOV X20, X1
	0x035BBE70 MOV X21, X0
	0x035BBE74 TBNZ X8, 0x0, 0x35BBE8C
	0x035BBE78 ADRP X0, 0xB7C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE26000
	007 Move X22, 0xB39000
	008 Move W8, [X20+295]
	009 Move X22, [X22+3400]
	010 Move W19, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB39000
	017 Move X0, [X0+3400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+295], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X21
	024 Move X20, X0
	025 Call WaitUntilCommand..ctor, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {45}
	028 Move W8, [X20+32]
	029 Move TEMP, X19
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {35}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, 2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 5
	037 Move [X20+32], W8
	038 Move X0, X20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return X0
	045 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command WaitUntil(System.String identifier, SpatialSys.CommandLib.CommandConditionEval commandDelegate, System.Boolean silent = False)

Disassembly:
	0x035BBEE0 LDR X23, [X23 + 0x9C8]
	0x035BBEE4 MOV X19, X3
	0x035BBEE8 MOV X21, X2
	0x035BBEEC MOV X22, X1
	0x035BBEF0 MOV X20, X0
	0x035BBEF4 TBNZ X8, 0x0, 0x35BBF24
	0x035BBEF8 ADRP X0, 0xB7C000
	0x035BBEFC LDR X0, [X0 + 0x978]
	0x035BBF00 BL 0x1C16CF4
	0x035BBF04 ADRP X0, 0xB7C000
	0x035BBF08 LDR X0, [X0 + 0x9C8]
	0x035BBF0C BL 0x1C16CF4
	0x035BBF10 ADRP X0, 0xB7C000
	0x035BBF14 LDR X0, [X0 + 0x9C0]
	0x035BBF18 BL 0x1C16CF4
	0x035BBF1C MOVZ W8, 0x1
	0x035BBF20 STRB W8, [X25 + 0x15A]
	0x035BBF24 MOVZ W2, 0x1
	0x035BBF28 MOV X0, X20
	0x035BBF2C MOV X1, X22
	0x035BBF30 BL 0x35BC984
	0x035BBF34 STR X21, [X20 + 0x38]
	0x035BBF38 LDR X0, [X24]
	0x035BBF3C BL 0x1C16F10
	0x035BBF40 LDR X1, [X23]
	0x035BBF44 MOV X21, X0
	0x035BBF48 BL 0x24F1248
	0x035BBF4C STR X21, [X20 + 0x48]
	0x035BBF50 CBZ X19, 0x35BBFC0
	0x035BBF54 LDR X8, [X19 + 0x18]
	0x035BBF58 CMP W8, 0x1
	0x035BBF5C B.LT 0x35BBFA8
	0x035BBF60 ADRP X22, 0xB7C000
	0x035BBF64 LDR X22, [X22 + 0x978]
	0x035BBF68 MOV X21, X31
	0x035BBF6C AND X8, X8, 0x0
	0x035BBF70 ADD X23, X19, 0x20
	0x035BBF74 CMP X21, W8, UXTW
	0x035BBF78 B.CS 0x35BBFBC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE26000
	008 Move X23, 0xB39000
	009 Move W8, [X21+296]
	010 Move X23, [X23+3400]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB39000
	019 Move X0, [X0+3400]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+296], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move W2, 1
	026 Move X1, X22
	027 Move X21, X0
	028 Call Command..ctor, X0, X1, X2
	029 Move W8, [X21+32]
	030 Move [X21+56], W31
	031 Move [X21+64], X20
	032 Move TEMP, X19
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {38}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 2
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, 5
	040 Move [X21+32], W8
	041 Move X0, X21
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return X0

Method: SpatialSys.CommandLib.Command WaitForFrames(System.Int32 frameCount, System.Boolean silent = False)

Disassembly:
	0x035BBFA8 LDP X20, X19, [X31 + 0x30]
	0x035BBFAC LDP X22, X21, [X31 + 0x20]
	0x035BBFB0 LDP X24, X23, [X31 + 0x10]
	0x035BBFB4 LDP X30, X25, [X31], #0x40
	0x035BBFB8 RET
	0x035BBFBC BL 0x1C16F28
	0x035BBFC0 BL 0x1C16F20
	0x035BBFC4 STR X30, [X31 - 0x30]!
	0x035BBFC8 STP X22, X21, [X31 + 0x10]
	0x035BBFCC STP X20, X19, [X31 + 0x20]
	0x035BBFD0 ADRP X21, 0xE25000
	0x035BBFD4 LDRB W8, [X21 + 0x137]
	0x035BBFD8 MOV W19, W1
	0x035BBFDC MOV X20, X0
	0x035BBFE0 TBNZ X8, 0x0, 0x35BBFF8
	0x035BBFE4 ADRP X0, 0xB7C000
	0x035BBFE8 LDR X0, [X0 + 0xA78]
	0x035BBFEC BL 0x1C16CF4
	0x035BBFF0 MOVZ W8, 0x1
	0x035BBFF4 STRB W8, [X21 + 0x137]
	0x035BBFF8 CBZ X20, 0x35BC080
	0x035BBFFC MOV X0, X20
	0x035BC000 MOV X1, X31
	0x035BC004 BL 0x33C4268
	0x035BC008 CBZ X0, 0x35BC080
	0x035BC00C LDR X8, [X0]
	0x035BC010 ADRP X21, 0xB7B000
	0x035BC014 LDP X9, X1, [X8 + 0x1A8]
	0x035BC018 LDR X21, [X21 + 0xA78]
	0x035BC01C BLR X9
	0x035BC020 LDR X8, [X21]
	0x035BC024 MOV X22, X0
	0x035BC028 MOV X0, X8
	0x035BC02C BL 0x1C16F10
	0x035BC030 MOVZ W2, 0x1
	0x035BC034 MOV X1, X22
	0x035BC038 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE26000
	007 Move X22, 0xB7D000
	008 Move W8, [X20+297]
	009 Move X22, [X22+2528]
	010 Move W19, W1
	011 Move W21, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7D000
	017 Move X0, [X0+2528]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+297], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move W1, W21
	024 Move X20, X0
	025 Call WaitForFramesCommand..ctor, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {45}
	028 Move W8, [X20+32]
	029 Move TEMP, X19
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {35}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, 2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 5
	037 Move [X20+32], W8
	038 Move X0, X20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return X0
	045 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command WaitForFrames(System.String identifier, System.Int32 frameCount, System.Boolean silent = False)

Disassembly:
	0x035BC094 MOV X20, X0
	0x035BC098 BL 0x35BC984
	0x035BC09C STR X19, [X20 + 0x38]
	0x035BC0A0 LDP X20, X19, [X31 + 0x10]
	0x035BC0A4 LDR X30, [X31], #0x20
	0x035BC0A8 RET
	0x035BC0AC STP X30, X23, [X31 - 0x30]!
	0x035BC0B0 STP X22, X21, [X31 + 0x10]
	0x035BC0B4 STP X20, X19, [X31 + 0x20]
	0x035BC0B8 ADRP X21, 0xE24000
	0x035BC0BC ADRP X23, 0xB7B000
	0x035BC0C0 LDRB W8, [X21 + 0x138]
	0x035BC0C4 LDR X23, [X23 + 0xA78]
	0x035BC0C8 MOV W19, W2
	0x035BC0CC MOV X20, X1
	0x035BC0D0 MOV X22, X0
	0x035BC0D4 TBNZ X8, 0x0, 0x35BC0EC
	0x035BC0D8 ADRP X0, 0xB7B000
	0x035BC0DC LDR X0, [X0 + 0xA78]
	0x035BC0E0 BL 0x1C16CF4
	0x035BC0E4 MOVZ W8, 0x1
	0x035BC0E8 STRB W8, [X21 + 0x138]
	0x035BC0EC LDR X0, [X23]
	0x035BC0F0 BL 0x1C16F10
	0x035BC0F4 MOVZ W2, 0x1
	0x035BC0F8 MOV X1, X22
	0x035BC0FC MOV X21, X0
	0x035BC100 BL 0x35BC984
	0x035BC104 LDR W8, [X21 + 0x20]
	0x035BC108 STR X20, [X21 + 0x38]
	0x035BC10C TBZ X19, 0x0, 0x35BC120
	0x035BC110 CMP W8, 0x3
	0x035BC114 B.LT 0x35BC130
	0x035BC118 MOVZ W8, 0x2
	0x035BC11C B 0x35BC12C
	0x035BC120 CMP W8, 0x4
	0x035BC124 B.GT 0x35BC130
	0x035BC128 MOVZ W8, 0x5
	0x035BC12C STR W8, [X21 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE25000
	008 Move X23, 0xB7C000
	009 Move W8, [X20+298]
	010 Move X23, [X23+2528]
	011 Move W19, W2
	012 Move W21, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB7C000
	019 Move X0, [X0+2528]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+298], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X22
	026 Move W2, W21
	027 Move X20, X0
	028 Call WaitForFramesCommand..ctor, X0, X1, X2
	029 Compare X20, 0
	030 JumpIfEqual {49}
	031 Move W8, [X20+32]
	032 Move TEMP, X19
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {38}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 2
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, 5
	040 Move [X20+32], W8
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return X0
	049 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command WaitForSeconds(System.Single duration, System.Boolean silent = False)

Disassembly:
	0x035BC1E4 LDR X8, [X21]
	0x035BC1E8 LDR W9, [X19 + 0x18]
	0x035BC1EC MOV X0, X21
	0x035BC1F0 LDP X10, X2, [X8 + 0x1A8]
	0x035BC1F4 SUB W1, W9, 0x1
	0x035BC1F8 BLR X10
	0x035BC1FC LDR W8, [X19 + 0x18]
	0x035BC200 CMP W0, W8
	0x035BC204 B.CS 0x35BC224
	0x035BC208 ADD X8, X19, W0, 0x3, SXTW
	0x035BC20C LDR X0, [X8 + 0x20]
	0x035BC210 LDP X20, X19, [X31 + 0x20]
	0x035BC214 LDP X22, X21, [X31 + 0x10]
	0x035BC218 LDR X30, [X31], #0x30
	0x035BC21C RET
	0x035BC220 BL 0x1C16F20
	0x035BC224 BL 0x1C16F28
	0x035BC228 STP X30, X23, [X31 - 0x30]!
	0x035BC22C STP X22, X21, [X31 + 0x10]
	0x035BC230 STP X20, X19, [X31 + 0x20]
	0x035BC234 ADRP X19, 0xE24000
	0x035BC238 ADRP X23, 0xB7B000
	0x035BC23C LDRB W8, [X19 + 0x13A]
	0x035BC240 LDR X23, [X23 + 0xA80]
	0x035BC244 MOV X21, X2
	0x035BC248 MOV W20, W1
	0x035BC24C MOV X22, X0
	0x035BC250 TBNZ X8, 0x0, 0x35BC268
	0x035BC254 ADRP X0, 0xB7B000
	0x035BC258 LDR X0, [X0 + 0xA80]
	0x035BC25C BL 0x1C16CF4
	0x035BC260 MOVZ W8, 0x1
	0x035BC264 STRB W8, [X19 + 0x13A]
	0x035BC268 LDR X0, [X23]
	0x035BC26C BL 0x1C16F10
	0x035BC270 MOV X1, X22
	0x035BC274 MOV X2, X21

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE25000
	007 Move X21, 0xB7C000
	008 Move W8, [X20+299]
	009 Move X21, [X21+2568]
	010 Move W19, W0
	011 Move V8, V0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7C000
	017 Move X0, [X0+2568]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+299], W8
	021 Move X0, [X21]
	022 Call 0x1C17F10
	023 Move V0, V8
	024 Move X20, X0
	025 Call WaitForSecondsCommand..ctor, X0, V0
	026 Compare X20, 0
	027 JumpIfEqual {45}
	028 Move W8, [X20+32]
	029 Move TEMP, X19
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {35}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, 2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 5
	037 Move [X20+32], W8
	038 Move X0, X20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Move X21, [X31+24]
	043 Move V8, [X31+48]
	044 Return X0
	045 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command WaitForSeconds(System.String identifier, System.Single duration, System.Boolean silent = False)

Disassembly:
	0x035BC2DC CSEL X0, X19, X31, EQ
	0x035BC2E0 LDP X20, X19, [X31 + 0x20]
	0x035BC2E4 LDP X22, X21, [X31 + 0x10]
	0x035BC2E8 LDP X30, X23, [X31], #0x30
	0x035BC2EC RET
	0x035BC2F0 BL 0x1C16F20
	0x035BC2F4 STP X30, X23, [X31 - 0x30]!
	0x035BC2F8 STP X22, X21, [X31 + 0x10]
	0x035BC2FC STP X20, X19, [X31 + 0x20]
	0x035BC300 ADRP X22, 0xE24000
	0x035BC304 ADRP X23, 0xB61000
	0x035BC308 LDRB W8, [X22 + 0x166]
	0x035BC30C LDR X23, [X23 + 0x608]
	0x035BC310 MOV X19, X2
	0x035BC314 MOV X21, X1
	0x035BC318 MOV X20, X0
	0x035BC31C TBNZ X8, 0x0, 0x35BC334
	0x035BC320 ADRP X0, 0xB61000
	0x035BC324 LDR X0, [X0 + 0x608]
	0x035BC328 BL 0x1C16CF4
	0x035BC32C MOVZ W8, 0x1
	0x035BC330 STRB W8, [X22 + 0x166]
	0x035BC334 LDR X1, [X23]
	0x035BC338 MOVZ W2, 0x1
	0x035BC33C MOV X0, X20
	0x035BC340 BL 0x35BC984
	0x035BC344 STP X19, X21, [X20 + 0x30]
	0x035BC348 LDP X20, X19, [X31 + 0x20]
	0x035BC34C LDP X22, X21, [X31 + 0x10]
	0x035BC350 LDP X30, X23, [X31], #0x30
	0x035BC354 RET
	0x035BC358 STR X30, [X31 - 0x40]!
	0x035BC35C STP X24, X23, [X31 + 0x10]
	0x035BC360 STP X22, X21, [X31 + 0x20]
	0x035BC364 STP X20, X19, [X31 + 0x30]
	0x035BC368 ADRP X19, 0xE24000
	0x035BC36C ADRP X24, 0xB7B000
	0x035BC370 LDRB W8, [X19 + 0x13B]
	0x035BC374 LDR X24, [X24 + 0xA80]
	0x035BC378 MOV X20, X3
	0x035BC37C MOV W21, W2

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE25000
	008 Move X22, 0xB7C000
	009 Move W8, [X20+300]
	010 Move X22, [X22+2568]
	011 Move W19, W1
	012 Move V8, V0
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB7C000
	019 Move X0, [X0+2568]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+300], W8
	023 Move X0, [X22]
	024 Call 0x1C17F10
	025 Move W2, 1
	026 Move X1, X21
	027 Move X20, X0
	028 Call Command..ctor, X0, X1, X2
	029 Move W8, [X20+32]
	030 Move [X20+60], W31
	031 Move [X20+56], S8
	032 Move TEMP, X19
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {38}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 2
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, 5
	040 Move [X20+32], W8
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+8]
	047 Move V8, [X31+48]
	048 Return X0

Method: SpatialSys.CommandLib.Command Promise(RSG.IPromise promise, System.Boolean abortOnReject = False, System.Boolean silent = False)

Disassembly:
	0x035BC3AC MOV X1, X23
	0x035BC3B0 MOV X19, X0
	0x035BC3B4 BL 0x35BC984
	0x035BC3B8 LDR W8, [X19 + 0x20]
	0x035BC3BC STP X20, X22, [X19 + 0x30]
	0x035BC3C0 TBZ X21, 0x0, 0x35BC3D4
	0x035BC3C4 CMP W8, 0x3
	0x035BC3C8 B.LT 0x35BC3E4
	0x035BC3CC MOVZ W8, 0x2
	0x035BC3D0 B 0x35BC3E0
	0x035BC3D4 CMP W8, 0x4
	0x035BC3D8 B.GT 0x35BC3E4
	0x035BC3DC MOVZ W8, 0x5
	0x035BC3E0 STR W8, [X19 + 0x20]
	0x035BC3E4 LDR X9, [X19]
	0x035BC3E8 LDR X8, [X24]
	0x035BC3EC LDRB W11, [X9 + 0x130]
	0x035BC3F0 LDRB W10, [X8 + 0x130]
	0x035BC3F4 CMP W11, W10
	0x035BC3F8 B.CS 0x35BC404
	0x035BC3FC MOV X0, X31
	0x035BC400 B 0x35BC418
	0x035BC404 LDR X9, [X9 + 0xC8]
	0x035BC408 ADD X9, X9, X10, 0x3, LSL
	0x035BC40C LDUR X9, [X9 - 0x8]
	0x035BC410 CMP X9, X8
	0x035BC414 CSEL X0, X19, X31, EQ
	0x035BC418 LDP X20, X19, [X31 + 0x30]
	0x035BC41C LDP X22, X21, [X31 + 0x20]
	0x035BC420 LDP X24, X23, [X31 + 0x10]
	0x035BC424 LDR X30, [X31], #0x40
	0x035BC428 RET
	0x035BC42C STP X30, X21, [X31 - 0x20]!
	0x035BC430 STP X20, X19, [X31 + 0x10]
	0x035BC434 MOV X20, X2
	0x035BC438 MOVZ W2, 0x1
	0x035BC43C MOV X19, X3
	0x035BC440 MOV X21, X0
	0x035BC444 BL 0x35BC984

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE25000
	008 Move X23, 0xB7C000
	009 Move W8, [X20+301]
	010 Move X23, [X23+2584]
	011 Move W19, W2
	012 Move W22, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB7C000
	019 Move X0, [X0+2584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+301], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 And W2, W22, 1
	026 Move X1, X21
	027 Move X20, X0
	028 Call WaitForPromiseCommand..ctor, X0, X1, X2
	029 Compare X20, 0
	030 JumpIfEqual {49}
	031 Move W8, [X20+32]
	032 Move TEMP, X19
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {38}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 2
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, 5
	040 Move [X20+32], W8
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return X0
	049 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command Promise(System.String identifier, RSG.IPromise promise, System.Boolean abortOnReject = False, System.Boolean silent = False)

Disassembly:
	0x035BC4A8 B 0x35BC4B8
	0x035BC4AC CMP W8, 0x4
	0x035BC4B0 B.GT 0x35BC4BC
	0x035BC4B4 MOVZ W8, 0x5
	0x035BC4B8 STR W8, [X0 + 0x20]
	0x035BC4BC RET
	0x035BC4C0 STP X30, X21, [X31 - 0x20]!
	0x035BC4C4 STP X20, X19, [X31 + 0x10]
	0x035BC4C8 LDR X8, [X2 + 0x8]
	0x035BC4CC STP X1, X2, [X0 + 0x20]
	0x035BC4D0 MOV X19, X0
	0x035BC4D4 MOV X20, X1
	0x035BC4D8 STR X8, [X0 + 0x10]
	0x035BC4DC LDRB W21, [X2 + 0x52]
	0x035BC4E0 STR X0, [X0 + 0x40]
	0x035BC4E4 MOV X0, X2
	0x035BC4E8 BL 0x1C16D84
	0x035BC4EC TBZ X0, 0x0, 0x35BC504
	0x035BC4F0 CBNZ W21, 0x35BC508
	0x035BC4F4 ADRP X8, 0xFFFFFFFFFE605000
	0x035BC4F8 ADD X8, X8, 0xAD0
	0x035BC4FC STR X8, [X19 + 0x18]
	0x035BC500 B 0x35BC518
	0x035BC504 CBZ X20, 0x35BC530
	0x035BC508 LDR X8, [X19 + 0x10]
	0x035BC50C LDR X9, [X19 + 0x20]
	0x035BC510 STR X8, [X19 + 0x18]
	0x035BC514 STR X9, [X19 + 0x40]
	0x035BC518 ADRP X8, 0xFFFFFFFFFE605000
	0x035BC51C ADD X8, X8, 0xA84
	0x035BC520 STR X8, [X19 + 0x38]
	0x035BC524 LDP X20, X19, [X31 + 0x10]
	0x035BC528 LDP X30, X21, [X31], #0x20
	0x035BC52C RET
	0x035BC530 ADRP X1, 0xFFFFFFFFFD55F000
	0x035BC534 ADD X1, X1, 0xEE3
	0x035BC538 MOV X0, X31
	0x035BC53C BL 0x1C16F3C
	0x035BC540 MOV X1, X31
	0x035BC544 BL 0x1C16DEC
	0x035BC548 LDR X8, [X0 + 0x40]
	0x035BC54C LDR X2, [X0 + 0x18]
	0x035BC550 LDR X1, [X0 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE25000
	009 Move X24, 0xB7C000
	010 Move W8, [X20+302]
	011 Move X24, [X24+2584]
	012 Move W19, W3
	013 Move W23, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB7C000
	021 Move X0, [X0+2584]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+302], W8
	025 Move X0, [X24]
	026 Call 0x1C17F10
	027 And W3, W23, 1
	028 Move X1, X22
	029 Move X2, X21
	030 Move X20, X0
	031 Call WaitForPromiseCommand..ctor, X0, X1, X2, X3
	032 Compare X20, 0
	033 JumpIfEqual {53}
	034 Move W8, [X20+32]
	035 Move TEMP, X19
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {41}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, 2
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, 5
	043 Move [X20+32], W8
	044 Move X0, X20
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X24, [X31+16]
	050 Move X23, [X31+24]
	051 Move X30, [X31+64]
	052 Return X0
	053 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command Promise(RSG.IPromise`1<T> promise, System.Boolean abortOnReject = False, System.Boolean silent = False)

Disassembly:
	0x021A3AC8 LDUR X9, [X29 - 0x8]
	0x021A3ACC CMP X8, X9
	0x021A3AD0 B.NE 0x21A3AF4
	0x021A3AD4 ADD X31, X29, 0x0
	0x021A3AD8 LDP X20, X19, [X31 + 0x50]
	0x021A3ADC LDP X22, X21, [X31 + 0x40]
	0x021A3AE0 LDP X24, X23, [X31 + 0x30]
	0x021A3AE4 LDP X26, X25, [X31 + 0x20]
	0x021A3AE8 LDP X28, X27, [X31 + 0x10]
	0x021A3AEC LDP X29, X30, [X31], #0x60
	0x021A3AF0 RET
	0x021A3AF4 BL 0x3EB1B20
	0x021A3AF8 STP X30, X21, [X31 - 0x20]!
	0x021A3AFC STP X20, X19, [X31 + 0x10]
	0x021A3B00 LDR X8, [X1 + 0x38]
	0x021A3B04 MOV X19, X1
	0x021A3B08 MOV X20, X0
	0x021A3B0C CBNZ X8, 0x21A3B30
	0x021A3B10 ADRP X0, 0x1F50000
	0x021A3B14 LDR X0, [X0 + 0x6C0]
	0x021A3B18 BL 0x1C16CF4
	0x021A3B1C LDR X8, [X19 + 0x38]
	0x021A3B20 CBNZ X8, 0x21A3B30
	0x021A3B24 MOV X0, X19
	0x021A3B28 BL 0x1C5C6E0
	0x021A3B2C LDR X8, [X19 + 0x38]
	0x021A3B30 ADRP X9, 0x1F50000
	0x021A3B34 LDR X9, [X9 + 0x6C0]
	0x021A3B38 LDR X21, [X8]
	0x021A3B3C LDR X0, [X9]
	0x021A3B40 LDR W9, [X0 + 0xE0]
	0x021A3B44 CBNZ W9, 0x21A3B4C
	0x021A3B48 BL 0x1C16DFC
	0x021A3B4C MOV X0, X21
	0x021A3B50 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X22, X3
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X22
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X0, [X8+8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X22+56]
	025 And W2, W20, 1
	026 Move X1, X21
	027 Move X22, X0
	028 Move X3, [X8+16]
	029 Move X8, [X3]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X22, 0
	032 JumpIfEqual {44}
	033 And W1, W19, 1
	034 Move X0, X22
	035 Move X2, X31
	036 Call Command.set_silent, X0, X1
	037 Move X0, X22
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0
	044 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command Promise(System.String identifier, RSG.IPromise`1<T> promise, System.Boolean abortOnReject = False, System.Boolean silent = False)

Disassembly:
	0x021A3B54 BL 0x338C698
	0x021A3B58 MOV X1, X0
	0x021A3B5C MOV X0, X20
	0x021A3B60 MOV W2, W31
	0x021A3B64 MOV X3, X31
	0x021A3B68 BL 0x3C33114
	0x021A3B6C LDR X8, [X19 + 0x38]
	0x021A3B70 MOV X20, X0
	0x021A3B74 LDR X19, [X8 + 0x8]
	0x021A3B78 LDRB W8, [X19 + 0x135]
	0x021A3B7C TBNZ X8, 0x0, 0x21A3B8C
	0x021A3B80 MOV X0, X19
	0x021A3B84 BL 0x1C5C684
	0x021A3B88 MOV X19, X0
	0x021A3B8C CBZ X20, 0x21A3BAC
	0x021A3B90 MOV X0, X20
	0x021A3B94 MOV X1, X19
	0x021A3B98 BL 0x1C16E00
	0x021A3B9C CBNZ X0, 0x21A3BB0
	0x021A3BA0 MOV X0, X20
	0x021A3BA4 MOV X1, X19
	0x021A3BA8 BL 0x1C171E0
	0x021A3BAC MOV X0, X31
	0x021A3BB0 LDP X20, X19, [X31 + 0x10]
	0x021A3BB4 LDP X30, X21, [X31], #0x20
	0x021A3BB8 RET
	0x021A3BBC STP X29, X30, [X31 - 0x50]!
	0x021A3BC0 STP X26, X25, [X31 + 0x10]
	0x021A3BC4 STP X24, X23, [X31 + 0x20]
	0x021A3BC8 STP X22, X21, [X31 + 0x30]
	0x021A3BCC STP X20, X19, [X31 + 0x40]
	0x021A3BD0 ADD X29, X31, 0x0
	0x021A3BD4 SUB X31, X31, 0x10
	0x021A3BD8 MRS X26, 0xC000
	0x021A3BDC LDR X8, [X26 + 0x28]
	0x021A3BE0 MOV X22, X2
	0x021A3BE4 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move X23, X4
	009 Move W19, W3
	010 Move W21, W2
	011 Move X20, X1
	012 Move X22, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {18}
	015 Move X0, X23
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X0, [X8+8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Call 0x1C17F10
	026 Move X8, [X23+56]
	027 And W3, W21, 1
	028 Move X1, X22
	029 Move X2, X20
	030 Move X4, [X8+16]
	031 Move X23, X0
	032 Move X8, [X4]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Compare X23, 0
	035 JumpIfEqual {48}
	036 And W1, W19, 1
	037 Move X0, X23
	038 Move X2, X31
	039 Call Command.set_silent, X0, X1
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X0, X23
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return X0
	048 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command Parallel(SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BC734 CBZ X20, 0x35BC760
	0x035BC738 LDR X8, [X19 + 0x10]
	0x035BC73C LDR X9, [X19 + 0x20]
	0x035BC740 STR X8, [X19 + 0x18]
	0x035BC744 STR X9, [X19 + 0x40]
	0x035BC748 ADRP X8, 0xFFFFFFFFFE605000
	0x035BC74C ADD X8, X8, 0xB7C
	0x035BC750 STR X8, [X19 + 0x38]
	0x035BC754 LDP X20, X19, [X31 + 0x10]
	0x035BC758 LDP X30, X21, [X31], #0x20
	0x035BC75C RET
	0x035BC760 ADRP X1, 0xFFFFFFFFFD55F000
	0x035BC764 ADD X1, X1, 0xEE3
	0x035BC768 MOV X0, X31
	0x035BC76C BL 0x1C16F3C
	0x035BC770 MOV X1, X31
	0x035BC774 BL 0x1C16DEC
	0x035BC778 LDR X8, [X0 + 0x40]
	0x035BC77C LDR X2, [X0 + 0x18]
	0x035BC780 LDR X1, [X0 + 0x28]
	0x035BC784 MOV X0, X8
	0x035BC788 BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE25000
	006 Move X21, 0xB7C000
	007 Move W8, [X20+303]
	008 Move X21, [X21+2608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB7C000
	015 Move X0, [X0+2608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+303], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call ParallelCommand..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: SpatialSys.CommandLib.Command Parallel(System.String identifier, SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BC7E4 ADRP X20, 0xE24000
	0x035BC7E8 LDRB W8, [X20 + 0x13D]
	0x035BC7EC MOV X19, X0
	0x035BC7F0 TBNZ X8, 0x0, 0x35BC808
	0x035BC7F4 ADRP X0, 0xB38000
	0x035BC7F8 LDR X0, [X0 + 0xEC8]
	0x035BC7FC BL 0x1C16CF4
	0x035BC800 MOVZ W8, 0x1
	0x035BC804 STRB W8, [X20 + 0x13D]
	0x035BC808 LDR X0, [X19 + 0x30]
	0x035BC80C CBZ X0, 0x35BC834
	0x035BC810 ADRP X20, 0xB38000
	0x035BC814 LDR X20, [X20 + 0xEC8]
	0x035BC818 BL 0x35BC7DC
	0x035BC81C LDR X2, [X19 + 0x28]
	0x035BC820 LDR X1, [X20]
	0x035BC824 LDP X20, X19, [X31 + 0x10]
	0x035BC828 MOV X3, X31
	0x035BC82C LDR X30, [X31], #0x20
	0x035BC830 B 0x32274B8
	0x035BC834 LDR X0, [X19 + 0x28]
	0x035BC838 LDP X20, X19, [X31 + 0x10]
	0x035BC83C LDR X30, [X31], #0x20
	0x035BC840 RET
	0x035BC844 LDR W8, [X0 + 0x10]
	0x035BC848 CMP W8, 0x2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE25000
	007 Move X22, 0xB7C000
	008 Move W8, [X21+304]
	009 Move X22, [X22+2608]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7C000
	017 Move X0, [X0+2608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+304], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move X21, X0
	026 Call ParallelCommand..ctor, X0, X1, X2
	027 Move X0, X21
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: SpatialSys.CommandLib.Command Sequence(SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BC94C RET
	0x035BC950 STR X30, [X31 - 0x20]!
	0x035BC954 STP X20, X19, [X31 + 0x10]
	0x035BC958 MOV W19, W1
	0x035BC95C MOV X1, X31
	0x035BC960 MOV X20, X0
	0x035BC964 BL 0x33BDD8C
	0x035BC968 MOV X0, X31
	0x035BC96C STR W19, [X20 + 0x10]
	0x035BC970 BL 0x33C151C
	0x035BC974 STR W0, [X20 + 0x20]
	0x035BC978 LDP X20, X19, [X31 + 0x10]
	0x035BC97C LDR X30, [X31], #0x20
	0x035BC980 RET
	0x035BC984 STP X30, X21, [X31 - 0x20]!
	0x035BC988 STP X20, X19, [X31 + 0x10]
	0x035BC98C MOV X21, X1
	0x035BC990 MOVZ W8, 0x5
	0x035BC994 MOV X1, X31
	0x035BC998 MOV W19, W2
	0x035BC99C MOV X20, X0
	0x035BC9A0 STR W8, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE25000
	006 Move X21, 0xB7C000
	007 Move W8, [X20+305]
	008 Move X21, [X21+2648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB7C000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+305], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call SequenceCommand..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: SpatialSys.CommandLib.Command Sequence(System.String identifier, SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BC9FC MOV X19, X0
	0x035BCA00 TBNZ X8, 0x0, 0x35BCA48
	0x035BCA04 ADRP X0, 0xB37000
	0x035BCA08 LDR X0, [X0 + 0x788]
	0x035BCA0C BL 0x1C16CF4
	0x035BCA10 ADRP X0, 0xB7B000
	0x035BCA14 LDR X0, [X0 + 0xA90]
	0x035BCA18 BL 0x1C16CF4
	0x035BCA1C ADRP X0, 0xB7B000
	0x035BCA20 LDR X0, [X0 + 0xA98]
	0x035BCA24 BL 0x1C16CF4
	0x035BCA28 ADRP X0, 0xB7B000
	0x035BCA2C LDR X0, [X0 + 0xAA0]
	0x035BCA30 BL 0x1C16CF4
	0x035BCA34 ADRP X0, 0xB7B000
	0x035BCA38 LDR X0, [X0 + 0xAA8]
	0x035BCA3C BL 0x1C16CF4
	0x035BCA40 MOVZ W8, 0x1
	0x035BCA44 STRB W8, [X20 + 0x13F]
	0x035BCA48 LDR W8, [X19 + 0x10]
	0x035BCA4C CMP W8, 0x2
	0x035BCA50 B.EQ 0x35BCABC
	0x035BCA54 CMP W8, 0x4
	0x035BCA58 B.EQ 0x35BCABC
	0x035BCA5C MOV X9, X19
	0x035BCA60 LDR X9, [X9 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE25000
	007 Move X22, 0xB7C000
	008 Move W8, [X21+306]
	009 Move X22, [X22+2648]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7C000
	017 Move X0, [X0+2648]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+306], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move X21, X0
	026 Call SequenceCommand..ctor, X0, X1, X2
	027 Move X0, X21
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: SpatialSys.CommandLib.Command Condition(SpatialSys.CommandLib.CommandCondition condition, SpatialSys.CommandLib.Command trueCommand, SpatialSys.CommandLib.Command falseCommand, System.Boolean silent = False)

Disassembly:
	0x035BCB64 STP X20, X19, [X31 + 0x30]
	0x035BCB68 LDR X8, [X0]
	0x035BCB6C MOV X19, X0
	0x035BCB70 LDP X9, X1, [X8 + 0x1A8]
	0x035BCB74 BLR X9
	0x035BCB78 LDP X20, X19, [X31 + 0x30]
	0x035BCB7C LDP X22, X21, [X31 + 0x20]
	0x035BCB80 LDP X24, X23, [X31 + 0x10]
	0x035BCB84 LDP X30, X25, [X31], #0x40
	0x035BCB88 RET
	0x035BCB8C CMP W1, 0x1
	0x035BCB90 MOV X20, X0
	0x035BCB94 B.NE 0x35BCD48
	0x035BCB98 MOV X0, X20
	0x035BCB9C BL 0x3EB1AD0
	0x035BCBA0 MOV X20, X0
	0x035BCBA4 ADRP X0, 0xB37000
	0x035BCBA8 LDR X0, [X0 + 0x7D0]
	0x035BCBAC BL 0x1C16D08
	0x035BCBB0 LDR X8, [X20]
	0x035BCBB4 LDR X1, [X8]
	0x035BCBB8 BL 0x1C17270
	0x035BCBBC TBZ X0, 0x0, 0x35BCD1C
	0x035BCBC0 LDR X20, [X20]
	0x035BCBC4 BL 0x3EB1AE0
	0x035BCBC8 MOV X0, X19
	0x035BCBCC BL 0x35BC884
	0x035BCBD0 CMP W0, 0x1
	0x035BCBD4 B.LT 0x35BCB78
	0x035BCBD8 MOV X0, X19
	0x035BCBDC BL 0x35BC7DC
	0x035BCBE0 MOV X21, X0
	0x035BCBE4 ADRP X0, 0xB7B000
	0x035BCBE8 LDR X0, [X0 + 0xAA0]
	0x035BCBEC BL 0x1C16D08
	0x035BCBF0 MOV X22, X0
	0x035BCBF4 ADRP X0, 0xB7B000
	0x035BCBF8 LDR X0, [X0 + 0xAB0]
	0x035BCBFC BL 0x1C16D08
	0x035BCC00 MOV X2, X0
	0x035BCC04 MOV X0, X22
	0x035BCC08 MOV X1, X21
	0x035BCC0C MOV X3, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE25000
	009 Move X24, 0xB7C000
	010 Move W8, [X20+307]
	011 Move X24, [X24+2664]
	012 Move W19, W3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB7C000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+307], W8
	025 Move X0, [X24]
	026 Call 0x1C17F10
	027 Move X1, X23
	028 Move X2, X22
	029 Move X3, X21
	030 Move X20, X0
	031 Call ConditionalCommand..ctor, X0, X1, X2, X3
	032 Compare X20, 0
	033 JumpIfEqual {53}
	034 Move W8, [X20+32]
	035 Move TEMP, X19
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {41}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, 2
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, 5
	043 Move [X20+32], W8
	044 Move X0, X20
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X24, [X31+16]
	050 Move X23, [X31+24]
	051 Move X30, [X31+64]
	052 Return X0
	053 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command Condition(System.String identifier, SpatialSys.CommandLib.CommandCondition condition, SpatialSys.CommandLib.Command trueCommand, SpatialSys.CommandLib.Command falseCommand, System.Boolean silent = False)

Disassembly:
	0x035BCC88 ADRP X0, 0xB37000
	0x035BCC8C LDR X0, [X0 + 0x8B0]
	0x035BCC90 BL 0x1C16D08
	0x035BCC94 MOV X23, X0
	0x035BCC98 MOV X0, X25
	0x035BCC9C BL 0x1C16D08
	0x035BCCA0 MOV X3, X0
	0x035BCCA4 MOV X0, X22
	0x035BCCA8 MOV X1, X23
	0x035BCCAC MOV X2, X19
	0x035BCCB0 BL 0x2AA5098
	0x035BCCB4 ADRP X0, 0xB37000
	0x035BCCB8 LDR X0, [X0 + 0x788]
	0x035BCCBC BL 0x1C16D08
	0x035BCCC0 LDR W8, [X0 + 0xE0]
	0x035BCCC4 CBNZ W8, 0x35BCCCC
	0x035BCCC8 BL 0x1C16DFC
	0x035BCCCC ADRP X0, 0xB7B000
	0x035BCCD0 LDR X0, [X0 + 0xAA8]
	0x035BCCD4 BL 0x1C16D08
	0x035BCCD8 MOV X19, X0
	0x035BCCDC ADRP X0, 0xB7B000
	0x035BCCE0 LDR X0, [X0 + 0xAC0]
	0x035BCCE4 BL 0x1C16D08
	0x035BCCE8 MOV X1, X21
	0x035BCCEC MOV X2, X20
	0x035BCCF0 MOV X3, X22
	0x035BCCF4 MOV X4, X19
	0x035BCCF8 LDP X20, X19, [X31 + 0x30]
	0x035BCCFC LDP X22, X21, [X31 + 0x20]
	0x035BCD00 LDP X24, X23, [X31 + 0x10]
	0x035BCD04 MOV X5, X0
	0x035BCD08 MOVZ W0, 0x400
	0x035BCD0C MOVZ W6, 0x105
	0x035BCD10 MOV X7, X31
	0x035BCD14 LDP X30, X25, [X31], #0x40
	0x035BCD18 B 0x35C2674
	0x035BCD1C MOVZ W0, 0x8
	0x035BCD20 BL 0x3EB1AF0
	0x035BCD24 LDR X8, [X20]
	0x035BCD28 STR X8, [X0]
	0x035BCD2C ADRP X1, 0x8F8000
	0x035BCD30 ADD X1, X1, 0xE58
	0x035BCD34 MOV X2, X31
	0x035BCD38 BL 0x3EB1B00
	0x035BCD3C BL 0x1C16F20
	0x035BCD40 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xE25000
	010 Move X25, 0xB7C000
	011 Move W8, [X21+308]
	012 Move X25, [X25+2664]
	013 Move W19, W4
	014 Move X20, X3
	015 Move X22, X2
	016 Move X23, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xB7C000
	023 Move X0, [X0+2664]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+308], W8
	027 Move X0, [X25]
	028 Call 0x1C17F10
	029 Move W2, 1
	030 Move X1, X24
	031 Move X21, X0
	032 Call Command..ctor, X0, X1, X2
	033 Move [X21+56], X23
	034 Move [X21+64], X22
	035 Move [X21+72], X20
	036 Compare X22, 0
	037 JumpIfEqual {39}
	038 Move [X22+48], X21
	039 Compare X20, 0
	040 JumpIfEqual {42}
	041 Move [X20+48], X21
	042 Move W8, [X21+32]
	043 Move TEMP, X19
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {49}
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, 2
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, 5
	051 Move [X21+32], W8
	052 Move X0, X21
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Move X25, [X31+72]
	061 Return X0

Method: SpatialSys.CommandLib.Command Require(SpatialSys.CommandLib.CommandCondition condition, SpatialSys.CommandLib.Command[] sequence)

Disassembly:
	0x035BCD90 BL 0x1C16CF4
	0x035BCD94 ADRP X0, 0xB37000
	0x035BCD98 LDR X0, [X0 + 0x720]
	0x035BCD9C BL 0x1C16CF4
	0x035BCDA0 ADRP X0, 0xB7B000
	0x035BCDA4 LDR X0, [X0 + 0xAC8]
	0x035BCDA8 BL 0x1C16CF4
	0x035BCDAC ADRP X0, 0xB7B000
	0x035BCDB0 LDR X0, [X0 + 0xAD0]
	0x035BCDB4 BL 0x1C16CF4
	0x035BCDB8 ADRP X0, 0xB37000
	0x035BCDBC LDR X0, [X0 + 0xE00]
	0x035BCDC0 BL 0x1C16CF4
	0x035BCDC4 ADRP X0, 0xB7B000
	0x035BCDC8 LDR X0, [X0 + 0xAD8]
	0x035BCDCC BL 0x1C16CF4
	0x035BCDD0 ADRP X0, 0xB7B000
	0x035BCDD4 LDR X0, [X0 + 0x938]
	0x035BCDD8 BL 0x1C16CF4
	0x035BCDDC ADRP X0, 0xB37000
	0x035BCDE0 LDR X0, [X0 + 0xE18]
	0x035BCDE4 BL 0x1C16CF4
	0x035BCDE8 ADRP X0, 0xB37000
	0x035BCDEC LDR X0, [X0 + 0x788]
	0x035BCDF0 BL 0x1C16CF4
	0x035BCDF4 ADRP X0, 0xB37000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE25000
	007 Move X22, 0xB7C000
	008 Move W8, [X21+309]
	009 Move X22, [X22+2672]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7C000
	017 Move X0, [X0+2672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+309], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move X21, X0
	026 Call RequireCommand..ctor, X0, X1, X2
	027 Move X0, X21
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: SpatialSys.CommandLib.Command Require(System.String identifier, SpatialSys.CommandLib.CommandCondition condition, SpatialSys.CommandLib.Command[] sequence)

Disassembly:
	0x035BCE4C LDR X0, [X0 + 0xAA0]
	0x035BCE50 BL 0x1C16CF4
	0x035BCE54 ADRP X0, 0xB37000
	0x035BCE58 LDR X0, [X0 + 0x8B0]
	0x035BCE5C BL 0x1C16CF4
	0x035BCE60 ADRP X0, 0xB7B000
	0x035BCE64 LDR X0, [X0 + 0xAA8]
	0x035BCE68 BL 0x1C16CF4
	0x035BCE6C ADRP X0, 0xB7B000
	0x035BCE70 LDR X0, [X0 + 0xB00]
	0x035BCE74 BL 0x1C16CF4
	0x035BCE78 MOVZ W8, 0x1
	0x035BCE7C STRB W8, [X22 + 0x140]
	0x035BCE80 LDR W8, [X21 + 0x10]
	0x035BCE84 CMP W8, 0x2
	0x035BCE88 B.EQ 0x35BD43C
	0x035BCE8C CMP W8, 0x4
	0x035BCE90 B.EQ 0x35BD43C
	0x035BCE94 MOV X9, X21
	0x035BCE98 LDR X9, [X9 + 0x30]
	0x035BCE9C CBZ X9, 0x35BCEB0
	0x035BCEA0 LDR W10, [X9 + 0x10]
	0x035BCEA4 CMP W10, 0x2
	0x035BCEA8 B.NE 0x35BCE98
	0x035BCEAC B 0x35BD43C
	0x035BCEB0 CMP W8, 0x3
	0x035BCEB4 B.EQ 0x35BD43C
	0x035BCEB8 MOV X8, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE25000
	008 Move X23, 0xB7C000
	009 Move W8, [X22+310]
	010 Move X23, [X23+2672]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB7C000
	019 Move X0, [X0+2672]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+310], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X21
	026 Move X2, X20
	027 Move X3, X19
	028 Move X22, X0
	029 Call RequireCommand..ctor, X0, X1, X2, X3
	030 Move X0, X22
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Return X0

Method: SpatialSys.CommandLib.Command Coroutine(SpatialSys.CommandLib.CoroutineGenerator coroutine, System.Boolean silent = False)

Disassembly:
	0x035BCFC4 LDR X8, [X8 + 0xAA8]
	0x035BCFC8 LDR X9, [X9 + 0xB00]
	0x035BCFCC MOVZ W0, 0x400
	0x035BCFD0 MOVZ W5, 0xD8
	0x035BCFD4 LDR X3, [X8]
	0x035BCFD8 LDR X4, [X9]
	0x035BCFDC MOV X1, X22
	0x035BCFE0 MOV X2, X31
	0x035BCFE4 MOV X6, X31
	0x035BCFE8 BL 0x35C229C
	0x035BCFEC B 0x35BD174
	0x035BCFF0 CMP W0, 0x1
	0x035BCFF4 B.LT 0x35BD174
	0x035BCFF8 ADRP X8, 0xB37000
	0x035BCFFC LDR X8, [X8 + 0xAC8]
	0x035BD000 MOVZ W1, 0x5
	0x035BD004 LDR X0, [X8]
	0x035BD008 BL 0x1C16D6C
	0x035BD00C CBZ X0, 0x35BD474
	0x035BD010 LDR W8, [X0 + 0x18]
	0x035BD014 MOV X22, X0
	0x035BD018 CBZ W8, 0x35BD470
	0x035BD01C ADRP X8, 0xB7A000
	0x035BD020 LDR X8, [X8 + 0xAA0]
	0x035BD024 MOV X0, X21
	0x035BD028 LDR X8, [X8]
	0x035BD02C STR X8, [X22 + 0x20]
	0x035BD030 BL 0x35BC7DC
	0x035BD034 LDR W8, [X22 + 0x18]
	0x035BD038 CMP W8, 0x1
	0x035BD03C B.LS 0x35BD470
	0x035BD040 CMP W8, 0x2
	0x035BD044 STR X0, [X22 + 0x28]
	0x035BD048 B.EQ 0x35BD470
	0x035BD04C ADRP X8, 0xB7A000
	0x035BD050 LDR X8, [X8 + 0xAF0]
	0x035BD054 LDR X8, [X8]
	0x035BD058 STR X8, [X22 + 0x30]
	0x035BD05C CBZ X19, 0x35BD474
	0x035BD060 MOV X0, X19
	0x035BD064 MOV X1, X31
	0x035BD068 BL 0x33B32AC
	0x035BD06C CBZ X0, 0x35BD474
	0x035BD070 LDR X8, [X0]
	0x035BD074 LDP X9, X1, [X8 + 0x1A8]
	0x035BD078 BLR X9
	0x035BD07C LDR W8, [X22 + 0x18]
	0x035BD080 CMP W8, 0x3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE25000
	007 Move W8, [X21+311]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB7C000
	015 Move X0, [X0+2680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+311], W8
	019 Compare X20, 0
	020 JumpIfEqual {58}
	021 Move X0, X20
	022 Move X1, X31
	023 Call Delegate.get_Method, X0
	024 Compare X0, 0
	025 JumpIfEqual {58}
	026 Move X8, [X0]
	027 Move X21, 0xB7B000
	028 Move X9, [X8+424]
	029 Move X1, [X8+432]
	030 Move X21, [X21+2680]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X21]
	033 Move X22, X0
	034 Move X0, X8
	035 Call 0x1C17F10
	036 Move W2, 1
	037 Move X1, X22
	038 Move X21, X0
	039 Call Command..ctor, X0, X1, X2
	040 Move W8, [X21+32]
	041 Move [X21+56], X20
	042 Move TEMP, X19
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {48}
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, 2
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, 5
	050 Move [X21+32], W8
	051 Move X0, X21
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Return X0
	058 Call 0x1C17F20

Method: SpatialSys.CommandLib.Command Coroutine(System.String identifier, SpatialSys.CommandLib.CoroutineGenerator coroutine, System.Boolean silent = False)

Disassembly:
	0x035BD0AC BL 0x32278CC
	0x035BD0B0 ADRP X8, 0xB36000
	0x035BD0B4 LDR X8, [X8 + 0x720]
	0x035BD0B8 MOV X22, X0
	0x035BD0BC LDR X8, [X8]
	0x035BD0C0 MOV X0, X8
	0x035BD0C4 BL 0x1C16F10
	0x035BD0C8 ADRP X8, 0xB36000
	0x035BD0CC LDR X8, [X8 + 0x718]
	0x035BD0D0 MOV X23, X0
	0x035BD0D4 LDR X1, [X8]
	0x035BD0D8 BL 0x2AA4804
	0x035BD0DC MOV X0, X21
	0x035BD0E0 BL 0x35BC7DC
	0x035BD0E4 CBZ X23, 0x35BD474
	0x035BD0E8 ADRP X8, 0xB7A000
	0x035BD0EC ADRP X24, 0xB36000
	0x035BD0F0 LDR X8, [X8 + 0xAB8]
	0x035BD0F4 LDR X24, [X24 + 0x710]
	0x035BD0F8 MOV X2, X0
	0x035BD0FC MOV X0, X23
	0x035BD100 LDR X1, [X8]
	0x035BD104 LDR X3, [X24]
	0x035BD108 BL 0x2AA5098
	0x035BD10C ADRP X8, 0xB36000
	0x035BD110 LDR X8, [X8 + 0x8B0]
	0x035BD114 LDR X3, [X24]
	0x035BD118 MOV X0, X23
	0x035BD11C MOV X2, X21
	0x035BD120 LDR X1, [X8]
	0x035BD124 BL 0x2AA5098
	0x035BD128 ADRP X8, 0xB36000
	0x035BD12C LDR X8, [X8 + 0x788]
	0x035BD130 LDR X0, [X8]
	0x035BD134 LDR W8, [X0 + 0xE0]
	0x035BD138 CBNZ W8, 0x35BD140
	0x035BD13C BL 0x1C16DFC
	0x035BD140 ADRP X8, 0xB7A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE24000
	008 Move X23, 0xB7B000
	009 Move W8, [X21+312]
	010 Move X23, [X23+2680]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB7B000
	019 Move X0, [X0+2680]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+312], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move W2, 1
	026 Move X1, X22
	027 Move X21, X0
	028 Call Command..ctor, X0, X1, X2
	029 Move W8, [X21+32]
	030 Move [X21+56], X20
	031 Move TEMP, X19
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {37}
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 2
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, 5
	039 Move [X21+32], W8
	040 Move X0, X21
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return X0

Method: SpatialSys.CommandLib.Command ChooseRandom(SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BD144 ADRP X9, 0xB7A000
	0x035BD148 LDR X8, [X8 + 0xAA8]
	0x035BD14C LDR X9, [X9 + 0xB00]
	0x035BD150 MOVZ W0, 0x400
	0x035BD154 MOVZ W6, 0xCC
	0x035BD158 LDR X4, [X8]
	0x035BD15C LDR X5, [X9]
	0x035BD160 MOV X1, X22
	0x035BD164 MOV X2, X19
	0x035BD168 MOV X3, X23
	0x035BD16C MOV X7, X31
	0x035BD170 BL 0x35C2674
	0x035BD174 LDR X8, [X21]
	0x035BD178 MOV X0, X21
	0x035BD17C LDP X9, X1, [X8 + 0x178]
	0x035BD180 BLR X9
	0x035BD184 ADRP X25, 0xB7A000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {18}
	005 Move W8, [X0+24]
	006 Move X19, X0
	007 Move W0, W31
	008 Move X2, X31
	009 Subtract W1, W8, 1
	010 Call Random.Range, X0, X1
	011 Move W8, [X19+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X8, X19, W0
	014 Move X0, [X8+32]
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0
	018 Call 0x1C17F20
	019 Call 0x1C17F28

Method: SpatialSys.CommandLib.Command ChooseRandom(System.Int32 seed, SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BD188 LDR X25, [X25 + 0xAE8]
	0x035BD18C MOV X22, X0
	0x035BD190 LDR X8, [X25]
	0x035BD194 LDR W9, [X8 + 0xE0]
	0x035BD198 CBNZ W9, 0x35BD1A8
	0x035BD19C MOV X0, X8
	0x035BD1A0 BL 0x1C16DFC
	0x035BD1A4 LDR X8, [X25]
	0x035BD1A8 LDR X9, [X8 + 0xB8]
	0x035BD1AC LDR X23, [X9 + 0x8]
	0x035BD1B0 CBNZ X23, 0x35BD208
	0x035BD1B4 LDR W9, [X8 + 0xE0]
	0x035BD1B8 CBNZ W9, 0x35BD1C8
	0x035BD1BC MOV X0, X8
	0x035BD1C0 BL 0x1C16DFC
	0x035BD1C4 LDR X8, [X25]
	0x035BD1C8 ADRP X9, 0xB7A000
	0x035BD1CC LDR X8, [X8 + 0xB8]
	0x035BD1D0 LDR X9, [X9 + 0xAD0]
	0x035BD1D4 LDR X24, [X8]
	0x035BD1D8 LDR X0, [X9]
	0x035BD1DC BL 0x1C16F10
	0x035BD1E0 ADRP X8, 0xB7A000
	0x035BD1E4 LDR X8, [X8 + 0xAE0]
	0x035BD1E8 MOV X1, X24
	0x035BD1EC MOV X3, X31
	0x035BD1F0 MOV X23, X0
	0x035BD1F4 LDR X2, [X8]
	0x035BD1F8 BL 0x2D2F428
	0x035BD1FC LDR X8, [X25]
	0x035BD200 LDR X8, [X8 + 0xB8]
	0x035BD204 STR X23, [X8 + 0x8]
	0x035BD208 ADRP X8, 0xB7A000
	0x035BD20C LDR X8, [X8 + 0xAC8]
	0x035BD210 MOV X0, X22
	0x035BD214 MOV X1, X23
	0x035BD218 LDR X2, [X8]
	0x035BD21C BL 0x21DA490
	0x035BD220 CBZ X0, 0x35BD474
	0x035BD224 ADRP X10, 0xB7A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE24000
	007 Move X22, 0xB3E000
	008 Move W8, [X21+313]
	009 Move X22, [X22+744]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB3E000
	017 Move X0, [X0+744]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+313], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move W1, W20
	024 Move X2, X31
	025 Move X21, X0
	026 Call Random..ctor, X0, X1
	027 Compare X19, 0
	028 JumpIfEqual {48}
	029 Compare X21, 0
	030 JumpIfEqual {48}
	031 Move X8, [X21]
	032 Move W9, [X19+24]
	033 Move X0, X21
	034 Move X10, [X8+424]
	035 Move X2, [X8+432]
	036 Subtract W1, W9, 1
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move W8, [X19+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X19, W0
	041 Move X0, [X8+32]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return X0
	048 Call 0x1C17F20
	049 Call 0x1C17F28

Method: SpatialSys.CommandLib.TaskCommand`1<T> Task(SpatialSys.CommandLib.TaskGenerator`1<T> taskGenerator, System.Boolean silent = False, SpatialSys.CommandLib.Command parentCommand = null)

Disassembly:
	0x021A3BE8 MOV X24, X0
	0x021A3BEC STUR X8, [X29 - 0x8]
	0x021A3BF0 LDR X25, [X2 + 0x38]
	0x021A3BF4 CBNZ X25, 0x21A3C18
	0x021A3BF8 ADRP X0, 0x1F50000
	0x021A3BFC LDR X0, [X0 + 0x6C0]
	0x021A3C00 BL 0x1C16CF4
	0x021A3C04 LDR X25, [X22 + 0x38]
	0x021A3C08 CBNZ X25, 0x21A3C18
	0x021A3C0C MOV X0, X22
	0x021A3C10 BL 0x1C5C6E0
	0x021A3C14 LDR X25, [X22 + 0x38]
	0x021A3C18 LDR X8, [X25 + 0x8]
	0x021A3C1C LDR W20, [X8 + 0xFC]
	0x021A3C20 ADD X8, X31, 0x0
	0x021A3C24 ADD X9, X20, 0xF
	0x021A3C28 AND X9, X9, 0x1FFFFFFFF
	0x021A3C2C SUB X21, X8, X9
	0x021A3C30 ADD X31, X21, 0x0
	0x021A3C34 ADD X8, X31, 0x0
	0x021A3C38 SUB X23, X8, X9
	0x021A3C3C ADD X31, X23, 0x0
	0x021A3C40 MOV X0, X23
	0x021A3C44 MOV W1, W31
	0x021A3C48 MOV X2, X20
	0x021A3C4C BL 0x3EB1B10
	0x021A3C50 ADRP X8, 0x1F50000
	0x021A3C54 LDR X8, [X8 + 0x6C0]
	0x021A3C58 LDR X25, [X25]
	0x021A3C5C LDR X0, [X8]
	0x021A3C60 LDR W8, [X0 + 0xE0]
	0x021A3C64 CBNZ W8, 0x21A3C6C
	0x021A3C68 BL 0x1C16DFC
	0x021A3C6C MOV X0, X25
	0x021A3C70 MOV X1, X31
	0x021A3C74 BL 0x338C698
	0x021A3C78 MOV X1, X0
	0x021A3C7C MOV X0, X24
	0x021A3C80 MOV W2, W31
	0x021A3C84 MOV X3, X31
	0x021A3C88 BL 0x3C33114
	0x021A3C8C LDR X8, [X22 + 0x38]
	0x021A3C90 MOV X22, X0
	0x021A3C94 LDR X1, [X8 + 0x8]
	0x021A3C98 LDRB W8, [X1 + 0x135]
	0x021A3C9C TBNZ X8, 0x0, 0x21A3CAC
	0x021A3CA0 MOV X0, X1
	0x021A3CA4 BL 0x1C5C684
	0x021A3CA8 MOV X1, X0
	0x021A3CAC MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X19, X3
	009 Move X22, X2
	010 Move W20, W1
	011 Move X23, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X19
	015 Call 0x1C5D6E0
	016 Move X8, [X19+56]
	017 Move X0, [X8+8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X19+56]
	026 Move X1, X23
	027 Move X2, X22
	028 Move X21, X0
	029 Move X3, [X8+16]
	030 Call TaskCommand`1<Object>..ctor, X0, X1, X2
	031 Compare X21, 0
	032 JumpIfEqual {62}
	033 And W1, W20, 1
	034 Move X0, X21
	035 Move X2, X31
	036 Call Command.set_silent, X0, X1
	037 Move X8, [X19+56]
	038 Move X0, [X8+8]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X21]
	046 Move W9, [X0+304]
	047 Move W10, [X8+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X31
	050 Move X8, [X8+200]
	051 Add X8, X8, X9
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return X0
	062 Call 0x1C17F20

Method: SpatialSys.CommandLib.TaskCommand`1<T> Task(System.String identifier, SpatialSys.CommandLib.TaskGenerator`1<T> taskGenerator, System.Boolean silent = False, SpatialSys.CommandLib.Command parentCommand = null)

Disassembly:
	0x021A422C MOV X0, X31
	0x021A4230 LDP X20, X19, [X31 + 0x20]
	0x021A4234 LDP X22, X21, [X31 + 0x10]
	0x021A4238 LDR X30, [X31], #0x30
	0x021A423C RET
	0x021A4240 STP X29, X30, [X31 - 0x60]!
	0x021A4244 STR X27, [X31 + 0x10]
	0x021A4248 STP X26, X25, [X31 + 0x20]
	0x021A424C STP X24, X23, [X31 + 0x30]
	0x021A4250 STP X22, X21, [X31 + 0x40]
	0x021A4254 STP X20, X19, [X31 + 0x50]
	0x021A4258 ADD X29, X31, 0x0
	0x021A425C SUB X31, X31, 0x10
	0x021A4260 MRS X27, 0xC000
	0x021A4264 LDR X8, [X27 + 0x28]
	0x021A4268 MOV X21, X3
	0x021A426C MOV X19, X2
	0x021A4270 MOV W23, W1
	0x021A4274 STUR X8, [X29 - 0x8]
	0x021A4278 LDR X26, [X3 + 0x38]
	0x021A427C MOV X25, X0
	0x021A4280 CBNZ X26, 0x21A42A4
	0x021A4284 ADRP X0, 0x1F4F000
	0x021A4288 LDR X0, [X0 + 0x6C0]
	0x021A428C BL 0x1C16CF4
	0x021A4290 LDR X26, [X21 + 0x38]
	0x021A4294 CBNZ X26, 0x21A42A4
	0x021A4298 MOV X0, X21
	0x021A429C BL 0x1C5C6E0
	0x021A42A0 LDR X26, [X21 + 0x38]
	0x021A42A4 LDR X8, [X26 + 0x8]
	0x021A42A8 LDR W20, [X8 + 0xFC]
	0x021A42AC ADD X8, X31, 0x0
	0x021A42B0 ADD X9, X20, 0xF
	0x021A42B4 AND X9, X9, 0x1FFFFFFFF
	0x021A42B8 SUB X22, X8, X9
	0x021A42BC ADD X31, X22, 0x0
	0x021A42C0 ADD X8, X31, 0x0
	0x021A42C4 SUB X24, X8, X9
	0x021A42C8 ADD X31, X24, 0x0
	0x021A42CC MOV X0, X24
	0x021A42D0 MOV W1, W31
	0x021A42D4 MOV X2, X20
	0x021A42D8 BL 0x3EB1B10
	0x021A42DC ADRP X8, 0x1F4F000
	0x021A42E0 LDR X8, [X8 + 0x6C0]
	0x021A42E4 LDR X26, [X26]
	0x021A42E8 LDR X0, [X8]
	0x021A42EC LDR W8, [X0 + 0xE0]
	0x021A42F0 CBNZ W8, 0x21A42F8
	0x021A42F4 BL 0x1C16DFC
	0x021A42F8 MOV X0, X26
	0x021A42FC MOV X1, X31
	0x021A4300 BL 0x338C698

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X19, X4
	010 Move X22, X3
	011 Move W20, W2
	012 Move X23, X1
	013 Move X24, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, [X19+56]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Call 0x1C17F10
	027 Move X8, [X19+56]
	028 Move X1, X24
	029 Move X2, X23
	030 Move X3, X22
	031 Move X4, [X8+16]
	032 Move X21, X0
	033 Call 0x2679198, X0, X1, X2, X3
	034 Compare X21, 0
	035 JumpIfEqual {66}
	036 And W1, W20, 1
	037 Move X0, X21
	038 Move X2, X31
	039 Call Command.set_silent, X0, X1
	040 Move X8, [X19+56]
	041 Move X0, [X8+8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X21]
	049 Move W9, [X0+304]
	050 Move W10, [X8+304]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X31
	053 Move X8, [X8+200]
	054 Add X8, X8, X9
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Return X0
	066 Call 0x1C17F20

Method: SpatialSys.CommandLib.TaskCommand Task(SpatialSys.CommandLib.TaskGenerator taskGenerator, System.Boolean silent = False, SpatialSys.CommandLib.Command parentCommand = null)

Disassembly:
	0x035BD228 LDR X8, [X0]
	0x035BD22C LDR X10, [X10 + 0xAD8]
	0x035BD230 MOV X22, X0
	0x035BD234 LDRH W9, [X8 + 0x12E]
	0x035BD238 LDR X1, [X10]
	0x035BD23C CBZ X9, 0x35BD260
	0x035BD240 LDR X10, [X8 + 0xB0]
	0x035BD244 ADD X10, X10, 0x8
	0x035BD248 LDUR X11, [X10 - 0x8]
	0x035BD24C CMP X11, X1
	0x035BD250 B.EQ 0x35BD270
	0x035BD254 SUBS X9, X9, 0x1
	0x035BD258 ADD X10, X10, 0x10
	0x035BD25C B.NE 0x35BD248
	0x035BD260 MOV X0, X22
	0x035BD264 MOV W2, W31
	0x035BD268 BL 0x1C5C788
	0x035BD26C B 0x35BD27C
	0x035BD270 LDRSW X9, [X10]
	0x035BD274 ADD X8, X8, X9, 0x4, LSL
	0x035BD278 ADD X0, X8, 0x138
	0x035BD27C LDP X8, X1, [X0]
	0x035BD280 MOV X0, X22
	0x035BD284 BLR X8
	0x035BD288 MOV X22, X0
	0x035BD28C CBZ X0, 0x35BD478
	0x035BD290 ADRP X23, 0xB36000
	0x035BD294 ADRP X24, 0xB7A000
	0x035BD298 LDR X23, [X23 + 0xE18]
	0x035BD29C LDR X24, [X24 + 0x938]
	0x035BD2A0 LDR X8, [X22]
	0x035BD2A4 LDR X1, [X23]
	0x035BD2A8 LDRH W9, [X8 + 0x12E]
	0x035BD2AC CBZ X9, 0x35BD2D0
	0x035BD2B0 LDR X10, [X8 + 0xB0]
	0x035BD2B4 ADD X10, X10, 0x8
	0x035BD2B8 LDUR X11, [X10 - 0x8]
	0x035BD2BC CMP X11, X1
	0x035BD2C0 B.EQ 0x35BD2E0
	0x035BD2C4 SUBS X9, X9, 0x1
	0x035BD2C8 ADD X10, X10, 0x10
	0x035BD2CC B.NE 0x35BD2B8
	0x035BD2D0 MOV X0, X22
	0x035BD2D4 MOV W2, W31
	0x035BD2D8 BL 0x1C5C788
	0x035BD2DC B 0x35BD2EC
	0x035BD2E0 LDRSW X9, [X10]
	0x035BD2E4 ADD X8, X8, X9, 0x4, LSL
	0x035BD2E8 ADD X0, X8, 0x138
	0x035BD2EC LDP X8, X1, [X0]
	0x035BD2F0 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xE24000
	008 Move X23, 0xB7B000
	009 Move W8, [X19+314]
	010 Move X23, [X23+2688]
	011 Move X21, X2
	012 Move W20, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB7B000
	019 Move X0, [X0+2688]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+314], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X22
	026 Move X2, X21
	027 Move X19, X0
	028 Call TaskCommand..ctor, X0, X1, X2
	029 Compare X19, 0
	030 JumpIfEqual {59}
	031 Move W8, [X19+32]
	032 Move TEMP, X20
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {38}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 2
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, 5
	040 Move [X19+32], W8
	041 Move X9, [X19]
	042 Move X8, [X23]
	043 Move W11, [X9+304]
	044 Move W10, [X8+304]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X31
	047 Move X9, [X9+200]
	048 Add X9, X9, X10
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return X0
	059 Call 0x1C17F20

Method: SpatialSys.CommandLib.TaskCommand Task(System.String identifier, SpatialSys.CommandLib.TaskGenerator taskGenerator, System.Boolean silent = False, SpatialSys.CommandLib.Command parentCommand = null)

Disassembly:
	0x035BD358 MOV X1, X20
	0x035BD35C MOV X2, X19
	0x035BD360 BL 0x35BCD54
	0x035BD364 B 0x35BD2A0
	0x035BD368 MOV X23, X31
	0x035BD36C CBZ X22, 0x35BD3D0
	0x035BD370 ADRP X10, 0xB36000
	0x035BD374 LDR X8, [X22]
	0x035BD378 LDR X10, [X10 + 0xE00]
	0x035BD37C LDRH W9, [X8 + 0x12E]
	0x035BD380 LDR X1, [X10]
	0x035BD384 CBZ X9, 0x35BD3A8
	0x035BD388 LDR X10, [X8 + 0xB0]
	0x035BD38C ADD X10, X10, 0x8
	0x035BD390 LDUR X11, [X10 - 0x8]
	0x035BD394 CMP X11, X1
	0x035BD398 B.EQ 0x35BD3B8
	0x035BD39C SUBS X9, X9, 0x1
	0x035BD3A0 ADD X10, X10, 0x10
	0x035BD3A4 B.NE 0x35BD390
	0x035BD3A8 MOV X0, X22
	0x035BD3AC MOV W2, W31
	0x035BD3B0 BL 0x1C5C788
	0x035BD3B4 B 0x35BD3C4
	0x035BD3B8 LDRSW X9, [X10]
	0x035BD3BC ADD X8, X8, X9, 0x4, LSL
	0x035BD3C0 ADD X0, X8, 0x138
	0x035BD3C4 LDP X8, X1, [X0]
	0x035BD3C8 MOV X0, X22
	0x035BD3CC BLR X8
	0x035BD3D0 CBNZ X23, 0x35BD47C
	0x035BD3D4 MOV X0, X21
	0x035BD3D8 BL 0x35BCB58
	0x035BD3DC LDRB W8, [X21 + 0x14]
	0x035BD3E0 CBZ W8, 0x35BD43C
	0x035BD3E4 LDR X0, [X21 + 0x30]
	0x035BD3E8 CBZ X0, 0x35BD43C
	0x035BD3EC LDR W8, [X0 + 0x10]
	0x035BD3F0 CMP W8, 0x2
	0x035BD3F4 B.EQ 0x35BD43C
	0x035BD3F8 CMP W8, 0x4
	0x035BD3FC B.EQ 0x35BD43C
	0x035BD400 MOV X9, X0
	0x035BD404 LDR X9, [X9 + 0x30]
	0x035BD408 CBZ X9, 0x35BD41C
	0x035BD40C LDR W10, [X9 + 0x10]
	0x035BD410 CMP W10, 0x2
	0x035BD414 B.NE 0x35BD404
	0x035BD418 B 0x35BD43C
	0x035BD41C CMP W8, 0x3
	0x035BD420 B.EQ 0x35BD43C
	0x035BD424 MOV X8, X0
	0x035BD428 LDR X8, [X8 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xE24000
	009 Move X24, 0xB7B000
	010 Move W8, [X19+315]
	011 Move X24, [X24+2688]
	012 Move X20, X3
	013 Move W21, W2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB7B000
	021 Move X0, [X0+2688]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+315], W8
	025 Move X0, [X24]
	026 Call 0x1C17F10
	027 Move W2, 1
	028 Move X1, X23
	029 Move X19, X0
	030 Call Command..ctor, X0, X1, X2
	031 Move W8, [X19+32]
	032 Move [X19+48], X20
	033 Move [X19+56], X22
	034 Move TEMP, X21
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {40}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, 2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, 5
	042 Move [X19+32], W8
	043 Move X9, [X19]
	044 Move X8, [X24]
	045 Move W11, [X9+304]
	046 Move W10, [X8+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X31
	049 Move X9, [X9+200]
	050 Add X9, X9, X10
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Return X0

Method: SpatialSys.CommandLib.Command SetCommandSilent(SpatialSys.CommandLib.Command cmd, System.Boolean silent)

Disassembly:
	0x035BD458 LDP X20, X19, [X31 + 0x30]
	0x035BD45C LDP X22, X21, [X31 + 0x20]
	0x035BD460 LDP X24, X23, [X31 + 0x10]
	0x035BD464 LDP X30, X25, [X31], #0x40
	0x035BD468 B 0x35BCD54
	0x035BD46C BL 0x1C16F20
	0x035BD470 BL 0x1C16F28
	0x035BD474 BL 0x1C16F20
	0x035BD478 BL 0x1C16F20
	0x035BD47C MOV X0, X23
	0x035BD480 BL 0x1C16F18
	0x035BD484 B 0x35BD494
	0x035BD488 B 0x35BD494
	0x035BD48C B 0x35BD494
	0x035BD490 B 0x35BD494

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {16}
	004 Move W8, [X0+32]
	005 Move TEMP, X1
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {11}
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, 2
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, 5
	013 Move [X0+32], W8
	014 Move X30, [X31+16]
	015 Return X0
	016 Call 0x1C17F20

