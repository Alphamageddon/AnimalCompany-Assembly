Type: SpatialSys.CommandLib.ConditionalCommand

Method: System.Void .ctor(SpatialSys.CommandLib.CommandCondition condition, SpatialSys.CommandLib.Command trueCommand, SpatialSys.CommandLib.Command falseCommand)

Disassembly:
	0x035BCC10 BL 0x32274B8
	0x035BCC14 MOV X21, X0
	0x035BCC18 ADRP X0, 0xB37000
	0x035BCC1C LDR X0, [X0 + 0x720]
	0x035BCC20 BL 0x1C16D08
	0x035BCC24 BL 0x1C16F10
	0x035BCC28 MOV X22, X0
	0x035BCC2C ADRP X0, 0xB37000
	0x035BCC30 LDR X0, [X0 + 0x718]
	0x035BCC34 BL 0x1C16D08
	0x035BCC38 MOV X1, X0
	0x035BCC3C MOV X0, X22
	0x035BCC40 BL 0x2AA4804
	0x035BCC44 MOV X0, X19
	0x035BCC48 BL 0x35BC7DC
	0x035BCC4C CBZ X22, 0x35BCD3C
	0x035BCC50 MOV X23, X0
	0x035BCC54 ADRP X0, 0xB7B000
	0x035BCC58 LDR X0, [X0 + 0xAB8]
	0x035BCC5C BL 0x1C16D08
	0x035BCC60 ADRP X25, 0xB37000
	0x035BCC64 LDR X25, [X25 + 0x710]
	0x035BCC68 MOV X24, X0
	0x035BCC6C MOV X0, X25
	0x035BCC70 BL 0x1C16D08
	0x035BCC74 MOV X3, X0
	0x035BCC78 MOV X0, X22
	0x035BCC7C MOV X1, X24
	0x035BCC80 MOV X2, X23
	0x035BCC84 BL 0x2AA5098

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {40}
	008 Move X22, X1
	009 Move X20, X0
	010 Move X0, X1
	011 Move X1, X31
	012 Move X19, X3
	013 Move X21, X2
	014 Call Delegate.get_Method, X0
	015 Compare X0, 0
	016 JumpIfEqual {40}
	017 Move X8, [X0]
	018 Move X9, [X8+424]
	019 Move X1, [X8+432]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X1, X0
	022 Move W2, 1
	023 Move X0, X20
	024 Call Command..ctor, X0, X1, X2
	025 Move [X20+56], X22
	026 Move [X20+64], X21
	027 Move [X20+72], X19
	028 Compare X21, 0
	029 JumpIfEqual {31}
	030 Move [X21+48], X20
	031 Compare X19, 0
	032 JumpIfEqual {34}
	033 Move [X19+48], X20
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 
	040 Call 0x1C17F20

Method: System.Void .ctor(System.String identifier, SpatialSys.CommandLib.CommandCondition condition, SpatialSys.CommandLib.Command trueCommand, SpatialSys.CommandLib.Command falseCommand)

Disassembly:
	0x035BCD44 BL 0x3EB1AE0
	0x035BCD48 MOV X0, X20
	0x035BCD4C BL 0x1D2C690
	0x035BCD50 BL 0x1990590
	0x035BCD54 STP X30, X25, [X31 - 0x40]!
	0x035BCD58 STP X24, X23, [X31 + 0x10]
	0x035BCD5C STP X22, X21, [X31 + 0x20]
	0x035BCD60 STP X20, X19, [X31 + 0x30]
	0x035BCD64 ADRP X22, 0xE24000
	0x035BCD68 LDRB W8, [X22 + 0x140]
	0x035BCD6C MOV X19, X2
	0x035BCD70 MOV X20, X1
	0x035BCD74 MOV X21, X0
	0x035BCD78 TBNZ X8, 0x0, 0x35BCE80
	0x035BCD7C ADRP X0, 0xB37000
	0x035BCD80 LDR X0, [X0 + 0x710]
	0x035BCD84 BL 0x1C16CF4
	0x035BCD88 ADRP X0, 0xB37000
	0x035BCD8C LDR X0, [X0 + 0x718]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X2
	007 Move W2, 1
	008 Move X19, X4
	009 Move X21, X3
	010 Move X20, X0
	011 Call Command..ctor, X0, X1, X2
	012 Move [X20+56], X22
	013 Move [X20+64], X21
	014 Move [X20+72], X19
	015 Compare X21, 0
	016 JumpIfEqual {18}
	017 Move [X21+48], X20
	018 Compare X19, 0
	019 JumpIfEqual {21}
	020 Move [X19+48], X20
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 Return 

Method: System.Void Start()

Disassembly:
	0x035BEB68 ADRP X8, 0xB35000
	0x035BEB6C LDR X8, [X8 + 0xEF8]
	0x035BEB70 MOV X1, X21
	0x035BEB74 LDP X20, X19, [X31 + 0x20]
	0x035BEB78 LDP X22, X21, [X31 + 0x10]
	0x035BEB7C LDR X8, [X8]
	0x035BEB80 MOV X2, X0
	0x035BEB84 MOV X3, X31
	0x035BEB88 MOV X0, X8
	0x035BEB8C LDP X30, X23, [X31], #0x30
	0x035BEB90 B 0x3227BD4
	0x035BEB94 LDR X9, [X9 + 0xC8]
	0x035BEB98 ADD X9, X9, X10, 0x3, LSL
	0x035BEB9C LDUR X9, [X9 - 0x8]
	0x035BEBA0 CMP X9, X8
	0x035BEBA4 CSEL X20, X0, X31, EQ
	0x035BEBA8 LDR X8, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Compare X8, 0
	005 JumpIfEqual {20}
	006 Move X19, X0
	007 Move X9, [X8+24]
	008 Move X0, [X8+64]
	009 Move X1, [X8+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 And W31, W0, 1
	012 Move W8, 72
	013 Move W9, 64
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move X8, [X19]
	016 Move [X19+80], X8
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035BEBAC MOV X0, X19
	0x035BEBB0 LDP X9, X1, [X8 + 0x1A8]
	0x035BEBB4 BLR X9
	0x035BEBB8 CBZ X0, 0x35BED14
	0x035BEBBC MOVZ W1, 0x5F
	0x035BEBC0 MOV X2, X31
	0x035BEBC4 BL 0x322BBDC
	0x035BEBC8 MOV X19, X0
	0x035BEBCC CBZ X20, 0x35BEC00
	0x035BEBD0 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Call Command.Update, X0, V0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {11}
	010 Move W0, 1
	011 Move W0, W31
	012 Move X30, [X31+16]
	013 Return X0

Method: System.String ToString()

Disassembly:
	0x035BEBD4 BL 0x35BC7DC
	0x035BEBD8 ADRP X8, 0xB62000
	0x035BEBDC LDR X8, [X8 + 0xFB8]
	0x035BEBE0 MOV X2, X0
	0x035BEBE4 MOV X0, X19
	0x035BEBE8 LDP X20, X19, [X31 + 0x20]
	0x035BEBEC LDR X1, [X8]
	0x035BEBF0 LDP X22, X21, [X31 + 0x10]
	0x035BEBF4 MOV X3, X31
	0x035BEBF8 LDP X30, X23, [X31], #0x30
	0x035BEBFC B 0x32274B8
	0x035BEC00 ADRP X8, 0xB35000
	0x035BEC04 LDR X8, [X8 + 0xF00]
	0x035BEC08 MOV X0, X19
	0x035BEC0C B 0x35BEA8C
	0x035BEC10 MOV X0, X20
	0x035BEC14 MOV X1, X31
	0x035BEC18 BL 0x3395B7C
	0x035BEC1C ADRP X8, 0xB35000
	0x035BEC20 LDR X8, [X8 + 0xAC8]
	0x035BEC24 MOV W1, W0
	0x035BEC28 LDR X8, [X8]
	0x035BEC2C MOV X0, X8
	0x035BEC30 BL 0x1C16D6C
	0x035BEC34 MOV X21, X0
	0x035BEC38 MOV X0, X20
	0x035BEC3C MOV X1, X31
	0x035BEC40 BL 0x3395B7C
	0x035BEC44 CMP W0, 0x1
	0x035BEC48 B.LT 0x35BECA0
	0x035BEC4C MOV X22, X31
	0x035BEC50 ADD X23, X21, 0x20
	0x035BEC54 MOV X0, X20
	0x035BEC58 MOV W1, W22
	0x035BEC5C MOV X2, X31
	0x035BEC60 BL 0x3395BDC
	0x035BEC64 CBZ X0, 0x35BED14
	0x035BEC68 LDR X8, [X0]
	0x035BEC6C LDP X9, X1, [X8 + 0x168]
	0x035BEC70 BLR X9
	0x035BEC74 CBZ X21, 0x35BED14
	0x035BEC78 LDR W8, [X21 + 0x18]
	0x035BEC7C CMP X22, X8
	0x035BEC80 B.CS 0x35BED18
	0x035BEC84 STR X0, [X23, X22, LSL #3]
	0x035BEC88 MOV X0, X20
	0x035BEC8C MOV X1, X31
	0x035BEC90 ADD X22, X22, 0x1
	0x035BEC94 BL 0x3395B7C
	0x035BEC98 CMP X22, W0, SXTW
	0x035BEC9C B.LT 0x35BEC54
	0x035BECA0 LDR X8, [X19]
	0x035BECA4 MOV X0, X19
	0x035BECA8 LDP X9, X1, [X8 + 0x1A8]
	0x035BECAC BLR X9
	0x035BECB0 CBZ X0, 0x35BED14
	0x035BECB4 MOVZ W1, 0x5F
	0x035BECB8 MOV X2, X31
	0x035BECBC BL 0x322BBDC
	0x035BECC0 ADRP X8, 0xB35000
	0x035BECC4 LDR X8, [X8 + 0x838]
	0x035BECC8 MOV X19, X0
	0x035BECCC MOV X1, X21
	0x035BECD0 MOV X2, X31
	0x035BECD4 LDR X8, [X8]
	0x035BECD8 MOV X0, X8
	0x035BECDC BL 0x3227FF8
	0x035BECE0 ADRP X8, 0xB35000
	0x035BECE4 ADRP X9, 0xB35000
	0x035BECE8 LDR X8, [X8 + 0xF10]
	0x035BECEC LDR X9, [X9 + 0x848]
	0x035BECF0 MOV X2, X0
	0x035BECF4 MOV X0, X19
	0x035BECF8 LDR X1, [X8]
	0x035BECFC LDR X3, [X9]
	0x035BED00 LDP X20, X19, [X31 + 0x20]
	0x035BED04 LDP X22, X21, [X31 + 0x10]
	0x035BED08 MOV X4, X31
	0x035BED0C LDP X30, X23, [X31], #0x30
	0x035BED10 B 0x32277C4
	0x035BED14 BL 0x1C16F20
	0x035BED18 BL 0x1C16F28
	0x035BED1C STR X30, [X31 - 0x20]!
	0x035BED20 STP X20, X19, [X31 + 0x10]
	0x035BED24 ADRP X19, 0xE22000
	0x035BED28 ADRP X20, 0xB79000
	0x035BED2C LDRB W8, [X19 + 0x151]
	0x035BED30 LDR X20, [X20 + 0xB88]
	0x035BED34 TBNZ X8, 0x0, 0x35BED4C
	0x035BED38 ADRP X0, 0xB79000
	0x035BED3C LDR X0, [X0 + 0xB88]
	0x035BED40 BL 0x1C16CF4
	0x035BED44 MOVZ W8, 0x1
	0x035BED48 STRB W8, [X19 + 0x151]
	0x035BED4C LDR X0, [X20]
	0x035BED50 BL 0x1C16F10
	0x035BED54 MOV X1, X31
	0x035BED58 MOV X19, X0
	0x035BED5C BL 0x33BDD8C
	0x035BED60 LDR X8, [X20]
	0x035BED64 LDR X8, [X8 + 0xB8]
	0x035BED68 STR X19, [X8]
	0x035BED6C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xE23000
	006 Move X21, 0xB36000
	007 Move W8, [X19+327]
	008 Move X21, [X21+2512]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB36000
	015 Move X0, [X0+2512]
	016 Call 0x1C17CF4
	017 Move X0, 0xB7A000
	018 Move X0, [X0+2888]
	019 Call 0x1C17CF4
	020 Move X0, 0xB7A000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+327], W8
	025 Move X0, [X21]
	026 Move W1, 5
	027 Call 0x1C17D6C
	028 Compare X0, 0
	029 JumpIfEqual {119}
	030 Move X21, 0xB7A000
	031 Move X21, [X21+2896]
	032 Move X19, X0
	033 Move X0, [X21]
	034 Compare X0, 0
	035 JumpIfEqual {41}
	036 Move X8, [X19]
	037 Move X1, [X8+64]
	038 Call 0x1C17E00
	039 Compare X0, 0
	040 JumpIfEqual {120}
	041 Move W8, [X19+24]
	042 Compare W8, 0
	043 JumpIfEqual {118}
	044 Move X8, [X21]
	045 Move X0, X20
	046 Move [X19+32], X8
	047 Call Command.get_identifier, X0
	048 Move X21, X0
	049 Compare X0, 0
	050 JumpIfEqual {57}
	051 Move X8, [X19]
	052 Move X0, X21
	053 Move X1, [X8+64]
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {120}
	057 Move W8, [X19+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X19+40], X21
	060 Move X0, [X20+56]
	061 Compare X0, 0
	062 JumpIfEqual {119}
	063 Move X1, X31
	064 Call Delegate.get_Method, X0
	065 Compare X0, 0
	066 JumpIfEqual {119}
	067 Move X8, [X0]
	068 Move X9, [X8+424]
	069 Move X1, [X8+432]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X21, X0
	072 Compare X0, 0
	073 JumpIfEqual {80}
	074 Move X8, [X19]
	075 Move X0, X21
	076 Move X1, [X8+64]
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {120}
	080 Move W8, [X19+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X19+48], X21
	083 Move X21, [X20+64]
	084 Compare X21, 0
	085 JumpIfEqual {93}
	086 Move X8, [X19]
	087 Move X0, X21
	088 Move X1, [X8+64]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {120}
	092 Move W8, [X19+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X19+56], X21
	095 Move X20, [X20+72]
	096 Compare X20, 0
	097 JumpIfEqual {105}
	098 Move X8, [X19]
	099 Move X0, X20
	100 Move X1, [X8+64]
	101 Call 0x1C17E00
	102 Compare X0, 0
	103 JumpIfEqual {120}
	104 Move W8, [X19+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X8, 0xB7A000
	107 Move X8, [X8+2888]
	108 Move [X19+64], X20
	109 Move X1, X19
	110 Move X20, [X31+16]
	111 Move X19, [X31+24]
	112 Move X0, [X8]
	113 Move X2, X31
	114 Move X30, [X31+32]
	115 Move X21, [X31+40]
	116 Call String.Format, X0, X1
	117 Return X0
	118 Call 0x1C17F28
	119 Call 0x1C17F20
	120 Call 0x1C17F44
	121 Move X1, X31
	122 Call 0x1C17DEC

