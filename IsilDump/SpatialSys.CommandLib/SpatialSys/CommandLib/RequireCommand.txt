Type: SpatialSys.CommandLib.RequireCommand

Method: System.Collections.Generic.IEnumerable`1<SpatialSys.CommandLib.Command> get__childCommands()

Disassembly:
	0x035C048C ADRP X0, 0xB33000
	0x035C0490 LDR X19, [X19 + 0x48]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void .ctor(SpatialSys.CommandLib.CommandCondition condition, SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BCDF8 LDR X0, [X0 + 0xAC8]
	0x035BCDFC BL 0x1C16CF4
	0x035BCE00 ADRP X0, 0xB7B000
	0x035BCE04 LDR X0, [X0 + 0xAE0]
	0x035BCE08 BL 0x1C16CF4
	0x035BCE0C ADRP X0, 0xB7B000
	0x035BCE10 LDR X0, [X0 + 0xAE8]
	0x035BCE14 BL 0x1C16CF4
	0x035BCE18 ADRP X0, 0xB7B000
	0x035BCE1C LDR X0, [X0 + 0xAB8]
	0x035BCE20 BL 0x1C16CF4
	0x035BCE24 ADRP X0, 0xB3F000
	0x035BCE28 LDR X0, [X0 + 0x9B0]
	0x035BCE2C BL 0x1C16CF4
	0x035BCE30 ADRP X0, 0xB7B000
	0x035BCE34 LDR X0, [X0 + 0xAF0]
	0x035BCE38 BL 0x1C16CF4
	0x035BCE3C ADRP X0, 0xB7B000
	0x035BCE40 LDR X0, [X0 + 0xAF8]
	0x035BCE44 BL 0x1C16CF4
	0x035BCE48 ADRP X0, 0xB7B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {29}
	007 Move X20, X1
	008 Move X21, X0
	009 Move X0, X1
	010 Move X1, X31
	011 Move X19, X2
	012 Call Delegate.get_Method, X0
	013 Compare X0, 0
	014 JumpIfEqual {29}
	015 Move X8, [X0]
	016 Move X9, [X8+424]
	017 Move X1, [X8+432]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X2, X20
	020 Move X3, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, X0
	024 Move X0, X21
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call RequireCommand..ctor, X0, X1, X2, X3
	028 Return 
	029 Call 0x1C17F20

Method: System.Void .ctor(System.String identifier, SpatialSys.CommandLib.CommandCondition condition, SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BCEBC LDR X8, [X8 + 0x30]
	0x035BCEC0 CBZ X8, 0x35BCED4
	0x035BCEC4 LDR W9, [X8 + 0x10]
	0x035BCEC8 CMP W9, 0x3
	0x035BCECC B.NE 0x35BCEBC
	0x035BCED0 B 0x35BD43C
	0x035BCED4 MOVZ W8, 0x3
	0x035BCED8 MOV X0, X21
	0x035BCEDC STR X19, [X21 + 0x18]
	0x035BCEE0 STR W8, [X21 + 0x10]
	0x035BCEE4 BL 0x35BC884
	0x035BCEE8 CMP X20, X21
	0x035BCEEC B.EQ 0x35BCFF0
	0x035BCEF0 CMP W0, 0x2
	0x035BCEF4 B.LT 0x35BD174
	0x035BCEF8 ADRP X8, 0xB37000
	0x035BCEFC LDR X8, [X8 + 0xAC8]
	0x035BCF00 MOVZ W1, 0x5
	0x035BCF04 LDR X0, [X8]
	0x035BCF08 BL 0x1C16D6C
	0x035BCF0C CBZ X0, 0x35BD474
	0x035BCF10 LDR W8, [X0 + 0x18]
	0x035BCF14 MOV X22, X0
	0x035BCF18 CBZ W8, 0x35BD470
	0x035BCF1C ADRP X8, 0xB7B000
	0x035BCF20 LDR X8, [X8 + 0xAA0]
	0x035BCF24 MOV X0, X21
	0x035BCF28 LDR X8, [X8]
	0x035BCF2C STR X8, [X22 + 0x20]
	0x035BCF30 BL 0x35BC7DC
	0x035BCF34 LDR W8, [X22 + 0x18]
	0x035BCF38 CMP W8, 0x1
	0x035BCF3C B.LS 0x35BD470
	0x035BCF40 CMP W8, 0x2
	0x035BCF44 STR X0, [X22 + 0x28]
	0x035BCF48 B.EQ 0x35BD470
	0x035BCF4C ADRP X8, 0xB7B000
	0x035BCF50 LDR X8, [X8 + 0xAF8]
	0x035BCF54 LDR X8, [X8]
	0x035BCF58 STR X8, [X22 + 0x30]
	0x035BCF5C CBZ X20, 0x35BD474
	0x035BCF60 MOV X0, X20
	0x035BCF64 BL 0x35BC7DC
	0x035BCF68 LDR W8, [X22 + 0x18]
	0x035BCF6C CMP W8, 0x3
	0x035BCF70 B.LS 0x35BD470
	0x035BCF74 CMP W8, 0x4
	0x035BCF78 STR X0, [X22 + 0x38]
	0x035BCF7C B.EQ 0x35BD470
	0x035BCF80 ADRP X8, 0xB3F000
	0x035BCF84 LDR X8, [X8 + 0x9B0]
	0x035BCF88 MOV X0, X22
	0x035BCF8C MOV X1, X31
	0x035BCF90 LDR X8, [X8]
	0x035BCF94 STR X8, [X22 + 0x40]
	0x035BCF98 BL 0x32278CC
	0x035BCF9C ADRP X8, 0xB37000
	0x035BCFA0 LDR X8, [X8 + 0x788]
	0x035BCFA4 MOV X22, X0
	0x035BCFA8 LDR X8, [X8]
	0x035BCFAC LDR W9, [X8 + 0xE0]
	0x035BCFB0 CBNZ W9, 0x35BCFBC
	0x035BCFB4 MOV X0, X8
	0x035BCFB8 BL 0x1C16DFC
	0x035BCFBC ADRP X8, 0xB7B000
	0x035BCFC0 ADRP X9, 0xB7B000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xE25000
	010 Move X24, 0xB7C000
	011 Move X23, 0xB7C000
	012 Move W8, [X25+346]
	013 Move X24, [X24+2496]
	014 Move X23, [X23+2504]
	015 Move X19, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xB7C000
	024 Move X0, [X0+2424]
	025 Call 0x1C17CF4
	026 Move X0, 0xB7C000
	027 Move X0, [X0+2504]
	028 Call 0x1C17CF4
	029 Move X0, 0xB7C000
	030 Move X0, [X0+2496]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+346], W8
	034 Move W2, 1
	035 Move X0, X20
	036 Move X1, X22
	037 Call Command..ctor, X0, X1, X2
	038 Move [X20+56], X21
	039 Move X0, [X24]
	040 Call 0x1C17F10
	041 Move X1, [X23]
	042 Move X21, X0
	043 Call Queue`1<Object>..ctor, X0
	044 Move [X20+72], X21
	045 Compare X19, 0
	046 JumpIfEqual {77}
	047 Move X8, [X19+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X22, 0xB7C000
	050 Move X22, [X22+2424]
	051 Move X21, X31
	052 And X8, X8, 0
	053 Add X23, X19, 32
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X1, [X23]
	056 Compare X1, 0
	057 JumpIfEqual {64}
	058 Move [X1+48], X20
	059 Move X0, [X20+72]
	060 Compare X0, 0
	061 JumpIfEqual {77}
	062 Move X2, [X22]
	063 Call Queue`1<Object>.Enqueue, X0, X1
	064 Move W8, [X19+24]
	065 Add X21, X21, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Return 
	076 Call 0x1C17F28
	077 Call 0x1C17F20

Method: System.Void Start()

Disassembly:
	0x035C0494 LDR X0, [X0 + 0x7D0]
	0x035C0498 BL 0x1C16D08
	0x035C049C BL 0x1C16F10
	0x035C04A0 MOV X1, X20
	0x035C04A4 MOV X2, X19
	0x035C04A8 MOV X3, X31
	0x035C04AC MOV X21, X0
	0x035C04B0 BL 0x33B2CA0
	0x035C04B4 ADRP X0, 0xB77000
	0x035C04B8 LDR X0, [X0 + 0xCB8]
	0x035C04BC BL 0x1C16D08
	0x035C04C0 MOV X1, X0
	0x035C04C4 MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Compare X8, 0
	005 JumpIfEqual {16}
	006 Move X19, X0
	007 Move X9, [X8+24]
	008 Move X0, [X8+64]
	009 Move X1, [X8+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 And W8, W0, 1
	012 Move [X19+64], W8
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call 0x1C17F20

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035C04C8 BL 0x1C16DEC
	0x035C04CC STR X30, [X31 - 0x30]!
	0x035C04D0 STP X22, X21, [X31 + 0x10]
	0x035C04D4 STP X20, X19, [X31 + 0x20]
	0x035C04D8 ADRP X22, 0xE20000
	0x035C04DC ADRP X20, 0xB5E000
	0x035C04E0 ADRP X21, 0xB33000
	0x035C04E4 LDRB W8, [X22 + 0x16D]
	0x035C04E8 LDR X20, [X20 + 0x70]
	0x035C04EC LDR X21, [X21 + 0x848]
	0x035C04F0 MOV X19, X0
	0x035C04F4 TBNZ X8, 0x0, 0x35C0518
	0x035C04F8 ADRP X0, 0xB5E000
	0x035C04FC LDR X0, [X0 + 0x70]
	0x035C0500 BL 0x1C16CF4
	0x035C0504 ADRP X0, 0xB33000
	0x035C0508 LDR X0, [X0 + 0x848]
	0x035C050C BL 0x1C16CF4
	0x035C0510 MOVZ W8, 0x1
	0x035C0514 STRB W8, [X22 + 0x16D]
	0x035C0518 MOV X0, X19
	0x035C051C BL 0x35BC7DC
	0x035C0520 LDR X8, [X20]
	0x035C0524 LDR X2, [X21]
	0x035C0528 LDP X20, X19, [X31 + 0x20]
	0x035C052C LDP X22, X21, [X31 + 0x10]
	0x035C0530 MOV X1, X0
	0x035C0534 MOV X0, X8
	0x035C0538 MOV X3, X31
	0x035C053C LDR X30, [X31], #0x30
	0x035C0540 B 0x32274B8
	0x035C0544 MOVZ W8, 0x1
	0x035C0548 STRB W8, [X0 + 0x40]
	0x035C054C RET
	0x035C0550 MOV X2, X1
	0x035C0554 MOV X1, X0
	0x035C0558 B 0x35BCD54
	0x035C055C LDP S2, S1, [X0 + 0x38]
	0x035C0560 FADD S0, S1, S0
	0x035C0564 FCMP S0, S2
	0x035C0568 CSET W8, GE
	0x035C056C STR S0, [X0 + 0x3C]
	0x035C0570 MOV W0, W8
	0x035C0574 RET
	0x035C0578 STR X30, [X31 - 0x30]!
	0x035C057C STP X22, X21, [X31 + 0x10]
	0x035C0580 STP X20, X19, [X31 + 0x20]
	0x035C0584 ADRP X20, 0xE20000
	0x035C0588 ADRP X21, 0xB33000
	0x035C058C LDRB W8, [X20 + 0x16F]
	0x035C0590 LDR X21, [X21 + 0x9D0]
	0x035C0594 MOV X19, X0
	0x035C0598 TBNZ X8, 0x0, 0x35C05D4
	0x035C059C ADRP X0, 0xB33000
	0x035C05A0 LDR X0, [X0 + 0x9D0]
	0x035C05A4 BL 0x1C16CF4
	0x035C05A8 ADRP X0, 0xB33000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE21000
	007 Move W8, [X20+347]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB78000
	015 Move X0, [X0+2472]
	016 Call 0x1C17CF4
	017 Move X0, 0xB78000
	018 Move X0, [X0+2480]
	019 Call 0x1C17CF4
	020 Move X0, 0xB78000
	021 Move X0, [X0+2416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+347], W8
	025 Move W8, [X19+64]
	026 Compare W8, 0
	027 JumpIfEqual {62}
	028 Move X8, [X19+72]
	029 Compare X8, 0
	030 JumpIfEqual {69}
	031 Move X20, 0xB78000
	032 Move X21, 0xB78000
	033 Move X20, [X20+2480]
	034 Move X21, [X21+2472]
	035 Move W9, [X8+32]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X1, [X20]
	038 Move X0, X8
	039 Call Queue`1<Object>.Peek, X0
	040 Compare X0, 0
	041 JumpIfEqual {69}
	042 Move V0, V8
	043 Call Command.Update, X0, V0
	044 Move X8, [X19+72]
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {57}
	049 Compare X8, 0
	050 JumpIfEqual {69}
	051 Move X1, [X21]
	052 Move X0, X8
	053 Call Queue`1<Object>.Dequeue, X0
	054 Move X8, [X19+72]
	055 Compare X8, 0
	056 JumpIfNotEqual {35}
	057 Compare X8, 0
	058 JumpIfEqual {69}
	059 Move W8, [X8+32]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W0, W31
	062 Move W0, 1
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Move V8, [X31+48]
	068 Return X0
	069 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x035C05AC LDR X0, [X0 + 0xA90]
	0x035C05B0 BL 0x1C16CF4
	0x035C05B4 ADRP X0, 0xB77000
	0x035C05B8 LDR X0, [X0 + 0xA10]
	0x035C05BC BL 0x1C16CF4
	0x035C05C0 ADRP X0, 0xB77000
	0x035C05C4 LDR X0, [X0 + 0xCC0]
	0x035C05C8 BL 0x1C16CF4
	0x035C05CC MOVZ W8, 0x1
	0x035C05D0 STRB W8, [X20 + 0x16F]
	0x035C05D4 LDR X0, [X21]
	0x035C05D8 MOVZ W1, 0x4
	0x035C05DC BL 0x1C16D6C
	0x035C05E0 CBZ X0, 0x35C070C
	0x035C05E4 ADRP X21, 0xB77000
	0x035C05E8 LDR X21, [X21 + 0xA10]
	0x035C05EC MOV X20, X0
	0x035C05F0 LDR X0, [X21]
	0x035C05F4 CBZ X0, 0x35C0608
	0x035C05F8 LDR X8, [X20]
	0x035C05FC LDR X1, [X8 + 0x40]
	0x035C0600 BL 0x1C16E00
	0x035C0604 CBZ X0, 0x35C0700
	0x035C0608 LDR W8, [X20 + 0x18]
	0x035C060C CBZ W8, 0x35C06FC
	0x035C0610 LDR X8, [X21]
	0x035C0614 MOV X0, X19
	0x035C0618 STR X8, [X20 + 0x20]
	0x035C061C BL 0x35BC7DC
	0x035C0620 MOV X21, X0
	0x035C0624 CBZ X0, 0x35C063C
	0x035C0628 LDR X8, [X20]
	0x035C062C MOV X0, X21
	0x035C0630 LDR X1, [X8 + 0x40]
	0x035C0634 BL 0x1C16E00
	0x035C0638 CBZ X0, 0x35C0700
	0x035C063C LDR W8, [X20 + 0x18]
	0x035C0640 CMP W8, 0x1
	0x035C0644 B.LS 0x35C06FC
	0x035C0648 ADRP X22, 0xB33000
	0x035C064C LDR X22, [X22 + 0xA90]
	0x035C0650 STR X21, [X20 + 0x28]
	0x035C0654 LDR V0, [X19 + 0x38]
	0x035C0658 ADD X1, X31, 0xC
	0x035C065C LDR X0, [X22]
	0x035C0660 STR S0, [X31 + 0xC]
	0x035C0664 BL 0x1C16E04
	0x035C0668 MOV X21, X0
	0x035C066C CBZ X0, 0x35C0684
	0x035C0670 LDR X8, [X20]
	0x035C0674 MOV X0, X21
	0x035C0678 LDR X1, [X8 + 0x40]
	0x035C067C BL 0x1C16E00
	0x035C0680 CBZ X0, 0x35C0700
	0x035C0684 LDR W8, [X20 + 0x18]
	0x035C0688 CMP W8, 0x2
	0x035C068C B.LS 0x35C06FC
	0x035C0690 STR X21, [X20 + 0x30]
	0x035C0694 LDR V0, [X19 + 0x3C]
	0x035C0698 LDR X0, [X22]
	0x035C069C ADD X1, X31, 0x8
	0x035C06A0 STR S0, [X31 + 0x8]
	0x035C06A4 BL 0x1C16E04
	0x035C06A8 MOV X19, X0
	0x035C06AC CBZ X0, 0x35C06C4
	0x035C06B0 LDR X8, [X20]
	0x035C06B4 MOV X0, X19
	0x035C06B8 LDR X1, [X8 + 0x40]
	0x035C06BC BL 0x1C16E00
	0x035C06C0 CBZ X0, 0x35C0700
	0x035C06C4 LDR W8, [X20 + 0x18]
	0x035C06C8 CMP W8, 0x3
	0x035C06CC B.LS 0x35C06FC
	0x035C06D0 ADRP X8, 0xB77000
	0x035C06D4 LDR X8, [X8 + 0xCC0]
	0x035C06D8 STR X19, [X20 + 0x38]
	0x035C06DC MOV X1, X20
	0x035C06E0 MOV X2, X31
	0x035C06E4 LDR X0, [X8]
	0x035C06E8 BL 0x3227C5C
	0x035C06EC LDP X20, X19, [X31 + 0x20]
	0x035C06F0 LDP X22, X21, [X31 + 0x10]
	0x035C06F4 LDR X30, [X31], #0x30
	0x035C06F8 RET
	0x035C06FC BL 0x1C16F28
	0x035C0700 BL 0x1C16F44
	0x035C0704 MOV X1, X31
	0x035C0708 BL 0x1C16DEC
	0x035C070C BL 0x1C16F20
	0x035C0710 STR X30, [X31 - 0x10]!
	0x035C0714 LDR V1, [X0 + 0x38]
	0x035C0718 LDR X8, [X0 + 0x40]
	0x035C071C FADD S0, S1, S0
	0x035C0720 STR S0, [X0 + 0x38]
	0x035C0724 CBZ X8, 0x35C073C
	0x035C0728 LDR X2, [X8 + 0x18]
	0x035C072C LDR X0, [X8 + 0x40]
	0x035C0730 LDR X1, [X8 + 0x28]
	0x035C0734 LDR X30, [X31], #0x10
	0x035C0738 BR X2
	0x035C073C BL 0x1C16F20
	0x035C0740 SUB X31, X31, 0x30
	0x035C0744 STP X30, X21, [X31 + 0x10]
	0x035C0748 STP X20, X19, [X31 + 0x20]
	0x035C074C ADRP X20, 0xE20000
	0x035C0750 ADRP X21, 0xB33000
	0x035C0754 LDRB W8, [X20 + 0x171]
	0x035C0758 LDR X21, [X21 + 0x9D0]
	0x035C075C MOV X19, X0
	0x035C0760 TBNZ X8, 0x0, 0x35C079C
	0x035C0764 ADRP X0, 0xB33000
	0x035C0768 LDR X0, [X0 + 0x9D0]
	0x035C076C BL 0x1C16CF4
	0x035C0770 ADRP X0, 0xB33000
	0x035C0774 LDR X0, [X0 + 0xA90]
	0x035C0778 BL 0x1C16CF4
	0x035C077C ADRP X0, 0xB77000
	0x035C0780 LDR X0, [X0 + 0x9D8]
	0x035C0784 BL 0x1C16CF4
	0x035C0788 ADRP X0, 0xB77000
	0x035C078C LDR X0, [X0 + 0xCC8]
	0x035C0790 BL 0x1C16CF4
	0x035C0794 MOVZ W8, 0x1
	0x035C0798 STRB W8, [X20 + 0x171]
	0x035C079C LDR X0, [X21]
	0x035C07A0 MOVZ W1, 0x4
	0x035C07A4 BL 0x1C16D6C
	0x035C07A8 CBZ X0, 0x35C08D4
	0x035C07AC ADRP X21, 0xB77000
	0x035C07B0 LDR X21, [X21 + 0x9D8]
	0x035C07B4 MOV X20, X0
	0x035C07B8 LDR X0, [X21]
	0x035C07BC CBZ X0, 0x35C07D0
	0x035C07C0 LDR X8, [X20]
	0x035C07C4 LDR X1, [X8 + 0x40]
	0x035C07C8 BL 0x1C16E00
	0x035C07CC CBZ X0, 0x35C08D8
	0x035C07D0 LDR W8, [X20 + 0x18]
	0x035C07D4 CBZ W8, 0x35C08D0
	0x035C07D8 LDR X8, [X21]
	0x035C07DC MOV X0, X19
	0x035C07E0 STR X8, [X20 + 0x20]
	0x035C07E4 BL 0x35BC7DC
	0x035C07E8 MOV X21, X0
	0x035C07EC CBZ X0, 0x35C0804
	0x035C07F0 LDR X8, [X20]
	0x035C07F4 MOV X0, X21
	0x035C07F8 LDR X1, [X8 + 0x40]
	0x035C07FC BL 0x1C16E00
	0x035C0800 CBZ X0, 0x35C08D8
	0x035C0804 LDR W8, [X20 + 0x18]
	0x035C0808 CMP W8, 0x1
	0x035C080C B.LS 0x35C08D0
	0x035C0810 STR X21, [X20 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xE21000
	012 Move X24, 0xB78000
	013 Move W8, [X20+348]
	014 Move X24, [X24+3128]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0xB78000
	021 Move X0, [X0+3136]
	022 Call 0x1C17CF4
	023 Move X0, 0xB78000
	024 Move X0, [X0+3144]
	025 Call 0x1C17CF4
	026 Move X0, 0xB34000
	027 Move X0, [X0+2760]
	028 Call 0x1C17CF4
	029 Move X0, 0xB78000
	030 Move X0, [X0+3152]
	031 Call 0x1C17CF4
	032 Move X0, 0xB78000
	033 Move X0, [X0+3160]
	034 Call 0x1C17CF4
	035 Move X0, 0xB78000
	036 Move X0, [X0+3128]
	037 Call 0x1C17CF4
	038 Move X0, 0xB78000
	039 Move X0, [X0+3168]
	040 Call 0x1C17CF4
	041 Move X0, 0xB78000
	042 Move X0, [X0+3176]
	043 Call 0x1C17CF4
	044 Move X0, 0xB34000
	045 Move X0, [X0+2104]
	046 Call 0x1C17CF4
	047 Move X0, 0xB5E000
	048 Move X0, [X0+1072]
	049 Call 0x1C17CF4
	050 Move X0, 0xB78000
	051 Move X0, [X0+3184]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+348], W8
	055 Move X0, [X24]
	056 Move X21, 0xB34000
	057 Move X20, [X19+72]
	058 Move W8, [X0+224]
	059 Move X21, [X21+2104]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X24]
	064 Move X8, [X0+184]
	065 Move X27, 0xB78000
	066 Move X26, 0xB78000
	067 Move X25, 0xB34000
	068 Move X22, [X8+8]
	069 Move X21, [X21]
	070 Move X27, [X27+3136]
	071 Move X26, [X26+3152]
	072 Move X25, [X25+2760]
	073 Compare X22, 0
	074 JumpIfNotEqual {96}
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X24]
	080 Move X9, 0xB78000
	081 Move X8, [X0+184]
	082 Move X9, [X9+3144]
	083 Move X23, [X8]
	084 Move X0, [X9]
	085 Call 0x1C17F10
	086 Move X8, 0xB78000
	087 Move X8, [X8+3160]
	088 Move X1, X23
	089 Move X3, X31
	090 Move X22, X0
	091 Move X2, [X8]
	092 Call Func`2<Object, Object>..ctor, X0, X1, X2
	093 Move X8, [X24]
	094 Move X8, [X8+184]
	095 Move [X8+8], X22
	096 Move X2, [X27]
	097 Move X0, X20
	098 Move X1, X22
	099 Call Enumerable.Select, X0, X1
	100 Move X2, [X26]
	101 Move X1, X0
	102 Move X0, X21
	103 Call String.Join, X0, X1
	104 Move X8, [X25]
	105 Move X21, X0
	106 Move W1, 7
	107 Move X0, X8
	108 Call 0x1C17D6C
	109 Compare X0, 0
	110 JumpIfEqual {170}
	111 Move W8, [X0+24]
	112 Move X20, X0
	113 Compare W8, 0
	114 JumpIfEqual {169}
	115 Move X8, 0xB78000
	116 Move X8, [X8+3184]
	117 Move X0, X19
	118 Move X8, [X8]
	119 Move [X20+32], X8
	120 Call Command.get_identifier, X0
	121 Move W8, [X20+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move [X20+40], X0
	125 Move X8, 0xB78000
	126 Move X8, [X8+3176]
	127 Move X8, [X8]
	128 Move [X20+48], X8
	129 Move X0, [X19+56]
	130 Compare X0, 0
	131 JumpIfEqual {170}
	132 Move X1, X31
	133 Call Delegate.get_Method, X0
	134 Compare X0, 0
	135 JumpIfEqual {170}
	136 Move X8, [X0]
	137 Move X9, [X8+424]
	138 Move X1, [X8+432]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move W8, [X20+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X20+56], X0
	144 Move X9, 0xB78000
	145 Move X9, [X9+3168]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X9, [X9]
	148 Move [X20+64], X9
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move [X20+72], X21
	151 Move X8, 0xB5E000
	152 Move X8, [X8+1072]
	153 Move X0, X20
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X8, [X8]
	159 Move X26, [X31+16]
	160 Move X25, [X31+24]
	161 Move X1, X31
	162 Move [X20+80], X8
	163 Move X20, [X31+64]
	164 Move X19, [X31+72]
	165 Move X30, [X31+80]
	166 Move X27, [X31+88]
	167 Call String.Concat, X0
	168 Return X0
	169 Call 0x1C17F28
	170 Call 0x1C17F20

