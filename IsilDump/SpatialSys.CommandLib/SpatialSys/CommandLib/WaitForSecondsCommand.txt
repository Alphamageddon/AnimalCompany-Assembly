Type: SpatialSys.CommandLib.WaitForSecondsCommand

Method: System.Void .ctor(System.Single durationSec)

Disassembly:
	0x035BC278 MOV X19, X0
	0x035BC27C BL 0x35BC2F4
	0x035BC280 CBZ X19, 0x35BC2F0
	0x035BC284 LDR W8, [X19 + 0x20]
	0x035BC288 TBZ X20, 0x0, 0x35BC29C
	0x035BC28C CMP W8, 0x3
	0x035BC290 B.LT 0x35BC2AC
	0x035BC294 MOVZ W8, 0x2
	0x035BC298 B 0x35BC2A8
	0x035BC29C CMP W8, 0x4
	0x035BC2A0 B.GT 0x35BC2AC
	0x035BC2A4 MOVZ W8, 0x5
	0x035BC2A8 STR W8, [X19 + 0x20]
	0x035BC2AC LDR X9, [X19]
	0x035BC2B0 LDR X8, [X23]
	0x035BC2B4 LDRB W11, [X9 + 0x130]
	0x035BC2B8 LDRB W10, [X8 + 0x130]
	0x035BC2BC CMP W11, W10
	0x035BC2C0 B.CS 0x35BC2CC
	0x035BC2C4 MOV X0, X31
	0x035BC2C8 B 0x35BC2E0
	0x035BC2CC LDR X9, [X9 + 0xC8]
	0x035BC2D0 ADD X9, X9, X10, 0x3, LSL
	0x035BC2D4 LDUR X9, [X9 - 0x8]
	0x035BC2D8 CMP X9, X8

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE25000
	007 Move X21, 0xB7C000
	008 Move W8, [X20+366]
	009 Move X21, [X21+2576]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7C000
	017 Move X0, [X0+2576]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+366], W8
	021 Move X1, [X21]
	022 Move W2, 1
	023 Move X0, X19
	024 Call Command..ctor, X0, X1, X2
	025 Move [X19+60], W31
	026 Move [X19+56], S8
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Move V8, [X31+48]
	032 Return 

Method: System.Void .ctor(System.String identifier, System.Single durationSec)

Disassembly:
	0x035BC380 MOV X22, X1
	0x035BC384 MOV X23, X0
	0x035BC388 TBNZ X8, 0x0, 0x35BC3A0
	0x035BC38C ADRP X0, 0xB7B000
	0x035BC390 LDR X0, [X0 + 0xA80]
	0x035BC394 BL 0x1C16CF4
	0x035BC398 MOVZ W8, 0x1
	0x035BC39C STRB W8, [X19 + 0x13B]
	0x035BC3A0 LDR X0, [X24]
	0x035BC3A4 BL 0x1C16F10
	0x035BC3A8 MOVZ W2, 0x1

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W2, 1
	005 Move V8, V0
	006 Move X19, X0
	007 Call Command..ctor, X0, X1, X2
	008 Move [X19+60], W31
	009 Move [X19+56], S8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Move V8, [X31+32]
	013 Return 

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035C155C LDR W8, [X0 + 0xE0]
	0x035C1560 CBNZ W8, 0x35C156C
	0x035C1564 BL 0x1C16DFC
	0x035C1568 LDR X0, [X22]
	0x035C156C LDR X8, [X0 + 0xB8]
	0x035C1570 LDR X0, [X8 + 0x18]
	0x035C1574 CBZ X0, 0x35C18B8

ISIL:
	001 Move S2, [X0+56]
	002 Move S1, [X0+60]
	003 Add S0, S1, S0
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Move [X0+60], S0
	007 Move W0, W8
	008 Return X0

Method: System.String ToString()

Disassembly:
	0x035C1578 LDR X8, [X0]
	0x035C157C MOV X1, X31
	0x035C1580 LDR X9, [X8 + 0x348]
	0x035C1584 LDR X2, [X8 + 0x350]
	0x035C1588 BLR X9
	0x035C158C LDR X0, [X22]
	0x035C1590 LDR W8, [X0 + 0xE0]
	0x035C1594 CBNZ W8, 0x35C15A0
	0x035C1598 BL 0x1C16DFC
	0x035C159C LDR X0, [X22]
	0x035C15A0 LDR X8, [X0 + 0xB8]
	0x035C15A4 LDR X0, [X8 + 0x20]
	0x035C15A8 CBZ X0, 0x35C18B8
	0x035C15AC MOV X1, X31
	0x035C15B0 BL 0x3E5EFA4
	0x035C15B4 LDR X8, [X22]
	0x035C15B8 LDR X9, [X8 + 0xB8]
	0x035C15BC STR X31, [X9 + 0x20]
	0x035C15C0 LDR W9, [X8 + 0xE0]
	0x035C15C4 CBNZ W9, 0x35C15D4
	0x035C15C8 MOV X0, X8
	0x035C15CC BL 0x1C16DFC
	0x035C15D0 LDR X8, [X22]
	0x035C15D4 LDR X8, [X8 + 0xB8]
	0x035C15D8 LDR X8, [X8 + 0x20]
	0x035C15DC CBNZ X8, 0x35C18A0
	0x035C15E0 MOV X0, X31
	0x035C15E4 BL 0x3C3A708
	0x035C15E8 LDR X0, [X22]
	0x035C15EC MOV V8.16B, V0.16B
	0x035C15F0 LDR W8, [X0 + 0xE0]
	0x035C15F4 CBNZ W8, 0x35C1600
	0x035C15F8 BL 0x1C16DFC
	0x035C15FC LDR X0, [X22]
	0x035C1600 LDR X8, [X0 + 0xB8]
	0x035C1604 FMOV S1, 30
	0x035C1608 LDR V0, [X8 + 0x38]
	0x035C160C FADD S0, S0, S1
	0x035C1610 FCMP S8, S0
	0x035C1614 B.LE 0x35C18A0
	0x035C1618 ADRP X19, 0xB76000
	0x035C161C ADRP X20, 0xB76000
	0x035C1620 LDR X19, [X19 + 0xD08]
	0x035C1624 LDR X20, [X20 + 0xD00]
	0x035C1628 LDR W8, [X0 + 0xE0]
	0x035C162C CBNZ W8, 0x35C1638
	0x035C1630 BL 0x1C16DFC
	0x035C1634 LDR X0, [X22]
	0x035C1638 LDR X8, [X0 + 0xB8]
	0x035C163C LDR X0, [X8 + 0x10]
	0x035C1640 CBZ X0, 0x35C18B8
	0x035C1644 LDR X2, [X19]
	0x035C1648 ADD X1, X31, 0x8
	0x035C164C BL 0x2993084
	0x035C1650 TBZ X0, 0x0, 0x35C176C
	0x035C1654 LDR X0, [X22]
	0x035C1658 LDR W8, [X0 + 0xE0]
	0x035C165C CBNZ W8, 0x35C1668
	0x035C1660 BL 0x1C16DFC
	0x035C1664 LDR X0, [X22]
	0x035C1668 LDR X8, [X0 + 0xB8]
	0x035C166C LDR X0, [X8 + 0x18]
	0x035C1670 CBZ X0, 0x35C18B8
	0x035C1674 LDR X8, [X0]
	0x035C1678 LDP X9, X1, [X8 + 0x1E8]
	0x035C167C BLR X9
	0x035C1680 LDR X8, [X31 + 0x8]
	0x035C1684 CBZ X8, 0x35C18B8
	0x035C1688 LDRSW X8, [X8 + 0x18]
	0x035C168C ADD X8, X8, X0
	0x035C1690 CMP X8, 0x500000
	0x035C1694 B.GT 0x35C176C
	0x035C1698 LDR X0, [X22]
	0x035C169C LDR W8, [X0 + 0xE0]
	0x035C16A0 CBNZ W8, 0x35C16AC
	0x035C16A4 BL 0x1C16DFC
	0x035C16A8 LDR X0, [X22]
	0x035C16AC LDR X8, [X0 + 0xB8]
	0x035C16B0 LDR X0, [X8 + 0x10]
	0x035C16B4 CBZ X0, 0x35C18B8
	0x035C16B8 LDR X2, [X20]
	0x035C16BC ADD X1, X31, 0x0
	0x035C16C0 BL 0x2992E94
	0x035C16C4 LDR X8, [X22]
	0x035C16C8 LDR X8, [X8 + 0xB8]
	0x035C16CC LDR X0, [X8 + 0x18]
	0x035C16D0 CBZ X0, 0x35C18B8
	0x035C16D4 LDR X8, [X0]
	0x035C16D8 LDP X9, X1, [X8 + 0x1E8]
	0x035C16DC BLR X9
	0x035C16E0 CBZ X0, 0x35C1724
	0x035C16E4 LDR X0, [X22]
	0x035C16E8 LDR W8, [X0 + 0xE0]
	0x035C16EC CBNZ W8, 0x35C16F8
	0x035C16F0 BL 0x1C16DFC
	0x035C16F4 LDR X0, [X22]
	0x035C16F8 LDR X8, [X0 + 0xB8]
	0x035C16FC LDR X1, [X8 + 0x8]
	0x035C1700 CBZ X1, 0x35C18B8
	0x035C1704 LDR X0, [X8 + 0x18]
	0x035C1708 CBZ X0, 0x35C18B8
	0x035C170C LDR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE20000
	007 Move X21, 0xB33000
	008 Move W8, [X20+367]
	009 Move X21, [X21+2512]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB33000
	016 Move X0, [X0+2512]
	017 Call 0x1C17CF4
	018 Move X0, 0xB33000
	019 Move X0, [X0+2704]
	020 Call 0x1C17CF4
	021 Move X0, 0xB77000
	022 Move X0, [X0+2576]
	023 Call 0x1C17CF4
	024 Move X0, 0xB77000
	025 Move X0, [X0+3264]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+367], W8
	029 Move X0, [X21]
	030 Move W1, 4
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {116}
	034 Move X21, 0xB77000
	035 Move X21, [X21+2576]
	036 Move X20, X0
	037 Move X0, [X21]
	038 Compare X0, 0
	039 JumpIfEqual {45}
	040 Move X8, [X20]
	041 Move X1, [X8+64]
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {113}
	045 Move W8, [X20+24]
	046 Compare W8, 0
	047 JumpIfEqual {112}
	048 Move X8, [X21]
	049 Move X0, X19
	050 Move [X20+32], X8
	051 Call Command.get_identifier, X0
	052 Move X21, X0
	053 Compare X0, 0
	054 JumpIfEqual {61}
	055 Move X8, [X20]
	056 Move X0, X21
	057 Move X1, [X8+64]
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {113}
	061 Move W8, [X20+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X22, 0xB33000
	064 Move X22, [X22+2704]
	065 Move [X20+40], X21
	066 Move V0, [X19+56]
	067 Add X1, X31, 12
	068 Move X0, [X22]
	069 Move [X31+12], S0
	070 Call 0x1C17E04
	071 Move X21, X0
	072 Compare X0, 0
	073 JumpIfEqual {80}
	074 Move X8, [X20]
	075 Move X0, X21
	076 Move X1, [X8+64]
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {113}
	080 Move W8, [X20+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X20+48], X21
	083 Move V0, [X19+60]
	084 Move X0, [X22]
	085 Add X1, X31, 8
	086 Move [X31+8], S0
	087 Call 0x1C17E04
	088 Move X19, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X20]
	092 Move X0, X19
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {113}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, 0xB77000
	100 Move X8, [X8+3264]
	101 Move [X20+56], X19
	102 Move X1, X20
	103 Move X2, X31
	104 Move X0, [X8]
	105 Call String.Format, X0, X1
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Return X0
	112 Call 0x1C17F28
	113 Call 0x1C17F44
	114 Move X1, X31
	115 Call 0x1C17DEC
	116 Call 0x1C17F20

