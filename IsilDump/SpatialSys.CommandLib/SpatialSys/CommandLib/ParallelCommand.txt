Type: SpatialSys.CommandLib.ParallelCommand

Method: System.Collections.Generic.IEnumerable`1<SpatialSys.CommandLib.Command> get__childCommands()

Disassembly:
	0x035BFF60 MOV X21, X0
	0x035BFF64 BL 0x33B2CA0

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void .ctor(SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BC78C STR X30, [X31 - 0x10]!
	0x035BC790 MOV X3, X2
	0x035BC794 MOV X2, X1
	0x035BC798 ADD X1, X31, 0x8
	0x035BC79C STR X31, [X31 + 0x8]
	0x035BC7A0 BL 0x1C16CB0
	0x035BC7A4 LDR X30, [X31], #0x10
	0x035BC7A8 RET
	0x035BC7AC MOV X0, X1
	0x035BC7B0 MOV X1, X31
	0x035BC7B4 B 0x1C16CB4
	0x035BC7B8 LDR W0, [X0 + 0x10]
	0x035BC7BC RET
	0x035BC7C0 STR W1, [X0 + 0x10]
	0x035BC7C4 RET
	0x035BC7C8 LDRB W0, [X0 + 0x14]
	0x035BC7CC RET
	0x035BC7D0 AND W8, W1, 0x1
	0x035BC7D4 STRB W8, [X0 + 0x14]
	0x035BC7D8 RET
	0x035BC7DC STR X30, [X31 - 0x20]!
	0x035BC7E0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE25000
	007 Move X22, 0xB7C000
	008 Move W8, [X21+340]
	009 Move X22, [X22+2616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7C000
	017 Move X0, [X0+2616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+340], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call ParallelCommand..ctor, X0, X1, X2
	030 Return 

Method: System.Void .ctor(System.String identifier, SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BC84C B.EQ 0x35BC858
	0x035BC850 LDR X0, [X0 + 0x30]
	0x035BC854 CBNZ X0, 0x35BC844
	0x035BC858 CMP W8, 0x2
	0x035BC85C CSET W0, EQ
	0x035BC860 RET
	0x035BC864 LDR W8, [X0 + 0x10]
	0x035BC868 CMP W8, 0x4
	0x035BC86C CSET W0, EQ
	0x035BC870 RET
	0x035BC874 LDR X0, [X0 + 0x18]
	0x035BC878 RET
	0x035BC87C STR X1, [X0 + 0x18]
	0x035BC880 RET
	0x035BC884 STP X30, X19, [X31 - 0x10]!
	0x035BC888 MOV X19, X0
	0x035BC88C LDR X0, [X19 + 0x30]
	0x035BC890 CBZ X0, 0x35BC8B0
	0x035BC894 BL 0x35BC884
	0x035BC898 LDR W8, [X19 + 0x20]
	0x035BC89C CMP W0, W8
	0x035BC8A0 B.GE 0x35BC8B4
	0x035BC8A4 LDR X19, [X19 + 0x30]
	0x035BC8A8 CBNZ X19, 0x35BC88C
	0x035BC8AC BL 0x1C16F20
	0x035BC8B0 LDR W8, [X19 + 0x20]
	0x035BC8B4 MOV W0, W8
	0x035BC8B8 LDP X30, X19, [X31], #0x10
	0x035BC8BC RET
	0x035BC8C0 STR W1, [X0 + 0x20]
	0x035BC8C4 RET
	0x035BC8C8 STR X30, [X31 - 0x10]!
	0x035BC8CC BL 0x35BC884
	0x035BC8D0 CMP W0, 0x3
	0x035BC8D4 CSET W0, LT
	0x035BC8D8 LDR X30, [X31], #0x10
	0x035BC8DC RET
	0x035BC8E0 LDR X0, [X0 + 0x30]
	0x035BC8E4 RET
	0x035BC8E8 STR X30, [X31 - 0x20]!
	0x035BC8EC STP X20, X19, [X31 + 0x10]
	0x035BC8F0 ADRP X19, 0xE24000
	0x035BC8F4 ADRP X20, 0xB7B000
	0x035BC8F8 LDRB W8, [X19 + 0x13E]
	0x035BC8FC LDR X20, [X20 + 0xA88]
	0x035BC900 TBNZ X8, 0x0, 0x35BC918
	0x035BC904 ADRP X0, 0xB7B000
	0x035BC908 LDR X0, [X0 + 0xA88]
	0x035BC90C BL 0x1C16CF4
	0x035BC910 MOVZ W8, 0x1
	0x035BC914 STRB W8, [X19 + 0x13E]
	0x035BC918 LDR X0, [X20]
	0x035BC91C BL 0x1C16F10
	0x035BC920 MOV X1, X31
	0x035BC924 MOV X19, X0
	0x035BC928 BL 0x33BDD8C
	0x035BC92C MOVN W8, 0x1
	0x035BC930 MOV X0, X31
	0x035BC934 STR W8, [X19 + 0x10]
	0x035BC938 BL 0x33C151C
	0x035BC93C STR W0, [X19 + 0x20]
	0x035BC940 MOV X0, X19
	0x035BC944 LDP X20, X19, [X31 + 0x10]
	0x035BC948 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE25000
	009 Move X23, 0xB7C000
	010 Move X22, 0xB7C000
	011 Move W8, [X24+341]
	012 Move X23, [X23+2624]
	013 Move X22, [X22+2632]
	014 Move X19, X2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xB7C000
	022 Move X0, [X0+2640]
	023 Call 0x1C17CF4
	024 Move X0, 0xB7C000
	025 Move X0, [X0+2632]
	026 Call 0x1C17CF4
	027 Move X0, 0xB7C000
	028 Move X0, [X0+2624]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+341], W8
	032 Move W2, 1
	033 Move X0, X20
	034 Move X1, X21
	035 Call Command..ctor, X0, X1, X2
	036 Move X0, [X23]
	037 Call 0x1C17F10
	038 Move X1, [X22]
	039 Move X21, X0
	040 Call LinkedList`1<Object>..ctor, X0
	041 Move [X20+56], X21
	042 Compare X19, 0
	043 JumpIfEqual {73}
	044 Move X8, [X19+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, 0xB7C000
	047 Move X22, [X22+2640]
	048 Move X21, X31
	049 And X8, X8, 0
	050 Add X23, X19, 32
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X1, [X23]
	053 Compare X1, 0
	054 JumpIfEqual {61}
	055 Move [X1+48], X20
	056 Move X0, [X20+56]
	057 Compare X0, 0
	058 JumpIfEqual {73}
	059 Move X2, [X22]
	060 Call LinkedList`1<Object>.AddLast, X0, X1
	061 Move W8, [X19+24]
	062 Add X21, X21, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Return 
	072 Call 0x1C17F28
	073 Call 0x1C17F20

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035BFF68 ADRP X0, 0xB78000
	0x035BFF6C LDR X0, [X0 + 0xCA0]
	0x035BFF70 BL 0x1C16D08
	0x035BFF74 MOV X1, X0
	0x035BFF78 MOV X0, X21
	0x035BFF7C BL 0x1C16DEC
	0x035BFF80 MOV W0, W31
	0x035BFF84 B 0x35BFEE4
	0x035BFF88 STP X30, X19, [X31 - 0x10]!
	0x035BFF8C LDR W8, [X0 + 0x10]
	0x035BFF90 MOV X19, X0
	0x035BFF94 CMP W8, 0x2
	0x035BFF98 B.EQ 0x35BFFF4
	0x035BFF9C CMP W8, 0x4
	0x035BFFA0 B.EQ 0x35BFFF4
	0x035BFFA4 MOV X9, X19
	0x035BFFA8 LDR X9, [X9 + 0x30]
	0x035BFFAC CBZ X9, 0x35BFFC0
	0x035BFFB0 LDR W10, [X9 + 0x10]
	0x035BFFB4 CMP W10, 0x2
	0x035BFFB8 B.NE 0x35BFFA8
	0x035BFFBC B 0x35BFFF4
	0x035BFFC0 CMP W8, 0x3
	0x035BFFC4 B.EQ 0x35BFFF4
	0x035BFFC8 MOV X8, X19
	0x035BFFCC LDR X8, [X8 + 0x30]
	0x035BFFD0 CBZ X8, 0x35BFFE4
	0x035BFFD4 LDR W9, [X8 + 0x10]
	0x035BFFD8 CMP W9, 0x3
	0x035BFFDC B.NE 0x35BFFCC
	0x035BFFE0 B 0x35BFFF4
	0x035BFFE4 LDR X0, [X19 + 0x50]
	0x035BFFE8 CBZ X0, 0x35BFFF4
	0x035BFFEC MOV X1, X31
	0x035BFFF0 BL 0x33DFCF8
	0x035BFFF4 MOV X0, X19
	0x035BFFF8 LDP X30, X19, [X31], #0x10
	0x035BFFFC B 0x35BD53C
	0x035C0000 SUB X31, X31, 0x50
	0x035C0004 STP X30, X25, [X31 + 0x10]
	0x035C0008 STP X24, X23, [X31 + 0x20]
	0x035C000C STP X22, X21, [X31 + 0x30]
	0x035C0010 STP X20, X19, [X31 + 0x40]
	0x035C0014 ADRP X20, 0xE20000
	0x035C0018 LDRB W8, [X20 + 0x168]
	0x035C001C MOV X19, X0
	0x035C0020 TBNZ X8, 0x0, 0x35C0044
	0x035C0024 ADRP X0, 0xB77000
	0x035C0028 LDR X0, [X0 + 0xCA8]
	0x035C002C BL 0x1C16CF4
	0x035C0030 ADRP X0, 0xB35000
	0x035C0034 LDR X0, [X0 + 0xA50]
	0x035C0038 BL 0x1C16CF4
	0x035C003C MOVZ W8, 0x1
	0x035C0040 STRB W8, [X20 + 0x168]
	0x035C0044 STR X31, [X31 + 0x8]
	0x035C0048 LDR W24, [X19]
	0x035C004C LDR X23, [X19 + 0x28]
	0x035C0050 CBZ W24, 0x35C00F0

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE22000
	009 Move W8, [X20+342]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xB79000
	017 Move X0, [X0+3016]
	018 Call 0x1C17CF4
	019 Move X0, 0xB79000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move X0, 0xB79000
	023 Move X0, [X0+3032]
	024 Call 0x1C17CF4
	025 Move X0, 0xB79000
	026 Move X0, [X0+3040]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+342], W8
	030 Move X8, [X19+56]
	031 Compare X8, 0
	032 JumpIfEqual {77}
	033 Move X20, [X8+16]
	034 Compare X20, 0
	035 JumpIfEqual {66}
	036 Move X22, 0xB79000
	037 Move X23, 0xB79000
	038 Move X22, [X22+3016]
	039 Move X23, [X23+3032]
	040 Move X1, [X22]
	041 Move X0, X20
	042 Call LinkedListNode`1<Object>.get_Next, X0
	043 Move X8, [X20+40]
	044 Compare X8, 0
	045 JumpIfEqual {77}
	046 Move X21, X0
	047 Move X0, X8
	048 Move V0, V8
	049 Call Command.Update, X0, V0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {60}
	054 Move X0, [X19+56]
	055 Compare X0, 0
	056 JumpIfEqual {77}
	057 Move X2, [X23]
	058 Move X1, X20
	059 Call LinkedList`1<Object>.Remove, X0, X1
	060 Move X20, X21
	061 Compare X21, 0
	062 JumpIfNotEqual {40}
	063 Move X8, [X19+56]
	064 Compare X8, 0
	065 JumpIfEqual {77}
	066 Move X8, [X8+16]
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X30, [X31+16]
	072 Move X23, [X31+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Move V8, [X31+64]
	076 Return X0
	077 Call 0x1C17F20

Method: System.Void Cancel()

Disassembly:
	0x035C0054 ADRP X8, 0xB35000
	0x035C0058 LDR X8, [X8 + 0xA50]
	0x035C005C LDR X0, [X8]
	0x035C0060 BL 0x1C16F10
	0x035C0064 MOV X20, X0
	0x035C0068 MOV X1, X31
	0x035C006C BL 0x33DFA8C
	0x035C0070 CBZ X23, 0x35C0188
	0x035C0074 STR X20, [X23 + 0x50]
	0x035C0078 CBZ X20, 0x35C018C
	0x035C007C LDR X21, [X23 + 0x38]
	0x035C0080 MOV X0, X20
	0x035C0084 MOV X1, X31
	0x035C0088 BL 0x33DFA08
	0x035C008C MOV X1, X0
	0x035C0090 CBZ X21, 0x35C0190
	0x035C0094 LDR X0, [X21 + 0x40]
	0x035C0098 LDR X8, [X21 + 0x18]
	0x035C009C LDR X2, [X21 + 0x28]
	0x035C00A0 BLR X8
	0x035C00A4 CBZ X0, 0x35C0194
	0x035C00A8 MOV X1, X31
	0x035C00AC BL 0x33ED394
	0x035C00B0 STR X0, [X31 + 0x8]
	0x035C00B4 ADD X0, X31, 0x8
	0x035C00B8 MOV X1, X31
	0x035C00BC BL 0x32C3A80
	0x035C00C0 TBNZ X0, 0x0, 0x35C0104
	0x035C00C4 STR W31, [X19]
	0x035C00C8 LDR X8, [X31 + 0x8]
	0x035C00CC ADD X0, X19, 0x8
	0x035C00D0 STR X8, [X19 + 0x30]
	0x035C00D4 ADRP X8, 0xB77000
	0x035C00D8 LDR X8, [X8 + 0xCA8]
	0x035C00DC LDR X3, [X8]
	0x035C00E0 ADD X1, X31, 0x8
	0x035C00E4 MOV X2, X19
	0x035C00E8 BL 0x219A7C4
	0x035C00EC B 0x35C0164
	0x035C00F0 LDR X8, [X19 + 0x30]
	0x035C00F4 MOVN W24, 0x0
	0x035C00F8 STR X8, [X31 + 0x8]
	0x035C00FC STR X31, [X19 + 0x30]
	0x035C0100 STR W24, [X19]
	0x035C0104 ADD X0, X31, 0x8
	0x035C0108 MOV X1, X31
	0x035C010C BL 0x32C3B4C
	0x035C0110 CBZ X23, 0x35C0184
	0x035C0114 MOVZ W8, 0x1
	0x035C0118 MOV X20, X31
	0x035C011C STRB W8, [X23 + 0x40]
	0x035C0120 MOVZ W21, 0x7
	0x035C0124 TBZ X24, 0x1F, 0x35C0140
	0x035C0128 CBZ X23, 0x35C0198
	0x035C012C LDR X0, [X23 + 0x50]
	0x035C0130 CBZ X0, 0x35C019C
	0x035C0134 MOV X1, X31
	0x035C0138 BL 0x33E01CC
	0x035C013C STR X31, [X23 + 0x50]
	0x035C0140 CBNZ X20, 0x35C017C
	0x035C0144 CBZ W21, 0x35C0150
	0x035C0148 CMP W21, 0x7
	0x035C014C B.NE 0x35C0164
	0x035C0150 MOVN W8, 0x1
	0x035C0154 STR W8, [X19], #0x8
	0x035C0158 MOV X0, X19
	0x035C015C MOV X1, X31
	0x035C0160 BL 0x32C4204
	0x035C0164 LDP X20, X19, [X31 + 0x40]
	0x035C0168 LDP X22, X21, [X31 + 0x30]
	0x035C016C LDP X24, X23, [X31 + 0x20]
	0x035C0170 LDP X30, X25, [X31 + 0x10]
	0x035C0174 ADD X31, X31, 0x50
	0x035C0178 RET
	0x035C017C MOV X0, X20
	0x035C0180 BL 0x1C16F18
	0x035C0184 BL 0x1C16F20
	0x035C0188 BL 0x1C16F20
	0x035C018C BL 0x1C16F20
	0x035C0190 BL 0x1C16F20
	0x035C0194 BL 0x1C16F20
	0x035C0198 BL 0x1C16F20
	0x035C019C BL 0x1C16F20
	0x035C01A0 MOV X22, X0
	0x035C01A4 MOV W24, W31
	0x035C01A8 B 0x35C01E0
	0x035C01AC B 0x35C01DC
	0x035C01B0 B 0x35C01DC
	0x035C01B4 B 0x35C01DC
	0x035C01B8 B 0x35C01DC
	0x035C01BC B 0x35C01DC
	0x035C01C0 B 0x35C01DC
	0x035C01C4 B 0x35C01DC
	0x035C01C8 B 0x35C01DC
	0x035C01CC MOV X21, X1
	0x035C01D0 MOV X22, X0
	0x035C01D4 MOVZ W25, 0x1
	0x035C01D8 B 0x35C02C4
	0x035C01DC MOV X22, X0
	0x035C01E0 MOV W21, W1
	0x035C01E4 CMP W1, 0x1
	0x035C01E8 B.NE 0x35C0278
	0x035C01EC MOV X0, X22
	0x035C01F0 BL 0x3EB1AD0
	0x035C01F4 MOV X20, X0
	0x035C01F8 ADRP X0, 0xB33000
	0x035C01FC LDR X0, [X0 + 0x7D0]
	0x035C0200 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0xE21000
	007 Move W8, [X20+343]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xB78000
	014 Move X0, [X0+3048]
	015 Call 0x1C17CF4
	016 Move X0, 0xB78000
	017 Move X0, [X0+3056]
	018 Call 0x1C17CF4
	019 Move X0, 0xB78000
	020 Move X0, [X0+3064]
	021 Call 0x1C17CF4
	022 Move X0, 0xB78000
	023 Move X0, [X0+3072]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+343], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+32], X31
	029 Move [X31], V0
	030 Move [X31+8], V0
	031 Move W8, [X19+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, X19
	035 Move X9, [X9+48]
	036 Compare X9, 0
	037 JumpIfEqual {40}
	038 Move W10, [X9+16]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, X19
	042 Move X8, [X8+48]
	043 Compare X8, 0
	044 JumpIfEqual {47}
	045 Move W9, [X8+16]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X19+56]
	048 Compare X0, 0
	049 JumpIfEqual {85}
	050 Move X8, 0xB78000
	051 Move X8, [X8+3072]
	052 Move X1, [X8]
	053 Add X8, X31, 0
	054 Call LinkedList`1<Object>.GetEnumerator, X0
	055 Move X20, 0xB78000
	056 Move X20, [X20+3056]
	057 Move X1, [X20]
	058 Add X0, X31, 0
	059 Call Enumerator<Object>.MoveNext, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {71}
	064 Move X0, [X31+24]
	065 Compare X0, 0
	066 JumpIfEqual {84}
	067 Move X8, [X0]
	068 Move X9, [X8+440]
	069 Move X1, [X8+448]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X8, 0xB78000
	072 Move X8, [X8+3048]
	073 Add X0, X31, 0
	074 Move X1, [X8]
	075 Call Enumerator<Object>.Dispose, X0
	076 Move X0, X19
	077 Call Command.Cancel, X0
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X30, [X31+48]
	081 Move X21, [X31+56]
	082 Add X31, X31, 80
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x1C17F20
	086 Move X20, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X20
	089 Call 0x3EB2AD0
	090 Move X21, [X0]
	091 Call 0x3EB2AE0
	092 Move X8, 0xB78000
	093 Move X8, [X8+3048]
	094 Add X0, X31, 0
	095 Move X1, [X8]
	096 Call Enumerator<Object>.Dispose, X0
	097 Compare X21, 0
	098 JumpIfEqual {76}
	099 Move X0, X21
	100 Call 0x1C17F18
	101 Move X21, X31
	102 Move X20, X0
	103 Move X8, 0xB78000
	104 Move X8, [X8+3048]
	105 Move X1, [X8]
	106 Add X0, X31, 0
	107 Call Enumerator<Object>.Dispose, X0
	108 Compare X21, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X20
	111 Call 0x1D2D690
	112 Move X0, X21
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x035C0204 LDR X8, [X20]
	0x035C0208 LDR X1, [X8]
	0x035C020C BL 0x1C17270
	0x035C0210 TBZ X0, 0x0, 0x35C0234
	0x035C0214 LDR X21, [X20]
	0x035C0218 BL 0x3EB1AE0
	0x035C021C CBZ X23, 0x35C0258
	0x035C0220 MOVZ W8, 0x1
	0x035C0224 MOV X20, X31
	0x035C0228 STR X21, [X23 + 0x48]
	0x035C022C STRB W8, [X23 + 0x41]
	0x035C0230 B 0x35C0120
	0x035C0234 MOVZ W0, 0x8
	0x035C0238 BL 0x3EB1AF0
	0x035C023C LDR X8, [X20]
	0x035C0240 STR X8, [X0]
	0x035C0244 ADRP X1, 0x8F4000
	0x035C0248 ADD X1, X1, 0xE58
	0x035C024C MOV X2, X31
	0x035C0250 BL 0x3EB1B00
	0x035C0254 B 0x35C0338
	0x035C0258 BL 0x1C16F20
	0x035C025C B 0x35C0260
	0x035C0260 MOV X22, X0
	0x035C0264 MOV W21, W1
	0x035C0268 B 0x35C0278
	0x035C026C MOV X21, X1
	0x035C0270 MOV X22, X0
	0x035C0274 BL 0x3EB1AE0
	0x035C0278 MOVZ W25, 0x1
	0x035C027C CMP W21, W25
	0x035C0280 B.NE 0x35C02A0
	0x035C0284 MOV X0, X22
	0x035C0288 BL 0x3EB1AD0
	0x035C028C LDR X20, [X0]
	0x035C0290 BL 0x3EB1AE0
	0x035C0294 MOV W21, W31
	0x035C0298 TBZ X24, 0x1F, 0x35C0140
	0x035C029C B 0x35C0128
	0x035C02A0 MOV X20, X31
	0x035C02A4 TBZ X24, 0x1F, 0x35C02C0
	0x035C02A8 CBZ X23, 0x35C0340
	0x035C02AC LDR X0, [X23 + 0x50]
	0x035C02B0 CBZ X0, 0x35C0344
	0x035C02B4 MOV X1, X31
	0x035C02B8 BL 0x33E01CC
	0x035C02BC STR X31, [X23 + 0x50]
	0x035C02C0 CBNZ X20, 0x35C0338
	0x035C02C4 CMP W21, W25
	0x035C02C8 B.NE 0x35C0360
	0x035C02CC MOV X0, X22
	0x035C02D0 BL 0x3EB1AD0
	0x035C02D4 MOV X20, X0
	0x035C02D8 ADRP X0, 0xB33000
	0x035C02DC LDR X0, [X0 + 0x7D0]
	0x035C02E0 BL 0x1C16D08
	0x035C02E4 LDR X8, [X20]
	0x035C02E8 LDR X1, [X8]
	0x035C02EC BL 0x1C17270
	0x035C02F0 TBZ X0, 0x0, 0x35C0318
	0x035C02F4 LDR X20, [X20]
	0x035C02F8 BL 0x3EB1AE0
	0x035C02FC MOVN W8, 0x1
	0x035C0300 STR W8, [X19], #0x8
	0x035C0304 MOV X0, X19
	0x035C0308 MOV X1, X20
	0x035C030C MOV X2, X31
	0x035C0310 BL 0x32C4368
	0x035C0314 B 0x35C0164
	0x035C0318 MOVZ W0, 0x8
	0x035C031C BL 0x3EB1AF0
	0x035C0320 LDR X8, [X20]
	0x035C0324 STR X8, [X0]
	0x035C0328 ADRP X1, 0x8F4000
	0x035C032C ADD X1, X1, 0xE58
	0x035C0330 MOV X2, X31
	0x035C0334 BL 0x3EB1B00
	0x035C0338 MOV X0, X20
	0x035C033C BL 0x1C16F18
	0x035C0340 BL 0x1C16F20
	0x035C0344 BL 0x1C16F20
	0x035C0348 MOV X22, X0
	0x035C034C MOV W21, W1
	0x035C0350 TBZ X24, 0x1F, 0x35C02C0
	0x035C0354 B 0x35C02A8
	0x035C0358 MOV X22, X0
	0x035C035C BL 0x3EB1AE0
	0x035C0360 MOV X0, X22
	0x035C0364 BL 0x1D2C690
	0x035C0368 BL 0x1990590
	0x035C036C ADD X0, X0, 0x8
	0x035C0370 MOV X2, X31
	0x035C0374 B 0x32C4140
	0x035C0378 LDR W8, [X0 + 0x38]
	0x035C037C SUBS W9, W8, 0x1
	0x035C0380 B.LT 0x35C0388
	0x035C0384 STR W9, [X0 + 0x38]
	0x035C0388 CMP W8, 0x1
	0x035C038C CSET W0, LT
	0x035C0390 RET
	0x035C0394 SUB X31, X31, 0x40
	0x035C0398 STP X30, X23, [X31 + 0x10]
	0x035C039C STP X22, X21, [X31 + 0x20]
	0x035C03A0 STP X20, X19, [X31 + 0x30]
	0x035C03A4 ADRP X20, 0xE20000
	0x035C03A8 ADRP X23, 0xB33000
	0x035C03AC ADRP X21, 0xB77000
	0x035C03B0 ADRP X22, 0xB77000
	0x035C03B4 LDRB W8, [X20 + 0x16A]
	0x035C03B8 LDR X23, [X23 + 0x758]
	0x035C03BC LDR X21, [X21 + 0xCB0]
	0x035C03C0 LDR X22, [X22 + 0x9E8]
	0x035C03C4 MOV X19, X0
	0x035C03C8 TBNZ X8, 0x0, 0x35C03F8
	0x035C03CC ADRP X0, 0xB33000
	0x035C03D0 LDR X0, [X0 + 0x758]
	0x035C03D4 BL 0x1C16CF4
	0x035C03D8 ADRP X0, 0xB77000
	0x035C03DC LDR X0, [X0 + 0x9E8]
	0x035C03E0 BL 0x1C16CF4
	0x035C03E4 ADRP X0, 0xB77000
	0x035C03E8 LDR X0, [X0 + 0xCB0]
	0x035C03EC BL 0x1C16CF4
	0x035C03F0 MOVZ W8, 0x1
	0x035C03F4 STRB W8, [X20 + 0x16A]
	0x035C03F8 MOV X0, X19
	0x035C03FC BL 0x35BC7DC
	0x035C0400 MOV X20, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE21000
	011 Move X24, 0xB78000
	012 Move W8, [X20+344]
	013 Move X24, [X24+3080]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0xB78000
	020 Move X0, [X0+3088]
	021 Call 0x1C17CF4
	022 Move X0, 0xB78000
	023 Move X0, [X0+3096]
	024 Call 0x1C17CF4
	025 Move X0, 0xB34000
	026 Move X0, [X0+2760]
	027 Call 0x1C17CF4
	028 Move X0, 0xB78000
	029 Move X0, [X0+3104]
	030 Call 0x1C17CF4
	031 Move X0, 0xB78000
	032 Move X0, [X0+3080]
	033 Call 0x1C17CF4
	034 Move X0, 0xB78000
	035 Move X0, [X0+3112]
	036 Call 0x1C17CF4
	037 Move X0, 0xB78000
	038 Move X0, [X0+3120]
	039 Call 0x1C17CF4
	040 Move X0, 0xB34000
	041 Move X0, [X0+2104]
	042 Call 0x1C17CF4
	043 Move X0, 0xB5E000
	044 Move X0, [X0+1072]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+344], W8
	048 Move X0, [X24]
	049 Move X21, 0xB34000
	050 Move X20, [X19+56]
	051 Move W8, [X0+224]
	052 Move X21, [X21+2104]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Move X8, [X0+184]
	058 Move X26, 0xB78000
	059 Move X25, 0xB34000
	060 Move X21, [X21]
	061 Move X22, [X8+8]
	062 Move X26, [X26+3088]
	063 Move X25, [X25+2760]
	064 Compare X22, 0
	065 JumpIfNotEqual {87}
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X24]
	071 Move X9, 0xB78000
	072 Move X8, [X0+184]
	073 Move X9, [X9+3096]
	074 Move X23, [X8]
	075 Move X0, [X9]
	076 Call 0x1C17F10
	077 Move X8, 0xB78000
	078 Move X8, [X8+3104]
	079 Move X1, X23
	080 Move X3, X31
	081 Move X22, X0
	082 Move X2, [X8]
	083 Call Func`2<Object, Object>..ctor, X0, X1, X2
	084 Move X8, [X24]
	085 Move X8, [X8+184]
	086 Move [X8+8], X22
	087 Move X2, [X26]
	088 Move X0, X20
	089 Move X1, X22
	090 Call Enumerable.Select, X0, X1
	091 Move X1, X0
	092 Move X0, X21
	093 Move X2, X31
	094 Call String.Join, X0, X1
	095 Move X8, [X25]
	096 Move X21, X0
	097 Move W1, 5
	098 Move X0, X8
	099 Call 0x1C17D6C
	100 Compare X0, 0
	101 JumpIfEqual {141}
	102 Move W8, [X0+24]
	103 Move X20, X0
	104 Compare W8, 0
	105 JumpIfEqual {140}
	106 Move X8, 0xB78000
	107 Move X8, [X8+3120]
	108 Move X0, X19
	109 Move X8, [X8]
	110 Move [X20+32], X8
	111 Call Command.get_identifier, X0
	112 Move W8, [X20+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X20+40], X0
	116 Move X9, 0xB78000
	117 Move X9, [X9+3112]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X9, [X9]
	120 Move [X20+48], X9
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X20+56], X21
	123 Move X8, 0xB5E000
	124 Move X8, [X8+1072]
	125 Move X0, X20
	126 Move X22, [X31+48]
	127 Move X21, [X31+56]
	128 Move X24, [X31+32]
	129 Move X23, [X31+40]
	130 Move X8, [X8]
	131 Move X26, [X31+16]
	132 Move X25, [X31+24]
	133 Move X1, X31
	134 Move [X20+64], X8
	135 Move X20, [X31+64]
	136 Move X19, [X31+72]
	137 Move X30, [X31+80]
	138 Call String.Concat, X0
	139 Return X0
	140 Call 0x1C17F28
	141 Call 0x1C17F20

