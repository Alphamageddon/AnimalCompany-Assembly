Type: SpatialSys.CommandLib.RequireCommand/<>c

Method: System.Void .cctor()

Disassembly:
	0x035C0814 LDR X0, [X19 + 0x40]
	0x035C0818 CBZ X0, 0x35C08D4
	0x035C081C MOV X1, X31
	0x035C0820 BL 0x33C4268
	0x035C0824 CBZ X0, 0x35C08D4
	0x035C0828 LDR X8, [X0]
	0x035C082C LDP X9, X1, [X8 + 0x1A8]
	0x035C0830 BLR X9
	0x035C0834 MOV X21, X0
	0x035C0838 CBZ X0, 0x35C0850
	0x035C083C LDR X8, [X20]
	0x035C0840 MOV X0, X21
	0x035C0844 LDR X1, [X8 + 0x40]
	0x035C0848 BL 0x1C16E00
	0x035C084C CBZ X0, 0x35C08D8
	0x035C0850 LDR W8, [X20 + 0x18]
	0x035C0854 CMP W8, 0x2
	0x035C0858 B.LS 0x35C08D0
	0x035C085C ADRP X8, 0xB33000
	0x035C0860 LDR X8, [X8 + 0xA90]
	0x035C0864 STR X21, [X20 + 0x30]
	0x035C0868 LDR V0, [X19 + 0x38]
	0x035C086C ADD X1, X31, 0xC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE21000
	005 Move X20, 0xB78000
	006 Move W8, [X19+349]
	007 Move X20, [X20+3128]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB78000
	013 Move X0, [X0+3128]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+349], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x035C0870 LDR X0, [X8]
	0x035C0874 STR S0, [X31 + 0xC]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Char[] <ToString>b__9_0(SpatialSys.CommandLib.Command c)

Disassembly:
	0x035C0878 BL 0x1C16E04
	0x035C087C MOV X19, X0
	0x035C0880 CBZ X0, 0x35C0898
	0x035C0884 LDR X8, [X20]
	0x035C0888 MOV X0, X19
	0x035C088C LDR X1, [X8 + 0x40]
	0x035C0890 BL 0x1C16E00
	0x035C0894 CBZ X0, 0x35C08D8
	0x035C0898 LDR W8, [X20 + 0x18]
	0x035C089C CMP W8, 0x3
	0x035C08A0 B.LS 0x35C08D0
	0x035C08A4 ADRP X8, 0xB77000
	0x035C08A8 LDR X8, [X8 + 0xCC8]
	0x035C08AC STR X19, [X20 + 0x38]
	0x035C08B0 MOV X1, X20
	0x035C08B4 MOV X2, X31
	0x035C08B8 LDR X0, [X8]
	0x035C08BC BL 0x3227C5C
	0x035C08C0 LDP X20, X19, [X31 + 0x20]
	0x035C08C4 LDP X30, X21, [X31 + 0x10]
	0x035C08C8 ADD X31, X31, 0x30
	0x035C08CC RET
	0x035C08D0 BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE21000
	005 Move W8, [X20+350]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB78000
	012 Move X0, [X0+3192]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+350], W8
	016 Compare X19, 0
	017 JumpIfEqual {31}
	018 Move X8, [X19]
	019 Move X20, 0xB78000
	020 Move X0, X19
	021 Move X9, [X8+360]
	022 Move X1, [X8+368]
	023 Move X20, [X20+3192]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X1, [X20]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Call Enumerable.ToArray, X0
	030 Return X0
	031 Call 0x1C17F20

