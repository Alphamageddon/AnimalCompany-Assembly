Type: SpatialSys.CommandLib.WaitForFramesCommand

Method: System.Void .ctor(System.Int32 frameCount)

Disassembly:
	0x035BC03C BL 0x35BC984
	0x035BC040 LDR W8, [X21 + 0x20]
	0x035BC044 STR X20, [X21 + 0x38]
	0x035BC048 TBZ X19, 0x0, 0x35BC05C
	0x035BC04C CMP W8, 0x3
	0x035BC050 B.LT 0x35BC06C
	0x035BC054 MOVZ W8, 0x2
	0x035BC058 B 0x35BC068
	0x035BC05C CMP W8, 0x4
	0x035BC060 B.GT 0x35BC06C
	0x035BC064 MOVZ W8, 0x5
	0x035BC068 STR W8, [X21 + 0x20]
	0x035BC06C MOV X0, X21
	0x035BC070 LDP X20, X19, [X31 + 0x20]
	0x035BC074 LDP X22, X21, [X31 + 0x10]
	0x035BC078 LDR X30, [X31], #0x30
	0x035BC07C RET
	0x035BC080 BL 0x1C16F20
	0x035BC084 STR X30, [X31 - 0x20]!
	0x035BC088 STP X20, X19, [X31 + 0x10]
	0x035BC08C MOV X19, X2
	0x035BC090 MOVZ W2, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE25000
	007 Move X22, 0xB7C000
	008 Move W8, [X21+361]
	009 Move X22, [X22+2536]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7C000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+361], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Move W2, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call WaitForFramesCommand..ctor, X0, X1, X2
	030 Return 

Method: System.Void .ctor(System.String identifier, System.Int32 frameCount)

Disassembly:
	0x035BC130 MOV X0, X21
	0x035BC134 LDP X20, X19, [X31 + 0x20]
	0x035BC138 LDP X22, X21, [X31 + 0x10]
	0x035BC13C LDP X30, X23, [X31], #0x30
	0x035BC140 RET
	0x035BC144 STP X30, X19, [X31 - 0x10]!
	0x035BC148 CBZ X0, 0x35BC180
	0x035BC14C LDR W8, [X0 + 0x18]
	0x035BC150 MOV X19, X0
	0x035BC154 MOV W0, W31
	0x035BC158 MOV X2, X31
	0x035BC15C SUB W1, W8, 0x1
	0x035BC160 BL 0x3C309A8
	0x035BC164 LDR W8, [X19 + 0x18]
	0x035BC168 CMP W0, W8
	0x035BC16C B.CS 0x35BC184
	0x035BC170 ADD X8, X19, W0, 0x3, SXTW
	0x035BC174 LDR X0, [X8 + 0x20]
	0x035BC178 LDP X30, X19, [X31], #0x10
	0x035BC17C RET
	0x035BC180 BL 0x1C16F20
	0x035BC184 BL 0x1C16F28
	0x035BC188 STR X30, [X31 - 0x30]!
	0x035BC18C STP X22, X21, [X31 + 0x10]
	0x035BC190 STP X20, X19, [X31 + 0x20]
	0x035BC194 ADRP X21, 0xE24000
	0x035BC198 ADRP X22, 0xB3E000
	0x035BC19C LDRB W8, [X21 + 0x139]
	0x035BC1A0 LDR X22, [X22 + 0x2E8]
	0x035BC1A4 MOV X19, X1
	0x035BC1A8 MOV W20, W0
	0x035BC1AC TBNZ X8, 0x0, 0x35BC1C4
	0x035BC1B0 ADRP X0, 0xB3E000
	0x035BC1B4 LDR X0, [X0 + 0x2E8]
	0x035BC1B8 BL 0x1C16CF4
	0x035BC1BC MOVZ W8, 0x1
	0x035BC1C0 STRB W8, [X21 + 0x139]
	0x035BC1C4 LDR X0, [X22]
	0x035BC1C8 BL 0x1C16F10
	0x035BC1CC MOV W1, W20
	0x035BC1D0 MOV X2, X31
	0x035BC1D4 MOV X21, X0
	0x035BC1D8 BL 0x338E5E8
	0x035BC1DC CBZ X19, 0x35BC220
	0x035BC1E0 CBZ X21, 0x35BC220

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W2
	007 Move W2, 1
	008 Move X20, X0
	009 Call Command..ctor, X0, X1, X2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move [X20+56], W19
	012 Move X20, [X31+32]
	013 Move X19, [X31+40]
	014 Move X30, [X31+16]
	015 Move X21, [X31+24]
	016 Add X31, X31, 48
	017 Return 
	018 Move [X31+12], W19
	019 Move X0, 0xB38000
	020 Move X0, [X0+1880]
	021 Call 0x1C17D08
	022 Add X1, X31, 12
	023 Call 0x1C17E04
	024 Move X19, X0
	025 Move X0, 0xB40000
	026 Move X0, [X0+1888]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X20, X0
	030 Move X0, 0xB7C000
	031 Move X0, [X0+2544]
	032 Call 0x1C17D08
	033 Move X21, X0
	034 Move X0, 0xB7C000
	035 Move X0, [X0+2552]
	036 Call 0x1C17D08
	037 Move X3, X0
	038 Move X0, X20
	039 Move X1, X21
	040 Move X2, X19
	041 Move X4, X31
	042 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	043 Move X0, 0xB7C000
	044 Move X0, [X0+2560]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X20
	048 Call 0x1C17DEC

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035C1378 CBNZ W8, 0x35C1380
	0x035C137C BL 0x1C16DFC
	0x035C1380 LDR X0, [X21]
	0x035C1384 AND W8, W19, 0xFF00
	0x035C1388 BFM W8, W19, 0x10, 0x7
	0x035C138C BFM W8, W19, 0x10, 0x17
	0x035C1390 ADD X1, X31, 0xC

ISIL:
	001 Move W8, [X0+56]
	002 Subtract W9, W8, 1
	003 Move [X0+56], W9
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.String ToString()

Disassembly:
	0x035C1394 STR W8, [X31 + 0xC]
	0x035C1398 BL 0x1C16E04
	0x035C139C LDR X8, [X20]
	0x035C13A0 MOV X1, X0
	0x035C13A4 MOV X2, X31
	0x035C13A8 MOV X0, X8
	0x035C13AC BL 0x321EFD0
	0x035C13B0 LDP X20, X19, [X31 + 0x20]
	0x035C13B4 LDP X30, X21, [X31 + 0x10]
	0x035C13B8 ADD X31, X31, 0x30
	0x035C13BC RET
	0x035C13C0 STP X30, X21, [X31 - 0x20]!
	0x035C13C4 STP X20, X19, [X31 + 0x10]
	0x035C13C8 ADRP X19, 0xE1F000
	0x035C13CC ADRP X20, 0xB32000
	0x035C13D0 LDRB W8, [X19 + 0x185]
	0x035C13D4 LDR X20, [X20 + 0x788]
	0x035C13D8 TBNZ X8, 0x0, 0x35C13FC
	0x035C13DC ADRP X0, 0xB32000
	0x035C13E0 LDR X0, [X0 + 0x788]
	0x035C13E4 BL 0x1C16CF4
	0x035C13E8 ADRP X0, 0xB33000
	0x035C13EC LDR X0, [X0 + 0x2C8]
	0x035C13F0 BL 0x1C16CF4
	0x035C13F4 MOVZ W8, 0x1
	0x035C13F8 STRB W8, [X19 + 0x185]
	0x035C13FC ADRP X21, 0xB33000
	0x035C1400 LDR X21, [X21 + 0x2C8]
	0x035C1404 MOV X0, X31
	0x035C1408 BL 0x3C3C88C
	0x035C140C LDR X8, [X20]
	0x035C1410 MOV W19, W0
	0x035C1414 LDR W9, [X8 + 0xE0]
	0x035C1418 CBNZ W9, 0x35C1428
	0x035C141C MOV X0, X8
	0x035C1420 BL 0x1C16DFC
	0x035C1424 LDR X8, [X20]
	0x035C1428 LDR X8, [X8 + 0xB8]
	0x035C142C STR W19, [X8 + 0x20]
	0x035C1430 LDR X0, [X21]
	0x035C1434 LDR W8, [X0 + 0xE0]
	0x035C1438 CBNZ W8, 0x35C1440
	0x035C143C BL 0x1C16DFC
	0x035C1440 LDP X20, X19, [X31 + 0x10]
	0x035C1444 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE20000
	009 Move X23, 0xB33000
	010 Move X21, 0xB77000
	011 Move X22, 0xB77000
	012 Move W8, [X20+362]
	013 Move X23, [X23+1880]
	014 Move X21, [X21+3248]
	015 Move X22, [X22+2536]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xB33000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xB77000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move X0, 0xB77000
	028 Move X0, [X0+3248]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+362], W8
	032 Move X0, X19
	033 Call Command.get_identifier, X0
	034 Move X20, X0
	035 Move W8, [X19+56]
	036 Move X0, [X23]
	037 Add X1, X31, 12
	038 Move [X31+12], W8
	039 Call 0x1C17E04
	040 Move X8, [X21]
	041 Move X1, [X22]
	042 Move X3, X0
	043 Move X2, X20
	044 Move X0, X8
	045 Move X4, X31
	046 Call String.Format, X0, X1, X2, X3
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X30, [X31+16]
	052 Move X23, [X31+24]
	053 Add X31, X31, 64
	054 Return X0

