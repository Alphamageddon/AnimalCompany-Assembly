Type: SpatialSys.CommandLib.TaskCommand`1

Method: T get_result()

Disassembly:
	0x02679190 MOV X2, X31
	0x02679194 BL 0x321EFD0

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void .ctor(System.String identifier, SpatialSys.CommandLib.TaskGenerator`1<T> taskGenerator, SpatialSys.CommandLib.Command parentCommand = null)

Disassembly:
	0x02679198 MOV X21, X0
	0x0267919C ADRP X0, 0x1A7A000
	0x026791A0 LDR X20, [X20 + 0x48]
	0x026791A4 LDR X0, [X0 + 0x7D0]
	0x026791A8 BL 0x1C16D08
	0x026791AC BL 0x1C16F10
	0x026791B0 MOV X1, X21
	0x026791B4 MOV X2, X20
	0x026791B8 MOV X3, X31
	0x026791BC MOV X22, X0
	0x026791C0 BL 0x33B2CA0
	0x026791C4 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X3
	006 Move X20, X2
	007 Move W2, 1
	008 Move X3, X31
	009 Move X21, X0
	010 Call Command..ctor, X0, X1, X2
	011 Move [X21+48], X19
	012 Move [X21+56], X20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Return 

Method: System.Void .ctor(SpatialSys.CommandLib.TaskGenerator`1<T> taskGenerator, SpatialSys.CommandLib.Command parentCommand = null)

Disassembly:
	0x026791C8 MOV X1, X19
	0x026791CC BL 0x1C16DEC
	0x026791D0 STP X30, X19, [X31 - 0x10]!
	0x026791D4 CBZ X0, 0x2679208
	0x026791D8 MOV X1, X31
	0x026791DC MOV X19, X0
	0x026791E0 BL 0x35B9A94
	0x026791E4 TBNZ X0, 0x0, 0x26791F8
	0x026791E8 LDR X0, [X19 + 0x50]
	0x026791EC CBZ X0, 0x26791F8
	0x026791F0 MOV X1, X31
	0x026791F4 BL 0x33DFCF8
	0x026791F8 MOV X0, X19
	0x026791FC MOV X1, X31
	0x02679200 LDP X30, X19, [X31], #0x10
	0x02679204 B 0x35BD53C
	0x02679208 BL 0x1C16F20
	0x0267920C SUB X31, X31, 0x80
	0x02679210 STR X30, [X31 + 0x60]
	0x02679214 STP X20, X19, [X31 + 0x70]
	0x02679218 MOV X20, X0
	0x0267921C MOVI V0.2D, 0x0
	0x02679220 ADD X8, X31, 0x0
	0x02679224 MOV X0, X31
	0x02679228 MOV X19, X1
	0x0267922C STR X31, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1D62000
	008 Move X23, 0x1AA5000
	009 Move W8, [X22+528]
	010 Move X23, [X23+1544]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1AA5000
	019 Move X0, [X0+1544]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+528], W8
	023 Move X1, [X23]
	024 Move W2, 1
	025 Move X0, X20
	026 Move X3, X31
	027 Call Command..ctor, X0, X1, X2
	028 Move [X20+48], X19
	029 Move [X20+56], X21
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return 

Method: System.Void .ctor(System.String identifier = null)

Disassembly:
	0x02679230 STP V0, V0, [X31 + 0x30]
	0x02679234 STR V0, [X31 + 0x2]
	0x02679238 BL 0x32C4100
	0x0267923C LDP V0, V1, [X31]
	0x02679240 MOVN W8, 0x0
	0x02679244 STR X20, [X31 + 0x48]
	0x02679248 STR W8, [X31 + 0x20]
	0x0267924C STUR V0, [X31 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W2, 1
	004 Move X3, X31
	005 Move X19, X0
	006 Call Command..ctor, X0, X1, X2
	007 Move [X19+48], X31
	008 Move [X19+56], X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void Start()

Disassembly:
	0x02679250 STUR V1, [X31 + 0x38]
	0x02679254 LDR X8, [X19 + 0x20]
	0x02679258 ADD X1, X31, 0x20
	0x0267925C LDR X8, [X8 + 0xC0]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+32]
	004 Call 0x267934C, X0
	005 Return 

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x02679260 LDR X2, [X8 + 0x30]
	0x02679264 ADD X8, X31, 0x20
	0x02679268 ORR X0, X8, 0xF
	0x0267926C BL 0x219B950
	0x02679270 LDP X20, X19, [X31 + 0x70]
	0x02679274 LDR X30, [X31 + 0x60]
	0x02679278 ADD X31, X31, 0x80
	0x0267927C RET
	0x02679280 LDR X0, [X0 + 0x58]
	0x02679284 RET
	0x02679288 STP X30, X21, [X31 - 0x20]!
	0x0267928C STP X20, X19, [X31 + 0x10]
	0x02679290 MOV X19, X3
	0x02679294 MOV X20, X2
	0x02679298 MOVZ W2, 0x1
	0x0267929C MOV X3, X31
	0x026792A0 MOV X21, X0
	0x026792A4 BL 0x35BC984
	0x026792A8 STP X19, X20, [X21 + 0x30]
	0x026792AC LDP X20, X19, [X31 + 0x10]
	0x026792B0 LDP X30, X21, [X31], #0x20
	0x026792B4 RET
	0x026792B8 STP X30, X23, [X31 - 0x30]!
	0x026792BC STP X22, X21, [X31 + 0x10]
	0x026792C0 STP X20, X19, [X31 + 0x20]
	0x026792C4 ADRP X22, 0x1D61000
	0x026792C8 ADRP X23, 0x1AA4000
	0x026792CC LDRB W8, [X22 + 0x217]
	0x026792D0 LDR X23, [X23 + 0x608]
	0x026792D4 MOV X19, X2
	0x026792D8 MOV X21, X1
	0x026792DC MOV X20, X0
	0x026792E0 TBNZ X8, 0x0, 0x26792F8
	0x026792E4 ADRP X0, 0x1AA4000
	0x026792E8 LDR X0, [X0 + 0x608]
	0x026792EC BL 0x1C16CF4
	0x026792F0 MOVZ W8, 0x1
	0x026792F4 STRB W8, [X22 + 0x217]
	0x026792F8 LDR X1, [X23]
	0x026792FC MOVZ W2, 0x1
	0x02679300 MOV X0, X20
	0x02679304 MOV X3, X31
	0x02679308 BL 0x35BC984
	0x0267930C STP X19, X21, [X20 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+64]
	007 Compare W8, 0
	008 JumpIfNotEqual {21}
	009 Move W8, [X0+65]
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfEqual {28}
	013 Move X19, X1
	014 Move X0, X20
	015 Move X1, X31
	016 Call Command.get_isAborted, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {29}
	021 Move W0, 1
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move X30, [X31+48]
	027 Return X0
	028 Move W0, W31
	029 Move X0, [X20+80]
	030 Compare X0, 0
	031 JumpIfEqual {34}
	032 Move X1, X31
	033 Call CancellationTokenSource.Cancel, X0
	034 Move X0, 0x1AA5000
	035 Move X0, [X0+1552]
	036 Call 0x1C17D08
	037 Move X1, X20
	038 Move X2, X31
	039 Call String.Format, X0, X1
	040 Move X21, X0
	041 Move X0, 0x1A7B000
	042 Move X20, [X20+72]
	043 Move X0, [X0+2000]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X1, X21
	047 Move X2, X20
	048 Move X3, X31
	049 Move X22, X0
	050 Call Exception..ctor, X0, X1, X2
	051 Move X0, X22
	052 Move X1, X19
	053 Call 0x1C17DEC

Method: System.Void Cancel()

Disassembly:
	0x02679310 LDP X20, X19, [X31 + 0x20]
	0x02679314 LDP X22, X21, [X31 + 0x10]
	0x02679318 LDP X30, X23, [X31], #0x30
	0x0267931C RET
	0x02679320 STP X30, X19, [X31 - 0x10]!
	0x02679324 MOVZ W2, 0x1
	0x02679328 MOV X3, X31
	0x0267932C MOV X19, X0
	0x02679330 BL 0x35BC984
	0x02679334 STP X31, X31, [X19 + 0x30]
	0x02679338 LDP X30, X19, [X31], #0x10
	0x0267933C RET
	0x02679340 LDR X8, [X1 + 0x20]
	0x02679344 LDR X8, [X8 + 0xC0]
	0x02679348 LDR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {23}
	005 Move X1, X31
	006 Move X19, X0
	007 Call Command.get_hasFinalized, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, [X19+80]
	013 Compare X0, 0
	014 JumpIfEqual {17}
	015 Move X1, X31
	016 Call CancellationTokenSource.Cancel, X0
	017 Move X0, X19
	018 Move X1, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call Command.Cancel, X0
	022 Return 
	023 Call 0x1C17F20

Method: System.Void AwaitTask()

Disassembly:
	0x0267934C B 0x267943C
	0x02679350 STR X30, [X31 - 0x30]!
	0x02679354 STP X22, X21, [X31 + 0x10]
	0x02679358 STP X20, X19, [X31 + 0x20]
	0x0267935C LDRB W8, [X0 + 0x40]
	0x02679360 CBNZ W8, 0x2679384
	0x02679364 LDRB W8, [X0 + 0x41]
	0x02679368 MOV X20, X0
	0x0267936C CBZ W8, 0x2679398
	0x02679370 MOV X19, X1
	0x02679374 MOV X0, X20
	0x02679378 MOV X1, X31
	0x0267937C BL 0x35BA460
	0x02679380 TBZ X0, 0x0, 0x26793A0
	0x02679384 MOVZ W0, 0x1
	0x02679388 LDP X20, X19, [X31 + 0x20]
	0x0267938C LDP X22, X21, [X31 + 0x10]
	0x02679390 LDR X30, [X31], #0x30
	0x02679394 RET
	0x02679398 MOV W0, W31
	0x0267939C B 0x2679388
	0x026793A0 LDR X0, [X20 + 0x50]
	0x026793A4 CBZ X0, 0x26793B0
	0x026793A8 MOV X1, X31
	0x026793AC BL 0x33DFCF8
	0x026793B0 ADRP X0, 0x1AA4000
	0x026793B4 LDR X0, [X0 + 0x610]
	0x026793B8 BL 0x1C16D08
	0x026793BC MOV X1, X20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Move X20, X0
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Add X8, X31, 0
	008 Move X0, X31
	009 Move X19, X1
	010 Move [X31+80], X31
	011 Move [X31+48], V0
	012 Move [X31+56], V0
	013 Move [X31+2], V0
	014 Call AsyncVoidMethodBuilder.Create
	015 Move V0, [X31]
	016 Move V1, [X31+16]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X31+72], X20
	021 Move [X31+32], W8
	022 Move [X31+40], V0
	023 Move [X31+56], V1
	024 Move X8, [X19+32]
	025 Add X1, X31, 32
	026 Move X8, [X8+192]
	027 Move X2, [X8+48]
	028 Add X8, X31, 32
	029 Or X0, X8, 15
	030 Call 0x219C450, X0, X1
	031 Move X20, [X31+112]
	032 Move X19, [X31+120]
	033 Move X30, [X31+96]
	034 Add X31, X31, 128
	035 Return 

