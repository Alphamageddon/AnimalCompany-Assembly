Type: SpatialSys.CommandLib.CustomCoroutineCommand

Method: System.Void .ctor(System.String identifier = null)

Disassembly:
	0x035BF4C4 BL 0x1C16F20
	0x035BF4C8 STR D8, [X31 - 0x30]!
	0x035BF4CC STP X30, X21, [X31 + 0x10]
	0x035BF4D0 STP X20, X19, [X31 + 0x20]
	0x035BF4D4 ADRP X20, 0xE21000
	0x035BF4D8 LDRB W8, [X20 + 0x15B]
	0x035BF4DC MOV V8.16B, V0.16B
	0x035BF4E0 MOV X19, X0
	0x035BF4E4 TBNZ X8, 0x0, 0x35BF514
	0x035BF4E8 ADRP X0, 0xB78000
	0x035BF4EC LDR X0, [X0 + 0x9A8]
	0x035BF4F0 BL 0x1C16CF4
	0x035BF4F4 ADRP X0, 0xB78000
	0x035BF4F8 LDR X0, [X0 + 0x9B0]
	0x035BF4FC BL 0x1C16CF4
	0x035BF500 ADRP X0, 0xB78000
	0x035BF504 LDR X0, [X0 + 0x970]
	0x035BF508 BL 0x1C16CF4
	0x035BF50C MOVZ W8, 0x1
	0x035BF510 STRB W8, [X20 + 0x15B]
	0x035BF514 LDRB W8, [X19 + 0x40]
	0x035BF518 CBZ W8, 0x35BF594
	0x035BF51C LDR X8, [X19 + 0x48]
	0x035BF520 CBZ X8, 0x35BF5A8
	0x035BF524 ADRP X20, 0xB78000
	0x035BF528 ADRP X21, 0xB78000
	0x035BF52C LDR X20, [X20 + 0x9B0]
	0x035BF530 LDR X21, [X21 + 0x9A8]
	0x035BF534 LDR W9, [X8 + 0x20]
	0x035BF538 CMP W9, 0x0
	0x035BF53C B.LE 0x35BF580
	0x035BF540 LDR X1, [X20]
	0x035BF544 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE22000
	007 Move X21, 0xB35000
	008 Move W8, [X22+333]
	009 Move X21, [X21+2392]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB35000
	017 Move X0, [X0+2392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+333], W8
	021 Move W2, 1
	022 Move X0, X19
	023 Move X1, X20
	024 Call Command..ctor, X0, X1, X2
	025 Move X0, [X21]
	026 Call 0x1C17F10
	027 Compare X19, 0
	028 JumpIfEqual {41}
	029 Move X8, [X19]
	030 Move X1, X19
	031 Move X20, X0
	032 Move X2, [X8+480]
	033 Call CoroutineGenerator..ctor, X0, X1, X2
	034 Move [X19+56], X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.CommandLib.Command> ExecuteAsync()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String ToString()

Disassembly:
	0x035BF548 BL 0x24F1954
	0x035BF54C CBZ X0, 0x35BF5A8
	0x035BF550 MOV V0.16B, V8.16B
	0x035BF554 BL 0x35BA238
	0x035BF558 LDR X8, [X19 + 0x48]
	0x035BF55C TBZ X0, 0x0, 0x35BF57C
	0x035BF560 CBZ X8, 0x35BF5A8
	0x035BF564 LDR X1, [X21]
	0x035BF568 MOV X0, X8
	0x035BF56C BL 0x24F18D4
	0x035BF570 LDR X8, [X19 + 0x48]
	0x035BF574 CBNZ X8, 0x35BF534
	0x035BF578 B 0x35BF5A8
	0x035BF57C CBZ X8, 0x35BF5A8
	0x035BF580 LDR W8, [X8 + 0x20]
	0x035BF584 CMP W8, 0x0
	0x035BF588 B.LE 0x35BF594
	0x035BF58C MOV W0, W31
	0x035BF590 B 0x35BF598
	0x035BF594 MOVZ W0, 0x1
	0x035BF598 LDP X20, X19, [X31 + 0x20]
	0x035BF59C LDP X30, X21, [X31 + 0x10]
	0x035BF5A0 LDR V8, [X31], #0x30
	0x035BF5A4 RET
	0x035BF5A8 BL 0x1C16F20
	0x035BF5AC STP X30, X27, [X31 - 0x50]!
	0x035BF5B0 STP X26, X25, [X31 + 0x10]
	0x035BF5B4 STP X24, X23, [X31 + 0x20]
	0x035BF5B8 STP X22, X21, [X31 + 0x30]
	0x035BF5BC STP X20, X19, [X31 + 0x40]
	0x035BF5C0 ADRP X20, 0xE21000
	0x035BF5C4 ADRP X24, 0xB78000
	0x035BF5C8 LDRB W8, [X20 + 0x15C]
	0x035BF5CC LDR X24, [X24 + 0xC38]
	0x035BF5D0 MOV X19, X0
	0x035BF5D4 TBNZ X8, 0x0, 0x35BF664
	0x035BF5D8 ADRP X0, 0xB78000
	0x035BF5DC LDR X0, [X0 + 0xC40]
	0x035BF5E0 BL 0x1C16CF4
	0x035BF5E4 ADRP X0, 0xB78000
	0x035BF5E8 LDR X0, [X0 + 0xC48]
	0x035BF5EC BL 0x1C16CF4
	0x035BF5F0 ADRP X0, 0xB34000
	0x035BF5F4 LDR X0, [X0 + 0xAC8]
	0x035BF5F8 BL 0x1C16CF4
	0x035BF5FC ADRP X0, 0xB78000
	0x035BF600 LDR X0, [X0 + 0xC50]
	0x035BF604 BL 0x1C16CF4
	0x035BF608 ADRP X0, 0xB78000
	0x035BF60C LDR X0, [X0 + 0xC58]
	0x035BF610 BL 0x1C16CF4
	0x035BF614 ADRP X0, 0xB78000
	0x035BF618 LDR X0, [X0 + 0xC38]
	0x035BF61C BL 0x1C16CF4
	0x035BF620 ADRP X0, 0xB78000
	0x035BF624 LDR X0, [X0 + 0xC60]
	0x035BF628 BL 0x1C16CF4
	0x035BF62C ADRP X0, 0xB78000
	0x035BF630 LDR X0, [X0 + 0xC68]
	0x035BF634 BL 0x1C16CF4
	0x035BF638 ADRP X0, 0xB34000
	0x035BF63C LDR X0, [X0 + 0x838]
	0x035BF640 BL 0x1C16CF4
	0x035BF644 ADRP X0, 0xB5E000
	0x035BF648 LDR X0, [X0 + 0x430]
	0x035BF64C BL 0x1C16CF4
	0x035BF650 ADRP X0, 0xB78000
	0x035BF654 LDR X0, [X0 + 0xC70]
	0x035BF658 BL 0x1C16CF4
	0x035BF65C MOVZ W8, 0x1
	0x035BF660 STRB W8, [X20 + 0x15C]
	0x035BF664 LDR X0, [X24]
	0x035BF668 ADRP X21, 0xB34000
	0x035BF66C LDR X20, [X19 + 0x48]
	0x035BF670 LDR W8, [X0 + 0xE0]
	0x035BF674 LDR X21, [X21 + 0x838]
	0x035BF678 CBNZ W8, 0x35BF684
	0x035BF67C BL 0x1C16DFC
	0x035BF680 LDR X0, [X24]
	0x035BF684 LDR X8, [X0 + 0xB8]
	0x035BF688 ADRP X27, 0xB78000
	0x035BF68C ADRP X26, 0xB78000
	0x035BF690 ADRP X25, 0xB34000
	0x035BF694 LDR X22, [X8 + 0x8]
	0x035BF698 LDR X21, [X21]
	0x035BF69C LDR X27, [X27 + 0xC40]
	0x035BF6A0 LDR X26, [X26 + 0xC50]
	0x035BF6A4 LDR X25, [X25 + 0xAC8]
	0x035BF6A8 CBNZ X22, 0x35BF6FC
	0x035BF6AC LDR W8, [X0 + 0xE0]
	0x035BF6B0 CBNZ W8, 0x35BF6BC
	0x035BF6B4 BL 0x1C16DFC
	0x035BF6B8 LDR X0, [X24]
	0x035BF6BC ADRP X9, 0xB78000
	0x035BF6C0 LDR X8, [X0 + 0xB8]
	0x035BF6C4 LDR X9, [X9 + 0xC48]
	0x035BF6C8 LDR X23, [X8]
	0x035BF6CC LDR X0, [X9]
	0x035BF6D0 BL 0x1C16F10
	0x035BF6D4 ADRP X8, 0xB78000
	0x035BF6D8 LDR X8, [X8 + 0xC58]
	0x035BF6DC MOV X1, X23
	0x035BF6E0 MOV X3, X31
	0x035BF6E4 MOV X22, X0
	0x035BF6E8 LDR X2, [X8]
	0x035BF6EC BL 0x2D30578
	0x035BF6F0 LDR X8, [X24]
	0x035BF6F4 LDR X8, [X8 + 0xB8]
	0x035BF6F8 STR X22, [X8 + 0x8]
	0x035BF6FC LDR X2, [X27]
	0x035BF700 MOV X0, X20
	0x035BF704 MOV X1, X22
	0x035BF708 BL 0x21CF224
	0x035BF70C LDR X2, [X26]
	0x035BF710 MOV X1, X0
	0x035BF714 MOV X0, X21
	0x035BF718 BL 0x226B7E8
	0x035BF71C LDR X8, [X25]
	0x035BF720 MOV X21, X0
	0x035BF724 MOVZ W1, 0x7
	0x035BF728 MOV X0, X8
	0x035BF72C BL 0x1C16D6C
	0x035BF730 CBZ X0, 0x35BF810
	0x035BF734 LDR W8, [X0 + 0x18]
	0x035BF738 MOV X20, X0
	0x035BF73C CBZ W8, 0x35BF80C
	0x035BF740 ADRP X8, 0xB78000
	0x035BF744 LDR X8, [X8 + 0xC70]
	0x035BF748 MOV X0, X19
	0x035BF74C LDR X8, [X8]
	0x035BF750 STR X8, [X20 + 0x20]
	0x035BF754 BL 0x35BC7DC
	0x035BF758 LDR W8, [X20 + 0x18]
	0x035BF75C CMP W8, 0x1
	0x035BF760 B.LS 0x35BF80C
	0x035BF764 CMP W8, 0x2
	0x035BF768 STR X0, [X20 + 0x28]
	0x035BF76C B.EQ 0x35BF80C
	0x035BF770 ADRP X8, 0xB78000
	0x035BF774 LDR X8, [X8 + 0xC68]
	0x035BF778 LDR X8, [X8]
	0x035BF77C STR X8, [X20 + 0x30]
	0x035BF780 LDR X0, [X19 + 0x38]
	0x035BF784 CBZ X0, 0x35BF810
	0x035BF788 MOV X1, X31
	0x035BF78C BL 0x33C4268
	0x035BF790 CBZ X0, 0x35BF810
	0x035BF794 LDR X8, [X0]
	0x035BF798 LDP X9, X1, [X8 + 0x1A8]
	0x035BF79C BLR X9
	0x035BF7A0 LDR W8, [X20 + 0x18]
	0x035BF7A4 CMP W8, 0x3
	0x035BF7A8 B.LS 0x35BF80C
	0x035BF7AC CMP W8, 0x4
	0x035BF7B0 STR X0, [X20 + 0x38]
	0x035BF7B4 B.EQ 0x35BF80C
	0x035BF7B8 ADRP X9, 0xB78000
	0x035BF7BC LDR X9, [X9 + 0xC60]
	0x035BF7C0 CMP W8, 0x5
	0x035BF7C4 LDR X9, [X9]
	0x035BF7C8 STR X9, [X20 + 0x40]
	0x035BF7CC B.LS 0x35BF80C
	0x035BF7D0 CMP W8, 0x6
	0x035BF7D4 STR X21, [X20 + 0x48]
	0x035BF7D8 B.EQ 0x35BF80C
	0x035BF7DC ADRP X8, 0xB5E000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xE22000
	013 Move W8, [X20+334]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0xB79000
	020 Move X0, [X0+2936]
	021 Call 0x1C17CF4
	022 Move X0, 0xB35000
	023 Move X0, [X0+3760]
	024 Call 0x1C17CF4
	025 Move X0, 0xB35000
	026 Move X0, [X0+3768]
	027 Call 0x1C17CF4
	028 Move X0, 0xB5E000
	029 Move X0, [X0+3424]
	030 Call 0x1C17CF4
	031 Move X0, 0xB5E000
	032 Move X0, [X0+3432]
	033 Call 0x1C17CF4
	034 Move X0, 0xB35000
	035 Move X0, [X0+3776]
	036 Call 0x1C17CF4
	037 Move X0, 0xB79000
	038 Move X0, [X0+2944]
	039 Call 0x1C17CF4
	040 Move X0, 0xB79000
	041 Move X0, [X0+2952]
	042 Call 0x1C17CF4
	043 Move X0, 0xB35000
	044 Move X0, [X0+2104]
	045 Call 0x1C17CF4
	046 Move X0, 0xB35000
	047 Move X0, [X0+3784]
	048 Call 0x1C17CF4
	049 Move X0, 0xB35000
	050 Move X0, [X0+2440]
	051 Call 0x1C17CF4
	052 Move X0, 0xB35000
	053 Move X0, [X0+2120]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+334], W8
	057 Move X0, X19
	058 Move X1, X31
	059 Call "il2cpp_vm_object_is_inst", X0
	060 Compare X0, 0
	061 JumpIfEqual {193}
	062 Move X8, [X0]
	063 Move X24, 0xB79000
	064 Move W1, 52
	065 Move X9, [X8+1672]
	066 Move X2, [X8+1680]
	067 Move X24, [X24+2952]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X24]
	070 Move X20, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X24]
	077 Move X9, [X8+184]
	078 Move X28, 0xB5E000
	079 Move X27, 0xB35000
	080 Move X26, 0xB79000
	081 Move X25, 0xB35000
	082 Move X23, 0xB35000
	083 Move X28, [X28+3424]
	084 Move X21, [X9+8]
	085 Move X27, [X27+3776]
	086 Move X26, [X26+2936]
	087 Move X25, [X25+3760]
	088 Move X23, [X23+3768]
	089 Compare X21, 0
	090 JumpIfNotEqual {113}
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {97}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X8, [X24]
	097 Move X9, 0xB5E000
	098 Move X8, [X8+184]
	099 Move X9, [X9+3432]
	100 Move X22, [X8]
	101 Move X0, [X9]
	102 Call 0x1C17F10
	103 Move X8, 0xB79000
	104 Move X8, [X8+2944]
	105 Move X1, X22
	106 Move X3, X31
	107 Move X21, X0
	108 Move X2, [X8]
	109 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	110 Move X8, [X24]
	111 Move X8, [X8+184]
	112 Move [X8+8], X21
	113 Move X2, [X28]
	114 Move X0, X20
	115 Move X1, X21
	116 Call Enumerable.Where, X0, X1
	117 Move X8, [X27]
	118 Move X20, X0
	119 Move X0, X8
	120 Call 0x1C17F10
	121 Move X2, [X26]
	122 Move X1, X19
	123 Move X3, X31
	124 Move X21, X0
	125 Call Func`2<Object, Object>..ctor, X0, X1, X2
	126 Move X2, [X25]
	127 Move X0, X20
	128 Move X1, X21
	129 Call Enumerable.Select, X0, X1
	130 Move X1, [X23]
	131 Call Enumerable.ToArray, X0
	132 Compare X0, 0
	133 JumpIfEqual {193}
	134 Move X21, [X0+24]
	135 Move X20, X0
	136 Move X0, X19
	137 Move X1, X31
	138 Call "il2cpp_vm_object_is_inst", X0
	139 Compare X0, 0
	140 JumpIfEqual {193}
	141 Move X8, [X0]
	142 Move X9, [X8+424]
	143 Move X1, [X8+432]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X19, X0
	146 Compare X21, 0
	147 JumpIfEqual {176}
	148 Move X8, 0xB35000
	149 Move X8, [X8+2104]
	150 Move X21, 0xB35000
	151 Move X22, 0xB35000
	152 Move X1, X20
	153 Move X0, [X8]
	154 Move X21, [X21+3784]
	155 Move X22, [X22+2120]
	156 Move X2, X31
	157 Call String.Join, X0, X1
	158 Move X1, [X21]
	159 Move X3, [X22]
	160 Move X2, X0
	161 Move X0, X19
	162 Move X20, [X31+80]
	163 Move X19, [X31+88]
	164 Move X22, [X31+64]
	165 Move X21, [X31+72]
	166 Move X24, [X31+48]
	167 Move X23, [X31+56]
	168 Move X26, [X31+32]
	169 Move X25, [X31+40]
	170 Move X28, [X31+16]
	171 Move X27, [X31+24]
	172 Move X4, X31
	173 Move X30, [X31+96]
	174 Call String.Concat, X0, X1, X2, X3
	175 Return X0
	176 Move X8, 0xB35000
	177 Move X8, [X8+2440]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X22, [X31+64]
	180 Move X21, [X31+72]
	181 Move X24, [X31+48]
	182 Move X23, [X31+56]
	183 Move X8, [X8]
	184 Move X26, [X31+32]
	185 Move X25, [X31+40]
	186 Move X28, [X31+16]
	187 Move X27, [X31+24]
	188 NotImplemented "Instruction CSEL not yet implemented."
	189 Move X20, [X31+80]
	190 Move X19, [X31+88]
	191 Move X30, [X31+96]
	192 Return X0
	193 Call 0x1C17F20

Method: System.Boolean IsSecuritySensitiveField(System.Reflection.MemberInfo member)

Disassembly:
	0x035BF7E0 LDR X8, [X8 + 0x430]
	0x035BF7E4 MOV X0, X20
	0x035BF7E8 LDP X22, X21, [X31 + 0x30]
	0x035BF7EC LDP X24, X23, [X31 + 0x20]
	0x035BF7F0 LDR X8, [X8]
	0x035BF7F4 LDP X26, X25, [X31 + 0x10]
	0x035BF7F8 MOV X1, X31
	0x035BF7FC STR X8, [X20 + 0x50]
	0x035BF800 LDP X20, X19, [X31 + 0x40]
	0x035BF804 LDP X30, X27, [X31], #0x50
	0x035BF808 B 0x32278CC
	0x035BF80C BL 0x1C16F28
	0x035BF810 BL 0x1C16F20
	0x035BF814 STR X30, [X31 - 0x20]!
	0x035BF818 STP X20, X19, [X31 + 0x10]
	0x035BF81C ADRP X19, 0xE21000
	0x035BF820 ADRP X20, 0xB78000
	0x035BF824 LDRB W8, [X19 + 0x15D]
	0x035BF828 LDR X20, [X20 + 0xC38]
	0x035BF82C TBNZ X8, 0x0, 0x35BF844
	0x035BF830 ADRP X0, 0xB78000
	0x035BF834 LDR X0, [X0 + 0xC38]
	0x035BF838 BL 0x1C16CF4
	0x035BF83C MOVZ W8, 0x1
	0x035BF840 STRB W8, [X19 + 0x15D]
	0x035BF844 LDR X0, [X20]
	0x035BF848 BL 0x1C16F10
	0x035BF84C MOV X1, X31
	0x035BF850 MOV X19, X0
	0x035BF854 BL 0x33BDD8C
	0x035BF858 LDR X8, [X20]
	0x035BF85C LDR X8, [X8 + 0xB8]
	0x035BF860 STR X19, [X8]
	0x035BF864 LDP X20, X19, [X31 + 0x10]
	0x035BF868 LDR X30, [X31], #0x20
	0x035BF86C RET
	0x035BF870 MOV X1, X31
	0x035BF874 B 0x33BDD8C
	0x035BF878 STR X30, [X31 - 0x20]!
	0x035BF87C STP X20, X19, [X31 + 0x10]
	0x035BF880 ADRP X20, 0xE21000
	0x035BF884 LDRB W8, [X20 + 0x15E]
	0x035BF888 MOV X19, X1
	0x035BF88C TBNZ X8, 0x0, 0x35BF8A4
	0x035BF890 ADRP X0, 0xB78000
	0x035BF894 LDR X0, [X0 + 0xC78]
	0x035BF898 BL 0x1C16CF4
	0x035BF89C MOVZ W8, 0x1
	0x035BF8A0 STRB W8, [X20 + 0x15E]
	0x035BF8A4 CBZ X19, 0x35BF8D0
	0x035BF8A8 LDR X8, [X19]
	0x035BF8AC ADRP X20, 0xB78000
	0x035BF8B0 MOV X0, X19
	0x035BF8B4 LDP X9, X1, [X8 + 0x168]
	0x035BF8B8 LDR X20, [X20 + 0xC78]
	0x035BF8BC BLR X9
	0x035BF8C0 LDR X1, [X20]
	0x035BF8C4 LDP X20, X19, [X31 + 0x10]
	0x035BF8C8 LDR X30, [X31], #0x20
	0x035BF8CC B 0x21D52B4
	0x035BF8D0 BL 0x1C16F20
	0x035BF8D4 LDR X0, [X0 + 0x38]
	0x035BF8D8 RET
	0x035BF8DC STR D8, [X31 - 0x30]!
	0x035BF8E0 STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE22000
	005 Move W8, [X20+335]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xB35000
	012 Move X0, [X0+3792]
	013 Call 0x1C17CF4
	014 Move X0, 0xB35000
	015 Move X0, [X0+3800]
	016 Call 0x1C17CF4
	017 Move X0, 0xB35000
	018 Move X0, [X0+3808]
	019 Call 0x1C17CF4
	020 Move X0, 0xB35000
	021 Move X0, [X0+3816]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+335], W8
	025 Compare X19, 0
	026 JumpIfEqual {83}
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+424]
	030 Move X1, [X8+432]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {83}
	034 Move X8, 0xB35000
	035 Move X8, [X8+3792]
	036 Move W2, 5
	037 Move X3, X31
	038 Move X19, X0
	039 Move X1, [X8]
	040 Call String.IndexOf, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfNotEqual {67}
	045 Move X8, 0xB35000
	046 Move X8, [X8+3808]
	047 Move W2, 5
	048 Move X0, X19
	049 Move X3, X31
	050 Move X1, [X8]
	051 Call String.IndexOf, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, -2147483648
	054 Compare TEMP, -2147483648
	055 JumpIfNotEqual {67}
	056 Move X8, 0xB35000
	057 Move X8, [X8+3816]
	058 Move W2, 5
	059 Move X0, X19
	060 Move X3, X31
	061 Move X1, [X8]
	062 Call String.IndexOf, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, -2147483648
	065 Compare TEMP, -2147483648
	066 JumpIfEqual {72}
	067 Move W0, 1
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Return X0
	072 Move X8, 0xB35000
	073 Move X8, [X8+3800]
	074 Move W2, 5
	075 Move X0, X19
	076 Move X3, X31
	077 Move X1, [X8]
	078 Call String.IndexOf, X0, X1, X2
	079 NotImplemented "Instruction ORN not yet implemented."
	080 Move W0, W8
	081 ShiftRight W0, 31
	082 And W0, W0, 0x7FFFFFFF
	083 Call 0x1C17F20

Method: System.String <ToString>b__2_1(System.Reflection.FieldInfo p)

Disassembly:
	0x035BF8E4 STP X20, X19, [X31 + 0x20]
	0x035BF8E8 ADRP X20, 0xE21000
	0x035BF8EC LDRB W8, [X20 + 0x161]
	0x035BF8F0 MOV V8.16B, V0.16B
	0x035BF8F4 MOV X19, X0
	0x035BF8F8 TBNZ X8, 0x0, 0x35BF928
	0x035BF8FC ADRP X0, 0xB78000
	0x035BF900 LDR X0, [X0 + 0x9A8]
	0x035BF904 BL 0x1C16CF4
	0x035BF908 ADRP X0, 0xB78000
	0x035BF90C LDR X0, [X0 + 0x9B0]
	0x035BF910 BL 0x1C16CF4
	0x035BF914 ADRP X0, 0xB78000
	0x035BF918 LDR X0, [X0 + 0x970]
	0x035BF91C BL 0x1C16CF4
	0x035BF920 MOVZ W8, 0x1
	0x035BF924 STRB W8, [X20 + 0x161]
	0x035BF928 LDR X8, [X19 + 0x38]
	0x035BF92C CBZ X8, 0x35BF9A8
	0x035BF930 ADRP X20, 0xB78000
	0x035BF934 ADRP X21, 0xB78000
	0x035BF938 LDR X20, [X20 + 0x9B0]
	0x035BF93C LDR X21, [X21 + 0x9A8]
	0x035BF940 LDR W9, [X8 + 0x20]
	0x035BF944 CMP W9, 0x0
	0x035BF948 B.LE 0x35BF98C
	0x035BF94C LDR X1, [X20]
	0x035BF950 MOV X0, X8
	0x035BF954 BL 0x24F1954
	0x035BF958 CBZ X0, 0x35BF9A8
	0x035BF95C MOV V0.16B, V8.16B
	0x035BF960 BL 0x35BA238
	0x035BF964 LDR X8, [X19 + 0x38]
	0x035BF968 TBZ X0, 0x0, 0x35BF988
	0x035BF96C CBZ X8, 0x35BF9A8
	0x035BF970 LDR X1, [X21]
	0x035BF974 MOV X0, X8
	0x035BF978 BL 0x24F18D4
	0x035BF97C LDR X8, [X19 + 0x38]
	0x035BF980 CBNZ X8, 0x35BF940
	0x035BF984 B 0x35BF9A8
	0x035BF988 CBZ X8, 0x35BF9A8
	0x035BF98C LDR W8, [X8 + 0x20]
	0x035BF990 LDP X20, X19, [X31 + 0x20]
	0x035BF994 LDP X30, X21, [X31 + 0x10]
	0x035BF998 CMP W8, 0x0
	0x035BF99C CSET W0, EQ
	0x035BF9A0 LDR V8, [X31], #0x30
	0x035BF9A4 RET
	0x035BF9A8 BL 0x1C16F20
	0x035BF9AC STR X30, [X31 - 0x20]!
	0x035BF9B0 STP X20, X19, [X31 + 0x10]
	0x035BF9B4 ADRP X20, 0xE21000
	0x035BF9B8 LDRB W8, [X20 + 0x162]
	0x035BF9BC MOV X19, X0
	0x035BF9C0 TBNZ X8, 0x0, 0x35BF9D8
	0x035BF9C4 ADRP X0, 0xB78000
	0x035BF9C8 LDR X0, [X0 + 0x9B0]
	0x035BF9CC BL 0x1C16CF4
	0x035BF9D0 MOVZ W8, 0x1
	0x035BF9D4 STRB W8, [X20 + 0x162]
	0x035BF9D8 LDR W8, [X19 + 0x10]
	0x035BF9DC CMP W8, 0x2
	0x035BF9E0 B.EQ 0x35BFA54
	0x035BF9E4 CMP W8, 0x4
	0x035BF9E8 B.EQ 0x35BFA54
	0x035BF9EC MOV X9, X19
	0x035BF9F0 LDR X9, [X9 + 0x30]
	0x035BF9F4 CBZ X9, 0x35BFA08
	0x035BF9F8 LDR W10, [X9 + 0x10]
	0x035BF9FC CMP W10, 0x2
	0x035BFA00 B.NE 0x35BF9F0
	0x035BFA04 B 0x35BFA54
	0x035BFA08 CMP W8, 0x3
	0x035BFA0C B.EQ 0x35BFA54
	0x035BFA10 MOV X8, X19
	0x035BFA14 LDR X8, [X8 + 0x30]
	0x035BFA18 CBZ X8, 0x35BFA2C
	0x035BFA1C LDR W9, [X8 + 0x10]
	0x035BFA20 CMP W9, 0x3
	0x035BFA24 B.NE 0x35BFA14
	0x035BFA28 B 0x35BFA54
	0x035BFA2C LDR X0, [X19 + 0x38]
	0x035BFA30 CBZ X0, 0x35BFA64
	0x035BFA34 ADRP X8, 0xB78000
	0x035BFA38 LDR X8, [X8 + 0x9B0]
	0x035BFA3C LDR X1, [X8]
	0x035BFA40 BL 0x24F1954
	0x035BFA44 CBZ X0, 0x35BFA64
	0x035BFA48 LDR X8, [X0]
	0x035BFA4C LDP X9, X1, [X8 + 0x1B8]
	0x035BFA50 BLR X9
	0x035BFA54 MOV X0, X19
	0x035BFA58 LDP X20, X19, [X31 + 0x10]
	0x035BFA5C LDR X30, [X31], #0x20
	0x035BFA60 B 0x35BD53C
	0x035BFA64 BL 0x1C16F20
	0x035BFA68 STR X30, [X31 - 0x50]!
	0x035BFA6C STP X26, X25, [X31 + 0x10]
	0x035BFA70 STP X24, X23, [X31 + 0x20]
	0x035BFA74 STP X22, X21, [X31 + 0x30]
	0x035BFA78 STP X20, X19, [X31 + 0x40]
	0x035BFA7C ADRP X20, 0xE21000
	0x035BFA80 ADRP X24, 0xB78000
	0x035BFA84 LDRB W8, [X20 + 0x163]
	0x035BFA88 LDR X24, [X24 + 0xC80]
	0x035BFA8C MOV X19, X0
	0x035BFA90 TBNZ X8, 0x0, 0x35BFB08
	0x035BFA94 ADRP X0, 0xB78000
	0x035BFA98 LDR X0, [X0 + 0xC10]
	0x035BFA9C BL 0x1C16CF4
	0x035BFAA0 ADRP X0, 0xB78000
	0x035BFAA4 LDR X0, [X0 + 0xC18]
	0x035BFAA8 BL 0x1C16CF4
	0x035BFAAC ADRP X0, 0xB34000
	0x035BFAB0 LDR X0, [X0 + 0xAC8]
	0x035BFAB4 BL 0x1C16CF4
	0x035BFAB8 ADRP X0, 0xB78000
	0x035BFABC LDR X0, [X0 + 0xC88]
	0x035BFAC0 BL 0x1C16CF4
	0x035BFAC4 ADRP X0, 0xB78000
	0x035BFAC8 LDR X0, [X0 + 0xC80]
	0x035BFACC BL 0x1C16CF4
	0x035BFAD0 ADRP X0, 0xB78000
	0x035BFAD4 LDR X0, [X0 + 0xC60]
	0x035BFAD8 BL 0x1C16CF4
	0x035BFADC ADRP X0, 0xB34000
	0x035BFAE0 LDR X0, [X0 + 0x838]
	0x035BFAE4 BL 0x1C16CF4
	0x035BFAE8 ADRP X0, 0xB5E000
	0x035BFAEC LDR X0, [X0 + 0x430]
	0x035BFAF0 BL 0x1C16CF4
	0x035BFAF4 ADRP X0, 0xB78000
	0x035BFAF8 LDR X0, [X0 + 0xC90]
	0x035BFAFC BL 0x1C16CF4
	0x035BFB00 MOVZ W8, 0x1
	0x035BFB04 STRB W8, [X20 + 0x163]
	0x035BFB08 LDR X0, [X24]
	0x035BFB0C ADRP X21, 0xB34000
	0x035BFB10 LDR X20, [X19 + 0x38]
	0x035BFB14 LDR W8, [X0 + 0xE0]
	0x035BFB18 LDR X21, [X21 + 0x838]
	0x035BFB1C CBNZ W8, 0x35BFB28
	0x035BFB20 BL 0x1C16DFC
	0x035BFB24 LDR X0, [X24]
	0x035BFB28 LDR X8, [X0 + 0xB8]
	0x035BFB2C ADRP X26, 0xB78000
	0x035BFB30 ADRP X25, 0xB34000
	0x035BFB34 LDR X21, [X21]
	0x035BFB38 LDR X22, [X8 + 0x8]
	0x035BFB3C LDR X26, [X26 + 0xC10]
	0x035BFB40 LDR X25, [X25 + 0xAC8]
	0x035BFB44 CBNZ X22, 0x35BFB98
	0x035BFB48 LDR W8, [X0 + 0xE0]
	0x035BFB4C CBNZ W8, 0x35BFB58
	0x035BFB50 BL 0x1C16DFC
	0x035BFB54 LDR X0, [X24]
	0x035BFB58 ADRP X9, 0xB78000
	0x035BFB5C LDR X8, [X0 + 0xB8]
	0x035BFB60 LDR X9, [X9 + 0xC18]
	0x035BFB64 LDR X23, [X8]
	0x035BFB68 LDR X0, [X9]
	0x035BFB6C BL 0x1C16F10
	0x035BFB70 ADRP X8, 0xB78000
	0x035BFB74 LDR X8, [X8 + 0xC88]
	0x035BFB78 MOV X1, X23
	0x035BFB7C MOV X3, X31
	0x035BFB80 MOV X22, X0
	0x035BFB84 LDR X2, [X8]
	0x035BFB88 BL 0x2D30578
	0x035BFB8C LDR X8, [X24]
	0x035BFB90 LDR X8, [X8 + 0xB8]
	0x035BFB94 STR X22, [X8 + 0x8]
	0x035BFB98 LDR X2, [X26]
	0x035BFB9C MOV X0, X20
	0x035BFBA0 MOV X1, X22
	0x035BFBA4 BL 0x21CF224
	0x035BFBA8 MOV X1, X0
	0x035BFBAC MOV X0, X21
	0x035BFBB0 MOV X2, X31
	0x035BFBB4 BL 0x32280D8
	0x035BFBB8 LDR X8, [X25]
	0x035BFBBC MOV X21, X0
	0x035BFBC0 MOVZ W1, 0x5
	0x035BFBC4 MOV X0, X8
	0x035BFBC8 BL 0x1C16D6C
	0x035BFBCC CBZ X0, 0x35BFC64
	0x035BFBD0 LDR W8, [X0 + 0x18]
	0x035BFBD4 MOV X20, X0
	0x035BFBD8 CBZ W8, 0x35BFC60
	0x035BFBDC ADRP X8, 0xB78000
	0x035BFBE0 LDR X8, [X8 + 0xC90]
	0x035BFBE4 MOV X0, X19
	0x035BFBE8 LDR X8, [X8]
	0x035BFBEC STR X8, [X20 + 0x20]
	0x035BFBF0 BL 0x35BC7DC
	0x035BFBF4 LDR W8, [X20 + 0x18]
	0x035BFBF8 CMP W8, 0x1
	0x035BFBFC B.LS 0x35BFC60
	0x035BFC00 CMP W8, 0x2
	0x035BFC04 STR X0, [X20 + 0x28]
	0x035BFC08 B.EQ 0x35BFC60
	0x035BFC0C ADRP X9, 0xB78000
	0x035BFC10 LDR X9, [X9 + 0xC60]
	0x035BFC14 CMP W8, 0x3
	0x035BFC18 LDR X9, [X9]
	0x035BFC1C STR X9, [X20 + 0x30]
	0x035BFC20 B.LS 0x35BFC60
	0x035BFC24 CMP W8, 0x4
	0x035BFC28 STR X21, [X20 + 0x38]
	0x035BFC2C B.EQ 0x35BFC60
	0x035BFC30 ADRP X8, 0xB5E000
	0x035BFC34 LDR X8, [X8 + 0x430]
	0x035BFC38 MOV X0, X20
	0x035BFC3C LDP X22, X21, [X31 + 0x30]
	0x035BFC40 LDP X24, X23, [X31 + 0x20]
	0x035BFC44 LDR X8, [X8]
	0x035BFC48 LDP X26, X25, [X31 + 0x10]
	0x035BFC4C MOV X1, X31
	0x035BFC50 STR X8, [X20 + 0x40]
	0x035BFC54 LDP X20, X19, [X31 + 0x40]
	0x035BFC58 LDR X30, [X31], #0x50
	0x035BFC5C B 0x32278CC
	0x035BFC60 BL 0x1C16F28
	0x035BFC64 BL 0x1C16F20
	0x035BFC68 STR X30, [X31 - 0x20]!
	0x035BFC6C STP X20, X19, [X31 + 0x10]
	0x035BFC70 ADRP X19, 0xE21000
	0x035BFC74 ADRP X20, 0xB78000
	0x035BFC78 LDRB W8, [X19 + 0x164]
	0x035BFC7C LDR X20, [X20 + 0xC80]
	0x035BFC80 TBNZ X8, 0x0, 0x35BFC98
	0x035BFC84 ADRP X0, 0xB78000
	0x035BFC88 LDR X0, [X0 + 0xC80]
	0x035BFC8C BL 0x1C16CF4
	0x035BFC90 MOVZ W8, 0x1
	0x035BFC94 STRB W8, [X19 + 0x164]
	0x035BFC98 LDR X0, [X20]
	0x035BFC9C BL 0x1C16F10
	0x035BFCA0 MOV X1, X31
	0x035BFCA4 MOV X19, X0
	0x035BFCA8 BL 0x33BDD8C
	0x035BFCAC LDR X8, [X20]
	0x035BFCB0 LDR X8, [X8 + 0xB8]
	0x035BFCB4 STR X19, [X8]
	0x035BFCB8 LDP X20, X19, [X31 + 0x10]
	0x035BFCBC LDR X30, [X31], #0x20
	0x035BFCC0 RET
	0x035BFCC4 MOV X1, X31
	0x035BFCC8 B 0x33BDD8C
	0x035BFCCC STR X30, [X31 - 0x10]!
	0x035BFCD0 CBZ X1, 0x35BFCEC
	0x035BFCD4 LDR X8, [X1]
	0x035BFCD8 MOV X0, X1
	0x035BFCDC LDP X2, X8, [X8 + 0x168]
	0x035BFCE0 MOV X1, X8
	0x035BFCE4 LDR X30, [X31], #0x10
	0x035BFCE8 BR X2
	0x035BFCEC BL 0x1C16F20
	0x035BFCF0 STP X30, X21, [X31 - 0x20]!
	0x035BFCF4 STP X20, X19, [X31 + 0x10]
	0x035BFCF8 LDR X8, [X2 + 0x8]
	0x035BFCFC STP X1, X2, [X0 + 0x20]
	0x035BFD00 MOV X19, X0
	0x035BFD04 MOV X20, X1
	0x035BFD08 STR X8, [X0 + 0x10]
	0x035BFD0C LDRB W21, [X2 + 0x52]
	0x035BFD10 STR X0, [X0 + 0x40]
	0x035BFD14 MOV X0, X2
	0x035BFD18 BL 0x1C16D84

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE22000
	008 Move W8, [X21+336]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {56}
	015 Move X0, 0xB79000
	016 Move X0, [X0+2960]
	017 Call 0x1C17CF4
	018 Move X0, 0xB79000
	019 Move X0, [X0+2968]
	020 Call 0x1C17CF4
	021 Move X0, 0xB35000
	022 Move X0, [X0+3824]
	023 Call 0x1C17CF4
	024 Move X0, 0xB35000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0xB35000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xB35000
	031 Move X0, [X0+3832]
	032 Call 0x1C17CF4
	033 Move X0, 0xB35000
	034 Move X0, [X0+3840]
	035 Call 0x1C17CF4
	036 Move X0, 0xB62000
	037 Move X0, [X0+4024]
	038 Call 0x1C17CF4
	039 Move X0, 0xB35000
	040 Move X0, [X0+2104]
	041 Call 0x1C17CF4
	042 Move X0, 0xB35000
	043 Move X0, [X0+3848]
	044 Call 0x1C17CF4
	045 Move X0, 0xB35000
	046 Move X0, [X0+3856]
	047 Call 0x1C17CF4
	048 Move X0, 0xB35000
	049 Move X0, [X0+2120]
	050 Call 0x1C17CF4
	051 Move X0, 0xB79000
	052 Move X0, [X0+2976]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+336], W8
	056 Compare X19, 0
	057 JumpIfEqual {310}
	058 Move X8, [X19]
	059 Move X0, X19
	060 Move X9, [X8+600]
	061 Move X1, [X8+608]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X21, X0
	064 Move X0, X19
	065 Call CustomCoroutineCommand.IsSecuritySensitiveField, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {82}
	070 Move X8, [X19]
	071 Move X0, X19
	072 Move X9, [X8+424]
	073 Move X1, [X8+432]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X0, 0
	076 JumpIfEqual {310}
	077 Move W1, 95
	078 Move X2, X31
	079 Call String.TrimStart, X0, X1
	080 Move X8, 0xB35000
	081 Move X8, [X8+3848]
	082 Compare X21, 0
	083 JumpIfEqual {310}
	084 Move X0, X21
	085 Move X1, X31
	086 Call Type.get_IsArray, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {133}
	091 Move X8, [X19]
	092 Move X0, X19
	093 Move X1, X20
	094 Move X9, [X8+712]
	095 Move X2, [X8+720]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare X0, 0
	098 JumpIfEqual {111}
	099 Move X8, 0xB35000
	100 Move X8, [X8+3824]
	101 Move X9, [X0]
	102 Move X20, X0
	103 Move X8, [X8]
	104 Move W11, [X9+304]
	105 Move W10, [X8+304]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X9, [X9+200]
	108 Add X9, X9, X10
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X8, [X19]
	112 Move X0, X19
	113 Move X9, [X8+424]
	114 Move X1, [X8+432]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Compare X0, 0
	117 JumpIfEqual {310}
	118 Move W1, 95
	119 Move X2, X31
	120 Call String.TrimStart, X0, X1
	121 Move X8, 0xB79000
	122 Move X8, [X8+2976]
	123 Move X1, [X8]
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X22, [X31+16]
	127 Move X21, [X31+24]
	128 Move X2, X31
	129 Move X30, [X31+48]
	130 Move X23, [X31+56]
	131 Call String.Concat, X0, X1
	132 Return X0
	133 Move X8, 0xB35000
	134 Move X8, [X8+1728]
	135 Move X0, [X8]
	136 Move X8, 0xB79000
	137 Move X8, [X8+2960]
	138 Move W9, [X0+224]
	139 Move X22, [X8]
	140 Compare W9, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X22
	144 Move X1, X31
	145 Call Type.GetTypeFromHandle, X0
	146 Move X1, X0
	147 Move X0, X21
	148 Move X2, X31
	149 Call Type.op_Equality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {170}
	154 Move X8, [X19]
	155 Move X0, X19
	156 Move X1, X20
	157 Move X9, [X8+712]
	158 Move X2, [X8+720]
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X0, 0
	161 JumpIfEqual {169}
	162 Move X8, 0xB79000
	163 Move X8, [X8+2968]
	164 Move X9, [X0]
	165 Move X8, [X8]
	166 Move W11, [X9+304]
	167 Move W10, [X8+304]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X20, X31
	170 Move X8, [X19]
	171 Move X0, X19
	172 Move X9, [X8+424]
	173 Move X1, [X8+432]
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Compare X0, 0
	176 JumpIfEqual {310}
	177 Move W1, 95
	178 Move X2, X31
	179 Call String.TrimStart, X0, X1
	180 Move X8, [X19]
	181 Move X21, X0
	182 Move X0, X19
	183 Move X1, X20
	184 Move X9, [X8+712]
	185 Move X2, [X8+720]
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X8, 0xB35000
	188 Move X8, [X8+3832]
	189 Move X1, X21
	190 Move X20, [X31+32]
	191 Move X19, [X31+40]
	192 Move X22, [X31+16]
	193 Move X21, [X31+24]
	194 Move X8, [X8]
	195 Move X2, X0
	196 Move X3, X31
	197 Move X0, X8
	198 Move X30, [X31+48]
	199 Move X23, [X31+56]
	200 Call String.Format, X0, X1, X2
	201 Return X0
	202 Move X9, [X9+200]
	203 Add X9, X9, X10
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CSEL not yet implemented."
	207 Move X8, [X19]
	208 Move X0, X19
	209 Move X9, [X8+424]
	210 Move X1, [X8+432]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X0, 0
	213 JumpIfEqual {310}
	214 Move W1, 95
	215 Move X2, X31
	216 Call String.TrimStart, X0, X1
	217 Move X19, X0
	218 Compare X20, 0
	219 JumpIfEqual {236}
	220 Move X0, X20
	221 Call Command.get_identifier, X0
	222 Move X8, 0xB62000
	223 Move X8, [X8+4024]
	224 Move X2, X0
	225 Move X0, X19
	226 Move X20, [X31+32]
	227 Move X19, [X31+40]
	228 Move X1, [X8]
	229 Move X22, [X31+16]
	230 Move X21, [X31+24]
	231 Move X3, X31
	232 Move X30, [X31+48]
	233 Move X23, [X31+56]
	234 Call String.Concat, X0, X1, X2
	235 Return X0
	236 Move X8, 0xB35000
	237 Move X8, [X8+3840]
	238 Move X0, X19
	239 Move X0, X20
	240 Move X1, X31
	241 Call Array.get_Length, X0
	242 Move X8, 0xB35000
	243 Move X8, [X8+2760]
	244 Move W1, W0
	245 Move X8, [X8]
	246 Move X0, X8
	247 Call 0x1C17D6C
	248 Move X21, X0
	249 Move X0, X20
	250 Move X1, X31
	251 Call Array.get_Length, X0
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X22, X31
	254 Add X23, X21, 32
	255 Move X0, X20
	256 Move W1, W22
	257 Move X2, X31
	258 Call Array.GetValue, X0, X1
	259 Compare X0, 0
	260 JumpIfEqual {310}
	261 Move X8, [X0]
	262 Move X9, [X8+360]
	263 Move X1, [X8+368]
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Compare X21, 0
	266 JumpIfEqual {310}
	267 Move W8, [X21+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move [X23], X0
	270 Move X0, X20
	271 Move X1, X31
	272 Add X22, X22, 1
	273 Call Array.get_Length, X0
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X8, [X19]
	276 Move X0, X19
	277 Move X9, [X8+424]
	278 Move X1, [X8+432]
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Compare X0, 0
	281 JumpIfEqual {310}
	282 Move W1, 95
	283 Move X2, X31
	284 Call String.TrimStart, X0, X1
	285 Move X8, 0xB35000
	286 Move X8, [X8+2104]
	287 Move X19, X0
	288 Move X1, X21
	289 Move X2, X31
	290 Move X8, [X8]
	291 Move X0, X8
	292 Call String.Join, X0, X1
	293 Move X8, 0xB35000
	294 Move X9, 0xB35000
	295 Move X8, [X8+3856]
	296 Move X9, [X9+2120]
	297 Move X2, X0
	298 Move X0, X19
	299 Move X1, [X8]
	300 Move X3, [X9]
	301 Move X20, [X31+32]
	302 Move X19, [X31+40]
	303 Move X22, [X31+16]
	304 Move X21, [X31+24]
	305 Move X4, X31
	306 Move X30, [X31+48]
	307 Move X23, [X31+56]
	308 Call String.Concat, X0, X1, X2, X3
	309 Return X0
	310 Call 0x1C17F20
	311 Call 0x1C17F28

