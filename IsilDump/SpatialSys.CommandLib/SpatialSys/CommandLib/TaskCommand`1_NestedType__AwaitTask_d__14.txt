Type: SpatialSys.CommandLib.TaskCommand`1/<AwaitTask>d__14

Method: System.Void MoveNext()

Disassembly:
	0x02384888 MOV X2, X19
	0x0238488C BL 0x219901C
	0x02384890 B 0x2384920
	0x02384894 LDR X8, [X19 + 0x30]
	0x02384898 MOVN W24, 0x0
	0x0238489C STR X8, [X31 + 0x8]
	0x023848A0 STR X31, [X19 + 0x30]
	0x023848A4 STR W24, [X19]
	0x023848A8 LDR X0, [X20 + 0x20]
	0x023848AC LDRB W8, [X0 + 0x135]
	0x023848B0 TBNZ X8, 0x0, 0x23848B8
	0x023848B4 BL 0x1C5C684
	0x023848B8 LDR X8, [X0 + 0xC0]
	0x023848BC LDR X1, [X8 + 0x60]
	0x023848C0 ADD X0, X31, 0x8
	0x023848C4 BL 0x2677C68
	0x023848C8 CBZ X23, 0x2384940
	0x023848CC MOVZ W8, 0x1
	0x023848D0 MOV X20, X31
	0x023848D4 STR X0, [X23 + 0x58]
	0x023848D8 STRB W8, [X23 + 0x40]
	0x023848DC MOVZ W21, 0x7
	0x023848E0 TBZ X24, 0x1F, 0x23848FC
	0x023848E4 CBZ X23, 0x2384954
	0x023848E8 LDR X0, [X23 + 0x50]
	0x023848EC CBZ X0, 0x2384958
	0x023848F0 MOV X1, X31
	0x023848F4 BL 0x33E01CC
	0x023848F8 STR X31, [X23 + 0x50]
	0x023848FC CBNZ X20, 0x2384938
	0x02384900 CBZ W21, 0x238490C
	0x02384904 CMP W21, 0x7
	0x02384908 B.NE 0x2384920
	0x0238490C MOVN W8, 0x1
	0x02384910 STR W8, [X19], #0x8
	0x02384914 MOV X0, X19
	0x02384918 MOV X1, X31
	0x0238491C BL 0x32C4204
	0x02384920 LDP X20, X19, [X31 + 0x40]
	0x02384924 LDP X22, X21, [X31 + 0x30]
	0x02384928 LDP X24, X23, [X31 + 0x20]
	0x0238492C LDP X30, X25, [X31 + 0x10]
	0x02384930 ADD X31, X31, 0x50
	0x02384934 RET
	0x02384938 MOV X0, X20
	0x0238493C BL 0x1C16F18
	0x02384940 BL 0x1C16F20
	0x02384944 BL 0x1C16F20
	0x02384948 BL 0x1C16F20
	0x0238494C BL 0x1C16F20
	0x02384950 BL 0x1C16F20
	0x02384954 BL 0x1C16F20
	0x02384958 BL 0x1C16F20
	0x0238495C MOV X22, X0
	0x02384960 MOV W24, W31
	0x02384964 B 0x238499C
	0x02384968 B 0x2384998
	0x0238496C B 0x2384998
	0x02384970 B 0x2384998
	0x02384974 B 0x2384998
	0x02384978 B 0x2384998
	0x0238497C B 0x2384998
	0x02384980 B 0x2384998
	0x02384984 MOV X21, X1
	0x02384988 MOV X22, X0
	0x0238498C MOVZ W25, 0x1
	0x02384990 B 0x2384A80
	0x02384994 B 0x2384998
	0x02384998 MOV X22, X0
	0x0238499C MOV W21, W1
	0x023849A0 CMP W1, 0x1
	0x023849A4 B.NE 0x2384A34
	0x023849A8 MOV X0, X22
	0x023849AC BL 0x3EB1AD0
	0x023849B0 MOV X20, X0
	0x023849B4 ADRP X0, 0x1D6F000
	0x023849B8 LDR X0, [X0 + 0x7D0]
	0x023849BC BL 0x1C16D08
	0x023849C0 LDR X8, [X20]
	0x023849C4 LDR X1, [X8]
	0x023849C8 BL 0x1C17270
	0x023849CC TBZ X0, 0x0, 0x23849F0
	0x023849D0 LDR X21, [X20]
	0x023849D4 BL 0x3EB1AE0
	0x023849D8 CBZ X23, 0x2384A14
	0x023849DC MOVZ W8, 0x1
	0x023849E0 MOV X20, X31
	0x023849E4 STR X21, [X23 + 0x48]
	0x023849E8 STRB W8, [X23 + 0x41]
	0x023849EC B 0x23848DC
	0x023849F0 MOVZ W0, 0x8
	0x023849F4 BL 0x3EB1AF0
	0x023849F8 LDR X8, [X20]
	0x023849FC STR X8, [X0]
	0x02384A00 ADRP X1, 0x1B30000
	0x02384A04 ADD X1, X1, 0xE58
	0x02384A08 MOV X2, X31
	0x02384A0C BL 0x3EB1B00
	0x02384A10 B 0x2384AF4
	0x02384A14 BL 0x1C16F20
	0x02384A18 B 0x2384A1C
	0x02384A1C MOV X22, X0
	0x02384A20 MOV W21, W1
	0x02384A24 B 0x2384A34
	0x02384A28 MOV X21, X1
	0x02384A2C MOV X22, X0
	0x02384A30 BL 0x3EB1AE0
	0x02384A34 MOVZ W25, 0x1
	0x02384A38 CMP W21, W25
	0x02384A3C B.NE 0x2384A5C
	0x02384A40 MOV X0, X22
	0x02384A44 BL 0x3EB1AD0
	0x02384A48 LDR X20, [X0]
	0x02384A4C BL 0x3EB1AE0
	0x02384A50 MOV W21, W31
	0x02384A54 TBZ X24, 0x1F, 0x23848FC
	0x02384A58 B 0x23848E4
	0x02384A5C MOV X20, X31
	0x02384A60 TBZ X24, 0x1F, 0x2384A7C
	0x02384A64 CBZ X23, 0x2384AFC
	0x02384A68 LDR X0, [X23 + 0x50]
	0x02384A6C CBZ X0, 0x2384B00
	0x02384A70 MOV X1, X31
	0x02384A74 BL 0x33E01CC
	0x02384A78 STR X31, [X23 + 0x50]
	0x02384A7C CBNZ X20, 0x2384AF4
	0x02384A80 CMP W21, W25
	0x02384A84 B.NE 0x2384B1C
	0x02384A88 MOV X0, X22
	0x02384A8C BL 0x3EB1AD0
	0x02384A90 MOV X20, X0
	0x02384A94 ADRP X0, 0x1D6F000
	0x02384A98 LDR X0, [X0 + 0x7D0]
	0x02384A9C BL 0x1C16D08
	0x02384AA0 LDR X8, [X20]
	0x02384AA4 LDR X1, [X8]
	0x02384AA8 BL 0x1C17270
	0x02384AAC TBZ X0, 0x0, 0x2384AD4
	0x02384AB0 LDR X20, [X20]
	0x02384AB4 BL 0x3EB1AE0
	0x02384AB8 MOVN W8, 0x1
	0x02384ABC STR W8, [X19], #0x8
	0x02384AC0 MOV X0, X19
	0x02384AC4 MOV X1, X20
	0x02384AC8 MOV X2, X31
	0x02384ACC BL 0x32C4368
	0x02384AD0 B 0x2384920
	0x02384AD4 MOVZ W0, 0x8
	0x02384AD8 BL 0x3EB1AF0
	0x02384ADC LDR X8, [X20]
	0x02384AE0 STR X8, [X0]
	0x02384AE4 ADRP X1, 0x1B30000
	0x02384AE8 ADD X1, X1, 0xE58
	0x02384AEC MOV X2, X31
	0x02384AF0 BL 0x3EB1B00
	0x02384AF4 MOV X0, X20
	0x02384AF8 BL 0x1C16F18
	0x02384AFC BL 0x1C16F20
	0x02384B00 BL 0x1C16F20
	0x02384B04 MOV X22, X0
	0x02384B08 MOV W21, W1
	0x02384B0C TBZ X24, 0x1F, 0x2384A7C
	0x02384B10 B 0x2384A64
	0x02384B14 MOV X22, X0
	0x02384B18 BL 0x3EB1AE0
	0x02384B1C MOV X0, X22
	0x02384B20 BL 0x1D2C690
	0x02384B24 BL 0x1990590
	0x02384B28 ADD X0, X0, 0x8
	0x02384B2C MOV X2, X31
	0x02384B30 B 0x32C4140
	0x02384B34 SUB X31, X31, 0xB0
	0x02384B38 STP X30, X25, [X31 + 0x70]
	0x02384B3C STP X24, X23, [X31 + 0x80]
	0x02384B40 STP X22, X21, [X31 + 0x90]
	0x02384B44 STP X20, X19, [X31 + 0xA0]
	0x02384B48 ADRP X21, 0x2055000
	0x02384B4C LDRB W8, [X21 + 0x920]
	0x02384B50 MOV X20, X1
	0x02384B54 MOV X19, X0
	0x02384B58 TBNZ X8, 0x0, 0x2384B70
	0x02384B5C ADRP X0, 0x1D71000
	0x02384B60 LDR X0, [X0 + 0xA50]
	0x02384B64 BL 0x1C16CF4
	0x02384B68 MOVZ W8, 0x1
	0x02384B6C STRB W8, [X21 + 0x920]
	0x02384B70 STR X31, [X31 + 0x38]
	0x02384B74 LDR W24, [X19]
	0x02384B78 LDR X23, [X19 + 0x28]
	0x02384B7C CBZ W24, 0x2384C6C
	0x02384B80 ADRP X8, 0x1D71000
	0x02384B84 LDR X8, [X8 + 0xA50]
	0x02384B88 LDR X0, [X8]
	0x02384B8C BL 0x1C16F10
	0x02384B90 MOV X21, X0
	0x02384B94 MOV X1, X31
	0x02384B98 BL 0x33DFA8C
	0x02384B9C CBZ X23, 0x2384D48
	0x02384BA0 STR X21, [X23 + 0x50]
	0x02384BA4 CBZ X21, 0x2384D4C
	0x02384BA8 LDR X22, [X23 + 0x38]
	0x02384BAC MOV X0, X21
	0x02384BB0 MOV X1, X31
	0x02384BB4 BL 0x33DFA08
	0x02384BB8 CBZ X22, 0x2384D50
	0x02384BBC MOV X21, X0
	0x02384BC0 LDR X0, [X20 + 0x20]
	0x02384BC4 LDRB W8, [X0 + 0x135]
	0x02384BC8 TBNZ X8, 0x0, 0x2384BD0
	0x02384BCC BL 0x1C5C684
	0x02384BD0 LDR X0, [X22 + 0x40]
	0x02384BD4 LDR X8, [X22 + 0x18]
	0x02384BD8 LDR X2, [X22 + 0x28]
	0x02384BDC MOV X1, X21
	0x02384BE0 BLR X8
	0x02384BE4 MOV X21, X0
	0x02384BE8 CBZ X0, 0x2384D54
	0x02384BEC LDR X0, [X20 + 0x20]
	0x02384BF0 LDRB W8, [X0 + 0x135]
	0x02384BF4 TBNZ X8, 0x0, 0x2384BFC
	0x02384BF8 BL 0x1C5C684
	0x02384BFC LDR X8, [X0 + 0xC0]
	0x02384C00 LDR X1, [X8 + 0x28]
	0x02384C04 MOV X0, X21
	0x02384C08 BL 0x26A92D4
	0x02384C0C STR X0, [X31 + 0x38]
	0x02384C10 LDR X0, [X20 + 0x20]
	0x02384C14 LDRB W8, [X0 + 0x135]
	0x02384C18 TBNZ X8, 0x0, 0x2384C20
	0x02384C1C BL 0x1C5C684
	0x02384C20 LDR X8, [X0 + 0xC0]
	0x02384C24 LDR X1, [X8 + 0x38]
	0x02384C28 ADD X0, X31, 0x38
	0x02384C2C BL 0x2677CB8
	0x02384C30 TBNZ X0, 0x0, 0x2384C80
	0x02384C34 STR W31, [X19]
	0x02384C38 LDR X8, [X31 + 0x38]
	0x02384C3C STR X8, [X19 + 0x30]
	0x02384C40 LDR X0, [X20 + 0x20]
	0x02384C44 LDRB W8, [X0 + 0x135]
	0x02384C48 TBNZ X8, 0x0, 0x2384C50
	0x02384C4C BL 0x1C5C684
	0x02384C50 LDR X8, [X0 + 0xC0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2056000
	011 Move W8, [X21+2332]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1D72000
	019 Move X0, [X0+2640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2332], W8
	023 Move [X31+8], X31
	024 Move W24, [X19]
	025 Move X23, [X19+40]
	026 Compare W24, 0
	027 JumpIfEqual {105}
	028 Move X8, 0x1D72000
	029 Move X8, [X8+2640]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X21, X0
	033 Move X1, X31
	034 Call CancellationTokenSource..ctor, X0
	035 Compare X23, 0
	036 JumpIfEqual {167}
	037 Move [X23+80], X21
	038 Compare X21, 0
	039 JumpIfEqual {168}
	040 Move X22, [X23+56]
	041 Move X0, X21
	042 Move X1, X31
	043 Call CancellationTokenSource.get_Token, X0
	044 Compare X22, 0
	045 JumpIfEqual {169}
	046 Move X21, X0
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X0, [X22+64]
	055 Move X8, [X22+24]
	056 Move X2, [X22+40]
	057 Move X1, X21
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X21, X0
	060 Compare X0, 0
	061 JumpIfEqual {170}
	062 Move X0, [X20+32]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X0+192]
	070 Move X1, [X8+40]
	071 Move X0, X21
	072 Call Task`1<ApiUserInventory>.GetAwaiter, X0
	073 Move [X31+8], X0
	074 Move X0, [X20+32]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X8, [X0+192]
	082 Move X1, [X8+56]
	083 Add X0, X31, 8
	084 Call TaskAwaiter`1<ApiUserInventory>.get_IsCompleted, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {112}
	089 Move [X19], W31
	090 Move X8, [X31+8]
	091 Move [X19+48], X8
	092 Move X0, [X20+32]
	093 Move W8, [X0+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Move X8, [X0+192]
	100 Add X0, X19, 8
	101 Move X3, [X8+72]
	102 Add X1, X31, 8
	103 Move X2, X19
	104 Call AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	105 Move X8, [X19+48]
	106 Move TEMP, 0
	107 Not TEMP
	108 Move W24, TEMP
	109 Move [X31+8], X8
	110 Move [X19+48], X31
	111 Move [X19], W24
	112 Move X0, [X20+32]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Move X8, [X0+192]
	120 Move X1, [X8+96]
	121 Add X0, X31, 8
	122 Call TaskAwaiter`1<ApiUserInventory>.GetResult, X0
	123 Compare X23, 0
	124 JumpIfEqual {166}
	125 Move W8, 1
	126 Move X20, X31
	127 Move [X23+88], X0
	128 Move [X23+64], W8
	129 Move W21, 7
	130 Move TEMP, X24
	131 And TEMP, TEMP, -2147483648
	132 Compare TEMP, -2147483648
	133 JumpIfNotEqual {142}
	134 Compare X23, 0
	135 JumpIfEqual {171}
	136 Move X0, [X23+80]
	137 Compare X0, 0
	138 JumpIfEqual {172}
	139 Move X1, X31
	140 Call CancellationTokenSource.Dispose, X0
	141 Move [X23+80], X31
	142 Compare X20, 0
	143 JumpIfNotEqual {164}
	144 Compare W21, 0
	145 JumpIfEqual {147}
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move TEMP, 1
	148 Not TEMP
	149 Move W8, TEMP
	150 Move [X19+8], W8
	151 Move X0, X19
	152 Move X1, X31
	153 Call AsyncVoidMethodBuilder.SetResult, X0
	154 Move X20, [X31+64]
	155 Move X19, [X31+72]
	156 Move X22, [X31+48]
	157 Move X21, [X31+56]
	158 Move X24, [X31+32]
	159 Move X23, [X31+40]
	160 Move X30, [X31+16]
	161 Move X25, [X31+24]
	162 Add X31, X31, 80
	163 Return 
	164 Move X0, X20
	165 Call 0x1C17F18
	166 Call 0x1C17F20
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Move X22, X0
	174 Move W24, W31
	175 Move X21, X1
	176 Move X22, X0
	177 Move W25, 1
	178 Move X22, X0
	179 Move W21, W1
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X22
	182 Call 0x3EB2AD0
	183 Move X20, X0
	184 Move X0, 0x1D70000
	185 Move X0, [X0+2000]
	186 Call 0x1C17D08
	187 Move X8, [X20]
	188 Move X1, [X8]
	189 Call 0x1C18270
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {202}
	194 Move X21, [X20]
	195 Call 0x3EB2AE0
	196 Compare X23, 0
	197 JumpIfEqual {210}
	198 Move W8, 1
	199 Move X20, X31
	200 Move [X23+72], X21
	201 Move [X23+65], W8
	202 Move W0, 8
	203 Call 0x3EB2AF0
	204 Move X8, [X20]
	205 Move [X0], X8
	206 Move X1, 0x1B31000
	207 Add X1, X1, 3672
	208 Move X2, X31
	209 Call 0x3EB2B00
	210 Call 0x1C17F20
	211 Move X22, X0
	212 Move W21, W1
	213 Move X21, X1
	214 Move X22, X0
	215 Call 0x3EB2AE0
	216 Move W25, 1
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X0, X22
	219 Call 0x3EB2AD0
	220 Move X20, [X0]
	221 Call 0x3EB2AE0
	222 Move W21, W31
	223 Move TEMP, X24
	224 And TEMP, TEMP, -2147483648
	225 Compare TEMP, -2147483648
	226 JumpIfNotEqual {142}
	227 Move X20, X31
	228 Move TEMP, X24
	229 And TEMP, TEMP, -2147483648
	230 Compare TEMP, -2147483648
	231 JumpIfNotEqual {240}
	232 Compare X23, 0
	233 JumpIfEqual {276}
	234 Move X0, [X23+80]
	235 Compare X0, 0
	236 JumpIfEqual {277}
	237 Move X1, X31
	238 Call CancellationTokenSource.Dispose, X0
	239 Move [X23+80], X31
	240 Compare X20, 0
	241 JumpIfNotEqual {274}
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, X22
	244 Call 0x3EB2AD0
	245 Move X20, X0
	246 Move X0, 0x1D70000
	247 Move X0, [X0+2000]
	248 Call 0x1C17D08
	249 Move X8, [X20]
	250 Move X1, [X8]
	251 Call 0x1C18270
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {266}
	256 Move X20, [X20]
	257 Call 0x3EB2AE0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X0, X19
	263 Move X1, X20
	264 Move X2, X31
	265 Call AsyncVoidMethodBuilder.SetException, X0, X1
	266 Move W0, 8
	267 Call 0x3EB2AF0
	268 Move X8, [X20]
	269 Move [X0], X8
	270 Move X1, 0x1B31000
	271 Add X1, X1, 3672
	272 Move X2, X31
	273 Call 0x3EB2B00
	274 Move X0, X20
	275 Call 0x1C17F18
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Move X22, X0
	279 Move W21, W1
	280 Move TEMP, X24
	281 And TEMP, TEMP, -2147483648
	282 Compare TEMP, -2147483648
	283 JumpIfNotEqual {240}
	284 Move X22, X0
	285 Call 0x3EB2AE0
	286 Move X0, X22
	287 Call 0x1D2D690
	288 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x02384C54 ADD X0, X19, 0x8
	0x02384C58 LDR X3, [X8 + 0x48]
	0x02384C5C ADD X1, X31, 0x38

ISIL:
	001 Add X0, X0, 8
	002 Move X2, X31
	003 Call AsyncVoidMethodBuilder.SetStateMachine, X0, X1
	004 Return 

