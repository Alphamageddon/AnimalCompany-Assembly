Type: SpatialSys.CommandLib.CoroutineCommand

Method: System.Collections.Generic.IEnumerable`1<SpatialSys.CommandLib.Command> get__childCommands()

Disassembly:
	0x035BED70 LDR X30, [X31], #0x20
	0x035BED74 RET
	0x035BED78 MOV X1, X31
	0x035BED7C B 0x33BDD8C
	0x035BED80 STR X30, [X31 - 0x20]!
	0x035BED84 STP X20, X19, [X31 + 0x10]
	0x035BED88 ADRP X20, 0xE22000
	0x035BED8C LDRB W8, [X20 + 0x152]
	0x035BED90 MOV X19, X1
	0x035BED94 TBNZ X8, 0x0, 0x35BEDB8
	0x035BED98 ADRP X0, 0xB79000
	0x035BED9C LDR X0, [X0 + 0xBA8]
	0x035BEDA0 BL 0x1C16CF4
	0x035BEDA4 ADRP X0, 0xB79000
	0x035BEDA8 LDR X0, [X0 + 0xBB0]
	0x035BEDAC BL 0x1C16CF4
	0x035BEDB0 MOVZ W8, 0x1
	0x035BEDB4 STRB W8, [X20 + 0x152]
	0x035BEDB8 CBZ X19, 0x35BEE18
	0x035BEDBC LDR X8, [X19]
	0x035BEDC0 ADRP X20, 0xB79000
	0x035BEDC4 MOV X0, X19
	0x035BEDC8 LDP X9, X1, [X8 + 0x1A8]
	0x035BEDCC LDR X20, [X20 + 0xBA8]
	0x035BEDD0 BLR X9
	0x035BEDD4 LDR X1, [X20]
	0x035BEDD8 MOV X2, X31
	0x035BEDDC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE23000
	006 Move X21, 0xB7A000
	007 Move W8, [X20+328]
	008 Move X21, [X21+2904]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB7A000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+328], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move [X20+40], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Void .ctor(System.String identifier)

Disassembly:
	0x035BEE14 RET
	0x035BEE18 BL 0x1C16F20

ISIL:
	001 Move W2, 1
	002 Call Command..ctor, X0, X1, X2
	003 Return 

Method: System.Void .ctor(SpatialSys.CommandLib.CoroutineGenerator coroutineGenerator)

Disassembly:
	0x035BEE1C STR X30, [X31 - 0x10]!
	0x035BEE20 LDR X8, [X0 + 0x38]
	0x035BEE24 CBZ X8, 0x35BEE44
	0x035BEE28 LDR X9, [X8 + 0x18]
	0x035BEE2C LDR X0, [X8 + 0x40]
	0x035BEE30 LDR X1, [X8 + 0x28]
	0x035BEE34 BLR X9
	0x035BEE38 MOVZ W0, 0x1
	0x035BEE3C LDR X30, [X31], #0x10
	0x035BEE40 RET
	0x035BEE44 BL 0x1C16F20
	0x035BEE48 STP X30, X21, [X31 - 0x20]!
	0x035BEE4C STP X20, X19, [X31 + 0x10]
	0x035BEE50 ADRP X19, 0xE22000
	0x035BEE54 ADRP X21, 0xB35000
	0x035BEE58 LDRB W8, [X19 + 0x153]
	0x035BEE5C LDR X21, [X21 + 0xAC8]
	0x035BEE60 MOV X20, X0
	0x035BEE64 TBNZ X8, 0x0, 0x35BEEA0
	0x035BEE68 ADRP X0, 0xB35000
	0x035BEE6C LDR X0, [X0 + 0xAC8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {26}
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call Delegate.get_Method, X0
	011 Compare X0, 0
	012 JumpIfEqual {26}
	013 Move X8, [X0]
	014 Move X9, [X8+424]
	015 Move X1, [X8+432]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X1, X0
	018 Move W2, 1
	019 Move X0, X20
	020 Call Command..ctor, X0, X1, X2
	021 Move [X20+56], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 
	026 Call 0x1C17F20

Method: System.Void .ctor(System.String identifier, SpatialSys.CommandLib.CoroutineGenerator coroutineGenerator)

Disassembly:
	0x035BD084 B.LS 0x35BD470
	0x035BD088 CMP W8, 0x4
	0x035BD08C STR X0, [X22 + 0x38]
	0x035BD090 B.EQ 0x35BD470
	0x035BD094 ADRP X8, 0xB3E000
	0x035BD098 LDR X8, [X8 + 0x9B0]
	0x035BD09C MOV X0, X22
	0x035BD0A0 MOV X1, X31
	0x035BD0A4 LDR X8, [X8]
	0x035BD0A8 STR X8, [X22 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move W2, 1
	006 Move X20, X0
	007 Call Command..ctor, X0, X1, X2
	008 Move [X20+56], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Start()

Disassembly:
	0x035BEE70 BL 0x1C16CF4
	0x035BEE74 ADRP X0, 0xB79000
	0x035BEE78 LDR X0, [X0 + 0xBB8]
	0x035BEE7C BL 0x1C16CF4
	0x035BEE80 ADRP X0, 0xB79000
	0x035BEE84 LDR X0, [X0 + 0xBC0]
	0x035BEE88 BL 0x1C16CF4
	0x035BEE8C ADRP X0, 0xB35000
	0x035BEE90 LDR X0, [X0 + 0x848]
	0x035BEE94 BL 0x1C16CF4
	0x035BEE98 MOVZ W8, 0x1
	0x035BEE9C STRB W8, [X19 + 0x153]
	0x035BEEA0 LDR X0, [X21]
	0x035BEEA4 MOVZ W1, 0x5
	0x035BEEA8 BL 0x1C16D6C
	0x035BEEAC CBZ X0, 0x35BEF5C
	0x035BEEB0 LDR W8, [X0 + 0x18]
	0x035BEEB4 MOV X19, X0
	0x035BEEB8 CBZ W8, 0x35BEF58
	0x035BEEBC ADRP X8, 0xB79000
	0x035BEEC0 LDR X8, [X8 + 0xBC0]
	0x035BEEC4 MOV X0, X20
	0x035BEEC8 LDR X8, [X8]
	0x035BEECC STR X8, [X19 + 0x20]
	0x035BEED0 BL 0x35BC7DC
	0x035BEED4 LDR W8, [X19 + 0x18]
	0x035BEED8 CMP W8, 0x1
	0x035BEEDC B.LS 0x35BEF58
	0x035BEEE0 CMP W8, 0x2
	0x035BEEE4 STR X0, [X19 + 0x28]
	0x035BEEE8 B.EQ 0x35BEF58
	0x035BEEEC ADRP X8, 0xB79000
	0x035BEEF0 LDR X8, [X8 + 0xBB8]
	0x035BEEF4 LDR X8, [X8]
	0x035BEEF8 STR X8, [X19 + 0x30]
	0x035BEEFC LDR X0, [X20 + 0x38]
	0x035BEF00 CBZ X0, 0x35BEF5C
	0x035BEF04 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+456]
	006 Move X1, [X8+464]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move W8, [X19+16]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X9, X19
	012 Move X9, [X9+48]
	013 Compare X9, 0
	014 JumpIfEqual {17}
	015 Move W10, [X9+16]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X8, X19
	019 Move X8, [X8+48]
	020 Compare X8, 0
	021 JumpIfEqual {24}
	022 Move W9, [X8+16]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19+56]
	025 Compare X8, 0
	026 JumpIfEqual {37}
	027 Move X9, [X8+24]
	028 Move X0, [X8+64]
	029 Move X1, [X8+40]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move W8, 1
	032 Move [X19+64], X0
	033 Move [X19+80], W8
	034 Move X30, [X31+16]
	035 Move X19, [X31+24]
	036 Return 
	037 Call 0x1C17F20

Method: System.Void CheckShouldContinue()

Disassembly:
	0x035BEF08 BL 0x33C4268

ISIL:
	001 Return 

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035BEF0C CBZ X0, 0x35BEF5C
	0x035BEF10 LDR X8, [X0]
	0x035BEF14 LDP X9, X1, [X8 + 0x1A8]
	0x035BEF18 BLR X9
	0x035BEF1C LDR W8, [X19 + 0x18]
	0x035BEF20 CMP W8, 0x3
	0x035BEF24 B.LS 0x35BEF58
	0x035BEF28 CMP W8, 0x4
	0x035BEF2C STR X0, [X19 + 0x38]
	0x035BEF30 B.EQ 0x35BEF58
	0x035BEF34 ADRP X8, 0xB35000
	0x035BEF38 LDR X8, [X8 + 0x848]
	0x035BEF3C MOV X0, X19
	0x035BEF40 MOV X1, X31
	0x035BEF44 LDR X8, [X8]
	0x035BEF48 STR X8, [X19 + 0x40]
	0x035BEF4C LDP X20, X19, [X31 + 0x10]
	0x035BEF50 LDP X30, X21, [X31], #0x20
	0x035BEF54 B 0x32278CC
	0x035BEF58 BL 0x1C16F28
	0x035BEF5C BL 0x1C16F20
	0x035BEF60 LDR X0, [X0 + 0x38]
	0x035BEF64 RET
	0x035BEF68 STR D8, [X31 - 0x40]!
	0x035BEF6C STP X30, X23, [X31 + 0x10]
	0x035BEF70 STP X22, X21, [X31 + 0x20]
	0x035BEF74 STP X20, X19, [X31 + 0x30]
	0x035BEF78 ADRP X20, 0xE22000
	0x035BEF7C LDRB W8, [X20 + 0x156]
	0x035BEF80 MOV V8.16B, V0.16B
	0x035BEF84 MOV X19, X0
	0x035BEF88 TBNZ X8, 0x0, 0x35BEFC4
	0x035BEF8C ADRP X0, 0xB79000
	0x035BEF90 LDR X0, [X0 + 0xBC8]
	0x035BEF94 BL 0x1C16CF4
	0x035BEF98 ADRP X0, 0xB79000
	0x035BEF9C LDR X0, [X0 + 0xBD0]
	0x035BEFA0 BL 0x1C16CF4
	0x035BEFA4 ADRP X0, 0xB79000
	0x035BEFA8 LDR X0, [X0 + 0xBD8]
	0x035BEFAC BL 0x1C16CF4
	0x035BEFB0 ADRP X0, 0xB79000
	0x035BEFB4 LDR X0, [X0 + 0xBE0]
	0x035BEFB8 BL 0x1C16CF4
	0x035BEFBC MOVZ W8, 0x1
	0x035BEFC0 STRB W8, [X20 + 0x156]
	0x035BEFC4 LDR X8, [X19 + 0x38]
	0x035BEFC8 CBZ X8, 0x35BF050
	0x035BEFCC LDR X20, [X8 + 0x10]
	0x035BEFD0 CBZ X20, 0x35BF030
	0x035BEFD4 ADRP X22, 0xB79000
	0x035BEFD8 ADRP X23, 0xB79000
	0x035BEFDC LDR X22, [X22 + 0xBC8]
	0x035BEFE0 LDR X23, [X23 + 0xBD8]
	0x035BEFE4 LDR X1, [X22]
	0x035BEFE8 MOV X0, X20
	0x035BEFEC BL 0x2EEA710
	0x035BEFF0 LDR X8, [X20 + 0x28]
	0x035BEFF4 CBZ X8, 0x35BF050
	0x035BEFF8 MOV X21, X0
	0x035BEFFC MOV X0, X8
	0x035BF000 MOV V0.16B, V8.16B
	0x035BF004 BL 0x35BA238
	0x035BF008 TBZ X0, 0x0, 0x35BF020
	0x035BF00C LDR X0, [X19 + 0x38]
	0x035BF010 CBZ X0, 0x35BF050
	0x035BF014 LDR X2, [X23]
	0x035BF018 MOV X1, X20
	0x035BF01C BL 0x2EED4A4
	0x035BF020 MOV X20, X21
	0x035BF024 CBNZ X21, 0x35BEFE4
	0x035BF028 LDR X8, [X19 + 0x38]
	0x035BF02C CBZ X8, 0x35BF050
	0x035BF030 LDR X8, [X8 + 0x10]
	0x035BF034 LDP X20, X19, [X31 + 0x30]
	0x035BF038 LDP X22, X21, [X31 + 0x20]
	0x035BF03C LDP X30, X23, [X31 + 0x10]
	0x035BF040 CMP X8, 0x0
	0x035BF044 CSET W0, EQ
	0x035BF048 LDR V8, [X31], #0x40
	0x035BF04C RET
	0x035BF050 BL 0x1C16F20
	0x035BF054 SUB X31, X31, 0x50
	0x035BF058 STP X30, X21, [X31 + 0x30]
	0x035BF05C STP X20, X19, [X31 + 0x40]
	0x035BF060 ADRP X20, 0xE21000
	0x035BF064 LDRB W8, [X20 + 0x157]
	0x035BF068 MOV X19, X0
	0x035BF06C TBNZ X8, 0x0, 0x35BF0A8
	0x035BF070 ADRP X0, 0xB78000
	0x035BF074 LDR X0, [X0 + 0xBE8]
	0x035BF078 BL 0x1C16CF4
	0x035BF07C ADRP X0, 0xB78000
	0x035BF080 LDR X0, [X0 + 0xBF0]
	0x035BF084 BL 0x1C16CF4
	0x035BF088 ADRP X0, 0xB78000
	0x035BF08C LDR X0, [X0 + 0xBF8]
	0x035BF090 BL 0x1C16CF4
	0x035BF094 ADRP X0, 0xB78000
	0x035BF098 LDR X0, [X0 + 0xC00]
	0x035BF09C BL 0x1C16CF4
	0x035BF0A0 MOVZ W8, 0x1
	0x035BF0A4 STRB W8, [X20 + 0x157]
	0x035BF0A8 MOVI V0.2D, 0x0
	0x035BF0AC STR X31, [X31 + 0x20]
	0x035BF0B0 STP V0, V0, [X31]
	0x035BF0B4 LDR W8, [X19 + 0x10]
	0x035BF0B8 CMP W8, 0x2
	0x035BF0BC B.EQ 0x35BF168
	0x035BF0C0 CMP W8, 0x4
	0x035BF0C4 B.EQ 0x35BF168
	0x035BF0C8 MOV X9, X19
	0x035BF0CC LDR X9, [X9 + 0x30]
	0x035BF0D0 CBZ X9, 0x35BF0E4
	0x035BF0D4 LDR W10, [X9 + 0x10]
	0x035BF0D8 CMP W10, 0x2
	0x035BF0DC B.NE 0x35BF0CC
	0x035BF0E0 B 0x35BF168
	0x035BF0E4 CMP W8, 0x3
	0x035BF0E8 B.EQ 0x35BF168
	0x035BF0EC MOV X8, X19

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE23000
	006 Move W8, [X20+329]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB7A000
	014 Move X0, [X0+2360]
	015 Call 0x1C17CF4
	016 Move X0, 0xB36000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+329], W8
	021 Move W8, [X19+80]
	022 Compare W8, 0
	023 JumpIfEqual {53}
	024 Move [X19+80], W31
	025 Move X0, [X19+72]
	026 Compare X0, 0
	027 JumpIfEqual {34}
	028 Move V0, V8
	029 Call Command.Update, X0, V0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {117}
	034 Move X20, [X19+64]
	035 Compare X20, 0
	036 JumpIfEqual {132}
	037 Move X10, 0xB36000
	038 Move X8, [X20]
	039 Move X10, [X10+3608]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X20
	051 Move W2, W31
	052 Call 0x1C5D788
	053 Move X8, [X19]
	054 Move X0, X19
	055 Move X9, [X8+456]
	056 Move X1, [X8+464]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move W8, [X19+16]
	059 Move W0, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, X19
	063 Move X9, [X9+48]
	064 Compare X9, 0
	065 JumpIfEqual {118}
	066 Move W10, [X9+16]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X20
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {119}
	079 Move X20, [X19+64]
	080 Compare X20, 0
	081 JumpIfEqual {132}
	082 Move X10, 0xB79000
	083 Move X8, [X20]
	084 Move X10, [X10+2360]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X10]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X20
	096 Move W2, W31
	097 Call 0x1C5D788
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X20
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move [X19+72], X0
	106 Compare X0, 0
	107 JumpIfEqual {120}
	108 Move V0, V8
	109 Move [X0+48], X19
	110 Call Command.Update, X0, V0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {117}
	115 Move W0, W31
	116 Move [X19+72], X31
	117 Move W0, W31
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W0, 1
	120 Move X20, [X31+16]
	121 Move X19, [X31+24]
	122 Move X30, [X31+8]
	123 Move V8, [X31+32]
	124 Return X0
	125 Move X8, X19
	126 Move W0, 1
	127 Move X8, [X8+48]
	128 Compare X8, 0
	129 JumpIfEqual {25}
	130 Move W9, [X8+16]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Call 0x1C17F20

Method: System.Void Cancel()

Disassembly:
	0x035BF0F0 LDR X8, [X8 + 0x30]
	0x035BF0F4 CBZ X8, 0x35BF108
	0x035BF0F8 LDR W9, [X8 + 0x10]
	0x035BF0FC CMP W9, 0x3
	0x035BF100 B.NE 0x35BF0F0
	0x035BF104 B 0x35BF168
	0x035BF108 LDR X0, [X19 + 0x38]
	0x035BF10C CBZ X0, 0x35BF184
	0x035BF110 ADRP X8, 0xB78000
	0x035BF114 LDR X8, [X8 + 0xC00]
	0x035BF118 LDR X1, [X8]
	0x035BF11C ADD X8, X31, 0x0
	0x035BF120 BL 0x2EED3B8
	0x035BF124 ADRP X20, 0xB78000
	0x035BF128 LDR X20, [X20 + 0xBF0]
	0x035BF12C LDR X1, [X20]
	0x035BF130 ADD X0, X31, 0x0
	0x035BF134 BL 0x2BC416C
	0x035BF138 TBZ X0, 0x0, 0x35BF154
	0x035BF13C LDR X0, [X31 + 0x18]
	0x035BF140 CBZ X0, 0x35BF180
	0x035BF144 LDR X8, [X0]
	0x035BF148 LDP X9, X1, [X8 + 0x1B8]
	0x035BF14C BLR X9
	0x035BF150 B 0x35BF12C
	0x035BF154 ADRP X8, 0xB78000
	0x035BF158 LDR X8, [X8 + 0xBE8]
	0x035BF15C ADD X0, X31, 0x0
	0x035BF160 LDR X1, [X8]
	0x035BF164 BL 0x2BC42B8
	0x035BF168 MOV X0, X19
	0x035BF16C BL 0x35BD53C
	0x035BF170 LDP X20, X19, [X31 + 0x40]
	0x035BF174 LDP X30, X21, [X31 + 0x30]
	0x035BF178 ADD X31, X31, 0x50
	0x035BF17C RET
	0x035BF180 BL 0x1C16F20
	0x035BF184 BL 0x1C16F20
	0x035BF188 B 0x35BF190
	0x035BF18C B 0x35BF190
	0x035BF190 MOV X20, X0
	0x035BF194 CMP W1, 0x1
	0x035BF198 B.NE 0x35BF1CC
	0x035BF19C MOV X0, X20
	0x035BF1A0 BL 0x3EB1AD0
	0x035BF1A4 LDR X21, [X0]
	0x035BF1A8 BL 0x3EB1AE0
	0x035BF1AC ADRP X8, 0xB78000
	0x035BF1B0 LDR X8, [X8 + 0xBE8]
	0x035BF1B4 ADD X0, X31, 0x0
	0x035BF1B8 LDR X1, [X8]
	0x035BF1BC BL 0x2BC42B8
	0x035BF1C0 CBZ X21, 0x35BF168
	0x035BF1C4 MOV X0, X21
	0x035BF1C8 BL 0x1C16F18
	0x035BF1CC MOV X21, X31
	0x035BF1D0 B 0x35BF1D8
	0x035BF1D4 MOV X20, X0
	0x035BF1D8 ADRP X8, 0xB78000
	0x035BF1DC LDR X8, [X8 + 0xBE8]
	0x035BF1E0 LDR X1, [X8]
	0x035BF1E4 ADD X0, X31, 0x0
	0x035BF1E8 BL 0x2BC42B8
	0x035BF1EC CBNZ X21, 0x35BF1F8
	0x035BF1F0 MOV X0, X20
	0x035BF1F4 BL 0x1D2C690
	0x035BF1F8 MOV X0, X21
	0x035BF1FC BL 0x1C16F18
	0x035BF200 BL 0x1990590
	0x035BF204 STR X30, [X31 - 0x50]!
	0x035BF208 STP X26, X25, [X31 + 0x10]
	0x035BF20C STP X24, X23, [X31 + 0x20]
	0x035BF210 STP X22, X21, [X31 + 0x30]
	0x035BF214 STP X20, X19, [X31 + 0x40]
	0x035BF218 ADRP X20, 0xE21000
	0x035BF21C ADRP X24, 0xB78000
	0x035BF220 LDRB W8, [X20 + 0x158]
	0x035BF224 LDR X24, [X24 + 0xC08]
	0x035BF228 MOV X19, X0
	0x035BF22C TBNZ X8, 0x0, 0x35BF2A4
	0x035BF230 ADRP X0, 0xB78000
	0x035BF234 LDR X0, [X0 + 0xC10]
	0x035BF238 BL 0x1C16CF4
	0x035BF23C ADRP X0, 0xB78000
	0x035BF240 LDR X0, [X0 + 0xC18]
	0x035BF244 BL 0x1C16CF4
	0x035BF248 ADRP X0, 0xB34000
	0x035BF24C LDR X0, [X0 + 0xAC8]
	0x035BF250 BL 0x1C16CF4
	0x035BF254 ADRP X0, 0xB78000
	0x035BF258 LDR X0, [X0 + 0xC20]
	0x035BF25C BL 0x1C16CF4
	0x035BF260 ADRP X0, 0xB78000
	0x035BF264 LDR X0, [X0 + 0xC08]
	0x035BF268 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE22000
	005 Move W8, [X20+330]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB35000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move X0, 0xB79000
	015 Move X0, [X0+2360]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+330], W8
	019 Move W8, [X19+16]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, X19
	023 Move X9, [X9+48]
	024 Compare X9, 0
	025 JumpIfEqual {28}
	026 Move W10, [X9+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, X19
	030 Move X8, [X8+48]
	031 Compare X8, 0
	032 JumpIfEqual {35}
	033 Move W9, [X8+16]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X19+64]
	036 Compare X20, 0
	037 JumpIfEqual {93}
	038 Move X10, 0xB79000
	039 Move X8, [X20]
	040 Move X10, [X10+2360]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X20
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X20
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X0, 0
	062 JumpIfEqual {67}
	063 Move X8, [X0]
	064 Move X9, [X8+440]
	065 Move X1, [X8+448]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X20, [X19+64]
	068 Compare X20, 0
	069 JumpIfEqual {93}
	070 Move X10, 0xB35000
	071 Move X8, [X20]
	072 Move X10, [X10+3584]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X1, [X10]
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X20
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X20
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X0, X19
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X30, [X31+32]
	097 Call Command.Cancel, X0
	098 Return 

Method: System.String ToString()

Disassembly:
	0x035BF26C ADRP X0, 0xB78000
	0x035BF270 LDR X0, [X0 + 0xC28]
	0x035BF274 BL 0x1C16CF4
	0x035BF278 ADRP X0, 0xB78000
	0x035BF27C LDR X0, [X0 + 0xC30]
	0x035BF280 BL 0x1C16CF4
	0x035BF284 ADRP X0, 0xB34000
	0x035BF288 LDR X0, [X0 + 0x838]
	0x035BF28C BL 0x1C16CF4
	0x035BF290 ADRP X0, 0xB5E000
	0x035BF294 LDR X0, [X0 + 0x430]
	0x035BF298 BL 0x1C16CF4
	0x035BF29C MOVZ W8, 0x1
	0x035BF2A0 STRB W8, [X20 + 0x158]
	0x035BF2A4 LDR X0, [X24]
	0x035BF2A8 ADRP X21, 0xB34000
	0x035BF2AC LDR X20, [X19 + 0x38]
	0x035BF2B0 LDR W8, [X0 + 0xE0]
	0x035BF2B4 LDR X21, [X21 + 0x838]
	0x035BF2B8 CBNZ W8, 0x35BF2C4
	0x035BF2BC BL 0x1C16DFC
	0x035BF2C0 LDR X0, [X24]
	0x035BF2C4 LDR X8, [X0 + 0xB8]
	0x035BF2C8 ADRP X26, 0xB78000
	0x035BF2CC ADRP X25, 0xB34000
	0x035BF2D0 LDR X21, [X21]
	0x035BF2D4 LDR X22, [X8 + 0x8]
	0x035BF2D8 LDR X26, [X26 + 0xC10]
	0x035BF2DC LDR X25, [X25 + 0xAC8]
	0x035BF2E0 CBNZ X22, 0x35BF334
	0x035BF2E4 LDR W8, [X0 + 0xE0]
	0x035BF2E8 CBNZ W8, 0x35BF2F4
	0x035BF2EC BL 0x1C16DFC
	0x035BF2F0 LDR X0, [X24]
	0x035BF2F4 ADRP X9, 0xB78000
	0x035BF2F8 LDR X8, [X0 + 0xB8]
	0x035BF2FC LDR X9, [X9 + 0xC18]
	0x035BF300 LDR X23, [X8]
	0x035BF304 LDR X0, [X9]
	0x035BF308 BL 0x1C16F10
	0x035BF30C ADRP X8, 0xB78000
	0x035BF310 LDR X8, [X8 + 0xC20]
	0x035BF314 MOV X1, X23
	0x035BF318 MOV X3, X31
	0x035BF31C MOV X22, X0
	0x035BF320 LDR X2, [X8]
	0x035BF324 BL 0x2D30578
	0x035BF328 LDR X8, [X24]
	0x035BF32C LDR X8, [X8 + 0xB8]
	0x035BF330 STR X22, [X8 + 0x8]
	0x035BF334 LDR X2, [X26]
	0x035BF338 MOV X0, X20
	0x035BF33C MOV X1, X22
	0x035BF340 BL 0x21CF224
	0x035BF344 MOV X1, X0
	0x035BF348 MOV X0, X21
	0x035BF34C MOV X2, X31
	0x035BF350 BL 0x32280D8
	0x035BF354 LDR X8, [X25]
	0x035BF358 MOV X21, X0
	0x035BF35C MOVZ W1, 0x5
	0x035BF360 MOV X0, X8
	0x035BF364 BL 0x1C16D6C
	0x035BF368 CBZ X0, 0x35BF400
	0x035BF36C LDR W8, [X0 + 0x18]
	0x035BF370 MOV X20, X0
	0x035BF374 CBZ W8, 0x35BF3FC
	0x035BF378 ADRP X8, 0xB78000
	0x035BF37C LDR X8, [X8 + 0xC30]
	0x035BF380 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xE22000
	006 Move X21, 0xB35000
	007 Move W8, [X19+331]
	008 Move X21, [X21+2760]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB35000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move X0, 0xB79000
	018 Move X0, [X0+2912]
	019 Call 0x1C17CF4
	020 Move X0, 0xB79000
	021 Move X0, [X0+2920]
	022 Call 0x1C17CF4
	023 Move X0, 0xB35000
	024 Move X0, [X0+2120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+331], W8
	028 Move X0, [X21]
	029 Move W1, 5
	030 Call 0x1C17D6C
	031 Compare X0, 0
	032 JumpIfEqual {79}
	033 Move W8, [X0+24]
	034 Move X19, X0
	035 Compare W8, 0
	036 JumpIfEqual {78}
	037 Move X8, 0xB79000
	038 Move X8, [X8+2912]
	039 Move X0, X20
	040 Move X8, [X8]
	041 Move [X19+32], X8
	042 Call Command.get_identifier, X0
	043 Move W8, [X19+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X19+40], X0
	047 Move X8, 0xB79000
	048 Move X8, [X8+2920]
	049 Move X8, [X8]
	050 Move [X19+48], X8
	051 Move X0, [X20+56]
	052 Compare X0, 0
	053 JumpIfEqual {79}
	054 Move X1, X31
	055 Call Delegate.get_Method, X0
	056 Compare X0, 0
	057 JumpIfEqual {79}
	058 Move X8, [X0]
	059 Move X9, [X8+424]
	060 Move X1, [X8+432]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W8, [X19+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move [X19+56], X0
	066 Move X8, 0xB35000
	067 Move X8, [X8+2120]
	068 Move X0, X19
	069 Move X1, X31
	070 Move X8, [X8]
	071 Move [X19+64], X8
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Call String.Concat, X0
	077 Return X0
	078 Call 0x1C17F28
	079 Call 0x1C17F20

