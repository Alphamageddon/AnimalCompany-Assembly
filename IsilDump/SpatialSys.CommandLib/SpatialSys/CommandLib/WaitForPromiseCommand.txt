Type: SpatialSys.CommandLib.WaitForPromiseCommand

Method: System.Void .ctor(RSG.IPromise promise, System.Boolean abortOnReject = False)

Disassembly:
	0x035BC448 STP X19, X20, [X21 + 0x30]
	0x035BC44C LDP X20, X19, [X31 + 0x10]
	0x035BC450 LDP X30, X21, [X31], #0x20
	0x035BC454 RET
	0x035BC458 STR X30, [X31 - 0x10]!
	0x035BC45C CBZ X0, 0x35BC490
	0x035BC460 LDR W8, [X0 + 0x20]
	0x035BC464 TBZ X1, 0x0, 0x35BC478
	0x035BC468 CMP W8, 0x3
	0x035BC46C B.LT 0x35BC488
	0x035BC470 MOVZ W8, 0x2
	0x035BC474 B 0x35BC484
	0x035BC478 CMP W8, 0x4
	0x035BC47C B.GT 0x35BC488
	0x035BC480 MOVZ W8, 0x5
	0x035BC484 STR W8, [X0 + 0x20]
	0x035BC488 LDR X30, [X31], #0x10
	0x035BC48C RET
	0x035BC490 BL 0x1C16F20
	0x035BC494 LDR W8, [X0 + 0x20]
	0x035BC498 TBZ X1, 0x0, 0x35BC4AC
	0x035BC49C CMP W8, 0x3
	0x035BC4A0 B.LT 0x35BC4BC
	0x035BC4A4 MOVZ W8, 0x2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE25000
	008 Move X23, 0xB63000
	009 Move W8, [X22+363]
	010 Move X23, [X23+96]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB63000
	019 Move X0, [X0+96]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+363], W8
	023 Move X1, [X23]
	024 And W3, W20, 1
	025 Move X0, X21
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call WaitForPromiseCommand..ctor, X0, X1, X2, X3
	034 Return 

Method: System.Void .ctor(System.String identifier, RSG.IPromise promise, System.Boolean abortOnReject = False)

Disassembly:
	0x035BC554 MOV X0, X8
	0x035BC558 BR X2
	0x035BC55C STR X30, [X31 - 0x10]!
	0x035BC560 MOV X3, X2
	0x035BC564 MOV X2, X1
	0x035BC568 ADD X1, X31, 0x8
	0x035BC56C STR X31, [X31 + 0x8]
	0x035BC570 BL 0x1C16CB0
	0x035BC574 LDR X30, [X31], #0x10
	0x035BC578 RET
	0x035BC57C STR X30, [X31 - 0x10]!
	0x035BC580 MOV X0, X1
	0x035BC584 MOV X1, X31
	0x035BC588 BL 0x1C16CB4
	0x035BC58C CBZ X0, 0x35BC5A0
	0x035BC590 BL 0x1C16E08
	0x035BC594 LDRB W0, [X0]
	0x035BC598 LDR X30, [X31], #0x10
	0x035BC59C RET
	0x035BC5A0 BL 0x1C16F20
	0x035BC5A4 STP X30, X21, [X31 - 0x20]!
	0x035BC5A8 STP X20, X19, [X31 + 0x10]
	0x035BC5AC LDR X8, [X2 + 0x8]
	0x035BC5B0 STP X1, X2, [X0 + 0x20]
	0x035BC5B4 MOV X19, X0
	0x035BC5B8 MOV X20, X1
	0x035BC5BC STR X8, [X0 + 0x10]
	0x035BC5C0 LDRB W21, [X2 + 0x52]
	0x035BC5C4 STR X0, [X0 + 0x40]
	0x035BC5C8 MOV X0, X2
	0x035BC5CC BL 0x1C16D84
	0x035BC5D0 TBZ X0, 0x0, 0x35BC5EC
	0x035BC5D4 CMP W21, 0x1
	0x035BC5D8 B.NE 0x35BC5F0
	0x035BC5DC ADRP X8, 0xFFFFFFFFFE605000
	0x035BC5E0 ADD X8, X8, 0xB54
	0x035BC5E4 STR X8, [X19 + 0x18]
	0x035BC5E8 B 0x35BC600
	0x035BC5EC CBZ X20, 0x35BC618
	0x035BC5F0 LDR X8, [X19 + 0x10]
	0x035BC5F4 LDR X9, [X19 + 0x20]
	0x035BC5F8 STR X8, [X19 + 0x18]
	0x035BC5FC STR X9, [X19 + 0x40]
	0x035BC600 ADRP X8, 0xFFFFFFFFFE605000
	0x035BC604 ADD X8, X8, 0xAF8
	0x035BC608 STR X8, [X19 + 0x38]
	0x035BC60C LDP X20, X19, [X31 + 0x10]
	0x035BC610 LDP X30, X21, [X31], #0x20
	0x035BC614 RET
	0x035BC618 ADRP X1, 0xFFFFFFFFFD55F000
	0x035BC61C ADD X1, X1, 0xEE3
	0x035BC620 MOV X0, X31
	0x035BC624 BL 0x1C16F3C
	0x035BC628 MOV X1, X31
	0x035BC62C BL 0x1C16DEC
	0x035BC630 LDR X8, [X0 + 0x40]
	0x035BC634 LDR X2, [X0 + 0x18]
	0x035BC638 LDR X1, [X0 + 0x28]
	0x035BC63C MOV X0, X8
	0x035BC640 BR X2
	0x035BC644 SUB X31, X31, 0x50
	0x035BC648 STP X30, X23, [X31 + 0x20]
	0x035BC64C STP X22, X21, [X31 + 0x30]
	0x035BC650 STP X20, X19, [X31 + 0x40]
	0x035BC654 ADRP X23, 0xE24000
	0x035BC658 STR S0, [X31 + 0x1C]
	0x035BC65C ADRP X22, 0xB37000
	0x035BC660 LDRB W8, [X23 + 0x13C]
	0x035BC664 LDR X22, [X22 + 0xA90]
	0x035BC668 MOV X19, X2
	0x035BC66C MOV X20, X1
	0x035BC670 MOV X21, X0
	0x035BC674 TBNZ X8, 0x0, 0x35BC68C
	0x035BC678 ADRP X0, 0xB37000
	0x035BC67C LDR X0, [X0 + 0xA90]
	0x035BC680 BL 0x1C16CF4
	0x035BC684 MOVZ W8, 0x1
	0x035BC688 STRB W8, [X23 + 0x13C]
	0x035BC68C LDR X0, [X22]
	0x035BC690 ADD X1, X31, 0x1C
	0x035BC694 STP X31, X31, [X31 + 0x8]
	0x035BC698 BL 0x1C16E04
	0x035BC69C STR X0, [X31 + 0x8]
	0x035BC6A0 ADD X1, X31, 0x8
	0x035BC6A4 MOV X0, X21
	0x035BC6A8 MOV X2, X20
	0x035BC6AC MOV X3, X19
	0x035BC6B0 BL 0x1C16CB0
	0x035BC6B4 LDP X20, X19, [X31 + 0x40]
	0x035BC6B8 LDP X22, X21, [X31 + 0x30]
	0x035BC6BC LDP X30, X23, [X31 + 0x20]
	0x035BC6C0 ADD X31, X31, 0x50
	0x035BC6C4 RET
	0x035BC6C8 STR X30, [X31 - 0x10]!
	0x035BC6CC MOV X0, X1
	0x035BC6D0 MOV X1, X31
	0x035BC6D4 BL 0x1C16CB4
	0x035BC6D8 CBZ X0, 0x35BC6EC
	0x035BC6DC BL 0x1C16E08
	0x035BC6E0 LDRB W0, [X0]
	0x035BC6E4 LDR X30, [X31], #0x10
	0x035BC6E8 RET
	0x035BC6EC BL 0x1C16F20
	0x035BC6F0 STP X30, X21, [X31 - 0x20]!
	0x035BC6F4 STP X20, X19, [X31 + 0x10]
	0x035BC6F8 LDR X8, [X2 + 0x8]
	0x035BC6FC STP X1, X2, [X0 + 0x20]
	0x035BC700 MOV X19, X0
	0x035BC704 MOV X20, X1
	0x035BC708 STR X8, [X0 + 0x10]
	0x035BC70C LDRB W21, [X2 + 0x52]
	0x035BC710 STR X0, [X0 + 0x40]
	0x035BC714 MOV X0, X2
	0x035BC718 BL 0x1C16D84
	0x035BC71C TBZ X0, 0x0, 0x35BC734
	0x035BC720 CBNZ W21, 0x35BC738
	0x035BC724 ADRP X8, 0xFFFFFFFFFE605000
	0x035BC728 ADD X8, X8, 0xBC4
	0x035BC72C STR X8, [X19 + 0x18]
	0x035BC730 B 0x35BC748

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xE25000
	010 Move X23, 0xB39000
	011 Move X22, 0xB7C000
	012 Move W8, [X25+364]
	013 Move X23, [X23+3696]
	014 Move X22, [X22+2592]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 And W24, W3, 1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0xB3B000
	024 Move X0, [X0+712]
	025 Call 0x1C17CF4
	026 Move X0, 0xB39000
	027 Move X0, [X0+3696]
	028 Call 0x1C17CF4
	029 Move X0, 0xB61000
	030 Move X0, [X0+704]
	031 Call 0x1C17CF4
	032 Move X0, 0xB7C000
	033 Move X0, [X0+2592]
	034 Call 0x1C17CF4
	035 Move X0, 0xB7C000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X25+364], W8
	040 Move W2, 1
	041 Move X0, X20
	042 Move X1, X21
	043 Move W25, 1
	044 Call Command..ctor, X0, X1, X2
	045 Move [X20+80], W24
	046 Move [X20+16], W25
	047 Move X0, [X23]
	048 Call 0x1C17F10
	049 Move X2, [X22]
	050 Move X1, X20
	051 Move X3, X31
	052 Move X21, X0
	053 Call Action..ctor, X0, X1, X2
	054 Compare X19, 0
	055 JumpIfEqual {135}
	056 Move X22, 0xB61000
	057 Move X8, [X19]
	058 Move X22, [X22+704]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X22]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 20
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 20
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X2, [X0+8]
	078 Move X0, X19
	079 Move X1, X21
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move W8, [X20+80]
	082 Compare W8, 0
	083 JumpIfEqual {109}
	084 Move X8, 0xB3B000
	085 Move X8, [X8+712]
	086 Move X21, 0xB7C000
	087 Move X0, [X8]
	088 Move X21, [X21+2600]
	089 Call 0x1C17F10
	090 Move X2, [X21]
	091 Move X1, X20
	092 Move X3, X31
	093 Move X21, X0
	094 Call Action`1<Object>..ctor, X0, X1, X2
	095 Move X8, [X19]
	096 Move X1, [X22]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 5
	107 Move X0, X19
	108 Call 0x1C5D788
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 Move X30, [X31+64]
	116 Move X25, [X31+72]
	117 Return 
	118 Move W9, [X10]
	119 Add W9, W9, 5
	120 Add X8, X8, W9
	121 Add X0, X8, 312
	122 Move X3, [X0]
	123 Move X2, [X0+8]
	124 Move X0, X19
	125 Move X1, X21
	126 Move X20, [X31+48]
	127 Move X19, [X31+56]
	128 Move X22, [X31+32]
	129 Move X21, [X31+40]
	130 Move X24, [X31+16]
	131 Move X23, [X31+24]
	132 Move X30, [X31+64]
	133 Move X25, [X31+72]
	134 CallNoReturn X3
	135 Call 0x1C17F20

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035C1448 B 0x35C144C
	0x035C144C SUB X31, X31, 0x40
	0x035C1450 STR D8, [X31 + 0x10]
	0x035C1454 STR X30, [X31 + 0x18]
	0x035C1458 STP X22, X21, [X31 + 0x20]
	0x035C145C STP X20, X19, [X31 + 0x30]
	0x035C1460 ADRP X19, 0xE1F000
	0x035C1464 ADRP X22, 0xB33000
	0x035C1468 LDRB W8, [X19 + 0x1AB]
	0x035C146C LDR X22, [X22 + 0x2C8]
	0x035C1470 TBNZ X8, 0x0, 0x35C14D0
	0x035C1474 ADRP X0, 0xB76000
	0x035C1478 LDR X0, [X0 + 0xD00]
	0x035C147C BL 0x1C16CF4
	0x035C1480 ADRP X0, 0xB76000
	0x035C1484 LDR X0, [X0 + 0xD08]
	0x035C1488 BL 0x1C16CF4
	0x035C148C ADRP X0, 0xB33000
	0x035C1490 LDR X0, [X0 + 0x2C8]
	0x035C1494 BL 0x1C16CF4
	0x035C1498 ADRP X0, 0xB6D000
	0x035C149C LDR X0, [X0 + 0x978]
	0x035C14A0 BL 0x1C16CF4
	0x035C14A4 ADRP X0, 0xB6D000
	0x035C14A8 LDR X0, [X0 + 0x980]
	0x035C14AC BL 0x1C16CF4
	0x035C14B0 ADRP X0, 0xB75000
	0x035C14B4 LDR X0, [X0 + 0xB40]
	0x035C14B8 BL 0x1C16CF4
	0x035C14BC ADRP X0, 0xB5B000
	0x035C14C0 LDR X0, [X0 + 0x4D8]
	0x035C14C4 BL 0x1C16CF4
	0x035C14C8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+72]
	006 Compare X8, 0
	007 JumpIfNotEqual {14}
	008 Move W0, [X0+64]
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Move X21, [X31+40]
	013 Return X0
	014 Move X8, 0xB5E000
	015 Move X8, [X8+104]
	016 Move X19, X0
	017 Move X0, X8
	018 Call 0x1C17D08
	019 Move X1, X19
	020 Move X2, X31
	021 Call String.Format, X0, X1
	022 Move X20, X0
	023 Move X0, 0xB33000
	024 Move X19, [X19+72]
	025 Move X0, [X0+2000]
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X1, X20
	029 Move X2, X19
	030 Move X3, X31
	031 Move X21, X0
	032 Call Exception..ctor, X0, X1, X2
	033 Move X0, 0xB77000
	034 Move X0, [X0+3256]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X21
	038 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x035C14CC STRB W8, [X19 + 0x1AB]
	0x035C14D0 LDR X8, [X22]
	0x035C14D4 STP X31, X31, [X31]
	0x035C14D8 LDR W9, [X8 + 0xE0]
	0x035C14DC CBNZ W9, 0x35C14EC
	0x035C14E0 MOV X0, X8
	0x035C14E4 BL 0x1C16DFC
	0x035C14E8 LDR X8, [X22]
	0x035C14EC LDR X9, [X8 + 0xB8]
	0x035C14F0 LDR X0, [X9 + 0x20]
	0x035C14F4 CBZ X0, 0x35C15C0
	0x035C14F8 LDR W9, [X8 + 0xE0]
	0x035C14FC CBNZ W9, 0x35C1518
	0x035C1500 MOV X0, X8
	0x035C1504 BL 0x1C16DFC
	0x035C1508 LDR X8, [X22]
	0x035C150C LDR X8, [X8 + 0xB8]
	0x035C1510 LDR X0, [X8 + 0x20]
	0x035C1514 CBZ X0, 0x35C18B8
	0x035C1518 MOV X1, X31
	0x035C151C BL 0x3E5F920
	0x035C1520 LDR X8, [X22]
	0x035C1524 TBZ X0, 0x0, 0x35C15C0
	0x035C1528 LDR W9, [X8 + 0xE0]
	0x035C152C CBNZ W9, 0x35C153C
	0x035C1530 MOV X0, X8
	0x035C1534 BL 0x1C16DFC
	0x035C1538 LDR X8, [X22]
	0x035C153C LDR X8, [X8 + 0xB8]
	0x035C1540 LDR X0, [X8 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE20000
	007 Move X20, 0xB5E000
	008 Move X21, 0xB33000
	009 Move W8, [X22+365]
	010 Move X20, [X20+112]
	011 Move X21, [X21+2120]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB5E000
	018 Move X0, [X0+112]
	019 Call 0x1C17CF4
	020 Move X0, 0xB33000
	021 Move X0, [X0+2120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+365], W8
	025 Move X0, X19
	026 Call Command.get_identifier, X0
	027 Move X8, [X20]
	028 Move X2, [X21]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X1, X0
	034 Move X0, X8
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Call String.Concat, X0, X1, X2
	038 Return X0

Method: System.Void <.ctor>b__5_0()

Disassembly:
	0x035C1544 CBZ X0, 0x35C18B8
	0x035C1548 MOV X1, X31
	0x035C154C BL 0x3E5F54C

ISIL:
	001 Move W8, 1
	002 Move [X0+64], W8
	003 Return 

Method: System.Void <.ctor>b__5_1(System.Exception exc)

Disassembly:
	0x035C1550 CMP W0, 0x1
	0x035C1554 B.NE 0x35C158C
	0x035C1558 LDR X0, [X22]

ISIL:
	001 Move X2, X1
	002 Move X1, X0
	003 Call Command.Abort, X0, X1, X2
	004 Return 

