Type: SpatialSys.CommandLib.SequenceCommand

Method: System.Collections.Generic.IEnumerable`1<SpatialSys.CommandLib.Command> get__childCommands()

Disassembly:
	0x035C08D4 BL 0x1C16F20
	0x035C08D8 BL 0x1C16F44

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void .ctor(SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BC9A4 BL 0x33BDD8C
	0x035BC9A8 STR W31, [X20 + 0x10]
	0x035BC9AC CBNZ X21, 0x35BC9D0
	0x035BC9B0 MOV X0, X20
	0x035BC9B4 MOV X1, X31
	0x035BC9B8 BL 0x33BE520
	0x035BC9BC CBZ X0, 0x35BC9E8
	0x035BC9C0 LDR X8, [X0]
	0x035BC9C4 LDP X9, X1, [X8 + 0x1A8]
	0x035BC9C8 BLR X9
	0x035BC9CC MOV X21, X0
	0x035BC9D0 AND W8, W19, 0x1
	0x035BC9D4 STR X21, [X20 + 0x28]
	0x035BC9D8 STRB W8, [X20 + 0x14]
	0x035BC9DC LDP X20, X19, [X31 + 0x10]
	0x035BC9E0 LDP X30, X21, [X31], #0x20
	0x035BC9E4 RET
	0x035BC9E8 BL 0x1C16F20
	0x035BC9EC STR X30, [X31 - 0x20]!
	0x035BC9F0 STP X20, X19, [X31 + 0x10]
	0x035BC9F4 ADRP X20, 0xE24000
	0x035BC9F8 LDRB W8, [X20 + 0x13F]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE25000
	007 Move X22, 0xB7C000
	008 Move W8, [X21+351]
	009 Move X22, [X22+2656]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB7C000
	017 Move X0, [X0+2656]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+351], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call SequenceCommand..ctor, X0, X1, X2
	030 Return 

Method: System.Void .ctor(System.String identifier, SpatialSys.CommandLib.Command[] commands)

Disassembly:
	0x035BCA64 CBZ X9, 0x35BCA78
	0x035BCA68 LDR W10, [X9 + 0x10]
	0x035BCA6C CMP W10, 0x2
	0x035BCA70 B.NE 0x35BCA60
	0x035BCA74 B 0x35BCABC
	0x035BCA78 CMP W8, 0x3
	0x035BCA7C B.EQ 0x35BCABC
	0x035BCA80 MOV X8, X19
	0x035BCA84 LDR X8, [X8 + 0x30]
	0x035BCA88 CBZ X8, 0x35BCA9C
	0x035BCA8C LDR W9, [X8 + 0x10]
	0x035BCA90 CMP W9, 0x3
	0x035BCA94 B.NE 0x35BCA84
	0x035BCA98 B 0x35BCABC
	0x035BCA9C MOVZ W8, 0x4
	0x035BCAA0 MOV X0, X19
	0x035BCAA4 STR W8, [X19 + 0x10]
	0x035BCAA8 BL 0x35BCB58
	0x035BCAAC MOV X0, X19
	0x035BCAB0 BL 0x35BC884
	0x035BCAB4 CMP W0, 0x5
	0x035BCAB8 B.GE 0x35BCAC8
	0x035BCABC LDP X20, X19, [X31 + 0x10]
	0x035BCAC0 LDR X30, [X31], #0x20
	0x035BCAC4 RET
	0x035BCAC8 MOV X0, X19
	0x035BCACC BL 0x35BC7DC
	0x035BCAD0 ADRP X8, 0xB7B000
	0x035BCAD4 LDR X8, [X8 + 0xAA0]
	0x035BCAD8 ADRP X9, 0xB7B000
	0x035BCADC LDR X9, [X9 + 0xA98]
	0x035BCAE0 MOV X1, X0
	0x035BCAE4 LDR X8, [X8]
	0x035BCAE8 MOV X3, X31
	0x035BCAEC LDR X2, [X9]
	0x035BCAF0 MOV X0, X8
	0x035BCAF4 BL 0x32274B8
	0x035BCAF8 ADRP X8, 0xB37000
	0x035BCAFC LDR X8, [X8 + 0x788]
	0x035BCB00 MOV X19, X0
	0x035BCB04 LDR X8, [X8]
	0x035BCB08 LDR W9, [X8 + 0xE0]
	0x035BCB0C CBNZ W9, 0x35BCB18
	0x035BCB10 MOV X0, X8
	0x035BCB14 BL 0x1C16DFC
	0x035BCB18 ADRP X8, 0xB7B000
	0x035BCB1C ADRP X9, 0xB7B000
	0x035BCB20 LDR X8, [X8 + 0xAA8]
	0x035BCB24 LDR X9, [X9 + 0xA90]
	0x035BCB28 MOV X1, X19
	0x035BCB2C LDP X20, X19, [X31 + 0x10]
	0x035BCB30 LDR X3, [X8]
	0x035BCB34 LDR X4, [X9]
	0x035BCB38 MOVZ W0, 0x400
	0x035BCB3C MOVZ W5, 0xB0
	0x035BCB40 MOV X2, X31
	0x035BCB44 MOV X6, X31
	0x035BCB48 LDR X30, [X31], #0x20
	0x035BCB4C B 0x35C1ED0
	0x035BCB50 RET
	0x035BCB54 RET
	0x035BCB58 STP X30, X25, [X31 - 0x40]!
	0x035BCB5C STP X24, X23, [X31 + 0x10]
	0x035BCB60 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE25000
	009 Move X23, 0xB7C000
	010 Move X22, 0xB7C000
	011 Move W8, [X24+352]
	012 Move X23, [X23+2496]
	013 Move X22, [X22+2504]
	014 Move X19, X2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xB7C000
	022 Move X0, [X0+2424]
	023 Call 0x1C17CF4
	024 Move X0, 0xB7C000
	025 Move X0, [X0+2504]
	026 Call 0x1C17CF4
	027 Move X0, 0xB7C000
	028 Move X0, [X0+2496]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+352], W8
	032 Move W2, 1
	033 Move X0, X20
	034 Move X1, X21
	035 Call Command..ctor, X0, X1, X2
	036 Move X0, [X23]
	037 Call 0x1C17F10
	038 Move X1, [X22]
	039 Move X21, X0
	040 Call Queue`1<Object>..ctor, X0
	041 Move [X20+56], X21
	042 Compare X19, 0
	043 JumpIfEqual {73}
	044 Move X8, [X19+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, 0xB7C000
	047 Move X22, [X22+2424]
	048 Move X21, X31
	049 And X8, X8, 0
	050 Add X23, X19, 32
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X1, [X23]
	053 Compare X1, 0
	054 JumpIfEqual {61}
	055 Move [X1+48], X20
	056 Move X0, [X20+56]
	057 Compare X0, 0
	058 JumpIfEqual {73}
	059 Move X2, [X22]
	060 Call Queue`1<Object>.Enqueue, X0, X1
	061 Move W8, [X19+24]
	062 Add X21, X21, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Return 
	072 Call 0x1C17F28
	073 Call 0x1C17F20

Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035C08DC MOV X1, X31
	0x035C08E0 BL 0x1C16DEC
	0x035C08E4 LDRB W0, [X0 + 0x10]
	0x035C08E8 RET
	0x035C08EC AND W8, W1, 0x1
	0x035C08F0 STRB W8, [X0 + 0x10]
	0x035C08F4 RET
	0x035C08F8 LDR W0, [X0 + 0x14]
	0x035C08FC RET
	0x035C0900 STR W1, [X0 + 0x14]
	0x035C0904 RET
	0x035C0908 STP X30, X21, [X31 - 0x20]!
	0x035C090C STP X20, X19, [X31 + 0x10]
	0x035C0910 ADRP X21, 0xE20000
	0x035C0914 LDRB W8, [X21 + 0x172]
	0x035C0918 MOV X19, X1
	0x035C091C MOV X20, X0
	0x035C0920 TBNZ X8, 0x0, 0x35C0944
	0x035C0924 ADRP X0, 0xB33000
	0x035C0928 LDR X0, [X0 + 0x898]
	0x035C092C BL 0x1C16CF4
	0x035C0930 ADRP X0, 0xB77000
	0x035C0934 LDR X0, [X0 + 0xA50]
	0x035C0938 BL 0x1C16CF4
	0x035C093C MOVZ W8, 0x1
	0x035C0940 STRB W8, [X21 + 0x172]
	0x035C0944 CBZ X19, 0x35C0970
	0x035C0948 LDR X0, [X20 + 0x18]
	0x035C094C CBZ X0, 0x35C099C
	0x035C0950 ADRP X8, 0xB77000
	0x035C0954 LDR X8, [X8 + 0xA50]
	0x035C0958 MOV X1, X19
	0x035C095C LDR X2, [X8]
	0x035C0960 BL 0x2EECFD4
	0x035C0964 LDR W8, [X20 + 0x14]
	0x035C0968 ADD W8, W8, 0x1
	0x035C096C STR W8, [X20 + 0x14]
	0x035C0970 ADRP X8, 0xB33000
	0x035C0974 LDR X8, [X8 + 0x898]
	0x035C0978 LDR X0, [X8]
	0x035C097C BL 0x1C16F10
	0x035C0980 MOV X1, X19
	0x035C0984 MOV X20, X0
	0x035C0988 BL 0x35B9AFC
	0x035C098C MOV X0, X20
	0x035C0990 LDP X20, X19, [X31 + 0x10]
	0x035C0994 LDP X30, X21, [X31], #0x20
	0x035C0998 RET
	0x035C099C BL 0x1C16F20
	0x035C09A0 STR D8, [X31 - 0x50]!
	0x035C09A4 STR X30, [X31 + 0x8]
	0x035C09A8 STP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE21000
	007 Move W8, [X20+353]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB78000
	015 Move X0, [X0+2472]
	016 Call 0x1C17CF4
	017 Move X0, 0xB78000
	018 Move X0, [X0+2480]
	019 Call 0x1C17CF4
	020 Move X0, 0xB78000
	021 Move X0, [X0+2416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+353], W8
	025 Move X8, [X19+56]
	026 Compare X8, 0
	027 JumpIfEqual {65}
	028 Move X20, 0xB78000
	029 Move X21, 0xB78000
	030 Move X20, [X20+2480]
	031 Move X21, [X21+2472]
	032 Move W9, [X8+32]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X1, [X20]
	035 Move X0, X8
	036 Call Queue`1<Object>.Peek, X0
	037 Compare X0, 0
	038 JumpIfEqual {65}
	039 Move V0, V8
	040 Call Command.Update, X0, V0
	041 Move X8, [X19+56]
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 Compare X8, 0
	047 JumpIfEqual {65}
	048 Move X1, [X21]
	049 Move X0, X8
	050 Call Queue`1<Object>.Dequeue, X0
	051 Move X8, [X19+56]
	052 Compare X8, 0
	053 JumpIfNotEqual {32}
	054 Compare X8, 0
	055 JumpIfEqual {65}
	056 Move W8, [X8+32]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 Move V8, [X31+48]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Void Cancel()

Disassembly:
	0x035C09AC STP X24, X23, [X31 + 0x20]
	0x035C09B0 STP X22, X21, [X31 + 0x30]
	0x035C09B4 STP X20, X19, [X31 + 0x40]
	0x035C09B8 ADRP X20, 0xE20000
	0x035C09BC LDRB W8, [X20 + 0x173]
	0x035C09C0 MOV V8.16B, V0.16B
	0x035C09C4 MOV X19, X0
	0x035C09C8 TBNZ X8, 0x0, 0x35C0A04
	0x035C09CC ADRP X0, 0xB77000
	0x035C09D0 LDR X0, [X0 + 0xBC8]
	0x035C09D4 BL 0x1C16CF4
	0x035C09D8 ADRP X0, 0xB77000
	0x035C09DC LDR X0, [X0 + 0xBD0]
	0x035C09E0 BL 0x1C16CF4
	0x035C09E4 ADRP X0, 0xB77000
	0x035C09E8 LDR X0, [X0 + 0xBD8]
	0x035C09EC BL 0x1C16CF4
	0x035C09F0 ADRP X0, 0xB77000
	0x035C09F4 LDR X0, [X0 + 0xBE0]
	0x035C09F8 BL 0x1C16CF4
	0x035C09FC MOVZ W8, 0x1
	0x035C0A00 STRB W8, [X20 + 0x173]
	0x035C0A04 LDRB W8, [X19 + 0x10]
	0x035C0A08 CBZ W8, 0x35C0A28
	0x035C0A0C LDP X20, X19, [X31 + 0x40]
	0x035C0A10 LDP X22, X21, [X31 + 0x30]
	0x035C0A14 LDP X24, X23, [X31 + 0x20]
	0x035C0A18 LDP X26, X25, [X31 + 0x10]
	0x035C0A1C LDR X30, [X31 + 0x8]
	0x035C0A20 LDR V8, [X31], #0x50
	0x035C0A24 RET
	0x035C0A28 LDR X8, [X19 + 0x18]
	0x035C0A2C CBZ X8, 0x35C0B88
	0x035C0A30 LDR X22, [X8 + 0x10]
	0x035C0A34 CBZ X22, 0x35C0A0C
	0x035C0A38 ADRP X25, 0xB77000
	0x035C0A3C ADRP X20, 0xB33000
	0x035C0A40 ADRP X21, 0xB77000
	0x035C0A44 ADRP X26, 0xB77000
	0x035C0A48 LDR X25, [X25 + 0xBC8]
	0x035C0A4C LDR X20, [X20 + 0x7D0]
	0x035C0A50 LDR X21, [X21 + 0xBD0]
	0x035C0A54 LDR X26, [X26 + 0xBD8]
	0x035C0A58 LDR X1, [X25]
	0x035C0A5C MOV X0, X22
	0x035C0A60 BL 0x2EEA710
	0x035C0A64 LDR X8, [X22 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE21000
	005 Move W8, [X20+354]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB78000
	012 Move X0, [X0+2480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+354], W8
	016 Move W8, [X19+16]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X9, X19
	020 Move X9, [X9+48]
	021 Compare X9, 0
	022 JumpIfEqual {25}
	023 Move W10, [X9+16]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, X19
	027 Move X8, [X8+48]
	028 Compare X8, 0
	029 JumpIfEqual {32}
	030 Move W9, [X8+16]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, [X19+56]
	033 Compare X0, 0
	034 JumpIfEqual {51}
	035 Move X8, 0xB78000
	036 Move X8, [X8+2480]
	037 Move X1, [X8]
	038 Call Queue`1<Object>.Peek, X0
	039 Compare X0, 0
	040 JumpIfEqual {51}
	041 Move X8, [X0]
	042 Move X9, [X8+440]
	043 Move X1, [X8+448]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Call Command.Cancel, X0
	050 Return 
	051 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x035C0A68 MOV X23, X0
	0x035C0A6C CBZ X8, 0x35C0AAC
	0x035C0A70 MOV X0, X8
	0x035C0A74 MOV V0.16B, V8.16B
	0x035C0A78 BL 0x35BA238
	0x035C0A7C TBZ X0, 0x0, 0x35C0AA0
	0x035C0A80 LDR X0, [X19 + 0x18]
	0x035C0A84 CBZ X0, 0x35C0B88
	0x035C0A88 LDR X2, [X26]
	0x035C0A8C MOV X1, X22
	0x035C0A90 BL 0x2EED4A4
	0x035C0A94 LDR W8, [X19 + 0x14]
	0x035C0A98 SUB W8, W8, 0x1
	0x035C0A9C STR W8, [X19 + 0x14]
	0x035C0AA0 MOV X22, X23
	0x035C0AA4 CBNZ X23, 0x35C0A58
	0x035C0AA8 B 0x35C0A0C
	0x035C0AAC BL 0x1C16F20
	0x035C0AB0 B 0x35C0BAC
	0x035C0AB4 B 0x35C0AB8
	0x035C0AB8 MOV X24, X0
	0x035C0ABC CMP W1, 0x1
	0x035C0AC0 B.NE 0x35C0BB8
	0x035C0AC4 MOV X0, X24
	0x035C0AC8 BL 0x3EB1AD0
	0x035C0ACC MOV X24, X0
	0x035C0AD0 MOV X0, X20
	0x035C0AD4 BL 0x1C16D08
	0x035C0AD8 LDR X8, [X24]
	0x035C0ADC LDR X1, [X8]
	0x035C0AE0 BL 0x1C17270
	0x035C0AE4 TBZ X0, 0x0, 0x35C0B8C
	0x035C0AE8 LDR X24, [X24]
	0x035C0AEC BL 0x3EB1AE0
	0x035C0AF0 MOV X0, X21
	0x035C0AF4 BL 0x1C16D08
	0x035C0AF8 LDR X8, [X22 + 0x28]
	0x035C0AFC CBZ X8, 0x35C0B88
	0x035C0B00 LDR W9, [X8 + 0x10]
	0x035C0B04 CMP W9, 0x3
	0x035C0B08 B.EQ 0x35C0B30
	0x035C0B0C LDR X8, [X8 + 0x30]
	0x035C0B10 CBNZ X8, 0x35C0B00
	0x035C0B14 MOV X0, X21
	0x035C0B18 BL 0x1C16D08
	0x035C0B1C LDR X0, [X22 + 0x28]
	0x035C0B20 CBZ X0, 0x35C0B88
	0x035C0B24 MOV X1, X0
	0x035C0B28 MOV X2, X24
	0x035C0B2C BL 0x35BCD54
	0x035C0B30 MOV X0, X21
	0x035C0B34 BL 0x1C16D08
	0x035C0B38 LDR X8, [X22 + 0x28]
	0x035C0B3C CBZ X8, 0x35C0B88
	0x035C0B40 LDR W9, [X8 + 0x10]
	0x035C0B44 CMP W9, 0x2
	0x035C0B48 B.EQ 0x35C0A80
	0x035C0B4C CMP W9, 0x4
	0x035C0B50 B.EQ 0x35C0A80
	0x035C0B54 MOV X10, X8
	0x035C0B58 LDR X10, [X10 + 0x30]
	0x035C0B5C CBZ X10, 0x35C0B74
	0x035C0B60 LDR W11, [X10 + 0x10]
	0x035C0B64 CMP W11, 0x2
	0x035C0B68 B.NE 0x35C0B58
	0x035C0B6C B 0x35C0A80
	0x035C0B70 LDR W9, [X8 + 0x10]
	0x035C0B74 CMP W9, 0x3
	0x035C0B78 B.EQ 0x35C0A80
	0x035C0B7C LDR X8, [X8 + 0x30]
	0x035C0B80 CBNZ X8, 0x35C0B70
	0x035C0B84 B 0x35C0AA0
	0x035C0B88 BL 0x1C16F20
	0x035C0B8C MOVZ W0, 0x8
	0x035C0B90 BL 0x3EB1AF0
	0x035C0B94 LDR X8, [X24]
	0x035C0B98 STR X8, [X0]
	0x035C0B9C ADRP X1, 0x8F4000
	0x035C0BA0 ADD X1, X1, 0xE58
	0x035C0BA4 MOV X2, X31
	0x035C0BA8 BL 0x3EB1B00
	0x035C0BAC B 0x35C0BB0
	0x035C0BB0 MOV X24, X0
	0x035C0BB4 BL 0x3EB1AE0
	0x035C0BB8 MOV X0, X24
	0x035C0BBC BL 0x1D2C690
	0x035C0BC0 BL 0x1990590
	0x035C0BC4 SUB X31, X31, 0x70
	0x035C0BC8 STR X30, [X31 + 0x50]
	0x035C0BCC STP X20, X19, [X31 + 0x60]
	0x035C0BD0 ADRP X20, 0xE20000
	0x035C0BD4 LDRB W8, [X20 + 0x174]
	0x035C0BD8 MOV X19, X0
	0x035C0BDC TBNZ X8, 0x0, 0x35C0C00
	0x035C0BE0 ADRP X0, 0xB77000
	0x035C0BE4 LDR X0, [X0 + 0xCD0]
	0x035C0BE8 BL 0x1C16CF4
	0x035C0BEC ADRP X0, 0xB77000
	0x035C0BF0 LDR X0, [X0 + 0xC00]
	0x035C0BF4 BL 0x1C16CF4
	0x035C0BF8 MOVZ W8, 0x1
	0x035C0BFC STRB W8, [X20 + 0x174]
	0x035C0C00 LDR X0, [X19 + 0x18]
	0x035C0C04 CBZ X0, 0x35C0C54
	0x035C0C08 ADRP X8, 0xB77000
	0x035C0C0C LDR X8, [X8 + 0xC00]
	0x035C0C10 ADRP X19, 0xB77000
	0x035C0C14 LDR X1, [X8]
	0x035C0C18 LDR X19, [X19 + 0xCD0]
	0x035C0C1C ADD X8, X31, 0x28
	0x035C0C20 BL 0x2EED3B8
	0x035C0C24 LDUR V0, [X31 + 0x28]
	0x035C0C28 LDUR V1, [X31 + 0x38]
	0x035C0C2C LDR X8, [X31 + 0x48]
	0x035C0C30 LDR X0, [X19]
	0x035C0C34 ADD X1, X31, 0x0
	0x035C0C38 STP V0, V1, [X31]
	0x035C0C3C STR X8, [X31 + 0x20]
	0x035C0C40 BL 0x1C16E04
	0x035C0C44 LDP X20, X19, [X31 + 0x60]
	0x035C0C48 LDR X30, [X31 + 0x50]
	0x035C0C4C ADD X31, X31, 0x70
	0x035C0C50 RET
	0x035C0C54 BL 0x1C16F20
	0x035C0C58 SUB X31, X31, 0x70
	0x035C0C5C STR X30, [X31 + 0x50]
	0x035C0C60 STP X20, X19, [X31 + 0x60]
	0x035C0C64 ADRP X20, 0xE20000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE21000
	011 Move X24, 0xB78000
	012 Move W8, [X20+355]
	013 Move X24, [X24+3200]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0xB78000
	020 Move X0, [X0+3088]
	021 Call 0x1C17CF4
	022 Move X0, 0xB78000
	023 Move X0, [X0+3096]
	024 Call 0x1C17CF4
	025 Move X0, 0xB34000
	026 Move X0, [X0+2760]
	027 Call 0x1C17CF4
	028 Move X0, 0xB78000
	029 Move X0, [X0+3208]
	030 Call 0x1C17CF4
	031 Move X0, 0xB78000
	032 Move X0, [X0+3200]
	033 Call 0x1C17CF4
	034 Move X0, 0xB78000
	035 Move X0, [X0+3168]
	036 Call 0x1C17CF4
	037 Move X0, 0xB34000
	038 Move X0, [X0+2104]
	039 Call 0x1C17CF4
	040 Move X0, 0xB5E000
	041 Move X0, [X0+1072]
	042 Call 0x1C17CF4
	043 Move X0, 0xB78000
	044 Move X0, [X0+3216]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+355], W8
	048 Move X0, [X24]
	049 Move X21, 0xB34000
	050 Move X20, [X19+56]
	051 Move W8, [X0+224]
	052 Move X21, [X21+2104]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Move X8, [X0+184]
	058 Move X26, 0xB78000
	059 Move X25, 0xB34000
	060 Move X21, [X21]
	061 Move X22, [X8+8]
	062 Move X26, [X26+3088]
	063 Move X25, [X25+2760]
	064 Compare X22, 0
	065 JumpIfNotEqual {87}
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X24]
	071 Move X9, 0xB78000
	072 Move X8, [X0+184]
	073 Move X9, [X9+3096]
	074 Move X23, [X8]
	075 Move X0, [X9]
	076 Call 0x1C17F10
	077 Move X8, 0xB78000
	078 Move X8, [X8+3208]
	079 Move X1, X23
	080 Move X3, X31
	081 Move X22, X0
	082 Move X2, [X8]
	083 Call Func`2<Object, Object>..ctor, X0, X1, X2
	084 Move X8, [X24]
	085 Move X8, [X8+184]
	086 Move [X8+8], X22
	087 Move X2, [X26]
	088 Move X0, X20
	089 Move X1, X22
	090 Call Enumerable.Select, X0, X1
	091 Move X1, X0
	092 Move X0, X21
	093 Move X2, X31
	094 Call String.Join, X0, X1
	095 Move X8, [X25]
	096 Move X21, X0
	097 Move W1, 5
	098 Move X0, X8
	099 Call 0x1C17D6C
	100 Compare X0, 0
	101 JumpIfEqual {141}
	102 Move W8, [X0+24]
	103 Move X20, X0
	104 Compare W8, 0
	105 JumpIfEqual {140}
	106 Move X8, 0xB78000
	107 Move X8, [X8+3216]
	108 Move X0, X19
	109 Move X8, [X8]
	110 Move [X20+32], X8
	111 Call Command.get_identifier, X0
	112 Move W8, [X20+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X20+40], X0
	116 Move X9, 0xB78000
	117 Move X9, [X9+3168]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X9, [X9]
	120 Move [X20+48], X9
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X20+56], X21
	123 Move X8, 0xB5E000
	124 Move X8, [X8+1072]
	125 Move X0, X20
	126 Move X22, [X31+48]
	127 Move X21, [X31+56]
	128 Move X24, [X31+32]
	129 Move X23, [X31+40]
	130 Move X8, [X8]
	131 Move X26, [X31+16]
	132 Move X25, [X31+24]
	133 Move X1, X31
	134 Move [X20+64], X8
	135 Move X20, [X31+64]
	136 Move X19, [X31+72]
	137 Move X30, [X31+80]
	138 Call String.Concat, X0
	139 Return X0
	140 Call 0x1C17F28
	141 Call 0x1C17F20

