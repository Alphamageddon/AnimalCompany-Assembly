Type: SpatialSys.CommandLib.TaskCommand

Method: System.Void .ctor(System.String identifier, SpatialSys.CommandLib.TaskGenerator taskGenerator, SpatialSys.CommandLib.Command parentCommand = null)

Disassembly:
	0x035BD42C CBZ X8, 0x35BD450
	0x035BD430 LDR W9, [X8 + 0x10]
	0x035BD434 CMP W9, 0x3
	0x035BD438 B.NE 0x35BD428
	0x035BD43C LDP X20, X19, [X31 + 0x30]
	0x035BD440 LDP X22, X21, [X31 + 0x20]
	0x035BD444 LDP X24, X23, [X31 + 0x10]
	0x035BD448 LDP X30, X25, [X31], #0x40
	0x035BD44C RET
	0x035BD450 MOV X1, X20
	0x035BD454 MOV X2, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X2
	006 Move W2, 1
	007 Move X19, X3
	008 Move X21, X0
	009 Call Command..ctor, X0, X1, X2
	010 Move [X21+48], X19
	011 Move [X21+56], X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void .ctor(SpatialSys.CommandLib.TaskGenerator taskGenerator, SpatialSys.CommandLib.Command parentCommand = null)

Disassembly:
	0x035BD2F4 BLR X8
	0x035BD2F8 TBZ X0, 0x0, 0x35BD368
	0x035BD2FC LDR X8, [X22]
	0x035BD300 LDR X1, [X24]
	0x035BD304 LDRH W9, [X8 + 0x12E]
	0x035BD308 CBZ X9, 0x35BD32C
	0x035BD30C LDR X10, [X8 + 0xB0]
	0x035BD310 ADD X10, X10, 0x8
	0x035BD314 LDUR X11, [X10 - 0x8]
	0x035BD318 CMP X11, X1
	0x035BD31C B.EQ 0x35BD33C
	0x035BD320 SUBS X9, X9, 0x1
	0x035BD324 ADD X10, X10, 0x10
	0x035BD328 B.NE 0x35BD314
	0x035BD32C MOV X0, X22
	0x035BD330 MOV W2, W31
	0x035BD334 BL 0x1C5C788
	0x035BD338 B 0x35BD348
	0x035BD33C LDRSW X9, [X10]
	0x035BD340 ADD X8, X8, X9, 0x4, LSL
	0x035BD344 ADD X0, X8, 0x138
	0x035BD348 LDP X8, X1, [X0]
	0x035BD34C MOV X0, X22
	0x035BD350 BLR X8
	0x035BD354 CBZ X0, 0x35BD46C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE24000
	008 Move X23, 0xB61000
	009 Move W8, [X22+358]
	010 Move X23, [X23+1544]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB61000
	019 Move X0, [X0+1544]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+358], W8
	023 Move X1, [X23]
	024 Move W2, 1
	025 Move X0, X20
	026 Call Command..ctor, X0, X1, X2
	027 Move [X20+48], X19
	028 Move [X20+56], X21
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Move X23, [X31+56]
	035 Return 

Method: System.Void .ctor(System.String identifier = null)

Disassembly:
	0x035C0E20 LDP X22, X21, [X31 + 0x10]
	0x035C0E24 LDP X30, X23, [X31], #0x30
	0x035C0E28 RET
	0x035C0E2C MOV X1, X31
	0x035C0E30 B 0x33BDD8C
	0x035C0E34 MOV X1, X31
	0x035C0E38 B 0x33BDD8C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W2, 1
	004 Move X19, X0
	005 Call Command..ctor, X0, X1, X2
	006 Move [X19+48], X31
	007 Move [X19+56], X31
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: System.Void Start()

Disassembly:
	0x035C0E3C STR X30, [X31 - 0x20]!

ISIL:
No ISIL was generated
Method: System.Boolean UpdateInternal(System.Single deltaTime)

Disassembly:
	0x035C0ED0 CBNZ W8, 0x35C0EDC
	0x035C0ED4 BL 0x1C16DFC
	0x035C0ED8 LDR X0, [X20]
	0x035C0EDC LDR X8, [X0 + 0xB8]
	0x035C0EE0 STR W19, [X8]
	0x035C0EE4 LDP X20, X19, [X31 + 0x10]
	0x035C0EE8 LDP X30, X21, [X31], #0x20
	0x035C0EEC RET
	0x035C0EF0 STR X30, [X31 - 0x20]!
	0x035C0EF4 STP X20, X19, [X31 + 0x10]
	0x035C0EF8 ADRP X20, 0xE20000
	0x035C0EFC ADRP X19, 0xB33000
	0x035C0F00 LDRB W8, [X20 + 0x17B]
	0x035C0F04 LDR X19, [X19 + 0x788]
	0x035C0F08 TBNZ X8, 0x0, 0x35C0F20
	0x035C0F0C ADRP X0, 0xB33000
	0x035C0F10 LDR X0, [X0 + 0x788]
	0x035C0F14 BL 0x1C16CF4
	0x035C0F18 MOVZ W8, 0x1
	0x035C0F1C STRB W8, [X20 + 0x17B]
	0x035C0F20 LDR X0, [X19]
	0x035C0F24 LDR W8, [X0 + 0xE0]
	0x035C0F28 CBNZ W8, 0x35C0F34
	0x035C0F2C BL 0x1C16DFC
	0x035C0F30 LDR X0, [X19]
	0x035C0F34 LDR X8, [X0 + 0xB8]
	0x035C0F38 LDP X20, X19, [X31 + 0x10]
	0x035C0F3C LDR W0, [X8 + 0x4]
	0x035C0F40 LDR X30, [X31], #0x20
	0x035C0F44 RET
	0x035C0F48 STP X30, X21, [X31 - 0x20]!
	0x035C0F4C STP X20, X19, [X31 + 0x10]
	0x035C0F50 ADRP X21, 0xE20000
	0x035C0F54 ADRP X20, 0xB33000
	0x035C0F58 LDRB W8, [X21 + 0x17C]
	0x035C0F5C LDR X20, [X20 + 0x788]
	0x035C0F60 MOV W19, W0
	0x035C0F64 TBNZ X8, 0x0, 0x35C0F7C
	0x035C0F68 ADRP X0, 0xB33000
	0x035C0F6C LDR X0, [X0 + 0x788]
	0x035C0F70 BL 0x1C16CF4
	0x035C0F74 MOVZ W8, 0x1
	0x035C0F78 STRB W8, [X21 + 0x17C]
	0x035C0F7C LDR X0, [X20]
	0x035C0F80 LDR W8, [X0 + 0xE0]
	0x035C0F84 CBNZ W8, 0x35C0F90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+64]
	006 Compare W8, 0
	007 JumpIfEqual {14}
	008 Move W0, 1
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Move X21, [X31+40]
	013 Return X0
	014 Move W8, [X0+65]
	015 Compare W8, 0
	016 JumpIfEqual {52}
	017 Move X8, X0
	018 Move W9, [X8+16]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, [X8+48]
	021 Compare X8, 0
	022 JumpIfNotEqual {18}
	023 Move X19, X0
	024 Move X0, [X0+80]
	025 Compare X0, 0
	026 JumpIfEqual {29}
	027 Move X1, X31
	028 Call CancellationTokenSource.Cancel, X0
	029 Move X0, 0xB5E000
	030 Move X0, [X0+1552]
	031 Call 0x1C17D08
	032 Move X1, X19
	033 Move X2, X31
	034 Call String.Format, X0, X1
	035 Move X20, X0
	036 Move X0, 0xB34000
	037 Move X19, [X19+72]
	038 Move X0, [X0+2000]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X1, X20
	042 Move X2, X19
	043 Move X3, X31
	044 Move X21, X0
	045 Call Exception..ctor, X0, X1, X2
	046 Move X0, 0xB78000
	047 Move X0, [X0+3232]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X21
	051 Call 0x1C17DEC
	052 Move W0, W31

Method: System.Void Cancel()

Disassembly:
	0x035C0F88 BL 0x1C16DFC
	0x035C0F8C LDR X0, [X20]
	0x035C0F90 LDR X8, [X0 + 0xB8]
	0x035C0F94 STR W19, [X8 + 0x4]
	0x035C0F98 LDP X20, X19, [X31 + 0x10]
	0x035C0F9C LDP X30, X21, [X31], #0x20
	0x035C0FA0 RET
	0x035C0FA4 STR X30, [X31 - 0x20]!
	0x035C0FA8 STP X20, X19, [X31 + 0x10]
	0x035C0FAC ADRP X20, 0xE20000
	0x035C0FB0 ADRP X19, 0xB33000
	0x035C0FB4 LDRB W8, [X20 + 0x17D]
	0x035C0FB8 LDR X19, [X19 + 0x788]
	0x035C0FBC TBNZ X8, 0x0, 0x35C0FD4
	0x035C0FC0 ADRP X0, 0xB33000
	0x035C0FC4 LDR X0, [X0 + 0x788]
	0x035C0FC8 BL 0x1C16CF4
	0x035C0FCC MOVZ W8, 0x1
	0x035C0FD0 STRB W8, [X20 + 0x17D]
	0x035C0FD4 LDR X0, [X19]
	0x035C0FD8 LDR W8, [X0 + 0xE0]
	0x035C0FDC CBNZ W8, 0x35C0FE8
	0x035C0FE0 BL 0x1C16DFC
	0x035C0FE4 LDR X0, [X19]
	0x035C0FE8 LDR X8, [X0 + 0xB8]
	0x035C0FEC LDP X20, X19, [X31 + 0x10]
	0x035C0FF0 LDR W0, [X8 + 0x8]
	0x035C0FF4 LDR X30, [X31], #0x20
	0x035C0FF8 RET
	0x035C0FFC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, X19
	008 Move X9, [X9+48]
	009 Compare X9, 0
	010 JumpIfEqual {13}
	011 Move W10, [X9+16]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X8, X19
	015 Move X8, [X8+48]
	016 Compare X8, 0
	017 JumpIfEqual {20}
	018 Move W9, [X8+16]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X19+80]
	021 Compare X0, 0
	022 JumpIfEqual {25}
	023 Move X1, X31
	024 Call CancellationTokenSource.Cancel, X0
	025 Move X0, X19
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Call Command.Cancel, X0
	029 Return 

Method: System.Void AwaitTask()

Disassembly:
	0x035C0E40 STP X20, X19, [X31 + 0x10]
	0x035C0E44 ADRP X20, 0xE20000
	0x035C0E48 ADRP X19, 0xB33000
	0x035C0E4C LDRB W8, [X20 + 0x179]
	0x035C0E50 LDR X19, [X19 + 0x788]
	0x035C0E54 TBNZ X8, 0x0, 0x35C0E6C
	0x035C0E58 ADRP X0, 0xB33000
	0x035C0E5C LDR X0, [X0 + 0x788]
	0x035C0E60 BL 0x1C16CF4
	0x035C0E64 MOVZ W8, 0x1
	0x035C0E68 STRB W8, [X20 + 0x179]
	0x035C0E6C LDR X0, [X19]
	0x035C0E70 LDR W8, [X0 + 0xE0]
	0x035C0E74 CBNZ W8, 0x35C0E80
	0x035C0E78 BL 0x1C16DFC
	0x035C0E7C LDR X0, [X19]
	0x035C0E80 LDR X8, [X0 + 0xB8]
	0x035C0E84 LDP X20, X19, [X31 + 0x10]
	0x035C0E88 LDR W0, [X8]
	0x035C0E8C LDR X30, [X31], #0x20
	0x035C0E90 RET
	0x035C0E94 STP X30, X21, [X31 - 0x20]!
	0x035C0E98 STP X20, X19, [X31 + 0x10]
	0x035C0E9C ADRP X21, 0xE20000
	0x035C0EA0 ADRP X20, 0xB33000
	0x035C0EA4 LDRB W8, [X21 + 0x17A]
	0x035C0EA8 LDR X20, [X20 + 0x788]
	0x035C0EAC MOV W19, W0
	0x035C0EB0 TBNZ X8, 0x0, 0x35C0EC8
	0x035C0EB4 ADRP X0, 0xB33000
	0x035C0EB8 LDR X0, [X0 + 0x788]
	0x035C0EBC BL 0x1C16CF4
	0x035C0EC0 MOVZ W8, 0x1
	0x035C0EC4 STRB W8, [X21 + 0x17A]
	0x035C0EC8 LDR X0, [X20]
	0x035C0ECC LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0xE21000
	007 Move X20, 0xB78000
	008 Move W8, [X21+359]
	009 Move X20, [X20+3224]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB78000
	016 Move X0, [X0+3224]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+359], W8
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Add X8, X31, 0
	022 Move X0, X31
	023 Move [X31+80], X31
	024 Move [X31+48], V0
	025 Move [X31+56], V0
	026 Move [X31+2], V0
	027 Call AsyncVoidMethodBuilder.Create
	028 Move V0, [X31]
	029 Move V1, [X31+16]
	030 Move X2, [X20]
	031 Add X8, X31, 32
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W9, TEMP
	035 Or X0, X8, 15
	036 Add X1, X31, 32
	037 Move [X31+72], X19
	038 Move [X31+40], V0
	039 Move [X31+56], V1
	040 Move [X31+32], W9
	041 Call AsyncVoidMethodBuilder.Start, X0, X1
	042 Move X20, [X31+112]
	043 Move X19, [X31+120]
	044 Move X30, [X31+96]
	045 Move X21, [X31+104]
	046 Add X31, X31, 128
	047 Return 

