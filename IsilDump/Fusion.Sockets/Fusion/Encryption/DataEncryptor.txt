Type: Fusion.Encryption.DataEncryptor

Method: System.Void Setup(System.Byte[] key)

Disassembly:
	0x01F0ADE4 MOV X26, X0
	0x01F0ADE8 MOV W24, W31
	0x01F0ADEC B 0x1F0AF20
	0x01F0ADF0 MOV X27, X1
	0x01F0ADF4 MOV X26, X0
	0x01F0ADF8 B 0x1F0AE98
	0x01F0ADFC MOV X27, X1
	0x01F0AE00 MOV X26, X0
	0x01F0AE04 B 0x1F0AF20
	0x01F0AE08 MOV X27, X1
	0x01F0AE0C MOV X26, X0
	0x01F0AE10 CMP W27, 0x1
	0x01F0AE14 B.NE 0x1F0AE2C
	0x01F0AE18 MOV X0, X26
	0x01F0AE1C BL 0x3EB1AD0
	0x01F0AE20 LDR X28, [X0]
	0x01F0AE24 BL 0x3EB1AE0
	0x01F0AE28 B 0x1F0AB1C
	0x01F0AE2C MOV X28, X31
	0x01F0AE30 CBZ X25, 0x1F0AE94
	0x01F0AE34 ADRP X10, 0x21E9000
	0x01F0AE38 LDR X8, [X25]
	0x01F0AE3C LDR X10, [X10 + 0xE00]
	0x01F0AE40 LDRH W9, [X8 + 0x12E]
	0x01F0AE44 LDR X1, [X10]
	0x01F0AE48 CBZ X9, 0x1F0AE6C
	0x01F0AE4C LDR X10, [X8 + 0xB0]
	0x01F0AE50 ADD X10, X10, 0x8
	0x01F0AE54 LDUR X11, [X10 - 0x8]
	0x01F0AE58 CMP X11, X1
	0x01F0AE5C B.EQ 0x1F0AE7C
	0x01F0AE60 SUBS X9, X9, 0x1
	0x01F0AE64 ADD X10, X10, 0x10
	0x01F0AE68 B.NE 0x1F0AE54
	0x01F0AE6C MOV X0, X25
	0x01F0AE70 MOV W2, W31
	0x01F0AE74 BL 0x1C5C788
	0x01F0AE78 B 0x1F0AE88
	0x01F0AE7C LDRSW X9, [X10]
	0x01F0AE80 ADD X8, X8, X9, 0x4, LSL
	0x01F0AE84 ADD X0, X8, 0x138
	0x01F0AE88 LDP X8, X1, [X0]
	0x01F0AE8C MOV X0, X25
	0x01F0AE90 BLR X8
	0x01F0AE94 CBNZ X28, 0x1F0AF4C
	0x01F0AE98 CMP W27, 0x1
	0x01F0AE9C B.NE 0x1F0AEB4
	0x01F0AEA0 MOV X0, X26
	0x01F0AEA4 BL 0x3EB1AD0
	0x01F0AEA8 LDR X25, [X0]
	0x01F0AEAC BL 0x3EB1AE0
	0x01F0AEB0 B 0x1F0AB94
	0x01F0AEB4 MOV X25, X31
	0x01F0AEB8 CBZ X23, 0x1F0AF1C
	0x01F0AEBC ADRP X10, 0x21E9000
	0x01F0AEC0 LDR X8, [X23]
	0x01F0AEC4 LDR X10, [X10 + 0xE00]
	0x01F0AEC8 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24D0000
	007 Move X22, 0x21EA000
	008 Move W8, [X21+1681]
	009 Move X22, [X22+1560]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x21EA000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1681], W8
	021 Move X0, [X22]
	022 Move W1, 32
	023 Call 0x1C17D6C
	024 Move [X19+56], X0
	025 Move X0, [X22]
	026 Move W1, 32
	027 Call 0x1C17D6C
	028 Move X2, [X19+56]
	029 Move X21, X0
	030 Move W4, 32
	031 Move X0, X20
	032 Move W1, W31
	033 Move W3, W31
	034 Move X5, X31
	035 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	036 Move W1, 32
	037 Move W4, 32
	038 Move X0, X20
	039 Move X2, X21
	040 Move W3, W31
	041 Move X5, X31
	042 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	043 Move X0, [X19+56]
	044 Call DataEncryptor.BuildAesProvider, X0
	045 Move [X19+16], X0
	046 Move X0, X21
	047 Call DataEncryptor.BuildHMACSHA256, X0
	048 Move [X19+24], X0
	049 Move X0, X31
	050 Call RandomNumberGenerator.Create
	051 Move [X19+32], X0
	052 Move X0, [X22]
	053 Move W1, 4096
	054 Call 0x1C17D6C
	055 Move [X19+40], X0
	056 Move X0, [X22]
	057 Move W1, 4096
	058 Call 0x1C17D6C
	059 Move [X19+48], X0
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return 

Method: System.Byte[] GenerateKey()

Disassembly:
	0x01F0AFD0 LDP X8, X1, [X0]
	0x01F0AFD4 MOV X0, X21
	0x01F0AFD8 BLR X8
	0x01F0AFDC CBNZ X23, 0x1F0AFE8
	0x01F0AFE0 MOV X0, X26
	0x01F0AFE4 BL 0x1D2C690
	0x01F0AFE8 MOV X0, X23
	0x01F0AFEC BL 0x1C16F18
	0x01F0AFF0 BL 0x1990590
	0x01F0AFF4 STP X30, X19, [X31 - 0x10]!
	0x01F0AFF8 MOV X19, X0
	0x01F0AFFC LDR X0, [X0 + 0x30]
	0x01F0B000 MOVZ W2, 0x1000
	0x01F0B004 MOV W1, W31
	0x01F0B008 MOV X3, X31
	0x01F0B00C BL 0x339FA34
	0x01F0B010 LDR X0, [X19 + 0x30]
	0x01F0B014 LDP X30, X19, [X31], #0x10
	0x01F0B018 RET
	0x01F0B01C STP X30, X23, [X31 - 0x30]!
	0x01F0B020 STP X22, X21, [X31 + 0x10]
	0x01F0B024 STP X20, X19, [X31 + 0x20]
	0x01F0B028 ADRP X19, 0x24CE000
	0x01F0B02C LDRB W8, [X19 + 0x695]
	0x01F0B030 MOV X20, X2
	0x01F0B034 MOV X21, X1
	0x01F0B038 MOV X22, X0
	0x01F0B03C TBNZ X8, 0x0, 0x1F0B06C
	0x01F0B040 ADRP X0, 0x21E8000
	0x01F0B044 LDR X0, [X0 + 0xE00]
	0x01F0B048 BL 0x1C16CF4
	0x01F0B04C ADRP X0, 0x21F5000
	0x01F0B050 LDR X0, [X0 + 0xB78]
	0x01F0B054 BL 0x1C16CF4
	0x01F0B058 ADRP X0, 0x21F5000
	0x01F0B05C LDR X0, [X0 + 0xE08]
	0x01F0B060 BL 0x1C16CF4
	0x01F0B064 MOVZ W8, 0x1
	0x01F0B068 STRB W8, [X19 + 0x695]
	0x01F0B06C LDR X0, [X22 + 0x18]
	0x01F0B070 CBZ X0, 0x1F0B130
	0x01F0B074 LDR X8, [X0]
	0x01F0B078 ADRP X19, 0x21F5000
	0x01F0B07C LDR X9, [X8 + 0x258]
	0x01F0B080 LDR X1, [X8 + 0x260]
	0x01F0B084 LDR X19, [X19 + 0xE08]
	0x01F0B088 BLR X9
	0x01F0B08C LDR X0, [X19]
	0x01F0B090 LDRSW X23, [X20]
	0x01F0B094 BL 0x1C16F10
	0x01F0B098 MOV X1, X21
	0x01F0B09C MOV X2, X23
	0x01F0B0A0 MOV X3, X31
	0x01F0B0A4 MOV X19, X0
	0x01F0B0A8 BL 0x32EA58C
	0x01F0B0AC LDR X0, [X22 + 0x18]
	0x01F0B0B0 CBZ X0, 0x1F0B184
	0x01F0B0B4 MOV X1, X19
	0x01F0B0B8 MOV X2, X31
	0x01F0B0BC BL 0x32516A0
	0x01F0B0C0 MOV X1, X0
	0x01F0B0C4 ADRP X8, 0x21F5000
	0x01F0B0C8 LDR X8, [X8 + 0xB78]
	0x01F0B0CC LDRSW X9, [X20]
	0x01F0B0D0 LDR X2, [X8]
	0x01F0B0D4 ADD X0, X9, X21
	0x01F0B0D8 BL 0x2221920
	0x01F0B0DC MOV X21, X31
	0x01F0B0E0 MOVZ W22, 0x3
	0x01F0B0E4 CBZ X19, 0x1F0B150
	0x01F0B0E8 ADRP X10, 0x21E8000
	0x01F0B0EC LDR X8, [X19]
	0x01F0B0F0 LDR X10, [X10 + 0xE00]
	0x01F0B0F4 LDRH W9, [X8 + 0x12E]
	0x01F0B0F8 LDR X1, [X10]
	0x01F0B0FC CBZ X9, 0x1F0B120
	0x01F0B100 LDR X10, [X8 + 0xB0]
	0x01F0B104 ADD X10, X10, 0x8
	0x01F0B108 LDUR X11, [X10 - 0x8]
	0x01F0B10C CMP X11, X1
	0x01F0B110 B.EQ 0x1F0B138
	0x01F0B114 SUBS X9, X9, 0x1
	0x01F0B118 ADD X10, X10, 0x10
	0x01F0B11C B.NE 0x1F0B108
	0x01F0B120 MOV X0, X19
	0x01F0B124 MOV W2, W31
	0x01F0B128 BL 0x1C5C788
	0x01F0B12C B 0x1F0B144
	0x01F0B130 MOV W8, W31
	0x01F0B134 B 0x1F0B170
	0x01F0B138 LDRSW X9, [X10]
	0x01F0B13C ADD X8, X8, X9, 0x4, LSL
	0x01F0B140 ADD X0, X8, 0x138
	0x01F0B144 LDP X8, X1, [X0]
	0x01F0B148 MOV X0, X19
	0x01F0B14C BLR X8
	0x01F0B150 CBNZ X21, 0x1F0B188
	0x01F0B154 CMP W22, 0x3
	0x01F0B158 B.EQ 0x1F0B160
	0x01F0B15C CBNZ W22, 0x1F0B170
	0x01F0B160 LDR W8, [X20]
	0x01F0B164 ADD W8, W8, 0x20
	0x01F0B168 STR W8, [X20]
	0x01F0B16C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x24D0000
	008 Move X19, 0x21EA000
	009 Move W8, [X20+1682]
	010 Move X19, [X19+1560]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x21EA000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0x21EA000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1682], W8
	023 Move X0, [X19]
	024 Move X23, 0x21E9000
	025 Move X23, [X23+3584]
	026 Move W1, 64
	027 Call 0x1C17D6C
	028 Move X21, X0
	029 Move X0, X31
	030 Call RandomNumberGenerator.Create
	031 Move X19, X0
	032 Compare X0, 0
	033 JumpIfEqual {72}
	034 Move X8, [X19]
	035 Move X9, [X8+408]
	036 Move X2, [X8+416]
	037 Move X0, X19
	038 Move X1, X21
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, X31
	041 Move X8, [X19]
	042 Move X1, [X23]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move X0, X19
	053 Move W2, W31
	054 Call 0x1C5D788
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X0, X19
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Compare X20, 0
	063 JumpIfNotEqual {73}
	064 Move X0, X21
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Return X0
	072 Call 0x1C17F20
	073 Move X0, X20
	074 Call 0x1C17F18
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X22, X0
	077 Move X0, X22
	078 Call 0x3EB2AD0
	079 Move X20, [X0]
	080 Call 0x3EB2AE0
	081 Compare X19, 0
	082 JumpIfNotEqual {41}
	083 Move X20, X31
	084 Move X22, X0
	085 Compare X19, 0
	086 JumpIfEqual {108}
	087 Move X8, [X19]
	088 Move X1, [X23]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X19
	099 Move W2, W31
	100 Call 0x1C5D788
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X19
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Compare X20, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X22
	111 Call 0x1D2D690
	112 Move X0, X20
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: System.Boolean EncryptData(System.Byte* buffer, ref System.Int32 bufferLength, System.Int32 capacity)

Disassembly:
	0x01F0B170 LDP X20, X19, [X31 + 0x20]
	0x01F0B174 LDP X22, X21, [X31 + 0x10]
	0x01F0B178 AND W0, W8, 0x1
	0x01F0B17C LDP X30, X23, [X31], #0x30
	0x01F0B180 RET
	0x01F0B184 BL 0x1C16F20
	0x01F0B188 MOV X0, X21
	0x01F0B18C BL 0x1C16F18
	0x01F0B190 B 0x1F0B198
	0x01F0B194 B 0x1F0B198
	0x01F0B198 MOV X22, X0
	0x01F0B19C CMP W1, 0x1
	0x01F0B1A0 B.NE 0x1F0B1C0
	0x01F0B1A4 MOV X0, X22
	0x01F0B1A8 BL 0x3EB1AD0
	0x01F0B1AC LDR X21, [X0]
	0x01F0B1B0 BL 0x3EB1AE0
	0x01F0B1B4 MOV W22, W31
	0x01F0B1B8 CBNZ X19, 0x1F0B0E8
	0x01F0B1BC B 0x1F0B150
	0x01F0B1C0 MOV X21, X31
	0x01F0B1C4 B 0x1F0B1CC
	0x01F0B1C8 MOV X22, X0
	0x01F0B1CC CBZ X19, 0x1F0B230
	0x01F0B1D0 ADRP X10, 0x21E8000
	0x01F0B1D4 LDR X8, [X19]
	0x01F0B1D8 LDR X10, [X10 + 0xE00]
	0x01F0B1DC LDRH W9, [X8 + 0x12E]
	0x01F0B1E0 LDR X1, [X10]
	0x01F0B1E4 CBZ X9, 0x1F0B208
	0x01F0B1E8 LDR X10, [X8 + 0xB0]
	0x01F0B1EC ADD X10, X10, 0x8
	0x01F0B1F0 LDUR X11, [X10 - 0x8]
	0x01F0B1F4 CMP X11, X1
	0x01F0B1F8 B.EQ 0x1F0B218
	0x01F0B1FC SUBS X9, X9, 0x1
	0x01F0B200 ADD X10, X10, 0x10
	0x01F0B204 B.NE 0x1F0B1F0
	0x01F0B208 MOV X0, X19
	0x01F0B20C MOV W2, W31
	0x01F0B210 BL 0x1C5C788
	0x01F0B214 B 0x1F0B224
	0x01F0B218 LDRSW X9, [X10]
	0x01F0B21C ADD X8, X8, X9, 0x4, LSL
	0x01F0B220 ADD X0, X8, 0x138
	0x01F0B224 LDP X8, X1, [X0]
	0x01F0B228 MOV X0, X19
	0x01F0B22C BLR X8
	0x01F0B230 CBNZ X21, 0x1F0B23C
	0x01F0B234 MOV X0, X22
	0x01F0B238 BL 0x1D2C690
	0x01F0B23C MOV X0, X21
	0x01F0B240 BL 0x1C16F18
	0x01F0B244 BL 0x1990590
	0x01F0B248 STP X30, X23, [X31 - 0x30]!
	0x01F0B24C STP X22, X21, [X31 + 0x10]
	0x01F0B250 STP X20, X19, [X31 + 0x20]
	0x01F0B254 ADRP X19, 0x24CE000
	0x01F0B258 LDRB W8, [X19 + 0x696]
	0x01F0B25C MOV X21, X2
	0x01F0B260 MOV X20, X1
	0x01F0B264 MOV X22, X0
	0x01F0B268 TBNZ X8, 0x0, 0x1F0B28C
	0x01F0B26C ADRP X0, 0x21E8000
	0x01F0B270 LDR X0, [X0 + 0xE00]
	0x01F0B274 BL 0x1C16CF4
	0x01F0B278 ADRP X0, 0x21F5000
	0x01F0B27C LDR X0, [X0 + 0xE08]
	0x01F0B280 BL 0x1C16CF4
	0x01F0B284 MOVZ W8, 0x1
	0x01F0B288 STRB W8, [X19 + 0x696]
	0x01F0B28C LDR X0, [X22 + 0x18]
	0x01F0B290 CBZ X0, 0x1F0B308
	0x01F0B294 LDR X8, [X0]
	0x01F0B298 ADRP X19, 0x21F5000
	0x01F0B29C LDR X9, [X8 + 0x258]
	0x01F0B2A0 LDR X1, [X8 + 0x260]
	0x01F0B2A4 LDR X19, [X19 + 0xE08]
	0x01F0B2A8 BLR X9
	0x01F0B2AC LDR X0, [X19]
	0x01F0B2B0 LDR W23, [X21]
	0x01F0B2B4 BL 0x1C16F10
	0x01F0B2B8 SUB W8, W23, 0x20
	0x01F0B2BC SXTW X2, W8
	0x01F0B2C0 MOV X1, X20
	0x01F0B2C4 MOV X3, X31
	0x01F0B2C8 MOV X19, X0
	0x01F0B2CC BL 0x32EA58C
	0x01F0B2D0 LDR X0, [X22 + 0x18]
	0x01F0B2D4 CBZ X0, 0x1F0B3AC
	0x01F0B2D8 MOV X1, X19
	0x01F0B2DC MOV X2, X31
	0x01F0B2E0 BL 0x32516A0
	0x01F0B2E4 LDR W8, [X21]
	0x01F0B2E8 SUB W8, W8, 0x20
	0x01F0B2EC STR W8, [X21]
	0x01F0B2F0 CBZ X0, 0x1F0B310
	0x01F0B2F4 LDR W9, [X0 + 0x18]
	0x01F0B2F8 ADD X10, X0, 0x20
	0x01F0B2FC CMP W9, 0x0
	0x01F0B300 CSEL X1, X31, X10, EQ
	0x01F0B304 B 0x1F0B314
	0x01F0B308 MOV W21, W31
	0x01F0B30C B 0x1F0B398
	0x01F0B310 MOV X1, X31
	0x01F0B314 ADD X0, X20, W8, SXTW
	0x01F0B318 MOVZ W2, 0x20
	0x01F0B31C MOV X3, X31
	0x01F0B320 BL 0x1E3577C
	0x01F0B324 CMP W0, 0x0
	0x01F0B328 MOV X20, X31
	0x01F0B32C CSET W21, EQ
	0x01F0B330 CBZ X19, 0x1F0B394
	0x01F0B334 ADRP X10, 0x21E8000
	0x01F0B338 LDR X8, [X19]
	0x01F0B33C LDR X10, [X10 + 0xE00]
	0x01F0B340 LDRH W9, [X8 + 0x12E]
	0x01F0B344 LDR X1, [X10]
	0x01F0B348 CBZ X9, 0x1F0B36C
	0x01F0B34C LDR X10, [X8 + 0xB0]
	0x01F0B350 ADD X10, X10, 0x8
	0x01F0B354 LDUR X11, [X10 - 0x8]
	0x01F0B358 CMP X11, X1
	0x01F0B35C B.EQ 0x1F0B37C
	0x01F0B360 SUBS X9, X9, 0x1
	0x01F0B364 ADD X10, X10, 0x10
	0x01F0B368 B.NE 0x1F0B354
	0x01F0B36C MOV X0, X19
	0x01F0B370 MOV W2, W31
	0x01F0B374 BL 0x1C5C788
	0x01F0B378 B 0x1F0B388
	0x01F0B37C LDRSW X9, [X10]
	0x01F0B380 ADD X8, X8, X9, 0x4, LSL
	0x01F0B384 ADD X0, X8, 0x138
	0x01F0B388 LDP X8, X1, [X0]
	0x01F0B38C MOV X0, X19
	0x01F0B390 BLR X8
	0x01F0B394 CBNZ X20, 0x1F0B3B0
	0x01F0B398 MOV W0, W21
	0x01F0B39C LDP X20, X19, [X31 + 0x20]
	0x01F0B3A0 LDP X22, X21, [X31 + 0x10]
	0x01F0B3A4 LDP X30, X23, [X31], #0x30
	0x01F0B3A8 RET
	0x01F0B3AC BL 0x1C16F20
	0x01F0B3B0 MOV X0, X20
	0x01F0B3B4 BL 0x1C16F18
	0x01F0B3B8 MOV X21, X0
	0x01F0B3BC CMP W1, 0x1
	0x01F0B3C0 MOVZ W22, 0x1
	0x01F0B3C4 B.NE 0x1F0B408
	0x01F0B3C8 MOV X0, X21
	0x01F0B3CC BL 0x3EB1AD0
	0x01F0B3D0 LDR X20, [X0]
	0x01F0B3D4 BL 0x3EB1AE0
	0x01F0B3D8 CBZ X20, 0x1F0B420
	0x01F0B3DC MOV X0, X20
	0x01F0B3E0 BL 0x1C16F18
	0x01F0B3E4 B 0x1F0B3EC
	0x01F0B3E8 CBNZ X20, 0x1F0B3F4
	0x01F0B3EC MOV X21, X0
	0x01F0B3F0 B 0x1F0B408
	0x01F0B3F4 MOV X0, X20
	0x01F0B3F8 BL 0x1C16F18
	0x01F0B3FC B 0x1F0B400
	0x01F0B400 MOV X21, X0
	0x01F0B404 MOVZ W22, 0x1
	0x01F0B408 CMP W1, W22
	0x01F0B40C B.NE 0x1F0B42C
	0x01F0B410 MOV X0, X21
	0x01F0B414 BL 0x3EB1AD0
	0x01F0B418 LDR X20, [X0]
	0x01F0B41C BL 0x3EB1AE0
	0x01F0B420 MOV W21, W31
	0x01F0B424 CBNZ X19, 0x1F0B334
	0x01F0B428 B 0x1F0B394
	0x01F0B42C MOV X20, X31
	0x01F0B430 B 0x1F0B438
	0x01F0B434 MOV X21, X0
	0x01F0B438 CBZ X19, 0x1F0B49C
	0x01F0B43C ADRP X10, 0x21E8000
	0x01F0B440 LDR X8, [X19]
	0x01F0B444 LDR X10, [X10 + 0xE00]
	0x01F0B448 LDRH W9, [X8 + 0x12E]
	0x01F0B44C LDR X1, [X10]
	0x01F0B450 CBZ X9, 0x1F0B474
	0x01F0B454 LDR X10, [X8 + 0xB0]
	0x01F0B458 ADD X10, X10, 0x8
	0x01F0B45C LDUR X11, [X10 - 0x8]
	0x01F0B460 CMP X11, X1
	0x01F0B464 B.EQ 0x1F0B484
	0x01F0B468 SUBS X9, X9, 0x1
	0x01F0B46C ADD X10, X10, 0x10
	0x01F0B470 B.NE 0x1F0B45C
	0x01F0B474 MOV X0, X19
	0x01F0B478 MOV W2, W31
	0x01F0B47C BL 0x1C5C788
	0x01F0B480 B 0x1F0B490
	0x01F0B484 LDRSW X9, [X10]
	0x01F0B488 ADD X8, X8, X9, 0x4, LSL
	0x01F0B48C ADD X0, X8, 0x138
	0x01F0B490 LDP X8, X1, [X0]
	0x01F0B494 MOV X0, X19
	0x01F0B498 BLR X8
	0x01F0B49C CBNZ X20, 0x1F0B4A8
	0x01F0B4A0 MOV X0, X21
	0x01F0B4A4 BL 0x1D2C690
	0x01F0B4A8 MOV X0, X20
	0x01F0B4AC BL 0x1C16F18
	0x01F0B4B0 BL 0x1990590
	0x01F0B4B4 STP X30, X19, [X31 - 0x10]!
	0x01F0B4B8 MOV X19, X0
	0x01F0B4BC LDR X0, [X0 + 0x10]
	0x01F0B4C0 CBZ X0, 0x1F0B4CC
	0x01F0B4C4 MOV X1, X31
	0x01F0B4C8 BL 0x32607D4
	0x01F0B4CC LDR X0, [X19 + 0x18]
	0x01F0B4D0 STR X31, [X19 + 0x10]
	0x01F0B4D4 CBZ X0, 0x1F0B4E0
	0x01F0B4D8 MOV X1, X31
	0x01F0B4DC BL 0x32518A8
	0x01F0B4E0 LDR X0, [X19 + 0x20]!
	0x01F0B4E4 STUR X31, [X19 - 0x8]
	0x01F0B4E8 CBZ X0, 0x1F0B4F4
	0x01F0B4EC MOV X1, X31
	0x01F0B4F0 BL 0x32561AC
	0x01F0B4F4 STP X31, X31, [X19]
	0x01F0B4F8 STR X31, [X19 + 0x10]
	0x01F0B4FC LDP X30, X19, [X31], #0x10
	0x01F0B500 RET
	0x01F0B504 STP X30, X21, [X31 - 0x20]!
	0x01F0B508 STP X20, X19, [X31 + 0x10]
	0x01F0B50C ADRP X21, 0x24CE000
	0x01F0B510 ADRP X20, 0x21E8000
	0x01F0B514 LDRB W8, [X21 + 0x699]
	0x01F0B518 LDR X20, [X20 + 0x618]
	0x01F0B51C MOV X19, X0
	0x01F0B520 TBNZ X8, 0x0, 0x1F0B538
	0x01F0B524 ADRP X0, 0x21E8000
	0x01F0B528 LDR X0, [X0 + 0x618]
	0x01F0B52C BL 0x1C16CF4
	0x01F0B530 MOVZ W8, 0x1
	0x01F0B534 STRB W8, [X21 + 0x699]
	0x01F0B538 LDR X0, [X20]
	0x01F0B53C MOVZ W1, 0x10
	0x01F0B540 BL 0x1C16D6C
	0x01F0B544 STR X0, [X19 + 0x40]
	0x01F0B548 LDR X0, [X20]
	0x01F0B54C MOVZ W1, 0x10
	0x01F0B550 BL 0x1C16D6C
	0x01F0B554 STR X0, [X19 + 0x48]
	0x01F0B558 MOV X0, X19
	0x01F0B55C LDP X20, X19, [X31 + 0x10]
	0x01F0B560 MOV X1, X31
	0x01F0B564 LDP X30, X21, [X31], #0x20
	0x01F0B568 B 0x33BDD8C
	0x01F0B56C STP X30, X21, [X31 - 0x20]!
	0x01F0B570 STP X20, X19, [X31 + 0x10]
	0x01F0B574 ADRP X20, 0x24CE000
	0x01F0B578 ADRP X21, 0x21E8000
	0x01F0B57C LDRB W8, [X20 + 0x69A]
	0x01F0B580 LDR X21, [X21 + 0xAC8]
	0x01F0B584 MOV X19, X0
	0x01F0B588 TBNZ X8, 0x0, 0x1F0B5D0
	0x01F0B58C ADRP X0, 0x21EF000
	0x01F0B590 LDR X0, [X0 + 0xD40]
	0x01F0B594 BL 0x1C16CF4
	0x01F0B598 ADRP X0, 0x21E8000
	0x01F0B59C LDR X0, [X0 + 0xAC8]
	0x01F0B5A0 BL 0x1C16CF4
	0x01F0B5A4 ADRP X0, 0x21F5000
	0x01F0B5A8 LDR X0, [X0 + 0xE10]
	0x01F0B5AC BL 0x1C16CF4
	0x01F0B5B0 ADRP X0, 0x21F5000
	0x01F0B5B4 LDR X0, [X0 + 0xE18]
	0x01F0B5B8 BL 0x1C16CF4
	0x01F0B5BC ADRP X0, 0x21E8000
	0x01F0B5C0 LDR X0, [X0 + 0x848]
	0x01F0B5C4 BL 0x1C16CF4
	0x01F0B5C8 MOVZ W8, 0x1
	0x01F0B5CC STRB W8, [X20 + 0x69A]
	0x01F0B5D0 LDR X0, [X21]
	0x01F0B5D4 MOVZ W1, 0x5
	0x01F0B5D8 BL 0x1C16D6C
	0x01F0B5DC CBZ X0, 0x1F0B6A0
	0x01F0B5E0 LDR W8, [X0 + 0x18]
	0x01F0B5E4 MOV X20, X0
	0x01F0B5E8 CBZ W8, 0x1F0B69C
	0x01F0B5EC ADRP X8, 0x21F5000
	0x01F0B5F0 LDR X8, [X8 + 0xE10]
	0x01F0B5F4 ADRP X9, 0x21EF000
	0x01F0B5F8 LDR X8, [X8]
	0x01F0B5FC LDR X9, [X9 + 0xD40]
	0x01F0B600 STR X8, [X20 + 0x20]
	0x01F0B604 LDR X0, [X9]
	0x01F0B608 LDR X21, [X19 + 0x10]
	0x01F0B60C LDR W8, [X0 + 0xE0]
	0x01F0B610 CBNZ W8, 0x1F0B618
	0x01F0B614 BL 0x1C16DFC
	0x01F0B618 MOVZ W1, 0x10
	0x01F0B61C MOV X0, X21
	0x01F0B620 MOV X2, X31
	0x01F0B624 BL 0x1E2F1AC
	0x01F0B628 LDR W8, [X20 + 0x18]
	0x01F0B62C CMP W8, 0x1
	0x01F0B630 B.LS 0x1F0B69C
	0x01F0B634 CMP W8, 0x2
	0x01F0B638 STR X0, [X20 + 0x28]
	0x01F0B63C B.EQ 0x1F0B69C
	0x01F0B640 ADRP X8, 0x21F5000
	0x01F0B644 LDR X8, [X8 + 0xE18]
	0x01F0B648 MOVZ W1, 0x10
	0x01F0B64C MOV X2, X31
	0x01F0B650 LDR X8, [X8]
	0x01F0B654 STR X8, [X20 + 0x30]
	0x01F0B658 LDR X0, [X19 + 0x18]
	0x01F0B65C BL 0x1E2F1AC
	0x01F0B660 LDR W8, [X20 + 0x18]
	0x01F0B664 CMP W8, 0x3
	0x01F0B668 B.LS 0x1F0B69C
	0x01F0B66C CMP W8, 0x4
	0x01F0B670 STR X0, [X20 + 0x38]
	0x01F0B674 B.EQ 0x1F0B69C
	0x01F0B678 ADRP X8, 0x21E8000
	0x01F0B67C LDR X8, [X8 + 0x848]
	0x01F0B680 MOV X0, X20
	0x01F0B684 MOV X1, X31
	0x01F0B688 LDR X8, [X8]
	0x01F0B68C STR X8, [X20 + 0x40]
	0x01F0B690 LDP X20, X19, [X31 + 0x10]
	0x01F0B694 LDP X30, X21, [X31], #0x20
	0x01F0B698 B 0x32278CC
	0x01F0B69C BL 0x1C16F28
	0x01F0B6A0 BL 0x1C16F20
	0x01F0B6A4 STP X30, X23, [X31 - 0x30]!
	0x01F0B6A8 STP X22, X21, [X31 + 0x10]
	0x01F0B6AC STP X20, X19, [X31 + 0x20]
	0x01F0B6B0 ADRP X22, 0x24CE000
	0x01F0B6B4 ADRP X21, 0x21F5000
	0x01F0B6B8 ADRP X20, 0x21F5000
	0x01F0B6BC ADRP X19, 0x21EA000
	0x01F0B6C0 LDRB W8, [X22 + 0x69C]
	0x01F0B6C4 LDR X21, [X21 + 0xE20]
	0x01F0B6C8 LDR X20, [X20 + 0xE28]
	0x01F0B6CC LDR X19, [X19 + 0xC48]
	0x01F0B6D0 TBZ X8, 0x0, 0x1F0B6D8
	0x01F0B6D4 B 0x1F31888
	0x01F0B6D8 ADRP X0, 0x21EA000
	0x01F0B6DC LDR X0, [X0 + 0xC48]
	0x01F0B6E0 BL 0x1C16CF4
	0x01F0B6E4 ADRP X0, 0x21F5000
	0x01F0B6E8 LDR X0, [X0 + 0xE28]
	0x01F0B6EC BL 0x1C16CF4
	0x01F0B6F0 ADRP X0, 0x21F5000
	0x01F0B6F4 LDR X0, [X0 + 0xE30]
	0x01F0B6F8 BL 0x1C16CF4
	0x01F0B6FC ADRP X0, 0x21E8000
	0x01F0B700 LDR X0, [X0 + 0xAC8]
	0x01F0B704 BL 0x1C16CF4
	0x01F0B708 ADRP X0, 0x21F5000
	0x01F0B70C LDR X0, [X0 + 0xE38]
	0x01F0B710 BL 0x1C16CF4
	0x01F0B714 ADRP X0, 0x21F5000
	0x01F0B718 LDR X0, [X0 + 0xE40]
	0x01F0B71C BL 0x1C16CF4
	0x01F0B720 ADRP X0, 0x21F5000
	0x01F0B724 LDR X0, [X0 + 0xE48]
	0x01F0B728 BL 0x1C16CF4
	0x01F0B72C ADRP X0, 0x21F5000
	0x01F0B730 LDR X0, [X0 + 0xE50]
	0x01F0B734 BL 0x1C16CF4
	0x01F0B738 ADRP X0, 0x21F5000
	0x01F0B73C LDR X0, [X0 + 0xE58]
	0x01F0B740 BL 0x1C16CF4
	0x01F0B744 ADRP X0, 0x21F5000
	0x01F0B748 LDR X0, [X0 + 0xE60]
	0x01F0B74C BL 0x1C16CF4
	0x01F0B750 ADRP X0, 0x21F5000
	0x01F0B754 LDR X0, [X0 + 0xE68]
	0x01F0B758 BL 0x1C16CF4
	0x01F0B75C ADRP X0, 0x21F5000
	0x01F0B760 LDR X0, [X0 + 0xE70]
	0x01F0B764 BL 0x1C16CF4
	0x01F0B768 ADRP X0, 0x21F5000
	0x01F0B76C LDR X0, [X0 + 0xE78]
	0x01F0B770 BL 0x1C16CF4
	0x01F0B774 ADRP X0, 0x21F5000
	0x01F0B778 LDR X0, [X0 + 0xE80]
	0x01F0B77C BL 0x1C16CF4
	0x01F0B780 ADRP X0, 0x21F5000
	0x01F0B784 LDR X0, [X0 + 0xE88]
	0x01F0B788 BL 0x1C16CF4
	0x01F0B78C ADRP X0, 0x21F5000
	0x01F0B790 LDR X0, [X0 + 0xE90]
	0x01F0B794 BL 0x1C16CF4
	0x01F0B798 ADRP X0, 0x21F5000
	0x01F0B79C LDR X0, [X0 + 0xE98]
	0x01F0B7A0 BL 0x1C16CF4
	0x01F0B7A4 ADRP X0, 0x21F5000
	0x01F0B7A8 LDR X0, [X0 + 0xEA0]
	0x01F0B7AC BL 0x1C16CF4
	0x01F0B7B0 ADRP X0, 0x21F5000
	0x01F0B7B4 LDR X0, [X0 + 0xEA8]
	0x01F0B7B8 BL 0x1C16CF4
	0x01F0B7BC ADRP X0, 0x21F5000
	0x01F0B7C0 LDR X0, [X0 + 0xEB0]
	0x01F0B7C4 BL 0x1C16CF4
	0x01F0B7C8 ADRP X0, 0x21F5000
	0x01F0B7CC LDR X0, [X0 + 0xEB8]
	0x01F0B7D0 BL 0x1C16CF4
	0x01F0B7D4 ADRP X0, 0x21F5000
	0x01F0B7D8 LDR X0, [X0 + 0xEC0]
	0x01F0B7DC BL 0x1C16CF4
	0x01F0B7E0 ADRP X0, 0x21F5000
	0x01F0B7E4 LDR X0, [X0 + 0xEC8]
	0x01F0B7E8 BL 0x1C16CF4
	0x01F0B7EC ADRP X0, 0x21F5000
	0x01F0B7F0 LDR X0, [X0 + 0xED0]
	0x01F0B7F4 BL 0x1C16CF4
	0x01F0B7F8 ADRP X0, 0x21F5000
	0x01F0B7FC LDR X0, [X0 + 0xED8]
	0x01F0B800 BL 0x1C16CF4
	0x01F0B804 ADRP X0, 0x21F5000
	0x01F0B808 LDR X0, [X0 + 0xEE0]
	0x01F0B80C BL 0x1C16CF4
	0x01F0B810 ADRP X0, 0x21F5000
	0x01F0B814 LDR X0, [X0 + 0xEE8]
	0x01F0B818 BL 0x1C16CF4
	0x01F0B81C ADRP X0, 0x21F5000
	0x01F0B820 LDR X0, [X0 + 0xEF0]
	0x01F0B824 BL 0x1C16CF4
	0x01F0B828 ADRP X0, 0x21F5000
	0x01F0B82C LDR X0, [X0 + 0xEF8]
	0x01F0B830 BL 0x1C16CF4
	0x01F0B834 ADRP X0, 0x21F5000
	0x01F0B838 LDR X0, [X0 + 0xF00]
	0x01F0B83C BL 0x1C16CF4
	0x01F0B840 ADRP X0, 0x21F5000
	0x01F0B844 LDR X0, [X0 + 0xF08]
	0x01F0B848 BL 0x1C16CF4
	0x01F0B84C ADRP X0, 0x21F5000
	0x01F0B850 LDR X0, [X0 + 0xF10]
	0x01F0B854 BL 0x1C16CF4
	0x01F0B858 ADRP X0, 0x21F5000
	0x01F0B85C LDR X0, [X0 + 0xF18]
	0x01F0B860 BL 0x1C16CF4
	0x01F0B864 ADRP X0, 0x21F5000
	0x01F0B868 LDR X0, [X0 + 0xF20]
	0x01F0B86C BL 0x1C16CF4
	0x01F0B870 ADRP X0, 0x21F5000
	0x01F0B874 LDR X0, [X0 + 0xF28]
	0x01F0B878 BL 0x1C16CF4
	0x01F0B87C ADRP X0, 0x21F5000
	0x01F0B880 LDR X0, [X0 + 0xF30]
	0x01F0B884 BL 0x1C16CF4
	0x01F0B888 ADRP X0, 0x21F5000
	0x01F0B88C LDR X0, [X0 + 0xF38]
	0x01F0B890 BL 0x1C16CF4
	0x01F0B894 ADRP X0, 0x21F5000
	0x01F0B898 LDR X0, [X0 + 0xF40]
	0x01F0B89C BL 0x1C16CF4
	0x01F0B8A0 ADRP X0, 0x21F5000
	0x01F0B8A4 LDR X0, [X0 + 0xF48]
	0x01F0B8A8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x24CF000
	015 Move W8, [X22+1683]
	016 Move W21, W3
	017 Move X19, X2
	018 Move X20, X1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x21F6000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x21E9000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0x21F1000
	031 Move X0, [X0+1368]
	032 Call 0x1C17CF4
	033 Move X0, 0x21F6000
	034 Move X0, [X0+3592]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1683], W8
	038 Compare X20, 0
	039 JumpIfEqual {155}
	040 Move W8, W31
	041 Compare W21, 0
	042 JumpIfEqual {156}
	043 Move W9, [X19]
	044 Compare W9, 0
	045 JumpIfEqual {156}
	046 Move X8, [X24+16]
	047 Compare X8, 0
	048 JumpIfEqual {156}
	049 Move X0, [X24+40]
	050 Move W2, 4096
	051 Move W1, W31
	052 Move X3, X31
	053 Call Array.Clear, X0, X1, X2
	054 Move X22, [X24+40]
	055 Compare X22, 0
	056 JumpIfEqual {155}
	057 Move X8, 0x21F6000
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move X8, [X8+3592]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X20
	063 Move X2, X23
	064 Move X3, X31
	065 Move X21, X0
	066 Call UnmanagedMemoryStream..ctor, X0, X1, X2
	067 Move X8, 0x21F1000
	068 Move X8, [X8+1368]
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X23, X0
	072 Move W2, 1
	073 Move X1, X22
	074 Move X3, X31
	075 Call MemoryStream..ctor, X0, X1, X2
	076 Move X0, [X24+32]
	077 Compare X0, 0
	078 JumpIfEqual {294}
	079 Move X8, [X0]
	080 Move X1, [X24+64]
	081 Move X9, [X8+408]
	082 Move X2, [X8+416]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X1, [X24+64]
	085 Compare X1, 0
	086 JumpIfEqual {295}
	087 Compare X23, 0
	088 JumpIfEqual {296}
	089 Move X8, [X23]
	090 Move W3, [X1+24]
	091 Move X9, [X8+904]
	092 Move X4, [X8+912]
	093 Move X0, X23
	094 Move W2, W31
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X0, [X24+16]
	097 Compare X0, 0
	098 JumpIfEqual {297}
	099 Move X8, [X0]
	100 Move X1, [X24+56]
	101 Move X2, [X24+64]
	102 Move X9, [X8+648]
	103 Move X3, [X8+656]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, 0x21F6000
	106 Move X8, [X8+3584]
	107 Move X25, X0
	108 Move X0, [X8]
	109 Call 0x1C17F10
	110 Move X28, X0
	111 Move W3, 1
	112 Move X1, X23
	113 Move X2, X25
	114 Move X4, X31
	115 Call CryptoStream..ctor, X0, X1, X2, X3
	116 Compare X21, 0
	117 JumpIfEqual {300}
	118 Move X8, [X21]
	119 Move W2, [X19]
	120 Move X9, [X8+616]
	121 Move X3, [X8+624]
	122 Move X0, X21
	123 Move X1, X28
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X28, 0
	126 JumpIfEqual {301}
	127 Move X0, X28
	128 Move X1, X31
	129 Call CryptoStream.FlushFinalBlock, X0
	130 Move X8, [X23]
	131 Move X9, [X8+504]
	132 Move X1, [X8+512]
	133 Move X0, X23
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X24, X0
	136 Move W29, W31
	137 Move X26, X31
	138 Move W27, 6
	139 Move X10, 0x21E9000
	140 Move X8, [X28]
	141 Move X10, [X10+3584]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move X1, [X10]
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move X0, X28
	153 Move W2, W31
	154 Call 0x1C5D788
	155 Move W8, W31
	156 Move X20, [X31+96]
	157 Move X19, [X31+104]
	158 Move X22, [X31+80]
	159 Move X21, [X31+88]
	160 Move X24, [X31+64]
	161 Move X23, [X31+72]
	162 Move X26, [X31+48]
	163 Move X25, [X31+56]
	164 Move X28, [X31+32]
	165 Move X27, [X31+40]
	166 Move X29, [X31+16]
	167 Move X30, [X31+24]
	168 And W0, W8, 1
	169 Add X31, X31, 112
	170 Return X0
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Add X8, X8, X9
	173 Add X0, X8, 312
	174 Move X8, [X0]
	175 Move X1, [X0+8]
	176 Move X0, X28
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Compare X26, 0
	179 JumpIfNotEqual {304}
	180 Move X28, X31
	181 Move TEMP, X29
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {187}
	185 Move W27, W31
	186 Move X26, X28
	187 Compare X25, 0
	188 JumpIfEqual {212}
	189 Move X10, 0x21E9000
	190 Move X8, [X25]
	191 Move X10, [X10+3584]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X1, [X10]
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move X0, X25
	203 Move W2, W31
	204 Call 0x1C5D788
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Add X8, X8, X9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X25
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X26, 0
	213 JumpIfNotEqual {302}
	214 Move X25, X31
	215 Compare W27, 0
	216 JumpIfNotEqual {219}
	217 Move W27, W31
	218 Move X26, X25
	219 Compare X23, 0
	220 JumpIfEqual {244}
	221 Move X10, 0x21E9000
	222 Move X8, [X23]
	223 Move X10, [X10+3584]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Move X1, [X10]
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move X0, X23
	235 Move W2, W31
	236 Call 0x1C5D788
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Add X8, X8, X9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X23
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Compare X26, 0
	245 JumpIfNotEqual {298}
	246 Move X23, X31
	247 Move X25, X31
	248 Compare W27, 0
	249 JumpIfNotEqual {252}
	250 Move W27, W31
	251 Move X25, X23
	252 Compare X21, 0
	253 JumpIfEqual {277}
	254 Move X10, 0x21E9000
	255 Move X8, [X21]
	256 Move X10, [X10+3584]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Move X1, [X10]
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move X0, X21
	268 Move W2, W31
	269 Call 0x1C5D788
	270 NotImplemented "Instruction LDRSW not yet implemented."
	271 Add X8, X8, X9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X1, [X0+8]
	275 Move X0, X21
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Compare X25, 0
	278 JumpIfNotEqual {292}
	279 Compare W27, 0
	280 JumpIfEqual {282}
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move W8, [X22+24]
	283 Add X9, X22, 32
	284 Move X0, X20
	285 Move W2, W24
	286 NotImplemented "Instruction CMP not yet implemented."
	287 NotImplemented "Instruction CSEL not yet implemented."
	288 Move X3, X31
	289 Call Native.MemCpy, X0, X1, X2
	290 Move W8, 1
	291 Move [X19], W24
	292 Move X0, X25
	293 Call 0x1C17F18
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Move X0, X26
	299 Call 0x1C17F18
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Move X0, X26
	303 Call 0x1C17F18
	304 Move X0, X26
	305 Call 0x1C17F18
	306 Move X27, X1
	307 Move X26, X0
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X0, X26
	310 Call 0x3EB2AD0
	311 Move X8, [X0]
	312 Move [X31+8], X8
	313 Call 0x3EB2AE0
	314 Move X26, [X31+8]
	315 Move W24, W31
	316 Move W27, W31
	317 Move W29, 1
	318 Compare X28, 0
	319 JumpIfNotEqual {139}
	320 Move [X31+8], X31
	321 Compare X28, 0
	322 JumpIfEqual {346}
	323 Move X10, 0x21E9000
	324 Move X8, [X28]
	325 Move X10, [X10+3584]
	326 NotImplemented "Instruction LDRH not yet implemented."
	327 Move X1, [X10]
	328 Compare X9, 0
	329 JumpIfEqual {336}
	330 Move X10, [X8+176]
	331 Add X10, X10, 8
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Subtract X9, X9, 1
	335 Add X10, X10, 16
	336 Move X0, X28
	337 Move W2, W31
	338 Call 0x1C5D788
	339 NotImplemented "Instruction LDRSW not yet implemented."
	340 Add X8, X8, X9
	341 Add X0, X8, 312
	342 Move X8, [X0]
	343 Move X1, [X0+8]
	344 Move X0, X28
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Move X8, [X31+8]
	347 Compare X8, 0
	348 JumpIfEqual {357}
	349 Move X0, [X31+8]
	350 Call 0x1C17F18
	351 Move X27, X1
	352 Move X26, X0
	353 Compare X28, 0
	354 JumpIfNotEqual {323}
	355 Move X27, X1
	356 Move X26, X0
	357 Move W24, W31
	358 Move X27, X1
	359 Move X26, X0
	360 Move W24, W31
	361 Move X27, X1
	362 Move X26, X0
	363 Move X27, X1
	364 Move X26, X0
	365 Move X27, X1
	366 Move X26, X0
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X0, X26
	369 Call 0x3EB2AD0
	370 Move X28, [X0]
	371 Call 0x3EB2AE0
	372 Move X28, X31
	373 Compare X25, 0
	374 JumpIfEqual {398}
	375 Move X10, 0x21E9000
	376 Move X8, [X25]
	377 Move X10, [X10+3584]
	378 NotImplemented "Instruction LDRH not yet implemented."
	379 Move X1, [X10]
	380 Compare X9, 0
	381 JumpIfEqual {388}
	382 Move X10, [X8+176]
	383 Add X10, X10, 8
	384 NotImplemented "Instruction LDUR not yet implemented."
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Subtract X9, X9, 1
	387 Add X10, X10, 16
	388 Move X0, X25
	389 Move W2, W31
	390 Call 0x1C5D788
	391 NotImplemented "Instruction LDRSW not yet implemented."
	392 Add X8, X8, X9
	393 Add X0, X8, 312
	394 Move X8, [X0]
	395 Move X1, [X0+8]
	396 Move X0, X25
	397 NotImplemented "Instruction BLR not yet implemented."
	398 Compare X28, 0
	399 JumpIfEqual {409}
	400 Move X0, X28
	401 Call 0x1C17F18
	402 Move X27, X1
	403 Move X26, X0
	404 Compare X25, 0
	405 JumpIfNotEqual {375}
	406 Move X27, X1
	407 Move X26, X0
	408 Move W24, W31
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move X0, X26
	411 Call 0x3EB2AD0
	412 Move X25, [X0]
	413 Call 0x3EB2AE0
	414 Move X25, X31
	415 Compare X23, 0
	416 JumpIfEqual {440}
	417 Move X10, 0x21E9000
	418 Move X8, [X23]
	419 Move X10, [X10+3584]
	420 NotImplemented "Instruction LDRH not yet implemented."
	421 Move X1, [X10]
	422 Compare X9, 0
	423 JumpIfEqual {430}
	424 Move X10, [X8+176]
	425 Add X10, X10, 8
	426 NotImplemented "Instruction LDUR not yet implemented."
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Subtract X9, X9, 1
	429 Add X10, X10, 16
	430 Move X0, X23
	431 Move W2, W31
	432 Call 0x1C5D788
	433 NotImplemented "Instruction LDRSW not yet implemented."
	434 Add X8, X8, X9
	435 Add X0, X8, 312
	436 Move X8, [X0]
	437 Move X1, [X0+8]
	438 Move X0, X23
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Compare X25, 0
	441 JumpIfNotEqual {448}
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move X0, X26
	444 Call 0x3EB2AD0
	445 Move X23, [X0]
	446 Call 0x3EB2AE0
	447 Move X23, X31
	448 Move X0, X25
	449 Call 0x1C17F18
	450 Move X27, X1
	451 Move X26, X0
	452 Compare X23, 0
	453 JumpIfNotEqual {417}
	454 Move X26, X0
	455 Compare X21, 0
	456 JumpIfEqual {480}
	457 Move X10, 0x21E9000
	458 Move X8, [X21]
	459 Move X10, [X10+3584]
	460 NotImplemented "Instruction LDRH not yet implemented."
	461 Move X1, [X10]
	462 Compare X9, 0
	463 JumpIfEqual {470}
	464 Move X10, [X8+176]
	465 Add X10, X10, 8
	466 NotImplemented "Instruction LDUR not yet implemented."
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Subtract X9, X9, 1
	469 Add X10, X10, 16
	470 Move X0, X21
	471 Move W2, W31
	472 Call 0x1C5D788
	473 NotImplemented "Instruction LDRSW not yet implemented."
	474 Add X8, X8, X9
	475 Add X0, X8, 312
	476 Move X8, [X0]
	477 Move X1, [X0+8]
	478 Move X0, X21
	479 NotImplemented "Instruction BLR not yet implemented."
	480 Compare X23, 0
	481 JumpIfNotEqual {484}
	482 Move X0, X26
	483 Call 0x1D2D690
	484 Move X0, X23
	485 Call 0x1C17F18
	486 Call 0x1991590

Method: System.Boolean DecryptData(System.Byte* buffer, ref System.Int32 bufferLength, System.Int32 capacity)

Disassembly:
	0x01F0B8D4 LDR X0, [X0 + 0xF68]
	0x01F0B8D8 BL 0x1C16CF4
	0x01F0B8DC ADRP X0, 0x21F5000
	0x01F0B8E0 LDR X0, [X0 + 0xF70]
	0x01F0B8E4 BL 0x1C16CF4
	0x01F0B8E8 ADRP X0, 0x21F5000
	0x01F0B8EC LDR X0, [X0 + 0xF78]
	0x01F0B8F0 BL 0x1C16CF4
	0x01F0B8F4 ADRP X0, 0x21F5000
	0x01F0B8F8 LDR X0, [X0 + 0xF80]
	0x01F0B8FC BL 0x1C16CF4
	0x01F0B900 ADRP X0, 0x21F5000
	0x01F0B904 LDR X0, [X0 + 0xF88]
	0x01F0B908 BL 0x1C16CF4
	0x01F0B90C ADRP X0, 0x21F5000
	0x01F0B910 LDR X0, [X0 + 0xF90]
	0x01F0B914 BL 0x1C16CF4
	0x01F0B918 ADRP X0, 0x21F5000
	0x01F0B91C LDR X0, [X0 + 0xF98]
	0x01F0B920 BL 0x1C16CF4
	0x01F0B924 ADRP X0, 0x21F5000
	0x01F0B928 LDR X0, [X0 + 0xFA0]
	0x01F0B92C BL 0x1C16CF4
	0x01F0B930 ADRP X0, 0x21F5000
	0x01F0B934 LDR X0, [X0 + 0xFA8]
	0x01F0B938 BL 0x1C16CF4
	0x01F0B93C ADRP X0, 0x21F5000
	0x01F0B940 LDR X0, [X0 + 0xFB0]
	0x01F0B944 BL 0x1C16CF4
	0x01F0B948 ADRP X0, 0x21F5000
	0x01F0B94C LDR X0, [X0 + 0xFB8]
	0x01F0B950 BL 0x1C16CF4
	0x01F0B954 ADRP X0, 0x21EF000
	0x01F0B958 LDR X0, [X0 + 0xD68]
	0x01F0B95C BL 0x1C16CF4
	0x01F0B960 ADRP X0, 0x21F5000
	0x01F0B964 LDR X0, [X0 + 0xFC0]
	0x01F0B968 BL 0x1C16CF4
	0x01F0B96C ADRP X0, 0x21F5000
	0x01F0B970 LDR X0, [X0 + 0xFC8]
	0x01F0B974 BL 0x1C16CF4
	0x01F0B978 ADRP X0, 0x21F5000
	0x01F0B97C LDR X0, [X0 + 0xFD0]
	0x01F0B980 BL 0x1C16CF4
	0x01F0B984 ADRP X0, 0x21F5000
	0x01F0B988 LDR X0, [X0 + 0xFD8]
	0x01F0B98C BL 0x1C16CF4
	0x01F0B990 ADRP X0, 0x21F5000
	0x01F0B994 LDR X0, [X0 + 0xFE0]
	0x01F0B998 BL 0x1C16CF4
	0x01F0B99C ADRP X0, 0x21F5000
	0x01F0B9A0 LDR X0, [X0 + 0xFE8]
	0x01F0B9A4 BL 0x1C16CF4
	0x01F0B9A8 ADRP X0, 0x21F5000
	0x01F0B9AC LDR X0, [X0 + 0xFF0]
	0x01F0B9B0 BL 0x1C16CF4
	0x01F0B9B4 ADRP X0, 0x21F5000
	0x01F0B9B8 LDR X0, [X0 + 0xFF8]
	0x01F0B9BC BL 0x1C16CF4
	0x01F0B9C0 ADRP X0, 0x21F6000
	0x01F0B9C4 LDR X0, [X0]
	0x01F0B9C8 BL 0x1C16CF4
	0x01F0B9CC ADRP X0, 0x21F6000
	0x01F0B9D0 LDR X0, [X0 + 0x8]
	0x01F0B9D4 BL 0x1C16CF4
	0x01F0B9D8 ADRP X0, 0x21F6000
	0x01F0B9DC LDR X0, [X0 + 0x10]
	0x01F0B9E0 BL 0x1C16CF4
	0x01F0B9E4 ADRP X0, 0x21F6000
	0x01F0B9E8 LDR X0, [X0 + 0x18]
	0x01F0B9EC BL 0x1C16CF4
	0x01F0B9F0 ADRP X0, 0x21F6000
	0x01F0B9F4 LDR X0, [X0 + 0x20]
	0x01F0B9F8 BL 0x1C16CF4
	0x01F0B9FC ADRP X0, 0x21F6000
	0x01F0BA00 LDR X0, [X0 + 0x28]
	0x01F0BA04 BL 0x1C16CF4
	0x01F0BA08 ADRP X0, 0x21F6000
	0x01F0BA0C LDR X0, [X0 + 0x30]
	0x01F0BA10 BL 0x1C16CF4
	0x01F0BA14 ADRP X0, 0x21F6000
	0x01F0BA18 LDR X0, [X0 + 0x38]
	0x01F0BA1C BL 0x1C16CF4
	0x01F0BA20 ADRP X0, 0x21F6000
	0x01F0BA24 LDR X0, [X0 + 0x40]
	0x01F0BA28 BL 0x1C16CF4
	0x01F0BA2C ADRP X0, 0x21F6000
	0x01F0BA30 LDR X0, [X0 + 0x48]
	0x01F0BA34 BL 0x1C16CF4
	0x01F0BA38 ADRP X0, 0x21F6000
	0x01F0BA3C LDR X0, [X0 + 0x50]
	0x01F0BA40 BL 0x1C16CF4
	0x01F0BA44 ADRP X0, 0x21F6000
	0x01F0BA48 LDR X0, [X0 + 0x58]
	0x01F0BA4C BL 0x1C16CF4
	0x01F0BA50 ADRP X0, 0x21F6000
	0x01F0BA54 LDR X0, [X0 + 0x60]
	0x01F0BA58 BL 0x1C16CF4
	0x01F0BA5C ADRP X0, 0x21F6000
	0x01F0BA60 LDR X0, [X0 + 0x68]
	0x01F0BA64 BL 0x1C16CF4
	0x01F0BA68 ADRP X0, 0x21F6000
	0x01F0BA6C LDR X0, [X0 + 0x70]
	0x01F0BA70 BL 0x1C16CF4
	0x01F0BA74 ADRP X0, 0x21F6000
	0x01F0BA78 LDR X0, [X0 + 0x78]
	0x01F0BA7C BL 0x1C16CF4
	0x01F0BA80 ADRP X0, 0x21F6000
	0x01F0BA84 LDR X0, [X0 + 0x80]
	0x01F0BA88 BL 0x1C16CF4
	0x01F0BA8C ADRP X0, 0x21F6000
	0x01F0BA90 LDR X0, [X0 + 0x88]
	0x01F0BA94 BL 0x1C16CF4
	0x01F0BA98 ADRP X0, 0x21F6000
	0x01F0BA9C LDR X0, [X0 + 0x90]
	0x01F0BAA0 BL 0x1C16CF4
	0x01F0BAA4 ADRP X0, 0x21F6000
	0x01F0BAA8 LDR X0, [X0 + 0x98]
	0x01F0BAAC BL 0x1C16CF4
	0x01F0BAB0 ADRP X0, 0x21F6000
	0x01F0BAB4 LDR X0, [X0 + 0xA0]
	0x01F0BAB8 BL 0x1C16CF4
	0x01F0BABC ADRP X0, 0x21F6000
	0x01F0BAC0 LDR X0, [X0 + 0xA8]
	0x01F0BAC4 BL 0x1C16CF4
	0x01F0BAC8 ADRP X0, 0x21F6000
	0x01F0BACC LDR X0, [X0 + 0xB0]
	0x01F0BAD0 BL 0x1C16CF4
	0x01F0BAD4 ADRP X0, 0x21F6000
	0x01F0BAD8 LDR X0, [X0 + 0xB8]
	0x01F0BADC BL 0x1C16CF4
	0x01F0BAE0 ADRP X0, 0x21F6000
	0x01F0BAE4 LDR X0, [X0 + 0xC0]
	0x01F0BAE8 BL 0x1C16CF4
	0x01F0BAEC ADRP X0, 0x21F6000
	0x01F0BAF0 LDR X0, [X0 + 0xC8]
	0x01F0BAF4 BL 0x1C16CF4
	0x01F0BAF8 ADRP X0, 0x21F6000
	0x01F0BAFC LDR X0, [X0 + 0xD0]
	0x01F0BB00 BL 0x1C16CF4
	0x01F0BB04 ADRP X0, 0x21F6000
	0x01F0BB08 LDR X0, [X0 + 0xD8]
	0x01F0BB0C BL 0x1C16CF4
	0x01F0BB10 ADRP X0, 0x21F6000
	0x01F0BB14 LDR X0, [X0 + 0xE0]
	0x01F0BB18 BL 0x1C16CF4
	0x01F0BB1C ADRP X0, 0x21F6000
	0x01F0BB20 LDR X0, [X0 + 0xE8]
	0x01F0BB24 BL 0x1C16CF4
	0x01F0BB28 ADRP X0, 0x21F6000
	0x01F0BB2C LDR X0, [X0 + 0xF0]
	0x01F0BB30 BL 0x1C16CF4
	0x01F0BB34 ADRP X0, 0x21F6000
	0x01F0BB38 LDR X0, [X0 + 0xF8]
	0x01F0BB3C BL 0x1C16CF4
	0x01F0BB40 ADRP X0, 0x21F6000
	0x01F0BB44 LDR X0, [X0 + 0x100]
	0x01F0BB48 BL 0x1C16CF4
	0x01F0BB4C ADRP X0, 0x21F6000
	0x01F0BB50 LDR X0, [X0 + 0x108]
	0x01F0BB54 BL 0x1C16CF4
	0x01F0BB58 ADRP X0, 0x21F6000
	0x01F0BB5C LDR X0, [X0 + 0x110]
	0x01F0BB60 BL 0x1C16CF4
	0x01F0BB64 ADRP X0, 0x21F6000
	0x01F0BB68 LDR X0, [X0 + 0x118]
	0x01F0BB6C BL 0x1C16CF4
	0x01F0BB70 ADRP X0, 0x21F6000
	0x01F0BB74 LDR X0, [X0 + 0x120]
	0x01F0BB78 BL 0x1C16CF4
	0x01F0BB7C ADRP X0, 0x21F6000
	0x01F0BB80 LDR X0, [X0 + 0x128]
	0x01F0BB84 BL 0x1C16CF4
	0x01F0BB88 ADRP X0, 0x21F6000
	0x01F0BB8C LDR X0, [X0 + 0x130]
	0x01F0BB90 BL 0x1C16CF4
	0x01F0BB94 ADRP X0, 0x21F6000
	0x01F0BB98 LDR X0, [X0 + 0x138]
	0x01F0BB9C BL 0x1C16CF4
	0x01F0BBA0 ADRP X0, 0x21F6000
	0x01F0BBA4 LDR X0, [X0 + 0x140]
	0x01F0BBA8 BL 0x1C16CF4
	0x01F0BBAC ADRP X0, 0x21F6000
	0x01F0BBB0 LDR X0, [X0 + 0x148]
	0x01F0BBB4 BL 0x1C16CF4
	0x01F0BBB8 ADRP X0, 0x21F6000
	0x01F0BBBC LDR X0, [X0 + 0x150]
	0x01F0BBC0 BL 0x1C16CF4
	0x01F0BBC4 ADRP X0, 0x21F6000
	0x01F0BBC8 LDR X0, [X0 + 0x158]
	0x01F0BBCC BL 0x1C16CF4
	0x01F0BBD0 ADRP X0, 0x21F6000
	0x01F0BBD4 LDR X0, [X0 + 0x160]
	0x01F0BBD8 BL 0x1C16CF4
	0x01F0BBDC ADRP X0, 0x21F6000
	0x01F0BBE0 LDR X0, [X0 + 0x168]
	0x01F0BBE4 BL 0x1C16CF4
	0x01F0BBE8 ADRP X0, 0x21F6000
	0x01F0BBEC LDR X0, [X0 + 0x170]
	0x01F0BBF0 BL 0x1C16CF4
	0x01F0BBF4 ADRP X0, 0x21F6000
	0x01F0BBF8 LDR X0, [X0 + 0x178]
	0x01F0BBFC BL 0x1C16CF4
	0x01F0BC00 ADRP X0, 0x21F6000
	0x01F0BC04 LDR X0, [X0 + 0x180]
	0x01F0BC08 BL 0x1C16CF4
	0x01F0BC0C ADRP X0, 0x21F6000
	0x01F0BC10 LDR X0, [X0 + 0x188]
	0x01F0BC14 BL 0x1C16CF4
	0x01F0BC18 ADRP X0, 0x21F6000
	0x01F0BC1C LDR X0, [X0 + 0x190]
	0x01F0BC20 BL 0x1C16CF4
	0x01F0BC24 ADRP X0, 0x21F6000
	0x01F0BC28 LDR X0, [X0 + 0x198]
	0x01F0BC2C BL 0x1C16CF4
	0x01F0BC30 ADRP X0, 0x21F6000
	0x01F0BC34 LDR X0, [X0 + 0x1A0]
	0x01F0BC38 BL 0x1C16CF4
	0x01F0BC3C ADRP X0, 0x21F6000
	0x01F0BC40 LDR X0, [X0 + 0x1A8]
	0x01F0BC44 BL 0x1C16CF4
	0x01F0BC48 ADRP X0, 0x21F6000
	0x01F0BC4C LDR X0, [X0 + 0x1B0]
	0x01F0BC50 BL 0x1C16CF4
	0x01F0BC54 ADRP X0, 0x21F6000
	0x01F0BC58 LDR X0, [X0 + 0x1B8]
	0x01F0BC5C BL 0x1C16CF4
	0x01F0BC60 ADRP X0, 0x21F6000
	0x01F0BC64 LDR X0, [X0 + 0x1C0]
	0x01F0BC68 BL 0x1C16CF4
	0x01F0BC6C ADRP X0, 0x21F6000
	0x01F0BC70 LDR X0, [X0 + 0x1C8]
	0x01F0BC74 BL 0x1C16CF4
	0x01F0BC78 ADRP X0, 0x21F6000
	0x01F0BC7C LDR X0, [X0 + 0x1D0]
	0x01F0BC80 BL 0x1C16CF4
	0x01F0BC84 ADRP X0, 0x21F6000
	0x01F0BC88 LDR X0, [X0 + 0x1D8]
	0x01F0BC8C BL 0x1C16CF4
	0x01F0BC90 ADRP X0, 0x21F6000
	0x01F0BC94 LDR X0, [X0 + 0x1E0]
	0x01F0BC98 BL 0x1C16CF4
	0x01F0BC9C ADRP X0, 0x21F6000
	0x01F0BCA0 LDR X0, [X0 + 0x1E8]
	0x01F0BCA4 BL 0x1C16CF4
	0x01F0BCA8 ADRP X0, 0x21F6000
	0x01F0BCAC LDR X0, [X0 + 0x1F0]
	0x01F0BCB0 BL 0x1C16CF4
	0x01F0BCB4 ADRP X0, 0x21F6000
	0x01F0BCB8 LDR X0, [X0 + 0x1F8]
	0x01F0BCBC BL 0x1C16CF4
	0x01F0BCC0 ADRP X0, 0x21F6000
	0x01F0BCC4 LDR X0, [X0 + 0x200]
	0x01F0BCC8 BL 0x1C16CF4
	0x01F0BCCC ADRP X0, 0x21F6000
	0x01F0BCD0 LDR X0, [X0 + 0x208]
	0x01F0BCD4 BL 0x1C16CF4
	0x01F0BCD8 ADRP X0, 0x21F6000
	0x01F0BCDC LDR X0, [X0 + 0x210]
	0x01F0BCE0 BL 0x1C16CF4
	0x01F0BCE4 ADRP X0, 0x21F6000
	0x01F0BCE8 LDR X0, [X0 + 0x218]
	0x01F0BCEC BL 0x1C16CF4
	0x01F0BCF0 ADRP X0, 0x21F6000
	0x01F0BCF4 LDR X0, [X0 + 0x220]
	0x01F0BCF8 BL 0x1C16CF4
	0x01F0BCFC ADRP X0, 0x21F6000
	0x01F0BD00 LDR X0, [X0 + 0x228]
	0x01F0BD04 BL 0x1C16CF4
	0x01F0BD08 ADRP X0, 0x21F6000
	0x01F0BD0C LDR X0, [X0 + 0x230]
	0x01F0BD10 BL 0x1C16CF4
	0x01F0BD14 ADRP X0, 0x21F6000
	0x01F0BD18 LDR X0, [X0 + 0x238]
	0x01F0BD1C BL 0x1C16CF4
	0x01F0BD20 ADRP X0, 0x21F6000
	0x01F0BD24 LDR X0, [X0 + 0x240]
	0x01F0BD28 BL 0x1C16CF4
	0x01F0BD2C ADRP X0, 0x21F6000
	0x01F0BD30 LDR X0, [X0 + 0x248]
	0x01F0BD34 BL 0x1C16CF4
	0x01F0BD38 ADRP X0, 0x21F6000
	0x01F0BD3C LDR X0, [X0 + 0x250]
	0x01F0BD40 BL 0x1C16CF4
	0x01F0BD44 ADRP X0, 0x21F6000
	0x01F0BD48 LDR X0, [X0 + 0x258]
	0x01F0BD4C BL 0x1C16CF4
	0x01F0BD50 ADRP X0, 0x21F6000
	0x01F0BD54 LDR X0, [X0 + 0x260]
	0x01F0BD58 BL 0x1C16CF4
	0x01F0BD5C ADRP X0, 0x21F6000
	0x01F0BD60 LDR X0, [X0 + 0x268]
	0x01F0BD64 BL 0x1C16CF4
	0x01F0BD68 ADRP X0, 0x21F6000
	0x01F0BD6C LDR X0, [X0 + 0x270]
	0x01F0BD70 BL 0x1C16CF4
	0x01F0BD74 ADRP X0, 0x21F6000
	0x01F0BD78 LDR X0, [X0 + 0x278]
	0x01F0BD7C BL 0x1C16CF4
	0x01F0BD80 ADRP X0, 0x21F6000
	0x01F0BD84 LDR X0, [X0 + 0x280]
	0x01F0BD88 BL 0x1C16CF4
	0x01F0BD8C ADRP X0, 0x21F6000
	0x01F0BD90 LDR X0, [X0 + 0x288]
	0x01F0BD94 BL 0x1C16CF4
	0x01F0BD98 ADRP X0, 0x21F6000
	0x01F0BD9C LDR X0, [X0 + 0x290]
	0x01F0BDA0 BL 0x1C16CF4
	0x01F0BDA4 ADRP X0, 0x21F6000
	0x01F0BDA8 LDR X0, [X0 + 0x298]
	0x01F0BDAC BL 0x1C16CF4
	0x01F0BDB0 ADRP X0, 0x21F6000
	0x01F0BDB4 LDR X0, [X0 + 0x2A0]
	0x01F0BDB8 BL 0x1C16CF4
	0x01F0BDBC ADRP X0, 0x21F6000
	0x01F0BDC0 LDR X0, [X0 + 0x2A8]
	0x01F0BDC4 BL 0x1C16CF4
	0x01F0BDC8 ADRP X0, 0x21F6000
	0x01F0BDCC LDR X0, [X0 + 0x2B0]
	0x01F0BDD0 BL 0x1C16CF4
	0x01F0BDD4 ADRP X0, 0x21F6000
	0x01F0BDD8 LDR X0, [X0 + 0x2B8]
	0x01F0BDDC BL 0x1C16CF4
	0x01F0BDE0 ADRP X0, 0x21F6000
	0x01F0BDE4 LDR X0, [X0 + 0x2C0]
	0x01F0BDE8 BL 0x1C16CF4
	0x01F0BDEC ADRP X0, 0x21F6000
	0x01F0BDF0 LDR X0, [X0 + 0x2C8]
	0x01F0BDF4 BL 0x1C16CF4
	0x01F0BDF8 ADRP X0, 0x21F6000
	0x01F0BDFC LDR X0, [X0 + 0x2D0]
	0x01F0BE00 BL 0x1C16CF4
	0x01F0BE04 ADRP X0, 0x21F6000
	0x01F0BE08 LDR X0, [X0 + 0x2D8]
	0x01F0BE0C BL 0x1C16CF4
	0x01F0BE10 ADRP X0, 0x21F6000
	0x01F0BE14 LDR X0, [X0 + 0x2E0]
	0x01F0BE18 BL 0x1C16CF4
	0x01F0BE1C ADRP X0, 0x21F6000
	0x01F0BE20 LDR X0, [X0 + 0x2E8]
	0x01F0BE24 BL 0x1C16CF4
	0x01F0BE28 ADRP X0, 0x21F6000
	0x01F0BE2C LDR X0, [X0 + 0x2F0]
	0x01F0BE30 BL 0x1C16CF4
	0x01F0BE34 ADRP X0, 0x21F6000
	0x01F0BE38 LDR X0, [X0 + 0x2F8]
	0x01F0BE3C BL 0x1C16CF4
	0x01F0BE40 ADRP X0, 0x21F6000
	0x01F0BE44 LDR X0, [X0 + 0x300]
	0x01F0BE48 BL 0x1C16CF4
	0x01F0BE4C ADRP X0, 0x21F6000
	0x01F0BE50 LDR X0, [X0 + 0x308]
	0x01F0BE54 BL 0x1C16CF4
	0x01F0BE58 ADRP X0, 0x21F6000
	0x01F0BE5C LDR X0, [X0 + 0x310]
	0x01F0BE60 BL 0x1C16CF4
	0x01F0BE64 ADRP X0, 0x21F6000
	0x01F0BE68 LDR X0, [X0 + 0x318]
	0x01F0BE6C BL 0x1C16CF4
	0x01F0BE70 ADRP X0, 0x21F6000
	0x01F0BE74 LDR X0, [X0 + 0x320]
	0x01F0BE78 BL 0x1C16CF4
	0x01F0BE7C ADRP X0, 0x21F6000
	0x01F0BE80 LDR X0, [X0 + 0x328]
	0x01F0BE84 BL 0x1C16CF4
	0x01F0BE88 ADRP X0, 0x21F6000
	0x01F0BE8C LDR X0, [X0 + 0x330]
	0x01F0BE90 BL 0x1C16CF4
	0x01F0BE94 ADRP X0, 0x21F6000
	0x01F0BE98 LDR X0, [X0 + 0x338]
	0x01F0BE9C BL 0x1C16CF4
	0x01F0BEA0 ADRP X0, 0x21F6000
	0x01F0BEA4 LDR X0, [X0 + 0x340]
	0x01F0BEA8 BL 0x1C16CF4
	0x01F0BEAC ADRP X0, 0x21F6000
	0x01F0BEB0 LDR X0, [X0 + 0x348]
	0x01F0BEB4 BL 0x1C16CF4
	0x01F0BEB8 ADRP X0, 0x21F6000
	0x01F0BEBC LDR X0, [X0 + 0x350]
	0x01F0BEC0 BL 0x1C16CF4
	0x01F0BEC4 ADRP X0, 0x21F6000
	0x01F0BEC8 LDR X0, [X0 + 0x358]
	0x01F0BECC BL 0x1C16CF4
	0x01F0BED0 ADRP X0, 0x21F6000
	0x01F0BED4 LDR X0, [X0 + 0x360]
	0x01F0BED8 BL 0x1C16CF4
	0x01F0BEDC ADRP X0, 0x21F6000
	0x01F0BEE0 LDR X0, [X0 + 0x368]
	0x01F0BEE4 BL 0x1C16CF4
	0x01F0BEE8 ADRP X0, 0x21F6000
	0x01F0BEEC LDR X0, [X0 + 0x370]
	0x01F0BEF0 BL 0x1C16CF4
	0x01F0BEF4 ADRP X0, 0x21F6000
	0x01F0BEF8 LDR X0, [X0 + 0x378]
	0x01F0BEFC BL 0x1C16CF4
	0x01F0BF00 ADRP X0, 0x21F6000
	0x01F0BF04 LDR X0, [X0 + 0x380]
	0x01F0BF08 BL 0x1C16CF4
	0x01F0BF0C ADRP X0, 0x21F6000
	0x01F0BF10 LDR X0, [X0 + 0x388]
	0x01F0BF14 BL 0x1C16CF4
	0x01F0BF18 ADRP X0, 0x21F6000
	0x01F0BF1C LDR X0, [X0 + 0x390]
	0x01F0BF20 BL 0x1C16CF4
	0x01F0BF24 ADRP X0, 0x21F6000
	0x01F0BF28 LDR X0, [X0 + 0x398]
	0x01F0BF2C BL 0x1C16CF4
	0x01F0BF30 ADRP X0, 0x21F6000
	0x01F0BF34 LDR X0, [X0 + 0x3A0]
	0x01F0BF38 BL 0x1C16CF4
	0x01F0BF3C ADRP X0, 0x21F6000
	0x01F0BF40 LDR X0, [X0 + 0x3A8]
	0x01F0BF44 BL 0x1C16CF4
	0x01F0BF48 ADRP X0, 0x21F6000
	0x01F0BF4C LDR X0, [X0 + 0x3B0]
	0x01F0BF50 BL 0x1C16CF4
	0x01F0BF54 ADRP X0, 0x21F6000
	0x01F0BF58 LDR X0, [X0 + 0x3B8]
	0x01F0BF5C BL 0x1C16CF4
	0x01F0BF60 ADRP X0, 0x21F6000
	0x01F0BF64 LDR X0, [X0 + 0x3C0]
	0x01F0BF68 BL 0x1C16CF4
	0x01F0BF6C ADRP X0, 0x21F6000
	0x01F0BF70 LDR X0, [X0 + 0x3C8]
	0x01F0BF74 BL 0x1C16CF4
	0x01F0BF78 ADRP X0, 0x21F6000
	0x01F0BF7C LDR X0, [X0 + 0x3D0]
	0x01F0BF80 BL 0x1C16CF4
	0x01F0BF84 ADRP X0, 0x21F6000
	0x01F0BF88 LDR X0, [X0 + 0x3D8]
	0x01F0BF8C BL 0x1C16CF4
	0x01F0BF90 ADRP X0, 0x21F6000
	0x01F0BF94 LDR X0, [X0 + 0x3E0]
	0x01F0BF98 BL 0x1C16CF4
	0x01F0BF9C ADRP X0, 0x21EF000
	0x01F0BFA0 LDR X0, [X0 + 0xD80]
	0x01F0BFA4 BL 0x1C16CF4
	0x01F0BFA8 ADRP X0, 0x21F6000
	0x01F0BFAC LDR X0, [X0 + 0x3E8]
	0x01F0BFB0 BL 0x1C16CF4
	0x01F0BFB4 ADRP X0, 0x21F6000
	0x01F0BFB8 LDR X0, [X0 + 0x3F0]
	0x01F0BFBC BL 0x1C16CF4
	0x01F0BFC0 ADRP X0, 0x21F6000
	0x01F0BFC4 LDR X0, [X0 + 0x3F8]
	0x01F0BFC8 BL 0x1C16CF4
	0x01F0BFCC ADRP X0, 0x21F6000
	0x01F0BFD0 LDR X0, [X0 + 0x400]
	0x01F0BFD4 BL 0x1C16CF4
	0x01F0BFD8 ADRP X0, 0x21F6000
	0x01F0BFDC LDR X0, [X0 + 0x408]
	0x01F0BFE0 BL 0x1C16CF4
	0x01F0BFE4 ADRP X0, 0x21F6000
	0x01F0BFE8 LDR X0, [X0 + 0x410]
	0x01F0BFEC BL 0x1C16CF4
	0x01F0BFF0 ADRP X0, 0x21F6000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x24CF000
	015 Move W8, [X22+1684]
	016 Move W21, W3
	017 Move X19, X2
	018 Move X20, X1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x21F6000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x21E9000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0x21F1000
	031 Move X0, [X0+1368]
	032 Call 0x1C17CF4
	033 Move X0, 0x21F6000
	034 Move X0, [X0+3592]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1684], W8
	038 Compare X20, 0
	039 JumpIfEqual {145}
	040 Move W8, W31
	041 Compare W21, 0
	042 JumpIfEqual {146}
	043 Move W9, [X19]
	044 Compare W9, 0
	045 JumpIfEqual {146}
	046 Move X8, [X24+16]
	047 Compare X8, 0
	048 JumpIfEqual {146}
	049 Move X0, [X24+48]
	050 Move W2, 4096
	051 Move W1, W31
	052 Move X3, X31
	053 Call Array.Clear, X0, X1, X2
	054 Move X22, [X24+48]
	055 Compare X22, 0
	056 JumpIfEqual {145}
	057 Move X8, 0x21F6000
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move X8, [X8+3592]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X20
	063 Move X2, X23
	064 Move X3, X31
	065 Move X21, X0
	066 Call UnmanagedMemoryStream..ctor, X0, X1, X2
	067 Compare X21, 0
	068 JumpIfEqual {282}
	069 Move X8, [X21]
	070 Move X1, [X24+72]
	071 Move X9, [X8+856]
	072 Move X4, [X8+864]
	073 Move W3, 16
	074 Move X0, X21
	075 Move W2, W31
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move W8, [X19]
	078 Subtract W8, W8, 16
	079 Move [X19], W8
	080 Move X8, 0x21F1000
	081 Move X8, [X8+1368]
	082 Move X0, [X8]
	083 Call 0x1C17F10
	084 Move X23, X0
	085 Move W2, 1
	086 Move X1, X22
	087 Move X3, X31
	088 Call MemoryStream..ctor, X0, X1, X2
	089 Move X0, [X24+16]
	090 Compare X0, 0
	091 JumpIfEqual {285}
	092 Move X8, [X0]
	093 Move X1, [X24+56]
	094 Move X2, [X24+72]
	095 Move X9, [X8+680]
	096 Move X3, [X8+688]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, 0x21F6000
	099 Move X8, [X8+3584]
	100 Move X25, X0
	101 Move X0, [X8]
	102 Call 0x1C17F10
	103 Move X28, X0
	104 Move X1, X21
	105 Move X2, X25
	106 Move W3, W31
	107 Move X4, X31
	108 Call CryptoStream..ctor, X0, X1, X2, X3
	109 Compare X28, 0
	110 JumpIfEqual {286}
	111 Move X8, [X28]
	112 Move W2, [X19]
	113 Move X9, [X8+616]
	114 Move X3, [X8+624]
	115 Move X0, X28
	116 Move X1, X23
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X23, 0
	119 JumpIfEqual {289}
	120 Move X8, [X23]
	121 Move X9, [X8+504]
	122 Move X1, [X8+512]
	123 Move X0, X23
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X24, X0
	126 Move W29, W31
	127 Move X26, X31
	128 Move W27, 6
	129 Move X10, 0x21E9000
	130 Move X8, [X28]
	131 Move X10, [X10+3584]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Move X1, [X10]
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X28
	143 Move W2, W31
	144 Call 0x1C5D788
	145 Move W8, W31
	146 Move X20, [X31+96]
	147 Move X19, [X31+104]
	148 Move X22, [X31+80]
	149 Move X21, [X31+88]
	150 Move X24, [X31+64]
	151 Move X23, [X31+72]
	152 Move X26, [X31+48]
	153 Move X25, [X31+56]
	154 Move X28, [X31+32]
	155 Move X27, [X31+40]
	156 Move X29, [X31+16]
	157 Move X30, [X31+24]
	158 And W0, W8, 1
	159 Add X31, X31, 112
	160 Return X0
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X1, [X0+8]
	166 Move X0, X28
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X26, 0
	169 JumpIfNotEqual {292}
	170 Move X28, X31
	171 Move TEMP, X29
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {177}
	175 Move W27, W31
	176 Move X26, X28
	177 Compare X25, 0
	178 JumpIfEqual {202}
	179 Move X10, 0x21E9000
	180 Move X8, [X25]
	181 Move X10, [X10+3584]
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Move X1, [X10]
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X25
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X25
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Compare X26, 0
	203 JumpIfNotEqual {290}
	204 Move X25, X31
	205 Compare W27, 0
	206 JumpIfNotEqual {209}
	207 Move W27, W31
	208 Move X26, X25
	209 Compare X23, 0
	210 JumpIfEqual {234}
	211 Move X10, 0x21E9000
	212 Move X8, [X23]
	213 Move X10, [X10+3584]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X1, [X10]
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X23
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X23
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X26, 0
	235 JumpIfNotEqual {287}
	236 Move X23, X31
	237 Move X25, X31
	238 Compare W27, 0
	239 JumpIfNotEqual {242}
	240 Move W27, W31
	241 Move X25, X23
	242 Compare X21, 0
	243 JumpIfEqual {267}
	244 Move X10, 0x21E9000
	245 Move X8, [X21]
	246 Move X10, [X10+3584]
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 Move X1, [X10]
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move X0, X21
	258 Move W2, W31
	259 Call 0x1C5D788
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Add X8, X8, X9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X1, [X0+8]
	265 Move X0, X21
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Compare X25, 0
	268 JumpIfNotEqual {283}
	269 Compare W27, 0
	270 JumpIfEqual {272}
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move W8, [X22+24]
	273 Add X9, X22, 32
	274 Move X0, X20
	275 Move W2, W24
	276 NotImplemented "Instruction CMP not yet implemented."
	277 NotImplemented "Instruction CSEL not yet implemented."
	278 Move X3, X31
	279 Call Native.MemCpy, X0, X1, X2
	280 Move W8, 1
	281 Move [X19], W24
	282 Call 0x1C17F20
	283 Move X0, X25
	284 Call 0x1C17F18
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Move X0, X26
	288 Call 0x1C17F18
	289 Call 0x1C17F20
	290 Move X0, X26
	291 Call 0x1C17F18
	292 Move X0, X26
	293 Call 0x1C17F18
	294 Move X27, X1
	295 Move X26, X0
	296 Move W24, W31
	297 Move X27, X1
	298 Move X26, X0
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X0, X26
	301 Call 0x3EB2AD0
	302 Move X8, [X0]
	303 Move [X31+8], X8
	304 Call 0x3EB2AE0
	305 Move X26, [X31+8]
	306 Move W24, W31
	307 Move W27, W31
	308 Move W29, 1
	309 Compare X28, 0
	310 JumpIfNotEqual {129}
	311 Move [X31+8], X31
	312 Compare X28, 0
	313 JumpIfEqual {337}
	314 Move X10, 0x21E9000
	315 Move X8, [X28]
	316 Move X10, [X10+3584]
	317 NotImplemented "Instruction LDRH not yet implemented."
	318 Move X1, [X10]
	319 Compare X9, 0
	320 JumpIfEqual {327}
	321 Move X10, [X8+176]
	322 Add X10, X10, 8
	323 NotImplemented "Instruction LDUR not yet implemented."
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Subtract X9, X9, 1
	326 Add X10, X10, 16
	327 Move X0, X28
	328 Move W2, W31
	329 Call 0x1C5D788
	330 NotImplemented "Instruction LDRSW not yet implemented."
	331 Add X8, X8, X9
	332 Add X0, X8, 312
	333 Move X8, [X0]
	334 Move X1, [X0+8]
	335 Move X0, X28
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X8, [X31+8]
	338 Compare X8, 0
	339 JumpIfEqual {348}
	340 Move X0, [X31+8]
	341 Call 0x1C17F18
	342 Move X27, X1
	343 Move X26, X0
	344 Compare X28, 0
	345 JumpIfNotEqual {314}
	346 Move X27, X1
	347 Move X26, X0
	348 Move W24, W31
	349 Move X27, X1
	350 Move X26, X0
	351 Move W24, W31
	352 Move X27, X1
	353 Move X26, X0
	354 Move X27, X1
	355 Move X26, X0
	356 Move X27, X1
	357 Move X26, X0
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X0, X26
	360 Call 0x3EB2AD0
	361 Move X28, [X0]
	362 Call 0x3EB2AE0
	363 Move X28, X31
	364 Compare X25, 0
	365 JumpIfEqual {389}
	366 Move X10, 0x21E9000
	367 Move X8, [X25]
	368 Move X10, [X10+3584]
	369 NotImplemented "Instruction LDRH not yet implemented."
	370 Move X1, [X10]
	371 Compare X9, 0
	372 JumpIfEqual {379}
	373 Move X10, [X8+176]
	374 Add X10, X10, 8
	375 NotImplemented "Instruction LDUR not yet implemented."
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Subtract X9, X9, 1
	378 Add X10, X10, 16
	379 Move X0, X25
	380 Move W2, W31
	381 Call 0x1C5D788
	382 NotImplemented "Instruction LDRSW not yet implemented."
	383 Add X8, X8, X9
	384 Add X0, X8, 312
	385 Move X8, [X0]
	386 Move X1, [X0+8]
	387 Move X0, X25
	388 NotImplemented "Instruction BLR not yet implemented."
	389 Compare X28, 0
	390 JumpIfNotEqual {432}
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X0, X26
	393 Call 0x3EB2AD0
	394 Move X25, [X0]
	395 Call 0x3EB2AE0
	396 Move X25, X31
	397 Compare X23, 0
	398 JumpIfEqual {422}
	399 Move X10, 0x21E9000
	400 Move X8, [X23]
	401 Move X10, [X10+3584]
	402 NotImplemented "Instruction LDRH not yet implemented."
	403 Move X1, [X10]
	404 Compare X9, 0
	405 JumpIfEqual {412}
	406 Move X10, [X8+176]
	407 Add X10, X10, 8
	408 NotImplemented "Instruction LDUR not yet implemented."
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Subtract X9, X9, 1
	411 Add X10, X10, 16
	412 Move X0, X23
	413 Move W2, W31
	414 Call 0x1C5D788
	415 NotImplemented "Instruction LDRSW not yet implemented."
	416 Add X8, X8, X9
	417 Add X0, X8, 312
	418 Move X8, [X0]
	419 Move X1, [X0+8]
	420 Move X0, X23
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Compare X25, 0
	423 JumpIfNotEqual {430}
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X0, X26
	426 Call 0x3EB2AD0
	427 Move X23, [X0]
	428 Call 0x3EB2AE0
	429 Move X23, X31
	430 Move X0, X25
	431 Call 0x1C17F18
	432 Move X0, X28
	433 Call 0x1C17F18
	434 Move X27, X1
	435 Move X26, X0
	436 Compare X25, 0
	437 JumpIfNotEqual {366}
	438 Move X27, X1
	439 Move X26, X0
	440 Compare X23, 0
	441 JumpIfNotEqual {399}
	442 Move X26, X0
	443 Compare X21, 0
	444 JumpIfEqual {468}
	445 Move X10, 0x21E9000
	446 Move X8, [X21]
	447 Move X10, [X10+3584]
	448 NotImplemented "Instruction LDRH not yet implemented."
	449 Move X1, [X10]
	450 Compare X9, 0
	451 JumpIfEqual {458}
	452 Move X10, [X8+176]
	453 Add X10, X10, 8
	454 NotImplemented "Instruction LDUR not yet implemented."
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Subtract X9, X9, 1
	457 Add X10, X10, 16
	458 Move X0, X21
	459 Move W2, W31
	460 Call 0x1C5D788
	461 NotImplemented "Instruction LDRSW not yet implemented."
	462 Add X8, X8, X9
	463 Add X0, X8, 312
	464 Move X8, [X0]
	465 Move X1, [X0+8]
	466 Move X0, X21
	467 NotImplemented "Instruction BLR not yet implemented."
	468 Compare X23, 0
	469 JumpIfNotEqual {472}
	470 Move X0, X26
	471 Call 0x1D2D690
	472 Move X0, X23
	473 Call 0x1C17F18
	474 Call 0x1991590

Method: System.Boolean ComputeHash(System.Byte* buffer, ref System.Int32 bufferLength, System.Int32 capacity)

Disassembly:
	0x01F0C01C BL 0x1C16CF4
	0x01F0C020 ADRP X0, 0x21F5000
	0x01F0C024 LDR X0, [X0 + 0x438]
	0x01F0C028 BL 0x1C16CF4
	0x01F0C02C ADRP X0, 0x21F5000
	0x01F0C030 LDR X0, [X0 + 0x440]
	0x01F0C034 BL 0x1C16CF4
	0x01F0C038 ADRP X0, 0x21F5000
	0x01F0C03C LDR X0, [X0 + 0x448]
	0x01F0C040 BL 0x1C16CF4
	0x01F0C044 ADRP X0, 0x21F5000
	0x01F0C048 LDR X0, [X0 + 0x450]
	0x01F0C04C BL 0x1C16CF4
	0x01F0C050 ADRP X0, 0x21F5000
	0x01F0C054 LDR X0, [X0 + 0x458]
	0x01F0C058 BL 0x1C16CF4
	0x01F0C05C ADRP X0, 0x21F5000
	0x01F0C060 LDR X0, [X0 + 0x460]
	0x01F0C064 BL 0x1C16CF4
	0x01F0C068 ADRP X0, 0x21F5000
	0x01F0C06C LDR X0, [X0 + 0x468]
	0x01F0C070 BL 0x1C16CF4
	0x01F0C074 ADRP X0, 0x21F5000
	0x01F0C078 LDR X0, [X0 + 0x470]
	0x01F0C07C BL 0x1C16CF4
	0x01F0C080 ADRP X0, 0x21F5000
	0x01F0C084 LDR X0, [X0 + 0x478]
	0x01F0C088 BL 0x1C16CF4
	0x01F0C08C ADRP X0, 0x21F5000
	0x01F0C090 LDR X0, [X0 + 0x480]
	0x01F0C094 BL 0x1C16CF4
	0x01F0C098 ADRP X0, 0x21F5000
	0x01F0C09C LDR X0, [X0 + 0x488]
	0x01F0C0A0 BL 0x1C16CF4
	0x01F0C0A4 ADRP X0, 0x21F5000
	0x01F0C0A8 LDR X0, [X0 + 0x490]
	0x01F0C0AC BL 0x1C16CF4
	0x01F0C0B0 ADRP X0, 0x21F5000
	0x01F0C0B4 LDR X0, [X0 + 0x498]
	0x01F0C0B8 BL 0x1C16CF4
	0x01F0C0BC ADRP X0, 0x21F5000
	0x01F0C0C0 LDR X0, [X0 + 0x4A0]
	0x01F0C0C4 BL 0x1C16CF4
	0x01F0C0C8 ADRP X0, 0x21F5000
	0x01F0C0CC LDR X0, [X0 + 0x4A8]
	0x01F0C0D0 BL 0x1C16CF4
	0x01F0C0D4 ADRP X0, 0x21F5000
	0x01F0C0D8 LDR X0, [X0 + 0x4B0]
	0x01F0C0DC BL 0x1C16CF4
	0x01F0C0E0 ADRP X0, 0x21F5000
	0x01F0C0E4 LDR X0, [X0 + 0x4B8]
	0x01F0C0E8 BL 0x1C16CF4
	0x01F0C0EC ADRP X0, 0x21F5000
	0x01F0C0F0 LDR X0, [X0 + 0x4C0]
	0x01F0C0F4 BL 0x1C16CF4
	0x01F0C0F8 ADRP X0, 0x21F5000
	0x01F0C0FC LDR X0, [X0 + 0x4C8]
	0x01F0C100 BL 0x1C16CF4
	0x01F0C104 ADRP X0, 0x21F5000
	0x01F0C108 LDR X0, [X0 + 0x4D0]
	0x01F0C10C BL 0x1C16CF4
	0x01F0C110 ADRP X0, 0x21F5000
	0x01F0C114 LDR X0, [X0 + 0x4D8]
	0x01F0C118 BL 0x1C16CF4
	0x01F0C11C ADRP X0, 0x21F5000
	0x01F0C120 LDR X0, [X0 + 0x4E0]
	0x01F0C124 BL 0x1C16CF4
	0x01F0C128 ADRP X0, 0x21F5000
	0x01F0C12C LDR X0, [X0 + 0x4E8]
	0x01F0C130 BL 0x1C16CF4
	0x01F0C134 ADRP X0, 0x21F5000
	0x01F0C138 LDR X0, [X0 + 0x4F0]
	0x01F0C13C BL 0x1C16CF4
	0x01F0C140 ADRP X0, 0x21F5000
	0x01F0C144 LDR X0, [X0 + 0x4F8]
	0x01F0C148 BL 0x1C16CF4
	0x01F0C14C ADRP X0, 0x21F5000
	0x01F0C150 LDR X0, [X0 + 0x500]
	0x01F0C154 BL 0x1C16CF4
	0x01F0C158 ADRP X0, 0x21F5000
	0x01F0C15C LDR X0, [X0 + 0x508]
	0x01F0C160 BL 0x1C16CF4
	0x01F0C164 ADRP X0, 0x21F5000
	0x01F0C168 LDR X0, [X0 + 0x510]
	0x01F0C16C BL 0x1C16CF4
	0x01F0C170 ADRP X0, 0x21F5000
	0x01F0C174 LDR X0, [X0 + 0x518]
	0x01F0C178 BL 0x1C16CF4
	0x01F0C17C ADRP X0, 0x21F5000
	0x01F0C180 LDR X0, [X0 + 0x520]
	0x01F0C184 BL 0x1C16CF4
	0x01F0C188 ADRP X0, 0x21F5000
	0x01F0C18C LDR X0, [X0 + 0x528]
	0x01F0C190 BL 0x1C16CF4
	0x01F0C194 ADRP X0, 0x21F5000
	0x01F0C198 LDR X0, [X0 + 0x530]
	0x01F0C19C BL 0x1C16CF4
	0x01F0C1A0 ADRP X0, 0x21F5000
	0x01F0C1A4 LDR X0, [X0 + 0x538]
	0x01F0C1A8 BL 0x1C16CF4
	0x01F0C1AC ADRP X0, 0x21F5000
	0x01F0C1B0 LDR X0, [X0 + 0x540]
	0x01F0C1B4 BL 0x1C16CF4
	0x01F0C1B8 ADRP X0, 0x21F5000
	0x01F0C1BC LDR X0, [X0 + 0x548]
	0x01F0C1C0 BL 0x1C16CF4
	0x01F0C1C4 ADRP X0, 0x21F5000
	0x01F0C1C8 LDR X0, [X0 + 0x550]
	0x01F0C1CC BL 0x1C16CF4
	0x01F0C1D0 ADRP X0, 0x21F5000
	0x01F0C1D4 LDR X0, [X0 + 0x558]
	0x01F0C1D8 BL 0x1C16CF4
	0x01F0C1DC ADRP X0, 0x21F5000
	0x01F0C1E0 LDR X0, [X0 + 0x560]
	0x01F0C1E4 BL 0x1C16CF4
	0x01F0C1E8 ADRP X0, 0x21F5000
	0x01F0C1EC LDR X0, [X0 + 0x568]
	0x01F0C1F0 BL 0x1C16CF4
	0x01F0C1F4 ADRP X0, 0x21F5000
	0x01F0C1F8 LDR X0, [X0 + 0x570]
	0x01F0C1FC BL 0x1C16CF4
	0x01F0C200 ADRP X0, 0x21F5000
	0x01F0C204 LDR X0, [X0 + 0x578]
	0x01F0C208 BL 0x1C16CF4
	0x01F0C20C ADRP X0, 0x21F5000
	0x01F0C210 LDR X0, [X0 + 0x580]
	0x01F0C214 BL 0x1C16CF4
	0x01F0C218 ADRP X0, 0x21F5000
	0x01F0C21C LDR X0, [X0 + 0x588]
	0x01F0C220 BL 0x1C16CF4
	0x01F0C224 ADRP X0, 0x21F5000
	0x01F0C228 LDR X0, [X0 + 0x590]
	0x01F0C22C BL 0x1C16CF4
	0x01F0C230 ADRP X0, 0x21F5000
	0x01F0C234 LDR X0, [X0 + 0x598]
	0x01F0C238 BL 0x1C16CF4
	0x01F0C23C ADRP X0, 0x21F5000
	0x01F0C240 LDR X0, [X0 + 0x5A0]
	0x01F0C244 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x24CE000
	008 Move W8, [X19+1685]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X22, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x21E8000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x21F5000
	020 Move X0, [X0+2936]
	021 Call 0x1C17CF4
	022 Move X0, 0x21F5000
	023 Move X0, [X0+3592]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+1685], W8
	027 Move X0, [X22+24]
	028 Compare X0, 0
	029 JumpIfEqual {77}
	030 Move X8, [X0]
	031 Move X19, 0x21F5000
	032 Move X9, [X8+600]
	033 Move X1, [X8+608]
	034 Move X19, [X19+3592]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X0, [X19]
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Call 0x1C17F10
	039 Move X1, X21
	040 Move X2, X23
	041 Move X3, X31
	042 Move X19, X0
	043 Call UnmanagedMemoryStream..ctor, X0, X1, X2
	044 Move X0, [X22+24]
	045 Compare X0, 0
	046 JumpIfEqual {102}
	047 Move X1, X19
	048 Move X2, X31
	049 Call HashAlgorithm.ComputeHash, X0, X1
	050 Move X1, X0
	051 Move X8, 0x21F5000
	052 Move X8, [X8+2936]
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Move X2, [X8]
	055 Add X0, X9, X21
	056 Call 0x2222920, X0, X1
	057 Move X21, X31
	058 Move W22, 3
	059 Compare X19, 0
	060 JumpIfEqual {85}
	061 Move X10, 0x21E8000
	062 Move X8, [X19]
	063 Move X10, [X10+3584]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X19
	075 Move W2, W31
	076 Call 0x1C5D788
	077 Move W8, W31
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Add X8, X8, X9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X19
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X21, 0
	086 JumpIfNotEqual {103}
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Compare W22, 0
	089 JumpIfNotEqual {94}
	090 Move W8, [X20]
	091 Add W8, W8, 32
	092 Move [X20], W8
	093 Move W8, 1
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 And W0, W8, 1
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return X0
	102 Call 0x1C17F20
	103 Move X0, X21
	104 Call 0x1C17F18
	105 Move X22, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, X22
	108 Call 0x3EB2AD0
	109 Move X21, [X0]
	110 Call 0x3EB2AE0
	111 Move W22, W31
	112 Compare X19, 0
	113 JumpIfNotEqual {61}
	114 Move X21, X31
	115 Move X22, X0
	116 Compare X19, 0
	117 JumpIfEqual {141}
	118 Move X10, 0x21E8000
	119 Move X8, [X19]
	120 Move X10, [X10+3584]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Move X1, [X10]
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move X0, X19
	132 Move W2, W31
	133 Call 0x1C5D788
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add X8, X8, X9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X19
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Compare X21, 0
	142 JumpIfNotEqual {145}
	143 Move X0, X22
	144 Call 0x1D2D690
	145 Move X0, X21
	146 Call 0x1C17F18
	147 Call 0x1991590

Method: System.Boolean VerifyHash(System.Byte* buffer, ref System.Int32 bufferLength, System.Int32 capacity)

Disassembly:
	0x01F0C248 ADRP X0, 0x21F5000
	0x01F0C24C LDR X0, [X0 + 0x5A8]
	0x01F0C250 BL 0x1C16CF4
	0x01F0C254 ADRP X0, 0x21F5000
	0x01F0C258 LDR X0, [X0 + 0x5B0]
	0x01F0C25C BL 0x1C16CF4
	0x01F0C260 ADRP X0, 0x21F5000
	0x01F0C264 LDR X0, [X0 + 0x5B8]
	0x01F0C268 BL 0x1C16CF4
	0x01F0C26C ADRP X0, 0x21F5000
	0x01F0C270 LDR X0, [X0 + 0x5C0]
	0x01F0C274 BL 0x1C16CF4
	0x01F0C278 ADRP X0, 0x21F5000
	0x01F0C27C LDR X0, [X0 + 0x5C8]
	0x01F0C280 BL 0x1C16CF4
	0x01F0C284 ADRP X0, 0x21F5000
	0x01F0C288 LDR X0, [X0 + 0x5D0]
	0x01F0C28C BL 0x1C16CF4
	0x01F0C290 ADRP X0, 0x21F5000
	0x01F0C294 LDR X0, [X0 + 0x5D8]
	0x01F0C298 BL 0x1C16CF4
	0x01F0C29C ADRP X0, 0x21F5000
	0x01F0C2A0 LDR X0, [X0 + 0x5E0]
	0x01F0C2A4 BL 0x1C16CF4
	0x01F0C2A8 ADRP X0, 0x21F5000
	0x01F0C2AC LDR X0, [X0 + 0x5E8]
	0x01F0C2B0 BL 0x1C16CF4
	0x01F0C2B4 ADRP X0, 0x21F5000
	0x01F0C2B8 LDR X0, [X0 + 0x5F0]
	0x01F0C2BC BL 0x1C16CF4
	0x01F0C2C0 ADRP X0, 0x21F5000
	0x01F0C2C4 LDR X0, [X0 + 0x5F8]
	0x01F0C2C8 BL 0x1C16CF4
	0x01F0C2CC ADRP X0, 0x21F5000
	0x01F0C2D0 LDR X0, [X0 + 0x600]
	0x01F0C2D4 BL 0x1C16CF4
	0x01F0C2D8 ADRP X0, 0x21F5000
	0x01F0C2DC LDR X0, [X0 + 0x608]
	0x01F0C2E0 BL 0x1C16CF4
	0x01F0C2E4 ADRP X0, 0x21F5000
	0x01F0C2E8 LDR X0, [X0 + 0x610]
	0x01F0C2EC BL 0x1C16CF4
	0x01F0C2F0 ADRP X0, 0x21F5000
	0x01F0C2F4 LDR X0, [X0 + 0x618]
	0x01F0C2F8 BL 0x1C16CF4
	0x01F0C2FC ADRP X0, 0x21F5000
	0x01F0C300 LDR X0, [X0 + 0x620]
	0x01F0C304 BL 0x1C16CF4
	0x01F0C308 ADRP X0, 0x21F5000
	0x01F0C30C LDR X0, [X0 + 0x628]
	0x01F0C310 BL 0x1C16CF4
	0x01F0C314 ADRP X0, 0x21F5000
	0x01F0C318 LDR X0, [X0 + 0x630]
	0x01F0C31C BL 0x1C16CF4
	0x01F0C320 ADRP X0, 0x21F5000
	0x01F0C324 LDR X0, [X0 + 0x638]
	0x01F0C328 BL 0x1C16CF4
	0x01F0C32C ADRP X0, 0x21F5000
	0x01F0C330 LDR X0, [X0 + 0x640]
	0x01F0C334 BL 0x1C16CF4
	0x01F0C338 ADRP X0, 0x21F5000
	0x01F0C33C LDR X0, [X0 + 0x648]
	0x01F0C340 BL 0x1C16CF4
	0x01F0C344 ADRP X0, 0x21F5000
	0x01F0C348 LDR X0, [X0 + 0x650]
	0x01F0C34C BL 0x1C16CF4
	0x01F0C350 ADRP X0, 0x21F5000
	0x01F0C354 LDR X0, [X0 + 0x658]
	0x01F0C358 BL 0x1C16CF4
	0x01F0C35C ADRP X0, 0x21F5000
	0x01F0C360 LDR X0, [X0 + 0x660]
	0x01F0C364 BL 0x1C16CF4
	0x01F0C368 ADRP X0, 0x21EE000
	0x01F0C36C LDR X0, [X0 + 0xD90]
	0x01F0C370 BL 0x1C16CF4
	0x01F0C374 ADRP X0, 0x21F5000
	0x01F0C378 LDR X0, [X0 + 0x668]
	0x01F0C37C BL 0x1C16CF4
	0x01F0C380 ADRP X0, 0x21F5000
	0x01F0C384 LDR X0, [X0 + 0x670]
	0x01F0C388 BL 0x1C16CF4
	0x01F0C38C ADRP X0, 0x21F5000
	0x01F0C390 LDR X0, [X0 + 0x678]
	0x01F0C394 BL 0x1C16CF4
	0x01F0C398 ADRP X0, 0x21F5000
	0x01F0C39C LDR X0, [X0 + 0x680]
	0x01F0C3A0 BL 0x1C16CF4
	0x01F0C3A4 ADRP X0, 0x21F5000
	0x01F0C3A8 LDR X0, [X0 + 0x688]
	0x01F0C3AC BL 0x1C16CF4
	0x01F0C3B0 ADRP X0, 0x21F5000
	0x01F0C3B4 LDR X0, [X0 + 0x690]
	0x01F0C3B8 BL 0x1C16CF4
	0x01F0C3BC ADRP X0, 0x21F5000
	0x01F0C3C0 LDR X0, [X0 + 0x698]
	0x01F0C3C4 BL 0x1C16CF4
	0x01F0C3C8 ADRP X0, 0x21F5000
	0x01F0C3CC LDR X0, [X0 + 0x6A0]
	0x01F0C3D0 BL 0x1C16CF4
	0x01F0C3D4 ADRP X0, 0x21F5000
	0x01F0C3D8 LDR X0, [X0 + 0x6A8]
	0x01F0C3DC BL 0x1C16CF4
	0x01F0C3E0 ADRP X0, 0x21F5000
	0x01F0C3E4 LDR X0, [X0 + 0x6B0]
	0x01F0C3E8 BL 0x1C16CF4
	0x01F0C3EC ADRP X0, 0x21F5000
	0x01F0C3F0 LDR X0, [X0 + 0x6B8]
	0x01F0C3F4 BL 0x1C16CF4
	0x01F0C3F8 ADRP X0, 0x21F5000
	0x01F0C3FC LDR X0, [X0 + 0x6C0]
	0x01F0C400 BL 0x1C16CF4
	0x01F0C404 ADRP X0, 0x21F5000
	0x01F0C408 LDR X0, [X0 + 0x6C8]
	0x01F0C40C BL 0x1C16CF4
	0x01F0C410 ADRP X0, 0x21F5000
	0x01F0C414 LDR X0, [X0 + 0x6D0]
	0x01F0C418 BL 0x1C16CF4
	0x01F0C41C ADRP X0, 0x21F5000
	0x01F0C420 LDR X0, [X0 + 0x6D8]
	0x01F0C424 BL 0x1C16CF4
	0x01F0C428 ADRP X0, 0x21F5000
	0x01F0C42C LDR X0, [X0 + 0x6E0]
	0x01F0C430 BL 0x1C16CF4
	0x01F0C434 ADRP X0, 0x21F5000
	0x01F0C438 LDR X0, [X0 + 0x6E8]
	0x01F0C43C BL 0x1C16CF4
	0x01F0C440 ADRP X0, 0x21F5000
	0x01F0C444 LDR X0, [X0 + 0x6F0]
	0x01F0C448 BL 0x1C16CF4
	0x01F0C44C ADRP X0, 0x21F5000
	0x01F0C450 LDR X0, [X0 + 0x6F8]
	0x01F0C454 BL 0x1C16CF4
	0x01F0C458 ADRP X0, 0x21F5000
	0x01F0C45C LDR X0, [X0 + 0x700]
	0x01F0C460 BL 0x1C16CF4
	0x01F0C464 ADRP X0, 0x21F5000
	0x01F0C468 LDR X0, [X0 + 0x708]
	0x01F0C46C BL 0x1C16CF4
	0x01F0C470 ADRP X0, 0x21F5000
	0x01F0C474 LDR X0, [X0 + 0x710]
	0x01F0C478 BL 0x1C16CF4
	0x01F0C47C ADRP X0, 0x21F5000
	0x01F0C480 LDR X0, [X0 + 0x718]
	0x01F0C484 BL 0x1C16CF4
	0x01F0C488 ADRP X0, 0x21F5000
	0x01F0C48C LDR X0, [X0 + 0x720]
	0x01F0C490 BL 0x1C16CF4
	0x01F0C494 ADRP X0, 0x21F5000
	0x01F0C498 LDR X0, [X0 + 0x728]
	0x01F0C49C BL 0x1C16CF4
	0x01F0C4A0 ADRP X0, 0x21F5000
	0x01F0C4A4 LDR X0, [X0 + 0x730]
	0x01F0C4A8 BL 0x1C16CF4
	0x01F0C4AC ADRP X0, 0x21F5000
	0x01F0C4B0 LDR X0, [X0 + 0x738]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x24CE000
	008 Move W8, [X19+1686]
	009 Move X21, X2
	010 Move X20, X1
	011 Move X22, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x21E8000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x21F5000
	020 Move X0, [X0+3592]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+1686], W8
	024 Move X0, [X22+24]
	025 Compare X0, 0
	026 JumpIfEqual {57}
	027 Move X8, [X0]
	028 Move X19, 0x21F5000
	029 Move X9, [X8+600]
	030 Move X1, [X8+608]
	031 Move X19, [X19+3592]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X0, [X19]
	034 Move W23, [X21]
	035 Call 0x1C17F10
	036 Subtract W8, W23, 32
	037 Move X2, W8
	038 Move X1, X20
	039 Move X3, X31
	040 Move X19, X0
	041 Call UnmanagedMemoryStream..ctor, X0, X1, X2
	042 Move X0, [X22+24]
	043 Compare X0, 0
	044 JumpIfEqual {101}
	045 Move X1, X19
	046 Move X2, X31
	047 Call HashAlgorithm.ComputeHash, X0, X1
	048 Move W8, [X21]
	049 Subtract W8, W8, 32
	050 Move [X21], W8
	051 Compare X0, 0
	052 JumpIfEqual {58}
	053 Move W9, [X0+24]
	054 Add X10, X0, 32
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Move W21, W31
	058 Move X1, X31
	059 Add X0, X20, W8
	060 Move W2, 32
	061 Move X3, X31
	062 Call Native.MemCmp, X0, X1, X2
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, X31
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Compare X19, 0
	067 JumpIfEqual {91}
	068 Move X10, 0x21E8000
	069 Move X8, [X19]
	070 Move X10, [X10+3584]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X19
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Compare X20, 0
	092 JumpIfNotEqual {102}
	093 Move W0, W21
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 Return X0
	101 Call 0x1C17F20
	102 Move X0, X20
	103 Call 0x1C17F18
	104 Move X21, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W22, 1
	107 Move X0, X21
	108 Call 0x3EB2AD0
	109 Move X20, [X0]
	110 Call 0x3EB2AE0
	111 Compare X20, 0
	112 JumpIfEqual {127}
	113 Move X0, X20
	114 Call 0x1C17F18
	115 Compare X20, 0
	116 JumpIfNotEqual {118}
	117 Move X21, X0
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Move X21, X0
	121 Move W22, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X21
	124 Call 0x3EB2AD0
	125 Move X20, [X0]
	126 Call 0x3EB2AE0
	127 Move W21, W31
	128 Compare X19, 0
	129 JumpIfNotEqual {68}
	130 Move X20, X31
	131 Move X21, X0
	132 Compare X19, 0
	133 JumpIfEqual {157}
	134 Move X10, 0x21E8000
	135 Move X8, [X19]
	136 Move X10, [X10+3584]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X10]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X19
	148 Move W2, W31
	149 Call 0x1C5D788
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X1, [X0+8]
	155 Move X0, X19
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Compare X20, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X21
	160 Call 0x1D2D690
	161 Move X0, X20
	162 Call 0x1C17F18
	163 Call 0x1991590

Method: System.Security.Cryptography.Aes BuildAesProvider(System.Byte[] key)

Disassembly:
	0x01F0AECC LDR X1, [X10]
	0x01F0AED0 CBZ X9, 0x1F0AEF4
	0x01F0AED4 LDR X10, [X8 + 0xB0]
	0x01F0AED8 ADD X10, X10, 0x8
	0x01F0AEDC LDUR X11, [X10 - 0x8]
	0x01F0AEE0 CMP X11, X1
	0x01F0AEE4 B.EQ 0x1F0AF04
	0x01F0AEE8 SUBS X9, X9, 0x1
	0x01F0AEEC ADD X10, X10, 0x10
	0x01F0AEF0 B.NE 0x1F0AEDC
	0x01F0AEF4 MOV X0, X23
	0x01F0AEF8 MOV W2, W31
	0x01F0AEFC BL 0x1C5C788
	0x01F0AF00 B 0x1F0AF10
	0x01F0AF04 LDRSW X9, [X10]
	0x01F0AF08 ADD X8, X8, X9, 0x4, LSL
	0x01F0AF0C ADD X0, X8, 0x138
	0x01F0AF10 LDP X8, X1, [X0]
	0x01F0AF14 MOV X0, X23
	0x01F0AF18 BLR X8
	0x01F0AF1C CBNZ X25, 0x1F0AF44
	0x01F0AF20 CMP W27, 0x1
	0x01F0AF24 B.NE 0x1F0AF3C
	0x01F0AF28 MOV X0, X26
	0x01F0AF2C BL 0x3EB1AD0
	0x01F0AF30 LDR X23, [X0]
	0x01F0AF34 BL 0x3EB1AE0
	0x01F0AF38 B 0x1F0AC10
	0x01F0AF3C MOV X23, X31
	0x01F0AF40 B 0x1F0AF78
	0x01F0AF44 MOV X0, X25
	0x01F0AF48 BL 0x1C16F18
	0x01F0AF4C MOV X0, X28
	0x01F0AF50 BL 0x1C16F18
	0x01F0AF54 MOV X27, X1
	0x01F0AF58 MOV X26, X0
	0x01F0AF5C CBNZ X25, 0x1F0AE34
	0x01F0AF60 B 0x1F0AE94
	0x01F0AF64 MOV X27, X1
	0x01F0AF68 MOV X26, X0
	0x01F0AF6C CBNZ X23, 0x1F0AEBC
	0x01F0AF70 B 0x1F0AF1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x24D0000
	006 Move X21, 0x21F7000
	007 Move W8, [X20+1687]
	008 Move X21, [X21+3568]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x21F7000
	015 Move X0, [X0+3568]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1687], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call Aes.Create
	026 Compare X0, 0
	027 JumpIfEqual {52}
	028 Move X8, [X0]
	029 Move X1, X19
	030 Move X20, X0
	031 Move X9, [X8+504]
	032 Move X2, [X8+512]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X20]
	035 Move W1, 1
	036 Move X0, X20
	037 Move X9, [X8+584]
	038 Move X2, [X8+592]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X20]
	041 Move W1, 2
	042 Move X0, X20
	043 Move X9, [X8+616]
	044 Move X2, [X8+624]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X0, X20
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Security.Cryptography.HMACSHA256 BuildHMACSHA256(System.Byte[] key)

Disassembly:
	0x01F0AF74 MOV X26, X0
	0x01F0AF78 CBZ X21, 0x1F0AFDC
	0x01F0AF7C ADRP X10, 0x21E9000
	0x01F0AF80 LDR X8, [X21]
	0x01F0AF84 LDR X10, [X10 + 0xE00]
	0x01F0AF88 LDRH W9, [X8 + 0x12E]
	0x01F0AF8C LDR X1, [X10]
	0x01F0AF90 CBZ X9, 0x1F0AFB4
	0x01F0AF94 LDR X10, [X8 + 0xB0]
	0x01F0AF98 ADD X10, X10, 0x8
	0x01F0AF9C LDUR X11, [X10 - 0x8]
	0x01F0AFA0 CMP X11, X1
	0x01F0AFA4 B.EQ 0x1F0AFC4
	0x01F0AFA8 SUBS X9, X9, 0x1
	0x01F0AFAC ADD X10, X10, 0x10
	0x01F0AFB0 B.NE 0x1F0AF9C
	0x01F0AFB4 MOV X0, X21
	0x01F0AFB8 MOV W2, W31
	0x01F0AFBC BL 0x1C5C788
	0x01F0AFC0 B 0x1F0AFD0
	0x01F0AFC4 LDRSW X9, [X10]
	0x01F0AFC8 ADD X8, X8, X9, 0x4, LSL
	0x01F0AFCC ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x24D0000
	006 Move X21, 0x21F7000
	007 Move W8, [X20+1688]
	008 Move X21, [X21+3576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x21F7000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1688], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call HMACSHA256..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Byte[] GetBufferEncrypt()

Disassembly:
	0x01F0B8AC ADRP X0, 0x21F5000
	0x01F0B8B0 LDR X0, [X0 + 0xF50]
	0x01F0B8B4 BL 0x1C16CF4
	0x01F0B8B8 ADRP X0, 0x21F5000
	0x01F0B8BC LDR X0, [X0 + 0xF58]
	0x01F0B8C0 BL 0x1C16CF4
	0x01F0B8C4 ADRP X0, 0x21F5000
	0x01F0B8C8 LDR X0, [X0 + 0xF60]
	0x01F0B8CC BL 0x1C16CF4
	0x01F0B8D0 ADRP X0, 0x21F5000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Move W2, 4096
	006 Move W1, W31
	007 Move X3, X31
	008 Call Array.Clear, X0, X1, X2
	009 Move X0, [X19+40]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Byte[] GetBufferDecrypt()

Disassembly:
	0x01F0BFF4 LDR X0, [X0 + 0x418]
	0x01F0BFF8 BL 0x1C16CF4
	0x01F0BFFC ADRP X0, 0x21F6000
	0x01F0C000 LDR X0, [X0 + 0x420]
	0x01F0C004 BL 0x1C16CF4
	0x01F0C008 ADRP X0, 0x21F5000
	0x01F0C00C LDR X0, [X0 + 0x428]
	0x01F0C010 BL 0x1C16CF4
	0x01F0C014 ADRP X0, 0x21F5000
	0x01F0C018 LDR X0, [X0 + 0x430]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+48]
	005 Move W2, 4096
	006 Move W1, W31
	007 Move X3, X31
	008 Call Array.Clear, X0, X1, X2
	009 Move X0, [X19+48]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Void Dispose()

Disassembly:
	0x01F0C4B4 BL 0x1C16CF4
	0x01F0C4B8 ADRP X0, 0x21F5000
	0x01F0C4BC LDR X0, [X0 + 0x740]
	0x01F0C4C0 BL 0x1C16CF4
	0x01F0C4C4 ADRP X0, 0x21F5000
	0x01F0C4C8 LDR X0, [X0 + 0x748]
	0x01F0C4CC BL 0x1C16CF4
	0x01F0C4D0 ADRP X0, 0x21F5000
	0x01F0C4D4 LDR X0, [X0 + 0x750]
	0x01F0C4D8 BL 0x1C16CF4
	0x01F0C4DC ADRP X0, 0x21F5000
	0x01F0C4E0 LDR X0, [X0 + 0x758]
	0x01F0C4E4 BL 0x1C16CF4
	0x01F0C4E8 ADRP X0, 0x21F5000
	0x01F0C4EC LDR X0, [X0 + 0x760]
	0x01F0C4F0 BL 0x1C16CF4
	0x01F0C4F4 ADRP X0, 0x21F5000
	0x01F0C4F8 LDR X0, [X0 + 0x768]
	0x01F0C4FC BL 0x1C16CF4
	0x01F0C500 ADRP X0, 0x21F5000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {9}
	007 Move X1, X31
	008 Call SymmetricAlgorithm.Dispose, X0
	009 Move X0, [X19+24]
	010 Move [X19+16], X31
	011 Compare X0, 0
	012 JumpIfEqual {15}
	013 Move X1, X31
	014 Call HashAlgorithm.Dispose, X0
	015 Add X19, X19, 32
	016 Move X0, [X19]
	017 Move [X19-8], X31
	018 Compare X0, 0
	019 JumpIfEqual {22}
	020 Move X1, X31
	021 Call RandomNumberGenerator.Dispose, X0
	022 Move [X19], X31
	023 Move [X19+8], X31
	024 Move [X19+16], X31
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return 

Method: System.Void .ctor()

Disassembly:
	0x01F0C504 LDR X0, [X0 + 0x770]
	0x01F0C508 BL 0x1C16CF4
	0x01F0C50C ADRP X0, 0x21F5000
	0x01F0C510 LDR X0, [X0 + 0x778]
	0x01F0C514 BL 0x1C16CF4
	0x01F0C518 ADRP X0, 0x21F5000
	0x01F0C51C LDR X0, [X0 + 0x780]
	0x01F0C520 BL 0x1C16CF4
	0x01F0C524 ADRP X0, 0x21F5000
	0x01F0C528 LDR X0, [X0 + 0x788]
	0x01F0C52C BL 0x1C16CF4
	0x01F0C530 ADRP X0, 0x21F5000
	0x01F0C534 LDR X0, [X0 + 0x790]
	0x01F0C538 BL 0x1C16CF4
	0x01F0C53C ADRP X0, 0x21F5000
	0x01F0C540 LDR X0, [X0 + 0x798]
	0x01F0C544 BL 0x1C16CF4
	0x01F0C548 ADRP X0, 0x21F5000
	0x01F0C54C LDR X0, [X0 + 0x7A0]
	0x01F0C550 BL 0x1C16CF4
	0x01F0C554 ADRP X0, 0x21F5000
	0x01F0C558 LDR X0, [X0 + 0x7A8]
	0x01F0C55C BL 0x1C16CF4
	0x01F0C560 ADRP X0, 0x21F5000
	0x01F0C564 LDR X0, [X0 + 0x7B0]
	0x01F0C568 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24CE000
	006 Move X20, 0x21E8000
	007 Move W8, [X21+1689]
	008 Move X20, [X20+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x21E8000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1689], W8
	019 Move X0, [X20]
	020 Move W1, 16
	021 Call 0x1C17D6C
	022 Move [X19+64], X0
	023 Move X0, [X20]
	024 Move W1, 16
	025 Call 0x1C17D6C
	026 Move [X19+72], X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Object..ctor, X0
	034 Return 

