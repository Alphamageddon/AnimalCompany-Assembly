Type: Fusion.Encryption.EncryptionManager`2

Method: System.Void Dispose()

Disassembly:
	0x02BA79AC MOV X5, X31
	0x02BA79B0 BL 0x1C17728
	0x02BA79B4 B 0x2BA7928
	0x02BA79B8 MOV X23, X31
	0x02BA79BC LDR X8, [X19 + 0x20]
	0x02BA79C0 LDR X8, [X8 + 0xC0]
	0x02BA79C4 LDR X0, [X8 + 0x28]
	0x02BA79C8 LDRB W9, [X0 + 0x135]
	0x02BA79CC TBNZ X9, 0x0, 0x2BA79DC
	0x02BA79D0 BL 0x1C5C684
	0x02BA79D4 LDR X8, [X19 + 0x20]
	0x02BA79D8 LDR X8, [X8 + 0xC0]
	0x02BA79DC LDR X1, [X8 + 0x58]
	0x02BA79E0 MOV X2, X20
	0x02BA79E4 MOV X3, X22
	0x02BA79E8 MOV X4, X31
	0x02BA79EC MOV X5, X31
	0x02BA79F0 BL 0x1C17728
	0x02BA79F4 CBNZ X23, 0x2BA7A4C
	0x02BA79F8 LDR X0, [X21 + 0x10]
	0x02BA79FC CBZ X0, 0x2BA7A48
	0x02BA7A00 LDR X8, [X19 + 0x20]
	0x02BA7A04 LDR X8, [X8 + 0xC0]
	0x02BA7A08 LDR X1, [X8 + 0x60]
	0x02BA7A0C LDR X8, [X1]
	0x02BA7A10 BLR X8
	0x02BA7A14 LDUR X8, [X29 - 0x18]
	0x02BA7A18 LDR X8, [X8 + 0x28]
	0x02BA7A1C LDUR X9, [X29 - 0x8]
	0x02BA7A20 CMP X8, X9
	0x02BA7A24 B.NE 0x2BA7A54
	0x02BA7A28 ADD X31, X29, 0x0
	0x02BA7A2C LDP X20, X19, [X31 + 0x50]
	0x02BA7A30 LDP X22, X21, [X31 + 0x40]
	0x02BA7A34 LDP X24, X23, [X31 + 0x30]
	0x02BA7A38 LDP X26, X25, [X31 + 0x20]
	0x02BA7A3C LDP X28, X27, [X31 + 0x10]
	0x02BA7A40 LDP X29, X30, [X31], #0x60
	0x02BA7A44 RET
	0x02BA7A48 BL 0x1C16F20
	0x02BA7A4C MOV X0, X23
	0x02BA7A50 BL 0x1C16F18
	0x02BA7A54 BL 0x3EB1B20
	0x02BA7A58 B 0x2BA7A5C
	0x02BA7A5C MOV X24, X0
	0x02BA7A60 CMP W1, 0x1
	0x02BA7A64 B.NE 0x2BA7A7C
	0x02BA7A68 MOV X0, X24
	0x02BA7A6C BL 0x3EB1AD0
	0x02BA7A70 LDR X23, [X0]
	0x02BA7A74 BL 0x3EB1AE0
	0x02BA7A78 B 0x2BA79BC
	0x02BA7A7C MOV X23, X31
	0x02BA7A80 B 0x2BA7A88
	0x02BA7A84 MOV X24, X0
	0x02BA7A88 LDR X8, [X19 + 0x20]
	0x02BA7A8C LDR X8, [X8 + 0xC0]
	0x02BA7A90 LDR X0, [X8 + 0x28]
	0x02BA7A94 LDRB W9, [X0 + 0x135]
	0x02BA7A98 TBNZ X9, 0x0, 0x2BA7AA8
	0x02BA7A9C BL 0x1C5C684
	0x02BA7AA0 LDR X8, [X19 + 0x20]
	0x02BA7AA4 LDR X8, [X8 + 0xC0]
	0x02BA7AA8 LDR X1, [X8 + 0x58]
	0x02BA7AAC MOV X2, X20
	0x02BA7AB0 MOV X3, X22
	0x02BA7AB4 MOV X4, X31
	0x02BA7AB8 MOV X5, X31
	0x02BA7ABC BL 0x1C17728
	0x02BA7AC0 CBNZ X23, 0x2BA7ACC
	0x02BA7AC4 MOV X0, X24
	0x02BA7AC8 BL 0x1D2C690
	0x02BA7ACC MOV X0, X23
	0x02BA7AD0 BL 0x1C16F18
	0x02BA7AD4 BL 0x1990590
	0x02BA7AD8 STP X29, X30, [X31 - 0x60]!
	0x02BA7ADC STP X28, X27, [X31 + 0x10]
	0x02BA7AE0 STP X26, X25, [X31 + 0x20]
	0x02BA7AE4 STP X24, X23, [X31 + 0x30]
	0x02BA7AE8 STP X22, X21, [X31 + 0x40]
	0x02BA7AEC STP X20, X19, [X31 + 0x50]
	0x02BA7AF0 ADD X29, X31, 0x0
	0x02BA7AF4 SUB X31, X31, 0x40
	0x02BA7AF8 MRS X8, 0xC000
	0x02BA7AFC STP X2, X8, [X29 - 0x38]
	0x02BA7B00 LDR X8, [X8 + 0x28]
	0x02BA7B04 MOV X22, X3
	0x02BA7B08 MOV X19, X1
	0x02BA7B0C MOV X27, X0
	0x02BA7B10 STUR X8, [X29 - 0x8]
	0x02BA7B14 STUR X1, [X29 - 0x28]
	0x02BA7B18 LDR X26, [X3 + 0x20]
	0x02BA7B1C LDR X9, [X26 + 0xC0]
	0x02BA7B20 LDR X8, [X9 + 0x40]
	0x02BA7B24 LDR X9, [X9 + 0x68]
	0x02BA7B28 LDR W20, [X8 + 0xFC]
	0x02BA7B2C LDRB W10, [X8 + 0x135]
	0x02BA7B30 LDR W25, [X9 + 0xFC]
	0x02BA7B34 TBNZ X10, 0x0, 0x2BA7B4C
	0x02BA7B38 MOV X0, X8
	0x02BA7B3C BL 0x1C5C684
	0x02BA7B40 LDR W8, [X0 + 0xFC]
	0x02BA7B44 LDR X26, [X22 + 0x20]
	0x02BA7B48 B 0x2BA7B50
	0x02BA7B4C MOV W8, W20
	0x02BA7B50 ADD W8, W8, 0x10
	0x02BA7B54 ADD X8, X8, 0xF
	0x02BA7B58 ADD X9, X31, 0x0
	0x02BA7B5C AND X8, X8, 0x1FFFFFFFF
	0x02BA7B60 SUB X8, X9, X8
	0x02BA7B64 STUR X8, [X29 - 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x1835000
	008 Move W8, [X21+1491]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x154D000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1491], W8
	020 Move [X31+32], X31
	021 Move [X31+40], X31
	022 Move [X31+48], X31
	023 Move X0, [X20+16]
	024 Compare X0, 0
	025 JumpIfEqual {99}
	026 Move X8, [X19+32]
	027 Move X8, [X8+192]
	028 Move X1, [X8+16]
	029 Call Dictionary`2<NetAddress, Object>.get_Values, X0
	030 Compare X0, 0
	031 JumpIfEqual {99}
	032 Move X8, [X19+32]
	033 Move X22, 0x154D000
	034 Move X8, [X8+192]
	035 Move X1, [X8+32]
	036 Move X22, [X22+3584]
	037 Add X8, X31, 8
	038 Call ValueCollection<NetAddress, Object>.GetEnumerator, X0
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move X8, [X31+24]
	041 Move [X31+2], V0
	042 Move [X31+48], X8
	043 Move X8, [X19+32]
	044 Move X8, [X8+192]
	045 Move X1, [X8+80]
	046 Add X0, X31, 32
	047 Call Enumerator<NetAddress, Object>.MoveNext, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {76}
	052 Move X21, [X31+48]
	053 Compare X21, 0
	054 JumpIfEqual {98}
	055 Move X8, [X21]
	056 Move X1, [X22]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X21
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X21
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X21, X31
	077 Move X8, [X19+32]
	078 Add X0, X31, 32
	079 Move X8, [X8+192]
	080 Move X1, [X8+88]
	081 Call Enumerator<NetAddress, Object>.Dispose, X0
	082 Compare X21, 0
	083 JumpIfNotEqual {100}
	084 Move X0, [X20+16]
	085 Compare X0, 0
	086 JumpIfEqual {99}
	087 Move X8, [X19+32]
	088 Move X8, [X8+192]
	089 Move X1, [X8+96]
	090 Call Dictionary`2<NetAddress, Object>.Clear, X0
	091 Move X20, [X31+96]
	092 Move X19, [X31+104]
	093 Move X22, [X31+80]
	094 Move X21, [X31+88]
	095 Move X30, [X31+64]
	096 Add X31, X31, 112
	097 Return 
	098 Call 0x1C17F20
	099 Call 0x1C17F20
	100 Move X0, X21
	101 Call 0x1C17F18
	102 Move X22, X0
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X22
	105 Call 0x3EB2AD0
	106 Move X21, [X0]
	107 Call 0x3EB2AE0
	108 Move X21, X31
	109 Move X22, X0
	110 Move X8, [X19+32]
	111 Move X8, [X8+192]
	112 Move X1, [X8+88]
	113 Add X0, X31, 32
	114 Call Enumerator<NetAddress, Object>.Dispose, X0
	115 Compare X21, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X22
	118 Call 0x1D2D690
	119 Move X0, X21
	120 Call 0x1C17F18
	121 Call 0x1991590

Method: System.Void RegisterEncryptionKey(THandler handle, System.Byte[] key)

Disassembly:
	0x02BA7B68 ADD X31, X8, 0x0
	0x02BA7B6C ADD X9, X25, 0xF
	0x02BA7B70 ADD X8, X31, 0x0
	0x02BA7B74 AND X9, X9, 0x1FFFFFFFF
	0x02BA7B78 SUB X21, X8, X9
	0x02BA7B7C ADD X31, X21, 0x0
	0x02BA7B80 ADD X9, X20, 0xF
	0x02BA7B84 ADD X8, X31, 0x0
	0x02BA7B88 AND X9, X9, 0x1FFFFFFFF
	0x02BA7B8C SUB X24, X8, X9
	0x02BA7B90 ADD X31, X24, 0x0
	0x02BA7B94 ADD X8, X31, 0x0
	0x02BA7B98 SUB X23, X8, X9
	0x02BA7B9C ADD X31, X23, 0x0
	0x02BA7BA0 ADD X8, X31, 0x0
	0x02BA7BA4 SUB X28, X8, X9
	0x02BA7BA8 ADD X31, X28, 0x0
	0x02BA7BAC MOV X0, X28
	0x02BA7BB0 MOV W1, W31
	0x02BA7BB4 MOV X2, X20
	0x02BA7BB8 BL 0x3EB1B10
	0x02BA7BBC LDR X8, [X26 + 0xC0]
	0x02BA7BC0 MOV X0, X21
	0x02BA7BC4 MOV X2, X25
	0x02BA7BC8 LDR X8, [X8 + 0x68]
	0x02BA7BCC LDR W8, [X8 + 0x28]
	0x02BA7BD0 CMP W8, 0x0
	0x02BA7BD4 SUB X8, X29, 0x28
	0x02BA7BD8 CSEL X1, X19, X8, LT
	0x02BA7BDC BL 0x3EB1AC0
	0x02BA7BE0 LDR X8, [X26 + 0xC0]
	0x02BA7BE4 LDP X9, X1, [X8 + 0x68]
	0x02BA7BE8 MOV X8, X21
	0x02BA7BEC LDR W9, [X9 + 0x28]
	0x02BA7BF0 LDR X0, [X1]
	0x02BA7BF4 TBNZ X9, 0x1F, 0x2BA7BFC
	0x02BA7BF8 LDR X8, [X21]
	0x02BA7BFC STUR X8, [X29 - 0x20]
	0x02BA7C00 LDR X8, [X1 + 0x10]
	0x02BA7C04 SUB X3, X29, 0x20
	0x02BA7C08 SUB X4, X29, 0xC
	0x02BA7C0C MOV X2, X27
	0x02BA7C10 BLR X8
	0x02BA7C14 LDURB W8, [X29 - 0xC]
	0x02BA7C18 CBNZ W8, 0x2BA7D10
	0x02BA7C1C LDR X8, [X22 + 0x20]
	0x02BA7C20 SUB X3, X29, 0x20
	0x02BA7C24 MOV X2, X31
	0x02BA7C28 MOV X4, X24
	0x02BA7C2C LDR X8, [X8 + 0xC0]
	0x02BA7C30 LDR X1, [X8 + 0x78]
	0x02BA7C34 LDR X0, [X1]
	0x02BA7C38 STUR X24, [X29 - 0x20]
	0x02BA7C3C LDR X8, [X1 + 0x10]
	0x02BA7C40 BLR X8
	0x02BA7C44 MOV X0, X28
	0x02BA7C48 MOV X1, X24
	0x02BA7C4C MOV X2, X20
	0x02BA7C50 BL 0x3EB1AC0
	0x02BA7C54 LDR X8, [X22 + 0x20]
	0x02BA7C58 LDR X8, [X8 + 0xC0]
	0x02BA7C5C LDR X0, [X8 + 0x40]
	0x02BA7C60 LDRB W9, [X0 + 0x135]
	0x02BA7C64 TBNZ X9, 0x0, 0x2BA7C74
	0x02BA7C68 BL 0x1C5C684
	0x02BA7C6C LDR X8, [X22 + 0x20]
	0x02BA7C70 LDR X8, [X8 + 0xC0]
	0x02BA7C74 LDR X1, [X8 + 0x80]
	0x02BA7C78 LDP X2, X5, [X29 - 0x40]
	0x02BA7C7C SUB X4, X29, 0x20
	0x02BA7C80 MOV X3, X28
	0x02BA7C84 STUR X5, [X29 - 0x20]
	0x02BA7C88 BL 0x1C17728
	0x02BA7C8C LDR X24, [X22 + 0x20]
	0x02BA7C90 LDR X22, [X27 + 0x10]
	0x02BA7C94 MOV X0, X21
	0x02BA7C98 MOV X2, X25
	0x02BA7C9C LDR X8, [X24 + 0xC0]
	0x02BA7CA0 LDR X8, [X8 + 0x68]
	0x02BA7CA4 LDR W8, [X8 + 0x28]
	0x02BA7CA8 CMP W8, 0x0
	0x02BA7CAC SUB X8, X29, 0x28
	0x02BA7CB0 CSEL X1, X19, X8, LT
	0x02BA7CB4 BL 0x3EB1AC0
	0x02BA7CB8 MOV X0, X23
	0x02BA7CBC MOV X1, X28
	0x02BA7CC0 MOV X2, X20
	0x02BA7CC4 BL 0x3EB1AC0
	0x02BA7CC8 CBZ X22, 0x2BA7D44
	0x02BA7CCC LDR X8, [X24 + 0xC0]
	0x02BA7CD0 LDR X9, [X8 + 0x68]
	0x02BA7CD4 LDR X1, [X8 + 0x88]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X24+40]
	011 Move X23, 0x1835000
	012 Move X19, X3
	013 Move X21, X2
	014 Move [X31+88], X8
	015 Move W8, [X23+1492]
	016 Move X20, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1578000
	023 Move X0, [X0+2968]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1492], W8
	027 Move X8, [X20+16]
	028 Move V0, [X20]
	029 Add X1, X31, 64
	030 Move X0, X22
	031 Move [X31+48], X8
	032 Move [X31+2], V0
	033 Move X9, [X19+32]
	034 Move X9, [X9+192]
	035 Move X2, [X9+112]
	036 Move [X31+4], V0
	037 Move [X31+80], X8
	038 Call 0x2BA7E38, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {91}
	043 Move X8, [X19+32]
	044 Move X8, [X8+192]
	045 Move X0, [X8+120]
	046 Call Activator.CreateInstance
	047 Compare X0, 0
	048 JumpIfEqual {103}
	049 Move X10, 0x1578000
	050 Move X8, [X0]
	051 Move X10, [X10+2968]
	052 Move X23, X0
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X23
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X2, [X0+8]
	071 Move X0, X23
	072 Move X1, X21
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X0, [X22+16]
	075 Move X8, [X20+16]
	076 Move V0, [X20]
	077 Move [X31+16], X8
	078 Move [X31], V0
	079 Compare X0, 0
	080 JumpIfEqual {103}
	081 Move X8, [X19+32]
	082 Move V0, [X31]
	083 Move X9, [X31+16]
	084 Add X1, X31, 64
	085 Move X8, [X8+192]
	086 Move X2, X23
	087 Move X3, [X8+136]
	088 Move [X31+4], V0
	089 Move [X31+80], X9
	090 Call Dictionary`2<NetAddress, Object>.set_Item, X0, X1, X2
	091 Move X8, [X24+40]
	092 Move X9, [X31+88]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X20, [X31+144]
	095 Move X19, [X31+152]
	096 Move X22, [X31+128]
	097 Move X21, [X31+136]
	098 Move X24, [X31+112]
	099 Move X23, [X31+120]
	100 Move X30, [X31+96]
	101 Add X31, X31, 160
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x3EB2B20

Method: System.Void DeleteEncryptionKey(THandler handle)

Disassembly:
	0x02BA7CD8 LDR W9, [X9 + 0x28]
	0x02BA7CDC LDR X0, [X1]
	0x02BA7CE0 TBNZ X9, 0x1F, 0x2BA7CE8
	0x02BA7CE4 LDR X21, [X21]
	0x02BA7CE8 LDR X8, [X8 + 0x40]
	0x02BA7CEC LDR W8, [X8 + 0x28]
	0x02BA7CF0 TBNZ X8, 0x1F, 0x2BA7CF8
	0x02BA7CF4 LDR X23, [X23]
	0x02BA7CF8 STP X21, X23, [X29 - 0x20]
	0x02BA7CFC LDR X8, [X1 + 0x10]
	0x02BA7D00 SUB X3, X29, 0x20
	0x02BA7D04 MOV X2, X22
	0x02BA7D08 MOV X4, X23
	0x02BA7D0C BLR X8
	0x02BA7D10 LDUR X8, [X29 - 0x30]
	0x02BA7D14 LDR X8, [X8 + 0x28]
	0x02BA7D18 LDUR X9, [X29 - 0x8]
	0x02BA7D1C CMP X8, X9
	0x02BA7D20 B.NE 0x2BA7D48
	0x02BA7D24 ADD X31, X29, 0x0
	0x02BA7D28 LDP X20, X19, [X31 + 0x50]
	0x02BA7D2C LDP X22, X21, [X31 + 0x40]
	0x02BA7D30 LDP X24, X23, [X31 + 0x30]
	0x02BA7D34 LDP X26, X25, [X31 + 0x20]
	0x02BA7D38 LDP X28, X27, [X31 + 0x10]
	0x02BA7D3C LDP X29, X30, [X31], #0x60
	0x02BA7D40 RET
	0x02BA7D44 BL 0x1C16F20
	0x02BA7D48 BL 0x3EB1B20
	0x02BA7D4C STP X29, X30, [X31 - 0x60]!
	0x02BA7D50 STP X28, X27, [X31 + 0x10]
	0x02BA7D54 STP X26, X25, [X31 + 0x20]
	0x02BA7D58 STP X24, X23, [X31 + 0x30]
	0x02BA7D5C STP X22, X21, [X31 + 0x40]
	0x02BA7D60 STP X20, X19, [X31 + 0x50]
	0x02BA7D64 ADD X29, X31, 0x0
	0x02BA7D68 SUB X31, X31, 0x30
	0x02BA7D6C MRS X27, 0xC000
	0x02BA7D70 LDR X8, [X27 + 0x28]
	0x02BA7D74 MOV X19, X2
	0x02BA7D78 MOV X22, X1
	0x02BA7D7C MOV X24, X0
	0x02BA7D80 STUR X8, [X29 - 0x8]
	0x02BA7D84 STUR X1, [X29 - 0x28]
	0x02BA7D88 LDR X28, [X2 + 0x20]
	0x02BA7D8C LDR X9, [X28 + 0xC0]
	0x02BA7D90 LDR X8, [X9 + 0x40]
	0x02BA7D94 LDR X9, [X9 + 0x68]
	0x02BA7D98 LDR W26, [X8 + 0xFC]
	0x02BA7D9C LDRB W10, [X8 + 0x135]
	0x02BA7DA0 LDR W23, [X9 + 0xFC]
	0x02BA7DA4 TBNZ X10, 0x0, 0x2BA7DBC
	0x02BA7DA8 MOV X0, X8
	0x02BA7DAC BL 0x1C5C684
	0x02BA7DB0 LDR W8, [X0 + 0xFC]
	0x02BA7DB4 LDR X28, [X19 + 0x20]
	0x02BA7DB8 B 0x2BA7DC0
	0x02BA7DBC MOV W8, W26
	0x02BA7DC0 ADD W8, W8, 0x10
	0x02BA7DC4 ADD X8, X8, 0xF
	0x02BA7DC8 ADD X9, X31, 0x0
	0x02BA7DCC AND X8, X8, 0x1FFFFFFFF
	0x02BA7DD0 SUB X20, X9, X8
	0x02BA7DD4 ADD X31, X20, 0x0
	0x02BA7DD8 ADD X9, X23, 0xF
	0x02BA7DDC ADD X8, X31, 0x0
	0x02BA7DE0 AND X9, X9, 0x1FFFFFFFF
	0x02BA7DE4 SUB X25, X8, X9
	0x02BA7DE8 ADD X31, X25, 0x0
	0x02BA7DEC ADD X9, X26, 0xF
	0x02BA7DF0 ADD X8, X31, 0x0
	0x02BA7DF4 AND X9, X9, 0x1FFFFFFFF
	0x02BA7DF8 SUB X21, X8, X9
	0x02BA7DFC ADD X31, X21, 0x0
	0x02BA7E00 MOV X0, X21
	0x02BA7E04 MOV W1, W31
	0x02BA7E08 MOV X2, X26
	0x02BA7E0C BL 0x3EB1B10
	0x02BA7E10 LDR X8, [X28 + 0xC0]
	0x02BA7E14 LDR X26, [X24 + 0x10]
	0x02BA7E18 MOV X0, X25
	0x02BA7E1C MOV X2, X23
	0x02BA7E20 LDR X8, [X8 + 0x68]
	0x02BA7E24 LDR W8, [X8 + 0x28]
	0x02BA7E28 CMP W8, 0x0
	0x02BA7E2C SUB X8, X29, 0x28
	0x02BA7E30 CSEL X1, X22, X8, LT
	0x02BA7E34 BL 0x3EB1AC0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X23, 0x1835000
	011 Move X19, X2
	012 Move X20, X1
	013 Move [X31+72], X8
	014 Move W8, [X23+1493]
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x154D000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1493], W8
	025 Move [X31+8], X31
	026 Move X0, [X21+16]
	027 Move X8, [X20+16]
	028 Move V0, [X20]
	029 Move [X31+32], X8
	030 Move [X31+1], V0
	031 Compare X0, 0
	032 JumpIfEqual {100}
	033 Move X8, [X19+32]
	034 Move V0, [X31+1]
	035 Move X9, [X31+32]
	036 Add X1, X31, 48
	037 Move X8, [X8+192]
	038 Add X2, X31, 8
	039 Move X3, [X8+144]
	040 Move [X31+3], V0
	041 Move [X31+64], X9
	042 Call Dictionary`2<NetAddress, Object>.TryGetValue, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {89}
	047 Move X0, [X21+16]
	048 Move X8, [X20+16]
	049 Move V0, [X20]
	050 Move [X31+32], X8
	051 Move [X31+1], V0
	052 Compare X0, 0
	053 JumpIfEqual {100}
	054 Move X8, [X19+32]
	055 Move V0, [X31+1]
	056 Move X9, [X31+32]
	057 Add X1, X31, 48
	058 Move X8, [X8+192]
	059 Move X2, [X8+160]
	060 Move [X31+3], V0
	061 Move [X31+64], X9
	062 Call Dictionary`2<NetAddress, Object>.Remove, X0, X1
	063 Move X19, [X31+8]
	064 Compare X19, 0
	065 JumpIfEqual {100}
	066 Move X10, 0x154D000
	067 Move X8, [X19]
	068 Move X10, [X10+3584]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X1, [X10]
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X19
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X19
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X8, [X22+40]
	090 Move X9, [X31+72]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X20, [X31+112]
	093 Move X19, [X31+120]
	094 Move X22, [X31+96]
	095 Move X21, [X31+104]
	096 Move X30, [X31+80]
	097 Move X23, [X31+88]
	098 Add X31, X31, 128
	099 Return 
	100 Call 0x1C17F20
	101 Call 0x3EB2B20

Method: System.Boolean HasEncryptionForHandle(THandler handle)

Disassembly:
	0x02BA7E38 CBZ X26, 0x2BA7F48
	0x02BA7E3C LDR X8, [X28 + 0xC0]
	0x02BA7E40 LDR X9, [X8 + 0x68]
	0x02BA7E44 LDR X1, [X8 + 0x90]
	0x02BA7E48 MOV X8, X25
	0x02BA7E4C LDR W9, [X9 + 0x28]
	0x02BA7E50 LDR X0, [X1]
	0x02BA7E54 TBNZ X9, 0x1F, 0x2BA7E5C
	0x02BA7E58 LDR X8, [X25]
	0x02BA7E5C STP X8, X21, [X29 - 0x20]
	0x02BA7E60 LDR X8, [X1 + 0x10]
	0x02BA7E64 SUB X3, X29, 0x20
	0x02BA7E68 SUB X4, X29, 0xC
	0x02BA7E6C MOV X2, X26
	0x02BA7E70 BLR X8
	0x02BA7E74 LDURB W8, [X29 - 0xC]
	0x02BA7E78 CBZ W8, 0x2BA7F18
	0x02BA7E7C LDR X26, [X19 + 0x20]
	0x02BA7E80 LDR X24, [X24 + 0x10]
	0x02BA7E84 MOV X0, X25
	0x02BA7E88 MOV X2, X23
	0x02BA7E8C LDR X8, [X26 + 0xC0]
	0x02BA7E90 LDR X8, [X8 + 0x68]
	0x02BA7E94 LDR W8, [X8 + 0x28]
	0x02BA7E98 CMP W8, 0x0
	0x02BA7E9C SUB X8, X29, 0x28
	0x02BA7EA0 CSEL X1, X22, X8, LT
	0x02BA7EA4 BL 0x3EB1AC0
	0x02BA7EA8 CBZ X24, 0x2BA7F48
	0x02BA7EAC LDR X8, [X26 + 0xC0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X8, [X19+40]
	006 Move [X31+56], X8
	007 Move X0, [X0+16]
	008 Move X8, [X1+16]
	009 Move V0, [X1]
	010 Move [X31+16], X8
	011 Move [X31], V0
	012 Compare X0, 0
	013 JumpIfEqual {31}
	014 Move X8, [X2+32]
	015 Move V0, [X31]
	016 Move X9, [X31+16]
	017 Add X1, X31, 32
	018 Move X8, [X8+192]
	019 Move X2, [X8+168]
	020 Move [X31+2], V0
	021 Move [X31+48], X9
	022 Call Dictionary`2<NetAddress, Object>.ContainsKey, X0, X1
	023 Move X8, [X19+40]
	024 Move X9, [X31+56]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X30, [X31+64]
	027 Move X19, [X31+72]
	028 And W0, W0, 1
	029 Add X31, X31, 80
	030 Return X0
	031 Call 0x1C17F20
	032 Call 0x3EB2B20

Method: System.Boolean Wrap(THandler handle, System.Byte* buffer, ref System.Int32 length, System.Int32 capacity)

Disassembly:
	0x02BA7EB0 LDR X9, [X8 + 0x68]
	0x02BA7EB4 LDR X1, [X8 + 0xA0]
	0x02BA7EB8 LDR W8, [X9 + 0x28]
	0x02BA7EBC LDR X0, [X1]
	0x02BA7EC0 TBNZ X8, 0x1F, 0x2BA7EC8
	0x02BA7EC4 LDR X25, [X25]
	0x02BA7EC8 STUR X25, [X29 - 0x20]
	0x02BA7ECC LDR X8, [X1 + 0x10]
	0x02BA7ED0 SUB X3, X29, 0x20
	0x02BA7ED4 SUB X4, X29, 0xC
	0x02BA7ED8 MOV X2, X24
	0x02BA7EDC BLR X8
	0x02BA7EE0 LDR X8, [X19 + 0x20]
	0x02BA7EE4 LDR X8, [X8 + 0xC0]
	0x02BA7EE8 LDR X0, [X8 + 0x40]
	0x02BA7EEC LDRB W9, [X0 + 0x135]
	0x02BA7EF0 TBNZ X9, 0x0, 0x2BA7F00
	0x02BA7EF4 BL 0x1C5C684
	0x02BA7EF8 LDR X8, [X19 + 0x20]
	0x02BA7EFC LDR X8, [X8 + 0xC0]
	0x02BA7F00 LDR X1, [X8 + 0x48]
	0x02BA7F04 MOV X2, X20
	0x02BA7F08 MOV X3, X21
	0x02BA7F0C MOV X4, X31
	0x02BA7F10 MOV X5, X31
	0x02BA7F14 BL 0x1C17728
	0x02BA7F18 LDR X8, [X27 + 0x28]
	0x02BA7F1C LDUR X9, [X29 - 0x8]
	0x02BA7F20 CMP X8, X9
	0x02BA7F24 B.NE 0x2BA7F4C
	0x02BA7F28 ADD X31, X29, 0x0
	0x02BA7F2C LDP X20, X19, [X31 + 0x50]
	0x02BA7F30 LDP X22, X21, [X31 + 0x40]
	0x02BA7F34 LDP X24, X23, [X31 + 0x30]
	0x02BA7F38 LDP X26, X25, [X31 + 0x20]
	0x02BA7F3C LDP X28, X27, [X31 + 0x10]
	0x02BA7F40 LDP X29, X30, [X31], #0x60
	0x02BA7F44 RET
	0x02BA7F48 BL 0x1C16F20
	0x02BA7F4C BL 0x3EB1B20
	0x02BA7F50 STP X29, X30, [X31 - 0x30]!
	0x02BA7F54 STP X22, X21, [X31 + 0x10]
	0x02BA7F58 STP X20, X19, [X31 + 0x20]
	0x02BA7F5C ADD X29, X31, 0x0
	0x02BA7F60 SUB X31, X31, 0x20
	0x02BA7F64 MRS X21, 0xC000
	0x02BA7F68 LDR X8, [X21 + 0x28]
	0x02BA7F6C ADD X9, X31, 0x0
	0x02BA7F70 STUR X8, [X29 - 0x8]
	0x02BA7F74 STUR X1, [X29 - 0x20]
	0x02BA7F78 LDR X22, [X2 + 0x20]
	0x02BA7F7C LDR X8, [X22 + 0xC0]
	0x02BA7F80 LDR X8, [X8 + 0x68]
	0x02BA7F84 LDR W2, [X8 + 0xFC]
	0x02BA7F88 ADD X10, X2, 0xF
	0x02BA7F8C AND X10, X10, 0x1FFFFFFFF
	0x02BA7F90 SUB X20, X9, X10
	0x02BA7F94 ADD X31, X20, 0x0
	0x02BA7F98 LDR W8, [X8 + 0x28]
	0x02BA7F9C LDR X19, [X0 + 0x10]
	0x02BA7FA0 MOV X0, X20
	0x02BA7FA4 CMP W8, 0x0
	0x02BA7FA8 SUB X8, X29, 0x20
	0x02BA7FAC CSEL X1, X1, X8, LT
	0x02BA7FB0 BL 0x3EB1AC0
	0x02BA7FB4 CBZ X19, 0x2BA801C
	0x02BA7FB8 LDR X8, [X22 + 0xC0]
	0x02BA7FBC LDR X9, [X8 + 0x68]
	0x02BA7FC0 LDR X1, [X8 + 0xA8]
	0x02BA7FC4 LDR W8, [X9 + 0x28]
	0x02BA7FC8 LDR X0, [X1]
	0x02BA7FCC TBNZ X8, 0x1F, 0x2BA7FD4
	0x02BA7FD0 LDR X20, [X20]
	0x02BA7FD4 STUR X20, [X29 - 0x18]
	0x02BA7FD8 LDR X8, [X1 + 0x10]
	0x02BA7FDC SUB X3, X29, 0x18
	0x02BA7FE0 SUB X4, X29, 0xC
	0x02BA7FE4 MOV X2, X19
	0x02BA7FE8 BLR X8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X26, 0x1835000
	015 Move X27, 0x1578000
	016 Move X23, X5
	017 Move [X31+88], X8
	018 Move W8, [X26+1494]
	019 Move X27, [X27+2976]
	020 Move W19, W4
	021 Move X20, X3
	022 Move X21, X2
	023 Move X24, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x1578000
	030 Move X0, [X0+2976]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+1494], W8
	034 Move X0, [X27]
	035 Move X1, X31
	036 Call EngineProfiler.Begin, X0
	037 Move X8, [X24+16]
	038 Move V0, [X24]
	039 Add X1, X31, 64
	040 Move X0, X22
	041 Move [X31+48], X8
	042 Move [X31+2], V0
	043 Move X8, [X23+32]
	044 Move V0, [X31+2]
	045 Move X9, [X31+48]
	046 Move X2, X21
	047 Move X8, [X8+192]
	048 Move X3, X20
	049 Move W4, W19
	050 Move X5, [X8+176]
	051 Move [X31+4], V0
	052 Move [X31+80], X9
	053 Call 0x2BA8494, X0, X1, X2, X3, X4
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {74}
	058 Move X8, [X24+16]
	059 Move V0, [X24]
	060 Add X1, X31, 64
	061 Move X0, X22
	062 Move [X31+16], X8
	063 Move [X31], V0
	064 Move X9, [X23+32]
	065 Move X2, X21
	066 Move X3, X20
	067 Move W4, W19
	068 Move X9, [X9+192]
	069 Move X5, [X9+184]
	070 Move [X31+4], V0
	071 Move [X31+80], X8
	072 Call 0x2BA81DC, X0, X1, X2, X3, X4
	073 Move W19, W0
	074 Move W19, W31
	075 Move X0, X31
	076 Call EngineProfiler.End
	077 Move X8, [X25+40]
	078 Move X9, [X31+88]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 And W0, W19, 1
	081 Move X20, [X31+160]
	082 Move X19, [X31+168]
	083 Move X22, [X31+144]
	084 Move X21, [X31+152]
	085 Move X24, [X31+128]
	086 Move X23, [X31+136]
	087 Move X26, [X31+112]
	088 Move X25, [X31+120]
	089 Move X30, [X31+96]
	090 Move X27, [X31+104]
	091 Add X31, X31, 176
	092 Return X0
	093 Call 0x3EB2B20

Method: System.Boolean Unwrap(THandler handle, System.Byte* buffer, ref System.Int32 length, System.Int32 capacity)

Disassembly:
	0x02BA7FEC LDURB W8, [X29 - 0xC]
	0x02BA7FF0 LDR X9, [X21 + 0x28]
	0x02BA7FF4 LDUR X10, [X29 - 0x8]
	0x02BA7FF8 CMP W8, 0x0
	0x02BA7FFC CSET W0, NE
	0x02BA8000 CMP X9, X10
	0x02BA8004 B.NE 0x2BA8020
	0x02BA8008 ADD X31, X29, 0x0
	0x02BA800C LDP X20, X19, [X31 + 0x20]
	0x02BA8010 LDP X22, X21, [X31 + 0x10]
	0x02BA8014 LDP X29, X30, [X31], #0x30
	0x02BA8018 RET
	0x02BA801C BL 0x1C16F20
	0x02BA8020 BL 0x3EB1B20
	0x02BA8024 STP X29, X30, [X31 - 0x60]!
	0x02BA8028 STP X28, X27, [X31 + 0x10]
	0x02BA802C STP X26, X25, [X31 + 0x20]
	0x02BA8030 STP X24, X23, [X31 + 0x30]
	0x02BA8034 STP X22, X21, [X31 + 0x40]
	0x02BA8038 STP X20, X19, [X31 + 0x50]
	0x02BA803C ADD X29, X31, 0x0
	0x02BA8040 SUB X31, X31, 0x40
	0x02BA8044 MRS X27, 0xC000
	0x02BA8048 LDR X8, [X27 + 0x28]
	0x02BA804C ADRP X25, 0x1833000
	0x02BA8050 ADRP X28, 0x1576000
	0x02BA8054 MOV X24, X5
	0x02BA8058 STUR X8, [X29 - 0x8]
	0x02BA805C STUR X1, [X29 - 0x38]
	0x02BA8060 LDRB W8, [X25 + 0x5DD]
	0x02BA8064 LDR X28, [X28 + 0xBA0]
	0x02BA8068 MOV W22, W4
	0x02BA806C MOV X20, X3
	0x02BA8070 MOV X21, X2
	0x02BA8074 MOV X23, X1
	0x02BA8078 MOV X19, X0
	0x02BA807C TBNZ X8, 0x0, 0x2BA8094
	0x02BA8080 ADRP X0, 0x1576000
	0x02BA8084 LDR X0, [X0 + 0xBA0]
	0x02BA8088 BL 0x1C16CF4
	0x02BA808C MOVZ W8, 0x1
	0x02BA8090 STRB W8, [X25 + 0x5DD]
	0x02BA8094 LDR X8, [X24 + 0x20]
	0x02BA8098 LDR X8, [X8 + 0xC0]
	0x02BA809C LDR X8, [X8 + 0x68]
	0x02BA80A0 LDR W26, [X8 + 0xFC]
	0x02BA80A4 ADD X8, X31, 0x0
	0x02BA80A8 ADD X9, X26, 0xF
	0x02BA80AC AND X9, X9, 0x1FFFFFFFF
	0x02BA80B0 SUB X25, X8, X9
	0x02BA80B4 ADD X31, X25, 0x0
	0x02BA80B8 LDR X0, [X28]
	0x02BA80BC MOV X1, X31
	0x02BA80C0 BL 0x1E32108
	0x02BA80C4 LDR X28, [X24 + 0x20]
	0x02BA80C8 MOV X0, X25
	0x02BA80CC MOV X2, X26
	0x02BA80D0 LDR X8, [X28 + 0xC0]
	0x02BA80D4 LDR X8, [X8 + 0x68]
	0x02BA80D8 LDR W8, [X8 + 0x28]
	0x02BA80DC CMP W8, 0x0
	0x02BA80E0 SUB X8, X29, 0x38
	0x02BA80E4 CSEL X1, X23, X8, LT
	0x02BA80E8 BL 0x3EB1AC0
	0x02BA80EC LDR X8, [X28 + 0xC0]
	0x02BA80F0 LDR X9, [X8 + 0x68]
	0x02BA80F4 LDR X1, [X8 + 0xB0]
	0x02BA80F8 MOV X8, X25
	0x02BA80FC LDR W9, [X9 + 0x28]
	0x02BA8100 LDR X0, [X1]
	0x02BA8104 TBNZ X9, 0x1F, 0x2BA810C
	0x02BA8108 LDR X8, [X25]
	0x02BA810C STP X8, X21, [X29 - 0x30]
	0x02BA8110 SUB X8, X29, 0xC
	0x02BA8114 STUR W22, [X29 - 0xC]
	0x02BA8118 STP X20, X8, [X29 - 0x20]
	0x02BA811C LDR X8, [X1 + 0x10]
	0x02BA8120 SUB X3, X29, 0x30
	0x02BA8124 SUB X4, X29, 0x10

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X26, 0x1834000
	015 Move X27, 0x1577000
	016 Move X23, X5
	017 Move [X31+88], X8
	018 Move W8, [X26+1495]
	019 Move X27, [X27+2984]
	020 Move W19, W4
	021 Move X20, X3
	022 Move X21, X2
	023 Move X24, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x1577000
	030 Move X0, [X0+2984]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+1495], W8
	034 Move X0, [X27]
	035 Move X1, X31
	036 Call EngineProfiler.Begin, X0
	037 Move X8, [X24+16]
	038 Move V0, [X24]
	039 Add X1, X31, 64
	040 Move X0, X22
	041 Move [X31+48], X8
	042 Move [X31+2], V0
	043 Move X8, [X23+32]
	044 Move V0, [X31+2]
	045 Move X9, [X31+48]
	046 Move X2, X21
	047 Move X8, [X8+192]
	048 Move X3, X20
	049 Move W4, W19
	050 Move X5, [X8+192]
	051 Move [X31+4], V0
	052 Move [X31+80], X9
	053 Call 0x2BA8338, X0, X1, X2, X3, X4
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {74}
	058 Move X8, [X24+16]
	059 Move V0, [X24]
	060 Add X1, X31, 64
	061 Move X0, X22
	062 Move [X31+16], X8
	063 Move [X31], V0
	064 Move X9, [X23+32]
	065 Move X2, X21
	066 Move X3, X20
	067 Move W4, W19
	068 Move X9, [X9+192]
	069 Move X5, [X9+200]
	070 Move [X31+4], V0
	071 Move [X31+80], X8
	072 Call 0x2BA85F0, X0, X1, X2, X3, X4
	073 Move W19, W0
	074 Move W19, W31
	075 Move X0, X31
	076 Call EngineProfiler.End
	077 Move X8, [X25+40]
	078 Move X9, [X31+88]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 And W0, W19, 1
	081 Move X20, [X31+160]
	082 Move X19, [X31+168]
	083 Move X22, [X31+144]
	084 Move X21, [X31+152]
	085 Move X24, [X31+128]
	086 Move X23, [X31+136]
	087 Move X26, [X31+112]
	088 Move X25, [X31+120]
	089 Move X30, [X31+96]
	090 Move X27, [X31+104]
	091 Add X31, X31, 176
	092 Return X0
	093 Call 0x3EB2B20

Method: System.Byte[] GenerateKey()

Disassembly:
	0x02BA8128 MOV X2, X19
	0x02BA812C BLR X8
	0x02BA8130 LDURB W8, [X29 - 0x10]
	0x02BA8134 CBZ W8, 0x2BA81B0
	0x02BA8138 LDR X24, [X24 + 0x20]
	0x02BA813C MOV X0, X25
	0x02BA8140 MOV X2, X26
	0x02BA8144 LDR X8, [X24 + 0xC0]
	0x02BA8148 LDR X8, [X8 + 0x68]
	0x02BA814C LDR W8, [X8 + 0x28]
	0x02BA8150 CMP W8, 0x0
	0x02BA8154 SUB X8, X29, 0x38
	0x02BA8158 CSEL X1, X23, X8, LT
	0x02BA815C BL 0x3EB1AC0
	0x02BA8160 LDR X8, [X24 + 0xC0]
	0x02BA8164 LDR X9, [X8 + 0x68]
	0x02BA8168 LDR X1, [X8 + 0xB8]
	0x02BA816C LDR W8, [X9 + 0x28]
	0x02BA8170 LDR X0, [X1]
	0x02BA8174 TBNZ X8, 0x1F, 0x2BA817C
	0x02BA8178 LDR X25, [X25]
	0x02BA817C SUB X8, X29, 0xC
	0x02BA8180 STUR W22, [X29 - 0xC]
	0x02BA8184 STP X25, X21, [X29 - 0x30]
	0x02BA8188 STP X20, X8, [X29 - 0x20]
	0x02BA818C LDR X8, [X1 + 0x10]
	0x02BA8190 SUB X3, X29, 0x30
	0x02BA8194 SUB X4, X29, 0x10
	0x02BA8198 MOV X2, X19
	0x02BA819C BLR X8
	0x02BA81A0 LDURB W8, [X29 - 0x10]
	0x02BA81A4 CMP W8, 0x0
	0x02BA81A8 CSET W19, NE
	0x02BA81AC B 0x2BA81B4
	0x02BA81B0 MOV W19, W31
	0x02BA81B4 MOV X0, X31
	0x02BA81B8 BL 0x1E32194
	0x02BA81BC LDR X8, [X27 + 0x28]
	0x02BA81C0 LDUR X9, [X29 - 0x8]
	0x02BA81C4 CMP X8, X9
	0x02BA81C8 B.NE 0x2BA81F0
	0x02BA81CC MOV W0, W19
	0x02BA81D0 ADD X31, X29, 0x0
	0x02BA81D4 LDP X20, X19, [X31 + 0x50]
	0x02BA81D8 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1834000
	005 Move W8, [X20+1496]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1577000
	012 Move X0, [X0+2968]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1496], W8
	016 Move X8, [X19+32]
	017 Move X8, [X8+192]
	018 Move X0, [X8+120]
	019 Call Activator.CreateInstance
	020 Compare X0, 0
	021 JumpIfEqual {50}
	022 Move X10, 0x1577000
	023 Move X8, [X0]
	024 Move X10, [X10+2968]
	025 Move X19, X0
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 1
	037 Move X0, X19
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 1
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X2, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 CallNoReturn X2
	050 Call 0x1C17F20

Method: System.Boolean ComputeHash(THandler handle, System.Byte* buffer, ref System.Int32 length, System.Int32 capacity)

Disassembly:
	0x02BA81DC LDP X24, X23, [X31 + 0x30]
	0x02BA81E0 LDP X26, X25, [X31 + 0x20]
	0x02BA81E4 LDP X28, X27, [X31 + 0x10]
	0x02BA81E8 LDP X29, X30, [X31], #0x60
	0x02BA81EC RET
	0x02BA81F0 BL 0x3EB1B20
	0x02BA81F4 STP X29, X30, [X31 - 0x60]!
	0x02BA81F8 STP X28, X27, [X31 + 0x10]
	0x02BA81FC STP X26, X25, [X31 + 0x20]
	0x02BA8200 STP X24, X23, [X31 + 0x30]
	0x02BA8204 STP X22, X21, [X31 + 0x40]
	0x02BA8208 STP X20, X19, [X31 + 0x50]
	0x02BA820C ADD X29, X31, 0x0
	0x02BA8210 SUB X31, X31, 0x40
	0x02BA8214 MRS X27, 0xC000
	0x02BA8218 LDR X8, [X27 + 0x28]
	0x02BA821C ADRP X25, 0x1833000
	0x02BA8220 ADRP X28, 0x1576000
	0x02BA8224 MOV X24, X5
	0x02BA8228 STUR X8, [X29 - 0x8]
	0x02BA822C STUR X1, [X29 - 0x38]
	0x02BA8230 LDRB W8, [X25 + 0x5DE]
	0x02BA8234 LDR X28, [X28 + 0xBA8]
	0x02BA8238 MOV W22, W4
	0x02BA823C MOV X20, X3
	0x02BA8240 MOV X21, X2
	0x02BA8244 MOV X23, X1
	0x02BA8248 MOV X19, X0
	0x02BA824C TBNZ X8, 0x0, 0x2BA8264
	0x02BA8250 ADRP X0, 0x1576000
	0x02BA8254 LDR X0, [X0 + 0xBA8]
	0x02BA8258 BL 0x1C16CF4
	0x02BA825C MOVZ W8, 0x1
	0x02BA8260 STRB W8, [X25 + 0x5DE]
	0x02BA8264 LDR X8, [X24 + 0x20]
	0x02BA8268 LDR X8, [X8 + 0xC0]
	0x02BA826C LDR X8, [X8 + 0x68]
	0x02BA8270 LDR W26, [X8 + 0xFC]
	0x02BA8274 ADD X8, X31, 0x0
	0x02BA8278 ADD X9, X26, 0xF
	0x02BA827C AND X9, X9, 0x1FFFFFFFF
	0x02BA8280 SUB X25, X8, X9
	0x02BA8284 ADD X31, X25, 0x0
	0x02BA8288 LDR X0, [X28]
	0x02BA828C MOV X1, X31
	0x02BA8290 BL 0x1E32108
	0x02BA8294 LDR X28, [X24 + 0x20]
	0x02BA8298 MOV X0, X25
	0x02BA829C MOV X2, X26
	0x02BA82A0 LDR X8, [X28 + 0xC0]
	0x02BA82A4 LDR X8, [X8 + 0x68]
	0x02BA82A8 LDR W8, [X8 + 0x28]
	0x02BA82AC CMP W8, 0x0
	0x02BA82B0 SUB X8, X29, 0x38
	0x02BA82B4 CSEL X1, X23, X8, LT
	0x02BA82B8 BL 0x3EB1AC0
	0x02BA82BC LDR X8, [X28 + 0xC0]
	0x02BA82C0 LDR X9, [X8 + 0x68]
	0x02BA82C4 LDR X1, [X8 + 0xC0]
	0x02BA82C8 MOV X8, X25
	0x02BA82CC LDR W9, [X9 + 0x28]
	0x02BA82D0 LDR X0, [X1]
	0x02BA82D4 TBNZ X9, 0x1F, 0x2BA82DC
	0x02BA82D8 LDR X8, [X25]
	0x02BA82DC STP X8, X21, [X29 - 0x30]
	0x02BA82E0 SUB X8, X29, 0xC
	0x02BA82E4 STUR W22, [X29 - 0xC]
	0x02BA82E8 STP X20, X8, [X29 - 0x20]
	0x02BA82EC LDR X8, [X1 + 0x10]
	0x02BA82F0 SUB X3, X29, 0x30
	0x02BA82F4 SUB X4, X29, 0x10
	0x02BA82F8 MOV X2, X19
	0x02BA82FC BLR X8
	0x02BA8300 LDURB W8, [X29 - 0x10]
	0x02BA8304 CBZ W8, 0x2BA8380
	0x02BA8308 LDR X24, [X24 + 0x20]
	0x02BA830C MOV X0, X25
	0x02BA8310 MOV X2, X26
	0x02BA8314 LDR X8, [X24 + 0xC0]
	0x02BA8318 LDR X8, [X8 + 0x68]
	0x02BA831C LDR W8, [X8 + 0x28]
	0x02BA8320 CMP W8, 0x0
	0x02BA8324 SUB X8, X29, 0x38
	0x02BA8328 CSEL X1, X23, X8, LT
	0x02BA832C BL 0x3EB1AC0
	0x02BA8330 LDR X8, [X24 + 0xC0]
	0x02BA8334 LDR X9, [X8 + 0x68]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X25+40]
	013 Move X26, 0x1834000
	014 Move X22, X5
	015 Move W19, W4
	016 Move [X31+72], X8
	017 Move W8, [X26+1497]
	018 Move X20, X3
	019 Move X21, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x1577000
	027 Move X0, [X0+2968]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+1497], W8
	031 Move [X31+8], X31
	032 Move X0, [X24+16]
	033 Move X8, [X23+16]
	034 Move V0, [X23]
	035 Move [X31+32], X8
	036 Move [X31+1], V0
	037 Compare X0, 0
	038 JumpIfEqual {99}
	039 Move X8, [X22+32]
	040 Move V0, [X31+1]
	041 Move X9, [X31+32]
	042 Add X1, X31, 48
	043 Move X8, [X8+192]
	044 Add X2, X31, 8
	045 Move X3, [X8+144]
	046 Move [X31+3], V0
	047 Move [X31+64], X9
	048 Call Dictionary`2<NetAddress, Object>.TryGetValue, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {72}
	053 Move X22, [X31+8]
	054 Compare X22, 0
	055 JumpIfEqual {99}
	056 Move X10, 0x1577000
	057 Move X8, [X22]
	058 Move X10, [X10+2968]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 4
	070 Move X0, X22
	071 Call 0x1C5D788
	072 Move W0, W31
	073 Move W9, [X10]
	074 Add W9, W9, 4
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X4, [X0+8]
	079 Move X0, X22
	080 Move X1, X21
	081 Move X2, X20
	082 Move W3, W19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X8, [X25+40]
	085 Move X9, [X31+72]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X20, [X31+144]
	088 Move X19, [X31+152]
	089 Move X22, [X31+128]
	090 Move X21, [X31+136]
	091 Move X24, [X31+112]
	092 Move X23, [X31+120]
	093 Move X26, [X31+96]
	094 Move X25, [X31+104]
	095 Move X30, [X31+80]
	096 And W0, W0, 1
	097 Add X31, X31, 160
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x3EB2B20

Method: System.Boolean VerifyHash(THandler handle, System.Byte* buffer, ref System.Int32 length, System.Int32 capacity)

Disassembly:
	0x02BA8338 LDR X1, [X8 + 0xC8]
	0x02BA833C LDR W8, [X9 + 0x28]
	0x02BA8340 LDR X0, [X1]
	0x02BA8344 TBNZ X8, 0x1F, 0x2BA834C
	0x02BA8348 LDR X25, [X25]
	0x02BA834C SUB X8, X29, 0xC
	0x02BA8350 STUR W22, [X29 - 0xC]
	0x02BA8354 STP X25, X21, [X29 - 0x30]
	0x02BA8358 STP X20, X8, [X29 - 0x20]
	0x02BA835C LDR X8, [X1 + 0x10]
	0x02BA8360 SUB X3, X29, 0x30
	0x02BA8364 SUB X4, X29, 0x10
	0x02BA8368 MOV X2, X19
	0x02BA836C BLR X8
	0x02BA8370 LDURB W8, [X29 - 0x10]
	0x02BA8374 CMP W8, 0x0
	0x02BA8378 CSET W19, NE
	0x02BA837C B 0x2BA8384
	0x02BA8380 MOV W19, W31
	0x02BA8384 MOV X0, X31
	0x02BA8388 BL 0x1E32194
	0x02BA838C LDR X8, [X27 + 0x28]
	0x02BA8390 LDUR X9, [X29 - 0x8]
	0x02BA8394 CMP X8, X9
	0x02BA8398 B.NE 0x2BA83C0
	0x02BA839C MOV W0, W19
	0x02BA83A0 ADD X31, X29, 0x0
	0x02BA83A4 LDP X20, X19, [X31 + 0x50]
	0x02BA83A8 LDP X22, X21, [X31 + 0x40]
	0x02BA83AC LDP X24, X23, [X31 + 0x30]
	0x02BA83B0 LDP X26, X25, [X31 + 0x20]
	0x02BA83B4 LDP X28, X27, [X31 + 0x10]
	0x02BA83B8 LDP X29, X30, [X31], #0x60
	0x02BA83BC RET
	0x02BA83C0 BL 0x3EB1B20
	0x02BA83C4 STP X29, X30, [X31 - 0x50]!
	0x02BA83C8 STR X25, [X31 + 0x10]
	0x02BA83CC STP X24, X23, [X31 + 0x20]
	0x02BA83D0 STP X22, X21, [X31 + 0x30]
	0x02BA83D4 STP X20, X19, [X31 + 0x40]
	0x02BA83D8 ADD X29, X31, 0x0
	0x02BA83DC SUB X31, X31, 0x10
	0x02BA83E0 MRS X24, 0xC000
	0x02BA83E4 LDR X8, [X24 + 0x28]
	0x02BA83E8 MOV X19, X1
	0x02BA83EC STUR X8, [X29 - 0x8]
	0x02BA83F0 LDR X25, [X1 + 0x20]
	0x02BA83F4 LDR X8, [X25 + 0xC0]
	0x02BA83F8 LDR X0, [X8 + 0x40]
	0x02BA83FC LDRB W8, [X0 + 0x135]
	0x02BA8400 LDR W21, [X0 + 0xFC]
	0x02BA8404 TBNZ X8, 0x0, 0x2BA8418
	0x02BA8408 BL 0x1C5C684
	0x02BA840C LDR W8, [X0 + 0xFC]
	0x02BA8410 LDR X25, [X19 + 0x20]
	0x02BA8414 B 0x2BA841C
	0x02BA8418 MOV W8, W21
	0x02BA841C ADD W8, W8, 0x10
	0x02BA8420 ADD X8, X8, 0xF
	0x02BA8424 ADD X9, X31, 0x0
	0x02BA8428 AND X8, X8, 0x1FFFFFFFF
	0x02BA842C SUB X20, X9, X8
	0x02BA8430 ADD X31, X20, 0x0
	0x02BA8434 ADD X9, X21, 0xF
	0x02BA8438 ADD X8, X31, 0x0
	0x02BA843C AND X9, X9, 0x1FFFFFFFF
	0x02BA8440 SUB X23, X8, X9
	0x02BA8444 ADD X31, X23, 0x0
	0x02BA8448 ADD X8, X31, 0x0
	0x02BA844C SUB X22, X8, X9
	0x02BA8450 ADD X31, X22, 0x0
	0x02BA8454 MOV X0, X22
	0x02BA8458 MOV W1, W31
	0x02BA845C MOV X2, X21
	0x02BA8460 BL 0x3EB1B10
	0x02BA8464 LDR X8, [X25 + 0xC0]
	0x02BA8468 SUB X3, X29, 0x10
	0x02BA846C MOV X2, X31
	0x02BA8470 MOV X4, X23
	0x02BA8474 LDR X1, [X8 + 0x78]
	0x02BA8478 LDR X0, [X1]
	0x02BA847C STUR X23, [X29 - 0x10]
	0x02BA8480 LDR X8, [X1 + 0x10]
	0x02BA8484 BLR X8
	0x02BA8488 MOV X0, X22
	0x02BA848C MOV X1, X23
	0x02BA8490 MOV X2, X21

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X25+40]
	013 Move X26, 0x1834000
	014 Move X22, X5
	015 Move W19, W4
	016 Move [X31+72], X8
	017 Move W8, [X26+1498]
	018 Move X20, X3
	019 Move X21, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x1577000
	027 Move X0, [X0+2968]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+1498], W8
	031 Move [X31+8], X31
	032 Move X0, [X24+16]
	033 Move X8, [X23+16]
	034 Move V0, [X23]
	035 Move [X31+32], X8
	036 Move [X31+1], V0
	037 Compare X0, 0
	038 JumpIfEqual {99}
	039 Move X8, [X22+32]
	040 Move V0, [X31+1]
	041 Move X9, [X31+32]
	042 Add X1, X31, 48
	043 Move X8, [X8+192]
	044 Add X2, X31, 8
	045 Move X3, [X8+144]
	046 Move [X31+3], V0
	047 Move [X31+64], X9
	048 Call Dictionary`2<NetAddress, Object>.TryGetValue, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {72}
	053 Move X22, [X31+8]
	054 Compare X22, 0
	055 JumpIfEqual {99}
	056 Move X10, 0x1577000
	057 Move X8, [X22]
	058 Move X10, [X10+2968]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 5
	070 Move X0, X22
	071 Call 0x1C5D788
	072 Move W0, W31
	073 Move W9, [X10]
	074 Add W9, W9, 5
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X4, [X0+8]
	079 Move X0, X22
	080 Move X1, X21
	081 Move X2, X20
	082 Move W3, W19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X8, [X25+40]
	085 Move X9, [X31+72]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X20, [X31+144]
	088 Move X19, [X31+152]
	089 Move X22, [X31+128]
	090 Move X21, [X31+136]
	091 Move X24, [X31+112]
	092 Move X23, [X31+120]
	093 Move X26, [X31+96]
	094 Move X25, [X31+104]
	095 Move X30, [X31+80]
	096 And W0, W0, 1
	097 Add X31, X31, 160
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x3EB2B20

Method: System.Boolean Encrypt(THandler handle, System.Byte* buffer, ref System.Int32 length, System.Int32 capacity)

Disassembly:
	0x02BA8494 BL 0x3EB1AC0
	0x02BA8498 LDR X8, [X19 + 0x20]
	0x02BA849C LDR X8, [X8 + 0xC0]
	0x02BA84A0 LDR X0, [X8 + 0x40]
	0x02BA84A4 LDRB W9, [X0 + 0x135]
	0x02BA84A8 TBNZ X9, 0x0, 0x2BA84B8
	0x02BA84AC BL 0x1C5C684
	0x02BA84B0 LDR X8, [X19 + 0x20]
	0x02BA84B4 LDR X8, [X8 + 0xC0]
	0x02BA84B8 LDR X1, [X8 + 0xD0]
	0x02BA84BC SUB X5, X29, 0x10
	0x02BA84C0 MOV X2, X20
	0x02BA84C4 MOV X3, X22
	0x02BA84C8 MOV X4, X31
	0x02BA84CC BL 0x1C17728
	0x02BA84D0 LDUR X0, [X29 - 0x10]
	0x02BA84D4 LDR X8, [X24 + 0x28]
	0x02BA84D8 LDUR X9, [X29 - 0x8]
	0x02BA84DC CMP X8, X9
	0x02BA84E0 B.NE 0x2BA8500
	0x02BA84E4 ADD X31, X29, 0x0
	0x02BA84E8 LDP X20, X19, [X31 + 0x40]
	0x02BA84EC LDP X22, X21, [X31 + 0x30]
	0x02BA84F0 LDP X24, X23, [X31 + 0x20]
	0x02BA84F4 LDR X25, [X31 + 0x10]
	0x02BA84F8 LDP X29, X30, [X31], #0x50
	0x02BA84FC RET
	0x02BA8500 BL 0x3EB1B20
	0x02BA8504 STP X29, X30, [X31 - 0x60]!
	0x02BA8508 STP X28, X27, [X31 + 0x10]
	0x02BA850C STP X26, X25, [X31 + 0x20]
	0x02BA8510 STP X24, X23, [X31 + 0x30]
	0x02BA8514 STP X22, X21, [X31 + 0x40]
	0x02BA8518 STP X20, X19, [X31 + 0x50]
	0x02BA851C ADD X29, X31, 0x0
	0x02BA8520 SUB X31, X31, 0x50
	0x02BA8524 STUR W4, [X29 - 0x3C]
	0x02BA8528 STUR X3, [X29 - 0x38]
	0x02BA852C STUR X2, [X29 - 0x48]
	0x02BA8530 MRS X20, 0xC000
	0x02BA8534 LDR X8, [X20 + 0x28]
	0x02BA8538 MOV X22, X5
	0x02BA853C MOV X25, X1
	0x02BA8540 MOV X27, X0
	0x02BA8544 STUR X8, [X29 - 0x8]
	0x02BA8548 STUR X1, [X29 - 0x30]
	0x02BA854C LDR X21, [X5 + 0x20]
	0x02BA8550 LDR X9, [X21 + 0xC0]
	0x02BA8554 LDR X8, [X9 + 0x40]
	0x02BA8558 LDR X9, [X9 + 0x68]
	0x02BA855C LDR W28, [X8 + 0xFC]
	0x02BA8560 LDRB W10, [X8 + 0x135]
	0x02BA8564 LDR W26, [X9 + 0xFC]
	0x02BA8568 TBNZ X10, 0x0, 0x2BA8580
	0x02BA856C MOV X0, X8
	0x02BA8570 BL 0x1C5C684
	0x02BA8574 LDR W8, [X0 + 0xFC]
	0x02BA8578 LDR X21, [X22 + 0x20]
	0x02BA857C B 0x2BA8584
	0x02BA8580 MOV W8, W28
	0x02BA8584 ADD W8, W8, 0x10
	0x02BA8588 ADD X8, X8, 0xF
	0x02BA858C ADD X9, X31, 0x0
	0x02BA8590 AND X8, X8, 0x1FFFFFFFF
	0x02BA8594 SUB X23, X9, X8
	0x02BA8598 ADD X31, X23, 0x0
	0x02BA859C ADD X9, X26, 0xF
	0x02BA85A0 ADD X8, X31, 0x0
	0x02BA85A4 AND X9, X9, 0x1FFFFFFFF
	0x02BA85A8 SUB X19, X8, X9
	0x02BA85AC ADD X31, X19, 0x0
	0x02BA85B0 ADD X9, X28, 0xF
	0x02BA85B4 ADD X8, X31, 0x0
	0x02BA85B8 AND X9, X9, 0x1FFFFFFFF
	0x02BA85BC SUB X24, X8, X9
	0x02BA85C0 ADD X31, X24, 0x0
	0x02BA85C4 MOV X0, X24
	0x02BA85C8 MOV W1, W31
	0x02BA85CC MOV X2, X28
	0x02BA85D0 BL 0x3EB1B10
	0x02BA85D4 LDR X8, [X21 + 0xC0]
	0x02BA85D8 LDR X27, [X27 + 0x10]
	0x02BA85DC MOV X0, X19
	0x02BA85E0 MOV X2, X26
	0x02BA85E4 LDR X8, [X8 + 0x68]
	0x02BA85E8 LDR W8, [X8 + 0x28]
	0x02BA85EC CMP W8, 0x0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X25+40]
	013 Move X26, 0x1834000
	014 Move X22, X5
	015 Move W19, W4
	016 Move [X31+72], X8
	017 Move W8, [X26+1499]
	018 Move X20, X3
	019 Move X21, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x1577000
	027 Move X0, [X0+2968]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+1499], W8
	031 Move [X31+8], X31
	032 Move X0, [X24+16]
	033 Move X8, [X23+16]
	034 Move V0, [X23]
	035 Move [X31+32], X8
	036 Move [X31+1], V0
	037 Compare X0, 0
	038 JumpIfEqual {99}
	039 Move X8, [X22+32]
	040 Move V0, [X31+1]
	041 Move X9, [X31+32]
	042 Add X1, X31, 48
	043 Move X8, [X8+192]
	044 Add X2, X31, 8
	045 Move X3, [X8+144]
	046 Move [X31+3], V0
	047 Move [X31+64], X9
	048 Call Dictionary`2<NetAddress, Object>.TryGetValue, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {72}
	053 Move X22, [X31+8]
	054 Compare X22, 0
	055 JumpIfEqual {99}
	056 Move X10, 0x1577000
	057 Move X8, [X22]
	058 Move X10, [X10+2968]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 2
	070 Move X0, X22
	071 Call 0x1C5D788
	072 Move W0, W31
	073 Move W9, [X10]
	074 Add W9, W9, 2
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X4, [X0+8]
	079 Move X0, X22
	080 Move X1, X21
	081 Move X2, X20
	082 Move W3, W19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X8, [X25+40]
	085 Move X9, [X31+72]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X20, [X31+144]
	088 Move X19, [X31+152]
	089 Move X22, [X31+128]
	090 Move X21, [X31+136]
	091 Move X24, [X31+112]
	092 Move X23, [X31+120]
	093 Move X26, [X31+96]
	094 Move X25, [X31+104]
	095 Move X30, [X31+80]
	096 And W0, W0, 1
	097 Add X31, X31, 160
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x3EB2B20

Method: System.Boolean Decrypt(THandler handle, System.Byte* buffer, ref System.Int32 length, System.Int32 capacity)

Disassembly:
	0x02BA85F0 SUB X8, X29, 0x30
	0x02BA85F4 CSEL X1, X25, X8, LT
	0x02BA85F8 BL 0x3EB1AC0
	0x02BA85FC CBZ X27, 0x2BA86D4
	0x02BA8600 LDR X8, [X21 + 0xC0]
	0x02BA8604 LDR X9, [X8 + 0x68]
	0x02BA8608 LDR X1, [X8 + 0x90]
	0x02BA860C LDR W8, [X9 + 0x28]
	0x02BA8610 LDR X0, [X1]
	0x02BA8614 TBNZ X8, 0x1F, 0x2BA861C
	0x02BA8618 LDR X19, [X19]
	0x02BA861C STP X19, X24, [X29 - 0x28]
	0x02BA8620 LDR X8, [X1 + 0x10]
	0x02BA8624 SUB X3, X29, 0x28
	0x02BA8628 SUB X4, X29, 0xC
	0x02BA862C MOV X2, X27
	0x02BA8630 BLR X8
	0x02BA8634 LDURB W8, [X29 - 0xC]
	0x02BA8638 CBZ W8, 0x2BA86A0
	0x02BA863C LDR X8, [X22 + 0x20]
	0x02BA8640 LDR X8, [X8 + 0xC0]
	0x02BA8644 LDR X0, [X8 + 0x40]
	0x02BA8648 LDRB W9, [X0 + 0x135]
	0x02BA864C TBNZ X9, 0x0, 0x2BA865C
	0x02BA8650 BL 0x1C5C684
	0x02BA8654 LDR X8, [X22 + 0x20]
	0x02BA8658 LDR X8, [X8 + 0xC0]
	0x02BA865C LDR X1, [X8 + 0xD8]
	0x02BA8660 LDUR W8, [X29 - 0x3C]
	0x02BA8664 LDUR X9, [X29 - 0x48]
	0x02BA8668 SUB X4, X29, 0x28
	0x02BA866C SUB X5, X29, 0x10
	0x02BA8670 STUR W8, [X29 - 0xC]
	0x02BA8674 LDUR X8, [X29 - 0x38]
	0x02BA8678 MOV X2, X23
	0x02BA867C MOV X3, X24
	0x02BA8680 STP X9, X8, [X29 - 0x28]
	0x02BA8684 SUB X8, X29, 0xC
	0x02BA8688 STUR X8, [X29 - 0x18]
	0x02BA868C BL 0x1C17728
	0x02BA8690 LDURB W8, [X29 - 0x10]
	0x02BA8694 CMP W8, 0x0
	0x02BA8698 CSET W0, NE
	0x02BA869C B 0x2BA86A4
	0x02BA86A0 MOV W0, W31
	0x02BA86A4 LDR X8, [X20 + 0x28]
	0x02BA86A8 LDUR X9, [X29 - 0x8]
	0x02BA86AC CMP X8, X9
	0x02BA86B0 B.NE 0x2BA86D8
	0x02BA86B4 ADD X31, X29, 0x0
	0x02BA86B8 LDP X20, X19, [X31 + 0x50]
	0x02BA86BC LDP X22, X21, [X31 + 0x40]
	0x02BA86C0 LDP X24, X23, [X31 + 0x30]
	0x02BA86C4 LDP X26, X25, [X31 + 0x20]
	0x02BA86C8 LDP X28, X27, [X31 + 0x10]
	0x02BA86CC LDP X29, X30, [X31], #0x60
	0x02BA86D0 RET
	0x02BA86D4 BL 0x1C16F20
	0x02BA86D8 BL 0x3EB1B20
	0x02BA86DC STP X29, X30, [X31 - 0x60]!
	0x02BA86E0 STP X28, X27, [X31 + 0x10]
	0x02BA86E4 STP X26, X25, [X31 + 0x20]
	0x02BA86E8 STP X24, X23, [X31 + 0x30]
	0x02BA86EC STP X22, X21, [X31 + 0x40]
	0x02BA86F0 STP X20, X19, [X31 + 0x50]
	0x02BA86F4 ADD X29, X31, 0x0
	0x02BA86F8 SUB X31, X31, 0x50
	0x02BA86FC STUR W4, [X29 - 0x3C]
	0x02BA8700 STUR X3, [X29 - 0x38]
	0x02BA8704 STUR X2, [X29 - 0x48]
	0x02BA8708 MRS X20, 0xC000
	0x02BA870C LDR X8, [X20 + 0x28]
	0x02BA8710 MOV X22, X5
	0x02BA8714 MOV X25, X1
	0x02BA8718 MOV X27, X0
	0x02BA871C STUR X8, [X29 - 0x8]
	0x02BA8720 STUR X1, [X29 - 0x30]
	0x02BA8724 LDR X21, [X5 + 0x20]
	0x02BA8728 LDR X9, [X21 + 0xC0]
	0x02BA872C LDR X8, [X9 + 0x40]
	0x02BA8730 LDR X9, [X9 + 0x68]
	0x02BA8734 LDR W28, [X8 + 0xFC]
	0x02BA8738 LDRB W10, [X8 + 0x135]
	0x02BA873C LDR W26, [X9 + 0xFC]
	0x02BA8740 TBNZ X10, 0x0, 0x2BA8758
	0x02BA8744 MOV X0, X8
	0x02BA8748 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X25+40]
	013 Move X26, 0x1834000
	014 Move X22, X5
	015 Move W19, W4
	016 Move [X31+72], X8
	017 Move W8, [X26+1500]
	018 Move X20, X3
	019 Move X21, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x1577000
	027 Move X0, [X0+2968]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+1500], W8
	031 Move [X31+8], X31
	032 Move X0, [X24+16]
	033 Move X8, [X23+16]
	034 Move V0, [X23]
	035 Move [X31+32], X8
	036 Move [X31+1], V0
	037 Compare X0, 0
	038 JumpIfEqual {99}
	039 Move X8, [X22+32]
	040 Move V0, [X31+1]
	041 Move X9, [X31+32]
	042 Add X1, X31, 48
	043 Move X8, [X8+192]
	044 Add X2, X31, 8
	045 Move X3, [X8+144]
	046 Move [X31+3], V0
	047 Move [X31+64], X9
	048 Call Dictionary`2<NetAddress, Object>.TryGetValue, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {72}
	053 Move X22, [X31+8]
	054 Compare X22, 0
	055 JumpIfEqual {99}
	056 Move X10, 0x1577000
	057 Move X8, [X22]
	058 Move X10, [X10+2968]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 3
	070 Move X0, X22
	071 Call 0x1C5D788
	072 Move W0, W31
	073 Move W9, [X10]
	074 Add W9, W9, 3
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X4, [X0+8]
	079 Move X0, X22
	080 Move X1, X21
	081 Move X2, X20
	082 Move W3, W19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X8, [X25+40]
	085 Move X9, [X31+72]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X20, [X31+144]
	088 Move X19, [X31+152]
	089 Move X22, [X31+128]
	090 Move X21, [X31+136]
	091 Move X24, [X31+112]
	092 Move X23, [X31+120]
	093 Move X26, [X31+96]
	094 Move X25, [X31+104]
	095 Move X30, [X31+80]
	096 And W0, W0, 1
	097 Add X31, X31, 160
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x3EB2B20

Method: System.Void .ctor()

Disassembly:
	0x02BA874C LDR W8, [X0 + 0xFC]
	0x02BA8750 LDR X21, [X22 + 0x20]
	0x02BA8754 B 0x2BA875C
	0x02BA8758 MOV W8, W28
	0x02BA875C ADD W8, W8, 0x10
	0x02BA8760 ADD X8, X8, 0xF
	0x02BA8764 ADD X9, X31, 0x0
	0x02BA8768 AND X8, X8, 0x1FFFFFFFF
	0x02BA876C SUB X23, X9, X8
	0x02BA8770 ADD X31, X23, 0x0
	0x02BA8774 ADD X9, X26, 0xF
	0x02BA8778 ADD X8, X31, 0x0
	0x02BA877C AND X9, X9, 0x1FFFFFFFF
	0x02BA8780 SUB X19, X8, X9
	0x02BA8784 ADD X31, X19, 0x0
	0x02BA8788 ADD X9, X28, 0xF
	0x02BA878C ADD X8, X31, 0x0
	0x02BA8790 AND X9, X9, 0x1FFFFFFFF
	0x02BA8794 SUB X24, X8, X9
	0x02BA8798 ADD X31, X24, 0x0
	0x02BA879C MOV X0, X24
	0x02BA87A0 MOV W1, W31
	0x02BA87A4 MOV X2, X28
	0x02BA87A8 BL 0x3EB1B10
	0x02BA87AC LDR X8, [X21 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+8]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Call 0x1C17F10
	019 Move X8, [X20+32]
	020 Move X20, X0
	021 Move X8, [X8+192]
	022 Move X1, [X8+248]
	023 Call Dictionary`2<NetAddress, Object>..ctor, X0
	024 Move [X19+16], X20
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Call Object..ctor, X0
	031 Return 

