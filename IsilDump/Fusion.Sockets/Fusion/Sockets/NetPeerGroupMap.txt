Type: Fusion.Sockets.NetPeerGroupMap

Method: System.Void Dispose(Fusion.Sockets.NetPeerGroupMap* map)

Disassembly:
	0x01EFF628 CMP W22, W23
	0x01EFF62C B.NE 0x1EFF6C4
	0x01EFF630 LDR X8, [X19 + 0x38]
	0x01EFF634 LDUR V0, [X19 + 0x28]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X1, X31
	004 Call Native.Free, X0
	005 Return 
	006 Return 

Method: Fusion.Sockets.NetPeerGroupMap* Allocate(System.Int32 capacity)

Disassembly:
	0x01EFF204 MOV X0, X19
	0x01EFF208 MOV X1, X31
	0x01EFF20C MOV X2, X20
	0x01EFF210 BL 0x1EFF5C0
	0x01EFF214 LDR X8, [X21 + 0x28]
	0x01EFF218 LDR X9, [X31 + 0x18]
	0x01EFF21C CMP X8, X9
	0x01EFF220 B.NE 0x1EFF234
	0x01EFF224 LDP X20, X19, [X31 + 0x30]
	0x01EFF228 LDP X30, X21, [X31 + 0x20]
	0x01EFF22C ADD X31, X31, 0x40
	0x01EFF230 RET
	0x01EFF234 BL 0x3EB1B20
	0x01EFF238 SUB X31, X31, 0x60
	0x01EFF23C STP X30, X25, [X31 + 0x20]
	0x01EFF240 STP X24, X23, [X31 + 0x30]
	0x01EFF244 STP X22, X21, [X31 + 0x40]
	0x01EFF248 STP X20, X19, [X31 + 0x50]
	0x01EFF24C MRS X22, 0xC000
	0x01EFF250 LDR X8, [X22 + 0x28]
	0x01EFF254 STR X8, [X31 + 0x18]
	0x01EFF258 CBZ X0, 0x1EFF3AC
	0x01EFF25C MOV X21, X0
	0x01EFF260 LDR X8, [X1 + 0x10]
	0x01EFF264 LDR V0, [X1]
	0x01EFF268 LDR X0, [X0 + 0x158]
	0x01EFF26C MOV X19, X2
	0x01EFF270 ADD X1, X31, 0x0
	0x01EFF274 MOV X2, X3
	0x01EFF278 STR X8, [X31 + 0x10]
	0x01EFF27C STR V0, [X31]
	0x01EFF280 BL 0x1EFCC0C
	0x01EFF284 MOV X20, X0
	0x01EFF288 CBZ X0, 0x1EFF380
	0x01EFF28C ADRP X23, 0x24D9000
	0x01EFF290 LDRB W8, [X23 + 0xF18]
	0x01EFF294 CBNZ W8, 0x1EFF2AC
	0x01EFF298 ADRP X0, 0x21FC000
	0x01EFF29C LDR X0, [X0 + 0x708]
	0x01EFF2A0 BL 0x1C16CF4
	0x01EFF2A4 MOVZ W8, 0x1
	0x01EFF2A8 STRB W8, [X23 + 0xF18]
	0x01EFF2AC LDRB W8, [X21 + 0x20]
	0x01EFF2B0 ADRP X24, 0x21FC000
	0x01EFF2B4 LDR X23, [X21 + 0x18]
	0x01EFF2B8 LDR X24, [X24 + 0x708]
	0x01EFF2BC CMP W8, 0x1
	0x01EFF2C0 B.NE 0x1EFF308
	0x01EFF2C4 ADRP X25, 0x24D9000
	0x01EFF2C8 LDRB W8, [X25 + 0xF17]
	0x01EFF2CC CBNZ W8, 0x1EFF2E4
	0x01EFF2D0 ADRP X0, 0x21FC000
	0x01EFF2D4 LDR X0, [X0 + 0x708]
	0x01EFF2D8 BL 0x1C16CF4
	0x01EFF2DC MOVZ W8, 0x1
	0x01EFF2E0 STRB W8, [X25 + 0xF17]
	0x01EFF2E4 LDR X0, [X24]
	0x01EFF2E8 LDR W8, [X0 + 0xE0]
	0x01EFF2EC CBNZ W8, 0x1EFF2F4
	0x01EFF2F0 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x24DB000
	008 Move X21, 0x21FD000
	009 Move W8, [X20+1615]
	010 Move X21, [X21+1760]
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x21FD000
	017 Move X0, [X0+1760]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1615], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W19
	027 ShiftRight W0, 31
	028 And W0, W0, 0x3FFFFFFF
	029 Move X1, X31
	030 Call Primes.GetNextPrime, X0
	031 Move W20, W0
	032 Move W0, 56
	033 Move X1, X31
	034 Move W23, 56
	035 Call Native.RoundToMaxAlignment, X0
	036 Move W22, W0
	037 Move W0, W20
	038 ShiftRight W0, 29
	039 And W0, W0, 0xFFFFFFF
	040 Move X1, X31
	041 Call Native.RoundToMaxAlignment, X0
	042 Move W21, W0
	043 Multiply W0, W20, W23
	044 Move X1, X31
	045 Call Native.RoundToMaxAlignment, X0
	046 Add W8, W21, W22
	047 Add W0, W8, W0
	048 Move X1, X31
	049 Call Native.MallocAndClear, X0
	050 Compare X0, 0
	051 JumpIfEqual {77}
	052 Add X9, X0, W22
	053 Move X10, W19
	054 Move X11, W20
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X8, X9, W21
	057 Move [X0+24], X31
	058 Move [X0+32], X31
	059 Move [X0], X9
	060 Move [X0+8], X8
	061 Move [X0+40], X10
	062 Move [X0+48], X11
	063 Move W9, W19
	064 Move W10, 0xFFFF
	065 Compare X8, 0
	066 JumpIfEqual {77}
	067 NotImplemented "Instruction STRH not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X8, X8, 56
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return X0
	077 Call 0x1C17F20

Method: System.UInt64 get_Count()

Disassembly:
	0x01F03880 TBZ X0, 0x0, 0x1F038B4
	0x01F03884 ADRP X8, 0x21FA000
	0x01F03888 LDR X8, [X8 + 0x2C8]

ISIL:
	001 Move X8, [X0+24]
	002 Move X9, [X0+32]
	003 Subtract X0, X8, X9
	004 Return X0

Method: System.Boolean get_Full()

Disassembly:
	0x01F0388C LDR X0, [X8]
	0x01F03890 LDR W8, [X0 + 0xE0]
	0x01F03894 CBNZ W8, 0x1F0389C
	0x01F03898 BL 0x1C16DFC
	0x01F0389C MOV X0, X19

ISIL:
	001 Move X8, [X0+24]
	002 Move X9, [X0+48]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Int32 Remove(Fusion.Sockets.NetAddress address)

Disassembly:
	0x01EFEA44 STRB W8, [X19 + 0x640]
	0x01EFEA48 STP X31, X31, [X31 + 0x20]
	0x01EFEA4C CBZ X21, 0x1EFEE74
	0x01EFEA50 LDR W8, [X21 + 0x150]
	0x01EFEA54 CBZ W8, 0x1EFEE40
	0x01EFEA58 ADRP X29, 0x21FF000
	0x01EFEA5C ADRP X28, 0x21F5000
	0x01EFEA60 LDR X29, [X29 + 0x158]
	0x01EFEA64 LDR X28, [X28 + 0x5A8]
	0x01EFEA68 LDR X9, [X21 + 0x148]
	0x01EFEA6C SUB W8, W8, 0x1
	0x01EFEA70 STR W8, [X21 + 0x150]
	0x01EFEA74 LDR X22, [X9, W8, SXTW]
	0x01EFEA78 LDR X8, [X31 + 0x18]
	0x01EFEA7C MOVZ W9, 0x1
	0x01EFEA80 STRB W9, [X8]
	0x01EFEA84 LDR X8, [X22 + 0x40]
	0x01EFEA88 LDRB W9, [X8]
	0x01EFEA8C CMP W9, 0x1
	0x01EFEA90 B.NE 0x1EFEB14
	0x01EFEA94 LDRB W8, [X8 + 0x1]
	0x01EFEA98 CMP W8, 0x1
	0x01EFEA9C B.NE 0x1EFEB14
	0x01EFEAA0 CBZ X22, 0x1EFEE74
	0x01EFEAA4 LDR X8, [X22 + 0x10]
	0x01EFEAA8 LDR V0, [X22]
	0x01EFEAAC LDR X0, [X21 + 0x160]
	0x01EFEAB0 ADD X1, X31, 0xF0
	0x01EFEAB4 STR X8, [X31 + 0x100]
	0x01EFEAB8 STR V0, [X31 + 0xF]
	0x01EFEABC BL 0x1EFE87C
	0x01EFEAC0 ORN W8, W31, W0, 0x0
	0x01EFEAC4 ANDS W31, W8, 0xFFFF
	0x01EFEAC8 B.NE 0x1EFEB14
	0x01EFEACC LDRH W8, [X22 + 0x38]
	0x01EFEAD0 LDR X9, [X22 + 0x10]
	0x01EFEAD4 LDR V0, [X22]
	0x01EFEAD8 LDR X0, [X21 + 0x160]
	0x01EFEADC SUB W2, W8, 0x1
	0x01EFEAE0 ADD X1, X31, 0xD0
	0x01EFEAE4 STR X9, [X31 + 0xE0]
	0x01EFEAE8 STR V0, [X31 + 0xD]
	0x01EFEAEC BL 0x1EFDB8C
	0x01EFEAF0 TBZ X0, 0x0, 0x1EFEE30
	0x01EFEAF4 LDR W8, [X22 + 0x38]
	0x01EFEAF8 LDR X9, [X21 + 0x168]
	0x01EFEAFC MOVZ X10, 0xFFFF0000
	0x01EFEB00 ADD X8, X10, X8, 0x30, LSL
	0x01EFEB04 SBFM X8, X8, 0x2E, 0x3F
	0x01EFEB08 LDR W10, [X8, X9, LSL]
	0x01EFEB0C ADD W10, W10, 0x1
	0x01EFEB10 STR W10, [X8, X9, LSL]
	0x01EFEB14 LDRH W8, [X22 + 0x38]
	0x01EFEB18 CBZ W8, 0x1EFEC74
	0x01EFEB1C ADRP X8, 0x21FC000
	0x01EFEB20 LDR X8, [X8 + 0xC68]
	0x01EFEB24 LDR W23, [X22 + 0x50]
	0x01EFEB28 LDR X0, [X8]
	0x01EFEB2C LDR W8, [X0 + 0xE0]
	0x01EFEB30 CBNZ W8, 0x1EFEB38
	0x01EFEB34 BL 0x1C16DFC
	0x01EFEB38 MOV W0, W23
	0x01EFEB3C MOV X1, X31
	0x01EFEB40 BL 0x1E34CBC
	0x01EFEB44 LDR X24, [X22 + 0x40]
	0x01EFEB48 MOV W23, W0
	0x01EFEB4C CMP W0, 0x501
	0x01EFEB50 B.LT 0x1EFECFC
	0x01EFEB54 LDRB W8, [X24]
	0x01EFEB58 CMP W8, 0x3
	0x01EFEB5C B.NE 0x1EFECFC
	0x01EFEB60 ADD X0, X31, 0x20
	0x01EFEB64 MOVZ W2, 0xE
	0x01EFEB68 MOV X1, X24
	0x01EFEB6C MOV X3, X31
	0x01EFEB70 STP X31, X31, [X31 + 0x20]
	0x01EFEB74 BL 0x1E35764
	0x01EFEB78 LDR X8, [X22 + 0x40]
	0x01EFEB7C SUB W23, W23, 0xE
	0x01EFEB80 MOVZ W19, 0x1
	0x01EFEB84 ADD X24, X8, 0xE
	0x01EFEB88 LDR X0, [X28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x24DC000
	008 Move X21, 0x2200000
	009 Move W8, [X22+1616]
	010 Move X21, [X21+120]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2200000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1616], W8
	022 Move X0, [X21]
	023 Move X23, [X20]
	024 Move X22, [X20+8]
	025 Move X21, [X20+16]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, X23
	031 ShiftRight X8, 59
	032 And X8, X8, 0x3FFFFFF
	033 Subtract X8, X8, X23
	034 Add X8, X8, X22
	035 Move X12, [X19+48]
	036 Move X9, X8
	037 ShiftRight X9, 59
	038 And X9, X9, 0x3FFFFFF
	039 Move W10, 0xBA4F
	040 Subtract X8, X9, X8
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 Add X8, X8, X21
	043 Move X9, [X19]
	044 Add X11, X8, X10
	045 NotImplemented "Instruction UDIV not yet implemented."
	046 NotImplemented "Instruction MSUB not yet implemented."
	047 Move X13, [X9]
	048 Compare X13, 0
	049 JumpIfEqual {67}
	050 Move X8, X31
	051 Move X12, X8
	052 Move X8, X13
	053 Move X13, [X13+8]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X13, [X8+24]
	056 Move X14, [X20]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X13, [X8+32]
	059 Move X14, [X20+8]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X13, [X8+40]
	062 Move X14, [X20+16]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X13, [X8]
	065 Compare X13, 0
	066 JumpIfNotEqual {51}
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W0, TEMP
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return X0
	077 Move X11, [X8]
	078 Compare X12, 0
	079 JumpIfEqual {81}
	080 Move [X12], X11
	081 Move [X9], X11
	082 NotImplemented "Instruction MOVI not yet implemented."
	083 Move W9, 0xFFFF
	084 NotImplemented "Instruction LDRSH not yet implemented."
	085 Move [X8+48], X31
	086 Move [X8], V0
	087 Move [X8+8], V0
	088 Move [X8+2], V0
	089 NotImplemented "Instruction STRH not yet implemented."
	090 Move X9, [X19+16]
	091 Move [X8], X9
	092 Move W9, 1
	093 Move [X8+16], W9
	094 Move X9, [X19+32]
	095 Move [X19+16], X8
	096 Add X8, X9, 1
	097 Move [X19+32], X8

Method: System.Boolean Insert(Fusion.Sockets.NetAddress address, System.Int16 group)

Disassembly:
	0x01EFEB8C LDR W8, [X0 + 0xE0]
	0x01EFEB90 CBNZ W8, 0x1EFEB98
	0x01EFEB94 BL 0x1C16DFC
	0x01EFEB98 MOVZ W0, 0x462
	0x01EFEB9C MOV W1, W23
	0x01EFEBA0 MOV X2, X31
	0x01EFEBA4 BL 0x337EE94
	0x01EFEBA8 SUBS W23, W23, W0
	0x01EFEBAC ORR W8, W19, 0x80
	0x01EFEBB0 CSEL W8, W8, W19, EQ
	0x01EFEBB4 STRB W8, [X31 + 0x21]
	0x01EFEBB8 MOV W25, W0
	0x01EFEBBC LDR X0, [X21 + 0x118]
	0x01EFEBC0 ADD X1, X31, 0x20
	0x01EFEBC4 MOVZ W2, 0xE
	0x01EFEBC8 MOV X3, X31
	0x01EFEBCC BL 0x1E35764
	0x01EFEBD0 LDR X8, [X21 + 0x118]
	0x01EFEBD4 MOV X1, X24
	0x01EFEBD8 MOV W2, W25
	0x01EFEBDC MOV X3, X31
	0x01EFEBE0 ADD X0, X8, 0xE
	0x01EFEBE4 BL 0x1E35764
	0x01EFEBE8 CBZ X22, 0x1EFEE74
	0x01EFEBEC CBZ X20, 0x1EFEE74
	0x01EFEBF0 LDR X8, [X20]
	0x01EFEBF4 LDP X26, X27, [X21 + 0x118]
	0x01EFEBF8 LDR X1, [X29]
	0x01EFEBFC LDRH W9, [X8 + 0x12E]
	0x01EFEC00 CBZ X9, 0x1EFEC24
	0x01EFEC04 LDR X10, [X8 + 0xB0]
	0x01EFEC08 ADD X10, X10, 0x8
	0x01EFEC0C LDUR X11, [X10 - 0x8]
	0x01EFEC10 CMP X11, X1
	0x01EFEC14 B.EQ 0x1EFEC34
	0x01EFEC18 SUBS X9, X9, 0x1
	0x01EFEC1C ADD X10, X10, 0x10
	0x01EFEC20 B.NE 0x1EFEC0C
	0x01EFEC24 MOVZ W2, 0x7
	0x01EFEC28 MOV X0, X20
	0x01EFEC2C BL 0x1C5C788
	0x01EFEC30 B 0x1EFEC44
	0x01EFEC34 LDR W9, [X10]
	0x01EFEC38 ADD W9, W9, 0x7
	0x01EFEC3C ADD X8, X8, W9, 0x4, SXTW
	0x01EFEC40 ADD X0, X8, 0x138
	0x01EFEC44 LDP X8, X5, [X0]
	0x01EFEC48 ADD W4, W25, 0xE
	0x01EFEC4C MOV X0, X20
	0x01EFEC50 MOV X1, X27
	0x01EFEC54 MOV X2, X22
	0x01EFEC58 MOV X3, X26
	0x01EFEC5C ADD X24, X24, W25, SXTW
	0x01EFEC60 ADD W19, W19, 0x1
	0x01EFEC64 BLR X8
	0x01EFEC68 CMP W23, 0x0
	0x01EFEC6C B.GT 0x1EFEB88
	0x01EFEC70 B 0x1EFEDBC
	0x01EFEC74 CBZ X22, 0x1EFEE74
	0x01EFEC78 LDR X8, [X22 + 0x10]
	0x01EFEC7C LDR V0, [X22]
	0x01EFEC80 LDR X0, [X21 + 0x160]
	0x01EFEC84 ADD X1, X31, 0xB0
	0x01EFEC88 STR X8, [X31 + 0xC0]
	0x01EFEC8C STR V0, [X31 + 0xB]
	0x01EFEC90 BL 0x1EFDA44
	0x01EFEC94 LDR X8, [X22 + 0x10]
	0x01EFEC98 LDR V0, [X22]
	0x01EFEC9C STR X8, [X31 + 0xA0]
	0x01EFECA0 STR V0, [X31 + 0x9]
	0x01EFECA4 CBZ X20, 0x1EFEE74
	0x01EFECA8 LDR V0, [X31 + 0x9]
	0x01EFECAC LDR X8, [X31 + 0xA0]
	0x01EFECB0 LDR X1, [X29]
	0x01EFECB4 MOV W23, W0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x24DC000
	009 Move X22, 0x2200000
	010 Move W8, [X23+1617]
	011 Move X22, [X22+120]
	012 Move W21, W2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2200000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1617], W8
	024 Move X0, [X22]
	025 Move X24, [X20]
	026 Move X23, [X20+8]
	027 Move X22, [X20+16]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X9, [X19+16]
	033 Move X8, [X19+48]
	034 Compare X9, 0
	035 JumpIfEqual {41}
	036 Move X10, [X9]
	037 Move X11, [X19+32]
	038 Move [X19+16], X10
	039 Subtract X10, X11, 1
	040 Move [X19+32], X10
	041 Move X9, [X19+24]
	042 Move X10, [X19+40]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W0, W31
	045 Move X10, [X19+8]
	046 Move W12, 56
	047 Add X11, X9, 1
	048 Move [X19+24], X11
	049 NotImplemented "Instruction NOP not yet implemented."
	050 NotImplemented "Instruction MADD not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {89}
	053 Move X10, X24
	054 ShiftRight X10, 59
	055 And X10, X10, 0x3FFFFFF
	056 Subtract X10, X10, X24
	057 Add X10, X10, X23
	058 Move X12, X10
	059 ShiftRight X12, 59
	060 And X12, X12, 0x3FFFFFF
	061 Move W11, 0xBA4F
	062 Subtract X10, X12, X10
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 Add X10, X10, X22
	065 Add X10, X10, X11
	066 NotImplemented "Instruction STRH not yet implemented."
	067 Move [X9+8], X10
	068 Move X11, [X20+16]
	069 Move V0, [X20]
	070 Move W12, 2
	071 Move [X9+16], W12
	072 Move [X9+40], X11
	073 Move [X9+24], V0
	074 Move X11, [X19]
	075 NotImplemented "Instruction UDIV not yet implemented."
	076 NotImplemented "Instruction MSUB not yet implemented."
	077 Move W0, 1
	078 Move X10, [X11]
	079 Move [X9], X10
	080 Move [X11], X9
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Int16 Find(Fusion.Sockets.NetAddress address)

Disassembly:
	0x01EFF87C LDR X9, [X31 + 0x198]
	0x01EFF880 CMP X8, X9
	0x01EFF884 B.NE 0x1EFF8A4
	0x01EFF888 LDP X20, X19, [X31 + 0x1D0]
	0x01EFF88C LDP X22, X21, [X31 + 0x1C0]
	0x01EFF890 LDP X24, X23, [X31 + 0x1B0]
	0x01EFF894 LDP X29, X30, [X31 + 0x1A0]
	0x01EFF898 ADD X31, X31, 0x1E0
	0x01EFF89C RET
	0x01EFF8A0 BL 0x1C16F20
	0x01EFF8A4 BL 0x3EB1B20
	0x01EFF8A8 SUB X31, X31, 0x70
	0x01EFF8AC STR X30, [X31 + 0x20]
	0x01EFF8B0 STP X26, X25, [X31 + 0x30]
	0x01EFF8B4 STP X24, X23, [X31 + 0x40]
	0x01EFF8B8 STP X22, X21, [X31 + 0x50]
	0x01EFF8BC STP X20, X19, [X31 + 0x60]
	0x01EFF8C0 MRS X24, 0xC000
	0x01EFF8C4 LDR X8, [X24 + 0x28]
	0x01EFF8C8 ADRP X26, 0x24DA000
	0x01EFF8CC ADRP X25, 0x21FE000
	0x01EFF8D0 MOV X19, X4
	0x01EFF8D4 STR X8, [X31 + 0x18]
	0x01EFF8D8 LDRB W8, [X26 + 0x641]
	0x01EFF8DC LDR X25, [X25 + 0x78]
	0x01EFF8E0 MOV X20, X3
	0x01EFF8E4 MOV W22, W2
	0x01EFF8E8 MOV X23, X1
	0x01EFF8EC MOV X21, X0
	0x01EFF8F0 TBNZ X8, 0x0, 0x1EFF908
	0x01EFF8F4 ADRP X0, 0x21FE000
	0x01EFF8F8 LDR X0, [X0 + 0x78]
	0x01EFF8FC BL 0x1C16CF4
	0x01EFF900 MOVZ W8, 0x1
	0x01EFF904 STRB W8, [X26 + 0x641]
	0x01EFF908 LDR X0, [X25]
	0x01EFF90C LDR W8, [X0 + 0xE0]
	0x01EFF910 CBNZ W8, 0x1EFF918
	0x01EFF914 BL 0x1C16DFC
	0x01EFF918 ADD X8, X31, 0x0
	0x01EFF91C MOV X0, X23
	0x01EFF920 MOV W1, W22
	0x01EFF924 BL 0x1EF8988
	0x01EFF928 ADD X1, X31, 0x0
	0x01EFF92C MOV X0, X21
	0x01EFF930 MOV X2, X20
	0x01EFF934 MOV X3, X19
	0x01EFF938 BL 0x1EFF1B4
	0x01EFF93C LDR X8, [X24 + 0x28]
	0x01EFF940 LDR X9, [X31 + 0x18]
	0x01EFF944 CMP X8, X9
	0x01EFF948 B.NE 0x1EFF968
	0x01EFF94C LDP X20, X19, [X31 + 0x60]
	0x01EFF950 LDP X22, X21, [X31 + 0x50]
	0x01EFF954 LDP X24, X23, [X31 + 0x40]
	0x01EFF958 LDP X26, X25, [X31 + 0x30]
	0x01EFF95C LDR X30, [X31 + 0x20]
	0x01EFF960 ADD X31, X31, 0x70
	0x01EFF964 RET
	0x01EFF968 BL 0x3EB1B20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x24DB000
	008 Move X21, 0x21FF000
	009 Move W8, [X22+1618]
	010 Move X21, [X21+120]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x21FF000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1618], W8
	022 Move X0, [X21]
	023 Move X23, [X19]
	024 Move X22, [X19+8]
	025 Move X21, [X19+16]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, X23
	031 ShiftRight X8, 59
	032 And X8, X8, 0x3FFFFFF
	033 Subtract X8, X8, X23
	034 Add X8, X8, X22
	035 Move X10, [X20+48]
	036 Move X11, X8
	037 ShiftRight X11, 59
	038 And X11, X11, 0x3FFFFFF
	039 Move W9, 0xBA4F
	040 Subtract X8, X11, X8
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 Add X8, X8, X21
	043 Move X11, [X20]
	044 Add X8, X8, X9
	045 NotImplemented "Instruction UDIV not yet implemented."
	046 NotImplemented "Instruction MSUB not yet implemented."
	047 Move X9, [X11]
	048 Compare X9, 0
	049 JumpIfEqual {64}
	050 Move X10, [X9+8]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X10, [X9+24]
	053 Move X11, [X19]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X10, [X9+32]
	056 Move X11, [X19+8]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X10, [X9+40]
	059 Move X11, [X19+16]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X9]
	062 Compare X9, 0
	063 JumpIfNotEqual {50}
	064 Move W0, 0xFFFF
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Return X0
	072 NotImplemented "Instruction LDRH not yet implemented."

