Type: Fusion.Sockets.NetSocketNative

Method: System.Boolean get_SupportsMultiThreading()

Disassembly:
	0x01F04D24 TBZ X0, 0x0, 0x1F04D74
	0x01F04D28 ADRP X8, 0x21EF000

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void Initialize(Fusion.Sockets.NetConfig config)

Disassembly:
	0x01F03DB0 B 0x2DAA59C
	0x01F03DB4 LDP X20, X19, [X31 + 0x10]
	0x01F03DB8 MOV W0, W31
	0x01F03DBC LDP X30, X21, [X31], #0x20
	0x01F03DC0 RET
	0x01F03DC4 BL 0x1C16F20
	0x01F03DC8 SUB X31, X31, 0xA0
	0x01F03DCC STP X30, X23, [X31 + 0x70]
	0x01F03DD0 STP X22, X21, [X31 + 0x80]
	0x01F03DD4 STP X20, X19, [X31 + 0x90]
	0x01F03DD8 MRS X22, 0xC000
	0x01F03DDC LDR X8, [X22 + 0x28]
	0x01F03DE0 ADRP X23, 0x24D6000
	0x01F03DE4 MOV W20, W2
	0x01F03DE8 MOV X21, X1
	0x01F03DEC STR X8, [X31 + 0x68]
	0x01F03DF0 LDRB W8, [X23 + 0x669]
	0x01F03DF4 MOV X19, X0
	0x01F03DF8 TBNZ X8, 0x0, 0x1F03E34
	0x01F03DFC ADRP X0, 0x21FD000
	0x01F03E00 LDR X0, [X0 + 0xB48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24D7000
	005 Move X19, 0x21FE000
	006 Move W8, [X20+1625]
	007 Move X19, [X19+2744]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x21FE000
	013 Move X0, [X0+2744]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1625], W8
	017 Move X0, X31
	018 Call UDP.Initialize
	019 Move X1, [X19]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X2, X31
	025 Move X30, [X31+32]
	026 Call Assert.Always, X0, X1
	027 Return 

Method: Fusion.Sockets.NetSocket Create(Fusion.Sockets.NetConfig config)

Disassembly:
	0x01F03E88 CBZ X21, 0x1F03FC4
	0x01F03E8C ADRP X8, 0x21FD000
	0x01F03E90 LDR X8, [X8 + 0xB50]
	0x01F03E94 MOV X2, X0
	0x01F03E98 MOV X5, X1
	0x01F03E9C ADD X3, X31, 0x8
	0x01F03EA0 LDR X4, [X8]
	0x01F03EA4 MOV X0, X21
	0x01F03EA8 MOV X1, X2
	0x01F03EAC MOV X2, X5
	0x01F03EB0 BL 0x296159C
	0x01F03EB4 TBZ X0, 0x0, 0x1F03F9C
	0x01F03EB8 MOV X0, X20
	0x01F03EBC BL 0x1F04C10
	0x01F03EC0 CBZ X0, 0x1F03FC4
	0x01F03EC4 LDR W21, [X0 + 0x18]
	0x01F03EC8 MOV X0, X20
	0x01F03ECC BL 0x1F04C10
	0x01F03ED0 CBZ X0, 0x1F03FC4
	0x01F03ED4 LDR X0, [X0 + 0x10]
	0x01F03ED8 CBZ X0, 0x1F03FC4
	0x01F03EDC LDR X8, [X0]
	0x01F03EE0 LDP X9, X1, [X8 + 0x168]
	0x01F03EE4 BLR X9
	0x01F03EE8 ADRP X23, 0x21FA000
	0x01F03EEC LDR X23, [X23 + 0x78]
	0x01F03EF0 MOV X20, X0
	0x01F03EF4 LDR X8, [X23]
	0x01F03EF8 LDR W9, [X8 + 0xE0]
	0x01F03EFC CBNZ W9, 0x1F03F08
	0x01F03F00 MOV X0, X8
	0x01F03F04 BL 0x1C16DFC
	0x01F03F08 ADD X8, X31, 0x50
	0x01F03F0C MOV X0, X20
	0x01F03F10 MOV W1, W21
	0x01F03F14 MOV X2, X31
	0x01F03F18 BL 0x1EF8988
	0x01F03F1C LDR V0, [X31 + 0x5]
	0x01F03F20 LDR X8, [X31 + 0x60]
	0x01F03F24 ADD X0, X31, 0x30
	0x01F03F28 MOV X1, X31
	0x01F03F2C STR V0, [X31 + 0x3]
	0x01F03F30 STR X8, [X31 + 0x40]
	0x01F03F34 BL 0x1EF72B4
	0x01F03F38 TBZ X0, 0x0, 0x1F03F9C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x24D7000
	007 Move X21, 0x21FE000
	008 Move X20, 0x21FE000
	009 Move W8, [X22+1626]
	010 Move X21, [X21+2752]
	011 Move X20, [X20+2760]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x21FE000
	018 Move X0, [X0+2760]
	019 Call 0x1C17CF4
	020 Move X0, 0x21FE000
	021 Move X0, [X0+2752]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1626], W8
	025 Move W0, [X19+12]
	026 Move W1, [X19+16]
	027 Move X2, X31
	028 Call UDP.Create, X0, X1
	029 Move X1, X31
	030 Call Socket.op_Implicit, X0
	031 Move [X31+8], X0
	032 Add X0, X31, 8
	033 Move X1, X31
	034 Call Socket.get_IsCreated, X0
	035 Move X1, [X21]
	036 And W0, W0, 1
	037 Move X2, X31
	038 Call Assert.Always, X0, X1
	039 Move X0, [X31+8]
	040 Move X1, X31
	041 Call UDP.SetNonBlocking, X0
	042 Move X1, [X20]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Move X2, X31
	046 Call Assert.Always, X0, X1
	047 Move X0, [X31+8]
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0

Method: Fusion.Sockets.NetAddress Bind(Fusion.Sockets.NetSocket socket, Fusion.Sockets.NetConfig config)

Disassembly:
	0x01F04424 LDR X23, [X8 + 0x18]
	0x01F04428 LDR X1, [X20]
	0x01F0442C LDR W2, [X19]
	0x01F04430 MOV X3, X31
	0x01F04434 ADD W22, W23, 0x1
	0x01F04438 ADD X0, X1, W22, SXTW
	0x01F0443C BL 0x1E35758
	0x01F04440 LDR X8, [X20]
	0x01F04444 STRB W23, [X8]
	0x01F04448 LDR X8, [X21 + 0x18]
	0x01F0444C CBZ X8, 0x1F04514
	0x01F04450 LDR X1, [X8 + 0x18]
	0x01F04454 ADRP X8, 0x21FC000
	0x01F04458 LDR X9, [X20]
	0x01F0445C LDR X8, [X8 + 0xB78]
	0x01F04460 ADD X0, X9, 0x1
	0x01F04464 LDR X2, [X8]
	0x01F04468 BL 0x2221920
	0x01F0446C LDR V0, [X31 + 0x2]
	0x01F04470 LDR X8, [X31 + 0x30]
	0x01F04474 STR V0, [X21 + 0x2]
	0x01F04478 STR X8, [X21 + 0x30]
	0x01F0447C STP X31, X31, [X31 + 0x28]
	0x01F04480 STR X31, [X31 + 0x20]
	0x01F04484 LDR X0, [X21 + 0x10]
	0x01F04488 LDR V0, [X31 + 0x2]
	0x01F0448C LDR X8, [X31 + 0x30]
	0x01F04490 STR V0, [X31]
	0x01F04494 STR X8, [X31 + 0x10]
	0x01F04498 CBZ X0, 0x1F04514
	0x01F0449C ADRP X9, 0x21FC000
	0x01F044A0 LDR X8, [X20]
	0x01F044A4 LDR X9, [X9 + 0xB70]
	0x01F044A8 LDR V0, [X31]
	0x01F044AC LDR X10, [X31 + 0x10]
	0x01F044B0 ADD X2, X8, W22, SXTW
	0x01F044B4 LDR X5, [X9]
	0x01F044B8 ADD X1, X31, 0x40
	0x01F044BC MOVZ W4, 0x800
	0x01F044C0 MOV X3, X19
	0x01F044C4 STR V0, [X31 + 0x4]
	0x01F044C8 STR X10, [X31 + 0x50]
	0x01F044CC BL 0x2BA6EB0
	0x01F044D0 TBZ X0, 0x0, 0x1F0450C
	0x01F044D4 LDR W8, [X19]
	0x01F044D8 ADD W8, W8, W22
	0x01F044DC STR W8, [X19]
	0x01F044E0 MOVZ W0, 0x1
	0x01F044E4 LDR X8, [X25 + 0x28]
	0x01F044E8 LDR X9, [X31 + 0x58]
	0x01F044EC CMP X8, X9
	0x01F044F0 B.NE 0x1F04518
	0x01F044F4 LDP X20, X19, [X31 + 0x90]
	0x01F044F8 LDP X22, X21, [X31 + 0x80]
	0x01F044FC LDP X24, X23, [X31 + 0x70]
	0x01F04500 LDP X30, X25, [X31 + 0x60]
	0x01F04504 ADD X31, X31, 0xA0
	0x01F04508 RET
	0x01F0450C MOV W0, W31
	0x01F04510 B 0x1F044E4
	0x01F04514 BL 0x1C16F20
	0x01F04518 BL 0x3EB1B20
	0x01F0451C STR X30, [X31 - 0x20]!
	0x01F04520 STP X20, X19, [X31 + 0x10]
	0x01F04524 ADRP X20, 0x24D5000
	0x01F04528 LDRB W8, [X20 + 0x660]
	0x01F0452C MOV X19, X0
	0x01F04530 TBNZ X8, 0x0, 0x1F04548
	0x01F04534 ADRP X0, 0x21FC000
	0x01F04538 LDR X0, [X0 + 0xB80]
	0x01F0453C BL 0x1C16CF4
	0x01F04540 MOVZ W8, 0x1
	0x01F04544 STRB W8, [X20 + 0x660]
	0x01F04548 MOV X20, X19
	0x01F0454C LDR X0, [X20 + 0x10]!
	0x01F04550 CBZ X0, 0x1F04564
	0x01F04554 ADRP X8, 0x21FC000
	0x01F04558 LDR X8, [X8 + 0xB80]
	0x01F0455C LDR X1, [X8]
	0x01F04560 BL 0x2BA69AC
	0x01F04564 MOVI V0.2D, 0x0
	0x01F04568 STR X31, [X20 + 0x20]
	0x01F0456C STP V0, V0, [X20]
	0x01F04570 LDR X0, [X19 + 0x38]
	0x01F04574 CBZ X0, 0x1F04584
	0x01F04578 MOV X1, X31
	0x01F0457C BL 0x1E3585C
	0x01F04580 STR X31, [X19 + 0x38]
	0x01F04584 LDP X20, X19, [X31 + 0x10]
	0x01F04588 LDR X30, [X31], #0x20
	0x01F0458C RET
	0x01F04590 MOV X1, X31
	0x01F04594 B 0x33BDD8C
	0x01F04598 STR X30, [X31 - 0x20]!
	0x01F0459C STP X20, X19, [X31 + 0x10]
	0x01F045A0 ADRP X19, 0x24D5000
	0x01F045A4 ADRP X20, 0x21FC000
	0x01F045A8 LDRB W8, [X19 + 0x662]
	0x01F045AC LDR X20, [X20 + 0xB08]
	0x01F045B0 TBNZ X8, 0x0, 0x1F045C8
	0x01F045B4 ADRP X0, 0x21FC000
	0x01F045B8 LDR X0, [X0 + 0xB08]
	0x01F045BC BL 0x1C16CF4
	0x01F045C0 MOVZ W8, 0x1
	0x01F045C4 STRB W8, [X19 + 0x662]
	0x01F045C8 LDR X0, [X20]
	0x01F045CC BL 0x1C16F10
	0x01F045D0 MOV X1, X31
	0x01F045D4 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+320], X29
	003 Move [X31+336], X30
	004 Move [X31+344], X23
	005 Move [X31+352], X22
	006 Move [X31+360], X21
	007 Move [X31+368], X20
	008 Move [X31+376], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X20, X8
	011 Move X8, [X22+40]
	012 Move X19, X2
	013 Move X21, X1
	014 Add X0, X31, 40
	015 Move [X31+312], X8
	016 Move [X31+8], X1
	017 Move W2, 248
	018 Move X1, X19
	019 Add X23, X31, 288
	020 Call 0x3EB2AC0
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Move X8, [X31+136]
	023 Add X1, X31, 288
	024 Move X0, X21
	025 Move X2, X31
	026 Move [X23], V0
	027 Move [X31+304], X8
	028 Call UDP.Bind, X0, X1
	029 Compare W0, 0
	030 JumpIfNotEqual {58}
	031 Add X1, X31, 288
	032 Move X0, X21
	033 Move X2, X31
	034 Move [X31+288], X31
	035 Move [X31+296], X31
	036 Move [X31+304], X31
	037 Call UDP.GetAddress, X0, X1
	038 Compare W0, 0
	039 JumpIfNotEqual {96}
	040 Move V0, [X19+5]
	041 Move [X23], V0
	042 Move X8, [X31+304]
	043 Move V0, [X23]
	044 Move [X20+16], X8
	045 Move [X20], V0
	046 Move X8, [X22+40]
	047 Move X9, [X31+312]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+368]
	050 Move X19, [X31+376]
	051 Move X22, [X31+352]
	052 Move X21, [X31+360]
	053 Move X30, [X31+336]
	054 Move X23, [X31+344]
	055 Move X29, [X31+320]
	056 Add X31, X31, 384
	057 Return X0
	058 Add X0, X31, 8
	059 Move X1, X31
	060 Call UDP.Destroy, X0
	061 Add X0, X31, 40
	062 Move W2, 248
	063 Move X1, X19
	064 Call 0x3EB2AC0
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X8, [X31+136]
	067 Move X0, 0x21FD000
	068 Move [X31+1], V0
	069 Move [X31+32], X8
	070 Move X0, [X0+2832]
	071 Call 0x1C17D08
	072 Add X1, X31, 16
	073 Call 0x1C17E04
	074 Move X19, X0
	075 Move X0, 0x21FD000
	076 Move X0, [X0+2840]
	077 Call 0x1C17D08
	078 Move X1, X19
	079 Move X2, X31
	080 Call String.Format, X0, X1
	081 Move X19, X0
	082 Move X0, 0x21F0000
	083 Move X0, [X0+1456]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X1, X19
	087 Move X2, X31
	088 Move X20, X0
	089 Call InvalidOperationException..ctor, X0, X1
	090 Move X0, 0x21FD000
	091 Move X0, [X0+2848]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X20
	095 Call 0x1C17DEC
	096 Add X0, X31, 8
	097 Move X1, X31
	098 Call UDP.Destroy, X0
	099 Move X0, 0x21F0000
	100 Move X0, [X0+1456]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0x21FD000
	105 Move X0, [X0+2856]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call InvalidOperationException..ctor, X0, X1
	111 Move X0, 0x21FD000
	112 Move X0, [X0+2848]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Call 0x1C17DEC
	117 Call 0x3EB2B20

Method: System.Boolean CanFragment(Fusion.Sockets.NetAddress address)

Disassembly:
	0x01F0465C MOV W0, W31
	0x01F04660 RET

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean Poll(Fusion.Sockets.NetSocket socket, System.Int64 timeout)

Disassembly:
	0x01F0476C LDP X20, X19, [X31 + 0x40]
	0x01F04770 LDP X22, X21, [X31 + 0x30]
	0x01F04774 LDR X30, [X31 + 0x20]
	0x01F04778 ADD X31, X31, 0x50
	0x01F0477C RET
	0x01F04780 BL 0x1C16F20
	0x01F04784 BL 0x3EB1B20
	0x01F04788 SUB W8, W0, 0x2
	0x01F0478C AND W9, W8, 0xFF

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X2
	004 Move X2, X31
	005 Call UDP.Poll, X0, X1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Int32 Receive(Fusion.Sockets.NetSocket socket, Fusion.Sockets.NetAddress* address, System.Byte* buffer, System.Int32 bufferLength)

Disassembly:
	0x01F047F4 CBNZ W8, 0x1F04800
	0x01F047F8 BL 0x1C16DFC
	0x01F047FC LDR X0, [X19]
	0x01F04800 LDR X8, [X0 + 0xB8]
	0x01F04804 LDR X0, [X8]
	0x01F04808 CBZ X0, 0x1F04824
	0x01F0480C ADRP X8, 0x21FC000
	0x01F04810 LDR X8, [X8 + 0xB88]
	0x01F04814 LDP X20, X19, [X31 + 0x10]
	0x01F04818 LDR X1, [X8]
	0x01F0481C LDR X30, [X31], #0x20
	0x01F04820 B 0x2961800
	0x01F04824 BL 0x1C16F20
	0x01F04828 SUB X31, X31, 0x170
	0x01F0482C STP X29, X30, [X31 + 0x110]
	0x01F04830 STP X28, X27, [X31 + 0x120]
	0x01F04834 STP X26, X25, [X31 + 0x130]
	0x01F04838 STP X24, X23, [X31 + 0x140]
	0x01F0483C STP X22, X21, [X31 + 0x150]
	0x01F04840 STP X20, X19, [X31 + 0x160]
	0x01F04844 MRS X25, 0xC000
	0x01F04848 LDR X8, [X25 + 0x28]
	0x01F0484C ADRP X26, 0x24D5000
	0x01F04850 ADRP X28, 0x21F9000
	0x01F04854 MOV X19, X5
	0x01F04858 STR X8, [X31 + 0x108]
	0x01F0485C LDRB W8, [X26 + 0x668]
	0x01F04860 LDR X28, [X28 + 0x128]
	0x01F04864 MOV W24, W4
	0x01F04868 MOV X20, X3
	0x01F0486C MOV X21, X2
	0x01F04870 MOV X22, X1
	0x01F04874 MOV X23, X0
	0x01F04878 TBNZ X8, 0x0, 0x1F048B4
	0x01F0487C ADRP X0, 0x21F9000
	0x01F04880 LDR X0, [X0 + 0x130]
	0x01F04884 BL 0x1C16CF4
	0x01F04888 ADRP X0, 0x21FC000
	0x01F0488C LDR X0, [X0 + 0xB90]
	0x01F04890 BL 0x1C16CF4
	0x01F04894 ADRP X0, 0x21F9000
	0x01F04898 LDR X0, [X0 + 0x140]
	0x01F0489C BL 0x1C16CF4
	0x01F048A0 ADRP X0, 0x21F9000
	0x01F048A4 LDR X0, [X0 + 0x128]
	0x01F048A8 BL 0x1C16CF4
	0x01F048AC MOVZ W8, 0x1
	0x01F048B0 STRB W8, [X26 + 0x668]
	0x01F048B4 ADRP X29, 0x21F9000
	0x01F048B8 ADRP X27, 0x21FC000
	0x01F048BC LDR X29, [X29 + 0x130]
	0x01F048C0 LDR X27, [X27 + 0xB90]
	0x01F048C4 ADD X0, X31, 0x8
	0x01F048C8 MOVZ W2, 0x100
	0x01F048CC MOV W1, W31
	0x01F048D0 ADD X26, X31, 0x8
	0x01F048D4 BL 0x3EB1B10
	0x01F048D8 LDR X0, [X28]
	0x01F048DC LDR W8, [X0 + 0xE0]
	0x01F048E0 CBNZ W8, 0x1F048E8
	0x01F048E4 BL 0x1C16DFC
	0x01F048E8 LDR X0, [X29]
	0x01F048EC AND W28, W24, 0x1
	0x01F048F0 ADD X24, X26, 0x8
	0x01F048F4 MOV X8, X24
	0x01F048F8 BL 0x263221C
	0x01F048FC LDR V0, [X23]
	0x01F04900 LDR X8, [X23 + 0x10]
	0x01F04904 STP X22, X19, [X31 + 0x70]
	0x01F04908 LDR X2, [X27]
	0x01F0490C STUR V0, [X31 + 0x28]
	0x01F04910 STR X8, [X31 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X3
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x24D6000
	011 Move W8, [X24+1627]
	012 Move W20, W4
	013 Move X21, X3
	014 Move X19, X2
	015 Move X23, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x21FA000
	022 Move X0, [X0+712]
	023 Call 0x1C17CF4
	024 Move X0, 0x21FD000
	025 Move X0, [X0+2872]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1627], W8
	029 Compare X19, 0
	030 JumpIfEqual {87}
	031 Move X0, X23
	032 Move X1, X19
	033 Move X2, X21
	034 Move W3, W20
	035 Move X4, X31
	036 Call UDP.Receive, X0, X1, X2, X3
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X31+12], W0
	039 Move W23, W0
	040 Move X0, X21
	041 Move W1, W20
	042 Call StunMessage.IsStunMessage, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {61}
	047 Move X8, 0x21FA000
	048 Move X8, [X8+712]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Move X1, X21
	056 Move W2, W23
	057 Call StunClient.TryParseAndStoreStunMessage, X0, X1, X2
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W0, TEMP
	061 Move X8, 0x21FD000
	062 Move X8, [X8+2872]
	063 Move X1, X31
	064 Move X0, [X8]
	065 Call EngineProfiler.Begin, X0
	066 Add X2, X31, 24
	067 Add X4, X31, 12
	068 Move X0, X22
	069 Move X1, X19
	070 Move W3, W20
	071 Call NetSocketNative.HandleEncryptionIngoing, X0, X1, X2, X3, X4
	072 Move W19, W0
	073 Move X0, X31
	074 Call EngineProfiler.End
	075 Move W8, [X31+12]
	076 And W31, W19, 1
	077 NotImplemented "Instruction CSINV not yet implemented."
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X30, [X31+16]
	085 Add X31, X31, 80
	086 Return X0
	087 Call 0x1C17F20

Method: System.Int32 Send(Fusion.Sockets.NetSocket socket, Fusion.Sockets.NetAddress* address, System.Byte* buffer, System.Int32 bufferLength)

Disassembly:
	0x01F04C6C TBZ X0, 0x0, 0x1F04C98
	0x01F04C70 LDR X8, [X31 + 0x8]
	0x01F04C74 CBZ X8, 0x1F04C98
	0x01F04C78 ADRP X9, 0x21FC000
	0x01F04C7C LDR X9, [X9 + 0xBB8]
	0x01F04C80 LDR X10, [X8]
	0x01F04C84 LDR X9, [X9]
	0x01F04C88 LDRB W12, [X10 + 0x130]
	0x01F04C8C LDRB W11, [X9 + 0x130]
	0x01F04C90 CMP W12, W11
	0x01F04C94 B.CS 0x1F04CA8
	0x01F04C98 MOV X0, X31
	0x01F04C9C LDP X20, X19, [X31 + 0x10]
	0x01F04CA0 LDR X30, [X31], #0x20
	0x01F04CA4 RET
	0x01F04CA8 LDR X10, [X10 + 0xC8]
	0x01F04CAC ADD X10, X10, X11, 0x3, LSL
	0x01F04CB0 LDUR X10, [X10 - 0x8]
	0x01F04CB4 CMP X10, X9
	0x01F04CB8 CSEL X0, X8, X31, EQ
	0x01F04CBC B 0x1F04C9C
	0x01F04CC0 BL 0x1C16F20
	0x01F04CC4 SUB X31, X31, 0x30
	0x01F04CC8 STP X30, X21, [X31 + 0x10]
	0x01F04CCC STP X20, X19, [X31 + 0x20]
	0x01F04CD0 ADRP X21, 0x24D5000
	0x01F04CD4 ADRP X20, 0x21FC000
	0x01F04CD8 LDRB W8, [X21 + 0x673]
	0x01F04CDC LDR X20, [X20 + 0xB98]
	0x01F04CE0 MOV X19, X0
	0x01F04CE4 TBNZ X8, 0x0, 0x1F04D08
	0x01F04CE8 ADRP X0, 0x21EF000
	0x01F04CEC LDR X0, [X0 + 0x618]
	0x01F04CF0 BL 0x1C16CF4
	0x01F04CF4 ADRP X0, 0x21FC000
	0x01F04CF8 LDR X0, [X0 + 0xB98]
	0x01F04CFC BL 0x1C16CF4
	0x01F04D00 MOVZ W8, 0x1
	0x01F04D04 STRB W8, [X21 + 0x673]
	0x01F04D08 LDR X8, [X20]
	0x01F04D0C ADD X20, X19, 0x38
	0x01F04D10 MOV X0, X20
	0x01F04D14 MOV X3, X31
	0x01F04D18 LDR X8, [X8 + 0xB8]
	0x01F04D1C LDP X1, X2, [X8]
	0x01F04D20 BL 0x337896C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x24D6000
	009 Move [X31+8], X3
	010 Move [X31+4], W4
	011 Move X23, 0x21FD000
	012 Move W8, [X22+1628]
	013 Move X23, [X23+2880]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x21FD000
	022 Move X0, [X0+2880]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1628], W8
	026 Move X0, [X23]
	027 Move X1, X31
	028 Call EngineProfiler.Begin, X0
	029 Add X2, X31, 8
	030 Add X3, X31, 4
	031 Move X0, X21
	032 Move X1, X19
	033 Call NetSocketNative.HandleEncryptionOutgoing, X0, X1, X2, X3
	034 Move W21, W0
	035 Move X0, X31
	036 Call EngineProfiler.End
	037 Move TEMP, X21
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {49}
	041 Compare X19, 0
	042 JumpIfEqual {60}
	043 Move X2, [X31+8]
	044 Move W3, [X31+4]
	045 Move X0, X20
	046 Move X1, X19
	047 Move X4, X31
	048 Call UDP.Send, X0, X1, X2, X3
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W0, TEMP
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 Move X23, [X31+24]
	058 Add X31, X31, 64
	059 Return X0
	060 Call 0x1C17F20

Method: System.Void Destroy(Fusion.Sockets.NetSocket netSocket)

Disassembly:
	0x01F03F7C LDR X9, [X31 + 0x20]
	0x01F03F80 MOV W1, W0
	0x01F03F84 LDR X3, [X8]
	0x01F03F88 ADD X2, X31, 0x50
	0x01F03F8C MOV X0, X20
	0x01F03F90 STR V0, [X31 + 0x5]
	0x01F03F94 STR X9, [X31 + 0x60]
	0x01F03F98 BL 0x29656C0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X1
	003 Call NetSocketNative.ResetEncryption, X0
	004 Add X0, X31, 8
	005 Move X1, X31
	006 Call UDP.Destroy, X0
	007 Move X30, [X31+16]
	008 Return 

Method: System.Void SetupEncryption(System.Byte[] key, System.Byte[] encryptedKey)

Disassembly:
	0x01F040D4 LDR X8, [X31 + 0x80]
	0x01F040D8 LDR X9, [X9 + 0x78]
	0x01F040DC ADD X23, X22, 0x20
	0x01F040E0 STR V0, [X27]
	0x01F040E4 STR X8, [X27 + 0x10]
	0x01F040E8 LDR X0, [X9]
	0x01F040EC LDR W8, [X0 + 0xE0]
	0x01F040F0 CBNZ W8, 0x1F040F8
	0x01F040F4 BL 0x1C16DFC
	0x01F040F8 LDR V0, [X27]
	0x01F040FC LDR X8, [X27 + 0x10]
	0x01F04100 ADD X1, X31, 0x30
	0x01F04104 MOV X0, X23
	0x01F04108 MOV X2, X31
	0x01F0410C STR V0, [X31 + 0x3]
	0x01F04110 STR X8, [X31 + 0x40]
	0x01F04114 BL 0x1EF8788
	0x01F04118 TBZ X0, 0x0, 0x1F042C4
	0x01F0411C LDR V0, [X31 + 0x7]
	0x01F04120 LDR X8, [X31 + 0x80]
	0x01F04124 STR V0, [X31 + 0x1]
	0x01F04128 STR X8, [X31 + 0x20]
	0x01F0412C LDP X0, X8, [X22 + 0x10]
	0x01F04130 CBZ X8, 0x1F042CC
	0x01F04134 CBZ X0, 0x1F042CC
	0x01F04138 LDR X2, [X8 + 0x10]
	0x01F0413C ADRP X8, 0x21FC000
	0x01F04140 LDR X8, [X8 + 0xAE0]
	0x01F04144 LDR V0, [X31 + 0x1]
	0x01F04148 LDR X9, [X31 + 0x20]
	0x01F0414C ADD X1, X31, 0x90
	0x01F04150 LDR X3, [X8]
	0x01F04154 STR V0, [X27]
	0x01F04158 STR X9, [X27 + 0x10]
	0x01F0415C BL 0x2BA6B68
	0x01F04160 STP X31, X31, [X23]
	0x01F04164 STR X31, [X23 + 0x10]
	0x01F04168 B 0x1F04248
	0x01F0416C LDR X24, [X21]
	0x01F04170 LDRB W23, [X24], #0x1
	0x01F04174 STR W23, [X31 + 0xC]
	0x01F04178 LDR X0, [X22 + 0x10]
	0x01F0417C STP X31, X31, [X31 + 0x10]
	0x01F04180 STR X31, [X31 + 0x20]
	0x01F04184 CBZ X0, 0x1F042CC
	0x01F04188 ADRP X8, 0x21FC000
	0x01F0418C LDR X8, [X8 + 0xB60]
	0x01F04190 LDR V0, [X31 + 0x1]
	0x01F04194 LDR X9, [X31 + 0x20]
	0x01F04198 ADD X1, X31, 0x90
	0x01F0419C LDR X5, [X8]
	0x01F041A0 ADD X3, X31, 0xC
	0x01F041A4 MOV X2, X24
	0x01F041A8 MOV W4, W23
	0x01F041AC STR V0, [X27]
	0x01F041B0 STR X9, [X27 + 0x10]
	0x01F041B4 BL 0x2BA6FEC
	0x01F041B8 TBZ X0, 0x0, 0x1F042C4
	0x01F041BC ADRP X8, 0x21EF000
	0x01F041C0 LDR W1, [X31 + 0xC]
	0x01F041C4 LDR X8, [X8 + 0x618]
	0x01F041C8 LDR X0, [X8]
	0x01F041CC BL 0x1C16D6C
	0x01F041D0 ADRP X8, 0x21FC000
	0x01F041D4 LDR X8, [X8 + 0xB68]
	0x01F041D8 MOV X1, X24
	0x01F041DC MOV X25, X0
	0x01F041E0 LDR X2, [X8]
	0x01F041E4 BL 0x22219FC
	0x01F041E8 LDR X0, [X22 + 0x10]
	0x01F041EC LDR V0, [X31 + 0x7]
	0x01F041F0 LDR X8, [X31 + 0x80]
	0x01F041F4 STR V0, [X31 + 0x1]
	0x01F041F8 STR X8, [X31 + 0x20]
	0x01F041FC CBZ X0, 0x1F042CC
	0x01F04200 ADRP X8, 0x21FC000
	0x01F04204 LDR X8, [X8 + 0xAE0]
	0x01F04208 LDR V0, [X31 + 0x1]
	0x01F0420C LDR X9, [X31 + 0x20]
	0x01F04210 ADD X1, X31, 0x90
	0x01F04214 LDR X3, [X8]
	0x01F04218 MOV X2, X25
	0x01F0421C ADD X23, X23, 0x1
	0x01F04220 STR V0, [X27]
	0x01F04224 STR X9, [X27 + 0x10]
	0x01F04228 BL 0x2BA6B68
	0x01F0422C LDR W8, [X20]
	0x01F04230 MOV X3, X31
	0x01F04234 SUB W2, W8, W23
	0x01F04238 STR W2, [X20]
	0x01F0423C LDR X0, [X21]
	0x01F04240 ADD X1, X0, X23
	0x01F04244 BL 0x1E35758
	0x01F04248 LDR X0, [X22 + 0x10]
	0x01F0424C LDR V0, [X31 + 0x7]
	0x01F04250 LDR X8, [X31 + 0x80]
	0x01F04254 STR V0, [X31 + 0x1]
	0x01F04258 STR X8, [X31 + 0x20]
	0x01F0425C CBZ X0, 0x1F042CC
	0x01F04260 ADRP X8, 0x21FC000
	0x01F04264 LDR X2, [X21]
	0x01F04268 LDR X8, [X8 + 0xB60]
	0x01F0426C LDR V0, [X31 + 0x1]
	0x01F04270 LDR X9, [X31 + 0x20]
	0x01F04274 ADD X1, X31, 0x90
	0x01F04278 LDR X5, [X8]
	0x01F0427C MOV X3, X20
	0x01F04280 MOV W4, W19
	0x01F04284 STR V0, [X27]
	0x01F04288 STR X9, [X27 + 0x10]
	0x01F0428C BL 0x2BA6FEC
	0x01F04290 TBZ X0, 0x0, 0x1F042C4
	0x01F04294 MOVZ W0, 0x1
	0x01F04298 LDR X8, [X26 + 0x28]
	0x01F0429C LDR X9, [X31 + 0xA8]
	0x01F042A0 CMP X8, X9
	0x01F042A4 B.NE 0x1F042D0
	0x01F042A8 LDP X20, X19, [X31 + 0xF0]
	0x01F042AC LDP X22, X21, [X31 + 0xE0]
	0x01F042B0 LDP X24, X23, [X31 + 0xD0]
	0x01F042B4 LDP X26, X25, [X31 + 0xC0]
	0x01F042B8 LDP X30, X27, [X31 + 0xB0]
	0x01F042BC ADD X31, X31, 0x100
	0x01F042C0 RET
	0x01F042C4 MOV W0, W31
	0x01F042C8 B 0x1F04298
	0x01F042CC BL 0x1C16F20
	0x01F042D0 BL 0x3EB1B20
	0x01F042D4 SUB X31, X31, 0xA0
	0x01F042D8 STP X30, X25, [X31 + 0x60]
	0x01F042DC STP X24, X23, [X31 + 0x70]
	0x01F042E0 STP X22, X21, [X31 + 0x80]
	0x01F042E4 STP X20, X19, [X31 + 0x90]
	0x01F042E8 MRS X25, 0xC000
	0x01F042EC LDR X8, [X25 + 0x28]
	0x01F042F0 ADRP X23, 0x24D5000
	0x01F042F4 MOV X19, X3

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X24+40]
	012 Move X22, 0x24D6000
	013 Move X20, X2
	014 Move X21, X1
	015 Move [X31+56], X8
	016 Move W8, [X22+1629]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x21FD000
	023 Move X0, [X0+2776]
	024 Call 0x1C17CF4
	025 Move X0, 0x21FD000
	026 Move X0, [X0+2784]
	027 Call 0x1C17CF4
	028 Move X0, 0x21FD000
	029 Move X0, [X0+2792]
	030 Call 0x1C17CF4
	031 Move X0, 0x21FD000
	032 Move X0, [X0+2800]
	033 Call 0x1C17CF4
	034 Move X0, 0x21FA000
	035 Move X0, [X0+592]
	036 Call 0x1C17CF4
	037 Move X0, 0x21FD000
	038 Move X0, [X0+2696]
	039 Call 0x1C17CF4
	040 Move X0, 0x21FD000
	041 Move X0, [X0+2808]
	042 Call 0x1C17CF4
	043 Move X0, 0x21FD000
	044 Move X0, [X0+2816]
	045 Call 0x1C17CF4
	046 Move X0, 0x21FD000
	047 Move X0, [X0+2824]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X22+1629], W8
	051 Compare X21, 0
	052 JumpIfEqual {146}
	053 Move X8, [X19+16]
	054 Compare X8, 0
	055 JumpIfNotEqual {146}
	056 Move X8, [X21+24]
	057 Compare X8, 0
	058 JumpIfEqual {146}
	059 Move X25, 0x21FD000
	060 Move X25, [X25+2824]
	061 Move X0, [X25]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X25]
	067 Move X8, [X0+184]
	068 Move X22, [X8+8]
	069 Compare X22, 0
	070 JumpIfNotEqual {92}
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X25]
	076 Move X9, 0x21FD000
	077 Move X8, [X0+184]
	078 Move X9, [X9+2808]
	079 Move X23, [X8]
	080 Move X0, [X9]
	081 Call 0x1C17F10
	082 Move X8, 0x21FD000
	083 Move X8, [X8+2816]
	084 Move X1, X23
	085 Move X3, X31
	086 Move X22, X0
	087 Move X2, [X8]
	088 Call Predicate`1<Byte>..ctor, X0, X1, X2
	089 Move X8, [X25]
	090 Move X8, [X8+184]
	091 Move [X8+8], X22
	092 Move X8, 0x21FD000
	093 Move X8, [X8+2776]
	094 Move X0, X21
	095 Move X1, X22
	096 Move X2, [X8]
	097 Call 0x2172758, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {146}
	102 Move X8, 0x21FD000
	103 Move X8, [X8+2800]
	104 Move X0, [X8]
	105 Call 0x1C17F10
	106 Move X8, 0x21FD000
	107 Move X8, [X8+2792]
	108 Move X22, X0
	109 Move X1, [X8]
	110 Call 0x2BA874C, X0
	111 Move [X19+16], X22
	112 Move [X31+8], X31
	113 Move [X31+16], X31
	114 Move [X31+24], X31
	115 Compare X22, 0
	116 JumpIfEqual {159}
	117 Move X8, 0x21FD000
	118 Move X8, [X8+2784]
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move X9, [X31+24]
	121 Add X1, X31, 32
	122 Move X3, [X8]
	123 Move X0, X22
	124 Move X2, X21
	125 Move [X31+2], V0
	126 Move [X31+48], X9
	127 Call 0x2BA7B68, X0, X1, X2
	128 Move X8, 0x21FA000
	129 Move X8, [X8+592]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X1, X31
	133 Move X22, X0
	134 Call Object..ctor, X0
	135 Compare X22, 0
	136 JumpIfEqual {159}
	137 Move [X22+16], X21
	138 Move [X22+24], X20
	139 Move [X19+24], X22
	140 Move X8, 0x21FD000
	141 Move X8, [X8+2696]
	142 Move W0, 2048
	143 Move X1, [X8]
	144 Call 0x222304C, X0
	145 Move [X19+56], X0
	146 Move X8, [X24+40]
	147 Move X9, [X31+56]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X20, [X31+112]
	150 Move X19, [X31+120]
	151 Move X22, [X31+96]
	152 Move X21, [X31+104]
	153 Move X24, [X31+80]
	154 Move X23, [X31+88]
	155 Move X30, [X31+64]
	156 Move X25, [X31+72]
	157 Add X31, X31, 128
	158 Return 
	159 Call 0x1C17F20
	160 Call 0x3EB2B20

Method: System.Boolean HandleEncryptionOutgoing(Fusion.Sockets.NetAddress* address, ref System.Byte* buffer, ref System.Int32 bufferLength)

Disassembly:
	0x01F052D4 LDR X1, [X8]
	0x01F052D8 BL 0x1C17270
	0x01F052DC TBZ X0, 0x0, 0x1F05338
	0x01F052E0 BL 0x3EB1AE0
	0x01F052E4 LDR W8, [X20]
	0x01F052E8 CMP W8, 0x17
	0x01F052EC B.NE 0x1F05330
	0x01F052F0 MOVZ W8, 0x2
	0x01F052F4 STR W8, [X20]
	0x01F052F8 ADRP X0, 0x21F8000
	0x01F052FC LDR X0, [X0 + 0x2C8]
	0x01F05300 BL 0x1C16D08
	0x01F05304 LDR W8, [X0 + 0xE0]
	0x01F05308 CBNZ W8, 0x1F05310
	0x01F0530C BL 0x1C16DFC
	0x01F05310 MOV X0, X20
	0x01F05314 MOV X1, X19
	0x01F05318 LDP X20, X19, [X31 + 0x40]
	0x01F0531C LDP X22, X21, [X31 + 0x30]
	0x01F05320 LDP X24, X23, [X31 + 0x20]
	0x01F05324 LDP X26, X25, [X31 + 0x10]
	0x01F05328 LDR X30, [X31], #0x50
	0x01F0532C B 0x1F04FD8
	0x01F05330 MOV W8, W31
	0x01F05334 B 0x1F051DC
	0x01F05338 MOVZ W0, 0x8
	0x01F0533C BL 0x3EB1AF0
	0x01F05340 LDR X8, [X21]
	0x01F05344 STR X8, [X0]
	0x01F05348 ADRP X1, 0x1FAF000
	0x01F0534C ADD X1, X1, 0xE58
	0x01F05350 MOV X2, X31
	0x01F05354 BL 0x3EB1B00
	0x01F05358 MOV X0, X22
	0x01F0535C BL 0x1C16F18
	0x01F05360 MOV X24, X1
	0x01F05364 MOV X23, X0
	0x01F05368 CBNZ X21, 0x1F05254
	0x01F0536C B 0x1F052AC
	0x01F05370 MOV X23, X0
	0x01F05374 BL 0x3EB1AE0
	0x01F05378 MOV X0, X23
	0x01F0537C BL 0x1D2C690
	0x01F05380 BL 0x1990590
	0x01F05384 SUB X31, X31, 0xF0
	0x01F05388 STP X29, X30, [X31 + 0x90]
	0x01F0538C STP X28, X27, [X31 + 0xA0]
	0x01F05390 STP X26, X25, [X31 + 0xB0]
	0x01F05394 STP X24, X23, [X31 + 0xC0]
	0x01F05398 STP X22, X21, [X31 + 0xD0]
	0x01F0539C STP X20, X19, [X31 + 0xE0]
	0x01F053A0 MRS X26, 0xC000
	0x01F053A4 LDR X8, [X26 + 0x28]
	0x01F053A8 ADRP X23, 0x24D4000
	0x01F053AC MOV X20, X3
	0x01F053B0 MOV X19, X2
	0x01F053B4 STR X8, [X31 + 0x88]
	0x01F053B8 LDRB W8, [X23 + 0x66B]
	0x01F053BC MOV W21, W1
	0x01F053C0 MOV X22, X0
	0x01F053C4 TBNZ X8, 0x0, 0x1F05430
	0x01F053C8 ADRP X0, 0x21FB000
	0x01F053CC LDR X0, [X0 + 0xBC8]
	0x01F053D0 BL 0x1C16CF4
	0x01F053D4 ADRP X0, 0x21FB000
	0x01F053D8 LDR X0, [X0 + 0xBD0]
	0x01F053DC BL 0x1C16CF4
	0x01F053E0 ADRP X0, 0x21FB000
	0x01F053E4 LDR X0, [X0 + 0xBD8]
	0x01F053E8 BL 0x1C16CF4
	0x01F053EC ADRP X0, 0x21FB000
	0x01F053F0 LDR X0, [X0 + 0xBE0]
	0x01F053F4 BL 0x1C16CF4
	0x01F053F8 ADRP X0, 0x21FB000
	0x01F053FC LDR X0, [X0 + 0xBE8]
	0x01F05400 BL 0x1C16CF4
	0x01F05404 ADRP X0, 0x21F8000
	0x01F05408 LDR X0, [X0 + 0x78]
	0x01F0540C BL 0x1C16CF4
	0x01F05410 ADRP X0, 0x21FB000
	0x01F05414 LDR X0, [X0 + 0xBA8]
	0x01F05418 BL 0x1C16CF4
	0x01F0541C ADRP X0, 0x21FB000
	0x01F05420 LDR X0, [X0 + 0xBF0]
	0x01F05424 BL 0x1C16CF4
	0x01F05428 MOVZ W8, 0x1
	0x01F0542C STRB W8, [X23 + 0x66B]
	0x01F05430 STP X31, X31, [X31 + 0x10]
	0x01F05434 STR X31, [X31 + 0x20]
	0x01F05438 STP X31, X31, [X31 + 0x50]
	0x01F0543C STR X31, [X31 + 0x60]
	0x01F05440 STRB W31, [X20]
	0x01F05444 CBZ X22, 0x1F05628
	0x01F05448 ADRP X8, 0x21FB000
	0x01F0544C LDR X8, [X8 + 0xBF0]
	0x01F05450 LDR X0, [X8]
	0x01F05454 LDR W8, [X0 + 0xE0]
	0x01F05458 CBNZ W8, 0x1F05460
	0x01F0545C BL 0x1C16DFC
	0x01F05460 CMP W21, 0x17
	0x01F05464 CSET W0, EQ
	0x01F05468 BL 0x1F05730
	0x01F0546C CBZ X0, 0x1F05668
	0x01F05470 LDR W8, [X0 + 0x18]
	0x01F05474 MOV X24, X0
	0x01F05478 CBZ W8, 0x1F05628
	0x01F0547C CMP W8, 0x1
	0x01F05480 B.NE 0x1F05488
	0x01F05484 STRB W8, [X20]
	0x01F05488 ADRP X8, 0x21FB000
	0x01F0548C LDP X23, X25, [X19]
	0x01F05490 LDR X8, [X8 + 0xBA8]
	0x01F05494 LDR X0, [X8]
	0x01F05498 BL 0x1C16F10
	0x01F0549C MOVZ W3, 0x1
	0x01F054A0 MOV X1, X23
	0x01F054A4 MOV X2, X25
	0x01F054A8 MOV X20, X0
	0x01F054AC BL 0x1F058D0
	0x01F054B0 CBZ X20, 0x1F05668
	0x01F054B4 MOV X0, X20
	0x01F054B8 BL 0x1F05A04
	0x01F054BC ADRP X8, 0x21FB000
	0x01F054C0 LDR X8, [X8 + 0xBE0]
	0x01F054C4 MOV X23, X0
	0x01F054C8 MOV X0, X24
	0x01F054CC LDR X1, [X8]
	0x01F054D0 ADD X8, X31, 0x70
	0x01F054D4 BL 0x301CB58
	0x01F054D8 LDR V0, [X31 + 0x7]
	0x01F054DC LDR X8, [X31 + 0x80]
	0x01F054E0 ADRP X28, 0x21FB000
	0x01F054E4 ADRP X24, 0x21EE000
	0x01F054E8 LDR X28, [X28 + 0xBD0]
	0x01F054EC LDR X24, [X24 + 0x7D0]
	0x01F054F0 STR V0, [X31 + 0x1]
	0x01F054F4 STR X8, [X31 + 0x20]
	0x01F054F8 ADRP X29, 0x21F8000
	0x01F054FC LDR X29, [X29 + 0x78]
	0x01F05500 MOV W27, W31
	0x01F05504 LDR X1, [X28]
	0x01F05508 ADD X0, X31, 0x10
	0x01F0550C BL 0x2BC4350
	0x01F05510 TBZ X0, 0x0, 0x1F055FC
	0x01F05514 LDR X8, [X31 + 0x20]
	0x01F05518 CMP W21, 0x17

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X25+40]
	012 Move X23, 0x24D5000
	013 Move X19, X3
	014 Move X20, X2
	015 Move [X31+88], X8
	016 Move W8, [X23+1630]
	017 Move X22, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x21FC000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X0, 0x21FC000
	027 Move X0, [X0+2928]
	028 Call 0x1C17CF4
	029 Move X0, 0x21EF000
	030 Move X0, [X0+1448]
	031 Call 0x1C17CF4
	032 Move X0, 0x21FC000
	033 Move X0, [X0+2936]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+1630], W8
	037 Move X8, [X21+16]
	038 Compare X8, 0
	039 JumpIfEqual {151}
	040 Move W8, [X19]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, [X22+16]
	043 Move V0, [X22]
	044 Move W1, 2048
	045 Move X2, X31
	046 Move [X31+48], X8
	047 Move [X31+2], V0
	048 Move X0, [X21+56]
	049 Call Native.MemClear, X0, X1
	050 Move X8, 0x21EF000
	051 Move X8, [X8+1448]
	052 Move X23, [X21+56]
	053 Move X22, [X20]
	054 Move W24, [X19]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W1, 2048
	061 Move W0, W24
	062 Move X2, X31
	063 Call Math.Min, X0, X1
	064 Move W2, W0
	065 Move X0, X23
	066 Move X1, X22
	067 Move X3, X31
	068 Call Native.MemCpy, X0, X1, X2
	069 Move X8, [X21+56]
	070 Move [X20], X8
	071 Move X0, [X21+16]
	072 Move V0, [X31+2]
	073 Move X8, [X31+48]
	074 Move [X31], V0
	075 Move [X31+16], X8
	076 Compare X0, 0
	077 JumpIfEqual {166}
	078 Move X8, 0x21FC000
	079 Move X8, [X8+2904]
	080 Move V0, [X31]
	081 Move X9, [X31+16]
	082 Add X1, X31, 64
	083 Move X2, [X8]
	084 Move [X31+4], V0
	085 Move [X31+80], X9
	086 Call 0x2BA7E38, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {92}
	091 Move W22, W31
	092 Move X8, [X21+24]
	093 Compare X8, 0
	094 JumpIfEqual {166}
	095 Move X8, [X8+24]
	096 Compare X8, 0
	097 JumpIfEqual {165}
	098 Move X23, [X8+24]
	099 Move X1, [X20]
	100 Move W2, [X19]
	101 Move X3, X31
	102 Add W22, W23, 1
	103 Add X0, X1, W22
	104 Call Native.MemMove, X0, X1, X2
	105 Move X8, [X20]
	106 Move [X8], W23
	107 Move X8, [X21+24]
	108 Compare X8, 0
	109 JumpIfEqual {166}
	110 Move X1, [X8+24]
	111 Move X8, 0x21FC000
	112 Move X9, [X20]
	113 Move X8, [X8+2936]
	114 Add X0, X9, 1
	115 Move X2, [X8]
	116 Call 0x2222920, X0, X1
	117 Move V0, [X31+2]
	118 Move X8, [X31+48]
	119 Move [X21+2], V0
	120 Move [X21+48], X8
	121 Move [X31+40], X31
	122 Move [X31+48], X31
	123 Move [X31+32], X31
	124 Move X0, [X21+16]
	125 Move V0, [X31+2]
	126 Move X8, [X31+48]
	127 Move [X31], V0
	128 Move [X31+16], X8
	129 Compare X0, 0
	130 JumpIfEqual {166}
	131 Move X9, 0x21FC000
	132 Move X8, [X20]
	133 Move X9, [X9+2928]
	134 Move V0, [X31]
	135 Move X10, [X31+16]
	136 Add X2, X8, W22
	137 Move X5, [X9]
	138 Add X1, X31, 64
	139 Move W4, 2048
	140 Move X3, X19
	141 Move [X31+4], V0
	142 Move [X31+80], X10
	143 Call 0x2BA7EB0, X0, X1, X2, X3, X4
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {165}
	148 Move W8, [X19]
	149 Add W8, W8, W22
	150 Move [X19], W8
	151 Move W0, 1
	152 Move X8, [X25+40]
	153 Move X9, [X31+88]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X20, [X31+144]
	156 Move X19, [X31+152]
	157 Move X22, [X31+128]
	158 Move X21, [X31+136]
	159 Move X24, [X31+112]
	160 Move X23, [X31+120]
	161 Move X30, [X31+96]
	162 Move X25, [X31+104]
	163 Add X31, X31, 160
	164 Return X0
	165 Move W0, W31
	166 Call 0x1C17F20
	167 Call 0x3EB2B20

Method: System.Boolean HandleEncryptionIngoing(Fusion.Sockets.NetAddress* address, ref System.Byte* buffer, System.Int32 bufferLength, ref System.Int32 received)

Disassembly:
	0x01F04FCC MOV X0, X19
	0x01F04FD0 BL 0x1D2C690
	0x01F04FD4 BL 0x1990590
	0x01F04FD8 STR X30, [X31 - 0x50]!
	0x01F04FDC STP X26, X25, [X31 + 0x10]
	0x01F04FE0 STP X24, X23, [X31 + 0x20]
	0x01F04FE4 STP X22, X21, [X31 + 0x30]
	0x01F04FE8 STP X20, X19, [X31 + 0x40]
	0x01F04FEC ADRP X21, 0x24D5000
	0x01F04FF0 ADRP X25, 0x21FC000
	0x01F04FF4 LDRB W8, [X21 + 0x66C]
	0x01F04FF8 LDR X25, [X25 + 0x968]
	0x01F04FFC MOV X19, X1
	0x01F05000 MOV X20, X0
	0x01F05004 TBNZ X8, 0x0, 0x1F0504C
	0x01F05008 ADRP X0, 0x21EE000
	0x01F0500C LDR X0, [X0 + 0xE00]
	0x01F05010 BL 0x1C16CF4
	0x01F05014 ADRP X0, 0x21FB000
	0x01F05018 LDR X0, [X0 + 0x968]
	0x01F0501C BL 0x1C16CF4
	0x01F05020 ADRP X0, 0x21FB000
	0x01F05024 LDR X0, [X0 + 0xBB8]
	0x01F05028 BL 0x1C16CF4
	0x01F0502C ADRP X0, 0x21F7000
	0x01F05030 LDR X0, [X0 + 0x788]
	0x01F05034 BL 0x1C16CF4
	0x01F05038 ADRP X0, 0x21FB000
	0x01F0503C LDR X0, [X0 + 0xBC0]
	0x01F05040 BL 0x1C16CF4
	0x01F05044 MOVZ W8, 0x1
	0x01F05048 STRB W8, [X21 + 0x66C]
	0x01F0504C LDR X0, [X25]
	0x01F05050 ADRP X21, 0x21F7000
	0x01F05054 LDR W8, [X0 + 0xE0]
	0x01F05058 LDR X21, [X21 + 0x788]
	0x01F0505C CBNZ W8, 0x1F05068
	0x01F05060 BL 0x1C16DFC
	0x01F05064 LDR X0, [X25]
	0x01F05068 LDR X8, [X0 + 0xB8]
	0x01F0506C LDR X8, [X8 + 0x18]
	0x01F05070 STR X8, [X19]
	0x01F05074 LDR W22, [X20]
	0x01F05078 LDR X0, [X21]
	0x01F0507C BL 0x1C16F10
	0x01F05080 MOV X21, X0
	0x01F05084 MOVZ W2, 0x2
	0x01F05088 MOV W1, W22
	0x01F0508C MOV W3, W31
	0x01F05090 MOV X4, X31
	0x01F05094 BL 0x36AC13C
	0x01F05098 ADRP X22, 0x21FB000
	0x01F0509C LDR X22, [X22 + 0xBC0]
	0x01F050A0 LDR W9, [X20]
	0x01F050A4 ADRP X26, 0x21EE000
	0x01F050A8 LDR X0, [X22]
	0x01F050AC CMP W9, 0x2
	0x01F050B0 LDR W8, [X0 + 0xE0]
	0x01F050B4 LDR X26, [X26 + 0xE00]
	0x01F050B8 B.NE 0x1F050D0
	0x01F050BC CBNZ W8, 0x1F050C8
	0x01F050C0 BL 0x1C16DFC
	0x01F050C4 LDR X0, [X22]
	0x01F050C8 LDR X8, [X0 + 0xB8]
	0x01F050CC B 0x1F050E4
	0x01F050D0 CBNZ W8, 0x1F050DC
	0x01F050D4 BL 0x1C16DFC
	0x01F050D8 LDR X0, [X22]
	0x01F050DC LDR X8, [X0 + 0xB8]
	0x01F050E0 ADD X8, X8, 0x8
	0x01F050E4 CBZ X21, 0x1F051FC
	0x01F050E8 LDR X1, [X8]
	0x01F050EC MOV X0, X21
	0x01F050F0 MOV X2, X31
	0x01F050F4 BL 0x36BFAC4
	0x01F050F8 MOV X0, X21
	0x01F050FC MOV X1, X31
	0x01F05100 BL 0x36C18F4
	0x01F05104 CBZ X0, 0x1F05200
	0x01F05108 ADRP X9, 0x21FB000
	0x01F0510C LDR X9, [X9 + 0xBB8]
	0x01F05110 LDR X8, [X0]
	0x01F05114 LDR X1, [X9]
	0x01F05118 LDRB W10, [X8 + 0x130]
	0x01F0511C LDRB W9, [X1 + 0x130]
	0x01F05120 CMP W10, W9
	0x01F05124 B.CC 0x1F051F8
	0x01F05128 LDR X8, [X8 + 0xC8]
	0x01F0512C ADD X8, X8, X9, 0x3, LSL
	0x01F05130 LDUR X8, [X8 - 0x8]
	0x01F05134 CMP X8, X1
	0x01F05138 B.NE 0x1F051F8
	0x01F0513C LDR X8, [X0 + 0x10]
	0x01F05140 MOV X22, X31
	0x01F05144 STR X8, [X19]
	0x01F05148 LDR X8, [X21]
	0x01F0514C LDR X1, [X26]
	0x01F05150 LDRH W9, [X8 + 0x12E]
	0x01F05154 CBZ X9, 0x1F05178
	0x01F05158 LDR X10, [X8 + 0xB0]
	0x01F0515C ADD X10, X10, 0x8
	0x01F05160 LDUR X11, [X10 - 0x8]
	0x01F05164 CMP X11, X1
	0x01F05168 B.EQ 0x1F05188
	0x01F0516C SUBS X9, X9, 0x1
	0x01F05170 ADD X10, X10, 0x10
	0x01F05174 B.NE 0x1F05160
	0x01F05178 MOV X0, X21
	0x01F0517C MOV W2, W31
	0x01F05180 BL 0x1C5C788
	0x01F05184 B 0x1F05194
	0x01F05188 LDRSW X9, [X10]
	0x01F0518C ADD X8, X8, X9, 0x4, LSL
	0x01F05190 ADD X0, X8, 0x138
	0x01F05194 LDP X8, X1, [X0]
	0x01F05198 MOV X0, X21
	0x01F0519C BLR X8
	0x01F051A0 CBNZ X22, 0x1F05204
	0x01F051A4 LDR X0, [X25]
	0x01F051A8 LDR X19, [X19]
	0x01F051AC LDR W8, [X0 + 0xE0]
	0x01F051B0 CBNZ W8, 0x1F051B8
	0x01F051B4 BL 0x1C16DFC
	0x01F051B8 CBZ X19, 0x1F0520C
	0x01F051BC LDR X8, [X25]
	0x01F051C0 LDR X9, [X19]
	0x01F051C4 MOV X0, X19
	0x01F051C8 LDR X8, [X8 + 0xB8]
	0x01F051CC LDR X1, [X8 + 0x18]
	0x01F051D0 LDP X8, X2, [X9 + 0x138]
	0x01F051D4 BLR X8
	0x01F051D8 EOR W8, W0, 0x1
	0x01F051DC LDP X20, X19, [X31 + 0x40]
	0x01F051E0 LDP X22, X21, [X31 + 0x30]
	0x01F051E4 LDP X24, X23, [X31 + 0x20]
	0x01F051E8 LDP X26, X25, [X31 + 0x10]
	0x01F051EC AND W0, W8, 0x1
	0x01F051F0 LDR X30, [X31], #0x50
	0x01F051F4 RET
	0x01F051F8 BL 0x1C171E0
	0x01F051FC BL 0x1C16F20
	0x01F05200 BL 0x1C16F20
	0x01F05204 MOV X0, X22
	0x01F05208 BL 0x1C16F18
	0x01F0520C BL 0x1C16F20
	0x01F05210 B 0x1F05218
	0x01F05214 B 0x1F05224
	0x01F05218 MOV X24, X1
	0x01F0521C MOV X23, X0
	0x01F05220 B 0x1F052B0
	0x01F05224 MOV X24, X1
	0x01F05228 MOV X23, X0
	0x01F0522C CMP W24, 0x1
	0x01F05230 B.NE 0x1F0524C
	0x01F05234 MOV X0, X23
	0x01F05238 BL 0x3EB1AD0
	0x01F0523C LDR X22, [X0]
	0x01F05240 BL 0x3EB1AE0
	0x01F05244 CBNZ X21, 0x1F05148
	0x01F05248 B 0x1F051A0
	0x01F0524C MOV X22, X31
	0x01F05250 CBZ X21, 0x1F052AC
	0x01F05254 LDR X8, [X21]
	0x01F05258 LDR X1, [X26]
	0x01F0525C LDRH W9, [X8 + 0x12E]
	0x01F05260 CBZ X9, 0x1F05284
	0x01F05264 LDR X10, [X8 + 0xB0]
	0x01F05268 ADD X10, X10, 0x8
	0x01F0526C LDUR X11, [X10 - 0x8]
	0x01F05270 CMP X11, X1
	0x01F05274 B.EQ 0x1F05294
	0x01F05278 SUBS X9, X9, 0x1
	0x01F0527C ADD X10, X10, 0x10
	0x01F05280 B.NE 0x1F0526C
	0x01F05284 MOV X0, X21
	0x01F05288 MOV W2, W31
	0x01F0528C BL 0x1C5C788
	0x01F05290 B 0x1F052A0
	0x01F05294 LDRSW X9, [X10]
	0x01F05298 ADD X8, X8, X9, 0x4, LSL
	0x01F0529C ADD X0, X8, 0x138
	0x01F052A0 LDP X8, X1, [X0]
	0x01F052A4 MOV X0, X21
	0x01F052A8 BLR X8
	0x01F052AC CBNZ X22, 0x1F05358
	0x01F052B0 CMP W24, 0x1
	0x01F052B4 B.NE 0x1F05378
	0x01F052B8 MOV X0, X23
	0x01F052BC BL 0x3EB1AD0
	0x01F052C0 MOV X21, X0
	0x01F052C4 ADRP X0, 0x21F4000
	0x01F052C8 LDR X0, [X0 + 0xCC0]
	0x01F052CC BL 0x1C16D08
	0x01F052D0 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+176], X30
	003 Move [X31+184], X27
	004 Move [X31+192], X26
	005 Move [X31+200], X25
	006 Move [X31+208], X24
	007 Move [X31+216], X23
	008 Move [X31+224], X22
	009 Move [X31+232], X21
	010 Move [X31+240], X20
	011 Move [X31+248], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X26+40]
	014 Move X24, 0x24D6000
	015 Move X20, X4
	016 Move W19, W3
	017 Move [X31+168], X8
	018 Move W8, [X24+1631]
	019 Move X21, X2
	020 Move X23, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0x21EF000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0x21FC000
	030 Move X0, [X0+2904]
	031 Call 0x1C17CF4
	032 Move X0, 0x21FC000
	033 Move X0, [X0+2784]
	034 Call 0x1C17CF4
	035 Move X0, 0x21FC000
	036 Move X0, [X0+2912]
	037 Call 0x1C17CF4
	038 Move X0, 0x21FC000
	039 Move X0, [X0+2920]
	040 Call 0x1C17CF4
	041 Move X0, 0x21F9000
	042 Move X0, [X0+120]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X24+1631], W8
	046 Move [X31+12], W31
	047 Move X0, [X22+16]
	048 Compare X0, 0
	049 JumpIfEqual {209}
	050 Move W8, [X20]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X23+16]
	053 Move V0, [X23]
	054 Move X9, 0x21FC000
	055 Add X27, X31, 144
	056 Move [X31+128], X8
	057 Move [X31+7], V0
	058 Move X8, [X23+16]
	059 Move V0, [X23]
	060 Move X9, [X9+2904]
	061 Add X1, X31, 144
	062 Move [X31+96], X8
	063 Move [X31+5], V0
	064 Move X2, [X9]
	065 Move [X27], V0
	066 Move [X27+16], X8
	067 Call 0x2BA7E38, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {186}
	072 Move X8, [X22+24]
	073 Compare X8, 0
	074 JumpIfEqual {226}
	075 Move X8, [X8+24]
	076 Compare X8, 0
	077 JumpIfEqual {125}
	078 Move X9, 0x21F9000
	079 Move V0, [X31+7]
	080 Move X8, [X31+128]
	081 Move X9, [X9+120]
	082 Add X23, X22, 32
	083 Move [X27], V0
	084 Move [X27+16], X8
	085 Move X0, [X9]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move V0, [X27]
	091 Move X8, [X27+16]
	092 Add X1, X31, 48
	093 Move X0, X23
	094 Move X2, X31
	095 Move [X31+3], V0
	096 Move [X31+64], X8
	097 Call NetAddress.Equals, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {225}
	102 Move V0, [X31+7]
	103 Move X8, [X31+128]
	104 Move [X31+1], V0
	105 Move [X31+32], X8
	106 Move X0, [X22+16]
	107 Move X8, [X22+24]
	108 Compare X8, 0
	109 JumpIfEqual {226}
	110 Compare X0, 0
	111 JumpIfEqual {226}
	112 Move X2, [X8+16]
	113 Move X8, 0x21FC000
	114 Move X8, [X8+2784]
	115 Move V0, [X31+1]
	116 Move X9, [X31+32]
	117 Add X1, X31, 144
	118 Move X3, [X8]
	119 Move [X27], V0
	120 Move [X27+16], X9
	121 Call 0x2BA7B68, X0, X1, X2
	122 Move [X23], X31
	123 Move [X23+8], X31
	124 Move [X23+16], X31
	125 Move X24, [X21]
	126 Move W23, [X24+1]
	127 Move [X31+12], W23
	128 Move X0, [X22+16]
	129 Move [X31+16], X31
	130 Move [X31+24], X31
	131 Move [X31+32], X31
	132 Compare X0, 0
	133 JumpIfEqual {226}
	134 Move X8, 0x21FC000
	135 Move X8, [X8+2912]
	136 Move V0, [X31+1]
	137 Move X9, [X31+32]
	138 Add X1, X31, 144
	139 Move X5, [X8]
	140 Add X3, X31, 12
	141 Move X2, X24
	142 Move W4, W23
	143 Move [X27], V0
	144 Move [X27+16], X9
	145 Call 0x2BA7FEC, X0, X1, X2, X3, X4
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {225}
	150 Move X8, 0x21EF000
	151 Move W1, [X31+12]
	152 Move X8, [X8+1560]
	153 Move X0, [X8]
	154 Call 0x1C17D6C
	155 Move X8, 0x21FC000
	156 Move X8, [X8+2920]
	157 Move X1, X24
	158 Move X25, X0
	159 Move X2, [X8]
	160 Call 0x22229FC, X0, X1
	161 Move X0, [X22+16]
	162 Move V0, [X31+7]
	163 Move X8, [X31+128]
	164 Move [X31+1], V0
	165 Move [X31+32], X8
	166 Compare X0, 0
	167 JumpIfEqual {226}
	168 Move X8, 0x21FC000
	169 Move X8, [X8+2784]
	170 Move V0, [X31+1]
	171 Move X9, [X31+32]
	172 Add X1, X31, 144
	173 Move X3, [X8]
	174 Move X2, X25
	175 Add X23, X23, 1
	176 Move [X27], V0
	177 Move [X27+16], X9
	178 Call 0x2BA7B68, X0, X1, X2
	179 Move W8, [X20]
	180 Move X3, X31
	181 Subtract W2, W8, W23
	182 Move [X20], W2
	183 Move X0, [X21]
	184 Add X1, X0, X23
	185 Call Native.MemMove, X0, X1, X2
	186 Move X0, [X22+16]
	187 Move V0, [X31+7]
	188 Move X8, [X31+128]
	189 Move [X31+1], V0
	190 Move [X31+32], X8
	191 Compare X0, 0
	192 JumpIfEqual {226}
	193 Move X8, 0x21FC000
	194 Move X2, [X21]
	195 Move X8, [X8+2912]
	196 Move V0, [X31+1]
	197 Move X9, [X31+32]
	198 Add X1, X31, 144
	199 Move X5, [X8]
	200 Move X3, X20
	201 Move W4, W19
	202 Move [X27], V0
	203 Move [X27+16], X9
	204 Call 0x2BA7FEC, X0, X1, X2, X3, X4
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {225}
	209 Move W0, 1
	210 Move X8, [X26+40]
	211 Move X9, [X31+168]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X20, [X31+240]
	214 Move X19, [X31+248]
	215 Move X22, [X31+224]
	216 Move X21, [X31+232]
	217 Move X24, [X31+208]
	218 Move X23, [X31+216]
	219 Move X26, [X31+192]
	220 Move X25, [X31+200]
	221 Move X30, [X31+176]
	222 Move X27, [X31+184]
	223 Add X31, X31, 256
	224 Return X0
	225 Move W0, W31
	226 Call 0x1C17F20
	227 Call 0x3EB2B20

Method: System.Void ResetEncryption()

Disassembly:
	0x01F0551C B.NE 0x1F05530
	0x01F05520 CBZ X8, 0x1F055A4
	0x01F05524 LDR X9, [X8 + 0x38]
	0x01F05528 LDUR V0, [X8 + 0x28]
	0x01F0552C B 0x1F0553C
	0x01F05530 CBZ X8, 0x1F055AC
	0x01F05534 LDR X9, [X8 + 0x20]
	0x01F05538 LDR V0, [X8 + 0x1]
	0x01F0553C STR V0, [X31 + 0x3]
	0x01F05540 LDR V0, [X31 + 0x3]
	0x01F05544 LDR X0, [X29]
	0x01F05548 MOV X8, X9
	0x01F0554C STR X9, [X31 + 0x40]
	0x01F05550 STR V0, [X31 + 0x5]
	0x01F05554 STR X8, [X31 + 0x60]
	0x01F05558 LDR W8, [X0 + 0xE0]
	0x01F0555C CBNZ W8, 0x1F05564
	0x01F05560 BL 0x1C16DFC
	0x01F05564 ADD X0, X31, 0x50
	0x01F05568 MOV X1, X31
	0x01F0556C BL 0x1EF72B4
	0x01F05570 TBZ X0, 0x0, 0x1F05504
	0x01F05574 LDR V0, [X31 + 0x5]
	0x01F05578 LDR X8, [X31 + 0x60]
	0x01F0557C LDR X9, [X22 + 0x18]
	0x01F05580 LDR X0, [X22 + 0x40]
	0x01F05584 STR V0, [X31 + 0x7]
	0x01F05588 STR X8, [X31 + 0x80]
	0x01F0558C LDR X3, [X22 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24D5000
	005 Move W8, [X20+1632]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x21FC000
	012 Move X0, [X0+2944]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1632], W8
	016 Move X20, X19
	017 Add X20, X20, 16
	018 Move X0, [X20]
	019 Compare X0, 0
	020 JumpIfEqual {25}
	021 Move X8, 0x21FC000
	022 Move X8, [X8+2944]
	023 Move X1, [X8]
	024 Call 0x2BA79AC, X0
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move [X20+32], X31
	027 Move [X20], V0
	028 Move [X20+8], V0
	029 Move X0, [X19+56]
	030 Compare X0, 0
	031 JumpIfEqual {35}
	032 Move X1, X31
	033 Call Native.Free, X0
	034 Move [X19+56], X31
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 

Method: System.Void DeleteEncryptionKey(Fusion.Sockets.NetAddress address)

Disassembly:
	0x01F04010 ADRP X0, 0x21EF000
	0x01F04014 LDR X0, [X0 + 0x618]
	0x01F04018 BL 0x1C16CF4
	0x01F0401C ADRP X0, 0x21FC000
	0x01F04020 LDR X0, [X0 + 0xB58]
	0x01F04024 BL 0x1C16CF4
	0x01F04028 ADRP X0, 0x21FC000
	0x01F0402C LDR X0, [X0 + 0xAE0]
	0x01F04030 BL 0x1C16CF4
	0x01F04034 ADRP X0, 0x21FC000
	0x01F04038 LDR X0, [X0 + 0xB60]
	0x01F0403C BL 0x1C16CF4
	0x01F04040 ADRP X0, 0x21FC000
	0x01F04044 LDR X0, [X0 + 0xB68]
	0x01F04048 BL 0x1C16CF4
	0x01F0404C ADRP X0, 0x21F9000
	0x01F04050 LDR X0, [X0 + 0x78]
	0x01F04054 BL 0x1C16CF4
	0x01F04058 MOVZ W8, 0x1
	0x01F0405C STRB W8, [X24 + 0x65F]
	0x01F04060 STR W31, [X31 + 0xC]
	0x01F04064 LDR X0, [X22 + 0x10]
	0x01F04068 CBZ X0, 0x1F04294
	0x01F0406C LDR W8, [X20]
	0x01F04070 CMP W8, 0x2
	0x01F04074 B.LT 0x1F04294
	0x01F04078 LDR X8, [X23 + 0x10]
	0x01F0407C LDR V0, [X23]
	0x01F04080 ADRP X9, 0x21FC000
	0x01F04084 ADD X27, X31, 0x90
	0x01F04088 STR X8, [X31 + 0x80]
	0x01F0408C STR V0, [X31 + 0x7]
	0x01F04090 LDR X8, [X23 + 0x10]
	0x01F04094 LDR V0, [X23]
	0x01F04098 LDR X9, [X9 + 0xB58]
	0x01F0409C ADD X1, X31, 0x90
	0x01F040A0 STR X8, [X31 + 0x60]
	0x01F040A4 STR V0, [X31 + 0x5]
	0x01F040A8 LDR X2, [X9]
	0x01F040AC STR V0, [X27]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X21+40]
	009 Move X22, 0x24D6000
	010 Move X19, X1
	011 Move X20, X0
	012 Move [X31+56], X8
	013 Move W8, [X22+1633]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x21FD000
	019 Move X0, [X0+2768]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1633], W8
	023 Move X0, [X20+16]
	024 Compare X0, 0
	025 JumpIfEqual {37}
	026 Move X9, 0x21FD000
	027 Move X8, [X19+16]
	028 Move V0, [X19]
	029 Move X9, [X9+2768]
	030 Add X1, X31, 32
	031 Move [X31+16], X8
	032 Move [X31], V0
	033 Move X2, [X9]
	034 Move [X31+2], V0
	035 Move [X31+48], X8
	036 Call 0x2BA7CD8, X0, X1
	037 Move X8, [X21+40]
	038 Move X9, [X31+56]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X20, [X31+96]
	041 Move X19, [X31+104]
	042 Move X22, [X31+80]
	043 Move X21, [X31+88]
	044 Move X30, [X31+64]
	045 Add X31, X31, 112
	046 Return 
	047 Call 0x3EB2B20

Method: System.Void .ctor()

Disassembly:
	0x01F03D48 ADRP X0, 0x21F1000
	0x01F03D4C LDR X0, [X0 + 0xDF8]
	0x01F03D50 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Move [X0+56], X31
	003 Call Object..ctor, X0
	004 Return 

