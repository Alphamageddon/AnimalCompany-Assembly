Type: Fusion.Sockets.NetAddress/EqualityComparer

Method: System.Boolean Equals(Fusion.Sockets.NetAddress x, Fusion.Sockets.NetAddress y)

Disassembly:
	0x01EF9FAC CMP W8, 0x0
	0x01EF9FB0 CSEL W9, W9, W8, LT
	0x01EF9FB4 AND W9, W9, 0xFFFFFFF8
	0x01EF9FB8 SUB W8, W9, W8
	0x01EF9FBC ADD W2, W8, 0x8
	0x01EF9FC0 MOV X1, X31
	0x01EF9FC4 B 0x1EF9A4C
	0x01EF9FC8 RET
	0x01EF9FCC LDR W8, [X0 + 0x50]
	0x01EF9FD0 LDR X9, [X0 + 0x40]
	0x01EF9FD4 ADD W10, W8, 0x7
	0x01EF9FD8 CMP W8, 0x0
	0x01EF9FDC CSEL W8, W10, W8, LT
	0x01EF9FE0 SBFM W8, W8, 0x3, 0x1F
	0x01EF9FE4 ADD X0, X9, W8, SXTW

ISIL:
	001 Move X8, [X1]
	002 Move X9, [X2]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X1+8]
	005 Move X9, [X2+8]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, [X1+16]
	008 Move X9, [X2+16]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.Int32 GetHashCode(Fusion.Sockets.NetAddress obj)

Disassembly:
	0x01EF9FE8 RET
	0x01EF9FEC STP X30, X19, [X31 - 0x10]!
	0x01EF9FF0 LDR W8, [X0 + 0x50]
	0x01EF9FF4 MOV X19, X0
	0x01EF9FF8 ANDS W31, W8, 0x7
	0x01EF9FFC B.EQ 0x1EFA028
	0x01EFA000 ADD W9, W8, 0x7
	0x01EFA004 CMP W8, 0x0
	0x01EFA008 CSEL W9, W9, W8, LT
	0x01EFA00C AND W9, W9, 0xFFFFFFF8
	0x01EFA010 SUB W8, W9, W8
	0x01EFA014 ADD W2, W8, 0x8
	0x01EFA018 MOV X0, X19
	0x01EFA01C MOV X1, X31
	0x01EFA020 BL 0x1EF9A4C
	0x01EFA024 LDR W8, [X19 + 0x50]
	0x01EFA028 LDR X9, [X19 + 0x40]
	0x01EFA02C ADD W10, W8, 0x7
	0x01EFA030 CMP W8, 0x0
	0x01EFA034 CSEL W8, W10, W8, LT
	0x01EFA038 SBFM W8, W8, 0x3, 0x1F
	0x01EFA03C ADD X0, X9, W8, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X0, X1
	007 Move X1, X31
	008 Call UInt64.GetHashCode, X0
	009 Move W20, W0
	010 Add X0, X19, 8
	011 Move X1, X31
	012 Call UInt64.GetHashCode, X0
	013 Move W21, W0
	014 Add X0, X19, 16
	015 Move X1, X31
	016 Call UInt64.GetHashCode, X0
	017 Move W8, 397
	018 Multiply W9, W20, W8
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Xor W9, W9, W21
	022 Multiply W8, W9, W8
	023 Xor W0, W8, W0
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01EFA040 LDP X30, X19, [X31], #0x10
	0x01EFA044 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

