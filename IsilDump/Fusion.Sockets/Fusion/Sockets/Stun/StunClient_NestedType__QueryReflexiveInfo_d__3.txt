Type: Fusion.Sockets.Stun.StunClient/<QueryReflexiveInfo>d__3

Method: System.Void MoveNext()

Disassembly:
	0x01F06DC0 LDR X0, [X8]
	0x01F06DC4 BL 0x1C16F10
	0x01F06DC8 ADRP X8, 0x21F4000
	0x01F06DCC LDR X8, [X8 + 0x688]
	0x01F06DD0 MOV X19, X0
	0x01F06DD4 LDR X1, [X8]
	0x01F06DD8 BL 0x2DA9EF4
	0x01F06DDC LDR X8, [X22]
	0x01F06DE0 LDR X8, [X8 + 0xB8]
	0x01F06DE4 STR X19, [X8]
	0x01F06DE8 ADRP X8, 0x21ED000
	0x01F06DEC LDR X8, [X8 + 0x6C0]
	0x01F06DF0 LDR X0, [X8]
	0x01F06DF4 ADRP X8, 0x21FA000
	0x01F06DF8 LDR X8, [X8 + 0xBA0]
	0x01F06DFC LDR W9, [X0 + 0xE0]
	0x01F06E00 LDR X19, [X8]
	0x01F06E04 CBNZ W9, 0x1F06E0C
	0x01F06E08 BL 0x1C16DFC
	0x01F06E0C MOV X0, X19
	0x01F06E10 MOV X1, X31
	0x01F06E14 BL 0x338C698
	0x01F06E18 ADRP X8, 0x21ED000
	0x01F06E1C LDR X8, [X8 + 0xDF8]
	0x01F06E20 MOV X19, X0
	0x01F06E24 LDR X8, [X8]
	0x01F06E28 LDR W9, [X8 + 0xE0]
	0x01F06E2C CBNZ W9, 0x1F06E38
	0x01F06E30 MOV X0, X8
	0x01F06E34 BL 0x1C16DFC
	0x01F06E38 MOV X0, X19
	0x01F06E3C MOV X1, X31
	0x01F06E40 BL 0x33B02B8
	0x01F06E44 CBZ X0, 0x1F07014
	0x01F06E48 MOV X1, X31
	0x01F06E4C BL 0x33A2834
	0x01F06E50 MOV X19, X0
	0x01F06E54 CBZ X0, 0x1F07018
	0x01F06E58 ADRP X21, 0x21ED000
	0x01F06E5C ADRP X23, 0x21ED000
	0x01F06E60 ADRP X24, 0x21EF000
	0x01F06E64 LDR X21, [X21 + 0xE18]
	0x01F06E68 LDR X23, [X23 + 0x758]
	0x01F06E6C LDR X24, [X24 + 0x9D8]
	0x01F06E70 LDR X8, [X19]
	0x01F06E74 LDR X1, [X21]
	0x01F06E78 LDRH W9, [X8 + 0x12E]
	0x01F06E7C CBZ X9, 0x1F06EA0
	0x01F06E80 LDR X10, [X8 + 0xB0]
	0x01F06E84 ADD X10, X10, 0x8
	0x01F06E88 LDUR X11, [X10 - 0x8]
	0x01F06E8C CMP X11, X1
	0x01F06E90 B.EQ 0x1F06EB0
	0x01F06E94 SUBS X9, X9, 0x1
	0x01F06E98 ADD X10, X10, 0x10
	0x01F06E9C B.NE 0x1F06E88
	0x01F06EA0 MOV X0, X19
	0x01F06EA4 MOV W2, W31
	0x01F06EA8 BL 0x1C5C788
	0x01F06EAC B 0x1F06EBC
	0x01F06EB0 LDRSW X9, [X10]
	0x01F06EB4 ADD X8, X8, X9, 0x4, LSL
	0x01F06EB8 ADD X0, X8, 0x138
	0x01F06EBC LDP X8, X1, [X0]
	0x01F06EC0 MOV X0, X19
	0x01F06EC4 BLR X8
	0x01F06EC8 TBZ X0, 0x0, 0x1F06F6C
	0x01F06ECC LDR X8, [X19]
	0x01F06ED0 LDR X1, [X21]
	0x01F06ED4 LDRH W9, [X8 + 0x12E]
	0x01F06ED8 CBZ X9, 0x1F06EFC
	0x01F06EDC LDR X10, [X8 + 0xB0]
	0x01F06EE0 ADD X10, X10, 0x8
	0x01F06EE4 LDUR X11, [X10 - 0x8]
	0x01F06EE8 CMP X11, X1
	0x01F06EEC B.EQ 0x1F06F0C
	0x01F06EF0 SUBS X9, X9, 0x1
	0x01F06EF4 ADD X10, X10, 0x10
	0x01F06EF8 B.NE 0x1F06EE4
	0x01F06EFC MOVZ W2, 0x1
	0x01F06F00 MOV X0, X19
	0x01F06F04 BL 0x1C5C788
	0x01F06F08 B 0x1F06F1C
	0x01F06F0C LDR W9, [X10]
	0x01F06F10 ADD W9, W9, 0x1
	0x01F06F14 ADD X8, X8, W9, 0x4, SXTW
	0x01F06F18 ADD X0, X8, 0x138
	0x01F06F1C LDP X8, X1, [X0]
	0x01F06F20 MOV X0, X19
	0x01F06F24 BLR X8
	0x01F06F28 LDR X8, [X22]
	0x01F06F2C LDR X8, [X8 + 0xB8]
	0x01F06F30 LDR X20, [X8]
	0x01F06F34 CBZ X20, 0x1F0700C
	0x01F06F38 CBZ X0, 0x1F07010
	0x01F06F3C LDR X8, [X0]
	0x01F06F40 LDR X1, [X23]
	0x01F06F44 LDR X8, [X8 + 0x40]
	0x01F06F48 LDR X9, [X1 + 0x40]
	0x01F06F4C CMP X8, X9
	0x01F06F50 B.NE 0x1F07008
	0x01F06F54 BL 0x1C16E08
	0x01F06F58 LDR W1, [X0]
	0x01F06F5C LDR X2, [X24]
	0x01F06F60 MOV X0, X20
	0x01F06F64 BL 0x2DAB03C
	0x01F06F68 B 0x1F06E70
	0x01F06F6C MOV X20, X31
	0x01F06F70 ADRP X21, 0x21ED000
	0x01F06F74 LDR X21, [X21 + 0xE00]
	0x01F06F78 MOV X0, X19
	0x01F06F7C LDR X1, [X21]
	0x01F06F80 BL 0x1C16E00
	0x01F06F84 CBZ X0, 0x1F06FE4
	0x01F06F88 LDR X8, [X0]
	0x01F06F8C LDR X1, [X21]
	0x01F06F90 MOV X19, X0
	0x01F06F94 LDRH W9, [X8 + 0x12E]
	0x01F06F98 CBZ X9, 0x1F06FBC
	0x01F06F9C LDR X10, [X8 + 0xB0]
	0x01F06FA0 ADD X10, X10, 0x8
	0x01F06FA4 LDUR X11, [X10 - 0x8]
	0x01F06FA8 CMP X11, X1
	0x01F06FAC B.EQ 0x1F06FCC
	0x01F06FB0 SUBS X9, X9, 0x1
	0x01F06FB4 ADD X10, X10, 0x10
	0x01F06FB8 B.NE 0x1F06FA4
	0x01F06FBC MOV X0, X19
	0x01F06FC0 MOV W2, W31
	0x01F06FC4 BL 0x1C5C788
	0x01F06FC8 B 0x1F06FD8
	0x01F06FCC LDRSW X9, [X10]
	0x01F06FD0 ADD X8, X8, X9, 0x4, LSL
	0x01F06FD4 ADD X0, X8, 0x138
	0x01F06FD8 LDP X8, X1, [X0]
	0x01F06FDC MOV X0, X19
	0x01F06FE0 BLR X8
	0x01F06FE4 CBNZ X20, 0x1F0701C
	0x01F06FE8 LDR X8, [X22]
	0x01F06FEC LDR X8, [X8 + 0xB8]
	0x01F06FF0 LDR X0, [X8]
	0x01F06FF4 LDP X20, X19, [X31 + 0x30]
	0x01F06FF8 LDP X22, X21, [X31 + 0x20]
	0x01F06FFC LDP X24, X23, [X31 + 0x10]
	0x01F07000 LDR X30, [X31], #0x40
	0x01F07004 RET
	0x01F07008 BL 0x1C171E0
	0x01F0700C BL 0x1C16F20
	0x01F07010 BL 0x1C16F20
	0x01F07014 BL 0x1C16F20
	0x01F07018 BL 0x1C16F20
	0x01F0701C MOV X0, X20
	0x01F07020 BL 0x1C16F18
	0x01F07024 B 0x1F07038
	0x01F07028 B 0x1F07038
	0x01F0702C B 0x1F07038
	0x01F07030 B 0x1F07038
	0x01F07034 B 0x1F07038
	0x01F07038 MOV X21, X0
	0x01F0703C CMP W1, 0x1
	0x01F07040 B.NE 0x1F07058
	0x01F07044 MOV X0, X21
	0x01F07048 BL 0x3EB1AD0
	0x01F0704C LDR X20, [X0]
	0x01F07050 BL 0x3EB1AE0
	0x01F07054 B 0x1F06F70
	0x01F07058 MOV X20, X31
	0x01F0705C B 0x1F07064
	0x01F07060 MOV X21, X0
	0x01F07064 ADRP X22, 0x21EC000
	0x01F07068 LDR X22, [X22 + 0xE00]
	0x01F0706C LDR X1, [X22]
	0x01F07070 MOV X0, X19
	0x01F07074 BL 0x1C16E00
	0x01F07078 MOV X19, X0
	0x01F0707C CBZ X0, 0x1F070D8
	0x01F07080 LDR X8, [X19]
	0x01F07084 LDR X1, [X22]
	0x01F07088 LDRH W9, [X8 + 0x12E]
	0x01F0708C CBZ X9, 0x1F070B0
	0x01F07090 LDR X10, [X8 + 0xB0]
	0x01F07094 ADD X10, X10, 0x8
	0x01F07098 LDUR X11, [X10 - 0x8]
	0x01F0709C CMP X11, X1
	0x01F070A0 B.EQ 0x1F070C0
	0x01F070A4 SUBS X9, X9, 0x1
	0x01F070A8 ADD X10, X10, 0x10
	0x01F070AC B.NE 0x1F07098
	0x01F070B0 MOV X0, X19
	0x01F070B4 MOV W2, W31
	0x01F070B8 BL 0x1C5C788
	0x01F070BC B 0x1F070CC
	0x01F070C0 LDRSW X9, [X10]
	0x01F070C4 ADD X8, X8, X9, 0x4, LSL
	0x01F070C8 ADD X0, X8, 0x138
	0x01F070CC LDP X8, X1, [X0]
	0x01F070D0 MOV X0, X19
	0x01F070D4 BLR X8
	0x01F070D8 CBNZ X20, 0x1F070E4
	0x01F070DC MOV X0, X21
	0x01F070E0 BL 0x1D2C690
	0x01F070E4 MOV X0, X20
	0x01F070E8 BL 0x1C16F18
	0x01F070EC BL 0x1990590
	0x01F070F0 LDR W0, [X0 + 0x10]
	0x01F070F4 RET
	0x01F070F8 STR W1, [X0 + 0x10]
	0x01F070FC RET
	0x01F07100 LDR X0, [X0 + 0x18]
	0x01F07104 RET
	0x01F07108 STR X1, [X0 + 0x18]
	0x01F0710C RET
	0x01F07110 STP X30, X21, [X31 - 0x20]!
	0x01F07114 STP X20, X19, [X31 + 0x10]
	0x01F07118 ADRP X21, 0x24D2000
	0x01F0711C LDRB W8, [X21 + 0x675]
	0x01F07120 MOV X19, X1
	0x01F07124 MOV X20, X0
	0x01F07128 TBNZ X8, 0x0, 0x1F07140
	0x01F0712C ADRP X0, 0x21F9000
	0x01F07130 LDR X0, [X0 + 0xC90]
	0x01F07134 BL 0x1C16CF4
	0x01F07138 MOVZ W8, 0x1
	0x01F0713C STRB W8, [X21 + 0x675]
	0x01F07140 LDR X0, [X20 + 0x30]
	0x01F07144 CBZ X0, 0x1F07168
	0x01F07148 ADRP X8, 0x21F9000
	0x01F0714C LDR X8, [X8 + 0xC90]
	0x01F07150 MOV X2, X19
	0x01F07154 LDP X20, X19, [X31 + 0x10]
	0x01F07158 MOVZ W1, 0x1
	0x01F0715C LDR X3, [X8]
	0x01F07160 LDP X30, X21, [X31], #0x20
	0x01F07164 B 0x2A44E04
	0x01F07168 BL 0x1C16F20
	0x01F0716C LDR X0, [X0 + 0x20]
	0x01F07170 RET
	0x01F07174 STR X1, [X0 + 0x20]
	0x01F07178 RET
	0x01F0717C LDR X0, [X0 + 0x28]
	0x01F07180 RET
	0x01F07184 STR X1, [X0 + 0x28]
	0x01F07188 RET
	0x01F0718C LDR X0, [X0 + 0x30]
	0x01F07190 RET
	0x01F07194 STR X1, [X0 + 0x30]
	0x01F07198 RET
	0x01F0719C STP X30, X23, [X31 - 0x30]!
	0x01F071A0 STP X22, X21, [X31 + 0x10]
	0x01F071A4 STP X20, X19, [X31 + 0x20]
	0x01F071A8 LDRSW X9, [X2]
	0x01F071AC MOV X19, X2
	0x01F071B0 MOV X20, X0
	0x01F071B4 ADD W8, W9, 0x1
	0x01F071B8 ADD W10, W9, 0x2
	0x01F071BC STR W8, [X2]
	0x01F071C0 ADD W11, W9, 0x3
	0x01F071C4 LDRB W12, [X9, X1, LSL]
	0x01F071C8 STR W10, [X2]
	0x01F071CC LDRB W8, [X1, W8, SXTW]
	0x01F071D0 STR W11, [X2]
	0x01F071D4 ADD W21, W9, 0x4
	0x01F071D8 LDRB W22, [X1, W10, SXTW]
	0x01F071DC STR W21, [X2]
	0x01F071E0 LDRB W23, [X1, W11, SXTW]
	0x01F071E4 BFM W8, W12, 0x18, 0x7
	0x01F071E8 CMP W8, 0x1
	0x01F071EC B.NE 0x1F07208
	0x01F071F0 MOV X2, X19
	0x01F071F4 BL 0x1F07E4C
	0x01F071F8 MOV X1, X0
	0x01F071FC MOV X0, X20
	0x01F07200 BL 0x1F07110
	0x01F07204 B 0x1F07234
	0x01F07208 CMP W8, 0x20
	0x01F0720C B.NE 0x1F07234
	0x01F07210 SUB W8, W8, 0x6
	0x01F07214 CMP W8, 0x5
	0x01F07218 B.CC 0x1F07234
	0x01F0721C MOV X0, X20
	0x01F07220 MOV X2, X19
	0x01F07224 BL 0x1F07A64
	0x01F07228 MOV X1, X0
	0x01F0722C MOV X0, X20
	0x01F07230 BL 0x1F07110
	0x01F07234 BFM W23, W22, 0x18, 0x7
	0x01F07238 ADD W8, W23, W21
	0x01F0723C STR W8, [X19]
	0x01F07240 LDP X20, X19, [X31 + 0x20]
	0x01F07244 LDP X22, X21, [X31 + 0x10]
	0x01F07248 LDP X30, X23, [X31], #0x30
	0x01F0724C RET
	0x01F07250 B 0x1F07254
	0x01F07254 MOV X20, X0
	0x01F07258 CMP W1, 0x1
	0x01F0725C B.NE 0x1F072B8
	0x01F07260 MOV X0, X20
	0x01F07264 BL 0x3EB1AD0
	0x01F07268 MOV X20, X0
	0x01F0726C ADRP X0, 0x21EC000
	0x01F07270 LDR X0, [X0 + 0x7D0]
	0x01F07274 BL 0x1C16D08
	0x01F07278 LDR X8, [X20]
	0x01F0727C LDR X1, [X8]
	0x01F07280 BL 0x1C17270
	0x01F07284 TBZ X0, 0x0, 0x1F07290
	0x01F07288 BL 0x3EB1AE0
	0x01F0728C B 0x1F07234
	0x01F07290 MOVZ W0, 0x8
	0x01F07294 BL 0x3EB1AF0
	0x01F07298 LDR X8, [X20]
	0x01F0729C STR X8, [X0]
	0x01F072A0 ADRP X1, 0x1FAD000
	0x01F072A4 ADD X1, X1, 0xE58
	0x01F072A8 MOV X2, X31
	0x01F072AC BL 0x3EB1B00
	0x01F072B0 MOV X20, X0
	0x01F072B4 BL 0x3EB1AE0
	0x01F072B8 MOV X0, X20
	0x01F072BC BL 0x1D2C690
	0x01F072C0 BL 0x1990590
	0x01F072C4 SUB X31, X31, 0xC0
	0x01F072C8 STP X29, X30, [X31 + 0x60]
	0x01F072CC STP X28, X27, [X31 + 0x70]
	0x01F072D0 STP X26, X25, [X31 + 0x80]
	0x01F072D4 STP X24, X23, [X31 + 0x90]
	0x01F072D8 STP X22, X21, [X31 + 0xA0]
	0x01F072DC STP X20, X19, [X31 + 0xB0]
	0x01F072E0 ADRP X22, 0x24D2000
	0x01F072E4 LDRB W8, [X22 + 0x67A]
	0x01F072E8 MOV X19, X2
	0x01F072EC MOV X20, X1
	0x01F072F0 MOV X21, X0
	0x01F072F4 TBNZ X8, 0x0, 0x1F0736C
	0x01F072F8 ADRP X0, 0x21F9000
	0x01F072FC LDR X0, [X0 + 0xC98]
	0x01F07300 BL 0x1C16CF4
	0x01F07304 ADRP X0, 0x21F9000
	0x01F07308 LDR X0, [X0 + 0xCA0]
	0x01F0730C BL 0x1C16CF4
	0x01F07310 ADRP X0, 0x21F9000
	0x01F07314 LDR X0, [X0 + 0xCA8]
	0x01F07318 BL 0x1C16CF4
	0x01F0731C ADRP X0, 0x21F9000
	0x01F07320 LDR X0, [X0 + 0xCB0]
	0x01F07324 BL 0x1C16CF4
	0x01F07328 ADRP X0, 0x21F9000
	0x01F0732C LDR X0, [X0 + 0xBB8]
	0x01F07330 BL 0x1C16CF4
	0x01F07334 ADRP X0, 0x21F9000
	0x01F07338 LDR X0, [X0 + 0xCB8]
	0x01F0733C BL 0x1C16CF4
	0x01F07340 ADRP X0, 0x21F9000
	0x01F07344 LDR X0, [X0 + 0xCC0]
	0x01F07348 BL 0x1C16CF4
	0x01F0734C ADRP X0, 0x21EC000
	0x01F07350 LDR X0, [X0 + 0x5A8]
	0x01F07354 BL 0x1C16CF4
	0x01F07358 ADRP X0, 0x21EE000
	0x01F0735C LDR X0, [X0 + 0x278]
	0x01F07360 BL 0x1C16CF4
	0x01F07364 MOVZ W8, 0x1
	0x01F07368 STRB W8, [X22 + 0x67A]
	0x01F0736C MOVI V0.2D, 0x0
	0x01F07370 STR X31, [X31 + 0x50]
	0x01F07374 STP V0, V0, [X31 + 0x30]
	0x01F07378 LDR X0, [X21 + 0x30]
	0x01F0737C CBZ X0, 0x1F07778
	0x01F07380 ADRP X8, 0x21F9000
	0x01F07384 LDR X8, [X8 + 0xC98]
	0x01F07388 ADRP X24, 0x21F9000
	0x01F0738C ADRP X25, 0x21EC000
	0x01F07390 LDR X24, [X24 + 0xCA8]
	0x01F07394 LDR X25, [X25 + 0x5A8]
	0x01F07398 LDR X1, [X8]
	0x01F0739C ADD X8, X31, 0x8
	0x01F073A0 BL 0x2A45240
	0x01F073A4 LDUR V0, [X31 + 0x8]
	0x01F073A8 LDUR V1, [X31 + 0x18]
	0x01F073AC LDR X8, [X31 + 0x28]
	0x01F073B0 MOVZ W29, 0x851F
	0x01F073B4 MOVZ W28, 0x9
	0x01F073B8 MOVK W29, 0x51EB0000
	0x01F073BC STP V0, V1, [X31 + 0x30]
	0x01F073C0 STR X8, [X31 + 0x50]
	0x01F073C4 MOVZ W23, 0x6
	0x01F073C8 LDR X1, [X24]
	0x01F073CC ADD X0, X31, 0x30
	0x01F073D0 BL 0x2BFE354
	0x01F073D4 TBZ X0, 0x0, 0x1F076E0
	0x01F073D8 LDR W8, [X31 + 0x40]
	0x01F073DC CMP W8, 0xA
	0x01F073E0 B.GT 0x1F073C8
	0x01F073E4 CMP W8, 0x9
	0x01F073E8 B.EQ 0x1F07544
	0x01F073EC LDR X22, [X31 + 0x48]
	0x01F073F0 CMP W8, 0x6
	0x01F073F4 B.EQ 0x1F07450
	0x01F073F8 CMP W8, 0x1
	0x01F073FC B.NE 0x1F073C8
	0x01F07400 CBZ X22, 0x1F07438
	0x01F07404 ADRP X9, 0x21F9000
	0x01F07408 LDR X8, [X22]
	0x01F0740C LDR X9, [X9 + 0xBB8]
	0x01F07410 LDRB W10, [X8 + 0x130]
	0x01F07414 LDR X1, [X9]
	0x01F07418 LDRB W9, [X1 + 0x130]
	0x01F0741C CMP W10, W9
	0x01F07420 B.CC 0x1F07714
	0x01F07424 LDR X8, [X8 + 0xC8]
	0x01F07428 ADD X8, X8, X9, 0x3, LSL
	0x01F0742C LDUR X8, [X8 - 0x8]
	0x01F07430 CMP X8, X1
	0x01F07434 B.NE 0x1F07714
	0x01F07438 MOVZ W1, 0x1
	0x01F0743C MOV X2, X22
	0x01F07440 MOV X3, X20
	0x01F07444 MOV X4, X19
	0x01F07448 BL 0x1F0785C
	0x01F0744C B 0x1F073C8
	0x01F07450 MOV X0, X31
	0x01F07454 BL 0x3242EC8
	0x01F07458 CBZ X0, 0x1F07764
	0x01F0745C CBZ X22, 0x1F07478
	0x01F07460 ADRP X8, 0x21EE000
	0x01F07464 LDR X8, [X8 + 0x278]
	0x01F07468 LDR X1, [X8]
	0x01F0746C LDR X8, [X22]
	0x01F07470 CMP X8, X1
	0x01F07474 B.NE 0x1F07770
	0x01F07478 LDR X8, [X0]
	0x01F0747C LDR X9, [X8 + 0x268]
	0x01F07480 LDR X2, [X8 + 0x270]
	0x01F07484 MOV X1, X22
	0x01F07488 BLR X9
	0x01F0748C LDRSW X8, [X19]
	0x01F07490 ADD W9, W8, 0x1
	0x01F07494 STR W9, [X19]
	0x01F07498 CBZ X20, 0x1F0771C
	0x01F0749C LDR W9, [X20 + 0x18]
	0x01F074A0 CMP W8, W9
	0x01F074A4 B.CS 0x1F0776C
	0x01F074A8 ADD X8, X20, X8
	0x01F074AC STRB W31, [X8 + 0x20]
	0x01F074B0 LDRSW X8, [X19]
	0x01F074B4 ADD W9, W8, 0x1
	0x01F074B8 STR W9, [X19]
	0x01F074BC LDR W9, [X20 + 0x18]
	0x01F074C0 CMP W8, W9
	0x01F074C4 B.CS 0x1F07760
	0x01F074C8 ADD X8, X20, X8
	0x01F074CC STRB W23, [X8 + 0x20]
	0x01F074D0 LDRSW X8, [X19]
	0x01F074D4 MOV X22, X0
	0x01F074D8 ADD W9, W8, 0x1
	0x01F074DC STR W9, [X19]
	0x01F074E0 CBZ X0, 0x1F07768
	0x01F074E4 LDR W9, [X20 + 0x18]
	0x01F074E8 CMP W8, W9
	0x01F074EC B.CS 0x1F0775C
	0x01F074F0 LDR X9, [X22 + 0x18]
	0x01F074F4 ADD X8, X20, X8
	0x01F074F8 UBFM X9, X9, 0x8, 0x3F
	0x01F074FC STRB W9, [X8 + 0x20]
	0x01F07500 LDRSW X8, [X19]
	0x01F07504 ADD W9, W8, 0x1
	0x01F07508 STR W9, [X19]
	0x01F0750C LDR W9, [X20 + 0x18]
	0x01F07510 CMP W8, W9
	0x01F07514 B.CS 0x1F07720
	0x01F07518 LDR X9, [X22 + 0x18]
	0x01F0751C ADD X8, X20, X8
	0x01F07520 STRB W9, [X8 + 0x20]
	0x01F07524 LDR W3, [X19]
	0x01F07528 LDR W4, [X22 + 0x18]
	0x01F0752C MOV X0, X22
	0x01F07530 MOV W1, W31
	0x01F07534 MOV X2, X20
	0x01F07538 MOV X5, X31
	0x01F0753C BL 0x339FCE8
	0x01F07540 B 0x1F076CC
	0x01F07544 MOV X0, X31
	0x01F07548 BL 0x3242EC8
	0x01F0754C LDR X8, [X21 + 0x28]
	0x01F07550 CBZ X8, 0x1F0773C
	0x01F07554 CBZ X0, 0x1F07740
	0x01F07558 LDR X9, [X0]
	0x01F0755C LDR X1, [X8 + 0x18]
	0x01F07560 LDR X8, [X9 + 0x268]
	0x01F07564 LDR X2, [X9 + 0x270]
	0x01F07568 BLR X8
	0x01F0756C LDRSW X8, [X19]
	0x01F07570 ADD W9, W8, 0x1
	0x01F07574 STR W9, [X19]
	0x01F07578 CBZ X20, 0x1F07730
	0x01F0757C LDR W9, [X20 + 0x18]
	0x01F07580 CMP W8, W9
	0x01F07584 B.CS 0x1F07758
	0x01F07588 ADD X8, X20, X8
	0x01F0758C STRB W31, [X8 + 0x20]
	0x01F07590 LDRSW X8, [X19]
	0x01F07594 ADD W9, W8, 0x1
	0x01F07598 STR W9, [X19]
	0x01F0759C LDR W9, [X20 + 0x18]
	0x01F075A0 CMP W8, W9
	0x01F075A4 B.CS 0x1F0772C
	0x01F075A8 ADD X8, X20, X8
	0x01F075AC STRB W28, [X8 + 0x20]
	0x01F075B0 LDRSW X8, [X19]
	0x01F075B4 ADD W9, W8, 0x1
	0x01F075B8 STR W9, [X19]
	0x01F075BC LDR W9, [X20 + 0x18]
	0x01F075C0 CMP W8, W9
	0x01F075C4 B.CS 0x1F07744
	0x01F075C8 ADD X8, X20, X8
	0x01F075CC STRB W31, [X8 + 0x20]
	0x01F075D0 LDRSW X8, [X19]
	0x01F075D4 MOV X22, X0
	0x01F075D8 ADD W9, W8, 0x1
	0x01F075DC STR W9, [X19]
	0x01F075E0 CBZ X0, 0x1F07734
	0x01F075E4 LDR W9, [X20 + 0x18]
	0x01F075E8 CMP W8, W9
	0x01F075EC B.CS 0x1F07750
	0x01F075F0 LDRB W9, [X22 + 0x18]
	0x01F075F4 ADD X8, X20, X8
	0x01F075F8 ADD W9, W9, 0x4
	0x01F075FC STRB W9, [X8 + 0x20]
	0x01F07600 LDRSW X8, [X19]
	0x01F07604 ADD W9, W8, 0x1
	0x01F07608 STR W9, [X19]
	0x01F0760C LDR W9, [X20 + 0x18]
	0x01F07610 CMP W8, W9
	0x01F07614 B.CS 0x1F07754
	0x01F07618 ADD X8, X20, X8
	0x01F0761C STRB W31, [X8 + 0x20]
	0x01F07620 LDRSW X8, [X19]
	0x01F07624 ADD W9, W8, 0x1
	0x01F07628 STR W9, [X19]
	0x01F0762C LDR W9, [X20 + 0x18]
	0x01F07630 CMP W8, W9
	0x01F07634 B.CS 0x1F07724
	0x01F07638 ADD X8, X20, X8
	0x01F0763C STRB W31, [X8 + 0x20]
	0x01F07640 LDRSW X26, [X19]
	0x01F07644 ADD W8, W26, 0x1
	0x01F07648 STR W8, [X19]
	0x01F0764C LDR X8, [X21 + 0x28]
	0x01F07650 CBZ X8, 0x1F07728
	0x01F07654 LDR X0, [X25]
	0x01F07658 LDR W27, [X8 + 0x10]
	0x01F0765C LDR W9, [X0 + 0xE0]
	0x01F07660 CBNZ W9, 0x1F07668
	0x01F07664 BL 0x1C16DFC
	0x01F07668 LDR W8, [X20 + 0x18]
	0x01F0766C CMP W26, W8
	0x01F07670 B.CS 0x1F0774C
	0x01F07674 SMADDL X8, X27, X29, X31
	0x01F07678 UBFM X9, X8, 0x3F, 0x3F
	0x01F0767C UBFM X8, X8, 0x25, 0x3F
	0x01F07680 ADD W8, W8, W9
	0x01F07684 ADD X9, X20, X26
	0x01F07688 STRB W8, [X9 + 0x20]
	0x01F0768C LDRSW X8, [X19]
	0x01F07690 ADD W9, W8, 0x1
	0x01F07694 STR W9, [X19]
	0x01F07698 LDR X9, [X21 + 0x28]
	0x01F0769C CBZ X9, 0x1F07748
	0x01F076A0 LDR W10, [X20 + 0x18]
	0x01F076A4 CMP W8, W10
	0x01F076A8 B.CS 0x1F07738
	0x01F076AC LDR W9, [X9 + 0x10]
	0x01F076B0 ADD X8, X20, X8
	0x01F076B4 STRB W9, [X8 + 0x20]
	0x01F076B8 LDR W2, [X22 + 0x18]
	0x01F076BC MOV X0, X22
	0x01F076C0 MOV X1, X20
	0x01F076C4 MOV X3, X31
	0x01F076C8 BL 0x33A0C7C
	0x01F076CC LDR W8, [X19]
	0x01F076D0 LDR W9, [X22 + 0x18]
	0x01F076D4 ADD W8, W8, W9
	0x01F076D8 STR W8, [X19]
	0x01F076DC B 0x1F073C8
	0x01F076E0 ADRP X8, 0x21F9000
	0x01F076E4 LDR X8, [X8 + 0xCA0]
	0x01F076E8 ADD X0, X31, 0x30
	0x01F076EC LDR X1, [X8]
	0x01F076F0 BL 0x2BFE46C
	0x01F076F4 LDP X20, X19, [X31 + 0xB0]
	0x01F076F8 LDP X22, X21, [X31 + 0xA0]
	0x01F076FC LDP X24, X23, [X31 + 0x90]
	0x01F07700 LDP X26, X25, [X31 + 0x80]
	0x01F07704 LDP X28, X27, [X31 + 0x70]
	0x01F07708 LDP X29, X30, [X31 + 0x60]
	0x01F0770C ADD X31, X31, 0xC0
	0x01F07710 RET
	0x01F07714 MOV X0, X22
	0x01F07718 BL 0x1C171E0
	0x01F0771C BL 0x1C16F20
	0x01F07720 BL 0x1C16F28
	0x01F07724 BL 0x1C16F28
	0x01F07728 BL 0x1C16F20
	0x01F0772C BL 0x1C16F28
	0x01F07730 BL 0x1C16F20
	0x01F07734 BL 0x1C16F20
	0x01F07738 BL 0x1C16F28
	0x01F0773C BL 0x1C16F20
	0x01F07740 BL 0x1C16F20
	0x01F07744 BL 0x1C16F28
	0x01F07748 BL 0x1C16F20
	0x01F0774C BL 0x1C16F28
	0x01F07750 BL 0x1C16F28
	0x01F07754 BL 0x1C16F28
	0x01F07758 BL 0x1C16F28
	0x01F0775C BL 0x1C16F28
	0x01F07760 BL 0x1C16F28
	0x01F07764 BL 0x1C16F20
	0x01F07768 BL 0x1C16F20
	0x01F0776C BL 0x1C16F28
	0x01F07770 MOV X0, X22
	0x01F07774 BL 0x1C171E0
	0x01F07778 BL 0x1C16F20
	0x01F0777C B 0x1F077E8
	0x01F07780 B 0x1F077E8
	0x01F07784 B 0x1F077E8
	0x01F07788 B 0x1F077E8
	0x01F0778C B 0x1F077E8
	0x01F07790 B 0x1F077E8
	0x01F07794 B 0x1F077E8
	0x01F07798 B 0x1F077E8
	0x01F0779C B 0x1F077E8
	0x01F077A0 B 0x1F077E8
	0x01F077A4 B 0x1F077E8
	0x01F077A8 B 0x1F077E8
	0x01F077AC B 0x1F077E8
	0x01F077B0 B 0x1F077E8
	0x01F077B4 B 0x1F077E8
	0x01F077B8 B 0x1F077E8
	0x01F077BC B 0x1F077E8
	0x01F077C0 B 0x1F077E8
	0x01F077C4 B 0x1F077E8
	0x01F077C8 B 0x1F077E8
	0x01F077CC B 0x1F077E8
	0x01F077D0 B 0x1F077E8
	0x01F077D4 B 0x1F077E8
	0x01F077D8 B 0x1F077E8
	0x01F077DC B 0x1F077E8
	0x01F077E0 B 0x1F077E8
	0x01F077E4 B 0x1F077E8
	0x01F077E8 MOV X19, X0
	0x01F077EC CMP W1, 0x1
	0x01F077F0 B.NE 0x1F07824
	0x01F077F4 MOV X0, X19
	0x01F077F8 BL 0x3EB1AD0
	0x01F077FC LDR X20, [X0]
	0x01F07800 BL 0x3EB1AE0
	0x01F07804 ADRP X8, 0x21F9000
	0x01F07808 LDR X8, [X8 + 0xCA0]
	0x01F0780C ADD X0, X31, 0x30
	0x01F07810 LDR X1, [X8]
	0x01F07814 BL 0x2BFE46C
	0x01F07818 CBZ X20, 0x1F076F4
	0x01F0781C MOV X0, X20
	0x01F07820 BL 0x1C16F18
	0x01F07824 MOV X20, X31
	0x01F07828 B 0x1F07830
	0x01F0782C MOV X19, X0
	0x01F07830 ADRP X8, 0x21F9000
	0x01F07834 LDR X8, [X8 + 0xCA0]
	0x01F07838 LDR X1, [X8]
	0x01F0783C ADD X0, X31, 0x30
	0x01F07840 BL 0x2BFE46C
	0x01F07844 CBNZ X20, 0x1F07850
	0x01F07848 MOV X0, X19
	0x01F0784C BL 0x1D2C690
	0x01F07850 MOV X0, X20
	0x01F07854 BL 0x1C16F18
	0x01F07858 BL 0x1990590
	0x01F0785C STR X30, [X31 - 0x20]!
	0x01F07860 STP X20, X19, [X31 + 0x10]
	0x01F07864 LDRSW X8, [X4]
	0x01F07868 ADD W9, W8, 0x1
	0x01F0786C STR W9, [X4]
	0x01F07870 CBZ X3, 0x1F07A60
	0x01F07874 LDR W9, [X3 + 0x18]
	0x01F07878 MOV X19, X3
	0x01F0787C CMP W8, W9
	0x01F07880 B.CS 0x1F07A5C
	0x01F07884 UBFM W9, W1, 0x8, 0x1F
	0x01F07888 ADD X8, X19, X8
	0x01F0788C STRB W9, [X8 + 0x20]
	0x01F07890 LDRSW X8, [X4]
	0x01F07894 MOV X20, X4
	0x01F07898 ADD W9, W8, 0x1
	0x01F0789C STR W9, [X4]
	0x01F078A0 LDR W9, [X19 + 0x18]
	0x01F078A4 CMP W8, W9
	0x01F078A8 B.CS 0x1F07A5C
	0x01F078AC ADD X8, X19, X8
	0x01F078B0 STRB W1, [X8 + 0x20]
	0x01F078B4 LDRSW X8, [X20]
	0x01F078B8 ADD W9, W8, 0x1
	0x01F078BC STR W9, [X20]
	0x01F078C0 LDR W9, [X19 + 0x18]
	0x01F078C4 CMP W8, W9
	0x01F078C8 B.CS 0x1F07A5C
	0x01F078CC ADD X8, X19, X8
	0x01F078D0 STRB W31, [X8 + 0x20]
	0x01F078D4 LDRSW X8, [X20]
	0x01F078D8 ADD W9, W8, 0x1
	0x01F078DC STR W9, [X20]
	0x01F078E0 LDR W9, [X19 + 0x18]
	0x01F078E4 CMP W8, W9
	0x01F078E8 B.CS 0x1F07A5C
	0x01F078EC ADD X8, X19, X8
	0x01F078F0 MOVZ W9, 0x8
	0x01F078F4 STRB W9, [X8 + 0x20]
	0x01F078F8 LDRSW X8, [X20]
	0x01F078FC ADD W9, W8, 0x1
	0x01F07900 STR W9, [X20]
	0x01F07904 LDR W9, [X19 + 0x18]
	0x01F07908 CMP W8, W9
	0x01F0790C B.CS 0x1F07A5C
	0x01F07910 ADD X8, X19, X8
	0x01F07914 STRB W31, [X8 + 0x20]
	0x01F07918 LDRSW X8, [X20]
	0x01F0791C ADD W9, W8, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 512
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X24+40]
	016 Move X20, 0x24D4000
	017 Move X19, X0
	018 Move [X31+504], X8
	019 Move W8, [X20+1647]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {86}
	024 Move X0, 0x21FB000
	025 Move X0, [X0+3136]
	026 Call 0x1C17CF4
	027 Move X0, 0x21F8000
	028 Move X0, [X0+680]
	029 Call 0x1C17CF4
	030 Move X0, 0x21F8000
	031 Move X0, [X0+296]
	032 Call 0x1C17CF4
	033 Move X0, 0x21FB000
	034 Move X0, [X0+3144]
	035 Call 0x1C17CF4
	036 Move X0, 0x21FB000
	037 Move X0, [X0+2896]
	038 Call 0x1C17CF4
	039 Move X0, 0x21FB000
	040 Move X0, [X0+3152]
	041 Call 0x1C17CF4
	042 Move X0, 0x21FB000
	043 Move X0, [X0+3160]
	044 Call 0x1C17CF4
	045 Move X0, 0x21FB000
	046 Move X0, [X0+3168]
	047 Call 0x1C17CF4
	048 Move X0, 0x21FB000
	049 Move X0, [X0+3176]
	050 Call 0x1C17CF4
	051 Move X0, 0x21FB000
	052 Move X0, [X0+3184]
	053 Call 0x1C17CF4
	054 Move X0, 0x21FB000
	055 Move X0, [X0+3192]
	056 Call 0x1C17CF4
	057 Move X0, 0x21FB000
	058 Move X0, [X0+2968]
	059 Call 0x1C17CF4
	060 Move X0, 0x21F8000
	061 Move X0, [X0+120]
	062 Call 0x1C17CF4
	063 Move X0, 0x21F9000
	064 Move X0, [X0+2448]
	065 Call 0x1C17CF4
	066 Move X0, 0x21FB000
	067 Move X0, [X0+3200]
	068 Call 0x1C17CF4
	069 Move X0, 0x21F6000
	070 Move X0, [X0+1800]
	071 Call 0x1C17CF4
	072 Move X0, 0x21F8000
	073 Move X0, [X0+712]
	074 Call 0x1C17CF4
	075 Move X0, 0x21F8000
	076 Move X0, [X0+720]
	077 Call 0x1C17CF4
	078 Move X0, 0x21FB000
	079 Move X0, [X0+3056]
	080 Call 0x1C17CF4
	081 Move X0, 0x21F6000
	082 Move X0, [X0+2000]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X20+1647], W8
	086 Move [X31+16], X31
	087 Move [X31+24], X31
	088 Move [X31+8], X31
	089 Move X25, 0x21F8000
	090 Move X28, 0x21F8000
	091 Move X27, 0x21F8000
	092 Move X29, 0x21F8000
	093 Move W8, [X19]
	094 Move X25, [X25+296]
	095 Move X28, [X28+120]
	096 Move X27, [X27+720]
	097 Move X29, [X29+712]
	098 Add X26, X31, 160
	099 Compare W8, 0
	100 JumpIfEqual {109}
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X19+240]
	103 Move TEMP, 0
	104 Not TEMP
	105 Move W9, TEMP
	106 Move [X31+24], X8
	107 Move [X19+240], X31
	108 Move [X19], W9
	109 Move X8, [X19+240]
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W9, TEMP
	113 Move [X31+24], X8
	114 Move [X19+240], X31
	115 Move [X19], W9
	116 Add X0, X31, 24
	117 Move X1, X31
	118 Call TaskAwaiter.GetResult, X0
	119 Move W8, [X19+96]
	120 Move X11, 0x21FB000
	121 Move X11, [X11+2968]
	122 Move W9, 0x3A98
	123 Move W10, 1500
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Move [X19+200], W8
	127 Move X8, [X11]
	128 Move X8, [X8+184]
	129 Move V0, [X8]
	130 Move X8, 0x21F6000
	131 Move [X19+204], V0
	132 Move X8, [X8+1800]
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X31
	139 Call Stopwatch.StartNew
	140 Move [X19+224], X0
	141 Move X0, X31
	142 Call Stopwatch.StartNew
	143 Move [X19+232], X0
	144 Move X8, [X19+48]
	145 Move V0, [X19+2]
	146 Move X0, [X29]
	147 Move [X31+496], X8
	148 Move [X26+20], V0
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move V0, [X26+20]
	154 Move X8, [X31+496]
	155 Add X1, X19, 120
	156 Add X2, X19, 128
	157 Move [X26+18], V0
	158 Move [X31+464], X8
	159 Add X0, X31, 448
	160 Call StunClient.QueryLocalAddress, X0, X1, X2
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {205}
	165 Move X0, [X28]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {171}
	169 Call 0x1C17DFC
	170 Move X0, [X28]
	171 Move X8, [X0+184]
	172 Move X20, X19
	173 Add X20, X20, 56
	174 Move W9, [X20]
	175 Move X10, [X8+16]
	176 Move V0, [X8]
	177 Move [X20+112], X10
	178 Move [X20+6], V0
	179 Move X8, [X0+184]
	180 Move X10, [X8+16]
	181 Move V0, [X8]
	182 Move [X20+136], X10
	183 Move [X20+120], V0
	184 Compare W9, 0
	185 JumpIfEqual {213}
	186 Move X8, 0x21FA000
	187 Move X8, [X8+3200]
	188 Move X1, [X8]
	189 Add X8, X31, 416
	190 Move X0, X20
	191 Call Nullable`1<NetAddress>.get_Value, X0
	192 Move V0, [X26+16]
	193 Move X8, [X31+432]
	194 Add X9, X20, 120
	195 Move [X26+20], V0
	196 Move [X31+496], X8
	197 Move [X31+432], X8
	198 Move [X26+16], V0
	199 Move [X9], V0
	200 Move [X9+16], X8
	201 Move V0, [X26+20]
	202 Add X9, X20, 96
	203 Move [X9+16], X8
	204 Move [X9], V0
	205 Move X0, [X27]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {211}
	209 Call 0x1C17DFC
	210 Move X0, [X27]
	211 Move X8, [X0+184]
	212 Move X20, [X8]
	213 Move X8, 0x21FA000
	214 Move X8, [X8+3056]
	215 Move X20, [X19+88]
	216 Move X0, [X8]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X20
	222 Call StunServers.SetupStunServers, X0
	223 Compare X0, 0
	224 JumpIfEqual {250}
	225 Move X1, X31
	226 Call Task.GetAwaiter, X0
	227 Move [X31+24], X0
	228 Add X0, X31, 24
	229 Move X1, X31
	230 Call TaskAwaiter.get_IsCompleted, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {116}
	235 Move [X19], W31
	236 Move X8, [X31+24]
	237 Move [X19+240], X8
	238 Move X0, [X25]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, 0x21FA000
	244 Move X8, [X8+3136]
	245 Add X0, X19, 8
	246 Move X3, [X8]
	247 Add X1, X31, 24
	248 Move X2, X19
	249 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	250 Call 0x1C17F20
	251 Move TEMP, 1
	252 Not TEMP
	253 Move W8, TEMP
	254 Move [X19+8], W8
	255 Move X0, [X25]
	256 Move X21, 0x21F7000
	257 Move W8, [X0+224]
	258 Move X21, [X21+680]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X2, [X21]
	263 Move X0, X19
	264 Move X1, X20
	265 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	266 Move X8, [X24+40]
	267 Move X9, [X31+504]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Add X31, X31, 512
	270 Move X20, [X31+80]
	271 Move X19, [X31+88]
	272 Move X22, [X31+64]
	273 Move X21, [X31+72]
	274 Move X24, [X31+48]
	275 Move X23, [X31+56]
	276 Move X26, [X31+32]
	277 Move X25, [X31+40]
	278 Move X28, [X31+16]
	279 Move X27, [X31+24]
	280 Move X29, [X31+96]
	281 Move X30, [X31+104]
	282 Return 
	283 Call 0x3EB2B20
	284 Move X8, [X19+112]
	285 Compare X8, 0
	286 JumpIfEqual {295}
	287 Move X0, [X8+64]
	288 Move X1, [X8+40]
	289 Move X9, [X8+24]
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {390}
	295 Move X0, [X19+224]
	296 Compare X0, 0
	297 JumpIfEqual {513}
	298 Move X1, X31
	299 Call Stopwatch.get_ElapsedMilliseconds, X0
	300 NotImplemented "Instruction LDRSW not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X0, [X28]
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {308}
	306 Call 0x1C17DFC
	307 Move X0, [X28]
	308 Move X8, [X0+184]
	309 Add X0, X19, 152
	310 Move X9, [X8+16]
	311 Move V0, [X8]
	312 Move [X31+272], X9
	313 Move [X26+6], V0
	314 Add X1, X31, 256
	315 Move X2, X31
	316 Call NetAddress.Equals, X0, X1
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfEqual {340}
	321 Move X0, [X28]
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {327}
	325 Call 0x1C17DFC
	326 Move X0, [X28]
	327 Move X8, [X0+184]
	328 Add X0, X19, 176
	329 Move X9, [X8+16]
	330 Move V0, [X8]
	331 Move [X31+240], X9
	332 Move [X26+4], V0
	333 Add X1, X31, 224
	334 Move X2, X31
	335 Call NetAddress.Equals, X0, X1
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfNotEqual {390}
	340 Move X0, [X29]
	341 Move X20, [X19+104]
	342 Move W21, [X19+120]
	343 Move W8, [X0+224]
	344 Compare W8, 0
	345 JumpIfNotEqual {347}
	346 Call 0x1C17DFC
	347 Add X3, X19, 248
	348 Add X2, X19, 204
	349 Move X0, X20
	350 Move W1, W21
	351 Call StunClient.QueryPublicAddress, X0, X1, X2, X3
	352 Move TEMP, X0
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfNotEqual {390}
	356 Move X0, [X29]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {362}
	360 Call 0x1C17DFC
	361 Move X0, [X29]
	362 Move X9, 0x21FA000
	363 Move X8, [X0+184]
	364 Move X9, [X9+3184]
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 Move X22, [X8]
	368 Move X0, [X9]
	369 Call 0x1C17F10
	370 Move X8, 0x21FA000
	371 Move X8, [X8+3160]
	372 Move X23, X0
	373 Move X1, [X8]
	374 Call ConcurrentDictionary`2<Int32, NetAddress>..ctor, X0
	375 Compare X22, 0
	376 JumpIfEqual {515}
	377 Move X8, 0x21FA000
	378 Move X8, [X8+3144]
	379 Move X4, [X8]
	380 Move X0, X22
	381 Move X1, X20
	382 Move X2, X21
	383 Move X3, X23
	384 Call 0x2961FC8, X0, X1, X2
	385 Move X0, [X19+232]
	386 Compare X0, 0
	387 JumpIfEqual {514}
	388 Move X1, X31
	389 Call Stopwatch.Restart, X0
	390 Move X20, X19
	391 Add X20, X20, 224
	392 Move X0, [X20]
	393 Compare X0, 0
	394 JumpIfEqual {516}
	395 Move X1, X31
	396 Call Stopwatch.get_ElapsedMilliseconds, X0
	397 Move X0, [X29]
	398 Move W8, [X0+224]
	399 Compare W8, 0
	400 JumpIfNotEqual {403}
	401 Call 0x1C17DFC
	402 Move X0, [X29]
	403 Move X8, [X0+184]
	404 Move X0, [X8]
	405 Compare X0, 0
	406 JumpIfEqual {517}
	407 Move X8, 0x21FA000
	408 Move X8, [X8+3152]
	409 NotImplemented "Instruction LDUR not yet implemented."
	410 NotImplemented "Instruction LDUR not yet implemented."
	411 Move X4, [X8]
	412 Add X3, X31, 8
	413 Call 0x29620F4, X0, X1, X2
	414 Add X8, X19, 204
	415 Move [X8], X31
	416 Move [X8+8], X31
	417 Move [X20], X31
	418 Move [X20+8], X31
	419 Move X0, [X28]
	420 Move W8, [X0+224]
	421 Compare W8, 0
	422 JumpIfNotEqual {425}
	423 Call 0x1C17DFC
	424 Move X0, [X28]
	425 Move X8, [X0+184]
	426 Add X0, X19, 152
	427 Move X9, [X8+16]
	428 Move V0, [X8]
	429 Move [X31+208], X9
	430 Move [X26+2], V0
	431 Add X1, X31, 192
	432 Move X2, X31
	433 Call NetAddress.Equals, X0, X1
	434 Move TEMP, X0
	435 And TEMP, TEMP, 1
	436 Compare TEMP, 1
	437 JumpIfNotEqual {479}
	438 Move X0, [X28]
	439 Move W8, [X0+224]
	440 Compare W8, 0
	441 JumpIfNotEqual {444}
	442 Call 0x1C17DFC
	443 Move X0, [X28]
	444 Move X8, [X0+184]
	445 Add X0, X19, 176
	446 Move X9, [X8+16]
	447 Move V0, [X8]
	448 Move [X31+176], X9
	449 Move [X26], V0
	450 Add X1, X31, 160
	451 Move X2, X31
	452 Call NetAddress.Equals, X0, X1
	453 Move TEMP, X0
	454 And TEMP, TEMP, 1
	455 Compare TEMP, 1
	456 JumpIfNotEqual {479}
	457 Move X0, [X28]
	458 Move W8, [X0+224]
	459 Compare W8, 0
	460 JumpIfNotEqual {462}
	461 Call 0x1C17DFC
	462 Add X0, X19, 32
	463 Move X1, X31
	464 Call NetAddress.get_IsIPv6, X0
	465 Move TEMP, X0
	466 And TEMP, TEMP, 1
	467 Compare TEMP, 1
	468 JumpIfNotEqual {479}
	469 Move V0, [X19+2]
	470 Move X8, [X19+48]
	471 Move [X26+20], V0
	472 Move [X31+496], X8
	473 Move X9, [X19+48]
	474 Move V1, [X19+2]
	475 Move [X19+192], X8
	476 Move [X19+11], V0
	477 Move [X19+168], X9
	478 Move [X19+152], V1
	479 Move X8, [X19+168]
	480 NotImplemented "Instruction LDUR not yet implemented."
	481 Move X0, [X27]
	482 Move [X31+496], X8
	483 Move [X26+20], V0
	484 Move X8, [X19+192]
	485 Move V0, [X19+11]
	486 Move [X31+432], X8
	487 Move [X26+16], V0
	488 Move X8, [X19+144]
	489 Move V0, [X19+8]
	490 Move [X31+144], X8
	491 Move [X31+8], V0
	492 Move W8, [X0+224]
	493 Compare W8, 0
	494 JumpIfNotEqual {496}
	495 Call 0x1C17DFC
	496 Move V0, [X26+20]
	497 Move X8, [X31+496]
	498 Move V1, [X26+16]
	499 Move X9, [X31+432]
	500 Move V2, [X31+8]
	501 Move X10, [X31+144]
	502 Move [X31+6], V0
	503 Move [X31+112], X8
	504 Move [X31+4], V1
	505 Move [X31+80], X9
	506 Move [X31+2], V2
	507 Move [X31+48], X10
	508 Add X0, X31, 96
	509 Add X1, X31, 64
	510 Add X2, X31, 32
	511 Call StunResult.BuildStunResult, X0, X1, X2
	512 Move X20, X0
	513 Call 0x1C17F20
	514 Call 0x1C17F20
	515 Call 0x1C17F20
	516 Call 0x1C17F20
	517 Call 0x1C17F20
	518 Move X8, 0x21F5000
	519 Move X8, [X8+2000]
	520 Move X0, [X8]
	521 Move W8, [X0+224]
	522 Compare W8, 0
	523 JumpIfNotEqual {525}
	524 Call 0x1C17DFC
	525 Move W0, 15
	526 Move X1, X31
	527 Move X2, X31
	528 Call TaskManager.Delay, X0, X1
	529 Compare X0, 0
	530 JumpIfEqual {713}
	531 Move X1, X31
	532 Call Task.GetAwaiter, X0
	533 Move [X31+24], X0
	534 Add X0, X31, 24
	535 Move X1, X31
	536 Call TaskAwaiter.get_IsCompleted, X0
	537 Move TEMP, X0
	538 And TEMP, TEMP, 1
	539 Compare TEMP, 1
	540 JumpIfNotEqual {694}
	541 Add X0, X31, 24
	542 Move X1, X31
	543 Call TaskAwaiter.GetResult, X0
	544 Move X0, [X29]
	545 Move W8, [X0+224]
	546 Compare W8, 0
	547 JumpIfNotEqual {550}
	548 Call 0x1C17DFC
	549 Move X0, [X29]
	550 Move X8, [X0+184]
	551 Move X0, [X8]
	552 Compare X0, 0
	553 JumpIfEqual {710}
	554 Move X8, 0x21FA000
	555 Move X8, [X8+2896]
	556 NotImplemented "Instruction LDUR not yet implemented."
	557 NotImplemented "Instruction LDUR not yet implemented."
	558 Move X4, [X8]
	559 Add X3, X31, 16
	560 Call 0x296259C, X0, X1, X2
	561 Move TEMP, X0
	562 And TEMP, TEMP, 1
	563 Compare TEMP, 1
	564 JumpIfNotEqual {688}
	565 Move X0, [X31+16]
	566 Compare X0, 0
	567 JumpIfEqual {712}
	568 Move X8, 0x21FA000
	569 Move X8, [X8+3168]
	570 Move X1, [X8]
	571 Call ConcurrentDictionary`2<Int32, NetAddress>.get_Count, X0
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Move X0, [X31+16]
	574 Compare X0, 0
	575 JumpIfEqual {714}
	576 Move X8, 0x21FA000
	577 Move X8, [X8+3176]
	578 Move X1, [X8]
	579 Call ConcurrentDictionary`2<Int32, NetAddress>.get_Values, X0
	580 Move X8, 0x21FA000
	581 Move X8, [X8+3192]
	582 Move X1, [X8]
	583 Call Enumerable.ToArray, X0
	584 Move X20, X0
	585 Compare X0, 0
	586 JumpIfEqual {715}
	587 Move W8, [X20+24]
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move X0, [X28]
	590 Move W8, [X0+224]
	591 Compare W8, 0
	592 JumpIfNotEqual {595}
	593 Call 0x1C17DFC
	594 Move X0, [X28]
	595 Move X8, [X0+184]
	596 Add X0, X19, 152
	597 Move X9, [X8+16]
	598 Move V0, [X8]
	599 Move [X31+400], X9
	600 Move [X26+14], V0
	601 Add X1, X31, 384
	602 Move X2, X31
	603 Call NetAddress.Equals, X0, X1
	604 Move TEMP, X0
	605 And TEMP, TEMP, 1
	606 Compare TEMP, 1
	607 JumpIfNotEqual {623}
	608 Move W8, [X20+24]
	609 Compare W8, 0
	610 JumpIfEqual {716}
	611 Move V0, [X20+2]
	612 Move X8, [X20+48]
	613 Move W9, [X19+248]
	614 Move [X19+152], V0
	615 Move [X19+168], X8
	616 Compare W9, 0
	617 JumpIfEqual {623}
	618 Add X8, X19, 152
	619 Move X9, [X8+16]
	620 Move V0, [X8]
	621 Move [X19+192], X9
	622 Move [X19+11], V0
	623 Move W8, [X20+24]
	624 NotImplemented "Instruction CMP not yet implemented."
	625 Move X0, [X28]
	626 Move W8, [X0+224]
	627 Compare W8, 0
	628 JumpIfNotEqual {631}
	629 Call 0x1C17DFC
	630 Move X0, [X28]
	631 Move X8, [X0+184]
	632 Add X0, X19, 176
	633 Move X9, [X8+16]
	634 Move V0, [X8]
	635 Move [X31+368], X9
	636 Move [X26+12], V0
	637 Add X1, X31, 352
	638 Move X2, X31
	639 Call NetAddress.Equals, X0, X1
	640 Move TEMP, X0
	641 And TEMP, TEMP, 1
	642 Compare TEMP, 1
	643 JumpIfNotEqual {650}
	644 Move W8, [X20+24]
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Move X8, [X20+72]
	647 NotImplemented "Instruction LDUR not yet implemented."
	648 Move [X19+192], X8
	649 Move [X19+11], V0
	650 Move X0, [X28]
	651 Move W8, [X0+224]
	652 Compare W8, 0
	653 JumpIfNotEqual {656}
	654 Call 0x1C17DFC
	655 Move X0, [X28]
	656 Move X8, [X0+184]
	657 Add X0, X19, 152
	658 Move X9, [X8+16]
	659 Move V0, [X8]
	660 Move [X31+336], X9
	661 Move [X26+10], V0
	662 Add X1, X31, 320
	663 Move X2, X31
	664 Call NetAddress.Equals, X0, X1
	665 Move TEMP, X0
	666 And TEMP, TEMP, 1
	667 Compare TEMP, 1
	668 JumpIfEqual {688}
	669 Move X0, [X28]
	670 Move W8, [X0+224]
	671 Compare W8, 0
	672 JumpIfNotEqual {675}
	673 Call 0x1C17DFC
	674 Move X0, [X28]
	675 Move X8, [X0+184]
	676 Add X0, X19, 176
	677 Move X9, [X8+16]
	678 Move V0, [X8]
	679 Move [X31+304], X9
	680 Move [X26+8], V0
	681 Add X1, X31, 288
	682 Move X2, X31
	683 Call NetAddress.Equals, X0, X1
	684 Move TEMP, X0
	685 And TEMP, TEMP, 1
	686 Compare TEMP, 1
	687 JumpIfNotEqual {284}
	688 Move X0, [X19+232]
	689 Compare X0, 0
	690 JumpIfEqual {711}
	691 Move X1, X31
	692 Call Stopwatch.get_ElapsedMilliseconds, X0
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Move W8, 1
	695 Move [X19], W8
	696 Move X8, [X31+24]
	697 Move [X19+240], X8
	698 Move X0, [X25]
	699 Move W8, [X0+224]
	700 Compare W8, 0
	701 JumpIfNotEqual {703}
	702 Call 0x1C17DFC
	703 Move X8, 0x21FA000
	704 Move X8, [X8+3136]
	705 Add X0, X19, 8
	706 Move X3, [X8]
	707 Add X1, X31, 24
	708 Move X2, X19
	709 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	710 Call 0x1C17F20
	711 Call 0x1C17F20
	712 Call 0x1C17F20
	713 Call 0x1C17F20
	714 Call 0x1C17F20
	715 Call 0x1C17F20
	716 Call 0x1C17F28
	717 Call 0x1C17F28
	718 NotImplemented "Instruction CMP not yet implemented."
	719 Call 0x3EB2AD0
	720 Move X20, X0
	721 Move X0, 0x21ED000
	722 Move X0, [X0+2000]
	723 Call 0x1C17D08
	724 Move X8, [X20]
	725 Move X1, [X8]
	726 Call 0x1C18270
	727 Move TEMP, X0
	728 And TEMP, TEMP, 1
	729 Compare TEMP, 1
	730 JumpIfNotEqual {752}
	731 Move X20, [X20]
	732 Call 0x3EB2AE0
	733 Move TEMP, 1
	734 Not TEMP
	735 Move W8, TEMP
	736 Move [X19+8], W8
	737 Move X0, 0x21F7000
	738 Move X0, [X0+296]
	739 Call 0x1C17D08
	740 Move W8, [X0+224]
	741 Compare W8, 0
	742 JumpIfNotEqual {744}
	743 Call 0x1C17DFC
	744 Move X0, 0x21F7000
	745 Move X0, [X0+752]
	746 Call 0x1C17D08
	747 Move X2, X0
	748 Move X0, X19
	749 Move X1, X20
	750 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	751 Move X19, X0
	752 Move W0, 8
	753 Call 0x3EB2AF0
	754 Move X8, [X20]
	755 Move [X0], X8
	756 Move X1, 0x1FAE000
	757 Add X1, X1, 3672
	758 Move X2, X31
	759 Call 0x3EB2B00
	760 Move X19, X0
	761 Call 0x3EB2AE0
	762 Move X0, X19
	763 Call 0x1D2D690
	764 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01F07BFC MOV W1, W20
	0x01F07C00 MOV W2, W19
	0x01F07C04 MOV X3, X31
	0x01F07C08 MOV X21, X0
	0x01F07C0C BL 0x366E7D0
	0x01F07C10 MOV X0, X21
	0x01F07C14 B 0x1F07E24
	0x01F07C18 ADD W10, W8, 0x5
	0x01F07C1C ADD W11, W8, 0x6
	0x01F07C20 STR W10, [X21]
	0x01F07C24 ADD W12, W8, 0x7
	0x01F07C28 LDRB W23, [X20, W9, SXTW]
	0x01F07C2C STR W11, [X21]
	0x01F07C30 ADD W13, W8, 0x8
	0x01F07C34 LDRB W24, [X20, W10, SXTW]
	0x01F07C38 STR W12, [X21]
	0x01F07C3C ADD W14, W8, 0x9
	0x01F07C40 LDRB W25, [X20, W11, SXTW]
	0x01F07C44 STR W13, [X21]
	0x01F07C48 ADD W15, W8, 0xA
	0x01F07C4C LDRB W26, [X20, W12, SXTW]
	0x01F07C50 STR W14, [X21]
	0x01F07C54 ADD W16, W8, 0xB
	0x01F07C58 LDRB W27, [X20, W13, SXTW]
	0x01F07C5C STR W15, [X21]
	0x01F07C60 ADD W17, W8, 0xC
	0x01F07C64 LDRB W28, [X20, W14, SXTW]
	0x01F07C68 STR W16, [X21]
	0x01F07C6C ADD W0, W8, 0xD
	0x01F07C70 LDRB W29, [X20, W15, SXTW]
	0x01F07C74 STR W17, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x24D3000
	007 Move X21, 0x21F7000
	008 Move W8, [X22+1648]
	009 Move X21, [X21+296]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x21F7000
	017 Move X0, [X0+760]
	018 Call 0x1C17CF4
	019 Move X0, 0x21F7000
	020 Move X0, [X0+296]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1648], W8
	024 Move X0, [X21]
	025 Move X21, 0x21F7000
	026 Move W8, [X0+224]
	027 Move X21, [X21+760]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

