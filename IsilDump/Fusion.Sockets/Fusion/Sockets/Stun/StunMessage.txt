Type: Fusion.Sockets.Stun.StunMessage

Method: System.Collections.Generic.HashSet`1<System.Int32> get_StunMessageTypeValues()

Disassembly:
	0x01F07D04 ORR X21, X9, X8, 0x0
	0x01F07D08 BL 0x3317110
	0x01F07D0C LDR X8, [X22 + 0x18]
	0x01F07D10 MOV W20, W0
	0x01F07D14 MOVZ W1, 0x4
	0x01F07D18 MOV X2, X31
	0x01F07D1C MOV X0, X8
	0x01F07D20 BL 0x3317114
	0x01F07D24 UBFM X9, X23, 0x8, 0x7
	0x01F07D28 BFM X9, X24, 0x10, 0x7
	0x01F07D2C BFM X9, X25, 0x18, 0x7
	0x01F07D30 BFM X9, X26, 0x20, 0x7
	0x01F07D34 BFM X9, X27, 0x28, 0x7
	0x01F07D38 MOVZ W8, 0x1221
	0x01F07D3C BFM X9, X28, 0x30, 0x7
	0x01F07D40 MOVK W8, 0x42A40000
	0x01F07D44 BFM X9, X29, 0x38, 0x7
	0x01F07D48 BFM X8, X20, 0x20, 0x1F
	0x01F07D4C ORR X9, X9, X19, 0x0
	0x01F07D50 EOR X21, X0, X21, 0x0
	0x01F07D54 EOR X0, X8, X9, 0x0
	0x01F07D58 MOV X1, X31
	0x01F07D5C BL 0x3316EA4
	0x01F07D60 MOV X22, X0
	0x01F07D64 MOV X0, X21
	0x01F07D68 MOV X1, X31
	0x01F07D6C BL 0x3316EA4
	0x01F07D70 ADRP X8, 0x21EC000
	0x01F07D74 LDR X8, [X8 + 0x618]
	0x01F07D78 MOV X21, X0
	0x01F07D7C MOVZ W1, 0x10
	0x01F07D80 LDR X8, [X8]
	0x01F07D84 MOV X0, X8
	0x01F07D88 BL 0x1C16D6C
	0x01F07D8C CBZ X22, 0x1F07E48
	0x01F07D90 LDR W4, [X22 + 0x18]
	0x01F07D94 MOV X20, X0
	0x01F07D98 MOV X0, X22
	0x01F07D9C MOV W1, W31
	0x01F07DA0 MOV X2, X20
	0x01F07DA4 MOV W3, W31
	0x01F07DA8 MOV X5, X31
	0x01F07DAC BL 0x339FCE8
	0x01F07DB0 LDR W19, [X31 + 0xC]
	0x01F07DB4 CBZ X21, 0x1F07E48
	0x01F07DB8 LDR W4, [X21 + 0x18]
	0x01F07DBC MOVZ W3, 0x8
	0x01F07DC0 MOV X0, X21
	0x01F07DC4 MOV W1, W31
	0x01F07DC8 MOV X2, X20
	0x01F07DCC MOV X5, X31
	0x01F07DD0 BL 0x339FCE8
	0x01F07DD4 ADRP X8, 0x21F9000
	0x01F07DD8 LDR X8, [X8 + 0x968]
	0x01F07DDC LDR X0, [X8]
	0x01F07DE0 BL 0x1C16F10
	0x01F07DE4 MOV X1, X20
	0x01F07DE8 MOV X2, X31
	0x01F07DEC MOV X21, X0
	0x01F07DF0 BL 0x366CE58
	0x01F07DF4 ADRP X8, 0x21F9000
	0x01F07DF8 LDR X8, [X8 + 0xBB8]
	0x01F07DFC LDR X0, [X8]
	0x01F07E00 BL 0x1C16F10
	0x01F07E04 MOV X1, X21
	0x01F07E08 MOV W2, W19
	0x01F07E0C MOV X3, X31
	0x01F07E10 MOV X20, X0
	0x01F07E14 BL 0x366E898
	0x01F07E18 MOV X0, X20
	0x01F07E1C B 0x1F07E24
	0x01F07E20 MOV X0, X31
	0x01F07E24 LDP X20, X19, [X31 + 0x60]
	0x01F07E28 LDP X22, X21, [X31 + 0x50]
	0x01F07E2C LDP X24, X23, [X31 + 0x40]
	0x01F07E30 LDP X26, X25, [X31 + 0x30]
	0x01F07E34 LDP X28, X27, [X31 + 0x20]
	0x01F07E38 LDP X29, X30, [X31 + 0x10]
	0x01F07E3C ADD X31, X31, 0x70
	0x01F07E40 RET
	0x01F07E44 BL 0x1C16F28
	0x01F07E48 BL 0x1C16F20
	0x01F07E4C STP X30, X23, [X31 - 0x30]!
	0x01F07E50 STP X22, X21, [X31 + 0x10]
	0x01F07E54 STP X20, X19, [X31 + 0x20]
	0x01F07E58 ADRP X21, 0x24D2000
	0x01F07E5C ADRP X22, 0x21EC000
	0x01F07E60 LDRB W8, [X21 + 0x67B]
	0x01F07E64 LDR X22, [X22 + 0x618]
	0x01F07E68 MOV X20, X2
	0x01F07E6C MOV X19, X1
	0x01F07E70 TBNZ X8, 0x0, 0x1F07EA0
	0x01F07E74 ADRP X0, 0x21EC000
	0x01F07E78 LDR X0, [X0 + 0x618]
	0x01F07E7C BL 0x1C16CF4
	0x01F07E80 ADRP X0, 0x21F9000
	0x01F07E84 LDR X0, [X0 + 0x968]
	0x01F07E88 BL 0x1C16CF4
	0x01F07E8C ADRP X0, 0x21F9000
	0x01F07E90 LDR X0, [X0 + 0xBB8]
	0x01F07E94 BL 0x1C16CF4
	0x01F07E98 MOVZ W8, 0x1
	0x01F07E9C STRB W8, [X21 + 0x67B]
	0x01F07EA0 LDR W8, [X20]
	0x01F07EA4 MOVZ W1, 0x4
	0x01F07EA8 ADD W10, W8, 0x3
	0x01F07EAC ADD W9, W8, 0x2
	0x01F07EB0 ADD W8, W8, 0x4
	0x01F07EB4 STR W10, [X20]
	0x01F07EB8 LDRB W23, [X19, W9, SXTW]
	0x01F07EBC STR W8, [X20]
	0x01F07EC0 LDR X0, [X22]
	0x01F07EC4 LDRB W21, [X19, W10, SXTW]
	0x01F07EC8 BL 0x1C16D6C
	0x01F07ECC LDRSW X9, [X20]
	0x01F07ED0 ADD W8, W9, 0x1
	0x01F07ED4 STR W8, [X20]
	0x01F07ED8 CBZ X0, 0x1F07FA4
	0x01F07EDC LDR W8, [X0 + 0x18]
	0x01F07EE0 MOV X22, X0
	0x01F07EE4 CBZ W8, 0x1F07FA0
	0x01F07EE8 LDRB W9, [X9, X19, LSL]
	0x01F07EEC CMP W8, 0x1
	0x01F07EF0 STRB W9, [X22 + 0x20]
	0x01F07EF4 LDRSW X9, [X20]
	0x01F07EF8 ADD W10, W9, 0x1
	0x01F07EFC STR W10, [X20]
	0x01F07F00 B.EQ 0x1F07FA0
	0x01F07F04 LDRB W9, [X9, X19, LSL]
	0x01F07F08 CMP W8, 0x2
	0x01F07F0C STRB W9, [X22 + 0x21]
	0x01F07F10 LDRSW X9, [X20]
	0x01F07F14 ADD W10, W9, 0x1
	0x01F07F18 STR W10, [X20]
	0x01F07F1C B.LS 0x1F07FA0
	0x01F07F20 LDRB W9, [X9, X19, LSL]
	0x01F07F24 CMP W8, 0x3
	0x01F07F28 STRB W9, [X22 + 0x22]
	0x01F07F2C LDRSW X9, [X20]
	0x01F07F30 ADD W10, W9, 0x1
	0x01F07F34 STR W10, [X20]
	0x01F07F38 B.EQ 0x1F07FA0
	0x01F07F3C LDRB W8, [X9, X19, LSL]
	0x01F07F40 ADRP X9, 0x21F9000
	0x01F07F44 LDR X9, [X9 + 0x968]
	0x01F07F48 ADRP X20, 0x21F9000
	0x01F07F4C STRB W8, [X22 + 0x23]
	0x01F07F50 BFM W21, W23, 0x18, 0x7
	0x01F07F54 LDR X0, [X9]
	0x01F07F58 LDR X20, [X20 + 0xBB8]
	0x01F07F5C BL 0x1C16F10
	0x01F07F60 MOV X1, X22
	0x01F07F64 MOV X2, X31
	0x01F07F68 MOV X19, X0
	0x01F07F6C BL 0x366CE58
	0x01F07F70 LDR X0, [X20]
	0x01F07F74 BL 0x1C16F10
	0x01F07F78 MOV X1, X19
	0x01F07F7C MOV W2, W21
	0x01F07F80 MOV X3, X31
	0x01F07F84 MOV X20, X0
	0x01F07F88 BL 0x366E898
	0x01F07F8C MOV X0, X20
	0x01F07F90 LDP X20, X19, [X31 + 0x20]
	0x01F07F94 LDP X22, X21, [X31 + 0x10]
	0x01F07F98 LDP X30, X23, [X31], #0x30
	0x01F07F9C RET
	0x01F07FA0 BL 0x1C16F28
	0x01F07FA4 BL 0x1C16F20
	0x01F07FA8 SUB X31, X31, 0x50
	0x01F07FAC STR X30, [X31 + 0x20]
	0x01F07FB0 STP X22, X21, [X31 + 0x30]
	0x01F07FB4 STP X20, X19, [X31 + 0x40]
	0x01F07FB8 MRS X20, 0xC000
	0x01F07FBC LDR X8, [X20 + 0x28]
	0x01F07FC0 ADRP X22, 0x24D2000
	0x01F07FC4 ADRP X21, 0x21F6000
	0x01F07FC8 MOV X19, X0
	0x01F07FCC STR X8, [X31 + 0x18]
	0x01F07FD0 LDRB W8, [X22 + 0x67D]
	0x01F07FD4 LDR X21, [X21 + 0x78]
	0x01F07FD8 TBNZ X8, 0x0, 0x1F07FF0
	0x01F07FDC ADRP X0, 0x21F6000
	0x01F07FE0 LDR X0, [X0 + 0x78]
	0x01F07FE4 BL 0x1C16CF4
	0x01F07FE8 MOVZ W8, 0x1
	0x01F07FEC STRB W8, [X22 + 0x67D]
	0x01F07FF0 LDR X8, [X19 + 0x28]
	0x01F07FF4 LDUR V0, [X19 + 0x18]
	0x01F07FF8 LDR X0, [X21]
	0x01F07FFC STR X8, [X31 + 0x10]
	0x01F08000 STR V0, [X31]
	0x01F08004 LDR W8, [X0 + 0xE0]
	0x01F08008 CBNZ W8, 0x1F08010
	0x01F0800C BL 0x1C16DFC
	0x01F08010 ADD X0, X31, 0x0
	0x01F08014 MOV X1, X31
	0x01F08018 BL 0x1EF72B4
	0x01F0801C TBZ X0, 0x0, 0x1F08050
	0x01F08020 LDR X8, [X19 + 0x40]
	0x01F08024 LDR V0, [X19 + 0x3]
	0x01F08028 LDR X0, [X21]
	0x01F0802C STR X8, [X31 + 0x10]
	0x01F08030 STR V0, [X31]
	0x01F08034 LDR W8, [X0 + 0xE0]
	0x01F08038 CBNZ W8, 0x1F08040
	0x01F0803C BL 0x1C16DFC
	0x01F08040 ADD X0, X31, 0x0
	0x01F08044 MOV X1, X31
	0x01F08048 BL 0x1EF72B4
	0x01F0804C B 0x1F08054
	0x01F08050 MOV W0, W31
	0x01F08054 LDR X8, [X20 + 0x28]
	0x01F08058 LDR X9, [X31 + 0x18]
	0x01F0805C CMP X8, X9
	0x01F08060 B.NE 0x1F0807C
	0x01F08064 LDP X20, X19, [X31 + 0x40]
	0x01F08068 LDP X22, X21, [X31 + 0x30]
	0x01F0806C LDR X30, [X31 + 0x20]
	0x01F08070 AND W0, W0, 0x1
	0x01F08074 ADD X31, X31, 0x50
	0x01F08078 RET
	0x01F0807C BL 0x3EB1B20
	0x01F08080 LDR X9, [X0 + 0x28]
	0x01F08084 LDUR V0, [X0 + 0x18]
	0x01F08088 STR X9, [X8 + 0x10]
	0x01F0808C STR V0, [X8]
	0x01F08090 RET
	0x01F08094 LDR X8, [X1 + 0x10]
	0x01F08098 LDR V0, [X1]
	0x01F0809C STR X8, [X0 + 0x28]
	0x01F080A0 STUR V0, [X0 + 0x18]
	0x01F080A4 RET
	0x01F080A8 LDR X9, [X0 + 0x40]
	0x01F080AC LDR V0, [X0 + 0x3]
	0x01F080B0 STR X9, [X8 + 0x10]
	0x01F080B4 STR V0, [X8]
	0x01F080B8 RET
	0x01F080BC LDR X8, [X1 + 0x10]
	0x01F080C0 LDR V0, [X1]
	0x01F080C4 STR X8, [X0 + 0x40]
	0x01F080C8 STR V0, [X0 + 0x3]
	0x01F080CC RET
	0x01F080D0 STP X30, X21, [X31 - 0x20]!
	0x01F080D4 STP X20, X19, [X31 + 0x10]
	0x01F080D8 MOV X20, X1
	0x01F080DC MOV X1, X31
	0x01F080E0 MOV X19, X2
	0x01F080E4 MOV X21, X0
	0x01F080E8 BL 0x33BDD8C
	0x01F080EC LDR X8, [X20 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x24D3000
	009 Move X22, 0x21FA000
	010 Move W8, [X19+1650]
	011 Move X22, [X22+2984]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0x21ED000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0x21EF000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0x21F4000
	023 Move X0, [X0+1672]
	024 Call 0x1C17CF4
	025 Move X0, 0x21EE000
	026 Move X0, [X0+3592]
	027 Call 0x1C17CF4
	028 Move X0, 0x21ED000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0x21ED000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x21ED000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0x21FA000
	038 Move X0, [X0+2976]
	039 Call 0x1C17CF4
	040 Move X0, 0x21FA000
	041 Move X0, [X0+2984]
	042 Call 0x1C17CF4
	043 Move X0, 0x21ED000
	044 Move X0, [X0+1728]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+1650], W8
	048 Move X8, [X22]
	049 Move X8, [X8+184]
	050 Move X0, [X8]
	051 Compare X0, 0
	052 JumpIfNotEqual {202}
	053 Move X8, 0x21EE000
	054 Move X8, [X8+3592]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X8, 0x21F4000
	058 Move X8, [X8+1672]
	059 Move X19, X0
	060 Move X1, [X8]
	061 Call HashSet`1<Int32>..ctor, X0
	062 Move X8, [X22]
	063 Move X8, [X8+184]
	064 Move [X8], X19
	065 Move X8, 0x21ED000
	066 Move X8, [X8+1728]
	067 Move X0, [X8]
	068 Move X8, 0x21FA000
	069 Move X8, [X8+2976]
	070 Move W9, [X0+224]
	071 Move X19, [X8]
	072 Compare W9, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X19
	076 Move X1, X31
	077 Call Type.GetTypeFromHandle, X0
	078 Move X8, 0x21ED000
	079 Move X8, [X8+3576]
	080 Move X19, X0
	081 Move X8, [X8]
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Move X1, X31
	089 Call Enum.GetValues, X0
	090 Compare X0, 0
	091 JumpIfEqual {213}
	092 Move X1, X31
	093 Call Array.GetEnumerator, X0
	094 Move X19, X0
	095 Compare X0, 0
	096 JumpIfEqual {214}
	097 Move X21, 0x21ED000
	098 Move X23, 0x21ED000
	099 Move X24, 0x21EF000
	100 Move X21, [X21+3608]
	101 Move X23, [X23+1880]
	102 Move X24, [X24+2520]
	103 Move X8, [X19]
	104 Move X1, [X21]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X19
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {167}
	128 Move X8, [X19]
	129 Move X1, [X21]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move W2, 1
	140 Move X0, X19
	141 Call 0x1C5D788
	142 Move W9, [X10]
	143 Add W9, W9, 1
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X19
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X8, [X22]
	151 Move X8, [X8+184]
	152 Move X20, [X8]
	153 Compare X20, 0
	154 JumpIfEqual {211}
	155 Compare X0, 0
	156 JumpIfEqual {212}
	157 Move X8, [X0]
	158 Move X1, [X23]
	159 Move X8, [X8+64]
	160 Move X9, [X1+64]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Call 0x1C17E08
	163 Move W1, [X0]
	164 Move X2, [X24]
	165 Move X0, X20
	166 Call HashSet`1<Int32>.Add, X0, X1
	167 Move X20, X31
	168 Move X21, 0x21ED000
	169 Move X21, [X21+3584]
	170 Move X0, X19
	171 Move X1, [X21]
	172 Call 0x1C17E00
	173 Compare X0, 0
	174 JumpIfEqual {197}
	175 Move X8, [X0]
	176 Move X1, [X21]
	177 Move X19, X0
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X19
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X19
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X20, 0
	198 JumpIfNotEqual {215}
	199 Move X8, [X22]
	200 Move X8, [X8+184]
	201 Move X0, [X8]
	202 Move X20, [X31+48]
	203 Move X19, [X31+56]
	204 Move X22, [X31+32]
	205 Move X21, [X31+40]
	206 Move X24, [X31+16]
	207 Move X23, [X31+24]
	208 Move X30, [X31+64]
	209 Return X0
	210 Call 0x1C181E0
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Move X0, X20
	216 Call 0x1C17F18
	217 Move X21, X0
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X0, X21
	220 Call 0x3EB2AD0
	221 Move X20, [X0]
	222 Call 0x3EB2AE0
	223 Move X20, X31
	224 Move X21, X0
	225 Move X22, 0x21EC000
	226 Move X22, [X22+3584]
	227 Move X1, [X22]
	228 Move X0, X19
	229 Call 0x1C17E00
	230 Move X19, X0
	231 Compare X0, 0
	232 JumpIfEqual {254}
	233 Move X8, [X19]
	234 Move X1, [X22]
	235 NotImplemented "Instruction LDRH not yet implemented."
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move X0, X19
	245 Move W2, W31
	246 Call 0x1C5D788
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Add X8, X8, X9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X1, [X0+8]
	252 Move X0, X19
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Compare X20, 0
	255 JumpIfNotEqual {258}
	256 Move X0, X21
	257 Call 0x1D2D690
	258 Move X0, X20
	259 Call 0x1C17F18
	260 Call 0x1991590

Method: Fusion.Sockets.Stun.StunMessage/StunMessageType get_Type()

Disassembly:
	0x01F080F0 LDR V0, [X20]
	0x01F080F4 STR X8, [X21 + 0x28]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Type(Fusion.Sockets.Stun.StunMessage/StunMessageType value)

Disassembly:
	0x01F080F8 STUR V0, [X21 + 0x18]
	0x01F080FC LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Guid get_ID()

Disassembly:
	0x01F05CC4 ADRP X0, 0x21FB000
	0x01F05CC8 LDR X0, [X0 + 0x968]
	0x01F05CCC BL 0x1C16CF4
	0x01F05CD0 ADRP X0, 0x21FB000
	0x01F05CD4 LDR X0, [X0 + 0xBB8]
	0x01F05CD8 BL 0x1C16CF4
	0x01F05CDC ADRP X0, 0x21FB000
	0x01F05CE0 LDR X0, [X0 + 0xBC0]
	0x01F05CE4 BL 0x1C16CF4
	0x01F05CE8 ADRP X0, 0x21FB000
	0x01F05CEC LDR X0, [X0 + 0xC30]
	0x01F05CF0 BL 0x1C16CF4
	0x01F05CF4 ADRP X0, 0x21FB000
	0x01F05CF8 LDR X0, [X0 + 0xC38]
	0x01F05CFC BL 0x1C16CF4
	0x01F05D00 MOVZ W8, 0x1
	0x01F05D04 STRB W8, [X20 + 0x66E]
	0x01F05D08 LDR X0, [X19]
	0x01F05D0C ADRP X19, 0x21FB000
	0x01F05D10 ADRP X22, 0x21FB000
	0x01F05D14 ADRP X21, 0x21FB000
	0x01F05D18 ADRP X23, 0x21FB000
	0x01F05D1C LDR W8, [X0 + 0xE0]
	0x01F05D20 LDR X19, [X19 + 0xC30]
	0x01F05D24 LDR X22, [X22 + 0xBB8]
	0x01F05D28 LDR X21, [X21 + 0xBC0]
	0x01F05D2C LDR X23, [X23 + 0xC38]
	0x01F05D30 CBNZ W8, 0x1F05D38
	0x01F05D34 BL 0x1C16DFC
	0x01F05D38 LDR X0, [X19]
	0x01F05D3C MOV X1, X31
	0x01F05D40 BL 0x366D240
	0x01F05D44 LDR X8, [X22]
	0x01F05D48 MOV X19, X0
	0x01F05D4C MOV X0, X8
	0x01F05D50 BL 0x1C16F10
	0x01F05D54 MOVZ W2, 0xFFFA
	0x01F05D58 MOV X1, X19
	0x01F05D5C MOV X3, X31
	0x01F05D60 MOV X20, X0
	0x01F05D64 BL 0x366E898
	0x01F05D68 LDR X8, [X21]
	0x01F05D6C MOV X1, X31
	0x01F05D70 LDR X8, [X8 + 0xB8]
	0x01F05D74 STR X20, [X8]
	0x01F05D78 LDR X0, [X23]
	0x01F05D7C BL 0x366D240
	0x01F05D80 LDR X8, [X22]
	0x01F05D84 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24D5000
	007 Move X20, 0x21FC000
	008 Move W8, [X21+1651]
	009 Move X20, [X20+2968]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x21EF000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0x21FC000
	019 Move X0, [X0+2968]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1651], W8
	023 Move X8, [X20]
	024 Add X20, X19, 56
	025 Move X0, X20
	026 Move X3, X31
	027 Move X8, [X8+184]
	028 Move X1, [X8]
	029 Move X2, [X8+8]
	030 Call Guid.Equals, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {55}
	035 Move X8, 0x21EF000
	036 Move X8, [X8+1560]
	037 Move W1, 16
	038 Move X0, [X8]
	039 Call 0x1C17D6C
	040 Move X8, [X19+24]
	041 Move X21, X0
	042 Move W2, 12
	043 Move X1, X21
	044 Move X0, X8
	045 Move X3, X31
	046 Call Array.Copy, X0, X1, X2
	047 Add X0, X31, 0
	048 Move X1, X21
	049 Move X2, X31
	050 Move [X31], X31
	051 Move [X31+8], X31
	052 Call Guid..ctor, X0, X1
	053 Move V0, [X31]
	054 Move [X20], V0
	055 Move X0, [X19+56]
	056 Move X1, [X19+64]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Add X31, X31, 48
	062 Return X0

Method: System.Byte[] get_TransactionID()

Disassembly:
	0x01F08100 LDR V0, [X19]
	0x01F08104 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_TransactionID(System.Byte[] value)

Disassembly:
	0x01F08108 STR X8, [X21 + 0x40]
	0x01F0810C STR V0, [X21 + 0x3]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Net.IPEndPoint get_MappedAddress()

Disassembly:
	0x01F05C10 BL 0x1C16F28
	0x01F05C14 BL 0x1C16F20
	0x01F05C18 STR X30, [X31 - 0x30]!
	0x01F05C1C STP X22, X21, [X31 + 0x10]
	0x01F05C20 STP X20, X19, [X31 + 0x20]
	0x01F05C24 ADRP X21, 0x24D4000
	0x01F05C28 ADRP X22, 0x21FB000
	0x01F05C2C ADRP X19, 0x21FB000
	0x01F05C30 ADRP X20, 0x21F8000
	0x01F05C34 LDRB W8, [X21 + 0x66D]
	0x01F05C38 LDR X22, [X22 + 0xC20]
	0x01F05C3C LDR X19, [X19 + 0xC28]
	0x01F05C40 LDR X20, [X20 + 0x2C8]
	0x01F05C44 TBNZ X8, 0x0, 0x1F05C74
	0x01F05C48 ADRP X0, 0x21FB000
	0x01F05C4C LDR X0, [X0 + 0xC28]
	0x01F05C50 BL 0x1C16CF4
	0x01F05C54 ADRP X0, 0x21FB000
	0x01F05C58 LDR X0, [X0 + 0xC20]
	0x01F05C5C BL 0x1C16CF4
	0x01F05C60 ADRP X0, 0x21F8000
	0x01F05C64 LDR X0, [X0 + 0x2C8]
	0x01F05C68 BL 0x1C16CF4
	0x01F05C6C MOVZ W8, 0x1
	0x01F05C70 STRB W8, [X21 + 0x66D]
	0x01F05C74 LDR X0, [X22]
	0x01F05C78 BL 0x1C16F10
	0x01F05C7C LDR X1, [X19]
	0x01F05C80 MOV X19, X0
	0x01F05C84 BL 0x2960804
	0x01F05C88 LDR X8, [X20]
	0x01F05C8C LDP X22, X21, [X31 + 0x10]
	0x01F05C90 LDR X8, [X8 + 0xB8]
	0x01F05C94 STR X19, [X8]
	0x01F05C98 LDP X20, X19, [X31 + 0x20]
	0x01F05C9C LDR X30, [X31], #0x30
	0x01F05CA0 RET
	0x01F05CA4 STP X30, X23, [X31 - 0x30]!
	0x01F05CA8 STP X22, X21, [X31 + 0x10]
	0x01F05CAC STP X20, X19, [X31 + 0x20]
	0x01F05CB0 ADRP X20, 0x24D4000
	0x01F05CB4 ADRP X19, 0x21FB000
	0x01F05CB8 LDRB W8, [X20 + 0x66E]
	0x01F05CBC LDR X19, [X19 + 0x968]
	0x01F05CC0 TBNZ X8, 0x0, 0x1F05D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24D5000
	005 Move W8, [X20+1652]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x21FC000
	012 Move X0, [X0+2992]
	013 Call 0x1C17CF4
	014 Move X0, 0x21FC000
	015 Move X0, [X0+3000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1652], W8
	019 Move [X31+8], X31
	020 Move X0, [X19+48]
	021 Compare X0, 0
	022 JumpIfEqual {53}
	023 Move X8, 0x21FC000
	024 Move X8, [X8+2992]
	025 Add X2, X31, 8
	026 Move W1, 1
	027 Move X3, [X8]
	028 Call Dictionary`2<Int32Enum, Object>.TryGetValue, X0, X1, X2
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {43}
	033 Move X8, [X31+8]
	034 Compare X8, 0
	035 JumpIfEqual {43}
	036 Move X9, 0x21FC000
	037 Move X9, [X9+3000]
	038 Move X10, [X8]
	039 Move X9, [X9]
	040 Move W12, [X10+304]
	041 Move W11, [X9+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X31
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Move X10, [X10+200]
	049 Add X10, X10, X11
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Call 0x1C17F20

Method: System.Void set_MappedAddress(System.Net.IPEndPoint value)

Disassembly:
	0x01F08110 LDP X30, X21, [X31], #0x20
	0x01F08114 RET
	0x01F08118 SUB X31, X31, 0x90
	0x01F0811C STR X30, [X31 + 0x50]
	0x01F08120 STP X24, X23, [X31 + 0x60]
	0x01F08124 STP X22, X21, [X31 + 0x70]
	0x01F08128 STP X20, X19, [X31 + 0x80]
	0x01F0812C MRS X22, 0xC000
	0x01F08130 LDR X8, [X22 + 0x28]
	0x01F08134 ADRP X20, 0x24D1000
	0x01F08138 ADRP X21, 0x21EB000
	0x01F0813C MOV X19, X0
	0x01F08140 STR X8, [X31 + 0x48]
	0x01F08144 LDRB W8, [X20 + 0x67F]
	0x01F08148 LDR X21, [X21 + 0x9D0]
	0x01F0814C TBNZ X8, 0x0, 0x1F081B8
	0x01F08150 ADRP X0, 0x21F8000
	0x01F08154 LDR X0, [X0 + 0x8D0]
	0x01F08158 BL 0x1C16CF4
	0x01F0815C ADRP X0, 0x21F5000
	0x01F08160 LDR X0, [X0 + 0x78]
	0x01F08164 BL 0x1C16CF4
	0x01F08168 ADRP X0, 0x21EB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24D2000
	006 Move W8, [X21+1653]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x21F9000
	014 Move X0, [X0+3216]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1653], W8
	018 Move X0, [X20+48]
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X8, 0x21F9000
	022 Move X8, [X8+3216]
	023 Move X2, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W1, 1
	027 Move X3, [X8]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Dictionary`2<Int32Enum, Object>.set_Item, X0, X1, X2
	031 Return 
	032 Call 0x1C17F20

Method: System.String get_UserName()

Disassembly:
	0x01F0816C LDR X0, [X0 + 0x9D0]
	0x01F08170 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_UserName(System.String value)

Disassembly:
	0x01F08174 ADRP X0, 0x21F8000
	0x01F08178 LDR X0, [X0 + 0xCC8]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: Fusion.Sockets.Stun.StunErrorAttribute get_ErrorCode()

Disassembly:
	0x01F0817C BL 0x1C16CF4
	0x01F08180 ADRP X0, 0x21F8000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_ErrorCode(Fusion.Sockets.Stun.StunErrorAttribute value)

Disassembly:
	0x01F08184 LDR X0, [X0 + 0x8E0]
	0x01F08188 BL 0x1C16CF4

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Collections.Generic.Dictionary`2<Fusion.Sockets.Stun.StunMessage/AttributeType, System.Object> get_Attributes()

Disassembly:
	0x01F0818C ADRP X0, 0x21F8000
	0x01F08190 LDR X0, [X0 + 0xCD0]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_Attributes(System.Collections.Generic.Dictionary`2<Fusion.Sockets.Stun.StunMessage/AttributeType, System.Object> value)

Disassembly:
	0x01F08194 BL 0x1C16CF4
	0x01F08198 ADRP X0, 0x21F8000

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Void .ctor(System.Guid msgID, Fusion.Sockets.Stun.StunMessage/StunMessageType messageType = 1)

Disassembly:
	0x01F068D0 MOV X2, X0
	0x01F068D4 MOV X0, X19
	0x01F068D8 MOV X1, X20
	0x01F068DC BL 0x26324C8
	0x01F068E0 B 0x1F061A4
	0x01F068E4 MOV X19, X0
	0x01F068E8 B 0x1F06914
	0x01F068EC MOVZ W0, 0x8
	0x01F068F0 BL 0x3EB1AF0
	0x01F068F4 LDR X8, [X20]
	0x01F068F8 STR X8, [X0]
	0x01F068FC ADRP X1, 0x1FAE000
	0x01F06900 ADD X1, X1, 0xE58
	0x01F06904 MOV X2, X31
	0x01F06908 BL 0x3EB1B00
	0x01F0690C MOV X19, X0
	0x01F06910 BL 0x3EB1AE0
	0x01F06914 MOV X0, X19
	0x01F06918 BL 0x1D2C690
	0x01F0691C BL 0x1990590
	0x01F06920 SUB X31, X31, 0x90
	0x01F06924 STP X30, X21, [X31 + 0x70]
	0x01F06928 STP X20, X19, [X31 + 0x80]
	0x01F0692C ADRP X21, 0x24D3000
	0x01F06930 ADRP X20, 0x21F0000
	0x01F06934 LDRB W8, [X21 + 0x683]
	0x01F06938 LDR X20, [X20 + 0x280]
	0x01F0693C MOV X19, X0
	0x01F06940 TBNZ X8, 0x0, 0x1F06964
	0x01F06944 ADRP X0, 0x21FA000
	0x01F06948 LDR X0, [X0 + 0xC88]
	0x01F0694C BL 0x1C16CF4
	0x01F06950 ADRP X0, 0x21F0000
	0x01F06954 LDR X0, [X0 + 0x280]
	0x01F06958 BL 0x1C16CF4
	0x01F0695C MOVZ W8, 0x1
	0x01F06960 STRB W8, [X21 + 0x683]
	0x01F06964 LDR X0, [X20]
	0x01F06968 MOVI V0.2D, 0x0
	0x01F0696C STP V0, V0, [X31 + 0x50]
	0x01F06970 STP V0, V0, [X31 + 0x30]
	0x01F06974 STR V0, [X31 + 0x2]
	0x01F06978 ADRP X20, 0x21FA000
	0x01F0697C LDR W8, [X0 + 0xE0]
	0x01F06980 LDR X20, [X20 + 0xC88]
	0x01F06984 CBNZ W8, 0x1F0698C
	0x01F06988 BL 0x1C16DFC
	0x01F0698C ADD X8, X31, 0x8
	0x01F06990 MOV X0, X31
	0x01F06994 BL 0x32C4770
	0x01F06998 LDUR V0, [X31 + 0x8]
	0x01F0699C LDR X9, [X31 + 0x18]
	0x01F069A0 LDR X2, [X20]
	0x01F069A4 ADD X8, X31, 0x20
	0x01F069A8 ORR X20, X8, 0xF
	0x01F069AC MOVN W10, 0x0
	0x01F069B0 ADD X1, X31, 0x20
	0x01F069B4 MOV X0, X20
	0x01F069B8 STUR V0, [X31 + 0x28]
	0x01F069BC STP X9, X19, [X31 + 0x38]
	0x01F069C0 STR W10, [X31 + 0x20]
	0x01F069C4 BL 0x2195EB8
	0x01F069C8 MOV X0, X20
	0x01F069CC MOV X1, X31
	0x01F069D0 BL 0x32C47F8
	0x01F069D4 LDP X20, X19, [X31 + 0x80]
	0x01F069D8 LDP X30, X21, [X31 + 0x70]
	0x01F069DC ADD X31, X31, 0x90
	0x01F069E0 RET
	0x01F069E4 SUB X31, X31, 0x130
	0x01F069E8 STR X29, [X31 + 0xE0]
	0x01F069EC STP X30, X25, [X31 + 0xF0]
	0x01F069F0 STP X24, X23, [X31 + 0x100]
	0x01F069F4 STP X22, X21, [X31 + 0x110]
	0x01F069F8 STP X20, X19, [X31 + 0x120]
	0x01F069FC MRS X23, 0xC000
	0x01F06A00 LDR X8, [X23 + 0x28]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X21, 0x24D4000
	011 Move [X31+16], X1
	012 Move [X31+24], X2
	013 Move X24, 0x21FB000
	014 Move X25, 0x21EE000
	015 Move W8, [X21+1654]
	016 Move X24, [X24+2968]
	017 Move X25, [X25+1560]
	018 Move W20, W3
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x21EE000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0x21FB000
	028 Move X0, [X0+3088]
	029 Call 0x1C17CF4
	030 Move X0, 0x21FB000
	031 Move X0, [X0+3096]
	032 Call 0x1C17CF4
	033 Move X0, 0x21FB000
	034 Move X0, [X0+2968]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1654], W8
	038 Move X8, [X24]
	039 Move [X31], X31
	040 Move [X31+8], X31
	041 Move X23, 0x21FB000
	042 Move X22, 0x21FB000
	043 Move X8, [X8+184]
	044 Move X0, X19
	045 Move X1, X31
	046 Add X21, X31, 16
	047 Move V0, [X8]
	048 Move X23, [X23+3096]
	049 Move X22, [X22+3088]
	050 Move [X19+56], V0
	051 Call Object..ctor, X0
	052 Move [X19+16], W20
	053 Move X0, [X25]
	054 Move W1, 12
	055 Call 0x1C17D6C
	056 Move [X19+24], X0
	057 Move X8, [X24]
	058 Add X0, X31, 16
	059 Move X3, X31
	060 Move X8, [X8+184]
	061 Move X1, [X8]
	062 Move X2, [X8+8]
	063 Call Guid.Equals, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {73}
	068 Move X0, X31
	069 Call Guid.NewGuid
	070 Add X21, X31, 0
	071 Move [X31], X0
	072 Move [X31+8], X1
	073 Move X0, X21
	074 Move X1, X31
	075 Call Guid.ToByteArray, X0
	076 Move X1, [X19+24]
	077 Move W2, 12
	078 Move X3, X31
	079 Call Array.Copy, X0, X1, X2
	080 Move X0, [X23]
	081 Call 0x1C17F10
	082 Move X1, [X22]
	083 Move X20, X0
	084 Call Dictionary`2<Int32Enum, Object>..ctor, X0
	085 Move [X19+48], X20
	086 Move X20, [X31+80]
	087 Move X19, [X31+88]
	088 Move X22, [X31+64]
	089 Move X21, [X31+72]
	090 Move X24, [X31+48]
	091 Move X23, [X31+56]
	092 Move X30, [X31+32]
	093 Move X25, [X31+40]
	094 Add X31, X31, 96
	095 Return 

Method: System.Boolean IsStunMessage(System.Byte* data, System.Int32 length)

Disassembly:
	0x01F04D2C LDR X8, [X8 + 0x618]
	0x01F04D30 MOVZ W1, 0x10
	0x01F04D34 LDR X0, [X8]
	0x01F04D38 BL 0x1C16D6C
	0x01F04D3C LDR X8, [X19 + 0x18]
	0x01F04D40 MOV X21, X0
	0x01F04D44 MOVZ W2, 0xC
	0x01F04D48 MOV X1, X21
	0x01F04D4C MOV X0, X8
	0x01F04D50 MOV X3, X31
	0x01F04D54 BL 0x33A0C7C
	0x01F04D58 ADD X0, X31, 0x0
	0x01F04D5C MOV X1, X21
	0x01F04D60 MOV X2, X31
	0x01F04D64 STP X31, X31, [X31]
	0x01F04D68 BL 0x3376898
	0x01F04D6C LDR V0, [X31]
	0x01F04D70 STR V0, [X20]
	0x01F04D74 LDP X0, X1, [X19 + 0x38]
	0x01F04D78 LDP X20, X19, [X31 + 0x20]
	0x01F04D7C LDP X30, X21, [X31 + 0x10]
	0x01F04D80 ADD X31, X31, 0x30
	0x01F04D84 RET
	0x01F04D88 SUB X31, X31, 0x80
	0x01F04D8C STP X30, X25, [X31 + 0x40]
	0x01F04D90 STP X24, X23, [X31 + 0x50]
	0x01F04D94 STP X22, X21, [X31 + 0x60]
	0x01F04D98 STP X20, X19, [X31 + 0x70]
	0x01F04D9C MRS X22, 0xC000
	0x01F04DA0 LDR X8, [X22 + 0x28]
	0x01F04DA4 ADRP X24, 0x24D5000
	0x01F04DA8 ADRP X23, 0x21F9000
	0x01F04DAC MOV X19, X2
	0x01F04DB0 STR X8, [X31 + 0x38]
	0x01F04DB4 LDRB W8, [X24 + 0x66A]
	0x01F04DB8 LDR X23, [X23 + 0x78]
	0x01F04DBC MOV X21, X1
	0x01F04DC0 MOV X20, X0
	0x01F04DC4 TBNZ X8, 0x0, 0x1F04DE8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24D6000
	006 Move W8, [X21+1655]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x21F1000
	014 Move X0, [X0+3576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1655], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W20, [X19]
	020 And W31, W20, 192
	021 Move W8, [X19+4]
	022 Move W9, 0xA442
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 NotImplemented "Instruction REV not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W19, [X19+1]
	027 Call StunMessage.get_StunMessageTypeValues
	028 Compare X0, 0
	029 JumpIfEqual {47}
	030 Move X8, 0x21F1000
	031 Move X8, [X8+3576]
	032 NotImplemented "Instruction BFM not yet implemented."
	033 Move W1, W19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X2, [X8]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call HashSet`1<Int32>.Contains, X0, X1
	040 Return X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W0, W31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20

Method: Fusion.Sockets.Stun.StunMessage TryParse(System.Byte* data, System.Int32 length)

Disassembly:
	0x01F05980 MOVZ W1, 0xC
	0x01F05984 BL 0x1C16D6C
	0x01F05988 STR X0, [X19 + 0x18]
	0x01F0598C LDR X8, [X24]
	0x01F05990 ADD X0, X31, 0x10
	0x01F05994 MOV X3, X31
	0x01F05998 LDR X8, [X8 + 0xB8]
	0x01F0599C LDP X1, X2, [X8]
	0x01F059A0 BL 0x337896C
	0x01F059A4 TBZ X0, 0x0, 0x1F059B8
	0x01F059A8 MOV X0, X31
	0x01F059AC BL 0x337684C
	0x01F059B0 ADD X21, X31, 0x0
	0x01F059B4 STP X0, X1, [X31]
	0x01F059B8 MOV X0, X21
	0x01F059BC MOV X1, X31
	0x01F059C0 BL 0x33785D8
	0x01F059C4 LDR X1, [X19 + 0x18]
	0x01F059C8 MOVZ W2, 0xC
	0x01F059CC MOV X3, X31
	0x01F059D0 BL 0x33A0C7C
	0x01F059D4 LDR X0, [X23]
	0x01F059D8 BL 0x1C16F10
	0x01F059DC LDR X1, [X22]
	0x01F059E0 MOV X20, X0
	0x01F059E4 BL 0x2A44560
	0x01F059E8 STR X20, [X19 + 0x30]
	0x01F059EC LDP X20, X19, [X31 + 0x50]
	0x01F059F0 LDP X22, X21, [X31 + 0x40]
	0x01F059F4 LDP X24, X23, [X31 + 0x30]
	0x01F059F8 LDP X30, X25, [X31 + 0x20]
	0x01F059FC ADD X31, X31, 0x60
	0x01F05A00 RET
	0x01F05A04 SUB X31, X31, 0x50
	0x01F05A08 STP X30, X25, [X31 + 0x10]
	0x01F05A0C STP X24, X23, [X31 + 0x20]
	0x01F05A10 STP X22, X21, [X31 + 0x30]
	0x01F05A14 STP X20, X19, [X31 + 0x40]
	0x01F05A18 ADRP X19, 0x24D4000
	0x01F05A1C ADRP X22, 0x21EE000
	0x01F05A20 LDRB W8, [X19 + 0x679]
	0x01F05A24 LDR X22, [X22 + 0x618]
	0x01F05A28 MOV X20, X0
	0x01F05A2C TBNZ X8, 0x0, 0x1F05A44
	0x01F05A30 ADRP X0, 0x21EE000
	0x01F05A34 LDR X0, [X0 + 0x618]
	0x01F05A38 BL 0x1C16CF4
	0x01F05A3C MOVZ W8, 0x1
	0x01F05A40 STRB W8, [X19 + 0x679]
	0x01F05A44 LDR X0, [X22]
	0x01F05A48 MOVZ W1, 0x200
	0x01F05A4C BL 0x1C16D6C
	0x01F05A50 MOVZ W8, 0x1
	0x01F05A54 STR W8, [X31 + 0xC]
	0x01F05A58 CBZ X0, 0x1F05C14
	0x01F05A5C LDR W8, [X0 + 0x18]
	0x01F05A60 MOV X19, X0
	0x01F05A64 CBZ W8, 0x1F05C10
	0x01F05A68 LDR W9, [X20 + 0x10]
	0x01F05A6C UBFM W9, W9, 0x8, 0x1F
	0x01F05A70 STRB W9, [X19 + 0x20]
	0x01F05A74 LDRSW X9, [X31 + 0xC]
	0x01F05A78 ADD W10, W9, 0x1
	0x01F05A7C CMP W9, W8
	0x01F05A80 STR W10, [X31 + 0xC]
	0x01F05A84 B.CS 0x1F05C10
	0x01F05A88 LDR W8, [X20 + 0x10]
	0x01F05A8C ADD X9, X19, X9
	0x01F05A90 STRB W8, [X9 + 0x20]
	0x01F05A94 LDRSW X24, [X31 + 0xC]
	0x01F05A98 ADD W23, W24, 0x1
	0x01F05A9C STR W23, [X31 + 0xC]
	0x01F05AA0 LDR W8, [X19 + 0x18]
	0x01F05AA4 CMP W24, W8
	0x01F05AA8 B.CS 0x1F05C10
	0x01F05AAC ADD X25, X19, X24
	0x01F05AB0 STRB W31, [X25 + 0x20]!
	0x01F05AB4 LDRSW X8, [X31 + 0xC]
	0x01F05AB8 ADD W9, W8, 0x1
	0x01F05ABC STR W9, [X31 + 0xC]
	0x01F05AC0 LDR W9, [X19 + 0x18]
	0x01F05AC4 CMP W8, W9
	0x01F05AC8 B.CS 0x1F05C10
	0x01F05ACC ADD X8, X19, X8
	0x01F05AD0 STRB W31, [X8 + 0x20]
	0x01F05AD4 LDRSW X8, [X31 + 0xC]
	0x01F05AD8 ADD W9, W8, 0x1
	0x01F05ADC STR W9, [X31 + 0xC]
	0x01F05AE0 LDR W9, [X19 + 0x18]
	0x01F05AE4 CMP W8, W9
	0x01F05AE8 B.CS 0x1F05C10
	0x01F05AEC ADD X8, X19, X8
	0x01F05AF0 MOVZ W9, 0x21
	0x01F05AF4 STRB W9, [X8 + 0x20]
	0x01F05AF8 LDRSW X8, [X31 + 0xC]
	0x01F05AFC ADD W9, W8, 0x1
	0x01F05B00 STR W9, [X31 + 0xC]
	0x01F05B04 LDR W9, [X19 + 0x18]
	0x01F05B08 CMP W8, W9
	0x01F05B0C B.CS 0x1F05C10
	0x01F05B10 ADD X8, X19, X8
	0x01F05B14 MOVZ W9, 0x12
	0x01F05B18 STRB W9, [X8 + 0x20]
	0x01F05B1C LDRSW X8, [X31 + 0xC]
	0x01F05B20 ADD W9, W8, 0x1
	0x01F05B24 STR W9, [X31 + 0xC]
	0x01F05B28 LDR W9, [X19 + 0x18]
	0x01F05B2C CMP W8, W9
	0x01F05B30 B.CS 0x1F05C10
	0x01F05B34 ADD X8, X19, X8
	0x01F05B38 MOVZ W9, 0xA4
	0x01F05B3C STRB W9, [X8 + 0x20]
	0x01F05B40 LDRSW X8, [X31 + 0xC]
	0x01F05B44 ADD W9, W8, 0x1
	0x01F05B48 STR W9, [X31 + 0xC]
	0x01F05B4C LDR W9, [X19 + 0x18]
	0x01F05B50 CMP W8, W9
	0x01F05B54 B.CS 0x1F05C10
	0x01F05B58 ADD X8, X19, X8
	0x01F05B5C MOVZ W9, 0x42
	0x01F05B60 STRB W9, [X8 + 0x20]
	0x01F05B64 LDR W21, [X31 + 0xC]
	0x01F05B68 LDR X0, [X20 + 0x18]
	0x01F05B6C MOVZ W4, 0xC
	0x01F05B70 MOV W1, W31
	0x01F05B74 MOV X2, X19
	0x01F05B78 MOV W3, W21
	0x01F05B7C MOV X5, X31
	0x01F05B80 BL 0x339FCE8
	0x01F05B84 ADD W8, W21, 0xC
	0x01F05B88 ADD X2, X31, 0xC
	0x01F05B8C MOV X0, X20
	0x01F05B90 MOV X1, X19
	0x01F05B94 STR W8, [X31 + 0xC]
	0x01F05B98 BL 0x1F072C4
	0x01F05B9C LDR W8, [X19 + 0x18]
	0x01F05BA0 CMP W24, W8
	0x01F05BA4 B.CS 0x1F05C10
	0x01F05BA8 LDR W8, [X31 + 0xC]
	0x01F05BAC SUB W8, W8, 0x14
	0x01F05BB0 UBFM W9, W8, 0x8, 0x1F
	0x01F05BB4 STRB W9, [X25]
	0x01F05BB8 LDR W9, [X19 + 0x18]
	0x01F05BBC CMP W23, W9
	0x01F05BC0 B.CS 0x1F05C10
	0x01F05BC4 ADD X9, X19, W23, SXTW
	0x01F05BC8 STRB W8, [X9 + 0x20]
	0x01F05BCC LDR W1, [X31 + 0xC]
	0x01F05BD0 LDR X0, [X22]
	0x01F05BD4 BL 0x1C16D6C
	0x01F05BD8 CBZ X0, 0x1F05C14
	0x01F05BDC LDR W2, [X0 + 0x18]
	0x01F05BE0 MOV X20, X0
	0x01F05BE4 MOV X0, X19
	0x01F05BE8 MOV X1, X20
	0x01F05BEC MOV X3, X31
	0x01F05BF0 BL 0x33A0C7C
	0x01F05BF4 MOV X0, X20
	0x01F05BF8 LDP X20, X19, [X31 + 0x40]
	0x01F05BFC LDP X22, X21, [X31 + 0x30]
	0x01F05C00 LDP X24, X23, [X31 + 0x20]
	0x01F05C04 LDP X30, X25, [X31 + 0x10]
	0x01F05C08 ADD X31, X31, 0x50
	0x01F05C0C RET

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x24D5000
	013 Move W8, [X21+1656]
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x21EF000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0x21EF000
	024 Move X0, [X0+3576]
	025 Call 0x1C17CF4
	026 Move X0, 0x21FC000
	027 Move X0, [X0+2968]
	028 Call 0x1C17CF4
	029 Move X0, 0x21EF000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0x21FC000
	033 Move X0, [X0+2976]
	034 Call 0x1C17CF4
	035 Move X0, 0x21FC000
	036 Move X0, [X0+2984]
	037 Call 0x1C17CF4
	038 Move X0, 0x21EF000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+1656], W8
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X19]
	045 Move W9, 2
	046 Move [X31+12], W9
	047 And W31, W8, 192
	048 Move X20, X31
	049 Move X0, X20
	050 Move X20, [X31+80]
	051 Move X19, [X31+88]
	052 Move X22, [X31+64]
	053 Move X21, [X31+72]
	054 Move X24, [X31+48]
	055 Move X23, [X31+56]
	056 Move X26, [X31+32]
	057 Move X25, [X31+40]
	058 Move X30, [X31+16]
	059 Move X27, [X31+24]
	060 Add X31, X31, 96
	061 Return X0
	062 Move X9, 0x21EF000
	063 Move X9, [X9+1728]
	064 Move W24, [X19+1]
	065 Move X0, [X9]
	066 Move X9, 0x21FC000
	067 Move X9, [X9+2976]
	068 NotImplemented "Instruction BFM not yet implemented."
	069 Move W10, [X0+224]
	070 Move X20, [X9]
	071 Compare W10, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X31
	076 Call Type.GetTypeFromHandle, X0
	077 Move X8, 0x21EF000
	078 Move X8, [X8+1880]
	079 Move X20, X0
	080 Add X1, X31, 8
	081 Move [X31+8], W24
	082 Move X0, [X8]
	083 Call 0x1C17E04
	084 Move X8, 0x21EF000
	085 Move X8, [X8+3576]
	086 Move X21, X0
	087 Move X8, [X8]
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X0, X20
	094 Move X1, X21
	095 Move X2, X31
	096 Call Enum.IsDefined, X0, X1
	097 Move X20, X31
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {49}
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add W8, W26, 1
	104 Add W9, W26, 2
	105 Move [X31+12], W8
	106 Add W10, W26, 3
	107 Move W27, [X26]
	108 Move [X31+12], W9
	109 Add W11, W26, 4
	110 Move W23, [X19]
	111 Move [X31+12], W10
	112 Add W12, W26, 5
	113 Move W8, [X19]
	114 Move [X31+12], W11
	115 Add W25, W26, 6
	116 Move W9, [X19]
	117 Move [X31+12], W12
	118 Move W10, [X19]
	119 Move [X31+12], W25
	120 Move W11, [X19]
	121 Move W8, W8
	122 ShiftRight W8, 8
	123 And W8, W8, 127
	124 NotImplemented "Instruction BFM not yet implemented."
	125 NotImplemented "Instruction BFM not yet implemented."
	126 Move W9, 0xA442
	127 Or W8, W8, W11
	128 NotImplemented "Instruction MOVK not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, 0x21FC000
	131 Move X8, [X8+2968]
	132 Move X9, 0x21FC000
	133 Move X8, [X8]
	134 Move X8, [X8+184]
	135 Move X9, [X9+2984]
	136 Move X21, [X8]
	137 Move X22, [X8+8]
	138 Move X0, [X9]
	139 Call 0x1C17F10
	140 Move W3, 1
	141 Move X1, X21
	142 Move X2, X22
	143 Move X20, X0
	144 Call StunMessage..ctor, X0, X1, X2
	145 Compare X20, 0
	146 JumpIfEqual {173}
	147 Move [X20+16], W24
	148 Move X8, 0x21EF000
	149 Move X8, [X8+1560]
	150 Move W1, 12
	151 Move X0, [X8]
	152 Call 0x1C17D6C
	153 Add W8, W26, 7
	154 Move [X20+24], X0
	155 Move [X31+12], W8
	156 Compare X0, 0
	157 JumpIfEqual {173}
	158 Move X8, X31
	159 NotImplemented "Instruction BFM not yet implemented."
	160 Move W9, [X0+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W9, [X19]
	163 Add X10, X0, X8
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X10+32], W9
	166 Move W25, [X31+12]
	167 Move X0, [X20+24]
	168 Add X8, X8, 1
	169 Add W9, W25, 1
	170 Move [X31+12], W9
	171 Compare X0, 0
	172 JumpIfNotEqual {160}
	173 Call 0x1C17F20
	174 Add X2, X31, 12
	175 Move X0, X20
	176 Move X1, X19
	177 Call StunMessage.ReadAttribute, X0, X1, X2
	178 Move W8, [X31+12]
	179 Subtract W8, W8, 20
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Call 0x1C17F28

Method: System.Byte[] Serialize()

Disassembly:
	0x01F06A04 ADRP X25, 0x24D3000
	0x01F06A08 ADRP X20, 0x21F7000
	0x01F06A0C ADRP X24, 0x21F7000
	0x01F06A10 STR X8, [X31 + 0xD8]
	0x01F06A14 LDRB W8, [X25 + 0x67E]
	0x01F06A18 LDR X20, [X20 + 0x2D0]
	0x01F06A1C LDR X24, [X24 + 0x78]
	0x01F06A20 MOV X22, X2
	0x01F06A24 MOV X21, X1
	0x01F06A28 MOV X19, X0
	0x01F06A2C TBNZ X8, 0x0, 0x1F06A50
	0x01F06A30 ADRP X0, 0x21F7000
	0x01F06A34 LDR X0, [X0 + 0x78]
	0x01F06A38 BL 0x1C16CF4
	0x01F06A3C ADRP X0, 0x21F7000
	0x01F06A40 LDR X0, [X0 + 0x2D0]
	0x01F06A44 BL 0x1C16CF4
	0x01F06A48 MOVZ W8, 0x1
	0x01F06A4C STRB W8, [X25 + 0x67E]
	0x01F06A50 LDR X8, [X19 + 0x10]
	0x01F06A54 LDR V0, [X19]
	0x01F06A58 LDR X0, [X20]
	0x01F06A5C STR X8, [X31 + 0xD0]
	0x01F06A60 STR V0, [X31 + 0xC]
	0x01F06A64 LDR X8, [X22 + 0x10]
	0x01F06A68 LDR V0, [X22]
	0x01F06A6C STR X8, [X31 + 0xB0]
	0x01F06A70 STR V0, [X31 + 0xA]
	0x01F06A74 BL 0x1C16F10
	0x01F06A78 MOV X1, X31
	0x01F06A7C MOV X20, X0
	0x01F06A80 BL 0x33BDD8C
	0x01F06A84 LDR X8, [X31 + 0xD0]
	0x01F06A88 LDR V0, [X31 + 0xC]
	0x01F06A8C STR X8, [X20 + 0x28]
	0x01F06A90 STUR V0, [X20 + 0x18]
	0x01F06A94 LDR X8, [X31 + 0xB0]
	0x01F06A98 LDR V0, [X31 + 0xA]
	0x01F06A9C STRB W31, [X20 + 0x10]
	0x01F06AA0 STR X8, [X20 + 0x40]
	0x01F06AA4 STR V0, [X20 + 0x3]
	0x01F06AA8 LDR X0, [X24]
	0x01F06AAC LDR W8, [X0 + 0xE0]
	0x01F06AB0 CBNZ W8, 0x1F06ABC
	0x01F06AB4 BL 0x1C16DFC
	0x01F06AB8 LDR X0, [X24]
	0x01F06ABC LDR X8, [X0 + 0xB8]
	0x01F06AC0 ADD X1, X31, 0x80
	0x01F06AC4 MOV X0, X19
	0x01F06AC8 MOV X2, X31
	0x01F06ACC LDR X9, [X8 + 0x10]
	0x01F06AD0 LDR V0, [X8]
	0x01F06AD4 STR X9, [X31 + 0x90]
	0x01F06AD8 STR V0, [X31 + 0x8]
	0x01F06ADC BL 0x1EF8788
	0x01F06AE0 TBZ X0, 0x0, 0x1F06B28
	0x01F06AE4 LDR X0, [X24]
	0x01F06AE8 LDR W8, [X0 + 0xE0]
	0x01F06AEC CBNZ W8, 0x1F06AF8
	0x01F06AF0 BL 0x1C16DFC
	0x01F06AF4 LDR X0, [X24]
	0x01F06AF8 LDR X8, [X0 + 0xB8]
	0x01F06AFC ADD X1, X31, 0x60
	0x01F06B00 MOV X0, X21
	0x01F06B04 MOV X2, X31
	0x01F06B08 LDR X9, [X8 + 0x10]
	0x01F06B0C LDR V0, [X8]
	0x01F06B10 STR X9, [X31 + 0x70]
	0x01F06B14 STR V0, [X31 + 0x6]
	0x01F06B18 BL 0x1EF8788
	0x01F06B1C TBZ X0, 0x0, 0x1F06B28
	0x01F06B20 MOVZ W8, 0x1
	0x01F06B24 B 0x1F06BC4
	0x01F06B28 LDR X8, [X22 + 0x10]
	0x01F06B2C LDR V0, [X22]
	0x01F06B30 LDR X0, [X24]
	0x01F06B34 STR X8, [X31 + 0x50]
	0x01F06B38 STR V0, [X31 + 0x4]
	0x01F06B3C LDR W8, [X0 + 0xE0]
	0x01F06B40 CBNZ W8, 0x1F06B48
	0x01F06B44 BL 0x1C16DFC
	0x01F06B48 LDR V0, [X31 + 0x4]
	0x01F06B4C LDR X8, [X31 + 0x50]
	0x01F06B50 ADD X1, X31, 0x20
	0x01F06B54 MOV X0, X19
	0x01F06B58 MOV X2, X31
	0x01F06B5C STR V0, [X31 + 0x2]
	0x01F06B60 STR X8, [X31 + 0x30]
	0x01F06B64 BL 0x1EF8788
	0x01F06B68 TBZ X0, 0x0, 0x1F06B74
	0x01F06B6C MOVZ W8, 0x2
	0x01F06B70 B 0x1F06BC4
	0x01F06B74 LDR X8, [X21 + 0x10]
	0x01F06B78 LDR V0, [X21]
	0x01F06B7C LDR X0, [X24]
	0x01F06B80 STR X8, [X31 + 0x50]
	0x01F06B84 STR V0, [X31 + 0x4]
	0x01F06B88 LDR W8, [X0 + 0xE0]
	0x01F06B8C CBNZ W8, 0x1F06B94
	0x01F06B90 BL 0x1C16DFC
	0x01F06B94 LDR V0, [X31 + 0x4]
	0x01F06B98 LDR X8, [X31 + 0x50]
	0x01F06B9C ADD X1, X31, 0x0
	0x01F06BA0 MOV X0, X19
	0x01F06BA4 MOV X2, X31
	0x01F06BA8 STR V0, [X31]
	0x01F06BAC STR X8, [X31 + 0x10]
	0x01F06BB0 BL 0x1EF8788
	0x01F06BB4 ANDS W31, W0, 0x1
	0x01F06BB8 MOVZ W8, 0x8
	0x01F06BBC MOVZ W9, 0x4
	0x01F06BC0 CSEL W8, W9, W8, NE
	0x01F06BC4 STRB W8, [X20 + 0x10]
	0x01F06BC8 LDR X8, [X23 + 0x28]
	0x01F06BCC LDR X9, [X31 + 0xD8]
	0x01F06BD0 CMP X8, X9
	0x01F06BD4 B.NE 0x1F06BF8
	0x01F06BD8 MOV X0, X20
	0x01F06BDC LDP X20, X19, [X31 + 0x120]
	0x01F06BE0 LDP X22, X21, [X31 + 0x110]
	0x01F06BE4 LDP X24, X23, [X31 + 0x100]
	0x01F06BE8 LDP X30, X25, [X31 + 0xF0]
	0x01F06BEC LDR X29, [X31 + 0xE0]
	0x01F06BF0 ADD X31, X31, 0x130
	0x01F06BF4 RET
	0x01F06BF8 BL 0x3EB1B20
	0x01F06BFC STR X30, [X31 - 0x30]!
	0x01F06C00 STP X22, X21, [X31 + 0x10]
	0x01F06C04 STP X20, X19, [X31 + 0x20]
	0x01F06C08 ADRP X22, 0x24D3000
	0x01F06C0C ADRP X21, 0x21F7000
	0x01F06C10 LDRB W8, [X22 + 0x670]
	0x01F06C14 LDR X21, [X21 + 0x128]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x24D4000
	011 Move X22, 0x21EE000
	012 Move W8, [X19+1657]
	013 Move X22, [X22+1560]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x21EE000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+1657], W8
	024 Move X0, [X22]
	025 Move W1, 512
	026 Call 0x1C17D6C
	027 Move W8, 1
	028 Move [X31+12], W8
	029 Compare X0, 0
	030 JumpIfEqual {142}
	031 Move W8, [X0+24]
	032 Move X19, X0
	033 Compare W8, 0
	034 JumpIfEqual {141}
	035 Move W9, [X20+16]
	036 Move W9, W9
	037 ShiftRight W9, 8
	038 And W9, W9, 0x7FFFFFFF
	039 Move [X19+32], W9
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 Add W10, W9, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X31+12], W10
	044 Move W8, [X20+16]
	045 Add X9, X19, X9
	046 Move [X9+32], W8
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add W23, W24, 1
	049 Move [X31+12], W23
	050 Move W8, [X19+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X25, X19, X24
	053 Move [X25+32], W31
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add W9, W8, 1
	056 Move [X31+12], W9
	057 Move W9, [X19+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X8, X19, X8
	060 Move [X8+32], W31
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add W9, W8, 1
	063 Move [X31+12], W9
	064 Move W9, [X19+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X19, X8
	067 Move W9, 33
	068 Move [X8+32], W9
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add W9, W8, 1
	071 Move [X31+12], W9
	072 Move W9, [X19+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X8, X19, X8
	075 Move W9, 18
	076 Move [X8+32], W9
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add W9, W8, 1
	079 Move [X31+12], W9
	080 Move W9, [X19+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X8, X19, X8
	083 Move W9, 164
	084 Move [X8+32], W9
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add W9, W8, 1
	087 Move [X31+12], W9
	088 Move W9, [X19+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add X8, X19, X8
	091 Move W9, 66
	092 Move [X8+32], W9
	093 Move W21, [X31+12]
	094 Move X0, [X20+24]
	095 Move W4, 12
	096 Move W1, W31
	097 Move X2, X19
	098 Move W3, W21
	099 Move X5, X31
	100 Call Array.Copy, X0, X1, X2, X3, X4
	101 Add W8, W21, 12
	102 Add X2, X31, 12
	103 Move X0, X20
	104 Move X1, X19
	105 Move [X31+12], W8
	106 Call StunMessage.WriteAttributes, X0, X1, X2
	107 Move W8, [X19+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move W8, [X31+12]
	110 Subtract W8, W8, 20
	111 Move W9, W8
	112 ShiftRight W9, 8
	113 And W9, W9, 0x7FFFFFFF
	114 Move [X25], W9
	115 Move W9, [X19+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add X9, X19, W23
	118 Move [X9+32], W8
	119 Move W1, [X31+12]
	120 Move X0, [X22]
	121 Call 0x1C17D6C
	122 Compare X0, 0
	123 JumpIfEqual {142}
	124 Move W2, [X0+24]
	125 Move X20, X0
	126 Move X0, X19
	127 Move X1, X20
	128 Move X3, X31
	129 Call Array.Copy, X0, X1, X2
	130 Move X0, X20
	131 Move X20, [X31+64]
	132 Move X19, [X31+72]
	133 Move X22, [X31+48]
	134 Move X21, [X31+56]
	135 Move X24, [X31+32]
	136 Move X23, [X31+40]
	137 Move X30, [X31+16]
	138 Move X25, [X31+24]
	139 Add X31, X31, 80
	140 Return X0
	141 Call 0x1C17F28
	142 Call 0x1C17F20

Method: System.Void WriteAttributes(System.Byte[] msg, ref System.Int32 offset)

Disassembly:
	0x01F082C4 STR X8, [X31 + 0x20]
	0x01F082C8 STR V0, [X31 + 0x1]
	0x01F082CC BL 0x1C16E04
	0x01F082D0 MOV X21, X0
	0x01F082D4 CBZ X0, 0x1F082EC
	0x01F082D8 LDR X8, [X20]
	0x01F082DC MOV X0, X21
	0x01F082E0 LDR X1, [X8 + 0x40]
	0x01F082E4 BL 0x1C16E00
	0x01F082E8 CBZ X0, 0x1F083BC
	0x01F082EC LDR W8, [X20 + 0x18]
	0x01F082F0 CMP W8, 0x4
	0x01F082F4 B.LS 0x1F083B8
	0x01F082F8 ADRP X23, 0x21F8000
	0x01F082FC LDR X23, [X23 + 0x8E0]
	0x01F08300 STR X21, [X20 + 0x40]
	0x01F08304 LDR X0, [X23]
	0x01F08308 CBZ X0, 0x1F08320
	0x01F0830C LDR X8, [X20]
	0x01F08310 LDR X1, [X8 + 0x40]
	0x01F08314 BL 0x1C16E00
	0x01F08318 CBZ X0, 0x1F083BC
	0x01F0831C LDR W8, [X20 + 0x18]
	0x01F08320 CMP W8, 0x5
	0x01F08324 B.LS 0x1F083B8
	0x01F08328 LDR X8, [X23]
	0x01F0832C ADRP X9, 0x21F8000
	0x01F08330 LDR X9, [X9 + 0x8D0]
	0x01F08334 ADD X1, X31, 0xC
	0x01F08338 STR X8, [X20 + 0x48]
	0x01F0833C LDRB W8, [X19 + 0x10]
	0x01F08340 LDR X0, [X9]
	0x01F08344 STRB W8, [X31 + 0xC]
	0x01F08348 BL 0x1C16E04
	0x01F0834C MOV X19, X0
	0x01F08350 CBZ X0, 0x1F08368
	0x01F08354 LDR X8, [X20]
	0x01F08358 MOV X0, X19
	0x01F0835C LDR X1, [X8 + 0x40]
	0x01F08360 BL 0x1C16E00
	0x01F08364 CBZ X0, 0x1F083BC
	0x01F08368 LDR W8, [X20 + 0x18]
	0x01F0836C CMP W8, 0x6
	0x01F08370 B.LS 0x1F083B8
	0x01F08374 ADRP X8, 0x21F8000
	0x01F08378 LDR X8, [X8 + 0xCD8]
	0x01F0837C STR X19, [X20 + 0x50]
	0x01F08380 MOV X1, X20
	0x01F08384 MOV X2, X31
	0x01F08388 LDR X0, [X8]
	0x01F0838C BL 0x3227C5C
	0x01F08390 LDR X8, [X22 + 0x28]
	0x01F08394 LDR X9, [X31 + 0x48]
	0x01F08398 CMP X8, X9
	0x01F0839C B.NE 0x1F083CC
	0x01F083A0 LDP X20, X19, [X31 + 0x80]
	0x01F083A4 LDP X22, X21, [X31 + 0x70]
	0x01F083A8 LDP X24, X23, [X31 + 0x60]
	0x01F083AC LDR X30, [X31 + 0x50]
	0x01F083B0 ADD X31, X31, 0x90
	0x01F083B4 RET
	0x01F083B8 BL 0x1C16F28
	0x01F083BC BL 0x1C16F44
	0x01F083C0 MOV X1, X31
	0x01F083C4 BL 0x1C16DEC
	0x01F083C8 BL 0x1C16F20
	0x01F083CC BL 0x3EB1B20
	0x01F083D0 SUB X31, X31, 0x60
	0x01F083D4 STP X30, X21, [X31 + 0x40]
	0x01F083D8 STP X20, X19, [X31 + 0x50]
	0x01F083DC MRS X20, 0xC000
	0x01F083E0 LDR X8, [X20 + 0x28]
	0x01F083E4 ADRP X21, 0x24D1000
	0x01F083E8 ADRP X19, 0x21F5000
	0x01F083EC STR X8, [X31 + 0x38]
	0x01F083F0 LDRB W8, [X21 + 0x680]
	0x01F083F4 LDR X19, [X19 + 0x78]
	0x01F083F8 TBNZ X8, 0x0, 0x1F0841C
	0x01F083FC ADRP X0, 0x21F5000
	0x01F08400 LDR X0, [X0 + 0x78]
	0x01F08404 BL 0x1C16CF4
	0x01F08408 ADRP X0, 0x21F5000
	0x01F0840C LDR X0, [X0 + 0x2D0]
	0x01F08410 BL 0x1C16CF4
	0x01F08414 MOVZ W8, 0x1
	0x01F08418 STRB W8, [X21 + 0x680]
	0x01F0841C LDR X0, [X19]
	0x01F08420 ADRP X21, 0x21F5000
	0x01F08424 LDR W8, [X0 + 0xE0]
	0x01F08428 LDR X21, [X21 + 0x2D0]
	0x01F0842C CBNZ W8, 0x1F08438
	0x01F08430 BL 0x1C16DFC
	0x01F08434 LDR X0, [X19]
	0x01F08438 LDR X8, [X0 + 0xB8]
	0x01F0843C LDR X0, [X21]
	0x01F08440 LDR X9, [X8 + 0x10]
	0x01F08444 LDR V0, [X8]
	0x01F08448 STR X9, [X31 + 0x30]
	0x01F0844C STR V0, [X31 + 0x2]
	0x01F08450 LDR X9, [X8 + 0x10]
	0x01F08454 LDR V0, [X8]
	0x01F08458 STR X9, [X31 + 0x10]
	0x01F0845C STR V0, [X31]
	0x01F08460 BL 0x1C16F10
	0x01F08464 MOV X1, X31
	0x01F08468 MOV X19, X0
	0x01F0846C BL 0x33BDD8C
	0x01F08470 LDR X8, [X31 + 0x30]
	0x01F08474 LDR V0, [X31 + 0x2]
	0x01F08478 STR X8, [X19 + 0x28]
	0x01F0847C STUR V0, [X19 + 0x18]
	0x01F08480 LDR X8, [X31 + 0x10]
	0x01F08484 LDR V0, [X31]
	0x01F08488 STR X8, [X19 + 0x40]
	0x01F0848C STR V0, [X19 + 0x3]
	0x01F08490 LDR X8, [X21]
	0x01F08494 LDR X8, [X8 + 0xB8]
	0x01F08498 STR X19, [X8]
	0x01F0849C LDR X8, [X20 + 0x28]
	0x01F084A0 LDR X9, [X31 + 0x38]
	0x01F084A4 CMP X8, X9
	0x01F084A8 B.NE 0x1F084BC
	0x01F084AC LDP X20, X19, [X31 + 0x50]
	0x01F084B0 LDP X30, X21, [X31 + 0x40]
	0x01F084B4 ADD X31, X31, 0x60
	0x01F084B8 RET
	0x01F084BC BL 0x3EB1B20
	0x01F084C0 STR X30, [X31 - 0x20]!
	0x01F084C4 STP X20, X19, [X31 + 0x10]
	0x01F084C8 ADRP X19, 0x24D1000
	0x01F084CC ADRP X20, 0x21EB000
	0x01F084D0 LDRB W8, [X19 + 0x681]
	0x01F084D4 LDR X20, [X20 + 0xAC8]
	0x01F084D8 TBNZ X8, 0x0, 0x1F0852C
	0x01F084DC ADRP X0, 0x21EB000
	0x01F084E0 LDR X0, [X0 + 0xAC8]
	0x01F084E4 BL 0x1C16CF4
	0x01F084E8 ADRP X0, 0x21F8000
	0x01F084EC LDR X0, [X0 + 0xBF0]
	0x01F084F0 BL 0x1C16CF4
	0x01F084F4 ADRP X0, 0x21F8000
	0x01F084F8 LDR X0, [X0 + 0xCE8]
	0x01F084FC BL 0x1C16CF4
	0x01F08500 ADRP X0, 0x21F8000
	0x01F08504 LDR X0, [X0 + 0xCF0]
	0x01F08508 BL 0x1C16CF4
	0x01F0850C ADRP X0, 0x21F8000
	0x01F08510 LDR X0, [X0 + 0xCF8]
	0x01F08514 BL 0x1C16CF4
	0x01F08518 ADRP X0, 0x21F8000
	0x01F0851C LDR X0, [X0 + 0xD00]
	0x01F08520 BL 0x1C16CF4
	0x01F08524 MOVZ W8, 0x1
	0x01F08528 STRB W8, [X19 + 0x681]
	0x01F0852C LDR X0, [X20]
	0x01F08530 MOVZ W1, 0x4
	0x01F08534 BL 0x1C16D6C
	0x01F08538 CBZ X0, 0x1F085C0
	0x01F0853C LDR W8, [X0 + 0x18]
	0x01F08540 CBZ W8, 0x1F085BC
	0x01F08544 ADRP X9, 0x21F8000
	0x01F08548 LDR X9, [X9 + 0xCF0]
	0x01F0854C CMP W8, 0x1
	0x01F08550 LDR X9, [X9]
	0x01F08554 STR X9, [X0 + 0x20]
	0x01F08558 B.EQ 0x1F085BC
	0x01F0855C ADRP X9, 0x21F8000
	0x01F08560 LDR X9, [X9 + 0xD00]
	0x01F08564 CMP W8, 0x2
	0x01F08568 LDR X9, [X9]
	0x01F0856C STR X9, [X0 + 0x28]
	0x01F08570 B.LS 0x1F085BC
	0x01F08574 ADRP X9, 0x21F8000
	0x01F08578 LDR X9, [X9 + 0xCF8]
	0x01F0857C CMP W8, 0x3
	0x01F08580 LDR X9, [X9]
	0x01F08584 STR X9, [X0 + 0x30]
	0x01F08588 B.EQ 0x1F085BC
	0x01F0858C ADRP X8, 0x21F8000
	0x01F08590 LDR X8, [X8 + 0xCE8]
	0x01F08594 ADRP X9, 0x21F8000
	0x01F08598 LDR X8, [X8]
	0x01F0859C LDR X9, [X9 + 0xBF0]
	0x01F085A0 LDP X20, X19, [X31 + 0x10]
	0x01F085A4 STR X8, [X0 + 0x38]
	0x01F085A8 LDR X8, [X9]
	0x01F085AC LDR X8, [X8 + 0xB8]
	0x01F085B0 STR X0, [X8]
	0x01F085B4 LDR X30, [X31], #0x20
	0x01F085B8 RET
	0x01F085BC BL 0x1C16F28
	0x01F085C0 BL 0x1C16F20
	0x01F085C4 STP X30, X21, [X31 - 0x20]!
	0x01F085C8 STP X20, X19, [X31 + 0x10]
	0x01F085CC ADRP X20, 0x24D1000
	0x01F085D0 ADRP X21, 0x21F5000
	0x01F085D4 LDRB W8, [X20 + 0x685]
	0x01F085D8 LDR X21, [X21 + 0x78]
	0x01F085DC MOV X19, X0
	0x01F085E0 TBNZ X8, 0x0, 0x1F085F8
	0x01F085E4 ADRP X0, 0x21F5000
	0x01F085E8 LDR X0, [X0 + 0x78]
	0x01F085EC BL 0x1C16CF4
	0x01F085F0 MOVZ W8, 0x1
	0x01F085F4 STRB W8, [X20 + 0x685]
	0x01F085F8 LDR X0, [X21]
	0x01F085FC LDR W8, [X0 + 0xE0]
	0x01F08600 CBNZ W8, 0x1F08608
	0x01F08604 BL 0x1C16DFC
	0x01F08608 ADD X0, X19, 0x10
	0x01F0860C LDP X20, X19, [X31 + 0x10]
	0x01F08610 MOV X1, X31
	0x01F08614 LDP X30, X21, [X31], #0x20
	0x01F08618 B 0x1EF72B4
	0x01F0861C STP X30, X21, [X31 - 0x20]!
	0x01F08620 STP X20, X19, [X31 + 0x10]
	0x01F08624 ADRP X20, 0x24D1000
	0x01F08628 ADRP X21, 0x21F5000
	0x01F0862C LDRB W8, [X20 + 0x686]
	0x01F08630 LDR X21, [X21 + 0x78]
	0x01F08634 MOV X19, X0
	0x01F08638 TBNZ X8, 0x0, 0x1F08650
	0x01F0863C ADRP X0, 0x21F5000
	0x01F08640 LDR X0, [X0 + 0x78]
	0x01F08644 BL 0x1C16CF4
	0x01F08648 MOVZ W8, 0x1
	0x01F0864C STRB W8, [X20 + 0x686]
	0x01F08650 LDR X0, [X21]
	0x01F08654 LDR W8, [X0 + 0xE0]
	0x01F08658 CBNZ W8, 0x1F08660
	0x01F0865C BL 0x1C16DFC
	0x01F08660 ADD X0, X19, 0x28
	0x01F08664 LDP X20, X19, [X31 + 0x10]
	0x01F08668 MOV X1, X31
	0x01F0866C LDP X30, X21, [X31], #0x20
	0x01F08670 B 0x1EF72B4
	0x01F08674 SUB X31, X31, 0x70
	0x01F08678 STR X30, [X31 + 0x40]
	0x01F0867C STP X22, X21, [X31 + 0x50]
	0x01F08680 STP X20, X19, [X31 + 0x60]
	0x01F08684 ADRP X21, 0x24D1000
	0x01F08688 ADRP X20, 0x21F8000
	0x01F0868C LDRB W8, [X21 + 0x684]
	0x01F08690 LDR X20, [X20 + 0xD08]
	0x01F08694 MOV X19, X0
	0x01F08698 TBNZ X8, 0x0, 0x1F086D4
	0x01F0869C ADRP X0, 0x21F8000
	0x01F086A0 LDR X0, [X0 + 0xD10]
	0x01F086A4 BL 0x1C16CF4
	0x01F086A8 ADRP X0, 0x21F8000
	0x01F086AC LDR X0, [X0 + 0xD18]
	0x01F086B0 BL 0x1C16CF4
	0x01F086B4 ADRP X0, 0x21F8000
	0x01F086B8 LDR X0, [X0 + 0xD20]
	0x01F086BC BL 0x1C16CF4
	0x01F086C0 ADRP X0, 0x21F8000
	0x01F086C4 LDR X0, [X0 + 0xD08]
	0x01F086C8 BL 0x1C16CF4
	0x01F086CC MOVZ W8, 0x1
	0x01F086D0 STRB W8, [X21 + 0x684]
	0x01F086D4 LDR X0, [X20]
	0x01F086D8 MOVI V0.2D, 0x0
	0x01F086DC STP V0, V0, [X31 + 0x20]
	0x01F086E0 STP V0, V0, [X31]
	0x01F086E4 ADRP X20, 0x21F8000
	0x01F086E8 ADRP X22, 0x21F8000
	0x01F086EC ADRP X21, 0x21F8000
	0x01F086F0 LDR W8, [X0 + 0xE0]
	0x01F086F4 LDR X20, [X20 + 0xD10]
	0x01F086F8 LDR X22, [X22 + 0xD18]
	0x01F086FC LDR X21, [X21 + 0xD20]
	0x01F08700 CBNZ W8, 0x1F08708
	0x01F08704 BL 0x1C16DFC
	0x01F08708 LDR X0, [X20]
	0x01F0870C ADD X8, X31, 0x0
	0x01F08710 ORR X20, X8, 0xF
	0x01F08714 MOV X8, X20
	0x01F08718 BL 0x263221C
	0x01F0871C LDR X2, [X22]
	0x01F08720 MOVN W8, 0x0
	0x01F08724 ADD X1, X31, 0x0
	0x01F08728 MOV X0, X20
	0x01F0872C STR X19, [X31 + 0x20]
	0x01F08730 STR W8, [X31]
	0x01F08734 BL 0x1FD1714
	0x01F08738 LDR X1, [X21]
	0x01F0873C MOV X0, X20
	0x01F08740 BL 0x2632230
	0x01F08744 LDP X20, X19, [X31 + 0x60]
	0x01F08748 LDP X22, X21, [X31 + 0x50]
	0x01F0874C LDR X30, [X31 + 0x40]
	0x01F08750 ADD X31, X31, 0x70
	0x01F08754 RET
	0x01F08758 SUB X31, X31, 0x80
	0x01F0875C STR X30, [X31 + 0x40]
	0x01F08760 STP X24, X23, [X31 + 0x50]
	0x01F08764 STP X22, X21, [X31 + 0x60]
	0x01F08768 STP X20, X19, [X31 + 0x70]
	0x01F0876C MRS X22, 0xC000
	0x01F08770 LDR X8, [X22 + 0x28]
	0x01F08774 ADRP X20, 0x24D1000
	0x01F08778 ADRP X21, 0x21EB000
	0x01F0877C MOV X19, X0
	0x01F08780 STR X8, [X31 + 0x38]
	0x01F08784 LDRB W8, [X20 + 0x687]
	0x01F08788 LDR X21, [X21 + 0x9D0]
	0x01F0878C TBNZ X8, 0x0, 0x1F087E0
	0x01F08790 ADRP X0, 0x21F5000
	0x01F08794 LDR X0, [X0 + 0x78]
	0x01F08798 BL 0x1C16CF4
	0x01F0879C ADRP X0, 0x21EB000
	0x01F087A0 LDR X0, [X0 + 0x9D0]
	0x01F087A4 BL 0x1C16CF4
	0x01F087A8 ADRP X0, 0x21F8000
	0x01F087AC LDR X0, [X0 + 0xD28]
	0x01F087B0 BL 0x1C16CF4
	0x01F087B4 ADRP X0, 0x21F8000
	0x01F087B8 LDR X0, [X0 + 0xD30]
	0x01F087BC BL 0x1C16CF4
	0x01F087C0 ADRP X0, 0x21F8000
	0x01F087C4 LDR X0, [X0 + 0xD38]
	0x01F087C8 BL 0x1C16CF4
	0x01F087CC ADRP X0, 0x21F7000
	0x01F087D0 LDR X0, [X0 + 0x660]
	0x01F087D4 BL 0x1C16CF4
	0x01F087D8 MOVZ W8, 0x1
	0x01F087DC STRB W8, [X20 + 0x687]
	0x01F087E0 LDR X0, [X21]
	0x01F087E4 MOVZ W1, 0x5
	0x01F087E8 BL 0x1C16D6C
	0x01F087EC CBZ X0, 0x1F08974
	0x01F087F0 ADRP X21, 0x21F8000
	0x01F087F4 LDR X21, [X21 + 0xD30]
	0x01F087F8 MOV X20, X0
	0x01F087FC LDR X0, [X21]
	0x01F08800 CBZ X0, 0x1F08814
	0x01F08804 LDR X8, [X20]
	0x01F08808 LDR X1, [X8 + 0x40]
	0x01F0880C BL 0x1C16E00
	0x01F08810 CBZ X0, 0x1F08968
	0x01F08814 LDR W8, [X20 + 0x18]
	0x01F08818 CBZ W8, 0x1F08964
	0x01F0881C LDR X9, [X21]
	0x01F08820 ADRP X21, 0x21F8000
	0x01F08824 LDR X21, [X21 + 0xD38]
	0x01F08828 STR X9, [X20 + 0x20]
	0x01F0882C LDR X0, [X21]
	0x01F08830 CBZ X0, 0x1F08848
	0x01F08834 LDR X8, [X20]
	0x01F08838 LDR X1, [X8 + 0x40]
	0x01F0883C BL 0x1C16E00
	0x01F08840 CBZ X0, 0x1F08968
	0x01F08844 LDR W8, [X20 + 0x18]
	0x01F08848 CMP W8, 0x1
	0x01F0884C B.LS 0x1F08964
	0x01F08850 LDR X8, [X21]
	0x01F08854 ADRP X23, 0x21F5000
	0x01F08858 LDR X23, [X23 + 0x78]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X22, 0x24D2000
	015 Move W8, [X22+1658]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, 0x21F9000
	024 Move X0, [X0+3224]
	025 Call 0x1C17CF4
	026 Move X0, 0x21F9000
	027 Move X0, [X0+3232]
	028 Call 0x1C17CF4
	029 Move X0, 0x21F9000
	030 Move X0, [X0+3240]
	031 Call 0x1C17CF4
	032 Move X0, 0x21F9000
	033 Move X0, [X0+3248]
	034 Call 0x1C17CF4
	035 Move X0, 0x21F9000
	036 Move X0, [X0+3000]
	037 Call 0x1C17CF4
	038 Move X0, 0x21F9000
	039 Move X0, [X0+3256]
	040 Call 0x1C17CF4
	041 Move X0, 0x21F9000
	042 Move X0, [X0+3264]
	043 Call 0x1C17CF4
	044 Move X0, 0x21EC000
	045 Move X0, [X0+1448]
	046 Call 0x1C17CF4
	047 Move X0, 0x21EE000
	048 Move X0, [X0+632]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+1658], W8
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Move [X31+80], X31
	054 Move [X31+48], V0
	055 Move [X31+56], V0
	056 Move X0, [X21+48]
	057 Compare X0, 0
	058 JumpIfEqual {319}
	059 Move X8, 0x21F9000
	060 Move X8, [X8+3224]
	061 Move X24, 0x21F9000
	062 Move X25, 0x21EC000
	063 Move X24, [X24+3240]
	064 Move X25, [X25+1448]
	065 Move X1, [X8]
	066 Add X8, X31, 8
	067 Call Dictionary`2<Int32Enum, Object>.GetEnumerator, X0
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move X8, [X31+40]
	071 Move W29, 0x851F
	072 Move W28, 9
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 Move [X31+48], V0
	075 Move [X31+56], V1
	076 Move [X31+80], X8
	077 Move W23, 6
	078 Move X1, [X24]
	079 Add X0, X31, 48
	080 Call Enumerator<Int32Enum, Object>.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {275}
	085 Move W8, [X31+64]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X22, [X31+72]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Compare X22, 0
	092 JumpIfEqual {104}
	093 Move X9, 0x21F9000
	094 Move X8, [X22]
	095 Move X9, [X9+3000]
	096 Move W10, [X8+304]
	097 Move X1, [X9]
	098 Move W9, [X1+304]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X8+200]
	101 Add X8, X8, X9
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W1, 1
	105 Move X2, X22
	106 Move X3, X20
	107 Move X4, X19
	108 Call StunMessage.StoreEndPoint, X0, X1, X2, X3, X4
	109 Move X0, X31
	110 Call Encoding.get_ASCII
	111 Compare X0, 0
	112 JumpIfEqual {314}
	113 Compare X22, 0
	114 JumpIfEqual {120}
	115 Move X8, 0x21EE000
	116 Move X8, [X8+632]
	117 Move X1, [X8]
	118 Move X8, [X22]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, [X0]
	121 Move X9, [X8+616]
	122 Move X2, [X8+624]
	123 Move X1, X22
	124 NotImplemented "Instruction BLR not yet implemented."
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add W9, W8, 1
	127 Move [X19], W9
	128 Compare X20, 0
	129 JumpIfEqual {296}
	130 Move W9, [X20+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X8, X20, X8
	133 Move [X8+32], W31
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add W9, W8, 1
	136 Move [X19], W9
	137 Move W9, [X20+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X8, X20, X8
	140 Move [X8+32], W23
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Move X22, X0
	143 Add W9, W8, 1
	144 Move [X19], W9
	145 Compare X0, 0
	146 JumpIfEqual {315}
	147 Move W9, [X20+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X9, [X22+24]
	150 Add X8, X20, X8
	151 Move X9, X9
	152 ShiftRight X9, 8
	153 And X9, X9, 0x7FFFFFFF
	154 Move [X8+32], W9
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add W9, W8, 1
	157 Move [X19], W9
	158 Move W9, [X20+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X9, [X22+24]
	161 Add X8, X20, X8
	162 Move [X8+32], W9
	163 Move W3, [X19]
	164 Move W4, [X22+24]
	165 Move X0, X22
	166 Move W1, W31
	167 Move X2, X20
	168 Move X5, X31
	169 Call Array.Copy, X0, X1, X2, X3, X4
	170 Move X0, X31
	171 Call Encoding.get_ASCII
	172 Move X8, [X21+40]
	173 Compare X8, 0
	174 JumpIfEqual {304}
	175 Compare X0, 0
	176 JumpIfEqual {305}
	177 Move X9, [X0]
	178 Move X1, [X8+24]
	179 Move X8, [X9+616]
	180 Move X2, [X9+624]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Add W9, W8, 1
	184 Move [X19], W9
	185 Compare X20, 0
	186 JumpIfEqual {301}
	187 Move W9, [X20+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add X8, X20, X8
	190 Move [X8+32], W31
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add W9, W8, 1
	193 Move [X19], W9
	194 Move W9, [X20+24]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Add X8, X20, X8
	197 Move [X8+32], W28
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Add W9, W8, 1
	200 Move [X19], W9
	201 Move W9, [X20+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X8, X20, X8
	204 Move [X8+32], W31
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Move X22, X0
	207 Add W9, W8, 1
	208 Move [X19], W9
	209 Compare X0, 0
	210 JumpIfEqual {302}
	211 Move W9, [X20+24]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move W9, [X22+24]
	214 Add X8, X20, X8
	215 Add W9, W9, 4
	216 Move [X8+32], W9
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Add W9, W8, 1
	219 Move [X19], W9
	220 Move W9, [X20+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Add X8, X20, X8
	223 Move [X8+32], W31
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add W9, W8, 1
	226 Move [X19], W9
	227 Move W9, [X20+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Add X8, X20, X8
	230 Move [X8+32], W31
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Add W8, W26, 1
	233 Move [X19], W8
	234 Move X8, [X21+40]
	235 Compare X8, 0
	236 JumpIfEqual {299}
	237 Move X0, [X25]
	238 Move W27, [X8+16]
	239 Move W9, [X0+224]
	240 Compare W9, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move W8, [X20+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 NotImplemented "Instruction SMADDL not yet implemented."
	246 Move X9, X8
	247 ShiftRight X9, 63
	248 And X9, X9, 0x7FFFFFFF
	249 Move X8, X8
	250 ShiftRight X8, 37
	251 And X8, X8, 0x7FFFFFFF
	252 Add W8, W8, W9
	253 Add X9, X20, X26
	254 Move [X9+32], W8
	255 NotImplemented "Instruction LDRSW not yet implemented."
	256 Add W9, W8, 1
	257 Move [X19], W9
	258 Move X9, [X21+40]
	259 Compare X9, 0
	260 JumpIfEqual {307}
	261 Move W10, [X20+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move W9, [X9+16]
	264 Add X8, X20, X8
	265 Move [X8+32], W9
	266 Move W2, [X22+24]
	267 Move X0, X22
	268 Move X1, X20
	269 Move X3, X31
	270 Call Array.Copy, X0, X1, X2
	271 Move W8, [X19]
	272 Move W9, [X22+24]
	273 Add W8, W8, W9
	274 Move [X19], W8
	275 Move X8, 0x21F9000
	276 Move X8, [X8+3232]
	277 Add X0, X31, 48
	278 Move X1, [X8]
	279 Call Enumerator<Int32Enum, Object>.Dispose, X0
	280 Move X20, [X31+176]
	281 Move X19, [X31+184]
	282 Move X22, [X31+160]
	283 Move X21, [X31+168]
	284 Move X24, [X31+144]
	285 Move X23, [X31+152]
	286 Move X26, [X31+128]
	287 Move X25, [X31+136]
	288 Move X28, [X31+112]
	289 Move X27, [X31+120]
	290 Move X29, [X31+96]
	291 Move X30, [X31+104]
	292 Add X31, X31, 192
	293 Return 
	294 Move X0, X22
	295 Call 0x1C181E0
	296 Call 0x1C17F20
	297 Call 0x1C17F28
	298 Call 0x1C17F28
	299 Call 0x1C17F20
	300 Call 0x1C17F28
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Call 0x1C17F28
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Call 0x1C17F28
	307 Call 0x1C17F20
	308 Call 0x1C17F28
	309 Call 0x1C17F28
	310 Call 0x1C17F28
	311 Call 0x1C17F28
	312 Call 0x1C17F28
	313 Call 0x1C17F28
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Call 0x1C17F28
	317 Move X0, X22
	318 Call 0x1C181E0
	319 Call 0x1C17F20
	320 Move X19, X0
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X0, X19
	323 Call 0x3EB2AD0
	324 Move X20, [X0]
	325 Call 0x3EB2AE0
	326 Move X8, 0x21F9000
	327 Move X8, [X8+3232]
	328 Add X0, X31, 48
	329 Move X1, [X8]
	330 Call Enumerator<Int32Enum, Object>.Dispose, X0
	331 Compare X20, 0
	332 JumpIfEqual {280}
	333 Move X0, X20
	334 Call 0x1C17F18
	335 Move X20, X31
	336 Move X19, X0
	337 Move X8, 0x21F9000
	338 Move X8, [X8+3232]
	339 Move X1, [X8]
	340 Add X0, X31, 48
	341 Call Enumerator<Int32Enum, Object>.Dispose, X0
	342 Compare X20, 0
	343 JumpIfNotEqual {346}
	344 Move X0, X19
	345 Call 0x1D2D690
	346 Move X0, X20
	347 Call 0x1C17F18
	348 Call 0x1991590

Method: System.Void ReadAttribute(System.Byte* data, ref System.Int32 offset)

Disassembly:
	0x01F0819C LDR X0, [X0 + 0xCD8]
	0x01F081A0 BL 0x1C16CF4
	0x01F081A4 ADRP X0, 0x21F8000
	0x01F081A8 LDR X0, [X0 + 0xCE0]
	0x01F081AC BL 0x1C16CF4
	0x01F081B0 MOVZ W8, 0x1
	0x01F081B4 STRB W8, [X20 + 0x67F]
	0x01F081B8 LDR X0, [X21]
	0x01F081BC MOVZ W1, 0x7
	0x01F081C0 BL 0x1C16D6C
	0x01F081C4 CBZ X0, 0x1F083C8
	0x01F081C8 ADRP X21, 0x21F8000
	0x01F081CC LDR X21, [X21 + 0xCD0]
	0x01F081D0 MOV X20, X0
	0x01F081D4 LDR X0, [X21]
	0x01F081D8 CBZ X0, 0x1F081EC
	0x01F081DC LDR X8, [X20]
	0x01F081E0 LDR X1, [X8 + 0x40]
	0x01F081E4 BL 0x1C16E00
	0x01F081E8 CBZ X0, 0x1F083BC
	0x01F081EC LDR W8, [X20 + 0x18]
	0x01F081F0 CBZ W8, 0x1F083B8
	0x01F081F4 LDR X9, [X21]
	0x01F081F8 ADRP X21, 0x21F8000
	0x01F081FC LDR X21, [X21 + 0xCE0]
	0x01F08200 STR X9, [X20 + 0x20]
	0x01F08204 LDR X0, [X21]
	0x01F08208 CBZ X0, 0x1F08220
	0x01F0820C LDR X8, [X20]
	0x01F08210 LDR X1, [X8 + 0x40]
	0x01F08214 BL 0x1C16E00
	0x01F08218 CBZ X0, 0x1F083BC
	0x01F0821C LDR W8, [X20 + 0x18]
	0x01F08220 CMP W8, 0x1
	0x01F08224 B.LS 0x1F083B8
	0x01F08228 LDR X8, [X21]
	0x01F0822C ADRP X23, 0x21F5000
	0x01F08230 LDR X23, [X23 + 0x78]
	0x01F08234 ADD X1, X31, 0x30
	0x01F08238 STR X8, [X20 + 0x28]
	0x01F0823C LDR X8, [X19 + 0x28]
	0x01F08240 LDUR V0, [X19 + 0x18]
	0x01F08244 LDR X0, [X23]
	0x01F08248 STR X8, [X31 + 0x40]
	0x01F0824C STR V0, [X31 + 0x3]
	0x01F08250 BL 0x1C16E04
	0x01F08254 MOV X21, X0
	0x01F08258 CBZ X0, 0x1F08270
	0x01F0825C LDR X8, [X20]
	0x01F08260 MOV X0, X21
	0x01F08264 LDR X1, [X8 + 0x40]
	0x01F08268 BL 0x1C16E00
	0x01F0826C CBZ X0, 0x1F083BC
	0x01F08270 LDR W8, [X20 + 0x18]
	0x01F08274 CMP W8, 0x2
	0x01F08278 B.LS 0x1F083B8
	0x01F0827C ADRP X24, 0x21F8000
	0x01F08280 LDR X24, [X24 + 0xCC8]
	0x01F08284 STR X21, [X20 + 0x30]
	0x01F08288 LDR X0, [X24]
	0x01F0828C CBZ X0, 0x1F082A4
	0x01F08290 LDR X8, [X20]
	0x01F08294 LDR X1, [X8 + 0x40]
	0x01F08298 BL 0x1C16E00
	0x01F0829C CBZ X0, 0x1F083BC
	0x01F082A0 LDR W8, [X20 + 0x18]
	0x01F082A4 CMP W8, 0x3
	0x01F082A8 B.LS 0x1F083B8
	0x01F082AC LDR X8, [X24]
	0x01F082B0 ADD X1, X31, 0x10
	0x01F082B4 STR X8, [X20 + 0x38]
	0x01F082B8 LDR X8, [X19 + 0x40]
	0x01F082BC LDR V0, [X19 + 0x3]
	0x01F082C0 LDR X0, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 NotImplemented "Instruction LDRSW not yet implemented."
	008 Move X19, X2
	009 Move X20, X0
	010 Add W8, W9, 1
	011 Add W10, W9, 2
	012 Move [X2], W8
	013 Add W11, W9, 3
	014 Move W12, [X9]
	015 Move [X2], W10
	016 Move W8, [X1]
	017 Move [X2], W11
	018 Add W21, W9, 4
	019 Move W22, [X1]
	020 Move [X2], W21
	021 Move W23, [X1]
	022 NotImplemented "Instruction BFM not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X2, X19
	025 Call StunMessage.ParseEndPoint, X0, X1, X2
	026 Move X1, X0
	027 Move X0, X20
	028 Call StunMessage.set_MappedAddress, X0, X1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract W8, W8, 6
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Move X2, X19
	034 Call StunMessage.ParseXorEndPoint, X0, X1, X2
	035 Move X1, X0
	036 Move X0, X20
	037 Call StunMessage.set_MappedAddress, X0, X1
	038 NotImplemented "Instruction BFM not yet implemented."
	039 Add W8, W23, W21
	040 Move [X19], W8
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 
	048 Move X20, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X20
	051 Call 0x3EB2AD0
	052 Move X20, X0
	053 Move X0, 0x21EC000
	054 Move X0, [X0+2000]
	055 Call 0x1C17D08
	056 Move X8, [X20]
	057 Move X1, [X8]
	058 Call 0x1C18270
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {64}
	063 Call 0x3EB2AE0
	064 Move W0, 8
	065 Call 0x3EB2AF0
	066 Move X8, [X20]
	067 Move [X0], X8
	068 Move X1, 0x1FAD000
	069 Add X1, X1, 3672
	070 Move X2, X31
	071 Call 0x3EB2B00
	072 Move X20, X0
	073 Call 0x3EB2AE0
	074 Move X0, X20
	075 Call 0x1D2D690
	076 Call 0x1991590

Method: System.Net.IPEndPoint ParseEndPoint(System.Byte* data, ref System.Int32 offset)

Disassembly:
	0x01F08E4C BL 0x1C16DFC
	0x01F08E50 ADD X8, X31, 0xB0
	0x01F08E54 MOV X0, X21
	0x01F08E58 MOV W1, W20
	0x01F08E5C MOV X2, X31
	0x01F08E60 BL 0x1EF8988
	0x01F08E64 LDR V0, [X31 + 0xB]
	0x01F08E68 LDR X8, [X31 + 0xC0]
	0x01F08E6C LDR X0, [X31 + 0x18]
	0x01F08E70 STR V0, [X31 + 0xD]
	0x01F08E74 STR X8, [X31 + 0xE0]
	0x01F08E78 CBZ X0, 0x1F092A0
	0x01F08E7C MOV X1, X31
	0x01F08E80 BL 0x366D604
	0x01F08E84 CMP W0, 0x2
	0x01F08E88 B.NE 0x1F09154
	0x01F08E8C LDR X8, [X19 + 0x30]
	0x01F08E90 LDR V0, [X31 + 0xD]
	0x01F08E94 LDR X9, [X31 + 0xE0]
	0x01F08E98 STR V0, [X31 + 0xB]
	0x01F08E9C STR X9, [X31 + 0xC0]
	0x01F08EA0 CBZ X8, 0x1F092A4
	0x01F08EA4 LDR X9, [X31 + 0xC0]
	0x01F08EA8 LDR V0, [X31 + 0xB]
	0x01F08EAC STR X9, [X8 + 0x20]
	0x01F08EB0 STR V0, [X8 + 0x1]
	0x01F08EB4 B 0x1F09154
	0x01F08EB8 LDR X8, [X19 + 0x38]
	0x01F08EBC MOVN W9, 0x0
	0x01F08EC0 STR X8, [X31 + 0x10]
	0x01F08EC4 STR X31, [X19 + 0x38]
	0x01F08EC8 STR W9, [X19]
	0x01F08ECC ADRP X8, 0x21F8000
	0x01F08ED0 LDR X8, [X8 + 0xD68]
	0x01F08ED4 ADD X0, X31, 0x10
	0x01F08ED8 LDR X1, [X8]
	0x01F08EDC BL 0x2677474
	0x01F08EE0 MOV X20, X0
	0x01F08EE4 CBZ X0, 0x1F09280
	0x01F08EE8 LDR X8, [X20 + 0x18]
	0x01F08EEC CMP W8, 0x1
	0x01F08EF0 B.LT 0x1F09154
	0x01F08EF4 ADRP X28, 0x21F8000
	0x01F08EF8 ADRP X29, 0x21F5000
	0x01F08EFC LDR X28, [X28 + 0x968]
	0x01F08F00 LDR X29, [X29 + 0x78]
	0x01F08F04 MOV X26, X31
	0x01F08F08 AND X8, X8, 0x0
	0x01F08F0C ADD X27, X20, 0x20
	0x01F08F10 CMP X26, W8, UXTW
	0x01F08F14 B.CS 0x1F09258
	0x01F08F18 LDR X0, [X28]
	0x01F08F1C LDR X21, [X27, X26, LSL #3]
	0x01F08F20 LDR W8, [X0 + 0xE0]
	0x01F08F24 CBNZ W8, 0x1F08F2C
	0x01F08F28 BL 0x1C16DFC
	0x01F08F2C MOV X0, X21
	0x01F08F30 MOV X1, X31
	0x01F08F34 BL 0x366D778
	0x01F08F38 TBNZ X0, 0x0, 0x1F09144
	0x01F08F3C LDR X22, [X19 + 0x30]
	0x01F08F40 CBZ X22, 0x1F09264
	0x01F08F44 LDR X0, [X29]
	0x01F08F48 STP X31, X31, [X31 + 0xB0]
	0x01F08F4C STR X31, [X31 + 0xC0]
	0x01F08F50 LDR W8, [X0 + 0xE0]
	0x01F08F54 CBNZ W8, 0x1F08F5C
	0x01F08F58 BL 0x1C16DFC
	0x01F08F5C LDR V0, [X31 + 0xB]
	0x01F08F60 LDR X8, [X31 + 0xC0]
	0x01F08F64 ADD X0, X22, 0x10
	0x01F08F68 STR V0, [X31 + 0x9]
	0x01F08F6C STR X8, [X31 + 0xA0]
	0x01F08F70 ADD X1, X31, 0x90
	0x01F08F74 MOV X2, X31
	0x01F08F78 BL 0x1EF8788
	0x01F08F7C TBZ X0, 0x0, 0x1F08FFC
	0x01F08F80 CBZ X21, 0x1F09268
	0x01F08F84 MOV X0, X21
	0x01F08F88 MOV X1, X31
	0x01F08F8C BL 0x366D604
	0x01F08F90 CMP W0, 0x2
	0x01F08F94 B.NE 0x1F08FFC
	0x01F08F98 LDR X8, [X21]
	0x01F08F9C LDR X25, [X19 + 0x30]
	0x01F08FA0 LDP X9, X1, [X8 + 0x168]
	0x01F08FA4 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x24D2000
	008 Move X22, 0x21EC000
	009 Move W8, [X21+1659]
	010 Move X22, [X22+1560]
	011 Move X20, X2
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x21EC000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0x21F9000
	021 Move X0, [X0+2408]
	022 Call 0x1C17CF4
	023 Move X0, 0x21F9000
	024 Move X0, [X0+3000]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1659], W8
	028 Move W8, [X20]
	029 Move W1, 4
	030 Add W10, W8, 3
	031 Add W9, W8, 2
	032 Add W8, W8, 4
	033 Move [X20], W10
	034 Move W23, [X19]
	035 Move [X20], W8
	036 Move X0, [X22]
	037 Move W21, [X19]
	038 Call 0x1C17D6C
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Add W8, W9, 1
	041 Move [X20], W8
	042 Compare X0, 0
	043 JumpIfEqual {95}
	044 Move W8, [X0+24]
	045 Move X22, X0
	046 Compare W8, 0
	047 JumpIfEqual {94}
	048 Move W9, [X9]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X22+32], W9
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add W10, W9, 1
	053 Move [X20], W10
	054 Move W9, [X9]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X22+33], W9
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add W10, W9, 1
	059 Move [X20], W10
	060 Move W9, [X9]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X22+34], W9
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add W10, W9, 1
	065 Move [X20], W10
	066 Move W8, [X9]
	067 Move X9, 0x21F9000
	068 Move X9, [X9+2408]
	069 Move X20, 0x21F9000
	070 Move [X22+35], W8
	071 NotImplemented "Instruction BFM not yet implemented."
	072 Move X0, [X9]
	073 Move X20, [X20+3000]
	074 Call 0x1C17F10
	075 Move X1, X22
	076 Move X2, X31
	077 Move X19, X0
	078 Call IPAddress..ctor, X0, X1
	079 Move X0, [X20]
	080 Call 0x1C17F10
	081 Move X1, X19
	082 Move W2, W21
	083 Move X3, X31
	084 Move X20, X0
	085 Call IPEndPoint..ctor, X0, X1, X2
	086 Move X0, X20
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Move X23, [X31+56]
	093 Return X0
	094 Call 0x1C17F28
	095 Call 0x1C17F20

Method: System.Net.IPEndPoint ParseXorEndPoint(System.Byte* data, ref System.Int32 offset)

Disassembly:
	0x01F08A64 MRS X23, 0xC000
	0x01F08A68 LDR X8, [X23 + 0x28]
	0x01F08A6C ADRP X21, 0x24D1000
	0x01F08A70 MOV X19, X2
	0x01F08A74 MOV X20, X1
	0x01F08A78 STR X8, [X31 + 0x38]
	0x01F08A7C LDRB W8, [X21 + 0x68A]
	0x01F08A80 TBNZ X8, 0x0, 0x1F08AA4
	0x01F08A84 ADRP X0, 0x21F5000
	0x01F08A88 LDR X0, [X0 + 0x78]
	0x01F08A8C BL 0x1C16CF4
	0x01F08A90 ADRP X0, 0x21EB000
	0x01F08A94 LDR X0, [X0 + 0x6C0]
	0x01F08A98 BL 0x1C16CF4
	0x01F08A9C MOVZ W8, 0x1
	0x01F08AA0 STRB W8, [X21 + 0x68A]
	0x01F08AA4 CMP X20, X19
	0x01F08AA8 B.EQ 0x1F08B10
	0x01F08AAC MOV W0, W31
	0x01F08AB0 CBZ X20, 0x1F08B64
	0x01F08AB4 CBZ X19, 0x1F08B64
	0x01F08AB8 MOV X0, X20
	0x01F08ABC MOV X1, X31
	0x01F08AC0 BL 0x33BE520
	0x01F08AC4 MOV X21, X0
	0x01F08AC8 MOV X0, X19
	0x01F08ACC MOV X1, X31
	0x01F08AD0 BL 0x33BE520
	0x01F08AD4 ADRP X8, 0x21EB000
	0x01F08AD8 LDR X8, [X8 + 0x6C0]
	0x01F08ADC MOV X22, X0
	0x01F08AE0 LDR X8, [X8]
	0x01F08AE4 LDR W9, [X8 + 0xE0]
	0x01F08AE8 CBNZ W9, 0x1F08AF4
	0x01F08AEC MOV X0, X8
	0x01F08AF0 BL 0x1C16DFC
	0x01F08AF4 MOV X0, X21
	0x01F08AF8 MOV X1, X22
	0x01F08AFC MOV X2, X31
	0x01F08B00 BL 0x3395F0C
	0x01F08B04 TBZ X0, 0x0, 0x1F08B18
	0x01F08B08 MOV W0, W31
	0x01F08B0C B 0x1F08B64
	0x01F08B10 MOVZ W0, 0x1
	0x01F08B14 B 0x1F08B64
	0x01F08B18 ADRP X9, 0x21F5000
	0x01F08B1C LDR V0, [X19 + 0x1]
	0x01F08B20 LDR X8, [X19 + 0x20]
	0x01F08B24 LDR X9, [X9 + 0x78]
	0x01F08B28 ADD X19, X20, 0x10
	0x01F08B2C STR V0, [X31 + 0x2]
	0x01F08B30 STR X8, [X31 + 0x30]
	0x01F08B34 LDR X0, [X9]
	0x01F08B38 LDR W8, [X0 + 0xE0]
	0x01F08B3C CBNZ W8, 0x1F08B44
	0x01F08B40 BL 0x1C16DFC
	0x01F08B44 LDR V0, [X31 + 0x2]
	0x01F08B48 LDR X8, [X31 + 0x30]
	0x01F08B4C ADD X1, X31, 0x0
	0x01F08B50 MOV X0, X19
	0x01F08B54 MOV X2, X31
	0x01F08B58 STR V0, [X31]
	0x01F08B5C STR X8, [X31 + 0x10]
	0x01F08B60 BL 0x1EF8788
	0x01F08B64 LDR X8, [X23 + 0x28]
	0x01F08B68 LDR X9, [X31 + 0x38]
	0x01F08B6C CMP X8, X9
	0x01F08B70 B.NE 0x1F08B8C
	0x01F08B74 LDP X20, X19, [X31 + 0x60]
	0x01F08B78 LDP X22, X21, [X31 + 0x50]
	0x01F08B7C LDP X30, X23, [X31 + 0x40]
	0x01F08B80 AND W0, W0, 0x1
	0x01F08B84 ADD X31, X31, 0x70
	0x01F08B88 RET
	0x01F08B8C BL 0x3EB1B20
	0x01F08B90 STR X30, [X31 - 0x20]!
	0x01F08B94 STP X20, X19, [X31 + 0x10]
	0x01F08B98 ADRP X20, 0x24D1000
	0x01F08B9C LDRB W8, [X20 + 0x68B]
	0x01F08BA0 MOV X19, X1
	0x01F08BA4 TBNZ X8, 0x0, 0x1F08BBC
	0x01F08BA8 ADRP X0, 0x21F5000
	0x01F08BAC LDR X0, [X0 + 0x78]
	0x01F08BB0 BL 0x1C16CF4
	0x01F08BB4 MOVZ W8, 0x1
	0x01F08BB8 STRB W8, [X20 + 0x68B]
	0x01F08BBC CBZ X19, 0x1F08BEC
	0x01F08BC0 ADRP X8, 0x21F5000
	0x01F08BC4 LDR X8, [X8 + 0x78]
	0x01F08BC8 LDR X0, [X8]
	0x01F08BCC LDR W8, [X0 + 0xE0]
	0x01F08BD0 CBNZ W8, 0x1F08BD8
	0x01F08BD4 BL 0x1C16DFC
	0x01F08BD8 ADD X0, X19, 0x10
	0x01F08BDC LDP X20, X19, [X31 + 0x10]
	0x01F08BE0 MOV X1, X31
	0x01F08BE4 LDR X30, [X31], #0x20
	0x01F08BE8 B 0x1EF8E10
	0x01F08BEC BL 0x1C16F20
	0x01F08BF0 STR X30, [X31 - 0x20]!
	0x01F08BF4 STP X20, X19, [X31 + 0x10]
	0x01F08BF8 ADRP X19, 0x24D1000
	0x01F08BFC ADRP X20, 0x21F8000
	0x01F08C00 LDRB W8, [X19 + 0x68C]
	0x01F08C04 LDR X20, [X20 + 0xD50]
	0x01F08C08 TBNZ X8, 0x0, 0x1F08C20
	0x01F08C0C ADRP X0, 0x21F8000
	0x01F08C10 LDR X0, [X0 + 0xD50]
	0x01F08C14 BL 0x1C16CF4
	0x01F08C18 MOVZ W8, 0x1
	0x01F08C1C STRB W8, [X19 + 0x68C]
	0x01F08C20 LDR X0, [X20]
	0x01F08C24 BL 0x1C16F10
	0x01F08C28 MOV X1, X31
	0x01F08C2C MOV X19, X0
	0x01F08C30 BL 0x33BDD8C
	0x01F08C34 LDR X8, [X20]
	0x01F08C38 LDR X8, [X8 + 0xB8]
	0x01F08C3C STR X19, [X8]
	0x01F08C40 LDP X20, X19, [X31 + 0x10]
	0x01F08C44 LDR X30, [X31], #0x20
	0x01F08C48 RET
	0x01F08C4C MOV X1, X31
	0x01F08C50 B 0x33BDD8C
	0x01F08C54 CBZ X1, 0x1F08C64
	0x01F08C58 MOV X0, X1
	0x01F08C5C MOV X1, X31
	0x01F08C60 B 0x322B8DC
	0x01F08C64 STR X30, [X31 - 0x10]!
	0x01F08C68 BL 0x1C16F20
	0x01F08C6C SUB X31, X31, 0x150
	0x01F08C70 STP X29, X30, [X31 + 0xF0]
	0x01F08C74 STP X28, X27, [X31 + 0x100]
	0x01F08C78 STP X26, X25, [X31 + 0x110]
	0x01F08C7C STP X24, X23, [X31 + 0x120]
	0x01F08C80 STP X22, X21, [X31 + 0x130]
	0x01F08C84 STP X20, X19, [X31 + 0x140]
	0x01F08C88 MRS X24, 0xC000
	0x01F08C8C LDR X8, [X24 + 0x28]
	0x01F08C90 ADRP X20, 0x24D1000
	0x01F08C94 MOV X19, X0
	0x01F08C98 STR X8, [X31 + 0xE8]
	0x01F08C9C LDRB W8, [X20 + 0x68D]
	0x01F08CA0 TBNZ X8, 0x0, 0x1F08D24
	0x01F08CA4 ADRP X0, 0x21F8000
	0x01F08CA8 LDR X0, [X0 + 0xD58]
	0x01F08CAC BL 0x1C16CF4
	0x01F08CB0 ADRP X0, 0x21F8000
	0x01F08CB4 LDR X0, [X0 + 0xD60]
	0x01F08CB8 BL 0x1C16CF4
	0x01F08CBC ADRP X0, 0x21F8000
	0x01F08CC0 LDR X0, [X0 + 0xD08]
	0x01F08CC4 BL 0x1C16CF4
	0x01F08CC8 ADRP X0, 0x21F4000
	0x01F08CCC LDR X0, [X0 + 0x8D8]
	0x01F08CD0 BL 0x1C16CF4
	0x01F08CD4 ADRP X0, 0x21F8000
	0x01F08CD8 LDR X0, [X0 + 0x968]
	0x01F08CDC BL 0x1C16CF4
	0x01F08CE0 ADRP X0, 0x21F5000
	0x01F08CE4 LDR X0, [X0 + 0x78]
	0x01F08CE8 BL 0x1C16CF4
	0x01F08CEC ADRP X0, 0x21F8000
	0x01F08CF0 LDR X0, [X0 + 0xD40]
	0x01F08CF4 BL 0x1C16CF4
	0x01F08CF8 ADRP X0, 0x21F8000
	0x01F08CFC LDR X0, [X0 + 0xD68]
	0x01F08D00 BL 0x1C16CF4
	0x01F08D04 ADRP X0, 0x21F8000
	0x01F08D08 LDR X0, [X0 + 0xD70]
	0x01F08D0C BL 0x1C16CF4
	0x01F08D10 ADRP X0, 0x21F8000
	0x01F08D14 LDR X0, [X0 + 0xD78]
	0x01F08D18 BL 0x1C16CF4
	0x01F08D1C MOVZ W8, 0x1
	0x01F08D20 STRB W8, [X20 + 0x68D]
	0x01F08D24 STP X31, X31, [X31 + 0x10]
	0x01F08D28 STP X31, X31, [X31 + 0xD0]
	0x01F08D2C STR X31, [X31 + 0xE0]
	0x01F08D30 ADRP X23, 0x21F8000
	0x01F08D34 LDR W8, [X19]
	0x01F08D38 LDR X23, [X23 + 0xD08]
	0x01F08D3C CBZ W8, 0x1F08EB8
	0x01F08D40 LDR X0, [X19 + 0x20]
	0x01F08D44 MOV X1, X31
	0x01F08D48 BL 0x32277A8
	0x01F08D4C TBNZ X0, 0x0, 0x1F09174
	0x01F08D50 ADRP X8, 0x21F4000
	0x01F08D54 LDR X20, [X19 + 0x20]
	0x01F08D58 LDR X8, [X8 + 0x8D8]
	0x01F08D5C LDR X0, [X8]
	0x01F08D60 MOVZ W1, 0x1
	0x01F08D64 BL 0x1C16D6C
	0x01F08D68 MOV X1, X0
	0x01F08D6C CBZ X1, 0x1F09284
	0x01F08D70 LDR W8, [X1 + 0x18]
	0x01F08D74 CBZ W8, 0x1F09288
	0x01F08D78 MOVZ W8, 0x3A
	0x01F08D7C STRH W8, [X1 + 0x20]
	0x01F08D80 CBZ X20, 0x1F0928C
	0x01F08D84 MOV X0, X20
	0x01F08D88 MOV X2, X31
	0x01F08D8C BL 0x3229E68
	0x01F08D90 MOV X21, X0
	0x01F08D94 CBZ X0, 0x1F09290
	0x01F08D98 LDR W8, [X21 + 0x18]
	0x01F08D9C CMP W8, 0x2
	0x01F08DA0 B.NE 0x1F09174
	0x01F08DA4 LDR X0, [X21 + 0x28]
	0x01F08DA8 ADD X20, X19, 0x28
	0x01F08DAC MOV X1, X20
	0x01F08DB0 MOV X2, X31
	0x01F08DB4 BL 0x33992BC
	0x01F08DB8 TBZ X0, 0x0, 0x1F09174
	0x01F08DBC LDRH W8, [X20]
	0x01F08DC0 CBZ W8, 0x1F09174
	0x01F08DC4 LDR W8, [X21 + 0x18]
	0x01F08DC8 CBZ W8, 0x1F09294
	0x01F08DCC ADRP X8, 0x21F8000
	0x01F08DD0 LDR X21, [X21 + 0x20]
	0x01F08DD4 LDR X8, [X8 + 0xD40]
	0x01F08DD8 LDR X0, [X8]
	0x01F08DDC BL 0x1C16F10
	0x01F08DE0 MOV X22, X0
	0x01F08DE4 MOV X1, X31
	0x01F08DE8 BL 0x33BDD8C
	0x01F08DEC STR X22, [X19 + 0x30]
	0x01F08DF0 ADRP X8, 0x21F8000
	0x01F08DF4 LDR X8, [X8 + 0x968]
	0x01F08DF8 LDR X0, [X8]
	0x01F08DFC LDR W8, [X0 + 0xE0]
	0x01F08E00 CBNZ W8, 0x1F08E08
	0x01F08E04 BL 0x1C16DFC
	0x01F08E08 ADD X1, X31, 0x18
	0x01F08E0C MOV X0, X21
	0x01F08E10 MOV X2, X31
	0x01F08E14 BL 0x366D010
	0x01F08E18 TBZ X0, 0x0, 0x1F091E0
	0x01F08E1C LDR X0, [X31 + 0x18]
	0x01F08E20 CBZ X0, 0x1F09298
	0x01F08E24 LDR X8, [X0]
	0x01F08E28 LDP X9, X1, [X8 + 0x168]
	0x01F08E2C BLR X9
	0x01F08E30 ADRP X8, 0x21F5000
	0x01F08E34 LDR X8, [X8 + 0x78]
	0x01F08E38 MOV X21, X0
	0x01F08E3C LDRH W20, [X20]
	0x01F08E40 LDR X0, [X8]
	0x01F08E44 LDR W8, [X0 + 0xE0]
	0x01F08E48 CBNZ W8, 0x1F08E50

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x24D2000
	015 Move W8, [X19+1660]
	016 Move X21, X2
	017 Move X20, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x21EC000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0x21F9000
	027 Move X0, [X0+2408]
	028 Call 0x1C17CF4
	029 Move X0, 0x21F9000
	030 Move X0, [X0+3000]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+1660], W8
	034 Move W8, [X21]
	035 Move W13, 0x2112
	036 Add W11, W8, 2
	037 Add W10, W8, 1
	038 Add W12, W8, 3
	039 Move [X21], W11
	040 Add W9, W8, 4
	041 Move W10, [X20]
	042 Move [X21], W12
	043 Move W11, [X20]
	044 Move [X21], W9
	045 Move W12, [X20]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction BFM not yet implemented."
	048 Xor W19, W12, W13
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, 0x21EC000
	051 Move X8, [X8+1560]
	052 Move W1, 4
	053 Move X0, [X8]
	054 Call 0x1C17D6C
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add W8, W9, 1
	057 Move [X21], W8
	058 Compare X0, 0
	059 JumpIfEqual {266}
	060 Move W8, [X0+24]
	061 Move X22, X0
	062 Compare W8, 0
	063 JumpIfEqual {265}
	064 Move W9, [X9]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X22+32], W9
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add W10, W9, 1
	069 Move [X21], W10
	070 Move W9, [X9]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X22+33], W9
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Add W10, W9, 1
	075 Move [X21], W10
	076 Move W9, [X9]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X22+34], W9
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add W10, W9, 1
	081 Move [X21], W10
	082 Move W8, [X9]
	083 Move X0, X22
	084 Move X1, X31
	085 Move [X22+35], W8
	086 Call Array.Reverse, X0
	087 Move X0, X22
	088 Move W1, W31
	089 Move X2, X31
	090 Call BitConverter.ToUInt32, X0, X1
	091 Move W8, 0xA442
	092 NotImplemented "Instruction MOVK not yet implemented."
	093 Xor W0, W0, W8
	094 Move X1, X31
	095 Call BitConverter.GetBytes, X0
	096 Move X1, X31
	097 Move X20, X0
	098 Call Array.Reverse, X0
	099 Move X0, X20
	100 Move W1, W31
	101 Move X2, X31
	102 Call BitConverter.ToUInt32, X0, X1
	103 Move X8, 0x21F9000
	104 Move X8, [X8+3000]
	105 Move W20, W0
	106 Move X8, [X8]
	107 Move X0, X8
	108 Call 0x1C17F10
	109 Move W1, W20
	110 Move W2, W19
	111 Move X3, X31
	112 Move X21, X0
	113 Call IPEndPoint..ctor, X0, X1, X2
	114 Move X0, X21
	115 Add W10, W8, 5
	116 Add W11, W8, 6
	117 Move [X21], W10
	118 Add W12, W8, 7
	119 Move W23, [X20]
	120 Move [X21], W11
	121 Add W13, W8, 8
	122 Move W24, [X20]
	123 Move [X21], W12
	124 Add W14, W8, 9
	125 Move W25, [X20]
	126 Move [X21], W13
	127 Add W15, W8, 10
	128 Move W26, [X20]
	129 Move [X21], W14
	130 Add W16, W8, 11
	131 Move W27, [X20]
	132 Move [X21], W15
	133 Add W17, W8, 12
	134 Move W28, [X20]
	135 Move [X21], W16
	136 Add W0, W8, 13
	137 Move W29, [X20]
	138 Move [X21], W17
	139 Move [X31+12], W19
	140 Add W1, W8, 14
	141 Move W19, [X20]
	142 Move [X21], W0
	143 Add W2, W8, 15
	144 Move W9, [X20]
	145 Move [X21], W1
	146 Add W3, W8, 16
	147 Move W10, [X20]
	148 Move [X21], W2
	149 Add W4, W8, 17
	150 Move W11, [X20]
	151 Move [X21], W3
	152 Add W5, W8, 18
	153 Move W12, [X20]
	154 Move [X21], W4
	155 Add W6, W8, 19
	156 Move W13, [X20]
	157 Move [X21], W5
	158 Move X9, X9
	159 ShiftRight X9, 8
	160 And X9, X9, 127
	161 Add W8, W8, 20
	162 Move W14, [X20]
	163 Move [X21], W6
	164 NotImplemented "Instruction BFM not yet implemented."
	165 Move W10, [X20]
	166 Move [X21], W8
	167 NotImplemented "Instruction BFM not yet implemented."
	168 Move W8, [X20]
	169 NotImplemented "Instruction BFM not yet implemented."
	170 Move X0, [X22+24]
	171 NotImplemented "Instruction BFM not yet implemented."
	172 NotImplemented "Instruction BFM not yet implemented."
	173 NotImplemented "Instruction BFM not yet implemented."
	174 Move W1, W31
	175 Move X2, X31
	176 Or X21, X9, X8
	177 Call BitConverter.ToUInt32, X0, X1
	178 Move X8, [X22+24]
	179 Move W20, W0
	180 Move W1, 4
	181 Move X2, X31
	182 Move X0, X8
	183 Call BitConverter.ToUInt64, X0, X1
	184 Move X9, X23
	185 ShiftRight X9, 8
	186 And X9, X9, 127
	187 NotImplemented "Instruction BFM not yet implemented."
	188 NotImplemented "Instruction BFM not yet implemented."
	189 NotImplemented "Instruction BFM not yet implemented."
	190 NotImplemented "Instruction BFM not yet implemented."
	191 Move W8, 0x1221
	192 NotImplemented "Instruction BFM not yet implemented."
	193 NotImplemented "Instruction MOVK not yet implemented."
	194 NotImplemented "Instruction BFM not yet implemented."
	195 NotImplemented "Instruction BFM not yet implemented."
	196 Or X9, X9, X19
	197 Xor X21, X0, X21
	198 Xor X0, X8, X9
	199 Move X1, X31
	200 Call BitConverter.GetBytes, X0
	201 Move X22, X0
	202 Move X0, X21
	203 Move X1, X31
	204 Call BitConverter.GetBytes, X0
	205 Move X8, 0x21EC000
	206 Move X8, [X8+1560]
	207 Move X21, X0
	208 Move W1, 16
	209 Move X8, [X8]
	210 Move X0, X8
	211 Call 0x1C17D6C
	212 Compare X22, 0
	213 JumpIfEqual {266}
	214 Move W4, [X22+24]
	215 Move X20, X0
	216 Move X0, X22
	217 Move W1, W31
	218 Move X2, X20
	219 Move W3, W31
	220 Move X5, X31
	221 Call Array.Copy, X0, X1, X2, X3, X4
	222 Move W19, [X31+12]
	223 Compare X21, 0
	224 JumpIfEqual {266}
	225 Move W4, [X21+24]
	226 Move W3, 8
	227 Move X0, X21
	228 Move W1, W31
	229 Move X2, X20
	230 Move X5, X31
	231 Call Array.Copy, X0, X1, X2, X3, X4
	232 Move X8, 0x21F9000
	233 Move X8, [X8+2408]
	234 Move X0, [X8]
	235 Call 0x1C17F10
	236 Move X1, X20
	237 Move X2, X31
	238 Move X21, X0
	239 Call IPAddress..ctor, X0, X1
	240 Move X8, 0x21F9000
	241 Move X8, [X8+3000]
	242 Move X0, [X8]
	243 Call 0x1C17F10
	244 Move X1, X21
	245 Move W2, W19
	246 Move X3, X31
	247 Move X20, X0
	248 Call IPEndPoint..ctor, X0, X1, X2
	249 Move X0, X20
	250 Move X0, X31
	251 Move X20, [X31+96]
	252 Move X19, [X31+104]
	253 Move X22, [X31+80]
	254 Move X21, [X31+88]
	255 Move X24, [X31+64]
	256 Move X23, [X31+72]
	257 Move X26, [X31+48]
	258 Move X25, [X31+56]
	259 Move X28, [X31+32]
	260 Move X27, [X31+40]
	261 Move X29, [X31+16]
	262 Move X30, [X31+24]
	263 Add X31, X31, 112
	264 Return X0
	265 Call 0x1C17F28
	266 Call 0x1C17F20

Method: System.Void StoreEndPoint(Fusion.Sockets.Stun.StunMessage/AttributeType type, System.Net.IPEndPoint endPoint, System.Byte[] message, ref System.Int32 offset)

Disassembly:
	0x01F0885C ADD X1, X31, 0x20
	0x01F08860 STR X8, [X20 + 0x28]
	0x01F08864 LDR X8, [X19 + 0x20]
	0x01F08868 LDR V0, [X19 + 0x1]
	0x01F0886C LDR X0, [X23]
	0x01F08870 STR X8, [X31 + 0x30]
	0x01F08874 STR V0, [X31 + 0x2]
	0x01F08878 BL 0x1C16E04
	0x01F0887C MOV X21, X0
	0x01F08880 CBZ X0, 0x1F08898
	0x01F08884 LDR X8, [X20]
	0x01F08888 MOV X0, X21
	0x01F0888C LDR X1, [X8 + 0x40]
	0x01F08890 BL 0x1C16E00
	0x01F08894 CBZ X0, 0x1F08968
	0x01F08898 LDR W8, [X20 + 0x18]
	0x01F0889C CMP W8, 0x2
	0x01F088A0 B.LS 0x1F08964
	0x01F088A4 ADRP X24, 0x21F8000
	0x01F088A8 LDR X24, [X24 + 0xD28]
	0x01F088AC STR X21, [X20 + 0x30]
	0x01F088B0 LDR X0, [X24]
	0x01F088B4 CBZ X0, 0x1F088CC
	0x01F088B8 LDR X8, [X20]
	0x01F088BC LDR X1, [X8 + 0x40]
	0x01F088C0 BL 0x1C16E00
	0x01F088C4 CBZ X0, 0x1F08968
	0x01F088C8 LDR W8, [X20 + 0x18]
	0x01F088CC CMP W8, 0x3
	0x01F088D0 B.LS 0x1F08964
	0x01F088D4 LDR X8, [X24]
	0x01F088D8 ADD X1, X31, 0x0
	0x01F088DC STR X8, [X20 + 0x38]
	0x01F088E0 LDR X8, [X19 + 0x38]
	0x01F088E4 LDUR V0, [X19 + 0x28]
	0x01F088E8 LDR X0, [X23]
	0x01F088EC STR X8, [X31 + 0x10]
	0x01F088F0 STR V0, [X31]
	0x01F088F4 BL 0x1C16E04
	0x01F088F8 MOV X19, X0
	0x01F088FC CBZ X0, 0x1F08914
	0x01F08900 LDR X8, [X20]
	0x01F08904 MOV X0, X19
	0x01F08908 LDR X1, [X8 + 0x40]
	0x01F0890C BL 0x1C16E00
	0x01F08910 CBZ X0, 0x1F08968
	0x01F08914 LDR W8, [X20 + 0x18]
	0x01F08918 CMP W8, 0x4
	0x01F0891C B.LS 0x1F08964
	0x01F08920 ADRP X8, 0x21F7000
	0x01F08924 LDR X8, [X8 + 0x660]
	0x01F08928 STR X19, [X20 + 0x40]
	0x01F0892C MOV X1, X20
	0x01F08930 MOV X2, X31
	0x01F08934 LDR X0, [X8]
	0x01F08938 BL 0x3227C5C
	0x01F0893C LDR X8, [X22 + 0x28]
	0x01F08940 LDR X9, [X31 + 0x38]
	0x01F08944 CMP X8, X9
	0x01F08948 B.NE 0x1F08978
	0x01F0894C LDP X20, X19, [X31 + 0x70]
	0x01F08950 LDP X22, X21, [X31 + 0x60]
	0x01F08954 LDP X24, X23, [X31 + 0x50]
	0x01F08958 LDR X30, [X31 + 0x40]
	0x01F0895C ADD X31, X31, 0x80
	0x01F08960 RET
	0x01F08964 BL 0x1C16F28
	0x01F08968 BL 0x1C16F44
	0x01F0896C MOV X1, X31
	0x01F08970 BL 0x1C16DEC
	0x01F08974 BL 0x1C16F20
	0x01F08978 BL 0x3EB1B20
	0x01F0897C STR X30, [X31 - 0x20]!
	0x01F08980 STP X20, X19, [X31 + 0x10]
	0x01F08984 ADRP X20, 0x24D1000
	0x01F08988 ADRP X19, 0x21F8000
	0x01F0898C LDRB W8, [X20 + 0x688]
	0x01F08990 LDR X19, [X19 + 0xD40]
	0x01F08994 TBNZ X8, 0x0, 0x1F089AC
	0x01F08998 ADRP X0, 0x21F8000
	0x01F0899C LDR X0, [X0 + 0xD40]
	0x01F089A0 BL 0x1C16CF4
	0x01F089A4 MOVZ W8, 0x1
	0x01F089A8 STRB W8, [X20 + 0x688]
	0x01F089AC LDR X0, [X19]
	0x01F089B0 LDR W8, [X0 + 0xE0]
	0x01F089B4 CBNZ W8, 0x1F089C0
	0x01F089B8 BL 0x1C16DFC
	0x01F089BC LDR X0, [X19]
	0x01F089C0 LDR X8, [X0 + 0xB8]
	0x01F089C4 LDP X20, X19, [X31 + 0x10]
	0x01F089C8 LDR X0, [X8]
	0x01F089CC LDR X30, [X31], #0x20
	0x01F089D0 RET
	0x01F089D4 MOV X1, X31
	0x01F089D8 B 0x33BDD8C
	0x01F089DC STP X30, X21, [X31 - 0x20]!
	0x01F089E0 STP X20, X19, [X31 + 0x10]
	0x01F089E4 ADRP X19, 0x24D1000
	0x01F089E8 ADRP X21, 0x21F8000
	0x01F089EC ADRP X20, 0x21F8000
	0x01F089F0 LDRB W8, [X19 + 0x689]
	0x01F089F4 LDR X21, [X21 + 0xD48]
	0x01F089F8 LDR X20, [X20 + 0xD40]
	0x01F089FC TBNZ X8, 0x0, 0x1F08A20
	0x01F08A00 ADRP X0, 0x21F8000
	0x01F08A04 LDR X0, [X0 + 0xD48]
	0x01F08A08 BL 0x1C16CF4
	0x01F08A0C ADRP X0, 0x21F8000
	0x01F08A10 LDR X0, [X0 + 0xD40]
	0x01F08A14 BL 0x1C16CF4
	0x01F08A18 MOVZ W8, 0x1
	0x01F08A1C STRB W8, [X19 + 0x689]
	0x01F08A20 LDR X0, [X21]
	0x01F08A24 BL 0x1C16F10
	0x01F08A28 MOV X1, X31
	0x01F08A2C MOV X19, X0
	0x01F08A30 BL 0x33BDD8C
	0x01F08A34 LDR X8, [X20]
	0x01F08A38 LDR X8, [X8 + 0xB8]
	0x01F08A3C STR X19, [X8]
	0x01F08A40 LDP X20, X19, [X31 + 0x10]
	0x01F08A44 LDP X30, X21, [X31], #0x20
	0x01F08A48 RET
	0x01F08A4C MOV X1, X31
	0x01F08A50 B 0x33BDD8C
	0x01F08A54 SUB X31, X31, 0x70
	0x01F08A58 STP X30, X23, [X31 + 0x40]
	0x01F08A5C STP X22, X21, [X31 + 0x50]
	0x01F08A60 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction LDRSW not yet implemented."
	005 Add W9, W8, 1
	006 Move [X4], W9
	007 Compare X3, 0
	008 JumpIfEqual {132}
	009 Move W9, [X3+24]
	010 Move X19, X3
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W9, W1
	013 ShiftRight W9, 8
	014 And W9, W9, 0x7FFFFFFF
	015 Add X8, X19, X8
	016 Move [X8+32], W9
	017 NotImplemented "Instruction LDRSW not yet implemented."
	018 Move X20, X4
	019 Add W9, W8, 1
	020 Move [X4], W9
	021 Move W9, [X19+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add X8, X19, X8
	024 Move [X8+32], W1
	025 NotImplemented "Instruction LDRSW not yet implemented."
	026 Add W9, W8, 1
	027 Move [X20], W9
	028 Move W9, [X19+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X8, X19, X8
	031 Move [X8+32], W31
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Add W9, W8, 1
	034 Move [X20], W9
	035 Move W9, [X19+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X19, X8
	038 Move W9, 8
	039 Move [X8+32], W9
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 Add W9, W8, 1
	042 Move [X20], W9
	043 Move W9, [X19+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X19, X8
	046 Move [X8+32], W31
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add W9, W8, 1
	049 Move [X20], W9
	050 Move W9, [X19+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X8, X19, X8
	053 Move W9, 1
	054 Move [X8+32], W9
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add W9, W8, 1
	057 Move [X20], W9
	058 Compare X2, 0
	059 JumpIfEqual {132}
	060 Move W9, [X19+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W9, [X2+24]
	063 Add X8, X19, X8
	064 Move W9, W9
	065 ShiftRight W9, 8
	066 And W9, W9, 0x7FFFFFFF
	067 Move [X8+32], W9
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add W9, W8, 1
	070 Move [X20], W9
	071 Move W9, [X19+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W9, [X2+24]
	074 Add X8, X19, X8
	075 Move [X8+32], W9
	076 Move X0, [X2+16]
	077 Compare X0, 0
	078 JumpIfEqual {132}
	079 Move X1, X31
	080 Call IPAddress.GetAddressBytes, X0
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add W9, W8, 1
	083 Move [X20], W9
	084 Compare X0, 0
	085 JumpIfEqual {132}
	086 Move W9, [X0+24]
	087 Compare W9, 0
	088 JumpIfEqual {131}
	089 Move W9, [X19+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W9, [X0+32]
	092 Add X8, X19, X8
	093 Move [X8+32], W9
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add W9, W8, 1
	096 Move [X20], W9
	097 Move W9, [X0+24]
	098 Compare W9, 0
	099 JumpIfEqual {131}
	100 Move W9, [X19+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W9, [X0+32]
	103 Add X8, X19, X8
	104 Move [X8+32], W9
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Add W9, W8, 1
	107 Move [X20], W9
	108 Move W9, [X0+24]
	109 Compare W9, 0
	110 JumpIfEqual {131}
	111 Move W9, [X19+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W9, [X0+32]
	114 Add X8, X19, X8
	115 Move [X8+32], W9
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add W9, W8, 1
	118 Move [X20], W9
	119 Move W9, [X0+24]
	120 Compare W9, 0
	121 JumpIfEqual {131}
	122 Move W9, [X19+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W9, [X0+32]
	125 Add X8, X19, X8
	126 Move X20, [X31+16]
	127 Move X19, [X31+24]
	128 Move [X8+32], W9
	129 Move X30, [X31+32]
	130 Return 
	131 Call 0x1C17F28
	132 Call 0x1C17F20

