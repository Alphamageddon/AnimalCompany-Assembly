Type: Fusion.Sockets.Stun.StunServers/StunServer

Method: System.Boolean get_HasIPv4Support()

Disassembly:
	0x01F095C4 ADRP X0, 0x21F7000
	0x01F095C8 LDR X0, [X0 + 0xDC8]
	0x01F095CC BL 0x1C16CF4
	0x01F095D0 ADRP X0, 0x21F7000
	0x01F095D4 LDR X0, [X0 + 0xD40]
	0x01F095D8 BL 0x1C16CF4
	0x01F095DC ADRP X0, 0x21F7000
	0x01F095E0 LDR X0, [X0 + 0xBF0]
	0x01F095E4 BL 0x1C16CF4
	0x01F095E8 ADRP X0, 0x21F7000
	0x01F095EC LDR X0, [X0 + 0xDD0]
	0x01F095F0 BL 0x1C16CF4
	0x01F095F4 ADRP X0, 0x21F7000
	0x01F095F8 LDR X0, [X0 + 0xDD8]
	0x01F095FC BL 0x1C16CF4
	0x01F09600 ADRP X0, 0x21F2000
	0x01F09604 LDR X0, [X0 + 0x7D0]
	0x01F09608 BL 0x1C16CF4
	0x01F0960C ADRP X0, 0x21F7000
	0x01F09610 LDR X0, [X0 + 0xDE0]
	0x01F09614 BL 0x1C16CF4
	0x01F09618 ADRP X0, 0x21F7000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x24D1000
	006 Move X21, 0x21F5000
	007 Move W8, [X20+1669]
	008 Move X21, [X21+120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x21F5000
	015 Move X0, [X0+120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1669], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Add X0, X19, 16
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call NetAddress.get_IsValid, X0
	031 Return X0

Method: System.Boolean get_HasIPv6Support()

Disassembly:
	0x01F0961C LDR X0, [X0 + 0xDE8]
	0x01F09620 BL 0x1C16CF4
	0x01F09624 ADRP X0, 0x21F7000
	0x01F09628 LDR X0, [X0 + 0xD50]
	0x01F0962C BL 0x1C16CF4
	0x01F09630 MOVZ W8, 0x1
	0x01F09634 STRB W8, [X20 + 0x68F]
	0x01F09638 ADRP X24, 0x21F7000
	0x01F0963C LDR X24, [X24 + 0xDD0]
	0x01F09640 STR X31, [X31 + 0x18]
	0x01F09644 STR X31, [X31 + 0x8]
	0x01F09648 ADRP X25, 0x21F7000
	0x01F0964C ADRP X23, 0x21F7000
	0x01F09650 ADRP X26, 0x21F7000
	0x01F09654 ADRP X27, 0x21F7000
	0x01F09658 LDR W8, [X19]
	0x01F0965C LDR X25, [X25 + 0xDB8]
	0x01F09660 LDR X23, [X23 + 0xBF0]
	0x01F09664 LDR X26, [X26 + 0xDE0]
	0x01F09668 LDR X27, [X27 + 0xDD8]
	0x01F0966C CBZ W8, 0x1F096B0
	0x01F09670 CMP W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x24D1000
	006 Move X21, 0x21F5000
	007 Move W8, [X20+1670]
	008 Move X21, [X21+120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x21F5000
	015 Move X0, [X0+120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1670], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Add X0, X19, 40
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call NetAddress.get_IsValid, X0
	031 Return X0

Method: System.String ToString()

Disassembly:
	0x01F09758 LDR X8, [X31 + 0x8]
	0x01F0975C STR X8, [X19 + 0x48]
	0x01F09760 ADRP X8, 0x21ED000
	0x01F09764 LDR X8, [X8 + 0x280]
	0x01F09768 LDR X0, [X8]
	0x01F0976C LDR W8, [X0 + 0xE0]
	0x01F09770 CBNZ W8, 0x1F09778
	0x01F09774 BL 0x1C16DFC
	0x01F09778 ADRP X8, 0x21F7000
	0x01F0977C LDR X8, [X8 + 0xD90]
	0x01F09780 ADD X0, X19, 0x8
	0x01F09784 LDR X3, [X8]
	0x01F09788 ADD X1, X31, 0x8
	0x01F0978C MOV X2, X19
	0x01F09790 BL 0x21894D8
	0x01F09794 B 0x1F09B00
	0x01F09798 STR X31, [X19 + 0x38]
	0x01F0979C ADRP X8, 0x21F7000
	0x01F097A0 LDR X0, [X19 + 0x28]
	0x01F097A4 LDR X8, [X8 + 0xDA8]
	0x01F097A8 LDR X1, [X8]
	0x01F097AC BL 0x21D577C
	0x01F097B0 MOV X20, X0
	0x01F097B4 LDR X0, [X23]
	0x01F097B8 LDR W8, [X0 + 0xE0]
	0x01F097BC CBNZ W8, 0x1F097C4
	0x01F097C0 BL 0x1C16DFC
	0x01F097C4 BL 0x1C16D44
	0x01F097C8 LDR X0, [X23]
	0x01F097CC LDR X8, [X0 + 0xB8]
	0x01F097D0 STR X20, [X8 + 0x8]
	0x01F097D4 B 0x1F09BD8
	0x01F097D8 BL 0x1C16F20
	0x01F097DC BL 0x1C16F28
	0x01F097E0 BL 0x1C16F20
	0x01F097E4 B 0x1F09CD4
	0x01F097E8 B 0x1F09CD4
	0x01F097EC B 0x1F09CD4
	0x01F097F0 B 0x1F09CD4
	0x01F097F4 B 0x1F09CD4
	0x01F097F8 B 0x1F09CD4
	0x01F097FC B 0x1F09CD4
	0x01F09800 B 0x1F09CD4
	0x01F09804 B 0x1F09CD4
	0x01F09808 ADRP X8, 0x21F2000
	0x01F0980C LDR X8, [X8 + 0x7D0]
	0x01F09810 LDR X0, [X8]
	0x01F09814 LDR W8, [X0 + 0xE0]
	0x01F09818 CBNZ W8, 0x1F09820
	0x01F0981C BL 0x1C16DFC
	0x01F09820 MOVZ W0, 0xA
	0x01F09824 MOV X1, X31
	0x01F09828 MOV X2, X31
	0x01F0982C BL 0x1E3A26C
	0x01F09830 CBZ X0, 0x1F09AAC
	0x01F09834 MOV X1, X31
	0x01F09838 BL 0x33ED394
	0x01F0983C STR X0, [X31 + 0x18]
	0x01F09840 ADD X0, X31, 0x18
	0x01F09844 MOV X1, X31
	0x01F09848 BL 0x32C3A80
	0x01F0984C TBZ X0, 0x0, 0x1F09A68
	0x01F09850 ADD X0, X31, 0x18
	0x01F09854 MOV X1, X31
	0x01F09858 BL 0x32C3B4C
	0x01F0985C LDR X0, [X23]
	0x01F09860 LDR W8, [X0 + 0xE0]
	0x01F09864 CBNZ W8, 0x1F09870
	0x01F09868 BL 0x1C16DFC
	0x01F0986C LDR X0, [X23]
	0x01F09870 LDR X8, [X0 + 0xB8]
	0x01F09874 LDRB W20, [X8 + 0x10]
	0x01F09878 BL 0x1C16D44
	0x01F0987C CBNZ W20, 0x1F09808
	0x01F09880 LDR X0, [X23]
	0x01F09884 LDR W8, [X0 + 0xE0]
	0x01F09888 CBNZ W8, 0x1F09894
	0x01F0988C BL 0x1C16DFC
	0x01F09890 LDR X0, [X23]
	0x01F09894 LDR X8, [X0 + 0xB8]
	0x01F09898 LDR X20, [X8 + 0x8]
	0x01F0989C BL 0x1C16D44
	0x01F098A0 CBNZ X20, 0x1F09BF4
	0x01F098A4 LDR X0, [X23]
	0x01F098A8 LDR W8, [X0 + 0xE0]
	0x01F098AC CBNZ W8, 0x1F098B4
	0x01F098B0 BL 0x1C16DFC
	0x01F098B4 BL 0x1C16D44
	0x01F098B8 LDR X8, [X23]
	0x01F098BC MOVZ W9, 0x1
	0x01F098C0 ADRP X20, 0x21F7000
	0x01F098C4 LDR X8, [X8 + 0xB8]
	0x01F098C8 STRB W9, [X8 + 0x10]
	0x01F098CC LDR X20, [X20 + 0xD40]
	0x01F098D0 LDR X0, [X20]
	0x01F098D4 LDR W8, [X0 + 0xE0]
	0x01F098D8 CBNZ W8, 0x1F098E0
	0x01F098DC BL 0x1C16DFC
	0x01F098E0 ADRP X21, 0x24D0000
	0x01F098E4 LDRB W8, [X21 + 0x69B]
	0x01F098E8 CBNZ W8, 0x1F09900
	0x01F098EC ADRP X0, 0x21F7000
	0x01F098F0 LDR X0, [X0 + 0xD40]
	0x01F098F4 BL 0x1C16CF4
	0x01F098F8 MOVZ W8, 0x1
	0x01F098FC STRB W8, [X21 + 0x69B]
	0x01F09900 LDR X0, [X20]
	0x01F09904 LDR W8, [X0 + 0xE0]
	0x01F09908 CBNZ W8, 0x1F09914
	0x01F0990C BL 0x1C16DFC
	0x01F09910 LDR X0, [X20]
	0x01F09914 ADRP X9, 0x21F7000
	0x01F09918 LDR X8, [X0 + 0xB8]
	0x01F0991C LDR X9, [X9 + 0xDC8]
	0x01F09920 LDR X21, [X8]
	0x01F09924 LDR X0, [X9]
	0x01F09928 BL 0x1C16F10
	0x01F0992C ADRP X8, 0x21F7000
	0x01F09930 LDR X8, [X8 + 0xDC0]
	0x01F09934 MOV X20, X0
	0x01F09938 LDR X2, [X8]
	0x01F0993C MOV X1, X21
	0x01F09940 BL 0x2DBDE4C
	0x01F09944 LDR X0, [X19 + 0x20]
	0x01F09948 STR X20, [X19 + 0x28]
	0x01F0994C CBZ X0, 0x1F09958
	0x01F09950 MOV X1, X31
	0x01F09954 BL 0x322B8DC
	0x01F09958 STR X0, [X19 + 0x20]
	0x01F0995C MOV X1, X31
	0x01F09960 BL 0x32277A8
	0x01F09964 TBNZ X0, 0x0, 0x1F09BB0
	0x01F09968 ADRP X8, 0x21F3000
	0x01F0996C LDR X20, [X19 + 0x20]
	0x01F09970 LDR X8, [X8 + 0x8D8]
	0x01F09974 LDR X0, [X8]
	0x01F09978 MOVZ W1, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X20, 0x24D1000
	012 Move X21, 0x21EB000
	013 Move X19, X0
	014 Move [X31+56], X8
	015 Move W8, [X20+1671]
	016 Move X21, [X21+2512]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x21F5000
	022 Move X0, [X0+120]
	023 Call 0x1C17CF4
	024 Move X0, 0x21EB000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0x21F8000
	028 Move X0, [X0+3368]
	029 Call 0x1C17CF4
	030 Move X0, 0x21F8000
	031 Move X0, [X0+3376]
	032 Call 0x1C17CF4
	033 Move X0, 0x21F8000
	034 Move X0, [X0+3384]
	035 Call 0x1C17CF4
	036 Move X0, 0x21F7000
	037 Move X0, [X0+1632]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1671], W8
	041 Move X0, [X21]
	042 Move W1, 5
	043 Call 0x1C17D6C
	044 Compare X0, 0
	045 JumpIfEqual {152}
	046 Move X21, 0x21F8000
	047 Move X21, [X21+3376]
	048 Move X20, X0
	049 Move X0, [X21]
	050 Compare X0, 0
	051 JumpIfEqual {57}
	052 Move X8, [X20]
	053 Move X1, [X8+64]
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {149}
	057 Move W8, [X20+24]
	058 Compare W8, 0
	059 JumpIfEqual {148}
	060 Move X9, [X21]
	061 Move X21, 0x21F8000
	062 Move X21, [X21+3384]
	063 Move [X20+32], X9
	064 Move X0, [X21]
	065 Compare X0, 0
	066 JumpIfEqual {73}
	067 Move X8, [X20]
	068 Move X1, [X8+64]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {149}
	072 Move W8, [X20+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X21]
	075 Move X23, 0x21F5000
	076 Move X23, [X23+120]
	077 Add X1, X31, 32
	078 Move [X20+40], X8
	079 Move X8, [X19+32]
	080 Move V0, [X19+1]
	081 Move X0, [X23]
	082 Move [X31+48], X8
	083 Move [X31+2], V0
	084 Call 0x1C17E04
	085 Move X21, X0
	086 Compare X0, 0
	087 JumpIfEqual {94}
	088 Move X8, [X20]
	089 Move X0, X21
	090 Move X1, [X8+64]
	091 Call 0x1C17E00
	092 Compare X0, 0
	093 JumpIfEqual {149}
	094 Move W8, [X20+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X24, 0x21F8000
	097 Move X24, [X24+3368]
	098 Move [X20+48], X21
	099 Move X0, [X24]
	100 Compare X0, 0
	101 JumpIfEqual {108}
	102 Move X8, [X20]
	103 Move X1, [X8+64]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {149}
	107 Move W8, [X20+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X24]
	110 Add X1, X31, 0
	111 Move [X20+56], X8
	112 Move X8, [X19+56]
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 Move X0, [X23]
	115 Move [X31+16], X8
	116 Move [X31], V0
	117 Call 0x1C17E04
	118 Move X19, X0
	119 Compare X0, 0
	120 JumpIfEqual {127}
	121 Move X8, [X20]
	122 Move X0, X19
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {149}
	127 Move W8, [X20+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, 0x21F7000
	130 Move X8, [X8+1632]
	131 Move [X20+64], X19
	132 Move X1, X20
	133 Move X2, X31
	134 Move X0, [X8]
	135 Call String.Format, X0, X1
	136 Move X8, [X22+40]
	137 Move X9, [X31+56]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X20, [X31+112]
	140 Move X19, [X31+120]
	141 Move X22, [X31+96]
	142 Move X21, [X31+104]
	143 Move X24, [X31+80]
	144 Move X23, [X31+88]
	145 Move X30, [X31+64]
	146 Add X31, X31, 128
	147 Return X0
	148 Call 0x1C17F28
	149 Call 0x1C17F44
	150 Move X1, X31
	151 Call 0x1C17DEC
	152 Call 0x1C17F20
	153 Call 0x3EB2B20

Method: System.Collections.Generic.IEqualityComparer`1<Fusion.Sockets.Stun.StunServers/StunServer> get_StunServerEqualityComparer()

Disassembly:
	0x01F0997C BL 0x1C16D6C
	0x01F09980 MOV X1, X0
	0x01F09984 CBZ X1, 0x1F09AB0
	0x01F09988 LDR W8, [X1 + 0x18]
	0x01F0998C CBZ W8, 0x1F09AB4
	0x01F09990 MOVZ W8, 0x3B
	0x01F09994 STRH W8, [X1 + 0x20]
	0x01F09998 CBZ X20, 0x1F09AB8
	0x01F0999C MOV X0, X20
	0x01F099A0 MOV X2, X31
	0x01F099A4 BL 0x3229E68
	0x01F099A8 ADRP X28, 0x21F7000
	0x01F099AC LDR X28, [X28 + 0xD50]
	0x01F099B0 MOV X20, X0
	0x01F099B4 LDR X8, [X28]
	0x01F099B8 LDR W9, [X8 + 0xE0]
	0x01F099BC CBNZ W9, 0x1F099CC
	0x01F099C0 MOV X0, X8
	0x01F099C4 BL 0x1C16DFC
	0x01F099C8 LDR X8, [X28]
	0x01F099CC LDR X9, [X8 + 0xB8]
	0x01F099D0 LDR X21, [X9 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24D1000
	005 Move X19, 0x21F8000
	006 Move W8, [X20+1672]
	007 Move X19, [X19+3392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x21F8000
	013 Move X0, [X0+3392]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1672], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01F099D4 CBNZ X21, 0x1F09A2C
	0x01F099D8 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01F099DC CBNZ W9, 0x1F099EC
	0x01F099E0 MOV X0, X8
	0x01F099E4 BL 0x1C16DFC
	0x01F099E8 LDR X8, [X28]
	0x01F099EC ADRP X9, 0x21F7000
	0x01F099F0 LDR X8, [X8 + 0xB8]
	0x01F099F4 LDR X9, [X9 + 0xDB0]
	0x01F099F8 LDR X22, [X8]
	0x01F099FC LDR X0, [X9]
	0x01F09A00 BL 0x1C16F10
	0x01F09A04 ADRP X8, 0x21F7000
	0x01F09A08 LDR X8, [X8 + 0xDE8]
	0x01F09A0C MOV X21, X0
	0x01F09A10 LDR X2, [X8]
	0x01F09A14 MOV X1, X22
	0x01F09A18 MOV X3, X31
	0x01F09A1C BL 0x2D30578
	0x01F09A20 LDR X8, [X28]
	0x01F09A24 LDR X8, [X8 + 0xB8]
	0x01F09A28 STR X21, [X8 + 0x8]
	0x01F09A2C ADRP X8, 0x21F7000
	0x01F09A30 LDR X8, [X8 + 0xDA0]
	0x01F09A34 LDR X2, [X8]
	0x01F09A38 MOV X0, X20
	0x01F09A3C MOV X1, X21
	0x01F09A40 BL 0x21CF224
	0x01F09A44 ADRP X8, 0x21EA000
	0x01F09A48 LDR X8, [X8 + 0xEB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x24D1000
	006 Move X21, 0x21F8000
	007 Move X20, 0x21F8000
	008 Move W8, [X19+1673]
	009 Move X21, [X21+3400]
	010 Move X20, [X20+3392]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x21F8000
	016 Move X0, [X0+3400]
	017 Call 0x1C17CF4
	018 Move X0, 0x21F8000
	019 Move X0, [X0+3392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1673], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

