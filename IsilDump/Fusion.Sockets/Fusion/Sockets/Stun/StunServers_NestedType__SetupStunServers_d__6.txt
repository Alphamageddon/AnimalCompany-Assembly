Type: Fusion.Sockets.Stun.StunServers/<SetupStunServers>d__6

Method: System.Void MoveNext()

Disassembly:
	0x01F0A520 ADD X0, X8, 0x138
	0x01F0A524 LDP X8, X1, [X0]
	0x01F0A528 MOV X0, X21
	0x01F0A52C BLR X8
	0x01F0A530 CBNZ X25, 0x1F0A56C
	0x01F0A534 CBZ W27, 0x1F0A540
	0x01F0A538 CMP W27, 0x6
	0x01F0A53C B.NE 0x1F0A388
	0x01F0A540 LDR W8, [X22 + 0x18]
	0x01F0A544 ADD X9, X22, 0x20
	0x01F0A548 MOV X0, X20
	0x01F0A54C MOV W2, W24
	0x01F0A550 CMP W8, 0x0
	0x01F0A554 CSEL X1, X31, X9, EQ
	0x01F0A558 MOV X3, X31
	0x01F0A55C BL 0x1E35764
	0x01F0A560 MOVZ W8, 0x1
	0x01F0A564 STR W24, [X19]
	0x01F0A568 B 0x1F0A388
	0x01F0A56C MOV X0, X25
	0x01F0A570 BL 0x1C16F18
	0x01F0A574 BL 0x1C16F20
	0x01F0A578 BL 0x1C16F20
	0x01F0A57C BL 0x1C16F20
	0x01F0A580 BL 0x1C16F20
	0x01F0A584 MOV X0, X26
	0x01F0A588 BL 0x1C16F18
	0x01F0A58C BL 0x1C16F20
	0x01F0A590 BL 0x1C16F20
	0x01F0A594 MOV X0, X26
	0x01F0A598 BL 0x1C16F18
	0x01F0A59C MOV X0, X26
	0x01F0A5A0 BL 0x1C16F18
	0x01F0A5A4 B 0x1F0A5B4
	0x01F0A5A8 B 0x1F0A75C
	0x01F0A5AC B 0x1F0A75C
	0x01F0A5B0 B 0x1F0A5B4
	0x01F0A5B4 MOV X27, X1
	0x01F0A5B8 MOV X26, X0
	0x01F0A5BC CMP W27, 0x1
	0x01F0A5C0 B.NE 0x1F0A5F0
	0x01F0A5C4 MOV X0, X26
	0x01F0A5C8 BL 0x3EB1AD0
	0x01F0A5CC LDR X8, [X0]
	0x01F0A5D0 STR X8, [X31 + 0x8]
	0x01F0A5D4 BL 0x3EB1AE0
	0x01F0A5D8 LDR X26, [X31 + 0x8]
	0x01F0A5DC MOV W24, W31
	0x01F0A5E0 MOV W27, W31
	0x01F0A5E4 MOVZ W29, 0x1
	0x01F0A5E8 CBNZ X28, 0x1F0A33C
	0x01F0A5EC B 0x1F0A3C4
	0x01F0A5F0 STR X31, [X31 + 0x8]
	0x01F0A5F4 CBZ X28, 0x1F0A658
	0x01F0A5F8 ADRP X10, 0x21E9000
	0x01F0A5FC LDR X8, [X28]
	0x01F0A600 LDR X10, [X10 + 0xE00]
	0x01F0A604 LDRH W9, [X8 + 0x12E]
	0x01F0A608 LDR X1, [X10]
	0x01F0A60C CBZ X9, 0x1F0A630
	0x01F0A610 LDR X10, [X8 + 0xB0]
	0x01F0A614 ADD X10, X10, 0x8
	0x01F0A618 LDUR X11, [X10 - 0x8]
	0x01F0A61C CMP X11, X1
	0x01F0A620 B.EQ 0x1F0A640
	0x01F0A624 SUBS X9, X9, 0x1
	0x01F0A628 ADD X10, X10, 0x10
	0x01F0A62C B.NE 0x1F0A618
	0x01F0A630 MOV X0, X28
	0x01F0A634 MOV W2, W31
	0x01F0A638 BL 0x1C5C788
	0x01F0A63C B 0x1F0A64C
	0x01F0A640 LDRSW X9, [X10]
	0x01F0A644 ADD X8, X8, X9, 0x4, LSL
	0x01F0A648 ADD X0, X8, 0x138
	0x01F0A64C LDP X8, X1, [X0]
	0x01F0A650 MOV X0, X28
	0x01F0A654 BLR X8
	0x01F0A658 LDR X8, [X31 + 0x8]
	0x01F0A65C CBZ X8, 0x1F0A680
	0x01F0A660 LDR X0, [X31 + 0x8]
	0x01F0A664 BL 0x1C16F18
	0x01F0A668 MOV X27, X1
	0x01F0A66C MOV X26, X0
	0x01F0A670 CBNZ X28, 0x1F0A5F8
	0x01F0A674 B 0x1F0A658
	0x01F0A678 MOV X27, X1
	0x01F0A67C MOV X26, X0
	0x01F0A680 MOV W24, W31
	0x01F0A684 B 0x1F0A6BC
	0x01F0A688 B 0x1F0A75C
	0x01F0A68C MOV X27, X1
	0x01F0A690 MOV X26, X0
	0x01F0A694 MOV W24, W31
	0x01F0A698 B 0x1F0A7F0
	0x01F0A69C MOV X27, X1
	0x01F0A6A0 MOV X26, X0
	0x01F0A6A4 B 0x1F0A768
	0x01F0A6A8 MOV X27, X1
	0x01F0A6AC MOV X26, X0
	0x01F0A6B0 B 0x1F0A7F0
	0x01F0A6B4 MOV X27, X1
	0x01F0A6B8 MOV X26, X0
	0x01F0A6BC CMP W27, 0x1
	0x01F0A6C0 B.NE 0x1F0A6D8
	0x01F0A6C4 MOV X0, X26
	0x01F0A6C8 BL 0x3EB1AD0
	0x01F0A6CC LDR X28, [X0]
	0x01F0A6D0 BL 0x3EB1AE0
	0x01F0A6D4 B 0x1F0A3D0
	0x01F0A6D8 MOV X28, X31
	0x01F0A6DC CBZ X25, 0x1F0A740
	0x01F0A6E0 ADRP X10, 0x21E9000
	0x01F0A6E4 LDR X8, [X25]
	0x01F0A6E8 LDR X10, [X10 + 0xE00]
	0x01F0A6EC LDRH W9, [X8 + 0x12E]
	0x01F0A6F0 LDR X1, [X10]
	0x01F0A6F4 CBZ X9, 0x1F0A718
	0x01F0A6F8 LDR X10, [X8 + 0xB0]
	0x01F0A6FC ADD X10, X10, 0x8
	0x01F0A700 LDUR X11, [X10 - 0x8]
	0x01F0A704 CMP X11, X1
	0x01F0A708 B.EQ 0x1F0A728
	0x01F0A70C SUBS X9, X9, 0x1
	0x01F0A710 ADD X10, X10, 0x10
	0x01F0A714 B.NE 0x1F0A700
	0x01F0A718 MOV X0, X25
	0x01F0A71C MOV W2, W31
	0x01F0A720 BL 0x1C5C788
	0x01F0A724 B 0x1F0A734
	0x01F0A728 LDRSW X9, [X10]
	0x01F0A72C ADD X8, X8, X9, 0x4, LSL
	0x01F0A730 ADD X0, X8, 0x138
	0x01F0A734 LDP X8, X1, [X0]
	0x01F0A738 MOV X0, X25
	0x01F0A73C BLR X8
	0x01F0A740 CBZ X28, 0x1F0A768
	0x01F0A744 MOV X0, X28
	0x01F0A748 BL 0x1C16F18
	0x01F0A74C MOV X27, X1
	0x01F0A750 MOV X26, X0
	0x01F0A754 CBNZ X25, 0x1F0A6E0
	0x01F0A758 B 0x1F0A740
	0x01F0A75C MOV X27, X1
	0x01F0A760 MOV X26, X0
	0x01F0A764 MOV W24, W31
	0x01F0A768 CMP W27, 0x1
	0x01F0A76C B.NE 0x1F0A784
	0x01F0A770 MOV X0, X26
	0x01F0A774 BL 0x3EB1AD0
	0x01F0A778 LDR X25, [X0]
	0x01F0A77C BL 0x3EB1AE0
	0x01F0A780 B 0x1F0A448
	0x01F0A784 MOV X25, X31
	0x01F0A788 CBZ X23, 0x1F0A7EC
	0x01F0A78C ADRP X10, 0x21E9000
	0x01F0A790 LDR X8, [X23]
	0x01F0A794 LDR X10, [X10 + 0xE00]
	0x01F0A798 LDRH W9, [X8 + 0x12E]
	0x01F0A79C LDR X1, [X10]
	0x01F0A7A0 CBZ X9, 0x1F0A7C4
	0x01F0A7A4 LDR X10, [X8 + 0xB0]
	0x01F0A7A8 ADD X10, X10, 0x8
	0x01F0A7AC LDUR X11, [X10 - 0x8]
	0x01F0A7B0 CMP X11, X1
	0x01F0A7B4 B.EQ 0x1F0A7D4
	0x01F0A7B8 SUBS X9, X9, 0x1
	0x01F0A7BC ADD X10, X10, 0x10
	0x01F0A7C0 B.NE 0x1F0A7AC
	0x01F0A7C4 MOV X0, X23
	0x01F0A7C8 MOV W2, W31
	0x01F0A7CC BL 0x1C5C788
	0x01F0A7D0 B 0x1F0A7E0
	0x01F0A7D4 LDRSW X9, [X10]
	0x01F0A7D8 ADD X8, X8, X9, 0x4, LSL
	0x01F0A7DC ADD X0, X8, 0x138
	0x01F0A7E0 LDP X8, X1, [X0]
	0x01F0A7E4 MOV X0, X23
	0x01F0A7E8 BLR X8
	0x01F0A7EC CBNZ X25, 0x1F0A814
	0x01F0A7F0 CMP W27, 0x1
	0x01F0A7F4 B.NE 0x1F0A80C
	0x01F0A7F8 MOV X0, X26
	0x01F0A7FC BL 0x3EB1AD0
	0x01F0A800 LDR X23, [X0]
	0x01F0A804 BL 0x3EB1AE0
	0x01F0A808 B 0x1F0A4C4
	0x01F0A80C MOV X23, X31
	0x01F0A810 B 0x1F0A830
	0x01F0A814 MOV X0, X25
	0x01F0A818 BL 0x1C16F18
	0x01F0A81C MOV X27, X1
	0x01F0A820 MOV X26, X0
	0x01F0A824 CBNZ X23, 0x1F0A78C
	0x01F0A828 B 0x1F0A7EC
	0x01F0A82C MOV X26, X0
	0x01F0A830 CBZ X21, 0x1F0A894
	0x01F0A834 ADRP X10, 0x21E9000
	0x01F0A838 LDR X8, [X21]
	0x01F0A83C LDR X10, [X10 + 0xE00]
	0x01F0A840 LDRH W9, [X8 + 0x12E]
	0x01F0A844 LDR X1, [X10]
	0x01F0A848 CBZ X9, 0x1F0A86C
	0x01F0A84C LDR X10, [X8 + 0xB0]
	0x01F0A850 ADD X10, X10, 0x8
	0x01F0A854 LDUR X11, [X10 - 0x8]
	0x01F0A858 CMP X11, X1
	0x01F0A85C B.EQ 0x1F0A87C
	0x01F0A860 SUBS X9, X9, 0x1
	0x01F0A864 ADD X10, X10, 0x10
	0x01F0A868 B.NE 0x1F0A854
	0x01F0A86C MOV X0, X21
	0x01F0A870 MOV W2, W31
	0x01F0A874 BL 0x1C5C788
	0x01F0A878 B 0x1F0A888
	0x01F0A87C LDRSW X9, [X10]
	0x01F0A880 ADD X8, X8, X9, 0x4, LSL
	0x01F0A884 ADD X0, X8, 0x138
	0x01F0A888 LDP X8, X1, [X0]
	0x01F0A88C MOV X0, X21
	0x01F0A890 BLR X8
	0x01F0A894 CBNZ X23, 0x1F0A8A0
	0x01F0A898 MOV X0, X26
	0x01F0A89C BL 0x1D2C690
	0x01F0A8A0 MOV X0, X23
	0x01F0A8A4 BL 0x1C16F18
	0x01F0A8A8 BL 0x1990590
	0x01F0A8AC STP X30, X19, [X31 - 0x10]!
	0x01F0A8B0 MOV X19, X0
	0x01F0A8B4 LDR X0, [X0 + 0x28]
	0x01F0A8B8 MOVZ W2, 0x1000
	0x01F0A8BC MOV W1, W31
	0x01F0A8C0 MOV X3, X31
	0x01F0A8C4 BL 0x339FA34
	0x01F0A8C8 LDR X0, [X19 + 0x28]
	0x01F0A8CC LDP X30, X19, [X31], #0x10
	0x01F0A8D0 RET
	0x01F0A8D4 SUB X31, X31, 0x70
	0x01F0A8D8 STP X29, X30, [X31 + 0x10]
	0x01F0A8DC STP X28, X27, [X31 + 0x20]
	0x01F0A8E0 STP X26, X25, [X31 + 0x30]
	0x01F0A8E4 STP X24, X23, [X31 + 0x40]
	0x01F0A8E8 STP X22, X21, [X31 + 0x50]
	0x01F0A8EC STP X20, X19, [X31 + 0x60]
	0x01F0A8F0 ADRP X22, 0x24CF000
	0x01F0A8F4 LDRB W8, [X22 + 0x694]
	0x01F0A8F8 MOV W21, W3
	0x01F0A8FC MOV X19, X2
	0x01F0A900 MOV X20, X1
	0x01F0A904 MOV X24, X0
	0x01F0A908 TBNZ X8, 0x0, 0x1F0A944
	0x01F0A90C ADRP X0, 0x21F6000
	0x01F0A910 LDR X0, [X0 + 0xE00]
	0x01F0A914 BL 0x1C16CF4
	0x01F0A918 ADRP X0, 0x21E9000
	0x01F0A91C LDR X0, [X0 + 0xE00]
	0x01F0A920 BL 0x1C16CF4
	0x01F0A924 ADRP X0, 0x21F1000
	0x01F0A928 LDR X0, [X0 + 0x558]
	0x01F0A92C BL 0x1C16CF4
	0x01F0A930 ADRP X0, 0x21F6000
	0x01F0A934 LDR X0, [X0 + 0xE08]
	0x01F0A938 BL 0x1C16CF4
	0x01F0A93C MOVZ W8, 0x1
	0x01F0A940 STRB W8, [X22 + 0x694]
	0x01F0A944 CBZ X20, 0x1F0AAD0
	0x01F0A948 MOV W8, W31
	0x01F0A94C CBZ W21, 0x1F0AAD4
	0x01F0A950 LDR W9, [X19]
	0x01F0A954 CBZ W9, 0x1F0AAD4
	0x01F0A958 LDR X8, [X24 + 0x10]
	0x01F0A95C CBZ X8, 0x1F0AAD4
	0x01F0A960 LDR X0, [X24 + 0x30]
	0x01F0A964 MOVZ W2, 0x1000
	0x01F0A968 MOV W1, W31
	0x01F0A96C MOV X3, X31
	0x01F0A970 BL 0x339FA34
	0x01F0A974 LDR X22, [X24 + 0x30]
	0x01F0A978 CBZ X22, 0x1F0AAD0
	0x01F0A97C ADRP X8, 0x21F6000
	0x01F0A980 LDRSW X23, [X19]
	0x01F0A984 LDR X8, [X8 + 0xE08]
	0x01F0A988 LDR X0, [X8]
	0x01F0A98C BL 0x1C16F10
	0x01F0A990 MOV X1, X20
	0x01F0A994 MOV X2, X23
	0x01F0A998 MOV X3, X31
	0x01F0A99C MOV X21, X0
	0x01F0A9A0 BL 0x32EA58C
	0x01F0A9A4 CBZ X21, 0x1F0ACB8
	0x01F0A9A8 LDR X8, [X21]
	0x01F0A9AC LDR X1, [X24 + 0x48]
	0x01F0A9B0 LDR X9, [X8 + 0x358]
	0x01F0A9B4 LDR X4, [X8 + 0x360]
	0x01F0A9B8 MOVZ W3, 0x10
	0x01F0A9BC MOV X0, X21
	0x01F0A9C0 MOV W2, W31
	0x01F0A9C4 BLR X9
	0x01F0A9C8 LDR W8, [X19]
	0x01F0A9CC SUB W8, W8, 0x10
	0x01F0A9D0 STR W8, [X19]
	0x01F0A9D4 ADRP X8, 0x21F1000
	0x01F0A9D8 LDR X8, [X8 + 0x558]
	0x01F0A9DC LDR X0, [X8]
	0x01F0A9E0 BL 0x1C16F10
	0x01F0A9E4 MOV X23, X0
	0x01F0A9E8 MOVZ W2, 0x1
	0x01F0A9EC MOV X1, X22
	0x01F0A9F0 MOV X3, X31
	0x01F0A9F4 BL 0x32E2530
	0x01F0A9F8 LDR X0, [X24 + 0x10]
	0x01F0A9FC CBZ X0, 0x1F0ACC4
	0x01F0AA00 LDR X8, [X0]
	0x01F0AA04 LDR X1, [X24 + 0x38]
	0x01F0AA08 LDR X2, [X24 + 0x48]
	0x01F0AA0C LDR X9, [X8 + 0x2A8]
	0x01F0AA10 LDR X3, [X8 + 0x2B0]
	0x01F0AA14 BLR X9
	0x01F0AA18 ADRP X8, 0x21F6000
	0x01F0AA1C LDR X8, [X8 + 0xE00]
	0x01F0AA20 MOV X25, X0
	0x01F0AA24 LDR X0, [X8]
	0x01F0AA28 BL 0x1C16F10
	0x01F0AA2C MOV X28, X0
	0x01F0AA30 MOV X1, X21
	0x01F0AA34 MOV X2, X25
	0x01F0AA38 MOV W3, W31
	0x01F0AA3C MOV X4, X31
	0x01F0AA40 BL 0x324CD5C
	0x01F0AA44 CBZ X28, 0x1F0ACC8
	0x01F0AA48 LDR X8, [X28]
	0x01F0AA4C LDR W2, [X19]
	0x01F0AA50 LDR X9, [X8 + 0x268]
	0x01F0AA54 LDR X3, [X8 + 0x270]
	0x01F0AA58 MOV X0, X28
	0x01F0AA5C MOV X1, X23
	0x01F0AA60 BLR X9
	0x01F0AA64 CBZ X23, 0x1F0ACD4
	0x01F0AA68 LDR X8, [X23]
	0x01F0AA6C LDP X9, X1, [X8 + 0x1F8]
	0x01F0AA70 MOV X0, X23
	0x01F0AA74 BLR X9
	0x01F0AA78 MOV X24, X0
	0x01F0AA7C MOV W29, W31
	0x01F0AA80 MOV X26, X31
	0x01F0AA84 MOVZ W27, 0x6
	0x01F0AA88 ADRP X10, 0x21E9000
	0x01F0AA8C LDR X8, [X28]
	0x01F0AA90 LDR X10, [X10 + 0xE00]
	0x01F0AA94 LDRH W9, [X8 + 0x12E]
	0x01F0AA98 LDR X1, [X10]
	0x01F0AA9C CBZ X9, 0x1F0AAC0
	0x01F0AAA0 LDR X10, [X8 + 0xB0]
	0x01F0AAA4 ADD X10, X10, 0x8
	0x01F0AAA8 LDUR X11, [X10 - 0x8]
	0x01F0AAAC CMP X11, X1
	0x01F0AAB0 B.EQ 0x1F0AAF8
	0x01F0AAB4 SUBS X9, X9, 0x1
	0x01F0AAB8 ADD X10, X10, 0x10
	0x01F0AABC B.NE 0x1F0AAA8
	0x01F0AAC0 MOV X0, X28
	0x01F0AAC4 MOV W2, W31
	0x01F0AAC8 BL 0x1C5C788
	0x01F0AACC B 0x1F0AB04
	0x01F0AAD0 MOV W8, W31
	0x01F0AAD4 LDP X20, X19, [X31 + 0x60]
	0x01F0AAD8 LDP X22, X21, [X31 + 0x50]
	0x01F0AADC LDP X24, X23, [X31 + 0x40]
	0x01F0AAE0 LDP X26, X25, [X31 + 0x30]
	0x01F0AAE4 LDP X28, X27, [X31 + 0x20]
	0x01F0AAE8 LDP X29, X30, [X31 + 0x10]
	0x01F0AAEC AND W0, W8, 0x1
	0x01F0AAF0 ADD X31, X31, 0x70
	0x01F0AAF4 RET
	0x01F0AAF8 LDRSW X9, [X10]
	0x01F0AAFC ADD X8, X8, X9, 0x4, LSL
	0x01F0AB00 ADD X0, X8, 0x138
	0x01F0AB04 LDP X8, X1, [X0]
	0x01F0AB08 MOV X0, X28
	0x01F0AB0C BLR X8
	0x01F0AB10 CBNZ X26, 0x1F0ACE0
	0x01F0AB14 MOV X28, X31
	0x01F0AB18 TBZ X29, 0x0, 0x1F0AB24
	0x01F0AB1C MOV W27, W31
	0x01F0AB20 MOV X26, X28
	0x01F0AB24 CBZ X25, 0x1F0AB88
	0x01F0AB28 ADRP X10, 0x21E9000
	0x01F0AB2C LDR X8, [X25]
	0x01F0AB30 LDR X10, [X10 + 0xE00]
	0x01F0AB34 LDRH W9, [X8 + 0x12E]
	0x01F0AB38 LDR X1, [X10]
	0x01F0AB3C CBZ X9, 0x1F0AB60
	0x01F0AB40 LDR X10, [X8 + 0xB0]
	0x01F0AB44 ADD X10, X10, 0x8
	0x01F0AB48 LDUR X11, [X10 - 0x8]
	0x01F0AB4C CMP X11, X1
	0x01F0AB50 B.EQ 0x1F0AB70
	0x01F0AB54 SUBS X9, X9, 0x1
	0x01F0AB58 ADD X10, X10, 0x10
	0x01F0AB5C B.NE 0x1F0AB48
	0x01F0AB60 MOV X0, X25
	0x01F0AB64 MOV W2, W31
	0x01F0AB68 BL 0x1C5C788
	0x01F0AB6C B 0x1F0AB7C
	0x01F0AB70 LDRSW X9, [X10]
	0x01F0AB74 ADD X8, X8, X9, 0x4, LSL
	0x01F0AB78 ADD X0, X8, 0x138
	0x01F0AB7C LDP X8, X1, [X0]
	0x01F0AB80 MOV X0, X25
	0x01F0AB84 BLR X8
	0x01F0AB88 CBNZ X26, 0x1F0ACD8
	0x01F0AB8C MOV X25, X31
	0x01F0AB90 CBNZ W27, 0x1F0AB9C
	0x01F0AB94 MOV W27, W31
	0x01F0AB98 MOV X26, X25
	0x01F0AB9C CBZ X23, 0x1F0AC00
	0x01F0ABA0 ADRP X10, 0x21E9000
	0x01F0ABA4 LDR X8, [X23]
	0x01F0ABA8 LDR X10, [X10 + 0xE00]
	0x01F0ABAC LDRH W9, [X8 + 0x12E]
	0x01F0ABB0 LDR X1, [X10]
	0x01F0ABB4 CBZ X9, 0x1F0ABD8
	0x01F0ABB8 LDR X10, [X8 + 0xB0]
	0x01F0ABBC ADD X10, X10, 0x8
	0x01F0ABC0 LDUR X11, [X10 - 0x8]
	0x01F0ABC4 CMP X11, X1
	0x01F0ABC8 B.EQ 0x1F0ABE8
	0x01F0ABCC SUBS X9, X9, 0x1
	0x01F0ABD0 ADD X10, X10, 0x10
	0x01F0ABD4 B.NE 0x1F0ABC0
	0x01F0ABD8 MOV X0, X23
	0x01F0ABDC MOV W2, W31
	0x01F0ABE0 BL 0x1C5C788
	0x01F0ABE4 B 0x1F0ABF4
	0x01F0ABE8 LDRSW X9, [X10]
	0x01F0ABEC ADD X8, X8, X9, 0x4, LSL
	0x01F0ABF0 ADD X0, X8, 0x138
	0x01F0ABF4 LDP X8, X1, [X0]
	0x01F0ABF8 MOV X0, X23
	0x01F0ABFC BLR X8
	0x01F0AC00 CBNZ X26, 0x1F0ACCC
	0x01F0AC04 MOV X23, X31
	0x01F0AC08 MOV X25, X31
	0x01F0AC0C CBNZ W27, 0x1F0AC18
	0x01F0AC10 MOV W27, W31
	0x01F0AC14 MOV X25, X23
	0x01F0AC18 CBZ X21, 0x1F0AC7C
	0x01F0AC1C ADRP X10, 0x21E9000
	0x01F0AC20 LDR X8, [X21]
	0x01F0AC24 LDR X10, [X10 + 0xE00]
	0x01F0AC28 LDRH W9, [X8 + 0x12E]
	0x01F0AC2C LDR X1, [X10]
	0x01F0AC30 CBZ X9, 0x1F0AC54
	0x01F0AC34 LDR X10, [X8 + 0xB0]
	0x01F0AC38 ADD X10, X10, 0x8
	0x01F0AC3C LDUR X11, [X10 - 0x8]
	0x01F0AC40 CMP X11, X1
	0x01F0AC44 B.EQ 0x1F0AC64
	0x01F0AC48 SUBS X9, X9, 0x1
	0x01F0AC4C ADD X10, X10, 0x10
	0x01F0AC50 B.NE 0x1F0AC3C
	0x01F0AC54 MOV X0, X21
	0x01F0AC58 MOV W2, W31
	0x01F0AC5C BL 0x1C5C788
	0x01F0AC60 B 0x1F0AC70
	0x01F0AC64 LDRSW X9, [X10]
	0x01F0AC68 ADD X8, X8, X9, 0x4, LSL
	0x01F0AC6C ADD X0, X8, 0x138
	0x01F0AC70 LDP X8, X1, [X0]
	0x01F0AC74 MOV X0, X21
	0x01F0AC78 BLR X8
	0x01F0AC7C CBNZ X25, 0x1F0ACBC
	0x01F0AC80 CBZ W27, 0x1F0AC8C
	0x01F0AC84 CMP W27, 0x6
	0x01F0AC88 B.NE 0x1F0AAD4
	0x01F0AC8C LDR W8, [X22 + 0x18]
	0x01F0AC90 ADD X9, X22, 0x20
	0x01F0AC94 MOV X0, X20
	0x01F0AC98 MOV W2, W24
	0x01F0AC9C CMP W8, 0x0
	0x01F0ACA0 CSEL X1, X31, X9, EQ
	0x01F0ACA4 MOV X3, X31
	0x01F0ACA8 BL 0x1E35764
	0x01F0ACAC MOVZ W8, 0x1
	0x01F0ACB0 STR W24, [X19]
	0x01F0ACB4 B 0x1F0AAD4
	0x01F0ACB8 BL 0x1C16F20
	0x01F0ACBC MOV X0, X25
	0x01F0ACC0 BL 0x1C16F18
	0x01F0ACC4 BL 0x1C16F20
	0x01F0ACC8 BL 0x1C16F20
	0x01F0ACCC MOV X0, X26
	0x01F0ACD0 BL 0x1C16F18
	0x01F0ACD4 BL 0x1C16F20
	0x01F0ACD8 MOV X0, X26
	0x01F0ACDC BL 0x1C16F18
	0x01F0ACE0 MOV X0, X26
	0x01F0ACE4 BL 0x1C16F18
	0x01F0ACE8 B 0x1F0AD0C
	0x01F0ACEC B 0x1F0AD0C
	0x01F0ACF0 B 0x1F0ACF4
	0x01F0ACF4 MOV X27, X1
	0x01F0ACF8 MOV X26, X0
	0x01F0ACFC MOV W24, W31
	0x01F0AD00 B 0x1F0AE98
	0x01F0AD04 B 0x1F0ADE0
	0x01F0AD08 B 0x1F0ADE0
	0x01F0AD0C MOV X27, X1
	0x01F0AD10 MOV X26, X0
	0x01F0AD14 CMP W27, 0x1
	0x01F0AD18 B.NE 0x1F0AD48
	0x01F0AD1C MOV X0, X26
	0x01F0AD20 BL 0x3EB1AD0
	0x01F0AD24 LDR X8, [X0]
	0x01F0AD28 STR X8, [X31 + 0x8]
	0x01F0AD2C BL 0x3EB1AE0
	0x01F0AD30 LDR X26, [X31 + 0x8]
	0x01F0AD34 MOV W24, W31
	0x01F0AD38 MOV W27, W31
	0x01F0AD3C MOVZ W29, 0x1
	0x01F0AD40 CBNZ X28, 0x1F0AA88
	0x01F0AD44 B 0x1F0AB10
	0x01F0AD48 STR X31, [X31 + 0x8]
	0x01F0AD4C CBZ X28, 0x1F0ADB0
	0x01F0AD50 ADRP X10, 0x21E9000
	0x01F0AD54 LDR X8, [X28]
	0x01F0AD58 LDR X10, [X10 + 0xE00]
	0x01F0AD5C LDRH W9, [X8 + 0x12E]
	0x01F0AD60 LDR X1, [X10]
	0x01F0AD64 CBZ X9, 0x1F0AD88
	0x01F0AD68 LDR X10, [X8 + 0xB0]
	0x01F0AD6C ADD X10, X10, 0x8
	0x01F0AD70 LDUR X11, [X10 - 0x8]
	0x01F0AD74 CMP X11, X1
	0x01F0AD78 B.EQ 0x1F0AD98

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x24D0000
	014 Move W8, [X20+1679]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {79}
	020 Move X0, 0x21F7000
	021 Move X0, [X0+3472]
	022 Call 0x1C17CF4
	023 Move X0, 0x21F7000
	024 Move X0, [X0+3480]
	025 Call 0x1C17CF4
	026 Move X0, 0x21ED000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move X0, 0x21F3000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0x21F7000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move X0, 0x21EA000
	036 Move X0, [X0+3768]
	037 Call 0x1C17CF4
	038 Move X0, 0x21F7000
	039 Move X0, [X0+3496]
	040 Call 0x1C17CF4
	041 Move X0, 0x21F7000
	042 Move X0, [X0+3504]
	043 Call 0x1C17CF4
	044 Move X0, 0x21F7000
	045 Move X0, [X0+3512]
	046 Call 0x1C17CF4
	047 Move X0, 0x21F7000
	048 Move X0, [X0+3520]
	049 Call 0x1C17CF4
	050 Move X0, 0x21F7000
	051 Move X0, [X0+3528]
	052 Call 0x1C17CF4
	053 Move X0, 0x21F7000
	054 Move X0, [X0+3392]
	055 Call 0x1C17CF4
	056 Move X0, 0x21F7000
	057 Move X0, [X0+3056]
	058 Call 0x1C17CF4
	059 Move X0, 0x21F7000
	060 Move X0, [X0+3536]
	061 Call 0x1C17CF4
	062 Move X0, 0x21F7000
	063 Move X0, [X0+3544]
	064 Call 0x1C17CF4
	065 Move X0, 0x21F2000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0x21F7000
	069 Move X0, [X0+3552]
	070 Call 0x1C17CF4
	071 Move X0, 0x21F7000
	072 Move X0, [X0+3560]
	073 Call 0x1C17CF4
	074 Move X0, 0x21F7000
	075 Move X0, [X0+3408]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X20+1679], W8
	079 Move X24, 0x21F7000
	080 Move X24, [X24+3536]
	081 Move [X31+24], X31
	082 Move [X31+8], X31
	083 Move X25, 0x21F7000
	084 Move X23, 0x21F7000
	085 Move X26, 0x21F7000
	086 Move X27, 0x21F7000
	087 Move W8, [X19]
	088 Move X25, [X25+3512]
	089 Move X23, [X23+3056]
	090 Move X26, [X26+3552]
	091 Move X27, [X27+3544]
	092 Compare W8, 0
	093 JumpIfEqual {110}
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, [X19+72]
	097 Move TEMP, 0
	098 Not TEMP
	099 Move W9, TEMP
	100 Move [X31+8], X8
	101 Move [X19+72], X31
	102 Move [X19], W9
	103 Move X8, [X19+72]
	104 Move TEMP, 0
	105 Not TEMP
	106 Move W9, TEMP
	107 Move [X31+8], X8
	108 Move [X19+72], X31
	109 Move [X19], W9
	110 Move X8, [X19+48]
	111 Move TEMP, 0
	112 Not TEMP
	113 Move W9, TEMP
	114 Move [X31+24], X8
	115 Move [X19+48], X31
	116 Move [X19], W9
	117 Move X1, [X24]
	118 Add X0, X31, 8
	119 Call TaskAwaiter`1<Object>.GetResult, X0
	120 Move X1, X0
	121 Compare X1, 0
	122 JumpIfEqual {128}
	123 Move X0, [X19+40]
	124 Compare X0, 0
	125 JumpIfEqual {193}
	126 Move X2, [X25]
	127 Call HashSet`1<Object>.Add, X0, X1
	128 Move W8, [X19+64]
	129 Move X9, [X19+56]
	130 Add W8, W8, 1
	131 Move [X19+64], W8
	132 Compare X9, 0
	133 JumpIfEqual {508}
	134 Move W10, [X9+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, [X23]
	137 Add X8, X9, W8
	138 Move X20, [X8+32]
	139 Move W9, [X0+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X20
	144 Call StunServers.ResolveStunServerInfo, X0
	145 Compare X0, 0
	146 JumpIfEqual {191}
	147 Move X1, [X26]
	148 Call Task`1<Object>.GetAwaiter, X0
	149 Move X1, [X27]
	150 Move [X31+8], X0
	151 Add X0, X31, 8
	152 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {117}
	157 Move W8, 2
	158 Move [X19], W8
	159 Move X8, [X31+8]
	160 Move [X19+72], X8
	161 Move X8, 0x21ED000
	162 Move X8, [X8+640]
	163 Move X0, [X8]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X8, 0x21F7000
	169 Move X8, [X8+3472]
	170 Add X0, X19, 8
	171 Move X3, [X8]
	172 Add X1, X31, 8
	173 Move X2, X19
	174 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	175 Move [X19+56], X31
	176 Move X8, 0x21F7000
	177 Move X0, [X19+40]
	178 Move X8, [X8+3496]
	179 Move X1, [X8]
	180 Call Enumerable.ToArray, X0
	181 Move X20, X0
	182 Move X0, [X23]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Call 0x1C17D44
	188 Move X0, [X23]
	189 Move X8, [X0+184]
	190 Move [X8+8], X20
	191 Call 0x1C17F20
	192 Call 0x1C17F28
	193 Call 0x1C17F20
	194 Move X8, 0x21F2000
	195 Move X8, [X8+2000]
	196 Move X0, [X8]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move W0, 10
	202 Move X1, X31
	203 Move X2, X31
	204 Call TaskManager.Delay, X0, X1
	205 Compare X0, 0
	206 JumpIfEqual {385}
	207 Move X1, X31
	208 Call Task.GetAwaiter, X0
	209 Move [X31+24], X0
	210 Add X0, X31, 24
	211 Move X1, X31
	212 Call TaskAwaiter.get_IsCompleted, X0
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {368}
	217 Add X0, X31, 24
	218 Move X1, X31
	219 Call TaskAwaiter.GetResult, X0
	220 Move X0, [X23]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {226}
	224 Call 0x1C17DFC
	225 Move X0, [X23]
	226 Move X8, [X0+184]
	227 Move W20, [X8+16]
	228 Call 0x1C17D44
	229 Compare W20, 0
	230 JumpIfNotEqual {194}
	231 Move X0, [X23]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {237}
	235 Call 0x1C17DFC
	236 Move X0, [X23]
	237 Move X8, [X0+184]
	238 Move X20, [X8+8]
	239 Call 0x1C17D44
	240 Compare X20, 0
	241 JumpIfNotEqual {463}
	242 Move X0, [X23]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1C17DFC
	247 Call 0x1C17D44
	248 Move X8, [X23]
	249 Move W9, 1
	250 Move X20, 0x21F7000
	251 Move X8, [X8+184]
	252 Move [X8+16], W9
	253 Move X20, [X20+3392]
	254 Move X0, [X20]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X21, 0x24D0000
	260 Move W8, [X21+1691]
	261 Compare W8, 0
	262 JumpIfNotEqual {268}
	263 Move X0, 0x21F7000
	264 Move X0, [X0+3392]
	265 Call 0x1C17CF4
	266 Move W8, 1
	267 Move [X21+1691], W8
	268 Move X0, [X20]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {274}
	272 Call 0x1C17DFC
	273 Move X0, [X20]
	274 Move X9, 0x21F7000
	275 Move X8, [X0+184]
	276 Move X9, [X9+3528]
	277 Move X21, [X8]
	278 Move X0, [X9]
	279 Call 0x1C17F10
	280 Move X8, 0x21F7000
	281 Move X8, [X8+3520]
	282 Move X20, X0
	283 Move X2, [X8]
	284 Move X1, X21
	285 Call HashSet`1<Object>..ctor, X0, X1
	286 Move X0, [X19+32]
	287 Move [X19+40], X20
	288 Compare X0, 0
	289 JumpIfEqual {292}
	290 Move X1, X31
	291 Call String.Trim, X0
	292 Move [X19+32], X0
	293 Move X1, X31
	294 Call String.IsNullOrEmpty, X0
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfEqual {443}
	299 Move X8, 0x21F3000
	300 Move X20, [X19+32]
	301 Move X8, [X8+2264]
	302 Move X0, [X8]
	303 Move W1, 1
	304 Call 0x1C17D6C
	305 Move X1, X0
	306 Compare X1, 0
	307 JumpIfEqual {386}
	308 Move W8, [X1+24]
	309 Compare W8, 0
	310 JumpIfEqual {387}
	311 Move W8, 59
	312 NotImplemented "Instruction STRH not yet implemented."
	313 Compare X20, 0
	314 JumpIfEqual {388}
	315 Move X0, X20
	316 Move X2, X31
	317 Call String.Split, X0, X1
	318 Move X28, 0x21F7000
	319 Move X28, [X28+3408]
	320 Move X20, X0
	321 Move X8, [X28]
	322 Move W9, [X8+224]
	323 Compare W9, 0
	324 JumpIfNotEqual {328}
	325 Move X0, X8
	326 Call 0x1C17DFC
	327 Move X8, [X28]
	328 Move X9, [X8+184]
	329 Move X21, [X9+8]
	330 Compare X21, 0
	331 JumpIfNotEqual {354}
	332 Move W9, [X8+224]
	333 Compare W9, 0
	334 JumpIfNotEqual {338}
	335 Move X0, X8
	336 Call 0x1C17DFC
	337 Move X8, [X28]
	338 Move X9, 0x21F7000
	339 Move X8, [X8+184]
	340 Move X9, [X9+3504]
	341 Move X22, [X8]
	342 Move X0, [X9]
	343 Call 0x1C17F10
	344 Move X8, 0x21F7000
	345 Move X8, [X8+3560]
	346 Move X21, X0
	347 Move X2, [X8]
	348 Move X1, X22
	349 Move X3, X31
	350 Call Func`2<Object, Object>..ctor, X0, X1, X2
	351 Move X8, [X28]
	352 Move X8, [X8+184]
	353 Move [X8+8], X21
	354 Move X8, 0x21F7000
	355 Move X8, [X8+3488]
	356 Move X2, [X8]
	357 Move X0, X20
	358 Move X1, X21
	359 Call Enumerable.Select, X0, X1
	360 Move X8, 0x21EA000
	361 Move X8, [X8+3768]
	362 Move X1, [X8]
	363 Call Enumerable.ToArray, X0
	364 Move X8, X0
	365 Move W9, W31
	366 Move [X19+56], X0
	367 Move [X19+64], W31
	368 Move [X19], W31
	369 Move X8, [X31+24]
	370 Move [X19+48], X8
	371 Move X8, 0x21ED000
	372 Move X8, [X8+640]
	373 Move X0, [X8]
	374 Move W8, [X0+224]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Move X8, 0x21F7000
	379 Move X8, [X8+3480]
	380 Add X0, X19, 8
	381 Move X3, [X8]
	382 Add X1, X31, 24
	383 Move X2, X19
	384 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F28
	388 Call 0x1C17F20
	389 Move X20, [X31+96]
	390 Move X19, [X31+104]
	391 Move X22, [X31+80]
	392 Move X21, [X31+88]
	393 Move X24, [X31+64]
	394 Move X23, [X31+72]
	395 Move X26, [X31+48]
	396 Move X25, [X31+56]
	397 Move X28, [X31+32]
	398 Move X27, [X31+40]
	399 Move X30, [X31+16]
	400 Add X31, X31, 112
	401 Return 
	402 Move X0, [X23]
	403 Add X8, X8, W9
	404 Move X20, [X8+32]
	405 Move W9, [X0+224]
	406 Compare W9, 0
	407 JumpIfNotEqual {409}
	408 Call 0x1C17DFC
	409 Move X0, X20
	410 Call StunServers.ResolveStunServerInfo, X0
	411 Compare X0, 0
	412 JumpIfEqual {510}
	413 Move X1, [X26]
	414 Call Task`1<Object>.GetAwaiter, X0
	415 Move X1, [X27]
	416 Move [X31+8], X0
	417 Add X0, X31, 8
	418 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	419 Move TEMP, X0
	420 And TEMP, TEMP, 1
	421 Compare TEMP, 1
	422 JumpIfNotEqual {478}
	423 Move X1, [X24]
	424 Add X0, X31, 8
	425 Call TaskAwaiter`1<Object>.GetResult, X0
	426 Move X1, X0
	427 Compare X1, 0
	428 JumpIfEqual {434}
	429 Move X0, [X19+40]
	430 Compare X0, 0
	431 JumpIfEqual {512}
	432 Move X2, [X25]
	433 Call HashSet`1<Object>.Add, X0, X1
	434 Move W9, [X19+64]
	435 Move X8, [X19+56]
	436 Add W9, W9, 1
	437 Move [X19+64], W9
	438 Compare X8, 0
	439 JumpIfEqual {509}
	440 Move W10, [X8+24]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move [X19+56], X31
	443 Move X0, [X23]
	444 Move W8, [X0+224]
	445 Compare W8, 0
	446 JumpIfNotEqual {449}
	447 Call 0x1C17DFC
	448 Move X0, [X23]
	449 Move X8, [X0+184]
	450 Move X20, [X8+8]
	451 Call 0x1C17D44
	452 Move X0, [X23]
	453 Compare X20, 0
	454 JumpIfEqual {496}
	455 Move W8, [X0+224]
	456 Compare W8, 0
	457 JumpIfNotEqual {459}
	458 Call 0x1C17DFC
	459 Call 0x1C17D44
	460 Move X8, [X23]
	461 Move X8, [X8+184]
	462 Move [X8+16], W31
	463 Move TEMP, 1
	464 Not TEMP
	465 Move W8, TEMP
	466 Move [X19+40], X31
	467 Move [X19+8], W8
	468 Move X8, 0x21ED000
	469 Move X8, [X8+640]
	470 Move X0, [X8]
	471 Move W8, [X0+224]
	472 Compare W8, 0
	473 JumpIfNotEqual {475}
	474 Call 0x1C17DFC
	475 Move X0, X19
	476 Move X1, X31
	477 Call AsyncTaskMethodBuilder.SetResult, X0
	478 Move W8, 1
	479 Move [X19], W8
	480 Move X8, [X31+8]
	481 Move [X19+72], X8
	482 Move X8, 0x21ED000
	483 Move X8, [X8+640]
	484 Move X0, [X8]
	485 Move W8, [X0+224]
	486 Compare W8, 0
	487 JumpIfNotEqual {489}
	488 Call 0x1C17DFC
	489 Move X8, 0x21F7000
	490 Move X8, [X8+3472]
	491 Add X0, X19, 8
	492 Move X3, [X8]
	493 Add X1, X31, 8
	494 Move X2, X19
	495 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	496 Move W8, [X0+224]
	497 Compare W8, 0
	498 JumpIfNotEqual {501}
	499 Call 0x1C17DFC
	500 Move X0, [X23]
	501 Move X9, [X0+184]
	502 Move W8, W31
	503 Move X9, [X9]
	504 Move [X19+64], W31
	505 Move [X19+56], X9
	506 Compare X9, 0
	507 JumpIfNotEqual {134}
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Call 0x1C17F28
	512 Call 0x1C17F20
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Call 0x3EB2AD0
	515 Move X20, X0
	516 Move X0, 0x21EA000
	517 Move X0, [X0+2000]
	518 Call 0x1C17D08
	519 Move X8, [X20]
	520 Move X1, [X8]
	521 Call 0x1C18270
	522 Move TEMP, X0
	523 And TEMP, TEMP, 1
	524 Compare TEMP, 1
	525 JumpIfNotEqual {545}
	526 Move X20, [X20]
	527 Call 0x3EB2AE0
	528 Move TEMP, 1
	529 Not TEMP
	530 Move W8, TEMP
	531 Move [X19+40], X31
	532 Move [X19+8], W8
	533 Move X0, 0x21ED000
	534 Move X0, [X0+640]
	535 Call 0x1C17D08
	536 Move W8, [X0+224]
	537 Compare W8, 0
	538 JumpIfNotEqual {540}
	539 Call 0x1C17DFC
	540 Move X0, X19
	541 Move X1, X20
	542 Move X2, X31
	543 Call AsyncTaskMethodBuilder.SetException, X0, X1
	544 Move X19, X0
	545 Move W0, 8
	546 Call 0x3EB2AF0
	547 Move X8, [X20]
	548 Move [X0], X8
	549 Move X1, 0x1FAB000
	550 Add X1, X1, 3672
	551 Move X2, X31
	552 Call 0x3EB2B00
	553 Move X19, X0
	554 Call 0x3EB2AE0
	555 Move X0, X19
	556 Call 0x1D2D690
	557 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01F0AD7C SUBS X9, X9, 0x1
	0x01F0AD80 ADD X10, X10, 0x10
	0x01F0AD84 B.NE 0x1F0AD70
	0x01F0AD88 MOV X0, X28
	0x01F0AD8C MOV W2, W31
	0x01F0AD90 BL 0x1C5C788
	0x01F0AD94 B 0x1F0ADA4
	0x01F0AD98 LDRSW X9, [X10]
	0x01F0AD9C ADD X8, X8, X9, 0x4, LSL
	0x01F0ADA0 ADD X0, X8, 0x138
	0x01F0ADA4 LDP X8, X1, [X0]
	0x01F0ADA8 MOV X0, X28
	0x01F0ADAC BLR X8
	0x01F0ADB0 LDR X8, [X31 + 0x8]
	0x01F0ADB4 CBZ X8, 0x1F0ADD8
	0x01F0ADB8 LDR X0, [X31 + 0x8]
	0x01F0ADBC BL 0x1C16F18
	0x01F0ADC0 MOV X27, X1
	0x01F0ADC4 MOV X26, X0
	0x01F0ADC8 CBNZ X28, 0x1F0AD50
	0x01F0ADCC B 0x1F0ADB0
	0x01F0ADD0 MOV X27, X1
	0x01F0ADD4 MOV X26, X0
	0x01F0ADD8 MOV W24, W31
	0x01F0ADDC B 0x1F0AE10
	0x01F0ADE0 MOV X27, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24D0000
	007 Move X22, 0x21ED000
	008 Move W8, [X21+1680]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x21ED000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1680], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

