Type: Fusion.Sockets.Stun.StunResult

Method: System.Boolean get_IsValid()

Disassembly:
	0x01F08FA8 BLR X9
	0x01F08FAC MOV X22, X0
	0x01F08FB0 LDR X0, [X29]
	0x01F08FB4 LDRH W23, [X19 + 0x28]
	0x01F08FB8 LDR W8, [X0 + 0xE0]
	0x01F08FBC CBNZ W8, 0x1F08FC4
	0x01F08FC0 BL 0x1C16DFC
	0x01F08FC4 ADD X8, X31, 0x78
	0x01F08FC8 MOV X0, X22
	0x01F08FCC MOV W1, W23
	0x01F08FD0 MOV X2, X31
	0x01F08FD4 BL 0x1EF8988
	0x01F08FD8 LDUR V0, [X31 + 0x78]
	0x01F08FDC LDR X8, [X31 + 0x88]
	0x01F08FE0 STR V0, [X31 + 0xB]
	0x01F08FE4 STR X8, [X31 + 0xC0]
	0x01F08FE8 CBZ X25, 0x1F09278
	0x01F08FEC LDR X8, [X31 + 0xC0]
	0x01F08FF0 LDR V0, [X31 + 0xB]
	0x01F08FF4 STR X8, [X25 + 0x20]
	0x01F08FF8 STR V0, [X25 + 0x1]
	0x01F08FFC LDR X22, [X19 + 0x30]
	0x01F09000 CBZ X22, 0x1F0925C
	0x01F09004 LDR X0, [X29]
	0x01F09008 STP X31, X31, [X31 + 0xB0]
	0x01F0900C STR X31, [X31 + 0xC0]
	0x01F09010 LDR W8, [X0 + 0xE0]
	0x01F09014 CBNZ W8, 0x1F0901C
	0x01F09018 BL 0x1C16DFC
	0x01F0901C LDR V0, [X31 + 0xB]
	0x01F09020 LDR X8, [X31 + 0xC0]
	0x01F09024 ADD X0, X22, 0x28
	0x01F09028 STR V0, [X31 + 0x6]
	0x01F0902C STR X8, [X31 + 0x70]
	0x01F09030 ADD X1, X31, 0x60
	0x01F09034 MOV X2, X31
	0x01F09038 BL 0x1EF8788
	0x01F0903C TBZ X0, 0x0, 0x1F090BC
	0x01F09040 CBZ X21, 0x1F09270
	0x01F09044 MOV X0, X21
	0x01F09048 MOV X1, X31
	0x01F0904C BL 0x366D604
	0x01F09050 CMP W0, 0x17
	0x01F09054 B.NE 0x1F090BC
	0x01F09058 LDR X8, [X21]
	0x01F0905C LDR X23, [X19 + 0x30]
	0x01F09060 LDP X9, X1, [X8 + 0x168]
	0x01F09064 MOV X0, X21
	0x01F09068 BLR X9
	0x01F0906C MOV X21, X0
	0x01F09070 LDR X0, [X29]
	0x01F09074 LDRH W22, [X19 + 0x28]
	0x01F09078 LDR W8, [X0 + 0xE0]
	0x01F0907C CBNZ W8, 0x1F09084

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X20+40]
	009 Move X22, 0x24D2000
	010 Move X21, 0x21F6000
	011 Move X19, X0
	012 Move [X31+24], X8
	013 Move W8, [X22+1661]
	014 Move X21, [X21+120]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x21F6000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1661], W8
	024 Move X8, [X19+40]
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move X0, [X21]
	027 Move [X31+16], X8
	028 Move [X31], V0
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X0, X31, 0
	034 Move X1, X31
	035 Call NetAddress.get_IsValid, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {52}
	040 Move X8, [X19+64]
	041 Move V0, [X19+3]
	042 Move X0, [X21]
	043 Move [X31+16], X8
	044 Move [X31], V0
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X0, X31, 0
	050 Move X1, X31
	051 Call NetAddress.get_IsValid, X0
	052 Move W0, W31
	053 Move X8, [X20+40]
	054 Move X9, [X31+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X30, [X31+32]
	061 And W0, W0, 1
	062 Add X31, X31, 80
	063 Return X0
	064 Call 0x3EB2B20

Method: Fusion.Sockets.NetAddress get_PublicEndPoint()

Disassembly:
	0x01F09080 BL 0x1C16DFC
	0x01F09084 ADD X8, X31, 0x78
	0x01F09088 MOV X0, X21
	0x01F0908C MOV W1, W22
	0x01F09090 MOV X2, X31

ISIL:
	001 Move X9, [X0+40]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_PublicEndPoint(Fusion.Sockets.NetAddress value)

Disassembly:
	0x01F09094 BL 0x1EF8988
	0x01F09098 LDUR V0, [X31 + 0x78]
	0x01F0909C LDR X8, [X31 + 0x88]
	0x01F090A0 STR V0, [X31 + 0xB]
	0x01F090A4 STR X8, [X31 + 0xC0]

ISIL:
	001 Move X8, [X1+16]
	002 Move V0, [X1]
	003 Move [X0+40], X8
	004 Move [X0+24], V0
	005 Return 

Method: Fusion.Sockets.NetAddress get_PrivateEndPoint()

Disassembly:
	0x01F090A8 CBZ X23, 0x1F09274
	0x01F090AC LDR X8, [X31 + 0xC0]
	0x01F090B0 LDR V0, [X31 + 0xB]
	0x01F090B4 STR X8, [X23 + 0x38]
	0x01F090B8 STUR V0, [X23 + 0x28]

ISIL:
	001 Move X9, [X0+64]
	002 Move V0, [X0+3]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_PrivateEndPoint(Fusion.Sockets.NetAddress value)

Disassembly:
	0x01F090BC LDR X21, [X19 + 0x30]
	0x01F090C0 CBZ X21, 0x1F09260
	0x01F090C4 LDR X0, [X29]
	0x01F090C8 STP X31, X31, [X31 + 0xB0]
	0x01F090CC STR X31, [X31 + 0xC0]

ISIL:
	001 Move X8, [X1+16]
	002 Move V0, [X1]
	003 Move [X0+64], X8
	004 Move [X0+3], V0
	005 Return 

Method: System.Void .ctor(Fusion.Sockets.NetAddress publicEndPoint = null, Fusion.Sockets.NetAddress privateEndPoint = null)

Disassembly:
	0x01F090D0 LDR W8, [X0 + 0xE0]
	0x01F090D4 CBNZ W8, 0x1F090DC
	0x01F090D8 BL 0x1C16DFC
	0x01F090DC LDR V0, [X31 + 0xB]
	0x01F090E0 LDR X8, [X31 + 0xC0]
	0x01F090E4 ADD X0, X21, 0x10
	0x01F090E8 STR V0, [X31 + 0x4]
	0x01F090EC STR X8, [X31 + 0x50]
	0x01F090F0 ADD X1, X31, 0x40
	0x01F090F4 MOV X2, X31
	0x01F090F8 BL 0x1EF8788
	0x01F090FC TBNZ X0, 0x0, 0x1F09144
	0x01F09100 LDR X21, [X19 + 0x30]
	0x01F09104 CBZ X21, 0x1F0926C
	0x01F09108 LDR X0, [X29]
	0x01F0910C STP X31, X31, [X31 + 0xB0]
	0x01F09110 STR X31, [X31 + 0xC0]
	0x01F09114 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move X8, [X20+16]
	011 Move V0, [X20]
	012 Move [X21+40], X8
	013 Move [X21+24], V0
	014 Move X8, [X19+16]
	015 Move V0, [X19]
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move [X21+64], X8
	019 Move [X21+3], V0
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 

Method: Fusion.Sockets.Stun.StunResult BuildStunResult(Fusion.Sockets.NetAddress publicEndPoint1, Fusion.Sockets.NetAddress publicEndPoint2, Fusion.Sockets.NetAddress privateEndPoint)

Disassembly:
	0x01F079E4 CMP W8, W9
	0x01F079E8 B.CS 0x1F07A5C
	0x01F079EC LDRB W9, [X0 + 0x20]
	0x01F079F0 ADD X8, X19, X8
	0x01F079F4 STRB W9, [X8 + 0x20]
	0x01F079F8 LDRSW X8, [X20]
	0x01F079FC ADD W9, W8, 0x1
	0x01F07A00 STR W9, [X20]
	0x01F07A04 LDR W9, [X0 + 0x18]
	0x01F07A08 CBZ W9, 0x1F07A5C
	0x01F07A0C LDR W9, [X19 + 0x18]
	0x01F07A10 CMP W8, W9
	0x01F07A14 B.CS 0x1F07A5C
	0x01F07A18 LDRB W9, [X0 + 0x20]
	0x01F07A1C ADD X8, X19, X8
	0x01F07A20 STRB W9, [X8 + 0x20]
	0x01F07A24 LDRSW X8, [X20]
	0x01F07A28 ADD W9, W8, 0x1
	0x01F07A2C STR W9, [X20]
	0x01F07A30 LDR W9, [X0 + 0x18]
	0x01F07A34 CBZ W9, 0x1F07A5C
	0x01F07A38 LDR W9, [X19 + 0x18]
	0x01F07A3C CMP W8, W9
	0x01F07A40 B.CS 0x1F07A5C
	0x01F07A44 LDRB W9, [X0 + 0x20]
	0x01F07A48 ADD X8, X19, X8
	0x01F07A4C LDP X20, X19, [X31 + 0x10]
	0x01F07A50 STRB W9, [X8 + 0x20]
	0x01F07A54 LDR X30, [X31], #0x20
	0x01F07A58 RET
	0x01F07A5C BL 0x1C16F28
	0x01F07A60 BL 0x1C16F20
	0x01F07A64 SUB X31, X31, 0x70
	0x01F07A68 STP X29, X30, [X31 + 0x10]
	0x01F07A6C STP X28, X27, [X31 + 0x20]
	0x01F07A70 STP X26, X25, [X31 + 0x30]
	0x01F07A74 STP X24, X23, [X31 + 0x40]
	0x01F07A78 STP X22, X21, [X31 + 0x50]
	0x01F07A7C STP X20, X19, [X31 + 0x60]
	0x01F07A80 ADRP X19, 0x24D2000
	0x01F07A84 LDRB W8, [X19 + 0x67C]
	0x01F07A88 MOV X21, X2
	0x01F07A8C MOV X20, X1
	0x01F07A90 MOV X22, X0
	0x01F07A94 TBNZ X8, 0x0, 0x1F07AC4
	0x01F07A98 ADRP X0, 0x21EC000
	0x01F07A9C LDR X0, [X0 + 0x618]
	0x01F07AA0 BL 0x1C16CF4
	0x01F07AA4 ADRP X0, 0x21F9000
	0x01F07AA8 LDR X0, [X0 + 0x968]
	0x01F07AAC BL 0x1C16CF4
	0x01F07AB0 ADRP X0, 0x21F9000
	0x01F07AB4 LDR X0, [X0 + 0xBB8]
	0x01F07AB8 BL 0x1C16CF4
	0x01F07ABC MOVZ W8, 0x1
	0x01F07AC0 STRB W8, [X19 + 0x67C]
	0x01F07AC4 LDR W8, [X21]
	0x01F07AC8 MOVZ W13, 0x2112
	0x01F07ACC ADD W11, W8, 0x2
	0x01F07AD0 ADD W10, W8, 0x1
	0x01F07AD4 ADD W12, W8, 0x3
	0x01F07AD8 STR W11, [X21]
	0x01F07ADC ADD W9, W8, 0x4
	0x01F07AE0 LDRB W10, [X20, W10, SXTW]
	0x01F07AE4 STR W12, [X21]
	0x01F07AE8 LDRB W11, [X20, W11, SXTW]
	0x01F07AEC STR W9, [X21]
	0x01F07AF0 LDRB W12, [X20, W12, SXTW]
	0x01F07AF4 CMP W10, 0x2
	0x01F07AF8 BFM W12, W11, 0x18, 0x7
	0x01F07AFC EOR W19, W12, W13, 0x0
	0x01F07B00 B.EQ 0x1F07C18
	0x01F07B04 CMP W10, 0x1
	0x01F07B08 B.NE 0x1F07E20
	0x01F07B0C ADRP X8, 0x21EC000
	0x01F07B10 LDR X8, [X8 + 0x618]
	0x01F07B14 MOVZ W1, 0x4
	0x01F07B18 LDR X0, [X8]
	0x01F07B1C BL 0x1C16D6C
	0x01F07B20 LDRSW X9, [X21]
	0x01F07B24 ADD W8, W9, 0x1
	0x01F07B28 STR W8, [X21]
	0x01F07B2C CBZ X0, 0x1F07E48
	0x01F07B30 LDR W8, [X0 + 0x18]
	0x01F07B34 MOV X22, X0
	0x01F07B38 CBZ W8, 0x1F07E44
	0x01F07B3C LDRB W9, [X9, X20, LSL]
	0x01F07B40 CMP W8, 0x1
	0x01F07B44 STRB W9, [X22 + 0x20]
	0x01F07B48 LDRSW X9, [X21]
	0x01F07B4C ADD W10, W9, 0x1
	0x01F07B50 STR W10, [X21]
	0x01F07B54 B.EQ 0x1F07E44
	0x01F07B58 LDRB W9, [X9, X20, LSL]
	0x01F07B5C CMP W8, 0x2
	0x01F07B60 STRB W9, [X22 + 0x21]
	0x01F07B64 LDRSW X9, [X21]
	0x01F07B68 ADD W10, W9, 0x1
	0x01F07B6C STR W10, [X21]
	0x01F07B70 B.LS 0x1F07E44
	0x01F07B74 LDRB W9, [X9, X20, LSL]
	0x01F07B78 CMP W8, 0x3
	0x01F07B7C STRB W9, [X22 + 0x22]
	0x01F07B80 LDRSW X9, [X21]
	0x01F07B84 ADD W10, W9, 0x1
	0x01F07B88 STR W10, [X21]
	0x01F07B8C B.EQ 0x1F07E44
	0x01F07B90 LDRB W8, [X9, X20, LSL]
	0x01F07B94 MOV X0, X22
	0x01F07B98 MOV X1, X31
	0x01F07B9C STRB W8, [X22 + 0x23]
	0x01F07BA0 BL 0x33A1B08
	0x01F07BA4 MOV X0, X22
	0x01F07BA8 MOV W1, W31
	0x01F07BAC MOV X2, X31
	0x01F07BB0 BL 0x3317110
	0x01F07BB4 MOVZ W8, 0xA442
	0x01F07BB8 MOVK W8, 0x21120000
	0x01F07BBC EOR W0, W0, W8, 0x0
	0x01F07BC0 MOV X1, X31
	0x01F07BC4 BL 0x3316DC0
	0x01F07BC8 MOV X1, X31
	0x01F07BCC MOV X20, X0
	0x01F07BD0 BL 0x33A1B08
	0x01F07BD4 MOV X0, X20
	0x01F07BD8 MOV W1, W31
	0x01F07BDC MOV X2, X31
	0x01F07BE0 BL 0x3317110
	0x01F07BE4 ADRP X8, 0x21F9000
	0x01F07BE8 LDR X8, [X8 + 0xBB8]
	0x01F07BEC MOV W20, W0
	0x01F07BF0 LDR X8, [X8]
	0x01F07BF4 MOV X0, X8
	0x01F07BF8 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+224], X29
	003 Move [X31+240], X30
	004 Move [X31+248], X25
	005 Move [X31+256], X24
	006 Move [X31+264], X23
	007 Move [X31+272], X22
	008 Move [X31+280], X21
	009 Move [X31+288], X20
	010 Move [X31+296], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X25, 0x24D3000
	014 Move X20, 0x21F7000
	015 Move X24, 0x21F7000
	016 Move [X31+216], X8
	017 Move W8, [X25+1662]
	018 Move X20, [X20+720]
	019 Move X24, [X24+120]
	020 Move X22, X2
	021 Move X21, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x21F7000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move X0, 0x21F7000
	031 Move X0, [X0+720]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+1662], W8
	035 Move X8, [X19+16]
	036 Move V0, [X19]
	037 Move X0, [X20]
	038 Move [X31+208], X8
	039 Move [X31+12], V0
	040 Move X8, [X22+16]
	041 Move V0, [X22]
	042 Move [X31+176], X8
	043 Move [X31+10], V0
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call Object..ctor, X0
	048 Move X8, [X31+208]
	049 Move V0, [X31+12]
	050 Move [X20+40], X8
	051 Move [X20+24], V0
	052 Move X8, [X31+176]
	053 Move V0, [X31+10]
	054 Move [X20+16], W31
	055 Move [X20+64], X8
	056 Move [X20+3], V0
	057 Move X0, [X24]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X24]
	063 Move X8, [X0+184]
	064 Add X1, X31, 128
	065 Move X0, X19
	066 Move X2, X31
	067 Move X9, [X8+16]
	068 Move V0, [X8]
	069 Move [X31+144], X9
	070 Move [X31+8], V0
	071 Call NetAddress.Equals, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {96}
	076 Move X0, [X24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X24]
	082 Move X8, [X0+184]
	083 Add X1, X31, 96
	084 Move X0, X21
	085 Move X2, X31
	086 Move X9, [X8+16]
	087 Move V0, [X8]
	088 Move [X31+112], X9
	089 Move [X31+6], V0
	090 Call NetAddress.Equals, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {96}
	095 Move W8, 1
	096 Move X8, [X22+16]
	097 Move V0, [X22]
	098 Move X0, [X24]
	099 Move [X31+80], X8
	100 Move [X31+4], V0
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move V0, [X31+4]
	106 Move X8, [X31+80]
	107 Add X1, X31, 32
	108 Move X0, X19
	109 Move X2, X31
	110 Move [X31+2], V0
	111 Move [X31+48], X8
	112 Call NetAddress.Equals, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {118}
	117 Move W8, 2
	118 Move X8, [X21+16]
	119 Move V0, [X21]
	120 Move X0, [X24]
	121 Move [X31+80], X8
	122 Move [X31+4], V0
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move V0, [X31+4]
	128 Move X8, [X31+80]
	129 Add X1, X31, 0
	130 Move X0, X19
	131 Move X2, X31
	132 Move [X31], V0
	133 Move [X31+16], X8
	134 Call NetAddress.Equals, X0, X1
	135 And W31, W0, 1
	136 Move W8, 8
	137 Move W9, 4
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Move [X20+16], W8
	140 Move X8, [X23+40]
	141 Move X9, [X31+216]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, X20
	144 Move X20, [X31+288]
	145 Move X19, [X31+296]
	146 Move X22, [X31+272]
	147 Move X21, [X31+280]
	148 Move X24, [X31+256]
	149 Move X23, [X31+264]
	150 Move X30, [X31+240]
	151 Move X25, [X31+248]
	152 Move X29, [X31+224]
	153 Add X31, X31, 304
	154 Return X0
	155 Call 0x3EB2B20

Method: System.String ToString()

Disassembly:
	0x01F09118 CBNZ W8, 0x1F09120
	0x01F0911C BL 0x1C16DFC
	0x01F09120 LDR V0, [X31 + 0xB]
	0x01F09124 LDR X8, [X31 + 0xC0]
	0x01F09128 ADD X0, X21, 0x28
	0x01F0912C STR V0, [X31 + 0x2]
	0x01F09130 STR X8, [X31 + 0x30]
	0x01F09134 ADD X1, X31, 0x20
	0x01F09138 MOV X2, X31
	0x01F0913C BL 0x1EF8788
	0x01F09140 TBZ X0, 0x0, 0x1F09154
	0x01F09144 LDR W8, [X20 + 0x18]
	0x01F09148 ADD X26, X26, 0x1
	0x01F0914C CMP X26, W8, SXTW
	0x01F09150 B.LT 0x1F08F10
	0x01F09154 LDR X0, [X19 + 0x30]
	0x01F09158 CBZ X0, 0x1F0927C
	0x01F0915C BL 0x1F085C4
	0x01F09160 ADRP X23, 0x21F7000
	0x01F09164 LDR X23, [X23 + 0xD08]
	0x01F09168 TBZ X0, 0x0, 0x1F09174
	0x01F0916C LDR X20, [X19 + 0x30]
	0x01F09170 B 0x1F09178
	0x01F09174 MOV X20, X31
	0x01F09178 MOVN W8, 0x1
	0x01F0917C STR W8, [X19]
	0x01F09180 STR X31, [X19 + 0x30]
	0x01F09184 LDR X0, [X23]
	0x01F09188 ADRP X21, 0x21F7000
	0x01F0918C ADD X19, X19, 0x8
	0x01F09190 LDR W8, [X0 + 0xE0]
	0x01F09194 LDR X21, [X21 + 0xD60]
	0x01F09198 CBNZ W8, 0x1F091A0
	0x01F0919C BL 0x1C16DFC
	0x01F091A0 LDR X2, [X21]
	0x01F091A4 MOV X0, X19
	0x01F091A8 MOV X1, X20
	0x01F091AC BL 0x26322B0
	0x01F091B0 LDR X8, [X24 + 0x28]
	0x01F091B4 LDR X9, [X31 + 0xE8]
	0x01F091B8 CMP X8, X9
	0x01F091BC B.NE 0x1F092A8
	0x01F091C0 LDP X20, X19, [X31 + 0x140]
	0x01F091C4 LDP X22, X21, [X31 + 0x130]
	0x01F091C8 LDP X24, X23, [X31 + 0x120]
	0x01F091CC LDP X26, X25, [X31 + 0x110]
	0x01F091D0 LDP X28, X27, [X31 + 0x100]
	0x01F091D4 LDP X29, X30, [X31 + 0xF0]
	0x01F091D8 ADD X31, X31, 0x150
	0x01F091DC RET
	0x01F091E0 MOV X0, X21
	0x01F091E4 MOV X1, X31
	0x01F091E8 BL 0x369B774
	0x01F091EC CBZ X0, 0x1F0929C
	0x01F091F0 ADRP X8, 0x21F7000
	0x01F091F4 LDR X8, [X8 + 0xD78]
	0x01F091F8 LDR X1, [X8]
	0x01F091FC BL 0x269F5D0
	0x01F09200 ADRP X8, 0x21F7000
	0x01F09204 LDR X8, [X8 + 0xD70]
	0x01F09208 STR X0, [X31 + 0x10]
	0x01F0920C LDR X1, [X8]
	0x01F09210 ADD X0, X31, 0x10
	0x01F09214 BL 0x2677430
	0x01F09218 TBNZ X0, 0x0, 0x1F08ECC
	0x01F0921C STR W31, [X19]
	0x01F09220 LDR X8, [X31 + 0x10]
	0x01F09224 STR X8, [X19 + 0x38]
	0x01F09228 LDR X0, [X23]
	0x01F0922C LDR W8, [X0 + 0xE0]
	0x01F09230 CBNZ W8, 0x1F09238
	0x01F09234 BL 0x1C16DFC
	0x01F09238 ADRP X8, 0x21F7000
	0x01F0923C LDR X8, [X8 + 0xD58]
	0x01F09240 ADD X0, X19, 0x8
	0x01F09244 LDR X3, [X8]
	0x01F09248 ADD X1, X31, 0x10
	0x01F0924C MOV X2, X19
	0x01F09250 BL 0x1FC3594
	0x01F09254 B 0x1F091B0
	0x01F09258 BL 0x1C16F28
	0x01F0925C BL 0x1C16F20
	0x01F09260 BL 0x1C16F20
	0x01F09264 BL 0x1C16F20
	0x01F09268 BL 0x1C16F20
	0x01F0926C BL 0x1C16F20
	0x01F09270 BL 0x1C16F20
	0x01F09274 BL 0x1C16F20
	0x01F09278 BL 0x1C16F20
	0x01F0927C BL 0x1C16F20
	0x01F09280 BL 0x1C16F20
	0x01F09284 BL 0x1C16F20
	0x01F09288 BL 0x1C16F28
	0x01F0928C BL 0x1C16F20
	0x01F09290 BL 0x1C16F20
	0x01F09294 BL 0x1C16F28
	0x01F09298 BL 0x1C16F20
	0x01F0929C BL 0x1C16F20
	0x01F092A0 BL 0x1C16F20
	0x01F092A4 BL 0x1C16F20
	0x01F092A8 BL 0x3EB1B20
	0x01F092AC B 0x1F09330
	0x01F092B0 B 0x1F09330
	0x01F092B4 B 0x1F09380
	0x01F092B8 B 0x1F09330
	0x01F092BC B 0x1F09330
	0x01F092C0 B 0x1F09330
	0x01F092C4 B 0x1F09380
	0x01F092C8 B 0x1F09330
	0x01F092CC B 0x1F09380
	0x01F092D0 B 0x1F09330
	0x01F092D4 B 0x1F09330
	0x01F092D8 B 0x1F09380
	0x01F092DC B 0x1F09330
	0x01F092E0 B 0x1F09330
	0x01F092E4 B 0x1F09330
	0x01F092E8 B 0x1F09330
	0x01F092EC B 0x1F09380
	0x01F092F0 B 0x1F09380
	0x01F092F4 B 0x1F09330
	0x01F092F8 B 0x1F09330
	0x01F092FC B 0x1F09330
	0x01F09300 B 0x1F09380
	0x01F09304 B 0x1F09380
	0x01F09308 B 0x1F09330
	0x01F0930C B 0x1F09330
	0x01F09310 B 0x1F09380
	0x01F09314 B 0x1F09330
	0x01F09318 B 0x1F09380
	0x01F0931C B 0x1F09380
	0x01F09320 B 0x1F09380
	0x01F09324 B 0x1F09380
	0x01F09328 B 0x1F09380
	0x01F0932C B 0x1F09380
	0x01F09330 MOV X20, X1
	0x01F09334 MOV X21, X0
	0x01F09338 B 0x1F093F4
	0x01F0933C B 0x1F09380
	0x01F09340 B 0x1F09380
	0x01F09344 B 0x1F09380
	0x01F09348 B 0x1F09380
	0x01F0934C B 0x1F09380
	0x01F09350 B 0x1F09380
	0x01F09354 B 0x1F09380
	0x01F09358 B 0x1F09380
	0x01F0935C B 0x1F09380
	0x01F09360 B 0x1F09380
	0x01F09364 B 0x1F09380
	0x01F09368 B 0x1F09380
	0x01F0936C B 0x1F09380
	0x01F09370 B 0x1F09380
	0x01F09374 B 0x1F09380
	0x01F09378 B 0x1F09380
	0x01F0937C B 0x1F09380
	0x01F09380 MOV X20, X1
	0x01F09384 MOV X21, X0
	0x01F09388 CMP W20, 0x1
	0x01F0938C B.NE 0x1F093F4
	0x01F09390 MOV X0, X21
	0x01F09394 BL 0x3EB1AD0
	0x01F09398 MOV X20, X0
	0x01F0939C ADRP X0, 0x21EA000
	0x01F093A0 LDR X0, [X0 + 0x7D0]
	0x01F093A4 BL 0x1C16D08
	0x01F093A8 LDR X8, [X20]
	0x01F093AC LDR X1, [X8]
	0x01F093B0 BL 0x1C17270
	0x01F093B4 TBZ X0, 0x0, 0x1F093C0
	0x01F093B8 BL 0x3EB1AE0
	0x01F093BC B 0x1F09154
	0x01F093C0 MOVZ W0, 0x8
	0x01F093C4 BL 0x3EB1AF0
	0x01F093C8 LDR X8, [X20]
	0x01F093CC STR X8, [X0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+96], X24
	004 Move [X31+104], X23
	005 Move [X31+112], X22
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X20, 0x24D1000
	012 Move X21, 0x21EB000
	013 Move X19, X0
	014 Move [X31+72], X8
	015 Move W8, [X20+1663]
	016 Move X21, [X21+2512]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x21F8000
	022 Move X0, [X0+2256]
	023 Call 0x1C17CF4
	024 Move X0, 0x21F5000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move X0, 0x21EB000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0x21F8000
	031 Move X0, [X0+3272]
	032 Call 0x1C17CF4
	033 Move X0, 0x21F8000
	034 Move X0, [X0+2272]
	035 Call 0x1C17CF4
	036 Move X0, 0x21F8000
	037 Move X0, [X0+3280]
	038 Call 0x1C17CF4
	039 Move X0, 0x21F8000
	040 Move X0, [X0+3288]
	041 Call 0x1C17CF4
	042 Move X0, 0x21F8000
	043 Move X0, [X0+3296]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+1663], W8
	047 Move X0, [X21]
	048 Move W1, 7
	049 Call 0x1C17D6C
	050 Compare X0, 0
	051 JumpIfEqual {191}
	052 Move X21, 0x21F8000
	053 Move X21, [X21+3280]
	054 Move X20, X0
	055 Move X0, [X21]
	056 Compare X0, 0
	057 JumpIfEqual {63}
	058 Move X8, [X20]
	059 Move X1, [X8+64]
	060 Call 0x1C17E00
	061 Compare X0, 0
	062 JumpIfEqual {188}
	063 Move W8, [X20+24]
	064 Compare W8, 0
	065 JumpIfEqual {187}
	066 Move X9, [X21]
	067 Move X21, 0x21F8000
	068 Move X21, [X21+3296]
	069 Move [X20+32], X9
	070 Move X0, [X21]
	071 Compare X0, 0
	072 JumpIfEqual {79}
	073 Move X8, [X20]
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {188}
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, [X21]
	081 Move X23, 0x21F5000
	082 Move X23, [X23+120]
	083 Add X1, X31, 48
	084 Move [X20+40], X8
	085 Move X8, [X19+40]
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Move X0, [X23]
	088 Move [X31+64], X8
	089 Move [X31+3], V0
	090 Call 0x1C17E04
	091 Move X21, X0
	092 Compare X0, 0
	093 JumpIfEqual {100}
	094 Move X8, [X20]
	095 Move X0, X21
	096 Move X1, [X8+64]
	097 Call 0x1C17E00
	098 Compare X0, 0
	099 JumpIfEqual {188}
	100 Move W8, [X20+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X24, 0x21F8000
	103 Move X24, [X24+3272]
	104 Move [X20+48], X21
	105 Move X0, [X24]
	106 Compare X0, 0
	107 JumpIfEqual {114}
	108 Move X8, [X20]
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {188}
	113 Move W8, [X20+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X24]
	116 Add X1, X31, 16
	117 Move [X20+56], X8
	118 Move X8, [X19+64]
	119 Move V0, [X19+3]
	120 Move X0, [X23]
	121 Move [X31+32], X8
	122 Move [X31+1], V0
	123 Call 0x1C17E04
	124 Move X21, X0
	125 Compare X0, 0
	126 JumpIfEqual {133}
	127 Move X8, [X20]
	128 Move X0, X21
	129 Move X1, [X8+64]
	130 Call 0x1C17E00
	131 Compare X0, 0
	132 JumpIfEqual {188}
	133 Move W8, [X20+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X23, 0x21F8000
	136 Move X23, [X23+2272]
	137 Move [X20+64], X21
	138 Move X0, [X23]
	139 Compare X0, 0
	140 JumpIfEqual {147}
	141 Move X8, [X20]
	142 Move X1, [X8+64]
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {188}
	146 Move W8, [X20+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, [X23]
	149 Move X9, 0x21F8000
	150 Move X9, [X9+2256]
	151 Add X1, X31, 12
	152 Move [X20+72], X8
	153 Move W8, [X19+16]
	154 Move X0, [X9]
	155 Move [X31+12], W8
	156 Call 0x1C17E04
	157 Move X19, X0
	158 Compare X0, 0
	159 JumpIfEqual {166}
	160 Move X8, [X20]
	161 Move X0, X19
	162 Move X1, [X8+64]
	163 Call 0x1C17E00
	164 Compare X0, 0
	165 JumpIfEqual {188}
	166 Move W8, [X20+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, 0x21F8000
	169 Move X8, [X8+3288]
	170 Move [X20+80], X19
	171 Move X1, X20
	172 Move X2, X31
	173 Move X0, [X8]
	174 Call String.Format, X0, X1
	175 Move X8, [X22+40]
	176 Move X9, [X31+72]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X20, [X31+128]
	179 Move X19, [X31+136]
	180 Move X22, [X31+112]
	181 Move X21, [X31+120]
	182 Move X24, [X31+96]
	183 Move X23, [X31+104]
	184 Move X30, [X31+80]
	185 Add X31, X31, 144
	186 Return X0
	187 Call 0x1C17F28
	188 Call 0x1C17F44
	189 Move X1, X31
	190 Call 0x1C17DEC
	191 Call 0x1C17F20
	192 Call 0x3EB2B20

Method: System.Void .cctor()

Disassembly:
	0x01F093D0 ADRP X1, 0x1FAB000
	0x01F093D4 ADD X1, X1, 0xE58
	0x01F093D8 MOV X2, X31
	0x01F093DC BL 0x3EB1B00
	0x01F093E0 B 0x1F09490
	0x01F093E4 B 0x1F09330
	0x01F093E8 MOV X20, X1
	0x01F093EC MOV X21, X0
	0x01F093F0 BL 0x3EB1AE0
	0x01F093F4 CMP W20, 0x1
	0x01F093F8 B.NE 0x1F09498
	0x01F093FC MOV X0, X21
	0x01F09400 BL 0x3EB1AD0
	0x01F09404 MOV X20, X0
	0x01F09408 ADRP X0, 0x21EA000
	0x01F0940C LDR X0, [X0 + 0x7D0]
	0x01F09410 BL 0x1C16D08
	0x01F09414 LDR X8, [X20]
	0x01F09418 LDR X1, [X8]
	0x01F0941C BL 0x1C17270
	0x01F09420 TBZ X0, 0x0, 0x1F09470
	0x01F09424 LDR X20, [X20]
	0x01F09428 BL 0x3EB1AE0
	0x01F0942C MOVN W8, 0x1
	0x01F09430 STR X31, [X19 + 0x30]
	0x01F09434 STR W8, [X19], #0x8
	0x01F09438 ADRP X0, 0x21F7000
	0x01F0943C LDR X0, [X0 + 0xD08]
	0x01F09440 BL 0x1C16D08
	0x01F09444 LDR W8, [X0 + 0xE0]
	0x01F09448 CBNZ W8, 0x1F09450
	0x01F0944C BL 0x1C16DFC
	0x01F09450 ADRP X0, 0x21F7000
	0x01F09454 LDR X0, [X0 + 0xD80]
	0x01F09458 BL 0x1C16D08
	0x01F0945C MOV X2, X0
	0x01F09460 MOV X0, X19
	0x01F09464 MOV X1, X20
	0x01F09468 BL 0x26324C8
	0x01F0946C B 0x1F091B0
	0x01F09470 MOVZ W0, 0x8
	0x01F09474 BL 0x3EB1AF0
	0x01F09478 LDR X8, [X20]
	0x01F0947C STR X8, [X0]
	0x01F09480 ADRP X1, 0x1FAB000
	0x01F09484 ADD X1, X1, 0xE58
	0x01F09488 MOV X2, X31
	0x01F0948C BL 0x3EB1B00
	0x01F09490 MOV X21, X0
	0x01F09494 BL 0x3EB1AE0
	0x01F09498 MOV X0, X21
	0x01F0949C BL 0x1D2C690
	0x01F094A0 BL 0x1990590
	0x01F094A4 STR X30, [X31 - 0x30]!
	0x01F094A8 STP X22, X21, [X31 + 0x10]
	0x01F094AC STP X20, X19, [X31 + 0x20]
	0x01F094B0 ADRP X22, 0x24D0000
	0x01F094B4 ADRP X21, 0x21F7000
	0x01F094B8 LDRB W8, [X22 + 0x68E]
	0x01F094BC LDR X21, [X21 + 0xD08]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X20+40]
	008 Move X21, 0x24D1000
	009 Move X19, 0x21F5000
	010 Move [X31+56], X8
	011 Move W8, [X21+1664]
	012 Move X19, [X19+120]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x21F5000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move X0, 0x21F5000
	021 Move X0, [X0+720]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1664], W8
	025 Move X0, [X19]
	026 Move X21, 0x21F5000
	027 Move W8, [X0+224]
	028 Move X21, [X21+720]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X19]
	033 Move X8, [X0+184]
	034 Move X0, [X21]
	035 Move X9, [X8+16]
	036 Move V0, [X8]
	037 Move [X31+48], X9
	038 Move [X31+2], V0
	039 Move X9, [X8+16]
	040 Move V0, [X8]
	041 Move [X31+16], X9
	042 Move [X31], V0
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X19, X0
	046 Call Object..ctor, X0
	047 Move X8, [X31+48]
	048 Move V0, [X31+2]
	049 Move [X19+40], X8
	050 Move [X19+24], V0
	051 Move X8, [X31+16]
	052 Move V0, [X31]
	053 Move [X19+64], X8
	054 Move [X19+3], V0
	055 Move X8, [X21]
	056 Move X8, [X8+184]
	057 Move [X8], X19
	058 Move X8, [X20+40]
	059 Move X9, [X31+56]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, [X31+80]
	062 Move X19, [X31+88]
	063 Move X30, [X31+64]
	064 Move X21, [X31+72]
	065 Add X31, X31, 96
	066 Return 
	067 Call 0x3EB2B20

