Type: Fusion.Sockets.NetConfigSimulation

Method: Fusion.Sockets.NetConfigSimulation get_Defaults()

Disassembly:
	0x01EFCA68 LDR X21, [X21 + 0x78]
	0x01EFCA6C MOV X20, X1
	0x01EFCA70 MOV X19, X0
	0x01EFCA74 TBNZ X8, 0x0, 0x1EFCA8C
	0x01EFCA78 ADRP X0, 0x2201000
	0x01EFCA7C LDR X0, [X0 + 0x78]
	0x01EFCA80 BL 0x1C16CF4
	0x01EFCA84 MOVZ W8, 0x1
	0x01EFCA88 STRB W8, [X22 + 0x637]
	0x01EFCA8C LDR X0, [X21]
	0x01EFCA90 LDP X23, X22, [X20]
	0x01EFCA94 LDR X21, [X20 + 0x10]
	0x01EFCA98 LDR W8, [X0 + 0xE0]
	0x01EFCA9C CBNZ W8, 0x1EFCAA4
	0x01EFCAA0 BL 0x1C16DFC
	0x01EFCAA4 UBFM X8, X23, 0x3B, 0x3A
	0x01EFCAA8 SUB X8, X8, X23
	0x01EFCAAC ADD X8, X8, X22
	0x01EFCAB0 LDR X11, [X19 + 0x40]
	0x01EFCAB4 UBFM X10, X8, 0x3B, 0x3A
	0x01EFCAB8 MOVZ W9, 0xBA4F
	0x01EFCABC SUB X8, X10, X8
	0x01EFCAC0 MOVK W9, 0x70000
	0x01EFCAC4 ADD X10, X8, X21
	0x01EFCAC8 LDR X8, [X19]
	0x01EFCACC ADD X10, X10, X9
	0x01EFCAD0 UDIV X9, X10, X11
	0x01EFCAD4 MSUB X9, X9, X11, X10
	0x01EFCAD8 LDR X12, [X8, X9, LSL #3]
	0x01EFCADC CBZ X12, 0x1EFCB30
	0x01EFCAE0 MOV X21, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MRS not yet implemented."
	004 Move X10, [X9+40]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move [X31+56], X10
	007 Move [X31+4], W31
	008 Move [X31+8], V0
	009 Move [X31+24], V0
	010 Move [X31+40], V0
	011 Move [X8+64], V0
	012 Move [X8+72], V0
	013 Move [X8+6], V0
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move W10, [X31+52]
	016 NotImplemented "Instruction LDUR not yet implemented."
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 Move [X8], X31
	019 Move [X8+8], W31
	020 Move [X8+112], X31
	021 Move [X8+60], W10
	022 Move [X8+44], V0
	023 Move [X8+28], V2
	024 Move [X8+12], V1
	025 Move X8, [X9+40]
	026 Move X9, [X31+56]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X30, [X31+64]
	029 Add X31, X31, 80
	030 Return X0
	031 Call 0x3EB2B20

Method: Fusion.Sockets.NetConfigSimulation WithLossNotifySequences(System.Int16[] sequences)

Disassembly:
	0x01EFCAFC LDR X13, [X20]
	0x01EFCB00 CMP X12, X13
	0x01EFCB04 B.NE 0x1EFCB28
	0x01EFCB08 LDR X12, [X21 + 0x30]
	0x01EFCB0C LDR X13, [X20 + 0x8]
	0x01EFCB10 CMP X12, X13
	0x01EFCB14 B.NE 0x1EFCB28
	0x01EFCB18 LDR X12, [X21 + 0x38]
	0x01EFCB1C LDR X13, [X20 + 0x10]
	0x01EFCB20 CMP X12, X13
	0x01EFCB24 B.EQ 0x1EFCB44
	0x01EFCB28 LDR X12, [X21 + 0x8]
	0x01EFCB2C CBNZ X12, 0x1EFCAE4
	0x01EFCB30 MOV W0, W31
	0x01EFCB34 LDP X20, X19, [X31 + 0x20]
	0x01EFCB38 LDP X22, X21, [X31 + 0x10]
	0x01EFCB3C LDP X30, X23, [X31], #0x30
	0x01EFCB40 RET
	0x01EFCB44 LDR X10, [X21 + 0x8]
	0x01EFCB48 CBZ X11, 0x1EFCB54
	0x01EFCB4C STR X10, [X11 + 0x8]
	0x01EFCB50 B 0x1EFCB58
	0x01EFCB54 STR X10, [X8, X9, LSL #3]
	0x01EFCB58 LDR X1, [X21 + 0x128]
	0x01EFCB5C MOV X0, X19
	0x01EFCB60 BL 0x1EFCB90
	0x01EFCB64 MOV X0, X21
	0x01EFCB68 BL 0x1EFBF8C
	0x01EFCB6C LDR X8, [X19 + 0x8]
	0x01EFCB70 MOVZ W0, 0x1
	0x01EFCB74 STR W0, [X21 + 0x10]
	0x01EFCB78 STR X8, [X21 + 0x8]
	0x01EFCB7C LDR X8, [X19 + 0x30]
	0x01EFCB80 STR X21, [X19 + 0x8]
	0x01EFCB84 ADD X8, X8, 0x1
	0x01EFCB88 STR X8, [X19 + 0x30]
	0x01EFCB8C B 0x1EFCB34
	0x01EFCB90 STR X30, [X31 - 0x20]!
	0x01EFCB94 STP X20, X19, [X31 + 0x10]
	0x01EFCB98 MOV X20, X1
	0x01EFCB9C MOV X19, X0
	0x01EFCBA0 BL 0x1EFD100
	0x01EFCBA4 LDR X9, [X19 + 0x38]
	0x01EFCBA8 CMP X9, X0
	0x01EFCBAC B.LS 0x1EFCBF8
	0x01EFCBB0 LDR X10, [X19 + 0x18]
	0x01EFCBB4 MOV X8, X0
	0x01EFCBB8 ADDS X0, X10, X0, 0x4, LSL
	0x01EFCBBC B.EQ 0x1EFCC08
	0x01EFCBC0 LDR X10, [X0]
	0x01EFCBC4 CMP X10, X20
	0x01EFCBC8 B.NE 0x1EFCBF8
	0x01EFCBCC ORN W8, W31, W8, 0x0
	0x01EFCBD0 ADD W8, W9, W8
	0x01EFCBD4 ADD X1, X0, 0x10
	0x01EFCBD8 UBFM W2, W8, 0x1C, 0x1B
	0x01EFCBDC MOV X3, X31
	0x01EFCBE0 BL 0x1E35758
	0x01EFCBE4 LDR X8, [X19 + 0x38]
	0x01EFCBE8 MOVZ W0, 0x1
	0x01EFCBEC SUB X8, X8, 0x1
	0x01EFCBF0 STR X8, [X19 + 0x38]
	0x01EFCBF4 B 0x1EFCBFC
	0x01EFCBF8 MOV W0, W31
	0x01EFCBFC LDP X20, X19, [X31 + 0x10]
	0x01EFCC00 LDR X30, [X31], #0x20
	0x01EFCC04 RET
	0x01EFCC08 BL 0x1C16F20
	0x01EFCC0C SUB X31, X31, 0xC0
	0x01EFCC10 STP X30, X27, [X31 + 0x70]
	0x01EFCC14 STP X26, X25, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X9, [X22+40]
	009 Move X20, 0x24DE000
	010 Move X21, X0
	011 Move X19, X8
	012 Move [X31+120], X9
	013 Move W9, [X20+1584]
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2205000
	019 Move X0, [X0+2576]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1584], W8
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move [X31+64], V0
	025 Move [X31+72], V0
	026 Move [X31+6], V0
	027 Move [X31], V0
	028 Move [X31+8], V0
	029 Move [X31+2], V0
	030 Move [X31+48], X31
	031 Compare X21, 0
	032 JumpIfEqual {82}
	033 Move X20, [X21+24]
	034 Compare X20, 0
	035 JumpIfEqual {53}
	036 Move X8, 0x2205000
	037 Move X8, [X8+2576]
	038 Move W0, W20
	039 Move X1, [X8]
	040 Call Native.MallocAndClearArray, X0
	041 Move X9, [X21+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 And X9, X9, 0
	044 Move X8, X31
	045 Move X10, W9
	046 Add X11, X21, 32
	047 Move X12, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Add X8, X8, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction STRH not yet implemented."
	053 Move X0, X31
	054 Move V0, [X31+64]
	055 Move V1, [X31+80]
	056 Move V2, [X31]
	057 Move V3, [X31+16]
	058 Move V4, [X31+2]
	059 Move X8, [X31+48]
	060 Move [X19+16], V0
	061 Move [X19+24], V1
	062 Move V0, [X31+6]
	063 Move [X19], X0
	064 Move [X19+8], W20
	065 Move [X19+12], W31
	066 Move [X19+112], X8
	067 Move [X19+80], V3
	068 Move [X19+88], V4
	069 Move [X19+48], V0
	070 Move [X19+56], V2
	071 Move X8, [X22+40]
	072 Move X9, [X31+120]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X20, [X31+160]
	075 Move X19, [X31+168]
	076 Move X22, [X31+144]
	077 Move X21, [X31+152]
	078 Move X30, [X31+128]
	079 Add X31, X31, 176
	080 Return X0
	081 Call 0x1C17F28
	082 Call 0x1C17F20
	083 Call 0x3EB2B20

