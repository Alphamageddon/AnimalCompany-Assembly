Type: Fusion.Sockets.NetBitBufferStack

Method: System.Boolean TryPop(Fusion.Sockets.NetBitBuffer* result)

Disassembly:
	0x01EFC2CC ADRP X9, 0x21F9000
	0x01EFC2D0 LDR X9, [X9 + 0xA60]
	0x01EFC2D4 ADD X1, X31, 0x8
	0x01EFC2D8 STR X8, [X20 + 0x38]
	0x01EFC2DC LDR X8, [X19 + 0x128]
	0x01EFC2E0 LDR X0, [X9]
	0x01EFC2E4 STR X8, [X31 + 0x8]
	0x01EFC2E8 BL 0x1C16E04
	0x01EFC2EC MOV X19, X0
	0x01EFC2F0 CBZ X0, 0x1EFC308

ISIL:
	001 Move W8, [X0+16]
	002 Compare W8, 0
	003 JumpIfEqual {9}
	004 Move X9, [X0+8]
	005 Subtract W10, W8, 1
	006 Move [X0+16], W10
	007 Move X9, [X9]
	008 Move [X1], X9
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0

Method: Fusion.Sockets.NetBitBufferStack Create(System.Int32 capacity)

Disassembly:
	0x01EFC2F4 LDR X8, [X20]
	0x01EFC2F8 MOV X0, X19
	0x01EFC2FC LDR X1, [X8 + 0x40]
	0x01EFC300 BL 0x1C16E00
	0x01EFC304 CBZ X0, 0x1EFC358
	0x01EFC308 LDR W8, [X20 + 0x18]
	0x01EFC30C CMP W8, 0x4
	0x01EFC310 B.LS 0x1EFC354
	0x01EFC314 ADRP X8, 0x2201000
	0x01EFC318 LDR X8, [X8 + 0x318]
	0x01EFC31C STR X19, [X20 + 0x40]
	0x01EFC320 MOV X1, X20
	0x01EFC324 MOV X2, X31
	0x01EFC328 LDR X0, [X8]
	0x01EFC32C BL 0x3227C5C
	0x01EFC330 LDR X8, [X22 + 0x28]
	0x01EFC334 LDR X9, [X31 + 0x28]
	0x01EFC338 CMP X8, X9
	0x01EFC33C B.NE 0x1EFC368
	0x01EFC340 LDP X20, X19, [X31 + 0x50]
	0x01EFC344 LDP X22, X21, [X31 + 0x40]
	0x01EFC348 LDP X30, X23, [X31 + 0x30]
	0x01EFC34C ADD X31, X31, 0x60
	0x01EFC350 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24DE000
	007 Move X22, 0x2205000
	008 Move X19, X8
	009 Move W8, [X21+1577]
	010 Move X22, [X22+2560]
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2205000
	017 Move X0, [X0+2560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1577], W8
	021 Move X1, [X22]
	022 Move W0, W20
	023 Call 0x2223170, X0
	024 Move [X19], W20
	025 Move [X19+4], W31
	026 Move [X19+8], X0
	027 Move [X19+16], X31
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Void Free(Fusion.Sockets.NetBitBufferStack stack)

Disassembly:
	0x01EFC354 BL 0x1C16F28
	0x01EFC358 BL 0x1C16F44
	0x01EFC35C MOV X1, X31
	0x01EFC360 BL 0x1C16DEC
	0x01EFC364 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+8]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Native.Free, X0
	006 Return 
	007 Return 

Method: System.Void PushFromHead(Fusion.Sockets.NetBitBuffer* head)

Disassembly:
	0x01EFC368 BL 0x3EB1B20
	0x01EFC36C LDR X8, [X0]
	0x01EFC370 CMP X8, X1
	0x01EFC374 CSET W0, EQ
	0x01EFC378 RET
	0x01EFC37C STP X30, X21, [X31 - 0x20]!
	0x01EFC380 STP X20, X19, [X31 + 0x10]
	0x01EFC384 ADRP X21, 0x24DD000
	0x01EFC388 LDRB W8, [X21 + 0x633]
	0x01EFC38C MOV X20, X1
	0x01EFC390 MOV X19, X0
	0x01EFC394 TBNZ X8, 0x0, 0x1EFC3AC
	0x01EFC398 ADRP X0, 0x2204000
	0x01EFC39C LDR X0, [X0 + 0xA30]
	0x01EFC3A0 BL 0x1C16CF4
	0x01EFC3A4 MOVZ W8, 0x1
	0x01EFC3A8 STRB W8, [X21 + 0x633]
	0x01EFC3AC CBZ X20, 0x1EFC3C8
	0x01EFC3B0 ADRP X8, 0x2204000
	0x01EFC3B4 LDR X8, [X8 + 0xA30]
	0x01EFC3B8 LDR X9, [X20]
	0x01EFC3BC LDR X8, [X8]
	0x01EFC3C0 CMP X9, X8
	0x01EFC3C4 B.EQ 0x1EFC3D0
	0x01EFC3C8 MOV W0, W31
	0x01EFC3CC B 0x1EFC3E8
	0x01EFC3D0 MOV X0, X20
	0x01EFC3D4 BL 0x1C16E08
	0x01EFC3D8 LDR X8, [X0]
	0x01EFC3DC LDR X9, [X19]
	0x01EFC3E0 CMP X9, X8
	0x01EFC3E4 CSET W0, EQ
	0x01EFC3E8 LDP X20, X19, [X31 + 0x10]
	0x01EFC3EC LDP X30, X21, [X31], #0x20
	0x01EFC3F0 RET
	0x01EFC3F4 MOV X1, X31
	0x01EFC3F8 B 0x339A95C
	0x01EFC3FC CMP X0, X1
	0x01EFC400 CSET W0, EQ
	0x01EFC404 RET
	0x01EFC408 CMP X0, X1
	0x01EFC40C CSET W0, NE
	0x01EFC410 RET
	0x01EFC414 CMP X1, X2
	0x01EFC418 CSET W0, EQ
	0x01EFC41C RET
	0x01EFC420 STR X30, [X31 - 0x10]!
	0x01EFC424 STR X1, [X31 + 0x8]
	0x01EFC428 ADD X0, X31, 0x8
	0x01EFC42C MOV X1, X31
	0x01EFC430 BL 0x339A95C
	0x01EFC434 LDR X30, [X31], #0x10
	0x01EFC438 RET
	0x01EFC43C MOV X1, X31
	0x01EFC440 B 0x33BDD8C
	0x01EFC444 SUB X31, X31, 0xA0
	0x01EFC448 STP X30, X25, [X31 + 0x60]
	0x01EFC44C STP X24, X23, [X31 + 0x70]
	0x01EFC450 STP X22, X21, [X31 + 0x80]
	0x01EFC454 STP X20, X19, [X31 + 0x90]
	0x01EFC458 ADRP X21, 0x24DD000
	0x01EFC45C LDRB W8, [X21 + 0x634]
	0x01EFC460 MOV X19, X1
	0x01EFC464 MOV X20, X0
	0x01EFC468 TBNZ X8, 0x0, 0x1EFC480
	0x01EFC46C ADRP X0, 0x2204000
	0x01EFC470 LDR X0, [X0 + 0xA38]
	0x01EFC474 BL 0x1C16CF4
	0x01EFC478 MOVZ W8, 0x1
	0x01EFC47C STRB W8, [X21 + 0x634]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24DE000
	007 Move W8, [X21+1578]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2205000
	015 Move X0, [X0+2568]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1578], W8
	019 Compare X19, 0
	020 JumpIfEqual {46}
	021 Move X21, 0x2205000
	022 Move W8, [X20+16]
	023 Move W1, [X20]
	024 Move X21, [X21+2568]
	025 Move X22, [X19+32]
	026 Move [X19+24], X31
	027 Move [X19+32], X31
	028 Move X0, [X20+8]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X2, [X21]
	031 Call 0x2222B20, X0, X1
	032 Move W9, [X20]
	033 Move W8, [X20+16]
	034 Move [X20+8], X0
	035 Move W1, W9
	036 ShiftRight W1, 31
	037 And W1, W1, 0x3FFFFFFF
	038 Move [X20], W1
	039 Add W9, W8, 1
	040 Move [X20+16], W9
	041 Move [X0], X19
	042 Move W8, W9
	043 Move X19, X22
	044 Compare X22, 0
	045 JumpIfNotEqual {25}
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X19, X0
	054 Move X0, X19
	055 Call 0x3EB2AD0
	056 Move X19, X0
	057 Move X0, 0x2201000
	058 Move X0, [X0+3512]
	059 Call 0x1C17D08
	060 Move X8, [X19]
	061 Move X1, [X8]
	062 Call 0x1C18270
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {71}
	067 Move X19, [X19]
	068 Call 0x3EB2AE0
	069 Move X0, X19
	070 Call 0x1C17F18
	071 Move W0, 8
	072 Call 0x3EB2AF0
	073 Move X8, [X19]
	074 Move [X0], X8
	075 Move X1, 0x1FB9000
	076 Add X1, X1, 3672
	077 Move X2, X31
	078 Call 0x3EB2B00
	079 Move X19, X0
	080 Call 0x3EB2AE0
	081 Move X0, X19
	082 Call 0x1D2D690
	083 Call 0x1991590

