Type: Fusion.Protocol.BitStream/ArrayElementSerializer`1

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x02B882DC CBNZ X22, 0x2B882F0
	0x02B882E0 MOVZ W0, 0x32
	0x02B882E4 MOV X1, X31
	0x02B882E8 BL 0x339DFAC
	0x02B882EC LDR X22, [X19]
	0x02B882F0 LDR X0, [X21 + 0x20]
	0x02B882F4 LDP W23, W21, [X19 + 0x8]
	0x02B882F8 LDRB W8, [X0 + 0x135]
	0x02B882FC TBNZ X8, 0x0, 0x2B88304
	0x02B88300 BL 0x1C5C684
	0x02B88304 LDR X8, [X0 + 0xC0]
	0x02B88308 MOV X0, X22
	0x02B8830C MOV W1, W20
	0x02B88310 MOV W2, W23
	0x02B88314 LDR X4, [X8 + 0x50]
	0x02B88318 MOV W3, W21
	0x02B8831C BL 0x22EADEC
	0x02B88320 TBNZ X0, 0x1F, 0x2B88330
	0x02B88324 LDR W8, [X19 + 0x8]
	0x02B88328 SUB W0, W0, W8
	0x02B8832C B 0x2B88334
	0x02B88330 MOVN W0, 0x0
	0x02B88334 LDP X20, X19, [X31 + 0x20]
	0x02B88338 LDP X22, X21, [X31 + 0x10]
	0x02B8833C LDP X30, X23, [X31], #0x30
	0x02B88340 RET
	0x02B88344 MOV X0, X31
	0x02B88348 B 0x339D82C
	0x02B8834C MOV X0, X31
	0x02B88350 B 0x339D82C
	0x02B88354 STP X30, X21, [X31 - 0x20]!
	0x02B88358 STP X20, X19, [X31 + 0x10]
	0x02B8835C LDR X8, [X2 + 0x20]
	0x02B88360 MOV X21, X2
	0x02B88364 MOV W19, W1
	0x02B88368 MOV X20, X0
	0x02B8836C LDRB W9, [X8 + 0x135]
	0x02B88370 TBNZ X9, 0x0, 0x2B88380
	0x02B88374 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -18497536
	021 Add X8, X8, 1428
	022 Compare W21, 0
	023 JumpIfEqual {30}
	024 Compare X20, 0
	025 JumpIfEqual {41}
	026 Move X8, [X19+16]
	027 Move X9, [X19+32]
	028 Move [X19+24], X8
	029 Move [X19+64], X9
	030 Move X8, -18497536
	031 Add X8, X8, 1396
	032 Move [X19+24], X8
	033 Move X8, -18497536
	034 Add X8, X8, 1324
	035 Move [X19+56], X8
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X1, -33996800
	042 Add X1, X1, 3811
	043 Move X0, X31
	044 Call 0x1C17F3C
	045 Move X1, X31
	046 Call 0x1C17DEC

Method: System.Void Invoke(ref T element)

Disassembly:
	0x02B88378 BL 0x1C5C684
	0x02B8837C MOV X8, X0
	0x02B88380 LDR X8, [X8 + 0xC0]
	0x02B88384 LDR X0, [X8 + 0x8]
	0x02B88388 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X8, [X0+64]
	002 Move X3, [X0+24]
	003 Move X2, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X3

Method: System.IAsyncResult BeginInvoke(ref T element, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x02B8838C TBNZ X8, 0x0, 0x2B88394
	0x02B88390 BL 0x1C5C684
	0x02B88394 LDR W8, [X0 + 0xE0]
	0x02B88398 CBNZ W8, 0x2B883A0
	0x02B8839C BL 0x1C16DFC
	0x02B883A0 LDR X0, [X21 + 0x20]
	0x02B883A4 LDRB W8, [X0 + 0x135]
	0x02B883A8 TBNZ X8, 0x0, 0x2B883B0
	0x02B883AC BL 0x1C5C684
	0x02B883B0 LDR X8, [X20]
	0x02B883B4 CBZ X8, 0x2B883C0
	0x02B883B8 TBZ X19, 0x1F, 0x2B883D0
	0x02B883BC B 0x2B883DC
	0x02B883C0 MOVZ W0, 0x32
	0x02B883C4 MOV X1, X31
	0x02B883C8 BL 0x339DFAC
	0x02B883CC TBNZ X19, 0x1F, 0x2B883DC
	0x02B883D0 LDR W8, [X20 + 0xC]
	0x02B883D4 CMP W8, W19
	0x02B883D8 B.GT 0x2B883E4
	0x02B883DC MOV X0, X31
	0x02B883E0 BL 0x339E294
	0x02B883E4 LDR X8, [X20]
	0x02B883E8 CBZ X8, 0x2B88414
	0x02B883EC LDR W9, [X20 + 0x8]
	0x02B883F0 LDR W10, [X8 + 0x18]
	0x02B883F4 ADD W9, W9, W19
	0x02B883F8 CMP W9, W10
	0x02B883FC B.CS 0x2B88418
	0x02B88400 ADD X8, X8, W9, SXTW
	0x02B88404 LDRB W0, [X8 + 0x20]
	0x02B88408 LDP X20, X19, [X31 + 0x10]
	0x02B8840C LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31], X31
	009 Move X8, [X0+40]
	010 Move X21, X0
	011 Move X19, X3
	012 Move X20, X2
	013 Move X8, [X8+48]
	014 Move X22, X1
	015 Move X0, [X8]
	016 Call 0x1C18274
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X0+40]
	024 Move TEMP, X8
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {29}
	028 Move X0, [X22]
	029 Move X1, X22
	030 Call 0x1C17E04
	031 Move [X31], X0
	032 Add X1, X31, 0
	033 Move X0, X21
	034 Move X2, X20
	035 Move X3, X19
	036 Call 0x1C17CB0
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X30, [X31+16]
	042 Add X31, X31, 64
	043 Return X0

Method: System.Void EndInvoke(ref T element, System.IAsyncResult result)

Disassembly:
	0x02B88410 RET
	0x02B88414 BL 0x1C16F20
	0x02B88418 BL 0x1C16F28
	0x02B8841C MOVZ W0, 0x1
	0x02B88420 RET
	0x02B88424 MOV X0, X31
	0x02B88428 B 0x339D82C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X2
	003 Move [X31+8], X1
	004 Add X1, X31, 8
	005 Call 0x1C17CB4
	006 Move X30, [X31+16]
	007 Return 

