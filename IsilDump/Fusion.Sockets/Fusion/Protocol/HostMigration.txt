Type: Fusion.Protocol.HostMigration

Method: System.Void .ctor()

Disassembly:
	0x01EF74B0 MOV X0, X19
	0x01EF74B4 BL 0x1EF3730
	0x01EF74B8 LDRB W8, [X20 + 0x10]

ISIL:
	001 Move W1, 10
	002 Move X2, X31
	003 Call Message..ctor, X0, X1, X2
	004 Return 

Method: System.Void .ctor(Fusion.Protocol.PeerMode peerMode, Fusion.Protocol.ProtocolMessageVersion protocolVersion = 10, System.Version serializationVersion = null)

Disassembly:
	0x01EF74BC LDRB W9, [X31 + 0xC]
	0x01EF74C0 CMP W8, 0x6
	0x01EF74C4 STRB W9, [X20 + 0x60]
	0x01EF74C8 B.CC 0x1EF74D8
	0x01EF74CC ADD X1, X20, 0x68
	0x01EF74D0 MOV X0, X19
	0x01EF74D4 BL 0x1EF39A4
	0x01EF74D8 LDP X20, X19, [X31 + 0x20]
	0x01EF74DC LDP X30, X21, [X31 + 0x10]
	0x01EF74E0 ADD X31, X31, 0x30
	0x01EF74E4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move W1, W2
	006 Move X2, X3
	007 Move X20, X0
	008 Call Message..ctor, X0, X1, X2
	009 Move [X20+40], W19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.Void SerializeProtected(Fusion.Protocol.BitStream stream)

Disassembly:
	0x01EF74E8 BL 0x1C16F20
	0x01EF74EC STR X30, [X31 - 0x20]!
	0x01EF74F0 STP X20, X19, [X31 + 0x10]
	0x01EF74F4 CBZ X1, 0x1EF752C
	0x01EF74F8 MOV X20, X0
	0x01EF74FC MOV X19, X1
	0x01EF7500 MOV X0, X1
	0x01EF7504 MOV X1, X20
	0x01EF7508 BL 0x1EF36BC
	0x01EF750C ADD X1, X20, 0x8
	0x01EF7510 MOV X0, X19
	0x01EF7514 BL 0x1EF36BC
	0x01EF7518 ADD X1, X20, 0x10
	0x01EF751C MOV X0, X19
	0x01EF7520 LDP X20, X19, [X31 + 0x10]
	0x01EF7524 LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W9, [X0+40]
	005 Move [X31+12], W9
	006 Compare X1, 0
	007 JumpIfEqual {19}
	008 Move X8, X1
	009 Move X19, X0
	010 Add X1, X31, 12
	011 Move X0, X8
	012 Call BitStream.Serialize, X0, X1
	013 Move W8, [X31+12]
	014 Move [X19+40], W8
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Add X31, X31, 32
	018 Return 
	019 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x01EF7528 B 0x1EF36BC
	0x01EF752C BL 0x1C16F20
	0x01EF7530 SUB X31, X31, 0x90
	0x01EF7534 STP X30, X25, [X31 + 0x50]
	0x01EF7538 STP X24, X23, [X31 + 0x60]
	0x01EF753C STP X22, X21, [X31 + 0x70]
	0x01EF7540 STP X20, X19, [X31 + 0x80]
	0x01EF7544 MRS X23, 0xC000
	0x01EF7548 LDR X8, [X23 + 0x28]
	0x01EF754C ADRP X20, 0x24E2000
	0x01EF7550 MOV X19, X0
	0x01EF7554 STR X8, [X31 + 0x48]
	0x01EF7558 LDRB W8, [X20 + 0x602]
	0x01EF755C TBNZ X8, 0x0, 0x1EF75F8
	0x01EF7560 ADRP X0, 0x21FC000
	0x01EF7564 LDR X0, [X0 + 0x758]
	0x01EF7568 BL 0x1C16CF4
	0x01EF756C ADRP X0, 0x21FE000
	0x01EF7570 LDR X0, [X0 + 0xA60]
	0x01EF7574 BL 0x1C16CF4
	0x01EF7578 ADRP X0, 0x2209000
	0x01EF757C LDR X0, [X0 + 0x8D0]
	0x01EF7580 BL 0x1C16CF4
	0x01EF7584 ADRP X0, 0x2206000
	0x01EF7588 LDR X0, [X0 + 0x78]
	0x01EF758C BL 0x1C16CF4
	0x01EF7590 ADRP X0, 0x21FC000
	0x01EF7594 LDR X0, [X0 + 0x9D0]
	0x01EF7598 BL 0x1C16CF4
	0x01EF759C ADRP X0, 0x2209000
	0x01EF75A0 LDR X0, [X0 + 0x8D8]
	0x01EF75A4 BL 0x1C16CF4
	0x01EF75A8 ADRP X0, 0x2209000
	0x01EF75AC LDR X0, [X0 + 0x8E0]
	0x01EF75B0 BL 0x1C16CF4
	0x01EF75B4 ADRP X0, 0x2209000
	0x01EF75B8 LDR X0, [X0 + 0x878]
	0x01EF75BC BL 0x1C16CF4
	0x01EF75C0 ADRP X0, 0x2209000
	0x01EF75C4 LDR X0, [X0 + 0x8E8]
	0x01EF75C8 BL 0x1C16CF4
	0x01EF75CC ADRP X0, 0x2206000
	0x01EF75D0 LDR X0, [X0 + 0x320]
	0x01EF75D4 BL 0x1C16CF4
	0x01EF75D8 ADRP X0, 0x2209000
	0x01EF75DC LDR X0, [X0 + 0x890]
	0x01EF75E0 BL 0x1C16CF4
	0x01EF75E4 ADRP X0, 0x2209000
	0x01EF75E8 LDR X0, [X0 + 0x8F0]
	0x01EF75EC BL 0x1C16CF4
	0x01EF75F0 MOVZ W8, 0x1
	0x01EF75F4 STRB W8, [X20 + 0x602]
	0x01EF75F8 ADRP X20, 0x21FC000
	0x01EF75FC LDR X0, [X19 + 0x68]
	0x01EF7600 LDR X20, [X20 + 0x9D0]
	0x01EF7604 CBZ X0, 0x1EF7628
	0x01EF7608 LDR W8, [X0 + 0x18]
	0x01EF760C CMP W8, 0x8
	0x01EF7610 B.NE 0x1EF7628
	0x01EF7614 MOV W1, W31
	0x01EF7618 MOV X2, X31
	0x01EF761C BL 0x3317088
	0x01EF7620 MOV X21, X0
	0x01EF7624 B 0x1EF762C
	0x01EF7628 MOV X21, X31
	0x01EF762C LDR X0, [X20]
	0x01EF7630 MOVZ W1, 0xC
	0x01EF7634 BL 0x1C16D6C
	0x01EF7638 CBZ X0, 0x1EF7964
	0x01EF763C ADRP X22, 0x2206000
	0x01EF7640 LDR X22, [X22 + 0x320]
	0x01EF7644 MOV X20, X0
	0x01EF7648 LDR X0, [X22]
	0x01EF764C CBZ X0, 0x1EF7660
	0x01EF7650 LDR X8, [X20]
	0x01EF7654 LDR X1, [X8 + 0x40]
	0x01EF7658 BL 0x1C16E00
	0x01EF765C CBZ X0, 0x1EF7958
	0x01EF7660 LDR W8, [X20 + 0x18]
	0x01EF7664 CBZ W8, 0x1EF7954
	0x01EF7668 LDR X9, [X22]
	0x01EF766C ADRP X22, 0x2209000
	0x01EF7670 LDR X22, [X22 + 0x8D8]
	0x01EF7674 STR X9, [X20 + 0x20]
	0x01EF7678 LDR X0, [X22]
	0x01EF767C CBZ X0, 0x1EF7694
	0x01EF7680 LDR X8, [X20]
	0x01EF7684 LDR X1, [X8 + 0x40]
	0x01EF7688 BL 0x1C16E00
	0x01EF768C CBZ X0, 0x1EF7958
	0x01EF7690 LDR W8, [X20 + 0x18]
	0x01EF7694 CMP W8, 0x1
	0x01EF7698 B.LS 0x1EF7954
	0x01EF769C LDR X8, [X22]
	0x01EF76A0 ADRP X9, 0x21FC000
	0x01EF76A4 LDR X9, [X9 + 0x758]
	0x01EF76A8 ADD X1, X31, 0xC
	0x01EF76AC STR X8, [X20 + 0x28]
	0x01EF76B0 LDR W8, [X19 + 0x28]
	0x01EF76B4 LDR X0, [X9]
	0x01EF76B8 STR W8, [X31 + 0xC]
	0x01EF76BC BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x24E3000
	007 Move X21, 0x21FD000
	008 Move W8, [X20+1532]
	009 Move X21, [X21+2512]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x21FD000
	016 Move X0, [X0+2512]
	017 Call 0x1C17CF4
	018 Move X0, 0x220A000
	019 Move X0, [X0+2128]
	020 Call 0x1C17CF4
	021 Move X0, 0x220A000
	022 Move X0, [X0+2136]
	023 Call 0x1C17CF4
	024 Move X0, 0x2205000
	025 Move X0, [X0+2648]
	026 Call 0x1C17CF4
	027 Move X0, 0x220A000
	028 Move X0, [X0+2016]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1532], W8
	032 Move X0, [X21]
	033 Move W1, 4
	034 Call 0x1C17D6C
	035 Compare X0, 0
	036 JumpIfEqual {116}
	037 Move X21, 0x2205000
	038 Move X21, [X21+2648]
	039 Move X20, X0
	040 Move X0, [X21]
	041 Compare X0, 0
	042 JumpIfEqual {48}
	043 Move X8, [X20]
	044 Move X1, [X8+64]
	045 Call 0x1C17E00
	046 Compare X0, 0
	047 JumpIfEqual {113}
	048 Move W8, [X20+24]
	049 Compare W8, 0
	050 JumpIfEqual {112}
	051 Move X9, [X21]
	052 Move X21, 0x220A000
	053 Move X21, [X21+2136]
	054 Move [X20+32], X9
	055 Move X0, [X21]
	056 Compare X0, 0
	057 JumpIfEqual {64}
	058 Move X8, [X20]
	059 Move X1, [X8+64]
	060 Call 0x1C17E00
	061 Compare X0, 0
	062 JumpIfEqual {113}
	063 Move W8, [X20+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X21]
	066 Move X9, 0x220A000
	067 Move X9, [X9+2128]
	068 Add X1, X31, 12
	069 Move [X20+40], X8
	070 Move W8, [X19+40]
	071 Move X0, [X9]
	072 Move [X31+12], W8
	073 Call 0x1C17E04
	074 Move X21, X0
	075 Compare X0, 0
	076 JumpIfEqual {83}
	077 Move X8, [X20]
	078 Move X0, X21
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {113}
	083 Move W8, [X20+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X19
	086 Move [X20+48], X21
	087 Call Message.ToString, X0
	088 Move X19, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X20]
	092 Move X0, X19
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {113}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, 0x220A000
	100 Move X8, [X8+2016]
	101 Move [X20+56], X19
	102 Move X1, X20
	103 Move X2, X31
	104 Move X0, [X8]
	105 Call String.Format, X0, X1
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X30, [X31+16]
	109 Move X21, [X31+24]
	110 Add X31, X31, 48
	111 Return X0
	112 Call 0x1C17F28
	113 Call 0x1C17F44
	114 Move X1, X31
	115 Call 0x1C17DEC
	116 Call 0x1C17F20

