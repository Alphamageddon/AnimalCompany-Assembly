Type: Fusion.Protocol.ChangeMasterClient

Method: System.Void .ctor()

Disassembly:
	0x01EF638C LDR W8, [X19 + 0x28]
	0x01EF6390 LDR X0, [X22]
	0x01EF6394 STR W8, [X31 + 0xC]

ISIL:
	001 Move W1, 10
	002 Move X2, X31

Method: System.Void .ctor(System.Int32 newMasterClientCandidate, Fusion.Protocol.ProtocolMessageVersion protocolVersion = 10, System.Version serializationVersion = null)

Disassembly:
	0x01EF6440 BL 0x1EF5624
	0x01EF6444 MOV X19, X0
	0x01EF6448 CBZ X0, 0x1EF6460
	0x01EF644C LDR X8, [X20]
	0x01EF6450 MOV X0, X19
	0x01EF6454 LDR X1, [X8 + 0x40]
	0x01EF6458 BL 0x1C16E00
	0x01EF645C CBZ X0, 0x1EF64A0
	0x01EF6460 LDR W8, [X20 + 0x18]
	0x01EF6464 CMP W8, 0x5
	0x01EF6468 B.LS 0x1EF649C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move W1, W2
	006 Move X2, X3
	007 Move X20, X0
	008 Call Message..ctor, X0, X1, X2
	009 Move [X20+40], W19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.Void SerializeProtected(Fusion.Protocol.BitStream stream)

Disassembly:
	0x01EF646C ADRP X8, 0x220A000
	0x01EF6470 LDR X8, [X8 + 0x830]
	0x01EF6474 STR X19, [X20 + 0x48]
	0x01EF6478 MOV X1, X20
	0x01EF647C MOV X2, X31
	0x01EF6480 LDR X0, [X8]
	0x01EF6484 BL 0x3227C5C
	0x01EF6488 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {9}
	003 Add X8, X0, 40
	004 Move W2, 32
	005 Move X0, X1
	006 Move X1, X8
	007 Call BitStream.Serialize, X0, X1, X2
	008 Return 
	009 Move [X31-16], X30
	010 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x01EF648C LDP X22, X21, [X31 + 0x20]
	0x01EF6490 LDP X30, X23, [X31 + 0x10]
	0x01EF6494 ADD X31, X31, 0x40
	0x01EF6498 RET
	0x01EF649C BL 0x1C16F28
	0x01EF64A0 BL 0x1C16F44
	0x01EF64A4 MOV X1, X31
	0x01EF64A8 BL 0x1C16DEC
	0x01EF64AC BL 0x1C16F20
	0x01EF64B0 MOVZ W1, 0xA
	0x01EF64B4 MOV X2, X31
	0x01EF64B8 B 0x1EF5398
	0x01EF64BC STR X30, [X31 - 0x20]!
	0x01EF64C0 STP X20, X19, [X31 + 0x10]
	0x01EF64C4 MOV W19, W1
	0x01EF64C8 MOV W1, W2
	0x01EF64CC MOV X2, X3
	0x01EF64D0 MOV X20, X0
	0x01EF64D4 BL 0x1EF5398
	0x01EF64D8 STRB W19, [X20 + 0x28]
	0x01EF64DC LDP X20, X19, [X31 + 0x10]
	0x01EF64E0 LDR X30, [X31], #0x20
	0x01EF64E4 RET
	0x01EF64E8 SUB X31, X31, 0x20
	0x01EF64EC STP X30, X19, [X31 + 0x10]
	0x01EF64F0 LDRB W9, [X0 + 0x28]
	0x01EF64F4 STRB W9, [X31 + 0xC]
	0x01EF64F8 CBZ X1, 0x1EF6524
	0x01EF64FC MOV X8, X1
	0x01EF6500 MOV X19, X0
	0x01EF6504 ADD X1, X31, 0xC
	0x01EF6508 MOV X0, X8
	0x01EF650C BL 0x1EF3730
	0x01EF6510 LDRB W8, [X31 + 0xC]
	0x01EF6514 STRB W8, [X19 + 0x28]
	0x01EF6518 LDP X30, X19, [X31 + 0x10]
	0x01EF651C ADD X31, X31, 0x20
	0x01EF6520 RET
	0x01EF6524 BL 0x1C16F20
	0x01EF6528 SUB X31, X31, 0x30
	0x01EF652C STP X30, X21, [X31 + 0x10]
	0x01EF6530 STP X20, X19, [X31 + 0x20]
	0x01EF6534 ADRP X20, 0x24E3000
	0x01EF6538 ADRP X21, 0x21FD000
	0x01EF653C LDRB W8, [X20 + 0x5FC]
	0x01EF6540 LDR X21, [X21 + 0x9D0]
	0x01EF6544 MOV X19, X0
	0x01EF6548 TBNZ X8, 0x0, 0x1EF6590
	0x01EF654C ADRP X0, 0x21FD000
	0x01EF6550 LDR X0, [X0 + 0x9D0]
	0x01EF6554 BL 0x1C16CF4
	0x01EF6558 ADRP X0, 0x220A000
	0x01EF655C LDR X0, [X0 + 0x850]
	0x01EF6560 BL 0x1C16CF4
	0x01EF6564 ADRP X0, 0x220A000
	0x01EF6568 LDR X0, [X0 + 0x858]
	0x01EF656C BL 0x1C16CF4
	0x01EF6570 ADRP X0, 0x2205000
	0x01EF6574 LDR X0, [X0 + 0xA58]
	0x01EF6578 BL 0x1C16CF4
	0x01EF657C ADRP X0, 0x220A000
	0x01EF6580 LDR X0, [X0 + 0x7E0]
	0x01EF6584 BL 0x1C16CF4
	0x01EF6588 MOVZ W8, 0x1
	0x01EF658C STRB W8, [X20 + 0x5FC]
	0x01EF6590 LDR X0, [X21]
	0x01EF6594 MOVZ W1, 0x4
	0x01EF6598 BL 0x1C16D6C
	0x01EF659C CBZ X0, 0x1EF66BC
	0x01EF65A0 ADRP X21, 0x2205000
	0x01EF65A4 LDR X21, [X21 + 0xA58]
	0x01EF65A8 MOV X20, X0
	0x01EF65AC LDR X0, [X21]
	0x01EF65B0 CBZ X0, 0x1EF65C4
	0x01EF65B4 LDR X8, [X20]
	0x01EF65B8 LDR X1, [X8 + 0x40]
	0x01EF65BC BL 0x1C16E00
	0x01EF65C0 CBZ X0, 0x1EF66B0
	0x01EF65C4 LDR W8, [X20 + 0x18]
	0x01EF65C8 CBZ W8, 0x1EF66AC
	0x01EF65CC LDR X9, [X21]
	0x01EF65D0 ADRP X21, 0x220A000
	0x01EF65D4 LDR X21, [X21 + 0x858]
	0x01EF65D8 STR X9, [X20 + 0x20]
	0x01EF65DC LDR X0, [X21]
	0x01EF65E0 CBZ X0, 0x1EF65F8
	0x01EF65E4 LDR X8, [X20]
	0x01EF65E8 LDR X1, [X8 + 0x40]
	0x01EF65EC BL 0x1C16E00
	0x01EF65F0 CBZ X0, 0x1EF66B0
	0x01EF65F4 LDR W8, [X20 + 0x18]
	0x01EF65F8 CMP W8, 0x1
	0x01EF65FC B.LS 0x1EF66AC
	0x01EF6600 LDR X8, [X21]
	0x01EF6604 ADRP X9, 0x220A000
	0x01EF6608 LDR X9, [X9 + 0x850]
	0x01EF660C ADD X1, X31, 0xC
	0x01EF6610 STR X8, [X20 + 0x28]
	0x01EF6614 LDRB W8, [X19 + 0x28]
	0x01EF6618 LDR X0, [X9]
	0x01EF661C STRB W8, [X31 + 0xC]
	0x01EF6620 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x24E4000
	007 Move X21, 0x21FE000
	008 Move W8, [X20+1519]
	009 Move X21, [X21+2512]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x21FE000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0x21FE000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0x220B000
	022 Move X0, [X0+2000]
	023 Call 0x1C17CF4
	024 Move X0, 0x220B000
	025 Move X0, [X0+2008]
	026 Call 0x1C17CF4
	027 Move X0, 0x220B000
	028 Move X0, [X0+2016]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1519], W8
	032 Move X0, [X21]
	033 Move W1, 4
	034 Call 0x1C17D6C
	035 Compare X0, 0
	036 JumpIfEqual {116}
	037 Move X21, 0x220B000
	038 Move X21, [X21+2008]
	039 Move X20, X0
	040 Move X0, [X21]
	041 Compare X0, 0
	042 JumpIfEqual {48}
	043 Move X8, [X20]
	044 Move X1, [X8+64]
	045 Call 0x1C17E00
	046 Compare X0, 0
	047 JumpIfEqual {113}
	048 Move W8, [X20+24]
	049 Compare W8, 0
	050 JumpIfEqual {112}
	051 Move X9, [X21]
	052 Move X21, 0x220B000
	053 Move X21, [X21+2000]
	054 Move [X20+32], X9
	055 Move X0, [X21]
	056 Compare X0, 0
	057 JumpIfEqual {64}
	058 Move X8, [X20]
	059 Move X1, [X8+64]
	060 Call 0x1C17E00
	061 Compare X0, 0
	062 JumpIfEqual {113}
	063 Move W8, [X20+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X21]
	066 Move X9, 0x21FE000
	067 Move X9, [X9+1880]
	068 Add X1, X31, 12
	069 Move [X20+40], X8
	070 Move W8, [X19+40]
	071 Move X0, [X9]
	072 Move [X31+12], W8
	073 Call 0x1C17E04
	074 Move X21, X0
	075 Compare X0, 0
	076 JumpIfEqual {83}
	077 Move X8, [X20]
	078 Move X0, X21
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {113}
	083 Move W8, [X20+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X19
	086 Move [X20+48], X21
	087 Call Message.ToString, X0
	088 Move X19, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X20]
	092 Move X0, X19
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {113}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, 0x220B000
	100 Move X8, [X8+2016]
	101 Move [X20+56], X19
	102 Move X1, X20
	103 Move X2, X31
	104 Move X0, [X8]
	105 Call String.Format, X0, X1
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X30, [X31+16]
	109 Move X21, [X31+24]
	110 Add X31, X31, 48
	111 Return X0
	112 Call 0x1C17F28
	113 Call 0x1C17F44
	114 Move X1, X31
	115 Call 0x1C17DEC
	116 Call 0x1C17F20

