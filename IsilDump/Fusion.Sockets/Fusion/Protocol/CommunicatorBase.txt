Type: Fusion.Protocol.CommunicatorBase

Method: System.Int32 get_CommunicatorID()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean Poll()

Disassembly:
	0x01EF54F8 MOVZ W1, 0x4
	0x01EF54FC BL 0x1C16D6C
	0x01EF5500 CBZ X0, 0x1EF5620
	0x01EF5504 ADRP X21, 0x220B000
	0x01EF5508 LDR X21, [X21 + 0x7D8]
	0x01EF550C MOV X20, X0
	0x01EF5510 LDR X0, [X21]
	0x01EF5514 CBZ X0, 0x1EF5528
	0x01EF5518 LDR X8, [X20]
	0x01EF551C LDR X1, [X8 + 0x40]
	0x01EF5520 BL 0x1C16E00
	0x01EF5524 CBZ X0, 0x1EF5614
	0x01EF5528 LDR W8, [X20 + 0x18]
	0x01EF552C CBZ W8, 0x1EF5610
	0x01EF5530 LDR X9, [X21]
	0x01EF5534 ADRP X21, 0x220B000
	0x01EF5538 LDR X21, [X21 + 0x7D0]
	0x01EF553C STR X9, [X20 + 0x20]
	0x01EF5540 LDR X0, [X21]
	0x01EF5544 CBZ X0, 0x1EF555C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24E5000
	005 Move W8, [X20+1512]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x220C000
	012 Move X0, [X0+1704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1512], W8
	016 Move X8, [X19+32]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move W8, [X8+32]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Return X0
	026 Call 0x1C17F20

Method: System.Void PushPackage(System.Int32 senderActor, System.Int32 eventCode, System.Object data)

Disassembly:
	0x01EF5548 LDR X8, [X20]
	0x01EF554C LDR X1, [X8 + 0x40]
	0x01EF5550 BL 0x1C16E00
	0x01EF5554 CBZ X0, 0x1EF5614
	0x01EF5558 LDR W8, [X20 + 0x18]
	0x01EF555C CMP W8, 0x1
	0x01EF5560 B.LS 0x1EF5610
	0x01EF5564 LDR X8, [X21]
	0x01EF5568 ADRP X9, 0x21FE000
	0x01EF556C LDR X9, [X9 + 0x758]
	0x01EF5570 ADD X1, X31, 0xC
	0x01EF5574 STR X8, [X20 + 0x28]
	0x01EF5578 LDR W8, [X19 + 0x28]
	0x01EF557C LDR X0, [X9]
	0x01EF5580 STR W8, [X31 + 0xC]
	0x01EF5584 BL 0x1C16E04
	0x01EF5588 MOV X21, X0
	0x01EF558C CBZ X0, 0x1EF55A4
	0x01EF5590 LDR X8, [X20]
	0x01EF5594 MOV X0, X21
	0x01EF5598 LDR X1, [X8 + 0x40]
	0x01EF559C BL 0x1C16E00
	0x01EF55A0 CBZ X0, 0x1EF5614
	0x01EF55A4 LDR W8, [X20 + 0x18]
	0x01EF55A8 CMP W8, 0x2
	0x01EF55AC B.LS 0x1EF5610
	0x01EF55B0 MOV X0, X19
	0x01EF55B4 STR X21, [X20 + 0x30]
	0x01EF55B8 BL 0x1EF5624
	0x01EF55BC MOV X19, X0
	0x01EF55C0 CBZ X0, 0x1EF55D8
	0x01EF55C4 LDR X8, [X20]
	0x01EF55C8 MOV X0, X19
	0x01EF55CC LDR X1, [X8 + 0x40]
	0x01EF55D0 BL 0x1C16E00
	0x01EF55D4 CBZ X0, 0x1EF5614
	0x01EF55D8 LDR W8, [X20 + 0x18]
	0x01EF55DC CMP W8, 0x3
	0x01EF55E0 B.LS 0x1EF5610
	0x01EF55E4 ADRP X8, 0x220B000
	0x01EF55E8 LDR X8, [X8 + 0x7E0]
	0x01EF55EC STR X19, [X20 + 0x38]
	0x01EF55F0 MOV X1, X20
	0x01EF55F4 MOV X2, X31
	0x01EF55F8 LDR X0, [X8]
	0x01EF55FC BL 0x3227C5C
	0x01EF5600 LDP X20, X19, [X31 + 0x20]
	0x01EF5604 LDP X30, X21, [X31 + 0x10]
	0x01EF5608 ADD X31, X31, 0x30
	0x01EF560C RET
	0x01EF5610 BL 0x1C16F28
	0x01EF5614 BL 0x1C16F44

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x24E5000
	009 Move W8, [X23+1513]
	010 Move X19, X3
	011 Move W21, W2
	012 Move W22, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x220C000
	019 Move X0, [X0+1712]
	020 Call 0x1C17CF4
	021 Move X0, 0x220C000
	022 Move X0, [X0+1720]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1513], W8
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction BIC not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, 0x220C000
	030 Move X20, [X20+32]
	031 Move X8, [X8+1720]
	032 Add X0, X31, 0
	033 Move X2, X19
	034 Move [X31], X31
	035 Move [X31+8], X31
	036 Move X3, [X8]
	037 Call ValueTuple`2<Int32, Object>..ctor, X0, X1, X2
	038 Compare X20, 0
	039 JumpIfEqual {64}
	040 Move X8, 0x220C000
	041 Move X1, [X31]
	042 Move X2, [X31+8]
	043 Move X8, [X8+1712]
	044 Move X0, X20
	045 Move X3, [X8]
	046 Call 0x24F0020, X0, X1
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X30, [X31+16]
	052 Move X23, [X31+24]
	053 Add X31, X31, 64
	054 Return 
	055 Move X0, X20
	056 Move X2, X19
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X30, [X31+16]
	062 Move X23, [X31+24]
	063 Add X31, X31, 64
	064 Call 0x1C17F20

Method: System.Void SendMessage(System.Int32 targetActor, Fusion.Protocol.IMessage message)

Disassembly:
	0x01EF5844 MOVZ W8, 0x1
	0x01EF5848 STRB W8, [X20 + 0x5F0]
	0x01EF584C LDRB W8, [X19 + 0x10]
	0x01EF5850 CBZ W8, 0x1EF5890
	0x01EF5854 ADRP X20, 0x2206000
	0x01EF5858 LDR X20, [X20 + 0x7C8]
	0x01EF585C LDR X19, [X19 + 0x18]
	0x01EF5860 LDR X0, [X20]
	0x01EF5864 LDR W8, [X0 + 0xE0]
	0x01EF5868 CBNZ W8, 0x1EF5874
	0x01EF586C BL 0x1C16DFC
	0x01EF5870 LDR X0, [X20]
	0x01EF5874 LDR X8, [X0 + 0xB8]
	0x01EF5878 MOV X0, X19
	0x01EF587C LDP X20, X19, [X31 + 0x10]
	0x01EF5880 MOV X2, X31
	0x01EF5884 LDR X1, [X8]
	0x01EF5888 LDR X30, [X31], #0x20
	0x01EF588C B 0x339D0E0
	0x01EF5890 LDP X20, X19, [X31 + 0x10]
	0x01EF5894 MOV W0, W31
	0x01EF5898 LDR X30, [X31], #0x20
	0x01EF589C RET
	0x01EF58A0 LDR X0, [X0 + 0x20]
	0x01EF58A4 RET
	0x01EF58A8 SUB X31, X31, 0x40
	0x01EF58AC STP X30, X23, [X31 + 0x10]
	0x01EF58B0 STP X22, X21, [X31 + 0x20]
	0x01EF58B4 STP X20, X19, [X31 + 0x30]
	0x01EF58B8 ADRP X21, 0x24E4000
	0x01EF58BC LDRB W8, [X21 + 0x5F1]
	0x01EF58C0 MOV X20, X1
	0x01EF58C4 MOV X19, X0
	0x01EF58C8 TBNZ X8, 0x0, 0x1EF58F8
	0x01EF58CC ADRP X0, 0x21FE000
	0x01EF58D0 LDR X0, [X0 + 0x758]
	0x01EF58D4 BL 0x1C16CF4
	0x01EF58D8 ADRP X0, 0x21FE000
	0x01EF58DC LDR X0, [X0 + 0x5A8]
	0x01EF58E0 BL 0x1C16CF4
	0x01EF58E4 ADRP X0, 0x220B000
	0x01EF58E8 LDR X0, [X0 + 0x810]
	0x01EF58EC BL 0x1C16CF4
	0x01EF58F0 MOVZ W8, 0x1
	0x01EF58F4 STRB W8, [X21 + 0x5F1]
	0x01EF58F8 CBZ X20, 0x1EF59A4
	0x01EF58FC ADRP X8, 0x21FE000
	0x01EF5900 LDR X8, [X8 + 0x758]
	0x01EF5904 ADRP X21, 0x220B000
	0x01EF5908 LDR X21, [X21 + 0x810]
	0x01EF590C ADRP X23, 0x21FE000
	0x01EF5910 LDR X0, [X8]
	0x01EF5914 LDR W22, [X20 + 0x10]
	0x01EF5918 LDR X23, [X23 + 0x5A8]
	0x01EF591C MOVZ W8, 0x400
	0x01EF5920 ADD X1, X31, 0xC
	0x01EF5924 STR W8, [X31 + 0xC]
	0x01EF5928 BL 0x1C16E04
	0x01EF592C LDR X8, [X21]
	0x01EF5930 MOV X1, X0
	0x01EF5934 MOV X2, X31
	0x01EF5938 MOV X0, X8
	0x01EF593C BL 0x321EFD0
	0x01EF5940 CMP W22, 0x401
	0x01EF5944 MOV X1, X0
	0x01EF5948 CSET W0, LT
	0x01EF594C MOV X2, X31
	0x01EF5950 BL 0x1E3BA60
	0x01EF5954 LDR X0, [X23]
	0x01EF5958 LDR W21, [X20 + 0x10]
	0x01EF595C LDR W8, [X0 + 0xE0]
	0x01EF5960 CBNZ W8, 0x1EF5968
	0x01EF5964 BL 0x1C16DFC
	0x01EF5968 MOVZ W1, 0x400
	0x01EF596C MOV W0, W21
	0x01EF5970 MOV X2, X31
	0x01EF5974 BL 0x337EE94
	0x01EF5978 MOV W2, W0
	0x01EF597C MOV X0, X20
	0x01EF5980 MOV W1, W31
	0x01EF5984 MOV X3, X31
	0x01EF5988 BL 0x3228DE4
	0x01EF598C STR X0, [X19 + 0x20]
	0x01EF5990 LDP X20, X19, [X31 + 0x30]
	0x01EF5994 LDP X22, X21, [X31 + 0x20]
	0x01EF5998 LDP X30, X23, [X31 + 0x10]
	0x01EF599C ADD X31, X31, 0x40
	0x01EF59A0 RET
	0x01EF59A4 BL 0x1C16F20
	0x01EF59A8 STR X30, [X31 - 0x20]!
	0x01EF59AC STP X20, X19, [X31 + 0x10]
	0x01EF59B0 ADRP X20, 0x24E4000
	0x01EF59B4 LDRB W8, [X20 + 0x5F2]
	0x01EF59B8 MOV X19, X0
	0x01EF59BC TBNZ X8, 0x0, 0x1EF59D4
	0x01EF59C0 ADRP X0, 0x220B000
	0x01EF59C4 LDR X0, [X0 + 0x6E8]
	0x01EF59C8 BL 0x1C16CF4
	0x01EF59CC MOVZ W8, 0x1
	0x01EF59D0 STRB W8, [X20 + 0x5F2]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x24E5000
	009 Move W8, [X22+1514]
	010 Move X19, X2
	011 Move W20, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x220C000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move X0, 0x220C000
	021 Move X0, [X0+1776]
	022 Call 0x1C17CF4
	023 Move X0, 0x220C000
	024 Move X0, [X0+1784]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+1514], W8
	028 Move [X31+24], X31
	029 Move X0, [X21+48]
	030 Compare X0, 0
	031 JumpIfEqual {118}
	032 Move X23, 0x220C000
	033 Move X23, [X23+1768]
	034 Compare X19, 0
	035 JumpIfEqual {45}
	036 Move X8, [X19]
	037 Move X1, [X23]
	038 Move W10, [X8+304]
	039 Move W9, [X1+304]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X8+200]
	042 Add X8, X8, X9
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X2, X31, 24
	046 Move X1, X19
	047 Call ProtocolSerializer.ConvertToBuffer, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {78}
	052 Move X0, [X31+24]
	053 Compare X0, 0
	054 JumpIfEqual {118}
	055 Move X8, [X0+24]
	056 Compare X8, 0
	057 JumpIfEqual {62}
	058 Move W9, [X8+24]
	059 Add X8, X8, 32
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move X22, X31
	063 Call BitStream.get_BytesRequired, X0
	064 Move X8, [X21]
	065 Move W5, W0
	066 Move W1, 100
	067 Move W3, 1
	068 Move X9, [X8+536]
	069 Move X6, [X8+544]
	070 Move X0, X21
	071 Move W2, W20
	072 Move X4, X22
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {108}
	078 Move X21, [X21+24]
	079 Move [X31+8], X31
	080 Move [X31+16], X31
	081 Compare X19, 0
	082 JumpIfEqual {92}
	083 Move X8, [X19]
	084 Move X1, [X23]
	085 Move W10, [X8+304]
	086 Move W9, [X1+304]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, [X8+200]
	089 Add X8, X8, X9
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, 0x220C000
	093 Move X8, [X8+1784]
	094 Add X0, X31, 8
	095 Move W1, W20
	096 Move X2, X19
	097 Move X3, [X8]
	098 Call ValueTuple`2<Int32, Object>..ctor, X0, X1, X2
	099 Compare X21, 0
	100 JumpIfEqual {118}
	101 Move X8, 0x220C000
	102 Move X1, [X31+8]
	103 Move X2, [X31+16]
	104 Move X8, [X8+1776]
	105 Move X0, X21
	106 Move X3, [X8]
	107 Call 0x24F0020, X0, X1
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X30, [X31+32]
	113 Move X23, [X31+40]
	114 Add X31, X31, 80
	115 Return 
	116 Move X0, X19
	117 Call 0x1C181E0
	118 Call 0x1C17F20

Method: System.Void Service()

Disassembly:
	0x01EF5AE8 MOVZ W0, 0xA
	0x01EF5AEC MOV W1, W21
	0x01EF5AF0 MOV X2, X31
	0x01EF5AF4 BL 0x337EE54
	0x01EF5AF8 AND W8, W0, 0xFF
	0x01EF5AFC MOV W21, W0
	0x01EF5B00 CMP W8, 0x2
	0x01EF5B04 STRB W0, [X31 + 0x1C]
	0x01EF5B08 B.CS 0x1EF5B24
	0x01EF5B0C MOV W24, W31
	0x01EF5B10 MOV W23, W31
	0x01EF5B14 MOV W22, W31
	0x01EF5B18 STR W31, [X31 + 0x18]
	0x01EF5B1C STR X31, [X31 + 0x8]
	0x01EF5B20 B 0x1EF5B5C
	0x01EF5B24 ADD X1, X31, 0x18
	0x01EF5B28 MOVZ W2, 0x20
	0x01EF5B2C MOV X0, X19
	0x01EF5B30 BL 0x1EF37F8
	0x01EF5B34 ADD X1, X31, 0xC
	0x01EF5B38 MOVZ W2, 0x20
	0x01EF5B3C MOV X0, X19
	0x01EF5B40 BL 0x1EF37F8
	0x01EF5B44 ADD X1, X31, 0x8
	0x01EF5B48 MOVZ W2, 0x20
	0x01EF5B4C MOV X0, X19
	0x01EF5B50 BL 0x1EF37F8
	0x01EF5B54 LDR W22, [X31 + 0x18]
	0x01EF5B58 LDP W24, W23, [X31 + 0x8]
	0x01EF5B5C STRB W21, [X20 + 0x10]
	0x01EF5B60 LDR X0, [X25]
	0x01EF5B64 BL 0x1C16F10
	0x01EF5B68 MOV W1, W22
	0x01EF5B6C MOV W2, W23
	0x01EF5B70 MOV W3, W24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24E5000
	005 Move W8, [X20+1515]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x220C000
	012 Move X0, [X0+1792]
	013 Call 0x1C17CF4
	014 Move X0, 0x220C000
	015 Move X0, [X0+1800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1515], W8
	019 Move X0, [X19+24]
	020 Compare X0, 0
	021 JumpIfEqual {42}
	022 Move W8, [X0+32]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, 0x220C000
	025 Move X8, [X8+1792]
	026 Move X1, [X8]
	027 Call 0x24F019C, X0
	028 Move X2, X0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X3, X1
	033 Move W1, W2
	034 Move X2, X3
	035 Move X30, [X31+32]
	036 Call CommunicatorBase.SendMessage, X0, X1, X2
	037 Return 
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void HandleProtocolPackage(System.Int32 actorNr, System.Object data)

Disassembly:
	0x01EF5618 MOV X1, X31
	0x01EF561C BL 0x1C16DEC
	0x01EF5620 BL 0x1C16F20
	0x01EF5624 STR X30, [X31 - 0x30]!
	0x01EF5628 STP X22, X21, [X31 + 0x10]
	0x01EF562C STP X20, X19, [X31 + 0x20]
	0x01EF5630 ADRP X20, 0x24E4000
	0x01EF5634 ADRP X21, 0x21FE000
	0x01EF5638 LDRB W8, [X20 + 0x5F6]
	0x01EF563C LDR X21, [X21 + 0x9D0]
	0x01EF5640 MOV X19, X0
	0x01EF5644 TBNZ X8, 0x0, 0x1EF5698
	0x01EF5648 ADRP X0, 0x21FE000
	0x01EF564C LDR X0, [X0 + 0x9D0]
	0x01EF5650 BL 0x1C16CF4
	0x01EF5654 ADRP X0, 0x220B000
	0x01EF5658 LDR X0, [X0 + 0x7E8]
	0x01EF565C BL 0x1C16CF4
	0x01EF5660 ADRP X0, 0x220B000
	0x01EF5664 LDR X0, [X0 + 0x7F0]
	0x01EF5668 BL 0x1C16CF4
	0x01EF566C ADRP X0, 0x220B000
	0x01EF5670 LDR X0, [X0 + 0x7F8]
	0x01EF5674 BL 0x1C16CF4
	0x01EF5678 ADRP X0, 0x220B000
	0x01EF567C LDR X0, [X0 + 0x800]
	0x01EF5680 BL 0x1C16CF4
	0x01EF5684 ADRP X0, 0x220B000
	0x01EF5688 LDR X0, [X0 + 0x808]
	0x01EF568C BL 0x1C16CF4
	0x01EF5690 MOVZ W8, 0x1
	0x01EF5694 STRB W8, [X20 + 0x5F6]
	0x01EF5698 LDR X0, [X21]
	0x01EF569C MOVZ W1, 0x6
	0x01EF56A0 BL 0x1C16D6C
	0x01EF56A4 CBZ X0, 0x1EF581C
	0x01EF56A8 ADRP X21, 0x220B000
	0x01EF56AC LDR X21, [X21 + 0x7F8]
	0x01EF56B0 MOV X20, X0
	0x01EF56B4 LDR X0, [X21]
	0x01EF56B8 CBZ X0, 0x1EF56CC
	0x01EF56BC LDR X8, [X20]
	0x01EF56C0 LDR X1, [X8 + 0x40]
	0x01EF56C4 BL 0x1C16E00
	0x01EF56C8 CBZ X0, 0x1EF5810
	0x01EF56CC LDR W8, [X20 + 0x18]
	0x01EF56D0 CBZ W8, 0x1EF580C
	0x01EF56D4 LDR X8, [X21]
	0x01EF56D8 ADRP X9, 0x220B000
	0x01EF56DC LDR X9, [X9 + 0x7E8]
	0x01EF56E0 ADD X1, X31, 0xC
	0x01EF56E4 STR X8, [X20 + 0x20]
	0x01EF56E8 LDRB W8, [X19 + 0x10]
	0x01EF56EC LDR X0, [X9]
	0x01EF56F0 STRB W8, [X31 + 0xC]
	0x01EF56F4 BL 0x1C16E04
	0x01EF56F8 MOV X21, X0
	0x01EF56FC CBZ X0, 0x1EF5714
	0x01EF5700 LDR X8, [X20]
	0x01EF5704 MOV X0, X21
	0x01EF5708 LDR X1, [X8 + 0x40]
	0x01EF570C BL 0x1C16E00
	0x01EF5710 CBZ X0, 0x1EF5810
	0x01EF5714 LDR W8, [X20 + 0x18]
	0x01EF5718 CMP W8, 0x1
	0x01EF571C B.LS 0x1EF580C
	0x01EF5720 ADRP X22, 0x220B000
	0x01EF5724 LDR X22, [X22 + 0x7F0]
	0x01EF5728 STR X21, [X20 + 0x28]
	0x01EF572C LDR X0, [X22]
	0x01EF5730 CBZ X0, 0x1EF5748
	0x01EF5734 LDR X8, [X20]
	0x01EF5738 LDR X1, [X8 + 0x40]
	0x01EF573C BL 0x1C16E00
	0x01EF5740 CBZ X0, 0x1EF5810
	0x01EF5744 LDR W8, [X20 + 0x18]
	0x01EF5748 CMP W8, 0x2
	0x01EF574C B.LS 0x1EF580C
	0x01EF5750 LDR X9, [X22]
	0x01EF5754 STR X9, [X20 + 0x30]
	0x01EF5758 LDR X21, [X19 + 0x18]
	0x01EF575C CBZ X21, 0x1EF5778
	0x01EF5760 LDR X8, [X20]
	0x01EF5764 MOV X0, X21
	0x01EF5768 LDR X1, [X8 + 0x40]
	0x01EF576C BL 0x1C16E00
	0x01EF5770 CBZ X0, 0x1EF5810
	0x01EF5774 LDR W8, [X20 + 0x18]
	0x01EF5778 CMP W8, 0x3
	0x01EF577C B.LS 0x1EF580C
	0x01EF5780 ADRP X22, 0x220B000
	0x01EF5784 LDR X22, [X22 + 0x800]
	0x01EF5788 STR X21, [X20 + 0x38]
	0x01EF578C LDR X0, [X22]
	0x01EF5790 CBZ X0, 0x1EF57A8
	0x01EF5794 LDR X8, [X20]
	0x01EF5798 LDR X1, [X8 + 0x40]
	0x01EF579C BL 0x1C16E00
	0x01EF57A0 CBZ X0, 0x1EF5810
	0x01EF57A4 LDR W8, [X20 + 0x18]
	0x01EF57A8 CMP W8, 0x4
	0x01EF57AC B.LS 0x1EF580C
	0x01EF57B0 LDR X9, [X22]
	0x01EF57B4 STR X9, [X20 + 0x40]
	0x01EF57B8 LDR X19, [X19 + 0x20]
	0x01EF57BC CBZ X19, 0x1EF57D8
	0x01EF57C0 LDR X8, [X20]
	0x01EF57C4 MOV X0, X19
	0x01EF57C8 LDR X1, [X8 + 0x40]
	0x01EF57CC BL 0x1C16E00
	0x01EF57D0 CBZ X0, 0x1EF5810
	0x01EF57D4 LDR W8, [X20 + 0x18]
	0x01EF57D8 CMP W8, 0x5
	0x01EF57DC B.LS 0x1EF580C
	0x01EF57E0 ADRP X8, 0x220B000
	0x01EF57E4 LDR X8, [X8 + 0x808]
	0x01EF57E8 STR X19, [X20 + 0x48]
	0x01EF57EC MOV X1, X20
	0x01EF57F0 MOV X2, X31
	0x01EF57F4 LDR X0, [X8]
	0x01EF57F8 BL 0x3227C5C
	0x01EF57FC LDP X20, X19, [X31 + 0x20]
	0x01EF5800 LDP X22, X21, [X31 + 0x10]
	0x01EF5804 LDR X30, [X31], #0x30
	0x01EF5808 RET
	0x01EF580C BL 0x1C16F28
	0x01EF5810 BL 0x1C16F44
	0x01EF5814 MOV X1, X31
	0x01EF5818 BL 0x1C16DEC
	0x01EF581C BL 0x1C16F20
	0x01EF5820 STR X30, [X31 - 0x20]!
	0x01EF5824 STP X20, X19, [X31 + 0x10]
	0x01EF5828 ADRP X20, 0x24E4000
	0x01EF582C LDRB W8, [X20 + 0x5F0]
	0x01EF5830 MOV X19, X0
	0x01EF5834 TBNZ X8, 0x0, 0x1EF584C
	0x01EF5838 ADRP X0, 0x2206000
	0x01EF583C LDR X0, [X0 + 0x7C8]
	0x01EF5840 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X22, 0x24E5000
	010 Move W8, [X22+1516]
	011 Move X21, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x220C000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move X0, 0x220C000
	022 Move X0, [X0+1736]
	023 Call 0x1C17CF4
	024 Move X0, 0x220C000
	025 Move X0, [X0+1744]
	026 Call 0x1C17CF4
	027 Move X0, 0x220C000
	028 Move X0, [X0+1752]
	029 Call 0x1C17CF4
	030 Move X0, 0x220C000
	031 Move X0, [X0+1760]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1516], W8
	035 Move [X31+72], X31
	036 Move [X31+60], W31
	037 Move [X31+32], X31
	038 Move [X31+40], X31
	039 Move [X31+48], X31
	040 Move [X31+24], X31
	041 Move X8, [X20]
	042 Add X2, X31, 72
	043 Add X3, X31, 60
	044 Move X0, X20
	045 Move X9, [X8+552]
	046 Move X4, [X8+560]
	047 Move X1, X21
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X1, [X31+72]
	050 Compare X1, 0
	051 JumpIfEqual {116}
	052 Move X0, [X20+48]
	053 Compare X0, 0
	054 JumpIfEqual {128}
	055 Move X2, [X20+40]
	056 Call ProtocolSerializer.ConvertToMessages, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {116}
	061 Move X0, [X20+40]
	062 Compare X0, 0
	063 JumpIfEqual {128}
	064 Move X8, 0x220C000
	065 Move X8, [X8+1760]
	066 Move X1, [X8]
	067 Add X8, X31, 0
	068 Call List`1<Object>.GetEnumerator, X0
	069 Move V0, [X31]
	070 Move X8, [X31+16]
	071 Move X23, 0x220C000
	072 Move X23, [X23+1744]
	073 Move [X31+2], V0
	074 Move [X31+48], X8
	075 Move X24, 0x220C000
	076 Move X24, [X24+1728]
	077 Move X1, [X23]
	078 Add X0, X31, 32
	079 Call Enumerator<Object>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {111}
	084 Move X21, [X31+48]
	085 Compare X21, 0
	086 JumpIfEqual {125}
	087 Move X22, [X20+16]
	088 Move X0, X21
	089 Move X1, X31
	090 Call "il2cpp_vm_object_is_inst", X0
	091 Move X1, X0
	092 Compare X22, 0
	093 JumpIfEqual {126}
	094 Move X3, [X24]
	095 Add X2, X31, 24
	096 Move X0, X22
	097 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {77}
	102 Move X8, [X31+24]
	103 Compare X8, 0
	104 JumpIfEqual {127}
	105 Move X0, [X8+64]
	106 Move X9, [X8+24]
	107 Move X3, [X8+40]
	108 Move W1, W19
	109 Move X2, X21
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X8, 0x220C000
	112 Move X8, [X8+1736]
	113 Add X0, X31, 32
	114 Move X1, [X8]
	115 Call Enumerator<Object>.Dispose, X0
	116 Move X20, [X31+112]
	117 Move X19, [X31+120]
	118 Move X22, [X31+96]
	119 Move X21, [X31+104]
	120 Move X24, [X31+80]
	121 Move X23, [X31+88]
	122 Move X30, [X31+64]
	123 Add X31, X31, 128
	124 Return 
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Call 0x1C17F20
	129 Move X19, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, X19
	132 Call 0x3EB2AD0
	133 Move X20, [X0]
	134 Call 0x3EB2AE0
	135 Move X8, 0x220C000
	136 Move X8, [X8+1736]
	137 Add X0, X31, 32
	138 Move X1, [X8]
	139 Call Enumerator<Object>.Dispose, X0
	140 Compare X20, 0
	141 JumpIfEqual {116}
	142 Move X0, X20
	143 Call 0x1C17F18
	144 Move X20, X31
	145 Move X19, X0
	146 Move X8, 0x220C000
	147 Move X8, [X8+1736]
	148 Move X1, [X8]
	149 Add X0, X31, 32
	150 Call Enumerator<Object>.Dispose, X0
	151 Compare X20, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X19
	154 Call 0x1D2D690
	155 Move X0, X20
	156 Call 0x1C17F18
	157 Call 0x1991590

Method: System.Int32 ReceivePackage(out System.Int32 senderActor, System.Byte* buffer, System.Int32 bufferLength)

Disassembly:
	0x01EF5D34 BL 0x1E3965C
	0x01EF5D38 MOV X1, X0
	0x01EF5D3C MOV X0, X22
	0x01EF5D40 MOV X2, X31
	0x01EF5D44 BL 0x339D168
	0x01EF5D48 TBZ X0, 0x0, 0x1EF5D68
	0x01EF5D4C MOV W0, W31
	0x01EF5D50 B 0x1EF5D58
	0x01EF5D54 MOVZ W0, 0x1
	0x01EF5D58 LDP X20, X19, [X31 + 0x20]
	0x01EF5D5C LDP X22, X21, [X31 + 0x10]
	0x01EF5D60 LDP X30, X23, [X31], #0x30
	0x01EF5D64 RET
	0x01EF5D68 LDR X0, [X23]
	0x01EF5D6C LDR X21, [X20 + 0x18]
	0x01EF5D70 LDR W8, [X0 + 0xE0]
	0x01EF5D74 CBNZ W8, 0x1EF5D7C
	0x01EF5D78 BL 0x1C16DFC
	0x01EF5D7C MOV X0, X21
	0x01EF5D80 MOV X1, X31
	0x01EF5D84 BL 0x1E3965C
	0x01EF5D88 ADRP X8, 0x2206000
	0x01EF5D8C LDR X8, [X8 + 0x7C0]
	0x01EF5D90 MOV X21, X0
	0x01EF5D94 LDR X8, [X8]
	0x01EF5D98 MOV X0, X8
	0x01EF5D9C BL 0x1C16F10
	0x01EF5DA0 MOVZ W1, 0x1
	0x01EF5DA4 MOV W2, W31
	0x01EF5DA8 MOV X3, X31
	0x01EF5DAC MOV X22, X0
	0x01EF5DB0 BL 0x339C25C
	0x01EF5DB4 MOV X0, X21
	0x01EF5DB8 MOV X1, X22
	0x01EF5DBC MOV X2, X31
	0x01EF5DC0 BL 0x339D108
	0x01EF5DC4 MOV W8, W0
	0x01EF5DC8 MOV W0, W31
	0x01EF5DCC TBNZ X8, 0x0, 0x1EF5D58
	0x01EF5DD0 LDR X0, [X20 + 0x18]
	0x01EF5DD4 MOV X1, X19
	0x01EF5DD8 LDP X20, X19, [X31 + 0x20]
	0x01EF5DDC LDP X22, X21, [X31 + 0x10]
	0x01EF5DE0 MOV X2, X31
	0x01EF5DE4 LDP X30, X23, [X31], #0x30
	0x01EF5DE8 B 0x339C580
	0x01EF5DEC MOVZ W1, 0xA
	0x01EF5DF0 MOV X2, X31
	0x01EF5DF4 B 0x1EF5398
	0x01EF5DF8 STR X30, [X31 - 0x20]!
	0x01EF5DFC STP X20, X19, [X31 + 0x10]
	0x01EF5E00 MOV W19, W1
	0x01EF5E04 MOV W1, W2
	0x01EF5E08 MOV X2, X3
	0x01EF5E0C MOV X20, X0
	0x01EF5E10 BL 0x1EF5398
	0x01EF5E14 STRB W19, [X20 + 0x28]
	0x01EF5E18 LDP X20, X19, [X31 + 0x10]
	0x01EF5E1C LDR X30, [X31], #0x20
	0x01EF5E20 RET
	0x01EF5E24 SUB X31, X31, 0x50
	0x01EF5E28 STR X30, [X31 + 0x20]
	0x01EF5E2C STP X22, X21, [X31 + 0x30]
	0x01EF5E30 STP X20, X19, [X31 + 0x40]
	0x01EF5E34 ADRP X21, 0x24E4000
	0x01EF5E38 ADRP X22, 0x220B000
	0x01EF5E3C LDRB W8, [X21 + 0x5F7]
	0x01EF5E40 LDR X22, [X22 + 0x818]
	0x01EF5E44 MOV X20, X1
	0x01EF5E48 MOV X19, X0
	0x01EF5E4C TBNZ X8, 0x0, 0x1EF5E64

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x24E5000
	009 Move W8, [X23+1517]
	010 Move W20, W3
	011 Move X19, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x220C000
	019 Move X0, [X0+1832]
	020 Call 0x1C17CF4
	021 Move X0, 0x220C000
	022 Move X0, [X0+1840]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1517], W8
	026 Move X0, X22
	027 Move [X31+8], X31
	028 Move [X31+4], W31
	029 Call CommunicatorBase.Poll, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {66}
	034 Move X0, [X22+32]
	035 Compare X0, 0
	036 JumpIfEqual {84}
	037 Move X8, 0x220C000
	038 Move X8, [X8+1832]
	039 Move X1, [X8]
	040 Call 0x24F019C, X0
	041 Move X8, [X22]
	042 Move X23, X0
	043 Add X2, X31, 8
	044 Add X3, X31, 4
	045 Move X9, [X8+552]
	046 Move X4, [X8+560]
	047 Move X0, X22
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move W8, [X31+4]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X21], W23
	052 Move X9, 0x220C000
	053 Move X9, [X9+1840]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSET not yet implemented."
	056 Move X2, X31
	057 Move X1, [X9]
	058 Call Assert.Always, X0, X1
	059 Move X8, [X31+8]
	060 Compare X8, 0
	061 JumpIfEqual {70}
	062 Move W9, [X8+24]
	063 Add X8, X8, 32
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W0, TEMP
	069 Move [X21], W0
	070 Move X1, X31
	071 Move W2, [X31+4]
	072 Move X0, X19
	073 Move X3, X31
	074 Call Native.MemCpy, X0, X1, X2
	075 Move W0, [X31+4]
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Move X23, [X31+24]
	082 Add X31, X31, 64
	083 Return X0
	084 Call 0x1C17F20

Method: System.Boolean SendPackage(System.Byte code, System.Int32 targetActor, System.Boolean reliable, System.Byte* buffer, System.Int32 bufferLength)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void ConvertData(System.Object data, out System.Byte[] dataBuffer, out System.Int32 maxLength)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void RegisterPackageCallback(System.Action`2<System.Int32, K> callback)

Disassembly:
	0x021A4668 MOV X0, X20
	0x021A466C BL 0x1C5C6E0
	0x021A4670 MOV X0, X21
	0x021A4674 MOV X1, X31
	0x021A4678 BL 0x3C32ECC
	0x021A467C CBZ X0, 0x21A469C
	0x021A4680 LDR X8, [X20 + 0x38]
	0x021A4684 AND W1, W19, 0x1
	0x021A4688 LDP X20, X19, [X31 + 0x10]
	0x021A468C LDR X2, [X8]
	0x021A4690 LDR X3, [X2]
	0x021A4694 LDP X30, X21, [X31], #0x20
	0x021A4698 BR X3
	0x021A469C BL 0x1C16F20
	0x021A46A0 STP X30, X21, [X31 - 0x20]!
	0x021A46A4 STP X20, X19, [X31 + 0x10]
	0x021A46A8 LDR X8, [X2 + 0x38]
	0x021A46AC MOV X19, X1
	0x021A46B0 MOV X20, X0
	0x021A46B4 CBNZ X8, 0x21A46C8
	0x021A46B8 MOV X0, X2
	0x021A46BC MOV X21, X2
	0x021A46C0 BL 0x1C5C6E0
	0x021A46C4 LDR X8, [X21 + 0x38]
	0x021A46C8 LDR X3, [X8 + 0x8]
	0x021A46CC MOV X0, X20
	0x021A46D0 MOV X2, X19
	0x021A46D4 LDP X20, X19, [X31 + 0x10]
	0x021A46D8 LDR X4, [X3]
	0x021A46DC MOV W1, W31
	0x021A46E0 LDP X30, X21, [X31], #0x20
	0x021A46E4 BR X4
	0x021A46E8 STR X30, [X31 - 0x30]!
	0x021A46EC STP X22, X21, [X31 + 0x10]
	0x021A46F0 STP X20, X19, [X31 + 0x20]
	0x021A46F4 LDR X8, [X3 + 0x38]
	0x021A46F8 MOV X21, X3
	0x021A46FC MOV X19, X2
	0x021A4700 MOV W20, W1
	0x021A4704 MOV X22, X0
	0x021A4708 CBNZ X8, 0x21A4714
	0x021A470C MOV X0, X21
	0x021A4710 BL 0x1C5C6E0
	0x021A4714 MOV X0, X22
	0x021A4718 MOV X1, X31
	0x021A471C BL 0x3C32ECC
	0x021A4720 CBZ X0, 0x21A4744
	0x021A4724 LDR X8, [X21 + 0x38]
	0x021A4728 AND W1, W20, 0x1
	0x021A472C MOV X2, X19
	0x021A4730 LDP X20, X19, [X31 + 0x20]
	0x021A4734 LDR X3, [X8 + 0x8]
	0x021A4738 LDP X22, X21, [X31 + 0x10]
	0x021A473C LDR X30, [X31], #0x30
	0x021A4740 B 0x21E61D0
	0x021A4744 BL 0x1C16F20
	0x021A4748 STR X30, [X31 - 0x30]!
	0x021A474C STP X22, X21, [X31 + 0x10]
	0x021A4750 STP X20, X19, [X31 + 0x20]
	0x021A4754 LDR X8, [X3 + 0x38]
	0x021A4758 MOV X21, X3
	0x021A475C MOV X19, X2
	0x021A4760 MOV W20, W1
	0x021A4764 MOV X22, X0
	0x021A4768 CBNZ X8, 0x21A4774
	0x021A476C MOV X0, X21
	0x021A4770 BL 0x1C5C6E0
	0x021A4774 MOV X0, X22
	0x021A4778 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X21, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {27}
	012 Move X0, 0x1F78000
	013 Move X0, [X0+2264]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F78000
	016 Move X0, [X0+2272]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F50000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move X8, [X19+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X19
	025 Call 0x1C5D6E0
	026 Move X8, [X19+56]
	027 Move X0, [X8]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Call 0x1C17F10
	035 Move X8, [X19+56]
	036 Move X22, X0
	037 Move X1, [X8+8]
	038 Call 0x2373CB0, X0
	039 Compare X22, 0
	040 JumpIfEqual {82}
	041 Move [X22+16], X21
	042 Move X8, 0x1F50000
	043 Move X8, [X8+1728]
	044 Move X20, [X20+16]
	045 Move X0, [X8]
	046 Move X8, [X19+56]
	047 Move W9, [X0+224]
	048 Move X21, [X8+24]
	049 Compare W9, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X21
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Move X8, 0x1F78000
	056 Move X8, [X8+2264]
	057 Move X21, X0
	058 Move X8, [X8]
	059 Move X0, X8
	060 Call 0x1C17F10
	061 Move X8, [X19+56]
	062 Move X1, X22
	063 Move X3, X31
	064 Move X19, X0
	065 Move X2, [X8+32]
	066 Call Action`2<Int32, Object>..ctor, X0, X1, X2
	067 Compare X20, 0
	068 JumpIfEqual {82}
	069 Move X8, 0x1F78000
	070 Move X8, [X8+2272]
	071 Move X0, X20
	072 Move X1, X21
	073 Move X2, X19
	074 Move X3, [X8]
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	081 Return 
	082 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01EF5E50 ADRP X0, 0x220B000
	0x01EF5E54 LDR X0, [X0 + 0x818]
	0x01EF5E58 BL 0x1C16CF4
	0x01EF5E5C MOVZ W8, 0x1
	0x01EF5E60 STRB W8, [X21 + 0x5F7]
	0x01EF5E64 LDR X8, [X22]
	0x01EF5E68 MOVN X9, 0x0
	0x01EF5E6C ADD X0, X31, 0x0
	0x01EF5E70 MOV X1, X31
	0x01EF5E74 STP X8, X9, [X31]
	0x01EF5E78 LDRB W8, [X19 + 0x28]
	0x01EF5E7C STRB W8, [X31 + 0x10]
	0x01EF5E80 BL 0x33B162C
	0x01EF5E84 STR X0, [X31 + 0x28]
	0x01EF5E88 LDRB W21, [X19 + 0x28]
	0x01EF5E8C STRB W21, [X31 + 0x1C]
	0x01EF5E90 CBZ X20, 0x1EF5ED8
	0x01EF5E94 LDRB W8, [X19 + 0x10]
	0x01EF5E98 CMP W8, 0x2
	0x01EF5E9C B.CS 0x1EF5EB0
	0x01EF5EA0 ADD X1, X31, 0x28
	0x01EF5EA4 MOV X0, X20
	0x01EF5EA8 BL 0x1EF3524
	0x01EF5EAC B 0x1EF5EC0
	0x01EF5EB0 ADD X1, X31, 0x1C
	0x01EF5EB4 MOV X0, X20
	0x01EF5EB8 BL 0x1EF3730
	0x01EF5EBC LDRB W21, [X31 + 0x1C]
	0x01EF5EC0 STRB W21, [X19 + 0x28]
	0x01EF5EC4 LDP X20, X19, [X31 + 0x40]
	0x01EF5EC8 LDP X22, X21, [X31 + 0x30]
	0x01EF5ECC LDR X30, [X31 + 0x20]
	0x01EF5ED0 ADD X31, X31, 0x50
	0x01EF5ED4 RET
	0x01EF5ED8 BL 0x1C16F20
	0x01EF5EDC SUB X31, X31, 0x30
	0x01EF5EE0 STP X30, X21, [X31 + 0x10]
	0x01EF5EE4 STP X20, X19, [X31 + 0x20]
	0x01EF5EE8 ADRP X20, 0x24E4000
	0x01EF5EEC ADRP X21, 0x21FE000
	0x01EF5EF0 LDRB W8, [X20 + 0x5F8]
	0x01EF5EF4 LDR X21, [X21 + 0x9D0]
	0x01EF5EF8 MOV X19, X0
	0x01EF5EFC TBNZ X8, 0x0, 0x1EF5F44
	0x01EF5F00 ADRP X0, 0x220B000
	0x01EF5F04 LDR X0, [X0 + 0x818]
	0x01EF5F08 BL 0x1C16CF4
	0x01EF5F0C ADRP X0, 0x21FE000
	0x01EF5F10 LDR X0, [X0 + 0x9D0]
	0x01EF5F14 BL 0x1C16CF4
	0x01EF5F18 ADRP X0, 0x220B000
	0x01EF5F1C LDR X0, [X0 + 0x820]
	0x01EF5F20 BL 0x1C16CF4
	0x01EF5F24 ADRP X0, 0x220B000
	0x01EF5F28 LDR X0, [X0 + 0x828]
	0x01EF5F2C BL 0x1C16CF4
	0x01EF5F30 ADRP X0, 0x220B000
	0x01EF5F34 LDR X0, [X0 + 0x7E0]
	0x01EF5F38 BL 0x1C16CF4
	0x01EF5F3C MOVZ W8, 0x1
	0x01EF5F40 STRB W8, [X20 + 0x5F8]
	0x01EF5F44 LDR X0, [X21]
	0x01EF5F48 MOVZ W1, 0x4
	0x01EF5F4C BL 0x1C16D6C
	0x01EF5F50 CBZ X0, 0x1EF6070
	0x01EF5F54 ADRP X21, 0x220B000
	0x01EF5F58 LDR X21, [X21 + 0x828]
	0x01EF5F5C MOV X20, X0
	0x01EF5F60 LDR X0, [X21]
	0x01EF5F64 CBZ X0, 0x1EF5F78
	0x01EF5F68 LDR X8, [X20]
	0x01EF5F6C LDR X1, [X8 + 0x40]
	0x01EF5F70 BL 0x1C16E00
	0x01EF5F74 CBZ X0, 0x1EF6064
	0x01EF5F78 LDR W8, [X20 + 0x18]
	0x01EF5F7C CBZ W8, 0x1EF6060
	0x01EF5F80 LDR X9, [X21]
	0x01EF5F84 ADRP X21, 0x220B000
	0x01EF5F88 LDR X21, [X21 + 0x820]
	0x01EF5F8C STR X9, [X20 + 0x20]
	0x01EF5F90 LDR X0, [X21]
	0x01EF5F94 CBZ X0, 0x1EF5FAC
	0x01EF5F98 LDR X8, [X20]
	0x01EF5F9C LDR X1, [X8 + 0x40]
	0x01EF5FA0 BL 0x1C16E00
	0x01EF5FA4 CBZ X0, 0x1EF6064
	0x01EF5FA8 LDR W8, [X20 + 0x18]
	0x01EF5FAC CMP W8, 0x1
	0x01EF5FB0 B.LS 0x1EF6060
	0x01EF5FB4 LDR X8, [X21]
	0x01EF5FB8 ADRP X9, 0x220B000
	0x01EF5FBC LDR X9, [X9 + 0x818]
	0x01EF5FC0 ADD X1, X31, 0xC
	0x01EF5FC4 STR X8, [X20 + 0x28]
	0x01EF5FC8 LDRB W8, [X19 + 0x28]
	0x01EF5FCC LDR X0, [X9]
	0x01EF5FD0 STRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0x24E5000
	014 Move X29, 0x220C000
	015 Move X20, 0x220C000
	016 Move X27, 0x220C000
	017 Move X26, 0x220C000
	018 Move X25, 0x220C000
	019 Move X24, 0x220C000
	020 Move X23, 0x220C000
	021 Move X22, 0x220C000
	022 Move X21, 0x220C000
	023 Move X29, [X29+1848]
	024 Move X20, [X20+1856]
	025 Move X27, [X27+1864]
	026 Move X26, [X26+1872]
	027 Move W8, [X28+1518]
	028 Move X25, [X25+1880]
	029 Move X24, [X24+1888]
	030 Move X23, [X23+1896]
	031 Move X22, [X22+1904]
	032 Move X21, [X21+1912]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {67}
	038 Move X0, 0x220C000
	039 Move X0, [X0+1856]
	040 Call 0x1C17CF4
	041 Move X0, 0x220C000
	042 Move X0, [X0+1848]
	043 Call 0x1C17CF4
	044 Move X0, 0x220C000
	045 Move X0, [X0+1904]
	046 Call 0x1C17CF4
	047 Move X0, 0x220C000
	048 Move X0, [X0+1896]
	049 Call 0x1C17CF4
	050 Move X0, 0x220C000
	051 Move X0, [X0+1912]
	052 Call 0x1C17CF4
	053 Move X0, 0x220C000
	054 Move X0, [X0+1872]
	055 Call 0x1C17CF4
	056 Move X0, 0x220C000
	057 Move X0, [X0+1888]
	058 Call 0x1C17CF4
	059 Move X0, 0x220C000
	060 Move X0, [X0+1880]
	061 Call 0x1C17CF4
	062 Move X0, 0x220C000
	063 Move X0, [X0+1864]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X28+1518], W8
	067 Move X0, [X29]
	068 Call 0x1C17F10
	069 Move X1, [X20]
	070 Move X20, X0
	071 Call Dictionary`2<Object, Object>..ctor, X0
	072 Move [X19+16], X20
	073 Move X0, [X27]
	074 Call 0x1C17F10
	075 Move X2, [X26]
	076 Move W1, 64
	077 Move X20, X0
	078 Call 0x24EFB98, X0, X1
	079 Move [X19+24], X20
	080 Move X0, [X25]
	081 Call 0x1C17F10
	082 Move X1, [X24]
	083 Move X20, X0
	084 Call 0x24EFB18, X0
	085 Move [X19+32], X20
	086 Move X0, [X23]
	087 Call 0x1C17F10
	088 Move X2, [X22]
	089 Move W1, 64
	090 Move X20, X0
	091 Call List`1<Object>..ctor, X0, X1
	092 Move [X19+40], X20
	093 Move X0, [X21]
	094 Call 0x1C17F10
	095 Move X20, X0
	096 Call ProtocolSerializer..ctor, X0
	097 Move [X19+48], X20
	098 Move X0, X19
	099 Move X20, [X31+80]
	100 Move X19, [X31+88]
	101 Move X22, [X31+64]
	102 Move X21, [X31+72]
	103 Move X24, [X31+48]
	104 Move X23, [X31+56]
	105 Move X26, [X31+32]
	106 Move X25, [X31+40]
	107 Move X28, [X31+16]
	108 Move X27, [X31+24]
	109 Move X1, X31
	110 Move X29, [X31+96]
	111 Move X30, [X31+104]
	112 Call Object..ctor, X0
	113 Return 

