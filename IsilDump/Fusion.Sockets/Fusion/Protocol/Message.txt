Type: Fusion.Protocol.Message

Method: System.Boolean get_IsValid()

Disassembly:
	0x01EF6820 STRB W8, [X19 + 0x2A]
	0x01EF6824 LDR W8, [X31 + 0x8]
	0x01EF6828 STR W8, [X19 + 0x2C]
	0x01EF682C LDP X20, X19, [X31 + 0x20]
	0x01EF6830 ADD X31, X31, 0x30
	0x01EF6834 RET
	0x01EF6838 BL 0x1C16F20
	0x01EF683C SUB X31, X31, 0x50
	0x01EF6840 STP X30, X23, [X31 + 0x20]
	0x01EF6844 STP X22, X21, [X31 + 0x30]
	0x01EF6848 STP X20, X19, [X31 + 0x40]
	0x01EF684C ADRP X20, 0x24E3000
	0x01EF6850 LDRB W8, [X20 + 0x5FD]
	0x01EF6854 MOV X19, X0
	0x01EF6858 TBNZ X8, 0x0, 0x1EF6900
	0x01EF685C ADRP X0, 0x21FF000
	0x01EF6860 LDR X0, [X0 + 0xA60]
	0x01EF6864 BL 0x1C16CF4
	0x01EF6868 ADRP X0, 0x220A000
	0x01EF686C LDR X0, [X0 + 0x860]
	0x01EF6870 BL 0x1C16CF4
	0x01EF6874 ADRP X0, 0x220A000
	0x01EF6878 LDR X0, [X0 + 0x868]
	0x01EF687C BL 0x1C16CF4
	0x01EF6880 ADRP X0, 0x21FD000
	0x01EF6884 LDR X0, [X0 + 0x9D0]
	0x01EF6888 BL 0x1C16CF4
	0x01EF688C ADRP X0, 0x220A000
	0x01EF6890 LDR X0, [X0 + 0x850]
	0x01EF6894 BL 0x1C16CF4
	0x01EF6898 ADRP X0, 0x220A000
	0x01EF689C LDR X0, [X0 + 0x870]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24E4000
	005 Move W8, [X20+1520]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2206000
	012 Move X0, [X0+1992]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1520], W8
	016 Move W8, [X19+16]
	017 Compare W8, 0
	018 JumpIfEqual {37}
	019 Move X20, 0x2206000
	020 Move X20, [X20+1992]
	021 Move X19, [X19+24]
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, X31
	033 Move X1, [X8]
	034 Move X30, [X31+32]
	035 Call Version.op_Inequality, X0, X1
	036 Return X0
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move W0, W31
	040 Move X30, [X31+32]
	041 Return X0

Method: System.String get_CustomData()

Disassembly:
	0x01EF68A0 BL 0x1C16CF4
	0x01EF68A4 ADRP X0, 0x220A000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_CustomData(System.String value)

Disassembly:
	0x01EF68A8 LDR X0, [X0 + 0x858]
	0x01EF68AC BL 0x1C16CF4
	0x01EF68B0 ADRP X0, 0x220A000
	0x01EF68B4 LDR X0, [X0 + 0x878]
	0x01EF68B8 BL 0x1C16CF4
	0x01EF68BC ADRP X0, 0x2209000
	0x01EF68C0 LDR X0, [X0 + 0x268]
	0x01EF68C4 BL 0x1C16CF4
	0x01EF68C8 ADRP X0, 0x220A000
	0x01EF68CC LDR X0, [X0 + 0x880]
	0x01EF68D0 BL 0x1C16CF4
	0x01EF68D4 ADRP X0, 0x220A000
	0x01EF68D8 LDR X0, [X0 + 0x888]
	0x01EF68DC BL 0x1C16CF4
	0x01EF68E0 ADRP X0, 0x2208000
	0x01EF68E4 LDR X0, [X0 + 0x3B0]
	0x01EF68E8 BL 0x1C16CF4
	0x01EF68EC ADRP X0, 0x220A000
	0x01EF68F0 LDR X0, [X0 + 0x890]
	0x01EF68F4 BL 0x1C16CF4
	0x01EF68F8 MOVZ W8, 0x1
	0x01EF68FC STRB W8, [X20 + 0x5FD]
	0x01EF6900 ADRP X20, 0x21FD000
	0x01EF6904 LDR X0, [X19 + 0x30]
	0x01EF6908 LDR X20, [X20 + 0x9D0]
	0x01EF690C CBZ X0, 0x1EF6930
	0x01EF6910 LDR W8, [X0 + 0x18]
	0x01EF6914 CMP W8, 0x8
	0x01EF6918 B.NE 0x1EF6930
	0x01EF691C MOV W1, W31
	0x01EF6920 MOV X2, X31
	0x01EF6924 BL 0x3317088
	0x01EF6928 MOV X21, X0
	0x01EF692C B 0x1EF6934
	0x01EF6930 MOV X21, X31
	0x01EF6934 LDR X0, [X20]
	0x01EF6938 MOVZ W1, 0xC
	0x01EF693C BL 0x1C16D6C
	0x01EF6940 CBZ X0, 0x1EF6C50
	0x01EF6944 ADRP X22, 0x220A000
	0x01EF6948 LDR X22, [X22 + 0x888]
	0x01EF694C MOV X20, X0
	0x01EF6950 LDR X0, [X22]
	0x01EF6954 CBZ X0, 0x1EF6968
	0x01EF6958 LDR X8, [X20]
	0x01EF695C LDR X1, [X8 + 0x40]
	0x01EF6960 BL 0x1C16E00
	0x01EF6964 CBZ X0, 0x1EF6C44
	0x01EF6968 LDR W8, [X20 + 0x18]
	0x01EF696C CBZ W8, 0x1EF6C40
	0x01EF6970 LDR X9, [X22]
	0x01EF6974 ADRP X22, 0x2208000
	0x01EF6978 LDR X22, [X22 + 0x3B0]
	0x01EF697C STR X9, [X20 + 0x20]
	0x01EF6980 LDR X0, [X22]
	0x01EF6984 CBZ X0, 0x1EF699C
	0x01EF6988 LDR X8, [X20]
	0x01EF698C LDR X1, [X8 + 0x40]
	0x01EF6990 BL 0x1C16E00
	0x01EF6994 CBZ X0, 0x1EF6C44
	0x01EF6998 LDR W8, [X20 + 0x18]
	0x01EF699C CMP W8, 0x1
	0x01EF69A0 B.LS 0x1EF6C40
	0x01EF69A4 LDR X8, [X22]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x24E4000
	009 Move W8, [X21+1521]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x21FE000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move X0, 0x21FE000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move X0, 0x220B000
	023 Move X0, [X0+2064]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1521], W8
	027 Compare X20, 0
	028 JumpIfEqual {75}
	029 Move X8, 0x21FE000
	030 Move X8, [X8+1880]
	031 Move X21, 0x220B000
	032 Move X21, [X21+2064]
	033 Move X23, 0x21FE000
	034 Move X0, [X8]
	035 Move W22, [X20+16]
	036 Move X23, [X23+1448]
	037 Move W8, 1024
	038 Add X1, X31, 12
	039 Move [X31+12], W8
	040 Call 0x1C17E04
	041 Move X8, [X21]
	042 Move X1, X0
	043 Move X2, X31
	044 Move X0, X8
	045 Call String.Format, X0, X1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X1, X0
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X2, X31
	050 Call Assert.Always, X0, X1
	051 Move X0, [X23]
	052 Move W21, [X20+16]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move W1, 1024
	058 Move W0, W21
	059 Move X2, X31
	060 Call Math.Min, X0, X1
	061 Move W2, W0
	062 Move X0, X20
	063 Move W1, W31
	064 Move X3, X31
	065 Call String.Substring, X0, X1, X2
	066 Move [X19+32], X0
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X30, [X31+16]
	072 Move X23, [X31+24]
	073 Add X31, X31, 64
	074 Return 
	075 Call 0x1C17F20

Method: Fusion.Protocol.Message Clone()

Disassembly:
	0x01EF69A8 ADRP X9, 0x220A000
	0x01EF69AC LDR X9, [X9 + 0x860]
	0x01EF69B0 ADD X1, X31, 0x1C
	0x01EF69B4 STR X8, [X20 + 0x28]
	0x01EF69B8 LDRB W8, [X19 + 0x28]
	0x01EF69BC LDR X0, [X9]
	0x01EF69C0 STRB W8, [X31 + 0x1C]
	0x01EF69C4 BL 0x1C16E04
	0x01EF69C8 MOV X22, X0
	0x01EF69CC CBZ X0, 0x1EF69E4
	0x01EF69D0 LDR X8, [X20]
	0x01EF69D4 MOV X0, X22
	0x01EF69D8 LDR X1, [X8 + 0x40]
	0x01EF69DC BL 0x1C16E00
	0x01EF69E0 CBZ X0, 0x1EF6C44
	0x01EF69E4 LDR W8, [X20 + 0x18]
	0x01EF69E8 CMP W8, 0x2
	0x01EF69EC B.LS 0x1EF6C40
	0x01EF69F0 ADRP X23, 0x2209000
	0x01EF69F4 LDR X23, [X23 + 0x268]
	0x01EF69F8 STR X22, [X20 + 0x30]
	0x01EF69FC LDR X0, [X23]
	0x01EF6A00 CBZ X0, 0x1EF6A18
	0x01EF6A04 LDR X8, [X20]
	0x01EF6A08 LDR X1, [X8 + 0x40]
	0x01EF6A0C BL 0x1C16E00
	0x01EF6A10 CBZ X0, 0x1EF6C44
	0x01EF6A14 LDR W8, [X20 + 0x18]
	0x01EF6A18 CMP W8, 0x3
	0x01EF6A1C B.LS 0x1EF6C40
	0x01EF6A20 LDR X8, [X23]
	0x01EF6A24 ADRP X9, 0x220A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24E4000
	005 Move W8, [X20+1522]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x220B000
	012 Move X0, [X0+1768]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1522], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call Object.MemberwiseClone, X0
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X9, 0x220B000
	022 Move X9, [X9+1768]
	023 Move X8, [X0]
	024 Move X1, [X9]
	025 Move W10, [X8+304]
	026 Move W9, [X1+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X8+200]
	029 Add X8, X8, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C181E0

Method: System.Void .ctor(Fusion.Protocol.ProtocolMessageVersion protocolMessage = 10, System.Version serializationVersion = null)

Disassembly:
	0x01EF6398 BL 0x1C16E04
	0x01EF639C MOV X21, X0
	0x01EF63A0 CBZ X0, 0x1EF63B8
	0x01EF63A4 LDR X8, [X20]
	0x01EF63A8 MOV X0, X21
	0x01EF63AC LDR X1, [X8 + 0x40]
	0x01EF63B0 BL 0x1C16E00
	0x01EF63B4 CBZ X0, 0x1EF64A0
	0x01EF63B8 LDR W8, [X20 + 0x18]
	0x01EF63BC CMP W8, 0x2
	0x01EF63C0 B.LS 0x1EF649C
	0x01EF63C4 ADRP X23, 0x220A000
	0x01EF63C8 LDR X23, [X23 + 0x840]
	0x01EF63CC STR X21, [X20 + 0x30]
	0x01EF63D0 LDR X0, [X23]
	0x01EF63D4 CBZ X0, 0x1EF63EC
	0x01EF63D8 LDR X8, [X20]
	0x01EF63DC LDR X1, [X8 + 0x40]
	0x01EF63E0 BL 0x1C16E00
	0x01EF63E4 CBZ X0, 0x1EF64A0
	0x01EF63E8 LDR W8, [X20 + 0x18]
	0x01EF63EC CMP W8, 0x3
	0x01EF63F0 B.LS 0x1EF649C
	0x01EF63F4 LDR X8, [X23]
	0x01EF63F8 ADD X1, X31, 0x8
	0x01EF63FC STR X8, [X20 + 0x38]
	0x01EF6400 LDR W8, [X19 + 0x2C]
	0x01EF6404 LDR X0, [X22]
	0x01EF6408 STR W8, [X31 + 0x8]
	0x01EF640C BL 0x1C16E04
	0x01EF6410 MOV X21, X0
	0x01EF6414 CBZ X0, 0x1EF642C
	0x01EF6418 LDR X8, [X20]
	0x01EF641C MOV X0, X21
	0x01EF6420 LDR X1, [X8 + 0x40]
	0x01EF6424 BL 0x1C16E00
	0x01EF6428 CBZ X0, 0x1EF64A0
	0x01EF642C LDR W8, [X20 + 0x18]
	0x01EF6430 CMP W8, 0x4
	0x01EF6434 B.LS 0x1EF649C
	0x01EF6438 MOV X0, X19
	0x01EF643C STR X21, [X20 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x24E4000
	008 Move X23, 0x2200000
	009 Move W8, [X22+1523]
	010 Move X23, [X23+632]
	011 Move X20, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2200000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move X0, 0x2206000
	022 Move X0, [X0+1992]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1523], W8
	026 Move X8, [X23]
	027 Move X0, X19
	028 Move X1, X31
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Move [X19+32], X8
	032 Call Object..ctor, X0
	033 Move [X19+16], W21
	034 Compare X20, 0
	035 JumpIfNotEqual {46}
	036 Move X8, 0x2206000
	037 Move X8, [X8+1992]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X31
	044 Call Versioning.get_GetCurrentVersion
	045 Move X20, X0
	046 Move [X19+24], X20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return 

Method: System.Void Serialize(Fusion.Protocol.BitStream stream)

Disassembly:
	0x01EF6A28 LDR X9, [X9 + 0x870]
	0x01EF6A2C ADD X1, X31, 0x18
	0x01EF6A30 STR X8, [X20 + 0x38]
	0x01EF6A34 LDRB W8, [X19 + 0x29]
	0x01EF6A38 LDR X0, [X9]
	0x01EF6A3C STRB W8, [X31 + 0x18]
	0x01EF6A40 BL 0x1C16E04
	0x01EF6A44 MOV X22, X0
	0x01EF6A48 CBZ X0, 0x1EF6A60
	0x01EF6A4C LDR X8, [X20]
	0x01EF6A50 MOV X0, X22
	0x01EF6A54 LDR X1, [X8 + 0x40]
	0x01EF6A58 BL 0x1C16E00
	0x01EF6A5C CBZ X0, 0x1EF6C44
	0x01EF6A60 LDR W8, [X20 + 0x18]
	0x01EF6A64 CMP W8, 0x4
	0x01EF6A68 B.LS 0x1EF6C40
	0x01EF6A6C ADRP X23, 0x220A000
	0x01EF6A70 LDR X23, [X23 + 0x858]
	0x01EF6A74 STR X22, [X20 + 0x40]
	0x01EF6A78 LDR X0, [X23]
	0x01EF6A7C CBZ X0, 0x1EF6A94
	0x01EF6A80 LDR X8, [X20]
	0x01EF6A84 LDR X1, [X8 + 0x40]
	0x01EF6A88 BL 0x1C16E00
	0x01EF6A8C CBZ X0, 0x1EF6C44
	0x01EF6A90 LDR W8, [X20 + 0x18]
	0x01EF6A94 CMP W8, 0x5
	0x01EF6A98 B.LS 0x1EF6C40
	0x01EF6A9C LDR X8, [X23]
	0x01EF6AA0 ADRP X9, 0x220A000
	0x01EF6AA4 LDR X9, [X9 + 0x850]
	0x01EF6AA8 ADD X1, X31, 0x14
	0x01EF6AAC STR X8, [X20 + 0x48]
	0x01EF6AB0 LDRB W8, [X19 + 0x2A]
	0x01EF6AB4 LDR X0, [X9]
	0x01EF6AB8 STRB W8, [X31 + 0x14]
	0x01EF6ABC BL 0x1C16E04
	0x01EF6AC0 MOV X22, X0
	0x01EF6AC4 CBZ X0, 0x1EF6ADC
	0x01EF6AC8 LDR X8, [X20]
	0x01EF6ACC MOV X0, X22
	0x01EF6AD0 LDR X1, [X8 + 0x40]
	0x01EF6AD4 BL 0x1C16E00
	0x01EF6AD8 CBZ X0, 0x1EF6C44
	0x01EF6ADC LDR W8, [X20 + 0x18]
	0x01EF6AE0 CMP W8, 0x6
	0x01EF6AE4 B.LS 0x1EF6C40
	0x01EF6AE8 ADRP X23, 0x220A000
	0x01EF6AEC LDR X23, [X23 + 0x880]
	0x01EF6AF0 STR X22, [X20 + 0x50]
	0x01EF6AF4 LDR X0, [X23]
	0x01EF6AF8 CBZ X0, 0x1EF6B10
	0x01EF6AFC LDR X8, [X20]
	0x01EF6B00 LDR X1, [X8 + 0x40]
	0x01EF6B04 BL 0x1C16E00
	0x01EF6B08 CBZ X0, 0x1EF6C44
	0x01EF6B0C LDR W8, [X20 + 0x18]
	0x01EF6B10 CMP W8, 0x7
	0x01EF6B14 B.LS 0x1EF6C40
	0x01EF6B18 LDR X8, [X23]
	0x01EF6B1C ADRP X9, 0x220A000
	0x01EF6B20 LDR X9, [X9 + 0x868]
	0x01EF6B24 ADD X1, X31, 0x10
	0x01EF6B28 STR X8, [X20 + 0x58]
	0x01EF6B2C LDR W8, [X19 + 0x2C]
	0x01EF6B30 LDR X0, [X9]
	0x01EF6B34 STR W8, [X31 + 0x10]
	0x01EF6B38 BL 0x1C16E04
	0x01EF6B3C MOV X22, X0
	0x01EF6B40 CBZ X0, 0x1EF6B58
	0x01EF6B44 LDR X8, [X20]
	0x01EF6B48 MOV X0, X22
	0x01EF6B4C LDR X1, [X8 + 0x40]
	0x01EF6B50 BL 0x1C16E00
	0x01EF6B54 CBZ X0, 0x1EF6C44
	0x01EF6B58 LDR W8, [X20 + 0x18]
	0x01EF6B5C CMP W8, 0x8
	0x01EF6B60 B.LS 0x1EF6C40
	0x01EF6B64 ADRP X23, 0x220A000
	0x01EF6B68 LDR X23, [X23 + 0x878]
	0x01EF6B6C STR X22, [X20 + 0x60]
	0x01EF6B70 LDR X0, [X23]
	0x01EF6B74 CBZ X0, 0x1EF6B8C
	0x01EF6B78 LDR X8, [X20]
	0x01EF6B7C LDR X1, [X8 + 0x40]
	0x01EF6B80 BL 0x1C16E00
	0x01EF6B84 CBZ X0, 0x1EF6C44
	0x01EF6B88 LDR W8, [X20 + 0x18]
	0x01EF6B8C CMP W8, 0x9
	0x01EF6B90 B.LS 0x1EF6C40
	0x01EF6B94 LDR X8, [X23]
	0x01EF6B98 ADRP X9, 0x21FF000
	0x01EF6B9C LDR X9, [X9 + 0xA60]
	0x01EF6BA0 ADD X1, X31, 0x8
	0x01EF6BA4 STR X8, [X20 + 0x68]
	0x01EF6BA8 STR X21, [X31 + 0x8]
	0x01EF6BAC LDR X0, [X9]
	0x01EF6BB0 BL 0x1C16E04
	0x01EF6BB4 MOV X21, X0
	0x01EF6BB8 CBZ X0, 0x1EF6BD0
	0x01EF6BBC LDR X8, [X20]
	0x01EF6BC0 MOV X0, X21
	0x01EF6BC4 LDR X1, [X8 + 0x40]
	0x01EF6BC8 BL 0x1C16E00
	0x01EF6BCC CBZ X0, 0x1EF6C44
	0x01EF6BD0 LDR W8, [X20 + 0x18]
	0x01EF6BD4 CMP W8, 0xA
	0x01EF6BD8 B.LS 0x1EF6C40
	0x01EF6BDC MOV X0, X19
	0x01EF6BE0 STR X21, [X20 + 0x70]
	0x01EF6BE4 BL 0x1EF5624
	0x01EF6BE8 MOV X19, X0
	0x01EF6BEC CBZ X0, 0x1EF6C04
	0x01EF6BF0 LDR X8, [X20]
	0x01EF6BF4 MOV X0, X19
	0x01EF6BF8 LDR X1, [X8 + 0x40]
	0x01EF6BFC BL 0x1C16E00
	0x01EF6C00 CBZ X0, 0x1EF6C44
	0x01EF6C04 LDR W8, [X20 + 0x18]
	0x01EF6C08 CMP W8, 0xB
	0x01EF6C0C B.LS 0x1EF6C40
	0x01EF6C10 ADRP X8, 0x220A000
	0x01EF6C14 LDR X8, [X8 + 0x890]
	0x01EF6C18 STR X19, [X20 + 0x78]
	0x01EF6C1C MOV X1, X20
	0x01EF6C20 MOV X2, X31
	0x01EF6C24 LDR X0, [X8]
	0x01EF6C28 BL 0x3227C5C
	0x01EF6C2C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0x24E4000
	012 Move W8, [X21+1524]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x21FE000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move X0, 0x2200000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move X0, 0x2206000
	026 Move X0, [X0+1984]
	027 Call 0x1C17CF4
	028 Move X0, 0x2206000
	029 Move X0, [X0+1992]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1524], W8
	033 Move W8, [X20+16]
	034 Move [X31+28], W8
	035 Move X8, [X20+24]
	036 Compare X8, 0
	037 JumpIfEqual {148}
	038 Move W9, [X8+16]
	039 Move [X31+24], W9
	040 Move W9, [X8+20]
	041 Move W8, [X8+24]
	042 Move [X31+8], W8
	043 Move [X31+12], W9
	044 Compare X19, 0
	045 JumpIfEqual {148}
	046 Move X21, 0x21FE000
	047 Move X21, [X21+1448]
	048 Add X1, X31, 28
	049 Move X0, X19
	050 Call BitStream.Serialize, X0, X1
	051 Move X0, [X21]
	052 Move W21, [X31+28]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X25, 0x2206000
	058 Move X26, 0x2206000
	059 Move X25, [X25+1984]
	060 Move X26, [X26+1992]
	061 Move W0, 10
	062 Move W1, W21
	063 Move X2, X31
	064 Call Math.Min, X0, X1
	065 And W8, W0, 255
	066 Move W21, W0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X31+28], W0
	069 Move W24, W31
	070 Move W23, W31
	071 Move W22, W31
	072 Move [X31+24], W31
	073 Move [X31+8], X31
	074 Add X1, X31, 24
	075 Move W2, 32
	076 Move X0, X19
	077 Call BitStream.Serialize, X0, X1, X2
	078 Add X1, X31, 12
	079 Move W2, 32
	080 Move X0, X19
	081 Call BitStream.Serialize, X0, X1, X2
	082 Add X1, X31, 8
	083 Move W2, 32
	084 Move X0, X19
	085 Call BitStream.Serialize, X0, X1, X2
	086 Move W22, [X31+24]
	087 Move W24, [X31+8]
	088 Move W23, [X31+12]
	089 Move [X20+16], W21
	090 Move X0, [X25]
	091 Call 0x1C17F10
	092 Move W1, W22
	093 Move W2, W23
	094 Move W3, W24
	095 Move X4, X31
	096 Move X25, X0
	097 Call Version..ctor, X0, X1, X2, X3
	098 Move [X20+24], X25
	099 Move X0, [X26]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X25
	105 Move X1, X31
	106 Call Versioning.ShortVersion, X0
	107 Move X22, X0
	108 Move X0, X31
	109 Call Versioning.get_GetCurrentVersion
	110 Move X1, X31
	111 Call Versioning.ShortVersion, X0
	112 Move X1, X0
	113 Move X0, X22
	114 Move X2, X31
	115 Call Version.op_Equality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {137}
	120 Move X8, [X20]
	121 Move X0, X20
	122 Move X1, X19
	123 Move X9, [X8+408]
	124 Move X2, [X8+416]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 And W8, W21, 255
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X8, 0x2200000
	129 Move X8, [X8+632]
	130 Move X8, [X8]
	131 Move X8, [X8+184]
	132 Move X8, [X8]
	133 Move [X20+32], X8
	134 Add X1, X20, 32
	135 Move X0, X19
	136 Call BitStream.Serialize, X0, X1
	137 Move X20, [X31+80]
	138 Move X19, [X31+88]
	139 Move X22, [X31+64]
	140 Move X21, [X31+72]
	141 Move X24, [X31+48]
	142 Move X23, [X31+56]
	143 Move X26, [X31+32]
	144 Move X25, [X31+40]
	145 Move X30, [X31+16]
	146 Add X31, X31, 96
	147 Return 
	148 Call 0x1C17F20

Method: System.Void SerializeProtected(Fusion.Protocol.BitStream stream)

Disassembly:
	0x01EF6C30 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Return 

Method: System.Boolean CheckCompability(Fusion.Protocol.ProtocolMessageVersion pluginProtocolVersion, System.Version pluginVersion, System.Version sessionSerializationVersion)

Disassembly:
	0x01EF6C34 LDP X30, X23, [X31 + 0x20]
	0x01EF6C38 ADD X31, X31, 0x50
	0x01EF6C3C RET
	0x01EF6C40 BL 0x1C16F28
	0x01EF6C44 BL 0x1C16F44
	0x01EF6C48 MOV X1, X31
	0x01EF6C4C BL 0x1C16DEC
	0x01EF6C50 BL 0x1C16F20
	0x01EF6C54 MOVZ W1, 0xA
	0x01EF6C58 MOV X2, X31
	0x01EF6C5C B 0x1EF5398
	0x01EF6C60 STP X30, X21, [X31 - 0x20]!
	0x01EF6C64 STP X20, X19, [X31 + 0x10]
	0x01EF6C68 MOV X19, X2
	0x01EF6C6C MOV W20, W1
	0x01EF6C70 MOV W1, W3
	0x01EF6C74 MOV X2, X4
	0x01EF6C78 MOV X21, X0
	0x01EF6C7C BL 0x1EF5398
	0x01EF6C80 STRB W20, [X21 + 0x28]
	0x01EF6C84 STR X19, [X21 + 0x30]
	0x01EF6C88 LDP X20, X19, [X31 + 0x10]
	0x01EF6C8C LDP X30, X21, [X31], #0x20
	0x01EF6C90 RET
	0x01EF6C94 STR X30, [X31 - 0x20]!
	0x01EF6C98 STP X20, X19, [X31 + 0x10]
	0x01EF6C9C LDRB W8, [X0 + 0x28]
	0x01EF6CA0 STRB W8, [X31 + 0xC]
	0x01EF6CA4 CBZ X1, 0x1EF6CDC
	0x01EF6CA8 MOV X20, X1
	0x01EF6CAC MOV X19, X0
	0x01EF6CB0 ADD X1, X31, 0xC
	0x01EF6CB4 MOV X0, X20
	0x01EF6CB8 BL 0x1EF3730
	0x01EF6CBC ADD X1, X19, 0x30
	0x01EF6CC0 MOV X0, X20
	0x01EF6CC4 BL 0x1EF3524
	0x01EF6CC8 LDRB W8, [X31 + 0xC]
	0x01EF6CCC STRB W8, [X19 + 0x28]
	0x01EF6CD0 LDP X20, X19, [X31 + 0x10]
	0x01EF6CD4 LDR X30, [X31], #0x20
	0x01EF6CD8 RET
	0x01EF6CDC BL 0x1C16F20
	0x01EF6CE0 STR X30, [X31 - 0x30]!
	0x01EF6CE4 STP X22, X21, [X31 + 0x10]
	0x01EF6CE8 STP X20, X19, [X31 + 0x20]
	0x01EF6CEC ADRP X20, 0x24E3000
	0x01EF6CF0 ADRP X21, 0x21FD000
	0x01EF6CF4 LDRB W8, [X20 + 0x5FE]
	0x01EF6CF8 LDR X21, [X21 + 0x9D0]
	0x01EF6CFC MOV X19, X0
	0x01EF6D00 TBNZ X8, 0x0, 0x1EF6D54
	0x01EF6D04 ADRP X0, 0x21FD000
	0x01EF6D08 LDR X0, [X0 + 0x9D0]
	0x01EF6D0C BL 0x1C16CF4
	0x01EF6D10 ADRP X0, 0x220A000
	0x01EF6D14 LDR X0, [X0 + 0x898]
	0x01EF6D18 BL 0x1C16CF4
	0x01EF6D1C ADRP X0, 0x220A000
	0x01EF6D20 LDR X0, [X0 + 0x8A0]
	0x01EF6D24 BL 0x1C16CF4
	0x01EF6D28 ADRP X0, 0x220A000
	0x01EF6D2C LDR X0, [X0 + 0x830]
	0x01EF6D30 BL 0x1C16CF4
	0x01EF6D34 ADRP X0, 0x2208000
	0x01EF6D38 LDR X0, [X0 + 0x3B0]
	0x01EF6D3C BL 0x1C16CF4
	0x01EF6D40 ADRP X0, 0x220A000
	0x01EF6D44 LDR X0, [X0 + 0x8A8]
	0x01EF6D48 BL 0x1C16CF4
	0x01EF6D4C MOVZ W8, 0x1
	0x01EF6D50 STRB W8, [X20 + 0x5FE]
	0x01EF6D54 LDR X0, [X21]
	0x01EF6D58 MOVZ W1, 0x6
	0x01EF6D5C BL 0x1C16D6C
	0x01EF6D60 CBZ X0, 0x1EF6EE0
	0x01EF6D64 ADRP X21, 0x220A000
	0x01EF6D68 LDR X21, [X21 + 0x8A8]
	0x01EF6D6C MOV X20, X0
	0x01EF6D70 LDR X0, [X21]
	0x01EF6D74 CBZ X0, 0x1EF6D88
	0x01EF6D78 LDR X8, [X20]
	0x01EF6D7C LDR X1, [X8 + 0x40]
	0x01EF6D80 BL 0x1C16E00
	0x01EF6D84 CBZ X0, 0x1EF6ED4
	0x01EF6D88 LDR W8, [X20 + 0x18]
	0x01EF6D8C CBZ W8, 0x1EF6ED0
	0x01EF6D90 LDR X9, [X21]
	0x01EF6D94 ADRP X21, 0x2208000
	0x01EF6D98 LDR X21, [X21 + 0x3B0]
	0x01EF6D9C STR X9, [X20 + 0x20]
	0x01EF6DA0 LDR X0, [X21]
	0x01EF6DA4 CBZ X0, 0x1EF6DBC
	0x01EF6DA8 LDR X8, [X20]
	0x01EF6DAC LDR X1, [X8 + 0x40]
	0x01EF6DB0 BL 0x1C16E00
	0x01EF6DB4 CBZ X0, 0x1EF6ED4
	0x01EF6DB8 LDR W8, [X20 + 0x18]
	0x01EF6DBC CMP W8, 0x1
	0x01EF6DC0 B.LS 0x1EF6ED0
	0x01EF6DC4 LDR X8, [X21]
	0x01EF6DC8 ADRP X9, 0x220A000
	0x01EF6DCC LDR X9, [X9 + 0x898]
	0x01EF6DD0 ADD X1, X31, 0xC
	0x01EF6DD4 STR X8, [X20 + 0x28]
	0x01EF6DD8 LDRB W8, [X19 + 0x28]
	0x01EF6DDC LDR X0, [X9]
	0x01EF6DE0 STRB W8, [X31 + 0xC]
	0x01EF6DE4 BL 0x1C16E04
	0x01EF6DE8 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x24E4000
	008 Move W8, [X23+1525]
	009 Move X19, X3
	010 Move X21, X2
	011 Move W22, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2206000
	018 Move X0, [X0+1984]
	019 Call 0x1C17CF4
	020 Move X0, 0x2206000
	021 Move X0, [X0+1992]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1525], W8
	025 Move W8, [X20+16]
	026 Move W0, W31
	027 NotImplemented "Instruction CMP not yet implemented."
	028 And W31, W22, 255
	029 Compare W8, 0
	030 JumpIfEqual {89}
	031 And W8, W22, 255
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X23, 0x2206000
	034 Move X23, [X23+1992]
	035 Move X22, [X20+24]
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X23]
	042 Move X8, [X0+184]
	043 Move X0, X22
	044 Move X2, X31
	045 Move X1, [X8]
	046 Call Version.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {87}
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X23]
	057 Move X8, [X0+184]
	058 Move X0, X19
	059 Move X2, X31
	060 Move X1, [X8]
	061 Call Version.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {87}
	066 Move X0, [X23]
	067 Move X22, [X20+24]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X22
	073 Move X1, X31
	074 Call Versioning.ShortVersion, X0
	075 Move X22, X0
	076 Move X0, X21
	077 Move X1, X31
	078 Call Versioning.ShortVersion, X0
	079 Move X1, X0
	080 Move X0, X22
	081 Move X2, X31
	082 Call Version.op_GreaterThan, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {96}
	087 Move W0, W31
	088 Move W0, 1
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Return X0
	096 Move X0, [X23]
	097 Move X21, [X20+24]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X31
	104 Call Versioning.ShortVersion, X0
	105 Move X8, 0x2206000
	106 Move X8, [X8+1984]
	107 Move X21, X0
	108 Move X8, [X8]
	109 Move X0, X8
	110 Call 0x1C17F10
	111 Move W1, 1
	112 Move W2, W31
	113 Move X3, X31
	114 Move X22, X0
	115 Call Version..ctor, X0, X1, X2
	116 Move X0, X21
	117 Move X1, X22
	118 Move X2, X31
	119 Call Version.op_LessThan, X0, X1
	120 Move W8, W0
	121 Move W0, W31
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {89}
	126 Move X0, [X20+24]
	127 Move X1, X19
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 Move X2, X31
	133 Move X30, [X31+48]
	134 Move X23, [X31+56]
	135 Call Version.op_Equality, X0, X1
	136 Return X0

Method: System.String ToString()

Disassembly:
	0x01EF6624 MOV X21, X0
	0x01EF6628 CBZ X0, 0x1EF6640
	0x01EF662C LDR X8, [X20]
	0x01EF6630 MOV X0, X21
	0x01EF6634 LDR X1, [X8 + 0x40]
	0x01EF6638 BL 0x1C16E00
	0x01EF663C CBZ X0, 0x1EF66B0
	0x01EF6640 LDR W8, [X20 + 0x18]
	0x01EF6644 CMP W8, 0x2
	0x01EF6648 B.LS 0x1EF66AC
	0x01EF664C MOV X0, X19
	0x01EF6650 STR X21, [X20 + 0x30]
	0x01EF6654 BL 0x1EF5624
	0x01EF6658 MOV X19, X0
	0x01EF665C CBZ X0, 0x1EF6674
	0x01EF6660 LDR X8, [X20]
	0x01EF6664 MOV X0, X19
	0x01EF6668 LDR X1, [X8 + 0x40]
	0x01EF666C BL 0x1C16E00
	0x01EF6670 CBZ X0, 0x1EF66B0
	0x01EF6674 LDR W8, [X20 + 0x18]
	0x01EF6678 CMP W8, 0x3
	0x01EF667C B.LS 0x1EF66AC
	0x01EF6680 ADRP X8, 0x220A000
	0x01EF6684 LDR X8, [X8 + 0x7E0]
	0x01EF6688 STR X19, [X20 + 0x38]
	0x01EF668C MOV X1, X20
	0x01EF6690 MOV X2, X31
	0x01EF6694 LDR X0, [X8]
	0x01EF6698 BL 0x3227C5C
	0x01EF669C LDP X20, X19, [X31 + 0x20]
	0x01EF66A0 LDP X30, X21, [X31 + 0x10]
	0x01EF66A4 ADD X31, X31, 0x30
	0x01EF66A8 RET
	0x01EF66AC BL 0x1C16F28
	0x01EF66B0 BL 0x1C16F44
	0x01EF66B4 MOV X1, X31
	0x01EF66B8 BL 0x1C16DEC
	0x01EF66BC BL 0x1C16F20
	0x01EF66C0 MOVZ W1, 0xA
	0x01EF66C4 MOV X2, X31
	0x01EF66C8 B 0x1EF5398
	0x01EF66CC STP X30, X27, [X31 - 0x50]!
	0x01EF66D0 STP X26, X25, [X31 + 0x10]
	0x01EF66D4 STP X24, X23, [X31 + 0x20]
	0x01EF66D8 STP X22, X21, [X31 + 0x30]
	0x01EF66DC STP X20, X19, [X31 + 0x40]
	0x01EF66E0 MOV W24, W2
	0x01EF66E4 MOV W25, W1
	0x01EF66E8 LDRB W1, [X31 + 0x58]
	0x01EF66EC LDR X2, [X31 + 0x60]
	0x01EF66F0 LDR X27, [X31 + 0x50]
	0x01EF66F4 MOV X19, X7
	0x01EF66F8 MOV X20, X6
	0x01EF66FC MOV W21, W5
	0x01EF6700 MOV W22, W4
	0x01EF6704 MOV W23, W3
	0x01EF6708 MOV X26, X0
	0x01EF670C BL 0x1EF5398
	0x01EF6710 STRB W25, [X26 + 0x28]
	0x01EF6714 STRB W24, [X26 + 0x29]
	0x01EF6718 STR W21, [X26 + 0x2C]
	0x01EF671C STRB W23, [X26 + 0x2A]
	0x01EF6720 STR X20, [X26 + 0x30]
	0x01EF6724 STR W22, [X26 + 0x38]
	0x01EF6728 STP X19, X27, [X26 + 0x40]
	0x01EF672C LDP X20, X19, [X31 + 0x40]
	0x01EF6730 LDP X22, X21, [X31 + 0x30]
	0x01EF6734 LDP X24, X23, [X31 + 0x20]
	0x01EF6738 LDP X26, X25, [X31 + 0x10]
	0x01EF673C LDP X30, X27, [X31], #0x50
	0x01EF6740 RET
	0x01EF6744 SUB X31, X31, 0x30
	0x01EF6748 STR X30, [X31 + 0x10]
	0x01EF674C STP X20, X19, [X31 + 0x20]
	0x01EF6750 LDRB W8, [X0 + 0x28]
	0x01EF6754 STRB W8, [X31 + 0x1C]
	0x01EF6758 LDRB W8, [X0 + 0x29]
	0x01EF675C STRB W8, [X31 + 0x18]
	0x01EF6760 LDRB W8, [X0 + 0x2A]
	0x01EF6764 STRB W8, [X31 + 0xC]
	0x01EF6768 LDR W8, [X0 + 0x2C]
	0x01EF676C STR W8, [X31 + 0x8]
	0x01EF6770 CBZ X1, 0x1EF6838
	0x01EF6774 MOV X20, X1
	0x01EF6778 MOV X19, X0
	0x01EF677C ADD X1, X31, 0x1C
	0x01EF6780 MOV X0, X20
	0x01EF6784 BL 0x1EF3730
	0x01EF6788 ADD X1, X31, 0x18
	0x01EF678C MOV X0, X20
	0x01EF6790 BL 0x1EF3730
	0x01EF6794 ADD X1, X31, 0xC
	0x01EF6798 MOV X0, X20
	0x01EF679C BL 0x1EF3730
	0x01EF67A0 ADD X1, X31, 0x8
	0x01EF67A4 MOVZ W2, 0x20
	0x01EF67A8 MOV X0, X20
	0x01EF67AC BL 0x1EF3790
	0x01EF67B0 LDRB W8, [X19 + 0x10]
	0x01EF67B4 CMP W8, 0x6
	0x01EF67B8 B.CC 0x1EF6808
	0x01EF67BC ADD X1, X19, 0x30
	0x01EF67C0 MOV X0, X20
	0x01EF67C4 BL 0x1EF39A4
	0x01EF67C8 LDRB W8, [X19 + 0x10]
	0x01EF67CC CMP W8, 0x7
	0x01EF67D0 B.CC 0x1EF6808
	0x01EF67D4 ADD X1, X19, 0x38
	0x01EF67D8 MOVZ W2, 0x20
	0x01EF67DC MOV X0, X20
	0x01EF67E0 BL 0x1EF37F8
	0x01EF67E4 LDRB W8, [X19 + 0x10]
	0x01EF67E8 CMP W8, 0x9
	0x01EF67EC B.CC 0x1EF6808
	0x01EF67F0 ADD X1, X19, 0x40
	0x01EF67F4 MOV X0, X20
	0x01EF67F8 BL 0x1EF39A4
	0x01EF67FC ADD X1, X19, 0x48
	0x01EF6800 MOV X0, X20
	0x01EF6804 BL 0x1EF39A4
	0x01EF6808 LDRB W8, [X31 + 0x1C]
	0x01EF680C LDR X30, [X31 + 0x10]
	0x01EF6810 STRB W8, [X19 + 0x28]
	0x01EF6814 LDRB W8, [X31 + 0x18]
	0x01EF6818 STRB W8, [X19 + 0x29]
	0x01EF681C LDRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x24E4000
	007 Move X21, 0x21FE000
	008 Move W8, [X20+1526]
	009 Move X21, [X21+2512]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x21FE000
	016 Move X0, [X0+2512]
	017 Call 0x1C17CF4
	018 Move X0, 0x220B000
	019 Move X0, [X0+2024]
	020 Call 0x1C17CF4
	021 Move X0, 0x220B000
	022 Move X0, [X0+2032]
	023 Call 0x1C17CF4
	024 Move X0, 0x220B000
	025 Move X0, [X0+2040]
	026 Call 0x1C17CF4
	027 Move X0, 0x220B000
	028 Move X0, [X0+2048]
	029 Call 0x1C17CF4
	030 Move X0, 0x220B000
	031 Move X0, [X0+2056]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1526], W8
	035 Move X0, [X21]
	036 Move W1, 6
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {143}
	040 Move X21, 0x220B000
	041 Move X21, [X21+2040]
	042 Move X20, X0
	043 Move X0, [X21]
	044 Compare X0, 0
	045 JumpIfEqual {51}
	046 Move X8, [X20]
	047 Move X1, [X8+64]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {140}
	051 Move W8, [X20+24]
	052 Compare W8, 0
	053 JumpIfEqual {139}
	054 Move X8, [X21]
	055 Move X9, 0x220B000
	056 Move X9, [X9+2024]
	057 Add X1, X31, 12
	058 Move [X20+32], X8
	059 Move W8, [X19+16]
	060 Move X0, [X9]
	061 Move [X31+12], W8
	062 Call 0x1C17E04
	063 Move X21, X0
	064 Compare X0, 0
	065 JumpIfEqual {72}
	066 Move X8, [X20]
	067 Move X0, X21
	068 Move X1, [X8+64]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {140}
	072 Move W8, [X20+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X22, 0x220B000
	075 Move X22, [X22+2032]
	076 Move [X20+40], X21
	077 Move X0, [X22]
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {140}
	085 Move W8, [X20+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X9, [X22]
	088 Move [X20+48], X9
	089 Move X21, [X19+24]
	090 Compare X21, 0
	091 JumpIfEqual {99}
	092 Move X8, [X20]
	093 Move X0, X21
	094 Move X1, [X8+64]
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {140}
	098 Move W8, [X20+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X22, 0x220B000
	101 Move X22, [X22+2048]
	102 Move [X20+56], X21
	103 Move X0, [X22]
	104 Compare X0, 0
	105 JumpIfEqual {112}
	106 Move X8, [X20]
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {140}
	111 Move W8, [X20+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X9, [X22]
	114 Move [X20+64], X9
	115 Move X19, [X19+32]
	116 Compare X19, 0
	117 JumpIfEqual {125}
	118 Move X8, [X20]
	119 Move X0, X19
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {140}
	124 Move W8, [X20+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, 0x220B000
	127 Move X8, [X8+2056]
	128 Move [X20+72], X19
	129 Move X1, X20
	130 Move X2, X31
	131 Move X0, [X8]
	132 Call String.Format, X0, X1
	133 Move X20, [X31+32]
	134 Move X19, [X31+40]
	135 Move X22, [X31+16]
	136 Move X21, [X31+24]
	137 Move X30, [X31+48]
	138 Return X0
	139 Call 0x1C17F28
	140 Call 0x1C17F44
	141 Move X1, X31
	142 Call 0x1C17DEC
	143 Call 0x1C17F20

