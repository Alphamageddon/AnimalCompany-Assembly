Type: Fusion.Protocol.BitStream

Method: System.Int32 get_Size()

Disassembly:
	0x01EF2AE4 BL 0x1EF33E0
	0x01EF2AE8 LDR W8, [X19 + 0x10]

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_Size(System.Int32 value)

Disassembly:
	0x01EF2AEC LDR X0, [X19 + 0x18]
	0x01EF2AF0 MOVZ W2, 0x8
	0x01EF2AF4 MOV W3, W23
	0x01EF2AF8 ADD W1, W8, 0x8
	0x01EF2AFC STR W1, [X19 + 0x10]
	0x01EF2B00 BL 0x1EF33E0
	0x01EF2B04 LDR W8, [X19 + 0x10]
	0x01EF2B08 LDR X0, [X19 + 0x18]
	0x01EF2B0C MOVZ W2, 0x8
	0x01EF2B10 MOV W3, W24
	0x01EF2B14 ADD W1, W8, 0x8
	0x01EF2B18 STR W1, [X19 + 0x10]
	0x01EF2B1C BL 0x1EF33E0
	0x01EF2B20 LDR W8, [X19 + 0x10]
	0x01EF2B24 LDR X0, [X19 + 0x18]
	0x01EF2B28 MOVZ W2, 0x8
	0x01EF2B2C MOV W3, W25
	0x01EF2B30 ADD W1, W8, 0x8
	0x01EF2B34 STR W1, [X19 + 0x10]
	0x01EF2B38 BL 0x1EF33E0
	0x01EF2B3C LDR W8, [X19 + 0x10]
	0x01EF2B40 LDR X0, [X19 + 0x18]
	0x01EF2B44 MOVZ W2, 0x8
	0x01EF2B48 MOV W3, W26
	0x01EF2B4C ADD W1, W8, 0x8
	0x01EF2B50 STR W1, [X19 + 0x10]
	0x01EF2B54 BL 0x1EF33E0
	0x01EF2B58 LDR W8, [X19 + 0x10]
	0x01EF2B5C LDR X0, [X19 + 0x18]
	0x01EF2B60 MOVZ W2, 0x8
	0x01EF2B64 MOV W3, W22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24E8000
	006 Move W8, [X21+1496]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2209000
	014 Move X0, [X0+3176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1496], W8
	018 Move X21, [X19+24]
	019 Compare X21, 0
	020 JumpIfEqual {42}
	021 Move X8, 0x2209000
	022 Move X8, [X8+3176]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W8, [X21+24]
	029 Move W0, W20
	030 Move W1, W31
	031 Move X3, X31
	032 Move W2, W8
	033 ShiftRight W2, 29
	034 And W2, W2, 0xFFFFFFF
	035 Call Maths.Clamp, X0, X1, X2
	036 Move [X19+20], W0
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Call 0x1C17F20

Method: System.Int32 get_Position()

Disassembly:
	0x01EF2B68 ADD W1, W8, 0x8
	0x01EF2B6C STR W1, [X19 + 0x10]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Position(System.Int32 value)

Disassembly:
	0x01EF2B70 BL 0x1EF33E0
	0x01EF2B74 LDR W8, [X19 + 0x10]
	0x01EF2B78 LDR X0, [X19 + 0x18]
	0x01EF2B7C MOVZ W2, 0x8
	0x01EF2B80 MOV W3, W21
	0x01EF2B84 ADD W1, W8, 0x8
	0x01EF2B88 STR W1, [X19 + 0x10]
	0x01EF2B8C BL 0x1EF33E0
	0x01EF2B90 LDR W8, [X19 + 0x10]
	0x01EF2B94 LDR X0, [X19 + 0x18]
	0x01EF2B98 MOVZ W2, 0x8
	0x01EF2B9C MOV W3, W20
	0x01EF2BA0 ADD W1, W8, 0x8
	0x01EF2BA4 STR W1, [X19 + 0x10]
	0x01EF2BA8 BL 0x1EF33E0
	0x01EF2BAC LDR W8, [X19 + 0x10]
	0x01EF2BB0 LDP X22, X21, [X31 + 0x30]
	0x01EF2BB4 LDP X24, X23, [X31 + 0x20]
	0x01EF2BB8 LDP X26, X25, [X31 + 0x10]
	0x01EF2BBC ADD W8, W8, 0x8
	0x01EF2BC0 STR W8, [X19 + 0x10]
	0x01EF2BC4 LDP X20, X19, [X31 + 0x40]
	0x01EF2BC8 LDR X30, [X31], #0x50
	0x01EF2BCC RET
	0x01EF2BD0 FMOV X0, D0
	0x01EF2BD4 RET
	0x01EF2BD8 STR X30, [X31 - 0x30]!
	0x01EF2BDC STP X22, X21, [X31 + 0x10]
	0x01EF2BE0 STP X20, X19, [X31 + 0x20]
	0x01EF2BE4 MOVZ W1, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x24E8000
	007 Move X21, 0x2209000
	008 Move W8, [X22+1497]
	009 Move X21, [X21+3176]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2209000
	017 Move X0, [X0+3176]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1497], W8
	021 Move X0, [X21]
	022 Move W21, [X19+20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W0, W20
	028 Move W1, W31
	029 Move W2, W21
	030 Move X3, X31
	031 Call Maths.Clamp, X0, X1, X2
	032 Move [X19+16], W0
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Int32 get_BytesRequired()

Disassembly:
	0x01EF2BE8 MOV X19, X0
	0x01EF2BEC BL 0x1EF2210
	0x01EF2BF0 AND X20, X0, 0xFF
	0x01EF2BF4 MOVZ W1, 0x8
	0x01EF2BF8 MOV X0, X19
	0x01EF2BFC BL 0x1EF2210
	0x01EF2C00 AND X8, X0, 0xFF
	0x01EF2C04 MOVZ W1, 0x8
	0x01EF2C08 MOV X0, X19
	0x01EF2C0C BFM X20, X8, 0x38, 0x7
	0x01EF2C10 BL 0x1EF2210
	0x01EF2C14 AND X8, X0, 0xFF
	0x01EF2C18 MOVZ W1, 0x8
	0x01EF2C1C MOV X0, X19
	0x01EF2C20 BFM X20, X8, 0x30, 0x7
	0x01EF2C24 BL 0x1EF2210
	0x01EF2C28 AND X8, X0, 0xFF
	0x01EF2C2C MOVZ W1, 0x8
	0x01EF2C30 MOV X0, X19
	0x01EF2C34 BFM X20, X8, 0x28, 0x7
	0x01EF2C38 BL 0x1EF2210
	0x01EF2C3C AND W21, W0, 0xFF
	0x01EF2C40 MOVZ W1, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24E8000
	006 Move X20, 0x2209000
	007 Move W8, [X21+1498]
	008 Move X20, [X20+3176]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2209000
	015 Move X0, [X0+3176]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1498], W8
	019 Move X0, [X20]
	020 Move W19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Maths.BytesRequiredForBits, X0
	032 Return X0

Method: System.Boolean get_IsEvenBytes()

Disassembly:
	0x01EF2C44 MOV X0, X19
	0x01EF2C48 BL 0x1EF2210
	0x01EF2C4C AND W22, W0, 0xFF
	0x01EF2C50 MOVZ W1, 0x8

ISIL:
	001 Move W8, [X0+16]
	002 And W31, W8, 7
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 get_Capacity()

Disassembly:
	0x01EF2C54 MOV X0, X19
	0x01EF2C58 BFM X20, X21, 0x20, 0x7
	0x01EF2C5C BL 0x1EF2210
	0x01EF2C60 AND W21, W0, 0xFF
	0x01EF2C64 MOVZ W1, 0x8
	0x01EF2C68 MOV X0, X19
	0x01EF2C6C BL 0x1EF2210

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean get_Done()

Disassembly:
	0x01EF2C70 BFM X20, X22, 0x18, 0x7
	0x01EF2C74 ORR X8, X20, X21, 0x30
	0x01EF2C78 LDP X20, X19, [X31 + 0x20]
	0x01EF2C7C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+20]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_Overflowing()

Disassembly:
	0x01EF2C80 ORR X8, X8, X0, 0x38
	0x01EF2C84 FMOV D0, X8
	0x01EF2C88 LDR X30, [X31], #0x30
	0x01EF2C8C RET

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+20]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_Writing()

Disassembly:
	0x01EF2C90 STR X30, [X31 - 0x10]!
	0x01EF2C94 CBZ X1, 0x1EF2CA8

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_Writing(System.Boolean value)

Disassembly:
	0x01EF2C98 LDR W3, [X1 + 0x18]
	0x01EF2C9C MOV W2, W31
	0x01EF2CA0 LDR X30, [X31], #0x10

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Boolean get_Reading()

Disassembly:
	0x01EF2CA4 B 0x1EF2CAC
	0x01EF2CA8 BL 0x1C16F20
	0x01EF2CAC STR X30, [X31 - 0x20]!
	0x01EF2CB0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W8, [X0+32]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void set_Reading(System.Boolean value)

Disassembly:
	0x01EF2CB4 LDR W8, [X0 + 0x10]
	0x01EF2CB8 MOV W19, W3
	0x01EF2CBC MOV X20, X0
	0x01EF2CC0 ADD W9, W8, 0x7

ISIL:
	001 NotImplemented "Instruction ORN not yet implemented."
	002 And W8, W8, 1
	003 Move [X0+32], W8
	004 Return 

Method: System.Byte[] get_Data()

Disassembly:
	0x01EF2CC4 CMP W8, 0x0
	0x01EF2CC8 CSEL W9, W9, W8, LT

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01EF2CCC AND W9, W9, 0xFFFFFFF8
	0x01EF2CD0 SUB W10, W8, W9
	0x01EF2CD4 SBFM W3, W8, 0x3, 0x1F
	0x01EF2CD8 CBZ W10, 0x1EF2DCC
	0x01EF2CDC CMP W19, 0x1
	0x01EF2CE0 B.LT 0x1EF2DE8
	0x01EF2CE4 CBZ X1, 0x1EF2E04
	0x01EF2CE8 MOVZ W9, 0x8
	0x01EF2CEC MOVZ W11, 0xFF
	0x01EF2CF0 SUB W9, W9, W10
	0x01EF2CF4 AND W8, W10, 0x1F
	0x01EF2CF8 LSLV W10, W11, W10
	0x01EF2CFC LSRV W11, W11, W9
	0x01EF2D00 MOV W12, W19
	0x01EF2D04 LDR W13, [X1 + 0x18]
	0x01EF2D08 CMP W2, W13
	0x01EF2D0C B.CS 0x1EF2E00
	0x01EF2D10 LDR X13, [X20 + 0x18]
	0x01EF2D14 CBZ X13, 0x1EF2E04
	0x01EF2D18 LDR W14, [X13 + 0x18]
	0x01EF2D1C CMP W3, W14

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x24E8000
	006 Move X21, 0x2202000
	007 Move W8, [X20+1499]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2202000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1499], W8
	019 Move X0, [X21]
	020 Move W1, W31
	021 Call 0x1C17D6C
	022 Move X1, X0
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]

Method: System.Void .ctor(System.Int32 size)

Disassembly:
	0x01EF2D5C LSLV W16, W13, W8
	0x01EF2D60 ORR W15, W15, W16, 0x0
	0x01EF2D64 STRB W15, [X14 + 0x20]
	0x01EF2D68 LDR X15, [X20 + 0x18]
	0x01EF2D6C CBZ X15, 0x1EF2E04
	0x01EF2D70 LDR W14, [X15 + 0x18]
	0x01EF2D74 ADD W3, W3, 0x1
	0x01EF2D78 CMP W3, W14
	0x01EF2D7C B.CS 0x1EF2E00
	0x01EF2D80 SXTW X14, W3
	0x01EF2D84 ADD X15, X15, X14
	0x01EF2D88 LDRB W16, [X15 + 0x20]
	0x01EF2D8C AND W16, W16, W10, 0x0
	0x01EF2D90 STRB W16, [X15 + 0x20]
	0x01EF2D94 LDR X15, [X20 + 0x18]
	0x01EF2D98 CBZ X15, 0x1EF2E04
	0x01EF2D9C LDR W16, [X15 + 0x18]
	0x01EF2DA0 CMP W3, W16
	0x01EF2DA4 B.CS 0x1EF2E00
	0x01EF2DA8 ADD X14, X15, X14
	0x01EF2DAC LDRB W15, [X14 + 0x20]
	0x01EF2DB0 LSRV W13, W13, W9
	0x01EF2DB4 SUBS X12, X12, 0x1
	0x01EF2DB8 ADD W2, W2, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24E8000
	007 Move X22, 0x2202000
	008 Move W8, [X21+1500]
	009 Move X22, [X22+1560]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2202000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1500], W8
	021 Move X0, [X22]
	022 Move W1, W20
	023 Call 0x1C17D6C
	024 Move X1, X0
	025 Move X0, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Call BitStream..ctor, X0, X1
	032 Return 

Method: System.Void .ctor(System.Byte[] arr)

Disassembly:
	0x01EF2D20 B.CS 0x1EF2E00
	0x01EF2D24 SXTW X14, W3
	0x01EF2D28 ADD X15, X13, X14
	0x01EF2D2C LDRB W16, [X15 + 0x20]
	0x01EF2D30 ADD X13, X1, W2, SXTW
	0x01EF2D34 LDRB W13, [X13 + 0x20]
	0x01EF2D38 AND W16, W16, W11, 0x0
	0x01EF2D3C STRB W16, [X15 + 0x20]
	0x01EF2D40 LDR X15, [X20 + 0x18]
	0x01EF2D44 CBZ X15, 0x1EF2E04
	0x01EF2D48 LDR W16, [X15 + 0x18]
	0x01EF2D4C CMP W3, W16
	0x01EF2D50 B.CS 0x1EF2E00
	0x01EF2D54 ADD X14, X15, X14
	0x01EF2D58 LDRB W15, [X14 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {23}
	007 Move W21, [X1+24]
	008 Move X20, X1
	009 Move X1, X31
	010 Move X19, X0
	011 Call Object..ctor, X0
	012 Move W8, W21
	013 ShiftRight W8, 29
	014 And W8, W8, 0xFFFFFFF
	015 Move [X19+24], X20
	016 Move [X19+16], W31
	017 Move [X19+20], W8
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 
	023 Call 0x1C17F20

Method: System.Void .ctor(System.Byte[] arr, System.Int32 size)

Disassembly:
	0x01EF2DBC ORR W13, W15, W13, 0x0
	0x01EF2DC0 STRB W13, [X14 + 0x20]
	0x01EF2DC4 B.NE 0x1EF2D04
	0x01EF2DC8 B 0x1EF2DE8
	0x01EF2DCC LDR X8, [X20 + 0x18]
	0x01EF2DD0 MOV X0, X1
	0x01EF2DD4 MOV W1, W2
	0x01EF2DD8 MOV W4, W19
	0x01EF2DDC MOV X2, X8
	0x01EF2DE0 MOV X5, X31
	0x01EF2DE4 BL 0x33A8A9C
	0x01EF2DE8 LDR W8, [X20 + 0x10]
	0x01EF2DEC ADD W8, W8, W19, 0x3, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+24], X20
	011 Move W8, W19
	012 ShiftRight W8, 29
	013 And W8, W8, 0xFFFFFFF
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move [X21+16], W31
	017 Move [X21+20], W8
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Return 

Method: System.Void SetBuffer(System.Byte[] arr)

Disassembly:
	0x01EF2DF0 STR W8, [X20 + 0x10]
	0x01EF2DF4 LDP X20, X19, [X31 + 0x10]
	0x01EF2DF8 LDR X30, [X31], #0x20
	0x01EF2DFC RET
	0x01EF2E00 BL 0x1C16F28
	0x01EF2E04 BL 0x1C16F20
	0x01EF2E08 MOV W3, W2
	0x01EF2E0C MOV W2, W31
	0x01EF2E10 B 0x1EF2CAC

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Move W8, [X1+24]
	005 Move [X0+24], X1
	006 Move W8, W8
	007 ShiftRight W8, 29
	008 And W8, W8, 0xFFFFFFF
	009 Move [X0+16], W31
	010 Move [X0+20], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void SetBuffer(System.Byte[] arr, System.Int32 size)

Disassembly:
	0x01EF2E14 STR X30, [X31 - 0x30]!
	0x01EF2E18 STP X22, X21, [X31 + 0x10]
	0x01EF2E1C STP X20, X19, [X31 + 0x20]
	0x01EF2E20 ADRP X21, 0x24E7000

ISIL:
	001 Move W8, W2
	002 ShiftRight W8, 29
	003 And W8, W8, 0xFFFFFFF
	004 Move [X0+24], X1
	005 Move [X0+16], W31
	006 Move [X0+20], W8
	007 Return 

Method: System.Int32 RoundToByte()

Disassembly:
	0x01EF2E24 ADRP X22, 0x2201000
	0x01EF2E28 LDRB W8, [X21 + 0x5DF]
	0x01EF2E2C LDR X22, [X22 + 0x618]
	0x01EF2E30 MOV W20, W1
	0x01EF2E34 MOV X19, X0
	0x01EF2E38 TBNZ X8, 0x0, 0x1EF2E50
	0x01EF2E3C ADRP X0, 0x2201000
	0x01EF2E40 LDR X0, [X0 + 0x618]
	0x01EF2E44 BL 0x1C16CF4
	0x01EF2E48 MOVZ W8, 0x1
	0x01EF2E4C STRB W8, [X21 + 0x5DF]
	0x01EF2E50 LDR X0, [X22]
	0x01EF2E54 MOV W1, W20
	0x01EF2E58 BL 0x1C16D6C
	0x01EF2E5C MOV X20, X0
	0x01EF2E60 MOV X0, X19
	0x01EF2E64 MOV X1, X20
	0x01EF2E68 BL 0x1EF2E80
	0x01EF2E6C MOV X0, X20
	0x01EF2E70 LDP X20, X19, [X31 + 0x20]
	0x01EF2E74 LDP X22, X21, [X31 + 0x10]
	0x01EF2E78 LDR X30, [X31], #0x30
	0x01EF2E7C RET
	0x01EF2E80 STR X30, [X31 - 0x10]!
	0x01EF2E84 CBZ X1, 0x1EF2E98
	0x01EF2E88 LDR W3, [X1 + 0x18]
	0x01EF2E8C MOV W2, W31
	0x01EF2E90 LDR X30, [X31], #0x10
	0x01EF2E94 B 0x1EF2E9C
	0x01EF2E98 BL 0x1C16F20
	0x01EF2E9C STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+16]
	005 Add W8, W1, 7
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFF8
	009 Subtract W8, W1, W8
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W9, [X0+32]
	012 Move W10, 8
	013 Move X19, X0
	014 Subtract W20, W10, W8
	015 Compare W9, 0
	016 JumpIfEqual {23}
	017 Move X0, [X19+24]
	018 Move W2, W20
	019 Move W3, W31
	020 Call BitStream.WriteByteAt, X0, X1, X2, X3
	021 Move W8, [X19+16]
	022 Add W1, W8, W20
	023 Add W1, W20, W1
	024 Move [X19+16], W1
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Add W8, W1, 7
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 NotImplemented "Instruction SBFM not yet implemented."
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Void Expand()

Disassembly:
	0x01EF2EDC MOVZ W12, 0x8
	0x01EF2EE0 AND W8, W11, 0x1F
	0x01EF2EE4 MOVZ W13, 0xFF
	0x01EF2EE8 MOV W9, W3
	0x01EF2EEC SUB W11, W12, W11
	0x01EF2EF0 MOV W10, W19
	0x01EF2EF4 UBFM X12, X9, 0x20, 0x1F
	0x01EF2EF8 LSRV W13, W13, W11
	0x01EF2EFC MOVZ X14, 0x1
	0x01EF2F00 LDR X16, [X20 + 0x18]
	0x01EF2F04 CBZ X16, 0x1EF2F9C
	0x01EF2F08 LDR W17, [X16 + 0x18]
	0x01EF2F0C CMP W1, W17
	0x01EF2F10 B.CS 0x1EF2F98
	0x01EF2F14 ADD W15, W1, 0x1
	0x01EF2F18 CMP W15, W17
	0x01EF2F1C B.CS 0x1EF2F98
	0x01EF2F20 CBZ X2, 0x1EF2F9C
	0x01EF2F24 LDR W17, [X2 + 0x18]
	0x01EF2F28 CMP X9, X17
	0x01EF2F2C B.CS 0x1EF2F98
	0x01EF2F30 ADD X17, X16, W1, SXTW
	0x01EF2F34 ADD X16, X16, W15, SXTW
	0x01EF2F38 LDRB W16, [X16 + 0x20]
	0x01EF2F3C LDRB W17, [X17 + 0x20]
	0x01EF2F40 ADD X0, X2, X12, 0x20, ASR
	0x01EF2F44 ADD X12, X12, X14
	0x01EF2F48 AND W16, W13, W16, 0x0
	0x01EF2F4C LSRV W17, W17, W8
	0x01EF2F50 LSLV W16, W16, W11
	0x01EF2F54 SUBS X10, X10, 0x1
	0x01EF2F58 ORR W16, W16, W17, 0x0
	0x01EF2F5C ADD X9, X9, 0x1
	0x01EF2F60 MOV W1, W15
	0x01EF2F64 STRB W16, [X0 + 0x20]
	0x01EF2F68 B.NE 0x1EF2F00
	0x01EF2F6C B 0x1EF2F80
	0x01EF2F70 LDR X0, [X20 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24E8000
	005 Move W8, [X20+1501]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2202000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1501], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {50}
	019 Move X9, 0x2202000
	020 Move X9, [X9+1560]
	021 Move W8, [X8+24]
	022 Move X0, [X9]
	023 Move W1, W8
	024 ShiftRight W1, 31
	025 And W1, W1, 0x3FFFFFFF
	026 Call 0x1C17D6C
	027 Move X8, [X19+24]
	028 Compare X8, 0
	029 JumpIfEqual {50}
	030 Move W4, [X8+24]
	031 Move X20, X0
	032 Move X0, X8
	033 Move W1, W31
	034 Move X2, X20
	035 Move W3, W31
	036 Move X5, X31
	037 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	038 Move [X19+24], X20
	039 Compare X20, 0
	040 JumpIfEqual {50}
	041 Move W8, [X20+24]
	042 Move W8, W8
	043 ShiftRight W8, 29
	044 And W8, W8, 0xFFFFFFF
	045 Move [X19+20], W8
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return 
	050 Call 0x1C17F20

Method: System.Boolean CanWrite()

Disassembly:
	0x01EF2F74 MOV W4, W19
	0x01EF2F78 MOV X5, X31
	0x01EF2F7C BL 0x33A8A9C
	0x01EF2F80 LDR W8, [X20 + 0x10]
	0x01EF2F84 ADD W8, W8, W19, 0x3, LSL

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+20]
	003 Add W8, W8, 1
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Boolean CanRead()

Disassembly:
	0x01EF2F9C BL 0x1C16F20
	0x01EF2FA0 MOV W3, W2
	0x01EF2FA4 MOV W2, W31
	0x01EF2FA8 B 0x1EF2E9C
	0x01EF2FAC STR X30, [X31 - 0x10]!

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+20]
	003 Add W8, W8, 1
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Boolean CanWrite(System.Int32 bits)

Disassembly:
	0x01EF2F88 STR W8, [X20 + 0x10]
	0x01EF2F8C LDP X20, X19, [X31 + 0x10]
	0x01EF2F90 LDR X30, [X31], #0x20
	0x01EF2F94 RET
	0x01EF2F98 BL 0x1C16F28

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+20]
	003 Add W8, W8, W1
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Boolean CanRead(System.Int32 bits)

Disassembly:
	0x01EF2FB0 CBZ X1, 0x1EF2FC4
	0x01EF2FB4 LDR W2, [X1 + 0x18]
	0x01EF2FB8 CBZ X0, 0x1EF2FCC
	0x01EF2FBC LDR X30, [X31], #0x10
	0x01EF2FC0 B 0x1EF2FD0

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+20]
	003 Add W8, W8, W1
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Void CopyFromArray(System.Byte[] array)

Disassembly:
	0x01EF2FC4 MOV W2, W31
	0x01EF2FC8 CBNZ X0, 0x1EF2FBC
	0x01EF2FCC BL 0x1C16F20
	0x01EF2FD0 STR X30, [X31 - 0x30]!
	0x01EF2FD4 STP X22, X21, [X31 + 0x10]
	0x01EF2FD8 STP X20, X19, [X31 + 0x20]
	0x01EF2FDC ADRP X22, 0x24E7000
	0x01EF2FE0 LDRB W8, [X22 + 0x5E0]
	0x01EF2FE4 MOV W21, W2
	0x01EF2FE8 MOV X19, X1
	0x01EF2FEC MOV X20, X0
	0x01EF2FF0 TBNZ X8, 0x0, 0x1EF3008
	0x01EF2FF4 ADRP X0, 0x2201000
	0x01EF2FF8 LDR X0, [X0 + 0x5A8]
	0x01EF2FFC BL 0x1C16CF4
	0x01EF3000 MOVZ W8, 0x1
	0x01EF3004 STRB W8, [X22 + 0x5E0]
	0x01EF3008 LDR X0, [X20 + 0x18]
	0x01EF300C LDR W1, [X20 + 0x10]
	0x01EF3010 CMP X19, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {25}
	006 Move X2, [X0+24]
	007 Move W4, [X1+24]
	008 Move X20, X1
	009 Move X19, X0
	010 Move X0, X1
	011 Move W1, W31
	012 Move W3, W31
	013 Move X5, X31
	014 Call Array.Copy, X0, X1, X2, X3, X4
	015 Move [X19+16], W31
	016 Move W8, [X20+24]
	017 Move W8, W8
	018 ShiftRight W8, 29
	019 And W8, W8, 0xFFFFFFF
	020 Move [X19+20], W8
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x01EF3014 CSET W3, NE
	0x01EF3018 MOVZ W2, 0x1
	0x01EF301C BL 0x1EF33E0
	0x01EF3020 LDR W8, [X20 + 0x10]
	0x01EF3024 ADD W8, W8, 0x1
	0x01EF3028 STR W8, [X20 + 0x10]
	0x01EF302C CBZ X19, 0x1EF308C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {7}
	005 Move W1, [X8+24]
	006 Move X30, [X31+16]
	007 Call 0x1C17F20

Method: System.Void Reset(System.Int32 byteSize)

Disassembly:
	0x01EF3030 ADRP X8, 0x2200000
	0x01EF3034 LDR X8, [X8 + 0x5A8]
	0x01EF3038 LDR X0, [X8]
	0x01EF303C LDR W8, [X0 + 0xE0]
	0x01EF3040 CBNZ W8, 0x1EF3048
	0x01EF3044 BL 0x1C16DFC
	0x01EF3048 LDR W0, [X19 + 0x18]
	0x01EF304C MOV W1, W21
	0x01EF3050 MOV X2, X31
	0x01EF3054 BL 0x337EE94
	0x01EF3058 MOV W21, W0
	0x01EF305C MOVZ W2, 0x10
	0x01EF3060 MOV X0, X20
	0x01EF3064 MOV W1, W21
	0x01EF3068 BL 0x1EF2388
	0x01EF306C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+24]
	006 Compare X0, 0
	007 JumpIfEqual {22}
	008 Move W2, [X0+24]
	009 Move W20, W1
	010 Move W1, W31
	011 Move X3, X31
	012 Call Array.Clear, X0, X1, X2
	013 Move W8, W20
	014 ShiftRight W8, 29
	015 And W8, W8, 0xFFFFFFF
	016 Move [X19+16], W31
	017 Move [X19+20], W8
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 
	022 Call 0x1C17F20

Method: System.Void ResetFast(System.Int32 byteSize)

Disassembly:
	0x01EF3070 MOV X1, X19
	0x01EF3074 MOV W3, W21
	0x01EF3078 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W8, W1
	002 ShiftRight W8, 29
	003 And W8, W8, 0xFFFFFFF
	004 Move [X0+16], W31
	005 Move [X0+20], W8
	006 Return 

Method: System.Byte[] ToArray()

Disassembly:
	0x01EF307C LDP X22, X21, [X31 + 0x10]
	0x01EF3080 MOV W2, W31
	0x01EF3084 LDR X30, [X31], #0x30
	0x01EF3088 B 0x1EF2CAC
	0x01EF308C LDP X20, X19, [X31 + 0x20]
	0x01EF3090 LDP X22, X21, [X31 + 0x10]
	0x01EF3094 LDR X30, [X31], #0x30
	0x01EF3098 RET
	0x01EF309C STR X30, [X31 - 0x20]!
	0x01EF30A0 STP X20, X19, [X31 + 0x10]
	0x01EF30A4 ADRP X20, 0x24E6000
	0x01EF30A8 LDRB W8, [X20 + 0x5E1]
	0x01EF30AC MOV X19, X0
	0x01EF30B0 TBNZ X8, 0x0, 0x1EF30C8
	0x01EF30B4 ADRP X0, 0x2200000
	0x01EF30B8 LDR X0, [X0 + 0x618]
	0x01EF30BC BL 0x1C16CF4
	0x01EF30C0 MOVZ W8, 0x1
	0x01EF30C4 STRB W8, [X20 + 0x5E1]
	0x01EF30C8 MOVZ W1, 0x1
	0x01EF30CC MOV X0, X19
	0x01EF30D0 BL 0x1EF2210
	0x01EF30D4 AND W8, W0, 0xFF
	0x01EF30D8 CMP W8, 0x1
	0x01EF30DC B.NE 0x1EF313C
	0x01EF30E0 MOVZ W1, 0x8
	0x01EF30E4 MOV X0, X19
	0x01EF30E8 BL 0x1EF2210
	0x01EF30EC MOV W20, W0
	0x01EF30F0 MOVZ W1, 0x8
	0x01EF30F4 MOV X0, X19
	0x01EF30F8 BL 0x1EF2210
	0x01EF30FC ADRP X8, 0x2200000
	0x01EF3100 LDR X8, [X8 + 0x618]
	0x01EF3104 AND W1, W20, 0xFF
	0x01EF3108 AND W9, W0, 0xFF
	0x01EF310C BFM W1, W9, 0x18, 0x7
	0x01EF3110 LDR X8, [X8]
	0x01EF3114 MOV X0, X8
	0x01EF3118 BL 0x1C16D6C
	0x01EF311C CBZ X0, 0x1EF3150
	0x01EF3120 LDR W3, [X0 + 0x18]
	0x01EF3124 MOV X20, X0
	0x01EF3128 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24E7000
	006 Move X20, 0x2208000
	007 Move W8, [X21+1502]
	008 Move X20, [X20+3176]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2201000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0x2208000
	018 Move X0, [X0+3176]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1502], W8
	022 Move X0, [X20]
	023 Move X21, 0x2201000
	024 Move W20, [X19+16]
	025 Move W8, [X0+224]
	026 Move X21, [X21+1560]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, W20
	031 Move X1, X31
	032 Call Maths.BytesRequiredForBits, X0
	033 Move X8, [X21]
	034 Move W1, W0
	035 Move X0, X8
	036 Call 0x1C17D6C
	037 Compare X0, 0
	038 JumpIfEqual {53}
	039 Move X20, X0
	040 Move X0, [X19+24]
	041 Move W4, [X20+24]
	042 Move W1, W31
	043 Move X2, X20
	044 Move W3, W31
	045 Move X5, X31
	046 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	047 Move X0, X20
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Boolean WriteBool(System.Boolean value)

Disassembly:
	0x01EF312C MOV X1, X20
	0x01EF3130 MOV W2, W31
	0x01EF3134 BL 0x1EF2E9C
	0x01EF3138 B 0x1EF3140
	0x01EF313C MOV X20, X31
	0x01EF3140 MOV X0, X20
	0x01EF3144 LDP X20, X19, [X31 + 0x10]
	0x01EF3148 LDR X30, [X31], #0x20
	0x01EF314C RET
	0x01EF3150 BL 0x1C16F20
	0x01EF3154 STP X30, X21, [X31 - 0x20]!
	0x01EF3158 STP X20, X19, [X31 + 0x10]
	0x01EF315C MOV X19, X0
	0x01EF3160 LDR W8, [X19 + 0x10]
	0x01EF3164 LDR X0, [X0 + 0x18]
	0x01EF3168 CMP X1, 0x0
	0x01EF316C MOV X20, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move W8, [X19+16]
	006 Move X0, [X0+24]
	007 And W20, W1, 1
	008 Move W2, 1
	009 Move W1, W8
	010 Move W3, W20
	011 Call BitStream.WriteByteAt, X0, X1, X2, X3
	012 Move W8, [X19+16]
	013 Move W0, W20
	014 Add W8, W8, 1
	015 Move [X19+16], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0

Method: System.Boolean WriteBoolean(System.Boolean value)

Disassembly:
	0x01EF31AC BLR X9
	0x01EF31B0 CBZ X0, 0x1EF31E8
	0x01EF31B4 LDRH W1, [X0 + 0x18]
	0x01EF31B8 MOV X20, X0
	0x01EF31BC MOVZ W2, 0x10
	0x01EF31C0 MOV X0, X19
	0x01EF31C4 BL 0x1EF2388
	0x01EF31C8 MOV X0, X19
	0x01EF31CC MOV X1, X20
	0x01EF31D0 LDP X20, X19, [X31 + 0x10]
	0x01EF31D4 LDP X30, X21, [X31], #0x20
	0x01EF31D8 B 0x1EF2C90
	0x01EF31DC LDP X20, X19, [X31 + 0x10]
	0x01EF31E0 LDP X30, X21, [X31], #0x20
	0x01EF31E4 RET
	0x01EF31E8 BL 0x1C16F20
	0x01EF31EC STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move W8, [X19+16]
	006 Move X0, [X0+24]
	007 And W20, W1, 1
	008 Move W2, 1
	009 Move W1, W8
	010 Move W3, W20
	011 Call BitStream.WriteByteAt, X0, X1, X2, X3
	012 Move W8, [X19+16]
	013 Move W0, W20
	014 Add W8, W8, 1
	015 Move [X19+16], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0

Method: System.Boolean ReadBool()

Disassembly:
	0x01EF31F0 STP X20, X19, [X31 + 0x10]
	0x01EF31F4 MOV X20, X0
	0x01EF31F8 MOV X0, X31
	0x01EF31FC MOV X19, X1
	0x01EF3200 BL 0x3241948
	0x01EF3204 MOV X2, X0
	0x01EF3208 MOV X0, X20
	0x01EF320C MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move W1, 1
	003 Call BitStream.InternalReadByte, X0, X1
	004 And W8, W0, 255
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean ReadBoolean()

Disassembly:
	0x01EF32EC LDP X30, X21, [X31], #0x20
	0x01EF32F0 BR X5
	0x01EF32F4 ADRP X8, 0x2200000
	0x01EF32F8 LDR X8, [X8 + 0x988]
	0x01EF32FC LDR X0, [X8]
	0x01EF3300 LDP X20, X19, [X31 + 0x10]
	0x01EF3304 LDP X30, X21, [X31], #0x20
	0x01EF3308 RET

ISIL:
	001 Move [X31-16], X30
	002 Move W1, 1
	003 Call BitStream.InternalReadByte, X0, X1
	004 And W8, W0, 255
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Void WriteByte(System.Byte value, System.Int32 bits)

Disassembly:
	0x01EF2EA0 STP X20, X19, [X31 + 0x10]
	0x01EF2EA4 LDR W8, [X0 + 0x10]
	0x01EF2EA8 MOV W19, W3
	0x01EF2EAC MOV W3, W2
	0x01EF2EB0 MOV X2, X1
	0x01EF2EB4 ADD W9, W8, 0x7
	0x01EF2EB8 CMP W8, 0x0
	0x01EF2EBC CSEL W9, W9, W8, LT
	0x01EF2EC0 AND W9, W9, 0xFFFFFFF8
	0x01EF2EC4 MOV X20, X0
	0x01EF2EC8 SUBS W11, W8, W9
	0x01EF2ECC SBFM W1, W8, 0x3, 0x1F
	0x01EF2ED0 B.EQ 0x1EF2F70
	0x01EF2ED4 CMP W19, 0x1
	0x01EF2ED8 B.LT 0x1EF2F80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move W8, [X20+16]
	006 Move X0, [X0+24]
	007 Move W3, W1
	008 Move W19, W2
	009 Move W1, W8
	010 Call BitStream.WriteByteAt, X0, X1, X2, X3
	011 Move W8, [X20+16]
	012 Add W8, W8, W19
	013 Move [X20+16], W8
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Byte ReadByte(System.Int32 bits)

Disassembly:
	0x01EF330C BL 0x1C16F20

ISIL:
	001 Call BitStream.InternalReadByte, X0, X1
	002 Return X0

Method: System.Void WriteByte(System.Byte value)

Disassembly:
	0x01EF3310 STP X30, X19, [X31 - 0x10]!
	0x01EF3314 MOV X19, X0
	0x01EF3318 MOV X0, X31
	0x01EF331C BL 0x3241948
	0x01EF3320 MOV X1, X0
	0x01EF3324 MOV X0, X19
	0x01EF3328 LDP X30, X19, [X31], #0x10
	0x01EF332C B 0x1EF321C
	0x01EF3330 SUB X31, X31, 0x20
	0x01EF3334 STP X30, X19, [X31 + 0x10]
	0x01EF3338 MOV X19, X0
	0x01EF333C STP X1, X2, [X31]
	0x01EF3340 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W8, [X19+16]
	005 Move X0, [X0+24]
	006 Move W3, W1
	007 Move W2, 8
	008 Move W1, W8
	009 Call BitStream.WriteByteAt, X0, X1, X2, X3
	010 Move W8, [X19+16]
	011 Add W8, W8, 8
	012 Move [X19+16], W8
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 

Method: System.Byte ReadByte()

Disassembly:
	0x01EF3344 MOV X1, X31
	0x01EF3348 BL 0x33785D8

ISIL:
	001 Move W1, 8
	002 Call BitStream.InternalReadByte, X0, X1
	003 Return X0

Method: System.SByte ReadSByte()

Disassembly:
	0x01EF334C MOV X1, X0
	0x01EF3350 MOV X0, X19

ISIL:
	001 Move W1, 8
	002 Call BitStream.InternalReadByte, X0, X1
	003 Return X0

Method: System.Void WriteSByte(System.SByte value)

Disassembly:
	0x01EF3354 BL 0x1EF2C90
	0x01EF3358 LDP X30, X19, [X31 + 0x10]
	0x01EF335C ADD X31, X31, 0x20
	0x01EF3360 RET
	0x01EF3364 SUB X31, X31, 0x30
	0x01EF3368 STP X30, X21, [X31 + 0x10]
	0x01EF336C STP X20, X19, [X31 + 0x20]
	0x01EF3370 ADRP X20, 0x24E6000
	0x01EF3374 ADRP X21, 0x2200000
	0x01EF3378 LDRB W8, [X20 + 0x5E3]
	0x01EF337C LDR X21, [X21 + 0x618]
	0x01EF3380 MOV X19, X0
	0x01EF3384 TBNZ X8, 0x0, 0x1EF339C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W8, [X19+16]
	005 Move X0, [X0+24]
	006 Move W3, W1
	007 Move W2, 8
	008 Move W1, W8
	009 Call BitStream.WriteByteAt, X0, X1, X2, X3
	010 Move W8, [X19+16]
	011 Add W8, W8, 8
	012 Move [X19+16], W8
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 

Method: System.Void WriteUShort(System.UInt16 value, System.Int32 bits)

Disassembly:
	0x01EF3388 ADRP X0, 0x2200000
	0x01EF338C LDR X0, [X0 + 0x618]
	0x01EF3390 BL 0x1C16CF4
	0x01EF3394 MOVZ W8, 0x1
	0x01EF3398 STRB W8, [X20 + 0x5E3]
	0x01EF339C LDR X0, [X21]
	0x01EF33A0 MOVZ W1, 0x10
	0x01EF33A4 BL 0x1C16D6C
	0x01EF33A8 MOV X20, X0
	0x01EF33AC MOV X0, X19
	0x01EF33B0 MOV X1, X20
	0x01EF33B4 BL 0x1EF2E80
	0x01EF33B8 ADD X0, X31, 0x0
	0x01EF33BC MOV X1, X20
	0x01EF33C0 MOV X2, X31
	0x01EF33C4 STP X31, X31, [X31]
	0x01EF33C8 BL 0x3376898
	0x01EF33CC LDP X0, X1, [X31]
	0x01EF33D0 LDP X20, X19, [X31 + 0x20]
	0x01EF33D4 LDP X30, X21, [X31 + 0x10]
	0x01EF33D8 ADD X31, X31, 0x30
	0x01EF33DC RET
	0x01EF33E0 STR X30, [X31 - 0x10]!
	0x01EF33E4 CMP W2, 0x1
	0x01EF33E8 B.LT 0x1EF34B0
	0x01EF33EC MOVZ W12, 0x8
	0x01EF33F0 MOVZ W13, 0xFF
	0x01EF33F4 AND W10, W1, 0x7
	0x01EF33F8 SUB W8, W12, W2
	0x01EF33FC SUB W9, W12, W10
	0x01EF3400 LSRV W8, W13, W8
	0x01EF3404 SUBS W14, W9, W2
	0x01EF3408 AND W8, W8, W3, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+24]
	008 Move W8, [X19+16]
	009 Subtract W20, W2, 8
	010 Move W21, W1
	011 Move W2, 8
	012 Move W1, W8
	013 Move W3, W21
	014 Call BitStream.WriteByteAt, X0, X1, X2, X3
	015 Move W8, [X19+16]
	016 Move X0, [X19+24]
	017 Move W3, W21
	018 ShiftRight W3, 8
	019 And W3, W3, 0x7FFF
	020 Move W2, W20
	021 Add W1, W8, 8
	022 Move [X19+16], W1
	023 Call BitStream.WriteByteAt, X0, X1, X2, X3
	024 Move W22, W20
	025 Move W1, W8
	026 Move W3, W21
	027 Move W22, W2
	028 Call BitStream.WriteByteAt, X0, X1, X2, X3
	029 Move W8, [X19+16]
	030 Add W8, W8, W22
	031 Move [X19+16], W8
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return 

Method: System.UInt16 ReadUShort(System.Int32 bits)

Disassembly:
	0x01EF340C SBFM W11, W1, 0x3, 0x1F
	0x01EF3410 B.MI 0x1EF344C
	0x01EF3414 CBZ X0, 0x1EF34BC
	0x01EF3418 LDR W15, [X0 + 0x18]
	0x01EF341C CMP W11, W15
	0x01EF3420 B.CS 0x1EF34B8
	0x01EF3424 ADD X11, X0, W11, SXTW
	0x01EF3428 LDRB W15, [X11 + 0x20]!
	0x01EF342C SUB W12, W12, W14
	0x01EF3430 LSRV W9, W13, W9
	0x01EF3434 LSLV W12, W13, W12
	0x01EF3438 ORR W9, W12, W9, 0x0
	0x01EF343C AND W9, W9, W15, 0x0
	0x01EF3440 LSLV W8, W8, W10
	0x01EF3444 ORR W8, W9, W8, 0x0
	0x01EF3448 B 0x1EF34AC
	0x01EF344C CBZ X0, 0x1EF34BC
	0x01EF3450 LDR W12, [X0 + 0x18]
	0x01EF3454 CMP W11, W12
	0x01EF3458 B.CS 0x1EF34B8
	0x01EF345C ADD X13, X0, W11, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Subtract W21, W1, 8
	006 Move X20, X0
	007 Move W1, 8
	008 Move X0, X20
	009 Call BitStream.InternalReadByte, X0, X1
	010 Move W19, W0
	011 Move X0, X20
	012 Move W1, W21
	013 Call BitStream.InternalReadByte, X0, X1
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Move X0, X20
	016 Call BitStream.InternalReadByte, X0, X1
	017 And W19, W0, 255
	018 Move W0, W19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0

Method: System.Void WriteUShort(System.UInt16 value)

Disassembly:
	0x01EF3460 LDRB W14, [X13 + 0x20]
	0x01EF3464 MOVZ W12, 0xFF

ISIL:
	001 Move W2, 16
	002 Call BitStream.WriteUShort, X0, X1, X2
	003 Return 

Method: System.UInt16 ReadUShort()

Disassembly:
	0x01EF3468 LSRV W15, W12, W9
	0x01EF346C LSLV W10, W8, W10
	0x01EF3470 AND W14, W15, W14, 0x0
	0x01EF3474 ORR W10, W14, W10, 0x0
	0x01EF3478 STRB W10, [X13 + 0x20]
	0x01EF347C LDR W13, [X0 + 0x18]
	0x01EF3480 SXTW X10, W11
	0x01EF3484 ADD X10, X10, 0x1
	0x01EF3488 CMP W10, W13
	0x01EF348C B.CS 0x1EF34B8
	0x01EF3490 ADD X11, X0, X10
	0x01EF3494 LDRB W10, [X11 + 0x20]!
	0x01EF3498 SUB W13, W2, W9
	0x01EF349C LSLV W12, W12, W13

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, 8
	005 Move X19, X0
	006 Call BitStream.InternalReadByte, X0, X1
	007 Move W20, W0
	008 Move W1, 8
	009 Move X0, X19
	010 Call BitStream.InternalReadByte, X0, X1
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Move W0, W20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return X0

Method: System.Void WriteShort(System.Int16 value, System.Int32 bits)

Disassembly:
	0x01EF34A0 LSRV W8, W8, W9

ISIL:
	001 Call BitStream.WriteUShort, X0, X1, X2
	002 Return 

Method: System.Int16 ReadShort(System.Int32 bits)

Disassembly:
	0x01EF34A4 AND W10, W12, W10, 0x0

ISIL:
	001 Call BitStream.ReadUShort, X0, X1
	002 Return X0

Method: System.Void WriteShort(System.Int16 value)

Disassembly:
	0x01EF34A8 ORR W8, W10, W8, 0x0
	0x01EF34AC STRB W8, [X11]

ISIL:
	001 Move W2, 16
	002 Call BitStream.WriteUShort, X0, X1, X2
	003 Return 

Method: System.Int16 ReadShort()

Disassembly:
	0x01EF34B0 LDR X30, [X31], #0x10
	0x01EF34B4 RET
	0x01EF34B8 BL 0x1C16F28
	0x01EF34BC BL 0x1C16F20
	0x01EF34C0 STR X30, [X31 - 0x20]!
	0x01EF34C4 STP X20, X19, [X31 + 0x10]
	0x01EF34C8 LDRB W8, [X0 + 0x20]
	0x01EF34CC MOV X20, X0
	0x01EF34D0 CBZ W8, 0x1EF34FC
	0x01EF34D4 MOV W19, W1
	0x01EF34D8 LDR X0, [X20 + 0x18]
	0x01EF34DC LDR W1, [X20 + 0x10]
	0x01EF34E0 AND W3, W19, 0x1
	0x01EF34E4 MOVZ W2, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, 8
	005 Move X19, X0
	006 Call BitStream.InternalReadByte, X0, X1
	007 Move W20, W0
	008 Move W1, 8
	009 Move X0, X19
	010 Call BitStream.InternalReadByte, X0, X1
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Move W0, W20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return X0

Method: System.Void WriteChar(System.Char value)

Disassembly:
	0x01EF34E8 BL 0x1EF33E0
	0x01EF34EC LDR W8, [X20 + 0x10]

ISIL:
	001 Move W2, 16
	002 Call BitStream.WriteUShort, X0, X1, X2
	003 Return 

Method: System.Char ReadChar()

Disassembly:
	0x01EF34F0 ADD W8, W8, 0x1
	0x01EF34F4 STR W8, [X20 + 0x10]
	0x01EF34F8 B 0x1EF3514
	0x01EF34FC MOVZ W1, 0x1
	0x01EF3500 MOV X0, X20
	0x01EF3504 BL 0x1EF2210
	0x01EF3508 AND W8, W0, 0xFF
	0x01EF350C CMP W8, 0x1
	0x01EF3510 CSET W19, EQ
	0x01EF3514 AND W0, W19, 0x1
	0x01EF3518 LDP X20, X19, [X31 + 0x10]
	0x01EF351C LDR X30, [X31], #0x20
	0x01EF3520 RET
	0x01EF3524 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, 8
	005 Move X19, X0
	006 Call BitStream.InternalReadByte, X0, X1
	007 Move W20, W0
	008 Move W1, 8
	009 Move X0, X19
	010 Call BitStream.InternalReadByte, X0, X1
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Move W0, W20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return X0

Method: System.Void WriteUInt(System.UInt32 value, System.Int32 bits)

Disassembly:
	0x01EF3528 STP X20, X19, [X31 + 0x10]
	0x01EF352C LDRB W8, [X0 + 0x20]
	0x01EF3530 MOV X19, X0
	0x01EF3534 MOV X20, X1
	0x01EF3538 CBZ W8, 0x1EF3560
	0x01EF353C LDR X20, [X20]
	0x01EF3540 MOV X0, X31
	0x01EF3544 BL 0x3241948
	0x01EF3548 MOV X2, X0
	0x01EF354C MOV X0, X19
	0x01EF3550 MOV X1, X20
	0x01EF3554 LDP X20, X19, [X31 + 0x10]
	0x01EF3558 LDR X30, [X31], #0x20
	0x01EF355C B 0x1EF3154
	0x01EF3560 MOV X0, X31
	0x01EF3564 BL 0x3241948
	0x01EF3568 MOV X1, X0
	0x01EF356C MOV X0, X19
	0x01EF3570 BL 0x1EF321C
	0x01EF3574 STR X0, [X20]
	0x01EF3578 LDP X20, X19, [X31 + 0x10]
	0x01EF357C LDR X30, [X31], #0x20
	0x01EF3580 RET
	0x01EF3584 STR X30, [X31 - 0x20]!
	0x01EF3588 STP X20, X19, [X31 + 0x10]
	0x01EF358C LDRB W8, [X0 + 0x20]
	0x01EF3590 MOV X19, X0
	0x01EF3594 MOV X20, X1
	0x01EF3598 CBZ W8, 0x1EF35C8
	0x01EF359C LDRB W8, [X20]
	0x01EF35A0 LDR X0, [X19 + 0x18]
	0x01EF35A4 LDR W1, [X19 + 0x10]
	0x01EF35A8 MOVZ W2, 0x1
	0x01EF35AC CMP W8, 0x0
	0x01EF35B0 CSET W3, NE
	0x01EF35B4 BL 0x1EF33E0
	0x01EF35B8 LDR W8, [X19 + 0x10]
	0x01EF35BC ADD W8, W8, 0x1
	0x01EF35C0 STR W8, [X19 + 0x10]
	0x01EF35C4 B 0x1EF35E4
	0x01EF35C8 MOVZ W1, 0x1
	0x01EF35CC MOV X0, X19
	0x01EF35D0 BL 0x1EF2210
	0x01EF35D4 AND W8, W0, 0xFF
	0x01EF35D8 CMP W8, 0x1
	0x01EF35DC CSET W8, EQ
	0x01EF35E0 STRB W8, [X20]
	0x01EF35E4 LDP X20, X19, [X31 + 0x10]
	0x01EF35E8 LDR X30, [X31], #0x20
	0x01EF35EC RET
	0x01EF35F0 STP X30, X19, [X31 - 0x10]!
	0x01EF35F4 LDRB W8, [X0 + 0x20]
	0x01EF35F8 MOV X19, X1
	0x01EF35FC CBZ W8, 0x1EF360C
	0x01EF3600 LDR V0, [X19]
	0x01EF3604 LDP X30, X19, [X31], #0x10
	0x01EF3608 B 0x1EF2998
	0x01EF360C BL 0x1EF2A40
	0x01EF3610 STR S0, [X19]
	0x01EF3614 LDP X30, X19, [X31], #0x10
	0x01EF3618 RET
	0x01EF361C STP X30, X19, [X31 - 0x10]!
	0x01EF3620 LDRB W8, [X0 + 0x20]
	0x01EF3624 MOV X19, X1
	0x01EF3628 CBZ W8, 0x1EF3638
	0x01EF362C LDR V0, [X19]
	0x01EF3630 LDP X30, X19, [X31], #0x10
	0x01EF3634 B 0x1EF2AA0
	0x01EF3638 BL 0x1EF2BD8
	0x01EF363C STR D0, [X19]
	0x01EF3640 LDP X30, X19, [X31], #0x10
	0x01EF3644 RET
	0x01EF3648 STP X30, X21, [X31 - 0x20]!
	0x01EF364C STP X20, X19, [X31 + 0x10]
	0x01EF3650 LDRB W8, [X0 + 0x20]
	0x01EF3654 MOV X19, X0
	0x01EF3658 MOV X20, X1
	0x01EF365C CBZ W8, 0x1EF3688
	0x01EF3660 LDP W1, W21, [X20]
	0x01EF3664 MOVZ W2, 0x20
	0x01EF3668 MOV X0, X19
	0x01EF366C BL 0x1EF2528
	0x01EF3670 MOV X0, X19
	0x01EF3674 LDP X20, X19, [X31 + 0x10]
	0x01EF3678 MOVZ W2, 0x20
	0x01EF367C MOV W1, W21
	0x01EF3680 LDP X30, X21, [X31], #0x20
	0x01EF3684 B 0x1EF2528
	0x01EF3688 MOVZ W1, 0x20
	0x01EF368C MOV X0, X19

ISIL:
	001 Add W8, W2, 7
	002 Add W9, W2, 14
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 NotImplemented "Instruction SBFM not yet implemented."
	006 Subtract W8, W8, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move [X31-48], X30
	009 Move [X31-40], X23
	010 Move [X31+16], X22
	011 Move [X31+24], X21
	012 Move [X31+32], X20
	013 Move [X31+40], X19
	014 Move X9, -20729856
	015 Add X9, X9, 3122
	016 NotImplemented "Instruction ADR not yet implemented."
	017 Move W11, [X9]
	018 Add X10, X10, X11
	019 Move W19, W2
	020 Move W3, W1
	021 Move X20, X0
	022 CallNoReturn X10
	023 Add X20, X20, 16
	024 Move W1, [X20]
	025 Move W2, W19
	026 Move X0, [X20+8]
	027 Add X20, X20, 16
	028 Move W1, [X20]
	029 Move W2, 8
	030 Move W21, W3
	031 ShiftRight W21, 8
	032 And W21, W21, 0x7FFFFFFF
	033 Move X0, [X20+8]
	034 Call BitStream.WriteByteAt, X0, X1, X2, X3
	035 Move W8, [X20]
	036 Move X0, [X20+8]
	037 Subtract W19, W19, 8
	038 Add X20, X20, 16
	039 Move W1, [X20]
	040 Move W2, 8
	041 Move W21, W3
	042 ShiftRight W21, 16
	043 And W21, W21, 0x7FFFFFFF
	044 Move W22, W3
	045 ShiftRight W22, 8
	046 And W22, W22, 0x7FFFFFFF
	047 Move X0, [X20+8]
	048 Call BitStream.WriteByteAt, X0, X1, X2, X3
	049 Move W8, [X20]
	050 Move X0, [X20+8]
	051 Move W2, 8
	052 Move W3, W22
	053 Add W1, W8, 8
	054 Move [X20], W1
	055 Call BitStream.WriteByteAt, X0, X1, X2, X3
	056 Move W8, [X20]
	057 Move X0, [X20+8]
	058 Subtract W19, W19, 16
	059 Add W1, W8, 8
	060 Move [X20], W1
	061 Move W2, W19
	062 Move W3, W21
	063 Add X20, X20, 16
	064 Move W1, [X20]
	065 Move W2, 8
	066 Move W21, W3
	067 ShiftRight W21, 16
	068 And W21, W21, 0x7FFFFFFF
	069 Move W22, W3
	070 ShiftRight W22, 8
	071 And W22, W22, 0x7FFFFFFF
	072 Move X0, [X20+8]
	073 Move W23, W3
	074 ShiftRight W23, 24
	075 And W23, W23, 0x7FFFFFFF
	076 Call BitStream.WriteByteAt, X0, X1, X2, X3
	077 Move W8, [X20]
	078 Move X0, [X20+8]
	079 Move W2, 8
	080 Move W3, W22
	081 Add W1, W8, 8
	082 Move [X20], W1
	083 Call BitStream.WriteByteAt, X0, X1, X2, X3
	084 Move W8, [X20]
	085 Move X0, [X20+8]
	086 Move W2, 8
	087 Move W3, W21
	088 Add W1, W8, 8
	089 Move [X20], W1
	090 Call BitStream.WriteByteAt, X0, X1, X2, X3
	091 Move W8, [X20]
	092 Move X0, [X20+8]
	093 Subtract W19, W19, 24
	094 Move W2, W19
	095 Add W1, W8, 8
	096 Move W3, W23
	097 Move [X20], W1
	098 Call BitStream.WriteByteAt, X0, X1, X2, X3
	099 Move W8, [X20]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Add W8, W8, W19
	103 Move [X20], W8
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Return 

Method: System.UInt32 ReadUInt(System.Int32 bits)

Disassembly:
	0x01EF3690 BL 0x1EF2690
	0x01EF3694 MOV W21, W0
	0x01EF3698 MOVZ W1, 0x20
	0x01EF369C MOV X0, X19
	0x01EF36A0 BL 0x1EF2690
	0x01EF36A4 MOV W8, W21
	0x01EF36A8 BFM X8, X0, 0x20, 0x1F
	0x01EF36AC STR X8, [X20]
	0x01EF36B0 LDP X20, X19, [X31 + 0x10]
	0x01EF36B4 LDP X30, X21, [X31], #0x20
	0x01EF36B8 RET
	0x01EF36BC STP X30, X21, [X31 - 0x20]!
	0x01EF36C0 STP X20, X19, [X31 + 0x10]
	0x01EF36C4 LDRB W8, [X0 + 0x20]
	0x01EF36C8 MOV X19, X0
	0x01EF36CC MOV X20, X1
	0x01EF36D0 CBZ W8, 0x1EF36FC
	0x01EF36D4 LDP W1, W21, [X20]
	0x01EF36D8 MOVZ W2, 0x20
	0x01EF36DC MOV X0, X19
	0x01EF36E0 BL 0x1EF2528
	0x01EF36E4 MOV X0, X19
	0x01EF36E8 LDP X20, X19, [X31 + 0x10]
	0x01EF36EC MOVZ W2, 0x20
	0x01EF36F0 MOV W1, W21
	0x01EF36F4 LDP X30, X21, [X31], #0x20
	0x01EF36F8 B 0x1EF2528
	0x01EF36FC MOVZ W1, 0x20
	0x01EF3700 MOV X0, X19
	0x01EF3704 BL 0x1EF2690
	0x01EF3708 MOV W21, W0
	0x01EF370C MOVZ W1, 0x20
	0x01EF3710 MOV X0, X19
	0x01EF3714 BL 0x1EF2690
	0x01EF3718 MOV W8, W21
	0x01EF371C BFM X8, X0, 0x20, 0x1F
	0x01EF3720 STR X8, [X20]
	0x01EF3724 LDP X20, X19, [X31 + 0x10]
	0x01EF3728 LDP X30, X21, [X31], #0x20
	0x01EF372C RET
	0x01EF3730 STR X30, [X31 - 0x20]!
	0x01EF3734 STP X20, X19, [X31 + 0x10]
	0x01EF3738 LDRB W8, [X0 + 0x20]
	0x01EF373C MOV X19, X0
	0x01EF3740 MOV X20, X1
	0x01EF3744 CBZ W8, 0x1EF376C
	0x01EF3748 LDR X0, [X19 + 0x18]
	0x01EF374C LDR W1, [X19 + 0x10]
	0x01EF3750 LDRB W3, [X20]
	0x01EF3754 MOVZ W2, 0x8
	0x01EF3758 BL 0x1EF33E0
	0x01EF375C LDR W8, [X19 + 0x10]
	0x01EF3760 ADD W8, W8, 0x8
	0x01EF3764 STR W8, [X19 + 0x10]
	0x01EF3768 B 0x1EF377C
	0x01EF376C MOVZ W1, 0x8
	0x01EF3770 MOV X0, X19
	0x01EF3774 BL 0x1EF2210
	0x01EF3778 STRB W0, [X20]
	0x01EF377C LDP X20, X19, [X31 + 0x10]
	0x01EF3780 LDR X30, [X31], #0x20
	0x01EF3784 RET
	0x01EF3788 MOVZ W2, 0x20
	0x01EF378C B 0x1EF3790
	0x01EF3790 STP X30, X19, [X31 - 0x10]!
	0x01EF3794 LDRB W8, [X0 + 0x20]
	0x01EF3798 MOV X19, X1
	0x01EF379C CBZ W8, 0x1EF37AC
	0x01EF37A0 LDR W1, [X19]
	0x01EF37A4 LDP X30, X19, [X31], #0x10
	0x01EF37A8 B 0x1EF2528
	0x01EF37AC MOV W1, W2
	0x01EF37B0 BL 0x1EF2690
	0x01EF37B4 STR W0, [X19]
	0x01EF37B8 LDP X30, X19, [X31], #0x10
	0x01EF37BC RET
	0x01EF37C0 STP X30, X19, [X31 - 0x10]!
	0x01EF37C4 LDRB W8, [X0 + 0x20]
	0x01EF37C8 MOV X19, X1
	0x01EF37CC CBZ W8, 0x1EF37DC
	0x01EF37D0 LDR X1, [X19]
	0x01EF37D4 LDP X30, X19, [X31], #0x10
	0x01EF37D8 B 0x1EF2814

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add W8, W1, 7
	008 Add W9, W1, 14
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 NotImplemented "Instruction SBFM not yet implemented."
	012 Subtract W8, W8, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X9, -20729856
	015 Add X9, X9, 3126
	016 NotImplemented "Instruction ADR not yet implemented."
	017 Move W11, [X9]
	018 Add X10, X10, X11
	019 Move W20, W1
	020 Move X21, X0
	021 CallNoReturn X10
	022 Move X0, X21
	023 Move W1, W20
	024 Call BitStream.InternalReadByte, X0, X1
	025 Move W19, W0
	026 Move W8, W31
	027 Move W23, W31
	028 Move W22, W31
	029 Move W8, W31
	030 Move W23, W31
	031 Move W22, W31
	032 Move W19, W31
	033 Move W1, 8
	034 Move X0, X21
	035 Call BitStream.InternalReadByte, X0, X1
	036 Move W19, W0
	037 Subtract W1, W20, 8
	038 Move X0, X21
	039 Call BitStream.InternalReadByte, X0, X1
	040 Move W22, W0
	041 Move W8, W31
	042 Move W23, W31
	043 Move W1, 8
	044 Move X0, X21
	045 Call BitStream.InternalReadByte, X0, X1
	046 Move W19, W0
	047 Move W1, 8
	048 Move X0, X21
	049 Call BitStream.InternalReadByte, X0, X1
	050 Move W22, W0
	051 Subtract W1, W20, 16
	052 Move X0, X21
	053 Call BitStream.InternalReadByte, X0, X1
	054 Move W23, W0
	055 Move W8, W31
	056 Move W1, 8
	057 Move X0, X21
	058 Call BitStream.InternalReadByte, X0, X1
	059 Move W19, W0
	060 Move W1, 8
	061 Move X0, X21
	062 Call BitStream.InternalReadByte, X0, X1
	063 Move W22, W0
	064 Move W1, 8
	065 Move X0, X21
	066 Call BitStream.InternalReadByte, X0, X1
	067 Move W23, W0
	068 Subtract W1, W20, 24
	069 Move X0, X21
	070 Call BitStream.InternalReadByte, X0, X1
	071 Move W8, W0
	072 ShiftRight W8, 8
	073 And W8, W8, 127
	074 And W9, W19, 255
	075 And W10, W22, 255
	076 And W11, W23, 255
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Or W8, W8, W11
	082 Or W8, W8, W9
	083 Or W0, W8, W10
	084 Move X30, [X31+48]
	085 Move X23, [X31+56]
	086 Return X0

Method: System.Void WriteUInt(System.UInt32 value)

Disassembly:
	0x01EF37DC MOV W1, W2
	0x01EF37E0 BL 0x1EF2860

ISIL:
	001 Move W2, 32
	002 Call BitStream.WriteUInt, X0, X1, X2
	003 Return 

Method: System.UInt32 ReadUInt()

Disassembly:
	0x01EF37E4 STR X0, [X19]
	0x01EF37E8 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move W1, 32
	002 Call BitStream.ReadUInt, X0, X1
	003 Return X0

Method: System.Void WriteInt_Shifted(System.Int32 value, System.Int32 bits, System.Int32 shift)

Disassembly:
	0x01EF37EC RET
	0x01EF37F0 MOVZ W2, 0x20

ISIL:
	001 Move W2, 32
	002 Call BitStream.WriteUInt, X0, X1, X2
	003 Return 

Method: System.Int32 ReadInt_Shifted(System.Int32 bits, System.Int32 shift)

Disassembly:
	0x01EF37F8 STP X30, X19, [X31 - 0x10]!
	0x01EF37FC LDRB W8, [X0 + 0x20]

ISIL:
	001 Move W1, 32
	002 Call BitStream.ReadUInt, X0, X1
	003 Return X0

Method: System.Void WriteInt(System.Int32 value, System.Int32 bits)

Disassembly:
	0x01EF37F4 B 0x1EF37F8

ISIL:
	001 Call BitStream.WriteUInt, X0, X1, X2
	002 Return 

Method: System.Int32 ReadInt(System.Int32 bits)

Disassembly:
	0x01EF3800 MOV X19, X1

ISIL:
	001 Call BitStream.ReadUInt, X0, X1
	002 Return X0

Method: System.Void WriteInt(System.Int32 value)

Disassembly:
	0x01EF3804 CBZ W8, 0x1EF3814
	0x01EF3808 LDR W1, [X19]

ISIL:
	001 Move W2, 32
	002 Call BitStream.WriteUInt, X0, X1, X2
	003 Return 

Method: System.Int32 ReadInt()

Disassembly:
	0x01EF380C LDP X30, X19, [X31], #0x10
	0x01EF3810 B 0x1EF2528

ISIL:
	001 Move W1, 32
	002 Call BitStream.ReadUInt, X0, X1
	003 Return X0

Method: System.Void WriteULong(System.UInt64 value, System.Int32 bits)

Disassembly:
	0x01EF3814 MOV W1, W2
	0x01EF3818 BL 0x1EF2690
	0x01EF381C STR W0, [X19]
	0x01EF3820 LDP X30, X19, [X31], #0x10
	0x01EF3824 RET
	0x01EF3828 STR X30, [X31 - 0x30]!
	0x01EF382C STP X22, X21, [X31 + 0x10]
	0x01EF3830 STP X20, X19, [X31 + 0x20]
	0x01EF3834 ADRP X21, 0x24E6000
	0x01EF3838 LDRB W8, [X21 + 0x5E4]
	0x01EF383C MOV X19, X1
	0x01EF3840 MOV X20, X0
	0x01EF3844 TBNZ X8, 0x0, 0x1EF385C
	0x01EF3848 ADRP X0, 0x2201000
	0x01EF384C LDR X0, [X0 + 0xE58]
	0x01EF3850 BL 0x1C16CF4
	0x01EF3854 MOVZ W8, 0x1
	0x01EF3858 STRB W8, [X21 + 0x5E4]
	0x01EF385C LDRB W8, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Subtract W20, W2, 32
	007 Move X21, X0
	008 Move W2, 32
	009 Move X0, X21
	010 Move W1, W19
	011 Call BitStream.WriteUInt, X0, X1, X2
	012 Move X1, X19
	013 ShiftRight X1, 32
	014 And X1, X1, 0x7FFFFFFF
	015 Move X0, X21
	016 Move W2, W20
	017 Move X0, X21
	018 Move W1, W19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call BitStream.WriteUInt, X0, X1, X2
	024 Return 

Method: System.UInt64 ReadULong(System.Int32 bits)

Disassembly:
	0x01EF3860 CBZ W8, 0x1EF38EC
	0x01EF3864 LDR X21, [X19]
	0x01EF3868 LDR X0, [X20 + 0x18]
	0x01EF386C LDR W1, [X20 + 0x10]
	0x01EF3870 MOVZ W2, 0x1
	0x01EF3874 CMP X21, 0x0
	0x01EF3878 CSET W3, NE
	0x01EF387C BL 0x1EF33E0
	0x01EF3880 LDR W8, [X20 + 0x10]
	0x01EF3884 ADD W8, W8, 0x1
	0x01EF3888 STR W8, [X20 + 0x10]
	0x01EF388C CBZ X21, 0x1EF3990
	0x01EF3890 LDR X8, [X19]
	0x01EF3894 CBZ X8, 0x1EF3988
	0x01EF3898 LDRH W1, [X8 + 0x18]
	0x01EF389C MOVZ W2, 0x10
	0x01EF38A0 MOV X0, X20
	0x01EF38A4 BL 0x1EF2388
	0x01EF38A8 LDR X8, [X19]
	0x01EF38AC CBZ X8, 0x1EF3988
	0x01EF38B0 MOV X21, X31
	0x01EF38B4 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Subtract W20, W1, 32
	006 Move X19, X0
	007 Move W1, 32
	008 Move X0, X19
	009 Call BitStream.ReadUInt, X0, X1
	010 Move W21, W0
	011 Move X0, X19
	012 Move W1, W20
	013 Call BitStream.ReadUInt, X0, X1
	014 Move W8, W0
	015 Move W0, W21
	016 NotImplemented "Instruction BFM not yet implemented."
	017 Move X0, X19
	018 Call BitStream.ReadUInt, X0, X1
	019 Move W0, W0
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return X0

Method: System.Void WriteULong(System.UInt64 value)

Disassembly:
	0x01EF38B8 CMP X21, W9, SXTW
	0x01EF38BC B.GE 0x1EF3990
	0x01EF38C0 CMP X21, X9
	0x01EF38C4 B.CS 0x1EF39A0
	0x01EF38C8 ADD X8, X8, X21, 0x2, LSL
	0x01EF38CC LDR W1, [X8 + 0x20]
	0x01EF38D0 MOVZ W2, 0x20
	0x01EF38D4 MOV X0, X20
	0x01EF38D8 BL 0x1EF2528
	0x01EF38DC LDR X8, [X19]
	0x01EF38E0 ADD X21, X21, 0x1
	0x01EF38E4 CBNZ X8, 0x1EF38B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W2, 32
	005 Move X19, X1
	006 Move X20, X0
	007 Call BitStream.WriteUInt, X0, X1, X2
	008 Move X1, X19
	009 ShiftRight X1, 32
	010 And X1, X1, 0x7FFFFFFF
	011 Move X0, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W2, 32
	015 Move X30, [X31+32]
	016 Call BitStream.WriteUInt, X0, X1, X2
	017 Return 

Method: System.UInt64 ReadULong()

Disassembly:
	0x01EF38E8 B 0x1EF3988
	0x01EF38EC MOVZ W1, 0x1
	0x01EF38F0 MOV X0, X20
	0x01EF38F4 BL 0x1EF2210
	0x01EF38F8 AND W8, W0, 0xFF
	0x01EF38FC CMP W8, 0x1
	0x01EF3900 B.NE 0x1EF398C
	0x01EF3904 MOVZ W1, 0x8
	0x01EF3908 MOV X0, X20
	0x01EF390C BL 0x1EF2210
	0x01EF3910 MOV W21, W0
	0x01EF3914 MOVZ W1, 0x8
	0x01EF3918 MOV X0, X20
	0x01EF391C BL 0x1EF2210
	0x01EF3920 ADRP X8, 0x2201000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, 32
	005 Move X19, X0
	006 Call BitStream.ReadUInt, X0, X1
	007 Move W20, W0
	008 Move W1, 32
	009 Move X0, X19
	010 Call BitStream.ReadUInt, X0, X1
	011 Move W8, W20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Move X0, X8
	016 Move X30, [X31+32]
	017 Return X0

Method: System.Void WriteLong(System.Int64 value, System.Int32 bits)

Disassembly:
	0x01EF3924 LDR X8, [X8 + 0xE58]

ISIL:
	001 Call BitStream.WriteULong, X0, X1, X2
	002 Return 

Method: System.Int64 ReadLong(System.Int32 bits)

Disassembly:
	0x01EF3928 AND W1, W21, 0xFF

ISIL:
	001 Call BitStream.ReadULong, X0, X1
	002 Return X0

Method: System.Void WriteLong(System.Int64 value)

Disassembly:
	0x01EF392C AND W9, W0, 0xFF
	0x01EF3930 BFM W1, W9, 0x18, 0x7
	0x01EF3934 LDR X8, [X8]
	0x01EF3938 MOV X0, X8
	0x01EF393C BL 0x1C16D6C
	0x01EF3940 STR X0, [X19]
	0x01EF3944 CBZ X0, 0x1EF3988
	0x01EF3948 MOV X21, X0
	0x01EF394C MOV X22, X31
	0x01EF3950 LDRSW X8, [X21 + 0x18]
	0x01EF3954 CMP X22, X8
	0x01EF3958 B.GE 0x1EF3990

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W2, 32
	005 Move X19, X1
	006 Move X20, X0
	007 Call BitStream.WriteUInt, X0, X1, X2
	008 Move X1, X19
	009 ShiftRight X1, 32
	010 And X1, X1, 0x7FFFFFFF
	011 Move X0, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W2, 32
	015 Move X30, [X31+32]
	016 Call BitStream.WriteUInt, X0, X1, X2
	017 Return 

Method: System.Int64 ReadLong()

Disassembly:
	0x01EF395C MOVZ W1, 0x20
	0x01EF3960 MOV X0, X20
	0x01EF3964 BL 0x1EF2690
	0x01EF3968 LDR W8, [X21 + 0x18]
	0x01EF396C CMP X22, X8
	0x01EF3970 B.CS 0x1EF39A0
	0x01EF3974 ADD X8, X21, X22, 0x2, LSL
	0x01EF3978 STR W0, [X8 + 0x20]
	0x01EF397C LDR X21, [X19]
	0x01EF3980 ADD X22, X22, 0x1
	0x01EF3984 CBNZ X21, 0x1EF3950
	0x01EF3988 BL 0x1C16F20
	0x01EF398C STR X31, [X19]
	0x01EF3990 LDP X20, X19, [X31 + 0x20]
	0x01EF3994 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, 32
	005 Move X19, X0
	006 Call BitStream.ReadUInt, X0, X1
	007 Move W20, W0
	008 Move W1, 32
	009 Move X0, X19
	010 Call BitStream.ReadUInt, X0, X1
	011 Move W8, W20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Move X0, X8
	016 Move X30, [X31+32]
	017 Return X0

Method: System.Void WriteFloat(System.Single value)

Disassembly:
	0x01EF3998 LDR X30, [X31], #0x30
	0x01EF399C RET
	0x01EF39A0 BL 0x1C16F28
	0x01EF39A4 SUB X31, X31, 0x30
	0x01EF39A8 STP X30, X21, [X31 + 0x10]
	0x01EF39AC STP X20, X19, [X31 + 0x20]
	0x01EF39B0 ADRP X21, 0x24E6000
	0x01EF39B4 LDRB W8, [X21 + 0x5E5]
	0x01EF39B8 MOV X20, X1
	0x01EF39BC MOV X19, X0
	0x01EF39C0 TBNZ X8, 0x0, 0x1EF39E4
	0x01EF39C4 ADRP X0, 0x220D000
	0x01EF39C8 LDR X0, [X0 + 0x6A0]
	0x01EF39CC BL 0x1C16CF4
	0x01EF39D0 ADRP X0, 0x2201000
	0x01EF39D4 LDR X0, [X0 + 0x470]
	0x01EF39D8 BL 0x1C16CF4
	0x01EF39DC MOVZ W8, 0x1
	0x01EF39E0 STRB W8, [X21 + 0x5E5]
	0x01EF39E4 STR X31, [X31 + 0x8]
	0x01EF39E8 LDRB W8, [X19 + 0x20]
	0x01EF39EC CBZ W8, 0x1EF3A24
	0x01EF39F0 ADRP X21, 0x220D000
	0x01EF39F4 LDR X20, [X20]
	0x01EF39F8 LDR X21, [X21 + 0x6A0]
	0x01EF39FC CBZ X20, 0x1EF3A34
	0x01EF3A00 STR X31, [X31]
	0x01EF3A04 ADRP X8, 0x2201000
	0x01EF3A08 LDR X8, [X8 + 0x470]
	0x01EF3A0C LDR W1, [X20 + 0x18]
	0x01EF3A10 ADD X0, X31, 0x0
	0x01EF3A14 LDR X2, [X8]
	0x01EF3A18 BL 0x24341FC
	0x01EF3A1C LDR X8, [X31]
	0x01EF3A20 B 0x1EF3A38
	0x01EF3A24 MOV X0, X19
	0x01EF3A28 BL 0x1EF309C
	0x01EF3A2C STR X0, [X20]
	0x01EF3A30 B 0x1EF3A5C
	0x01EF3A34 MOV X8, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+24]
	008 Move W1, [X19+16]
	009 Move W3, S0
	010 Move W2, 8
	011 Move X20, X3
	012 ShiftRight X20, 8
	013 And X20, X20, 0x7FFFFFFF
	014 Move X21, X3
	015 ShiftRight X21, 16
	016 And X21, X21, 0x7FFFFFFF
	017 Move X22, X3
	018 ShiftRight X22, 24
	019 And X22, X22, 0x7FFFFFFF
	020 Call BitStream.WriteByteAt, X0, X1, X2, X3
	021 Move W8, [X19+16]
	022 Move X0, [X19+24]
	023 Move W2, 8
	024 Move W3, W20
	025 Add W1, W8, 8
	026 Move [X19+16], W1
	027 Call BitStream.WriteByteAt, X0, X1, X2, X3
	028 Move W8, [X19+16]
	029 Move X0, [X19+24]
	030 Move W2, 8
	031 Move W3, W21
	032 Add W1, W8, 8
	033 Move [X19+16], W1
	034 Call BitStream.WriteByteAt, X0, X1, X2, X3
	035 Move W8, [X19+16]
	036 Move X0, [X19+24]
	037 Move W2, 8
	038 Move W3, W22
	039 Add W1, W8, 8
	040 Move [X19+16], W1
	041 Call BitStream.WriteByteAt, X0, X1, X2, X3
	042 Move W8, [X19+16]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Add W8, W8, 8
	046 Move [X19+16], W8
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+48]
	050 Return 

Method: System.Single ReadFloat()

Disassembly:
	0x01EF3A40 MOV W1, W31
	0x01EF3A44 STR X8, [X31 + 0x8]
	0x01EF3A48 BL 0x2434240
	0x01EF3A4C MOV W2, W0
	0x01EF3A50 MOV X0, X19
	0x01EF3A54 MOV X1, X20
	0x01EF3A58 BL 0x1EF2FD0
	0x01EF3A5C LDP X20, X19, [X31 + 0x20]
	0x01EF3A60 LDP X30, X21, [X31 + 0x10]
	0x01EF3A64 ADD X31, X31, 0x30
	0x01EF3A68 RET
	0x01EF3A6C STR X30, [X31 - 0x30]!
	0x01EF3A70 STP X22, X21, [X31 + 0x10]
	0x01EF3A74 STP X20, X19, [X31 + 0x20]
	0x01EF3A78 ADRP X22, 0x24E6000
	0x01EF3A7C LDRB W8, [X22 + 0x5E6]
	0x01EF3A80 MOV X20, X2
	0x01EF3A84 MOV X21, X1
	0x01EF3A88 MOV X19, X0
	0x01EF3A8C TBNZ X8, 0x0, 0x1EF3AA4
	0x01EF3A90 ADRP X0, 0x2200000
	0x01EF3A94 LDR X0, [X0 + 0x618]
	0x01EF3A98 BL 0x1C16CF4
	0x01EF3A9C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, 8
	005 Move X19, X0
	006 Call BitStream.InternalReadByte, X0, X1
	007 Move W20, W0
	008 Move W1, 8
	009 Move X0, X19
	010 Call BitStream.InternalReadByte, X0, X1
	011 And W8, W0, 255
	012 Move W1, 8
	013 Move X0, X19
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Call BitStream.InternalReadByte, X0, X1
	016 And W8, W0, 255
	017 Move W1, 8
	018 Move X0, X19
	019 NotImplemented "Instruction BFM not yet implemented."
	020 Call BitStream.InternalReadByte, X0, X1
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Move S0, W20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return V0

Method: System.Void WriteDouble(System.Double value)

Disassembly:
	0x01EF3AA0 STRB W8, [X22 + 0x5E6]
	0x01EF3AA4 LDRB W8, [X19 + 0x20]
	0x01EF3AA8 CBZ W8, 0x1EF3B08
	0x01EF3AAC LDR X22, [X21]
	0x01EF3AB0 LDR X0, [X19 + 0x18]
	0x01EF3AB4 LDR W1, [X19 + 0x10]
	0x01EF3AB8 MOVZ W2, 0x1
	0x01EF3ABC CMP X22, 0x0
	0x01EF3AC0 CSET W3, NE
	0x01EF3AC4 BL 0x1EF33E0
	0x01EF3AC8 LDR W8, [X19 + 0x10]
	0x01EF3ACC ADD W8, W8, 0x1
	0x01EF3AD0 STR W8, [X19 + 0x10]
	0x01EF3AD4 CBZ X22, 0x1EF3B98
	0x01EF3AD8 LDR W1, [X20]
	0x01EF3ADC MOVZ W2, 0x10
	0x01EF3AE0 MOV X0, X19
	0x01EF3AE4 BL 0x1EF2388
	0x01EF3AE8 LDR X1, [X21]
	0x01EF3AEC LDR W3, [X20]
	0x01EF3AF0 MOV X0, X19
	0x01EF3AF4 LDP X20, X19, [X31 + 0x20]
	0x01EF3AF8 LDP X22, X21, [X31 + 0x10]
	0x01EF3AFC MOV W2, W31
	0x01EF3B00 LDR X30, [X31], #0x30
	0x01EF3B04 B 0x1EF2CAC
	0x01EF3B08 MOVZ W1, 0x1
	0x01EF3B0C MOV X0, X19
	0x01EF3B10 BL 0x1EF2210
	0x01EF3B14 AND W8, W0, 0xFF
	0x01EF3B18 CMP W8, 0x1
	0x01EF3B1C B.NE 0x1EF3B98
	0x01EF3B20 MOVZ W1, 0x8
	0x01EF3B24 MOV X0, X19
	0x01EF3B28 BL 0x1EF2210
	0x01EF3B2C MOV W22, W0
	0x01EF3B30 MOVZ W1, 0x8
	0x01EF3B34 MOV X0, X19
	0x01EF3B38 BL 0x1EF2210
	0x01EF3B3C AND W3, W22, 0xFF
	0x01EF3B40 AND W8, W0, 0xFF
	0x01EF3B44 BFM W3, W8, 0x18, 0x7
	0x01EF3B48 STR W3, [X20]
	0x01EF3B4C LDR X1, [X21]
	0x01EF3B50 CBZ X1, 0x1EF3B60
	0x01EF3B54 LDR W8, [X1 + 0x18]
	0x01EF3B58 CMP W3, W8
	0x01EF3B5C B.LE 0x1EF3B80
	0x01EF3B60 ADRP X8, 0x2200000
	0x01EF3B64 LDR X8, [X8 + 0x618]
	0x01EF3B68 MOV W1, W3
	0x01EF3B6C LDR X0, [X8]
	0x01EF3B70 BL 0x1C16D6C
	0x01EF3B74 STR X0, [X21]
	0x01EF3B78 LDR W3, [X20]
	0x01EF3B7C MOV X1, X0
	0x01EF3B80 MOV X0, X19
	0x01EF3B84 LDP X20, X19, [X31 + 0x20]
	0x01EF3B88 LDP X22, X21, [X31 + 0x10]
	0x01EF3B8C MOV W2, W31
	0x01EF3B90 LDR X30, [X31], #0x30
	0x01EF3B94 B 0x1EF2E9C
	0x01EF3B98 LDP X20, X19, [X31 + 0x20]
	0x01EF3B9C LDP X22, X21, [X31 + 0x10]
	0x01EF3BA0 LDR X30, [X31], #0x30
	0x01EF3BA4 RET
	0x01EF3BA8 STR X30, [X31 - 0x30]!
	0x01EF3BAC STP X22, X21, [X31 + 0x10]
	0x01EF3BB0 STP X20, X19, [X31 + 0x20]
	0x01EF3BB4 LDRB W8, [X0 + 0x20]
	0x01EF3BB8 MOV W19, W2
	0x01EF3BBC MOV X21, X0
	0x01EF3BC0 MOV X20, X1
	0x01EF3BC4 CBZ W8, 0x1EF3BE0
	0x01EF3BC8 LDR X8, [X20]
	0x01EF3BCC CBZ X8, 0x1EF3C0C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, X0
	011 Move X0, [X0+24]
	012 Move W1, [X19+16]
	013 Move X3, D0
	014 Move W2, 8
	015 Move X23, X3
	016 ShiftRight X23, 8
	017 And X23, X23, 0x7FFFFFFF
	018 Move X24, X3
	019 ShiftRight X24, 16
	020 And X24, X24, 0x7FFFFFFF
	021 Move X25, X3
	022 ShiftRight X25, 24
	023 And X25, X25, 0x7FFFFFFF
	024 Move X26, X3
	025 ShiftRight X26, 32
	026 And X26, X26, 0x7FFFFFFF
	027 Move X22, X3
	028 ShiftRight X22, 40
	029 And X22, X22, 0x7FFFFFFF
	030 Move X21, X3
	031 ShiftRight X21, 48
	032 And X21, X21, 0x7FFFFFFF
	033 Move X20, X3
	034 ShiftRight X20, 56
	035 And X20, X20, 0x7FFFFFFF
	036 Call BitStream.WriteByteAt, X0, X1, X2, X3
	037 Move W8, [X19+16]
	038 Move X0, [X19+24]
	039 Move W2, 8
	040 Move W3, W23
	041 Add W1, W8, 8
	042 Move [X19+16], W1
	043 Call BitStream.WriteByteAt, X0, X1, X2, X3
	044 Move W8, [X19+16]
	045 Move X0, [X19+24]
	046 Move W2, 8
	047 Move W3, W24
	048 Add W1, W8, 8
	049 Move [X19+16], W1
	050 Call BitStream.WriteByteAt, X0, X1, X2, X3
	051 Move W8, [X19+16]
	052 Move X0, [X19+24]
	053 Move W2, 8
	054 Move W3, W25
	055 Add W1, W8, 8
	056 Move [X19+16], W1
	057 Call BitStream.WriteByteAt, X0, X1, X2, X3
	058 Move W8, [X19+16]
	059 Move X0, [X19+24]
	060 Move W2, 8
	061 Move W3, W26
	062 Add W1, W8, 8
	063 Move [X19+16], W1
	064 Call BitStream.WriteByteAt, X0, X1, X2, X3
	065 Move W8, [X19+16]
	066 Move X0, [X19+24]
	067 Move W2, 8
	068 Move W3, W22
	069 Add W1, W8, 8
	070 Move [X19+16], W1
	071 Call BitStream.WriteByteAt, X0, X1, X2, X3
	072 Move W8, [X19+16]
	073 Move X0, [X19+24]
	074 Move W2, 8
	075 Move W3, W21
	076 Add W1, W8, 8
	077 Move [X19+16], W1
	078 Call BitStream.WriteByteAt, X0, X1, X2, X3
	079 Move W8, [X19+16]
	080 Move X0, [X19+24]
	081 Move W2, 8
	082 Move W3, W20
	083 Add W1, W8, 8
	084 Move [X19+16], W1
	085 Call BitStream.WriteByteAt, X0, X1, X2, X3
	086 Move W8, [X19+16]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X24, [X31+32]
	090 Move X23, [X31+40]
	091 Move X26, [X31+16]
	092 Move X25, [X31+24]
	093 Add W8, W8, 8
	094 Move [X19+16], W8
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X30, [X31+80]
	098 Return 

Method: System.Double ReadDouble()

Disassembly:
	0x01EF3BD8 CSET W22, NE
	0x01EF3BDC B 0x1EF3C10
	0x01EF3BE0 MOVZ W1, 0x1
	0x01EF3BE4 MOV X0, X21
	0x01EF3BE8 BL 0x1EF2210
	0x01EF3BEC AND W8, W0, 0xFF
	0x01EF3BF0 CMP W8, 0x1
	0x01EF3BF4 B.NE 0x1EF3C54
	0x01EF3BF8 MOV X0, X21
	0x01EF3BFC MOV W1, W19
	0x01EF3C00 BL 0x1EF2E14
	0x01EF3C04 STR X0, [X20]
	0x01EF3C08 B 0x1EF3C58
	0x01EF3C0C MOV W22, W31
	0x01EF3C10 LDR X0, [X21 + 0x18]
	0x01EF3C14 LDR W1, [X21 + 0x10]
	0x01EF3C18 MOVZ W2, 0x1
	0x01EF3C1C MOV W3, W22
	0x01EF3C20 BL 0x1EF33E0
	0x01EF3C24 LDR W8, [X21 + 0x10]
	0x01EF3C28 ADD W8, W8, 0x1
	0x01EF3C2C STR W8, [X21 + 0x10]
	0x01EF3C30 CBZ W22, 0x1EF3C58
	0x01EF3C34 LDR X1, [X20]
	0x01EF3C38 MOV X0, X21
	0x01EF3C3C MOV W3, W19
	0x01EF3C40 LDP X20, X19, [X31 + 0x20]
	0x01EF3C44 LDP X22, X21, [X31 + 0x10]
	0x01EF3C48 MOV W2, W31
	0x01EF3C4C LDR X30, [X31], #0x30
	0x01EF3C50 B 0x1EF2CAC
	0x01EF3C54 STR X31, [X20]
	0x01EF3C58 LDP X20, X19, [X31 + 0x20]
	0x01EF3C5C LDP X22, X21, [X31 + 0x10]
	0x01EF3C60 LDR X30, [X31], #0x30
	0x01EF3C64 RET
	0x01EF3C68 STP X30, X23, [X31 - 0x30]!
	0x01EF3C6C STP X22, X21, [X31 + 0x10]
	0x01EF3C70 STP X20, X19, [X31 + 0x20]
	0x01EF3C74 ADRP X23, 0x24E6000
	0x01EF3C78 LDRB W8, [X23 + 0x5E7]
	0x01EF3C7C MOV W19, W3
	0x01EF3C80 MOV X22, X2
	0x01EF3C84 MOV X21, X1
	0x01EF3C88 MOV X20, X0
	0x01EF3C8C TBNZ X8, 0x0, 0x1EF3CA4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W1, 8
	007 Move X19, X0
	008 Call BitStream.InternalReadByte, X0, X1
	009 And X20, X0, 255
	010 Move W1, 8
	011 Move X0, X19
	012 Call BitStream.InternalReadByte, X0, X1
	013 And X8, X0, 255
	014 Move W1, 8
	015 Move X0, X19
	016 NotImplemented "Instruction BFM not yet implemented."
	017 Call BitStream.InternalReadByte, X0, X1
	018 And X8, X0, 255
	019 Move W1, 8
	020 Move X0, X19
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Call BitStream.InternalReadByte, X0, X1
	023 And X8, X0, 255
	024 Move W1, 8
	025 Move X0, X19
	026 NotImplemented "Instruction BFM not yet implemented."
	027 Call BitStream.InternalReadByte, X0, X1
	028 And W21, W0, 255
	029 Move W1, 8
	030 Move X0, X19
	031 Call BitStream.InternalReadByte, X0, X1
	032 And W22, W0, 255
	033 Move W1, 8
	034 Move X0, X19
	035 NotImplemented "Instruction BFM not yet implemented."
	036 Call BitStream.InternalReadByte, X0, X1
	037 And W21, W0, 255
	038 Move W1, 8
	039 Move X0, X19
	040 Call BitStream.InternalReadByte, X0, X1
	041 NotImplemented "Instruction BFM not yet implemented."
	042 Or X8, X20, X21
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Or X8, X8, X0
	048 Move D0, X8
	049 Move X30, [X31+48]
	050 Return V0

Method: System.Void WriteByteArray(System.Byte[] from)

Disassembly:
	0x01EF3C90 ADRP X0, 0x2200000
	0x01EF3C94 LDR X0, [X0 + 0x618]
	0x01EF3C98 BL 0x1C16CF4
	0x01EF3C9C MOVZ W8, 0x1
	0x01EF3CA0 STRB W8, [X23 + 0x5E7]
	0x01EF3CA4 STR W19, [X22]
	0x01EF3CA8 LDRB W8, [X20 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move W3, [X1+24]
	005 Move W2, W31
	006 Move X30, [X31+16]
	007 Call 0x1C17F20

Method: System.Void WriteByteArray(System.Byte[] from, System.Int32 count)

Disassembly:
	0x01EF3E08 BL 0x1EF33E0
	0x01EF3E0C LDR W8, [X19 + 0x10]
	0x01EF3E10 ADD W8, W8, 0x8

ISIL:
	001 Move W3, W2
	002 Move W2, W31
	003 Call BitStream.WriteByteArray, X0, X1, X2, X3
	004 Return 

Method: System.Void WriteByteArray(System.Byte[] from, System.Int32 offset, System.Int32 count)

Disassembly:
	0x01EF3CAC CBZ W8, 0x1EF3CC8
	0x01EF3CB0 LDR X8, [X21]
	0x01EF3CB4 CBZ X8, 0x1EF3D2C
	0x01EF3CB8 LDR W8, [X8 + 0x18]
	0x01EF3CBC CMP W8, 0x0
	0x01EF3CC0 CSET W22, NE
	0x01EF3CC4 B 0x1EF3D30
	0x01EF3CC8 MOVZ W1, 0x1
	0x01EF3CCC MOV X0, X20
	0x01EF3CD0 BL 0x1EF2210
	0x01EF3CD4 AND W8, W0, 0xFF
	0x01EF3CD8 CMP W8, 0x1
	0x01EF3CDC B.NE 0x1EF3D74
	0x01EF3CE0 LDR X1, [X21]
	0x01EF3CE4 CBZ X1, 0x1EF3CF4
	0x01EF3CE8 LDR W8, [X1 + 0x18]
	0x01EF3CEC CMP W8, W19
	0x01EF3CF0 B.GE 0x1EF3D10
	0x01EF3CF4 ADRP X8, 0x2200000
	0x01EF3CF8 LDR X8, [X8 + 0x618]
	0x01EF3CFC MOV W1, W19
	0x01EF3D00 LDR X0, [X8]
	0x01EF3D04 BL 0x1C16D6C
	0x01EF3D08 MOV X1, X0
	0x01EF3D0C STR X0, [X21]
	0x01EF3D10 MOV X0, X20
	0x01EF3D14 MOV W3, W19
	0x01EF3D18 LDP X20, X19, [X31 + 0x20]
	0x01EF3D1C LDP X22, X21, [X31 + 0x10]
	0x01EF3D20 MOV W2, W31
	0x01EF3D24 LDP X30, X23, [X31], #0x30
	0x01EF3D28 B 0x1EF2E9C
	0x01EF3D2C MOV W22, W31
	0x01EF3D30 LDR X0, [X20 + 0x18]
	0x01EF3D34 LDR W1, [X20 + 0x10]
	0x01EF3D38 MOVZ W2, 0x1
	0x01EF3D3C MOV W3, W22
	0x01EF3D40 BL 0x1EF33E0
	0x01EF3D44 LDR W8, [X20 + 0x10]
	0x01EF3D48 ADD W8, W8, 0x1
	0x01EF3D4C STR W8, [X20 + 0x10]
	0x01EF3D50 CBZ W22, 0x1EF3D78
	0x01EF3D54 LDR X1, [X21]
	0x01EF3D58 MOV X0, X20
	0x01EF3D5C MOV W3, W19
	0x01EF3D60 LDP X20, X19, [X31 + 0x20]
	0x01EF3D64 LDP X22, X21, [X31 + 0x10]
	0x01EF3D68 MOV W2, W31
	0x01EF3D6C LDP X30, X23, [X31], #0x30
	0x01EF3D70 B 0x1EF2CAC
	0x01EF3D74 STR X31, [X21]
	0x01EF3D78 LDP X20, X19, [X31 + 0x20]
	0x01EF3D7C LDP X22, X21, [X31 + 0x10]
	0x01EF3D80 LDP X30, X23, [X31], #0x30
	0x01EF3D84 RET
	0x01EF3D88 STR X30, [X31 - 0x20]!
	0x01EF3D8C STP X20, X19, [X31 + 0x10]
	0x01EF3D90 LDRB W8, [X0 + 0x20]
	0x01EF3D94 MOV X19, X0
	0x01EF3D98 MOV X20, X1
	0x01EF3D9C CBZ W8, 0x1EF3DC4
	0x01EF3DA0 LDR X0, [X19 + 0x18]
	0x01EF3DA4 LDR W1, [X19 + 0x10]
	0x01EF3DA8 LDRB W3, [X20]
	0x01EF3DAC MOVZ W2, 0x8
	0x01EF3DB0 BL 0x1EF33E0
	0x01EF3DB4 LDR W8, [X19 + 0x10]
	0x01EF3DB8 ADD W8, W8, 0x8
	0x01EF3DBC STR W8, [X19 + 0x10]
	0x01EF3DC0 B 0x1EF3DD4
	0x01EF3DC4 MOVZ W1, 0x8
	0x01EF3DC8 MOV X0, X19
	0x01EF3DCC BL 0x1EF2210
	0x01EF3DD0 STRB W0, [X20]
	0x01EF3DD4 LDP X20, X19, [X31 + 0x10]
	0x01EF3DD8 LDR X30, [X31], #0x20
	0x01EF3DDC RET
	0x01EF3DE0 STR X30, [X31 - 0x20]!
	0x01EF3DE4 STP X20, X19, [X31 + 0x10]
	0x01EF3DE8 LDRB W8, [X0 + 0x20]
	0x01EF3DEC MOV X19, X0
	0x01EF3DF0 MOV X20, X1
	0x01EF3DF4 CBZ W8, 0x1EF3E1C
	0x01EF3DF8 LDR X0, [X19 + 0x18]
	0x01EF3DFC LDR W1, [X19 + 0x10]
	0x01EF3E00 LDRB W3, [X20]
	0x01EF3E04 MOVZ W2, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+16]
	005 Move W19, W3
	006 Move X20, X0
	007 Add W9, W8, 7
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 And W9, W9, 0xFFFFFFF8
	011 Subtract W10, W8, W9
	012 NotImplemented "Instruction SBFM not yet implemented."
	013 Compare W10, 0
	014 JumpIfEqual {72}
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Compare X1, 0
	017 JumpIfEqual {87}
	018 Move W9, 8
	019 Move W11, 255
	020 Subtract W9, W9, W10
	021 And W8, W10, 31
	022 NotImplemented "Instruction LSLV not yet implemented."
	023 NotImplemented "Instruction LSRV not yet implemented."
	024 Move W12, W19
	025 Move W13, [X1+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X13, [X20+24]
	028 Compare X13, 0
	029 JumpIfEqual {87}
	030 Move W14, [X13+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X14, W3
	033 Add X15, X13, X14
	034 Move W16, [X15+32]
	035 Add X13, X1, W2
	036 Move W13, [X13+32]
	037 And W16, W16, W11
	038 Move [X15+32], W16
	039 Move X15, [X20+24]
	040 Compare X15, 0
	041 JumpIfEqual {87}
	042 Move W16, [X15+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X14, X15, X14
	045 Move W15, [X14+32]
	046 NotImplemented "Instruction LSLV not yet implemented."
	047 Or W15, W15, W16
	048 Move [X14+32], W15
	049 Move X15, [X20+24]
	050 Compare X15, 0
	051 JumpIfEqual {87}
	052 Move W14, [X15+24]
	053 Add W3, W3, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X14, W3
	056 Add X15, X15, X14
	057 Move W16, [X15+32]
	058 And W16, W16, W10
	059 Move [X15+32], W16
	060 Move X15, [X20+24]
	061 Compare X15, 0
	062 JumpIfEqual {87}
	063 Move W16, [X15+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X14, X15, X14
	066 Move W15, [X14+32]
	067 NotImplemented "Instruction LSRV not yet implemented."
	068 Subtract X12, X12, 1
	069 Add W2, W2, 1
	070 Or W13, W15, W13
	071 Move [X14+32], W13
	072 Move X8, [X20+24]
	073 Move X0, X1
	074 Move W1, W2
	075 Move W4, W19
	076 Move X2, X8
	077 Move X5, X31
	078 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	079 Move W8, [X20+16]
	080 Add W8, W8, W19
	081 Move [X20+16], W8
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Return 
	086 Call 0x1C17F28
	087 Call 0x1C17F20

Method: System.Byte[] ReadByteArray(System.Int32 size)

Disassembly:
	0x01EF3E14 STR W8, [X19 + 0x10]
	0x01EF3E18 B 0x1EF3E2C
	0x01EF3E1C MOVZ W1, 0x8
	0x01EF3E20 MOV X0, X19
	0x01EF3E24 BL 0x1EF2210
	0x01EF3E28 STRB W0, [X20]
	0x01EF3E2C LDP X20, X19, [X31 + 0x10]
	0x01EF3E30 LDR X30, [X31], #0x20
	0x01EF3E34 RET
	0x01EF3E38 STP X30, X21, [X31 - 0x20]!
	0x01EF3E3C STP X20, X19, [X31 + 0x10]
	0x01EF3E40 LDRB W8, [X0 + 0x20]
	0x01EF3E44 MOV X19, X0
	0x01EF3E48 MOV X20, X1
	0x01EF3E4C CBZ W8, 0x1EF3E68
	0x01EF3E50 LDRH W1, [X20]
	0x01EF3E54 MOV X0, X19
	0x01EF3E58 LDP X20, X19, [X31 + 0x10]
	0x01EF3E5C MOVZ W2, 0x10
	0x01EF3E60 LDP X30, X21, [X31], #0x20
	0x01EF3E64 B 0x1EF2388
	0x01EF3E68 MOVZ W1, 0x8
	0x01EF3E6C MOV X0, X19
	0x01EF3E70 BL 0x1EF2210
	0x01EF3E74 MOV W21, W0
	0x01EF3E78 MOVZ W1, 0x8
	0x01EF3E7C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24E7000
	007 Move X22, 0x2201000
	008 Move W8, [X21+1503]
	009 Move X22, [X22+1560]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2201000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1503], W8
	021 Move X0, [X22]
	022 Move W1, W20
	023 Call 0x1C17D6C
	024 Move X20, X0
	025 Move X0, X19
	026 Move X1, X20
	027 Call BitStream.ReadByteArray, X0, X1
	028 Move X0, X20
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return X0

Method: System.Void ReadByteArray(System.Byte[] to)

Disassembly:
	0x01EF3E80 BL 0x1EF2210
	0x01EF3E84 BFM W21, W0, 0x18, 0x17
	0x01EF3E88 STRH W21, [X20]
	0x01EF3E8C LDP X20, X19, [X31 + 0x10]
	0x01EF3E90 LDP X30, X21, [X31], #0x20
	0x01EF3E94 RET
	0x01EF3E98 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move W3, [X1+24]
	005 Move W2, W31
	006 Move X30, [X31+16]
	007 Call 0x1C17F20

Method: System.Void ReadByteArray(System.Byte[] to, System.Int32 count)

Disassembly:
	0x01EF3FA0 MOVZ W1, 0x20
	0x01EF3FA4 MOV X0, X19
	0x01EF3FA8 BL 0x1EF2690

ISIL:
	001 Move W3, W2
	002 Move W2, W31
	003 Call BitStream.ReadByteArray, X0, X1, X2, X3
	004 Return 

Method: System.Void ReadByteArray(System.Byte[] to, System.Int32 offset, System.Int32 count)

Disassembly:
	0x01EF3E9C STP X20, X19, [X31 + 0x10]
	0x01EF3EA0 LDRB W8, [X0 + 0x20]
	0x01EF3EA4 MOV X19, X0
	0x01EF3EA8 MOV X20, X1
	0x01EF3EAC CBZ W8, 0x1EF3EC8
	0x01EF3EB0 LDRH W1, [X20]
	0x01EF3EB4 MOV X0, X19
	0x01EF3EB8 LDP X20, X19, [X31 + 0x10]
	0x01EF3EBC MOVZ W2, 0x10
	0x01EF3EC0 LDP X30, X21, [X31], #0x20
	0x01EF3EC4 B 0x1EF2388
	0x01EF3EC8 MOVZ W1, 0x8
	0x01EF3ECC MOV X0, X19
	0x01EF3ED0 BL 0x1EF2210
	0x01EF3ED4 MOV W21, W0
	0x01EF3ED8 MOVZ W1, 0x8
	0x01EF3EDC MOV X0, X19
	0x01EF3EE0 BL 0x1EF2210
	0x01EF3EE4 BFM W21, W0, 0x18, 0x17
	0x01EF3EE8 STRH W21, [X20]
	0x01EF3EEC LDP X20, X19, [X31 + 0x10]
	0x01EF3EF0 LDP X30, X21, [X31], #0x20
	0x01EF3EF4 RET
	0x01EF3EF8 STP X30, X19, [X31 - 0x10]!
	0x01EF3EFC LDRB W8, [X0 + 0x20]
	0x01EF3F00 MOV X19, X1
	0x01EF3F04 CBZ W8, 0x1EF3F18
	0x01EF3F08 LDR W1, [X19]
	0x01EF3F0C MOVZ W2, 0x20
	0x01EF3F10 LDP X30, X19, [X31], #0x10
	0x01EF3F14 B 0x1EF2528
	0x01EF3F18 MOVZ W1, 0x20
	0x01EF3F1C BL 0x1EF2690
	0x01EF3F20 STR W0, [X19]
	0x01EF3F24 LDP X30, X19, [X31], #0x10
	0x01EF3F28 RET
	0x01EF3F2C STP X30, X19, [X31 - 0x10]!
	0x01EF3F30 LDRB W8, [X0 + 0x20]
	0x01EF3F34 MOV X19, X1
	0x01EF3F38 CBZ W8, 0x1EF3F4C
	0x01EF3F3C LDR W1, [X19]
	0x01EF3F40 MOVZ W2, 0x20
	0x01EF3F44 LDP X30, X19, [X31], #0x10
	0x01EF3F48 B 0x1EF2528
	0x01EF3F4C MOVZ W1, 0x20
	0x01EF3F50 BL 0x1EF2690
	0x01EF3F54 STR W0, [X19]
	0x01EF3F58 LDP X30, X19, [X31], #0x10
	0x01EF3F5C RET
	0x01EF3F60 STP X30, X21, [X31 - 0x20]!
	0x01EF3F64 STP X20, X19, [X31 + 0x10]
	0x01EF3F68 LDRB W8, [X0 + 0x20]
	0x01EF3F6C MOV X19, X0
	0x01EF3F70 MOV X20, X1
	0x01EF3F74 CBZ W8, 0x1EF3FA0
	0x01EF3F78 LDP W1, W21, [X20]
	0x01EF3F7C MOVZ W2, 0x20
	0x01EF3F80 MOV X0, X19
	0x01EF3F84 BL 0x1EF2528
	0x01EF3F88 MOV X0, X19
	0x01EF3F8C LDP X20, X19, [X31 + 0x10]
	0x01EF3F90 MOVZ W2, 0x20
	0x01EF3F94 MOV W1, W21
	0x01EF3F98 LDP X30, X21, [X31], #0x20
	0x01EF3F9C B 0x1EF2528

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+16]
	005 Move W19, W3
	006 Move W3, W2
	007 Move X2, X1
	008 Add W9, W8, 7
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 And W9, W9, 0xFFFFFFF8
	012 Move X20, X0
	013 Subtract W11, W8, W9
	014 NotImplemented "Instruction SBFM not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W12, 8
	017 And W8, W11, 31
	018 Move W13, 255
	019 Move W9, W3
	020 Subtract W11, W12, W11
	021 Move W10, W19
	022 Move X12, X9
	023 ShiftRight X12, 32
	024 And X12, X12, 0x7FFFFFFF
	025 NotImplemented "Instruction LSRV not yet implemented."
	026 Move X14, 1
	027 Move X16, [X20+24]
	028 Compare X16, 0
	029 JumpIfEqual {64}
	030 Move W17, [X16+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add W15, W1, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Compare X2, 0
	035 JumpIfEqual {64}
	036 Move W17, [X2+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X17, X16, W1
	039 Add X16, X16, W15
	040 Move W16, [X16+32]
	041 Move W17, [X17+32]
	042 Add X0, X2, X12
	043 Add X12, X12, X14
	044 And W16, W13, W16
	045 NotImplemented "Instruction LSRV not yet implemented."
	046 NotImplemented "Instruction LSLV not yet implemented."
	047 Subtract X10, X10, 1
	048 Or W16, W16, W17
	049 Add X9, X9, 1
	050 Move W1, W15
	051 Move [X0+32], W16
	052 Move X0, [X20+24]
	053 Move W4, W19
	054 Move X5, X31
	055 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	056 Move W8, [X20+16]
	057 Add W8, W8, W19
	058 Move [X20+16], W8
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Return 
	063 Call 0x1C17F28
	064 Call 0x1C17F20

Method: System.Void WriteByteArrayLengthPrefixed(System.Byte[] array)

Disassembly:
	0x01EF3FAC MOV W21, W0
	0x01EF3FB0 MOVZ W1, 0x20
	0x01EF3FB4 MOV X0, X19
	0x01EF3FB8 BL 0x1EF2690
	0x01EF3FBC MOV W8, W21
	0x01EF3FC0 BFM X8, X0, 0x20, 0x1F
	0x01EF3FC4 STR X8, [X20]
	0x01EF3FC8 LDP X20, X19, [X31 + 0x10]
	0x01EF3FCC LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {8}
	004 Move W2, [X1+24]
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X30, [X31+16]
	008 Move W2, W31
	009 Compare X0, 0
	010 JumpIfNotEqual {7}
	011 Call 0x1C17F20

Method: System.Void WriteByteArrayLengthPrefixed(System.Byte[] array, System.Int32 maxLength)

Disassembly:
	0x01EF3FD0 RET
	0x01EF3FD4 STP X30, X21, [X31 - 0x20]!
	0x01EF3FD8 STP X20, X19, [X31 + 0x10]
	0x01EF3FDC LDRB W8, [X0 + 0x20]
	0x01EF3FE0 MOV X19, X0
	0x01EF3FE4 MOV X20, X1
	0x01EF3FE8 CBZ W8, 0x1EF4014
	0x01EF3FEC LDP W1, W21, [X20]
	0x01EF3FF0 MOVZ W2, 0x20
	0x01EF3FF4 MOV X0, X19
	0x01EF3FF8 BL 0x1EF2528
	0x01EF3FFC MOV X0, X19
	0x01EF4000 LDP X20, X19, [X31 + 0x10]
	0x01EF4004 MOVZ W2, 0x20
	0x01EF4008 MOV W1, W21
	0x01EF400C LDP X30, X21, [X31], #0x20
	0x01EF4010 B 0x1EF2528
	0x01EF4014 MOVZ W1, 0x20
	0x01EF4018 MOV X0, X19
	0x01EF401C BL 0x1EF2690
	0x01EF4020 MOV W21, W0
	0x01EF4024 MOVZ W1, 0x20
	0x01EF4028 MOV X0, X19
	0x01EF402C BL 0x1EF2690
	0x01EF4030 MOV W8, W21
	0x01EF4034 BFM X8, X0, 0x20, 0x1F
	0x01EF4038 STR X8, [X20]
	0x01EF403C LDP X20, X19, [X31 + 0x10]
	0x01EF4040 LDP X30, X21, [X31], #0x20
	0x01EF4044 RET
	0x01EF4048 STP X30, X19, [X31 - 0x10]!
	0x01EF404C LDRB W8, [X0 + 0x20]
	0x01EF4050 MOV X19, X1
	0x01EF4054 CBZ W8, 0x1EF4064
	0x01EF4058 LDR W1, [X19]
	0x01EF405C LDP X30, X19, [X31], #0x10
	0x01EF4060 B 0x1EF2528
	0x01EF4064 MOV W1, W2
	0x01EF4068 BL 0x1EF2690
	0x01EF406C STR W0, [X19]
	0x01EF4070 LDP X30, X19, [X31], #0x10
	0x01EF4074 RET
	0x01EF4078 STP X30, X19, [X31 - 0x10]!
	0x01EF407C LDRB W8, [X0 + 0x20]
	0x01EF4080 MOV X19, X1
	0x01EF4084 CBZ W8, 0x1EF4094
	0x01EF4088 LDR W1, [X19]
	0x01EF408C LDP X30, X19, [X31], #0x10
	0x01EF4090 B 0x1EF2528
	0x01EF4094 MOV W1, W2
	0x01EF4098 BL 0x1EF2690

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x24E7000
	007 Move W8, [X22+1504]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2201000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1504], W8
	020 Move X0, [X20+24]
	021 Move W1, [X20+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move W2, 1
	025 Call BitStream.WriteByteAt, X0, X1, X2, X3
	026 Move W8, [X20+16]
	027 Add W8, W8, 1
	028 Move [X20+16], W8
	029 Compare X19, 0
	030 JumpIfEqual {58}
	031 Move X8, 0x2200000
	032 Move X8, [X8+1448]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, [X19+24]
	039 Move W1, W21
	040 Move X2, X31
	041 Call Math.Min, X0, X1
	042 Move W21, W0
	043 Move W2, 16
	044 Move X0, X20
	045 Move W1, W21
	046 Call BitStream.WriteUShort, X0, X1, X2
	047 Move X0, X20
	048 Move X1, X19
	049 Move W3, W21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W2, W31
	055 Move X30, [X31+48]
	056 Call BitStream.WriteByteArray, X0, X1, X2, X3
	057 Return 
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return 

Method: System.Byte[] ReadByteArrayLengthPrefixed()

Disassembly:
	0x01EF409C STR W0, [X19]
	0x01EF40A0 LDP X30, X19, [X31], #0x10
	0x01EF40A4 RET
	0x01EF40A8 STP X30, X21, [X31 - 0x20]!
	0x01EF40AC STP X20, X19, [X31 + 0x10]
	0x01EF40B0 LDRB W8, [X0 + 0x20]
	0x01EF40B4 MOV X19, X0
	0x01EF40B8 MOV X20, X1
	0x01EF40BC CMP W2, 0x1
	0x01EF40C0 CBZ W8, 0x1EF40F8
	0x01EF40C4 B.LT 0x1EF4118
	0x01EF40C8 LDR W1, [X19 + 0x10]
	0x01EF40CC MOV W21, W2
	0x01EF40D0 LDR X0, [X19 + 0x18]
	0x01EF40D4 LDRB W3, [X20], #0x1
	0x01EF40D8 MOVZ W2, 0x8
	0x01EF40DC BL 0x1EF33E0
	0x01EF40E0 LDR W8, [X19 + 0x10]
	0x01EF40E4 SUBS X21, X21, 0x1
	0x01EF40E8 ADD W1, W8, 0x8
	0x01EF40EC STR W1, [X19 + 0x10]
	0x01EF40F0 B.NE 0x1EF40D0
	0x01EF40F4 B 0x1EF4118
	0x01EF40F8 B.LT 0x1EF4118
	0x01EF40FC MOV W21, W2
	0x01EF4100 MOVZ W1, 0x8
	0x01EF4104 MOV X0, X19
	0x01EF4108 BL 0x1EF2210
	0x01EF410C SUBS X21, X21, 0x1
	0x01EF4110 STRB W0, [X20], #0x1
	0x01EF4114 B.NE 0x1EF4100
	0x01EF4118 LDP X20, X19, [X31 + 0x10]
	0x01EF411C LDP X30, X21, [X31], #0x20
	0x01EF4120 RET
	0x01EF4124 STP X30, X21, [X31 - 0x20]!
	0x01EF4128 STP X20, X19, [X31 + 0x10]
	0x01EF412C LDRB W8, [X0 + 0x20]
	0x01EF4130 MOV X19, X0
	0x01EF4134 MOV X20, X1
	0x01EF4138 CMP W2, 0x1
	0x01EF413C CBZ W8, 0x1EF4174
	0x01EF4140 B.LT 0x1EF4194
	0x01EF4144 LDR W1, [X19 + 0x10]
	0x01EF4148 MOV W21, W2
	0x01EF414C LDR X0, [X19 + 0x18]
	0x01EF4150 LDRB W3, [X20], #0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x24E6000
	005 Move W8, [X20+1505]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2200000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1505], W8
	016 Move W1, 1
	017 Move X0, X19
	018 Call BitStream.InternalReadByte, X0, X1
	019 And W8, W0, 255
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W1, 8
	022 Move X0, X19
	023 Call BitStream.InternalReadByte, X0, X1
	024 Move W20, W0
	025 Move W1, 8
	026 Move X0, X19
	027 Call BitStream.InternalReadByte, X0, X1
	028 Move X8, 0x2200000
	029 Move X8, [X8+1560]
	030 And W1, W20, 255
	031 And W9, W0, 255
	032 NotImplemented "Instruction BFM not yet implemented."
	033 Move X8, [X8]
	034 Move X0, X8
	035 Call 0x1C17D6C
	036 Compare X0, 0
	037 JumpIfEqual {50}
	038 Move W3, [X0+24]
	039 Move X20, X0
	040 Move X0, X19
	041 Move X1, X20
	042 Move W2, W31
	043 Call BitStream.ReadByteArray, X0, X1, X2, X3
	044 Move X20, X31
	045 Move X0, X20
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Void WriteString(System.String value, System.Text.Encoding encoding)

Disassembly:
	0x01EF4154 MOVZ W2, 0x8
	0x01EF4158 BL 0x1EF33E0
	0x01EF415C LDR W8, [X19 + 0x10]
	0x01EF4160 SUBS X21, X21, 0x1
	0x01EF4164 ADD W1, W8, 0x8
	0x01EF4168 STR W1, [X19 + 0x10]
	0x01EF416C B.NE 0x1EF414C
	0x01EF4170 B 0x1EF4194
	0x01EF4174 B.LT 0x1EF4194
	0x01EF4178 MOV W21, W2
	0x01EF417C MOVZ W1, 0x8
	0x01EF4180 MOV X0, X19
	0x01EF4184 BL 0x1EF2210
	0x01EF4188 SUBS X21, X21, 0x1
	0x01EF418C STRB W0, [X20], #0x1
	0x01EF4190 B.NE 0x1EF417C
	0x01EF4194 LDP X20, X19, [X31 + 0x10]
	0x01EF4198 LDP X30, X21, [X31], #0x20
	0x01EF419C RET
	0x01EF41A0 STR X30, [X31 - 0x30]!
	0x01EF41A4 STP X22, X21, [X31 + 0x10]
	0x01EF41A8 STP X20, X19, [X31 + 0x20]
	0x01EF41AC LDRB W8, [X0 + 0x20]
	0x01EF41B0 MOV X19, X0
	0x01EF41B4 MOV X20, X1
	0x01EF41B8 CMP W2, 0x1
	0x01EF41BC CBZ W8, 0x1EF41E4
	0x01EF41C0 B.LT 0x1EF4218
	0x01EF41C4 MOV W21, W2
	0x01EF41C8 LDRH W1, [X20], #0x2
	0x01EF41CC MOVZ W2, 0x10
	0x01EF41D0 MOV X0, X19
	0x01EF41D4 BL 0x1EF2388
	0x01EF41D8 SUBS X21, X21, 0x1
	0x01EF41DC B.NE 0x1EF41C8
	0x01EF41E0 B 0x1EF4218
	0x01EF41E4 B.LT 0x1EF4218
	0x01EF41E8 MOV W22, W2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move W8, [X19+16]
	007 Move X0, [X0+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X20, X2
	010 Move X21, X1
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move W2, 1
	013 Move W1, W8
	014 Call BitStream.WriteByteAt, X0, X1, X2, X3
	015 Move W8, [X19+16]
	016 Add W8, W8, 1
	017 Move [X19+16], W8
	018 Compare X21, 0
	019 JumpIfEqual {43}
	020 Compare X20, 0
	021 JumpIfEqual {48}
	022 Move X8, [X20]
	023 Move X0, X20
	024 Move X1, X21
	025 Move X9, [X8+616]
	026 Move X2, [X8+624]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {48}
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X20, X0
	032 Move W2, 16
	033 Move X0, X19
	034 Call BitStream.WriteUShort, X0, X1, X2
	035 Move X0, X19
	036 Move X1, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call BitStream.WriteByteArray, X0, X1
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void WriteString(System.String value)

Disassembly:
	0x01EF41EC MOVZ W1, 0x8
	0x01EF41F0 MOV X0, X19
	0x01EF41F4 BL 0x1EF2210
	0x01EF41F8 MOV W21, W0
	0x01EF41FC MOVZ W1, 0x8
	0x01EF4200 MOV X0, X19
	0x01EF4204 BL 0x1EF2210
	0x01EF4208 BFM W21, W0, 0x18, 0x17
	0x01EF420C SUBS X22, X22, 0x1
	0x01EF4210 STRH W21, [X20], #0x2
	0x01EF4214 B.NE 0x1EF41EC
	0x01EF4218 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, X31
	006 Move X19, X1
	007 Call Encoding.get_UTF8
	008 Move X2, X0
	009 Move X0, X20
	010 Move X1, X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Call BitStream.WriteString, X0, X1, X2
	015 Return 

Method: System.String ReadString(System.Text.Encoding encoding)

Disassembly:
	0x01EF421C LDP X22, X21, [X31 + 0x10]
	0x01EF4220 LDR X30, [X31], #0x30
	0x01EF4224 RET
	0x01EF4228 STR X30, [X31 - 0x30]!
	0x01EF422C STP X22, X21, [X31 + 0x10]
	0x01EF4230 STP X20, X19, [X31 + 0x20]
	0x01EF4234 LDRB W8, [X0 + 0x20]
	0x01EF4238 MOV X19, X0
	0x01EF423C MOV X20, X1
	0x01EF4240 CMP W2, 0x1
	0x01EF4244 CBZ W8, 0x1EF426C
	0x01EF4248 B.LT 0x1EF42A0
	0x01EF424C MOV W21, W2
	0x01EF4250 LDRH W1, [X20], #0x2
	0x01EF4254 MOVZ W2, 0x10
	0x01EF4258 MOV X0, X19
	0x01EF425C BL 0x1EF2388
	0x01EF4260 SUBS X21, X21, 0x1
	0x01EF4264 B.NE 0x1EF4250
	0x01EF4268 B 0x1EF42A0
	0x01EF426C B.LT 0x1EF42A0
	0x01EF4270 MOV W22, W2
	0x01EF4274 MOVZ W1, 0x8
	0x01EF4278 MOV X0, X19
	0x01EF427C BL 0x1EF2210
	0x01EF4280 MOV W21, W0
	0x01EF4284 MOVZ W1, 0x8
	0x01EF4288 MOV X0, X19
	0x01EF428C BL 0x1EF2210
	0x01EF4290 BFM W21, W0, 0x18, 0x17
	0x01EF4294 SUBS X22, X22, 0x1
	0x01EF4298 STRH W21, [X20], #0x2
	0x01EF429C B.NE 0x1EF4274
	0x01EF42A0 LDP X20, X19, [X31 + 0x20]
	0x01EF42A4 LDP X22, X21, [X31 + 0x10]
	0x01EF42A8 LDR X30, [X31], #0x30
	0x01EF42AC RET
	0x01EF42B0 STP X30, X21, [X31 - 0x20]!
	0x01EF42B4 STP X20, X19, [X31 + 0x10]
	0x01EF42B8 LDRB W8, [X0 + 0x20]
	0x01EF42BC MOV X19, X0
	0x01EF42C0 MOV X20, X1
	0x01EF42C4 CMP W2, 0x1
	0x01EF42C8 CBZ W8, 0x1EF42F0
	0x01EF42CC B.LT 0x1EF4310
	0x01EF42D0 MOV W21, W2
	0x01EF42D4 LDR W1, [X20], #0x4
	0x01EF42D8 MOVZ W2, 0x20
	0x01EF42DC MOV X0, X19
	0x01EF42E0 BL 0x1EF2528
	0x01EF42E4 SUBS X21, X21, 0x1
	0x01EF42E8 B.NE 0x1EF42D4
	0x01EF42EC B 0x1EF4310
	0x01EF42F0 B.LT 0x1EF4310
	0x01EF42F4 MOV W21, W2
	0x01EF42F8 MOVZ W1, 0x20
	0x01EF42FC MOV X0, X19
	0x01EF4300 BL 0x1EF2690
	0x01EF4304 SUBS X21, X21, 0x1
	0x01EF4308 STR W0, [X20], #0x4
	0x01EF430C B.NE 0x1EF42F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x24E6000
	006 Move W8, [X21+1506]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2200000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0x2200000
	017 Move X0, [X0+2440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1506], W8
	021 Move W1, 1
	022 Move X0, X20
	023 Call BitStream.InternalReadByte, X0, X1
	024 And W8, W0, 255
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X31
	027 Move W1, 8
	028 Move X0, X20
	029 Call BitStream.InternalReadByte, X0, X1
	030 Move W21, W0
	031 Move W1, 8
	032 Move X0, X20
	033 Call BitStream.InternalReadByte, X0, X1
	034 NotImplemented "Instruction BFM not yet implemented."
	035 And W31, W21, 0xFFFF
	036 Move X8, 0x2200000
	037 Move X8, [X8+1560]
	038 And W1, W21, 0xFFFF
	039 Move X0, [X8]
	040 Call 0x1C17D6C
	041 Move X21, X0
	042 Move X0, X20
	043 Move X1, X21
	044 Call BitStream.ReadByteArray, X0, X1
	045 Compare X21, 0
	046 JumpIfEqual {69}
	047 Compare X19, 0
	048 JumpIfEqual {69}
	049 Move X8, [X19]
	050 Move W3, [X21+24]
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X5, [X8+904]
	055 Move X4, [X8+912]
	056 Move X1, X21
	057 Move W2, W31
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X5
	061 Move X8, 0x2200000
	062 Move X8, [X8+2440]
	063 Move X0, [X8]
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return X0
	069 Call 0x1C17F20

Method: System.String ReadString()

Disassembly:
	0x01EF4310 LDP X20, X19, [X31 + 0x10]
	0x01EF4314 LDP X30, X21, [X31], #0x20
	0x01EF4318 RET
	0x01EF431C STP X30, X21, [X31 - 0x20]!
	0x01EF4320 STP X20, X19, [X31 + 0x10]
	0x01EF4324 LDRB W8, [X0 + 0x20]
	0x01EF4328 MOV X19, X0
	0x01EF432C MOV X20, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Encoding.get_UTF8
	006 Move X1, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call BitStream.ReadString, X0, X1
	011 Return X0

Method: System.Void WriteGuid(System.Guid guid)

Disassembly:
	0x01EF4330 CMP W2, 0x1
	0x01EF4334 CBZ W8, 0x1EF435C
	0x01EF4338 B.LT 0x1EF437C
	0x01EF433C MOV W21, W2
	0x01EF4340 LDR W1, [X20], #0x4
	0x01EF4344 MOVZ W2, 0x20
	0x01EF4348 MOV X0, X19
	0x01EF434C BL 0x1EF2528
	0x01EF4350 SUBS X21, X21, 0x1
	0x01EF4354 B.NE 0x1EF4340
	0x01EF4358 B 0x1EF437C
	0x01EF435C B.LT 0x1EF437C
	0x01EF4360 MOV W21, W2

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move [X31], X1
	006 Move [X31+8], X2
	007 Add X0, X31, 0
	008 Move X1, X31
	009 Call Guid.ToByteArray, X0
	010 Move X1, X0
	011 Move X0, X19
	012 Call BitStream.WriteByteArray, X0, X1
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Add X31, X31, 32
	016 Return 

Method: System.Guid ReadGuid()

Disassembly:
	0x01EF4364 MOVZ W1, 0x20
	0x01EF4368 MOV X0, X19
	0x01EF436C BL 0x1EF2690
	0x01EF4370 SUBS X21, X21, 0x1
	0x01EF4374 STR W0, [X20], #0x4
	0x01EF4378 B.NE 0x1EF4364
	0x01EF437C LDP X20, X19, [X31 + 0x10]
	0x01EF4380 LDP X30, X21, [X31], #0x20
	0x01EF4384 RET
	0x01EF4388 STR X30, [X31 - 0x30]!
	0x01EF438C STP X22, X21, [X31 + 0x10]
	0x01EF4390 STP X20, X19, [X31 + 0x20]
	0x01EF4394 LDRB W8, [X0 + 0x20]
	0x01EF4398 MOV X19, X0
	0x01EF439C MOV X20, X1
	0x01EF43A0 CMP W2, 0x1
	0x01EF43A4 CBZ W8, 0x1EF43E0
	0x01EF43A8 B.LT 0x1EF4418
	0x01EF43AC MOV W22, W2
	0x01EF43B0 LDR X21, [X20], #0x8
	0x01EF43B4 MOVZ W2, 0x20
	0x01EF43B8 MOV X0, X19
	0x01EF43BC MOV W1, W21
	0x01EF43C0 BL 0x1EF2528
	0x01EF43C4 UBFM X1, X21, 0x20, 0x3F
	0x01EF43C8 MOVZ W2, 0x20
	0x01EF43CC MOV X0, X19
	0x01EF43D0 BL 0x1EF2528
	0x01EF43D4 SUBS X22, X22, 0x1
	0x01EF43D8 B.NE 0x1EF43B0
	0x01EF43DC B 0x1EF4418

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x24E6000
	007 Move X21, 0x2200000
	008 Move W8, [X20+1507]
	009 Move X21, [X21+1560]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2200000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1507], W8
	020 Move X0, [X21]
	021 Move W1, 16
	022 Call 0x1C17D6C
	023 Move X20, X0
	024 Move X0, X19
	025 Move X1, X20
	026 Call BitStream.ReadByteArray, X0, X1
	027 Add X0, X31, 0
	028 Move X1, X20
	029 Move X2, X31
	030 Move [X31], X31
	031 Move [X31+8], X31
	032 Call Guid..ctor, X0, X1
	033 Move X0, [X31]
	034 Move X1, [X31+8]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Return X0

Method: System.Void InternalWriteByte(System.Byte value, System.Int32 bits)

Disassembly:
	0x01EF3170 MOV X21, X1
	0x01EF3174 CSET W3, EQ
	0x01EF3178 MOVZ W2, 0x1
	0x01EF317C MOV W1, W8
	0x01EF3180 BL 0x1EF33E0
	0x01EF3184 LDR W8, [X19 + 0x10]
	0x01EF3188 ADD W8, W8, 0x1
	0x01EF318C STR W8, [X19 + 0x10]
	0x01EF3190 CBZ X21, 0x1EF31DC
	0x01EF3194 CBZ X20, 0x1EF31E8
	0x01EF3198 LDR X8, [X20]
	0x01EF319C MOV X0, X20
	0x01EF31A0 MOV X1, X21
	0x01EF31A4 LDR X9, [X8 + 0x268]
	0x01EF31A8 LDR X2, [X8 + 0x270]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move W8, [X20+16]
	006 Move X0, [X0+24]
	007 Move W3, W1
	008 Move W19, W2
	009 Move W1, W8
	010 Call BitStream.WriteByteAt, X0, X1, X2, X3
	011 Move W8, [X20+16]
	012 Add W8, W8, W19
	013 Move [X20+16], W8
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Void WriteByteAt(System.Byte[] data, System.Int32 ptr, System.Int32 bits, System.Byte value)

Disassembly:
	0x01EF43E0 B.LT 0x1EF4418
	0x01EF43E4 MOV W22, W2
	0x01EF43E8 MOVZ W1, 0x20
	0x01EF43EC MOV X0, X19
	0x01EF43F0 BL 0x1EF2690
	0x01EF43F4 MOV W21, W0
	0x01EF43F8 MOVZ W1, 0x20
	0x01EF43FC MOV X0, X19
	0x01EF4400 BL 0x1EF2690
	0x01EF4404 MOV W8, W21
	0x01EF4408 BFM X8, X0, 0x20, 0x1F
	0x01EF440C SUBS X22, X22, 0x1
	0x01EF4410 STR X8, [X20], #0x8
	0x01EF4414 B.NE 0x1EF43E8
	0x01EF4418 LDP X20, X19, [X31 + 0x20]
	0x01EF441C LDP X22, X21, [X31 + 0x10]
	0x01EF4420 LDR X30, [X31], #0x30
	0x01EF4424 RET
	0x01EF4428 STR X30, [X31 - 0x30]!
	0x01EF442C STP X22, X21, [X31 + 0x10]
	0x01EF4430 STP X20, X19, [X31 + 0x20]
	0x01EF4434 LDRB W8, [X0 + 0x20]
	0x01EF4438 MOV X19, X0
	0x01EF443C MOV X20, X1
	0x01EF4440 CMP W2, 0x1
	0x01EF4444 CBZ W8, 0x1EF4480
	0x01EF4448 B.LT 0x1EF44B8
	0x01EF444C MOV W22, W2
	0x01EF4450 LDR X21, [X20], #0x8
	0x01EF4454 MOVZ W2, 0x20
	0x01EF4458 MOV X0, X19
	0x01EF445C MOV W1, W21
	0x01EF4460 BL 0x1EF2528
	0x01EF4464 UBFM X1, X21, 0x20, 0x3F
	0x01EF4468 MOVZ W2, 0x20
	0x01EF446C MOV X0, X19
	0x01EF4470 BL 0x1EF2528
	0x01EF4474 SUBS X22, X22, 0x1
	0x01EF4478 B.NE 0x1EF4450
	0x01EF447C B 0x1EF44B8
	0x01EF4480 B.LT 0x1EF44B8
	0x01EF4484 MOV W22, W2
	0x01EF4488 MOVZ W1, 0x20
	0x01EF448C MOV X0, X19
	0x01EF4490 BL 0x1EF2690
	0x01EF4494 MOV W21, W0
	0x01EF4498 MOVZ W1, 0x20
	0x01EF449C MOV X0, X19
	0x01EF44A0 BL 0x1EF2690
	0x01EF44A4 MOV W8, W21
	0x01EF44A8 BFM X8, X0, 0x20, 0x1F
	0x01EF44AC SUBS X22, X22, 0x1
	0x01EF44B0 STR X8, [X20], #0x8
	0x01EF44B4 B.NE 0x1EF4488
	0x01EF44B8 LDP X20, X19, [X31 + 0x20]
	0x01EF44BC LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W12, 8
	004 Move W13, 255
	005 And W10, W1, 7
	006 Subtract W8, W12, W2
	007 Subtract W9, W12, W10
	008 NotImplemented "Instruction LSRV not yet implemented."
	009 Subtract W14, W9, W2
	010 And W8, W8, W3
	011 NotImplemented "Instruction SBFM not yet implemented."
	012 Compare X0, 0
	013 JumpIfEqual {54}
	014 Move W15, [X0+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X11, X0, W11
	017 Add X11, X11, 32
	018 Move W15, [X11]
	019 Subtract W12, W12, W14
	020 NotImplemented "Instruction LSRV not yet implemented."
	021 NotImplemented "Instruction LSLV not yet implemented."
	022 Or W9, W12, W9
	023 And W9, W9, W15
	024 NotImplemented "Instruction LSLV not yet implemented."
	025 Or W8, W9, W8
	026 Compare X0, 0
	027 JumpIfEqual {54}
	028 Move W12, [X0+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X13, X0, W11
	031 Move W14, [X13+32]
	032 Move W12, 255
	033 NotImplemented "Instruction LSRV not yet implemented."
	034 NotImplemented "Instruction LSLV not yet implemented."
	035 And W14, W15, W14
	036 Or W10, W14, W10
	037 Move [X13+32], W10
	038 Move W13, [X0+24]
	039 Move X10, W11
	040 Add X10, X10, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X11, X0, X10
	043 Add X11, X11, 32
	044 Move W10, [X11]
	045 Subtract W13, W2, W9
	046 NotImplemented "Instruction LSLV not yet implemented."
	047 NotImplemented "Instruction LSRV not yet implemented."
	048 And W10, W12, W10
	049 Or W8, W10, W8
	050 Move [X11], W8
	051 Move X30, [X31+16]
	052 Return 
	053 Call 0x1C17F28
	054 Call 0x1C17F20

Method: System.Byte InternalReadByte(System.Int32 bits)

Disassembly:
	0x01EF3210 LDP X20, X19, [X31 + 0x10]
	0x01EF3214 LDR X30, [X31], #0x20
	0x01EF3218 B 0x1EF3154
	0x01EF321C STP X30, X21, [X31 - 0x20]!
	0x01EF3220 STP X20, X19, [X31 + 0x10]
	0x01EF3224 ADRP X21, 0x24E6000
	0x01EF3228 LDRB W8, [X21 + 0x5E2]
	0x01EF322C MOV X19, X1
	0x01EF3230 MOV X20, X0
	0x01EF3234 TBNZ X8, 0x0, 0x1EF3258
	0x01EF3238 ADRP X0, 0x2200000
	0x01EF323C LDR X0, [X0 + 0x618]
	0x01EF3240 BL 0x1C16CF4
	0x01EF3244 ADRP X0, 0x2200000
	0x01EF3248 LDR X0, [X0 + 0x988]
	0x01EF324C BL 0x1C16CF4
	0x01EF3250 MOVZ W8, 0x1
	0x01EF3254 STRB W8, [X21 + 0x5E2]
	0x01EF3258 MOVZ W1, 0x1
	0x01EF325C MOV X0, X20
	0x01EF3260 BL 0x1EF2210
	0x01EF3264 AND W8, W0, 0xFF
	0x01EF3268 CMP W8, 0x1
	0x01EF326C B.NE 0x1EF3278
	0x01EF3270 MOV X0, X31
	0x01EF3274 B 0x1EF3300
	0x01EF3278 MOVZ W1, 0x8
	0x01EF327C MOV X0, X20
	0x01EF3280 BL 0x1EF2210
	0x01EF3284 MOV W21, W0
	0x01EF3288 MOVZ W1, 0x8
	0x01EF328C MOV X0, X20
	0x01EF3290 BL 0x1EF2210
	0x01EF3294 BFM W21, W0, 0x18, 0x17
	0x01EF3298 ANDS W31, W21, 0xFFFF
	0x01EF329C B.EQ 0x1EF32F4
	0x01EF32A0 ADRP X8, 0x2200000
	0x01EF32A4 LDR X8, [X8 + 0x618]
	0x01EF32A8 AND W1, W21, 0xFFFF
	0x01EF32AC LDR X0, [X8]
	0x01EF32B0 BL 0x1C16D6C
	0x01EF32B4 MOV X21, X0
	0x01EF32B8 MOV X0, X20
	0x01EF32BC MOV X1, X21
	0x01EF32C0 BL 0x1EF2E80
	0x01EF32C4 CBZ X21, 0x1EF330C
	0x01EF32C8 CBZ X19, 0x1EF330C
	0x01EF32CC LDR X8, [X19]
	0x01EF32D0 LDR W3, [X21 + 0x18]
	0x01EF32D4 MOV X0, X19
	0x01EF32D8 LDP X20, X19, [X31 + 0x10]
	0x01EF32DC LDR X5, [X8 + 0x388]
	0x01EF32E0 LDR X4, [X8 + 0x390]
	0x01EF32E4 MOV X1, X21
	0x01EF32E8 MOV W2, W31

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W9, [X0+16]
	004 Move X10, [X0+24]
	005 Add W8, W9, 7
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFF8
	009 Subtract W12, W9, W8
	010 NotImplemented "Instruction CSET not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Compare X10, 0
	014 JumpIfEqual {53}
	015 Move W11, [X10+24]
	016 NotImplemented "Instruction SBFM not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X10, W13
	019 Move W8, [X8+32]
	020 And W14, W15, W14
	021 Move TEMP, X14
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {47}
	025 Move W16, 8
	026 Subtract W14, W16, W12
	027 Subtract W15, W1, W14
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction LSRV not yet implemented."
	030 Move X12, W13
	031 Add X12, X12, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X10, X10, X12
	034 Move W10, [X10+32]
	035 Move W11, 8
	036 Subtract W11, W11, W15
	037 Move W12, 255
	038 NotImplemented "Instruction LSRV not yet implemented."
	039 And W10, W11, W10
	040 NotImplemented "Instruction LSLV not yet implemented."
	041 Or W8, W10, W8
	042 Move W8, W31
	043 Subtract W10, W16, W1
	044 Move W11, 255
	045 NotImplemented "Instruction LSRV not yet implemented."
	046 And W8, W8, W10
	047 Add W9, W9, W1
	048 Move [X0+16], W9
	049 Move W0, W8
	050 Move X30, [X31+16]
	051 Return X0
	052 Call 0x1C17F28
	053 Call 0x1C17F20

Method: System.Boolean Condition(System.Boolean condition)

Disassembly:
	0x01EF44C0 LDR X30, [X31], #0x30
	0x01EF44C4 RET
	0x01EF44C8 AND X0, X0, 0xFFFF
	0x01EF44CC RET
	0x01EF44D0 AND X0, X0, 0xFFFF
	0x01EF44D4 RET
	0x01EF44D8 AND X0, X0, 0xFFFF
	0x01EF44DC RET
	0x01EF44E0 MOV W0, W0
	0x01EF44E4 RET
	0x01EF44E8 MOV W0, W0
	0x01EF44EC RET
	0x01EF44F0 RET
	0x01EF44F4 RET
	0x01EF44F8 STR X30, [X31 - 0x20]!
	0x01EF44FC STP X20, X19, [X31 + 0x10]
	0x01EF4500 ADRP X20, 0x24E5000
	0x01EF4504 LDRB W8, [X20 + 0x5E8]
	0x01EF4508 MOV X19, X0
	0x01EF450C TBNZ X8, 0x0, 0x1EF4524
	0x01EF4510 ADRP X0, 0x220C000
	0x01EF4514 LDR X0, [X0 + 0x6A8]
	0x01EF4518 BL 0x1C16CF4
	0x01EF451C MOVZ W8, 0x1
	0x01EF4520 STRB W8, [X20 + 0x5E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+32]
	005 Move X20, X0
	006 Compare W8, 0
	007 JumpIfEqual {17}
	008 Move W19, W1
	009 Move X0, [X20+24]
	010 Move W1, [X20+16]
	011 And W3, W19, 1
	012 Move W2, 1
	013 Call BitStream.WriteByteAt, X0, X1, X2, X3
	014 Move W8, [X20+16]
	015 Add W8, W8, 1
	016 Move [X20+16], W8
	017 Move W1, 1
	018 Move X0, X20
	019 Call BitStream.InternalReadByte, X0, X1
	020 And W8, W0, 255
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 And W0, W19, 1
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Void Serialize(ref System.String value)

Disassembly:
	0x01EF4524 LDR X8, [X19 + 0x20]
	0x01EF4528 CBZ X8, 0x1EF4544
	0x01EF452C LDR W8, [X8 + 0x20]
	0x01EF4530 LDP X20, X19, [X31 + 0x10]
	0x01EF4534 CMP W8, 0x0
	0x01EF4538 CSET W0, GT
	0x01EF453C LDR X30, [X31], #0x20
	0x01EF4540 RET
	0x01EF4544 BL 0x1C16F20
	0x01EF4548 SUB X31, X31, 0x40
	0x01EF454C STP X30, X23, [X31 + 0x10]
	0x01EF4550 STP X22, X21, [X31 + 0x20]
	0x01EF4554 STP X20, X19, [X31 + 0x30]
	0x01EF4558 ADRP X23, 0x24E5000
	0x01EF455C LDRB W8, [X23 + 0x5E9]
	0x01EF4560 MOV X19, X3
	0x01EF4564 MOV W21, W2
	0x01EF4568 MOV W22, W1
	0x01EF456C MOV X20, X0
	0x01EF4570 TBNZ X8, 0x0, 0x1EF4594
	0x01EF4574 ADRP X0, 0x220C000
	0x01EF4578 LDR X0, [X0 + 0x6B0]
	0x01EF457C BL 0x1C16CF4
	0x01EF4580 ADRP X0, 0x220C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+32]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {20}
	009 Move X20, [X20]
	010 Move X0, X31
	011 Call Encoding.get_UTF8
	012 Move X2, X0
	013 Move X0, X19
	014 Move X1, X20
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Call BitStream.WriteString, X0, X1, X2
	019 Return 
	020 Move X0, X31
	021 Call Encoding.get_UTF8
	022 Move X1, X0
	023 Move X0, X19
	024 Call BitStream.ReadString, X0, X1
	025 Move [X20], X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void Serialize(ref System.Boolean value)

Disassembly:
	0x01EF4584 LDR X0, [X0 + 0x6B8]
	0x01EF4588 BL 0x1C16CF4
	0x01EF458C MOVZ W8, 0x1
	0x01EF4590 STRB W8, [X23 + 0x5E9]
	0x01EF4594 CMP W21, 0x64
	0x01EF4598 BIC W1, W22, W22, 0x1F
	0x01EF459C B.EQ 0x1EF45F8
	0x01EF45A0 CMP W21, 0x65
	0x01EF45A4 B.NE 0x1EF45E4
	0x01EF45A8 ADRP X8, 0x220C000
	0x01EF45AC LDR X20, [X20 + 0x20]
	0x01EF45B0 LDR X8, [X8 + 0x6B8]
	0x01EF45B4 ADD X0, X31, 0x0
	0x01EF45B8 MOV X2, X19
	0x01EF45BC STP X31, X31, [X31]
	0x01EF45C0 LDR X3, [X8]
	0x01EF45C4 BL 0x27A0810
	0x01EF45C8 CBZ X20, 0x1EF4614
	0x01EF45CC ADRP X8, 0x220C000
	0x01EF45D0 LDP X1, X2, [X31]
	0x01EF45D4 LDR X8, [X8 + 0x6B0]
	0x01EF45D8 MOV X0, X20
	0x01EF45DC LDR X3, [X8]
	0x01EF45E0 BL 0x24EF020
	0x01EF45E4 LDP X20, X19, [X31 + 0x30]
	0x01EF45E8 LDP X22, X21, [X31 + 0x20]
	0x01EF45EC LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+32]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {19}
	009 Move W8, [X20]
	010 Move X0, [X19+24]
	011 Move W1, [X19+16]
	012 Move W2, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Call BitStream.WriteByteAt, X0, X1, X2, X3
	016 Move W8, [X19+16]
	017 Add W8, W8, 1
	018 Move [X19+16], W8
	019 Move W1, 1
	020 Move X0, X19
	021 Call BitStream.InternalReadByte, X0, X1
	022 And W8, W0, 255
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Move [X20], W8
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void Serialize(ref System.Single value)

Disassembly:
	0x01EF45F0 ADD X31, X31, 0x40
	0x01EF45F4 RET
	0x01EF45F8 MOV X0, X20
	0x01EF45FC MOV X2, X19
	0x01EF4600 LDP X20, X19, [X31 + 0x30]
	0x01EF4604 LDP X22, X21, [X31 + 0x20]
	0x01EF4608 LDP X30, X23, [X31 + 0x10]
	0x01EF460C ADD X31, X31, 0x40
	0x01EF4610 B 0x1EF4618
	0x01EF4614 BL 0x1C16F20
	0x01EF4618 SUB X31, X31, 0x80

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X1
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move V0, [X19]
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call BitStream.WriteFloat, X0, V0
	011 Return 
	012 Call BitStream.ReadFloat, X0
	013 Move [X19], S0
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Void Serialize(ref System.Double value)

Disassembly:
	0x01EF461C STR X30, [X31 + 0x40]
	0x01EF4620 STP X24, X23, [X31 + 0x50]
	0x01EF4624 STP X22, X21, [X31 + 0x60]
	0x01EF4628 STP X20, X19, [X31 + 0x70]
	0x01EF462C ADRP X22, 0x24E5000
	0x01EF4630 LDRB W8, [X22 + 0x5EC]
	0x01EF4634 MOV X21, X2
	0x01EF4638 MOV W19, W1
	0x01EF463C MOV X20, X0
	0x01EF4640 TBNZ X8, 0x0, 0x1EF4688
	0x01EF4644 ADRP X0, 0x220C000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X1
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move V0, [X19]
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call BitStream.WriteDouble, X0, V0
	011 Return 
	012 Call BitStream.ReadDouble, X0
	013 Move [X19], D0
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Void Serialize(ref System.Int64 value)

Disassembly:
	0x01EF4648 LDR X0, [X0 + 0x6C0]
	0x01EF464C BL 0x1C16CF4
	0x01EF4650 ADRP X0, 0x220C000
	0x01EF4654 LDR X0, [X0 + 0x6C8]
	0x01EF4658 BL 0x1C16CF4
	0x01EF465C ADRP X0, 0x220C000
	0x01EF4660 LDR X0, [X0 + 0x6D0]
	0x01EF4664 BL 0x1C16CF4
	0x01EF4668 ADRP X0, 0x220C000
	0x01EF466C LDR X0, [X0 + 0x6D8]
	0x01EF4670 BL 0x1C16CF4
	0x01EF4674 ADRP X0, 0x220C000
	0x01EF4678 LDR X0, [X0 + 0x6E0]
	0x01EF467C BL 0x1C16CF4
	0x01EF4680 MOVZ W8, 0x1
	0x01EF4684 STRB W8, [X22 + 0x5EC]
	0x01EF4688 STR X31, [X31 + 0x48]
	0x01EF468C STR W31, [X31 + 0x3C]
	0x01EF4690 STP X31, X31, [X31 + 0x20]
	0x01EF4694 STR X31, [X31 + 0x30]
	0x01EF4698 STR X31, [X31 + 0x18]
	0x01EF469C LDR X8, [X20]
	0x01EF46A0 ADD X2, X31, 0x48
	0x01EF46A4 ADD X3, X31, 0x3C
	0x01EF46A8 MOV X0, X20
	0x01EF46AC LDR X9, [X8 + 0x228]
	0x01EF46B0 LDR X4, [X8 + 0x230]
	0x01EF46B4 MOV X1, X21
	0x01EF46B8 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 Compare W8, 0
	009 JumpIfEqual {24}
	010 Move W1, [X20]
	011 Move W21, [X20+4]
	012 Move W2, 32
	013 Move X0, X19
	014 Call BitStream.WriteUInt, X0, X1, X2
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move W2, 32
	019 Move W1, W21
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call BitStream.WriteUInt, X0, X1, X2
	023 Return 
	024 Move W1, 32
	025 Move X0, X19
	026 Call BitStream.ReadUInt, X0, X1
	027 Move W21, W0
	028 Move W1, 32
	029 Move X0, X19
	030 Call BitStream.ReadUInt, X0, X1
	031 Move W8, W21
	032 NotImplemented "Instruction BFM not yet implemented."
	033 Move [X20], X8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Void Serialize(ref System.UInt64 value)

Disassembly:
	0x01EF46BC LDR X1, [X31 + 0x48]
	0x01EF46C0 CBZ X1, 0x1EF4790
	0x01EF46C4 LDR X0, [X20 + 0x30]
	0x01EF46C8 CBZ X0, 0x1EF47B4
	0x01EF46CC LDR X2, [X20 + 0x28]
	0x01EF46D0 BL 0x1EF4B74
	0x01EF46D4 TBZ X0, 0x0, 0x1EF4790
	0x01EF46D8 LDR X0, [X20 + 0x28]
	0x01EF46DC CBZ X0, 0x1EF47B4
	0x01EF46E0 ADRP X8, 0x220C000
	0x01EF46E4 LDR X8, [X8 + 0x6E0]
	0x01EF46E8 LDR X1, [X8]
	0x01EF46EC ADD X8, X31, 0x0
	0x01EF46F0 BL 0x301CB58
	0x01EF46F4 LDR V0, [X31]
	0x01EF46F8 LDR X8, [X31 + 0x10]
	0x01EF46FC ADRP X23, 0x220C000
	0x01EF4700 LDR X23, [X23 + 0x6D0]
	0x01EF4704 STR V0, [X31 + 0x2]
	0x01EF4708 STR X8, [X31 + 0x30]
	0x01EF470C ADRP X24, 0x220C000
	0x01EF4710 LDR X24, [X24 + 0x6C0]
	0x01EF4714 LDR X1, [X23]
	0x01EF4718 ADD X0, X31, 0x20
	0x01EF471C BL 0x2BC4350
	0x01EF4720 TBZ X0, 0x0, 0x1EF477C
	0x01EF4724 LDR X21, [X31 + 0x30]
	0x01EF4728 CBZ X21, 0x1EF47A8
	0x01EF472C LDR X22, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 Compare W8, 0
	009 JumpIfEqual {24}
	010 Move W1, [X20]
	011 Move W21, [X20+4]
	012 Move W2, 32
	013 Move X0, X19
	014 Call BitStream.WriteUInt, X0, X1, X2
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move W2, 32
	019 Move W1, W21
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call BitStream.WriteUInt, X0, X1, X2
	023 Return 
	024 Move W1, 32
	025 Move X0, X19
	026 Call BitStream.ReadUInt, X0, X1
	027 Move W21, W0
	028 Move W1, 32
	029 Move X0, X19
	030 Call BitStream.ReadUInt, X0, X1
	031 Move W8, W21
	032 NotImplemented "Instruction BFM not yet implemented."
	033 Move [X20], X8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Void Serialize(ref System.Byte value)

Disassembly:
	0x01EF4730 MOV X0, X21
	0x01EF4734 MOV X1, X31
	0x01EF4738 BL 0x33BE520
	0x01EF473C MOV X1, X0
	0x01EF4740 CBZ X22, 0x1EF47AC
	0x01EF4744 LDR X3, [X24]
	0x01EF4748 ADD X2, X31, 0x18
	0x01EF474C MOV X0, X22
	0x01EF4750 BL 0x2AA6B2C
	0x01EF4754 TBZ X0, 0x0, 0x1EF4714
	0x01EF4758 LDR X8, [X31 + 0x18]
	0x01EF475C CBZ X8, 0x1EF47B0
	0x01EF4760 LDR X0, [X8 + 0x40]
	0x01EF4764 LDR X9, [X8 + 0x18]
	0x01EF4768 LDR X3, [X8 + 0x28]
	0x01EF476C MOV W1, W19
	0x01EF4770 MOV X2, X21
	0x01EF4774 BLR X9
	0x01EF4778 B 0x1EF4714
	0x01EF477C ADRP X8, 0x220C000
	0x01EF4780 LDR X8, [X8 + 0x6C8]
	0x01EF4784 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+32]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {17}
	009 Move X0, [X19+24]
	010 Move W1, [X19+16]
	011 Move W3, [X20]
	012 Move W2, 8
	013 Call BitStream.WriteByteAt, X0, X1, X2, X3
	014 Move W8, [X19+16]
	015 Add W8, W8, 8
	016 Move [X19+16], W8
	017 Move W1, 8
	018 Move X0, X19
	019 Call BitStream.InternalReadByte, X0, X1
	020 Move [X20], W0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void Serialize(ref System.UInt32 value)

Disassembly:
	0x01EF4788 LDR X1, [X8]
	0x01EF478C BL 0x2BC434C

ISIL:
	001 Move W2, 32

Method: System.Void Serialize(ref System.UInt32 value, System.Int32 bits)

Disassembly:
	0x01EF4790 LDP X20, X19, [X31 + 0x70]
	0x01EF4794 LDP X22, X21, [X31 + 0x60]
	0x01EF4798 LDP X24, X23, [X31 + 0x50]
	0x01EF479C LDR X30, [X31 + 0x40]
	0x01EF47A0 ADD X31, X31, 0x80
	0x01EF47A4 RET
	0x01EF47A8 BL 0x1C16F20
	0x01EF47AC BL 0x1C16F20
	0x01EF47B0 BL 0x1C16F20
	0x01EF47B4 BL 0x1C16F20
	0x01EF47B8 B 0x1EF47D0
	0x01EF47BC B 0x1EF47D0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X1
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move W1, [X19]
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call BitStream.WriteUInt, X0, X1, X2
	011 Return 
	012 Move W1, W2
	013 Call BitStream.ReadUInt, X0, X1
	014 Move [X19], W0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Void Serialize(ref System.UInt64 value, System.Int32 bits)

Disassembly:
	0x01EF47C0 B 0x1EF47D0
	0x01EF47C4 B 0x1EF47D0
	0x01EF47C8 B 0x1EF47D0
	0x01EF47CC B 0x1EF47D0
	0x01EF47D0 MOV X19, X0
	0x01EF47D4 CMP W1, 0x1
	0x01EF47D8 B.NE 0x1EF480C
	0x01EF47DC MOV X0, X19
	0x01EF47E0 BL 0x3EB1AD0
	0x01EF47E4 LDR X20, [X0]
	0x01EF47E8 BL 0x3EB1AE0
	0x01EF47EC ADRP X8, 0x220C000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X1
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move X1, [X19]
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call BitStream.WriteULong, X0, X1, X2
	011 Return 
	012 Move W1, W2
	013 Call BitStream.ReadULong, X0, X1
	014 Move [X19], X0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Void Serialize(ref System.Int32 value)

Disassembly:
	0x01EF47F0 LDR X8, [X8 + 0x6C8]
	0x01EF47F4 ADD X0, X31, 0x20

ISIL:
	001 Move W2, 32

Method: System.Void Serialize(ref System.Int32 value, System.Int32 bits)

Disassembly:
	0x01EF47F8 LDR X1, [X8]
	0x01EF47FC BL 0x2BC434C
	0x01EF4800 CBZ X20, 0x1EF4790
	0x01EF4804 MOV X0, X20
	0x01EF4808 BL 0x1C16F18
	0x01EF480C MOV X20, X31
	0x01EF4810 B 0x1EF4818
	0x01EF4814 MOV X19, X0
	0x01EF4818 ADRP X8, 0x220C000
	0x01EF481C LDR X8, [X8 + 0x6C8]
	0x01EF4820 LDR X1, [X8]
	0x01EF4824 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X1
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move W1, [X19]
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call BitStream.WriteUInt, X0, X1, X2
	011 Return 
	012 Move W1, W2
	013 Call BitStream.ReadUInt, X0, X1
	014 Move [X19], W0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Void Serialize(ref System.Int32[] value)

Disassembly:
	0x01EF4828 BL 0x2BC434C
	0x01EF482C CBNZ X20, 0x1EF4838
	0x01EF4830 MOV X0, X19
	0x01EF4834 BL 0x1D2C690
	0x01EF4838 MOV X0, X20
	0x01EF483C BL 0x1C16F18
	0x01EF4840 BL 0x1990590
	0x01EF4844 SUB X31, X31, 0x50
	0x01EF4848 STP X30, X23, [X31 + 0x20]
	0x01EF484C STP X22, X21, [X31 + 0x30]
	0x01EF4850 STP X20, X19, [X31 + 0x40]
	0x01EF4854 ADRP X22, 0x24E5000
	0x01EF4858 LDRB W8, [X22 + 0x5EA]
	0x01EF485C MOV X19, X2
	0x01EF4860 MOV W20, W1
	0x01EF4864 MOV X21, X0
	0x01EF4868 TBNZ X8, 0x0, 0x1EF4898
	0x01EF486C ADRP X0, 0x220C000
	0x01EF4870 LDR X0, [X0 + 0x6E8]
	0x01EF4874 BL 0x1C16CF4
	0x01EF4878 ADRP X0, 0x220C000
	0x01EF487C LDR X0, [X0 + 0x6F0]
	0x01EF4880 BL 0x1C16CF4
	0x01EF4884 ADRP X0, 0x220C000
	0x01EF4888 LDR X0, [X0 + 0x6F8]
	0x01EF488C BL 0x1C16CF4
	0x01EF4890 MOVZ W8, 0x1
	0x01EF4894 STRB W8, [X22 + 0x5EA]
	0x01EF4898 STR X31, [X31 + 0x18]
	0x01EF489C LDR X0, [X21 + 0x30]
	0x01EF48A0 CBZ X0, 0x1EF49D0
	0x01EF48A4 ADRP X23, 0x220C000
	0x01EF48A8 LDR X23, [X23 + 0x6E8]
	0x01EF48AC CBZ X19, 0x1EF48DC
	0x01EF48B0 LDR X8, [X19]
	0x01EF48B4 LDR X1, [X23]
	0x01EF48B8 LDRB W10, [X8 + 0x130]
	0x01EF48BC LDRB W9, [X1 + 0x130]
	0x01EF48C0 CMP W10, W9
	0x01EF48C4 B.CC 0x1EF49C8
	0x01EF48C8 LDR X8, [X8 + 0xC8]
	0x01EF48CC ADD X8, X8, X9, 0x3, LSL
	0x01EF48D0 LDUR X8, [X8 - 0x8]
	0x01EF48D4 CMP X8, X1
	0x01EF48D8 B.NE 0x1EF49C8
	0x01EF48DC ADD X2, X31, 0x18
	0x01EF48E0 MOV X1, X19
	0x01EF48E4 BL 0x1EF49D4
	0x01EF48E8 TBZ X0, 0x0, 0x1EF4944
	0x01EF48EC LDR X0, [X31 + 0x18]
	0x01EF48F0 CBZ X0, 0x1EF49D0
	0x01EF48F4 LDR X8, [X0 + 0x18]
	0x01EF48F8 CBZ X8, 0x1EF4910
	0x01EF48FC LDR W9, [X8 + 0x18]
	0x01EF4900 ADD X8, X8, 0x20
	0x01EF4904 CMP W9, 0x0
	0x01EF4908 CSEL X22, X31, X8, EQ
	0x01EF490C B 0x1EF4914
	0x01EF4910 MOV X22, X31
	0x01EF4914 BL 0x1EF1BE8
	0x01EF4918 LDR X8, [X21]
	0x01EF491C MOV W5, W0
	0x01EF4920 MOVZ W1, 0x64
	0x01EF4924 MOVZ W3, 0x1
	0x01EF4928 LDR X9, [X8 + 0x218]
	0x01EF492C LDR X6, [X8 + 0x220]
	0x01EF4930 MOV X0, X21
	0x01EF4934 MOV W2, W20
	0x01EF4938 MOV X4, X22
	0x01EF493C BLR X9
	0x01EF4940 TBNZ X0, 0x0, 0x1EF49B4
	0x01EF4944 LDR X21, [X21 + 0x18]
	0x01EF4948 STP X31, X31, [X31 + 0x8]
	0x01EF494C CBZ X19, 0x1EF497C
	0x01EF4950 LDR X8, [X19]
	0x01EF4954 LDR X1, [X23]
	0x01EF4958 LDRB W10, [X8 + 0x130]
	0x01EF495C LDRB W9, [X1 + 0x130]
	0x01EF4960 CMP W10, W9
	0x01EF4964 B.CC 0x1EF49C8
	0x01EF4968 LDR X8, [X8 + 0xC8]
	0x01EF496C ADD X8, X8, X9, 0x3, LSL
	0x01EF4970 LDUR X8, [X8 - 0x8]
	0x01EF4974 CMP X8, X1
	0x01EF4978 B.NE 0x1EF49C8
	0x01EF497C ADRP X8, 0x220C000
	0x01EF4980 LDR X8, [X8 + 0x6F8]
	0x01EF4984 ADD X0, X31, 0x8
	0x01EF4988 MOV W1, W20
	0x01EF498C MOV X2, X19
	0x01EF4990 LDR X3, [X8]
	0x01EF4994 BL 0x27A0810
	0x01EF4998 CBZ X21, 0x1EF49D0
	0x01EF499C ADRP X8, 0x220C000
	0x01EF49A0 LDP X1, X2, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24E6000
	007 Move W8, [X21+1508]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2201000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1508], W8
	019 Move W8, [X20+32]
	020 Compare W8, 0
	021 JumpIfEqual {57}
	022 Move X21, [X19]
	023 Move X0, [X20+24]
	024 Move W1, [X20+16]
	025 Move W2, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Call BitStream.WriteByteAt, X0, X1, X2, X3
	029 Move W8, [X20+16]
	030 Add W8, W8, 1
	031 Move [X20+16], W8
	032 Compare X21, 0
	033 JumpIfEqual {97}
	034 Move X8, [X19]
	035 Compare X8, 0
	036 JumpIfEqual {95}
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move W2, 16
	039 Move X0, X20
	040 Call BitStream.WriteUShort, X0, X1, X2
	041 Move X8, [X19]
	042 Compare X8, 0
	043 JumpIfEqual {95}
	044 Move X21, X31
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X8, X8, X21
	049 Move W1, [X8+32]
	050 Move W2, 32
	051 Move X0, X20
	052 Call BitStream.WriteUInt, X0, X1, X2
	053 Move X8, [X19]
	054 Add X21, X21, 1
	055 Compare X8, 0
	056 JumpIfNotEqual {45}
	057 Move W1, 1
	058 Move X0, X20
	059 Call BitStream.InternalReadByte, X0, X1
	060 And W8, W0, 255
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W1, 8
	063 Move X0, X20
	064 Call BitStream.InternalReadByte, X0, X1
	065 Move W21, W0
	066 Move W1, 8
	067 Move X0, X20
	068 Call BitStream.InternalReadByte, X0, X1
	069 Move X8, 0x2201000
	070 Move X8, [X8+3672]
	071 And W1, W21, 255
	072 And W9, W0, 255
	073 NotImplemented "Instruction BFM not yet implemented."
	074 Move X8, [X8]
	075 Move X0, X8
	076 Call 0x1C17D6C
	077 Move [X19], X0
	078 Compare X0, 0
	079 JumpIfEqual {95}
	080 Move X21, X0
	081 Move X22, X31
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W1, 32
	085 Move X0, X20
	086 Call BitStream.ReadUInt, X0, X1
	087 Move W8, [X21+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X21, X22
	090 Move [X8+32], W0
	091 Move X21, [X19]
	092 Add X22, X22, 1
	093 Compare X21, 0
	094 JumpIfNotEqual {82}
	095 Call 0x1C17F20
	096 Move [X19], X31
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Return 
	103 Call 0x1C17F28

Method: System.Void Serialize(ref System.Byte[] value)

Disassembly:
	0x01EF49A4 LDR X8, [X8 + 0x6F0]
	0x01EF49A8 MOV X0, X21
	0x01EF49AC LDR X3, [X8]
	0x01EF49B0 BL 0x24EF020
	0x01EF49B4 LDP X20, X19, [X31 + 0x40]
	0x01EF49B8 LDP X22, X21, [X31 + 0x30]
	0x01EF49BC LDP X30, X23, [X31 + 0x20]
	0x01EF49C0 ADD X31, X31, 0x50
	0x01EF49C4 RET
	0x01EF49C8 MOV X0, X19
	0x01EF49CC BL 0x1C171E0
	0x01EF49D0 BL 0x1C16F20
	0x01EF49D4 STP X30, X21, [X31 - 0x20]!
	0x01EF49D8 STP X20, X19, [X31 + 0x10]
	0x01EF49DC MOV X20, X0
	0x01EF49E0 LDR X0, [X0 + 0x10]
	0x01EF49E4 MOV X19, X2
	0x01EF49E8 CBZ X0, 0x1EF4A20
	0x01EF49EC MOV X21, X1
	0x01EF49F0 BL 0x1EF2014
	0x01EF49F4 LDR X2, [X20 + 0x10]
	0x01EF49F8 CBZ X2, 0x1EF4A24
	0x01EF49FC MOVZ W8, 0x1
	0x01EF4A00 STRB W8, [X2 + 0x20]
	0x01EF4A04 MOV X0, X20
	0x01EF4A08 MOV X1, X21
	0x01EF4A0C BL 0x1EF8554
	0x01EF4A10 TBZ X0, 0x0, 0x1EF4A98
	0x01EF4A14 LDR X8, [X20 + 0x10]
	0x01EF4A18 MOVZ W0, 0x1
	0x01EF4A1C B 0x1EF4AA0
	0x01EF4A20 BL 0x1C16F20
	0x01EF4A24 BL 0x1C16F20
	0x01EF4A28 B 0x1EF4A30
	0x01EF4A2C B 0x1EF4A30
	0x01EF4A30 MOV X21, X0
	0x01EF4A34 CMP W1, 0x1
	0x01EF4A38 B.NE 0x1EF4ADC
	0x01EF4A3C MOV X0, X21
	0x01EF4A40 BL 0x3EB1AD0
	0x01EF4A44 MOV X21, X0
	0x01EF4A48 ADRP X0, 0x2209000
	0x01EF4A4C LDR X0, [X0 + 0xF78]
	0x01EF4A50 BL 0x1C16D08
	0x01EF4A54 LDR X8, [X21]
	0x01EF4A58 LDR X1, [X8]
	0x01EF4A5C BL 0x1C17270
	0x01EF4A60 TBZ X0, 0x0, 0x1EF4A78
	0x01EF4A64 BL 0x3EB1AE0
	0x01EF4A68 LDR X0, [X20 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24E6000
	007 Move W8, [X21+1509]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x220D000
	015 Move X0, [X0+1696]
	016 Call 0x1C17CF4
	017 Move X0, 0x2201000
	018 Move X0, [X0+1136]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1509], W8
	022 Move [X31+8], X31
	023 Move W8, [X19+32]
	024 Compare W8, 0
	025 JumpIfEqual {39}
	026 Move X21, 0x220D000
	027 Move X20, [X20]
	028 Move X21, [X21+1696]
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move [X31], X31
	032 Move X8, 0x2201000
	033 Move X8, [X8+1136]
	034 Move W1, [X20+24]
	035 Add X0, X31, 0
	036 Move X2, [X8]
	037 Call Nullable`1<Int32>..ctor, X0, X1
	038 Move X8, [X31]
	039 Move X0, X19
	040 Call BitStream.ReadByteArrayLengthPrefixed, X0
	041 Move [X20], X0
	042 Move X8, X31
	043 Move X2, [X21]
	044 Add X0, X31, 8
	045 Move W1, W31
	046 Move [X31+8], X8
	047 Call Nullable`1<Int32>.GetValueOrDefault, X0, X1
	048 Move W2, W0
	049 Move X0, X19
	050 Move X1, X20
	051 Call BitStream.WriteByteArrayLengthPrefixed, X0, X1, X2
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Add X31, X31, 48
	057 Return 

Method: System.Void Serialize(ref System.Byte[] array, ref System.Int32 length)

Disassembly:
	0x01EF4A6C CBZ X0, 0x1EF4AB0
	0x01EF4A70 BL 0x1EF1EDC
	0x01EF4A74 B 0x1EF4A98
	0x01EF4A78 ADRP X0, 0x21FF000
	0x01EF4A7C LDR X0, [X0 + 0x7D0]
	0x01EF4A80 BL 0x1C16D08
	0x01EF4A84 LDR X8, [X21]
	0x01EF4A88 LDR X1, [X8]
	0x01EF4A8C BL 0x1C17270
	0x01EF4A90 TBZ X0, 0x0, 0x1EF4AB4
	0x01EF4A94 BL 0x3EB1AE0
	0x01EF4A98 MOV X8, X31
	0x01EF4A9C MOV W0, W31
	0x01EF4AA0 STR X8, [X19]
	0x01EF4AA4 LDP X20, X19, [X31 + 0x10]
	0x01EF4AA8 LDP X30, X21, [X31], #0x20
	0x01EF4AAC RET
	0x01EF4AB0 BL 0x1C16F20
	0x01EF4AB4 MOVZ W0, 0x8
	0x01EF4AB8 BL 0x3EB1AF0
	0x01EF4ABC LDR X8, [X21]
	0x01EF4AC0 STR X8, [X0]
	0x01EF4AC4 ADRP X1, 0x1FC0000
	0x01EF4AC8 ADD X1, X1, 0xE58
	0x01EF4ACC MOV X2, X31
	0x01EF4AD0 BL 0x3EB1B00
	0x01EF4AD4 MOV X21, X0
	0x01EF4AD8 BL 0x3EB1AE0
	0x01EF4ADC MOV X0, X21
	0x01EF4AE0 BL 0x1D2C690
	0x01EF4AE4 BL 0x1990590
	0x01EF4AE8 STR X30, [X31 - 0x20]!
	0x01EF4AEC STP X20, X19, [X31 + 0x10]
	0x01EF4AF0 ADRP X20, 0x24E5000
	0x01EF4AF4 LDRB W8, [X20 + 0x5EB]
	0x01EF4AF8 MOV X19, X0
	0x01EF4AFC TBNZ X8, 0x0, 0x1EF4B20
	0x01EF4B00 ADRP X0, 0x220C000
	0x01EF4B04 LDR X0, [X0 + 0x700]
	0x01EF4B08 BL 0x1C16CF4
	0x01EF4B0C ADRP X0, 0x220C000
	0x01EF4B10 LDR X0, [X0 + 0x708]
	0x01EF4B14 BL 0x1C16CF4
	0x01EF4B18 MOVZ W8, 0x1
	0x01EF4B1C STRB W8, [X20 + 0x5EB]
	0x01EF4B20 LDR X0, [X19 + 0x18]
	0x01EF4B24 CBZ X0, 0x1EF4B70
	0x01EF4B28 LDR W8, [X0 + 0x20]
	0x01EF4B2C CMP W8, 0x1
	0x01EF4B30 B.LT 0x1EF4B64
	0x01EF4B34 ADRP X8, 0x220C000
	0x01EF4B38 LDR X8, [X8 + 0x700]
	0x01EF4B3C LDR X1, [X8]
	0x01EF4B40 BL 0x24EF19C
	0x01EF4B44 MOV X2, X0
	0x01EF4B48 MOV X0, X19
	0x01EF4B4C LDP X20, X19, [X31 + 0x10]
	0x01EF4B50 MOV X3, X1
	0x01EF4B54 MOV W1, W2
	0x01EF4B58 MOV X2, X3
	0x01EF4B5C LDR X30, [X31], #0x20
	0x01EF4B60 B 0x1EF4844
	0x01EF4B64 LDP X20, X19, [X31 + 0x10]
	0x01EF4B68 LDR X30, [X31], #0x20
	0x01EF4B6C RET
	0x01EF4B70 BL 0x1C16F20
	0x01EF4B74 STR X30, [X31 - 0x30]!
	0x01EF4B78 STP X22, X21, [X31 + 0x10]
	0x01EF4B7C STP X20, X19, [X31 + 0x20]
	0x01EF4B80 ADRP X22, 0x24E5000
	0x01EF4B84 LDRB W8, [X22 + 0x608]
	0x01EF4B88 MOV X19, X2
	0x01EF4B8C MOV X21, X1
	0x01EF4B90 MOV X20, X0
	0x01EF4B94 TBNZ X8, 0x0, 0x1EF4BC4
	0x01EF4B98 ADRP X0, 0x220C000
	0x01EF4B9C LDR X0, [X0 + 0x710]
	0x01EF4BA0 BL 0x1C16CF4
	0x01EF4BA4 ADRP X0, 0x220C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x24E6000
	007 Move W8, [X22+1510]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2200000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1510], W8
	020 Move W8, [X19+32]
	021 Compare W8, 0
	022 JumpIfEqual {50}
	023 Move X22, [X21]
	024 Move X0, [X19+24]
	025 Move W1, [X19+16]
	026 Move W2, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Call BitStream.WriteByteAt, X0, X1, X2, X3
	030 Move W8, [X19+16]
	031 Add W8, W8, 1
	032 Move [X19+16], W8
	033 Compare X22, 0
	034 JumpIfEqual {88}
	035 Move W1, [X20]
	036 Move W2, 16
	037 Move X0, X19
	038 Call BitStream.WriteUShort, X0, X1, X2
	039 Move X1, [X21]
	040 Move W3, [X20]
	041 Move X0, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move W2, W31
	047 Move X30, [X31+48]
	048 Call BitStream.WriteByteArray, X0, X1, X2, X3
	049 Return 
	050 Move W1, 1
	051 Move X0, X19
	052 Call BitStream.InternalReadByte, X0, X1
	053 And W8, W0, 255
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W1, 8
	056 Move X0, X19
	057 Call BitStream.InternalReadByte, X0, X1
	058 Move W22, W0
	059 Move W1, 8
	060 Move X0, X19
	061 Call BitStream.InternalReadByte, X0, X1
	062 And W3, W22, 255
	063 And W8, W0, 255
	064 NotImplemented "Instruction BFM not yet implemented."
	065 Move [X20], W3
	066 Move X1, [X21]
	067 Compare X1, 0
	068 JumpIfEqual {71}
	069 Move W8, [X1+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, 0x2200000
	072 Move X8, [X8+1560]
	073 Move W1, W3
	074 Move X0, [X8]
	075 Call 0x1C17D6C
	076 Move [X21], X0
	077 Move W3, [X20]
	078 Move X1, X0
	079 Move X0, X19
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move W2, W31
	085 Move X30, [X31+48]
	086 Call BitStream.ReadByteArray, X0, X1, X2, X3
	087 Return 
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return 

Method: System.Void Serialize(ref System.Byte[] value, System.Int32 fixedSize)

Disassembly:
	0x01EF4BA8 LDR X0, [X0 + 0x718]
	0x01EF4BAC BL 0x1C16CF4
	0x01EF4BB0 ADRP X0, 0x220C000
	0x01EF4BB4 LDR X0, [X0 + 0x720]
	0x01EF4BB8 BL 0x1C16CF4
	0x01EF4BBC MOVZ W8, 0x1
	0x01EF4BC0 STRB W8, [X22 + 0x608]
	0x01EF4BC4 STR X31, [X31 + 0x8]
	0x01EF4BC8 CBZ X21, 0x1EF4CA4
	0x01EF4BCC LDR X8, [X20 + 0x18]
	0x01EF4BD0 CBZ X8, 0x1EF4CA8
	0x01EF4BD4 LDR W9, [X21 + 0x18]
	0x01EF4BD8 STR X21, [X8 + 0x18]
	0x01EF4BDC STRB W31, [X8 + 0x20]
	0x01EF4BE0 UBFM W9, W9, 0x1D, 0x1C
	0x01EF4BE4 STP W31, W9, [X8 + 0x10]
	0x01EF4BE8 CBZ X19, 0x1EF4CAC
	0x01EF4BEC LDP W2, W8, [X19 + 0x18]
	0x01EF4BF0 ADD W8, W8, 0x1
	0x01EF4BF4 CMP W2, 0x1
	0x01EF4BF8 STP W31, W8, [X19 + 0x18]
	0x01EF4BFC B.LT 0x1EF4C10
	0x01EF4C00 LDR X0, [X19 + 0x10]
	0x01EF4C04 MOV W1, W31
	0x01EF4C08 MOV X3, X31
	0x01EF4C0C BL 0x339FA34
	0x01EF4C10 ADRP X21, 0x220C000
	0x01EF4C14 LDR X21, [X21 + 0x710]
	0x01EF4C18 LDR X1, [X20 + 0x18]
	0x01EF4C1C ADD X2, X31, 0x8
	0x01EF4C20 MOV X0, X20
	0x01EF4C24 BL 0x1EF83EC
	0x01EF4C28 TBZ X0, 0x0, 0x1EF4C84
	0x01EF4C2C LDR W10, [X19 + 0x1C]
	0x01EF4C30 LDR X1, [X31 + 0x8]
	0x01EF4C34 LDR X8, [X19 + 0x10]
	0x01EF4C38 LDR X9, [X21]
	0x01EF4C3C ADD W10, W10, 0x1
	0x01EF4C40 STR W10, [X19 + 0x1C]
	0x01EF4C44 CBZ X8, 0x1EF4CA0
	0x01EF4C48 LDRSW X10, [X19 + 0x18]
	0x01EF4C4C LDR W11, [X8 + 0x18]
	0x01EF4C50 CMP W10, W11
	0x01EF4C54 B.CS 0x1EF4C6C
	0x01EF4C58 ADD W9, W10, 0x1
	0x01EF4C5C ADD X8, X8, X10, 0x3, LSL
	0x01EF4C60 STR W9, [X19 + 0x18]
	0x01EF4C64 STR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+32]
	007 Move W19, W2
	008 Move X21, X0
	009 Move X20, X1
	010 Compare W8, 0
	011 JumpIfEqual {18}
	012 Move X8, [X20]
	013 Compare X8, 0
	014 JumpIfEqual {27}
	015 Move W8, [X8+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Move W1, 1
	019 Move X0, X21
	020 Call BitStream.InternalReadByte, X0, X1
	021 And W8, W0, 255
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X21
	024 Move W1, W19
	025 Call BitStream.ReadByteArray, X0, X1
	026 Move [X20], X0
	027 Move W22, W31
	028 Move X0, [X21+24]
	029 Move W1, [X21+16]
	030 Move W2, 1
	031 Move W3, W22
	032 Call BitStream.WriteByteAt, X0, X1, X2, X3
	033 Move W8, [X21+16]
	034 Add W8, W8, 1
	035 Move [X21+16], W8
	036 Compare W22, 0
	037 JumpIfEqual {50}
	038 Move X1, [X20]
	039 Move X0, X21
	040 Move W3, W19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move W2, W31
	046 Move X30, [X31+48]
	047 Call BitStream.WriteByteArray, X0, X1, X2, X3
	048 Return 
	049 Move [X20], X31
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 

Method: System.Void Serialize(ref System.Byte[] array, ref System.Int32 length, System.Int32 fixedSize)

Disassembly:
	0x01EF4C68 B 0x1EF4C18
	0x01EF4C6C LDR X8, [X9 + 0x20]
	0x01EF4C70 LDR X8, [X8 + 0xC0]
	0x01EF4C74 LDR X2, [X8 + 0x70]
	0x01EF4C78 MOV X0, X19
	0x01EF4C7C BL 0x301BF90
	0x01EF4C80 B 0x1EF4C18
	0x01EF4C84 LDR W8, [X19 + 0x18]
	0x01EF4C88 CMP W8, 0x0
	0x01EF4C8C CSET W0, GT
	0x01EF4C90 LDP X20, X19, [X31 + 0x20]
	0x01EF4C94 LDP X22, X21, [X31 + 0x10]
	0x01EF4C98 LDR X30, [X31], #0x30
	0x01EF4C9C RET
	0x01EF4CA0 BL 0x1C16F20
	0x01EF4CA4 BL 0x1C16F20
	0x01EF4CA8 BL 0x1C16F20
	0x01EF4CAC BL 0x1C16F20
	0x01EF4CB0 B 0x1EF4CC0
	0x01EF4CB4 B 0x1EF4CC0
	0x01EF4CB8 B 0x1EF4CC0
	0x01EF4CBC B 0x1EF4CC0
	0x01EF4CC0 MOV X19, X0
	0x01EF4CC4 CMP W1, 0x1
	0x01EF4CC8 B.NE 0x1EF4D28
	0x01EF4CCC MOV X0, X19
	0x01EF4CD0 BL 0x3EB1AD0
	0x01EF4CD4 MOV X19, X0
	0x01EF4CD8 ADRP X0, 0x21FF000
	0x01EF4CDC LDR X0, [X0 + 0x7D0]
	0x01EF4CE0 BL 0x1C16D08
	0x01EF4CE4 LDR X8, [X19]
	0x01EF4CE8 LDR X1, [X8]
	0x01EF4CEC BL 0x1C17270
	0x01EF4CF0 TBZ X0, 0x0, 0x1EF4D00
	0x01EF4CF4 BL 0x3EB1AE0
	0x01EF4CF8 MOV W0, W31
	0x01EF4CFC B 0x1EF4C90
	0x01EF4D00 MOVZ W0, 0x8
	0x01EF4D04 BL 0x3EB1AF0
	0x01EF4D08 LDR X8, [X19]
	0x01EF4D0C STR X8, [X0]
	0x01EF4D10 ADRP X1, 0x1FC0000
	0x01EF4D14 ADD X1, X1, 0xE58
	0x01EF4D18 MOV X2, X31
	0x01EF4D1C BL 0x3EB1B00
	0x01EF4D20 MOV X19, X0
	0x01EF4D24 BL 0x3EB1AE0
	0x01EF4D28 MOV X0, X19
	0x01EF4D2C BL 0x1D2C690
	0x01EF4D30 BL 0x1990590
	0x01EF4D34 SUB X31, X31, 0x40
	0x01EF4D38 STP X30, X23, [X31 + 0x10]
	0x01EF4D3C STP X22, X21, [X31 + 0x20]
	0x01EF4D40 STP X20, X19, [X31 + 0x30]
	0x01EF4D44 ADRP X23, 0x24E5000
	0x01EF4D48 LDRB W8, [X23 + 0x5ED]
	0x01EF4D4C MOV W20, W3
	0x01EF4D50 MOV X19, X2
	0x01EF4D54 MOV X21, X1
	0x01EF4D58 MOV X22, X0
	0x01EF4D5C TBNZ X8, 0x0, 0x1EF4D80
	0x01EF4D60 ADRP X0, 0x220C000
	0x01EF4D64 LDR X0, [X0 + 0x728]
	0x01EF4D68 BL 0x1C16CF4
	0x01EF4D6C ADRP X0, 0x220C000
	0x01EF4D70 LDR X0, [X0 + 0x730]
	0x01EF4D74 BL 0x1C16CF4
	0x01EF4D78 MOVZ W8, 0x1
	0x01EF4D7C STRB W8, [X23 + 0x5ED]
	0x01EF4D80 MOV X0, X22
	0x01EF4D84 STR X31, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x24E6000
	008 Move W8, [X23+1511]
	009 Move W19, W3
	010 Move X22, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2200000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1511], W8
	022 Move [X22], W19
	023 Move W8, [X20+32]
	024 Compare W8, 0
	025 JumpIfEqual {32}
	026 Move X8, [X21]
	027 Compare X8, 0
	028 JumpIfEqual {60}
	029 Move W8, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move W1, 1
	033 Move X0, X20
	034 Call BitStream.InternalReadByte, X0, X1
	035 And W8, W0, 255
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X1, [X21]
	038 Compare X1, 0
	039 JumpIfEqual {42}
	040 Move W8, [X1+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, 0x2200000
	043 Move X8, [X8+1560]
	044 Move W1, W19
	045 Move X0, [X8]
	046 Call 0x1C17D6C
	047 Move X1, X0
	048 Move [X21], X0
	049 Move X0, X20
	050 Move W3, W19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move W2, W31
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Call BitStream.ReadByteArray, X0, X1, X2, X3
	059 Return 
	060 Move W22, W31
	061 Move X0, [X20+24]
	062 Move W1, [X20+16]
	063 Move W2, 1
	064 Move W3, W22
	065 Call BitStream.WriteByteAt, X0, X1, X2, X3
	066 Move W8, [X20+16]
	067 Add W8, W8, 1
	068 Move [X20+16], W8
	069 Compare W22, 0
	070 JumpIfEqual {84}
	071 Move X1, [X21]
	072 Move X0, X20
	073 Move W3, W19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move W2, W31
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Call BitStream.WriteByteArray, X0, X1, X2, X3
	082 Return 
	083 Move [X21], X31
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 Return 

Method: System.Void SerializeArrayLength(ref T[] array)

Disassembly:
	0x021A0FF0 LDR X8, [X0 + 0x38]
	0x021A0FF4 MOV X19, X0
	0x021A0FF8 CBNZ X8, 0x21A1008
	0x021A0FFC MOV X0, X19
	0x021A1000 BL 0x1C5C6E0
	0x021A1004 LDR X8, [X19 + 0x38]
	0x021A1008 LDR X0, [X8 + 0x8]
	0x021A100C LDRB W8, [X0 + 0x135]
	0x021A1010 TBNZ X8, 0x0, 0x21A1018
	0x021A1014 BL 0x1C5C684
	0x021A1018 LDR W8, [X0 + 0xE0]
	0x021A101C CBNZ W8, 0x21A1024
	0x021A1020 BL 0x1C16DFC
	0x021A1024 LDR X8, [X19 + 0x38]
	0x021A1028 LDR X0, [X8 + 0x8]
	0x021A102C LDRB W8, [X0 + 0x135]
	0x021A1030 TBNZ X8, 0x0, 0x21A1038
	0x021A1034 BL 0x1C5C684
	0x021A1038 LDR X8, [X0 + 0xB8]
	0x021A103C LDR X0, [X8]
	0x021A1040 LDP X30, X19, [X31], #0x10
	0x021A1044 RET
	0x021A1048 STP X30, X19, [X31 - 0x10]!
	0x021A104C LDR X8, [X0 + 0x38]
	0x021A1050 MOV X19, X0
	0x021A1054 CBNZ X8, 0x21A1064
	0x021A1058 MOV X0, X19
	0x021A105C BL 0x1C5C6E0
	0x021A1060 LDR X8, [X19 + 0x38]
	0x021A1064 LDR X0, [X8 + 0x8]
	0x021A1068 LDRB W8, [X0 + 0x135]
	0x021A106C TBNZ X8, 0x0, 0x21A1074
	0x021A1070 BL 0x1C5C684
	0x021A1074 LDR W8, [X0 + 0xE0]
	0x021A1078 CBNZ W8, 0x21A1080
	0x021A107C BL 0x1C16DFC
	0x021A1080 LDR X8, [X19 + 0x38]
	0x021A1084 LDR X0, [X8 + 0x8]
	0x021A1088 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move W8, [X20+32]
	014 Compare W8, 0
	015 JumpIfEqual {20}
	016 Move X8, [X19]
	017 Compare X8, 0
	018 JumpIfEqual {43}
	019 Move W1, [X8+24]
	020 Move X0, X20
	021 Move X1, X31
	022 Call BitStream.ReadInt, X0
	023 Move X8, [X21+56]
	024 Move W20, W0
	025 Move X8, [X8+8]
	026 Move W9, [X8+309]
	027 Move TEMP, X9
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X8
	032 Call 0x1C5D684
	033 Move X8, X0
	034 Move X0, X8
	035 Move W1, W20
	036 Call 0x1C17D6C
	037 Move [X19], X0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Move W1, W31
	044 Move X0, X20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X2, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call BitStream.WriteInt, X0, X1
	051 Return 

Method: System.Void SerializeArray(ref T[] array, Fusion.Protocol.BitStream/ArrayElementSerializer`1<T> serializer)

Disassembly:
	0x021A0EE8 MOV X0, X19
	0x021A0EEC BL 0x1C5C6E0
	0x021A0EF0 LDR X8, [X19 + 0x38]
	0x021A0EF4 LDR X0, [X8 + 0x8]
	0x021A0EF8 LDRB W8, [X0 + 0x135]
	0x021A0EFC TBNZ X8, 0x0, 0x21A0F04
	0x021A0F00 BL 0x1C5C684
	0x021A0F04 LDR W8, [X0 + 0xE0]
	0x021A0F08 CBNZ W8, 0x21A0F10
	0x021A0F0C BL 0x1C16DFC
	0x021A0F10 LDR X8, [X19 + 0x38]
	0x021A0F14 LDR X0, [X8 + 0x8]
	0x021A0F18 LDRB W8, [X0 + 0x135]
	0x021A0F1C TBNZ X8, 0x0, 0x21A0F24
	0x021A0F20 BL 0x1C5C684
	0x021A0F24 LDR X8, [X0 + 0xB8]
	0x021A0F28 LDR X0, [X8]
	0x021A0F2C LDP X30, X19, [X31], #0x10
	0x021A0F30 RET
	0x021A0F34 STP X30, X19, [X31 - 0x10]!
	0x021A0F38 LDR X8, [X0 + 0x38]
	0x021A0F3C MOV X19, X0
	0x021A0F40 CBNZ X8, 0x21A0F50
	0x021A0F44 MOV X0, X19
	0x021A0F48 BL 0x1C5C6E0
	0x021A0F4C LDR X8, [X19 + 0x38]
	0x021A0F50 LDR X0, [X8 + 0x8]
	0x021A0F54 LDRB W8, [X0 + 0x135]
	0x021A0F58 TBNZ X8, 0x0, 0x21A0F60
	0x021A0F5C BL 0x1C5C684
	0x021A0F60 LDR W8, [X0 + 0xE0]
	0x021A0F64 CBNZ W8, 0x21A0F6C
	0x021A0F68 BL 0x1C16DFC
	0x021A0F6C LDR X8, [X19 + 0x38]
	0x021A0F70 LDR X0, [X8 + 0x8]
	0x021A0F74 LDRB W8, [X0 + 0x135]
	0x021A0F78 TBNZ X8, 0x0, 0x21A0F80
	0x021A0F7C BL 0x1C5C684
	0x021A0F80 LDR X8, [X0 + 0xB8]
	0x021A0F84 LDR X0, [X8]
	0x021A0F88 LDP X30, X19, [X31], #0x10
	0x021A0F8C RET
	0x021A0F90 STP X30, X19, [X31 - 0x10]!
	0x021A0F94 LDR X8, [X0 + 0x38]
	0x021A0F98 MOV X19, X0
	0x021A0F9C CBNZ X8, 0x21A0FAC
	0x021A0FA0 MOV X0, X19
	0x021A0FA4 BL 0x1C5C6E0
	0x021A0FA8 LDR X8, [X19 + 0x38]
	0x021A0FAC LDR X0, [X8 + 0x8]
	0x021A0FB0 LDRB W8, [X0 + 0x135]
	0x021A0FB4 TBNZ X8, 0x0, 0x21A0FBC
	0x021A0FB8 BL 0x1C5C684
	0x021A0FBC LDR W8, [X0 + 0xE0]
	0x021A0FC0 CBNZ W8, 0x21A0FC8
	0x021A0FC4 BL 0x1C16DFC
	0x021A0FC8 LDR X8, [X19 + 0x38]
	0x021A0FCC LDR X0, [X8 + 0x8]
	0x021A0FD0 LDRB W8, [X0 + 0x135]
	0x021A0FD4 TBNZ X8, 0x0, 0x21A0FDC
	0x021A0FD8 BL 0x1C5C684
	0x021A0FDC LDR X8, [X0 + 0xB8]
	0x021A0FE0 LDR X0, [X8]
	0x021A0FE4 LDP X30, X19, [X31], #0x10
	0x021A0FE8 RET
	0x021A0FEC STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X3
	008 Move X20, X2
	009 Move X21, X1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move W8, [X22+32]
	016 Compare W8, 0
	017 JumpIfEqual {22}
	018 Move X8, [X21]
	019 Compare X8, 0
	020 JumpIfEqual {42}
	021 Move W1, [X8+24]
	022 Move X0, X22
	023 Move X1, X31
	024 Call BitStream.ReadInt, X0
	025 Move X8, [X19+56]
	026 Move W22, W0
	027 Move X8, [X8+8]
	028 Move W9, [X8+309]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X8
	034 Call 0x1C5D684
	035 Move X8, X0
	036 Move X0, X8
	037 Move W1, W22
	038 Call 0x1C17D6C
	039 Move [X21], X0
	040 Compare X0, 0
	041 JumpIfNotEqual {49}
	042 Move W1, W31
	043 Move X0, X22
	044 Move X2, X31
	045 Call BitStream.WriteInt, X0, X1
	046 Move X0, [X21]
	047 Compare X0, 0
	048 JumpIfEqual {70}
	049 Move X22, X31
	050 Move W8, [X0+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X20, 0
	053 JumpIfEqual {69}
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X19+56]
	056 Move X9, [X0]
	057 Move X2, [X8+32]
	058 Move W8, [X9+260]
	059 Move X9, [X2]
	060 NotImplemented "Instruction NOP not yet implemented."
	061 NotImplemented "Instruction MADD not yet implemented."
	062 Add X1, X8, 32
	063 Move X0, X20
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X0, [X21]
	066 Add X22, X22, 1
	067 Compare X0, 0
	068 JumpIfNotEqual {50}
	069 Call 0x1C17F20
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 
	076 Call 0x1C17F28

Method: System.Void Serialize(System.Byte* v)

Disassembly:
	0x01EF4D88 STR W31, [X31 + 0x4]
	0x01EF4D8C BL 0x1EF44F8
	0x01EF4D90 TBZ X0, 0x0, 0x1EF4E14
	0x01EF4D94 LDR X0, [X22 + 0x20]
	0x01EF4D98 CBZ X0, 0x1EF4E4C
	0x01EF4D9C ADRP X8, 0x220C000
	0x01EF4DA0 LDR X8, [X8 + 0x728]
	0x01EF4DA4 LDR X1, [X8]
	0x01EF4DA8 BL 0x24EF19C
	0x01EF4DAC LDR X8, [X22]
	0x01EF4DB0 MOV X23, X0
	0x01EF4DB4 ADD X2, X31, 0x8
	0x01EF4DB8 ADD X3, X31, 0x4
	0x01EF4DBC LDR X9, [X8 + 0x228]
	0x01EF4DC0 LDR X4, [X8 + 0x230]
	0x01EF4DC4 MOV X0, X22
	0x01EF4DC8 BLR X9
	0x01EF4DCC LDR W8, [X31 + 0x4]
	0x01EF4DD0 CMP W8, 0x1
	0x01EF4DD4 B.LT 0x1EF4E14
	0x01EF4DD8 STR W23, [X21]
	0x01EF4DDC ADRP X9, 0x220C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+32]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {17}
	009 Move X0, [X19+24]
	010 Move W1, [X19+16]
	011 Move W3, [X20]
	012 Move W2, 8
	013 Call BitStream.WriteByteAt, X0, X1, X2, X3
	014 Move W8, [X19+16]
	015 Add W8, W8, 8
	016 Move [X19+16], W8
	017 Move W1, 8
	018 Move X0, X19
	019 Call BitStream.InternalReadByte, X0, X1
	020 Move [X20], W0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void Serialize(System.SByte* v)

Disassembly:
	0x01EF4DE0 LDR X9, [X9 + 0x730]
	0x01EF4DE4 CMP W8, W20
	0x01EF4DE8 CSET W0, LE
	0x01EF4DEC MOV X2, X31
	0x01EF4DF0 LDR X1, [X9]
	0x01EF4DF4 BL 0x1E3BA60
	0x01EF4DF8 LDR X8, [X31 + 0x8]
	0x01EF4DFC CBZ X8, 0x1EF4E20
	0x01EF4E00 LDR W9, [X8 + 0x18]
	0x01EF4E04 ADD X8, X8, 0x20
	0x01EF4E08 CMP W9, 0x0
	0x01EF4E0C CSEL X1, X31, X8, EQ
	0x01EF4E10 B 0x1EF4E24
	0x01EF4E14 MOVN W0, 0x0
	0x01EF4E18 STR W0, [X21]
	0x01EF4E1C B 0x1EF4E38
	0x01EF4E20 MOV X1, X31
	0x01EF4E24 LDR W2, [X31 + 0x4]
	0x01EF4E28 MOV X0, X19
	0x01EF4E2C MOV X3, X31
	0x01EF4E30 BL 0x1E35764
	0x01EF4E34 LDR W0, [X31 + 0x4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+32]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {17}
	009 Move X0, [X19+24]
	010 Move W1, [X19+16]
	011 Move W3, [X20]
	012 Move W2, 8
	013 Call BitStream.WriteByteAt, X0, X1, X2, X3
	014 Move W8, [X19+16]
	015 Add W8, W8, 8
	016 Move [X19+16], W8
	017 Move W1, 8
	018 Move X0, X19
	019 Call BitStream.InternalReadByte, X0, X1
	020 Move [X20], W0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void Serialize(System.Int16* v)

Disassembly:
	0x01EF4E38 LDP X20, X19, [X31 + 0x30]
	0x01EF4E3C LDP X22, X21, [X31 + 0x20]
	0x01EF4E40 LDP X30, X23, [X31 + 0x10]
	0x01EF4E44 ADD X31, X31, 0x40
	0x01EF4E48 RET
	0x01EF4E4C BL 0x1C16F20
	0x01EF4E50 STP X29, X30, [X31 - 0x60]!
	0x01EF4E54 STP X28, X27, [X31 + 0x10]
	0x01EF4E58 STP X26, X25, [X31 + 0x20]
	0x01EF4E5C STP X24, X23, [X31 + 0x30]
	0x01EF4E60 STP X22, X21, [X31 + 0x40]
	0x01EF4E64 STP X20, X19, [X31 + 0x50]
	0x01EF4E68 ADRP X28, 0x24E5000
	0x01EF4E6C ADRP X29, 0x220C000
	0x01EF4E70 ADRP X20, 0x220C000
	0x01EF4E74 ADRP X27, 0x220C000
	0x01EF4E78 ADRP X26, 0x220C000
	0x01EF4E7C ADRP X25, 0x220C000
	0x01EF4E80 ADRP X24, 0x220C000
	0x01EF4E84 ADRP X23, 0x220C000
	0x01EF4E88 ADRP X22, 0x220C000
	0x01EF4E8C ADRP X21, 0x220C000
	0x01EF4E90 LDR X29, [X29 + 0x738]
	0x01EF4E94 LDR X20, [X20 + 0x740]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 Compare W8, 0
	009 JumpIfEqual {19}
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W2, 16
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call BitStream.WriteUShort, X0, X1, X2
	018 Return 
	019 Move W1, 8
	020 Move X0, X19
	021 Call BitStream.InternalReadByte, X0, X1
	022 Move W21, W0
	023 Move W1, 8
	024 Move X0, X19
	025 Call BitStream.InternalReadByte, X0, X1
	026 NotImplemented "Instruction BFM not yet implemented."
	027 NotImplemented "Instruction STRH not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Void Serialize(System.UInt16* v)

Disassembly:
	0x01EF4E98 LDR X27, [X27 + 0x748]
	0x01EF4E9C LDR X26, [X26 + 0x750]
	0x01EF4EA0 LDRB W8, [X28 + 0x5EE]
	0x01EF4EA4 LDR X25, [X25 + 0x758]
	0x01EF4EA8 LDR X24, [X24 + 0x760]
	0x01EF4EAC LDR X23, [X23 + 0x768]
	0x01EF4EB0 LDR X22, [X22 + 0x770]
	0x01EF4EB4 LDR X21, [X21 + 0x778]
	0x01EF4EB8 MOV X19, X0
	0x01EF4EBC TBNZ X8, 0x0, 0x1EF4F34
	0x01EF4EC0 ADRP X0, 0x220C000
	0x01EF4EC4 LDR X0, [X0 + 0x740]
	0x01EF4EC8 BL 0x1C16CF4
	0x01EF4ECC ADRP X0, 0x220C000
	0x01EF4ED0 LDR X0, [X0 + 0x738]
	0x01EF4ED4 BL 0x1C16CF4
	0x01EF4ED8 ADRP X0, 0x220C000
	0x01EF4EDC LDR X0, [X0 + 0x770]
	0x01EF4EE0 BL 0x1C16CF4
	0x01EF4EE4 ADRP X0, 0x220C000
	0x01EF4EE8 LDR X0, [X0 + 0x768]
	0x01EF4EEC BL 0x1C16CF4
	0x01EF4EF0 ADRP X0, 0x220C000
	0x01EF4EF4 LDR X0, [X0 + 0x778]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 Compare W8, 0
	009 JumpIfEqual {19}
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W2, 16
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call BitStream.WriteUShort, X0, X1, X2
	018 Return 
	019 Move W1, 8
	020 Move X0, X19
	021 Call BitStream.InternalReadByte, X0, X1
	022 Move W21, W0
	023 Move W1, 8
	024 Move X0, X19
	025 Call BitStream.InternalReadByte, X0, X1
	026 NotImplemented "Instruction BFM not yet implemented."
	027 NotImplemented "Instruction STRH not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Void Serialize(System.Int32* v)

Disassembly:
	0x01EF4EF8 BL 0x1C16CF4
	0x01EF4EFC ADRP X0, 0x220C000
	0x01EF4F00 LDR X0, [X0 + 0x750]
	0x01EF4F04 BL 0x1C16CF4
	0x01EF4F08 ADRP X0, 0x220C000
	0x01EF4F0C LDR X0, [X0 + 0x760]
	0x01EF4F10 BL 0x1C16CF4
	0x01EF4F14 ADRP X0, 0x220C000
	0x01EF4F18 LDR X0, [X0 + 0x758]
	0x01EF4F1C BL 0x1C16CF4
	0x01EF4F20 ADRP X0, 0x220C000
	0x01EF4F24 LDR X0, [X0 + 0x748]
	0x01EF4F28 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X1
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move W1, [X19]
	008 Move W2, 32
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call BitStream.WriteUInt, X0, X1, X2
	012 Return 
	013 Move W1, 32
	014 Call BitStream.ReadUInt, X0, X1
	015 Move [X19], W0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return 

Method: System.Void Serialize(System.UInt32* v)

Disassembly:
	0x01EF4F2C MOVZ W8, 0x1
	0x01EF4F30 STRB W8, [X28 + 0x5EE]
	0x01EF4F34 LDR X0, [X29]
	0x01EF4F38 BL 0x1C16F10
	0x01EF4F3C LDR X1, [X20]
	0x01EF4F40 MOV X20, X0
	0x01EF4F44 BL 0x2AA4804
	0x01EF4F48 STR X20, [X19 + 0x10]
	0x01EF4F4C LDR X0, [X27]
	0x01EF4F50 BL 0x1C16F10
	0x01EF4F54 LDR X2, [X26]
	0x01EF4F58 MOVZ W1, 0x40
	0x01EF4F5C MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X1
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move W1, [X19]
	008 Move W2, 32
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call BitStream.WriteUInt, X0, X1, X2
	012 Return 
	013 Move W1, 32
	014 Call BitStream.ReadUInt, X0, X1
	015 Move [X19], W0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return 

Method: System.Void Serialize(System.Int64* v)

Disassembly:
	0x01EF4F60 BL 0x24EEB98
	0x01EF4F64 STR X20, [X19 + 0x18]
	0x01EF4F68 LDR X0, [X25]
	0x01EF4F6C BL 0x1C16F10
	0x01EF4F70 LDR X1, [X24]
	0x01EF4F74 MOV X20, X0
	0x01EF4F78 BL 0x24EEB18
	0x01EF4F7C STR X20, [X19 + 0x20]
	0x01EF4F80 LDR X0, [X23]
	0x01EF4F84 BL 0x1C16F10
	0x01EF4F88 LDR X2, [X22]
	0x01EF4F8C MOVZ W1, 0x40
	0x01EF4F90 MOV X20, X0
	0x01EF4F94 BL 0x301B830
	0x01EF4F98 STR X20, [X19 + 0x28]
	0x01EF4F9C LDR X0, [X21]
	0x01EF4FA0 BL 0x1C16F10
	0x01EF4FA4 MOV X20, X0
	0x01EF4FA8 BL 0x1EF4FD4
	0x01EF4FAC STR X20, [X19 + 0x30]
	0x01EF4FB0 MOV X0, X19
	0x01EF4FB4 LDP X20, X19, [X31 + 0x50]
	0x01EF4FB8 LDP X22, X21, [X31 + 0x40]
	0x01EF4FBC LDP X24, X23, [X31 + 0x30]
	0x01EF4FC0 LDP X26, X25, [X31 + 0x20]
	0x01EF4FC4 LDP X28, X27, [X31 + 0x10]
	0x01EF4FC8 MOV X1, X31
	0x01EF4FCC LDP X29, X30, [X31], #0x60
	0x01EF4FD0 B 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 Compare W8, 0
	009 JumpIfEqual {24}
	010 Move W1, [X20]
	011 Move W21, [X20+4]
	012 Move W2, 32
	013 Move X0, X19
	014 Call BitStream.WriteUInt, X0, X1, X2
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move W2, 32
	019 Move W1, W21
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call BitStream.WriteUInt, X0, X1, X2
	023 Return 
	024 Move W1, 32
	025 Move X0, X19
	026 Call BitStream.ReadUInt, X0, X1
	027 Move W21, W0
	028 Move W1, 32
	029 Move X0, X19
	030 Call BitStream.ReadUInt, X0, X1
	031 Move W8, W21
	032 NotImplemented "Instruction BFM not yet implemented."
	033 Move [X20], X8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Void Serialize(System.UInt64* v)

Disassembly:
	0x01EF4FD4 STP X29, X30, [X31 - 0x60]!
	0x01EF4FD8 STP X28, X27, [X31 + 0x10]
	0x01EF4FDC STP X26, X25, [X31 + 0x20]
	0x01EF4FE0 STP X24, X23, [X31 + 0x30]
	0x01EF4FE4 STP X22, X21, [X31 + 0x40]
	0x01EF4FE8 STP X20, X19, [X31 + 0x50]
	0x01EF4FEC ADRP X20, 0x24E5000
	0x01EF4FF0 ADRP X29, 0x21FF000
	0x01EF4FF4 ADRP X28, 0x220C000
	0x01EF4FF8 ADRP X27, 0x220C000
	0x01EF4FFC ADRP X26, 0x220C000
	0x01EF5000 ADRP X25, 0x220B000
	0x01EF5004 ADRP X24, 0x220B000
	0x01EF5008 ADRP X23, 0x2208000
	0x01EF500C ADRP X22, 0x2208000
	0x01EF5010 LDR X29, [X29 + 0x618]
	0x01EF5014 LDR X28, [X28 + 0x780]
	0x01EF5018 LDR X27, [X27 + 0x788]
	0x01EF501C LDR X26, [X26 + 0x790]
	0x01EF5020 LDR X25, [X25 + 0x798]
	0x01EF5024 LDR X24, [X24 + 0x7A0]
	0x01EF5028 LDR X23, [X23 + 0x258]
	0x01EF502C LDR X22, [X22 + 0xA0]
	0x01EF5030 LDRB W8, [X20 + 0x607]
	0x01EF5034 MOV X19, X0
	0x01EF5038 TBNZ X8, 0x0, 0x1EF5104
	0x01EF503C ADRP X0, 0x220B000
	0x01EF5040 LDR X0, [X0 + 0x780]
	0x01EF5044 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 Compare W8, 0
	009 JumpIfEqual {24}
	010 Move W1, [X20]
	011 Move W21, [X20+4]
	012 Move W2, 32
	013 Move X0, X19
	014 Call BitStream.WriteUInt, X0, X1, X2
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move W2, 32
	019 Move W1, W21
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call BitStream.WriteUInt, X0, X1, X2
	023 Return 
	024 Move W1, 32
	025 Move X0, X19
	026 Call BitStream.ReadUInt, X0, X1
	027 Move W21, W0
	028 Move W1, 32
	029 Move X0, X19
	030 Call BitStream.ReadUInt, X0, X1
	031 Move W8, W21
	032 NotImplemented "Instruction BFM not yet implemented."
	033 Move [X20], X8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Void Serialize(System.UInt32* v, System.Int32 bits)

Disassembly:
	0x01EF5048 ADRP X0, 0x21FE000
	0x01EF504C LDR X0, [X0 + 0x618]
	0x01EF5050 BL 0x1C16CF4
	0x01EF5054 ADRP X0, 0x2208000
	0x01EF5058 LDR X0, [X0 + 0xB0]
	0x01EF505C BL 0x1C16CF4
	0x01EF5060 ADRP X0, 0x220B000
	0x01EF5064 LDR X0, [X0 + 0x7A0]
	0x01EF5068 BL 0x1C16CF4
	0x01EF506C ADRP X0, 0x220B000
	0x01EF5070 LDR X0, [X0 + 0x790]
	0x01EF5074 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X1
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move W1, [X19]
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call BitStream.WriteUInt, X0, X1, X2
	011 Return 
	012 Move W1, W2
	013 Call BitStream.ReadUInt, X0, X1
	014 Move [X19], W0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Void Serialize(System.Int32* v, System.Int32 bits)

Disassembly:
	0x01EF5078 ADRP X0, 0x220B000
	0x01EF507C LDR X0, [X0 + 0x788]
	0x01EF5080 BL 0x1C16CF4
	0x01EF5084 ADRP X0, 0x220B000
	0x01EF5088 LDR X0, [X0 + 0x798]
	0x01EF508C BL 0x1C16CF4
	0x01EF5090 ADRP X0, 0x220B000
	0x01EF5094 LDR X0, [X0 + 0x7A8]
	0x01EF5098 BL 0x1C16CF4
	0x01EF509C ADRP X0, 0x220B000
	0x01EF50A0 LDR X0, [X0 + 0x7B0]
	0x01EF50A4 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move X19, X1
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move W1, [X19]
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call BitStream.WriteUInt, X0, X1, X2
	011 Return 
	012 Move W1, W2
	013 Call BitStream.ReadUInt, X0, X1
	014 Move [X19], W0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Void SerializeBuffer(System.Byte* buffer, System.Int32 length)

Disassembly:
	0x01EF50A8 ADRP X0, 0x220B000
	0x01EF50AC LDR X0, [X0 + 0x7B8]
	0x01EF50B0 BL 0x1C16CF4
	0x01EF50B4 ADRP X0, 0x2208000
	0x01EF50B8 LDR X0, [X0 + 0x258]
	0x01EF50BC BL 0x1C16CF4
	0x01EF50C0 ADRP X0, 0x2208000
	0x01EF50C4 LDR X0, [X0 + 0xA0]
	0x01EF50C8 BL 0x1C16CF4
	0x01EF50CC ADRP X0, 0x220B000
	0x01EF50D0 LDR X0, [X0 + 0x7C0]
	0x01EF50D4 BL 0x1C16CF4
	0x01EF50D8 ADRP X0, 0x2208000
	0x01EF50DC LDR X0, [X0 + 0xA8]
	0x01EF50E0 BL 0x1C16CF4
	0x01EF50E4 ADRP X0, 0x2208000
	0x01EF50E8 LDR X0, [X0 + 0xB8]
	0x01EF50EC BL 0x1C16CF4
	0x01EF50F0 ADRP X0, 0x220B000
	0x01EF50F4 LDR X0, [X0 + 0x7C8]
	0x01EF50F8 BL 0x1C16CF4
	0x01EF50FC MOVZ W8, 0x1
	0x01EF5100 STRB W8, [X20 + 0x607]
	0x01EF5104 LDR X0, [X29]
	0x01EF5108 MOVZ W1, 0x2000
	0x01EF510C BL 0x1C16D6C
	0x01EF5110 LDR X8, [X28]
	0x01EF5114 MOV X20, X0
	0x01EF5118 MOV X0, X8
	0x01EF511C BL 0x1C16F10
	0x01EF5120 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Compare W8, 0
	010 Invalid "Jump target not found in method."
	011 Move W1, [X19+16]
	012 Move W21, W2
	013 Move X0, [X19+24]
	014 Move W3, [X20+1]
	015 Move W2, 8
	016 Call BitStream.WriteByteAt, X0, X1, X2, X3
	017 Move W8, [X19+16]
	018 Subtract X21, X21, 1
	019 Add W1, W8, 8
	020 Move [X19+16], W1
	021 Move W21, W2
	022 Move W1, 8
	023 Move X0, X19
	024 Call BitStream.InternalReadByte, X0, X1
	025 Subtract X21, X21, 1
	026 Move [X20+1], W0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void SerializeBuffer(System.SByte* buffer, System.Int32 length)

Disassembly:
	0x01EF5124 MOV X21, X0
	0x01EF5128 BL 0x1EF1D20
	0x01EF512C STR X21, [X19 + 0x10]
	0x01EF5130 LDR X0, [X29]
	0x01EF5134 MOV W1, W31
	0x01EF5138 BL 0x1C16D6C
	0x01EF513C LDR X8, [X28]
	0x01EF5140 MOV X20, X0
	0x01EF5144 MOV X0, X8
	0x01EF5148 BL 0x1C16F10
	0x01EF514C MOV X1, X20
	0x01EF5150 MOV X21, X0
	0x01EF5154 BL 0x1EF1D20
	0x01EF5158 STR X21, [X19 + 0x18]
	0x01EF515C LDR X0, [X27]
	0x01EF5160 BL 0x1C16F10
	0x01EF5164 LDR X1, [X26]
	0x01EF5168 MOV X20, X0
	0x01EF516C BL 0x2A8F2E0
	0x01EF5170 STR X20, [X19 + 0x20]
	0x01EF5174 LDR X0, [X25]
	0x01EF5178 BL 0x1C16F10
	0x01EF517C LDR X1, [X24]
	0x01EF5180 MOV X20, X0
	0x01EF5184 BL 0x29D2C7C
	0x01EF5188 MOV X0, X19
	0x01EF518C MOV X1, X31
	0x01EF5190 STR X20, [X19 + 0x28]
	0x01EF5194 BL 0x33BDD8C
	0x01EF5198 LDR X0, [X23]
	0x01EF519C BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Compare W8, 0
	010 Invalid "Jump target not found in method."
	011 Move W1, [X19+16]
	012 Move W21, W2
	013 Move X0, [X19+24]
	014 Move W3, [X20+1]
	015 Move W2, 8
	016 Call BitStream.WriteByteAt, X0, X1, X2, X3
	017 Move W8, [X19+16]
	018 Subtract X21, X21, 1
	019 Add W1, W8, 8
	020 Move [X19+16], W1
	021 Move W21, W2
	022 Move W1, 8
	023 Move X0, X19
	024 Call BitStream.InternalReadByte, X0, X1
	025 Subtract X21, X21, 1
	026 Move [X20+1], W0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void SerializeBuffer(System.Int16* buffer, System.Int32 length)

Disassembly:
	0x01EF51A0 MOVZ W1, 0xA
	0x01EF51A4 MOV X2, X31
	0x01EF51A8 MOV X20, X0
	0x01EF51AC BL 0x1EF5398
	0x01EF51B0 MOVZ W1, 0x1
	0x01EF51B4 MOV X0, X19
	0x01EF51B8 MOV X2, X20
	0x01EF51BC BL 0x1EF8344
	0x01EF51C0 LDR X0, [X22]
	0x01EF51C4 BL 0x1C16F10
	0x01EF51C8 MOVZ W1, 0xA
	0x01EF51CC MOV X2, X31
	0x01EF51D0 MOV X20, X0
	0x01EF51D4 BL 0x1EF5398
	0x01EF51D8 MOVZ W1, 0x2
	0x01EF51DC MOV X0, X19
	0x01EF51E0 MOV X2, X20
	0x01EF51E4 BL 0x1EF8344
	0x01EF51E8 ADRP X8, 0x2208000
	0x01EF51EC LDR X8, [X8 + 0xA8]
	0x01EF51F0 LDR X0, [X8]
	0x01EF51F4 BL 0x1C16F10
	0x01EF51F8 MOVZ W1, 0xA
	0x01EF51FC MOV X2, X31
	0x01EF5200 MOV X20, X0
	0x01EF5204 BL 0x1EF5398
	0x01EF5208 MOVZ W1, 0x3
	0x01EF520C MOV X0, X19
	0x01EF5210 MOV X2, X20
	0x01EF5214 BL 0x1EF8344
	0x01EF5218 ADRP X8, 0x220B000
	0x01EF521C LDR X8, [X8 + 0x7A8]
	0x01EF5220 LDR X0, [X8]
	0x01EF5224 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+32]
	007 Move X19, X0
	008 Move X20, X1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Compare W8, 0
	011 Invalid "Jump target not found in method."
	012 Move W21, W2
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 Move W2, 16
	015 Move X0, X19
	016 Call BitStream.WriteUShort, X0, X1, X2
	017 Subtract X21, X21, 1
	018 Move W22, W2
	019 Move W1, 8
	020 Move X0, X19
	021 Call BitStream.InternalReadByte, X0, X1
	022 Move W21, W0
	023 Move W1, 8
	024 Move X0, X19
	025 Call BitStream.InternalReadByte, X0, X1
	026 NotImplemented "Instruction BFM not yet implemented."
	027 Subtract X22, X22, 1
	028 NotImplemented "Instruction STRH not yet implemented."
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return 

Method: System.Void SerializeBuffer(System.UInt16* buffer, System.Int32 length)

Disassembly:
	0x01EF5228 MOVZ W1, 0xA
	0x01EF522C MOV X2, X31
	0x01EF5230 MOV X20, X0
	0x01EF5234 BL 0x1EF5398
	0x01EF5238 MOVZ W1, 0x4
	0x01EF523C MOV X0, X19
	0x01EF5240 MOV X2, X20
	0x01EF5244 BL 0x1EF8344
	0x01EF5248 ADRP X8, 0x220B000
	0x01EF524C LDR X8, [X8 + 0x7C8]
	0x01EF5250 LDR X0, [X8]
	0x01EF5254 BL 0x1C16F10
	0x01EF5258 MOVZ W1, 0xA
	0x01EF525C MOV X2, X31
	0x01EF5260 MOV X20, X0
	0x01EF5264 BL 0x1EF5398
	0x01EF5268 MOVZ W1, 0x5
	0x01EF526C MOV X0, X19
	0x01EF5270 MOV X2, X20
	0x01EF5274 BL 0x1EF8344
	0x01EF5278 ADRP X8, 0x2208000
	0x01EF527C LDR X8, [X8 + 0xB8]
	0x01EF5280 LDR X0, [X8]
	0x01EF5284 BL 0x1C16F10
	0x01EF5288 MOVZ W1, 0xA
	0x01EF528C MOV X2, X31
	0x01EF5290 MOV X20, X0
	0x01EF5294 BL 0x1EF5398
	0x01EF5298 MOVZ W1, 0x6
	0x01EF529C MOV X0, X19
	0x01EF52A0 MOV X2, X20
	0x01EF52A4 BL 0x1EF8344
	0x01EF52A8 ADRP X8, 0x220B000
	0x01EF52AC LDR X8, [X8 + 0x7B8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+32]
	007 Move X19, X0
	008 Move X20, X1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Compare W8, 0
	011 Invalid "Jump target not found in method."
	012 Move W21, W2
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 Move W2, 16
	015 Move X0, X19
	016 Call BitStream.WriteUShort, X0, X1, X2
	017 Subtract X21, X21, 1
	018 Move W22, W2
	019 Move W1, 8
	020 Move X0, X19
	021 Call BitStream.InternalReadByte, X0, X1
	022 Move W21, W0
	023 Move W1, 8
	024 Move X0, X19
	025 Call BitStream.InternalReadByte, X0, X1
	026 NotImplemented "Instruction BFM not yet implemented."
	027 Subtract X22, X22, 1
	028 NotImplemented "Instruction STRH not yet implemented."
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return 

Method: System.Void SerializeBuffer(System.Int32* buffer, System.Int32 length)

Disassembly:
	0x01EF52B0 LDR X0, [X8]
	0x01EF52B4 BL 0x1C16F10
	0x01EF52B8 MOVZ W1, 0xA
	0x01EF52BC MOV X2, X31
	0x01EF52C0 MOV X20, X0
	0x01EF52C4 BL 0x1EF5398
	0x01EF52C8 MOVZ W1, 0x7
	0x01EF52CC MOV X0, X19
	0x01EF52D0 MOV X2, X20
	0x01EF52D4 BL 0x1EF8344
	0x01EF52D8 ADRP X8, 0x220B000
	0x01EF52DC LDR X8, [X8 + 0x7C0]
	0x01EF52E0 LDR X0, [X8]
	0x01EF52E4 BL 0x1C16F10
	0x01EF52E8 MOVZ W1, 0xA
	0x01EF52EC MOV X2, X31
	0x01EF52F0 MOV X20, X0
	0x01EF52F4 BL 0x1EF5398
	0x01EF52F8 MOVZ W1, 0x8
	0x01EF52FC MOV X0, X19
	0x01EF5300 MOV X2, X20
	0x01EF5304 BL 0x1EF8344
	0x01EF5308 ADRP X8, 0x2208000
	0x01EF530C LDR X8, [X8 + 0xB0]
	0x01EF5310 LDR X0, [X8]
	0x01EF5314 BL 0x1C16F10
	0x01EF5318 MOVZ W1, 0xA

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Compare W8, 0
	010 Invalid "Jump target not found in method."
	011 Move W21, W2
	012 Move W1, [X20+4]
	013 Move W2, 32
	014 Move X0, X19
	015 Call BitStream.WriteUInt, X0, X1, X2
	016 Subtract X21, X21, 1
	017 Move W21, W2
	018 Move W1, 32
	019 Move X0, X19
	020 Call BitStream.ReadUInt, X0, X1
	021 Subtract X21, X21, 1
	022 Move [X20+4], W0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Void SerializeBuffer(System.UInt32* buffer, System.Int32 length)

Disassembly:
	0x01EF531C MOV X2, X31
	0x01EF5320 MOV X20, X0
	0x01EF5324 BL 0x1EF5398
	0x01EF5328 MOVZ W1, 0x9
	0x01EF532C MOV X0, X19
	0x01EF5330 MOV X2, X20
	0x01EF5334 BL 0x1EF8344
	0x01EF5338 ADRP X8, 0x220B000
	0x01EF533C LDR X8, [X8 + 0x7B0]
	0x01EF5340 LDR X0, [X8]
	0x01EF5344 BL 0x1C16F10
	0x01EF5348 ADRP X8, 0xFFFFFFFFFEBF9000
	0x01EF534C LDR V0, [X8 + 0x150]
	0x01EF5350 MOVZ W1, 0xA
	0x01EF5354 MOV X2, X31
	0x01EF5358 MOV X20, X0
	0x01EF535C STR D0, [X0 + 0x28]
	0x01EF5360 BL 0x1EF5398
	0x01EF5364 MOV X0, X19
	0x01EF5368 MOV X2, X20
	0x01EF536C LDP X20, X19, [X31 + 0x50]
	0x01EF5370 LDP X22, X21, [X31 + 0x40]
	0x01EF5374 LDP X24, X23, [X31 + 0x30]
	0x01EF5378 LDP X26, X25, [X31 + 0x20]
	0x01EF537C LDP X28, X27, [X31 + 0x10]
	0x01EF5380 MOVZ W1, 0xA
	0x01EF5384 LDP X29, X30, [X31], #0x60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+32]
	006 Move X19, X0
	007 Move X20, X1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Compare W8, 0
	010 Invalid "Jump target not found in method."
	011 Move W21, W2
	012 Move W1, [X20+4]
	013 Move W2, 32
	014 Move X0, X19
	015 Call BitStream.WriteUInt, X0, X1, X2
	016 Subtract X21, X21, 1
	017 Move W21, W2
	018 Move W1, 32
	019 Move X0, X19
	020 Call BitStream.ReadUInt, X0, X1
	021 Subtract X21, X21, 1
	022 Move [X20+4], W0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Void SerializeBuffer(System.Int64* buffer, System.Int32 length)

Disassembly:
	0x01EF5388 B 0x1EF8344
	0x01EF538C MOVZ W1, 0xA
	0x01EF5390 MOV X2, X31
	0x01EF5394 B 0x1EF5398
	0x01EF5398 STP X30, X23, [X31 - 0x30]!
	0x01EF539C STP X22, X21, [X31 + 0x10]
	0x01EF53A0 STP X20, X19, [X31 + 0x20]
	0x01EF53A4 ADRP X22, 0x24E4000
	0x01EF53A8 ADRP X23, 0x2200000
	0x01EF53AC LDRB W8, [X22 + 0x5F3]
	0x01EF53B0 LDR X23, [X23 + 0x278]
	0x01EF53B4 MOV X20, X2
	0x01EF53B8 MOV W21, W1
	0x01EF53BC MOV X19, X0
	0x01EF53C0 TBNZ X8, 0x0, 0x1EF53E4
	0x01EF53C4 ADRP X0, 0x2200000
	0x01EF53C8 LDR X0, [X0 + 0x278]
	0x01EF53CC BL 0x1C16CF4
	0x01EF53D0 ADRP X0, 0x2206000
	0x01EF53D4 LDR X0, [X0 + 0x7C8]
	0x01EF53D8 BL 0x1C16CF4
	0x01EF53DC MOVZ W8, 0x1
	0x01EF53E0 STRB W8, [X22 + 0x5F3]
	0x01EF53E4 LDR X8, [X23]
	0x01EF53E8 MOV X0, X19
	0x01EF53EC MOV X1, X31
	0x01EF53F0 LDR X8, [X8 + 0xB8]
	0x01EF53F4 LDR X8, [X8]
	0x01EF53F8 STR X8, [X19 + 0x20]
	0x01EF53FC BL 0x33BDD8C
	0x01EF5400 STRB W21, [X19 + 0x10]
	0x01EF5404 CBNZ X20, 0x1EF542C
	0x01EF5408 ADRP X8, 0x2206000
	0x01EF540C LDR X8, [X8 + 0x7C8]
	0x01EF5410 LDR X0, [X8]
	0x01EF5414 LDR W8, [X0 + 0xE0]
	0x01EF5418 CBNZ W8, 0x1EF5420
	0x01EF541C BL 0x1C16DFC
	0x01EF5420 MOV X0, X31
	0x01EF5424 BL 0x1E3956C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+32]
	007 Move X19, X0
	008 Move X20, X1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Compare W8, 0
	011 Invalid "Jump target not found in method."
	012 Move W22, W2
	013 Move X21, [X20+8]
	014 Move W2, 32
	015 Move X0, X19
	016 Move W1, W21
	017 Call BitStream.WriteUInt, X0, X1, X2
	018 Move X1, X21
	019 ShiftRight X1, 32
	020 And X1, X1, 0x7FFFFFFF
	021 Move W2, 32
	022 Move X0, X19
	023 Call BitStream.WriteUInt, X0, X1, X2
	024 Subtract X22, X22, 1
	025 Move W22, W2
	026 Move W1, 32
	027 Move X0, X19
	028 Call BitStream.ReadUInt, X0, X1
	029 Move W21, W0
	030 Move W1, 32
	031 Move X0, X19
	032 Call BitStream.ReadUInt, X0, X1
	033 Move W8, W21
	034 NotImplemented "Instruction BFM not yet implemented."
	035 Subtract X22, X22, 1
	036 Move [X20+8], X8
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Void SerializeBuffer(System.UInt64* buffer, System.Int32 length)

Disassembly:
	0x01EF5428 MOV X20, X0
	0x01EF542C STR X20, [X19 + 0x18]
	0x01EF5430 LDP X20, X19, [X31 + 0x20]
	0x01EF5434 LDP X22, X21, [X31 + 0x10]
	0x01EF5438 LDP X30, X23, [X31], #0x30
	0x01EF543C RET
	0x01EF5440 STR X30, [X31 - 0x20]!
	0x01EF5444 STP X20, X19, [X31 + 0x10]
	0x01EF5448 MOV W19, W1
	0x01EF544C MOV W1, W2
	0x01EF5450 MOV X2, X3
	0x01EF5454 MOV X20, X0
	0x01EF5458 BL 0x1EF5398
	0x01EF545C STR W19, [X20 + 0x28]
	0x01EF5460 LDP X20, X19, [X31 + 0x10]
	0x01EF5464 LDR X30, [X31], #0x20
	0x01EF5468 RET
	0x01EF546C CBZ X1, 0x1EF5484
	0x01EF5470 ADD X8, X0, 0x28
	0x01EF5474 MOVZ W2, 0x20
	0x01EF5478 MOV X0, X1
	0x01EF547C MOV X1, X8
	0x01EF5480 B 0x1EF37F8
	0x01EF5484 STR X30, [X31 - 0x10]!
	0x01EF5488 BL 0x1C16F20
	0x01EF548C SUB X31, X31, 0x30
	0x01EF5490 STP X30, X21, [X31 + 0x10]
	0x01EF5494 STP X20, X19, [X31 + 0x20]
	0x01EF5498 ADRP X20, 0x24E4000
	0x01EF549C ADRP X21, 0x21FE000
	0x01EF54A0 LDRB W8, [X20 + 0x5EF]
	0x01EF54A4 LDR X21, [X21 + 0x9D0]
	0x01EF54A8 MOV X19, X0
	0x01EF54AC TBNZ X8, 0x0, 0x1EF54F4
	0x01EF54B0 ADRP X0, 0x21FE000
	0x01EF54B4 LDR X0, [X0 + 0x758]
	0x01EF54B8 BL 0x1C16CF4
	0x01EF54BC ADRP X0, 0x21FE000
	0x01EF54C0 LDR X0, [X0 + 0x9D0]
	0x01EF54C4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+32]
	007 Move X19, X0
	008 Move X20, X1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Compare W8, 0
	011 Invalid "Jump target not found in method."
	012 Move W22, W2
	013 Move X21, [X20+8]
	014 Move W2, 32
	015 Move X0, X19
	016 Move W1, W21
	017 Call BitStream.WriteUInt, X0, X1, X2
	018 Move X1, X21
	019 ShiftRight X1, 32
	020 And X1, X1, 0x7FFFFFFF
	021 Move W2, 32
	022 Move X0, X19
	023 Call BitStream.WriteUInt, X0, X1, X2
	024 Subtract X22, X22, 1
	025 Move W22, W2
	026 Move W1, 32
	027 Move X0, X19
	028 Call BitStream.ReadUInt, X0, X1
	029 Move W21, W0
	030 Move W1, 32
	031 Move X0, X19
	032 Call BitStream.ReadUInt, X0, X1
	033 Move W8, W21
	034 NotImplemented "Instruction BFM not yet implemented."
	035 Subtract X22, X22, 1
	036 Move [X20+8], X8
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

