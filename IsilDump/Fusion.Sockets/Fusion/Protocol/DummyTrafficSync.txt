Type: Fusion.Protocol.DummyTrafficSync

Method: System.Int32 get_SendInterval()

Disassembly:
	0x01EF7074 LDR W8, [X19 + 0x28]
	0x01EF7078 LDR X0, [X23]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_SendInterval(System.Int32 value)

Disassembly:
	0x01EF707C STR W8, [X31 + 0x1C]
	0x01EF7080 BL 0x1C16E04

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Int32 get_Size()

Disassembly:
	0x01EF7084 MOV X22, X0
	0x01EF7088 CBZ X0, 0x1EF70A0

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_Size(System.Int32 value)

Disassembly:
	0x01EF708C LDR X8, [X20]
	0x01EF7090 MOV X0, X22

ISIL:
	001 Move [X0+44], W1
	002 Return 

Method: System.Boolean get_IsValid()

Disassembly:
	0x01EF7094 LDR X1, [X8 + 0x40]
	0x01EF7098 BL 0x1C16E00
	0x01EF709C CBZ X0, 0x1EF7204
	0x01EF70A0 LDR W8, [X20 + 0x18]
	0x01EF70A4 CMP W8, 0x2
	0x01EF70A8 B.LS 0x1EF7200
	0x01EF70AC ADRP X24, 0x2209000
	0x01EF70B0 LDR X24, [X24 + 0x8B8]
	0x01EF70B4 STR X22, [X20 + 0x30]
	0x01EF70B8 LDR X0, [X24]
	0x01EF70BC CBZ X0, 0x1EF70D4
	0x01EF70C0 LDR X8, [X20]
	0x01EF70C4 LDR X1, [X8 + 0x40]
	0x01EF70C8 BL 0x1C16E00
	0x01EF70CC CBZ X0, 0x1EF7204
	0x01EF70D0 LDR W8, [X20 + 0x18]
	0x01EF70D4 CMP W8, 0x3

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Message.get_IsValid, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {13}
	009 Move W8, [X19+40]
	010 Move W9, 0x1324
	011 Subtract W8, W8, 100
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W0, W31
	014 Move W8, [X19+44]
	015 Subtract W8, W8, 2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01EF70D8 B.LS 0x1EF7200
	0x01EF70DC LDR X8, [X24]
	0x01EF70E0 ADD X1, X31, 0x18
	0x01EF70E4 STR X8, [X20 + 0x38]
	0x01EF70E8 LDR W8, [X19 + 0x2C]
	0x01EF70EC LDR X0, [X23]

ISIL:
	001 Move X8, -21004288
	002 Move V0, [X8+336]
	003 Move W1, 10
	004 Move X2, X31
	005 Move [X0+40], D0
	006 Call Message..ctor, X0, X1, X2
	007 Return 

Method: System.Void .ctor(System.Int32 sendInterval, System.Int32 size, Fusion.Protocol.ProtocolMessageVersion protocolVersion = 10, System.Version serializationVersion = null)

Disassembly:
	0x01EF70F0 STR W8, [X31 + 0x18]
	0x01EF70F4 BL 0x1C16E04
	0x01EF70F8 MOV X22, X0
	0x01EF70FC CBZ X0, 0x1EF7114
	0x01EF7100 LDR X8, [X20]
	0x01EF7104 MOV X0, X22
	0x01EF7108 LDR X1, [X8 + 0x40]
	0x01EF710C BL 0x1C16E00
	0x01EF7110 CBZ X0, 0x1EF7204
	0x01EF7114 LDR W8, [X20 + 0x18]
	0x01EF7118 CMP W8, 0x4
	0x01EF711C B.LS 0x1EF7200
	0x01EF7120 ADRP X23, 0x2209000
	0x01EF7124 LDR X23, [X23 + 0x878]
	0x01EF7128 STR X22, [X20 + 0x40]
	0x01EF712C LDR X0, [X23]
	0x01EF7130 CBZ X0, 0x1EF7148
	0x01EF7134 LDR X8, [X20]
	0x01EF7138 LDR X1, [X8 + 0x40]
	0x01EF713C BL 0x1C16E00
	0x01EF7140 CBZ X0, 0x1EF7204
	0x01EF7144 LDR W8, [X20 + 0x18]
	0x01EF7148 CMP W8, 0x5
	0x01EF714C B.LS 0x1EF7200
	0x01EF7150 LDR X8, [X23]
	0x01EF7154 ADRP X9, 0x21FE000
	0x01EF7158 LDR X9, [X9 + 0xA60]
	0x01EF715C ADD X1, X31, 0x8
	0x01EF7160 STR X8, [X20 + 0x48]
	0x01EF7164 STR X21, [X31 + 0x8]
	0x01EF7168 LDR X0, [X9]
	0x01EF716C BL 0x1C16E04
	0x01EF7170 MOV X21, X0
	0x01EF7174 CBZ X0, 0x1EF718C
	0x01EF7178 LDR X8, [X20]
	0x01EF717C MOV X0, X21
	0x01EF7180 LDR X1, [X8 + 0x40]
	0x01EF7184 BL 0x1C16E00
	0x01EF7188 CBZ X0, 0x1EF7204
	0x01EF718C LDR W8, [X20 + 0x18]
	0x01EF7190 CMP W8, 0x6
	0x01EF7194 B.LS 0x1EF7200
	0x01EF7198 MOV X0, X19
	0x01EF719C STR X21, [X20 + 0x50]
	0x01EF71A0 BL 0x1EF5624
	0x01EF71A4 MOV X19, X0
	0x01EF71A8 CBZ X0, 0x1EF71C0
	0x01EF71AC LDR X8, [X20]
	0x01EF71B0 MOV X0, X19
	0x01EF71B4 LDR X1, [X8 + 0x40]
	0x01EF71B8 BL 0x1C16E00

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x24E3000
	010 Move X24, 0x21FD000
	011 Move W8, [X25+1529]
	012 Move X24, [X24+1448]
	013 Move X22, X4
	014 Move W23, W3
	015 Move W20, W2
	016 Move W21, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x21FD000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+1529], W8
	027 Move X8, -21004288
	028 Move V0, [X8+336]
	029 Move X0, X19
	030 Move W1, W23
	031 Move X2, X22
	032 Move [X19+40], D0
	033 Call Message..ctor, X0, X1, X2
	034 Move X0, [X24]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W1, 0x1388
	040 Move W0, W21
	041 Move X2, X31
	042 Call Math.Min, X0, X1
	043 Move W1, 100
	044 Move X2, X31
	045 Call Math.Max, X0, X1
	046 Move [X19+40], W0
	047 Move W1, 128
	048 Move W0, W20
	049 Move X2, X31
	050 Call Math.Min, X0, X1
	051 Move W1, 2
	052 Move X2, X31
	053 Call Math.Max, X0, X1
	054 Move [X19+44], W0
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move X30, [X31+64]
	062 Move X25, [X31+72]
	063 Return 

Method: System.Void SerializeProtected(Fusion.Protocol.BitStream stream)

Disassembly:
	0x01EF71BC CBZ X0, 0x1EF7204
	0x01EF71C0 LDR W8, [X20 + 0x18]
	0x01EF71C4 CMP W8, 0x7
	0x01EF71C8 B.LS 0x1EF7200
	0x01EF71CC ADRP X8, 0x2209000
	0x01EF71D0 LDR X8, [X8 + 0x8B0]
	0x01EF71D4 STR X19, [X20 + 0x58]
	0x01EF71D8 MOV X1, X20
	0x01EF71DC MOV X2, X31
	0x01EF71E0 LDR X0, [X8]
	0x01EF71E4 BL 0x3227C5C
	0x01EF71E8 LDP X20, X19, [X31 + 0x40]
	0x01EF71EC LDP X22, X21, [X31 + 0x30]
	0x01EF71F0 LDP X24, X23, [X31 + 0x20]
	0x01EF71F4 LDR X30, [X31 + 0x10]
	0x01EF71F8 ADD X31, X31, 0x50
	0x01EF71FC RET
	0x01EF7200 BL 0x1C16F28
	0x01EF7204 BL 0x1C16F44
	0x01EF7208 MOV X1, X31
	0x01EF720C BL 0x1C16DEC
	0x01EF7210 BL 0x1C16F20
	0x01EF7214 MOVZ W1, 0xA
	0x01EF7218 MOV X2, X31
	0x01EF721C B 0x1EF5398
	0x01EF7220 STP X30, X21, [X31 - 0x20]!
	0x01EF7224 STP X20, X19, [X31 + 0x10]
	0x01EF7228 ADRP X20, 0x24E2000
	0x01EF722C LDRB W8, [X20 + 0x600]
	0x01EF7230 MOV X19, X0
	0x01EF7234 TBNZ X8, 0x0, 0x1EF724C
	0x01EF7238 ADRP X0, 0x2206000
	0x01EF723C LDR X0, [X0 + 0x78]
	0x01EF7240 BL 0x1C16CF4
	0x01EF7244 MOVZ W8, 0x1
	0x01EF7248 STRB W8, [X20 + 0x600]
	0x01EF724C MOV X0, X19
	0x01EF7250 BL 0x1EF5820
	0x01EF7254 TBZ X0, 0x0, 0x1EF72A4
	0x01EF7258 ADRP X21, 0x2206000
	0x01EF725C LDR X21, [X21 + 0x78]
	0x01EF7260 ADD X20, X19, 0x30
	0x01EF7264 LDR X0, [X21]
	0x01EF7268 LDR W8, [X0 + 0xE0]
	0x01EF726C CBNZ W8, 0x1EF7274
	0x01EF7270 BL 0x1C16DFC
	0x01EF7274 MOV X0, X20
	0x01EF7278 BL 0x1EF72B4
	0x01EF727C TBZ X0, 0x0, 0x1EF72A4
	0x01EF7280 LDR X0, [X21]
	0x01EF7284 ADD X19, X19, 0x48
	0x01EF7288 LDR W8, [X0 + 0xE0]
	0x01EF728C CBNZ W8, 0x1EF7294

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x24E3000
	007 Move W8, [X21+1530]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x21FD000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1530], W8
	019 Move W9, [X19+40]
	020 Move W8, [X19+44]
	021 Move [X31+8], W8
	022 Move [X31+12], W9
	023 Compare X20, 0
	024 JumpIfEqual {63}
	025 Move X21, 0x21FD000
	026 Move X21, [X21+1448]
	027 Add X1, X31, 12
	028 Move W2, 32
	029 Move X0, X20
	030 Call BitStream.Serialize, X0, X1, X2
	031 Add X1, X31, 8
	032 Move W2, 32
	033 Move X0, X20
	034 Call BitStream.Serialize, X0, X1, X2
	035 Move X0, [X21]
	036 Move W20, [X31+12]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move W1, 0x1388
	042 Move W0, W20
	043 Move X2, X31
	044 Call Math.Min, X0, X1
	045 Move W1, 100
	046 Move X2, X31
	047 Call Math.Max, X0, X1
	048 Move [X19+40], W0
	049 Move W0, [X31+8]
	050 Move W1, 128
	051 Move X2, X31
	052 Call Math.Min, X0, X1
	053 Move W1, 2
	054 Move X2, X31
	055 Call Math.Max, X0, X1
	056 Move [X19+44], W0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Add X31, X31, 48
	062 Return 
	063 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x01EF7290 BL 0x1C16DFC
	0x01EF7294 MOV X0, X19
	0x01EF7298 LDP X20, X19, [X31 + 0x10]
	0x01EF729C LDP X30, X21, [X31], #0x20
	0x01EF72A0 B 0x1EF72B4
	0x01EF72A4 LDP X20, X19, [X31 + 0x10]
	0x01EF72A8 MOV W0, W31
	0x01EF72AC LDP X30, X21, [X31], #0x20
	0x01EF72B0 RET
	0x01EF72B4 STP X30, X21, [X31 - 0x20]!
	0x01EF72B8 STP X20, X19, [X31 + 0x10]
	0x01EF72BC ADRP X21, 0x24E2000
	0x01EF72C0 ADRP X20, 0x2206000
	0x01EF72C4 LDRB W8, [X21 + 0x60F]
	0x01EF72C8 LDR X20, [X20 + 0x78]
	0x01EF72CC MOV X19, X0
	0x01EF72D0 TBNZ X8, 0x0, 0x1EF72E8
	0x01EF72D4 ADRP X0, 0x2206000
	0x01EF72D8 LDR X0, [X0 + 0x78]
	0x01EF72DC BL 0x1C16CF4
	0x01EF72E0 MOVZ W8, 0x1
	0x01EF72E4 STRB W8, [X21 + 0x60F]
	0x01EF72E8 LDR X0, [X20]
	0x01EF72EC LDR W8, [X0 + 0xE0]
	0x01EF72F0 CBNZ W8, 0x1EF72FC
	0x01EF72F4 BL 0x1C16DFC
	0x01EF72F8 LDR X0, [X20]
	0x01EF72FC LDR X8, [X0 + 0xB8]
	0x01EF7300 LDR X9, [X19]
	0x01EF7304 LDR X10, [X8]
	0x01EF7308 CMP X9, X10
	0x01EF730C B.NE 0x1EF7338
	0x01EF7310 LDR X10, [X8 + 0x8]
	0x01EF7314 LDR X11, [X19 + 0x8]
	0x01EF7318 CMP X11, X10
	0x01EF731C B.NE 0x1EF7338
	0x01EF7320 LDR X10, [X8 + 0x10]
	0x01EF7324 LDR X11, [X19 + 0x10]
	0x01EF7328 CMP X11, X10
	0x01EF732C B.NE 0x1EF7338
	0x01EF7330 MOV W0, W31
	0x01EF7334 B 0x1EF7384
	0x01EF7338 LDR W10, [X0 + 0xE0]
	0x01EF733C CBNZ W10, 0x1EF7350
	0x01EF7340 BL 0x1C16DFC
	0x01EF7344 LDR X8, [X20]
	0x01EF7348 LDR X9, [X19]
	0x01EF734C LDR X8, [X8 + 0xB8]
	0x01EF7350 LDR X10, [X8 + 0x18]
	0x01EF7354 CMP X9, X10
	0x01EF7358 B.NE 0x1EF7380
	0x01EF735C LDR X9, [X8 + 0x20]
	0x01EF7360 LDR X10, [X19 + 0x8]
	0x01EF7364 CMP X10, X9
	0x01EF7368 B.NE 0x1EF7380
	0x01EF736C LDR X8, [X8 + 0x28]
	0x01EF7370 LDR X9, [X19 + 0x10]
	0x01EF7374 CMP X9, X8
	0x01EF7378 CSET W0, NE
	0x01EF737C B 0x1EF7384
	0x01EF7380 MOVZ W0, 0x1
	0x01EF7384 LDP X20, X19, [X31 + 0x10]
	0x01EF7388 LDP X30, X21, [X31], #0x20
	0x01EF738C RET
	0x01EF7390 MOVZ W1, 0xA
	0x01EF7394 MOV X2, X31
	0x01EF7398 B 0x1EF5398
	0x01EF739C STR X30, [X31 - 0x40]!
	0x01EF73A0 STP X24, X23, [X31 + 0x10]
	0x01EF73A4 STP X22, X21, [X31 + 0x20]
	0x01EF73A8 STP X20, X19, [X31 + 0x30]
	0x01EF73AC MOV X22, X2
	0x01EF73B0 MOV W23, W1
	0x01EF73B4 MOV W1, W6
	0x01EF73B8 MOV X2, X7
	0x01EF73BC MOV X19, X5
	0x01EF73C0 MOV W20, W4
	0x01EF73C4 MOV X21, X3
	0x01EF73C8 MOV X24, X0
	0x01EF73CC BL 0x1EF5398
	0x01EF73D0 STR W23, [X24 + 0x28]
	0x01EF73D4 LDR X8, [X22 + 0x10]
	0x01EF73D8 LDR V0, [X22]
	0x01EF73DC STR X8, [X24 + 0x40]
	0x01EF73E0 STR V0, [X24 + 0x3]
	0x01EF73E4 LDR X8, [X21 + 0x10]
	0x01EF73E8 LDR V0, [X21]
	0x01EF73EC STRB W20, [X24 + 0x60]
	0x01EF73F0 STR X19, [X24 + 0x68]
	0x01EF73F4 STR X8, [X24 + 0x58]
	0x01EF73F8 STUR V0, [X24 + 0x48]
	0x01EF73FC LDP X20, X19, [X31 + 0x30]
	0x01EF7400 LDP X22, X21, [X31 + 0x20]
	0x01EF7404 LDP X24, X23, [X31 + 0x10]
	0x01EF7408 LDR X30, [X31], #0x40
	0x01EF740C RET
	0x01EF7410 SUB X31, X31, 0x30
	0x01EF7414 STP X30, X21, [X31 + 0x10]
	0x01EF7418 STP X20, X19, [X31 + 0x20]
	0x01EF741C ADRP X21, 0x24E2000
	0x01EF7420 LDRB W8, [X21 + 0x601]
	0x01EF7424 MOV X19, X1
	0x01EF7428 MOV X20, X0
	0x01EF742C TBNZ X8, 0x0, 0x1EF7444
	0x01EF7430 ADRP X0, 0x2206000
	0x01EF7434 LDR X0, [X0 + 0x78]
	0x01EF7438 BL 0x1C16CF4
	0x01EF743C MOVZ W8, 0x1
	0x01EF7440 STRB W8, [X21 + 0x601]
	0x01EF7444 CBZ X19, 0x1EF74E8
	0x01EF7448 ADRP X21, 0x2206000
	0x01EF744C LDR X21, [X21 + 0x78]
	0x01EF7450 ADD X1, X20, 0x28
	0x01EF7454 MOVZ W2, 0x20
	0x01EF7458 MOV X0, X19
	0x01EF745C BL 0x1EF37F8
	0x01EF7460 LDR X0, [X21]
	0x01EF7464 ADD X21, X20, 0x30
	0x01EF7468 LDR W8, [X0 + 0xE0]
	0x01EF746C CBNZ W8, 0x1EF7474
	0x01EF7470 BL 0x1C16DFC
	0x01EF7474 MOV X0, X21
	0x01EF7478 MOV X1, X19
	0x01EF747C BL 0x1EF74EC
	0x01EF7480 ADD X0, X20, 0x48
	0x01EF7484 MOV X1, X19
	0x01EF7488 BL 0x1EF74EC
	0x01EF748C LDRB W8, [X20 + 0x60]
	0x01EF7490 STRB W8, [X31 + 0xC]
	0x01EF7494 LDRB W8, [X20 + 0x10]
	0x01EF7498 CMP W8, 0x3
	0x01EF749C B.HI 0x1EF74AC
	0x01EF74A0 MOVZ W8, 0x4
	0x01EF74A4 STRB W8, [X20 + 0x60]
	0x01EF74A8 B 0x1EF74D8
	0x01EF74AC ADD X1, X31, 0xC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x24E3000
	009 Move X21, 0x21FD000
	010 Move W8, [X20+1531]
	011 Move X21, [X21+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x21FD000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x21FD000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0x220A000
	024 Move X0, [X0+2096]
	025 Call 0x1C17CF4
	026 Move X0, 0x220A000
	027 Move X0, [X0+2104]
	028 Call 0x1C17CF4
	029 Move X0, 0x220A000
	030 Move X0, [X0+2112]
	031 Call 0x1C17CF4
	032 Move X0, 0x220A000
	033 Move X0, [X0+2120]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1531], W8
	037 Move X0, [X21]
	038 Move W1, 6
	039 Call 0x1C17D6C
	040 Compare X0, 0
	041 JumpIfEqual {154}
	042 Move X21, 0x220A000
	043 Move X21, [X21+2104]
	044 Move X20, X0
	045 Move X0, [X21]
	046 Compare X0, 0
	047 JumpIfEqual {53}
	048 Move X8, [X20]
	049 Move X1, [X8+64]
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfEqual {151}
	053 Move W8, [X20+24]
	054 Compare W8, 0
	055 JumpIfEqual {150}
	056 Move X9, [X21]
	057 Move X21, 0x220A000
	058 Move X21, [X21+2120]
	059 Move [X20+32], X9
	060 Move X0, [X21]
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, [X20]
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {151}
	068 Move W8, [X20+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X21]
	071 Move X22, 0x21FD000
	072 Move X22, [X22+1880]
	073 Add X1, X31, 12
	074 Move [X20+40], X8
	075 Move W8, [X19+40]
	076 Move X0, [X22]
	077 Move [X31+12], W8
	078 Call 0x1C17E04
	079 Move X21, X0
	080 Compare X0, 0
	081 JumpIfEqual {88}
	082 Move X8, [X20]
	083 Move X0, X21
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {151}
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X23, 0x220A000
	091 Move X23, [X23+2112]
	092 Move [X20+48], X21
	093 Move X0, [X23]
	094 Compare X0, 0
	095 JumpIfEqual {102}
	096 Move X8, [X20]
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {151}
	101 Move W8, [X20+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, [X23]
	104 Add X1, X31, 8
	105 Move [X20+56], X8
	106 Move W8, [X19+44]
	107 Move X0, [X22]
	108 Move [X31+8], W8
	109 Call 0x1C17E04
	110 Move X21, X0
	111 Compare X0, 0
	112 JumpIfEqual {119}
	113 Move X8, [X20]
	114 Move X0, X21
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {151}
	119 Move W8, [X20+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X19
	122 Move [X20+64], X21
	123 Call Message.ToString, X0
	124 Move X19, X0
	125 Compare X0, 0
	126 JumpIfEqual {133}
	127 Move X8, [X20]
	128 Move X0, X19
	129 Move X1, [X8+64]
	130 Call 0x1C17E00
	131 Compare X0, 0
	132 JumpIfEqual {151}
	133 Move W8, [X20+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, 0x220A000
	136 Move X8, [X8+2096]
	137 Move [X20+72], X19
	138 Move X1, X20
	139 Move X2, X31
	140 Move X0, [X8]
	141 Call String.Format, X0, X1
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X30, [X31+16]
	147 Move X23, [X31+24]
	148 Add X31, X31, 64
	149 Return X0
	150 Call 0x1C17F28
	151 Call 0x1C17F44
	152 Move X1, X31
	153 Call 0x1C17DEC
	154 Call 0x1C17F20

