Type: Fusion.Protocol.Disconnect

Method: System.Void .ctor()

Disassembly:
	0x01EF6DEC CBZ X0, 0x1EF6E04
	0x01EF6DF0 LDR X8, [X20]
	0x01EF6DF4 MOV X0, X21

ISIL:
	001 Move W1, 10
	002 Move X2, X31
	003 Call Message..ctor, X0, X1, X2
	004 Return 

Method: System.Void .ctor(Fusion.Protocol.DisconnectReason reason, Fusion.Protocol.ProtocolMessageVersion protocolVersion = 10, System.Version serializationVersion = null)

Disassembly:
	0x01EF6DF8 LDR X1, [X8 + 0x40]
	0x01EF6DFC BL 0x1C16E00
	0x01EF6E00 CBZ X0, 0x1EF6ED4
	0x01EF6E04 LDR W8, [X20 + 0x18]
	0x01EF6E08 CMP W8, 0x2
	0x01EF6E0C B.LS 0x1EF6ED0
	0x01EF6E10 ADRP X22, 0x220A000
	0x01EF6E14 LDR X22, [X22 + 0x8A0]
	0x01EF6E18 STR X21, [X20 + 0x30]
	0x01EF6E1C LDR X0, [X22]
	0x01EF6E20 CBZ X0, 0x1EF6E38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move W1, W2
	006 Move X2, X3
	007 Move X20, X0
	008 Call Message..ctor, X0, X1, X2
	009 Move [X20+40], W19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.Void SerializeProtected(Fusion.Protocol.BitStream stream)

Disassembly:
	0x01EF6E24 LDR X8, [X20]
	0x01EF6E28 LDR X1, [X8 + 0x40]
	0x01EF6E2C BL 0x1C16E00
	0x01EF6E30 CBZ X0, 0x1EF6ED4
	0x01EF6E34 LDR W8, [X20 + 0x18]
	0x01EF6E38 CMP W8, 0x3
	0x01EF6E3C B.LS 0x1EF6ED0
	0x01EF6E40 LDR X9, [X22]
	0x01EF6E44 STR X9, [X20 + 0x38]
	0x01EF6E48 LDR X21, [X19 + 0x30]
	0x01EF6E4C CBZ X21, 0x1EF6E68
	0x01EF6E50 LDR X8, [X20]
	0x01EF6E54 MOV X0, X21
	0x01EF6E58 LDR X1, [X8 + 0x40]
	0x01EF6E5C BL 0x1C16E00
	0x01EF6E60 CBZ X0, 0x1EF6ED4
	0x01EF6E64 LDR W8, [X20 + 0x18]
	0x01EF6E68 CMP W8, 0x4
	0x01EF6E6C B.LS 0x1EF6ED0
	0x01EF6E70 MOV X0, X19
	0x01EF6E74 STR X21, [X20 + 0x40]
	0x01EF6E78 BL 0x1EF5624
	0x01EF6E7C MOV X19, X0
	0x01EF6E80 CBZ X0, 0x1EF6E98
	0x01EF6E84 LDR X8, [X20]
	0x01EF6E88 MOV X0, X19
	0x01EF6E8C LDR X1, [X8 + 0x40]
	0x01EF6E90 BL 0x1C16E00
	0x01EF6E94 CBZ X0, 0x1EF6ED4
	0x01EF6E98 LDR W8, [X20 + 0x18]
	0x01EF6E9C CMP W8, 0x5
	0x01EF6EA0 B.LS 0x1EF6ED0
	0x01EF6EA4 ADRP X8, 0x220A000
	0x01EF6EA8 LDR X8, [X8 + 0x830]
	0x01EF6EAC STR X19, [X20 + 0x48]
	0x01EF6EB0 MOV X1, X20
	0x01EF6EB4 MOV X2, X31
	0x01EF6EB8 LDR X0, [X8]
	0x01EF6EBC BL 0x3227C5C
	0x01EF6EC0 LDP X20, X19, [X31 + 0x20]
	0x01EF6EC4 LDP X22, X21, [X31 + 0x10]
	0x01EF6EC8 LDR X30, [X31], #0x30
	0x01EF6ECC RET
	0x01EF6ED0 BL 0x1C16F28
	0x01EF6ED4 BL 0x1C16F44
	0x01EF6ED8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0x24E4000
	008 Move X22, 0x220B000
	009 Move W8, [X21+1527]
	010 Move X22, [X22+2072]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x220B000
	018 Move X0, [X0+2072]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1527], W8
	022 Move X8, [X22]
	023 Move TEMP, 0
	024 Not TEMP
	025 Move X9, TEMP
	026 Add X0, X31, 0
	027 Move X1, X31
	028 Move [X31], X8
	029 Move [X31+8], X9
	030 Move W8, [X19+40]
	031 Move [X31+16], W8
	032 Call Enum.ToString, X0
	033 Move [X31+40], X0
	034 Move W21, [X19+40]
	035 Move [X31+28], W21
	036 Compare X20, 0
	037 JumpIfEqual {55}
	038 Move W8, [X19+16]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X1, X31, 40
	041 Move X0, X20
	042 Call BitStream.Serialize, X0, X1
	043 Add X1, X31, 28
	044 Move X0, X20
	045 Call BitStream.Serialize, X0, X1
	046 Move W21, [X31+28]
	047 Move [X19+40], W21
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X30, [X31+32]
	053 Add X31, X31, 80
	054 Return 
	055 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x01EF6EDC BL 0x1C16DEC
	0x01EF6EE0 BL 0x1C16F20
	0x01EF6EE4 STR X30, [X31 - 0x20]!
	0x01EF6EE8 STP X20, X19, [X31 + 0x10]
	0x01EF6EEC CBZ X1, 0x1EF6F2C
	0x01EF6EF0 MOV X19, X1
	0x01EF6EF4 MOV X20, X0
	0x01EF6EF8 ADD X1, X0, 0x28
	0x01EF6EFC MOVZ W2, 0x20
	0x01EF6F00 MOV X0, X19
	0x01EF6F04 BL 0x1EF37F8
	0x01EF6F08 ADD X1, X20, 0x2C
	0x01EF6F0C MOVZ W2, 0x20
	0x01EF6F10 MOV X0, X19
	0x01EF6F14 BL 0x1EF37F8
	0x01EF6F18 ADD X1, X20, 0x30
	0x01EF6F1C MOV X0, X19
	0x01EF6F20 LDP X20, X19, [X31 + 0x10]
	0x01EF6F24 LDR X30, [X31], #0x20
	0x01EF6F28 B 0x1EF39A4
	0x01EF6F2C BL 0x1C16F20
	0x01EF6F30 SUB X31, X31, 0x50
	0x01EF6F34 STR X30, [X31 + 0x10]
	0x01EF6F38 STP X24, X23, [X31 + 0x20]
	0x01EF6F3C STP X22, X21, [X31 + 0x30]
	0x01EF6F40 STP X20, X19, [X31 + 0x40]
	0x01EF6F44 ADRP X20, 0x24E3000
	0x01EF6F48 LDRB W8, [X20 + 0x5FF]
	0x01EF6F4C MOV X19, X0
	0x01EF6F50 TBNZ X8, 0x0, 0x1EF6FBC
	0x01EF6F54 ADRP X0, 0x21FD000
	0x01EF6F58 LDR X0, [X0 + 0x758]
	0x01EF6F5C BL 0x1C16CF4
	0x01EF6F60 ADRP X0, 0x21FF000
	0x01EF6F64 LDR X0, [X0 + 0xA60]
	0x01EF6F68 BL 0x1C16CF4
	0x01EF6F6C ADRP X0, 0x21FD000
	0x01EF6F70 LDR X0, [X0 + 0x9D0]
	0x01EF6F74 BL 0x1C16CF4
	0x01EF6F78 ADRP X0, 0x220A000
	0x01EF6F7C LDR X0, [X0 + 0x8B0]
	0x01EF6F80 BL 0x1C16CF4
	0x01EF6F84 ADRP X0, 0x220A000
	0x01EF6F88 LDR X0, [X0 + 0x878]
	0x01EF6F8C BL 0x1C16CF4
	0x01EF6F90 ADRP X0, 0x220A000
	0x01EF6F94 LDR X0, [X0 + 0x8B8]
	0x01EF6F98 BL 0x1C16CF4
	0x01EF6F9C ADRP X0, 0x220A000
	0x01EF6FA0 LDR X0, [X0 + 0x8C0]
	0x01EF6FA4 BL 0x1C16CF4
	0x01EF6FA8 ADRP X0, 0x220A000
	0x01EF6FAC LDR X0, [X0 + 0x8C8]
	0x01EF6FB0 BL 0x1C16CF4
	0x01EF6FB4 MOVZ W8, 0x1
	0x01EF6FB8 STRB W8, [X20 + 0x5FF]
	0x01EF6FBC ADRP X20, 0x21FD000
	0x01EF6FC0 LDR X0, [X19 + 0x30]
	0x01EF6FC4 LDR X20, [X20 + 0x9D0]
	0x01EF6FC8 CBZ X0, 0x1EF6FEC
	0x01EF6FCC LDR W8, [X0 + 0x18]
	0x01EF6FD0 CMP W8, 0x8
	0x01EF6FD4 B.NE 0x1EF6FEC
	0x01EF6FD8 MOV W1, W31
	0x01EF6FDC MOV X2, X31
	0x01EF6FE0 BL 0x3317088
	0x01EF6FE4 MOV X21, X0
	0x01EF6FE8 B 0x1EF6FF0
	0x01EF6FEC MOV X21, X31
	0x01EF6FF0 LDR X0, [X20]
	0x01EF6FF4 MOVZ W1, 0x8
	0x01EF6FF8 BL 0x1C16D6C
	0x01EF6FFC CBZ X0, 0x1EF7210
	0x01EF7000 ADRP X22, 0x2209000
	0x01EF7004 LDR X22, [X22 + 0x8C8]
	0x01EF7008 MOV X20, X0
	0x01EF700C LDR X0, [X22]
	0x01EF7010 CBZ X0, 0x1EF7024
	0x01EF7014 LDR X8, [X20]
	0x01EF7018 LDR X1, [X8 + 0x40]
	0x01EF701C BL 0x1C16E00
	0x01EF7020 CBZ X0, 0x1EF7204
	0x01EF7024 LDR W8, [X20 + 0x18]
	0x01EF7028 CBZ W8, 0x1EF7200
	0x01EF702C LDR X9, [X22]
	0x01EF7030 ADRP X22, 0x2209000
	0x01EF7034 LDR X22, [X22 + 0x8C0]
	0x01EF7038 STR X9, [X20 + 0x20]
	0x01EF703C LDR X0, [X22]
	0x01EF7040 CBZ X0, 0x1EF7058
	0x01EF7044 LDR X8, [X20]
	0x01EF7048 LDR X1, [X8 + 0x40]
	0x01EF704C BL 0x1C16E00
	0x01EF7050 CBZ X0, 0x1EF7204
	0x01EF7054 LDR W8, [X20 + 0x18]
	0x01EF7058 CMP W8, 0x1
	0x01EF705C B.LS 0x1EF7200
	0x01EF7060 LDR X8, [X22]
	0x01EF7064 ADRP X23, 0x21FC000
	0x01EF7068 LDR X23, [X23 + 0x758]
	0x01EF706C ADD X1, X31, 0x1C
	0x01EF7070 STR X8, [X20 + 0x28]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x24E4000
	007 Move X21, 0x21FE000
	008 Move W8, [X20+1528]
	009 Move X21, [X21+2512]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x220B000
	016 Move X0, [X0+2072]
	017 Call 0x1C17CF4
	018 Move X0, 0x21FE000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0x220B000
	022 Move X0, [X0+2080]
	023 Call 0x1C17CF4
	024 Move X0, 0x220B000
	025 Move X0, [X0+2088]
	026 Call 0x1C17CF4
	027 Move X0, 0x220B000
	028 Move X0, [X0+2016]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1528], W8
	032 Move X0, [X21]
	033 Move W1, 4
	034 Call 0x1C17D6C
	035 Compare X0, 0
	036 JumpIfEqual {116}
	037 Move X21, 0x220B000
	038 Move X21, [X21+2088]
	039 Move X20, X0
	040 Move X0, [X21]
	041 Compare X0, 0
	042 JumpIfEqual {48}
	043 Move X8, [X20]
	044 Move X1, [X8+64]
	045 Call 0x1C17E00
	046 Compare X0, 0
	047 JumpIfEqual {113}
	048 Move W8, [X20+24]
	049 Compare W8, 0
	050 JumpIfEqual {112}
	051 Move X9, [X21]
	052 Move X21, 0x220B000
	053 Move X21, [X21+2080]
	054 Move [X20+32], X9
	055 Move X0, [X21]
	056 Compare X0, 0
	057 JumpIfEqual {64}
	058 Move X8, [X20]
	059 Move X1, [X8+64]
	060 Call 0x1C17E00
	061 Compare X0, 0
	062 JumpIfEqual {113}
	063 Move W8, [X20+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X21]
	066 Move X9, 0x220B000
	067 Move X9, [X9+2072]
	068 Add X1, X31, 12
	069 Move [X20+40], X8
	070 Move W8, [X19+40]
	071 Move X0, [X9]
	072 Move [X31+12], W8
	073 Call 0x1C17E04
	074 Move X21, X0
	075 Compare X0, 0
	076 JumpIfEqual {83}
	077 Move X8, [X20]
	078 Move X0, X21
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {113}
	083 Move W8, [X20+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X19
	086 Move [X20+48], X21
	087 Call Message.ToString, X0
	088 Move X19, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X20]
	092 Move X0, X19
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {113}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, 0x220A000
	100 Move X8, [X8+2016]
	101 Move [X20+56], X19
	102 Move X1, X20
	103 Move X2, X31
	104 Move X0, [X8]
	105 Call String.Format, X0, X1
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X30, [X31+16]
	109 Move X21, [X31+24]
	110 Add X31, X31, 48
	111 Return X0
	112 Call 0x1C17F28
	113 Call 0x1C17F44
	114 Move X1, X31
	115 Call 0x1C17DEC
	116 Call 0x1C17F20

