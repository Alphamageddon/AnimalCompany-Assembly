Type: Fusion.Protocol.PlayerRefMapping

Method: System.Void SerializeProtected(Fusion.Protocol.BitStream stream)

Disassembly:
	0x01EF7EE4 CBZ X0, 0x1EF8078
	0x01EF7EE8 LDR W8, [X20 + 0x18]
	0x01EF7EEC CMP W8, 0x7
	0x01EF7EF0 B.LS 0x1EF8074
	0x01EF7EF4 LDR X8, [X23]
	0x01EF7EF8 ADD X1, X31, 0x10
	0x01EF7EFC STR X8, [X20 + 0x58]
	0x01EF7F00 LDR W8, [X19 + 0x34]
	0x01EF7F04 LDR X0, [X22]
	0x01EF7F08 STR W8, [X31 + 0x10]
	0x01EF7F0C BL 0x1C16E04
	0x01EF7F10 MOV X21, X0
	0x01EF7F14 CBZ X0, 0x1EF7F2C
	0x01EF7F18 LDR X8, [X20]
	0x01EF7F1C MOV X0, X21
	0x01EF7F20 LDR X1, [X8 + 0x40]
	0x01EF7F24 BL 0x1C16E00
	0x01EF7F28 CBZ X0, 0x1EF8078
	0x01EF7F2C LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {23}
	006 Move X19, X1
	007 Move X20, X0
	008 Add X1, X0, 40
	009 Move W2, 32
	010 Move X0, X19
	011 Call BitStream.Serialize, X0, X1, X2
	012 Add X1, X20, 44
	013 Move W2, 32
	014 Move X0, X19
	015 Call BitStream.Serialize, X0, X1, X2
	016 Add X1, X20, 48
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call BitStream.Serialize, X0, X1
	022 Return 
	023 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x01EF7F30 CMP W8, 0x8
	0x01EF7F34 B.LS 0x1EF8074
	0x01EF7F38 ADRP X8, 0x21FD000
	0x01EF7F3C LDR X8, [X8 + 0x758]
	0x01EF7F40 STR X21, [X20 + 0x60]
	0x01EF7F44 LDR X9, [X19 + 0x40]
	0x01EF7F48 ADD X1, X31, 0x8
	0x01EF7F4C LDR X0, [X8]
	0x01EF7F50 STR X9, [X31 + 0x8]
	0x01EF7F54 BL 0x1C16E04
	0x01EF7F58 MOV X21, X0
	0x01EF7F5C CBZ X0, 0x1EF7F74
	0x01EF7F60 LDR X8, [X20]
	0x01EF7F64 MOV X0, X21
	0x01EF7F68 LDR X1, [X8 + 0x40]
	0x01EF7F6C BL 0x1C16E00
	0x01EF7F70 CBZ X0, 0x1EF8078
	0x01EF7F74 LDR W8, [X20 + 0x18]
	0x01EF7F78 CMP W8, 0x9
	0x01EF7F7C B.LS 0x1EF8074
	0x01EF7F80 ADRP X22, 0x2206000
	0x01EF7F84 LDR X22, [X22 + 0x348]
	0x01EF7F88 STR X21, [X20 + 0x68]
	0x01EF7F8C LDR X0, [X22]
	0x01EF7F90 CBZ X0, 0x1EF7FA8
	0x01EF7F94 LDR X8, [X20]
	0x01EF7F98 LDR X1, [X8 + 0x40]
	0x01EF7F9C BL 0x1C16E00
	0x01EF7FA0 CBZ X0, 0x1EF8078
	0x01EF7FA4 LDR W8, [X20 + 0x18]
	0x01EF7FA8 CMP W8, 0xA
	0x01EF7FAC B.LS 0x1EF8074
	0x01EF7FB0 LDR X8, [X22]
	0x01EF7FB4 ADRP X21, 0x21FC000
	0x01EF7FB8 MOV X0, X19
	0x01EF7FBC STR X8, [X20 + 0x70]
	0x01EF7FC0 LDR X8, [X19]
	0x01EF7FC4 LDP X9, X1, [X8 + 0x178]
	0x01EF7FC8 LDR X21, [X21 + 0xB58]
	0x01EF7FCC BLR X9
	0x01EF7FD0 LDR X8, [X21]
	0x01EF7FD4 AND W9, W0, 0x1
	0x01EF7FD8 ADD X1, X31, 0x4
	0x01EF7FDC STRB W9, [X31 + 0x4]
	0x01EF7FE0 MOV X0, X8
	0x01EF7FE4 BL 0x1C16E04
	0x01EF7FE8 MOV X21, X0
	0x01EF7FEC CBZ X0, 0x1EF8004
	0x01EF7FF0 LDR X8, [X20]
	0x01EF7FF4 MOV X0, X21
	0x01EF7FF8 LDR X1, [X8 + 0x40]
	0x01EF7FFC BL 0x1C16E00
	0x01EF8000 CBZ X0, 0x1EF8078
	0x01EF8004 LDR W8, [X20 + 0x18]
	0x01EF8008 CMP W8, 0xB
	0x01EF800C B.LS 0x1EF8074
	0x01EF8010 MOV X0, X19
	0x01EF8014 STR X21, [X20 + 0x78]
	0x01EF8018 BL 0x1EF5624
	0x01EF801C MOV X19, X0
	0x01EF8020 CBZ X0, 0x1EF8038
	0x01EF8024 LDR X8, [X20]
	0x01EF8028 MOV X0, X19
	0x01EF802C LDR X1, [X8 + 0x40]
	0x01EF8030 BL 0x1C16E00
	0x01EF8034 CBZ X0, 0x1EF8078
	0x01EF8038 LDR W8, [X20 + 0x18]
	0x01EF803C CMP W8, 0xC
	0x01EF8040 B.LS 0x1EF8074
	0x01EF8044 ADRP X8, 0x2208000
	0x01EF8048 LDR X8, [X8 + 0x908]
	0x01EF804C STR X19, [X20 + 0x80]
	0x01EF8050 MOV X1, X20
	0x01EF8054 MOV X2, X31
	0x01EF8058 LDR X0, [X8]
	0x01EF805C BL 0x3227C5C
	0x01EF8060 LDP X20, X19, [X31 + 0x40]
	0x01EF8064 LDP X22, X21, [X31 + 0x30]
	0x01EF8068 LDP X30, X23, [X31 + 0x20]
	0x01EF806C ADD X31, X31, 0x50
	0x01EF8070 RET
	0x01EF8074 BL 0x1C16F28
	0x01EF8078 BL 0x1C16F44
	0x01EF807C MOV X1, X31
	0x01EF8080 BL 0x1C16DEC
	0x01EF8084 BL 0x1C16F20
	0x01EF8088 MOVZ W1, 0xA
	0x01EF808C MOV X2, X31
	0x01EF8090 B 0x1EF5398
	0x01EF8094 STP X30, X21, [X31 - 0x20]!
	0x01EF8098 STP X20, X19, [X31 + 0x10]
	0x01EF809C MOV W19, W2
	0x01EF80A0 MOV W20, W1
	0x01EF80A4 MOV W1, W3
	0x01EF80A8 MOV X2, X4
	0x01EF80AC MOV X21, X0
	0x01EF80B0 BL 0x1EF5398
	0x01EF80B4 STP W20, W19, [X21 + 0x28]
	0x01EF80B8 LDP X20, X19, [X31 + 0x10]
	0x01EF80BC LDP X30, X21, [X31], #0x20
	0x01EF80C0 RET
	0x01EF80C4 STR X30, [X31 - 0x20]!
	0x01EF80C8 STP X20, X19, [X31 + 0x10]
	0x01EF80CC LDR W8, [X0 + 0x2C]
	0x01EF80D0 STR W8, [X31 + 0xC]
	0x01EF80D4 CBZ X1, 0x1EF8114
	0x01EF80D8 MOV X20, X1
	0x01EF80DC MOV X19, X0
	0x01EF80E0 ADD X1, X0, 0x28
	0x01EF80E4 MOVZ W2, 0x20
	0x01EF80E8 MOV X0, X20
	0x01EF80EC BL 0x1EF37F8
	0x01EF80F0 ADD X1, X31, 0xC
	0x01EF80F4 MOVZ W2, 0x20
	0x01EF80F8 MOV X0, X20
	0x01EF80FC BL 0x1EF3790
	0x01EF8100 LDR W8, [X31 + 0xC]
	0x01EF8104 STR W8, [X19 + 0x2C]
	0x01EF8108 LDP X20, X19, [X31 + 0x10]
	0x01EF810C LDR X30, [X31], #0x20
	0x01EF8110 RET
	0x01EF8114 BL 0x1C16F20
	0x01EF8118 STR X30, [X31 - 0x30]!
	0x01EF811C STP X22, X21, [X31 + 0x10]
	0x01EF8120 STP X20, X19, [X31 + 0x20]
	0x01EF8124 ADRP X20, 0x24E1000
	0x01EF8128 ADRP X21, 0x21FB000
	0x01EF812C LDRB W8, [X20 + 0x606]
	0x01EF8130 LDR X21, [X21 + 0x9D0]
	0x01EF8134 MOV X19, X0
	0x01EF8138 TBNZ X8, 0x0, 0x1EF8198
	0x01EF813C ADRP X0, 0x21FB000
	0x01EF8140 LDR X0, [X0 + 0x758]
	0x01EF8144 BL 0x1C16CF4
	0x01EF8148 ADRP X0, 0x21FB000
	0x01EF814C LDR X0, [X0 + 0x9D0]
	0x01EF8150 BL 0x1C16CF4
	0x01EF8154 ADRP X0, 0x2208000
	0x01EF8158 LDR X0, [X0 + 0x928]
	0x01EF815C BL 0x1C16CF4
	0x01EF8160 ADRP X0, 0x2208000
	0x01EF8164 LDR X0, [X0 + 0x830]
	0x01EF8168 BL 0x1C16CF4
	0x01EF816C ADRP X0, 0x2200000
	0x01EF8170 LDR X0, [X0 + 0x780]
	0x01EF8174 BL 0x1C16CF4
	0x01EF8178 ADRP X0, 0x2208000
	0x01EF817C LDR X0, [X0 + 0x930]
	0x01EF8180 BL 0x1C16CF4
	0x01EF8184 ADRP X0, 0x2208000
	0x01EF8188 LDR X0, [X0 + 0x938]
	0x01EF818C BL 0x1C16CF4
	0x01EF8190 MOVZ W8, 0x1
	0x01EF8194 STRB W8, [X20 + 0x606]
	0x01EF8198 LDR X0, [X21]
	0x01EF819C MOVZ W1, 0x6
	0x01EF81A0 BL 0x1C16D6C
	0x01EF81A4 CBZ X0, 0x1EF8340
	0x01EF81A8 ADRP X21, 0x2200000
	0x01EF81AC LDR X21, [X21 + 0x780]
	0x01EF81B0 MOV X20, X0
	0x01EF81B4 LDR X0, [X21]
	0x01EF81B8 CBZ X0, 0x1EF81CC
	0x01EF81BC LDR X8, [X20]
	0x01EF81C0 LDR X1, [X8 + 0x40]
	0x01EF81C4 BL 0x1C16E00
	0x01EF81C8 CBZ X0, 0x1EF8334
	0x01EF81CC LDR W8, [X20 + 0x18]
	0x01EF81D0 CBZ W8, 0x1EF8330
	0x01EF81D4 LDR X9, [X21]
	0x01EF81D8 ADRP X21, 0x2208000
	0x01EF81DC LDR X21, [X21 + 0x930]
	0x01EF81E0 STR X9, [X20 + 0x20]
	0x01EF81E4 LDR X0, [X21]
	0x01EF81E8 CBZ X0, 0x1EF8200
	0x01EF81EC LDR X8, [X20]
	0x01EF81F0 LDR X1, [X8 + 0x40]
	0x01EF81F4 BL 0x1C16E00
	0x01EF81F8 CBZ X0, 0x1EF8334
	0x01EF81FC LDR W8, [X20 + 0x18]
	0x01EF8200 CMP W8, 0x1
	0x01EF8204 B.LS 0x1EF8330
	0x01EF8208 LDR X8, [X21]
	0x01EF820C ADRP X9, 0x21FB000
	0x01EF8210 LDR X9, [X9 + 0x758]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0x24E3000
	010 Move W8, [X20+1535]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x21FD000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move X0, 0x21FF000
	020 Move X0, [X0+2656]
	021 Call 0x1C17CF4
	022 Move X0, 0x21FD000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0x220A000
	026 Move X0, [X0+2224]
	027 Call 0x1C17CF4
	028 Move X0, 0x220A000
	029 Move X0, [X0+2168]
	030 Call 0x1C17CF4
	031 Move X0, 0x220A000
	032 Move X0, [X0+2232]
	033 Call 0x1C17CF4
	034 Move X0, 0x220A000
	035 Move X0, [X0+2240]
	036 Call 0x1C17CF4
	037 Move X0, 0x220A000
	038 Move X0, [X0+2248]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+1535], W8
	042 Move X20, 0x21FD000
	043 Move X0, [X19+48]
	044 Move X20, [X20+2512]
	045 Compare X0, 0
	046 JumpIfEqual {53}
	047 Move W8, [X0+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W1, W31
	050 Move X2, X31
	051 Call BitConverter.ToInt64, X0, X1
	052 Move X21, X0
	053 Move X21, X31
	054 Move X0, [X20]
	055 Move W1, 8
	056 Call 0x1C17D6C
	057 Compare X0, 0
	058 JumpIfEqual {204}
	059 Move X22, 0x2209000
	060 Move X22, [X22+2248]
	061 Move X20, X0
	062 Move X0, [X22]
	063 Compare X0, 0
	064 JumpIfEqual {70}
	065 Move X8, [X20]
	066 Move X1, [X8+64]
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {201}
	070 Move W8, [X20+24]
	071 Compare W8, 0
	072 JumpIfEqual {200}
	073 Move X9, [X22]
	074 Move X22, 0x2209000
	075 Move X22, [X22+2240]
	076 Move [X20+32], X9
	077 Move X0, [X22]
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {201}
	085 Move W8, [X20+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X22]
	088 Move X23, 0x21FC000
	089 Move X23, [X23+1880]
	090 Add X1, X31, 28
	091 Move [X20+40], X8
	092 Move W8, [X19+40]
	093 Move X0, [X23]
	094 Move [X31+28], W8
	095 Call 0x1C17E04
	096 Move X22, X0
	097 Compare X0, 0
	098 JumpIfEqual {105}
	099 Move X8, [X20]
	100 Move X0, X22
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {201}
	105 Move W8, [X20+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X24, 0x2209000
	108 Move X24, [X24+2232]
	109 Move [X20+48], X22
	110 Move X0, [X24]
	111 Compare X0, 0
	112 JumpIfEqual {119}
	113 Move X8, [X20]
	114 Move X1, [X8+64]
	115 Call 0x1C17E00
	116 Compare X0, 0
	117 JumpIfEqual {201}
	118 Move W8, [X20+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, [X24]
	121 Add X1, X31, 24
	122 Move [X20+56], X8
	123 Move W8, [X19+44]
	124 Move X0, [X23]
	125 Move [X31+24], W8
	126 Call 0x1C17E04
	127 Move X22, X0
	128 Compare X0, 0
	129 JumpIfEqual {136}
	130 Move X8, [X20]
	131 Move X0, X22
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {201}
	136 Move W8, [X20+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X23, 0x2209000
	139 Move X23, [X23+2168]
	140 Move [X20+64], X22
	141 Move X0, [X23]
	142 Compare X0, 0
	143 JumpIfEqual {150}
	144 Move X8, [X20]
	145 Move X1, [X8+64]
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfEqual {201}
	149 Move W8, [X20+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, [X23]
	152 Move X9, 0x21FE000
	153 Move X9, [X9+2656]
	154 Add X1, X31, 8
	155 Move [X20+72], X8
	156 Move [X31+8], X21
	157 Move X0, [X9]
	158 Call 0x1C17E04
	159 Move X21, X0
	160 Compare X0, 0
	161 JumpIfEqual {168}
	162 Move X8, [X20]
	163 Move X0, X21
	164 Move X1, [X8+64]
	165 Call 0x1C17E00
	166 Compare X0, 0
	167 JumpIfEqual {201}
	168 Move W8, [X20+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, X19
	171 Move [X20+80], X21
	172 Call Message.ToString, X0
	173 Move X19, X0
	174 Compare X0, 0
	175 JumpIfEqual {182}
	176 Move X8, [X20]
	177 Move X0, X19
	178 Move X1, [X8+64]
	179 Call 0x1C17E00
	180 Compare X0, 0
	181 JumpIfEqual {201}
	182 Move W8, [X20+24]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X8, 0x2209000
	185 Move X8, [X8+2224]
	186 Move [X20+88], X19
	187 Move X1, X20
	188 Move X2, X31
	189 Move X0, [X8]
	190 Call String.Format, X0, X1
	191 Move X20, [X31+64]
	192 Move X19, [X31+72]
	193 Move X22, [X31+48]
	194 Move X21, [X31+56]
	195 Move X24, [X31+32]
	196 Move X23, [X31+40]
	197 Move X30, [X31+16]
	198 Add X31, X31, 80
	199 Return X0
	200 Call 0x1C17F28
	201 Call 0x1C17F44
	202 Move X1, X31
	203 Call 0x1C17DEC
	204 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01EF8214 ADD X1, X31, 0xC
	0x01EF8218 STR X8, [X20 + 0x28]
	0x01EF821C LDR W8, [X19 + 0x28]

ISIL:
	001 Move W1, 10
	002 Move X2, X31
	003 Call Message..ctor, X0, X1, X2
	004 Return 

