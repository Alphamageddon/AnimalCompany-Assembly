Type: LeanAudio

Method: LeanAudioOptions options()

Disassembly:
	0x031A9E04 MOV V2.16B, V9.16B
	0x031A9E08 BL 0x31A9B48
	0x031A9E0C CBZ X0, 0x31A9E48
	0x031A9E10 FMOV S0, 1
	0x031A9E14 MOV X1, X31
	0x031A9E18 MOV X19, X0
	0x031A9E1C BL 0x3BFD0A0
	0x031A9E20 MOV X0, X19
	0x031A9E24 MOV V0.16B, V8.16B
	0x031A9E28 MOV X1, X31
	0x031A9E2C BL 0x3BFC8DC
	0x031A9E30 MOV X0, X19
	0x031A9E34 LDP X20, X19, [X31 + 0x30]
	0x031A9E38 LDP X30, X21, [X31 + 0x20]
	0x031A9E3C LDP D9, D8, [X31 + 0x10]
	0x031A9E40 LDP D11, D10, [X31], #0x40
	0x031A9E44 RET
	0x031A9E48 BL 0x1C16F20
	0x031A9E4C SUB X31, X31, 0x80
	0x031A9E50 STR D8, [X31 + 0x40]
	0x031A9E54 STR X30, [X31 + 0x48]
	0x031A9E58 STP X24, X23, [X31 + 0x50]
	0x031A9E5C STP X22, X21, [X31 + 0x60]
	0x031A9E60 STP X20, X19, [X31 + 0x70]
	0x031A9E64 ADRP X20, 0x1232000
	0x031A9E68 LDRB W8, [X20 + 0xE3B]
	0x031A9E6C MOV V8.16B, V0.16B
	0x031A9E70 MOV X19, X1
	0x031A9E74 MOV X21, X0
	0x031A9E78 TBNZ X8, 0x0, 0x31A9EA8
	0x031A9E7C ADRP X0, 0xF51000
	0x031A9E80 LDR X0, [X0 + 0x730]
	0x031A9E84 BL 0x1C16CF4
	0x031A9E88 ADRP X0, 0xF51000
	0x031A9E8C LDR X0, [X0 + 0x790]
	0x031A9E90 BL 0x1C16CF4
	0x031A9E94 ADRP X0, 0xF4A000
	0x031A9E98 LDR X0, [X0 + 0x638]
	0x031A9E9C BL 0x1C16CF4
	0x031A9EA0 MOVZ W8, 0x1
	0x031A9EA4 STRB W8, [X20 + 0xE3B]
	0x031A9EA8 CBZ X21, 0x31A9FE0
	0x031A9EAC ADRP X22, 0xF4A000
	0x031A9EB0 LDR X22, [X22 + 0x638]
	0x031A9EB4 MOV X0, X21
	0x031A9EB8 MOV X1, X31
	0x031A9EBC BL 0x3BFBD68
	0x031A9EC0 MOV W20, W0
	0x031A9EC4 MOV X0, X21
	0x031A9EC8 MOV X1, X31
	0x031A9ECC BL 0x3BFBDA4
	0x031A9ED0 LDR X8, [X22]
	0x031A9ED4 MUL W1, W0, W20
	0x031A9ED8 MOV X0, X8
	0x031A9EDC BL 0x1C16D6C
	0x031A9EE0 MOV X20, X0
	0x031A9EE4 MOV X0, X21
	0x031A9EE8 MOV X1, X20
	0x031A9EEC MOV W2, W31
	0x031A9EF0 MOV X3, X31
	0x031A9EF4 BL 0x3BFBE1C
	0x031A9EF8 CBZ X20, 0x31A9FE0
	0x031A9EFC ADRP X8, 0xF51000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1233000
	006 Move X19, 0xF77000
	007 Move W8, [X20+3632]
	008 Move X19, [X19+600]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xF77000
	014 Move X0, [X0+608]
	015 Call 0x1C17CF4
	016 Move X0, 0xF77000
	017 Move X0, [X0+600]
	018 Call 0x1C17CF4
	019 Move X0, 0xF4B000
	020 Move X0, [X0+1592]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3632], W8
	024 Move X0, [X19]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X19]
	030 Move X8, [X0+184]
	031 Move X20, 0xF77000
	032 Move X9, [X8+8]
	033 Move X20, [X20+608]
	034 Compare X9, 0
	035 JumpIfNotEqual {56}
	036 Move W9, [X0+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {42}
	039 Call 0x1C17DFC
	040 Move X8, [X19]
	041 Move X8, [X8+184]
	042 Move X21, 0xF4B000
	043 Move W1, [X8+4]
	044 Move X21, [X21+1592]
	045 Move X0, [X21]
	046 Call 0x1C17D6C
	047 Move X8, [X19]
	048 Move X8, [X8+184]
	049 Move [X8+8], X0
	050 Move W1, [X8+4]
	051 Move X0, [X21]
	052 Call 0x1C17D6C
	053 Move X8, [X19]
	054 Move X8, [X8+184]
	055 Move [X8+24], X0
	056 Move X0, [X20]
	057 Call 0x1C17F10
	058 Move X8, -40611840
	059 Move V0, [X8+1936]
	060 Move W8, 0xAC44
	061 Move W9, 1
	062 Move X1, X31
	063 Move X19, X0
	064 Move [X0+40], W8
	065 Move [X0+44], D0
	066 Move [X0+52], W9
	067 Call Object..ctor, X0
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0

Method: LeanAudioStream createAudioStream(UnityEngine.AnimationCurve volume, UnityEngine.AnimationCurve frequency, LeanAudioOptions options = null)

Disassembly:
	0x031A9F24 AND X8, X8, 0x0
	0x031A9F28 ADD X23, X20, 0x20
	0x031A9F2C ADD X24, X21, 0x20
	0x031A9F30 CMP X22, W8, UXTW
	0x031A9F34 B.CS 0x31A9FDC
	0x031A9F38 LDR V1, [X23, X22, LSL #2]
	0x031A9F3C SCVTF S0, W22
	0x031A9F40 FMUL S0, S0, S8
	0x031A9F44 ADD X0, X31, 0x20
	0x031A9F48 MOV X1, X31
	0x031A9F4C STP X31, X31, [X31 + 0x20]
	0x031A9F50 STR W31, [X31 + 0x38]
	0x031A9F54 STR X31, [X31 + 0x30]
	0x031A9F58 BL 0x3C00A74
	0x031A9F5C CBZ X21, 0x31A9FE0
	0x031A9F60 LDR V0, [X31 + 0x2]
	0x031A9F64 LDUR V1, [X31 + 0x2C]
	0x031A9F68 STR V0, [X31]
	0x031A9F6C STUR V1, [X31 + 0xC]
	0x031A9F70 LDR W8, [X21 + 0x18]
	0x031A9F74 CMP X22, X8
	0x031A9F78 B.CS 0x31A9FDC
	0x031A9F7C LDUR V0, [X31 + 0xC]
	0x031A9F80 LDR V1, [X31]
	0x031A9F84 ADD X22, X22, 0x1
	0x031A9F88 STUR V0, [X24 + 0xC]
	0x031A9F8C STR V1, [X24], #0x1C
	0x031A9F90 LDR W8, [X20 + 0x18]
	0x031A9F94 CMP X22, W8, SXTW
	0x031A9F98 B.LT 0x31A9F30
	0x031A9F9C ADRP X8, 0xF51000
	0x031A9FA0 LDR X8, [X8 + 0x730]
	0x031A9FA4 LDR X0, [X8]
	0x031A9FA8 BL 0x1C16F10
	0x031A9FAC MOV X1, X21
	0x031A9FB0 MOV X2, X31
	0x031A9FB4 MOV X20, X0
	0x031A9FB8 BL 0x3C013D4
	0x031A9FBC STR X20, [X19]
	0x031A9FC0 LDP X20, X19, [X31 + 0x70]
	0x031A9FC4 LDP X22, X21, [X31 + 0x60]
	0x031A9FC8 LDP X24, X23, [X31 + 0x50]
	0x031A9FCC LDR X30, [X31 + 0x48]
	0x031A9FD0 LDR V8, [X31 + 0x40]
	0x031A9FD4 ADD X31, X31, 0x80
	0x031A9FD8 RET
	0x031A9FDC BL 0x1C16F28
	0x031A9FE0 BL 0x1C16F20
	0x031A9FE4 MOV X1, X31
	0x031A9FE8 B 0x33BDD8C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1233000
	007 Move W8, [X22+3633]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF77000
	016 Move X0, [X0+608]
	017 Call 0x1C17CF4
	018 Move X0, 0xF77000
	019 Move X0, [X0+600]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3633], W8
	023 Move X22, 0xF77000
	024 Move X22, [X22+600]
	025 Compare X19, 0
	026 JumpIfNotEqual {41}
	027 Move X8, 0xF77000
	028 Move X8, [X8+608]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, -40611840
	032 Move V0, [X8+1936]
	033 Move W8, 0xAC44
	034 Move W9, 1
	035 Move X1, X31
	036 Move X19, X0
	037 Move [X0+40], W8
	038 Move [X0+44], D0
	039 Move [X0+52], W9
	040 Call Object..ctor, X0
	041 Move [X19+52], W31
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X20
	049 Move X2, X19
	050 Call LeanAudio.createAudioWave, X0, X1, X2
	051 Move X1, X19
	052 Call LeanAudio.createAudioFromWave, X0, X1
	053 Move X0, [X19+56]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0

Method: UnityEngine.AudioClip createAudio(UnityEngine.AnimationCurve volume, UnityEngine.AnimationCurve frequency, LeanAudioOptions options = null)

Disassembly:
	0x031AA850 FCSEL S0, S1, S0, GT
	0x031AA854 FADD S0, S2, S0
	0x031AA858 FSUB S1, S0, S8
	0x031AA85C B.LE 0x31AA86C
	0x031AA860 FCMP S1, 0x0
	0x031AA864 B.LE 0x31AA874
	0x031AA868 B 0x31AA878
	0x031AA86C FCMP S1, 0x0
	0x031AA870 B.MI 0x31AA878
	0x031AA874 MOV V8.16B, V0.16B
	0x031AA878 MOV V0.16B, V11.16B
	0x031AA87C MOV V1.16B, V10.16B
	0x031AA880 MOV V2.16B, V9.16B
	0x031AA884 MOV V3.16B, V8.16B
	0x031AA888 LDR X30, [X31 + 0x40]
	0x031AA88C LDP D9, D8, [X31 + 0x30]
	0x031AA890 LDP D11, D10, [X31 + 0x20]
	0x031AA894 LDP D13, D12, [X31 + 0x10]
	0x031AA898 LDP D15, D14, [X31], #0x50
	0x031AA89C RET
	0x031AA8A0 STR D14, [X31 - 0x50]!
	0x031AA8A4 STP D13, D12, [X31 + 0x10]
	0x031AA8A8 STP D11, D10, [X31 + 0x20]
	0x031AA8AC STP D9, D8, [X31 + 0x30]
	0x031AA8B0 STP X30, X19, [X31 + 0x40]
	0x031AA8B4 MOV V8.16B, V7.16B
	0x031AA8B8 MOV V12.16B, V6.16B
	0x031AA8BC MOV V13.16B, V5.16B
	0x031AA8C0 MOV V11.16B, V3.16B
	0x031AA8C4 MOV V14.16B, V2.16B
	0x031AA8C8 MOV X19, X0
	0x031AA8CC MOV V10.16B, V1.16B
	0x031AA8D0 FCMP S4, 0x0
	0x031AA8D4 MOV V9.16B, V0.16B
	0x031AA8D8 B.PL 0x31AA8E8
	0x031AA8DC MOV X0, X31
	0x031AA8E0 BL 0x3C3C714
	0x031AA8E4 MOV V4.16B, V0.16B
	0x031AA8E8 LDR V1, [X19]
	0x031AA8EC FDIV S2, S4, S14
	0x031AA8F0 FSUB S0, S10, S9
	0x031AA8F4 FMUL S2, S2, S12
	0x031AA8F8 FMUL S3, S4, S13
	0x031AA8FC FMOV S4, 1
	0x031AA900 FMUL S0, S0, S2
	0x031AA904 FSUB S3, S4, S3
	0x031AA908 FADD S0, S1, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1232000
	007 Move W8, [X22+3634]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF76000
	016 Move X0, [X0+608]
	017 Call 0x1C17CF4
	018 Move X0, 0xF76000
	019 Move X0, [X0+600]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3634], W8
	023 Move X22, 0xF76000
	024 Move X22, [X22+600]
	025 Compare X20, 0
	026 JumpIfNotEqual {41}
	027 Move X8, 0xF76000
	028 Move X8, [X8+608]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, -40615936
	032 Move V0, [X8+1936]
	033 Move W8, 0xAC44
	034 Move W9, 1
	035 Move X1, X31
	036 Move X20, X0
	037 Move [X0+40], W8
	038 Move [X0+44], D0
	039 Move [X0+52], W9
	040 Call Object..ctor, X0
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X19
	048 Move X2, X20
	049 Call LeanAudio.createAudioWave, X0, X1, X2
	050 Move X1, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Call LeanAudio.createAudioFromWave, X0, X1
	057 Return X0

Method: System.Int32 createAudioWave(UnityEngine.AnimationCurve volume, UnityEngine.AnimationCurve frequency, LeanAudioOptions options)

Disassembly:
	0x031A9FEC STR X30, [X31 - 0x20]!
	0x031A9FF0 STP X20, X19, [X31 + 0x10]
	0x031A9FF4 ADRP X19, 0x1232000
	0x031A9FF8 ADRP X20, 0xF76000
	0x031A9FFC LDRB W8, [X19 + 0xE3C]
	0x031AA000 B 0x3EB187C
	0x031AA004 TBNZ X8, 0x0, 0x31AA01C
	0x031AA008 ADRP X0, 0xF75000
	0x031AA00C LDR X0, [X0 + 0x258]
	0x031AA010 BL 0x1C16CF4
	0x031AA014 MOVZ W8, 0x1
	0x031AA018 STRB W8, [X19 + 0xE3C]
	0x031AA01C LDR X8, [X20]
	0x031AA020 MOVZ X9, 0x2C28
	0x031AA024 LDP X20, X19, [X31 + 0x10]
	0x031AA028 MOVK X9, 0x38F10000
	0x031AA02C LDR X8, [X8 + 0xB8]
	0x031AA030 MOVK X9, 0xC350
	0x031AA034 STR X9, [X8]
	0x031AA038 STR W31, [X8 + 0x10]
	0x031AA03C LDR X30, [X31], #0x20
	0x031AA040 RET
	0x031AA044 STR W1, [X0 + 0x28]
	0x031AA048 RET
	0x031AA04C STR X1, [X0 + 0x18]
	0x031AA050 RET
	0x031AA054 STR W31, [X0 + 0x10]
	0x031AA058 RET
	0x031AA05C MOVZ W8, 0x1
	0x031AA060 STR W8, [X0 + 0x10]
	0x031AA064 RET
	0x031AA068 MOVZ W8, 0x2
	0x031AA06C STR W8, [X0 + 0x10]
	0x031AA070 RET
	0x031AA074 MOVZ W8, 0x3
	0x031AA078 STR W8, [X0 + 0x10]
	0x031AA07C RET
	0x031AA080 STR W1, [X0 + 0x10]
	0x031AA084 RET
	0x031AA088 STR S0, [X0 + 0x2C]
	0x031AA08C RET
	0x031AA090 STR S0, [X0 + 0x30]
	0x031AA094 RET
	0x031AA098 STP D11, D10, [X31 - 0x30]!
	0x031AA09C STP D9, D8, [X31 + 0x10]
	0x031AA0A0 STP X30, X19, [X31 + 0x20]
	0x031AA0A4 MOV V10.16B, V3.16B
	0x031AA0A8 MOV V11.16B, V2.16B
	0x031AA0AC MOV X19, X0
	0x031AA0B0 MOV V8.16B, V1.16B
	0x031AA0B4 FCMP S4, 0x0
	0x031AA0B8 MOV V9.16B, V0.16B
	0x031AA0BC B.PL 0x31AA0CC
	0x031AA0C0 MOV X0, X31
	0x031AA0C4 BL 0x3C3C714
	0x031AA0C8 MOV V4.16B, V0.16B
	0x031AA0CC ADRP X8, 0xFFFFFFFFFD93F000
	0x031AA0D0 LDR V1, [X8 + 0xF28]
	0x031AA0D4 ADRP X8, 0xFFFFFFFFFD940000
	0x031AA0D8 LDR V5, [X8 + 0x368]
	0x031AA0DC ADRP X8, 0xFFFFFFFFFD940000
	0x031AA0E0 LDR V6, [X8 + 0x120]
	0x031AA0E4 FMOV S0, 2
	0x031AA0E8 FMAX S3, S11, S1
	0x031AA0EC FDIV S1, S0, S3
	0x031AA0F0 FMUL S0, S1, S4
	0x031AA0F4 FMOV S2, 1
	0x031AA0F8 FMUL S5, S0, S5
	0x031AA0FC FMUL S6, S0, S6
	0x031AA100 FADD S7, S0, S2
	0x031AA104 FMUL S5, S0, S5
	0x031AA108 FMUL S6, S0, S6
	0x031AA10C FADD S5, S7, S5
	0x031AA110 FMUL S0, S0, S6
	0x031AA114 FADD S0, S5, S0
	0x031AA118 FCMP S10, 0x0
	0x031AA11C FDIV S2, S2, S0
	0x031AA120 FSUB S5, S9, S8
	0x031AA124 B.LE 0x31AA144
	0x031AA128 FNMUL S0, S3, S10
	0x031AA12C FCMP S5, S0
	0x031AA130 B.MI 0x31AA148
	0x031AA134 FMUL S0, S3, S10
	0x031AA138 FCMP S5, S0
	0x031AA13C FCSEL S0, S0, S5, GT
	0x031AA140 B 0x31AA148
	0x031AA144 MOV V0.16B, V5.16B
	0x031AA148 LDR V3, [X19]
	0x031AA14C FMUL S5, S1, S0
	0x031AA150 FSUB S6, S9, S0
	0x031AA154 FSUB S7, S8, S9
	0x031AA158 FADD S5, S3, S5
	0x031AA15C FMUL S5, S4, S5
	0x031AA160 FADD S0, S0, S5
	0x031AA164 FMUL S0, S2, S0
	0x031AA168 FCMP S7, 0x0
	0x031AA16C FADD S0, S6, S0
	0x031AA170 CSET W8, LE
	0x031AA174 FCMP S0, S8
	0x031AA178 CSET W9, GT
	0x031AA17C CMP W8, W9
	0x031AA180 B.EQ 0x31AA194
	0x031AA184 FSUB S0, S8, S8
	0x031AA188 FDIV S1, S0, S4
	0x031AA18C MOV V0.16B, V8.16B
	0x031AA190 B 0x31AA1A0
	0x031AA194 FMUL S1, S1, S5
	0x031AA198 FSUB S1, S3, S1
	0x031AA19C FMUL S1, S2, S1
	0x031AA1A0 STR S1, [X19]
	0x031AA1A4 LDP X30, X19, [X31 + 0x20]
	0x031AA1A8 LDP D9, D8, [X31 + 0x10]
	0x031AA1AC LDP D11, D10, [X31], #0x30
	0x031AA1B0 RET
	0x031AA1B4 STP D15, D14, [X31 - 0x50]!
	0x031AA1B8 STP D13, D12, [X31 + 0x10]
	0x031AA1BC STP D11, D10, [X31 + 0x20]
	0x031AA1C0 STP D9, D8, [X31 + 0x30]
	0x031AA1C4 STP X30, X19, [X31 + 0x40]
	0x031AA1C8 LDR V14, [X31 + 0x50]
	0x031AA1CC MOV V11.16B, V4.16B
	0x031AA1D0 MOV V12.16B, V2.16B
	0x031AA1D4 MOV V13.16B, V1.16B
	0x031AA1D8 MOV V1.16B, V3.16B
	0x031AA1DC MOV V2.16B, V6.16B
	0x031AA1E0 MOV V3.16B, V7.16B
	0x031AA1E4 MOV V4.16B, V14.16B
	0x031AA1E8 MOV V8.16B, V7.16B
	0x031AA1EC MOV V9.16B, V6.16B
	0x031AA1F0 MOV X19, X0
	0x031AA1F4 MOV V10.16B, V5.16B
	0x031AA1F8 BL 0x31AA098
	0x031AA1FC MOV V15.16B, V0.16B
	0x031AA200 ADD X0, X19, 0x4
	0x031AA204 MOV V0.16B, V13.16B
	0x031AA208 MOV V1.16B, V11.16B
	0x031AA20C MOV V2.16B, V9.16B
	0x031AA210 MOV V3.16B, V8.16B
	0x031AA214 MOV V4.16B, V14.16B
	0x031AA218 BL 0x31AA098
	0x031AA21C MOV V11.16B, V0.16B
	0x031AA220 ADD X0, X19, 0x8
	0x031AA224 MOV V0.16B, V12.16B
	0x031AA228 MOV V1.16B, V10.16B
	0x031AA22C MOV V2.16B, V9.16B
	0x031AA230 MOV V3.16B, V8.16B
	0x031AA234 MOV V4.16B, V14.16B
	0x031AA238 BL 0x31AA098
	0x031AA23C MOV V1.16B, V11.16B
	0x031AA240 LDP X30, X19, [X31 + 0x40]
	0x031AA244 LDP D9, D8, [X31 + 0x30]
	0x031AA248 LDP D11, D10, [X31 + 0x20]
	0x031AA24C LDP D13, D12, [X31 + 0x10]
	0x031AA250 MOV V2.16B, V0.16B
	0x031AA254 MOV V0.16B, V15.16B
	0x031AA258 LDP D15, D14, [X31], #0x50
	0x031AA25C RET
	0x031AA260 SUB X31, X31, 0x60
	0x031AA264 STP D15, D14, [X31 + 0x10]
	0x031AA268 STP D13, D12, [X31 + 0x20]
	0x031AA26C STP D11, D10, [X31 + 0x30]
	0x031AA270 STP D9, D8, [X31 + 0x40]
	0x031AA274 STP X30, X19, [X31 + 0x50]
	0x031AA278 LDR V14, [X31 + 0x60]
	0x031AA27C LDR V15, [X31 + 0x68]
	0x031AA280 LDR V8, [X31 + 0x70]
	0x031AA284 STP S3, S7, [X31 + 0x8]
	0x031AA288 MOV V12.16B, V2.16B
	0x031AA28C MOV V13.16B, V1.16B
	0x031AA290 MOV V1.16B, V4.16B
	0x031AA294 MOV V2.16B, V14.16B
	0x031AA298 MOV V3.16B, V15.16B
	0x031AA29C MOV V4.16B, V8.16B
	0x031AA2A0 MOV X19, X0
	0x031AA2A4 MOV V9.16B, V6.16B
	0x031AA2A8 MOV V10.16B, V5.16B
	0x031AA2AC BL 0x31AA098
	0x031AA2B0 MOV V11.16B, V0.16B
	0x031AA2B4 ADD X0, X19, 0x4
	0x031AA2B8 MOV V0.16B, V13.16B
	0x031AA2BC MOV V1.16B, V10.16B
	0x031AA2C0 MOV V2.16B, V14.16B
	0x031AA2C4 MOV V3.16B, V15.16B
	0x031AA2C8 MOV V4.16B, V8.16B
	0x031AA2CC BL 0x31AA098
	0x031AA2D0 MOV V10.16B, V0.16B
	0x031AA2D4 ADD X0, X19, 0x8
	0x031AA2D8 MOV V0.16B, V12.16B
	0x031AA2DC MOV V1.16B, V9.16B
	0x031AA2E0 MOV V2.16B, V14.16B
	0x031AA2E4 MOV V3.16B, V15.16B
	0x031AA2E8 MOV V4.16B, V8.16B
	0x031AA2EC BL 0x31AA098
	0x031AA2F0 MOV V9.16B, V0.16B
	0x031AA2F4 LDP S0, S1, [X31 + 0x8]
	0x031AA2F8 ADD X0, X19, 0xC
	0x031AA2FC MOV V2.16B, V14.16B
	0x031AA300 MOV V3.16B, V15.16B
	0x031AA304 MOV V4.16B, V8.16B
	0x031AA308 BL 0x31AA098
	0x031AA30C MOV V3.16B, V0.16B
	0x031AA310 MOV V0.16B, V11.16B
	0x031AA314 MOV V1.16B, V10.16B
	0x031AA318 MOV V2.16B, V9.16B
	0x031AA31C LDP X30, X19, [X31 + 0x50]
	0x031AA320 LDP D9, D8, [X31 + 0x40]
	0x031AA324 LDP D11, D10, [X31 + 0x30]
	0x031AA328 LDP D13, D12, [X31 + 0x20]
	0x031AA32C LDP D15, D14, [X31 + 0x10]
	0x031AA330 ADD X31, X31, 0x60
	0x031AA334 RET
	0x031AA338 STP D13, D12, [X31 - 0x40]!
	0x031AA33C STP D11, D10, [X31 + 0x10]
	0x031AA340 STP D9, D8, [X31 + 0x20]
	0x031AA344 STP X30, X19, [X31 + 0x30]
	0x031AA348 MOV V10.16B, V6.16B
	0x031AA34C MOV V11.16B, V5.16B
	0x031AA350 MOV V8.16B, V3.16B
	0x031AA354 MOV V12.16B, V2.16B
	0x031AA358 MOV X19, X0
	0x031AA35C MOV V13.16B, V1.16B
	0x031AA360 FCMP S4, 0x0
	0x031AA364 MOV V9.16B, V0.16B
	0x031AA368 B.PL 0x31AA378
	0x031AA36C MOV X0, X31
	0x031AA370 BL 0x3C3C714
	0x031AA374 MOV V4.16B, V0.16B

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X28
	012 Move [X31+152], X27
	013 Move [X31+160], X26
	014 Move [X31+168], X25
	015 Move [X31+176], X24
	016 Move [X31+184], X23
	017 Move [X31+192], X22
	018 Move [X31+200], X21
	019 Move [X31+208], X20
	020 Move [X31+216], X19
	021 Move X22, 0x1232000
	022 Move W8, [X22+3635]
	023 Move X19, X2
	024 Move X20, X1
	025 Move X21, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, 0xF4A000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0xF76000
	034 Move X0, [X0+600]
	035 Call 0x1C17CF4
	036 Move X0, 0xF76000
	037 Move X0, [X0+616]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+3635], W8
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+56], W31
	044 Move [X31+48], X31
	045 Move [X31+140], W31
	046 Compare X21, 0
	047 JumpIfEqual {254}
	048 Move X22, 0xF76000
	049 Move X22, [X22+600]
	050 Move X0, X21
	051 Move X1, X31
	052 Call AnimationCurve.get_length, X0
	053 Subtract W1, W0, 1
	054 Add X8, X31, 0
	055 Move X0, X21
	056 Move X2, X31
	057 Call AnimationCurve.get_Item, X0, X1
	058 Move V0, [X31]
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Add X0, X31, 32
	061 Move X1, X31
	062 Move [X31+2], V0
	063 Move [X31+44], V1
	064 Call Keyframe.get_time, X0
	065 Move X8, -40632320
	066 Move X9, -40628224
	067 Move X0, [X22]
	068 Move V13, [X8+3916]
	069 Move V14, [X9+284]
	070 Move V8, V0
	071 Move W24, W31
	072 Move W23, W31
	073 Move S9, W31
	074 Move S15, 1
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X22]
	080 Move X8, [X0+184]
	081 Move W8, [X8+4]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Compare X20, 0
	084 JumpIfEqual {254}
	085 Move X0, X20
	086 Move V0, V9
	087 Move X1, X31
	088 Call AnimationCurve.Evaluate, X0, V0
	089 Move X0, [X22]
	090 Move V10, V0
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X22]
	096 Move X8, [X0+184]
	097 Move V0, [X8]
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 Move W8, [X0+224]
	100 Move V10, V0
	101 Compare W8, 0
	102 JumpIfNotEqual {107}
	103 Call 0x1C17DFC
	104 Move X8, [X22]
	105 Move X8, [X8+184]
	106 Move V10, [X8]
	107 Move S0, 0.5
	108 Multiply S0, S10, S0
	109 Add S12, S9, S0
	110 Move X0, X21
	111 Move V0, V12
	112 Move X1, X31
	113 Call AnimationCurve.Evaluate, X0, V0
	114 Compare X19, 0
	115 JumpIfEqual {254}
	116 Move X8, [X19+24]
	117 Move V11, V0
	118 Compare X8, 0
	119 JumpIfEqual {141}
	120 Move X9, [X8+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 And X26, X9, 0
	123 Move X25, X31
	124 Move X27, W26
	125 Add X28, X8, 36
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction FDIV not yet implemented."
	129 Multiply S0, S9, S0
	130 Multiply S0, S0, S13
	131 Add S0, S0, S14
	132 Call 0x3EB2B70
	133 Move V1, [X28+12]
	134 NotImplemented "Instruction FABS not yet implemented."
	135 Add X25, X25, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract S2, S15, S1
	138 Multiply S0, S2, S0
	139 Add S0, S1, S0
	140 Multiply S11, S11, S0
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 Move X0, [X22]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X22]
	148 Move X8, [X0+184]
	149 Move W9, [X8+4]
	150 Subtract W10, W9, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W9, [X0+224]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CINC not yet implemented."
	155 Compare W9, 0
	156 JumpIfNotEqual {160}
	157 Call 0x1C17DFC
	158 Move X0, [X22]
	159 Move X8, [X0+184]
	160 Move X9, [X8+8]
	161 Compare X9, 0
	162 JumpIfEqual {254}
	163 Move W11, [X9+24]
	164 NotImplemented "Instruction SBFM not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add S9, S9, S10
	167 Add X9, X9, W10
	168 Move [X9+32], S9
	169 Move X8, [X8+24]
	170 Compare X8, 0
	171 JumpIfEqual {254}
	172 Move W9, [X8+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X10, W23
	175 Or X10, X10, 1
	176 Add X11, X8, W23
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X11+32], S9
	179 NotImplemented "Instruction FNEG not yet implemented."
	180 And W31, W24, 1
	181 Add X8, X8, X10
	182 Add W23, W23, 2
	183 NotImplemented "Instruction FCSEL not yet implemented."
	184 Add W24, W24, 1
	185 Move [X8+32], S0
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {193}
	189 Call 0x1C17DFC
	190 Move X8, [X22]
	191 Move X8, [X8+184]
	192 Move W9, [X8+4]
	193 Move W8, W9
	194 ShiftRight W8, 31
	195 And W8, W8, 0x3FFFFFFF
	196 Add X0, X31, 140
	197 Move X1, X31
	198 Move [X31+140], W8
	199 Call Int32.ToString, X0
	200 Move X8, 0xF76000
	201 Move X8, [X8+616]
	202 Move X1, X0
	203 Move X2, X31
	204 Move X8, [X8]
	205 Move X0, X8
	206 Call String.Concat, X0, X1
	207 Move X8, 0xF4A000
	208 Move X8, [X8+2600]
	209 Move X19, X0
	210 Move X8, [X8]
	211 Move W9, [X8+224]
	212 Compare W9, 0
	213 JumpIfNotEqual {216}
	214 Move X0, X8
	215 Call 0x1C17DFC
	216 Move X0, X19
	217 Move X1, X31
	218 Call Debug.LogError, X0
	219 Move X0, [X22]
	220 Subtract W19, W23, 2
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {226}
	224 Call 0x1C17DFC
	225 Move X0, [X22]
	226 Move X8, [X0+184]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction CINC not yet implemented."
	229 Move W0, W19
	230 Move X20, [X31+208]
	231 Move X19, [X31+216]
	232 Move X22, [X31+192]
	233 Move X21, [X31+200]
	234 Move X24, [X31+176]
	235 Move X23, [X31+184]
	236 Move X26, [X31+160]
	237 Move X25, [X31+168]
	238 Move X28, [X31+144]
	239 Move X27, [X31+152]
	240 Move X30, [X31+128]
	241 Move D9, [X31+112]
	242 Move D8, [X31+120]
	243 Move D11, [X31+96]
	244 Move D10, [X31+104]
	245 Move D13, [X31+80]
	246 Move D12, [X31+88]
	247 Move D15, [X31+64]
	248 Move D14, [X31+72]
	249 NotImplemented "Instruction SBFM not yet implemented."
	250 Move [X8+16], W9
	251 Add X31, X31, 224
	252 Return X0
	253 Call 0x1C17F28
	254 Call 0x1C17F20

Method: UnityEngine.AudioClip createAudioFromWave(System.Int32 waveLength, LeanAudioOptions options)

Disassembly:
	0x031AA378 LDR V1, [X19]
	0x031AA37C FDIV S2, S4, S12
	0x031AA380 FSUB S0, S13, S9
	0x031AA384 FMUL S2, S2, S10
	0x031AA388 FMUL S3, S4, S11
	0x031AA38C FMOV S4, 1
	0x031AA390 FMUL S0, S0, S2
	0x031AA394 FSUB S3, S4, S3
	0x031AA398 FADD S0, S1, S0
	0x031AA39C FMUL S0, S3, S0
	0x031AA3A0 FNEG S5, S8
	0x031AA3A4 FABS S1, S0
	0x031AA3A8 FCMP S0, 0x0
	0x031AA3AC FCSEL S2, S8, S5, GE
	0x031AA3B0 FCMP S1, S8
	0x031AA3B4 FMOV S1, W31
	0x031AA3B8 FCCMP S8, S1, 0x4, GT
	0x031AA3BC FCSEL S1, S2, S0, GT
	0x031AA3C0 FADD S0, S1, S9
	0x031AA3C4 STR S1, [X19]
	0x031AA3C8 LDP X30, X19, [X31 + 0x30]
	0x031AA3CC LDP D9, D8, [X31 + 0x20]
	0x031AA3D0 LDP D11, D10, [X31 + 0x10]
	0x031AA3D4 LDP D13, D12, [X31], #0x40
	0x031AA3D8 RET
	0x031AA3DC SUB X31, X31, 0x60
	0x031AA3E0 STP D15, D14, [X31 + 0x10]
	0x031AA3E4 STP D13, D12, [X31 + 0x20]
	0x031AA3E8 STP D11, D10, [X31 + 0x30]
	0x031AA3EC STP D9, D8, [X31 + 0x40]
	0x031AA3F0 STP X30, X19, [X31 + 0x50]
	0x031AA3F4 LDR V14, [X31 + 0x60]
	0x031AA3F8 LDR V15, [X31 + 0x68]
	0x031AA3FC LDR V10, [X31 + 0x70]
	0x031AA400 MOV V9.16B, V6.16B
	0x031AA404 STP S2, S5, [X31 + 0x8]
	0x031AA408 MOV V11.16B, V4.16B
	0x031AA40C MOV V13.16B, V1.16B
	0x031AA410 MOV V1.16B, V3.16B
	0x031AA414 MOV V2.16B, V6.16B
	0x031AA418 MOV V3.16B, V7.16B
	0x031AA41C MOV V4.16B, V14.16B
	0x031AA420 MOV V5.16B, V15.16B
	0x031AA424 MOV V6.16B, V10.16B
	0x031AA428 MOV V8.16B, V7.16B
	0x031AA42C MOV X19, X0
	0x031AA430 BL 0x31AA338
	0x031AA434 MOV V12.16B, V0.16B
	0x031AA438 ADD X0, X19, 0x4
	0x031AA43C MOV V0.16B, V13.16B
	0x031AA440 MOV V1.16B, V11.16B
	0x031AA444 MOV V2.16B, V9.16B
	0x031AA448 MOV V3.16B, V8.16B
	0x031AA44C MOV V4.16B, V14.16B
	0x031AA450 MOV V5.16B, V15.16B
	0x031AA454 MOV V6.16B, V10.16B
	0x031AA458 BL 0x31AA338
	0x031AA45C MOV V11.16B, V0.16B
	0x031AA460 LDP S0, S1, [X31 + 0x8]
	0x031AA464 ADD X0, X19, 0x8
	0x031AA468 MOV V2.16B, V9.16B
	0x031AA46C MOV V3.16B, V8.16B
	0x031AA470 MOV V4.16B, V14.16B
	0x031AA474 MOV V5.16B, V15.16B
	0x031AA478 MOV V6.16B, V10.16B
	0x031AA47C BL 0x31AA338
	0x031AA480 MOV V2.16B, V0.16B
	0x031AA484 MOV V0.16B, V12.16B
	0x031AA488 MOV V1.16B, V11.16B
	0x031AA48C LDP X30, X19, [X31 + 0x50]
	0x031AA490 LDP D9, D8, [X31 + 0x40]
	0x031AA494 LDP D11, D10, [X31 + 0x30]
	0x031AA498 LDP D13, D12, [X31 + 0x20]
	0x031AA49C LDP D15, D14, [X31 + 0x10]
	0x031AA4A0 ADD X31, X31, 0x60
	0x031AA4A4 RET
	0x031AA4A8 SUB X31, X31, 0x60
	0x031AA4AC STP D15, D14, [X31 + 0x10]
	0x031AA4B0 STP D13, D12, [X31 + 0x20]
	0x031AA4B4 STP D11, D10, [X31 + 0x30]
	0x031AA4B8 STP D9, D8, [X31 + 0x40]
	0x031AA4BC STP X30, X19, [X31 + 0x50]
	0x031AA4C0 LDR V14, [X31 + 0x60]
	0x031AA4C4 LDR V15, [X31 + 0x68]
	0x031AA4C8 LDR V8, [X31 + 0x70]
	0x031AA4CC LDR V11, [X31 + 0x78]
	0x031AA4D0 LDR V9, [X31 + 0x80]
	0x031AA4D4 STP S3, S7, [X31 + 0x8]
	0x031AA4D8 STR S6, [X31 + 0x4]
	0x031AA4DC MOV V10.16B, V5.16B
	0x031AA4E0 MOV V12.16B, V2.16B
	0x031AA4E4 MOV V13.16B, V1.16B
	0x031AA4E8 MOV V1.16B, V4.16B
	0x031AA4EC MOV V2.16B, V14.16B
	0x031AA4F0 MOV V3.16B, V15.16B
	0x031AA4F4 MOV V4.16B, V8.16B
	0x031AA4F8 MOV V5.16B, V11.16B
	0x031AA4FC MOV V6.16B, V9.16B
	0x031AA500 MOV X19, X0
	0x031AA504 BL 0x31AA338
	0x031AA508 STR S0, [X31]
	0x031AA50C ADD X0, X19, 0x4
	0x031AA510 MOV V0.16B, V13.16B
	0x031AA514 MOV V1.16B, V10.16B
	0x031AA518 MOV V2.16B, V14.16B
	0x031AA51C MOV V3.16B, V15.16B
	0x031AA520 MOV V4.16B, V8.16B
	0x031AA524 MOV V5.16B, V11.16B
	0x031AA528 MOV V6.16B, V9.16B
	0x031AA52C BL 0x31AA338
	0x031AA530 LDR V1, [X31 + 0x4]
	0x031AA534 MOV V10.16B, V0.16B
	0x031AA538 ADD X0, X19, 0x8
	0x031AA53C MOV V0.16B, V12.16B
	0x031AA540 MOV V2.16B, V14.16B
	0x031AA544 MOV V3.16B, V15.16B
	0x031AA548 MOV V4.16B, V8.16B
	0x031AA54C MOV V5.16B, V11.16B
	0x031AA550 MOV V6.16B, V9.16B
	0x031AA554 BL 0x31AA338
	0x031AA558 MOV V12.16B, V0.16B
	0x031AA55C LDP S0, S1, [X31 + 0x8]
	0x031AA560 ADD X0, X19, 0xC
	0x031AA564 MOV V2.16B, V14.16B
	0x031AA568 MOV V3.16B, V15.16B
	0x031AA56C MOV V4.16B, V8.16B
	0x031AA570 MOV V5.16B, V11.16B
	0x031AA574 MOV V6.16B, V9.16B
	0x031AA578 BL 0x31AA338
	0x031AA57C MOV V3.16B, V0.16B
	0x031AA580 LDR V0, [X31]
	0x031AA584 MOV V1.16B, V10.16B
	0x031AA588 MOV V2.16B, V12.16B
	0x031AA58C LDP X30, X19, [X31 + 0x50]
	0x031AA590 LDP D9, D8, [X31 + 0x40]
	0x031AA594 LDP D11, D10, [X31 + 0x30]
	0x031AA598 LDP D13, D12, [X31 + 0x20]
	0x031AA59C LDP D15, D14, [X31 + 0x10]
	0x031AA5A0 ADD X31, X31, 0x60
	0x031AA5A4 RET
	0x031AA5A8 STR D10, [X31 - 0x20]!
	0x031AA5AC STP D9, D8, [X31 + 0x8]
	0x031AA5B0 STR X30, [X31 + 0x18]
	0x031AA5B4 MOV V9.16B, V2.16B
	0x031AA5B8 MOV V8.16B, V1.16B
	0x031AA5BC FCMP S3, 0x0
	0x031AA5C0 MOV V10.16B, V0.16B
	0x031AA5C4 B.PL 0x31AA5D4
	0x031AA5C8 MOV X0, X31
	0x031AA5CC BL 0x3C3C714
	0x031AA5D0 MOV V3.16B, V0.16B
	0x031AA5D4 FMUL S0, S3, S9
	0x031AA5D8 FNMUL S1, S3, S9
	0x031AA5DC FCMP S8, S10
	0x031AA5E0 FCSEL S0, S0, S1, GT
	0x031AA5E4 FADD S0, S0, S10
	0x031AA5E8 FSUB S1, S0, S8
	0x031AA5EC B.LE 0x31AA5FC
	0x031AA5F0 FCMP S1, 0x0
	0x031AA5F4 B.LE 0x31AA604
	0x031AA5F8 B 0x31AA608
	0x031AA5FC FCMP S1, 0x0
	0x031AA600 B.MI 0x31AA608
	0x031AA604 MOV V8.16B, V0.16B
	0x031AA608 MOV V0.16B, V8.16B
	0x031AA60C LDR X30, [X31 + 0x18]
	0x031AA610 LDP D9, D8, [X31 + 0x8]
	0x031AA614 LDR V10, [X31], #0x20
	0x031AA618 RET
	0x031AA61C STP D15, D14, [X31 - 0x50]!
	0x031AA620 STP D13, D12, [X31 + 0x10]
	0x031AA624 STP D11, D10, [X31 + 0x20]
	0x031AA628 STP D9, D8, [X31 + 0x30]
	0x031AA62C STR X30, [X31 + 0x40]
	0x031AA630 MOV V13.16B, V7.16B
	0x031AA634 MOV V11.16B, V6.16B
	0x031AA638 MOV V8.16B, V5.16B
	0x031AA63C MOV V9.16B, V4.16B
	0x031AA640 MOV V10.16B, V3.16B
	0x031AA644 MOV V12.16B, V2.16B
	0x031AA648 MOV V14.16B, V1.16B
	0x031AA64C MOV V15.16B, V0.16B
	0x031AA650 FCMP S7, 0x0
	0x031AA654 MOV V0.16B, V7.16B
	0x031AA658 B.PL 0x31AA664
	0x031AA65C MOV X0, X31
	0x031AA660 BL 0x3C3C714
	0x031AA664 FMUL S1, S0, S11
	0x031AA668 FNMUL S0, S0, S11
	0x031AA66C FCMP S10, S15
	0x031AA670 FCSEL S0, S1, S0, GT
	0x031AA674 FADD S0, S15, S0
	0x031AA678 FSUB S1, S0, S10
	0x031AA67C B.LE 0x31AA68C
	0x031AA680 FCMP S1, 0x0
	0x031AA684 B.LE 0x31AA694
	0x031AA688 B 0x31AA698
	0x031AA68C FCMP S1, 0x0
	0x031AA690 B.MI 0x31AA698
	0x031AA694 MOV V10.16B, V0.16B
	0x031AA698 FCMP S13, 0x0
	0x031AA69C MOV V0.16B, V13.16B
	0x031AA6A0 B.PL 0x31AA6AC
	0x031AA6A4 MOV X0, X31
	0x031AA6A8 BL 0x3C3C714
	0x031AA6AC FMUL S1, S0, S11
	0x031AA6B0 FNMUL S0, S0, S11
	0x031AA6B4 FCMP S9, S14
	0x031AA6B8 FCSEL S0, S1, S0, GT
	0x031AA6BC FADD S0, S14, S0
	0x031AA6C0 FSUB S1, S0, S9
	0x031AA6C4 B.LE 0x31AA6D4
	0x031AA6C8 FCMP S1, 0x0
	0x031AA6CC B.LE 0x31AA6DC
	0x031AA6D0 B 0x31AA6E0
	0x031AA6D4 FCMP S1, 0x0
	0x031AA6D8 B.MI 0x31AA6E0
	0x031AA6DC MOV V9.16B, V0.16B
	0x031AA6E0 FCMP S13, 0x0
	0x031AA6E4 B.PL 0x31AA6F4
	0x031AA6E8 MOV X0, X31
	0x031AA6EC BL 0x3C3C714
	0x031AA6F0 MOV V13.16B, V0.16B
	0x031AA6F4 FMUL S0, S13, S11
	0x031AA6F8 FNMUL S1, S13, S11
	0x031AA6FC FCMP S8, S12
	0x031AA700 FCSEL S0, S0, S1, GT
	0x031AA704 FADD S0, S12, S0
	0x031AA708 FSUB S1, S0, S8
	0x031AA70C B.LE 0x31AA71C
	0x031AA710 FCMP S1, 0x0
	0x031AA714 B.LE 0x31AA724
	0x031AA718 B 0x31AA728
	0x031AA71C FCMP S1, 0x0
	0x031AA720 B.MI 0x31AA728
	0x031AA724 MOV V8.16B, V0.16B
	0x031AA728 MOV V0.16B, V10.16B
	0x031AA72C MOV V1.16B, V9.16B
	0x031AA730 MOV V2.16B, V8.16B
	0x031AA734 LDR X30, [X31 + 0x40]
	0x031AA738 LDP D9, D8, [X31 + 0x30]
	0x031AA73C LDP D11, D10, [X31 + 0x20]
	0x031AA740 LDP D13, D12, [X31 + 0x10]
	0x031AA744 LDP D15, D14, [X31], #0x50
	0x031AA748 RET
	0x031AA74C STP D15, D14, [X31 - 0x50]!
	0x031AA750 STP D13, D12, [X31 + 0x10]
	0x031AA754 STP D11, D10, [X31 + 0x20]
	0x031AA758 STP D9, D8, [X31 + 0x30]
	0x031AA75C STR X30, [X31 + 0x40]
	0x031AA760 LDR V12, [X31 + 0x50]
	0x031AA764 MOV X0, X31
	0x031AA768 MOV V8.16B, V7.16B
	0x031AA76C MOV V9.16B, V6.16B
	0x031AA770 MOV V10.16B, V5.16B
	0x031AA774 MOV V11.16B, V4.16B
	0x031AA778 STR S3, [X31 + 0x4C]
	0x031AA77C MOV V13.16B, V2.16B
	0x031AA780 MOV V14.16B, V1.16B
	0x031AA784 MOV V15.16B, V0.16B
	0x031AA788 BL 0x3C3C714
	0x031AA78C FMUL S1, S0, S12
	0x031AA790 FNMUL S0, S0, S12
	0x031AA794 FCMP S11, S15
	0x031AA798 FCSEL S0, S1, S0, GT
	0x031AA79C FADD S0, S15, S0
	0x031AA7A0 FSUB S1, S0, S11
	0x031AA7A4 B.LE 0x31AA7B4
	0x031AA7A8 FCMP S1, 0x0
	0x031AA7AC B.LE 0x31AA7BC
	0x031AA7B0 B 0x31AA7C0
	0x031AA7B4 FCMP S1, 0x0
	0x031AA7B8 B.MI 0x31AA7C0
	0x031AA7BC MOV V11.16B, V0.16B
	0x031AA7C0 MOV X0, X31
	0x031AA7C4 BL 0x3C3C714
	0x031AA7C8 FMUL S1, S0, S12
	0x031AA7CC FNMUL S0, S0, S12
	0x031AA7D0 FCMP S10, S14
	0x031AA7D4 FCSEL S0, S1, S0, GT
	0x031AA7D8 FADD S0, S14, S0
	0x031AA7DC FSUB S1, S0, S10
	0x031AA7E0 B.LE 0x31AA7F0
	0x031AA7E4 FCMP S1, 0x0
	0x031AA7E8 B.LE 0x31AA7F8
	0x031AA7EC B 0x31AA7FC
	0x031AA7F0 FCMP S1, 0x0
	0x031AA7F4 B.MI 0x31AA7FC
	0x031AA7F8 MOV V10.16B, V0.16B
	0x031AA7FC MOV X0, X31
	0x031AA800 BL 0x3C3C714
	0x031AA804 FMUL S1, S0, S12
	0x031AA808 FNMUL S0, S0, S12
	0x031AA80C FCMP S9, S13
	0x031AA810 FCSEL S0, S1, S0, GT
	0x031AA814 FADD S0, S13, S0
	0x031AA818 FSUB S1, S0, S9
	0x031AA81C B.LE 0x31AA82C
	0x031AA820 FCMP S1, 0x0
	0x031AA824 B.LE 0x31AA834
	0x031AA828 B 0x31AA838
	0x031AA82C FCMP S1, 0x0
	0x031AA830 B.MI 0x31AA838
	0x031AA834 MOV V9.16B, V0.16B
	0x031AA838 MOV X0, X31
	0x031AA83C BL 0x3C3C714
	0x031AA840 LDR V2, [X31 + 0x4C]
	0x031AA844 FMUL S1, S0, S12
	0x031AA848 FNMUL S0, S0, S12
	0x031AA84C FCMP S8, S2

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Move X21, 0x1232000
	021 Move X22, 0xF76000
	022 Move W8, [X21+3636]
	023 Move X22, [X22+600]
	024 Move X19, X1
	025 Move W20, W0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {59}
	030 Move X0, 0xF76000
	031 Move X0, [X0+624]
	032 Call 0x1C17CF4
	033 Move X0, 0xF76000
	034 Move X0, [X0+632]
	035 Call 0x1C17CF4
	036 Move X0, 0xF76000
	037 Move X0, [X0+640]
	038 Call 0x1C17CF4
	039 Move X0, 0xF76000
	040 Move X0, [X0+648]
	041 Call 0x1C17CF4
	042 Move X0, 0xF76000
	043 Move X0, [X0+600]
	044 Call 0x1C17CF4
	045 Move X0, 0xF76000
	046 Move X0, [X0+656]
	047 Call 0x1C17CF4
	048 Move X0, 0xF76000
	049 Move X0, [X0+664]
	050 Call 0x1C17CF4
	051 Move X0, 0xF4A000
	052 Move X0, [X0+1592]
	053 Call 0x1C17CF4
	054 Move X0, 0xF76000
	055 Move X0, [X0+672]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+3636], W8
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Move X8, [X0+184]
	066 Move X8, [X8+24]
	067 Compare X8, 0
	068 JumpIfEqual {324}
	069 Move W10, [X8+24]
	070 Subtract W9, W20, 2
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Compare X19, 0
	073 JumpIfEqual {324}
	074 Move X10, 0xF4A000
	075 Move X10, [X10+1592]
	076 Add X8, X8, W9
	077 Move V0, [X19+40]
	078 Move V1, [X8+32]
	079 Move W8, 0x7F800000
	080 Move X0, [X10]
	081 NotImplemented "Instruction SCVTF not yet implemented."
	082 Move S2, W8
	083 Multiply S0, S1, S0
	084 NotImplemented "Instruction FCVTZS not yet implemented."
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 Move W9, 0x80000000
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 Call 0x1C17D6C
	089 Move X8, [X22]
	090 Move X8, [X8+184]
	091 Move X8, [X8+24]
	092 Compare X8, 0
	093 JumpIfEqual {324}
	094 Move W9, [X8+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Compare W9, 0
	097 JumpIfEqual {323}
	098 Move X20, X0
	099 Compare X0, 0
	100 JumpIfEqual {324}
	101 Move X21, [X20+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move S15, [X8+32]
	104 Move S0, [X8+36]
	105 Move X8, -40632320
	106 Move X9, -40628224
	107 Move V9, [X8+3916]
	108 Move V10, [X9+284]
	109 Move W24, W31
	110 Move X23, X31
	111 Move S12, W31
	112 Move S11, 1
	113 Move [X31+12], S0
	114 Move X0, [X22]
	115 Move V8, [X19+40]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X22]
	121 Move X8, [X0+184]
	122 Move X8, [X8+24]
	123 Compare X8, 0
	124 JumpIfEqual {324}
	125 Move W9, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X21, W24
	128 Add X9, X8, X21
	129 Move V0, [X9+32]
	130 NotImplemented "Instruction SCVTF not yet implemented."
	131 NotImplemented "Instruction SCVTF not yet implemented."
	132 NotImplemented "Instruction FDIV not yet implemented."
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 Move W9, [X0+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {143}
	137 Call 0x1C17DFC
	138 Move X8, [X22]
	139 Move X8, [X8+184]
	140 Move X8, [X8+24]
	141 Compare X8, 0
	142 JumpIfEqual {324}
	143 Move W11, [X8+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add W9, W24, 2
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W10, W24, 3
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X11, X8, X21
	150 Add X8, X8, 32
	151 Move V12, [X11+32]
	152 Move V0, [X8]
	153 Move V1, [X8]
	154 Move W24, W9
	155 Move [X31+12], S1
	156 Subtract S1, S0, S12
	157 Move V1, V15
	158 Subtract S0, S13, S12
	159 NotImplemented "Instruction FDIV not yet implemented."
	160 Multiply S0, S14, S9
	161 Move V15, V1
	162 Call 0x3EB2B70
	163 Move W8, [X19+16]
	164 Move V8, V0
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 NotImplemented "Instruction FCMP not yet implemented."
	169 NotImplemented "Instruction FCSEL not yet implemented."
	170 NotImplemented "Instruction FCMP not yet implemented."
	171 Move S8, -1
	172 Move S0, [X19+44]
	173 Move S14, [X19+48]
	174 Move X0, X31
	175 Multiply S1, S13, S0
	176 Move S0, W31
	177 Call Mathf.PerlinNoise, V0, V1
	178 Move V1, [X19+48]
	179 Subtract S2, S11, S14
	180 Multiply S0, S0, S1
	181 Add S0, S2, S0
	182 Multiply S8, S8, S0
	183 NotImplemented "Instruction FCMP not yet implemented."
	184 Move S0, -1
	185 Move S1, 0.5
	186 NotImplemented "Instruction FCSEL not yet implemented."
	187 NotImplemented "Instruction FCMP not yet implemented."
	188 Add S1, S14, S14
	189 Subtract S1, S11, S14
	190 Add S1, S1, S1
	191 Multiply S8, S1, S0
	192 Move V0, [X31+12]
	193 Move X8, [X19+32]
	194 Multiply S8, S0, S8
	195 Compare X8, 0
	196 JumpIfEqual {218}
	197 Move X9, [X8+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 And X25, X9, 0
	200 Move X21, X31
	201 Move X26, W25
	202 Add X27, X8, 36
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction FDIV not yet implemented."
	206 Multiply S0, S13, S0
	207 Multiply S0, S0, S9
	208 Add S0, S0, S10
	209 Call 0x3EB2B70
	210 Move V1, [X27+12]
	211 NotImplemented "Instruction FABS not yet implemented."
	212 Add X21, X21, 1
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract S2, S11, S1
	215 Multiply S0, S2, S0
	216 Add S0, S1, S0
	217 Multiply S8, S8, S0
	218 Move W21, [X20+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Add X8, X20, X23
	221 Add X23, X23, 1
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move [X8+32], S8
	224 Move X24, 0xF76000
	225 Move X25, 0xF76000
	226 Move W8, [X19+52]
	227 Move X24, [X24+664]
	228 Move X25, [X25+672]
	229 Compare W8, 0
	230 JumpIfEqual {257}
	231 Move X0, [X24]
	232 Move X22, 0xF76000
	233 Move W19, [X19+40]
	234 Move X22, [X22+648]
	235 Call 0x1C17F10
	236 Move X2, [X22]
	237 Move X1, X31
	238 Move X3, X31
	239 Move X22, X0
	240 Call PCMSetPositionCallback..ctor, X0, X1, X2
	241 Move X0, [X25]
	242 Move W2, 1
	243 Move W1, W21
	244 Move W3, W19
	245 Move W4, W31
	246 Move X5, X31
	247 Move X6, X22
	248 Move X7, X31
	249 Call AudioClip.Create, X0, X1, X2, X3, X4, X5, X6
	250 Compare X0, 0
	251 JumpIfEqual {324}
	252 Move X1, X20
	253 Move W2, W31
	254 Move X3, X31
	255 Move X19, X0
	256 Call AudioClip.SetData, X0, X1, X2
	257 Move X8, 0xF76000
	258 Move X8, [X8+640]
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move X1, X31
	262 Move X22, X0
	263 Call Object..ctor, X0
	264 Move [X22+32], X20
	265 Move [X19+56], X22
	266 Move X8, 0xF76000
	267 Move X8, [X8+656]
	268 Move W20, [X19+40]
	269 Move X0, [X8]
	270 Call 0x1C17F10
	271 Move X8, 0xF76000
	272 Move X8, [X8+624]
	273 Move X1, X22
	274 Move X3, X31
	275 Move X23, X0
	276 Move X2, [X8]
	277 Call PCMReaderCallback..ctor, X0, X1, X2
	278 Move X0, [X24]
	279 Move X22, [X19+56]
	280 Call 0x1C17F10
	281 Move X8, 0xF76000
	282 Move X8, [X8+632]
	283 Move X1, X22
	284 Move X3, X31
	285 Move X24, X0
	286 Move X2, [X8]
	287 Call PCMSetPositionCallback..ctor, X0, X1, X2
	288 Move X0, [X25]
	289 Move W2, 1
	290 Move W1, W21
	291 Move W3, W20
	292 Move W4, W31
	293 Move X5, X23
	294 Move X6, X24
	295 Move X7, X31
	296 Call AudioClip.Create, X0, X1, X2, X3, X4, X5, X6
	297 Move X8, [X19+56]
	298 Compare X8, 0
	299 JumpIfEqual {324}
	300 Move X19, X0
	301 Move [X8+24], X0
	302 Move X0, X19
	303 Move X20, [X31+144]
	304 Move X19, [X31+152]
	305 Move X22, [X31+128]
	306 Move X21, [X31+136]
	307 Move X24, [X31+112]
	308 Move X23, [X31+120]
	309 Move X26, [X31+96]
	310 Move X25, [X31+104]
	311 Move X30, [X31+80]
	312 Move X27, [X31+88]
	313 Move D9, [X31+64]
	314 Move D8, [X31+72]
	315 Move D11, [X31+48]
	316 Move D10, [X31+56]
	317 Move D13, [X31+32]
	318 Move D12, [X31+40]
	319 Move D15, [X31+16]
	320 Move D14, [X31+24]
	321 Add X31, X31, 160
	322 Return X0
	323 Call 0x1C17F28
	324 Call 0x1C17F20

Method: System.Void OnAudioSetPosition(System.Int32 newPosition)

Disassembly:
	0x031AA90C FMUL S0, S3, S0

ISIL:
	001 Return 

Method: UnityEngine.AudioClip generateAudioFromCurve(UnityEngine.AnimationCurve curve, System.Int32 frequencyRate = 44100)

Disassembly:
	0x031AA910 FNEG S5, S11
	0x031AA914 FABS S1, S0
	0x031AA918 FCMP S0, 0x0
	0x031AA91C FMOV S4, W31
	0x031AA920 FCSEL S2, S11, S5, GE
	0x031AA924 FCMP S1, S11
	0x031AA928 FCCMP S11, S4, 0x4, GT
	0x031AA92C FCSEL S1, S2, S0, GT
	0x031AA930 FADD S0, S1, S9
	0x031AA934 FCMP S10, S9
	0x031AA938 FSUB S2, S0, S10
	0x031AA93C STR S1, [X19]
	0x031AA940 B.LE 0x31AA94C
	0x031AA944 FCMP S2, 0x0
	0x031AA948 B.GT 0x31AA95C
	0x031AA94C FCMP S2, 0x0
	0x031AA950 B.PL 0x31AA96C
	0x031AA954 FCMP S10, S9
	0x031AA958 B.GT 0x31AA96C
	0x031AA95C FNEG S0, S1
	0x031AA960 FMUL S0, S0, S8
	0x031AA964 STR S0, [X19]
	0x031AA968 FADD S0, S0, S9
	0x031AA96C LDP X30, X19, [X31 + 0x40]
	0x031AA970 LDP D9, D8, [X31 + 0x30]
	0x031AA974 LDP D11, D10, [X31 + 0x20]
	0x031AA978 LDP D13, D12, [X31 + 0x10]
	0x031AA97C LDR V14, [X31], #0x50
	0x031AA980 RET
	0x031AA984 SUB X31, X31, 0x60
	0x031AA988 STP D15, D14, [X31 + 0x10]
	0x031AA98C STP D13, D12, [X31 + 0x20]
	0x031AA990 STP D11, D10, [X31 + 0x30]
	0x031AA994 STP D9, D8, [X31 + 0x40]
	0x031AA998 STP X30, X19, [X31 + 0x50]
	0x031AA99C LDR V14, [X31 + 0x60]
	0x031AA9A0 LDR V15, [X31 + 0x68]
	0x031AA9A4 LDR V10, [X31 + 0x70]
	0x031AA9A8 LDR V12, [X31 + 0x78]
	0x031AA9AC MOV V8.16B, V7.16B
	0x031AA9B0 MOV V9.16B, V6.16B
	0x031AA9B4 STP S2, S5, [X31 + 0x8]
	0x031AA9B8 MOV V11.16B, V4.16B
	0x031AA9BC MOV V13.16B, V1.16B
	0x031AA9C0 MOV V1.16B, V3.16B
	0x031AA9C4 MOV V2.16B, V6.16B
	0x031AA9C8 MOV V3.16B, V7.16B
	0x031AA9CC MOV V4.16B, V14.16B
	0x031AA9D0 MOV V5.16B, V15.16B
	0x031AA9D4 MOV V6.16B, V10.16B
	0x031AA9D8 MOV V7.16B, V12.16B
	0x031AA9DC MOV X19, X0
	0x031AA9E0 BL 0x31AA8A0
	0x031AA9E4 STR S0, [X31 + 0x4]
	0x031AA9E8 ADD X0, X19, 0x4
	0x031AA9EC MOV V0.16B, V13.16B
	0x031AA9F0 MOV V1.16B, V11.16B
	0x031AA9F4 MOV V2.16B, V9.16B
	0x031AA9F8 MOV V3.16B, V8.16B
	0x031AA9FC MOV V4.16B, V14.16B
	0x031AAA00 MOV V5.16B, V15.16B
	0x031AAA04 MOV V6.16B, V10.16B
	0x031AAA08 MOV V7.16B, V12.16B
	0x031AAA0C BL 0x31AA8A0
	0x031AAA10 MOV V11.16B, V0.16B
	0x031AAA14 LDP S0, S1, [X31 + 0x8]
	0x031AAA18 ADD X0, X19, 0x8
	0x031AAA1C MOV V2.16B, V9.16B
	0x031AAA20 MOV V3.16B, V8.16B
	0x031AAA24 MOV V4.16B, V14.16B
	0x031AAA28 MOV V5.16B, V15.16B
	0x031AAA2C MOV V6.16B, V10.16B
	0x031AAA30 MOV V7.16B, V12.16B
	0x031AAA34 BL 0x31AA8A0
	0x031AAA38 MOV V2.16B, V0.16B
	0x031AAA3C LDR V0, [X31 + 0x4]
	0x031AAA40 MOV V1.16B, V11.16B
	0x031AAA44 LDP X30, X19, [X31 + 0x50]
	0x031AAA48 LDP D9, D8, [X31 + 0x40]
	0x031AAA4C LDP D11, D10, [X31 + 0x30]
	0x031AAA50 LDP D13, D12, [X31 + 0x20]
	0x031AAA54 LDP D15, D14, [X31 + 0x10]
	0x031AAA58 ADD X31, X31, 0x60
	0x031AAA5C RET
	0x031AAA60 SUB X31, X31, 0x70
	0x031AAA64 STP D15, D14, [X31 + 0x20]
	0x031AAA68 STP D13, D12, [X31 + 0x30]
	0x031AAA6C STP D11, D10, [X31 + 0x40]
	0x031AAA70 STP D9, D8, [X31 + 0x50]
	0x031AAA74 STP X30, X19, [X31 + 0x60]
	0x031AAA78 LDR V14, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], D8
	003 Move [X31+80], X30
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X21, 0x1232000
	010 Move W8, [X21+3637]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xF4A000
	018 Move X0, [X0+1592]
	019 Call 0x1C17CF4
	020 Move X0, 0xF76000
	021 Move X0, [X0+672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3637], W8
	025 Move [X31+32], X31
	026 Move [X31+40], X31
	027 Move [X31+56], W31
	028 Move [X31+48], X31
	029 Compare X20, 0
	030 JumpIfEqual {101}
	031 Move X21, 0xF4A000
	032 Move X21, [X21+1592]
	033 Move X0, X20
	034 Move X1, X31
	035 Call AnimationCurve.get_length, X0
	036 Subtract W1, W0, 1
	037 Add X8, X31, 0
	038 Move X0, X20
	039 Move X2, X31
	040 Call AnimationCurve.get_Item, X0, X1
	041 Move V0, [X31]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Add X0, X31, 32
	044 Move X1, X31
	045 Move [X31+2], V0
	046 Move [X31+44], V1
	047 Call Keyframe.get_time, X0
	048 Move X0, [X21]
	049 NotImplemented "Instruction SCVTF not yet implemented."
	050 Move W8, 0x7F800000
	051 Multiply S0, S0, S8
	052 Move S1, W8
	053 NotImplemented "Instruction FCVTZS not yet implemented."
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Move W9, 0x80000000
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Call 0x1C17D6C
	058 Compare X0, 0
	059 JumpIfEqual {101}
	060 Move X1, [X0+24]
	061 Move X21, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X22, X31
	064 Add X23, X21, 32
	065 NotImplemented "Instruction SCVTF not yet implemented."
	066 NotImplemented "Instruction FDIV not yet implemented."
	067 Move X0, X20
	068 Move X1, X31
	069 Call AnimationCurve.Evaluate, X0, V0
	070 Move W1, [X21+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X23], S0
	073 Add X22, X22, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, 0xF76000
	076 Move X8, [X8+672]
	077 Move W2, 1
	078 Move W3, W19
	079 Move W4, W31
	080 Move X0, [X8]
	081 Move X5, X31
	082 Call AudioClip.Create, X0, X1, X2, X3, X4
	083 Compare X0, 0
	084 JumpIfEqual {101}
	085 Move X1, X21
	086 Move W2, W31
	087 Move X3, X31
	088 Move X19, X0
	089 Call AudioClip.SetData, X0, X1, X2
	090 Move X0, X19
	091 Move X20, [X31+112]
	092 Move X19, [X31+120]
	093 Move X22, [X31+96]
	094 Move X21, [X31+104]
	095 Move X30, [X31+80]
	096 Move X23, [X31+88]
	097 Move V8, [X31+64]
	098 Add X31, X31, 128
	099 Return X0
	100 Call 0x1C17F28
	101 Call 0x1C17F20

Method: UnityEngine.AudioSource play(UnityEngine.AudioClip audio, System.Single volume)

Disassembly:
	0x031AAA7C LDR V15, [X31 + 0x78]
	0x031AAA80 LDR V8, [X31 + 0x80]
	0x031AAA84 LDR V11, [X31 + 0x88]
	0x031AAA88 LDR V9, [X31 + 0x90]
	0x031AAA8C LDR V12, [X31 + 0x98]
	0x031AAA90 STP S3, S7, [X31 + 0x18]
	0x031AAA94 STR S6, [X31 + 0x14]
	0x031AAA98 MOV V10.16B, V5.16B
	0x031AAA9C STR S2, [X31 + 0xC]
	0x031AAAA0 MOV V13.16B, V1.16B
	0x031AAAA4 MOV V1.16B, V4.16B
	0x031AAAA8 MOV V2.16B, V14.16B
	0x031AAAAC MOV V3.16B, V15.16B
	0x031AAAB0 MOV V4.16B, V8.16B
	0x031AAAB4 MOV V5.16B, V11.16B
	0x031AAAB8 MOV V6.16B, V9.16B
	0x031AAABC MOV V7.16B, V12.16B
	0x031AAAC0 MOV X19, X0
	0x031AAAC4 BL 0x31AA8A0
	0x031AAAC8 STR S0, [X31 + 0x10]
	0x031AAACC ADD X0, X19, 0x4
	0x031AAAD0 MOV V0.16B, V13.16B
	0x031AAAD4 MOV V1.16B, V10.16B
	0x031AAAD8 MOV V2.16B, V14.16B
	0x031AAADC MOV V3.16B, V15.16B
	0x031AAAE0 MOV V4.16B, V8.16B
	0x031AAAE4 MOV V5.16B, V11.16B
	0x031AAAE8 MOV V6.16B, V9.16B
	0x031AAAEC MOV V7.16B, V12.16B
	0x031AAAF0 BL 0x31AA8A0
	0x031AAAF4 MOV V10.16B, V0.16B
	0x031AAAF8 LDR V0, [X31 + 0xC]
	0x031AAAFC LDR V1, [X31 + 0x14]
	0x031AAB00 ADD X0, X19, 0x8
	0x031AAB04 MOV V2.16B, V14.16B
	0x031AAB08 MOV V3.16B, V15.16B
	0x031AAB0C MOV V4.16B, V8.16B
	0x031AAB10 MOV V5.16B, V11.16B
	0x031AAB14 MOV V6.16B, V9.16B
	0x031AAB18 MOV V7.16B, V12.16B
	0x031AAB1C BL 0x31AA8A0
	0x031AAB20 MOV V13.16B, V0.16B
	0x031AAB24 LDP S0, S1, [X31 + 0x18]
	0x031AAB28 ADD X0, X19, 0xC
	0x031AAB2C MOV V2.16B, V14.16B
	0x031AAB30 MOV V3.16B, V15.16B
	0x031AAB34 MOV V4.16B, V8.16B
	0x031AAB38 MOV V5.16B, V11.16B
	0x031AAB3C MOV V6.16B, V9.16B
	0x031AAB40 MOV V7.16B, V12.16B
	0x031AAB44 BL 0x31AA8A0

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1232000
	010 Move W8, [X20+3638]
	011 Move V8, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xF76000
	018 Move X0, [X0+600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3638], W8
	022 Move X21, 0x122F000
	023 Move X20, 0xF76000
	024 Move W8, [X21+1923]
	025 Move X20, [X20+600]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0xF4A000
	029 Move X0, [X0+1440]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1923], W8
	033 Move X8, 0xF4A000
	034 Move X8, [X8+1440]
	035 Move X0, [X20]
	036 Move X8, [X8]
	037 Move W9, [X0+224]
	038 Move X8, [X8+184]
	039 Move S11, [X8]
	040 Move S10, [X8+4]
	041 Move V9, [X8+8]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move V0, V11
	047 Move V1, V10
	048 Move V2, V9
	049 Call LeanAudio.playClipAt, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {66}
	052 Move V0, V8
	053 Move X1, X31
	054 Move X19, X0
	055 Call AudioSource.set_volume, X0, V0
	056 Move X0, X19
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Move D9, [X31+16]
	062 Move D8, [X31+24]
	063 Move D11, [X31+64]
	064 Move D10, [X31+72]
	065 Return X0
	066 Call 0x1C17F20

Method: UnityEngine.AudioSource play(UnityEngine.AudioClip audio)

Disassembly:
	0x031AAC78 LDR X0, [X0 + 0x2B8]
	0x031AAC7C BL 0x1C16CF4
	0x031AAC80 MOVZ W8, 0x1
	0x031AAC84 STRB W8, [X20 + 0xE3E]
	0x031AAC88 LDR W8, [X19 + 0x10]
	0x031AAC8C CMP W8, 0x1
	0x031AAC90 B.EQ 0x31AACC0
	0x031AAC94 CBNZ W8, 0x31AAD78
	0x031AAC98 LDR X20, [X19 + 0x20]
	0x031AAC9C MOVN W8, 0x0
	0x031AACA0 MOV X0, X31
	0x031AACA4 STR W8, [X19 + 0x10]
	0x031AACA8 BL 0x3C3A708
	0x031AACAC CBZ X20, 0x31AAD88
	0x031AACB0 LDR V1, [X20 + 0x20]
	0x031AACB4 FADD S0, S0, S1
	0x031AACB8 STR S0, [X19 + 0x28]
	0x031AACBC B 0x31AACC8
	0x031AACC0 MOVN W8, 0x0
	0x031AACC4 STR W8, [X19 + 0x10]
	0x031AACC8 MOV X0, X31
	0x031AACCC BL 0x3C3A708
	0x031AACD0 LDR V1, [X19 + 0x28]
	0x031AACD4 FCMP S0, S1
	0x031AACD8 B.PL 0x31AAD04
	0x031AACDC ADRP X8, 0xF49000
	0x031AACE0 LDR X8, [X8 + 0x758]
	0x031AACE4 ADD X1, X31, 0xC
	0x031AACE8 STR W31, [X31 + 0xC]
	0x031AACEC LDR X0, [X8]
	0x031AACF0 BL 0x1C16E04
	0x031AACF4 STR X0, [X19 + 0x18]
	0x031AACF8 MOVZ W0, 0x1
	0x031AACFC STR W0, [X19 + 0x10]
	0x031AAD00 B 0x31AAD7C
	0x031AAD04 ADRP X19, 0xF75000
	0x031AAD08 LDR X19, [X19 + 0x2B0]
	0x031AAD0C LDR X0, [X19]
	0x031AAD10 LDR W8, [X0 + 0xE0]
	0x031AAD14 CBNZ W8, 0x31AAD20
	0x031AAD18 BL 0x1C16DFC
	0x031AAD1C LDR X0, [X19]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1232000
	009 Move W8, [X20+3639]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xF76000
	016 Move X0, [X0+600]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3639], W8
	020 Move X21, 0x122F000
	021 Move X20, 0xF76000
	022 Move W8, [X21+1923]
	023 Move X20, [X20+600]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0xF4A000
	027 Move X0, [X0+1440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1923], W8
	031 Move X8, 0xF4A000
	032 Move X8, [X8+1440]
	033 Move X0, [X20]
	034 Move X8, [X8]
	035 Move W9, [X0+224]
	036 Move X8, [X8+184]
	037 Move S10, [X8]
	038 Move S9, [X8+4]
	039 Move V8, [X8+8]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move V1, V9
	045 Move V2, V8
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Move D9, [X31+16]
	051 Move D8, [X31+24]
	052 Move V0, V10
	053 Move V10, [X31+64]
	054 Call LeanAudio.playClipAt, X0, X1
	055 Return X0

Method: UnityEngine.AudioSource play(UnityEngine.AudioClip audio, UnityEngine.Vector3 pos)

Disassembly:
	0x031AAD20 LDR X8, [X0 + 0xB8]
	0x031AAD24 LDRB W8, [X8 + 0x11]
	0x031AAD28 CBNZ W8, 0x31AAD78
	0x031AAD2C LDR W8, [X0 + 0xE0]
	0x031AAD30 CBNZ W8, 0x31AAD38
	0x031AAD34 BL 0x1C16DFC
	0x031AAD38 ADRP X8, 0xF75000
	0x031AAD3C LDR X8, [X8 + 0x2B8]
	0x031AAD40 LDR X0, [X8]
	0x031AAD44 BL 0x31AAD8C
	0x031AAD48 ADRP X8, 0xF49000
	0x031AAD4C LDR X8, [X8 + 0xA28]
	0x031AAD50 MOV X19, X0
	0x031AAD54 LDR X8, [X8]
	0x031AAD58 LDR W9, [X8 + 0xE0]
	0x031AAD5C CBNZ W9, 0x31AAD68
	0x031AAD60 MOV X0, X8
	0x031AAD64 BL 0x1C16DFC
	0x031AAD68 MOV X0, X19
	0x031AAD6C MOV X1, X31
	0x031AAD70 BL 0x3C06048
	0x031AAD74 BL 0x31AADF8
	0x031AAD78 MOV W0, W31
	0x031AAD7C LDP X20, X19, [X31 + 0x10]
	0x031AAD80 LDR X30, [X31], #0x20
	0x031AAD84 RET
	0x031AAD88 BL 0x1C16F20
	0x031AAD8C STR X30, [X31 - 0x30]!
	0x031AAD90 STP X22, X21, [X31 + 0x10]
	0x031AAD94 STP X20, X19, [X31 + 0x20]
	0x031AAD98 ADRP X20, 0x1231000

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1232000
	009 Move X20, 0xF76000
	010 Move W8, [X21+3640]
	011 Move X20, [X20+600]
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xF76000
	021 Move X0, [X0+600]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3640], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move V1, V9
	032 Move V2, V8
	033 Move X20, [X31+48]
	034 Move X19, [X31+56]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Move D9, [X31+16]
	038 Move D8, [X31+24]
	039 Move V0, V10
	040 Move V10, [X31+64]
	041 Call LeanAudio.playClipAt, X0, X1
	042 Return X0

Method: UnityEngine.AudioSource play(UnityEngine.AudioClip audio, UnityEngine.Vector3 pos, System.Single volume)

Disassembly:
	0x031AAD9C ADRP X21, 0xF75000
	0x031AADA0 ADRP X22, 0xF75000
	0x031AADA4 LDRB W8, [X20 + 0xE44]
	0x031AADA8 LDR X21, [X21 + 0x2C0]
	0x031AADAC LDR X22, [X22 + 0x2C8]
	0x031AADB0 MOV X19, X0
	0x031AADB4 TBNZ X8, 0x0, 0x31AADD8
	0x031AADB8 ADRP X0, 0xF75000
	0x031AADBC LDR X0, [X0 + 0x2C0]
	0x031AADC0 BL 0x1C16CF4
	0x031AADC4 ADRP X0, 0xF75000
	0x031AADC8 LDR X0, [X0 + 0x2C8]
	0x031AADCC BL 0x1C16CF4
	0x031AADD0 MOVZ W8, 0x1
	0x031AADD4 STRB W8, [X20 + 0xE44]
	0x031AADD8 LDR X0, [X21]
	0x031AADDC LDR X2, [X22]
	0x031AADE0 MOV X1, X19
	0x031AADE4 LDP X20, X19, [X31 + 0x20]
	0x031AADE8 LDP X22, X21, [X31 + 0x10]
	0x031AADEC MOV X3, X31
	0x031AADF0 LDR X30, [X31], #0x30
	0x031AADF4 B 0x32274B8
	0x031AADF8 SUB X31, X31, 0x40
	0x031AADFC STP X30, X23, [X31 + 0x10]
	0x031AAE00 STP X22, X21, [X31 + 0x20]
	0x031AAE04 STP X20, X19, [X31 + 0x30]
	0x031AAE08 ADRP X19, 0x1231000
	0x031AAE0C ADRP X21, 0xF75000
	0x031AAE10 LDRB W8, [X19 + 0xE46]
	0x031AAE14 LDR X21, [X21 + 0x2B0]
	0x031AAE18 TBNZ X8, 0x0, 0x31AAE9C
	0x031AAE1C ADRP X0, 0xF49000
	0x031AAE20 LDR X0, [X0 + 0xA28]
	0x031AAE24 BL 0x1C16CF4
	0x031AAE28 ADRP X0, 0xF75000
	0x031AAE2C LDR X0, [X0 + 0x2B0]
	0x031AAE30 BL 0x1C16CF4
	0x031AAE34 ADRP X0, 0xF49000
	0x031AAE38 LDR X0, [X0 + 0xAC8]
	0x031AAE3C BL 0x1C16CF4
	0x031AAE40 ADRP X0, 0xF75000
	0x031AAE44 LDR X0, [X0 + 0x2D0]
	0x031AAE48 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1232000
	010 Move X20, 0xF76000
	011 Move W8, [X21+3641]
	012 Move X20, [X20+600]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xF76000
	023 Move X0, [X0+600]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3641], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move V0, V11
	034 Move V1, V10
	035 Move V2, V9
	036 Call LeanAudio.playClipAt, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {57}
	039 Move S0, 1
	040 Move X1, X31
	041 Move X19, X0
	042 Call AudioSource.set_minDistance, X0, V0
	043 Move X0, X19
	044 Move V0, V8
	045 Move X1, X31
	046 Call AudioSource.set_volume, X0, V0
	047 Move X0, X19
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Move D9, [X31+16]
	053 Move D8, [X31+24]
	054 Move D11, [X31+64]
	055 Move D10, [X31+72]
	056 Return X0
	057 Call 0x1C17F20

Method: UnityEngine.AudioSource playClipAt(UnityEngine.AudioClip clip, UnityEngine.Vector3 pos)

Disassembly:
	0x031AAB48 MOV V3.16B, V0.16B
	0x031AAB4C LDR V0, [X31 + 0x10]
	0x031AAB50 MOV V1.16B, V10.16B
	0x031AAB54 MOV V2.16B, V13.16B
	0x031AAB58 LDP X30, X19, [X31 + 0x60]
	0x031AAB5C LDP D9, D8, [X31 + 0x50]
	0x031AAB60 LDP D11, D10, [X31 + 0x40]
	0x031AAB64 LDP D13, D12, [X31 + 0x30]
	0x031AAB68 LDP D15, D14, [X31 + 0x20]
	0x031AAB6C ADD X31, X31, 0x70
	0x031AAB70 RET
	0x031AAB74 MOV X1, X31
	0x031AAB78 B 0x33BDD8C
	0x031AAB7C STP X30, X19, [X31 - 0x10]!
	0x031AAB80 MOV X19, X0
	0x031AAB84 BL 0x31AAB9C
	0x031AAB88 MOV X1, X0
	0x031AAB8C MOV X0, X19
	0x031AAB90 MOV X2, X31
	0x031AAB94 LDP X30, X19, [X31], #0x10
	0x031AAB98 B 0x3C366FC
	0x031AAB9C STP X30, X21, [X31 - 0x20]!
	0x031AABA0 STP X20, X19, [X31 + 0x10]
	0x031AABA4 ADRP X20, 0x1231000
	0x031AABA8 ADRP X21, 0xF75000
	0x031AABAC LDRB W8, [X20 + 0xE3D]
	0x031AABB0 LDR X21, [X21 + 0x2A8]
	0x031AABB4 MOV X19, X0
	0x031AABB8 TBNZ X8, 0x0, 0x31AABD0
	0x031AABBC ADRP X0, 0xF75000
	0x031AABC0 LDR X0, [X0 + 0x2A8]
	0x031AABC4 BL 0x1C16CF4
	0x031AABC8 MOVZ W8, 0x1
	0x031AABCC STRB W8, [X20 + 0xE3D]
	0x031AABD0 LDR X0, [X21]
	0x031AABD4 BL 0x1C16F10
	0x031AABD8 MOV X1, X31
	0x031AABDC MOV X20, X0
	0x031AABE0 BL 0x33BDD8C
	0x031AABE4 STR W31, [X20 + 0x10]
	0x031AABE8 STR X19, [X20 + 0x20]
	0x031AABEC MOV X0, X20
	0x031AABF0 LDP X20, X19, [X31 + 0x10]
	0x031AABF4 LDP X30, X21, [X31], #0x20
	0x031AABF8 RET
	0x031AABFC STR X30, [X31 - 0x20]!
	0x031AAC00 STP X20, X19, [X31 + 0x10]
	0x031AAC04 MOV W19, W1
	0x031AAC08 MOV X1, X31
	0x031AAC0C MOV X20, X0
	0x031AAC10 BL 0x33BDD8C
	0x031AAC14 STR W19, [X20 + 0x10]
	0x031AAC18 LDP X20, X19, [X31 + 0x10]
	0x031AAC1C LDR X30, [X31], #0x20
	0x031AAC20 RET
	0x031AAC24 MOVZ W8, 0x41700000
	0x031AAC28 MOV X1, X31
	0x031AAC2C STR W8, [X0 + 0x20]
	0x031AAC30 B 0x3C36C30
	0x031AAC34 RET
	0x031AAC38 STR X30, [X31 - 0x20]!
	0x031AAC3C STP X20, X19, [X31 + 0x10]
	0x031AAC40 ADRP X20, 0x1231000
	0x031AAC44 LDRB W8, [X20 + 0xE3E]
	0x031AAC48 MOV X19, X0
	0x031AAC4C TBNZ X8, 0x0, 0x31AAC88
	0x031AAC50 ADRP X0, 0xF49000
	0x031AAC54 LDR X0, [X0 + 0xA28]
	0x031AAC58 BL 0x1C16CF4
	0x031AAC5C ADRP X0, 0xF49000
	0x031AAC60 LDR X0, [X0 + 0x758]
	0x031AAC64 BL 0x1C16CF4
	0x031AAC68 ADRP X0, 0xF75000
	0x031AAC6C LDR X0, [X0 + 0x2B0]
	0x031AAC70 BL 0x1C16CF4
	0x031AAC74 ADRP X0, 0xF75000

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1232000
	010 Move X21, 0xF4A000
	011 Move W8, [X20+3642]
	012 Move X21, [X21+2648]
	013 Move V8, V2
	014 Move V9, V1
	015 Move V10, V0
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xF4F000
	022 Move X0, [X0+1600]
	023 Call 0x1C17CF4
	024 Move X0, 0xF4A000
	025 Move X0, [X0+2648]
	026 Call 0x1C17CF4
	027 Move X0, 0xF4A000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3642], W8
	032 Move X0, [X21]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X20, X0
	036 Call GameObject..ctor, X0
	037 Compare X20, 0
	038 JumpIfEqual {90}
	039 Move X0, X20
	040 Move X1, X31
	041 Call GameObject.get_transform, X0
	042 Compare X0, 0
	043 JumpIfEqual {90}
	044 Move X21, 0xF4F000
	045 Move X21, [X21+1600]
	046 Move V0, V10
	047 Move V1, V9
	048 Move V2, V8
	049 Move X1, X31
	050 Call Transform.set_position, X0, X1
	051 Move X1, [X21]
	052 Move X0, X20
	053 Call 0x21E61FC, X0
	054 Compare X0, 0
	055 JumpIfEqual {90}
	056 Move X1, X19
	057 Move X2, X31
	058 Move X21, X0
	059 Call AudioSource.set_clip, X0, X1
	060 Move X0, X21
	061 Move X1, X31
	062 Call AudioSource.Play, X0
	063 Compare X19, 0
	064 JumpIfEqual {90}
	065 Move X22, 0xF4A000
	066 Move X22, [X22+1432]
	067 Move X0, X19
	068 Move X1, X31
	069 Call AudioClip.get_length, X0
	070 Move X0, [X22]
	071 Move V8, V0
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move V0, V8
	078 Move X1, X31
	079 Call Object.Destroy, X0, V0
	080 Move X0, X21
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X30, [X31+24]
	086 Move D9, [X31+8]
	087 Move D8, [X31+16]
	088 Move V10, [X31+64]
	089 Return X0
	090 Call 0x1C17F20

Method: System.Void printOutAudioClip(UnityEngine.AudioClip audioClip, ref UnityEngine.AnimationCurve curve, System.Single scaleX = 1)

Disassembly:
	0x031AAE4C ADRP X0, 0xF49000
	0x031AAE50 LDR X0, [X0 + 0xDD8]
	0x031AAE54 BL 0x1C16CF4
	0x031AAE58 ADRP X0, 0xF75000
	0x031AAE5C LDR X0, [X0 + 0x2D8]
	0x031AAE60 BL 0x1C16CF4
	0x031AAE64 ADRP X0, 0xF75000
	0x031AAE68 LDR X0, [X0 + 0x2E0]
	0x031AAE6C BL 0x1C16CF4
	0x031AAE70 ADRP X0, 0xF75000
	0x031AAE74 LDR X0, [X0 + 0x2E8]
	0x031AAE78 BL 0x1C16CF4
	0x031AAE7C ADRP X0, 0xF49000
	0x031AAE80 LDR X0, [X0 + 0x988]
	0x031AAE84 BL 0x1C16CF4
	0x031AAE88 ADRP X0, 0xF75000
	0x031AAE8C LDR X0, [X0 + 0x2F0]
	0x031AAE90 BL 0x1C16CF4
	0x031AAE94 MOVZ W8, 0x1
	0x031AAE98 STRB W8, [X19 + 0xE46]
	0x031AAE9C LDR X0, [X21]
	0x031AAEA0 STR W31, [X31 + 0xC]
	0x031AAEA4 ADRP X22, 0xF49000
	0x031AAEA8 LDR W8, [X0 + 0xE0]
	0x031AAEAC LDR X22, [X22 + 0x988]
	0x031AAEB0 CBNZ W8, 0x31AAEBC
	0x031AAEB4 BL 0x1C16DFC
	0x031AAEB8 LDR X0, [X21]
	0x031AAEBC LDR X8, [X0 + 0xB8]
	0x031AAEC0 ADRP X20, 0xF49000
	0x031AAEC4 MOVZ W11, 0x1
	0x031AAEC8 ADD X0, X31, 0xC
	0x031AAECC LDR W9, [X8]
	0x031AAED0 LDR W10, [X8 + 0x8]
	0x031AAED4 LDR X20, [X20 + 0xAC8]
	0x031AAED8 MOV X1, X31
	0x031AAEDC STRB W11, [X8 + 0x11]
	0x031AAEE0 SUB W23, W9, W10
	0x031AAEE4 STR W23, [X31 + 0xC]
	0x031AAEE8 BL 0x337B6E0
	0x031AAEEC LDR X8, [X22]
	0x031AAEF0 CMP X0, 0x0
	0x031AAEF4 CSEL X19, X8, X0, EQ
	0x031AAEF8 CMP W23, 0x1
	0x031AAEFC B.LT 0x31AAF28
	0x031AAF00 LDR X0, [X21]
	0x031AAF04 ADRP X23, 0xF75000
	0x031AAF08 LDR W8, [X0 + 0xE0]
	0x031AAF0C LDR X23, [X23 + 0x2D8]
	0x031AAF10 CBNZ W8, 0x31AAF18
	0x031AAF14 BL 0x1C16DFC
	0x031AAF18 LDR X1, [X23]
	0x031AAF1C MOV X0, X19
	0x031AAF20 BL 0x31AB8F0
	0x031AAF24 MOV X19, X0
	0x031AAF28 LDR X0, [X20]
	0x031AAF2C ADRP X23, 0xF75000
	0x031AAF30 LDR X23, [X23 + 0x2E0]
	0x031AAF34 MOVZ W1, 0x6
	0x031AAF38 BL 0x1C16D6C
	0x031AAF3C LDR X8, [X21]
	0x031AAF40 MOV X20, X0
	0x031AAF44 LDR W9, [X8 + 0xE0]
	0x031AAF48 CBNZ W9, 0x31AAF54
	0x031AAF4C MOV X0, X8
	0x031AAF50 BL 0x1C16DFC
	0x031AAF54 LDR X0, [X23]
	0x031AAF58 BL 0x31AAD8C
	0x031AAF5C CBZ X20, 0x31AB068
	0x031AAF60 LDR W8, [X20 + 0x18]
	0x031AAF64 CBZ W8, 0x31AB064
	0x031AAF68 CMP W8, 0x1
	0x031AAF6C STR X0, [X20 + 0x20]
	0x031AAF70 B.EQ 0x31AB064
	0x031AAF74 ADRP X8, 0xF75000
	0x031AAF78 LDR X8, [X8 + 0x2F0]
	0x031AAF7C ADRP X23, 0xF75000
	0x031AAF80 MOV X1, X31
	0x031AAF84 LDR X8, [X8]
	0x031AAF88 STR X8, [X20 + 0x28]
	0x031AAF8C LDR X8, [X21]
	0x031AAF90 LDR X8, [X8 + 0xB8]
	0x031AAF94 LDR X23, [X23 + 0x2D0]
	0x031AAF98 ADD X0, X8, 0x8
	0x031AAF9C BL 0x337B6E0
	0x031AAFA0 LDR X8, [X21]
	0x031AAFA4 LDR X9, [X22]
	0x031AAFA8 CMP X0, 0x0
	0x031AAFAC LDR W10, [X8 + 0xE0]
	0x031AAFB0 CSEL X21, X9, X0, EQ
	0x031AAFB4 CBNZ W10, 0x31AAFC0
	0x031AAFB8 MOV X0, X8
	0x031AAFBC BL 0x1C16DFC
	0x031AAFC0 LDR X1, [X23]
	0x031AAFC4 MOV X0, X21
	0x031AAFC8 BL 0x31AB8F0
	0x031AAFCC LDR W8, [X20 + 0x18]
	0x031AAFD0 CMP W8, 0x2
	0x031AAFD4 B.LS 0x31AB064
	0x031AAFD8 CMP W8, 0x3
	0x031AAFDC STR X0, [X20 + 0x30]
	0x031AAFE0 B.EQ 0x31AB064

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], D8
	003 Move [X31+72], X30
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0x1232000
	011 Move W8, [X20+3643]
	012 Move V8, V0
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xF51000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move X0, 0xF51000
	023 Move X0, [X0+1936]
	024 Call 0x1C17CF4
	025 Move X0, 0xF4A000
	026 Move X0, [X0+1592]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3643], W8
	030 Compare X21, 0
	031 JumpIfEqual {111}
	032 Move X22, 0xF4A000
	033 Move X22, [X22+1592]
	034 Move X0, X21
	035 Move X1, X31
	036 Call AudioClip.get_samples, X0
	037 Move W20, W0
	038 Move X0, X21
	039 Move X1, X31
	040 Call AudioClip.get_channels, X0
	041 Move X8, [X22]
	042 Multiply W1, W0, W20
	043 Move X0, X8
	044 Call 0x1C17D6C
	045 Move X20, X0
	046 Move X0, X21
	047 Move X1, X20
	048 Move W2, W31
	049 Move X3, X31
	050 Call AudioClip.GetData, X0, X1, X2
	051 Compare X20, 0
	052 JumpIfEqual {111}
	053 Move X8, 0xF51000
	054 Move X8, [X8+1936]
	055 Move W1, [X20+24]
	056 Move X0, [X8]
	057 Call 0x1C17D6C
	058 Move X8, [X20+24]
	059 Move X21, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X22, X31
	062 And X8, X8, 0
	063 Add X23, X20, 32
	064 Add X24, X21, 32
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move V1, [X23]
	067 NotImplemented "Instruction SCVTF not yet implemented."
	068 Multiply S0, S0, S8
	069 Add X0, X31, 32
	070 Move X1, X31
	071 Move [X31+32], X31
	072 Move [X31+40], X31
	073 Move [X31+56], W31
	074 Move [X31+48], X31
	075 Call Keyframe..ctor, X0, V0, V1
	076 Compare X21, 0
	077 JumpIfEqual {111}
	078 Move V0, [X31+2]
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move [X31], V0
	081 Move [X31+12], V1
	082 Move W8, [X21+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Move V1, [X31]
	086 Add X22, X22, 1
	087 Move [X24+12], V0
	088 Move [X24+28], V1
	089 Move W8, [X20+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, 0xF51000
	092 Move X8, [X8+1840]
	093 Move X0, [X8]
	094 Call 0x1C17F10
	095 Move X1, X21
	096 Move X2, X31
	097 Move X20, X0
	098 Call AnimationCurve..ctor, X0, X1
	099 Move [X19], X20
	100 Move X20, [X31+112]
	101 Move X19, [X31+120]
	102 Move X22, [X31+96]
	103 Move X21, [X31+104]
	104 Move X24, [X31+80]
	105 Move X23, [X31+88]
	106 Move X30, [X31+72]
	107 Move V8, [X31+64]
	108 Add X31, X31, 128
	109 Return 
	110 Call 0x1C17F28
	111 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x031AAFE4 ADRP X9, 0xF75000
	0x031AAFE8 LDR X9, [X9 + 0x2E8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x031AAFEC CMP W8, 0x4
	0x031AAFF0 LDR X9, [X9]
	0x031AAFF4 STR X9, [X20 + 0x38]
	0x031AAFF8 B.LS 0x31AB064
	0x031AAFFC CMP W8, 0x5
	0x031AB000 STR X19, [X20 + 0x40]
	0x031AB004 B.EQ 0x31AB064
	0x031AB008 ADRP X8, 0xF48000
	0x031AB00C LDR X8, [X8 + 0xDD8]
	0x031AB010 ADRP X19, 0xF48000
	0x031AB014 MOV X0, X20
	0x031AB018 MOV X1, X31
	0x031AB01C LDR X8, [X8]
	0x031AB020 LDR X19, [X19 + 0xA28]
	0x031AB024 STR X8, [X20 + 0x48]
	0x031AB028 BL 0x32278CC
	0x031AB02C LDR X8, [X19]
	0x031AB030 MOV X19, X0
	0x031AB034 LDR W9, [X8 + 0xE0]
	0x031AB038 CBNZ W9, 0x31AB044
	0x031AB03C MOV X0, X8
	0x031AB040 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1232000
	005 Move X20, 0xF76000
	006 Move W8, [X19+3644]
	007 Call 0x3EB287C
	008 Return 
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF75000
	014 Move X0, [X0+600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+3644], W8
	018 Move X8, [X20]
	019 Move X9, 0x2C28
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 Move X8, [X8+184]
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Move [X8], X9
	026 Move [X8+16], W31
	027 Move X30, [X31+32]
	028 Return 

