Type: LTSpline

Method: System.Void .ctor(UnityEngine.Vector3[] pts)

Disassembly:
	0x031B1FA0 CBNZ W8, 0x31B1FA8
	0x031B1FA4 BL 0x1C16DFC
	0x031B1FA8 BL 0x31AF454
	0x031B1FAC CBZ X0, 0x31B1FE4
	0x031B1FB0 MOV X1, X31
	0x031B1FB4 BL 0x31C1FBC
	0x031B1FB8 MOV X1, X0
	0x031B1FBC MOV X0, X19
	0x031B1FC0 MOV V2.16B, V9.16B
	0x031B1FC4 MOV V3.16B, V8.16B
	0x031B1FC8 LDP X20, X19, [X31 + 0x30]
	0x031B1FCC LDP X30, X21, [X31 + 0x20]
	0x031B1FD0 LDP D9, D8, [X31 + 0x10]
	0x031B1FD4 MOV V0.16B, V11.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move W8, 1
	006 Move X1, X31
	007 Move X20, X0
	008 Move [X0+20], W8
	009 Call Object..ctor, X0
	010 Move X0, X20
	011 Move X1, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W2, 1
	015 Move X30, [X31+32]
	016 Call LTSpline.init, X0, X1, X2
	017 Return 

Method: System.Void .ctor(UnityEngine.Vector3[] pts, System.Boolean constantSpeed)

Disassembly:
	0x031BA498 LDRSW X10, [X20 + 0x18]
	0x031BA49C LDR W11, [X8 + 0x18]
	0x031BA4A0 CMP W10, W11
	0x031BA4A4 B.CS 0x31BA4C0
	0x031BA4A8 ADD W9, W10, 0x1
	0x031BA4AC MADD X8, X10, X22, X8
	0x031BA4B0 STR W9, [X20 + 0x18]
	0x031BA4B4 STP S0, S1, [X8 + 0x20]
	0x031BA4B8 STR S2, [X8 + 0x28]
	0x031BA4BC B 0x31BA4D4
	0x031BA4C0 LDR X8, [X9 + 0x20]
	0x031BA4C4 MOV X0, X20
	0x031BA4C8 LDR X8, [X8 + 0xC0]
	0x031BA4CC LDR X1, [X8 + 0x70]
	0x031BA4D0 BL 0x30CC1B4
	0x031BA4D4 FADD S8, S10, S8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move W8, 1
	007 Move X1, X31
	008 Move W19, W2
	009 Move X21, X0
	010 Move [X0+20], W8
	011 Call Object..ctor, X0
	012 And W2, W19, 1
	013 Move X1, X20
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move [X21+20], W2
	017 Move X0, X21
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Call LTSpline.init, X0, X1, X2
	021 Return 

Method: System.Void init(UnityEngine.Vector3[] pts, System.Boolean constantSpeed)

Disassembly:
	0x031BA0D4 MOV V4.16B, V9.16B
	0x031BA0D8 MOV V5.16B, V10.16B
	0x031BA0DC MOV X0, X31
	0x031BA0E0 BL 0x3C0CB04
	0x031BA0E4 LDRSW X8, [X19 + 0x28]
	0x031BA0E8 ADD X21, X21, 0x1
	0x031BA0EC ADD X20, X20, 0xC
	0x031BA0F0 MOV V8.16B, V11.16B
	0x031BA0F4 CMP X21, X8
	0x031BA0F8 MOV V12.16B, V9.16B
	0x031BA0FC MOV V13.16B, V10.16B
	0x031BA100 B.LT 0x31BA0A4
	0x031BA104 LDP S1, S0, [X31 + 0x8]
	0x031BA108 LDR V2, [X31 + 0x4]
	0x031BA10C MOV V3.16B, V15.16B
	0x031BA110 LDP X20, X19, [X31 + 0x70]
	0x031BA114 LDP X22, X21, [X31 + 0x60]
	0x031BA118 LDP X30, X23, [X31 + 0x50]
	0x031BA11C LDP D9, D8, [X31 + 0x40]
	0x031BA120 LDP D11, D10, [X31 + 0x30]
	0x031BA124 LDP D13, D12, [X31 + 0x20]
	0x031BA128 LDP D15, D14, [X31 + 0x10]
	0x031BA12C MOV X0, X31
	0x031BA130 ADD X31, X31, 0x80
	0x031BA134 B 0x3C0D030
	0x031BA138 LDP X20, X19, [X31 + 0x70]
	0x031BA13C LDP X22, X21, [X31 + 0x60]
	0x031BA140 LDP X30, X23, [X31 + 0x50]
	0x031BA144 LDP D9, D8, [X31 + 0x40]
	0x031BA148 LDP D11, D10, [X31 + 0x30]
	0x031BA14C LDP D13, D12, [X31 + 0x20]
	0x031BA150 LDP D15, D14, [X31 + 0x10]
	0x031BA154 ADD X31, X31, 0x80
	0x031BA158 RET
	0x031BA15C BL 0x1C16F20
	0x031BA160 BL 0x1C16F28
	0x031BA164 CBZ X0, 0x31BA16C
	0x031BA168 RET
	0x031BA16C STR X30, [X31 - 0x10]!
	0x031BA170 BL 0x1C16F20
	0x031BA174 STP D15, D14, [X31 - 0x60]!
	0x031BA178 STP D13, D12, [X31 + 0x10]
	0x031BA17C STP D11, D10, [X31 + 0x20]
	0x031BA180 STP D9, D8, [X31 + 0x30]
	0x031BA184 STP X30, X21, [X31 + 0x40]
	0x031BA188 STP X20, X19, [X31 + 0x50]
	0x031BA18C MOV X19, X0
	0x031BA190 MOV X0, X31
	0x031BA194 MOV V8.16B, V3.16B
	0x031BA198 MOV V9.16B, V2.16B
	0x031BA19C MOV V10.16B, V1.16B
	0x031BA1A0 MOV V11.16B, V0.16B
	0x031BA1A4 MOV X20, X1
	0x031BA1A8 BL 0x3C10044
	0x031BA1AC CBZ X20, 0x31BA27C
	0x031BA1B0 MOV X0, X20
	0x031BA1B4 MOV W1, W31
	0x031BA1B8 MOV X2, X31
	0x031BA1BC BL 0x3C1518C
	0x031BA1C0 MOV X0, X31
	0x031BA1C4 BL 0x3C100BC
	0x031BA1C8 MOVZ W0, 0x1
	0x031BA1CC MOV X1, X31
	0x031BA1D0 BL 0x3C102DC
	0x031BA1D4 MOV V0.16B, V11.16B
	0x031BA1D8 MOV V1.16B, V10.16B
	0x031BA1DC MOV V2.16B, V9.16B
	0x031BA1E0 MOV V3.16B, V8.16B
	0x031BA1E4 MOV X0, X31
	0x031BA1E8 BL 0x3C0FEC4
	0x031BA1EC LDRB W8, [X19 + 0x14]
	0x031BA1F0 CBZ W8, 0x31BA280
	0x031BA1F4 LDR W8, [X19 + 0x28]
	0x031BA1F8 CMP W8, 0x4
	0x031BA1FC B.LT 0x31BA310
	0x031BA200 LDR X8, [X19 + 0x20]
	0x031BA204 CBZ X8, 0x31BA27C
	0x031BA208 LDR W9, [X8 + 0x18]
	0x031BA20C CBZ W9, 0x31BA338
	0x031BA210 LDP S0, S1, [X8 + 0x20]
	0x031BA214 LDR V2, [X8 + 0x28]
	0x031BA218 MOV X20, X31
	0x031BA21C MOV X21, X31
	0x031BA220 LDR W9, [X8 + 0x18]
	0x031BA224 CMP X21, X9
	0x031BA228 B.CS 0x31BA338
	0x031BA22C ADD X8, X8, X20
	0x031BA230 LDP S8, S9, [X8 + 0x20]
	0x031BA234 LDR V10, [X8 + 0x28]
	0x031BA238 MOV X0, X31
	0x031BA23C BL 0x3C0FD88
	0x031BA240 MOV V0.16B, V8.16B
	0x031BA244 MOV V1.16B, V9.16B
	0x031BA248 MOV V2.16B, V10.16B
	0x031BA24C MOV X0, X31
	0x031BA250 BL 0x3C0FD88
	0x031BA254 LDRSW X8, [X19 + 0x28]
	0x031BA258 ADD X21, X21, 0x1
	0x031BA25C CMP X21, X8
	0x031BA260 B.GE 0x31BA310
	0x031BA264 LDR X8, [X19 + 0x20]
	0x031BA268 ADD X20, X20, 0xC
	0x031BA26C MOV V2.16B, V10.16B
	0x031BA270 MOV V1.16B, V9.16B
	0x031BA274 MOV V0.16B, V8.16B
	0x031BA278 CBNZ X8, 0x31BA220
	0x031BA27C BL 0x1C16F20
	0x031BA280 LDR X8, [X19 + 0x18]
	0x031BA284 CBZ X8, 0x31BA27C
	0x031BA288 LDR W9, [X8 + 0x18]
	0x031BA28C CMP W9, 0x4
	0x031BA290 B.LT 0x31BA310
	0x031BA294 LDP S9, S10, [X8 + 0x20]
	0x031BA298 LDR V11, [X8 + 0x28]
	0x031BA29C SCVTF S0, W9
	0x031BA2A0 FMOV S1, 10
	0x031BA2A4 FMUL S0, S0, S1
	0x031BA2A8 FMOV S1, 1
	0x031BA2AC FDIV S15, S1, S0
	0x031BA2B0 FMOV S8, W31
	0x031BA2B4 MOV X0, X19
	0x031BA2B8 MOV V0.16B, V8.16B
	0x031BA2BC BL 0x31B94D8
	0x031BA2C0 MOV V12.16B, V0.16B
	0x031BA2C4 MOV V13.16B, V1.16B
	0x031BA2C8 MOV V14.16B, V2.16B
	0x031BA2CC MOV V0.16B, V9.16B
	0x031BA2D0 MOV V1.16B, V10.16B
	0x031BA2D4 MOV V2.16B, V11.16B
	0x031BA2D8 MOV X0, X31
	0x031BA2DC BL 0x3C0FD88
	0x031BA2E0 MOV V0.16B, V12.16B
	0x031BA2E4 MOV V1.16B, V13.16B
	0x031BA2E8 MOV V2.16B, V14.16B
	0x031BA2EC MOV X0, X31
	0x031BA2F0 BL 0x3C0FD88
	0x031BA2F4 FADD S8, S15, S8
	0x031BA2F8 FMOV S0, 1
	0x031BA2FC FCMP S8, S0
	0x031BA300 MOV V9.16B, V12.16B
	0x031BA304 MOV V10.16B, V13.16B
	0x031BA308 MOV V11.16B, V14.16B
	0x031BA30C B.MI 0x31BA2B4
	0x031BA310 MOV X0, X31
	0x031BA314 BL 0x3C10318
	0x031BA318 LDP X20, X19, [X31 + 0x50]
	0x031BA31C LDP X30, X21, [X31 + 0x40]
	0x031BA320 LDP D9, D8, [X31 + 0x30]
	0x031BA324 LDP D11, D10, [X31 + 0x20]
	0x031BA328 LDP D13, D12, [X31 + 0x10]
	0x031BA32C MOV X0, X31
	0x031BA330 LDP D15, D14, [X31], #0x60
	0x031BA334 B 0x3C1006C
	0x031BA338 BL 0x1C16F28
	0x031BA33C STR D10, [X31 - 0x40]!
	0x031BA340 STP D9, D8, [X31 + 0x8]
	0x031BA344 STR X30, [X31 + 0x18]
	0x031BA348 STP X22, X21, [X31 + 0x20]
	0x031BA34C STP X20, X19, [X31 + 0x30]
	0x031BA350 ADRP X20, 0x1221000
	0x031BA354 LDRB W8, [X20 + 0xED9]
	0x031BA358 MOV X19, X0
	0x031BA35C TBNZ X8, 0x0, 0x31BA398
	0x031BA360 ADRP X0, 0xF3D000
	0x031BA364 LDR X0, [X0 + 0x3B8]
	0x031BA368 BL 0x1C16CF4
	0x031BA36C ADRP X0, 0xF65000
	0x031BA370 LDR X0, [X0 + 0x5B0]
	0x031BA374 BL 0x1C16CF4
	0x031BA378 ADRP X0, 0xF65000
	0x031BA37C LDR X0, [X0 + 0x5B8]
	0x031BA380 BL 0x1C16CF4
	0x031BA384 ADRP X0, 0xF3D000
	0x031BA388 LDR X0, [X0 + 0x3C0]
	0x031BA38C BL 0x1C16CF4
	0x031BA390 MOVZ W8, 0x1
	0x031BA394 STRB W8, [X20 + 0xED9]
	0x031BA398 LDR X8, [X19 + 0x18]
	0x031BA39C CBZ X8, 0x31BA510
	0x031BA3A0 LDR W8, [X8 + 0x18]
	0x031BA3A4 CMP W8, 0x4
	0x031BA3A8 B.LT 0x31BA4F4
	0x031BA3AC ADRP X8, 0xF3D000
	0x031BA3B0 LDR X8, [X8 + 0x3C0]
	0x031BA3B4 LDR X0, [X8]
	0x031BA3B8 BL 0x1C16F10
	0x031BA3BC ADRP X8, 0xF65000
	0x031BA3C0 LDR X8, [X8 + 0x5B8]
	0x031BA3C4 MOV X20, X0
	0x031BA3C8 LDR X1, [X8]
	0x031BA3CC BL 0x30CB97C
	0x031BA3D0 LDR X8, [X19 + 0x18]
	0x031BA3D4 CBZ X8, 0x31BA510
	0x031BA3D8 LDR W9, [X8 + 0x18]
	0x031BA3DC CBZ W9, 0x31BA514
	0x031BA3E0 CBZ X20, 0x31BA510
	0x031BA3E4 ADRP X21, 0xF3D000
	0x031BA3E8 LDP S0, S1, [X8 + 0x20]
	0x031BA3EC LDR V2, [X8 + 0x28]
	0x031BA3F0 LDR X21, [X21 + 0x3B8]
	0x031BA3F4 LDR W10, [X20 + 0x1C]
	0x031BA3F8 LDR X8, [X20 + 0x10]
	0x031BA3FC LDR X9, [X21]
	0x031BA400 ADD W10, W10, 0x1
	0x031BA404 STR W10, [X20 + 0x1C]
	0x031BA408 CBZ X8, 0x31BA510
	0x031BA40C LDRSW X10, [X20 + 0x18]
	0x031BA410 LDR W11, [X8 + 0x18]
	0x031BA414 CMP W10, W11
	0x031BA418 B.CS 0x31BA438
	0x031BA41C MOVZ W11, 0xC
	0x031BA420 ADD W9, W10, 0x1
	0x031BA424 MADD X8, X10, X11, X8
	0x031BA428 STR W9, [X20 + 0x18]
	0x031BA42C STP S0, S1, [X8 + 0x20]
	0x031BA430 STR S2, [X8 + 0x28]
	0x031BA434 B 0x31BA44C
	0x031BA438 LDR X8, [X9 + 0x20]
	0x031BA43C MOV X0, X20
	0x031BA440 LDR X8, [X8 + 0xC0]
	0x031BA444 LDR X1, [X8 + 0x70]
	0x031BA448 BL 0x30CC1B4
	0x031BA44C LDR X8, [X19 + 0x18]
	0x031BA450 CBZ X8, 0x31BA510
	0x031BA454 LDR V0, [X8 + 0x18]
	0x031BA458 FMOV S1, 10
	0x031BA45C FMOV S9, 1
	0x031BA460 FMOV S8, W31
	0x031BA464 SCVTF S0, S0
	0x031BA468 FMUL S0, S0, S1
	0x031BA46C FDIV S10, S9, S0
	0x031BA470 MOVZ W22, 0xC
	0x031BA474 MOV X0, X19
	0x031BA478 MOV V0.16B, V8.16B
	0x031BA47C BL 0x31B94D8
	0x031BA480 LDR W10, [X20 + 0x1C]
	0x031BA484 LDR X8, [X20 + 0x10]
	0x031BA488 LDR X9, [X21]
	0x031BA48C ADD W10, W10, 0x1
	0x031BA490 STR W10, [X20 + 0x1C]
	0x031BA494 CBZ X8, 0x31BA510

ISIL:
	001 Move [X31-144], D15
	002 Move [X31-136], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X22, 0x1222000
	019 Move W8, [X22+3798]
	020 Move W20, W2
	021 Move X21, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0xF66000
	028 Move X0, [X0+1048]
	029 Call 0x1C17CF4
	030 Move X0, 0xF3C000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move X0, 0xF3C000
	034 Move X0, [X0+2480]
	035 Call 0x1C17CF4
	036 Move X0, 0xF66000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+3798], W8
	041 Compare X21, 0
	042 JumpIfEqual {275}
	043 Move W1, [X21+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X22, 0xF3C000
	046 Move X22, [X22+2480]
	047 Move X0, [X22]
	048 Call 0x1C17D6C
	049 Move [X19+24], X0
	050 Move W2, [X21+24]
	051 Move X1, X0
	052 Move X0, X21
	053 Move X3, X31
	054 Call Array.Copy, X0, X1, X2
	055 Move W9, [X21+24]
	056 Move X8, [X19+24]
	057 Subtract W9, W9, 3
	058 Move [X19+48], W9
	059 Compare X8, 0
	060 JumpIfEqual {275}
	061 Move X9, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 And X9, X9, 0
	064 Move X10, INVALID
	065 Add X10, X10, X9
	066 Or X11, X31, 0x100000001
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move S8, W31
	069 Move X21, 0xF3A000
	070 Move V9, [X8+44]
	071 Move V10, [X8+48]
	072 Move X21, [X21+1448]
	073 Move X23, X31
	074 Move S8, W31
	075 Move W24, 1
	076 Move X25, 0x121F000
	077 Move W26, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X8, X8, X23
	080 Move W9, [X25+2140]
	081 Move V12, [X8+44]
	082 Move V11, [X8+48]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X21
	086 Call 0x1C17CF4
	087 Move [X25+2140], W24
	088 Move X0, [X21]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X8, [X19+24]
	094 Compare X8, 0
	095 JumpIfEqual {275}
	096 Subtract S0, S12, S9
	097 Subtract V1, V11, V10
	098 Move X10, [X8+24]
	099 Multiply S0, S0, S0
	100 NotImplemented "Instruction INVALID not yet implemented."
	101 Add S0, S0, S1
	102 Move S1, V1.S[1]
	103 Add S0, S1, S0
	104 Add X26, X26, 1
	105 NotImplemented "Instruction FSQRT not yet implemented."
	106 And X9, X10, 0
	107 Subtract W10, W10, 1
	108 Add S8, S8, S0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X23, X23, 12
	111 Move TEMP, X20
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {257}
	115 Move X21, 0xF66000
	116 Move X21, [X21+1048]
	117 Move W20, [X19+48]
	118 Move X0, [X21]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X21]
	124 Move X8, [X0+184]
	125 Move X0, [X22]
	126 Move W8, [X8]
	127 Move W9, [X8+4]
	128 Multiply W10, W9, W20
	129 NotImplemented "Instruction SCVTF not yet implemented."
	130 NotImplemented "Instruction SCVTF not yet implemented."
	131 NotImplemented "Instruction FDIV not yet implemented."
	132 NotImplemented "Instruction FDIV not yet implemented."
	133 Move W9, 0x7F800000
	134 Move [X31+76], S1
	135 NotImplemented "Instruction FDIV not yet implemented."
	136 Move S0, W9
	137 NotImplemented "Instruction FCVTPS not yet implemented."
	138 NotImplemented "Instruction FRINTP not yet implemented."
	139 Move W10, 0x80000000
	140 NotImplemented "Instruction FCMP not yet implemented."
	141 NotImplemented "Instruction CSEL not yet implemented."
	142 Multiply W8, W9, W8
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W9, 2
	145 NotImplemented "Instruction CSEL not yet implemented."
	146 Move W1, W20
	147 Call 0x1C17D6C
	148 Move [X19+32], X0
	149 Move S0, W31
	150 Move X0, X19
	151 Call LTSpline.interp, X0, V0
	152 Move X8, [X19+32]
	153 Compare X8, 0
	154 JumpIfEqual {275}
	155 Move W9, [X8+24]
	156 Compare W9, 0
	157 JumpIfEqual {276}
	158 Add W21, W20, 1
	159 Move V9, V0
	160 Move V8, V1
	161 Move V10, V2
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move W22, 1
	164 Move [X8+32], S0
	165 Move [X8+40], S1
	166 Move [X8+40], S2
	167 Move [X19+16], W31
	168 NotImplemented "Instruction SCVTF not yet implemented."
	169 Move X20, 0xF3A000
	170 Move X20, [X20+1448]
	171 Move W23, W31
	172 Move X24, 0x121F000
	173 Move W25, 12
	174 Move W26, 1
	175 NotImplemented "Instruction SCVTF not yet implemented."
	176 NotImplemented "Instruction FDIV not yet implemented."
	177 Move X0, X19
	178 Move V0, V14
	179 Call LTSpline.interp, X0, V0
	180 Move W8, [X24+2140]
	181 Move V11, V0
	182 Move V12, V1
	183 Move V13, V2
	184 Compare W8, 0
	185 JumpIfNotEqual {189}
	186 Move X0, X20
	187 Call 0x1C17CF4
	188 Move [X24+2140], W22
	189 Move X0, [X20]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Subtract S0, S11, S9
	195 Subtract S1, S12, S8
	196 Subtract S2, S13, S10
	197 Multiply S0, S0, S0
	198 Multiply S1, S1, S1
	199 Multiply S2, S2, S2
	200 Add S0, S0, S1
	201 Add S0, S2, S0
	202 Move S1, 1
	203 NotImplemented "Instruction FCMP not yet implemented."
	204 NotImplemented "Instruction FSQRT not yet implemented."
	205 Move V1, [X31+76]
	206 NotImplemented "Instruction FCMP not yet implemented."
	207 Move X8, [X19+32]
	208 Compare X8, 0
	209 JumpIfEqual {275}
	210 Move W9, [X8+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X9, W26
	213 NotImplemented "Instruction MADD not yet implemented."
	214 Move [X8+32], S11
	215 Move [X8+40], S12
	216 Move [X8+40], S13
	217 Move V1, [X19+16]
	218 Add W26, W26, 1
	219 Move V10, V13
	220 Move V8, V12
	221 Add S0, S0, S1
	222 Move V9, V11
	223 Move [X19+16], S0
	224 Add W23, W23, 1
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X8, 0xF3C000
	227 Move X8, [X8+1448]
	228 Move X0, [X8]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X8, 0xF66000
	234 Move X8, [X8+1448]
	235 Move X20, [X31+128]
	236 Move X19, [X31+136]
	237 Move X22, [X31+112]
	238 Move X21, [X31+120]
	239 Move X24, [X31+96]
	240 Move X23, [X31+104]
	241 Move X0, [X8]
	242 Move X26, [X31+80]
	243 Move X25, [X31+88]
	244 Move X30, [X31+64]
	245 Move D9, [X31+48]
	246 Move D8, [X31+56]
	247 Move D11, [X31+32]
	248 Move D10, [X31+40]
	249 Move D13, [X31+16]
	250 Move D12, [X31+24]
	251 Move D15, [X31+144]
	252 Move D14, [X31+152]
	253 Call LeanTween.logError, X0
	254 Return 
	255 Move W26, 1
	256 Move [X19+40], W26
	257 Move X20, [X31+128]
	258 Move X19, [X31+136]
	259 Move X22, [X31+112]
	260 Move X21, [X31+120]
	261 Move X24, [X31+96]
	262 Move X23, [X31+104]
	263 Move X26, [X31+80]
	264 Move X25, [X31+88]
	265 Move X30, [X31+64]
	266 Move D9, [X31+48]
	267 Move D8, [X31+56]
	268 Move D11, [X31+32]
	269 Move D10, [X31+40]
	270 Move D13, [X31+16]
	271 Move D12, [X31+24]
	272 Move D15, [X31+144]
	273 Move D14, [X31+152]
	274 Return 
	275 Call 0x1C17F20
	276 Call 0x1C17F28

Method: UnityEngine.Vector3 map(System.Single u)

Disassembly:
	0x031BA6DC STUR V1, [X0 + 0x38]
	0x031BA6E0 STR W8, [X0 + 0x88]
	0x031BA6E4 BL 0x33BDD8C
	0x031BA6E8 STP S11, S10, [X19 + 0x10]
	0x031BA6EC STP S9, S8, [X19 + 0x18]
	0x031BA6F0 STR X20, [X19 + 0x20]
	0x031BA6F4 STRB W31, [X19 + 0x4A]
	0x031BA6F8 STRB W31, [X19 + 0x48]
	0x031BA6FC LDP X20, X19, [X31 + 0x30]
	0x031BA700 LDR X30, [X31 + 0x20]
	0x031BA704 LDP D9, D8, [X31 + 0x10]
	0x031BA708 LDP D11, D10, [X31], #0x40
	0x031BA70C RET
	0x031BA710 STR D12, [X31 - 0x40]!
	0x031BA714 STP D11, D10, [X31 + 0x10]
	0x031BA718 STP D9, D8, [X31 + 0x20]
	0x031BA71C STP X30, X19, [X31 + 0x30]
	0x031BA720 ADRP X9, 0xFFFFFFFFFD931000
	0x031BA724 MOV V11.16B, V1.16B
	0x031BA728 LDR V1, [X9 + 0x43]
	0x031BA72C MOV V12.16B, V0.16B
	0x031BA730 MOVZ W8, 0x3F800000
	0x031BA734 FMOV V0.4S, 0x0
	0x031BA738 MOVN W9, 0x0
	0x031BA73C MOV X1, X31
	0x031BA740 MOV V8.16B, V4.16B
	0x031BA744 MOV V9.16B, V3.16B
	0x031BA748 MOV V10.16B, V2.16B
	0x031BA74C MOV X19, X0
	0x031BA750 STR W8, [X0 + 0x20]
	0x031BA754 STUR V0, [X0 + 0x6C]
	0x031BA758 STUR V1, [X0 + 0x38]
	0x031BA75C STR W9, [X0 + 0x88]
	0x031BA760 BL 0x33BDD8C
	0x031BA764 STP S12, S11, [X19 + 0x10]
	0x031BA768 STP S10, S9, [X19 + 0x18]
	0x031BA76C STR S8, [X19 + 0x20]
	0x031BA770 STR W31, [X19 + 0x24]
	0x031BA774 STRB W31, [X19 + 0x4A]
	0x031BA778 STRB W31, [X19 + 0x48]
	0x031BA77C LDP X30, X19, [X31 + 0x30]
	0x031BA780 LDP D9, D8, [X31 + 0x20]
	0x031BA784 LDP D11, D10, [X31 + 0x10]
	0x031BA788 LDR V12, [X31], #0x40
	0x031BA78C RET
	0x031BA790 STP D13, D12, [X31 - 0x40]!
	0x031BA794 STP D11, D10, [X31 + 0x10]
	0x031BA798 STP D9, D8, [X31 + 0x20]
	0x031BA79C STP X30, X19, [X31 + 0x30]
	0x031BA7A0 MOV V13.16B, V0.16B
	0x031BA7A4 ADRP X8, 0xFFFFFFFFFD931000
	0x031BA7A8 FMOV V0.4S, 0x0
	0x031BA7AC STUR V0, [X0 + 0x6C]
	0x031BA7B0 LDR V0, [X8 + 0x43]
	0x031BA7B4 MOVZ W8, 0x3F800000
	0x031BA7B8 STR W8, [X0 + 0x20]
	0x031BA7BC MOVN W8, 0x0
	0x031BA7C0 MOV X1, X31
	0x031BA7C4 MOV V8.16B, V5.16B
	0x031BA7C8 MOV V9.16B, V4.16B
	0x031BA7CC MOV V10.16B, V3.16B
	0x031BA7D0 MOV V11.16B, V2.16B

ISIL:
	001 Move [X31-16], X30
	002 Move S1, 1
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 Move W9, [X0+40]
	005 Move W10, 0x7F800000
	006 Move X8, [X0+32]
	007 Move S1, W10
	008 Subtract W9, W9, 1
	009 NotImplemented "Instruction SCVTF not yet implemented."
	010 Multiply S0, S2, S0
	011 NotImplemented "Instruction FRINTM not yet implemented."
	012 Move W11, 0x80000000
	013 NotImplemented "Instruction FCVTMS not yet implemented."
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 NotImplemented "Instruction FRINTP not yet implemented."
	016 NotImplemented "Instruction FCVTPS not yet implemented."
	017 NotImplemented "Instruction CSEL not yet implemented."
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Compare X8, 0
	021 JumpIfEqual {59}
	022 Move W11, [X8+24]
	023 NotImplemented "Instruction BIC not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W11, W9
	027 Move W12, 12
	028 Move X10, W10
	029 NotImplemented "Instruction MADD not yet implemented."
	030 Move W12, 12
	031 NotImplemented "Instruction MADD not yet implemented."
	032 Move V1, [X11+32]
	033 Move V2, [X11+40]
	034 Move V3, [X8+32]
	035 Move V4, [X8+40]
	036 NotImplemented "Instruction SCVTF not yet implemented."
	037 Subtract S0, S0, S5
	038 Subtract V3, V3, V1
	039 Subtract S4, S4, S2
	040 NotImplemented "Instruction INVALID not yet implemented."
	041 Multiply S4, S0, S4
	042 Add V0, V1, V3
	043 Add S2, S2, S4
	044 Move X8, [X0+24]
	045 Compare X8, 0
	046 JumpIfEqual {59}
	047 Move W9, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract W9, W9, 2
	050 Move W10, 12
	051 Move X9, W9
	052 NotImplemented "Instruction MADD not yet implemented."
	053 Move V0, [X8+32]
	054 Move V2, [X8+40]
	055 Move S1, V0.S[1]
	056 Move X30, [X31+16]
	057 Return X0
	058 Call 0x1C17F28
	059 Call 0x1C17F20

Method: UnityEngine.Vector3 interp(System.Single t)

Disassembly:
	0x031BA4D8 FCMP S8, S9
	0x031BA4DC B.MI 0x31BA474
	0x031BA4E0 ADRP X8, 0xF65000
	0x031BA4E4 LDR X8, [X8 + 0x5B0]
	0x031BA4E8 MOV X0, X20
	0x031BA4EC LDR X1, [X8]
	0x031BA4F0 BL 0x30CE118
	0x031BA4F4 LDP X20, X19, [X31 + 0x30]
	0x031BA4F8 LDP X22, X21, [X31 + 0x20]
	0x031BA4FC LDR X30, [X31 + 0x18]
	0x031BA500 LDP D9, D8, [X31 + 0x8]
	0x031BA504 MOV X0, X31
	0x031BA508 LDR V10, [X31], #0x40
	0x031BA50C RET
	0x031BA510 BL 0x1C16F20
	0x031BA514 BL 0x1C16F28
	0x031BA518 STR X30, [X31 - 0x20]!
	0x031BA51C STP X20, X19, [X31 + 0x10]
	0x031BA520 ADRP X19, 0x1221000
	0x031BA524 ADRP X20, 0xF65000
	0x031BA528 LDRB W8, [X19 + 0xEDA]
	0x031BA52C LDR X20, [X20 + 0x418]
	0x031BA530 TBNZ X8, 0x0, 0x31BA548
	0x031BA534 ADRP X0, 0xF65000
	0x031BA538 LDR X0, [X0 + 0x418]
	0x031BA53C BL 0x1C16CF4
	0x031BA540 MOVZ W8, 0x1
	0x031BA544 STRB W8, [X19 + 0xEDA]
	0x031BA548 LDR X8, [X20]
	0x031BA54C ADRP X9, 0xFFFFFFFFFD933000
	0x031BA550 LDR V0, [X9 + 0x458]
	0x031BA554 LDP X20, X19, [X31 + 0x10]
	0x031BA558 LDR X8, [X8 + 0xB8]
	0x031BA55C STR D0, [X8]
	0x031BA560 LDR X30, [X31], #0x20
	0x031BA564 RET
	0x031BA568 STP X30, X19, [X31 - 0x10]!
	0x031BA56C ADRP X9, 0xFFFFFFFFFD931000
	0x031BA570 LDR V1, [X9 + 0x43]
	0x031BA574 MOVZ W8, 0x3F800000
	0x031BA578 FMOV V0.4S, 0x0
	0x031BA57C MOVN W9, 0x0
	0x031BA580 MOV X1, X31
	0x031BA584 MOV X19, X0
	0x031BA588 STR W8, [X0 + 0x20]
	0x031BA58C STUR V0, [X0 + 0x6C]
	0x031BA590 STUR V1, [X0 + 0x38]
	0x031BA594 STR W9, [X0 + 0x88]
	0x031BA598 BL 0x33BDD8C
	0x031BA59C MOV X0, X19
	0x031BA5A0 BL 0x31BA5C4
	0x031BA5A4 ADRP X8, 0xFFFFFFFFFD930000
	0x031BA5A8 LDR V0, [X8 + 0xBC]
	0x031BA5AC MOVZ W8, 0x1
	0x031BA5B0 STRB W8, [X19 + 0x4A]
	0x031BA5B4 STRB W8, [X19 + 0x48]
	0x031BA5B8 STR V0, [X19 + 0x1]
	0x031BA5BC LDP X30, X19, [X31], #0x10
	0x031BA5C0 RET
	0x031BA5C4 STR X30, [X31 - 0x20]!
	0x031BA5C8 STP X20, X19, [X31 + 0x10]
	0x031BA5CC ADRP X8, 0xFFFFFFFFFD933000
	0x031BA5D0 LDR V0, [X8 + 0x648]
	0x031BA5D4 STRB W31, [X0 + 0x4A]
	0x031BA5D8 STRB W31, [X0 + 0x48]
	0x031BA5DC ADRP X20, 0x121F000
	0x031BA5E0 STR D0, [X0 + 0x20]
	0x031BA5E4 LDRB W8, [X20 + 0x78F]
	0x031BA5E8 MOV X19, X0
	0x031BA5EC CBNZ W8, 0x31BA604
	0x031BA5F0 ADRP X0, 0xF41000
	0x031BA5F4 LDR X0, [X0 + 0xF08]
	0x031BA5F8 BL 0x1C16CF4
	0x031BA5FC MOVZ W8, 0x1
	0x031BA600 STRB W8, [X20 + 0x78F]
	0x031BA604 ADRP X8, 0xF41000
	0x031BA608 LDR X8, [X8 + 0xF08]
	0x031BA60C LDR X8, [X8]
	0x031BA610 LDR X8, [X8 + 0xB8]
	0x031BA614 LDR V0, [X8]
	0x031BA618 STRB W31, [X19 + 0x7E]
	0x031BA61C STRB W31, [X19 + 0x68]
	0x031BA620 STR D0, [X19 + 0x30]
	0x031BA624 LDP X20, X19, [X31 + 0x10]
	0x031BA628 LDR X30, [X31], #0x20
	0x031BA62C RET
	0x031BA630 STP D11, D10, [X31 - 0x30]!
	0x031BA634 STP D9, D8, [X31 + 0x10]
	0x031BA638 STP X30, X19, [X31 + 0x20]
	0x031BA63C ADRP X9, 0xFFFFFFFFFD931000
	0x031BA640 MOV V10.16B, V1.16B
	0x031BA644 LDR V1, [X9 + 0x43]
	0x031BA648 MOV V11.16B, V0.16B
	0x031BA64C MOVZ W8, 0x3F800000
	0x031BA650 FMOV V0.4S, 0x0
	0x031BA654 MOVN W9, 0x0
	0x031BA658 MOV X1, X31
	0x031BA65C MOV V8.16B, V3.16B
	0x031BA660 MOV V9.16B, V2.16B
	0x031BA664 MOV X19, X0
	0x031BA668 STR W8, [X0 + 0x20]
	0x031BA66C STUR V0, [X0 + 0x6C]
	0x031BA670 STUR V1, [X0 + 0x38]
	0x031BA674 STR W9, [X0 + 0x88]
	0x031BA678 BL 0x33BDD8C
	0x031BA67C STP S11, S10, [X19 + 0x10]
	0x031BA680 STP S9, S8, [X19 + 0x18]
	0x031BA684 MOV X0, X19
	0x031BA688 LDP X30, X19, [X31 + 0x20]
	0x031BA68C LDP D9, D8, [X31 + 0x10]
	0x031BA690 LDP D11, D10, [X31], #0x30
	0x031BA694 B 0x31BA5C4
	0x031BA698 STP D11, D10, [X31 - 0x40]!
	0x031BA69C STP D9, D8, [X31 + 0x10]
	0x031BA6A0 STR X30, [X31 + 0x20]
	0x031BA6A4 STP X20, X19, [X31 + 0x30]
	0x031BA6A8 ADRP X8, 0xFFFFFFFFFD931000
	0x031BA6AC MOV V10.16B, V1.16B
	0x031BA6B0 LDR V1, [X8 + 0x43]
	0x031BA6B4 MOV V11.16B, V0.16B
	0x031BA6B8 MOVZ W20, 0x3F800000
	0x031BA6BC FMOV V0.4S, 0x0
	0x031BA6C0 MOVN W8, 0x0
	0x031BA6C4 MOV X1, X31
	0x031BA6C8 MOV V8.16B, V3.16B
	0x031BA6CC MOV V9.16B, V2.16B
	0x031BA6D0 MOV X19, X0
	0x031BA6D4 STR W20, [X0 + 0x20]
	0x031BA6D8 STUR V0, [X0 + 0x6C]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V0
	007 Move V0, [X0+48]
	008 Move X20, 0x121F000
	009 Move W8, [X20+2595]
	010 Move X19, X0
	011 NotImplemented "Instruction SCVTF not yet implemented."
	012 Compare W8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, 0xF3A000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2595], W8
	019 Move X8, 0xF3A000
	020 Move X8, [X8+1448]
	021 Multiply S9, S9, S8
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W10, 0x7F800000
	028 Move W9, [X19+48]
	029 NotImplemented "Instruction FRINTM not yet implemented."
	030 Move S1, W10
	031 NotImplemented "Instruction FCVTMS not yet implemented."
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Move W10, 0x80000000
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X8, [X19+24]
	036 Subtract W11, W9, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move [X19+52], W10
	040 Compare X8, 0
	041 JumpIfEqual {132}
	042 Move W14, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W13, W10, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add W12, W10, 2
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W11, W10, 3
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction SCVTF not yet implemented."
	051 NotImplemented "Instruction SCVTF not yet implemented."
	052 Move X9, W10
	053 Move W10, 12
	054 Move X13, W13
	055 NotImplemented "Instruction MADD not yet implemented."
	056 Move W10, 12
	057 Move X12, W12
	058 NotImplemented "Instruction MADD not yet implemented."
	059 Move W13, 12
	060 NotImplemented "Instruction MADD not yet implemented."
	061 Multiply S0, S0, S8
	062 Move V19, [X10+32]
	063 Subtract S0, S0, S1
	064 Move V1, [X9+32]
	065 Move V20, [X12+32]
	066 Move V21, [X10+40]
	067 Move V2, 0
	068 Move V18, [X9+40]
	069 Move V22, [X12+40]
	070 Move V4, 0
	071 Move V6, 0
	072 NotImplemented "Instruction INVALID not yet implemented."
	073 Move S3, 3
	074 NotImplemented "Instruction INVALID not yet implemented."
	075 NotImplemented "Instruction INVALID not yet implemented."
	076 Subtract V20, V20, V1
	077 Subtract V23, V23, V1
	078 Add V1, V1, V1
	079 NotImplemented "Instruction INVALID not yet implemented."
	080 Move X11, W11
	081 Move W13, 12
	082 Move S5, -5
	083 Move S7, 4
	084 Add V1, V1, V4
	085 Multiply S4, S21, S3
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Multiply S3, S22, S3
	088 Multiply S7, S22, S7
	089 Subtract S22, S22, S18
	090 Subtract S4, S4, S18
	091 Add S18, S18, S18
	092 Multiply S5, S21, S5
	093 Add S5, S18, S5
	094 Move V18, [X8+32]
	095 Subtract V2, V23, V2
	096 Move V23, [X8+40]
	097 Subtract S3, S4, S3
	098 Multiply S4, S0, S0
	099 Add V1, V1, V6
	100 NotImplemented "Instruction INVALID not yet implemented."
	101 Multiply S22, S0, S22
	102 Multiply S0, S0, S4
	103 Add S5, S5, S7
	104 Add V2, V2, V18
	105 Subtract V1, V1, V18
	106 Add S3, S3, S23
	107 Subtract S5, S5, S23
	108 NotImplemented "Instruction INVALID not yet implemented."
	109 NotImplemented "Instruction INVALID not yet implemented."
	110 Multiply S0, S0, S3
	111 Multiply S3, S4, S5
	112 Add V1, V2, V1
	113 Add V19, V19, V19
	114 Add S0, S0, S3
	115 Add V1, V20, V1
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X30, [X31+16]
	119 NotImplemented "Instruction MOVI not yet implemented."
	120 Add S21, S21, S21
	121 Add S0, S22, S0
	122 Add V1, V19, V1
	123 Move S17, 0.5
	124 Add S2, S21, S0
	125 NotImplemented "Instruction INVALID not yet implemented."
	126 Multiply S2, S2, S17
	127 Move S1, V0.S[1]
	128 Move D9, [X31+48]
	129 Move D8, [X31+56]
	130 Return X0
	131 Call 0x1C17F28
	132 Call 0x1C17F20

Method: System.Single ratioAtPoint(UnityEngine.Vector3 pt)

Disassembly:
	0x031BA7D4 MOV V12.16B, V1.16B
	0x031BA7D8 MOV X19, X0
	0x031BA7DC STUR V0, [X0 + 0x38]
	0x031BA7E0 STR W8, [X0 + 0x88]
	0x031BA7E4 BL 0x33BDD8C
	0x031BA7E8 FCMP S8, 0x0
	0x031BA7EC STP S13, S12, [X19 + 0x10]
	0x031BA7F0 STP S11, S10, [X19 + 0x18]
	0x031BA7F4 STP S9, S8, [X19 + 0x20]
	0x031BA7F8 STRB W31, [X19 + 0x4A]
	0x031BA7FC STRB W31, [X19 + 0x48]
	0x031BA800 B.EQ 0x31BA824
	0x031BA804 MOVZ W8, 0x1
	0x031BA808 STRB W8, [X19 + 0x48]
	0x031BA80C MOV X0, X19
	0x031BA810 LDP X30, X19, [X31 + 0x30]
	0x031BA814 LDP D9, D8, [X31 + 0x20]
	0x031BA818 LDP D11, D10, [X31 + 0x10]
	0x031BA81C LDP D13, D12, [X31], #0x40
	0x031BA820 B 0x31BA838
	0x031BA824 LDP X30, X19, [X31 + 0x30]
	0x031BA828 LDP D9, D8, [X31 + 0x20]
	0x031BA82C LDP D11, D10, [X31 + 0x10]
	0x031BA830 LDP D13, D12, [X31], #0x40
	0x031BA834 RET
	0x031BA838 SUB X31, X31, 0xE0
	0x031BA83C STR D14, [X31 + 0x80]
	0x031BA840 STP D13, D12, [X31 + 0x90]
	0x031BA844 STP D11, D10, [X31 + 0xA0]
	0x031BA848 STP D9, D8, [X31 + 0xB0]
	0x031BA84C STP X30, X21, [X31 + 0xC0]
	0x031BA850 STP X20, X19, [X31 + 0xD0]
	0x031BA854 ADRP X21, 0x1221000
	0x031BA858 ADRP X20, 0xF60000
	0x031BA85C LDRB W8, [X21 + 0xEDB]
	0x031BA860 LDR X20, [X20 + 0x4C0]
	0x031BA864 MOV X19, X0
	0x031BA868 TBNZ X8, 0x0, 0x31BA880
	0x031BA86C ADRP X0, 0xF60000
	0x031BA870 LDR X0, [X0 + 0x4C0]
	0x031BA874 BL 0x1C16CF4
	0x031BA878 MOVZ W8, 0x1
	0x031BA87C STRB W8, [X21 + 0xEDB]
	0x031BA880 LDR X0, [X20]
	0x031BA884 MOVI V0.2D, 0x0
	0x031BA888 STP V0, V0, [X31 + 0x60]
	0x031BA88C STP V0, V0, [X31 + 0x40]
	0x031BA890 LDR W8, [X0 + 0xE0]
	0x031BA894 CBNZ W8, 0x31BA89C
	0x031BA898 BL 0x1C16DFC
	0x031BA89C ADD X8, X31, 0x0
	0x031BA8A0 MOV X0, X31
	0x031BA8A4 BL 0x3C67684
	0x031BA8A8 LDP V0, V1, [X31]
	0x031BA8AC LDP V2, V3, [X31 + 0x20]
	0x031BA8B0 ADD X0, X31, 0x40
	0x031BA8B4 MOV W1, W31
	0x031BA8B8 MOV X2, X31
	0x031BA8BC STP V0, V1, [X31 + 0x40]
	0x031BA8C0 STP V2, V3, [X31 + 0x60]
	0x031BA8C4 BL 0x3C27894
	0x031BA8C8 ADD X8, X31, 0x0
	0x031BA8CC MOV X0, X31
	0x031BA8D0 MOV V8.16B, V0.16B
	0x031BA8D4 BL 0x3C67684
	0x031BA8D8 LDP V0, V1, [X31]
	0x031BA8DC LDP V2, V3, [X31 + 0x20]
	0x031BA8E0 ADD X0, X31, 0x40
	0x031BA8E4 MOVZ W1, 0x5
	0x031BA8E8 MOV X2, X31
	0x031BA8EC STP V0, V1, [X31 + 0x40]
	0x031BA8F0 STP V2, V3, [X31 + 0x60]
	0x031BA8F4 BL 0x3C27894
	0x031BA8F8 ADD X8, X31, 0x0
	0x031BA8FC MOV X0, X31

ISIL:
	001 Move [X31-128], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move W8, [X0+40]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X20, 0xF3A000
	019 Move X20, [X20+1448]
	020 Move TEMP, 0x80800000
	021 Not TEMP
	022 Move W8, TEMP
	023 Move V8, V2
	024 Move V9, V1
	025 Move X19, X0
	026 Move V10, V0
	027 Move X22, X31
	028 Move X23, X31
	029 Move W21, W31
	030 Move X24, 0x121F000
	031 Move S11, W8
	032 Move W25, 1
	033 Move X8, [X19+32]
	034 Compare X8, 0
	035 JumpIfEqual {90}
	036 Move W9, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X8, X22
	039 Move W9, [X24+2140]
	040 Move S14, [X8+32]
	041 Move S13, [X8+36]
	042 Move V12, [X8+40]
	043 Compare W9, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X20
	046 Call 0x1C17CF4
	047 Move [X24+2140], W25
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Subtract S0, S10, S14
	054 Subtract S1, S9, S13
	055 Subtract S2, S8, S12
	056 Multiply S0, S0, S0
	057 Multiply S1, S1, S1
	058 Multiply S2, S2, S2
	059 Add S0, S0, S1
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add S0, S2, S0
	062 NotImplemented "Instruction FSQRT not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Add X23, X23, 1
	066 NotImplemented "Instruction FCSEL not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X22, X22, 12
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 Move S0, W31
	071 Move X20, [X31+112]
	072 Move X19, [X31+120]
	073 Move X22, [X31+96]
	074 Move X21, [X31+104]
	075 Move X24, [X31+80]
	076 Move X23, [X31+88]
	077 Move X30, [X31+64]
	078 Move X25, [X31+72]
	079 Move D9, [X31+48]
	080 Move D8, [X31+56]
	081 Move D11, [X31+32]
	082 Move D10, [X31+40]
	083 Move D13, [X31+16]
	084 Move D12, [X31+24]
	085 Subtract W8, W8, 1
	086 NotImplemented "Instruction SCVTF not yet implemented."
	087 NotImplemented "Instruction FDIV not yet implemented."
	088 Move V14, [X31+128]
	089 Return V0
	090 Call 0x1C17F20
	091 Call 0x1C17F28

Method: UnityEngine.Vector3 point(System.Single ratio)

Disassembly:
	0x031BA900 MOV V9.16B, V0.16B
	0x031BA904 BL 0x3C67684
	0x031BA908 LDP V0, V1, [X31]
	0x031BA90C LDP V2, V3, [X31 + 0x20]
	0x031BA910 ADD X0, X31, 0x40
	0x031BA914 MOVZ W1, 0xA

ISIL:
	001 Move W8, [X0+20]
	002 Move S1, 1
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 Compare W8, 0
	005 JumpIfEqual {8}
	006 Call LTSpline.map, X0, V0
	007 Return X0
	008 Call LTSpline.interp, X0, V0
	009 Return X0

Method: System.Void place2d(UnityEngine.Transform transform, System.Single ratio)

Disassembly:
	0x031BA918 MOV X2, X31
	0x031BA91C STP V0, V1, [X31 + 0x40]
	0x031BA920 STP V2, V3, [X31 + 0x60]
	0x031BA924 BL 0x3C27894
	0x031BA928 ADRP X21, 0x121F000
	0x031BA92C LDRB W8, [X21 + 0x78F]
	0x031BA930 LDR V10, [X19 + 0x28]
	0x031BA934 CBNZ W8, 0x31BA94C
	0x031BA938 ADRP X0, 0xF41000
	0x031BA93C LDR X0, [X0 + 0xF08]
	0x031BA940 BL 0x1C16CF4
	0x031BA944 MOVZ W8, 0x1
	0x031BA948 STRB W8, [X21 + 0x78F]
	0x031BA94C ADRP X8, 0xF41000
	0x031BA950 LDR X8, [X8 + 0xF08]
	0x031BA954 LDR X8, [X8]
	0x031BA958 LDR X8, [X8 + 0xB8]
	0x031BA95C LDR V0, [X8]
	0x031BA960 ADRP X8, 0xFFFFFFFFFD92F000
	0x031BA964 LDR V1, [X8 + 0xF20]
	0x031BA968 FSUB V0.2S, V10.2S, V0.2S
	0x00000000 INVALID
	0x031BA970 FADDP S0, V0.2S
	0x031BA974 FCMP S0, S1
	0x031BA978 B.PL 0x31BAA20
	0x031BA97C LDR X0, [X20]
	0x031BA980 LDR V11, [X19 + 0x10]
	0x031BA984 LDR V12, [X19 + 0x18]
	0x031BA988 LDR W8, [X0 + 0xE0]
	0x031BA98C CBNZ W8, 0x31BA994
	0x031BA990 BL 0x1C16DFC
	0x031BA994 ADD X8, X31, 0x0
	0x031BA998 MOV X0, X31
	0x031BA99C BL 0x3C67684
	0x031BA9A0 LDP V0, V1, [X31]
	0x031BA9A4 LDP V2, V3, [X31 + 0x20]
	0x031BA9A8 ADD X0, X31, 0x40
	0x031BA9AC MOVZ W1, 0xC
	0x031BA9B0 MOV X2, X31
	0x031BA9B4 STP V0, V1, [X31 + 0x40]
	0x031BA9B8 STP V2, V3, [X31 + 0x60]
	0x031BA9BC BL 0x3C27894
	0x031BA9C0 LDR V13, [X19 + 0x14]
	0x031BA9C4 LDR V14, [X19 + 0x1C]
	0x031BA9C8 ADD X8, X31, 0x0

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V0
	007 Move X19, X1
	008 Move X20, X0
	009 Call LTSpline.point, X0, V0
	010 Compare X19, 0
	011 JumpIfEqual {52}
	012 Move X0, X19
	013 Move X1, X31
	014 Call Transform.set_position, X0, X1
	015 Move X8, -40693760
	016 Move V0, [X8+1040]
	017 Move S1, 1
	018 Add S0, S8, S0
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move D9, [X31+48]
	024 Move D8, [X31+56]
	025 Return 
	026 Move X0, X20
	027 Call LTSpline.point, X0, V0
	028 Move X0, X19
	029 Move X1, X31
	030 Move V8, V0
	031 Move V9, V1
	032 Call Transform.get_position, X0
	033 Subtract S2, S8, S0
	034 Subtract S0, S9, S1
	035 Move V1, V2
	036 Call 0x3EB2C40
	037 Move X8, -40693760
	038 Move V2, [X8+1096]
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move V1, V0
	044 Move S0, W31
	045 Multiply S2, S1, S2
	046 Move S1, W31
	047 Move X1, X31
	048 Move D9, [X31+48]
	049 Move D8, [X31+56]
	050 Call Transform.set_eulerAngles, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void placeLocal2d(UnityEngine.Transform transform, System.Single ratio)

Disassembly:
	0x031BA9CC MOV X0, X31
	0x031BA9D0 MOV V10.16B, V0.16B
	0x031BA9D4 BL 0x3C67684
	0x031BA9D8 LDP V0, V1, [X31]
	0x031BA9DC LDP V2, V3, [X31 + 0x20]
	0x031BA9E0 ADD X0, X31, 0x40
	0x031BA9E4 MOVZ W1, 0xD
	0x031BA9E8 MOV X2, X31
	0x031BA9EC STP V0, V1, [X31 + 0x40]
	0x031BA9F0 STP V2, V3, [X31 + 0x60]
	0x031BA9F4 BL 0x3C27894
	0x031BA9F8 FMOV S1, 0.5
	0x031BA9FC FMUL S2, S12, S1
	0x031BAA00 FMUL S1, S14, S1
	0x031BAA04 FADD S2, S11, S2
	0x031BAA08 FADD S1, S13, S1
	0x031BAA0C FMUL S2, S8, S2
	0x031BAA10 FMUL S1, S9, S1
	0x031BAA14 FADD S2, S2, S10
	0x031BAA18 FADD S0, S1, S0
	0x031BAA1C STP S2, S0, [X19 + 0x28]
	0x031BAA20 LDP X20, X19, [X31 + 0xD0]
	0x031BAA24 LDP X30, X21, [X31 + 0xC0]
	0x031BAA28 LDP D9, D8, [X31 + 0xB0]
	0x031BAA2C LDP D11, D10, [X31 + 0xA0]
	0x031BAA30 LDP D13, D12, [X31 + 0x90]
	0x031BAA34 LDR V14, [X31 + 0x80]
	0x031BAA38 ADD X31, X31, 0xE0
	0x031BAA3C RET
	0x031BAA40 LDR W8, [X0 + 0x88]
	0x031BAA44 ADDS W31, W8, 0x1
	0x031BAA48 CSET W0, NE
	0x031BAA4C RET
	0x031BAA50 STP W1, W2, [X0 + 0x88]
	0x031BAA54 RET
	0x031BAA58 LDR V0, [X0 + 0x10]
	0x031BAA5C RET
	0x031BAA60 STR S0, [X0 + 0x10]
	0x031BAA64 RET
	0x031BAA68 LDR V0, [X0 + 0x14]
	0x031BAA6C RET
	0x031BAA70 STR S0, [X0 + 0x14]
	0x031BAA74 RET
	0x031BAA78 LDR V0, [X0 + 0x18]
	0x031BAA7C RET
	0x031BAA80 STR S0, [X0 + 0x18]
	0x031BAA84 RET
	0x031BAA88 LDR V0, [X0 + 0x1C]
	0x031BAA8C RET
	0x031BAA90 STR S0, [X0 + 0x1C]
	0x031BAA94 RET
	0x031BAA98 STR D10, [X31 - 0x40]!
	0x031BAA9C STP D9, D8, [X31 + 0x8]
	0x031BAAA0 STR X30, [X31 + 0x18]
	0x031BAAA4 STP X22, X21, [X31 + 0x20]
	0x031BAAA8 STP X20, X19, [X31 + 0x30]
	0x031BAAAC ADRP X21, 0x1221000
	0x031BAAB0 ADRP X20, 0xF65000
	0x031BAAB4 LDRB W8, [X21 + 0xEDC]
	0x031BAAB8 LDR X20, [X20 + 0x5C0]
	0x031BAABC MOV X19, X0
	0x031BAAC0 TBNZ X8, 0x0, 0x31BAAF0
	0x031BAAC4 ADRP X0, 0xF65000
	0x031BAAC8 LDR X0, [X0 + 0x5C8]
	0x031BAACC BL 0x1C16CF4
	0x031BAAD0 ADRP X0, 0xF60000
	0x031BAAD4 LDR X0, [X0 + 0x4C0]
	0x031BAAD8 BL 0x1C16CF4
	0x031BAADC ADRP X0, 0xF65000
	0x031BAAE0 LDR X0, [X0 + 0x5C0]
	0x031BAAE4 BL 0x1C16CF4
	0x031BAAE8 MOVZ W8, 0x1
	0x031BAAEC STRB W8, [X21 + 0xEDC]
	0x031BAAF0 LDR X8, [X20]
	0x031BAAF4 ADRP X21, 0xF60000
	0x031BAAF8 LDR X8, [X8 + 0xB8]
	0x031BAAFC LDRB W9, [X8]
	0x031BAB00 LDR X21, [X21 + 0x4C0]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1222000
	008 Move W8, [X21+3799]
	009 Move V8, V0
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF3A000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3799], W8
	021 Compare X19, 0
	022 JumpIfEqual {99}
	023 Move X21, 0xF3A000
	024 Move X21, [X21+1432]
	025 Move X0, X19
	026 Move X1, X31
	027 Call Transform.get_parent, X0
	028 Move X8, [X21]
	029 Move X21, X0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X21
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {54}
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X30, [X31+16]
	048 Move X21, [X31+24]
	049 Move V0, V8
	050 Move D9, [X31+48]
	051 Move D8, [X31+56]
	052 Call LTSpline.place2d, X0, X1, V0
	053 Return 
	054 Move X0, X20
	055 Move V0, V8
	056 Call LTSpline.point, X0, V0
	057 Move X0, X19
	058 Move X1, X31
	059 Call Transform.set_localPosition, X0, X1
	060 Move X8, -40693760
	061 Move V0, [X8+1040]
	062 Move S1, 1
	063 Add S0, S8, S0
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 Move D9, [X31+48]
	070 Move D8, [X31+56]
	071 Return 
	072 Move X0, X20
	073 Call LTSpline.point, X0, V0
	074 Move X0, X19
	075 Move X1, X31
	076 Move V8, V0
	077 Move V9, V1
	078 Call Transform.get_localPosition, X0
	079 Subtract S2, S8, S0
	080 Subtract S0, S9, S1
	081 Move V1, V2
	082 Call 0x3EB2C40
	083 Move X8, -40693760
	084 Move V2, [X8+1096]
	085 Move X0, X19
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X30, [X31+16]
	089 Move X21, [X31+24]
	090 Move V1, V0
	091 Move S0, W31
	092 Multiply S2, S1, S2
	093 Move S1, W31
	094 Move X1, X31
	095 Move D9, [X31+48]
	096 Move D8, [X31+56]
	097 Call Transform.set_localEulerAngles, X0, X1
	098 Return 
	099 Call 0x1C17F20

Method: System.Void place(UnityEngine.Transform transform, System.Single ratio)

Disassembly:
	0x031BAB04 CBZ W9, 0x31BAB50
	0x031BAB08 STRB W31, [X8]
	0x031BAB0C LDR X0, [X21]
	0x031BAB10 LDR W8, [X0 + 0xE0]
	0x031BAB14 CBNZ W8, 0x31BAB1C
	0x031BAB18 BL 0x1C16DFC
	0x031BAB1C MOV X0, X31
	0x031BAB20 BL 0x3C66568
	0x031BAB24 MOV X0, X31
	0x031BAB28 MOV V8.16B, V0.16B
	0x031BAB2C BL 0x3C66568
	0x031BAB30 MOV X0, X31
	0x031BAB34 MOV V9.16B, V1.16B
	0x031BAB38 BL 0x3C66568
	0x031BAB3C FMOV S3, 1
	0x031BAB40 MOV V0.16B, V8.16B
	0x031BAB44 MOV V1.16B, V9.16B
	0x031BAB48 MOV X0, X31
	0x031BAB4C BL 0x3C6662C
	0x031BAB50 LDRB W8, [X19 + 0x48]
	0x031BAB54 CBZ W8, 0x31BABD4
	0x031BAB58 LDRB W8, [X19 + 0x49]
	0x031BAB5C CBZ W8, 0x31BABA0
	0x031BAB60 STRH W31, [X19 + 0x48]
	0x031BAB64 ADRP X22, 0x121F000
	0x031BAB68 LDRB W8, [X22 + 0x78F]
	0x031BAB6C CBNZ W8, 0x31BAB84

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x121F000
	007 Move W8, [X21+1926]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0xF3A000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1926], W8
	018 Move X8, 0xF3A000
	019 Move X8, [X8+1440]
	020 Move X0, X20
	021 Move X1, X19
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X8, [X8]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Move V0, V8
	028 Move X8, [X8+184]
	029 Move S1, [X8+24]
	030 Move S2, [X8+28]
	031 Move V3, [X8+32]
	032 Move V8, [X31+48]

Method: System.Void place(UnityEngine.Transform transform, System.Single ratio, UnityEngine.Vector3 worldUp)

Disassembly:
	0x031BAB70 ADRP X0, 0xF41000
	0x031BAB74 LDR X0, [X0 + 0xF08]
	0x031BAB78 BL 0x1C16CF4
	0x031BAB7C MOVZ W8, 0x1
	0x031BAB80 STRB W8, [X22 + 0x78F]
	0x031BAB84 ADRP X8, 0xF41000
	0x031BAB88 LDR X8, [X8 + 0xF08]
	0x031BAB8C LDR X8, [X8]
	0x031BAB90 LDR X8, [X8 + 0xB8]
	0x031BAB94 LDR V0, [X8]
	0x031BAB98 STR D0, [X19 + 0x28]
	0x031BAB9C B 0x31BABD4
	0x031BABA0 ADRP X8, 0xF65000
	0x031BABA4 LDR X8, [X8 + 0x5C8]
	0x031BABA8 LDP S10, S8, [X19 + 0x24]
	0x031BABAC LDR V9, [X19 + 0x2C]
	0x031BABB0 LDR X0, [X8]
	0x031BABB4 LDR W8, [X0 + 0xE0]
	0x031BABB8 CBNZ W8, 0x31BABC0
	0x031BABBC BL 0x1C16DFC
	0x031BABC0 MOV V0.16B, V10.16B
	0x031BABC4 MOV V1.16B, V8.16B
	0x031BABC8 MOV V2.16B, V9.16B
	0x031BABCC MOV X0, X31
	0x031BABD0 BL 0x3C76598
	0x031BABD4 LDRB W8, [X19 + 0x4A]
	0x031BABD8 CBZ W8, 0x31BAC30
	0x031BABDC LDR X0, [X21]
	0x031BABE0 LDR W8, [X0 + 0xE0]
	0x031BABE4 CBNZ W8, 0x31BABEC
	0x031BABE8 BL 0x1C16DFC
	0x031BABEC MOV X0, X31
	0x031BABF0 BL 0x3C66568
	0x031BABF4 MOV X0, X31
	0x031BABF8 MOV V8.16B, V0.16B
	0x031BABFC BL 0x3C66568
	0x031BAC00 MOV X0, X31
	0x031BAC04 MOV V9.16B, V1.16B
	0x031BAC08 BL 0x3C66568

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move V8, V3
	009 Move V9, V2
	010 Move V10, V1
	011 Move V11, V0
	012 Move X19, X1
	013 Move X20, X0
	014 Call LTSpline.point, X0, V0
	015 Compare X19, 0
	016 JumpIfEqual {49}
	017 Move X0, X19
	018 Move X1, X31
	019 Call Transform.set_position, X0, X1
	020 Move X8, -40693760
	021 Move V0, [X8+1040]
	022 Move S1, 1
	023 Add S0, S11, S0
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move X20, [X31+48]
	026 Move X19, [X31+56]
	027 Move X30, [X31+32]
	028 Move D9, [X31+16]
	029 Move D8, [X31+24]
	030 Move D11, [X31+64]
	031 Move D10, [X31+72]
	032 Return 
	033 Move X0, X20
	034 Call LTSpline.point, X0, V0
	035 Move X0, X19
	036 Move V4, V9
	037 Move V5, V8
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X30, [X31+32]
	041 Move D9, [X31+16]
	042 Move D8, [X31+24]
	043 Move V3, V10
	044 Move X1, X31
	045 Move D11, [X31+64]
	046 Move D10, [X31+72]
	047 Call Transform.LookAt, X0, X1, X2
	048 Return 
	049 Call 0x1C17F20

Method: System.Void placeLocal(UnityEngine.Transform transform, System.Single ratio)

Disassembly:
	0x031BAC0C LDR V3, [X19 + 0x20]
	0x031BAC10 MOV V0.16B, V8.16B
	0x031BAC14 MOV V1.16B, V9.16B
	0x031BAC18 MOV X0, X31
	0x031BAC1C BL 0x3C6662C
	0x031BAC20 LDR X8, [X20]
	0x031BAC24 MOVZ W9, 0x1
	0x031BAC28 LDR X8, [X8 + 0xB8]
	0x031BAC2C STRB W9, [X8]
	0x031BAC30 LDRB W8, [X19 + 0x7C]
	0x031BAC34 CBZ W8, 0x31BAC7C
	0x031BAC38 LDRB W8, [X19 + 0x7D]
	0x031BAC3C LDR X0, [X19 + 0x60]
	0x031BAC40 LDR V0, [X19 + 0x1C]
	0x031BAC44 CBZ W8, 0x31BAC58
	0x031BAC48 CBZ X0, 0x31BAC9C
	0x031BAC4C LDR V1, [X19 + 0x44]
	0x031BAC50 FMUL S0, S0, S1
	0x031BAC54 B 0x31BAC5C
	0x031BAC58 CBZ X0, 0x31BAC9C
	0x031BAC5C MOVZ W8, 0x7F800000
	0x031BAC60 FMOV S1, W8
	0x031BAC64 FCVTZS W9, S0
	0x031BAC68 FCMP S0, S1
	0x031BAC6C MOVZ W8, 0x80000000
	0x031BAC70 CSEL W1, W8, W9, EQ
	0x031BAC74 MOV X2, X31

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x121F000
	007 Move W8, [X21+1926]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0xF3A000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1926], W8
	018 Move X8, 0xF3A000
	019 Move X8, [X8+1440]
	020 Move X0, X20
	021 Move X1, X19
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X8, [X8]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Move V0, V8
	028 Move X8, [X8+184]
	029 Move S1, [X8+24]
	030 Move S2, [X8+28]
	031 Move V3, [X8+32]
	032 Move V8, [X31+48]

Method: System.Void placeLocal(UnityEngine.Transform transform, System.Single ratio, UnityEngine.Vector3 worldUp)

Disassembly:
	0x031BAC78 BL 0x3C73704
	0x031BAC7C LDP S0, S1, [X19 + 0x10]
	0x031BAC80 LDP S2, S3, [X19 + 0x18]
	0x031BAC84 LDP X20, X19, [X31 + 0x30]
	0x031BAC88 LDP X22, X21, [X31 + 0x20]
	0x031BAC8C LDR X30, [X31 + 0x18]
	0x031BAC90 LDP D9, D8, [X31 + 0x8]
	0x031BAC94 LDR V10, [X31], #0x40
	0x031BAC98 RET
	0x031BAC9C BL 0x1C16F20
	0x031BACA0 STP S0, S1, [X0 + 0x10]
	0x031BACA4 STP S2, S3, [X0 + 0x18]
	0x031BACA8 RET
	0x031BACAC STR X1, [X0 + 0x60]
	0x031BACB0 RET
	0x031BACB4 AND W8, W1, 0x1
	0x031BACB8 STRB W8, [X0 + 0x7C]
	0x031BACBC RET
	0x031BACC0 MOVZ W8, 0x1
	0x031BACC4 STP S0, S1, [X0 + 0x6C]
	0x031BACC8 STP S2, S3, [X0 + 0x74]
	0x031BACCC STRB W8, [X0 + 0x68]
	0x031BACD0 RET
	0x031BACD4 STR S0, [X0 + 0x20]
	0x031BACD8 RET
	0x031BACDC STR X1, [X0 + 0x50]
	0x031BACE0 RET
	0x031BACE4 AND W8, W1, 0x1
	0x031BACE8 STP S0, S1, [X0 + 0x38]
	0x031BACEC STRB W8, [X0 + 0x7D]
	0x031BACF0 STP S2, S3, [X0 + 0x40]
	0x031BACF4 RET
	0x031BACF8 STR X30, [X31 - 0x20]!
	0x031BACFC STP X20, X19, [X31 + 0x10]
	0x031BAD00 AND W8, W1, 0x1
	0x031BAD04 MOV X19, X0
	0x031BAD08 STRB W8, [X0 + 0x7D]
	0x031BAD0C MOV X0, X31
	0x031BAD10 BL 0x3C0E0B0
	0x031BAD14 MOV W20, W0
	0x031BAD18 MOV X0, X31
	0x031BAD1C BL 0x3C0E0D8
	0x031BAD20 SCVTF S0, W20
	0x031BAD24 SCVTF S1, W0
	0x031BAD28 STR X31, [X19 + 0x38]
	0x031BAD2C STP S0, S1, [X19 + 0x40]
	0x031BAD30 MOV X0, X19
	0x031BAD34 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move V8, V3
	010 Move V9, V2
	011 Move V10, V1
	012 Move V11, V0
	013 Move X19, X1
	014 Move X20, X0
	015 Call LTSpline.point, X0, V0
	016 Compare X19, 0
	017 JumpIfEqual {62}
	018 Move X0, X19
	019 Move X1, X31
	020 Call Transform.set_localPosition, X0, X1
	021 Move X8, -40693760
	022 Move V0, [X8+1040]
	023 Add S11, S11, S0
	024 Move S0, 1
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Move D9, [X31+16]
	031 Move D8, [X31+24]
	032 Move D11, [X31+64]
	033 Move D10, [X31+72]
	034 Return 
	035 Move X0, X19
	036 Move X1, X31
	037 Call Transform.get_parent, X0
	038 Move X21, X0
	039 Move X0, X20
	040 Move V0, V11
	041 Call LTSpline.point, X0, V0
	042 Compare X21, 0
	043 JumpIfEqual {62}
	044 Move X0, X21
	045 Move X1, X31
	046 Call Transform.TransformPoint, X0, X1
	047 Move X0, X19
	048 Move V4, V9
	049 Move V5, V8
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Move D9, [X31+16]
	055 Move D8, [X31+24]
	056 Move V3, V10
	057 Move X1, X31
	058 Move D11, [X31+64]
	059 Move D10, [X31+72]
	060 Call Transform.LookAt, X0, X1, X2
	061 Return 
	062 Call 0x1C17F20

Method: System.Void gizmoDraw(System.Single t = -1)

Disassembly:
	0x031BAD38 LDR X30, [X31], #0x20
	0x031BAD3C RET
	0x031BAD40 AND W8, W1, 0x1
	0x031BAD44 STRB W8, [X0 + 0x7E]
	0x031BAD48 RET
	0x031BAD4C SUB X31, X31, 0x30
	0x031BAD50 STP X30, X21, [X31 + 0x10]
	0x031BAD54 STP X20, X19, [X31 + 0x20]
	0x031BAD58 ADRP X20, 0x1221000
	0x031BAD5C ADRP X21, 0xF39000
	0x031BAD60 LDRB W8, [X20 + 0xEDD]
	0x031BAD64 LDR X21, [X21 + 0xAC8]
	0x031BAD68 MOV X19, X0
	0x031BAD6C TBNZ X8, 0x0, 0x31BADB4
	0x031BAD70 ADRP X0, 0xF39000
	0x031BAD74 LDR X0, [X0 + 0xAC8]
	0x031BAD78 BL 0x1C16CF4
	0x031BAD7C ADRP X0, 0xF65000
	0x031BAD80 LDR X0, [X0 + 0x5D0]
	0x031BAD84 BL 0x1C16CF4
	0x031BAD88 ADRP X0, 0xF65000
	0x031BAD8C LDR X0, [X0 + 0x5D8]
	0x031BAD90 BL 0x1C16CF4
	0x031BAD94 ADRP X0, 0xF65000
	0x031BAD98 LDR X0, [X0 + 0x5E0]
	0x031BAD9C BL 0x1C16CF4
	0x031BADA0 ADRP X0, 0xF65000
	0x031BADA4 LDR X0, [X0 + 0x5E8]
	0x031BADA8 BL 0x1C16CF4
	0x031BADAC MOVZ W8, 0x1
	0x031BADB0 STRB W8, [X20 + 0xEDD]
	0x031BADB4 LDR X0, [X21]
	0x031BADB8 MOVZ W1, 0x8
	0x031BADBC BL 0x1C16D6C
	0x031BADC0 CBZ X0, 0x31BAED8
	0x031BADC4 LDR W8, [X0 + 0x18]
	0x031BADC8 MOV X20, X0
	0x031BADCC CBZ W8, 0x31BAED4
	0x031BADD0 ADRP X8, 0xF65000
	0x031BADD4 LDR X8, [X8 + 0x5D8]
	0x031BADD8 ADD X0, X31, 0xC
	0x031BADDC MOV X1, X31
	0x031BADE0 LDR X8, [X8]
	0x031BADE4 STR X8, [X20 + 0x20]
	0x031BADE8 LDR V0, [X19 + 0x10]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+32]
	009 Compare X8, 0
	010 JumpIfEqual {46}
	011 Move X9, [X8+24]
	012 Compare X9, 0
	013 JumpIfEqual {46}
	014 Compare W9, 0
	015 JumpIfEqual {54}
	016 Move W9, [X0+40]
	017 Move X19, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move S0, [X8+32]
	020 Move S1, [X8+36]
	021 Move V2, [X8+40]
	022 Move X20, X31
	023 Move X21, X31
	024 Move W9, [X8+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X8, X8, X20
	027 Move S8, [X8+32]
	028 Move S9, [X8+36]
	029 Move V10, [X8+40]
	030 Move X0, X31
	031 Move V3, V8
	032 Move V4, V9
	033 Move V5, V10
	034 Call Gizmos.DrawLine, X0, X1
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X21, X21, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X19+32]
	039 Add X20, X20, 12
	040 Move V2, V10
	041 Move V1, V9
	042 Move V0, V8
	043 Compare X8, 0
	044 JumpIfNotEqual {24}
	045 Call 0x1C17F20
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Move D9, [X31+16]
	051 Move D8, [X31+24]
	052 Move V10, [X31+64]
	053 Return 
	054 Call 0x1C17F28

Method: System.Void drawGizmo(UnityEngine.Color color)

Disassembly:
	0x031BADEC STR S0, [X31 + 0xC]
	0x031BADF0 BL 0x338FE24
	0x031BADF4 LDR W8, [X20 + 0x18]
	0x031BADF8 CMP W8, 0x1
	0x031BADFC B.LS 0x31BAED4
	0x031BAE00 CMP W8, 0x2
	0x031BAE04 STR X0, [X20 + 0x28]
	0x031BAE08 B.EQ 0x31BAED4
	0x031BAE0C ADRP X8, 0xF65000
	0x031BAE10 LDR X8, [X8 + 0x5D0]
	0x031BAE14 ADD X0, X31, 0xC
	0x031BAE18 MOV X1, X31
	0x031BAE1C LDR X8, [X8]
	0x031BAE20 STR X8, [X20 + 0x30]
	0x031BAE24 LDR V0, [X19 + 0x14]
	0x031BAE28 STR S0, [X31 + 0xC]
	0x031BAE2C BL 0x338FE24
	0x031BAE30 LDR W8, [X20 + 0x18]
	0x031BAE34 CMP W8, 0x3
	0x031BAE38 B.LS 0x31BAED4
	0x031BAE3C CMP W8, 0x4
	0x031BAE40 STR X0, [X20 + 0x38]
	0x031BAE44 B.EQ 0x31BAED4
	0x031BAE48 ADRP X8, 0xF65000
	0x031BAE4C LDR X8, [X8 + 0x5E0]
	0x031BAE50 ADD X0, X31, 0xC
	0x031BAE54 MOV X1, X31
	0x031BAE58 LDR X8, [X8]
	0x031BAE5C STR X8, [X20 + 0x40]
	0x031BAE60 LDR V0, [X19 + 0x18]
	0x031BAE64 STR S0, [X31 + 0xC]
	0x031BAE68 BL 0x338FE24
	0x031BAE6C LDR W8, [X20 + 0x18]
	0x031BAE70 CMP W8, 0x5
	0x031BAE74 B.LS 0x31BAED4
	0x031BAE78 CMP W8, 0x6
	0x031BAE7C STR X0, [X20 + 0x48]
	0x031BAE80 B.EQ 0x31BAED4
	0x031BAE84 ADRP X8, 0xF65000
	0x031BAE88 LDR X8, [X8 + 0x5E8]
	0x031BAE8C ADD X0, X31, 0xC
	0x031BAE90 MOV X1, X31
	0x031BAE94 LDR X8, [X8]
	0x031BAE98 STR X8, [X20 + 0x50]
	0x031BAE9C LDR V0, [X19 + 0x1C]
	0x031BAEA0 STR S0, [X31 + 0xC]
	0x031BAEA4 BL 0x338FE24
	0x031BAEA8 LDR W8, [X20 + 0x18]
	0x031BAEAC CMP W8, 0x7
	0x031BAEB0 B.LS 0x31BAED4
	0x031BAEB4 STR X0, [X20 + 0x58]
	0x031BAEB8 MOV X0, X20
	0x031BAEBC MOV X1, X31
	0x031BAEC0 BL 0x32278CC
	0x031BAEC4 LDP X20, X19, [X31 + 0x20]
	0x031BAEC8 LDP X30, X21, [X31 + 0x10]
	0x031BAECC ADD X31, X31, 0x30
	0x031BAED0 RET
	0x031BAED4 BL 0x1C16F28
	0x031BAED8 BL 0x1C16F20
	0x031BAEDC STR X30, [X31 - 0x20]!
	0x031BAEE0 STP X20, X19, [X31 + 0x10]
	0x031BAEE4 ADRP X20, 0x1221000
	0x031BAEE8 ADRP X19, 0xF65000
	0x031BAEEC LDRB W8, [X20 + 0xEDE]
	0x031BAEF0 LDR X19, [X19 + 0x3A0]
	0x031BAEF4 TBNZ X8, 0x0, 0x31BAF24
	0x031BAEF8 ADRP X0, 0xF3A000
	0x031BAEFC LDR X0, [X0 + 0xE58]
	0x031BAF00 BL 0x1C16CF4
	0x031BAF04 ADRP X0, 0xF65000
	0x031BAF08 LDR X0, [X0 + 0x3A0]
	0x031BAF0C BL 0x1C16CF4
	0x031BAF10 ADRP X0, 0xF65000
	0x031BAF14 LDR X0, [X0 + 0x5F0]
	0x031BAF18 BL 0x1C16CF4
	0x031BAF1C MOVZ W8, 0x1
	0x031BAF20 STRB W8, [X20 + 0xEDE]
	0x031BAF24 LDR X0, [X19]
	0x031BAF28 LDR W8, [X0 + 0xE0]
	0x031BAF2C CBNZ W8, 0x31BAF38
	0x031BAF30 BL 0x1C16DFC
	0x031BAF34 LDR X0, [X19]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move W8, [X0+40]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X0+32]
	017 Move X19, X0
	018 Compare X8, 0
	019 JumpIfEqual {104}
	020 Move W9, [X8+24]
	021 Compare W9, 0
	022 JumpIfEqual {105}
	023 Move S12, [X8+32]
	024 Move S13, [X8+36]
	025 Move V14, [X8+40]
	026 Move X0, X31
	027 Move V15, V3
	028 Move V8, V2
	029 Move V9, V1
	030 Move V10, V0
	031 Call Gizmos.get_color
	032 Move [X31+8], S1
	033 Move [X31+16], S0
	034 Move [X31+4], S2
	035 Move V11, V3
	036 Move V0, V10
	037 Move V1, V9
	038 Move V2, V8
	039 Move V3, V15
	040 Move X0, X31
	041 Call Gizmos.set_color, X0
	042 Move W8, [X19+40]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X20, X31
	045 Move X21, X31
	046 Move X8, [X19+32]
	047 Compare X8, 0
	048 JumpIfEqual {104}
	049 Move W9, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X8, X20
	052 Move S8, [X8+32]
	053 Move S9, [X8+36]
	054 Move V10, [X8+40]
	055 Move V0, V12
	056 Move V1, V13
	057 Move V2, V14
	058 Move V3, V8
	059 Move V4, V9
	060 Move V5, V10
	061 Move X0, X31
	062 Call Gizmos.DrawLine, X0, X1
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X21, X21, 1
	065 Add X20, X20, 12
	066 Move V12, V8
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move V13, V9
	069 Move V14, V10
	070 Move S1, [X31+8]
	071 Move S0, [X31+12]
	072 Move V2, [X31+4]
	073 Move V3, V11
	074 Move X20, [X31+96]
	075 Move X19, [X31+104]
	076 Move X30, [X31+80]
	077 Move X21, [X31+88]
	078 Move D9, [X31+64]
	079 Move D8, [X31+72]
	080 Move D11, [X31+48]
	081 Move D10, [X31+56]
	082 Move D13, [X31+32]
	083 Move D12, [X31+40]
	084 Move D15, [X31+16]
	085 Move D14, [X31+24]
	086 Move X0, X31
	087 Add X31, X31, 112
	088 Call Gizmos.set_color, X0
	089 Return 
	090 Move X20, [X31+96]
	091 Move X19, [X31+104]
	092 Move X30, [X31+80]
	093 Move X21, [X31+88]
	094 Move D9, [X31+64]
	095 Move D8, [X31+72]
	096 Move D11, [X31+48]
	097 Move D10, [X31+56]
	098 Move D13, [X31+32]
	099 Move D12, [X31+40]
	100 Move D15, [X31+16]
	101 Move D14, [X31+24]
	102 Add X31, X31, 112
	103 Return 
	104 Call 0x1C17F20
	105 Call 0x1C17F28

Method: System.Void drawGizmo(UnityEngine.Transform[] arr, UnityEngine.Color color)

Disassembly:
	0x031BAF38 LDR X8, [X0 + 0xB8]
	0x031BAF3C LDR X9, [X8 + 0x10]
	0x031BAF40 CBNZ X9, 0x31BAF9C
	0x031BAF44 LDR W9, [X0 + 0xE0]
	0x031BAF48 CBNZ W9, 0x31BAF58
	0x031BAF4C BL 0x1C16DFC
	0x031BAF50 LDR X8, [X19]
	0x031BAF54 LDR X8, [X8 + 0xB8]
	0x031BAF58 ADRP X10, 0xF65000
	0x031BAF5C LDP W9, W8, [X8]
	0x031BAF60 LDR X10, [X10 + 0x5F0]
	0x031BAF64 MUL W1, W8, W9
	0x031BAF68 LDR X0, [X10]
	0x031BAF6C BL 0x1C16D6C
	0x031BAF70 LDR X8, [X19]
	0x031BAF74 LDR X8, [X8 + 0xB8]
	0x031BAF78 STR X0, [X8 + 0x10]
	0x031BAF7C LDR W1, [X8]
	0x031BAF80 ADRP X8, 0xF3A000
	0x031BAF84 LDR X8, [X8 + 0xE58]
	0x031BAF88 LDR X0, [X8]
	0x031BAF8C BL 0x1C16D6C
	0x031BAF90 LDR X8, [X19]
	0x031BAF94 LDR X8, [X8 + 0xB8]
	0x031BAF98 STR X0, [X8 + 0x18]
	0x031BAF9C LDP X20, X19, [X31 + 0x10]
	0x031BAFA0 LDR X30, [X31], #0x20
	0x031BAFA4 RET
	0x031BAFA8 STP X30, X21, [X31 - 0x20]!
	0x031BAFAC STP X20, X19, [X31 + 0x10]
	0x031BAFB0 ADRP X20, 0x1221000
	0x031BAFB4 ADRP X19, 0xF65000
	0x031BAFB8 LDRB W8, [X20 + 0xEDF]
	0x031BAFBC LDR X19, [X19 + 0x3A0]
	0x031BAFC0 TBNZ X8, 0x0, 0x31BAFF0
	0x031BAFC4 ADRP X0, 0xF3A000
	0x031BAFC8 LDR X0, [X0 + 0xE58]
	0x031BAFCC BL 0x1C16CF4
	0x031BAFD0 ADRP X0, 0xF65000
	0x031BAFD4 LDR X0, [X0 + 0x3A0]
	0x031BAFD8 BL 0x1C16CF4
	0x031BAFDC ADRP X0, 0xF65000
	0x031BAFE0 LDR X0, [X0 + 0x5F8]
	0x031BAFE4 BL 0x1C16CF4
	0x031BAFE8 MOVZ W8, 0x1
	0x031BAFEC STRB W8, [X20 + 0xEDF]
	0x031BAFF0 LDR X0, [X19]
	0x031BAFF4 LDR W8, [X0 + 0xE0]
	0x031BAFF8 CBNZ W8, 0x31BB004
	0x031BAFFC BL 0x1C16DFC
	0x031BB000 LDR X0, [X19]
	0x031BB004 LDR X8, [X0 + 0xB8]
	0x031BB008 LDR X9, [X8 + 0x20]
	0x031BB00C CBZ X9, 0x31BB01C
	0x031BB010 LDP X20, X19, [X31 + 0x10]
	0x031BB014 LDP X30, X21, [X31], #0x20
	0x031BB018 RET
	0x031BB01C LDR W9, [X0 + 0xE0]
	0x031BB020 CBNZ W9, 0x31BB030
	0x031BB024 BL 0x1C16DFC
	0x031BB028 LDR X8, [X19]
	0x031BB02C LDR X8, [X8 + 0xB8]
	0x031BB030 LDR W1, [X8 + 0x8]
	0x031BB034 ADRP X8, 0xF64000
	0x031BB038 LDR X8, [X8 + 0x5F8]
	0x031BB03C LDR X0, [X8]
	0x031BB040 BL 0x1C16D6C
	0x031BB044 LDR X8, [X19]
	0x031BB048 ADRP X20, 0xF39000
	0x031BB04C LDR X8, [X8 + 0xB8]
	0x031BB050 STR X0, [X8 + 0x20]
	0x031BB054 LDR W1, [X8 + 0x8]
	0x031BB058 LDR X20, [X20 + 0xE58]
	0x031BB05C LDR X0, [X20]
	0x031BB060 BL 0x1C16D6C
	0x031BB064 LDR X8, [X19]
	0x031BB068 LDR X8, [X8 + 0xB8]
	0x031BB06C STR X0, [X8 + 0x28]
	0x031BB070 LDR W1, [X8 + 0x8]
	0x031BB074 LDR X0, [X20]
	0x031BB078 BL 0x1C16D6C
	0x031BB07C MOV X8, X0
	0x031BB080 LDR X0, [X19]
	0x031BB084 MOV X20, X31
	0x031BB088 MOVN W21, 0x0
	0x031BB08C LDR X9, [X0 + 0xB8]
	0x031BB090 STR X8, [X9 + 0x30]
	0x031BB094 LDR W8, [X0 + 0xE0]
	0x031BB098 CBNZ W8, 0x31BB0A4
	0x031BB09C BL 0x1C16DFC
	0x031BB0A0 LDR X0, [X19]
	0x031BB0A4 LDR X8, [X0 + 0xB8]
	0x031BB0A8 LDR X8, [X8 + 0x28]
	0x031BB0AC CBZ X8, 0x31BB0F4
	0x031BB0B0 LDRSW X8, [X8 + 0x18]
	0x031BB0B4 CMP X20, X8
	0x031BB0B8 B.GE 0x31BB010
	0x031BB0BC LDR W8, [X0 + 0xE0]
	0x031BB0C0 CBNZ W8, 0x31BB0CC
	0x031BB0C4 BL 0x1C16DFC
	0x031BB0C8 LDR X0, [X19]
	0x031BB0CC LDR X8, [X0 + 0xB8]
	0x031BB0D0 LDR X8, [X8 + 0x28]
	0x031BB0D4 CBZ X8, 0x31BB0F4
	0x031BB0D8 LDR W9, [X8 + 0x18]
	0x031BB0DC CMP X20, X9
	0x031BB0E0 B.CS 0x31BB0F8
	0x031BB0E4 ADD X8, X8, X20, 0x2, LSL
	0x031BB0E8 ADD X20, X20, 0x1
	0x031BB0EC STR W21, [X8 + 0x20]
	0x031BB0F0 B 0x31BB094
	0x031BB0F4 BL 0x1C16F20
	0x031BB0F8 BL 0x1C16F28
	0x031BB0FC SUB X31, X31, 0x90
	0x031BB100 STP D15, D14, [X31 + 0x10]
	0x031BB104 STP D13, D12, [X31 + 0x20]
	0x031BB108 STP D11, D10, [X31 + 0x30]
	0x031BB10C STP D9, D8, [X31 + 0x40]
	0x031BB110 STP X30, X25, [X31 + 0x50]
	0x031BB114 STP X24, X23, [X31 + 0x60]
	0x031BB118 STP X22, X21, [X31 + 0x70]
	0x031BB11C STP X20, X19, [X31 + 0x80]
	0x031BB120 ADRP X21, 0x1220000
	0x031BB124 ADRP X20, 0xF64000
	0x031BB128 LDRB W8, [X21 + 0xEE1]
	0x031BB12C LDR X20, [X20 + 0x3A0]
	0x031BB130 MOV W19, W0
	0x031BB134 TBNZ X8, 0x0, 0x31BB164
	0x031BB138 ADRP X0, 0xF5F000
	0x031BB13C LDR X0, [X0 + 0x4C0]
	0x031BB140 BL 0x1C16CF4
	0x031BB144 ADRP X0, 0xF64000
	0x031BB148 LDR X0, [X0 + 0x3A0]
	0x031BB14C BL 0x1C16CF4
	0x031BB150 ADRP X0, 0xF38000
	0x031BB154 LDR X0, [X0 + 0x598]
	0x031BB158 BL 0x1C16CF4
	0x031BB15C MOVZ W8, 0x1
	0x031BB160 STRB W8, [X21 + 0xEE1]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X20, 0x1222000
	017 Move W8, [X20+3800]
	018 Move V14, V3
	019 Move V10, V2
	020 Move V8, V1
	021 Move V11, V0
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xF66000
	028 Move X0, [X0+1048]
	029 Call 0x1C17CF4
	030 Move X0, 0xF3C000
	031 Move X0, [X0+2480]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3800], W8
	035 Compare X19, 0
	036 JumpIfEqual {166}
	037 Move W1, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, 0xF3C000
	040 Move X8, [X8+2480]
	041 Move X0, [X8]
	042 Call 0x1C17D6C
	043 Move W8, [X19+24]
	044 Move X20, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X21, X31
	047 Add X22, X20, 40
	048 Add X23, X19, 32
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X23]
	051 Compare X0, 0
	052 JumpIfEqual {166}
	053 Move X1, X31
	054 Call Transform.get_position, X0
	055 Compare X20, 0
	056 JumpIfEqual {166}
	057 Move W8, [X20+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X22-8], S0
	060 Move [X22], S1
	061 Move [X22+12], S2
	062 Move W8, [X19+24]
	063 Add X21, X21, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, 0xF65000
	066 Move X8, [X8+1048]
	067 Move X0, [X8]
	068 Call 0x1C17F10
	069 Move W8, 1
	070 Move X1, X31
	071 Move X19, X0
	072 Move [X0+20], W8
	073 Call Object..ctor, X0
	074 Move W2, 1
	075 Move X0, X19
	076 Move X1, X20
	077 Call LTSpline.init, X0, X1, X2
	078 Move X8, [X19+32]
	079 Compare X8, 0
	080 JumpIfEqual {166}
	081 Move W9, [X8+24]
	082 Compare W9, 0
	083 JumpIfEqual {167}
	084 Move V9, V8
	085 Move S8, [X8+32]
	086 Move S12, [X8+36]
	087 Move V13, [X8+40]
	088 Move X0, X31
	089 Call Gizmos.get_color
	090 Move [X31+8], S1
	091 Move [X31+16], S0
	092 Move [X31+4], S2
	093 Move V15, V3
	094 Move V0, V11
	095 Move V1, V9
	096 Move V2, V10
	097 Move V3, V14
	098 Move X0, X31
	099 Call Gizmos.set_color, X0
	100 Move W8, [X19+40]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X20, X31
	103 Move X21, X31
	104 Move X8, [X19+32]
	105 Compare X8, 0
	106 JumpIfEqual {166}
	107 Move W9, [X8+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X8, X8, X20
	110 Move S11, [X8+32]
	111 Move S9, [X8+36]
	112 Move V10, [X8+40]
	113 Move V0, V8
	114 Move V1, V12
	115 Move V2, V13
	116 Move V3, V11
	117 Move V4, V9
	118 Move V5, V10
	119 Move X0, X31
	120 Call Gizmos.DrawLine, X0, X1
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X21, X21, 1
	123 Add X20, X20, 12
	124 Move V8, V11
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move V12, V9
	127 Move V13, V10
	128 Move S1, [X31+8]
	129 Move S0, [X31+12]
	130 Move V2, [X31+4]
	131 Move V3, V15
	132 Move X20, [X31+112]
	133 Move X19, [X31+120]
	134 Move X22, [X31+96]
	135 Move X21, [X31+104]
	136 Move X30, [X31+80]
	137 Move X23, [X31+88]
	138 Move D9, [X31+64]
	139 Move D8, [X31+72]
	140 Move D11, [X31+48]
	141 Move D10, [X31+56]
	142 Move D13, [X31+32]
	143 Move D12, [X31+40]
	144 Move D15, [X31+16]
	145 Move D14, [X31+24]
	146 Move X0, X31
	147 Add X31, X31, 128
	148 Call Gizmos.set_color, X0
	149 Return 
	150 Move X20, [X31+112]
	151 Move X19, [X31+120]
	152 Move X22, [X31+96]
	153 Move X21, [X31+104]
	154 Move X30, [X31+80]
	155 Move X23, [X31+88]
	156 Move D9, [X31+64]
	157 Move D8, [X31+72]
	158 Move D11, [X31+48]
	159 Move D10, [X31+56]
	160 Move D13, [X31+32]
	161 Move D12, [X31+40]
	162 Move D15, [X31+16]
	163 Move D14, [X31+24]
	164 Add X31, X31, 128
	165 Return 
	166 Call 0x1C17F20
	167 Call 0x1C17F28

Method: System.Void drawLine(UnityEngine.Transform[] arr, System.Single width, UnityEngine.Color color)

Disassembly:
	0x031BB164 LDR X0, [X20]
	0x031BB168 LDR W8, [X0 + 0xE0]
	0x031BB16C CBNZ W8, 0x31BB178
	0x031BB170 BL 0x1C16DFC

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Return 
	004 Move [X31-16], X30
	005 Call 0x1C17F20

Method: System.Void drawLinesGLLines(UnityEngine.Material outlineMaterial, UnityEngine.Color color, System.Single width)

Disassembly:
	0x031BB174 LDR X0, [X20]
	0x031BB178 LDR X8, [X0 + 0xB8]
	0x031BB17C LDRB W8, [X8 + 0x50]
	0x031BB180 CBZ W8, 0x31BB7C4
	0x031BB184 LDR W8, [X0 + 0xE0]
	0x031BB188 CBNZ W8, 0x31BB190
	0x031BB18C BL 0x1C16DFC
	0x031BB190 BL 0x31BAEDC
	0x031BB194 LDR X8, [X20]
	0x031BB198 LDR X8, [X8 + 0xB8]
	0x031BB19C LDR X8, [X8 + 0x18]
	0x031BB1A0 CBZ X8, 0x31BB840
	0x031BB1A4 LDR W9, [X8 + 0x18]
	0x031BB1A8 CMP W9, W19
	0x031BB1AC B.LS 0x31BB844
	0x031BB1B0 SXTW X22, W19
	0x031BB1B4 ADD X8, X8, X22, 0x2, LSL
	0x031BB1B8 LDR W8, [X8 + 0x20]
	0x031BB1BC CMP W8, 0x1
	0x031BB1C0 B.LT 0x31BB7C4
	0x031BB1C4 ADRP X21, 0xF5F000
	0x031BB1C8 LDR X21, [X21 + 0x4C0]
	0x031BB1CC LDR X0, [X21]
	0x031BB1D0 LDR W8, [X0 + 0xE0]
	0x031BB1D4 CBNZ W8, 0x31BB1DC
	0x031BB1D8 BL 0x1C16DFC
	0x031BB1DC MOV X0, X31
	0x031BB1E0 BL 0x3C66568
	0x031BB1E4 LDR X0, [X20]
	0x031BB1E8 MOV V8.16B, V0.16B
	0x031BB1EC MOV V9.16B, V1.16B
	0x031BB1F0 MOV V10.16B, V2.16B
	0x031BB1F4 LDR W8, [X0 + 0xE0]
	0x031BB1F8 MOV V11.16B, V3.16B
	0x031BB1FC CBNZ W8, 0x31BB208
	0x031BB200 BL 0x1C16DFC
	0x031BB204 LDR X0, [X20]
	0x031BB208 LDR X8, [X0 + 0xB8]
	0x031BB20C STP S8, S9, [X8 + 0x40]
	0x031BB210 STP S10, S11, [X8 + 0x48]
	0x031BB214 LDR X9, [X0 + 0xB8]
	0x031BB218 LDR X8, [X9 + 0x18]
	0x031BB21C CBZ X8, 0x31BB840
	0x031BB220 LDR W10, [X8 + 0x18]
	0x031BB224 CMP W10, W19
	0x031BB228 B.LS 0x31BB844
	0x031BB22C LDR W9, [X9 + 0x4]
	0x031BB230 ADD X8, X8, X22, 0x2, LSL
	0x031BB234 LDR W8, [X8 + 0x20]
	0x031BB238 ADRP X25, 0xF38000
	0x031BB23C LDR X25, [X25 + 0x598]
	0x031BB240 MUL W22, W9, W19
	0x031BB244 ADD W23, W8, W22
	0x031BB248 SBFM X8, X22, 0x3D, 0x1F
	0x031BB24C ADD X24, X8, 0x20
	0x031BB250 LDR W8, [X0 + 0xE0]
	0x031BB254 CBNZ W8, 0x31BB260
	0x031BB258 BL 0x1C16DFC
	0x031BB25C LDR X0, [X20]
	0x031BB260 LDR X9, [X0 + 0xB8]
	0x031BB264 CMP W22, W23
	0x031BB268 B.GE 0x31BB7EC
	0x031BB26C LDR X8, [X9 + 0x10]
	0x031BB270 CBZ X8, 0x31BB840
	0x031BB274 LDR W10, [X8 + 0x18]
	0x031BB278 CMP W22, W10
	0x031BB27C B.CS 0x31BB844
	0x031BB280 LDR X8, [X8, X24, LSL]
	0x031BB284 STR X8, [X9 + 0x38]
	0x031BB288 CBZ X8, 0x31BB5F4
	0x031BB28C LDR W9, [X0 + 0xE0]
	0x031BB290 CBNZ W9, 0x31BB2A8
	0x031BB294 BL 0x1C16DFC
	0x031BB298 LDR X0, [X20]
	0x031BB29C LDR X8, [X0 + 0xB8]
	0x031BB2A0 LDR X8, [X8 + 0x38]
	0x031BB2A4 CBZ X8, 0x31BB840
	0x031BB2A8 LDRB W9, [X8 + 0x68]
	0x031BB2AC CBZ W9, 0x31BB300
	0x031BB2B0 LDR W9, [X0 + 0xE0]
	0x031BB2B4 CBNZ W9, 0x31BB2CC
	0x031BB2B8 BL 0x1C16DFC
	0x031BB2BC LDR X8, [X20]
	0x031BB2C0 LDR X8, [X8 + 0xB8]
	0x031BB2C4 LDR X8, [X8 + 0x38]
	0x031BB2C8 CBZ X8, 0x31BB840
	0x031BB2CC LDR X0, [X21]
	0x031BB2D0 LDP S11, S10, [X8 + 0x6C]
	0x031BB2D4 LDP S9, S8, [X8 + 0x74]
	0x031BB2D8 LDR W9, [X0 + 0xE0]
	0x031BB2DC CBNZ W9, 0x31BB2E4
	0x031BB2E0 BL 0x1C16DFC
	0x031BB2E4 MOV V0.16B, V11.16B
	0x031BB2E8 MOV V1.16B, V10.16B
	0x031BB2EC MOV V2.16B, V9.16B
	0x031BB2F0 MOV V3.16B, V8.16B
	0x031BB2F4 MOV X0, X31
	0x031BB2F8 BL 0x3C6662C
	0x031BB2FC LDR X0, [X20]
	0x031BB300 LDR W8, [X0 + 0xE0]
	0x031BB304 CBNZ W8, 0x31BB310
	0x031BB308 BL 0x1C16DFC
	0x031BB30C LDR X0, [X20]
	0x031BB310 LDR X8, [X0 + 0xB8]
	0x031BB314 LDR X8, [X8 + 0x38]
	0x031BB318 CBZ X8, 0x31BB840
	0x031BB31C LDR W9, [X0 + 0xE0]
	0x031BB320 LDR W19, [X8 + 0x58]
	0x031BB324 CBNZ W9, 0x31BB33C
	0x031BB328 BL 0x1C16DFC
	0x031BB32C LDR X0, [X20]
	0x031BB330 LDR X8, [X0 + 0xB8]
	0x031BB334 LDR X8, [X8 + 0x38]
	0x031BB338 CBZ X8, 0x31BB840

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, X0
	014 Move X0, X31
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move X20, X1
	020 Call GL.PushMatrix
	021 Compare X20, 0
	022 JumpIfEqual {77}
	023 Move X0, X20
	024 Move W1, W31
	025 Move X2, X31
	026 Call Material.SetPass, X0, X1
	027 Move X0, X31
	028 Call GL.LoadPixelMatrix
	029 Move W0, 1
	030 Move X1, X31
	031 Call GL.Begin, X0
	032 Move V0, V11
	033 Move V1, V10
	034 Move V2, V9
	035 Move V3, V8
	036 Move X0, X31
	037 Call GL.Color, X0
	038 Move W8, [X19+20]
	039 Compare W8, 0
	040 JumpIfEqual {78}
	041 Move W8, [X19+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X19+32]
	044 Compare X8, 0
	045 JumpIfEqual {77}
	046 Move W9, [X8+24]
	047 Compare W9, 0
	048 JumpIfEqual {131}
	049 Move S0, [X8+32]
	050 Move S1, [X8+36]
	051 Move V2, [X8+40]
	052 Move X20, X31
	053 Move X21, X31
	054 Move W9, [X8+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X8, X8, X20
	057 Move S8, [X8+32]
	058 Move S9, [X8+36]
	059 Move V10, [X8+40]
	060 Move X0, X31
	061 Call GL.Vertex, X0
	062 Move V0, V8
	063 Move V1, V9
	064 Move V2, V10
	065 Move X0, X31
	066 Call GL.Vertex, X0
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X21, X21, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X19+32]
	071 Add X20, X20, 12
	072 Move V2, V10
	073 Move V1, V9
	074 Move V0, V8
	075 Compare X8, 0
	076 JumpIfNotEqual {54}
	077 Call 0x1C17F20
	078 Move X8, [X19+24]
	079 Compare X8, 0
	080 JumpIfEqual {77}
	081 Move W9, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move S9, [X8+32]
	084 Move S10, [X8+36]
	085 Move V11, [X8+40]
	086 NotImplemented "Instruction SCVTF not yet implemented."
	087 Move S1, 10
	088 Multiply S0, S0, S1
	089 Move S1, 1
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 Move S8, W31
	092 Move X0, X19
	093 Move V0, V8
	094 Call LTSpline.interp, X0, V0
	095 Move V12, V0
	096 Move V13, V1
	097 Move V14, V2
	098 Move V0, V9
	099 Move V1, V10
	100 Move V2, V11
	101 Move X0, X31
	102 Call GL.Vertex, X0
	103 Move V0, V12
	104 Move V1, V13
	105 Move V2, V14
	106 Move X0, X31
	107 Call GL.Vertex, X0
	108 Add S8, S15, S8
	109 Move S0, 1
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move V9, V12
	112 Move V10, V13
	113 Move V11, V14
	114 Move X0, X31
	115 Call GL.End
	116 Move X20, [X31+80]
	117 Move X19, [X31+88]
	118 Move X30, [X31+64]
	119 Move X21, [X31+72]
	120 Move D9, [X31+48]
	121 Move D8, [X31+56]
	122 Move D11, [X31+32]
	123 Move D10, [X31+40]
	124 Move D13, [X31+16]
	125 Move D12, [X31+24]
	126 Move X0, X31
	127 Move D15, [X31+96]
	128 Move D14, [X31+104]
	129 Call GL.PopMatrix
	130 Return 
	131 Call 0x1C17F28

Method: UnityEngine.Vector3[] generateVectors()

Disassembly:
	0x031BB33C CMP W19, 0x1
	0x031BB340 B.NE 0x31BB4C0
	0x031BB344 LDR X8, [X8 + 0x60]
	0x031BB348 CBZ X8, 0x31BB3A4
	0x031BB34C LDR X0, [X21]
	0x031BB350 LDR W8, [X0 + 0xE0]
	0x031BB354 CBNZ W8, 0x31BB35C
	0x031BB358 BL 0x1C16DFC
	0x031BB35C MOV X0, X31
	0x031BB360 BL 0x3C6748C
	0x031BB364 LDR X8, [X20]
	0x031BB368 MOV X19, X0
	0x031BB36C LDR W9, [X8 + 0xE0]
	0x031BB370 CBNZ W9, 0x31BB380
	0x031BB374 MOV X0, X8
	0x031BB378 BL 0x1C16DFC
	0x031BB37C LDR X8, [X20]
	0x031BB380 LDR X8, [X8 + 0xB8]
	0x031BB384 LDR X8, [X8 + 0x38]
	0x031BB388 CBZ X8, 0x31BB840
	0x031BB38C CBZ X19, 0x31BB840
	0x031BB390 LDR X1, [X8 + 0x60]
	0x031BB394 MOV X0, X19
	0x031BB398 MOV X2, X31
	0x031BB39C BL 0x3C71750
	0x031BB3A0 LDR X0, [X20]
	0x031BB3A4 LDR W8, [X0 + 0xE0]
	0x031BB3A8 CBNZ W8, 0x31BB3B4
	0x031BB3AC BL 0x1C16DFC
	0x031BB3B0 LDR X0, [X20]
	0x031BB3B4 LDR X8, [X0 + 0xB8]
	0x031BB3B8 LDR X8, [X8 + 0x38]
	0x031BB3BC CBZ X8, 0x31BB840
	0x031BB3C0 LDR W9, [X0 + 0xE0]
	0x031BB3C4 LDRB W19, [X8 + 0x7D]
	0x031BB3C8 CBNZ W9, 0x31BB3E0
	0x031BB3CC BL 0x1C16DFC
	0x031BB3D0 LDR X8, [X20]
	0x031BB3D4 LDR X8, [X8 + 0xB8]
	0x031BB3D8 LDR X8, [X8 + 0x38]
	0x031BB3DC CBZ X8, 0x31BB840
	0x031BB3E0 MOV X0, X8
	0x031BB3E4 BL 0x31BAA98
	0x031BB3E8 LDR X8, [X20]
	0x031BB3EC LDR X8, [X8 + 0xB8]
	0x031BB3F0 LDR X0, [X8 + 0x38]
	0x031BB3F4 CBZ X0, 0x31BB840
	0x031BB3F8 LDR V13, [X0 + 0x30]
	0x031BB3FC MOV V12.16B, V0.16B
	0x031BB400 CBZ W19, 0x31BB578
	0x031BB404 LDR V8, [X0 + 0x38]
	0x031BB408 LDR V9, [X0 + 0x40]
	0x031BB40C BL 0x31BAA98
	0x031BB410 LDR X8, [X20]
	0x031BB414 LDR X8, [X8 + 0xB8]
	0x031BB418 LDR X0, [X8 + 0x38]
	0x031BB41C CBZ X0, 0x31BB840
	0x031BB420 LDR V0, [X0 + 0x44]
	0x031BB424 STP S9, S8, [X31 + 0x8]
	0x031BB428 LDR V8, [X0 + 0x34]
	0x031BB42C LDR V15, [X0 + 0x3C]
	0x031BB430 MOV V14.16B, V1.16B
	0x031BB434 MOV V9.16B, V13.16B
	0x031BB438 STR S0, [X31 + 0x4]
	0x031BB43C BL 0x31BAA98
	0x031BB440 LDR X8, [X20]
	0x031BB444 LDR X8, [X8 + 0xB8]
	0x031BB448 LDR X0, [X8 + 0x38]
	0x031BB44C CBZ X0, 0x31BB840
	0x031BB450 LDR V13, [X0 + 0x40]
	0x031BB454 MOV V10.16B, V2.16B
	0x031BB458 BL 0x31BAA98
	0x031BB45C LDR X8, [X20]
	0x031BB460 LDR X8, [X8 + 0xB8]
	0x031BB464 LDR X8, [X8 + 0x38]
	0x031BB468 CBZ X8, 0x31BB840
	0x031BB46C LDR X0, [X21]
	0x031BB470 LDR V4, [X8 + 0x44]
	0x031BB474 LDR X19, [X8 + 0x50]
	0x031BB478 MOV V11.16B, V3.16B
	0x031BB47C LDR W9, [X0 + 0xE0]
	0x031BB480 CBNZ W9, 0x31BB490
	0x031BB484 STR S4, [X31]
	0x031BB488 BL 0x1C16DFC
	0x031BB48C LDR V4, [X31]
	0x031BB490 LDR V3, [X31 + 0xC]
	0x031BB494 FADD S0, S12, S9
	0x031BB498 FADD S1, S14, S8
	0x031BB49C FADD S1, S1, S15
	0x031BB4A0 FADD S0, S0, S3
	0x031BB4A4 LDR V3, [X31 + 0x8]
	0x031BB4A8 FMUL S2, S10, S13
	0x031BB4AC FMUL S0, S0, S3
	0x031BB4B0 LDR V3, [X31 + 0x4]
	0x031BB4B4 FMUL S1, S1, S3
	0x031BB4B8 FMUL S3, S11, S4
	0x031BB4BC B 0x31BB5E8
	0x031BB4C0 LDR W9, [X8 + 0x58]
	0x031BB4C4 CBNZ W9, 0x31BB5F4
	0x031BB4C8 LDR W9, [X0 + 0xE0]
	0x031BB4CC CBNZ W9, 0x31BB4E4
	0x031BB4D0 BL 0x1C16DFC
	0x031BB4D4 LDR X8, [X20]
	0x031BB4D8 LDR X8, [X8 + 0xB8]
	0x031BB4DC LDR X8, [X8 + 0x38]
	0x031BB4E0 CBZ X8, 0x31BB840
	0x031BB4E4 LDR X0, [X25]
	0x031BB4E8 LDR X19, [X8 + 0x80]
	0x031BB4EC LDR W9, [X0 + 0xE0]
	0x031BB4F0 CBNZ W9, 0x31BB4F8
	0x031BB4F4 BL 0x1C16DFC
	0x031BB4F8 MOV X0, X19
	0x031BB4FC MOV X1, X31
	0x031BB500 MOV X2, X31
	0x031BB504 BL 0x3C354F8
	0x031BB508 TBZ X0, 0x0, 0x31BB5F4
	0x031BB50C LDR X0, [X20]
	0x031BB510 LDR W8, [X0 + 0xE0]
	0x031BB514 CBNZ W8, 0x31BB520

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1221000
	010 Move W8, [X20+3801]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xF3D000
	017 Move X0, [X0+952]
	018 Call 0x1C17CF4
	019 Move X0, 0xF65000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move X0, 0xF65000
	023 Move X0, [X0+1464]
	024 Call 0x1C17CF4
	025 Move X0, 0xF3D000
	026 Move X0, [X0+960]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3801], W8
	030 Move X8, [X19+24]
	031 Compare X8, 0
	032 JumpIfEqual {131}
	033 Move W8, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, 0xF3D000
	036 Move X8, [X8+960]
	037 Move X0, [X8]
	038 Call 0x1C17F10
	039 Move X8, 0xF65000
	040 Move X8, [X8+1464]
	041 Move X20, X0
	042 Move X1, [X8]
	043 Call List`1<Vector3>..ctor, X0
	044 Move X8, [X19+24]
	045 Compare X8, 0
	046 JumpIfEqual {131}
	047 Move W9, [X8+24]
	048 Compare W9, 0
	049 JumpIfEqual {132}
	050 Compare X20, 0
	051 JumpIfEqual {131}
	052 Move X21, 0xF3D000
	053 Move S0, [X8+32]
	054 Move S1, [X8+36]
	055 Move V2, [X8+40]
	056 Move X21, [X21+952]
	057 Move W10, [X20+28]
	058 Move X8, [X20+16]
	059 Move X9, [X21]
	060 Add W10, W10, 1
	061 Move [X20+28], W10
	062 Compare X8, 0
	063 JumpIfEqual {131}
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Move W11, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W11, 12
	068 Add W9, W10, 1
	069 NotImplemented "Instruction MADD not yet implemented."
	070 Move [X20+24], W9
	071 Move [X8+32], S0
	072 Move [X8+40], S1
	073 Move [X8+40], S2
	074 Move X8, [X9+32]
	075 Move X0, X20
	076 Move X8, [X8+192]
	077 Move X1, [X8+112]
	078 Call List`1<Vector3>.AddWithResize, X0, X1
	079 Move X8, [X19+24]
	080 Compare X8, 0
	081 JumpIfEqual {131}
	082 Move V0, [X8+24]
	083 Move S1, 10
	084 Move S9, 1
	085 Move S8, W31
	086 NotImplemented "Instruction SCVTF not yet implemented."
	087 Multiply S0, S0, S1
	088 NotImplemented "Instruction FDIV not yet implemented."
	089 Move W22, 12
	090 Move X0, X19
	091 Move V0, V8
	092 Call LTSpline.interp, X0, V0
	093 Move W10, [X20+28]
	094 Move X8, [X20+16]
	095 Move X9, [X21]
	096 Add W10, W10, 1
	097 Move [X20+28], W10
	098 Compare X8, 0
	099 JumpIfEqual {131}
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Move W11, [X8+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add W9, W10, 1
	104 NotImplemented "Instruction MADD not yet implemented."
	105 Move [X20+24], W9
	106 Move [X8+32], S0
	107 Move [X8+40], S1
	108 Move [X8+40], S2
	109 Move X8, [X9+32]
	110 Move X0, X20
	111 Move X8, [X8+192]
	112 Move X1, [X8+112]
	113 Call List`1<Vector3>.AddWithResize, X0, X1
	114 Add S8, S10, S8
	115 NotImplemented "Instruction FCMP not yet implemented."
	116 Move X8, 0xF65000
	117 Move X8, [X8+1456]
	118 Move X0, X20
	119 Move X1, [X8]
	120 Call List`1<Vector3>.ToArray, X0
	121 Move X20, [X31+48]
	122 Move X19, [X31+56]
	123 Move X22, [X31+32]
	124 Move X21, [X31+40]
	125 Move X30, [X31+24]
	126 Move D9, [X31+8]
	127 Move D8, [X31+16]
	128 Move X0, X31
	129 Move V10, [X31+64]
	130 Return X0
	131 Call 0x1C17F20
	132 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x031BB518 BL 0x1C16DFC
	0x031BB51C LDR X0, [X20]
	0x031BB520 LDR X8, [X0 + 0xB8]
	0x031BB524 LDR X8, [X8 + 0x38]
	0x031BB528 CBZ X8, 0x31BB840
	0x031BB52C LDR W9, [X0 + 0xE0]
	0x031BB530 LDRB W19, [X8 + 0x7D]
	0x031BB534 CBNZ W9, 0x31BB54C
	0x031BB538 BL 0x1C16DFC
	0x031BB53C LDR X8, [X20]
	0x031BB540 LDR X8, [X8 + 0xB8]
	0x031BB544 LDR X8, [X8 + 0x38]
	0x031BB548 CBZ X8, 0x31BB840
	0x031BB54C MOV X0, X8
	0x031BB550 BL 0x31BAA98
	0x031BB554 LDR X0, [X20]
	0x031BB558 LDR X8, [X0 + 0xB8]
	0x031BB55C LDR X8, [X8 + 0x38]
	0x031BB560 CBZ W19, 0x31BB604
	0x031BB564 CBZ X8, 0x31BB840

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1221000
	005 Move X20, 0xF65000
	006 Move W8, [X19+3802]
	007 Move X20, [X20+1048]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF65000
	013 Move X0, [X0+1048]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3802], W8
	017 Move X8, [X20]
	018 Move X9, -40685568
	019 Move V0, [X9+1112]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], D0
	024 Move X30, [X31+32]
	025 Return 

