Type: LTDescr/EaseTypeDelegate

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x031C0E64 BL 0x1C16CF4
	0x031C0E68 ADRP X0, 0xF5F000
	0x031C0E6C LDR X0, [X0 + 0x7E0]
	0x031C0E70 BL 0x1C16CF4
	0x031C0E74 MOVZ W8, 0x1
	0x031C0E78 STRB W8, [X23 + 0xF61]
	0x031C0E7C MOVZ W8, 0x19
	0x031C0E80 STR W8, [X19 + 0x90]
	0x031C0E84 LDR X0, [X22]
	0x031C0E88 BL 0x1C16F10
	0x031C0E8C LDR X2, [X20]
	0x031C0E90 MOV X1, X19
	0x031C0E94 MOV X20, X0
	0x031C0E98 BL 0x31C0024
	0x031C0E9C STR X20, [X19 + 0xB0]
	0x031C0EA0 LDR X0, [X22]
	0x031C0EA4 BL 0x1C16F10
	0x031C0EA8 LDR X2, [X21]
	0x031C0EAC MOV X1, X19
	0x031C0EB0 MOV X20, X0
	0x031C0EB4 BL 0x31C0024
	0x031C0EB8 STR X20, [X19 + 0xA8]
	0x031C0EBC MOV X0, X19
	0x031C0EC0 LDP X20, X19, [X31 + 0x20]
	0x031C0EC4 LDP X22, X21, [X31 + 0x10]
	0x031C0EC8 LDP X30, X23, [X31], #0x30
	0x031C0ECC RET
	0x031C0ED0 STP X30, X23, [X31 - 0x30]!
	0x031C0ED4 STP X22, X21, [X31 + 0x10]
	0x031C0ED8 STP X20, X19, [X31 + 0x20]
	0x031C0EDC ADRP X23, 0x121B000
	0x031C0EE0 ADRP X22, 0xF5F000
	0x031C0EE4 ADRP X20, 0xF5F000
	0x031C0EE8 ADRP X21, 0xF5F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {24}
	019 Compare W21, 0
	020 JumpIfNotEqual {26}
	021 Move X8, -23121920
	022 Add X8, X8, 3796
	023 Move [X19+24], X8
	024 Compare X20, 0
	025 JumpIfEqual {38}
	026 Move X8, [X19+16]
	027 Move X9, [X19+32]
	028 Move [X19+24], X8
	029 Move [X19+64], X9
	030 Move X8, -23121920
	031 Add X8, X8, 3716
	032 Move [X19+56], X8
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Move X1, -40517632
	039 Add X1, X1, 3811
	040 Move X0, X31
	041 Call 0x1C17F3C
	042 Move X1, X31
	043 Call 0x1C17DEC

Method: UnityEngine.Vector3 Invoke()

Disassembly:
	0x031CD564 B 0x31CD580
	0x031CD568 B 0x31CD580
	0x031CD56C B 0x31CD580
	0x031CD570 B 0x31CD580
	0x031CD574 B 0x31CD580

ISIL:
	001 Move X8, [X0+64]
	002 Move X2, [X0+24]
	003 Move X1, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X2

Method: System.IAsyncResult BeginInvoke(System.AsyncCallback callback, System.Object object)

Disassembly:
	0x031CD578 B 0x31CD580
	0x031CD57C B 0x31CD580
	0x031CD580 MOV X19, X0
	0x031CD584 CMP W1, 0x1
	0x031CD588 B.NE 0x31CD5B4
	0x031CD58C MOV X0, X19
	0x031CD590 BL 0x3EB1AD0
	0x031CD594 LDR X20, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move X3, X2
	003 Move X2, X1
	004 Add X1, X31, 8
	005 Move [X31+8], X31
	006 Call 0x1C17CB0
	007 Move X30, [X31+16]
	008 Return X0

Method: UnityEngine.Vector3 EndInvoke(System.IAsyncResult result)

Disassembly:
	0x031CD598 BL 0x3EB1AE0
	0x031CD59C LDR X1, [X22]
	0x031CD5A0 ADD X0, X31, 0x20
	0x031CD5A4 BL 0x2BC434C
	0x031CD5A8 CBNZ X20, 0x31CD5BC
	0x031CD5AC MOV W19, W31
	0x031CD5B0 B 0x31CD534
	0x031CD5B4 MOV X20, X31
	0x031CD5B8 B 0x31CD5C8
	0x031CD5BC MOV X0, X20
	0x031CD5C0 BL 0x1C16F18

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Call 0x1C17E08
	008 Move S0, [X0]
	009 Move S1, [X0+4]
	010 Move V2, [X0+8]
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

