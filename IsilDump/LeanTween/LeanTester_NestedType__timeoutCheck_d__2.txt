Type: LeanTester/<timeoutCheck>d__2

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x031ABBFC ADRP X0, 0xF48000
	0x031ABC00 LDR X0, [X0 + 0xA58]
	0x031ABC04 BL 0x1C16CF4
	0x031ABC08 ADRP X0, 0xF49000
	0x031ABC0C LDR X0, [X0 + 0xE58]
	0x031ABC10 BL 0x1C16CF4
	0x031ABC14 ADRP X0, 0xF74000
	0x031ABC18 LDR X0, [X0 + 0x360]
	0x031ABC1C BL 0x1C16CF4
	0x031ABC20 ADRP X0, 0xF74000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x031ABC34 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x031ABC38 ADRP X0, 0xF74000
	0x031ABC3C LDR X0, [X0 + 0x378]
	0x031ABC40 BL 0x1C16CF4
	0x031ABC44 ADRP X0, 0xF74000
	0x031ABC48 LDR X0, [X0 + 0x380]
	0x031ABC4C BL 0x1C16CF4
	0x031ABC50 ADRP X0, 0xF74000
	0x031ABC54 LDR X0, [X0 + 0x388]
	0x031ABC58 BL 0x1C16CF4
	0x031ABC5C ADRP X0, 0xF4A000
	0x031ABC60 LDR X0, [X0 + 0x5A8]
	0x031ABC64 BL 0x1C16CF4
	0x031ABC68 ADRP X0, 0xF48000
	0x031ABC6C LDR X0, [X0 + 0x598]
	0x031ABC70 BL 0x1C16CF4
	0x031ABC74 ADRP X0, 0xF48000
	0x031ABC78 LDR X0, [X0 + 0xC90]
	0x031ABC7C BL 0x1C16CF4
	0x031ABC80 ADRP X0, 0xF48000
	0x031ABC84 LDR X0, [X0 + 0x6C0]
	0x031ABC88 BL 0x1C16CF4
	0x031ABC8C ADRP X0, 0xF74000
	0x031ABC90 LDR X0, [X0 + 0x390]
	0x031ABC94 BL 0x1C16CF4
	0x031ABC98 ADRP X0, 0xF74000
	0x031ABC9C LDR X0, [X0 + 0x398]
	0x031ABCA0 BL 0x1C16CF4
	0x031ABCA4 MOVZ W8, 0x1
	0x031ABCA8 STRB W8, [X21 + 0xE4D]
	0x031ABCAC LDR X0, [X22]
	0x031ABCB0 LDR W8, [X0 + 0xE0]
	0x031ABCB4 CBNZ W8, 0x31ABCC0
	0x031ABCB8 BL 0x1C16DFC
	0x031ABCBC LDR X0, [X22]
	0x031ABCC0 LDR X8, [X0 + 0xB8]
	0x031ABCC4 LDR X9, [X8 + 0x18]
	0x031ABCC8 CBZ X9, 0x31ABCE0
	0x031ABCCC LDP X20, X19, [X31 + 0x30]
	0x031ABCD0 LDP X22, X21, [X31 + 0x20]
	0x031ABCD4 LDP X24, X23, [X31 + 0x10]
	0x031ABCD8 LDR X30, [X31], #0x40
	0x031ABCDC RET
	0x031ABCE0 LDR W9, [X0 + 0xE0]
	0x031ABCE4 CBNZ W9, 0x31ABCF4
	0x031ABCE8 BL 0x1C16DFC
	0x031ABCEC LDR X8, [X22]
	0x031ABCF0 LDR X8, [X8 + 0xB8]
	0x031ABCF4 STR W20, [X8 + 0x3C]
	0x031ABCF8 ADRP X8, 0xF74000
	0x031ABCFC LDR X8, [X8 + 0x360]
	0x031ABD00 MOV W1, W20
	0x031ABD04 LDR X0, [X8]
	0x031ABD08 BL 0x1C16D6C
	0x031ABD0C LDR X8, [X22]
	0x031ABD10 ADRP X20, 0xF49000
	0x031ABD14 LDR X8, [X8 + 0xB8]
	0x031ABD18 STR X0, [X8 + 0x18]
	0x031ABD1C LDR W1, [X8 + 0x3C]
	0x031ABD20 LDR X20, [X20 + 0xE58]
	0x031ABD24 LDR X0, [X20]
	0x031ABD28 BL 0x1C16D6C
	0x031ABD2C LDR X8, [X22]
	0x031ABD30 LDR X8, [X8 + 0xB8]
	0x031ABD34 STR X0, [X8 + 0x20]
	0x031ABD38 LDR W1, [X8 + 0x3C]
	0x031ABD3C LDR X0, [X20]
	0x031ABD40 BL 0x1C16D6C
	0x031ABD44 LDR X8, [X22]
	0x031ABD48 LDR X8, [X8 + 0xB8]
	0x031ABD4C STR X0, [X8 + 0x28]
	0x031ABD50 ADRP X8, 0xF48000
	0x031ABD54 LDR X8, [X8 + 0xA58]
	0x031ABD58 LDR X0, [X8]
	0x031ABD5C BL 0x1C16F10
	0x031ABD60 MOV X1, X31
	0x031ABD64 MOV X20, X0
	0x031ABD68 BL 0x3C35A08
	0x031ABD6C LDR X8, [X22]
	0x031ABD70 LDR X8, [X8 + 0xB8]
	0x031ABD74 STR X20, [X8 + 0x48]
	0x031ABD78 CBZ X20, 0x31ABFF8
	0x031ABD7C ADRP X8, 0xF74000
	0x031ABD80 LDR X8, [X8 + 0x398]
	0x031ABD84 MOV X0, X20
	0x031ABD88 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1231000
	005 Move W8, [X20+3646]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xF49000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0xF49000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move X0, 0xF75000
	018 Move X0, [X0+688]
	019 Call 0x1C17CF4
	020 Move X0, 0xF75000
	021 Move X0, [X0+696]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3646], W8
	025 Move W8, [X19+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare W8, 0
	028 JumpIfNotEqual {91}
	029 Move X20, [X19+32]
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W8, TEMP
	033 Move X0, X31
	034 Move [X19+16], W8
	035 Call Time.get_realtimeSinceStartup
	036 Compare X20, 0
	037 JumpIfEqual {96}
	038 Move V1, [X20+32]
	039 Add S0, S0, S1
	040 Move [X19+40], S0
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W8, TEMP
	044 Move [X19+16], W8
	045 Move X0, X31
	046 Call Time.get_realtimeSinceStartup
	047 Move V1, [X19+40]
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 Move X8, 0xF49000
	050 Move X8, [X8+1880]
	051 Add X1, X31, 12
	052 Move [X31+12], W31
	053 Move X0, [X8]
	054 Call 0x1C17E04
	055 Move [X19+24], X0
	056 Move W0, 1
	057 Move [X19+16], W0
	058 Move X19, 0xF75000
	059 Move X19, [X19+688]
	060 Move X0, [X19]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X19]
	066 Move X8, [X0+184]
	067 Move W8, [X8+17]
	068 Compare W8, 0
	069 JumpIfNotEqual {91}
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X8, 0xF75000
	075 Move X8, [X8+696]
	076 Move X0, [X8]
	077 Call LeanTest.formatB, X0
	078 Move X8, 0xF49000
	079 Move X8, [X8+2600]
	080 Move X19, X0
	081 Move X8, [X8]
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Move X1, X31
	089 Call Debug.Log, X0
	090 Call LeanTest.overview
	091 Move W0, W31
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X30, [X31+32]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x031AC06C LDR W8, [X0 + 0xE0]
	0x031AC070 CBNZ W8, 0x31AC07C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x031AC074 BL 0x1C16DFC
	0x031AC078 LDR X0, [X19]
	0x031AC07C LDR X8, [X0 + 0xB8]
	0x031AC080 LDR W8, [X8 + 0x38]
	0x031AC084 CMP W20, W8
	0x031AC088 B.GT 0x31AC104
	0x031AC08C LDR W8, [X0 + 0xE0]
	0x031AC090 CBNZ W8, 0x31AC09C
	0x031AC094 BL 0x1C16DFC
	0x031AC098 LDR X0, [X19]
	0x031AC09C LDR X8, [X0 + 0xB8]
	0x031AC0A0 LDR X8, [X8 + 0x18]
	0x031AC0A4 CBZ X8, 0x31AC14C
	0x031AC0A8 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xF48000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xF74000
	011 Move X0, [X0+760]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x031AC0AC CMP W20, W9
	0x031AC0B0 B.CS 0x31AC150

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

