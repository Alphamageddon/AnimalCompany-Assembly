Type: LTDescr/<>c

Method: System.Void .cctor()

Disassembly:
	0x031CD604 ADRP X20, 0xF52000
	0x031CD608 ADRP X22, 0xF2C000
	0x031CD60C ADRP X21, 0xF2C000
	0x031CD610 LDRB W8, [X23 + 0x7]
	0x031CD614 LDR X24, [X24 + 0xBE0]
	0x031CD618 LDR X20, [X20 + 0xBE8]
	0x031CD61C LDR X22, [X22 + 0xB28]
	0x031CD620 LDR X21, [X21 + 0xB30]
	0x031CD624 MOV X19, X0
	0x031CD628 TBNZ X8, 0x0, 0x31CD664
	0x031CD62C ADRP X0, 0xF2C000
	0x031CD630 LDR X0, [X0 + 0xB30]
	0x031CD634 BL 0x1C16CF4
	0x031CD638 ADRP X0, 0xF52000
	0x031CD63C LDR X0, [X0 + 0xBE8]
	0x031CD640 BL 0x1C16CF4
	0x031CD644 ADRP X0, 0xF2C000
	0x031CD648 LDR X0, [X0 + 0xB28]
	0x031CD64C BL 0x1C16CF4
	0x031CD650 ADRP X0, 0xF52000
	0x031CD654 LDR X0, [X0 + 0xBE0]
	0x031CD658 BL 0x1C16CF4
	0x031CD65C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x120F000
	005 Move X20, 0xF53000
	006 Move W8, [X19+4089]
	007 Move X20, [X20+2256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF53000
	013 Move X0, [X0+2256]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4089], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x031CD660 STRB W8, [X23 + 0x7]
	0x031CD664 LDR X0, [X24]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <setCallback>b__113_0()

Disassembly:
	0x031CD668 BL 0x1C16F10

ISIL:
	001 Return 

Method: System.Void <setValue3>b__114_0()

Disassembly:
	0x031CD66C LDR X1, [X20]

ISIL:
	001 Return 

