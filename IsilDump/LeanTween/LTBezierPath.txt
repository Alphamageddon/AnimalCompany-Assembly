Type: LTBezierPath

Method: System.Void .ctor()

Disassembly:
	0x031B9978 MOV X1, X31
	0x031B997C MOV V8.16B, V0.16B

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(UnityEngine.Vector3[] pts_)

Disassembly:
	0x031B19E0 LDR W9, [X0 + 0xE0]
	0x031B19E4 LDR X8, [X8 + 0xB8]
	0x031B19E8 LDP S11, S10, [X8]
	0x031B19EC LDR V9, [X8 + 0x8]
	0x031B19F0 CBNZ W9, 0x31B19F8
	0x031B19F4 BL 0x1C16DFC
	0x031B19F8 BL 0x31AF454
	0x031B19FC CBZ X0, 0x31B1A48
	0x031B1A00 MOV X1, X20
	0x031B1A04 MOV X2, X31
	0x031B1A08 BL 0x31C7D64

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X20
	009 Move X1, X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]

Method: System.Void setPoints(UnityEngine.Vector3[] pts_)

Disassembly:
	0x031B1A0C CBZ X0, 0x31B1A48
	0x031B1A10 MOV X1, X31
	0x031B1A14 BL 0x31C1DA0
	0x031B1A18 MOV X1, X0
	0x031B1A1C MOV X0, X19
	0x031B1A20 MOV V2.16B, V9.16B
	0x031B1A24 MOV V3.16B, V8.16B
	0x031B1A28 LDP X20, X19, [X31 + 0x40]
	0x031B1A2C LDP X22, X21, [X31 + 0x30]
	0x031B1A30 LDR X30, [X31 + 0x20]
	0x031B1A34 LDP D9, D8, [X31 + 0x10]
	0x031B1A38 MOV V0.16B, V11.16B
	0x031B1A3C MOV V1.16B, V10.16B
	0x031B1A40 LDP D11, D10, [X31], #0x50
	0x031B1A44 B 0x31AF81C
	0x031B1A48 BL 0x1C16F20
	0x031B1A4C STP D11, D10, [X31 - 0x40]!
	0x031B1A50 STP D9, D8, [X31 + 0x10]
	0x031B1A54 STP X30, X21, [X31 + 0x20]
	0x031B1A58 STP X20, X19, [X31 + 0x30]
	0x031B1A5C ADRP X20, 0x122A000
	0x031B1A60 ADRP X21, 0xF44000
	0x031B1A64 LDRB W8, [X20 + 0xE9B]
	0x031B1A68 LDR X21, [X21 + 0x5A8]
	0x031B1A6C MOV V8.16B, V3.16B
	0x031B1A70 MOV V9.16B, V2.16B
	0x031B1A74 MOV V10.16B, V1.16B
	0x031B1A78 MOV V11.16B, V0.16B
	0x031B1A7C MOV X19, X0
	0x031B1A80 TBNZ X8, 0x0, 0x31B1A98
	0x031B1A84 ADRP X0, 0xF44000
	0x031B1A88 LDR X0, [X0 + 0x5A8]
	0x031B1A8C BL 0x1C16CF4
	0x031B1A90 MOVZ W8, 0x1
	0x031B1A94 STRB W8, [X20 + 0xE9B]
	0x031B1A98 LDR X0, [X21]
	0x031B1A9C LDR W8, [X0 + 0xE0]
	0x031B1AA0 CBNZ W8, 0x31B1AA8
	0x031B1AA4 BL 0x1C16DFC
	0x031B1AA8 BL 0x31AF454
	0x031B1AAC CBZ X0, 0x31B1AE4
	0x031B1AB0 MOV X1, X31
	0x031B1AB4 BL 0x31C1E54
	0x031B1AB8 MOV X1, X0
	0x031B1ABC MOV X0, X19
	0x031B1AC0 MOV V2.16B, V9.16B
	0x031B1AC4 MOV V3.16B, V8.16B
	0x031B1AC8 LDP X20, X19, [X31 + 0x30]
	0x031B1ACC LDP X30, X21, [X31 + 0x20]
	0x031B1AD0 LDP D9, D8, [X31 + 0x10]
	0x031B1AD4 MOV V0.16B, V11.16B
	0x031B1AD8 MOV V1.16B, V10.16B
	0x031B1ADC LDP D11, D10, [X31], #0x40
	0x031B1AE0 B 0x31AF81C
	0x031B1AE4 BL 0x1C16F20
	0x031B1AE8 STP D9, D8, [X31 - 0x30]!
	0x031B1AEC STP X30, X21, [X31 + 0x10]
	0x031B1AF0 STP X20, X19, [X31 + 0x20]
	0x031B1AF4 ADRP X20, 0x122A000
	0x031B1AF8 ADRP X21, 0xF44000
	0x031B1AFC LDRB W8, [X20 + 0xE9C]
	0x031B1B00 LDR X21, [X21 + 0x5A8]
	0x031B1B04 MOV V8.16B, V1.16B
	0x031B1B08 MOV V9.16B, V0.16B
	0x031B1B0C MOV X19, X0
	0x031B1B10 TBNZ X8, 0x0, 0x31B1B28
	0x031B1B14 ADRP X0, 0xF44000
	0x031B1B18 LDR X0, [X0 + 0x5A8]
	0x031B1B1C BL 0x1C16CF4
	0x031B1B20 MOVZ W8, 0x1
	0x031B1B24 STRB W8, [X20 + 0xE9C]
	0x031B1B28 LDR X0, [X21]
	0x031B1B2C LDR W8, [X0 + 0xE0]
	0x031B1B30 CBNZ W8, 0x31B1B38
	0x031B1B34 BL 0x1C16DFC
	0x031B1B38 BL 0x31AF7B4
	0x031B1B3C MOV X20, X0
	0x031B1B40 BL 0x31AF454
	0x031B1B44 CBZ X0, 0x31B1B88
	0x031B1B48 MOV X1, X31
	0x031B1B4C BL 0x31C2340
	0x031B1B50 CBZ X0, 0x31B1B88
	0x031B1B54 MOV X1, X19
	0x031B1B58 MOV X2, X31
	0x031B1B5C BL 0x31C8398
	0x031B1B60 MOV X1, X0
	0x031B1B64 MOV X0, X20
	0x031B1B68 LDP X20, X19, [X31 + 0x20]
	0x031B1B6C LDP X30, X21, [X31 + 0x10]
	0x031B1B70 FMOV S1, W31
	0x031B1B74 FMOV S2, W31
	0x031B1B78 MOV V0.16B, V9.16B
	0x031B1B7C MOV V3.16B, V8.16B
	0x031B1B80 LDP D9, D8, [X31], #0x30
	0x031B1B84 B 0x31AF81C
	0x031B1B88 BL 0x1C16F20
	0x031B1B8C STP D11, D10, [X31 - 0x40]!
	0x031B1B90 STP D9, D8, [X31 + 0x10]
	0x031B1B94 STP X30, X21, [X31 + 0x20]
	0x031B1B98 STP X20, X19, [X31 + 0x30]
	0x031B1B9C ADRP X20, 0x122A000
	0x031B1BA0 ADRP X21, 0xF44000
	0x031B1BA4 LDRB W8, [X20 + 0xE9D]
	0x031B1BA8 LDR X21, [X21 + 0x5A8]
	0x031B1BAC MOV V8.16B, V3.16B
	0x031B1BB0 MOV V9.16B, V2.16B
	0x031B1BB4 MOV V10.16B, V1.16B
	0x031B1BB8 MOV V11.16B, V0.16B
	0x031B1BBC MOV X19, X0
	0x031B1BC0 TBNZ X8, 0x0, 0x31B1BD8
	0x031B1BC4 ADRP X0, 0xF44000
	0x031B1BC8 LDR X0, [X0 + 0x5A8]
	0x031B1BCC BL 0x1C16CF4
	0x031B1BD0 MOVZ W8, 0x1
	0x031B1BD4 STRB W8, [X20 + 0xE9D]
	0x031B1BD8 LDR X0, [X21]
	0x031B1BDC LDR W8, [X0 + 0xE0]
	0x031B1BE0 CBNZ W8, 0x31B1BE8
	0x031B1BE4 BL 0x1C16DFC
	0x031B1BE8 BL 0x31AF454
	0x031B1BEC CBZ X0, 0x31B1C24
	0x031B1BF0 MOV X1, X31
	0x031B1BF4 BL 0x31C1F08
	0x031B1BF8 MOV X1, X0
	0x031B1BFC MOV X0, X19
	0x031B1C00 MOV V2.16B, V9.16B
	0x031B1C04 MOV V3.16B, V8.16B
	0x031B1C08 LDP X20, X19, [X31 + 0x30]
	0x031B1C0C LDP X30, X21, [X31 + 0x20]
	0x031B1C10 LDP D9, D8, [X31 + 0x10]
	0x031B1C14 MOV V0.16B, V11.16B
	0x031B1C18 MOV V1.16B, V10.16B
	0x031B1C1C LDP D11, D10, [X31], #0x40
	0x031B1C20 B 0x31AF81C
	0x031B1C24 BL 0x1C16F20
	0x031B1C28 STP D9, D8, [X31 - 0x30]!
	0x031B1C2C STP X30, X21, [X31 + 0x10]
	0x031B1C30 STP X20, X19, [X31 + 0x20]
	0x031B1C34 ADRP X20, 0x122A000
	0x031B1C38 ADRP X21, 0xF44000
	0x031B1C3C LDRB W8, [X20 + 0xE9E]
	0x031B1C40 LDR X21, [X21 + 0x5A8]
	0x031B1C44 MOV V8.16B, V1.16B
	0x031B1C48 MOV V9.16B, V0.16B
	0x031B1C4C MOV X19, X0
	0x031B1C50 TBNZ X8, 0x0, 0x31B1C68
	0x031B1C54 ADRP X0, 0xF44000
	0x031B1C58 LDR X0, [X0 + 0x5A8]
	0x031B1C5C BL 0x1C16CF4
	0x031B1C60 MOVZ W8, 0x1
	0x031B1C64 STRB W8, [X20 + 0xE9E]
	0x031B1C68 LDR X0, [X21]
	0x031B1C6C LDR W8, [X0 + 0xE0]
	0x031B1C70 CBNZ W8, 0x31B1C78
	0x031B1C74 BL 0x1C16DFC
	0x031B1C78 BL 0x31AF454
	0x031B1C7C CBZ X0, 0x31B1CB0
	0x031B1C80 MOV X1, X31
	0x031B1C84 BL 0x31C0930
	0x031B1C88 MOV X1, X0
	0x031B1C8C MOV X0, X19
	0x031B1C90 LDP X20, X19, [X31 + 0x20]
	0x031B1C94 LDP X30, X21, [X31 + 0x10]
	0x031B1C98 FMOV S1, W31
	0x031B1C9C FMOV S2, W31
	0x031B1CA0 MOV V0.16B, V9.16B
	0x031B1CA4 MOV V3.16B, V8.16B
	0x031B1CA8 LDP D9, D8, [X31], #0x30
	0x031B1CAC B 0x31AF81C
	0x031B1CB0 BL 0x1C16F20
	0x031B1CB4 STP D9, D8, [X31 - 0x30]!
	0x031B1CB8 STP X30, X21, [X31 + 0x10]
	0x031B1CBC STP X20, X19, [X31 + 0x20]
	0x031B1CC0 ADRP X20, 0x122A000
	0x031B1CC4 ADRP X21, 0xF44000
	0x031B1CC8 LDRB W8, [X20 + 0xE9F]
	0x031B1CCC LDR X21, [X21 + 0x5A8]
	0x031B1CD0 MOV V8.16B, V1.16B
	0x031B1CD4 MOV V9.16B, V0.16B
	0x031B1CD8 MOV X19, X0
	0x031B1CDC TBNZ X8, 0x0, 0x31B1CF4
	0x031B1CE0 ADRP X0, 0xF44000
	0x031B1CE4 LDR X0, [X0 + 0x5A8]
	0x031B1CE8 BL 0x1C16CF4
	0x031B1CEC MOVZ W8, 0x1
	0x031B1CF0 STRB W8, [X20 + 0xE9F]
	0x031B1CF4 LDR X0, [X21]
	0x031B1CF8 LDR W8, [X0 + 0xE0]
	0x031B1CFC CBNZ W8, 0x31B1D04
	0x031B1D00 BL 0x1C16DFC
	0x031B1D04 BL 0x31AF454
	0x031B1D08 CBZ X0, 0x31B1D3C
	0x031B1D0C MOV X1, X31
	0x031B1D10 BL 0x31C09E4
	0x031B1D14 MOV X1, X0
	0x031B1D18 MOV X0, X19
	0x031B1D1C LDP X20, X19, [X31 + 0x20]
	0x031B1D20 LDP X30, X21, [X31 + 0x10]
	0x031B1D24 FMOV S1, W31
	0x031B1D28 FMOV S2, W31
	0x031B1D2C MOV V0.16B, V9.16B
	0x031B1D30 MOV V3.16B, V8.16B
	0x031B1D34 LDP D9, D8, [X31], #0x30
	0x031B1D38 B 0x31AF81C
	0x031B1D3C BL 0x1C16F20
	0x031B1D40 STP D9, D8, [X31 - 0x30]!
	0x031B1D44 STP X30, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+128], X28
	012 Move [X31+136], X27
	013 Move [X31+144], X26
	014 Move [X31+152], X25
	015 Move [X31+160], X24
	016 Move [X31+168], X23
	017 Move [X31+176], X22
	018 Move [X31+184], X21
	019 Move [X31+192], X20
	020 Move [X31+200], X19
	021 Move X21, 0x122B000
	022 Move W8, [X21+3797]
	023 Move X20, X1
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0xF6F000
	030 Move X0, [X0+1016]
	031 Call 0x1C17CF4
	032 Move X0, 0xF6F000
	033 Move X0, [X0+1024]
	034 Call 0x1C17CF4
	035 Move X0, 0xF45000
	036 Move X0, [X0+1448]
	037 Call 0x1C17CF4
	038 Move X0, 0xF43000
	039 Move X0, [X0+1592]
	040 Call 0x1C17CF4
	041 Move X0, 0xF6F000
	042 Move X0, [X0+1032]
	043 Call 0x1C17CF4
	044 Move X0, 0xF6F000
	045 Move X0, [X0+1040]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+3797], W8
	049 Compare X20, 0
	050 JumpIfEqual {184}
	051 Move X8, [X20+24]
	052 Move X21, 0xF45000
	053 Move X21, [X21+1448]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X8, 0xF6F000
	061 Move X8, [X8+1040]
	062 Move X0, [X8]
	063 Call LeanTween.logError, X0
	064 Move X8, [X20+24]
	065 Move X22, 0xF6F000
	066 Move X22, [X22+1016]
	067 And X31, X8, 3
	068 Move X0, [X21]
	069 Move X21, 0xF6F000
	070 Move W8, [X0+224]
	071 Move X21, [X21+1032]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, [X21]
	076 Call LeanTween.logError, X0
	077 Move X8, [X20+24]
	078 Move [X19+16], X20
	079 Move X0, [X22]
	080 Add W9, W8, 3
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 NotImplemented "Instruction SBFM not yet implemented."
	084 Call 0x1C17D6C
	085 Move [X19+32], X0
	086 Compare X0, 0
	087 JumpIfEqual {184}
	088 Move X8, 0xF43000
	089 Move X8, [X8+1592]
	090 Move W1, [X0+24]
	091 Move X8, [X8]
	092 Move X0, X8
	093 Call 0x1C17D6C
	094 Move X8, [X19+16]
	095 Move [X19+40], X0
	096 Move [X19+24], W31
	097 Compare X8, 0
	098 JumpIfEqual {184}
	099 Move X23, 0xF6F000
	100 Move X21, [X19+32]
	101 Move X23, [X23+1024]
	102 Move W25, 0xCCCD
	103 Move W22, W31
	104 Move W9, W31
	105 Move W24, 12
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 Move W11, [X8+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W10, W9, 2
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X10, W10
	113 Add W26, W10, 1
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X11, W9
	116 NotImplemented "Instruction MADD not yet implemented."
	117 Move S8, [X11+32]
	118 Move S9, [X11+36]
	119 Move V10, [X11+40]
	120 Add W11, W9, 1
	121 Add W9, W9, 3
	122 Add X8, X8, 32
	123 Move X11, W11
	124 Move X9, W9
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Move S12, [X10+4]
	127 Move S11, [X10+8]
	128 Move V13, [X10]
	129 NotImplemented "Instruction NOP not yet implemented."
	130 NotImplemented "Instruction MADD not yet implemented."
	131 NotImplemented "Instruction MADD not yet implemented."
	132 Move X0, [X23]
	133 Move V14, [X10+8]
	134 Move X27, [X10]
	135 Move X28, [X8]
	136 Move V15, [X8+8]
	137 Call 0x1C17F10
	138 Move V0, V8
	139 Move V1, V9
	140 Move V2, V10
	141 Move V3, V13
	142 Move V4, V12
	143 Move V5, V11
	144 Move X20, X0
	145 Move [X31+32], W25
	146 Move [X31+24], S15
	147 Move [X31+16], X28
	148 Move [X31+8], S14
	149 Move [X31], X27
	150 Call LTBezier..ctor, X0, X1, X2, X3, X4, V0
	151 Compare X21, 0
	152 JumpIfEqual {184}
	153 Compare X20, 0
	154 JumpIfEqual {161}
	155 Move X8, [X21]
	156 Move X0, X20
	157 Move X1, [X8+64]
	158 Call 0x1C17E00
	159 Compare X0, 0
	160 JumpIfEqual {230}
	161 Move W8, [X21+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X8, W22
	164 Add X9, X21, X8
	165 Move [X9+32], X20
	166 Move X21, [X19+32]
	167 Compare X21, 0
	168 JumpIfEqual {184}
	169 Move W9, [X21+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X8, X21, X8
	172 Move X8, [X8+32]
	173 Compare X8, 0
	174 JumpIfEqual {184}
	175 Move V0, [X19+24]
	176 Move V1, [X8+16]
	177 Move X8, [X19+16]
	178 Add W22, W22, 1
	179 Add W9, W26, 1
	180 Add S0, S0, S1
	181 Move [X19+24], S0
	182 Compare X8, 0
	183 JumpIfNotEqual {107}
	184 Call 0x1C17F20
	185 Compare X21, 0
	186 JumpIfEqual {184}
	187 Move W8, [X21+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X9, [X19+40]
	190 Move W10, W31
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X10, W10
	193 Add X11, X21, X10
	194 Move X11, [X11+32]
	195 Compare X11, 0
	196 JumpIfEqual {184}
	197 Compare X9, 0
	198 JumpIfEqual {184}
	199 Move W12, [X9+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move V0, [X11+16]
	202 Move V1, [X19+24]
	203 Add X11, X9, X10
	204 Add W10, W10, 1
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction FDIV not yet implemented."
	207 Move [X11+32], S0
	208 Move X20, [X31+192]
	209 Move X19, [X31+200]
	210 Move X22, [X31+176]
	211 Move X21, [X31+184]
	212 Move X24, [X31+160]
	213 Move X23, [X31+168]
	214 Move X26, [X31+144]
	215 Move X25, [X31+152]
	216 Move X28, [X31+128]
	217 Move X27, [X31+136]
	218 Move X30, [X31+112]
	219 Move D9, [X31+96]
	220 Move D8, [X31+104]
	221 Move D11, [X31+80]
	222 Move D10, [X31+88]
	223 Move D13, [X31+64]
	224 Move D12, [X31+72]
	225 Move D15, [X31+48]
	226 Move D14, [X31+56]
	227 Add X31, X31, 208
	228 Return 
	229 Call 0x1C17F28
	230 Call 0x1C17F44
	231 Move X1, X31
	232 Call 0x1C17DEC

Method: System.Single get_distance()

Disassembly:
	0x031B9980 MOV V9.16B, V1.16B
	0x031B9984 BL 0x3C3F58C

ISIL:
	001 Move V0, [X0+24]
	002 Return V0

Method: UnityEngine.Vector3 point(System.Single ratio)

Disassembly:
	0x031B9988 FSUB S2, S8, S0
	0x031B998C FSUB S0, S9, S1
	0x031B9990 MOV V1.16B, V2.16B
	0x031B9994 BL 0x3EB1C40
	0x031B9998 ADRP X8, 0xFFFFFFFFFD931000
	0x031B999C LDR V2, [X8 + 0x448]
	0x031B99A0 MOV X0, X19
	0x031B99A4 LDP X20, X19, [X31 + 0x20]
	0x031B99A8 LDR X30, [X31 + 0x10]
	0x031B99AC MOV V1.16B, V0.16B
	0x031B99B0 FMOV S0, W31
	0x031B99B4 FMUL S2, S1, S2
	0x031B99B8 FMOV S1, W31
	0x031B99BC MOV X1, X31
	0x031B99C0 LDP D9, D8, [X31], #0x30
	0x031B99C4 B 0x3C3F77C
	0x031B99C8 BL 0x1C16F20
	0x031B99CC STP D9, D8, [X31 - 0x30]!
	0x031B99D0 STP X30, X21, [X31 + 0x10]
	0x031B99D4 STP X20, X19, [X31 + 0x20]
	0x031B99D8 ADRP X21, 0x1222000
	0x031B99DC LDRB W8, [X21 + 0xED7]
	0x031B99E0 MOV V8.16B, V0.16B
	0x031B99E4 MOV X19, X1
	0x031B99E8 MOV X20, X0
	0x031B99EC TBNZ X8, 0x0, 0x31B9A04
	0x031B99F0 ADRP X0, 0xF3A000
	0x031B99F4 LDR X0, [X0 + 0x598]
	0x031B99F8 BL 0x1C16CF4
	0x031B99FC MOVZ W8, 0x1
	0x031B9A00 STRB W8, [X21 + 0xED7]
	0x031B9A04 CBZ X19, 0x31B9B00
	0x031B9A08 ADRP X21, 0xF3A000
	0x031B9A0C LDR X21, [X21 + 0x598]
	0x031B9A10 MOV X0, X19
	0x031B9A14 MOV X1, X31
	0x031B9A18 BL 0x3C3F49C
	0x031B9A1C LDR X8, [X21]
	0x031B9A20 MOV X21, X0
	0x031B9A24 LDR W9, [X8 + 0xE0]
	0x031B9A28 CBNZ W9, 0x31B9A34
	0x031B9A2C MOV X0, X8
	0x031B9A30 BL 0x1C16DFC
	0x031B9A34 MOV X0, X21
	0x031B9A38 MOV X1, X31
	0x031B9A3C MOV X2, X31
	0x031B9A40 BL 0x3C3883C
	0x031B9A44 TBZ X0, 0x0, 0x31B9A64
	0x031B9A48 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X11, [X0+40]
	004 Compare X11, 0
	005 JumpIfEqual {52}
	006 Move W8, [X11+24]
	007 Move X9, X8
	008 ShiftRight X9, 32
	009 And X9, X9, 0x7FFFFFFF
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X9, X31
	012 Move X10, W8
	013 Add X11, X11, 32
	014 Move S1, W31
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move V2, [X11]
	017 Add S1, S1, S2
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Add X9, X9, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X9, [X0+32]
	022 Compare X9, 0
	023 JumpIfEqual {52}
	024 Move W10, [X9+24]
	025 Subtract W8, W8, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X8, X9, W8
	028 Move X19, [X8+32]
	029 Compare X19, 0
	030 JumpIfEqual {52}
	031 Move S0, 1
	032 Move X8, [X0+32]
	033 Compare X8, 0
	034 JumpIfEqual {52}
	035 Move W10, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X8, X9
	038 Move X19, [X8+32]
	039 Compare X19, 0
	040 JumpIfEqual {52}
	041 Subtract S1, S1, S2
	042 Subtract S0, S0, S1
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 Move X0, X19
	045 Call LTBezier.map, X0, V0
	046 Move X0, X19
	047 Move X30, [X31+16]
	048 Move X19, [X31+24]
	049 Call LTBezier.bezierPoint, X0, V0
	050 Return X0
	051 Call 0x1C17F28
	052 Call 0x1C17F20

Method: System.Void place2d(UnityEngine.Transform transform, System.Single ratio)

Disassembly:
	0x031B9A4C MOV X1, X19
	0x031B9A50 LDP X20, X19, [X31 + 0x20]
	0x031B9A54 LDP X30, X21, [X31 + 0x10]
	0x031B9A58 MOV V0.16B, V8.16B
	0x031B9A5C LDP D9, D8, [X31], #0x30
	0x031B9A60 B 0x31B9918
	0x031B9A64 MOV X0, X20
	0x031B9A68 MOV V0.16B, V8.16B
	0x031B9A6C BL 0x31B9900
	0x031B9A70 MOV X0, X19
	0x031B9A74 MOV X1, X31
	0x031B9A78 BL 0x3C3EC04
	0x031B9A7C ADRP X8, 0xFFFFFFFFFD931000
	0x031B9A80 LDR V0, [X8 + 0x410]
	0x031B9A84 FMOV S1, 1
	0x031B9A88 FADD S0, S8, S0
	0x031B9A8C FCMP S0, S1
	0x031B9A90 B.LS 0x31B9AA4
	0x031B9A94 LDP X20, X19, [X31 + 0x20]
	0x031B9A98 LDP X30, X21, [X31 + 0x10]
	0x031B9A9C LDP D9, D8, [X31], #0x30
	0x031B9AA0 RET
	0x031B9AA4 MOV X0, X20
	0x031B9AA8 BL 0x31B9900
	0x031B9AAC MOV X0, X19
	0x031B9AB0 MOV X1, X31
	0x031B9AB4 MOV V8.16B, V0.16B
	0x031B9AB8 MOV V9.16B, V1.16B
	0x031B9ABC BL 0x3C3EB78
	0x031B9AC0 FSUB S2, S8, S0
	0x031B9AC4 FSUB S0, S9, S1
	0x031B9AC8 MOV V1.16B, V2.16B
	0x031B9ACC BL 0x3EB1C40
	0x031B9AD0 ADRP X8, 0xFFFFFFFFFD931000
	0x031B9AD4 LDR V2, [X8 + 0x448]
	0x031B9AD8 MOV X0, X19
	0x031B9ADC LDP X20, X19, [X31 + 0x20]
	0x031B9AE0 LDP X30, X21, [X31 + 0x10]
	0x031B9AE4 MOV V1.16B, V0.16B
	0x031B9AE8 FMOV S0, W31
	0x031B9AEC FMUL S2, S1, S2
	0x031B9AF0 FMOV S1, W31
	0x031B9AF4 MOV X1, X31
	0x031B9AF8 LDP D9, D8, [X31], #0x30
	0x031B9AFC B 0x3C3F888

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V0
	007 Move X19, X1
	008 Move X20, X0
	009 Call LTBezierPath.point, X0, V0
	010 Compare X19, 0
	011 JumpIfEqual {52}
	012 Move X0, X19
	013 Move X1, X31
	014 Call Transform.set_position, X0, X1
	015 Move X8, -40689664
	016 Move V0, [X8+1040]
	017 Move S1, 1
	018 Add S0, S8, S0
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move D9, [X31+48]
	024 Move D8, [X31+56]
	025 Return 
	026 Move X0, X20
	027 Call LTBezierPath.point, X0, V0
	028 Move X0, X19
	029 Move X1, X31
	030 Move V8, V0
	031 Move V9, V1
	032 Call Transform.get_position, X0
	033 Subtract S2, S8, S0
	034 Subtract S0, S9, S1
	035 Move V1, V2
	036 Call 0x3EB2C40
	037 Move X8, -40689664
	038 Move V2, [X8+1096]
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move V1, V0
	044 Move S0, W31
	045 Multiply S2, S1, S2
	046 Move S1, W31
	047 Move X1, X31
	048 Move D9, [X31+48]
	049 Move D8, [X31+56]
	050 Call Transform.set_eulerAngles, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void placeLocal2d(UnityEngine.Transform transform, System.Single ratio)

Disassembly:
	0x031B9B00 BL 0x1C16F20
	0x031B9B04 STR D8, [X31 - 0x30]!
	0x031B9B08 STP X30, X21, [X31 + 0x10]
	0x031B9B0C STP X20, X19, [X31 + 0x20]
	0x031B9B10 ADRP X21, 0x121F000
	0x031B9B14 LDRB W8, [X21 + 0x786]
	0x031B9B18 MOV V8.16B, V0.16B
	0x031B9B1C MOV X19, X1
	0x031B9B20 MOV X20, X0
	0x031B9B24 CBNZ W8, 0x31B9B3C
	0x031B9B28 ADRP X0, 0xF3A000
	0x031B9B2C LDR X0, [X0 + 0x5A0]
	0x031B9B30 BL 0x1C16CF4
	0x031B9B34 MOVZ W8, 0x1
	0x031B9B38 STRB W8, [X21 + 0x786]
	0x031B9B3C ADRP X8, 0xF3A000
	0x031B9B40 LDR X8, [X8 + 0x5A0]
	0x031B9B44 MOV X0, X20
	0x031B9B48 MOV X1, X19
	0x031B9B4C LDP X20, X19, [X31 + 0x20]
	0x031B9B50 LDR X8, [X8]
	0x031B9B54 LDP X30, X21, [X31 + 0x10]
	0x031B9B58 MOV V0.16B, V8.16B
	0x031B9B5C LDR X8, [X8 + 0xB8]
	0x031B9B60 LDP S1, S2, [X8 + 0x18]
	0x031B9B64 LDR V3, [X8 + 0x20]
	0x031B9B68 LDR V8, [X31], #0x30
	0x031B9B6C B 0x31B9B70
	0x031B9B70 STP D11, D10, [X31 - 0x40]!
	0x031B9B74 STP D9, D8, [X31 + 0x10]
	0x031B9B78 STR X30, [X31 + 0x20]
	0x031B9B7C STP X20, X19, [X31 + 0x30]
	0x031B9B80 MOV V8.16B, V3.16B
	0x031B9B84 MOV V9.16B, V2.16B
	0x031B9B88 MOV V10.16B, V1.16B
	0x031B9B8C MOV V11.16B, V0.16B
	0x031B9B90 MOV X19, X1
	0x031B9B94 MOV X20, X0
	0x031B9B98 BL 0x31B9900
	0x031B9B9C CBZ X19, 0x31B9C08
	0x031B9BA0 MOV X0, X19
	0x031B9BA4 MOV X1, X31
	0x031B9BA8 BL 0x3C3F62C
	0x031B9BAC ADRP X8, 0xFFFFFFFFFD931000
	0x031B9BB0 LDR V0, [X8 + 0x410]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V0
	007 Move X19, X1
	008 Move X20, X0
	009 Call LTBezierPath.point, X0, V0
	010 Compare X19, 0
	011 JumpIfEqual {52}
	012 Move X0, X19
	013 Move X1, X31
	014 Call Transform.set_localPosition, X0, X1
	015 Move X8, -40689664
	016 Move V0, [X8+1040]
	017 Move S1, 1
	018 Add S0, S8, S0
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move D9, [X31+48]
	024 Move D8, [X31+56]
	025 Return 
	026 Move X0, X20
	027 Call LTBezierPath.point, X0, V0
	028 Move X0, X19
	029 Move X1, X31
	030 Move V8, V0
	031 Move V9, V1
	032 Call Transform.get_localPosition, X0
	033 Subtract S2, S8, S0
	034 Subtract S0, S9, S1
	035 Move V1, V2
	036 Call 0x3EB2C40
	037 Move X8, -40689664
	038 Move V2, [X8+1096]
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move V1, V0
	044 Move S0, W31
	045 Multiply S2, S1, S2
	046 Move S1, W31
	047 Move X1, X31
	048 Move D9, [X31+48]
	049 Move D8, [X31+56]
	050 Call Transform.set_localEulerAngles, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void place(UnityEngine.Transform transform, System.Single ratio)

Disassembly:
	0x031B9BB4 FMOV S1, 1
	0x031B9BB8 FADD S0, S11, S0
	0x031B9BBC FCMP S0, S1
	0x031B9BC0 B.LS 0x31B9BD8
	0x031B9BC4 LDP X20, X19, [X31 + 0x30]
	0x031B9BC8 LDR X30, [X31 + 0x20]
	0x031B9BCC LDP D9, D8, [X31 + 0x10]
	0x031B9BD0 LDP D11, D10, [X31], #0x40
	0x031B9BD4 RET
	0x031B9BD8 MOV X0, X20
	0x031B9BDC BL 0x31B9900
	0x031B9BE0 MOV X0, X19
	0x031B9BE4 MOV V4.16B, V9.16B
	0x031B9BE8 MOV V5.16B, V8.16B
	0x031B9BEC LDP X20, X19, [X31 + 0x30]
	0x031B9BF0 LDR X30, [X31 + 0x20]
	0x031B9BF4 LDP D9, D8, [X31 + 0x10]
	0x031B9BF8 MOV V3.16B, V10.16B
	0x031B9BFC MOV X1, X31
	0x031B9C00 LDP D11, D10, [X31], #0x40
	0x031B9C04 B 0x3C40744
	0x031B9C08 BL 0x1C16F20
	0x031B9C0C STR D8, [X31 - 0x30]!
	0x031B9C10 STP X30, X21, [X31 + 0x10]
	0x031B9C14 STP X20, X19, [X31 + 0x20]
	0x031B9C18 ADRP X21, 0x121F000
	0x031B9C1C LDRB W8, [X21 + 0x786]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1220000
	007 Move W8, [X21+1926]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0xF3B000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1926], W8
	018 Move X8, 0xF3B000
	019 Move X8, [X8+1440]
	020 Move X0, X20
	021 Move X1, X19
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X8, [X8]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Move V0, V8
	028 Move X8, [X8+184]
	029 Move S1, [X8+24]
	030 Move S2, [X8+28]
	031 Move V3, [X8+32]
	032 Move V8, [X31+48]

Method: System.Void place(UnityEngine.Transform transform, System.Single ratio, UnityEngine.Vector3 worldUp)

Disassembly:
	0x031B9C20 MOV V8.16B, V0.16B
	0x031B9C24 MOV X19, X1
	0x031B9C28 MOV X20, X0
	0x031B9C2C CBNZ W8, 0x31B9C44
	0x031B9C30 ADRP X0, 0xF3A000
	0x031B9C34 LDR X0, [X0 + 0x5A0]
	0x031B9C38 BL 0x1C16CF4
	0x031B9C3C MOVZ W8, 0x1
	0x031B9C40 STRB W8, [X21 + 0x786]
	0x031B9C44 ADRP X8, 0xF3A000
	0x031B9C48 LDR X8, [X8 + 0x5A0]
	0x031B9C4C MOV X0, X20
	0x031B9C50 MOV X1, X19
	0x031B9C54 LDP X20, X19, [X31 + 0x20]
	0x031B9C58 LDR X8, [X8]
	0x031B9C5C LDP X30, X21, [X31 + 0x10]
	0x031B9C60 MOV V0.16B, V8.16B
	0x031B9C64 LDR X8, [X8 + 0xB8]
	0x031B9C68 LDP S1, S2, [X8 + 0x18]
	0x031B9C6C LDR V3, [X8 + 0x20]
	0x031B9C70 LDR V8, [X31], #0x30
	0x031B9C74 B 0x31B9C78
	0x031B9C78 STP D11, D10, [X31 - 0x40]!
	0x031B9C7C STP D9, D8, [X31 + 0x10]
	0x031B9C80 STP X30, X21, [X31 + 0x20]
	0x031B9C84 STP X20, X19, [X31 + 0x30]
	0x031B9C88 MOV V8.16B, V3.16B
	0x031B9C8C MOV V9.16B, V2.16B
	0x031B9C90 MOV V10.16B, V1.16B
	0x031B9C94 MOV V11.16B, V0.16B
	0x031B9C98 MOV X19, X1
	0x031B9C9C MOV X20, X0
	0x031B9CA0 BL 0x31B9900
	0x031B9CA4 CBZ X19, 0x31B9D34
	0x031B9CA8 MOV X0, X19
	0x031B9CAC MOV X1, X31
	0x031B9CB0 BL 0x3C3EC04
	0x031B9CB4 ADRP X8, 0xFFFFFFFFFD931000
	0x031B9CB8 LDR V0, [X8 + 0x410]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move V8, V3
	009 Move V9, V2
	010 Move V10, V1
	011 Move V11, V0
	012 Move X19, X1
	013 Move X20, X0
	014 Call LTBezierPath.point, X0, V0
	015 Compare X19, 0
	016 JumpIfEqual {49}
	017 Move X0, X19
	018 Move X1, X31
	019 Call Transform.set_position, X0, X1
	020 Move X8, -40689664
	021 Move V0, [X8+1040]
	022 Move S1, 1
	023 Add S0, S11, S0
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move X20, [X31+48]
	026 Move X19, [X31+56]
	027 Move X30, [X31+32]
	028 Move D9, [X31+16]
	029 Move D8, [X31+24]
	030 Move D11, [X31+64]
	031 Move D10, [X31+72]
	032 Return 
	033 Move X0, X20
	034 Call LTBezierPath.point, X0, V0
	035 Move X0, X19
	036 Move V4, V9
	037 Move V5, V8
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X30, [X31+32]
	041 Move D9, [X31+16]
	042 Move D8, [X31+24]
	043 Move V3, V10
	044 Move X1, X31
	045 Move D11, [X31+64]
	046 Move D10, [X31+72]
	047 Call Transform.LookAt, X0, X1, X2
	048 Return 
	049 Call 0x1C17F20

Method: System.Void placeLocal(UnityEngine.Transform transform, System.Single ratio)

Disassembly:
	0x031B9CBC FADD S11, S11, S0
	0x031B9CC0 FMOV S0, 1
	0x031B9CC4 FCMP S11, S0
	0x031B9CC8 B.LS 0x31B9CE0
	0x031B9CCC LDP X20, X19, [X31 + 0x30]
	0x031B9CD0 LDP X30, X21, [X31 + 0x20]
	0x031B9CD4 LDP D9, D8, [X31 + 0x10]
	0x031B9CD8 LDP D11, D10, [X31], #0x40
	0x031B9CDC RET
	0x031B9CE0 MOV X0, X19
	0x031B9CE4 MOV X1, X31
	0x031B9CE8 BL 0x3C3F49C
	0x031B9CEC MOV X21, X0
	0x031B9CF0 MOV X0, X20
	0x031B9CF4 MOV V0.16B, V11.16B
	0x031B9CF8 BL 0x31B9900
	0x031B9CFC CBZ X21, 0x31B9D34
	0x031B9D00 MOV X0, X21
	0x031B9D04 MOV X1, X31
	0x031B9D08 BL 0x3C3DE4C
	0x031B9D0C MOV X0, X19
	0x031B9D10 MOV V4.16B, V9.16B
	0x031B9D14 MOV V5.16B, V8.16B
	0x031B9D18 LDP X20, X19, [X31 + 0x30]
	0x031B9D1C LDP X30, X21, [X31 + 0x20]
	0x031B9D20 LDP D9, D8, [X31 + 0x10]
	0x031B9D24 MOV V3.16B, V10.16B

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1220000
	007 Move W8, [X21+1926]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0xF3B000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1926], W8
	018 Move X8, 0xF3B000
	019 Move X8, [X8+1440]
	020 Move X0, X20
	021 Move X1, X19
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X8, [X8]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Move V0, V8
	028 Move X8, [X8+184]
	029 Move S1, [X8+24]
	030 Move S2, [X8+28]
	031 Move V3, [X8+32]
	032 Move V8, [X31+48]

Method: System.Void placeLocal(UnityEngine.Transform transform, System.Single ratio, UnityEngine.Vector3 worldUp)

Disassembly:
	0x031B9D28 MOV X1, X31
	0x031B9D2C LDP D11, D10, [X31], #0x40
	0x031B9D30 B 0x3C40744
	0x031B9D34 BL 0x1C16F20
	0x031B9D38 STR D10, [X31 - 0x40]!
	0x031B9D3C STP D9, D8, [X31 + 0x10]
	0x031B9D40 STP X30, X21, [X31 + 0x20]
	0x031B9D44 STP X20, X19, [X31 + 0x30]
	0x031B9D48 LDR X8, [X0 + 0x20]
	0x031B9D4C CBZ X8, 0x31B9DD4
	0x031B9D50 LDR X9, [X8 + 0x18]
	0x031B9D54 CBZ X9, 0x31B9DD4
	0x031B9D58 CBZ W9, 0x31B9DE8
	0x031B9D5C LDR W9, [X0 + 0x28]
	0x031B9D60 MOV X19, X0
	0x031B9D64 CMP W9, 0x1
	0x031B9D68 B.LT 0x31B9DD4
	0x031B9D6C LDP S0, S1, [X8 + 0x20]
	0x031B9D70 LDR V2, [X8 + 0x28]
	0x031B9D74 MOV X20, X31
	0x031B9D78 MOV X21, X31
	0x031B9D7C LDR W9, [X8 + 0x18]
	0x031B9D80 CMP X21, X9
	0x031B9D84 B.CS 0x31B9DE8
	0x031B9D88 ADD X8, X8, X20
	0x031B9D8C LDP S8, S9, [X8 + 0x20]
	0x031B9D90 LDR V10, [X8 + 0x28]
	0x031B9D94 MOV X0, X31
	0x031B9D98 MOV V3.16B, V8.16B
	0x031B9D9C MOV V4.16B, V9.16B
	0x031B9DA0 MOV V5.16B, V10.16B
	0x031B9DA4 BL 0x3C0CB04
	0x031B9DA8 LDRSW X8, [X19 + 0x28]
	0x031B9DAC ADD X21, X21, 0x1
	0x031B9DB0 CMP X21, X8
	0x031B9DB4 B.GE 0x31B9DD4
	0x031B9DB8 LDR X8, [X19 + 0x20]
	0x031B9DBC ADD X20, X20, 0xC
	0x031B9DC0 MOV V2.16B, V10.16B
	0x031B9DC4 MOV V1.16B, V9.16B
	0x031B9DC8 MOV V0.16B, V8.16B
	0x031B9DCC CBNZ X8, 0x31B9D7C
	0x031B9DD0 BL 0x1C16F20
	0x031B9DD4 LDP X20, X19, [X31 + 0x30]
	0x031B9DD8 LDP X30, X21, [X31 + 0x20]
	0x031B9DDC LDP D9, D8, [X31 + 0x10]
	0x031B9DE0 LDR V10, [X31], #0x40
	0x031B9DE4 RET
	0x031B9DE8 BL 0x1C16F28
	0x031B9DEC SUB X31, X31, 0x70
	0x031B9DF0 STP D15, D14, [X31 + 0x10]
	0x031B9DF4 STP D13, D12, [X31 + 0x20]
	0x031B9DF8 STP D11, D10, [X31 + 0x30]
	0x031B9DFC STP D9, D8, [X31 + 0x40]
	0x031B9E00 STP X30, X21, [X31 + 0x50]
	0x031B9E04 STP X20, X19, [X31 + 0x60]
	0x031B9E08 LDR W8, [X0 + 0x28]
	0x031B9E0C CMP W8, 0x4
	0x031B9E10 B.LT 0x31B9F10
	0x031B9E14 LDR X8, [X0 + 0x20]
	0x031B9E18 MOV X19, X0
	0x031B9E1C CBZ X8, 0x31B9F30

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move V10, V1
	011 Move S1, 1
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 NotImplemented "Instruction FMIN not yet implemented."
	014 Move S11, W31
	015 NotImplemented "Instruction FCSEL not yet implemented."
	016 Move V0, V12
	017 Move V8, V3
	018 Move V9, V2
	019 Move X19, X1
	020 Move X20, X0
	021 Call LTBezierPath.point, X0, V0
	022 Compare X19, 0
	023 JumpIfEqual {74}
	024 Move X0, X19
	025 Move X1, X31
	026 Call Transform.set_localPosition, X0, X1
	027 Move X8, -40689664
	028 Move V0, [X8+1040]
	029 Add S0, S12, S0
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move S11, 1
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Move S1, 1
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move V11, V0
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X30, [X31+48]
	039 Move X21, [X31+56]
	040 Move D9, [X31+32]
	041 Move D8, [X31+40]
	042 Move D11, [X31+16]
	043 Move D10, [X31+24]
	044 Move V12, [X31+80]
	045 Return 
	046 Move X0, X19
	047 Move X1, X31
	048 Call Transform.get_parent, X0
	049 Move X21, X0
	050 Move X0, X20
	051 Move V0, V11
	052 Call LTBezierPath.point, X0, V0
	053 Compare X21, 0
	054 JumpIfEqual {74}
	055 Move X0, X21
	056 Move X1, X31
	057 Call Transform.TransformPoint, X0, X1
	058 Move X0, X19
	059 Move V3, V10
	060 Move V4, V9
	061 Move V5, V8
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X30, [X31+48]
	065 Move X21, [X31+56]
	066 Move D9, [X31+32]
	067 Move D8, [X31+40]
	068 Move D11, [X31+16]
	069 Move D10, [X31+24]
	070 Move X1, X31
	071 Move V12, [X31+80]
	072 Call Transform.LookAt, X0, X1, X2
	073 Return 
	074 Call 0x1C17F20

Method: System.Void gizmoDraw(System.Single t = -1)

Disassembly:
	0x031B9E20 LDR W9, [X8 + 0x18]
	0x031B9E24 CBZ W9, 0x31B9F34
	0x031B9E28 LDP S12, S13, [X8 + 0x20]
	0x031B9E2C LDR V14, [X8 + 0x28]
	0x031B9E30 MOV X0, X31
	0x031B9E34 MOV V15.16B, V3.16B
	0x031B9E38 MOV V8.16B, V2.16B
	0x031B9E3C MOV V9.16B, V1.16B
	0x031B9E40 MOV V10.16B, V0.16B
	0x031B9E44 BL 0x3C0CFAC
	0x031B9E48 STP S1, S0, [X31 + 0x8]
	0x031B9E4C STR S2, [X31 + 0x4]
	0x031B9E50 MOV V11.16B, V3.16B
	0x031B9E54 MOV V0.16B, V10.16B
	0x031B9E58 MOV V1.16B, V9.16B
	0x031B9E5C MOV V2.16B, V8.16B
	0x031B9E60 MOV V3.16B, V15.16B
	0x031B9E64 MOV X0, X31
	0x031B9E68 BL 0x3C0D030
	0x031B9E6C LDR W8, [X19 + 0x28]
	0x031B9E70 CMP W8, 0x1
	0x031B9E74 B.LT 0x31B9EE0
	0x031B9E78 MOV X20, X31
	0x031B9E7C MOV X21, X31
	0x031B9E80 LDR X8, [X19 + 0x20]
	0x031B9E84 CBZ X8, 0x31B9F30
	0x031B9E88 LDR W9, [X8 + 0x18]
	0x031B9E8C CMP X21, X9
	0x031B9E90 B.CS 0x31B9F34
	0x031B9E94 ADD X8, X8, X20
	0x031B9E98 LDP S8, S9, [X8 + 0x20]
	0x031B9E9C LDR V10, [X8 + 0x28]
	0x031B9EA0 MOV V0.16B, V12.16B
	0x031B9EA4 MOV V1.16B, V13.16B
	0x031B9EA8 MOV V2.16B, V14.16B
	0x031B9EAC MOV V3.16B, V8.16B
	0x031B9EB0 MOV V4.16B, V9.16B
	0x031B9EB4 MOV V5.16B, V10.16B
	0x031B9EB8 MOV X0, X31
	0x031B9EBC BL 0x3C0CB04
	0x031B9EC0 LDRSW X8, [X19 + 0x28]
	0x031B9EC4 ADD X21, X21, 0x1
	0x031B9EC8 ADD X20, X20, 0xC
	0x031B9ECC MOV V12.16B, V8.16B
	0x031B9ED0 CMP X21, X8
	0x031B9ED4 MOV V13.16B, V9.16B
	0x031B9ED8 MOV V14.16B, V10.16B
	0x031B9EDC B.LT 0x31B9E80
	0x031B9EE0 LDP S1, S0, [X31 + 0x8]
	0x031B9EE4 LDR V2, [X31 + 0x4]
	0x031B9EE8 MOV V3.16B, V11.16B
	0x031B9EEC LDP X20, X19, [X31 + 0x60]
	0x031B9EF0 LDP X30, X21, [X31 + 0x50]
	0x031B9EF4 LDP D9, D8, [X31 + 0x40]
	0x031B9EF8 LDP D11, D10, [X31 + 0x30]
	0x031B9EFC LDP D13, D12, [X31 + 0x20]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move S0, W31
	014 Move X19, X0
	015 Call LTBezierPath.point, X0, V0
	016 Move V8, V0
	017 Move V9, V1
	018 Move V10, V2
	019 Move W20, 1
	020 Move W21, 0x42F00000
	021 Move S15, 0.5
	022 Move S14, 1
	023 NotImplemented "Instruction SCVTF not yet implemented."
	024 Move S1, W21
	025 NotImplemented "Instruction FDIV not yet implemented."
	026 Move X0, X19
	027 Call LTBezierPath.point, X0, V0
	028 Move W9, [X19+48]
	029 Move W8, [X19+52]
	030 Move V11, V0
	031 Move S0, W31
	032 Move V12, V1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction FCSEL not yet implemented."
	035 NotImplemented "Instruction FCSEL not yet implemented."
	036 Move V13, V2
	037 Move S3, 1
	038 Move V2, V0
	039 Move X0, X31
	040 Call Gizmos.set_color, X0
	041 Move V0, V11
	042 Move V1, V12
	043 Move V2, V13
	044 Move V3, V8
	045 Move V4, V9
	046 Move V5, V10
	047 Move X0, X31
	048 Call Gizmos.DrawLine, X0, X1
	049 Move W8, [X19+48]
	050 Add W20, W20, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move V8, V11
	053 Move V9, V12
	054 Move V10, V13
	055 Move [X19+52], W8
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X30, [X31+64]
	059 Move X21, [X31+72]
	060 Move D9, [X31+48]
	061 Move D8, [X31+56]
	062 Move D11, [X31+32]
	063 Move D10, [X31+40]
	064 Move D13, [X31+16]
	065 Move D12, [X31+24]
	066 Move D15, [X31+96]
	067 Move D14, [X31+104]
	068 Return 

Method: System.Single ratioAtPoint(UnityEngine.Vector3 pt, System.Single precision = 0.01)

Disassembly:
	0x031B9F00 LDP D15, D14, [X31 + 0x10]
	0x031B9F04 MOV X0, X31
	0x031B9F08 ADD X31, X31, 0x70
	0x031B9F0C B 0x3C0D030
	0x031B9F10 LDP X20, X19, [X31 + 0x60]
	0x031B9F14 LDP X30, X21, [X31 + 0x50]
	0x031B9F18 LDP D9, D8, [X31 + 0x40]
	0x031B9F1C LDP D11, D10, [X31 + 0x30]
	0x031B9F20 LDP D13, D12, [X31 + 0x20]
	0x031B9F24 LDP D15, D14, [X31 + 0x10]
	0x031B9F28 ADD X31, X31, 0x70
	0x031B9F2C RET
	0x031B9F30 BL 0x1C16F20
	0x031B9F34 BL 0x1C16F28
	0x031B9F38 SUB X31, X31, 0x80
	0x031B9F3C STP D15, D14, [X31 + 0x10]
	0x031B9F40 STP D13, D12, [X31 + 0x20]
	0x031B9F44 STP D11, D10, [X31 + 0x30]
	0x031B9F48 STP D9, D8, [X31 + 0x40]
	0x031B9F4C STP X30, X23, [X31 + 0x50]
	0x031B9F50 STP X22, X21, [X31 + 0x60]
	0x031B9F54 STP X20, X19, [X31 + 0x70]
	0x031B9F58 ADRP X20, 0x1222000
	0x031B9F5C LDRB W8, [X20 + 0xED8]
	0x031B9F60 MOV V14.16B, V3.16B
	0x031B9F64 MOV V10.16B, V2.16B
	0x031B9F68 MOV V8.16B, V1.16B
	0x031B9F6C MOV V11.16B, V0.16B
	0x031B9F70 MOV X19, X0
	0x031B9F74 TBNZ X8, 0x0, 0x31B9F98
	0x031B9F78 ADRP X0, 0xF66000
	0x031B9F7C LDR X0, [X0 + 0x418]
	0x031B9F80 BL 0x1C16CF4
	0x031B9F84 ADRP X0, 0xF3C000
	0x031B9F88 LDR X0, [X0 + 0x9B0]
	0x031B9F8C BL 0x1C16CF4
	0x031B9F90 MOVZ W8, 0x1
	0x031B9F94 STRB W8, [X20 + 0xED8]
	0x031B9F98 CBZ X19, 0x31BA15C
	0x031B9F9C LDR W1, [X19 + 0x18]
	0x031B9FA0 CMP W1, 0x4
	0x031B9FA4 B.LT 0x31BA138
	0x031B9FA8 ADRP X8, 0xF3C000
	0x031B9FAC LDR X8, [X8 + 0x9B0]
	0x031B9FB0 LDR X0, [X8]
	0x031B9FB4 BL 0x1C16D6C
	0x031B9FB8 LDR W8, [X19 + 0x18]
	0x031B9FBC MOV X20, X0
	0x031B9FC0 CMP W8, 0x1
	0x031B9FC4 B.LT 0x31BA014
	0x031B9FC8 MOV X21, X31
	0x031B9FCC ADD X22, X20, 0x28
	0x031B9FD0 ADD X23, X19, 0x20
	0x031B9FD4 CMP W21, W8
	0x031B9FD8 B.CS 0x31BA160
	0x031B9FDC LDR X0, [X23, X21, LSL #3]
	0x031B9FE0 CBZ X0, 0x31BA15C
	0x031B9FE4 MOV X1, X31
	0x031B9FE8 BL 0x3C3F58C
	0x031B9FEC CBZ X20, 0x31BA15C
	0x031B9FF0 LDR W8, [X20 + 0x18]
	0x031B9FF4 CMP W21, W8
	0x031B9FF8 B.CS 0x31BA160
	0x031B9FFC STP S0, S1, [X22 - 0x8]
	0x031BA000 STR S2, [X22], #0xC
	0x031BA004 LDR W8, [X19 + 0x18]
	0x031BA008 ADD X21, X21, 0x1
	0x031BA00C CMP W21, W8
	0x031BA010 B.LT 0x31B9FD4
	0x031BA014 ADRP X8, 0xF65000
	0x031BA018 LDR X8, [X8 + 0x418]
	0x031BA01C LDR X0, [X8]
	0x031BA020 BL 0x1C16F10
	0x031BA024 MOVZ W8, 0x1
	0x031BA028 MOV X1, X31
	0x031BA02C MOV X19, X0
	0x031BA030 STRB W8, [X0 + 0x14]
	0x031BA034 BL 0x33BDD8C
	0x031BA038 MOVZ W2, 0x1
	0x031BA03C MOV X0, X19
	0x031BA040 MOV X1, X20
	0x031BA044 BL 0x31B90D4
	0x031BA048 LDR X8, [X19 + 0x20]
	0x031BA04C CBZ X8, 0x31BA15C
	0x031BA050 LDR W9, [X8 + 0x18]
	0x031BA054 CBZ W9, 0x31BA160
	0x031BA058 MOV V9.16B, V8.16B
	0x031BA05C LDP S8, S12, [X8 + 0x20]
	0x031BA060 LDR V13, [X8 + 0x28]
	0x031BA064 MOV X0, X31
	0x031BA068 BL 0x3C0CFAC
	0x031BA06C STP S1, S0, [X31 + 0x8]
	0x031BA070 STR S2, [X31 + 0x4]
	0x031BA074 MOV V15.16B, V3.16B
	0x031BA078 MOV V0.16B, V11.16B
	0x031BA07C MOV V1.16B, V9.16B
	0x031BA080 MOV V2.16B, V10.16B
	0x031BA084 MOV V3.16B, V14.16B
	0x031BA088 MOV X0, X31
	0x031BA08C BL 0x3C0D030
	0x031BA090 LDR W8, [X19 + 0x28]
	0x031BA094 CMP W8, 0x1
	0x031BA098 B.LT 0x31BA104
	0x031BA09C MOV X20, X31
	0x031BA0A0 MOV X21, X31
	0x031BA0A4 LDR X8, [X19 + 0x20]
	0x031BA0A8 CBZ X8, 0x31BA15C
	0x031BA0AC LDR W9, [X8 + 0x18]
	0x031BA0B0 CMP X21, X9
	0x031BA0B4 B.CS 0x31BA160
	0x031BA0B8 ADD X8, X8, X20
	0x031BA0BC LDP S11, S9, [X8 + 0x20]
	0x031BA0C0 LDR V10, [X8 + 0x28]
	0x031BA0C4 MOV V0.16B, V8.16B
	0x031BA0C8 MOV V1.16B, V12.16B
	0x031BA0CC MOV V2.16B, V13.16B
	0x031BA0D0 MOV V3.16B, V11.16B

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X20, 0x1221000
	019 Move W8, [X20+1495]
	020 Move V11, V3
	021 Move V8, V2
	022 Move V9, V1
	023 Move V10, V0
	024 Move X19, X0
	025 Move S12, 1
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0xF3B000
	029 Move X0, [X0+1448]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1495], W8
	033 Move X20, 0xF3B000
	034 Move X20, [X20+1448]
	035 NotImplemented "Instruction FDIV not yet implemented."
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 NotImplemented "Instruction FCVT not yet implemented."
	042 Add X0, X31, 8
	043 Move V0, V11
	044 Call 0x3EB2C00
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 Move D1, -0.5
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move V0, [X31+8]
	049 Move D1, -1
	050 Move D1, 0.5
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move V0, [X31+8]
	053 Move D1, 1
	054 NotImplemented "Instruction FCVTZS not yet implemented."
	055 Add D1, D0, D1
	056 And X31, X8, 1
	057 NotImplemented "Instruction FCSEL not yet implemented."
	058 Add D0, D11, D1
	059 NotImplemented "Instruction FRINTP not yet implemented."
	060 Add D0, D11, D1
	061 NotImplemented "Instruction FRINTM not yet implemented."
	062 Move X8, 0x7FF00000
	063 Move D1, X8
	064 NotImplemented "Instruction FCVTZS not yet implemented."
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move W8, 0x80000000
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 Move TEMP, 0x80800000
	071 Not TEMP
	072 Move W8, TEMP
	073 Move W22, W31
	074 Move W23, W31
	075 Move X24, 0x121F000
	076 Move S15, W8
	077 Move W25, 1
	078 NotImplemented "Instruction SCVTF not yet implemented."
	079 NotImplemented "Instruction FDIV not yet implemented."
	080 Move X0, X19
	081 Call LTBezierPath.point, X0, V0
	082 Move W8, [X24+2140]
	083 Move V11, V0
	084 Move V12, V1
	085 Move V13, V2
	086 Compare W8, 0
	087 JumpIfNotEqual {91}
	088 Move X0, X20
	089 Call 0x1C17CF4
	090 Move [X24+2140], W25
	091 Move X0, [X20]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Subtract S0, S10, S11
	097 Subtract S1, S9, S12
	098 Subtract S2, S8, S13
	099 Multiply S0, S0, S0
	100 Multiply S1, S1, S1
	101 Multiply S2, S2, S2
	102 Add S0, S0, S1
	103 Add S0, S2, S0
	104 NotImplemented "Instruction FSQRT not yet implemented."
	105 NotImplemented "Instruction FCMP not yet implemented."
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 Add W23, W23, 1
	108 NotImplemented "Instruction FCSEL not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction SCVTF not yet implemented."
	111 Move S0, W31
	112 NotImplemented "Instruction FDIV not yet implemented."
	113 Move X20, [X31+128]
	114 Move X19, [X31+136]
	115 Move X22, [X31+112]
	116 Move X21, [X31+120]
	117 Move X24, [X31+96]
	118 Move X23, [X31+104]
	119 Move X30, [X31+80]
	120 Move X25, [X31+88]
	121 Move D9, [X31+64]
	122 Move D8, [X31+72]
	123 Move D11, [X31+48]
	124 Move D10, [X31+56]
	125 Move D13, [X31+32]
	126 Move D12, [X31+40]
	127 Move D15, [X31+16]
	128 Move D14, [X31+24]
	129 Add X31, X31, 144
	130 Return V0

