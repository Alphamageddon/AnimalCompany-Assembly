Type: LeanTest

Method: System.Void debug(System.String name, System.Boolean didPass, System.String failExplaination = null)

Disassembly:
	0x031AC0B4 SXTW X21, W20
	0x031AC0B8 ADD X8, X8, X21, 0x3, LSL
	0x031AC0BC LDR X8, [X8 + 0x20]
	0x031AC0C0 CBZ X8, 0x31AC0FC
	0x031AC0C4 LDR W8, [X0 + 0xE0]
	0x031AC0C8 CBNZ W8, 0x31AC0D4
	0x031AC0CC BL 0x1C16DFC
	0x031AC0D0 LDR X0, [X19]
	0x031AC0D4 LDR X8, [X0 + 0xB8]
	0x031AC0D8 LDR X8, [X8 + 0x18]
	0x031AC0DC CBZ X8, 0x31AC14C
	0x031AC0E0 LDR W9, [X8 + 0x18]
	0x031AC0E4 CMP W20, W9
	0x031AC0E8 B.CS 0x31AC150
	0x031AC0EC ADD X8, X8, X21, 0x3, LSL
	0x031AC0F0 LDR X8, [X8 + 0x20]
	0x031AC0F4 CBZ X8, 0x31AC14C
	0x031AC0F8 STRB W31, [X8 + 0x10]
	0x031AC0FC ADD W20, W20, 0x1
	0x031AC100 B 0x31AC06C
	0x031AC104 ADRP X20, 0xF47000
	0x031AC108 LDR W8, [X0 + 0xE0]
	0x031AC10C LDR X20, [X20 + 0x598]
	0x031AC110 CBNZ W8, 0x31AC11C
	0x031AC114 BL 0x1C16DFC
	0x031AC118 LDR X0, [X19]
	0x031AC11C LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1230000
	008 Move X23, 0xF74000
	009 Move W8, [X22+3647]
	010 Move X23, [X23+688]
	011 Move X19, X2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xF74000
	019 Move X0, [X0+688]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3647], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W0, W21, 1
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]

Method: System.Void expect(System.Boolean didPass, System.String definition, System.String failExplaination = null)

Disassembly:
	0x031AC120 STR X31, [X8 + 0x18]
	0x031AC124 LDR X0, [X20]
	0x031AC128 LDR X19, [X8 + 0x48]
	0x031AC12C LDR W9, [X0 + 0xE0]
	0x031AC130 CBNZ W9, 0x31AC138
	0x031AC134 BL 0x1C16DFC
	0x031AC138 MOV X0, X19
	0x031AC13C LDP X20, X19, [X31 + 0x10]
	0x031AC140 MOV X1, X31
	0x031AC144 LDP X30, X21, [X31], #0x20
	0x031AC148 B 0x3C394A8
	0x031AC14C BL 0x1C16F20
	0x031AC150 BL 0x1C16F28
	0x031AC154 STR X30, [X31 - 0x20]!
	0x031AC158 STP X20, X19, [X31 + 0x10]
	0x031AC15C ADRP X19, 0x122F000
	0x031AC160 ADRP X20, 0xF49000
	0x031AC164 LDRB W8, [X19 + 0xE4F]
	0x031AC168 LDR X20, [X20 + 0x5A8]
	0x031AC16C TBNZ X8, 0x0, 0x31AC184
	0x031AC170 ADRP X0, 0xF49000
	0x031AC174 LDR X0, [X0 + 0x5A8]
	0x031AC178 BL 0x1C16CF4
	0x031AC17C MOVZ W8, 0x1
	0x031AC180 STRB W8, [X19 + 0xE4F]
	0x031AC184 LDR X0, [X20]
	0x031AC188 LDR W8, [X0 + 0xE0]
	0x031AC18C CBNZ W8, 0x31AC194
	0x031AC190 BL 0x1C16DFC
	0x031AC194 LDP X20, X19, [X31 + 0x10]
	0x031AC198 LDR X30, [X31], #0x20
	0x031AC19C B 0x31AC1A0
	0x031AC1A0 STR D8, [X31 - 0x30]!
	0x031AC1A4 STR X30, [X31 + 0x8]
	0x031AC1A8 STP X22, X21, [X31 + 0x10]
	0x031AC1AC STP X20, X19, [X31 + 0x20]
	0x031AC1B0 ADRP X19, 0x122F000
	0x031AC1B4 ADRP X20, 0xF49000
	0x031AC1B8 LDRB W8, [X19 + 0xE52]
	0x031AC1BC LDR X20, [X20 + 0x5A8]
	0x031AC1C0 TBNZ X8, 0x0, 0x31AC1E4
	0x031AC1C4 ADRP X0, 0xF49000
	0x031AC1C8 LDR X0, [X0 + 0x5A8]
	0x031AC1CC BL 0x1C16CF4
	0x031AC1D0 ADRP X0, 0xF47000
	0x031AC1D4 LDR X0, [X0 + 0x598]
	0x031AC1D8 BL 0x1C16CF4
	0x031AC1DC MOVZ W8, 0x1
	0x031AC1E0 STRB W8, [X19 + 0xE52]
	0x031AC1E4 LDR X0, [X20]
	0x031AC1E8 LDR W8, [X0 + 0xE0]
	0x031AC1EC CBNZ W8, 0x31AC1F8
	0x031AC1F0 BL 0x1C16DFC
	0x031AC1F4 LDR X0, [X20]
	0x031AC1F8 LDR X8, [X0 + 0xB8]
	0x031AC1FC MOV X0, X31
	0x031AC200 LDR W19, [X8 + 0x44]
	0x031AC204 BL 0x3C3C88C
	0x031AC208 CMP W19, W0
	0x031AC20C B.NE 0x31AC224
	0x031AC210 LDP X20, X19, [X31 + 0x20]
	0x031AC214 LDP X22, X21, [X31 + 0x10]
	0x031AC218 LDR X30, [X31 + 0x8]
	0x031AC21C LDR V8, [X31], #0x30
	0x031AC220 RET
	0x031AC224 LDR X0, [X20]
	0x031AC228 LDR W8, [X0 + 0xE0]
	0x031AC22C CBNZ W8, 0x31AC234
	0x031AC230 BL 0x1C16DFC
	0x031AC234 BL 0x31AB9B0
	0x031AC238 LDR X0, [X20]
	0x031AC23C LDR X8, [X0 + 0xB8]
	0x031AC240 LDR V0, [X8 + 0x50]
	0x031AC244 FCMP S0, 0x0
	0x031AC248 B.PL 0x31AC254
	0x031AC24C FMOV S8, W31
	0x031AC250 B 0x31AC27C
	0x031AC254 MOV X0, X31
	0x031AC258 BL 0x3C3C7B4
	0x031AC25C LDR X0, [X20]
	0x031AC260 MOV V8.16B, V0.16B
	0x031AC264 LDR W8, [X0 + 0xE0]
	0x031AC268 CBNZ W8, 0x31AC274
	0x031AC26C BL 0x1C16DFC
	0x031AC270 LDR X0, [X20]
	0x031AC274 LDR X8, [X0 + 0xB8]
	0x031AC278 STR S8, [X8 + 0x50]
	0x031AC27C LDR W8, [X0 + 0xE0]
	0x031AC280 CBNZ W8, 0x31AC28C
	0x031AC284 BL 0x1C16DFC
	0x031AC288 LDR X0, [X20]
	0x031AC28C LDR X8, [X0 + 0xB8]
	0x031AC290 MOV X0, X31
	0x031AC294 STR S8, [X8 + 0x50]
	0x031AC298 BL 0x3C3C714
	0x031AC29C LDR X8, [X20]
	0x031AC2A0 MOV W19, W31
	0x031AC2A4 LDR X9, [X8 + 0xB8]
	0x031AC2A8 STR S0, [X9 + 0x58]
	0x031AC2AC STR W31, [X9 + 0x80]
	0x031AC2B0 STR W31, [X9 + 0x68]
	0x031AC2B4 LDR W9, [X8 + 0xE0]
	0x031AC2B8 CBNZ W9, 0x31AC2C8
	0x031AC2BC MOV X0, X8
	0x031AC2C0 BL 0x1C16DFC
	0x031AC2C4 LDR X8, [X20]
	0x031AC2C8 LDR X9, [X8 + 0xB8]
	0x031AC2CC LDR W10, [X9 + 0x38]
	0x031AC2D0 CMP W19, W10
	0x031AC2D4 B.GT 0x31AC41C
	0x031AC2D8 LDR W10, [X8 + 0xE0]
	0x031AC2DC CBNZ W10, 0x31AC2F0
	0x031AC2E0 MOV X0, X8
	0x031AC2E4 BL 0x1C16DFC
	0x031AC2E8 LDR X8, [X20]
	0x031AC2EC LDR X9, [X8 + 0xB8]
	0x031AC2F0 LDR W10, [X9 + 0x3C]
	0x031AC2F4 CMP W19, W10
	0x031AC2F8 B.GE 0x31AC41C
	0x031AC2FC LDR W10, [X8 + 0xE0]
	0x031AC300 CBNZ W10, 0x31AC314
	0x031AC304 MOV X0, X8
	0x031AC308 BL 0x1C16DFC
	0x031AC30C LDR X8, [X20]
	0x031AC310 LDR X9, [X8 + 0xB8]
	0x031AC314 LDR X10, [X9 + 0x18]
	0x031AC318 CBZ X10, 0x31AC5C0
	0x031AC31C LDR W11, [X10 + 0x18]
	0x031AC320 CMP W19, W11
	0x031AC324 B.CS 0x31AC5C4
	0x031AC328 SXTW X21, W19
	0x031AC32C ADD X10, X10, X21, 0x3, LSL
	0x031AC330 LDR X0, [X10 + 0x20]
	0x031AC334 STR X0, [X9 + 0x30]
	0x031AC338 CBZ X0, 0x31AC5C0
	0x031AC33C LDRB W10, [X0 + 0x10]
	0x031AC340 CBZ W10, 0x31AC414
	0x031AC344 LDR W10, [X8 + 0xE0]
	0x031AC348 CBZ W10, 0x31AC354
	0x031AC34C STR W19, [X9 + 0x80]
	0x031AC350 B 0x31AC370
	0x031AC354 MOV X0, X8
	0x031AC358 BL 0x1C16DFC
	0x031AC35C LDR X8, [X20]
	0x031AC360 LDR X8, [X8 + 0xB8]
	0x031AC364 LDR X0, [X8 + 0x30]
	0x031AC368 STR W19, [X8 + 0x80]
	0x031AC36C CBZ X0, 0x31AC5C0
	0x031AC370 MOV X1, X31
	0x031AC374 BL 0x31C2804
	0x031AC378 LDR X8, [X20]
	0x031AC37C TBZ X0, 0x0, 0x31AC414
	0x031AC380 LDR W9, [X8 + 0xE0]
	0x031AC384 CBNZ W9, 0x31AC394
	0x031AC388 MOV X0, X8
	0x031AC38C BL 0x1C16DFC
	0x031AC390 LDR X8, [X20]
	0x031AC394 LDR X8, [X8 + 0xB8]
	0x031AC398 LDR X9, [X8 + 0x20]
	0x031AC39C CBZ X9, 0x31AC5C0
	0x031AC3A0 LDRSW X10, [X8 + 0x68]
	0x031AC3A4 LDR W11, [X9 + 0x18]
	0x031AC3A8 CMP W10, W11
	0x031AC3AC B.CS 0x31AC5C4
	0x031AC3B0 ADD X9, X9, X10, 0x2, LSL
	0x031AC3B4 STR W19, [X9 + 0x20]
	0x031AC3B8 LDR X9, [X8 + 0x18]
	0x031AC3BC CBZ X9, 0x31AC5C0
	0x031AC3C0 LDR W10, [X9 + 0x18]
	0x031AC3C4 CMP W19, W10
	0x031AC3C8 B.CS 0x31AC5C4
	0x031AC3CC ADD X9, X9, X21, 0x3, LSL
	0x031AC3D0 LDR X0, [X9 + 0x20]
	0x031AC3D4 CBZ X0, 0x31AC5C0
	0x031AC3D8 LDR X21, [X8 + 0x28]
	0x031AC3DC LDRSW X22, [X8 + 0x68]
	0x031AC3E0 MOV X1, X31
	0x031AC3E4 BL 0x31BFBD4
	0x031AC3E8 CBZ X21, 0x31AC5C0
	0x031AC3EC LDR W8, [X21 + 0x18]
	0x031AC3F0 CMP W22, W8
	0x031AC3F4 B.CS 0x31AC5C4
	0x031AC3F8 ADD X8, X21, X22, 0x2, LSL
	0x031AC3FC STR W0, [X8 + 0x20]
	0x031AC400 LDR X8, [X20]
	0x031AC404 LDR X9, [X8 + 0xB8]
	0x031AC408 LDR W10, [X9 + 0x68]
	0x031AC40C ADD W10, W10, 0x1
	0x031AC410 STR W10, [X9 + 0x68]
	0x031AC414 ADD W19, W19, 0x1
	0x031AC418 B 0x31AC2B4
	0x031AC41C LDR W9, [X8 + 0xE0]
	0x031AC420 CBNZ W9, 0x31AC430
	0x031AC424 MOV X0, X8
	0x031AC428 BL 0x1C16DFC
	0x031AC42C LDR X8, [X20]
	0x031AC430 LDR X8, [X8 + 0xB8]
	0x031AC434 MOV X0, X31
	0x031AC438 LDR W9, [X8 + 0x80]
	0x031AC43C STR W9, [X8 + 0x38]
	0x031AC440 BL 0x3C3C88C
	0x031AC444 MOV W8, W0
	0x031AC448 LDR X0, [X20]
	0x031AC44C ADRP X22, 0xF47000
	0x031AC450 MOV W21, W31
	0x031AC454 LDR X9, [X0 + 0xB8]
	0x031AC458 STR W8, [X9 + 0x44]
	0x031AC45C LDR X22, [X22 + 0x598]
	0x031AC460 LDR W8, [X0 + 0xE0]
	0x031AC464 CBNZ W8, 0x31AC470
	0x031AC468 BL 0x1C16DFC
	0x031AC46C LDR X0, [X20]
	0x031AC470 LDR X8, [X0 + 0xB8]
	0x031AC474 LDR W9, [X8 + 0x68]
	0x031AC478 CMP W21, W9
	0x031AC47C B.GE 0x31AC210
	0x031AC480 LDR W9, [X0 + 0xE0]
	0x031AC484 CBNZ W9, 0x31AC494
	0x031AC488 BL 0x1C16DFC
	0x031AC48C LDR X8, [X20]
	0x031AC490 LDR X8, [X8 + 0xB8]
	0x031AC494 LDR X9, [X8 + 0x20]
	0x031AC498 CBZ X9, 0x31AC5C0
	0x031AC49C LDR W10, [X9 + 0x18]
	0x031AC4A0 CMP W21, W10
	0x031AC4A4 B.CS 0x31AC5C4
	0x031AC4A8 SXTW X19, W21
	0x031AC4AC ADD X9, X9, X19, 0x2, LSL
	0x031AC4B0 LDRSW X9, [X9 + 0x20]
	0x031AC4B4 LDR X10, [X8 + 0x18]
	0x031AC4B8 STR W9, [X8 + 0x64]
	0x031AC4BC CBZ X10, 0x31AC5C0
	0x031AC4C0 LDR W11, [X10 + 0x18]
	0x031AC4C4 CMP W9, W11
	0x031AC4C8 B.CS 0x31AC5C4
	0x031AC4CC ADD X9, X10, X9, 0x3, LSL
	0x031AC4D0 LDR X0, [X9 + 0x20]
	0x031AC4D4 STR X0, [X8 + 0x30]
	0x031AC4D8 CBZ X0, 0x31AC5C0
	0x031AC4DC MOV X1, X31
	0x031AC4E0 BL 0x31BFBD4
	0x031AC4E4 LDR X8, [X20]
	0x031AC4E8 LDR X9, [X8 + 0xB8]
	0x031AC4EC LDR X10, [X9 + 0x28]
	0x031AC4F0 CBZ X10, 0x31AC5C0
	0x031AC4F4 LDR W11, [X10 + 0x18]
	0x031AC4F8 CMP W21, W11
	0x031AC4FC B.CS 0x31AC5C4
	0x031AC500 ADD X10, X10, X19, 0x2, LSL
	0x031AC504 LDR W10, [X10 + 0x20]
	0x031AC508 CMP W0, W10
	0x031AC50C B.NE 0x31AC5B4
	0x031AC510 LDR W10, [X8 + 0xE0]
	0x031AC514 CBNZ W10, 0x31AC528
	0x031AC518 MOV X0, X8
	0x031AC51C BL 0x1C16DFC
	0x031AC520 LDR X8, [X20]
	0x031AC524 LDR X9, [X8 + 0xB8]
	0x031AC528 LDR W0, [X9 + 0x64]
	0x031AC52C BL 0x31AC7BC
	0x031AC530 LDR X0, [X20]
	0x031AC534 LDR X8, [X0 + 0xB8]
	0x031AC538 LDR X8, [X8 + 0x30]
	0x031AC53C CBZ X8, 0x31AC5C0
	0x031AC540 LDRB W9, [X8 + 0x16]
	0x031AC544 CBZ W9, 0x31AC5B4
	0x031AC548 LDR W9, [X0 + 0xE0]
	0x031AC54C CBNZ W9, 0x31AC564
	0x031AC550 BL 0x1C16DFC
	0x031AC554 LDR X8, [X20]
	0x031AC558 LDR X8, [X8 + 0xB8]
	0x031AC55C LDR X8, [X8 + 0x30]
	0x031AC560 CBZ X8, 0x31AC5C0
	0x031AC564 LDR X0, [X22]
	0x031AC568 LDR X19, [X8 + 0x58]
	0x031AC56C LDR W9, [X0 + 0xE0]
	0x031AC570 CBNZ W9, 0x31AC578
	0x031AC574 BL 0x1C16DFC
	0x031AC578 MOV X0, X19
	0x031AC57C MOV X1, X31
	0x031AC580 MOV X2, X31
	0x031AC584 BL 0x3C354F8
	0x031AC588 TBZ X0, 0x0, 0x31AC5B4
	0x031AC58C LDR X0, [X20]
	0x031AC590 LDR W8, [X0 + 0xE0]
	0x031AC594 CBNZ W8, 0x31AC5A0
	0x031AC598 BL 0x1C16DFC
	0x031AC59C LDR X0, [X20]
	0x031AC5A0 LDR X8, [X0 + 0xB8]
	0x031AC5A4 LDR X0, [X8 + 0x30]
	0x031AC5A8 CBZ X0, 0x31AC5C0
	0x031AC5AC MOV X1, X31
	0x031AC5B0 BL 0x31C2608
	0x031AC5B4 LDR X0, [X20]
	0x031AC5B8 ADD W21, W21, 0x1
	0x031AC5BC B 0x31AC460
	0x031AC5C0 BL 0x1C16F20
	0x031AC5C4 BL 0x1C16F28
	0x031AC5C8 STR X30, [X31 - 0x20]!
	0x031AC5CC STP X20, X19, [X31 + 0x10]
	0x031AC5D0 ADRP X20, 0x122F000
	0x031AC5D4 STR W0, [X31 + 0x8]
	0x031AC5D8 ADRP X19, 0xF49000
	0x031AC5DC LDRB W8, [X20 + 0xE50]
	0x031AC5E0 LDR X19, [X19 + 0x5A8]
	0x031AC5E4 TBNZ X8, 0x0, 0x31AC5FC
	0x031AC5E8 ADRP X0, 0xF49000
	0x031AC5EC LDR X0, [X0 + 0x5A8]
	0x031AC5F0 BL 0x1C16CF4
	0x031AC5F4 MOVZ W8, 0x1
	0x031AC5F8 STRB W8, [X20 + 0xE50]
	0x031AC5FC ADD X0, X31, 0x8
	0x031AC600 MOV X1, X31
	0x031AC604 BL 0x3C46414
	0x031AC608 LDR X0, [X19]
	0x031AC60C LDR W8, [X0 + 0xE0]
	0x031AC610 CBNZ W8, 0x31AC618
	0x031AC614 BL 0x1C16DFC
	0x031AC618 BL 0x31AC628
	0x031AC61C LDP X20, X19, [X31 + 0x10]
	0x031AC620 LDR X30, [X31], #0x20
	0x031AC624 RET
	0x031AC628 STR X30, [X31 - 0x20]!
	0x031AC62C STP X20, X19, [X31 + 0x10]
	0x031AC630 ADRP X19, 0x122F000
	0x031AC634 ADRP X20, 0xF73000
	0x031AC638 LDRB W8, [X19 + 0xE51]
	0x031AC63C LDR X20, [X20 + 0x3A0]
	0x031AC640 TBNZ X8, 0x0, 0x31AC658
	0x031AC644 ADRP X0, 0xF73000
	0x031AC648 LDR X0, [X0 + 0x3A0]
	0x031AC64C BL 0x1C16CF4
	0x031AC650 MOVZ W8, 0x1
	0x031AC654 STRB W8, [X19 + 0xE51]
	0x031AC658 LDR X0, [X20]
	0x031AC65C LDR W8, [X0 + 0xE0]
	0x031AC660 CBNZ W8, 0x31AC668
	0x031AC664 BL 0x1C16DFC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1230000
	011 Move X24, 0xF74000
	012 Move W8, [X22+3648]
	013 Move X24, [X24+688]
	014 Move X20, X2
	015 Move X21, X1
	016 Move W19, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {83}
	021 Move X0, 0xF48000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0xF48000
	025 Move X0, [X0+2648]
	026 Call 0x1C17CF4
	027 Move X0, 0xF74000
	028 Move X0, [X0+688]
	029 Call 0x1C17CF4
	030 Move X0, 0xF74000
	031 Move X0, [X0+768]
	032 Call 0x1C17CF4
	033 Move X0, 0xF74000
	034 Move X0, [X0+776]
	035 Call 0x1C17CF4
	036 Move X0, 0xF48000
	037 Move X0, [X0+2760]
	038 Call 0x1C17CF4
	039 Move X0, 0xF48000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move X0, 0xF74000
	043 Move X0, [X0+784]
	044 Call 0x1C17CF4
	045 Move X0, 0xF74000
	046 Move X0, [X0+720]
	047 Call 0x1C17CF4
	048 Move X0, 0xF48000
	049 Move X0, [X0+3544]
	050 Call 0x1C17CF4
	051 Move X0, 0xF74000
	052 Move X0, [X0+728]
	053 Call 0x1C17CF4
	054 Move X0, 0xF74000
	055 Move X0, [X0+792]
	056 Call 0x1C17CF4
	057 Move X0, 0xF48000
	058 Move X0, [X0+3552]
	059 Call 0x1C17CF4
	060 Move X0, 0xF74000
	061 Move X0, [X0+800]
	062 Call 0x1C17CF4
	063 Move X0, 0xF74000
	064 Move X0, [X0+808]
	065 Call 0x1C17CF4
	066 Move X0, 0xF74000
	067 Move X0, [X0+816]
	068 Call 0x1C17CF4
	069 Move X0, 0xF74000
	070 Move X0, [X0+824]
	071 Call 0x1C17CF4
	072 Move X0, 0xF74000
	073 Move X0, [X0+832]
	074 Call 0x1C17CF4
	075 Move X0, 0xF48000
	076 Move X0, [X0+2440]
	077 Call 0x1C17CF4
	078 Move X0, 0xF74000
	079 Move X0, [X0+840]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X22+3648], W8
	083 Move X0, [X24]
	084 Move X22, 0xF48000
	085 Move W8, [X0+224]
	086 Move X22, [X22+3552]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Call LeanTest.printOutLength, X0
	092 Move X8, -40636416
	093 Move V1, [X8+400]
	094 Move W9, 0x7F800000
	095 Move W8, 40
	096 Move X0, [X22]
	097 Multiply S0, S0, S1
	098 Move S2, W9
	099 NotImplemented "Instruction FCVTZS not yet implemented."
	100 Subtract W8, W8, W9
	101 Move W9, 40
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 Compare X0, 0
	106 JumpIfEqual {374}
	107 Move X23, 0xF48000
	108 Move X23, [X23+2440]
	109 Move W1, W31
	110 Move X2, X31
	111 Call String.get_Chars, X0, X1
	112 Move X8, [X23]
	113 Compare X8, 0
	114 JumpIfEqual {374}
	115 Move X23, 0xF48000
	116 Move X23, [X23+2760]
	117 Move W2, W0
	118 Move X0, X8
	119 Move W1, W22
	120 Move X3, X31
	121 Call String.PadRight, X0, X1, X2
	122 Move X8, [X23]
	123 Move X23, X0
	124 Move W1, 6
	125 Move X0, X8
	126 Call 0x1C17D6C
	127 Move X22, X0
	128 Move X0, X21
	129 Call LeanTest.formatB, X0
	130 Compare X22, 0
	131 JumpIfEqual {374}
	132 Move W8, [X22+24]
	133 Compare W8, 0
	134 JumpIfEqual {373}
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move [X22+32], X0
	137 Move X9, 0xF48000
	138 Move X9, [X9+3544]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X9, [X9]
	141 Move [X22+40], X9
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X22+48], X23
	144 Move X8, 0xF74000
	145 Move X8, [X8+832]
	146 Move X25, 0xF74000
	147 Move X26, 0xF74000
	148 Move X21, 0xF74000
	149 Move X8, [X8]
	150 Move X23, 0xF74000
	151 Move [X22+56], X8
	152 Move X0, [X24]
	153 Move W8, [X0+224]
	154 Move X25, [X25+792]
	155 Move X26, [X26+824]
	156 Move X21, [X21+720]
	157 Move X23, [X23+728]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 And W31, W19, 1
	162 NotImplemented "Instruction CSEL not yet implemented."
	163 NotImplemented "Instruction CSEL not yet implemented."
	164 Move X0, [X8]
	165 Move X1, [X9]
	166 Call LeanTest.formatC, X0, X1
	167 Move W8, [X22+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X22+64], X0
	171 Move X8, 0xF74000
	172 Move X8, [X8+840]
	173 Move X23, 0xF48000
	174 Move X0, X22
	175 Move X1, X31
	176 Move X8, [X8]
	177 Move X23, [X23+2600]
	178 Move [X22+72], X8
	179 Call String.Concat, X0
	180 Move X21, X0
	181 Compare X20, 0
	182 JumpIfEqual {195}
	183 Move TEMP, X19
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {195}
	187 Move X8, 0xF74000
	188 Move X8, [X8+800]
	189 Move X0, X21
	190 Move X2, X20
	191 Move X3, X31
	192 Move X1, [X8]
	193 Call String.Concat, X0, X1, X2
	194 Move X21, X0
	195 Move X0, [X23]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, X21
	201 Move X1, X31
	202 Call Debug.Log, X0
	203 Move X0, [X24]
	204 Move TEMP, X19
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {217}
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X24]
	213 Move X8, [X0+184]
	214 Move W9, [X8+8]
	215 Add W9, W9, 1
	216 Move [X8+8], W9
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {222}
	220 Call 0x1C17DFC
	221 Move X0, [X24]
	222 Move X8, [X0+184]
	223 Move W10, [X8]
	224 Move W9, [X8+4]
	225 Add W9, W9, 1
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move [X8+4], W9
	228 Move W9, [X0+224]
	229 Compare W9, 0
	230 JumpIfNotEqual {234}
	231 Call 0x1C17DFC
	232 Move X0, [X24]
	233 Move X8, [X0+184]
	234 Move W8, [X8+17]
	235 Compare W8, 0
	236 JumpIfEqual {277}
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {242}
	240 Call 0x1C17DFC
	241 Move X0, [X24]
	242 Move X8, [X0+184]
	243 Move W8, [X8]
	244 Move W9, [X8+4]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X8, 0xF74000
	251 Move X8, [X8+784]
	252 Move X0, [X8]
	253 Call LeanTest.formatB, X0
	254 Move X8, [X24]
	255 Move X19, X0
	256 Move X1, X31
	257 Move X8, [X8+184]
	258 Add X0, X8, 4
	259 Call Int32.ToString, X0
	260 Move X8, 0xF74000
	261 Move X8, [X8+816]
	262 Move X2, X0
	263 Move X0, X19
	264 Move X3, X31
	265 Move X1, [X8]
	266 Call String.Concat, X0, X1, X2
	267 Move X8, [X23]
	268 Move X19, X0
	269 Move W9, [X8+224]
	270 Compare W9, 0
	271 JumpIfNotEqual {274}
	272 Move X0, X8
	273 Call 0x1C17DFC
	274 Move X0, X19
	275 Move X1, X31
	276 Call Debug.Log, X0
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Call LeanTest.overview
	282 Move X0, [X24]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {288}
	286 Call 0x1C17DFC
	287 Move X0, [X24]
	288 Move X8, [X0+184]
	289 Move W9, [X8+16]
	290 Compare W9, 0
	291 JumpIfEqual {302}
	292 Move X20, [X31+64]
	293 Move X19, [X31+72]
	294 Move X22, [X31+48]
	295 Move X21, [X31+56]
	296 Move X24, [X31+32]
	297 Move X23, [X31+40]
	298 Move X26, [X31+16]
	299 Move X25, [X31+24]
	300 Move X30, [X31+80]
	301 Return 
	302 Move W9, [X0+224]
	303 Compare W9, 0
	304 JumpIfNotEqual {308}
	305 Call 0x1C17DFC
	306 Move X8, [X24]
	307 Move X8, [X8+184]
	308 Move W9, 1
	309 Move [X8+16], W9
	310 Move X8, 0xF48000
	311 Move X8, [X8+2648]
	312 Move X0, [X8]
	313 Call 0x1C17F10
	314 Move X1, X31
	315 Move X19, X0
	316 Call GameObject..ctor, X0
	317 Compare X19, 0
	318 JumpIfEqual {374}
	319 Move X8, 0xF74000
	320 Move X8, [X8+808]
	321 Move X0, X19
	322 Move X2, X31
	323 Move X1, [X8]
	324 Call Object.set_name, X0, X1
	325 Move X8, 0xF48000
	326 Move X8, [X8+1728]
	327 Move X0, [X8]
	328 Move X8, 0xF74000
	329 Move X8, [X8+768]
	330 Move W9, [X0+224]
	331 Move X20, [X8]
	332 Compare W9, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X0, X20
	336 Move X1, X31
	337 Call Type.GetTypeFromHandle, X0
	338 Move X1, X0
	339 Move X0, X19
	340 Move X2, X31
	341 Call GameObject.AddComponent, X0, X1
	342 Compare X0, 0
	343 JumpIfEqual {374}
	344 Move X8, 0xF74000
	345 Move X8, [X8+776]
	346 Move X9, [X0]
	347 Move X8, [X8]
	348 Move W11, [X9+304]
	349 Move W10, [X8+304]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move X9, [X9+200]
	352 Add X9, X9, X10
	353 NotImplemented "Instruction LDUR not yet implemented."
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X8, [X24]
	356 Move X22, [X31+48]
	357 Move X21, [X31+56]
	358 Move X24, [X31+32]
	359 Move X23, [X31+40]
	360 Move X26, [X31+16]
	361 Move X25, [X31+24]
	362 Move X8, [X8+184]
	363 Move W1, 61
	364 Move X2, X31
	365 Move V0, [X8+12]
	366 Move [X0+32], S0
	367 Move X0, X19
	368 Move X20, [X31+64]
	369 Move X19, [X31+72]
	370 Move X30, [X31+80]
	371 Call Object.set_hideFlags, X0, X1
	372 Return 
	373 Call 0x1C17F28
	374 Call 0x1C17F20

Method: System.String padRight(System.Int32 len)

Disassembly:
	0x031AC87C ADD X9, X8, X23, 0x3, LSL
	0x031AC880 LDR X9, [X9 + 0x20]
	0x031AC884 CBZ X9, 0x31ACAC4
	0x031AC888 LDRB W10, [X9 + 0x54]
	0x031AC88C MOVN W11, 0x0
	0x031AC890 STRB W31, [X9 + 0x10]
	0x031AC894 STR W11, [X9 + 0x3C]
	0x031AC898 CBZ W10, 0x31ACA6C
	0x031AC89C LDR W9, [X0 + 0xE0]
	0x031AC8A0 CBNZ W9, 0x31AC8B8
	0x031AC8A4 BL 0x1C16DFC
	0x031AC8A8 LDR X0, [X22]
	0x031AC8AC LDR X8, [X0 + 0xB8]
	0x031AC8B0 LDR X8, [X8 + 0x18]
	0x031AC8B4 CBZ X8, 0x31ACAC4
	0x031AC8B8 LDR W9, [X8 + 0x18]
	0x031AC8BC CMP W9, W19
	0x031AC8C0 B.LS 0x31ACAC8
	0x031AC8C4 ADD X9, X8, X23, 0x3, LSL
	0x031AC8C8 LDR X9, [X9 + 0x20]
	0x031AC8CC CBZ X9, 0x31ACAC4
	0x031AC8D0 LDR X9, [X9 + 0xE8]
	0x031AC8D4 CBZ X9, 0x31ACAC4
	0x031AC8D8 LDR W10, [X0 + 0xE0]
	0x031AC8DC LDR X20, [X9 + 0x78]
	0x031AC8E0 CBNZ W10, 0x31AC8F8
	0x031AC8E4 BL 0x1C16DFC
	0x031AC8E8 LDR X8, [X22]
	0x031AC8EC LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1230000
	006 Move X21, 0xF48000
	007 Move W8, [X20+3649]
	008 Move X21, [X21+2440]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF48000
	015 Move X0, [X0+3552]
	016 Call 0x1C17CF4
	017 Move X0, 0xF48000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3649], W8
	022 Move X0, [X21]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X20, 0xF48000
	025 Move X20, [X20+3552]
	026 Move X1, [X20]
	027 Move X2, X31
	028 Call String.Concat, X0, X1
	029 Subtract W19, W19, 1
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Single printOutLength(System.String str)

Disassembly:
	0x031AC668 LDP X20, X19, [X31 + 0x10]
	0x031AC66C LDR X30, [X31], #0x20
	0x031AC670 B 0x31AC674
	0x031AC674 STR X30, [X31 - 0x20]!
	0x031AC678 STP X20, X19, [X31 + 0x10]
	0x031AC67C ADRP X20, 0x122F000
	0x031AC680 ADRP X19, 0xF73000
	0x031AC684 LDRB W8, [X20 + 0xEE0]
	0x031AC688 LDR X19, [X19 + 0x3A0]
	0x031AC68C TBNZ X8, 0x0, 0x31AC6A4
	0x031AC690 ADRP X0, 0xF73000
	0x031AC694 LDR X0, [X0 + 0x3A0]
	0x031AC698 BL 0x1C16CF4
	0x031AC69C MOVZ W8, 0x1
	0x031AC6A0 STRB W8, [X20 + 0xEE0]
	0x031AC6A4 LDR X0, [X19]
	0x031AC6A8 LDR W8, [X0 + 0xE0]
	0x031AC6AC CBNZ W8, 0x31AC6B8
	0x031AC6B0 BL 0x1C16DFC
	0x031AC6B4 LDR X0, [X19]
	0x031AC6B8 LDR X8, [X0 + 0xB8]
	0x031AC6BC LDRB W9, [X8 + 0x50]
	0x031AC6C0 CBZ W9, 0x31AC7A8
	0x031AC6C4 LDR W9, [X0 + 0xE0]
	0x031AC6C8 CBNZ W9, 0x31AC6D8
	0x031AC6CC BL 0x1C16DFC
	0x031AC6D0 LDR X0, [X19]
	0x031AC6D4 LDR X8, [X0 + 0xB8]
	0x031AC6D8 MOV X20, X31
	0x031AC6DC STRB W31, [X8 + 0x50]
	0x031AC6E0 LDR W8, [X0 + 0xE0]
	0x031AC6E4 CBNZ W8, 0x31AC6F0
	0x031AC6E8 BL 0x1C16DFC
	0x031AC6EC LDR X0, [X19]
	0x031AC6F0 LDR X8, [X0 + 0xB8]
	0x031AC6F4 LDR X8, [X8 + 0x10]
	0x031AC6F8 CBZ X8, 0x31AC7B4
	0x031AC6FC LDRSW X9, [X8 + 0x18]
	0x031AC700 CMP X20, X9
	0x031AC704 B.GE 0x31AC744
	0x031AC708 LDR W9, [X0 + 0xE0]
	0x031AC70C CBNZ W9, 0x31AC724
	0x031AC710 BL 0x1C16DFC
	0x031AC714 LDR X8, [X19]
	0x031AC718 LDR X8, [X8 + 0xB8]
	0x031AC71C LDR X8, [X8 + 0x10]
	0x031AC720 CBZ X8, 0x31AC7B4
	0x031AC724 LDR W9, [X8 + 0x18]
	0x031AC728 CMP X20, X9
	0x031AC72C B.CS 0x31AC7B8
	0x031AC730 ADD X8, X8, X20, 0x3, LSL
	0x031AC734 STR X31, [X8 + 0x20]
	0x031AC738 LDR X0, [X19]
	0x031AC73C ADD X20, X20, 0x1
	0x031AC740 B 0x31AC6E0
	0x031AC744 MOV X20, X31
	0x031AC748 LDR W8, [X0 + 0xE0]
	0x031AC74C CBNZ W8, 0x31AC758
	0x031AC750 BL 0x1C16DFC
	0x031AC754 LDR X0, [X19]
	0x031AC758 LDR X8, [X0 + 0xB8]
	0x031AC75C LDR X8, [X8 + 0x18]
	0x031AC760 CBZ X8, 0x31AC7B4
	0x031AC764 LDRSW X8, [X8 + 0x18]
	0x031AC768 CMP X20, X8
	0x031AC76C B.GE 0x31AC7A8
	0x031AC770 LDR W8, [X0 + 0xE0]
	0x031AC774 CBNZ W8, 0x31AC780
	0x031AC778 BL 0x1C16DFC
	0x031AC77C LDR X0, [X19]
	0x031AC780 LDR X8, [X0 + 0xB8]
	0x031AC784 LDR X8, [X8 + 0x18]
	0x031AC788 CBZ X8, 0x31AC7B4
	0x031AC78C LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x1230000
	011 Move W8, [X20+3650]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xF74000
	018 Move X0, [X0+848]
	019 Call 0x1C17CF4
	020 Move X0, 0xF74000
	021 Move X0, [X0+856]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3650], W8
	025 Compare X19, 0
	026 JumpIfEqual {84}
	027 Move W8, [X19+16]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X22, 0xF74000
	030 Move X8, -40636416
	031 Move X23, 0xF74000
	032 Move X22, [X22+856]
	033 Move V9, [X8+684]
	034 Move X23, [X23+848]
	035 Move W20, W31
	036 Move S8, W31
	037 Move S10, 1
	038 Move X0, X19
	039 Move W1, W20
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Move X8, [X22]
	043 Compare X8, 0
	044 JumpIfEqual {84}
	045 Move W21, W0
	046 Move X0, X8
	047 Move W1, W31
	048 Move X2, X31
	049 Call String.get_Chars, X0, X1
	050 And W8, W21, 0xFFFF
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move S0, 0.5
	053 Move X0, X19
	054 Move W1, W20
	055 Move X2, X31
	056 Call String.get_Chars, X0, X1
	057 Move X8, [X23]
	058 Compare X8, 0
	059 JumpIfEqual {84}
	060 Move W21, W0
	061 Move X0, X8
	062 Move W1, W31
	063 Move X2, X31
	064 Call String.get_Chars, X0, X1
	065 And W8, W21, 0xFFFF
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction FCSEL not yet implemented."
	068 Move W8, [X19+16]
	069 Add W20, W20, 1
	070 Add S8, S8, S0
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move S8, W31
	073 Move V0, V8
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X30, [X31+32]
	079 Move X23, [X31+40]
	080 Move D9, [X31+16]
	081 Move D8, [X31+24]
	082 Move V10, [X31+80]
	083 Return V0
	084 Call 0x1C17F20

Method: System.String formatBC(System.String str, System.String color)

Disassembly:
	0x031AC8F0 LDR X8, [X8 + 0x18]
	0x031AC8F4 CBZ X8, 0x31ACAC4
	0x031AC8F8 LDR W9, [X8 + 0x18]
	0x031AC8FC CMP W9, W19
	0x031AC900 B.LS 0x31ACAC8
	0x031AC904 ADD X8, X8, X23, 0x3, LSL
	0x031AC908 LDR X8, [X8 + 0x20]
	0x031AC90C CBZ X8, 0x31ACAC4
	0x031AC910 CBZ X20, 0x31AC950
	0x031AC914 LDR X8, [X8 + 0xE8]
	0x031AC918 CBZ X8, 0x31ACAC4
	0x031AC91C LDR X8, [X8 + 0x78]
	0x031AC920 CBZ X8, 0x31ACAC4
	0x031AC924 ADRP X9, 0xF73000
	0x031AC928 LDR X9, [X9 + 0x3A0]
	0x031AC92C LDR X0, [X9]
	0x031AC930 LDP W9, W8, [X8 + 0x88]
	0x031AC934 LDR W10, [X0 + 0xE0]
	0x031AC938 ORR W20, W9, W8, 0x10
	0x031AC93C CBNZ W10, 0x31AC944
	0x031AC940 BL 0x1C16DFC
	0x031AC944 MOV W0, W20
	0x031AC948 BL 0x31ACB98
	0x031AC94C B 0x31ACA6C
	0x031AC950 ADRP X24, 0xF47000
	0x031AC954 LDR X24, [X24 + 0x598]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1230000
	007 Move X22, 0xF74000
	008 Move W8, [X21+3651]
	009 Move X22, [X22+688]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF74000
	017 Move X0, [X0+688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3651], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Call LeanTest.formatB, X0
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call LeanTest.formatC, X0, X1
	035 Return X0

Method: System.String formatB(System.String str)

Disassembly:
	0x031ABD8C LDR X1, [X8]
	0x031ABD90 BL 0x3C38A84
	0x031ABD94 ADRP X9, 0xF48000
	0x031ABD98 LDR X8, [X22]
	0x031ABD9C LDR X9, [X9 + 0x6C0]
	0x031ABDA0 LDR X8, [X8 + 0xB8]
	0x031ABDA4 LDR X0, [X9]
	0x031ABDA8 ADRP X9, 0xF74000
	0x031ABDAC LDR X9, [X9 + 0x388]
	0x031ABDB0 LDR X20, [X8 + 0x48]
	0x031ABDB4 LDR W10, [X0 + 0xE0]
	0x031ABDB8 LDR X21, [X9]
	0x031ABDBC CBNZ W10, 0x31ABDC4
	0x031ABDC0 BL 0x1C16DFC
	0x031ABDC4 MOV X0, X21
	0x031ABDC8 MOV X1, X31
	0x031ABDCC BL 0x338C698
	0x031ABDD0 CBZ X20, 0x31ABFF8
	0x031ABDD4 MOV X1, X0
	0x031ABDD8 MOV X0, X20
	0x031ABDDC MOV X2, X31
	0x031ABDE0 BL 0x3C356B4
	0x031ABDE4 LDR X8, [X22]
	0x031ABDE8 LDR X8, [X8 + 0xB8]
	0x031ABDEC LDR X0, [X8 + 0x48]
	0x031ABDF0 CBZ X0, 0x31ABFF8
	0x031ABDF4 MOVZ W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1231000
	007 Move X21, 0xF75000
	008 Move X22, 0xF75000
	009 Move W8, [X20+3652]
	010 Move X21, [X21+704]
	011 Move X22, [X22+712]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xF75000
	018 Move X0, [X0+704]
	019 Call 0x1C17CF4
	020 Move X0, 0xF75000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3652], W8
	025 Move X0, [X21]
	026 Move X2, [X22]
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X3, X31
	033 Move X30, [X31+48]
	034 Call String.Concat, X0, X1, X2
	035 Return X0

Method: System.String formatC(System.String str, System.String color)

Disassembly:
	0x031AC790 CMP X20, X9
	0x031AC794 B.CS 0x31AC7B8
	0x031AC798 ADD X8, X8, X20, 0x2, LSL
	0x031AC79C ADD X20, X20, 0x1
	0x031AC7A0 STR W31, [X8 + 0x20]
	0x031AC7A4 B 0x31AC748
	0x031AC7A8 LDP X20, X19, [X31 + 0x10]
	0x031AC7AC LDR X30, [X31], #0x20
	0x031AC7B0 RET
	0x031AC7B4 BL 0x1C16F20
	0x031AC7B8 BL 0x1C16F28
	0x031AC7BC STR X30, [X31 - 0x40]!
	0x031AC7C0 STP X24, X23, [X31 + 0x10]
	0x031AC7C4 STP X22, X21, [X31 + 0x20]
	0x031AC7C8 STP X20, X19, [X31 + 0x30]
	0x031AC7CC ADRP X20, 0x122F000
	0x031AC7D0 ADRP X22, 0xF49000
	0x031AC7D4 LDRB W8, [X20 + 0xE54]
	0x031AC7D8 LDR X22, [X22 + 0x5A8]
	0x031AC7DC MOV W19, W0
	0x031AC7E0 TBNZ X8, 0x0, 0x31AC810
	0x031AC7E4 ADRP X0, 0xF73000
	0x031AC7E8 LDR X0, [X0 + 0x3A0]
	0x031AC7EC BL 0x1C16CF4
	0x031AC7F0 ADRP X0, 0xF49000
	0x031AC7F4 LDR X0, [X0 + 0x5A8]
	0x031AC7F8 BL 0x1C16CF4
	0x031AC7FC ADRP X0, 0xF47000
	0x031AC800 LDR X0, [X0 + 0x598]
	0x031AC804 BL 0x1C16CF4
	0x031AC808 MOVZ W8, 0x1
	0x031AC80C STRB W8, [X20 + 0xE54]
	0x031AC810 LDR X0, [X22]
	0x031AC814 LDR W8, [X0 + 0xE0]
	0x031AC818 CBNZ W8, 0x31AC824
	0x031AC81C BL 0x1C16DFC
	0x031AC820 LDR X0, [X22]
	0x031AC824 LDR X8, [X0 + 0xB8]
	0x031AC828 LDR X8, [X8 + 0x18]
	0x031AC82C CBZ X8, 0x31ACAC4
	0x031AC830 LDR W9, [X8 + 0x18]
	0x031AC834 CMP W9, W19
	0x031AC838 B.LS 0x31ACAC8
	0x031AC83C SXTW X23, W19
	0x031AC840 ADD X9, X8, X23, 0x3, LSL
	0x031AC844 LDR X9, [X9 + 0x20]
	0x031AC848 CBZ X9, 0x31ACAC4
	0x031AC84C LDRB W9, [X9 + 0x10]
	0x031AC850 CBZ W9, 0x31ACAB0
	0x031AC854 LDR W9, [X0 + 0xE0]
	0x031AC858 CBNZ W9, 0x31AC870
	0x031AC85C BL 0x1C16DFC
	0x031AC860 LDR X0, [X22]
	0x031AC864 LDR X8, [X0 + 0xB8]
	0x031AC868 LDR X8, [X8 + 0x18]
	0x031AC86C CBZ X8, 0x31ACAC4
	0x031AC870 LDR W9, [X8 + 0x18]
	0x031AC874 CMP W9, W19
	0x031AC878 B.LS 0x31ACAC8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1230000
	007 Move X22, 0xF48000
	008 Move W8, [X21+3653]
	009 Move X22, [X22+2760]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xF48000
	017 Move X0, [X0+2760]
	018 Call 0x1C17CF4
	019 Move X0, 0xF6F000
	020 Move X0, [X0+536]
	021 Call 0x1C17CF4
	022 Move X0, 0xF4A000
	023 Move X0, [X0+608]
	024 Call 0x1C17CF4
	025 Move X0, 0xF50000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3653], W8
	030 Move X0, [X22]
	031 Move W1, 5
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {65}
	035 Move W8, [X0+24]
	036 Compare W8, 0
	037 JumpIfEqual {64}
	038 Move X9, 0xF50000
	039 Move X9, [X9+2504]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, [X9]
	042 Move [X0+32], X9
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X0+40], X20
	045 Move X9, 0xF4A000
	046 Move X9, [X9+608]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, [X9]
	049 Move [X0+48], X9
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X0+56], X19
	052 Move X8, 0xF6F000
	053 Move X8, [X8+536]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X1, X31
	059 Move X8, [X8]
	060 Move [X0+64], X8
	061 Move X30, [X31+48]
	062 Call String.Concat, X0
	063 Return X0
	064 Call 0x1C17F28
	065 Call 0x1C17F20

Method: System.Void overview()

Disassembly:
	0x031ABDF8 MOV X2, X31
	0x031ABDFC BL 0x3C35870
	0x031ABE00 LDR X8, [X22]
	0x031ABE04 LDR X8, [X8 + 0xB8]
	0x031ABE08 LDR X0, [X8 + 0x48]
	0x031ABE0C CBZ X0, 0x31ABFF8
	0x031ABE10 MOVZ W1, 0x3D
	0x031ABE14 MOV X2, X31
	0x031ABE18 BL 0x3C396EC
	0x031ABE1C ADRP X9, 0xF48000
	0x031ABE20 LDR X8, [X22]
	0x031ABE24 LDR X9, [X9 + 0x598]
	0x031ABE28 LDR X8, [X8 + 0xB8]
	0x031ABE2C LDR X0, [X9]
	0x031ABE30 LDR X20, [X8 + 0x48]
	0x031ABE34 LDR W9, [X0 + 0xE0]
	0x031ABE38 CBNZ W9, 0x31ABE40
	0x031ABE3C BL 0x1C16DFC
	0x031ABE40 MOV X0, X20
	0x031ABE44 MOV X1, X31
	0x031ABE48 BL 0x3C39674
	0x031ABE4C ADRP X23, 0xF74000
	0x031ABE50 LDR X23, [X23 + 0x368]
	0x031ABE54 MOV X21, X31
	0x031ABE58 LDR X0, [X22]
	0x031ABE5C LDR W8, [X0 + 0xE0]
	0x031ABE60 CBNZ W8, 0x31ABE6C
	0x031ABE64 BL 0x1C16DFC
	0x031ABE68 LDR X0, [X22]
	0x031ABE6C LDR X8, [X0 + 0xB8]
	0x031ABE70 LDRSW X9, [X8 + 0x3C]
	0x031ABE74 CMP X21, X9
	0x031ABE78 B.GE 0x31ABEE0
	0x031ABE7C LDR W9, [X0 + 0xE0]
	0x031ABE80 CBNZ W9, 0x31ABE90
	0x031ABE84 BL 0x1C16DFC
	0x031ABE88 LDR X8, [X22]
	0x031ABE8C LDR X8, [X8 + 0xB8]
	0x031ABE90 LDR X0, [X23]
	0x031ABE94 LDR X24, [X8 + 0x18]
	0x031ABE98 BL 0x1C16F10
	0x031ABE9C MOV X1, X31
	0x031ABEA0 MOV X20, X0
	0x031ABEA4 BL 0x31BFBE4
	0x031ABEA8 CBZ X24, 0x31ABFF8
	0x031ABEAC CBZ X20, 0x31ABEC4
	0x031ABEB0 LDR X8, [X24]
	0x031ABEB4 MOV X0, X20
	0x031ABEB8 LDR X1, [X8 + 0x40]
	0x031ABEBC BL 0x1C16E00
	0x031ABEC0 CBZ X0, 0x31AC000
	0x031ABEC4 LDR W8, [X24 + 0x18]
	0x031ABEC8 CMP X21, X8
	0x031ABECC B.CS 0x31ABFFC
	0x031ABED0 ADD X8, X24, X21, 0x3, LSL
	0x031ABED4 ADD X21, X21, 0x1
	0x031ABED8 STR X20, [X8 + 0x20]
	0x031ABEDC B 0x31ABE58
	0x031ABEE0 ADRP X8, 0xF74000
	0x031ABEE4 LDR X8, [X8 + 0x390]
	0x031ABEE8 LDR X0, [X8]
	0x031ABEEC BL 0x1C16F10
	0x031ABEF0 ADRP X8, 0xF74000
	0x031ABEF4 LDR X8, [X8 + 0x380]
	0x031ABEF8 MOV X1, X31
	0x031ABEFC MOV X3, X31
	0x031ABF00 MOV X20, X0
	0x031ABF04 LDR X2, [X8]
	0x031ABF08 BL 0x2726AA4
	0x031ABF0C ADRP X8, 0xF48000
	0x031ABF10 LDR X8, [X8 + 0xC90]
	0x031ABF14 LDR X0, [X8]
	0x031ABF18 LDR W8, [X0 + 0xE0]
	0x031ABF1C CBNZ W8, 0x31ABF24
	0x031ABF20 BL 0x1C16DFC
	0x031ABF24 MOV X0, X20
	0x031ABF28 MOV X1, X31
	0x031ABF2C BL 0x3C47624
	0x031ABF30 ADRP X8, 0xF74000
	0x031ABF34 LDR X8, [X8 + 0x370]
	0x031ABF38 MOV W1, W19
	0x031ABF3C LDR X0, [X8]
	0x031ABF40 BL 0x1C16D6C
	0x031ABF44 LDR X8, [X22]
	0x031ABF48 MOV X20, X0
	0x031ABF4C LDR W9, [X8 + 0xE0]
	0x031ABF50 CBNZ W9, 0x31ABF60
	0x031ABF54 MOV X0, X8
	0x031ABF58 BL 0x1C16DFC
	0x031ABF5C LDR X8, [X22]
	0x031ABF60 LDR X9, [X8 + 0xB8]
	0x031ABF64 CMP W19, 0x1
	0x031ABF68 STR X20, [X9 + 0x10]
	0x031ABF6C B.LT 0x31ABCCC
	0x031ABF70 ADRP X23, 0xF74000
	0x031ABF74 LDR X23, [X23 + 0x378]
	0x031ABF78 MOV W9, W19
	0x031ABF7C MOV X20, X31
	0x031ABF80 SUB X21, X9, 0x1
	0x031ABF84 LDR W9, [X8 + 0xE0]
	0x031ABF88 CBNZ W9, 0x31ABF98
	0x031ABF8C MOV X0, X8
	0x031ABF90 BL 0x1C16DFC
	0x031ABF94 LDR X8, [X22]
	0x031ABF98 LDR X8, [X8 + 0xB8]
	0x031ABF9C LDR X0, [X23]
	0x031ABFA0 LDR X24, [X8 + 0x10]
	0x031ABFA4 BL 0x1C16F10
	0x031ABFA8 MOV X1, X31
	0x031ABFAC MOV X19, X0
	0x031ABFB0 BL 0x31CCC68
	0x031ABFB4 CBZ X24, 0x31ABFF8
	0x031ABFB8 CBZ X19, 0x31ABFD0
	0x031ABFBC LDR X8, [X24]
	0x031ABFC0 MOV X0, X19
	0x031ABFC4 LDR X1, [X8 + 0x40]
	0x031ABFC8 BL 0x1C16E00
	0x031ABFCC CBZ X0, 0x31AC000
	0x031ABFD0 LDR W8, [X24 + 0x18]
	0x031ABFD4 CMP X20, X8
	0x031ABFD8 B.CS 0x31ABFFC
	0x031ABFDC ADD X8, X24, X20, 0x3, LSL
	0x031ABFE0 CMP X21, X20
	0x031ABFE4 STR X19, [X8 + 0x20]
	0x031ABFE8 B.EQ 0x31ABCCC
	0x031ABFEC LDR X8, [X22]
	0x031ABFF0 ADD X20, X20, 0x1
	0x031ABFF4 B 0x31ABF84
	0x031ABFF8 BL 0x1C16F20
	0x031ABFFC BL 0x1C16F28
	0x031AC000 BL 0x1C16F44
	0x031AC004 MOV X1, X31
	0x031AC008 BL 0x1C16DEC
	0x031AC00C STP X30, X21, [X31 - 0x20]!
	0x031AC010 STP X20, X19, [X31 + 0x10]
	0x031AC014 ADRP X20, 0x122F000
	0x031AC018 ADRP X19, 0xF49000
	0x031AC01C LDRB W8, [X20 + 0xE4E]
	0x031AC020 LDR X19, [X19 + 0x5A8]
	0x031AC024 TBNZ X8, 0x0, 0x31AC048
	0x031AC028 ADRP X0, 0xF49000
	0x031AC02C LDR X0, [X0 + 0x5A8]
	0x031AC030 BL 0x1C16CF4
	0x031AC034 ADRP X0, 0xF47000
	0x031AC038 LDR X0, [X0 + 0x598]
	0x031AC03C BL 0x1C16CF4
	0x031AC040 MOVZ W8, 0x1
	0x031AC044 STRB W8, [X20 + 0xE4E]
	0x031AC048 LDR X0, [X19]
	0x031AC04C LDR W8, [X0 + 0xE0]
	0x031AC050 CBNZ W8, 0x31AC05C
	0x031AC054 BL 0x1C16DFC
	0x031AC058 LDR X0, [X19]
	0x031AC05C LDR X8, [X0 + 0xB8]
	0x031AC060 LDR X8, [X8 + 0x18]
	0x031AC064 CBZ X8, 0x31AC104
	0x031AC068 MOV W20, W31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x1231000
	009 Move X21, 0xF75000
	010 Move W8, [X19+3654]
	011 Move X21, [X21+688]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0xF49000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xF75000
	020 Move X0, [X0+688]
	021 Call 0x1C17CF4
	022 Move X0, 0xF49000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move X0, 0xF75000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move X0, 0xF49000
	029 Move X0, [X0+3544]
	030 Call 0x1C17CF4
	031 Move X0, 0xF75000
	032 Move X0, [X0+728]
	033 Call 0x1C17CF4
	034 Move X0, 0xF75000
	035 Move X0, [X0+736]
	036 Call 0x1C17CF4
	037 Move X0, 0xF75000
	038 Move X0, [X0+744]
	039 Call 0x1C17CF4
	040 Move X0, 0xF49000
	041 Move X0, [X0+2440]
	042 Call 0x1C17CF4
	043 Move X0, 0xF75000
	044 Move X0, [X0+752]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+3654], W8
	048 Move X0, [X21]
	049 Move [X31+12], W31
	050 Move X22, 0xF49000
	051 Move W8, [X0+224]
	052 Move X22, [X22+2440]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Move X8, [X0+184]
	058 Move X20, 0xF49000
	059 Move W11, 1
	060 Add X0, X31, 12
	061 Move W9, [X8]
	062 Move W10, [X8+8]
	063 Move X20, [X20+2760]
	064 Move X1, X31
	065 Move [X8+17], W11
	066 Subtract W23, W9, W10
	067 Move [X31+12], W23
	068 Call Int32.ToString, X0
	069 Move X8, [X22]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X21]
	074 Move X23, 0xF75000
	075 Move W8, [X0+224]
	076 Move X23, [X23+728]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X1, [X23]
	081 Move X0, X19
	082 Call LeanTest.formatBC, X0, X1
	083 Move X19, X0
	084 Move X0, [X20]
	085 Move X23, 0xF75000
	086 Move X23, [X23+736]
	087 Move W1, 6
	088 Call 0x1C17D6C
	089 Move X8, [X21]
	090 Move X20, X0
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X0, [X23]
	097 Call LeanTest.formatB, X0
	098 Compare X20, 0
	099 JumpIfEqual {167}
	100 Move W8, [X20+24]
	101 Compare W8, 0
	102 JumpIfEqual {166}
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X20+32], X0
	105 Move X8, 0xF75000
	106 Move X8, [X8+752]
	107 Move X23, 0xF75000
	108 Move X1, X31
	109 Move X8, [X8]
	110 Move [X20+40], X8
	111 Move X8, [X21]
	112 Move X8, [X8+184]
	113 Move X23, [X23+720]
	114 Add X0, X8, 8
	115 Call Int32.ToString, X0
	116 Move X8, [X21]
	117 Move X9, [X22]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W10, [X8+224]
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 Compare W10, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Move X1, [X23]
	126 Move X0, X21
	127 Call LeanTest.formatBC, X0, X1
	128 Move W8, [X20+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move [X20+48], X0
	132 Move X9, 0xF75000
	133 Move X9, [X9+744]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X9, [X9]
	136 Move [X20+56], X9
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move [X20+64], X19
	139 Move X8, 0xF48000
	140 Move X8, [X8+3544]
	141 Move X19, 0xF48000
	142 Move X0, X20
	143 Move X1, X31
	144 Move X8, [X8]
	145 Move X19, [X19+2600]
	146 Move [X20+72], X8
	147 Call String.Concat, X0
	148 Move X8, [X19]
	149 Move X19, X0
	150 Move W9, [X8+224]
	151 Compare W9, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X8
	154 Call 0x1C17DFC
	155 Move X0, X19
	156 Move X1, X31
	157 Call Debug.Log, X0
	158 Move X20, [X31+48]
	159 Move X19, [X31+56]
	160 Move X22, [X31+32]
	161 Move X21, [X31+40]
	162 Move X30, [X31+16]
	163 Move X23, [X31+24]
	164 Add X31, X31, 64
	165 Return 
	166 Call 0x1C17F28
	167 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x031AC958 LDR X20, [X8 + 0x58]
	0x031AC95C LDR X0, [X24]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x031AC960 LDR W9, [X0 + 0xE0]
	0x031AC964 CBNZ W9, 0x31AC96C
	0x031AC968 BL 0x1C16DFC
	0x031AC96C MOV X0, X20
	0x031AC970 MOV X1, X31
	0x031AC974 MOV X2, X31
	0x031AC978 BL 0x3C354F8
	0x031AC97C TBZ X0, 0x0, 0x31ACA6C
	0x031AC980 LDR X0, [X22]
	0x031AC984 LDR W8, [X0 + 0xE0]
	0x031AC988 CBNZ W8, 0x31AC994
	0x031AC98C BL 0x1C16DFC
	0x031AC990 LDR X0, [X22]
	0x031AC994 LDR X8, [X0 + 0xB8]
	0x031AC998 LDR X8, [X8 + 0x18]
	0x031AC99C CBZ X8, 0x31ACAC4
	0x031AC9A0 LDR W9, [X8 + 0x18]
	0x031AC9A4 CMP W9, W19
	0x031AC9A8 B.LS 0x31ACAC8
	0x031AC9AC ADD X8, X8, X23, 0x3, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1230000
	005 Move X20, 0xF74000
	006 Move W8, [X19+3655]
	007 Move X20, [X20+688]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF74000
	013 Move X0, [X0+688]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3655], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X9, 0x41700000
	021 Move X8, [X8+184]
	022 Move [X8], X31
	023 Move [X8+8], X9
	024 NotImplemented "Instruction STRH not yet implemented."
	025 Move X30, [X31+32]
	026 Return 

