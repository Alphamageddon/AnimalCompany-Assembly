Type: UnityEngine.TextCore.Text.TextGeneratorUtilities

Method: System.Boolean Approximately(System.Single a, System.Single b)

Disassembly:
	0x03CC6918 LDR X8, [X24]
	0x03CC691C CBZ X8, 0x3CC69E0
	0x03CC6920 LDRSW X9, [X23]
	0x03CC6924 LDR W10, [X8 + 0x18]
	0x03CC6928 CMP W9, W10
	0x03CC692C B.CS 0x3CC69DC
	0x03CC6930 MOV W21, W31
	0x03CC6934 ADD X8, X8, X9, 0x4, LSL
	0x03CC6938 MOVZ W9, 0xA
	0x03CC693C B 0x3CC69AC
	0x03CC6940 TBZ X21, 0x0, 0x3CC6988
	0x03CC6944 MOVZ W21, 0x1

ISIL:
	001 Move X8, -52277248
	002 Move X9, -52281344
	003 Move V2, [X8+752]
	004 Move V3, [X9+3880]
	005 Add S2, S1, S2
	006 Add S1, S1, S3
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 And W0, W8, W9
	012 Return X0

Method: UnityEngine.Color32 HexCharsToColor(System.Char[] hexChars, System.Int32 tagCount)

Disassembly:
	0x03CC6948 MOVZ W0, 0x3C
	0x03CC694C LDR X8, [X24]
	0x03CC6950 CBZ X8, 0x3CC69E0
	0x03CC6954 LDRSW X9, [X23]
	0x03CC6958 LDR W10, [X8 + 0x18]
	0x03CC695C CMP W9, W10
	0x03CC6960 B.CS 0x3CC69DC
	0x03CC6964 ADD X8, X8, X9, 0x4, LSL
	0x03CC6968 STR W0, [X8 + 0x24]
	0x03CC696C LDR W8, [X23]
	0x03CC6970 ADD W8, W8, 0x1
	0x03CC6974 STR W8, [X23]
	0x03CC6978 ADD W25, W25, 0x1
	0x03CC697C CMP W25, W26
	0x03CC6980 B.LT 0x3CC6644
	0x03CC6984 B 0x3CC69BC
	0x03CC6988 LDR X8, [X24]
	0x03CC698C CBZ X8, 0x3CC69E0
	0x03CC6990 LDRSW X9, [X23]
	0x03CC6994 LDR W10, [X8 + 0x18]
	0x03CC6998 CMP W9, W10
	0x03CC699C B.CS 0x3CC69DC
	0x03CC69A0 MOV W21, W31
	0x03CC69A4 ADD X8, X8, X9, 0x4, LSL
	0x03CC69A8 MOVZ W9, 0xD
	0x03CC69AC STR W9, [X8 + 0x24]
	0x03CC69B0 LDR W8, [X23]
	0x03CC69B4 ADD W25, W25, 0x3
	0x03CC69B8 B 0x3CC6970
	0x03CC69BC LDP X20, X19, [X31 + 0x80]
	0x03CC69C0 LDP X22, X21, [X31 + 0x70]
	0x03CC69C4 LDP X24, X23, [X31 + 0x60]
	0x03CC69C8 LDP X26, X25, [X31 + 0x50]
	0x03CC69CC LDP X28, X27, [X31 + 0x40]
	0x03CC69D0 LDP X29, X30, [X31 + 0x30]
	0x03CC69D4 ADD X31, X31, 0x90
	0x03CC69D8 RET
	0x03CC69DC BL 0x1C16F28
	0x03CC69E0 BL 0x1C16F20
	0x03CC69E4 STP X30, X25, [X31 - 0x40]!
	0x03CC69E8 STP X24, X23, [X31 + 0x10]
	0x03CC69EC STP X22, X21, [X31 + 0x20]
	0x03CC69F0 STP X20, X19, [X31 + 0x30]
	0x03CC69F4 ADRP X25, 0x721000
	0x03CC69F8 LDRB W8, [X25 + 0x35A]
	0x03CC69FC MOV X20, X5
	0x03CC6A00 MOV X21, X4
	0x03CC6A04 MOV X19, X3
	0x03CC6A08 MOV X22, X2
	0x03CC6A0C MOV X23, X1
	0x03CC6A10 MOV X24, X0
	0x03CC6A14 TBNZ X8, 0x0, 0x3CC6A38
	0x03CC6A18 ADRP X0, 0x49B000
	0x03CC6A1C LDR X0, [X0 + 0xB48]
	0x03CC6A20 BL 0x1C16CF4
	0x03CC6A24 ADRP X0, 0x49B000
	0x03CC6A28 LDR X0, [X0 + 0xDA0]
	0x03CC6A2C BL 0x1C16CF4
	0x03CC6A30 MOVZ W8, 0x1
	0x03CC6A34 STRB W8, [X25 + 0x35A]
	0x03CC6A38 CBZ X24, 0x3CC6AC0
	0x03CC6A3C LDR W8, [X19]
	0x03CC6A40 ADD W8, W8, 0x1
	0x03CC6A44 STR W8, [X19]
	0x03CC6A48 LDR X9, [X21]
	0x03CC6A4C CBZ X9, 0x3CC6AD4
	0x03CC6A50 LDR W10, [X9 + 0x18]
	0x03CC6A54 CMP W8, W10
	0x03CC6A58 B.CS 0x3CC6AD8
	0x03CC6A5C ADRP X10, 0x49B000
	0x03CC6A60 LDR X10, [X10 + 0xDA0]
	0x03CC6A64 ADRP X25, 0x49B000
	0x03CC6A68 LDR X25, [X25 + 0xB48]
	0x03CC6A6C LDR W1, [X24 + 0x18]
	0x03CC6A70 LDR X2, [X10]
	0x03CC6A74 SXTW X8, W8
	0x03CC6A78 ADD X8, X9, X8, 0x5, LSL
	0x03CC6A7C ADD X0, X8, 0x20
	0x03CC6A80 BL 0x26E1C34
	0x03CC6A84 LDR X0, [X25]
	0x03CC6A88 LDR X24, [X24 + 0x38]
	0x03CC6A8C LDR W8, [X0 + 0xE0]
	0x03CC6A90 CBNZ W8, 0x3CC6A98
	0x03CC6A94 BL 0x1C16DFC
	0x03CC6A98 MOV X0, X23
	0x03CC6A9C MOV X1, X22
	0x03CC6AA0 MOV X2, X24
	0x03CC6AA4 MOV X3, X19
	0x03CC6AA8 MOV X4, X21
	0x03CC6AAC MOV X5, X20
	0x03CC6AB0 BL 0x3CC6550
	0x03CC6AB4 LDR W8, [X19]
	0x03CC6AB8 SUB W8, W8, 0x1
	0x03CC6ABC STR W8, [X19]
	0x03CC6AC0 LDP X20, X19, [X31 + 0x30]
	0x03CC6AC4 LDP X22, X21, [X31 + 0x20]
	0x03CC6AC8 LDP X24, X23, [X31 + 0x10]
	0x03CC6ACC LDP X30, X25, [X31], #0x40
	0x03CC6AD0 RET
	0x03CC6AD4 BL 0x1C16F20
	0x03CC6AD8 BL 0x1C16F28
	0x03CC6ADC LDR X0, [X0 + 0x38]
	0x03CC6AE0 RET
	0x03CC6AE4 STR X30, [X31 - 0x60]!
	0x03CC6AE8 STP X28, X27, [X31 + 0x10]
	0x03CC6AEC STP X26, X25, [X31 + 0x20]
	0x03CC6AF0 STP X24, X23, [X31 + 0x30]
	0x03CC6AF4 STP X22, X21, [X31 + 0x40]
	0x03CC6AF8 STP X20, X19, [X31 + 0x50]
	0x03CC6AFC ADRP X28, 0x721000
	0x03CC6B00 ADRP X27, 0x49B000
	0x03CC6B04 LDRB W8, [X28 + 0x35B]
	0x03CC6B08 LDR X27, [X27 + 0xB48]
	0x03CC6B0C MOV X20, X7
	0x03CC6B10 MOV X21, X6
	0x03CC6B14 MOV X19, X5
	0x03CC6B18 MOV X22, X4
	0x03CC6B1C MOV X23, X3
	0x03CC6B20 MOV X24, X2
	0x03CC6B24 MOV W26, W1
	0x03CC6B28 MOV X25, X0
	0x03CC6B2C TBNZ X8, 0x0, 0x3CC6B50
	0x03CC6B30 ADRP X0, 0x49B000
	0x03CC6B34 LDR X0, [X0 + 0xB48]
	0x03CC6B38 BL 0x1C16CF4
	0x03CC6B3C ADRP X0, 0x49B000
	0x03CC6B40 LDR X0, [X0 + 0xDA0]
	0x03CC6B44 BL 0x1C16CF4
	0x03CC6B48 MOVZ W8, 0x1
	0x03CC6B4C STRB W8, [X28 + 0x35B]
	0x03CC6B50 LDR X0, [X27]
	0x03CC6B54 LDR W8, [X0 + 0xE0]
	0x03CC6B58 CBNZ W8, 0x3CC6B60
	0x03CC6B5C BL 0x1C16DFC
	0x03CC6B60 ADD W1, W26, 0x7
	0x03CC6B64 MOV X0, X25
	0x03CC6B68 MOV X2, X24
	0x03CC6B6C BL 0x3CC6C3C
	0x03CC6B70 LDR X8, [X20]
	0x03CC6B74 MOV W1, W0
	0x03CC6B78 MOV X0, X8
	0x03CC6B7C BL 0x3CC6D28
	0x03CC6B80 CBZ X0, 0x3CC6C18
	0x03CC6B84 LDR W8, [X24]
	0x03CC6B88 CBZ W8, 0x3CC6C14
	0x03CC6B8C LDR W8, [X19]
	0x03CC6B90 ADD W8, W8, 0x1
	0x03CC6B94 STR W8, [X19]
	0x03CC6B98 LDR X9, [X21]
	0x03CC6B9C CBZ X9, 0x3CC6C34
	0x03CC6BA0 LDR W10, [X9 + 0x18]
	0x03CC6BA4 CMP W8, W10
	0x03CC6BA8 B.CS 0x3CC6C38
	0x03CC6BAC ADRP X10, 0x49B000
	0x03CC6BB0 LDR W1, [X0 + 0x18]
	0x03CC6BB4 LDR X10, [X10 + 0xDA0]
	0x03CC6BB8 SXTW X8, W8
	0x03CC6BBC ADD X8, X9, X8, 0x5, LSL
	0x03CC6BC0 MOV X25, X0
	0x03CC6BC4 LDR X2, [X10]
	0x03CC6BC8 ADD X0, X8, 0x20
	0x03CC6BCC BL 0x26E1C34
	0x03CC6BD0 LDR X0, [X27]
	0x03CC6BD4 LDR X24, [X25 + 0x30]
	0x03CC6BD8 LDR W8, [X0 + 0xE0]
	0x03CC6BDC CBNZ W8, 0x3CC6BE4
	0x03CC6BE0 BL 0x1C16DFC
	0x03CC6BE4 MOV X0, X23
	0x03CC6BE8 MOV X1, X22
	0x03CC6BEC MOV X2, X24
	0x03CC6BF0 MOV X3, X19
	0x03CC6BF4 MOV X4, X21
	0x03CC6BF8 MOV X5, X20
	0x03CC6BFC BL 0x3CC6550
	0x03CC6C00 LDR W8, [X19]
	0x03CC6C04 MOVZ W0, 0x1
	0x03CC6C08 SUB W8, W8, 0x1
	0x03CC6C0C STR W8, [X19]
	0x03CC6C10 B 0x3CC6C18
	0x03CC6C14 MOV W0, W31
	0x03CC6C18 LDP X20, X19, [X31 + 0x50]
	0x03CC6C1C LDP X22, X21, [X31 + 0x40]
	0x03CC6C20 LDP X24, X23, [X31 + 0x30]
	0x03CC6C24 LDP X26, X25, [X31 + 0x20]
	0x03CC6C28 LDP X28, X27, [X31 + 0x10]
	0x03CC6C2C LDR X30, [X31], #0x60
	0x03CC6C30 RET
	0x03CC6C34 BL 0x1C16F20
	0x03CC6C38 BL 0x1C16F28
	0x03CC6C3C STR X30, [X31 - 0x40]!
	0x03CC6C40 STP X24, X23, [X31 + 0x10]
	0x03CC6C44 STP X22, X21, [X31 + 0x20]
	0x03CC6C48 STP X20, X19, [X31 + 0x30]
	0x03CC6C4C ADRP X22, 0x721000
	0x03CC6C50 LDRB W8, [X22 + 0x363]
	0x03CC6C54 MOV X19, X2
	0x03CC6C58 MOV W20, W1
	0x03CC6C5C MOV X21, X0
	0x03CC6C60 TBNZ X8, 0x0, 0x3CC6C78
	0x03CC6C64 ADRP X0, 0x49B000
	0x03CC6C68 LDR X0, [X0 + 0xB48]
	0x03CC6C6C BL 0x1C16CF4
	0x03CC6C70 MOVZ W8, 0x1
	0x03CC6C74 STRB W8, [X22 + 0x363]
	0x03CC6C78 STR W31, [X19]
	0x03CC6C7C LDR X8, [X21]
	0x03CC6C80 CBZ X8, 0x3CC6D08
	0x03CC6C84 ADRP X24, 0x49B000
	0x03CC6C88 LDR X24, [X24 + 0xB48]
	0x03CC6C8C MOV W22, W31
	0x03CC6C90 LDR W8, [X8 + 0x18]
	0x03CC6C94 CMP W20, W8
	0x03CC6C98 B.GE 0x3CC6D10
	0x03CC6C9C MOV X0, X21
	0x03CC6CA0 MOV W1, W20
	0x03CC6CA4 BL 0x3CC5394
	0x03CC6CA8 CMP W0, 0x22
	0x03CC6CAC B.EQ 0x3CC6CFC
	0x03CC6CB0 MOV X0, X21
	0x03CC6CB4 MOV W1, W20
	0x03CC6CB8 BL 0x3CC5394
	0x03CC6CBC CMP W0, 0x3E
	0x03CC6CC0 B.EQ 0x3CC6D0C
	0x03CC6CC4 MOV X0, X21
	0x03CC6CC8 MOV W1, W20
	0x03CC6CCC BL 0x3CC5394
	0x03CC6CD0 LDR X8, [X24]
	0x03CC6CD4 MOV W23, W0
	0x03CC6CD8 LDR W9, [X8 + 0xE0]
	0x03CC6CDC CBNZ W9, 0x3CC6CE8
	0x03CC6CE0 MOV X0, X8
	0x03CC6CE4 BL 0x1C16DFC
	0x03CC6CE8 MOV W0, W23
	0x03CC6CEC BL 0x3CC772C
	0x03CC6CF0 ADD W8, W22, W22, 0x5, LSL
	0x03CC6CF4 AND W9, W0, 0xFFFF
	0x03CC6CF8 EOR W22, W8, W9, 0x0
	0x03CC6CFC LDR X8, [X21]
	0x03CC6D00 ADD W20, W20, 0x1
	0x03CC6D04 CBNZ X8, 0x3CC6C90
	0x03CC6D08 BL 0x1C16F20
	0x03CC6D0C STR W20, [X19]
	0x03CC6D10 MOV W0, W22
	0x03CC6D14 LDP X20, X19, [X31 + 0x30]
	0x03CC6D18 LDP X22, X21, [X31 + 0x20]
	0x03CC6D1C LDP X24, X23, [X31 + 0x10]
	0x03CC6D20 LDR X30, [X31], #0x40
	0x03CC6D24 RET
	0x03CC6D28 STR X30, [X31 - 0x30]!
	0x03CC6D2C STP X22, X21, [X31 + 0x10]
	0x03CC6D30 STP X20, X19, [X31 + 0x20]
	0x03CC6D34 ADRP X21, 0x721000
	0x03CC6D38 LDRB W8, [X21 + 0x361]
	0x03CC6D3C MOV W19, W1
	0x03CC6D40 MOV X20, X0
	0x03CC6D44 TBNZ X8, 0x0, 0x3CC6D5C
	0x03CC6D48 ADRP X0, 0x42D000
	0x03CC6D4C LDR X0, [X0 + 0x598]
	0x03CC6D50 BL 0x1C16CF4
	0x03CC6D54 MOVZ W8, 0x1
	0x03CC6D58 STRB W8, [X21 + 0x361]
	0x03CC6D5C CBZ X20, 0x3CC6E08
	0x03CC6D60 ADRP X22, 0x42D000
	0x03CC6D64 LDR X22, [X22 + 0x598]
	0x03CC6D68 LDR X21, [X20 + 0x58]
	0x03CC6D6C LDR X0, [X22]
	0x03CC6D70 LDR W8, [X0 + 0xE0]
	0x03CC6D74 CBNZ W8, 0x3CC6D7C
	0x03CC6D78 BL 0x1C16DFC
	0x03CC6D7C MOV X0, X21
	0x03CC6D80 MOV X1, X31
	0x03CC6D84 MOV X2, X31
	0x03CC6D88 BL 0x3C354F8
	0x03CC6D8C TBZ X0, 0x0, 0x3CC6DA4
	0x03CC6D90 CBZ X21, 0x3CC6E08
	0x03CC6D94 MOV X0, X21
	0x03CC6D98 MOV W1, W19
	0x03CC6D9C BL 0x3CC76A4
	0x03CC6DA0 CBNZ X0, 0x3CC6DF8
	0x03CC6DA4 LDR X8, [X20 + 0x68]
	0x03CC6DA8 CBZ X8, 0x3CC6E08
	0x03CC6DAC LDR X0, [X22]
	0x03CC6DB0 LDR X20, [X8 + 0x68]
	0x03CC6DB4 LDR W9, [X0 + 0xE0]
	0x03CC6DB8 CBNZ W9, 0x3CC6DC0
	0x03CC6DBC BL 0x1C16DFC
	0x03CC6DC0 MOV X0, X20
	0x03CC6DC4 MOV X1, X31
	0x03CC6DC8 MOV X2, X31
	0x03CC6DCC BL 0x3C354F8
	0x03CC6DD0 MOV W8, W0
	0x03CC6DD4 MOV X0, X31
	0x03CC6DD8 TBZ X8, 0x0, 0x3CC6DF8
	0x03CC6DDC CBZ X20, 0x3CC6E08
	0x03CC6DE0 MOV X0, X20
	0x03CC6DE4 MOV W1, W19
	0x03CC6DE8 LDP X20, X19, [X31 + 0x20]
	0x03CC6DEC LDP X22, X21, [X31 + 0x10]
	0x03CC6DF0 LDR X30, [X31], #0x30
	0x03CC6DF4 B 0x3CC76A4
	0x03CC6DF8 LDP X20, X19, [X31 + 0x20]
	0x03CC6DFC LDP X22, X21, [X31 + 0x10]
	0x03CC6E00 LDR X30, [X31], #0x30
	0x03CC6E04 RET
	0x03CC6E08 BL 0x1C16F20
	0x03CC6E0C STR X30, [X31 - 0x60]!
	0x03CC6E10 STP X28, X27, [X31 + 0x10]
	0x03CC6E14 STP X26, X25, [X31 + 0x20]
	0x03CC6E18 STP X24, X23, [X31 + 0x30]
	0x03CC6E1C STP X22, X21, [X31 + 0x40]
	0x03CC6E20 STP X20, X19, [X31 + 0x50]
	0x03CC6E24 ADRP X28, 0x721000
	0x03CC6E28 ADRP X27, 0x49B000
	0x03CC6E2C LDRB W8, [X28 + 0x35C]
	0x03CC6E30 LDR X27, [X27 + 0xB48]
	0x03CC6E34 MOV X20, X7
	0x03CC6E38 MOV X21, X6
	0x03CC6E3C MOV X19, X5
	0x03CC6E40 MOV X22, X4
	0x03CC6E44 MOV X23, X3
	0x03CC6E48 MOV X24, X2
	0x03CC6E4C MOV W26, W1
	0x03CC6E50 MOV X25, X0
	0x03CC6E54 TBNZ X8, 0x0, 0x3CC6E78
	0x03CC6E58 ADRP X0, 0x49B000
	0x03CC6E5C LDR X0, [X0 + 0xB48]
	0x03CC6E60 BL 0x1C16CF4
	0x03CC6E64 ADRP X0, 0x49B000
	0x03CC6E68 LDR X0, [X0 + 0xDA0]
	0x03CC6E6C BL 0x1C16CF4
	0x03CC6E70 MOVZ W8, 0x1
	0x03CC6E74 STRB W8, [X28 + 0x35C]
	0x03CC6E78 LDR X0, [X27]
	0x03CC6E7C LDR W8, [X0 + 0xE0]
	0x03CC6E80 CBNZ W8, 0x3CC6E88
	0x03CC6E84 BL 0x1C16DFC
	0x03CC6E88 ADD W1, W26, 0x7
	0x03CC6E8C MOV X0, X25
	0x03CC6E90 MOV X2, X24
	0x03CC6E94 BL 0x3CC6F64
	0x03CC6E98 LDR X8, [X20]
	0x03CC6E9C MOV W1, W0
	0x03CC6EA0 MOV X0, X8
	0x03CC6EA4 BL 0x3CC6D28
	0x03CC6EA8 CBZ X0, 0x3CC6F40
	0x03CC6EAC LDR W8, [X24]
	0x03CC6EB0 CBZ W8, 0x3CC6F3C
	0x03CC6EB4 LDR W8, [X19]
	0x03CC6EB8 ADD W8, W8, 0x1
	0x03CC6EBC STR W8, [X19]
	0x03CC6EC0 LDR X9, [X21]
	0x03CC6EC4 CBZ X9, 0x3CC6F5C
	0x03CC6EC8 LDR W10, [X9 + 0x18]
	0x03CC6ECC CMP W8, W10
	0x03CC6ED0 B.CS 0x3CC6F60
	0x03CC6ED4 ADRP X10, 0x49B000
	0x03CC6ED8 LDR W1, [X0 + 0x18]
	0x03CC6EDC LDR X10, [X10 + 0xDA0]
	0x03CC6EE0 SXTW X8, W8
	0x03CC6EE4 ADD X8, X9, X8, 0x5, LSL
	0x03CC6EE8 MOV X25, X0
	0x03CC6EEC LDR X2, [X10]
	0x03CC6EF0 ADD X0, X8, 0x20
	0x03CC6EF4 BL 0x26E1C34
	0x03CC6EF8 LDR X0, [X27]
	0x03CC6EFC LDR X24, [X25 + 0x30]
	0x03CC6F00 LDR W8, [X0 + 0xE0]
	0x03CC6F04 CBNZ W8, 0x3CC6F0C
	0x03CC6F08 BL 0x1C16DFC
	0x03CC6F0C MOV X0, X23
	0x03CC6F10 MOV X1, X22
	0x03CC6F14 MOV X2, X24
	0x03CC6F18 MOV X3, X19
	0x03CC6F1C MOV X4, X21
	0x03CC6F20 MOV X5, X20
	0x03CC6F24 BL 0x3CC6550
	0x03CC6F28 LDR W8, [X19]
	0x03CC6F2C MOVZ W0, 0x1
	0x03CC6F30 SUB W8, W8, 0x1
	0x03CC6F34 STR W8, [X19]
	0x03CC6F38 B 0x3CC6F40
	0x03CC6F3C MOV W0, W31
	0x03CC6F40 LDP X20, X19, [X31 + 0x50]
	0x03CC6F44 LDP X22, X21, [X31 + 0x40]
	0x03CC6F48 LDP X24, X23, [X31 + 0x30]
	0x03CC6F4C LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x722000
	010 Move W8, [X21+854]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x49C000
	018 Move X0, [X0+2888]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+854], W8
	022 Subtract W8, W20, 4
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W21, TEMP
	027 Move X9, -51568640
	028 Add X9, X9, 3854
	029 NotImplemented "Instruction ADR not yet implemented."
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Add X10, X10, X11
	032 CallNoReturn X10
	033 Compare X19, 0
	034 JumpIfEqual {365}
	035 Move X21, [X19+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, 0x49C000
	038 Move X8, [X8+2888]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X21, [X19+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W0, W20
	048 Call TextGeneratorUtilities.HexToInt, X0
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move W20, W0
	051 Move W0, W8
	052 Call TextGeneratorUtilities.HexToInt, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Add W20, W0, W20
	057 Move W0, W8
	058 Call TextGeneratorUtilities.HexToInt, X0
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Compare X19, 0
	061 JumpIfEqual {365}
	062 Move X23, [X19+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, 0x49C000
	065 Move X8, [X8+2888]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X23, [X19+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W0, W20
	075 Call TextGeneratorUtilities.HexToInt, X0
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move W21, W0
	078 Move W0, W8
	079 Call TextGeneratorUtilities.HexToInt, X0
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W22, W0
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Call TextGeneratorUtilities.HexToInt, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W20, W0
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Add W22, W22, W21
	089 Call TextGeneratorUtilities.HexToInt, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X19, 0
	092 JumpIfEqual {365}
	093 Move X23, [X19+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, 0x49C000
	096 Move X8, [X8+2888]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X23, [X19+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W0, W20
	106 Call TextGeneratorUtilities.HexToInt, X0
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move W21, W0
	109 Move W0, W8
	110 Call TextGeneratorUtilities.HexToInt, X0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W22, W0
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Call TextGeneratorUtilities.HexToInt, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W20, W0
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Add W22, W22, W21
	120 Call TextGeneratorUtilities.HexToInt, X0
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Move W19, W0
	123 Move W0, W8
	124 Call TextGeneratorUtilities.HexToInt, X0
	125 Add W9, W19, W19
	126 Add W8, W0, W0
	127 Move W21, W9
	128 ShiftRight W21, 16
	129 And W21, W21, 127
	130 NotImplemented "Instruction BFM not yet implemented."
	131 Add W8, W20, W20
	132 NotImplemented "Instruction BFM not yet implemented."
	133 NotImplemented "Instruction BFM not yet implemented."
	134 Compare X19, 0
	135 JumpIfEqual {365}
	136 Move X23, [X19+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, 0x49C000
	139 Move X8, [X8+2888]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X0, [X8]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X23, [X19+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W0, W20
	149 Call TextGeneratorUtilities.HexToInt, X0
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Move W20, W0
	152 Move W0, W8
	153 Call TextGeneratorUtilities.HexToInt, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W21, W0
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Call TextGeneratorUtilities.HexToInt, X0
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Move W22, W0
	161 Move W0, W8
	162 Call TextGeneratorUtilities.HexToInt, X0
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Add W20, W21, W20
	167 Add W21, W0, W22
	168 Move W0, W8
	169 Call TextGeneratorUtilities.HexToInt, X0
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Compare X19, 0
	172 JumpIfEqual {365}
	173 Move X25, [X19+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X8, 0x49C000
	176 Move X8, [X8+2888]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Move X0, [X8]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {184}
	182 Call 0x1C17DFC
	183 Move X25, [X19+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W0, W20
	186 Call TextGeneratorUtilities.HexToInt, X0
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Move W20, W0
	189 Move W0, W8
	190 Call TextGeneratorUtilities.HexToInt, X0
	191 NotImplemented "Instruction CMP not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move W21, W0
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Call TextGeneratorUtilities.HexToInt, X0
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Move W22, W0
	198 Move W0, W8
	199 Call TextGeneratorUtilities.HexToInt, X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move W23, W0
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Call TextGeneratorUtilities.HexToInt, X0
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move W24, W0
	207 Move W0, W8
	208 Call TextGeneratorUtilities.HexToInt, X0
	209 NotImplemented "Instruction CMP not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Add W21, W21, W20
	213 Add W20, W23, W22
	214 Add W22, W0, W24
	215 Move W0, W8
	216 Call TextGeneratorUtilities.HexToInt, X0
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Compare X19, 0
	219 JumpIfEqual {365}
	220 Move X23, [X19+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X8, 0x49C000
	223 Move X8, [X8+2888]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Move X0, [X8]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {231}
	229 Call 0x1C17DFC
	230 Move X23, [X19+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move W0, W20
	233 Call TextGeneratorUtilities.HexToInt, X0
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Move W20, W0
	236 Move W0, W8
	237 Call TextGeneratorUtilities.HexToInt, X0
	238 NotImplemented "Instruction CMP not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move W21, W0
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Call TextGeneratorUtilities.HexToInt, X0
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Move W22, W0
	245 Move W0, W8
	246 Call TextGeneratorUtilities.HexToInt, X0
	247 NotImplemented "Instruction CMP not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 NotImplemented "Instruction LDRH not yet implemented."
	250 Add W20, W21, W20
	251 Add W21, W0, W22
	252 Move W0, W8
	253 Call TextGeneratorUtilities.HexToInt, X0
	254 NotImplemented "Instruction LDRH not yet implemented."
	255 Move W19, W0
	256 Move W0, W8
	257 Call TextGeneratorUtilities.HexToInt, X0
	258 Add W8, W0, W19
	259 NotImplemented "Instruction BFM not yet implemented."
	260 NotImplemented "Instruction BFM not yet implemented."
	261 Or W21, W20, 0xFF000000
	262 Compare X19, 0
	263 JumpIfEqual {365}
	264 Move X25, [X19+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X8, 0x49C000
	267 Move X8, [X8+2888]
	268 NotImplemented "Instruction LDRH not yet implemented."
	269 Move X0, [X8]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {275}
	273 Call 0x1C17DFC
	274 Move X25, [X19+24]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move W0, W20
	277 Call TextGeneratorUtilities.HexToInt, X0
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move W20, W0
	280 Move W0, W8
	281 Call TextGeneratorUtilities.HexToInt, X0
	282 NotImplemented "Instruction CMP not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move W21, W0
	285 NotImplemented "Instruction LDRH not yet implemented."
	286 Call TextGeneratorUtilities.HexToInt, X0
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Move W22, W0
	289 Move W0, W8
	290 Call TextGeneratorUtilities.HexToInt, X0
	291 NotImplemented "Instruction CMP not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move W23, W0
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Call TextGeneratorUtilities.HexToInt, X0
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Move W24, W0
	298 Move W0, W8
	299 Call TextGeneratorUtilities.HexToInt, X0
	300 NotImplemented "Instruction CMP not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 NotImplemented "Instruction LDRH not yet implemented."
	303 Add W21, W21, W20
	304 Add W20, W23, W22
	305 Add W22, W0, W24
	306 Move W0, W8
	307 Call TextGeneratorUtilities.HexToInt, X0
	308 NotImplemented "Instruction LDRH not yet implemented."
	309 Move W19, W0
	310 Move W0, W8
	311 Call TextGeneratorUtilities.HexToInt, X0
	312 NotImplemented "Instruction BFM not yet implemented."
	313 Add W8, W0, W19
	314 NotImplemented "Instruction BFM not yet implemented."
	315 NotImplemented "Instruction BFM not yet implemented."
	316 Compare X19, 0
	317 JumpIfEqual {365}
	318 Move X21, [X19+24]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X8, 0x49C000
	321 Move X8, [X8+2888]
	322 NotImplemented "Instruction LDRH not yet implemented."
	323 Move X0, [X8]
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {329}
	327 Call 0x1C17DFC
	328 Move X21, [X19+24]
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move W0, W20
	331 Call TextGeneratorUtilities.HexToInt, X0
	332 NotImplemented "Instruction LDRH not yet implemented."
	333 Move W20, W0
	334 Move W0, W8
	335 Call TextGeneratorUtilities.HexToInt, X0
	336 NotImplemented "Instruction CMP not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 NotImplemented "Instruction LDRH not yet implemented."
	339 Add W20, W0, W20
	340 Move W0, W8
	341 Call TextGeneratorUtilities.HexToInt, X0
	342 NotImplemented "Instruction LDRH not yet implemented."
	343 Move W19, W0
	344 Move W0, W8
	345 Call TextGeneratorUtilities.HexToInt, X0
	346 Add W9, W19, W19
	347 Add W8, W0, W0
	348 Move W9, W9
	349 ShiftRight W9, 24
	350 And W9, W9, 127
	351 NotImplemented "Instruction BFM not yet implemented."
	352 NotImplemented "Instruction BFM not yet implemented."
	353 Or W21, W9, 0xFF000000
	354 Move W0, W21
	355 Move X20, [X31+48]
	356 Move X19, [X31+56]
	357 Move X22, [X31+32]
	358 Move X21, [X31+40]
	359 Move X24, [X31+16]
	360 Move X23, [X31+24]
	361 Move X30, [X31+64]
	362 Move X25, [X31+72]
	363 Return X0
	364 Call 0x1C17F28
	365 Call 0x1C17F20

Method: UnityEngine.Color32 HexCharsToColor(System.Char[] hexChars, System.Int32 startIndex, System.Int32 length)

Disassembly:
	0x03CC6F7C MOV X19, X2
	0x03CC6F80 MOV W20, W1
	0x03CC6F84 MOV X21, X0
	0x03CC6F88 TBNZ X8, 0x0, 0x3CC6FA0
	0x03CC6F8C ADRP X0, 0x49B000
	0x03CC6F90 LDR X0, [X0 + 0xB48]
	0x03CC6F94 BL 0x1C16CF4
	0x03CC6F98 MOVZ W8, 0x1
	0x03CC6F9C STRB W8, [X22 + 0x362]
	0x03CC6FA0 STR W31, [X19]
	0x03CC6FA4 LDR X8, [X21]
	0x03CC6FA8 CBZ X8, 0x3CC7018
	0x03CC6FAC ADRP X24, 0x49B000
	0x03CC6FB0 LDR X24, [X24 + 0xB48]
	0x03CC6FB4 SBFM X9, X20, 0x3E, 0x1F
	0x03CC6FB8 MOV W22, W31
	0x03CC6FBC ADD X25, X9, 0x20
	0x03CC6FC0 LDR W9, [X8 + 0x18]
	0x03CC6FC4 CMP W20, W9
	0x03CC6FC8 B.GE 0x3CC7020
	0x03CC6FCC B.CS 0x3CC7038
	0x03CC6FD0 LDR W23, [X8, X25, LSL]
	0x03CC6FD4 CMP W23, 0x22
	0x03CC6FD8 B.EQ 0x3CC700C
	0x03CC6FDC CMP W23, 0x3E
	0x03CC6FE0 B.EQ 0x3CC701C
	0x03CC6FE4 LDR X0, [X24]
	0x03CC6FE8 LDR W8, [X0 + 0xE0]
	0x03CC6FEC CBNZ W8, 0x3CC6FF4
	0x03CC6FF0 BL 0x1C16DFC
	0x03CC6FF4 MOV W0, W23
	0x03CC6FF8 BL 0x3CC772C
	0x03CC6FFC LDR X8, [X21]
	0x03CC7000 ADD W9, W22, W22, 0x5, LSL
	0x03CC7004 AND W10, W0, 0xFFFF
	0x03CC7008 EOR W22, W9, W10, 0x0
	0x03CC700C ADD W20, W20, 0x1
	0x03CC7010 ADD X25, X25, 0x4
	0x03CC7014 CBNZ X8, 0x3CC6FC0
	0x03CC7018 BL 0x1C16F20
	0x03CC701C STR W20, [X19]
	0x03CC7020 MOV W0, W22
	0x03CC7024 LDP X20, X19, [X31 + 0x30]
	0x03CC7028 LDP X22, X21, [X31 + 0x20]
	0x03CC702C LDP X24, X23, [X31 + 0x10]
	0x03CC7030 LDP X30, X25, [X31], #0x40
	0x03CC7034 RET
	0x03CC7038 BL 0x1C16F28
	0x03CC703C STR X30, [X31 - 0x50]!
	0x03CC7040 STP X26, X25, [X31 + 0x10]
	0x03CC7044 STP X24, X23, [X31 + 0x20]
	0x03CC7048 STP X22, X21, [X31 + 0x30]
	0x03CC704C STP X20, X19, [X31 + 0x40]
	0x03CC7050 ADRP X24, 0x720000
	0x03CC7054 LDRB W8, [X24 + 0x35D]
	0x03CC7058 MOV X20, X4
	0x03CC705C MOV X21, X3
	0x03CC7060 MOV X19, X2
	0x03CC7064 MOV X22, X1
	0x03CC7068 MOV X23, X0
	0x03CC706C TBNZ X8, 0x0, 0x3CC7090
	0x03CC7070 ADRP X0, 0x49A000
	0x03CC7074 LDR X0, [X0 + 0xB48]
	0x03CC7078 BL 0x1C16CF4
	0x03CC707C ADRP X0, 0x49A000
	0x03CC7080 LDR X0, [X0 + 0xC88]
	0x03CC7084 BL 0x1C16CF4
	0x03CC7088 MOVZ W8, 0x1
	0x03CC708C STRB W8, [X24 + 0x35D]
	0x03CC7090 LDR X8, [X21]
	0x03CC7094 CBZ X8, 0x3CC7160
	0x03CC7098 LDR W9, [X19]
	0x03CC709C LDR W10, [X8 + 0x18]
	0x03CC70A0 ADD W9, W9, 0x1
	0x03CC70A4 CMP W9, W10
	0x03CC70A8 B.CS 0x3CC7164
	0x03CC70AC ADRP X10, 0x49A000
	0x03CC70B0 LDR X10, [X10 + 0xC88]
	0x03CC70B4 ADRP X26, 0x49A000
	0x03CC70B8 LDR X26, [X26 + 0xB48]
	0x03CC70BC SXTW X9, W9
	0x03CC70C0 LDR X1, [X10]
	0x03CC70C4 ADD X8, X8, X9, 0x5, LSL
	0x03CC70C8 ADD X0, X8, 0x20
	0x03CC70CC BL 0x26E1CFC
	0x03CC70D0 LDR X8, [X26]
	0x03CC70D4 LDR X25, [X20]
	0x03CC70D8 MOV W24, W0
	0x03CC70DC LDR W9, [X8 + 0xE0]
	0x03CC70E0 CBNZ W9, 0x3CC70EC
	0x03CC70E4 MOV X0, X8
	0x03CC70E8 BL 0x1C16DFC
	0x03CC70EC MOV X0, X25
	0x03CC70F0 MOV W1, W24
	0x03CC70F4 BL 0x3CC6D28
	0x03CC70F8 CBZ X0, 0x3CC7148
	0x03CC70FC LDR W8, [X19]
	0x03CC7100 ADD W8, W8, 0x1
	0x03CC7104 STR W8, [X19]
	0x03CC7108 LDR X8, [X26]
	0x03CC710C LDR X24, [X0 + 0x38]
	0x03CC7110 LDR W9, [X8 + 0xE0]
	0x03CC7114 CBNZ W9, 0x3CC7120
	0x03CC7118 MOV X0, X8
	0x03CC711C BL 0x1C16DFC
	0x03CC7120 MOV X0, X23
	0x03CC7124 MOV X1, X22
	0x03CC7128 MOV X2, X24
	0x03CC712C MOV X3, X19
	0x03CC7130 MOV X4, X21
	0x03CC7134 MOV X5, X20
	0x03CC7138 BL 0x3CC6550
	0x03CC713C LDR W8, [X19]
	0x03CC7140 SUB W8, W8, 0x1
	0x03CC7144 STR W8, [X19]
	0x03CC7148 LDP X20, X19, [X31 + 0x40]
	0x03CC714C LDP X22, X21, [X31 + 0x30]
	0x03CC7150 LDP X24, X23, [X31 + 0x20]
	0x03CC7154 LDP X26, X25, [X31 + 0x10]
	0x03CC7158 LDR X30, [X31], #0x50
	0x03CC715C RET
	0x03CC7160 BL 0x1C16F20
	0x03CC7164 BL 0x1C16F28
	0x03CC7168 STP X30, X25, [X31 - 0x40]!
	0x03CC716C STP X24, X23, [X31 + 0x10]
	0x03CC7170 STP X22, X21, [X31 + 0x20]
	0x03CC7174 STP X20, X19, [X31 + 0x30]
	0x03CC7178 ADRP X25, 0x720000
	0x03CC717C LDRB W8, [X25 + 0x35E]
	0x03CC7180 MOV X20, X5
	0x03CC7184 MOV X21, X4
	0x03CC7188 MOV X19, X3
	0x03CC718C MOV X22, X2
	0x03CC7190 MOV X23, X1
	0x03CC7194 MOV X24, X0
	0x03CC7198 TBNZ X8, 0x0, 0x3CC71BC
	0x03CC719C ADRP X0, 0x49A000
	0x03CC71A0 LDR X0, [X0 + 0xB48]
	0x03CC71A4 BL 0x1C16CF4
	0x03CC71A8 ADRP X0, 0x49A000
	0x03CC71AC LDR X0, [X0 + 0xDA0]
	0x03CC71B0 BL 0x1C16CF4
	0x03CC71B4 MOVZ W8, 0x1
	0x03CC71B8 STRB W8, [X25 + 0x35E]
	0x03CC71BC CBZ X24, 0x3CC7224
	0x03CC71C0 LDR X8, [X21]
	0x03CC71C4 CBZ X8, 0x3CC7238
	0x03CC71C8 LDR W9, [X8 + 0x18]
	0x03CC71CC CBZ W9, 0x3CC723C
	0x03CC71D0 ADRP X9, 0x49A000
	0x03CC71D4 LDR X9, [X9 + 0xDA0]
	0x03CC71D8 LDR W1, [X24 + 0x18]
	0x03CC71DC ADRP X25, 0x49A000
	0x03CC71E0 ADD X0, X8, 0x20
	0x03CC71E4 LDR X2, [X9]
	0x03CC71E8 LDR X25, [X25 + 0xB48]
	0x03CC71EC BL 0x26E1C34
	0x03CC71F0 LDR X0, [X25]
	0x03CC71F4 LDR X24, [X24 + 0x30]
	0x03CC71F8 LDR W8, [X0 + 0xE0]
	0x03CC71FC CBNZ W8, 0x3CC7204
	0x03CC7200 BL 0x1C16DFC
	0x03CC7204 MOV X0, X23

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x722000
	012 Move W8, [X22+855]
	013 Move W21, W2
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x49C000
	021 Move X0, [X0+2888]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+855], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare X19, 0
	028 JumpIfEqual {164}
	029 Move W24, [X19+24]
	030 Add W8, W20, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, 0x49C000
	033 Move X9, [X9+2888]
	034 Add X8, X19, W8
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X0, [X9]
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move W24, [X19+24]
	042 Add W22, W20, 2
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W0, W21
	045 Call TextGeneratorUtilities.HexToInt, X0
	046 Add X8, X19, W22
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move W21, W0
	049 Move W0, W8
	050 Call TextGeneratorUtilities.HexToInt, X0
	051 Add W8, W20, 3
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W23, W20, 4
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X25, X19, 32
	056 Move W22, W0
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Call TextGeneratorUtilities.HexToInt, X0
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move W23, W0
	061 Move W0, W8
	062 Call TextGeneratorUtilities.HexToInt, X0
	063 Add W8, W20, 5
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add W20, W20, 6
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X19, X19, 32
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Add W21, W22, W21
	070 Add W22, W0, W23
	071 Move W0, W8
	072 Call TextGeneratorUtilities.HexToInt, X0
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move W19, W0
	075 Move W0, W8
	076 Call TextGeneratorUtilities.HexToInt, X0
	077 Add W8, W0, W19
	078 NotImplemented "Instruction BFM not yet implemented."
	079 NotImplemented "Instruction BFM not yet implemented."
	080 Or W20, W21, 0xFF000000
	081 Compare X19, 0
	082 JumpIfEqual {164}
	083 Move W26, [X19+24]
	084 Add W8, W20, 1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X9, 0x49B000
	087 Move X9, [X9+2888]
	088 Add X8, X19, W8
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X0, [X9]
	091 Move W9, [X0+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move W26, [X19+24]
	096 Add W22, W20, 2
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W0, W21
	099 Call TextGeneratorUtilities.HexToInt, X0
	100 Add X8, X19, W22
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Move W21, W0
	103 Move W0, W8
	104 Call TextGeneratorUtilities.HexToInt, X0
	105 Add W8, W20, 3
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add W23, W20, 4
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X24, X19, 32
	110 Move W22, W0
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Call TextGeneratorUtilities.HexToInt, X0
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move W23, W0
	115 Move W0, W8
	116 Call TextGeneratorUtilities.HexToInt, X0
	117 Add W8, W20, 5
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add W25, W20, 6
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X27, X19, 32
	122 Move W24, W0
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Call TextGeneratorUtilities.HexToInt, X0
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Move W25, W0
	127 Move W0, W8
	128 Call TextGeneratorUtilities.HexToInt, X0
	129 Add W8, W20, 7
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add W27, W20, 8
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X19, X19, 32
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Add W20, W22, W21
	136 Add W22, W0, W25
	137 Add W21, W24, W23
	138 Move W0, W8
	139 Call TextGeneratorUtilities.HexToInt, X0
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move W19, W0
	142 Move W0, W8
	143 Call TextGeneratorUtilities.HexToInt, X0
	144 NotImplemented "Instruction BFM not yet implemented."
	145 Add W8, W0, W19
	146 NotImplemented "Instruction BFM not yet implemented."
	147 NotImplemented "Instruction BFM not yet implemented."
	148 Move TEMP, 0
	149 Not TEMP
	150 Move W20, TEMP
	151 Move W0, W20
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X26, [X31+16]
	159 Move X25, [X31+24]
	160 Move X30, [X31+80]
	161 Move X27, [X31+88]
	162 Return X0
	163 Call 0x1C17F28
	164 Call 0x1C17F20

Method: System.UInt32 HexToInt(System.Char hex)

Disassembly:
	0x03CC6F50 LDP X28, X27, [X31 + 0x10]
	0x03CC6F54 LDR X30, [X31], #0x60
	0x03CC6F58 RET
	0x03CC6F5C BL 0x1C16F20
	0x03CC6F60 BL 0x1C16F28
	0x03CC6F64 STP X30, X25, [X31 - 0x40]!
	0x03CC6F68 STP X24, X23, [X31 + 0x10]
	0x03CC6F6C STP X22, X21, [X31 + 0x20]
	0x03CC6F70 STP X20, X19, [X31 + 0x30]
	0x03CC6F74 ADRP X22, 0x721000
	0x03CC6F78 LDRB W8, [X22 + 0x362]

ISIL:
	001 Subtract W8, W0, 48
	002 And W9, W8, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -51568640
	005 NotImplemented "Instruction SXTH not yet implemented."
	006 Add X9, X9, 3232
	007 Move W0, [X9]
	008 Return X0
	009 Move W0, 15
	010 Return X0

Method: System.Single ConvertToFloat(System.Char[] chars, System.Int32 startIndex, System.Int32 length)

Disassembly:
	0x03CC7208 MOV X1, X22
	0x03CC720C MOV X2, X24
	0x03CC7210 MOV X3, X19
	0x03CC7214 MOV X4, X21
	0x03CC7218 MOV X5, X20
	0x03CC721C BL 0x3CC6550
	0x03CC7220 STR W31, [X19]
	0x03CC7224 LDP X20, X19, [X31 + 0x30]
	0x03CC7228 LDP X22, X21, [X31 + 0x20]
	0x03CC722C LDP X24, X23, [X31 + 0x10]
	0x03CC7230 LDP X30, X25, [X31], #0x40
	0x03CC7234 RET
	0x03CC7238 BL 0x1C16F20
	0x03CC723C BL 0x1C16F28
	0x03CC7240 STP X30, X25, [X31 - 0x40]!
	0x03CC7244 STP X24, X23, [X31 + 0x10]
	0x03CC7248 STP X22, X21, [X31 + 0x20]
	0x03CC724C STP X20, X19, [X31 + 0x30]
	0x03CC7250 ADRP X24, 0x720000
	0x03CC7254 LDRB W8, [X24 + 0x35F]
	0x03CC7258 MOV X20, X4
	0x03CC725C MOV X21, X3
	0x03CC7260 MOV X19, X2
	0x03CC7264 MOV X22, X1
	0x03CC7268 MOV X23, X0
	0x03CC726C TBNZ X8, 0x0, 0x3CC7290
	0x03CC7270 ADRP X0, 0x49A000
	0x03CC7274 LDR X0, [X0 + 0xB48]
	0x03CC7278 BL 0x1C16CF4
	0x03CC727C ADRP X0, 0x49A000
	0x03CC7280 LDR X0, [X0 + 0xC88]
	0x03CC7284 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x721000
	009 Move X22, 0x49B000
	010 Move W8, [X23+856]
	011 Move X22, [X22+2888]
	012 Move W19, W2
	013 Move W20, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x49B000
	020 Move X0, [X0+2888]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+856], W8
	024 Move X0, [X22]
	025 Move [X31+12], W31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X3, X31, 12
	031 Move X0, X21
	032 Move W1, W20
	033 Move W2, W19
	034 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2, X3
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X30, [X31+16]
	040 Move X23, [X31+24]
	041 Add X31, X31, 64
	042 Return V0

Method: System.Single ConvertToFloat(System.Char[] chars, System.Int32 startIndex, System.Int32 length, out System.Int32 lastIndex)

Disassembly:
	0x03CC7288 MOVZ W8, 0x1
	0x03CC728C STRB W8, [X24 + 0x35F]
	0x03CC7290 LDR X8, [X21]
	0x03CC7294 CBZ X8, 0x3CC731C
	0x03CC7298 LDR W9, [X8 + 0x18]
	0x03CC729C CBZ W9, 0x3CC7320
	0x03CC72A0 ADRP X9, 0x49A000
	0x03CC72A4 LDR X9, [X9 + 0xC88]
	0x03CC72A8 ADRP X24, 0x49A000
	0x03CC72AC ADD X0, X8, 0x20
	0x03CC72B0 LDR X1, [X9]
	0x03CC72B4 LDR X24, [X24 + 0xB48]
	0x03CC72B8 BL 0x26E1CFC
	0x03CC72BC LDR X8, [X24]
	0x03CC72C0 LDR X25, [X20]
	0x03CC72C4 MOV W24, W0
	0x03CC72C8 LDR W9, [X8 + 0xE0]
	0x03CC72CC CBNZ W9, 0x3CC72D8
	0x03CC72D0 MOV X0, X8
	0x03CC72D4 BL 0x1C16DFC
	0x03CC72D8 MOV X0, X25
	0x03CC72DC MOV W1, W24
	0x03CC72E0 BL 0x3CC6D28
	0x03CC72E4 CBZ X0, 0x3CC731C
	0x03CC72E8 LDR X2, [X0 + 0x38]
	0x03CC72EC MOV X0, X23
	0x03CC72F0 MOV X1, X22
	0x03CC72F4 MOV X3, X19
	0x03CC72F8 MOV X4, X21
	0x03CC72FC MOV X5, X20
	0x03CC7300 BL 0x3CC6550
	0x03CC7304 STR W31, [X19]
	0x03CC7308 LDP X20, X19, [X31 + 0x30]
	0x03CC730C LDP X22, X21, [X31 + 0x20]
	0x03CC7310 LDP X24, X23, [X31 + 0x10]
	0x03CC7314 LDP X30, X25, [X31], #0x40
	0x03CC7318 RET
	0x03CC731C BL 0x1C16F20
	0x03CC7320 BL 0x1C16F28
	0x03CC7324 STP X30, X23, [X31 - 0x30]!
	0x03CC7328 STP X22, X21, [X31 + 0x10]
	0x03CC732C STP X20, X19, [X31 + 0x20]
	0x03CC7330 ADRP X21, 0x720000
	0x03CC7334 LDRB W8, [X21 + 0x364]
	0x03CC7338 MOV W20, W1
	0x03CC733C MOV X19, X0
	0x03CC7340 TBNZ X8, 0x0, 0x3CC7358
	0x03CC7344 ADRP X0, 0x49A000
	0x03CC7348 LDR X0, [X0 + 0xB48]
	0x03CC734C BL 0x1C16CF4
	0x03CC7350 MOVZ W8, 0x1
	0x03CC7354 STRB W8, [X21 + 0x364]
	0x03CC7358 CBZ X19, 0x3CC7408
	0x03CC735C LDR W8, [X19 + 0x18]
	0x03CC7360 CMP W8, W20
	0x03CC7364 B.LS 0x3CC7404
	0x03CC7368 ADRP X9, 0x49A000
	0x03CC736C LDR X9, [X9 + 0xB48]
	0x03CC7370 LDR X0, [X9]
	0x03CC7374 ADD X9, X19, W20, 0x2, SXTW
	0x03CC7378 LDR W21, [X9 + 0x20]
	0x03CC737C LDR W10, [X0 + 0xE0]
	0x03CC7380 CBNZ W10, 0x3CC738C
	0x03CC7384 BL 0x1C16DFC
	0x03CC7388 LDR W8, [X19 + 0x18]
	0x03CC738C ADD W22, W20, 0x1
	0x03CC7390 CMP W22, W8
	0x03CC7394 B.CS 0x3CC7404
	0x03CC7398 ADD W9, W20, 0x2
	0x03CC739C CMP W9, W8
	0x03CC73A0 B.CS 0x3CC7404
	0x03CC73A4 ADD W20, W20, 0x3
	0x03CC73A8 CMP W20, W8
	0x03CC73AC B.CS 0x3CC7404
	0x03CC73B0 ADD X23, X19, 0x20
	0x03CC73B4 LDR W0, [X23, W9, SXTW]
	0x03CC73B8 BL 0x3CC5F50
	0x03CC73BC LDR W8, [X23, W22, SXTW]
	0x03CC73C0 MOV W19, W0
	0x03CC73C4 MOV W0, W8
	0x03CC73C8 BL 0x3CC5F50
	0x03CC73CC UBFM W22, W0, 0x18, 0x17
	0x03CC73D0 MOV W0, W21
	0x03CC73D4 BL 0x3CC5F50
	0x03CC73D8 LDR W8, [X23, W20, SXTW]
	0x03CC73DC MOV W20, W0
	0x03CC73E0 MOV W0, W8
	0x03CC73E4 BL 0x3CC5F50

ISIL:
	001 Move [X31-16], X30
	002 Compare W1, 0
	003 JumpIfEqual {15}
	004 Compare X0, 0
	005 JumpIfEqual {76}
	006 Move W9, [X0+24]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Add X8, X0, W1
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Add W8, W2, W1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add W1, W1, 1
	014 Move W10, 1
	015 Move X8, -52281344
	016 Move V0, [X8+532]
	017 Move W8, W31
	018 Add W1, W1, 1
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W10, TEMP
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move S0, W31
	024 Move X13, -52281344
	025 Move V3, [X13+188]
	026 Move X12, W8
	027 Add X11, X0, W1
	028 NotImplemented "Instruction SCVTF not yet implemented."
	029 Move X10, W10
	030 Move S2, W31
	031 Add X11, X11, 32
	032 Subtract X12, X12, W1
	033 Move W13, 1
	034 Move S4, 10
	035 Move S0, W31
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract W14, W15, 48
	040 And W16, W14, 0xFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W13, W31
	045 Move V2, V3
	046 Move TEMP, X13
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {55}
	050 Multiply X13, X14, X10
	051 Multiply S0, S0, S4
	052 NotImplemented "Instruction SCVTF not yet implemented."
	053 Add S0, S0, S5
	054 Move W13, 1
	055 NotImplemented "Instruction UCVTF not yet implemented."
	056 Multiply S5, S2, S5
	057 Multiply S5, S5, S1
	058 Move W13, W31
	059 Add S0, S0, S5
	060 Multiply S2, S2, S3
	061 Add W1, W1, 1
	062 Subtract X12, X12, 1
	063 Add X11, X11, 2
	064 Add W10, W1, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X8, X0, W10
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Move W8, W1
	072 Move [X3], W8
	073 Move X30, [X31+16]
	074 Return V0
	075 Call 0x1C17F28
	076 Call 0x1C17F20

Method: UnityEngine.Vector2 PackUV(System.Single x, System.Single y, System.Single scale)

Disassembly:
	0x03CC73E8 ADD W8, W22, W19, 0x4, LSL
	0x03CC73EC ADD W8, W8, W20, 0xC, LSL
	0x03CC73F0 LDP X20, X19, [X31 + 0x20]
	0x03CC73F4 LDP X22, X21, [X31 + 0x10]
	0x03CC73F8 ADD W0, W8, W0
	0x03CC73FC LDP X30, X23, [X31], #0x30
	0x03CC7400 RET
	0x03CC7404 BL 0x1C16F28
	0x03CC7408 BL 0x1C16F20
	0x03CC740C STR X30, [X31 - 0x60]!
	0x03CC7410 STP X28, X27, [X31 + 0x10]
	0x03CC7414 STP X26, X25, [X31 + 0x20]
	0x03CC7418 STP X24, X23, [X31 + 0x30]
	0x03CC741C STP X22, X21, [X31 + 0x40]
	0x03CC7420 STP X20, X19, [X31 + 0x50]
	0x03CC7424 ADRP X19, 0x720000
	0x03CC7428 LDRB W8, [X19 + 0x366]
	0x03CC742C MOV W21, W1
	0x03CC7430 MOV X20, X0
	0x03CC7434 TBNZ X8, 0x0, 0x3CC744C
	0x03CC7438 ADRP X0, 0x49A000
	0x03CC743C LDR X0, [X0 + 0xB48]
	0x03CC7440 BL 0x1C16CF4
	0x03CC7444 MOVZ W8, 0x1

ISIL:
	001 Move X8, -52281344
	002 Move V3, [X8+12]
	003 Move W8, 0xCF000000
	004 Move W9, 0x7F800000
	005 Move S5, W8
	006 Move W8, 0x45800000
	007 Multiply S1, S1, S3
	008 Move S4, W9
	009 Multiply S0, S0, S3
	010 Move S3, W8
	011 NotImplemented "Instruction FCVTZS not yet implemented."
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 NotImplemented "Instruction SCVTF not yet implemented."
	014 NotImplemented "Instruction FCVTZS not yet implemented."
	015 NotImplemented "Instruction FCSEL not yet implemented."
	016 NotImplemented "Instruction SCVTF not yet implemented."
	017 Move W8, 0xD5000000
	018 Multiply S3, S5, S3
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move S0, W8
	021 NotImplemented "Instruction FCSEL not yet implemented."
	022 Add S0, S0, S1
	023 Move V1, V2
	024 Return X0

Method: System.Void ResizeInternalArray(ref T[] array)

Disassembly:
	0x0229D034 B 0x338F3E0
	0x0229D038 CBZ X0, 0x229D040
	0x0229D03C RET
	0x0229D040 MOV W0, W1
	0x0229D044 MOV X1, X31
	0x0229D048 B 0x338F3E0
	0x0229D04C CBZ X0, 0x229D054
	0x0229D050 RET
	0x0229D054 MOV W0, W1
	0x0229D058 MOV X1, X31
	0x0229D05C B 0x338F3E0
	0x0229D060 CBZ X0, 0x229D068
	0x0229D064 RET
	0x0229D068 MOV W0, W1
	0x0229D06C MOV X1, X31
	0x0229D070 B 0x338F3E0
	0x0229D074 CBZ X0, 0x229D07C
	0x0229D078 RET
	0x0229D07C MOV W0, W1
	0x0229D080 MOV X1, X31
	0x0229D084 B 0x338F3E0
	0x0229D088 CBZ X0, 0x229D090

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Move X8, [X20]
	012 Compare X8, 0
	013 JumpIfEqual {27}
	014 Move W8, [X8+24]
	015 Move X1, X31
	016 Add W0, W8, 1
	017 Call Mathf.NextPowerOfTwo, X0
	018 Move X8, [X19+56]
	019 Move W1, W0
	020 Move X0, X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, [X8+8]
	024 Move X30, [X31+32]
	025 Call Array.Resize, X0, X1
	026 Return 
	027 Call 0x1C17F20

Method: System.Void ResizeInternalArray(ref T[] array, System.Int32 size)

Disassembly:
	0x0229D0E8 B 0x338F3E0
	0x0229D0EC CBZ X0, 0x229D0F4
	0x0229D0F0 RET
	0x0229D0F4 MOV W0, W1
	0x0229D0F8 MOV X1, X31
	0x0229D0FC B 0x338F3E0
	0x0229D100 CBZ X0, 0x229D108
	0x0229D104 RET
	0x0229D108 MOV W0, W1
	0x0229D10C MOV X1, X31
	0x0229D110 B 0x338F3E0
	0x0229D114 CBZ X0, 0x229D11C
	0x0229D118 RET
	0x0229D11C MOV W0, W1
	0x0229D120 MOV X1, X31
	0x0229D124 B 0x338F3E0
	0x0229D128 CBZ X0, 0x229D130
	0x0229D12C RET
	0x0229D130 MOV W0, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move W21, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Add W0, W21, 1
	014 Move X1, X31
	015 Call Mathf.NextPowerOfTwo, X0
	016 Move X8, [X19+56]
	017 Move W1, W0
	018 Move X0, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X2, [X8+8]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Call Array.Resize, X0, X1
	025 Return 

Method: System.Void InsertOpeningTextStyle(UnityEngine.TextCore.Text.TextStyle style, ref UnityEngine.TextCore.Text.TextProcessingElement[] charBuffer, ref System.Int32 writeIndex, ref System.Int32 textStyleStackDepth, ref UnityEngine.TextCore.Text.TextProcessingStack`1<System.Int32>[] textStyleStacks, ref UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC7448 STRB W8, [X19 + 0x366]
	0x03CC744C CBZ X20, 0x3CC7588
	0x03CC7450 LDR W8, [X20 + 0x18]
	0x03CC7454 CMP W8, W21
	0x03CC7458 B.LS 0x3CC7584
	0x03CC745C ADRP X9, 0x49A000
	0x03CC7460 LDR X9, [X9 + 0xB48]
	0x03CC7464 LDR X0, [X9]
	0x03CC7468 ADD X9, X20, W21, 0x2, SXTW
	0x03CC746C LDR W19, [X9 + 0x20]
	0x03CC7470 LDR W10, [X0 + 0xE0]
	0x03CC7474 CBNZ W10, 0x3CC7480
	0x03CC7478 BL 0x1C16DFC
	0x03CC747C LDR W8, [X20 + 0x18]
	0x03CC7480 ADD W23, W21, 0x1
	0x03CC7484 CMP W23, W8
	0x03CC7488 B.CS 0x3CC7584
	0x03CC748C ADD W22, W21, 0x2
	0x03CC7490 CMP W22, W8
	0x03CC7494 B.CS 0x3CC7584
	0x03CC7498 ADD W24, W21, 0x3
	0x03CC749C CMP W24, W8
	0x03CC74A0 B.CS 0x3CC7584
	0x03CC74A4 ADD W26, W21, 0x4
	0x03CC74A8 CMP W26, W8
	0x03CC74AC B.CS 0x3CC7584
	0x03CC74B0 ADD W27, W21, 0x5
	0x03CC74B4 CMP W27, W8
	0x03CC74B8 B.CS 0x3CC7584
	0x03CC74BC ADD W9, W21, 0x6
	0x03CC74C0 CMP W9, W8
	0x03CC74C4 B.CS 0x3CC7584
	0x03CC74C8 ADD W25, W21, 0x7
	0x03CC74CC CMP W25, W8
	0x03CC74D0 B.CS 0x3CC7584
	0x03CC74D4 ADD X28, X20, 0x20
	0x03CC74D8 LDR W0, [X28, W9, SXTW]
	0x03CC74DC BL 0x3CC5F50
	0x03CC74E0 LDR W8, [X28, W27, SXTW]
	0x03CC74E4 MOV W20, W0
	0x03CC74E8 MOV W0, W8
	0x03CC74EC BL 0x3CC5F50
	0x03CC74F0 LDR W8, [X28, W26, SXTW]
	0x03CC74F4 UBFM W26, W0, 0x18, 0x17
	0x03CC74F8 MOV W0, W8
	0x03CC74FC BL 0x3CC5F50
	0x03CC7500 LDR W8, [X28, W24, SXTW]
	0x03CC7504 MOV W21, W0
	0x03CC7508 MOV W0, W8
	0x03CC750C BL 0x3CC5F50
	0x03CC7510 LDR W8, [X28, W22, SXTW]
	0x03CC7514 MOV W22, W0
	0x03CC7518 MOV W0, W8
	0x03CC751C BL 0x3CC5F50
	0x03CC7520 LDR W8, [X28, W23, SXTW]
	0x03CC7524 MOV W23, W0
	0x03CC7528 MOV W0, W8
	0x03CC752C BL 0x3CC5F50
	0x03CC7530 MOV W24, W0
	0x03CC7534 MOV W0, W19
	0x03CC7538 BL 0x3CC5F50
	0x03CC753C LDR W8, [X28, W25, SXTW]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x721000
	010 Move W8, [X25+857]
	011 Move X20, X5
	012 Move X21, X4
	013 Move X19, X3
	014 Move X22, X2
	015 Move X23, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x49B000
	022 Move X0, [X0+2888]
	023 Call 0x1C17CF4
	024 Move X0, 0x49B000
	025 Move X0, [X0+3488]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+857], W8
	029 Compare X24, 0
	030 JumpIfEqual {65}
	031 Move W8, [X19]
	032 Add W8, W8, 1
	033 Move [X19], W8
	034 Move X9, [X21]
	035 Compare X9, 0
	036 JumpIfEqual {74}
	037 Move W10, [X9+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X10, 0x49B000
	040 Move X10, [X10+3488]
	041 Move X25, 0x49B000
	042 Move X25, [X25+2888]
	043 Move W1, [X24+24]
	044 Move X2, [X10]
	045 Move X8, W8
	046 Add X8, X9, X8
	047 Add X0, X8, 32
	048 Call TextProcessingStack`1<Int32>.Push, X0, X1
	049 Move X0, [X25]
	050 Move X24, [X24+48]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X23
	056 Move X1, X22
	057 Move X2, X24
	058 Move X3, X19
	059 Move X4, X21
	060 Move X5, X20
	061 Call TextGeneratorUtilities.InsertTextStyleInTextProcessingArray, X0, X1, X2, X3, X4, X5
	062 Move W8, [X19]
	063 Subtract W8, W8, 1
	064 Move [X19], W8
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 Move X25, [X31+72]
	073 Return 
	074 Call 0x1C17F20
	075 Call 0x1C17F28

Method: System.Void InsertClosingTextStyle(UnityEngine.TextCore.Text.TextStyle style, ref UnityEngine.TextCore.Text.TextProcessingElement[] charBuffer, ref System.Int32 writeIndex, ref System.Int32 textStyleStackDepth, ref UnityEngine.TextCore.Text.TextProcessingStack`1<System.Int32>[] textStyleStacks, ref UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC79E4 MADD X8, X28, X8, X24
	0x03CC79E8 LDRSW X25, [X8 + 0x60]
	0x03CC79EC LDR X19, [X26 + 0x58]!
	0x03CC79F0 CBZ X19, 0x3CC8300
	0x03CC79F4 LDR W8, [X19 + 0x18]
	0x03CC79F8 CMP W25, W8
	0x03CC79FC B.CS 0x3CC82FC
	0x03CC7A00 MOVZ W8, 0x50
	0x03CC7A04 MADD X23, X25, X8, X19
	0x03CC7A08 LDR W27, [X23 + 0x20]!
	0x03CC7A0C LDR X8, [X23 + 0x8]
	0x03CC7A10 CBZ X8, 0x3CC8300
	0x03CC7A14 LDR W8, [X8 + 0x18]
	0x03CC7A18 CMP W27, W8
	0x03CC7A1C B.LT 0x3CC7A80
	0x03CC7A20 ADD W8, W27, 0x4
	0x03CC7A24 ADD W9, W27, 0x7
	0x03CC7A28 CMP W8, 0x0
	0x03CC7A2C CSEL W8, W9, W8, LT
	0x03CC7A30 SBFM W0, W8, 0x2, 0x1F
	0x03CC7A34 MOV X1, X31
	0x03CC7A38 BL 0x3C2B340
	0x03CC7A3C ADRP X8, 0x49A000
	0x03CC7A40 LDR X8, [X8 + 0x6C8]
	0x03CC7A44 MOV W24, W0
	0x03CC7A48 LDR X8, [X8]
	0x03CC7A4C LDR W9, [X8 + 0xE0]
	0x03CC7A50 CBNZ W9, 0x3CC7A5C
	0x03CC7A54 MOV X0, X8
	0x03CC7A58 BL 0x1C16DFC
	0x03CC7A5C LDR W8, [X19 + 0x18]
	0x03CC7A60 CMP W25, W8
	0x03CC7A64 B.CS 0x3CC82FC
	0x03CC7A68 MOV X0, X23
	0x03CC7A6C MOV W1, W24
	0x03CC7A70 MOV X2, X31
	0x03CC7A74 BL 0x3CAA9C0
	0x03CC7A78 LDR X24, [X22 + 0x30]
	0x03CC7A7C CBZ X24, 0x3CC8300
	0x03CC7A80 LDR W8, [X24 + 0x18]
	0x03CC7A84 CMP W8, W20
	0x03CC7A88 B.LS 0x3CC82FC
	0x03CC7A8C MOVZ W8, 0x188
	0x03CC7A90 MADD X8, X28, X8, X24
	0x03CC7A94 STR W27, [X8 + 0x74]
	0x03CC7A98 CBZ X21, 0x3CC8300
	0x03CC7A9C LDRB W8, [X21 + 0x104]
	0x03CC7AA0 SXTW X12, W27
	0x03CC7AA4 CBZ W8, 0x3CC7C70
	0x03CC7AA8 LDR X8, [X26]
	0x03CC7AAC CBZ X8, 0x3CC8300
	0x03CC7AB0 LDR W9, [X8 + 0x18]
	0x03CC7AB4 CMP W25, W9
	0x03CC7AB8 B.CS 0x3CC82FC
	0x03CC7ABC MOVZ W9, 0x50
	0x03CC7AC0 MADD X8, X25, X9, X8
	0x03CC7AC4 LDR X8, [X8 + 0x28]
	0x03CC7AC8 CBZ X8, 0x3CC8300
	0x03CC7ACC LDR W9, [X8 + 0x18]
	0x03CC7AD0 CMP W27, W9
	0x03CC7AD4 B.CS 0x3CC82FC
	0x03CC7AD8 LDR V0, [X21 + 0x1C]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x721000
	010 Move W8, [X25+858]
	011 Move X20, X5
	012 Move X21, X4
	013 Move X19, X3
	014 Move X22, X2
	015 Move X23, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x49B000
	022 Move X0, [X0+2888]
	023 Call 0x1C17CF4
	024 Move X0, 0x49B000
	025 Move X0, [X0+3488]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+858], W8
	029 Compare X24, 0
	030 JumpIfEqual {65}
	031 Move W8, [X19]
	032 Add W8, W8, 1
	033 Move [X19], W8
	034 Move X9, [X21]
	035 Compare X9, 0
	036 JumpIfEqual {74}
	037 Move W10, [X9+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X10, 0x49B000
	040 Move X10, [X10+3488]
	041 Move X25, 0x49B000
	042 Move X25, [X25+2888]
	043 Move W1, [X24+24]
	044 Move X2, [X10]
	045 Move X8, W8
	046 Add X8, X9, X8
	047 Add X0, X8, 32
	048 Call TextProcessingStack`1<Int32>.Push, X0, X1
	049 Move X0, [X25]
	050 Move X24, [X24+56]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X23
	056 Move X1, X22
	057 Move X2, X24
	058 Move X3, X19
	059 Move X4, X21
	060 Move X5, X20
	061 Call TextGeneratorUtilities.InsertTextStyleInTextProcessingArray, X0, X1, X2, X3, X4, X5
	062 Move W8, [X19]
	063 Subtract W8, W8, 1
	064 Move [X19], W8
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 Move X25, [X31+72]
	073 Return 
	074 Call 0x1C17F20
	075 Call 0x1C17F28

Method: System.Boolean ReplaceOpeningStyleTag(ref UnityEngine.TextCore.Text.TextBackingContainer sourceText, System.Int32 srcIndex, out System.Int32 srcOffset, ref UnityEngine.TextCore.Text.TextProcessingElement[] charBuffer, ref System.Int32 writeIndex, ref System.Int32 textStyleStackDepth, ref UnityEngine.TextCore.Text.TextProcessingStack`1<System.Int32>[] textStyleStacks, ref UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC7AE4 MADD X9, X28, X9, X24
	0x03CC7AE8 LDP S3, S4, [X9 + 0xA0]
	0x03CC7AEC FADD S0, S0, S1
	0x03CC7AF0 LDR V1, [X9 + 0xA8]
	0x03CC7AF4 FMOV S2, W31
	0x03CC7AF8 MOVZ W9, 0xC
	0x03CC7AFC MADD X8, X12, X9, X8
	0x03CC7B00 FADD S3, S3, S2
	0x03CC7B04 FSUB S4, S0, S4
	0x03CC7B08 FADD S1, S1, S2
	0x03CC7B0C STP S3, S4, [X8 + 0x20]
	0x03CC7B10 STR S1, [X8 + 0x28]
	0x03CC7B14 LDR W8, [X24 + 0x18]
	0x03CC7B18 CMP W8, W20
	0x03CC7B1C B.LS 0x3CC82FC
	0x03CC7B20 LDR X8, [X26]
	0x03CC7B24 CBZ X8, 0x3CC8300
	0x03CC7B28 LDR W9, [X8 + 0x18]
	0x03CC7B2C CMP W25, W9
	0x03CC7B30 B.CS 0x3CC82FC
	0x03CC7B34 MOVZ W9, 0x50
	0x03CC7B38 MADD X8, X25, X9, X8
	0x03CC7B3C LDR X8, [X8 + 0x28]
	0x03CC7B40 CBZ X8, 0x3CC8300
	0x03CC7B44 LDR W10, [X8 + 0x18]
	0x03CC7B48 ADD W9, W27, 0x1
	0x03CC7B4C CMP W9, W10
	0x03CC7B50 B.CS 0x3CC82FC
	0x03CC7B54 MOVZ W10, 0x188
	0x03CC7B58 MADD X10, X28, X10, X24
	0x03CC7B5C LDP S2, S3, [X10 + 0x78]
	0x03CC7B60 LDR V4, [X10 + 0x80]
	0x03CC7B64 FMOV S1, W31
	0x03CC7B68 SXTW X9, W9
	0x03CC7B6C MOVZ W10, 0xC
	0x03CC7B70 MADD X8, X9, X10, X8
	0x03CC7B74 FADD S2, S2, S1
	0x03CC7B78 FSUB S3, S0, S3
	0x03CC7B7C FADD S1, S4, S1
	0x03CC7B80 STP S2, S3, [X8 + 0x20]
	0x03CC7B84 STR S1, [X8 + 0x28]
	0x03CC7B88 LDR W8, [X24 + 0x18]
	0x03CC7B8C CMP W8, W20
	0x03CC7B90 B.LS 0x3CC82FC
	0x03CC7B94 LDR X8, [X26]
	0x03CC7B98 CBZ X8, 0x3CC8300
	0x03CC7B9C LDR W9, [X8 + 0x18]
	0x03CC7BA0 CMP W25, W9
	0x03CC7BA4 B.CS 0x3CC82FC
	0x03CC7BA8 MOVZ W9, 0x50
	0x03CC7BAC MADD X8, X25, X9, X8
	0x03CC7BB0 LDR X8, [X8 + 0x28]
	0x03CC7BB4 CBZ X8, 0x3CC8300
	0x03CC7BB8 LDR W10, [X8 + 0x18]
	0x03CC7BBC ADD W9, W27, 0x2
	0x03CC7BC0 CMP W9, W10
	0x03CC7BC4 B.CS 0x3CC82FC
	0x03CC7BC8 MOVZ W10, 0x188
	0x03CC7BCC MADD X10, X28, X10, X24
	0x03CC7BD0 LDP S2, S3, [X10 + 0xC8]
	0x03CC7BD4 LDR V4, [X10 + 0xD0]
	0x03CC7BD8 FMOV S1, W31
	0x03CC7BDC SXTW X9, W9
	0x03CC7BE0 MOVZ W10, 0xC
	0x03CC7BE4 MADD X8, X9, X10, X8
	0x03CC7BE8 FADD S2, S2, S1
	0x03CC7BEC FSUB S3, S0, S3
	0x03CC7BF0 FADD S1, S4, S1
	0x03CC7BF4 STP S2, S3, [X8 + 0x20]
	0x03CC7BF8 STR S1, [X8 + 0x28]
	0x03CC7BFC LDR W8, [X24 + 0x18]
	0x03CC7C00 CMP W8, W20
	0x03CC7C04 B.LS 0x3CC82FC
	0x03CC7C08 LDR X8, [X26]
	0x03CC7C0C CBZ X8, 0x3CC8300
	0x03CC7C10 LDR W9, [X8 + 0x18]
	0x03CC7C14 CMP W25, W9
	0x03CC7C18 B.CS 0x3CC82FC
	0x03CC7C1C MOVZ W9, 0x50
	0x03CC7C20 MADD X8, X25, X9, X8
	0x03CC7C24 LDR X8, [X8 + 0x28]
	0x03CC7C28 CBZ X8, 0x3CC8300
	0x03CC7C2C LDR W10, [X8 + 0x18]
	0x03CC7C30 ADD W9, W27, 0x3
	0x03CC7C34 CMP W9, W10
	0x03CC7C38 B.CS 0x3CC82FC

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x721000
	013 Move X27, 0x49B000
	014 Move W8, [X28+859]
	015 Move X27, [X27+2888]
	016 Move X20, X7
	017 Move X21, X6
	018 Move X19, X5
	019 Move X22, X4
	020 Move X23, X3
	021 Move X24, X2
	022 Move W26, W1
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x49B000
	029 Move X0, [X0+2888]
	030 Call 0x1C17CF4
	031 Move X0, 0x49B000
	032 Move X0, [X0+3488]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X28+859], W8
	036 Move X0, [X27]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add W1, W26, 7
	042 Move X0, X25
	043 Move X2, X24
	044 Call TextGeneratorUtilities.GetStyleHashCode, X0, X1, X2
	045 Move X8, [X20]
	046 Move W1, W0
	047 Move X0, X8
	048 Call TextGeneratorUtilities.GetStyle, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {89}
	051 Move W8, [X24]
	052 Compare W8, 0
	053 JumpIfEqual {88}
	054 Move W8, [X19]
	055 Add W8, W8, 1
	056 Move [X19], W8
	057 Move X9, [X21]
	058 Compare X9, 0
	059 JumpIfEqual {101}
	060 Move W10, [X9+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X10, 0x49B000
	063 Move W1, [X0+24]
	064 Move X10, [X10+3488]
	065 Move X8, W8
	066 Add X8, X9, X8
	067 Move X25, X0
	068 Move X2, [X10]
	069 Add X0, X8, 32
	070 Call TextProcessingStack`1<Int32>.Push, X0, X1
	071 Move X0, [X27]
	072 Move X24, [X25+48]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X23
	078 Move X1, X22
	079 Move X2, X24
	080 Move X3, X19
	081 Move X4, X21
	082 Move X5, X20
	083 Call TextGeneratorUtilities.InsertTextStyleInTextProcessingArray, X0, X1, X2, X3, X4, X5
	084 Move W8, [X19]
	085 Move W0, 1
	086 Subtract W8, W8, 1
	087 Move [X19], W8
	088 Move W0, W31
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X22, [X31+64]
	092 Move X21, [X31+72]
	093 Move X24, [X31+48]
	094 Move X23, [X31+56]
	095 Move X26, [X31+32]
	096 Move X25, [X31+40]
	097 Move X28, [X31+16]
	098 Move X27, [X31+24]
	099 Move X30, [X31+96]
	100 Return X0
	101 Call 0x1C17F20
	102 Call 0x1C17F28

Method: System.Boolean ReplaceOpeningStyleTag(ref System.UInt32[] sourceText, System.Int32 srcIndex, out System.Int32 srcOffset, ref UnityEngine.TextCore.Text.TextProcessingElement[] charBuffer, ref System.Int32 writeIndex, ref System.Int32 textStyleStackDepth, ref UnityEngine.TextCore.Text.TextProcessingStack`1<System.Int32>[] textStyleStacks, ref UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC7E0C MOVZ W9, 0x50
	0x03CC7E10 MADD X8, X25, X9, X8
	0x03CC7E14 LDR X8, [X8 + 0x40]
	0x03CC7E18 CBZ X8, 0x3CC8300
	0x03CC7E1C LDR W9, [X8 + 0x18]
	0x03CC7E20 CMP W27, W9
	0x03CC7E24 B.CS 0x3CC82FC
	0x03CC7E28 MOVZ W9, 0x188
	0x03CC7E2C MADD X9, X28, X9, X24
	0x03CC7E30 LDUR V0, [X9 + 0xAC]
	0x03CC7E34 ADD X8, X8, X12, 0x4, LSL
	0x03CC7E38 STR V0, [X8 + 0x2]
	0x03CC7E3C LDR X8, [X26]
	0x03CC7E40 CBZ X8, 0x3CC8300
	0x03CC7E44 LDR W9, [X8 + 0x18]
	0x03CC7E48 CMP W25, W9
	0x03CC7E4C B.CS 0x3CC82FC
	0x03CC7E50 LDR W9, [X24 + 0x18]
	0x03CC7E54 CMP W9, W20
	0x03CC7E58 B.LS 0x3CC82FC
	0x03CC7E5C MOVZ W9, 0x50
	0x03CC7E60 MADD X8, X25, X9, X8
	0x03CC7E64 LDR X8, [X8 + 0x40]
	0x03CC7E68 CBZ X8, 0x3CC8300
	0x03CC7E6C LDR W10, [X8 + 0x18]
	0x03CC7E70 ADD W9, W27, 0x1
	0x03CC7E74 CMP W9, W10
	0x03CC7E78 B.CS 0x3CC82FC
	0x03CC7E7C MOVZ W10, 0x188
	0x03CC7E80 MADD X10, X28, X10, X24
	0x03CC7E84 LDUR V0, [X10 + 0x84]
	0x03CC7E88 SXTW X19, W9
	0x03CC7E8C ADD X8, X8, X19, 0x4, LSL
	0x03CC7E90 STR V0, [X8 + 0x2]
	0x03CC7E94 LDR X8, [X26]
	0x03CC7E98 CBZ X8, 0x3CC8300
	0x03CC7E9C LDR W9, [X8 + 0x18]
	0x03CC7EA0 CMP W25, W9
	0x03CC7EA4 B.CS 0x3CC82FC
	0x03CC7EA8 LDR W9, [X24 + 0x18]
	0x03CC7EAC CMP W9, W20
	0x03CC7EB0 B.LS 0x3CC82FC
	0x03CC7EB4 MOVZ W9, 0x50
	0x03CC7EB8 MADD X8, X25, X9, X8
	0x03CC7EBC LDR X8, [X8 + 0x40]
	0x03CC7EC0 CBZ X8, 0x3CC8300
	0x03CC7EC4 LDR W10, [X8 + 0x18]
	0x03CC7EC8 ADD W9, W27, 0x2
	0x03CC7ECC CMP W9, W10
	0x03CC7ED0 B.CS 0x3CC82FC
	0x03CC7ED4 MOVZ W10, 0x188
	0x03CC7ED8 MADD X10, X28, X10, X24
	0x03CC7EDC LDUR V0, [X10 + 0xD4]
	0x03CC7EE0 SXTW X29, W9
	0x03CC7EE4 ADD X8, X8, X29, 0x4, LSL
	0x03CC7EE8 STR V0, [X8 + 0x2]
	0x03CC7EEC LDR X8, [X26]
	0x03CC7EF0 CBZ X8, 0x3CC8300
	0x03CC7EF4 LDR W9, [X8 + 0x18]
	0x03CC7EF8 CMP W25, W9
	0x03CC7EFC B.CS 0x3CC82FC
	0x03CC7F00 LDR W9, [X24 + 0x18]
	0x03CC7F04 CMP W9, W20
	0x03CC7F08 B.LS 0x3CC82FC
	0x03CC7F0C MOVZ W9, 0x50
	0x03CC7F10 MADD X8, X25, X9, X8
	0x03CC7F14 LDR X8, [X8 + 0x40]
	0x03CC7F18 CBZ X8, 0x3CC8300
	0x03CC7F1C LDR W10, [X8 + 0x18]
	0x03CC7F20 ADD W9, W27, 0x3
	0x03CC7F24 CMP W9, W10
	0x03CC7F28 B.CS 0x3CC82FC
	0x03CC7F2C MOVZ W10, 0x188
	0x03CC7F30 MADD X10, X28, X10, X24
	0x03CC7F34 LDUR V0, [X10 + 0xFC]
	0x03CC7F38 SXTW X23, W9
	0x03CC7F3C ADD X8, X8, X23, 0x4, LSL
	0x03CC7F40 STR V0, [X8 + 0x2]
	0x03CC7F44 LDR X8, [X26]
	0x03CC7F48 CBZ X8, 0x3CC8300
	0x03CC7F4C LDR W9, [X8 + 0x18]
	0x03CC7F50 CMP W25, W9
	0x03CC7F54 B.CS 0x3CC82FC
	0x03CC7F58 LDR W9, [X24 + 0x18]
	0x03CC7F5C CMP W9, W20
	0x03CC7F60 B.LS 0x3CC82FC

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x721000
	013 Move X27, 0x49B000
	014 Move W8, [X28+860]
	015 Move X27, [X27+2888]
	016 Move X20, X7
	017 Move X21, X6
	018 Move X19, X5
	019 Move X22, X4
	020 Move X23, X3
	021 Move X24, X2
	022 Move W26, W1
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x49B000
	029 Move X0, [X0+2888]
	030 Call 0x1C17CF4
	031 Move X0, 0x49B000
	032 Move X0, [X0+3488]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X28+860], W8
	036 Move X0, [X27]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add W1, W26, 7
	042 Move X0, X25
	043 Move X2, X24
	044 Call TextGeneratorUtilities.GetStyleHashCode, X0, X1, X2
	045 Move X8, [X20]
	046 Move W1, W0
	047 Move X0, X8
	048 Call TextGeneratorUtilities.GetStyle, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {89}
	051 Move W8, [X24]
	052 Compare W8, 0
	053 JumpIfEqual {88}
	054 Move W8, [X19]
	055 Add W8, W8, 1
	056 Move [X19], W8
	057 Move X9, [X21]
	058 Compare X9, 0
	059 JumpIfEqual {101}
	060 Move W10, [X9+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X10, 0x49B000
	063 Move W1, [X0+24]
	064 Move X10, [X10+3488]
	065 Move X8, W8
	066 Add X8, X9, X8
	067 Move X25, X0
	068 Move X2, [X10]
	069 Add X0, X8, 32
	070 Call TextProcessingStack`1<Int32>.Push, X0, X1
	071 Move X0, [X27]
	072 Move X24, [X25+48]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X23
	078 Move X1, X22
	079 Move X2, X24
	080 Move X3, X19
	081 Move X4, X21
	082 Move X5, X20
	083 Call TextGeneratorUtilities.InsertTextStyleInTextProcessingArray, X0, X1, X2, X3, X4, X5
	084 Move W8, [X19]
	085 Move W0, 1
	086 Subtract W8, W8, 1
	087 Move [X19], W8
	088 Move W0, W31
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X22, [X31+64]
	092 Move X21, [X31+72]
	093 Move X24, [X31+48]
	094 Move X23, [X31+56]
	095 Move X26, [X31+32]
	096 Move X25, [X31+40]
	097 Move X28, [X31+16]
	098 Move X27, [X31+24]
	099 Move X30, [X31+96]
	100 Return X0
	101 Call 0x1C17F20
	102 Call 0x1C17F28

Method: System.Void ReplaceClosingStyleTag(ref UnityEngine.TextCore.Text.TextProcessingElement[] charBuffer, ref System.Int32 writeIndex, ref System.Int32 textStyleStackDepth, ref UnityEngine.TextCore.Text.TextProcessingStack`1<System.Int32>[] textStyleStacks, ref UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC803C LDR W9, [X8 + 0x18]
	0x03CC8040 CMP W25, W9
	0x03CC8044 B.CS 0x3CC82FC
	0x03CC8048 LDR W9, [X24 + 0x18]
	0x03CC804C CMP W9, W20
	0x03CC8050 B.LS 0x3CC82FC
	0x03CC8054 MOVZ W9, 0x50
	0x03CC8058 MADD X8, X25, X9, X8
	0x03CC805C LDR X8, [X8 + 0x48]
	0x03CC8060 CBZ X8, 0x3CC8300
	0x03CC8064 LDR W9, [X8 + 0x18]
	0x03CC8068 CMP W23, W9
	0x03CC806C B.CS 0x3CC82FC
	0x03CC8070 MOVZ W9, 0x188
	0x03CC8074 MADD X9, X28, X9, X24
	0x03CC8078 ADD X9, X9, 0x10C
	0x03CC807C LDR V0, [X9]
	0x03CC8080 ADD X8, X8, X23, 0x3, LSL
	0x03CC8084 STR D0, [X8 + 0x20]
	0x03CC8088 LDR X8, [X26]
	0x03CC808C CBZ X8, 0x3CC8300
	0x03CC8090 LDR W9, [X8 + 0x18]
	0x03CC8094 CMP W25, W9
	0x03CC8098 B.CS 0x3CC82FC
	0x03CC809C LDR W9, [X24 + 0x18]
	0x03CC80A0 CMP W9, W20
	0x03CC80A4 B.LS 0x3CC82FC
	0x03CC80A8 MOVZ W9, 0x50
	0x03CC80AC MOVZ W10, 0x188
	0x03CC80B0 MADD X8, X25, X9, X8
	0x03CC80B4 MADD X9, X28, X10, X24
	0x03CC80B8 LDR X22, [X8 + 0x50]
	0x03CC80BC LDR W21, [X9 + 0xC4]
	0x03CC80C0 LDR W8, [X31 + 0xC]
	0x03CC80C4 TBZ X8, 0x0, 0x3CC812C
	0x03CC80C8 STR X26, [X31]
	0x03CC80CC ADRP X8, 0x499000
	0x03CC80D0 LDR X8, [X8 + 0xB48]
	0x03CC80D4 MOV X26, X28
	0x03CC80D8 MOV X28, X20
	0x03CC80DC MOV X20, X19
	0x03CC80E0 LDR X0, [X8]
	0x03CC80E4 MOV X19, X27
	0x03CC80E8 MOV X27, X29
	0x03CC80EC MOV X29, X23
	0x03CC80F0 LDR W8, [X0 + 0xE0]
	0x03CC80F4 MOV X23, X12
	0x03CC80F8 CBNZ W8, 0x3CC8100
	0x03CC80FC BL 0x1C16DFC
	0x03CC8100 MOV X0, X21
	0x03CC8104 BL 0x3CC8304
	0x03CC8108 MOV X12, X23
	0x03CC810C MOV X23, X29
	0x03CC8110 MOV X29, X27
	0x03CC8114 MOV X27, X19
	0x03CC8118 MOV X19, X20
	0x03CC811C MOV X20, X28
	0x03CC8120 MOV X28, X26
	0x03CC8124 LDR X26, [X31]
	0x03CC8128 MOV W21, W0
	0x03CC812C CBZ X22, 0x3CC8300
	0x03CC8130 LDR W8, [X22 + 0x18]
	0x03CC8134 CMP W27, W8
	0x03CC8138 B.CS 0x3CC82FC
	0x03CC813C ADD X8, X22, X12, 0x2, LSL
	0x03CC8140 STR W21, [X8 + 0x20]
	0x03CC8144 LDR X8, [X26]
	0x03CC8148 CBZ X8, 0x3CC8300
	0x03CC814C LDR W9, [X8 + 0x18]
	0x03CC8150 CMP W25, W9
	0x03CC8154 B.CS 0x3CC82FC
	0x03CC8158 LDR W9, [X24 + 0x18]
	0x03CC815C CMP W9, W20
	0x03CC8160 B.LS 0x3CC82FC
	0x03CC8164 MOVZ W9, 0x50

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x720000
	011 Move W8, [X24+861]
	012 Move X20, X4
	013 Move X21, X3
	014 Move X19, X2
	015 Move X22, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x49A000
	022 Move X0, [X0+2888]
	023 Call 0x1C17CF4
	024 Move X0, 0x49A000
	025 Move X0, [X0+3208]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+861], W8
	029 Move X8, [X21]
	030 Compare X8, 0
	031 JumpIfEqual {88}
	032 Move W9, [X19]
	033 Move W10, [X8+24]
	034 Add W9, W9, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X10, 0x49A000
	037 Move X10, [X10+3208]
	038 Move X26, 0x49A000
	039 Move X26, [X26+2888]
	040 Move X9, W9
	041 Move X1, [X10]
	042 Add X8, X8, X9
	043 Add X0, X8, 32
	044 Call TextProcessingStack`1<Int32>.Pop, X0
	045 Move X8, [X26]
	046 Move X25, [X20]
	047 Move W24, W0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X25
	054 Move W1, W24
	055 Call TextGeneratorUtilities.GetStyle, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {78}
	058 Move W8, [X19]
	059 Add W8, W8, 1
	060 Move [X19], W8
	061 Move X8, [X26]
	062 Move X24, [X0+56]
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X23
	069 Move X1, X22
	070 Move X2, X24
	071 Move X3, X19
	072 Move X4, X21
	073 Move X5, X20
	074 Call TextGeneratorUtilities.InsertTextStyleInTextProcessingArray, X0, X1, X2, X3, X4, X5
	075 Move W8, [X19]
	076 Subtract W8, W8, 1
	077 Move [X19], W8
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X30, [X31+80]
	087 Return 
	088 Call 0x1C17F20
	089 Call 0x1C17F28

Method: System.Void InsertOpeningStyleTag(UnityEngine.TextCore.Text.TextStyle style, ref UnityEngine.TextCore.Text.TextProcessingElement[] charBuffer, ref System.Int32 writeIndex, ref System.Int32 textStyleStackDepth, ref UnityEngine.TextCore.Text.TextProcessingStack`1<System.Int32>[] textStyleStacks, ref UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC8168 MOVZ W10, 0x188
	0x03CC816C MADD X8, X25, X9, X8
	0x03CC8170 MADD X9, X28, X10, X24
	0x03CC8174 LDR X22, [X8 + 0x50]
	0x03CC8178 LDR W21, [X9 + 0x9C]
	0x03CC817C LDR W8, [X31 + 0xC]
	0x03CC8180 TBZ X8, 0x0, 0x3CC81A8
	0x03CC8184 ADRP X8, 0x499000
	0x03CC8188 LDR X8, [X8 + 0xB48]
	0x03CC818C LDR X0, [X8]
	0x03CC8190 LDR W8, [X0 + 0xE0]
	0x03CC8194 CBNZ W8, 0x3CC819C
	0x03CC8198 BL 0x1C16DFC
	0x03CC819C MOV X0, X21
	0x03CC81A0 BL 0x3CC8304
	0x03CC81A4 MOV W21, W0
	0x03CC81A8 CBZ X22, 0x3CC8300
	0x03CC81AC LDR W8, [X22 + 0x18]
	0x03CC81B0 CMP W19, W8
	0x03CC81B4 B.CS 0x3CC82FC
	0x03CC81B8 ADD X8, X22, X19, 0x2, LSL
	0x03CC81BC STR W21, [X8 + 0x20]
	0x03CC81C0 LDR X8, [X26]
	0x03CC81C4 CBZ X8, 0x3CC8300
	0x03CC81C8 LDR W9, [X8 + 0x18]
	0x03CC81CC CMP W25, W9
	0x03CC81D0 B.CS 0x3CC82FC
	0x03CC81D4 LDR W9, [X24 + 0x18]
	0x03CC81D8 CMP W9, W20
	0x03CC81DC B.LS 0x3CC82FC
	0x03CC81E0 MOVZ W9, 0x50
	0x03CC81E4 MOVZ W10, 0x188
	0x03CC81E8 MADD X8, X25, X9, X8
	0x03CC81EC MADD X9, X28, X10, X24
	0x03CC81F0 LDR X19, [X8 + 0x50]
	0x03CC81F4 LDR W21, [X9 + 0xEC]
	0x03CC81F8 LDR W8, [X31 + 0xC]
	0x03CC81FC TBZ X8, 0x0, 0x3CC8224
	0x03CC8200 ADRP X8, 0x499000
	0x03CC8204 LDR X8, [X8 + 0xB48]
	0x03CC8208 LDR X0, [X8]
	0x03CC820C LDR W8, [X0 + 0xE0]
	0x03CC8210 CBNZ W8, 0x3CC8218
	0x03CC8214 BL 0x1C16DFC
	0x03CC8218 MOV X0, X21
	0x03CC821C BL 0x3CC8304
	0x03CC8220 MOV W21, W0
	0x03CC8224 CBZ X19, 0x3CC8300
	0x03CC8228 LDR W8, [X19 + 0x18]
	0x03CC822C CMP W29, W8
	0x03CC8230 B.CS 0x3CC82FC
	0x03CC8234 ADD X8, X19, X29, 0x2, LSL
	0x03CC8238 STR W21, [X8 + 0x20]
	0x03CC823C LDR X8, [X26]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x720000
	010 Move W8, [X25+862]
	011 Move X20, X5
	012 Move X21, X4
	013 Move X19, X3
	014 Move X22, X2
	015 Move X23, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x49A000
	022 Move X0, [X0+2888]
	023 Call 0x1C17CF4
	024 Move X0, 0x49A000
	025 Move X0, [X0+3488]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+862], W8
	029 Compare X24, 0
	030 JumpIfEqual {59}
	031 Move X8, [X21]
	032 Compare X8, 0
	033 JumpIfEqual {68}
	034 Move W9, [X8+24]
	035 Compare W9, 0
	036 JumpIfEqual {69}
	037 Move X9, 0x49A000
	038 Move X9, [X9+3488]
	039 Move W1, [X24+24]
	040 Move X25, 0x49A000
	041 Add X0, X8, 32
	042 Move X2, [X9]
	043 Move X25, [X25+2888]
	044 Call TextProcessingStack`1<Int32>.Push, X0, X1
	045 Move X0, [X25]
	046 Move X24, [X24+48]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X23
	052 Move X1, X22
	053 Move X2, X24
	054 Move X3, X19
	055 Move X4, X21
	056 Move X5, X20
	057 Call TextGeneratorUtilities.InsertTextStyleInTextProcessingArray, X0, X1, X2, X3, X4, X5
	058 Move [X19], W31
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+64]
	066 Move X25, [X31+72]
	067 Return 
	068 Call 0x1C17F20
	069 Call 0x1C17F28

Method: System.Void InsertClosingStyleTag(ref UnityEngine.TextCore.Text.TextProcessingElement[] charBuffer, ref System.Int32 writeIndex, ref System.Int32 textStyleStackDepth, ref UnityEngine.TextCore.Text.TextProcessingStack`1<System.Int32>[] textStyleStacks, ref UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC8240 CBZ X8, 0x3CC8300
	0x03CC8244 LDR W9, [X8 + 0x18]
	0x03CC8248 CMP W25, W9
	0x03CC824C B.CS 0x3CC82FC
	0x03CC8250 LDR W9, [X24 + 0x18]
	0x03CC8254 CMP W9, W20
	0x03CC8258 B.LS 0x3CC82FC
	0x03CC825C MOVZ W9, 0x50
	0x03CC8260 MOVZ W10, 0x188
	0x03CC8264 MADD X8, X25, X9, X8
	0x03CC8268 MADD X9, X28, X10, X24
	0x03CC826C LDR X19, [X8 + 0x50]
	0x03CC8270 LDR W20, [X9 + 0x114]
	0x03CC8274 LDR W8, [X31 + 0xC]
	0x03CC8278 TBZ X8, 0x0, 0x3CC82A0
	0x03CC827C ADRP X8, 0x499000
	0x03CC8280 LDR X8, [X8 + 0xB48]
	0x03CC8284 LDR X0, [X8]
	0x03CC8288 LDR W8, [X0 + 0xE0]
	0x03CC828C CBNZ W8, 0x3CC8294
	0x03CC8290 BL 0x1C16DFC
	0x03CC8294 MOV X0, X20
	0x03CC8298 BL 0x3CC8304
	0x03CC829C MOV W20, W0
	0x03CC82A0 CBZ X19, 0x3CC8300
	0x03CC82A4 LDR W8, [X19 + 0x18]
	0x03CC82A8 CMP W23, W8
	0x03CC82AC B.CS 0x3CC82FC
	0x03CC82B0 ADD X8, X19, X23, 0x2, LSL
	0x03CC82B4 STR W20, [X8 + 0x20]
	0x03CC82B8 LDR X8, [X26]
	0x03CC82BC CBZ X8, 0x3CC8300
	0x03CC82C0 LDR W9, [X8 + 0x18]
	0x03CC82C4 CMP W25, W9
	0x03CC82C8 B.CS 0x3CC82FC
	0x03CC82CC MOVZ W10, 0x50
	0x03CC82D0 ADD W9, W27, 0x4
	0x03CC82D4 MADD X8, X25, X10, X8
	0x03CC82D8 LDP X20, X19, [X31 + 0x60]
	0x03CC82DC LDP X22, X21, [X31 + 0x50]
	0x03CC82E0 LDP X24, X23, [X31 + 0x40]
	0x03CC82E4 LDP X26, X25, [X31 + 0x30]
	0x03CC82E8 LDP X28, X27, [X31 + 0x20]
	0x03CC82EC LDP X29, X30, [X31 + 0x10]
	0x03CC82F0 STR W9, [X8 + 0x20]
	0x03CC82F4 ADD X31, X31, 0x70
	0x03CC82F8 RET
	0x03CC82FC BL 0x1C16F28
	0x03CC8300 BL 0x1C16F20
	0x03CC8304 STR X30, [X31 - 0x30]!
	0x03CC8308 STP X22, X21, [X31 + 0x10]
	0x03CC830C STP X20, X19, [X31 + 0x20]
	0x03CC8310 ADRP X20, 0x71F000
	0x03CC8314 ADRP X21, 0x499000
	0x03CC8318 LDRB W8, [X20 + 0x371]
	0x03CC831C LDR X21, [X21 + 0xB48]
	0x03CC8320 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x720000
	010 Move W8, [X24+863]
	011 Move X20, X4
	012 Move X21, X3
	013 Move X19, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x49A000
	021 Move X0, [X0+2888]
	022 Call 0x1C17CF4
	023 Move X0, 0x49A000
	024 Move X0, [X0+3208]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+863], W8
	028 Move X8, [X21]
	029 Compare X8, 0
	030 JumpIfEqual {71}
	031 Move W9, [X8+24]
	032 Compare W9, 0
	033 JumpIfEqual {72}
	034 Move X9, 0x49A000
	035 Move X9, [X9+3208]
	036 Move X24, 0x49A000
	037 Add X0, X8, 32
	038 Move X1, [X9]
	039 Move X24, [X24+2888]
	040 Call TextProcessingStack`1<Int32>.Pop, X0
	041 Move X8, [X24]
	042 Move X25, [X20]
	043 Move W24, W0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X25
	050 Move W1, W24
	051 Call TextGeneratorUtilities.GetStyle, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {71}
	054 Move X2, [X0+56]
	055 Move X0, X23
	056 Move X1, X22
	057 Move X3, X19
	058 Move X4, X21
	059 Move X5, X20
	060 Call TextGeneratorUtilities.InsertTextStyleInTextProcessingArray, X0, X1, X2, X3, X4, X5
	061 Move [X19], W31
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X30, [X31+64]
	069 Move X25, [X31+72]
	070 Return 
	071 Call 0x1C17F20
	072 Call 0x1C17F28

Method: System.Void InsertTextStyleInTextProcessingArray(ref UnityEngine.TextCore.Text.TextProcessingElement[] charBuffer, ref System.Int32 writeIndex, System.UInt32[] styleDefinition, ref System.Int32 textStyleStackDepth, ref UnityEngine.TextCore.Text.TextProcessingStack`1<System.Int32>[] textStyleStacks, ref UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC7550 ADD W8, W8, W21, 0xC, LSL
	0x03CC7554 ADD W8, W8, W22, 0x10, LSL
	0x03CC7558 ADD W8, W8, W23, 0x14, LSL
	0x03CC755C ADD W8, W8, W24, 0x18, LSL
	0x03CC7560 ADD W8, W8, W19, 0x1C, LSL
	0x03CC7564 LDP X20, X19, [X31 + 0x50]
	0x03CC7568 LDP X22, X21, [X31 + 0x40]
	0x03CC756C LDP X24, X23, [X31 + 0x30]
	0x03CC7570 LDP X26, X25, [X31 + 0x20]
	0x03CC7574 LDP X28, X27, [X31 + 0x10]
	0x03CC7578 ADD W0, W8, W0
	0x03CC757C LDR X30, [X31], #0x60
	0x03CC7580 RET
	0x03CC7584 BL 0x1C16F28
	0x03CC7588 BL 0x1C16F20
	0x03CC758C STR X30, [X31 - 0x60]!
	0x03CC7590 STP X28, X27, [X31 + 0x10]
	0x03CC7594 STP X26, X25, [X31 + 0x20]
	0x03CC7598 STP X24, X23, [X31 + 0x30]
	0x03CC759C STP X22, X21, [X31 + 0x40]
	0x03CC75A0 STP X20, X19, [X31 + 0x50]
	0x03CC75A4 ADRP X20, 0x720000
	0x03CC75A8 LDRB W8, [X20 + 0x36C]
	0x03CC75AC MOV W21, W1
	0x03CC75B0 MOV X19, X0
	0x03CC75B4 TBNZ X8, 0x0, 0x3CC75CC
	0x03CC75B8 ADRP X0, 0x49A000
	0x03CC75BC LDR X0, [X0 + 0xB48]
	0x03CC75C0 BL 0x1C16CF4
	0x03CC75C4 MOVZ W8, 0x1
	0x03CC75C8 STRB W8, [X20 + 0x36C]
	0x03CC75CC CBZ X19, 0x3CC76A0
	0x03CC75D0 MOVZ W8, 0xFFEF
	0x03CC75D4 MOVK W8, 0x7FFF0000
	0x03CC75D8 CMP W21, W8
	0x03CC75DC MOV W20, W31
	0x03CC75E0 B.GT 0x3CC7680
	0x03CC75E4 LDR X8, [X19 + 0x18]
	0x03CC75E8 CMP W8, W21
	0x03CC75EC B.LE 0x3CC7680
	0x03CC75F0 CMP W8, W21
	0x03CC75F4 B.LS 0x3CC767C
	0x03CC75F8 ADRP X25, 0x49A000
	0x03CC75FC LDR X25, [X25 + 0xB48]
	0x03CC7600 ADD W9, W21, 0x10
	0x03CC7604 MOVZ X28, 0x1
	0x03CC7608 MOV W20, W31
	0x03CC760C SXTW X22, W8
	0x03CC7610 SXTW X23, W21
	0x03CC7614 ADD X24, X19, 0x20
	0x03CC7618 MOVZ W26, 0x1
	0x03CC761C SXTW X27, W9
	0x03CC7620 MOVK X28, 0x60000000
	0x03CC7624 LDR W21, [X24, X23, LSL #2]
	0x03CC7628 CMP W21, 0x3E
	0x03CC762C B.HI 0x3CC763C
	0x03CC7630 LSLV X8, X26, X21
	0x03CC7634 ANDS X31, X8, X28, 0x0
	0x03CC7638 B.NE 0x3CC7680
	0x03CC763C LDR X0, [X25]
	0x03CC7640 LDR W8, [X0 + 0xE0]
	0x03CC7644 CBNZ W8, 0x3CC764C
	0x03CC7648 BL 0x1C16DFC
	0x03CC764C MOV W0, W21
	0x03CC7650 BL 0x3CC90B8
	0x03CC7654 ADD W8, W20, W20, 0x5, LSL
	0x03CC7658 ADD X23, X23, 0x1
	0x03CC765C CMP X23, X27
	0x03CC7660 EOR W20, W0, W8, 0x0
	0x03CC7664 B.GE 0x3CC7680
	0x03CC7668 CMP X23, X22
	0x03CC766C B.GE 0x3CC7680
	0x03CC7670 LDR W8, [X19 + 0x18]
	0x03CC7674 CMP W23, W8
	0x03CC7678 B.CC 0x3CC7624
	0x03CC767C BL 0x1C16F28
	0x03CC7680 MOV W0, W20
	0x03CC7684 LDP X20, X19, [X31 + 0x50]
	0x03CC7688 LDP X22, X21, [X31 + 0x40]
	0x03CC768C LDP X24, X23, [X31 + 0x30]
	0x03CC7690 LDP X26, X25, [X31 + 0x20]
	0x03CC7694 LDP X28, X27, [X31 + 0x10]
	0x03CC7698 LDR X30, [X31], #0x60
	0x03CC769C RET
	0x03CC76A0 BL 0x1C16F20
	0x03CC76A4 SUB X31, X31, 0x30
	0x03CC76A8 STP X30, X21, [X31 + 0x10]
	0x03CC76AC STP X20, X19, [X31 + 0x20]
	0x03CC76B0 ADRP X21, 0x720000
	0x03CC76B4 LDRB W8, [X21 + 0x38B]
	0x03CC76B8 MOV W19, W1
	0x03CC76BC MOV X20, X0
	0x03CC76C0 TBNZ X8, 0x0, 0x3CC76D8
	0x03CC76C4 ADRP X0, 0x49A000
	0x03CC76C8 LDR X0, [X0 + 0xDA8]
	0x03CC76CC BL 0x1C16CF4
	0x03CC76D0 MOVZ W8, 0x1
	0x03CC76D4 STRB W8, [X21 + 0x38B]
	0x03CC76D8 STR X31, [X31 + 0x8]
	0x03CC76DC LDR X0, [X20 + 0x20]
	0x03CC76E0 CBNZ X0, 0x3CC76F0
	0x03CC76E4 MOV X0, X20
	0x03CC76E8 BL 0x3CCDB0C
	0x03CC76EC LDR X0, [X20 + 0x20]
	0x03CC76F0 CBZ X0, 0x3CC7728
	0x03CC76F4 ADRP X8, 0x49A000
	0x03CC76F8 LDR X8, [X8 + 0xDA8]
	0x03CC76FC ADD X2, X31, 0x8
	0x03CC7700 MOV W1, W19
	0x03CC7704 LDR X3, [X8]
	0x03CC7708 BL 0x2A150AC
	0x03CC770C LDR X8, [X31 + 0x8]
	0x03CC7710 LDP X20, X19, [X31 + 0x20]
	0x03CC7714 LDP X30, X21, [X31 + 0x10]
	0x03CC7718 ANDS W31, W0, 0x1
	0x03CC771C CSEL X0, X8, X31, NE
	0x03CC7720 ADD X31, X31, 0x30
	0x03CC7724 RET
	0x03CC7728 BL 0x1C16F20
	0x03CC772C STP X30, X21, [X31 - 0x20]!
	0x03CC7730 STP X20, X19, [X31 + 0x10]
	0x03CC7734 ADRP X20, 0x720000
	0x03CC7738 ADRP X21, 0x492000
	0x03CC773C LDRB W8, [X20 + 0x36D]
	0x03CC7740 LDR X21, [X21 + 0xA80]
	0x03CC7744 MOV W19, W0
	0x03CC7748 TBNZ X8, 0x0, 0x3CC7760
	0x03CC774C ADRP X0, 0x492000
	0x03CC7750 LDR X0, [X0 + 0xA80]
	0x03CC7754 BL 0x1C16CF4
	0x03CC7758 MOVZ W8, 0x1
	0x03CC775C STRB W8, [X20 + 0x36D]
	0x03CC7760 LDR X0, [X21]
	0x03CC7764 CBZ X0, 0x3CC779C
	0x03CC7768 LDR W8, [X0 + 0x10]
	0x03CC776C SUB W8, W8, 0x1
	0x03CC7770 CMP W8, W19, UXTH
	0x03CC7774 B.GE 0x3CC7788
	0x03CC7778 MOV W0, W19
	0x03CC777C LDP X20, X19, [X31 + 0x10]
	0x03CC7780 LDP X30, X21, [X31], #0x20
	0x03CC7784 RET
	0x03CC7788 AND W1, W19, 0xFFFF
	0x03CC778C LDP X20, X19, [X31 + 0x10]
	0x03CC7790 MOV X2, X31
	0x03CC7794 LDP X30, X21, [X31], #0x20
	0x03CC7798 B 0x3222A1C
	0x03CC779C BL 0x1C16F20
	0x03CC77A0 SUB X31, X31, 0x30
	0x03CC77A4 STP X30, X21, [X31 + 0x10]
	0x03CC77A8 STP X20, X19, [X31 + 0x20]
	0x03CC77AC ADRP X21, 0x720000
	0x03CC77B0 STP X0, X1, [X31]
	0x03CC77B4 ADRP X20, 0x49A000
	0x03CC77B8 LDRB W8, [X21 + 0x365]
	0x03CC77BC LDR X20, [X20 + 0xB48]
	0x03CC77C0 MOV W19, W2
	0x03CC77C4 TBNZ X8, 0x0, 0x3CC77DC
	0x03CC77C8 ADRP X0, 0x49A000
	0x03CC77CC LDR X0, [X0 + 0xB48]
	0x03CC77D0 BL 0x1C16CF4
	0x03CC77D4 MOVZ W8, 0x1
	0x03CC77D8 STRB W8, [X21 + 0x365]
	0x03CC77DC ADD X0, X31, 0x0
	0x03CC77E0 MOV W1, W19
	0x03CC77E4 BL 0x3CC5394
	0x03CC77E8 LDR X8, [X20]
	0x03CC77EC MOV W20, W0
	0x03CC77F0 LDR W9, [X8 + 0xE0]
	0x03CC77F4 CBNZ W9, 0x3CC7800
	0x03CC77F8 MOV X0, X8
	0x03CC77FC BL 0x1C16DFC
	0x03CC7800 MOV W0, W20
	0x03CC7804 BL 0x3CC5F50
	0x03CC7808 MOV W20, W0
	0x03CC780C ADD W1, W19, 0x1
	0x03CC7810 ADD X0, X31, 0x0
	0x03CC7814 BL 0x3CC5394
	0x03CC7818 BL 0x3CC5F50
	0x03CC781C UBFM W8, W0, 0x18, 0x17
	0x03CC7820 ADD W1, W19, 0x2
	0x03CC7824 ADD X0, X31, 0x0
	0x03CC7828 ADD W20, W8, W20, 0xC, LSL
	0x03CC782C BL 0x3CC5394
	0x03CC7830 BL 0x3CC5F50
	0x03CC7834 ADD W20, W20, W0, 0x4, LSL
	0x03CC7838 ADD W1, W19, 0x3
	0x03CC783C ADD X0, X31, 0x0
	0x03CC7840 BL 0x3CC5394
	0x03CC7844 BL 0x3CC5F50
	0x03CC7848 ADD W0, W20, W0
	0x03CC784C LDP X20, X19, [X31 + 0x20]
	0x03CC7850 LDP X30, X21, [X31 + 0x10]
	0x03CC7854 ADD X31, X31, 0x30
	0x03CC7858 RET
	0x03CC785C SUB X31, X31, 0x30
	0x03CC7860 STP X30, X21, [X31 + 0x10]
	0x03CC7864 STP X20, X19, [X31 + 0x20]
	0x03CC7868 ADRP X21, 0x720000
	0x03CC786C STP X0, X1, [X31]
	0x03CC7870 ADRP X20, 0x49A000
	0x03CC7874 LDRB W8, [X21 + 0x367]
	0x03CC7878 LDR X20, [X20 + 0xB48]
	0x03CC787C MOV W19, W2
	0x03CC7880 TBNZ X8, 0x0, 0x3CC7898
	0x03CC7884 ADRP X0, 0x49A000
	0x03CC7888 LDR X0, [X0 + 0xB48]
	0x03CC788C BL 0x1C16CF4
	0x03CC7890 MOVZ W8, 0x1
	0x03CC7894 STRB W8, [X21 + 0x367]
	0x03CC7898 ADD X0, X31, 0x0
	0x03CC789C MOV W1, W19
	0x03CC78A0 BL 0x3CC5394
	0x03CC78A4 LDR X8, [X20]
	0x03CC78A8 MOV W20, W0
	0x03CC78AC LDR W9, [X8 + 0xE0]
	0x03CC78B0 CBNZ W9, 0x3CC78BC
	0x03CC78B4 MOV X0, X8
	0x03CC78B8 BL 0x1C16DFC
	0x03CC78BC MOV W0, W20
	0x03CC78C0 BL 0x3CC5F50
	0x03CC78C4 MOV W20, W0
	0x03CC78C8 ADD W1, W19, 0x1
	0x03CC78CC ADD X0, X31, 0x0
	0x03CC78D0 BL 0x3CC5394
	0x03CC78D4 BL 0x3CC5F50
	0x03CC78D8 UBFM W8, W0, 0x8, 0x7
	0x03CC78DC ADD W1, W19, 0x2
	0x03CC78E0 ADD X0, X31, 0x0
	0x03CC78E4 ADD W20, W8, W20, 0x1C, LSL
	0x03CC78E8 BL 0x3CC5394
	0x03CC78EC BL 0x3CC5F50
	0x03CC78F0 ADD W20, W20, W0, 0x14, LSL
	0x03CC78F4 ADD W1, W19, 0x3
	0x03CC78F8 ADD X0, X31, 0x0
	0x03CC78FC BL 0x3CC5394
	0x03CC7900 BL 0x3CC5F50
	0x03CC7904 ADD W20, W20, W0, 0x10, LSL
	0x03CC7908 ADD W1, W19, 0x4
	0x03CC790C ADD X0, X31, 0x0
	0x03CC7910 BL 0x3CC5394
	0x03CC7914 BL 0x3CC5F50
	0x03CC7918 ADD W20, W20, W0, 0xC, LSL
	0x03CC791C ADD W1, W19, 0x5
	0x03CC7920 ADD X0, X31, 0x0
	0x03CC7924 BL 0x3CC5394
	0x03CC7928 BL 0x3CC5F50
	0x03CC792C ADD W20, W20, W0, 0x8, LSL
	0x03CC7930 ADD W1, W19, 0x6
	0x03CC7934 ADD X0, X31, 0x0
	0x03CC7938 BL 0x3CC5394
	0x03CC793C BL 0x3CC5F50
	0x03CC7940 ADD W20, W20, W0, 0x4, LSL
	0x03CC7944 ADD W1, W19, 0x7
	0x03CC7948 ADD X0, X31, 0x0
	0x03CC794C BL 0x3CC5394
	0x03CC7950 BL 0x3CC5F50
	0x03CC7954 ADD W0, W20, W0
	0x03CC7958 LDP X20, X19, [X31 + 0x20]
	0x03CC795C LDP X30, X21, [X31 + 0x10]
	0x03CC7960 ADD X31, X31, 0x30
	0x03CC7964 RET
	0x03CC7968 SUB X31, X31, 0x70
	0x03CC796C STP X29, X30, [X31 + 0x10]
	0x03CC7970 STP X28, X27, [X31 + 0x20]
	0x03CC7974 STP X26, X25, [X31 + 0x30]
	0x03CC7978 STP X24, X23, [X31 + 0x40]
	0x03CC797C STP X22, X21, [X31 + 0x50]
	0x03CC7980 STP X20, X19, [X31 + 0x60]
	0x03CC7984 ADRP X19, 0x720000
	0x03CC7988 LDRB W8, [X19 + 0x368]
	0x03CC798C MOV X22, X3
	0x03CC7990 MOV X21, X2
	0x03CC7994 MOV W20, W0
	0x03CC7998 STR W1, [X31 + 0xC]
	0x03CC799C TBNZ X8, 0x0, 0x3CC79C0
	0x03CC79A0 ADRP X0, 0x49A000
	0x03CC79A4 LDR X0, [X0 + 0x6C8]
	0x03CC79A8 BL 0x1C16CF4
	0x03CC79AC ADRP X0, 0x49A000
	0x03CC79B0 LDR X0, [X0 + 0xB48]
	0x03CC79B4 BL 0x1C16CF4
	0x03CC79B8 MOVZ W8, 0x1
	0x03CC79BC STRB W8, [X19 + 0x368]
	0x03CC79C0 CBZ X22, 0x3CC8300
	0x03CC79C4 LDR X24, [X22 + 0x30]
	0x03CC79C8 CBZ X24, 0x3CC8300
	0x03CC79CC LDR W8, [X24 + 0x18]
	0x03CC79D0 CMP W8, W20
	0x03CC79D4 B.LS 0x3CC82FC
	0x03CC79D8 SXTW X28, W20
	0x03CC79DC MOVZ W8, 0x188
	0x03CC79E0 MOV X26, X22

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x721000
	015 Move W8, [X19+864]
	016 Move X21, X5
	017 Move X22, X2
	018 Move X23, X1
	019 Move X24, X0
	020 Move [X31+16], X3
	021 Move [X31+24], X4
	022 Move [X31+40], X2
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x49B000
	028 Move X0, [X0+3200]
	029 Call 0x1C17CF4
	030 Move X0, 0x49B000
	031 Move X0, [X0+2888]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+864], W8
	035 Move [X31+36], W31
	036 Move X8, [X21]
	037 Compare X8, 0
	038 JumpIfEqual {305}
	039 Compare X22, 0
	040 JumpIfEqual {305}
	041 Move X9, [X24]
	042 Compare X9, 0
	043 JumpIfEqual {305}
	044 Move W26, [X22+24]
	045 Move W10, [X23]
	046 Move W9, [X9+24]
	047 Move X27, 0x49B000
	048 Move W20, [X8+190]
	049 Move X27, [X27+2888]
	050 Add W25, W10, W26
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X27]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X8, 0x49B000
	058 Move X8, [X8+3200]
	059 Move X0, X24
	060 Move W1, W25
	061 Move X2, [X8]
	062 Call 0x229D0E8, X0, X1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X31+8], X21
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W28, 0x6A02
	067 Move W29, 0xC72F
	068 Move W20, 0x743B
	069 Move W25, W31
	070 NotImplemented "Instruction MOVK not yet implemented."
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."
	074 Move W9, [X22+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X8, X22, W25
	077 Move W0, [X8+32]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add W8, W25, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X9, X22, W8
	083 Move W9, [X9+32]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W0, 92
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W19, W25, 5
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X27]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Add W1, W25, 2
	098 Move X0, X22
	099 Call TextGeneratorUtilities.GetUTF16, X0, X1
	100 Add W19, W25, 9
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, [X27]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Add W1, W25, 2
	108 Move X0, X22
	109 Call TextGeneratorUtilities.GetUTF32, X0, X1
	110 Move W25, W19
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, [X27]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Add W1, W25, 1
	118 Move X0, X22
	119 Call TextGeneratorUtilities.GetMarkupTagHashCode, X0, X1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W8, 0x2CAE
	123 NotImplemented "Instruction MOVK not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W8, 0xBD17
	126 NotImplemented "Instruction MOVK not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W8, 0xF418
	129 NotImplemented "Instruction MOVK not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move TEMP, X21
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {263}
	135 Move X0, [X27]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X2, [X31+16]
	141 Move X3, [X31+24]
	142 Move X4, [X31+8]
	143 Move X0, X24
	144 Move X1, X23
	145 Call TextGeneratorUtilities.ReplaceClosingStyleTag, X0, X1, X2, X3, X4
	146 Move W21, W31
	147 Add W25, W25, 7
	148 Move W0, 92
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move TEMP, X21
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {263}
	157 Move X8, [X24]
	158 Compare X8, 0
	159 JumpIfEqual {305}
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Move W10, [X8+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move W21, W31
	164 Add X8, X8, X9
	165 Move W9, 173
	166 Move W8, 0x8527
	167 NotImplemented "Instruction MOVK not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move TEMP, X21
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {263}
	174 Move X8, [X24]
	175 Compare X8, 0
	176 JumpIfEqual {305}
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Move W10, [X8+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W21, W31
	181 Add X8, X8, X9
	182 Move W9, 160
	183 Move W8, 0x3CB4
	184 NotImplemented "Instruction MOVK not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move W21, W31
	188 Move W0, 10
	189 Move W25, W8
	190 Move TEMP, X21
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {263}
	194 Move X8, [X24]
	195 Compare X8, 0
	196 JumpIfEqual {305}
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Move W10, [X8+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move W21, W31
	201 Add X8, X8, X9
	202 Move W9, 0x200D
	203 Move [X8+36], W9
	204 Move W8, [X23]
	205 Add W25, W25, 4
	206 Move TEMP, X21
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {263}
	210 Move X8, [X24]
	211 Compare X8, 0
	212 JumpIfEqual {305}
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Move W10, [X8+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W21, W31
	217 Add X8, X8, X9
	218 Move W9, 0x200B
	219 Move [X8+36], W9
	220 Move W8, [X23]
	221 Add W25, W25, 5
	222 Move TEMP, X21
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {263}
	226 Move X0, [X27]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X5, [X31+16]
	232 Move X6, [X31+24]
	233 Move X7, [X31+8]
	234 Add X0, X31, 40
	235 Add X2, X31, 36
	236 Move W1, W25
	237 Move X3, X24
	238 Move X4, X23
	239 Call TextGeneratorUtilities.ReplaceOpeningStyleTag, X0, X1, X2, X3, X4, X5, X6, X7
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {187}
	244 Move W25, [X31+36]
	245 Move W21, W31
	246 Move TEMP, X21
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {263}
	250 Move X8, [X24]
	251 Compare X8, 0
	252 JumpIfEqual {305}
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Move W10, [X8+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move W21, W31
	257 Add X8, X8, X9
	258 Move W9, 10
	259 Move TEMP, X21
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {278}
	263 Move W21, 1
	264 Move W0, 60
	265 Move X8, [X24]
	266 Compare X8, 0
	267 JumpIfEqual {305}
	268 NotImplemented "Instruction LDRSW not yet implemented."
	269 Move W10, [X8+24]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Add X8, X8, X9
	272 Move [X8+36], W0
	273 Move W8, [X23]
	274 Add W8, W8, 1
	275 Move [X23], W8
	276 Add W25, W25, 1
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X8, [X24]
	279 Compare X8, 0
	280 JumpIfEqual {305}
	281 NotImplemented "Instruction LDRSW not yet implemented."
	282 Move W10, [X8+24]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move W21, W31
	285 Add X8, X8, X9
	286 Move W9, 13
	287 Move [X8+36], W9
	288 Move W8, [X23]
	289 Add W25, W25, 3
	290 Move X20, [X31+128]
	291 Move X19, [X31+136]
	292 Move X22, [X31+112]
	293 Move X21, [X31+120]
	294 Move X24, [X31+96]
	295 Move X23, [X31+104]
	296 Move X26, [X31+80]
	297 Move X25, [X31+88]
	298 Move X28, [X31+64]
	299 Move X27, [X31+72]
	300 Move X29, [X31+48]
	301 Move X30, [X31+56]
	302 Add X31, X31, 144
	303 Return 
	304 Call 0x1C17F28
	305 Call 0x1C17F20

Method: UnityEngine.TextCore.Text.TextStyle GetStyle(UnityEngine.TextCore.Text.TextGenerationSettings generationSetting, System.Int32 hashCode)

Disassembly:
	0x03CC7D28 CBZ X8, 0x3CC8300
	0x03CC7D2C LDR W9, [X8 + 0x18]
	0x03CC7D30 CMP W25, W9
	0x03CC7D34 B.CS 0x3CC82FC
	0x03CC7D38 LDR W9, [X24 + 0x18]
	0x03CC7D3C CMP W9, W20
	0x03CC7D40 B.LS 0x3CC82FC
	0x03CC7D44 MOVZ W9, 0x50
	0x03CC7D48 MADD X8, X25, X9, X8
	0x03CC7D4C LDR X8, [X8 + 0x28]
	0x03CC7D50 CBZ X8, 0x3CC8300
	0x03CC7D54 LDR W10, [X8 + 0x18]
	0x03CC7D58 ADD W9, W27, 0x2
	0x03CC7D5C CMP W9, W10
	0x03CC7D60 B.CS 0x3CC82FC
	0x03CC7D64 MOVZ W10, 0x188
	0x03CC7D68 MADD X10, X28, X10, X24
	0x03CC7D6C LDR V0, [X10 + 0xC8]
	0x03CC7D70 LDR V1, [X10 + 0xD0]
	0x03CC7D74 SXTW X9, W9
	0x03CC7D78 MOVZ W10, 0xC
	0x03CC7D7C MADD X8, X9, X10, X8
	0x03CC7D80 STR D0, [X8 + 0x20]
	0x03CC7D84 STR S1, [X8 + 0x28]
	0x03CC7D88 LDR X8, [X26]
	0x03CC7D8C CBZ X8, 0x3CC8300
	0x03CC7D90 LDR W9, [X8 + 0x18]
	0x03CC7D94 CMP W25, W9
	0x03CC7D98 B.CS 0x3CC82FC
	0x03CC7D9C LDR W9, [X24 + 0x18]
	0x03CC7DA0 CMP W9, W20
	0x03CC7DA4 B.LS 0x3CC82FC
	0x03CC7DA8 MOVZ W9, 0x50
	0x03CC7DAC MADD X8, X25, X9, X8
	0x03CC7DB0 LDR X8, [X8 + 0x28]
	0x03CC7DB4 CBZ X8, 0x3CC8300
	0x03CC7DB8 LDR W10, [X8 + 0x18]
	0x03CC7DBC ADD W9, W27, 0x3
	0x03CC7DC0 CMP W9, W10
	0x03CC7DC4 B.CS 0x3CC82FC
	0x03CC7DC8 MOVZ W10, 0x188
	0x03CC7DCC MADD X10, X28, X10, X24
	0x03CC7DD0 LDR V1, [X10 + 0xF0]
	0x03CC7DD4 LDR V0, [X10 + 0xF8]
	0x03CC7DD8 SXTW X9, W9
	0x03CC7DDC MOVZ W11, 0xC
	0x03CC7DE0 MADD X8, X9, X11, X8
	0x03CC7DE4 STR D1, [X8 + 0x20]
	0x03CC7DE8 STR S0, [X8 + 0x28]!
	0x03CC7DEC LDR X8, [X26]
	0x03CC7DF0 CBZ X8, 0x3CC8300
	0x03CC7DF4 LDR W9, [X8 + 0x18]
	0x03CC7DF8 CMP W25, W9
	0x03CC7DFC B.CS 0x3CC82FC
	0x03CC7E00 LDR W9, [X24 + 0x18]
	0x03CC7E04 CMP W9, W20
	0x03CC7E08 B.LS 0x3CC82FC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x721000
	007 Move W8, [X21+865]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x42D000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+865], W8
	019 Compare X20, 0
	020 JumpIfEqual {80}
	021 Move X22, 0x42D000
	022 Move X22, [X22+1432]
	023 Move X21, [X20+88]
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X21
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {44}
	037 Compare X21, 0
	038 JumpIfEqual {80}
	039 Move X0, X21
	040 Move W1, W19
	041 Call TextStyleSheet.GetStyle, X0, X1
	042 Compare X0, 0
	043 JumpIfNotEqual {74}
	044 Move X8, [X20+104]
	045 Compare X8, 0
	046 JumpIfEqual {80}
	047 Move X0, [X22]
	048 Move X20, [X8+104]
	049 Move W9, [X0+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Move X2, X31
	056 Call Object.op_Inequality, X0, X1
	057 Move W8, W0
	058 Move X0, X31
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {74}
	063 Compare X20, 0
	064 JumpIfEqual {80}
	065 Move X0, X20
	066 Move W1, W19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Call TextStyleSheet.GetStyle, X0, X1
	073 Return X0
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Int32 GetStyleHashCode(ref System.UInt32[] text, System.Int32 index, out System.Int32 closeIndex)

Disassembly:
	0x03CC7F64 MOVZ W9, 0x50
	0x03CC7F68 MADD X8, X25, X9, X8
	0x03CC7F6C LDR X8, [X8 + 0x48]
	0x03CC7F70 CBZ X8, 0x3CC8300
	0x03CC7F74 LDR W9, [X8 + 0x18]
	0x03CC7F78 CMP W27, W9
	0x03CC7F7C B.CS 0x3CC82FC
	0x03CC7F80 MOVZ W9, 0x188
	0x03CC7F84 MADD X9, X28, X9, X24
	0x03CC7F88 LDUR V0, [X9 + 0xBC]
	0x03CC7F8C ADD X8, X8, X12, 0x3, LSL
	0x03CC7F90 STR D0, [X8 + 0x20]
	0x03CC7F94 LDR X8, [X26]
	0x03CC7F98 CBZ X8, 0x3CC8300
	0x03CC7F9C LDR W9, [X8 + 0x18]
	0x03CC7FA0 CMP W25, W9
	0x03CC7FA4 B.CS 0x3CC82FC
	0x03CC7FA8 LDR W9, [X24 + 0x18]
	0x03CC7FAC CMP W9, W20
	0x03CC7FB0 B.LS 0x3CC82FC
	0x03CC7FB4 MOVZ W9, 0x50
	0x03CC7FB8 MADD X8, X25, X9, X8
	0x03CC7FBC LDR X8, [X8 + 0x48]
	0x03CC7FC0 CBZ X8, 0x3CC8300
	0x03CC7FC4 LDR W9, [X8 + 0x18]
	0x03CC7FC8 CMP W19, W9
	0x03CC7FCC B.CS 0x3CC82FC
	0x03CC7FD0 MOVZ W9, 0x188
	0x03CC7FD4 MADD X9, X28, X9, X24
	0x03CC7FD8 LDUR V0, [X9 + 0x94]
	0x03CC7FDC ADD X8, X8, X19, 0x3, LSL
	0x03CC7FE0 STR D0, [X8 + 0x20]
	0x03CC7FE4 LDR X8, [X26]
	0x03CC7FE8 CBZ X8, 0x3CC8300
	0x03CC7FEC LDR W9, [X8 + 0x18]
	0x03CC7FF0 CMP W25, W9
	0x03CC7FF4 B.CS 0x3CC82FC
	0x03CC7FF8 LDR W9, [X24 + 0x18]
	0x03CC7FFC CMP W9, W20
	0x03CC8000 B.LS 0x3CC82FC
	0x03CC8004 MOVZ W9, 0x50
	0x03CC8008 MADD X8, X25, X9, X8
	0x03CC800C LDR X8, [X8 + 0x48]
	0x03CC8010 CBZ X8, 0x3CC8300
	0x03CC8014 LDR W9, [X8 + 0x18]
	0x03CC8018 CMP W29, W9
	0x03CC801C B.CS 0x3CC82FC
	0x03CC8020 MOVZ W9, 0x188
	0x03CC8024 MADD X9, X28, X9, X24
	0x03CC8028 LDUR V0, [X9 + 0xE4]
	0x03CC802C ADD X8, X8, X29, 0x3, LSL
	0x03CC8030 STR D0, [X8 + 0x20]
	0x03CC8034 LDR X8, [X26]
	0x03CC8038 CBZ X8, 0x3CC8300

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x721000
	010 Move W8, [X22+866]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x49B000
	019 Move X0, [X0+2888]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+866], W8
	023 Move [X19], W31
	024 Move X8, [X21]
	025 Compare X8, 0
	026 JumpIfEqual {52}
	027 Move X24, 0x49B000
	028 Move X24, [X24+2888]
	029 NotImplemented "Instruction SBFM not yet implemented."
	030 Move W22, W31
	031 Add X25, X9, 32
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W23, [X8]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X24]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move W0, W23
	043 Call TextGeneratorUtilities.ToUpperASCIIFast, X0
	044 Move X8, [X21]
	045 Add W9, W22, W22
	046 And W10, W0, 0xFFFF
	047 Xor W22, W9, W10
	048 Add W20, W20, 1
	049 Add X25, X25, 4
	050 Compare X8, 0
	051 JumpIfNotEqual {32}
	052 Call 0x1C17F20
	053 Move [X19], W20
	054 Move W0, W22
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move X30, [X31+64]
	062 Move X25, [X31+72]
	063 Return X0
	064 Call 0x1C17F28

Method: System.Int32 GetStyleHashCode(ref UnityEngine.TextCore.Text.TextBackingContainer text, System.Int32 index, out System.Int32 closeIndex)

Disassembly:
	0x03CC7C3C MOVZ W10, 0x188
	0x03CC7C40 MADD X10, X28, X10, X24
	0x03CC7C44 LDP S2, S3, [X10 + 0xF0]
	0x03CC7C48 LDR V4, [X10 + 0xF8]
	0x03CC7C4C FMOV S1, W31
	0x03CC7C50 SXTW X9, W9
	0x03CC7C54 MOVZ W11, 0xC
	0x03CC7C58 MADD X8, X9, X11, X8
	0x03CC7C5C FADD S2, S2, S1
	0x03CC7C60 FSUB S3, S0, S3
	0x03CC7C64 FADD S0, S4, S1
	0x03CC7C68 STP S2, S3, [X8 + 0x20]
	0x03CC7C6C B 0x3CC7DE8
	0x03CC7C70 LDR X8, [X26]
	0x03CC7C74 CBZ X8, 0x3CC8300
	0x03CC7C78 LDR W9, [X8 + 0x18]
	0x03CC7C7C CMP W25, W9
	0x03CC7C80 B.CS 0x3CC82FC
	0x03CC7C84 MOVZ W9, 0x50
	0x03CC7C88 MADD X8, X25, X9, X8
	0x03CC7C8C LDR X8, [X8 + 0x28]
	0x03CC7C90 CBZ X8, 0x3CC8300
	0x03CC7C94 LDR W9, [X8 + 0x18]
	0x03CC7C98 CMP W27, W9
	0x03CC7C9C B.CS 0x3CC82FC
	0x03CC7CA0 MOVZ W9, 0x188
	0x03CC7CA4 MADD X9, X28, X9, X24
	0x03CC7CA8 LDR V0, [X9 + 0xA0]
	0x03CC7CAC LDR V1, [X9 + 0xA8]
	0x03CC7CB0 MOVZ W9, 0xC
	0x03CC7CB4 MADD X8, X12, X9, X8
	0x03CC7CB8 STR D0, [X8 + 0x20]
	0x03CC7CBC STR S1, [X8 + 0x28]
	0x03CC7CC0 LDR X8, [X26]
	0x03CC7CC4 CBZ X8, 0x3CC8300
	0x03CC7CC8 LDR W9, [X8 + 0x18]
	0x03CC7CCC CMP W25, W9
	0x03CC7CD0 B.CS 0x3CC82FC
	0x03CC7CD4 LDR W9, [X24 + 0x18]
	0x03CC7CD8 CMP W9, W20
	0x03CC7CDC B.LS 0x3CC82FC
	0x03CC7CE0 MOVZ W9, 0x50
	0x03CC7CE4 MADD X8, X25, X9, X8
	0x03CC7CE8 LDR X8, [X8 + 0x28]
	0x03CC7CEC CBZ X8, 0x3CC8300
	0x03CC7CF0 LDR W10, [X8 + 0x18]
	0x03CC7CF4 ADD W9, W27, 0x1
	0x03CC7CF8 CMP W9, W10
	0x03CC7CFC B.CS 0x3CC82FC
	0x03CC7D00 MOVZ W10, 0x188
	0x03CC7D04 MADD X10, X28, X10, X24
	0x03CC7D08 LDR V0, [X10 + 0x78]
	0x03CC7D0C LDR V1, [X10 + 0x80]
	0x03CC7D10 SXTW X9, W9
	0x03CC7D14 MOVZ W10, 0xC
	0x03CC7D18 MADD X8, X9, X10, X8
	0x03CC7D1C STR D0, [X8 + 0x20]
	0x03CC7D20 STR S1, [X8 + 0x28]
	0x03CC7D24 LDR X8, [X26]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x721000
	009 Move W8, [X22+867]
	010 Move X19, X2
	011 Move W20, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x49B000
	018 Move X0, [X0+2888]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+867], W8
	022 Move [X19], W31
	023 Move X8, [X21]
	024 Compare X8, 0
	025 JumpIfEqual {58}
	026 Move X24, 0x49B000
	027 Move X24, [X24+2888]
	028 Move W22, W31
	029 Move W8, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X21
	032 Move W1, W20
	033 Call TextBackingContainer.get_Item, X0, X1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X21
	036 Move W1, W20
	037 Call TextBackingContainer.get_Item, X0, X1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X21
	040 Move W1, W20
	041 Call TextBackingContainer.get_Item, X0, X1
	042 Move X8, [X24]
	043 Move W23, W0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move W0, W23
	050 Call TextGeneratorUtilities.ToUpperASCIIFast, X0
	051 Add W8, W22, W22
	052 And W9, W0, 0xFFFF
	053 Xor W22, W8, W9
	054 Move X8, [X21]
	055 Add W20, W20, 1
	056 Compare X8, 0
	057 JumpIfNotEqual {29}
	058 Call 0x1C17F20
	059 Move [X19], W20
	060 Move W0, W22
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Return X0

Method: System.UInt32 GetUTF16(System.UInt32[] text, System.Int32 i)

Disassembly:
	0x03CC8324 TBNZ X8, 0x0, 0x3CC833C
	0x03CC8328 ADRP X0, 0x499000
	0x03CC832C LDR X0, [X0 + 0xB48]
	0x03CC8330 BL 0x1C16CF4
	0x03CC8334 MOVZ W8, 0x1
	0x03CC8338 STRB W8, [X20 + 0x371]
	0x03CC833C LDR X0, [X21]
	0x03CC8340 LDR W8, [X0 + 0xE0]
	0x03CC8344 CBNZ W8, 0x3CC834C
	0x03CC8348 BL 0x1C16DFC
	0x03CC834C MOV W0, W19
	0x03CC8350 UBFM X20, X19, 0x10, 0x3F
	0x03CC8354 UBFM X21, X19, 0x8, 0x3F
	0x03CC8358 BL 0x3CC93F8
	0x03CC835C MOV W22, W0
	0x03CC8360 MOV W0, W21
	0x03CC8364 BL 0x3CC93F8
	0x03CC8368 MOV W21, W0
	0x03CC836C MOV W0, W20
	0x03CC8370 BL 0x3CC93F8
	0x03CC8374 AND X8, X19, 0xFFFFFFFF
	0x03CC8378 AND X10, X21, 0xFF
	0x03CC837C BFM X8, X22, 0x0, 0x7
	0x03CC8380 LDP X20, X19, [X31 + 0x20]
	0x03CC8384 LDP X22, X21, [X31 + 0x10]
	0x03CC8388 AND X9, X0, 0xFF
	0x03CC838C BFM X8, X10, 0x38, 0x7
	0x03CC8390 BFM X8, X9, 0x30, 0x7
	0x03CC8394 MOV X0, X8
	0x03CC8398 LDR X30, [X31], #0x30
	0x03CC839C RET
	0x03CC83A0 SUB X31, X31, 0x70
	0x03CC83A4 STP X29, X30, [X31 + 0x10]
	0x03CC83A8 STP X28, X27, [X31 + 0x20]
	0x03CC83AC STP X26, X25, [X31 + 0x30]
	0x03CC83B0 STP X24, X23, [X31 + 0x40]
	0x03CC83B4 STP X22, X21, [X31 + 0x50]
	0x03CC83B8 STP X20, X19, [X31 + 0x60]
	0x03CC83BC ADRP X20, 0x71F000
	0x03CC83C0 LDRB W8, [X20 + 0x369]
	0x03CC83C4 MOV X19, X3
	0x03CC83C8 MOV X22, X2
	0x03CC83CC MOV W21, W0
	0x03CC83D0 STR W1, [X31 + 0xC]
	0x03CC83D4 TBNZ X8, 0x0, 0x3CC83F0
	0x03CC83D8 ADRP X0, 0x499000
	0x03CC83DC LDR X0, [X0 + 0xB48]
	0x03CC83E0 BL 0x1C16CF4
	0x03CC83E4 LDR W1, [X31 + 0xC]
	0x03CC83E8 MOVZ W8, 0x1
	0x03CC83EC STRB W8, [X20 + 0x369]
	0x03CC83F0 CBZ X19, 0x3CC8C3C
	0x03CC83F4 LDR X25, [X19 + 0x30]
	0x03CC83F8 CBZ X25, 0x3CC8C3C
	0x03CC83FC LDR W8, [X25 + 0x18]
	0x03CC8400 CMP W8, W21
	0x03CC8404 B.LS 0x3CC8C38
	0x03CC8408 LDR X8, [X19 + 0x58]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x720000
	008 Move W8, [X21+868]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x49A000
	016 Move X0, [X0+2888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+868], W8
	020 Compare X19, 0
	021 JumpIfEqual {67}
	022 Move W8, [X19+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X9, 0x49A000
	025 Move X9, [X9+2888]
	026 Move X0, [X9]
	027 Add X9, X19, W20
	028 Move W21, [X9+32]
	029 Move W10, [X0+224]
	030 Compare W10, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move W8, [X19+24]
	034 Add W22, W20, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add W9, W20, 2
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W20, W20, 3
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X23, X19, 32
	041 Move W0, [X23]
	042 Call TextGeneratorUtilities.HexToInt, X0
	043 Move W8, [X23]
	044 Move W19, W0
	045 Move W0, W8
	046 Call TextGeneratorUtilities.HexToInt, X0
	047 Move W22, W0
	048 ShiftRight W22, 24
	049 And W22, W22, 0x7FFFFF
	050 Move W0, W21
	051 Call TextGeneratorUtilities.HexToInt, X0
	052 Move W8, [X23]
	053 Move W20, W0
	054 Move W0, W8
	055 Call TextGeneratorUtilities.HexToInt, X0
	056 Add W8, W22, W19
	057 Add W8, W8, W20
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Add W0, W8, W0
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return X0
	066 Call 0x1C17F28
	067 Call 0x1C17F20

Method: System.UInt32 GetUTF16(UnityEngine.TextCore.Text.TextBackingContainer text, System.Int32 i)

Disassembly:
	0x03CC87A0 CMP W24, W9
	0x03CC87A4 B.CS 0x3CC8C38
	0x03CC87A8 MOVZ W9, 0x188
	0x03CC87AC MADD X9, X26, X9, X25
	0x03CC87B0 LDUR V0, [X9 + 0xAC]
	0x03CC87B4 ADD X8, X8, X24, 0x4, LSL
	0x03CC87B8 STR V0, [X8 + 0x2]
	0x03CC87BC LDR X8, [X19 + 0x58]
	0x03CC87C0 CBZ X8, 0x3CC8C3C
	0x03CC87C4 LDR W9, [X8 + 0x18]
	0x03CC87C8 CMP W23, W9
	0x03CC87CC B.CS 0x3CC8C38
	0x03CC87D0 LDR W9, [X25 + 0x18]
	0x03CC87D4 CMP W9, W21
	0x03CC87D8 B.LS 0x3CC8C38
	0x03CC87DC MOVZ W9, 0x50
	0x03CC87E0 MADD X8, X23, X9, X8
	0x03CC87E4 LDR X8, [X8 + 0x40]
	0x03CC87E8 CBZ X8, 0x3CC8C3C
	0x03CC87EC LDR W10, [X8 + 0x18]
	0x03CC87F0 ADD W9, W24, 0x1
	0x03CC87F4 CMP W9, W10
	0x03CC87F8 B.CS 0x3CC8C38
	0x03CC87FC MOVZ W10, 0x188
	0x03CC8800 MADD X10, X26, X10, X25
	0x03CC8804 LDUR V0, [X10 + 0x84]
	0x03CC8808 SXTW X29, W9
	0x03CC880C ADD X8, X8, X29, 0x4, LSL
	0x03CC8810 STR V0, [X8 + 0x2]
	0x03CC8814 LDR X8, [X19 + 0x58]
	0x03CC8818 CBZ X8, 0x3CC8C3C
	0x03CC881C LDR W9, [X8 + 0x18]
	0x03CC8820 CMP W23, W9
	0x03CC8824 B.CS 0x3CC8C38
	0x03CC8828 LDR W9, [X25 + 0x18]
	0x03CC882C CMP W9, W21
	0x03CC8830 B.LS 0x3CC8C38
	0x03CC8834 MOVZ W9, 0x50
	0x03CC8838 MADD X8, X23, X9, X8
	0x03CC883C LDR X8, [X8 + 0x40]
	0x03CC8840 CBZ X8, 0x3CC8C3C
	0x03CC8844 LDR W10, [X8 + 0x18]
	0x03CC8848 ADD W9, W24, 0x2
	0x03CC884C CMP W9, W10
	0x03CC8850 B.CS 0x3CC8C38
	0x03CC8854 MOVZ W10, 0x188
	0x03CC8858 MADD X10, X26, X10, X25

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x720000
	007 Move [X31], X0
	008 Move [X31+8], X1
	009 Move X20, 0x49A000
	010 Move W8, [X21+869]
	011 Move X20, [X20+2888]
	012 Move W19, W2
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x49A000
	018 Move X0, [X0+2888]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+869], W8
	022 Add X0, X31, 0
	023 Move W1, W19
	024 Call TextBackingContainer.get_Item, X0, X1
	025 Move X8, [X20]
	026 Move W20, W0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move W0, W20
	033 Call TextGeneratorUtilities.HexToInt, X0
	034 Move W20, W0
	035 Add W1, W19, 1
	036 Add X0, X31, 0
	037 Call TextBackingContainer.get_Item, X0, X1
	038 Call TextGeneratorUtilities.HexToInt, X0
	039 Move W8, W0
	040 ShiftRight W8, 24
	041 And W8, W8, 0x7FFFFF
	042 Add W1, W19, 2
	043 Add X0, X31, 0
	044 Add W20, W8, W20
	045 Call TextBackingContainer.get_Item, X0, X1
	046 Call TextGeneratorUtilities.HexToInt, X0
	047 Add W20, W20, W0
	048 Add W1, W19, 3
	049 Add X0, X31, 0
	050 Call TextBackingContainer.get_Item, X0, X1
	051 Call TextGeneratorUtilities.HexToInt, X0
	052 Add W0, W20, W0
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Add X31, X31, 48
	058 Return X0

Method: System.UInt32 GetUTF32(System.UInt32[] text, System.Int32 i)

Disassembly:
	0x03CC840C CBZ X8, 0x3CC8C3C
	0x03CC8410 MOVZ W9, 0x188
	0x03CC8414 SMADDL X9, X21, X9, X25
	0x03CC8418 LDRSW X23, [X9 + 0x60]
	0x03CC841C LDR W9, [X8 + 0x18]
	0x03CC8420 CMP W23, W9
	0x03CC8424 B.CS 0x3CC8C38
	0x03CC8428 MOVZ W9, 0x50
	0x03CC842C MADD X9, X23, X9, X8
	0x03CC8430 LDRSW X24, [X9 + 0x20]
	0x03CC8434 SXTW X26, W21
	0x03CC8438 MOVZ W9, 0x188
	0x03CC843C MADD X9, X26, X9, X25
	0x03CC8440 STR W24, [X9 + 0x74]
	0x03CC8444 CBZ X22, 0x3CC8C3C
	0x03CC8448 LDRB W9, [X22 + 0x104]
	0x03CC844C CBZ W9, 0x3CC8604
	0x03CC8450 MOVZ W9, 0x50
	0x03CC8454 MADD X8, X23, X9, X8
	0x03CC8458 LDR X8, [X8 + 0x28]
	0x03CC845C CBZ X8, 0x3CC8C3C
	0x03CC8460 LDR W9, [X8 + 0x18]
	0x03CC8464 CMP W24, W9
	0x03CC8468 B.CS 0x3CC8C38
	0x03CC846C LDR V0, [X22 + 0x1C]
	0x03CC8470 LDR V1, [X22 + 0x24]
	0x03CC8474 MOVZ W9, 0x188
	0x03CC8478 MADD X9, X26, X9, X25
	0x03CC847C LDP S3, S4, [X9 + 0xA0]
	0x03CC8480 FADD S0, S0, S1
	0x03CC8484 LDR V1, [X9 + 0xA8]
	0x03CC8488 FMOV S2, W31
	0x03CC848C MOVZ W9, 0xC
	0x03CC8490 MADD X8, X24, X9, X8
	0x03CC8494 FADD S3, S3, S2
	0x03CC8498 FSUB S4, S0, S4
	0x03CC849C FADD S1, S1, S2
	0x03CC84A0 STP S3, S4, [X8 + 0x20]
	0x03CC84A4 STR S1, [X8 + 0x28]
	0x03CC84A8 LDR W8, [X25 + 0x18]
	0x03CC84AC CMP W8, W21
	0x03CC84B0 B.LS 0x3CC8C38
	0x03CC84B4 LDR X8, [X19 + 0x58]
	0x03CC84B8 CBZ X8, 0x3CC8C3C
	0x03CC84BC LDR W9, [X8 + 0x18]
	0x03CC84C0 CMP W23, W9
	0x03CC84C4 B.CS 0x3CC8C38
	0x03CC84C8 MOVZ W9, 0x50
	0x03CC84CC MADD X8, X23, X9, X8
	0x03CC84D0 LDR X8, [X8 + 0x28]
	0x03CC84D4 CBZ X8, 0x3CC8C3C
	0x03CC84D8 LDR W10, [X8 + 0x18]
	0x03CC84DC ADD W9, W24, 0x1
	0x03CC84E0 CMP W9, W10
	0x03CC84E4 B.CS 0x3CC8C38
	0x03CC84E8 MOVZ W10, 0x188
	0x03CC84EC MADD X10, X26, X10, X25
	0x03CC84F0 LDP S2, S3, [X10 + 0x78]
	0x03CC84F4 LDR V4, [X10 + 0x80]
	0x03CC84F8 FMOV S1, W31
	0x03CC84FC SXTW X9, W9
	0x03CC8500 MOVZ W10, 0xC
	0x03CC8504 MADD X8, X9, X10, X8
	0x03CC8508 FADD S2, S2, S1
	0x03CC850C FSUB S3, S0, S3
	0x03CC8510 FADD S1, S4, S1
	0x03CC8514 STP S2, S3, [X8 + 0x20]
	0x03CC8518 STR S1, [X8 + 0x28]
	0x03CC851C LDR W8, [X25 + 0x18]
	0x03CC8520 CMP W8, W21
	0x03CC8524 B.LS 0x3CC8C38
	0x03CC8528 LDR X8, [X19 + 0x58]
	0x03CC852C CBZ X8, 0x3CC8C3C
	0x03CC8530 LDR W9, [X8 + 0x18]
	0x03CC8534 CMP W23, W9
	0x03CC8538 B.CS 0x3CC8C38
	0x03CC853C MOVZ W9, 0x50
	0x03CC8540 MADD X8, X23, X9, X8
	0x03CC8544 LDR X8, [X8 + 0x28]
	0x03CC8548 CBZ X8, 0x3CC8C3C
	0x03CC854C LDR W10, [X8 + 0x18]
	0x03CC8550 ADD W9, W24, 0x2
	0x03CC8554 CMP W9, W10
	0x03CC8558 B.CS 0x3CC8C38
	0x03CC855C MOVZ W10, 0x188
	0x03CC8560 MADD X10, X26, X10, X25
	0x03CC8564 LDP S2, S3, [X10 + 0xC8]
	0x03CC8568 LDR V4, [X10 + 0xD0]
	0x03CC856C FMOV S1, W31
	0x03CC8570 SXTW X9, W9
	0x03CC8574 MOVZ W10, 0xC
	0x03CC8578 MADD X8, X9, X10, X8
	0x03CC857C FADD S2, S2, S1
	0x03CC8580 FSUB S3, S0, S3
	0x03CC8584 FADD S1, S4, S1
	0x03CC8588 STP S2, S3, [X8 + 0x20]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x720000
	013 Move W8, [X19+870]
	014 Move W21, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x49A000
	021 Move X0, [X0+2888]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+870], W8
	025 Compare X20, 0
	026 JumpIfEqual {105}
	027 Move W8, [X20+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, 0x49A000
	030 Move X9, [X9+2888]
	031 Move X0, [X9]
	032 Add X9, X20, W21
	033 Move W19, [X9+32]
	034 Move W10, [X0+224]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move W8, [X20+24]
	039 Add W23, W21, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add W22, W21, 2
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add W24, W21, 3
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add W26, W21, 4
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W27, W21, 5
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add W9, W21, 6
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W25, W21, 7
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X28, X20, 32
	054 Move W0, [X28]
	055 Call TextGeneratorUtilities.HexToInt, X0
	056 Move W8, [X28]
	057 Move W20, W0
	058 Move W0, W8
	059 Call TextGeneratorUtilities.HexToInt, X0
	060 Move W8, [X28]
	061 Move W26, W0
	062 ShiftRight W26, 24
	063 And W26, W26, 0x7FFFFF
	064 Move W0, W8
	065 Call TextGeneratorUtilities.HexToInt, X0
	066 Move W8, [X28]
	067 Move W21, W0
	068 Move W0, W8
	069 Call TextGeneratorUtilities.HexToInt, X0
	070 Move W8, [X28]
	071 Move W22, W0
	072 Move W0, W8
	073 Call TextGeneratorUtilities.HexToInt, X0
	074 Move W8, [X28]
	075 Move W23, W0
	076 Move W0, W8
	077 Call TextGeneratorUtilities.HexToInt, X0
	078 Move W24, W0
	079 Move W0, W19
	080 Call TextGeneratorUtilities.HexToInt, X0
	081 Move W8, [X28]
	082 Move W19, W0
	083 Move W0, W8
	084 Call TextGeneratorUtilities.HexToInt, X0
	085 Add W8, W26, W20
	086 Add W8, W8, W21
	087 Add W8, W8, W22
	088 Add W8, W8, W23
	089 Add W8, W8, W24
	090 Add W8, W8, W19
	091 Move X20, [X31+80]
	092 Move X19, [X31+88]
	093 Move X22, [X31+64]
	094 Move X21, [X31+72]
	095 Move X24, [X31+48]
	096 Move X23, [X31+56]
	097 Move X26, [X31+32]
	098 Move X25, [X31+40]
	099 Move X28, [X31+16]
	100 Move X27, [X31+24]
	101 Add W0, W8, W0
	102 Move X30, [X31+96]
	103 Return X0
	104 Call 0x1C17F28
	105 Call 0x1C17F20

Method: System.UInt32 GetUTF32(UnityEngine.TextCore.Text.TextBackingContainer text, System.Int32 i)

Disassembly:
	0x03CC885C LDUR V0, [X10 + 0xD4]
	0x03CC8860 SXTW X28, W9
	0x03CC8864 ADD X8, X8, X28, 0x4, LSL
	0x03CC8868 STR V0, [X8 + 0x2]
	0x03CC886C LDR X8, [X19 + 0x58]
	0x03CC8870 CBZ X8, 0x3CC8C3C
	0x03CC8874 LDR W9, [X8 + 0x18]
	0x03CC8878 CMP W23, W9
	0x03CC887C B.CS 0x3CC8C38
	0x03CC8880 LDR W9, [X25 + 0x18]
	0x03CC8884 CMP W9, W21
	0x03CC8888 B.LS 0x3CC8C38
	0x03CC888C MOVZ W9, 0x50
	0x03CC8890 MADD X8, X23, X9, X8
	0x03CC8894 LDR X8, [X8 + 0x40]
	0x03CC8898 CBZ X8, 0x3CC8C3C
	0x03CC889C LDR W10, [X8 + 0x18]
	0x03CC88A0 ADD W9, W24, 0x3
	0x03CC88A4 CMP W9, W10
	0x03CC88A8 B.CS 0x3CC8C38
	0x03CC88AC MOVZ W10, 0x188
	0x03CC88B0 MADD X10, X26, X10, X25
	0x03CC88B4 LDUR V0, [X10 + 0xFC]
	0x03CC88B8 SXTW X27, W9
	0x03CC88BC ADD X8, X8, X27, 0x4, LSL
	0x03CC88C0 STR V0, [X8 + 0x2]
	0x03CC88C4 LDR X8, [X19 + 0x58]
	0x03CC88C8 CBZ X8, 0x3CC8C3C
	0x03CC88CC LDR W9, [X8 + 0x18]
	0x03CC88D0 CMP W23, W9
	0x03CC88D4 B.CS 0x3CC8C38
	0x03CC88D8 LDR W9, [X25 + 0x18]
	0x03CC88DC CMP W9, W21
	0x03CC88E0 B.LS 0x3CC8C38
	0x03CC88E4 MOVZ W9, 0x50
	0x03CC88E8 MADD X8, X23, X9, X8
	0x03CC88EC LDR X8, [X8 + 0x48]
	0x03CC88F0 CBZ X8, 0x3CC8C3C
	0x03CC88F4 LDR W9, [X8 + 0x18]
	0x03CC88F8 CMP W24, W9
	0x03CC88FC B.CS 0x3CC8C38
	0x03CC8900 MOVZ W9, 0x188
	0x03CC8904 MADD X9, X26, X9, X25
	0x03CC8908 LDUR V0, [X9 + 0xBC]
	0x03CC890C ADD X8, X8, X24, 0x3, LSL
	0x03CC8910 STR D0, [X8 + 0x20]
	0x03CC8914 LDR X8, [X19 + 0x58]
	0x03CC8918 CBZ X8, 0x3CC8C3C
	0x03CC891C LDR W9, [X8 + 0x18]
	0x03CC8920 CMP W23, W9
	0x03CC8924 B.CS 0x3CC8C38
	0x03CC8928 LDR W9, [X25 + 0x18]
	0x03CC892C CMP W9, W21
	0x03CC8930 B.LS 0x3CC8C38
	0x03CC8934 MOVZ W9, 0x50
	0x03CC8938 MADD X8, X23, X9, X8
	0x03CC893C LDR X8, [X8 + 0x48]
	0x03CC8940 CBZ X8, 0x3CC8C3C
	0x03CC8944 LDR W9, [X8 + 0x18]
	0x03CC8948 CMP W29, W9
	0x03CC894C B.CS 0x3CC8C38
	0x03CC8950 MOVZ W9, 0x188
	0x03CC8954 MADD X9, X26, X9, X25
	0x03CC8958 LDUR V0, [X9 + 0x94]
	0x03CC895C ADD X8, X8, X29, 0x3, LSL
	0x03CC8960 STR D0, [X8 + 0x20]
	0x03CC8964 LDR X8, [X19 + 0x58]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x720000
	007 Move [X31], X0
	008 Move [X31+8], X1
	009 Move X20, 0x49A000
	010 Move W8, [X21+871]
	011 Move X20, [X20+2888]
	012 Move W19, W2
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x49A000
	018 Move X0, [X0+2888]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+871], W8
	022 Add X0, X31, 0
	023 Move W1, W19
	024 Call TextBackingContainer.get_Item, X0, X1
	025 Move X8, [X20]
	026 Move W20, W0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move W0, W20
	033 Call TextGeneratorUtilities.HexToInt, X0
	034 Move W20, W0
	035 Add W1, W19, 1
	036 Add X0, X31, 0
	037 Call TextBackingContainer.get_Item, X0, X1
	038 Call TextGeneratorUtilities.HexToInt, X0
	039 Move W8, W0
	040 ShiftRight W8, 8
	041 And W8, W8, 127
	042 Add W1, W19, 2
	043 Add X0, X31, 0
	044 Add W20, W8, W20
	045 Call TextBackingContainer.get_Item, X0, X1
	046 Call TextGeneratorUtilities.HexToInt, X0
	047 Add W20, W20, W0
	048 Add W1, W19, 3
	049 Add X0, X31, 0
	050 Call TextBackingContainer.get_Item, X0, X1
	051 Call TextGeneratorUtilities.HexToInt, X0
	052 Add W20, W20, W0
	053 Add W1, W19, 4
	054 Add X0, X31, 0
	055 Call TextBackingContainer.get_Item, X0, X1
	056 Call TextGeneratorUtilities.HexToInt, X0
	057 Add W20, W20, W0
	058 Add W1, W19, 5
	059 Add X0, X31, 0
	060 Call TextBackingContainer.get_Item, X0, X1
	061 Call TextGeneratorUtilities.HexToInt, X0
	062 Add W20, W20, W0
	063 Add W1, W19, 6
	064 Add X0, X31, 0
	065 Call TextBackingContainer.get_Item, X0, X1
	066 Call TextGeneratorUtilities.HexToInt, X0
	067 Add W20, W20, W0
	068 Add W1, W19, 7
	069 Add X0, X31, 0
	070 Call TextBackingContainer.get_Item, X0, X1
	071 Call TextGeneratorUtilities.HexToInt, X0
	072 Add W0, W20, W0
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X30, [X31+16]
	076 Move X21, [X31+24]
	077 Add X31, X31, 48
	078 Return X0

Method: System.Void FillCharacterVertexBuffers(System.Int32 i, System.Boolean convertToLinearSpace, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC8968 CBZ X8, 0x3CC8C3C
	0x03CC896C LDR W9, [X8 + 0x18]
	0x03CC8970 CMP W23, W9
	0x03CC8974 B.CS 0x3CC8C38
	0x03CC8978 LDR W9, [X25 + 0x18]
	0x03CC897C CMP W9, W21
	0x03CC8980 B.LS 0x3CC8C38
	0x03CC8984 MOVZ W9, 0x50
	0x03CC8988 MADD X8, X23, X9, X8
	0x03CC898C LDR X8, [X8 + 0x48]
	0x03CC8990 CBZ X8, 0x3CC8C3C
	0x03CC8994 LDR W9, [X8 + 0x18]
	0x03CC8998 CMP W28, W9
	0x03CC899C B.CS 0x3CC8C38
	0x03CC89A0 MOVZ W9, 0x188
	0x03CC89A4 MADD X9, X26, X9, X25
	0x03CC89A8 LDUR V0, [X9 + 0xE4]
	0x03CC89AC ADD X8, X8, X28, 0x3, LSL
	0x03CC89B0 STR D0, [X8 + 0x20]
	0x03CC89B4 LDR X8, [X19 + 0x58]
	0x03CC89B8 CBZ X8, 0x3CC8C3C
	0x03CC89BC LDR W9, [X8 + 0x18]
	0x03CC89C0 CMP W23, W9
	0x03CC89C4 B.CS 0x3CC8C38
	0x03CC89C8 LDR W9, [X25 + 0x18]
	0x03CC89CC CMP W9, W21
	0x03CC89D0 B.LS 0x3CC8C38
	0x03CC89D4 MOVZ W9, 0x50
	0x03CC89D8 MADD X8, X23, X9, X8
	0x03CC89DC LDR X8, [X8 + 0x48]
	0x03CC89E0 CBZ X8, 0x3CC8C3C
	0x03CC89E4 LDR W9, [X8 + 0x18]
	0x03CC89E8 CMP W27, W9
	0x03CC89EC B.CS 0x3CC8C38
	0x03CC89F0 MOVZ W9, 0x188
	0x03CC89F4 MADD X9, X26, X9, X25
	0x03CC89F8 ADD X9, X9, 0x10C
	0x03CC89FC LDR V0, [X9]
	0x03CC8A00 ADD X8, X8, X27, 0x3, LSL
	0x03CC8A04 STR D0, [X8 + 0x20]
	0x03CC8A08 LDR X8, [X19 + 0x58]
	0x03CC8A0C CBZ X8, 0x3CC8C3C
	0x03CC8A10 LDR W9, [X8 + 0x18]
	0x03CC8A14 CMP W23, W9
	0x03CC8A18 B.CS 0x3CC8C38
	0x03CC8A1C LDR W9, [X25 + 0x18]
	0x03CC8A20 CMP W9, W21
	0x03CC8A24 B.LS 0x3CC8C38
	0x03CC8A28 MOVZ W9, 0x50
	0x03CC8A2C MOVZ W10, 0x188
	0x03CC8A30 MADD X8, X23, X9, X8
	0x03CC8A34 MADD X9, X26, X10, X25
	0x03CC8A38 LDR X20, [X8 + 0x50]
	0x03CC8A3C LDR W22, [X9 + 0xC4]
	0x03CC8A40 TBZ X1, 0x0, 0x3CC8A6C
	0x03CC8A44 ADRP X8, 0x499000
	0x03CC8A48 LDR X8, [X8 + 0xB48]
	0x03CC8A4C LDR X0, [X8]
	0x03CC8A50 LDR W8, [X0 + 0xE0]
	0x03CC8A54 CBNZ W8, 0x3CC8A5C
	0x03CC8A58 BL 0x1C16DFC
	0x03CC8A5C MOV X0, X22
	0x03CC8A60 BL 0x3CC8304
	0x03CC8A64 LDR W1, [X31 + 0xC]
	0x03CC8A68 MOV W22, W0
	0x03CC8A6C CBZ X20, 0x3CC8C3C
	0x03CC8A70 LDR W8, [X20 + 0x18]
	0x03CC8A74 CMP W24, W8
	0x03CC8A78 B.CS 0x3CC8C38
	0x03CC8A7C ADD X8, X20, X24, 0x2, LSL
	0x03CC8A80 STR W22, [X8 + 0x20]
	0x03CC8A84 LDR X8, [X19 + 0x58]
	0x03CC8A88 CBZ X8, 0x3CC8C3C
	0x03CC8A8C LDR W9, [X8 + 0x18]
	0x03CC8A90 CMP W23, W9
	0x03CC8A94 B.CS 0x3CC8C38
	0x03CC8A98 LDR W9, [X25 + 0x18]
	0x03CC8A9C CMP W9, W21
	0x03CC8AA0 B.LS 0x3CC8C38
	0x03CC8AA4 MOVZ W9, 0x50
	0x03CC8AA8 MOVZ W10, 0x188
	0x03CC8AAC MADD X8, X23, X9, X8
	0x03CC8AB0 MADD X9, X26, X10, X25
	0x03CC8AB4 LDR X20, [X8 + 0x50]
	0x03CC8AB8 LDR W22, [X9 + 0x9C]
	0x03CC8ABC TBZ X1, 0x0, 0x3CC8AE8
	0x03CC8AC0 ADRP X8, 0x499000
	0x03CC8AC4 LDR X8, [X8 + 0xB48]
	0x03CC8AC8 LDR X0, [X8]
	0x03CC8ACC LDR W8, [X0 + 0xE0]
	0x03CC8AD0 CBNZ W8, 0x3CC8AD8
	0x03CC8AD4 BL 0x1C16DFC
	0x03CC8AD8 MOV X0, X22
	0x03CC8ADC BL 0x3CC8304
	0x03CC8AE0 LDR W1, [X31 + 0xC]
	0x03CC8AE4 MOV W22, W0
	0x03CC8AE8 CBZ X20, 0x3CC8C3C
	0x03CC8AEC LDR W8, [X20 + 0x18]
	0x03CC8AF0 CMP W29, W8
	0x03CC8AF4 B.CS 0x3CC8C38
	0x03CC8AF8 ADD X8, X20, X29, 0x2, LSL
	0x03CC8AFC STR W22, [X8 + 0x20]
	0x03CC8B00 LDR X8, [X19 + 0x58]
	0x03CC8B04 CBZ X8, 0x3CC8C3C
	0x03CC8B08 LDR W9, [X8 + 0x18]
	0x03CC8B0C CMP W23, W9
	0x03CC8B10 B.CS 0x3CC8C38
	0x03CC8B14 LDR W9, [X25 + 0x18]
	0x03CC8B18 CMP W9, W21
	0x03CC8B1C B.LS 0x3CC8C38
	0x03CC8B20 MOVZ W9, 0x50
	0x03CC8B24 MOVZ W10, 0x188
	0x03CC8B28 MADD X8, X23, X9, X8
	0x03CC8B2C MADD X9, X26, X10, X25
	0x03CC8B30 LDR X20, [X8 + 0x50]
	0x03CC8B34 LDR W22, [X9 + 0xEC]
	0x03CC8B38 TBZ X1, 0x0, 0x3CC8B64
	0x03CC8B3C ADRP X8, 0x499000
	0x03CC8B40 LDR X8, [X8 + 0xB48]
	0x03CC8B44 LDR X0, [X8]
	0x03CC8B48 LDR W8, [X0 + 0xE0]
	0x03CC8B4C CBNZ W8, 0x3CC8B54
	0x03CC8B50 BL 0x1C16DFC
	0x03CC8B54 MOV X0, X22
	0x03CC8B58 BL 0x3CC8304
	0x03CC8B5C LDR W1, [X31 + 0xC]
	0x03CC8B60 MOV W22, W0
	0x03CC8B64 CBZ X20, 0x3CC8C3C
	0x03CC8B68 LDR W8, [X20 + 0x18]
	0x03CC8B6C CMP W28, W8
	0x03CC8B70 B.CS 0x3CC8C38
	0x03CC8B74 ADD X8, X20, X28, 0x2, LSL
	0x03CC8B78 STR W22, [X8 + 0x20]
	0x03CC8B7C LDR X8, [X19 + 0x58]
	0x03CC8B80 CBZ X8, 0x3CC8C3C
	0x03CC8B84 LDR W9, [X8 + 0x18]
	0x03CC8B88 CMP W23, W9
	0x03CC8B8C B.CS 0x3CC8C38
	0x03CC8B90 LDR W9, [X25 + 0x18]
	0x03CC8B94 CMP W9, W21
	0x03CC8B98 B.LS 0x3CC8C38
	0x03CC8B9C MOVZ W9, 0x50
	0x03CC8BA0 MOVZ W10, 0x188
	0x03CC8BA4 MADD X8, X23, X9, X8
	0x03CC8BA8 MADD X9, X26, X10, X25
	0x03CC8BAC LDR X20, [X8 + 0x50]
	0x03CC8BB0 LDR W21, [X9 + 0x114]
	0x03CC8BB4 TBZ X1, 0x0, 0x3CC8BDC
	0x03CC8BB8 ADRP X8, 0x499000
	0x03CC8BBC LDR X8, [X8 + 0xB48]
	0x03CC8BC0 LDR X0, [X8]
	0x03CC8BC4 LDR W8, [X0 + 0xE0]
	0x03CC8BC8 CBNZ W8, 0x3CC8BD0
	0x03CC8BCC BL 0x1C16DFC
	0x03CC8BD0 MOV X0, X21
	0x03CC8BD4 BL 0x3CC8304
	0x03CC8BD8 MOV W21, W0
	0x03CC8BDC CBZ X20, 0x3CC8C3C
	0x03CC8BE0 LDR W8, [X20 + 0x18]
	0x03CC8BE4 CMP W27, W8
	0x03CC8BE8 B.CS 0x3CC8C38
	0x03CC8BEC ADD X8, X20, X27, 0x2, LSL
	0x03CC8BF0 STR W21, [X8 + 0x20]
	0x03CC8BF4 LDR X8, [X19 + 0x58]
	0x03CC8BF8 CBZ X8, 0x3CC8C3C
	0x03CC8BFC LDR W9, [X8 + 0x18]
	0x03CC8C00 CMP W23, W9
	0x03CC8C04 B.CS 0x3CC8C38
	0x03CC8C08 MOVZ W10, 0x50
	0x03CC8C0C ADD W9, W24, 0x4
	0x03CC8C10 MADD X8, X23, X10, X8
	0x03CC8C14 LDP X20, X19, [X31 + 0x60]
	0x03CC8C18 LDP X22, X21, [X31 + 0x50]
	0x03CC8C1C LDP X24, X23, [X31 + 0x40]
	0x03CC8C20 LDP X26, X25, [X31 + 0x30]
	0x03CC8C24 LDP X28, X27, [X31 + 0x20]
	0x03CC8C28 LDP X29, X30, [X31 + 0x10]
	0x03CC8C2C STR W9, [X8 + 0x20]
	0x03CC8C30 ADD X31, X31, 0x70
	0x03CC8C34 RET
	0x03CC8C38 BL 0x1C16F28
	0x03CC8C3C BL 0x1C16F20
	0x03CC8C40 STR X30, [X31 - 0x10]!
	0x03CC8C44 CMP W0, W1
	0x03CC8C48 B.GT 0x3CC8DB0
	0x03CC8C4C CBZ X2, 0x3CC8DB8
	0x03CC8C50 UNIMPLEMENTED
	0x03CC8C54 MOVZ W8, 0x188
	0x03CC8C58 LDR X10, [X2 + 0x30]
	0x03CC8C5C CBZ X10, 0x3CC8DB8
	0x03CC8C60 LDR W9, [X10 + 0x18]
	0x03CC8C64 CMP W0, W9
	0x03CC8C68 B.CS 0x3CC8DBC
	0x03CC8C6C SXTW X9, W0
	0x03CC8C70 MADD X10, X9, X8, X10
	0x03CC8C74 LDR V2, [X10 + 0x128]
	0x03CC8C78 FSUB S2, S2, S0
	0x03CC8C7C STR S2, [X10 + 0x128]
	0x03CC8C80 LDR X10, [X2 + 0x30]
	0x03CC8C84 CBZ X10, 0x3CC8DB8
	0x03CC8C88 LDR W11, [X10 + 0x18]
	0x03CC8C8C CMP W0, W11
	0x03CC8C90 B.CS 0x3CC8DBC
	0x03CC8C94 MADD X10, X9, X8, X10
	0x03CC8C98 LDR V2, [X10 + 0x11C]
	0x03CC8C9C FSUB S2, S2, S0
	0x03CC8CA0 STR S2, [X10 + 0x11C]
	0x03CC8CA4 LDR X10, [X2 + 0x30]
	0x03CC8CA8 CBZ X10, 0x3CC8DB8
	0x03CC8CAC LDR W11, [X10 + 0x18]
	0x03CC8CB0 CMP W0, W11
	0x03CC8CB4 B.CS 0x3CC8DBC
	0x03CC8CB8 MADD X10, X9, X8, X10
	0x03CC8CBC LDR V2, [X10 + 0x134]
	0x03CC8CC0 FSUB S2, S2, S0
	0x03CC8CC4 STR S2, [X10 + 0x134]
	0x03CC8CC8 LDR X10, [X2 + 0x30]
	0x03CC8CCC CBZ X10, 0x3CC8DB8
	0x03CC8CD0 LDR W11, [X10 + 0x18]
	0x03CC8CD4 CMP W0, W11
	0x03CC8CD8 B.CS 0x3CC8DBC
	0x03CC8CDC MADD X10, X9, X8, X10
	0x03CC8CE0 LDR V2, [X10 + 0x140]
	0x03CC8CE4 FSUB S2, S2, S0
	0x03CC8CE8 STR S2, [X10 + 0x140]
	0x03CC8CEC LDR X10, [X2 + 0x30]
	0x03CC8CF0 CBZ X10, 0x3CC8DB8
	0x03CC8CF4 LDR W11, [X10 + 0x18]
	0x03CC8CF8 CMP W0, W11
	0x03CC8CFC B.CS 0x3CC8DBC
	0x03CC8D00 MADD X11, X9, X8, X10
	0x03CC8D04 ADD X12, X11, 0x14C
	0x03CC8D08 LDR V2, [X12]
	0x03CC8D0C FSUB V2.2S, V2.2S, V1.2S
	0x03CC8D10 STR D2, [X12]
	0x03CC8D14 LDR V2, [X11 + 0x154]
	0x03CC8D18 LDRB W12, [X11 + 0x1A0]
	0x03CC8D1C FSUB S2, S2, S0
	0x03CC8D20 STR S2, [X11 + 0x154]
	0x03CC8D24 CBZ W12, 0x3CC8DA4
	0x03CC8D28 MADD X10, X9, X8, X10
	0x03CC8D2C LDR V2, [X10 + 0xA4]
	0x03CC8D30 FSUB S2, S2, S0
	0x03CC8D34 STR S2, [X10 + 0xA4]
	0x03CC8D38 LDR X10, [X2 + 0x30]
	0x03CC8D3C CBZ X10, 0x3CC8DB8
	0x03CC8D40 LDR W11, [X10 + 0x18]
	0x03CC8D44 CMP W0, W11
	0x03CC8D48 B.CS 0x3CC8DBC
	0x03CC8D4C MADD X10, X9, X8, X10
	0x03CC8D50 LDR V2, [X10 + 0x7C]
	0x03CC8D54 FSUB S2, S2, S0
	0x03CC8D58 STR S2, [X10 + 0x7C]
	0x03CC8D5C LDR X10, [X2 + 0x30]
	0x03CC8D60 CBZ X10, 0x3CC8DB8
	0x03CC8D64 LDR W11, [X10 + 0x18]
	0x03CC8D68 CMP W0, W11
	0x03CC8D6C B.CS 0x3CC8DBC
	0x03CC8D70 MADD X10, X9, X8, X10
	0x03CC8D74 LDR V2, [X10 + 0xCC]
	0x03CC8D78 FSUB S2, S2, S0
	0x03CC8D7C STR S2, [X10 + 0xCC]
	0x03CC8D80 LDR X10, [X2 + 0x30]
	0x03CC8D84 CBZ X10, 0x3CC8DB8
	0x03CC8D88 LDR W11, [X10 + 0x18]
	0x03CC8D8C CMP W0, W11
	0x03CC8D90 B.CS 0x3CC8DBC
	0x03CC8D94 MADD X9, X9, X8, X10
	0x03CC8D98 LDR V2, [X9 + 0xF4]
	0x03CC8D9C FSUB S2, S2, S0
	0x03CC8DA0 STR S2, [X9 + 0xF4]
	0x03CC8DA4 ADD W0, W0, 0x1
	0x03CC8DA8 CMP W0, W1
	0x03CC8DAC B.LE 0x3CC8C58
	0x03CC8DB0 LDR X30, [X31], #0x10
	0x03CC8DB4 RET
	0x03CC8DB8 BL 0x1C16F20
	0x03CC8DBC BL 0x1C16F28
	0x03CC8DC0 SUB X31, X31, 0x110
	0x03CC8DC4 STP X29, X30, [X31 + 0xC0]
	0x03CC8DC8 STP X26, X25, [X31 + 0xD0]
	0x03CC8DCC STP X24, X23, [X31 + 0xE0]
	0x03CC8DD0 STP X22, X21, [X31 + 0xF0]
	0x03CC8DD4 STP X20, X19, [X31 + 0x100]
	0x03CC8DD8 ADRP X21, 0x71F000
	0x03CC8DDC LDRB W8, [X21 + 0x36A]
	0x03CC8DE0 MOV X19, X1
	0x03CC8DE4 MOV W20, W0
	0x03CC8DE8 TBNZ X8, 0x0, 0x3CC8E0C
	0x03CC8DEC ADRP X0, 0x499000
	0x03CC8DF0 LDR X0, [X0 + 0xDB0]
	0x03CC8DF4 BL 0x1C16CF4
	0x03CC8DF8 ADRP X0, 0x499000
	0x03CC8DFC LDR X0, [X0 + 0xB48]
	0x03CC8E00 BL 0x1C16CF4
	0x03CC8E04 MOVZ W8, 0x1
	0x03CC8E08 STRB W8, [X21 + 0x36A]
	0x03CC8E0C ADRP X22, 0x499000
	0x03CC8E10 LDR X22, [X22 + 0xDB0]
	0x03CC8E14 CMP W20, 0x400
	0x03CC8E18 B.LE 0x3CC8E24
	0x03CC8E1C ADD W21, W20, 0x100
	0x03CC8E20 B 0x3CC8E34
	0x03CC8E24 ADD W0, W20, 0x1
	0x03CC8E28 MOV X1, X31
	0x03CC8E2C BL 0x3C2B340
	0x03CC8E30 MOV W21, W0
	0x03CC8E34 LDR X0, [X22]
	0x03CC8E38 MOV W1, W21
	0x03CC8E3C BL 0x1C16D6C
	0x03CC8E40 CBZ X19, 0x3CC8F64
	0x03CC8E44 MOV X20, X0
	0x03CC8E48 CMP W21, 0x1
	0x03CC8E4C B.LT 0x3CC8F44
	0x03CC8E50 ADRP X24, 0x499000
	0x03CC8E54 LDR X24, [X24 + 0xB48]
	0x03CC8E58 MOVZ W25, 0xFE00
	0x03CC8E5C MOVZ W26, 0xFE00
	0x03CC8E60 MOV X22, X31
	0x03CC8E64 MOV X23, X31
	0x03CC8E68 BIC W21, W21, W21, 0x1F
	0x03CC8E6C MOVK W25, 0xC6FF0000
	0x03CC8E70 MOVK W26, 0x46FF0000
	0x03CC8E74 LDR X8, [X19 + 0x48]
	0x03CC8E78 CBZ X8, 0x3CC8F64
	0x03CC8E7C LDR W9, [X8 + 0x18]
	0x03CC8E80 CMP X23, W9, SXTW
	0x03CC8E84 B.GE 0x3CC8EDC
	0x03CC8E88 CMP X23, X9
	0x03CC8E8C B.CS 0x3CC8F68
	0x03CC8E90 ADD X8, X8, X22
	0x03CC8E94 ADD X1, X8, 0x20
	0x03CC8E98 ADD X0, X31, 0x60
	0x03CC8E9C MOVZ W2, 0x60
	0x03CC8EA0 BL 0x3EB1AC0
	0x03CC8EA4 CBZ X20, 0x3CC8F64
	0x03CC8EA8 ADD X0, X31, 0x0
	0x03CC8EAC ADD X1, X31, 0x60
	0x03CC8EB0 MOVZ W2, 0x60
	0x03CC8EB4 BL 0x3EB1AC0
	0x03CC8EB8 LDR W8, [X20 + 0x18]
	0x03CC8EBC CMP X23, X8
	0x03CC8EC0 B.CS 0x3CC8F68
	0x03CC8EC4 ADD X8, X20, X22
	0x03CC8EC8 ADD X0, X8, 0x20
	0x03CC8ECC ADD X1, X31, 0x0
	0x03CC8ED0 MOVZ W2, 0x60
	0x03CC8ED4 BL 0x3EB1AC0
	0x03CC8ED8 B 0x3CC8F34
	0x03CC8EDC CBZ X20, 0x3CC8F64
	0x03CC8EE0 LDR W8, [X20 + 0x18]
	0x03CC8EE4 CMP X23, X8
	0x03CC8EE8 B.CS 0x3CC8F68
	0x03CC8EEC LDR X0, [X24]
	0x03CC8EF0 LDR W9, [X0 + 0xE0]
	0x03CC8EF4 CBNZ W9, 0x3CC8F04
	0x03CC8EF8 BL 0x1C16DFC
	0x03CC8EFC LDR X0, [X24]
	0x03CC8F00 LDR W8, [X20 + 0x18]
	0x03CC8F04 LDR X9, [X0 + 0xB8]
	0x03CC8F08 CMP X23, X8
	0x03CC8F0C LDR X10, [X9]
	0x03CC8F10 ADD X9, X20, X22
	0x03CC8F14 STR X10, [X9 + 0x70]
	0x03CC8F18 B.CS 0x3CC8F68
	0x03CC8F1C LDR X8, [X24]
	0x03CC8F20 LDR X8, [X8 + 0xB8]
	0x03CC8F24 LDR X8, [X8 + 0x8]
	0x03CC8F28 STR W25, [X9 + 0x50]
	0x03CC8F2C STR W26, [X9 + 0x58]
	0x03CC8F30 STR X8, [X9 + 0x78]
	0x03CC8F34 ADD X23, X23, 0x1
	0x03CC8F38 CMP X21, X23
	0x03CC8F3C ADD X22, X22, 0x60
	0x03CC8F40 B.NE 0x3CC8E74
	0x03CC8F44 STR X20, [X19 + 0x48]
	0x03CC8F48 LDP X20, X19, [X31 + 0x100]
	0x03CC8F4C LDP X22, X21, [X31 + 0xF0]
	0x03CC8F50 LDP X24, X23, [X31 + 0xE0]
	0x03CC8F54 LDP X26, X25, [X31 + 0xD0]
	0x03CC8F58 LDP X29, X30, [X31 + 0xC0]
	0x03CC8F5C ADD X31, X31, 0x110
	0x03CC8F60 RET
	0x03CC8F64 BL 0x1C16F20
	0x03CC8F68 BL 0x1C16F28
	0x03CC8F6C SUB W8, W0, 0x1
	0x03CC8F70 CMP W8, 0x3
	0x03CC8F74 CSEL W0, W0, W31, CC
	0x03CC8F78 RET
	0x03CC8F7C SUB W8, W0, 0x1
	0x03CC8F80 CMP W8, 0x7
	0x03CC8F84 B.HI 0x3CC8F98
	0x03CC8F88 ADRP X9, 0xFFFFFFFFFCE65000
	0x03CC8F8C ADD X9, X9, 0x9D4
	0x03CC8F90 LDR W0, [X9, W8, SXTW]
	0x03CC8F94 RET
	0x03CC8F98 MOVZ W0, 0x101
	0x03CC8F9C RET
	0x03CC8FA0 MOVZ W9, 0x2400
	0x03CC8FA4 ADD W8, W1, W0, 0xA, LSL
	0x03CC8FA8 MOVK W9, 0xFCA00000
	0x03CC8FAC ADD W0, W8, W9
	0x03CC8FB0 RET
	0x03CC8FB4 SUB X31, X31, 0x60
	0x03CC8FB8 STP X1, X30, [X31 + 0x8]
	0x03CC8FBC STP X26, X25, [X31 + 0x20]
	0x03CC8FC0 STP X24, X23, [X31 + 0x30]
	0x03CC8FC4 STP X22, X21, [X31 + 0x40]
	0x03CC8FC8 STP X20, X19, [X31 + 0x50]
	0x03CC8FCC ADRP X20, 0x71F000
	0x03CC8FD0 LDRB W8, [X20 + 0x36B]
	0x03CC8FD4 MOV W19, W2
	0x03CC8FD8 MOV X21, X0
	0x03CC8FDC STR X0, [X31]
	0x03CC8FE0 TBNZ X8, 0x0, 0x3CC8FF8
	0x03CC8FE4 ADRP X0, 0x499000
	0x03CC8FE8 LDR X0, [X0 + 0xB48]
	0x03CC8FEC BL 0x1C16CF4
	0x03CC8FF0 MOVZ W8, 0x1
	0x03CC8FF4 STRB W8, [X20 + 0x36B]
	0x03CC8FF8 CBZ X21, 0x3CC90B4
	0x03CC8FFC MOVZ W8, 0xFFEF
	0x03CC9000 MOVK W8, 0x7FFF0000
	0x03CC9004 CMP W19, W8
	0x03CC9008 MOV W20, W31
	0x03CC900C B.GT 0x3CC9094
	0x03CC9010 LDR W22, [X21 + 0x18]
	0x03CC9014 CMP W22, W19
	0x03CC9018 B.LE 0x3CC9094
	0x03CC901C ADRP X24, 0x498000
	0x03CC9020 LDR X24, [X24 + 0xB48]
	0x03CC9024 MOVZ X26, 0x1
	0x03CC9028 MOV W20, W31
	0x03CC902C ADD W23, W19, 0x10
	0x03CC9030 MOVZ W25, 0x1
	0x03CC9034 MOVK X26, 0x60000000
	0x03CC9038 ADD X0, X31, 0x0
	0x03CC903C MOV W1, W19
	0x03CC9040 BL 0x3CC5394
	0x03CC9044 MOV W21, W0
	0x03CC9048 CMP W0, 0x3E
	0x03CC904C B.HI 0x3CC9060
	0x03CC9050 MOV W8, W21
	0x03CC9054 LSLV X8, X25, X8
	0x03CC9058 ANDS X31, X8, X26, 0x0
	0x03CC905C B.NE 0x3CC9094
	0x03CC9060 LDR X0, [X24]
	0x03CC9064 LDR W8, [X0 + 0xE0]
	0x03CC9068 CBNZ W8, 0x3CC9070
	0x03CC906C BL 0x1C16DFC
	0x03CC9070 MOV W0, W21
	0x03CC9074 BL 0x3CC90B8
	0x03CC9078 ADD W8, W20, W20, 0x5, LSL
	0x03CC907C ADD W19, W19, 0x1
	0x03CC9080 CMP W19, W23
	0x03CC9084 EOR W20, W0, W8, 0x0
	0x03CC9088 B.GE 0x3CC9094
	0x03CC908C CMP W19, W22
	0x03CC9090 B.LT 0x3CC9038
	0x03CC9094 MOV W0, W20
	0x03CC9098 LDP X20, X19, [X31 + 0x50]
	0x03CC909C LDP X22, X21, [X31 + 0x40]
	0x03CC90A0 LDP X24, X23, [X31 + 0x30]
	0x03CC90A4 LDP X26, X25, [X31 + 0x20]
	0x03CC90A8 LDR X30, [X31 + 0x10]
	0x03CC90AC ADD X31, X31, 0x60
	0x03CC90B0 RET
	0x03CC90B4 BL 0x1C16F20
	0x03CC90B8 STP X30, X21, [X31 - 0x20]!
	0x03CC90BC STP X20, X19, [X31 + 0x10]
	0x03CC90C0 ADRP X20, 0x71E000
	0x03CC90C4 ADRP X21, 0x490000
	0x03CC90C8 LDRB W8, [X20 + 0x36E]
	0x03CC90CC LDR X21, [X21 + 0xA80]
	0x03CC90D0 MOV W19, W0
	0x03CC90D4 TBNZ X8, 0x0, 0x3CC90EC
	0x03CC90D8 ADRP X0, 0x490000
	0x03CC90DC LDR X0, [X0 + 0xA80]
	0x03CC90E0 BL 0x1C16CF4
	0x03CC90E4 MOVZ W8, 0x1
	0x03CC90E8 STRB W8, [X20 + 0x36E]
	0x03CC90EC LDR X0, [X21]
	0x03CC90F0 CBZ X0, 0x3CC9128
	0x03CC90F4 LDR W8, [X0 + 0x10]
	0x03CC90F8 MOV W9, W19
	0x03CC90FC SUB W8, W8, 0x1
	0x03CC9100 CMP X9, W8, SXTW
	0x03CC9104 B.GT 0x3CC9118
	0x03CC9108 MOV W1, W19
	0x03CC910C MOV X2, X31
	0x03CC9110 BL 0x3222A1C
	0x03CC9114 AND W19, W0, 0xFFFF
	0x03CC9118 MOV W0, W19
	0x03CC911C LDP X20, X19, [X31 + 0x10]
	0x03CC9120 LDP X30, X21, [X31], #0x20
	0x03CC9124 RET
	0x03CC9128 BL 0x1C16F20
	0x03CC912C STP X30, X21, [X31 - 0x20]!
	0x03CC9130 STP X20, X19, [X31 + 0x10]
	0x03CC9134 ADRP X20, 0x71E000
	0x03CC9138 ADRP X21, 0x490000
	0x03CC913C LDRB W8, [X20 + 0x36F]
	0x03CC9140 LDR X21, [X21 + 0xA80]
	0x03CC9144 MOV W19, W0
	0x03CC9148 TBNZ X8, 0x0, 0x3CC9160
	0x03CC914C ADRP X0, 0x490000
	0x03CC9150 LDR X0, [X0 + 0xA80]
	0x03CC9154 BL 0x1C16CF4
	0x03CC9158 MOVZ W8, 0x1
	0x03CC915C STRB W8, [X20 + 0x36F]
	0x03CC9160 LDR X0, [X21]
	0x03CC9164 CBZ X0, 0x3CC919C
	0x03CC9168 LDR W8, [X0 + 0x10]
	0x03CC916C SUB W8, W8, 0x1
	0x03CC9170 CMP W8, W19, UXTH
	0x03CC9174 B.GE 0x3CC9188
	0x03CC9178 MOV W0, W19
	0x03CC917C LDP X20, X19, [X31 + 0x10]
	0x03CC9180 LDP X30, X21, [X31], #0x20
	0x03CC9184 RET
	0x03CC9188 AND W1, W19, 0xFFFF
	0x03CC918C LDP X20, X19, [X31 + 0x10]
	0x03CC9190 MOV X2, X31
	0x03CC9194 LDP X30, X21, [X31], #0x20
	0x03CC9198 B 0x3222A1C
	0x03CC919C BL 0x1C16F20
	0x03CC91A0 SUB X31, X31, 0x50
	0x03CC91A4 STP X30, X25, [X31 + 0x10]
	0x03CC91A8 STP X24, X23, [X31 + 0x20]
	0x03CC91AC STP X22, X21, [X31 + 0x30]
	0x03CC91B0 STP X20, X19, [X31 + 0x40]
	0x03CC91B4 ADRP X23, 0x71E000
	0x03CC91B8 LDRB W8, [X23 + 0x370]
	0x03CC91BC MOV X19, X3
	0x03CC91C0 MOV W22, W2
	0x03CC91C4 MOV W20, W1
	0x03CC91C8 MOV X21, X0
	0x03CC91CC TBNZ X8, 0x0, 0x3CC91E4
	0x03CC91D0 ADRP X0, 0x498000
	0x03CC91D4 LDR X0, [X0 + 0xB48]
	0x03CC91D8 BL 0x1C16CF4
	0x03CC91DC MOVZ W8, 0x1
	0x03CC91E0 STRB W8, [X23 + 0x370]
	0x03CC91E4 ADD W8, W20, W22
	0x03CC91E8 CMP W8, W20
	0x03CC91EC MOV W23, W31
	0x03CC91F0 STR W20, [X31 + 0xC]
	0x03CC91F4 B.LE 0x3CC9260
	0x03CC91F8 ADRP X24, 0x498000
	0x03CC91FC LDR X24, [X24 + 0xB48]
	0x03CC9200 LDR X0, [X24]
	0x03CC9204 LDR X25, [X19]
	0x03CC9208 LDR W8, [X0 + 0xE0]
	0x03CC920C CBNZ W8, 0x3CC9214
	0x03CC9210 BL 0x1C16DFC
	0x03CC9214 ADD X3, X31, 0xC
	0x03CC9218 MOV X0, X21
	0x03CC921C MOV W1, W20
	0x03CC9220 MOV W2, W22
	0x03CC9224 BL 0x3CC6288
	0x03CC9228 CBZ X25, 0x3CC927C
	0x03CC922C LDR W8, [X25 + 0x18]
	0x03CC9230 CMP W23, W8
	0x03CC9234 B.CS 0x3CC9280
	0x03CC9238 ADD X8, X25, W23, 0x2, SXTW
	0x03CC923C STR S0, [X8 + 0x20]
	0x03CC9240 LDR W8, [X31 + 0xC]
	0x03CC9244 ADD W9, W20, W22
	0x03CC9248 ADD W23, W23, 0x1
	0x03CC924C ORN W10, W31, W8, 0x0
	0x03CC9250 ADD W20, W8, 0x1
	0x03CC9254 CMP W8, W9
	0x03CC9258 ADD W22, W9, W10
	0x03CC925C B.LT 0x3CC9200
	0x03CC9260 MOV W0, W23
	0x03CC9264 LDP X20, X19, [X31 + 0x40]
	0x03CC9268 LDP X22, X21, [X31 + 0x30]
	0x03CC926C LDP X24, X23, [X31 + 0x20]
	0x03CC9270 LDP X30, X25, [X31 + 0x10]
	0x03CC9274 ADD X31, X31, 0x50
	0x03CC9278 RET
	0x03CC927C BL 0x1C16F20
	0x03CC9280 BL 0x1C16F28
	0x03CC9284 MOVZ W8, 0x1016
	0x03CC9288 CMP W0, W8
	0x03CC928C B.EQ 0x3CC929C
	0x03CC9290 MOVZ W8, 0x101A
	0x03CC9294 CMP W0, W8
	0x03CC9298 B.NE 0x3CC92A4
	0x03CC929C MOVZ W0, 0x1
	0x03CC92A0 RET
	0x03CC92A4 MOVZ W8, 0x1015
	0x03CC92A8 MOVZ W9, 0x1019
	0x03CC92AC CMP W0, W8
	0x03CC92B0 CSET W8, EQ
	0x03CC92B4 CMP W0, W9
	0x03CC92B8 CSET W9, EQ
	0x03CC92BC ORR W0, W8, W9, 0x0
	0x03CC92C0 RET
	0x03CC92C4 MOVN W8, 0x20CF
	0x03CC92C8 ADD W8, W0, W8
	0x03CC92CC CMP W8, 0x30
	0x03CC92D0 B.CC 0x3CC933C
	0x03CC92D4 AND W8, W0, 0xFFFFFFC0
	0x03CC92D8 MOVZ W9, 0x1DC0
	0x03CC92DC CMP W8, W9
	0x03CC92E0 B.EQ 0x3CC933C
	0x03CC92E4 SUB W8, W0, 0x300
	0x03CC92E8 CMP W8, 0x70
	0x03CC92EC B.CC 0x3CC933C
	0x03CC92F0 MOVN W8, 0x1AAF
	0x03CC92F4 ADD W8, W0, W8
	0x03CC92F8 CMP W8, 0x50
	0x03CC92FC B.CC 0x3CC933C
	0x03CC9300 CMP W0, 0xE31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x720000
	015 Move W8, [X19+872]
	016 Move X22, X3
	017 Move X21, X2
	018 Move W20, W0
	019 Move [X31+12], W1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x49A000
	025 Move X0, [X0+1736]
	026 Call 0x1C17CF4
	027 Move X0, 0x49A000
	028 Move X0, [X0+2888]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+872], W8
	032 Compare X22, 0
	033 JumpIfEqual {640}
	034 Move X24, [X22+48]
	035 Compare X24, 0
	036 JumpIfEqual {640}
	037 Move W8, [X24+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X28, W20
	040 Move W8, 392
	041 Move X26, X22
	042 NotImplemented "Instruction MADD not yet implemented."
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X26, X26, 88
	045 Move X19, [X26]
	046 Compare X19, 0
	047 JumpIfEqual {640}
	048 Move W8, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, 80
	051 NotImplemented "Instruction MADD not yet implemented."
	052 Add X23, X23, 32
	053 Move W27, [X23]
	054 Move X8, [X23+8]
	055 Compare X8, 0
	056 JumpIfEqual {640}
	057 Move W8, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W8, W27, 4
	060 Add W9, W27, 7
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 NotImplemented "Instruction SBFM not yet implemented."
	064 Move X1, X31
	065 Call Mathf.NextPowerOfTwo, X0
	066 Move X8, 0x49A000
	067 Move X8, [X8+1736]
	068 Move W24, W0
	069 Move X8, [X8]
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move W8, [X19+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, X23
	078 Move W1, W24
	079 Move X2, X31
	080 Call MeshInfo.ResizeMeshInfo, X0, X1
	081 Move X24, [X22+48]
	082 Compare X24, 0
	083 JumpIfEqual {640}
	084 Move W8, [X24+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W8, 392
	087 NotImplemented "Instruction MADD not yet implemented."
	088 Move [X8+116], W27
	089 Compare X21, 0
	090 JumpIfEqual {640}
	091 Move W8, [X21+260]
	092 Move X12, W27
	093 Compare W8, 0
	094 JumpIfEqual {213}
	095 Move X8, [X26]
	096 Compare X8, 0
	097 JumpIfEqual {640}
	098 Move W9, [X8+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W9, 80
	101 NotImplemented "Instruction MADD not yet implemented."
	102 Move X8, [X8+40]
	103 Compare X8, 0
	104 JumpIfEqual {640}
	105 Move W9, [X8+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move V0, [X21+28]
	108 Move V1, [X21+36]
	109 Move W9, 392
	110 NotImplemented "Instruction MADD not yet implemented."
	111 Move S3, [X9+160]
	112 Move S4, [X9+164]
	113 Add S0, S0, S1
	114 Move V1, [X9+168]
	115 Move S2, W31
	116 Move W9, 12
	117 NotImplemented "Instruction MADD not yet implemented."
	118 Add S3, S3, S2
	119 Subtract S4, S0, S4
	120 Add S1, S1, S2
	121 Move [X8+32], S3
	122 Move [X8+40], S4
	123 Move [X8+40], S1
	124 Move W8, [X24+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, [X26]
	127 Compare X8, 0
	128 JumpIfEqual {640}
	129 Move W9, [X8+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W9, 80
	132 NotImplemented "Instruction MADD not yet implemented."
	133 Move X8, [X8+40]
	134 Compare X8, 0
	135 JumpIfEqual {640}
	136 Move W10, [X8+24]
	137 Add W9, W27, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move W10, 392
	140 NotImplemented "Instruction MADD not yet implemented."
	141 Move S2, [X10+120]
	142 Move S3, [X10+124]
	143 Move V4, [X10+128]
	144 Move S1, W31
	145 Move X9, W9
	146 Move W10, 12
	147 NotImplemented "Instruction MADD not yet implemented."
	148 Add S2, S2, S1
	149 Subtract S3, S0, S3
	150 Add S1, S4, S1
	151 Move [X8+32], S2
	152 Move [X8+40], S3
	153 Move [X8+40], S1
	154 Move W8, [X24+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X8, [X26]
	157 Compare X8, 0
	158 JumpIfEqual {640}
	159 Move W9, [X8+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move W9, 80
	162 NotImplemented "Instruction MADD not yet implemented."
	163 Move X8, [X8+40]
	164 Compare X8, 0
	165 JumpIfEqual {640}
	166 Move W10, [X8+24]
	167 Add W9, W27, 2
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W10, 392
	170 NotImplemented "Instruction MADD not yet implemented."
	171 Move S2, [X10+200]
	172 Move S3, [X10+204]
	173 Move V4, [X10+208]
	174 Move S1, W31
	175 Move X9, W9
	176 Move W10, 12
	177 NotImplemented "Instruction MADD not yet implemented."
	178 Add S2, S2, S1
	179 Subtract S3, S0, S3
	180 Add S1, S4, S1
	181 Move [X8+32], S2
	182 Move [X8+40], S3
	183 Move [X8+40], S1
	184 Move W8, [X24+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, [X26]
	187 Compare X8, 0
	188 JumpIfEqual {640}
	189 Move W9, [X8+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move W9, 80
	192 NotImplemented "Instruction MADD not yet implemented."
	193 Move X8, [X8+40]
	194 Compare X8, 0
	195 JumpIfEqual {640}
	196 Move W10, [X8+24]
	197 Add W9, W27, 3
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W10, 392
	200 NotImplemented "Instruction MADD not yet implemented."
	201 Move S2, [X10+240]
	202 Move S3, [X10+244]
	203 Move V4, [X10+248]
	204 Move S1, W31
	205 Move X9, W9
	206 Move W11, 12
	207 NotImplemented "Instruction MADD not yet implemented."
	208 Add S2, S2, S1
	209 Subtract S3, S0, S3
	210 Add S0, S4, S1
	211 Move [X8+32], S2
	212 Move [X8+40], S3
	213 Move X8, [X26]
	214 Compare X8, 0
	215 JumpIfEqual {640}
	216 Move W9, [X8+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move W9, 80
	219 NotImplemented "Instruction MADD not yet implemented."
	220 Move X8, [X8+40]
	221 Compare X8, 0
	222 JumpIfEqual {640}
	223 Move W9, [X8+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move W9, 392
	226 NotImplemented "Instruction MADD not yet implemented."
	227 Move V0, [X9+160]
	228 Move V1, [X9+168]
	229 Move W9, 12
	230 NotImplemented "Instruction MADD not yet implemented."
	231 Move [X8+32], D0
	232 Move [X8+40], S1
	233 Move X8, [X26]
	234 Compare X8, 0
	235 JumpIfEqual {640}
	236 Move W9, [X8+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move W9, [X24+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move W9, 80
	241 NotImplemented "Instruction MADD not yet implemented."
	242 Move X8, [X8+40]
	243 Compare X8, 0
	244 JumpIfEqual {640}
	245 Move W10, [X8+24]
	246 Add W9, W27, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W10, 392
	249 NotImplemented "Instruction MADD not yet implemented."
	250 Move V0, [X10+120]
	251 Move V1, [X10+128]
	252 Move X9, W9
	253 Move W10, 12
	254 NotImplemented "Instruction MADD not yet implemented."
	255 Move [X8+32], D0
	256 Move [X8+40], S1
	257 Move X8, [X26]
	258 Compare X8, 0
	259 JumpIfEqual {640}
	260 Move W9, [X8+24]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move W9, [X24+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W9, 80
	265 NotImplemented "Instruction MADD not yet implemented."
	266 Move X8, [X8+40]
	267 Compare X8, 0
	268 JumpIfEqual {640}
	269 Move W10, [X8+24]
	270 Add W9, W27, 2
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move W10, 392
	273 NotImplemented "Instruction MADD not yet implemented."
	274 Move V0, [X10+200]
	275 Move V1, [X10+208]
	276 Move X9, W9
	277 Move W10, 12
	278 NotImplemented "Instruction MADD not yet implemented."
	279 Move [X8+32], D0
	280 Move [X8+40], S1
	281 Move X8, [X26]
	282 Compare X8, 0
	283 JumpIfEqual {640}
	284 Move W9, [X8+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move W9, [X24+24]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move W9, 80
	289 NotImplemented "Instruction MADD not yet implemented."
	290 Move X8, [X8+40]
	291 Compare X8, 0
	292 JumpIfEqual {640}
	293 Move W10, [X8+24]
	294 Add W9, W27, 3
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move W10, 392
	297 NotImplemented "Instruction MADD not yet implemented."
	298 Move V1, [X10+240]
	299 Move V0, [X10+248]
	300 Move X9, W9
	301 Move W11, 12
	302 NotImplemented "Instruction MADD not yet implemented."
	303 Move [X8+32], D1
	304 Move [X8+40], S0
	305 Move X8, [X26]
	306 Compare X8, 0
	307 JumpIfEqual {640}
	308 Move W9, [X8+24]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move W9, [X24+24]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move W9, 80
	313 NotImplemented "Instruction MADD not yet implemented."
	314 Move X8, [X8+64]
	315 Compare X8, 0
	316 JumpIfEqual {640}
	317 Move W9, [X8+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move W9, 392
	320 NotImplemented "Instruction MADD not yet implemented."
	321 NotImplemented "Instruction LDUR not yet implemented."
	322 Add X8, X8, X12
	323 Move [X8+2], V0
	324 Move X8, [X26]
	325 Compare X8, 0
	326 JumpIfEqual {640}
	327 Move W9, [X8+24]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move W9, [X24+24]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move W9, 80
	332 NotImplemented "Instruction MADD not yet implemented."
	333 Move X8, [X8+64]
	334 Compare X8, 0
	335 JumpIfEqual {640}
	336 Move W10, [X8+24]
	337 Add W9, W27, 1
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move W10, 392
	340 NotImplemented "Instruction MADD not yet implemented."
	341 NotImplemented "Instruction LDUR not yet implemented."
	342 Move X19, W9
	343 Add X8, X8, X19
	344 Move [X8+2], V0
	345 Move X8, [X26]
	346 Compare X8, 0
	347 JumpIfEqual {640}
	348 Move W9, [X8+24]
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move W9, [X24+24]
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move W9, 80
	353 NotImplemented "Instruction MADD not yet implemented."
	354 Move X8, [X8+64]
	355 Compare X8, 0
	356 JumpIfEqual {640}
	357 Move W10, [X8+24]
	358 Add W9, W27, 2
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move W10, 392
	361 NotImplemented "Instruction MADD not yet implemented."
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 Move X29, W9
	364 Add X8, X8, X29
	365 Move [X8+2], V0
	366 Move X8, [X26]
	367 Compare X8, 0
	368 JumpIfEqual {640}
	369 Move W9, [X8+24]
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move W9, [X24+24]
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Move W9, 80
	374 NotImplemented "Instruction MADD not yet implemented."
	375 Move X8, [X8+64]
	376 Compare X8, 0
	377 JumpIfEqual {640}
	378 Move W10, [X8+24]
	379 Add W9, W27, 3
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move W10, 392
	382 NotImplemented "Instruction MADD not yet implemented."
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 Move X23, W9
	385 Add X8, X8, X23
	386 Move [X8+2], V0
	387 Move X8, [X26]
	388 Compare X8, 0
	389 JumpIfEqual {640}
	390 Move W9, [X8+24]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move W9, [X24+24]
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move W9, 80
	395 NotImplemented "Instruction MADD not yet implemented."
	396 Move X8, [X8+72]
	397 Compare X8, 0
	398 JumpIfEqual {640}
	399 Move W9, [X8+24]
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move W9, 392
	402 NotImplemented "Instruction MADD not yet implemented."
	403 NotImplemented "Instruction LDUR not yet implemented."
	404 Add X8, X8, X12
	405 Move [X8+32], D0
	406 Move X8, [X26]
	407 Compare X8, 0
	408 JumpIfEqual {640}
	409 Move W9, [X8+24]
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Move W9, [X24+24]
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move W9, 80
	414 NotImplemented "Instruction MADD not yet implemented."
	415 Move X8, [X8+72]
	416 Compare X8, 0
	417 JumpIfEqual {640}
	418 Move W9, [X8+24]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Move W9, 392
	421 NotImplemented "Instruction MADD not yet implemented."
	422 NotImplemented "Instruction LDUR not yet implemented."
	423 Add X8, X8, X19
	424 Move [X8+32], D0
	425 Move X8, [X26]
	426 Compare X8, 0
	427 JumpIfEqual {640}
	428 Move W9, [X8+24]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move W9, [X24+24]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move W9, 80
	433 NotImplemented "Instruction MADD not yet implemented."
	434 Move X8, [X8+72]
	435 Compare X8, 0
	436 JumpIfEqual {640}
	437 Move W9, [X8+24]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move W9, 392
	440 NotImplemented "Instruction MADD not yet implemented."
	441 NotImplemented "Instruction LDUR not yet implemented."
	442 Add X8, X8, X29
	443 Move [X8+32], D0
	444 Move X8, [X26]
	445 Compare X8, 0
	446 JumpIfEqual {640}
	447 Move W9, [X8+24]
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move W9, [X24+24]
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Move W9, 80
	452 NotImplemented "Instruction MADD not yet implemented."
	453 Move X8, [X8+72]
	454 Compare X8, 0
	455 JumpIfEqual {640}
	456 Move W9, [X8+24]
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Move W9, 392
	459 NotImplemented "Instruction MADD not yet implemented."
	460 Add X9, X9, 268
	461 Move V0, [X9]
	462 Add X8, X8, X23
	463 Move [X8+32], D0
	464 Move X8, [X26]
	465 Compare X8, 0
	466 JumpIfEqual {640}
	467 Move W9, [X8+24]
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move W9, [X24+24]
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Move W9, 80
	472 Move W10, 392
	473 NotImplemented "Instruction MADD not yet implemented."
	474 NotImplemented "Instruction MADD not yet implemented."
	475 Move X22, [X8+80]
	476 Move W21, [X9+196]
	477 Move W8, [X31+12]
	478 Move TEMP, X8
	479 And TEMP, TEMP, 1
	480 Compare TEMP, 1
	481 JumpIfNotEqual {508}
	482 Move [X31], X26
	483 Move X8, 0x499000
	484 Move X8, [X8+2888]
	485 Move X26, X28
	486 Move X28, X20
	487 Move X20, X19
	488 Move X0, [X8]
	489 Move X19, X27
	490 Move X27, X29
	491 Move X29, X23
	492 Move W8, [X0+224]
	493 Move X23, X12
	494 Compare W8, 0
	495 JumpIfNotEqual {497}
	496 Call 0x1C17DFC
	497 Move X0, X21
	498 Call TextGeneratorUtilities.GammaToLinear, X0
	499 Move X12, X23
	500 Move X23, X29
	501 Move X29, X27
	502 Move X27, X19
	503 Move X19, X20
	504 Move X20, X28
	505 Move X28, X26
	506 Move X26, [X31]
	507 Move W21, W0
	508 Compare X22, 0
	509 JumpIfEqual {640}
	510 Move W8, [X22+24]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Add X8, X22, X12
	513 Move [X8+32], W21
	514 Move X8, [X26]
	515 Compare X8, 0
	516 JumpIfEqual {640}
	517 Move W9, [X8+24]
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move W9, [X24+24]
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Move W9, 80
	522 Move W10, 392
	523 NotImplemented "Instruction MADD not yet implemented."
	524 NotImplemented "Instruction MADD not yet implemented."
	525 Move X22, [X8+80]
	526 Move W21, [X9+156]
	527 Move W8, [X31+12]
	528 Move TEMP, X8
	529 And TEMP, TEMP, 1
	530 Compare TEMP, 1
	531 JumpIfNotEqual {542}
	532 Move X8, 0x499000
	533 Move X8, [X8+2888]
	534 Move X0, [X8]
	535 Move W8, [X0+224]
	536 Compare W8, 0
	537 JumpIfNotEqual {539}
	538 Call 0x1C17DFC
	539 Move X0, X21
	540 Call TextGeneratorUtilities.GammaToLinear, X0
	541 Move W21, W0
	542 Compare X22, 0
	543 JumpIfEqual {640}
	544 Move W8, [X22+24]
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Add X8, X22, X19
	547 Move [X8+32], W21
	548 Move X8, [X26]
	549 Compare X8, 0
	550 JumpIfEqual {640}
	551 Move W9, [X8+24]
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Move W9, [X24+24]
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move W9, 80
	556 Move W10, 392
	557 NotImplemented "Instruction MADD not yet implemented."
	558 NotImplemented "Instruction MADD not yet implemented."
	559 Move X19, [X8+80]
	560 Move W21, [X9+236]
	561 Move W8, [X31+12]
	562 Move TEMP, X8
	563 And TEMP, TEMP, 1
	564 Compare TEMP, 1
	565 JumpIfNotEqual {576}
	566 Move X8, 0x499000
	567 Move X8, [X8+2888]
	568 Move X0, [X8]
	569 Move W8, [X0+224]
	570 Compare W8, 0
	571 JumpIfNotEqual {573}
	572 Call 0x1C17DFC
	573 Move X0, X21
	574 Call TextGeneratorUtilities.GammaToLinear, X0
	575 Move W21, W0
	576 Compare X19, 0
	577 JumpIfEqual {640}
	578 Move W8, [X19+24]
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Add X8, X19, X29
	581 Move [X8+32], W21
	582 Move X8, [X26]
	583 Compare X8, 0
	584 JumpIfEqual {640}
	585 Move W9, [X8+24]
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Move W9, [X24+24]
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move W9, 80
	590 Move W10, 392
	591 NotImplemented "Instruction MADD not yet implemented."
	592 NotImplemented "Instruction MADD not yet implemented."
	593 Move X19, [X8+80]
	594 Move W20, [X9+276]
	595 Move W8, [X31+12]
	596 Move TEMP, X8
	597 And TEMP, TEMP, 1
	598 Compare TEMP, 1
	599 JumpIfNotEqual {610}
	600 Move X8, 0x499000
	601 Move X8, [X8+2888]
	602 Move X0, [X8]
	603 Move W8, [X0+224]
	604 Compare W8, 0
	605 JumpIfNotEqual {607}
	606 Call 0x1C17DFC
	607 Move X0, X20
	608 Call TextGeneratorUtilities.GammaToLinear, X0
	609 Move W20, W0
	610 Compare X19, 0
	611 JumpIfEqual {640}
	612 Move W8, [X19+24]
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Add X8, X19, X23
	615 Move [X8+32], W20
	616 Move X8, [X26]
	617 Compare X8, 0
	618 JumpIfEqual {640}
	619 Move W9, [X8+24]
	620 NotImplemented "Instruction CMP not yet implemented."
	621 Move W10, 80
	622 Add W9, W27, 4
	623 NotImplemented "Instruction MADD not yet implemented."
	624 Move X20, [X31+96]
	625 Move X19, [X31+104]
	626 Move X22, [X31+80]
	627 Move X21, [X31+88]
	628 Move X24, [X31+64]
	629 Move X23, [X31+72]
	630 Move X26, [X31+48]
	631 Move X25, [X31+56]
	632 Move X28, [X31+32]
	633 Move X27, [X31+40]
	634 Move X29, [X31+16]
	635 Move X30, [X31+24]
	636 Move [X8+32], W9
	637 Add X31, X31, 112
	638 Return 
	639 Call 0x1C17F28
	640 Call 0x1C17F20

Method: System.Void FillSpriteVertexBuffers(System.Int32 i, System.Boolean convertToLinearSpace, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC93A0 SUB W8, W0, 0x6E7
	0x03CC93A4 CMP W8, 0x2
	0x03CC93A8 B.CC 0x3CC933C
	0x03CC93AC SUB W8, W0, 0x6DF
	0x03CC93B0 CMP W8, 0x6
	0x03CC93B4 B.CC 0x3CC933C
	0x03CC93B8 SUB W8, W0, 0x6D6
	0x03CC93BC CMP W8, 0x7
	0x03CC93C0 B.CC 0x3CC933C
	0x03CC93C4 CMP W0, 0x670
	0x03CC93C8 B.EQ 0x3CC933C
	0x03CC93CC SUB W8, W0, 0x64B
	0x03CC93D0 CMP W8, 0x15
	0x03CC93D4 B.CC 0x3CC933C
	0x03CC93D8 MOVN W8, 0xFBB1
	0x03CC93DC ADD W8, W0, W8
	0x03CC93E0 CMP W8, 0xF
	0x03CC93E4 CSET W0, HI
	0x03CC93E8 RET
	0x03CC93EC FCMP S3, S7
	0x03CC93F0 FCSEL S3, S3, S7, MI
	0x03CC93F4 RET
	0x03CC93F8 STR X30, [X31 - 0x10]!
	0x03CC93FC ADRP X9, 0xFFFFFFFFFCE21000
	0x03CC9400 LDR V1, [X9 + 0x2E0]
	0x03CC9404 AND W8, W0, 0xFF
	0x03CC9408 MOVZ W9, 0x437F0000
	0x03CC940C UCVTF S0, W8
	0x03CC9410 FMOV S2, W9
	0x03CC9414 FDIV S0, S0, S2
	0x03CC9418 FCMP S0, S1
	0x03CC941C B.LS 0x3CC9450
	0x03CC9420 FMOV S1, 1
	0x03CC9424 FCMP S0, S1
	0x03CC9428 B.PL 0x3CC9470
	0x03CC942C ADRP X8, 0xFFFFFFFFFCE21000
	0x03CC9430 LDR V1, [X8 + 0x264]
	0x03CC9434 ADRP X8, 0xFFFFFFFFFCE21000
	0x03CC9438 LDR V2, [X8 + 0x1F4]
	0x03CC943C ADRP X8, 0xFFFFFFFFFCE21000
	0x03CC9440 FADD S0, S0, S1
	0x03CC9444 LDR V1, [X8 + 0x3B0]
	0x03CC9448 FDIV S0, S0, S2
	0x03CC944C B 0x3CC947C
	0x03CC9450 ADRP X8, 0xFFFFFFFFFCE20000
	0x03CC9454 LDR V1, [X8 + 0xFA0]
	0x03CC9458 MOVZ W8, 0x437F0000
	0x03CC945C FDIV S0, S0, S1
	0x03CC9460 FMOV S1, W8
	0x03CC9464 FMUL S0, S0, S1
	0x03CC9468 FCVTZS W0, S0
	0x03CC946C B 0x3CC94A0
	0x03CC9470 B.EQ 0x3CC949C
	0x03CC9474 ADRP X8, 0xFFFFFFFFFCE21000
	0x03CC9478 LDR V1, [X8 + 0x36C]
	0x03CC947C BL 0x3EB1B50
	0x03CC9480 MOVZ W8, 0x437F0000
	0x03CC9484 FMOV S1, W8
	0x03CC9488 FMUL S0, S0, S1
	0x03CC948C FCVTZS W8, S0
	0x03CC9490 FCMP S0, 0x0
	0x03CC9494 CSEL W0, W8, W8, MI
	0x03CC9498 B 0x3CC94A0
	0x03CC949C MOVZ W0, 0xFF
	0x03CC94A0 LDR X30, [X31], #0x10
	0x03CC94A4 RET
	0x03CC94A8 SUB X31, X31, 0x30
	0x03CC94AC STP X30, X21, [X31 + 0x10]
	0x03CC94B0 STP X20, X19, [X31 + 0x20]
	0x03CC94B4 STP X0, X1, [X31]
	0x03CC94B8 ADD X0, X31, 0x0
	0x03CC94BC MOV W1, W2
	0x03CC94C0 MOV W19, W2
	0x03CC94C4 BL 0x3CC5394
	0x03CC94C8 AND W8, W0, 0xFFFFFFDF
	0x03CC94CC SUB W8, W8, 0x41
	0x03CC94D0 CMP W8, 0x6
	0x03CC94D4 B.CC 0x3CC94EC
	0x03CC94D8 SUB W8, W0, 0x30
	0x03CC94DC CMP W8, 0x9
	0x03CC94E0 B.LS 0x3CC94EC
	0x03CC94E4 MOV W0, W31
	0x03CC94E8 B 0x3CC9534
	0x03CC94EC MOV W20, W31
	0x03CC94F0 ADD W19, W19, 0x1
	0x03CC94F4 MOV W21, W20
	0x03CC94F8 CMP W20, 0x3
	0x03CC94FC B.EQ 0x3CC952C
	0x03CC9500 ADD W1, W19, W21
	0x03CC9504 ADD X0, X31, 0x0
	0x03CC9508 ADD W20, W21, 0x1
	0x03CC950C BL 0x3CC5394
	0x03CC9510 AND W8, W0, 0xFFFFFFDF
	0x03CC9514 SUB W8, W8, 0x41
	0x03CC9518 CMP W8, 0x6
	0x03CC951C B.CC 0x3CC94F4
	0x03CC9520 SUB W8, W0, 0x30
	0x03CC9524 CMP W8, 0x9
	0x03CC9528 B.LS 0x3CC94F4
	0x03CC952C CMP W21, 0x2
	0x03CC9530 CSET W0, HI
	0x03CC9534 LDP X20, X19, [X31 + 0x20]
	0x03CC9538 LDP X30, X21, [X31 + 0x10]
	0x03CC953C ADD X31, X31, 0x30
	0x03CC9540 RET
	0x03CC9544 SUB X31, X31, 0x30
	0x03CC9548 STP X30, X21, [X31 + 0x10]
	0x03CC954C STP X20, X19, [X31 + 0x20]
	0x03CC9550 STP X0, X1, [X31]
	0x03CC9554 ADD X0, X31, 0x0
	0x03CC9558 MOV W1, W2
	0x03CC955C MOV W19, W2
	0x03CC9560 BL 0x3CC5394
	0x03CC9564 AND W8, W0, 0xFFFFFFDF
	0x03CC9568 SUB W8, W8, 0x41
	0x03CC956C CMP W8, 0x6
	0x03CC9570 B.CC 0x3CC9588
	0x03CC9574 SUB W8, W0, 0x30
	0x03CC9578 CMP W8, 0x9
	0x03CC957C B.LS 0x3CC9588
	0x03CC9580 MOV W0, W31
	0x03CC9584 B 0x3CC95D0
	0x03CC9588 MOV W20, W31
	0x03CC958C ADD W19, W19, 0x1
	0x03CC9590 MOV W21, W20
	0x03CC9594 CMP W20, 0x7
	0x03CC9598 B.EQ 0x3CC95C8
	0x03CC959C ADD W1, W19, W21
	0x03CC95A0 ADD X0, X31, 0x0
	0x03CC95A4 ADD W20, W21, 0x1
	0x03CC95A8 BL 0x3CC5394
	0x03CC95AC AND W8, W0, 0xFFFFFFDF
	0x03CC95B0 SUB W8, W8, 0x41
	0x03CC95B4 CMP W8, 0x6
	0x03CC95B8 B.CC 0x3CC9590
	0x03CC95BC SUB W8, W0, 0x30
	0x03CC95C0 CMP W8, 0x9
	0x03CC95C4 B.LS 0x3CC9590
	0x03CC95C8 CMP W21, 0x6
	0x03CC95CC CSET W0, HI
	0x03CC95D0 LDP X20, X19, [X31 + 0x20]
	0x03CC95D4 LDP X30, X21, [X31 + 0x10]
	0x03CC95D8 ADD X31, X31, 0x30
	0x03CC95DC RET
	0x03CC95E0 MOVN W8, 0xFF9F
	0x03CC95E4 ADD W8, W0, W8
	0x03CC95E8 CMP W8, 0x3D
	0x03CC95EC B.CC 0x3CC9648
	0x03CC95F0 MOVN W8, 0x312F
	0x03CC95F4 ADD W8, W0, W8
	0x03CC95F8 CMP W8, 0x60
	0x03CC95FC B.CC 0x3CC9648
	0x03CC9600 MOVN W8, 0xD7AF
	0x03CC9604 ADD W8, W0, W8
	0x03CC9608 CMP W8, 0x50
	0x03CC960C B.CC 0x3CC9648
	0x03CC9610 AND W8, W0, 0xFFFFFF00
	0x03CC9614 MOVZ W9, 0x1100
	0x03CC9618 CMP W8, W9
	0x03CC961C B.EQ 0x3CC9648
	0x03CC9620 AND W8, W0, 0xFFFFFFE0
	0x03CC9624 MOVZ W9, 0xA960
	0x03CC9628 CMP W8, W9
	0x03CC962C B.EQ 0x3CC9648
	0x03CC9630 MOVN W8, 0xABFF
	0x03CC9634 ADD W8, W0, W8
	0x03CC9638 UBFM W8, W8, 0x4, 0x1F
	0x03CC963C CMP W8, 0x2BB
	0x03CC9640 CSET W0, CC
	0x03CC9644 RET
	0x03CC9648 MOVZ W0, 0x1
	0x03CC964C RET
	0x03CC9650 AND W8, W0, 0xFFFFFFF0
	0x03CC9654 MOVZ W9, 0x31F0
	0x03CC9658 CMP W8, W9
	0x03CC965C B.EQ 0x3CC9800
	0x03CC9660 MOVZ W9, 0x3190
	0x03CC9664 CMP W8, W9
	0x03CC9668 B.EQ 0x3CC9800
	0x03CC966C MOVZ W9, 0xAFF0
	0x03CC9670 MOVK W9, 0x10000
	0x03CC9674 AND W10, W0, 0xFFFFFF00
	0x03CC9678 ADD W11, W9, 0x10
	0x03CC967C CMP W10, W11
	0x03CC9680 B.EQ 0x3CC9800
	0x03CC9684 CMP W8, W9
	0x03CC9688 B.EQ 0x3CC9800
	0x03CC968C MOVZ W9, 0x4ED0
	0x03CC9690 MOVK W9, 0xFFFE0000
	0x03CC9694 ADD W9, W0, W9
	0x03CC9698 ADD W10, W9, 0x30
	0x03CC969C CMP W10, 0x30
	0x03CC96A0 B.CC 0x3CC9800
	0x03CC96A4 MOVN W10, 0x303F
	0x03CC96A8 ADD W10, W0, W10
	0x03CC96AC CMP W10, 0x60
	0x03CC96B0 B.CC 0x3CC9800
	0x03CC96B4 MOVN W10, 0x31BF
	0x03CC96B8 ADD W10, W0, W10
	0x03CC96BC CMP W10, 0x30
	0x03CC96C0 B.CC 0x3CC9800
	0x03CC96C4 MOVN W10, 0x2EFF
	0x03CC96C8 ADD W10, W0, W10
	0x03CC96CC CMP W10, 0xE0
	0x03CC96D0 B.CC 0x3CC9800
	0x03CC96D4 SUB W10, W0, 0x30000
	0x03CC96D8 ADD W11, W10, 0x800
	0x03CC96DC CMP W11, 0x220
	0x03CC96E0 B.CC 0x3CC9800
	0x03CC96E4 MOVN W11, 0xF8FF
	0x03CC96E8 ADD W11, W0, W11
	0x03CC96EC CMP W11, 0x200
	0x03CC96F0 B.CC 0x3CC9800
	0x03CC96F4 MOVZ W11, 0x134B
	0x03CC96F8 CMP W10, W11
	0x03CC96FC B.CC 0x3CC9800
	0x03CC9700 MOVZ W10, 0x3150
	0x03CC9704 MOVK W10, 0xFFFD0000
	0x03CC9708 ADD W10, W0, W10
	0x03CC970C MOVZ W11, 0x1D31
	0x03CC9710 CMP W10, W11
	0x03CC9714 B.CC 0x3CC9800
	0x03CC9718 MOVZ W10, 0x47E0
	0x03CC971C MOVK W10, 0xFFFD0000
	0x03CC9720 ADD W10, W0, W10
	0x03CC9724 UBFM W11, W10, 0x4, 0x1F
	0x03CC9728 CMP W11, 0x169
	0x03CC972C B.CC 0x3CC9800
	0x03CC9730 ADD W10, W10, 0xE0
	0x03CC9734 CMP W10, 0xE0
	0x03CC9738 B.CC 0x3CC9800
	0x03CC973C MOVZ W10, 0x5900
	0x03CC9740 MOVK W10, 0xFFFD0000
	0x03CC9744 ADD W10, W0, W10
	0x03CC9748 UBFM W10, W10, 0x6, 0x1F
	0x03CC974C CMP W10, 0x41
	0x03CC9750 B.CC 0x3CC9800
	0x03CC9754 SUB W10, W0, 0x20000
	0x03CC9758 UBFM W10, W10, 0x5, 0x1F
	0x03CC975C CMP W10, 0x537
	0x03CC9760 B.CC 0x3CC9800
	0x03CC9764 MOVN W10, 0x33FF
	0x03CC9768 ADD W10, W0, W10
	0x03CC976C UBFM W10, W10, 0x6, 0x1F
	0x03CC9770 CMP W10, 0x67
	0x03CC9774 B.CC 0x3CC9800
	0x03CC9778 MOVN W10, 0x4DFF
	0x03CC977C ADD W10, W0, W10
	0x03CC9780 UBFM W10, W10, 0x9, 0x1F
	0x03CC9784 CMP W10, 0x29
	0x03CC9788 B.CC 0x3CC9800
	0x03CC978C AND W10, W0, 0xFFFFFFE0
	0x03CC9790 MOVZ W11, 0x31A0
	0x03CC9794 CMP W10, W11
	0x03CC9798 B.EQ 0x3CC9800
	0x03CC979C AND W10, W0, 0xFFFFFFC0
	0x03CC97A0 CMP W10, 0x3000
	0x03CC97A4 B.EQ 0x3CC9800
	0x03CC97A8 MOVN W10, 0x30FF
	0x03CC97AC ADD W10, W0, W10
	0x03CC97B0 CMP W10, 0x30
	0x03CC97B4 B.CC 0x3CC9800
	0x03CC97B8 AND W10, W0, 0xFFFFFF80
	0x03CC97BC MOVZ W11, 0x2E80
	0x03CC97C0 CMP W10, W11
	0x03CC97C4 B.EQ 0x3CC9800
	0x03CC97C8 MOVZ W10, 0x2FF0
	0x03CC97CC CMP W8, W10
	0x03CC97D0 B.EQ 0x3CC9800
	0x03CC97D4 CMP W9, 0x40
	0x03CC97D8 B.CC 0x3CC9800
	0x03CC97DC MOVN W8, 0x309F
	0x03CC97E0 ADD W8, W0, W8
	0x03CC97E4 CMP W8, 0x60
	0x03CC97E8 B.CC 0x3CC9800
	0x03CC97EC MOVN W8, 0xFF64
	0x03CC97F0 ADD W8, W0, W8
	0x03CC97F4 CMP W8, 0x3B
	0x03CC97F8 CSET W0, CC
	0x03CC97FC RET
	0x03CC9800 MOVZ W0, 0x1
	0x03CC9804 RET
	0x03CC9808 STR X30, [X31 - 0x20]!
	0x03CC980C STP X20, X19, [X31 + 0x10]
	0x03CC9810 ADRP X20, 0x71E000
	0x03CC9814 ADRP X19, 0x498000
	0x03CC9818 LDRB W8, [X20 + 0x372]
	0x03CC981C LDR X19, [X19 + 0xB48]
	0x03CC9820 TBNZ X8, 0x0, 0x3CC9838
	0x03CC9824 ADRP X0, 0x498000
	0x03CC9828 LDR X0, [X0 + 0xB48]
	0x03CC982C BL 0x1C16CF4
	0x03CC9830 MOVZ W8, 0x1
	0x03CC9834 STRB W8, [X20 + 0x372]
	0x03CC9838 LDR X8, [X19]
	0x03CC983C MOVI V0.2S, 0x4F, 0x18
	0x03CC9840 MOVZ W9, 0xCCCD
	0x03CC9844 MOVK W9, 0xCD4C0000
	0x03CC9848 LDR X8, [X8 + 0xB8]
	0x03CC984C STR D0, [X8]
	0x03CC9850 LDR X8, [X19]
	0x03CC9854 LDP X20, X19, [X31 + 0x10]
	0x03CC9858 UNIMPLEMENTED
	0x03CC985C LDR X8, [X8 + 0xB8]
	0x03CC9860 STR D0, [X8 + 0x8]
	0x03CC9864 LDR X30, [X31], #0x20
	0x03CC9868 RET
	0x03CC986C STP X30, X21, [X31 - 0x20]!
	0x03CC9870 STP X20, X19, [X31 + 0x10]
	0x03CC9874 ADRP X21, 0x71E000
	0x03CC9878 ADRP X20, 0x498000
	0x03CC987C LDRB W8, [X21 + 0x373]
	0x03CC9880 LDR X20, [X20 + 0x908]
	0x03CC9884 MOV X19, X0
	0x03CC9888 TBNZ X8, 0x0, 0x3CC98A0
	0x03CC988C ADRP X0, 0x498000
	0x03CC9890 LDR X0, [X0 + 0x908]
	0x03CC9894 BL 0x1C16CF4
	0x03CC9898 MOVZ W8, 0x1
	0x03CC989C STRB W8, [X21 + 0x373]
	0x03CC98A0 MOV X0, X19
	0x03CC98A4 MOV X1, X31
	0x03CC98A8 BL 0x33BDD8C
	0x03CC98AC LDR X0, [X20]
	0x03CC98B0 BL 0x1C16F10
	0x03CC98B4 MOV X1, X31
	0x03CC98B8 MOV X20, X0
	0x03CC98BC BL 0x3CB0588
	0x03CC98C0 STR X20, [X19 + 0x28]
	0x03CC98C4 LDP X20, X19, [X31 + 0x10]
	0x03CC98C8 LDP X30, X21, [X31], #0x20
	0x03CC98CC RET
	0x03CC98D0 STR X30, [X31 - 0x20]!
	0x03CC98D4 STP X20, X19, [X31 + 0x10]
	0x03CC98D8 ADRP X20, 0x71E000
	0x03CC98DC LDRB W8, [X20 + 0x374]
	0x03CC98E0 MOV X19, X0
	0x03CC98E4 TBNZ X8, 0x0, 0x3CC98FC
	0x03CC98E8 ADRP X0, 0x498000
	0x03CC98EC LDR X0, [X0 + 0xB68]
	0x03CC98F0 BL 0x1C16CF4
	0x03CC98F4 MOVZ W8, 0x1
	0x03CC98F8 STRB W8, [X20 + 0x374]
	0x03CC98FC LDR X20, [X19 + 0x18]
	0x03CC9900 CBNZ X20, 0x3CC9920
	0x03CC9904 ADRP X8, 0x498000
	0x03CC9908 LDR X8, [X8 + 0xB68]
	0x03CC990C LDR X0, [X8]
	0x03CC9910 BL 0x1C16F10
	0x03CC9914 MOV X20, X0
	0x03CC9918 BL 0x3CC9930
	0x03CC991C STR X20, [X19 + 0x18]
	0x03CC9920 MOV X0, X20
	0x03CC9924 LDP X20, X19, [X31 + 0x10]
	0x03CC9928 LDR X30, [X31], #0x20
	0x03CC992C RET
	0x03CC9930 STR X30, [X31 - 0x50]!
	0x03CC9934 STP X26, X25, [X31 + 0x10]
	0x03CC9938 STP X24, X23, [X31 + 0x20]
	0x03CC993C STP X22, X21, [X31 + 0x30]
	0x03CC9940 STP X20, X19, [X31 + 0x40]
	0x03CC9944 ADRP X26, 0x71E000
	0x03CC9948 ADRP X25, 0x498000
	0x03CC994C ADRP X24, 0x498000
	0x03CC9950 ADRP X23, 0x498000
	0x03CC9954 ADRP X22, 0x498000
	0x03CC9958 ADRP X21, 0x498000
	0x03CC995C ADRP X20, 0x498000
	0x03CC9960 LDR X25, [X25 + 0xD98]
	0x03CC9964 LDRB W8, [X26 + 0x37B]
	0x03CC9968 LDR X24, [X24 + 0xDB8]
	0x03CC996C LDR X23, [X23 + 0xDB0]
	0x03CC9970 LDR X22, [X22 + 0xDC0]
	0x03CC9974 LDR X21, [X21 + 0xDC8]
	0x03CC9978 LDR X20, [X20 + 0xDD0]
	0x03CC997C MOV X19, X0
	0x03CC9980 TBNZ X8, 0x0, 0x3CC99D4
	0x03CC9984 ADRP X0, 0x498000
	0x03CC9988 LDR X0, [X0 + 0xDB0]
	0x03CC998C BL 0x1C16CF4
	0x03CC9990 ADRP X0, 0x498000
	0x03CC9994 LDR X0, [X0 + 0xDC8]
	0x03CC9998 BL 0x1C16CF4
	0x03CC999C ADRP X0, 0x498000
	0x03CC99A0 LDR X0, [X0 + 0xDD0]
	0x03CC99A4 BL 0x1C16CF4
	0x03CC99A8 ADRP X0, 0x498000
	0x03CC99AC LDR X0, [X0 + 0xDC0]
	0x03CC99B0 BL 0x1C16CF4
	0x03CC99B4 ADRP X0, 0x498000
	0x03CC99B8 LDR X0, [X0 + 0xD98]
	0x03CC99BC BL 0x1C16CF4
	0x03CC99C0 ADRP X0, 0x498000
	0x03CC99C4 LDR X0, [X0 + 0xDB8]
	0x03CC99C8 BL 0x1C16CF4
	0x03CC99CC MOVZ W8, 0x1
	0x03CC99D0 STRB W8, [X26 + 0x37B]
	0x03CC99D4 MOV X0, X19
	0x03CC99D8 MOV X1, X31
	0x03CC99DC STRB W31, [X19 + 0x61]
	0x03CC99E0 BL 0x33BDD8C
	0x03CC99E4 LDR X0, [X25]
	0x03CC99E8 MOVZ W1, 0x4
	0x03CC99EC BL 0x1C16D6C
	0x03CC99F0 STR X0, [X19 + 0x30]
	0x03CC99F4 LDR X0, [X24]
	0x03CC99F8 MOVZ W1, 0x1
	0x03CC99FC MOVZ W24, 0x1
	0x03CC9A00 BL 0x1C16D6C
	0x03CC9A04 STR X0, [X19 + 0x38]
	0x03CC9A08 LDR X0, [X23]
	0x03CC9A0C MOVZ W1, 0x1
	0x03CC9A10 BL 0x1C16D6C
	0x03CC9A14 STR X0, [X19 + 0x48]
	0x03CC9A18 LDR X0, [X22]
	0x03CC9A1C MOVZ W1, 0x1
	0x03CC9A20 BL 0x1C16D6C
	0x03CC9A24 STR X0, [X19 + 0x50]
	0x03CC9A28 LDR X0, [X21]
	0x03CC9A2C MOV W1, W31
	0x03CC9A30 BL 0x1C16D6C
	0x03CC9A34 STR X0, [X19 + 0x40]
	0x03CC9A38 LDR X0, [X20]
	0x03CC9A3C MOVZ W1, 0x1
	0x03CC9A40 BL 0x1C16D6C
	0x03CC9A44 STR X0, [X19 + 0x58]
	0x03CC9A48 STR W31, [X19 + 0x2C]
	0x03CC9A4C STRB W24, [X19 + 0x60]
	0x03CC9A50 LDP X20, X19, [X31 + 0x40]
	0x03CC9A54 LDP X22, X21, [X31 + 0x30]
	0x03CC9A58 LDP X24, X23, [X31 + 0x20]
	0x03CC9A5C LDP X26, X25, [X31 + 0x10]
	0x03CC9A60 LDR X30, [X31], #0x50
	0x03CC9A64 RET
	0x03CC9A68 STR X30, [X31 - 0x20]!
	0x03CC9A6C STP X20, X19, [X31 + 0x10]
	0x03CC9A70 ADRP X19, 0x71E000
	0x03CC9A74 ADRP X20, 0x498000
	0x03CC9A78 LDRB W8, [X19 + 0x375]
	0x03CC9A7C LDR X20, [X20 + 0xDD8]
	0x03CC9A80 TBNZ X8, 0x0, 0x3CC9AA4
	0x03CC9A84 ADRP X0, 0x498000
	0x03CC9A88 LDR X0, [X0 + 0xDD8]
	0x03CC9A8C BL 0x1C16CF4
	0x03CC9A90 ADRP X0, 0x498000
	0x03CC9A94 LDR X0, [X0 + 0xB68]
	0x03CC9A98 BL 0x1C16CF4
	0x03CC9A9C MOVZ W8, 0x1
	0x03CC9AA0 STRB W8, [X19 + 0x375]
	0x03CC9AA4 LDR X0, [X20]
	0x03CC9AA8 LDR W8, [X0 + 0xE0]
	0x03CC9AAC CBNZ W8, 0x3CC9AB8
	0x03CC9AB0 BL 0x1C16DFC
	0x03CC9AB4 LDR X0, [X20]
	0x03CC9AB8 LDR X8, [X0 + 0xB8]
	0x03CC9ABC LDR X8, [X8]
	0x03CC9AC0 CBNZ X8, 0x3CC9AFC
	0x03CC9AC4 ADRP X8, 0x498000
	0x03CC9AC8 LDR X8, [X8 + 0xB68]
	0x03CC9ACC LDR X0, [X8]
	0x03CC9AD0 BL 0x1C16F10
	0x03CC9AD4 MOV X19, X0
	0x03CC9AD8 BL 0x3CC9930
	0x03CC9ADC LDR X0, [X20]
	0x03CC9AE0 LDR W8, [X0 + 0xE0]
	0x03CC9AE4 CBNZ W8, 0x3CC9AF0
	0x03CC9AE8 BL 0x1C16DFC
	0x03CC9AEC LDR X0, [X20]
	0x03CC9AF0 LDR X8, [X0 + 0xB8]
	0x03CC9AF4 STR X19, [X8]
	0x03CC9AF8 LDR X0, [X20]
	0x03CC9AFC LDR W8, [X0 + 0xE0]
	0x03CC9B00 CBNZ W8, 0x3CC9B0C
	0x03CC9B04 BL 0x1C16DFC
	0x03CC9B08 LDR X0, [X20]
	0x03CC9B0C LDR X8, [X0 + 0xB8]
	0x03CC9B10 LDP X20, X19, [X31 + 0x10]
	0x03CC9B14 LDR X0, [X8]
	0x03CC9B18 LDR X30, [X31], #0x20
	0x03CC9B1C RET
	0x03CC9B20 STP X30, X19, [X31 - 0x10]!
	0x03CC9B24 MOV X19, X0
	0x03CC9B28 LDR X0, [X0 + 0x28]
	0x03CC9B2C CBZ X0, 0x3CC9B6C
	0x03CC9B30 LDR X8, [X0]
	0x03CC9B34 LDP X9, X1, [X8 + 0x158]
	0x03CC9B38 BLR X9
	0x03CC9B3C LDR W8, [X19 + 0x20]
	0x03CC9B40 CMP W8, W0
	0x03CC9B44 B.NE 0x3CC9B50
	0x03CC9B48 LDRB W8, [X19 + 0x30]
	0x03CC9B4C CBZ W8, 0x3CC9B64
	0x03CC9B50 STR W0, [X19 + 0x20]
	0x03CC9B54 MOVZ W0, 0x1
	0x03CC9B58 STRB W31, [X19 + 0x30]
	0x03CC9B5C LDP X30, X19, [X31], #0x10
	0x03CC9B60 RET
	0x03CC9B64 MOV W0, W31
	0x03CC9B68 B 0x3CC9B5C
	0x03CC9B6C BL 0x1C16F20
	0x03CC9B70 STP D13, D12, [X31 - 0x60]!
	0x03CC9B74 STP D11, D10, [X31 + 0x10]
	0x03CC9B78 STP D9, D8, [X31 + 0x20]
	0x03CC9B7C STR X30, [X31 + 0x30]
	0x03CC9B80 STP X22, X21, [X31 + 0x40]
	0x03CC9B84 STP X20, X19, [X31 + 0x50]
	0x03CC9B88 MOV X21, X0
	0x03CC9B8C LDR X0, [X0 + 0x28]
	0x03CC9B90 MOV W19, W2
	0x03CC9B94 MOV W20, W1
	0x03CC9B98 MOV X1, X31
	0x03CC9B9C MOV X2, X31
	0x03CC9BA0 BL 0x3CAEAD8
	0x03CC9BA4 TBZ X0, 0x0, 0x3CC9BE0
	0x03CC9BA8 ADRP X19, 0x710000
	0x03CC9BAC LDRB W8, [X19 + 0x78F]
	0x03CC9BB0 CBNZ W8, 0x3CC9BC8
	0x03CC9BB4 ADRP X0, 0x432000
	0x03CC9BB8 LDR X0, [X0 + 0xF08]
	0x03CC9BBC BL 0x1C16CF4
	0x03CC9BC0 MOVZ W8, 0x1
	0x03CC9BC4 STRB W8, [X19 + 0x78F]
	0x03CC9BC8 ADRP X8, 0x432000
	0x03CC9BCC LDR X8, [X8 + 0xF08]
	0x03CC9BD0 LDR X8, [X8]
	0x03CC9BD4 LDR X8, [X8 + 0xB8]
	0x03CC9BD8 LDP S8, S9, [X8]
	0x03CC9BDC B 0x3CC9C94
	0x03CC9BE0 LDR X8, [X21 + 0x28]
	0x03CC9BE4 CBZ X8, 0x3CC9CB8
	0x03CC9BE8 LDP S8, S9, [X8 + 0x18]
	0x03CC9BEC LDR V10, [X8 + 0x24]
	0x03CC9BF0 MOV X0, X21
	0x03CC9BF4 BL 0x3CC98D0
	0x03CC9BF8 CBZ X0, 0x3CC9CB8
	0x03CC9BFC LDR W8, [X0 + 0x10]
	0x03CC9C00 CBZ W8, 0x3CC9C94
	0x03CC9C04 MOV X0, X21
	0x03CC9C08 BL 0x3CC98D0
	0x03CC9C0C CBZ X0, 0x3CC9CB8
	0x03CC9C10 LDR W8, [X0 + 0x10]
	0x03CC9C14 MOV W22, W20
	0x03CC9C18 CMP W8, W20
	0x03CC9C1C B.GT 0x3CC9C34
	0x03CC9C20 MOV X0, X21
	0x03CC9C24 BL 0x3CC98D0
	0x03CC9C28 CBZ X0, 0x3CC9CB8
	0x03CC9C2C LDR W8, [X0 + 0x10]
	0x03CC9C30 SUB W22, W8, 0x1
	0x03CC9C34 MOV X0, X21
	0x03CC9C38 BL 0x3CC98D0
	0x03CC9C3C CBZ X0, 0x3CC9CB8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x71F000
	015 Move W8, [X20+873]
	016 Move X19, X3
	017 Move X22, X2
	018 Move W21, W0
	019 Move [X31+12], W1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {30}
	024 Move X0, 0x499000
	025 Move X0, [X0+2888]
	026 Call 0x1C17CF4
	027 Move W1, [X31+12]
	028 Move W8, 1
	029 Move [X20+873], W8
	030 Compare X19, 0
	031 JumpIfEqual {575}
	032 Move X25, [X19+48]
	033 Compare X25, 0
	034 JumpIfEqual {575}
	035 Move W8, [X25+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X19+88]
	038 Compare X8, 0
	039 JumpIfEqual {575}
	040 Move W9, 392
	041 NotImplemented "Instruction SMADDL not yet implemented."
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, 80
	046 NotImplemented "Instruction MADD not yet implemented."
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Move X26, W21
	049 Move W9, 392
	050 NotImplemented "Instruction MADD not yet implemented."
	051 Move [X9+116], W24
	052 Compare X22, 0
	053 JumpIfEqual {575}
	054 Move W9, [X22+260]
	055 Compare W9, 0
	056 JumpIfEqual {170}
	057 Move W9, 80
	058 NotImplemented "Instruction MADD not yet implemented."
	059 Move X8, [X8+40]
	060 Compare X8, 0
	061 JumpIfEqual {575}
	062 Move W9, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move V0, [X22+28]
	065 Move V1, [X22+36]
	066 Move W9, 392
	067 NotImplemented "Instruction MADD not yet implemented."
	068 Move S3, [X9+160]
	069 Move S4, [X9+164]
	070 Add S0, S0, S1
	071 Move V1, [X9+168]
	072 Move S2, W31
	073 Move W9, 12
	074 NotImplemented "Instruction MADD not yet implemented."
	075 Add S3, S3, S2
	076 Subtract S4, S0, S4
	077 Add S1, S1, S2
	078 Move [X8+32], S3
	079 Move [X8+40], S4
	080 Move [X8+40], S1
	081 Move W8, [X25+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X19+88]
	084 Compare X8, 0
	085 JumpIfEqual {575}
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W9, 80
	089 NotImplemented "Instruction MADD not yet implemented."
	090 Move X8, [X8+40]
	091 Compare X8, 0
	092 JumpIfEqual {575}
	093 Move W10, [X8+24]
	094 Add W9, W24, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W10, 392
	097 NotImplemented "Instruction MADD not yet implemented."
	098 Move S2, [X10+120]
	099 Move S3, [X10+124]
	100 Move V4, [X10+128]
	101 Move S1, W31
	102 Move X9, W9
	103 Move W10, 12
	104 NotImplemented "Instruction MADD not yet implemented."
	105 Add S2, S2, S1
	106 Subtract S3, S0, S3
	107 Add S1, S4, S1
	108 Move [X8+32], S2
	109 Move [X8+40], S3
	110 Move [X8+40], S1
	111 Move W8, [X25+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X19+88]
	114 Compare X8, 0
	115 JumpIfEqual {575}
	116 Move W9, [X8+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W9, 80
	119 NotImplemented "Instruction MADD not yet implemented."
	120 Move X8, [X8+40]
	121 Compare X8, 0
	122 JumpIfEqual {575}
	123 Move W10, [X8+24]
	124 Add W9, W24, 2
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W10, 392
	127 NotImplemented "Instruction MADD not yet implemented."
	128 Move S2, [X10+200]
	129 Move S3, [X10+204]
	130 Move V4, [X10+208]
	131 Move S1, W31
	132 Move X9, W9
	133 Move W10, 12
	134 NotImplemented "Instruction MADD not yet implemented."
	135 Add S2, S2, S1
	136 Subtract S3, S0, S3
	137 Add S1, S4, S1
	138 Move [X8+32], S2
	139 Move [X8+40], S3
	140 Move [X8+40], S1
	141 Move W8, [X25+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X8, [X19+88]
	144 Compare X8, 0
	145 JumpIfEqual {575}
	146 Move W9, [X8+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W9, 80
	149 NotImplemented "Instruction MADD not yet implemented."
	150 Move X8, [X8+40]
	151 Compare X8, 0
	152 JumpIfEqual {575}
	153 Move W10, [X8+24]
	154 Add W9, W24, 3
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W10, 392
	157 NotImplemented "Instruction MADD not yet implemented."
	158 Move S2, [X10+240]
	159 Move S3, [X10+244]
	160 Move V4, [X10+248]
	161 Move S1, W31
	162 Move X9, W9
	163 Move W11, 12
	164 NotImplemented "Instruction MADD not yet implemented."
	165 Add S2, S2, S1
	166 Subtract S3, S0, S3
	167 Add S0, S4, S1
	168 Move [X8+32], S2
	169 Move [X8+40], S3
	170 Move W9, 80
	171 NotImplemented "Instruction MADD not yet implemented."
	172 Move X8, [X8+40]
	173 Compare X8, 0
	174 JumpIfEqual {575}
	175 Move W9, [X8+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move W9, 392
	178 NotImplemented "Instruction MADD not yet implemented."
	179 Move V0, [X9+160]
	180 Move V1, [X9+168]
	181 Move W9, 12
	182 NotImplemented "Instruction MADD not yet implemented."
	183 Move [X8+32], D0
	184 Move [X8+40], S1
	185 Move X8, [X19+88]
	186 Compare X8, 0
	187 JumpIfEqual {575}
	188 Move W9, [X8+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move W9, [X25+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move W9, 80
	193 NotImplemented "Instruction MADD not yet implemented."
	194 Move X8, [X8+40]
	195 Compare X8, 0
	196 JumpIfEqual {575}
	197 Move W10, [X8+24]
	198 Add W9, W24, 1
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move W10, 392
	201 NotImplemented "Instruction MADD not yet implemented."
	202 Move V0, [X10+120]
	203 Move V1, [X10+128]
	204 Move X9, W9
	205 Move W10, 12
	206 NotImplemented "Instruction MADD not yet implemented."
	207 Move [X8+32], D0
	208 Move [X8+40], S1
	209 Move X8, [X19+88]
	210 Compare X8, 0
	211 JumpIfEqual {575}
	212 Move W9, [X8+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move W9, [X25+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W9, 80
	217 NotImplemented "Instruction MADD not yet implemented."
	218 Move X8, [X8+40]
	219 Compare X8, 0
	220 JumpIfEqual {575}
	221 Move W10, [X8+24]
	222 Add W9, W24, 2
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W10, 392
	225 NotImplemented "Instruction MADD not yet implemented."
	226 Move V0, [X10+200]
	227 Move V1, [X10+208]
	228 Move X9, W9
	229 Move W10, 12
	230 NotImplemented "Instruction MADD not yet implemented."
	231 Move [X8+32], D0
	232 Move [X8+40], S1
	233 Move X8, [X19+88]
	234 Compare X8, 0
	235 JumpIfEqual {575}
	236 Move W9, [X8+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move W9, [X25+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move W9, 80
	241 NotImplemented "Instruction MADD not yet implemented."
	242 Move X8, [X8+40]
	243 Compare X8, 0
	244 JumpIfEqual {575}
	245 Move W10, [X8+24]
	246 Add W9, W24, 3
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W10, 392
	249 NotImplemented "Instruction MADD not yet implemented."
	250 Move V1, [X10+240]
	251 Move V0, [X10+248]
	252 Move X9, W9
	253 Move W11, 12
	254 NotImplemented "Instruction MADD not yet implemented."
	255 Move [X8+32], D1
	256 Move [X8+40], S0
	257 Move X8, [X19+88]
	258 Compare X8, 0
	259 JumpIfEqual {575}
	260 Move W9, [X8+24]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move W9, [X25+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W9, 80
	265 NotImplemented "Instruction MADD not yet implemented."
	266 Move X8, [X8+64]
	267 Compare X8, 0
	268 JumpIfEqual {575}
	269 Move W9, [X8+24]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move W9, 392
	272 NotImplemented "Instruction MADD not yet implemented."
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 Add X8, X8, X24
	275 Move [X8+2], V0
	276 Move X8, [X19+88]
	277 Compare X8, 0
	278 JumpIfEqual {575}
	279 Move W9, [X8+24]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move W9, [X25+24]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move W9, 80
	284 NotImplemented "Instruction MADD not yet implemented."
	285 Move X8, [X8+64]
	286 Compare X8, 0
	287 JumpIfEqual {575}
	288 Move W10, [X8+24]
	289 Add W9, W24, 1
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move W10, 392
	292 NotImplemented "Instruction MADD not yet implemented."
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 Move X29, W9
	295 Add X8, X8, X29
	296 Move [X8+2], V0
	297 Move X8, [X19+88]
	298 Compare X8, 0
	299 JumpIfEqual {575}
	300 Move W9, [X8+24]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move W9, [X25+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move W9, 80
	305 NotImplemented "Instruction MADD not yet implemented."
	306 Move X8, [X8+64]
	307 Compare X8, 0
	308 JumpIfEqual {575}
	309 Move W10, [X8+24]
	310 Add W9, W24, 2
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move W10, 392
	313 NotImplemented "Instruction MADD not yet implemented."
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 Move X28, W9
	316 Add X8, X8, X28
	317 Move [X8+2], V0
	318 Move X8, [X19+88]
	319 Compare X8, 0
	320 JumpIfEqual {575}
	321 Move W9, [X8+24]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move W9, [X25+24]
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move W9, 80
	326 NotImplemented "Instruction MADD not yet implemented."
	327 Move X8, [X8+64]
	328 Compare X8, 0
	329 JumpIfEqual {575}
	330 Move W10, [X8+24]
	331 Add W9, W24, 3
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move W10, 392
	334 NotImplemented "Instruction MADD not yet implemented."
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 Move X27, W9
	337 Add X8, X8, X27
	338 Move [X8+2], V0
	339 Move X8, [X19+88]
	340 Compare X8, 0
	341 JumpIfEqual {575}
	342 Move W9, [X8+24]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move W9, [X25+24]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move W9, 80
	347 NotImplemented "Instruction MADD not yet implemented."
	348 Move X8, [X8+72]
	349 Compare X8, 0
	350 JumpIfEqual {575}
	351 Move W9, [X8+24]
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move W9, 392
	354 NotImplemented "Instruction MADD not yet implemented."
	355 NotImplemented "Instruction LDUR not yet implemented."
	356 Add X8, X8, X24
	357 Move [X8+32], D0
	358 Move X8, [X19+88]
	359 Compare X8, 0
	360 JumpIfEqual {575}
	361 Move W9, [X8+24]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move W9, [X25+24]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move W9, 80
	366 NotImplemented "Instruction MADD not yet implemented."
	367 Move X8, [X8+72]
	368 Compare X8, 0
	369 JumpIfEqual {575}
	370 Move W9, [X8+24]
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move W9, 392
	373 NotImplemented "Instruction MADD not yet implemented."
	374 NotImplemented "Instruction LDUR not yet implemented."
	375 Add X8, X8, X29
	376 Move [X8+32], D0
	377 Move X8, [X19+88]
	378 Compare X8, 0
	379 JumpIfEqual {575}
	380 Move W9, [X8+24]
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move W9, [X25+24]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move W9, 80
	385 NotImplemented "Instruction MADD not yet implemented."
	386 Move X8, [X8+72]
	387 Compare X8, 0
	388 JumpIfEqual {575}
	389 Move W9, [X8+24]
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move W9, 392
	392 NotImplemented "Instruction MADD not yet implemented."
	393 NotImplemented "Instruction LDUR not yet implemented."
	394 Add X8, X8, X28
	395 Move [X8+32], D0
	396 Move X8, [X19+88]
	397 Compare X8, 0
	398 JumpIfEqual {575}
	399 Move W9, [X8+24]
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move W9, [X25+24]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move W9, 80
	404 NotImplemented "Instruction MADD not yet implemented."
	405 Move X8, [X8+72]
	406 Compare X8, 0
	407 JumpIfEqual {575}
	408 Move W9, [X8+24]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move W9, 392
	411 NotImplemented "Instruction MADD not yet implemented."
	412 Add X9, X9, 268
	413 Move V0, [X9]
	414 Add X8, X8, X27
	415 Move [X8+32], D0
	416 Move X8, [X19+88]
	417 Compare X8, 0
	418 JumpIfEqual {575}
	419 Move W9, [X8+24]
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Move W9, [X25+24]
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Move W9, 80
	424 Move W10, 392
	425 NotImplemented "Instruction MADD not yet implemented."
	426 NotImplemented "Instruction MADD not yet implemented."
	427 Move X20, [X8+80]
	428 Move W22, [X9+196]
	429 Move TEMP, X1
	430 And TEMP, TEMP, 1
	431 Compare TEMP, 1
	432 JumpIfNotEqual {444}
	433 Move X8, 0x499000
	434 Move X8, [X8+2888]
	435 Move X0, [X8]
	436 Move W8, [X0+224]
	437 Compare W8, 0
	438 JumpIfNotEqual {440}
	439 Call 0x1C17DFC
	440 Move X0, X22
	441 Call TextGeneratorUtilities.GammaToLinear, X0
	442 Move W1, [X31+12]
	443 Move W22, W0
	444 Compare X20, 0
	445 JumpIfEqual {575}
	446 Move W8, [X20+24]
	447 NotImplemented "Instruction CMP not yet implemented."
	448 Add X8, X20, X24
	449 Move [X8+32], W22
	450 Move X8, [X19+88]
	451 Compare X8, 0
	452 JumpIfEqual {575}
	453 Move W9, [X8+24]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move W9, [X25+24]
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Move W9, 80
	458 Move W10, 392
	459 NotImplemented "Instruction MADD not yet implemented."
	460 NotImplemented "Instruction MADD not yet implemented."
	461 Move X20, [X8+80]
	462 Move W22, [X9+156]
	463 Move TEMP, X1
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfNotEqual {478}
	467 Move X8, 0x499000
	468 Move X8, [X8+2888]
	469 Move X0, [X8]
	470 Move W8, [X0+224]
	471 Compare W8, 0
	472 JumpIfNotEqual {474}
	473 Call 0x1C17DFC
	474 Move X0, X22
	475 Call TextGeneratorUtilities.GammaToLinear, X0
	476 Move W1, [X31+12]
	477 Move W22, W0
	478 Compare X20, 0
	479 JumpIfEqual {575}
	480 Move W8, [X20+24]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Add X8, X20, X29
	483 Move [X8+32], W22
	484 Move X8, [X19+88]
	485 Compare X8, 0
	486 JumpIfEqual {575}
	487 Move W9, [X8+24]
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Move W9, [X25+24]
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move W9, 80
	492 Move W10, 392
	493 NotImplemented "Instruction MADD not yet implemented."
	494 NotImplemented "Instruction MADD not yet implemented."
	495 Move X20, [X8+80]
	496 Move W22, [X9+236]
	497 Move TEMP, X1
	498 And TEMP, TEMP, 1
	499 Compare TEMP, 1
	500 JumpIfNotEqual {512}
	501 Move X8, 0x499000
	502 Move X8, [X8+2888]
	503 Move X0, [X8]
	504 Move W8, [X0+224]
	505 Compare W8, 0
	506 JumpIfNotEqual {508}
	507 Call 0x1C17DFC
	508 Move X0, X22
	509 Call TextGeneratorUtilities.GammaToLinear, X0
	510 Move W1, [X31+12]
	511 Move W22, W0
	512 Compare X20, 0
	513 JumpIfEqual {575}
	514 Move W8, [X20+24]
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Add X8, X20, X28
	517 Move [X8+32], W22
	518 Move X8, [X19+88]
	519 Compare X8, 0
	520 JumpIfEqual {575}
	521 Move W9, [X8+24]
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Move W9, [X25+24]
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move W9, 80
	526 Move W10, 392
	527 NotImplemented "Instruction MADD not yet implemented."
	528 NotImplemented "Instruction MADD not yet implemented."
	529 Move X20, [X8+80]
	530 Move W21, [X9+276]
	531 Move TEMP, X1
	532 And TEMP, TEMP, 1
	533 Compare TEMP, 1
	534 JumpIfNotEqual {545}
	535 Move X8, 0x499000
	536 Move X8, [X8+2888]
	537 Move X0, [X8]
	538 Move W8, [X0+224]
	539 Compare W8, 0
	540 JumpIfNotEqual {542}
	541 Call 0x1C17DFC
	542 Move X0, X21
	543 Call TextGeneratorUtilities.GammaToLinear, X0
	544 Move W21, W0
	545 Compare X20, 0
	546 JumpIfEqual {575}
	547 Move W8, [X20+24]
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Add X8, X20, X27
	550 Move [X8+32], W21
	551 Move X8, [X19+88]
	552 Compare X8, 0
	553 JumpIfEqual {575}
	554 Move W9, [X8+24]
	555 NotImplemented "Instruction CMP not yet implemented."
	556 Move W10, 80
	557 Add W9, W24, 4
	558 NotImplemented "Instruction MADD not yet implemented."
	559 Move X20, [X31+96]
	560 Move X19, [X31+104]
	561 Move X22, [X31+80]
	562 Move X21, [X31+88]
	563 Move X24, [X31+64]
	564 Move X23, [X31+72]
	565 Move X26, [X31+48]
	566 Move X25, [X31+56]
	567 Move X28, [X31+32]
	568 Move X27, [X31+40]
	569 Move X29, [X31+16]
	570 Move X30, [X31+24]
	571 Move [X8+32], W9
	572 Add X31, X31, 112
	573 Return 
	574 Call 0x1C17F28
	575 Call 0x1C17F20

Method: System.Void AdjustLineOffset(System.Int32 startIndex, System.Int32 endIndex, System.Single offset, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC9C40 LDR X8, [X0 + 0x30]
	0x03CC9C44 CBZ X8, 0x3CC9CB8
	0x03CC9C48 LDR W9, [X8 + 0x18]
	0x03CC9C4C CMP W22, W9
	0x03CC9C50 B.CS 0x3CC9CBC
	0x03CC9C54 MOVZ W9, 0x188
	0x03CC9C58 SMADDL X8, X22, X9, X8
	0x03CC9C5C LDR V12, [X8 + 0x148]
	0x03CC9C60 LDR V11, [X8 + 0x154]
	0x03CC9C64 LDR V13, [X8 + 0x164]
	0x03CC9C68 MOV X0, X21
	0x03CC9C6C BL 0x3CC98D0
	0x03CC9C70 CBZ X0, 0x3CC9CB8
	0x03CC9C74 LDR W8, [X0 + 0x10]
	0x03CC9C78 FSUB S0, S10, S11
	0x03CC9C7C CMP W8, W20
	0x03CC9C80 FCSEL S1, S12, S13, GT
	0x03CC9C84 ANDS W31, W19, 0x1
	0x03CC9C88 FCSEL S0, S0, S11, NE
	0x03CC9C8C FADD S8, S8, S1
	0x03CC9C90 FADD S9, S9, S0
	0x03CC9C94 MOV V0.16B, V8.16B
	0x03CC9C98 MOV V1.16B, V9.16B
	0x03CC9C9C LDP X20, X19, [X31 + 0x50]
	0x03CC9CA0 LDP X22, X21, [X31 + 0x40]
	0x03CC9CA4 LDR X30, [X31 + 0x30]
	0x03CC9CA8 LDP D9, D8, [X31 + 0x20]
	0x03CC9CAC LDP D11, D10, [X31 + 0x10]
	0x03CC9CB0 LDP D13, D12, [X31], #0x60
	0x03CC9CB4 RET
	0x03CC9CB8 BL 0x1C16F20
	0x03CC9CBC BL 0x1C16F28
	0x03CC9CC0 STP D13, D12, [X31 - 0x60]!
	0x03CC9CC4 STP D11, D10, [X31 + 0x10]
	0x03CC9CC8 STP D9, D8, [X31 + 0x20]
	0x03CC9CCC STP X30, X23, [X31 + 0x30]
	0x03CC9CD0 STP X22, X21, [X31 + 0x40]
	0x03CC9CD4 STP X20, X19, [X31 + 0x50]
	0x03CC9CD8 MOV X22, X0
	0x03CC9CDC LDR X0, [X0 + 0x28]
	0x03CC9CE0 MOV W19, W2
	0x03CC9CE4 MOV W21, W1
	0x03CC9CE8 MOV X1, X31
	0x03CC9CEC MOV X2, X31
	0x03CC9CF0 MOV W20, W3
	0x03CC9CF4 BL 0x3CAEAD8
	0x03CC9CF8 TBZ X0, 0x0, 0x3CC9D34
	0x03CC9CFC ADRP X19, 0x710000
	0x03CC9D00 LDRB W8, [X19 + 0x78F]
	0x03CC9D04 CBNZ W8, 0x3CC9D1C
	0x03CC9D08 ADRP X0, 0x432000
	0x03CC9D0C LDR X0, [X0 + 0xF08]
	0x03CC9D10 BL 0x1C16CF4
	0x03CC9D14 MOVZ W8, 0x1
	0x03CC9D18 STRB W8, [X19 + 0x78F]
	0x03CC9D1C ADRP X8, 0x432000
	0x03CC9D20 LDR X8, [X8 + 0xF08]
	0x03CC9D24 LDR X8, [X8]
	0x03CC9D28 LDR X8, [X8 + 0xB8]
	0x03CC9D2C LDP S8, S9, [X8]
	0x03CC9D30 B 0x3CC9E20
	0x03CC9D34 LDR X8, [X22 + 0x28]
	0x03CC9D38 CBZ X8, 0x3CC9E44
	0x03CC9D3C LDP S8, S9, [X8 + 0x18]
	0x03CC9D40 LDR V10, [X8 + 0x24]
	0x03CC9D44 MOV X0, X22
	0x03CC9D48 BL 0x3CC98D0
	0x03CC9D4C CBZ X0, 0x3CC9E44
	0x03CC9D50 LDR W8, [X0 + 0x10]
	0x03CC9D54 CBZ W8, 0x3CC9E20
	0x03CC9D58 MOV X0, X22
	0x03CC9D5C BL 0x3CC98D0
	0x03CC9D60 CBZ X0, 0x3CC9E44
	0x03CC9D64 LDR W8, [X0 + 0x10]
	0x03CC9D68 CMP W8, W21
	0x03CC9D6C B.GT 0x3CC9D84
	0x03CC9D70 MOV X0, X22
	0x03CC9D74 BL 0x3CC98D0
	0x03CC9D78 CBZ X0, 0x3CC9E44
	0x03CC9D7C LDR W8, [X0 + 0x10]
	0x03CC9D80 SUB W21, W8, 0x1
	0x03CC9D84 MOV X0, X22
	0x03CC9D88 BL 0x3CC98D0
	0x03CC9D8C CBZ X0, 0x3CC9E44
	0x03CC9D90 LDR X8, [X0 + 0x30]
	0x03CC9D94 CBZ X8, 0x3CC9E44
	0x03CC9D98 LDR W9, [X8 + 0x18]
	0x03CC9D9C CMP W21, W9
	0x03CC9DA0 B.CS 0x3CC9E48
	0x03CC9DA4 MOVZ W9, 0x188
	0x03CC9DA8 SMADDL X8, X21, X9, X8
	0x03CC9DAC LDRSW X23, [X8 + 0x6C]
	0x03CC9DB0 LDR V11, [X8 + 0x148]
	0x03CC9DB4 LDR V12, [X8 + 0x164]
	0x03CC9DB8 MOV X0, X22
	0x03CC9DBC BL 0x3CC98D0

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X2, 0
	004 JumpIfEqual {95}
	005 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	006 Move W8, 392
	007 Move X10, [X2+48]
	008 Compare X10, 0
	009 JumpIfEqual {95}
	010 Move W9, [X10+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X9, W0
	013 NotImplemented "Instruction MADD not yet implemented."
	014 Move V2, [X10+296]
	015 Subtract S2, S2, S0
	016 Move [X10+296], S2
	017 Move X10, [X2+48]
	018 Compare X10, 0
	019 JumpIfEqual {95}
	020 Move W11, [X10+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction MADD not yet implemented."
	023 Move V2, [X10+284]
	024 Subtract S2, S2, S0
	025 Move [X10+284], S2
	026 Move X10, [X2+48]
	027 Compare X10, 0
	028 JumpIfEqual {95}
	029 Move W11, [X10+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction MADD not yet implemented."
	032 Move V2, [X10+308]
	033 Subtract S2, S2, S0
	034 Move [X10+308], S2
	035 Move X10, [X2+48]
	036 Compare X10, 0
	037 JumpIfEqual {95}
	038 Move W11, [X10+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction MADD not yet implemented."
	041 Move V2, [X10+320]
	042 Subtract S2, S2, S0
	043 Move [X10+320], S2
	044 Move X10, [X2+48]
	045 Compare X10, 0
	046 JumpIfEqual {95}
	047 Move W11, [X10+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction MADD not yet implemented."
	050 Add X12, X11, 332
	051 Move V2, [X12]
	052 Subtract V2, V2, V1
	053 Move [X12], D2
	054 Move V2, [X11+340]
	055 Move W12, [X11+416]
	056 Subtract S2, S2, S0
	057 Move [X11+340], S2
	058 Compare W12, 0
	059 JumpIfEqual {91}
	060 NotImplemented "Instruction MADD not yet implemented."
	061 Move V2, [X10+164]
	062 Subtract S2, S2, S0
	063 Move [X10+164], S2
	064 Move X10, [X2+48]
	065 Compare X10, 0
	066 JumpIfEqual {95}
	067 Move W11, [X10+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction MADD not yet implemented."
	070 Move V2, [X10+124]
	071 Subtract S2, S2, S0
	072 Move [X10+124], S2
	073 Move X10, [X2+48]
	074 Compare X10, 0
	075 JumpIfEqual {95}
	076 Move W11, [X10+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction MADD not yet implemented."
	079 Move V2, [X10+204]
	080 Subtract S2, S2, S0
	081 Move [X10+204], S2
	082 Move X10, [X2+48]
	083 Compare X10, 0
	084 JumpIfEqual {95}
	085 Move W11, [X10+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction MADD not yet implemented."
	088 Move V2, [X9+244]
	089 Subtract S2, S2, S0
	090 Move [X9+244], S2
	091 Add W0, W0, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X30, [X31+16]
	094 Return 
	095 Call 0x1C17F20
	096 Call 0x1C17F28

Method: System.Void ResizeLineExtents(System.Int32 size, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC9DC0 CBZ X0, 0x3CC9E44
	0x03CC9DC4 LDR X8, [X0 + 0x48]
	0x03CC9DC8 CBZ X8, 0x3CC9E44
	0x03CC9DCC LDR W9, [X8 + 0x18]
	0x03CC9DD0 CMP W23, W9
	0x03CC9DD4 B.CS 0x3CC9E48
	0x03CC9DD8 MOVZ W9, 0x60
	0x03CC9DDC MADD X8, X23, X9, X8
	0x03CC9DE0 LDR V13, [X8 + 0x58]
	0x03CC9DE4 MOV X0, X22
	0x03CC9DE8 BL 0x3CC98D0
	0x03CC9DEC CBZ X0, 0x3CC9E44
	0x03CC9DF0 LDR W8, [X0 + 0x10]
	0x03CC9DF4 FSUB S0, S10, S13
	0x03CC9DF8 ANDS W31, W20, 0x1
	0x03CC9DFC FCSEL S0, S0, S13, NE
	0x03CC9E00 SUB W8, W8, 0x1
	0x03CC9E04 CMP W21, W8
	0x03CC9E08 B.GE 0x3CC9E18
	0x03CC9E0C TBNZ X19, 0x0, 0x3CC9E18
	0x03CC9E10 FADD S8, S8, S11
	0x03CC9E14 B 0x3CC9E1C
	0x03CC9E18 FADD S8, S8, S12
	0x03CC9E1C FADD S9, S9, S0
	0x03CC9E20 MOV V0.16B, V8.16B
	0x03CC9E24 MOV V1.16B, V9.16B
	0x03CC9E28 LDP X20, X19, [X31 + 0x50]
	0x03CC9E2C LDP X22, X21, [X31 + 0x40]
	0x03CC9E30 LDP X30, X23, [X31 + 0x30]
	0x03CC9E34 LDP D9, D8, [X31 + 0x20]
	0x03CC9E38 LDP D11, D10, [X31 + 0x10]
	0x03CC9E3C LDP D13, D12, [X31], #0x60
	0x03CC9E40 RET
	0x03CC9E44 BL 0x1C16F20
	0x03CC9E48 BL 0x1C16F28
	0x03CC9E4C STP D9, D8, [X31 - 0x30]!
	0x03CC9E50 STR X30, [X31 + 0x10]
	0x03CC9E54 STP X20, X19, [X31 + 0x20]
	0x03CC9E58 MOV X19, X0
	0x03CC9E5C LDR X0, [X0 + 0x28]
	0x03CC9E60 MOV W20, W1
	0x03CC9E64 MOV X1, X31
	0x03CC9E68 MOV X2, X31
	0x03CC9E6C MOV V9.16B, V1.16B
	0x03CC9E70 MOV V8.16B, V0.16B
	0x03CC9E74 BL 0x3CAEAD8
	0x03CC9E78 TBZ X0, 0x0, 0x3CC9E84
	0x03CC9E7C MOV W20, W31
	0x03CC9E80 B 0x3CC9F48
	0x03CC9E84 TBZ X20, 0x0, 0x3CC9E98
	0x03CC9E88 LDR X8, [X19 + 0x28]
	0x03CC9E8C CBZ X8, 0x3CC9F5C
	0x03CC9E90 LDR V0, [X8 + 0x24]
	0x03CC9E94 FSUB S9, S0, S9
	0x03CC9E98 MOV X0, X19
	0x03CC9E9C BL 0x3CC98D0
	0x03CC9EA0 CBZ X0, 0x3CC9F5C
	0x03CC9EA4 LDR W8, [X0 + 0x24]
	0x03CC9EA8 CMP W8, 0x2
	0x03CC9EAC B.LT 0x3CC9EC8
	0x03CC9EB0 MOV X0, X19
	0x03CC9EB4 MOV V0.16B, V8.16B
	0x03CC9EB8 MOV V1.16B, V9.16B
	0x03CC9EBC BL 0x3CC9F64
	0x03CC9EC0 MOV W1, W0
	0x03CC9EC4 B 0x3CC9ECC
	0x03CC9EC8 MOV W1, W31
	0x03CC9ECC MOV X0, X19
	0x03CC9ED0 MOV V0.16B, V8.16B
	0x03CC9ED4 MOV V1.16B, V9.16B
	0x03CC9ED8 MOV W2, W31
	0x03CC9EDC BL 0x3CCA034
	0x03CC9EE0 MOV W20, W0
	0x03CC9EE4 MOV X0, X19
	0x03CC9EE8 BL 0x3CC98D0
	0x03CC9EEC CBZ X0, 0x3CC9F5C
	0x03CC9EF0 LDR X8, [X0 + 0x30]
	0x03CC9EF4 CBZ X8, 0x3CC9F5C
	0x03CC9EF8 LDR W9, [X8 + 0x18]
	0x03CC9EFC CMP W20, W9
	0x03CC9F00 B.CS 0x3CC9F60
	0x03CC9F04 MOVZ W9, 0x188
	0x03CC9F08 SMADDL X9, X20, X9, X8
	0x03CC9F0C LDR V0, [X9 + 0x124]
	0x03CC9F10 LDR V1, [X9 + 0x130]
	0x03CC9F14 FSUB S2, S8, S0
	0x03CC9F18 FSUB S0, S1, S0
	0x03CC9F1C FDIV S0, S2, S0
	0x03CC9F20 FMOV S1, 0.5
	0x03CC9F24 FCMP S0, S1
	0x03CC9F28 B.MI 0x3CC9F48
	0x03CC9F2C SXTW X9, W20
	0x03CC9F30 MOVZ W10, 0x188
	0x03CC9F34 MADD X8, X9, X10, X8
	0x03CC9F38 LDRH W8, [X8 + 0x20]
	0x03CC9F3C CMP W8, 0xA
	0x03CC9F40 CINC W0, W20, NE
	0x03CC9F44 B 0x3CC9F4C
	0x03CC9F48 MOV W0, W20
	0x03CC9F4C LDP X20, X19, [X31 + 0x20]
	0x03CC9F50 LDR X30, [X31 + 0x10]
	0x03CC9F54 LDP D9, D8, [X31], #0x30
	0x03CC9F58 RET
	0x03CC9F5C BL 0x1C16F20
	0x03CC9F60 BL 0x1C16F28
	0x03CC9F64 STP D9, D8, [X31 - 0x40]!
	0x03CC9F68 STR X30, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X26
	005 Move [X31+216], X25
	006 Move [X31+224], X24
	007 Move [X31+232], X23
	008 Move [X31+240], X22
	009 Move [X31+248], X21
	010 Move [X31+256], X20
	011 Move [X31+264], X19
	012 Move X21, 0x71F000
	013 Move W8, [X21+874]
	014 Move X19, X1
	015 Move W20, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x499000
	021 Move X0, [X0+3504]
	022 Call 0x1C17CF4
	023 Move X0, 0x499000
	024 Move X0, [X0+2888]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+874], W8
	028 Move X22, 0x499000
	029 Move X22, [X22+3504]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add W21, W20, 256
	032 Add W0, W20, 1
	033 Move X1, X31
	034 Call Mathf.NextPowerOfTwo, X0
	035 Move W21, W0
	036 Move X0, [X22]
	037 Move W1, W21
	038 Call 0x1C17D6C
	039 Compare X19, 0
	040 JumpIfEqual {114}
	041 Move X20, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X24, 0x499000
	044 Move X24, [X24+2888]
	045 Move W25, 0xFE00
	046 Move W26, 0xFE00
	047 Move X22, X31
	048 Move X23, X31
	049 NotImplemented "Instruction BIC not yet implemented."
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 NotImplemented "Instruction MOVK not yet implemented."
	052 Move X8, [X19+72]
	053 Compare X8, 0
	054 JumpIfEqual {114}
	055 Move W9, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X8, X22
	059 Add X1, X8, 32
	060 Add X0, X31, 96
	061 Move W2, 96
	062 Call 0x3EB2AC0
	063 Compare X20, 0
	064 JumpIfEqual {114}
	065 Add X0, X31, 0
	066 Add X1, X31, 96
	067 Move W2, 96
	068 Call 0x3EB2AC0
	069 Move W8, [X20+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X20, X22
	072 Add X0, X8, 32
	073 Add X1, X31, 0
	074 Move W2, 96
	075 Call 0x3EB2AC0
	076 Compare X20, 0
	077 JumpIfEqual {114}
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X24]
	081 Move W9, [X0+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {87}
	084 Call 0x1C17DFC
	085 Move X0, [X24]
	086 Move W8, [X20+24]
	087 Move X9, [X0+184]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X10, [X9]
	090 Add X9, X20, X22
	091 Move [X9+112], X10
	092 Move X8, [X24]
	093 Move X8, [X8+184]
	094 Move X8, [X8+8]
	095 Move [X9+80], W25
	096 Move [X9+88], W26
	097 Move [X9+120], X8
	098 Add X23, X23, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X22, X22, 96
	101 Move [X19+72], X20
	102 Move X20, [X31+256]
	103 Move X19, [X31+264]
	104 Move X22, [X31+240]
	105 Move X21, [X31+248]
	106 Move X24, [X31+224]
	107 Move X23, [X31+232]
	108 Move X26, [X31+208]
	109 Move X25, [X31+216]
	110 Move X29, [X31+192]
	111 Move X30, [X31+200]
	112 Add X31, X31, 272
	113 Return 
	114 Call 0x1C17F20
	115 Call 0x1C17F28

Method: UnityEngine.TextCore.Text.FontStyles LegacyStyleToNewStyle(UnityEngine.FontStyle fontStyle)

Disassembly:
	0x03CC9F6C STP X22, X21, [X31 + 0x20]
	0x03CC9F70 STP X20, X19, [X31 + 0x30]
	0x03CC9F74 MOV V8.16B, V1.16B
	0x03CC9F78 MOV X19, X0

ISIL:
	001 Subtract W8, W0, 1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Return X0

Method: UnityEngine.TextCore.Text.TextAlignment LegacyAlignmentToNewAlignment(UnityEngine.TextAnchor anchor)

Disassembly:
	0x03CC9F7C BL 0x3CC98D0
	0x03CC9F80 CBZ X0, 0x3CCA010
	0x03CC9F84 MOVZ W8, 0x7F800000
	0x03CC9F88 MOV X22, X31
	0x03CC9F8C MOV X21, X31
	0x03CC9F90 MOVN W20, 0x0
	0x03CC9F94 FMOV S9, W8
	0x03CC9F98 LDRSW X8, [X0 + 0x24]
	0x03CC9F9C CMP X21, X8

ISIL:
	001 Subtract W8, W0, 1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, -52015104
	004 Add X9, X9, 2516
	005 Move W0, [X9]
	006 Return X0
	007 Move W0, 257
	008 Return X0

Method: System.UInt32 ConvertToUTF32(System.UInt32 highSurrogate, System.UInt32 lowSurrogate)

Disassembly:
	0x03CC9FA0 B.GE 0x3CCA018
	0x03CC9FA4 MOV X0, X19
	0x03CC9FA8 BL 0x3CC98D0
	0x03CC9FAC CBZ X0, 0x3CCA010
	0x03CC9FB0 LDR X8, [X0 + 0x48]

ISIL:
	001 Move W9, 0x2400
	002 Add W8, W1, W0
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 Add W0, W8, W9
	005 Return X0

Method: System.Int32 GetMarkupTagHashCode(UnityEngine.TextCore.Text.TextBackingContainer styleDefinition, System.Int32 readIndex)

Disassembly:
	0x03CC9FB4 CBZ X8, 0x3CCA010
	0x03CC9FB8 LDR W9, [X8 + 0x18]
	0x03CC9FBC CMP X21, X9
	0x03CC9FC0 B.CS 0x3CCA030
	0x03CC9FC4 ADD X8, X8, X22
	0x03CC9FC8 LDR V0, [X8 + 0x50]
	0x03CC9FCC LDR V1, [X8 + 0x58]
	0x03CC9FD0 FCMP S0, S8
	0x03CC9FD4 B.LE 0x3CC9FE0
	0x03CC9FD8 FCMP S1, S8
	0x03CC9FDC B.MI 0x3CCA014
	0x03CC9FE0 FABD S0, S0, S0
	0x03CC9FE4 FABD S1, S1, S1
	0x03CC9FE8 FCMP S0, S1
	0x03CC9FEC FCSEL S0, S0, S1, MI
	0x03CC9FF0 FCMP S0, S9
	0x03CC9FF4 MOV X0, X19
	0x03CC9FF8 CSEL W20, W21, W20, MI
	0x03CC9FFC FCSEL S9, S0, S9, MI
	0x03CCA000 ADD X21, X21, 0x1
	0x03CCA004 BL 0x3CC98D0
	0x03CCA008 ADD X22, X22, 0x60
	0x03CCA00C CBNZ X0, 0x3CC9F98
	0x03CCA010 BL 0x1C16F20
	0x03CCA014 MOV W20, W21
	0x03CCA018 MOV W0, W20
	0x03CCA01C LDP X20, X19, [X31 + 0x30]
	0x03CCA020 LDP X22, X21, [X31 + 0x20]
	0x03CCA024 LDR X30, [X31 + 0x10]
	0x03CCA028 LDP D9, D8, [X31], #0x40
	0x03CCA02C RET
	0x03CCA030 BL 0x1C16F28
	0x03CCA034 SUB X31, X31, 0xC0
	0x03CCA038 STP D15, D14, [X31 + 0x40]
	0x03CCA03C STP D13, D12, [X31 + 0x50]
	0x03CCA040 STP D11, D10, [X31 + 0x60]
	0x03CCA044 STP D9, D8, [X31 + 0x70]
	0x03CCA048 STP X30, X25, [X31 + 0x80]
	0x03CCA04C STP X24, X23, [X31 + 0x90]
	0x03CCA050 STP X22, X21, [X31 + 0xA0]
	0x03CCA054 STP X20, X19, [X31 + 0xB0]
	0x03CCA058 ADRP X22, 0x71D000
	0x03CCA05C LDRB W8, [X22 + 0x376]
	0x03CCA060 MOV W20, W2
	0x03CCA064 MOV W21, W1
	0x03CCA068 MOV X19, X0
	0x03CCA06C STP S0, S1, [X31 + 0x38]
	0x03CCA070 TBNZ X8, 0x0, 0x3CCA088
	0x03CCA074 ADRP X0, 0x497000
	0x03CCA078 LDR X0, [X0 + 0xDD8]
	0x03CCA07C BL 0x1C16CF4
	0x03CCA080 MOVZ W8, 0x1
	0x03CCA084 STRB W8, [X22 + 0x376]
	0x03CCA088 MOV X0, X19
	0x03CCA08C BL 0x3CC98D0
	0x03CCA090 CBZ X0, 0x3CCA2EC
	0x03CCA094 LDR X8, [X0 + 0x48]
	0x03CCA098 CBZ X8, 0x3CCA2EC
	0x03CCA09C LDR W9, [X8 + 0x18]
	0x03CCA0A0 CMP W9, W21
	0x03CCA0A4 B.LS 0x3CCA2F0
	0x03CCA0A8 SXTW X23, W21
	0x03CCA0AC MOVZ W9, 0x60
	0x03CCA0B0 MADD X8, X23, X9, X8
	0x03CCA0B4 LDR W22, [X8 + 0x38]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x71F000
	013 Move W8, [X20+875]
	014 Move W19, W2
	015 Move X21, X0
	016 Move [X31], X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x499000
	022 Move X0, [X0+2888]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+875], W8
	026 Compare X21, 0
	027 JumpIfEqual {73}
	028 Move W8, 0xFFEF
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W20, W31
	032 Move W22, [X21+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X24, 0x498000
	035 Move X24, [X24+2888]
	036 Move X26, 1
	037 Move W20, W31
	038 Add W23, W19, 16
	039 Move W25, 1
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 Add X0, X31, 0
	042 Move W1, W19
	043 Call TextBackingContainer.get_Item, X0, X1
	044 Move W21, W0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, W21
	047 NotImplemented "Instruction LSLV not yet implemented."
	048 And X31, X8, X26
	049 Move X0, [X24]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W0, W21
	055 Call TextGeneratorUtilities.ToUpperASCIIFast, X0
	056 Add W8, W20, W20
	057 Add W19, W19, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Xor W20, W0, W8
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W0, W20
	062 Move X20, [X31+80]
	063 Move X19, [X31+88]
	064 Move X22, [X31+64]
	065 Move X21, [X31+72]
	066 Move X24, [X31+48]
	067 Move X23, [X31+56]
	068 Move X26, [X31+32]
	069 Move X25, [X31+40]
	070 Move X30, [X31+16]
	071 Add X31, X31, 96
	072 Return X0
	073 Call 0x1C17F20

Method: System.Int32 GetMarkupTagHashCode(System.UInt32[] styleDefinition, System.Int32 readIndex)

Disassembly:
	0x03CC858C STR S1, [X8 + 0x28]
	0x03CC8590 LDR W8, [X25 + 0x18]
	0x03CC8594 CMP W8, W21
	0x03CC8598 B.LS 0x3CC8C38
	0x03CC859C LDR X8, [X19 + 0x58]
	0x03CC85A0 CBZ X8, 0x3CC8C3C
	0x03CC85A4 LDR W9, [X8 + 0x18]
	0x03CC85A8 CMP W23, W9
	0x03CC85AC B.CS 0x3CC8C38
	0x03CC85B0 MOVZ W9, 0x50
	0x03CC85B4 MADD X8, X23, X9, X8
	0x03CC85B8 LDR X8, [X8 + 0x28]
	0x03CC85BC CBZ X8, 0x3CC8C3C
	0x03CC85C0 LDR W10, [X8 + 0x18]
	0x03CC85C4 ADD W9, W24, 0x3
	0x03CC85C8 CMP W9, W10
	0x03CC85CC B.CS 0x3CC8C38
	0x03CC85D0 MOVZ W10, 0x188
	0x03CC85D4 MADD X10, X26, X10, X25
	0x03CC85D8 LDP S2, S3, [X10 + 0xF0]
	0x03CC85DC LDR V4, [X10 + 0xF8]
	0x03CC85E0 FMOV S1, W31
	0x03CC85E4 SXTW X9, W9
	0x03CC85E8 MOVZ W11, 0xC
	0x03CC85EC MADD X8, X9, X11, X8
	0x03CC85F0 FADD S2, S2, S1
	0x03CC85F4 FSUB S3, S0, S3
	0x03CC85F8 FADD S0, S4, S1
	0x03CC85FC STP S2, S3, [X8 + 0x20]
	0x03CC8600 B 0x3CC8768
	0x03CC8604 MOVZ W9, 0x50
	0x03CC8608 MADD X8, X23, X9, X8
	0x03CC860C LDR X8, [X8 + 0x28]
	0x03CC8610 CBZ X8, 0x3CC8C3C
	0x03CC8614 LDR W9, [X8 + 0x18]
	0x03CC8618 CMP W24, W9
	0x03CC861C B.CS 0x3CC8C38
	0x03CC8620 MOVZ W9, 0x188
	0x03CC8624 MADD X9, X26, X9, X25
	0x03CC8628 LDR V0, [X9 + 0xA0]
	0x03CC862C LDR V1, [X9 + 0xA8]
	0x03CC8630 MOVZ W9, 0xC
	0x03CC8634 MADD X8, X24, X9, X8
	0x03CC8638 STR D0, [X8 + 0x20]
	0x03CC863C STR S1, [X8 + 0x28]
	0x03CC8640 LDR X8, [X19 + 0x58]
	0x03CC8644 CBZ X8, 0x3CC8C3C
	0x03CC8648 LDR W9, [X8 + 0x18]
	0x03CC864C CMP W23, W9
	0x03CC8650 B.CS 0x3CC8C38
	0x03CC8654 LDR W9, [X25 + 0x18]
	0x03CC8658 CMP W9, W21
	0x03CC865C B.LS 0x3CC8C38
	0x03CC8660 MOVZ W9, 0x50
	0x03CC8664 MADD X8, X23, X9, X8
	0x03CC8668 LDR X8, [X8 + 0x28]
	0x03CC866C CBZ X8, 0x3CC8C3C
	0x03CC8670 LDR W10, [X8 + 0x18]
	0x03CC8674 ADD W9, W24, 0x1
	0x03CC8678 CMP W9, W10
	0x03CC867C B.CS 0x3CC8C38
	0x03CC8680 MOVZ W10, 0x188
	0x03CC8684 MADD X10, X26, X10, X25
	0x03CC8688 LDR V0, [X10 + 0x78]
	0x03CC868C LDR V1, [X10 + 0x80]
	0x03CC8690 SXTW X9, W9
	0x03CC8694 MOVZ W10, 0xC
	0x03CC8698 MADD X8, X9, X10, X8
	0x03CC869C STR D0, [X8 + 0x20]
	0x03CC86A0 STR S1, [X8 + 0x28]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x720000
	013 Move W8, [X20+876]
	014 Move W21, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x49A000
	021 Move X0, [X0+2888]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+876], W8
	025 Compare X19, 0
	026 JumpIfEqual {77}
	027 Move W8, 0xFFEF
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W20, W31
	031 Move X8, [X19+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X25, 0x49A000
	035 Move X25, [X25+2888]
	036 Add W9, W21, 16
	037 Move X28, 1
	038 Move W20, W31
	039 Move X22, W8
	040 Move X23, W21
	041 Add X24, X19, 32
	042 Move W26, 1
	043 Move X27, W9
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 Move W21, [X24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction LSLV not yet implemented."
	048 And X31, X8, X28
	049 Move X0, [X25]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W0, W21
	055 Call TextGeneratorUtilities.ToUpperASCIIFast, X0
	056 Add W8, W20, W20
	057 Add X23, X23, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Xor W20, W0, W8
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X19+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Call 0x1C17F28
	064 Move W0, W20
	065 Move X20, [X31+80]
	066 Move X19, [X31+88]
	067 Move X22, [X31+64]
	068 Move X21, [X31+72]
	069 Move X24, [X31+48]
	070 Move X23, [X31+56]
	071 Move X26, [X31+32]
	072 Move X25, [X31+40]
	073 Move X28, [X31+16]
	074 Move X27, [X31+24]
	075 Move X30, [X31+96]
	076 Return X0
	077 Call 0x1C17F20

Method: System.Char ToUpperASCIIFast(System.Char c)

Disassembly:
	0x03CC872C MADD X8, X23, X9, X8
	0x03CC8730 LDR X8, [X8 + 0x28]
	0x03CC8734 CBZ X8, 0x3CC8C3C
	0x03CC8738 LDR W10, [X8 + 0x18]
	0x03CC873C ADD W9, W24, 0x3
	0x03CC8740 CMP W9, W10
	0x03CC8744 B.CS 0x3CC8C38
	0x03CC8748 MOVZ W10, 0x188
	0x03CC874C MADD X10, X26, X10, X25
	0x03CC8750 LDR V1, [X10 + 0xF0]
	0x03CC8754 LDR V0, [X10 + 0xF8]
	0x03CC8758 SXTW X9, W9
	0x03CC875C MOVZ W11, 0xC
	0x03CC8760 MADD X8, X9, X11, X8
	0x03CC8764 STR D1, [X8 + 0x20]
	0x03CC8768 STR S0, [X8 + 0x28]!
	0x03CC876C LDR X8, [X19 + 0x58]
	0x03CC8770 CBZ X8, 0x3CC8C3C
	0x03CC8774 LDR W9, [X8 + 0x18]
	0x03CC8778 CMP W23, W9
	0x03CC877C B.CS 0x3CC8C38
	0x03CC8780 LDR W9, [X25 + 0x18]
	0x03CC8784 CMP W9, W21
	0x03CC8788 B.LS 0x3CC8C38
	0x03CC878C MOVZ W9, 0x50
	0x03CC8790 MADD X8, X23, X9, X8
	0x03CC8794 LDR X8, [X8 + 0x40]
	0x03CC8798 CBZ X8, 0x3CC8C3C
	0x03CC879C LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x720000
	006 Move X21, 0x492000
	007 Move W8, [X20+877]
	008 Move X21, [X21+2688]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x492000
	015 Move X0, [X0+2688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+877], W8
	019 Move X0, [X21]
	020 Compare X0, 0
	021 JumpIfEqual {39}
	022 Move W8, [X0+16]
	023 Subtract W8, W8, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 And W1, W19, 0xFFFF
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call String.get_Chars, X0, X1
	038 Return X0
	039 Call 0x1C17F20

Method: System.UInt32 ToUpperASCIIFast(System.UInt32 c)

Disassembly:
	0x03CCA0B8 MOV X0, X19
	0x03CCA0BC BL 0x3CC98D0
	0x03CCA0C0 CBZ X0, 0x3CCA2EC
	0x03CCA0C4 LDR X8, [X0 + 0x48]
	0x03CCA0C8 CBZ X8, 0x3CCA2EC
	0x03CCA0CC LDR W9, [X8 + 0x18]
	0x03CCA0D0 CMP W9, W21
	0x03CCA0D4 B.LS 0x3CCA2F0
	0x03CCA0D8 MOVZ W9, 0x60
	0x03CCA0DC MADD X8, X23, X9, X8
	0x03CCA0E0 LDR W21, [X8 + 0x40]
	0x03CCA0E4 CMP W22, W21
	0x03CCA0E8 B.LE 0x3CCA0F4
	0x03CCA0EC MOV W20, W21
	0x03CCA0F0 B 0x3CCA2B8
	0x03CCA0F4 MOVZ W9, 0x7F800000
	0x03CCA0F8 STR W9, [X31 + 0x30]
	0x03CCA0FC ADRP X25, 0x497000
	0x03CCA100 LDR X25, [X25 + 0xDD8]
	0x03CCA104 LDP S15, S12, [X31 + 0x38]
	0x03CCA108 EOR W8, W20, 0x1
	0x03CCA10C MOVZ W23, 0x188
	0x03CCA110 EOR W24, W8, 0x1
	0x03CCA114 MOV W20, W21
	0x03CCA118 MOV X0, X19
	0x03CCA11C BL 0x3CC98D0
	0x03CCA120 CBZ X0, 0x3CCA2EC
	0x03CCA124 LDR X9, [X0 + 0x30]
	0x03CCA128 CBZ X9, 0x3CCA2EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x71E000
	006 Move X21, 0x490000
	007 Move W8, [X20+878]
	008 Move X21, [X21+2688]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x490000
	015 Move X0, [X0+2688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+878], W8
	019 Move X0, [X21]
	020 Compare X0, 0
	021 JumpIfEqual {36}
	022 Move W8, [X0+16]
	023 Move W9, W19
	024 Subtract W8, W8, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W19, W0, 0xFFFF
	030 Move W0, W19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Char ToUpperFast(System.Char c)

Disassembly:
	0x03CCA12C LDR W8, [X9 + 0x18]
	0x03CCA130 CMP W22, W8
	0x03CCA134 B.CS 0x3CCA2F0
	0x03CCA138 SMADDL X8, X22, X23, X9
	0x03CCA13C LDRB W10, [X8 + 0x1A0]
	0x03CCA140 ANDS W31, W10, 0x1
	0x03CCA144 CSET W10, EQ
	0x03CCA148 AND W10, W10, W24, 0x0
	0x03CCA14C TBNZ X10, 0x0, 0x3CCA2AC
	0x03CCA150 SXTW X10, W22
	0x03CCA154 MADD X9, X10, X23, X9
	0x03CCA158 LDRH W9, [X9 + 0x20]
	0x03CCA15C CMP W9, 0xA
	0x03CCA160 B.EQ 0x3CCA2AC
	0x03CCA164 CMP W9, 0xD
	0x03CCA168 B.EQ 0x3CCA2AC
	0x03CCA16C LDR X0, [X25]
	0x03CCA170 LDR V10, [X8 + 0x124]
	0x03CCA174 LDR V11, [X8 + 0x128]
	0x03CCA178 LDR V8, [X8 + 0x12C]
	0x03CCA17C LDR V13, [X8 + 0x130]
	0x03CCA180 LDR V14, [X8 + 0x134]
	0x03CCA184 LDR W9, [X0 + 0xE0]
	0x03CCA188 LDR V9, [X8 + 0x138]
	0x03CCA18C CBNZ W9, 0x3CCA194
	0x03CCA190 BL 0x1C16DFC
	0x03CCA194 LDP S0, S1, [X31 + 0x38]
	0x03CCA198 FMOV S2, W31
	0x03CCA19C MOV V3.16B, V10.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x71E000
	006 Move X21, 0x490000
	007 Move W8, [X20+879]
	008 Move X21, [X21+2688]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x490000
	015 Move X0, [X0+2688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+879], W8
	019 Move X0, [X21]
	020 Compare X0, 0
	021 JumpIfEqual {39}
	022 Move W8, [X0+16]
	023 Subtract W8, W8, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 And W1, W19, 0xFFFF
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call String.get_Chars, X0, X1
	038 Return X0
	039 Call 0x1C17F20

Method: System.Int32 GetAttributeParameters(System.Char[] chars, System.Int32 startIndex, System.Int32 length, ref System.Single[] parameters)

Disassembly:
	0x03CCA1A0 MOV V4.16B, V11.16B
	0x03CCA1A4 MOV V5.16B, V8.16B
	0x03CCA1A8 STP S14, S9, [X31 + 0x14]
	0x03CCA1AC STR S13, [X31 + 0x10]
	0x03CCA1B0 STR W31, [X31 + 0x8]
	0x03CCA1B4 STP S10, S14, [X31]
	0x03CCA1B8 BL 0x3CCA698
	0x03CCA1BC TBNZ X0, 0x0, 0x3CCA2E4
	0x03CCA1C0 LDR X0, [X25]
	0x03CCA1C4 LDR W8, [X0 + 0xE0]
	0x03CCA1C8 CBNZ W8, 0x3CCA1D0
	0x03CCA1CC BL 0x1C16DFC
	0x03CCA1D0 FMOV S0, W31
	0x03CCA1D4 FMOV S5, W31
	0x03CCA1D8 STR S0, [X31 + 0x8]
	0x03CCA1DC MOV V0.16B, V10.16B
	0x03CCA1E0 MOV V1.16B, V11.16B
	0x03CCA1E4 MOV V2.16B, V8.16B
	0x03CCA1E8 MOV V3.16B, V10.16B
	0x03CCA1EC MOV V4.16B, V14.16B
	0x03CCA1F0 STP S15, S12, [X31]
	0x03CCA1F4 BL 0x3CCA758
	0x03CCA1F8 STR S8, [X31 + 0x34]
	0x03CCA1FC MOV V8.16B, V0.16B
	0x03CCA200 FMOV S0, W31
	0x03CCA204 STP S12, S0, [X31 + 0x4]
	0x03CCA208 FMOV S2, W31
	0x03CCA20C MOV V0.16B, V10.16B
	0x03CCA210 MOV V1.16B, V14.16B
	0x03CCA214 MOV V3.16B, V13.16B
	0x03CCA218 MOV V4.16B, V14.16B
	0x03CCA21C MOV V5.16B, V9.16B
	0x03CCA220 STR S15, [X31]
	0x03CCA224 BL 0x3CCA758
	0x03CCA228 MOV V2.16B, V9.16B
	0x03CCA22C MOV V9.16B, V0.16B
	0x03CCA230 FMOV S0, W31
	0x03CCA234 STP S12, S0, [X31 + 0x4]
	0x03CCA238 FMOV S5, W31
	0x03CCA23C MOV V0.16B, V13.16B
	0x03CCA240 MOV V1.16B, V14.16B
	0x03CCA244 MOV V3.16B, V13.16B
	0x03CCA248 MOV V4.16B, V11.16B
	0x03CCA24C STR S15, [X31]
	0x03CCA250 BL 0x3CCA758
	0x03CCA254 LDR V5, [X31 + 0x34]
	0x03CCA258 MOV V14.16B, V0.16B
	0x03CCA25C FMOV S0, W31
	0x03CCA260 STP S12, S0, [X31 + 0x4]
	0x03CCA264 FMOV S2, W31
	0x03CCA268 MOV V0.16B, V13.16B
	0x03CCA26C MOV V1.16B, V11.16B
	0x03CCA270 MOV V3.16B, V10.16B
	0x03CCA274 MOV V4.16B, V11.16B
	0x03CCA278 STR S15, [X31]
	0x03CCA27C BL 0x3CCA758
	0x03CCA280 FCMP S8, S9

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x71E000
	011 Move W8, [X23+880]
	012 Move X19, X3
	013 Move W22, W2
	014 Move W20, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x498000
	021 Move X0, [X0+2888]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+880], W8
	025 Add W8, W20, W22
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W23, W31
	028 Move [X31+12], W20
	029 Move X24, 0x498000
	030 Move X24, [X24+2888]
	031 Move X0, [X24]
	032 Move X25, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X3, X31, 12
	038 Move X0, X21
	039 Move W1, W20
	040 Move W2, W22
	041 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2, X3
	042 Compare X25, 0
	043 JumpIfEqual {66}
	044 Move W8, [X25+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X8, X25, W23
	047 Move [X8+32], S0
	048 Move W8, [X31+12]
	049 Add W9, W20, W22
	050 Add W23, W23, 1
	051 NotImplemented "Instruction ORN not yet implemented."
	052 Add W20, W8, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W22, W9, W10
	055 Move W0, W23
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Move X25, [X31+24]
	064 Add X31, X31, 80
	065 Return X0
	066 Call 0x1C17F20
	067 Call 0x1C17F28

Method: System.Boolean IsBitmapRendering(UnityEngine.TextCore.LowLevel.GlyphRenderMode glyphRenderMode)

Disassembly:
	0x03CCA284 FCSEL S1, S8, S9, MI
	0x03CCA288 FCMP S1, S14
	0x03CCA28C FCSEL S1, S1, S14, MI
	0x03CCA290 FCMP S1, S0
	0x03CCA294 FCSEL S0, S1, S0, MI
	0x03CCA298 LDR V1, [X31 + 0x30]
	0x03CCA29C FCMP S1, S0
	0x03CCA2A0 B.LE 0x3CCA2AC
	0x03CCA2A4 MOV W20, W22
	0x03CCA2A8 STR S0, [X31 + 0x30]
	0x03CCA2AC ADD W22, W22, 0x1
	0x03CCA2B0 CMP W22, W21
	0x03CCA2B4 B.LE 0x3CCA118
	0x03CCA2B8 MOV W0, W20
	0x03CCA2BC LDP X20, X19, [X31 + 0xB0]
	0x03CCA2C0 LDP X22, X21, [X31 + 0xA0]

ISIL:
	001 Move W8, 0x1016
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 0x101A
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W0, 1
	006 Return X0
	007 Move W8, 0x1015
	008 Move W9, 0x1019
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Or W0, W8, W9
	014 Return X0

Method: System.Boolean IsBaseGlyph(System.UInt32 c)

Disassembly:
	0x03CCA2C4 LDP X24, X23, [X31 + 0x90]
	0x03CCA2C8 LDP X30, X25, [X31 + 0x80]
	0x03CCA2CC LDP D9, D8, [X31 + 0x70]
	0x03CCA2D0 LDP D11, D10, [X31 + 0x60]
	0x03CCA2D4 LDP D13, D12, [X31 + 0x50]
	0x03CCA2D8 LDP D15, D14, [X31 + 0x40]
	0x03CCA2DC ADD X31, X31, 0xC0
	0x03CCA2E0 RET
	0x03CCA2E4 MOV W20, W22
	0x03CCA2E8 B 0x3CCA2B8
	0x03CCA2EC BL 0x1C16F20
	0x03CCA2F0 BL 0x1C16F28
	0x03CCA2F4 STP D11, D10, [X31 - 0x60]!
	0x03CCA2F8 STP D9, D8, [X31 + 0x10]
	0x03CCA2FC STR X30, [X31 + 0x20]
	0x03CCA300 STP X24, X23, [X31 + 0x30]
	0x03CCA304 STP X22, X21, [X31 + 0x40]
	0x03CCA308 STP X20, X19, [X31 + 0x50]
	0x03CCA30C MOV W20, W1
	0x03CCA310 MOV X19, X0
	0x03CCA314 BL 0x3CC98D0
	0x03CCA318 CBZ X0, 0x3CCA4C8
	0x03CCA31C LDR W21, [X0 + 0x10]
	0x03CCA320 MOV X0, X19
	0x03CCA324 BL 0x3CC98D0
	0x03CCA328 CBZ X0, 0x3CCA4C8
	0x03CCA32C CMP W21, W20
	0x03CCA330 B.LE 0x3CCA48C
	0x03CCA334 LDR X8, [X0 + 0x30]
	0x03CCA338 CBZ X8, 0x3CCA4C8
	0x03CCA33C LDR W9, [X8 + 0x18]
	0x03CCA340 CMP W9, W20
	0x03CCA344 B.LS 0x3CCA4CC
	0x03CCA348 MOVZ W9, 0x188
	0x03CCA34C SMADDL X8, X20, X9, X8
	0x03CCA350 LDR W20, [X8 + 0x6C]
	0x03CCA354 LDR V8, [X8 + 0x148]
	0x03CCA358 MOV X0, X19
	0x03CCA35C BL 0x3CC98D0
	0x03CCA360 CBZ X0, 0x3CCA4C8
	0x03CCA364 LDR W22, [X0 + 0x24]
	0x03CCA368 MOV X0, X19
	0x03CCA36C BL 0x3CC98D0
	0x03CCA370 CBZ X0, 0x3CCA4C8
	0x03CCA374 ADD W21, W20, 0x1
	0x03CCA378 CMP W21, W22
	0x03CCA37C B.GE 0x3CCA48C
	0x03CCA380 LDR X8, [X0 + 0x48]
	0x03CCA384 CBZ X8, 0x3CCA4C8
	0x03CCA388 LDR W9, [X8 + 0x18]
	0x03CCA38C CMP W21, W9
	0x03CCA390 B.CS 0x3CCA4CC
	0x03CCA394 SXTW X22, W21
	0x03CCA398 MOVZ W9, 0x60
	0x03CCA39C MADD X8, X22, X9, X8
	0x03CCA3A0 LDR W20, [X8 + 0x40]
	0x03CCA3A4 MOV X0, X19
	0x03CCA3A8 BL 0x3CC98D0
	0x03CCA3AC CBZ X0, 0x3CCA4C8
	0x03CCA3B0 LDR X8, [X0 + 0x48]
	0x03CCA3B4 CBZ X8, 0x3CCA4C8
	0x03CCA3B8 LDR W9, [X8 + 0x18]
	0x03CCA3BC CMP W21, W9
	0x03CCA3C0 B.CS 0x3CCA4CC
	0x03CCA3C4 MOVZ W9, 0x60
	0x03CCA3C8 MADD X8, X22, X9, X8
	0x03CCA3CC LDR W21, [X8 + 0x38]
	0x03CCA3D0 CMP W21, W20
	0x03CCA3D4 B.GE 0x3CCA494
	0x03CCA3D8 SXTW X9, W21
	0x03CCA3DC MOVZ W10, 0x188
	0x03CCA3E0 SXTW X8, W20
	0x03CCA3E4 MOVZ W11, 0x7F800000
	0x03CCA3E8 MUL X10, X9, X10

ISIL:
	001 Move TEMP, 0x20CF
	002 Not TEMP
	003 Move W8, TEMP
	004 Add W8, W0, W8
	005 NotImplemented "Instruction CMP not yet implemented."
	006 And W8, W0, 0xFFFFFFC0
	007 Move W9, 0x1DC0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Subtract W8, W0, 768
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move TEMP, 0x1AAF
	012 Not TEMP
	013 Move W8, TEMP
	014 Add W8, W0, W8
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 And W8, W0, 0xFFFFFFF0
	018 Move W9, 0xFE20
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Subtract W8, W0, 3636
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, 1
	023 NotImplemented "Instruction LSLV not yet implemented."
	024 Move W9, 127
	025 NotImplemented "Instruction MOVK not yet implemented."
	026 And W31, W8, W9
	027 Move W0, W31
	028 Return X0
	029 Subtract W8, W0, 1425
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract W8, W0, 1471
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W9, 1
	034 NotImplemented "Instruction LSLV not yet implemented."
	035 Move W9, 365
	036 And W31, W8, W9
	037 Subtract W8, W0, 1552
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract W8, W0, 2275
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract W8, W0, 2259
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract W8, W0, 1770
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract W8, W0, 1767
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract W8, W0, 1759
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract W8, W0, 1750
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract W8, W0, 1611
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move TEMP, 0xFBB1
	055 Not TEMP
	056 Move W8, TEMP
	057 Add W8, W0, W8
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Return X0

Method: UnityEngine.Color MinAlpha(UnityEngine.Color c1, UnityEngine.Color c2)

Disassembly:
	0x03CCA3EC FMOV S9, W31
	0x03CCA3F0 MOVN W22, 0x0
	0x03CCA3F4 SUB X23, X8, X9

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction FCSEL not yet implemented."
	003 Return X0

Method: UnityEngine.Color32 GammaToLinear(UnityEngine.Color32 c)

Disassembly:
	0x03CC9304 B.EQ 0x3CC933C
	0x03CC9308 AND W8, W0, 0xFFFFFFF0
	0x03CC930C MOVZ W9, 0xFE20
	0x03CC9310 CMP W8, W9
	0x03CC9314 B.EQ 0x3CC933C
	0x03CC9318 SUB W8, W0, 0xE34
	0x03CC931C CMP W8, 0x1A
	0x03CC9320 B.HI 0x3CC9344
	0x03CC9324 MOVZ W9, 0x1
	0x03CC9328 LSLV W8, W9, W8
	0x03CC932C MOVZ W9, 0x7F
	0x03CC9330 MOVK W9, 0x7F80000
	0x03CC9334 ANDS W31, W8, W9, 0x0
	0x03CC9338 B.EQ 0x3CC9344
	0x03CC933C MOV W0, W31
	0x03CC9340 RET
	0x03CC9344 SUB W8, W0, 0x591
	0x03CC9348 CMP W8, 0x2D
	0x03CC934C B.CC 0x3CC933C
	0x03CC9350 SUB W8, W0, 0x5BF
	0x03CC9354 CMP W8, 0x8
	0x03CC9358 B.HI 0x3CC9370
	0x03CC935C MOVZ W9, 0x1
	0x03CC9360 LSLV W8, W9, W8
	0x03CC9364 MOVZ W9, 0x16D
	0x03CC9368 ANDS W31, W8, W9, 0x0
	0x03CC936C B.NE 0x3CC933C
	0x03CC9370 SUB W8, W0, 0x610
	0x03CC9374 CMP W8, 0xB
	0x03CC9378 B.CC 0x3CC933C
	0x03CC937C SUB W8, W0, 0x8E3
	0x03CC9380 CMP W8, 0x1D
	0x03CC9384 B.CC 0x3CC933C
	0x03CC9388 SUB W8, W0, 0x8D3
	0x03CC938C CMP W8, 0xF
	0x03CC9390 B.CC 0x3CC933C
	0x03CC9394 SUB W8, W0, 0x6EA
	0x03CC9398 CMP W8, 0x4
	0x03CC939C B.CC 0x3CC933C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x71F000
	007 Move X21, 0x499000
	008 Move W8, [X20+881]
	009 Move X21, [X21+2888]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x499000
	016 Move X0, [X0+2888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+881], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, X19
	027 ShiftRight X20, 16
	028 And X20, X20, 0x7FFFFFFF
	029 Move X21, X19
	030 ShiftRight X21, 8
	031 And X21, X21, 0x7FFFFFFF
	032 Call TextGeneratorUtilities.GammaToLinear, X0
	033 Move W22, W0
	034 Move W0, W21
	035 Call TextGeneratorUtilities.GammaToLinear, X0
	036 Move W21, W0
	037 Move W0, W20
	038 Call TextGeneratorUtilities.GammaToLinear, X0
	039 And X8, X19, 0xFFFFFFFF
	040 And X10, X21, 255
	041 NotImplemented "Instruction BFM not yet implemented."
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 And X9, X0, 255
	047 NotImplemented "Instruction BFM not yet implemented."
	048 NotImplemented "Instruction BFM not yet implemented."
	049 Move X0, X8
	050 Move X30, [X31+48]
	051 Return X0

Method: System.Byte GammaToLinear(System.Byte value)

Disassembly:
	0x03CCA3F8 FMOV S10, W11
	0x03CCA3FC ADD X24, X10, 0x148
	0x03CCA400 FMOV S11, 1
	0x03CCA404 MOV X0, X19
	0x03CCA408 BL 0x3CC98D0
	0x03CCA40C CBZ X0, 0x3CCA4C8
	0x03CCA410 LDR X8, [X0 + 0x30]
	0x03CCA414 CBZ X8, 0x3CCA4C8
	0x03CCA418 LDR W9, [X8 + 0x18]
	0x03CCA41C CMP W21, W9
	0x03CCA420 B.CS 0x3CCA4CC
	0x03CCA424 ADD X8, X8, X24
	0x03CCA428 LDR V0, [X8]
	0x03CCA42C LDR V2, [X8 + 0x1C]
	0x03CCA430 FSUB S1, S8, S0
	0x03CCA434 FSUB S0, S2, S0
	0x03CCA438 FDIV S0, S1, S0
	0x03CCA43C FCMP S0, 0x0
	0x03CCA440 B.LT 0x3CCA44C
	0x03CCA444 FCMP S0, S11
	0x03CCA448 B.LS 0x3CCA4B4
	0x03CCA44C FABS S1, S1
	0x03CCA450 FCMP S1, S10
	0x03CCA454 FCSEL S9, S0, S9, MI
	0x03CCA458 FCSEL S10, S1, S10, MI
	0x03CCA45C CSEL W22, W21, W22, MI
	0x03CCA460 ADD W21, W21, 0x1
	0x03CCA464 SUBS X23, X23, 0x1
	0x03CCA468 ADD X24, X24, 0x188
	0x03CCA46C B.NE 0x3CCA404
	0x03CCA470 ADDS W31, W22, 0x1
	0x03CCA474 B.EQ 0x3CCA494
	0x03CCA478 FMOV S0, 0.5
	0x03CCA47C FCMP S9, S0
	0x03CCA480 CSET W8, PL
	0x03CCA484 ADD W20, W22, W8
	0x03CCA488 B 0x3CCA494
	0x03CCA48C LDR W8, [X0 + 0x10]
	0x03CCA490 SUB W20, W8, 0x1
	0x03CCA494 MOV W0, W20
	0x03CCA498 LDP X20, X19, [X31 + 0x50]
	0x03CCA49C LDP X22, X21, [X31 + 0x40]
	0x03CCA4A0 LDP X24, X23, [X31 + 0x30]
	0x03CCA4A4 LDR X30, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X9, -52293632
	003 Move V1, [X9+736]
	004 And W8, W0, 255
	005 Move W9, 0x437F0000
	006 NotImplemented "Instruction UCVTF not yet implemented."
	007 Move S2, W9
	008 NotImplemented "Instruction FDIV not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move S1, 1
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move X8, -52293632
	013 Move V1, [X8+612]
	014 Move X8, -52293632
	015 Move V2, [X8+500]
	016 Move X8, -52293632
	017 Add S0, S0, S1
	018 Move V1, [X8+944]
	019 NotImplemented "Instruction FDIV not yet implemented."
	020 Move X8, -52297728
	021 Move V1, [X8+4000]
	022 Move W8, 0x437F0000
	023 NotImplemented "Instruction FDIV not yet implemented."
	024 Move S1, W8
	025 Multiply S0, S0, S1
	026 NotImplemented "Instruction FCVTZS not yet implemented."
	027 Move X8, -52293632
	028 Move V1, [X8+876]
	029 Call 0x3EB2B50
	030 Move W8, 0x437F0000
	031 Move S1, W8
	032 Multiply S0, S0, S1
	033 NotImplemented "Instruction FCVTZS not yet implemented."
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move W0, 255
	037 Move X30, [X31+16]
	038 Return X0

Method: System.Boolean IsValidUTF16(UnityEngine.TextCore.Text.TextBackingContainer text, System.Int32 index)

Disassembly:
	0x03CCA4A8 LDP D9, D8, [X31 + 0x10]
	0x03CCA4AC LDP D11, D10, [X31], #0x60
	0x03CCA4B0 RET
	0x03CCA4B4 FMOV S1, 0.5
	0x03CCA4B8 FCMP S0, S1
	0x03CCA4BC CSET W8, PL
	0x03CCA4C0 ADD W0, W8, W21
	0x03CCA4C4 B 0x3CCA498
	0x03CCA4C8 BL 0x1C16F20
	0x03CCA4CC BL 0x1C16F28
	0x03CCA4D0 STP D11, D10, [X31 - 0x60]!
	0x03CCA4D4 STP D9, D8, [X31 + 0x10]
	0x03CCA4D8 STR X30, [X31 + 0x20]
	0x03CCA4DC STP X24, X23, [X31 + 0x30]
	0x03CCA4E0 STP X22, X21, [X31 + 0x40]
	0x03CCA4E4 STP X20, X19, [X31 + 0x50]
	0x03CCA4E8 MOV W20, W1
	0x03CCA4EC MOV X19, X0
	0x03CCA4F0 BL 0x3CC98D0
	0x03CCA4F4 CBZ X0, 0x3CCA690
	0x03CCA4F8 LDR W8, [X0 + 0x10]
	0x03CCA4FC MOV X0, X19
	0x03CCA500 CMP W8, W20
	0x03CCA504 CSET W21, LE
	0x03CCA508 BL 0x3CC98D0
	0x03CCA50C CBZ X0, 0x3CCA690
	0x03CCA510 LDR X8, [X0 + 0x30]
	0x03CCA514 CBZ X8, 0x3CCA690
	0x03CCA518 LDR W10, [X8 + 0x18]
	0x03CCA51C SUB W9, W20, W21
	0x03CCA520 CMP W9, W10
	0x03CCA524 B.CS 0x3CCA694
	0x03CCA528 MOVZ W10, 0x188
	0x03CCA52C SMADDL X8, X9, X10, X8
	0x03CCA530 LDRSW X21, [X8 + 0x6C]
	0x03CCA534 SUBS W20, W21, 0x1
	0x03CCA538 B.MI 0x3CCA658
	0x03CCA53C LDR V8, [X8 + 0x148]
	0x03CCA540 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31], X0
	007 Move [X31+8], X1
	008 Add X0, X31, 0
	009 Move W1, W2
	010 Move W19, W2
	011 Call TextBackingContainer.get_Item, X0, X1
	012 And W8, W0, 0xFFFFFFDF
	013 Subtract W8, W8, 65
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Subtract W8, W0, 48
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W0, W31
	018 Move W20, W31
	019 Add W19, W19, 1
	020 Move W21, W20
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add W1, W19, W21
	023 Add X0, X31, 0
	024 Add W20, W21, 1
	025 Call TextBackingContainer.get_Item, X0, X1
	026 And W8, W0, 0xFFFFFFDF
	027 Subtract W8, W8, 65
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract W8, W0, 48
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Add X31, X31, 48
	038 Return X0

Method: System.Boolean IsValidUTF32(UnityEngine.TextCore.Text.TextBackingContainer text, System.Int32 index)

Disassembly:
	0x03CCA544 BL 0x3CC98D0
	0x03CCA548 CBZ X0, 0x3CCA690
	0x03CCA54C LDR X8, [X0 + 0x48]
	0x03CCA550 CBZ X8, 0x3CCA690
	0x03CCA554 LDR W9, [X8 + 0x18]
	0x03CCA558 CMP W21, W9
	0x03CCA55C B.CS 0x3CCA694
	0x03CCA560 MOVZ W9, 0x60
	0x03CCA564 MADD X8, X21, X9, X8
	0x03CCA568 LDR W22, [X8 + 0x38]
	0x03CCA56C MOV X0, X19
	0x03CCA570 BL 0x3CC98D0
	0x03CCA574 CBZ X0, 0x3CCA690
	0x03CCA578 LDR X8, [X0 + 0x48]
	0x03CCA57C CBZ X8, 0x3CCA690
	0x03CCA580 LDR W9, [X8 + 0x18]
	0x03CCA584 CMP W20, W9
	0x03CCA588 B.CS 0x3CCA694
	0x03CCA58C MOVZ W9, 0x60
	0x03CCA590 UMADDL X8, X20, X9, X8
	0x03CCA594 LDR W21, [X8 + 0x38]
	0x03CCA598 SUB W20, W22, 0x1
	0x03CCA59C CMP W21, W20
	0x03CCA5A0 B.GE 0x3CCA65C
	0x03CCA5A4 SXTW X8, W21
	0x03CCA5A8 MOVZ W10, 0x188
	0x03CCA5AC SXTW X9, W20
	0x03CCA5B0 MOVZ W11, 0x7F800000
	0x03CCA5B4 MUL X10, X8, X10
	0x03CCA5B8 FMOV S9, W31
	0x03CCA5BC MOVN W22, 0x0
	0x03CCA5C0 SUB X23, X9, X8
	0x03CCA5C4 FMOV S10, W11
	0x03CCA5C8 ADD X24, X10, 0x148
	0x03CCA5CC FMOV S11, 1
	0x03CCA5D0 MOV X0, X19
	0x03CCA5D4 BL 0x3CC98D0
	0x03CCA5D8 CBZ X0, 0x3CCA690
	0x03CCA5DC LDR X8, [X0 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31], X0
	007 Move [X31+8], X1
	008 Add X0, X31, 0
	009 Move W1, W2
	010 Move W19, W2
	011 Call TextBackingContainer.get_Item, X0, X1
	012 And W8, W0, 0xFFFFFFDF
	013 Subtract W8, W8, 65
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Subtract W8, W0, 48
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W0, W31
	018 Move W20, W31
	019 Add W19, W19, 1
	020 Move W21, W20
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add W1, W19, W21
	023 Add X0, X31, 0
	024 Add W20, W21, 1
	025 Call TextBackingContainer.get_Item, X0, X1
	026 And W8, W0, 0xFFFFFFDF
	027 Subtract W8, W8, 65
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract W8, W0, 48
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Add X31, X31, 48
	038 Return X0

Method: System.Boolean IsHangul(System.UInt32 c)

Disassembly:
	0x03CCA5E0 CBZ X8, 0x3CCA690
	0x03CCA5E4 LDR W9, [X8 + 0x18]
	0x03CCA5E8 CMP W21, W9
	0x03CCA5EC B.CS 0x3CCA694
	0x03CCA5F0 ADD X8, X8, X24
	0x03CCA5F4 LDR V0, [X8]
	0x03CCA5F8 LDR V2, [X8 + 0x1C]
	0x03CCA5FC FSUB S1, S8, S0
	0x03CCA600 FSUB S0, S2, S0
	0x03CCA604 FDIV S0, S1, S0
	0x03CCA608 FCMP S0, 0x0
	0x03CCA60C B.LT 0x3CCA618
	0x03CCA610 FCMP S0, S11
	0x03CCA614 B.LS 0x3CCA67C
	0x03CCA618 FABS S1, S1
	0x03CCA61C FCMP S1, S10
	0x03CCA620 FCSEL S9, S0, S9, MI
	0x03CCA624 FCSEL S10, S1, S10, MI
	0x03CCA628 CSEL W22, W21, W22, MI
	0x03CCA62C ADD W21, W21, 0x1
	0x03CCA630 SUBS X23, X23, 0x1
	0x03CCA634 ADD X24, X24, 0x188
	0x03CCA638 B.NE 0x3CCA5D0
	0x03CCA63C ADDS W31, W22, 0x1
	0x03CCA640 B.EQ 0x3CCA65C
	0x03CCA644 FMOV S0, 0.5
	0x03CCA648 FCMP S9, S0
	0x03CCA64C CSET W8, PL

ISIL:
	001 Move TEMP, 0xFF9F
	002 Not TEMP
	003 Move W8, TEMP
	004 Add W8, W0, W8
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move TEMP, 0x312F
	007 Not TEMP
	008 Move W8, TEMP
	009 Add W8, W0, W8
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move TEMP, 0xD7AF
	012 Not TEMP
	013 Move W8, TEMP
	014 Add W8, W0, W8
	015 NotImplemented "Instruction CMP not yet implemented."
	016 And W8, W0, 0xFFFFFF00
	017 Move W9, 0x1100
	018 NotImplemented "Instruction CMP not yet implemented."
	019 And W8, W0, 0xFFFFFFE0
	020 Move W9, 0xA960
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move TEMP, 0xABFF
	023 Not TEMP
	024 Move W8, TEMP
	025 Add W8, W0, W8
	026 Move W8, W8
	027 ShiftRight W8, 4
	028 And W8, W8, 0x7FFFFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Return X0
	032 Move W0, 1
	033 Return X0

Method: System.Boolean IsCJK(System.UInt32 c)

Disassembly:
	0x03CCA650 ADD W20, W22, W8
	0x03CCA654 B 0x3CCA65C
	0x03CCA658 MOV W20, W31
	0x03CCA65C MOV W0, W20
	0x03CCA660 LDP X20, X19, [X31 + 0x50]
	0x03CCA664 LDP X22, X21, [X31 + 0x40]
	0x03CCA668 LDP X24, X23, [X31 + 0x30]
	0x03CCA66C LDR X30, [X31 + 0x20]
	0x03CCA670 LDP D9, D8, [X31 + 0x10]
	0x03CCA674 LDP D11, D10, [X31], #0x60
	0x03CCA678 RET
	0x03CCA67C FMOV S1, 0.5
	0x03CCA680 FCMP S0, S1
	0x03CCA684 CSET W8, PL
	0x03CCA688 ADD W0, W8, W21
	0x03CCA68C B 0x3CCA660
	0x03CCA690 BL 0x1C16F20
	0x03CCA694 BL 0x1C16F28
	0x03CCA698 LDP S7, S6, [X31 + 0x4]
	0x03CCA69C LDR V16, [X31]
	0x03CCA6A0 FSUB S19, S0, S3
	0x03CCA6A4 FSUB S20, S1, S4
	0x03CCA6A8 FSUB S17, S7, S4
	0x03CCA6AC FSUB S18, S16, S3
	0x03CCA6B0 FSUB S21, S2, S5
	0x03CCA6B4 FSUB S4, S6, S5
	0x03CCA6B8 FMUL S3, S19, S18
	0x03CCA6BC FMUL S5, S20, S17
	0x03CCA6C0 FADD S3, S3, S5
	0x03CCA6C4 FMUL S5, S21, S4
	0x03CCA6C8 FADD S3, S5, S3
	0x03CCA6CC FCMP S3, 0x0
	0x03CCA6D0 B.GE 0x3CCA6DC
	0x03CCA6D4 MOV W0, W31
	0x03CCA6D8 RET
	0x03CCA6DC FMUL S5, S18, S18
	0x03CCA6E0 FMUL S17, S17, S17
	0x03CCA6E4 FADD S5, S5, S17
	0x03CCA6E8 FMUL S4, S4, S4
	0x03CCA6EC FADD S4, S4, S5
	0x03CCA6F0 FCMP S3, S4
	0x03CCA6F4 MOV W0, W31
	0x03CCA6F8 B.HI 0x3CCA754
	0x03CCA6FC LDP S5, S4, [X31 + 0x14]
	0x03CCA700 LDR V3, [X31 + 0x10]
	0x03CCA704 FSUB S17, S0, S16
	0x03CCA708 FSUB S18, S1, S7
	0x03CCA70C FSUB S1, S5, S7
	0x03CCA710 FSUB S3, S3, S16
	0x03CCA714 FSUB S2, S2, S6
	0x03CCA718 FSUB S0, S4, S6
	0x03CCA71C FMUL S4, S17, S3
	0x03CCA720 FMUL S5, S18, S1
	0x03CCA724 FADD S4, S4, S5
	0x03CCA728 FMUL S2, S2, S0
	0x03CCA72C FADD S2, S2, S4
	0x03CCA730 FCMP S2, 0x0
	0x03CCA734 B.LT 0x3CCA754
	0x03CCA738 FMUL S3, S3, S3
	0x03CCA73C FMUL S1, S1, S1
	0x03CCA740 FADD S1, S3, S1
	0x03CCA744 FMUL S0, S0, S0
	0x03CCA748 FADD S0, S0, S1
	0x03CCA74C FCMP S2, S0
	0x03CCA750 CSET W0, LS
	0x03CCA754 RET
	0x03CCA758 LDP S19, S18, [X31 + 0x4]
	0x03CCA75C LDR V20, [X31]
	0x03CCA760 FSUB S7, S3, S0
	0x03CCA764 FSUB S16, S4, S1
	0x03CCA768 FSUB S1, S1, S19
	0x03CCA76C FSUB S6, S0, S20
	0x03CCA770 FSUB S17, S5, S2
	0x03CCA774 FSUB S0, S2, S18
	0x03CCA778 FMUL S2, S7, S6
	0x03CCA77C FMUL S21, S16, S1
	0x03CCA780 FADD S2, S2, S21
	0x03CCA784 FMUL S21, S17, S0
	0x03CCA788 FADD S2, S21, S2
	0x03CCA78C FCMP S2, 0x0
	0x03CCA790 B.LE 0x3CCA79C
	0x03CCA794 FMUL S2, S6, S6
	0x03CCA798 B 0x3CCA80C
	0x03CCA79C FSUB S20, S20, S3
	0x03CCA7A0 FSUB S4, S19, S4
	0x03CCA7A4 FSUB S3, S18, S5
	0x03CCA7A8 FMUL S5, S7, S20
	0x03CCA7AC FMUL S18, S16, S4
	0x03CCA7B0 FADD S5, S5, S18
	0x03CCA7B4 FMUL S18, S17, S3
	0x03CCA7B8 FADD S5, S18, S5
	0x03CCA7BC FCMP S5, 0x0
	0x03CCA7C0 B.LE 0x3CCA7D8
	0x03CCA7C4 FMUL S0, S20, S20
	0x03CCA7C8 FMUL S1, S4, S4
	0x03CCA7CC FADD S1, S0, S1
	0x03CCA7D0 FMUL S0, S3, S3
	0x03CCA7D4 B 0x3CCA818
	0x03CCA7D8 FMUL S3, S7, S7
	0x03CCA7DC FMUL S4, S16, S16
	0x03CCA7E0 FADD S3, S3, S4
	0x03CCA7E4 FMUL S4, S17, S17
	0x03CCA7E8 FADD S3, S4, S3
	0x03CCA7EC FDIV S2, S2, S3
	0x03CCA7F0 FMUL S3, S7, S2
	0x03CCA7F4 FMUL S4, S16, S2
	0x03CCA7F8 FMUL S2, S17, S2
	0x03CCA7FC FSUB S3, S6, S3
	0x03CCA800 FSUB S1, S1, S4
	0x03CCA804 FSUB S0, S0, S2

ISIL:
	001 And W8, W0, 0xFFFFFFF0
	002 Move W9, 0x31F0
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W9, 0x3190
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W9, 0xAFF0
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 And W10, W0, 0xFFFFFF00
	009 Add W11, W9, 16
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W9, 0x4ED0
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 Add W9, W0, W9
	015 Add W10, W9, 48
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move TEMP, 0x303F
	018 Not TEMP
	019 Move W10, TEMP
	020 Add W10, W0, W10
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move TEMP, 0x31BF
	023 Not TEMP
	024 Move W10, TEMP
	025 Add W10, W0, W10
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move TEMP, 0x2EFF
	028 Not TEMP
	029 Move W10, TEMP
	030 Add W10, W0, W10
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract W10, W0, 0x30000
	033 Add W11, W10, 2048
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move TEMP, 0xF8FF
	036 Not TEMP
	037 Move W11, TEMP
	038 Add W11, W0, W11
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W11, 0x134B
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W10, 0x3150
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 Add W10, W0, W10
	045 Move W11, 0x1D31
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W10, 0x47E0
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 Add W10, W0, W10
	050 Move W11, W10
	051 ShiftRight W11, 4
	052 And W11, W11, 0x7FFFFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W10, W10, 224
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W10, 0x5900
	057 NotImplemented "Instruction MOVK not yet implemented."
	058 Add W10, W0, W10
	059 Move W10, W10
	060 ShiftRight W10, 6
	061 And W10, W10, 0x7FFFFFFF
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract W10, W0, 0x20000
	064 Move W10, W10
	065 ShiftRight W10, 5
	066 And W10, W10, 0x7FFFFFFF
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move TEMP, 0x33FF
	069 Not TEMP
	070 Move W10, TEMP
	071 Add W10, W0, W10
	072 Move W10, W10
	073 ShiftRight W10, 6
	074 And W10, W10, 0x7FFFFFFF
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move TEMP, 0x4DFF
	077 Not TEMP
	078 Move W10, TEMP
	079 Add W10, W0, W10
	080 Move W10, W10
	081 ShiftRight W10, 9
	082 And W10, W10, 0x7FFFFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 And W10, W0, 0xFFFFFFE0
	085 Move W11, 0x31A0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 And W10, W0, 0xFFFFFFC0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move TEMP, 0x30FF
	090 Not TEMP
	091 Move W10, TEMP
	092 Add W10, W0, W10
	093 NotImplemented "Instruction CMP not yet implemented."
	094 And W10, W0, 0xFFFFFF80
	095 Move W11, 0x2E80
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W10, 0x2FF0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move TEMP, 0x309F
	101 Not TEMP
	102 Move W8, TEMP
	103 Add W8, W0, W8
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move TEMP, 0xFF64
	106 Not TEMP
	107 Move W8, TEMP
	108 Add W8, W0, W8
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CSET not yet implemented."
	111 Return X0
	112 Move W0, 1
	113 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03CCA808 FMUL S2, S3, S3
	0x03CCA80C FMUL S1, S1, S1
	0x03CCA810 FADD S1, S2, S1
	0x03CCA814 FMUL S0, S0, S0
	0x03CCA818 FADD S0, S0, S1
	0x03CCA81C RET
	0x03CCA820 SUB X31, X31, 0xE0
	0x03CCA824 STP D15, D14, [X31 + 0x40]
	0x03CCA828 STP D13, D12, [X31 + 0x50]
	0x03CCA82C STP D11, D10, [X31 + 0x60]
	0x03CCA830 STP D9, D8, [X31 + 0x70]
	0x03CCA834 STP X29, X30, [X31 + 0x80]
	0x03CCA838 STP X28, X27, [X31 + 0x90]
	0x03CCA83C STP X26, X25, [X31 + 0xA0]
	0x03CCA840 STP X24, X23, [X31 + 0xB0]
	0x03CCA844 STP X22, X21, [X31 + 0xC0]
	0x03CCA848 STP X20, X19, [X31 + 0xD0]
	0x03CCA84C ADRP X21, 0x71D000
	0x03CCA850 LDRB W8, [X21 + 0x377]
	0x03CCA854 MOV W20, W1
	0x03CCA858 MOV V9.16B, V1.16B
	0x03CCA85C MOV X19, X0
	0x03CCA860 STP S0, S2, [X31 + 0x38]
	0x03CCA864 TBNZ X8, 0x0, 0x3CCA87C
	0x03CCA868 ADRP X0, 0x497000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x71E000
	005 Move X19, 0x498000
	006 Move W8, [X20+882]
	007 Move X19, [X19+2888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x498000
	013 Move X0, [X0+2888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+882], W8
	017 Move X8, [X19]
	018 NotImplemented "Instruction MOVI not yet implemented."
	019 Move W9, 0xCCCD
	020 NotImplemented "Instruction MOVK not yet implemented."
	021 Move X8, [X8+184]
	022 Move [X8], D0
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	027 Move X8, [X8+184]
	028 Move [X8+8], D0
	029 Move X30, [X31+32]
	030 Return 

