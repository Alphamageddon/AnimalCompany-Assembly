Type: UnityEngine.TextCore.Text.TextInfo

Method: System.Void .ctor()

Disassembly:
	0x03CCA930 LDR V12, [X8]
	0x03CCA934 MOV V11.16B, V8.16B
	0x03CCA938 MOV V14.16B, V13.16B
	0x03CCA93C MOV X0, X19
	0x03CCA940 BL 0x3CC98D0
	0x03CCA944 CBZ X0, 0x3CCAAA4
	0x03CCA948 LDR X8, [X0 + 0x30]
	0x03CCA94C CBZ X8, 0x3CCAAA4
	0x03CCA950 LDR W9, [X8 + 0x18]
	0x03CCA954 CMP X28, X9
	0x03CCA958 B.CS 0x3CCAAE0
	0x03CCA95C SBFM X9, X23, 0x20, 0x3F
	0x03CCA960 MADD X8, X9, X26, X8
	0x03CCA964 LDR W22, [X8 + 0x6C]
	0x03CCA968 LDR V10, [X8 + 0x130]
	0x03CCA96C LDR V15, [X8 + 0x14C]
	0x03CCA970 TBNZ X24, 0x0, 0x3CCA9E4
	0x03CCA974 LDR V12, [X8 + 0x124]
	0x03CCA978 LDR V8, [X8 + 0x154]
	0x03CCA97C CMP W21, 0x1
	0x03CCA980 FMOV S14, W31
	0x03CCA984 B.NE 0x3CCA9DC
	0x03CCA988 ADRP X8, 0x497000
	0x03CCA98C LDR X8, [X8 + 0xDD8]
	0x03CCA990 LDR X0, [X8]
	0x03CCA994 LDR W8, [X0 + 0xE0]
	0x03CCA998 CBNZ W8, 0x3CCA9A0
	0x03CCA99C BL 0x1C16DFC
	0x03CCA9A0 LDP S0, S2, [X31 + 0x38]
	0x03CCA9A4 FMOV S5, W31
	0x03CCA9A8 MOV V1.16B, V9.16B
	0x03CCA9AC MOV V3.16B, V12.16B
	0x03CCA9B0 MOV V4.16B, V8.16B
	0x03CCA9B4 STR W31, [X31 + 0x18]
	0x03CCA9B8 STP S10, S15, [X31 + 0x10]
	0x03CCA9BC STR W31, [X31 + 0x8]
	0x03CCA9C0 STP S12, S15, [X31]
	0x03CCA9C4 FMOV S14, W31
	0x03CCA9C8 BL 0x3CCA698
	0x03CCA9CC MOV W24, W31
	0x03CCA9D0 FMOV S13, W31
	0x03CCA9D4 TBZ X0, 0x0, 0x3CCAA7C
	0x03CCA9D8 B 0x3CCAAAC
	0x03CCA9DC MOV V11.16B, V15.16B
	0x03CCA9E0 FMOV S13, W31
	0x03CCA9E4 CBZ X25, 0x3CCAA30
	0x03CCA9E8 MOV X0, X19
	0x03CCA9EC BL 0x3CC98D0
	0x03CCA9F0 CBZ X0, 0x3CCAAA4
	0x03CCA9F4 LDR X8, [X0 + 0x30]
	0x03CCA9F8 CBZ X8, 0x3CCAAA4
	0x03CCA9FC LDR W9, [X8 + 0x18]
	0x03CCAA00 ADD X10, X28, 0x1
	0x03CCAA04 CMP X10, X9
	0x03CCAA08 B.CS 0x3CCAAE0
	0x03CCAA0C ADD X9, X23, X27
	0x03CCAA10 SBFM X9, X9, 0x20, 0x3F
	0x03CCAA14 MADD X8, X9, X26, X8
	0x03CCAA18 LDR W8, [X8 + 0x6C]
	0x03CCAA1C CMP W22, W8
	0x03CCAA20 B.NE 0x3CCAA30
	0x03CCAA24 MOVZ W24, 0x1
	0x03CCAA28 MOV V15.16B, V11.16B
	0x03CCAA2C B 0x3CCAA7C
	0x03CCAA30 ADRP X8, 0x497000
	0x03CCAA34 LDR X8, [X8 + 0xDD8]
	0x03CCAA38 LDR X0, [X8]
	0x03CCAA3C LDR W8, [X0 + 0xE0]
	0x03CCAA40 CBNZ W8, 0x3CCAA48
	0x03CCAA44 BL 0x1C16DFC
	0x03CCAA48 LDP S0, S2, [X31 + 0x38]
	0x03CCAA4C MOV V1.16B, V9.16B
	0x03CCAA50 MOV V3.16B, V12.16B
	0x03CCAA54 MOV V4.16B, V8.16B
	0x03CCAA58 MOV V5.16B, V13.16B
	0x03CCAA5C STR W31, [X31 + 0x18]
	0x03CCAA60 STP S10, S15, [X31 + 0x10]
	0x03CCAA64 STP S11, S14, [X31 + 0x4]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x71E000
	011 Move X25, 0x498000
	012 Move X24, 0x498000
	013 Move X23, 0x498000
	014 Move X22, 0x498000
	015 Move X21, 0x498000
	016 Move X20, 0x498000
	017 Move X25, [X25+3480]
	018 Move W8, [X26+891]
	019 Move X24, [X24+3512]
	020 Move X23, [X23+3504]
	021 Move X22, [X22+3520]
	022 Move X21, [X21+3528]
	023 Move X20, [X20+3536]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x498000
	030 Move X0, [X0+3504]
	031 Call 0x1C17CF4
	032 Move X0, 0x498000
	033 Move X0, [X0+3528]
	034 Call 0x1C17CF4
	035 Move X0, 0x498000
	036 Move X0, [X0+3536]
	037 Call 0x1C17CF4
	038 Move X0, 0x498000
	039 Move X0, [X0+3520]
	040 Call 0x1C17CF4
	041 Move X0, 0x498000
	042 Move X0, [X0+3480]
	043 Call 0x1C17CF4
	044 Move X0, 0x498000
	045 Move X0, [X0+3512]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+891], W8
	049 Move X0, X19
	050 Move X1, X31
	051 Move [X19+97], W31
	052 Call Object..ctor, X0
	053 Move X0, [X25]
	054 Move W1, 4
	055 Call 0x1C17D6C
	056 Move [X19+48], X0
	057 Move X0, [X24]
	058 Move W1, 1
	059 Move W24, 1
	060 Call 0x1C17D6C
	061 Move [X19+56], X0
	062 Move X0, [X23]
	063 Move W1, 1
	064 Call 0x1C17D6C
	065 Move [X19+72], X0
	066 Move X0, [X22]
	067 Move W1, 1
	068 Call 0x1C17D6C
	069 Move [X19+80], X0
	070 Move X0, [X21]
	071 Move W1, W31
	072 Call 0x1C17D6C
	073 Move [X19+64], X0
	074 Move X0, [X20]
	075 Move W1, 1
	076 Call 0x1C17D6C
	077 Move [X19+88], X0
	078 Move [X19+44], W31
	079 Move [X19+96], W24
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X24, [X31+32]
	085 Move X23, [X31+40]
	086 Move X26, [X31+16]
	087 Move X25, [X31+24]
	088 Move X30, [X31+80]
	089 Return 

Method: System.Void Clear()

Disassembly:
	0x03CCC1DC LDR X20, [X19 + 0x20]
	0x03CCC1E0 LDR X0, [X21]
	0x03CCC1E4 LDR W8, [X0 + 0xE0]
	0x03CCC1E8 CBNZ W8, 0x3CCC1F0
	0x03CCC1EC BL 0x1C16DFC
	0x03CCC1F0 MOV X0, X20
	0x03CCC1F4 MOV X1, X31
	0x03CCC1F8 MOV X2, X31
	0x03CCC1FC BL 0x3C354F8
	0x03CCC200 TBZ X0, 0x0, 0x3CCC214
	0x03CCC204 LDR X0, [X19 + 0x20]
	0x03CCC208 BL 0x3CCE288
	0x03CCC20C MOV X20, X0
	0x03CCC210 B 0x3CCC238
	0x03CCC214 ADRP X8, 0x482000
	0x03CCC218 LDR X8, [X8 + 0x838]
	0x03CCC21C LDR X0, [X8]
	0x03CCC220 BL 0x1C16F10
	0x03CCC224 ADRP X8, 0x482000
	0x03CCC228 LDR X8, [X8 + 0x830]
	0x03CCC22C MOV X20, X0
	0x03CCC230 LDR X1, [X8]
	0x03CCC234 BL 0x2DCCB98
	0x03CCC238 STR X20, [X19 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move X11, [X0+88]
	003 Move [X0+97], W31
	004 Move [X0+24], X31
	005 Move [X0+32], X31
	006 Move [X0+16], X31
	007 Move [X0+40], W31
	008 Compare X11, 0
	009 JumpIfEqual {25}
	010 Move W8, [X11+24]
	011 Move X9, X8
	012 ShiftRight X9, 32
	013 And X9, X9, 0x7FFFFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X9, X31
	016 Move X10, W8
	017 Add X11, X11, 32
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X9, X9, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X11+80], W31
	022 Move X30, [X31+16]
	023 Return 
	024 Call 0x1C17F28
	025 Call 0x1C17F20

Method: System.Void ClearMeshInfo(System.Boolean updateMesh)

Disassembly:
	0x03CCC23C LDP X20, X19, [X31 + 0x10]
	0x03CCC240 LDP X30, X21, [X31], #0x20
	0x03CCC244 RET
	0x03CCC248 STR X1, [X0 + 0x80]
	0x03CCC24C RET
	0x03CCC250 LDRB W0, [X0 + 0x88]
	0x03CCC254 RET
	0x03CCC258 AND W8, W1, 0x1
	0x03CCC25C STRB W8, [X0 + 0x88]
	0x03CCC260 RET
	0x03CCC264 LDRB W0, [X0 + 0x89]
	0x03CCC268 RET
	0x03CCC26C AND W8, W1, 0x1
	0x03CCC270 STRB W8, [X0 + 0x89]
	0x03CCC274 RET
	0x03CCC278 STR X30, [X31 - 0x10]!
	0x03CCC27C BL 0x3CCBFE8
	0x03CCC280 CBZ X0, 0x3CCC28C
	0x03CCC284 LDR X30, [X31], #0x10
	0x03CCC288 B 0x3CCC064
	0x03CCC28C BL 0x1C16F20
	0x03CCC290 STP X29, X30, [X31 - 0x60]!
	0x03CCC294 STP X28, X27, [X31 + 0x10]
	0x03CCC298 STP X26, X25, [X31 + 0x20]
	0x03CCC29C STP X24, X23, [X31 + 0x30]
	0x03CCC2A0 STP X22, X21, [X31 + 0x40]
	0x03CCC2A4 STP X20, X19, [X31 + 0x50]
	0x03CCC2A8 ADRP X20, 0x71B000
	0x03CCC2AC LDRB W8, [X20 + 0x383]
	0x03CCC2B0 MOV X19, X0
	0x03CCC2B4 TBNZ X8, 0x0, 0x3CCC338
	0x03CCC2B8 ADRP X0, 0x427000
	0x03CCC2BC LDR X0, [X0 + 0xA28]
	0x03CCC2C0 BL 0x1C16CF4
	0x03CCC2C4 ADRP X0, 0x495000
	0x03CCC2C8 LDR X0, [X0 + 0x680]
	0x03CCC2CC BL 0x1C16CF4
	0x03CCC2D0 ADRP X0, 0x495000
	0x03CCC2D4 LDR X0, [X0 + 0x688]
	0x03CCC2D8 BL 0x1C16CF4
	0x03CCC2DC ADRP X0, 0x495000
	0x03CCC2E0 LDR X0, [X0 + 0xE78]
	0x03CCC2E4 BL 0x1C16CF4
	0x03CCC2E8 ADRP X0, 0x495000
	0x03CCC2EC LDR X0, [X0 + 0xE80]
	0x03CCC2F0 BL 0x1C16CF4
	0x03CCC2F4 ADRP X0, 0x495000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x71C000
	010 Move W8, [X21+892]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x496000
	018 Move X0, [X0+1736]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+892], W8
	022 Move X23, [X19+88]
	023 Compare X23, 0
	024 JumpIfEqual {49}
	025 Move X22, 0x496000
	026 Move X22, [X22+1736]
	027 Move X21, X31
	028 Move W24, 32
	029 And W20, W20, 1
	030 Move W8, [X23+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, [X22]
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move W8, [X23+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X0, X23, X24
	040 Move W1, W20
	041 Move X2, X31
	042 Add X21, X21, 1
	043 Add X25, X24, 80
	044 Call MeshInfo.Clear, X0, X1
	045 Move X23, [X19+88]
	046 Move X24, X25
	047 Compare X23, 0
	048 JumpIfNotEqual {30}
	049 Call 0x1C17F20
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Move X25, [X31+72]
	058 Return 
	059 Call 0x1C17F28

Method: System.Void ClearLineInfo()

Disassembly:
	0x03CCC2F8 LDR X0, [X0 + 0xE88]
	0x03CCC2FC BL 0x1C16CF4
	0x03CCC300 ADRP X0, 0x495000
	0x03CCC304 LDR X0, [X0 + 0xE90]
	0x03CCC308 BL 0x1C16CF4
	0x03CCC30C ADRP X0, 0x495000
	0x03CCC310 LDR X0, [X0 + 0xE98]
	0x03CCC314 BL 0x1C16CF4
	0x03CCC318 ADRP X0, 0x427000
	0x03CCC31C LDR X0, [X0 + 0x598]
	0x03CCC320 BL 0x1C16CF4
	0x03CCC324 ADRP X0, 0x495000
	0x03CCC328 LDR X0, [X0 + 0xEA0]
	0x03CCC32C BL 0x1C16CF4
	0x03CCC330 MOVZ W8, 0x1
	0x03CCC334 STRB W8, [X20 + 0x383]
	0x03CCC338 LDR X21, [X19 + 0x98]
	0x03CCC33C CBNZ X21, 0x3CCC368
	0x03CCC340 ADRP X8, 0x495000
	0x03CCC344 LDR X8, [X8 + 0xE98]
	0x03CCC348 LDR X0, [X8]
	0x03CCC34C BL 0x1C16F10
	0x03CCC350 ADRP X8, 0x495000
	0x03CCC354 LDR X8, [X8 + 0xE80]
	0x03CCC358 MOV X21, X0
	0x03CCC35C LDR X1, [X8]
	0x03CCC360 BL 0x31462C4
	0x03CCC364 STR X21, [X19 + 0x98]
	0x03CCC368 CBZ X21, 0x3CCC4C0
	0x03CCC36C ADRP X23, 0x495000
	0x03CCC370 ADRP X24, 0x427000
	0x03CCC374 ADRP X25, 0x427000
	0x03CCC378 ADRP X26, 0x495000
	0x03CCC37C ADRP X27, 0x495000
	0x03CCC380 ADRP X28, 0x495000
	0x03CCC384 ADRP X29, 0x495000
	0x03CCC388 LDR X23, [X23 + 0xE90]
	0x03CCC38C LDR X24, [X24 + 0x598]
	0x03CCC390 LDR X25, [X25 + 0xA28]
	0x03CCC394 LDR X26, [X26 + 0xEA0]
	0x03CCC398 LDR X27, [X27 + 0xE78]
	0x03CCC39C LDR X28, [X28 + 0x688]
	0x03CCC3A0 LDR X29, [X29 + 0x680]
	0x03CCC3A4 MOV W20, W31
	0x03CCC3A8 LDR W8, [X21 + 0x18]
	0x03CCC3AC CMP W20, W8
	0x03CCC3B0 B.GE 0x3CCC4A4
	0x03CCC3B4 LDR X2, [X23]
	0x03CCC3B8 MOV X0, X21
	0x03CCC3BC MOV W1, W20
	0x03CCC3C0 BL 0x31467CC
	0x03CCC3C4 MOV X22, X0
	0x03CCC3C8 LDR X0, [X24]
	0x03CCC3CC MOV X21, X1
	0x03CCC3D0 LDR W8, [X0 + 0xE0]
	0x03CCC3D4 CBNZ W8, 0x3CCC3DC
	0x03CCC3D8 BL 0x1C16DFC
	0x03CCC3DC MOV X0, X22
	0x03CCC3E0 MOV X1, X31
	0x03CCC3E4 MOV X2, X31
	0x03CCC3E8 BL 0x3C3883C
	0x03CCC3EC TBNZ X0, 0x0, 0x3CCC414
	0x03CCC3F0 LDR X0, [X24]
	0x03CCC3F4 LDR W8, [X0 + 0xE0]
	0x03CCC3F8 CBNZ W8, 0x3CCC400
	0x03CCC3FC BL 0x1C16DFC
	0x03CCC400 MOV X0, X21
	0x03CCC404 MOV X1, X31
	0x03CCC408 MOV X2, X31
	0x03CCC40C BL 0x3C3883C
	0x03CCC410 TBZ X0, 0x0, 0x3CCC458
	0x03CCC414 LDR X0, [X25]
	0x03CCC418 LDR W8, [X0 + 0xE0]
	0x03CCC41C CBNZ W8, 0x3CCC424
	0x03CCC420 BL 0x1C16DFC
	0x03CCC424 LDR X0, [X26]
	0x03CCC428 MOV X1, X31
	0x03CCC42C BL 0x3C06048
	0x03CCC430 LDR X0, [X19 + 0x98]
	0x03CCC434 CBZ X0, 0x3CCC4C0
	0x03CCC438 LDR X2, [X27]
	0x03CCC43C MOV W1, W20
	0x03CCC440 BL 0x314861C
	0x03CCC444 SUB W20, W20, 0x1
	0x03CCC448 LDR X21, [X19 + 0x98]
	0x03CCC44C ADD W20, W20, 0x1
	0x03CCC450 CBNZ X21, 0x3CCC3A8
	0x03CCC454 B 0x3CCC4C0
	0x03CCC458 CBZ X22, 0x3CCC4C0
	0x03CCC45C MOV X0, X22
	0x03CCC460 MOV X1, X31
	0x03CCC464 BL 0x3C385F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x71C000
	008 Move W8, [X20+893]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x496000
	015 Move X0, [X0+3504]
	016 Call 0x1C17CF4
	017 Move X0, 0x496000
	018 Move X0, [X0+2920]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+893], W8
	022 Move X20, [X19+72]
	023 Compare X20, 0
	024 JumpIfNotEqual {32}
	025 Move X8, 0x496000
	026 Move X8, [X8+3504]
	027 Move W1, 1
	028 Move X0, [X8]
	029 Call 0x1C17D6C
	030 Move X20, X0
	031 Move [X19+72], X0
	032 Compare X20, 0
	033 JumpIfEqual {99}
	034 Move X8, [X20+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X22, 0x496000
	037 Move X22, [X22+2920]
	038 Move X21, X31
	039 And X8, X8, 0
	040 Move W23, 120
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X9, X20, X23
	043 Move [X9-76], W31
	044 Move [X9-68], W31
	045 Move [X9-88], X31
	046 Move X0, [X22]
	047 Move W9, [X0+224]
	048 Compare W9, 0
	049 JumpIfEqual {51}
	050 And X8, X8, 0
	051 Call 0x1C17DFC
	052 Move X0, [X22]
	053 Move W8, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X0+184]
	056 Add X9, X20, X23
	057 Move V0, [X8+8]
	058 Move [X9-40], S0
	059 Move X9, [X19+72]
	060 Compare X9, 0
	061 JumpIfEqual {99}
	062 Move W10, [X9+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X9, X9, X23
	065 Move [X9-36], W31
	066 Move V0, [X8]
	067 Move [X9-28], W31
	068 Move [X9-20], X31
	069 Move [X9-32], S0
	070 Move X8, [X8]
	071 Move [X9-8], X8
	072 Move X8, [X19+72]
	073 Compare X8, 0
	074 JumpIfEqual {99}
	075 Move W9, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X9, [X22]
	078 Move X9, [X9+184]
	079 Move X9, [X9+8]
	080 Move [X8], X9
	081 Move X20, [X19+72]
	082 Compare X20, 0
	083 JumpIfEqual {99}
	084 Move W8, [X20+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X21, X21, 1
	087 Add X9, X20, X23
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X23, X23, 96
	090 Move [X9-24], W31
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Move X23, [X31+56]
	097 Return 
	098 Call 0x1C17F28
	099 Call 0x1C17F20

Method: System.Void ClearPageInfo()

Disassembly:
	0x03CCC468 LDR X8, [X19 + 0x90]
	0x03CCC46C CBZ X8, 0x3CCC4C0
	0x03CCC470 LDR X2, [X28]
	0x03CCC474 MOV W22, W0
	0x03CCC478 MOV X0, X8
	0x03CCC47C MOV W1, W22
	0x03CCC480 BL 0x2A13880
	0x03CCC484 TBNZ X0, 0x0, 0x3CCC448
	0x03CCC488 LDR X0, [X19 + 0x90]
	0x03CCC48C CBZ X0, 0x3CCC4C0
	0x03CCC490 LDR X3, [X29]
	0x03CCC494 MOV W1, W22
	0x03CCC498 MOV X2, X21
	0x03CCC49C BL 0x2A1368C
	0x03CCC4A0 B 0x3CCC448
	0x03CCC4A4 LDP X20, X19, [X31 + 0x50]
	0x03CCC4A8 LDP X22, X21, [X31 + 0x40]
	0x03CCC4AC LDP X24, X23, [X31 + 0x30]
	0x03CCC4B0 LDP X26, X25, [X31 + 0x20]
	0x03CCC4B4 LDP X28, X27, [X31 + 0x10]
	0x03CCC4B8 LDP X29, X30, [X31], #0x60
	0x03CCC4BC RET
	0x03CCC4C0 BL 0x1C16F20
	0x03CCC4C4 SUB X31, X31, 0x40
	0x03CCC4C8 STR X30, [X31 + 0x10]
	0x03CCC4CC STP X22, X21, [X31 + 0x20]
	0x03CCC4D0 STP X20, X19, [X31 + 0x30]
	0x03CCC4D4 ADRP X21, 0x71B000
	0x03CCC4D8 LDRB W8, [X21 + 0x384]
	0x03CCC4DC MOV X20, X1
	0x03CCC4E0 MOV X19, X0
	0x03CCC4E4 TBNZ X8, 0x0, 0x3CCC574
	0x03CCC4E8 ADRP X0, 0x495000
	0x03CCC4EC LDR X0, [X0 + 0x680]
	0x03CCC4F0 BL 0x1C16CF4
	0x03CCC4F4 ADRP X0, 0x495000
	0x03CCC4F8 LDR X0, [X0 + 0x688]
	0x03CCC4FC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x71C000
	005 Move W8, [X20+894]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x496000
	012 Move X0, [X0+3520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+894], W8
	016 Move X0, [X19+80]
	017 Compare X0, 0
	018 JumpIfNotEqual {25}
	019 Move X8, 0x496000
	020 Move X8, [X8+3520]
	021 Move W1, 2
	022 Move X0, [X8]
	023 Call 0x1C17D6C
	024 Move [X19+80], X0
	025 Compare X0, 0
	026 JumpIfEqual {43}
	027 Move X8, [X0+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, -52285440
	030 Move V0, [X9+840]
	031 Move W10, 0xFE00
	032 And X8, X8, 0
	033 Add X9, X0, 48
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Move [X9-16], X31
	036 Move [X9-8], D0
	037 Move [X9+20], W10
	038 Subtract X8, X8, 1
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 Call 0x1C17F20

Method: System.Void Resize(ref T[] array, System.Int32 size)

Disassembly:
	0x0229D184 MOV X1, X31
	0x0229D188 B 0x338F3E0
	0x0229D18C CBZ X0, 0x229D194
	0x0229D190 RET
	0x0229D194 MOV W0, W1
	0x0229D198 MOV X1, X31
	0x0229D19C B 0x338F3E0
	0x0229D1A0 CBZ X0, 0x229D1A8
	0x0229D1A4 RET
	0x0229D1A8 MOV W0, W1
	0x0229D1AC MOV X1, X31
	0x0229D1B0 B 0x338F3E0
	0x0229D1B4 CBZ X0, 0x229D1BC
	0x0229D1B8 RET
	0x0229D1BC MOV W0, W1
	0x0229D1C0 MOV X1, X31
	0x0229D1C4 B 0x338F3E0
	0x0229D1C8 CBZ X0, 0x229D1D0
	0x0229D1CC RET
	0x0229D1D0 MOV W0, W1
	0x0229D1D4 MOV X1, X31
	0x0229D1D8 B 0x338F3E0
	0x0229D1DC CBZ X0, 0x229D1E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move W21, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add W1, W21, 256
	015 Move W0, W21
	016 Move X1, X31
	017 Call Mathf.NextPowerOfTwo, X0
	018 Move W1, W0
	019 Move X8, [X19+56]
	020 Move X0, X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, [X8+8]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call Array.Resize, X0, X1
	027 Return 

Method: System.Void Resize(ref T[] array, System.Int32 size, System.Boolean isBlockAllocated)

Disassembly:
	0x0229D29C MOV X1, X31
	0x0229D2A0 B 0x338F3E0
	0x0229D2A4 CBZ X0, 0x229D2AC
	0x0229D2A8 RET
	0x0229D2AC MOV W0, W1
	0x0229D2B0 MOV X1, X31
	0x0229D2B4 B 0x338F3E0
	0x0229D2B8 CBZ X0, 0x229D2C0
	0x0229D2BC RET
	0x0229D2C0 MOV W0, W1
	0x0229D2C4 MOV X1, X31
	0x0229D2C8 B 0x338F3E0
	0x0229D2CC CBZ X0, 0x229D2D4
	0x0229D2D0 RET
	0x0229D2D4 MOV W0, W1
	0x0229D2D8 MOV X1, X31
	0x0229D2DC B 0x338F3E0
	0x0229D2E0 CBZ X0, 0x229D2E8
	0x0229D2E4 RET
	0x0229D2E8 MOV W0, W1
	0x0229D2EC MOV X1, X31
	0x0229D2F0 B 0x338F3E0
	0x0229D2F4 CBZ X0, 0x229D2FC
	0x0229D2F8 RET
	0x0229D2FC MOV W0, W1
	0x0229D300 MOV X1, X31
	0x0229D304 B 0x338F3E0
	0x0229D308 CBZ X0, 0x229D310
	0x0229D30C RET
	0x0229D310 MOV W0, W1
	0x0229D314 MOV X1, X31
	0x0229D318 B 0x338F3E0
	0x0229D31C CBZ X0, 0x229D324
	0x0229D320 RET
	0x0229D324 MOV W0, W1
	0x0229D328 MOV X1, X31
	0x0229D32C B 0x338F3E0
	0x0229D330 CBZ X0, 0x229D338
	0x0229D334 RET
	0x0229D338 MOV W0, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X3
	008 Move W22, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfEqual {17}
	013 Move TEMP, X22
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {23}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move TEMP, X22
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {29}
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add W20, W20, 256
	025 Move W0, W20
	026 Move X1, X31
	027 Call Mathf.NextPowerOfTwo, X0
	028 Move W20, W0
	029 Move X8, [X21]
	030 Compare X8, 0
	031 JumpIfEqual {51}
	032 Move W8, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 
	040 Move X8, [X19+56]
	041 Move X0, X21
	042 Move W1, W20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X2, [X8+8]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Call Array.Resize, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03CCC500 ADRP X0, 0x495000
	0x03CCC504 LDR X0, [X0 + 0x658]
	0x03CCC508 BL 0x1C16CF4
	0x03CCC50C ADRP X0, 0x495000
	0x03CCC510 LDR X0, [X0 + 0xEA8]
	0x03CCC514 BL 0x1C16CF4
	0x03CCC518 ADRP X0, 0x495000
	0x03CCC51C LDR X0, [X0 + 0x650]
	0x03CCC520 BL 0x1C16CF4
	0x03CCC524 ADRP X0, 0x495000
	0x03CCC528 LDR X0, [X0 + 0x258]
	0x03CCC52C BL 0x1C16CF4
	0x03CCC530 ADRP X0, 0x495000
	0x03CCC534 LDR X0, [X0 + 0xEB0]
	0x03CCC538 BL 0x1C16CF4
	0x03CCC53C ADRP X0, 0x427000
	0x03CCC540 LDR X0, [X0 + 0x598]
	0x03CCC544 BL 0x1C16CF4
	0x03CCC548 ADRP X0, 0x495000
	0x03CCC54C LDR X0, [X0 + 0x290]
	0x03CCC550 BL 0x1C16CF4
	0x03CCC554 ADRP X0, 0x495000
	0x03CCC558 LDR X0, [X0 + 0xEB8]
	0x03CCC55C BL 0x1C16CF4
	0x03CCC560 ADRP X0, 0x495000
	0x03CCC564 LDR X0, [X0 + 0xEC0]
	0x03CCC568 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x71C000
	005 Move X19, 0x496000
	006 Move W8, [X20+895]
	007 Move X19, [X19+2920]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x496000
	013 Move X0, [X0+2920]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+895], W8
	017 Move X8, [X19]
	018 Move W9, 0xFE00
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	021 Move X8, [X8+184]
	022 Move W9, 0xFE00
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 Move [X8], D0
	025 Move X8, [X19]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	029 Move X8, [X8+184]
	030 Move [X8+8], D0
	031 Move X30, [X31+32]
	032 Return 

