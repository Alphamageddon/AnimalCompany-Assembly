Type: UnityEngine.TextCore.Text.FontFeatureTable/<>c

Method: System.Void .cctor()

Disassembly:
	0x03CA9AF8 CMP W23, W8
	0x03CA9AFC B.CS 0x3CA9B54
	0x03CA9B00 CMP W22, W0
	0x03CA9B04 MOVZ W8, 0x38
	0x03CA9B08 CSET W9, EQ
	0x03CA9B0C MADD X8, X23, X8, X21
	0x03CA9B10 STRB W9, [X8 + 0x40]
	0x03CA9B14 LDR X8, [X19]
	0x03CA9B18 CBZ X8, 0x3CA9B50
	0x03CA9B1C LDRSW X9, [X31 + 0xC]
	0x03CA9B20 LDR W10, [X8 + 0x18]
	0x03CA9B24 CMP W9, W10
	0x03CA9B28 B.CS 0x3CA9B54
	0x03CA9B2C MOVZ W10, 0x38
	0x03CA9B30 MADD X8, X9, X10, X8
	0x03CA9B34 STR W31, [X8 + 0x54]
	0x03CA9B38 LDR W0, [X31 + 0xC]
	0x03CA9B3C LDP X20, X19, [X31 + 0x30]
	0x03CA9B40 LDP X22, X21, [X31 + 0x20]
	0x03CA9B44 LDP X30, X23, [X31 + 0x10]
	0x03CA9B48 ADD X31, X31, 0x40
	0x03CA9B4C RET
	0x03CA9B50 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x73F000
	005 Move X20, 0x4B9000
	006 Move W8, [X19+779]
	007 Move X20, [X20+1096]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4B9000
	013 Move X0, [X0+1096]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+779], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03CA9B54 BL 0x1C16F28
	0x03CA9B58 SUB X31, X31, 0x40

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.UInt32 <SortGlyphPairAdjustmentRecords>b__25_0(UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord s)

Disassembly:
	0x03CA9B5C STP X30, X23, [X31 + 0x10]
	0x03CA9B60 STP X22, X21, [X31 + 0x20]
	0x03CA9B64 STP X20, X19, [X31 + 0x30]
	0x03CA9B68 ADRP X23, 0x73E000
	0x03CA9B6C LDRB W8, [X23 + 0x315]
	0x03CA9B70 MOV X22, X3
	0x03CA9B74 MOV X19, X2
	0x03CA9B78 MOV X21, X1
	0x03CA9B7C MOV X20, X0
	0x03CA9B80 TBNZ X8, 0x0, 0x3CA9BBC
	0x03CA9B84 ADRP X0, 0x4B8000
	0x03CA9B88 LDR X0, [X0 + 0x640]
	0x03CA9B8C BL 0x1C16CF4
	0x03CA9B90 ADRP X0, 0x454000
	0x03CA9B94 LDR X0, [X0 + 0x870]
	0x03CA9B98 BL 0x1C16CF4
	0x03CA9B9C ADRP X0, 0x4A5000
	0x03CA9BA0 LDR X0, [X0 + 0xD78]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move X0, X1
	004 Add X8, X31, 8
	005 Move X1, X31
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move [X31+48], W31
	009 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 Move W8, [X31+24]
	012 Add X0, X31, 32
	013 Move X1, X31
	014 Move [X31+2], V0
	015 Move [X31+48], W8
	016 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	017 Move X30, [X31+64]
	018 Add X31, X31, 80
	019 Return X0

Method: System.UInt32 <SortGlyphPairAdjustmentRecords>b__25_1(UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord s)

Disassembly:
	0x03CA9BA4 BL 0x1C16CF4
	0x03CA9BA8 ADRP X0, 0x474000
	0x03CA9BAC LDR X0, [X0 + 0x8B0]
	0x03CA9BB0 BL 0x1C16CF4
	0x03CA9BB4 MOVZ W8, 0x1
	0x03CA9BB8 STRB W8, [X23 + 0x315]
	0x03CA9BBC STR W31, [X31 + 0xC]
	0x03CA9BC0 CBZ X20, 0x3CA9D28
	0x03CA9BC4 MOV X0, X20
	0x03CA9BC8 MOV X1, X31
	0x03CA9BCC BL 0x3C385F8
	0x03CA9BD0 CBZ X22, 0x3CA9D28
	0x03CA9BD4 ADRP X8, 0x454000
	0x03CA9BD8 LDR X8, [X8 + 0x870]
	0x03CA9BDC MOV W23, W0
	0x03CA9BE0 ADD X2, X31, 0xC
	0x03CA9BE4 MOV X0, X22
	0x03CA9BE8 LDR X3, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move X0, X1
	004 Add X8, X31, 8
	005 Move X1, X31
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move [X31+48], W31
	009 Call GlyphPairAdjustmentRecord.get_secondAdjustmentRecord, X0
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 Move W8, [X31+24]
	012 Add X0, X31, 32
	013 Move X1, X31
	014 Move [X31+2], V0
	015 Move [X31+48], W8
	016 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	017 Move X30, [X31+64]
	018 Add X31, X31, 80
	019 Return X0

Method: System.UInt32 <SortMarkToBaseAdjustmentRecords>b__26_0(UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord s)

Disassembly:
	0x03CA9BEC MOV W1, W23
	0x03CA9BF0 BL 0x2A0BC68
	0x03CA9BF4 TBNZ X0, 0x0, 0x3CA9D10

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call MarkToBaseAdjustmentRecord.get_baseGlyphID, X0
	004 Return X0

Method: System.UInt32 <SortMarkToBaseAdjustmentRecords>b__26_1(UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord s)

Disassembly:
	0x03CA9BF8 ADRP X8, 0x4A5000
	0x03CA9BFC LDR X8, [X8 + 0xD78]
	0x03CA9C00 MOV X0, X22

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call MarkToBaseAdjustmentRecord.get_markGlyphID, X0
	004 Return X0

Method: System.UInt32 <SortMarkToMarkAdjustmentRecords>b__27_0(UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord s)

Disassembly:
	0x03CA9C04 LDR X1, [X8]
	0x03CA9C08 BL 0x2A0A118
	0x03CA9C0C ADRP X8, 0x474000

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call MarkToMarkAdjustmentRecord.get_baseMarkGlyphID, X0
	004 Return X0

Method: System.UInt32 <SortMarkToMarkAdjustmentRecords>b__27_1(UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord s)

Disassembly:
	0x03CA9C10 LDR X8, [X8 + 0x8B0]
	0x03CA9C14 MOV W2, W0
	0x03CA9C18 STR W0, [X31 + 0xC]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call MarkToMarkAdjustmentRecord.get_combiningMarkGlyphID, X0
	004 Return X0

