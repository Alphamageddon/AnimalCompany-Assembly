Type: UnityEngine.TextCore.Text.FontFeatureTable

Method: System.Void .ctor()

Disassembly:
	0x03CA7A10 MOV X20, X0
	0x03CA7A14 BL 0x301B7C4
	0x03CA7A18 STR X20, [X19 + 0x128]
	0x03CA7A1C LDR X0, [X25]
	0x03CA7A20 BL 0x1C16F10
	0x03CA7A24 MOV X20, X0
	0x03CA7A28 BL 0x3CA6A10
	0x03CA7A2C STR X20, [X19 + 0x170]
	0x03CA7A30 LDR X0, [X29]
	0x03CA7A34 MOVZ W1, 0xA
	0x03CA7A38 BL 0x1C16D6C
	0x03CA7A3C ADRP X8, 0xFFFFFFFFFCE44000
	0x03CA7A40 LDR V0, [X8 + 0x58]
	0x03CA7A44 ADD X8, X19, 0x188
	0x03CA7A48 MOVZ W9, 0xA23
	0x03CA7A4C STR X0, [X19 + 0x180]
	0x03CA7A50 STR V0, [X8]
	0x03CA7A54 STRH W9, [X19 + 0x198]
	0x03CA7A58 LDR X0, [X28]
	0x03CA7A5C BL 0x1C16F10
	0x03CA7A60 LDR X1, [X27]
	0x03CA7A64 MOV X20, X0
	0x03CA7A68 BL 0x301B7C4
	0x03CA7A6C STR X20, [X19 + 0x1A0]
	0x03CA7A70 LDR X0, [X28]
	0x03CA7A74 BL 0x1C16F10
	0x03CA7A78 LDR X1, [X27]
	0x03CA7A7C MOV X20, X0
	0x03CA7A80 BL 0x301B7C4
	0x03CA7A84 STR X20, [X19 + 0x1A8]
	0x03CA7A88 LDR X0, [X24]
	0x03CA7A8C BL 0x1C16F10
	0x03CA7A90 LDR X1, [X23]
	0x03CA7A94 MOV X20, X0
	0x03CA7A98 BL 0x30C0EA0
	0x03CA7A9C STR X20, [X19 + 0x1B0]
	0x03CA7AA0 LDR X0, [X24]
	0x03CA7AA4 BL 0x1C16F10
	0x03CA7AA8 LDR X1, [X23]
	0x03CA7AAC MOV X20, X0
	0x03CA7AB0 BL 0x30C0EA0
	0x03CA7AB4 STR X20, [X19 + 0x1B8]
	0x03CA7AB8 LDR X0, [X24]
	0x03CA7ABC BL 0x1C16F10
	0x03CA7AC0 LDR X1, [X23]
	0x03CA7AC4 MOV X20, X0
	0x03CA7AC8 BL 0x30C0EA0
	0x03CA7ACC STR X20, [X19 + 0x1C0]
	0x03CA7AD0 LDR X0, [X22]
	0x03CA7AD4 BL 0x1C16F10
	0x03CA7AD8 ADRP X25, 0x4A7000
	0x03CA7ADC LDR X25, [X25 + 0x830]
	0x03CA7AE0 MOV X20, X0
	0x03CA7AE4 LDR X1, [X25]
	0x03CA7AE8 BL 0x2DCCB98
	0x03CA7AEC STR X20, [X19 + 0x1C8]
	0x03CA7AF0 LDR X0, [X21]
	0x03CA7AF4 BL 0x1C16F10
	0x03CA7AF8 LDR X1, [X26]
	0x03CA7AFC MOV X20, X0
	0x03CA7B00 BL 0x301B7C4
	0x03CA7B04 STR X20, [X19 + 0x1D0]
	0x03CA7B08 LDR X0, [X22]
	0x03CA7B0C BL 0x1C16F10
	0x03CA7B10 LDR X1, [X25]
	0x03CA7B14 MOV X20, X0
	0x03CA7B18 BL 0x2DCCB98
	0x03CA7B1C STR X20, [X19 + 0x1D8]
	0x03CA7B20 LDR X0, [X24]
	0x03CA7B24 BL 0x1C16F10
	0x03CA7B28 LDR X1, [X23]
	0x03CA7B2C MOV X20, X0
	0x03CA7B30 BL 0x30C0EA0
	0x03CA7B34 STR X20, [X19 + 0x1E0]
	0x03CA7B38 LDR X0, [X22]
	0x03CA7B3C BL 0x1C16F10
	0x03CA7B40 LDR X1, [X25]
	0x03CA7B44 MOV X20, X0
	0x03CA7B48 BL 0x2DCCB98
	0x03CA7B4C STR X20, [X19 + 0x1E8]
	0x03CA7B50 MOV X0, X19
	0x03CA7B54 LDP X20, X19, [X31 + 0x50]
	0x03CA7B58 LDP X22, X21, [X31 + 0x40]
	0x03CA7B5C LDP X24, X23, [X31 + 0x30]
	0x03CA7B60 LDP X26, X25, [X31 + 0x20]
	0x03CA7B64 LDP X28, X27, [X31 + 0x10]
	0x03CA7B68 MOV X1, X31
	0x03CA7B6C LDP X29, X30, [X31], #0x60
	0x03CA7B70 B 0x3C36D2C
	0x03CA7B74 MOV X1, X31
	0x03CA7B78 B 0x3C36D2C
	0x03CA7B7C STP X29, X30, [X31 - 0x60]!
	0x03CA7B80 STP X28, X27, [X31 + 0x10]
	0x03CA7B84 STP X26, X25, [X31 + 0x20]
	0x03CA7B88 STP X24, X23, [X31 + 0x30]
	0x03CA7B8C STP X22, X21, [X31 + 0x40]
	0x03CA7B90 STP X20, X19, [X31 + 0x50]
	0x03CA7B94 ADRP X27, 0x740000
	0x03CA7B98 ADRP X28, 0x4BA000
	0x03CA7B9C ADRP X20, 0x4BA000
	0x03CA7BA0 ADRP X26, 0x4BA000
	0x03CA7BA4 ADRP X25, 0x4BA000
	0x03CA7BA8 ADRP X19, 0x4BA000
	0x03CA7BAC ADRP X24, 0x4BA000
	0x03CA7BB0 ADRP X23, 0x4BA000
	0x03CA7BB4 ADRP X29, 0x4BA000
	0x03CA7BB8 ADRP X22, 0x44D000
	0x03CA7BBC ADRP X21, 0x453000
	0x03CA7BC0 LDR X28, [X28 + 0x580]
	0x03CA7BC4 LDR X20, [X20 + 0x258]
	0x03CA7BC8 LDR X26, [X26 + 0x588]
	0x03CA7BCC LDR X25, [X25 + 0x590]
	0x03CA7BD0 LDR X19, [X19 + 0x598]
	0x03CA7BD4 LDR X24, [X24 + 0x5A0]
	0x03CA7BD8 LDR X23, [X23 + 0x5A8]
	0x03CA7BDC LDR X29, [X29 + 0x5B0]
	0x03CA7BE0 LDRB W8, [X27 + 0x300]
	0x03CA7BE4 LDR X22, [X22 + 0xE08]
	0x03CA7BE8 LDR X21, [X21 + 0x688]
	0x03CA7BEC TBNZ X8, 0x0, 0x3CA7CC4
	0x03CA7BF0 ADRP X0, 0x4BA000
	0x03CA7BF4 LDR X0, [X0 + 0x258]
	0x03CA7BF8 BL 0x1C16CF4
	0x03CA7BFC ADRP X0, 0x453000
	0x03CA7C00 LDR X0, [X0 + 0x688]
	0x03CA7C04 BL 0x1C16CF4
	0x03CA7C08 ADRP X0, 0x44D000
	0x03CA7C0C LDR X0, [X0 + 0xE08]
	0x03CA7C10 BL 0x1C16CF4
	0x03CA7C14 ADRP X0, 0x4BA000
	0x03CA7C18 LDR X0, [X0 + 0x5B8]
	0x03CA7C1C BL 0x1C16CF4
	0x03CA7C20 ADRP X0, 0x4BA000
	0x03CA7C24 LDR X0, [X0 + 0x5C0]
	0x03CA7C28 BL 0x1C16CF4
	0x03CA7C2C ADRP X0, 0x4BA000
	0x03CA7C30 LDR X0, [X0 + 0x5C8]
	0x03CA7C34 BL 0x1C16CF4
	0x03CA7C38 ADRP X0, 0x4BA000
	0x03CA7C3C LDR X0, [X0 + 0x5D0]
	0x03CA7C40 BL 0x1C16CF4
	0x03CA7C44 ADRP X0, 0x4B1000
	0x03CA7C48 LDR X0, [X0 + 0xF20]
	0x03CA7C4C BL 0x1C16CF4
	0x03CA7C50 ADRP X0, 0x4BA000
	0x03CA7C54 LDR X0, [X0 + 0x5A0]
	0x03CA7C58 BL 0x1C16CF4
	0x03CA7C5C ADRP X0, 0x4BA000
	0x03CA7C60 LDR X0, [X0 + 0x5D8]
	0x03CA7C64 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X27, 0x741000
	014 Move X26, 0x4BB000
	015 Move X20, 0x4BB000
	016 Move X25, 0x4BB000
	017 Move X24, 0x4BB000
	018 Move X23, 0x4BB000
	019 Move X22, 0x4BB000
	020 Move X21, 0x4BB000
	021 Move X29, 0x4BB000
	022 Move X28, 0x4BB000
	023 Move X26, [X26+816]
	024 Move X20, [X20+792]
	025 Move X25, [X25+776]
	026 Move X24, [X24+760]
	027 Move X23, [X23+1304]
	028 Move X22, [X22+1312]
	029 Move X21, [X21+856]
	030 Move X29, [X29+848]
	031 Move X28, [X28+1320]
	032 Move W8, [X27+775]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {88}
	038 Move X0, 0x4BB000
	039 Move X0, [X0+904]
	040 Call 0x1C17CF4
	041 Move X0, 0x4BB000
	042 Move X0, [X0+960]
	043 Call 0x1C17CF4
	044 Move X0, 0x4BB000
	045 Move X0, [X0+760]
	046 Call 0x1C17CF4
	047 Move X0, 0x4BB000
	048 Move X0, [X0+848]
	049 Call 0x1C17CF4
	050 Move X0, 0x4BB000
	051 Move X0, [X0+968]
	052 Call 0x1C17CF4
	053 Move X0, 0x4BB000
	054 Move X0, [X0+776]
	055 Call 0x1C17CF4
	056 Move X0, 0x4BB000
	057 Move X0, [X0+912]
	058 Call 0x1C17CF4
	059 Move X0, 0x4BB000
	060 Move X0, [X0+856]
	061 Call 0x1C17CF4
	062 Move X0, 0x4BB000
	063 Move X0, [X0+792]
	064 Call 0x1C17CF4
	065 Move X0, 0x4BB000
	066 Move X0, [X0+1312]
	067 Call 0x1C17CF4
	068 Move X0, 0x4BB000
	069 Move X0, [X0+1328]
	070 Call 0x1C17CF4
	071 Move X0, 0x4BB000
	072 Move X0, [X0+1336]
	073 Call 0x1C17CF4
	074 Move X0, 0x4BB000
	075 Move X0, [X0+1304]
	076 Call 0x1C17CF4
	077 Move X0, 0x4BB000
	078 Move X0, [X0+816]
	079 Call 0x1C17CF4
	080 Move X0, 0x4BB000
	081 Move X0, [X0+1320]
	082 Call 0x1C17CF4
	083 Move X0, 0x4BB000
	084 Move X0, [X0+1344]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X27+775], W8
	088 Move X0, X19
	089 Move X1, X31
	090 Call Object..ctor, X0
	091 Move X0, [X26]
	092 Call 0x1C17F10
	093 Move X1, [X20]
	094 Move X20, X0
	095 Call List`1<LigatureSubstitutionRecord>..ctor, X0
	096 Move [X19+24], X20
	097 Move X0, [X25]
	098 Call 0x1C17F10
	099 Move X1, [X24]
	100 Move X20, X0
	101 Call Dictionary`2<UInt32, Object>..ctor, X0
	102 Move [X19+56], X20
	103 Move X0, [X23]
	104 Call 0x1C17F10
	105 Move X1, [X22]
	106 Move X20, X0
	107 Call List`1<GlyphPairAdjustmentRecord>..ctor, X0
	108 Move [X19+32], X20
	109 Move X0, [X21]
	110 Call 0x1C17F10
	111 Move X1, [X29]
	112 Move X20, X0
	113 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>..ctor, X0
	114 Move [X19+64], X20
	115 Move X0, [X28]
	116 Call 0x1C17F10
	117 Move X8, 0x4BB000
	118 Move X8, [X8+1328]
	119 Move X20, X0
	120 Move X1, [X8]
	121 Call List`1<MarkToBaseAdjustmentRecord>..ctor, X0
	122 Move [X19+40], X20
	123 Move X8, 0x4BB000
	124 Move X8, [X8+912]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X8, 0x4BB000
	128 Move X8, [X8+904]
	129 Move X20, X0
	130 Move X1, [X8]
	131 Call Dictionary`2<UInt32, MarkToBaseAdjustmentRecord>..ctor, X0
	132 Move [X19+72], X20
	133 Move X8, 0x4BB000
	134 Move X8, [X8+1344]
	135 Move X0, [X8]
	136 Call 0x1C17F10
	137 Move X8, 0x4BB000
	138 Move X8, [X8+1336]
	139 Move X20, X0
	140 Move X1, [X8]
	141 Call List`1<MarkToMarkAdjustmentRecord>..ctor, X0
	142 Move [X19+48], X20
	143 Move X8, 0x4BB000
	144 Move X8, [X8+968]
	145 Move X0, [X8]
	146 Call 0x1C17F10
	147 Move X8, 0x4BB000
	148 Move X8, [X8+960]
	149 Move X20, X0
	150 Move X1, [X8]
	151 Call Dictionary`2<UInt32, MarkToMarkAdjustmentRecord>..ctor, X0
	152 Move [X19+80], X20
	153 Move X20, [X31+80]
	154 Move X19, [X31+88]
	155 Move X22, [X31+64]
	156 Move X21, [X31+72]
	157 Move X24, [X31+48]
	158 Move X23, [X31+56]
	159 Move X26, [X31+32]
	160 Move X25, [X31+40]
	161 Move X28, [X31+16]
	162 Move X27, [X31+24]
	163 Move X29, [X31+96]
	164 Move X30, [X31+104]
	165 Return 

Method: System.Void SortGlyphPairAdjustmentRecords()

Disassembly:
	0x03CA2478 LDR X8, [X8 + 0xC98]
	0x03CA247C MOV W1, W23
	0x03CA2480 LDR X3, [X8]
	0x03CA2484 BL 0x2B0F05C
	0x03CA2488 ADRP X8, 0x4BF000
	0x03CA248C LDR X25, [X31 + 0x8]
	0x03CA2490 LDR X8, [X8 + 0x3E0]
	0x03CA2494 LDR X0, [X8]
	0x03CA2498 BL 0x1C16F10
	0x03CA249C MOV W1, W21
	0x03CA24A0 MOV X2, X19
	0x03CA24A4 MOV X3, X25
	0x03CA24A8 MOV X24, X0
	0x03CA24AC BL 0x3C9E938
	0x03CA24B0 STR X24, [X22]
	0x03CA24B4 LDR X0, [X19 + 0x128]
	0x03CA24B8 CBZ X0, 0x3CA2674
	0x03CA24BC ADRP X9, 0x4BF000
	0x03CA24C0 LDR X9, [X9 + 0x4C0]
	0x03CA24C4 LDR W10, [X0 + 0x1C]
	0x03CA24C8 LDR X8, [X0 + 0x10]
	0x03CA24CC LDR X9, [X9]
	0x03CA24D0 ADD W10, W10, 0x1
	0x03CA24D4 STR W10, [X0 + 0x1C]
	0x03CA24D8 CBZ X8, 0x3CA2674
	0x03CA24DC LDRSW X10, [X0 + 0x18]
	0x03CA24E0 LDR W11, [X8 + 0x18]
	0x03CA24E4 CMP W10, W11
	0x03CA24E8 B.CS 0x3CA2500
	0x03CA24EC ADD W9, W10, 0x1
	0x03CA24F0 ADD X8, X8, X10, 0x3, LSL
	0x03CA24F4 STR W9, [X0 + 0x18]
	0x03CA24F8 STR X24, [X8 + 0x20]
	0x03CA24FC B 0x3CA2514
	0x03CA2500 LDR X8, [X9 + 0x20]
	0x03CA2504 MOV X1, X24
	0x03CA2508 LDR X8, [X8 + 0xC0]
	0x03CA250C LDR X2, [X8 + 0x70]
	0x03CA2510 BL 0x301BF90
	0x03CA2514 LDR X0, [X19 + 0x130]
	0x03CA2518 CBZ X0, 0x3CA2674
	0x03CA251C ADRP X8, 0x4BF000
	0x03CA2520 LDR X2, [X22]
	0x03CA2524 LDR X8, [X8 + 0x2B0]
	0x03CA2528 MOV W1, W21
	0x03CA252C LDR X3, [X8]
	0x03CA2530 BL 0x2B0F05C
	0x03CA2534 LDR X0, [X19 + 0x1B0]
	0x03CA2538 CBZ X0, 0x3CA2674
	0x03CA253C ADRP X21, 0x457000
	0x03CA2540 LDR X21, [X21 + 0x1D0]
	0x03CA2544 LDR W10, [X0 + 0x1C]
	0x03CA2548 LDR X8, [X0 + 0x10]
	0x03CA254C LDR X9, [X21]
	0x03CA2550 ADD W10, W10, 0x1
	0x03CA2554 STR W10, [X0 + 0x1C]
	0x03CA2558 CBZ X8, 0x3CA2674
	0x03CA255C LDRSW X10, [X0 + 0x18]
	0x03CA2560 LDR W11, [X8 + 0x18]
	0x03CA2564 CMP W10, W11
	0x03CA2568 B.CS 0x3CA2580
	0x03CA256C ADD W9, W10, 0x1
	0x03CA2570 ADD X8, X8, X10, 0x2, LSL
	0x03CA2574 STR W9, [X0 + 0x18]
	0x03CA2578 STR W23, [X8 + 0x20]
	0x03CA257C B 0x3CA2594
	0x03CA2580 LDR X8, [X9 + 0x20]
	0x03CA2584 MOV W1, W23
	0x03CA2588 LDR X8, [X8 + 0xC0]
	0x03CA258C LDR X2, [X8 + 0x70]
	0x03CA2590 BL 0x30C1698
	0x03CA2594 LDR X0, [X19 + 0x1B8]
	0x03CA2598 CBZ X0, 0x3CA2674
	0x03CA259C LDR W10, [X0 + 0x1C]
	0x03CA25A0 LDR X8, [X0 + 0x10]
	0x03CA25A4 LDR X9, [X21]
	0x03CA25A8 ADD W10, W10, 0x1
	0x03CA25AC STR W10, [X0 + 0x1C]
	0x03CA25B0 CBZ X8, 0x3CA2674
	0x03CA25B4 LDRSW X10, [X0 + 0x18]
	0x03CA25B8 LDR W11, [X8 + 0x18]
	0x03CA25BC CMP W10, W11
	0x03CA25C0 B.CS 0x3CA25D8
	0x03CA25C4 ADD W9, W10, 0x1
	0x03CA25C8 ADD X8, X8, X10, 0x2, LSL
	0x03CA25CC STR W9, [X0 + 0x18]
	0x03CA25D0 STR W23, [X8 + 0x20]
	0x03CA25D4 B 0x3CA25EC
	0x03CA25D8 LDR X8, [X9 + 0x20]
	0x03CA25DC MOV W1, W23
	0x03CA25E0 LDR X8, [X8 + 0xC0]
	0x03CA25E4 LDR X2, [X8 + 0x70]
	0x03CA25E8 BL 0x30C1698
	0x03CA25EC TBZ X20, 0x0, 0x3CA2610
	0x03CA25F0 ADRP X8, 0x4BF000
	0x03CA25F4 LDR X8, [X8 + 0x258]
	0x03CA25F8 LDR X0, [X8]
	0x03CA25FC LDR W8, [X0 + 0xE0]
	0x03CA2600 CBNZ W8, 0x3CA2608
	0x03CA2604 BL 0x1C16DFC
	0x03CA2608 MOV X0, X19
	0x03CA260C BL 0x3CA3208
	0x03CA2610 LDR X8, [X19 + 0x140]
	0x03CA2614 CBZ X8, 0x3CA2674
	0x03CA2618 LDRSW X9, [X19 + 0x148]
	0x03CA261C LDR W10, [X8 + 0x18]
	0x03CA2620 CMP W9, W10
	0x03CA2624 B.CS 0x3CA2678
	0x03CA2628 ADRP X10, 0x4BF000
	0x03CA262C LDR X10, [X10 + 0x258]
	0x03CA2630 ADD X8, X8, X9, 0x3, LSL
	0x03CA2634 LDR X19, [X8 + 0x20]
	0x03CA2638 LDR X0, [X10]
	0x03CA263C LDR W9, [X0 + 0xE0]
	0x03CA2640 CBNZ W9, 0x3CA2648
	0x03CA2644 BL 0x1C16DFC
	0x03CA2648 MOV X0, X19
	0x03CA264C BL 0x3CA3524
	0x03CA2650 LDR X0, [X29]
	0x03CA2654 LDR W8, [X0 + 0xE0]
	0x03CA2658 CBNZ W8, 0x3CA2660
	0x03CA265C BL 0x1C16DFC
	0x03CA2660 MOVZ W0, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x746000
	010 Move W8, [X20+776]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x4C0000
	017 Move X0, [X0+1048]
	018 Call 0x1C17CF4
	019 Move X0, 0x4C0000
	020 Move X0, [X0+1056]
	021 Call 0x1C17CF4
	022 Move X0, 0x4C0000
	023 Move X0, [X0+1064]
	024 Call 0x1C17CF4
	025 Move X0, 0x4C0000
	026 Move X0, [X0+1072]
	027 Call 0x1C17CF4
	028 Move X0, 0x4C0000
	029 Move X0, [X0+864]
	030 Call 0x1C17CF4
	031 Move X0, 0x4C0000
	032 Move X0, [X0+1080]
	033 Call 0x1C17CF4
	034 Move X0, 0x4C0000
	035 Move X0, [X0+1088]
	036 Call 0x1C17CF4
	037 Move X0, 0x4C0000
	038 Move X0, [X0+1096]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+776], W8
	042 Move X20, [X19+32]
	043 Compare X20, 0
	044 JumpIfEqual {140}
	045 Move W8, [X20+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X23, 0x4C0000
	048 Move X23, [X23+1096]
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Move X8, [X0+184]
	056 Move X24, 0x4C0000
	057 Move X21, [X8+8]
	058 Move X24, [X24+1048]
	059 Compare X21, 0
	060 JumpIfNotEqual {82}
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X23]
	066 Move X9, 0x4C0000
	067 Move X8, [X0+184]
	068 Move X9, [X9+1072]
	069 Move X22, [X8]
	070 Move X0, [X9]
	071 Call 0x1C17F10
	072 Move X8, 0x4C0000
	073 Move X8, [X8+1080]
	074 Move X1, X22
	075 Move X3, X31
	076 Move X21, X0
	077 Move X2, [X8]
	078 Call Func`2<GlyphPairAdjustmentRecord, UInt32>..ctor, X0, X1, X2
	079 Move X8, [X23]
	080 Move X8, [X8+184]
	081 Move [X8+8], X21
	082 Move X2, [X24]
	083 Move X0, X20
	084 Move X1, X21
	085 Call Enumerable.OrderBy, X0, X1
	086 Move X8, [X23]
	087 Move X20, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X8, [X23]
	094 Move X9, [X8+184]
	095 Move X25, 0x4C0000
	096 Move X24, 0x4C0000
	097 Move X21, [X9+16]
	098 Move X25, [X25+1056]
	099 Move X24, [X24+1064]
	100 Compare X21, 0
	101 JumpIfNotEqual {124}
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {108}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X8, [X23]
	108 Move X9, 0x4C0000
	109 Move X8, [X8+184]
	110 Move X9, [X9+1072]
	111 Move X22, [X8]
	112 Move X0, [X9]
	113 Call 0x1C17F10
	114 Move X8, 0x4C0000
	115 Move X8, [X8+1088]
	116 Move X1, X22
	117 Move X3, X31
	118 Move X21, X0
	119 Move X2, [X8]
	120 Call Func`2<GlyphPairAdjustmentRecord, UInt32>..ctor, X0, X1, X2
	121 Move X8, [X23]
	122 Move X8, [X8+184]
	123 Move [X8+16], X21
	124 Move X2, [X25]
	125 Move X0, X20
	126 Move X1, X21
	127 Call 0x21D5C54, X0, X1
	128 Move X1, [X24]
	129 Call Enumerable.ToList, X0
	130 Move [X19+32], X0
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X24, [X31+16]
	136 Move X23, [X31+24]
	137 Move X30, [X31+64]
	138 Move X25, [X31+72]
	139 Return 
	140 Call 0x1C17F20

Method: System.Void SortMarkToBaseAdjustmentRecords()

Disassembly:
	0x03CA2664 MOV X1, X31
	0x03CA2668 MOVZ W24, 0x1
	0x03CA266C BL 0x3C9CF44
	0x03CA2670 B 0x3CA1F24
	0x03CA2674 BL 0x1C16F20
	0x03CA2678 BL 0x1C16F28
	0x03CA267C STR X30, [X31 - 0x60]!
	0x03CA2680 STP X28, X27, [X31 + 0x10]
	0x03CA2684 STP X26, X25, [X31 + 0x20]
	0x03CA2688 STP X24, X23, [X31 + 0x30]
	0x03CA268C STP X22, X21, [X31 + 0x40]
	0x03CA2690 STP X20, X19, [X31 + 0x50]
	0x03CA2694 ADRP X23, 0x745000
	0x03CA2698 LDRB W8, [X23 + 0x2E4]
	0x03CA269C MOV W19, W3
	0x03CA26A0 MOV W22, W2
	0x03CA26A4 MOV W20, W1
	0x03CA26A8 MOV X21, X0
	0x03CA26AC TBNZ X8, 0x0, 0x3CA2700
	0x03CA26B0 ADRP X0, 0x4BF000
	0x03CA26B4 LDR X0, [X0 + 0x248]
	0x03CA26B8 BL 0x1C16CF4
	0x03CA26BC ADRP X0, 0x4BF000
	0x03CA26C0 LDR X0, [X0 + 0x258]
	0x03CA26C4 BL 0x1C16CF4
	0x03CA26C8 ADRP X0, 0x453000
	0x03CA26CC LDR X0, [X0 + 0x9D8]
	0x03CA26D0 BL 0x1C16CF4
	0x03CA26D4 ADRP X0, 0x4BF000
	0x03CA26D8 LDR X0, [X0 + 0x4B0]
	0x03CA26DC BL 0x1C16CF4
	0x03CA26E0 ADRP X0, 0x4BF000
	0x03CA26E4 LDR X0, [X0 + 0x4B8]
	0x03CA26E8 BL 0x1C16CF4
	0x03CA26EC ADRP X0, 0x451000
	0x03CA26F0 LDR X0, [X0 + 0x598]
	0x03CA26F4 BL 0x1C16CF4
	0x03CA26F8 MOVZ W8, 0x1
	0x03CA26FC STRB W8, [X23 + 0x2E4]
	0x03CA2700 STR X31, [X31 + 0x8]
	0x03CA2704 LDR X0, [X21 + 0x130]
	0x03CA2708 CBNZ X0, 0x3CA271C
	0x03CA270C MOV X0, X21
	0x03CA2710 BL 0x3C9EBEC
	0x03CA2714 LDR X0, [X21 + 0x130]
	0x03CA2718 CBZ X0, 0x3CA2878
	0x03CA271C ADRP X8, 0x4BF000
	0x03CA2720 LDR X8, [X8 + 0x248]
	0x03CA2724 MOV W1, W20
	0x03CA2728 LDR X2, [X8]
	0x03CA272C BL 0x2B0F250
	0x03CA2730 TBZ X0, 0x0, 0x3CA273C
	0x03CA2734 MOVZ W24, 0x1
	0x03CA2738 B 0x3CA287C
	0x03CA273C TBZ X19, 0x0, 0x3CA2774
	0x03CA2740 LDR W8, [X21 + 0xA8]
	0x03CA2744 SUB W8, W8, 0x1
	0x03CA2748 CMP W8, 0x1
	0x03CA274C B.HI 0x3CA2774
	0x03CA2750 ADD X2, X31, 0x8
	0x03CA2754 MOV X0, X21
	0x03CA2758 MOV W1, W20
	0x03CA275C MOV W3, W31
	0x03CA2760 BL 0x3CA1DE0
	0x03CA2764 MOV W24, W0
	0x03CA2768 TBNZ X0, 0x0, 0x3CA287C
	0x03CA276C TBNZ X22, 0x0, 0x3CA2778
	0x03CA2770 B 0x3CA287C
	0x03CA2774 TBZ X22, 0x0, 0x3CA2878
	0x03CA2778 LDR X0, [X21 + 0x178]
	0x03CA277C CBZ X0, 0x3CA2878
	0x03CA2780 LDR W8, [X0 + 0x18]
	0x03CA2784 CMP W8, 0x1
	0x03CA2788 B.LT 0x3CA2878
	0x03CA278C ADRP X25, 0x4BF000
	0x03CA2790 ADRP X26, 0x451000
	0x03CA2794 ADRP X27, 0x4BF000
	0x03CA2798 ADRP X28, 0x453000
	0x03CA279C LDR X25, [X25 + 0x4B8]
	0x03CA27A0 LDR X26, [X26 + 0x598]
	0x03CA27A4 LDR X27, [X27 + 0x258]
	0x03CA27A8 LDR X28, [X28 + 0x9D8]
	0x03CA27AC MOV W22, W31
	0x03CA27B0 LDR X2, [X25]
	0x03CA27B4 MOV W1, W22
	0x03CA27B8 BL 0x301BCCC
	0x03CA27BC LDR X8, [X26]
	0x03CA27C0 MOV X23, X0
	0x03CA27C4 LDR W9, [X8 + 0xE0]
	0x03CA27C8 CBNZ W9, 0x3CA27D4
	0x03CA27CC MOV X0, X8
	0x03CA27D0 BL 0x1C16DFC
	0x03CA27D4 MOV X0, X23
	0x03CA27D8 MOV X1, X31
	0x03CA27DC MOV X2, X31
	0x03CA27E0 BL 0x3C354F8
	0x03CA27E4 TBZ X0, 0x0, 0x3CA2878
	0x03CA27E8 LDR X0, [X21 + 0x178]
	0x03CA27EC CBZ X0, 0x3CA289C
	0x03CA27F0 LDR X2, [X25]
	0x03CA27F4 MOV W1, W22
	0x03CA27F8 BL 0x301BCCC
	0x03CA27FC CBZ X0, 0x3CA289C
	0x03CA2800 MOV X1, X31
	0x03CA2804 MOV X23, X0
	0x03CA2808 BL 0x3C385F8
	0x03CA280C LDR X8, [X27]
	0x03CA2810 MOV W24, W0
	0x03CA2814 LDR W9, [X8 + 0xE0]
	0x03CA2818 CBNZ W9, 0x3CA2828
	0x03CA281C MOV X0, X8
	0x03CA2820 BL 0x1C16DFC
	0x03CA2824 LDR X8, [X27]
	0x03CA2828 LDR X8, [X8 + 0xB8]
	0x03CA282C LDR X0, [X8 + 0x50]
	0x03CA2830 CBZ X0, 0x3CA289C
	0x03CA2834 LDR X2, [X28]
	0x03CA2838 MOV W1, W24
	0x03CA283C BL 0x2DAB03C
	0x03CA2840 TBZ X0, 0x0, 0x3CA2860
	0x03CA2844 AND W3, W19, 0x1
	0x03CA2848 MOVZ W2, 0x1
	0x03CA284C MOV X0, X23

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x746000
	010 Move W8, [X20+777]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x4C0000
	017 Move X0, [X0+1104]
	018 Call 0x1C17CF4
	019 Move X0, 0x4C0000
	020 Move X0, [X0+1112]
	021 Call 0x1C17CF4
	022 Move X0, 0x4C0000
	023 Move X0, [X0+1120]
	024 Call 0x1C17CF4
	025 Move X0, 0x4C0000
	026 Move X0, [X0+1128]
	027 Call 0x1C17CF4
	028 Move X0, 0x4C0000
	029 Move X0, [X0+920]
	030 Call 0x1C17CF4
	031 Move X0, 0x4C0000
	032 Move X0, [X0+1136]
	033 Call 0x1C17CF4
	034 Move X0, 0x4C0000
	035 Move X0, [X0+1144]
	036 Call 0x1C17CF4
	037 Move X0, 0x4C0000
	038 Move X0, [X0+1096]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+777], W8
	042 Move X20, [X19+40]
	043 Compare X20, 0
	044 JumpIfEqual {140}
	045 Move W8, [X20+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X23, 0x4C0000
	048 Move X23, [X23+1096]
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Move X8, [X0+184]
	056 Move X24, 0x4C0000
	057 Move X21, [X8+24]
	058 Move X24, [X24+1104]
	059 Compare X21, 0
	060 JumpIfNotEqual {82}
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X23]
	066 Move X9, 0x4C0000
	067 Move X8, [X0+184]
	068 Move X9, [X9+1128]
	069 Move X22, [X8]
	070 Move X0, [X9]
	071 Call 0x1C17F10
	072 Move X8, 0x4C0000
	073 Move X8, [X8+1136]
	074 Move X1, X22
	075 Move X3, X31
	076 Move X21, X0
	077 Move X2, [X8]
	078 Call Func`2<MarkToBaseAdjustmentRecord, UInt32>..ctor, X0, X1, X2
	079 Move X8, [X23]
	080 Move X8, [X8+184]
	081 Move [X8+24], X21
	082 Move X2, [X24]
	083 Move X0, X20
	084 Move X1, X21
	085 Call Enumerable.OrderBy, X0, X1
	086 Move X8, [X23]
	087 Move X20, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X8, [X23]
	094 Move X9, [X8+184]
	095 Move X25, 0x4C0000
	096 Move X24, 0x4C0000
	097 Move X21, [X9+32]
	098 Move X25, [X25+1112]
	099 Move X24, [X24+1120]
	100 Compare X21, 0
	101 JumpIfNotEqual {124}
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {108}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X8, [X23]
	108 Move X9, 0x4C0000
	109 Move X8, [X8+184]
	110 Move X9, [X9+1128]
	111 Move X22, [X8]
	112 Move X0, [X9]
	113 Call 0x1C17F10
	114 Move X8, 0x4C0000
	115 Move X8, [X8+1144]
	116 Move X1, X22
	117 Move X3, X31
	118 Move X21, X0
	119 Move X2, [X8]
	120 Call Func`2<MarkToBaseAdjustmentRecord, UInt32>..ctor, X0, X1, X2
	121 Move X8, [X23]
	122 Move X8, [X8+184]
	123 Move [X8+32], X21
	124 Move X2, [X25]
	125 Move X0, X20
	126 Move X1, X21
	127 Call Enumerable.ThenBy, X0, X1
	128 Move X1, [X24]
	129 Call Enumerable.ToList, X0
	130 Move [X19+40], X0
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X24, [X31+16]
	136 Move X23, [X31+24]
	137 Move X30, [X31+64]
	138 Move X25, [X31+72]
	139 Return 
	140 Call 0x1C17F20

Method: System.Void SortMarkToMarkAdjustmentRecords()

Disassembly:
	0x03CA2850 MOV W1, W20
	0x03CA2854 MOVZ W24, 0x1
	0x03CA2858 BL 0x3CA267C
	0x03CA285C TBNZ X0, 0x0, 0x3CA287C
	0x03CA2860 LDR X0, [X21 + 0x178]
	0x03CA2864 CBZ X0, 0x3CA289C
	0x03CA2868 LDR W8, [X0 + 0x18]
	0x03CA286C ADD W22, W22, 0x1
	0x03CA2870 CMP W22, W8
	0x03CA2874 B.LT 0x3CA27B0
	0x03CA2878 MOV W24, W31
	0x03CA287C AND W0, W24, 0x1
	0x03CA2880 LDP X20, X19, [X31 + 0x50]
	0x03CA2884 LDP X22, X21, [X31 + 0x40]
	0x03CA2888 LDP X24, X23, [X31 + 0x30]
	0x03CA288C LDP X26, X25, [X31 + 0x20]
	0x03CA2890 LDP X28, X27, [X31 + 0x10]
	0x03CA2894 LDR X30, [X31], #0x60
	0x03CA2898 RET
	0x03CA289C BL 0x1C16F20
	0x03CA28A0 STP X30, X25, [X31 - 0x40]!
	0x03CA28A4 STP X24, X23, [X31 + 0x10]
	0x03CA28A8 STP X22, X21, [X31 + 0x20]
	0x03CA28AC STP X20, X19, [X31 + 0x30]
	0x03CA28B0 ADRP X22, 0x745000
	0x03CA28B4 LDRB W8, [X22 + 0x2E5]
	0x03CA28B8 MOV X19, X2
	0x03CA28BC MOV X20, X1
	0x03CA28C0 MOV X21, X0
	0x03CA28C4 TBNZ X8, 0x0, 0x3CA290C
	0x03CA28C8 ADRP X0, 0x4BF000
	0x03CA28CC LDR X0, [X0 + 0x248]
	0x03CA28D0 BL 0x1C16CF4
	0x03CA28D4 ADRP X0, 0x4B6000
	0x03CA28D8 LDR X0, [X0 + 0xE20]
	0x03CA28DC BL 0x1C16CF4
	0x03CA28E0 ADRP X0, 0x4B6000
	0x03CA28E4 LDR X0, [X0 + 0xE28]
	0x03CA28E8 BL 0x1C16CF4
	0x03CA28EC ADRP X0, 0x4B6000
	0x03CA28F0 LDR X0, [X0 + 0xE30]
	0x03CA28F4 BL 0x1C16CF4
	0x03CA28F8 ADRP X0, 0x4B6000
	0x03CA28FC LDR X0, [X0 + 0xE38]
	0x03CA2900 BL 0x1C16CF4
	0x03CA2904 MOVZ W8, 0x1
	0x03CA2908 STRB W8, [X22 + 0x2E5]
	0x03CA290C LDR X8, [X21 + 0x130]
	0x03CA2910 CBZ X8, 0x3CA2A20
	0x03CA2914 ADRP X8, 0x4B6000
	0x03CA2918 LDR X8, [X8 + 0xE38]
	0x03CA291C ADRP X22, 0x4B6000
	0x03CA2920 LDR X0, [X8]
	0x03CA2924 LDR X22, [X22 + 0xE28]
	0x03CA2928 BL 0x1C16F10
	0x03CA292C LDR X1, [X22]
	0x03CA2930 MOV X22, X0
	0x03CA2934 BL 0x2F6A188
	0x03CA2938 STR X22, [X19]
	0x03CA293C CBZ X20, 0x3CA2A3C
	0x03CA2940 LDR W8, [X20 + 0x10]
	0x03CA2944 CMP W8, 0x1
	0x03CA2948 B.LT 0x3CA2A08
	0x03CA294C ADRP X24, 0x4BF000
	0x03CA2950 ADRP X25, 0x4B6000
	0x03CA2954 LDR X24, [X24 + 0x248]
	0x03CA2958 LDR X25, [X25 + 0xE20]
	0x03CA295C MOV W22, W31
	0x03CA2960 LDR X23, [X21 + 0x130]
	0x03CA2964 MOV X0, X20
	0x03CA2968 MOV W1, W22
	0x03CA296C MOV X2, X31
	0x03CA2970 BL 0x3222A1C
	0x03CA2974 CBZ X23, 0x3CA2A3C
	0x03CA2978 LDR X2, [X24]
	0x03CA297C AND W1, W0, 0xFFFF
	0x03CA2980 MOV X0, X23
	0x03CA2984 BL 0x2B0F250
	0x03CA2988 TBNZ X0, 0x0, 0x3CA29F8
	0x03CA298C LDR X23, [X19]
	0x03CA2990 MOV X0, X20
	0x03CA2994 MOV W1, W22
	0x03CA2998 MOV X2, X31
	0x03CA299C BL 0x3222A1C
	0x03CA29A0 CBZ X23, 0x3CA2A3C
	0x03CA29A4 LDR W10, [X23 + 0x1C]
	0x03CA29A8 LDR X8, [X23 + 0x10]
	0x03CA29AC LDR X9, [X25]
	0x03CA29B0 ADD W10, W10, 0x1
	0x03CA29B4 STR W10, [X23 + 0x1C]
	0x03CA29B8 CBZ X8, 0x3CA2A3C
	0x03CA29BC LDRSW X10, [X23 + 0x18]
	0x03CA29C0 LDR W11, [X8 + 0x18]
	0x03CA29C4 MOV W1, W0
	0x03CA29C8 CMP W10, W11
	0x03CA29CC B.CS 0x3CA29E4
	0x03CA29D0 ADD W9, W10, 0x1
	0x03CA29D4 ADD X8, X8, X10, 0x1, LSL
	0x03CA29D8 STR W9, [X23 + 0x18]
	0x03CA29DC STRH W1, [X8 + 0x20]
	0x03CA29E0 B 0x3CA29F8
	0x03CA29E4 LDR X8, [X9 + 0x20]
	0x03CA29E8 MOV X0, X23
	0x03CA29EC LDR X8, [X8 + 0xC0]
	0x03CA29F0 LDR X2, [X8 + 0x70]
	0x03CA29F4 BL 0x2F6A980
	0x03CA29F8 LDR W8, [X20 + 0x10]
	0x03CA29FC ADD W22, W22, 0x1
	0x03CA2A00 CMP W22, W8
	0x03CA2A04 B.LT 0x3CA2960
	0x03CA2A08 LDR X8, [X19]
	0x03CA2A0C CBZ X8, 0x3CA2A3C
	0x03CA2A10 LDR W8, [X8 + 0x18]
	0x03CA2A14 CMP W8, 0x0
	0x03CA2A18 CSET W0, EQ
	0x03CA2A1C B 0x3CA2A28
	0x03CA2A20 MOV W0, W31
	0x03CA2A24 STR X31, [X19]
	0x03CA2A28 LDP X20, X19, [X31 + 0x30]
	0x03CA2A2C LDP X22, X21, [X31 + 0x20]
	0x03CA2A30 LDP X24, X23, [X31 + 0x10]
	0x03CA2A34 LDP X30, X25, [X31], #0x40
	0x03CA2A38 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x746000
	010 Move W8, [X20+778]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x4C0000
	017 Move X0, [X0+1152]
	018 Call 0x1C17CF4
	019 Move X0, 0x4C0000
	020 Move X0, [X0+1160]
	021 Call 0x1C17CF4
	022 Move X0, 0x4C0000
	023 Move X0, [X0+1168]
	024 Call 0x1C17CF4
	025 Move X0, 0x4C0000
	026 Move X0, [X0+1176]
	027 Call 0x1C17CF4
	028 Move X0, 0x4C0000
	029 Move X0, [X0+976]
	030 Call 0x1C17CF4
	031 Move X0, 0x4C0000
	032 Move X0, [X0+1184]
	033 Call 0x1C17CF4
	034 Move X0, 0x4C0000
	035 Move X0, [X0+1192]
	036 Call 0x1C17CF4
	037 Move X0, 0x4C0000
	038 Move X0, [X0+1096]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+778], W8
	042 Move X20, [X19+48]
	043 Compare X20, 0
	044 JumpIfEqual {140}
	045 Move W8, [X20+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X23, 0x4C0000
	048 Move X23, [X23+1096]
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Move X8, [X0+184]
	056 Move X24, 0x4C0000
	057 Move X21, [X8+40]
	058 Move X24, [X24+1152]
	059 Compare X21, 0
	060 JumpIfNotEqual {82}
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X23]
	066 Move X9, 0x4C0000
	067 Move X8, [X0+184]
	068 Move X9, [X9+1176]
	069 Move X22, [X8]
	070 Move X0, [X9]
	071 Call 0x1C17F10
	072 Move X8, 0x4C0000
	073 Move X8, [X8+1184]
	074 Move X1, X22
	075 Move X3, X31
	076 Move X21, X0
	077 Move X2, [X8]
	078 Call Func`2<MarkToMarkAdjustmentRecord, UInt32>..ctor, X0, X1, X2
	079 Move X8, [X23]
	080 Move X8, [X8+184]
	081 Move [X8+40], X21
	082 Move X2, [X24]
	083 Move X0, X20
	084 Move X1, X21
	085 Call Enumerable.OrderBy, X0, X1
	086 Move X8, [X23]
	087 Move X20, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X8, [X23]
	094 Move X9, [X8+184]
	095 Move X25, 0x4C0000
	096 Move X24, 0x4C0000
	097 Move X21, [X9+48]
	098 Move X25, [X25+1160]
	099 Move X24, [X24+1168]
	100 Compare X21, 0
	101 JumpIfNotEqual {124}
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {108}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X8, [X23]
	108 Move X9, 0x4C0000
	109 Move X8, [X8+184]
	110 Move X9, [X9+1176]
	111 Move X22, [X8]
	112 Move X0, [X9]
	113 Call 0x1C17F10
	114 Move X8, 0x4C0000
	115 Move X8, [X8+1192]
	116 Move X1, X22
	117 Move X3, X31
	118 Move X21, X0
	119 Move X2, [X8]
	120 Call Func`2<MarkToMarkAdjustmentRecord, UInt32>..ctor, X0, X1, X2
	121 Move X8, [X23]
	122 Move X8, [X8+184]
	123 Move [X8+48], X21
	124 Move X2, [X25]
	125 Move X0, X20
	126 Move X1, X21
	127 Call Enumerable.ThenBy, X0, X1
	128 Move X1, [X24]
	129 Call Enumerable.ToList, X0
	130 Move [X19+48], X0
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X24, [X31+16]
	136 Move X23, [X31+24]
	137 Move X30, [X31+64]
	138 Move X25, [X31+72]
	139 Return 
	140 Call 0x1C17F20

