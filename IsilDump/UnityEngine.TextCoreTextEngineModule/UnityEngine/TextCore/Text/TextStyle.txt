Type: UnityEngine.TextCore.Text.TextStyle

Method: System.Int32 get_hashCode()

Disassembly:
	0x03CC7540 MOV W19, W0
	0x03CC7544 MOV W0, W8

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.UInt32[] get_styleOpeningTagArray()

Disassembly:
	0x03CC7548 BL 0x3CC5F50
	0x03CC754C ADD W8, W26, W20, 0x4, LSL

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.UInt32[] get_styleClosingTagArray()

Disassembly:
	0x03CC7ADC LDR V1, [X21 + 0x24]
	0x03CC7AE0 MOVZ W9, 0x188

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void .ctor(System.String styleName, System.String styleOpeningDefinition, System.String styleClosingDefinition)

Disassembly:
	0x03CCE900 STR X0, [X19 + 0x3B0]
	0x03CCE904 LDP X30, X19, [X31], #0x10
	0x03CCE908 BR X0
	0x03CCE90C STP X30, X21, [X31 - 0x20]!
	0x03CCE910 STP X20, X19, [X31 + 0x10]
	0x03CCE914 ADRP X21, 0x719000
	0x03CCE918 ADRP X20, 0x425000
	0x03CCE91C LDRB W8, [X21 + 0x396]
	0x03CCE920 LDR X20, [X20 + 0xE00]
	0x03CCE924 MOV X19, X0
	0x03CCE928 TBNZ X8, 0x0, 0x3CCE940
	0x03CCE92C ADRP X0, 0x425000
	0x03CCE930 LDR X0, [X0 + 0xE00]
	0x03CCE934 BL 0x1C16CF4
	0x03CCE938 MOVZ W8, 0x1
	0x03CCE93C STRB W8, [X21 + 0x396]
	0x03CCE940 LDR X8, [X19]
	0x03CCE944 LDR X1, [X20]
	0x03CCE948 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move X19, X3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move X0, X21
	013 Move [X22+16], X21
	014 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	015 Move [X22+24], W0
	016 Move [X22+32], X20
	017 Move [X22+40], X19
	018 Move X0, X22
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X30, [X31+48]

Method: System.Void RefreshStyle()

Disassembly:
	0x03CCE94C CBZ X9, 0x3CCE970
	0x03CCE950 LDR X10, [X8 + 0xB0]
	0x03CCE954 ADD X10, X10, 0x8
	0x03CCE958 LDUR X11, [X10 - 0x8]
	0x03CCE95C CMP X11, X1
	0x03CCE960 B.EQ 0x3CCE980
	0x03CCE964 SUBS X9, X9, 0x1
	0x03CCE968 ADD X10, X10, 0x10
	0x03CCE96C B.NE 0x3CCE958
	0x03CCE970 MOV X0, X19
	0x03CCE974 MOV W2, W31
	0x03CCE978 BL 0x1C5C788
	0x03CCE97C B 0x3CCE98C
	0x03CCE980 LDRSW X9, [X10]
	0x03CCE984 ADD X8, X8, X9, 0x4, LSL
	0x03CCE988 ADD X0, X8, 0x138
	0x03CCE98C LDP X8, X1, [X0]
	0x03CCE990 MOV X0, X19
	0x03CCE994 BLR X8
	0x03CCE998 MOV X0, X19
	0x03CCE99C LDP X20, X19, [X31 + 0x10]
	0x03CCE9A0 MOV X1, X31
	0x03CCE9A4 LDP X30, X21, [X31], #0x20
	0x03CCE9A8 B 0x33CB4DC
	0x03CCE9AC CMP W1, 0x1
	0x03CCE9B0 MOV X21, X0
	0x03CCE9B4 B.NE 0x3CCE9E4
	0x03CCE9B8 MOV X0, X21
	0x03CCE9BC BL 0x3EB1AD0
	0x03CCE9C0 LDR X20, [X0]
	0x03CCE9C4 BL 0x3EB1AE0
	0x03CCE9C8 MOV X0, X19
	0x03CCE9CC MOV X1, X31
	0x03CCE9D0 BL 0x33CB4DC
	0x03CCE9D4 CBNZ X20, 0x3CCE9EC
	0x03CCE9D8 LDP X20, X19, [X31 + 0x10]
	0x03CCE9DC LDP X30, X21, [X31], #0x20
	0x03CCE9E0 RET
	0x03CCE9E4 MOV X20, X31
	0x03CCE9E8 B 0x3CCE9F8
	0x03CCE9EC MOV X0, X20
	0x03CCE9F0 BL 0x1C16F18
	0x03CCE9F4 MOV X21, X0
	0x03CCE9F8 MOV X0, X19
	0x03CCE9FC MOV X1, X31
	0x03CCEA00 BL 0x33CB4DC
	0x03CCEA04 CBNZ X20, 0x3CCEA10
	0x03CCEA08 MOV X0, X21
	0x03CCEA0C BL 0x1D2C690
	0x03CCEA10 MOV X0, X20
	0x03CCEA14 BL 0x1C16F18
	0x03CCEA18 BL 0x1990590
	0x03CCEA1C STP X30, X21, [X31 - 0x20]!
	0x03CCEA20 STP X20, X19, [X31 + 0x10]
	0x03CCEA24 MOV X19, X0
	0x03CCEA28 LDR X0, [X0 + 0x10]
	0x03CCEA2C MOV X1, X31
	0x03CCEA30 MOV X2, X31
	0x03CCEA34 BL 0x33C5D2C
	0x03CCEA38 TBZ X0, 0x0, 0x3CCEA6C
	0x03CCEA3C ADRP X21, 0x719000
	0x03CCEA40 LDR X8, [X21 + 0x3B8]
	0x03CCEA44 LDR X20, [X19 + 0x10]
	0x03CCEA48 CBNZ X8, 0x3CCEA60
	0x03CCEA4C ADRP X0, 0xFFFFFFFFFCE5B000
	0x03CCEA50 ADD X0, X0, 0x309
	0x03CCEA54 BL 0x1C16CB8
	0x03CCEA58 MOV X8, X0
	0x03CCEA5C STR X0, [X21 + 0x3B8]
	0x03CCEA60 MOV X0, X20
	0x03CCEA64 BLR X8
	0x03CCEA68 STR X31, [X19 + 0x10]
	0x03CCEA6C LDP X20, X19, [X31 + 0x10]
	0x03CCEA70 LDP X30, X21, [X31], #0x20
	0x03CCEA74 RET
	0x03CCEA78 STR X30, [X31 - 0x20]!
	0x03CCEA7C STP X20, X19, [X31 + 0x10]
	0x03CCEA80 ADRP X20, 0x719000
	0x03CCEA84 LDR X1, [X20 + 0x3B8]
	0x03CCEA88 MOV X19, X0
	0x03CCEA8C CBNZ X1, 0x3CCEAA4
	0x03CCEA90 ADRP X0, 0xFFFFFFFFFCE5B000
	0x03CCEA94 ADD X0, X0, 0x309
	0x03CCEA98 BL 0x1C16CB8
	0x03CCEA9C MOV X1, X0
	0x03CCEAA0 STR X0, [X20 + 0x3B8]
	0x03CCEAA4 MOV X0, X19
	0x03CCEAA8 LDP X20, X19, [X31 + 0x10]
	0x03CCEAAC LDR X30, [X31], #0x20
	0x03CCEAB0 BR X1
	0x03CCEAB4 STR X30, [X31 - 0x20]!
	0x03CCEAB8 STP X20, X19, [X31 + 0x10]
	0x03CCEABC ADRP X20, 0x719000
	0x03CCEAC0 LDR X8, [X20 + 0x3A0]
	0x03CCEAC4 MOV X19, X0
	0x03CCEAC8 CBNZ X8, 0x3CCEAE0
	0x03CCEACC ADRP X0, 0xFFFFFFFFFCE5D000
	0x03CCEAD0 ADD X0, X0, 0x23A
	0x03CCEAD4 BL 0x1C16CB8
	0x03CCEAD8 MOV X8, X0
	0x03CCEADC STR X0, [X20 + 0x3A0]
	0x03CCEAE0 MOV X0, X19
	0x03CCEAE4 BLR X8
	0x03CCEAE8 LDP X20, X19, [X31 + 0x10]
	0x03CCEAEC SUB W0, W0, 0x1
	0x03CCEAF0 LDR X30, [X31], #0x20
	0x03CCEAF4 RET
	0x03CCEAF8 STR X30, [X31 - 0x20]!
	0x03CCEAFC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x71A000
	008 Move W8, [X20+906]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x44F000
	015 Move X0, [X0+3336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+906], W8
	019 Move X0, [X19+16]
	020 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	021 Move X8, [X19+32]
	022 Move [X19+24], W0
	023 Compare X8, 0
	024 JumpIfEqual {119}
	025 Move X22, 0x44F000
	026 Move X22, [X22+3336]
	027 Move W20, [X8+16]
	028 Move X0, [X22]
	029 Move W1, W20
	030 Call 0x1C17D6C
	031 Move [X19+48], X0
	032 Move X0, [X22]
	033 Move W1, W20
	034 Call 0x1C17D6C
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X19+64], X0
	037 Move X21, X31
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {119}
	041 Move X23, [X19+48]
	042 Move W1, W21
	043 Move X2, X31
	044 Call String.get_Chars, X0, X1
	045 Compare X23, 0
	046 JumpIfEqual {119}
	047 Move W8, [X23+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 And W8, W0, 0xFFFF
	050 Add X9, X23, X21
	051 Move [X9+32], W8
	052 Move X0, [X19+32]
	053 Compare X0, 0
	054 JumpIfEqual {119}
	055 Move X23, [X19+64]
	056 Move W1, W21
	057 Move X2, X31
	058 Call String.get_Chars, X0, X1
	059 Compare X23, 0
	060 JumpIfEqual {119}
	061 Move W8, [X23+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X9, X23, X21
	064 Add X21, X21, 1
	065 And W8, W0, 0xFFFF
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X9+32], W8
	068 Move X8, [X19+40]
	069 Compare X8, 0
	070 JumpIfEqual {119}
	071 Move W20, [X8+16]
	072 Move X0, [X22]
	073 Move W1, W20
	074 Call 0x1C17D6C
	075 Move [X19+56], X0
	076 Move X0, [X22]
	077 Move W1, W20
	078 Call 0x1C17D6C
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X19+72], X0
	081 Move X21, X31
	082 Move X0, [X19+40]
	083 Compare X0, 0
	084 JumpIfEqual {119}
	085 Move X22, [X19+56]
	086 Move W1, W21
	087 Move X2, X31
	088 Call String.get_Chars, X0, X1
	089 Compare X22, 0
	090 JumpIfEqual {119}
	091 Move W8, [X22+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 And W8, W0, 0xFFFF
	094 Add X9, X22, X21
	095 Move [X9+32], W8
	096 Move X0, [X19+40]
	097 Compare X0, 0
	098 JumpIfEqual {119}
	099 Move X22, [X19+72]
	100 Move W1, W21
	101 Move X2, X31
	102 Call String.get_Chars, X0, X1
	103 Compare X22, 0
	104 JumpIfEqual {119}
	105 Move W8, [X22+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add X9, X22, X21
	108 Add X21, X21, 1
	109 And W8, W0, 0xFFFF
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X9+32], W8
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Move X23, [X31+56]
	118 Return 
	119 Call 0x1C17F20
	120 Call 0x1C17F28

