Type: UnityEngine.TextCore.Text.Character

Method: System.Void .ctor()

Disassembly:
	0x03C9F900 STR X23, [X19 + 0x28]
	0x03C9F904 ADRP X23, 0x4B9000
	0x03C9F908 LDR X0, [X24]
	0x03C9F90C LDR X23, [X23 + 0xBD0]
	0x03C9F910 BL 0x1C16F10
	0x03C9F914 LDR X2, [X23]
	0x03C9F918 MOVZ W1, 0x8
	0x03C9F91C MOV X22, X0
	0x03C9F920 BL 0x2FC4EFC
	0x03C9F924 SUB W3, W21, W25

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move W8, 1
	007 Move W9, 0x3F800000
	008 Move [X19+16], W8
	009 Move [X19+44], W9
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void .ctor(System.UInt32 unicode, UnityEngine.TextCore.Text.FontAsset fontAsset, UnityEngine.TextCore.Glyph glyph)

Disassembly:
	0x03C9F938 MOV X5, X31
	0x03C9F93C STP X31, X31, [X31 + 0x60]
	0x03C9F940 BL 0x3C9C108
	0x03C9F944 CBZ X22, 0x3C9F9F0
	0x03C9F948 ADRP X9, 0x4B9000
	0x03C9F94C LDR X9, [X9 + 0xBC8]
	0x03C9F950 LDR W10, [X22 + 0x1C]
	0x03C9F954 LDP X1, X2, [X31 + 0x60]
	0x03C9F958 LDR X8, [X22 + 0x10]
	0x03C9F95C LDR X9, [X9]
	0x03C9F960 ADD W10, W10, 0x1
	0x03C9F964 STR W10, [X22 + 0x1C]
	0x03C9F968 CBZ X8, 0x3C9F9F0
	0x03C9F96C LDRSW X10, [X22 + 0x18]
	0x03C9F970 LDR W11, [X8 + 0x18]
	0x03C9F974 CMP W10, W11
	0x03C9F978 B.CS 0x3C9F990
	0x03C9F97C ADD W9, W10, 0x1
	0x03C9F980 ADD X8, X8, X10, 0x4, LSL
	0x03C9F984 STR W9, [X22 + 0x18]
	0x03C9F988 STP X1, X2, [X8 + 0x20]
	0x03C9F98C B 0x3C9F9A4
	0x03C9F990 LDR X8, [X9 + 0x20]
	0x03C9F994 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, W1
	007 Move X1, X31
	008 Move X20, X3
	009 Move X21, X2
	010 Move X19, X0
	011 Call Object..ctor, X0
	012 Move W8, 1
	013 Move [X19+20], W22
	014 Move [X19+16], W8
	015 Move [X19+24], X21
	016 Move [X19+32], X20
	017 Compare X20, 0
	018 JumpIfEqual {31}
	019 Move X0, X20
	020 Move X1, X31
	021 Call Glyph.get_index, X0
	022 Move W8, 0x3F800000
	023 Move [X19+40], W0
	024 Move [X19+44], W8
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Return 
	031 Call 0x1C17F20

Method: System.Void .ctor(System.UInt32 unicode, System.UInt32 glyphIndex)

Disassembly:
	0x03C9F9B8 MOV X20, X0
	0x03C9F9BC BL 0x2FC4EFC
	0x03C9F9C0 MOV X0, X19
	0x03C9F9C4 STR X20, [X19 + 0x160]
	0x03C9F9C8 BL 0x3C9EBEC
	0x03C9F9CC MOV X0, X19
	0x03C9F9D0 LDP X20, X19, [X31 + 0x110]
	0x03C9F9D4 LDP X22, X21, [X31 + 0x100]
	0x03C9F9D8 LDP X24, X23, [X31 + 0xF0]
	0x03C9F9DC LDP X26, X25, [X31 + 0xE0]
	0x03C9F9E0 LDP X28, X27, [X31 + 0xD0]
	0x03C9F9E4 LDP X29, X30, [X31 + 0xC0]
	0x03C9F9E8 ADD X31, X31, 0x120
	0x03C9F9EC RET
	0x03C9F9F0 BL 0x1C16F20
	0x03C9F9F4 BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move W9, 0x3F800000
	011 Move [X21+20], W20
	012 Move [X21+40], W19
	013 Move [X21+44], W9
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W8, 1
	017 Move [X21+24], X31
	018 Move [X21+32], X31
	019 Move [X21+16], W8
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 

