Type: UnityEngine.TextCore.Text.FontAssetUtilities

Method: UnityEngine.TextCore.Text.Character GetCharacterFromFontAsset(System.UInt32 unicode, UnityEngine.TextCore.Text.FontAsset sourceFontAsset, System.Boolean includeFallbacks, UnityEngine.TextCore.Text.FontStyles fontStyle, UnityEngine.TextCore.Text.TextFontWeight fontWeight, out System.Boolean isAlternativeTypeface)

Disassembly:
	0x03CA8F78 LDP X22, X21, [X31 + 0x20]
	0x03CA8F7C LDP X24, X23, [X31 + 0x10]
	0x03CA8F80 LDP X30, X25, [X31], #0x40
	0x03CA8F84 RET
	0x03CA8F88 BL 0x1C16F20
	0x03CA8F8C BL 0x1C16F28
	0x03CA8F90 STP X30, X19, [X31 - 0x10]!
	0x03CA8F94 MOV X19, X0
	0x03CA8F98 LDR X0, [X0 + 0x20]
	0x03CA8F9C MOV X1, X31
	0x03CA8FA0 BL 0x32277A8
	0x03CA8FA4 TBZ X0, 0x0, 0x3CA8FC8
	0x03CA8FA8 LDR X1, [X19 + 0x18]
	0x03CA8FAC LDR W3, [X19 + 0x8]
	0x03CA8FB0 MOV X0, X31
	0x03CA8FB4 MOV W2, W31
	0x03CA8FB8 MOV X4, X31
	0x03CA8FBC BL 0x322EAE4
	0x03CA8FC0 STR X0, [X19 + 0x20]
	0x03CA8FC4 B 0x3CA8FCC
	0x03CA8FC8 LDR X0, [X19 + 0x20]
	0x03CA8FCC LDP X30, X19, [X31], #0x10
	0x03CA8FD0 RET
	0x03CA8FD4 STR X30, [X31 - 0x50]!
	0x03CA8FD8 STP X26, X25, [X31 + 0x10]
	0x03CA8FDC STP X24, X23, [X31 + 0x20]
	0x03CA8FE0 STP X22, X21, [X31 + 0x30]
	0x03CA8FE4 STP X20, X19, [X31 + 0x40]
	0x03CA8FE8 ADRP X20, 0x73F000
	0x03CA8FEC LDRB W8, [X20 + 0x310]
	0x03CA8FF0 MOV X19, X1
	0x03CA8FF4 MOV X21, X0
	0x03CA8FF8 TBNZ X8, 0x0, 0x3CA9040
	0x03CA8FFC ADRP X0, 0x4B9000
	0x03CA9000 LDR X0, [X0 + 0x618]
	0x03CA9004 BL 0x1C16CF4
	0x03CA9008 ADRP X0, 0x4B8000
	0x03CA900C LDR X0, [X0 + 0x620]
	0x03CA9010 BL 0x1C16CF4
	0x03CA9014 ADRP X0, 0x4B8000
	0x03CA9018 LDR X0, [X0 + 0x628]
	0x03CA901C BL 0x1C16CF4
	0x03CA9020 ADRP X0, 0x44E000
	0x03CA9024 LDR X0, [X0 + 0xCA0]
	0x03CA9028 BL 0x1C16CF4
	0x03CA902C ADRP X0, 0x4B8000
	0x03CA9030 LDR X0, [X0 + 0x268]
	0x03CA9034 BL 0x1C16CF4
	0x03CA9038 MOVZ W8, 0x1
	0x03CA903C STRB W8, [X20 + 0x310]
	0x03CA9040 STR X31, [X31 + 0x8]
	0x03CA9044 CBZ X21, 0x3CA9398
	0x03CA9048 ADRP X26, 0x4B8000
	0x03CA904C LDR X26, [X26 + 0x268]
	0x03CA9050 MOV X0, X21
	0x03CA9054 MOV X1, X31
	0x03CA9058 BL 0x3C385F8
	0x03CA905C LDR X8, [X26]
	0x03CA9060 MOV W23, W0
	0x03CA9064 LDR W9, [X8 + 0xE0]
	0x03CA9068 CBNZ W9, 0x3CA9074
	0x03CA906C MOV X0, X8
	0x03CA9070 BL 0x1C16DFC
	0x03CA9074 CBZ X19, 0x3CA9398

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x740000
	011 Move W8, [X25+770]
	012 Move X19, X5
	013 Move W20, W4
	014 Move W21, W3
	015 Move W23, W2
	016 Move X22, X1
	017 Move W24, W0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x4BA000
	023 Move X0, [X0+1512]
	024 Call 0x1C17CF4
	025 Move X0, 0x453000
	026 Move X0, [X0+1656]
	027 Call 0x1C17CF4
	028 Move X0, 0x453000
	029 Move X0, [X0+1672]
	030 Call 0x1C17CF4
	031 Move X0, 0x44D000
	032 Move X0, [X0+3592]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+770], W8
	036 Move TEMP, X23
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {63}
	040 Move X26, 0x4BA000
	041 Move X26, [X26+1512]
	042 Move X8, [X26]
	043 Move X8, [X8+184]
	044 Move X0, [X8]
	045 Compare X0, 0
	046 JumpIfEqual {51}
	047 Move X8, 0x452000
	048 Move X8, [X8+1656]
	049 Move X1, [X8]
	050 Call HashSet`1<Int32>.Clear, X0
	051 Move X8, 0x44C000
	052 Move X8, [X8+3592]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X8, 0x452000
	056 Move X8, [X8+1672]
	057 Move X25, X0
	058 Move X1, [X8]
	059 Call HashSet`1<Int32>..ctor, X0
	060 Move X8, [X26]
	061 Move X8, [X8+184]
	062 Move [X8], X25
	063 And W2, W23, 1
	064 Move W0, W24
	065 Move X1, X22
	066 Move W3, W21
	067 Move W4, W20
	068 Move X5, X19
	069 Move X20, [X31+64]
	070 Move X19, [X31+72]
	071 Move X22, [X31+48]
	072 Move X21, [X31+56]
	073 Move X24, [X31+32]
	074 Move X23, [X31+40]
	075 Move X26, [X31+16]
	076 Move X25, [X31+24]
	077 Move X30, [X31+80]

Method: UnityEngine.TextCore.Text.Character GetCharacterFromFontAsset_Internal(System.UInt32 unicode, UnityEngine.TextCore.Text.FontAsset sourceFontAsset, System.Boolean includeFallbacks, UnityEngine.TextCore.Text.FontStyles fontStyle, UnityEngine.TextCore.Text.TextFontWeight fontWeight, out System.Boolean isAlternativeTypeface)

Disassembly:
	0x03CA9078 LDR X8, [X26]
	0x03CA907C MOV X0, X19
	0x03CA9080 MOV X2, X31
	0x03CA9084 LDR X8, [X8 + 0xB8]
	0x03CA9088 LDR W1, [X8]
	0x03CA908C BL 0x3C14AB8
	0x03CA9090 CBZ X0, 0x3CA9398
	0x03CA9094 ADRP X25, 0x4B8000
	0x03CA9098 LDR X25, [X25 + 0x628]
	0x03CA909C MOV X1, X31
	0x03CA90A0 MOV X22, X0
	0x03CA90A4 BL 0x3C385F8
	0x03CA90A8 LDR X8, [X25]
	0x03CA90AC MOV W20, W0
	0x03CA90B0 LDR W9, [X8 + 0xE0]
	0x03CA90B4 CBNZ W9, 0x3CA90C4
	0x03CA90B8 MOV X0, X8
	0x03CA90BC BL 0x1C16DFC
	0x03CA90C0 LDR X8, [X25]
	0x03CA90C4 LDR X8, [X8 + 0xB8]
	0x03CA90C8 LDR X0, [X8]
	0x03CA90CC CBZ X0, 0x3CA9398
	0x03CA90D0 ADRP X8, 0x4B8000
	0x03CA90D4 LDR X8, [X8 + 0x620]
	0x03CA90D8 MOV W20, W20
	0x03CA90DC BFM X20, X23, 0x20, 0x1F
	0x03CA90E0 ADD X2, X31, 0x8
	0x03CA90E4 LDR X3, [X8]
	0x03CA90E8 MOV X1, X20
	0x03CA90EC BL 0x2A4FD38
	0x03CA90F0 TBZ X0, 0x0, 0x3CA9144
	0x03CA90F4 MOV X0, X21
	0x03CA90F8 MOV X1, X31
	0x03CA90FC BL 0x3C15314
	0x03CA9100 LDR X8, [X31 + 0x8]
	0x03CA9104 CBZ X8, 0x3CA9398
	0x03CA9108 MOV W19, W0
	0x03CA910C MOV X0, X8
	0x03CA9110 MOV X1, X31
	0x03CA9114 BL 0x3C15314
	0x03CA9118 CMP W19, W0
	0x03CA911C B.EQ 0x3CA937C
	0x03CA9120 LDR X0, [X25]
	0x03CA9124 LDR X19, [X31 + 0x8]
	0x03CA9128 LDR W8, [X0 + 0xE0]
	0x03CA912C CBNZ W8, 0x3CA9134
	0x03CA9130 BL 0x1C16DFC
	0x03CA9134 MOV X0, X21
	0x03CA9138 MOV X1, X19
	0x03CA913C BL 0x3CA939C
	0x03CA9140 B 0x3CA937C
	0x03CA9144 LDR X0, [X26]
	0x03CA9148 LDR W8, [X0 + 0xE0]
	0x03CA914C CBNZ W8, 0x3CA9158
	0x03CA9150 BL 0x1C16DFC
	0x03CA9154 LDR X0, [X26]
	0x03CA9158 LDR X8, [X0 + 0xB8]
	0x03CA915C MOV X0, X21
	0x03CA9160 MOV X2, X31
	0x03CA9164 LDR W1, [X8 + 0x6C]
	0x03CA9168 BL 0x3C14D08
	0x03CA916C TBZ X0, 0x0, 0x3CA931C
	0x03CA9170 LDR X0, [X26]
	0x03CA9174 LDR W8, [X0 + 0xE0]
	0x03CA9178 CBNZ W8, 0x3CA9184
	0x03CA917C BL 0x1C16DFC
	0x03CA9180 LDR X0, [X26]
	0x03CA9184 LDR X8, [X0 + 0xB8]
	0x03CA9188 MOV X0, X19
	0x03CA918C MOV X2, X31
	0x03CA9190 LDR W1, [X8 + 0x6C]
	0x03CA9194 BL 0x3C14D08
	0x03CA9198 ADRP X8, 0x44E000
	0x03CA919C LDR X8, [X8 + 0xCA0]
	0x03CA91A0 MOV W24, W0
	0x03CA91A4 LDR X8, [X8]
	0x03CA91A8 MOV X0, X8
	0x03CA91AC BL 0x1C16F10
	0x03CA91B0 MOV X23, X0
	0x03CA91B4 TBZ X24, 0x0, 0x3CA9330
	0x03CA91B8 MOV X0, X23
	0x03CA91BC MOV X1, X21
	0x03CA91C0 MOV X2, X31
	0x03CA91C4 BL 0x3C145DC
	0x03CA91C8 STR X23, [X31 + 0x8]
	0x03CA91CC CBZ X23, 0x3CA9398
	0x03CA91D0 MOVZ W1, 0x3D
	0x03CA91D4 MOV X0, X23
	0x03CA91D8 MOV X2, X31
	0x03CA91DC BL 0x3C396EC
	0x03CA91E0 LDR X0, [X26]
	0x03CA91E4 LDR X21, [X31 + 0x8]
	0x03CA91E8 LDR W8, [X0 + 0xE0]
	0x03CA91EC CBNZ W8, 0x3CA91F4
	0x03CA91F0 BL 0x1C16DFC
	0x03CA91F4 CBZ X21, 0x3CA9398
	0x03CA91F8 LDR X8, [X26]
	0x03CA91FC MOV X0, X21
	0x03CA9200 MOV X2, X22
	0x03CA9204 MOV X3, X31
	0x03CA9208 LDR X8, [X8 + 0xB8]
	0x03CA920C LDR W1, [X8]
	0x03CA9210 BL 0x3C14C34
	0x03CA9214 LDR X8, [X26]
	0x03CA9218 LDR X22, [X31 + 0x8]
	0x03CA921C MOV X0, X19
	0x03CA9220 MOV X2, X31
	0x03CA9224 LDR X8, [X8 + 0xB8]
	0x03CA9228 LDR W21, [X8 + 0x6C]
	0x03CA922C MOV W1, W21
	0x03CA9230 BL 0x3C15F98
	0x03CA9234 CBZ X22, 0x3CA9398
	0x03CA9238 MOV X0, X22
	0x03CA923C MOV W1, W21
	0x03CA9240 MOV X2, X31
	0x03CA9244 BL 0x3C15CD8
	0x03CA9248 LDR X8, [X26]
	0x03CA924C LDR X22, [X31 + 0x8]
	0x03CA9250 MOV X0, X19
	0x03CA9254 MOV X2, X31
	0x03CA9258 LDR X8, [X8 + 0xB8]
	0x03CA925C LDR W21, [X8 + 0x80]
	0x03CA9260 MOV W1, W21
	0x03CA9264 BL 0x3C15F98
	0x03CA9268 CBZ X22, 0x3CA9398
	0x03CA926C MOV X0, X22
	0x03CA9270 MOV W1, W21
	0x03CA9274 MOV X2, X31
	0x03CA9278 BL 0x3C15CD8
	0x03CA927C LDR X8, [X26]
	0x03CA9280 LDR X22, [X31 + 0x8]
	0x03CA9284 MOV X0, X19
	0x03CA9288 MOV X2, X31
	0x03CA928C LDR X8, [X8 + 0xB8]
	0x03CA9290 LDR W21, [X8 + 0x84]
	0x03CA9294 MOV W1, W21
	0x03CA9298 BL 0x3C15F98
	0x03CA929C CBZ X22, 0x3CA9398
	0x03CA92A0 MOV X0, X22
	0x03CA92A4 MOV W1, W21
	0x03CA92A8 MOV X2, X31
	0x03CA92AC BL 0x3C15CD8
	0x03CA92B0 LDR X8, [X26]
	0x03CA92B4 LDR X22, [X31 + 0x8]
	0x03CA92B8 MOV X0, X19
	0x03CA92BC MOV X2, X31
	0x03CA92C0 LDR X8, [X8 + 0xB8]
	0x03CA92C4 LDR W21, [X8 + 0x48]
	0x03CA92C8 MOV W1, W21
	0x03CA92CC BL 0x3C15F98
	0x03CA92D0 CBZ X22, 0x3CA9398
	0x03CA92D4 MOV X0, X22
	0x03CA92D8 MOV W1, W21
	0x03CA92DC MOV X2, X31
	0x03CA92E0 BL 0x3C15CD8
	0x03CA92E4 LDR X8, [X26]
	0x03CA92E8 LDR X22, [X31 + 0x8]
	0x03CA92EC MOV X0, X19
	0x03CA92F0 MOV X2, X31
	0x03CA92F4 LDR X8, [X8 + 0xB8]
	0x03CA92F8 LDR W21, [X8 + 0x4C]
	0x03CA92FC MOV W1, W21
	0x03CA9300 BL 0x3C15F98
	0x03CA9304 CBZ X22, 0x3CA9398
	0x03CA9308 MOV X0, X22
	0x03CA930C MOV W1, W21
	0x03CA9310 MOV X2, X31
	0x03CA9314 BL 0x3C15CD8
	0x03CA9318 B 0x3CA9344
	0x03CA931C ADRP X8, 0x44E000
	0x03CA9320 LDR X8, [X8 + 0xCA0]
	0x03CA9324 LDR X0, [X8]
	0x03CA9328 BL 0x1C16F10
	0x03CA932C MOV X23, X0
	0x03CA9330 MOV X0, X23
	0x03CA9334 MOV X1, X19
	0x03CA9338 MOV X2, X31
	0x03CA933C BL 0x3C145DC
	0x03CA9340 STR X23, [X31 + 0x8]
	0x03CA9344 LDR X0, [X25]
	0x03CA9348 LDR W8, [X0 + 0xE0]
	0x03CA934C CBNZ W8, 0x3CA9358
	0x03CA9350 BL 0x1C16DFC
	0x03CA9354 LDR X0, [X25]
	0x03CA9358 LDR X8, [X0 + 0xB8]
	0x03CA935C LDR X0, [X8]
	0x03CA9360 CBZ X0, 0x3CA9398
	0x03CA9364 ADRP X8, 0x4B8000
	0x03CA9368 LDR X2, [X31 + 0x8]
	0x03CA936C LDR X8, [X8 + 0x618]
	0x03CA9370 MOV X1, X20
	0x03CA9374 LDR X3, [X8]
	0x03CA9378 BL 0x2A4E330
	0x03CA937C LDR X0, [X31 + 0x8]
	0x03CA9380 LDP X20, X19, [X31 + 0x40]
	0x03CA9384 LDP X22, X21, [X31 + 0x30]
	0x03CA9388 LDP X24, X23, [X31 + 0x20]
	0x03CA938C LDP X26, X25, [X31 + 0x10]
	0x03CA9390 LDR X30, [X31], #0x50
	0x03CA9394 RET
	0x03CA9398 BL 0x1C16F20
	0x03CA939C STR D12, [X31 - 0x50]!
	0x03CA93A0 STP D11, D10, [X31 + 0x8]
	0x03CA93A4 STP D9, D8, [X31 + 0x18]
	0x03CA93A8 STR X30, [X31 + 0x28]
	0x03CA93AC STP X22, X21, [X31 + 0x30]
	0x03CA93B0 STP X20, X19, [X31 + 0x40]
	0x03CA93B4 ADRP X21, 0x73E000
	0x03CA93B8 ADRP X22, 0x4B8000
	0x03CA93BC LDRB W8, [X21 + 0x312]
	0x03CA93C0 LDR X22, [X22 + 0x268]
	0x03CA93C4 MOV X19, X1
	0x03CA93C8 MOV X20, X0
	0x03CA93CC TBNZ X8, 0x0, 0x3CA93E4
	0x03CA93D0 ADRP X0, 0x4B8000
	0x03CA93D4 LDR X0, [X0 + 0x268]
	0x03CA93D8 BL 0x1C16CF4
	0x03CA93DC MOVZ W8, 0x1
	0x03CA93E0 STRB W8, [X21 + 0x312]
	0x03CA93E4 LDR X0, [X22]
	0x03CA93E8 LDR W8, [X0 + 0xE0]
	0x03CA93EC CBNZ W8, 0x3CA93F4
	0x03CA93F0 BL 0x1C16DFC
	0x03CA93F4 CBZ X20, 0x3CA9620
	0x03CA93F8 LDR X8, [X22]
	0x03CA93FC MOV X0, X20
	0x03CA9400 MOV X2, X31
	0x03CA9404 LDR X8, [X8 + 0xB8]
	0x03CA9408 LDR W1, [X8 + 0x6C]
	0x03CA940C BL 0x3C14D08
	0x03CA9410 TBZ X0, 0x0, 0x3CA9604
	0x03CA9414 LDR X0, [X22]
	0x03CA9418 LDR W8, [X0 + 0xE0]
	0x03CA941C CBNZ W8, 0x3CA9424
	0x03CA9420 BL 0x1C16DFC
	0x03CA9424 CBZ X19, 0x3CA9620
	0x03CA9428 LDR X8, [X22]
	0x03CA942C MOV X0, X19
	0x03CA9430 MOV X2, X31
	0x03CA9434 LDR X8, [X8 + 0xB8]
	0x03CA9438 LDR W1, [X8 + 0x6C]
	0x03CA943C BL 0x3C14D08
	0x03CA9440 TBZ X0, 0x0, 0x3CA9604
	0x03CA9444 LDR X0, [X22]
	0x03CA9448 LDR W8, [X0 + 0xE0]
	0x03CA944C CBNZ W8, 0x3CA9458
	0x03CA9450 BL 0x1C16DFC
	0x03CA9454 LDR X0, [X22]
	0x03CA9458 LDR X8, [X0 + 0xB8]
	0x03CA945C MOV X0, X19
	0x03CA9460 MOV X2, X31
	0x03CA9464 LDR W1, [X8]
	0x03CA9468 BL 0x3C14AB8
	0x03CA946C LDR X8, [X22]
	0x03CA9470 MOV X21, X0
	0x03CA9474 MOV X0, X19
	0x03CA9478 MOV X2, X31
	0x03CA947C LDR X8, [X8 + 0xB8]
	0x03CA9480 LDR W1, [X8 + 0x6C]
	0x03CA9484 BL 0x3C15F98
	0x03CA9488 LDR X8, [X22]
	0x03CA948C MOV X0, X19
	0x03CA9490 MOV X2, X31
	0x03CA9494 MOV V9.16B, V0.16B
	0x03CA9498 LDR X8, [X8 + 0xB8]
	0x03CA949C LDR W1, [X8 + 0x80]
	0x03CA94A0 BL 0x3C15F98
	0x03CA94A4 LDR X8, [X22]
	0x03CA94A8 MOV X0, X19
	0x03CA94AC MOV X2, X31
	0x03CA94B0 MOV V10.16B, V0.16B
	0x03CA94B4 LDR X8, [X8 + 0xB8]
	0x03CA94B8 LDR W1, [X8 + 0x84]
	0x03CA94BC BL 0x3C15F98

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x73F000
	015 Move W8, [X19+771]
	016 Move X29, X5
	017 Move W20, W4
	018 Move W21, W3
	019 Move W24, W2
	020 Move X23, X1
	021 Move W22, W0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x4B9000
	027 Move X0, [X0+1520]
	028 Call 0x1C17CF4
	029 Move X0, 0x4B9000
	030 Move X0, [X0+1528]
	031 Call 0x1C17CF4
	032 Move X0, 0x4B9000
	033 Move X0, [X0+1512]
	034 Call 0x1C17CF4
	035 Move X0, 0x44D000
	036 Move X0, [X0+2520]
	037 Call 0x1C17CF4
	038 Move X0, 0x4B9000
	039 Move X0, [X0+1200]
	040 Call 0x1C17CF4
	041 Move X0, 0x4B9000
	042 Move X0, [X0+1208]
	043 Call 0x1C17CF4
	044 Move X0, 0x44B000
	045 Move X0, [X0+1432]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+771], W8
	049 Move X27, 0x4B9000
	050 Move X27, [X27+1528]
	051 Move [X29], W31
	052 Move [X31+8], X31
	053 Move TEMP, X21
	054 And TEMP, TEMP, 2
	055 Compare TEMP, 2
	056 JumpIfEqual {60}
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Compare X23, 0
	059 JumpIfNotEqual {174}
	060 Compare X23, 0
	061 JumpIfEqual {324}
	062 Move X8, [X23+384]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, 9
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W9, 3
	072 NotImplemented "Instruction CINC not yet implemented."
	073 Move W9, 4
	074 Move W10, 6
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W10, 5
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Move W9, 4
	080 Move W10, 2
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSINC not yet implemented."
	084 Move W9, 7
	085 Move W9, 8
	086 Move W9, 4
	087 Compare X8, 0
	088 JumpIfEqual {324}
	089 Move W10, [X8+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X19, 0x44B000
	092 Move X19, [X19+1432]
	093 Add X8, X8, X9
	094 Add X9, X8, 40
	095 Add X8, X8, 32
	096 Move X0, [X19]
	097 And W31, W21, 2
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Move X25, [X8]
	100 Move W9, [X0+224]
	101 Compare W9, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X25
	105 Move X1, X31
	106 Move X2, X31
	107 Call Object.op_Inequality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {174}
	112 Compare X25, 0
	113 JumpIfEqual {324}
	114 Move X0, [X25+304]
	115 Compare X0, 0
	116 JumpIfNotEqual {120}
	117 Move X0, X25
	118 Call FontAsset.ReadFontAssetDefinition, X0
	119 Move X0, [X25+304]
	120 Compare X0, 0
	121 JumpIfEqual {324}
	122 Move X3, [X27]
	123 Add X2, X31, 8
	124 Move W1, W22
	125 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {160}
	130 Move X8, [X31+8]
	131 Compare X8, 0
	132 JumpIfEqual {324}
	133 Move X0, [X19]
	134 Move X26, [X8+24]
	135 Move W9, [X0+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X26
	140 Move X1, X31
	141 Move X2, X31
	142 Call Object.op_Inequality, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {172}
	147 Move X0, [X25+304]
	148 Compare X0, 0
	149 JumpIfNotEqual {153}
	150 Move X0, X25
	151 Call FontAsset.ReadFontAssetDefinition, X0
	152 Move X0, [X25+304]
	153 Compare X0, 0
	154 JumpIfEqual {324}
	155 Move X8, 0x4B9000
	156 Move X8, [X8+1520]
	157 Move W1, W22
	158 Move X2, [X8]
	159 Call Dictionary`2<UInt32, Object>.Remove, X0, X1
	160 Move W8, [X25+168]
	161 Subtract W8, W8, 1
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add X2, X31, 8
	164 Move X0, X25
	165 Move W1, W22
	166 Move W3, W31
	167 Call FontAsset.TryAddCharacterInternal, X0, X1, X2, X3
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {174}
	172 Move W8, 1
	173 Move [X29], W8
	174 Move X0, [X23+304]
	175 Compare X0, 0
	176 JumpIfNotEqual {180}
	177 Move X0, X23
	178 Call FontAsset.ReadFontAssetDefinition, X0
	179 Move X0, [X23+304]
	180 Compare X0, 0
	181 JumpIfEqual {324}
	182 Move X3, [X27]
	183 Add X2, X31, 8
	184 Move W1, W22
	185 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {222}
	190 Move X8, [X31+8]
	191 Compare X8, 0
	192 JumpIfEqual {324}
	193 Move X9, 0x44B000
	194 Move X9, [X9+1432]
	195 Move X25, [X8+24]
	196 Move X0, [X9]
	197 Move W9, [X0+224]
	198 Compare W9, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X25
	202 Move X1, X31
	203 Move X2, X31
	204 Call Object.op_Inequality, X0, X1
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {234}
	209 Move X0, [X23+304]
	210 Compare X0, 0
	211 JumpIfNotEqual {215}
	212 Move X0, X23
	213 Call FontAsset.ReadFontAssetDefinition, X0
	214 Move X0, [X23+304]
	215 Compare X0, 0
	216 JumpIfEqual {324}
	217 Move X8, 0x4B9000
	218 Move X8, [X8+1520]
	219 Move W1, W22
	220 Move X2, [X8]
	221 Call Dictionary`2<UInt32, Object>.Remove, X0, X1
	222 Move W8, [X23+168]
	223 Subtract W8, W8, 1
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X2, X31, 8
	226 Move X0, X23
	227 Move W1, W22
	228 Move W3, W31
	229 Call FontAsset.TryAddCharacterInternal, X0, X1, X2, X3
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {235}
	234 Move X0, [X31+8]
	235 Move X8, [X31+8]
	236 Move X0, X31
	237 Compare X8, 0
	238 JumpIfNotEqual {310}
	239 Move TEMP, X24
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {310}
	243 Move X23, [X23+376]
	244 Compare X23, 0
	245 JumpIfEqual {309}
	246 Move W26, [X23+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X27, 0x4B9000
	249 Move X28, 0x44B000
	250 Move X19, 0x44D000
	251 Move X27, [X27+1208]
	252 Move X28, [X28+1432]
	253 Move X19, [X19+2520]
	254 Move W24, W31
	255 Move X2, [X27]
	256 Move X0, X23
	257 Move W1, W24
	258 Call List`1<Object>.get_Item, X0, X1
	259 Move X8, [X28]
	260 Move X25, X0
	261 Move W9, [X8+224]
	262 Compare W9, 0
	263 JumpIfNotEqual {266}
	264 Move X0, X8
	265 Call 0x1C17DFC
	266 Move X0, X25
	267 Move X1, X31
	268 Move X2, X31
	269 Call Object.op_Equality, X0, X1
	270 Move TEMP, X0
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {307}
	274 Compare X25, 0
	275 JumpIfEqual {324}
	276 Move W1, [X25+32]
	277 Compare W1, 0
	278 JumpIfNotEqual {284}
	279 Move X0, X25
	280 Move X1, X31
	281 Call Object.GetInstanceID, X0
	282 Move W1, W0
	283 Move [X25+32], W0
	284 Move X8, 0x4B9000
	285 Move X8, [X8+1512]
	286 Move X8, [X8]
	287 Move X8, [X8+184]
	288 Move X0, [X8]
	289 Compare X0, 0
	290 JumpIfEqual {324}
	291 Move X2, [X19]
	292 Call HashSet`1<Int32>.Add, X0, X1
	293 Move TEMP, X0
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfNotEqual {307}
	297 Move W2, 1
	298 Move W0, W22
	299 Move X1, X25
	300 Move W3, W21
	301 Move W4, W20
	302 Move X5, X29
	303 Call FontAssetUtilities.GetCharacterFromFontAsset_Internal, X0, X1, X2, X3, X4, X5
	304 Move [X31+8], X0
	305 Compare X0, 0
	306 JumpIfNotEqual {310}
	307 Add W24, W24, 1
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X0, X31
	310 Move X20, [X31+96]
	311 Move X19, [X31+104]
	312 Move X22, [X31+80]
	313 Move X21, [X31+88]
	314 Move X24, [X31+64]
	315 Move X23, [X31+72]
	316 Move X26, [X31+48]
	317 Move X25, [X31+56]
	318 Move X28, [X31+32]
	319 Move X27, [X31+40]
	320 Move X29, [X31+16]
	321 Move X30, [X31+24]
	322 Add X31, X31, 112
	323 Return X0
	324 Call 0x1C17F20
	325 Call 0x1C17F28

Method: UnityEngine.TextCore.Text.Character GetCharacterFromFontAssets(System.UInt32 unicode, UnityEngine.TextCore.Text.FontAsset sourceFontAsset, System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> fontAssets, System.Boolean includeFallbacks, UnityEngine.TextCore.Text.FontStyles fontStyle, UnityEngine.TextCore.Text.TextFontWeight fontWeight, out System.Boolean isAlternativeTypeface)

Disassembly:
	0x03CA94C8 MOV X2, X31
	0x03CA94CC MOV V11.16B, V0.16B
	0x03CA94D0 LDR X8, [X8 + 0xB8]
	0x03CA94D4 LDR W1, [X8 + 0x48]
	0x03CA94D8 BL 0x3C15F98
	0x03CA94DC LDR X8, [X22]
	0x03CA94E0 MOV X0, X19
	0x03CA94E4 MOV X2, X31
	0x03CA94E8 MOV V12.16B, V0.16B
	0x03CA94EC LDR X8, [X8 + 0xB8]
	0x03CA94F0 LDR W1, [X8 + 0x4C]
	0x03CA94F4 BL 0x3C15F98
	0x03CA94F8 MOV X0, X20
	0x03CA94FC MOV X1, X31
	0x03CA9500 MOV V8.16B, V0.16B
	0x03CA9504 BL 0x3C14714
	0x03CA9508 MOV X1, X0
	0x03CA950C MOV X0, X19
	0x03CA9510 MOV X2, X31
	0x03CA9514 BL 0x3C14750
	0x03CA9518 MOV X0, X19
	0x03CA951C MOV X1, X20
	0x03CA9520 MOV X2, X31
	0x03CA9524 BL 0x3C151D0
	0x03CA9528 MOV X0, X20
	0x03CA952C MOV X1, X31
	0x03CA9530 BL 0x3C15294
	0x03CA9534 MOV X1, X0
	0x03CA9538 MOV X0, X19
	0x03CA953C MOV X2, X31
	0x03CA9540 BL 0x3C152D0
	0x03CA9544 LDR X8, [X22]
	0x03CA9548 MOV X0, X19
	0x03CA954C MOV X2, X21
	0x03CA9550 MOV X3, X31
	0x03CA9554 LDR X8, [X8 + 0xB8]
	0x03CA9558 LDR W1, [X8]
	0x03CA955C BL 0x3C14C34
	0x03CA9560 LDR X8, [X22]
	0x03CA9564 MOV X0, X19
	0x03CA9568 MOV V0.16B, V9.16B
	0x03CA956C MOV X2, X31
	0x03CA9570 LDR X8, [X8 + 0xB8]
	0x03CA9574 LDR W1, [X8 + 0x6C]
	0x03CA9578 BL 0x3C15CD8
	0x03CA957C LDR X8, [X22]
	0x03CA9580 MOV X0, X19
	0x03CA9584 MOV V0.16B, V10.16B
	0x03CA9588 MOV X2, X31
	0x03CA958C LDR X8, [X8 + 0xB8]
	0x03CA9590 LDR W1, [X8 + 0x80]
	0x03CA9594 BL 0x3C15CD8
	0x03CA9598 LDR X8, [X22]
	0x03CA959C MOV X0, X19
	0x03CA95A0 MOV V0.16B, V11.16B
	0x03CA95A4 MOV X2, X31
	0x03CA95A8 LDR X8, [X8 + 0xB8]
	0x03CA95AC LDR W1, [X8 + 0x84]
	0x03CA95B0 BL 0x3C15CD8
	0x03CA95B4 LDR X8, [X22]
	0x03CA95B8 MOV X0, X19
	0x03CA95BC MOV V0.16B, V12.16B
	0x03CA95C0 MOV X2, X31
	0x03CA95C4 LDR X8, [X8 + 0xB8]
	0x03CA95C8 LDR W1, [X8 + 0x48]
	0x03CA95CC BL 0x3C15CD8
	0x03CA95D0 LDR X8, [X22]
	0x03CA95D4 MOV X0, X19
	0x03CA95D8 MOV V0.16B, V8.16B
	0x03CA95DC LDP X20, X19, [X31 + 0x40]
	0x03CA95E0 LDR X8, [X8 + 0xB8]
	0x03CA95E4 LDP X22, X21, [X31 + 0x30]
	0x03CA95E8 LDR X30, [X31 + 0x28]
	0x03CA95EC LDP D9, D8, [X31 + 0x18]
	0x03CA95F0 LDR W1, [X8 + 0x4C]
	0x03CA95F4 LDP D11, D10, [X31 + 0x8]
	0x03CA95F8 MOV X2, X31
	0x03CA95FC LDR V12, [X31], #0x50
	0x03CA9600 B 0x3C15CD8
	0x03CA9604 LDP X20, X19, [X31 + 0x40]
	0x03CA9608 LDP X22, X21, [X31 + 0x30]
	0x03CA960C LDR X30, [X31 + 0x28]
	0x03CA9610 LDP D9, D8, [X31 + 0x18]
	0x03CA9614 LDP D11, D10, [X31 + 0x8]
	0x03CA9618 LDR V12, [X31], #0x50
	0x03CA961C RET
	0x03CA9620 BL 0x1C16F20
	0x03CA9624 SUB X31, X31, 0x40
	0x03CA9628 STP X30, X23, [X31 + 0x10]
	0x03CA962C STP X22, X21, [X31 + 0x20]
	0x03CA9630 STP X20, X19, [X31 + 0x30]
	0x03CA9634 ADRP X22, 0x73E000
	0x03CA9638 LDRB W8, [X22 + 0x311]
	0x03CA963C MOV W20, W2
	0x03CA9640 MOV X19, X1
	0x03CA9644 MOV X21, X0
	0x03CA9648 TBNZ X8, 0x0, 0x3CA9690
	0x03CA964C ADRP X0, 0x4B8000
	0x03CA9650 LDR X0, [X0 + 0x618]
	0x03CA9654 BL 0x1C16CF4
	0x03CA9658 ADRP X0, 0x4B8000
	0x03CA965C LDR X0, [X0 + 0x620]
	0x03CA9660 BL 0x1C16CF4
	0x03CA9664 ADRP X0, 0x4B8000
	0x03CA9668 LDR X0, [X0 + 0x628]
	0x03CA966C BL 0x1C16CF4
	0x03CA9670 ADRP X0, 0x44E000
	0x03CA9674 LDR X0, [X0 + 0xCA0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0x73F000
	014 Move W8, [X25+772]
	015 Move X19, X6
	016 Move W20, W5
	017 Move W21, W4
	018 Move W22, W3
	019 Move X23, X2
	020 Move W24, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x4B9000
	026 Move X0, [X0+1512]
	027 Call 0x1C17CF4
	028 Move X0, 0x452000
	029 Move X0, [X0+1656]
	030 Call 0x1C17CF4
	031 Move X0, 0x452000
	032 Move X0, [X0+1672]
	033 Call 0x1C17CF4
	034 Move X0, 0x44C000
	035 Move X0, [X0+3592]
	036 Call 0x1C17CF4
	037 Move X0, 0x4B9000
	038 Move X0, [X0+1200]
	039 Call 0x1C17CF4
	040 Move X0, 0x4B9000
	041 Move X0, [X0+1208]
	042 Call 0x1C17CF4
	043 Move X0, 0x44B000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X25+772], W8
	048 Move [X19], W31
	049 Compare X23, 0
	050 JumpIfEqual {118}
	051 Move W27, [X23+24]
	052 Compare W27, 0
	053 JumpIfEqual {118}
	054 Move TEMP, X22
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {82}
	058 Move X26, 0x4B9000
	059 Move X26, [X26+1512]
	060 Move X8, [X26]
	061 Move X8, [X8+184]
	062 Move X0, [X8]
	063 Compare X0, 0
	064 JumpIfEqual {69}
	065 Move X8, 0x452000
	066 Move X8, [X8+1656]
	067 Move X1, [X8]
	068 Call HashSet`1<Int32>.Clear, X0
	069 Move X8, 0x44C000
	070 Move X8, [X8+3592]
	071 Move X0, [X8]
	072 Call 0x1C17F10
	073 Move X8, 0x452000
	074 Move X8, [X8+1672]
	075 Move X25, X0
	076 Move X1, [X8]
	077 Call HashSet`1<Int32>..ctor, X0
	078 Move X8, [X26]
	079 Move X8, [X8+184]
	080 Move [X8], X25
	081 Move W27, [X23+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X28, 0x4B9000
	084 Move X29, 0x44B000
	085 Move X28, [X28+1208]
	086 Move X29, [X29+1432]
	087 Move W25, W31
	088 Move X2, [X28]
	089 Move X0, X23
	090 Move W1, W25
	091 Call List`1<Object>.get_Item, X0, X1
	092 Move X8, [X29]
	093 Move X26, X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Move X0, X26
	100 Move X1, X31
	101 Move X2, X31
	102 Call Object.op_Equality, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {116}
	107 And W2, W22, 1
	108 Move W0, W24
	109 Move X1, X26
	110 Move W3, W21
	111 Move W4, W20
	112 Move X5, X19
	113 Call FontAssetUtilities.GetCharacterFromFontAsset_Internal, X0, X1, X2, X3, X4, X5
	114 Compare X0, 0
	115 JumpIfNotEqual {119}
	116 Add W25, W25, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X31
	119 Move X20, [X31+80]
	120 Move X19, [X31+88]
	121 Move X22, [X31+64]
	122 Move X21, [X31+72]
	123 Move X24, [X31+48]
	124 Move X23, [X31+56]
	125 Move X26, [X31+32]
	126 Move X25, [X31+40]
	127 Move X28, [X31+16]
	128 Move X27, [X31+24]
	129 Move X29, [X31+96]
	130 Move X30, [X31+104]
	131 Return X0

Method: UnityEngine.TextCore.Text.SpriteCharacter GetSpriteCharacterFromSpriteAsset(System.UInt32 unicode, UnityEngine.TextCore.Text.SpriteAsset spriteAsset, System.Boolean includeFallbacks)

Disassembly:
	0x03CA9678 BL 0x1C16CF4
	0x03CA967C ADRP X0, 0x4B8000
	0x03CA9680 LDR X0, [X0 + 0x268]
	0x03CA9684 BL 0x1C16CF4
	0x03CA9688 MOVZ W8, 0x1
	0x03CA968C STRB W8, [X22 + 0x311]
	0x03CA9690 STR X31, [X31 + 0x8]
	0x03CA9694 CBZ X19, 0x3CA983C
	0x03CA9698 MOV X0, X19
	0x03CA969C MOV X1, X31
	0x03CA96A0 BL 0x3C385F8
	0x03CA96A4 CBZ X21, 0x3CA983C
	0x03CA96A8 LDR X8, [X21 + 0x140]
	0x03CA96AC CBZ X8, 0x3CA983C
	0x03CA96B0 LDR W9, [X8 + 0x18]
	0x03CA96B4 CMP W9, W20
	0x03CA96B8 B.LS 0x3CA9840
	0x03CA96BC ADD X8, X8, W20, 0x3, SXTW
	0x03CA96C0 LDR X21, [X8 + 0x20]
	0x03CA96C4 CBZ X21, 0x3CA983C
	0x03CA96C8 ADRP X23, 0x4B8000
	0x03CA96CC LDR X23, [X23 + 0x628]
	0x03CA96D0 MOV W22, W0
	0x03CA96D4 MOV X0, X21
	0x03CA96D8 MOV X1, X31
	0x03CA96DC BL 0x3C385F8
	0x03CA96E0 LDR X8, [X23]
	0x03CA96E4 MOV W20, W0
	0x03CA96E8 LDR W9, [X8 + 0xE0]
	0x03CA96EC CBNZ W9, 0x3CA96FC
	0x03CA96F0 MOV X0, X8
	0x03CA96F4 BL 0x1C16DFC
	0x03CA96F8 LDR X8, [X23]
	0x03CA96FC LDR X8, [X8 + 0xB8]
	0x03CA9700 LDR X0, [X8]
	0x03CA9704 CBZ X0, 0x3CA983C
	0x03CA9708 ADRP X8, 0x4B8000
	0x03CA970C LDR X8, [X8 + 0x620]
	0x03CA9710 MOV W20, W20
	0x03CA9714 BFM X20, X22, 0x20, 0x1F
	0x03CA9718 ADD X2, X31, 0x8
	0x03CA971C LDR X3, [X8]
	0x03CA9720 MOV X1, X20
	0x03CA9724 BL 0x2A4FD38
	0x03CA9728 TBZ X0, 0x0, 0x3CA977C
	0x03CA972C MOV X0, X19
	0x03CA9730 MOV X1, X31
	0x03CA9734 BL 0x3C15314
	0x03CA9738 LDR X8, [X31 + 0x8]
	0x03CA973C CBZ X8, 0x3CA983C
	0x03CA9740 MOV W20, W0
	0x03CA9744 MOV X0, X8
	0x03CA9748 MOV X1, X31
	0x03CA974C BL 0x3C15314
	0x03CA9750 CMP W20, W0
	0x03CA9754 B.EQ 0x3CA9824
	0x03CA9758 LDR X0, [X23]
	0x03CA975C LDR X20, [X31 + 0x8]
	0x03CA9760 LDR W8, [X0 + 0xE0]
	0x03CA9764 CBNZ W8, 0x3CA976C
	0x03CA9768 BL 0x1C16DFC
	0x03CA976C MOV X0, X19
	0x03CA9770 MOV X1, X20
	0x03CA9774 BL 0x3CA939C
	0x03CA9778 B 0x3CA9824
	0x03CA977C ADRP X8, 0x44E000
	0x03CA9780 LDR X8, [X8 + 0xCA0]
	0x03CA9784 LDR X0, [X8]
	0x03CA9788 BL 0x1C16F10
	0x03CA978C MOV X1, X19
	0x03CA9790 MOV X2, X31
	0x03CA9794 MOV X22, X0
	0x03CA9798 BL 0x3C145DC
	0x03CA979C ADRP X19, 0x4B8000
	0x03CA97A0 LDR X19, [X19 + 0x268]
	0x03CA97A4 STR X22, [X31 + 0x8]
	0x03CA97A8 LDR X0, [X19]
	0x03CA97AC LDR W8, [X0 + 0xE0]
	0x03CA97B0 CBNZ W8, 0x3CA97B8
	0x03CA97B4 BL 0x1C16DFC
	0x03CA97B8 CBZ X22, 0x3CA983C
	0x03CA97BC LDR X8, [X19]
	0x03CA97C0 MOV X0, X22
	0x03CA97C4 MOV X2, X21
	0x03CA97C8 MOV X3, X31
	0x03CA97CC LDR X8, [X8 + 0xB8]
	0x03CA97D0 LDR W1, [X8]
	0x03CA97D4 BL 0x3C14C34
	0x03CA97D8 LDR X0, [X31 + 0x8]
	0x03CA97DC CBZ X0, 0x3CA983C
	0x03CA97E0 MOVZ W1, 0x3D
	0x03CA97E4 MOV X2, X31
	0x03CA97E8 BL 0x3C396EC
	0x03CA97EC LDR X0, [X23]
	0x03CA97F0 LDR W8, [X0 + 0xE0]
	0x03CA97F4 CBNZ W8, 0x3CA9800
	0x03CA97F8 BL 0x1C16DFC
	0x03CA97FC LDR X0, [X23]
	0x03CA9800 LDR X8, [X0 + 0xB8]
	0x03CA9804 LDR X0, [X8]
	0x03CA9808 CBZ X0, 0x3CA983C
	0x03CA980C ADRP X8, 0x4B8000
	0x03CA9810 LDR X2, [X31 + 0x8]
	0x03CA9814 LDR X8, [X8 + 0x618]
	0x03CA9818 MOV X1, X20
	0x03CA981C LDR X3, [X8]
	0x03CA9820 BL 0x2A4E330
	0x03CA9824 LDR X0, [X31 + 0x8]
	0x03CA9828 LDP X20, X19, [X31 + 0x30]
	0x03CA982C LDP X22, X21, [X31 + 0x20]
	0x03CA9830 LDP X30, X23, [X31 + 0x10]
	0x03CA9834 ADD X31, X31, 0x40
	0x03CA9838 RET
	0x03CA983C BL 0x1C16F20
	0x03CA9840 BL 0x1C16F28
	0x03CA9844 STR X30, [X31 - 0x30]!
	0x03CA9848 STP X22, X21, [X31 + 0x10]
	0x03CA984C STP X20, X19, [X31 + 0x20]
	0x03CA9850 ADRP X21, 0x73E000
	0x03CA9854 ADRP X22, 0x4B8000
	0x03CA9858 ADRP X19, 0x4B8000
	0x03CA985C ADRP X20, 0x4B8000
	0x03CA9860 LDRB W8, [X21 + 0x313]
	0x03CA9864 LDR X22, [X22 + 0x630]
	0x03CA9868 LDR X19, [X19 + 0x638]
	0x03CA986C LDR X20, [X20 + 0x628]
	0x03CA9870 TBNZ X8, 0x0, 0x3CA98A0
	0x03CA9874 ADRP X0, 0x4B8000
	0x03CA9878 LDR X0, [X0 + 0x638]
	0x03CA987C BL 0x1C16CF4
	0x03CA9880 ADRP X0, 0x4B8000
	0x03CA9884 LDR X0, [X0 + 0x630]
	0x03CA9888 BL 0x1C16CF4
	0x03CA988C ADRP X0, 0x4B8000
	0x03CA9890 LDR X0, [X0 + 0x628]
	0x03CA9894 BL 0x1C16CF4
	0x03CA9898 MOVZ W8, 0x1
	0x03CA989C STRB W8, [X21 + 0x313]
	0x03CA98A0 LDR X0, [X22]
	0x03CA98A4 BL 0x1C16F10
	0x03CA98A8 LDR X1, [X19]
	0x03CA98AC MOV X19, X0
	0x03CA98B0 BL 0x2A4DA7C
	0x03CA98B4 LDR X8, [X20]
	0x03CA98B8 LDP X22, X21, [X31 + 0x10]
	0x03CA98BC LDR X8, [X8 + 0xB8]
	0x03CA98C0 STR X19, [X8]
	0x03CA98C4 LDP X20, X19, [X31 + 0x20]
	0x03CA98C8 LDR X30, [X31], #0x30
	0x03CA98CC RET
	0x03CA98D0 STR D8, [X31 - 0x30]!
	0x03CA98D4 STP X30, X21, [X31 + 0x10]
	0x03CA98D8 STP X20, X19, [X31 + 0x20]
	0x03CA98DC STR W1, [X0]
	0x03CA98E0 STP X2, X3, [X0 + 0x8]
	0x03CA98E4 STR X4, [X0 + 0x18]
	0x03CA98E8 CBZ X4, 0x3CA9948
	0x03CA98EC MOV X19, X0
	0x03CA98F0 MOV X0, X4
	0x03CA98F4 MOV X1, X31
	0x03CA98F8 MOV V8.16B, V0.16B
	0x03CA98FC MOV X20, X2
	0x03CA9900 BL 0x3C385F8
	0x03CA9904 CBZ X20, 0x3CA9948
	0x03CA9908 MOV W21, W0
	0x03CA990C LDR X0, [X20 + 0x28]
	0x03CA9910 CBZ X0, 0x3CA9948

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x73F000
	013 Move X23, 0x44B000
	014 Move W8, [X22+773]
	015 Move X23, [X23+1432]
	016 Move W21, W2
	017 Move X20, X1
	018 Move W19, W0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, 0x4B9000
	024 Move X0, [X0+1536]
	025 Call 0x1C17CF4
	026 Move X0, 0x4B9000
	027 Move X0, [X0+1512]
	028 Call 0x1C17CF4
	029 Move X0, 0x44D000
	030 Move X0, [X0+2520]
	031 Call 0x1C17CF4
	032 Move X0, 0x452000
	033 Move X0, [X0+1656]
	034 Call 0x1C17CF4
	035 Move X0, 0x452000
	036 Move X0, [X0+1672]
	037 Call 0x1C17CF4
	038 Move X0, 0x44C000
	039 Move X0, [X0+3592]
	040 Call 0x1C17CF4
	041 Move X0, 0x4B9000
	042 Move X0, [X0+1544]
	043 Call 0x1C17CF4
	044 Move X0, 0x4B9000
	045 Move X0, [X0+1552]
	046 Call 0x1C17CF4
	047 Move X0, 0x44B000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+773], W8
	052 Move X0, [X23]
	053 Move [X31+8], X31
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Equality, X0, X1
	062 Move W8, W0
	063 Move X0, X31
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {192}
	068 Compare X20, 0
	069 JumpIfEqual {204}
	070 Move X0, [X20+184]
	071 Compare X0, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X20
	074 Call SpriteAsset.UpdateLookupTables, X0
	075 Move X0, [X20+184]
	076 Compare X0, 0
	077 JumpIfEqual {204}
	078 Move X8, 0x4B9000
	079 Move X8, [X8+1536]
	080 Add X2, X31, 8
	081 Move W1, W19
	082 Move X3, [X8]
	083 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {89}
	088 Move X0, [X31+8]
	089 Move TEMP, X21
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {191}
	093 Move X24, 0x4B9000
	094 Move X24, [X24+1512]
	095 Move X8, [X24]
	096 Move X8, [X8+184]
	097 Move X0, [X8]
	098 Compare X0, 0
	099 JumpIfEqual {104}
	100 Move X8, 0x452000
	101 Move X8, [X8+1656]
	102 Move X1, [X8]
	103 Call HashSet`1<Int32>.Clear, X0
	104 Move X8, 0x44C000
	105 Move X8, [X8+3592]
	106 Move X0, [X8]
	107 Call 0x1C17F10
	108 Move X8, 0x452000
	109 Move X8, [X8+1672]
	110 Move X21, X0
	111 Move X1, [X8]
	112 Call HashSet`1<Int32>..ctor, X0
	113 Move X8, [X24]
	114 Move X8, [X8+184]
	115 Move [X8], X21
	116 Move X8, [X24]
	117 Move W1, [X20+32]
	118 Move X8, [X8+184]
	119 Move X21, [X8]
	120 Compare W1, 0
	121 JumpIfNotEqual {127}
	122 Move X0, X20
	123 Move X1, X31
	124 Call Object.GetInstanceID, X0
	125 Move W1, W0
	126 Move [X20+32], W0
	127 Compare X21, 0
	128 JumpIfEqual {204}
	129 Move X25, 0x44D000
	130 Move X25, [X25+2520]
	131 Move X0, X21
	132 Move X2, [X25]
	133 Call HashSet`1<Int32>.Add, X0, X1
	134 Move X20, [X20+208]
	135 Compare X20, 0
	136 JumpIfEqual {191}
	137 Move W26, [X20+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X27, 0x4B9000
	140 Move X27, [X27+1552]
	141 Move W21, W31
	142 Move X2, [X27]
	143 Move X0, X20
	144 Move W1, W21
	145 Call List`1<Object>.get_Item, X0, X1
	146 Move X8, [X23]
	147 Move X22, X0
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X0, X22
	154 Move X1, X31
	155 Move X2, X31
	156 Call Object.op_Equality, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {189}
	161 Compare X22, 0
	162 JumpIfEqual {204}
	163 Move W1, [X22+32]
	164 Compare W1, 0
	165 JumpIfNotEqual {171}
	166 Move X0, X22
	167 Move X1, X31
	168 Call Object.GetInstanceID, X0
	169 Move W1, W0
	170 Move [X22+32], W0
	171 Move X8, [X24]
	172 Move X8, [X8+184]
	173 Move X0, [X8]
	174 Compare X0, 0
	175 JumpIfEqual {204}
	176 Move X2, [X25]
	177 Call HashSet`1<Int32>.Add, X0, X1
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {189}
	182 Move W2, 1
	183 Move W0, W19
	184 Move X1, X22
	185 Call FontAssetUtilities.GetSpriteCharacterFromSpriteAsset_Internal, X0, X1, X2
	186 Move [X31+8], X0
	187 Compare X0, 0
	188 JumpIfNotEqual {192}
	189 Add W21, W21, 1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, X31
	192 Move X20, [X31+80]
	193 Move X19, [X31+88]
	194 Move X22, [X31+64]
	195 Move X21, [X31+72]
	196 Move X24, [X31+48]
	197 Move X23, [X31+56]
	198 Move X26, [X31+32]
	199 Move X25, [X31+40]
	200 Move X30, [X31+16]
	201 Move X27, [X31+24]
	202 Add X31, X31, 96
	203 Return X0
	204 Call 0x1C17F20

Method: UnityEngine.TextCore.Text.SpriteCharacter GetSpriteCharacterFromSpriteAsset_Internal(System.UInt32 unicode, UnityEngine.TextCore.Text.SpriteAsset spriteAsset, System.Boolean includeFallbacks)

Disassembly:
	0x03CA9938 LDP X20, X19, [X31 + 0x20]
	0x03CA993C LDP X30, X21, [X31 + 0x10]
	0x03CA9940 LDR V8, [X31], #0x30
	0x03CA9944 RET
	0x03CA9948 BL 0x1C16F20
	0x03CA994C SUB X31, X31, 0x40
	0x03CA9950 STP X30, X23, [X31 + 0x10]
	0x03CA9954 STP X22, X21, [X31 + 0x20]
	0x03CA9958 STP X20, X19, [X31 + 0x30]
	0x03CA995C ADRP X22, 0x73E000
	0x03CA9960 LDRB W8, [X22 + 0x314]
	0x03CA9964 MOV X23, X3
	0x03CA9968 MOV X19, X2
	0x03CA996C MOV X20, X1
	0x03CA9970 MOV X21, X0
	0x03CA9974 TBNZ X8, 0x0, 0x3CA99B0
	0x03CA9978 ADRP X0, 0x4B8000
	0x03CA997C LDR X0, [X0 + 0x640]
	0x03CA9980 BL 0x1C16CF4
	0x03CA9984 ADRP X0, 0x454000
	0x03CA9988 LDR X0, [X0 + 0x870]
	0x03CA998C BL 0x1C16CF4
	0x03CA9990 ADRP X0, 0x4A5000
	0x03CA9994 LDR X0, [X0 + 0xD78]
	0x03CA9998 BL 0x1C16CF4
	0x03CA999C ADRP X0, 0x474000
	0x03CA99A0 LDR X0, [X0 + 0x8B0]
	0x03CA99A4 BL 0x1C16CF4
	0x03CA99A8 MOVZ W8, 0x1
	0x03CA99AC STRB W8, [X22 + 0x314]
	0x03CA99B0 STR W31, [X31 + 0xC]
	0x03CA99B4 CBZ X21, 0x3CA9B50
	0x03CA99B8 MOV X0, X21
	0x03CA99BC MOV X1, X31
	0x03CA99C0 BL 0x3C385F8
	0x03CA99C4 CBZ X23, 0x3CA9B50
	0x03CA99C8 ADRP X8, 0x454000
	0x03CA99CC LDR X8, [X8 + 0x870]
	0x03CA99D0 MOV W22, W0
	0x03CA99D4 ADD X2, X31, 0xC
	0x03CA99D8 MOV X0, X23
	0x03CA99DC LDR X3, [X8]
	0x03CA99E0 MOV W1, W22
	0x03CA99E4 BL 0x2A0BC68
	0x03CA99E8 TBNZ X0, 0x0, 0x3CA9B38
	0x03CA99EC ADRP X8, 0x4A5000
	0x03CA99F0 LDR X8, [X8 + 0xD78]
	0x03CA99F4 MOV X0, X23
	0x03CA99F8 LDR X1, [X8]
	0x03CA99FC BL 0x2A0A118
	0x03CA9A00 ADRP X8, 0x474000
	0x03CA9A04 LDR X8, [X8 + 0x8B0]
	0x03CA9A08 MOV W2, W0
	0x03CA9A0C STR W0, [X31 + 0xC]
	0x03CA9A10 MOV X0, X23
	0x03CA9A14 LDR X3, [X8]
	0x03CA9A18 MOV W1, W22
	0x03CA9A1C BL 0x2A0A330
	0x03CA9A20 LDR X8, [X19]
	0x03CA9A24 CBZ X8, 0x3CA9B50
	0x03CA9A28 LDR W9, [X31 + 0xC]
	0x03CA9A2C LDR W10, [X8 + 0x18]
	0x03CA9A30 CMP W9, W10
	0x03CA9A34 B.LT 0x3CA9A68
	0x03CA9A38 ADD W0, W9, 0x1
	0x03CA9A3C MOV X1, X31
	0x03CA9A40 BL 0x3C2B340
	0x03CA9A44 ADRP X8, 0x4B8000
	0x03CA9A48 LDR X8, [X8 + 0x640]
	0x03CA9A4C MOV W1, W0
	0x03CA9A50 MOV X0, X19
	0x03CA9A54 LDR X2, [X8]
	0x03CA9A58 BL 0x21168DC
	0x03CA9A5C LDR X8, [X19]
	0x03CA9A60 CBZ X8, 0x3CA9B50
	0x03CA9A64 LDR W9, [X31 + 0xC]
	0x03CA9A68 LDR W10, [X8 + 0x18]
	0x03CA9A6C CMP W9, W10
	0x03CA9A70 B.CS 0x3CA9B54
	0x03CA9A74 MOVZ W11, 0x38
	0x03CA9A78 SMADDL X11, X9, X11, X8
	0x03CA9A7C STR W9, [X11 + 0x20]
	0x03CA9A80 LDRSW X23, [X31 + 0xC]
	0x03CA9A84 CMP W23, W10
	0x03CA9A88 B.CS 0x3CA9B54
	0x03CA9A8C MOVZ W9, 0x38
	0x03CA9A90 MADD X8, X23, X9, X8
	0x03CA9A94 STR X20, [X8 + 0x28]
	0x03CA9A98 LDR X8, [X19]
	0x03CA9A9C CBZ X8, 0x3CA9B50
	0x03CA9AA0 LDR W9, [X8 + 0x18]
	0x03CA9AA4 CMP W23, W9
	0x03CA9AA8 B.CS 0x3CA9B54
	0x03CA9AAC MOVZ W9, 0x38
	0x03CA9AB0 MADD X8, X23, X9, X8
	0x03CA9AB4 STR X31, [X8 + 0x30]
	0x03CA9AB8 LDR X8, [X19]
	0x03CA9ABC CBZ X8, 0x3CA9B50
	0x03CA9AC0 LDR W9, [X8 + 0x18]
	0x03CA9AC4 CMP W23, W9
	0x03CA9AC8 B.CS 0x3CA9B54
	0x03CA9ACC MOVZ W9, 0x38
	0x03CA9AD0 MADD X8, X23, X9, X8
	0x03CA9AD4 STR X21, [X8 + 0x38]
	0x03CA9AD8 LDR X21, [X19]
	0x03CA9ADC CBZ X21, 0x3CA9B50
	0x03CA9AE0 CBZ X20, 0x3CA9B50
	0x03CA9AE4 LDR X0, [X20 + 0x28]
	0x03CA9AE8 CBZ X0, 0x3CA9B50
	0x03CA9AEC MOV X1, X31
	0x03CA9AF0 BL 0x3C385F8
	0x03CA9AF4 LDR W8, [X21 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x73F000
	013 Move W8, [X22+774]
	014 Move W21, W2
	015 Move X20, X1
	016 Move W19, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x4B9000
	022 Move X0, [X0+1536]
	023 Call 0x1C17CF4
	024 Move X0, 0x4B9000
	025 Move X0, [X0+1512]
	026 Call 0x1C17CF4
	027 Move X0, 0x44D000
	028 Move X0, [X0+2520]
	029 Call 0x1C17CF4
	030 Move X0, 0x4B9000
	031 Move X0, [X0+1544]
	032 Call 0x1C17CF4
	033 Move X0, 0x4B9000
	034 Move X0, [X0+1552]
	035 Call 0x1C17CF4
	036 Move X0, 0x44B000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+774], W8
	041 Move [X31+8], X31
	042 Compare X20, 0
	043 JumpIfEqual {143}
	044 Move X0, [X20+184]
	045 Compare X0, 0
	046 JumpIfNotEqual {50}
	047 Move X0, X20
	048 Call SpriteAsset.UpdateLookupTables, X0
	049 Move X0, [X20+184]
	050 Compare X0, 0
	051 JumpIfEqual {143}
	052 Move X8, 0x4B9000
	053 Move X8, [X8+1536]
	054 Add X2, X31, 8
	055 Move W1, W19
	056 Move X3, [X8]
	057 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {63}
	062 Move X0, [X31+8]
	063 Move TEMP, X21
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {130}
	067 Move X20, [X20+208]
	068 Compare X20, 0
	069 JumpIfEqual {130}
	070 Move W23, [X20+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X24, 0x4B9000
	073 Move X25, 0x44B000
	074 Move X26, 0x4B9000
	075 Move X27, 0x44D000
	076 Move X24, [X24+1552]
	077 Move X25, [X25+1432]
	078 Move X26, [X26+1512]
	079 Move X27, [X27+2520]
	080 Move W21, W31
	081 Move X2, [X24]
	082 Move X0, X20
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Move X8, [X25]
	086 Move X22, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X22
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {128}
	100 Compare X22, 0
	101 JumpIfEqual {143}
	102 Move W1, [X22+32]
	103 Compare W1, 0
	104 JumpIfNotEqual {110}
	105 Move X0, X22
	106 Move X1, X31
	107 Call Object.GetInstanceID, X0
	108 Move W1, W0
	109 Move [X22+32], W0
	110 Move X8, [X26]
	111 Move X8, [X8+184]
	112 Move X0, [X8]
	113 Compare X0, 0
	114 JumpIfEqual {143}
	115 Move X2, [X27]
	116 Call HashSet`1<Int32>.Add, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {128}
	121 Move W2, 1
	122 Move W0, W19
	123 Move X1, X22
	124 Call FontAssetUtilities.GetSpriteCharacterFromSpriteAsset_Internal, X0, X1, X2
	125 Move [X31+8], X0
	126 Compare X0, 0
	127 JumpIfNotEqual {131}
	128 Add W21, W21, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X31
	131 Move X20, [X31+80]
	132 Move X19, [X31+88]
	133 Move X22, [X31+64]
	134 Move X21, [X31+72]
	135 Move X24, [X31+48]
	136 Move X23, [X31+56]
	137 Move X26, [X31+32]
	138 Move X25, [X31+40]
	139 Move X30, [X31+16]
	140 Move X27, [X31+24]
	141 Add X31, X31, 96
	142 Return X0
	143 Call 0x1C17F20

