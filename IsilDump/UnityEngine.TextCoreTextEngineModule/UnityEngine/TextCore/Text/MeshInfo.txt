Type: UnityEngine.TextCore.Text.MeshInfo

Method: System.Void .ctor(System.Int32 size)

Disassembly:
	0x03CAB5A4 BL 0x2B05C28
	0x03CAB5A8 TBNZ X0, 0x0, 0x3CAB5C4
	0x03CAB5AC LDR X0, [X19 + 0x40]
	0x03CAB5B0 CBZ X0, 0x3CAB7CC
	0x03CAB5B4 LDR X3, [X25]
	0x03CAB5B8 MOV W1, W22
	0x03CAB5BC MOV W2, W20
	0x03CAB5C0 BL 0x2B05A3C
	0x03CAB5C4 LDR X0, [X19 + 0xC8]
	0x03CAB5C8 CBZ X0, 0x3CAB7CC
	0x03CAB5CC LDR X2, [X23]
	0x03CAB5D0 MOV W1, W22
	0x03CAB5D4 BL 0x2B0F250
	0x03CAB5D8 TBNZ X0, 0x0, 0x3CAB5F4
	0x03CAB5DC LDR X0, [X19 + 0xC8]
	0x03CAB5E0 CBZ X0, 0x3CAB7CC
	0x03CAB5E4 LDR X3, [X29]
	0x03CAB5E8 MOV W1, W22
	0x03CAB5EC MOV X2, X21
	0x03CAB5F0 BL 0x2B0F05C
	0x03CAB5F4 LDR X0, [X19 + 0xC0]
	0x03CAB5F8 ADD W20, W20, 0x1
	0x03CAB5FC CBNZ X0, 0x3CAB564
	0x03CAB600 B 0x3CAB7CC
	0x03CAB604 LDR X0, [X19 + 0x38]
	0x03CAB608 CBZ X0, 0x3CAB620
	0x03CAB60C ADRP X8, 0x472000
	0x03CAB610 LDR X8, [X8 + 0x8D0]
	0x03CAB614 LDR X1, [X8]
	0x03CAB618 BL 0x2A0A4C4
	0x03CAB61C B 0x3CAB648
	0x03CAB620 ADRP X8, 0x452000
	0x03CAB624 LDR X8, [X8 + 0x888]
	0x03CAB628 LDR X0, [X8]
	0x03CAB62C BL 0x1C16F10
	0x03CAB630 ADRP X8, 0x452000
	0x03CAB634 LDR X8, [X8 + 0x890]
	0x03CAB638 MOV X20, X0
	0x03CAB63C LDR X1, [X8]
	0x03CAB640 BL 0x2A09A9C
	0x03CAB644 STR X20, [X19 + 0x38]
	0x03CAB648 ADRP X25, 0x4B6000
	0x03CAB64C ADRP X27, 0x4B6000
	0x03CAB650 ADRP X29, 0x4B6000
	0x03CAB654 LDR X25, [X25 + 0x710]
	0x03CAB658 LDR X27, [X27 + 0x6F8]
	0x03CAB65C LDR X29, [X29 + 0x6D8]
	0x03CAB660 LDR X0, [X19 + 0xB8]
	0x03CAB664 CBZ X0, 0x3CAB67C
	0x03CAB668 ADRP X8, 0x4B6000
	0x03CAB66C LDR X8, [X8 + 0x6E8]
	0x03CAB670 LDR X1, [X8]
	0x03CAB674 BL 0x2B0F1E4
	0x03CAB678 B 0x3CAB6A4
	0x03CAB67C ADRP X8, 0x4B6000
	0x03CAB680 LDR X8, [X8 + 0x718]
	0x03CAB684 LDR X0, [X8]
	0x03CAB688 BL 0x1C16F10
	0x03CAB68C ADRP X8, 0x4B6000
	0x03CAB690 LDR X8, [X8 + 0x708]
	0x03CAB694 MOV X20, X0
	0x03CAB698 LDR X1, [X8]
	0x03CAB69C BL 0x2B0E7A4
	0x03CAB6A0 STR X20, [X19 + 0xB8]
	0x03CAB6A4 LDR X0, [X19 + 0xB0]
	0x03CAB6A8 CBZ X0, 0x3CAB7CC
	0x03CAB6AC MOV W20, W31
	0x03CAB6B0 MOVZ W28, 0xFFFE
	0x03CAB6B4 LDR W8, [X0 + 0x18]
	0x03CAB6B8 CMP W20, W8
	0x03CAB6BC B.GE 0x3CAB7D0
	0x03CAB6C0 LDR X2, [X24]
	0x03CAB6C4 MOV W1, W20
	0x03CAB6C8 BL 0x301BCCC
	0x03CAB6CC CBZ X0, 0x3CAB7C0
	0x03CAB6D0 MOV X21, X0
	0x03CAB6D4 LDR X0, [X19 + 0xC8]
	0x03CAB6D8 CBZ X0, 0x3CAB7CC
	0x03CAB6DC LDR W22, [X21 + 0x28]
	0x03CAB6E0 LDR X2, [X23]
	0x03CAB6E4 MOV W1, W22
	0x03CAB6E8 BL 0x2B0F250
	0x03CAB6EC TBZ X0, 0x0, 0x3CAB7C0
	0x03CAB6F0 LDR X0, [X19 + 0xC8]
	0x03CAB6F4 CBZ X0, 0x3CAB7CC
	0x03CAB6F8 LDR X2, [X25]
	0x03CAB6FC MOV W1, W22
	0x03CAB700 BL 0x2B0EFBC
	0x03CAB704 STP X19, X0, [X21 + 0x18]
	0x03CAB708 LDR X0, [X19 + 0xB0]
	0x03CAB70C CBZ X0, 0x3CAB7CC
	0x03CAB710 LDR X2, [X24]
	0x03CAB714 MOV W1, W20
	0x03CAB718 BL 0x301BCCC
	0x03CAB71C CBZ X0, 0x3CAB7CC
	0x03CAB720 LDR X0, [X0 + 0x30]
	0x03CAB724 MOV X1, X31
	0x03CAB728 BL 0x3CCBE90
	0x03CAB72C LDR X8, [X19 + 0x38]
	0x03CAB730 CBZ X8, 0x3CAB7CC
	0x03CAB734 LDR X2, [X26]
	0x03CAB738 MOV W22, W0
	0x03CAB73C MOV X0, X8
	0x03CAB740 MOV W1, W22
	0x03CAB744 BL 0x2A0A530
	0x03CAB748 TBNZ X0, 0x0, 0x3CAB76C
	0x03CAB74C LDR X0, [X19 + 0x38]
	0x03CAB750 CBZ X0, 0x3CAB7CC
	0x03CAB754 ADRP X8, 0x452000
	0x03CAB758 LDR X8, [X8 + 0x858]
	0x03CAB75C MOV W1, W22
	0x03CAB760 MOV W2, W20
	0x03CAB764 LDR X3, [X8]
	0x03CAB768 BL 0x2A0A344
	0x03CAB76C LDR X0, [X19 + 0xB0]
	0x03CAB770 CBZ X0, 0x3CAB7CC
	0x03CAB774 LDR X2, [X24]
	0x03CAB778 MOV W1, W20
	0x03CAB77C BL 0x301BCCC
	0x03CAB780 CBZ X0, 0x3CAB7CC
	0x03CAB784 LDR W22, [X0 + 0x14]
	0x03CAB788 CMP W22, W28
	0x03CAB78C B.EQ 0x3CAB7C0
	0x03CAB790 LDR X0, [X19 + 0xB8]
	0x03CAB794 CBZ X0, 0x3CAB7CC
	0x03CAB798 LDR X2, [X27]
	0x03CAB79C MOV W1, W22
	0x03CAB7A0 BL 0x2B0F250
	0x03CAB7A4 TBNZ X0, 0x0, 0x3CAB7C0
	0x03CAB7A8 LDR X0, [X19 + 0xB8]
	0x03CAB7AC CBZ X0, 0x3CAB7CC
	0x03CAB7B0 LDR X3, [X29]
	0x03CAB7B4 MOV W1, W22
	0x03CAB7B8 MOV X2, X21
	0x03CAB7BC BL 0x2B0F05C
	0x03CAB7C0 LDR X0, [X19 + 0xB0]
	0x03CAB7C4 ADD W20, W20, 0x1
	0x03CAB7C8 CBNZ X0, 0x3CAB6B4
	0x03CAB7CC BL 0x1C16F20
	0x03CAB7D0 STRB W31, [X19 + 0xD8]
	0x03CAB7D4 LDP X20, X19, [X31 + 0x50]
	0x03CAB7D8 LDP X22, X21, [X31 + 0x40]
	0x03CAB7DC LDP X24, X23, [X31 + 0x30]
	0x03CAB7E0 LDP X26, X25, [X31 + 0x20]
	0x03CAB7E4 LDP X28, X27, [X31 + 0x10]
	0x03CAB7E8 LDP X29, X30, [X31], #0x60
	0x03CAB7EC RET
	0x03CAB7F0 STR X1, [X0 + 0xB0]
	0x03CAB7F4 RET
	0x03CAB7F8 STR X1, [X0 + 0xB8]
	0x03CAB7FC RET
	0x03CAB800 LDR X0, [X0 + 0xC0]
	0x03CAB804 RET
	0x03CAB808 STR X1, [X0 + 0xC0]
	0x03CAB80C RET
	0x03CAB810 RET
	0x03CAB814 LDR X0, [X0 + 0x30]
	0x03CAB818 RET
	0x03CAB81C SUB X31, X31, 0x30
	0x03CAB820 STP X30, X21, [X31 + 0x10]
	0x03CAB824 STP X20, X19, [X31 + 0x20]
	0x03CAB828 ADRP X21, 0x73C000
	0x03CAB82C LDRB W8, [X21 + 0x325]
	0x03CAB830 MOV W19, W1
	0x03CAB834 MOV X20, X0
	0x03CAB838 TBNZ X8, 0x0, 0x3CAB850
	0x03CAB83C ADRP X0, 0x452000
	0x03CAB840 LDR X0, [X0 + 0x870]
	0x03CAB844 BL 0x1C16CF4
	0x03CAB848 MOVZ W8, 0x1
	0x03CAB84C STRB W8, [X21 + 0x325]
	0x03CAB850 STR W31, [X31 + 0xC]
	0x03CAB854 LDR X0, [X20 + 0x38]
	0x03CAB858 CBNZ X0, 0x3CAB868
	0x03CAB85C MOV X0, X20
	0x03CAB860 BL 0x3CAB33C
	0x03CAB864 LDR X0, [X20 + 0x38]
	0x03CAB868 CBZ X0, 0x3CAB8A0
	0x03CAB86C ADRP X8, 0x452000
	0x03CAB870 LDR X8, [X8 + 0x870]
	0x03CAB874 ADD X2, X31, 0xC
	0x03CAB878 MOV W1, W19
	0x03CAB87C LDR X3, [X8]
	0x03CAB880 BL 0x2A0BC68
	0x03CAB884 LDR W8, [X31 + 0xC]
	0x03CAB888 LDP X20, X19, [X31 + 0x20]
	0x03CAB88C LDP X30, X21, [X31 + 0x10]
	0x03CAB890 ANDS W31, W0, 0x1
	0x03CAB894 CSINV W0, W8, W31, NE
	0x03CAB898 ADD X31, X31, 0x30
	0x03CAB89C RET
	0x03CAB8A0 BL 0x1C16F20
	0x03CAB8A4 SUB X31, X31, 0x30
	0x03CAB8A8 STP X30, X21, [X31 + 0x10]
	0x03CAB8AC STP X20, X19, [X31 + 0x20]
	0x03CAB8B0 ADRP X21, 0x73C000
	0x03CAB8B4 LDRB W8, [X21 + 0x326]
	0x03CAB8B8 MOV W19, W1
	0x03CAB8BC MOV X20, X0
	0x03CAB8C0 TBNZ X8, 0x0, 0x3CAB8D8
	0x03CAB8C4 ADRP X0, 0x4B6000
	0x03CAB8C8 LDR X0, [X0 + 0x600]
	0x03CAB8CC BL 0x1C16CF4
	0x03CAB8D0 MOVZ W8, 0x1
	0x03CAB8D4 STRB W8, [X21 + 0x326]
	0x03CAB8D8 STR X31, [X31 + 0x8]
	0x03CAB8DC LDR X0, [X20 + 0xB8]
	0x03CAB8E0 CBNZ X0, 0x3CAB8F0
	0x03CAB8E4 MOV X0, X20
	0x03CAB8E8 BL 0x3CAB33C
	0x03CAB8EC LDR X0, [X20 + 0xB8]
	0x03CAB8F0 CBZ X0, 0x3CAB934
	0x03CAB8F4 ADRP X8, 0x4B6000
	0x03CAB8F8 LDR X8, [X8 + 0x600]
	0x03CAB8FC ADD X2, X31, 0x8
	0x03CAB900 MOV W1, W19
	0x03CAB904 LDR X3, [X8]
	0x03CAB908 BL 0x2B10A7C
	0x03CAB90C TBZ X0, 0x0, 0x3CAB920
	0x03CAB910 LDR X8, [X31 + 0x8]
	0x03CAB914 CBZ X8, 0x3CAB934
	0x03CAB918 LDR W0, [X8 + 0x28]
	0x03CAB91C B 0x3CAB924
	0x03CAB920 MOVN W0, 0x0
	0x03CAB924 LDP X20, X19, [X31 + 0x20]
	0x03CAB928 LDP X30, X21, [X31 + 0x10]
	0x03CAB92C ADD X31, X31, 0x30
	0x03CAB930 RET
	0x03CAB934 BL 0x1C16F20
	0x03CAB938 STR X30, [X31 - 0x20]!
	0x03CAB93C STP X20, X19, [X31 + 0x10]
	0x03CAB940 LDR X8, [X0 + 0x38]
	0x03CAB944 MOV X19, X0
	0x03CAB948 MOV X20, X1
	0x03CAB94C CBNZ X8, 0x3CAB958
	0x03CAB950 MOV X0, X19
	0x03CAB954 BL 0x3CAB33C
	0x03CAB958 MOV X0, X20
	0x03CAB95C MOV X1, X31
	0x03CAB960 BL 0x3CCBE90
	0x03CAB964 MOV W1, W0
	0x03CAB968 MOV X0, X19
	0x03CAB96C LDP X20, X19, [X31 + 0x10]
	0x03CAB970 LDR X30, [X31], #0x20
	0x03CAB974 B 0x3CAB81C
	0x03CAB978 STR X30, [X31 - 0x40]!
	0x03CAB97C STP X24, X23, [X31 + 0x10]
	0x03CAB980 STP X22, X21, [X31 + 0x20]
	0x03CAB984 STP X20, X19, [X31 + 0x30]
	0x03CAB988 ADRP X23, 0x73C000
	0x03CAB98C ADRP X24, 0x448000
	0x03CAB990 LDRB W8, [X23 + 0x327]
	0x03CAB994 LDR X24, [X24 + 0x598]
	0x03CAB998 MOV X19, X3
	0x03CAB99C MOV W22, W2
	0x03CAB9A0 MOV W21, W1
	0x03CAB9A4 MOV X20, X0
	0x03CAB9A8 TBNZ X8, 0x0, 0x3CABA08
	0x03CAB9AC ADRP X0, 0x44A000
	0x03CAB9B0 LDR X0, [X0 + 0x9D8]
	0x03CAB9B4 BL 0x1C16CF4
	0x03CAB9B8 ADRP X0, 0x44F000
	0x03CAB9BC LDR X0, [X0 + 0x678]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x73D000
	015 Move X25, 0x44B000
	016 Move X24, 0x4A4000
	017 Move X27, 0x4A3000
	018 Move X26, 0x475000
	019 Move X23, 0x44A000
	020 Move W8, [X21+800]
	021 Move X25, [X25+2480]
	022 Move X24, [X24+72]
	023 Move X27, [X27+2696]
	024 Move X26, [X26+2808]
	025 Move X23, [X23+3672]
	026 Move W20, W1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {52}
	032 Move X0, 0x475000
	033 Move X0, [X0+2808]
	034 Call 0x1C17CF4
	035 Move X0, 0x44A000
	036 Move X0, [X0+3672]
	037 Call 0x1C17CF4
	038 Move X0, 0x4B7000
	039 Move X0, [X0+1736]
	040 Call 0x1C17CF4
	041 Move X0, 0x4A3000
	042 Move X0, [X0+2696]
	043 Call 0x1C17CF4
	044 Move X0, 0x44B000
	045 Move X0, [X0+2480]
	046 Call 0x1C17CF4
	047 Move X0, 0x4A4000
	048 Move X0, [X0+72]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+800], W8
	052 Move [X19+64], X31
	053 Move W8, 0x3FFF
	054 Move [X19], W31
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X25]
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Move W21, W8
	059 ShiftRight W21, 30
	060 And W21, W21, 0x1FFFFFFF
	061 Move [X31+12], W8
	062 Add W8, W8, W8
	063 Move W1, W21
	064 Move W22, W8
	065 ShiftRight W22, 31
	066 And W22, W22, 0x3FFFFFFF
	067 Call 0x1C17D6C
	068 Move [X19+8], X0
	069 Move X0, [X24]
	070 Move W1, W21
	071 Call 0x1C17D6C
	072 Move [X19+32], X0
	073 Move X0, [X27]
	074 Move W1, W21
	075 Call 0x1C17D6C
	076 Move [X19+40], X0
	077 Move X0, [X26]
	078 Move W1, W21
	079 Call 0x1C17D6C
	080 Move [X19+48], X0
	081 Move X0, [X25]
	082 Move W1, W21
	083 Call 0x1C17D6C
	084 Move [X19+16], X0
	085 Move X0, [X24]
	086 Move W1, W21
	087 Call 0x1C17D6C
	088 Move [X19+24], X0
	089 Move X0, [X23]
	090 Move W1, W22
	091 Call 0x1C17D6C
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X19+56], X0
	094 Move X25, 0x4B7000
	095 Move X14, 0x451000
	096 Move X25, [X25+1736]
	097 Move X14, [X14+3848]
	098 Move X21, X31
	099 Move W13, W31
	100 Move X8, W21
	101 Move X9, X8
	102 ShiftRight X9, 63
	103 And X9, X9, 0x3FFFFFFF
	104 Move X10, X8
	105 ShiftRight X10, 61
	106 And X10, X10, 0xFFFFFFF
	107 Move X20, X8
	108 ShiftRight X20, 60
	109 And X20, X20, 0x7FFFFFF
	110 Move X8, X8
	111 ShiftRight X8, 62
	112 And X8, X8, 0x1FFFFFFF
	113 Add X9, X9, W21
	114 Add X10, X10, 32
	115 Move X29, X31
	116 Move X23, X31
	117 Move [X31+16], X13
	118 Move [X31+24], X10
	119 Move X26, X9
	120 ShiftRight X26, 62
	121 And X26, X26, 0x1FFFFFFF
	122 Add X28, X8, 32
	123 Move X27, X20
	124 Move X8, 0x72E000
	125 Move W8, [X8+1923]
	126 Move X22, [X19+8]
	127 Compare W8, 0
	128 JumpIfNotEqual {137}
	129 Move X0, 0x449000
	130 Move X0, [X0+1440]
	131 Call 0x1C17CF4
	132 Move X14, 0x451000
	133 Move X14, [X14+3848]
	134 Move X8, 0x72E000
	135 Move W9, 1
	136 Move [X8+1923], W9
	137 Compare X22, 0
	138 JumpIfEqual {287}
	139 Move W8, [X22+24]
	140 Move X24, X21
	141 Add X21, X21, X23
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X8, 0x449000
	144 Move X8, [X8+1440]
	145 Move X8, [X8]
	146 Move X8, [X8+184]
	147 Move V0, [X8]
	148 Move V1, [X8+8]
	149 Add X8, X22, X26
	150 Add X8, X8, X29
	151 Move [X8+32], D0
	152 Move [X8+40], S1
	153 Move X8, 0x72F000
	154 Move W8, [X8+1935]
	155 Move X22, [X19+32]
	156 Compare W8, 0
	157 JumpIfNotEqual {165}
	158 Move X0, X14
	159 Call 0x1C17CF4
	160 Move X14, 0x451000
	161 Move X14, [X14+3848]
	162 Move W8, 1
	163 Move X9, 0x72F000
	164 Move [X9+1935], W8
	165 Compare X22, 0
	166 JumpIfEqual {287}
	167 Move W8, [X22+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X8, [X14]
	170 Move X8, [X8+184]
	171 Move V0, [X8]
	172 Add X8, X22, X27
	173 Move [X8+40], X31
	174 Move [X8+32], D0
	175 Move X8, [X19+40]
	176 Compare X8, 0
	177 JumpIfEqual {287}
	178 Move W9, [X8+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X9, [X14]
	181 Move X9, [X9+184]
	182 Move V0, [X9]
	183 Move X9, [X31+24]
	184 Add X8, X8, X9
	185 Move [X8], D0
	186 Move X0, [X25]
	187 Move X22, [X19+48]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {195}
	191 Call 0x1C17DFC
	192 Move X14, 0x451000
	193 Move X14, [X14+3848]
	194 Move X0, [X25]
	195 Compare X22, 0
	196 JumpIfEqual {287}
	197 Move W8, [X22+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X8, [X0+184]
	200 Add X9, X22, X28
	201 Move W8, [X8]
	202 Move [X9], W8
	203 Move X8, [X19+16]
	204 Compare X8, 0
	205 JumpIfEqual {287}
	206 Move W9, [X8+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X9, [X25]
	209 Add X8, X8, X26
	210 Add X8, X8, X29
	211 Move X9, [X9+184]
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 Move V1, [X9+12]
	214 Move [X8+32], D0
	215 Move [X8+40], S1
	216 Move X8, [X19+24]
	217 Compare X8, 0
	218 JumpIfEqual {287}
	219 Move W9, [X8+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X9, [X25]
	222 Add X8, X8, X20
	223 Add X29, X29, 12
	224 Add X8, X8, X23
	225 Move X9, [X9+184]
	226 Add X23, X23, 1
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add X27, X27, 16
	229 Move V0, [X9+1]
	230 Move X21, X24
	231 Move [X8+2], V0
	232 Move X8, [X19+56]
	233 Compare X8, 0
	234 JumpIfEqual {287}
	235 Move W9, [X8+24]
	236 Move X13, [X31+16]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X10, W13
	239 Or X10, X10, 1
	240 Add X11, X8, W13
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X11+32], W21
	243 Add W11, W13, 2
	244 Or W12, W21, 1
	245 Add X10, X8, X10
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move [X10+32], W12
	248 Add X12, X8, W11
	249 Add W11, W13, 3
	250 Or W10, W21, 2
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move [X12+32], W10
	253 Add X12, X8, W11
	254 Add W11, W13, 4
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move [X12+32], W10
	257 Add W10, W13, 5
	258 Or W12, W21, 3
	259 Add X11, X8, W11
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move [X11+32], W12
	262 Add X8, X8, W10
	263 Move W9, [X31+12]
	264 Move [X8+32], W21
	265 Add X21, X21, 4
	266 Add W8, W21, 3
	267 NotImplemented "Instruction CMP not yet implemented."
	268 NotImplemented "Instruction CSEL not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Add W13, W13, 6
	271 Move [X19+64], X31
	272 Move [X19+72], W31
	273 Move X20, [X31+112]
	274 Move X19, [X31+120]
	275 Move X22, [X31+96]
	276 Move X21, [X31+104]
	277 Move X24, [X31+80]
	278 Move X23, [X31+88]
	279 Move X26, [X31+64]
	280 Move X25, [X31+72]
	281 Move X28, [X31+48]
	282 Move X27, [X31+56]
	283 Move X29, [X31+32]
	284 Move X30, [X31+40]
	285 Add X31, X31, 128
	286 Return 
	287 Call 0x1C17F20
	288 Call 0x1C17F28

Method: System.Void ResizeMeshInfo(System.Int32 size)

Disassembly:
	0x03CAB9C0 BL 0x1C16CF4
	0x03CAB9C4 ADRP X0, 0x44F000
	0x03CAB9C8 LDR X0, [X0 + 0x688]
	0x03CAB9CC BL 0x1C16CF4
	0x03CAB9D0 ADRP X0, 0x449000
	0x03CAB9D4 LDR X0, [X0 + 0xE08]
	0x03CAB9D8 BL 0x1C16CF4
	0x03CAB9DC ADRP X0, 0x4B6000
	0x03CAB9E0 LDR X0, [X0 + 0x608]
	0x03CAB9E4 BL 0x1C16CF4
	0x03CAB9E8 ADRP X0, 0x448000
	0x03CAB9EC LDR X0, [X0 + 0x598]
	0x03CAB9F0 BL 0x1C16CF4
	0x03CAB9F4 ADRP X0, 0x4B6000
	0x03CAB9F8 LDR X0, [X0 + 0x748]
	0x03CAB9FC BL 0x1C16CF4
	0x03CABA00 MOVZ W8, 0x1
	0x03CABA04 STRB W8, [X23 + 0x327]
	0x03CABA08 LDR X0, [X24]
	0x03CABA0C LDR W8, [X0 + 0xE0]
	0x03CABA10 CBNZ W8, 0x3CABA18
	0x03CABA14 BL 0x1C16DFC
	0x03CABA18 MOV X0, X20
	0x03CABA1C MOV X1, X31
	0x03CABA20 MOV X2, X31
	0x03CABA24 BL 0x3C3883C
	0x03CABA28 TBZ X0, 0x0, 0x3CABA3C
	0x03CABA2C MOV X20, X31
	0x03CABA30 MOVN W8, 0x0
	0x03CABA34 STR W8, [X19]
	0x03CABA38 B 0x3CABA58
	0x03CABA3C CBZ X20, 0x3CABB38
	0x03CABA40 MOV X0, X20
	0x03CABA44 MOV W1, W21
	0x03CABA48 BL 0x3CAB8A4
	0x03CABA4C ADDS W31, W0, 0x1
	0x03CABA50 STR W0, [X19]
	0x03CABA54 B.EQ 0x3CABA70
	0x03CABA58 MOV X0, X20
	0x03CABA5C LDP X20, X19, [X31 + 0x30]
	0x03CABA60 LDP X22, X21, [X31 + 0x20]
	0x03CABA64 LDP X24, X23, [X31 + 0x10]
	0x03CABA68 LDR X30, [X31], #0x40
	0x03CABA6C RET
	0x03CABA70 ADRP X24, 0x4B6000
	0x03CABA74 LDR X24, [X24 + 0x748]
	0x03CABA78 LDR X8, [X24]
	0x03CABA7C LDR X8, [X8 + 0xB8]
	0x03CABA80 LDR X0, [X8]
	0x03CABA84 CBZ X0, 0x3CABA9C
	0x03CABA88 ADRP X8, 0x44F000
	0x03CABA8C LDR X8, [X8 + 0x678]
	0x03CABA90 LDR X1, [X8]
	0x03CABA94 BL 0x2DAA53C
	0x03CABA98 B 0x3CABACC
	0x03CABA9C ADRP X8, 0x449000
	0x03CABAA0 LDR X8, [X8 + 0xE08]
	0x03CABAA4 LDR X0, [X8]
	0x03CABAA8 BL 0x1C16F10
	0x03CABAAC ADRP X8, 0x44F000
	0x03CABAB0 LDR X8, [X8 + 0x688]
	0x03CABAB4 MOV X23, X0
	0x03CABAB8 LDR X1, [X8]
	0x03CABABC BL 0x2DA9EF4
	0x03CABAC0 LDR X8, [X24]
	0x03CABAC4 LDR X8, [X8 + 0xB8]
	0x03CABAC8 STR X23, [X8]
	0x03CABACC MOV X0, X20
	0x03CABAD0 MOV X1, X31
	0x03CABAD4 BL 0x3C385F8
	0x03CABAD8 LDR X8, [X24]
	0x03CABADC LDR X8, [X8 + 0xB8]
	0x03CABAE0 LDR X8, [X8]
	0x03CABAE4 CBZ X8, 0x3CABB38
	0x03CABAE8 ADRP X9, 0x44A000
	0x03CABAEC LDR X9, [X9 + 0x9D8]
	0x03CABAF0 MOV W1, W0
	0x03CABAF4 MOV X0, X8
	0x03CABAF8 LDR X2, [X9]
	0x03CABAFC BL 0x2DAB03C
	0x03CABB00 TBZ X22, 0x0, 0x3CABA2C
	0x03CABB04 LDR X0, [X20 + 0xD0]
	0x03CABB08 CBZ X0, 0x3CABA2C
	0x03CABB0C LDR W8, [X0 + 0x18]
	0x03CABB10 CMP W8, 0x1
	0x03CABB14 B.LT 0x3CABA2C
	0x03CABB18 MOV W1, W21
	0x03CABB1C MOV X3, X19
	0x03CABB20 LDP X20, X19, [X31 + 0x30]
	0x03CABB24 LDP X22, X21, [X31 + 0x20]
	0x03CABB28 LDP X24, X23, [X31 + 0x10]
	0x03CABB2C MOVZ W2, 0x1
	0x03CABB30 LDR X30, [X31], #0x40
	0x03CABB34 B 0x3CABB3C
	0x03CABB38 BL 0x1C16F20
	0x03CABB3C STR X30, [X31 - 0x60]!
	0x03CABB40 STP X28, X27, [X31 + 0x10]
	0x03CABB44 STP X26, X25, [X31 + 0x20]
	0x03CABB48 STP X24, X23, [X31 + 0x30]
	0x03CABB4C STP X22, X21, [X31 + 0x40]
	0x03CABB50 STP X20, X19, [X31 + 0x50]
	0x03CABB54 ADRP X22, 0x73C000
	0x03CABB58 LDRB W8, [X22 + 0x328]
	0x03CABB5C MOV X19, X3
	0x03CABB60 MOV W23, W2
	0x03CABB64 MOV W20, W1
	0x03CABB68 MOV X21, X0
	0x03CABB6C TBNZ X8, 0x0, 0x3CABBB4
	0x03CABB70 ADRP X0, 0x44A000
	0x03CABB74 LDR X0, [X0 + 0x9D8]
	0x03CABB78 BL 0x1C16CF4
	0x03CABB7C ADRP X0, 0x4B6000
	0x03CABB80 LDR X0, [X0 + 0x608]
	0x03CABB84 BL 0x1C16CF4
	0x03CABB88 ADRP X0, 0x4B6000
	0x03CABB8C LDR X0, [X0 + 0x610]
	0x03CABB90 BL 0x1C16CF4
	0x03CABB94 ADRP X0, 0x448000
	0x03CABB98 LDR X0, [X0 + 0x598]
	0x03CABB9C BL 0x1C16CF4
	0x03CABBA0 ADRP X0, 0x4B6000
	0x03CABBA4 LDR X0, [X0 + 0x748]
	0x03CABBA8 BL 0x1C16CF4
	0x03CABBAC MOVZ W8, 0x1
	0x03CABBB0 STRB W8, [X22 + 0x328]
	0x03CABBB4 CBZ X21, 0x3CABCD8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x73D000
	012 Move W8, [X21+801]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x4AF000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x472000
	023 Move X0, [X0+3792]
	024 Call 0x1C17CF4
	025 Move X0, 0x4AF000
	026 Move X0, [X0+1912]
	027 Call 0x1C17CF4
	028 Move X0, 0x4A4000
	029 Move X0, [X0+552]
	030 Call 0x1C17CF4
	031 Move X0, 0x4AF000
	032 Move X0, [X0+1920]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+801], W8
	036 Move X0, X19
	037 Add X0, X0, 8
	038 Move X8, [X0]
	039 Move W9, 0x3FFF
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Compare X8, 0
	043 JumpIfEqual {140}
	044 Move X9, 0x4A4000
	045 Move X9, [X9+552]
	046 Move X24, 0x4AF000
	047 Move X25, 0x4AF000
	048 Move X26, 0x4AF000
	049 Move X27, 0x472000
	050 Move X24, [X24+1920]
	051 Move X25, [X25+1912]
	052 Move X26, [X26+1904]
	053 Move X27, [X27+3792]
	054 Move W8, [X8+24]
	055 Move X2, [X9]
	056 Move W20, W22
	057 ShiftRight W20, 30
	058 And W20, W20, 0x1FFFFFFF
	059 Add W10, W22, W22
	060 Add W9, W8, 3
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Move W1, W20
	064 Move W21, W10
	065 ShiftRight W21, 31
	066 And W21, W21, 0x3FFFFFFF
	067 NotImplemented "Instruction SBFM not yet implemented."
	068 Call Array.Resize, X0, X1
	069 Move X2, [X24]
	070 Add X0, X19, 32
	071 Move W1, W20
	072 Call Array.Resize, X0, X1
	073 Move X2, [X25]
	074 Add X0, X19, 40
	075 Move W1, W20
	076 Call Array.Resize, X0, X1
	077 Move X2, [X26]
	078 Add X0, X19, 48
	079 Move W1, W20
	080 Call Array.Resize, X0, X1
	081 Move X2, [X27]
	082 Add X19, X19, 56
	083 Move X0, X19
	084 Move W1, W21
	085 Call Array.Resize, X0, X1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X19]
	088 Compare X8, 0
	089 JumpIfEqual {140}
	090 Move W9, [X8+24]
	091 Move X12, W22
	092 Move W10, 6
	093 Or W11, W31, 2
	094 NotImplemented "Instruction MADD not yet implemented."
	095 Move W11, W23
	096 ShiftRight W11, 30
	097 And W11, W11, 0x1FFFFFFF
	098 Subtract X12, X12, W23
	099 Subtract W13, W10, 2
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X14, X8, W13
	102 Subtract W13, W10, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X14+32], W11
	105 Add W14, W11, 1
	106 Add X13, X8, W13
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X13+32], W14
	109 Add W14, W10, 1
	110 Add W13, W11, 2
	111 Add X15, X8, W10
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X15+32], W13
	114 Add X15, X8, W14
	115 Add W14, W10, 2
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X15+32], W13
	118 Add W13, W10, 3
	119 Add W15, W11, 3
	120 Add X14, X8, W14
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X14+32], W15
	123 Add X13, X8, W13
	124 Add W10, W10, 6
	125 Subtract X12, X12, 1
	126 Move [X13+32], W11
	127 Add W11, W11, 4
	128 Move X20, [X31+64]
	129 Move X19, [X31+72]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X26, [X31+16]
	135 Move X25, [X31+24]
	136 Move X30, [X31+80]
	137 Move X27, [X31+88]
	138 Return 
	139 Call 0x1C17F28
	140 Call 0x1C17F20

Method: System.Void Clear(System.Boolean uploadChanges)

Disassembly:
	0x03CABBB8 LDR W8, [X21 + 0x18]
	0x03CABBBC CMP W8, 0x1
	0x03CABBC0 B.LT 0x3CABCAC
	0x03CABBC4 ADRP X25, 0x4B6000
	0x03CABBC8 ADRP X26, 0x448000
	0x03CABBCC ADRP X27, 0x4B6000
	0x03CABBD0 ADRP X28, 0x44A000
	0x03CABBD4 LDR X25, [X25 + 0x610]
	0x03CABBD8 LDR X26, [X26 + 0x598]
	0x03CABBDC LDR X27, [X27 + 0x748]
	0x03CABBE0 LDR X28, [X28 + 0x9D8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+8]
	005 Compare X0, 0
	006 JumpIfEqual {12}
	007 Move W2, [X0+24]
	008 Move W1, W31
	009 Move X3, X31
	010 Call Array.Clear, X0, X1, X2
	011 Move [X19], W31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

Method: System.Void ClearUnusedVertices()

Disassembly:
	0x03CABBE4 MOV W22, W31
	0x03CABBE8 AND W23, W23, 0x1
	0x03CABBEC LDR X2, [X25]
	0x03CABBF0 MOV X0, X21
	0x03CABBF4 MOV W1, W22
	0x03CABBF8 BL 0x301BCCC
	0x03CABBFC LDR X8, [X26]
	0x03CABC00 MOV X24, X0
	0x03CABC04 LDR W9, [X8 + 0xE0]
	0x03CABC08 CBNZ W9, 0x3CABC14
	0x03CABC0C MOV X0, X8
	0x03CABC10 BL 0x1C16DFC
	0x03CABC14 MOV X0, X24
	0x03CABC18 MOV X1, X31
	0x03CABC1C MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+8]
	004 Compare X0, 0
	005 JumpIfEqual {16}
	006 Move W1, [X8]
	007 Move W8, [X0+24]
	008 Subtract W2, W8, W1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X3, X31
	011 Move X30, [X31+16]
	012 Call Array.Clear, X0, X1, X2
	013 Return 
	014 Move X30, [X31+16]
	015 Return 
	016 Call 0x1C17F20

Method: System.Void SortGeometry(UnityEngine.TextCore.Text.VertexSortingOrder order)

Disassembly:
	0x03CABC20 BL 0x3C3883C
	0x03CABC24 TBNZ X0, 0x0, 0x3CABC9C
	0x03CABC28 CBZ X24, 0x3CABCD8
	0x03CABC2C MOV X0, X24
	0x03CABC30 MOV X1, X31
	0x03CABC34 BL 0x3C385F8
	0x03CABC38 LDR X8, [X27]
	0x03CABC3C LDR X8, [X8 + 0xB8]
	0x03CABC40 LDR X8, [X8]
	0x03CABC44 CBZ X8, 0x3CABCD8
	0x03CABC48 LDR X2, [X28]
	0x03CABC4C MOV W1, W0
	0x03CABC50 MOV X0, X8
	0x03CABC54 BL 0x2DAB03C
	0x03CABC58 TBZ X0, 0x0, 0x3CABC9C
	0x03CABC5C MOV X0, X24
	0x03CABC60 MOV W1, W20
	0x03CABC64 MOV W2, W23
	0x03CABC68 MOV X3, X19
	0x03CABC6C BL 0x3CABCDC
	0x03CABC70 LDR X8, [X26]
	0x03CABC74 MOV X24, X0
	0x03CABC78 LDR W9, [X8 + 0xE0]
	0x03CABC7C CBNZ W9, 0x3CABC88
	0x03CABC80 MOV X0, X8
	0x03CABC84 BL 0x1C16DFC
	0x03CABC88 MOV X0, X24
	0x03CABC8C MOV X1, X31
	0x03CABC90 MOV X2, X31
	0x03CABC94 BL 0x3C354F8
	0x03CABC98 TBNZ X0, 0x0, 0x3CABCB8
	0x03CABC9C LDR W8, [X21 + 0x18]
	0x03CABCA0 ADD W22, W22, 0x1
	0x03CABCA4 CMP W22, W8
	0x03CABCA8 B.LT 0x3CABBEC
	0x03CABCAC MOV X24, X31
	0x03CABCB0 MOVN W8, 0x0
	0x03CABCB4 STR W8, [X19]
	0x03CABCB8 MOV X0, X24
	0x03CABCBC LDP X20, X19, [X31 + 0x50]
	0x03CABCC0 LDP X22, X21, [X31 + 0x40]
	0x03CABCC4 LDP X24, X23, [X31 + 0x30]
	0x03CABCC8 LDP X26, X25, [X31 + 0x20]
	0x03CABCCC LDP X28, X27, [X31 + 0x10]
	0x03CABCD0 LDR X30, [X31], #0x60

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x73D000
	008 Move W8, [X21+802]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4B7000
	016 Move X0, [X0+1736]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+802], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W9, [X19]
	022 Add W8, W9, 3
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X23, 0x4B7000
	027 Move X23, [X23+1736]
	028 NotImplemented "Instruction SBFM not yet implemented."
	029 Move W8, W22
	030 ShiftRight W8, 30
	031 And W8, W8, 0x1FFFFFFF
	032 Move W20, W31
	033 Subtract W21, W8, 4
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move W1, W20
	042 Move W2, W21
	043 Call MeshInfo.SwapVertexData, X0, X1, X2
	044 Subtract W22, W22, 1
	045 Add W20, W20, 4
	046 Subtract W21, W21, 4
	047 Compare W22, 0
	048 JumpIfNotEqual {34}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return 

Method: System.Void SwapVertexData(System.Int32 src, System.Int32 dst)

Disassembly:
	0x03CABCD4 RET
	0x03CABCD8 BL 0x1C16F20
	0x03CABCDC STP X30, X23, [X31 - 0x30]!
	0x03CABCE0 STP X22, X21, [X31 + 0x10]
	0x03CABCE4 STP X20, X19, [X31 + 0x20]
	0x03CABCE8 ADRP X23, 0x73C000
	0x03CABCEC LDRB W8, [X23 + 0x329]
	0x03CABCF0 MOV X19, X3
	0x03CABCF4 MOV W22, W2
	0x03CABCF8 MOV W20, W1
	0x03CABCFC MOV X21, X0
	0x03CABD00 TBNZ X8, 0x0, 0x3CABD18
	0x03CABD04 ADRP X0, 0x4B6000
	0x03CABD08 LDR X0, [X0 + 0x608]
	0x03CABD0C BL 0x1C16CF4
	0x03CABD10 MOVZ W8, 0x1
	0x03CABD14 STRB W8, [X23 + 0x329]
	0x03CABD18 CBZ X21, 0x3CABD88
	0x03CABD1C MOV X0, X21
	0x03CABD20 MOV W1, W20
	0x03CABD24 BL 0x3CAB8A4
	0x03CABD28 ADDS W31, W0, 0x1
	0x03CABD2C STR W0, [X19]
	0x03CABD30 B.NE 0x3CABD74
	0x03CABD34 TBZ X22, 0x0, 0x3CABD68
	0x03CABD38 LDR X0, [X21 + 0xD0]
	0x03CABD3C CBZ X0, 0x3CABD68
	0x03CABD40 LDR W8, [X0 + 0x18]
	0x03CABD44 CMP W8, 0x1
	0x03CABD48 B.LT 0x3CABD68
	0x03CABD4C MOV W1, W20
	0x03CABD50 MOV X3, X19
	0x03CABD54 LDP X20, X19, [X31 + 0x20]
	0x03CABD58 LDP X22, X21, [X31 + 0x10]
	0x03CABD5C MOVZ W2, 0x1
	0x03CABD60 LDP X30, X23, [X31], #0x30
	0x03CABD64 B 0x3CABB3C
	0x03CABD68 MOV X21, X31
	0x03CABD6C MOVN W8, 0x0
	0x03CABD70 STR W8, [X19]
	0x03CABD74 MOV X0, X21
	0x03CABD78 LDP X20, X19, [X31 + 0x20]
	0x03CABD7C LDP X22, X21, [X31 + 0x10]
	0x03CABD80 LDP X30, X23, [X31], #0x30
	0x03CABD84 RET
	0x03CABD88 BL 0x1C16F20
	0x03CABD8C STR X30, [X31 - 0x60]!
	0x03CABD90 STP X28, X27, [X31 + 0x10]
	0x03CABD94 STP X26, X25, [X31 + 0x20]
	0x03CABD98 STP X24, X23, [X31 + 0x30]
	0x03CABD9C STP X22, X21, [X31 + 0x40]
	0x03CABDA0 STP X20, X19, [X31 + 0x50]
	0x03CABDA4 ADRP X24, 0x73C000
	0x03CABDA8 ADRP X26, 0x448000
	0x03CABDAC LDRB W8, [X24 + 0x32A]
	0x03CABDB0 LDR X26, [X26 + 0x598]
	0x03CABDB4 MOV X20, X4
	0x03CABDB8 MOV X19, X3
	0x03CABDBC MOV W22, W2
	0x03CABDC0 MOV W23, W1
	0x03CABDC4 MOV X21, X0
	0x03CABDC8 TBNZ X8, 0x0, 0x3CABE28
	0x03CABDCC ADRP X0, 0x44A000
	0x03CABDD0 LDR X0, [X0 + 0x9D8]
	0x03CABDD4 BL 0x1C16CF4
	0x03CABDD8 ADRP X0, 0x44F000
	0x03CABDDC LDR X0, [X0 + 0x678]
	0x03CABDE0 BL 0x1C16CF4
	0x03CABDE4 ADRP X0, 0x44F000
	0x03CABDE8 LDR X0, [X0 + 0x688]
	0x03CABDEC BL 0x1C16CF4
	0x03CABDF0 ADRP X0, 0x449000
	0x03CABDF4 LDR X0, [X0 + 0xE08]
	0x03CABDF8 BL 0x1C16CF4
	0x03CABDFC ADRP X0, 0x4B6000
	0x03CABE00 LDR X0, [X0 + 0x608]
	0x03CABE04 BL 0x1C16CF4
	0x03CABE08 ADRP X0, 0x448000
	0x03CABE0C LDR X0, [X0 + 0x598]
	0x03CABE10 BL 0x1C16CF4
	0x03CABE14 ADRP X0, 0x4B6000
	0x03CABE18 LDR X0, [X0 + 0x748]
	0x03CABE1C BL 0x1C16CF4
	0x03CABE20 MOVZ W8, 0x1
	0x03CABE24 STRB W8, [X24 + 0x32A]
	0x03CABE28 LDR X0, [X26]
	0x03CABE2C LDR W8, [X0 + 0xE0]
	0x03CABE30 CBNZ W8, 0x3CABE38
	0x03CABE34 BL 0x1C16DFC
	0x03CABE38 MOV X0, X21
	0x03CABE3C MOV X1, X31
	0x03CABE40 MOV X2, X31
	0x03CABE44 BL 0x3C3883C
	0x03CABE48 TBZ X0, 0x0, 0x3CABE5C
	0x03CABE4C MOV X21, X31
	0x03CABE50 MOVN W8, 0x0
	0x03CABE54 STR W8, [X19]
	0x03CABE58 B 0x3CABE78
	0x03CABE5C CBZ X21, 0x3CAC0C0
	0x03CABE60 MOV X0, X21
	0x03CABE64 MOV W1, W23
	0x03CABE68 BL 0x3CAB81C
	0x03CABE6C ADDS W31, W0, 0x1
	0x03CABE70 STR W0, [X19]
	0x03CABE74 B.EQ 0x3CABE98
	0x03CABE78 MOV X0, X21
	0x03CABE7C LDP X20, X19, [X31 + 0x50]
	0x03CABE80 LDP X22, X21, [X31 + 0x40]
	0x03CABE84 LDP X24, X23, [X31 + 0x30]
	0x03CABE88 LDP X26, X25, [X31 + 0x20]
	0x03CABE8C LDP X28, X27, [X31 + 0x10]
	0x03CABE90 LDR X30, [X31], #0x60
	0x03CABE94 RET
	0x03CABE98 ADRP X27, 0x4B6000
	0x03CABE9C LDR X27, [X27 + 0x748]
	0x03CABEA0 LDR X8, [X27]
	0x03CABEA4 LDR X8, [X8 + 0xB8]
	0x03CABEA8 LDR X0, [X8]
	0x03CABEAC CBZ X0, 0x3CABEC4
	0x03CABEB0 ADRP X8, 0x44F000
	0x03CABEB4 LDR X8, [X8 + 0x678]
	0x03CABEB8 LDR X1, [X8]
	0x03CABEBC BL 0x2DAA53C
	0x03CABEC0 B 0x3CABEF4
	0x03CABEC4 ADRP X8, 0x449000
	0x03CABEC8 LDR X8, [X8 + 0xE08]
	0x03CABECC LDR X0, [X8]
	0x03CABED0 BL 0x1C16F10
	0x03CABED4 ADRP X8, 0x44F000
	0x03CABED8 LDR X8, [X8 + 0x688]
	0x03CABEDC MOV X24, X0
	0x03CABEE0 LDR X1, [X8]
	0x03CABEE4 BL 0x2DA9EF4
	0x03CABEE8 LDR X8, [X27]
	0x03CABEEC LDR X8, [X8 + 0xB8]
	0x03CABEF0 STR X24, [X8]
	0x03CABEF4 LDR W24, [X21 + 0x20]
	0x03CABEF8 CBNZ W24, 0x3CABF10
	0x03CABEFC MOV X0, X21
	0x03CABF00 MOV X1, X31
	0x03CABF04 BL 0x3C385F8
	0x03CABF08 MOV W24, W0
	0x03CABF0C STR W0, [X21 + 0x20]
	0x03CABF10 LDR X8, [X27]
	0x03CABF14 LDR X8, [X8 + 0xB8]
	0x03CABF18 LDR X0, [X8]
	0x03CABF1C CBZ X0, 0x3CAC0C0
	0x03CABF20 ADRP X28, 0x44A000
	0x03CABF24 LDR X28, [X28 + 0x9D8]
	0x03CABF28 MOV W1, W24
	0x03CABF2C LDR X2, [X28]
	0x03CABF30 BL 0x2DAB03C
	0x03CABF34 TBZ X22, 0x0, 0x3CABF68
	0x03CABF38 LDR X0, [X21 + 0xD0]
	0x03CABF3C CBZ X0, 0x3CABF68
	0x03CABF40 LDR W8, [X0 + 0x18]
	0x03CABF44 CMP W8, 0x1
	0x03CABF48 B.LT 0x3CABF68
	0x03CABF4C MOVZ W2, 0x1
	0x03CABF50 MOV W1, W23
	0x03CABF54 MOV X3, X19
	0x03CABF58 BL 0x3CAC0C4
	0x03CABF5C LDR W8, [X19]
	0x03CABF60 ADDS W31, W8, 0x1
	0x03CABF64 B.NE 0x3CABFDC
	0x03CABF68 LDR X0, [X26]
	0x03CABF6C LDR W8, [X0 + 0xE0]
	0x03CABF70 CBNZ W8, 0x3CABF78
	0x03CABF74 BL 0x1C16DFC
	0x03CABF78 MOV X0, X20
	0x03CABF7C MOV X1, X31
	0x03CABF80 MOV X2, X31
	0x03CABF84 BL 0x3C3883C
	0x03CABF88 TBNZ X0, 0x0, 0x3CABE4C
	0x03CABF8C TBZ X22, 0x0, 0x3CABFE4
	0x03CABF90 CBZ X20, 0x3CAC0C0
	0x03CABF94 LDR X0, [X26]
	0x03CABF98 LDR X25, [X20 + 0x48]
	0x03CABF9C LDR W8, [X0 + 0xE0]
	0x03CABFA0 CBNZ W8, 0x3CABFA8
	0x03CABFA4 BL 0x1C16DFC
	0x03CABFA8 MOV X0, X25
	0x03CABFAC MOV X1, X31
	0x03CABFB0 MOV X2, X31
	0x03CABFB4 BL 0x3C354F8
	0x03CABFB8 TBZ X0, 0x0, 0x3CABFE4
	0x03CABFBC LDR X0, [X20 + 0x48]
	0x03CABFC0 MOVZ W2, 0x1
	0x03CABFC4 MOV W1, W23
	0x03CABFC8 MOV X3, X19
	0x03CABFCC BL 0x3CAC26C
	0x03CABFD0 LDR W8, [X19]
	0x03CABFD4 ADDS W31, W8, 0x1
	0x03CABFD8 B.EQ 0x3CABFE4
	0x03CABFDC MOV X21, X0
	0x03CABFE0 B 0x3CABE78
	0x03CABFE4 LDR X8, [X27]
	0x03CABFE8 LDR X8, [X8 + 0xB8]
	0x03CABFEC LDR X0, [X8]
	0x03CABFF0 CBZ X0, 0x3CAC0C0
	0x03CABFF4 ADRP X8, 0x44F000
	0x03CABFF8 LDR X8, [X8 + 0x678]
	0x03CABFFC LDR X1, [X8]
	0x03CAC000 BL 0x2DAA53C
	0x03CAC004 CBZ X20, 0x3CAC0C0
	0x03CAC008 LDR W23, [X20 + 0x60]
	0x03CAC00C MOV X0, X21
	0x03CAC010 MOV W1, W23
	0x03CAC014 BL 0x3CAB8A4
	0x03CAC018 ADDS W31, W0, 0x1
	0x03CAC01C STR W0, [X19]
	0x03CAC020 B.NE 0x3CABE78
	0x03CAC024 LDR X8, [X27]
	0x03CAC028 LDR X8, [X8 + 0xB8]
	0x03CAC02C LDR X0, [X8]
	0x03CAC030 CBZ X0, 0x3CAC0C0
	0x03CAC034 LDR X2, [X28]
	0x03CAC038 MOV W1, W24
	0x03CAC03C BL 0x2DAB03C
	0x03CAC040 TBZ X22, 0x0, 0x3CABE4C
	0x03CAC044 LDR X0, [X21 + 0xD0]
	0x03CAC048 CBZ X0, 0x3CAC074
	0x03CAC04C LDR W8, [X0 + 0x18]
	0x03CAC050 CMP W8, 0x1
	0x03CAC054 B.LT 0x3CAC074
	0x03CAC058 MOVZ W2, 0x1
	0x03CAC05C MOV W1, W23
	0x03CAC060 MOV X3, X19
	0x03CAC064 BL 0x3CABB3C
	0x03CAC068 LDR W8, [X19]
	0x03CAC06C ADDS W31, W8, 0x1
	0x03CAC070 B.NE 0x3CABFDC
	0x03CAC074 LDR X0, [X26]
	0x03CAC078 LDR X21, [X20 + 0x48]
	0x03CAC07C LDR W8, [X0 + 0xE0]
	0x03CAC080 CBNZ W8, 0x3CAC088
	0x03CAC084 BL 0x1C16DFC
	0x03CAC088 MOV X0, X21
	0x03CAC08C MOV X1, X31
	0x03CAC090 MOV X2, X31
	0x03CAC094 BL 0x3C354F8
	0x03CAC098 TBZ X0, 0x0, 0x3CABE4C
	0x03CAC09C LDR X0, [X20 + 0x48]
	0x03CAC0A0 MOVZ W2, 0x1
	0x03CAC0A4 MOV W1, W23
	0x03CAC0A8 MOV X3, X19
	0x03CAC0AC BL 0x3CABCDC
	0x03CAC0B0 LDR W8, [X19]
	0x03CAC0B4 ADDS W31, W8, 0x1
	0x03CAC0B8 B.NE 0x3CABFDC
	0x03CAC0BC B 0x3CABE4C
	0x03CAC0C0 BL 0x1C16F20
	0x03CAC0C4 STR X30, [X31 - 0x60]!
	0x03CAC0C8 STP X28, X27, [X31 + 0x10]
	0x03CAC0CC STP X26, X25, [X31 + 0x20]
	0x03CAC0D0 STP X24, X23, [X31 + 0x30]
	0x03CAC0D4 STP X22, X21, [X31 + 0x40]
	0x03CAC0D8 STP X20, X19, [X31 + 0x50]
	0x03CAC0DC ADRP X22, 0x73B000
	0x03CAC0E0 LDRB W8, [X22 + 0x32B]
	0x03CAC0E4 MOV X19, X3
	0x03CAC0E8 MOV W23, W2
	0x03CAC0EC MOV W20, W1
	0x03CAC0F0 MOV X21, X0
	0x03CAC0F4 TBNZ X8, 0x0, 0x3CAC13C
	0x03CAC0F8 ADRP X0, 0x449000
	0x03CAC0FC LDR X0, [X0 + 0x9D8]
	0x03CAC100 BL 0x1C16CF4
	0x03CAC104 ADRP X0, 0x4B5000
	0x03CAC108 LDR X0, [X0 + 0x608]
	0x03CAC10C BL 0x1C16CF4
	0x03CAC110 ADRP X0, 0x4B5000
	0x03CAC114 LDR X0, [X0 + 0x610]
	0x03CAC118 BL 0x1C16CF4
	0x03CAC11C ADRP X0, 0x447000
	0x03CAC120 LDR X0, [X0 + 0x598]
	0x03CAC124 BL 0x1C16CF4
	0x03CAC128 ADRP X0, 0x4B5000
	0x03CAC12C LDR X0, [X0 + 0x748]
	0x03CAC130 BL 0x1C16CF4
	0x03CAC134 MOVZ W8, 0x1
	0x03CAC138 STRB W8, [X22 + 0x32B]
	0x03CAC13C CBZ X21, 0x3CAC268
	0x03CAC140 LDR W8, [X21 + 0x18]
	0x03CAC144 CMP W8, 0x1
	0x03CAC148 B.LT 0x3CAC23C
	0x03CAC14C ADRP X25, 0x4B5000
	0x03CAC150 ADRP X26, 0x447000
	0x03CAC154 ADRP X27, 0x4B5000
	0x03CAC158 ADRP X28, 0x449000
	0x03CAC15C LDR X25, [X25 + 0x610]
	0x03CAC160 LDR X26, [X26 + 0x598]
	0x03CAC164 LDR X27, [X27 + 0x748]
	0x03CAC168 LDR X28, [X28 + 0x9D8]
	0x03CAC16C MOV W22, W31
	0x03CAC170 AND W23, W23, 0x1
	0x03CAC174 LDR X2, [X25]
	0x03CAC178 MOV X0, X21
	0x03CAC17C MOV W1, W22
	0x03CAC180 BL 0x301BCCC
	0x03CAC184 LDR X8, [X26]
	0x03CAC188 MOV X24, X0
	0x03CAC18C LDR W9, [X8 + 0xE0]
	0x03CAC190 CBNZ W9, 0x3CAC19C
	0x03CAC194 MOV X0, X8
	0x03CAC198 BL 0x1C16DFC
	0x03CAC19C MOV X0, X24
	0x03CAC1A0 MOV X1, X31
	0x03CAC1A4 MOV X2, X31
	0x03CAC1A8 BL 0x3C3883C
	0x03CAC1AC TBNZ X0, 0x0, 0x3CAC22C
	0x03CAC1B0 CBZ X24, 0x3CAC268
	0x03CAC1B4 LDR W1, [X24 + 0x20]
	0x03CAC1B8 CBNZ W1, 0x3CAC1D0
	0x03CAC1BC MOV X0, X24
	0x03CAC1C0 MOV X1, X31
	0x03CAC1C4 BL 0x3C385F8
	0x03CAC1C8 MOV W1, W0
	0x03CAC1CC STR W0, [X24 + 0x20]
	0x03CAC1D0 LDR X8, [X27]
	0x03CAC1D4 LDR X8, [X8 + 0xB8]
	0x03CAC1D8 LDR X0, [X8]
	0x03CAC1DC CBZ X0, 0x3CAC268
	0x03CAC1E0 LDR X2, [X28]
	0x03CAC1E4 BL 0x2DAB03C
	0x03CAC1E8 TBZ X0, 0x0, 0x3CAC22C
	0x03CAC1EC MOV X0, X24
	0x03CAC1F0 MOV W1, W20
	0x03CAC1F4 MOV W2, W23
	0x03CAC1F8 MOV X3, X19
	0x03CAC1FC BL 0x3CAC26C
	0x03CAC200 LDR X8, [X26]
	0x03CAC204 MOV X24, X0
	0x03CAC208 LDR W9, [X8 + 0xE0]
	0x03CAC20C CBNZ W9, 0x3CAC218
	0x03CAC210 MOV X0, X8
	0x03CAC214 BL 0x1C16DFC
	0x03CAC218 MOV X0, X24
	0x03CAC21C MOV X1, X31
	0x03CAC220 MOV X2, X31
	0x03CAC224 BL 0x3C354F8
	0x03CAC228 TBNZ X0, 0x0, 0x3CAC248
	0x03CAC22C LDR W8, [X21 + 0x18]
	0x03CAC230 ADD W22, W22, 0x1
	0x03CAC234 CMP W22, W8
	0x03CAC238 B.LT 0x3CAC174
	0x03CAC23C MOV X24, X31
	0x03CAC240 MOVN W8, 0x0
	0x03CAC244 STR W8, [X19]
	0x03CAC248 MOV X0, X24
	0x03CAC24C LDP X20, X19, [X31 + 0x50]
	0x03CAC250 LDP X22, X21, [X31 + 0x40]
	0x03CAC254 LDP X24, X23, [X31 + 0x30]
	0x03CAC258 LDP X26, X25, [X31 + 0x20]
	0x03CAC25C LDP X28, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X10, [X0+8]
	003 Compare X10, 0
	004 JumpIfEqual {359}
	005 Move W8, [X10+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, W2
	008 Move W11, 12
	009 NotImplemented "Instruction MADD not yet implemented."
	010 Add X11, X11, 32
	011 Move V0, [X11]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X12, X11
	014 Add X12, X12, 8
	015 Move V1, [X12]
	016 Move X8, W1
	017 Move W13, 12
	018 NotImplemented "Instruction MADD not yet implemented."
	019 Move V2, [X10+32]
	020 Move V3, [X10+40]
	021 Move [X11], D2
	022 Move [X12], S3
	023 Move X10, [X0+8]
	024 Compare X10, 0
	025 JumpIfEqual {359}
	026 Move W11, [X10+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W11, 12
	029 NotImplemented "Instruction MADD not yet implemented."
	030 Move [X10+32], D0
	031 Move [X10+40], S1
	032 Move X12, [X0+8]
	033 Compare X12, 0
	034 JumpIfEqual {359}
	035 Move W10, [X12+24]
	036 Add W11, W2, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X11, W11
	039 Move W13, 12
	040 NotImplemented "Instruction MADD not yet implemented."
	041 Add X13, X13, 32
	042 Move V0, [X13]
	043 Add W15, W1, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X14, X13
	046 Add X14, X14, 8
	047 Move V1, [X14]
	048 Move X10, W15
	049 Move W15, 12
	050 NotImplemented "Instruction MADD not yet implemented."
	051 Move V2, [X12+32]
	052 Move V3, [X12+40]
	053 Move [X13], D2
	054 Move [X14], S3
	055 Move X12, [X0+8]
	056 Compare X12, 0
	057 JumpIfEqual {359}
	058 Move W13, [X12+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W13, 12
	061 NotImplemented "Instruction MADD not yet implemented."
	062 Move [X12+32], D0
	063 Move [X12+40], S1
	064 Move X14, [X0+8]
	065 Compare X14, 0
	066 JumpIfEqual {359}
	067 Move W12, [X14+24]
	068 Add W13, W2, 2
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X13, W13
	071 Move W15, 12
	072 NotImplemented "Instruction MADD not yet implemented."
	073 Add X15, X15, 32
	074 Move V0, [X15]
	075 Add W17, W1, 2
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X16, X15
	078 Add X16, X16, 8
	079 Move V1, [X16]
	080 Move X12, W17
	081 Move W17, 12
	082 NotImplemented "Instruction MADD not yet implemented."
	083 Move V2, [X14+32]
	084 Move V3, [X14+40]
	085 Move [X15], D2
	086 Move [X16], S3
	087 Move X14, [X0+8]
	088 Compare X14, 0
	089 JumpIfEqual {359}
	090 Move W15, [X14+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W15, 12
	093 NotImplemented "Instruction MADD not yet implemented."
	094 Move [X14+32], D0
	095 Move [X14+40], S1
	096 Move X16, [X0+8]
	097 Compare X16, 0
	098 JumpIfEqual {359}
	099 Move W14, [X16+24]
	100 Add W15, W2, 3
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X15, W15
	103 Move W17, 12
	104 NotImplemented "Instruction MADD not yet implemented."
	105 Add X17, X17, 32
	106 Move V0, [X17]
	107 Add W4, W1, 3
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X3, X17
	110 Add X3, X3, 8
	111 Move V1, [X3]
	112 Move X14, W4
	113 Move W4, 12
	114 NotImplemented "Instruction MADD not yet implemented."
	115 Move V2, [X16+32]
	116 Move V3, [X16+40]
	117 Move [X17], D2
	118 Move [X3], S3
	119 Move X16, [X0+8]
	120 Compare X16, 0
	121 JumpIfEqual {359}
	122 Move W17, [X16+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W17, 12
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Move [X16+32], D0
	127 Move [X16+40], S1
	128 Move X16, [X0+32]
	129 Compare X16, 0
	130 JumpIfEqual {359}
	131 Move W3, [X16+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X17, X16, X9
	134 Add X17, X17, 32
	135 Move V0, [X17]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X16, X16, X8
	138 Move V1, [X16+2]
	139 Move [X17], V1
	140 Move X16, [X0+32]
	141 Compare X16, 0
	142 JumpIfEqual {359}
	143 Move W17, [X16+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X16, X16, X8
	146 Move [X16+2], V0
	147 Move X16, [X0+32]
	148 Compare X16, 0
	149 JumpIfEqual {359}
	150 Move W17, [X16+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add X3, X16, X11
	153 Add X3, X3, 32
	154 Move V0, [X3]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X16, X16, X10
	157 Move V1, [X16+2]
	158 Move [X3], V1
	159 Move X16, [X0+32]
	160 Compare X16, 0
	161 JumpIfEqual {359}
	162 Move W17, [X16+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add X16, X16, X10
	165 Move [X16+2], V0
	166 Move X16, [X0+32]
	167 Compare X16, 0
	168 JumpIfEqual {359}
	169 Move W17, [X16+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X3, X16, X13
	172 Add X3, X3, 32
	173 Move V0, [X3]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add X16, X16, X12
	176 Move V1, [X16+2]
	177 Move [X3], V1
	178 Move X16, [X0+32]
	179 Compare X16, 0
	180 JumpIfEqual {359}
	181 Move W17, [X16+24]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Add X16, X16, X12
	184 Move [X16+2], V0
	185 Move X16, [X0+32]
	186 Compare X16, 0
	187 JumpIfEqual {359}
	188 Move W17, [X16+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add X3, X16, X15
	191 Add X3, X3, 32
	192 Move V0, [X3]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add X16, X16, X14
	195 Move V1, [X16+2]
	196 Move [X3], V1
	197 Move X16, [X0+32]
	198 Compare X16, 0
	199 JumpIfEqual {359}
	200 Move W17, [X16+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add X16, X16, X14
	203 Move [X16+2], V0
	204 Move X16, [X0+40]
	205 Compare X16, 0
	206 JumpIfEqual {359}
	207 Move W3, [X16+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Add X17, X16, X9
	210 Add X17, X17, 32
	211 Move V0, [X17]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Add X16, X16, X8
	214 Move V1, [X16+32]
	215 Move [X17], D1
	216 Move X16, [X0+40]
	217 Compare X16, 0
	218 JumpIfEqual {359}
	219 Move W17, [X16+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add X16, X16, X8
	222 Move [X16+32], D0
	223 Move X16, [X0+40]
	224 Compare X16, 0
	225 JumpIfEqual {359}
	226 Move W17, [X16+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add X3, X16, X11
	229 Add X3, X3, 32
	230 Move V0, [X3]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add X16, X16, X10
	233 Move V1, [X16+32]
	234 Move [X3], D1
	235 Move X16, [X0+40]
	236 Compare X16, 0
	237 JumpIfEqual {359}
	238 Move W17, [X16+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add X16, X16, X10
	241 Move [X16+32], D0
	242 Move X16, [X0+40]
	243 Compare X16, 0
	244 JumpIfEqual {359}
	245 Move W17, [X16+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add X3, X16, X13
	248 Add X3, X3, 32
	249 Move V0, [X3]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Add X16, X16, X12
	252 Move V1, [X16+32]
	253 Move [X3], D1
	254 Move X16, [X0+40]
	255 Compare X16, 0
	256 JumpIfEqual {359}
	257 Move W17, [X16+24]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Add X16, X16, X12
	260 Move [X16+32], D0
	261 Move X16, [X0+40]
	262 Compare X16, 0
	263 JumpIfEqual {359}
	264 Move W17, [X16+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Add X3, X16, X15
	267 Add X3, X3, 32
	268 Move V0, [X3]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Add X16, X16, X14
	271 Move V1, [X16+32]
	272 Move [X3], D1
	273 Move X16, [X0+40]
	274 Compare X16, 0
	275 JumpIfEqual {359}
	276 Move W17, [X16+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Add X16, X16, X14
	279 Move [X16+32], D0
	280 Move X16, [X0+48]
	281 Compare X16, 0
	282 JumpIfEqual {359}
	283 Move W3, [X16+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add X17, X16, X9
	286 Add X17, X17, 32
	287 Move W9, [X17]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Add X16, X16, X8
	290 Move W16, [X16+32]
	291 Move [X17], W16
	292 Move X16, [X0+48]
	293 Compare X16, 0
	294 JumpIfEqual {359}
	295 Move W17, [X16+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Add X8, X16, X8
	298 Move [X8+32], W9
	299 Move X9, [X0+48]
	300 Compare X9, 0
	301 JumpIfEqual {359}
	302 Move W16, [X9+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Add X11, X9, X11
	305 Add X11, X11, 32
	306 Move W8, [X11]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Add X9, X9, X10
	309 Move W9, [X9+32]
	310 Move [X11], W9
	311 Move X9, [X0+48]
	312 Compare X9, 0
	313 JumpIfEqual {359}
	314 Move W11, [X9+24]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Add X9, X9, X10
	317 Move [X9+32], W8
	318 Move X9, [X0+48]
	319 Compare X9, 0
	320 JumpIfEqual {359}
	321 Move W10, [X9+24]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Add X11, X9, X13
	324 Add X11, X11, 32
	325 Move W8, [X11]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Add X9, X9, X12
	328 Move W9, [X9+32]
	329 Move [X11], W9
	330 Move X9, [X0+48]
	331 Compare X9, 0
	332 JumpIfEqual {359}
	333 Move W10, [X9+24]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Add X9, X9, X12
	336 Move [X9+32], W8
	337 Move X9, [X0+48]
	338 Compare X9, 0
	339 JumpIfEqual {359}
	340 Move W10, [X9+24]
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Add X11, X9, X15
	343 Add X11, X11, 32
	344 Move W8, [X11]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Add X9, X9, X14
	347 Move W9, [X9+32]
	348 Move [X11], W9
	349 Move X9, [X0+48]
	350 Compare X9, 0
	351 JumpIfEqual {359}
	352 Move W10, [X9+24]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Add X9, X9, X14
	355 Move [X9+32], W8
	356 Move X30, [X31+16]
	357 Return 
	358 Call 0x1C17F28
	359 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03CAC260 LDR X30, [X31], #0x60
	0x03CAC264 RET
	0x03CAC268 BL 0x1C16F20
	0x03CAC26C STP X30, X23, [X31 - 0x30]!
	0x03CAC270 STP X22, X21, [X31 + 0x10]
	0x03CAC274 STP X20, X19, [X31 + 0x20]
	0x03CAC278 ADRP X23, 0x73B000
	0x03CAC27C LDRB W8, [X23 + 0x32C]
	0x03CAC280 MOV X19, X3
	0x03CAC284 MOV W22, W2
	0x03CAC288 MOV W20, W1
	0x03CAC28C MOV X21, X0
	0x03CAC290 TBNZ X8, 0x0, 0x3CAC2A8
	0x03CAC294 ADRP X0, 0x4B5000
	0x03CAC298 LDR X0, [X0 + 0x608]
	0x03CAC29C BL 0x1C16CF4
	0x03CAC2A0 MOVZ W8, 0x1
	0x03CAC2A4 STRB W8, [X23 + 0x32C]
	0x03CAC2A8 CBZ X21, 0x3CAC318
	0x03CAC2AC MOV X0, X21
	0x03CAC2B0 MOV W1, W20
	0x03CAC2B4 BL 0x3CAB81C
	0x03CAC2B8 ADDS W31, W0, 0x1
	0x03CAC2BC STR W0, [X19]
	0x03CAC2C0 B.NE 0x3CAC304
	0x03CAC2C4 TBZ X22, 0x0, 0x3CAC2F8
	0x03CAC2C8 LDR X0, [X21 + 0xD0]
	0x03CAC2CC CBZ X0, 0x3CAC2F8
	0x03CAC2D0 LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x73C000
	005 Move X19, 0x4B6000
	006 Move W8, [X20+803]
	007 Move X19, [X19+1736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4B6000
	013 Move X0, [X0+1736]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+803], W8
	017 Move X8, [X19]
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W9, TEMP
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X8, [X19]
	024 Move W9, 0xBF800000
	025 Move X8, [X8+184]
	026 Move [X8+4], W31
	027 Move [X8+8], W31
	028 Move [X8+12], W9
	029 Move X8, [X19]
	030 Move X9, -52170752
	031 Move V0, [X9+92]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X8, [X8+184]
	035 Move [X8+1], V0
	036 Move X30, [X31+32]
	037 Return 

