Type: UnityEngine.TextCore.Text.FontAsset

Method: UnityEngine.TextCore.Text.FontAssetCreationEditorSettings get_fontAssetCreationEditorSettings()

Disassembly:
	0x03C9FAC0 TBNZ X8, 0x0, 0x3C9FAD8
	0x03C9FAC4 ADRP X0, 0x4C2000
	0x03C9FAC8 LDR X0, [X0 + 0x258]
	0x03C9FACC BL 0x1C16CF4
	0x03C9FAD0 MOVZ W8, 0x1
	0x03C9FAD4 STRB W8, [X27 + 0x2D1]
	0x03C9FAD8 LDR X0, [X28]

ISIL:
	001 Move [X31-16], X30
	002 Add X1, X0, 64
	003 Move W2, 88
	004 Move X0, X8
	005 Call 0x3EB2AC0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void set_fontAssetCreationEditorSettings(UnityEngine.TextCore.Text.FontAssetCreationEditorSettings value)

Disassembly:
	0x03C9FADC LDR W8, [X0 + 0xE0]
	0x03C9FAE0 CBNZ W8, 0x3C9FAE8
	0x03C9FAE4 BL 0x1C16DFC
	0x03C9FAE8 AND W8, W25, 0x1
	0x03C9FAEC MOV X0, X26
	0x03C9FAF0 MOV W1, W31

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 64
	003 Move W2, 88
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: UnityEngine.Font get_sourceFontFile()

Disassembly:
	0x03C9FAF4 MOV W2, W24
	0x03C9FAF8 MOV W3, W23

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_sourceFontFile(UnityEngine.Font value)

Disassembly:
	0x03C9FAFC MOV W4, W22
	0x03C9FB00 MOV W5, W21

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: UnityEngine.TextCore.Text.AtlasPopulationMode get_atlasPopulationMode()

Disassembly:
	0x03C9FB04 MOV W6, W20
	0x03C9FB08 MOV W7, W19

ISIL:
	001 Move W0, [X0+168]
	002 Return X0

Method: System.Void set_atlasPopulationMode(UnityEngine.TextCore.Text.AtlasPopulationMode value)

Disassembly:
	0x03C9FB0C STRB W8, [X31]
	0x03C9FB10 BL 0x3C9FB34

ISIL:
	001 Move [X0+168], W1
	002 Return 

Method: UnityEngine.TextCore.FaceInfo get_faceInfo()

Disassembly:
	0x03C9FB14 LDP X20, X19, [X31 + 0x60]
	0x03C9FB18 LDP X22, X21, [X31 + 0x50]
	0x03C9FB1C LDP X24, X23, [X31 + 0x40]
	0x03C9FB20 LDP X26, X25, [X31 + 0x30]
	0x03C9FB24 LDP X28, X27, [X31 + 0x20]
	0x03C9FB28 LDR X30, [X31 + 0x10]
	0x03C9FB2C ADD X31, X31, 0x70

ISIL:
	001 Move [X31-16], X30
	002 Add X1, X0, 176
	003 Move W2, 96
	004 Move X0, X8
	005 Call 0x3EB2AC0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void set_faceInfo(UnityEngine.TextCore.FaceInfo value)

Disassembly:
	0x03C9FB30 RET
	0x03C9FB34 STP X29, X30, [X31 - 0x60]!
	0x03C9FB38 STP X28, X27, [X31 + 0x10]
	0x03C9FB3C STP X26, X25, [X31 + 0x20]
	0x03C9FB40 STP X24, X23, [X31 + 0x30]
	0x03C9FB44 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 176
	003 Move W2, 96
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: System.Int32 get_familyNameHashCode()

Disassembly:
	0x03C9FB48 STP X20, X19, [X31 + 0x50]
	0x03C9FB4C ADRP X28, 0x748000
	0x03C9FB50 ADRP X29, 0x4B9000
	0x03C9FB54 LDRB W8, [X28 + 0x2D2]
	0x03C9FB58 LDRB W27, [X31 + 0x60]
	0x03C9FB5C LDR X29, [X29 + 0xBC0]
	0x03C9FB60 MOV W20, W7
	0x03C9FB64 MOV W21, W6
	0x03C9FB68 MOV W22, W5
	0x03C9FB6C MOV W23, W4
	0x03C9FB70 MOV W24, W3
	0x03C9FB74 MOV W26, W2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, [X0+272]
	005 Compare W0, 0
	006 JumpIfNotEqual {13}
	007 Add X0, X19, 176
	008 Move X1, X31
	009 Call FaceInfo.get_familyName, X0
	010 Move X1, X31
	011 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	012 Move [X19+272], W0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Void set_familyNameHashCode(System.Int32 value)

Disassembly:
	0x03C9FB78 MOV W25, W1
	0x03C9FB7C MOV X19, X0

ISIL:
	001 Move [X0+272], W1
	002 Return 

Method: System.Int32 get_styleNameHashCode()

Disassembly:
	0x03C9FB80 TBNZ X8, 0x0, 0x3C9FBEC
	0x03C9FB84 ADRP X0, 0x454000
	0x03C9FB88 LDR X0, [X0 + 0xA28]
	0x03C9FB8C BL 0x1C16CF4
	0x03C9FB90 ADRP X0, 0x4C2000
	0x03C9FB94 LDR X0, [X0 + 0x258]
	0x03C9FB98 BL 0x1C16CF4
	0x03C9FB9C ADRP X0, 0x4B9000
	0x03C9FBA0 LDR X0, [X0 + 0xBC0]
	0x03C9FBA4 BL 0x1C16CF4
	0x03C9FBA8 ADRP X0, 0x4C2000
	0x03C9FBAC LDR X0, [X0 + 0x290]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, [X0+276]
	005 Compare W0, 0
	006 JumpIfNotEqual {13}
	007 Add X0, X19, 176
	008 Move X1, X31
	009 Call FaceInfo.get_styleName, X0
	010 Move X1, X31
	011 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	012 Move [X19+276], W0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Void set_styleNameHashCode(System.Int32 value)

Disassembly:
	0x03C9FBB0 BL 0x1C16CF4
	0x03C9FBB4 ADRP X0, 0x4C2000

ISIL:
	001 Move [X0+276], W1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> get_glyphTable()

Disassembly:
	0x03C9FBB8 LDR X0, [X0 + 0x298]
	0x03C9FBBC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+280]
	002 Return X0

Method: System.Void set_glyphTable(System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> value)

Disassembly:
	0x03C9FBC0 ADRP X0, 0x4B9000
	0x03C9FBC4 LDR X0, [X0 + 0xBF8]

ISIL:
	001 Move [X0+280], X1
	002 Return 

Method: System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.TextCore.Glyph> get_glyphLookupTable()

Disassembly:
	0x03C9FBC8 BL 0x1C16CF4
	0x03C9FBCC ADRP X0, 0x4B9000
	0x03C9FBD0 LDR X0, [X0 + 0xC00]
	0x03C9FBD4 BL 0x1C16CF4
	0x03C9FBD8 ADRP X0, 0x4C2000
	0x03C9FBDC LDR X0, [X0 + 0x2A0]
	0x03C9FBE0 BL 0x1C16CF4
	0x03C9FBE4 MOVZ W8, 0x1
	0x03C9FBE8 STRB W8, [X28 + 0x2D2]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+288]
	005 Compare X0, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call FontAsset.ReadFontAssetDefinition, X0
	009 Move X0, [X19+288]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.Text.Character> get_characterTable()

Disassembly:
	0x03C9FF8C MOV X2, X31
	0x03C9FF90 BL 0x3C06B0C

ISIL:
	001 Move X0, [X0+296]
	002 Return X0

Method: System.Void set_characterTable(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.Character> value)

Disassembly:
	0x03C9FF94 MOV W20, W31
	0x03C9FF98 MOVZ W1, 0x3

ISIL:
	001 Move [X0+296], X1
	002 Return 

Method: System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.TextCore.Text.Character> get_characterLookupTable()

Disassembly:
	0x03C9FF9C MOVZ W3, 0x1
	0x03C9FFA0 MOV X0, X19
	0x03C9FFA4 MOV W2, W20
	0x03C9FFA8 BL 0x3CA0F5C
	0x03C9FFAC MOVZ W1, 0x9
	0x03C9FFB0 MOVZ W3, 0x1
	0x03C9FFB4 MOV X0, X19
	0x03C9FFB8 MOV W2, W20
	0x03C9FFBC BL 0x3CA0F5C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+304]
	005 Compare X0, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call FontAsset.ReadFontAssetDefinition, X0
	009 Move X0, [X19+304]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: UnityEngine.Texture2D get_atlasTexture()

Disassembly:
	0x03C9FFC0 MOVZ W1, 0xA
	0x03C9FFC4 MOV X0, X19
	0x03C9FFC8 MOV W2, W20
	0x03C9FFCC MOV W3, W31
	0x03C9FFD0 BL 0x3CA0F5C
	0x03C9FFD4 MOVZ W1, 0xB
	0x03C9FFD8 MOV X0, X19
	0x03C9FFDC MOV W2, W20
	0x03C9FFE0 MOV W3, W31
	0x03C9FFE4 BL 0x3CA0F5C
	0x03C9FFE8 MOVZ W1, 0xD
	0x03C9FFEC MOV X0, X19
	0x03C9FFF0 MOV W2, W20
	0x03C9FFF4 MOV W3, W31
	0x03C9FFF8 BL 0x3CA0F5C
	0x03C9FFFC MOVZ W1, 0x61C
	0x03CA0000 MOV X0, X19
	0x03CA0004 MOV W2, W20
	0x03CA0008 MOV W3, W31
	0x03CA000C BL 0x3CA0F5C
	0x03CA0010 MOVZ W1, 0x200B
	0x03CA0014 MOV X0, X19
	0x03CA0018 MOV W2, W20
	0x03CA001C MOV W3, W31
	0x03CA0020 BL 0x3CA0F5C
	0x03CA0024 MOVZ W1, 0x200E
	0x03CA0028 MOV X0, X19
	0x03CA002C MOV W2, W20
	0x03CA0030 MOV W3, W31
	0x03CA0034 BL 0x3CA0F5C
	0x03CA0038 MOVZ W1, 0x200F
	0x03CA003C MOV X0, X19
	0x03CA0040 MOV W2, W20
	0x03CA0044 MOV W3, W31
	0x03CA0048 BL 0x3CA0F5C
	0x03CA004C MOVZ W1, 0x2028

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x749000
	006 Move X20, 0x455000
	007 Move W8, [X21+716]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x455000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+716], W8
	019 Move X0, [X20]
	020 Move X20, [X19+312]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {41}
	033 Move X8, [X19+320]
	034 Compare X8, 0
	035 JumpIfEqual {47}
	036 Move W9, [X8+24]
	037 Compare W9, 0
	038 JumpIfEqual {48}
	039 Move X0, [X8+32]
	040 Move [X19+312], X0
	041 Move X0, [X19+312]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x1C17F28

Method: UnityEngine.Texture2D[] get_atlasTextures()

Disassembly:
	0x03CA0050 MOV X0, X19
	0x03CA0054 MOV W2, W20

ISIL:
	001 Move X0, [X0+320]
	002 Return X0

Method: System.Void set_atlasTextures(UnityEngine.Texture2D[] value)

Disassembly:
	0x03CA0058 MOV W3, W31
	0x03CA005C BL 0x3CA0F5C

ISIL:
	001 Move [X0+320], X1
	002 Return 

Method: System.Int32 get_atlasTextureCount()

Disassembly:
	0x03CA0060 MOVZ W1, 0x2029
	0x03CA0064 MOV X0, X19
	0x03CA0068 MOV W2, W20

ISIL:
	001 Move W8, [X0+328]
	002 Add W0, W8, 1
	003 Return X0

Method: System.Boolean get_isMultiAtlasTexturesEnabled()

Disassembly:
	0x03CA006C MOV W3, W31
	0x03CA0070 BL 0x3CA0F5C

ISIL:
	001 Move W0, [X0+332]
	002 Return X0

Method: System.Void set_isMultiAtlasTexturesEnabled(System.Boolean value)

Disassembly:
	0x03CA0074 MOV X0, X19
	0x03CA0078 MOV W2, W20
	0x03CA007C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+332], W8
	003 Return 

Method: System.Boolean get_clearDynamicDataOnBuild()

Disassembly:
	0x03CA0080 MOVZ W1, 0x2060
	0x03CA0084 MOV W3, W31

ISIL:
	001 Move W0, [X0+333]
	002 Return X0

Method: System.Void set_clearDynamicDataOnBuild(System.Boolean value)

Disassembly:
	0x03CA0088 LDR X30, [X31], #0x20
	0x03CA008C B 0x3CA0F5C
	0x03CA0090 MOVZ W20, 0x1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+333], W8
	003 Return 

Method: System.Int32 get_atlasWidth()

Disassembly:
	0x03CA0094 B 0x3C9FF98
	0x03CA0098 LDR W0, [X0 + 0x28]

ISIL:
	001 Move W0, [X0+336]
	002 Return X0

Method: System.Void set_atlasWidth(System.Int32 value)

Disassembly:
	0x03CA009C RET
	0x03CA00A0 STP X30, X27, [X31 - 0x50]!

ISIL:
	001 Move [X0+336], W1
	002 Return 

Method: System.Int32 get_atlasHeight()

Disassembly:
	0x03CA00A4 STP X26, X25, [X31 + 0x10]
	0x03CA00A8 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+340]
	002 Return X0

Method: System.Void set_atlasHeight(System.Int32 value)

Disassembly:
	0x03CA00AC STP X22, X21, [X31 + 0x30]
	0x03CA00B0 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X0+340], W1
	002 Return 

Method: System.Int32 get_atlasPadding()

Disassembly:
	0x03CA00B4 ADRP X20, 0x747000
	0x03CA00B8 LDRB W8, [X20 + 0x2D6]

ISIL:
	001 Move W0, [X0+344]
	002 Return X0

Method: System.Void set_atlasPadding(System.Int32 value)

Disassembly:
	0x03CA00BC MOV X19, X0
	0x03CA00C0 TBNZ X8, 0x0, 0x3CA0150

ISIL:
	001 Move [X0+344], W1
	002 Return 

Method: UnityEngine.TextCore.LowLevel.GlyphRenderMode get_atlasRenderMode()

Disassembly:
	0x03CA00C4 ADRP X0, 0x4B8000
	0x03CA00C8 LDR X0, [X0 + 0xC98]

ISIL:
	001 Move W0, [X0+348]
	002 Return X0

Method: System.Void set_atlasRenderMode(UnityEngine.TextCore.LowLevel.GlyphRenderMode value)

Disassembly:
	0x03CA00CC BL 0x1C16CF4
	0x03CA00D0 ADRP X0, 0x4B8000

ISIL:
	001 Move [X0+348], W1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> get_usedGlyphRects()

Disassembly:
	0x03CA00D4 LDR X0, [X0 + 0xCA0]
	0x03CA00D8 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+352]
	002 Return X0

Method: System.Void set_usedGlyphRects(System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> value)

Disassembly:
	0x03CA00DC ADRP X0, 0x4B8000
	0x03CA00E0 LDR X0, [X0 + 0xCA8]

ISIL:
	001 Move [X0+352], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> get_freeGlyphRects()

Disassembly:
	0x03CA00E4 BL 0x1C16CF4
	0x03CA00E8 ADRP X0, 0x4B8000

ISIL:
	001 Move X0, [X0+360]
	002 Return X0

Method: System.Void set_freeGlyphRects(System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> value)

Disassembly:
	0x03CA00EC LDR X0, [X0 + 0xCB0]
	0x03CA00F0 BL 0x1C16CF4

ISIL:
	001 Move [X0+360], X1
	002 Return 

Method: UnityEngine.TextCore.Text.FontFeatureTable get_fontFeatureTable()

Disassembly:
	0x03CA00F4 ADRP X0, 0x4B8000
	0x03CA00F8 LDR X0, [X0 + 0xCB8]

ISIL:
	001 Move X0, [X0+368]
	002 Return X0

Method: System.Void set_fontFeatureTable(UnityEngine.TextCore.Text.FontFeatureTable value)

Disassembly:
	0x03CA00FC BL 0x1C16CF4
	0x03CA0100 ADRP X0, 0x459000

ISIL:
	001 Move [X0+368], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> get_fallbackFontAssetTable()

Disassembly:
	0x03CA0104 LDR X0, [X0 + 0x1D0]
	0x03CA0108 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+376]
	002 Return X0

Method: System.Void set_fallbackFontAssetTable(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> value)

Disassembly:
	0x03CA010C ADRP X0, 0x4AA000
	0x03CA0110 LDR X0, [X0 + 0xB50]

ISIL:
	001 Move [X0+376], X1
	002 Return 

Method: UnityEngine.TextCore.Text.FontWeightPair[] get_fontWeightTable()

Disassembly:
	0x03CA0114 BL 0x1C16CF4
	0x03CA0118 ADRP X0, 0x459000

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Void set_fontWeightTable(UnityEngine.TextCore.Text.FontWeightPair[] value)

Disassembly:
	0x03CA011C LDR X0, [X0 + 0x1E0]
	0x03CA0120 BL 0x1C16CF4

ISIL:
	001 Move [X0+384], X1
	002 Return 

Method: System.Single get_regularStyleWeight()

Disassembly:
	0x03CA0124 ADRP X0, 0x4B8000
	0x03CA0128 LDR X0, [X0 + 0xCC0]

ISIL:
	001 Move V0, [X0+392]
	002 Return V0

Method: System.Void set_regularStyleWeight(System.Single value)

Disassembly:
	0x03CA012C BL 0x1C16CF4
	0x03CA0130 ADRP X0, 0x4B8000

ISIL:
	001 Move [X0+392], S0
	002 Return 

Method: System.Single get_regularStyleSpacing()

Disassembly:
	0x03CA0134 LDR X0, [X0 + 0xCC8]
	0x03CA0138 BL 0x1C16CF4

ISIL:
	001 Move V0, [X0+396]
	002 Return V0

Method: System.Void set_regularStyleSpacing(System.Single value)

Disassembly:
	0x03CA013C ADRP X0, 0x459000
	0x03CA0140 LDR X0, [X0 + 0x1E8]

ISIL:
	001 Move [X0+396], S0
	002 Return 

Method: System.Single get_boldStyleWeight()

Disassembly:
	0x03CA0144 BL 0x1C16CF4
	0x03CA0148 MOVZ W8, 0x1

ISIL:
	001 Move V0, [X0+400]
	002 Return V0

Method: System.Void set_boldStyleWeight(System.Single value)

Disassembly:
	0x03CA014C STRB W8, [X20 + 0x2D6]
	0x03CA0150 LDR X0, [X19 + 0x120]

ISIL:
	001 Move [X0+400], S0
	002 Return 

Method: System.Single get_boldStyleSpacing()

Disassembly:
	0x03CA0154 CBZ X0, 0x3CA016C
	0x03CA0158 ADRP X8, 0x4B8000

ISIL:
	001 Move V0, [X0+404]
	002 Return V0

Method: System.Void set_boldStyleSpacing(System.Single value)

Disassembly:
	0x03CA015C LDR X8, [X8 + 0xCA0]
	0x03CA0160 LDR X1, [X8]

ISIL:
	001 Move [X0+404], S0
	002 Return 

Method: System.Byte get_italicStyleSlant()

Disassembly:
	0x03CA0164 BL 0x2B0F1E4
	0x03CA0168 B 0x3CA0194

ISIL:
	001 Move W0, [X0+408]
	002 Return X0

Method: System.Void set_italicStyleSlant(System.Byte value)

Disassembly:
	0x03CA016C ADRP X8, 0x4B8000
	0x03CA0170 LDR X8, [X8 + 0xCB8]

ISIL:
	001 Move [X0+408], W1
	002 Return 

Method: System.Byte get_tabMultiple()

Disassembly:
	0x03CA0174 LDR X0, [X8]
	0x03CA0178 BL 0x1C16F10

ISIL:
	001 Move W0, [X0+409]
	002 Return X0

Method: System.Void set_tabMultiple(System.Byte value)

Disassembly:
	0x03CA017C ADRP X8, 0x4B8000
	0x03CA0180 LDR X8, [X8 + 0xCB0]

ISIL:
	001 Move [X0+409], W1
	002 Return 

Method: UnityEngine.TextCore.Text.FontAsset CreateFontAsset(System.String familyName, System.String styleName, System.Int32 pointSize = 90)

Disassembly:
	0x03CA0184 MOV X20, X0
	0x03CA0188 LDR X1, [X8]
	0x03CA018C BL 0x2B0E7A4
	0x03CA0190 STR X20, [X19 + 0x120]
	0x03CA0194 LDR X8, [X19 + 0x1B0]
	0x03CA0198 CBZ X8, 0x3CA01AC
	0x03CA019C LDR W9, [X8 + 0x1C]
	0x03CA01A0 ADD W9, W9, 0x1
	0x03CA01A4 STP W31, W9, [X8 + 0x18]
	0x03CA01A8 B 0x3CA01D4
	0x03CA01AC ADRP X8, 0x459000
	0x03CA01B0 LDR X8, [X8 + 0x1E8]
	0x03CA01B4 LDR X0, [X8]
	0x03CA01B8 BL 0x1C16F10
	0x03CA01BC ADRP X8, 0x459000
	0x03CA01C0 LDR X8, [X8 + 0x1E0]
	0x03CA01C4 MOV X20, X0
	0x03CA01C8 LDR X1, [X8]
	0x03CA01CC BL 0x30C0EA0
	0x03CA01D0 STR X20, [X19 + 0x1B0]
	0x03CA01D4 LDR X8, [X19 + 0x1B8]
	0x03CA01D8 CBZ X8, 0x3CA01EC
	0x03CA01DC LDR W9, [X8 + 0x1C]
	0x03CA01E0 ADD W9, W9, 0x1
	0x03CA01E4 STP W31, W9, [X8 + 0x18]
	0x03CA01E8 B 0x3CA0214
	0x03CA01EC ADRP X8, 0x459000
	0x03CA01F0 LDR X8, [X8 + 0x1E8]
	0x03CA01F4 LDR X0, [X8]
	0x03CA01F8 BL 0x1C16F10
	0x03CA01FC ADRP X8, 0x459000
	0x03CA0200 LDR X8, [X8 + 0x1E0]
	0x03CA0204 MOV X20, X0
	0x03CA0208 LDR X1, [X8]
	0x03CA020C BL 0x30C0EA0
	0x03CA0210 STR X20, [X19 + 0x1B8]
	0x03CA0214 LDR X0, [X19 + 0x118]
	0x03CA0218 CBZ X0, 0x3CA030C
	0x03CA021C LDR W23, [X0 + 0x18]
	0x03CA0220 CMP W23, 0x1
	0x03CA0224 B.LT 0x3CA0310
	0x03CA0228 ADRP X24, 0x4B8000
	0x03CA022C ADRP X25, 0x4B8000
	0x03CA0230 ADRP X26, 0x4B8000
	0x03CA0234 ADRP X27, 0x459000
	0x03CA0238 LDR X24, [X24 + 0xCC8]
	0x03CA023C LDR X25, [X25 + 0xCA8]
	0x03CA0240 LDR X26, [X26 + 0xC98]
	0x03CA0244 LDR X27, [X27 + 0x1D0]
	0x03CA0248 MOV W20, W31
	0x03CA024C LDR X2, [X24]
	0x03CA0250 MOV W1, W20
	0x03CA0254 BL 0x301BCCC
	0x03CA0258 CBZ X0, 0x3CA030C
	0x03CA025C MOV X1, X31
	0x03CA0260 MOV X22, X0
	0x03CA0264 BL 0x3C9C494
	0x03CA0268 LDR X8, [X19 + 0x120]
	0x03CA026C CBZ X8, 0x3CA030C
	0x03CA0270 LDR X2, [X25]
	0x03CA0274 MOV W21, W0
	0x03CA0278 MOV X0, X8
	0x03CA027C MOV W1, W21
	0x03CA0280 BL 0x2B0F250
	0x03CA0284 TBNZ X0, 0x0, 0x3CA02F8
	0x03CA0288 LDR X0, [X19 + 0x120]
	0x03CA028C CBZ X0, 0x3CA030C
	0x03CA0290 LDR X3, [X26]
	0x03CA0294 MOV W1, W21
	0x03CA0298 MOV X2, X22
	0x03CA029C BL 0x2B0F05C
	0x03CA02A0 LDR X0, [X19 + 0x1B0]
	0x03CA02A4 CBZ X0, 0x3CA030C
	0x03CA02A8 LDR W10, [X0 + 0x1C]
	0x03CA02AC LDR X8, [X0 + 0x10]
	0x03CA02B0 LDR X9, [X27]
	0x03CA02B4 ADD W10, W10, 0x1
	0x03CA02B8 STR W10, [X0 + 0x1C]
	0x03CA02BC CBZ X8, 0x3CA030C
	0x03CA02C0 LDRSW X10, [X0 + 0x18]
	0x03CA02C4 LDR W11, [X8 + 0x18]
	0x03CA02C8 CMP W10, W11
	0x03CA02CC B.CS 0x3CA02E4
	0x03CA02D0 ADD W9, W10, 0x1
	0x03CA02D4 ADD X8, X8, X10, 0x2, LSL
	0x03CA02D8 STR W9, [X0 + 0x18]
	0x03CA02DC STR W21, [X8 + 0x20]
	0x03CA02E0 B 0x3CA02F8
	0x03CA02E4 LDR X8, [X9 + 0x20]
	0x03CA02E8 MOV W1, W21
	0x03CA02EC LDR X8, [X8 + 0xC0]
	0x03CA02F0 LDR X2, [X8 + 0x70]
	0x03CA02F4 BL 0x30C1698
	0x03CA02F8 ADD W20, W20, 0x1
	0x03CA02FC CMP W23, W20
	0x03CA0300 B.EQ 0x3CA0310
	0x03CA0304 LDR X0, [X19 + 0x118]
	0x03CA0308 CBNZ X0, 0x3CA024C
	0x03CA030C BL 0x1C16F20
	0x03CA0310 LDP X20, X19, [X31 + 0x40]
	0x03CA0314 LDP X22, X21, [X31 + 0x30]
	0x03CA0318 LDP X24, X23, [X31 + 0x20]
	0x03CA031C LDP X26, X25, [X31 + 0x10]
	0x03CA0320 LDP X30, X27, [X31], #0x50
	0x03CA0324 RET
	0x03CA0328 STP X30, X27, [X31 - 0x50]!
	0x03CA032C STP X26, X25, [X31 + 0x10]
	0x03CA0330 STP X24, X23, [X31 + 0x20]
	0x03CA0334 STP X22, X21, [X31 + 0x30]
	0x03CA0338 STP X20, X19, [X31 + 0x40]
	0x03CA033C ADRP X20, 0x747000
	0x03CA0340 LDRB W8, [X20 + 0x2D7]
	0x03CA0344 MOV X19, X0
	0x03CA0348 TBNZ X8, 0x0, 0x3CA03B4
	0x03CA034C ADRP X0, 0x4C1000
	0x03CA0350 LDR X0, [X0 + 0x2B0]
	0x03CA0354 BL 0x1C16CF4
	0x03CA0358 ADRP X0, 0x4C1000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x748000
	009 Move X22, 0x4B9000
	010 Move W8, [X23+717]
	011 Move X22, [X22+3008]
	012 Move W20, W2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x454000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x4C2000
	023 Move X0, [X0+600]
	024 Call 0x1C17CF4
	025 Move X0, 0x4B9000
	026 Move X0, [X0+3008]
	027 Call 0x1C17CF4
	028 Move X0, 0x454000
	029 Move X0, [X0+2760]
	030 Call 0x1C17CF4
	031 Move X0, 0x4C2000
	032 Move X0, [X0+624]
	033 Call 0x1C17CF4
	034 Move X0, 0x47C000
	035 Move X0, [X0+1784]
	036 Call 0x1C17CF4
	037 Move X0, 0x4C2000
	038 Move X0, [X0+632]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+717], W8
	042 Move X0, [X22]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+16], V0
	045 Move [X31+24], V0
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X2, X31, 16
	051 Move X0, X21
	052 Move X1, X19
	053 Move X3, X31
	054 Call FontEngine.TryGetSystemFontReference, X0, X1, X2
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {79}
	059 Move X8, 0x4C2000
	060 Move X8, [X8+600]
	061 Move X19, [X31+40]
	062 Move W21, [X31+32]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move W8, 1
	069 Move W3, 9
	070 Move W4, 0x1045
	071 Move W5, 1024
	072 Move W6, 1024
	073 Move W7, 2
	074 Move X0, X19
	075 Move W1, W21
	076 Move W2, W20
	077 Move [X31], W8
	078 Call FontAsset.CreateFontAsset, X0, X1, X2, X3, X4, X5, X6, X7, X8
	079 Move X8, 0x454000
	080 Move X8, [X8+2760]
	081 Move W1, 5
	082 Move X0, [X8]
	083 Call 0x1C17D6C
	084 Compare X0, 0
	085 JumpIfEqual {131}
	086 Move W8, [X0+24]
	087 Compare W8, 0
	088 JumpIfEqual {130}
	089 Move X9, 0x4C2000
	090 Move X9, [X9+632]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X9, [X9]
	093 Move [X0+32], X9
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X0+40], X21
	096 Move X9, 0x4C2000
	097 Move X9, [X9+624]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X9, [X9]
	100 Move [X0+48], X9
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X0+56], X19
	103 Move X8, 0x47C000
	104 Move X8, [X8+1784]
	105 Move X1, X31
	106 Move X8, [X8]
	107 Move [X0+64], X8
	108 Call String.Concat, X0
	109 Move X8, 0x454000
	110 Move X8, [X8+2600]
	111 Move X19, X0
	112 Move X8, [X8]
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X0, X19
	119 Move X1, X31
	120 Call Debug.Log, X0
	121 Move X0, X31
	122 Move X20, [X31+80]
	123 Move X19, [X31+88]
	124 Move X22, [X31+64]
	125 Move X21, [X31+72]
	126 Move X30, [X31+48]
	127 Move X23, [X31+56]
	128 Add X31, X31, 96
	129 Return X0
	130 Call 0x1C17F28
	131 Call 0x1C17F20

Method: UnityEngine.TextCore.Text.FontAsset CreateFontAsset(System.String fontFilePath, System.Int32 faceIndex, System.Int32 samplingPointSize, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight)

Disassembly:
	0x03CA04D0 STP X24, X23, [X31 + 0x40]
	0x03CA04D4 STP X22, X21, [X31 + 0x50]
	0x03CA04D8 STP X20, X19, [X31 + 0x60]
	0x03CA04DC ADRP X20, 0x747000
	0x03CA04E0 LDRB W8, [X20 + 0x2D8]
	0x03CA04E4 MOV X19, X0
	0x03CA04E8 TBNZ X8, 0x0, 0x3CA0578
	0x03CA04EC ADRP X0, 0x4C1000
	0x03CA04F0 LDR X0, [X0 + 0x2E0]
	0x03CA04F4 BL 0x1C16CF4
	0x03CA04F8 ADRP X0, 0x4C1000
	0x03CA04FC LDR X0, [X0 + 0x2E8]
	0x03CA0500 BL 0x1C16CF4
	0x03CA0504 ADRP X0, 0x4C1000
	0x03CA0508 LDR X0, [X0 + 0x2F0]
	0x03CA050C BL 0x1C16CF4
	0x03CA0510 ADRP X0, 0x4C1000
	0x03CA0514 LDR X0, [X0 + 0x2F8]
	0x03CA0518 BL 0x1C16CF4
	0x03CA051C ADRP X0, 0x4C1000
	0x03CA0520 LDR X0, [X0 + 0x300]
	0x03CA0524 BL 0x1C16CF4
	0x03CA0528 ADRP X0, 0x4C1000
	0x03CA052C LDR X0, [X0 + 0x308]
	0x03CA0530 BL 0x1C16CF4
	0x03CA0534 ADRP X0, 0x4C1000
	0x03CA0538 LDR X0, [X0 + 0x310]
	0x03CA053C BL 0x1C16CF4
	0x03CA0540 ADRP X0, 0x4C1000
	0x03CA0544 LDR X0, [X0 + 0x318]
	0x03CA0548 BL 0x1C16CF4
	0x03CA054C ADRP X0, 0x4C1000
	0x03CA0550 LDR X0, [X0 + 0x320]
	0x03CA0554 BL 0x1C16CF4
	0x03CA0558 ADRP X0, 0x4C1000
	0x03CA055C LDR X0, [X0 + 0x328]
	0x03CA0560 BL 0x1C16CF4
	0x03CA0564 ADRP X0, 0x4C1000
	0x03CA0568 LDR X0, [X0 + 0x330]
	0x03CA056C BL 0x1C16CF4
	0x03CA0570 MOVZ W8, 0x1
	0x03CA0574 STRB W8, [X20 + 0x2D8]
	0x03CA0578 STP X31, X31, [X31]
	0x03CA057C LDR X21, [X19 + 0x170]
	0x03CA0580 CBZ X21, 0x3CA07C8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0x748000
	013 Move X27, 0x4C2000
	014 Move W8, [X26+718]
	015 Move X27, [X27+600]
	016 Move W19, W6
	017 Move W20, W5
	018 Move W21, W4
	019 Move W22, W3
	020 Move W23, W2
	021 Move W24, W1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x4C2000
	028 Move X0, [X0+600]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+718], W8
	032 Move X0, [X27]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W8, 1
	038 Move W7, 1
	039 Move X0, X25
	040 Move W1, W24
	041 Move W2, W23
	042 Move W3, W22
	043 Move W4, W21
	044 Move W5, W20
	045 Move W6, W19
	046 Move [X31], W8
	047 Call FontAsset.CreateFontAsset, X0, X1, X2, X3, X4, X5, X6, X7, X8
	048 Move X20, [X31+80]
	049 Move X19, [X31+88]
	050 Move X22, [X31+64]
	051 Move X21, [X31+72]
	052 Move X24, [X31+48]
	053 Move X23, [X31+56]
	054 Move X26, [X31+32]
	055 Move X25, [X31+40]
	056 Move X30, [X31+16]
	057 Move X27, [X31+24]
	058 Add X31, X31, 96
	059 Return X0

Method: UnityEngine.TextCore.Text.FontAsset CreateFontAsset(System.String fontFilePath, System.Int32 faceIndex, System.Int32 samplingPointSize, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight, UnityEngine.TextCore.Text.AtlasPopulationMode atlasPopulationMode = 2, System.Boolean enableMultiAtlasSupport = True)

Disassembly:
	0x03CA035C LDR X0, [X0 + 0x2B8]
	0x03CA0360 BL 0x1C16CF4
	0x03CA0364 ADRP X0, 0x4C1000
	0x03CA0368 LDR X0, [X0 + 0x248]
	0x03CA036C BL 0x1C16CF4
	0x03CA0370 ADRP X0, 0x4C1000
	0x03CA0374 LDR X0, [X0 + 0x2C0]
	0x03CA0378 BL 0x1C16CF4
	0x03CA037C ADRP X0, 0x4B8000
	0x03CA0380 LDR X0, [X0 + 0xC90]
	0x03CA0384 BL 0x1C16CF4
	0x03CA0388 ADRP X0, 0x4C1000
	0x03CA038C LDR X0, [X0 + 0x2C8]
	0x03CA0390 BL 0x1C16CF4
	0x03CA0394 ADRP X0, 0x4C1000
	0x03CA0398 LDR X0, [X0 + 0x2D0]
	0x03CA039C BL 0x1C16CF4
	0x03CA03A0 ADRP X0, 0x4C1000
	0x03CA03A4 LDR X0, [X0 + 0x2D8]
	0x03CA03A8 BL 0x1C16CF4
	0x03CA03AC MOVZ W8, 0x1
	0x03CA03B0 STRB W8, [X20 + 0x2D7]
	0x03CA03B4 LDR X0, [X19 + 0x130]
	0x03CA03B8 CBZ X0, 0x3CA03D0
	0x03CA03BC ADRP X8, 0x4C1000
	0x03CA03C0 LDR X8, [X8 + 0x2B8]
	0x03CA03C4 LDR X1, [X8]
	0x03CA03C8 BL 0x2B0F1E4
	0x03CA03CC B 0x3CA03F8
	0x03CA03D0 ADRP X8, 0x4C1000
	0x03CA03D4 LDR X8, [X8 + 0x2C8]
	0x03CA03D8 LDR X0, [X8]
	0x03CA03DC BL 0x1C16F10
	0x03CA03E0 ADRP X8, 0x4C1000
	0x03CA03E4 LDR X8, [X8 + 0x2C0]
	0x03CA03E8 MOV X20, X0
	0x03CA03EC LDR X1, [X8]
	0x03CA03F0 BL 0x2B0E7A4
	0x03CA03F4 STR X20, [X19 + 0x130]
	0x03CA03F8 LDR X0, [X19 + 0x128]
	0x03CA03FC CBZ X0, 0x3CA04A4
	0x03CA0400 ADRP X24, 0x4C1000
	0x03CA0404 ADRP X25, 0x4C1000
	0x03CA0408 ADRP X26, 0x4C1000
	0x03CA040C ADRP X27, 0x4B8000
	0x03CA0410 LDR X24, [X24 + 0x2D8]
	0x03CA0414 LDR X25, [X25 + 0x248]
	0x03CA0418 LDR X26, [X26 + 0x2B0]
	0x03CA041C LDR X27, [X27 + 0xC90]
	0x03CA0420 MOV W20, W31
	0x03CA0424 LDR W8, [X0 + 0x18]
	0x03CA0428 CMP W20, W8
	0x03CA042C B.GE 0x3CA04A8
	0x03CA0430 LDR X2, [X24]
	0x03CA0434 MOV W1, W20
	0x03CA0438 BL 0x301BCCC
	0x03CA043C CBZ X0, 0x3CA04A4
	0x03CA0440 MOV X21, X0
	0x03CA0444 LDR X0, [X19 + 0x130]
	0x03CA0448 CBZ X0, 0x3CA04A4
	0x03CA044C LDR W23, [X21 + 0x14]
	0x03CA0450 LDR X2, [X25]
	0x03CA0454 LDR W22, [X21 + 0x28]
	0x03CA0458 MOV W1, W23
	0x03CA045C BL 0x2B0F250
	0x03CA0460 TBNZ X0, 0x0, 0x3CA0498
	0x03CA0464 LDR X0, [X19 + 0x130]
	0x03CA0468 CBZ X0, 0x3CA04A4
	0x03CA046C LDR X3, [X26]
	0x03CA0470 MOV W1, W23
	0x03CA0474 MOV X2, X21
	0x03CA0478 BL 0x2B0F05C
	0x03CA047C STR X19, [X21 + 0x18]
	0x03CA0480 LDR X0, [X19 + 0x120]
	0x03CA0484 CBZ X0, 0x3CA04A4
	0x03CA0488 LDR X2, [X27]
	0x03CA048C MOV W1, W22
	0x03CA0490 BL 0x2B0EFBC
	0x03CA0494 STR X0, [X21 + 0x20]
	0x03CA0498 LDR X0, [X19 + 0x128]
	0x03CA049C ADD W20, W20, 0x1
	0x03CA04A0 CBNZ X0, 0x3CA0424
	0x03CA04A4 BL 0x1C16F20
	0x03CA04A8 LDP X20, X19, [X31 + 0x40]
	0x03CA04AC LDP X22, X21, [X31 + 0x30]
	0x03CA04B0 LDP X24, X23, [X31 + 0x20]
	0x03CA04B4 LDP X26, X25, [X31 + 0x10]
	0x03CA04B8 LDP X30, X27, [X31], #0x50
	0x03CA04BC RET
	0x03CA04C0 SUB X31, X31, 0x70
	0x03CA04C4 STP X29, X30, [X31 + 0x10]
	0x03CA04C8 STP X28, X27, [X31 + 0x20]
	0x03CA04CC STP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x748000
	013 Move X28, 0x4B9000
	014 Move W8, [X27+719]
	015 Move X28, [X28+3008]
	016 Move W20, W7
	017 Move W21, W6
	018 Move W22, W5
	019 Move W23, W4
	020 Move W24, W3
	021 Move W26, W2
	022 Move W25, W1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {45}
	028 Move X0, 0x454000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x4C2000
	032 Move X0, [X0+600]
	033 Call 0x1C17CF4
	034 Move X0, 0x4B9000
	035 Move X0, [X0+3008]
	036 Call 0x1C17CF4
	037 Move X0, 0x47C000
	038 Move X0, [X0+1784]
	039 Call 0x1C17CF4
	040 Move X0, 0x4C2000
	041 Move X0, [X0+640]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X27+719], W8
	045 Move X0, [X28]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move W1, W26
	052 Move W2, W25
	053 Move X3, X31
	054 Call FontEngine.LoadFontFace, X0, X1, X2
	055 Compare W0, 0
	056 JumpIfEqual {79}
	057 Move X8, 0x4C2000
	058 Move X9, 0x47C000
	059 Move X8, [X8+640]
	060 Move X9, [X9+1784]
	061 Move X20, 0x454000
	062 Move X1, X19
	063 Move X0, [X8]
	064 Move X2, [X9]
	065 Move X20, [X20+2600]
	066 Move X3, X31
	067 Call String.Concat, X0, X1, X2
	068 Move X8, [X20]
	069 Move X19, X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X0, X19
	076 Move X1, X31
	077 Call Debug.Log, X0
	078 Move X0, X31
	079 Move X8, 0x4C2000
	080 Move X8, [X8+600]
	081 Move W25, [X31+96]
	082 Move X0, [X8]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 And W6, W25, 1
	088 Move X0, X31
	089 Move W1, W24
	090 Move W2, W23
	091 Move W3, W22
	092 Move W4, W21
	093 Move W5, W20
	094 Call FontAsset.CreateFontAssetInstance, X0, X1, X2, X3, X4, X5, X6
	095 Compare X0, 0
	096 JumpIfEqual {110}
	097 Move [X0+160], X19
	098 Move X20, [X31+80]
	099 Move X19, [X31+88]
	100 Move X22, [X31+64]
	101 Move X21, [X31+72]
	102 Move X24, [X31+48]
	103 Move X23, [X31+56]
	104 Move X26, [X31+32]
	105 Move X25, [X31+40]
	106 Move X28, [X31+16]
	107 Move X27, [X31+24]
	108 Move X30, [X31+96]
	109 Return X0
	110 Call 0x1C17F20

Method: UnityEngine.TextCore.Text.FontAsset CreateFontAsset(UnityEngine.Font font)

Disassembly:
	0x03CA09F8 LDR X30, [X31 + 0xB0]
	0x03CA09FC ADD X31, X31, 0x100
	0x03CA0A00 RET
	0x03CA0A04 BL 0x1C16F20
	0x03CA0A08 SUB X31, X31, 0xA0
	0x03CA0A0C STP X30, X25, [X31 + 0x60]
	0x03CA0A10 STP X24, X23, [X31 + 0x70]
	0x03CA0A14 STP X22, X21, [X31 + 0x80]
	0x03CA0A18 STP X20, X19, [X31 + 0x90]
	0x03CA0A1C ADRP X20, 0x747000
	0x03CA0A20 LDRB W8, [X20 + 0x2DA]
	0x03CA0A24 MOV X19, X0
	0x03CA0A28 TBNZ X8, 0x0, 0x3CA0A88
	0x03CA0A2C ADRP X0, 0x4C1000
	0x03CA0A30 LDR X0, [X0 + 0x370]
	0x03CA0A34 BL 0x1C16CF4
	0x03CA0A38 ADRP X0, 0x4C1000
	0x03CA0A3C LDR X0, [X0 + 0x378]
	0x03CA0A40 BL 0x1C16CF4
	0x03CA0A44 ADRP X0, 0x4C1000
	0x03CA0A48 LDR X0, [X0 + 0x380]
	0x03CA0A4C BL 0x1C16CF4
	0x03CA0A50 ADRP X0, 0x4C1000
	0x03CA0A54 LDR X0, [X0 + 0x388]
	0x03CA0A58 BL 0x1C16CF4
	0x03CA0A5C ADRP X0, 0x4C1000
	0x03CA0A60 LDR X0, [X0 + 0x390]
	0x03CA0A64 BL 0x1C16CF4
	0x03CA0A68 ADRP X0, 0x4C1000
	0x03CA0A6C LDR X0, [X0 + 0x398]
	0x03CA0A70 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x748000
	007 Move X21, 0x4C2000
	008 Move W8, [X20+720]
	009 Move X21, [X21+600]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4C2000
	016 Move X0, [X0+600]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+720], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W1, 90
	026 Move W2, 9
	027 Move W3, 0x1045
	028 Move W4, 1024
	029 Move W5, 1024
	030 Move W6, 1
	031 Move W7, 1
	032 Move X0, X19
	033 Call FontAsset.CreateFontAsset, X0, X1, X2, X3, X4, X5, X6, X7
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Add X31, X31, 48
	039 Return X0

Method: UnityEngine.TextCore.Text.FontAsset CreateFontAsset(UnityEngine.Font font, System.Int32 samplingPointSize, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight, UnityEngine.TextCore.Text.AtlasPopulationMode atlasPopulationMode = 1, System.Boolean enableMultiAtlasSupport = True)

Disassembly:
	0x03CA0A74 ADRP X0, 0x4C1000
	0x03CA0A78 LDR X0, [X0 + 0x3A0]
	0x03CA0A7C BL 0x1C16CF4
	0x03CA0A80 MOVZ W8, 0x1
	0x03CA0A84 STRB W8, [X20 + 0x2DA]
	0x03CA0A88 STP X31, X31, [X31 + 0x20]
	0x03CA0A8C STR X31, [X31 + 0x30]
	0x03CA0A90 LDR X21, [X19 + 0x170]
	0x03CA0A94 CBZ X21, 0x3CA0BE4
	0x03CA0A98 LDR X0, [X21 + 0x48]
	0x03CA0A9C CBZ X0, 0x3CA0AB4
	0x03CA0AA0 ADRP X8, 0x4C1000
	0x03CA0AA4 LDR X8, [X8 + 0x378]
	0x03CA0AA8 LDR X1, [X8]
	0x03CA0AAC BL 0x2B08CA4
	0x03CA0AB0 B 0x3CA0ADC
	0x03CA0AB4 ADRP X8, 0x4C1000
	0x03CA0AB8 LDR X8, [X8 + 0x390]
	0x03CA0ABC LDR X0, [X8]
	0x03CA0AC0 BL 0x1C16F10
	0x03CA0AC4 ADRP X8, 0x4C1000
	0x03CA0AC8 LDR X8, [X8 + 0x388]
	0x03CA0ACC MOV X20, X0
	0x03CA0AD0 LDR X1, [X8]
	0x03CA0AD4 BL 0x2B080DC
	0x03CA0AD8 STR X20, [X21 + 0x48]
	0x03CA0ADC LDR X8, [X19 + 0x170]
	0x03CA0AE0 CBZ X8, 0x3CA0BE4
	0x03CA0AE4 LDR X20, [X8 + 0x28]
	0x03CA0AE8 CBZ X20, 0x3CA0BCC
	0x03CA0AEC LDR W8, [X20 + 0x18]
	0x03CA0AF0 CMP W8, 0x1
	0x03CA0AF4 B.LT 0x3CA0BCC
	0x03CA0AF8 ADRP X23, 0x4C1000
	0x03CA0AFC ADRP X24, 0x4C1000
	0x03CA0B00 ADRP X25, 0x4C1000
	0x03CA0B04 LDR X23, [X23 + 0x3A0]
	0x03CA0B08 LDR X24, [X24 + 0x380]
	0x03CA0B0C LDR X25, [X25 + 0x370]
	0x03CA0B10 MOV W21, W31
	0x03CA0B14 LDR X2, [X23]
	0x03CA0B18 ADD X8, X31, 0x40
	0x03CA0B1C MOV X0, X20
	0x03CA0B20 MOV W1, W21
	0x03CA0B24 BL 0x2FF80B4
	0x03CA0B28 LDR V0, [X31 + 0x4]
	0x03CA0B2C LDR X8, [X31 + 0x50]
	0x03CA0B30 ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X27, 0x748000
	014 Move X28, 0x4C2000
	015 Move W8, [X27+721]
	016 Move X28, [X28+600]
	017 Move W25, W7
	018 Move W19, W6
	019 Move W20, W5
	020 Move W21, W4
	021 Move W22, W3
	022 Move W23, W2
	023 Move W24, W1
	024 Move X26, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x4C2000
	030 Move X0, [X0+600]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+721], W8
	034 Move X0, [X28]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 And W8, W25, 1
	040 Move X0, X26
	041 Move W1, W31
	042 Move W2, W24
	043 Move W3, W23
	044 Move W4, W22
	045 Move W5, W21
	046 Move W6, W20
	047 Move W7, W19
	048 Move [X31], W8
	049 Call FontAsset.CreateFontAsset, X0, X1, X2, X3, X4, X5, X6, X7, X8
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X24, [X31+64]
	055 Move X23, [X31+72]
	056 Move X26, [X31+48]
	057 Move X25, [X31+56]
	058 Move X28, [X31+32]
	059 Move X27, [X31+40]
	060 Move X30, [X31+16]
	061 Add X31, X31, 112
	062 Return X0

Method: UnityEngine.TextCore.Text.FontAsset CreateFontAsset(UnityEngine.Font font, System.Int32 faceIndex, System.Int32 samplingPointSize, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight, UnityEngine.TextCore.Text.AtlasPopulationMode atlasPopulationMode = 1, System.Boolean enableMultiAtlasSupport = True)

Disassembly:
	0x03CA0B34 MOV X1, X31
	0x03CA0B38 STR V0, [X31 + 0x2]
	0x03CA0B3C STR X8, [X31 + 0x30]
	0x03CA0B40 BL 0x3C9E8C0
	0x03CA0B44 MOV W22, W0
	0x03CA0B48 ADD X0, X31, 0x20
	0x03CA0B4C MOV X1, X31
	0x03CA0B50 BL 0x3C9E8B0
	0x03CA0B54 LDR X8, [X19 + 0x170]
	0x03CA0B58 CBZ X8, 0x3CA0BE4
	0x03CA0B5C LDR X8, [X8 + 0x48]
	0x03CA0B60 CBZ X8, 0x3CA0BE4
	0x03CA0B64 LDR X2, [X24]
	0x03CA0B68 ORR W22, W0, W22, 0x10
	0x03CA0B6C MOV X0, X8
	0x03CA0B70 MOV W1, W22
	0x03CA0B74 BL 0x2B08D10
	0x03CA0B78 TBNZ X0, 0x0, 0x3CA0BBC
	0x03CA0B7C LDR X8, [X19 + 0x170]
	0x03CA0B80 CBZ X8, 0x3CA0BE4
	0x03CA0B84 LDR X0, [X8 + 0x48]
	0x03CA0B88 LDR V0, [X31 + 0x2]
	0x03CA0B8C LDR X8, [X31 + 0x30]
	0x03CA0B90 STR V0, [X31]
	0x03CA0B94 STR X8, [X31 + 0x10]
	0x03CA0B98 CBZ X0, 0x3CA0BE4
	0x03CA0B9C LDR V0, [X31]
	0x03CA0BA0 LDR X8, [X31 + 0x10]
	0x03CA0BA4 LDR X3, [X25]
	0x03CA0BA8 ADD X2, X31, 0x40
	0x03CA0BAC MOV W1, W22
	0x03CA0BB0 STR V0, [X31 + 0x4]
	0x03CA0BB4 STR X8, [X31 + 0x50]
	0x03CA0BB8 BL 0x2B08A1C
	0x03CA0BBC LDR W8, [X20 + 0x18]
	0x03CA0BC0 ADD W21, W21, 0x1
	0x03CA0BC4 CMP W21, W8
	0x03CA0BC8 B.LT 0x3CA0B14
	0x03CA0BCC LDP X20, X19, [X31 + 0x90]
	0x03CA0BD0 LDP X22, X21, [X31 + 0x80]
	0x03CA0BD4 LDP X24, X23, [X31 + 0x70]
	0x03CA0BD8 LDP X30, X25, [X31 + 0x60]
	0x03CA0BDC ADD X31, X31, 0xA0
	0x03CA0BE0 RET
	0x03CA0BE4 BL 0x1C16F20
	0x03CA0BE8 SUB X31, X31, 0xA0
	0x03CA0BEC STP X30, X25, [X31 + 0x60]
	0x03CA0BF0 STP X24, X23, [X31 + 0x70]
	0x03CA0BF4 STP X22, X21, [X31 + 0x80]
	0x03CA0BF8 STP X20, X19, [X31 + 0x90]
	0x03CA0BFC ADRP X20, 0x747000
	0x03CA0C00 LDRB W8, [X20 + 0x2DB]
	0x03CA0C04 MOV X19, X0
	0x03CA0C08 TBNZ X8, 0x0, 0x3CA0C68
	0x03CA0C0C ADRP X0, 0x4C1000
	0x03CA0C10 LDR X0, [X0 + 0x3A8]
	0x03CA0C14 BL 0x1C16CF4
	0x03CA0C18 ADRP X0, 0x4C1000
	0x03CA0C1C LDR X0, [X0 + 0x3B0]
	0x03CA0C20 BL 0x1C16CF4
	0x03CA0C24 ADRP X0, 0x4C1000
	0x03CA0C28 LDR X0, [X0 + 0x3B8]
	0x03CA0C2C BL 0x1C16CF4
	0x03CA0C30 ADRP X0, 0x4C1000
	0x03CA0C34 LDR X0, [X0 + 0x3C0]
	0x03CA0C38 BL 0x1C16CF4
	0x03CA0C3C ADRP X0, 0x4C1000
	0x03CA0C40 LDR X0, [X0 + 0x3C8]
	0x03CA0C44 BL 0x1C16CF4
	0x03CA0C48 ADRP X0, 0x4C1000
	0x03CA0C4C LDR X0, [X0 + 0x3D0]
	0x03CA0C50 BL 0x1C16CF4
	0x03CA0C54 ADRP X0, 0x4C1000
	0x03CA0C58 LDR X0, [X0 + 0x3D8]
	0x03CA0C5C BL 0x1C16CF4
	0x03CA0C60 MOVZ W8, 0x1
	0x03CA0C64 STRB W8, [X20 + 0x2DB]
	0x03CA0C68 STP X31, X31, [X31 + 0x20]
	0x03CA0C6C STR X31, [X31 + 0x30]
	0x03CA0C70 LDR X21, [X19 + 0x170]
	0x03CA0C74 CBZ X21, 0x3CA0DC4
	0x03CA0C78 LDR X0, [X21 + 0x50]
	0x03CA0C7C CBZ X0, 0x3CA0C94
	0x03CA0C80 ADRP X8, 0x4C1000
	0x03CA0C84 LDR X8, [X8 + 0x3B0]
	0x03CA0C88 LDR X1, [X8]
	0x03CA0C8C BL 0x2B0C008
	0x03CA0C90 B 0x3CA0CBC
	0x03CA0C94 ADRP X8, 0x4C1000
	0x03CA0C98 LDR X8, [X8 + 0x3C8]
	0x03CA0C9C LDR X0, [X8]
	0x03CA0CA0 BL 0x1C16F10
	0x03CA0CA4 ADRP X8, 0x4C1000
	0x03CA0CA8 LDR X8, [X8 + 0x3C0]
	0x03CA0CAC MOV X20, X0
	0x03CA0CB0 LDR X1, [X8]
	0x03CA0CB4 BL 0x2B0B440
	0x03CA0CB8 STR X20, [X21 + 0x50]
	0x03CA0CBC LDR X8, [X19 + 0x170]
	0x03CA0CC0 CBZ X8, 0x3CA0DC4
	0x03CA0CC4 LDR X20, [X8 + 0x30]
	0x03CA0CC8 CBZ X20, 0x3CA0DAC
	0x03CA0CCC LDR W8, [X20 + 0x18]
	0x03CA0CD0 CMP W8, 0x1
	0x03CA0CD4 B.LT 0x3CA0DAC
	0x03CA0CD8 ADRP X23, 0x4C1000
	0x03CA0CDC ADRP X24, 0x4C1000
	0x03CA0CE0 ADRP X25, 0x4C1000
	0x03CA0CE4 LDR X23, [X23 + 0x3D8]
	0x03CA0CE8 LDR X24, [X24 + 0x3B8]
	0x03CA0CEC LDR X25, [X25 + 0x3A8]
	0x03CA0CF0 MOV W21, W31
	0x03CA0CF4 LDR X2, [X23]
	0x03CA0CF8 ADD X8, X31, 0x40
	0x03CA0CFC MOV X0, X20
	0x03CA0D00 MOV W1, W21
	0x03CA0D04 BL 0x2FFB150
	0x03CA0D08 LDR V0, [X31 + 0x4]
	0x03CA0D0C LDR X8, [X31 + 0x50]
	0x03CA0D10 ADD X0, X31, 0x20
	0x03CA0D14 MOV X1, X31
	0x03CA0D18 STR V0, [X31 + 0x2]
	0x03CA0D1C STR X8, [X31 + 0x30]
	0x03CA0D20 BL 0x3C9E8E0
	0x03CA0D24 MOV W22, W0
	0x03CA0D28 ADD X0, X31, 0x20
	0x03CA0D2C MOV X1, X31
	0x03CA0D30 BL 0x3C9E8D0
	0x03CA0D34 LDR X8, [X19 + 0x170]
	0x03CA0D38 CBZ X8, 0x3CA0DC4
	0x03CA0D3C LDR X8, [X8 + 0x50]
	0x03CA0D40 CBZ X8, 0x3CA0DC4
	0x03CA0D44 LDR X2, [X24]
	0x03CA0D48 ORR W22, W0, W22, 0x10
	0x03CA0D4C MOV X0, X8
	0x03CA0D50 MOV W1, W22
	0x03CA0D54 BL 0x2B0C074
	0x03CA0D58 TBNZ X0, 0x0, 0x3CA0D9C
	0x03CA0D5C LDR X8, [X19 + 0x170]
	0x03CA0D60 CBZ X8, 0x3CA0DC4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0x748000
	014 Move X29, 0x4B9000
	015 Move W8, [X28+722]
	016 Move W27, [X31+96]
	017 Move X29, [X29+3008]
	018 Move W20, W7
	019 Move W21, W6
	020 Move W22, W5
	021 Move W23, W4
	022 Move W24, W3
	023 Move W26, W2
	024 Move W25, W1
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {56}
	030 Move X0, 0x454000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x4C2000
	034 Move X0, [X0+600]
	035 Call 0x1C17CF4
	036 Move X0, 0x4B9000
	037 Move X0, [X0+3008]
	038 Call 0x1C17CF4
	039 Move X0, 0x4C2000
	040 Move X0, [X0+656]
	041 Call 0x1C17CF4
	042 Move X0, 0x4C2000
	043 Move X0, [X0+664]
	044 Call 0x1C17CF4
	045 Move X0, 0x4B9000
	046 Move X0, [X0+3064]
	047 Call 0x1C17CF4
	048 Move X0, 0x4B9000
	049 Move X0, [X0+3072]
	050 Call 0x1C17CF4
	051 Move X0, 0x4C2000
	052 Move X0, [X0+672]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X28+722], W8
	056 Move X0, [X29]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move W1, W26
	063 Move W2, W25
	064 Move X3, X31
	065 Call FontEngine.LoadFontFace, X0, X1, X2
	066 Compare W0, 0
	067 JumpIfEqual {110}
	068 Compare X19, 0
	069 JumpIfEqual {178}
	070 Move X20, 0x4C2000
	071 Move X20, [X20+664]
	072 Move X0, X19
	073 Move X1, X31
	074 Call Object.get_name, X0
	075 Move X1, [X20]
	076 Move X2, X31
	077 Call String.op_Equality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {138}
	082 Move X8, 0x4C2000
	083 Move X8, [X8+600]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X8, 0x4C2000
	090 Move X9, 0x4C2000
	091 Move X8, [X8+672]
	092 Move X9, [X9+656]
	093 Move X20, [X31+80]
	094 Move X19, [X31+88]
	095 Move X22, [X31+64]
	096 Move X21, [X31+72]
	097 Move X0, [X8]
	098 Move X1, [X9]
	099 Move X24, [X31+48]
	100 Move X23, [X31+56]
	101 Move X26, [X31+32]
	102 Move X25, [X31+40]
	103 Move X28, [X31+16]
	104 Move X27, [X31+24]
	105 Move W2, 90
	106 Move X29, [X31+96]
	107 Move X30, [X31+104]
	108 Call FontAsset.CreateFontAsset, X0, X1, X2
	109 Return X0
	110 Move X8, 0x4C2000
	111 Move X8, [X8+600]
	112 Move X0, [X8]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 And W6, W27, 1
	118 Move X0, X19
	119 Move W1, W24
	120 Move W2, W23
	121 Move W3, W22
	122 Move W4, W21
	123 Move W5, W20
	124 Move X20, [X31+80]
	125 Move X19, [X31+88]
	126 Move X22, [X31+64]
	127 Move X21, [X31+72]
	128 Move X24, [X31+48]
	129 Move X23, [X31+56]
	130 Move X26, [X31+32]
	131 Move X25, [X31+40]
	132 Move X28, [X31+16]
	133 Move X27, [X31+24]
	134 Move X29, [X31+96]
	135 Move X30, [X31+104]
	136 Call FontAsset.CreateFontAssetInstance, X0, X1, X2, X3, X4, X5, X6
	137 Return X0
	138 Move X0, X19
	139 Move X1, X31
	140 Call Object.get_name, X0
	141 Move X8, 0x4B9000
	142 Move X8, [X8+3064]
	143 Move X9, 0x4B9000
	144 Move X9, [X9+3072]
	145 Move X1, X0
	146 Move X8, [X8]
	147 Move X3, X31
	148 Move X2, [X9]
	149 Move X0, X8
	150 Call String.Concat, X0, X1, X2
	151 Move X8, 0x454000
	152 Move X8, [X8+2600]
	153 Move X20, X0
	154 Move X8, [X8]
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 Move X0, X20
	161 Move X1, X19
	162 Move X2, X31
	163 Call Debug.LogWarning, X0, X1
	164 Move X20, [X31+80]
	165 Move X19, [X31+88]
	166 Move X22, [X31+64]
	167 Move X21, [X31+72]
	168 Move X24, [X31+48]
	169 Move X23, [X31+56]
	170 Move X26, [X31+32]
	171 Move X25, [X31+40]
	172 Move X28, [X31+16]
	173 Move X27, [X31+24]
	174 Move X0, X31
	175 Move X29, [X31+96]
	176 Move X30, [X31+104]
	177 Return X0
	178 Call 0x1C17F20

Method: UnityEngine.TextCore.Text.FontAsset CreateFontAssetInstance(UnityEngine.Font font, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight, UnityEngine.TextCore.Text.AtlasPopulationMode atlasPopulationMode, System.Boolean enableMultiAtlasSupport)

Disassembly:
	0x03CA0584 LDR X0, [X21 + 0x38]
	0x03CA0588 CBZ X0, 0x3CA05A0
	0x03CA058C ADRP X8, 0x4C1000
	0x03CA0590 LDR X8, [X8 + 0x2E8]
	0x03CA0594 LDR X1, [X8]
	0x03CA0598 BL 0x2B0F1E4
	0x03CA059C B 0x3CA05C8
	0x03CA05A0 ADRP X8, 0x4C1000
	0x03CA05A4 LDR X8, [X8 + 0x308]
	0x03CA05A8 LDR X0, [X8]
	0x03CA05AC BL 0x1C16F10
	0x03CA05B0 ADRP X8, 0x4C1000
	0x03CA05B4 LDR X8, [X8 + 0x2F8]
	0x03CA05B8 MOV X20, X0
	0x03CA05BC LDR X1, [X8]
	0x03CA05C0 BL 0x2B0E7A4
	0x03CA05C4 STR X20, [X21 + 0x38]
	0x03CA05C8 LDR X8, [X19 + 0x170]
	0x03CA05CC CBZ X8, 0x3CA07C8
	0x03CA05D0 LDR X20, [X8 + 0x18]
	0x03CA05D4 CBZ X20, 0x3CA07A8
	0x03CA05D8 LDR W8, [X20 + 0x18]
	0x03CA05DC CMP W8, 0x1
	0x03CA05E0 B.LT 0x3CA07A8
	0x03CA05E4 ADRP X25, 0x4C1000
	0x03CA05E8 ADRP X26, 0x4C1000
	0x03CA05EC ADRP X28, 0x4C1000
	0x03CA05F0 ADRP X27, 0x4C1000
	0x03CA05F4 ADRP X29, 0x4C1000
	0x03CA05F8 LDR X25, [X25 + 0x328]
	0x03CA05FC LDR X26, [X26 + 0x2F0]
	0x03CA0600 LDR X28, [X28 + 0x310]
	0x03CA0604 LDR X27, [X27 + 0x318]
	0x03CA0608 LDR X29, [X29 + 0x2E0]
	0x03CA060C MOV W21, W31
	0x03CA0610 LDR X2, [X25]
	0x03CA0614 MOV X0, X20
	0x03CA0618 MOV W1, W21
	0x03CA061C BL 0x2FF2904
	0x03CA0620 STP X0, X1, [X31]
	0x03CA0624 ADD X0, X31, 0x0
	0x03CA0628 MOV X1, X31
	0x03CA062C BL 0x3C9E8F0
	0x03CA0630 CBZ X0, 0x3CA0798
	0x03CA0634 ADD X0, X31, 0x0
	0x03CA0638 MOV X1, X31
	0x03CA063C BL 0x3C9E8F0
	0x03CA0640 CBZ X0, 0x3CA07C8
	0x03CA0644 LDR W8, [X0 + 0x18]
	0x03CA0648 CBZ W8, 0x3CA0798
	0x03CA064C ADD X0, X31, 0x0
	0x03CA0650 MOV X1, X31
	0x03CA0654 BL 0x3C9E8F0
	0x03CA0658 CBZ X0, 0x3CA07C8
	0x03CA065C LDR W8, [X0 + 0x18]
	0x03CA0660 CBZ W8, 0x3CA07CC
	0x03CA0664 LDR X8, [X19 + 0x170]
	0x03CA0668 CBZ X8, 0x3CA07C8
	0x03CA066C LDR X8, [X8 + 0x38]
	0x03CA0670 CBZ X8, 0x3CA07C8
	0x03CA0674 LDR W22, [X0 + 0x20]
	0x03CA0678 LDR X2, [X26]
	0x03CA067C MOV X0, X8
	0x03CA0680 MOV W1, W22
	0x03CA0684 BL 0x2B0F250
	0x03CA0688 LDR X8, [X19 + 0x170]
	0x03CA068C CBZ X8, 0x3CA07C8
	0x03CA0690 LDR X23, [X8 + 0x38]
	0x03CA0694 TBZ X0, 0x0, 0x3CA06F8
	0x03CA0698 CBZ X23, 0x3CA07C8
	0x03CA069C ADRP X8, 0x4C1000
	0x03CA06A0 LDR X8, [X8 + 0x300]
	0x03CA06A4 MOV X0, X23
	0x03CA06A8 MOV W1, W22
	0x03CA06AC LDR X2, [X8]
	0x03CA06B0 BL 0x2B0EFBC
	0x03CA06B4 CBZ X0, 0x3CA07C8
	0x03CA06B8 LDR W10, [X0 + 0x1C]
	0x03CA06BC LDP X1, X2, [X31]
	0x03CA06C0 LDR X8, [X0 + 0x10]
	0x03CA06C4 LDR X9, [X28]
	0x03CA06C8 ADD W10, W10, 0x1
	0x03CA06CC STR W10, [X0 + 0x1C]
	0x03CA06D0 CBZ X8, 0x3CA07C8
	0x03CA06D4 LDRSW X10, [X0 + 0x18]
	0x03CA06D8 LDR W11, [X8 + 0x18]
	0x03CA06DC CMP W10, W11
	0x03CA06E0 B.CS 0x3CA0788
	0x03CA06E4 ADD W9, W10, 0x1
	0x03CA06E8 ADD X8, X8, X10, 0x4, LSL
	0x03CA06EC STR W9, [X0 + 0x18]
	0x03CA06F0 STP X1, X2, [X8 + 0x20]
	0x03CA06F4 B 0x3CA0798
	0x03CA06F8 ADRP X8, 0x4C1000
	0x03CA06FC LDR X8, [X8 + 0x330]
	0x03CA0700 LDR X0, [X8]
	0x03CA0704 BL 0x1C16F10
	0x03CA0708 LDR X1, [X27]
	0x03CA070C MOV X24, X0
	0x03CA0710 BL 0x2FF23FC
	0x03CA0714 CBZ X24, 0x3CA07C8
	0x03CA0718 LDR W10, [X24 + 0x1C]
	0x03CA071C LDP X1, X2, [X31]
	0x03CA0720 LDR X8, [X24 + 0x10]
	0x03CA0724 LDR X9, [X28]
	0x03CA0728 ADD W10, W10, 0x1
	0x03CA072C STR W10, [X24 + 0x1C]
	0x03CA0730 CBZ X8, 0x3CA07C8
	0x03CA0734 LDRSW X10, [X24 + 0x18]
	0x03CA0738 LDR W11, [X8 + 0x18]
	0x03CA073C CMP W10, W11
	0x03CA0740 B.CS 0x3CA0758
	0x03CA0744 ADD W9, W10, 0x1
	0x03CA0748 ADD X8, X8, X10, 0x4, LSL
	0x03CA074C STR W9, [X24 + 0x18]
	0x03CA0750 STP X1, X2, [X8 + 0x20]
	0x03CA0754 B 0x3CA076C
	0x03CA0758 LDR X8, [X9 + 0x20]
	0x03CA075C MOV X0, X24
	0x03CA0760 LDR X8, [X8 + 0xC0]
	0x03CA0764 LDR X3, [X8 + 0x70]
	0x03CA0768 BL 0x2FF2C08
	0x03CA076C CBZ X23, 0x3CA07C8
	0x03CA0770 LDR X3, [X29]
	0x03CA0774 MOV X0, X23
	0x03CA0778 MOV W1, W22
	0x03CA077C MOV X2, X24
	0x03CA0780 BL 0x2B0F05C
	0x03CA0784 B 0x3CA0798
	0x03CA0788 LDR X8, [X9 + 0x20]
	0x03CA078C LDR X8, [X8 + 0xC0]
	0x03CA0790 LDR X3, [X8 + 0x70]
	0x03CA0794 BL 0x2FF2C08
	0x03CA0798 LDR W8, [X20 + 0x18]
	0x03CA079C ADD W21, W21, 0x1
	0x03CA07A0 CMP W21, W8
	0x03CA07A4 B.LT 0x3CA0610
	0x03CA07A8 LDP X20, X19, [X31 + 0x60]
	0x03CA07AC LDP X22, X21, [X31 + 0x50]
	0x03CA07B0 LDP X24, X23, [X31 + 0x40]
	0x03CA07B4 LDP X26, X25, [X31 + 0x30]
	0x03CA07B8 LDP X28, X27, [X31 + 0x20]
	0x03CA07BC LDP X29, X30, [X31 + 0x10]
	0x03CA07C0 ADD X31, X31, 0x70
	0x03CA07C4 RET
	0x03CA07C8 BL 0x1C16F20
	0x03CA07CC BL 0x1C16F28
	0x03CA07D0 SUB X31, X31, 0x100
	0x03CA07D4 STR X30, [X31 + 0xB0]
	0x03CA07D8 STP X26, X25, [X31 + 0xC0]
	0x03CA07DC STP X24, X23, [X31 + 0xD0]
	0x03CA07E0 STP X22, X21, [X31 + 0xE0]
	0x03CA07E4 STP X20, X19, [X31 + 0xF0]
	0x03CA07E8 ADRP X20, 0x747000
	0x03CA07EC LDRB W8, [X20 + 0x2D9]
	0x03CA07F0 MOV X19, X0
	0x03CA07F4 TBNZ X8, 0x0, 0x3CA0854
	0x03CA07F8 ADRP X0, 0x4C1000
	0x03CA07FC LDR X0, [X0 + 0x338]
	0x03CA0800 BL 0x1C16CF4
	0x03CA0804 ADRP X0, 0x4C1000
	0x03CA0808 LDR X0, [X0 + 0x340]
	0x03CA080C BL 0x1C16CF4
	0x03CA0810 ADRP X0, 0x4C1000
	0x03CA0814 LDR X0, [X0 + 0x348]
	0x03CA0818 BL 0x1C16CF4
	0x03CA081C ADRP X0, 0x4C1000
	0x03CA0820 LDR X0, [X0 + 0x350]
	0x03CA0824 BL 0x1C16CF4
	0x03CA0828 ADRP X0, 0x4C1000
	0x03CA082C LDR X0, [X0 + 0x358]
	0x03CA0830 BL 0x1C16CF4
	0x03CA0834 ADRP X0, 0x4C1000
	0x03CA0838 LDR X0, [X0 + 0x360]
	0x03CA083C BL 0x1C16CF4
	0x03CA0840 ADRP X0, 0x4C1000
	0x03CA0844 LDR X0, [X0 + 0x368]
	0x03CA0848 BL 0x1C16CF4
	0x03CA084C MOVZ W8, 0x1
	0x03CA0850 STRB W8, [X20 + 0x2D9]
	0x03CA0854 MOVI V0.2D, 0x0
	0x03CA0858 STP X31, X31, [X31 + 0x30]
	0x03CA085C STUR V0, [X31 + 0x6C]
	0x03CA0860 STP V0, V0, [X31 + 0x50]
	0x03CA0864 STR W31, [X31 + 0x40]
	0x03CA0868 LDR X21, [X19 + 0x170]
	0x03CA086C CBZ X21, 0x3CA0A04
	0x03CA0870 LDR X0, [X21 + 0x40]
	0x03CA0874 CBZ X0, 0x3CA088C
	0x03CA0878 ADRP X8, 0x4C1000
	0x03CA087C LDR X8, [X8 + 0x340]
	0x03CA0880 LDR X1, [X8]
	0x03CA0884 BL 0x2B02974
	0x03CA0888 B 0x3CA08B4
	0x03CA088C ADRP X8, 0x4C1000
	0x03CA0890 LDR X8, [X8 + 0x358]
	0x03CA0894 LDR X0, [X8]
	0x03CA0898 BL 0x1C16F10
	0x03CA089C ADRP X8, 0x4C1000
	0x03CA08A0 LDR X8, [X8 + 0x350]
	0x03CA08A4 MOV X20, X0
	0x03CA08A8 LDR X1, [X8]
	0x03CA08AC BL 0x2B01D64
	0x03CA08B0 STR X20, [X21 + 0x40]
	0x03CA08B4 LDR X8, [X19 + 0x170]
	0x03CA08B8 CBZ X8, 0x3CA0A04
	0x03CA08BC LDR X20, [X8 + 0x20]
	0x03CA08C0 CBZ X20, 0x3CA09E8
	0x03CA08C4 LDR W8, [X20 + 0x18]
	0x03CA08C8 CMP W8, 0x1
	0x03CA08CC B.LT 0x3CA09E8
	0x03CA08D0 ADRP X24, 0x4C1000
	0x03CA08D4 ADRP X25, 0x4C1000
	0x03CA08D8 ADRP X26, 0x4C1000
	0x03CA08DC LDR X24, [X24 + 0x368]
	0x03CA08E0 LDR X25, [X25 + 0x348]
	0x03CA08E4 LDR X26, [X26 + 0x338]
	0x03CA08E8 MOV W21, W31
	0x03CA08EC ADD X23, X31, 0x80
	0x03CA08F0 LDR X2, [X24]
	0x03CA08F4 ADD X8, X31, 0x80
	0x03CA08F8 MOV X0, X20
	0x03CA08FC MOV W1, W21
	0x03CA0900 BL 0x2FC2270
	0x03CA0904 LDP V0, V1, [X31 + 0x80]
	0x03CA0908 LDUR V2, [X23 + 0x1C]
	0x03CA090C ADD X8, X31, 0x80
	0x03CA0910 ADD X0, X31, 0x50
	0x03CA0914 MOV X1, X31
	0x03CA0918 STP V0, V1, [X31 + 0x50]
	0x03CA091C STUR V2, [X31 + 0x6C]
	0x03CA0920 BL 0x3C9E6E4
	0x03CA0924 LDR V0, [X31 + 0x8]
	0x03CA0928 LDR W8, [X31 + 0x90]
	0x03CA092C ADD X0, X31, 0x30
	0x03CA0930 MOV X1, X31
	0x03CA0934 STR V0, [X31 + 0x3]
	0x03CA0938 STR W8, [X31 + 0x40]
	0x03CA093C BL 0x3C9E52C
	0x03CA0940 MOV W22, W0
	0x03CA0944 ADD X8, X31, 0x80
	0x03CA0948 ADD X0, X31, 0x50
	0x03CA094C MOV X1, X31
	0x03CA0950 BL 0x3C9E6D0
	0x03CA0954 LDR V0, [X31 + 0x8]
	0x03CA0958 LDR W8, [X31 + 0x90]
	0x03CA095C ADD X0, X31, 0x30
	0x03CA0960 MOV X1, X31
	0x03CA0964 STR V0, [X31 + 0x3]
	0x03CA0968 STR W8, [X31 + 0x40]
	0x03CA096C BL 0x3C9E52C
	0x03CA0970 LDR X8, [X19 + 0x170]
	0x03CA0974 CBZ X8, 0x3CA0A04
	0x03CA0978 LDR X8, [X8 + 0x40]
	0x03CA097C CBZ X8, 0x3CA0A04
	0x03CA0980 LDR X2, [X25]
	0x03CA0984 ORR W22, W0, W22, 0x10
	0x03CA0988 MOV X0, X8
	0x03CA098C MOV W1, W22
	0x03CA0990 BL 0x2B029E0
	0x03CA0994 TBNZ X0, 0x0, 0x3CA09D8
	0x03CA0998 LDR X8, [X19 + 0x170]
	0x03CA099C CBZ X8, 0x3CA0A04
	0x03CA09A0 LDR X0, [X8 + 0x40]
	0x03CA09A4 LDP V0, V1, [X31 + 0x50]
	0x03CA09A8 LDUR V2, [X31 + 0x6C]
	0x03CA09AC STP V0, V1, [X31]
	0x03CA09B0 STUR V2, [X31 + 0x1C]
	0x03CA09B4 CBZ X0, 0x3CA0A04
	0x03CA09B8 LDP V0, V1, [X31]
	0x03CA09BC LDUR V2, [X31 + 0x1C]
	0x03CA09C0 LDR X3, [X26]
	0x03CA09C4 ADD X2, X31, 0x80
	0x03CA09C8 MOV W1, W22
	0x03CA09CC STP V0, V1, [X31 + 0x80]
	0x03CA09D0 STUR V2, [X23 + 0x1C]
	0x03CA09D4 BL 0x2B026C8
	0x03CA09D8 LDR W8, [X20 + 0x18]
	0x03CA09DC ADD W21, W21, 0x1
	0x03CA09E0 CMP W21, W8
	0x03CA09E4 B.LT 0x3CA08F0
	0x03CA09E8 LDP X20, X19, [X31 + 0xF0]
	0x03CA09EC LDP X22, X21, [X31 + 0xE0]
	0x03CA09F0 LDP X24, X23, [X31 + 0xD0]
	0x03CA09F4 LDP X26, X25, [X31 + 0xC0]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X19, 0x748000
	015 Move X27, 0x4C2000
	016 Move W8, [X19+723]
	017 Move X27, [X27+648]
	018 Move W24, W6
	019 Move W25, W5
	020 Move W20, W4
	021 Move W21, W3
	022 Move W23, W2
	023 Move W22, W1
	024 Move X26, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {64}
	029 Move X0, 0x4B9000
	030 Move X0, [X0+3008]
	031 Call 0x1C17CF4
	032 Move X0, 0x4B9000
	033 Move X0, [X0+3016]
	034 Call 0x1C17CF4
	035 Move X0, 0x4B9000
	036 Move X0, [X0+3024]
	037 Call 0x1C17CF4
	038 Move X0, 0x4B9000
	039 Move X0, [X0+3032]
	040 Call 0x1C17CF4
	041 Move X0, 0x458000
	042 Move X0, [X0+3232]
	043 Call 0x1C17CF4
	044 Move X0, 0x454000
	045 Move X0, [X0+1432]
	046 Call 0x1C17CF4
	047 Move X0, 0x4C2000
	048 Move X0, [X0+648]
	049 Call 0x1C17CF4
	050 Move X0, 0x4C2000
	051 Move X0, [X0+616]
	052 Call 0x1C17CF4
	053 Move X0, 0x4B9000
	054 Move X0, [X0+3048]
	055 Call 0x1C17CF4
	056 Move X0, 0x47E000
	057 Move X0, [X0+592]
	058 Call 0x1C17CF4
	059 Move X0, 0x4B9000
	060 Move X0, [X0+3056]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X19+723], W8
	064 Move X0, [X27]
	065 Call 0x22547A0
	066 Compare X0, 0
	067 JumpIfEqual {314}
	068 Move X8, 0x4B9000
	069 Move X8, [X8+3056]
	070 Move X9, 0x4B9000
	071 Move X19, X0
	072 Move X8, [X8]
	073 Move X9, [X9+3008]
	074 Move [X0+24], X8
	075 Move X0, [X9]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X28, 0x4B9000
	081 Move X27, 0x47E000
	082 Move X28, [X28+3048]
	083 Move X27, [X27+592]
	084 Add X8, X31, 96
	085 Move X0, X31
	086 Call FontEngine.GetFaceInfo
	087 Add X0, X31, 0
	088 Add X1, X31, 96
	089 Move W2, 96
	090 Call 0x3EB2AC0
	091 Add X0, X19, 176
	092 Add X1, X31, 0
	093 Move W2, 96
	094 Call 0x3EB2AC0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, 0x454000
	097 Move X8, [X8+1432]
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X26
	104 Move X1, X31
	105 Move X2, X31
	106 Call Object.op_Inequality, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {112}
	111 Move [X19+152], X26
	112 Move [X19+168], W25
	113 Move [X19+336], W21
	114 Move [X19+340], W20
	115 Move [X19+344], W22
	116 Move [X19+348], W23
	117 Move X0, [X28]
	118 Move W1, 1
	119 Call 0x1C17D6C
	120 Move [X19+320], X0
	121 Move X0, [X27]
	122 Call 0x1C17F10
	123 Move W1, 1
	124 Move W2, 1
	125 Move W3, 1
	126 Move W4, W31
	127 Move X5, X31
	128 Move X25, X0
	129 Call Texture2D..ctor, X0, X1, X2, X3, X4
	130 Move X8, [X19+320]
	131 Compare X8, 0
	132 JumpIfEqual {314}
	133 Move W9, [X8+24]
	134 Compare W9, 0
	135 JumpIfEqual {315}
	136 Move X26, 0x4C2000
	137 Move X26, [X26+616]
	138 Move [X8+32], X25
	139 And W8, W24, 1
	140 Move [X19+332], W8
	141 Move X0, [X26]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X31
	147 Move TEMP, X23
	148 And TEMP, TEMP, 16
	149 Compare TEMP, 16
	150 JumpIfEqual {208}
	151 Call TextShaderUtilities.get_ShaderRef_MobileSDF
	152 Move X8, 0x458000
	153 Move X8, [X8+3232]
	154 Move X24, X0
	155 Move X8, [X8]
	156 Move X0, X8
	157 Call 0x1C17F10
	158 Move X1, X24
	159 Move X2, X31
	160 Move X23, X0
	161 Call Material..ctor, X0, X1
	162 Compare X23, 0
	163 JumpIfEqual {314}
	164 Move X8, [X26]
	165 Move X0, X23
	166 Move X2, X25
	167 Move X3, X31
	168 Move X8, [X8+184]
	169 Move W1, [X8]
	170 Call Material.SetTexture, X0, X1, X2
	171 Move X8, [X26]
	172 NotImplemented "Instruction SCVTF not yet implemented."
	173 Move X0, X23
	174 Move X2, X31
	175 Move X8, [X8+184]
	176 Move W1, [X8+128]
	177 Call Material.SetFloat, X0, X1, V0
	178 Move X8, [X26]
	179 NotImplemented "Instruction SCVTF not yet implemented."
	180 Move X0, X23
	181 Move X2, X31
	182 Move X8, [X8+184]
	183 Move W1, [X8+132]
	184 Call Material.SetFloat, X0, X1, V0
	185 Move X8, [X26]
	186 Move X0, X23
	187 Move X2, X31
	188 Move X8, [X8+184]
	189 Move W1, [X8+108]
	190 Add W8, W22, 1
	191 NotImplemented "Instruction SCVTF not yet implemented."
	192 Call Material.SetFloat, X0, X1, V0
	193 Move X8, [X26]
	194 Move V0, [X19+392]
	195 Move X0, X23
	196 Move X2, X31
	197 Move X8, [X8+184]
	198 Move W1, [X8+72]
	199 Call Material.SetFloat, X0, X1, V0
	200 Move X8, [X26]
	201 Move V0, [X19+400]
	202 Move X0, X23
	203 Move X2, X31
	204 Move X8, [X8+184]
	205 Move W1, [X8+76]
	206 Call Material.SetFloat, X0, X1, V0
	207 Move W25, 1
	208 Call TextShaderUtilities.get_ShaderRef_MobileBitmap
	209 Move X8, 0x458000
	210 Move X8, [X8+3232]
	211 Move X22, X0
	212 Move X8, [X8]
	213 Move X0, X8
	214 Call 0x1C17F10
	215 Move X1, X22
	216 Move X2, X31
	217 Move X23, X0
	218 Call Material..ctor, X0, X1
	219 Compare X23, 0
	220 JumpIfEqual {314}
	221 Move X8, [X26]
	222 Move X0, X23
	223 Move X2, X25
	224 Move X3, X31
	225 Move X8, [X8+184]
	226 Move W1, [X8]
	227 Call Material.SetTexture, X0, X1, X2
	228 Move X8, [X26]
	229 NotImplemented "Instruction SCVTF not yet implemented."
	230 Move X0, X23
	231 Move X2, X31
	232 Move X8, [X8+184]
	233 Move W1, [X8+128]
	234 Call Material.SetFloat, X0, X1, V0
	235 Move X8, [X26]
	236 NotImplemented "Instruction SCVTF not yet implemented."
	237 Move X0, X23
	238 Move X2, X31
	239 Move X8, [X8+184]
	240 Move W1, [X8+132]
	241 Call Material.SetFloat, X0, X1, V0
	242 Move W25, W31
	243 Move X24, 0x4B9000
	244 Move X24, [X24+3032]
	245 Move [X19+40], X23
	246 Move X23, 0x4B9000
	247 Move X0, [X24]
	248 Move X23, [X23+3024]
	249 Call 0x1C17F10
	250 Move X2, [X23]
	251 Move W1, 8
	252 Move X22, X0
	253 Call List`1<GlyphRect>..ctor, X0, X1
	254 Subtract W3, W21, W25
	255 Subtract W4, W20, W25
	256 Add X0, X31, 96
	257 Move W1, W31
	258 Move W2, W31
	259 Move X5, X31
	260 Move [X31+96], X31
	261 Move [X31+104], X31
	262 Call GlyphRect..ctor, X0, X1, X2, X3, X4
	263 Compare X22, 0
	264 JumpIfEqual {314}
	265 Move X9, 0x4B9000
	266 Move X9, [X9+3016]
	267 Move W10, [X22+28]
	268 Move X1, [X31+96]
	269 Move X2, [X31+104]
	270 Move X8, [X22+16]
	271 Move X9, [X9]
	272 Add W10, W10, 1
	273 Move [X22+28], W10
	274 Compare X8, 0
	275 JumpIfEqual {314}
	276 NotImplemented "Instruction LDRSW not yet implemented."
	277 Move W11, [X8+24]
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Add W9, W10, 1
	280 Add X8, X8, X10
	281 Move [X22+24], W9
	282 Move [X8+32], X1
	283 Move [X8+40], X2
	284 Move X8, [X9+32]
	285 Move X0, X22
	286 Move X8, [X8+192]
	287 Move X3, [X8+112]
	288 Call List`1<GlyphRect>.AddWithResize, X0, X1
	289 Move [X19+360], X22
	290 Move X0, [X24]
	291 Call 0x1C17F10
	292 Move X2, [X23]
	293 Move W1, 8
	294 Move X20, X0
	295 Call List`1<GlyphRect>..ctor, X0, X1
	296 Move X0, X19
	297 Move [X19+352], X20
	298 Call FontAsset.ReadFontAssetDefinition, X0
	299 Move X0, X19
	300 Move X20, [X31+272]
	301 Move X19, [X31+280]
	302 Move X22, [X31+256]
	303 Move X21, [X31+264]
	304 Move X24, [X31+240]
	305 Move X23, [X31+248]
	306 Move X26, [X31+224]
	307 Move X25, [X31+232]
	308 Move X28, [X31+208]
	309 Move X27, [X31+216]
	310 Move X29, [X31+192]
	311 Move X30, [X31+200]
	312 Add X31, X31, 288
	313 Return X0
	314 Call 0x1C17F20
	315 Call 0x1C17F28

Method: System.Void Awake()

Disassembly:
	0x03CA0D64 LDR X0, [X8 + 0x50]

ISIL:
	001 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x03CA0D68 LDR V0, [X31 + 0x2]
	0x03CA0D6C LDR X8, [X31 + 0x30]
	0x03CA0D70 STR V0, [X31]
	0x03CA0D74 STR X8, [X31 + 0x10]
	0x03CA0D78 CBZ X0, 0x3CA0DC4
	0x03CA0D7C LDR V0, [X31]
	0x03CA0D80 LDR X8, [X31 + 0x10]
	0x03CA0D84 LDR X3, [X25]
	0x03CA0D88 ADD X2, X31, 0x40
	0x03CA0D8C MOV W1, W22
	0x03CA0D90 STR V0, [X31 + 0x4]
	0x03CA0D94 STR X8, [X31 + 0x50]
	0x03CA0D98 BL 0x2B0BD80
	0x03CA0D9C LDR W8, [X20 + 0x18]
	0x03CA0DA0 ADD W21, W21, 0x1
	0x03CA0DA4 CMP W21, W8
	0x03CA0DA8 B.LT 0x3CA0CF4
	0x03CA0DAC LDP X20, X19, [X31 + 0x90]
	0x03CA0DB0 LDP X22, X21, [X31 + 0x80]
	0x03CA0DB4 LDP X24, X23, [X31 + 0x70]
	0x03CA0DB8 LDP X30, X25, [X31 + 0x60]
	0x03CA0DBC ADD X31, X31, 0xA0
	0x03CA0DC0 RET
	0x03CA0DC4 BL 0x1C16F20
	0x03CA0DC8 LDR W0, [X0 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x748000
	006 Move X20, 0x454000
	007 Move W8, [X21+724]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x454000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+724], W8
	019 Move X0, X19
	020 Call FontAsset.DestroyAtlasTextures, X0
	021 Move X0, [X20]
	022 Move X19, [X19+40]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Object.DestroyImmediate, X0
	034 Return 

Method: System.Void ReadFontAssetDefinition()

Disassembly:
	0x03C9FBEC LDR X0, [X29]
	0x03C9FBF0 LDR W8, [X0 + 0xE0]
	0x03C9FBF4 CBNZ W8, 0x3C9FBFC
	0x03C9FBF8 BL 0x1C16DFC
	0x03C9FBFC MOV X0, X19
	0x03C9FC00 MOV W1, W26
	0x03C9FC04 MOV W2, W25
	0x03C9FC08 MOV X3, X31
	0x03C9FC0C BL 0x3C9C85C
	0x03C9FC10 CBZ W0, 0x3C9FC8C
	0x03C9FC14 CBZ X19, 0x3C9FD60
	0x03C9FC18 ADRP X20, 0x4C2000
	0x03C9FC1C LDR X20, [X20 + 0x298]
	0x03C9FC20 MOV X0, X19
	0x03C9FC24 MOV X1, X31
	0x03C9FC28 BL 0x3C389D4
	0x03C9FC2C LDR X1, [X20]
	0x03C9FC30 MOV X2, X31
	0x03C9FC34 BL 0x321BA08
	0x03C9FC38 TBZ X0, 0x0, 0x3C9FCDC
	0x03C9FC3C ADRP X8, 0x4C2000
	0x03C9FC40 LDR X8, [X8 + 0x258]
	0x03C9FC44 LDR X0, [X8]
	0x03C9FC48 LDR W8, [X0 + 0xE0]
	0x03C9FC4C CBNZ W8, 0x3C9FC54
	0x03C9FC50 BL 0x1C16DFC
	0x03C9FC54 ADRP X8, 0x4C2000
	0x03C9FC58 ADRP X9, 0x4C2000
	0x03C9FC5C LDR X8, [X8 + 0x2A0]
	0x03C9FC60 LDR X9, [X9 + 0x290]
	0x03C9FC64 LDP X20, X19, [X31 + 0x50]
	0x03C9FC68 LDP X22, X21, [X31 + 0x40]
	0x03C9FC6C LDR X0, [X8]
	0x03C9FC70 LDR X1, [X9]
	0x03C9FC74 LDP X24, X23, [X31 + 0x30]
	0x03C9FC78 LDP X26, X25, [X31 + 0x20]
	0x03C9FC7C LDP X28, X27, [X31 + 0x10]
	0x03C9FC80 MOVZ W2, 0x5A
	0x03C9FC84 LDP X29, X30, [X31], #0x60
	0x03C9FC88 B 0x3C9F184
	0x03C9FC8C ADRP X8, 0x4C2000
	0x03C9FC90 LDR X8, [X8 + 0x258]
	0x03C9FC94 LDR X0, [X8]
	0x03C9FC98 LDR W8, [X0 + 0xE0]
	0x03C9FC9C CBNZ W8, 0x3C9FCA4
	0x03C9FCA0 BL 0x1C16DFC
	0x03C9FCA4 AND W6, W27, 0x1
	0x03C9FCA8 MOV X0, X19
	0x03C9FCAC MOV W1, W24
	0x03C9FCB0 MOV W2, W23
	0x03C9FCB4 MOV W3, W22
	0x03C9FCB8 MOV W4, W21
	0x03C9FCBC MOV W5, W20
	0x03C9FCC0 LDP X20, X19, [X31 + 0x50]
	0x03C9FCC4 LDP X22, X21, [X31 + 0x40]
	0x03C9FCC8 LDP X24, X23, [X31 + 0x30]
	0x03C9FCCC LDP X26, X25, [X31 + 0x20]
	0x03C9FCD0 LDP X28, X27, [X31 + 0x10]
	0x03C9FCD4 LDP X29, X30, [X31], #0x60
	0x03C9FCD8 B 0x3C9F584
	0x03C9FCDC MOV X0, X19
	0x03C9FCE0 MOV X1, X31
	0x03C9FCE4 BL 0x3C389D4
	0x03C9FCE8 ADRP X8, 0x4B9000
	0x03C9FCEC LDR X8, [X8 + 0xBF8]
	0x03C9FCF0 ADRP X9, 0x4B9000
	0x03C9FCF4 LDR X9, [X9 + 0xC00]
	0x03C9FCF8 MOV X1, X0
	0x03C9FCFC LDR X8, [X8]
	0x03C9FD00 MOV X3, X31
	0x03C9FD04 LDR X2, [X9]
	0x03C9FD08 MOV X0, X8
	0x03C9FD0C BL 0x32274B8
	0x03C9FD10 ADRP X8, 0x454000
	0x03C9FD14 LDR X8, [X8 + 0xA28]
	0x03C9FD18 MOV X20, X0
	0x03C9FD1C LDR X8, [X8]
	0x03C9FD20 LDR W9, [X8 + 0xE0]
	0x03C9FD24 CBNZ W9, 0x3C9FD30
	0x03C9FD28 MOV X0, X8
	0x03C9FD2C BL 0x1C16DFC
	0x03C9FD30 MOV X0, X20
	0x03C9FD34 MOV X1, X19
	0x03C9FD38 MOV X2, X31
	0x03C9FD3C BL 0x3C06B0C
	0x03C9FD40 LDP X20, X19, [X31 + 0x50]
	0x03C9FD44 LDP X22, X21, [X31 + 0x40]
	0x03C9FD48 LDP X24, X23, [X31 + 0x30]
	0x03C9FD4C LDP X26, X25, [X31 + 0x20]
	0x03C9FD50 LDP X28, X27, [X31 + 0x10]
	0x03C9FD54 MOV X0, X31
	0x03C9FD58 LDP X29, X30, [X31], #0x60
	0x03C9FD5C RET
	0x03C9FD60 BL 0x1C16F20
	0x03C9FD64 RET
	0x03C9FD68 STP X30, X21, [X31 - 0x20]!
	0x03C9FD6C STP X20, X19, [X31 + 0x10]
	0x03C9FD70 ADRP X21, 0x748000
	0x03C9FD74 ADRP X20, 0x454000
	0x03C9FD78 LDRB W8, [X21 + 0x2D4]
	0x03C9FD7C LDR X20, [X20 + 0x598]
	0x03C9FD80 MOV X19, X0
	0x03C9FD84 TBNZ X8, 0x0, 0x3C9FD9C
	0x03C9FD88 ADRP X0, 0x454000
	0x03C9FD8C LDR X0, [X0 + 0x598]
	0x03C9FD90 BL 0x1C16CF4
	0x03C9FD94 MOVZ W8, 0x1
	0x03C9FD98 STRB W8, [X21 + 0x2D4]
	0x03C9FD9C MOV X0, X19
	0x03C9FDA0 BL 0x3C9FDCC
	0x03C9FDA4 LDR X0, [X20]
	0x03C9FDA8 LDR X19, [X19 + 0x28]
	0x03C9FDAC LDR W8, [X0 + 0xE0]
	0x03C9FDB0 CBNZ W8, 0x3C9FDB8
	0x03C9FDB4 BL 0x1C16DFC
	0x03C9FDB8 MOV X0, X19
	0x03C9FDBC LDP X20, X19, [X31 + 0x10]
	0x03C9FDC0 MOV X1, X31
	0x03C9FDC4 LDP X30, X21, [X31], #0x20
	0x03C9FDC8 B 0x3C39564
	0x03C9FDCC STR X30, [X31 - 0x30]!
	0x03C9FDD0 STP X22, X21, [X31 + 0x10]
	0x03C9FDD4 STP X20, X19, [X31 + 0x20]
	0x03C9FDD8 ADRP X20, 0x748000
	0x03C9FDDC LDRB W8, [X20 + 0x2FE]
	0x03C9FDE0 MOV X19, X0
	0x03C9FDE4 TBNZ X8, 0x0, 0x3C9FDFC
	0x03C9FDE8 ADRP X0, 0x454000
	0x03C9FDEC LDR X0, [X0 + 0x598]
	0x03C9FDF0 BL 0x1C16CF4
	0x03C9FDF4 MOVZ W8, 0x1
	0x03C9FDF8 STRB W8, [X20 + 0x2FE]
	0x03C9FDFC LDR X8, [X19 + 0x140]
	0x03C9FE00 CBZ X8, 0x3C9FE7C
	0x03C9FE04 ADRP X22, 0x454000
	0x03C9FE08 LDR X22, [X22 + 0x598]
	0x03C9FE0C MOV X21, X31
	0x03C9FE10 LDR W9, [X8 + 0x18]
	0x03C9FE14 CMP X21, W9, SXTW
	0x03C9FE18 B.GE 0x3C9FE7C
	0x03C9FE1C CMP X21, X9
	0x03C9FE20 B.CS 0x3C9FE8C
	0x03C9FE24 LDR X0, [X22]
	0x03C9FE28 ADD X8, X8, X21, 0x3, LSL
	0x03C9FE2C LDR X20, [X8 + 0x20]
	0x03C9FE30 LDR W9, [X0 + 0xE0]
	0x03C9FE34 CBNZ W9, 0x3C9FE3C
	0x03C9FE38 BL 0x1C16DFC
	0x03C9FE3C MOV X0, X20
	0x03C9FE40 MOV X1, X31
	0x03C9FE44 MOV X2, X31
	0x03C9FE48 BL 0x3C354F8
	0x03C9FE4C TBZ X0, 0x0, 0x3C9FE6C
	0x03C9FE50 LDR X0, [X22]
	0x03C9FE54 LDR W8, [X0 + 0xE0]
	0x03C9FE58 CBNZ W8, 0x3C9FE60
	0x03C9FE5C BL 0x1C16DFC
	0x03C9FE60 MOV X0, X20
	0x03C9FE64 MOV X1, X31
	0x03C9FE68 BL 0x3C39564
	0x03C9FE6C LDR X8, [X19 + 0x140]
	0x03C9FE70 ADD X21, X21, 0x1
	0x03C9FE74 CBNZ X8, 0x3C9FE10
	0x03C9FE78 BL 0x1C16F20
	0x03C9FE7C LDP X20, X19, [X31 + 0x20]
	0x03C9FE80 LDP X22, X21, [X31 + 0x10]
	0x03C9FE84 LDR X30, [X31], #0x30
	0x03C9FE88 RET
	0x03C9FE8C BL 0x1C16F28
	0x03C9FE90 STP X30, X19, [X31 - 0x10]!
	0x03C9FE94 MOV X19, X0
	0x03C9FE98 BL 0x3CA00A0
	0x03C9FE9C MOV X0, X19
	0x03C9FEA0 BL 0x3CA0328
	0x03C9FEA4 MOV X0, X19
	0x03C9FEA8 BL 0x3CA04C0
	0x03C9FEAC MOV X0, X19
	0x03C9FEB0 BL 0x3CA07D0
	0x03C9FEB4 MOV X0, X19
	0x03C9FEB8 BL 0x3CA0A08
	0x03C9FEBC MOV X0, X19
	0x03C9FEC0 LDP X30, X19, [X31], #0x10
	0x03C9FEC4 B 0x3CA0BE8
	0x03C9FEC8 STR X30, [X31 - 0x20]!
	0x03C9FECC STP X20, X19, [X31 + 0x10]
	0x03C9FED0 ADRP X20, 0x748000
	0x03C9FED4 LDRB W8, [X20 + 0x2DC]
	0x03C9FED8 MOV X19, X0
	0x03C9FEDC TBNZ X8, 0x0, 0x3C9FF0C
	0x03C9FEE0 ADRP X0, 0x454000
	0x03C9FEE4 LDR X0, [X0 + 0xA28]
	0x03C9FEE8 BL 0x1C16CF4
	0x03C9FEEC ADRP X0, 0x4C2000
	0x03C9FEF0 LDR X0, [X0 + 0x2A8]
	0x03C9FEF4 BL 0x1C16CF4
	0x03C9FEF8 ADRP X0, 0x4B9000
	0x03C9FEFC LDR X0, [X0 + 0xBF8]
	0x03C9FF00 BL 0x1C16CF4
	0x03C9FF04 MOVZ W8, 0x1
	0x03C9FF08 STRB W8, [X20 + 0x2DC]
	0x03C9FF0C LDR W8, [X19 + 0xA8]
	0x03C9FF10 SUB W8, W8, 0x1
	0x03C9FF14 CMP W8, 0x1
	0x03C9FF18 B.HI 0x3C9FF94
	0x03C9FF1C MOV X0, X19
	0x03C9FF20 BL 0x3CA0DD0
	0x03C9FF24 CBZ W0, 0x3CA0090
	0x03C9FF28 LDRB W8, [X19 + 0xAC]
	0x03C9FF2C CBNZ W8, 0x3C9FF94
	0x03C9FF30 MOV X0, X19
	0x03C9FF34 MOV X1, X31
	0x03C9FF38 BL 0x3C389D4
	0x03C9FF3C ADRP X8, 0x4B9000
	0x03C9FF40 LDR X8, [X8 + 0xBF8]
	0x03C9FF44 ADRP X9, 0x4C2000
	0x03C9FF48 LDR X9, [X9 + 0x2A8]
	0x03C9FF4C MOV X1, X0
	0x03C9FF50 LDR X8, [X8]
	0x03C9FF54 MOV X3, X31
	0x03C9FF58 LDR X2, [X9]
	0x03C9FF5C MOV X0, X8
	0x03C9FF60 BL 0x32274B8
	0x03C9FF64 ADRP X8, 0x454000
	0x03C9FF68 LDR X8, [X8 + 0xA28]
	0x03C9FF6C MOV X20, X0
	0x03C9FF70 LDR X8, [X8]
	0x03C9FF74 LDR W9, [X8 + 0xE0]
	0x03C9FF78 CBNZ W9, 0x3C9FF84
	0x03C9FF7C MOV X0, X8
	0x03C9FF80 BL 0x1C16DFC
	0x03C9FF84 MOV X0, X20
	0x03C9FF88 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X20, 0x749000
	008 Move W8, [X20+725]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x4C3000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move X0, 0x4BA000
	018 Move X0, [X0+3216]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C3000
	021 Move X0, [X0+592]
	022 Call 0x1C17CF4
	023 Move X0, 0x4C3000
	024 Move X0, [X0+600]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C3000
	027 Move X0, [X0+608]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C3000
	030 Move X0, [X0+616]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+725], W8
	034 Move X21, 0x4C3000
	035 Move X21, [X21+584]
	036 Move X0, X19
	037 Move [X31+32], X31
	038 Move [X31+40], X31
	039 Move [X31+48], W31
	040 Call FontAsset.InitializeDictionaryLookupTables, X0
	041 Move X0, X19
	042 Call FontAsset.AddSynthesizedCharactersAndFaceMetrics, X0
	043 Add X20, X19, 176
	044 Move X0, X20
	045 Move X1, X31
	046 Call FaceInfo.get_capLine, X0
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X0, [X19+304]
	049 Compare X0, 0
	050 JumpIfEqual {264}
	051 Move X2, [X21]
	052 Move W1, 88
	053 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {92}
	058 Move X0, [X19+304]
	059 Compare X0, 0
	060 JumpIfEqual {264}
	061 Move X8, 0x4C3000
	062 Move X8, [X8+592]
	063 Move W1, 88
	064 Move X2, [X8]
	065 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	066 Compare X0, 0
	067 JumpIfEqual {264}
	068 Move X8, [X19+288]
	069 Compare X8, 0
	070 JumpIfEqual {264}
	071 Move X9, 0x4BA000
	072 Move W1, [X0+40]
	073 Move X9, [X9+3216]
	074 Move X0, X8
	075 Move X2, [X9]
	076 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {264}
	079 Add X8, X31, 8
	080 Move X1, X31
	081 Call Glyph.get_metrics, X0
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 Move W8, [X31+24]
	084 Add X0, X31, 32
	085 Move X1, X31
	086 Move [X31+2], V0
	087 Move [X31+48], W8
	088 Call GlyphMetrics.get_horizontalBearingY, X0
	089 Move X0, X20
	090 Move X1, X31
	091 Call FaceInfo.set_capLine, X0, V0
	092 Move X0, X20
	093 Move X1, X31
	094 Call FaceInfo.get_meanLine, X0
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 Move X0, [X19+304]
	097 Compare X0, 0
	098 JumpIfEqual {264}
	099 Move X2, [X21]
	100 Move W1, 120
	101 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {140}
	106 Move X0, [X19+304]
	107 Compare X0, 0
	108 JumpIfEqual {264}
	109 Move X8, 0x4C3000
	110 Move X8, [X8+592]
	111 Move W1, 120
	112 Move X2, [X8]
	113 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	114 Compare X0, 0
	115 JumpIfEqual {264}
	116 Move X8, [X19+288]
	117 Compare X8, 0
	118 JumpIfEqual {264}
	119 Move X9, 0x4BA000
	120 Move W1, [X0+40]
	121 Move X9, [X9+3216]
	122 Move X0, X8
	123 Move X2, [X9]
	124 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	125 Compare X0, 0
	126 JumpIfEqual {264}
	127 Add X8, X31, 8
	128 Move X1, X31
	129 Call Glyph.get_metrics, X0
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 Move W8, [X31+24]
	132 Add X0, X31, 32
	133 Move X1, X31
	134 Move [X31+2], V0
	135 Move [X31+48], W8
	136 Call GlyphMetrics.get_horizontalBearingY, X0
	137 Move X0, X20
	138 Move X1, X31
	139 Call FaceInfo.set_meanLine, X0, V0
	140 Move X0, X20
	141 Move X1, X31
	142 Call FaceInfo.get_scale, X0
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 Move S0, 1
	145 Move X0, X20
	146 Move X1, X31
	147 Call FaceInfo.set_scale, X0, V0
	148 Move X0, X20
	149 Move X1, X31
	150 Call FaceInfo.get_strikethroughOffset, X0
	151 NotImplemented "Instruction FCMP not yet implemented."
	152 Move X0, X20
	153 Move X1, X31
	154 Call FaceInfo.get_capLine, X0
	155 Move S1, 2.5
	156 NotImplemented "Instruction FDIV not yet implemented."
	157 Move X0, X20
	158 Move X1, X31
	159 Call FaceInfo.set_strikethroughOffset, X0, V0
	160 Move W8, [X19+344]
	161 Compare W8, 0
	162 JumpIfNotEqual {207}
	163 Move X22, 0x4C3000
	164 Move X22, [X22+616]
	165 Move X21, [X19+40]
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Compare X21, 0
	172 JumpIfEqual {264}
	173 Move X8, [X22]
	174 Move X0, X21
	175 Move X2, X31
	176 Move X8, [X8+184]
	177 Move W1, [X8+108]
	178 Call Material.HasProperty, X0, X1
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {207}
	183 Move X0, [X22]
	184 Move X21, [X19+40]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Compare X21, 0
	190 JumpIfEqual {264}
	191 Move X8, [X22]
	192 Move X0, X21
	193 Move X2, X31
	194 Move X8, [X8+184]
	195 Move W1, [X8+108]
	196 Call Material.GetFloat, X0, X1
	197 Move W9, 0x7F800000
	198 NotImplemented "Instruction FCVTZS not yet implemented."
	199 Move S1, W9
	200 Subtract W8, W8, 1
	201 NotImplemented "Instruction FCMP not yet implemented."
	202 Move TEMP, 0x80000000
	203 Not TEMP
	204 Move W9, TEMP
	205 NotImplemented "Instruction CSEL not yet implemented."
	206 Move [X19+344], W8
	207 Move X22, 0x4C3000
	208 Move X21, 0x4C3000
	209 Move X22, [X22+600]
	210 Move X21, [X21+608]
	211 Move X0, X19
	212 Move X1, X31
	213 Call Object.get_name, X0
	214 Move X1, X31
	215 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	216 Move [X19+36], W0
	217 Move X0, X20
	218 Move X1, X31
	219 Call FaceInfo.get_familyName, X0
	220 Move X1, X31
	221 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	222 Move [X19+272], W0
	223 Move X0, X20
	224 Move X1, X31
	225 Call FaceInfo.get_styleName, X0
	226 Move X1, X31
	227 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	228 Move [X19+276], W0
	229 Move X0, X19
	230 Move X1, X31
	231 Call Object.get_name, X0
	232 Move X8, [X22]
	233 Move X20, X0
	234 Move W9, [X8+224]
	235 Compare W9, 0
	236 JumpIfNotEqual {240}
	237 Move X0, X8
	238 Call 0x1C17DFC
	239 Move X8, [X22]
	240 Move X8, [X8+184]
	241 Move X0, X20
	242 Move X2, X31
	243 Move X1, [X8+72]
	244 Call String.Concat, X0, X1
	245 Move X1, X31
	246 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	247 Move [X19+48], W0
	248 Move X0, [X21]
	249 Move W8, [X0+224]
	250 Compare W8, 0
	251 JumpIfNotEqual {253}
	252 Call 0x1C17DFC
	253 Move X0, X19
	254 Move X1, X31
	255 Call TextResourceManager.AddFontAsset, X0
	256 Move [X19+410], W31
	257 Move X20, [X31+96]
	258 Move X19, [X31+104]
	259 Move X22, [X31+80]
	260 Move X21, [X31+88]
	261 Move X30, [X31+64]
	262 Add X31, X31, 112
	263 Return 
	264 Call 0x1C17F20

Method: System.Void InitializeDictionaryLookupTables()

Disassembly:
	0x03CA0E90 RET
	0x03CA0E94 ADD X21, X19, 0xB0
	0x03CA0E98 MOV X0, X21
	0x03CA0E9C MOV X1, X31
	0x03CA0EA0 BL 0x3C9BF68
	0x03CA0EA4 MOV X19, X0
	0x03CA0EA8 MOV X0, X21
	0x03CA0EAC MOV X1, X31
	0x03CA0EB0 BL 0x3C9BF78
	0x03CA0EB4 MOV X20, X0
	0x03CA0EB8 MOV X0, X21
	0x03CA0EBC MOV X1, X31
	0x03CA0EC0 BL 0x3C9BF88
	0x03CA0EC4 LDR X8, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call FontAsset.InitializeGlyphLookupDictionary, X0
	005 Move X0, X19
	006 Call FontAsset.InitializeCharacterLookupDictionary, X0
	007 Move X0, X19
	008 Call FontAsset.InitializeLigatureSubstitutionLookupDictionary, X0
	009 Move X0, X19
	010 Call FontAsset.InitializeGlyphPaidAdjustmentRecordsLookupDictionary, X0
	011 Move X0, X19
	012 Call FontAsset.InitializeMarkToBaseAdjustmentRecordsLookupDictionary, X0
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call FontAsset.InitializeMarkToMarkAdjustmentRecordsLookupDictionary, X0
	017 Return 

Method: System.Void InitializeGlyphLookupDictionary()

Disassembly:
	0x03CA10A0 BL 0x3C9C2F4
	0x03CA10A4 ADRP X8, 0x47A000
	0x03CA10A8 LDR X8, [X8 + 0x608]
	0x03CA10AC LDR X0, [X8]
	0x03CA10B0 LDR W8, [X0 + 0xE0]
	0x03CA10B4 CBNZ W8, 0x3CA10BC
	0x03CA10B8 BL 0x1C16DFC
	0x03CA10BC MOV X0, X31
	0x03CA10C0 BL 0x3C9C0B0
	0x03CA10C4 ADRP X8, 0x4B7000
	0x03CA10C8 LDR X8, [X8 + 0xC08]
	0x03CA10CC MOV X21, X0
	0x03CA10D0 MOV X22, X1
	0x03CA10D4 LDR X0, [X8]
	0x03CA10D8 BL 0x1C16F10
	0x03CA10DC LDR V0, [X31 + 0x2]
	0x03CA10E0 LDR W8, [X31 + 0x30]
	0x03CA10E4 ADD X2, X31, 0x0
	0x03CA10E8 MOV W1, W31
	0x03CA10EC STR V0, [X31]
	0x03CA10F0 FMOV S0, 1
	0x03CA10F4 MOV X3, X21
	0x03CA10F8 MOV X4, X22
	0x03CA10FC MOV W5, W31
	0x03CA1100 MOV X6, X31
	0x03CA1104 MOV X23, X0
	0x03CA1108 STR W8, [X31 + 0x10]
	0x03CA110C BL 0x3C9C5B4
	0x03CA1110 STR X23, [X31 + 0x38]
	0x03CA1114 ADRP X8, 0x4C0000
	0x03CA1118 LDR X8, [X8 + 0x3E0]
	0x03CA111C LDR X21, [X20 + 0x130]
	0x03CA1120 LDR X0, [X8]
	0x03CA1124 BL 0x1C16F10
	0x03CA1128 MOV W1, W19
	0x03CA112C MOV X2, X20
	0x03CA1130 MOV X3, X23
	0x03CA1134 MOV X22, X0
	0x03CA1138 BL 0x3C9E938
	0x03CA113C CBZ X21, 0x3CA1170
	0x03CA1140 ADRP X8, 0x4C0000
	0x03CA1144 LDR X8, [X8 + 0x2B0]
	0x03CA1148 MOV X0, X21
	0x03CA114C MOV W1, W19
	0x03CA1150 MOV X2, X22
	0x03CA1154 LDR X3, [X8]
	0x03CA1158 BL 0x2B0F05C
	0x03CA115C LDP X20, X19, [X31 + 0x60]
	0x03CA1160 LDP X22, X21, [X31 + 0x50]
	0x03CA1164 LDP X30, X23, [X31 + 0x40]
	0x03CA1168 ADD X31, X31, 0x70
	0x03CA116C RET
	0x03CA1170 BL 0x1C16F20
	0x03CA1174 STR X30, [X31 - 0x30]!
	0x03CA1178 STP X22, X21, [X31 + 0x10]
	0x03CA117C STP X20, X19, [X31 + 0x20]
	0x03CA1180 ADRP X22, 0x746000
	0x03CA1184 LDRB W8, [X22 + 0x2DE]
	0x03CA1188 MOV X19, X2
	0x03CA118C MOV W20, W1
	0x03CA1190 MOV X21, X0
	0x03CA1194 TBNZ X8, 0x0, 0x3CA11AC
	0x03CA1198 ADRP X0, 0x4C0000
	0x03CA119C LDR X0, [X0 + 0x2B0]
	0x03CA11A0 BL 0x1C16CF4
	0x03CA11A4 MOVZ W8, 0x1
	0x03CA11A8 STRB W8, [X22 + 0x2DE]
	0x03CA11AC LDR X0, [X21 + 0x130]
	0x03CA11B0 CBZ X0, 0x3CA11D8
	0x03CA11B4 ADRP X8, 0x4C0000
	0x03CA11B8 LDR X8, [X8 + 0x2B0]
	0x03CA11BC MOV W1, W20
	0x03CA11C0 MOV X2, X19
	0x03CA11C4 LDP X20, X19, [X31 + 0x20]
	0x03CA11C8 LDR X3, [X8]
	0x03CA11CC LDP X22, X21, [X31 + 0x10]
	0x03CA11D0 LDR X30, [X31], #0x30
	0x03CA11D4 B 0x2B0F05C
	0x03CA11D8 BL 0x1C16F20
	0x03CA11DC STP X30, X23, [X31 - 0x30]!
	0x03CA11E0 STP X22, X21, [X31 + 0x10]
	0x03CA11E4 STP X20, X19, [X31 + 0x20]
	0x03CA11E8 ADRP X20, 0x746000
	0x03CA11EC LDRB W8, [X20 + 0x2E0]
	0x03CA11F0 MOV X19, X0
	0x03CA11F4 TBNZ X8, 0x0, 0x3CA1248
	0x03CA11F8 ADRP X0, 0x4C0000
	0x03CA11FC LDR X0, [X0 + 0x3E8]
	0x03CA1200 BL 0x1C16CF4
	0x03CA1204 ADRP X0, 0x4C0000
	0x03CA1208 LDR X0, [X0 + 0x3F0]
	0x03CA120C BL 0x1C16CF4
	0x03CA1210 ADRP X0, 0x4C0000
	0x03CA1214 LDR X0, [X0 + 0x3F8]
	0x03CA1218 BL 0x1C16CF4
	0x03CA121C ADRP X0, 0x4C0000
	0x03CA1220 LDR X0, [X0 + 0x2D0]
	0x03CA1224 BL 0x1C16CF4
	0x03CA1228 ADRP X0, 0x4C0000
	0x03CA122C LDR X0, [X0 + 0x400]
	0x03CA1230 BL 0x1C16CF4
	0x03CA1234 ADRP X0, 0x4C0000
	0x03CA1238 LDR X0, [X0 + 0x408]
	0x03CA123C BL 0x1C16CF4
	0x03CA1240 MOVZ W8, 0x1
	0x03CA1244 STRB W8, [X20 + 0x2E0]
	0x03CA1248 LDR X20, [X19 + 0x128]
	0x03CA124C CBZ X20, 0x3CA1300
	0x03CA1250 LDR W8, [X20 + 0x18]
	0x03CA1254 CMP W8, 0x1
	0x03CA1258 B.LT 0x3CA1300
	0x03CA125C ADRP X23, 0x4C0000
	0x03CA1260 LDR X23, [X23 + 0x408]
	0x03CA1264 LDR X0, [X23]
	0x03CA1268 LDR W8, [X0 + 0xE0]
	0x03CA126C CBNZ W8, 0x3CA1278
	0x03CA1270 BL 0x1C16DFC
	0x03CA1274 LDR X0, [X23]
	0x03CA1278 LDR X8, [X0 + 0xB8]
	0x03CA127C LDR X21, [X8 + 0x8]
	0x03CA1280 CBNZ X21, 0x3CA12D4
	0x03CA1284 LDR W8, [X0 + 0xE0]
	0x03CA1288 CBNZ W8, 0x3CA1294
	0x03CA128C BL 0x1C16DFC
	0x03CA1290 LDR X0, [X23]
	0x03CA1294 ADRP X9, 0x4C0000
	0x03CA1298 LDR X8, [X0 + 0xB8]
	0x03CA129C LDR X9, [X9 + 0x3F8]
	0x03CA12A0 LDR X22, [X8]
	0x03CA12A4 LDR X0, [X9]
	0x03CA12A8 BL 0x1C16F10
	0x03CA12AC ADRP X8, 0x4C0000
	0x03CA12B0 LDR X8, [X8 + 0x400]
	0x03CA12B4 MOV X1, X22
	0x03CA12B8 MOV X3, X31
	0x03CA12BC MOV X21, X0
	0x03CA12C0 LDR X2, [X8]
	0x03CA12C4 BL 0x2D30E18
	0x03CA12C8 LDR X8, [X23]
	0x03CA12CC LDR X8, [X8 + 0xB8]
	0x03CA12D0 STR X21, [X8 + 0x8]
	0x03CA12D4 ADRP X8, 0x4C0000
	0x03CA12D8 LDR X8, [X8 + 0x3E8]
	0x03CA12DC MOV X0, X20
	0x03CA12E0 MOV X1, X21
	0x03CA12E4 LDR X2, [X8]
	0x03CA12E8 BL 0x21C9CA0
	0x03CA12EC ADRP X8, 0x4C0000
	0x03CA12F0 LDR X8, [X8 + 0x3F0]
	0x03CA12F4 LDR X1, [X8]
	0x03CA12F8 BL 0x21D79F4
	0x03CA12FC STR X0, [X19 + 0x128]
	0x03CA1300 LDP X20, X19, [X31 + 0x20]
	0x03CA1304 LDP X22, X21, [X31 + 0x10]
	0x03CA1308 LDP X30, X23, [X31], #0x30
	0x03CA130C RET
	0x03CA1310 STP X30, X23, [X31 - 0x30]!
	0x03CA1314 STP X22, X21, [X31 + 0x10]
	0x03CA1318 STP X20, X19, [X31 + 0x20]
	0x03CA131C ADRP X20, 0x746000
	0x03CA1320 LDRB W8, [X20 + 0x2E1]
	0x03CA1324 MOV X19, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x747000
	012 Move W8, [X20+726]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {53}
	018 Move X0, 0x4B8000
	019 Move X0, [X0+3224]
	020 Call 0x1C17CF4
	021 Move X0, 0x4B8000
	022 Move X0, [X0+3232]
	023 Call 0x1C17CF4
	024 Move X0, 0x4B8000
	025 Move X0, [X0+3240]
	026 Call 0x1C17CF4
	027 Move X0, 0x4B8000
	028 Move X0, [X0+3248]
	029 Call 0x1C17CF4
	030 Move X0, 0x4B8000
	031 Move X0, [X0+3256]
	032 Call 0x1C17CF4
	033 Move X0, 0x459000
	034 Move X0, [X0+464]
	035 Call 0x1C17CF4
	036 Move X0, 0x4AA000
	037 Move X0, [X0+2896]
	038 Call 0x1C17CF4
	039 Move X0, 0x459000
	040 Move X0, [X0+480]
	041 Call 0x1C17CF4
	042 Move X0, 0x4B8000
	043 Move X0, [X0+3264]
	044 Call 0x1C17CF4
	045 Move X0, 0x4B8000
	046 Move X0, [X0+3272]
	047 Call 0x1C17CF4
	048 Move X0, 0x459000
	049 Move X0, [X0+488]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+726], W8
	053 Move X0, [X19+288]
	054 Compare X0, 0
	055 JumpIfEqual {60}
	056 Move X8, 0x4B8000
	057 Move X8, [X8+3232]
	058 Move X1, [X8]
	059 Call Dictionary`2<UInt32, Object>.Clear, X0
	060 Move X8, 0x4B8000
	061 Move X8, [X8+3256]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X8, 0x4B8000
	065 Move X8, [X8+3248]
	066 Move X20, X0
	067 Move X1, [X8]
	068 Call Dictionary`2<UInt32, Object>..ctor, X0
	069 Move [X19+288], X20
	070 Move X8, [X19+432]
	071 Compare X8, 0
	072 JumpIfEqual {77}
	073 Move W9, [X8+28]
	074 Add W9, W9, 1
	075 Move [X8+24], W31
	076 Move [X8+28], W9
	077 Move X8, 0x459000
	078 Move X8, [X8+488]
	079 Move X0, [X8]
	080 Call 0x1C17F10
	081 Move X8, 0x459000
	082 Move X8, [X8+480]
	083 Move X20, X0
	084 Move X1, [X8]
	085 Call List`1<UInt32>..ctor, X0
	086 Move [X19+432], X20
	087 Move X8, [X19+440]
	088 Compare X8, 0
	089 JumpIfEqual {94}
	090 Move W9, [X8+28]
	091 Add W9, W9, 1
	092 Move [X8+24], W31
	093 Move [X8+28], W9
	094 Move X8, 0x459000
	095 Move X8, [X8+488]
	096 Move X0, [X8]
	097 Call 0x1C17F10
	098 Move X8, 0x459000
	099 Move X8, [X8+480]
	100 Move X20, X0
	101 Move X1, [X8]
	102 Call List`1<UInt32>..ctor, X0
	103 Move [X19+440], X20
	104 Move X0, [X19+280]
	105 Compare X0, 0
	106 JumpIfEqual {172}
	107 Move W23, [X0+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X24, 0x4B8000
	110 Move X25, 0x4B8000
	111 Move X26, 0x4B8000
	112 Move X27, 0x459000
	113 Move X24, [X24+3272]
	114 Move X25, [X25+3240]
	115 Move X26, [X26+3224]
	116 Move X27, [X27+464]
	117 Move W20, W31
	118 Move X2, [X24]
	119 Move W1, W20
	120 Call List`1<Object>.get_Item, X0, X1
	121 Compare X0, 0
	122 JumpIfEqual {172}
	123 Move X1, X31
	124 Move X22, X0
	125 Call Glyph.get_index, X0
	126 Move X8, [X19+288]
	127 Compare X8, 0
	128 JumpIfEqual {172}
	129 Move X2, [X25]
	130 Move W21, W0
	131 Move X0, X8
	132 Move W1, W21
	133 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {167}
	138 Move X0, [X19+288]
	139 Compare X0, 0
	140 JumpIfEqual {172}
	141 Move X3, [X26]
	142 Move W1, W21
	143 Move X2, X22
	144 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	145 Move X0, [X19+432]
	146 Compare X0, 0
	147 JumpIfEqual {172}
	148 Move W10, [X0+28]
	149 Move X8, [X0+16]
	150 Move X9, [X27]
	151 Add W10, W10, 1
	152 Move [X0+28], W10
	153 Compare X8, 0
	154 JumpIfEqual {172}
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Move W11, [X8+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add W9, W10, 1
	159 Add X8, X8, X10
	160 Move [X0+24], W9
	161 Move [X8+32], W21
	162 Move X8, [X9+32]
	163 Move W1, W21
	164 Move X8, [X8+192]
	165 Move X2, [X8+112]
	166 Call List`1<UInt32>.AddWithResize, X0, X1
	167 Add W20, W20, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, [X19+280]
	170 Compare X0, 0
	171 JumpIfNotEqual {118}
	172 Call 0x1C17F20
	173 Move X20, [X31+64]
	174 Move X19, [X31+72]
	175 Move X22, [X31+48]
	176 Move X21, [X31+56]
	177 Move X24, [X31+32]
	178 Move X23, [X31+40]
	179 Move X26, [X31+16]
	180 Move X25, [X31+24]
	181 Move X30, [X31+80]
	182 Move X27, [X31+88]
	183 Return 

Method: System.Void InitializeCharacterLookupDictionary()

Disassembly:
	0x03CA1328 TBNZ X8, 0x0, 0x3CA137C
	0x03CA132C ADRP X0, 0x4B7000
	0x03CA1330 LDR X0, [X0 + 0xDA8]
	0x03CA1334 BL 0x1C16CF4
	0x03CA1338 ADRP X0, 0x4B7000
	0x03CA133C LDR X0, [X0 + 0xDB0]
	0x03CA1340 BL 0x1C16CF4
	0x03CA1344 ADRP X0, 0x4B7000
	0x03CA1348 LDR X0, [X0 + 0xDB8]
	0x03CA134C BL 0x1C16CF4
	0x03CA1350 ADRP X0, 0x4B7000
	0x03CA1354 LDR X0, [X0 + 0xCC0]
	0x03CA1358 BL 0x1C16CF4
	0x03CA135C ADRP X0, 0x4C0000
	0x03CA1360 LDR X0, [X0 + 0x410]
	0x03CA1364 BL 0x1C16CF4
	0x03CA1368 ADRP X0, 0x4C0000
	0x03CA136C LDR X0, [X0 + 0x408]
	0x03CA1370 BL 0x1C16CF4
	0x03CA1374 MOVZ W8, 0x1
	0x03CA1378 STRB W8, [X20 + 0x2E1]
	0x03CA137C LDR X20, [X19 + 0x118]
	0x03CA1380 CBZ X20, 0x3CA1434
	0x03CA1384 LDR W8, [X20 + 0x18]
	0x03CA1388 CMP W8, 0x1
	0x03CA138C B.LT 0x3CA1434
	0x03CA1390 ADRP X23, 0x4C0000
	0x03CA1394 LDR X23, [X23 + 0x408]
	0x03CA1398 LDR X0, [X23]
	0x03CA139C LDR W8, [X0 + 0xE0]
	0x03CA13A0 CBNZ W8, 0x3CA13AC
	0x03CA13A4 BL 0x1C16DFC
	0x03CA13A8 LDR X0, [X23]
	0x03CA13AC LDR X8, [X0 + 0xB8]
	0x03CA13B0 LDR X21, [X8 + 0x10]
	0x03CA13B4 CBNZ X21, 0x3CA1408
	0x03CA13B8 LDR W8, [X0 + 0xE0]
	0x03CA13BC CBNZ W8, 0x3CA13C8
	0x03CA13C0 BL 0x1C16DFC
	0x03CA13C4 LDR X0, [X23]
	0x03CA13C8 ADRP X9, 0x4B7000
	0x03CA13CC LDR X8, [X0 + 0xB8]
	0x03CA13D0 LDR X9, [X9 + 0xDB8]
	0x03CA13D4 LDR X22, [X8]
	0x03CA13D8 LDR X0, [X9]
	0x03CA13DC BL 0x1C16F10
	0x03CA13E0 ADRP X8, 0x4C0000
	0x03CA13E4 LDR X8, [X8 + 0x410]
	0x03CA13E8 MOV X1, X22
	0x03CA13EC MOV X3, X31
	0x03CA13F0 MOV X21, X0
	0x03CA13F4 LDR X2, [X8]
	0x03CA13F8 BL 0x2D30E18
	0x03CA13FC LDR X8, [X23]
	0x03CA1400 LDR X8, [X8 + 0xB8]
	0x03CA1404 STR X21, [X8 + 0x10]
	0x03CA1408 ADRP X8, 0x4B7000
	0x03CA140C LDR X8, [X8 + 0xDA8]
	0x03CA1410 MOV X0, X20
	0x03CA1414 MOV X1, X21
	0x03CA1418 LDR X2, [X8]
	0x03CA141C BL 0x21C9CA0
	0x03CA1420 ADRP X8, 0x4B7000
	0x03CA1424 LDR X8, [X8 + 0xDB0]
	0x03CA1428 LDR X1, [X8]
	0x03CA142C BL 0x21D79F4
	0x03CA1430 STR X0, [X19 + 0x118]
	0x03CA1434 LDP X20, X19, [X31 + 0x20]
	0x03CA1438 LDP X22, X21, [X31 + 0x10]
	0x03CA143C LDP X30, X23, [X31], #0x30
	0x03CA1440 RET
	0x03CA1444 STP X30, X19, [X31 - 0x10]!
	0x03CA1448 MOV X19, X0
	0x03CA144C LDR X0, [X0 + 0x170]
	0x03CA1450 CBZ X0, 0x3CA1474
	0x03CA1454 BL 0x3CA1478
	0x03CA1458 LDR X0, [X19 + 0x170]
	0x03CA145C CBZ X0, 0x3CA1474
	0x03CA1460 BL 0x3CA1664
	0x03CA1464 LDR X0, [X19 + 0x170]
	0x03CA1468 CBZ X0, 0x3CA1474
	0x03CA146C LDP X30, X19, [X31], #0x10
	0x03CA1470 B 0x3CA1850
	0x03CA1474 BL 0x1C16F20
	0x03CA1478 STP X30, X25, [X31 - 0x40]!
	0x03CA147C STP X24, X23, [X31 + 0x10]
	0x03CA1480 STP X22, X21, [X31 + 0x20]
	0x03CA1484 STP X20, X19, [X31 + 0x30]
	0x03CA1488 ADRP X20, 0x746000
	0x03CA148C LDRB W8, [X20 + 0x308]
	0x03CA1490 MOV X19, X0
	0x03CA1494 TBNZ X8, 0x0, 0x3CA1500
	0x03CA1498 ADRP X0, 0x4C0000
	0x03CA149C LDR X0, [X0 + 0x418]
	0x03CA14A0 BL 0x1C16CF4
	0x03CA14A4 ADRP X0, 0x4C0000
	0x03CA14A8 LDR X0, [X0 + 0x420]
	0x03CA14AC BL 0x1C16CF4
	0x03CA14B0 ADRP X0, 0x4C0000
	0x03CA14B4 LDR X0, [X0 + 0x428]
	0x03CA14B8 BL 0x1C16CF4
	0x03CA14BC ADRP X0, 0x4C0000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x747000
	012 Move W8, [X20+727]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x4C1000
	019 Move X0, [X0+688]
	020 Call 0x1C17CF4
	021 Move X0, 0x4C1000
	022 Move X0, [X0+696]
	023 Call 0x1C17CF4
	024 Move X0, 0x4C1000
	025 Move X0, [X0+584]
	026 Call 0x1C17CF4
	027 Move X0, 0x4C1000
	028 Move X0, [X0+704]
	029 Call 0x1C17CF4
	030 Move X0, 0x4B8000
	031 Move X0, [X0+3216]
	032 Call 0x1C17CF4
	033 Move X0, 0x4C1000
	034 Move X0, [X0+712]
	035 Call 0x1C17CF4
	036 Move X0, 0x4C1000
	037 Move X0, [X0+720]
	038 Call 0x1C17CF4
	039 Move X0, 0x4C1000
	040 Move X0, [X0+728]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+727], W8
	044 Move X0, [X19+304]
	045 Compare X0, 0
	046 JumpIfEqual {51}
	047 Move X8, 0x4C1000
	048 Move X8, [X8+696]
	049 Move X1, [X8]
	050 Call Dictionary`2<UInt32, Object>.Clear, X0
	051 Move X8, 0x4C1000
	052 Move X8, [X8+712]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X8, 0x4C1000
	056 Move X8, [X8+704]
	057 Move X20, X0
	058 Move X1, [X8]
	059 Call Dictionary`2<UInt32, Object>..ctor, X0
	060 Move [X19+304], X20
	061 Move X0, [X19+296]
	062 Compare X0, 0
	063 JumpIfEqual {112}
	064 Move X24, 0x4C1000
	065 Move X25, 0x4C1000
	066 Move X26, 0x4C1000
	067 Move X27, 0x4B8000
	068 Move X24, [X24+728]
	069 Move X25, [X25+584]
	070 Move X26, [X26+688]
	071 Move X27, [X27+3216]
	072 Move W20, W31
	073 Move W8, [X0+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X2, [X24]
	076 Move W1, W20
	077 Call List`1<Object>.get_Item, X0, X1
	078 Compare X0, 0
	079 JumpIfEqual {112}
	080 Move X21, X0
	081 Move X0, [X19+304]
	082 Compare X0, 0
	083 JumpIfEqual {112}
	084 Move W23, [X21+20]
	085 Move X2, [X25]
	086 Move W22, [X21+40]
	087 Move W1, W23
	088 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {108}
	093 Move X0, [X19+304]
	094 Compare X0, 0
	095 JumpIfEqual {112}
	096 Move X3, [X26]
	097 Move W1, W23
	098 Move X2, X21
	099 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	100 Move [X21+24], X19
	101 Move X0, [X19+288]
	102 Compare X0, 0
	103 JumpIfEqual {112}
	104 Move X2, [X27]
	105 Move W1, W22
	106 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	107 Move [X21+32], X0
	108 Move X0, [X19+296]
	109 Add W20, W20, 1
	110 Compare X0, 0
	111 JumpIfNotEqual {73}
	112 Call 0x1C17F20
	113 Move X20, [X31+64]
	114 Move X19, [X31+72]
	115 Move X22, [X31+48]
	116 Move X21, [X31+56]
	117 Move X24, [X31+32]
	118 Move X23, [X31+40]
	119 Move X26, [X31+16]
	120 Move X25, [X31+24]
	121 Move X30, [X31+80]
	122 Move X27, [X31+88]
	123 Return 

Method: System.Void InitializeLigatureSubstitutionLookupDictionary()

Disassembly:
	0x03CA14C0 LDR X0, [X0 + 0x430]
	0x03CA14C4 BL 0x1C16CF4
	0x03CA14C8 ADRP X0, 0x4C0000
	0x03CA14CC LDR X0, [X0 + 0x360]
	0x03CA14D0 BL 0x1C16CF4
	0x03CA14D4 ADRP X0, 0x4C0000
	0x03CA14D8 LDR X0, [X0 + 0x438]
	0x03CA14DC BL 0x1C16CF4
	0x03CA14E0 ADRP X0, 0x4C0000
	0x03CA14E4 LDR X0, [X0 + 0x440]
	0x03CA14E8 BL 0x1C16CF4
	0x03CA14EC ADRP X0, 0x4C0000
	0x03CA14F0 LDR X0, [X0 + 0x448]
	0x03CA14F4 BL 0x1C16CF4
	0x03CA14F8 MOVZ W8, 0x1
	0x03CA14FC STRB W8, [X20 + 0x308]
	0x03CA1500 LDR X20, [X19 + 0x20]
	0x03CA1504 CBZ X20, 0x3CA1660
	0x03CA1508 LDR W8, [X20 + 0x18]
	0x03CA150C CMP W8, 0x1
	0x03CA1510 B.LT 0x3CA164C
	0x03CA1514 ADRP X23, 0x4C0000
	0x03CA1518 LDR X23, [X23 + 0x448]
	0x03CA151C LDR X0, [X23]
	0x03CA1520 LDR W8, [X0 + 0xE0]
	0x03CA1524 CBNZ W8, 0x3CA1530
	0x03CA1528 BL 0x1C16DFC
	0x03CA152C LDR X0, [X23]
	0x03CA1530 LDR X8, [X0 + 0xB8]
	0x03CA1534 ADRP X24, 0x4C0000
	0x03CA1538 LDR X21, [X8 + 0x8]
	0x03CA153C LDR X24, [X24 + 0x418]
	0x03CA1540 CBNZ X21, 0x3CA1594
	0x03CA1544 LDR W8, [X0 + 0xE0]
	0x03CA1548 CBNZ W8, 0x3CA1554
	0x03CA154C BL 0x1C16DFC
	0x03CA1550 LDR X0, [X23]
	0x03CA1554 ADRP X9, 0x4C0000
	0x03CA1558 LDR X8, [X0 + 0xB8]
	0x03CA155C LDR X9, [X9 + 0x430]
	0x03CA1560 LDR X22, [X8]
	0x03CA1564 LDR X0, [X9]
	0x03CA1568 BL 0x1C16F10
	0x03CA156C ADRP X8, 0x4C0000
	0x03CA1570 LDR X8, [X8 + 0x438]
	0x03CA1574 MOV X1, X22
	0x03CA1578 MOV X3, X31
	0x03CA157C MOV X21, X0
	0x03CA1580 LDR X2, [X8]
	0x03CA1584 BL 0x2D2C844
	0x03CA1588 LDR X8, [X23]
	0x03CA158C LDR X8, [X8 + 0xB8]
	0x03CA1590 STR X21, [X8 + 0x8]
	0x03CA1594 LDR X2, [X24]
	0x03CA1598 MOV X0, X20
	0x03CA159C MOV X1, X21
	0x03CA15A0 BL 0x21C9868
	0x03CA15A4 LDR X8, [X23]
	0x03CA15A8 MOV X20, X0
	0x03CA15AC LDR W9, [X8 + 0xE0]
	0x03CA15B0 CBNZ W9, 0x3CA15C0
	0x03CA15B4 MOV X0, X8
	0x03CA15B8 BL 0x1C16DFC
	0x03CA15BC LDR X8, [X23]
	0x03CA15C0 LDR X9, [X8 + 0xB8]
	0x03CA15C4 ADRP X25, 0x4C0000
	0x03CA15C8 ADRP X24, 0x4C0000
	0x03CA15CC LDR X21, [X9 + 0x10]
	0x03CA15D0 LDR X25, [X25 + 0x420]
	0x03CA15D4 LDR X24, [X24 + 0x428]
	0x03CA15D8 CBNZ X21, 0x3CA1630
	0x03CA15DC LDR W9, [X8 + 0xE0]
	0x03CA15E0 CBNZ W9, 0x3CA15F0
	0x03CA15E4 MOV X0, X8
	0x03CA15E8 BL 0x1C16DFC
	0x03CA15EC LDR X8, [X23]
	0x03CA15F0 ADRP X9, 0x4C0000
	0x03CA15F4 LDR X8, [X8 + 0xB8]
	0x03CA15F8 LDR X9, [X9 + 0x430]
	0x03CA15FC LDR X22, [X8]
	0x03CA1600 LDR X0, [X9]
	0x03CA1604 BL 0x1C16F10
	0x03CA1608 ADRP X8, 0x4C0000
	0x03CA160C LDR X8, [X8 + 0x440]
	0x03CA1610 MOV X1, X22
	0x03CA1614 MOV X3, X31
	0x03CA1618 MOV X21, X0
	0x03CA161C LDR X2, [X8]
	0x03CA1620 BL 0x2D2C844
	0x03CA1624 LDR X8, [X23]
	0x03CA1628 LDR X8, [X8 + 0xB8]
	0x03CA162C STR X21, [X8 + 0x10]
	0x03CA1630 LDR X2, [X25]
	0x03CA1634 MOV X0, X20
	0x03CA1638 MOV X1, X21
	0x03CA163C BL 0x21D4C54
	0x03CA1640 LDR X1, [X24]
	0x03CA1644 BL 0x21D7804
	0x03CA1648 STR X0, [X19 + 0x20]
	0x03CA164C LDP X20, X19, [X31 + 0x30]
	0x03CA1650 LDP X22, X21, [X31 + 0x20]
	0x03CA1654 LDP X24, X23, [X31 + 0x10]
	0x03CA1658 LDP X30, X25, [X31], #0x40
	0x03CA165C RET
	0x03CA1660 BL 0x1C16F20
	0x03CA1664 STP X30, X25, [X31 - 0x40]!
	0x03CA1668 STP X24, X23, [X31 + 0x10]
	0x03CA166C STP X22, X21, [X31 + 0x20]
	0x03CA1670 STP X20, X19, [X31 + 0x30]
	0x03CA1674 ADRP X20, 0x746000
	0x03CA1678 LDRB W8, [X20 + 0x309]
	0x03CA167C MOV X19, X0
	0x03CA1680 TBNZ X8, 0x0, 0x3CA16EC
	0x03CA1684 ADRP X0, 0x4C0000
	0x03CA1688 LDR X0, [X0 + 0x450]
	0x03CA168C BL 0x1C16CF4
	0x03CA1690 ADRP X0, 0x4C0000
	0x03CA1694 LDR X0, [X0 + 0x458]
	0x03CA1698 BL 0x1C16CF4
	0x03CA169C ADRP X0, 0x4C0000
	0x03CA16A0 LDR X0, [X0 + 0x460]
	0x03CA16A4 BL 0x1C16CF4
	0x03CA16A8 ADRP X0, 0x4C0000
	0x03CA16AC LDR X0, [X0 + 0x468]
	0x03CA16B0 BL 0x1C16CF4
	0x03CA16B4 ADRP X0, 0x4C0000
	0x03CA16B8 LDR X0, [X0 + 0x398]
	0x03CA16BC BL 0x1C16CF4
	0x03CA16C0 ADRP X0, 0x4C0000
	0x03CA16C4 LDR X0, [X0 + 0x470]
	0x03CA16C8 BL 0x1C16CF4
	0x03CA16CC ADRP X0, 0x4C0000
	0x03CA16D0 LDR X0, [X0 + 0x478]
	0x03CA16D4 BL 0x1C16CF4
	0x03CA16D8 ADRP X0, 0x4C0000
	0x03CA16DC LDR X0, [X0 + 0x448]
	0x03CA16E0 BL 0x1C16CF4
	0x03CA16E4 MOVZ W8, 0x1
	0x03CA16E8 STRB W8, [X20 + 0x309]
	0x03CA16EC LDR X20, [X19 + 0x28]
	0x03CA16F0 CBZ X20, 0x3CA184C
	0x03CA16F4 LDR W8, [X20 + 0x18]
	0x03CA16F8 CMP W8, 0x1
	0x03CA16FC B.LT 0x3CA1838
	0x03CA1700 ADRP X23, 0x4C0000
	0x03CA1704 LDR X23, [X23 + 0x448]
	0x03CA1708 LDR X0, [X23]
	0x03CA170C LDR W8, [X0 + 0xE0]
	0x03CA1710 CBNZ W8, 0x3CA171C
	0x03CA1714 BL 0x1C16DFC
	0x03CA1718 LDR X0, [X23]
	0x03CA171C LDR X8, [X0 + 0xB8]
	0x03CA1720 ADRP X24, 0x4C0000
	0x03CA1724 LDR X21, [X8 + 0x18]
	0x03CA1728 LDR X24, [X24 + 0x450]
	0x03CA172C CBNZ X21, 0x3CA1780
	0x03CA1730 LDR W8, [X0 + 0xE0]
	0x03CA1734 CBNZ W8, 0x3CA1740
	0x03CA1738 BL 0x1C16DFC
	0x03CA173C LDR X0, [X23]
	0x03CA1740 ADRP X9, 0x4C0000
	0x03CA1744 LDR X8, [X0 + 0xB8]
	0x03CA1748 LDR X9, [X9 + 0x468]
	0x03CA174C LDR X22, [X8]
	0x03CA1750 LDR X0, [X9]
	0x03CA1754 BL 0x1C16F10
	0x03CA1758 ADRP X8, 0x4C0000
	0x03CA175C LDR X8, [X8 + 0x470]
	0x03CA1760 MOV X1, X22
	0x03CA1764 MOV X3, X31
	0x03CA1768 MOV X21, X0
	0x03CA176C LDR X2, [X8]
	0x03CA1770 BL 0x2D2DE74
	0x03CA1774 LDR X8, [X23]
	0x03CA1778 LDR X8, [X8 + 0xB8]
	0x03CA177C STR X21, [X8 + 0x18]
	0x03CA1780 LDR X2, [X24]
	0x03CA1784 MOV X0, X20
	0x03CA1788 MOV X1, X21
	0x03CA178C BL 0x21C9940
	0x03CA1790 LDR X8, [X23]
	0x03CA1794 MOV X20, X0
	0x03CA1798 LDR W9, [X8 + 0xE0]
	0x03CA179C CBNZ W9, 0x3CA17AC
	0x03CA17A0 MOV X0, X8
	0x03CA17A4 BL 0x1C16DFC
	0x03CA17A8 LDR X8, [X23]
	0x03CA17AC LDR X9, [X8 + 0xB8]
	0x03CA17B0 ADRP X25, 0x4C0000
	0x03CA17B4 ADRP X24, 0x4C0000
	0x03CA17B8 LDR X21, [X9 + 0x20]
	0x03CA17BC LDR X25, [X25 + 0x458]
	0x03CA17C0 LDR X24, [X24 + 0x460]
	0x03CA17C4 CBNZ X21, 0x3CA181C
	0x03CA17C8 LDR W9, [X8 + 0xE0]
	0x03CA17CC CBNZ W9, 0x3CA17DC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x747000
	015 Move W8, [X20+728]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x4C1000
	022 Move X0, [X0+736]
	023 Call 0x1C17CF4
	024 Move X0, 0x4C1000
	025 Move X0, [X0+744]
	026 Call 0x1C17CF4
	027 Move X0, 0x4C1000
	028 Move X0, [X0+752]
	029 Call 0x1C17CF4
	030 Move X0, 0x4C1000
	031 Move X0, [X0+760]
	032 Call 0x1C17CF4
	033 Move X0, 0x4C1000
	034 Move X0, [X0+768]
	035 Call 0x1C17CF4
	036 Move X0, 0x4C1000
	037 Move X0, [X0+776]
	038 Call 0x1C17CF4
	039 Move X0, 0x4C1000
	040 Move X0, [X0+784]
	041 Call 0x1C17CF4
	042 Move X0, 0x4C1000
	043 Move X0, [X0+792]
	044 Call 0x1C17CF4
	045 Move X0, 0x4C1000
	046 Move X0, [X0+800]
	047 Call 0x1C17CF4
	048 Move X0, 0x4C1000
	049 Move X0, [X0+808]
	050 Call 0x1C17CF4
	051 Move X0, 0x4C1000
	052 Move X0, [X0+816]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+728], W8
	056 Move [X31], X31
	057 Move [X31+8], X31
	058 Move X21, [X19+368]
	059 Compare X21, 0
	060 JumpIfEqual {229}
	061 Move X0, [X21+56]
	062 Compare X0, 0
	063 JumpIfEqual {68}
	064 Move X8, 0x4C1000
	065 Move X8, [X8+744]
	066 Move X1, [X8]
	067 Call Dictionary`2<UInt32, Object>.Clear, X0
	068 Move X8, 0x4C1000
	069 Move X8, [X8+776]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X8, 0x4C1000
	073 Move X8, [X8+760]
	074 Move X20, X0
	075 Move X1, [X8]
	076 Call Dictionary`2<UInt32, Object>..ctor, X0
	077 Move [X21+56], X20
	078 Move X8, [X19+368]
	079 Compare X8, 0
	080 JumpIfEqual {229}
	081 Move X20, [X8+24]
	082 Compare X20, 0
	083 JumpIfEqual {215}
	084 Move W8, [X20+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X25, 0x4C1000
	087 Move X26, 0x4C1000
	088 Move X28, 0x4C1000
	089 Move X27, 0x4C1000
	090 Move X29, 0x4C1000
	091 Move X25, [X25+808]
	092 Move X26, [X26+752]
	093 Move X28, [X28+784]
	094 Move X27, [X27+792]
	095 Move X29, [X29+736]
	096 Move W21, W31
	097 Move X2, [X25]
	098 Move X0, X20
	099 Move W1, W21
	100 Call List`1<LigatureSubstitutionRecord>.get_Item, X0, X1
	101 Move [X31], X0
	102 Move [X31+8], X1
	103 Add X0, X31, 0
	104 Move X1, X31
	105 Call LigatureSubstitutionRecord.get_componentGlyphIDs, X0
	106 Compare X0, 0
	107 JumpIfEqual {212}
	108 Add X0, X31, 0
	109 Move X1, X31
	110 Call LigatureSubstitutionRecord.get_componentGlyphIDs, X0
	111 Compare X0, 0
	112 JumpIfEqual {229}
	113 Move W8, [X0+24]
	114 Compare W8, 0
	115 JumpIfEqual {212}
	116 Add X0, X31, 0
	117 Move X1, X31
	118 Call LigatureSubstitutionRecord.get_componentGlyphIDs, X0
	119 Compare X0, 0
	120 JumpIfEqual {229}
	121 Move W8, [X0+24]
	122 Compare W8, 0
	123 JumpIfEqual {230}
	124 Move X8, [X19+368]
	125 Compare X8, 0
	126 JumpIfEqual {229}
	127 Move X8, [X8+56]
	128 Compare X8, 0
	129 JumpIfEqual {229}
	130 Move W22, [X0+32]
	131 Move X2, [X26]
	132 Move X0, X8
	133 Move W1, W22
	134 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	135 Move X8, [X19+368]
	136 Compare X8, 0
	137 JumpIfEqual {229}
	138 Move X23, [X8+56]
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {170}
	143 Compare X23, 0
	144 JumpIfEqual {229}
	145 Move X8, 0x4C1000
	146 Move X8, [X8+768]
	147 Move X0, X23
	148 Move W1, W22
	149 Move X2, [X8]
	150 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	151 Compare X0, 0
	152 JumpIfEqual {229}
	153 Move W10, [X0+28]
	154 Move X1, [X31]
	155 Move X2, [X31+8]
	156 Move X8, [X0+16]
	157 Move X9, [X28]
	158 Add W10, W10, 1
	159 Move [X0+28], W10
	160 Compare X8, 0
	161 JumpIfEqual {229}
	162 NotImplemented "Instruction LDRSW not yet implemented."
	163 Move W11, [X8+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Add W9, W10, 1
	166 Add X8, X8, X10
	167 Move [X0+24], W9
	168 Move [X8+32], X1
	169 Move [X8+40], X2
	170 Move X8, 0x4C1000
	171 Move X8, [X8+816]
	172 Move X0, [X8]
	173 Call 0x1C17F10
	174 Move X1, [X27]
	175 Move X24, X0
	176 Call List`1<LigatureSubstitutionRecord>..ctor, X0
	177 Compare X24, 0
	178 JumpIfEqual {229}
	179 Move W10, [X24+28]
	180 Move X1, [X31]
	181 Move X2, [X31+8]
	182 Move X8, [X24+16]
	183 Move X9, [X28]
	184 Add W10, W10, 1
	185 Move [X24+28], W10
	186 Compare X8, 0
	187 JumpIfEqual {229}
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Move W11, [X8+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add W9, W10, 1
	192 Add X8, X8, X10
	193 Move [X24+24], W9
	194 Move [X8+32], X1
	195 Move [X8+40], X2
	196 Move X8, [X9+32]
	197 Move X0, X24
	198 Move X8, [X8+192]
	199 Move X3, [X8+112]
	200 Call List`1<LigatureSubstitutionRecord>.AddWithResize, X0, X1
	201 Compare X23, 0
	202 JumpIfEqual {229}
	203 Move X3, [X29]
	204 Move X0, X23
	205 Move W1, W22
	206 Move X2, X24
	207 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	208 Move X8, [X9+32]
	209 Move X8, [X8+192]
	210 Move X3, [X8+112]
	211 Call List`1<LigatureSubstitutionRecord>.AddWithResize, X0, X1
	212 Move W8, [X20+24]
	213 Add W21, W21, 1
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X20, [X31+96]
	216 Move X19, [X31+104]
	217 Move X22, [X31+80]
	218 Move X21, [X31+88]
	219 Move X24, [X31+64]
	220 Move X23, [X31+72]
	221 Move X26, [X31+48]
	222 Move X25, [X31+56]
	223 Move X28, [X31+32]
	224 Move X27, [X31+40]
	225 Move X29, [X31+16]
	226 Move X30, [X31+24]
	227 Add X31, X31, 112
	228 Return 
	229 Call 0x1C17F20
	230 Call 0x1C17F28

Method: System.Void InitializeGlyphPaidAdjustmentRecordsLookupDictionary()

Disassembly:
	0x03CA17D0 MOV X0, X8
	0x03CA17D4 BL 0x1C16DFC
	0x03CA17D8 LDR X8, [X23]
	0x03CA17DC ADRP X9, 0x4C0000
	0x03CA17E0 LDR X8, [X8 + 0xB8]
	0x03CA17E4 LDR X9, [X9 + 0x468]
	0x03CA17E8 LDR X22, [X8]
	0x03CA17EC LDR X0, [X9]
	0x03CA17F0 BL 0x1C16F10
	0x03CA17F4 ADRP X8, 0x4C0000
	0x03CA17F8 LDR X8, [X8 + 0x478]
	0x03CA17FC MOV X1, X22
	0x03CA1800 MOV X3, X31
	0x03CA1804 MOV X21, X0
	0x03CA1808 LDR X2, [X8]
	0x03CA180C BL 0x2D2DE74
	0x03CA1810 LDR X8, [X23]
	0x03CA1814 LDR X8, [X8 + 0xB8]
	0x03CA1818 STR X21, [X8 + 0x20]
	0x03CA181C LDR X2, [X25]
	0x03CA1820 MOV X0, X20
	0x03CA1824 MOV X1, X21
	0x03CA1828 BL 0x21D4D20
	0x03CA182C LDR X1, [X24]
	0x03CA1830 BL 0x21D78FC
	0x03CA1834 STR X0, [X19 + 0x28]
	0x03CA1838 LDP X20, X19, [X31 + 0x30]
	0x03CA183C LDP X22, X21, [X31 + 0x20]
	0x03CA1840 LDP X24, X23, [X31 + 0x10]
	0x03CA1844 LDP X30, X25, [X31], #0x40
	0x03CA1848 RET
	0x03CA184C BL 0x1C16F20
	0x03CA1850 STP X30, X25, [X31 - 0x40]!
	0x03CA1854 STP X24, X23, [X31 + 0x10]
	0x03CA1858 STP X22, X21, [X31 + 0x20]
	0x03CA185C STP X20, X19, [X31 + 0x30]
	0x03CA1860 ADRP X20, 0x746000
	0x03CA1864 LDRB W8, [X20 + 0x30A]
	0x03CA1868 MOV X19, X0
	0x03CA186C TBNZ X8, 0x0, 0x3CA18D8
	0x03CA1870 ADRP X0, 0x4C0000
	0x03CA1874 LDR X0, [X0 + 0x480]
	0x03CA1878 BL 0x1C16CF4
	0x03CA187C ADRP X0, 0x4C0000
	0x03CA1880 LDR X0, [X0 + 0x488]
	0x03CA1884 BL 0x1C16CF4
	0x03CA1888 ADRP X0, 0x4C0000
	0x03CA188C LDR X0, [X0 + 0x490]
	0x03CA1890 BL 0x1C16CF4
	0x03CA1894 ADRP X0, 0x4C0000
	0x03CA1898 LDR X0, [X0 + 0x498]
	0x03CA189C BL 0x1C16CF4
	0x03CA18A0 ADRP X0, 0x4C0000
	0x03CA18A4 LDR X0, [X0 + 0x3D0]
	0x03CA18A8 BL 0x1C16CF4
	0x03CA18AC ADRP X0, 0x4C0000
	0x03CA18B0 LDR X0, [X0 + 0x4A0]
	0x03CA18B4 BL 0x1C16CF4
	0x03CA18B8 ADRP X0, 0x4C0000
	0x03CA18BC LDR X0, [X0 + 0x4A8]
	0x03CA18C0 BL 0x1C16CF4
	0x03CA18C4 ADRP X0, 0x4C0000
	0x03CA18C8 LDR X0, [X0 + 0x448]
	0x03CA18CC BL 0x1C16CF4
	0x03CA18D0 MOVZ W8, 0x1
	0x03CA18D4 STRB W8, [X20 + 0x30A]
	0x03CA18D8 LDR X20, [X19 + 0x30]
	0x03CA18DC CBZ X20, 0x3CA1A38
	0x03CA18E0 LDR W8, [X20 + 0x18]
	0x03CA18E4 CMP W8, 0x1
	0x03CA18E8 B.LT 0x3CA1A24
	0x03CA18EC ADRP X23, 0x4C0000
	0x03CA18F0 LDR X23, [X23 + 0x448]
	0x03CA18F4 LDR X0, [X23]
	0x03CA18F8 LDR W8, [X0 + 0xE0]
	0x03CA18FC CBNZ W8, 0x3CA1908
	0x03CA1900 BL 0x1C16DFC
	0x03CA1904 LDR X0, [X23]
	0x03CA1908 LDR X8, [X0 + 0xB8]
	0x03CA190C ADRP X24, 0x4C0000
	0x03CA1910 LDR X21, [X8 + 0x28]
	0x03CA1914 LDR X24, [X24 + 0x480]
	0x03CA1918 CBNZ X21, 0x3CA196C
	0x03CA191C LDR W8, [X0 + 0xE0]
	0x03CA1920 CBNZ W8, 0x3CA192C
	0x03CA1924 BL 0x1C16DFC
	0x03CA1928 LDR X0, [X23]
	0x03CA192C ADRP X9, 0x4C0000
	0x03CA1930 LDR X8, [X0 + 0xB8]
	0x03CA1934 LDR X9, [X9 + 0x498]
	0x03CA1938 LDR X22, [X8]
	0x03CA193C LDR X0, [X9]
	0x03CA1940 BL 0x1C16F10
	0x03CA1944 ADRP X8, 0x4C0000
	0x03CA1948 LDR X8, [X8 + 0x4A0]
	0x03CA194C MOV X1, X22
	0x03CA1950 MOV X3, X31
	0x03CA1954 MOV X21, X0
	0x03CA1958 LDR X2, [X8]
	0x03CA195C BL 0x2D2DF3C
	0x03CA1960 LDR X8, [X23]
	0x03CA1964 LDR X8, [X8 + 0xB8]
	0x03CA1968 STR X21, [X8 + 0x28]
	0x03CA196C LDR X2, [X24]
	0x03CA1970 MOV X0, X20
	0x03CA1974 MOV X1, X21
	0x03CA1978 BL 0x21C99AC
	0x03CA197C LDR X8, [X23]
	0x03CA1980 MOV X20, X0
	0x03CA1984 LDR W9, [X8 + 0xE0]
	0x03CA1988 CBNZ W9, 0x3CA1998
	0x03CA198C MOV X0, X8
	0x03CA1990 BL 0x1C16DFC
	0x03CA1994 LDR X8, [X23]
	0x03CA1998 LDR X9, [X8 + 0xB8]
	0x03CA199C ADRP X25, 0x4C0000
	0x03CA19A0 ADRP X24, 0x4C0000
	0x03CA19A4 LDR X21, [X9 + 0x30]
	0x03CA19A8 LDR X25, [X25 + 0x488]
	0x03CA19AC LDR X24, [X24 + 0x490]
	0x03CA19B0 CBNZ X21, 0x3CA1A08
	0x03CA19B4 LDR W9, [X8 + 0xE0]
	0x03CA19B8 CBNZ W9, 0x3CA19C8
	0x03CA19BC MOV X0, X8
	0x03CA19C0 BL 0x1C16DFC
	0x03CA19C4 LDR X8, [X23]
	0x03CA19C8 ADRP X9, 0x4C0000
	0x03CA19CC LDR X8, [X8 + 0xB8]
	0x03CA19D0 LDR X9, [X9 + 0x498]
	0x03CA19D4 LDR X22, [X8]
	0x03CA19D8 LDR X0, [X9]
	0x03CA19DC BL 0x1C16F10
	0x03CA19E0 ADRP X8, 0x4C0000
	0x03CA19E4 LDR X8, [X8 + 0x4A8]
	0x03CA19E8 MOV X1, X22
	0x03CA19EC MOV X3, X31
	0x03CA19F0 MOV X21, X0
	0x03CA19F4 LDR X2, [X8]
	0x03CA19F8 BL 0x2D2DF3C
	0x03CA19FC LDR X8, [X23]
	0x03CA1A00 LDR X8, [X8 + 0xB8]
	0x03CA1A04 STR X21, [X8 + 0x30]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+176], X30
	003 Move [X31+192], X26
	004 Move [X31+200], X25
	005 Move [X31+208], X24
	006 Move [X31+216], X23
	007 Move [X31+224], X22
	008 Move [X31+232], X21
	009 Move [X31+240], X20
	010 Move [X31+248], X19
	011 Move X20, 0x747000
	012 Move W8, [X20+729]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x4C1000
	019 Move X0, [X0+824]
	020 Call 0x1C17CF4
	021 Move X0, 0x4C1000
	022 Move X0, [X0+832]
	023 Call 0x1C17CF4
	024 Move X0, 0x4C1000
	025 Move X0, [X0+840]
	026 Call 0x1C17CF4
	027 Move X0, 0x4C1000
	028 Move X0, [X0+848]
	029 Call 0x1C17CF4
	030 Move X0, 0x4C1000
	031 Move X0, [X0+856]
	032 Call 0x1C17CF4
	033 Move X0, 0x4C1000
	034 Move X0, [X0+864]
	035 Call 0x1C17CF4
	036 Move X0, 0x4C1000
	037 Move X0, [X0+872]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+729], W8
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+48], X31
	043 Move [X31+56], X31
	044 Move [X31+108], V0
	045 Move [X31+80], V0
	046 Move [X31+88], V0
	047 Move [X31+64], W31
	048 Move X21, [X19+368]
	049 Compare X21, 0
	050 JumpIfEqual {169}
	051 Move X0, [X21+64]
	052 Compare X0, 0
	053 JumpIfEqual {58}
	054 Move X8, 0x4C1000
	055 Move X8, [X8+832]
	056 Move X1, [X8]
	057 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.Clear, X0
	058 Move X8, 0x4C1000
	059 Move X8, [X8+856]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X8, 0x4C1000
	063 Move X8, [X8+848]
	064 Move X20, X0
	065 Move X1, [X8]
	066 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>..ctor, X0
	067 Move [X21+64], X20
	068 Move X8, [X19+368]
	069 Compare X8, 0
	070 JumpIfEqual {169}
	071 Move X20, [X8+32]
	072 Compare X20, 0
	073 JumpIfEqual {158}
	074 Move W8, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X24, 0x4C1000
	077 Move X25, 0x4C1000
	078 Move X26, 0x4C1000
	079 Move X24, [X24+872]
	080 Move X25, [X25+840]
	081 Move X26, [X26+824]
	082 Move W21, W31
	083 Add X23, X31, 128
	084 Move X2, [X24]
	085 Add X8, X31, 128
	086 Move X0, X20
	087 Move W1, W21
	088 Call List`1<GlyphPairAdjustmentRecord>.get_Item, X0, X1
	089 Move V0, [X31+128]
	090 Move V1, [X31+144]
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Add X8, X31, 128
	093 Add X0, X31, 80
	094 Move X1, X31
	095 Move [X31+80], V0
	096 Move [X31+88], V1
	097 Move [X31+108], V2
	098 Call GlyphPairAdjustmentRecord.get_secondAdjustmentRecord, X0
	099 Move V0, [X31+8]
	100 Move W8, [X31+144]
	101 Add X0, X31, 48
	102 Move X1, X31
	103 Move [X31+3], V0
	104 Move [X31+64], W8
	105 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	106 Move W22, W0
	107 Add X8, X31, 128
	108 Add X0, X31, 80
	109 Move X1, X31
	110 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	111 Move V0, [X31+8]
	112 Move W8, [X31+144]
	113 Add X0, X31, 48
	114 Move X1, X31
	115 Move [X31+3], V0
	116 Move [X31+64], W8
	117 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	118 Move X8, [X19+368]
	119 Compare X8, 0
	120 JumpIfEqual {169}
	121 Move X8, [X8+64]
	122 Compare X8, 0
	123 JumpIfEqual {169}
	124 Move X2, [X25]
	125 Or W22, W0, W22
	126 Move X0, X8
	127 Move W1, W22
	128 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.ContainsKey, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {155}
	133 Move X8, [X19+368]
	134 Compare X8, 0
	135 JumpIfEqual {169}
	136 Move X0, [X8+64]
	137 Move V0, [X31+80]
	138 Move V1, [X31+96]
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 Move [X31], V0
	141 Move [X31+8], V1
	142 Move [X31+28], V2
	143 Compare X0, 0
	144 JumpIfEqual {169}
	145 Move V0, [X31]
	146 Move V1, [X31+16]
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 Move X3, [X26]
	149 Add X2, X31, 128
	150 Move W1, W22
	151 Move [X31+128], V0
	152 Move [X31+136], V1
	153 Move [X23+28], V2
	154 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.Add, X0, X1, X2
	155 Move W8, [X20+24]
	156 Add W21, W21, 1
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X20, [X31+240]
	159 Move X19, [X31+248]
	160 Move X22, [X31+224]
	161 Move X21, [X31+232]
	162 Move X24, [X31+208]
	163 Move X23, [X31+216]
	164 Move X26, [X31+192]
	165 Move X25, [X31+200]
	166 Move X30, [X31+176]
	167 Add X31, X31, 256
	168 Return 
	169 Call 0x1C17F20

Method: System.Void InitializeMarkToBaseAdjustmentRecordsLookupDictionary()

Disassembly:
	0x03CA1A08 LDR X2, [X25]
	0x03CA1A0C MOV X0, X20
	0x03CA1A10 MOV X1, X21
	0x03CA1A14 BL 0x21D4DEC
	0x03CA1A18 LDR X1, [X24]
	0x03CA1A1C BL 0x21D7978
	0x03CA1A20 STR X0, [X19 + 0x30]
	0x03CA1A24 LDP X20, X19, [X31 + 0x30]
	0x03CA1A28 LDP X22, X21, [X31 + 0x20]
	0x03CA1A2C LDP X24, X23, [X31 + 0x10]
	0x03CA1A30 LDP X30, X25, [X31], #0x40
	0x03CA1A34 RET
	0x03CA1A38 BL 0x1C16F20
	0x03CA1A3C STP X30, X19, [X31 - 0x10]!
	0x03CA1A40 MOV X19, X0
	0x03CA1A44 BL 0x3CA1310
	0x03CA1A48 MOV X0, X19
	0x03CA1A4C BL 0x3CA11DC
	0x03CA1A50 MOV X0, X19
	0x03CA1A54 LDP X30, X19, [X31], #0x10
	0x03CA1A58 B 0x3CA1444
	0x03CA1A5C STP X30, X21, [X31 - 0x20]!
	0x03CA1A60 STP X20, X19, [X31 + 0x10]
	0x03CA1A64 ADRP X21, 0x746000
	0x03CA1A68 LDRB W8, [X21 + 0x2E2]
	0x03CA1A6C MOV W19, W1
	0x03CA1A70 MOV X20, X0
	0x03CA1A74 TBNZ X8, 0x0, 0x3CA1A8C
	0x03CA1A78 ADRP X0, 0x4C0000
	0x03CA1A7C LDR X0, [X0 + 0x248]
	0x03CA1A80 BL 0x1C16CF4
	0x03CA1A84 MOVZ W8, 0x1
	0x03CA1A88 STRB W8, [X21 + 0x2E2]
	0x03CA1A8C LDR X0, [X20 + 0x130]
	0x03CA1A90 CBZ X0, 0x3CA1AB0
	0x03CA1A94 ADRP X8, 0x4C0000
	0x03CA1A98 LDR X8, [X8 + 0x248]
	0x03CA1A9C MOV W1, W19
	0x03CA1AA0 LDP X20, X19, [X31 + 0x10]
	0x03CA1AA4 LDR X2, [X8]
	0x03CA1AA8 LDP X30, X21, [X31], #0x20
	0x03CA1AAC B 0x2B0F250
	0x03CA1AB0 LDP X20, X19, [X31 + 0x10]
	0x03CA1AB4 LDP X30, X21, [X31], #0x20
	0x03CA1AB8 RET
	0x03CA1ABC AND W1, W1, 0xFFFF
	0x03CA1AC0 AND W2, W2, 0x1
	0x03CA1AC4 AND W3, W3, 0x1
	0x03CA1AC8 B 0x3CA1ACC
	0x03CA1ACC STR X30, [X31 - 0x60]!
	0x03CA1AD0 STP X28, X27, [X31 + 0x10]
	0x03CA1AD4 STP X26, X25, [X31 + 0x20]
	0x03CA1AD8 STP X24, X23, [X31 + 0x30]
	0x03CA1ADC STP X22, X21, [X31 + 0x40]
	0x03CA1AE0 STP X20, X19, [X31 + 0x50]
	0x03CA1AE4 ADRP X23, 0x746000
	0x03CA1AE8 LDRB W8, [X23 + 0x2E3]
	0x03CA1AEC MOV W19, W3
	0x03CA1AF0 MOV W22, W2
	0x03CA1AF4 MOV W20, W1
	0x03CA1AF8 MOV X21, X0
	0x03CA1AFC TBNZ X8, 0x0, 0x3CA1B74
	0x03CA1B00 ADRP X0, 0x4C0000
	0x03CA1B04 LDR X0, [X0 + 0x248]
	0x03CA1B08 BL 0x1C16CF4
	0x03CA1B0C ADRP X0, 0x4C0000
	0x03CA1B10 LDR X0, [X0 + 0x258]
	0x03CA1B14 BL 0x1C16CF4
	0x03CA1B18 ADRP X0, 0x454000
	0x03CA1B1C LDR X0, [X0 + 0x9D8]
	0x03CA1B20 BL 0x1C16CF4
	0x03CA1B24 ADRP X0, 0x459000
	0x03CA1B28 LDR X0, [X0 + 0x678]
	0x03CA1B2C BL 0x1C16CF4
	0x03CA1B30 ADRP X0, 0x459000
	0x03CA1B34 LDR X0, [X0 + 0x688]
	0x03CA1B38 BL 0x1C16CF4
	0x03CA1B3C ADRP X0, 0x453000
	0x03CA1B40 LDR X0, [X0 + 0xE08]
	0x03CA1B44 BL 0x1C16CF4
	0x03CA1B48 ADRP X0, 0x4C0000
	0x03CA1B4C LDR X0, [X0 + 0x4B0]
	0x03CA1B50 BL 0x1C16CF4
	0x03CA1B54 ADRP X0, 0x4C0000
	0x03CA1B58 LDR X0, [X0 + 0x4B8]
	0x03CA1B5C BL 0x1C16CF4
	0x03CA1B60 ADRP X0, 0x452000
	0x03CA1B64 LDR X0, [X0 + 0x598]
	0x03CA1B68 BL 0x1C16CF4
	0x03CA1B6C MOVZ W8, 0x1
	0x03CA1B70 STRB W8, [X23 + 0x2E3]
	0x03CA1B74 STR X31, [X31 + 0x8]
	0x03CA1B78 LDR X0, [X21 + 0x130]
	0x03CA1B7C CBNZ X0, 0x3CA1B90
	0x03CA1B80 MOV X0, X21
	0x03CA1B84 BL 0x3C9EBEC
	0x03CA1B88 LDR X0, [X21 + 0x130]
	0x03CA1B8C CBZ X0, 0x3CA1DB8
	0x03CA1B90 ADRP X8, 0x4C0000
	0x03CA1B94 LDR X8, [X8 + 0x248]
	0x03CA1B98 MOV W1, W20
	0x03CA1B9C LDR X2, [X8]
	0x03CA1BA0 BL 0x2B0F250
	0x03CA1BA4 TBZ X0, 0x0, 0x3CA1BB0
	0x03CA1BA8 MOVZ W24, 0x1
	0x03CA1BAC B 0x3CA1DBC
	0x03CA1BB0 TBZ X19, 0x0, 0x3CA1BE8
	0x03CA1BB4 LDR W8, [X21 + 0xA8]
	0x03CA1BB8 SUB W8, W8, 0x1
	0x03CA1BBC CMP W8, 0x1
	0x03CA1BC0 B.HI 0x3CA1BE8
	0x03CA1BC4 ADD X2, X31, 0x8
	0x03CA1BC8 MOV X0, X21
	0x03CA1BCC MOV W1, W20
	0x03CA1BD0 MOV W3, W31
	0x03CA1BD4 BL 0x3CA1DE0
	0x03CA1BD8 MOV W24, W0
	0x03CA1BDC TBNZ X0, 0x0, 0x3CA1DBC
	0x03CA1BE0 TBNZ X22, 0x0, 0x3CA1BEC
	0x03CA1BE4 B 0x3CA1DBC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X20, 0x747000
	011 Move W8, [X20+730]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x4C1000
	018 Move X0, [X0+880]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C1000
	021 Move X0, [X0+888]
	022 Call 0x1C17CF4
	023 Move X0, 0x4C1000
	024 Move X0, [X0+896]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C1000
	027 Move X0, [X0+904]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C1000
	030 Move X0, [X0+912]
	031 Call 0x1C17CF4
	032 Move X0, 0x4C1000
	033 Move X0, [X0+920]
	034 Call 0x1C17CF4
	035 Move X0, 0x4C1000
	036 Move X0, [X0+928]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+730], W8
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Move [X31+48], X31
	043 Move X21, [X19+368]
	044 Compare X21, 0
	045 JumpIfEqual {140}
	046 Move X0, [X21+72]
	047 Compare X0, 0
	048 JumpIfEqual {53}
	049 Move X8, 0x4C1000
	050 Move X8, [X8+888]
	051 Move X1, [X8]
	052 Call Dictionary`2<UInt32, MarkToBaseAdjustmentRecord>.Clear, X0
	053 Move X8, 0x4C1000
	054 Move X8, [X8+912]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X8, 0x4C1000
	058 Move X8, [X8+904]
	059 Move X20, X0
	060 Move X1, [X8]
	061 Call Dictionary`2<UInt32, MarkToBaseAdjustmentRecord>..ctor, X0
	062 Move [X21+72], X20
	063 Move X8, [X19+368]
	064 Compare X8, 0
	065 JumpIfEqual {140}
	066 Move X20, [X8+40]
	067 Compare X20, 0
	068 JumpIfEqual {130}
	069 Move W8, [X20+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X23, 0x4C1000
	072 Move X24, 0x4C1000
	073 Move X25, 0x4C1000
	074 Move X23, [X23+928]
	075 Move X24, [X24+896]
	076 Move X25, [X25+880]
	077 Move W21, W31
	078 Move X2, [X23]
	079 Add X8, X31, 64
	080 Move X0, X20
	081 Move W1, W21
	082 Call List`1<MarkToBaseAdjustmentRecord>.get_Item, X0, X1
	083 Move V0, [X31+4]
	084 Move X8, [X31+80]
	085 Add X0, X31, 32
	086 Move X1, X31
	087 Move [X31+2], V0
	088 Move [X31+48], X8
	089 Call MarkToBaseAdjustmentRecord.get_markGlyphID, X0
	090 Move W22, W0
	091 Add X0, X31, 32
	092 Move X1, X31
	093 Call MarkToBaseAdjustmentRecord.get_baseGlyphID, X0
	094 Move X8, [X19+368]
	095 Compare X8, 0
	096 JumpIfEqual {140}
	097 Move X8, [X8+72]
	098 Compare X8, 0
	099 JumpIfEqual {140}
	100 Move X2, [X24]
	101 Or W22, W0, W22
	102 Move X0, X8
	103 Move W1, W22
	104 Call Dictionary`2<UInt32, MarkToBaseAdjustmentRecord>.ContainsKey, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {127}
	109 Move X8, [X19+368]
	110 Compare X8, 0
	111 JumpIfEqual {140}
	112 Move X0, [X8+72]
	113 Move V0, [X31+2]
	114 Move X8, [X31+48]
	115 Move [X31], V0
	116 Move [X31+16], X8
	117 Compare X0, 0
	118 JumpIfEqual {140}
	119 Move V0, [X31]
	120 Move X8, [X31+16]
	121 Move X3, [X25]
	122 Add X2, X31, 64
	123 Move W1, W22
	124 Move [X31+4], V0
	125 Move [X31+80], X8
	126 Call Dictionary`2<UInt32, MarkToBaseAdjustmentRecord>.Add, X0, X1, X2
	127 Move W8, [X20+24]
	128 Add W21, W21, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X20, [X31+144]
	131 Move X19, [X31+152]
	132 Move X22, [X31+128]
	133 Move X21, [X31+136]
	134 Move X24, [X31+112]
	135 Move X23, [X31+120]
	136 Move X30, [X31+96]
	137 Move X25, [X31+104]
	138 Add X31, X31, 160
	139 Return 
	140 Call 0x1C17F20

Method: System.Void InitializeMarkToMarkAdjustmentRecordsLookupDictionary()

Disassembly:
	0x03CA1BE8 TBZ X22, 0x0, 0x3CA1DB8
	0x03CA1BEC ADRP X25, 0x4C0000
	0x03CA1BF0 LDR X25, [X25 + 0x258]
	0x03CA1BF4 LDR X0, [X25]
	0x03CA1BF8 LDR W8, [X0 + 0xE0]
	0x03CA1BFC CBNZ W8, 0x3CA1C08
	0x03CA1C00 BL 0x1C16DFC
	0x03CA1C04 LDR X0, [X25]
	0x03CA1C08 LDR X8, [X0 + 0xB8]
	0x03CA1C0C LDR X9, [X8 + 0x50]
	0x03CA1C10 CBZ X9, 0x3CA1C48
	0x03CA1C14 LDR W9, [X0 + 0xE0]
	0x03CA1C18 CBNZ W9, 0x3CA1C28
	0x03CA1C1C BL 0x1C16DFC
	0x03CA1C20 LDR X8, [X25]
	0x03CA1C24 LDR X8, [X8 + 0xB8]
	0x03CA1C28 LDR X0, [X8 + 0x50]
	0x03CA1C2C CBZ X0, 0x3CA1DDC
	0x03CA1C30 ADRP X8, 0x459000
	0x03CA1C34 LDR X8, [X8 + 0x678]
	0x03CA1C38 LDR X1, [X8]
	0x03CA1C3C BL 0x2DAA53C
	0x03CA1C40 LDR X0, [X25]
	0x03CA1C44 B 0x3CA1C88
	0x03CA1C48 ADRP X8, 0x453000
	0x03CA1C4C LDR X8, [X8 + 0xE08]
	0x03CA1C50 LDR X0, [X8]
	0x03CA1C54 BL 0x1C16F10
	0x03CA1C58 ADRP X8, 0x459000
	0x03CA1C5C LDR X8, [X8 + 0x688]
	0x03CA1C60 MOV X22, X0
	0x03CA1C64 LDR X1, [X8]
	0x03CA1C68 BL 0x2DA9EF4
	0x03CA1C6C LDR X0, [X25]
	0x03CA1C70 LDR W8, [X0 + 0xE0]
	0x03CA1C74 CBNZ W8, 0x3CA1C80
	0x03CA1C78 BL 0x1C16DFC
	0x03CA1C7C LDR X0, [X25]
	0x03CA1C80 LDR X8, [X0 + 0xB8]
	0x03CA1C84 STR X22, [X8 + 0x50]
	0x03CA1C88 LDR W8, [X0 + 0xE0]
	0x03CA1C8C CBNZ W8, 0x3CA1C98
	0x03CA1C90 BL 0x1C16DFC
	0x03CA1C94 LDR X0, [X25]
	0x03CA1C98 LDR X8, [X0 + 0xB8]
	0x03CA1C9C MOV X0, X21
	0x03CA1CA0 MOV X1, X31
	0x03CA1CA4 LDR X22, [X8 + 0x50]
	0x03CA1CA8 BL 0x3C385F8
	0x03CA1CAC CBZ X22, 0x3CA1DDC
	0x03CA1CB0 ADRP X26, 0x454000
	0x03CA1CB4 LDR X26, [X26 + 0x9D8]
	0x03CA1CB8 MOV W1, W0
	0x03CA1CBC MOV X0, X22
	0x03CA1CC0 LDR X2, [X26]
	0x03CA1CC4 BL 0x2DAB03C
	0x03CA1CC8 LDR X0, [X21 + 0x178]
	0x03CA1CCC CBZ X0, 0x3CA1DB8
	0x03CA1CD0 LDR W8, [X0 + 0x18]
	0x03CA1CD4 CMP W8, 0x1
	0x03CA1CD8 B.LT 0x3CA1DB8
	0x03CA1CDC ADRP X27, 0x4C0000
	0x03CA1CE0 ADRP X28, 0x452000
	0x03CA1CE4 LDR X27, [X27 + 0x4B8]
	0x03CA1CE8 LDR X28, [X28 + 0x598]
	0x03CA1CEC MOV W22, W31
	0x03CA1CF0 LDR X2, [X27]
	0x03CA1CF4 MOV W1, W22
	0x03CA1CF8 BL 0x301BCCC
	0x03CA1CFC LDR X8, [X28]
	0x03CA1D00 MOV X23, X0
	0x03CA1D04 LDR W9, [X8 + 0xE0]
	0x03CA1D08 CBNZ W9, 0x3CA1D14
	0x03CA1D0C MOV X0, X8
	0x03CA1D10 BL 0x1C16DFC
	0x03CA1D14 MOV X0, X23
	0x03CA1D18 MOV X1, X31
	0x03CA1D1C MOV X2, X31
	0x03CA1D20 BL 0x3C354F8
	0x03CA1D24 TBZ X0, 0x0, 0x3CA1DB8
	0x03CA1D28 LDR X0, [X21 + 0x178]
	0x03CA1D2C CBZ X0, 0x3CA1DDC
	0x03CA1D30 LDR X2, [X27]
	0x03CA1D34 MOV W1, W22
	0x03CA1D38 BL 0x301BCCC
	0x03CA1D3C CBZ X0, 0x3CA1DDC
	0x03CA1D40 MOV X1, X31
	0x03CA1D44 MOV X23, X0
	0x03CA1D48 BL 0x3C385F8
	0x03CA1D4C LDR X8, [X25]
	0x03CA1D50 MOV W24, W0
	0x03CA1D54 LDR W9, [X8 + 0xE0]
	0x03CA1D58 CBNZ W9, 0x3CA1D68
	0x03CA1D5C MOV X0, X8
	0x03CA1D60 BL 0x1C16DFC
	0x03CA1D64 LDR X8, [X25]
	0x03CA1D68 LDR X8, [X8 + 0xB8]
	0x03CA1D6C LDR X0, [X8 + 0x50]
	0x03CA1D70 CBZ X0, 0x3CA1DDC
	0x03CA1D74 LDR X2, [X26]
	0x03CA1D78 MOV W1, W24
	0x03CA1D7C BL 0x2DAB03C
	0x03CA1D80 TBZ X0, 0x0, 0x3CA1DA0
	0x03CA1D84 AND W3, W19, 0x1
	0x03CA1D88 MOVZ W2, 0x1
	0x03CA1D8C MOV X0, X23
	0x03CA1D90 MOV W1, W20
	0x03CA1D94 MOVZ W24, 0x1
	0x03CA1D98 BL 0x3CA267C
	0x03CA1D9C TBNZ X0, 0x0, 0x3CA1DBC
	0x03CA1DA0 LDR X0, [X21 + 0x178]
	0x03CA1DA4 CBZ X0, 0x3CA1DDC
	0x03CA1DA8 LDR W8, [X0 + 0x18]
	0x03CA1DAC ADD W22, W22, 0x1
	0x03CA1DB0 CMP W22, W8
	0x03CA1DB4 B.LT 0x3CA1CF0
	0x03CA1DB8 MOV W24, W31
	0x03CA1DBC AND W0, W24, 0x1
	0x03CA1DC0 LDP X20, X19, [X31 + 0x50]
	0x03CA1DC4 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X20, 0x747000
	011 Move W8, [X20+731]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x4C1000
	018 Move X0, [X0+936]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C1000
	021 Move X0, [X0+944]
	022 Call 0x1C17CF4
	023 Move X0, 0x4C1000
	024 Move X0, [X0+952]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C1000
	027 Move X0, [X0+960]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C1000
	030 Move X0, [X0+968]
	031 Call 0x1C17CF4
	032 Move X0, 0x4C1000
	033 Move X0, [X0+976]
	034 Call 0x1C17CF4
	035 Move X0, 0x4C1000
	036 Move X0, [X0+984]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+731], W8
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Move [X31+48], X31
	043 Move X21, [X19+368]
	044 Compare X21, 0
	045 JumpIfEqual {140}
	046 Move X0, [X21+80]
	047 Compare X0, 0
	048 JumpIfEqual {53}
	049 Move X8, 0x4C1000
	050 Move X8, [X8+944]
	051 Move X1, [X8]
	052 Call Dictionary`2<UInt32, MarkToMarkAdjustmentRecord>.Clear, X0
	053 Move X8, 0x4C1000
	054 Move X8, [X8+968]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X8, 0x4C1000
	058 Move X8, [X8+960]
	059 Move X20, X0
	060 Move X1, [X8]
	061 Call Dictionary`2<UInt32, MarkToMarkAdjustmentRecord>..ctor, X0
	062 Move [X21+80], X20
	063 Move X8, [X19+368]
	064 Compare X8, 0
	065 JumpIfEqual {140}
	066 Move X20, [X8+48]
	067 Compare X20, 0
	068 JumpIfEqual {130}
	069 Move W8, [X20+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X23, 0x4C1000
	072 Move X24, 0x4C1000
	073 Move X25, 0x4C1000
	074 Move X23, [X23+984]
	075 Move X24, [X24+952]
	076 Move X25, [X25+936]
	077 Move W21, W31
	078 Move X2, [X23]
	079 Add X8, X31, 64
	080 Move X0, X20
	081 Move W1, W21
	082 Call List`1<MarkToMarkAdjustmentRecord>.get_Item, X0, X1
	083 Move V0, [X31+4]
	084 Move X8, [X31+80]
	085 Add X0, X31, 32
	086 Move X1, X31
	087 Move [X31+2], V0
	088 Move [X31+48], X8
	089 Call MarkToMarkAdjustmentRecord.get_combiningMarkGlyphID, X0
	090 Move W22, W0
	091 Add X0, X31, 32
	092 Move X1, X31
	093 Call MarkToMarkAdjustmentRecord.get_baseMarkGlyphID, X0
	094 Move X8, [X19+368]
	095 Compare X8, 0
	096 JumpIfEqual {140}
	097 Move X8, [X8+80]
	098 Compare X8, 0
	099 JumpIfEqual {140}
	100 Move X2, [X24]
	101 Or W22, W0, W22
	102 Move X0, X8
	103 Move W1, W22
	104 Call Dictionary`2<UInt32, MarkToMarkAdjustmentRecord>.ContainsKey, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {127}
	109 Move X8, [X19+368]
	110 Compare X8, 0
	111 JumpIfEqual {140}
	112 Move X0, [X8+80]
	113 Move V0, [X31+2]
	114 Move X8, [X31+48]
	115 Move [X31], V0
	116 Move [X31+16], X8
	117 Compare X0, 0
	118 JumpIfEqual {140}
	119 Move V0, [X31]
	120 Move X8, [X31+16]
	121 Move X3, [X25]
	122 Add X2, X31, 64
	123 Move W1, W22
	124 Move [X31+4], V0
	125 Move [X31+80], X8
	126 Call Dictionary`2<UInt32, MarkToMarkAdjustmentRecord>.Add, X0, X1, X2
	127 Move W8, [X20+24]
	128 Add W21, W21, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X20, [X31+144]
	131 Move X19, [X31+152]
	132 Move X22, [X31+128]
	133 Move X21, [X31+136]
	134 Move X24, [X31+112]
	135 Move X23, [X31+120]
	136 Move X30, [X31+96]
	137 Move X25, [X31+104]
	138 Add X31, X31, 160
	139 Return 
	140 Call 0x1C17F20

Method: System.Void AddSynthesizedCharactersAndFaceMetrics()

Disassembly:
	0x03CA0EC8 MOV W21, W0
	0x03CA0ECC LDR W9, [X8 + 0xE0]
	0x03CA0ED0 CBNZ W9, 0x3CA0EDC
	0x03CA0ED4 MOV X0, X8
	0x03CA0ED8 BL 0x1C16DFC
	0x03CA0EDC MOV X0, X19
	0x03CA0EE0 MOV X1, X20
	0x03CA0EE4 MOV W2, W21
	0x03CA0EE8 LDP X20, X19, [X31 + 0x30]
	0x03CA0EEC LDP X22, X21, [X31 + 0x20]
	0x03CA0EF0 LDP X24, X23, [X31 + 0x10]
	0x03CA0EF4 MOV X3, X31
	0x03CA0EF8 LDR X30, [X31], #0x40
	0x03CA0EFC B 0x3C9C93C
	0x03CA0F00 LDR X19, [X19 + 0xA0]
	0x03CA0F04 MOV X0, X20
	0x03CA0F08 MOV X1, X31
	0x03CA0F0C BL 0x3C9BF88
	0x03CA0F10 MOV W21, W0
	0x03CA0F14 MOV X0, X20
	0x03CA0F18 MOV X1, X31
	0x03CA0F1C BL 0x3C9BF60
	0x03CA0F20 LDR X8, [X24]
	0x03CA0F24 MOV W20, W0
	0x03CA0F28 LDR W9, [X8 + 0xE0]
	0x03CA0F2C CBNZ W9, 0x3CA0F38
	0x03CA0F30 MOV X0, X8
	0x03CA0F34 BL 0x1C16DFC
	0x03CA0F38 MOV X0, X19
	0x03CA0F3C MOV W1, W21
	0x03CA0F40 MOV W2, W20
	0x03CA0F44 LDP X20, X19, [X31 + 0x30]
	0x03CA0F48 LDP X22, X21, [X31 + 0x20]
	0x03CA0F4C LDP X24, X23, [X31 + 0x10]
	0x03CA0F50 MOV X3, X31
	0x03CA0F54 LDR X30, [X31], #0x40
	0x03CA0F58 B 0x3C9C6B4
	0x03CA0F5C SUB X31, X31, 0x70
	0x03CA0F60 STP X30, X23, [X31 + 0x40]
	0x03CA0F64 STP X22, X21, [X31 + 0x50]
	0x03CA0F68 STP X20, X19, [X31 + 0x60]
	0x03CA0F6C ADRP X23, 0x747000
	0x03CA0F70 LDRB W8, [X23 + 0x2DD]
	0x03CA0F74 MOV W21, W3
	0x03CA0F78 MOV W22, W2
	0x03CA0F7C MOV W19, W1
	0x03CA0F80 MOV X20, X0
	0x03CA0F84 TBNZ X8, 0x0, 0x3CA0FD8
	0x03CA0F88 ADRP X0, 0x4C1000
	0x03CA0F8C LDR X0, [X0 + 0x3E0]
	0x03CA0F90 BL 0x1C16CF4
	0x03CA0F94 ADRP X0, 0x4C1000
	0x03CA0F98 LDR X0, [X0 + 0x2B0]
	0x03CA0F9C BL 0x1C16CF4
	0x03CA0FA0 ADRP X0, 0x4C1000
	0x03CA0FA4 LDR X0, [X0 + 0x248]
	0x03CA0FA8 BL 0x1C16CF4
	0x03CA0FAC ADRP X0, 0x4B8000
	0x03CA0FB0 LDR X0, [X0 + 0xBC0]
	0x03CA0FB4 BL 0x1C16CF4
	0x03CA0FB8 ADRP X0, 0x47B000
	0x03CA0FBC LDR X0, [X0 + 0x608]
	0x03CA0FC0 BL 0x1C16CF4
	0x03CA0FC4 ADRP X0, 0x4B8000
	0x03CA0FC8 LDR X0, [X0 + 0xC08]
	0x03CA0FCC BL 0x1C16CF4
	0x03CA0FD0 MOVZ W8, 0x1
	0x03CA0FD4 STRB W8, [X23 + 0x2DD]
	0x03CA0FD8 STR X31, [X31 + 0x38]
	0x03CA0FDC LDR X0, [X20 + 0x130]
	0x03CA0FE0 CBZ X0, 0x3CA1170
	0x03CA0FE4 ADRP X8, 0x4C1000
	0x03CA0FE8 LDR X8, [X8 + 0x248]
	0x03CA0FEC MOV W1, W19
	0x03CA0FF0 LDR X2, [X8]
	0x03CA0FF4 BL 0x2B0F250
	0x03CA0FF8 TBNZ X0, 0x0, 0x3CA115C
	0x03CA0FFC TBZ X22, 0x0, 0x3CA107C
	0x03CA1000 ADRP X22, 0x4B7000
	0x03CA1004 LDR X22, [X22 + 0xBC0]
	0x03CA1008 LDR X0, [X22]
	0x03CA100C LDR W8, [X0 + 0xE0]
	0x03CA1010 CBNZ W8, 0x3CA1018
	0x03CA1014 BL 0x1C16DFC
	0x03CA1018 MOV W0, W19
	0x03CA101C MOV X1, X31
	0x03CA1020 BL 0x3C9CBD8
	0x03CA1024 CBZ W0, 0x3CA107C
	0x03CA1028 TBZ X21, 0x0, 0x3CA115C
	0x03CA102C LDR X0, [X22]
	0x03CA1030 LDRB W8, [X20 + 0x15C]
	0x03CA1034 MOVZ W10, 0x8
	0x03CA1038 LDR W9, [X0 + 0xE0]
	0x03CA103C ANDS W31, W8, 0x4
	0x03CA1040 MOVZ W8, 0xA
	0x03CA1044 CSEL W21, W10, W8, EQ
	0x03CA1048 CBNZ W9, 0x3CA1050
	0x03CA104C BL 0x1C16DFC
	0x03CA1050 ADD X2, X31, 0x38
	0x03CA1054 MOV W0, W19
	0x03CA1058 MOV W1, W21
	0x03CA105C MOV X3, X31
	0x03CA1060 BL 0x3C9CC14
	0x03CA1064 TBZ X0, 0x0, 0x3CA115C
	0x03CA1068 ADRP X8, 0x4C0000
	0x03CA106C LDR X21, [X20 + 0x130]
	0x03CA1070 LDR X23, [X31 + 0x38]
	0x03CA1074 LDR X8, [X8 + 0x3E0]
	0x03CA1078 B 0x3CA1120
	0x03CA107C ADD X0, X31, 0x20
	0x03CA1080 FMOV S0, W31
	0x03CA1084 FMOV S1, W31
	0x03CA1088 FMOV S2, W31
	0x03CA108C FMOV S3, W31
	0x03CA1090 FMOV S4, W31
	0x03CA1094 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x748000
	005 Move W8, [X20+732]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x454000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x4C2000
	015 Move X0, [X0+680]
	016 Call 0x1C17CF4
	017 Move X0, 0x4B9000
	018 Move X0, [X0+3064]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+732], W8
	022 Move W8, [X19+168]
	023 Subtract W8, W8, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Call FontAsset.LoadFontFace, X0
	027 Compare W0, 0
	028 JumpIfEqual {123}
	029 Move W8, [X19+172]
	030 Compare W8, 0
	031 JumpIfNotEqual {58}
	032 Move X0, X19
	033 Move X1, X31
	034 Call Object.get_name, X0
	035 Move X8, 0x4B9000
	036 Move X8, [X8+3064]
	037 Move X9, 0x4C2000
	038 Move X9, [X9+680]
	039 Move X1, X0
	040 Move X8, [X8]
	041 Move X3, X31
	042 Move X2, [X9]
	043 Move X0, X8
	044 Call String.Concat, X0, X1, X2
	045 Move X8, 0x454000
	046 Move X8, [X8+2600]
	047 Move X20, X0
	048 Move X8, [X8]
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Move X1, X19
	056 Move X2, X31
	057 Call Debug.LogWarning, X0, X1
	058 Move W20, W31
	059 Move W1, 3
	060 Move W3, 1
	061 Move X0, X19
	062 Move W2, W20
	063 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	064 Move W1, 9
	065 Move W3, 1
	066 Move X0, X19
	067 Move W2, W20
	068 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	069 Move W1, 10
	070 Move X0, X19
	071 Move W2, W20
	072 Move W3, W31
	073 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	074 Move W1, 11
	075 Move X0, X19
	076 Move W2, W20
	077 Move W3, W31
	078 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	079 Move W1, 13
	080 Move X0, X19
	081 Move W2, W20
	082 Move W3, W31
	083 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	084 Move W1, 1564
	085 Move X0, X19
	086 Move W2, W20
	087 Move W3, W31
	088 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	089 Move W1, 0x200B
	090 Move X0, X19
	091 Move W2, W20
	092 Move W3, W31
	093 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	094 Move W1, 0x200E
	095 Move X0, X19
	096 Move W2, W20
	097 Move W3, W31
	098 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	099 Move W1, 0x200F
	100 Move X0, X19
	101 Move W2, W20
	102 Move W3, W31
	103 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	104 Move W1, 0x2028
	105 Move X0, X19
	106 Move W2, W20
	107 Move W3, W31
	108 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	109 Move W1, 0x2029
	110 Move X0, X19
	111 Move W2, W20
	112 Move W3, W31
	113 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	114 Move X0, X19
	115 Move W2, W20
	116 Move X20, [X31+16]
	117 Move X19, [X31+24]
	118 Move W1, 0x2060
	119 Move W3, W31
	120 Move X30, [X31+32]
	121 Call FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	122 Return 
	123 Move W20, 1

Method: System.Void AddSynthesizedCharacter(System.UInt32 unicode, System.Boolean isFontFaceLoaded, System.Boolean addImmediately = False)

Disassembly:
	0x03CA1F5C BL 0x1C16DFC
	0x03CA1F60 MOV W0, W21
	0x03CA1F64 MOV X1, X31
	0x03CA1F68 BL 0x3C9CBD8
	0x03CA1F6C MOV W23, W0
	0x03CA1F70 CBNZ W0, 0x3CA1FCC
	0x03CA1F74 MOVZ W8, 0x2011
	0x03CA1F78 CMP W21, W8
	0x03CA1F7C B.EQ 0x3CA1FA8
	0x03CA1F80 CMP W21, 0xAD
	0x03CA1F84 B.EQ 0x3CA1FA8
	0x03CA1F88 CMP W21, 0xA0
	0x03CA1F8C B.NE 0x3CA2438
	0x03CA1F90 LDR X0, [X29]
	0x03CA1F94 LDR W8, [X0 + 0xE0]
	0x03CA1F98 CBNZ W8, 0x3CA1FA0
	0x03CA1F9C BL 0x1C16DFC
	0x03CA1FA0 MOVZ W0, 0x20
	0x03CA1FA4 B 0x3CA1FBC
	0x03CA1FA8 LDR X0, [X29]
	0x03CA1FAC LDR W8, [X0 + 0xE0]
	0x03CA1FB0 CBNZ W8, 0x3CA1FB8
	0x03CA1FB4 BL 0x1C16DFC
	0x03CA1FB8 MOVZ W0, 0x2D
	0x03CA1FBC MOV X1, X31
	0x03CA1FC0 BL 0x3C9CBD8
	0x03CA1FC4 MOV W23, W0
	0x03CA1FC8 CBZ W0, 0x3CA2438
	0x03CA1FCC LDR X0, [X19 + 0x120]
	0x03CA1FD0 CBZ X0, 0x3CA2674
	0x03CA1FD4 ADRP X8, 0x4B7000
	0x03CA1FD8 LDR X8, [X8 + 0xCA8]
	0x03CA1FDC MOV W1, W23
	0x03CA1FE0 LDR X2, [X8]
	0x03CA1FE4 BL 0x2B0F250
	0x03CA1FE8 TBZ X0, 0x0, 0x3CA2084
	0x03CA1FEC LDR X0, [X19 + 0x120]
	0x03CA1FF0 CBZ X0, 0x3CA2674
	0x03CA1FF4 ADRP X8, 0x4B7000
	0x03CA1FF8 LDR X8, [X8 + 0xC90]
	0x03CA1FFC MOV W1, W23
	0x03CA2000 LDR X2, [X8]
	0x03CA2004 BL 0x2B0EFBC
	0x03CA2008 ADRP X8, 0x4BF000
	0x03CA200C LDR X8, [X8 + 0x3E0]
	0x03CA2010 MOV X23, X0
	0x03CA2014 LDR X8, [X8]
	0x03CA2018 MOV X0, X8
	0x03CA201C BL 0x1C16F10
	0x03CA2020 MOV W1, W21
	0x03CA2024 MOV X2, X19
	0x03CA2028 MOV X3, X23
	0x03CA202C MOV X20, X0
	0x03CA2030 BL 0x3C9E938
	0x03CA2034 STR X20, [X22]
	0x03CA2038 LDR X0, [X19 + 0x128]
	0x03CA203C CBZ X0, 0x3CA2674
	0x03CA2040 ADRP X9, 0x4BF000
	0x03CA2044 LDR X9, [X9 + 0x4C0]
	0x03CA2048 LDR W10, [X0 + 0x1C]
	0x03CA204C LDR X8, [X0 + 0x10]
	0x03CA2050 LDR X9, [X9]
	0x03CA2054 ADD W10, W10, 0x1
	0x03CA2058 STR W10, [X0 + 0x1C]
	0x03CA205C CBZ X8, 0x3CA2674
	0x03CA2060 LDRSW X10, [X0 + 0x18]
	0x03CA2064 LDR W11, [X8 + 0x18]
	0x03CA2068 CMP W10, W11
	0x03CA206C B.CS 0x3CA22E4
	0x03CA2070 ADD W9, W10, 0x1
	0x03CA2074 ADD X8, X8, X10, 0x3, LSL
	0x03CA2078 STR W9, [X0 + 0x18]
	0x03CA207C STR X20, [X8 + 0x20]
	0x03CA2080 B 0x3CA22F8
	0x03CA2084 STR X31, [X31 + 0x8]
	0x03CA2088 LDR X8, [X19 + 0x140]
	0x03CA208C CBZ X8, 0x3CA2674
	0x03CA2090 LDRSW X9, [X19 + 0x148]
	0x03CA2094 LDR W10, [X8 + 0x18]
	0x03CA2098 CMP W9, W10
	0x03CA209C B.CS 0x3CA2678
	0x03CA20A0 ADD X8, X8, X9, 0x3, LSL
	0x03CA20A4 LDR X0, [X8 + 0x20]
	0x03CA20A8 CBZ X0, 0x3CA2674
	0x03CA20AC LDR X8, [X0]
	0x03CA20B0 LDP X9, X1, [X8 + 0x1E8]
	0x03CA20B4 BLR X9
	0x03CA20B8 TBZ X0, 0x0, 0x3CA2320
	0x03CA20BC LDR X8, [X19 + 0x140]
	0x03CA20C0 CBZ X8, 0x3CA2674
	0x03CA20C4 LDRSW X9, [X19 + 0x148]
	0x03CA20C8 LDR W10, [X8 + 0x18]
	0x03CA20CC CMP W9, W10
	0x03CA20D0 B.CS 0x3CA2678
	0x03CA20D4 ADD X8, X8, X9, 0x3, LSL
	0x03CA20D8 LDR X0, [X8 + 0x20]
	0x03CA20DC CBZ X0, 0x3CA2674
	0x03CA20E0 LDR X8, [X0]
	0x03CA20E4 LDP X9, X1, [X8 + 0x188]
	0x03CA20E8 BLR X9
	0x03CA20EC LDR W8, [X19 + 0x150]
	0x03CA20F0 CMP W0, W8
	0x03CA20F4 B.NE 0x3CA2134
	0x03CA20F8 LDR X8, [X19 + 0x140]
	0x03CA20FC CBZ X8, 0x3CA2674
	0x03CA2100 LDRSW X9, [X19 + 0x148]
	0x03CA2104 LDR W10, [X8 + 0x18]
	0x03CA2108 CMP W9, W10
	0x03CA210C B.CS 0x3CA2678
	0x03CA2110 ADD X8, X8, X9, 0x3, LSL
	0x03CA2114 LDR X0, [X8 + 0x20]
	0x03CA2118 CBZ X0, 0x3CA2674
	0x03CA211C LDR X8, [X0]
	0x03CA2120 LDP X9, X1, [X8 + 0x1A8]
	0x03CA2124 BLR X9
	0x03CA2128 LDR W8, [X19 + 0x154]
	0x03CA212C CMP W0, W8
	0x03CA2130 B.EQ 0x3CA21A4
	0x03CA2134 LDR X8, [X19 + 0x140]
	0x03CA2138 CBZ X8, 0x3CA2674
	0x03CA213C LDRSW X9, [X19 + 0x148]
	0x03CA2140 LDR W10, [X8 + 0x18]
	0x03CA2144 CMP W9, W10
	0x03CA2148 B.CS 0x3CA2678
	0x03CA214C ADD X8, X8, X9, 0x3, LSL
	0x03CA2150 LDR X0, [X8 + 0x20]
	0x03CA2154 CBZ X0, 0x3CA2674
	0x03CA2158 LDR W2, [X19 + 0x154]
	0x03CA215C LDR W1, [X19 + 0x150]
	0x03CA2160 MOV X3, X31
	0x03CA2164 BL 0x3C1C54C
	0x03CA2168 LDR X8, [X19 + 0x140]
	0x03CA216C CBZ X8, 0x3CA2674
	0x03CA2170 LDRSW X9, [X19 + 0x148]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x747000
	009 Move W8, [X23+733]
	010 Move W21, W3
	011 Move W22, W2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x4C1000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move X0, 0x4C1000
	022 Move X0, [X0+688]
	023 Call 0x1C17CF4
	024 Move X0, 0x4C1000
	025 Move X0, [X0+584]
	026 Call 0x1C17CF4
	027 Move X0, 0x4B8000
	028 Move X0, [X0+3008]
	029 Call 0x1C17CF4
	030 Move X0, 0x47B000
	031 Move X0, [X0+1544]
	032 Call 0x1C17CF4
	033 Move X0, 0x4B8000
	034 Move X0, [X0+3080]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+733], W8
	038 Move [X31+56], X31
	039 Move X0, [X20+304]
	040 Compare X0, 0
	041 JumpIfEqual {161}
	042 Move X8, 0x4C1000
	043 Move X8, [X8+584]
	044 Move W1, W19
	045 Move X2, [X8]
	046 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {153}
	051 Move TEMP, X22
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {94}
	055 Move X22, 0x4B7000
	056 Move X22, [X22+3008]
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move W0, W19
	063 Move X1, X31
	064 Call FontEngine.GetGlyphIndex, X0
	065 Compare W0, 0
	066 JumpIfEqual {94}
	067 Move TEMP, X21
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {153}
	071 Move X0, [X22]
	072 Move W8, [X20+348]
	073 Move W10, 8
	074 Move W9, [X0+224]
	075 And W31, W8, 4
	076 Move W8, 10
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Compare W9, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Add X2, X31, 56
	082 Move W0, W19
	083 Move W1, W21
	084 Move X3, X31
	085 Call FontEngine.TryGetGlyphWithUnicodeValue, X0, X1, X2
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {153}
	090 Move X8, 0x4C0000
	091 Move X21, [X20+304]
	092 Move X23, [X31+56]
	093 Move X8, [X8+992]
	094 Add X0, X31, 32
	095 Move S0, W31
	096 Move S1, W31
	097 Move S2, W31
	098 Move S3, W31
	099 Move S4, W31
	100 Move X1, X31
	101 Move [X31+32], X31
	102 Move [X31+40], X31
	103 Move [X31+48], W31
	104 Call GlyphMetrics..ctor, X0, V0, V1, V2, V3, V4
	105 Move X8, 0x47A000
	106 Move X8, [X8+1544]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X31
	113 Call GlyphRect.get_zero
	114 Move X8, 0x4B7000
	115 Move X8, [X8+3080]
	116 Move X21, X0
	117 Move X22, X1
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move V0, [X31+2]
	121 Move W8, [X31+48]
	122 Add X2, X31, 0
	123 Move W1, W31
	124 Move [X31], V0
	125 Move S0, 1
	126 Move X3, X21
	127 Move X4, X22
	128 Move W5, W31
	129 Move X6, X31
	130 Move X23, X0
	131 Move [X31+16], W8
	132 Call Glyph..ctor, X0, X1, X2, X3, V0, X4
	133 Move [X31+56], X23
	134 Move X8, 0x4C0000
	135 Move X8, [X8+992]
	136 Move X21, [X20+304]
	137 Move X0, [X8]
	138 Call 0x1C17F10
	139 Move W1, W19
	140 Move X2, X20
	141 Move X3, X23
	142 Move X22, X0
	143 Call Character..ctor, X0, X1, X2, X3
	144 Compare X21, 0
	145 JumpIfEqual {161}
	146 Move X8, 0x4C0000
	147 Move X8, [X8+688]
	148 Move X0, X21
	149 Move W1, W19
	150 Move X2, X22
	151 Move X3, [X8]
	152 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	153 Move X20, [X31+96]
	154 Move X19, [X31+104]
	155 Move X22, [X31+80]
	156 Move X21, [X31+88]
	157 Move X30, [X31+64]
	158 Move X23, [X31+72]
	159 Add X31, X31, 112
	160 Return 
	161 Call 0x1C17F20

Method: System.Void AddCharacterToLookupCache(System.UInt32 unicode, UnityEngine.TextCore.Text.Character character)

Disassembly:
	0x03CA2174 LDR W10, [X8 + 0x18]
	0x03CA2178 CMP W9, W10
	0x03CA217C B.CS 0x3CA2678
	0x03CA2180 LDR X0, [X29]
	0x03CA2184 ADD X8, X8, X9, 0x3, LSL
	0x03CA2188 LDR X24, [X8 + 0x20]
	0x03CA218C LDR W9, [X0 + 0xE0]
	0x03CA2190 CBNZ W9, 0x3CA2198
	0x03CA2194 BL 0x1C16DFC
	0x03CA2198 MOV X0, X24
	0x03CA219C MOV X1, X31
	0x03CA21A0 BL 0x3C9E1E0
	0x03CA21A4 LDR X0, [X29]
	0x03CA21A8 LDR W8, [X0 + 0xE0]
	0x03CA21AC CBNZ W8, 0x3CA21B4
	0x03CA21B0 BL 0x1C16DFC
	0x03CA21B4 MOV W0, W31
	0x03CA21B8 MOV X1, X31
	0x03CA21BC BL 0x3C9CF44
	0x03CA21C0 LDR X8, [X19 + 0x140]
	0x03CA21C4 CBZ X8, 0x3CA2674
	0x03CA21C8 LDRSW X9, [X19 + 0x148]
	0x03CA21CC LDR W10, [X8 + 0x18]
	0x03CA21D0 CMP W9, W10
	0x03CA21D4 B.CS 0x3CA2678
	0x03CA21D8 ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x746000
	007 Move W8, [X22+734]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4C0000
	016 Move X0, [X0+688]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+734], W8
	020 Move X0, [X21+304]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0x4C0000
	024 Move X8, [X8+688]
	025 Move W1, W20
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	034 Return 
	035 Call 0x1C17F20

Method: UnityEngine.TextCore.LowLevel.FontEngineError LoadFontFace()

Disassembly:
	0x03CA1DD0 LDP X28, X27, [X31 + 0x10]
	0x03CA1DD4 LDR X30, [X31], #0x60
	0x03CA1DD8 RET
	0x03CA1DDC BL 0x1C16F20
	0x03CA1DE0 SUB X31, X31, 0x70
	0x03CA1DE4 STP X29, X30, [X31 + 0x10]
	0x03CA1DE8 STP X28, X27, [X31 + 0x20]
	0x03CA1DEC STP X26, X25, [X31 + 0x30]
	0x03CA1DF0 STP X24, X23, [X31 + 0x40]
	0x03CA1DF4 STP X22, X21, [X31 + 0x50]
	0x03CA1DF8 STP X20, X19, [X31 + 0x60]
	0x03CA1DFC ADRP X23, 0x746000
	0x03CA1E00 LDRB W8, [X23 + 0x2F3]
	0x03CA1E04 MOV W20, W3
	0x03CA1E08 MOV X22, X2
	0x03CA1E0C MOV W21, W1
	0x03CA1E10 MOV X19, X0
	0x03CA1E14 TBNZ X8, 0x0, 0x3CA1EEC
	0x03CA1E18 ADRP X0, 0x4C0000
	0x03CA1E1C LDR X0, [X0 + 0x3E0]
	0x03CA1E20 BL 0x1C16CF4
	0x03CA1E24 ADRP X0, 0x452000
	0x03CA1E28 LDR X0, [X0 + 0xA28]
	0x03CA1E2C BL 0x1C16CF4
	0x03CA1E30 ADRP X0, 0x4C0000
	0x03CA1E34 LDR X0, [X0 + 0x2B0]
	0x03CA1E38 BL 0x1C16CF4
	0x03CA1E3C ADRP X0, 0x4B7000
	0x03CA1E40 LDR X0, [X0 + 0xC98]
	0x03CA1E44 BL 0x1C16CF4
	0x03CA1E48 ADRP X0, 0x4B7000
	0x03CA1E4C LDR X0, [X0 + 0xCA8]
	0x03CA1E50 BL 0x1C16CF4
	0x03CA1E54 ADRP X0, 0x4B7000
	0x03CA1E58 LDR X0, [X0 + 0xC90]
	0x03CA1E5C BL 0x1C16CF4
	0x03CA1E60 ADRP X0, 0x4C0000
	0x03CA1E64 LDR X0, [X0 + 0x258]
	0x03CA1E68 BL 0x1C16CF4
	0x03CA1E6C ADRP X0, 0x4B7000
	0x03CA1E70 LDR X0, [X0 + 0xBC0]
	0x03CA1E74 BL 0x1C16CF4
	0x03CA1E78 ADRP X0, 0x4AD000
	0x03CA1E7C LDR X0, [X0 + 0x828]
	0x03CA1E80 BL 0x1C16CF4
	0x03CA1E84 ADRP X0, 0x4B7000
	0x03CA1E88 LDR X0, [X0 + 0xE00]
	0x03CA1E8C BL 0x1C16CF4
	0x03CA1E90 ADRP X0, 0x4B7000
	0x03CA1E94 LDR X0, [X0 + 0xC10]
	0x03CA1E98 BL 0x1C16CF4
	0x03CA1E9C ADRP X0, 0x458000
	0x03CA1EA0 LDR X0, [X0 + 0x1D0]
	0x03CA1EA4 BL 0x1C16CF4
	0x03CA1EA8 ADRP X0, 0x4C0000
	0x03CA1EAC LDR X0, [X0 + 0x4C0]
	0x03CA1EB0 BL 0x1C16CF4
	0x03CA1EB4 ADRP X0, 0x452000
	0x03CA1EB8 LDR X0, [X0 + 0xAC8]
	0x03CA1EBC BL 0x1C16CF4
	0x03CA1EC0 ADRP X0, 0x4B7000
	0x03CA1EC4 LDR X0, [X0 + 0xE08]
	0x03CA1EC8 BL 0x1C16CF4
	0x03CA1ECC ADRP X0, 0x4B7000
	0x03CA1ED0 LDR X0, [X0 + 0xE10]
	0x03CA1ED4 BL 0x1C16CF4
	0x03CA1ED8 ADRP X0, 0x4B7000
	0x03CA1EDC LDR X0, [X0 + 0xE18]
	0x03CA1EE0 BL 0x1C16CF4
	0x03CA1EE4 MOVZ W8, 0x1
	0x03CA1EE8 STRB W8, [X23 + 0x2F3]
	0x03CA1EEC STR X31, [X31 + 0x8]
	0x03CA1EF0 STR X31, [X22]
	0x03CA1EF4 LDR X0, [X19 + 0x1E8]
	0x03CA1EF8 CBZ X0, 0x3CA2674
	0x03CA1EFC ADRP X8, 0x4B7000
	0x03CA1F00 LDR X8, [X8 + 0xE00]
	0x03CA1F04 MOV W1, W21
	0x03CA1F08 LDR X2, [X8]
	0x03CA1F0C BL 0x2DCD240
	0x03CA1F10 TBNZ X0, 0x0, 0x3CA1F20
	0x03CA1F14 MOV X0, X19
	0x03CA1F18 BL 0x3CA0DD0
	0x03CA1F1C CBZ W0, 0x3CA1F48
	0x03CA1F20 MOV W24, W31
	0x03CA1F24 MOV W0, W24
	0x03CA1F28 LDP X20, X19, [X31 + 0x60]
	0x03CA1F2C LDP X22, X21, [X31 + 0x50]
	0x03CA1F30 LDP X24, X23, [X31 + 0x40]
	0x03CA1F34 LDP X26, X25, [X31 + 0x30]
	0x03CA1F38 LDP X28, X27, [X31 + 0x20]
	0x03CA1F3C LDP X29, X30, [X31 + 0x10]
	0x03CA1F40 ADD X31, X31, 0x70
	0x03CA1F44 RET
	0x03CA1F48 ADRP X29, 0x4B7000
	0x03CA1F4C LDR X29, [X29 + 0xBC0]
	0x03CA1F50 LDR X0, [X29]
	0x03CA1F54 LDR W8, [X0 + 0xE0]
	0x03CA1F58 CBNZ W8, 0x3CA1F60

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x747000
	009 Move W8, [X20+735]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4B8000
	016 Move X0, [X0+3008]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+735], W8
	020 Move W8, [X19+168]
	021 Move X24, 0x4B8000
	022 Move X24, [X24+3008]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X21, [X19+152]
	025 Add X20, X19, 176
	026 Move X0, X20
	027 Move X1, X31
	028 Call FaceInfo.get_pointSize, X0
	029 Move W22, W0
	030 Move X0, X20
	031 Move X1, X31
	032 Call FaceInfo.get_faceIndex, X0
	033 Move X8, [X24]
	034 Move W23, W0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X21
	041 Move W1, W22
	042 Move W2, W23
	043 Move X3, X31
	044 Call FontEngine.LoadFontFace, X0, X1, X2
	045 Compare W0, 0
	046 JumpIfEqual {55}
	047 Move X0, [X19+160]
	048 Move X1, X31
	049 Call String.IsNullOrEmpty, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {95}
	054 Move W0, 35
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move X30, [X31+64]
	062 Return X0
	063 Add X21, X19, 176
	064 Move X0, X21
	065 Move X1, X31
	066 Call FaceInfo.get_familyName, X0
	067 Move X19, X0
	068 Move X0, X21
	069 Move X1, X31
	070 Call FaceInfo.get_styleName, X0
	071 Move X20, X0
	072 Move X0, X21
	073 Move X1, X31
	074 Call FaceInfo.get_pointSize, X0
	075 Move X8, [X24]
	076 Move W21, W0
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X0, X19
	083 Move X1, X20
	084 Move W2, W21
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X24, [X31+16]
	090 Move X23, [X31+24]
	091 Move X3, X31
	092 Move X30, [X31+64]
	093 Call FontEngine.LoadFontFace, X0, X1, X2
	094 Return X0
	095 Move X19, [X19+160]
	096 Move X0, X20
	097 Move X1, X31
	098 Call FaceInfo.get_pointSize, X0
	099 Move W21, W0
	100 Move X0, X20
	101 Move X1, X31
	102 Call FaceInfo.get_faceIndex, X0
	103 Move X8, [X24]
	104 Move W20, W0
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X0, X19
	111 Move W1, W21
	112 Move W2, W20
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X3, X31
	120 Move X30, [X31+64]
	121 Call FontEngine.LoadFontFace, X0, X1, X2
	122 Return X0

Method: System.Void SortCharacterTable()

Disassembly:
	0x03CA21DC LDR W1, [X19 + 0x158]
	0x03CA21E0 LDP X4, X3, [X19 + 0x160]
	0x03CA21E4 LDR W5, [X19 + 0x15C]
	0x03CA21E8 LDR X6, [X8 + 0x20]
	0x03CA21EC ADD X7, X31, 0x8
	0x03CA21F0 MOV W0, W23
	0x03CA21F4 MOV W2, W31
	0x03CA21F8 STR X31, [X31]
	0x03CA21FC BL 0x3C9CF80
	0x03CA2200 TBNZ X0, 0x0, 0x3CA2280
	0x03CA2204 LDRB W8, [X19 + 0x14C]
	0x03CA2208 CBZ W8, 0x3CA1F20
	0x03CA220C MOV X0, X19
	0x03CA2210 BL 0x3CA5DF8
	0x03CA2214 LDR X8, [X19 + 0x140]
	0x03CA2218 CBZ X8, 0x3CA2674
	0x03CA221C LDRSW X9, [X19 + 0x148]
	0x03CA2220 LDR W10, [X8 + 0x18]
	0x03CA2224 CMP W9, W10
	0x03CA2228 B.CS 0x3CA2678
	0x03CA222C LDR X0, [X29]
	0x03CA2230 ADD X8, X8, X9, 0x3, LSL
	0x03CA2234 LDR W24, [X19 + 0x158]
	0x03CA2238 LDP X25, X27, [X19 + 0x160]
	0x03CA223C LDR W26, [X19 + 0x15C]
	0x03CA2240 LDR W9, [X0 + 0xE0]
	0x03CA2244 LDR X28, [X8 + 0x20]
	0x03CA2248 CBNZ W9, 0x3CA2250
	0x03CA224C BL 0x1C16DFC
	0x03CA2250 ADD X7, X31, 0x8
	0x03CA2254 MOV W0, W23
	0x03CA2258 MOV W1, W24
	0x03CA225C MOV W2, W31
	0x03CA2260 MOV X3, X27
	0x03CA2264 MOV X4, X25
	0x03CA2268 MOV W5, W26
	0x03CA226C MOV X6, X28
	0x03CA2270 STR X31, [X31]
	0x03CA2274 BL 0x3C9CF80
	0x03CA2278 MOV W24, W31
	0x03CA227C TBZ X0, 0x0, 0x3CA1F24
	0x03CA2280 LDR X0, [X31 + 0x8]
	0x03CA2284 CBZ X0, 0x3CA2674
	0x03CA2288 LDR W1, [X19 + 0x148]
	0x03CA228C MOV X2, X31
	0x03CA2290 BL 0x3C9C4F8
	0x03CA2294 LDR X0, [X19 + 0x118]
	0x03CA2298 CBZ X0, 0x3CA2674
	0x03CA229C ADRP X9, 0x4B6000
	0x03CA22A0 LDR X1, [X31 + 0x8]
	0x03CA22A4 LDR X9, [X9 + 0xC10]
	0x03CA22A8 LDR W10, [X0 + 0x1C]
	0x03CA22AC LDR X8, [X0 + 0x10]
	0x03CA22B0 LDR X9, [X9]
	0x03CA22B4 ADD W10, W10, 0x1
	0x03CA22B8 STR W10, [X0 + 0x1C]
	0x03CA22BC CBZ X8, 0x3CA2674
	0x03CA22C0 LDRSW X10, [X0 + 0x18]
	0x03CA22C4 LDR W11, [X8 + 0x18]
	0x03CA22C8 CMP W10, W11
	0x03CA22CC B.CS 0x3CA2458
	0x03CA22D0 ADD W9, W10, 0x1
	0x03CA22D4 ADD X8, X8, X10, 0x3, LSL
	0x03CA22D8 STR W9, [X0 + 0x18]
	0x03CA22DC STR X1, [X8 + 0x20]
	0x03CA22E0 B 0x3CA2468
	0x03CA22E4 LDR X8, [X9 + 0x20]
	0x03CA22E8 MOV X1, X20
	0x03CA22EC LDR X8, [X8 + 0xC0]
	0x03CA22F0 LDR X2, [X8 + 0x70]
	0x03CA22F4 BL 0x301BF90
	0x03CA22F8 LDR X0, [X19 + 0x130]
	0x03CA22FC CBZ X0, 0x3CA2674
	0x03CA2300 ADRP X8, 0x4BF000
	0x03CA2304 LDR X2, [X22]
	0x03CA2308 LDR X8, [X8 + 0x2B0]
	0x03CA230C MOV W1, W21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x746000
	008 Move W8, [X20+736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x4C0000
	015 Move X0, [X0+1000]
	016 Call 0x1C17CF4
	017 Move X0, 0x4C0000
	018 Move X0, [X0+1008]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C0000
	021 Move X0, [X0+1016]
	022 Call 0x1C17CF4
	023 Move X0, 0x4C0000
	024 Move X0, [X0+720]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C0000
	027 Move X0, [X0+1024]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C0000
	030 Move X0, [X0+1032]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+736], W8
	034 Move X20, [X19+296]
	035 Compare X20, 0
	036 JumpIfEqual {83}
	037 Move W8, [X20+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X23, 0x4C0000
	040 Move X23, [X23+1032]
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X23]
	047 Move X8, [X0+184]
	048 Move X21, [X8+8]
	049 Compare X21, 0
	050 JumpIfNotEqual {72}
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X23]
	056 Move X9, 0x4C0000
	057 Move X8, [X0+184]
	058 Move X9, [X9+1016]
	059 Move X22, [X8]
	060 Move X0, [X9]
	061 Call 0x1C17F10
	062 Move X8, 0x4C0000
	063 Move X8, [X8+1024]
	064 Move X1, X22
	065 Move X3, X31
	066 Move X21, X0
	067 Move X2, [X8]
	068 Call Func`2<Object, UInt32>..ctor, X0, X1, X2
	069 Move X8, [X23]
	070 Move X8, [X8+184]
	071 Move [X8+8], X21
	072 Move X8, 0x4C0000
	073 Move X8, [X8+1000]
	074 Move X0, X20
	075 Move X1, X21
	076 Move X2, [X8]
	077 Call Enumerable.OrderBy, X0, X1
	078 Move X8, 0x4C0000
	079 Move X8, [X8+1008]
	080 Move X1, [X8]
	081 Call Enumerable.ToList, X0
	082 Move [X19+296], X0
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return 

Method: System.Void SortGlyphTable()

Disassembly:
	0x03CA2310 LDR X3, [X8]
	0x03CA2314 BL 0x2B0F05C
	0x03CA2318 MOVZ W24, 0x1
	0x03CA231C B 0x3CA1F24
	0x03CA2320 ADRP X8, 0x451000
	0x03CA2324 LDR X8, [X8 + 0xAC8]
	0x03CA2328 MOVZ W1, 0x5
	0x03CA232C LDR X0, [X8]
	0x03CA2330 BL 0x1C16D6C
	0x03CA2334 CBZ X0, 0x3CA2674
	0x03CA2338 LDR W8, [X0 + 0x18]
	0x03CA233C MOV X20, X0
	0x03CA2340 CBZ W8, 0x3CA2678
	0x03CA2344 ADRP X8, 0x4B6000
	0x03CA2348 LDR X8, [X8 + 0xE18]
	0x03CA234C MOV X0, X19
	0x03CA2350 MOV X1, X31
	0x03CA2354 LDR X8, [X8]
	0x03CA2358 STR X8, [X20 + 0x20]
	0x03CA235C BL 0x3C389D4
	0x03CA2360 LDR W8, [X20 + 0x18]
	0x03CA2364 CMP W8, 0x1
	0x03CA2368 B.LS 0x3CA2678
	0x03CA236C CMP W8, 0x2
	0x03CA2370 STR X0, [X20 + 0x28]
	0x03CA2374 B.EQ 0x3CA2678
	0x03CA2378 ADRP X8, 0x4B6000
	0x03CA237C LDR X8, [X8 + 0xE10]
	0x03CA2380 LDR X8, [X8]
	0x03CA2384 STR X8, [X20 + 0x30]
	0x03CA2388 LDR X8, [X19 + 0x140]
	0x03CA238C CBZ X8, 0x3CA2674
	0x03CA2390 LDRSW X9, [X19 + 0x148]
	0x03CA2394 LDR W10, [X8 + 0x18]
	0x03CA2398 CMP W9, W10
	0x03CA239C B.CS 0x3CA2678
	0x03CA23A0 ADD X8, X8, X9, 0x3, LSL
	0x03CA23A4 LDR X0, [X8 + 0x20]
	0x03CA23A8 CBZ X0, 0x3CA2674
	0x03CA23AC MOV X1, X31
	0x03CA23B0 BL 0x3C389D4
	0x03CA23B4 LDR W8, [X20 + 0x18]
	0x03CA23B8 CMP W8, 0x3
	0x03CA23BC B.LS 0x3CA2678
	0x03CA23C0 CMP W8, 0x4
	0x03CA23C4 STR X0, [X20 + 0x38]
	0x03CA23C8 B.EQ 0x3CA2678
	0x03CA23CC ADRP X8, 0x4B6000
	0x03CA23D0 LDR X8, [X8 + 0xE08]
	0x03CA23D4 MOV X0, X20
	0x03CA23D8 MOV X1, X31
	0x03CA23DC LDR X8, [X8]
	0x03CA23E0 STR X8, [X20 + 0x40]
	0x03CA23E4 BL 0x32278CC
	0x03CA23E8 LDR X8, [X19 + 0x140]
	0x03CA23EC CBZ X8, 0x3CA2674
	0x03CA23F0 LDRSW X9, [X19 + 0x148]
	0x03CA23F4 LDR W10, [X8 + 0x18]
	0x03CA23F8 CMP W9, W10
	0x03CA23FC B.CS 0x3CA2678
	0x03CA2400 ADRP X10, 0x451000
	0x03CA2404 LDR X10, [X10 + 0xA28]
	0x03CA2408 MOV X20, X0
	0x03CA240C ADD X8, X8, X9, 0x3, LSL
	0x03CA2410 LDR X19, [X8 + 0x20]
	0x03CA2414 LDR X0, [X10]
	0x03CA2418 LDR W9, [X0 + 0xE0]
	0x03CA241C CBNZ W9, 0x3CA2424
	0x03CA2420 BL 0x1C16DFC
	0x03CA2424 MOV X0, X20
	0x03CA2428 MOV X1, X19
	0x03CA242C MOV X2, X31
	0x03CA2430 BL 0x3C06B0C
	0x03CA2434 B 0x3CA1F20
	0x03CA2438 LDR X0, [X19 + 0x1E8]
	0x03CA243C CBZ X0, 0x3CA2674
	0x03CA2440 ADRP X8, 0x4AC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x746000
	008 Move W8, [X20+737]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x4B7000
	015 Move X0, [X0+3496]
	016 Call 0x1C17CF4
	017 Move X0, 0x4B7000
	018 Move X0, [X0+3504]
	019 Call 0x1C17CF4
	020 Move X0, 0x4B7000
	021 Move X0, [X0+3512]
	022 Call 0x1C17CF4
	023 Move X0, 0x4B7000
	024 Move X0, [X0+3264]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C0000
	027 Move X0, [X0+1040]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C0000
	030 Move X0, [X0+1032]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+737], W8
	034 Move X20, [X19+280]
	035 Compare X20, 0
	036 JumpIfEqual {83}
	037 Move W8, [X20+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X23, 0x4C0000
	040 Move X23, [X23+1032]
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X23]
	047 Move X8, [X0+184]
	048 Move X21, [X8+16]
	049 Compare X21, 0
	050 JumpIfNotEqual {72}
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X23]
	056 Move X9, 0x4B7000
	057 Move X8, [X0+184]
	058 Move X9, [X9+3512]
	059 Move X22, [X8]
	060 Move X0, [X9]
	061 Call 0x1C17F10
	062 Move X8, 0x4C0000
	063 Move X8, [X8+1040]
	064 Move X1, X22
	065 Move X3, X31
	066 Move X21, X0
	067 Move X2, [X8]
	068 Call Func`2<Object, UInt32>..ctor, X0, X1, X2
	069 Move X8, [X23]
	070 Move X8, [X8+184]
	071 Move [X8+16], X21
	072 Move X8, 0x4B7000
	073 Move X8, [X8+3496]
	074 Move X0, X20
	075 Move X1, X21
	076 Move X2, [X8]
	077 Call Enumerable.OrderBy, X0, X1
	078 Move X8, 0x4B7000
	079 Move X8, [X8+3504]
	080 Move X1, [X8]
	081 Call Enumerable.ToList, X0
	082 Move [X19+280], X0
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return 

Method: System.Void SortFontFeatureTable()

Disassembly:
	0x03CA2444 LDR X8, [X8 + 0x828]
	0x03CA2448 MOV W1, W21
	0x03CA244C LDR X2, [X8]
	0x03CA2450 BL 0x2DCDCE0
	0x03CA2454 B 0x3CA1F20
	0x03CA2458 LDR X8, [X9 + 0x20]
	0x03CA245C LDR X8, [X8 + 0xC0]
	0x03CA2460 LDR X2, [X8 + 0x70]
	0x03CA2464 BL 0x301BF90
	0x03CA2468 LDR X0, [X19 + 0x120]
	0x03CA246C CBZ X0, 0x3CA2674
	0x03CA2470 ADRP X8, 0x4B6000
	0x03CA2474 LDR X2, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+368]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Call FontFeatureTable.SortGlyphPairAdjustmentRecords, X0
	008 Move X0, [X19+368]
	009 Compare X0, 0
	010 JumpIfEqual {19}
	011 Call FontFeatureTable.SortMarkToBaseAdjustmentRecords, X0
	012 Move X0, [X19+368]
	013 Compare X0, 0
	014 JumpIfEqual {19}
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call FontFeatureTable.SortMarkToMarkAdjustmentRecords, X0
	018 Return 
	019 Call 0x1C17F20

Method: System.Void SortAllTables()

Disassembly:
	0x03CA2A3C BL 0x1C16F20
	0x03CA2A40 SUB X31, X31, 0x80
	0x03CA2A44 STP X29, X30, [X31 + 0x20]
	0x03CA2A48 STP X28, X27, [X31 + 0x30]
	0x03CA2A4C STP X26, X25, [X31 + 0x40]
	0x03CA2A50 STP X24, X23, [X31 + 0x50]
	0x03CA2A54 STP X22, X21, [X31 + 0x60]
	0x03CA2A58 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call FontAsset.SortGlyphTable, X0
	005 Move X0, X19
	006 Call FontAsset.SortCharacterTable, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call FontAsset.SortFontFeatureTable, X0
	011 Return 

Method: System.Boolean HasCharacter(System.Int32 character)

Disassembly:
	0x03CA2A5C ADRP X19, 0x745000
	0x03CA2A60 LDRB W8, [X19 + 0x2E6]
	0x03CA2A64 MOV W20, W4
	0x03CA2A68 MOV X21, X2
	0x03CA2A6C MOV X22, X1
	0x03CA2A70 MOV X23, X0
	0x03CA2A74 STR W3, [X31 + 0x14]
	0x03CA2A78 TBNZ X8, 0x0, 0x3CA2B20
	0x03CA2A7C ADRP X0, 0x4BF000
	0x03CA2A80 LDR X0, [X0 + 0x248]
	0x03CA2A84 BL 0x1C16CF4
	0x03CA2A88 ADRP X0, 0x4BF000
	0x03CA2A8C LDR X0, [X0 + 0x258]
	0x03CA2A90 BL 0x1C16CF4
	0x03CA2A94 ADRP X0, 0x453000
	0x03CA2A98 LDR X0, [X0 + 0x9D8]
	0x03CA2A9C BL 0x1C16CF4
	0x03CA2AA0 ADRP X0, 0x458000
	0x03CA2AA4 LDR X0, [X0 + 0x678]
	0x03CA2AA8 BL 0x1C16CF4
	0x03CA2AAC ADRP X0, 0x458000
	0x03CA2AB0 LDR X0, [X0 + 0x688]
	0x03CA2AB4 BL 0x1C16CF4
	0x03CA2AB8 ADRP X0, 0x452000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x746000
	006 Move W8, [X21+738]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4C0000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+738], W8
	018 Move X0, [X20+304]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x4C0000
	022 Move X8, [X8+584]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	030 Return X0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Boolean HasCharacter(System.Char character, System.Boolean searchFallbacks = False, System.Boolean tryAddCharacter = False)

Disassembly:
	0x03CA2ABC LDR X0, [X0 + 0xE08]
	0x03CA2AC0 BL 0x1C16CF4
	0x03CA2AC4 ADRP X0, 0x457000
	0x03CA2AC8 LDR X0, [X0 + 0x1D0]

ISIL:
	001 And W1, W1, 0xFFFF
	002 And W2, W2, 1
	003 And W3, W3, 1

Method: System.Boolean HasCharacter(System.UInt32 character, System.Boolean searchFallbacks = False, System.Boolean tryAddCharacter = False)

Disassembly:
	0x03CA2ACC BL 0x1C16CF4
	0x03CA2AD0 ADRP X0, 0x4A8000
	0x03CA2AD4 LDR X0, [X0 + 0xB50]
	0x03CA2AD8 BL 0x1C16CF4
	0x03CA2ADC ADRP X0, 0x47E000
	0x03CA2AE0 LDR X0, [X0 + 0x558]
	0x03CA2AE4 BL 0x1C16CF4
	0x03CA2AE8 ADRP X0, 0x4BF000
	0x03CA2AEC LDR X0, [X0 + 0x4B0]
	0x03CA2AF0 BL 0x1C16CF4
	0x03CA2AF4 ADRP X0, 0x4B6000
	0x03CA2AF8 LDR X0, [X0 + 0x858]
	0x03CA2AFC BL 0x1C16CF4
	0x03CA2B00 ADRP X0, 0x4BF000
	0x03CA2B04 LDR X0, [X0 + 0x4B8]
	0x03CA2B08 BL 0x1C16CF4
	0x03CA2B0C ADRP X0, 0x451000
	0x03CA2B10 LDR X0, [X0 + 0x598]
	0x03CA2B14 BL 0x1C16CF4
	0x03CA2B18 MOVZ W8, 0x1
	0x03CA2B1C STRB W8, [X19 + 0x2E6]
	0x03CA2B20 STR X31, [X31 + 0x18]
	0x03CA2B24 STR X31, [X21]
	0x03CA2B28 LDR X8, [X23 + 0x130]
	0x03CA2B2C CBNZ X8, 0x3CA2B40
	0x03CA2B30 MOV X0, X23
	0x03CA2B34 BL 0x3C9EBEC
	0x03CA2B38 LDR X8, [X23 + 0x130]
	0x03CA2B3C CBZ X8, 0x3CA2E50
	0x03CA2B40 LDR X8, [X23 + 0x1E0]
	0x03CA2B44 CBZ X8, 0x3CA2E74
	0x03CA2B48 LDR W9, [X8 + 0x1C]
	0x03CA2B4C STR X21, [X31 + 0x8]
	0x03CA2B50 ADD W9, W9, 0x1
	0x03CA2B54 STP W31, W9, [X8 + 0x18]
	0x03CA2B58 CBZ X22, 0x3CA2E74
	0x03CA2B5C LDR W8, [X22 + 0x10]
	0x03CA2B60 CMP W8, 0x1
	0x03CA2B64 B.LT 0x3CA2E10
	0x03CA2B68 ADRP X19, 0x4BF000
	0x03CA2B6C ADRP X21, 0x453000
	0x03CA2B70 ADRP X29, 0x4BF000
	0x03CA2B74 LDR X19, [X19 + 0x258]
	0x03CA2B78 LDR X21, [X21 + 0x9D8]
	0x03CA2B7C LDR X29, [X29 + 0x4B8]
	0x03CA2B80 MOV W24, W31
	0x03CA2B84 MOV X0, X22
	0x03CA2B88 MOV W1, W24
	0x03CA2B8C MOV X2, X31
	0x03CA2B90 BL 0x3222A1C
	0x03CA2B94 LDR X8, [X23 + 0x130]
	0x03CA2B98 CBZ X8, 0x3CA2E74
	0x03CA2B9C ADRP X9, 0x4BF000
	0x03CA2BA0 LDR X9, [X9 + 0x248]
	0x03CA2BA4 AND W25, W0, 0xFFFF
	0x03CA2BA8 MOV X0, X8
	0x03CA2BAC MOV W1, W25
	0x03CA2BB0 LDR X2, [X9]
	0x03CA2BB4 BL 0x2B0F250
	0x03CA2BB8 TBNZ X0, 0x0, 0x3CA2E00
	0x03CA2BBC TBZ X20, 0x0, 0x3CA2BE8
	0x03CA2BC0 LDR W8, [X23 + 0xA8]
	0x03CA2BC4 SUB W8, W8, 0x1
	0x03CA2BC8 CMP W8, 0x1
	0x03CA2BCC B.HI 0x3CA2BE8
	0x03CA2BD0 ADD X2, X31, 0x18
	0x03CA2BD4 MOV X0, X23
	0x03CA2BD8 MOV W1, W25
	0x03CA2BDC MOV W3, W31
	0x03CA2BE0 BL 0x3CA1DE0
	0x03CA2BE4 TBNZ X0, 0x0, 0x3CA2E00
	0x03CA2BE8 LDR W8, [X31 + 0x14]
	0x03CA2BEC TBZ X8, 0x0, 0x3CA2DA0
	0x03CA2BF0 LDR X0, [X19]
	0x03CA2BF4 LDR W8, [X0 + 0xE0]
	0x03CA2BF8 CBNZ W8, 0x3CA2C04
	0x03CA2BFC BL 0x1C16DFC
	0x03CA2C00 LDR X0, [X19]
	0x03CA2C04 LDR X8, [X0 + 0xB8]
	0x03CA2C08 LDR X9, [X8 + 0x50]
	0x03CA2C0C CBZ X9, 0x3CA2C44
	0x03CA2C10 LDR W9, [X0 + 0xE0]
	0x03CA2C14 CBNZ W9, 0x3CA2C24
	0x03CA2C18 BL 0x1C16DFC
	0x03CA2C1C LDR X8, [X19]
	0x03CA2C20 LDR X8, [X8 + 0xB8]
	0x03CA2C24 LDR X0, [X8 + 0x50]
	0x03CA2C28 CBZ X0, 0x3CA2E74
	0x03CA2C2C ADRP X8, 0x458000
	0x03CA2C30 LDR X8, [X8 + 0x678]
	0x03CA2C34 LDR X1, [X8]
	0x03CA2C38 BL 0x2DAA53C
	0x03CA2C3C LDR X0, [X19]
	0x03CA2C40 B 0x3CA2C84
	0x03CA2C44 ADRP X8, 0x452000
	0x03CA2C48 LDR X8, [X8 + 0xE08]
	0x03CA2C4C LDR X0, [X8]
	0x03CA2C50 BL 0x1C16F10
	0x03CA2C54 ADRP X8, 0x458000
	0x03CA2C58 LDR X8, [X8 + 0x688]
	0x03CA2C5C MOV X26, X0
	0x03CA2C60 LDR X1, [X8]
	0x03CA2C64 BL 0x2DA9EF4
	0x03CA2C68 LDR X0, [X19]
	0x03CA2C6C LDR W8, [X0 + 0xE0]
	0x03CA2C70 CBNZ W8, 0x3CA2C7C
	0x03CA2C74 BL 0x1C16DFC
	0x03CA2C78 LDR X0, [X19]
	0x03CA2C7C LDR X8, [X0 + 0xB8]
	0x03CA2C80 STR X26, [X8 + 0x50]
	0x03CA2C84 LDR W8, [X0 + 0xE0]
	0x03CA2C88 CBNZ W8, 0x3CA2C94
	0x03CA2C8C BL 0x1C16DFC
	0x03CA2C90 LDR X0, [X19]
	0x03CA2C94 LDR X8, [X0 + 0xB8]
	0x03CA2C98 MOV X0, X23
	0x03CA2C9C MOV X1, X31
	0x03CA2CA0 LDR X26, [X8 + 0x50]
	0x03CA2CA4 BL 0x3C385F8
	0x03CA2CA8 CBZ X26, 0x3CA2E74
	0x03CA2CAC LDR X2, [X21]
	0x03CA2CB0 MOV W1, W0
	0x03CA2CB4 MOV X0, X26
	0x03CA2CB8 BL 0x2DAB03C
	0x03CA2CBC LDR X0, [X23 + 0x178]
	0x03CA2CC0 CBZ X0, 0x3CA2DA0
	0x03CA2CC4 LDR W8, [X0 + 0x18]
	0x03CA2CC8 CMP W8, 0x1
	0x03CA2CCC B.LT 0x3CA2DA0
	0x03CA2CD0 MOV W26, W31
	0x03CA2CD4 LDR X2, [X29]
	0x03CA2CD8 MOV W1, W26
	0x03CA2CDC BL 0x301BCCC
	0x03CA2CE0 ADRP X8, 0x451000
	0x03CA2CE4 LDR X8, [X8 + 0x598]
	0x03CA2CE8 MOV X27, X0
	0x03CA2CEC LDR X8, [X8]
	0x03CA2CF0 LDR W9, [X8 + 0xE0]
	0x03CA2CF4 CBNZ W9, 0x3CA2D00
	0x03CA2CF8 MOV X0, X8
	0x03CA2CFC BL 0x1C16DFC
	0x03CA2D00 MOV X0, X27
	0x03CA2D04 MOV X1, X31
	0x03CA2D08 MOV X2, X31
	0x03CA2D0C BL 0x3C354F8
	0x03CA2D10 TBZ X0, 0x0, 0x3CA2DA0
	0x03CA2D14 LDR X0, [X23 + 0x178]
	0x03CA2D18 CBZ X0, 0x3CA2E74
	0x03CA2D1C LDR X2, [X29]
	0x03CA2D20 MOV W1, W26
	0x03CA2D24 BL 0x301BCCC
	0x03CA2D28 CBZ X0, 0x3CA2E74
	0x03CA2D2C MOV X1, X31
	0x03CA2D30 MOV X27, X0
	0x03CA2D34 BL 0x3C385F8
	0x03CA2D38 LDR X8, [X19]
	0x03CA2D3C MOV W28, W0
	0x03CA2D40 LDR W9, [X8 + 0xE0]
	0x03CA2D44 CBNZ W9, 0x3CA2D54
	0x03CA2D48 MOV X0, X8
	0x03CA2D4C BL 0x1C16DFC
	0x03CA2D50 LDR X8, [X19]
	0x03CA2D54 LDR X8, [X8 + 0xB8]
	0x03CA2D58 LDR X0, [X8 + 0x50]
	0x03CA2D5C CBZ X0, 0x3CA2E74
	0x03CA2D60 LDR X2, [X21]
	0x03CA2D64 MOV W1, W28
	0x03CA2D68 BL 0x2DAB03C
	0x03CA2D6C TBZ X0, 0x0, 0x3CA2D88
	0x03CA2D70 AND W3, W20, 0x1
	0x03CA2D74 MOVZ W2, 0x1
	0x03CA2D78 MOV X0, X27
	0x03CA2D7C MOV W1, W25
	0x03CA2D80 BL 0x3CA267C
	0x03CA2D84 TBNZ X0, 0x0, 0x3CA2E00
	0x03CA2D88 LDR X0, [X23 + 0x178]
	0x03CA2D8C CBZ X0, 0x3CA2E74
	0x03CA2D90 LDR W8, [X0 + 0x18]
	0x03CA2D94 ADD W26, W26, 0x1
	0x03CA2D98 CMP W26, W8
	0x03CA2D9C B.LT 0x3CA2CD4
	0x03CA2DA0 LDR X0, [X23 + 0x1E0]
	0x03CA2DA4 CBZ X0, 0x3CA2E74
	0x03CA2DA8 ADRP X9, 0x457000
	0x03CA2DAC LDR W10, [X0 + 0x1C]
	0x03CA2DB0 LDR X8, [X0 + 0x10]
	0x03CA2DB4 LDR X9, [X9 + 0x1D0]
	0x03CA2DB8 ADD W10, W10, 0x1
	0x03CA2DBC LDR X9, [X9]
	0x03CA2DC0 STR W10, [X0 + 0x1C]
	0x03CA2DC4 CBZ X8, 0x3CA2E74
	0x03CA2DC8 LDRSW X10, [X0 + 0x18]
	0x03CA2DCC LDR W11, [X8 + 0x18]
	0x03CA2DD0 CMP W10, W11
	0x03CA2DD4 B.CS 0x3CA2DEC
	0x03CA2DD8 ADD W9, W10, 0x1
	0x03CA2DDC ADD X8, X8, X10, 0x2, LSL

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x746000
	013 Move W8, [X23+739]
	014 Move W19, W3
	015 Move W22, W2
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x4C0000
	023 Move X0, [X0+584]
	024 Call 0x1C17CF4
	025 Move X0, 0x4C0000
	026 Move X0, [X0+600]
	027 Call 0x1C17CF4
	028 Move X0, 0x454000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move X0, 0x459000
	032 Move X0, [X0+1656]
	033 Call 0x1C17CF4
	034 Move X0, 0x459000
	035 Move X0, [X0+1672]
	036 Call 0x1C17CF4
	037 Move X0, 0x453000
	038 Move X0, [X0+3592]
	039 Call 0x1C17CF4
	040 Move X0, 0x4C0000
	041 Move X0, [X0+1200]
	042 Call 0x1C17CF4
	043 Move X0, 0x4C0000
	044 Move X0, [X0+1208]
	045 Call 0x1C17CF4
	046 Move X0, 0x452000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X23+739], W8
	051 Move [X31+8], X31
	052 Move X0, [X21+304]
	053 Compare X0, 0
	054 JumpIfNotEqual {60}
	055 Move X0, X21
	056 Call FontAsset.ReadFontAssetDefinition, X0
	057 Move X0, [X21+304]
	058 Compare X0, 0
	059 JumpIfEqual {230}
	060 Move X8, 0x4C0000
	061 Move X8, [X8+584]
	062 Move W1, W20
	063 Move X2, [X8]
	064 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {70}
	069 Move W24, 1
	070 Move TEMP, X19
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {91}
	074 Move W8, [X21+168]
	075 Subtract W8, W8, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add X2, X31, 8
	078 Move X0, X21
	079 Move W1, W20
	080 Move W3, W31
	081 Call FontAsset.TryAddCharacterInternal, X0, X1, X2, X3
	082 Move W24, W0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {231}
	087 Move TEMP, X22
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {95}
	091 Move TEMP, X22
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {230}
	095 Move X25, 0x4C0000
	096 Move X25, [X25+600]
	097 Move X0, [X25]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X25]
	103 Move X8, [X0+184]
	104 Move X9, [X8+80]
	105 Compare X9, 0
	106 JumpIfEqual {121}
	107 Move W9, [X0+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {113}
	110 Call 0x1C17DFC
	111 Move X8, [X25]
	112 Move X8, [X8+184]
	113 Move X0, [X8+80]
	114 Compare X0, 0
	115 JumpIfEqual {244}
	116 Move X8, 0x459000
	117 Move X8, [X8+1656]
	118 Move X1, [X8]
	119 Call HashSet`1<Int32>.Clear, X0
	120 Move X0, [X25]
	121 Move X8, 0x453000
	122 Move X8, [X8+3592]
	123 Move X0, [X8]
	124 Call 0x1C17F10
	125 Move X8, 0x459000
	126 Move X8, [X8+1672]
	127 Move X22, X0
	128 Move X1, [X8]
	129 Call HashSet`1<Int32>..ctor, X0
	130 Move X0, [X25]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X25]
	136 Move X8, [X0+184]
	137 Move [X8+80], X22
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X25]
	143 Move X8, [X0+184]
	144 Move X0, X21
	145 Move X1, X31
	146 Move X22, [X8+80]
	147 Call Object.GetInstanceID, X0
	148 Compare X22, 0
	149 JumpIfEqual {244}
	150 Move X26, 0x454000
	151 Move X26, [X26+2520]
	152 Move W1, W0
	153 Move X0, X22
	154 Move X2, [X26]
	155 Call HashSet`1<Int32>.Add, X0, X1
	156 Move X0, [X21+376]
	157 Compare X0, 0
	158 JumpIfEqual {230}
	159 Move W8, [X0+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X27, 0x4C0000
	162 Move X28, 0x452000
	163 Move X27, [X27+1208]
	164 Move X28, [X28+1432]
	165 Move W22, W31
	166 Move X2, [X27]
	167 Move W1, W22
	168 Call List`1<Object>.get_Item, X0, X1
	169 Move X8, [X28]
	170 Move X23, X0
	171 Move W9, [X8+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {176}
	174 Move X0, X8
	175 Call 0x1C17DFC
	176 Move X0, X23
	177 Move X1, X31
	178 Move X2, X31
	179 Call Object.op_Inequality, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {230}
	184 Move X0, [X21+376]
	185 Compare X0, 0
	186 JumpIfEqual {244}
	187 Move X2, [X27]
	188 Move W1, W22
	189 Call List`1<Object>.get_Item, X0, X1
	190 Compare X0, 0
	191 JumpIfEqual {244}
	192 Move X1, X31
	193 Move X23, X0
	194 Call Object.GetInstanceID, X0
	195 Move X8, [X25]
	196 Move W24, W0
	197 Move W9, [X8+224]
	198 Compare W9, 0
	199 JumpIfNotEqual {203}
	200 Move X0, X8
	201 Call 0x1C17DFC
	202 Move X8, [X25]
	203 Move X8, [X8+184]
	204 Move X0, [X8+80]
	205 Compare X0, 0
	206 JumpIfEqual {244}
	207 Move X2, [X26]
	208 Move W1, W24
	209 Call HashSet`1<Int32>.Add, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {224}
	214 And W3, W19, 1
	215 Move W2, 1
	216 Move X0, X23
	217 Move W1, W20
	218 Move W24, 1
	219 Call FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {231}
	224 Move X0, [X21+376]
	225 Compare X0, 0
	226 JumpIfEqual {244}
	227 Move W8, [X0+24]
	228 Add W22, W22, 1
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move W24, W31
	231 And W0, W24, 1
	232 Move X20, [X31+80]
	233 Move X19, [X31+88]
	234 Move X22, [X31+64]
	235 Move X21, [X31+72]
	236 Move X24, [X31+48]
	237 Move X23, [X31+56]
	238 Move X26, [X31+32]
	239 Move X25, [X31+40]
	240 Move X28, [X31+16]
	241 Move X27, [X31+24]
	242 Move X30, [X31+96]
	243 Return X0
	244 Call 0x1C17F20

Method: System.Boolean HasCharacter_Internal(System.UInt32 character, System.Boolean searchFallbacks = False, System.Boolean tryAddCharacter = False)

Disassembly:
	0x03CA367C LDR X0, [X0 + 0x678]
	0x03CA3680 BL 0x1C16CF4
	0x03CA3684 ADRP X0, 0x457000
	0x03CA3688 LDR X0, [X0 + 0x850]
	0x03CA368C BL 0x1C16CF4
	0x03CA3690 ADRP X0, 0x4BE000
	0x03CA3694 LDR X0, [X0 + 0x4E0]
	0x03CA3698 BL 0x1C16CF4
	0x03CA369C ADRP X0, 0x4BE000
	0x03CA36A0 LDR X0, [X0 + 0x4E8]
	0x03CA36A4 BL 0x1C16CF4
	0x03CA36A8 MOVZ W8, 0x1
	0x03CA36AC STRB W8, [X19 + 0x2EE]
	0x03CA36B0 LDR X0, [X20]
	0x03CA36B4 LDR W8, [X0 + 0xE0]
	0x03CA36B8 CBNZ W8, 0x3CA36C4
	0x03CA36BC BL 0x1C16DFC
	0x03CA36C0 LDR X0, [X20]
	0x03CA36C4 LDR X8, [X0 + 0xB8]
	0x03CA36C8 LDR X8, [X8 + 0x70]
	0x03CA36CC CBZ X8, 0x3CA37C0
	0x03CA36D0 LDR W21, [X8 + 0x20]
	0x03CA36D4 SUBS W22, W21, 0x1
	0x03CA36D8 B.LT 0x3CA37B0
	0x03CA36DC ADRP X23, 0x4BE000
	0x03CA36E0 LDR X23, [X23 + 0x4E8]
	0x03CA36E4 MOV W19, W31
	0x03CA36E8 LDR W8, [X0 + 0xE0]
	0x03CA36EC CBNZ W8, 0x3CA36F8
	0x03CA36F0 BL 0x1C16DFC
	0x03CA36F4 LDR X0, [X20]
	0x03CA36F8 LDR X8, [X0 + 0xB8]
	0x03CA36FC LDR X0, [X8 + 0x68]
	0x03CA3700 CBZ X0, 0x3CA37C0
	0x03CA3704 LDR X2, [X23]
	0x03CA3708 MOV W1, W19
	0x03CA370C BL 0x301BCCC
	0x03CA3710 CBZ X0, 0x3CA37C0
	0x03CA3714 MOV W1, W31
	0x03CA3718 MOV W2, W31
	0x03CA371C MOV X3, X31
	0x03CA3720 BL 0x3C1C4B4
	0x03CA3724 CMP W22, W19
	0x03CA3728 B.EQ 0x3CA3738
	0x03CA372C LDR X0, [X20]
	0x03CA3730 ADD W19, W19, 0x1
	0x03CA3734 B 0x3CA36E8
	0x03CA3738 CMP W21, 0x1
	0x03CA373C B.LT 0x3CA37B0
	0x03CA3740 LDR X0, [X20]
	0x03CA3744 LDR W8, [X0 + 0xE0]
	0x03CA3748 CBNZ W8, 0x3CA3754
	0x03CA374C BL 0x1C16DFC
	0x03CA3750 LDR X0, [X20]
	0x03CA3754 LDR X8, [X0 + 0xB8]
	0x03CA3758 LDR X9, [X8 + 0x68]
	0x03CA375C CBZ X9, 0x3CA37C0
	0x03CA3760 LDP W2, W10, [X9 + 0x18]
	0x03CA3764 ADD W10, W10, 0x1
	0x03CA3768 CMP W2, 0x1
	0x03CA376C STP W31, W10, [X9 + 0x18]
	0x03CA3770 B.LT 0x3CA378C
	0x03CA3774 LDR X0, [X9 + 0x10]
	0x03CA3778 MOV W1, W31
	0x03CA377C MOV X3, X31
	0x03CA3780 BL 0x339FA34
	0x03CA3784 LDR X8, [X20]
	0x03CA3788 LDR X8, [X8 + 0xB8]
	0x03CA378C LDR X0, [X8 + 0x70]
	0x03CA3790 CBZ X0, 0x3CA37C0
	0x03CA3794 ADRP X8, 0x457000
	0x03CA3798 LDR X8, [X8 + 0x678]
	0x03CA379C LDP X20, X19, [X31 + 0x20]
	0x03CA37A0 LDP X22, X21, [X31 + 0x10]
	0x03CA37A4 LDR X1, [X8]
	0x03CA37A8 LDP X30, X23, [X31], #0x30
	0x03CA37AC B 0x2DAA53C
	0x03CA37B0 LDP X20, X19, [X31 + 0x20]
	0x03CA37B4 LDP X22, X21, [X31 + 0x10]
	0x03CA37B8 LDP X30, X23, [X31], #0x30
	0x03CA37BC RET
	0x03CA37C0 BL 0x1C16F20
	0x03CA37C4 STR X30, [X31 - 0x20]!
	0x03CA37C8 STP X20, X19, [X31 + 0x10]
	0x03CA37CC ADRP X19, 0x744000
	0x03CA37D0 ADRP X20, 0x4BE000
	0x03CA37D4 LDRB W8, [X19 + 0x2EF]
	0x03CA37D8 LDR X20, [X20 + 0x258]
	0x03CA37DC TBNZ X8, 0x0, 0x3CA37F4
	0x03CA37E0 ADRP X0, 0x4BE000
	0x03CA37E4 LDR X0, [X0 + 0x258]
	0x03CA37E8 BL 0x1C16CF4
	0x03CA37EC MOVZ W8, 0x1
	0x03CA37F0 STRB W8, [X19 + 0x2EF]
	0x03CA37F4 LDR X0, [X20]
	0x03CA37F8 LDR W8, [X0 + 0xE0]
	0x03CA37FC CBNZ W8, 0x3CA3804
	0x03CA3800 BL 0x1C16DFC
	0x03CA3804 BL 0x3CA364C
	0x03CA3808 LDP X20, X19, [X31 + 0x10]
	0x03CA380C LDR X30, [X31], #0x20
	0x03CA3810 B 0x3CA3360
	0x03CA3814 STR X30, [X31 - 0x10]!
	0x03CA3818 AND W3, W2, 0x1
	0x03CA381C ADD X2, X31, 0x8
	0x03CA3820 STR X31, [X31 + 0x8]
	0x03CA3824 BL 0x3CA3834
	0x03CA3828 AND W0, W0, 0x1
	0x03CA382C LDR X30, [X31], #0x10
	0x03CA3830 RET
	0x03CA3834 SUB X31, X31, 0x80
	0x03CA3838 STP X29, X30, [X31 + 0x20]
	0x03CA383C STP X28, X27, [X31 + 0x30]
	0x03CA3840 STP X26, X25, [X31 + 0x40]
	0x03CA3844 STP X24, X23, [X31 + 0x50]
	0x03CA3848 STP X22, X21, [X31 + 0x60]
	0x03CA384C STP X20, X19, [X31 + 0x70]
	0x03CA3850 ADRP X21, 0x744000
	0x03CA3854 LDRB W8, [X21 + 0x2F0]
	0x03CA3858 MOV W28, W3
	0x03CA385C MOV X19, X2
	0x03CA3860 MOV X22, X1
	0x03CA3864 MOV X20, X0
	0x03CA3868 TBNZ X8, 0x0, 0x3CA39A0
	0x03CA386C ADRP X0, 0x4BE000
	0x03CA3870 LDR X0, [X0 + 0x3E0]
	0x03CA3874 BL 0x1C16CF4
	0x03CA3878 ADRP X0, 0x450000
	0x03CA387C LDR X0, [X0 + 0xA28]
	0x03CA3880 BL 0x1C16CF4
	0x03CA3884 ADRP X0, 0x4BE000
	0x03CA3888 LDR X0, [X0 + 0x2B0]
	0x03CA388C BL 0x1C16CF4
	0x03CA3890 ADRP X0, 0x4B5000
	0x03CA3894 LDR X0, [X0 + 0xC98]
	0x03CA3898 BL 0x1C16CF4
	0x03CA389C ADRP X0, 0x4BE000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x745000
	013 Move W8, [X23+740]
	014 Move W19, W3
	015 Move W22, W2
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x4BF000
	023 Move X0, [X0+584]
	024 Call 0x1C17CF4
	025 Move X0, 0x4BF000
	026 Move X0, [X0+600]
	027 Call 0x1C17CF4
	028 Move X0, 0x453000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move X0, 0x4BF000
	032 Move X0, [X0+1200]
	033 Call 0x1C17CF4
	034 Move X0, 0x4BF000
	035 Move X0, [X0+1208]
	036 Call 0x1C17CF4
	037 Move X0, 0x451000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+740], W8
	042 Move [X31+8], X31
	043 Move X0, [X21+304]
	044 Compare X0, 0
	045 JumpIfNotEqual {51}
	046 Move X0, X21
	047 Call FontAsset.ReadFontAssetDefinition, X0
	048 Move X0, [X21+304]
	049 Compare X0, 0
	050 JumpIfEqual {164}
	051 Move X8, 0x4BF000
	052 Move X8, [X8+584]
	053 Move W1, W20
	054 Move X2, [X8]
	055 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {61}
	060 Move W24, 1
	061 Move TEMP, X19
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {82}
	065 Move W8, [X21+168]
	066 Subtract W8, W8, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X2, X31, 8
	069 Move X0, X21
	070 Move W1, W20
	071 Move W3, W31
	072 Call FontAsset.TryAddCharacterInternal, X0, X1, X2, X3
	073 Move W24, W0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {165}
	078 Move TEMP, X22
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {86}
	082 Move TEMP, X22
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {164}
	086 Move X0, [X21+376]
	087 Compare X0, 0
	088 JumpIfEqual {164}
	089 Move W8, [X0+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X25, 0x4BF000
	092 Move X26, 0x451000
	093 Move X27, 0x4BF000
	094 Move X28, 0x453000
	095 Move X25, [X25+1208]
	096 Move X26, [X26+1432]
	097 Move X27, [X27+600]
	098 Move X28, [X28+2520]
	099 Move W22, W31
	100 Move X2, [X25]
	101 Move W1, W22
	102 Call List`1<Object>.get_Item, X0, X1
	103 Move X8, [X26]
	104 Move X23, X0
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X0, X23
	111 Move X1, X31
	112 Move X2, X31
	113 Call Object.op_Inequality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {164}
	118 Move X0, [X21+376]
	119 Compare X0, 0
	120 JumpIfEqual {178}
	121 Move X2, [X25]
	122 Move W1, W22
	123 Call List`1<Object>.get_Item, X0, X1
	124 Compare X0, 0
	125 JumpIfEqual {178}
	126 Move X1, X31
	127 Move X23, X0
	128 Call Object.GetInstanceID, X0
	129 Move X8, [X27]
	130 Move W24, W0
	131 Move W9, [X8+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {137}
	134 Move X0, X8
	135 Call 0x1C17DFC
	136 Move X8, [X27]
	137 Move X8, [X8+184]
	138 Move X0, [X8+80]
	139 Compare X0, 0
	140 JumpIfEqual {178}
	141 Move X2, [X28]
	142 Move W1, W24
	143 Call HashSet`1<Int32>.Add, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {158}
	148 And W3, W19, 1
	149 Move W2, 1
	150 Move X0, X23
	151 Move W1, W20
	152 Move W24, 1
	153 Call FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {165}
	158 Move X0, [X21+376]
	159 Compare X0, 0
	160 JumpIfEqual {178}
	161 Move W8, [X0+24]
	162 Add W22, W22, 1
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move W24, W31
	165 And W0, W24, 1
	166 Move X20, [X31+80]
	167 Move X19, [X31+88]
	168 Move X22, [X31+64]
	169 Move X21, [X31+72]
	170 Move X24, [X31+48]
	171 Move X23, [X31+56]
	172 Move X26, [X31+32]
	173 Move X25, [X31+40]
	174 Move X28, [X31+16]
	175 Move X27, [X31+24]
	176 Move X30, [X31+96]
	177 Return X0
	178 Call 0x1C17F20

Method: System.Boolean HasCharacters(System.String text, out System.Collections.Generic.List`1<System.Char> missingCharacters)

Disassembly:
	0x03CA38A0 LDR X0, [X0 + 0x248]
	0x03CA38A4 BL 0x1C16CF4
	0x03CA38A8 ADRP X0, 0x4B5000
	0x03CA38AC LDR X0, [X0 + 0xCA8]
	0x03CA38B0 BL 0x1C16CF4
	0x03CA38B4 ADRP X0, 0x4B5000
	0x03CA38B8 LDR X0, [X0 + 0xE48]
	0x03CA38BC BL 0x1C16CF4
	0x03CA38C0 ADRP X0, 0x4B5000
	0x03CA38C4 LDR X0, [X0 + 0xC90]
	0x03CA38C8 BL 0x1C16CF4
	0x03CA38CC ADRP X0, 0x4B5000
	0x03CA38D0 LDR X0, [X0 + 0xE50]
	0x03CA38D4 BL 0x1C16CF4
	0x03CA38D8 ADRP X0, 0x4B5000
	0x03CA38DC LDR X0, [X0 + 0xBC0]
	0x03CA38E0 BL 0x1C16CF4
	0x03CA38E4 ADRP X0, 0x4AB000
	0x03CA38E8 LDR X0, [X0 + 0x828]
	0x03CA38EC BL 0x1C16CF4
	0x03CA38F0 ADRP X0, 0x4B5000
	0x03CA38F4 LDR X0, [X0 + 0xE58]
	0x03CA38F8 BL 0x1C16CF4
	0x03CA38FC ADRP X0, 0x4B5000
	0x03CA3900 LDR X0, [X0 + 0xC10]
	0x03CA3904 BL 0x1C16CF4
	0x03CA3908 ADRP X0, 0x456000
	0x03CA390C LDR X0, [X0 + 0x1D0]
	0x03CA3910 BL 0x1C16CF4
	0x03CA3914 ADRP X0, 0x4BE000
	0x03CA3918 LDR X0, [X0 + 0x4C0]
	0x03CA391C BL 0x1C16CF4
	0x03CA3920 ADRP X0, 0x4BE000
	0x03CA3924 LDR X0, [X0 + 0x4F0]
	0x03CA3928 BL 0x1C16CF4
	0x03CA392C ADRP X0, 0x4A7000
	0x03CA3930 LDR X0, [X0 + 0xB50]
	0x03CA3934 BL 0x1C16CF4
	0x03CA3938 ADRP X0, 0x4BE000
	0x03CA393C LDR X0, [X0 + 0x4F8]
	0x03CA3940 BL 0x1C16CF4
	0x03CA3944 ADRP X0, 0x47D000
	0x03CA3948 LDR X0, [X0 + 0x558]
	0x03CA394C BL 0x1C16CF4
	0x03CA3950 ADRP X0, 0x4B5000
	0x03CA3954 LDR X0, [X0 + 0x858]
	0x03CA3958 BL 0x1C16CF4
	0x03CA395C ADRP X0, 0x4BE000
	0x03CA3960 LDR X0, [X0 + 0x2D0]
	0x03CA3964 BL 0x1C16CF4
	0x03CA3968 ADRP X0, 0x4BE000
	0x03CA396C LDR X0, [X0 + 0x2D8]
	0x03CA3970 BL 0x1C16CF4
	0x03CA3974 ADRP X0, 0x4B5000
	0x03CA3978 LDR X0, [X0 + 0xE68]
	0x03CA397C BL 0x1C16CF4
	0x03CA3980 ADRP X0, 0x4B5000
	0x03CA3984 LDR X0, [X0 + 0xE70]
	0x03CA3988 BL 0x1C16CF4
	0x03CA398C ADRP X0, 0x4B5000
	0x03CA3990 LDR X0, [X0 + 0xE78]
	0x03CA3994 BL 0x1C16CF4
	0x03CA3998 MOVZ W8, 0x1
	0x03CA399C STRB W8, [X21 + 0x2F0]
	0x03CA39A0 STP X31, X31, [X31 + 0x10]
	0x03CA39A4 CBZ X22, 0x3CA39E4
	0x03CA39A8 LDR X8, [X22 + 0x18]
	0x03CA39AC CBZ X8, 0x3CA39E4
	0x03CA39B0 LDR W8, [X20 + 0xA8]
	0x03CA39B4 CBZ W8, 0x3CA39E4
	0x03CA39B8 MOV X0, X20
	0x03CA39BC BL 0x3CA0DD0
	0x03CA39C0 CBZ W0, 0x3CA3A88
	0x03CA39C4 ADRP X8, 0x4B5000
	0x03CA39C8 LDR X8, [X8 + 0xE50]
	0x03CA39CC MOV X0, X22
	0x03CA39D0 LDR X1, [X8]
	0x03CA39D4 BL 0x21D588C
	0x03CA39D8 MOV W8, W31
	0x03CA39DC STR X0, [X19]
	0x03CA39E0 B 0x3CA3A64
	0x03CA39E4 ADRP X22, 0x4B5000
	0x03CA39E8 LDR W21, [X20 + 0xA8]
	0x03CA39EC LDR X22, [X22 + 0xE78]
	0x03CA39F0 MOV X0, X20
	0x03CA39F4 MOV X1, X31
	0x03CA39F8 BL 0x3C389D4
	0x03CA39FC LDR X8, [X22]
	0x03CA3A00 MOV X1, X0
	0x03CA3A04 CBZ W21, 0x3CA3A14
	0x03CA3A08 ADRP X9, 0x4B5000
	0x03CA3A0C LDR X9, [X9 + 0xE68]
	0x03CA3A10 B 0x3CA3A1C
	0x03CA3A14 ADRP X9, 0x4B5000
	0x03CA3A18 LDR X9, [X9 + 0xE70]
	0x03CA3A1C LDR X2, [X9]
	0x03CA3A20 MOV X0, X8
	0x03CA3A24 MOV X3, X31
	0x03CA3A28 BL 0x32274B8
	0x03CA3A2C ADRP X8, 0x450000
	0x03CA3A30 LDR X8, [X8 + 0xA28]
	0x03CA3A34 MOV X21, X0
	0x03CA3A38 LDR X8, [X8]
	0x03CA3A3C LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x745000
	010 Move W8, [X22+741]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x4BF000
	019 Move X0, [X0+584]
	020 Call 0x1C17CF4
	021 Move X0, 0x4B6000
	022 Move X0, [X0+3616]
	023 Call 0x1C17CF4
	024 Move X0, 0x4B6000
	025 Move X0, [X0+3624]
	026 Call 0x1C17CF4
	027 Move X0, 0x4B6000
	028 Move X0, [X0+3632]
	029 Call 0x1C17CF4
	030 Move X0, 0x4B6000
	031 Move X0, [X0+3640]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+741], W8
	035 Move X8, [X21+304]
	036 Compare X8, 0
	037 JumpIfEqual {108}
	038 Move X8, 0x4B6000
	039 Move X8, [X8+3640]
	040 Move X22, 0x4B6000
	041 Move X0, [X8]
	042 Move X22, [X22+3624]
	043 Call 0x1C17F10
	044 Move X1, [X22]
	045 Move X22, X0
	046 Call List`1<Char>..ctor, X0
	047 Move [X19], X22
	048 Compare X20, 0
	049 JumpIfEqual {119}
	050 Move W8, [X20+16]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X24, 0x4BF000
	053 Move X25, 0x4B6000
	054 Move X24, [X24+584]
	055 Move X25, [X25+3616]
	056 Move W22, W31
	057 Move X23, [X21+304]
	058 Move X0, X20
	059 Move W1, W22
	060 Move X2, X31
	061 Call String.get_Chars, X0, X1
	062 Compare X23, 0
	063 JumpIfEqual {119}
	064 Move X2, [X24]
	065 And W1, W0, 0xFFFF
	066 Move X0, X23
	067 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {99}
	072 Move X23, [X19]
	073 Move X0, X20
	074 Move W1, W22
	075 Move X2, X31
	076 Call String.get_Chars, X0, X1
	077 Compare X23, 0
	078 JumpIfEqual {119}
	079 Move W10, [X23+28]
	080 Move X8, [X23+16]
	081 Move X9, [X25]
	082 Add W10, W10, 1
	083 Move [X23+28], W10
	084 Compare X8, 0
	085 JumpIfEqual {119}
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Move W11, [X8+24]
	088 Move W1, W0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W9, W10, 1
	091 Add X8, X8, X10
	092 Move [X23+24], W9
	093 NotImplemented "Instruction STRH not yet implemented."
	094 Move X8, [X9+32]
	095 Move X0, X23
	096 Move X8, [X8+192]
	097 Move X2, [X8+112]
	098 Call List`1<Char>.AddWithResize, X0, X1
	099 Move W8, [X20+16]
	100 Add W22, W22, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X19]
	103 Compare X8, 0
	104 JumpIfEqual {119}
	105 Move W8, [X8+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move W0, W31
	109 Move [X19], X31
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Move X25, [X31+72]
	118 Return X0
	119 Call 0x1C17F20

Method: System.Boolean HasCharacters(System.String text, out System.UInt32[] missingCharacters, System.Boolean searchFallbacks = False, System.Boolean tryAddCharacter = False)

Disassembly:
	0x03CA3A40 CBNZ W9, 0x3CA3A4C
	0x03CA3A44 MOV X0, X8
	0x03CA3A48 BL 0x1C16DFC
	0x03CA3A4C MOV X0, X21
	0x03CA3A50 MOV X1, X20
	0x03CA3A54 MOV X2, X31
	0x03CA3A58 BL 0x3C06B0C
	0x03CA3A5C MOV W8, W31
	0x03CA3A60 STR X31, [X19]
	0x03CA3A64 LDP X20, X19, [X31 + 0x70]
	0x03CA3A68 LDP X22, X21, [X31 + 0x60]
	0x03CA3A6C LDP X24, X23, [X31 + 0x50]
	0x03CA3A70 LDP X26, X25, [X31 + 0x40]
	0x03CA3A74 LDP X28, X27, [X31 + 0x30]
	0x03CA3A78 LDP X29, X30, [X31 + 0x20]
	0x03CA3A7C AND W0, W8, 0x1
	0x03CA3A80 ADD X31, X31, 0x80
	0x03CA3A84 RET
	0x03CA3A88 LDR X8, [X20 + 0x130]
	0x03CA3A8C CBZ X8, 0x3CA3A98
	0x03CA3A90 LDR X8, [X20 + 0x120]
	0x03CA3A94 CBNZ X8, 0x3CA3AA0
	0x03CA3A98 MOV X0, X20
	0x03CA3A9C BL 0x3C9EBEC
	0x03CA3AA0 LDR X8, [X20 + 0x1C0]
	0x03CA3AA4 CBZ X8, 0x3CA4414
	0x03CA3AA8 LDR W9, [X8 + 0x1C]
	0x03CA3AAC ADD W9, W9, 0x1
	0x03CA3AB0 STP W31, W9, [X8 + 0x18]
	0x03CA3AB4 LDR X0, [X20 + 0x1C8]
	0x03CA3AB8 CBZ X0, 0x3CA4414
	0x03CA3ABC ADRP X21, 0x4B5000
	0x03CA3AC0 LDR X21, [X21 + 0xE58]
	0x03CA3AC4 LDR X1, [X21]
	0x03CA3AC8 BL 0x2DCD1E0
	0x03CA3ACC LDR X8, [X20 + 0x1D0]
	0x03CA3AD0 CBZ X8, 0x3CA4414
	0x03CA3AD4 LDP W2, W9, [X8 + 0x18]
	0x03CA3AD8 ADD W9, W9, 0x1
	0x03CA3ADC CMP W2, 0x1
	0x03CA3AE0 STP W31, W9, [X8 + 0x18]
	0x03CA3AE4 B.LT 0x3CA3AF8
	0x03CA3AE8 LDR X0, [X8 + 0x10]
	0x03CA3AEC MOV W1, W31
	0x03CA3AF0 MOV X3, X31
	0x03CA3AF4 BL 0x339FA34
	0x03CA3AF8 LDR X0, [X20 + 0x1D8]
	0x03CA3AFC CBZ X0, 0x3CA4414
	0x03CA3B00 LDR X1, [X21]
	0x03CA3B04 BL 0x2DCD1E0
	0x03CA3B08 LDR X8, [X20 + 0x1E0]
	0x03CA3B0C CBZ X8, 0x3CA4414
	0x03CA3B10 LDR W9, [X8 + 0x1C]
	0x03CA3B14 STR W28, [X31 + 0x8]
	0x03CA3B18 ADD W9, W9, 0x1
	0x03CA3B1C STP W31, W9, [X8 + 0x18]
	0x03CA3B20 LDR X8, [X22 + 0x18]
	0x03CA3B24 CMP W8, 0x1
	0x03CA3B28 B.LT 0x3CA3E6C
	0x03CA3B2C AND X8, X8, 0x0
	0x03CA3B30 CBZ X8, 0x3CA4418
	0x03CA3B34 STR W31, [X31 + 0xC]
	0x03CA3B38 ADRP X28, 0x4BE000
	0x03CA3B3C ADRP X21, 0x4B5000
	0x03CA3B40 LDR X28, [X28 + 0x248]
	0x03CA3B44 LDR X21, [X21 + 0xBC0]
	0x03CA3B48 MOV X26, X31
	0x03CA3B4C SUB X27, X8, 0x1
	0x03CA3B50 ADD X29, X22, 0x20
	0x03CA3B54 LDR X0, [X20 + 0x130]
	0x03CA3B58 CBZ X0, 0x3CA4414
	0x03CA3B5C LDR W23, [X29, X26, LSL #2]
	0x03CA3B60 LDR X2, [X28]
	0x03CA3B64 MOV W1, W23
	0x03CA3B68 BL 0x2B0F250
	0x03CA3B6C TBNZ X0, 0x0, 0x3CA3E50
	0x03CA3B70 LDR X0, [X21]
	0x03CA3B74 LDR W8, [X0 + 0xE0]
	0x03CA3B78 CBNZ W8, 0x3CA3B80
	0x03CA3B7C BL 0x1C16DFC
	0x03CA3B80 MOV W0, W23
	0x03CA3B84 MOV X1, X31
	0x03CA3B88 BL 0x3C9CBD8
	0x03CA3B8C MOV W25, W0
	0x03CA3B90 CBNZ W0, 0x3CA3BEC
	0x03CA3B94 MOVZ W8, 0x2011
	0x03CA3B98 CMP W23, W8
	0x03CA3B9C B.EQ 0x3CA3BC8
	0x03CA3BA0 CMP W23, 0xAD
	0x03CA3BA4 B.EQ 0x3CA3BC8
	0x03CA3BA8 CMP W23, 0xA0
	0x03CA3BAC B.NE 0x3CA3D50
	0x03CA3BB0 LDR X0, [X21]
	0x03CA3BB4 LDR W8, [X0 + 0xE0]
	0x03CA3BB8 CBNZ W8, 0x3CA3BC0
	0x03CA3BBC BL 0x1C16DFC
	0x03CA3BC0 MOVZ W0, 0x20
	0x03CA3BC4 B 0x3CA3BDC
	0x03CA3BC8 LDR X0, [X21]
	0x03CA3BCC LDR W8, [X0 + 0xE0]
	0x03CA3BD0 CBNZ W8, 0x3CA3BD8
	0x03CA3BD4 BL 0x1C16DFC
	0x03CA3BD8 MOVZ W0, 0x2D
	0x03CA3BDC MOV X1, X31
	0x03CA3BE0 BL 0x3C9CBD8
	0x03CA3BE4 MOV W25, W0
	0x03CA3BE8 CBZ W0, 0x3CA3D50
	0x03CA3BEC ADRP X8, 0x4BE000
	0x03CA3BF0 LDR X8, [X8 + 0x3E0]
	0x03CA3BF4 LDR X0, [X8]
	0x03CA3BF8 BL 0x1C16F10
	0x03CA3BFC MOV X1, X31
	0x03CA3C00 MOV X24, X0
	0x03CA3C04 BL 0x33BDD8C
	0x03CA3C08 MOVZ W8, 0x1
	0x03CA3C0C STRB W8, [X24 + 0x10]
	0x03CA3C10 MOVZ W8, 0x3F800000
	0x03CA3C14 STR W23, [X24 + 0x14]
	0x03CA3C18 STP X31, X31, [X24 + 0x18]
	0x03CA3C1C STP W25, W8, [X24 + 0x28]
	0x03CA3C20 LDR X0, [X20 + 0x120]
	0x03CA3C24 CBZ X0, 0x3CA4414
	0x03CA3C28 ADRP X8, 0x4B5000
	0x03CA3C2C LDR X8, [X8 + 0xCA8]
	0x03CA3C30 MOV W1, W25
	0x03CA3C34 LDR X2, [X8]
	0x03CA3C38 BL 0x2B0F250
	0x03CA3C3C TBZ X0, 0x0, 0x3CA3CAC
	0x03CA3C40 LDR X0, [X20 + 0x120]
	0x03CA3C44 CBZ X0, 0x3CA4414
	0x03CA3C48 ADRP X8, 0x4B5000
	0x03CA3C4C LDR X8, [X8 + 0xC90]
	0x03CA3C50 MOV W1, W25
	0x03CA3C54 LDR X2, [X8]
	0x03CA3C58 BL 0x2B0EFBC
	0x03CA3C5C STP X20, X0, [X24 + 0x18]
	0x03CA3C60 LDR X0, [X20 + 0x128]
	0x03CA3C64 CBZ X0, 0x3CA4414
	0x03CA3C68 ADRP X9, 0x4BE000
	0x03CA3C6C LDR W10, [X0 + 0x1C]
	0x03CA3C70 LDR X8, [X0 + 0x10]
	0x03CA3C74 LDR X9, [X9 + 0x4C0]
	0x03CA3C78 ADD W10, W10, 0x1
	0x03CA3C7C LDR X9, [X9]
	0x03CA3C80 STR W10, [X0 + 0x1C]
	0x03CA3C84 CBZ X8, 0x3CA4414
	0x03CA3C88 LDRSW X10, [X0 + 0x18]
	0x03CA3C8C LDR W11, [X8 + 0x18]
	0x03CA3C90 CMP W10, W11
	0x03CA3C94 B.CS 0x3CA3D18
	0x03CA3C98 ADD W9, W10, 0x1
	0x03CA3C9C ADD X8, X8, X10, 0x3, LSL
	0x03CA3CA0 STR W9, [X0 + 0x18]
	0x03CA3CA4 STR X24, [X8 + 0x20]
	0x03CA3CA8 B 0x3CA3D2C
	0x03CA3CAC LDR X0, [X20 + 0x1C8]
	0x03CA3CB0 CBZ X0, 0x3CA4414
	0x03CA3CB4 ADRP X8, 0x4AB000
	0x03CA3CB8 LDR X8, [X8 + 0x828]
	0x03CA3CBC MOV W1, W25
	0x03CA3CC0 LDR X2, [X8]
	0x03CA3CC4 BL 0x2DCDCE0
	0x03CA3CC8 TBZ X0, 0x0, 0x3CA3DB0
	0x03CA3CCC LDR X0, [X20 + 0x1C0]
	0x03CA3CD0 CBZ X0, 0x3CA4414
	0x03CA3CD4 ADRP X9, 0x456000
	0x03CA3CD8 LDR W10, [X0 + 0x1C]
	0x03CA3CDC LDR X8, [X0 + 0x10]
	0x03CA3CE0 LDR X9, [X9 + 0x1D0]
	0x03CA3CE4 ADD W10, W10, 0x1
	0x03CA3CE8 LDR X9, [X9]
	0x03CA3CEC STR W10, [X0 + 0x1C]
	0x03CA3CF0 CBZ X8, 0x3CA4414
	0x03CA3CF4 LDRSW X10, [X0 + 0x18]
	0x03CA3CF8 LDR W11, [X8 + 0x18]
	0x03CA3CFC CMP W10, W11
	0x03CA3D00 B.CS 0x3CA3D9C
	0x03CA3D04 ADD W9, W10, 0x1
	0x03CA3D08 ADD X8, X8, X10, 0x2, LSL
	0x03CA3D0C STR W9, [X0 + 0x18]
	0x03CA3D10 STR W25, [X8 + 0x20]
	0x03CA3D14 B 0x3CA3DB0
	0x03CA3D18 LDR X8, [X9 + 0x20]
	0x03CA3D1C MOV X1, X24
	0x03CA3D20 LDR X8, [X8 + 0xC0]
	0x03CA3D24 LDR X2, [X8 + 0x70]
	0x03CA3D28 BL 0x301BF90
	0x03CA3D2C LDR X0, [X20 + 0x130]
	0x03CA3D30 CBZ X0, 0x3CA4414
	0x03CA3D34 ADRP X8, 0x4BE000
	0x03CA3D38 LDR X8, [X8 + 0x2B0]
	0x03CA3D3C MOV W1, W23
	0x03CA3D40 MOV X2, X24
	0x03CA3D44 LDR X3, [X8]
	0x03CA3D48 BL 0x2B0F05C
	0x03CA3D4C B 0x3CA3E50
	0x03CA3D50 LDR X0, [X20 + 0x1E0]
	0x03CA3D54 CBZ X0, 0x3CA4414
	0x03CA3D58 ADRP X9, 0x456000
	0x03CA3D5C LDR W10, [X0 + 0x1C]
	0x03CA3D60 LDR X8, [X0 + 0x10]
	0x03CA3D64 LDR X9, [X9 + 0x1D0]
	0x03CA3D68 ADD W10, W10, 0x1
	0x03CA3D6C LDR X9, [X9]
	0x03CA3D70 STR W10, [X0 + 0x1C]
	0x03CA3D74 CBZ X8, 0x3CA4414
	0x03CA3D78 LDRSW X10, [X0 + 0x18]
	0x03CA3D7C LDR W11, [X8 + 0x18]
	0x03CA3D80 CMP W10, W11
	0x03CA3D84 B.CS 0x3CA3E34
	0x03CA3D88 ADD W9, W10, 0x1
	0x03CA3D8C ADD X8, X8, X10, 0x2, LSL
	0x03CA3D90 STR W9, [X0 + 0x18]
	0x03CA3D94 STR W23, [X8 + 0x20]
	0x03CA3D98 B 0x3CA3E48
	0x03CA3D9C LDR X8, [X9 + 0x20]
	0x03CA3DA0 MOV W1, W25
	0x03CA3DA4 LDR X8, [X8 + 0xC0]
	0x03CA3DA8 LDR X2, [X8 + 0x70]
	0x03CA3DAC BL 0x30C1698
	0x03CA3DB0 LDR X0, [X20 + 0x1D8]
	0x03CA3DB4 CBZ X0, 0x3CA4414
	0x03CA3DB8 ADRP X8, 0x4AB000
	0x03CA3DBC LDR X8, [X8 + 0x828]
	0x03CA3DC0 MOV W1, W23
	0x03CA3DC4 LDR X2, [X8]
	0x03CA3DC8 BL 0x2DCDCE0
	0x03CA3DCC TBZ X0, 0x0, 0x3CA3E50
	0x03CA3DD0 LDR X0, [X20 + 0x1D0]
	0x03CA3DD4 CBZ X0, 0x3CA4414
	0x03CA3DD8 ADRP X9, 0x4BE000
	0x03CA3DDC LDR W10, [X0 + 0x1C]
	0x03CA3DE0 LDR X8, [X0 + 0x10]
	0x03CA3DE4 LDR X9, [X9 + 0x4C0]
	0x03CA3DE8 ADD W10, W10, 0x1
	0x03CA3DEC LDR X9, [X9]
	0x03CA3DF0 STR W10, [X0 + 0x1C]
	0x03CA3DF4 CBZ X8, 0x3CA4414
	0x03CA3DF8 LDRSW X10, [X0 + 0x18]
	0x03CA3DFC LDR W11, [X8 + 0x18]
	0x03CA3E00 CMP W10, W11
	0x03CA3E04 B.CS 0x3CA3E1C
	0x03CA3E08 ADD W9, W10, 0x1
	0x03CA3E0C ADD X8, X8, X10, 0x3, LSL
	0x03CA3E10 STR W9, [X0 + 0x18]
	0x03CA3E14 STR X24, [X8 + 0x20]
	0x03CA3E18 B 0x3CA3E50
	0x03CA3E1C LDR X8, [X9 + 0x20]
	0x03CA3E20 MOV X1, X24
	0x03CA3E24 LDR X8, [X8 + 0xC0]
	0x03CA3E28 LDR X2, [X8 + 0x70]
	0x03CA3E2C BL 0x301BF90
	0x03CA3E30 B 0x3CA3E50
	0x03CA3E34 LDR X8, [X9 + 0x20]
	0x03CA3E38 MOV W1, W23
	0x03CA3E3C LDR X8, [X8 + 0xC0]
	0x03CA3E40 LDR X2, [X8 + 0x70]
	0x03CA3E44 BL 0x30C1698
	0x03CA3E48 MOVZ W8, 0x1
	0x03CA3E4C STR W8, [X31 + 0xC]
	0x03CA3E50 CMP X27, X26
	0x03CA3E54 B.EQ 0x3CA3E70
	0x03CA3E58 LDR W8, [X22 + 0x18]
	0x03CA3E5C ADD X26, X26, 0x1
	0x03CA3E60 CMP X26, X8
	0x03CA3E64 B.CC 0x3CA3B54
	0x03CA3E68 B 0x3CA4418
	0x03CA3E6C STR W31, [X31 + 0xC]
	0x03CA3E70 LDR X8, [X20 + 0x1C0]
	0x03CA3E74 CBZ X8, 0x3CA4414

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x745000
	015 Move W8, [X19+742]
	016 Move W20, W4
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move [X31+20], W3
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {66}
	025 Move X0, 0x4BF000
	026 Move X0, [X0+584]
	027 Call 0x1C17CF4
	028 Move X0, 0x4BF000
	029 Move X0, [X0+600]
	030 Call 0x1C17CF4
	031 Move X0, 0x453000
	032 Move X0, [X0+2520]
	033 Call 0x1C17CF4
	034 Move X0, 0x458000
	035 Move X0, [X0+1656]
	036 Call 0x1C17CF4
	037 Move X0, 0x458000
	038 Move X0, [X0+1672]
	039 Call 0x1C17CF4
	040 Move X0, 0x452000
	041 Move X0, [X0+3592]
	042 Call 0x1C17CF4
	043 Move X0, 0x457000
	044 Move X0, [X0+464]
	045 Call 0x1C17CF4
	046 Move X0, 0x4A8000
	047 Move X0, [X0+2896]
	048 Call 0x1C17CF4
	049 Move X0, 0x47E000
	050 Move X0, [X0+1368]
	051 Call 0x1C17CF4
	052 Move X0, 0x4BF000
	053 Move X0, [X0+1200]
	054 Call 0x1C17CF4
	055 Move X0, 0x4B6000
	056 Move X0, [X0+2136]
	057 Call 0x1C17CF4
	058 Move X0, 0x4BF000
	059 Move X0, [X0+1208]
	060 Call 0x1C17CF4
	061 Move X0, 0x451000
	062 Move X0, [X0+1432]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+742], W8
	066 Move [X31+24], X31
	067 Move [X21], X31
	068 Move X8, [X23+304]
	069 Compare X8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, X23
	072 Call FontAsset.ReadFontAssetDefinition, X0
	073 Move X8, [X23+304]
	074 Compare X8, 0
	075 JumpIfEqual {303}
	076 Move X8, [X23+480]
	077 Compare X8, 0
	078 JumpIfEqual {318}
	079 Move W9, [X8+28]
	080 Move [X31+8], X21
	081 Add W9, W9, 1
	082 Move [X8+24], W31
	083 Move [X8+28], W9
	084 Compare X22, 0
	085 JumpIfEqual {318}
	086 Move W8, [X22+16]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X19, 0x4BF000
	089 Move X21, 0x453000
	090 Move X29, 0x4BF000
	091 Move X19, [X19+600]
	092 Move X21, [X21+2520]
	093 Move X29, [X29+1208]
	094 Move W24, W31
	095 Move X0, X22
	096 Move W1, W24
	097 Move X2, X31
	098 Call String.get_Chars, X0, X1
	099 Move X8, [X23+304]
	100 Compare X8, 0
	101 JumpIfEqual {318}
	102 Move X9, 0x4BF000
	103 Move X9, [X9+584]
	104 And W25, W0, 0xFFFF
	105 Move X0, X8
	106 Move W1, W25
	107 Move X2, [X9]
	108 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {286}
	113 Move TEMP, X20
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {129}
	117 Move W8, [X23+168]
	118 Subtract W8, W8, 1
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add X2, X31, 24
	121 Move X0, X23
	122 Move W1, W25
	123 Move W3, W31
	124 Call FontAsset.TryAddCharacterInternal, X0, X1, X2, X3
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {286}
	129 Move W8, [X31+20]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {262}
	134 Move X0, [X19]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {140}
	138 Call 0x1C17DFC
	139 Move X0, [X19]
	140 Move X8, [X0+184]
	141 Move X9, [X8+80]
	142 Compare X9, 0
	143 JumpIfEqual {158}
	144 Move W9, [X0+224]
	145 Compare W9, 0
	146 JumpIfNotEqual {150}
	147 Call 0x1C17DFC
	148 Move X8, [X19]
	149 Move X8, [X8+184]
	150 Move X0, [X8+80]
	151 Compare X0, 0
	152 JumpIfEqual {318}
	153 Move X8, 0x458000
	154 Move X8, [X8+1656]
	155 Move X1, [X8]
	156 Call HashSet`1<Int32>.Clear, X0
	157 Move X0, [X19]
	158 Move X8, 0x452000
	159 Move X8, [X8+3592]
	160 Move X0, [X8]
	161 Call 0x1C17F10
	162 Move X8, 0x458000
	163 Move X8, [X8+1672]
	164 Move X26, X0
	165 Move X1, [X8]
	166 Call HashSet`1<Int32>..ctor, X0
	167 Move X0, [X19]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {173}
	171 Call 0x1C17DFC
	172 Move X0, [X19]
	173 Move X8, [X0+184]
	174 Move [X8+80], X26
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X19]
	180 Move X8, [X0+184]
	181 Move X0, X23
	182 Move X1, X31
	183 Move X26, [X8+80]
	184 Call Object.GetInstanceID, X0
	185 Compare X26, 0
	186 JumpIfEqual {318}
	187 Move X2, [X21]
	188 Move W1, W0
	189 Move X0, X26
	190 Call HashSet`1<Int32>.Add, X0, X1
	191 Move X0, [X23+376]
	192 Compare X0, 0
	193 JumpIfEqual {262}
	194 Move W8, [X0+24]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move W26, W31
	197 Move X2, [X29]
	198 Move W1, W26
	199 Call List`1<Object>.get_Item, X0, X1
	200 Move X8, 0x451000
	201 Move X8, [X8+1432]
	202 Move X27, X0
	203 Move X8, [X8]
	204 Move W9, [X8+224]
	205 Compare W9, 0
	206 JumpIfNotEqual {209}
	207 Move X0, X8
	208 Call 0x1C17DFC
	209 Move X0, X27
	210 Move X1, X31
	211 Move X2, X31
	212 Call Object.op_Inequality, X0, X1
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {262}
	217 Move X0, [X23+376]
	218 Compare X0, 0
	219 JumpIfEqual {318}
	220 Move X2, [X29]
	221 Move W1, W26
	222 Call List`1<Object>.get_Item, X0, X1
	223 Compare X0, 0
	224 JumpIfEqual {318}
	225 Move X1, X31
	226 Move X27, X0
	227 Call Object.GetInstanceID, X0
	228 Move X8, [X19]
	229 Move W28, W0
	230 Move W9, [X8+224]
	231 Compare W9, 0
	232 JumpIfNotEqual {236}
	233 Move X0, X8
	234 Call 0x1C17DFC
	235 Move X8, [X19]
	236 Move X8, [X8+184]
	237 Move X0, [X8+80]
	238 Compare X0, 0
	239 JumpIfEqual {318}
	240 Move X2, [X21]
	241 Move W1, W28
	242 Call HashSet`1<Int32>.Add, X0, X1
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {256}
	247 And W3, W20, 1
	248 Move W2, 1
	249 Move X0, X27
	250 Move W1, W25
	251 Call FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfEqual {286}
	256 Move X0, [X23+376]
	257 Compare X0, 0
	258 JumpIfEqual {318}
	259 Move W8, [X0+24]
	260 Add W26, W26, 1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X0, [X23+480]
	263 Compare X0, 0
	264 JumpIfEqual {318}
	265 Move X9, 0x457000
	266 Move W10, [X0+28]
	267 Move X8, [X0+16]
	268 Move X9, [X9+464]
	269 Add W10, W10, 1
	270 Move X9, [X9]
	271 Move [X0+28], W10
	272 Compare X8, 0
	273 JumpIfEqual {318}
	274 NotImplemented "Instruction LDRSW not yet implemented."
	275 Move W11, [X8+24]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Add W9, W10, 1
	278 Add X8, X8, X10
	279 Move [X0+24], W9
	280 Move [X8+32], W25
	281 Move X8, [X9+32]
	282 Move W1, W25
	283 Move X8, [X8+192]
	284 Move X2, [X8+112]
	285 Call List`1<UInt32>.AddWithResize, X0, X1
	286 Move W8, [X22+16]
	287 Add W24, W24, 1
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X0, [X23+480]
	290 Compare X0, 0
	291 JumpIfEqual {318}
	292 Move W8, [X0+24]
	293 Move X19, [X31+8]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X8, 0x47E000
	296 Move X8, [X8+1368]
	297 Move X1, [X8]
	298 Call List`1<UInt32>.ToArray, X0
	299 Move X8, X0
	300 Move W0, W31
	301 Move [X19], X8
	302 Move W0, 1
	303 Move W0, W31
	304 Move X20, [X31+112]
	305 Move X19, [X31+120]
	306 Move X22, [X31+96]
	307 Move X21, [X31+104]
	308 Move X24, [X31+80]
	309 Move X23, [X31+88]
	310 Move X26, [X31+64]
	311 Move X25, [X31+72]
	312 Move X28, [X31+48]
	313 Move X27, [X31+56]
	314 Move X29, [X31+32]
	315 Move X30, [X31+40]
	316 Add X31, X31, 128
	317 Return X0
	318 Call 0x1C17F20

Method: System.Boolean HasCharacters(System.String text)

Disassembly:
	0x03CA3E78 LDR W8, [X8 + 0x18]
	0x03CA3E7C CBZ W8, 0x3CA431C
	0x03CA3E80 LDR X8, [X20 + 0x140]
	0x03CA3E84 CBZ X8, 0x3CA4414
	0x03CA3E88 LDRSW X9, [X20 + 0x148]
	0x03CA3E8C LDR W10, [X8 + 0x18]
	0x03CA3E90 CMP W9, W10
	0x03CA3E94 B.CS 0x3CA4418
	0x03CA3E98 ADD X8, X8, X9, 0x3, LSL
	0x03CA3E9C LDR X0, [X8 + 0x20]
	0x03CA3EA0 CBZ X0, 0x3CA4414
	0x03CA3EA4 LDR X8, [X0]
	0x03CA3EA8 LDP X9, X1, [X8 + 0x188]
	0x03CA3EAC BLR X9
	0x03CA3EB0 LDR W8, [X20 + 0x150]
	0x03CA3EB4 CMP W0, W8
	0x03CA3EB8 B.NE 0x3CA3EF8
	0x03CA3EBC LDR X8, [X20 + 0x140]
	0x03CA3EC0 CBZ X8, 0x3CA4414
	0x03CA3EC4 LDRSW X9, [X20 + 0x148]
	0x03CA3EC8 LDR W10, [X8 + 0x18]
	0x03CA3ECC CMP W9, W10
	0x03CA3ED0 B.CS 0x3CA4418
	0x03CA3ED4 ADD X8, X8, X9, 0x3, LSL
	0x03CA3ED8 LDR X0, [X8 + 0x20]
	0x03CA3EDC CBZ X0, 0x3CA4414
	0x03CA3EE0 LDR X8, [X0]
	0x03CA3EE4 LDP X9, X1, [X8 + 0x1A8]
	0x03CA3EE8 BLR X9
	0x03CA3EEC LDR W8, [X20 + 0x154]
	0x03CA3EF0 CMP W0, W8
	0x03CA3EF4 B.EQ 0x3CA3F70
	0x03CA3EF8 LDR X8, [X20 + 0x140]
	0x03CA3EFC CBZ X8, 0x3CA4414
	0x03CA3F00 LDRSW X9, [X20 + 0x148]
	0x03CA3F04 LDR W10, [X8 + 0x18]
	0x03CA3F08 CMP W9, W10
	0x03CA3F0C B.CS 0x3CA4418
	0x03CA3F10 ADD X8, X8, X9, 0x3, LSL
	0x03CA3F14 LDR X0, [X8 + 0x20]
	0x03CA3F18 CBZ X0, 0x3CA4414
	0x03CA3F1C LDR W2, [X20 + 0x154]
	0x03CA3F20 LDR W1, [X20 + 0x150]
	0x03CA3F24 MOV X3, X31
	0x03CA3F28 BL 0x3C1C54C
	0x03CA3F2C LDR X8, [X20 + 0x140]
	0x03CA3F30 CBZ X8, 0x3CA4414
	0x03CA3F34 LDRSW X9, [X20 + 0x148]
	0x03CA3F38 LDR W10, [X8 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x745000
	009 Move W8, [X21+743]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BF000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+743], W8
	021 Move X8, [X20+304]
	022 Compare X8, 0
	023 JumpIfEqual {53}
	024 Compare X19, 0
	025 JumpIfEqual {62}
	026 Move W8, [X19+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X24, 0x4BF000
	031 Move X24, [X24+584]
	032 Move W23, 1
	033 Move X21, [X20+304]
	034 Subtract W1, W23, 1
	035 Move X0, X19
	036 Move X2, X31
	037 Call String.get_Chars, X0, X1
	038 Compare X21, 0
	039 JumpIfEqual {62}
	040 Move X2, [X24]
	041 And W1, W0, 0xFFFF
	042 Move X0, X21
	043 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {52}
	048 Move W8, [X19+16]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Add W23, W23, 1
	052 Xor W8, W22, 1
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 And W0, W8, 1
	060 Move X30, [X31+64]
	061 Return X0
	062 Call 0x1C17F20

Method: System.String GetCharacters(UnityEngine.TextCore.Text.FontAsset fontAsset)

Disassembly:
	0x03CA3F3C CMP W9, W10
	0x03CA3F40 B.CS 0x3CA4418
	0x03CA3F44 ADRP X10, 0x4B5000
	0x03CA3F48 LDR X10, [X10 + 0xBC0]
	0x03CA3F4C ADD X8, X8, X9, 0x3, LSL
	0x03CA3F50 LDR X22, [X8 + 0x20]
	0x03CA3F54 LDR X0, [X10]
	0x03CA3F58 LDR W9, [X0 + 0xE0]
	0x03CA3F5C CBNZ W9, 0x3CA3F64
	0x03CA3F60 BL 0x1C16DFC
	0x03CA3F64 MOV X0, X22
	0x03CA3F68 MOV X1, X31
	0x03CA3F6C BL 0x3C9E1E0
	0x03CA3F70 LDR X8, [X20 + 0x140]
	0x03CA3F74 CBZ X8, 0x3CA4414
	0x03CA3F78 LDRSW X9, [X20 + 0x148]
	0x03CA3F7C LDR W10, [X8 + 0x18]
	0x03CA3F80 CMP W9, W10
	0x03CA3F84 B.CS 0x3CA4418
	0x03CA3F88 ADRP X10, 0x4B5000
	0x03CA3F8C LDR X22, [X20 + 0x1C0]
	0x03CA3F90 LDR W23, [X20 + 0x158]
	0x03CA3F94 LDR X10, [X10 + 0xBC0]
	0x03CA3F98 ADD X8, X8, X9, 0x3, LSL
	0x03CA3F9C LDP X24, X26, [X20 + 0x160]
	0x03CA3FA0 LDR W25, [X20 + 0x15C]
	0x03CA3FA4 LDR X0, [X10]
	0x03CA3FA8 LDR X27, [X8 + 0x20]
	0x03CA3FAC LDR W9, [X0 + 0xE0]
	0x03CA3FB0 CBNZ W9, 0x3CA3FB8
	0x03CA3FB4 BL 0x1C16DFC
	0x03CA3FB8 ADD X7, X31, 0x18
	0x03CA3FBC MOV X0, X22
	0x03CA3FC0 MOV W1, W23
	0x03CA3FC4 MOV W2, W31
	0x03CA3FC8 MOV X3, X26
	0x03CA3FCC MOV X4, X24
	0x03CA3FD0 MOV W5, W25
	0x03CA3FD4 MOV X6, X27
	0x03CA3FD8 STR X31, [X31]
	0x03CA3FDC BL 0x3C9D530
	0x03CA3FE0 LDR X8, [X31 + 0x18]
	0x03CA3FE4 CBZ X8, 0x3CA4414
	0x03CA3FE8 ADRP X26, 0x4B5000
	0x03CA3FEC ADRP X27, 0x4B5000
	0x03CA3FF0 ADRP X25, 0x456000
	0x03CA3FF4 LDR X26, [X26 + 0xC10]
	0x03CA3FF8 LDR X27, [X27 + 0xC98]
	0x03CA3FFC LDR X25, [X25 + 0x1D0]
	0x03CA4000 MOV W22, W0
	0x03CA4004 MOV X21, X31
	0x03CA4008 LDR W9, [X8 + 0x18]
	0x03CA400C CMP W21, W9
	0x03CA4010 B.GE 0x3CA4178
	0x03CA4014 CMP W21, W9
	0x03CA4018 B.CS 0x3CA4418
	0x03CA401C ADD X8, X8, X21, 0x3, LSL
	0x03CA4020 LDR X24, [X8 + 0x20]
	0x03CA4024 CBZ X24, 0x3CA4178
	0x03CA4028 MOV X0, X24
	0x03CA402C MOV X1, X31
	0x03CA4030 BL 0x3C9C494
	0x03CA4034 LDR W1, [X20 + 0x148]
	0x03CA4038 MOV W23, W0
	0x03CA403C MOV X0, X24
	0x03CA4040 MOV X2, X31
	0x03CA4044 BL 0x3C9C4F8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x745000
	009 Move W8, [X20+744]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x453000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move X0, 0x4BF000
	019 Move X0, [X0+720]
	020 Call 0x1C17CF4
	021 Move X0, 0x4BF000
	022 Move X0, [X0+728]
	023 Call 0x1C17CF4
	024 Move X0, 0x453000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+744], W8
	029 NotImplemented "Instruction STRH not yet implemented."
	030 Compare X19, 0
	031 JumpIfEqual {71}
	032 Move X0, [X19+296]
	033 Compare X0, 0
	034 JumpIfEqual {71}
	035 Move X8, 0x453000
	036 Move X8, [X8+632]
	037 Move X22, 0x4BF000
	038 Move X23, 0x453000
	039 Move W20, W31
	040 Move X8, [X8]
	041 Move X8, [X8+184]
	042 Move X21, [X8]
	043 Move X22, [X22+728]
	044 Move X23, [X23+368]
	045 Move W8, [X0+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X2, [X22]
	048 Move W1, W20
	049 Call List`1<Object>.get_Item, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {71}
	052 Move W8, [X0+20]
	053 Move X0, [X23]
	054 NotImplemented "Instruction STRH not yet implemented."
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Add X0, X31, 12
	060 Move X1, X31
	061 Call Char.ToString, X0
	062 Move X1, X0
	063 Move X0, X21
	064 Move X2, X31
	065 Call String.Concat, X0, X1
	066 Move X21, X0
	067 Move X0, [X19+296]
	068 Add W20, W20, 1
	069 Compare X0, 0
	070 JumpIfNotEqual {45}
	071 Call 0x1C17F20
	072 Move X0, X21
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X30, [X31+16]
	078 Move X23, [X31+24]
	079 Add X31, X31, 64
	080 Return X0

Method: System.Int32[] GetCharactersArray(UnityEngine.TextCore.Text.FontAsset fontAsset)

Disassembly:
	0x03CA4048 LDR X0, [X20 + 0x118]
	0x03CA404C CBZ X0, 0x3CA4414
	0x03CA4050 LDR W10, [X0 + 0x1C]
	0x03CA4054 LDR X8, [X0 + 0x10]
	0x03CA4058 LDR X9, [X26]
	0x03CA405C ADD W10, W10, 0x1
	0x03CA4060 STR W10, [X0 + 0x1C]
	0x03CA4064 CBZ X8, 0x3CA4414
	0x03CA4068 LDRSW X10, [X0 + 0x18]
	0x03CA406C LDR W11, [X8 + 0x18]
	0x03CA4070 CMP W10, W11
	0x03CA4074 B.CS 0x3CA408C
	0x03CA4078 ADD W9, W10, 0x1
	0x03CA407C ADD X8, X8, X10, 0x3, LSL
	0x03CA4080 STR W9, [X0 + 0x18]
	0x03CA4084 STR X24, [X8 + 0x20]
	0x03CA4088 B 0x3CA40A0
	0x03CA408C LDR X8, [X9 + 0x20]
	0x03CA4090 MOV X1, X24
	0x03CA4094 LDR X8, [X8 + 0xC0]
	0x03CA4098 LDR X2, [X8 + 0x70]
	0x03CA409C BL 0x301BF90
	0x03CA40A0 LDR X0, [X20 + 0x120]
	0x03CA40A4 CBZ X0, 0x3CA4414
	0x03CA40A8 LDR X3, [X27]
	0x03CA40AC MOV W1, W23
	0x03CA40B0 MOV X2, X24
	0x03CA40B4 BL 0x2B0F05C
	0x03CA40B8 LDR X0, [X20 + 0x1B8]
	0x03CA40BC CBZ X0, 0x3CA4414
	0x03CA40C0 LDR W10, [X0 + 0x1C]
	0x03CA40C4 LDR X8, [X0 + 0x10]
	0x03CA40C8 LDR X9, [X25]
	0x03CA40CC ADD W10, W10, 0x1
	0x03CA40D0 STR W10, [X0 + 0x1C]
	0x03CA40D4 CBZ X8, 0x3CA4414
	0x03CA40D8 LDRSW X10, [X0 + 0x18]
	0x03CA40DC LDR W11, [X8 + 0x18]
	0x03CA40E0 CMP W10, W11
	0x03CA40E4 B.CS 0x3CA40FC
	0x03CA40E8 ADD W9, W10, 0x1
	0x03CA40EC ADD X8, X8, X10, 0x2, LSL
	0x03CA40F0 STR W9, [X0 + 0x18]
	0x03CA40F4 STR W23, [X8 + 0x20]
	0x03CA40F8 B 0x3CA4110
	0x03CA40FC LDR X8, [X9 + 0x20]
	0x03CA4100 MOV W1, W23
	0x03CA4104 LDR X8, [X8 + 0xC0]
	0x03CA4108 LDR X2, [X8 + 0x70]
	0x03CA410C BL 0x30C1698
	0x03CA4110 LDR X0, [X20 + 0x1B0]
	0x03CA4114 CBZ X0, 0x3CA4414
	0x03CA4118 LDR W10, [X0 + 0x1C]
	0x03CA411C LDR X8, [X0 + 0x10]
	0x03CA4120 LDR X9, [X25]
	0x03CA4124 ADD W10, W10, 0x1
	0x03CA4128 STR W10, [X0 + 0x1C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x744000
	008 Move W8, [X20+745]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x451000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move X0, 0x4BE000
	018 Move X0, [X0+720]
	019 Call 0x1C17CF4
	020 Move X0, 0x4BE000
	021 Move X0, [X0+728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+745], W8
	025 Compare X19, 0
	026 JumpIfEqual {61}
	027 Move X8, [X19+296]
	028 Compare X8, 0
	029 JumpIfEqual {61}
	030 Move X9, 0x451000
	031 Move X9, [X9+3672]
	032 Move W1, [X8+24]
	033 Move X0, [X9]
	034 Call 0x1C17D6C
	035 Move X8, [X19+296]
	036 Compare X8, 0
	037 JumpIfEqual {61}
	038 Move X22, 0x4BE000
	039 Move X22, [X22+728]
	040 Move X20, X0
	041 Move X21, X31
	042 Add X23, X0, 32
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X2, [X22]
	046 Move X0, X8
	047 Move W1, W21
	048 Call List`1<Object>.get_Item, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {61}
	051 Compare X20, 0
	052 JumpIfEqual {61}
	053 Move W8, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W8, [X0+20]
	056 Move [X23], W8
	057 Move X8, [X19+296]
	058 Add X21, X21, 1
	059 Compare X8, 0
	060 JumpIfNotEqual {43}
	061 Call 0x1C17F20
	062 Move X0, X20
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return X0
	070 Call 0x1C17F28

Method: System.UInt32 GetGlyphIndex(System.UInt32 unicode)

Disassembly:
	0x03CA412C CBZ X8, 0x3CA4414
	0x03CA4130 LDRSW X10, [X0 + 0x18]
	0x03CA4134 LDR W11, [X8 + 0x18]
	0x03CA4138 CMP W10, W11
	0x03CA413C B.CS 0x3CA4154
	0x03CA4140 ADD W9, W10, 0x1
	0x03CA4144 ADD X8, X8, X10, 0x2, LSL
	0x03CA4148 STR W9, [X0 + 0x18]
	0x03CA414C STR W23, [X8 + 0x20]
	0x03CA4150 B 0x3CA4168
	0x03CA4154 LDR X8, [X9 + 0x20]
	0x03CA4158 MOV W1, W23
	0x03CA415C LDR X8, [X8 + 0xC0]
	0x03CA4160 LDR X2, [X8 + 0x70]
	0x03CA4164 BL 0x30C1698
	0x03CA4168 LDR X8, [X31 + 0x18]
	0x03CA416C ADD X21, X21, 0x1
	0x03CA4170 CBNZ X8, 0x3CA4008
	0x03CA4174 B 0x3CA4414
	0x03CA4178 LDR X8, [X20 + 0x1C0]
	0x03CA417C CBZ X8, 0x3CA4414
	0x03CA4180 LDR W9, [X8 + 0x1C]
	0x03CA4184 ADD W9, W9, 0x1
	0x03CA4188 STP W31, W9, [X8 + 0x18]
	0x03CA418C LDR X0, [X20 + 0x1D0]
	0x03CA4190 CBZ X0, 0x3CA4414
	0x03CA4194 ADRP X26, 0x4BD000
	0x03CA4198 ADRP X21, 0x4B4000
	0x03CA419C ADRP X27, 0x4BD000
	0x03CA41A0 ADRP X28, 0x4BD000
	0x03CA41A4 ADRP X29, 0x4BD000
	0x03CA41A8 LDR X26, [X26 + 0x2D8]
	0x03CA41AC LDR X21, [X21 + 0xE48]
	0x03CA41B0 LDR X27, [X27 + 0x4C0]
	0x03CA41B4 LDR X28, [X28 + 0x2B0]
	0x03CA41B8 LDR X29, [X29 + 0x4F8]
	0x03CA41BC MOV W23, W31
	0x03CA41C0 LDR W8, [X0 + 0x18]
	0x03CA41C4 CMP W23, W8
	0x03CA41C8 B.GE 0x3CA42F8
	0x03CA41CC LDR X2, [X26]
	0x03CA41D0 MOV W1, W23
	0x03CA41D4 BL 0x301BCCC
	0x03CA41D8 CBZ X0, 0x3CA4414
	0x03CA41DC MOV X24, X0
	0x03CA41E0 LDR X0, [X20 + 0x120]
	0x03CA41E4 CBZ X0, 0x3CA4414
	0x03CA41E8 LDR W1, [X24 + 0x28]
	0x03CA41EC LDR X3, [X21]
	0x03CA41F0 ADD X2, X31, 0x10
	0x03CA41F4 BL 0x2B10A7C
	0x03CA41F8 TBZ X0, 0x0, 0x3CA4248
	0x03CA41FC LDR X8, [X31 + 0x10]
	0x03CA4200 STP X20, X8, [X24 + 0x18]
	0x03CA4204 LDR X0, [X20 + 0x128]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x744000
	006 Move W8, [X21+746]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x4BE000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move X0, 0x4BE000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move X0, 0x4B5000
	020 Move X0, [X0+3008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+746], W8
	024 Move X0, [X20+304]
	025 Compare X0, 0
	026 JumpIfEqual {72}
	027 Move X8, 0x4BE000
	028 Move X8, [X8+584]
	029 Move W1, W19
	030 Move X2, [X8]
	031 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {47}
	036 Move X0, [X20+304]
	037 Compare X0, 0
	038 JumpIfEqual {72}
	039 Move X8, 0x4BE000
	040 Move X8, [X8+592]
	041 Move W1, W19
	042 Move X2, [X8]
	043 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	044 Compare X0, 0
	045 JumpIfEqual {72}
	046 Move W0, [X0+40]
	047 Move X0, X20
	048 Call FontAsset.LoadFontFace, X0
	049 Compare W0, 0
	050 JumpIfEqual {57}
	051 Move W0, W31
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Move X8, 0x4B5000
	058 Move X8, [X8+3008]
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move W0, W19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X1, X31
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Call FontEngine.GetGlyphIndex, X0
	071 Return X0
	072 Call 0x1C17F20

Method: System.Void RegisterFontAssetForFontFeatureUpdate(UnityEngine.TextCore.Text.FontAsset fontAsset)

Disassembly:
	0x03CA4208 CBZ X0, 0x3CA4414
	0x03CA420C LDR W10, [X0 + 0x1C]
	0x03CA4210 LDR X8, [X0 + 0x10]
	0x03CA4214 LDR X9, [X27]
	0x03CA4218 ADD W10, W10, 0x1
	0x03CA421C STR W10, [X0 + 0x1C]
	0x03CA4220 CBZ X8, 0x3CA4414
	0x03CA4224 LDRSW X10, [X0 + 0x18]
	0x03CA4228 LDR W11, [X8 + 0x18]
	0x03CA422C CMP W10, W11
	0x03CA4230 B.CS 0x3CA4290
	0x03CA4234 ADD W9, W10, 0x1
	0x03CA4238 ADD X8, X8, X10, 0x3, LSL
	0x03CA423C STR W9, [X0 + 0x18]
	0x03CA4240 STR X24, [X8 + 0x20]
	0x03CA4244 B 0x3CA42A4
	0x03CA4248 LDR X0, [X20 + 0x1C0]
	0x03CA424C CBZ X0, 0x3CA4414
	0x03CA4250 LDR W10, [X0 + 0x1C]
	0x03CA4254 LDR W1, [X24 + 0x28]
	0x03CA4258 LDR X8, [X0 + 0x10]
	0x03CA425C LDR X9, [X25]
	0x03CA4260 ADD W10, W10, 0x1
	0x03CA4264 STR W10, [X0 + 0x1C]
	0x03CA4268 CBZ X8, 0x3CA4414
	0x03CA426C LDRSW X10, [X0 + 0x18]
	0x03CA4270 LDR W11, [X8 + 0x18]
	0x03CA4274 CMP W10, W11
	0x03CA4278 B.CS 0x3CA42D8
	0x03CA427C ADD W9, W10, 0x1
	0x03CA4280 ADD X8, X8, X10, 0x2, LSL
	0x03CA4284 STR W9, [X0 + 0x18]
	0x03CA4288 STR W1, [X8 + 0x20]
	0x03CA428C B 0x3CA42E8
	0x03CA4290 LDR X8, [X9 + 0x20]
	0x03CA4294 MOV X1, X24
	0x03CA4298 LDR X8, [X8 + 0xC0]
	0x03CA429C LDR X2, [X8 + 0x70]
	0x03CA42A0 BL 0x301BF90
	0x03CA42A4 LDR X0, [X20 + 0x130]
	0x03CA42A8 CBZ X0, 0x3CA4414
	0x03CA42AC LDR W1, [X24 + 0x14]
	0x03CA42B0 LDR X3, [X28]
	0x03CA42B4 MOV X2, X24
	0x03CA42B8 BL 0x2B0F05C
	0x03CA42BC LDR X0, [X20 + 0x1D0]
	0x03CA42C0 CBZ X0, 0x3CA4414
	0x03CA42C4 LDR X2, [X29]
	0x03CA42C8 MOV W1, W23
	0x03CA42CC BL 0x301DA48
	0x03CA42D0 SUB W23, W23, 0x1
	0x03CA42D4 B 0x3CA42E8
	0x03CA42D8 LDR X8, [X9 + 0x20]
	0x03CA42DC LDR X8, [X8 + 0xC0]
	0x03CA42E0 LDR X2, [X8 + 0x70]
	0x03CA42E4 BL 0x30C1698
	0x03CA42E8 LDR X0, [X20 + 0x1D0]
	0x03CA42EC ADD W23, W23, 0x1
	0x03CA42F0 CBNZ X0, 0x3CA41C0
	0x03CA42F4 B 0x3CA4414
	0x03CA42F8 LDRB W8, [X20 + 0x14C]
	0x03CA42FC CMP W8, 0x0
	0x03CA4300 CSET W8, EQ
	0x03CA4304 ORR W9, W22, W8, 0x0
	0x03CA4308 CSET W8, NE
	0x03CA430C TBZ X9, 0x0, 0x3CA4324
	0x03CA4310 LDR W21, [X31 + 0x8]
	0x03CA4314 ORR W22, W22, W8, 0x0
	0x03CA4318 B 0x3CA4338
	0x03CA431C STR X22, [X19]
	0x03CA4320 B 0x3CA3A64
	0x03CA4324 LDR W21, [X31 + 0x8]
	0x03CA4328 MOV X0, X20
	0x03CA432C BL 0x3CA441C
	0x03CA4330 TBZ X0, 0x0, 0x3CA4328
	0x03CA4334 MOVZ W22, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x744000
	006 Move W8, [X20+747]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x4BE000
	013 Move X0, [X0+600]
	014 Call 0x1C17CF4
	015 Move X0, 0x452000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move X0, 0x4BE000
	019 Move X0, [X0+1224]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+747], W8
	023 Compare X19, 0
	024 JumpIfEqual {95}
	025 Move X21, 0x4BE000
	026 Move W20, [X19+32]
	027 Move X21, [X21+600]
	028 Compare W20, 0
	029 JumpIfNotEqual {35}
	030 Move X0, X19
	031 Move X1, X31
	032 Call Object.GetInstanceID, X0
	033 Move W20, W0
	034 Move [X19+32], W0
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X8, [X0+184]
	042 Move X0, [X8+96]
	043 Compare X0, 0
	044 JumpIfEqual {95}
	045 Move X8, 0x452000
	046 Move X8, [X8+2520]
	047 Move W1, W20
	048 Move X2, [X8]
	049 Call HashSet`1<Int32>.Add, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {80}
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move X0, [X8+88]
	062 Compare X0, 0
	063 JumpIfEqual {95}
	064 Move X9, 0x4BE000
	065 Move X9, [X9+1224]
	066 Move W10, [X0+28]
	067 Move X8, [X0+16]
	068 Move X9, [X9]
	069 Add W10, W10, 1
	070 Move [X0+28], W10
	071 Compare X8, 0
	072 JumpIfEqual {95}
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Move W11, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add W9, W10, 1
	077 Add X8, X8, X10
	078 Move [X0+24], W9
	079 Move [X8+32], X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Return 
	085 Move X8, [X9+32]
	086 Move X1, X19
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X8, [X8+192]
	090 Move X2, [X8+112]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Call List`1<Object>.AddWithResize, X0, X1
	094 Return 
	095 Call 0x1C17F20

Method: System.Void UpdateFontFeaturesForFontAssetsInQueue()

Disassembly:
	0x03CA4360 MOV W1, W21
	0x03CA4364 BL 0x301BCCC
	0x03CA4368 CBZ X0, 0x3CA4414
	0x03CA436C MOV X8, X0
	0x03CA4370 LDR X0, [X20 + 0x1E0]
	0x03CA4374 CBZ X0, 0x3CA4414
	0x03CA4378 LDR W10, [X0 + 0x1C]
	0x03CA437C LDR W1, [X8 + 0x14]
	0x03CA4380 LDR X8, [X0 + 0x10]
	0x03CA4384 LDR X9, [X25]
	0x03CA4388 ADD W10, W10, 0x1
	0x03CA438C STR W10, [X0 + 0x1C]
	0x03CA4390 CBZ X8, 0x3CA4414
	0x03CA4394 LDRSW X10, [X0 + 0x18]
	0x03CA4398 LDR W11, [X8 + 0x18]
	0x03CA439C CMP W10, W11
	0x03CA43A0 B.CS 0x3CA43B8
	0x03CA43A4 ADD W9, W10, 0x1
	0x03CA43A8 ADD X8, X8, X10, 0x2, LSL
	0x03CA43AC STR W9, [X0 + 0x18]
	0x03CA43B0 STR W1, [X8 + 0x20]
	0x03CA43B4 B 0x3CA43C8
	0x03CA43B8 LDR X8, [X9 + 0x20]
	0x03CA43BC LDR X8, [X8 + 0xC0]
	0x03CA43C0 LDR X2, [X8 + 0x70]
	0x03CA43C4 BL 0x30C1698
	0x03CA43C8 LDR X0, [X20 + 0x1D0]
	0x03CA43CC ADD W21, W21, 0x1
	0x03CA43D0 CBNZ X0, 0x3CA4350
	0x03CA43D4 B 0x3CA4414
	0x03CA43D8 STR X31, [X19]
	0x03CA43DC LDR X0, [X20 + 0x1E0]
	0x03CA43E0 CBZ X0, 0x3CA4414
	0x03CA43E4 LDR W8, [X0 + 0x18]
	0x03CA43E8 CMP W8, 0x1
	0x03CA43EC B.LT 0x3CA4404
	0x03CA43F0 ADRP X8, 0x47C000
	0x03CA43F4 LDR X8, [X8 + 0x558]
	0x03CA43F8 LDR X1, [X8]
	0x03CA43FC BL 0x30C3454
	0x03CA4400 STR X0, [X19]
	0x03CA4404 LDR W8, [X31 + 0xC]
	0x03CA4408 EOR W8, W8, 0x1
	0x03CA440C AND W8, W22, W8, 0x0
	0x03CA4410 B 0x3CA3A64
	0x03CA4414 BL 0x1C16F20
	0x03CA4418 BL 0x1C16F28
	0x03CA441C SUB X31, X31, 0x80
	0x03CA4420 STP X29, X30, [X31 + 0x20]
	0x03CA4424 STP X28, X27, [X31 + 0x30]
	0x03CA4428 STP X26, X25, [X31 + 0x40]
	0x03CA442C STP X24, X23, [X31 + 0x50]
	0x03CA4430 STP X22, X21, [X31 + 0x60]
	0x03CA4434 STP X20, X19, [X31 + 0x70]
	0x03CA4438 ADRP X20, 0x743000
	0x03CA443C LDRB W8, [X20 + 0x2F5]
	0x03CA4440 MOV X19, X0
	0x03CA4444 TBNZ X8, 0x0, 0x3CA44D4
	0x03CA4448 ADRP X0, 0x4BD000
	0x03CA444C LDR X0, [X0 + 0x2B0]
	0x03CA4450 BL 0x1C16CF4
	0x03CA4454 ADRP X0, 0x4B4000
	0x03CA4458 LDR X0, [X0 + 0xC98]
	0x03CA445C BL 0x1C16CF4
	0x03CA4460 ADRP X0, 0x4B4000
	0x03CA4464 LDR X0, [X0 + 0xE48]
	0x03CA4468 BL 0x1C16CF4
	0x03CA446C ADRP X0, 0x4B4000
	0x03CA4470 LDR X0, [X0 + 0xBC0]
	0x03CA4474 BL 0x1C16CF4
	0x03CA4478 ADRP X0, 0x4B4000
	0x03CA447C LDR X0, [X0 + 0xC10]
	0x03CA4480 BL 0x1C16CF4
	0x03CA4484 ADRP X0, 0x455000
	0x03CA4488 LDR X0, [X0 + 0x1D0]
	0x03CA448C BL 0x1C16CF4
	0x03CA4490 ADRP X0, 0x4BD000
	0x03CA4494 LDR X0, [X0 + 0x4C0]
	0x03CA4498 BL 0x1C16CF4
	0x03CA449C ADRP X0, 0x4A6000
	0x03CA44A0 LDR X0, [X0 + 0xB50]
	0x03CA44A4 BL 0x1C16CF4
	0x03CA44A8 ADRP X0, 0x4BD000
	0x03CA44AC LDR X0, [X0 + 0x4F8]
	0x03CA44B0 BL 0x1C16CF4
	0x03CA44B4 ADRP X0, 0x4BD000
	0x03CA44B8 LDR X0, [X0 + 0x2D0]
	0x03CA44BC BL 0x1C16CF4
	0x03CA44C0 ADRP X0, 0x4BD000
	0x03CA44C4 LDR X0, [X0 + 0x2D8]
	0x03CA44C8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x744000
	008 Move X20, 0x4BE000
	009 Move W8, [X19+748]
	010 Move X20, [X20+600]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x4BE000
	016 Move X0, [X0+600]
	017 Call 0x1C17CF4
	018 Move X0, 0x457000
	019 Move X0, [X0+1656]
	020 Call 0x1C17CF4
	021 Move X0, 0x4BE000
	022 Move X0, [X0+1232]
	023 Call 0x1C17CF4
	024 Move X0, 0x4BE000
	025 Move X0, [X0+1200]
	026 Call 0x1C17CF4
	027 Move X0, 0x4BE000
	028 Move X0, [X0+1208]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+748], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X8, [X8+88]
	040 Compare X8, 0
	041 JumpIfEqual {109}
	042 Move W21, [X8+24]
	043 Subtract W22, W21, 1
	044 Move X23, 0x4BE000
	045 Move X23, [X23+1208]
	046 Move W19, W31
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X0, [X8+88]
	054 Compare X0, 0
	055 JumpIfEqual {109}
	056 Move X2, [X23]
	057 Move W1, W19
	058 Call List`1<Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {109}
	061 Call FontAsset.UpdateAllFontFeatures, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X20]
	064 Add W19, W19, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, [X20]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X20]
	072 Move X8, [X0+184]
	073 Move X9, [X8+88]
	074 Compare X9, 0
	075 JumpIfEqual {109}
	076 Move W2, [X9+24]
	077 Move W10, [X9+28]
	078 Add W10, W10, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X9+24], W31
	081 Move [X9+28], W10
	082 Move X0, [X9+16]
	083 Move W1, W31
	084 Move X3, X31
	085 Call Array.Clear, X0, X1, X2
	086 Move X8, [X20]
	087 Move X8, [X8+184]
	088 Move X0, [X8+96]
	089 Compare X0, 0
	090 JumpIfEqual {109}
	091 Move X8, 0x457000
	092 Move X8, [X8+1656]
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X1, [X8]
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 Call HashSet`1<Int32>.Clear, X0
	101 Return 
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Return 
	109 Call 0x1C17F20

Method: System.Void RegisterAtlasTextureForApply(UnityEngine.Texture2D texture)

Disassembly:
	0x03CA4524 BL 0x1C16DFC
	0x03CA4528 ADD X7, X31, 0x18
	0x03CA452C MOV X0, X20
	0x03CA4530 MOV W1, W21
	0x03CA4534 MOV W2, W31
	0x03CA4538 MOV X3, X24
	0x03CA453C MOV X4, X22
	0x03CA4540 MOV W5, W23
	0x03CA4544 MOV X6, X25
	0x03CA4548 STR X31, [X31]
	0x03CA454C BL 0x3C9D530
	0x03CA4550 LDR X8, [X31 + 0x18]
	0x03CA4554 STR W0, [X31 + 0xC]
	0x03CA4558 CBZ X8, 0x3CA4864
	0x03CA455C ADRP X20, 0x4B4000
	0x03CA4560 ADRP X26, 0x4B4000
	0x03CA4564 ADRP X23, 0x455000
	0x03CA4568 ADRP X24, 0x4BD000
	0x03CA456C ADRP X25, 0x4B4000
	0x03CA4570 ADRP X27, 0x4BD000
	0x03CA4574 ADRP X28, 0x4BD000
	0x03CA4578 LDR X20, [X20 + 0xC10]
	0x03CA457C LDR X26, [X26 + 0xC98]
	0x03CA4580 LDR X23, [X23 + 0x1D0]
	0x03CA4584 LDR X24, [X24 + 0x2D8]
	0x03CA4588 LDR X25, [X25 + 0xE48]
	0x03CA458C LDR X27, [X27 + 0x2B0]
	0x03CA4590 LDR X28, [X28 + 0x4F8]
	0x03CA4594 MOV X29, X31
	0x03CA4598 LDR W9, [X8 + 0x18]
	0x03CA459C CMP W29, W9
	0x03CA45A0 B.GE 0x3CA4708
	0x03CA45A4 CMP W29, W9
	0x03CA45A8 B.CS 0x3CA4890
	0x03CA45AC ADD X8, X8, X29, 0x3, LSL
	0x03CA45B0 LDR X22, [X8 + 0x20]
	0x03CA45B4 CBZ X22, 0x3CA4708
	0x03CA45B8 MOV X0, X22
	0x03CA45BC MOV X1, X31
	0x03CA45C0 BL 0x3C9C494
	0x03CA45C4 LDR W1, [X19 + 0x148]
	0x03CA45C8 MOV W21, W0
	0x03CA45CC MOV X0, X22
	0x03CA45D0 MOV X2, X31
	0x03CA45D4 BL 0x3C9C4F8
	0x03CA45D8 LDR X0, [X19 + 0x118]
	0x03CA45DC CBZ X0, 0x3CA4864
	0x03CA45E0 LDR W10, [X0 + 0x1C]
	0x03CA45E4 LDR X8, [X0 + 0x10]
	0x03CA45E8 LDR X9, [X20]
	0x03CA45EC ADD W10, W10, 0x1
	0x03CA45F0 STR W10, [X0 + 0x1C]
	0x03CA45F4 CBZ X8, 0x3CA4864
	0x03CA45F8 LDRSW X10, [X0 + 0x18]
	0x03CA45FC LDR W11, [X8 + 0x18]
	0x03CA4600 CMP W10, W11
	0x03CA4604 B.CS 0x3CA461C
	0x03CA4608 ADD W9, W10, 0x1
	0x03CA460C ADD X8, X8, X10, 0x3, LSL
	0x03CA4610 STR W9, [X0 + 0x18]
	0x03CA4614 STR X22, [X8 + 0x20]
	0x03CA4618 B 0x3CA4630
	0x03CA461C LDR X8, [X9 + 0x20]
	0x03CA4620 MOV X1, X22
	0x03CA4624 LDR X8, [X8 + 0xC0]
	0x03CA4628 LDR X2, [X8 + 0x70]
	0x03CA462C BL 0x301BF90
	0x03CA4630 LDR X0, [X19 + 0x120]
	0x03CA4634 CBZ X0, 0x3CA4864
	0x03CA4638 LDR X3, [X26]
	0x03CA463C MOV W1, W21
	0x03CA4640 MOV X2, X22
	0x03CA4644 BL 0x2B0F05C
	0x03CA4648 LDR X0, [X19 + 0x1B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x744000
	006 Move W8, [X20+749]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x4BE000
	013 Move X0, [X0+600]
	014 Call 0x1C17CF4
	015 Move X0, 0x452000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move X0, 0x4BE000
	019 Move X0, [X0+1240]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+749], W8
	023 Compare X19, 0
	024 JumpIfEqual {92}
	025 Move X21, 0x4BE000
	026 Move X21, [X21+600]
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object.GetInstanceID, X0
	030 Move X8, [X21]
	031 Move W20, W0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {38}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X8, [X21]
	038 Move X8, [X8+184]
	039 Move X0, [X8+112]
	040 Compare X0, 0
	041 JumpIfEqual {92}
	042 Move X8, 0x452000
	043 Move X8, [X8+2520]
	044 Move W1, W20
	045 Move X2, [X8]
	046 Call HashSet`1<Int32>.Add, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {77}
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Move X8, [X0+184]
	058 Move X0, [X8+104]
	059 Compare X0, 0
	060 JumpIfEqual {92}
	061 Move X9, 0x4BE000
	062 Move X9, [X9+1240]
	063 Move W10, [X0+28]
	064 Move X8, [X0+16]
	065 Move X9, [X9]
	066 Add W10, W10, 1
	067 Move [X0+28], W10
	068 Compare X8, 0
	069 JumpIfEqual {92}
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W11, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W9, W10, 1
	074 Add X8, X8, X10
	075 Move [X0+24], W9
	076 Move [X8+32], X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return 
	082 Move X8, [X9+32]
	083 Move X1, X19
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X8, [X8+192]
	087 Move X2, [X8+112]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Call List`1<Object>.AddWithResize, X0, X1
	091 Return 
	092 Call 0x1C17F20

Method: System.Void UpdateAtlasTexturesInQueue()

Disassembly:
	0x03CA464C CBZ X0, 0x3CA4864
	0x03CA4650 LDR W10, [X0 + 0x1C]
	0x03CA4654 LDR X8, [X0 + 0x10]
	0x03CA4658 LDR X9, [X23]
	0x03CA465C ADD W10, W10, 0x1
	0x03CA4660 STR W10, [X0 + 0x1C]
	0x03CA4664 CBZ X8, 0x3CA4864
	0x03CA4668 LDRSW X10, [X0 + 0x18]
	0x03CA466C LDR W11, [X8 + 0x18]
	0x03CA4670 CMP W10, W11
	0x03CA4674 B.CS 0x3CA468C
	0x03CA4678 ADD W9, W10, 0x1
	0x03CA467C ADD X8, X8, X10, 0x2, LSL
	0x03CA4680 STR W9, [X0 + 0x18]
	0x03CA4684 STR W21, [X8 + 0x20]
	0x03CA4688 B 0x3CA46A0
	0x03CA468C LDR X8, [X9 + 0x20]
	0x03CA4690 MOV W1, W21
	0x03CA4694 LDR X8, [X8 + 0xC0]
	0x03CA4698 LDR X2, [X8 + 0x70]
	0x03CA469C BL 0x30C1698
	0x03CA46A0 LDR X0, [X19 + 0x1B0]
	0x03CA46A4 CBZ X0, 0x3CA4864
	0x03CA46A8 LDR W10, [X0 + 0x1C]
	0x03CA46AC LDR X8, [X0 + 0x10]
	0x03CA46B0 LDR X9, [X23]
	0x03CA46B4 ADD W10, W10, 0x1
	0x03CA46B8 STR W10, [X0 + 0x1C]
	0x03CA46BC CBZ X8, 0x3CA4864
	0x03CA46C0 LDRSW X10, [X0 + 0x18]
	0x03CA46C4 LDR W11, [X8 + 0x18]
	0x03CA46C8 CMP W10, W11
	0x03CA46CC B.CS 0x3CA46E4
	0x03CA46D0 ADD W9, W10, 0x1
	0x03CA46D4 ADD X8, X8, X10, 0x2, LSL
	0x03CA46D8 STR W9, [X0 + 0x18]
	0x03CA46DC STR W21, [X8 + 0x20]
	0x03CA46E0 B 0x3CA46F8
	0x03CA46E4 LDR X8, [X9 + 0x20]
	0x03CA46E8 MOV W1, W21
	0x03CA46EC LDR X8, [X8 + 0xC0]
	0x03CA46F0 LDR X2, [X8 + 0x70]
	0x03CA46F4 BL 0x30C1698
	0x03CA46F8 LDR X8, [X31 + 0x18]
	0x03CA46FC ADD X29, X29, 0x1
	0x03CA4700 CBNZ X8, 0x3CA4598
	0x03CA4704 B 0x3CA4864
	0x03CA4708 LDR X8, [X19 + 0x1C0]
	0x03CA470C CBZ X8, 0x3CA4864
	0x03CA4710 LDR W9, [X8 + 0x1C]
	0x03CA4714 ADRP X20, 0x4BD000
	0x03CA4718 ADD W9, W9, 0x1
	0x03CA471C STP W31, W9, [X8 + 0x18]
	0x03CA4720 LDR X0, [X19 + 0x1D0]
	0x03CA4724 LDR X20, [X20 + 0x4C0]
	0x03CA4728 CBZ X0, 0x3CA4864
	0x03CA472C MOV W21, W31
	0x03CA4730 LDR W8, [X0 + 0x18]
	0x03CA4734 CMP W21, W8
	0x03CA4738 B.GE 0x3CA4868
	0x03CA473C LDR X2, [X24]
	0x03CA4740 MOV W1, W21
	0x03CA4744 BL 0x301BCCC
	0x03CA4748 CBZ X0, 0x3CA4864
	0x03CA474C MOV X22, X0
	0x03CA4750 LDR X0, [X19 + 0x120]
	0x03CA4754 CBZ X0, 0x3CA4864
	0x03CA4758 LDR W1, [X22 + 0x28]
	0x03CA475C LDR X3, [X25]
	0x03CA4760 ADD X2, X31, 0x10
	0x03CA4764 BL 0x2B10A7C
	0x03CA4768 TBZ X0, 0x0, 0x3CA47B8
	0x03CA476C LDR X8, [X31 + 0x10]
	0x03CA4770 STP X19, X8, [X22 + 0x18]
	0x03CA4774 LDR X0, [X19 + 0x128]
	0x03CA4778 CBZ X0, 0x3CA4864
	0x03CA477C LDR W10, [X0 + 0x1C]
	0x03CA4780 LDR X8, [X0 + 0x10]
	0x03CA4784 LDR X9, [X20]
	0x03CA4788 ADD W10, W10, 0x1
	0x03CA478C STR W10, [X0 + 0x1C]
	0x03CA4790 CBZ X8, 0x3CA4864
	0x03CA4794 LDRSW X10, [X0 + 0x18]
	0x03CA4798 LDR W11, [X8 + 0x18]
	0x03CA479C CMP W10, W11
	0x03CA47A0 B.CS 0x3CA4800
	0x03CA47A4 ADD W9, W10, 0x1
	0x03CA47A8 ADD X8, X8, X10, 0x3, LSL
	0x03CA47AC STR W9, [X0 + 0x18]
	0x03CA47B0 STR X22, [X8 + 0x20]
	0x03CA47B4 B 0x3CA4814
	0x03CA47B8 LDR X0, [X19 + 0x1C0]
	0x03CA47BC CBZ X0, 0x3CA4864
	0x03CA47C0 LDR W10, [X0 + 0x1C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x744000
	008 Move X20, 0x4BE000
	009 Move W8, [X19+750]
	010 Move X20, [X20+600]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x4BE000
	016 Move X0, [X0+600]
	017 Call 0x1C17CF4
	018 Move X0, 0x457000
	019 Move X0, [X0+1656]
	020 Call 0x1C17CF4
	021 Move X0, 0x457000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move X0, 0x4BE000
	025 Move X0, [X0+1248]
	026 Call 0x1C17CF4
	027 Move X0, 0x4BE000
	028 Move X0, [X0+1256]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+750], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X8, [X8+112]
	040 Compare X8, 0
	041 JumpIfEqual {112}
	042 Move W21, [X8+32]
	043 Subtract W22, W21, 1
	044 Move X23, 0x4BE000
	045 Move X23, [X23+1256]
	046 Move W19, W31
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X0, [X8+104]
	054 Compare X0, 0
	055 JumpIfEqual {112}
	056 Move X2, [X23]
	057 Move W1, W19
	058 Call List`1<Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {112}
	061 Move W1, W31
	062 Move W2, W31
	063 Move X3, X31
	064 Call Texture2D.Apply, X0, X1, X2
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, [X20]
	067 Add W19, W19, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, [X20]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X20]
	075 Move X8, [X0+184]
	076 Move X9, [X8+104]
	077 Compare X9, 0
	078 JumpIfEqual {112}
	079 Move W2, [X9+24]
	080 Move W10, [X9+28]
	081 Add W10, W10, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X9+24], W31
	084 Move [X9+28], W10
	085 Move X0, [X9+16]
	086 Move W1, W31
	087 Move X3, X31
	088 Call Array.Clear, X0, X1, X2
	089 Move X8, [X20]
	090 Move X8, [X8+184]
	091 Move X0, [X8+112]
	092 Compare X0, 0
	093 JumpIfEqual {112}
	094 Move X8, 0x457000
	095 Move X8, [X8+1656]
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X1, [X8]
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Call HashSet`1<Int32>.Clear, X0
	104 Return 
	105 Move X20, [X31+32]
	106 Move X19, [X31+40]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move X30, [X31+48]
	110 Move X23, [X31+56]
	111 Return 
	112 Call 0x1C17F20

Method: System.Void UpdateFontAssetsInUpdateQueue()

Disassembly:
	0x03CA47C4 LDR W1, [X22 + 0x28]
	0x03CA47C8 LDR X8, [X0 + 0x10]
	0x03CA47CC LDR X9, [X23]
	0x03CA47D0 ADD W10, W10, 0x1
	0x03CA47D4 STR W10, [X0 + 0x1C]
	0x03CA47D8 CBZ X8, 0x3CA4864
	0x03CA47DC LDRSW X10, [X0 + 0x18]
	0x03CA47E0 LDR W11, [X8 + 0x18]
	0x03CA47E4 CMP W10, W11
	0x03CA47E8 B.CS 0x3CA4848
	0x03CA47EC ADD W9, W10, 0x1
	0x03CA47F0 ADD X8, X8, X10, 0x2, LSL
	0x03CA47F4 STR W9, [X0 + 0x18]
	0x03CA47F8 STR W1, [X8 + 0x20]
	0x03CA47FC B 0x3CA4858
	0x03CA4800 LDR X8, [X9 + 0x20]
	0x03CA4804 MOV X1, X22
	0x03CA4808 LDR X8, [X8 + 0xC0]
	0x03CA480C LDR X2, [X8 + 0x70]
	0x03CA4810 BL 0x301BF90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x744000
	005 Move X20, 0x4BE000
	006 Move W8, [X19+751]
	007 Move X20, [X20+600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4BE000
	013 Move X0, [X0+600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+751], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call FontAsset.UpdateAtlasTexturesInQueue
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Call FontAsset.UpdateFontFeaturesForFontAssetsInQueue
	027 Return 

Method: System.Boolean TryAddCharacters(System.UInt32[] unicodes, System.Boolean includeFontFeatures = False)

Disassembly:
	0x03CA4814 LDR X0, [X19 + 0x130]
	0x03CA4818 CBZ X0, 0x3CA4864
	0x03CA481C LDR W1, [X22 + 0x14]
	0x03CA4820 LDR X3, [X27]
	0x03CA4824 MOV X2, X22
	0x03CA4828 BL 0x2B0F05C
	0x03CA482C LDR X0, [X19 + 0x1D0]
	0x03CA4830 CBZ X0, 0x3CA4864

ISIL:
	001 Move [X31-16], X30
	002 And W3, W2, 1
	003 Add X2, X31, 8
	004 Move [X31+8], X31
	005 Call FontAsset.TryAddCharacters, X0, X1, X2, X3
	006 And W0, W0, 1
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean TryAddCharacters(System.UInt32[] unicodes, out System.UInt32[] missingUnicodes, System.Boolean includeFontFeatures = False)

Disassembly:
	0x03CA4834 LDR X2, [X28]
	0x03CA4838 MOV W1, W21
	0x03CA483C BL 0x301DA48
	0x03CA4840 SUB W21, W21, 0x1
	0x03CA4844 B 0x3CA4858
	0x03CA4848 LDR X8, [X9 + 0x20]
	0x03CA484C LDR X8, [X8 + 0xC0]
	0x03CA4850 LDR X2, [X8 + 0x70]
	0x03CA4854 BL 0x30C1698
	0x03CA4858 LDR X0, [X19 + 0x1D0]
	0x03CA485C ADD W21, W21, 0x1
	0x03CA4860 CBNZ X0, 0x3CA4730
	0x03CA4864 BL 0x1C16F20
	0x03CA4868 LDR W8, [X31 + 0xC]
	0x03CA486C LDP X20, X19, [X31 + 0x70]
	0x03CA4870 LDP X22, X21, [X31 + 0x60]
	0x03CA4874 LDP X24, X23, [X31 + 0x50]
	0x03CA4878 LDP X26, X25, [X31 + 0x40]
	0x03CA487C LDP X28, X27, [X31 + 0x30]
	0x03CA4880 LDP X29, X30, [X31 + 0x20]
	0x03CA4884 AND W0, W8, 0x1
	0x03CA4888 ADD X31, X31, 0x80
	0x03CA488C RET
	0x03CA4890 BL 0x1C16F28
	0x03CA4894 STR X30, [X31 - 0x10]!
	0x03CA4898 AND W3, W2, 0x1
	0x03CA489C ADD X2, X31, 0x8
	0x03CA48A0 STR X31, [X31 + 0x8]
	0x03CA48A4 BL 0x3CA48B4
	0x03CA48A8 AND W0, W0, 0x1
	0x03CA48AC LDR X30, [X31], #0x10
	0x03CA48B0 RET
	0x03CA48B4 SUB X31, X31, 0x80
	0x03CA48B8 STP X29, X30, [X31 + 0x20]
	0x03CA48BC STP X28, X27, [X31 + 0x30]
	0x03CA48C0 STP X26, X25, [X31 + 0x40]
	0x03CA48C4 STP X24, X23, [X31 + 0x50]
	0x03CA48C8 STP X22, X21, [X31 + 0x60]
	0x03CA48CC STP X20, X19, [X31 + 0x70]
	0x03CA48D0 ADRP X21, 0x743000
	0x03CA48D4 LDRB W8, [X21 + 0x2F1]
	0x03CA48D8 MOV W23, W3
	0x03CA48DC MOV X19, X2
	0x03CA48E0 MOV X22, X1
	0x03CA48E4 MOV X20, X0
	0x03CA48E8 TBNZ X8, 0x0, 0x3CA4A14
	0x03CA48EC ADRP X0, 0x4BD000
	0x03CA48F0 LDR X0, [X0 + 0x3E0]
	0x03CA48F4 BL 0x1C16CF4
	0x03CA48F8 ADRP X0, 0x44F000
	0x03CA48FC LDR X0, [X0 + 0xA28]
	0x03CA4900 BL 0x1C16CF4
	0x03CA4904 ADRP X0, 0x4BD000
	0x03CA4908 LDR X0, [X0 + 0x2B0]
	0x03CA490C BL 0x1C16CF4
	0x03CA4910 ADRP X0, 0x4B4000
	0x03CA4914 LDR X0, [X0 + 0xC98]
	0x03CA4918 BL 0x1C16CF4
	0x03CA491C ADRP X0, 0x4BD000
	0x03CA4920 LDR X0, [X0 + 0x248]
	0x03CA4924 BL 0x1C16CF4
	0x03CA4928 ADRP X0, 0x4B4000
	0x03CA492C LDR X0, [X0 + 0xCA8]
	0x03CA4930 BL 0x1C16CF4
	0x03CA4934 ADRP X0, 0x4B4000
	0x03CA4938 LDR X0, [X0 + 0xE48]
	0x03CA493C BL 0x1C16CF4
	0x03CA4940 ADRP X0, 0x4B4000
	0x03CA4944 LDR X0, [X0 + 0xC90]
	0x03CA4948 BL 0x1C16CF4
	0x03CA494C ADRP X0, 0x4B4000
	0x03CA4950 LDR X0, [X0 + 0xBC0]
	0x03CA4954 BL 0x1C16CF4
	0x03CA4958 ADRP X0, 0x4AA000
	0x03CA495C LDR X0, [X0 + 0x828]
	0x03CA4960 BL 0x1C16CF4
	0x03CA4964 ADRP X0, 0x4B4000
	0x03CA4968 LDR X0, [X0 + 0xE58]
	0x03CA496C BL 0x1C16CF4
	0x03CA4970 ADRP X0, 0x4B4000
	0x03CA4974 LDR X0, [X0 + 0xC10]
	0x03CA4978 BL 0x1C16CF4
	0x03CA497C ADRP X0, 0x455000
	0x03CA4980 LDR X0, [X0 + 0x1D0]
	0x03CA4984 BL 0x1C16CF4
	0x03CA4988 ADRP X0, 0x4BD000
	0x03CA498C LDR X0, [X0 + 0x4C0]
	0x03CA4990 BL 0x1C16CF4
	0x03CA4994 ADRP X0, 0x4BD000
	0x03CA4998 LDR X0, [X0 + 0x4F0]
	0x03CA499C BL 0x1C16CF4
	0x03CA49A0 ADRP X0, 0x4A6000
	0x03CA49A4 LDR X0, [X0 + 0xB50]
	0x03CA49A8 BL 0x1C16CF4
	0x03CA49AC ADRP X0, 0x4BD000
	0x03CA49B0 LDR X0, [X0 + 0x4F8]
	0x03CA49B4 BL 0x1C16CF4
	0x03CA49B8 ADRP X0, 0x4B4000
	0x03CA49BC LDR X0, [X0 + 0x858]
	0x03CA49C0 BL 0x1C16CF4
	0x03CA49C4 ADRP X0, 0x4BD000
	0x03CA49C8 LDR X0, [X0 + 0x2D0]
	0x03CA49CC BL 0x1C16CF4
	0x03CA49D0 ADRP X0, 0x4BD000
	0x03CA49D4 LDR X0, [X0 + 0x2D8]
	0x03CA49D8 BL 0x1C16CF4
	0x03CA49DC ADRP X0, 0x451000
	0x03CA49E0 LDR X0, [X0 + 0x278]
	0x03CA49E4 BL 0x1C16CF4
	0x03CA49E8 ADRP X0, 0x4B4000
	0x03CA49EC LDR X0, [X0 + 0xE70]
	0x03CA49F0 BL 0x1C16CF4
	0x03CA49F4 ADRP X0, 0x4B4000
	0x03CA49F8 LDR X0, [X0 + 0xE80]
	0x03CA49FC BL 0x1C16CF4
	0x03CA4A00 ADRP X0, 0x4B4000
	0x03CA4A04 LDR X0, [X0 + 0xE78]
	0x03CA4A08 BL 0x1C16CF4
	0x03CA4A0C MOVZ W8, 0x1
	0x03CA4A10 STRB W8, [X21 + 0x2F1]
	0x03CA4A14 MOV X0, X22
	0x03CA4A18 MOV X1, X31
	0x03CA4A1C STP X31, X31, [X31 + 0x10]
	0x03CA4A20 BL 0x32277A8
	0x03CA4A24 LDR W21, [X20 + 0xA8]
	0x03CA4A28 TBZ X0, 0x0, 0x3CA4A58
	0x03CA4A2C MOV X0, X20
	0x03CA4A30 MOV X1, X31
	0x03CA4A34 BL 0x3C389D4
	0x03CA4A38 ADRP X8, 0x4B4000
	0x03CA4A3C LDR X8, [X8 + 0xE78]
	0x03CA4A40 MOV X1, X0
	0x03CA4A44 LDR X8, [X8]
	0x03CA4A48 CBZ W21, 0x3CA4E58
	0x03CA4A4C ADRP X9, 0x4B4000
	0x03CA4A50 LDR X9, [X9 + 0xE80]
	0x03CA4A54 B 0x3CA4E60
	0x03CA4A58 MOV X0, X20
	0x03CA4A5C CBZ W21, 0x3CA4E40
	0x03CA4A60 BL 0x3CA0DD0
	0x03CA4A64 CBNZ W0, 0x3CA4EA0
	0x03CA4A68 LDR X8, [X20 + 0x130]
	0x03CA4A6C CBZ X8, 0x3CA4A78
	0x03CA4A70 LDR X8, [X20 + 0x120]
	0x03CA4A74 CBNZ X8, 0x3CA4A80
	0x03CA4A78 MOV X0, X20
	0x03CA4A7C BL 0x3C9EBEC
	0x03CA4A80 LDR X8, [X20 + 0x1C0]
	0x03CA4A84 CBZ X8, 0x3CA5444
	0x03CA4A88 LDR W9, [X8 + 0x1C]
	0x03CA4A8C ADD W9, W9, 0x1
	0x03CA4A90 STP W31, W9, [X8 + 0x18]
	0x03CA4A94 LDR X0, [X20 + 0x1C8]
	0x03CA4A98 CBZ X0, 0x3CA5444
	0x03CA4A9C ADRP X21, 0x4B4000
	0x03CA4AA0 LDR X21, [X21 + 0xE58]
	0x03CA4AA4 LDR X1, [X21]
	0x03CA4AA8 BL 0x2DCD1E0
	0x03CA4AAC LDR X8, [X20 + 0x1D0]
	0x03CA4AB0 CBZ X8, 0x3CA5444
	0x03CA4AB4 LDP W2, W9, [X8 + 0x18]
	0x03CA4AB8 ADD W9, W9, 0x1
	0x03CA4ABC CMP W2, 0x1
	0x03CA4AC0 STP W31, W9, [X8 + 0x18]
	0x03CA4AC4 B.LT 0x3CA4AD8
	0x03CA4AC8 LDR X0, [X8 + 0x10]
	0x03CA4ACC MOV W1, W31
	0x03CA4AD0 MOV X3, X31
	0x03CA4AD4 BL 0x339FA34
	0x03CA4AD8 LDR X0, [X20 + 0x1D8]
	0x03CA4ADC CBZ X0, 0x3CA5444
	0x03CA4AE0 LDR X1, [X21]
	0x03CA4AE4 BL 0x2DCD1E0
	0x03CA4AE8 LDR X8, [X20 + 0x1E0]
	0x03CA4AEC CBZ X8, 0x3CA5444
	0x03CA4AF0 LDR W9, [X8 + 0x1C]
	0x03CA4AF4 ADD W9, W9, 0x1
	0x03CA4AF8 STP W31, W9, [X8 + 0x18]
	0x03CA4AFC CBZ X22, 0x3CA5444
	0x03CA4B00 LDR W27, [X22 + 0x10]
	0x03CA4B04 STR W23, [X31 + 0x8]
	0x03CA4B08 CMP W27, 0x1
	0x03CA4B0C B.LT 0x3CA4ECC
	0x03CA4B10 STR W31, [X31 + 0xC]
	0x03CA4B14 ADRP X29, 0x4BD000
	0x03CA4B18 ADRP X28, 0x4B4000
	0x03CA4B1C ADRP X21, 0x4AA000
	0x03CA4B20 LDR X29, [X29 + 0x248]
	0x03CA4B24 LDR X28, [X28 + 0xBC0]
	0x03CA4B28 LDR X21, [X21 + 0x828]
	0x03CA4B2C MOV W23, W31
	0x03CA4B30 MOV X0, X22
	0x03CA4B34 MOV W1, W23
	0x03CA4B38 MOV X2, X31
	0x03CA4B3C BL 0x3222A1C
	0x03CA4B40 LDR X8, [X20 + 0x130]
	0x03CA4B44 CBZ X8, 0x3CA5444
	0x03CA4B48 LDR X2, [X29]
	0x03CA4B4C AND W24, W0, 0xFFFF
	0x03CA4B50 MOV X0, X8
	0x03CA4B54 MOV W1, W24
	0x03CA4B58 BL 0x2B0F250
	0x03CA4B5C TBNZ X0, 0x0, 0x3CA4E30
	0x03CA4B60 LDR X0, [X28]
	0x03CA4B64 LDR W8, [X0 + 0xE0]
	0x03CA4B68 CBNZ W8, 0x3CA4B70
	0x03CA4B6C BL 0x1C16DFC
	0x03CA4B70 MOV W0, W24
	0x03CA4B74 MOV X1, X31
	0x03CA4B78 BL 0x3C9CBD8
	0x03CA4B7C MOV W26, W0
	0x03CA4B80 CBNZ W0, 0x3CA4BDC
	0x03CA4B84 MOVZ W8, 0x2011
	0x03CA4B88 CMP W24, W8
	0x03CA4B8C B.EQ 0x3CA4BB8
	0x03CA4B90 CMP W24, 0xAD
	0x03CA4B94 B.EQ 0x3CA4BB8
	0x03CA4B98 CMP W24, 0xA0
	0x03CA4B9C B.NE 0x3CA4D38
	0x03CA4BA0 LDR X0, [X28]
	0x03CA4BA4 LDR W8, [X0 + 0xE0]
	0x03CA4BA8 CBNZ W8, 0x3CA4BB0
	0x03CA4BAC BL 0x1C16DFC
	0x03CA4BB0 MOVZ W0, 0x20
	0x03CA4BB4 B 0x3CA4BCC
	0x03CA4BB8 LDR X0, [X28]
	0x03CA4BBC LDR W8, [X0 + 0xE0]
	0x03CA4BC0 CBNZ W8, 0x3CA4BC8
	0x03CA4BC4 BL 0x1C16DFC
	0x03CA4BC8 MOVZ W0, 0x2D
	0x03CA4BCC MOV X1, X31
	0x03CA4BD0 BL 0x3C9CBD8
	0x03CA4BD4 MOV W26, W0
	0x03CA4BD8 CBZ W0, 0x3CA4D38
	0x03CA4BDC ADRP X8, 0x4BD000
	0x03CA4BE0 LDR X8, [X8 + 0x3E0]
	0x03CA4BE4 LDR X0, [X8]
	0x03CA4BE8 BL 0x1C16F10
	0x03CA4BEC MOV X1, X31
	0x03CA4BF0 MOV X25, X0
	0x03CA4BF4 BL 0x33BDD8C
	0x03CA4BF8 MOVZ W8, 0x1
	0x03CA4BFC STRB W8, [X25 + 0x10]
	0x03CA4C00 MOVZ W8, 0x3F800000
	0x03CA4C04 STR W24, [X25 + 0x14]
	0x03CA4C08 STP X31, X31, [X25 + 0x18]
	0x03CA4C0C STP W26, W8, [X25 + 0x28]
	0x03CA4C10 LDR X0, [X20 + 0x120]
	0x03CA4C14 CBZ X0, 0x3CA5444
	0x03CA4C18 ADRP X8, 0x4B4000
	0x03CA4C1C LDR X8, [X8 + 0xCA8]
	0x03CA4C20 MOV W1, W26
	0x03CA4C24 LDR X2, [X8]
	0x03CA4C28 BL 0x2B0F250
	0x03CA4C2C TBZ X0, 0x0, 0x3CA4C9C
	0x03CA4C30 LDR X0, [X20 + 0x120]
	0x03CA4C34 CBZ X0, 0x3CA5444
	0x03CA4C38 ADRP X8, 0x4B4000
	0x03CA4C3C LDR X8, [X8 + 0xC90]
	0x03CA4C40 MOV W1, W26
	0x03CA4C44 LDR X2, [X8]
	0x03CA4C48 BL 0x2B0EFBC
	0x03CA4C4C STP X20, X0, [X25 + 0x18]
	0x03CA4C50 LDR X0, [X20 + 0x128]
	0x03CA4C54 CBZ X0, 0x3CA5444
	0x03CA4C58 ADRP X9, 0x4BD000
	0x03CA4C5C LDR W10, [X0 + 0x1C]
	0x03CA4C60 LDR X8, [X0 + 0x10]
	0x03CA4C64 LDR X9, [X9 + 0x4C0]
	0x03CA4C68 ADD W10, W10, 0x1
	0x03CA4C6C LDR X9, [X9]
	0x03CA4C70 STR W10, [X0 + 0x1C]
	0x03CA4C74 CBZ X8, 0x3CA5444
	0x03CA4C78 LDRSW X10, [X0 + 0x18]
	0x03CA4C7C LDR W11, [X8 + 0x18]
	0x03CA4C80 CMP W10, W11
	0x03CA4C84 B.CS 0x3CA4D00
	0x03CA4C88 ADD W9, W10, 0x1
	0x03CA4C8C ADD X8, X8, X10, 0x3, LSL
	0x03CA4C90 STR W9, [X0 + 0x18]
	0x03CA4C94 STR X25, [X8 + 0x20]
	0x03CA4C98 B 0x3CA4D14
	0x03CA4C9C LDR X0, [X20 + 0x1C8]
	0x03CA4CA0 CBZ X0, 0x3CA5444
	0x03CA4CA4 LDR X2, [X21]
	0x03CA4CA8 MOV W1, W26
	0x03CA4CAC BL 0x2DCDCE0
	0x03CA4CB0 TBZ X0, 0x0, 0x3CA4D98
	0x03CA4CB4 LDR X0, [X20 + 0x1C0]
	0x03CA4CB8 CBZ X0, 0x3CA5444
	0x03CA4CBC ADRP X9, 0x455000
	0x03CA4CC0 LDR W10, [X0 + 0x1C]
	0x03CA4CC4 LDR X8, [X0 + 0x10]
	0x03CA4CC8 LDR X9, [X9 + 0x1D0]
	0x03CA4CCC ADD W10, W10, 0x1
	0x03CA4CD0 LDR X9, [X9]
	0x03CA4CD4 STR W10, [X0 + 0x1C]
	0x03CA4CD8 CBZ X8, 0x3CA5444
	0x03CA4CDC LDRSW X10, [X0 + 0x18]
	0x03CA4CE0 LDR W11, [X8 + 0x18]
	0x03CA4CE4 CMP W10, W11
	0x03CA4CE8 B.CS 0x3CA4D84
	0x03CA4CEC ADD W9, W10, 0x1
	0x03CA4CF0 ADD X8, X8, X10, 0x2, LSL
	0x03CA4CF4 STR W9, [X0 + 0x18]
	0x03CA4CF8 STR W26, [X8 + 0x20]
	0x03CA4CFC B 0x3CA4D98
	0x03CA4D00 LDR X8, [X9 + 0x20]
	0x03CA4D04 MOV X1, X25
	0x03CA4D08 LDR X8, [X8 + 0xC0]
	0x03CA4D0C LDR X2, [X8 + 0x70]
	0x03CA4D10 BL 0x301BF90
	0x03CA4D14 LDR X0, [X20 + 0x130]
	0x03CA4D18 CBZ X0, 0x3CA5444
	0x03CA4D1C ADRP X8, 0x4BD000
	0x03CA4D20 LDR X8, [X8 + 0x2B0]
	0x03CA4D24 MOV W1, W24
	0x03CA4D28 MOV X2, X25
	0x03CA4D2C LDR X3, [X8]
	0x03CA4D30 BL 0x2B0F05C
	0x03CA4D34 B 0x3CA4E30
	0x03CA4D38 LDR X0, [X20 + 0x1E0]
	0x03CA4D3C CBZ X0, 0x3CA5444
	0x03CA4D40 ADRP X9, 0x455000
	0x03CA4D44 LDR W10, [X0 + 0x1C]
	0x03CA4D48 LDR X8, [X0 + 0x10]
	0x03CA4D4C LDR X9, [X9 + 0x1D0]
	0x03CA4D50 ADD W10, W10, 0x1
	0x03CA4D54 LDR X9, [X9]
	0x03CA4D58 STR W10, [X0 + 0x1C]
	0x03CA4D5C CBZ X8, 0x3CA5444
	0x03CA4D60 LDRSW X10, [X0 + 0x18]
	0x03CA4D64 LDR W11, [X8 + 0x18]
	0x03CA4D68 CMP W10, W11
	0x03CA4D6C B.CS 0x3CA4E14
	0x03CA4D70 ADD W9, W10, 0x1
	0x03CA4D74 ADD X8, X8, X10, 0x2, LSL
	0x03CA4D78 STR W9, [X0 + 0x18]
	0x03CA4D7C STR W24, [X8 + 0x20]
	0x03CA4D80 B 0x3CA4E28
	0x03CA4D84 LDR X8, [X9 + 0x20]
	0x03CA4D88 MOV W1, W26
	0x03CA4D8C LDR X8, [X8 + 0xC0]
	0x03CA4D90 LDR X2, [X8 + 0x70]
	0x03CA4D94 BL 0x30C1698
	0x03CA4D98 LDR X0, [X20 + 0x1D8]
	0x03CA4D9C CBZ X0, 0x3CA5444
	0x03CA4DA0 LDR X2, [X21]
	0x03CA4DA4 MOV W1, W24
	0x03CA4DA8 BL 0x2DCDCE0
	0x03CA4DAC TBZ X0, 0x0, 0x3CA4E30
	0x03CA4DB0 LDR X0, [X20 + 0x1D0]
	0x03CA4DB4 CBZ X0, 0x3CA5444
	0x03CA4DB8 ADRP X9, 0x4BD000
	0x03CA4DBC LDR W10, [X0 + 0x1C]
	0x03CA4DC0 LDR X8, [X0 + 0x10]
	0x03CA4DC4 LDR X9, [X9 + 0x4C0]
	0x03CA4DC8 ADD W10, W10, 0x1
	0x03CA4DCC LDR X9, [X9]
	0x03CA4DD0 STR W10, [X0 + 0x1C]
	0x03CA4DD4 CBZ X8, 0x3CA5444
	0x03CA4DD8 LDRSW X10, [X0 + 0x18]
	0x03CA4DDC LDR W11, [X8 + 0x18]
	0x03CA4DE0 CMP W10, W11
	0x03CA4DE4 B.CS 0x3CA4DFC
	0x03CA4DE8 ADD W9, W10, 0x1
	0x03CA4DEC ADD X8, X8, X10, 0x3, LSL
	0x03CA4DF0 STR W9, [X0 + 0x18]
	0x03CA4DF4 STR X25, [X8 + 0x20]
	0x03CA4DF8 B 0x3CA4E30
	0x03CA4DFC LDR X8, [X9 + 0x20]
	0x03CA4E00 MOV X1, X25
	0x03CA4E04 LDR X8, [X8 + 0xC0]
	0x03CA4E08 LDR X2, [X8 + 0x70]
	0x03CA4E0C BL 0x301BF90
	0x03CA4E10 B 0x3CA4E30
	0x03CA4E14 LDR X8, [X9 + 0x20]
	0x03CA4E18 MOV W1, W24
	0x03CA4E1C LDR X8, [X8 + 0xC0]
	0x03CA4E20 LDR X2, [X8 + 0x70]
	0x03CA4E24 BL 0x30C1698
	0x03CA4E28 MOVZ W8, 0x1
	0x03CA4E2C STR W8, [X31 + 0xC]
	0x03CA4E30 ADD W23, W23, 0x1
	0x03CA4E34 CMP W27, W23
	0x03CA4E38 B.NE 0x3CA4B30
	0x03CA4E3C B 0x3CA4ED0
	0x03CA4E40 MOV X1, X31
	0x03CA4E44 BL 0x3C389D4
	0x03CA4E48 ADRP X8, 0x4B4000
	0x03CA4E4C LDR X8, [X8 + 0xE78]
	0x03CA4E50 MOV X1, X0
	0x03CA4E54 LDR X8, [X8]
	0x03CA4E58 ADRP X9, 0x4B4000
	0x03CA4E5C LDR X9, [X9 + 0xE70]
	0x03CA4E60 LDR X2, [X9]
	0x03CA4E64 MOV X0, X8
	0x03CA4E68 MOV X3, X31
	0x03CA4E6C BL 0x32274B8
	0x03CA4E70 ADRP X8, 0x44F000
	0x03CA4E74 LDR X8, [X8 + 0xA28]
	0x03CA4E78 MOV X21, X0
	0x03CA4E7C LDR X8, [X8]
	0x03CA4E80 LDR W9, [X8 + 0xE0]
	0x03CA4E84 CBNZ W9, 0x3CA4E90
	0x03CA4E88 MOV X0, X8
	0x03CA4E8C BL 0x1C16DFC
	0x03CA4E90 MOV X0, X21
	0x03CA4E94 MOV X1, X20
	0x03CA4E98 MOV X2, X31
	0x03CA4E9C BL 0x3C06B0C
	0x03CA4EA0 MOV W8, W31
	0x03CA4EA4 STR X22, [X19]
	0x03CA4EA8 LDP X20, X19, [X31 + 0x70]
	0x03CA4EAC LDP X22, X21, [X31 + 0x60]
	0x03CA4EB0 LDP X24, X23, [X31 + 0x50]
	0x03CA4EB4 LDP X26, X25, [X31 + 0x40]
	0x03CA4EB8 LDP X28, X27, [X31 + 0x30]
	0x03CA4EBC LDP X29, X30, [X31 + 0x20]
	0x03CA4EC0 AND W0, W8, 0x1
	0x03CA4EC4 ADD X31, X31, 0x80
	0x03CA4EC8 RET
	0x03CA4ECC STR W31, [X31 + 0xC]
	0x03CA4ED0 LDR X8, [X20 + 0x1C0]
	0x03CA4ED4 CBZ X8, 0x3CA5444
	0x03CA4ED8 LDR W8, [X8 + 0x18]
	0x03CA4EDC CBZ W8, 0x3CA4EA4
	0x03CA4EE0 LDR X8, [X20 + 0x140]
	0x03CA4EE4 CBZ X8, 0x3CA5444
	0x03CA4EE8 LDRSW X9, [X20 + 0x148]
	0x03CA4EEC LDR W10, [X8 + 0x18]
	0x03CA4EF0 CMP W9, W10
	0x03CA4EF4 B.CS 0x3CA5478
	0x03CA4EF8 ADD X8, X8, X9, 0x3, LSL
	0x03CA4EFC LDR X0, [X8 + 0x20]
	0x03CA4F00 CBZ X0, 0x3CA5444
	0x03CA4F04 LDR X8, [X0]
	0x03CA4F08 LDP X9, X1, [X8 + 0x188]
	0x03CA4F0C BLR X9
	0x03CA4F10 LDR W8, [X20 + 0x150]
	0x03CA4F14 CMP W0, W8
	0x03CA4F18 B.NE 0x3CA4F58
	0x03CA4F1C LDR X8, [X20 + 0x140]
	0x03CA4F20 CBZ X8, 0x3CA5444
	0x03CA4F24 LDRSW X9, [X20 + 0x148]
	0x03CA4F28 LDR W10, [X8 + 0x18]
	0x03CA4F2C CMP W9, W10
	0x03CA4F30 B.CS 0x3CA5478
	0x03CA4F34 ADD X8, X8, X9, 0x3, LSL
	0x03CA4F38 LDR X0, [X8 + 0x20]
	0x03CA4F3C CBZ X0, 0x3CA5444
	0x03CA4F40 LDR X8, [X0]
	0x03CA4F44 LDP X9, X1, [X8 + 0x1A8]
	0x03CA4F48 BLR X9
	0x03CA4F4C LDR W8, [X20 + 0x154]
	0x03CA4F50 CMP W0, W8
	0x03CA4F54 B.EQ 0x3CA4FD0
	0x03CA4F58 LDR X8, [X20 + 0x140]
	0x03CA4F5C CBZ X8, 0x3CA5444
	0x03CA4F60 LDRSW X9, [X20 + 0x148]
	0x03CA4F64 LDR W10, [X8 + 0x18]
	0x03CA4F68 CMP W9, W10
	0x03CA4F6C B.CS 0x3CA5478
	0x03CA4F70 ADD X8, X8, X9, 0x3, LSL
	0x03CA4F74 LDR X0, [X8 + 0x20]
	0x03CA4F78 CBZ X0, 0x3CA5444
	0x03CA4F7C LDR W2, [X20 + 0x154]
	0x03CA4F80 LDR W1, [X20 + 0x150]
	0x03CA4F84 MOV X3, X31
	0x03CA4F88 BL 0x3C1C54C
	0x03CA4F8C LDR X8, [X20 + 0x140]
	0x03CA4F90 CBZ X8, 0x3CA5444
	0x03CA4F94 LDRSW X9, [X20 + 0x148]
	0x03CA4F98 LDR W10, [X8 + 0x18]
	0x03CA4F9C CMP W9, W10
	0x03CA4FA0 B.CS 0x3CA5478
	0x03CA4FA4 ADRP X10, 0x4B4000
	0x03CA4FA8 LDR X10, [X10 + 0xBC0]
	0x03CA4FAC ADD X8, X8, X9, 0x3, LSL
	0x03CA4FB0 LDR X22, [X8 + 0x20]
	0x03CA4FB4 LDR X0, [X10]
	0x03CA4FB8 LDR W9, [X0 + 0xE0]
	0x03CA4FBC CBNZ W9, 0x3CA4FC4
	0x03CA4FC0 BL 0x1C16DFC
	0x03CA4FC4 MOV X0, X22
	0x03CA4FC8 MOV X1, X31
	0x03CA4FCC BL 0x3C9E1E0
	0x03CA4FD0 LDR X8, [X20 + 0x140]
	0x03CA4FD4 CBZ X8, 0x3CA5444
	0x03CA4FD8 LDRSW X9, [X20 + 0x148]
	0x03CA4FDC LDR W10, [X8 + 0x18]
	0x03CA4FE0 CMP W9, W10
	0x03CA4FE4 B.CS 0x3CA5478
	0x03CA4FE8 ADRP X10, 0x4B4000
	0x03CA4FEC LDR X22, [X20 + 0x1C0]
	0x03CA4FF0 LDR W23, [X20 + 0x158]
	0x03CA4FF4 LDR X10, [X10 + 0xBC0]
	0x03CA4FF8 ADD X8, X8, X9, 0x3, LSL
	0x03CA4FFC LDP X24, X26, [X20 + 0x160]
	0x03CA5000 LDR W25, [X20 + 0x15C]
	0x03CA5004 LDR X0, [X10]
	0x03CA5008 LDR X27, [X8 + 0x20]
	0x03CA500C LDR W9, [X0 + 0xE0]
	0x03CA5010 CBNZ W9, 0x3CA5018
	0x03CA5014 BL 0x1C16DFC
	0x03CA5018 ADD X7, X31, 0x18
	0x03CA501C MOV X0, X22
	0x03CA5020 MOV W1, W23
	0x03CA5024 MOV W2, W31
	0x03CA5028 MOV X3, X26
	0x03CA502C MOV X4, X24
	0x03CA5030 MOV W5, W25
	0x03CA5034 MOV X6, X27
	0x03CA5038 STR X31, [X31]
	0x03CA503C BL 0x3C9D530
	0x03CA5040 LDR X8, [X31 + 0x18]
	0x03CA5044 CBZ X8, 0x3CA5444
	0x03CA5048 ADRP X26, 0x4B3000
	0x03CA504C ADRP X27, 0x4B3000
	0x03CA5050 ADRP X25, 0x454000
	0x03CA5054 LDR X26, [X26 + 0xC10]
	0x03CA5058 LDR X27, [X27 + 0xC98]
	0x03CA505C LDR X25, [X25 + 0x1D0]
	0x03CA5060 MOV W22, W0
	0x03CA5064 MOV X21, X31
	0x03CA5068 LDR W9, [X8 + 0x18]
	0x03CA506C CMP W21, W9
	0x03CA5070 B.GE 0x3CA51D8
	0x03CA5074 CMP W21, W9
	0x03CA5078 B.CS 0x3CA5478
	0x03CA507C ADD X8, X8, X21, 0x3, LSL
	0x03CA5080 LDR X24, [X8 + 0x20]
	0x03CA5084 CBZ X24, 0x3CA51D8
	0x03CA5088 MOV X0, X24
	0x03CA508C MOV X1, X31
	0x03CA5090 BL 0x3C9C494
	0x03CA5094 LDR W1, [X20 + 0x148]
	0x03CA5098 MOV W23, W0
	0x03CA509C MOV X0, X24
	0x03CA50A0 MOV X2, X31
	0x03CA50A4 BL 0x3C9C4F8
	0x03CA50A8 LDR X0, [X20 + 0x118]
	0x03CA50AC CBZ X0, 0x3CA5444
	0x03CA50B0 LDR W10, [X0 + 0x1C]
	0x03CA50B4 LDR X8, [X0 + 0x10]
	0x03CA50B8 LDR X9, [X26]
	0x03CA50BC ADD W10, W10, 0x1
	0x03CA50C0 STR W10, [X0 + 0x1C]
	0x03CA50C4 CBZ X8, 0x3CA5444
	0x03CA50C8 LDRSW X10, [X0 + 0x18]
	0x03CA50CC LDR W11, [X8 + 0x18]
	0x03CA50D0 CMP W10, W11
	0x03CA50D4 B.CS 0x3CA50EC
	0x03CA50D8 ADD W9, W10, 0x1
	0x03CA50DC ADD X8, X8, X10, 0x3, LSL
	0x03CA50E0 STR W9, [X0 + 0x18]
	0x03CA50E4 STR X24, [X8 + 0x20]
	0x03CA50E8 B 0x3CA5100
	0x03CA50EC LDR X8, [X9 + 0x20]
	0x03CA50F0 MOV X1, X24
	0x03CA50F4 LDR X8, [X8 + 0xC0]
	0x03CA50F8 LDR X2, [X8 + 0x70]
	0x03CA50FC BL 0x301BF90
	0x03CA5100 LDR X0, [X20 + 0x120]
	0x03CA5104 CBZ X0, 0x3CA5444
	0x03CA5108 LDR X3, [X27]
	0x03CA510C MOV W1, W23
	0x03CA5110 MOV X2, X24
	0x03CA5114 BL 0x2B0F05C
	0x03CA5118 LDR X0, [X20 + 0x1B8]
	0x03CA511C CBZ X0, 0x3CA5444
	0x03CA5120 LDR W10, [X0 + 0x1C]
	0x03CA5124 LDR X8, [X0 + 0x10]
	0x03CA5128 LDR X9, [X25]
	0x03CA512C ADD W10, W10, 0x1
	0x03CA5130 STR W10, [X0 + 0x1C]
	0x03CA5134 CBZ X8, 0x3CA5444
	0x03CA5138 LDRSW X10, [X0 + 0x18]
	0x03CA513C LDR W11, [X8 + 0x18]
	0x03CA5140 CMP W10, W11
	0x03CA5144 B.CS 0x3CA515C
	0x03CA5148 ADD W9, W10, 0x1
	0x03CA514C ADD X8, X8, X10, 0x2, LSL
	0x03CA5150 STR W9, [X0 + 0x18]
	0x03CA5154 STR W23, [X8 + 0x20]
	0x03CA5158 B 0x3CA5170
	0x03CA515C LDR X8, [X9 + 0x20]
	0x03CA5160 MOV W1, W23
	0x03CA5164 LDR X8, [X8 + 0xC0]
	0x03CA5168 LDR X2, [X8 + 0x70]
	0x03CA516C BL 0x30C1698
	0x03CA5170 LDR X0, [X20 + 0x1B0]
	0x03CA5174 CBZ X0, 0x3CA5444
	0x03CA5178 LDR W10, [X0 + 0x1C]
	0x03CA517C LDR X8, [X0 + 0x10]
	0x03CA5180 LDR X9, [X25]
	0x03CA5184 ADD W10, W10, 0x1
	0x03CA5188 STR W10, [X0 + 0x1C]
	0x03CA518C CBZ X8, 0x3CA5444
	0x03CA5190 LDRSW X10, [X0 + 0x18]
	0x03CA5194 LDR W11, [X8 + 0x18]
	0x03CA5198 CMP W10, W11
	0x03CA519C B.CS 0x3CA51B4
	0x03CA51A0 ADD W9, W10, 0x1
	0x03CA51A4 ADD X8, X8, X10, 0x2, LSL
	0x03CA51A8 STR W9, [X0 + 0x18]
	0x03CA51AC STR W23, [X8 + 0x20]
	0x03CA51B0 B 0x3CA51C8
	0x03CA51B4 LDR X8, [X9 + 0x20]
	0x03CA51B8 MOV W1, W23
	0x03CA51BC LDR X8, [X8 + 0xC0]
	0x03CA51C0 LDR X2, [X8 + 0x70]
	0x03CA51C4 BL 0x30C1698
	0x03CA51C8 LDR X8, [X31 + 0x18]
	0x03CA51CC ADD X21, X21, 0x1
	0x03CA51D0 CBNZ X8, 0x3CA5068
	0x03CA51D4 B 0x3CA5444
	0x03CA51D8 LDR X8, [X20 + 0x1C0]
	0x03CA51DC CBZ X8, 0x3CA5444
	0x03CA51E0 LDR W9, [X8 + 0x1C]
	0x03CA51E4 ADD W9, W9, 0x1
	0x03CA51E8 STP W31, W9, [X8 + 0x18]
	0x03CA51EC LDR X0, [X20 + 0x1D0]
	0x03CA51F0 CBZ X0, 0x3CA5444
	0x03CA51F4 ADRP X26, 0x4BC000
	0x03CA51F8 ADRP X21, 0x4B3000
	0x03CA51FC ADRP X27, 0x4BC000
	0x03CA5200 ADRP X28, 0x4BC000
	0x03CA5204 ADRP X29, 0x4BC000
	0x03CA5208 LDR X26, [X26 + 0x2D8]
	0x03CA520C LDR X21, [X21 + 0xE48]
	0x03CA5210 LDR X27, [X27 + 0x4C0]
	0x03CA5214 LDR X28, [X28 + 0x2B0]
	0x03CA5218 LDR X29, [X29 + 0x4F8]
	0x03CA521C MOV W23, W31
	0x03CA5220 LDR W8, [X0 + 0x18]
	0x03CA5224 CMP W23, W8
	0x03CA5228 B.GE 0x3CA5358
	0x03CA522C LDR X2, [X26]
	0x03CA5230 MOV W1, W23
	0x03CA5234 BL 0x301BCCC
	0x03CA5238 CBZ X0, 0x3CA5444
	0x03CA523C MOV X24, X0
	0x03CA5240 LDR X0, [X20 + 0x120]
	0x03CA5244 CBZ X0, 0x3CA5444
	0x03CA5248 LDR W1, [X24 + 0x28]
	0x03CA524C LDR X3, [X21]
	0x03CA5250 ADD X2, X31, 0x10
	0x03CA5254 BL 0x2B10A7C
	0x03CA5258 TBZ X0, 0x0, 0x3CA52A8
	0x03CA525C LDR X8, [X31 + 0x10]
	0x03CA5260 STP X20, X8, [X24 + 0x18]
	0x03CA5264 LDR X0, [X20 + 0x128]
	0x03CA5268 CBZ X0, 0x3CA5444
	0x03CA526C LDR W10, [X0 + 0x1C]
	0x03CA5270 LDR X8, [X0 + 0x10]
	0x03CA5274 LDR X9, [X27]
	0x03CA5278 ADD W10, W10, 0x1
	0x03CA527C STR W10, [X0 + 0x1C]
	0x03CA5280 CBZ X8, 0x3CA5444
	0x03CA5284 LDRSW X10, [X0 + 0x18]
	0x03CA5288 LDR W11, [X8 + 0x18]
	0x03CA528C CMP W10, W11
	0x03CA5290 B.CS 0x3CA52F0
	0x03CA5294 ADD W9, W10, 0x1
	0x03CA5298 ADD X8, X8, X10, 0x3, LSL
	0x03CA529C STR W9, [X0 + 0x18]
	0x03CA52A0 STR X24, [X8 + 0x20]
	0x03CA52A4 B 0x3CA5304
	0x03CA52A8 LDR X0, [X20 + 0x1C0]
	0x03CA52AC CBZ X0, 0x3CA5444
	0x03CA52B0 LDR W10, [X0 + 0x1C]
	0x03CA52B4 LDR W1, [X24 + 0x28]
	0x03CA52B8 LDR X8, [X0 + 0x10]
	0x03CA52BC LDR X9, [X25]
	0x03CA52C0 ADD W10, W10, 0x1
	0x03CA52C4 STR W10, [X0 + 0x1C]
	0x03CA52C8 CBZ X8, 0x3CA5444
	0x03CA52CC LDRSW X10, [X0 + 0x18]
	0x03CA52D0 LDR W11, [X8 + 0x18]
	0x03CA52D4 CMP W10, W11
	0x03CA52D8 B.CS 0x3CA5338
	0x03CA52DC ADD W9, W10, 0x1
	0x03CA52E0 ADD X8, X8, X10, 0x2, LSL
	0x03CA52E4 STR W9, [X0 + 0x18]
	0x03CA52E8 STR W1, [X8 + 0x20]
	0x03CA52EC B 0x3CA5348
	0x03CA52F0 LDR X8, [X9 + 0x20]
	0x03CA52F4 MOV X1, X24
	0x03CA52F8 LDR X8, [X8 + 0xC0]
	0x03CA52FC LDR X2, [X8 + 0x70]
	0x03CA5300 BL 0x301BF90
	0x03CA5304 LDR X0, [X20 + 0x130]
	0x03CA5308 CBZ X0, 0x3CA5444
	0x03CA530C LDR W1, [X24 + 0x14]
	0x03CA5310 LDR X3, [X28]
	0x03CA5314 MOV X2, X24
	0x03CA5318 BL 0x2B0F05C
	0x03CA531C LDR X0, [X20 + 0x1D0]
	0x03CA5320 CBZ X0, 0x3CA5444
	0x03CA5324 LDR X2, [X29]
	0x03CA5328 MOV W1, W23
	0x03CA532C BL 0x301DA48
	0x03CA5330 SUB W23, W23, 0x1
	0x03CA5334 B 0x3CA5348
	0x03CA5338 LDR X8, [X9 + 0x20]
	0x03CA533C LDR X8, [X8 + 0xC0]
	0x03CA5340 LDR X2, [X8 + 0x70]
	0x03CA5344 BL 0x30C1698
	0x03CA5348 LDR X0, [X20 + 0x1D0]
	0x03CA534C ADD W23, W23, 0x1
	0x03CA5350 CBNZ X0, 0x3CA5220
	0x03CA5354 B 0x3CA5444
	0x03CA5358 LDRB W8, [X20 + 0x14C]
	0x03CA535C CMP W8, 0x0
	0x03CA5360 CSET W8, EQ
	0x03CA5364 ORR W9, W22, W8, 0x0
	0x03CA5368 CSET W8, NE
	0x03CA536C TBZ X9, 0x0, 0x3CA537C
	0x03CA5370 LDR W21, [X31 + 0x8]
	0x03CA5374 ORR W22, W22, W8, 0x0
	0x03CA5378 B 0x3CA5390
	0x03CA537C LDR W21, [X31 + 0x8]
	0x03CA5380 MOV X0, X20
	0x03CA5384 BL 0x3CA441C
	0x03CA5388 TBZ X0, 0x0, 0x3CA5380
	0x03CA538C MOVZ W22, 0x1
	0x03CA5390 TBZ X21, 0x0, 0x3CA539C
	0x03CA5394 MOV X0, X20
	0x03CA5398 BL 0x3CA34CC
	0x03CA539C ADRP X8, 0x450000
	0x03CA53A0 LDR X8, [X8 + 0x278]
	0x03CA53A4 LDR X8, [X8]
	0x03CA53A8 LDR X8, [X8 + 0xB8]
	0x03CA53AC LDR X8, [X8]
	0x03CA53B0 STR X8, [X19]
	0x03CA53B4 LDR X0, [X20 + 0x1D0]
	0x03CA53B8 CBZ X0, 0x3CA5444
	0x03CA53BC MOV W21, W31
	0x03CA53C0 LDR W8, [X0 + 0x18]
	0x03CA53C4 CMP W21, W8
	0x03CA53C8 B.GE 0x3CA5448
	0x03CA53CC LDR X2, [X26]
	0x03CA53D0 MOV W1, W21
	0x03CA53D4 BL 0x301BCCC
	0x03CA53D8 CBZ X0, 0x3CA5444
	0x03CA53DC MOV X8, X0
	0x03CA53E0 LDR X0, [X20 + 0x1E0]
	0x03CA53E4 CBZ X0, 0x3CA5444
	0x03CA53E8 LDR W10, [X0 + 0x1C]
	0x03CA53EC LDR W1, [X8 + 0x14]
	0x03CA53F0 LDR X8, [X0 + 0x10]
	0x03CA53F4 LDR X9, [X25]
	0x03CA53F8 ADD W10, W10, 0x1
	0x03CA53FC STR W10, [X0 + 0x1C]
	0x03CA5400 CBZ X8, 0x3CA5444
	0x03CA5404 LDRSW X10, [X0 + 0x18]
	0x03CA5408 LDR W11, [X8 + 0x18]
	0x03CA540C CMP W10, W11
	0x03CA5410 B.CS 0x3CA5428
	0x03CA5414 ADD W9, W10, 0x1
	0x03CA5418 ADD X8, X8, X10, 0x2, LSL

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x744000
	015 Move W8, [X21+752]
	016 Move W28, W3
	017 Move X19, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {101}
	024 Move X0, 0x4BE000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move X0, 0x450000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x4BE000
	031 Move X0, [X0+688]
	032 Call 0x1C17CF4
	033 Move X0, 0x4B5000
	034 Move X0, [X0+3224]
	035 Call 0x1C17CF4
	036 Move X0, 0x4BE000
	037 Move X0, [X0+584]
	038 Call 0x1C17CF4
	039 Move X0, 0x4B5000
	040 Move X0, [X0+3240]
	041 Call 0x1C17CF4
	042 Move X0, 0x4B5000
	043 Move X0, [X0+3656]
	044 Call 0x1C17CF4
	045 Move X0, 0x4B5000
	046 Move X0, [X0+3216]
	047 Call 0x1C17CF4
	048 Move X0, 0x4B5000
	049 Move X0, [X0+3664]
	050 Call 0x1C17CF4
	051 Move X0, 0x4B5000
	052 Move X0, [X0+3008]
	053 Call 0x1C17CF4
	054 Move X0, 0x4AB000
	055 Move X0, [X0+2088]
	056 Call 0x1C17CF4
	057 Move X0, 0x4B5000
	058 Move X0, [X0+3672]
	059 Call 0x1C17CF4
	060 Move X0, 0x4B5000
	061 Move X0, [X0+3088]
	062 Call 0x1C17CF4
	063 Move X0, 0x456000
	064 Move X0, [X0+464]
	065 Call 0x1C17CF4
	066 Move X0, 0x4BE000
	067 Move X0, [X0+1216]
	068 Call 0x1C17CF4
	069 Move X0, 0x4BE000
	070 Move X0, [X0+1264]
	071 Call 0x1C17CF4
	072 Move X0, 0x4A7000
	073 Move X0, [X0+2896]
	074 Call 0x1C17CF4
	075 Move X0, 0x4BE000
	076 Move X0, [X0+1272]
	077 Call 0x1C17CF4
	078 Move X0, 0x47D000
	079 Move X0, [X0+1368]
	080 Call 0x1C17CF4
	081 Move X0, 0x4B5000
	082 Move X0, [X0+2136]
	083 Call 0x1C17CF4
	084 Move X0, 0x4BE000
	085 Move X0, [X0+720]
	086 Call 0x1C17CF4
	087 Move X0, 0x4BE000
	088 Move X0, [X0+728]
	089 Call 0x1C17CF4
	090 Move X0, 0x4B5000
	091 Move X0, [X0+3688]
	092 Call 0x1C17CF4
	093 Move X0, 0x4B5000
	094 Move X0, [X0+3696]
	095 Call 0x1C17CF4
	096 Move X0, 0x4B5000
	097 Move X0, [X0+3704]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X21+752], W8
	101 Move [X31+16], X31
	102 Move [X31+24], X31
	103 Compare X22, 0
	104 JumpIfEqual {122}
	105 Move X8, [X22+24]
	106 Compare X8, 0
	107 JumpIfEqual {122}
	108 Move W8, [X20+168]
	109 Compare W8, 0
	110 JumpIfEqual {122}
	111 Move X0, X20
	112 Call FontAsset.LoadFontFace, X0
	113 Compare W0, 0
	114 JumpIfEqual {170}
	115 Move X8, 0x4B5000
	116 Move X8, [X8+3664]
	117 Move X0, X22
	118 Move X1, [X8]
	119 Call Enumerable.ToArray, X0
	120 Move W8, W31
	121 Move [X19], X0
	122 Move X22, 0x4B5000
	123 Move W21, [X20+168]
	124 Move X22, [X22+3704]
	125 Move X0, X20
	126 Move X1, X31
	127 Call Object.get_name, X0
	128 Move X8, [X22]
	129 Move X1, X0
	130 Compare W21, 0
	131 JumpIfEqual {134}
	132 Move X9, 0x4B5000
	133 Move X9, [X9+3688]
	134 Move X9, 0x4B5000
	135 Move X9, [X9+3696]
	136 Move X2, [X9]
	137 Move X0, X8
	138 Move X3, X31
	139 Call String.Concat, X0, X1, X2
	140 Move X8, 0x450000
	141 Move X8, [X8+2600]
	142 Move X21, X0
	143 Move X8, [X8]
	144 Move W9, [X8+224]
	145 Compare W9, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X8
	148 Call 0x1C17DFC
	149 Move X0, X21
	150 Move X1, X20
	151 Move X2, X31
	152 Call Debug.LogWarning, X0, X1
	153 Move W8, W31
	154 Move [X19], X31
	155 Move X20, [X31+112]
	156 Move X19, [X31+120]
	157 Move X22, [X31+96]
	158 Move X21, [X31+104]
	159 Move X24, [X31+80]
	160 Move X23, [X31+88]
	161 Move X26, [X31+64]
	162 Move X25, [X31+72]
	163 Move X28, [X31+48]
	164 Move X27, [X31+56]
	165 Move X29, [X31+32]
	166 Move X30, [X31+40]
	167 And W0, W8, 1
	168 Add X31, X31, 128
	169 Return X0
	170 Move X8, [X20+304]
	171 Compare X8, 0
	172 JumpIfEqual {176}
	173 Move X8, [X20+288]
	174 Compare X8, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X20
	177 Call FontAsset.ReadFontAssetDefinition, X0
	178 Move X8, [X20+448]
	179 Compare X8, 0
	180 JumpIfEqual {833}
	181 Move W9, [X8+28]
	182 Add W9, W9, 1
	183 Move [X8+24], W31
	184 Move [X8+28], W9
	185 Move X0, [X20+456]
	186 Compare X0, 0
	187 JumpIfEqual {833}
	188 Move X21, 0x4B5000
	189 Move X21, [X21+3672]
	190 Move X1, [X21]
	191 Call HashSet`1<UInt32>.Clear, X0
	192 Move X8, [X20+464]
	193 Compare X8, 0
	194 JumpIfEqual {833}
	195 Move W2, [X8+24]
	196 Move W9, [X8+28]
	197 Add W9, W9, 1
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move [X8+24], W31
	200 Move [X8+28], W9
	201 Move X0, [X8+16]
	202 Move W1, W31
	203 Move X3, X31
	204 Call Array.Clear, X0, X1, X2
	205 Move X0, [X20+472]
	206 Compare X0, 0
	207 JumpIfEqual {833}
	208 Move X1, [X21]
	209 Call HashSet`1<UInt32>.Clear, X0
	210 Move X8, [X20+480]
	211 Compare X8, 0
	212 JumpIfEqual {833}
	213 Move W9, [X8+28]
	214 Move [X31+8], W28
	215 Add W9, W9, 1
	216 Move [X8+24], W31
	217 Move [X8+28], W9
	218 Move X8, [X22+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 And X8, X8, 0
	221 Compare X8, 0
	222 JumpIfEqual {834}
	223 Move [X31+12], W31
	224 Move X28, 0x4BE000
	225 Move X21, 0x4B5000
	226 Move X28, [X28+584]
	227 Move X21, [X21+3008]
	228 Move X26, X31
	229 Subtract X27, X8, 1
	230 Add X29, X22, 32
	231 Move X0, [X20+304]
	232 Compare X0, 0
	233 JumpIfEqual {833}
	234 Move W23, [X29]
	235 Move X2, [X28]
	236 Move W1, W23
	237 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {442}
	242 Move X0, [X21]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1C17DFC
	247 Move W0, W23
	248 Move X1, X31
	249 Call FontEngine.GetGlyphIndex, X0
	250 Move W25, W0
	251 Compare W0, 0
	252 JumpIfNotEqual {274}
	253 Move W8, 0x2011
	254 NotImplemented "Instruction CMP not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X0, [X21]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move W0, 32
	263 Move X0, [X21]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move W0, 45
	269 Move X1, X31
	270 Call FontEngine.GetGlyphIndex, X0
	271 Move W25, W0
	272 Compare W0, 0
	273 JumpIfEqual {375}
	274 Move X8, 0x4BE000
	275 Move X8, [X8+992]
	276 Move X0, [X8]
	277 Call 0x1C17F10
	278 Move X1, X31
	279 Move X24, X0
	280 Call Object..ctor, X0
	281 Move W8, 1
	282 Move [X24+16], W8
	283 Move W8, 0x3F800000
	284 Move [X24+20], W23
	285 Move [X24+24], X31
	286 Move [X24+32], X31
	287 Move [X24+40], W25
	288 Move [X24+44], W8
	289 Move X0, [X20+288]
	290 Compare X0, 0
	291 JumpIfEqual {833}
	292 Move X8, 0x4B5000
	293 Move X8, [X8+3240]
	294 Move W1, W25
	295 Move X2, [X8]
	296 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	297 Move TEMP, X0
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfNotEqual {330}
	301 Move X0, [X20+288]
	302 Compare X0, 0
	303 JumpIfEqual {833}
	304 Move X8, 0x4B5000
	305 Move X8, [X8+3216]
	306 Move W1, W25
	307 Move X2, [X8]
	308 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	309 Move [X24+24], X20
	310 Move [X24+32], X0
	311 Move X0, [X20+296]
	312 Compare X0, 0
	313 JumpIfEqual {833}
	314 Move X9, 0x4BE000
	315 Move W10, [X0+28]
	316 Move X8, [X0+16]
	317 Move X9, [X9+1216]
	318 Add W10, W10, 1
	319 Move X9, [X9]
	320 Move [X0+28], W10
	321 Compare X8, 0
	322 JumpIfEqual {833}
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Move W11, [X8+24]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Add W9, W10, 1
	327 Add X8, X8, X10
	328 Move [X0+24], W9
	329 Move [X8+32], X24
	330 Move X0, [X20+456]
	331 Compare X0, 0
	332 JumpIfEqual {833}
	333 Move X8, 0x4AB000
	334 Move X8, [X8+2088]
	335 Move W1, W25
	336 Move X2, [X8]
	337 Call HashSet`1<UInt32>.Add, X0, X1
	338 Move TEMP, X0
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfNotEqual {399}
	342 Move X0, [X20+448]
	343 Compare X0, 0
	344 JumpIfEqual {833}
	345 Move X9, 0x456000
	346 Move W10, [X0+28]
	347 Move X8, [X0+16]
	348 Move X9, [X9+464]
	349 Add W10, W10, 1
	350 Move X9, [X9]
	351 Move [X0+28], W10
	352 Compare X8, 0
	353 JumpIfEqual {833}
	354 NotImplemented "Instruction LDRSW not yet implemented."
	355 Move W11, [X8+24]
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Add W9, W10, 1
	358 Add X8, X8, X10
	359 Move [X0+24], W9
	360 Move [X8+32], W25
	361 Move X8, [X9+32]
	362 Move X1, X24
	363 Move X8, [X8+192]
	364 Move X2, [X8+112]
	365 Call List`1<Object>.AddWithResize, X0, X1
	366 Move X0, [X20+304]
	367 Compare X0, 0
	368 JumpIfEqual {833}
	369 Move X8, 0x4BE000
	370 Move X8, [X8+688]
	371 Move W1, W23
	372 Move X2, X24
	373 Move X3, [X8]
	374 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	375 Move X0, [X20+480]
	376 Compare X0, 0
	377 JumpIfEqual {833}
	378 Move X9, 0x456000
	379 Move W10, [X0+28]
	380 Move X8, [X0+16]
	381 Move X9, [X9+464]
	382 Add W10, W10, 1
	383 Move X9, [X9]
	384 Move [X0+28], W10
	385 Compare X8, 0
	386 JumpIfEqual {833}
	387 NotImplemented "Instruction LDRSW not yet implemented."
	388 Move W11, [X8+24]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Add W9, W10, 1
	391 Add X8, X8, X10
	392 Move [X0+24], W9
	393 Move [X8+32], W23
	394 Move X8, [X9+32]
	395 Move W1, W25
	396 Move X8, [X8+192]
	397 Move X2, [X8+112]
	398 Call List`1<UInt32>.AddWithResize, X0, X1
	399 Move X0, [X20+472]
	400 Compare X0, 0
	401 JumpIfEqual {833}
	402 Move X8, 0x4AB000
	403 Move X8, [X8+2088]
	404 Move W1, W23
	405 Move X2, [X8]
	406 Call HashSet`1<UInt32>.Add, X0, X1
	407 Move TEMP, X0
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfNotEqual {442}
	411 Move X0, [X20+464]
	412 Compare X0, 0
	413 JumpIfEqual {833}
	414 Move X9, 0x4BE000
	415 Move W10, [X0+28]
	416 Move X8, [X0+16]
	417 Move X9, [X9+1216]
	418 Add W10, W10, 1
	419 Move X9, [X9]
	420 Move [X0+28], W10
	421 Compare X8, 0
	422 JumpIfEqual {833}
	423 NotImplemented "Instruction LDRSW not yet implemented."
	424 Move W11, [X8+24]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Add W9, W10, 1
	427 Add X8, X8, X10
	428 Move [X0+24], W9
	429 Move [X8+32], X24
	430 Move X8, [X9+32]
	431 Move X1, X24
	432 Move X8, [X8+192]
	433 Move X2, [X8+112]
	434 Call List`1<Object>.AddWithResize, X0, X1
	435 Move X8, [X9+32]
	436 Move W1, W23
	437 Move X8, [X8+192]
	438 Move X2, [X8+112]
	439 Call List`1<UInt32>.AddWithResize, X0, X1
	440 Move W8, 1
	441 Move [X31+12], W8
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move W8, [X22+24]
	444 Add X26, X26, 1
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Move [X31+12], W31
	447 Move X8, [X20+448]
	448 Compare X8, 0
	449 JumpIfEqual {833}
	450 Move W8, [X8+24]
	451 Compare W8, 0
	452 JumpIfEqual {766}
	453 Move X8, [X20+320]
	454 Compare X8, 0
	455 JumpIfEqual {833}
	456 NotImplemented "Instruction LDRSW not yet implemented."
	457 Move W10, [X8+24]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Add X8, X8, X9
	460 Move X0, [X8+32]
	461 Compare X0, 0
	462 JumpIfEqual {833}
	463 Move X8, [X0]
	464 Move X9, [X8+392]
	465 Move X1, [X8+400]
	466 NotImplemented "Instruction BLR not yet implemented."
	467 Move W8, [X20+336]
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move X8, [X20+320]
	470 Compare X8, 0
	471 JumpIfEqual {833}
	472 NotImplemented "Instruction LDRSW not yet implemented."
	473 Move W10, [X8+24]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Add X8, X8, X9
	476 Move X0, [X8+32]
	477 Compare X0, 0
	478 JumpIfEqual {833}
	479 Move X8, [X0]
	480 Move X9, [X8+424]
	481 Move X1, [X8+432]
	482 NotImplemented "Instruction BLR not yet implemented."
	483 Move W8, [X20+340]
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X8, [X20+320]
	486 Compare X8, 0
	487 JumpIfEqual {833}
	488 NotImplemented "Instruction LDRSW not yet implemented."
	489 Move W10, [X8+24]
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Add X8, X8, X9
	492 Move X0, [X8+32]
	493 Compare X0, 0
	494 JumpIfEqual {833}
	495 Move W2, [X20+340]
	496 Move W1, [X20+336]
	497 Move X3, X31
	498 Call Texture2D.Reinitialize, X0, X1, X2
	499 Move X8, [X20+320]
	500 Compare X8, 0
	501 JumpIfEqual {833}
	502 NotImplemented "Instruction LDRSW not yet implemented."
	503 Move W10, [X8+24]
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X10, 0x4B5000
	506 Move X10, [X10+3008]
	507 Add X8, X8, X9
	508 Move X22, [X8+32]
	509 Move X0, [X10]
	510 Move W9, [X0+224]
	511 Compare W9, 0
	512 JumpIfNotEqual {514}
	513 Call 0x1C17DFC
	514 Move X0, X22
	515 Move X1, X31
	516 Call FontEngine.ResetAtlasTexture, X0
	517 Move X8, [X20+320]
	518 Compare X8, 0
	519 JumpIfEqual {833}
	520 NotImplemented "Instruction LDRSW not yet implemented."
	521 Move W10, [X8+24]
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Move X10, 0x4B5000
	524 Move X22, [X20+448]
	525 Move W23, [X20+344]
	526 Move X10, [X10+3008]
	527 Add X8, X8, X9
	528 Move X24, [X20+352]
	529 Move X26, [X20+360]
	530 Move W25, [X20+348]
	531 Move X0, [X10]
	532 Move X27, [X8+32]
	533 Move W9, [X0+224]
	534 Compare W9, 0
	535 JumpIfNotEqual {537}
	536 Call 0x1C17DFC
	537 Add X7, X31, 24
	538 Move X0, X22
	539 Move W1, W23
	540 Move W2, W31
	541 Move X3, X26
	542 Move X4, X24
	543 Move W5, W25
	544 Move X6, X27
	545 Move [X31], X31
	546 Call FontEngine.TryAddGlyphsToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	547 Move X8, [X31+24]
	548 Compare X8, 0
	549 JumpIfEqual {833}
	550 Move X26, 0x4B5000
	551 Move X27, 0x4B5000
	552 Move X25, 0x456000
	553 Move X26, [X26+3088]
	554 Move X27, [X27+3224]
	555 Move X25, [X25+464]
	556 Move W22, W0
	557 Move X21, X31
	558 Move W9, [X8+24]
	559 NotImplemented "Instruction CMP not yet implemented."
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Add X8, X8, X21
	562 Move X24, [X8+32]
	563 Compare X24, 0
	564 JumpIfEqual {650}
	565 Move X0, X24
	566 Move X1, X31
	567 Call Glyph.get_index, X0
	568 Move W1, [X20+328]
	569 Move W23, W0
	570 Move X0, X24
	571 Move X2, X31
	572 Call Glyph.set_atlasIndex, X0, X1
	573 Move X0, [X20+280]
	574 Compare X0, 0
	575 JumpIfEqual {833}
	576 Move W10, [X0+28]
	577 Move X8, [X0+16]
	578 Move X9, [X26]
	579 Add W10, W10, 1
	580 Move [X0+28], W10
	581 Compare X8, 0
	582 JumpIfEqual {833}
	583 NotImplemented "Instruction LDRSW not yet implemented."
	584 Move W11, [X8+24]
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Add W9, W10, 1
	587 Add X8, X8, X10
	588 Move [X0+24], W9
	589 Move [X8+32], X24
	590 Move X8, [X9+32]
	591 Move X1, X24
	592 Move X8, [X8+192]
	593 Move X2, [X8+112]
	594 Call List`1<Object>.AddWithResize, X0, X1
	595 Move X0, [X20+288]
	596 Compare X0, 0
	597 JumpIfEqual {833}
	598 Move X3, [X27]
	599 Move W1, W23
	600 Move X2, X24
	601 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	602 Move X0, [X20+440]
	603 Compare X0, 0
	604 JumpIfEqual {833}
	605 Move W10, [X0+28]
	606 Move X8, [X0+16]
	607 Move X9, [X25]
	608 Add W10, W10, 1
	609 Move [X0+28], W10
	610 Compare X8, 0
	611 JumpIfEqual {833}
	612 NotImplemented "Instruction LDRSW not yet implemented."
	613 Move W11, [X8+24]
	614 NotImplemented "Instruction CMP not yet implemented."
	615 Add W9, W10, 1
	616 Add X8, X8, X10
	617 Move [X0+24], W9
	618 Move [X8+32], W23
	619 Move X8, [X9+32]
	620 Move W1, W23
	621 Move X8, [X8+192]
	622 Move X2, [X8+112]
	623 Call List`1<UInt32>.AddWithResize, X0, X1
	624 Move X0, [X20+432]
	625 Compare X0, 0
	626 JumpIfEqual {833}
	627 Move W10, [X0+28]
	628 Move X8, [X0+16]
	629 Move X9, [X25]
	630 Add W10, W10, 1
	631 Move [X0+28], W10
	632 Compare X8, 0
	633 JumpIfEqual {833}
	634 NotImplemented "Instruction LDRSW not yet implemented."
	635 Move W11, [X8+24]
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Add W9, W10, 1
	638 Add X8, X8, X10
	639 Move [X0+24], W9
	640 Move [X8+32], W23
	641 Move X8, [X9+32]
	642 Move W1, W23
	643 Move X8, [X8+192]
	644 Move X2, [X8+112]
	645 Call List`1<UInt32>.AddWithResize, X0, X1
	646 Move X8, [X31+24]
	647 Add X21, X21, 1
	648 Compare X8, 0
	649 JumpIfNotEqual {558}
	650 Move X8, [X20+448]
	651 Compare X8, 0
	652 JumpIfEqual {833}
	653 Move W9, [X8+28]
	654 Add W9, W9, 1
	655 Move [X8+24], W31
	656 Move [X8+28], W9
	657 Move X0, [X20+464]
	658 Compare X0, 0
	659 JumpIfEqual {833}
	660 Move X26, 0x4BD000
	661 Move X21, 0x4B4000
	662 Move X27, 0x4BD000
	663 Move X28, 0x4BD000
	664 Move X29, 0x4BD000
	665 Move X26, [X26+728]
	666 Move X21, [X21+3656]
	667 Move X27, [X27+1216]
	668 Move X28, [X28+688]
	669 Move X29, [X29+1272]
	670 Move W23, W31
	671 Move W8, [X0+24]
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move X2, [X26]
	674 Move W1, W23
	675 Call List`1<Object>.get_Item, X0, X1
	676 Compare X0, 0
	677 JumpIfEqual {833}
	678 Move X24, X0
	679 Move X0, [X20+288]
	680 Compare X0, 0
	681 JumpIfEqual {833}
	682 Move W1, [X24+40]
	683 Move X3, [X21]
	684 Add X2, X31, 16
	685 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	686 Move TEMP, X0
	687 And TEMP, TEMP, 1
	688 Compare TEMP, 1
	689 JumpIfNotEqual {710}
	690 Move X8, [X31+16]
	691 Move [X24+24], X20
	692 Move [X24+32], X8
	693 Move X0, [X20+296]
	694 Compare X0, 0
	695 JumpIfEqual {833}
	696 Move W10, [X0+28]
	697 Move X8, [X0+16]
	698 Move X9, [X27]
	699 Add W10, W10, 1
	700 Move [X0+28], W10
	701 Compare X8, 0
	702 JumpIfEqual {833}
	703 NotImplemented "Instruction LDRSW not yet implemented."
	704 Move W11, [X8+24]
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Add W9, W10, 1
	707 Add X8, X8, X10
	708 Move [X0+24], W9
	709 Move [X8+32], X24
	710 Move X0, [X20+448]
	711 Compare X0, 0
	712 JumpIfEqual {833}
	713 Move W10, [X0+28]
	714 Move W1, [X24+40]
	715 Move X8, [X0+16]
	716 Move X9, [X25]
	717 Add W10, W10, 1
	718 Move [X0+28], W10
	719 Compare X8, 0
	720 JumpIfEqual {833}
	721 NotImplemented "Instruction LDRSW not yet implemented."
	722 Move W11, [X8+24]
	723 NotImplemented "Instruction CMP not yet implemented."
	724 Add W9, W10, 1
	725 Add X8, X8, X10
	726 Move [X0+24], W9
	727 Move [X8+32], W1
	728 Move X8, [X9+32]
	729 Move X1, X24
	730 Move X8, [X8+192]
	731 Move X2, [X8+112]
	732 Call List`1<Object>.AddWithResize, X0, X1
	733 Move X0, [X20+304]
	734 Compare X0, 0
	735 JumpIfEqual {833}
	736 Move W1, [X24+20]
	737 Move X3, [X28]
	738 Move X2, X24
	739 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	740 Move X0, [X20+464]
	741 Compare X0, 0
	742 JumpIfEqual {833}
	743 Move X2, [X29]
	744 Move W1, W23
	745 Call List`1<Object>.RemoveAt, X0, X1
	746 Subtract W23, W23, 1
	747 Move X8, [X9+32]
	748 Move X8, [X8+192]
	749 Move X2, [X8+112]
	750 Call List`1<UInt32>.AddWithResize, X0, X1
	751 Move X0, [X20+464]
	752 Add W23, W23, 1
	753 Compare X0, 0
	754 JumpIfNotEqual {671}
	755 Move W8, [X20+332]
	756 NotImplemented "Instruction CMP not yet implemented."
	757 NotImplemented "Instruction CSET not yet implemented."
	758 Or W9, W22, W8
	759 NotImplemented "Instruction CSET not yet implemented."
	760 Move TEMP, X9
	761 And TEMP, TEMP, 1
	762 Compare TEMP, 1
	763 JumpIfNotEqual {767}
	764 Move W21, [X31+8]
	765 Or W22, W22, W8
	766 Move [X19], X22
	767 Move W21, [X31+8]
	768 Move X0, X20
	769 Call FontAsset.TryAddGlyphsToNewAtlasTexture, X0
	770 Move TEMP, X0
	771 And TEMP, TEMP, 1
	772 Compare TEMP, 1
	773 JumpIfNotEqual {768}
	774 Move W22, 1
	775 Move TEMP, X21
	776 And TEMP, TEMP, 1
	777 Compare TEMP, 1
	778 JumpIfNotEqual {781}
	779 Move X0, X20
	780 Call FontAsset.UpdateAllFontFeatures, X0
	781 Move X0, [X20+464]
	782 Compare X0, 0
	783 JumpIfEqual {833}
	784 Move W21, W31
	785 Move W8, [X0+24]
	786 NotImplemented "Instruction CMP not yet implemented."
	787 Move X2, [X26]
	788 Move W1, W21
	789 Call List`1<Object>.get_Item, X0, X1
	790 Compare X0, 0
	791 JumpIfEqual {833}
	792 Move X8, X0
	793 Move X0, [X20+480]
	794 Compare X0, 0
	795 JumpIfEqual {833}
	796 Move W10, [X0+28]
	797 Move W1, [X8+20]
	798 Move X8, [X0+16]
	799 Move X9, [X25]
	800 Add W10, W10, 1
	801 Move [X0+28], W10
	802 Compare X8, 0
	803 JumpIfEqual {833}
	804 NotImplemented "Instruction LDRSW not yet implemented."
	805 Move W11, [X8+24]
	806 NotImplemented "Instruction CMP not yet implemented."
	807 Add W9, W10, 1
	808 Add X8, X8, X10
	809 Move [X0+24], W9
	810 Move [X8+32], W1
	811 Move X8, [X9+32]
	812 Move X8, [X8+192]
	813 Move X2, [X8+112]
	814 Call List`1<UInt32>.AddWithResize, X0, X1
	815 Move X0, [X20+464]
	816 Add W21, W21, 1
	817 Compare X0, 0
	818 JumpIfNotEqual {785}
	819 Move [X19], X31
	820 Move X0, [X20+480]
	821 Compare X0, 0
	822 JumpIfEqual {833}
	823 Move W8, [X0+24]
	824 NotImplemented "Instruction CMP not yet implemented."
	825 Move X8, 0x47C000
	826 Move X8, [X8+1368]
	827 Move X1, [X8]
	828 Call List`1<UInt32>.ToArray, X0
	829 Move [X19], X0
	830 Move W8, [X31+12]
	831 Xor W8, W8, 1
	832 And W8, W22, W8
	833 Call 0x1C17F20
	834 Call 0x1C17F28

Method: System.Boolean TryAddCharacters(System.String characters, System.Boolean includeFontFeatures = False)

Disassembly:
	0x03CA5894 MOV X1, X31
	0x03CA5898 BL 0x32278CC
	0x03CA589C LDR X8, [X20 + 0x140]
	0x03CA58A0 CBZ X8, 0x3CA5C54
	0x03CA58A4 LDRSW X9, [X20 + 0x148]
	0x03CA58A8 LDR W10, [X8 + 0x18]
	0x03CA58AC CMP W9, W10
	0x03CA58B0 B.CS 0x3CA5C5C

ISIL:
	001 Move [X31-16], X30
	002 And W3, W2, 1
	003 Add X2, X31, 8
	004 Move [X31+8], X31
	005 Call FontAsset.TryAddCharacters, X0, X1, X2, X3
	006 And W0, W0, 1
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean TryAddCharacters(System.String characters, out System.String missingCharacters, System.Boolean includeFontFeatures = False)

Disassembly:
	0x03CA58B4 ADRP X10, 0x44E000
	0x03CA58B8 LDR X10, [X10 + 0xA28]
	0x03CA58BC MOV X21, X0
	0x03CA58C0 ADD X8, X8, X9, 0x3, LSL
	0x03CA58C4 LDR X20, [X8 + 0x20]
	0x03CA58C8 LDR X0, [X10]
	0x03CA58CC LDR W9, [X0 + 0xE0]
	0x03CA58D0 CBNZ W9, 0x3CA58D8
	0x03CA58D4 BL 0x1C16DFC
	0x03CA58D8 MOV X0, X21
	0x03CA58DC MOV X1, X20
	0x03CA58E0 MOV X2, X31
	0x03CA58E4 BL 0x3C06B0C
	0x03CA58E8 MOV X20, X31
	0x03CA58EC MOV W22, W31
	0x03CA58F0 MOVZ W23, 0x3
	0x03CA58F4 MOV X0, X19
	0x03CA58F8 MOV X1, X31
	0x03CA58FC MOV X2, X31
	0x03CA5900 BL 0x33C5D2C
	0x03CA5904 TBZ X0, 0x0, 0x3CA5914
	0x03CA5908 MOV X0, X19
	0x03CA590C MOV X1, X31
	0x03CA5910 BL 0x3BFEA0C
	0x03CA5914 CBNZ X20, 0x3CA5C08
	0x03CA5918 CMP W23, 0xC
	0x03CA591C B.EQ 0x3CA5924
	0x03CA5920 CBNZ W23, 0x3CA5928
	0x03CA5924 MOV W22, W31
	0x03CA5928 MOV W0, W22
	0x03CA592C LDP X20, X19, [X31 + 0x50]
	0x03CA5930 LDP X22, X21, [X31 + 0x40]
	0x03CA5934 LDP X24, X23, [X31 + 0x30]
	0x03CA5938 LDP X26, X25, [X31 + 0x20]
	0x03CA593C LDP X30, X27, [X31 + 0x10]
	0x03CA5940 ADD X31, X31, 0x60
	0x03CA5944 RET
	0x03CA5948 LDRB W8, [X20 + 0x14C]
	0x03CA594C CBZ W8, 0x3CA5A24
	0x03CA5950 MOV X0, X20
	0x03CA5954 BL 0x3CA5DF8
	0x03CA5958 LDR X8, [X20 + 0x140]
	0x03CA595C CBZ X8, 0x3CA5CA0
	0x03CA5960 LDRSW X9, [X20 + 0x148]
	0x03CA5964 LDR W10, [X8 + 0x18]
	0x03CA5968 CMP W9, W10
	0x03CA596C B.CS 0x3CA5CA4
	0x03CA5970 LDR X0, [X24]
	0x03CA5974 ADD X8, X8, X9, 0x3, LSL
	0x03CA5978 LDR W23, [X20 + 0x158]
	0x03CA597C LDP X25, X27, [X20 + 0x160]
	0x03CA5980 LDR W24, [X20 + 0x15C]
	0x03CA5984 LDR W9, [X0 + 0xE0]
	0x03CA5988 LDR X26, [X8 + 0x20]
	0x03CA598C CBNZ W9, 0x3CA5994
	0x03CA5990 BL 0x1C16DFC
	0x03CA5994 MOV W0, W21
	0x03CA5998 MOV W1, W23
	0x03CA599C MOV W2, W31
	0x03CA59A0 MOV X3, X27
	0x03CA59A4 MOV X4, X25
	0x03CA59A8 MOV W5, W24
	0x03CA59AC MOV X6, X26
	0x03CA59B0 MOV X7, X22
	0x03CA59B4 STR X31, [X31]
	0x03CA59B8 BL 0x3C9CF80
	0x03CA59BC TBZ X0, 0x0, 0x3CA5A24
	0x03CA59C0 LDR X0, [X22]
	0x03CA59C4 CBZ X0, 0x3CA5CA8
	0x03CA59C8 LDR W1, [X20 + 0x148]
	0x03CA59CC MOV X2, X31
	0x03CA59D0 BL 0x3C9C4F8
	0x03CA59D4 LDR X0, [X20 + 0x118]
	0x03CA59D8 CBZ X0, 0x3CA5CAC
	0x03CA59DC ADRP X9, 0x4B3000
	0x03CA59E0 LDR X1, [X22]
	0x03CA59E4 LDR X9, [X9 + 0xC10]
	0x03CA59E8 LDR W10, [X0 + 0x1C]
	0x03CA59EC LDR X8, [X0 + 0x10]
	0x03CA59F0 LDR X9, [X9]
	0x03CA59F4 ADD W10, W10, 0x1
	0x03CA59F8 STR W10, [X0 + 0x1C]
	0x03CA59FC CBZ X8, 0x3CA5CB0
	0x03CA5A00 LDRSW X10, [X0 + 0x18]
	0x03CA5A04 LDR W11, [X8 + 0x18]
	0x03CA5A08 CMP W10, W11
	0x03CA5A0C B.CS 0x3CA5B0C
	0x03CA5A10 ADD W9, W10, 0x1
	0x03CA5A14 ADD X8, X8, X10, 0x3, LSL
	0x03CA5A18 STR W9, [X0 + 0x18]
	0x03CA5A1C STR X1, [X8 + 0x20]
	0x03CA5A20 B 0x3CA5B1C
	0x03CA5A24 MOV X20, X31
	0x03CA5A28 MOV W22, W31
	0x03CA5A2C MOVZ W23, 0xC
	0x03CA5A30 B 0x3CA58F4
	0x03CA5A34 LDR X8, [X9 + 0x20]
	0x03CA5A38 LDR X8, [X8 + 0xC0]
	0x03CA5A3C LDR X2, [X8 + 0x70]
	0x03CA5A40 BL 0x301BF90
	0x03CA5A44 LDR X0, [X20 + 0x120]
	0x03CA5A48 CBZ X0, 0x3CA5C8C
	0x03CA5A4C ADRP X8, 0x4B3000
	0x03CA5A50 LDR X2, [X22]
	0x03CA5A54 LDR X8, [X8 + 0xC98]
	0x03CA5A58 LDR X3, [X8]
	0x03CA5A5C MOV W1, W21
	0x03CA5A60 BL 0x2B0F05C
	0x03CA5A64 LDR X0, [X20 + 0x1B0]
	0x03CA5A68 CBZ X0, 0x3CA5C90
	0x03CA5A6C ADRP X22, 0x454000
	0x03CA5A70 LDR X22, [X22 + 0x1D0]
	0x03CA5A74 LDR W10, [X0 + 0x1C]
	0x03CA5A78 LDR X8, [X0 + 0x10]
	0x03CA5A7C LDR X9, [X22]
	0x03CA5A80 ADD W10, W10, 0x1
	0x03CA5A84 STR W10, [X0 + 0x1C]
	0x03CA5A88 CBZ X8, 0x3CA5C94
	0x03CA5A8C LDRSW X10, [X0 + 0x18]
	0x03CA5A90 LDR W11, [X8 + 0x18]
	0x03CA5A94 CMP W10, W11
	0x03CA5A98 B.CS 0x3CA5AB0
	0x03CA5A9C ADD W9, W10, 0x1
	0x03CA5AA0 ADD X8, X8, X10, 0x2, LSL
	0x03CA5AA4 STR W9, [X0 + 0x18]
	0x03CA5AA8 STR W21, [X8 + 0x20]
	0x03CA5AAC B 0x3CA5AC4
	0x03CA5AB0 LDR X8, [X9 + 0x20]
	0x03CA5AB4 LDR X8, [X8 + 0xC0]
	0x03CA5AB8 LDR X2, [X8 + 0x70]
	0x03CA5ABC MOV W1, W21
	0x03CA5AC0 BL 0x30C1698
	0x03CA5AC4 LDR X0, [X20 + 0x1B8]
	0x03CA5AC8 CBZ X0, 0x3CA5C98
	0x03CA5ACC LDR W10, [X0 + 0x1C]
	0x03CA5AD0 LDR X8, [X0 + 0x10]
	0x03CA5AD4 LDR X9, [X22]
	0x03CA5AD8 ADD W10, W10, 0x1
	0x03CA5ADC STR W10, [X0 + 0x1C]
	0x03CA5AE0 CBZ X8, 0x3CA5C9C
	0x03CA5AE4 LDRSW X10, [X0 + 0x18]
	0x03CA5AE8 LDR W11, [X8 + 0x18]
	0x03CA5AEC CMP W10, W11
	0x03CA5AF0 B.CC 0x3CA5BCC
	0x03CA5AF4 LDR X8, [X9 + 0x20]
	0x03CA5AF8 LDR X8, [X8 + 0xC0]
	0x03CA5AFC LDR X2, [X8 + 0x70]
	0x03CA5B00 MOV W1, W21
	0x03CA5B04 BL 0x30C1698
	0x03CA5B08 B 0x3CA5BFC
	0x03CA5B0C LDR X8, [X9 + 0x20]
	0x03CA5B10 LDR X8, [X8 + 0xC0]
	0x03CA5B14 LDR X2, [X8 + 0x70]
	0x03CA5B18 BL 0x301BF90
	0x03CA5B1C LDR X0, [X20 + 0x120]
	0x03CA5B20 CBZ X0, 0x3CA5CB4
	0x03CA5B24 ADRP X8, 0x4B3000
	0x03CA5B28 LDR X2, [X22]
	0x03CA5B2C LDR X8, [X8 + 0xC98]
	0x03CA5B30 LDR X3, [X8]
	0x03CA5B34 MOV W1, W21
	0x03CA5B38 BL 0x2B0F05C
	0x03CA5B3C LDR X0, [X20 + 0x1B0]
	0x03CA5B40 CBZ X0, 0x3CA5CB8
	0x03CA5B44 ADRP X22, 0x454000
	0x03CA5B48 LDR X22, [X22 + 0x1D0]
	0x03CA5B4C LDR W10, [X0 + 0x1C]
	0x03CA5B50 LDR X8, [X0 + 0x10]
	0x03CA5B54 LDR X9, [X22]
	0x03CA5B58 ADD W10, W10, 0x1
	0x03CA5B5C STR W10, [X0 + 0x1C]
	0x03CA5B60 CBZ X8, 0x3CA5CBC
	0x03CA5B64 LDRSW X10, [X0 + 0x18]
	0x03CA5B68 LDR W11, [X8 + 0x18]
	0x03CA5B6C CMP W10, W11
	0x03CA5B70 B.CS 0x3CA5B88
	0x03CA5B74 ADD W9, W10, 0x1
	0x03CA5B78 ADD X8, X8, X10, 0x2, LSL
	0x03CA5B7C STR W9, [X0 + 0x18]
	0x03CA5B80 STR W21, [X8 + 0x20]
	0x03CA5B84 B 0x3CA5B9C
	0x03CA5B88 LDR X8, [X9 + 0x20]
	0x03CA5B8C LDR X8, [X8 + 0xC0]
	0x03CA5B90 LDR X2, [X8 + 0x70]
	0x03CA5B94 MOV W1, W21
	0x03CA5B98 BL 0x30C1698
	0x03CA5B9C LDR X0, [X20 + 0x1B8]
	0x03CA5BA0 CBZ X0, 0x3CA5CC0
	0x03CA5BA4 LDR W10, [X0 + 0x1C]
	0x03CA5BA8 LDR X8, [X0 + 0x10]
	0x03CA5BAC LDR X9, [X22]
	0x03CA5BB0 ADD W10, W10, 0x1
	0x03CA5BB4 STR W10, [X0 + 0x1C]
	0x03CA5BB8 CBZ X8, 0x3CA5CC4
	0x03CA5BBC LDRSW X10, [X0 + 0x18]
	0x03CA5BC0 LDR W11, [X8 + 0x18]
	0x03CA5BC4 CMP W10, W11
	0x03CA5BC8 B.CS 0x3CA5BE8
	0x03CA5BCC ADD W9, W10, 0x1
	0x03CA5BD0 ADD X8, X8, X10, 0x2, LSL
	0x03CA5BD4 MOV X20, X31
	0x03CA5BD8 MOVZ W22, 0x1
	0x03CA5BDC STR W9, [X0 + 0x18]
	0x03CA5BE0 STR W21, [X8 + 0x20]
	0x03CA5BE4 B 0x3CA58F0
	0x03CA5BE8 LDR X8, [X9 + 0x20]
	0x03CA5BEC LDR X8, [X8 + 0xC0]
	0x03CA5BF0 LDR X2, [X8 + 0x70]
	0x03CA5BF4 MOV W1, W21
	0x03CA5BF8 BL 0x30C1698
	0x03CA5BFC MOV X20, X31
	0x03CA5C00 B 0x3CA55D0
	0x03CA5C04 BL 0x1C16F20
	0x03CA5C08 MOV X0, X20
	0x03CA5C0C BL 0x1C16F18
	0x03CA5C10 BL 0x1C16F20
	0x03CA5C14 BL 0x1C16F20
	0x03CA5C18 BL 0x1C16F28
	0x03CA5C1C BL 0x1C16F20
	0x03CA5C20 BL 0x1C16F20
	0x03CA5C24 BL 0x1C16F20
	0x03CA5C28 BL 0x1C16F28
	0x03CA5C2C BL 0x1C16F20
	0x03CA5C30 BL 0x1C16F28
	0x03CA5C34 BL 0x1C16F28
	0x03CA5C38 BL 0x1C16F28
	0x03CA5C3C BL 0x1C16F20
	0x03CA5C40 BL 0x1C16F28
	0x03CA5C44 BL 0x1C16F20
	0x03CA5C48 BL 0x1C16F28
	0x03CA5C4C BL 0x1C16F28
	0x03CA5C50 BL 0x1C16F20
	0x03CA5C54 BL 0x1C16F20
	0x03CA5C58 BL 0x1C16F28
	0x03CA5C5C BL 0x1C16F28
	0x03CA5C60 BL 0x1C16F20
	0x03CA5C64 BL 0x1C16F28
	0x03CA5C68 BL 0x1C16F20
	0x03CA5C6C BL 0x1C16F20
	0x03CA5C70 BL 0x1C16F28
	0x03CA5C74 BL 0x1C16F20
	0x03CA5C78 BL 0x1C16F28
	0x03CA5C7C BL 0x1C16F20
	0x03CA5C80 BL 0x1C16F20
	0x03CA5C84 BL 0x1C16F20
	0x03CA5C88 BL 0x1C16F20
	0x03CA5C8C BL 0x1C16F20
	0x03CA5C90 BL 0x1C16F20
	0x03CA5C94 BL 0x1C16F20
	0x03CA5C98 BL 0x1C16F20
	0x03CA5C9C BL 0x1C16F20
	0x03CA5CA0 BL 0x1C16F20
	0x03CA5CA4 BL 0x1C16F28
	0x03CA5CA8 BL 0x1C16F20
	0x03CA5CAC BL 0x1C16F20
	0x03CA5CB0 BL 0x1C16F20
	0x03CA5CB4 BL 0x1C16F20
	0x03CA5CB8 BL 0x1C16F20
	0x03CA5CBC BL 0x1C16F20
	0x03CA5CC0 BL 0x1C16F20
	0x03CA5CC4 BL 0x1C16F20
	0x03CA5CC8 B 0x3CA5D88
	0x03CA5CCC B 0x3CA5D88
	0x03CA5CD0 B 0x3CA5D88
	0x03CA5CD4 B 0x3CA5D88
	0x03CA5CD8 B 0x3CA5D88
	0x03CA5CDC B 0x3CA5D88
	0x03CA5CE0 B 0x3CA5D88
	0x03CA5CE4 B 0x3CA5D88
	0x03CA5CE8 B 0x3CA5D88
	0x03CA5CEC B 0x3CA5D88
	0x03CA5CF0 B 0x3CA5D88
	0x03CA5CF4 B 0x3CA5D88
	0x03CA5CF8 B 0x3CA5D88
	0x03CA5CFC B 0x3CA5D88
	0x03CA5D00 B 0x3CA5D88
	0x03CA5D04 B 0x3CA5D88
	0x03CA5D08 B 0x3CA5D88
	0x03CA5D0C B 0x3CA5D88
	0x03CA5D10 B 0x3CA5D88
	0x03CA5D14 B 0x3CA5D88
	0x03CA5D18 B 0x3CA5D88
	0x03CA5D1C B 0x3CA5D88
	0x03CA5D20 B 0x3CA5D88
	0x03CA5D24 B 0x3CA5D88
	0x03CA5D28 B 0x3CA5D88
	0x03CA5D2C B 0x3CA5D88
	0x03CA5D30 B 0x3CA5D88
	0x03CA5D34 B 0x3CA5D88
	0x03CA5D38 B 0x3CA5D88
	0x03CA5D3C B 0x3CA5D88
	0x03CA5D40 B 0x3CA5D88
	0x03CA5D44 B 0x3CA5D88
	0x03CA5D48 B 0x3CA5D88
	0x03CA5D4C B 0x3CA5D88
	0x03CA5D50 B 0x3CA5D88
	0x03CA5D54 B 0x3CA5D88
	0x03CA5D58 B 0x3CA5D88
	0x03CA5D5C B 0x3CA5D88
	0x03CA5D60 B 0x3CA5D88
	0x03CA5D64 B 0x3CA5D88
	0x03CA5D68 B 0x3CA5D88
	0x03CA5D6C B 0x3CA5D88
	0x03CA5D70 B 0x3CA5D88
	0x03CA5D74 B 0x3CA5D88
	0x03CA5D78 B 0x3CA5D88
	0x03CA5D7C B 0x3CA5D88
	0x03CA5D80 B 0x3CA5D88
	0x03CA5D84 B 0x3CA5D88
	0x03CA5D88 MOV X20, X0
	0x03CA5D8C CMP W1, 0x1
	0x03CA5D90 B.NE 0x3CA5DB4
	0x03CA5D94 MOV X0, X20
	0x03CA5D98 BL 0x3EB1AD0
	0x03CA5D9C LDR X21, [X0]
	0x03CA5DA0 BL 0x3EB1AE0
	0x03CA5DA4 MOV W23, W31
	0x03CA5DA8 MOV W22, W31
	0x03CA5DAC MOV X20, X21
	0x03CA5DB0 B 0x3CA58F4
	0x03CA5DB4 MOV X21, X31
	0x03CA5DB8 B 0x3CA5DC0
	0x03CA5DBC MOV X20, X0
	0x03CA5DC0 MOV X0, X19
	0x03CA5DC4 MOV X1, X31
	0x03CA5DC8 MOV X2, X31
	0x03CA5DCC BL 0x33C5D2C
	0x03CA5DD0 TBZ X0, 0x0, 0x3CA5DE0
	0x03CA5DD4 MOV X0, X19
	0x03CA5DD8 MOV X1, X31
	0x03CA5DDC BL 0x3BFEA0C
	0x03CA5DE0 CBNZ X21, 0x3CA5DEC
	0x03CA5DE4 MOV X0, X20
	0x03CA5DE8 BL 0x1D2C690
	0x03CA5DEC MOV X0, X21
	0x03CA5DF0 BL 0x1C16F18
	0x03CA5DF4 BL 0x1990590
	0x03CA5DF8 SUB X31, X31, 0x50
	0x03CA5DFC STR X30, [X31 + 0x10]
	0x03CA5E00 STP X24, X23, [X31 + 0x20]
	0x03CA5E04 STP X22, X21, [X31 + 0x30]
	0x03CA5E08 STP X20, X19, [X31 + 0x40]
	0x03CA5E0C ADRP X20, 0x742000
	0x03CA5E10 LDRB W8, [X20 + 0x2F6]
	0x03CA5E14 MOV X19, X0
	0x03CA5E18 TBNZ X8, 0x0, 0x3CA5E60
	0x03CA5E1C ADRP X0, 0x4B3000
	0x03CA5E20 LDR X0, [X0 + 0xE88]
	0x03CA5E24 BL 0x1C16CF4
	0x03CA5E28 ADRP X0, 0x4B3000
	0x03CA5E2C LDR X0, [X0 + 0xBC0]
	0x03CA5E30 BL 0x1C16CF4
	0x03CA5E34 ADRP X0, 0x4B3000
	0x03CA5E38 LDR X0, [X0 + 0xBC8]
	0x03CA5E3C BL 0x1C16CF4
	0x03CA5E40 ADRP X0, 0x4B3000
	0x03CA5E44 LDR X0, [X0 + 0xE90]
	0x03CA5E48 BL 0x1C16CF4
	0x03CA5E4C ADRP X0, 0x478000
	0x03CA5E50 LDR X0, [X0 + 0x250]
	0x03CA5E54 BL 0x1C16CF4
	0x03CA5E58 MOVZ W8, 0x1
	0x03CA5E5C STRB W8, [X20 + 0x2F6]
	0x03CA5E60 LDR W8, [X19 + 0x148]
	0x03CA5E64 LDR X24, [X19 + 0x140]
	0x03CA5E68 ADD W23, W8, 0x1
	0x03CA5E6C STR W23, [X19 + 0x148]
	0x03CA5E70 CBZ X24, 0x3CA6000
	0x03CA5E74 LDR W8, [X24 + 0x18]
	0x03CA5E78 ADRP X20, 0x478000
	0x03CA5E7C LDR X20, [X20 + 0x250]
	0x03CA5E80 CMP W23, W8
	0x03CA5E84 B.NE 0x3CA5EA8
	0x03CA5E88 ADRP X8, 0x4B3000
	0x03CA5E8C LDR X8, [X8 + 0xE88]
	0x03CA5E90 ADD X0, X19, 0x140
	0x03CA5E94 UBFM W1, W23, 0x1F, 0x1E
	0x03CA5E98 LDR X2, [X8]
	0x03CA5E9C BL 0x2142E6C
	0x03CA5EA0 LDR X24, [X19 + 0x140]
	0x03CA5EA4 LDR W23, [X19 + 0x148]
	0x03CA5EA8 LDR X0, [X20]
	0x03CA5EAC LDR W21, [X19 + 0x150]
	0x03CA5EB0 LDR W22, [X19 + 0x154]
	0x03CA5EB4 BL 0x1C16F10
	0x03CA5EB8 MOVZ W3, 0x1
	0x03CA5EBC MOV W1, W21
	0x03CA5EC0 MOV W2, W22
	0x03CA5EC4 MOV W4, W31
	0x03CA5EC8 MOV X5, X31
	0x03CA5ECC MOV X20, X0
	0x03CA5ED0 BL 0x3C1C1D8
	0x03CA5ED4 CBZ X24, 0x3CA6000
	0x03CA5ED8 LDR W8, [X24 + 0x18]
	0x03CA5EDC CMP W23, W8
	0x03CA5EE0 B.CS 0x3CA6004
	0x03CA5EE4 ADD X8, X24, W23, 0x3, SXTW
	0x03CA5EE8 STR X20, [X8 + 0x20]
	0x03CA5EEC LDR X8, [X19 + 0x140]
	0x03CA5EF0 CBZ X8, 0x3CA6000
	0x03CA5EF4 LDRSW X9, [X19 + 0x148]
	0x03CA5EF8 LDR W10, [X8 + 0x18]
	0x03CA5EFC CMP W9, W10
	0x03CA5F00 B.CS 0x3CA6004
	0x03CA5F04 ADRP X10, 0x4B3000
	0x03CA5F08 LDR X10, [X10 + 0xBC0]
	0x03CA5F0C ADD X8, X8, X9, 0x3, LSL
	0x03CA5F10 LDR X20, [X8 + 0x20]
	0x03CA5F14 LDR X0, [X10]
	0x03CA5F18 LDR W9, [X0 + 0xE0]
	0x03CA5F1C CBNZ W9, 0x3CA5F24
	0x03CA5F20 BL 0x1C16DFC
	0x03CA5F24 MOV X0, X20
	0x03CA5F28 MOV X1, X31
	0x03CA5F2C BL 0x3C9E1E0
	0x03CA5F30 LDR X20, [X19 + 0x168]
	0x03CA5F34 CBZ X20, 0x3CA6000
	0x03CA5F38 LDR W9, [X20 + 0x1C]
	0x03CA5F3C LDR W8, [X19 + 0x15C]
	0x03CA5F40 ADRP X21, 0x4B3000
	0x03CA5F44 LDR X21, [X21 + 0xBC8]
	0x03CA5F48 ADD W9, W9, 0x1
	0x03CA5F4C MOVZ W10, 0x1
	0x03CA5F50 STP W31, W9, [X20 + 0x18]
	0x03CA5F54 BIC W8, W10, W8, 0x4
	0x03CA5F58 LDR W9, [X19 + 0x150]
	0x03CA5F5C LDR W10, [X19 + 0x154]
	0x03CA5F60 ADD X0, X31, 0x0
	0x03CA5F64 MOV W1, W31
	0x03CA5F68 SUB W3, W9, W8
	0x03CA5F6C SUB W4, W10, W8
	0x03CA5F70 MOV W2, W31
	0x03CA5F74 MOV X5, X31
	0x03CA5F78 STP X31, X31, [X31]
	0x03CA5F7C BL 0x3C9C108
	0x03CA5F80 LDR W10, [X20 + 0x1C]
	0x03CA5F84 LDP X1, X2, [X31]
	0x03CA5F88 LDR X8, [X20 + 0x10]
	0x03CA5F8C LDR X9, [X21]
	0x03CA5F90 ADD W10, W10, 0x1
	0x03CA5F94 STR W10, [X20 + 0x1C]
	0x03CA5F98 CBZ X8, 0x3CA6000
	0x03CA5F9C LDRSW X10, [X20 + 0x18]
	0x03CA5FA0 LDR W11, [X8 + 0x18]
	0x03CA5FA4 CMP W10, W11
	0x03CA5FA8 B.CS 0x3CA5FC0
	0x03CA5FAC ADD W9, W10, 0x1
	0x03CA5FB0 ADD X8, X8, X10, 0x4, LSL
	0x03CA5FB4 STR W9, [X20 + 0x18]
	0x03CA5FB8 STP X1, X2, [X8 + 0x20]
	0x03CA5FBC B 0x3CA5FD4
	0x03CA5FC0 LDR X8, [X9 + 0x20]
	0x03CA5FC4 MOV X0, X20
	0x03CA5FC8 LDR X8, [X8 + 0xC0]
	0x03CA5FCC LDR X3, [X8 + 0x70]
	0x03CA5FD0 BL 0x2FC569C
	0x03CA5FD4 LDR X8, [X19 + 0x160]
	0x03CA5FD8 CBZ X8, 0x3CA6000
	0x03CA5FDC LDR W9, [X8 + 0x1C]
	0x03CA5FE0 LDP X20, X19, [X31 + 0x40]
	0x03CA5FE4 LDP X22, X21, [X31 + 0x30]
	0x03CA5FE8 LDP X24, X23, [X31 + 0x20]
	0x03CA5FEC LDR X30, [X31 + 0x10]
	0x03CA5FF0 ADD W9, W9, 0x1
	0x03CA5FF4 STP W31, W9, [X8 + 0x18]
	0x03CA5FF8 ADD X31, X31, 0x50
	0x03CA5FFC RET
	0x03CA6000 BL 0x1C16F20
	0x03CA6004 BL 0x1C16F28
	0x03CA6008 STR X30, [X31 - 0x50]!
	0x03CA600C STP X26, X25, [X31 + 0x10]
	0x03CA6010 STP X24, X23, [X31 + 0x20]
	0x03CA6014 STP X22, X21, [X31 + 0x30]
	0x03CA6018 STP X20, X19, [X31 + 0x40]
	0x03CA601C ADRP X23, 0x741000
	0x03CA6020 LDRB W8, [X23 + 0x2F4]
	0x03CA6024 MOV W21, W3
	0x03CA6028 MOV X22, X2
	0x03CA602C MOV W20, W1
	0x03CA6030 MOV X19, X0
	0x03CA6034 TBNZ X8, 0x0, 0x3CA60D0
	0x03CA6038 ADRP X0, 0x4BB000
	0x03CA603C LDR X0, [X0 + 0x3E0]
	0x03CA6040 BL 0x1C16CF4
	0x03CA6044 ADRP X0, 0x4BB000
	0x03CA6048 LDR X0, [X0 + 0x2B0]
	0x03CA604C BL 0x1C16CF4
	0x03CA6050 ADRP X0, 0x4B2000
	0x03CA6054 LDR X0, [X0 + 0xC98]
	0x03CA6058 BL 0x1C16CF4
	0x03CA605C ADRP X0, 0x4B2000
	0x03CA6060 LDR X0, [X0 + 0xCA8]
	0x03CA6064 BL 0x1C16CF4
	0x03CA6068 ADRP X0, 0x4B2000
	0x03CA606C LDR X0, [X0 + 0xC90]
	0x03CA6070 BL 0x1C16CF4
	0x03CA6074 ADRP X0, 0x4BB000
	0x03CA6078 LDR X0, [X0 + 0x258]
	0x03CA607C BL 0x1C16CF4
	0x03CA6080 ADRP X0, 0x4B2000
	0x03CA6084 LDR X0, [X0 + 0xBC0]
	0x03CA6088 BL 0x1C16CF4
	0x03CA608C ADRP X0, 0x4A8000
	0x03CA6090 LDR X0, [X0 + 0x828]
	0x03CA6094 BL 0x1C16CF4
	0x03CA6098 ADRP X0, 0x4B2000
	0x03CA609C LDR X0, [X0 + 0xE00]
	0x03CA60A0 BL 0x1C16CF4
	0x03CA60A4 ADRP X0, 0x4B2000
	0x03CA60A8 LDR X0, [X0 + 0xC10]
	0x03CA60AC BL 0x1C16CF4
	0x03CA60B0 ADRP X0, 0x453000
	0x03CA60B4 LDR X0, [X0 + 0x1D0]
	0x03CA60B8 BL 0x1C16CF4
	0x03CA60BC ADRP X0, 0x4BB000
	0x03CA60C0 LDR X0, [X0 + 0x4C0]
	0x03CA60C4 BL 0x1C16CF4
	0x03CA60C8 MOVZ W8, 0x1
	0x03CA60CC STRB W8, [X23 + 0x2F4]
	0x03CA60D0 STR X31, [X31 + 0x8]
	0x03CA60D4 STR X31, [X22]
	0x03CA60D8 LDR X0, [X19 + 0x1E8]
	0x03CA60DC CBZ X0, 0x3CA655C
	0x03CA60E0 ADRP X8, 0x4B2000
	0x03CA60E4 LDR X8, [X8 + 0xE00]
	0x03CA60E8 MOV W1, W20
	0x03CA60EC LDR X2, [X8]
	0x03CA60F0 BL 0x2DCD240
	0x03CA60F4 TBNZ X0, 0x0, 0x3CA6104
	0x03CA60F8 MOV X0, X19
	0x03CA60FC BL 0x3CA0DD0
	0x03CA6100 CBZ W0, 0x3CA6120
	0x03CA6104 MOV W0, W31
	0x03CA6108 LDP X20, X19, [X31 + 0x40]
	0x03CA610C LDP X22, X21, [X31 + 0x30]
	0x03CA6110 LDP X24, X23, [X31 + 0x20]
	0x03CA6114 LDP X26, X25, [X31 + 0x10]
	0x03CA6118 LDR X30, [X31], #0x50
	0x03CA611C RET
	0x03CA6120 ADRP X24, 0x4B2000
	0x03CA6124 LDR X24, [X24 + 0xBC0]
	0x03CA6128 LDR X0, [X24]
	0x03CA612C LDR W8, [X0 + 0xE0]
	0x03CA6130 CBNZ W8, 0x3CA6138
	0x03CA6134 BL 0x1C16DFC
	0x03CA6138 MOV W0, W20
	0x03CA613C MOV X1, X31
	0x03CA6140 BL 0x3C9CBD8
	0x03CA6144 MOV W23, W0
	0x03CA6148 CBNZ W0, 0x3CA61A4
	0x03CA614C MOVZ W8, 0x2011
	0x03CA6150 CMP W20, W8
	0x03CA6154 B.EQ 0x3CA6180
	0x03CA6158 CMP W20, 0xAD
	0x03CA615C B.EQ 0x3CA6180
	0x03CA6160 CMP W20, 0xA0
	0x03CA6164 B.NE 0x3CA6328
	0x03CA6168 LDR X0, [X24]
	0x03CA616C LDR W8, [X0 + 0xE0]
	0x03CA6170 CBNZ W8, 0x3CA6178
	0x03CA6174 BL 0x1C16DFC
	0x03CA6178 MOVZ W0, 0x20
	0x03CA617C B 0x3CA6194
	0x03CA6180 LDR X0, [X24]
	0x03CA6184 LDR W8, [X0 + 0xE0]
	0x03CA6188 CBNZ W8, 0x3CA6190
	0x03CA618C BL 0x1C16DFC
	0x03CA6190 MOVZ W0, 0x2D
	0x03CA6194 MOV X1, X31
	0x03CA6198 BL 0x3C9CBD8
	0x03CA619C MOV W23, W0
	0x03CA61A0 CBZ W0, 0x3CA6328
	0x03CA61A4 LDR X0, [X19 + 0x120]
	0x03CA61A8 CBZ X0, 0x3CA655C
	0x03CA61AC ADRP X8, 0x4B2000
	0x03CA61B0 LDR X8, [X8 + 0xCA8]
	0x03CA61B4 MOV W1, W23
	0x03CA61B8 LDR X2, [X8]
	0x03CA61BC BL 0x2B0F250
	0x03CA61C0 TBZ X0, 0x0, 0x3CA625C
	0x03CA61C4 LDR X0, [X19 + 0x120]
	0x03CA61C8 CBZ X0, 0x3CA655C
	0x03CA61CC ADRP X8, 0x4B2000
	0x03CA61D0 LDR X8, [X8 + 0xC90]
	0x03CA61D4 MOV W1, W23
	0x03CA61D8 LDR X2, [X8]
	0x03CA61DC BL 0x2B0EFBC
	0x03CA61E0 ADRP X8, 0x4BB000
	0x03CA61E4 LDR X8, [X8 + 0x3E0]
	0x03CA61E8 MOV X23, X0
	0x03CA61EC LDR X8, [X8]
	0x03CA61F0 MOV X0, X8
	0x03CA61F4 BL 0x1C16F10
	0x03CA61F8 MOV W1, W20
	0x03CA61FC MOV X2, X19
	0x03CA6200 MOV X3, X23
	0x03CA6204 MOV X21, X0
	0x03CA6208 BL 0x3C9E938
	0x03CA620C STR X21, [X22]
	0x03CA6210 LDR X0, [X19 + 0x128]
	0x03CA6214 CBZ X0, 0x3CA655C
	0x03CA6218 ADRP X9, 0x4BB000
	0x03CA621C LDR X9, [X9 + 0x4C0]
	0x03CA6220 LDR W10, [X0 + 0x1C]
	0x03CA6224 LDR X8, [X0 + 0x10]
	0x03CA6228 LDR X9, [X9]
	0x03CA622C ADD W10, W10, 0x1
	0x03CA6230 STR W10, [X0 + 0x1C]
	0x03CA6234 CBZ X8, 0x3CA655C
	0x03CA6238 LDRSW X10, [X0 + 0x18]
	0x03CA623C LDR W11, [X8 + 0x18]
	0x03CA6240 CMP W10, W11
	0x03CA6244 B.CS 0x3CA62EC
	0x03CA6248 ADD W9, W10, 0x1
	0x03CA624C ADD X8, X8, X10, 0x3, LSL
	0x03CA6250 STR W9, [X0 + 0x18]
	0x03CA6254 STR X21, [X8 + 0x20]
	0x03CA6258 B 0x3CA6300
	0x03CA625C LDR X0, [X24]
	0x03CA6260 LDR W8, [X19 + 0x15C]
	0x03CA6264 STR X31, [X31 + 0x8]
	0x03CA6268 MOVZ W10, 0x8
	0x03CA626C LDR W9, [X0 + 0xE0]
	0x03CA6270 ANDS W31, W8, 0x4
	0x03CA6274 MOVZ W8, 0xA
	0x03CA6278 CSEL W24, W10, W8, EQ
	0x03CA627C CBNZ W9, 0x3CA6284
	0x03CA6280 BL 0x1C16DFC
	0x03CA6284 ADD X2, X31, 0x8
	0x03CA6288 MOV W0, W23
	0x03CA628C MOV W1, W24
	0x03CA6290 MOV X3, X31
	0x03CA6294 BL 0x3C9CDAC
	0x03CA6298 TBZ X0, 0x0, 0x3CA6104
	0x03CA629C LDR X0, [X19 + 0x118]
	0x03CA62A0 CBZ X0, 0x3CA655C
	0x03CA62A4 ADRP X26, 0x4B2000
	0x03CA62A8 LDR X1, [X31 + 0x8]
	0x03CA62AC LDR X26, [X26 + 0xC10]
	0x03CA62B0 LDR W10, [X0 + 0x1C]
	0x03CA62B4 LDR X8, [X0 + 0x10]
	0x03CA62B8 LDR X9, [X26]
	0x03CA62BC ADD W10, W10, 0x1
	0x03CA62C0 STR W10, [X0 + 0x1C]
	0x03CA62C4 CBZ X8, 0x3CA655C
	0x03CA62C8 LDRSW X10, [X0 + 0x18]
	0x03CA62CC LDR W11, [X8 + 0x18]
	0x03CA62D0 CMP W10, W11
	0x03CA62D4 B.CS 0x3CA6348
	0x03CA62D8 ADD W9, W10, 0x1
	0x03CA62DC ADD X8, X8, X10, 0x3, LSL
	0x03CA62E0 STR W9, [X0 + 0x18]
	0x03CA62E4 STR X1, [X8 + 0x20]
	0x03CA62E8 B 0x3CA6358
	0x03CA62EC LDR X8, [X9 + 0x20]
	0x03CA62F0 MOV X1, X21
	0x03CA62F4 LDR X8, [X8 + 0xC0]
	0x03CA62F8 LDR X2, [X8 + 0x70]
	0x03CA62FC BL 0x301BF90
	0x03CA6300 LDR X0, [X19 + 0x130]
	0x03CA6304 CBZ X0, 0x3CA655C
	0x03CA6308 ADRP X8, 0x4BB000
	0x03CA630C LDR X2, [X22]
	0x03CA6310 LDR X8, [X8 + 0x2B0]
	0x03CA6314 MOV W1, W20
	0x03CA6318 LDR X3, [X8]
	0x03CA631C BL 0x2B0F05C
	0x03CA6320 MOVZ W0, 0x1
	0x03CA6324 B 0x3CA6108
	0x03CA6328 LDR X0, [X19 + 0x1E8]
	0x03CA632C CBZ X0, 0x3CA655C
	0x03CA6330 ADRP X8, 0x4A8000
	0x03CA6334 LDR X8, [X8 + 0x828]
	0x03CA6338 MOV W1, W20
	0x03CA633C LDR X2, [X8]
	0x03CA6340 BL 0x2DCDCE0
	0x03CA6344 B 0x3CA6104
	0x03CA6348 LDR X8, [X9 + 0x20]
	0x03CA634C LDR X8, [X8 + 0xC0]
	0x03CA6350 LDR X2, [X8 + 0x70]
	0x03CA6354 BL 0x301BF90
	0x03CA6358 LDR X0, [X19 + 0x120]
	0x03CA635C CBZ X0, 0x3CA655C
	0x03CA6360 ADRP X8, 0x4B2000
	0x03CA6364 LDR X2, [X31 + 0x8]
	0x03CA6368 LDR X8, [X8 + 0xC98]
	0x03CA636C MOV W1, W23
	0x03CA6370 LDR X3, [X8]
	0x03CA6374 BL 0x2B0F05C
	0x03CA6378 ADRP X8, 0x4BB000
	0x03CA637C LDR X25, [X31 + 0x8]
	0x03CA6380 LDR X8, [X8 + 0x3E0]
	0x03CA6384 LDR X0, [X8]
	0x03CA6388 BL 0x1C16F10
	0x03CA638C MOV W1, W20
	0x03CA6390 MOV X2, X19
	0x03CA6394 MOV X3, X25
	0x03CA6398 MOV X24, X0
	0x03CA639C BL 0x3C9E938
	0x03CA63A0 STR X24, [X22]
	0x03CA63A4 LDR X0, [X19 + 0x128]
	0x03CA63A8 CBZ X0, 0x3CA655C
	0x03CA63AC ADRP X9, 0x4BB000
	0x03CA63B0 LDR X9, [X9 + 0x4C0]
	0x03CA63B4 LDR W10, [X0 + 0x1C]
	0x03CA63B8 LDR X8, [X0 + 0x10]
	0x03CA63BC LDR X9, [X9]
	0x03CA63C0 ADD W10, W10, 0x1
	0x03CA63C4 STR W10, [X0 + 0x1C]
	0x03CA63C8 CBZ X8, 0x3CA655C
	0x03CA63CC LDRSW X10, [X0 + 0x18]
	0x03CA63D0 LDR W11, [X8 + 0x18]
	0x03CA63D4 CMP W10, W11
	0x03CA63D8 B.CS 0x3CA63F0
	0x03CA63DC ADD W9, W10, 0x1
	0x03CA63E0 ADD X8, X8, X10, 0x3, LSL
	0x03CA63E4 STR W9, [X0 + 0x18]
	0x03CA63E8 STR X24, [X8 + 0x20]
	0x03CA63EC B 0x3CA6404
	0x03CA63F0 LDR X8, [X9 + 0x20]
	0x03CA63F4 MOV X1, X24
	0x03CA63F8 LDR X8, [X8 + 0xC0]
	0x03CA63FC LDR X2, [X8 + 0x70]
	0x03CA6400 BL 0x301BF90
	0x03CA6404 LDR X0, [X19 + 0x130]
	0x03CA6408 CBZ X0, 0x3CA655C
	0x03CA640C ADRP X8, 0x4BB000
	0x03CA6410 LDR X2, [X22]
	0x03CA6414 LDR X8, [X8 + 0x2B0]
	0x03CA6418 MOV W1, W20
	0x03CA641C LDR X3, [X8]
	0x03CA6420 BL 0x2B0F05C
	0x03CA6424 LDR X0, [X19 + 0x1B0]
	0x03CA6428 CBZ X0, 0x3CA655C
	0x03CA642C ADRP X20, 0x453000
	0x03CA6430 LDR X20, [X20 + 0x1D0]
	0x03CA6434 LDR W10, [X0 + 0x1C]
	0x03CA6438 LDR X8, [X0 + 0x10]
	0x03CA643C LDR X9, [X20]
	0x03CA6440 ADD W10, W10, 0x1
	0x03CA6444 STR W10, [X0 + 0x1C]
	0x03CA6448 CBZ X8, 0x3CA655C
	0x03CA644C LDRSW X10, [X0 + 0x18]
	0x03CA6450 LDR W11, [X8 + 0x18]
	0x03CA6454 CMP W10, W11
	0x03CA6458 B.CS 0x3CA6470
	0x03CA645C ADD W9, W10, 0x1
	0x03CA6460 ADD X8, X8, X10, 0x2, LSL
	0x03CA6464 STR W9, [X0 + 0x18]
	0x03CA6468 STR W23, [X8 + 0x20]
	0x03CA646C B 0x3CA6484
	0x03CA6470 LDR X8, [X9 + 0x20]
	0x03CA6474 MOV W1, W23
	0x03CA6478 LDR X8, [X8 + 0xC0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x743000
	015 Move W8, [X21+753]
	016 Move W23, W3
	017 Move X19, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {98}
	024 Move X0, 0x4BD000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move X0, 0x44F000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x4BD000
	031 Move X0, [X0+688]
	032 Call 0x1C17CF4
	033 Move X0, 0x4B4000
	034 Move X0, [X0+3224]
	035 Call 0x1C17CF4
	036 Move X0, 0x4BD000
	037 Move X0, [X0+584]
	038 Call 0x1C17CF4
	039 Move X0, 0x4B4000
	040 Move X0, [X0+3240]
	041 Call 0x1C17CF4
	042 Move X0, 0x4B4000
	043 Move X0, [X0+3656]
	044 Call 0x1C17CF4
	045 Move X0, 0x4B4000
	046 Move X0, [X0+3216]
	047 Call 0x1C17CF4
	048 Move X0, 0x4B4000
	049 Move X0, [X0+3008]
	050 Call 0x1C17CF4
	051 Move X0, 0x4AA000
	052 Move X0, [X0+2088]
	053 Call 0x1C17CF4
	054 Move X0, 0x4B4000
	055 Move X0, [X0+3672]
	056 Call 0x1C17CF4
	057 Move X0, 0x4B4000
	058 Move X0, [X0+3088]
	059 Call 0x1C17CF4
	060 Move X0, 0x455000
	061 Move X0, [X0+464]
	062 Call 0x1C17CF4
	063 Move X0, 0x4BD000
	064 Move X0, [X0+1216]
	065 Call 0x1C17CF4
	066 Move X0, 0x4BD000
	067 Move X0, [X0+1264]
	068 Call 0x1C17CF4
	069 Move X0, 0x4A6000
	070 Move X0, [X0+2896]
	071 Call 0x1C17CF4
	072 Move X0, 0x4BD000
	073 Move X0, [X0+1272]
	074 Call 0x1C17CF4
	075 Move X0, 0x4B4000
	076 Move X0, [X0+2136]
	077 Call 0x1C17CF4
	078 Move X0, 0x4BD000
	079 Move X0, [X0+720]
	080 Call 0x1C17CF4
	081 Move X0, 0x4BD000
	082 Move X0, [X0+728]
	083 Call 0x1C17CF4
	084 Move X0, 0x451000
	085 Move X0, [X0+632]
	086 Call 0x1C17CF4
	087 Move X0, 0x4B4000
	088 Move X0, [X0+3696]
	089 Call 0x1C17CF4
	090 Move X0, 0x4B4000
	091 Move X0, [X0+3712]
	092 Call 0x1C17CF4
	093 Move X0, 0x4B4000
	094 Move X0, [X0+3704]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X21+753], W8
	098 Move X0, X22
	099 Move X1, X31
	100 Move [X31+16], X31
	101 Move [X31+24], X31
	102 Call String.IsNullOrEmpty, X0
	103 Move W21, [X20+168]
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {119}
	108 Move X0, X20
	109 Move X1, X31
	110 Call Object.get_name, X0
	111 Move X8, 0x4B4000
	112 Move X8, [X8+3704]
	113 Move X1, X0
	114 Move X8, [X8]
	115 Compare W21, 0
	116 JumpIfEqual {405}
	117 Move X9, 0x4B4000
	118 Move X9, [X9+3712]
	119 Move X0, X20
	120 Compare W21, 0
	121 JumpIfEqual {399}
	122 Call FontAsset.LoadFontFace, X0
	123 Compare W0, 0
	124 JumpIfNotEqual {424}
	125 Move X8, [X20+304]
	126 Compare X8, 0
	127 JumpIfEqual {131}
	128 Move X8, [X20+288]
	129 Compare X8, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X20
	132 Call FontAsset.ReadFontAssetDefinition, X0
	133 Move X8, [X20+448]
	134 Compare X8, 0
	135 JumpIfEqual {819}
	136 Move W9, [X8+28]
	137 Add W9, W9, 1
	138 Move [X8+24], W31
	139 Move [X8+28], W9
	140 Move X0, [X20+456]
	141 Compare X0, 0
	142 JumpIfEqual {819}
	143 Move X21, 0x4B4000
	144 Move X21, [X21+3672]
	145 Move X1, [X21]
	146 Call HashSet`1<UInt32>.Clear, X0
	147 Move X8, [X20+464]
	148 Compare X8, 0
	149 JumpIfEqual {819}
	150 Move W2, [X8+24]
	151 Move W9, [X8+28]
	152 Add W9, W9, 1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X8+24], W31
	155 Move [X8+28], W9
	156 Move X0, [X8+16]
	157 Move W1, W31
	158 Move X3, X31
	159 Call Array.Clear, X0, X1, X2
	160 Move X0, [X20+472]
	161 Compare X0, 0
	162 JumpIfEqual {819}
	163 Move X1, [X21]
	164 Call HashSet`1<UInt32>.Clear, X0
	165 Move X8, [X20+480]
	166 Compare X8, 0
	167 JumpIfEqual {819}
	168 Move W9, [X8+28]
	169 Add W9, W9, 1
	170 Move [X8+24], W31
	171 Move [X8+28], W9
	172 Compare X22, 0
	173 JumpIfEqual {819}
	174 Move W27, [X22+16]
	175 Move [X31+8], W23
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move [X31+12], W31
	178 Move X29, 0x4BD000
	179 Move X28, 0x4B4000
	180 Move X21, 0x4AA000
	181 Move X29, [X29+584]
	182 Move X28, [X28+3008]
	183 Move X21, [X21+2088]
	184 Move W23, W31
	185 Move X0, X22
	186 Move W1, W23
	187 Move X2, X31
	188 Call String.get_Chars, X0, X1
	189 Move X8, [X20+304]
	190 Compare X8, 0
	191 JumpIfEqual {819}
	192 Move X2, [X29]
	193 And W24, W0, 0xFFFF
	194 Move X0, X8
	195 Move W1, W24
	196 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {397}
	201 Move X0, [X28]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move W0, W24
	207 Move X1, X31
	208 Call FontEngine.GetGlyphIndex, X0
	209 Move W26, W0
	210 Compare W0, 0
	211 JumpIfNotEqual {233}
	212 Move W8, 0x2011
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X0, [X28]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move W0, 32
	222 Move X0, [X28]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move W0, 45
	228 Move X1, X31
	229 Call FontEngine.GetGlyphIndex, X0
	230 Move W26, W0
	231 Compare W0, 0
	232 JumpIfEqual {332}
	233 Move X8, 0x4BD000
	234 Move X8, [X8+992]
	235 Move X0, [X8]
	236 Call 0x1C17F10
	237 Move X1, X31
	238 Move X25, X0
	239 Call Object..ctor, X0
	240 Move W8, 1
	241 Move [X25+16], W8
	242 Move W8, 0x3F800000
	243 Move [X25+20], W24
	244 Move [X25+24], X31
	245 Move [X25+32], X31
	246 Move [X25+40], W26
	247 Move [X25+44], W8
	248 Move X0, [X20+288]
	249 Compare X0, 0
	250 JumpIfEqual {819}
	251 Move X8, 0x4B4000
	252 Move X8, [X8+3240]
	253 Move W1, W26
	254 Move X2, [X8]
	255 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {289}
	260 Move X0, [X20+288]
	261 Compare X0, 0
	262 JumpIfEqual {819}
	263 Move X8, 0x4B4000
	264 Move X8, [X8+3216]
	265 Move W1, W26
	266 Move X2, [X8]
	267 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	268 Move [X25+24], X20
	269 Move [X25+32], X0
	270 Move X0, [X20+296]
	271 Compare X0, 0
	272 JumpIfEqual {819}
	273 Move X9, 0x4BD000
	274 Move W10, [X0+28]
	275 Move X8, [X0+16]
	276 Move X9, [X9+1216]
	277 Add W10, W10, 1
	278 Move X9, [X9]
	279 Move [X0+28], W10
	280 Compare X8, 0
	281 JumpIfEqual {819}
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Move W11, [X8+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add W9, W10, 1
	286 Add X8, X8, X10
	287 Move [X0+24], W9
	288 Move [X8+32], X25
	289 Move X0, [X20+456]
	290 Compare X0, 0
	291 JumpIfEqual {819}
	292 Move X2, [X21]
	293 Move W1, W26
	294 Call HashSet`1<UInt32>.Add, X0, X1
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {356}
	299 Move X0, [X20+448]
	300 Compare X0, 0
	301 JumpIfEqual {819}
	302 Move X9, 0x455000
	303 Move W10, [X0+28]
	304 Move X8, [X0+16]
	305 Move X9, [X9+464]
	306 Add W10, W10, 1
	307 Move X9, [X9]
	308 Move [X0+28], W10
	309 Compare X8, 0
	310 JumpIfEqual {819}
	311 NotImplemented "Instruction LDRSW not yet implemented."
	312 Move W11, [X8+24]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Add W9, W10, 1
	315 Add X8, X8, X10
	316 Move [X0+24], W9
	317 Move [X8+32], W26
	318 Move X8, [X9+32]
	319 Move X1, X25
	320 Move X8, [X8+192]
	321 Move X2, [X8+112]
	322 Call List`1<Object>.AddWithResize, X0, X1
	323 Move X0, [X20+304]
	324 Compare X0, 0
	325 JumpIfEqual {819}
	326 Move X8, 0x4BD000
	327 Move X8, [X8+688]
	328 Move W1, W24
	329 Move X2, X25
	330 Move X3, [X8]
	331 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	332 Move X0, [X20+480]
	333 Compare X0, 0
	334 JumpIfEqual {819}
	335 Move X9, 0x455000
	336 Move W10, [X0+28]
	337 Move X8, [X0+16]
	338 Move X9, [X9+464]
	339 Add W10, W10, 1
	340 Move X9, [X9]
	341 Move [X0+28], W10
	342 Compare X8, 0
	343 JumpIfEqual {819}
	344 NotImplemented "Instruction LDRSW not yet implemented."
	345 Move W11, [X8+24]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Add W9, W10, 1
	348 Add X8, X8, X10
	349 Move [X0+24], W9
	350 Move [X8+32], W24
	351 Move X8, [X9+32]
	352 Move W1, W26
	353 Move X8, [X8+192]
	354 Move X2, [X8+112]
	355 Call List`1<UInt32>.AddWithResize, X0, X1
	356 Move X0, [X20+472]
	357 Compare X0, 0
	358 JumpIfEqual {819}
	359 Move X2, [X21]
	360 Move W1, W24
	361 Call HashSet`1<UInt32>.Add, X0, X1
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {397}
	366 Move X0, [X20+464]
	367 Compare X0, 0
	368 JumpIfEqual {819}
	369 Move X9, 0x4BD000
	370 Move W10, [X0+28]
	371 Move X8, [X0+16]
	372 Move X9, [X9+1216]
	373 Add W10, W10, 1
	374 Move X9, [X9]
	375 Move [X0+28], W10
	376 Compare X8, 0
	377 JumpIfEqual {819}
	378 NotImplemented "Instruction LDRSW not yet implemented."
	379 Move W11, [X8+24]
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Add W9, W10, 1
	382 Add X8, X8, X10
	383 Move [X0+24], W9
	384 Move [X8+32], X25
	385 Move X8, [X9+32]
	386 Move X1, X25
	387 Move X8, [X8+192]
	388 Move X2, [X8+112]
	389 Call List`1<Object>.AddWithResize, X0, X1
	390 Move X8, [X9+32]
	391 Move W1, W24
	392 Move X8, [X8+192]
	393 Move X2, [X8+112]
	394 Call List`1<UInt32>.AddWithResize, X0, X1
	395 Move W8, 1
	396 Move [X31+12], W8
	397 Add W23, W23, 1
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X1, X31
	400 Call Object.get_name, X0
	401 Move X8, 0x4B4000
	402 Move X8, [X8+3704]
	403 Move X1, X0
	404 Move X8, [X8]
	405 Move X9, 0x4B4000
	406 Move X9, [X9+3696]
	407 Move X2, [X9]
	408 Move X0, X8
	409 Move X3, X31
	410 Call String.Concat, X0, X1, X2
	411 Move X8, 0x44F000
	412 Move X8, [X8+2600]
	413 Move X21, X0
	414 Move X8, [X8]
	415 Move W9, [X8+224]
	416 Compare W9, 0
	417 JumpIfNotEqual {420}
	418 Move X0, X8
	419 Call 0x1C17DFC
	420 Move X0, X21
	421 Move X1, X20
	422 Move X2, X31
	423 Call Debug.LogWarning, X0, X1
	424 Move W8, W31
	425 Move [X19], X22
	426 Move X20, [X31+112]
	427 Move X19, [X31+120]
	428 Move X22, [X31+96]
	429 Move X21, [X31+104]
	430 Move X24, [X31+80]
	431 Move X23, [X31+88]
	432 Move X26, [X31+64]
	433 Move X25, [X31+72]
	434 Move X28, [X31+48]
	435 Move X27, [X31+56]
	436 Move X29, [X31+32]
	437 Move X30, [X31+40]
	438 And W0, W8, 1
	439 Add X31, X31, 128
	440 Return X0
	441 Move [X31+12], W31
	442 Move X8, [X20+448]
	443 Compare X8, 0
	444 JumpIfEqual {819}
	445 Move W8, [X8+24]
	446 Compare W8, 0
	447 JumpIfEqual {425}
	448 Move X8, [X20+320]
	449 Compare X8, 0
	450 JumpIfEqual {819}
	451 NotImplemented "Instruction LDRSW not yet implemented."
	452 Move W10, [X8+24]
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Add X8, X8, X9
	455 Move X0, [X8+32]
	456 Compare X0, 0
	457 JumpIfEqual {819}
	458 Move X8, [X0]
	459 Move X9, [X8+392]
	460 Move X1, [X8+400]
	461 NotImplemented "Instruction BLR not yet implemented."
	462 Move W8, [X20+336]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X8, [X20+320]
	465 Compare X8, 0
	466 JumpIfEqual {819}
	467 NotImplemented "Instruction LDRSW not yet implemented."
	468 Move W10, [X8+24]
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Add X8, X8, X9
	471 Move X0, [X8+32]
	472 Compare X0, 0
	473 JumpIfEqual {819}
	474 Move X8, [X0]
	475 Move X9, [X8+424]
	476 Move X1, [X8+432]
	477 NotImplemented "Instruction BLR not yet implemented."
	478 Move W8, [X20+340]
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Move X8, [X20+320]
	481 Compare X8, 0
	482 JumpIfEqual {819}
	483 NotImplemented "Instruction LDRSW not yet implemented."
	484 Move W10, [X8+24]
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Add X8, X8, X9
	487 Move X0, [X8+32]
	488 Compare X0, 0
	489 JumpIfEqual {819}
	490 Move W2, [X20+340]
	491 Move W1, [X20+336]
	492 Move X3, X31
	493 Call Texture2D.Reinitialize, X0, X1, X2
	494 Move X8, [X20+320]
	495 Compare X8, 0
	496 JumpIfEqual {819}
	497 NotImplemented "Instruction LDRSW not yet implemented."
	498 Move W10, [X8+24]
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Move X10, 0x4B4000
	501 Move X10, [X10+3008]
	502 Add X8, X8, X9
	503 Move X22, [X8+32]
	504 Move X0, [X10]
	505 Move W9, [X0+224]
	506 Compare W9, 0
	507 JumpIfNotEqual {509}
	508 Call 0x1C17DFC
	509 Move X0, X22
	510 Move X1, X31
	511 Call FontEngine.ResetAtlasTexture, X0
	512 Move X8, [X20+320]
	513 Compare X8, 0
	514 JumpIfEqual {819}
	515 NotImplemented "Instruction LDRSW not yet implemented."
	516 Move W10, [X8+24]
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X10, 0x4B4000
	519 Move X22, [X20+448]
	520 Move W23, [X20+344]
	521 Move X10, [X10+3008]
	522 Add X8, X8, X9
	523 Move X24, [X20+352]
	524 Move X26, [X20+360]
	525 Move W25, [X20+348]
	526 Move X0, [X10]
	527 Move X27, [X8+32]
	528 Move W9, [X0+224]
	529 Compare W9, 0
	530 JumpIfNotEqual {532}
	531 Call 0x1C17DFC
	532 Add X7, X31, 24
	533 Move X0, X22
	534 Move W1, W23
	535 Move W2, W31
	536 Move X3, X26
	537 Move X4, X24
	538 Move W5, W25
	539 Move X6, X27
	540 Move [X31], X31
	541 Call FontEngine.TryAddGlyphsToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	542 Move X8, [X31+24]
	543 Compare X8, 0
	544 JumpIfEqual {819}
	545 Move X26, 0x4B3000
	546 Move X27, 0x4B3000
	547 Move X25, 0x454000
	548 Move X26, [X26+3088]
	549 Move X27, [X27+3224]
	550 Move X25, [X25+464]
	551 Move W22, W0
	552 Move X21, X31
	553 Move W9, [X8+24]
	554 NotImplemented "Instruction CMP not yet implemented."
	555 NotImplemented "Instruction CMP not yet implemented."
	556 Add X8, X8, X21
	557 Move X24, [X8+32]
	558 Compare X24, 0
	559 JumpIfEqual {645}
	560 Move X0, X24
	561 Move X1, X31
	562 Call Glyph.get_index, X0
	563 Move W1, [X20+328]
	564 Move W23, W0
	565 Move X0, X24
	566 Move X2, X31
	567 Call Glyph.set_atlasIndex, X0, X1
	568 Move X0, [X20+280]
	569 Compare X0, 0
	570 JumpIfEqual {819}
	571 Move W10, [X0+28]
	572 Move X8, [X0+16]
	573 Move X9, [X26]
	574 Add W10, W10, 1
	575 Move [X0+28], W10
	576 Compare X8, 0
	577 JumpIfEqual {819}
	578 NotImplemented "Instruction LDRSW not yet implemented."
	579 Move W11, [X8+24]
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Add W9, W10, 1
	582 Add X8, X8, X10
	583 Move [X0+24], W9
	584 Move [X8+32], X24
	585 Move X8, [X9+32]
	586 Move X1, X24
	587 Move X8, [X8+192]
	588 Move X2, [X8+112]
	589 Call List`1<Object>.AddWithResize, X0, X1
	590 Move X0, [X20+288]
	591 Compare X0, 0
	592 JumpIfEqual {819}
	593 Move X3, [X27]
	594 Move W1, W23
	595 Move X2, X24
	596 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	597 Move X0, [X20+440]
	598 Compare X0, 0
	599 JumpIfEqual {819}
	600 Move W10, [X0+28]
	601 Move X8, [X0+16]
	602 Move X9, [X25]
	603 Add W10, W10, 1
	604 Move [X0+28], W10
	605 Compare X8, 0
	606 JumpIfEqual {819}
	607 NotImplemented "Instruction LDRSW not yet implemented."
	608 Move W11, [X8+24]
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Add W9, W10, 1
	611 Add X8, X8, X10
	612 Move [X0+24], W9
	613 Move [X8+32], W23
	614 Move X8, [X9+32]
	615 Move W1, W23
	616 Move X8, [X8+192]
	617 Move X2, [X8+112]
	618 Call List`1<UInt32>.AddWithResize, X0, X1
	619 Move X0, [X20+432]
	620 Compare X0, 0
	621 JumpIfEqual {819}
	622 Move W10, [X0+28]
	623 Move X8, [X0+16]
	624 Move X9, [X25]
	625 Add W10, W10, 1
	626 Move [X0+28], W10
	627 Compare X8, 0
	628 JumpIfEqual {819}
	629 NotImplemented "Instruction LDRSW not yet implemented."
	630 Move W11, [X8+24]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Add W9, W10, 1
	633 Add X8, X8, X10
	634 Move [X0+24], W9
	635 Move [X8+32], W23
	636 Move X8, [X9+32]
	637 Move W1, W23
	638 Move X8, [X8+192]
	639 Move X2, [X8+112]
	640 Call List`1<UInt32>.AddWithResize, X0, X1
	641 Move X8, [X31+24]
	642 Add X21, X21, 1
	643 Compare X8, 0
	644 JumpIfNotEqual {553}
	645 Move X8, [X20+448]
	646 Compare X8, 0
	647 JumpIfEqual {819}
	648 Move W9, [X8+28]
	649 Add W9, W9, 1
	650 Move [X8+24], W31
	651 Move [X8+28], W9
	652 Move X0, [X20+464]
	653 Compare X0, 0
	654 JumpIfEqual {819}
	655 Move X26, 0x4BC000
	656 Move X21, 0x4B3000
	657 Move X27, 0x4BC000
	658 Move X28, 0x4BC000
	659 Move X29, 0x4BC000
	660 Move X26, [X26+728]
	661 Move X21, [X21+3656]
	662 Move X27, [X27+1216]
	663 Move X28, [X28+688]
	664 Move X29, [X29+1272]
	665 Move W23, W31
	666 Move W8, [X0+24]
	667 NotImplemented "Instruction CMP not yet implemented."
	668 Move X2, [X26]
	669 Move W1, W23
	670 Call List`1<Object>.get_Item, X0, X1
	671 Compare X0, 0
	672 JumpIfEqual {819}
	673 Move X24, X0
	674 Move X0, [X20+288]
	675 Compare X0, 0
	676 JumpIfEqual {819}
	677 Move W1, [X24+40]
	678 Move X3, [X21]
	679 Add X2, X31, 16
	680 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	681 Move TEMP, X0
	682 And TEMP, TEMP, 1
	683 Compare TEMP, 1
	684 JumpIfNotEqual {705}
	685 Move X8, [X31+16]
	686 Move [X24+24], X20
	687 Move [X24+32], X8
	688 Move X0, [X20+296]
	689 Compare X0, 0
	690 JumpIfEqual {819}
	691 Move W10, [X0+28]
	692 Move X8, [X0+16]
	693 Move X9, [X27]
	694 Add W10, W10, 1
	695 Move [X0+28], W10
	696 Compare X8, 0
	697 JumpIfEqual {819}
	698 NotImplemented "Instruction LDRSW not yet implemented."
	699 Move W11, [X8+24]
	700 NotImplemented "Instruction CMP not yet implemented."
	701 Add W9, W10, 1
	702 Add X8, X8, X10
	703 Move [X0+24], W9
	704 Move [X8+32], X24
	705 Move X0, [X20+448]
	706 Compare X0, 0
	707 JumpIfEqual {819}
	708 Move W10, [X0+28]
	709 Move W1, [X24+40]
	710 Move X8, [X0+16]
	711 Move X9, [X25]
	712 Add W10, W10, 1
	713 Move [X0+28], W10
	714 Compare X8, 0
	715 JumpIfEqual {819}
	716 NotImplemented "Instruction LDRSW not yet implemented."
	717 Move W11, [X8+24]
	718 NotImplemented "Instruction CMP not yet implemented."
	719 Add W9, W10, 1
	720 Add X8, X8, X10
	721 Move [X0+24], W9
	722 Move [X8+32], W1
	723 Move X8, [X9+32]
	724 Move X1, X24
	725 Move X8, [X8+192]
	726 Move X2, [X8+112]
	727 Call List`1<Object>.AddWithResize, X0, X1
	728 Move X0, [X20+304]
	729 Compare X0, 0
	730 JumpIfEqual {819}
	731 Move W1, [X24+20]
	732 Move X3, [X28]
	733 Move X2, X24
	734 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	735 Move X0, [X20+464]
	736 Compare X0, 0
	737 JumpIfEqual {819}
	738 Move X2, [X29]
	739 Move W1, W23
	740 Call List`1<Object>.RemoveAt, X0, X1
	741 Subtract W23, W23, 1
	742 Move X8, [X9+32]
	743 Move X8, [X8+192]
	744 Move X2, [X8+112]
	745 Call List`1<UInt32>.AddWithResize, X0, X1
	746 Move X0, [X20+464]
	747 Add W23, W23, 1
	748 Compare X0, 0
	749 JumpIfNotEqual {666}
	750 Move W8, [X20+332]
	751 NotImplemented "Instruction CMP not yet implemented."
	752 NotImplemented "Instruction CSET not yet implemented."
	753 Or W9, W22, W8
	754 NotImplemented "Instruction CSET not yet implemented."
	755 Move TEMP, X9
	756 And TEMP, TEMP, 1
	757 Compare TEMP, 1
	758 JumpIfNotEqual {761}
	759 Move W21, [X31+8]
	760 Or W22, W22, W8
	761 Move W21, [X31+8]
	762 Move X0, X20
	763 Call FontAsset.TryAddGlyphsToNewAtlasTexture, X0
	764 Move TEMP, X0
	765 And TEMP, TEMP, 1
	766 Compare TEMP, 1
	767 JumpIfNotEqual {762}
	768 Move W22, 1
	769 Move TEMP, X21
	770 And TEMP, TEMP, 1
	771 Compare TEMP, 1
	772 JumpIfNotEqual {775}
	773 Move X0, X20
	774 Call FontAsset.UpdateAllFontFeatures, X0
	775 Move X8, 0x450000
	776 Move X8, [X8+632]
	777 Move X8, [X8]
	778 Move X8, [X8+184]
	779 Move X8, [X8]
	780 Move [X19], X8
	781 Move X0, [X20+464]
	782 Compare X0, 0
	783 JumpIfEqual {819}
	784 Move W21, W31
	785 Move W8, [X0+24]
	786 NotImplemented "Instruction CMP not yet implemented."
	787 Move X2, [X26]
	788 Move W1, W21
	789 Call List`1<Object>.get_Item, X0, X1
	790 Compare X0, 0
	791 JumpIfEqual {819}
	792 Move X8, X0
	793 Move X0, [X20+480]
	794 Compare X0, 0
	795 JumpIfEqual {819}
	796 Move W10, [X0+28]
	797 Move W1, [X8+20]
	798 Move X8, [X0+16]
	799 Move X9, [X25]
	800 Add W10, W10, 1
	801 Move [X0+28], W10
	802 Compare X8, 0
	803 JumpIfEqual {819}
	804 NotImplemented "Instruction LDRSW not yet implemented."
	805 Move W11, [X8+24]
	806 NotImplemented "Instruction CMP not yet implemented."
	807 Add W9, W10, 1
	808 Add X8, X8, X10
	809 Move [X0+24], W9
	810 Move [X8+32], W1
	811 Move X8, [X9+32]
	812 Move X8, [X8+192]
	813 Move X2, [X8+112]
	814 Call List`1<UInt32>.AddWithResize, X0, X1
	815 Move X0, [X20+464]
	816 Add W21, W21, 1
	817 Compare X0, 0
	818 JumpIfNotEqual {785}
	819 Call 0x1C17F20
	820 Move X0, [X20+480]
	821 Compare X0, 0
	822 JumpIfEqual {819}
	823 Move W8, [X0+24]
	824 NotImplemented "Instruction CMP not yet implemented."
	825 Move X1, X31
	826 Call TextUtilities.UintToString, X0
	827 Move [X19], X0
	828 Move W8, [X31+12]
	829 Xor W8, W8, 1
	830 And W8, W22, W8
	831 Call 0x1C17F28

Method: System.Boolean TryAddGlyphInternal(System.UInt32 glyphIndex, out UnityEngine.TextCore.Glyph glyph)

Disassembly:
	0x03CA647C LDR X2, [X8 + 0x70]
	0x03CA6480 BL 0x30C1698
	0x03CA6484 LDR X0, [X19 + 0x1B8]
	0x03CA6488 CBZ X0, 0x3CA655C
	0x03CA648C LDR W10, [X0 + 0x1C]
	0x03CA6490 LDR X8, [X0 + 0x10]
	0x03CA6494 LDR X9, [X20]
	0x03CA6498 ADD W10, W10, 0x1
	0x03CA649C STR W10, [X0 + 0x1C]
	0x03CA64A0 CBZ X8, 0x3CA655C
	0x03CA64A4 LDRSW X10, [X0 + 0x18]
	0x03CA64A8 LDR W11, [X8 + 0x18]
	0x03CA64AC CMP W10, W11
	0x03CA64B0 B.CS 0x3CA64C8
	0x03CA64B4 ADD W9, W10, 0x1
	0x03CA64B8 ADD X8, X8, X10, 0x2, LSL
	0x03CA64BC STR W9, [X0 + 0x18]
	0x03CA64C0 STR W23, [X8 + 0x20]
	0x03CA64C4 B 0x3CA64DC
	0x03CA64C8 LDR X8, [X9 + 0x20]
	0x03CA64CC MOV W1, W23
	0x03CA64D0 LDR X8, [X8 + 0xC0]
	0x03CA64D4 LDR X2, [X8 + 0x70]
	0x03CA64D8 BL 0x30C1698
	0x03CA64DC TBZ X21, 0x0, 0x3CA6500
	0x03CA64E0 ADRP X8, 0x4BB000
	0x03CA64E4 LDR X8, [X8 + 0x258]
	0x03CA64E8 LDR X0, [X8]
	0x03CA64EC LDR W8, [X0 + 0xE0]
	0x03CA64F0 CBNZ W8, 0x3CA64F8
	0x03CA64F4 BL 0x1C16DFC
	0x03CA64F8 MOV X0, X19
	0x03CA64FC BL 0x3CA3208
	0x03CA6500 LDR X0, [X19 + 0x1A0]
	0x03CA6504 CBZ X0, 0x3CA655C
	0x03CA6508 LDR W10, [X0 + 0x1C]
	0x03CA650C LDR X1, [X31 + 0x8]
	0x03CA6510 LDR X8, [X0 + 0x10]
	0x03CA6514 LDR X9, [X26]
	0x03CA6518 ADD W10, W10, 0x1
	0x03CA651C STR W10, [X0 + 0x1C]
	0x03CA6520 CBZ X8, 0x3CA655C
	0x03CA6524 LDRSW X10, [X0 + 0x18]
	0x03CA6528 LDR W11, [X8 + 0x18]
	0x03CA652C CMP W10, W11
	0x03CA6530 B.CS 0x3CA6548
	0x03CA6534 ADD W9, W10, 0x1
	0x03CA6538 ADD X8, X8, X10, 0x3, LSL
	0x03CA653C STR W9, [X0 + 0x18]
	0x03CA6540 STR X1, [X8 + 0x20]
	0x03CA6544 B 0x3CA6320
	0x03CA6548 LDR X8, [X9 + 0x20]
	0x03CA654C LDR X8, [X8 + 0xC0]
	0x03CA6550 LDR X2, [X8 + 0x70]
	0x03CA6554 BL 0x301BF90
	0x03CA6558 B 0x3CA6320
	0x03CA655C BL 0x1C16F20
	0x03CA6560 RET
	0x03CA6564 SUB X31, X31, 0x150
	0x03CA6568 STP X29, X30, [X31 + 0xF0]
	0x03CA656C STP X28, X27, [X31 + 0x100]
	0x03CA6570 STP X26, X25, [X31 + 0x110]
	0x03CA6574 STP X24, X23, [X31 + 0x120]
	0x03CA6578 STP X22, X21, [X31 + 0x130]
	0x03CA657C STP X20, X19, [X31 + 0x140]
	0x03CA6580 ADRP X21, 0x741000
	0x03CA6584 ADRP X19, 0x4BB000
	0x03CA6588 LDRB W8, [X21 + 0x2F8]
	0x03CA658C LDR X19, [X19 + 0x258]
	0x03CA6590 MOV X20, X0
	0x03CA6594 TBNZ X8, 0x0, 0x3CA65F4
	0x03CA6598 ADRP X0, 0x4BB000
	0x03CA659C LDR X0, [X0 + 0x338]
	0x03CA65A0 BL 0x1C16CF4
	0x03CA65A4 ADRP X0, 0x4BB000
	0x03CA65A8 LDR X0, [X0 + 0x348]
	0x03CA65AC BL 0x1C16CF4
	0x03CA65B0 ADRP X0, 0x4BB000
	0x03CA65B4 LDR X0, [X0 + 0x258]
	0x03CA65B8 BL 0x1C16CF4
	0x03CA65BC ADRP X0, 0x4B2000
	0x03CA65C0 LDR X0, [X0 + 0xBC0]
	0x03CA65C4 BL 0x1C16CF4
	0x03CA65C8 ADRP X0, 0x4BB000
	0x03CA65CC LDR X0, [X0 + 0x508]
	0x03CA65D0 BL 0x1C16CF4
	0x03CA65D4 ADRP X0, 0x4BB000
	0x03CA65D8 LDR X0, [X0 + 0x510]
	0x03CA65DC BL 0x1C16CF4
	0x03CA65E0 ADRP X0, 0x4A4000
	0x03CA65E4 LDR X0, [X0 + 0xB50]
	0x03CA65E8 BL 0x1C16CF4
	0x03CA65EC MOVZ W8, 0x1
	0x03CA65F0 STRB W8, [X21 + 0x2F8]
	0x03CA65F4 LDR X0, [X19]
	0x03CA65F8 MOVI V0.2D, 0x0
	0x03CA65FC STR W31, [X31 + 0x8C]
	0x03CA6600 STUR V0, [X31 + 0x7C]
	0x03CA6604 STP V0, V0, [X31 + 0x60]
	0x03CA6608 STP X31, X31, [X31 + 0x40]
	0x03CA660C STR W31, [X31 + 0x50]
	0x03CA6610 LDR W8, [X0 + 0xE0]
	0x03CA6614 CBNZ W8, 0x3CA6620
	0x03CA6618 BL 0x1C16DFC
	0x03CA661C LDR X0, [X19]
	0x03CA6620 LDR X8, [X0 + 0xB8]
	0x03CA6624 ADRP X21, 0x4B2000
	0x03CA6628 MOV X1, X31
	0x03CA662C MOV X2, X31
	0x03CA6630 LDR X19, [X8 + 0x20]
	0x03CA6634 LDR X21, [X21 + 0xBC0]
	0x03CA6638 MOV X0, X19
	0x03CA663C BL 0x33C5D2C
	0x03CA6640 TBZ X0, 0x0, 0x3CA6650
	0x03CA6644 MOV X0, X19
	0x03CA6648 MOV X1, X31
	0x03CA664C BL 0x3BFE970
	0x03CA6650 LDR X0, [X21]
	0x03CA6654 LDR X21, [X20 + 0x1B0]
	0x03CA6658 LDR W8, [X0 + 0xE0]
	0x03CA665C CBNZ W8, 0x3CA6664
	0x03CA6660 BL 0x1C16DFC
	0x03CA6664 ADD X1, X31, 0x8C
	0x03CA6668 MOV X0, X21
	0x03CA666C MOV X2, X31
	0x03CA6670 BL 0x3C9E058
	0x03CA6674 LDR X8, [X20 + 0x1B8]
	0x03CA6678 CBZ X8, 0x3CA6950
	0x03CA667C LDR W9, [X8 + 0x1C]
	0x03CA6680 MOV X21, X0
	0x03CA6684 ADD W9, W9, 0x1
	0x03CA6688 STP W31, W9, [X8 + 0x18]
	0x03CA668C CBZ X0, 0x3CA68D8
	0x03CA6690 LDR W8, [X21 + 0x18]
	0x03CA6694 CBZ W8, 0x3CA68D4
	0x03CA6698 LDR X9, [X20 + 0x170]
	0x03CA669C CBNZ X9, 0x3CA66C0
	0x03CA66A0 ADRP X8, 0x4BB000
	0x03CA66A4 LDR X8, [X8 + 0x508]
	0x03CA66A8 LDR X0, [X8]
	0x03CA66AC BL 0x1C16F10
	0x03CA66B0 MOV X22, X0
	0x03CA66B4 BL 0x3CA6A10
	0x03CA66B8 STR X22, [X20 + 0x170]
	0x03CA66BC LDR W8, [X21 + 0x18]
	0x03CA66C0 CMP W8, 0x1
	0x03CA66C4 B.LT 0x3CA68D4
	0x03CA66C8 ADRP X26, 0x4BB000
	0x03CA66CC ADRP X27, 0x4BB000
	0x03CA66D0 ADRP X29, 0x4BB000
	0x03CA66D4 LDR X26, [X26 + 0x348]
	0x03CA66D8 LDR X27, [X27 + 0x510]
	0x03CA66DC LDR X29, [X29 + 0x338]
	0x03CA66E0 MOV X24, X31
	0x03CA66E4 ADD X25, X31, 0x90
	0x03CA66E8 ADD X22, X21, 0x20
	0x03CA66EC MOVZ W28, 0x2C
	0x03CA66F0 CMP X24, W8, UXTW
	0x03CA66F4 B.CS 0x3CA691C
	0x03CA66F8 ADD X8, X31, 0xC0
	0x03CA66FC MOV X0, X22
	0x03CA6700 MOV X1, X31
	0x03CA6704 BL 0x3C9E6D0
	0x03CA6708 LDR V0, [X31 + 0xC]
	0x03CA670C LDR W8, [X31 + 0xD0]
	0x03CA6710 STR V0, [X31 + 0x4]
	0x03CA6714 STR W8, [X31 + 0x50]
	0x03CA6718 ADD X0, X31, 0x40
	0x03CA671C MOV X1, X31
	0x03CA6720 BL 0x3C9E52C
	0x03CA6724 CBZ W0, 0x3CA68D4
	0x03CA6728 LDR W8, [X21 + 0x18]
	0x03CA672C CMP X24, X8
	0x03CA6730 B.CS 0x3CA6924
	0x03CA6734 ADD X8, X31, 0xC0
	0x03CA6738 MOV X0, X22
	0x03CA673C MOV X1, X31
	0x03CA6740 BL 0x3C9E6E4
	0x03CA6744 LDR V0, [X31 + 0xC]
	0x03CA6748 LDR W8, [X31 + 0xD0]
	0x03CA674C STR V0, [X31 + 0x4]
	0x03CA6750 STR W8, [X31 + 0x50]
	0x03CA6754 ADD X0, X31, 0x40
	0x03CA6758 MOV X1, X31
	0x03CA675C BL 0x3C9E52C
	0x03CA6760 LDR W8, [X21 + 0x18]
	0x03CA6764 CMP X24, X8
	0x03CA6768 B.CS 0x3CA692C
	0x03CA676C MOV W23, W0
	0x03CA6770 ADD X8, X31, 0xC0
	0x03CA6774 MOV X0, X22
	0x03CA6778 MOV X1, X31
	0x03CA677C BL 0x3C9E6D0
	0x03CA6780 LDR V0, [X31 + 0xC]
	0x03CA6784 LDR W8, [X31 + 0xD0]
	0x03CA6788 STR V0, [X31 + 0x4]
	0x03CA678C STR W8, [X31 + 0x50]
	0x03CA6790 ADD X0, X31, 0x40
	0x03CA6794 MOV X1, X31
	0x03CA6798 BL 0x3C9E52C
	0x03CA679C LDR X8, [X20 + 0x170]
	0x03CA67A0 CBZ X8, 0x3CA6920
	0x03CA67A4 LDR X8, [X8 + 0x40]
	0x03CA67A8 CBZ X8, 0x3CA6928
	0x03CA67AC LDR X2, [X26]
	0x03CA67B0 ORR W23, W0, W23, 0x10
	0x03CA67B4 MOV X0, X8
	0x03CA67B8 MOV W1, W23
	0x03CA67BC BL 0x2B029E0
	0x03CA67C0 TBNZ X0, 0x0, 0x3CA68C0
	0x03CA67C4 LDR W8, [X21 + 0x18]
	0x03CA67C8 CMP X24, X8
	0x03CA67CC B.CS 0x3CA6930
	0x03CA67D0 LDUR V0, [X22 + 0x1C]
	0x03CA67D4 LDP V2, V1, [X22]
	0x03CA67D8 STUR V0, [X31 + 0x7C]
	0x03CA67DC STP V2, V1, [X31 + 0x60]
	0x03CA67E0 LDR X8, [X20 + 0x170]
	0x03CA67E4 CBZ X8, 0x3CA6944
	0x03CA67E8 LDR X0, [X8 + 0x20]
	0x03CA67EC LDP V0, V1, [X31 + 0x60]
	0x03CA67F0 LDUR V2, [X31 + 0x7C]
	0x03CA67F4 STP V0, V1, [X31 + 0x10]
	0x03CA67F8 STUR V2, [X31 + 0x2C]
	0x03CA67FC CBZ X0, 0x3CA6940
	0x03CA6800 LDP V0, V1, [X31 + 0x10]
	0x03CA6804 LDUR V2, [X31 + 0x2C]
	0x03CA6808 LDR X10, [X27]
	0x03CA680C STP V0, V1, [X31 + 0x90]
	0x03CA6810 STUR V2, [X25 + 0x1C]
	0x03CA6814 LDR W9, [X0 + 0x1C]
	0x03CA6818 LDR X8, [X0 + 0x10]
	0x03CA681C ADD W9, W9, 0x1
	0x03CA6820 STR W9, [X0 + 0x1C]
	0x03CA6824 CBZ X8, 0x3CA693C
	0x03CA6828 LDRSW X9, [X0 + 0x18]
	0x03CA682C LDR W11, [X8 + 0x18]
	0x03CA6830 CMP W9, W11
	0x03CA6834 B.CS 0x3CA685C
	0x03CA6838 ADD W10, W9, 0x1
	0x03CA683C STR W10, [X0 + 0x18]
	0x03CA6840 LDUR V0, [X25 + 0x1C]
	0x03CA6844 LDP V2, V1, [X31 + 0x90]
	0x03CA6848 NOP
	0x03CA684C MADD X8, X9, X28, X8
	0x03CA6850 STUR V0, [X8 + 0x3C]
	0x03CA6854 STP V2, V1, [X8 + 0x20]
	0x03CA6858 B 0x3CA6880
	0x03CA685C LDR X8, [X10 + 0x20]
	0x03CA6860 LDP V0, V1, [X31 + 0x90]
	0x03CA6864 LDUR V2, [X25 + 0x1C]
	0x03CA6868 LDR X8, [X8 + 0xC0]
	0x03CA686C LDR X2, [X8 + 0x70]
	0x03CA6870 STP V0, V1, [X31 + 0xC0]
	0x03CA6874 STUR V2, [X25 + 0x4C]
	0x03CA6878 ADD X1, X31, 0xC0
	0x03CA687C BL 0x2FC261C
	0x03CA6880 LDR X8, [X20 + 0x170]
	0x03CA6884 CBZ X8, 0x3CA6938
	0x03CA6888 LDR X0, [X8 + 0x40]
	0x03CA688C LDP V0, V1, [X31 + 0x60]
	0x03CA6890 LDUR V2, [X31 + 0x7C]
	0x03CA6894 STP V0, V1, [X31 + 0x90]
	0x03CA6898 STUR V2, [X25 + 0x1C]
	0x03CA689C CBZ X0, 0x3CA6934
	0x03CA68A0 LDP V0, V1, [X31 + 0x90]
	0x03CA68A4 LDUR V2, [X25 + 0x1C]
	0x03CA68A8 LDR X3, [X29]
	0x03CA68AC STP V0, V1, [X31 + 0xC0]
	0x03CA68B0 STUR V2, [X25 + 0x4C]
	0x03CA68B4 ADD X2, X31, 0xC0
	0x03CA68B8 MOV W1, W23
	0x03CA68BC BL 0x2B026C8
	0x03CA68C0 LDR X8, [X21 + 0x18]
	0x03CA68C4 ADD X24, X24, 0x1
	0x03CA68C8 ADD X22, X22, 0x2C
	0x03CA68CC CMP X24, W8, SXTW
	0x03CA68D0 B.LT 0x3CA66F0
	0x03CA68D4 MOV X21, X31
	0x03CA68D8 MOV X0, X19
	0x03CA68DC MOV X1, X31
	0x03CA68E0 MOV X2, X31
	0x03CA68E4 BL 0x33C5D2C
	0x03CA68E8 TBZ X0, 0x0, 0x3CA68F8
	0x03CA68EC MOV X0, X19
	0x03CA68F0 MOV X1, X31
	0x03CA68F4 BL 0x3BFEA0C
	0x03CA68F8 CBNZ X21, 0x3CA6948
	0x03CA68FC LDP X20, X19, [X31 + 0x140]
	0x03CA6900 LDP X22, X21, [X31 + 0x130]
	0x03CA6904 LDP X24, X23, [X31 + 0x120]
	0x03CA6908 LDP X26, X25, [X31 + 0x110]
	0x03CA690C LDP X28, X27, [X31 + 0x100]
	0x03CA6910 LDP X29, X30, [X31 + 0xF0]
	0x03CA6914 ADD X31, X31, 0x150
	0x03CA6918 RET
	0x03CA691C BL 0x1C16F28
	0x03CA6920 BL 0x1C16F20
	0x03CA6924 BL 0x1C16F28
	0x03CA6928 BL 0x1C16F20
	0x03CA692C BL 0x1C16F28
	0x03CA6930 BL 0x1C16F28
	0x03CA6934 BL 0x1C16F20
	0x03CA6938 BL 0x1C16F20
	0x03CA693C BL 0x1C16F20
	0x03CA6940 BL 0x1C16F20
	0x03CA6944 BL 0x1C16F20
	0x03CA6948 MOV X0, X21
	0x03CA694C BL 0x1C16F18
	0x03CA6950 BL 0x1C16F20
	0x03CA6954 B 0x3CA69AC
	0x03CA6958 B 0x3CA69AC
	0x03CA695C B 0x3CA69AC
	0x03CA6960 B 0x3CA69AC
	0x03CA6964 B 0x3CA69AC
	0x03CA6968 B 0x3CA69AC
	0x03CA696C B 0x3CA69AC
	0x03CA6970 B 0x3CA69AC
	0x03CA6974 B 0x3CA69AC
	0x03CA6978 B 0x3CA69AC
	0x03CA697C B 0x3CA69AC
	0x03CA6980 B 0x3CA69AC
	0x03CA6984 B 0x3CA69AC
	0x03CA6988 B 0x3CA69AC
	0x03CA698C B 0x3CA69AC
	0x03CA6990 B 0x3CA69AC
	0x03CA6994 B 0x3CA69AC
	0x03CA6998 B 0x3CA69AC
	0x03CA699C B 0x3CA69AC
	0x03CA69A0 B 0x3CA69AC
	0x03CA69A4 B 0x3CA69AC
	0x03CA69A8 B 0x3CA69AC
	0x03CA69AC MOV X20, X0
	0x03CA69B0 CMP W1, 0x1
	0x03CA69B4 B.NE 0x3CA69CC
	0x03CA69B8 MOV X0, X20
	0x03CA69BC BL 0x3EB1AD0
	0x03CA69C0 LDR X21, [X0]
	0x03CA69C4 BL 0x3EB1AE0
	0x03CA69C8 B 0x3CA68D8
	0x03CA69CC MOV X21, X31
	0x03CA69D0 B 0x3CA69D8
	0x03CA69D4 MOV X20, X0
	0x03CA69D8 MOV X0, X19
	0x03CA69DC MOV X1, X31
	0x03CA69E0 MOV X2, X31
	0x03CA69E4 BL 0x33C5D2C
	0x03CA69E8 TBZ X0, 0x0, 0x3CA69F8
	0x03CA69EC MOV X0, X19
	0x03CA69F0 MOV X1, X31
	0x03CA69F4 BL 0x3BFEA0C
	0x03CA69F8 CBNZ X21, 0x3CA6A04
	0x03CA69FC MOV X0, X20
	0x03CA6A00 BL 0x1D2C690
	0x03CA6A04 MOV X0, X21
	0x03CA6A08 BL 0x1C16F18
	0x03CA6A0C BL 0x1990590
	0x03CA6A10 STP X29, X30, [X31 - 0x60]!
	0x03CA6A14 STP X28, X27, [X31 + 0x10]
	0x03CA6A18 STP X26, X25, [X31 + 0x20]
	0x03CA6A1C STP X24, X23, [X31 + 0x30]
	0x03CA6A20 STP X22, X21, [X31 + 0x40]
	0x03CA6A24 STP X20, X19, [X31 + 0x50]
	0x03CA6A28 ADRP X27, 0x741000
	0x03CA6A2C ADRP X26, 0x4BB000
	0x03CA6A30 ADRP X20, 0x4BB000
	0x03CA6A34 ADRP X25, 0x4BB000
	0x03CA6A38 ADRP X24, 0x4BB000
	0x03CA6A3C ADRP X23, 0x4BB000
	0x03CA6A40 ADRP X22, 0x4BB000
	0x03CA6A44 ADRP X21, 0x4BB000
	0x03CA6A48 ADRP X29, 0x4BB000
	0x03CA6A4C ADRP X28, 0x4BB000
	0x03CA6A50 LDR X26, [X26 + 0x330]
	0x03CA6A54 LDR X20, [X20 + 0x318]
	0x03CA6A58 LDR X25, [X25 + 0x308]
	0x03CA6A5C LDR X24, [X24 + 0x2F8]
	0x03CA6A60 LDR X23, [X23 + 0x518]
	0x03CA6A64 LDR X22, [X22 + 0x520]
	0x03CA6A68 LDR X21, [X21 + 0x358]
	0x03CA6A6C LDR X29, [X29 + 0x350]
	0x03CA6A70 LDR X28, [X28 + 0x528]
	0x03CA6A74 LDRB W8, [X27 + 0x307]
	0x03CA6A78 MOV X19, X0
	0x03CA6A7C TBNZ X8, 0x0, 0x3CA6B48
	0x03CA6A80 ADRP X0, 0x4BB000
	0x03CA6A84 LDR X0, [X0 + 0x388]
	0x03CA6A88 BL 0x1C16CF4
	0x03CA6A8C ADRP X0, 0x4BB000
	0x03CA6A90 LDR X0, [X0 + 0x3C0]
	0x03CA6A94 BL 0x1C16CF4
	0x03CA6A98 ADRP X0, 0x4BB000
	0x03CA6A9C LDR X0, [X0 + 0x2F8]
	0x03CA6AA0 BL 0x1C16CF4
	0x03CA6AA4 ADRP X0, 0x4BB000
	0x03CA6AA8 LDR X0, [X0 + 0x350]
	0x03CA6AAC BL 0x1C16CF4
	0x03CA6AB0 ADRP X0, 0x4BB000
	0x03CA6AB4 LDR X0, [X0 + 0x3C8]
	0x03CA6AB8 BL 0x1C16CF4
	0x03CA6ABC ADRP X0, 0x4BB000
	0x03CA6AC0 LDR X0, [X0 + 0x308]
	0x03CA6AC4 BL 0x1C16CF4
	0x03CA6AC8 ADRP X0, 0x4BB000
	0x03CA6ACC LDR X0, [X0 + 0x390]
	0x03CA6AD0 BL 0x1C16CF4
	0x03CA6AD4 ADRP X0, 0x4BB000
	0x03CA6AD8 LDR X0, [X0 + 0x358]
	0x03CA6ADC BL 0x1C16CF4
	0x03CA6AE0 ADRP X0, 0x4BB000
	0x03CA6AE4 LDR X0, [X0 + 0x318]
	0x03CA6AE8 BL 0x1C16CF4
	0x03CA6AEC ADRP X0, 0x4BB000
	0x03CA6AF0 LDR X0, [X0 + 0x520]
	0x03CA6AF4 BL 0x1C16CF4
	0x03CA6AF8 ADRP X0, 0x4BB000
	0x03CA6AFC LDR X0, [X0 + 0x530]
	0x03CA6B00 BL 0x1C16CF4
	0x03CA6B04 ADRP X0, 0x4BB000
	0x03CA6B08 LDR X0, [X0 + 0x538]
	0x03CA6B0C BL 0x1C16CF4
	0x03CA6B10 ADRP X0, 0x4BB000
	0x03CA6B14 LDR X0, [X0 + 0x518]
	0x03CA6B18 BL 0x1C16CF4
	0x03CA6B1C ADRP X0, 0x4BB000
	0x03CA6B20 LDR X0, [X0 + 0x330]
	0x03CA6B24 BL 0x1C16CF4
	0x03CA6B28 ADRP X0, 0x4BB000
	0x03CA6B2C LDR X0, [X0 + 0x528]
	0x03CA6B30 BL 0x1C16CF4
	0x03CA6B34 ADRP X0, 0x4BB000
	0x03CA6B38 LDR X0, [X0 + 0x540]
	0x03CA6B3C BL 0x1C16CF4
	0x03CA6B40 MOVZ W8, 0x1
	0x03CA6B44 STRB W8, [X27 + 0x307]
	0x03CA6B48 MOV X0, X19
	0x03CA6B4C MOV X1, X31
	0x03CA6B50 BL 0x33BDD8C
	0x03CA6B54 LDR X0, [X26]
	0x03CA6B58 BL 0x1C16F10
	0x03CA6B5C LDR X1, [X20]
	0x03CA6B60 MOV X20, X0
	0x03CA6B64 BL 0x2FF23FC
	0x03CA6B68 STR X20, [X19 + 0x18]
	0x03CA6B6C LDR X0, [X25]
	0x03CA6B70 BL 0x1C16F10
	0x03CA6B74 LDR X1, [X24]
	0x03CA6B78 MOV X20, X0
	0x03CA6B7C BL 0x2B0E7A4
	0x03CA6B80 STR X20, [X19 + 0x38]
	0x03CA6B84 LDR X0, [X23]
	0x03CA6B88 BL 0x1C16F10
	0x03CA6B8C LDR X1, [X22]
	0x03CA6B90 MOV X20, X0
	0x03CA6B94 BL 0x2FC1D68
	0x03CA6B98 STR X20, [X19 + 0x20]
	0x03CA6B9C LDR X0, [X21]
	0x03CA6BA0 BL 0x1C16F10
	0x03CA6BA4 LDR X1, [X29]
	0x03CA6BA8 MOV X20, X0
	0x03CA6BAC BL 0x2B01D64
	0x03CA6BB0 STR X20, [X19 + 0x40]
	0x03CA6BB4 LDR X0, [X28]
	0x03CA6BB8 BL 0x1C16F10
	0x03CA6BBC ADRP X8, 0x4BB000
	0x03CA6BC0 LDR X8, [X8 + 0x530]
	0x03CA6BC4 MOV X20, X0
	0x03CA6BC8 LDR X1, [X8]
	0x03CA6BCC BL 0x2FF7BAC
	0x03CA6BD0 STR X20, [X19 + 0x28]
	0x03CA6BD4 ADRP X8, 0x4BB000
	0x03CA6BD8 LDR X8, [X8 + 0x390]
	0x03CA6BDC LDR X0, [X8]
	0x03CA6BE0 BL 0x1C16F10
	0x03CA6BE4 ADRP X8, 0x4BB000
	0x03CA6BE8 LDR X8, [X8 + 0x388]
	0x03CA6BEC MOV X20, X0
	0x03CA6BF0 LDR X1, [X8]
	0x03CA6BF4 BL 0x2B080DC
	0x03CA6BF8 STR X20, [X19 + 0x48]
	0x03CA6BFC ADRP X8, 0x4BB000
	0x03CA6C00 LDR X8, [X8 + 0x540]
	0x03CA6C04 LDR X0, [X8]
	0x03CA6C08 BL 0x1C16F10
	0x03CA6C0C ADRP X8, 0x4BB000
	0x03CA6C10 LDR X8, [X8 + 0x538]
	0x03CA6C14 MOV X20, X0
	0x03CA6C18 LDR X1, [X8]
	0x03CA6C1C BL 0x2FFAC48
	0x03CA6C20 STR X20, [X19 + 0x30]
	0x03CA6C24 ADRP X8, 0x4BB000
	0x03CA6C28 LDR X8, [X8 + 0x3C8]
	0x03CA6C2C LDR X0, [X8]
	0x03CA6C30 BL 0x1C16F10
	0x03CA6C34 ADRP X8, 0x4BB000
	0x03CA6C38 LDR X8, [X8 + 0x3C0]
	0x03CA6C3C MOV X20, X0
	0x03CA6C40 LDR X1, [X8]
	0x03CA6C44 BL 0x2B0B440
	0x03CA6C48 STR X20, [X19 + 0x50]
	0x03CA6C4C LDP X20, X19, [X31 + 0x50]
	0x03CA6C50 LDP X22, X21, [X31 + 0x40]
	0x03CA6C54 LDP X24, X23, [X31 + 0x30]
	0x03CA6C58 LDP X26, X25, [X31 + 0x20]
	0x03CA6C5C LDP X28, X27, [X31 + 0x10]
	0x03CA6C60 LDP X29, X30, [X31], #0x60
	0x03CA6C64 RET
	0x03CA6C68 SUB X31, X31, 0x150
	0x03CA6C6C STP X29, X30, [X31 + 0xF0]
	0x03CA6C70 STP X28, X27, [X31 + 0x100]
	0x03CA6C74 STP X26, X25, [X31 + 0x110]
	0x03CA6C78 STP X24, X23, [X31 + 0x120]
	0x03CA6C7C STP X22, X21, [X31 + 0x130]
	0x03CA6C80 STP X20, X19, [X31 + 0x140]
	0x03CA6C84 ADRP X22, 0x741000
	0x03CA6C88 ADRP X19, 0x4BB000
	0x03CA6C8C LDRB W8, [X22 + 0x2F9]
	0x03CA6C90 LDR X19, [X19 + 0x258]
	0x03CA6C94 MOV X21, X1
	0x03CA6C98 MOV X20, X0
	0x03CA6C9C TBNZ X8, 0x0, 0x3CA6CF0
	0x03CA6CA0 ADRP X0, 0x4BB000
	0x03CA6CA4 LDR X0, [X0 + 0x338]
	0x03CA6CA8 BL 0x1C16CF4
	0x03CA6CAC ADRP X0, 0x4BB000
	0x03CA6CB0 LDR X0, [X0 + 0x348]
	0x03CA6CB4 BL 0x1C16CF4
	0x03CA6CB8 ADRP X0, 0x4BB000
	0x03CA6CBC LDR X0, [X0 + 0x258]
	0x03CA6CC0 BL 0x1C16CF4
	0x03CA6CC4 ADRP X0, 0x4B2000
	0x03CA6CC8 LDR X0, [X0 + 0xBC0]
	0x03CA6CCC BL 0x1C16CF4
	0x03CA6CD0 ADRP X0, 0x4BB000
	0x03CA6CD4 LDR X0, [X0 + 0x508]
	0x03CA6CD8 BL 0x1C16CF4
	0x03CA6CDC ADRP X0, 0x4BB000
	0x03CA6CE0 LDR X0, [X0 + 0x510]
	0x03CA6CE4 BL 0x1C16CF4
	0x03CA6CE8 MOVZ W8, 0x1
	0x03CA6CEC STRB W8, [X22 + 0x2F9]
	0x03CA6CF0 LDR X0, [X19]
	0x03CA6CF4 MOVI V0.2D, 0x0
	0x03CA6CF8 STUR V0, [X31 + 0x7C]
	0x03CA6CFC STP V0, V0, [X31 + 0x60]
	0x03CA6D00 STP X31, X31, [X31 + 0x40]
	0x03CA6D04 STR W31, [X31 + 0x50]
	0x03CA6D08 LDR W8, [X0 + 0xE0]
	0x03CA6D0C CBNZ W8, 0x3CA6D18
	0x03CA6D10 BL 0x1C16DFC
	0x03CA6D14 LDR X0, [X19]
	0x03CA6D18 LDR X8, [X0 + 0xB8]
	0x03CA6D1C ADRP X22, 0x4B2000
	0x03CA6D20 MOV X1, X31
	0x03CA6D24 MOV X2, X31
	0x03CA6D28 LDR X19, [X8 + 0x20]
	0x03CA6D2C LDR X22, [X22 + 0xBC0]
	0x03CA6D30 MOV X0, X19
	0x03CA6D34 BL 0x33C5D2C
	0x03CA6D38 TBZ X0, 0x0, 0x3CA6D48
	0x03CA6D3C MOV X0, X19
	0x03CA6D40 MOV X1, X31
	0x03CA6D44 BL 0x3BFE970
	0x03CA6D48 LDR X0, [X22]
	0x03CA6D4C LDR W8, [X0 + 0xE0]
	0x03CA6D50 CBNZ W8, 0x3CA6D58
	0x03CA6D54 BL 0x1C16DFC
	0x03CA6D58 MOV X0, X21
	0x03CA6D5C MOV X1, X31
	0x03CA6D60 BL 0x3C9DE88
	0x03CA6D64 MOV X21, X0
	0x03CA6D68 CBZ X0, 0x3CA6FB4
	0x03CA6D6C LDR W8, [X21 + 0x18]
	0x03CA6D70 CBZ W8, 0x3CA6FB0
	0x03CA6D74 LDR X9, [X20 + 0x170]
	0x03CA6D78 CBNZ X9, 0x3CA6D9C
	0x03CA6D7C ADRP X8, 0x4BB000
	0x03CA6D80 LDR X8, [X8 + 0x508]
	0x03CA6D84 LDR X0, [X8]
	0x03CA6D88 BL 0x1C16F10
	0x03CA6D8C MOV X22, X0
	0x03CA6D90 BL 0x3CA6A10
	0x03CA6D94 STR X22, [X20 + 0x170]
	0x03CA6D98 LDR W8, [X21 + 0x18]
	0x03CA6D9C CMP W8, 0x1
	0x03CA6DA0 B.LT 0x3CA6FB0
	0x03CA6DA4 ADRP X26, 0x4BB000
	0x03CA6DA8 ADRP X27, 0x4BB000
	0x03CA6DAC ADRP X29, 0x4BB000
	0x03CA6DB0 LDR X26, [X26 + 0x348]
	0x03CA6DB4 LDR X27, [X27 + 0x510]
	0x03CA6DB8 LDR X29, [X29 + 0x338]
	0x03CA6DBC MOV X24, X31
	0x03CA6DC0 ADD X25, X31, 0x90
	0x03CA6DC4 ADD X22, X21, 0x20
	0x03CA6DC8 MOVZ W28, 0x2C
	0x03CA6DCC CMP X24, W8, UXTW
	0x03CA6DD0 B.CS 0x3CA6FF8
	0x03CA6DD4 ADD X8, X31, 0xC0
	0x03CA6DD8 MOV X0, X22
	0x03CA6DDC MOV X1, X31
	0x03CA6DE0 BL 0x3C9E6D0
	0x03CA6DE4 LDR V0, [X31 + 0xC]
	0x03CA6DE8 LDR W8, [X31 + 0xD0]
	0x03CA6DEC STR V0, [X31 + 0x4]
	0x03CA6DF0 STR W8, [X31 + 0x50]
	0x03CA6DF4 ADD X0, X31, 0x40

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x742000
	013 Move X19, 0x4BC000
	014 Move W8, [X23+754]
	015 Move X19, [X19+600]
	016 Move X22, X2
	017 Move W21, W1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {61}
	023 Move X0, 0x44E000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x4B3000
	027 Move X0, [X0+3224]
	028 Call 0x1C17CF4
	029 Move X0, 0x4B3000
	030 Move X0, [X0+3240]
	031 Call 0x1C17CF4
	032 Move X0, 0x4B3000
	033 Move X0, [X0+3216]
	034 Call 0x1C17CF4
	035 Move X0, 0x4BC000
	036 Move X0, [X0+600]
	037 Call 0x1C17CF4
	038 Move X0, 0x4B3000
	039 Move X0, [X0+3008]
	040 Call 0x1C17CF4
	041 Move X0, 0x4B3000
	042 Move X0, [X0+3088]
	043 Call 0x1C17CF4
	044 Move X0, 0x454000
	045 Move X0, [X0+464]
	046 Call 0x1C17CF4
	047 Move X0, 0x44E000
	048 Move X0, [X0+2760]
	049 Call 0x1C17CF4
	050 Move X0, 0x4B3000
	051 Move X0, [X0+3592]
	052 Call 0x1C17CF4
	053 Move X0, 0x4B3000
	054 Move X0, [X0+3600]
	055 Call 0x1C17CF4
	056 Move X0, 0x4BC000
	057 Move X0, [X0+1280]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X23+754], W8
	061 Move X0, [X19]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X19]
	067 Move X8, [X0+184]
	068 Move X1, X31
	069 Move X2, X31
	070 Move X19, [X8+64]
	071 Move X0, X19
	072 Call IntPtr.op_Inequality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {80}
	077 Move X0, X19
	078 Move X1, X31
	079 Call ProfilerUnsafeUtility.BeginSample, X0
	080 Move [X22], X31
	081 Move X0, [X20+288]
	082 Compare X0, 0
	083 JumpIfEqual {531}
	084 Move X8, 0x4B3000
	085 Move X8, [X8+3240]
	086 Move X2, [X8]
	087 Move W1, W21
	088 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {104}
	093 Move X0, [X20+288]
	094 Compare X0, 0
	095 JumpIfEqual {534}
	096 Move X8, 0x4B3000
	097 Move X8, [X8+3216]
	098 Move X2, [X8]
	099 Move W1, W21
	100 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	101 Move X20, X31
	102 Move [X22], X0
	103 Move W22, 1
	104 Move X0, X20
	105 Call FontAsset.LoadFontFace, X0
	106 Compare W0, 0
	107 JumpIfNotEqual {316}
	108 Move X8, [X20+320]
	109 Compare X8, 0
	110 JumpIfEqual {535}
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Move W10, [X8+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X8, X8, X9
	115 Move X0, [X8+32]
	116 Compare X0, 0
	117 JumpIfEqual {537}
	118 Move X8, [X0]
	119 Move X9, [X8+488]
	120 Move X1, [X8+496]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {247}
	126 Move X8, [X20+320]
	127 Compare X8, 0
	128 JumpIfEqual {538}
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Move W10, [X8+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X8, X8, X9
	133 Move X0, [X8+32]
	134 Compare X0, 0
	135 JumpIfEqual {541}
	136 Move X8, [X0]
	137 Move X9, [X8+392]
	138 Move X1, [X8+400]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move W8, [X20+336]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X8, [X20+320]
	143 Compare X8, 0
	144 JumpIfEqual {559}
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Move W10, [X8+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Add X8, X8, X9
	149 Move X0, [X8+32]
	150 Compare X0, 0
	151 JumpIfEqual {561}
	152 Move X8, [X0]
	153 Move X9, [X8+424]
	154 Move X1, [X8+432]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move W8, [X20+340]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X8, [X20+320]
	159 Compare X8, 0
	160 JumpIfEqual {554}
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Move W10, [X8+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add X8, X8, X9
	165 Move X0, [X8+32]
	166 Compare X0, 0
	167 JumpIfEqual {556}
	168 Move W1, [X20+336]
	169 Move W2, [X20+340]
	170 Move X3, X31
	171 Call Texture2D.Reinitialize, X0, X1, X2
	172 Move X8, [X20+320]
	173 Compare X8, 0
	174 JumpIfEqual {557}
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Move W10, [X8+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X10, 0x4B3000
	179 Move X10, [X10+3008]
	180 Add X8, X8, X9
	181 Move X23, [X8+32]
	182 Move X0, [X10]
	183 Move W9, [X0+224]
	184 Compare W9, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X0, X23
	188 Move X1, X31
	189 Call FontEngine.ResetAtlasTexture, X0
	190 Move X24, 0x4B3000
	191 Move X24, [X24+3008]
	192 Move X0, [X24]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move W0, W31
	198 Move X1, X31
	199 Call FontEngine.SetTextureUploadMode, X0
	200 Move X8, [X20+320]
	201 Compare X8, 0
	202 JumpIfEqual {550}
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Move W10, [X8+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W1, [X20+344]
	207 Add X8, X8, X9
	208 Move X4, [X20+352]
	209 Move X3, [X20+360]
	210 Move W5, [X20+348]
	211 Move X6, [X8+32]
	212 Move W0, W21
	213 Move W2, W31
	214 Move X7, X22
	215 Move [X31], X31
	216 Call FontEngine.TryAddGlyphToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {349}
	221 Move X0, [X22]
	222 Compare X0, 0
	223 JumpIfEqual {562}
	224 Move W1, [X20+328]
	225 Move X2, X31
	226 Call Glyph.set_atlasIndex, X0, X1
	227 Move X0, [X20+280]
	228 Compare X0, 0
	229 JumpIfEqual {563}
	230 Move X9, 0x4B3000
	231 Move X1, [X22]
	232 Move X9, [X9+3088]
	233 Move W10, [X0+28]
	234 Move X8, [X0+16]
	235 Move X9, [X9]
	236 Add W10, W10, 1
	237 Move [X0+28], W10
	238 Compare X8, 0
	239 JumpIfEqual {564}
	240 NotImplemented "Instruction LDRSW not yet implemented."
	241 Move W11, [X8+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add W9, W10, 1
	244 Add X8, X8, X10
	245 Move [X0+24], W9
	246 Move [X8+32], X1
	247 Move X8, 0x44E000
	248 Move X8, [X8+2760]
	249 Move X0, [X8]
	250 Move W1, 5
	251 Call 0x1C17D6C
	252 Move X21, X0
	253 Compare X0, 0
	254 JumpIfEqual {539}
	255 Move W8, [X21+24]
	256 Compare W8, 0
	257 JumpIfEqual {542}
	258 Move X8, 0x4BC000
	259 Move X8, [X8+1280]
	260 Move X8, [X8]
	261 Move [X21+32], X8
	262 Move X0, X20
	263 Move X1, X31
	264 Call Object.get_name, X0
	265 Move W8, [X21+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move [X21+40], X0
	269 Move X8, 0x4B3000
	270 Move X8, [X8+3600]
	271 Move X8, [X8]
	272 Move [X21+48], X8
	273 Move X8, [X20+320]
	274 Compare X8, 0
	275 JumpIfEqual {545}
	276 NotImplemented "Instruction LDRSW not yet implemented."
	277 Move W10, [X8+24]
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Add X8, X8, X9
	280 Move X0, [X8+32]
	281 Compare X0, 0
	282 JumpIfEqual {547}
	283 Move X1, X31
	284 Call Object.get_name, X0
	285 Move W8, [X21+24]
	286 NotImplemented "Instruction CMP not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move [X21+56], X0
	289 Move X8, 0x4B3000
	290 Move X8, [X8+3592]
	291 Move X8, [X8]
	292 Move [X21+64], X8
	293 Move X0, X21
	294 Move X1, X31
	295 Call String.Concat, X0
	296 Move X8, [X20+320]
	297 Compare X8, 0
	298 JumpIfEqual {551}
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Move W10, [X8+24]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X10, 0x44E000
	303 Move X10, [X10+2600]
	304 Move X21, X0
	305 Add X8, X8, X9
	306 Move X20, [X8+32]
	307 Move X0, [X10]
	308 Move W9, [X0+224]
	309 Compare W9, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1C17DFC
	312 Move X0, X21
	313 Move X1, X20
	314 Move X2, X31
	315 Call Debug.LogWarning, X0, X1
	316 Move X20, X31
	317 Move W22, W31
	318 Move W23, 3
	319 Move X0, X19
	320 Move X1, X31
	321 Move X2, X31
	322 Call IntPtr.op_Inequality, X0, X1
	323 Move TEMP, X0
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {330}
	327 Move X0, X19
	328 Move X1, X31
	329 Call ProfilerUnsafeUtility.EndSample, X0
	330 Compare X20, 0
	331 JumpIfNotEqual {532}
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Compare W23, 0
	334 JumpIfNotEqual {336}
	335 Move W22, W31
	336 Move W0, W22
	337 Move X20, [X31+80]
	338 Move X19, [X31+88]
	339 Move X22, [X31+64]
	340 Move X21, [X31+72]
	341 Move X24, [X31+48]
	342 Move X23, [X31+56]
	343 Move X26, [X31+32]
	344 Move X25, [X31+40]
	345 Move X30, [X31+16]
	346 Move X27, [X31+24]
	347 Add X31, X31, 96
	348 Return X0
	349 Move W8, [X20+332]
	350 Compare W8, 0
	351 JumpIfEqual {411}
	352 Move X0, X20
	353 Call FontAsset.SetupNewAtlasTexture, X0
	354 Move X8, [X20+320]
	355 Compare X8, 0
	356 JumpIfEqual {570}
	357 NotImplemented "Instruction LDRSW not yet implemented."
	358 Move W10, [X8+24]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X0, [X24]
	361 Add X8, X8, X9
	362 Move W23, [X20+344]
	363 Move X25, [X20+352]
	364 Move X27, [X20+360]
	365 Move W24, [X20+348]
	366 Move W9, [X0+224]
	367 Move X26, [X8+32]
	368 Compare W9, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move W0, W21
	372 Move W1, W23
	373 Move W2, W31
	374 Move X3, X27
	375 Move X4, X25
	376 Move W5, W24
	377 Move X6, X26
	378 Move X7, X22
	379 Move [X31], X31
	380 Call FontEngine.TryAddGlyphToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	381 Move TEMP, X0
	382 And TEMP, TEMP, 1
	383 Compare TEMP, 1
	384 JumpIfNotEqual {411}
	385 Move X0, [X22]
	386 Compare X0, 0
	387 JumpIfEqual {572}
	388 Move W1, [X20+328]
	389 Move X2, X31
	390 Call Glyph.set_atlasIndex, X0, X1
	391 Move X0, [X20+280]
	392 Compare X0, 0
	393 JumpIfEqual {573}
	394 Move X9, 0x4B3000
	395 Move X1, [X22]
	396 Move X9, [X9+3088]
	397 Move W10, [X0+28]
	398 Move X8, [X0+16]
	399 Move X9, [X9]
	400 Add W10, W10, 1
	401 Move [X0+28], W10
	402 Compare X8, 0
	403 JumpIfEqual {574}
	404 NotImplemented "Instruction LDRSW not yet implemented."
	405 Move W11, [X8+24]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Add W9, W10, 1
	408 Add X8, X8, X10
	409 Move [X0+24], W9
	410 Move [X8+32], X1
	411 Move X20, X31
	412 Move W22, W31
	413 Move W23, 12
	414 Move X8, [X9+32]
	415 Move X8, [X8+192]
	416 Move X2, [X8+112]
	417 Call List`1<Object>.AddWithResize, X0, X1
	418 Move X0, [X20+288]
	419 Compare X0, 0
	420 JumpIfEqual {565}
	421 Move X8, 0x4B3000
	422 Move X2, [X22]
	423 Move X8, [X8+3224]
	424 Move X3, [X8]
	425 Move W1, W21
	426 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	427 Move X0, [X20+432]
	428 Compare X0, 0
	429 JumpIfEqual {566}
	430 Move X22, 0x454000
	431 Move X22, [X22+464]
	432 Move W10, [X0+28]
	433 Move X8, [X0+16]
	434 Move X9, [X22]
	435 Add W10, W10, 1
	436 Move [X0+28], W10
	437 Compare X8, 0
	438 JumpIfEqual {567}
	439 NotImplemented "Instruction LDRSW not yet implemented."
	440 Move W11, [X8+24]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Add W9, W10, 1
	443 Add X8, X8, X10
	444 Move [X0+24], W9
	445 Move [X8+32], W21
	446 Move X8, [X9+32]
	447 Move X8, [X8+192]
	448 Move X2, [X8+112]
	449 Move W1, W21
	450 Call List`1<UInt32>.AddWithResize, X0, X1
	451 Move X0, [X20+440]
	452 Compare X0, 0
	453 JumpIfEqual {568}
	454 Move W10, [X0+28]
	455 Move X8, [X0+16]
	456 Move X9, [X22]
	457 Add W10, W10, 1
	458 Move [X0+28], W10
	459 Compare X8, 0
	460 JumpIfEqual {569}
	461 NotImplemented "Instruction LDRSW not yet implemented."
	462 Move W11, [X8+24]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X8, [X9+32]
	465 Move X8, [X8+192]
	466 Move X2, [X8+112]
	467 Move W1, W21
	468 Call List`1<UInt32>.AddWithResize, X0, X1
	469 Move X8, [X9+32]
	470 Move X8, [X8+192]
	471 Move X2, [X8+112]
	472 Call List`1<Object>.AddWithResize, X0, X1
	473 Move X0, [X20+288]
	474 Compare X0, 0
	475 JumpIfEqual {575}
	476 Move X8, 0x4B3000
	477 Move X2, [X22]
	478 Move X8, [X8+3224]
	479 Move X3, [X8]
	480 Move W1, W21
	481 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	482 Move X0, [X20+432]
	483 Compare X0, 0
	484 JumpIfEqual {576}
	485 Move X22, 0x454000
	486 Move X22, [X22+464]
	487 Move W10, [X0+28]
	488 Move X8, [X0+16]
	489 Move X9, [X22]
	490 Add W10, W10, 1
	491 Move [X0+28], W10
	492 Compare X8, 0
	493 JumpIfEqual {577}
	494 NotImplemented "Instruction LDRSW not yet implemented."
	495 Move W11, [X8+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Add W9, W10, 1
	498 Add X8, X8, X10
	499 Move [X0+24], W9
	500 Move [X8+32], W21
	501 Move X8, [X9+32]
	502 Move X8, [X8+192]
	503 Move X2, [X8+112]
	504 Move W1, W21
	505 Call List`1<UInt32>.AddWithResize, X0, X1
	506 Move X0, [X20+440]
	507 Compare X0, 0
	508 JumpIfEqual {578}
	509 Move W10, [X0+28]
	510 Move X8, [X0+16]
	511 Move X9, [X22]
	512 Add W10, W10, 1
	513 Move [X0+28], W10
	514 Compare X8, 0
	515 JumpIfEqual {579}
	516 NotImplemented "Instruction LDRSW not yet implemented."
	517 Move W11, [X8+24]
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Add W9, W10, 1
	520 Add X8, X8, X10
	521 Move X20, X31
	522 Move W22, 1
	523 Move [X0+24], W9
	524 Move [X8+32], W21
	525 Move X8, [X9+32]
	526 Move X8, [X8+192]
	527 Move X2, [X8+112]
	528 Move W1, W21
	529 Call List`1<UInt32>.AddWithResize, X0, X1
	530 Move X20, X31
	531 Call 0x1C17F20
	532 Move X0, X20
	533 Call 0x1C17F18
	534 Call 0x1C17F20
	535 Call 0x1C17F20
	536 Call 0x1C17F28
	537 Call 0x1C17F20
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Call 0x1C17F28
	541 Call 0x1C17F20
	542 Call 0x1C17F28
	543 Call 0x1C17F28
	544 Call 0x1C17F28
	545 Call 0x1C17F20
	546 Call 0x1C17F28
	547 Call 0x1C17F20
	548 Call 0x1C17F28
	549 Call 0x1C17F28
	550 Call 0x1C17F20
	551 Call 0x1C17F20
	552 Call 0x1C17F28
	553 Call 0x1C17F28
	554 Call 0x1C17F20
	555 Call 0x1C17F28
	556 Call 0x1C17F20
	557 Call 0x1C17F20
	558 Call 0x1C17F28
	559 Call 0x1C17F20
	560 Call 0x1C17F28
	561 Call 0x1C17F20
	562 Call 0x1C17F20
	563 Call 0x1C17F20
	564 Call 0x1C17F20
	565 Call 0x1C17F20
	566 Call 0x1C17F20
	567 Call 0x1C17F20
	568 Call 0x1C17F20
	569 Call 0x1C17F20
	570 Call 0x1C17F20
	571 Call 0x1C17F28
	572 Call 0x1C17F20
	573 Call 0x1C17F20
	574 Call 0x1C17F20
	575 Call 0x1C17F20
	576 Call 0x1C17F20
	577 Call 0x1C17F20
	578 Call 0x1C17F20
	579 Call 0x1C17F20
	580 Move X20, X0
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Move X0, X20
	583 Call 0x3EB2AD0
	584 Move X21, [X0]
	585 Call 0x3EB2AE0
	586 Move W23, W31
	587 Move W22, W31
	588 Move X20, X21
	589 Move X21, X31
	590 Move X20, X0
	591 Move X0, X19
	592 Move X1, X31
	593 Move X2, X31
	594 Call IntPtr.op_Inequality, X0, X1
	595 Move TEMP, X0
	596 And TEMP, TEMP, 1
	597 Compare TEMP, 1
	598 JumpIfNotEqual {602}
	599 Move X0, X19
	600 Move X1, X31
	601 Call ProfilerUnsafeUtility.EndSample, X0
	602 Compare X21, 0
	603 JumpIfNotEqual {606}
	604 Move X0, X20
	605 Call 0x1D2D690
	606 Move X0, X21
	607 Call 0x1C17F18
	608 Call 0x1991590

Method: System.Boolean TryAddCharacterInternal(System.UInt32 unicode, out UnityEngine.TextCore.Text.Character character, System.Boolean shouldGetFontFeatures = False)

Disassembly:
	0x03CA2DE0 STR W9, [X0 + 0x18]
	0x03CA2DE4 STR W25, [X8 + 0x20]
	0x03CA2DE8 B 0x3CA2E00
	0x03CA2DEC LDR X8, [X9 + 0x20]
	0x03CA2DF0 MOV W1, W25
	0x03CA2DF4 LDR X8, [X8 + 0xC0]
	0x03CA2DF8 LDR X2, [X8 + 0x70]
	0x03CA2DFC BL 0x30C1698
	0x03CA2E00 LDR W8, [X22 + 0x10]
	0x03CA2E04 ADD W24, W24, 0x1
	0x03CA2E08 CMP W24, W8
	0x03CA2E0C B.LT 0x3CA2B84
	0x03CA2E10 LDR X0, [X23 + 0x1E0]
	0x03CA2E14 CBZ X0, 0x3CA2E74
	0x03CA2E18 LDR W8, [X0 + 0x18]
	0x03CA2E1C LDR X19, [X31 + 0x8]
	0x03CA2E20 CMP W8, 0x1
	0x03CA2E24 B.LT 0x3CA2E48
	0x03CA2E28 ADRP X8, 0x47E000
	0x03CA2E2C LDR X8, [X8 + 0x558]
	0x03CA2E30 LDR X1, [X8]
	0x03CA2E34 BL 0x30C3454
	0x03CA2E38 MOV X8, X0
	0x03CA2E3C MOV W0, W31
	0x03CA2E40 STR X8, [X19]
	0x03CA2E44 B 0x3CA2E54
	0x03CA2E48 MOVZ W0, 0x1
	0x03CA2E4C B 0x3CA2E54
	0x03CA2E50 MOV W0, W31
	0x03CA2E54 LDP X20, X19, [X31 + 0x70]
	0x03CA2E58 LDP X22, X21, [X31 + 0x60]
	0x03CA2E5C LDP X24, X23, [X31 + 0x50]
	0x03CA2E60 LDP X26, X25, [X31 + 0x40]
	0x03CA2E64 LDP X28, X27, [X31 + 0x30]
	0x03CA2E68 LDP X29, X30, [X31 + 0x20]
	0x03CA2E6C ADD X31, X31, 0x80
	0x03CA2E70 RET
	0x03CA2E74 BL 0x1C16F20
	0x03CA2E78 STR X30, [X31 - 0x40]!
	0x03CA2E7C STP X24, X23, [X31 + 0x10]
	0x03CA2E80 STP X22, X21, [X31 + 0x20]
	0x03CA2E84 STP X20, X19, [X31 + 0x30]
	0x03CA2E88 ADRP X21, 0x745000
	0x03CA2E8C LDRB W8, [X21 + 0x2E7]
	0x03CA2E90 MOV X19, X1
	0x03CA2E94 MOV X20, X0
	0x03CA2E98 TBNZ X8, 0x0, 0x3CA2EB0
	0x03CA2E9C ADRP X0, 0x4BF000
	0x03CA2EA0 LDR X0, [X0 + 0x248]
	0x03CA2EA4 BL 0x1C16CF4
	0x03CA2EA8 MOVZ W8, 0x1
	0x03CA2EAC STRB W8, [X21 + 0x2E7]
	0x03CA2EB0 LDR X8, [X20 + 0x130]
	0x03CA2EB4 CBZ X8, 0x3CA2F20
	0x03CA2EB8 CBZ X19, 0x3CA2F38
	0x03CA2EBC LDR W8, [X19 + 0x10]
	0x03CA2EC0 CMP W8, 0x0
	0x03CA2EC4 CSET W22, GT
	0x03CA2EC8 CMP W8, 0x1
	0x03CA2ECC B.LT 0x3CA2F1C
	0x03CA2ED0 ADRP X24, 0x4BF000
	0x03CA2ED4 LDR X24, [X24 + 0x248]
	0x03CA2ED8 MOVZ W23, 0x1
	0x03CA2EDC LDR X21, [X20 + 0x130]
	0x03CA2EE0 SUB W1, W23, 0x1
	0x03CA2EE4 MOV X0, X19
	0x03CA2EE8 MOV X2, X31
	0x03CA2EEC BL 0x3222A1C
	0x03CA2EF0 CBZ X21, 0x3CA2F38
	0x03CA2EF4 LDR X2, [X24]
	0x03CA2EF8 AND W1, W0, 0xFFFF
	0x03CA2EFC MOV X0, X21
	0x03CA2F00 BL 0x2B0F250
	0x03CA2F04 TBZ X0, 0x0, 0x3CA2F1C
	0x03CA2F08 LDR W8, [X19 + 0x10]
	0x03CA2F0C CMP W23, W8
	0x03CA2F10 CSET W22, LT
	0x03CA2F14 ADD W23, W23, 0x1
	0x03CA2F18 B.LT 0x3CA2EDC
	0x03CA2F1C EOR W8, W22, 0x1
	0x03CA2F20 LDP X20, X19, [X31 + 0x30]
	0x03CA2F24 LDP X22, X21, [X31 + 0x20]
	0x03CA2F28 LDP X24, X23, [X31 + 0x10]
	0x03CA2F2C AND W0, W8, 0x1
	0x03CA2F30 LDR X30, [X31], #0x40
	0x03CA2F34 RET
	0x03CA2F38 BL 0x1C16F20
	0x03CA2F3C SUB X31, X31, 0x40
	0x03CA2F40 STP X30, X23, [X31 + 0x10]
	0x03CA2F44 STP X22, X21, [X31 + 0x20]
	0x03CA2F48 STP X20, X19, [X31 + 0x30]
	0x03CA2F4C ADRP X20, 0x745000
	0x03CA2F50 LDRB W8, [X20 + 0x2E8]
	0x03CA2F54 MOV X19, X0
	0x03CA2F58 TBNZ X8, 0x0, 0x3CA2F94
	0x03CA2F5C ADRP X0, 0x453000
	0x03CA2F60 LDR X0, [X0 + 0x170]
	0x03CA2F64 BL 0x1C16CF4
	0x03CA2F68 ADRP X0, 0x4BF000
	0x03CA2F6C LDR X0, [X0 + 0x2D0]
	0x03CA2F70 BL 0x1C16CF4
	0x03CA2F74 ADRP X0, 0x4BF000
	0x03CA2F78 LDR X0, [X0 + 0x2D8]
	0x03CA2F7C BL 0x1C16CF4
	0x03CA2F80 ADRP X0, 0x453000
	0x03CA2F84 LDR X0, [X0 + 0x278]
	0x03CA2F88 BL 0x1C16CF4
	0x03CA2F8C MOVZ W8, 0x1
	0x03CA2F90 STRB W8, [X20 + 0x2E8]
	0x03CA2F94 STRH W31, [X31 + 0xC]
	0x03CA2F98 CBZ X19, 0x3CA302C
	0x03CA2F9C LDR X0, [X19 + 0x128]
	0x03CA2FA0 CBZ X0, 0x3CA302C
	0x03CA2FA4 ADRP X8, 0x453000
	0x03CA2FA8 LDR X8, [X8 + 0x278]
	0x03CA2FAC ADRP X22, 0x4BF000
	0x03CA2FB0 ADRP X23, 0x453000
	0x03CA2FB4 MOV W20, W31
	0x03CA2FB8 LDR X8, [X8]
	0x03CA2FBC LDR X8, [X8 + 0xB8]
	0x03CA2FC0 LDR X21, [X8]
	0x03CA2FC4 LDR X22, [X22 + 0x2D8]
	0x03CA2FC8 LDR X23, [X23 + 0x170]
	0x03CA2FCC LDR W8, [X0 + 0x18]
	0x03CA2FD0 CMP W20, W8
	0x03CA2FD4 B.GE 0x3CA3030
	0x03CA2FD8 LDR X2, [X22]
	0x03CA2FDC MOV W1, W20
	0x03CA2FE0 BL 0x301BCCC
	0x03CA2FE4 CBZ X0, 0x3CA302C
	0x03CA2FE8 LDR W8, [X0 + 0x14]
	0x03CA2FEC LDR X0, [X23]
	0x03CA2FF0 STRH W8, [X31 + 0xC]
	0x03CA2FF4 LDR W8, [X0 + 0xE0]
	0x03CA2FF8 CBNZ W8, 0x3CA3000
	0x03CA2FFC BL 0x1C16DFC
	0x03CA3000 ADD X0, X31, 0xC
	0x03CA3004 MOV X1, X31
	0x03CA3008 BL 0x330A76C
	0x03CA300C MOV X1, X0
	0x03CA3010 MOV X0, X21
	0x03CA3014 MOV X2, X31
	0x03CA3018 BL 0x321B938
	0x03CA301C MOV X21, X0
	0x03CA3020 LDR X0, [X19 + 0x128]
	0x03CA3024 ADD W20, W20, 0x1
	0x03CA3028 CBNZ X0, 0x3CA2FCC
	0x03CA302C BL 0x1C16F20
	0x03CA3030 MOV X0, X21
	0x03CA3034 LDP X20, X19, [X31 + 0x30]
	0x03CA3038 LDP X22, X21, [X31 + 0x20]
	0x03CA303C LDP X30, X23, [X31 + 0x10]
	0x03CA3040 ADD X31, X31, 0x40
	0x03CA3044 RET
	0x03CA3048 STP X30, X23, [X31 - 0x30]!
	0x03CA304C STP X22, X21, [X31 + 0x10]
	0x03CA3050 STP X20, X19, [X31 + 0x20]
	0x03CA3054 ADRP X20, 0x744000
	0x03CA3058 LDRB W8, [X20 + 0x2E9]
	0x03CA305C MOV X19, X0
	0x03CA3060 TBNZ X8, 0x0, 0x3CA3090
	0x03CA3064 ADRP X0, 0x451000
	0x03CA3068 LDR X0, [X0 + 0xE58]
	0x03CA306C BL 0x1C16CF4
	0x03CA3070 ADRP X0, 0x4BE000
	0x03CA3074 LDR X0, [X0 + 0x2D0]
	0x03CA3078 BL 0x1C16CF4
	0x03CA307C ADRP X0, 0x4BE000
	0x03CA3080 LDR X0, [X0 + 0x2D8]
	0x03CA3084 BL 0x1C16CF4
	0x03CA3088 MOVZ W8, 0x1
	0x03CA308C STRB W8, [X20 + 0x2E9]
	0x03CA3090 CBZ X19, 0x3CA3110
	0x03CA3094 LDR X8, [X19 + 0x128]
	0x03CA3098 CBZ X8, 0x3CA3110
	0x03CA309C ADRP X9, 0x451000
	0x03CA30A0 LDR X9, [X9 + 0xE58]
	0x03CA30A4 LDR W1, [X8 + 0x18]
	0x03CA30A8 LDR X0, [X9]
	0x03CA30AC BL 0x1C16D6C
	0x03CA30B0 LDR X8, [X19 + 0x128]
	0x03CA30B4 CBZ X8, 0x3CA3110
	0x03CA30B8 ADRP X22, 0x4BE000
	0x03CA30BC LDR X22, [X22 + 0x2D8]
	0x03CA30C0 MOV X20, X0
	0x03CA30C4 MOV X21, X31
	0x03CA30C8 ADD X23, X0, 0x20
	0x03CA30CC LDRSW X9, [X8 + 0x18]
	0x03CA30D0 CMP X21, X9
	0x03CA30D4 B.GE 0x3CA3114
	0x03CA30D8 LDR X2, [X22]
	0x03CA30DC MOV X0, X8
	0x03CA30E0 MOV W1, W21
	0x03CA30E4 BL 0x301BCCC
	0x03CA30E8 CBZ X0, 0x3CA3110
	0x03CA30EC CBZ X20, 0x3CA3110
	0x03CA30F0 LDR W8, [X20 + 0x18]
	0x03CA30F4 CMP X21, X8
	0x03CA30F8 B.CS 0x3CA3128
	0x03CA30FC LDR W8, [X0 + 0x14]
	0x03CA3100 STR W8, [X23, X21, LSL #2]
	0x03CA3104 LDR X8, [X19 + 0x128]
	0x03CA3108 ADD X21, X21, 0x1
	0x03CA310C CBNZ X8, 0x3CA30CC
	0x03CA3110 BL 0x1C16F20
	0x03CA3114 MOV X0, X20
	0x03CA3118 LDP X20, X19, [X31 + 0x20]
	0x03CA311C LDP X22, X21, [X31 + 0x10]
	0x03CA3120 LDP X30, X23, [X31], #0x30
	0x03CA3124 RET
	0x03CA3128 BL 0x1C16F28
	0x03CA312C STP X30, X21, [X31 - 0x20]!
	0x03CA3130 STP X20, X19, [X31 + 0x10]
	0x03CA3134 ADRP X21, 0x744000
	0x03CA3138 LDRB W8, [X21 + 0x2EA]
	0x03CA313C MOV W19, W1
	0x03CA3140 MOV X20, X0
	0x03CA3144 TBNZ X8, 0x0, 0x3CA3174
	0x03CA3148 ADRP X0, 0x4BE000
	0x03CA314C LDR X0, [X0 + 0x248]
	0x03CA3150 BL 0x1C16CF4
	0x03CA3154 ADRP X0, 0x4BE000
	0x03CA3158 LDR X0, [X0 + 0x250]
	0x03CA315C BL 0x1C16CF4
	0x03CA3160 ADRP X0, 0x4B5000
	0x03CA3164 LDR X0, [X0 + 0xBC0]
	0x03CA3168 BL 0x1C16CF4
	0x03CA316C MOVZ W8, 0x1
	0x03CA3170 STRB W8, [X21 + 0x2EA]
	0x03CA3174 LDR X0, [X20 + 0x130]
	0x03CA3178 CBZ X0, 0x3CA3204
	0x03CA317C ADRP X8, 0x4BE000
	0x03CA3180 LDR X8, [X8 + 0x248]
	0x03CA3184 MOV W1, W19
	0x03CA3188 LDR X2, [X8]
	0x03CA318C BL 0x2B0F250
	0x03CA3190 TBZ X0, 0x0, 0x3CA31BC
	0x03CA3194 LDR X0, [X20 + 0x130]
	0x03CA3198 CBZ X0, 0x3CA3204
	0x03CA319C ADRP X8, 0x4BE000
	0x03CA31A0 LDR X8, [X8 + 0x250]
	0x03CA31A4 MOV W1, W19
	0x03CA31A8 LDR X2, [X8]
	0x03CA31AC BL 0x2B0EFBC
	0x03CA31B0 CBZ X0, 0x3CA3204
	0x03CA31B4 LDR W0, [X0 + 0x28]
	0x03CA31B8 B 0x3CA31CC
	0x03CA31BC MOV X0, X20
	0x03CA31C0 BL 0x3CA0DD0
	0x03CA31C4 CBZ W0, 0x3CA31D8
	0x03CA31C8 MOV W0, W31
	0x03CA31CC LDP X20, X19, [X31 + 0x10]
	0x03CA31D0 LDP X30, X21, [X31], #0x20
	0x03CA31D4 RET
	0x03CA31D8 ADRP X8, 0x4B5000
	0x03CA31DC LDR X8, [X8 + 0xBC0]
	0x03CA31E0 LDR X0, [X8]
	0x03CA31E4 LDR W8, [X0 + 0xE0]
	0x03CA31E8 CBNZ W8, 0x3CA31F0
	0x03CA31EC BL 0x1C16DFC
	0x03CA31F0 MOV W0, W19
	0x03CA31F4 LDP X20, X19, [X31 + 0x10]
	0x03CA31F8 MOV X1, X31
	0x03CA31FC LDP X30, X21, [X31], #0x20
	0x03CA3200 B 0x3C9CBD8
	0x03CA3204 BL 0x1C16F20
	0x03CA3208 STP X30, X21, [X31 - 0x20]!
	0x03CA320C STP X20, X19, [X31 + 0x10]
	0x03CA3210 ADRP X20, 0x744000
	0x03CA3214 LDRB W8, [X20 + 0x2EB]
	0x03CA3218 MOV X19, X0
	0x03CA321C TBNZ X8, 0x0, 0x3CA324C
	0x03CA3220 ADRP X0, 0x4BE000
	0x03CA3224 LDR X0, [X0 + 0x258]
	0x03CA3228 BL 0x1C16CF4
	0x03CA322C ADRP X0, 0x452000
	0x03CA3230 LDR X0, [X0 + 0x9D8]
	0x03CA3234 BL 0x1C16CF4
	0x03CA3238 ADRP X0, 0x4BE000
	0x03CA323C LDR X0, [X0 + 0x4C8]
	0x03CA3240 BL 0x1C16CF4
	0x03CA3244 MOVZ W8, 0x1
	0x03CA3248 STRB W8, [X20 + 0x2EB]
	0x03CA324C CBZ X19, 0x3CA3334
	0x03CA3250 ADRP X21, 0x4BE000
	0x03CA3254 LDR W20, [X19 + 0x20]
	0x03CA3258 LDR X21, [X21 + 0x258]
	0x03CA325C CBNZ W20, 0x3CA3274
	0x03CA3260 MOV X0, X19
	0x03CA3264 MOV X1, X31
	0x03CA3268 BL 0x3C385F8
	0x03CA326C MOV W20, W0
	0x03CA3270 STR W0, [X19 + 0x20]
	0x03CA3274 LDR X0, [X21]
	0x03CA3278 LDR W8, [X0 + 0xE0]
	0x03CA327C CBNZ W8, 0x3CA3288
	0x03CA3280 BL 0x1C16DFC
	0x03CA3284 LDR X0, [X21]
	0x03CA3288 LDR X8, [X0 + 0xB8]
	0x03CA328C LDR X0, [X8 + 0x60]
	0x03CA3290 CBZ X0, 0x3CA3334
	0x03CA3294 ADRP X8, 0x452000
	0x03CA3298 LDR X8, [X8 + 0x9D8]
	0x03CA329C MOV W1, W20
	0x03CA32A0 LDR X2, [X8]
	0x03CA32A4 BL 0x2DAB03C
	0x03CA32A8 TBZ X0, 0x0, 0x3CA330C
	0x03CA32AC LDR X0, [X21]
	0x03CA32B0 LDR W8, [X0 + 0xE0]
	0x03CA32B4 CBNZ W8, 0x3CA32C0
	0x03CA32B8 BL 0x1C16DFC
	0x03CA32BC LDR X0, [X21]
	0x03CA32C0 LDR X8, [X0 + 0xB8]
	0x03CA32C4 LDR X0, [X8 + 0x58]
	0x03CA32C8 CBZ X0, 0x3CA3334
	0x03CA32CC ADRP X9, 0x4BE000
	0x03CA32D0 LDR X9, [X9 + 0x4C8]
	0x03CA32D4 LDR W10, [X0 + 0x1C]
	0x03CA32D8 LDR X8, [X0 + 0x10]
	0x03CA32DC LDR X9, [X9]
	0x03CA32E0 ADD W10, W10, 0x1
	0x03CA32E4 STR W10, [X0 + 0x1C]
	0x03CA32E8 CBZ X8, 0x3CA3334
	0x03CA32EC LDRSW X10, [X0 + 0x18]
	0x03CA32F0 LDR W11, [X8 + 0x18]
	0x03CA32F4 CMP W10, W11
	0x03CA32F8 B.CS 0x3CA3318
	0x03CA32FC ADD W9, W10, 0x1
	0x03CA3300 ADD X8, X8, X10, 0x3, LSL
	0x03CA3304 STR W9, [X0 + 0x18]
	0x03CA3308 STR X19, [X8 + 0x20]
	0x03CA330C LDP X20, X19, [X31 + 0x10]
	0x03CA3310 LDP X30, X21, [X31], #0x20
	0x03CA3314 RET
	0x03CA3318 LDR X8, [X9 + 0x20]
	0x03CA331C MOV X1, X19
	0x03CA3320 LDP X20, X19, [X31 + 0x10]
	0x03CA3324 LDR X8, [X8 + 0xC0]
	0x03CA3328 LDR X2, [X8 + 0x70]
	0x03CA332C LDP X30, X21, [X31], #0x20
	0x03CA3330 B 0x301BF90
	0x03CA3334 BL 0x1C16F20
	0x03CA3338 STP X30, X19, [X31 - 0x10]!
	0x03CA333C MOV X19, X0
	0x03CA3340 LDR W0, [X0 + 0x20]
	0x03CA3344 CBNZ W0, 0x3CA3358
	0x03CA3348 MOV X0, X19
	0x03CA334C MOV X1, X31
	0x03CA3350 BL 0x3C385F8
	0x03CA3354 STR W0, [X19 + 0x20]
	0x03CA3358 LDP X30, X19, [X31], #0x10
	0x03CA335C RET
	0x03CA3360 STP X30, X23, [X31 - 0x30]!
	0x03CA3364 STP X22, X21, [X31 + 0x10]
	0x03CA3368 STP X20, X19, [X31 + 0x20]
	0x03CA336C ADRP X19, 0x744000
	0x03CA3370 ADRP X20, 0x4BE000
	0x03CA3374 LDRB W8, [X19 + 0x2EC]
	0x03CA3378 LDR X20, [X20 + 0x258]
	0x03CA337C TBNZ X8, 0x0, 0x3CA33C4
	0x03CA3380 ADRP X0, 0x4BE000
	0x03CA3384 LDR X0, [X0 + 0x258]
	0x03CA3388 BL 0x1C16CF4
	0x03CA338C ADRP X0, 0x457000
	0x03CA3390 LDR X0, [X0 + 0x678]
	0x03CA3394 BL 0x1C16CF4
	0x03CA3398 ADRP X0, 0x4BE000
	0x03CA339C LDR X0, [X0 + 0x4D0]
	0x03CA33A0 BL 0x1C16CF4
	0x03CA33A4 ADRP X0, 0x4BE000
	0x03CA33A8 LDR X0, [X0 + 0x4B0]
	0x03CA33AC BL 0x1C16CF4
	0x03CA33B0 ADRP X0, 0x4BE000
	0x03CA33B4 LDR X0, [X0 + 0x4B8]
	0x03CA33B8 BL 0x1C16CF4
	0x03CA33BC MOVZ W8, 0x1
	0x03CA33C0 STRB W8, [X19 + 0x2EC]
	0x03CA33C4 LDR X0, [X20]
	0x03CA33C8 LDR W8, [X0 + 0xE0]
	0x03CA33CC CBNZ W8, 0x3CA33D8
	0x03CA33D0 BL 0x1C16DFC
	0x03CA33D4 LDR X0, [X20]
	0x03CA33D8 LDR X8, [X0 + 0xB8]
	0x03CA33DC LDR X8, [X8 + 0x58]
	0x03CA33E0 CBZ X8, 0x3CA34C8
	0x03CA33E4 LDR W21, [X8 + 0x18]
	0x03CA33E8 SUBS W22, W21, 0x1
	0x03CA33EC B.LT 0x3CA34B8
	0x03CA33F0 ADRP X23, 0x4BE000
	0x03CA33F4 LDR X23, [X23 + 0x4B8]
	0x03CA33F8 MOV W19, W31
	0x03CA33FC LDR W8, [X0 + 0xE0]
	0x03CA3400 CBNZ W8, 0x3CA340C
	0x03CA3404 BL 0x1C16DFC
	0x03CA3408 LDR X0, [X20]
	0x03CA340C LDR X8, [X0 + 0xB8]
	0x03CA3410 LDR X0, [X8 + 0x58]
	0x03CA3414 CBZ X0, 0x3CA34C8
	0x03CA3418 LDR X2, [X23]
	0x03CA341C MOV W1, W19
	0x03CA3420 BL 0x301BCCC
	0x03CA3424 CBZ X0, 0x3CA34C8
	0x03CA3428 BL 0x3CA34CC
	0x03CA342C CMP W22, W19
	0x03CA3430 B.EQ 0x3CA3440
	0x03CA3434 LDR X0, [X20]
	0x03CA3438 ADD W19, W19, 0x1
	0x03CA343C B 0x3CA33FC
	0x03CA3440 CMP W21, 0x1
	0x03CA3444 B.LT 0x3CA34B8
	0x03CA3448 LDR X0, [X20]
	0x03CA344C LDR W8, [X0 + 0xE0]
	0x03CA3450 CBNZ W8, 0x3CA345C
	0x03CA3454 BL 0x1C16DFC
	0x03CA3458 LDR X0, [X20]
	0x03CA345C LDR X8, [X0 + 0xB8]
	0x03CA3460 LDR X9, [X8 + 0x58]
	0x03CA3464 CBZ X9, 0x3CA34C8
	0x03CA3468 LDP W2, W10, [X9 + 0x18]
	0x03CA346C ADD W10, W10, 0x1
	0x03CA3470 CMP W2, 0x1
	0x03CA3474 STP W31, W10, [X9 + 0x18]
	0x03CA3478 B.LT 0x3CA3494
	0x03CA347C LDR X0, [X9 + 0x10]
	0x03CA3480 MOV W1, W31
	0x03CA3484 MOV X3, X31
	0x03CA3488 BL 0x339FA34
	0x03CA348C LDR X8, [X20]
	0x03CA3490 LDR X8, [X8 + 0xB8]
	0x03CA3494 LDR X0, [X8 + 0x60]
	0x03CA3498 CBZ X0, 0x3CA34C8
	0x03CA349C ADRP X8, 0x457000
	0x03CA34A0 LDR X8, [X8 + 0x678]
	0x03CA34A4 LDP X20, X19, [X31 + 0x20]
	0x03CA34A8 LDP X22, X21, [X31 + 0x10]
	0x03CA34AC LDR X1, [X8]
	0x03CA34B0 LDP X30, X23, [X31], #0x30
	0x03CA34B4 B 0x2DAA53C
	0x03CA34B8 LDP X20, X19, [X31 + 0x20]
	0x03CA34BC LDP X22, X21, [X31 + 0x10]
	0x03CA34C0 LDP X30, X23, [X31], #0x30
	0x03CA34C4 RET
	0x03CA34C8 BL 0x1C16F20
	0x03CA34CC STR X30, [X31 - 0x20]!
	0x03CA34D0 STP X20, X19, [X31 + 0x10]
	0x03CA34D4 ADRP X20, 0x744000
	0x03CA34D8 LDRB W8, [X20 + 0x2F7]
	0x03CA34DC MOV X19, X0
	0x03CA34E0 TBNZ X8, 0x0, 0x3CA34F8
	0x03CA34E4 ADRP X0, 0x4A7000
	0x03CA34E8 LDR X0, [X0 + 0xB50]
	0x03CA34EC BL 0x1C16CF4
	0x03CA34F0 MOVZ W8, 0x1
	0x03CA34F4 STRB W8, [X20 + 0x2F7]
	0x03CA34F8 MOV X0, X19
	0x03CA34FC BL 0x3CA6564
	0x03CA3500 LDR X8, [X19 + 0x1B8]
	0x03CA3504 CBZ X8, 0x3CA3520
	0x03CA3508 LDR W9, [X8 + 0x1C]
	0x03CA350C LDP X20, X19, [X31 + 0x10]
	0x03CA3510 ADD W9, W9, 0x1
	0x03CA3514 STP W31, W9, [X8 + 0x18]
	0x03CA3518 LDR X30, [X31], #0x20
	0x03CA351C RET
	0x03CA3520 BL 0x1C16F20
	0x03CA3524 STP X30, X21, [X31 - 0x20]!
	0x03CA3528 STP X20, X19, [X31 + 0x10]
	0x03CA352C ADRP X20, 0x744000
	0x03CA3530 LDRB W8, [X20 + 0x2ED]
	0x03CA3534 MOV X19, X0
	0x03CA3538 TBNZ X8, 0x0, 0x3CA3568
	0x03CA353C ADRP X0, 0x4BE000
	0x03CA3540 LDR X0, [X0 + 0x258]
	0x03CA3544 BL 0x1C16CF4
	0x03CA3548 ADRP X0, 0x452000
	0x03CA354C LDR X0, [X0 + 0x9D8]
	0x03CA3550 BL 0x1C16CF4
	0x03CA3554 ADRP X0, 0x4BE000
	0x03CA3558 LDR X0, [X0 + 0x4D8]
	0x03CA355C BL 0x1C16CF4
	0x03CA3560 MOVZ W8, 0x1
	0x03CA3564 STRB W8, [X20 + 0x2ED]
	0x03CA3568 CBZ X19, 0x3CA3648
	0x03CA356C ADRP X21, 0x4BE000
	0x03CA3570 LDR X21, [X21 + 0x258]
	0x03CA3574 MOV X0, X19
	0x03CA3578 MOV X1, X31
	0x03CA357C BL 0x3C385F8
	0x03CA3580 LDR X8, [X21]
	0x03CA3584 MOV W20, W0
	0x03CA3588 LDR W9, [X8 + 0xE0]
	0x03CA358C CBNZ W9, 0x3CA359C
	0x03CA3590 MOV X0, X8
	0x03CA3594 BL 0x1C16DFC
	0x03CA3598 LDR X8, [X21]
	0x03CA359C LDR X8, [X8 + 0xB8]
	0x03CA35A0 LDR X0, [X8 + 0x70]
	0x03CA35A4 CBZ X0, 0x3CA3648
	0x03CA35A8 ADRP X8, 0x452000
	0x03CA35AC LDR X8, [X8 + 0x9D8]
	0x03CA35B0 MOV W1, W20
	0x03CA35B4 LDR X2, [X8]
	0x03CA35B8 BL 0x2DAB03C
	0x03CA35BC TBZ X0, 0x0, 0x3CA3620
	0x03CA35C0 LDR X0, [X21]
	0x03CA35C4 LDR W8, [X0 + 0xE0]
	0x03CA35C8 CBNZ W8, 0x3CA35D4
	0x03CA35CC BL 0x1C16DFC
	0x03CA35D0 LDR X0, [X21]
	0x03CA35D4 LDR X8, [X0 + 0xB8]
	0x03CA35D8 LDR X0, [X8 + 0x68]
	0x03CA35DC CBZ X0, 0x3CA3648
	0x03CA35E0 ADRP X9, 0x4BE000
	0x03CA35E4 LDR X9, [X9 + 0x4D8]
	0x03CA35E8 LDR W10, [X0 + 0x1C]
	0x03CA35EC LDR X8, [X0 + 0x10]
	0x03CA35F0 LDR X9, [X9]
	0x03CA35F4 ADD W10, W10, 0x1
	0x03CA35F8 STR W10, [X0 + 0x1C]
	0x03CA35FC CBZ X8, 0x3CA3648
	0x03CA3600 LDRSW X10, [X0 + 0x18]
	0x03CA3604 LDR W11, [X8 + 0x18]
	0x03CA3608 CMP W10, W11
	0x03CA360C B.CS 0x3CA362C
	0x03CA3610 ADD W9, W10, 0x1
	0x03CA3614 ADD X8, X8, X10, 0x3, LSL
	0x03CA3618 STR W9, [X0 + 0x18]
	0x03CA361C STR X19, [X8 + 0x20]
	0x03CA3620 LDP X20, X19, [X31 + 0x10]
	0x03CA3624 LDP X30, X21, [X31], #0x20
	0x03CA3628 RET
	0x03CA362C LDR X8, [X9 + 0x20]
	0x03CA3630 MOV X1, X19
	0x03CA3634 LDP X20, X19, [X31 + 0x10]
	0x03CA3638 LDR X8, [X8 + 0xC0]
	0x03CA363C LDR X2, [X8 + 0x70]
	0x03CA3640 LDP X30, X21, [X31], #0x20
	0x03CA3644 B 0x301BF90
	0x03CA3648 BL 0x1C16F20
	0x03CA364C STP X30, X23, [X31 - 0x30]!
	0x03CA3650 STP X22, X21, [X31 + 0x10]
	0x03CA3654 STP X20, X19, [X31 + 0x20]
	0x03CA3658 ADRP X19, 0x744000
	0x03CA365C ADRP X20, 0x4BE000
	0x03CA3660 LDRB W8, [X19 + 0x2EE]
	0x03CA3664 LDR X20, [X20 + 0x258]
	0x03CA3668 TBNZ X8, 0x0, 0x3CA36B0
	0x03CA366C ADRP X0, 0x4BE000
	0x03CA3670 LDR X0, [X0 + 0x258]
	0x03CA3674 BL 0x1C16CF4
	0x03CA3678 ADRP X0, 0x457000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x746000
	015 Move W8, [X23+755]
	016 Move W20, W3
	017 Move X22, X2
	018 Move W21, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {77}
	024 Move X0, 0x4C0000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move X0, 0x452000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x4C0000
	031 Move X0, [X0+688]
	032 Call 0x1C17CF4
	033 Move X0, 0x4B7000
	034 Move X0, [X0+3224]
	035 Call 0x1C17CF4
	036 Move X0, 0x4B7000
	037 Move X0, [X0+3240]
	038 Call 0x1C17CF4
	039 Move X0, 0x4B7000
	040 Move X0, [X0+3216]
	041 Call 0x1C17CF4
	042 Move X0, 0x4C0000
	043 Move X0, [X0+600]
	044 Call 0x1C17CF4
	045 Move X0, 0x4B7000
	046 Move X0, [X0+3008]
	047 Call 0x1C17CF4
	048 Move X0, 0x4AD000
	049 Move X0, [X0+2088]
	050 Call 0x1C17CF4
	051 Move X0, 0x4B7000
	052 Move X0, [X0+3584]
	053 Call 0x1C17CF4
	054 Move X0, 0x4B7000
	055 Move X0, [X0+3088]
	056 Call 0x1C17CF4
	057 Move X0, 0x458000
	058 Move X0, [X0+464]
	059 Call 0x1C17CF4
	060 Move X0, 0x4C0000
	061 Move X0, [X0+1216]
	062 Call 0x1C17CF4
	063 Move X0, 0x452000
	064 Move X0, [X0+2760]
	065 Call 0x1C17CF4
	066 Move X0, 0x4B7000
	067 Move X0, [X0+3592]
	068 Call 0x1C17CF4
	069 Move X0, 0x4B7000
	070 Move X0, [X0+3600]
	071 Call 0x1C17CF4
	072 Move X0, 0x4B7000
	073 Move X0, [X0+3608]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X23+755], W8
	077 Move [X31+8], X31
	078 Move [X22], X31
	079 Move X0, [X19+488]
	080 Compare X0, 0
	081 JumpIfEqual {603}
	082 Move X8, 0x4B7000
	083 Move X8, [X8+3584]
	084 Move W1, W21
	085 Move X2, [X8]
	086 Call HashSet`1<UInt32>.Contains, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {95}
	091 Move X0, X19
	092 Call FontAsset.LoadFontFace, X0
	093 Compare W0, 0
	094 JumpIfEqual {111}
	095 Move W24, W31
	096 Move W0, W24
	097 Move X20, [X31+96]
	098 Move X19, [X31+104]
	099 Move X22, [X31+80]
	100 Move X21, [X31+88]
	101 Move X24, [X31+64]
	102 Move X23, [X31+72]
	103 Move X26, [X31+48]
	104 Move X25, [X31+56]
	105 Move X28, [X31+32]
	106 Move X27, [X31+40]
	107 Move X29, [X31+16]
	108 Move X30, [X31+24]
	109 Add X31, X31, 112
	110 Return X0
	111 Move X29, 0x4B7000
	112 Move X29, [X29+3008]
	113 Move X0, [X29]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move W0, W21
	119 Move X1, X31
	120 Call FontEngine.GetGlyphIndex, X0
	121 Move W23, W0
	122 Compare W0, 0
	123 JumpIfNotEqual {145}
	124 Move W8, 0x2011
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, [X29]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move W0, 32
	134 Move X0, [X29]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move W0, 45
	140 Move X1, X31
	141 Call FontEngine.GetGlyphIndex, X0
	142 Move W23, W0
	143 Compare W0, 0
	144 JumpIfEqual {453}
	145 Move X0, [X19+288]
	146 Compare X0, 0
	147 JumpIfEqual {603}
	148 Move X8, 0x4B7000
	149 Move X8, [X8+3240]
	150 Move W1, W23
	151 Move X2, [X8]
	152 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {196}
	157 Move X0, [X19+288]
	158 Compare X0, 0
	159 JumpIfEqual {603}
	160 Move X8, 0x4B7000
	161 Move X8, [X8+3216]
	162 Move W1, W23
	163 Move X2, [X8]
	164 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	165 Move X8, 0x4BF000
	166 Move X8, [X8+992]
	167 Move X23, X0
	168 Move X8, [X8]
	169 Move X0, X8
	170 Call 0x1C17F10
	171 Move W1, W21
	172 Move X2, X19
	173 Move X3, X23
	174 Move X20, X0
	175 Call Character..ctor, X0, X1, X2, X3
	176 Move [X22], X20
	177 Move X0, [X19+296]
	178 Compare X0, 0
	179 JumpIfEqual {603}
	180 Move X9, 0x4BF000
	181 Move X9, [X9+1216]
	182 Move W10, [X0+28]
	183 Move X8, [X0+16]
	184 Move X9, [X9]
	185 Add W10, W10, 1
	186 Move [X0+28], W10
	187 Compare X8, 0
	188 JumpIfEqual {603}
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Move W11, [X8+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add W9, W10, 1
	193 Add X8, X8, X10
	194 Move [X0+24], W9
	195 Move [X8+32], X20
	196 Move [X31+8], X31
	197 Move X8, [X19+320]
	198 Compare X8, 0
	199 JumpIfEqual {603}
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Move W10, [X8+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X8, X8, X9
	204 Move X0, [X8+32]
	205 Compare X0, 0
	206 JumpIfEqual {603}
	207 Move X8, [X0]
	208 Move X9, [X8+488]
	209 Move X1, [X8+496]
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {384}
	215 Move X8, [X19+320]
	216 Compare X8, 0
	217 JumpIfEqual {603}
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Move W10, [X8+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add X8, X8, X9
	222 Move X0, [X8+32]
	223 Compare X0, 0
	224 JumpIfEqual {603}
	225 Move X8, [X0]
	226 Move X9, [X8+392]
	227 Move X1, [X8+400]
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move W8, [X19+336]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X8, [X19+320]
	232 Compare X8, 0
	233 JumpIfEqual {603}
	234 NotImplemented "Instruction LDRSW not yet implemented."
	235 Move W10, [X8+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Add X8, X8, X9
	238 Move X0, [X8+32]
	239 Compare X0, 0
	240 JumpIfEqual {603}
	241 Move X8, [X0]
	242 Move X9, [X8+424]
	243 Move X1, [X8+432]
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move W8, [X19+340]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X8, [X19+320]
	248 Compare X8, 0
	249 JumpIfEqual {603}
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Move W10, [X8+24]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Add X8, X8, X9
	254 Move X0, [X8+32]
	255 Compare X0, 0
	256 JumpIfEqual {603}
	257 Move W2, [X19+340]
	258 Move W1, [X19+336]
	259 Move X3, X31
	260 Call Texture2D.Reinitialize, X0, X1, X2
	261 Move X8, [X19+320]
	262 Compare X8, 0
	263 JumpIfEqual {603}
	264 NotImplemented "Instruction LDRSW not yet implemented."
	265 Move W10, [X8+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move X0, [X29]
	268 Add X8, X8, X9
	269 Move X24, [X8+32]
	270 Move W9, [X0+224]
	271 Compare W9, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Move X0, X24
	275 Move X1, X31
	276 Call FontEngine.ResetAtlasTexture, X0
	277 Move X0, [X29]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move W0, W31
	283 Move X1, X31
	284 Call FontEngine.SetTextureUploadMode, X0
	285 Move X8, [X19+320]
	286 Compare X8, 0
	287 JumpIfEqual {603}
	288 NotImplemented "Instruction LDRSW not yet implemented."
	289 Move W10, [X8+24]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Add X8, X8, X9
	292 Move W1, [X19+344]
	293 Move X4, [X19+352]
	294 Move X3, [X19+360]
	295 Move W5, [X19+348]
	296 Move X6, [X8+32]
	297 Add X7, X31, 8
	298 Move W0, W23
	299 Move W2, W31
	300 Move [X31], X31
	301 Call FontEngine.TryAddGlyphToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	302 Move TEMP, X0
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfEqual {343}
	306 Move W8, [X19+332]
	307 Compare W8, 0
	308 JumpIfEqual {95}
	309 Move X0, X19
	310 Call FontAsset.SetupNewAtlasTexture, X0
	311 Move X8, [X19+320]
	312 Compare X8, 0
	313 JumpIfEqual {603}
	314 NotImplemented "Instruction LDRSW not yet implemented."
	315 Move W10, [X8+24]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, [X29]
	318 Add X8, X8, X9
	319 Move W24, [X19+344]
	320 Move X25, [X19+352]
	321 Move X27, [X19+360]
	322 Move W26, [X19+348]
	323 Move W9, [X0+224]
	324 Move X28, [X8+32]
	325 Compare W9, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Add X7, X31, 8
	329 Move W0, W23
	330 Move W1, W24
	331 Move W2, W31
	332 Move X3, X27
	333 Move X4, X25
	334 Move W5, W26
	335 Move X6, X28
	336 Move [X31], X31
	337 Call FontEngine.TryAddGlyphToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	338 Move W24, W31
	339 Move TEMP, X0
	340 And TEMP, TEMP, 1
	341 Compare TEMP, 1
	342 JumpIfNotEqual {96}
	343 Move X0, [X31+8]
	344 Compare X0, 0
	345 JumpIfEqual {603}
	346 Move W1, [X19+328]
	347 Move X2, X31
	348 Call Glyph.set_atlasIndex, X0, X1
	349 Move X0, [X19+280]
	350 Compare X0, 0
	351 JumpIfEqual {603}
	352 Move X9, 0x4B6000
	353 Move X1, [X31+8]
	354 Move X9, [X9+3088]
	355 Move W10, [X0+28]
	356 Move X8, [X0+16]
	357 Move X9, [X9]
	358 Add W10, W10, 1
	359 Move [X0+28], W10
	360 Compare X8, 0
	361 JumpIfEqual {603}
	362 NotImplemented "Instruction LDRSW not yet implemented."
	363 Move W11, [X8+24]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Add W9, W10, 1
	366 Add X8, X8, X10
	367 Move [X0+24], W9
	368 Move [X8+32], X1
	369 Move X8, [X9+32]
	370 Move X1, X20
	371 Move X8, [X8+192]
	372 Move X2, [X8+112]
	373 Call List`1<Object>.AddWithResize, X0, X1
	374 Move X0, [X19+304]
	375 Compare X0, 0
	376 JumpIfEqual {603}
	377 Move X8, 0x4BF000
	378 Move X2, [X22]
	379 Move X8, [X8+688]
	380 Move W1, W21
	381 Move X3, [X8]
	382 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	383 Move W24, 1
	384 Move X8, 0x451000
	385 Move X8, [X8+2760]
	386 Move W1, 5
	387 Move X0, [X8]
	388 Call 0x1C17D6C
	389 Compare X0, 0
	390 JumpIfEqual {603}
	391 Move W8, [X0+24]
	392 Move X20, X0
	393 Compare W8, 0
	394 JumpIfEqual {604}
	395 Move X8, 0x4B6000
	396 Move X8, [X8+3608]
	397 Move X0, X19
	398 Move X1, X31
	399 Move X8, [X8]
	400 Move [X20+32], X8
	401 Call Object.get_name, X0
	402 Move W8, [X20+24]
	403 NotImplemented "Instruction CMP not yet implemented."
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move [X20+40], X0
	406 Move X8, 0x4B6000
	407 Move X8, [X8+3600]
	408 Move X8, [X8]
	409 Move [X20+48], X8
	410 Move X8, [X19+320]
	411 Compare X8, 0
	412 JumpIfEqual {603}
	413 NotImplemented "Instruction LDRSW not yet implemented."
	414 Move W10, [X8+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Add X8, X8, X9
	417 Move X0, [X8+32]
	418 Compare X0, 0
	419 JumpIfEqual {603}
	420 Move X1, X31
	421 Call Object.get_name, X0
	422 Move W8, [X20+24]
	423 NotImplemented "Instruction CMP not yet implemented."
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move [X20+56], X0
	426 Move X8, 0x4B6000
	427 Move X8, [X8+3592]
	428 Move X0, X20
	429 Move X1, X31
	430 Move X8, [X8]
	431 Move [X20+64], X8
	432 Call String.Concat, X0
	433 Move X8, [X19+320]
	434 Compare X8, 0
	435 JumpIfEqual {603}
	436 NotImplemented "Instruction LDRSW not yet implemented."
	437 Move W10, [X8+24]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move X10, 0x451000
	440 Move X10, [X10+2600]
	441 Move X20, X0
	442 Add X8, X8, X9
	443 Move X19, [X8+32]
	444 Move X0, [X10]
	445 Move W9, [X0+224]
	446 Compare W9, 0
	447 JumpIfNotEqual {449}
	448 Call 0x1C17DFC
	449 Move X0, X20
	450 Move X1, X19
	451 Move X2, X31
	452 Call Debug.LogWarning, X0, X1
	453 Move X0, [X19+488]
	454 Compare X0, 0
	455 JumpIfEqual {603}
	456 Move X8, 0x4AC000
	457 Move X8, [X8+2088]
	458 Move W1, W21
	459 Move X2, [X8]
	460 Call HashSet`1<UInt32>.Add, X0, X1
	461 Move X8, [X9+32]
	462 Move X8, [X8+192]
	463 Move X2, [X8+112]
	464 Call List`1<Object>.AddWithResize, X0, X1
	465 Move X0, [X19+288]
	466 Compare X0, 0
	467 JumpIfEqual {603}
	468 Move X8, 0x4B6000
	469 Move X2, [X31+8]
	470 Move X8, [X8+3224]
	471 Move W1, W23
	472 Move X3, [X8]
	473 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	474 Move X8, 0x4BF000
	475 Move X25, [X31+8]
	476 Move X8, [X8+992]
	477 Move X0, [X8]
	478 Call 0x1C17F10
	479 Move W1, W21
	480 Move X2, X19
	481 Move X3, X25
	482 Move X24, X0
	483 Call Character..ctor, X0, X1, X2, X3
	484 Move [X22], X24
	485 Move X0, [X19+296]
	486 Compare X0, 0
	487 JumpIfEqual {603}
	488 Move X9, 0x4BF000
	489 Move X9, [X9+1216]
	490 Move W10, [X0+28]
	491 Move X8, [X0+16]
	492 Move X9, [X9]
	493 Add W10, W10, 1
	494 Move [X0+28], W10
	495 Compare X8, 0
	496 JumpIfEqual {603}
	497 NotImplemented "Instruction LDRSW not yet implemented."
	498 Move W11, [X8+24]
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Add W9, W10, 1
	501 Add X8, X8, X10
	502 Move [X0+24], W9
	503 Move [X8+32], X24
	504 Move X8, [X9+32]
	505 Move X1, X24
	506 Move X8, [X8+192]
	507 Move X2, [X8+112]
	508 Call List`1<Object>.AddWithResize, X0, X1
	509 Move X0, [X19+304]
	510 Compare X0, 0
	511 JumpIfEqual {603}
	512 Move X8, 0x4BF000
	513 Move X2, [X22]
	514 Move X8, [X8+688]
	515 Move W1, W21
	516 Move X3, [X8]
	517 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	518 Move X0, [X19+432]
	519 Compare X0, 0
	520 JumpIfEqual {603}
	521 Move X21, 0x457000
	522 Move X21, [X21+464]
	523 Move W10, [X0+28]
	524 Move X8, [X0+16]
	525 Move X9, [X21]
	526 Add W10, W10, 1
	527 Move [X0+28], W10
	528 Compare X8, 0
	529 JumpIfEqual {603}
	530 NotImplemented "Instruction LDRSW not yet implemented."
	531 Move W11, [X8+24]
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Add W9, W10, 1
	534 Add X8, X8, X10
	535 Move [X0+24], W9
	536 Move [X8+32], W23
	537 Move X8, [X9+32]
	538 Move W1, W23
	539 Move X8, [X8+192]
	540 Move X2, [X8+112]
	541 Call List`1<UInt32>.AddWithResize, X0, X1
	542 Move X0, [X19+440]
	543 Compare X0, 0
	544 JumpIfEqual {603}
	545 Move W10, [X0+28]
	546 Move X8, [X0+16]
	547 Move X9, [X21]
	548 Add W10, W10, 1
	549 Move [X0+28], W10
	550 Compare X8, 0
	551 JumpIfEqual {603}
	552 NotImplemented "Instruction LDRSW not yet implemented."
	553 Move W11, [X8+24]
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Add W9, W10, 1
	556 Add X8, X8, X10
	557 Move [X0+24], W9
	558 Move [X8+32], W23
	559 Move X8, [X9+32]
	560 Move W1, W23
	561 Move X8, [X8+192]
	562 Move X2, [X8+112]
	563 Call List`1<UInt32>.AddWithResize, X0, X1
	564 Move TEMP, X20
	565 And TEMP, TEMP, 1
	566 Compare TEMP, 1
	567 JumpIfNotEqual {577}
	568 Move X8, 0x4BF000
	569 Move X8, [X8+600]
	570 Move X0, [X8]
	571 Move W8, [X0+224]
	572 Compare W8, 0
	573 JumpIfNotEqual {575}
	574 Call 0x1C17DFC
	575 Move X0, X19
	576 Call FontAsset.RegisterFontAssetForFontFeatureUpdate, X0
	577 Move X8, [X19+320]
	578 Compare X8, 0
	579 JumpIfEqual {603}
	580 NotImplemented "Instruction LDRSW not yet implemented."
	581 Move W10, [X8+24]
	582 NotImplemented "Instruction CMP not yet implemented."
	583 Move X10, 0x4BF000
	584 Move X10, [X10+600]
	585 Add X8, X8, X9
	586 Move X19, [X8+32]
	587 Move X0, [X10]
	588 Move W9, [X0+224]
	589 Compare W9, 0
	590 JumpIfNotEqual {592}
	591 Call 0x1C17DFC
	592 Move X0, X19
	593 Call FontAsset.RegisterAtlasTextureForApply, X0
	594 Move X0, [X29]
	595 Move W8, [X0+224]
	596 Compare W8, 0
	597 JumpIfNotEqual {599}
	598 Call 0x1C17DFC
	599 Move W0, 1
	600 Move X1, X31
	601 Move W24, 1
	602 Call FontEngine.SetTextureUploadMode, X0
	603 Call 0x1C17F20
	604 Call 0x1C17F28

Method: System.Boolean TryGetCharacter_and_QueueRenderToTexture(System.UInt32 unicode, out UnityEngine.TextCore.Text.Character character, System.Boolean shouldGetFontFeatures = False)

Disassembly:
	0x03CA7008 BL 0x1C16F28
	0x03CA700C BL 0x1C16F28
	0x03CA7010 BL 0x1C16F20
	0x03CA7014 BL 0x1C16F20
	0x03CA7018 BL 0x1C16F20
	0x03CA701C BL 0x1C16F20
	0x03CA7020 BL 0x1C16F20
	0x03CA7024 MOV X0, X21
	0x03CA7028 BL 0x1C16F18
	0x03CA702C B 0x3CA7080
	0x03CA7030 B 0x3CA7080
	0x03CA7034 B 0x3CA7080
	0x03CA7038 B 0x3CA7080
	0x03CA703C B 0x3CA7080
	0x03CA7040 B 0x3CA7080
	0x03CA7044 B 0x3CA7080
	0x03CA7048 B 0x3CA7080
	0x03CA704C B 0x3CA7080
	0x03CA7050 B 0x3CA7080
	0x03CA7054 B 0x3CA7080
	0x03CA7058 B 0x3CA7080
	0x03CA705C B 0x3CA7080
	0x03CA7060 B 0x3CA7080
	0x03CA7064 B 0x3CA7080
	0x03CA7068 B 0x3CA7080
	0x03CA706C B 0x3CA7080
	0x03CA7070 B 0x3CA7080
	0x03CA7074 B 0x3CA7080
	0x03CA7078 B 0x3CA7080
	0x03CA707C B 0x3CA7080
	0x03CA7080 MOV X20, X0
	0x03CA7084 CMP W1, 0x1
	0x03CA7088 B.NE 0x3CA70A0
	0x03CA708C MOV X0, X20
	0x03CA7090 BL 0x3EB1AD0
	0x03CA7094 LDR X21, [X0]
	0x03CA7098 BL 0x3EB1AE0
	0x03CA709C B 0x3CA6FB4
	0x03CA70A0 MOV X21, X31
	0x03CA70A4 B 0x3CA70AC
	0x03CA70A8 MOV X20, X0
	0x03CA70AC MOV X0, X19
	0x03CA70B0 MOV X1, X31
	0x03CA70B4 MOV X2, X31
	0x03CA70B8 BL 0x33C5D2C
	0x03CA70BC TBZ X0, 0x0, 0x3CA70CC
	0x03CA70C0 MOV X0, X19
	0x03CA70C4 MOV X1, X31
	0x03CA70C8 BL 0x3BFEA0C
	0x03CA70CC CBNZ X21, 0x3CA70D8
	0x03CA70D0 MOV X0, X20
	0x03CA70D4 BL 0x1D2C690
	0x03CA70D8 MOV X0, X21
	0x03CA70DC BL 0x1C16F18
	0x03CA70E0 BL 0x1990590
	0x03CA70E4 RET
	0x03CA70E8 RET
	0x03CA70EC STR X30, [X31 - 0x30]!
	0x03CA70F0 STP X22, X21, [X31 + 0x10]
	0x03CA70F4 STP X20, X19, [X31 + 0x20]
	0x03CA70F8 ADRP X22, 0x740000
	0x03CA70FC ADRP X19, 0x4BA000
	0x03CA7100 LDRB W8, [X22 + 0x2FA]
	0x03CA7104 LDR X19, [X19 + 0x258]
	0x03CA7108 MOV W21, W1
	0x03CA710C MOV X20, X0
	0x03CA7110 TBNZ X8, 0x0, 0x3CA7128
	0x03CA7114 ADRP X0, 0x4BA000
	0x03CA7118 LDR X0, [X0 + 0x258]
	0x03CA711C BL 0x1C16CF4
	0x03CA7120 MOVZ W8, 0x1
	0x03CA7124 STRB W8, [X22 + 0x2FA]
	0x03CA7128 LDR X0, [X19]
	0x03CA712C LDR W8, [X0 + 0xE0]
	0x03CA7130 CBNZ W8, 0x3CA713C
	0x03CA7134 BL 0x1C16DFC
	0x03CA7138 LDR X0, [X19]
	0x03CA713C LDR X8, [X0 + 0xB8]
	0x03CA7140 MOV X1, X31
	0x03CA7144 MOV X2, X31
	0x03CA7148 LDR X19, [X8 + 0x30]
	0x03CA714C MOV X0, X19
	0x03CA7150 BL 0x33C5D2C
	0x03CA7154 TBZ X0, 0x0, 0x3CA7164
	0x03CA7158 MOV X0, X19
	0x03CA715C MOV X1, X31
	0x03CA7160 BL 0x3BFE970
	0x03CA7164 MOVZ W1, 0x1
	0x03CA7168 MOV X0, X20
	0x03CA716C BL 0x3CA722C
	0x03CA7170 AND W1, W21, 0x1
	0x03CA7174 MOV X0, X20
	0x03CA7178 BL 0x3CA74B4
	0x03CA717C MOV X0, X20
	0x03CA7180 BL 0x3C9EBEC
	0x03CA7184 MOV X20, X31
	0x03CA7188 MOV X0, X19
	0x03CA718C MOV X1, X31
	0x03CA7190 MOV X2, X31
	0x03CA7194 BL 0x33C5D2C
	0x03CA7198 TBZ X0, 0x0, 0x3CA71A8
	0x03CA719C MOV X0, X19
	0x03CA71A0 MOV X1, X31
	0x03CA71A4 BL 0x3BFEA0C
	0x03CA71A8 CBNZ X20, 0x3CA71BC
	0x03CA71AC LDP X20, X19, [X31 + 0x20]
	0x03CA71B0 LDP X22, X21, [X31 + 0x10]
	0x03CA71B4 LDR X30, [X31], #0x30
	0x03CA71B8 RET
	0x03CA71BC MOV X0, X20
	0x03CA71C0 BL 0x1C16F18
	0x03CA71C4 B 0x3CA71C8
	0x03CA71C8 MOV X21, X0
	0x03CA71CC CMP W1, 0x1
	0x03CA71D0 B.NE 0x3CA71E8
	0x03CA71D4 MOV X0, X21
	0x03CA71D8 BL 0x3EB1AD0
	0x03CA71DC LDR X20, [X0]
	0x03CA71E0 BL 0x3EB1AE0
	0x03CA71E4 B 0x3CA7188
	0x03CA71E8 MOV X20, X31
	0x03CA71EC B 0x3CA71F4
	0x03CA71F0 MOV X21, X0
	0x03CA71F4 MOV X0, X19
	0x03CA71F8 MOV X1, X31
	0x03CA71FC MOV X2, X31
	0x03CA7200 BL 0x33C5D2C
	0x03CA7204 TBZ X0, 0x0, 0x3CA7214
	0x03CA7208 MOV X0, X19
	0x03CA720C MOV X1, X31
	0x03CA7210 BL 0x3BFEA0C
	0x03CA7214 CBNZ X20, 0x3CA7220
	0x03CA7218 MOV X0, X21
	0x03CA721C BL 0x1D2C690
	0x03CA7220 MOV X0, X20
	0x03CA7224 BL 0x1C16F18
	0x03CA7228 BL 0x1990590
	0x03CA722C SUB X31, X31, 0x40
	0x03CA7230 STR X30, [X31 + 0x10]
	0x03CA7234 STP X22, X21, [X31 + 0x20]
	0x03CA7238 STP X20, X19, [X31 + 0x30]
	0x03CA723C ADRP X21, 0x740000
	0x03CA7240 LDRB W8, [X21 + 0x2FC]
	0x03CA7244 MOV W20, W1
	0x03CA7248 MOV X19, X0
	0x03CA724C TBNZ X8, 0x0, 0x3CA72B8
	0x03CA7250 ADRP X0, 0x4B1000
	0x03CA7254 LDR X0, [X0 + 0xBC8]
	0x03CA7258 BL 0x1C16CF4
	0x03CA725C ADRP X0, 0x4BA000
	0x03CA7260 LDR X0, [X0 + 0x548]
	0x03CA7264 BL 0x1C16CF4
	0x03CA7268 ADRP X0, 0x4BA000
	0x03CA726C LDR X0, [X0 + 0x4F0]
	0x03CA7270 BL 0x1C16CF4
	0x03CA7274 ADRP X0, 0x4B1000
	0x03CA7278 LDR X0, [X0 + 0xE90]
	0x03CA727C BL 0x1C16CF4
	0x03CA7280 ADRP X0, 0x4BA000
	0x03CA7284 LDR X0, [X0 + 0x550]
	0x03CA7288 BL 0x1C16CF4
	0x03CA728C ADRP X0, 0x4B1000
	0x03CA7290 LDR X0, [X0 + 0xC30]
	0x03CA7294 BL 0x1C16CF4
	0x03CA7298 ADRP X0, 0x4BA000
	0x03CA729C LDR X0, [X0 + 0x558]
	0x03CA72A0 BL 0x1C16CF4
	0x03CA72A4 ADRP X0, 0x4BA000
	0x03CA72A8 LDR X0, [X0 + 0x560]
	0x03CA72AC BL 0x1C16CF4
	0x03CA72B0 MOVZ W8, 0x1
	0x03CA72B4 STRB W8, [X21 + 0x2FC]
	0x03CA72B8 LDR X8, [X19 + 0x118]
	0x03CA72BC CBZ X8, 0x3CA72E4
	0x03CA72C0 LDP W2, W9, [X8 + 0x18]
	0x03CA72C4 ADD W9, W9, 0x1
	0x03CA72C8 CMP W2, 0x1
	0x03CA72CC STP W31, W9, [X8 + 0x18]
	0x03CA72D0 B.LT 0x3CA72E4
	0x03CA72D4 LDR X0, [X8 + 0x10]
	0x03CA72D8 MOV W1, W31
	0x03CA72DC MOV X3, X31
	0x03CA72E0 BL 0x339FA34
	0x03CA72E4 LDR X8, [X19 + 0x128]
	0x03CA72E8 CBZ X8, 0x3CA7310
	0x03CA72EC LDP W2, W9, [X8 + 0x18]
	0x03CA72F0 ADD W9, W9, 0x1
	0x03CA72F4 CMP W2, 0x1
	0x03CA72F8 STP W31, W9, [X8 + 0x18]
	0x03CA72FC B.LT 0x3CA7310
	0x03CA7300 LDR X0, [X8 + 0x10]
	0x03CA7304 MOV W1, W31
	0x03CA7308 MOV X3, X31
	0x03CA730C BL 0x339FA34
	0x03CA7310 LDR X8, [X19 + 0x160]
	0x03CA7314 CBZ X8, 0x3CA7324
	0x03CA7318 LDR W9, [X8 + 0x1C]
	0x03CA731C ADD W9, W9, 0x1
	0x03CA7320 STP W31, W9, [X8 + 0x18]
	0x03CA7324 LDR X21, [X19 + 0x168]
	0x03CA7328 CBZ X21, 0x3CA73C8
	0x03CA732C LDR W9, [X21 + 0x1C]
	0x03CA7330 LDR W8, [X19 + 0x15C]
	0x03CA7334 ADRP X22, 0x4B1000
	0x03CA7338 LDR X22, [X22 + 0xBC8]
	0x03CA733C ADD W9, W9, 0x1
	0x03CA7340 MOVZ W10, 0x1
	0x03CA7344 STP W31, W9, [X21 + 0x18]
	0x03CA7348 BIC W8, W10, W8, 0x4
	0x03CA734C LDR W9, [X19 + 0x150]
	0x03CA7350 LDR W10, [X19 + 0x154]
	0x03CA7354 ADD X0, X31, 0x0
	0x03CA7358 MOV W1, W31
	0x03CA735C SUB W3, W9, W8
	0x03CA7360 SUB W4, W10, W8
	0x03CA7364 MOV W2, W31
	0x03CA7368 MOV X5, X31
	0x03CA736C STP X31, X31, [X31]
	0x03CA7370 BL 0x3C9C108
	0x03CA7374 LDR W10, [X21 + 0x1C]
	0x03CA7378 LDP X1, X2, [X31]
	0x03CA737C LDR X8, [X21 + 0x10]
	0x03CA7380 LDR X9, [X22]
	0x03CA7384 ADD W10, W10, 0x1
	0x03CA7388 STR W10, [X21 + 0x1C]
	0x03CA738C CBZ X8, 0x3CA74B0
	0x03CA7390 LDRSW X10, [X21 + 0x18]
	0x03CA7394 LDR W11, [X8 + 0x18]
	0x03CA7398 CMP W10, W11
	0x03CA739C B.CS 0x3CA73B4
	0x03CA73A0 ADD W9, W10, 0x1
	0x03CA73A4 ADD X8, X8, X10, 0x4, LSL
	0x03CA73A8 STR W9, [X21 + 0x18]
	0x03CA73AC STP X1, X2, [X8 + 0x20]
	0x03CA73B0 B 0x3CA73C8
	0x03CA73B4 LDR X8, [X9 + 0x20]
	0x03CA73B8 MOV X0, X21
	0x03CA73BC LDR X8, [X8 + 0xC0]
	0x03CA73C0 LDR X3, [X8 + 0x70]
	0x03CA73C4 BL 0x2FC569C
	0x03CA73C8 LDR X8, [X19 + 0x1A0]
	0x03CA73CC CBZ X8, 0x3CA73F4
	0x03CA73D0 LDP W2, W9, [X8 + 0x18]
	0x03CA73D4 ADD W9, W9, 0x1
	0x03CA73D8 CMP W2, 0x1
	0x03CA73DC STP W31, W9, [X8 + 0x18]
	0x03CA73E0 B.LT 0x3CA73F4
	0x03CA73E4 LDR X0, [X8 + 0x10]
	0x03CA73E8 MOV W1, W31
	0x03CA73EC MOV X3, X31
	0x03CA73F0 BL 0x339FA34
	0x03CA73F4 LDR X8, [X19 + 0x1A8]
	0x03CA73F8 CBZ X8, 0x3CA7420
	0x03CA73FC LDP W2, W9, [X8 + 0x18]
	0x03CA7400 ADD W9, W9, 0x1
	0x03CA7404 CMP W2, 0x1
	0x03CA7408 STP W31, W9, [X8 + 0x18]
	0x03CA740C B.LT 0x3CA7420
	0x03CA7410 LDR X0, [X8 + 0x10]
	0x03CA7414 MOV W1, W31
	0x03CA7418 MOV X3, X31
	0x03CA741C BL 0x339FA34
	0x03CA7420 TBZ X20, 0x0, 0x3CA749C
	0x03CA7424 LDR X8, [X19 + 0x170]
	0x03CA7428 CBZ X8, 0x3CA749C
	0x03CA742C LDR X9, [X8 + 0x18]
	0x03CA7430 CBZ X9, 0x3CA7460
	0x03CA7434 LDP W2, W10, [X9 + 0x18]
	0x03CA7438 ADD W10, W10, 0x1
	0x03CA743C CMP W2, 0x1
	0x03CA7440 STP W31, W10, [X9 + 0x18]
	0x03CA7444 B.LT 0x3CA7460
	0x03CA7448 LDR X0, [X9 + 0x10]
	0x03CA744C MOV W1, W31
	0x03CA7450 MOV X3, X31
	0x03CA7454 BL 0x339FA34
	0x03CA7458 LDR X8, [X19 + 0x170]
	0x03CA745C CBZ X8, 0x3CA749C
	0x03CA7460 LDR X9, [X8 + 0x20]
	0x03CA7464 CBZ X9, 0x3CA7474
	0x03CA7468 LDR W10, [X9 + 0x1C]
	0x03CA746C ADD W10, W10, 0x1
	0x03CA7470 STP W31, W10, [X9 + 0x18]
	0x03CA7474 LDR X9, [X8 + 0x28]
	0x03CA7478 CBZ X9, 0x3CA7488
	0x03CA747C LDR W10, [X9 + 0x1C]
	0x03CA7480 ADD W10, W10, 0x1
	0x03CA7484 STP W31, W10, [X9 + 0x18]
	0x03CA7488 LDR X8, [X8 + 0x30]
	0x03CA748C CBZ X8, 0x3CA749C
	0x03CA7490 LDR W9, [X8 + 0x1C]
	0x03CA7494 ADD W9, W9, 0x1
	0x03CA7498 STP W31, W9, [X8 + 0x18]
	0x03CA749C LDP X20, X19, [X31 + 0x30]
	0x03CA74A0 LDP X22, X21, [X31 + 0x20]
	0x03CA74A4 LDR X30, [X31 + 0x10]
	0x03CA74A8 ADD X31, X31, 0x40
	0x03CA74AC RET
	0x03CA74B0 BL 0x1C16F20
	0x03CA74B4 STR X30, [X31 - 0x50]!
	0x03CA74B8 STP X26, X25, [X31 + 0x10]
	0x03CA74BC STP X24, X23, [X31 + 0x20]
	0x03CA74C0 STP X22, X21, [X31 + 0x30]
	0x03CA74C4 STP X20, X19, [X31 + 0x40]
	0x03CA74C8 ADRP X21, 0x740000
	0x03CA74CC LDRB W8, [X21 + 0x2FD]
	0x03CA74D0 MOV W20, W1
	0x03CA74D4 MOV X19, X0
	0x03CA74D8 TBNZ X8, 0x0, 0x3CA7508
	0x03CA74DC ADRP X0, 0x4B1000
	0x03CA74E0 LDR X0, [X0 + 0xE88]
	0x03CA74E4 BL 0x1C16CF4
	0x03CA74E8 ADRP X0, 0x4B1000
	0x03CA74EC LDR X0, [X0 + 0xBC0]
	0x03CA74F0 BL 0x1C16CF4
	0x03CA74F4 ADRP X0, 0x44C000
	0x03CA74F8 LDR X0, [X0 + 0x598]
	0x03CA74FC BL 0x1C16CF4
	0x03CA7500 MOVZ W8, 0x1
	0x03CA7504 STRB W8, [X21 + 0x2FD]
	0x03CA7508 LDR X8, [X19 + 0x140]
	0x03CA750C STR W31, [X19 + 0x148]
	0x03CA7510 CBZ X8, 0x3CA75F0
	0x03CA7514 ADRP X25, 0x44C000
	0x03CA7518 ADRP X24, 0x4B1000
	0x03CA751C ADRP X23, 0x4B1000
	0x03CA7520 LDR X25, [X25 + 0x598]
	0x03CA7524 LDR X24, [X24 + 0xE88]
	0x03CA7528 LDR X23, [X23 + 0xBC0]
	0x03CA752C ADD X21, X19, 0x140
	0x03CA7530 MOVZ W26, 0x5
	0x03CA7534 LDR W9, [X8 + 0x18]
	0x03CA7538 SUB X10, X26, 0x4
	0x03CA753C CMP X10, W9, SXTW
	0x03CA7540 B.GE 0x3CA75A4
	0x03CA7544 CMP X10, X9
	0x03CA7548 B.CS 0x3CA769C
	0x03CA754C LDR X0, [X25]
	0x03CA7550 LDR X22, [X8, X26, LSL #3]
	0x03CA7554 LDR W9, [X0 + 0xE0]
	0x03CA7558 CBNZ W9, 0x3CA7560
	0x03CA755C BL 0x1C16DFC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x741000
	011 Move W8, [X23+756]
	012 Move W21, W3
	013 Move X22, X2
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {58}
	020 Move X0, 0x4BB000
	021 Move X0, [X0+992]
	022 Call 0x1C17CF4
	023 Move X0, 0x4BB000
	024 Move X0, [X0+688]
	025 Call 0x1C17CF4
	026 Move X0, 0x4B2000
	027 Move X0, [X0+3224]
	028 Call 0x1C17CF4
	029 Move X0, 0x4B2000
	030 Move X0, [X0+3240]
	031 Call 0x1C17CF4
	032 Move X0, 0x4B2000
	033 Move X0, [X0+3216]
	034 Call 0x1C17CF4
	035 Move X0, 0x4BB000
	036 Move X0, [X0+600]
	037 Call 0x1C17CF4
	038 Move X0, 0x4B2000
	039 Move X0, [X0+3008]
	040 Call 0x1C17CF4
	041 Move X0, 0x4A8000
	042 Move X0, [X0+2088]
	043 Call 0x1C17CF4
	044 Move X0, 0x4B2000
	045 Move X0, [X0+3584]
	046 Call 0x1C17CF4
	047 Move X0, 0x4B2000
	048 Move X0, [X0+3088]
	049 Call 0x1C17CF4
	050 Move X0, 0x453000
	051 Move X0, [X0+464]
	052 Call 0x1C17CF4
	053 Move X0, 0x4BB000
	054 Move X0, [X0+1216]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X23+756], W8
	058 Move [X31+8], X31
	059 Move [X22], X31
	060 Move X0, [X19+488]
	061 Compare X0, 0
	062 JumpIfEqual {373}
	063 Move X8, 0x4B2000
	064 Move X8, [X8+3584]
	065 Move W1, W20
	066 Move X2, [X8]
	067 Call HashSet`1<UInt32>.Contains, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {76}
	072 Move X0, X19
	073 Call FontAsset.LoadFontFace, X0
	074 Compare W0, 0
	075 JumpIfEqual {87}
	076 Move W0, W31
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X24, [X31+32]
	082 Move X23, [X31+40]
	083 Move X26, [X31+16]
	084 Move X25, [X31+24]
	085 Move X30, [X31+80]
	086 Return X0
	087 Move X24, 0x4B2000
	088 Move X24, [X24+3008]
	089 Move X0, [X24]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move W0, W20
	095 Move X1, X31
	096 Call FontEngine.GetGlyphIndex, X0
	097 Move W23, W0
	098 Compare W0, 0
	099 JumpIfNotEqual {121}
	100 Move W8, 0x2011
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, [X24]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move W0, 32
	110 Move X0, [X24]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move W0, 45
	116 Move X1, X31
	117 Call FontEngine.GetGlyphIndex, X0
	118 Move W23, W0
	119 Compare W0, 0
	120 JumpIfEqual {227}
	121 Move X0, [X19+288]
	122 Compare X0, 0
	123 JumpIfEqual {373}
	124 Move X8, 0x4B2000
	125 Move X8, [X8+3240]
	126 Move W1, W23
	127 Move X2, [X8]
	128 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {172}
	133 Move X0, [X19+288]
	134 Compare X0, 0
	135 JumpIfEqual {373}
	136 Move X8, 0x4B2000
	137 Move X8, [X8+3216]
	138 Move W1, W23
	139 Move X2, [X8]
	140 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	141 Move X8, 0x4BB000
	142 Move X8, [X8+992]
	143 Move X23, X0
	144 Move X8, [X8]
	145 Move X0, X8
	146 Call 0x1C17F10
	147 Move W1, W20
	148 Move X2, X19
	149 Move X3, X23
	150 Move X21, X0
	151 Call Character..ctor, X0, X1, X2, X3
	152 Move [X22], X21
	153 Move X0, [X19+296]
	154 Compare X0, 0
	155 JumpIfEqual {373}
	156 Move X9, 0x4BB000
	157 Move X9, [X9+1216]
	158 Move W10, [X0+28]
	159 Move X8, [X0+16]
	160 Move X9, [X9]
	161 Add W10, W10, 1
	162 Move [X0+28], W10
	163 Compare X8, 0
	164 JumpIfEqual {373}
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Move W11, [X8+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Add W9, W10, 1
	169 Add X8, X8, X10
	170 Move [X0+24], W9
	171 Move [X8+32], X21
	172 Move X0, [X24]
	173 Move W8, [X19+348]
	174 Move [X31+8], X31
	175 Move W10, 8
	176 Move W9, [X0+224]
	177 And W31, W8, 4
	178 Move W8, 10
	179 NotImplemented "Instruction CSEL not yet implemented."
	180 Compare W9, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Add X2, X31, 8
	184 Move W0, W23
	185 Move W1, W24
	186 Move X3, X31
	187 Call FontEngine.TryGetGlyphWithIndexValue, X0, X1, X2
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {76}
	192 Move X0, [X19+280]
	193 Compare X0, 0
	194 JumpIfEqual {373}
	195 Move X26, 0x4B2000
	196 Move X1, [X31+8]
	197 Move X26, [X26+3088]
	198 Move W10, [X0+28]
	199 Move X8, [X0+16]
	200 Move X9, [X26]
	201 Add W10, W10, 1
	202 Move [X0+28], W10
	203 Compare X8, 0
	204 JumpIfEqual {373}
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Move W11, [X8+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add W9, W10, 1
	209 Add X8, X8, X10
	210 Move [X0+24], W9
	211 Move [X8+32], X1
	212 Move X8, [X9+32]
	213 Move X1, X21
	214 Move X8, [X8+192]
	215 Move X2, [X8+112]
	216 Call List`1<Object>.AddWithResize, X0, X1
	217 Move X0, [X19+304]
	218 Compare X0, 0
	219 JumpIfEqual {373}
	220 Move X8, 0x4BB000
	221 Move X2, [X22]
	222 Move X8, [X8+688]
	223 Move W1, W20
	224 Move X3, [X8]
	225 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	226 Move W0, 1
	227 Move X0, [X19+488]
	228 Compare X0, 0
	229 JumpIfEqual {373}
	230 Move X8, 0x4A8000
	231 Move X8, [X8+2088]
	232 Move W1, W20
	233 Move X2, [X8]
	234 Call HashSet`1<UInt32>.Add, X0, X1
	235 Move X8, [X9+32]
	236 Move X8, [X8+192]
	237 Move X2, [X8+112]
	238 Call List`1<Object>.AddWithResize, X0, X1
	239 Move X0, [X19+288]
	240 Compare X0, 0
	241 JumpIfEqual {373}
	242 Move X8, 0x4B2000
	243 Move X2, [X31+8]
	244 Move X8, [X8+3224]
	245 Move W1, W23
	246 Move X3, [X8]
	247 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	248 Move X8, 0x4BB000
	249 Move X25, [X31+8]
	250 Move X8, [X8+992]
	251 Move X0, [X8]
	252 Call 0x1C17F10
	253 Move W1, W20
	254 Move X2, X19
	255 Move X3, X25
	256 Move X24, X0
	257 Call Character..ctor, X0, X1, X2, X3
	258 Move [X22], X24
	259 Move X0, [X19+296]
	260 Compare X0, 0
	261 JumpIfEqual {373}
	262 Move X9, 0x4BB000
	263 Move X9, [X9+1216]
	264 Move W10, [X0+28]
	265 Move X8, [X0+16]
	266 Move X9, [X9]
	267 Add W10, W10, 1
	268 Move [X0+28], W10
	269 Compare X8, 0
	270 JumpIfEqual {373}
	271 NotImplemented "Instruction LDRSW not yet implemented."
	272 Move W11, [X8+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Add W9, W10, 1
	275 Add X8, X8, X10
	276 Move [X0+24], W9
	277 Move [X8+32], X24
	278 Move X8, [X9+32]
	279 Move X1, X24
	280 Move X8, [X8+192]
	281 Move X2, [X8+112]
	282 Call List`1<Object>.AddWithResize, X0, X1
	283 Move X0, [X19+304]
	284 Compare X0, 0
	285 JumpIfEqual {373}
	286 Move X8, 0x4BB000
	287 Move X2, [X22]
	288 Move X8, [X8+688]
	289 Move W1, W20
	290 Move X3, [X8]
	291 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	292 Move X0, [X19+432]
	293 Compare X0, 0
	294 JumpIfEqual {373}
	295 Move X20, 0x453000
	296 Move X20, [X20+464]
	297 Move W10, [X0+28]
	298 Move X8, [X0+16]
	299 Move X9, [X20]
	300 Add W10, W10, 1
	301 Move [X0+28], W10
	302 Compare X8, 0
	303 JumpIfEqual {373}
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Move W11, [X8+24]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Add W9, W10, 1
	308 Add X8, X8, X10
	309 Move [X0+24], W9
	310 Move [X8+32], W23
	311 Move X8, [X9+32]
	312 Move W1, W23
	313 Move X8, [X8+192]
	314 Move X2, [X8+112]
	315 Call List`1<UInt32>.AddWithResize, X0, X1
	316 Move X0, [X19+440]
	317 Compare X0, 0
	318 JumpIfEqual {373}
	319 Move W10, [X0+28]
	320 Move X8, [X0+16]
	321 Move X9, [X20]
	322 Add W10, W10, 1
	323 Move [X0+28], W10
	324 Compare X8, 0
	325 JumpIfEqual {373}
	326 NotImplemented "Instruction LDRSW not yet implemented."
	327 Move W11, [X8+24]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Add W9, W10, 1
	330 Add X8, X8, X10
	331 Move [X0+24], W9
	332 Move [X8+32], W23
	333 Move X8, [X9+32]
	334 Move W1, W23
	335 Move X8, [X8+192]
	336 Move X2, [X8+112]
	337 Call List`1<UInt32>.AddWithResize, X0, X1
	338 Move TEMP, X21
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfNotEqual {351}
	342 Move X8, 0x4BB000
	343 Move X8, [X8+600]
	344 Move X0, [X8]
	345 Move W8, [X0+224]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, X19
	350 Call FontAsset.RegisterFontAssetForFontFeatureUpdate, X0
	351 Move X0, [X19+416]
	352 Compare X0, 0
	353 JumpIfEqual {373}
	354 Move W10, [X0+28]
	355 Move X1, [X31+8]
	356 Move X8, [X0+16]
	357 Move X9, [X26]
	358 Add W10, W10, 1
	359 Move [X0+28], W10
	360 Compare X8, 0
	361 JumpIfEqual {373}
	362 NotImplemented "Instruction LDRSW not yet implemented."
	363 Move W11, [X8+24]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Add W9, W10, 1
	366 Add X8, X8, X10
	367 Move [X0+24], W9
	368 Move [X8+32], X1
	369 Move X8, [X9+32]
	370 Move X8, [X8+192]
	371 Move X2, [X8+112]
	372 Call List`1<Object>.AddWithResize, X0, X1
	373 Call 0x1C17F20

Method: System.Void TryAddGlyphsToAtlasTextures()

Disassembly:
	0x03CA7560 MOV X0, X22

ISIL:
	001 Return 

Method: System.Boolean TryAddGlyphsToNewAtlasTexture()

Disassembly:
	0x03CA541C STR W9, [X0 + 0x18]
	0x03CA5420 STR W1, [X8 + 0x20]
	0x03CA5424 B 0x3CA5438
	0x03CA5428 LDR X8, [X9 + 0x20]
	0x03CA542C LDR X8, [X8 + 0xC0]
	0x03CA5430 LDR X2, [X8 + 0x70]
	0x03CA5434 BL 0x30C1698
	0x03CA5438 LDR X0, [X20 + 0x1D0]
	0x03CA543C ADD W21, W21, 0x1
	0x03CA5440 CBNZ X0, 0x3CA53C0
	0x03CA5444 BL 0x1C16F20
	0x03CA5448 LDR X0, [X20 + 0x1E0]
	0x03CA544C CBZ X0, 0x3CA5444
	0x03CA5450 LDR W8, [X0 + 0x18]
	0x03CA5454 CMP W8, 0x1
	0x03CA5458 B.LT 0x3CA5468
	0x03CA545C MOV X1, X31
	0x03CA5460 BL 0x3CCDF74
	0x03CA5464 STR X0, [X19]
	0x03CA5468 LDR W8, [X31 + 0xC]
	0x03CA546C EOR W8, W8, 0x1
	0x03CA5470 AND W8, W22, W8, 0x0
	0x03CA5474 B 0x3CA4EA8
	0x03CA5478 BL 0x1C16F28
	0x03CA547C SUB X31, X31, 0x60
	0x03CA5480 STP X30, X27, [X31 + 0x10]
	0x03CA5484 STP X26, X25, [X31 + 0x20]
	0x03CA5488 STP X24, X23, [X31 + 0x30]
	0x03CA548C STP X22, X21, [X31 + 0x40]
	0x03CA5490 STP X20, X19, [X31 + 0x50]
	0x03CA5494 ADRP X23, 0x742000
	0x03CA5498 ADRP X19, 0x4BC000
	0x03CA549C LDRB W8, [X23 + 0x2F2]
	0x03CA54A0 LDR X19, [X19 + 0x258]
	0x03CA54A4 MOV X22, X2
	0x03CA54A8 MOV W21, W1
	0x03CA54AC MOV X20, X0
	0x03CA54B0 TBNZ X8, 0x0, 0x3CA554C
	0x03CA54B4 ADRP X0, 0x44E000
	0x03CA54B8 LDR X0, [X0 + 0xA28]
	0x03CA54BC BL 0x1C16CF4
	0x03CA54C0 ADRP X0, 0x4B3000
	0x03CA54C4 LDR X0, [X0 + 0xC98]
	0x03CA54C8 BL 0x1C16CF4
	0x03CA54CC ADRP X0, 0x4B3000
	0x03CA54D0 LDR X0, [X0 + 0xCA8]
	0x03CA54D4 BL 0x1C16CF4
	0x03CA54D8 ADRP X0, 0x4B3000
	0x03CA54DC LDR X0, [X0 + 0xC90]
	0x03CA54E0 BL 0x1C16CF4
	0x03CA54E4 ADRP X0, 0x4BC000
	0x03CA54E8 LDR X0, [X0 + 0x258]
	0x03CA54EC BL 0x1C16CF4
	0x03CA54F0 ADRP X0, 0x4B3000
	0x03CA54F4 LDR X0, [X0 + 0xBC0]
	0x03CA54F8 BL 0x1C16CF4
	0x03CA54FC ADRP X0, 0x4B3000
	0x03CA5500 LDR X0, [X0 + 0xC10]
	0x03CA5504 BL 0x1C16CF4
	0x03CA5508 ADRP X0, 0x454000
	0x03CA550C LDR X0, [X0 + 0x1D0]
	0x03CA5510 BL 0x1C16CF4
	0x03CA5514 ADRP X0, 0x44E000
	0x03CA5518 LDR X0, [X0 + 0xAC8]
	0x03CA551C BL 0x1C16CF4
	0x03CA5520 ADRP X0, 0x4B3000
	0x03CA5524 LDR X0, [X0 + 0xE08]
	0x03CA5528 BL 0x1C16CF4
	0x03CA552C ADRP X0, 0x4B3000
	0x03CA5530 LDR X0, [X0 + 0xE10]
	0x03CA5534 BL 0x1C16CF4
	0x03CA5538 ADRP X0, 0x4BC000
	0x03CA553C LDR X0, [X0 + 0x500]
	0x03CA5540 BL 0x1C16CF4
	0x03CA5544 MOVZ W8, 0x1
	0x03CA5548 STRB W8, [X23 + 0x2F2]
	0x03CA554C LDR X0, [X19]
	0x03CA5550 LDR W8, [X0 + 0xE0]
	0x03CA5554 CBNZ W8, 0x3CA5560
	0x03CA5558 BL 0x1C16DFC
	0x03CA555C LDR X0, [X19]
	0x03CA5560 LDR X8, [X0 + 0xB8]
	0x03CA5564 MOV X1, X31
	0x03CA5568 MOV X2, X31
	0x03CA556C LDR X19, [X8 + 0x40]
	0x03CA5570 MOV X0, X19
	0x03CA5574 BL 0x33C5D2C
	0x03CA5578 TBZ X0, 0x0, 0x3CA5588
	0x03CA557C MOV X0, X19
	0x03CA5580 MOV X1, X31
	0x03CA5584 BL 0x3BFE970
	0x03CA5588 STR X31, [X22]
	0x03CA558C LDR X0, [X20 + 0x120]
	0x03CA5590 CBZ X0, 0x3CA5C04
	0x03CA5594 ADRP X8, 0x4B3000
	0x03CA5598 LDR X8, [X8 + 0xCA8]
	0x03CA559C LDR X2, [X8]
	0x03CA55A0 MOV W1, W21
	0x03CA55A4 BL 0x2B0F250
	0x03CA55A8 TBZ X0, 0x0, 0x3CA55D8
	0x03CA55AC LDR X0, [X20 + 0x120]
	0x03CA55B0 CBZ X0, 0x3CA5C10
	0x03CA55B4 ADRP X8, 0x4B3000
	0x03CA55B8 LDR X8, [X8 + 0xC90]
	0x03CA55BC LDR X2, [X8]
	0x03CA55C0 MOV W1, W21
	0x03CA55C4 BL 0x2B0EFBC
	0x03CA55C8 MOV X20, X31
	0x03CA55CC STR X0, [X22]
	0x03CA55D0 MOVZ W22, 0x1
	0x03CA55D4 B 0x3CA58F0
	0x03CA55D8 MOV X0, X20
	0x03CA55DC BL 0x3CA0DD0
	0x03CA55E0 CBNZ W0, 0x3CA58E8
	0x03CA55E4 LDR X8, [X20 + 0x140]
	0x03CA55E8 CBZ X8, 0x3CA5C14
	0x03CA55EC LDRSW X9, [X20 + 0x148]
	0x03CA55F0 LDR W10, [X8 + 0x18]
	0x03CA55F4 CMP W9, W10
	0x03CA55F8 B.CS 0x3CA5C18
	0x03CA55FC ADD X8, X8, X9, 0x3, LSL
	0x03CA5600 LDR X0, [X8 + 0x20]
	0x03CA5604 CBZ X0, 0x3CA5C1C
	0x03CA5608 LDR X8, [X0]
	0x03CA560C LDP X9, X1, [X8 + 0x1E8]
	0x03CA5610 BLR X9
	0x03CA5614 TBZ X0, 0x0, 0x3CA57D4
	0x03CA5618 LDR X8, [X20 + 0x140]
	0x03CA561C CBZ X8, 0x3CA5C20
	0x03CA5620 LDRSW X9, [X20 + 0x148]
	0x03CA5624 LDR W10, [X8 + 0x18]
	0x03CA5628 CMP W9, W10
	0x03CA562C B.CS 0x3CA5C28
	0x03CA5630 ADD X8, X8, X9, 0x3, LSL
	0x03CA5634 LDR X0, [X8 + 0x20]
	0x03CA5638 CBZ X0, 0x3CA5C2C
	0x03CA563C LDR X8, [X0]
	0x03CA5640 LDP X9, X1, [X8 + 0x188]
	0x03CA5644 BLR X9
	0x03CA5648 LDR W8, [X20 + 0x150]
	0x03CA564C CMP W0, W8
	0x03CA5650 B.NE 0x3CA5690
	0x03CA5654 LDR X8, [X20 + 0x140]
	0x03CA5658 CBZ X8, 0x3CA5C74
	0x03CA565C LDRSW X9, [X20 + 0x148]
	0x03CA5660 LDR W10, [X8 + 0x18]
	0x03CA5664 CMP W9, W10
	0x03CA5668 B.CS 0x3CA5C78
	0x03CA566C ADD X8, X8, X9, 0x3, LSL
	0x03CA5670 LDR X0, [X8 + 0x20]
	0x03CA5674 CBZ X0, 0x3CA5C7C
	0x03CA5678 LDR X8, [X0]
	0x03CA567C LDP X9, X1, [X8 + 0x1A8]
	0x03CA5680 BLR X9
	0x03CA5684 LDR W8, [X20 + 0x154]
	0x03CA5688 CMP W0, W8
	0x03CA568C B.EQ 0x3CA5708
	0x03CA5690 LDR X8, [X20 + 0x140]
	0x03CA5694 CBZ X8, 0x3CA5C60
	0x03CA5698 LDRSW X9, [X20 + 0x148]
	0x03CA569C LDR W10, [X8 + 0x18]
	0x03CA56A0 CMP W9, W10
	0x03CA56A4 B.CS 0x3CA5C64
	0x03CA56A8 ADD X8, X8, X9, 0x3, LSL
	0x03CA56AC LDR X0, [X8 + 0x20]
	0x03CA56B0 CBZ X0, 0x3CA5C68
	0x03CA56B4 LDR W1, [X20 + 0x150]
	0x03CA56B8 LDR W2, [X20 + 0x154]
	0x03CA56BC MOV X3, X31
	0x03CA56C0 BL 0x3C1C54C
	0x03CA56C4 LDR X8, [X20 + 0x140]
	0x03CA56C8 CBZ X8, 0x3CA5C6C
	0x03CA56CC LDRSW X9, [X20 + 0x148]
	0x03CA56D0 LDR W10, [X8 + 0x18]
	0x03CA56D4 CMP W9, W10
	0x03CA56D8 B.CS 0x3CA5C70
	0x03CA56DC ADRP X10, 0x4B3000
	0x03CA56E0 LDR X10, [X10 + 0xBC0]
	0x03CA56E4 ADD X8, X8, X9, 0x3, LSL
	0x03CA56E8 LDR X23, [X8 + 0x20]
	0x03CA56EC LDR X0, [X10]
	0x03CA56F0 LDR W9, [X0 + 0xE0]
	0x03CA56F4 CBNZ W9, 0x3CA56FC
	0x03CA56F8 BL 0x1C16DFC
	0x03CA56FC MOV X0, X23
	0x03CA5700 MOV X1, X31
	0x03CA5704 BL 0x3C9E1E0
	0x03CA5708 ADRP X24, 0x4B3000
	0x03CA570C LDR X24, [X24 + 0xBC0]
	0x03CA5710 LDR X0, [X24]
	0x03CA5714 LDR W8, [X0 + 0xE0]
	0x03CA5718 CBNZ W8, 0x3CA5720
	0x03CA571C BL 0x1C16DFC
	0x03CA5720 MOV W0, W31
	0x03CA5724 MOV X1, X31
	0x03CA5728 BL 0x3C9CF44
	0x03CA572C LDR X8, [X20 + 0x140]
	0x03CA5730 CBZ X8, 0x3CA5C50
	0x03CA5734 LDRSW X9, [X20 + 0x148]
	0x03CA5738 LDR W10, [X8 + 0x18]
	0x03CA573C CMP W9, W10
	0x03CA5740 B.CS 0x3CA5C58
	0x03CA5744 LDR W1, [X20 + 0x158]
	0x03CA5748 ADD X8, X8, X9, 0x3, LSL
	0x03CA574C LDP X4, X3, [X20 + 0x160]
	0x03CA5750 LDR W5, [X20 + 0x15C]
	0x03CA5754 LDR X6, [X8 + 0x20]
	0x03CA5758 MOV W0, W21
	0x03CA575C MOV W2, W31
	0x03CA5760 MOV X7, X22
	0x03CA5764 STR X31, [X31]
	0x03CA5768 BL 0x3C9CF80
	0x03CA576C TBZ X0, 0x0, 0x3CA5948
	0x03CA5770 LDR X0, [X22]
	0x03CA5774 CBZ X0, 0x3CA5C80
	0x03CA5778 LDR W1, [X20 + 0x148]
	0x03CA577C MOV X2, X31
	0x03CA5780 BL 0x3C9C4F8
	0x03CA5784 LDR X0, [X20 + 0x118]
	0x03CA5788 CBZ X0, 0x3CA5C84
	0x03CA578C ADRP X9, 0x4B3000
	0x03CA5790 LDR X1, [X22]
	0x03CA5794 LDR X9, [X9 + 0xC10]
	0x03CA5798 LDR W10, [X0 + 0x1C]
	0x03CA579C LDR X8, [X0 + 0x10]
	0x03CA57A0 LDR X9, [X9]
	0x03CA57A4 ADD W10, W10, 0x1
	0x03CA57A8 STR W10, [X0 + 0x1C]
	0x03CA57AC CBZ X8, 0x3CA5C88
	0x03CA57B0 LDRSW X10, [X0 + 0x18]
	0x03CA57B4 LDR W11, [X8 + 0x18]
	0x03CA57B8 CMP W10, W11
	0x03CA57BC B.CS 0x3CA5A34
	0x03CA57C0 ADD W9, W10, 0x1
	0x03CA57C4 ADD X8, X8, X10, 0x3, LSL
	0x03CA57C8 STR W9, [X0 + 0x18]
	0x03CA57CC STR X1, [X8 + 0x20]
	0x03CA57D0 B 0x3CA5A44
	0x03CA57D4 ADRP X8, 0x44E000
	0x03CA57D8 LDR X8, [X8 + 0xAC8]
	0x03CA57DC LDR X0, [X8]
	0x03CA57E0 MOVZ W1, 0x5
	0x03CA57E4 BL 0x1C16D6C
	0x03CA57E8 MOV X21, X0
	0x03CA57EC CBZ X0, 0x3CA5C24
	0x03CA57F0 LDR W8, [X21 + 0x18]
	0x03CA57F4 CBZ W8, 0x3CA5C30
	0x03CA57F8 ADRP X8, 0x4BC000
	0x03CA57FC LDR X8, [X8 + 0x500]
	0x03CA5800 LDR X8, [X8]
	0x03CA5804 STR X8, [X21 + 0x20]
	0x03CA5808 MOV X0, X20
	0x03CA580C MOV X1, X31
	0x03CA5810 BL 0x3C389D4
	0x03CA5814 LDR W8, [X21 + 0x18]
	0x03CA5818 CMP W8, 0x1
	0x03CA581C B.LS 0x3CA5C34
	0x03CA5820 CMP W8, 0x2
	0x03CA5824 STR X0, [X21 + 0x28]
	0x03CA5828 B.EQ 0x3CA5C38
	0x03CA582C ADRP X8, 0x4B3000
	0x03CA5830 LDR X8, [X8 + 0xE10]
	0x03CA5834 LDR X8, [X8]
	0x03CA5838 STR X8, [X21 + 0x30]
	0x03CA583C LDR X8, [X20 + 0x140]
	0x03CA5840 CBZ X8, 0x3CA5C3C
	0x03CA5844 LDRSW X9, [X20 + 0x148]
	0x03CA5848 LDR W10, [X8 + 0x18]
	0x03CA584C CMP W9, W10
	0x03CA5850 B.CS 0x3CA5C40
	0x03CA5854 ADD X8, X8, X9, 0x3, LSL
	0x03CA5858 LDR X0, [X8 + 0x20]
	0x03CA585C CBZ X0, 0x3CA5C44
	0x03CA5860 MOV X1, X31
	0x03CA5864 BL 0x3C389D4
	0x03CA5868 LDR W8, [X21 + 0x18]
	0x03CA586C CMP W8, 0x3
	0x03CA5870 B.LS 0x3CA5C48
	0x03CA5874 CMP W8, 0x4
	0x03CA5878 STR X0, [X21 + 0x38]
	0x03CA587C B.EQ 0x3CA5C4C
	0x03CA5880 ADRP X8, 0x4B3000
	0x03CA5884 LDR X8, [X8 + 0xE08]
	0x03CA5888 LDR X8, [X8]
	0x03CA588C STR X8, [X21 + 0x40]
	0x03CA5890 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x743000
	015 Move W8, [X20+757]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x4BD000
	022 Move X0, [X0+688]
	023 Call 0x1C17CF4
	024 Move X0, 0x4B4000
	025 Move X0, [X0+3224]
	026 Call 0x1C17CF4
	027 Move X0, 0x4B4000
	028 Move X0, [X0+3656]
	029 Call 0x1C17CF4
	030 Move X0, 0x4B4000
	031 Move X0, [X0+3008]
	032 Call 0x1C17CF4
	033 Move X0, 0x4B4000
	034 Move X0, [X0+3088]
	035 Call 0x1C17CF4
	036 Move X0, 0x455000
	037 Move X0, [X0+464]
	038 Call 0x1C17CF4
	039 Move X0, 0x4BD000
	040 Move X0, [X0+1216]
	041 Call 0x1C17CF4
	042 Move X0, 0x4A6000
	043 Move X0, [X0+2896]
	044 Call 0x1C17CF4
	045 Move X0, 0x4BD000
	046 Move X0, [X0+1272]
	047 Call 0x1C17CF4
	048 Move X0, 0x4BD000
	049 Move X0, [X0+720]
	050 Call 0x1C17CF4
	051 Move X0, 0x4BD000
	052 Move X0, [X0+728]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+757], W8
	056 Move X0, X19
	057 Move [X31+16], X31
	058 Move [X31+24], X31
	059 Call FontAsset.SetupNewAtlasTexture, X0
	060 Move X8, [X19+320]
	061 Compare X8, 0
	062 JumpIfEqual {298}
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Move W10, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X10, 0x4B4000
	067 Move X10, [X10+3008]
	068 Add X8, X8, X9
	069 Move X20, [X19+448]
	070 Move W21, [X19+344]
	071 Move X0, [X10]
	072 Move X22, [X19+352]
	073 Move X24, [X19+360]
	074 Move W23, [X19+348]
	075 Move X25, [X8+32]
	076 Move W9, [X0+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Add X7, X31, 24
	081 Move X0, X20
	082 Move W1, W21
	083 Move W2, W31
	084 Move X3, X24
	085 Move X4, X22
	086 Move W5, W23
	087 Move X6, X25
	088 Move [X31], X31
	089 Call FontEngine.TryAddGlyphsToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	090 Move X8, [X31+24]
	091 Move [X31+12], W0
	092 Compare X8, 0
	093 JumpIfEqual {298}
	094 Move X20, 0x4B4000
	095 Move X26, 0x4B4000
	096 Move X23, 0x455000
	097 Move X24, 0x4BD000
	098 Move X25, 0x4B4000
	099 Move X27, 0x4BD000
	100 Move X28, 0x4BD000
	101 Move X20, [X20+3088]
	102 Move X26, [X26+3224]
	103 Move X23, [X23+464]
	104 Move X24, [X24+728]
	105 Move X25, [X25+3656]
	106 Move X27, [X27+688]
	107 Move X28, [X28+1272]
	108 Move X29, X31
	109 Move W9, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X8, X8, X29
	113 Move X22, [X8+32]
	114 Compare X22, 0
	115 JumpIfEqual {201}
	116 Move X0, X22
	117 Move X1, X31
	118 Call Glyph.get_index, X0
	119 Move W1, [X19+328]
	120 Move W21, W0
	121 Move X0, X22
	122 Move X2, X31
	123 Call Glyph.set_atlasIndex, X0, X1
	124 Move X0, [X19+280]
	125 Compare X0, 0
	126 JumpIfEqual {298}
	127 Move W10, [X0+28]
	128 Move X8, [X0+16]
	129 Move X9, [X20]
	130 Add W10, W10, 1
	131 Move [X0+28], W10
	132 Compare X8, 0
	133 JumpIfEqual {298}
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Move W11, [X8+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W9, W10, 1
	138 Add X8, X8, X10
	139 Move [X0+24], W9
	140 Move [X8+32], X22
	141 Move X8, [X9+32]
	142 Move X1, X22
	143 Move X8, [X8+192]
	144 Move X2, [X8+112]
	145 Call List`1<Object>.AddWithResize, X0, X1
	146 Move X0, [X19+288]
	147 Compare X0, 0
	148 JumpIfEqual {298}
	149 Move X3, [X26]
	150 Move W1, W21
	151 Move X2, X22
	152 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	153 Move X0, [X19+440]
	154 Compare X0, 0
	155 JumpIfEqual {298}
	156 Move W10, [X0+28]
	157 Move X8, [X0+16]
	158 Move X9, [X23]
	159 Add W10, W10, 1
	160 Move [X0+28], W10
	161 Compare X8, 0
	162 JumpIfEqual {298}
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Move W11, [X8+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add W9, W10, 1
	167 Add X8, X8, X10
	168 Move [X0+24], W9
	169 Move [X8+32], W21
	170 Move X8, [X9+32]
	171 Move W1, W21
	172 Move X8, [X8+192]
	173 Move X2, [X8+112]
	174 Call List`1<UInt32>.AddWithResize, X0, X1
	175 Move X0, [X19+432]
	176 Compare X0, 0
	177 JumpIfEqual {298}
	178 Move W10, [X0+28]
	179 Move X8, [X0+16]
	180 Move X9, [X23]
	181 Add W10, W10, 1
	182 Move [X0+28], W10
	183 Compare X8, 0
	184 JumpIfEqual {298}
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Move W11, [X8+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Add W9, W10, 1
	189 Add X8, X8, X10
	190 Move [X0+24], W9
	191 Move [X8+32], W21
	192 Move X8, [X9+32]
	193 Move W1, W21
	194 Move X8, [X8+192]
	195 Move X2, [X8+112]
	196 Call List`1<UInt32>.AddWithResize, X0, X1
	197 Move X8, [X31+24]
	198 Add X29, X29, 1
	199 Compare X8, 0
	200 JumpIfNotEqual {109}
	201 Move X8, [X19+448]
	202 Compare X8, 0
	203 JumpIfEqual {298}
	204 Move W9, [X8+28]
	205 Move X20, 0x4BD000
	206 Add W9, W9, 1
	207 Move [X8+24], W31
	208 Move [X8+28], W9
	209 Move X0, [X19+464]
	210 Move X20, [X20+1216]
	211 Compare X0, 0
	212 JumpIfEqual {298}
	213 Move W21, W31
	214 Move W8, [X0+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X2, [X24]
	217 Move W1, W21
	218 Call List`1<Object>.get_Item, X0, X1
	219 Compare X0, 0
	220 JumpIfEqual {298}
	221 Move X22, X0
	222 Move X0, [X19+288]
	223 Compare X0, 0
	224 JumpIfEqual {298}
	225 Move W1, [X22+40]
	226 Move X3, [X25]
	227 Add X2, X31, 16
	228 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {253}
	233 Move X8, [X31+16]
	234 Move [X22+24], X19
	235 Move [X22+32], X8
	236 Move X0, [X19+296]
	237 Compare X0, 0
	238 JumpIfEqual {298}
	239 Move W10, [X0+28]
	240 Move X8, [X0+16]
	241 Move X9, [X20]
	242 Add W10, W10, 1
	243 Move [X0+28], W10
	244 Compare X8, 0
	245 JumpIfEqual {298}
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Move W11, [X8+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Add W9, W10, 1
	250 Add X8, X8, X10
	251 Move [X0+24], W9
	252 Move [X8+32], X22
	253 Move X0, [X19+448]
	254 Compare X0, 0
	255 JumpIfEqual {298}
	256 Move W10, [X0+28]
	257 Move W1, [X22+40]
	258 Move X8, [X0+16]
	259 Move X9, [X23]
	260 Add W10, W10, 1
	261 Move [X0+28], W10
	262 Compare X8, 0
	263 JumpIfEqual {298}
	264 NotImplemented "Instruction LDRSW not yet implemented."
	265 Move W11, [X8+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Add W9, W10, 1
	268 Add X8, X8, X10
	269 Move [X0+24], W9
	270 Move [X8+32], W1
	271 Move X8, [X9+32]
	272 Move X1, X22
	273 Move X8, [X8+192]
	274 Move X2, [X8+112]
	275 Call List`1<Object>.AddWithResize, X0, X1
	276 Move X0, [X19+304]
	277 Compare X0, 0
	278 JumpIfEqual {298}
	279 Move W1, [X22+20]
	280 Move X3, [X27]
	281 Move X2, X22
	282 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	283 Move X0, [X19+464]
	284 Compare X0, 0
	285 JumpIfEqual {298}
	286 Move X2, [X28]
	287 Move W1, W21
	288 Call List`1<Object>.RemoveAt, X0, X1
	289 Subtract W21, W21, 1
	290 Move X8, [X9+32]
	291 Move X8, [X8+192]
	292 Move X2, [X8+112]
	293 Call List`1<UInt32>.AddWithResize, X0, X1
	294 Move X0, [X19+464]
	295 Add W21, W21, 1
	296 Compare X0, 0
	297 JumpIfNotEqual {214}
	298 Call 0x1C17F20
	299 Move W8, [X31+12]
	300 Move X20, [X31+112]
	301 Move X19, [X31+120]
	302 Move X22, [X31+96]
	303 Move X21, [X31+104]
	304 Move X24, [X31+80]
	305 Move X23, [X31+88]
	306 Move X26, [X31+64]
	307 Move X25, [X31+72]
	308 Move X28, [X31+48]
	309 Move X27, [X31+56]
	310 Move X29, [X31+32]
	311 Move X30, [X31+40]
	312 And W0, W8, 1
	313 Add X31, X31, 128
	314 Return X0
	315 Call 0x1C17F28

Method: System.Void SetupNewAtlasTexture()

Disassembly:
	0x03CA6DF8 MOV X1, X31
	0x03CA6DFC BL 0x3C9E52C
	0x03CA6E00 CBZ W0, 0x3CA6FB0
	0x03CA6E04 LDR W8, [X21 + 0x18]
	0x03CA6E08 CMP X24, X8
	0x03CA6E0C B.CS 0x3CA7000
	0x03CA6E10 ADD X8, X31, 0xC0
	0x03CA6E14 MOV X0, X22
	0x03CA6E18 MOV X1, X31
	0x03CA6E1C BL 0x3C9E6E4
	0x03CA6E20 LDR V0, [X31 + 0xC]
	0x03CA6E24 LDR W8, [X31 + 0xD0]
	0x03CA6E28 STR V0, [X31 + 0x4]
	0x03CA6E2C STR W8, [X31 + 0x50]
	0x03CA6E30 ADD X0, X31, 0x40
	0x03CA6E34 MOV X1, X31
	0x03CA6E38 BL 0x3C9E52C
	0x03CA6E3C LDR W8, [X21 + 0x18]
	0x03CA6E40 CMP X24, X8
	0x03CA6E44 B.CS 0x3CA7008
	0x03CA6E48 MOV W23, W0
	0x03CA6E4C ADD X8, X31, 0xC0
	0x03CA6E50 MOV X0, X22
	0x03CA6E54 MOV X1, X31
	0x03CA6E58 BL 0x3C9E6D0
	0x03CA6E5C LDR V0, [X31 + 0xC]
	0x03CA6E60 LDR W8, [X31 + 0xD0]
	0x03CA6E64 STR V0, [X31 + 0x4]
	0x03CA6E68 STR W8, [X31 + 0x50]
	0x03CA6E6C ADD X0, X31, 0x40
	0x03CA6E70 MOV X1, X31
	0x03CA6E74 BL 0x3C9E52C
	0x03CA6E78 LDR X8, [X20 + 0x170]
	0x03CA6E7C CBZ X8, 0x3CA6FFC
	0x03CA6E80 LDR X8, [X8 + 0x40]
	0x03CA6E84 CBZ X8, 0x3CA7004
	0x03CA6E88 LDR X2, [X26]
	0x03CA6E8C ORR W23, W0, W23, 0x10
	0x03CA6E90 MOV X0, X8
	0x03CA6E94 MOV W1, W23
	0x03CA6E98 BL 0x2B029E0
	0x03CA6E9C TBNZ X0, 0x0, 0x3CA6F9C
	0x03CA6EA0 LDR W8, [X21 + 0x18]
	0x03CA6EA4 CMP X24, X8
	0x03CA6EA8 B.CS 0x3CA700C
	0x03CA6EAC LDUR V0, [X22 + 0x1C]
	0x03CA6EB0 LDP V2, V1, [X22]
	0x03CA6EB4 STUR V0, [X31 + 0x7C]
	0x03CA6EB8 STP V2, V1, [X31 + 0x60]
	0x03CA6EBC LDR X8, [X20 + 0x170]
	0x03CA6EC0 CBZ X8, 0x3CA7020
	0x03CA6EC4 LDR X0, [X8 + 0x20]
	0x03CA6EC8 LDP V0, V1, [X31 + 0x60]
	0x03CA6ECC LDUR V2, [X31 + 0x7C]
	0x03CA6ED0 STP V0, V1, [X31 + 0x10]
	0x03CA6ED4 STUR V2, [X31 + 0x2C]
	0x03CA6ED8 CBZ X0, 0x3CA701C
	0x03CA6EDC LDP V0, V1, [X31 + 0x10]
	0x03CA6EE0 LDUR V2, [X31 + 0x2C]
	0x03CA6EE4 LDR X10, [X27]
	0x03CA6EE8 STP V0, V1, [X31 + 0x90]
	0x03CA6EEC STUR V2, [X25 + 0x1C]
	0x03CA6EF0 LDR W9, [X0 + 0x1C]
	0x03CA6EF4 LDR X8, [X0 + 0x10]
	0x03CA6EF8 ADD W9, W9, 0x1
	0x03CA6EFC STR W9, [X0 + 0x1C]
	0x03CA6F00 CBZ X8, 0x3CA7018
	0x03CA6F04 LDRSW X9, [X0 + 0x18]
	0x03CA6F08 LDR W11, [X8 + 0x18]
	0x03CA6F0C CMP W9, W11
	0x03CA6F10 B.CS 0x3CA6F38
	0x03CA6F14 ADD W10, W9, 0x1
	0x03CA6F18 STR W10, [X0 + 0x18]
	0x03CA6F1C LDUR V0, [X25 + 0x1C]
	0x03CA6F20 LDP V2, V1, [X31 + 0x90]
	0x03CA6F24 NOP
	0x03CA6F28 MADD X8, X9, X28, X8
	0x03CA6F2C STUR V0, [X8 + 0x3C]
	0x03CA6F30 STP V2, V1, [X8 + 0x20]
	0x03CA6F34 B 0x3CA6F5C
	0x03CA6F38 LDR X8, [X10 + 0x20]
	0x03CA6F3C LDP V0, V1, [X31 + 0x90]
	0x03CA6F40 LDUR V2, [X25 + 0x1C]
	0x03CA6F44 LDR X8, [X8 + 0xC0]
	0x03CA6F48 LDR X2, [X8 + 0x70]
	0x03CA6F4C STP V0, V1, [X31 + 0xC0]
	0x03CA6F50 STUR V2, [X25 + 0x4C]
	0x03CA6F54 ADD X1, X31, 0xC0
	0x03CA6F58 BL 0x2FC261C
	0x03CA6F5C LDR X8, [X20 + 0x170]
	0x03CA6F60 CBZ X8, 0x3CA7014
	0x03CA6F64 LDR X0, [X8 + 0x40]
	0x03CA6F68 LDP V0, V1, [X31 + 0x60]
	0x03CA6F6C LDUR V2, [X31 + 0x7C]
	0x03CA6F70 STP V0, V1, [X31 + 0x90]
	0x03CA6F74 STUR V2, [X25 + 0x1C]
	0x03CA6F78 CBZ X0, 0x3CA7010
	0x03CA6F7C LDP V0, V1, [X31 + 0x90]
	0x03CA6F80 LDUR V2, [X25 + 0x1C]
	0x03CA6F84 LDR X3, [X29]
	0x03CA6F88 STP V0, V1, [X31 + 0xC0]
	0x03CA6F8C STUR V2, [X25 + 0x4C]
	0x03CA6F90 ADD X2, X31, 0xC0
	0x03CA6F94 MOV W1, W23
	0x03CA6F98 BL 0x2B026C8
	0x03CA6F9C LDR X8, [X21 + 0x18]
	0x03CA6FA0 ADD X24, X24, 0x1
	0x03CA6FA4 ADD X22, X22, 0x2C
	0x03CA6FA8 CMP X24, W8, SXTW
	0x03CA6FAC B.LT 0x3CA6DCC
	0x03CA6FB0 MOV X21, X31
	0x03CA6FB4 MOV X0, X19
	0x03CA6FB8 MOV X1, X31
	0x03CA6FBC MOV X2, X31
	0x03CA6FC0 BL 0x33C5D2C
	0x03CA6FC4 TBZ X0, 0x0, 0x3CA6FD4
	0x03CA6FC8 MOV X0, X19
	0x03CA6FCC MOV X1, X31
	0x03CA6FD0 BL 0x3BFEA0C
	0x03CA6FD4 CBNZ X21, 0x3CA7024
	0x03CA6FD8 LDP X20, X19, [X31 + 0x140]
	0x03CA6FDC LDP X22, X21, [X31 + 0x130]
	0x03CA6FE0 LDP X24, X23, [X31 + 0x120]
	0x03CA6FE4 LDP X26, X25, [X31 + 0x110]
	0x03CA6FE8 LDP X28, X27, [X31 + 0x100]
	0x03CA6FEC LDP X29, X30, [X31 + 0xF0]
	0x03CA6FF0 ADD X31, X31, 0x150
	0x03CA6FF4 RET
	0x03CA6FF8 BL 0x1C16F28
	0x03CA6FFC BL 0x1C16F20
	0x03CA7000 BL 0x1C16F28
	0x03CA7004 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0x742000
	010 Move W8, [X20+758]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x4B3000
	017 Move X0, [X0+3720]
	018 Call 0x1C17CF4
	019 Move X0, 0x4B3000
	020 Move X0, [X0+3008]
	021 Call 0x1C17CF4
	022 Move X0, 0x4B3000
	023 Move X0, [X0+3016]
	024 Call 0x1C17CF4
	025 Move X0, 0x4B3000
	026 Move X0, [X0+3728]
	027 Call 0x1C17CF4
	028 Move X0, 0x478000
	029 Move X0, [X0+592]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+758], W8
	033 Move W8, [X19+328]
	034 Move X24, [X19+320]
	035 Add W23, W8, 1
	036 Move [X19+328], W23
	037 Compare X24, 0
	038 JumpIfEqual {149}
	039 Move W8, [X24+24]
	040 Move X20, 0x478000
	041 Move X20, [X20+592]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, 0x4B3000
	044 Move X8, [X8+3720]
	045 Add X0, X19, 320
	046 Move W1, W23
	047 ShiftRight W1, 31
	048 And W1, W1, 0x3FFFFFFF
	049 Move X2, [X8]
	050 Call Array.Resize, X0, X1
	051 Move X24, [X19+320]
	052 Move W23, [X19+328]
	053 Move X0, [X20]
	054 Move W21, [X19+336]
	055 Move W22, [X19+340]
	056 Call 0x1C17F10
	057 Move W3, 1
	058 Move W1, W21
	059 Move W2, W22
	060 Move W4, W31
	061 Move X5, X31
	062 Move X20, X0
	063 Call Texture2D..ctor, X0, X1, X2, X3, X4
	064 Compare X24, 0
	065 JumpIfEqual {149}
	066 Move W8, [X24+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X8, X24, W23
	069 Move [X8+32], X20
	070 Move X8, [X19+320]
	071 Compare X8, 0
	072 JumpIfEqual {149}
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Move W10, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X10, 0x4B3000
	077 Move X10, [X10+3008]
	078 Add X8, X8, X9
	079 Move X20, [X8+32]
	080 Move X0, [X10]
	081 Move W9, [X0+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X31
	087 Call FontEngine.ResetAtlasTexture, X0
	088 Move X20, [X19+360]
	089 Compare X20, 0
	090 JumpIfEqual {149}
	091 Move W9, [X20+28]
	092 Move W8, [X19+348]
	093 Move X21, 0x4B3000
	094 Move X21, [X21+3016]
	095 Add W9, W9, 1
	096 Move W10, 1
	097 Move [X20+24], W31
	098 Move [X20+28], W9
	099 NotImplemented "Instruction BIC not yet implemented."
	100 Move W9, [X19+336]
	101 Move W10, [X19+340]
	102 Add X0, X31, 0
	103 Move W1, W31
	104 Subtract W3, W9, W8
	105 Subtract W4, W10, W8
	106 Move W2, W31
	107 Move X5, X31
	108 Move [X31], X31
	109 Move [X31+8], X31
	110 Call GlyphRect..ctor, X0, X1, X2, X3, X4
	111 Move W10, [X20+28]
	112 Move X1, [X31]
	113 Move X2, [X31+8]
	114 Move X8, [X20+16]
	115 Move X9, [X21]
	116 Add W10, W10, 1
	117 Move [X20+28], W10
	118 Compare X8, 0
	119 JumpIfEqual {149}
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Move W11, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add W9, W10, 1
	124 Add X8, X8, X10
	125 Move [X20+24], W9
	126 Move [X8+32], X1
	127 Move [X8+40], X2
	128 Move X8, [X9+32]
	129 Move X0, X20
	130 Move X8, [X8+192]
	131 Move X3, [X8+112]
	132 Call List`1<GlyphRect>.AddWithResize, X0, X1
	133 Move X8, [X19+352]
	134 Compare X8, 0
	135 JumpIfEqual {149}
	136 Move W9, [X8+28]
	137 Move X20, [X31+64]
	138 Move X19, [X31+72]
	139 Move X22, [X31+48]
	140 Move X21, [X31+56]
	141 Move X24, [X31+32]
	142 Move X23, [X31+40]
	143 Move X30, [X31+16]
	144 Add W9, W9, 1
	145 Move [X8+24], W31
	146 Move [X8+28], W9
	147 Add X31, X31, 80
	148 Return 
	149 Call 0x1C17F20
	150 Call 0x1C17F28

Method: System.Void UpdateAllFontFeatures()

Disassembly:
	0x03CA44CC MOVZ W8, 0x1
	0x03CA44D0 STRB W8, [X20 + 0x2F5]
	0x03CA44D4 MOV X0, X19
	0x03CA44D8 STP X31, X31, [X31 + 0x10]
	0x03CA44DC BL 0x3CA5DF8
	0x03CA44E0 LDR X8, [X19 + 0x140]
	0x03CA44E4 CBZ X8, 0x3CA4864
	0x03CA44E8 LDRSW X9, [X19 + 0x148]
	0x03CA44EC LDR W10, [X8 + 0x18]
	0x03CA44F0 CMP W9, W10
	0x03CA44F4 B.CS 0x3CA4890
	0x03CA44F8 ADRP X10, 0x4B4000
	0x03CA44FC LDR X10, [X10 + 0xBC0]
	0x03CA4500 ADD X8, X8, X9, 0x3, LSL
	0x03CA4504 LDR X20, [X19 + 0x1C0]
	0x03CA4508 LDR W21, [X19 + 0x158]
	0x03CA450C LDR X0, [X10]
	0x03CA4510 LDP X22, X24, [X19 + 0x160]
	0x03CA4514 LDR W23, [X19 + 0x15C]
	0x03CA4518 LDR X25, [X8 + 0x20]
	0x03CA451C LDR W9, [X0 + 0xE0]
	0x03CA4520 CBNZ W9, 0x3CA4528

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x744000
	005 Move W8, [X20+759]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4A7000
	012 Move X0, [X0+2896]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+759], W8
	016 Move X0, X19
	017 Call FontAsset.UpdateGlyphAdjustmentRecords, X0
	018 Move X8, [X19+440]
	019 Compare X8, 0
	020 JumpIfEqual {29}
	021 Move W9, [X8+28]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Add W9, W9, 1
	025 Move [X8+24], W31
	026 Move [X8+28], W9
	027 Move X30, [X31+32]
	028 Return 
	029 Call 0x1C17F20

Method: System.Void UpdateGlyphAdjustmentRecords()

Disassembly:
	0x03CA7564 MOV X1, X31
	0x03CA7568 MOV X2, X31
	0x03CA756C BL 0x3C3883C
	0x03CA7570 TBNZ X0, 0x0, 0x3CA7594
	0x03CA7574 LDR X0, [X25]
	0x03CA7578 LDR W8, [X0 + 0xE0]
	0x03CA757C CBNZ W8, 0x3CA7584
	0x03CA7580 BL 0x1C16DFC
	0x03CA7584 MOVZ W1, 0x1
	0x03CA7588 MOV X0, X22
	0x03CA758C MOV X2, X31
	0x03CA7590 BL 0x3C39520
	0x03CA7594 LDR X8, [X21]
	0x03CA7598 ADD X26, X26, 0x1
	0x03CA759C CBNZ X8, 0x3CA7534
	0x03CA75A0 BL 0x1C16F20
	0x03CA75A4 LDR X2, [X24]
	0x03CA75A8 MOVZ W1, 0x1
	0x03CA75AC MOV X0, X21
	0x03CA75B0 BL 0x2142E6C
	0x03CA75B4 LDR X8, [X21]
	0x03CA75B8 CBZ X8, 0x3CA75A0
	0x03CA75BC LDR W9, [X8 + 0x18]
	0x03CA75C0 CBZ W9, 0x3CA769C
	0x03CA75C4 LDR X21, [X8 + 0x20]
	0x03CA75C8 STR X21, [X19 + 0x138]
	0x03CA75CC CBZ X21, 0x3CA75A0
	0x03CA75D0 LDR X8, [X21]
	0x03CA75D4 MOV X0, X21
	0x03CA75D8 LDP X9, X1, [X8 + 0x1E8]
	0x03CA75DC BLR X9
	0x03CA75E0 TBZ X20, 0x0, 0x3CA7608
	0x03CA75E4 MOVZ W1, 0x1
	0x03CA75E8 MOVZ W2, 0x1
	0x03CA75EC B 0x3CA764C
	0x03CA75F0 LDP X20, X19, [X31 + 0x40]
	0x03CA75F4 LDP X22, X21, [X31 + 0x30]
	0x03CA75F8 LDP X24, X23, [X31 + 0x20]
	0x03CA75FC LDP X26, X25, [X31 + 0x10]
	0x03CA7600 LDR X30, [X31], #0x50
	0x03CA7604 RET
	0x03CA7608 LDR X8, [X21]
	0x03CA760C MOV X0, X21
	0x03CA7610 LDP X9, X1, [X8 + 0x188]
	0x03CA7614 BLR X9
	0x03CA7618 LDR W1, [X19 + 0x150]
	0x03CA761C CMP W0, W1
	0x03CA7620 B.NE 0x3CA7648
	0x03CA7624 LDR X8, [X21]
	0x03CA7628 MOV X0, X21
	0x03CA762C LDP X9, X1, [X8 + 0x1A8]
	0x03CA7630 BLR X9
	0x03CA7634 LDR W2, [X19 + 0x154]
	0x03CA7638 CMP W0, W2
	0x03CA763C B.EQ 0x3CA7660
	0x03CA7640 LDR W1, [X19 + 0x150]
	0x03CA7644 B 0x3CA764C
	0x03CA7648 LDR W2, [X19 + 0x154]
	0x03CA764C MOVZ W3, 0x1
	0x03CA7650 MOV X0, X21
	0x03CA7654 MOV W4, W31
	0x03CA7658 MOV X5, X31
	0x03CA765C BL 0x3C1C5D8
	0x03CA7660 LDR X0, [X23]
	0x03CA7664 LDR W8, [X0 + 0xE0]
	0x03CA7668 CBNZ W8, 0x3CA7670
	0x03CA766C BL 0x1C16DFC
	0x03CA7670 MOV X0, X21
	0x03CA7674 MOV X1, X31
	0x03CA7678 BL 0x3C9E1E0
	0x03CA767C MOV X0, X21
	0x03CA7680 LDP X20, X19, [X31 + 0x40]
	0x03CA7684 LDP X22, X21, [X31 + 0x30]
	0x03CA7688 LDP X24, X23, [X31 + 0x20]
	0x03CA768C LDP X26, X25, [X31 + 0x10]
	0x03CA7690 MOV X1, X31
	0x03CA7694 LDR X30, [X31], #0x50
	0x03CA7698 B 0x3C1C540
	0x03CA769C BL 0x1C16F28
	0x03CA76A0 STP X30, X19, [X31 - 0x10]!
	0x03CA76A4 AND W1, W1, 0x1
	0x03CA76A8 MOV X19, X0
	0x03CA76AC BL 0x3CA722C
	0x03CA76B0 MOVZ W1, 0x1
	0x03CA76B4 MOV X0, X19
	0x03CA76B8 LDP X30, X19, [X31], #0x10
	0x03CA76BC B 0x3CA74B4
	0x03CA76C0 STR X30, [X31 - 0x40]!
	0x03CA76C4 STP X24, X23, [X31 + 0x10]
	0x03CA76C8 STP X22, X21, [X31 + 0x20]
	0x03CA76CC STP X20, X19, [X31 + 0x30]
	0x03CA76D0 ADRP X21, 0x740000
	0x03CA76D4 ADRP X19, 0x4BA000
	0x03CA76D8 LDRB W8, [X21 + 0x2FB]
	0x03CA76DC LDR X19, [X19 + 0x258]
	0x03CA76E0 MOV X20, X0
	0x03CA76E4 TBNZ X8, 0x0, 0x3CA7720
	0x03CA76E8 ADRP X0, 0x4BA000
	0x03CA76EC LDR X0, [X0 + 0x258]
	0x03CA76F0 BL 0x1C16CF4
	0x03CA76F4 ADRP X0, 0x4BA000
	0x03CA76F8 LDR X0, [X0 + 0x2D0]
	0x03CA76FC BL 0x1C16CF4
	0x03CA7700 ADRP X0, 0x4BA000
	0x03CA7704 LDR X0, [X0 + 0x2D8]
	0x03CA7708 BL 0x1C16CF4
	0x03CA770C ADRP X0, 0x475000
	0x03CA7710 LDR X0, [X0 + 0xD08]
	0x03CA7714 BL 0x1C16CF4
	0x03CA7718 MOVZ W8, 0x1
	0x03CA771C STRB W8, [X21 + 0x2FB]
	0x03CA7720 LDR X0, [X19]
	0x03CA7724 LDR W8, [X0 + 0xE0]
	0x03CA7728 CBNZ W8, 0x3CA7734
	0x03CA772C BL 0x1C16DFC
	0x03CA7730 LDR X0, [X19]
	0x03CA7734 LDR X8, [X0 + 0xB8]
	0x03CA7738 MOV X1, X31
	0x03CA773C MOV X2, X31
	0x03CA7740 LDR X19, [X8 + 0x38]
	0x03CA7744 MOV X0, X19
	0x03CA7748 BL 0x33C5D2C
	0x03CA774C TBZ X0, 0x0, 0x3CA775C
	0x03CA7750 MOV X0, X19
	0x03CA7754 MOV X1, X31
	0x03CA7758 BL 0x3BFE970
	0x03CA775C LDR X8, [X20 + 0x128]
	0x03CA7760 CBZ X8, 0x3CA7868
	0x03CA7764 ADRP X9, 0x475000
	0x03CA7768 LDR X9, [X9 + 0xD08]
	0x03CA776C LDR W1, [X8 + 0x18]
	0x03CA7770 LDR X0, [X9]
	0x03CA7774 BL 0x1C16D6C
	0x03CA7778 LDR X8, [X20 + 0x128]
	0x03CA777C CBZ X8, 0x3CA77D8
	0x03CA7780 ADRP X23, 0x4BA000
	0x03CA7784 LDR X23, [X23 + 0x2D8]
	0x03CA7788 MOV X21, X0
	0x03CA778C MOV X22, X31
	0x03CA7790 ADD X24, X0, 0x20
	0x03CA7794 LDRSW X9, [X8 + 0x18]
	0x03CA7798 CMP X22, X9
	0x03CA779C B.GE 0x3CA77DC
	0x03CA77A0 LDR X2, [X23]
	0x03CA77A4 MOV X0, X8
	0x03CA77A8 MOV W1, W22
	0x03CA77AC BL 0x301BCCC
	0x03CA77B0 CBZ X0, 0x3CA7864
	0x03CA77B4 CBZ X21, 0x3CA785C
	0x03CA77B8 LDR W8, [X21 + 0x18]
	0x03CA77BC CMP X22, X8
	0x03CA77C0 B.CS 0x3CA7860
	0x03CA77C4 LDR W8, [X0 + 0x14]
	0x03CA77C8 STR W8, [X24, X22, LSL #2]
	0x03CA77CC LDR X8, [X20 + 0x128]
	0x03CA77D0 ADD X22, X22, 0x1
	0x03CA77D4 CBNZ X8, 0x3CA7794
	0x03CA77D8 BL 0x1C16F20
	0x03CA77DC MOVZ W1, 0x1
	0x03CA77E0 MOV X0, X20
	0x03CA77E4 BL 0x3CA722C
	0x03CA77E8 MOVZ W1, 0x1
	0x03CA77EC MOV X0, X20
	0x03CA77F0 BL 0x3CA74B4
	0x03CA77F4 MOV X0, X20
	0x03CA77F8 BL 0x3C9EBEC
	0x03CA77FC CBZ X21, 0x3CA7874
	0x03CA7800 LDR W8, [X21 + 0x18]
	0x03CA7804 CBZ W8, 0x3CA7820
	0x03CA7808 STR X31, [X31 + 0x8]
	0x03CA780C ADD X2, X31, 0x8
	0x03CA7810 MOVZ W3, 0x1
	0x03CA7814 MOV X0, X20
	0x03CA7818 MOV X1, X21
	0x03CA781C BL 0x3CA3834
	0x03CA7820 MOV X21, X31
	0x03CA7824 MOV X0, X19
	0x03CA7828 MOV X1, X31
	0x03CA782C MOV X2, X31
	0x03CA7830 BL 0x33C5D2C
	0x03CA7834 TBZ X0, 0x0, 0x3CA7844
	0x03CA7838 MOV X0, X19
	0x03CA783C MOV X1, X31
	0x03CA7840 BL 0x3BFEA0C
	0x03CA7844 CBNZ X21, 0x3CA786C
	0x03CA7848 LDP X20, X19, [X31 + 0x30]
	0x03CA784C LDP X22, X21, [X31 + 0x20]
	0x03CA7850 LDP X24, X23, [X31 + 0x10]
	0x03CA7854 LDR X30, [X31], #0x40
	0x03CA7858 RET
	0x03CA785C BL 0x1C16F20
	0x03CA7860 BL 0x1C16F28
	0x03CA7864 BL 0x1C16F20
	0x03CA7868 BL 0x1C16F20
	0x03CA786C MOV X0, X21
	0x03CA7870 BL 0x1C16F18
	0x03CA7874 BL 0x1C16F20
	0x03CA7878 B 0x3CA7898
	0x03CA787C B 0x3CA7898
	0x03CA7880 B 0x3CA7898
	0x03CA7884 B 0x3CA7898
	0x03CA7888 B 0x3CA7898
	0x03CA788C B 0x3CA7898
	0x03CA7890 B 0x3CA7898
	0x03CA7894 B 0x3CA7898
	0x03CA7898 MOV X20, X0
	0x03CA789C CMP W1, 0x1
	0x03CA78A0 B.NE 0x3CA78B8
	0x03CA78A4 MOV X0, X20
	0x03CA78A8 BL 0x3EB1AD0
	0x03CA78AC LDR X21, [X0]
	0x03CA78B0 BL 0x3EB1AE0
	0x03CA78B4 B 0x3CA7824
	0x03CA78B8 MOV X21, X31
	0x03CA78BC B 0x3CA78C4
	0x03CA78C0 MOV X20, X0
	0x03CA78C4 MOV X0, X19
	0x03CA78C8 MOV X1, X31
	0x03CA78CC MOV X2, X31
	0x03CA78D0 BL 0x33C5D2C
	0x03CA78D4 TBZ X0, 0x0, 0x3CA78E4
	0x03CA78D8 MOV X0, X19
	0x03CA78DC MOV X1, X31
	0x03CA78E0 BL 0x3BFEA0C
	0x03CA78E4 CBNZ X21, 0x3CA78F0
	0x03CA78E8 MOV X0, X20
	0x03CA78EC BL 0x1D2C690
	0x03CA78F0 MOV X0, X21
	0x03CA78F4 BL 0x1C16F18
	0x03CA78F8 BL 0x1990590
	0x03CA78FC STP X29, X30, [X31 - 0x60]!
	0x03CA7900 STP X28, X27, [X31 + 0x10]
	0x03CA7904 STP X26, X25, [X31 + 0x20]
	0x03CA7908 STP X24, X23, [X31 + 0x30]
	0x03CA790C STP X22, X21, [X31 + 0x40]
	0x03CA7910 STP X20, X19, [X31 + 0x50]
	0x03CA7914 ADRP X20, 0x740000
	0x03CA7918 ADRP X28, 0x4B1000
	0x03CA791C ADRP X27, 0x4B1000
	0x03CA7920 ADRP X21, 0x4BA000
	0x03CA7924 ADRP X26, 0x4BA000
	0x03CA7928 ADRP X25, 0x4BA000
	0x03CA792C ADRP X29, 0x4BA000
	0x03CA7930 ADRP X24, 0x452000
	0x03CA7934 ADRP X23, 0x452000
	0x03CA7938 ADRP X22, 0x4A7000
	0x03CA793C LDR X28, [X28 + 0xEB0]
	0x03CA7940 LDR X27, [X27 + 0xEB8]
	0x03CA7944 LDR X21, [X21 + 0x568]
	0x03CA7948 LDR X26, [X26 + 0x570]
	0x03CA794C LDR X25, [X25 + 0x508]
	0x03CA7950 LDRB W8, [X20 + 0x2FF]
	0x03CA7954 LDR X29, [X29 + 0x578]
	0x03CA7958 LDR X24, [X24 + 0x1E8]
	0x03CA795C LDR X23, [X23 + 0x1E0]
	0x03CA7960 LDR X22, [X22 + 0x838]
	0x03CA7964 MOV X19, X0
	0x03CA7968 TBNZ X8, 0x0, 0x3CA79EC
	0x03CA796C ADRP X0, 0x4BA000
	0x03CA7970 LDR X0, [X0 + 0x508]
	0x03CA7974 BL 0x1C16CF4
	0x03CA7978 ADRP X0, 0x4BA000
	0x03CA797C LDR X0, [X0 + 0x578]
	0x03CA7980 BL 0x1C16CF4
	0x03CA7984 ADRP X0, 0x4A7000
	0x03CA7988 LDR X0, [X0 + 0x830]
	0x03CA798C BL 0x1C16CF4
	0x03CA7990 ADRP X0, 0x4A7000
	0x03CA7994 LDR X0, [X0 + 0x838]
	0x03CA7998 BL 0x1C16CF4
	0x03CA799C ADRP X0, 0x452000
	0x03CA79A0 LDR X0, [X0 + 0x1E0]
	0x03CA79A4 BL 0x1C16CF4
	0x03CA79A8 ADRP X0, 0x4B1000
	0x03CA79AC LDR X0, [X0 + 0xEB8]
	0x03CA79B0 BL 0x1C16CF4
	0x03CA79B4 ADRP X0, 0x4BA000
	0x03CA79B8 LDR X0, [X0 + 0x570]
	0x03CA79BC BL 0x1C16CF4
	0x03CA79C0 ADRP X0, 0x4B1000
	0x03CA79C4 LDR X0, [X0 + 0xEB0]
	0x03CA79C8 BL 0x1C16CF4
	0x03CA79CC ADRP X0, 0x452000
	0x03CA79D0 LDR X0, [X0 + 0x1E8]
	0x03CA79D4 BL 0x1C16CF4
	0x03CA79D8 ADRP X0, 0x4BA000
	0x03CA79DC LDR X0, [X0 + 0x568]
	0x03CA79E0 BL 0x1C16CF4
	0x03CA79E4 MOVZ W8, 0x1
	0x03CA79E8 STRB W8, [X20 + 0x2FF]
	0x03CA79EC LDR X0, [X28]
	0x03CA79F0 BL 0x1C16F10
	0x03CA79F4 LDR X1, [X27]
	0x03CA79F8 MOV X20, X0
	0x03CA79FC BL 0x301B7C4
	0x03CA7A00 STR X20, [X19 + 0x118]
	0x03CA7A04 LDR X0, [X21]
	0x03CA7A08 BL 0x1C16F10
	0x03CA7A0C LDR X1, [X26]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X28
	005 Move [X31+264], X27
	006 Move [X31+272], X26
	007 Move [X31+280], X25
	008 Move [X31+288], X24
	009 Move [X31+296], X23
	010 Move [X31+304], X22
	011 Move [X31+312], X21
	012 Move [X31+320], X20
	013 Move [X31+328], X19
	014 Move X21, 0x741000
	015 Move X19, 0x4BB000
	016 Move W8, [X21+760]
	017 Move X19, [X19+600]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x4BB000
	024 Move X0, [X0+824]
	025 Call 0x1C17CF4
	026 Move X0, 0x4BB000
	027 Move X0, [X0+840]
	028 Call 0x1C17CF4
	029 Move X0, 0x4BB000
	030 Move X0, [X0+600]
	031 Call 0x1C17CF4
	032 Move X0, 0x4B2000
	033 Move X0, [X0+3008]
	034 Call 0x1C17CF4
	035 Move X0, 0x4BB000
	036 Move X0, [X0+1288]
	037 Call 0x1C17CF4
	038 Move X0, 0x4BB000
	039 Move X0, [X0+1296]
	040 Call 0x1C17CF4
	041 Move X0, 0x4A4000
	042 Move X0, [X0+2896]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+760], W8
	046 Move X0, [X19]
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X31+140], W31
	049 Move [X31+124], V0
	050 Move [X31+96], V0
	051 Move [X31+104], V0
	052 Move [X31+64], X31
	053 Move [X31+72], X31
	054 Move [X31+80], W31
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X19]
	060 Move X8, [X0+184]
	061 Move X21, 0x4B2000
	062 Move X1, X31
	063 Move X2, X31
	064 Move X19, [X8+32]
	065 Move X21, [X21+3008]
	066 Move X0, X19
	067 Call IntPtr.op_Inequality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {75}
	072 Move X0, X19
	073 Move X1, X31
	074 Call ProfilerUnsafeUtility.BeginSample, X0
	075 Move X0, [X21]
	076 Move X21, [X20+432]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Add X1, X31, 140
	082 Move X0, X21
	083 Move X2, X31
	084 Call FontEngine.GetGlyphPairAdjustmentRecords, X0, X1
	085 Move X8, [X20+440]
	086 Compare X8, 0
	087 JumpIfEqual {300}
	088 Move W9, [X8+28]
	089 Move X21, X0
	090 Add W9, W9, 1
	091 Move [X8+24], W31
	092 Move [X8+28], W9
	093 Compare X0, 0
	094 JumpIfEqual {260}
	095 Move W8, [X21+24]
	096 Compare W8, 0
	097 JumpIfEqual {259}
	098 Move X9, [X20+368]
	099 Compare X9, 0
	100 JumpIfNotEqual {109}
	101 Move X8, 0x4BB000
	102 Move X8, [X8+1288]
	103 Move X0, [X8]
	104 Call 0x1C17F10
	105 Move X22, X0
	106 Call FontFeatureTable..ctor, X0
	107 Move [X20+368], X22
	108 Move W8, [X21+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X26, 0x4BB000
	111 Move X27, 0x4BB000
	112 Move X29, 0x4BB000
	113 Move X26, [X26+840]
	114 Move X27, [X27+1296]
	115 Move X29, [X29+824]
	116 Move X24, X31
	117 Add X25, X31, 144
	118 Add X22, X21, 32
	119 Move W28, 44
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X8, X31, 192
	122 Move X0, X22
	123 Move X1, X31
	124 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	125 Move V0, [X31+12]
	126 Move W8, [X31+208]
	127 Move [X31+4], V0
	128 Move [X31+80], W8
	129 Add X0, X31, 64
	130 Move X1, X31
	131 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	132 Compare W0, 0
	133 JumpIfEqual {259}
	134 Move W8, [X21+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X8, X31, 192
	137 Move X0, X22
	138 Move X1, X31
	139 Call GlyphPairAdjustmentRecord.get_secondAdjustmentRecord, X0
	140 Move V0, [X31+12]
	141 Move W8, [X31+208]
	142 Move [X31+4], V0
	143 Move [X31+80], W8
	144 Add X0, X31, 64
	145 Move X1, X31
	146 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	147 Move W8, [X21+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W23, W0
	150 Add X8, X31, 192
	151 Move X0, X22
	152 Move X1, X31
	153 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	154 Move V0, [X31+12]
	155 Move W8, [X31+208]
	156 Move [X31+4], V0
	157 Move [X31+80], W8
	158 Add X0, X31, 64
	159 Move X1, X31
	160 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	161 Move X8, [X20+368]
	162 Compare X8, 0
	163 JumpIfEqual {288}
	164 Move X8, [X8+64]
	165 Compare X8, 0
	166 JumpIfEqual {290}
	167 Move X2, [X26]
	168 Or W23, W0, W23
	169 Move X0, X8
	170 Move W1, W23
	171 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.ContainsKey, X0, X1
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {255}
	176 Move W8, [X21+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 Move V2, [X22]
	180 Move V1, [X22+16]
	181 Move [X31+124], V0
	182 Move [X31+96], V2
	183 Move [X31+104], V1
	184 Move X8, [X20+368]
	185 Compare X8, 0
	186 JumpIfEqual {297}
	187 Move X0, [X8+32]
	188 Move V0, [X31+96]
	189 Move V1, [X31+112]
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 Move [X31+16], V0
	192 Move [X31+24], V1
	193 Move [X31+44], V2
	194 Compare X0, 0
	195 JumpIfEqual {296}
	196 Move V0, [X31+16]
	197 Move V1, [X31+32]
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 Move X10, [X27]
	200 Move [X31+144], V0
	201 Move [X31+152], V1
	202 Move [X25+28], V2
	203 Move W9, [X0+28]
	204 Move X8, [X0+16]
	205 Add W9, W9, 1
	206 Move [X0+28], W9
	207 Compare X8, 0
	208 JumpIfEqual {295}
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Move W11, [X8+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add W10, W9, 1
	213 Move [X0+24], W10
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 Move V2, [X31+144]
	216 Move V1, [X31+160]
	217 NotImplemented "Instruction NOP not yet implemented."
	218 NotImplemented "Instruction MADD not yet implemented."
	219 Move [X8+60], V0
	220 Move [X8+32], V2
	221 Move [X8+40], V1
	222 Move X8, [X10+32]
	223 Move V0, [X31+144]
	224 Move V1, [X31+160]
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 Move X8, [X8+192]
	227 Move X2, [X8+112]
	228 Move [X31+192], V0
	229 Move [X31+200], V1
	230 Move [X25+76], V2
	231 Add X1, X31, 192
	232 Call List`1<GlyphPairAdjustmentRecord>.AddWithResize, X0, X1
	233 Move X8, [X20+368]
	234 Compare X8, 0
	235 JumpIfEqual {294}
	236 Move X0, [X8+64]
	237 Move V0, [X31+96]
	238 Move V1, [X31+112]
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 Move [X31+144], V0
	241 Move [X31+152], V1
	242 Move [X25+28], V2
	243 Compare X0, 0
	244 JumpIfEqual {293}
	245 Move V0, [X31+144]
	246 Move V1, [X31+160]
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 Move X3, [X29]
	249 Move [X31+192], V0
	250 Move [X31+200], V1
	251 Move [X25+76], V2
	252 Add X2, X31, 192
	253 Move W1, W23
	254 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.Add, X0, X1, X2
	255 Move X8, [X21+24]
	256 Add X24, X24, 1
	257 Add X22, X22, 44
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X21, X31
	260 Move X0, X19
	261 Move X1, X31
	262 Move X2, X31
	263 Call IntPtr.op_Inequality, X0, X1
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {271}
	268 Move X0, X19
	269 Move X1, X31
	270 Call ProfilerUnsafeUtility.EndSample, X0
	271 Compare X21, 0
	272 JumpIfNotEqual {298}
	273 Move X20, [X31+320]
	274 Move X19, [X31+328]
	275 Move X22, [X31+304]
	276 Move X21, [X31+312]
	277 Move X24, [X31+288]
	278 Move X23, [X31+296]
	279 Move X26, [X31+272]
	280 Move X25, [X31+280]
	281 Move X28, [X31+256]
	282 Move X27, [X31+264]
	283 Move X29, [X31+240]
	284 Move X30, [X31+248]
	285 Add X31, X31, 336
	286 Return 
	287 Call 0x1C17F28
	288 Call 0x1C17F20
	289 Call 0x1C17F28
	290 Call 0x1C17F20
	291 Call 0x1C17F28
	292 Call 0x1C17F28
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Move X0, X21
	299 Call 0x1C17F18
	300 Call 0x1C17F20
	301 Move X20, X0
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X0, X20
	304 Call 0x3EB2AD0
	305 Move X21, [X0]
	306 Call 0x3EB2AE0
	307 Move X21, X31
	308 Move X20, X0
	309 Move X0, X19
	310 Move X1, X31
	311 Move X2, X31
	312 Call IntPtr.op_Inequality, X0, X1
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfNotEqual {320}
	317 Move X0, X19
	318 Move X1, X31
	319 Call ProfilerUnsafeUtility.EndSample, X0
	320 Compare X21, 0
	321 JumpIfNotEqual {324}
	322 Move X0, X20
	323 Call 0x1D2D690
	324 Move X0, X21
	325 Call 0x1C17F18
	326 Call 0x1991590

Method: System.Void UpdateGlyphAdjustmentRecords(System.UInt32[] glyphIndexes)

Disassembly:
	0x03CA7C68 ADRP X0, 0x4BA000
	0x03CA7C6C LDR X0, [X0 + 0x5B0]
	0x03CA7C70 BL 0x1C16CF4
	0x03CA7C74 ADRP X0, 0x4BA000
	0x03CA7C78 LDR X0, [X0 + 0x588]
	0x03CA7C7C BL 0x1C16CF4
	0x03CA7C80 ADRP X0, 0x4BA000
	0x03CA7C84 LDR X0, [X0 + 0x5A8]
	0x03CA7C88 BL 0x1C16CF4
	0x03CA7C8C ADRP X0, 0x4BA000
	0x03CA7C90 LDR X0, [X0 + 0x590]
	0x03CA7C94 BL 0x1C16CF4
	0x03CA7C98 ADRP X0, 0x4BA000
	0x03CA7C9C LDR X0, [X0 + 0x5E0]
	0x03CA7CA0 BL 0x1C16CF4
	0x03CA7CA4 ADRP X0, 0x4BA000
	0x03CA7CA8 LDR X0, [X0 + 0x598]
	0x03CA7CAC BL 0x1C16CF4
	0x03CA7CB0 ADRP X0, 0x4BA000
	0x03CA7CB4 LDR X0, [X0 + 0x580]
	0x03CA7CB8 BL 0x1C16CF4
	0x03CA7CBC MOVZ W8, 0x1
	0x03CA7CC0 STRB W8, [X27 + 0x300]
	0x03CA7CC4 LDR X0, [X28]
	0x03CA7CC8 MOVZ W1, 0x1
	0x03CA7CCC MOV W2, W31
	0x03CA7CD0 MOV W3, W31
	0x03CA7CD4 MOV X4, X31
	0x03CA7CD8 BL 0x3BFE7FC
	0x03CA7CDC LDR X8, [X20]
	0x03CA7CE0 MOVZ W1, 0x1
	0x03CA7CE4 MOV W2, W31
	0x03CA7CE8 MOV W3, W31
	0x03CA7CEC LDR X8, [X8 + 0xB8]
	0x03CA7CF0 MOV X4, X31
	0x03CA7CF4 STR X0, [X8]
	0x03CA7CF8 LDR X0, [X26]
	0x03CA7CFC BL 0x3BFE7FC
	0x03CA7D00 LDR X8, [X20]
	0x03CA7D04 MOVZ W1, 0x1
	0x03CA7D08 MOV W2, W31
	0x03CA7D0C MOV W3, W31
	0x03CA7D10 LDR X8, [X8 + 0xB8]
	0x03CA7D14 MOV X4, X31
	0x03CA7D18 STR X0, [X8 + 0x8]
	0x03CA7D1C LDR X0, [X25]
	0x03CA7D20 BL 0x3BFE7FC
	0x03CA7D24 LDR X8, [X20]
	0x03CA7D28 MOVZ W1, 0x1
	0x03CA7D2C MOV W2, W31
	0x03CA7D30 MOV W3, W31
	0x03CA7D34 LDR X8, [X8 + 0xB8]
	0x03CA7D38 MOV X4, X31
	0x03CA7D3C STR X0, [X8 + 0x10]
	0x03CA7D40 LDR X0, [X19]
	0x03CA7D44 BL 0x3BFE7FC
	0x03CA7D48 LDR X8, [X20]
	0x03CA7D4C MOVZ W1, 0x1
	0x03CA7D50 MOV W2, W31
	0x03CA7D54 MOV W3, W31
	0x03CA7D58 LDR X8, [X8 + 0xB8]
	0x03CA7D5C MOV X4, X31
	0x03CA7D60 STR X0, [X8 + 0x18]
	0x03CA7D64 LDR X0, [X24]
	0x03CA7D68 BL 0x3BFE7FC
	0x03CA7D6C LDR X8, [X20]
	0x03CA7D70 MOVZ W1, 0x1
	0x03CA7D74 MOV W2, W31
	0x03CA7D78 MOV W3, W31
	0x03CA7D7C LDR X8, [X8 + 0xB8]
	0x03CA7D80 MOV X4, X31
	0x03CA7D84 STR X0, [X8 + 0x20]
	0x03CA7D88 LDR X0, [X23]
	0x03CA7D8C BL 0x3BFE7FC
	0x03CA7D90 LDR X8, [X20]
	0x03CA7D94 MOVZ W1, 0x1
	0x03CA7D98 MOV W2, W31
	0x03CA7D9C MOV W3, W31
	0x03CA7DA0 LDR X8, [X8 + 0xB8]
	0x03CA7DA4 MOV X4, X31
	0x03CA7DA8 STR X0, [X8 + 0x28]
	0x03CA7DAC LDR X0, [X29]
	0x03CA7DB0 BL 0x3BFE7FC
	0x03CA7DB4 LDR X8, [X20]
	0x03CA7DB8 MOVZ W1, 0x1
	0x03CA7DBC MOV W2, W31
	0x03CA7DC0 MOV W3, W31
	0x03CA7DC4 LDR X8, [X8 + 0xB8]
	0x03CA7DC8 MOV X4, X31
	0x03CA7DCC STR X0, [X8 + 0x30]
	0x03CA7DD0 ADRP X8, 0x4BA000
	0x03CA7DD4 LDR X8, [X8 + 0x5D8]
	0x03CA7DD8 LDR X0, [X8]
	0x03CA7DDC BL 0x3BFE7FC
	0x03CA7DE0 LDR X8, [X20]
	0x03CA7DE4 MOVZ W1, 0x1
	0x03CA7DE8 MOV W2, W31
	0x03CA7DEC MOV W3, W31
	0x03CA7DF0 LDR X8, [X8 + 0xB8]
	0x03CA7DF4 MOV X4, X31
	0x03CA7DF8 STR X0, [X8 + 0x38]
	0x03CA7DFC ADRP X8, 0x4BA000
	0x03CA7E00 LDR X8, [X8 + 0x5E0]
	0x03CA7E04 LDR X0, [X8]
	0x03CA7E08 BL 0x3BFE7FC
	0x03CA7E0C LDR X8, [X20]
	0x03CA7E10 ADRP X9, 0x4B1000
	0x03CA7E14 LDR X8, [X8 + 0xB8]
	0x03CA7E18 STR X0, [X8 + 0x40]
	0x03CA7E1C LDR X9, [X9 + 0xF20]
	0x03CA7E20 LDR X9, [X9]
	0x03CA7E24 STR X9, [X8 + 0x48]
	0x03CA7E28 ADRP X8, 0x4BA000
	0x03CA7E2C LDR X8, [X8 + 0x5D0]
	0x03CA7E30 LDR X0, [X8]
	0x03CA7E34 BL 0x1C16F10
	0x03CA7E38 ADRP X8, 0x4BA000
	0x03CA7E3C LDR X8, [X8 + 0x5B8]
	0x03CA7E40 MOV X19, X0
	0x03CA7E44 LDR X1, [X8]
	0x03CA7E48 BL 0x301B7C4
	0x03CA7E4C LDR X8, [X20]
	0x03CA7E50 LDR X8, [X8 + 0xB8]
	0x03CA7E54 STR X19, [X8 + 0x58]
	0x03CA7E58 LDR X0, [X22]
	0x03CA7E5C BL 0x1C16F10
	0x03CA7E60 LDR X1, [X21]
	0x03CA7E64 MOV X19, X0
	0x03CA7E68 BL 0x2DA9EF4
	0x03CA7E6C LDR X8, [X20]
	0x03CA7E70 LDR X8, [X8 + 0xB8]
	0x03CA7E74 STR X19, [X8 + 0x60]
	0x03CA7E78 ADRP X8, 0x4BA000
	0x03CA7E7C LDR X8, [X8 + 0x5C8]
	0x03CA7E80 LDR X0, [X8]
	0x03CA7E84 BL 0x1C16F10
	0x03CA7E88 ADRP X8, 0x4BA000
	0x03CA7E8C LDR X8, [X8 + 0x5C0]
	0x03CA7E90 MOV X19, X0
	0x03CA7E94 LDR X1, [X8]
	0x03CA7E98 BL 0x301B7C4
	0x03CA7E9C LDR X8, [X20]
	0x03CA7EA0 LDR X8, [X8 + 0xB8]
	0x03CA7EA4 STR X19, [X8 + 0x68]
	0x03CA7EA8 LDR X0, [X22]
	0x03CA7EAC BL 0x1C16F10
	0x03CA7EB0 LDR X1, [X21]
	0x03CA7EB4 MOV X19, X0
	0x03CA7EB8 BL 0x2DA9EF4
	0x03CA7EBC LDR X8, [X20]
	0x03CA7EC0 LDP X22, X21, [X31 + 0x40]
	0x03CA7EC4 LDP X24, X23, [X31 + 0x30]
	0x03CA7EC8 LDP X26, X25, [X31 + 0x20]
	0x03CA7ECC LDR X8, [X8 + 0xB8]
	0x03CA7ED0 LDP X28, X27, [X31 + 0x10]
	0x03CA7ED4 STR X19, [X8 + 0x70]
	0x03CA7ED8 LDP X20, X19, [X31 + 0x50]
	0x03CA7EDC LDP X29, X30, [X31], #0x60
	0x03CA7EE0 RET
	0x03CA7EE4 STR X30, [X31 - 0x20]!
	0x03CA7EE8 STP X20, X19, [X31 + 0x10]
	0x03CA7EEC ADRP X19, 0x740000
	0x03CA7EF0 ADRP X20, 0x4BA000
	0x03CA7EF4 LDRB W8, [X19 + 0x301]
	0x03CA7EF8 LDR X20, [X20 + 0x408]
	0x03CA7EFC TBNZ X8, 0x0, 0x3CA7F14
	0x03CA7F00 ADRP X0, 0x4BA000
	0x03CA7F04 LDR X0, [X0 + 0x408]
	0x03CA7F08 BL 0x1C16CF4
	0x03CA7F0C MOVZ W8, 0x1
	0x03CA7F10 STRB W8, [X19 + 0x301]
	0x03CA7F14 LDR X0, [X20]
	0x03CA7F18 BL 0x1C16F10
	0x03CA7F1C MOV X1, X31
	0x03CA7F20 MOV X19, X0
	0x03CA7F24 BL 0x33BDD8C
	0x03CA7F28 LDR X8, [X20]
	0x03CA7F2C LDR X8, [X8 + 0xB8]
	0x03CA7F30 STR X19, [X8]
	0x03CA7F34 LDP X20, X19, [X31 + 0x10]
	0x03CA7F38 LDR X30, [X31], #0x20
	0x03CA7F3C RET
	0x03CA7F40 MOV X1, X31
	0x03CA7F44 B 0x33BDD8C
	0x03CA7F48 STR X30, [X31 - 0x10]!
	0x03CA7F4C CBZ X1, 0x3CA7F5C
	0x03CA7F50 LDR W0, [X1 + 0x14]
	0x03CA7F54 LDR X30, [X31], #0x10
	0x03CA7F58 RET
	0x03CA7F5C BL 0x1C16F20
	0x03CA7F60 CBZ X1, 0x3CA7F70
	0x03CA7F64 MOV X0, X1
	0x03CA7F68 MOV X1, X31
	0x03CA7F6C B 0x3C9C494
	0x03CA7F70 STR X30, [X31 - 0x10]!
	0x03CA7F74 BL 0x1C16F20
	0x03CA7F78 STR X30, [X31 - 0x50]!
	0x03CA7F7C STP X26, X25, [X31 + 0x10]
	0x03CA7F80 STP X24, X23, [X31 + 0x20]
	0x03CA7F84 STP X22, X21, [X31 + 0x30]
	0x03CA7F88 STP X20, X19, [X31 + 0x40]
	0x03CA7F8C ADRP X25, 0x740000
	0x03CA7F90 LDRB W8, [X25 + 0x302]
	0x03CA7F94 MOV X19, X5
	0x03CA7F98 MOV W20, W4
	0x03CA7F9C MOV W21, W3
	0x03CA7FA0 MOV W23, W2
	0x03CA7FA4 MOV X22, X1
	0x03CA7FA8 MOV W24, W0
	0x03CA7FAC TBNZ X8, 0x0, 0x3CA7FE8
	0x03CA7FB0 ADRP X0, 0x4BA000
	0x03CA7FB4 LDR X0, [X0 + 0x5E8]
	0x03CA7FB8 BL 0x1C16CF4
	0x03CA7FBC ADRP X0, 0x453000
	0x03CA7FC0 LDR X0, [X0 + 0x678]
	0x03CA7FC4 BL 0x1C16CF4
	0x03CA7FC8 ADRP X0, 0x453000
	0x03CA7FCC LDR X0, [X0 + 0x688]
	0x03CA7FD0 BL 0x1C16CF4
	0x03CA7FD4 ADRP X0, 0x44D000
	0x03CA7FD8 LDR X0, [X0 + 0xE08]
	0x03CA7FDC BL 0x1C16CF4
	0x03CA7FE0 MOVZ W8, 0x1
	0x03CA7FE4 STRB W8, [X25 + 0x302]
	0x03CA7FE8 TBZ X23, 0x0, 0x3CA8048
	0x03CA7FEC ADRP X26, 0x4BA000
	0x03CA7FF0 LDR X26, [X26 + 0x5E8]
	0x03CA7FF4 LDR X8, [X26]
	0x03CA7FF8 LDR X8, [X8 + 0xB8]
	0x03CA7FFC LDR X0, [X8]
	0x03CA8000 CBZ X0, 0x3CA8018
	0x03CA8004 ADRP X8, 0x452000
	0x03CA8008 LDR X8, [X8 + 0x678]
	0x03CA800C LDR X1, [X8]
	0x03CA8010 BL 0x2DAA53C
	0x03CA8014 B 0x3CA8048
	0x03CA8018 ADRP X8, 0x44C000
	0x03CA801C LDR X8, [X8 + 0xE08]
	0x03CA8020 LDR X0, [X8]
	0x03CA8024 BL 0x1C16F10
	0x03CA8028 ADRP X8, 0x452000
	0x03CA802C LDR X8, [X8 + 0x688]
	0x03CA8030 MOV X25, X0
	0x03CA8034 LDR X1, [X8]
	0x03CA8038 BL 0x2DA9EF4
	0x03CA803C LDR X8, [X26]
	0x03CA8040 LDR X8, [X8 + 0xB8]
	0x03CA8044 STR X25, [X8]
	0x03CA8048 AND W2, W23, 0x1
	0x03CA804C MOV W0, W24
	0x03CA8050 MOV X1, X22
	0x03CA8054 MOV W3, W21
	0x03CA8058 MOV W4, W20
	0x03CA805C MOV X5, X19
	0x03CA8060 LDP X20, X19, [X31 + 0x40]
	0x03CA8064 LDP X22, X21, [X31 + 0x30]
	0x03CA8068 LDP X24, X23, [X31 + 0x20]
	0x03CA806C LDP X26, X25, [X31 + 0x10]
	0x03CA8070 LDR X30, [X31], #0x50
	0x03CA8074 B 0x3CA8078
	0x03CA8078 SUB X31, X31, 0x70
	0x03CA807C STP X29, X30, [X31 + 0x10]
	0x03CA8080 STP X28, X27, [X31 + 0x20]
	0x03CA8084 STP X26, X25, [X31 + 0x30]
	0x03CA8088 STP X24, X23, [X31 + 0x40]
	0x03CA808C STP X22, X21, [X31 + 0x50]
	0x03CA8090 STP X20, X19, [X31 + 0x60]
	0x03CA8094 ADRP X19, 0x73F000
	0x03CA8098 LDRB W8, [X19 + 0x303]
	0x03CA809C MOV X29, X5
	0x03CA80A0 MOV W20, W4
	0x03CA80A4 MOV W21, W3
	0x03CA80A8 MOV W24, W2
	0x03CA80AC MOV X23, X1
	0x03CA80B0 MOV W22, W0
	0x03CA80B4 TBNZ X8, 0x0, 0x3CA8114
	0x03CA80B8 ADRP X0, 0x4B9000
	0x03CA80BC LDR X0, [X0 + 0x5F0]
	0x03CA80C0 BL 0x1C16CF4
	0x03CA80C4 ADRP X0, 0x4B9000
	0x03CA80C8 LDR X0, [X0 + 0x5F8]
	0x03CA80CC BL 0x1C16CF4
	0x03CA80D0 ADRP X0, 0x4B9000
	0x03CA80D4 LDR X0, [X0 + 0x5E8]
	0x03CA80D8 BL 0x1C16CF4
	0x03CA80DC ADRP X0, 0x44D000
	0x03CA80E0 LDR X0, [X0 + 0x9D8]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X28
	005 Move [X31+264], X27
	006 Move [X31+272], X26
	007 Move [X31+280], X25
	008 Move [X31+288], X24
	009 Move [X31+296], X23
	010 Move [X31+304], X22
	011 Move [X31+312], X21
	012 Move [X31+320], X20
	013 Move [X31+328], X19
	014 Move X22, 0x741000
	015 Move X19, 0x4BB000
	016 Move W8, [X22+761]
	017 Move X19, [X19+600]
	018 Move X21, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x4BB000
	025 Move X0, [X0+824]
	026 Call 0x1C17CF4
	027 Move X0, 0x4BB000
	028 Move X0, [X0+840]
	029 Call 0x1C17CF4
	030 Move X0, 0x4BB000
	031 Move X0, [X0+600]
	032 Call 0x1C17CF4
	033 Move X0, 0x4B2000
	034 Move X0, [X0+3008]
	035 Call 0x1C17CF4
	036 Move X0, 0x4BB000
	037 Move X0, [X0+1288]
	038 Call 0x1C17CF4
	039 Move X0, 0x4BB000
	040 Move X0, [X0+1296]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+761], W8
	044 Move X0, [X19]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+124], V0
	047 Move [X31+96], V0
	048 Move [X31+104], V0
	049 Move [X31+64], X31
	050 Move [X31+72], X31
	051 Move [X31+80], W31
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X19]
	057 Move X8, [X0+184]
	058 Move X22, 0x4B2000
	059 Move X1, X31
	060 Move X2, X31
	061 Move X19, [X8+32]
	062 Move X22, [X22+3008]
	063 Move X0, X19
	064 Call IntPtr.op_Inequality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {72}
	069 Move X0, X19
	070 Move X1, X31
	071 Call ProfilerUnsafeUtility.BeginSample, X0
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X21
	078 Move X1, X31
	079 Call FontEngine.GetGlyphPairAdjustmentTable, X0
	080 Move X21, X0
	081 Compare X0, 0
	082 JumpIfEqual {248}
	083 Move W8, [X21+24]
	084 Compare W8, 0
	085 JumpIfEqual {247}
	086 Move X9, [X20+368]
	087 Compare X9, 0
	088 JumpIfNotEqual {97}
	089 Move X8, 0x4BB000
	090 Move X8, [X8+1288]
	091 Move X0, [X8]
	092 Call 0x1C17F10
	093 Move X22, X0
	094 Call FontFeatureTable..ctor, X0
	095 Move [X20+368], X22
	096 Move W8, [X21+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X26, 0x4BB000
	099 Move X27, 0x4BB000
	100 Move X29, 0x4BB000
	101 Move X26, [X26+840]
	102 Move X27, [X27+1296]
	103 Move X29, [X29+824]
	104 Move X24, X31
	105 Add X25, X31, 144
	106 Add X22, X21, 32
	107 Move W28, 44
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X8, X31, 192
	110 Move X0, X22
	111 Move X1, X31
	112 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	113 Move V0, [X31+12]
	114 Move W8, [X31+208]
	115 Move [X31+4], V0
	116 Move [X31+80], W8
	117 Add X0, X31, 64
	118 Move X1, X31
	119 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	120 Compare W0, 0
	121 JumpIfEqual {247}
	122 Move W8, [X21+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X8, X31, 192
	125 Move X0, X22
	126 Move X1, X31
	127 Call GlyphPairAdjustmentRecord.get_secondAdjustmentRecord, X0
	128 Move V0, [X31+12]
	129 Move W8, [X31+208]
	130 Move [X31+4], V0
	131 Move [X31+80], W8
	132 Add X0, X31, 64
	133 Move X1, X31
	134 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	135 Move W8, [X21+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W23, W0
	138 Add X8, X31, 192
	139 Move X0, X22
	140 Move X1, X31
	141 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	142 Move V0, [X31+12]
	143 Move W8, [X31+208]
	144 Move [X31+4], V0
	145 Move [X31+80], W8
	146 Add X0, X31, 64
	147 Move X1, X31
	148 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	149 Move X8, [X20+368]
	150 Compare X8, 0
	151 JumpIfEqual {276}
	152 Move X8, [X8+64]
	153 Compare X8, 0
	154 JumpIfEqual {278}
	155 Move X2, [X26]
	156 Or W23, W0, W23
	157 Move X0, X8
	158 Move W1, W23
	159 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.ContainsKey, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {243}
	164 Move W8, [X21+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 Move V2, [X22]
	168 Move V1, [X22+16]
	169 Move [X31+124], V0
	170 Move [X31+96], V2
	171 Move [X31+104], V1
	172 Move X8, [X20+368]
	173 Compare X8, 0
	174 JumpIfEqual {285}
	175 Move X0, [X8+32]
	176 Move V0, [X31+96]
	177 Move V1, [X31+112]
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 Move [X31+16], V0
	180 Move [X31+24], V1
	181 Move [X31+44], V2
	182 Compare X0, 0
	183 JumpIfEqual {284}
	184 Move V0, [X31+16]
	185 Move V1, [X31+32]
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 Move X10, [X27]
	188 Move [X31+144], V0
	189 Move [X31+152], V1
	190 Move [X25+28], V2
	191 Move W9, [X0+28]
	192 Move X8, [X0+16]
	193 Add W9, W9, 1
	194 Move [X0+28], W9
	195 Compare X8, 0
	196 JumpIfEqual {283}
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Move W11, [X8+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add W10, W9, 1
	201 Move [X0+24], W10
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 Move V2, [X31+144]
	204 Move V1, [X31+160]
	205 NotImplemented "Instruction NOP not yet implemented."
	206 NotImplemented "Instruction MADD not yet implemented."
	207 Move [X8+60], V0
	208 Move [X8+32], V2
	209 Move [X8+40], V1
	210 Move X8, [X10+32]
	211 Move V0, [X31+144]
	212 Move V1, [X31+160]
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 Move X8, [X8+192]
	215 Move X2, [X8+112]
	216 Move [X31+192], V0
	217 Move [X31+200], V1
	218 Move [X25+76], V2
	219 Add X1, X31, 192
	220 Call List`1<GlyphPairAdjustmentRecord>.AddWithResize, X0, X1
	221 Move X8, [X20+368]
	222 Compare X8, 0
	223 JumpIfEqual {282}
	224 Move X0, [X8+64]
	225 Move V0, [X31+96]
	226 Move V1, [X31+112]
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 Move [X31+144], V0
	229 Move [X31+152], V1
	230 Move [X25+28], V2
	231 Compare X0, 0
	232 JumpIfEqual {281}
	233 Move V0, [X31+144]
	234 Move V1, [X31+160]
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 Move X3, [X29]
	237 Move [X31+192], V0
	238 Move [X31+200], V1
	239 Move [X25+76], V2
	240 Add X2, X31, 192
	241 Move W1, W23
	242 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.Add, X0, X1, X2
	243 Move X8, [X21+24]
	244 Add X24, X24, 1
	245 Add X22, X22, 44
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X21, X31
	248 Move X0, X19
	249 Move X1, X31
	250 Move X2, X31
	251 Call IntPtr.op_Inequality, X0, X1
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {259}
	256 Move X0, X19
	257 Move X1, X31
	258 Call ProfilerUnsafeUtility.EndSample, X0
	259 Compare X21, 0
	260 JumpIfNotEqual {286}
	261 Move X20, [X31+320]
	262 Move X19, [X31+328]
	263 Move X22, [X31+304]
	264 Move X21, [X31+312]
	265 Move X24, [X31+288]
	266 Move X23, [X31+296]
	267 Move X26, [X31+272]
	268 Move X25, [X31+280]
	269 Move X28, [X31+256]
	270 Move X27, [X31+264]
	271 Move X29, [X31+240]
	272 Move X30, [X31+248]
	273 Add X31, X31, 336
	274 Return 
	275 Call 0x1C17F28
	276 Call 0x1C17F20
	277 Call 0x1C17F28
	278 Call 0x1C17F20
	279 Call 0x1C17F28
	280 Call 0x1C17F28
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Move X0, X21
	287 Call 0x1C17F18
	288 Move X20, X0
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X0, X20
	291 Call 0x3EB2AD0
	292 Move X21, [X0]
	293 Call 0x3EB2AE0
	294 Move X21, X31
	295 Move X20, X0
	296 Move X0, X19
	297 Move X1, X31
	298 Move X2, X31
	299 Call IntPtr.op_Inequality, X0, X1
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfNotEqual {307}
	304 Move X0, X19
	305 Move X1, X31
	306 Call ProfilerUnsafeUtility.EndSample, X0
	307 Compare X21, 0
	308 JumpIfNotEqual {311}
	309 Move X0, X20
	310 Call 0x1D2D690
	311 Move X0, X21
	312 Call 0x1C17F18
	313 Call 0x1991590

Method: System.Void UpdateGlyphAdjustmentRecords(System.Collections.Generic.List`1<System.UInt32> glyphIndexes)

Disassembly:
	0x03CA80E4 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Void UpdateGlyphAdjustmentRecords(System.Collections.Generic.List`1<System.UInt32> newGlyphIndexes, System.Collections.Generic.List`1<System.UInt32> allGlyphIndexes)

Disassembly:
	0x03CA80E8 ADRP X0, 0x4B9000

ISIL:
	001 Return 

Method: System.Void CopyListDataToArray(System.Collections.Generic.List`1<T> srcList, ref T[] dstArray)

Disassembly:
	0x021E4CBC LDR X0, [X8]
	0x021E4CC0 LDRB W8, [X0 + 0x135]
	0x021E4CC4 TBNZ X8, 0x0, 0x21E4CCC
	0x021E4CC8 BL 0x1C5C684
	0x021E4CCC BL 0x1C16F10
	0x021E4CD0 LDR X8, [X19 + 0x38]
	0x021E4CD4 MOV X21, X0
	0x021E4CD8 LDR X1, [X8 + 0x8]
	0x021E4CDC BL 0x301B7C4
	0x021E4CE0 LDR X24, [X23]
	0x021E4CE4 CBZ X24, 0x21E4E64
	0x021E4CE8 LDR W8, [X24 + 0x18]
	0x021E4CEC CMP W8, 0x1
	0x021E4CF0 B.LT 0x21E4E30
	0x021E4CF4 MOV W25, W31
	0x021E4CF8 AND W22, W22, 0x1
	0x021E4CFC CMP W25, W8
	0x021E4D00 B.CS 0x21E4E70
	0x021E4D04 ADD X8, X24, W25, 0x3, SXTW
	0x021E4D08 LDR X0, [X8 + 0x20]
	0x021E4D0C CBZ X0, 0x21E4E64
	0x021E4D10 LDR X8, [X19 + 0x38]
	0x021E4D14 MOV W1, W22
	0x021E4D18 MOV X2, X20
	0x021E4D1C LDR X3, [X8 + 0x10]
	0x021E4D20 BL 0x21E61D0
	0x021E4D24 CBZ X20, 0x21E4E64
	0x021E4D28 LDR X8, [X19 + 0x38]
	0x021E4D2C MOV X0, X20
	0x021E4D30 LDR X1, [X8 + 0x18]
	0x021E4D34 ADD X8, X31, 0x8
	0x021E4D38 BL 0x301CB58
	0x021E4D3C LDUR V0, [X31 + 0x8]
	0x021E4D40 LDR X8, [X31 + 0x18]
	0x021E4D44 STR V0, [X31 + 0x2]
	0x021E4D48 STR X8, [X31 + 0x30]
	0x021E4D4C LDR X8, [X19 + 0x38]
	0x021E4D50 LDR X1, [X8 + 0x48]
	0x021E4D54 ADD X0, X31, 0x20
	0x021E4D58 BL 0x2BC4350
	0x021E4D5C TBZ X0, 0x0, 0x21E4DC0
	0x021E4D60 CBZ X21, 0x21E4DFC
	0x021E4D64 LDR X9, [X19 + 0x38]
	0x021E4D68 LDR W10, [X21 + 0x1C]
	0x021E4D6C LDR X1, [X31 + 0x30]
	0x021E4D70 LDR X8, [X21 + 0x10]
	0x021E4D74 LDR X9, [X9 + 0x40]
	0x021E4D78 ADD W10, W10, 0x1
	0x021E4D7C STR W10, [X21 + 0x1C]
	0x021E4D80 CBZ X8, 0x21E4E04
	0x021E4D84 LDRSW X10, [X21 + 0x18]
	0x021E4D88 LDR W11, [X8 + 0x18]
	0x021E4D8C CMP W10, W11
	0x021E4D90 B.CS 0x21E4DA8
	0x021E4D94 ADD W9, W10, 0x1
	0x021E4D98 ADD X8, X8, X10, 0x3, LSL
	0x021E4D9C STR W9, [X21 + 0x18]
	0x021E4DA0 STR X1, [X8 + 0x20]
	0x021E4DA4 B 0x21E4D4C
	0x021E4DA8 LDR X8, [X9 + 0x20]
	0x021E4DAC LDR X8, [X8 + 0xC0]
	0x021E4DB0 LDR X2, [X8 + 0x70]
	0x021E4DB4 MOV X0, X21
	0x021E4DB8 BL 0x301BF90
	0x021E4DBC B 0x21E4D4C
	0x021E4DC0 MOV X23, X31
	0x021E4DC4 MOVZ W26, 0x6
	0x021E4DC8 LDR X8, [X19 + 0x38]
	0x021E4DCC ADD X0, X31, 0x20
	0x021E4DD0 LDR X1, [X8 + 0x50]
	0x021E4DD4 BL 0x2BC434C
	0x021E4DD8 CBNZ X23, 0x21E4E68
	0x021E4DDC CMP W26, 0x6
	0x021E4DE0 B.EQ 0x21E4DE8
	0x021E4DE4 CBNZ W26, 0x21E4E48
	0x021E4DE8 LDR W8, [X24 + 0x18]
	0x021E4DEC ADD W25, W25, 0x1
	0x021E4DF0 CMP W25, W8
	0x021E4DF4 B.LT 0x21E4CFC
	0x021E4DF8 B 0x21E4E30
	0x021E4DFC BL 0x1C16F20
	0x021E4E00 B 0x21E4E80
	0x021E4E04 BL 0x1C16F20
	0x021E4E08 B 0x21E4E80
	0x021E4E0C B 0x21E4E14
	0x021E4E10 B 0x21E4E14
	0x021E4E14 CMP W1, 0x1
	0x021E4E18 B.NE 0x21E4E74
	0x021E4E1C BL 0x3EB1AD0
	0x021E4E20 LDR X23, [X0]
	0x021E4E24 BL 0x3EB1AE0
	0x021E4E28 MOV W26, W31
	0x021E4E2C B 0x21E4DC8
	0x021E4E30 CBZ X21, 0x21E4E64
	0x021E4E34 LDR X8, [X19 + 0x38]
	0x021E4E38 MOV X0, X21
	0x021E4E3C LDR X1, [X8 + 0x58]
	0x021E4E40 BL 0x301DDC4
	0x021E4E44 B 0x21E4E48
	0x021E4E48 LDP X20, X19, [X31 + 0x80]
	0x021E4E4C LDP X22, X21, [X31 + 0x70]
	0x021E4E50 LDP X24, X23, [X31 + 0x60]
	0x021E4E54 LDP X26, X25, [X31 + 0x50]
	0x021E4E58 LDR X30, [X31 + 0x40]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X19, X3
	018 Move X20, X2
	019 Move X21, X1
	020 Move [X29-8], X8
	021 Move X8, [X3+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X19
	025 Call 0x1C5D6E0
	026 Move X8, [X19+56]
	027 Move X9, [X8+48]
	028 Move W22, [X9+252]
	029 Add X9, X31, 0
	030 Add X10, X22, 15
	031 And X10, X10, 0x1FFFFFFFF
	032 Subtract X23, X9, X10
	033 Add X31, X23, 0
	034 Compare X21, 0
	035 JumpIfEqual {120}
	036 Move X1, [X8+8]
	037 Move X0, X21
	038 Move X8, [X1]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X9, [X20]
	041 Move X8, [X19+56]
	042 Move W24, W0
	043 Move [X29-40], X25
	044 Compare X9, 0
	045 JumpIfEqual {51}
	046 Move X2, [X8+32]
	047 Move X0, X20
	048 Move W1, W24
	049 Move X8, [X2]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, [X8+24]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move W1, W24
	059 Call 0x1C17D6C
	060 Move [X20], X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X26, X31
	063 Move W24, W24
	064 Subtract X27, X29, 12
	065 Move X8, [X19+56]
	066 Move X28, [X20]
	067 Subtract X3, X29, 32
	068 Move X2, X21
	069 Move X1, [X8+40]
	070 Move X4, X23
	071 Move X0, [X1]
	072 Move [X29-12], W26
	073 Move [X29-32], X27
	074 Move [X29-24], X23
	075 Move X8, [X1+16]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Compare X28, 0
	078 JumpIfEqual {120}
	079 Move W25, [X28+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X28]
	082 Move X1, X23
	083 Move X2, X22
	084 Move W8, [X8+260]
	085 NotImplemented "Instruction NOP not yet implemented."
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Add X0, X8, 32
	088 Call 0x3EB2AC0
	089 Move X8, [X19+56]
	090 Move X0, [X8+48]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {98}
	096 Call 0x1C5D684
	097 Move W25, [X28+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add X26, X26, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X8, [X8+40]
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X31, X29, 0
	106 Move X20, [X31+80]
	107 Move X19, [X31+88]
	108 Move X22, [X31+64]
	109 Move X21, [X31+72]
	110 Move X24, [X31+48]
	111 Move X23, [X31+56]
	112 Move X26, [X31+32]
	113 Move X25, [X31+40]
	114 Move X28, [X31+16]
	115 Move X27, [X31+24]
	116 Move X29, [X31+96]
	117 Move X30, [X31+104]
	118 Return 
	119 Call 0x1C17F28
	120 Call 0x1C17F20
	121 Call 0x3EB2B20

Method: System.Void ClearFontAssetData(System.Boolean setAtlasSizeToZero = False)

Disassembly:
	0x03CA80EC LDR X0, [X0 + 0x4B0]
	0x03CA80F0 BL 0x1C16CF4
	0x03CA80F4 ADRP X0, 0x4B9000
	0x03CA80F8 LDR X0, [X0 + 0x4B8]
	0x03CA80FC BL 0x1C16CF4
	0x03CA8100 ADRP X0, 0x44B000
	0x03CA8104 LDR X0, [X0 + 0x598]
	0x03CA8108 BL 0x1C16CF4
	0x03CA810C MOVZ W8, 0x1
	0x03CA8110 STRB W8, [X19 + 0x303]
	0x03CA8114 ADRP X27, 0x4B9000
	0x03CA8118 LDR X27, [X27 + 0x5F8]
	0x03CA811C STRB W31, [X29]
	0x03CA8120 STR X31, [X31 + 0x8]
	0x03CA8124 TBNZ X21, 0x1, 0x3CA8138
	0x03CA8128 CMP W20, 0x190
	0x03CA812C B.NE 0x3CA8138
	0x03CA8130 CBNZ X23, 0x3CA82E4
	0x03CA8134 B 0x3CA84B8
	0x03CA8138 CBZ X23, 0x3CA84B8
	0x03CA813C LDR X8, [X23 + 0x180]
	0x03CA8140 CMP W20, 0x190
	0x03CA8144 B.LE 0x3CA8170
	0x03CA8148 CMP W20, 0x258
	0x03CA814C B.LE 0x3CA8188
	0x03CA8150 CMP W20, 0x2BC
	0x03CA8154 B.EQ 0x3CA81BC
	0x03CA8158 CMP W20, 0x320
	0x03CA815C B.EQ 0x3CA81C4
	0x03CA8160 CMP W20, 0x384
	0x03CA8164 B.NE 0x3CA81CC
	0x03CA8168 MOVZ W9, 0x9
	0x03CA816C B 0x3CA81D0
	0x03CA8170 CMP W20, 0xC8
	0x03CA8174 B.LE 0x3CA81A4
	0x03CA8178 CMP W20, 0x12C
	0x03CA817C MOVZ W9, 0x3
	0x03CA8180 CINC X9, X9, NE
	0x03CA8184 B 0x3CA81D0
	0x03CA8188 MOVZ W9, 0x4
	0x03CA818C MOVZ W10, 0x6
	0x03CA8190 CSEL X9, X10, X9, EQ
	0x03CA8194 CMP W20, 0x1F4
	0x03CA8198 MOVZ W10, 0x5
	0x03CA819C CSEL X9, X10, X9, EQ
	0x03CA81A0 B 0x3CA81D0
	0x03CA81A4 MOVZ W9, 0x4
	0x03CA81A8 MOVZ W10, 0x2
	0x03CA81AC CSEL X9, X10, X9, EQ
	0x03CA81B0 CMP W20, 0x64
	0x03CA81B4 CSINC X9, X9, X31, NE
	0x03CA81B8 B 0x3CA81D0
	0x03CA81BC MOVZ W9, 0x7
	0x03CA81C0 B 0x3CA81D0
	0x03CA81C4 MOVZ W9, 0x8
	0x03CA81C8 B 0x3CA81D0
	0x03CA81CC MOVZ W9, 0x4
	0x03CA81D0 CBZ X8, 0x3CA84B8
	0x03CA81D4 LDR W10, [X8 + 0x18]
	0x03CA81D8 CMP W9, W10
	0x03CA81DC B.CS 0x3CA84BC
	0x03CA81E0 ADRP X19, 0x44B000
	0x03CA81E4 LDR X19, [X19 + 0x598]
	0x03CA81E8 ADD X8, X8, X9, 0x4, LSL
	0x03CA81EC ADD X9, X8, 0x28
	0x03CA81F0 ADD X8, X8, 0x20
	0x03CA81F4 LDR X0, [X19]
	0x03CA81F8 ANDS W31, W21, 0x2
	0x03CA81FC CSEL X8, X8, X9, EQ
	0x03CA8200 LDR X25, [X8]
	0x03CA8204 LDR W9, [X0 + 0xE0]
	0x03CA8208 CBNZ W9, 0x3CA8210
	0x03CA820C BL 0x1C16DFC
	0x03CA8210 MOV X0, X25
	0x03CA8214 MOV X1, X31
	0x03CA8218 MOV X2, X31
	0x03CA821C BL 0x3C354F8
	0x03CA8220 TBZ X0, 0x0, 0x3CA82E4
	0x03CA8224 CBZ X25, 0x3CA84B8
	0x03CA8228 LDR X0, [X25 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x740000
	007 Move X19, 0x4BA000
	008 Move W8, [X22+762]
	009 Move X19, [X19+600]
	010 Move W21, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BA000
	017 Move X0, [X0+600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+762], W8
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X1, X31
	029 Move X2, X31
	030 Move X19, [X8+48]
	031 Move X0, X19
	032 Call IntPtr.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {40}
	037 Move X0, X19
	038 Move X1, X31
	039 Call ProfilerUnsafeUtility.BeginSample, X0
	040 Move W1, 1
	041 Move X0, X20
	042 Call FontAsset.ClearFontAssetTables, X0, X1
	043 And W1, W21, 1
	044 Move X0, X20
	045 Call FontAsset.ClearAtlasTextures, X0, X1
	046 Move X0, X20
	047 Call FontAsset.ReadFontAssetDefinition, X0
	048 Move X20, X31
	049 Move X0, X19
	050 Move X1, X31
	051 Move X2, X31
	052 Call IntPtr.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {60}
	057 Move X0, X19
	058 Move X1, X31
	059 Call ProfilerUnsafeUtility.EndSample, X0
	060 Compare X20, 0
	061 JumpIfNotEqual {68}
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 
	068 Move X0, X20
	069 Call 0x1C17F18
	070 Move X21, X0
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X21
	073 Call 0x3EB2AD0
	074 Move X20, [X0]
	075 Call 0x3EB2AE0
	076 Move X20, X31
	077 Move X21, X0
	078 Move X0, X19
	079 Move X1, X31
	080 Move X2, X31
	081 Call IntPtr.op_Inequality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {89}
	086 Move X0, X19
	087 Move X1, X31
	088 Call ProfilerUnsafeUtility.EndSample, X0
	089 Compare X20, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X21
	092 Call 0x1D2D690
	093 Move X0, X20
	094 Call 0x1C17F18
	095 Call 0x1991590

Method: System.Void ClearFontAssetDataInternal(System.Boolean clearFontFeatures = False)

Disassembly:
	0x03CA86A0 MOV W21, W2
	0x03CA86A4 MOV X20, X1
	0x03CA86A8 MOV W19, W0
	0x03CA86AC TBNZ X8, 0x0, 0x3CA8724
	0x03CA86B0 ADRP X0, 0x4B9000
	0x03CA86B4 LDR X0, [X0 + 0x600]
	0x03CA86B8 BL 0x1C16CF4
	0x03CA86BC ADRP X0, 0x4B9000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W1, W1, 1
	004 Move X19, X0
	005 Call FontAsset.ClearFontAssetTables, X0, X1
	006 Move W1, 1
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call FontAsset.ClearAtlasTextures, X0, X1
	011 Return 

Method: System.Void UpdateFontAssetData()

Disassembly:
	0x03CA86C0 LDR X0, [X0 + 0x5E8]
	0x03CA86C4 BL 0x1C16CF4
	0x03CA86C8 ADRP X0, 0x44D000
	0x03CA86CC LDR X0, [X0 + 0x9D8]
	0x03CA86D0 BL 0x1C16CF4
	0x03CA86D4 ADRP X0, 0x452000
	0x03CA86D8 LDR X0, [X0 + 0x678]
	0x03CA86DC BL 0x1C16CF4
	0x03CA86E0 ADRP X0, 0x452000
	0x03CA86E4 LDR X0, [X0 + 0x688]
	0x03CA86E8 BL 0x1C16CF4
	0x03CA86EC ADRP X0, 0x44C000
	0x03CA86F0 LDR X0, [X0 + 0xE08]
	0x03CA86F4 BL 0x1C16CF4
	0x03CA86F8 ADRP X0, 0x4B9000
	0x03CA86FC LDR X0, [X0 + 0x608]
	0x03CA8700 BL 0x1C16CF4
	0x03CA8704 ADRP X0, 0x4B9000
	0x03CA8708 LDR X0, [X0 + 0x610]
	0x03CA870C BL 0x1C16CF4
	0x03CA8710 ADRP X0, 0x44B000
	0x03CA8714 LDR X0, [X0 + 0x598]
	0x03CA8718 BL 0x1C16CF4
	0x03CA871C MOVZ W8, 0x1
	0x03CA8720 STRB W8, [X22 + 0x305]
	0x03CA8724 LDR X0, [X23]
	0x03CA8728 STR X31, [X31 + 0x8]
	0x03CA872C LDR W8, [X0 + 0xE0]
	0x03CA8730 CBNZ W8, 0x3CA8738
	0x03CA8734 BL 0x1C16DFC
	0x03CA8738 MOV X0, X20
	0x03CA873C MOV X1, X31
	0x03CA8740 MOV X2, X31
	0x03CA8744 BL 0x3C3883C
	0x03CA8748 MOV W8, W0
	0x03CA874C MOV X0, X31
	0x03CA8750 TBNZ X8, 0x0, 0x3CA88F4
	0x03CA8754 CBZ X20, 0x3CA8910
	0x03CA8758 LDR X0, [X20 + 0xB8]
	0x03CA875C CBNZ X0, 0x3CA876C
	0x03CA8760 MOV X0, X20
	0x03CA8764 BL 0x3CAB33C
	0x03CA8768 LDR X0, [X20 + 0xB8]
	0x03CA876C CBZ X0, 0x3CA8910
	0x03CA8770 ADRP X8, 0x4B9000
	0x03CA8774 LDR X8, [X8 + 0x600]
	0x03CA8778 ADD X2, X31, 0x8
	0x03CA877C MOV W1, W19
	0x03CA8780 LDR X3, [X8]
	0x03CA8784 BL 0x2B10A7C
	0x03CA8788 TBZ X0, 0x0, 0x3CA8794
	0x03CA878C LDR X0, [X31 + 0x8]
	0x03CA8790 B 0x3CA88F4
	0x03CA8794 TBZ X21, 0x0, 0x3CA88F0
	0x03CA8798 ADRP X24, 0x4B9000
	0x03CA879C LDR X24, [X24 + 0x5E8]
	0x03CA87A0 LDR X8, [X24]
	0x03CA87A4 LDR X8, [X8 + 0xB8]
	0x03CA87A8 LDR X0, [X8]
	0x03CA87AC CBZ X0, 0x3CA87C4
	0x03CA87B0 ADRP X8, 0x452000
	0x03CA87B4 LDR X8, [X8 + 0x678]
	0x03CA87B8 LDR X1, [X8]
	0x03CA87BC BL 0x2DAA53C
	0x03CA87C0 B 0x3CA87F4
	0x03CA87C4 ADRP X8, 0x44C000
	0x03CA87C8 LDR X8, [X8 + 0xE08]
	0x03CA87CC LDR X0, [X8]
	0x03CA87D0 BL 0x1C16F10
	0x03CA87D4 ADRP X8, 0x452000
	0x03CA87D8 LDR X8, [X8 + 0x688]
	0x03CA87DC MOV X21, X0
	0x03CA87E0 LDR X1, [X8]
	0x03CA87E4 BL 0x2DA9EF4
	0x03CA87E8 LDR X8, [X24]
	0x03CA87EC LDR X8, [X8 + 0xB8]
	0x03CA87F0 STR X21, [X8]
	0x03CA87F4 LDR X8, [X24]
	0x03CA87F8 LDR W1, [X20 + 0x20]
	0x03CA87FC LDR X8, [X8 + 0xB8]
	0x03CA8800 LDR X21, [X8]
	0x03CA8804 CBNZ W1, 0x3CA881C
	0x03CA8808 MOV X0, X20
	0x03CA880C MOV X1, X31
	0x03CA8810 BL 0x3C385F8
	0x03CA8814 MOV W1, W0
	0x03CA8818 STR W0, [X20 + 0x20]
	0x03CA881C CBZ X21, 0x3CA8910
	0x03CA8820 ADRP X25, 0x44D000
	0x03CA8824 LDR X25, [X25 + 0x9D8]
	0x03CA8828 MOV X0, X21
	0x03CA882C LDR X2, [X25]
	0x03CA8830 BL 0x2DAB03C
	0x03CA8834 LDR X20, [X20 + 0xD0]
	0x03CA8838 CBZ X20, 0x3CA88F0
	0x03CA883C LDR W26, [X20 + 0x18]
	0x03CA8840 CMP W26, 0x1
	0x03CA8844 B.LT 0x3CA88F0
	0x03CA8848 ADRP X27, 0x4B9000
	0x03CA884C LDR X27, [X27 + 0x610]
	0x03CA8850 MOV W21, W31
	0x03CA8854 LDR X2, [X27]
	0x03CA8858 MOV X0, X20
	0x03CA885C MOV W1, W21
	0x03CA8860 BL 0x301BCCC
	0x03CA8864 LDR X8, [X23]
	0x03CA8868 MOV X22, X0
	0x03CA886C LDR W9, [X8 + 0xE0]
	0x03CA8870 CBNZ W9, 0x3CA887C
	0x03CA8874 MOV X0, X8
	0x03CA8878 BL 0x1C16DFC
	0x03CA887C MOV X0, X22
	0x03CA8880 MOV X1, X31
	0x03CA8884 MOV X2, X31
	0x03CA8888 BL 0x3C3883C
	0x03CA888C TBNZ X0, 0x0, 0x3CA88E4
	0x03CA8890 CBZ X22, 0x3CA8910
	0x03CA8894 LDR W1, [X22 + 0x20]
	0x03CA8898 CBNZ W1, 0x3CA88B0
	0x03CA889C MOV X0, X22
	0x03CA88A0 MOV X1, X31
	0x03CA88A4 BL 0x3C385F8
	0x03CA88A8 MOV W1, W0
	0x03CA88AC STR W0, [X22 + 0x20]
	0x03CA88B0 LDR X8, [X24]
	0x03CA88B4 LDR X8, [X8 + 0xB8]
	0x03CA88B8 LDR X0, [X8]
	0x03CA88BC CBZ X0, 0x3CA8910
	0x03CA88C0 LDR X2, [X25]
	0x03CA88C4 BL 0x2DAB03C
	0x03CA88C8 TBZ X0, 0x0, 0x3CA88E4
	0x03CA88CC MOVZ W2, 0x1
	0x03CA88D0 MOV W0, W19
	0x03CA88D4 MOV X1, X22
	0x03CA88D8 BL 0x3CA8938
	0x03CA88DC STR X0, [X31 + 0x8]
	0x03CA88E0 CBNZ X0, 0x3CA88F4
	0x03CA88E4 ADD W21, W21, 0x1
	0x03CA88E8 CMP W26, W21
	0x03CA88EC B.NE 0x3CA8854
	0x03CA88F0 MOV X0, X31
	0x03CA88F4 LDP X20, X19, [X31 + 0x50]
	0x03CA88F8 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x740000
	009 Move X19, 0x4BA000
	010 Move W8, [X21+763]
	011 Move X19, [X19+600]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x4BA000
	018 Move X0, [X0+600]
	019 Call 0x1C17CF4
	020 Move X0, 0x4BA000
	021 Move X0, [X0+720]
	022 Call 0x1C17CF4
	023 Move X0, 0x4BA000
	024 Move X0, [X0+728]
	025 Call 0x1C17CF4
	026 Move X0, 0x475000
	027 Move X0, [X0+3336]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+763], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X1, X31
	039 Move X2, X31
	040 Move X19, [X8+56]
	041 Move X0, X19
	042 Call IntPtr.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {50}
	047 Move X0, X19
	048 Move X1, X31
	049 Call ProfilerUnsafeUtility.BeginSample, X0
	050 Move X8, [X20+296]
	051 Compare X8, 0
	052 JumpIfEqual {129}
	053 Move X9, 0x475000
	054 Move X9, [X9+3336]
	055 Move W1, [X8+24]
	056 Move X0, [X9]
	057 Call 0x1C17D6C
	058 Move X8, [X20+296]
	059 Compare X8, 0
	060 JumpIfEqual {84}
	061 Move X23, 0x4BA000
	062 Move X23, [X23+728]
	063 Move X21, X0
	064 Move X22, X31
	065 Add X24, X0, 32
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X2, [X23]
	069 Move X0, X8
	070 Move W1, W22
	071 Call List`1<Object>.get_Item, X0, X1
	072 Compare X0, 0
	073 JumpIfEqual {128}
	074 Compare X21, 0
	075 JumpIfEqual {126}
	076 Move W8, [X21+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W8, [X0+20]
	079 Move [X24], W8
	080 Move X8, [X20+296]
	081 Add X22, X22, 1
	082 Compare X8, 0
	083 JumpIfNotEqual {66}
	084 Call 0x1C17F20
	085 Move W1, 1
	086 Move X0, X20
	087 Call FontAsset.ClearFontAssetTables, X0, X1
	088 Move W1, 1
	089 Move X0, X20
	090 Call FontAsset.ClearAtlasTextures, X0, X1
	091 Move X0, X20
	092 Call FontAsset.ReadFontAssetDefinition, X0
	093 Compare X21, 0
	094 JumpIfEqual {132}
	095 Move W8, [X21+24]
	096 Compare W8, 0
	097 JumpIfEqual {104}
	098 Move [X31+8], X31
	099 Add X2, X31, 8
	100 Move W3, 1
	101 Move X0, X20
	102 Move X1, X21
	103 Call FontAsset.TryAddCharacters, X0, X1, X2, X3
	104 Move X21, X31
	105 Move X0, X19
	106 Move X1, X31
	107 Move X2, X31
	108 Call IntPtr.op_Inequality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {116}
	113 Move X0, X19
	114 Move X1, X31
	115 Call ProfilerUnsafeUtility.EndSample, X0
	116 Compare X21, 0
	117 JumpIfNotEqual {130}
	118 Move X20, [X31+48]
	119 Move X19, [X31+56]
	120 Move X22, [X31+32]
	121 Move X21, [X31+40]
	122 Move X24, [X31+16]
	123 Move X23, [X31+24]
	124 Move X30, [X31+64]
	125 Return 
	126 Call 0x1C17F20
	127 Call 0x1C17F28
	128 Call 0x1C17F20
	129 Call 0x1C17F20
	130 Move X0, X21
	131 Call 0x1C17F18
	132 Call 0x1C17F20
	133 Move X20, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X20
	136 Call 0x3EB2AD0
	137 Move X21, [X0]
	138 Call 0x3EB2AE0
	139 Move X21, X31
	140 Move X20, X0
	141 Move X0, X19
	142 Move X1, X31
	143 Move X2, X31
	144 Call IntPtr.op_Inequality, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {152}
	149 Move X0, X19
	150 Move X1, X31
	151 Call ProfilerUnsafeUtility.EndSample, X0
	152 Compare X21, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X20
	155 Call 0x1D2D690
	156 Move X0, X21
	157 Call 0x1C17F18
	158 Call 0x1991590

Method: System.Void ClearFontAssetTables(System.Boolean clearFontFeatures)

Disassembly:
	0x03CA822C CBNZ X0, 0x3CA823C
	0x03CA8230 MOV X0, X25
	0x03CA8234 BL 0x3C9EBEC
	0x03CA8238 LDR X0, [X25 + 0x130]
	0x03CA823C CBZ X0, 0x3CA84B8
	0x03CA8240 LDR X3, [X27]
	0x03CA8244 ADD X2, X31, 0x8
	0x03CA8248 MOV W1, W22
	0x03CA824C BL 0x2B10A7C
	0x03CA8250 TBZ X0, 0x0, 0x3CA82B0
	0x03CA8254 LDR X8, [X31 + 0x8]
	0x03CA8258 CBZ X8, 0x3CA84B8
	0x03CA825C LDR X0, [X19]
	0x03CA8260 LDR X26, [X8 + 0x18]
	0x03CA8264 LDR W9, [X0 + 0xE0]
	0x03CA8268 CBNZ W9, 0x3CA8270
	0x03CA826C BL 0x1C16DFC
	0x03CA8270 MOV X0, X26
	0x03CA8274 MOV X1, X31
	0x03CA8278 MOV X2, X31
	0x03CA827C BL 0x3C354F8
	0x03CA8280 TBNZ X0, 0x0, 0x3CA82D8
	0x03CA8284 LDR X0, [X25 + 0x130]
	0x03CA8288 CBNZ X0, 0x3CA8298
	0x03CA828C MOV X0, X25
	0x03CA8290 BL 0x3C9EBEC
	0x03CA8294 LDR X0, [X25 + 0x130]
	0x03CA8298 CBZ X0, 0x3CA84B8
	0x03CA829C ADRP X8, 0x4B9000
	0x03CA82A0 LDR X8, [X8 + 0x5F0]
	0x03CA82A4 MOV W1, W22
	0x03CA82A8 LDR X2, [X8]
	0x03CA82AC BL 0x2B10458
	0x03CA82B0 LDR W8, [X25 + 0xA8]
	0x03CA82B4 SUB W8, W8, 0x1
	0x03CA82B8 CMP W8, 0x1
	0x03CA82BC B.HI 0x3CA82E4
	0x03CA82C0 ADD X2, X31, 0x8
	0x03CA82C4 MOV X0, X25
	0x03CA82C8 MOV W1, W22
	0x03CA82CC MOV W3, W31
	0x03CA82D0 BL 0x3CA1DE0
	0x03CA82D4 TBZ X0, 0x0, 0x3CA82E4
	0x03CA82D8 MOVZ W8, 0x1
	0x03CA82DC STRB W8, [X29]
	0x03CA82E0 B 0x3CA839C
	0x03CA82E4 LDR X0, [X23 + 0x130]
	0x03CA82E8 CBNZ X0, 0x3CA82F8
	0x03CA82EC MOV X0, X23
	0x03CA82F0 BL 0x3C9EBEC
	0x03CA82F4 LDR X0, [X23 + 0x130]
	0x03CA82F8 CBZ X0, 0x3CA84B8
	0x03CA82FC LDR X3, [X27]
	0x03CA8300 ADD X2, X31, 0x8
	0x03CA8304 MOV W1, W22
	0x03CA8308 BL 0x2B10A7C
	0x03CA830C TBZ X0, 0x0, 0x3CA8374
	0x03CA8310 LDR X8, [X31 + 0x8]
	0x03CA8314 CBZ X8, 0x3CA84B8
	0x03CA8318 ADRP X9, 0x44B000
	0x03CA831C LDR X9, [X9 + 0x598]
	0x03CA8320 LDR X25, [X8 + 0x18]
	0x03CA8324 LDR X0, [X9]
	0x03CA8328 LDR W9, [X0 + 0xE0]
	0x03CA832C CBNZ W9, 0x3CA8334
	0x03CA8330 BL 0x1C16DFC
	0x03CA8334 MOV X0, X25
	0x03CA8338 MOV X1, X31
	0x03CA833C MOV X2, X31
	0x03CA8340 BL 0x3C354F8
	0x03CA8344 TBNZ X0, 0x0, 0x3CA839C
	0x03CA8348 LDR X0, [X23 + 0x130]
	0x03CA834C CBNZ X0, 0x3CA835C
	0x03CA8350 MOV X0, X23
	0x03CA8354 BL 0x3C9EBEC
	0x03CA8358 LDR X0, [X23 + 0x130]
	0x03CA835C CBZ X0, 0x3CA84B8
	0x03CA8360 ADRP X8, 0x4B9000
	0x03CA8364 LDR X8, [X8 + 0x5F0]
	0x03CA8368 MOV W1, W22
	0x03CA836C LDR X2, [X8]
	0x03CA8370 BL 0x2B10458
	0x03CA8374 LDR W8, [X23 + 0xA8]
	0x03CA8378 SUB W8, W8, 0x1
	0x03CA837C CMP W8, 0x1
	0x03CA8380 B.HI 0x3CA83A4
	0x03CA8384 ADD X2, X31, 0x8
	0x03CA8388 MOV X0, X23
	0x03CA838C MOV W1, W22
	0x03CA8390 MOV W3, W31
	0x03CA8394 BL 0x3CA1DE0
	0x03CA8398 TBZ X0, 0x0, 0x3CA83A4
	0x03CA839C LDR X0, [X31 + 0x8]
	0x03CA83A0 B 0x3CA8498
	0x03CA83A4 LDR X8, [X31 + 0x8]
	0x03CA83A8 MOV X0, X31
	0x03CA83AC CBNZ X8, 0x3CA8498
	0x03CA83B0 TBZ X24, 0x0, 0x3CA8498
	0x03CA83B4 LDR X23, [X23 + 0x178]
	0x03CA83B8 CBZ X23, 0x3CA8494
	0x03CA83BC LDR W26, [X23 + 0x18]
	0x03CA83C0 CMP W26, 0x1
	0x03CA83C4 B.LT 0x3CA8494
	0x03CA83C8 ADRP X27, 0x4B9000
	0x03CA83CC ADRP X28, 0x44B000
	0x03CA83D0 ADRP X19, 0x44D000
	0x03CA83D4 LDR X27, [X27 + 0x4B8]
	0x03CA83D8 LDR X28, [X28 + 0x598]
	0x03CA83DC LDR X19, [X19 + 0x9D8]
	0x03CA83E0 MOV W24, W31
	0x03CA83E4 LDR X2, [X27]
	0x03CA83E8 MOV X0, X23
	0x03CA83EC MOV W1, W24
	0x03CA83F0 BL 0x301BCCC
	0x03CA83F4 LDR X8, [X28]
	0x03CA83F8 MOV X25, X0
	0x03CA83FC LDR W9, [X8 + 0xE0]
	0x03CA8400 CBNZ W9, 0x3CA840C
	0x03CA8404 MOV X0, X8
	0x03CA8408 BL 0x1C16DFC
	0x03CA840C MOV X0, X25
	0x03CA8410 MOV X1, X31
	0x03CA8414 MOV X2, X31
	0x03CA8418 BL 0x3C3883C
	0x03CA841C TBNZ X0, 0x0, 0x3CA8488
	0x03CA8420 CBZ X25, 0x3CA84B8
	0x03CA8424 LDR W1, [X25 + 0x20]
	0x03CA8428 CBNZ W1, 0x3CA8440
	0x03CA842C MOV X0, X25
	0x03CA8430 MOV X1, X31
	0x03CA8434 BL 0x3C385F8
	0x03CA8438 MOV W1, W0
	0x03CA843C STR W0, [X25 + 0x20]
	0x03CA8440 ADRP X8, 0x4B9000
	0x03CA8444 LDR X8, [X8 + 0x5E8]
	0x03CA8448 LDR X8, [X8]
	0x03CA844C LDR X8, [X8 + 0xB8]
	0x03CA8450 LDR X0, [X8]
	0x03CA8454 CBZ X0, 0x3CA84B8
	0x03CA8458 LDR X2, [X19]
	0x03CA845C BL 0x2DAB03C
	0x03CA8460 TBZ X0, 0x0, 0x3CA8488
	0x03CA8464 MOVZ W2, 0x1
	0x03CA8468 MOV W0, W22
	0x03CA846C MOV X1, X25
	0x03CA8470 MOV W3, W21
	0x03CA8474 MOV W4, W20
	0x03CA8478 MOV X5, X29
	0x03CA847C BL 0x3CA8078
	0x03CA8480 STR X0, [X31 + 0x8]
	0x03CA8484 CBNZ X0, 0x3CA8498
	0x03CA8488 ADD W24, W24, 0x1
	0x03CA848C CMP W26, W24
	0x03CA8490 B.NE 0x3CA83E4
	0x03CA8494 MOV X0, X31
	0x03CA8498 LDP X20, X19, [X31 + 0x60]
	0x03CA849C LDP X22, X21, [X31 + 0x50]
	0x03CA84A0 LDP X24, X23, [X31 + 0x40]
	0x03CA84A4 LDP X26, X25, [X31 + 0x30]
	0x03CA84A8 LDP X28, X27, [X31 + 0x20]
	0x03CA84AC LDP X29, X30, [X31 + 0x10]
	0x03CA84B0 ADD X31, X31, 0x70

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x740000
	008 Move W8, [X21+764]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x4B1000
	016 Move X0, [X0+3016]
	017 Call 0x1C17CF4
	018 Move X0, 0x4BA000
	019 Move X0, [X0+1352]
	020 Call 0x1C17CF4
	021 Move X0, 0x4BA000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move X0, 0x4B1000
	025 Move X0, [X0+3728]
	026 Call 0x1C17CF4
	027 Move X0, 0x4BA000
	028 Move X0, [X0+1360]
	029 Call 0x1C17CF4
	030 Move X0, 0x4B1000
	031 Move X0, [X0+3120]
	032 Call 0x1C17CF4
	033 Move X0, 0x4BA000
	034 Move X0, [X0+1368]
	035 Call 0x1C17CF4
	036 Move X0, 0x4BA000
	037 Move X0, [X0+1376]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+764], W8
	041 Move X8, [X19+280]
	042 Compare X8, 0
	043 JumpIfEqual {54}
	044 Move W2, [X8+24]
	045 Move W9, [X8+28]
	046 Add W9, W9, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X8+24], W31
	049 Move [X8+28], W9
	050 Move X0, [X8+16]
	051 Move W1, W31
	052 Move X3, X31
	053 Call Array.Clear, X0, X1, X2
	054 Move X8, [X19+296]
	055 Compare X8, 0
	056 JumpIfEqual {67}
	057 Move W2, [X8+24]
	058 Move W9, [X8+28]
	059 Add W9, W9, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X8+24], W31
	062 Move [X8+28], W9
	063 Move X0, [X8+16]
	064 Move W1, W31
	065 Move X3, X31
	066 Call Array.Clear, X0, X1, X2
	067 Move X8, [X19+352]
	068 Compare X8, 0
	069 JumpIfEqual {74}
	070 Move W9, [X8+28]
	071 Add W9, W9, 1
	072 Move [X8+24], W31
	073 Move [X8+28], W9
	074 Move X21, [X19+360]
	075 Compare X21, 0
	076 JumpIfEqual {119}
	077 Move W9, [X21+28]
	078 Move W8, [X19+348]
	079 Move X22, 0x4B1000
	080 Move X22, [X22+3016]
	081 Add W9, W9, 1
	082 Move W10, 1
	083 Move [X21+24], W31
	084 Move [X21+28], W9
	085 NotImplemented "Instruction BIC not yet implemented."
	086 Move W9, [X19+336]
	087 Move W10, [X19+340]
	088 Add X0, X31, 0
	089 Move W1, W31
	090 Subtract W3, W9, W8
	091 Subtract W4, W10, W8
	092 Move W2, W31
	093 Move X5, X31
	094 Move [X31], X31
	095 Move [X31+8], X31
	096 Call GlyphRect..ctor, X0, X1, X2, X3, X4
	097 Move W10, [X21+28]
	098 Move X1, [X31]
	099 Move X2, [X31+8]
	100 Move X8, [X21+16]
	101 Move X9, [X22]
	102 Add W10, W10, 1
	103 Move [X21+28], W10
	104 Compare X8, 0
	105 JumpIfEqual {196}
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Move W11, [X8+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add W9, W10, 1
	110 Add X8, X8, X10
	111 Move [X21+24], W9
	112 Move [X8+32], X1
	113 Move [X8+40], X2
	114 Move X8, [X9+32]
	115 Move X0, X21
	116 Move X8, [X8+192]
	117 Move X3, [X8+112]
	118 Call List`1<GlyphRect>.AddWithResize, X0, X1
	119 Move X8, [X19+416]
	120 Compare X8, 0
	121 JumpIfEqual {132}
	122 Move W2, [X8+24]
	123 Move W9, [X8+28]
	124 Add W9, W9, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X8+24], W31
	127 Move [X8+28], W9
	128 Move X0, [X8+16]
	129 Move W1, W31
	130 Move X3, X31
	131 Call Array.Clear, X0, X1, X2
	132 Move X8, [X19+424]
	133 Compare X8, 0
	134 JumpIfEqual {145}
	135 Move W2, [X8+24]
	136 Move W9, [X8+28]
	137 Add W9, W9, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X8+24], W31
	140 Move [X8+28], W9
	141 Move X0, [X8+16]
	142 Move W1, W31
	143 Move X3, X31
	144 Call Array.Clear, X0, X1, X2
	145 Move TEMP, X20
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {189}
	149 Move X8, [X19+368]
	150 Compare X8, 0
	151 JumpIfEqual {189}
	152 Move X9, [X8+24]
	153 Compare X9, 0
	154 JumpIfEqual {168}
	155 Move W2, [X9+24]
	156 Move W10, [X9+28]
	157 Add W10, W10, 1
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move [X9+24], W31
	160 Move [X9+28], W10
	161 Move X0, [X9+16]
	162 Move W1, W31
	163 Move X3, X31
	164 Call Array.Clear, X0, X1, X2
	165 Move X8, [X19+368]
	166 Compare X8, 0
	167 JumpIfEqual {189}
	168 Move X9, [X8+32]
	169 Compare X9, 0
	170 JumpIfEqual {175}
	171 Move W10, [X9+28]
	172 Add W10, W10, 1
	173 Move [X9+24], W31
	174 Move [X9+28], W10
	175 Move X9, [X8+40]
	176 Compare X9, 0
	177 JumpIfEqual {182}
	178 Move W10, [X9+28]
	179 Add W10, W10, 1
	180 Move [X9+24], W31
	181 Move [X9+28], W10
	182 Move X8, [X8+48]
	183 Compare X8, 0
	184 JumpIfEqual {189}
	185 Move W9, [X8+28]
	186 Add W9, W9, 1
	187 Move [X8+24], W31
	188 Move [X8+28], W9
	189 Move X20, [X31+48]
	190 Move X19, [X31+56]
	191 Move X22, [X31+32]
	192 Move X21, [X31+40]
	193 Move X30, [X31+16]
	194 Add X31, X31, 64
	195 Return 
	196 Call 0x1C17F20

Method: System.Void ClearAtlasTextures(System.Boolean setAtlasSizeToZero = False)

Disassembly:
	0x03CA84B4 RET
	0x03CA84B8 BL 0x1C16F20
	0x03CA84BC BL 0x1C16F28
	0x03CA84C0 LDR X0, [X0 + 0x18]
	0x03CA84C4 RET
	0x03CA84C8 STP X29, X30, [X31 - 0x60]!
	0x03CA84CC STP X28, X27, [X31 + 0x10]
	0x03CA84D0 STP X26, X25, [X31 + 0x20]
	0x03CA84D4 STP X24, X23, [X31 + 0x30]
	0x03CA84D8 STP X22, X21, [X31 + 0x40]
	0x03CA84DC STP X20, X19, [X31 + 0x50]
	0x03CA84E0 ADRP X25, 0x73F000
	0x03CA84E4 LDRB W8, [X25 + 0x304]
	0x03CA84E8 MOV X19, X6
	0x03CA84EC MOV W20, W5
	0x03CA84F0 MOV W21, W4
	0x03CA84F4 MOV W22, W3
	0x03CA84F8 MOV X23, X2
	0x03CA84FC MOV W24, W0
	0x03CA8500 TBNZ X8, 0x0, 0x3CA8560
	0x03CA8504 ADRP X0, 0x4B9000
	0x03CA8508 LDR X0, [X0 + 0x5E8]
	0x03CA850C BL 0x1C16CF4
	0x03CA8510 ADRP X0, 0x452000
	0x03CA8514 LDR X0, [X0 + 0x678]
	0x03CA8518 BL 0x1C16CF4
	0x03CA851C ADRP X0, 0x452000
	0x03CA8520 LDR X0, [X0 + 0x688]
	0x03CA8524 BL 0x1C16CF4
	0x03CA8528 ADRP X0, 0x44C000
	0x03CA852C LDR X0, [X0 + 0xE08]
	0x03CA8530 BL 0x1C16CF4
	0x03CA8534 ADRP X0, 0x4B9000
	0x03CA8538 LDR X0, [X0 + 0x4B0]
	0x03CA853C BL 0x1C16CF4
	0x03CA8540 ADRP X0, 0x4B9000
	0x03CA8544 LDR X0, [X0 + 0x4B8]
	0x03CA8548 BL 0x1C16CF4
	0x03CA854C ADRP X0, 0x44B000
	0x03CA8550 LDR X0, [X0 + 0x598]
	0x03CA8554 BL 0x1C16CF4
	0x03CA8558 MOVZ W8, 0x1
	0x03CA855C STRB W8, [X25 + 0x304]
	0x03CA8560 STRB W31, [X19]
	0x03CA8564 CBZ X23, 0x3CA8658
	0x03CA8568 LDR W27, [X23 + 0x18]
	0x03CA856C CBZ W27, 0x3CA8658
	0x03CA8570 TBZ X22, 0x0, 0x3CA85D4
	0x03CA8574 ADRP X26, 0x4B9000
	0x03CA8578 LDR X26, [X26 + 0x5E8]
	0x03CA857C LDR X8, [X26]
	0x03CA8580 LDR X8, [X8 + 0xB8]
	0x03CA8584 LDR X0, [X8]
	0x03CA8588 CBZ X0, 0x3CA85A0
	0x03CA858C ADRP X8, 0x452000
	0x03CA8590 LDR X8, [X8 + 0x678]
	0x03CA8594 LDR X1, [X8]
	0x03CA8598 BL 0x2DAA53C
	0x03CA859C B 0x3CA85D0
	0x03CA85A0 ADRP X8, 0x44C000
	0x03CA85A4 LDR X8, [X8 + 0xE08]
	0x03CA85A8 LDR X0, [X8]
	0x03CA85AC BL 0x1C16F10
	0x03CA85B0 ADRP X8, 0x452000
	0x03CA85B4 LDR X8, [X8 + 0x688]
	0x03CA85B8 MOV X25, X0
	0x03CA85BC LDR X1, [X8]
	0x03CA85C0 BL 0x2DA9EF4
	0x03CA85C4 LDR X8, [X26]
	0x03CA85C8 LDR X8, [X8 + 0xB8]
	0x03CA85CC STR X25, [X8]
	0x03CA85D0 LDR W27, [X23 + 0x18]
	0x03CA85D4 CMP W27, 0x1
	0x03CA85D8 B.LT 0x3CA8658
	0x03CA85DC ADRP X28, 0x4B9000
	0x03CA85E0 ADRP X29, 0x44B000
	0x03CA85E4 LDR X28, [X28 + 0x4B8]
	0x03CA85E8 LDR X29, [X29 + 0x598]
	0x03CA85EC MOV W25, W31
	0x03CA85F0 LDR X2, [X28]
	0x03CA85F4 MOV X0, X23
	0x03CA85F8 MOV W1, W25
	0x03CA85FC BL 0x301BCCC
	0x03CA8600 LDR X8, [X29]
	0x03CA8604 MOV X26, X0
	0x03CA8608 LDR W9, [X8 + 0xE0]
	0x03CA860C CBNZ W9, 0x3CA8618
	0x03CA8610 MOV X0, X8
	0x03CA8614 BL 0x1C16DFC
	0x03CA8618 MOV X0, X26
	0x03CA861C MOV X1, X31
	0x03CA8620 MOV X2, X31
	0x03CA8624 BL 0x3C3883C
	0x03CA8628 TBNZ X0, 0x0, 0x3CA864C
	0x03CA862C AND W2, W22, 0x1
	0x03CA8630 MOV W0, W24
	0x03CA8634 MOV X1, X26
	0x03CA8638 MOV W3, W21
	0x03CA863C MOV W4, W20
	0x03CA8640 MOV X5, X19
	0x03CA8644 BL 0x3CA8078
	0x03CA8648 CBNZ X0, 0x3CA865C
	0x03CA864C ADD W25, W25, 0x1
	0x03CA8650 CMP W27, W25
	0x03CA8654 B.NE 0x3CA85F0
	0x03CA8658 MOV X0, X31
	0x03CA865C LDP X20, X19, [X31 + 0x50]
	0x03CA8660 LDP X22, X21, [X31 + 0x40]
	0x03CA8664 LDP X24, X23, [X31 + 0x30]
	0x03CA8668 LDP X26, X25, [X31 + 0x20]
	0x03CA866C LDP X28, X27, [X31 + 0x10]
	0x03CA8670 LDP X29, X30, [X31], #0x60
	0x03CA8674 RET
	0x03CA8678 SUB X31, X31, 0x60
	0x03CA867C STP X30, X27, [X31 + 0x10]
	0x03CA8680 STP X26, X25, [X31 + 0x20]
	0x03CA8684 STP X24, X23, [X31 + 0x30]
	0x03CA8688 STP X22, X21, [X31 + 0x40]
	0x03CA868C STP X20, X19, [X31 + 0x50]
	0x03CA8690 ADRP X22, 0x73F000
	0x03CA8694 ADRP X23, 0x44B000
	0x03CA8698 LDRB W8, [X22 + 0x305]
	0x03CA869C LDR X23, [X23 + 0x598]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x740000
	011 Move W8, [X21+765]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x4B1000
	019 Move X0, [X0+3720]
	020 Call 0x1C17CF4
	021 Move X0, 0x4B1000
	022 Move X0, [X0+3008]
	023 Call 0x1C17CF4
	024 Move X0, 0x44C000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+765], W8
	029 Move X8, [X19+320]
	030 Move [X19+328], W31
	031 Compare X8, 0
	032 JumpIfEqual {98}
	033 Move X25, 0x44C000
	034 Move X24, 0x4B1000
	035 Move X23, 0x4B1000
	036 Move X25, [X25+1432]
	037 Move X24, [X24+3720]
	038 Move X23, [X23+3008]
	039 Add X21, X19, 320
	040 Move W26, 5
	041 Move W9, [X8+24]
	042 Subtract X10, X26, 4
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X25]
	046 Move X22, [X8]
	047 Move W9, [X0+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X22
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {68}
	059 Move X0, [X25]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move W1, 1
	065 Move X0, X22
	066 Move X2, X31
	067 Call Object.DestroyImmediate, X0, X1
	068 Move X8, [X21]
	069 Add X26, X26, 1
	070 Compare X8, 0
	071 JumpIfNotEqual {41}
	072 Call 0x1C17F20
	073 Move X2, [X24]
	074 Move W1, 1
	075 Move X0, X21
	076 Call Array.Resize, X0, X1
	077 Move X8, [X21]
	078 Compare X8, 0
	079 JumpIfEqual {72}
	080 Move W9, [X8+24]
	081 Compare W9, 0
	082 JumpIfEqual {150}
	083 Move X21, [X8+32]
	084 Move [X19+312], X21
	085 Compare X21, 0
	086 JumpIfEqual {72}
	087 Move X8, [X21]
	088 Move X0, X21
	089 Move X9, [X8+488]
	090 Move X1, [X8+496]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X20
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {108}
	096 Move W1, 1
	097 Move W2, 1
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X24, [X31+32]
	103 Move X23, [X31+40]
	104 Move X26, [X31+16]
	105 Move X25, [X31+24]
	106 Move X30, [X31+80]
	107 Return 
	108 Move X8, [X21]
	109 Move X0, X21
	110 Move X9, [X8+392]
	111 Move X1, [X8+400]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move W1, [X19+336]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X21]
	116 Move X0, X21
	117 Move X9, [X8+424]
	118 Move X1, [X8+432]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move W2, [X19+340]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W1, [X19+336]
	123 Move W2, [X19+340]
	124 Move W3, 1
	125 Move X0, X21
	126 Move W4, W31
	127 Move X5, X31
	128 Call Texture2D.Reinitialize, X0, X1, X2, X3, X4
	129 Move X0, [X23]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X21
	135 Move X1, X31
	136 Call FontEngine.ResetAtlasTexture, X0
	137 Move X0, X21
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X26, [X31+16]
	145 Move X25, [X31+24]
	146 Move X1, X31
	147 Move X30, [X31+80]
	148 Call Texture2D.Apply, X0
	149 Return 
	150 Call 0x1C17F28

Method: System.Void DestroyAtlasTextures()

Disassembly:
	0x03CA0DCC RET
	0x03CA0DD0 STR X30, [X31 - 0x40]!
	0x03CA0DD4 STP X24, X23, [X31 + 0x10]
	0x03CA0DD8 STP X22, X21, [X31 + 0x20]
	0x03CA0DDC STP X20, X19, [X31 + 0x30]
	0x03CA0DE0 ADRP X20, 0x747000
	0x03CA0DE4 LDRB W8, [X20 + 0x2DF]
	0x03CA0DE8 MOV X19, X0
	0x03CA0DEC TBNZ X8, 0x0, 0x3CA0E04
	0x03CA0DF0 ADRP X0, 0x4B8000
	0x03CA0DF4 LDR X0, [X0 + 0xBC0]
	0x03CA0DF8 BL 0x1C16CF4
	0x03CA0DFC MOVZ W8, 0x1
	0x03CA0E00 STRB W8, [X20 + 0x2DF]
	0x03CA0E04 LDR W8, [X19 + 0xA8]
	0x03CA0E08 ADRP X24, 0x4B8000
	0x03CA0E0C LDR X24, [X24 + 0xBC0]
	0x03CA0E10 CMP W8, 0x1
	0x03CA0E14 B.NE 0x3CA0E94
	0x03CA0E18 LDR X21, [X19 + 0x98]
	0x03CA0E1C ADD X20, X19, 0xB0
	0x03CA0E20 MOV X0, X20
	0x03CA0E24 MOV X1, X31
	0x03CA0E28 BL 0x3C9BF88
	0x03CA0E2C MOV W22, W0
	0x03CA0E30 MOV X0, X20
	0x03CA0E34 MOV X1, X31
	0x03CA0E38 BL 0x3C9BF60
	0x03CA0E3C LDR X8, [X24]
	0x03CA0E40 MOV W23, W0
	0x03CA0E44 LDR W9, [X8 + 0xE0]
	0x03CA0E48 CBNZ W9, 0x3CA0E54
	0x03CA0E4C MOV X0, X8
	0x03CA0E50 BL 0x1C16DFC
	0x03CA0E54 MOV X0, X21
	0x03CA0E58 MOV W1, W22
	0x03CA0E5C MOV W2, W23
	0x03CA0E60 MOV X3, X31
	0x03CA0E64 BL 0x3C9C85C
	0x03CA0E68 CBZ W0, 0x3CA0E80
	0x03CA0E6C LDR X0, [X19 + 0xA0]
	0x03CA0E70 MOV X1, X31
	0x03CA0E74 BL 0x32277A8
	0x03CA0E78 TBZ X0, 0x0, 0x3CA0F00
	0x03CA0E7C MOVZ W0, 0x23
	0x03CA0E80 LDP X20, X19, [X31 + 0x30]
	0x03CA0E84 LDP X22, X21, [X31 + 0x20]
	0x03CA0E88 LDP X24, X23, [X31 + 0x10]
	0x03CA0E8C LDR X30, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x748000
	007 Move W8, [X20+766]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x454000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+766], W8
	018 Move X8, [X19+320]
	019 Compare X8, 0
	020 JumpIfEqual {55}
	021 Move X22, 0x454000
	022 Move X22, [X22+1432]
	023 Move X21, X31
	024 Move W9, [X8+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X22]
	028 Add X8, X8, X21
	029 Move X20, [X8+32]
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Inequality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {50}
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Object.DestroyImmediate, X0
	050 Move X8, [X19+320]
	051 Add X21, X21, 1
	052 Compare X8, 0
	053 JumpIfNotEqual {24}
	054 Call 0x1C17F20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 
	061 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03CA88FC LDP X24, X23, [X31 + 0x30]
	0x03CA8900 LDP X26, X25, [X31 + 0x20]
	0x03CA8904 LDP X30, X27, [X31 + 0x10]
	0x03CA8908 ADD X31, X31, 0x60
	0x03CA890C RET
	0x03CA8910 BL 0x1C16F20
	0x03CA8914 STP X30, X19, [X31 - 0x10]!
	0x03CA8918 MOV X19, X0
	0x03CA891C LDR X0, [X0 + 0xB8]
	0x03CA8920 CBNZ X0, 0x3CA8930
	0x03CA8924 MOV X0, X19
	0x03CA8928 BL 0x3CAB33C
	0x03CA892C LDR X0, [X19 + 0xB8]
	0x03CA8930 LDP X30, X19, [X31], #0x10
	0x03CA8934 RET
	0x03CA8938 SUB X31, X31, 0x60
	0x03CA893C STP X30, X27, [X31 + 0x10]
	0x03CA8940 STP X26, X25, [X31 + 0x20]
	0x03CA8944 STP X24, X23, [X31 + 0x30]
	0x03CA8948 STP X22, X21, [X31 + 0x40]
	0x03CA894C STP X20, X19, [X31 + 0x50]
	0x03CA8950 ADRP X22, 0x73F000
	0x03CA8954 LDRB W8, [X22 + 0x306]
	0x03CA8958 MOV W21, W2
	0x03CA895C MOV X20, X1
	0x03CA8960 MOV W19, W0
	0x03CA8964 TBNZ X8, 0x0, 0x3CA89B8
	0x03CA8968 ADRP X0, 0x4B9000
	0x03CA896C LDR X0, [X0 + 0x600]
	0x03CA8970 BL 0x1C16CF4
	0x03CA8974 ADRP X0, 0x4B9000
	0x03CA8978 LDR X0, [X0 + 0x5E8]
	0x03CA897C BL 0x1C16CF4
	0x03CA8980 ADRP X0, 0x44D000
	0x03CA8984 LDR X0, [X0 + 0x9D8]
	0x03CA8988 BL 0x1C16CF4
	0x03CA898C ADRP X0, 0x4B9000
	0x03CA8990 LDR X0, [X0 + 0x608]
	0x03CA8994 BL 0x1C16CF4
	0x03CA8998 ADRP X0, 0x4B9000
	0x03CA899C LDR X0, [X0 + 0x610]
	0x03CA89A0 BL 0x1C16CF4
	0x03CA89A4 ADRP X0, 0x44B000
	0x03CA89A8 LDR X0, [X0 + 0x598]
	0x03CA89AC BL 0x1C16CF4
	0x03CA89B0 MOVZ W8, 0x1
	0x03CA89B4 STRB W8, [X22 + 0x306]
	0x03CA89B8 STR X31, [X31 + 0x8]
	0x03CA89BC CBZ X20, 0x3CA8AF4
	0x03CA89C0 LDR X0, [X20 + 0xB8]
	0x03CA89C4 CBNZ X0, 0x3CA89D4
	0x03CA89C8 MOV X0, X20
	0x03CA89CC BL 0x3CAB33C
	0x03CA89D0 LDR X0, [X20 + 0xB8]
	0x03CA89D4 CBZ X0, 0x3CA8AF4
	0x03CA89D8 ADRP X8, 0x4B9000
	0x03CA89DC LDR X8, [X8 + 0x600]
	0x03CA89E0 ADD X2, X31, 0x8
	0x03CA89E4 MOV W1, W19
	0x03CA89E8 LDR X3, [X8]
	0x03CA89EC BL 0x2B10A7C
	0x03CA89F0 TBZ X0, 0x0, 0x3CA89FC
	0x03CA89F4 LDR X0, [X31 + 0x8]
	0x03CA89F8 B 0x3CA8AD8
	0x03CA89FC TBZ X21, 0x0, 0x3CA8AD4
	0x03CA8A00 LDR X20, [X20 + 0xD0]
	0x03CA8A04 CBZ X20, 0x3CA8AD4
	0x03CA8A08 LDR W23, [X20 + 0x18]
	0x03CA8A0C CMP W23, 0x1
	0x03CA8A10 B.LT 0x3CA8AD4
	0x03CA8A14 ADRP X24, 0x4B9000
	0x03CA8A18 ADRP X25, 0x44B000
	0x03CA8A1C ADRP X26, 0x4B9000
	0x03CA8A20 ADRP X27, 0x44D000
	0x03CA8A24 LDR X24, [X24 + 0x610]
	0x03CA8A28 LDR X25, [X25 + 0x598]
	0x03CA8A2C LDR X26, [X26 + 0x5E8]
	0x03CA8A30 LDR X27, [X27 + 0x9D8]
	0x03CA8A34 MOV W21, W31
	0x03CA8A38 LDR X2, [X24]
	0x03CA8A3C MOV X0, X20
	0x03CA8A40 MOV W1, W21
	0x03CA8A44 BL 0x301BCCC
	0x03CA8A48 LDR X8, [X25]
	0x03CA8A4C MOV X22, X0
	0x03CA8A50 LDR W9, [X8 + 0xE0]
	0x03CA8A54 CBNZ W9, 0x3CA8A60
	0x03CA8A58 MOV X0, X8
	0x03CA8A5C BL 0x1C16DFC
	0x03CA8A60 MOV X0, X22
	0x03CA8A64 MOV X1, X31
	0x03CA8A68 MOV X2, X31
	0x03CA8A6C BL 0x3C3883C
	0x03CA8A70 TBNZ X0, 0x0, 0x3CA8AC8
	0x03CA8A74 CBZ X22, 0x3CA8AF4
	0x03CA8A78 LDR W1, [X22 + 0x20]
	0x03CA8A7C CBNZ W1, 0x3CA8A94
	0x03CA8A80 MOV X0, X22
	0x03CA8A84 MOV X1, X31
	0x03CA8A88 BL 0x3C385F8
	0x03CA8A8C MOV W1, W0
	0x03CA8A90 STR W0, [X22 + 0x20]
	0x03CA8A94 LDR X8, [X26]
	0x03CA8A98 LDR X8, [X8 + 0xB8]
	0x03CA8A9C LDR X0, [X8]
	0x03CA8AA0 CBZ X0, 0x3CA8AF4
	0x03CA8AA4 LDR X2, [X27]
	0x03CA8AA8 BL 0x2DAB03C
	0x03CA8AAC TBZ X0, 0x0, 0x3CA8AC8
	0x03CA8AB0 MOVZ W2, 0x1
	0x03CA8AB4 MOV W0, W19
	0x03CA8AB8 MOV X1, X22
	0x03CA8ABC BL 0x3CA8938
	0x03CA8AC0 STR X0, [X31 + 0x8]
	0x03CA8AC4 CBNZ X0, 0x3CA8AD8
	0x03CA8AC8 ADD W21, W21, 0x1
	0x03CA8ACC CMP W23, W21
	0x03CA8AD0 B.NE 0x3CA8A38
	0x03CA8AD4 MOV X0, X31
	0x03CA8AD8 LDP X20, X19, [X31 + 0x50]
	0x03CA8ADC LDP X22, X21, [X31 + 0x40]
	0x03CA8AE0 LDP X24, X23, [X31 + 0x30]
	0x03CA8AE4 LDP X26, X25, [X31 + 0x20]
	0x03CA8AE8 LDP X30, X27, [X31 + 0x10]
	0x03CA8AEC ADD X31, X31, 0x60
	0x03CA8AF0 RET
	0x03CA8AF4 BL 0x1C16F20
	0x03CA8AF8 STR X30, [X31 - 0x20]!
	0x03CA8AFC STP X20, X19, [X31 + 0x10]
	0x03CA8B00 ADRP X19, 0x73F000
	0x03CA8B04 ADRP X20, 0x4B9000
	0x03CA8B08 LDRB W8, [X19 + 0x30B]
	0x03CA8B0C LDR X20, [X20 + 0x448]
	0x03CA8B10 TBNZ X8, 0x0, 0x3CA8B28
	0x03CA8B14 ADRP X0, 0x4B9000
	0x03CA8B18 LDR X0, [X0 + 0x448]
	0x03CA8B1C BL 0x1C16CF4
	0x03CA8B20 MOVZ W8, 0x1
	0x03CA8B24 STRB W8, [X19 + 0x30B]
	0x03CA8B28 LDR X0, [X20]
	0x03CA8B2C BL 0x1C16F10
	0x03CA8B30 MOV X1, X31
	0x03CA8B34 MOV X19, X0
	0x03CA8B38 BL 0x33BDD8C
	0x03CA8B3C LDR X8, [X20]
	0x03CA8B40 LDR X8, [X8 + 0xB8]
	0x03CA8B44 STR X19, [X8]
	0x03CA8B48 LDP X20, X19, [X31 + 0x10]
	0x03CA8B4C LDR X30, [X31], #0x20
	0x03CA8B50 RET
	0x03CA8B54 MOV X1, X31
	0x03CA8B58 B 0x33BDD8C
	0x03CA8B5C SUB X31, X31, 0x50
	0x03CA8B60 STR X30, [X31 + 0x40]
	0x03CA8B64 MOV X0, X1
	0x03CA8B68 ADD X8, X31, 0x8
	0x03CA8B6C MOV X1, X31
	0x03CA8B70 STP X31, X31, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x740000
	014 Move X28, 0x4B1000
	015 Move X27, 0x4B1000
	016 Move X21, 0x4BA000
	017 Move X26, 0x4BA000
	018 Move X25, 0x4BA000
	019 Move X29, 0x4BA000
	020 Move X24, 0x452000
	021 Move X23, 0x452000
	022 Move X22, 0x4A7000
	023 Move X28, [X28+3760]
	024 Move X27, [X27+3768]
	025 Move X21, [X21+1384]
	026 Move X26, [X26+1392]
	027 Move X25, [X25+1288]
	028 Move W8, [X20+767]
	029 Move X29, [X29+1400]
	030 Move X24, [X24+488]
	031 Move X23, [X23+480]
	032 Move X22, [X22+2104]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {70}
	038 Move X0, 0x4BA000
	039 Move X0, [X0+1288]
	040 Call 0x1C17CF4
	041 Move X0, 0x4BA000
	042 Move X0, [X0+1400]
	043 Call 0x1C17CF4
	044 Move X0, 0x4A7000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0x4A7000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0x452000
	051 Move X0, [X0+480]
	052 Call 0x1C17CF4
	053 Move X0, 0x4B1000
	054 Move X0, [X0+3768]
	055 Call 0x1C17CF4
	056 Move X0, 0x4BA000
	057 Move X0, [X0+1392]
	058 Call 0x1C17CF4
	059 Move X0, 0x4B1000
	060 Move X0, [X0+3760]
	061 Call 0x1C17CF4
	062 Move X0, 0x452000
	063 Move X0, [X0+488]
	064 Call 0x1C17CF4
	065 Move X0, 0x4BA000
	066 Move X0, [X0+1384]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+767], W8
	070 Move X0, [X28]
	071 Call 0x1C17F10
	072 Move X1, [X27]
	073 Move X20, X0
	074 Call List`1<Object>..ctor, X0
	075 Move [X19+280], X20
	076 Move X0, [X21]
	077 Call 0x1C17F10
	078 Move X1, [X26]
	079 Move X20, X0
	080 Call List`1<Object>..ctor, X0
	081 Move [X19+296], X20
	082 Move X0, [X25]
	083 Call 0x1C17F10
	084 Move X20, X0
	085 Call FontFeatureTable..ctor, X0
	086 Move [X19+368], X20
	087 Move X0, [X29]
	088 Move W1, 10
	089 Call 0x1C17D6C
	090 Move X8, -52150272
	091 Move V0, [X8+88]
	092 Add X8, X19, 392
	093 Move W9, 2595
	094 Move [X19+384], X0
	095 Move [X8], V0
	096 NotImplemented "Instruction STRH not yet implemented."
	097 Move X0, [X28]
	098 Call 0x1C17F10
	099 Move X1, [X27]
	100 Move X20, X0
	101 Call List`1<Object>..ctor, X0
	102 Move [X19+416], X20
	103 Move X0, [X28]
	104 Call 0x1C17F10
	105 Move X1, [X27]
	106 Move X20, X0
	107 Call List`1<Object>..ctor, X0
	108 Move [X19+424], X20
	109 Move X0, [X24]
	110 Call 0x1C17F10
	111 Move X1, [X23]
	112 Move X20, X0
	113 Call List`1<UInt32>..ctor, X0
	114 Move [X19+432], X20
	115 Move X0, [X24]
	116 Call 0x1C17F10
	117 Move X1, [X23]
	118 Move X20, X0
	119 Call List`1<UInt32>..ctor, X0
	120 Move [X19+440], X20
	121 Move X0, [X24]
	122 Call 0x1C17F10
	123 Move X1, [X23]
	124 Move X20, X0
	125 Call List`1<UInt32>..ctor, X0
	126 Move [X19+448], X20
	127 Move X0, [X22]
	128 Call 0x1C17F10
	129 Move X25, 0x4A7000
	130 Move X25, [X25+2096]
	131 Move X20, X0
	132 Move X1, [X25]
	133 Call HashSet`1<UInt32>..ctor, X0
	134 Move [X19+456], X20
	135 Move X0, [X21]
	136 Call 0x1C17F10
	137 Move X1, [X26]
	138 Move X20, X0
	139 Call List`1<Object>..ctor, X0
	140 Move [X19+464], X20
	141 Move X0, [X22]
	142 Call 0x1C17F10
	143 Move X1, [X25]
	144 Move X20, X0
	145 Call HashSet`1<UInt32>..ctor, X0
	146 Move [X19+472], X20
	147 Move X0, [X24]
	148 Call 0x1C17F10
	149 Move X1, [X23]
	150 Move X20, X0
	151 Call List`1<UInt32>..ctor, X0
	152 Move [X19+480], X20
	153 Move X0, [X22]
	154 Call 0x1C17F10
	155 Move X1, [X25]
	156 Move X20, X0
	157 Call HashSet`1<UInt32>..ctor, X0
	158 Move [X19+488], X20
	159 Move X0, X19
	160 Move X20, [X31+80]
	161 Move X19, [X31+88]
	162 Move X22, [X31+64]
	163 Move X21, [X31+72]
	164 Move X24, [X31+48]
	165 Move X23, [X31+56]
	166 Move X26, [X31+32]
	167 Move X25, [X31+40]
	168 Move X28, [X31+16]
	169 Move X27, [X31+24]
	170 Move X1, X31
	171 Move X29, [X31+96]
	172 Move X30, [X31+104]
	173 Call ScriptableObject..ctor, X0
	174 Return 

Method: System.Void .cctor()

Disassembly:
	0x03CA8B7C LDUR V0, [X31 + 0x8]
	0x03CA8B80 LDR W8, [X31 + 0x18]
	0x03CA8B84 ADD X0, X31, 0x20
	0x03CA8B88 MOV X1, X31
	0x03CA8B8C STR V0, [X31 + 0x2]
	0x03CA8B90 STR W8, [X31 + 0x30]
	0x03CA8B94 BL 0x3C9E52C
	0x03CA8B98 LDR X30, [X31 + 0x40]
	0x03CA8B9C ADD X31, X31, 0x50
	0x03CA8BA0 RET
	0x03CA8BA4 SUB X31, X31, 0x50
	0x03CA8BA8 STR X30, [X31 + 0x40]
	0x03CA8BAC MOV X0, X1
	0x03CA8BB0 ADD X8, X31, 0x8
	0x03CA8BB4 MOV X1, X31
	0x03CA8BB8 STP X31, X31, [X31 + 0x20]
	0x03CA8BBC STR W31, [X31 + 0x30]
	0x03CA8BC0 BL 0x3C9E6E4
	0x03CA8BC4 LDUR V0, [X31 + 0x8]
	0x03CA8BC8 LDR W8, [X31 + 0x18]
	0x03CA8BCC ADD X0, X31, 0x20
	0x03CA8BD0 MOV X1, X31
	0x03CA8BD4 STR V0, [X31 + 0x2]
	0x03CA8BD8 STR W8, [X31 + 0x30]
	0x03CA8BDC BL 0x3C9E52C
	0x03CA8BE0 LDR X30, [X31 + 0x40]
	0x03CA8BE4 ADD X31, X31, 0x50
	0x03CA8BE8 RET
	0x03CA8BEC MOV X0, X1
	0x03CA8BF0 MOV X1, X31
	0x03CA8BF4 B 0x3C9E8B0
	0x03CA8BF8 MOV X0, X1
	0x03CA8BFC MOV X1, X31
	0x03CA8C00 B 0x3C9E8C0
	0x03CA8C04 MOV X0, X1
	0x03CA8C08 MOV X1, X31
	0x03CA8C0C B 0x3C9E8D0
	0x03CA8C10 MOV X0, X1
	0x03CA8C14 MOV X1, X31
	0x03CA8C18 B 0x3C9E8E0
	0x03CA8C1C STR X30, [X31 - 0x30]!
	0x03CA8C20 STP X22, X21, [X31 + 0x10]
	0x03CA8C24 STP X20, X19, [X31 + 0x20]
	0x03CA8C28 ADRP X20, 0x73F000
	0x03CA8C2C ADRP X21, 0x44B000
	0x03CA8C30 LDRB W8, [X20 + 0x30C]
	0x03CA8C34 LDR X21, [X21 + 0xAC8]
	0x03CA8C38 MOV X19, X0
	0x03CA8C3C TBNZ X8, 0x0, 0x3CA8C90
	0x03CA8C40 ADRP X0, 0x44B000
	0x03CA8C44 LDR X0, [X0 + 0xAC8]
	0x03CA8C48 BL 0x1C16CF4
	0x03CA8C4C ADRP X0, 0x49F000
	0x03CA8C50 LDR X0, [X0 + 0x180]
	0x03CA8C54 BL 0x1C16CF4
	0x03CA8C58 ADRP X0, 0x4B0000
	0x03CA8C5C LDR X0, [X0 + 0x868]
	0x03CA8C60 BL 0x1C16CF4
	0x03CA8C64 ADRP X0, 0x44B000
	0x03CA8C68 LDR X0, [X0 + 0x838]
	0x03CA8C6C BL 0x1C16CF4
	0x03CA8C70 ADRP X0, 0x44C000
	0x03CA8C74 LDR X0, [X0 + 0x608]
	0x03CA8C78 BL 0x1C16CF4
	0x03CA8C7C ADRP X0, 0x4B0000
	0x03CA8C80 LDR X0, [X0 + 0x870]
	0x03CA8C84 BL 0x1C16CF4
	0x03CA8C88 MOVZ W8, 0x1
	0x03CA8C8C STRB W8, [X20 + 0x30C]
	0x03CA8C90 LDR X0, [X21]
	0x03CA8C94 MOVZ W1, 0x9
	0x03CA8C98 BL 0x1C16D6C
	0x03CA8C9C CBZ X0, 0x3CA8DB8
	0x03CA8CA0 LDR W8, [X0 + 0x18]
	0x03CA8CA4 MOV X20, X0
	0x03CA8CA8 CBZ W8, 0x3CA8DB4
	0x03CA8CAC ADRP X8, 0x4B0000
	0x03CA8CB0 LDR X8, [X8 + 0x868]
	0x03CA8CB4 ADRP X21, 0x49F000
	0x03CA8CB8 MOV X0, X19
	0x03CA8CBC MOV X2, X31
	0x03CA8CC0 LDR X8, [X8]
	0x03CA8CC4 LDR X21, [X21 + 0x180]
	0x03CA8CC8 STR X8, [X20 + 0x20]
	0x03CA8CCC LDR X1, [X21]
	0x03CA8CD0 BL 0x338FF2C
	0x03CA8CD4 LDR W8, [X20 + 0x18]
	0x03CA8CD8 CMP W8, 0x1
	0x03CA8CDC B.LS 0x3CA8DB4
	0x03CA8CE0 CMP W8, 0x2
	0x03CA8CE4 STR X0, [X20 + 0x28]
	0x03CA8CE8 B.EQ 0x3CA8DB4
	0x03CA8CEC ADRP X22, 0x44B000
	0x03CA8CF0 LDR X22, [X22 + 0x838]
	0x03CA8CF4 ADD X0, X19, 0x4
	0x03CA8CF8 MOV X2, X31
	0x03CA8CFC LDR X8, [X22]
	0x03CA8D00 STR X8, [X20 + 0x30]
	0x03CA8D04 LDR X1, [X21]
	0x03CA8D08 BL 0x338FF2C
	0x03CA8D0C LDR W8, [X20 + 0x18]
	0x03CA8D10 CMP W8, 0x3
	0x03CA8D14 B.LS 0x3CA8DB4
	0x03CA8D18 CMP W8, 0x4
	0x03CA8D1C STR X0, [X20 + 0x38]
	0x03CA8D20 B.EQ 0x3CA8DB4
	0x03CA8D24 ADRP X8, 0x4B0000
	0x03CA8D28 LDR X8, [X8 + 0x870]
	0x03CA8D2C ADD X0, X19, 0x8
	0x03CA8D30 MOV X2, X31
	0x03CA8D34 LDR X8, [X8]
	0x03CA8D38 STR X8, [X20 + 0x40]
	0x03CA8D3C LDR X1, [X21]
	0x03CA8D40 BL 0x338FF2C
	0x03CA8D44 LDR W8, [X20 + 0x18]
	0x03CA8D48 CMP W8, 0x5
	0x03CA8D4C B.LS 0x3CA8DB4
	0x03CA8D50 CMP W8, 0x6
	0x03CA8D54 STR X0, [X20 + 0x48]
	0x03CA8D58 B.EQ 0x3CA8DB4
	0x03CA8D5C LDR X8, [X22]
	0x03CA8D60 ADD X0, X19, 0xC
	0x03CA8D64 MOV X2, X31
	0x03CA8D68 STR X8, [X20 + 0x50]
	0x03CA8D6C LDR X1, [X21]
	0x03CA8D70 BL 0x338FF2C
	0x03CA8D74 LDR W8, [X20 + 0x18]
	0x03CA8D78 CMP W8, 0x7
	0x03CA8D7C B.LS 0x3CA8DB4
	0x03CA8D80 CMP W8, 0x8
	0x03CA8D84 STR X0, [X20 + 0x58]
	0x03CA8D88 B.EQ 0x3CA8DB4
	0x03CA8D8C ADRP X8, 0x44C000
	0x03CA8D90 LDR X8, [X8 + 0x608]
	0x03CA8D94 MOV X0, X20
	0x03CA8D98 LDP X22, X21, [X31 + 0x10]
	0x03CA8D9C MOV X1, X31
	0x03CA8DA0 LDR X8, [X8]
	0x03CA8DA4 STR X8, [X20 + 0x60]
	0x03CA8DA8 LDP X20, X19, [X31 + 0x20]
	0x03CA8DAC LDR X30, [X31], #0x30
	0x03CA8DB0 B 0x32278CC
	0x03CA8DB4 BL 0x1C16F28
	0x03CA8DB8 BL 0x1C16F20
	0x03CA8DBC STP X30, X23, [X31 - 0x30]!
	0x03CA8DC0 STP X22, X21, [X31 + 0x10]
	0x03CA8DC4 STP X20, X19, [X31 + 0x20]
	0x03CA8DC8 ADRP X23, 0x73F000
	0x03CA8DCC LDRB W8, [X23 + 0x30E]
	0x03CA8DD0 MOV W19, W3
	0x03CA8DD4 MOV W22, W2
	0x03CA8DD8 MOV X21, X1
	0x03CA8DDC MOV X20, X0
	0x03CA8DE0 TBNZ X8, 0x0, 0x3CA8DF8
	0x03CA8DE4 ADRP X0, 0x454000
	0x03CA8DE8 LDR X0, [X0 + 0x8D8]
	0x03CA8DEC BL 0x1C16CF4
	0x03CA8DF0 MOVZ W8, 0x1
	0x03CA8DF4 STRB W8, [X23 + 0x30E]
	0x03CA8DF8 LDR X0, [X20 + 0x18]
	0x03CA8DFC CBZ X0, 0x3CA8E0C
	0x03CA8E00 LDR W8, [X0 + 0x18]
	0x03CA8E04 CMP W8, W19
	0x03CA8E08 B.GE 0x3CA8E24
	0x03CA8E0C ADRP X8, 0x454000
	0x03CA8E10 LDR X8, [X8 + 0x8D8]
	0x03CA8E14 MOV W1, W19
	0x03CA8E18 LDR X0, [X8]
	0x03CA8E1C BL 0x1C16D6C
	0x03CA8E20 STR X0, [X20 + 0x18]
	0x03CA8E24 CMP W19, 0x1
	0x03CA8E28 B.LT 0x3CA8E78
	0x03CA8E2C CBZ X21, 0x3CA8E94
	0x03CA8E30 LDR W9, [X21 + 0x18]
	0x03CA8E34 MOV X8, X31
	0x03CA8E38 MOV W10, W19
	0x03CA8E3C ADD X11, X0, 0x20
	0x03CA8E40 MOV W12, W22
	0x03CA8E44 ADD X13, X12, X8
	0x03CA8E48 CMP W13, W9
	0x03CA8E4C B.CS 0x3CA8E90
	0x03CA8E50 CBZ X0, 0x3CA8E94
	0x03CA8E54 LDR W14, [X0 + 0x18]
	0x03CA8E58 CMP X8, X14
	0x03CA8E5C B.CS 0x3CA8E90
	0x03CA8E60 ADD X13, X21, W13, 0x1, SXTW
	0x03CA8E64 LDRH W13, [X13 + 0x20]
	0x03CA8E68 STRH W13, [X11, X8, LSL #1]
	0x03CA8E6C ADD X8, X8, 0x1
	0x03CA8E70 CMP X10, X8
	0x03CA8E74 B.NE 0x3CA8E44
	0x03CA8E78 STR W19, [X20 + 0x8]
	0x03CA8E7C STP X31, X31, [X20 + 0x20]
	0x03CA8E80 LDP X20, X19, [X31 + 0x20]
	0x03CA8E84 LDP X22, X21, [X31 + 0x10]
	0x03CA8E88 LDP X30, X23, [X31], #0x30
	0x03CA8E8C RET
	0x03CA8E90 BL 0x1C16F28
	0x03CA8E94 BL 0x1C16F20
	0x03CA8E98 STP X30, X25, [X31 - 0x40]!
	0x03CA8E9C STP X24, X23, [X31 + 0x10]
	0x03CA8EA0 STP X22, X21, [X31 + 0x20]
	0x03CA8EA4 STP X20, X19, [X31 + 0x30]
	0x03CA8EA8 ADRP X21, 0x73F000
	0x03CA8EAC LDRB W8, [X21 + 0x30F]
	0x03CA8EB0 MOV X19, X1
	0x03CA8EB4 MOV X20, X0
	0x03CA8EB8 TBNZ X8, 0x0, 0x3CA8ED0
	0x03CA8EBC ADRP X0, 0x44D000
	0x03CA8EC0 LDR X0, [X0 + 0x170]
	0x03CA8EC4 BL 0x1C16CF4
	0x03CA8EC8 MOVZ W8, 0x1
	0x03CA8ECC STRB W8, [X21 + 0x30F]
	0x03CA8ED0 LDR X0, [X20 + 0x28]
	0x03CA8ED4 MOV X1, X31
	0x03CA8ED8 BL 0x32277A8
	0x03CA8EDC TBZ X0, 0x0, 0x3CA8F70
	0x03CA8EE0 LDP W22, W8, [X20 + 0xC]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X27, 0x740000
	014 Move X28, 0x4BA000
	015 Move X20, 0x4BA000
	016 Move X26, 0x4BA000
	017 Move X25, 0x4BA000
	018 Move X19, 0x4BA000
	019 Move X24, 0x4BA000
	020 Move X23, 0x4BA000
	021 Move X29, 0x4BA000
	022 Move X22, 0x44D000
	023 Move X21, 0x453000
	024 Move X28, [X28+1408]
	025 Move X20, [X20+600]
	026 Move X26, [X26+1416]
	027 Move X25, [X25+1424]
	028 Move X19, [X19+1432]
	029 Move X24, [X24+1440]
	030 Move X23, [X23+1448]
	031 Move X29, [X29+1456]
	032 Move W8, [X27+768]
	033 Move X22, [X22+3592]
	034 Move X21, [X21+1672]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {92}
	039 Move X0, 0x4BA000
	040 Move X0, [X0+600]
	041 Call 0x1C17CF4
	042 Move X0, 0x453000
	043 Move X0, [X0+1672]
	044 Call 0x1C17CF4
	045 Move X0, 0x44D000
	046 Move X0, [X0+3592]
	047 Call 0x1C17CF4
	048 Move X0, 0x4BA000
	049 Move X0, [X0+1464]
	050 Call 0x1C17CF4
	051 Move X0, 0x4BA000
	052 Move X0, [X0+1472]
	053 Call 0x1C17CF4
	054 Move X0, 0x4BA000
	055 Move X0, [X0+1480]
	056 Call 0x1C17CF4
	057 Move X0, 0x4BA000
	058 Move X0, [X0+1488]
	059 Call 0x1C17CF4
	060 Move X0, 0x4B1000
	061 Move X0, [X0+3872]
	062 Call 0x1C17CF4
	063 Move X0, 0x4BA000
	064 Move X0, [X0+1440]
	065 Call 0x1C17CF4
	066 Move X0, 0x4BA000
	067 Move X0, [X0+1496]
	068 Call 0x1C17CF4
	069 Move X0, 0x4BA000
	070 Move X0, [X0+1456]
	071 Call 0x1C17CF4
	072 Move X0, 0x4BA000
	073 Move X0, [X0+1416]
	074 Call 0x1C17CF4
	075 Move X0, 0x4BA000
	076 Move X0, [X0+1448]
	077 Call 0x1C17CF4
	078 Move X0, 0x4BA000
	079 Move X0, [X0+1424]
	080 Call 0x1C17CF4
	081 Move X0, 0x4BA000
	082 Move X0, [X0+1504]
	083 Call 0x1C17CF4
	084 Move X0, 0x4BA000
	085 Move X0, [X0+1432]
	086 Call 0x1C17CF4
	087 Move X0, 0x4BA000
	088 Move X0, [X0+1408]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X27+768], W8
	092 Move X0, [X28]
	093 Move W1, 1
	094 Move W2, W31
	095 Move W3, W31
	096 Move X4, X31
	097 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	098 Move X8, [X20]
	099 Move W1, 1
	100 Move W2, W31
	101 Move W3, W31
	102 Move X8, [X8+184]
	103 Move X4, X31
	104 Move [X8], X0
	105 Move X0, [X26]
	106 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	107 Move X8, [X20]
	108 Move W1, 1
	109 Move W2, W31
	110 Move W3, W31
	111 Move X8, [X8+184]
	112 Move X4, X31
	113 Move [X8+8], X0
	114 Move X0, [X25]
	115 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	116 Move X8, [X20]
	117 Move W1, 1
	118 Move W2, W31
	119 Move W3, W31
	120 Move X8, [X8+184]
	121 Move X4, X31
	122 Move [X8+16], X0
	123 Move X0, [X19]
	124 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	125 Move X8, [X20]
	126 Move W1, 1
	127 Move W2, W31
	128 Move W3, W31
	129 Move X8, [X8+184]
	130 Move X4, X31
	131 Move [X8+24], X0
	132 Move X0, [X24]
	133 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	134 Move X8, [X20]
	135 Move W1, 1
	136 Move W2, W31
	137 Move W3, W31
	138 Move X8, [X8+184]
	139 Move X4, X31
	140 Move [X8+32], X0
	141 Move X0, [X23]
	142 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	143 Move X8, [X20]
	144 Move W1, 1
	145 Move W2, W31
	146 Move W3, W31
	147 Move X8, [X8+184]
	148 Move X4, X31
	149 Move [X8+40], X0
	150 Move X0, [X29]
	151 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	152 Move X8, [X20]
	153 Move W1, 1
	154 Move W2, W31
	155 Move W3, W31
	156 Move X8, [X8+184]
	157 Move X4, X31
	158 Move [X8+48], X0
	159 Move X8, 0x4BA000
	160 Move X8, [X8+1496]
	161 Move X0, [X8]
	162 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	163 Move X8, [X20]
	164 Move W1, 1
	165 Move W2, W31
	166 Move W3, W31
	167 Move X8, [X8+184]
	168 Move X4, X31
	169 Move [X8+56], X0
	170 Move X8, 0x4BA000
	171 Move X8, [X8+1504]
	172 Move X0, [X8]
	173 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	174 Move X8, [X20]
	175 Move X9, 0x4B1000
	176 Move X8, [X8+184]
	177 Move [X8+64], X0
	178 Move X9, [X9+3872]
	179 Move X9, [X9]
	180 Move [X8+72], X9
	181 Move X8, 0x4BA000
	182 Move X8, [X8+1488]
	183 Move X0, [X8]
	184 Call 0x1C17F10
	185 Move X8, 0x4BA000
	186 Move X8, [X8+1464]
	187 Move X19, X0
	188 Move X1, [X8]
	189 Call List`1<Object>..ctor, X0
	190 Move X8, [X20]
	191 Move X8, [X8+184]
	192 Move [X8+88], X19
	193 Move X0, [X22]
	194 Call 0x1C17F10
	195 Move X1, [X21]
	196 Move X19, X0
	197 Call HashSet`1<Int32>..ctor, X0
	198 Move X8, [X20]
	199 Move X8, [X8+184]
	200 Move [X8+96], X19
	201 Move X8, 0x4BA000
	202 Move X8, [X8+1480]
	203 Move X0, [X8]
	204 Call 0x1C17F10
	205 Move X8, 0x4BA000
	206 Move X8, [X8+1472]
	207 Move X19, X0
	208 Move X1, [X8]
	209 Call List`1<Object>..ctor, X0
	210 Move X8, [X20]
	211 Move X8, [X8+184]
	212 Move [X8+104], X19
	213 Move X0, [X22]
	214 Call 0x1C17F10
	215 Move X1, [X21]
	216 Move X19, X0
	217 Call HashSet`1<Int32>..ctor, X0
	218 Move X8, [X20]
	219 Move X22, [X31+64]
	220 Move X21, [X31+72]
	221 Move X24, [X31+48]
	222 Move X23, [X31+56]
	223 Move X26, [X31+32]
	224 Move X25, [X31+40]
	225 Move X8, [X8+184]
	226 Move X28, [X31+16]
	227 Move X27, [X31+24]
	228 Move [X8+112], X19
	229 Move X20, [X31+80]
	230 Move X19, [X31+88]
	231 Move X29, [X31+96]
	232 Move X30, [X31+104]
	233 Return 

