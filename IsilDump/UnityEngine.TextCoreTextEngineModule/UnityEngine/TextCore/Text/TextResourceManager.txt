Type: UnityEngine.TextCore.Text.TextResourceManager

Method: System.Void AddFontAsset(UnityEngine.TextCore.Text.FontAsset fontAsset)

Disassembly:
	0x03CCC7B8 LDR X3, [X8]
	0x03CCC7BC BL 0x2A1368C
	0x03CCC7C0 MOV X0, X22
	0x03CCC7C4 LDP X20, X19, [X31 + 0x30]
	0x03CCC7C8 LDP X22, X21, [X31 + 0x20]
	0x03CCC7CC LDR X30, [X31 + 0x10]
	0x03CCC7D0 ADD X31, X31, 0x40
	0x03CCC7D4 RET
	0x03CCC7D8 BL 0x1C16F20
	0x03CCC7DC BL 0x1C16F28
	0x03CCC7E0 STP X1, X2, [X0]
	0x03CCC7E4 RET
	0x03CCC7E8 STR X30, [X31 - 0x50]!
	0x03CCC7EC STP X26, X25, [X31 + 0x10]
	0x03CCC7F0 STP X24, X23, [X31 + 0x20]
	0x03CCC7F4 STP X22, X21, [X31 + 0x30]
	0x03CCC7F8 STP X20, X19, [X31 + 0x40]
	0x03CCC7FC ADRP X25, 0x71B000
	0x03CCC800 ADRP X26, 0x495000
	0x03CCC804 ADRP X24, 0x495000
	0x03CCC808 ADRP X23, 0x495000
	0x03CCC80C ADRP X22, 0x495000
	0x03CCC810 ADRP X21, 0x495000
	0x03CCC814 ADRP X20, 0x495000
	0x03CCC818 LDR X26, [X26 + 0xEC8]
	0x03CCC81C LDRB W8, [X25 + 0x385]
	0x03CCC820 LDR X24, [X24 + 0xED0]
	0x03CCC824 LDR X23, [X23 + 0xED8]
	0x03CCC828 LDR X22, [X22 + 0xEE0]
	0x03CCC82C LDR X21, [X21 + 0xE98]
	0x03CCC830 LDR X20, [X20 + 0xE80]
	0x03CCC834 MOV X19, X0
	0x03CCC838 TBNZ X8, 0x0, 0x3CCC88C
	0x03CCC83C ADRP X0, 0x495000
	0x03CCC840 LDR X0, [X0 + 0xE80]
	0x03CCC844 BL 0x1C16CF4
	0x03CCC848 ADRP X0, 0x495000
	0x03CCC84C LDR X0, [X0 + 0xE98]
	0x03CCC850 BL 0x1C16CF4
	0x03CCC854 ADRP X0, 0x495000
	0x03CCC858 LDR X0, [X0 + 0xED8]
	0x03CCC85C BL 0x1C16CF4
	0x03CCC860 ADRP X0, 0x495000
	0x03CCC864 LDR X0, [X0 + 0xEE0]
	0x03CCC868 BL 0x1C16CF4
	0x03CCC86C ADRP X0, 0x495000
	0x03CCC870 LDR X0, [X0 + 0xEC8]
	0x03CCC874 BL 0x1C16CF4
	0x03CCC878 ADRP X0, 0x495000
	0x03CCC87C LDR X0, [X0 + 0xED0]
	0x03CCC880 BL 0x1C16CF4
	0x03CCC884 MOVZ W8, 0x1
	0x03CCC888 STRB W8, [X25 + 0x385]
	0x03CCC88C LDR X8, [X26]
	0x03CCC890 MOVZ W9, 0x1
	0x03CCC894 STRB W9, [X19 + 0x40]
	0x03CCC898 STR X8, [X19 + 0x28]
	0x03CCC89C LDR X8, [X24]
	0x03CCC8A0 STR X8, [X19 + 0x50]
	0x03CCC8A4 LDR X9, [X23]
	0x03CCC8A8 LDR X8, [X22]
	0x03CCC8AC STRB W31, [X19 + 0x89]
	0x03CCC8B0 STP X9, X8, [X19 + 0x70]
	0x03CCC8B4 LDR X0, [X21]
	0x03CCC8B8 BL 0x1C16F10
	0x03CCC8BC LDR X1, [X20]
	0x03CCC8C0 MOV X20, X0
	0x03CCC8C4 BL 0x31462C4
	0x03CCC8C8 STR X20, [X19 + 0x98]
	0x03CCC8CC MOV X0, X19
	0x03CCC8D0 LDP X20, X19, [X31 + 0x40]
	0x03CCC8D4 LDP X22, X21, [X31 + 0x30]
	0x03CCC8D8 LDP X24, X23, [X31 + 0x20]
	0x03CCC8DC LDP X26, X25, [X31 + 0x10]
	0x03CCC8E0 MOV X1, X31
	0x03CCC8E4 LDR X30, [X31], #0x50
	0x03CCC8E8 B 0x3C36D2C
	0x03CCC8EC STP X30, X21, [X31 - 0x20]!
	0x03CCC8F0 STP X20, X19, [X31 + 0x10]
	0x03CCC8F4 ADRP X19, 0x71B000
	0x03CCC8F8 ADRP X20, 0x495000
	0x03CCC8FC LDRB W8, [X19 + 0x386]
	0x03CCC900 LDR X20, [X20 + 0x268]
	0x03CCC904 TBNZ X8, 0x0, 0x3CCC94C
	0x03CCC908 ADRP X0, 0x427000
	0x03CCC90C LDR X0, [X0 + 0x598]
	0x03CCC910 BL 0x1C16CF4
	0x03CCC914 ADRP X0, 0x495000
	0x03CCC918 LDR X0, [X0 + 0x268]
	0x03CCC91C BL 0x1C16CF4
	0x03CCC920 ADRP X0, 0x495000
	0x03CCC924 LDR X0, [X0 + 0xEE8]
	0x03CCC928 BL 0x1C16CF4
	0x03CCC92C ADRP X0, 0x495000
	0x03CCC930 LDR X0, [X0 + 0xEF0]
	0x03CCC934 BL 0x1C16CF4
	0x03CCC938 ADRP X0, 0x495000
	0x03CCC93C LDR X0, [X0 + 0xEF8]
	0x03CCC940 BL 0x1C16CF4
	0x03CCC944 MOVZ W8, 0x1
	0x03CCC948 STRB W8, [X19 + 0x386]
	0x03CCC94C LDR X0, [X20]
	0x03CCC950 ADRP X21, 0x427000
	0x03CCC954 LDR W8, [X0 + 0xE0]
	0x03CCC958 LDR X21, [X21 + 0x598]
	0x03CCC95C CBNZ W8, 0x3CCC968
	0x03CCC960 BL 0x1C16DFC
	0x03CCC964 LDR X0, [X20]
	0x03CCC968 LDR X8, [X21]
	0x03CCC96C LDR X9, [X0 + 0xB8]
	0x03CCC970 LDR W10, [X8 + 0xE0]
	0x03CCC974 LDR X19, [X9 + 0x148]
	0x03CCC978 CBNZ W10, 0x3CCC984
	0x03CCC97C MOV X0, X8
	0x03CCC980 BL 0x1C16DFC
	0x03CCC984 MOV X0, X19
	0x03CCC988 MOV X1, X31
	0x03CCC98C MOV X2, X31
	0x03CCC990 BL 0x3C3883C
	0x03CCC994 TBZ X0, 0x0, 0x3CCCAAC
	0x03CCC998 ADRP X8, 0x495000
	0x03CCC99C LDR X8, [X8 + 0xEF8]
	0x03CCC9A0 MOV X1, X31
	0x03CCC9A4 LDR X0, [X8]
	0x03CCC9A8 BL 0x3C13E40
	0x03CCC9AC LDR X8, [X20]
	0x03CCC9B0 MOV X19, X0
	0x03CCC9B4 LDR W9, [X8 + 0xE0]
	0x03CCC9B8 CBNZ W9, 0x3CCC9C8
	0x03CCC9BC MOV X0, X8
	0x03CCC9C0 BL 0x1C16DFC
	0x03CCC9C4 LDR X8, [X20]
	0x03CCC9C8 LDR X8, [X8 + 0xB8]
	0x03CCC9CC STR X19, [X8 + 0x148]
	0x03CCC9D0 LDR X0, [X21]
	0x03CCC9D4 LDR W8, [X0 + 0xE0]
	0x03CCC9D8 CBNZ W8, 0x3CCC9E0
	0x03CCC9DC BL 0x1C16DFC
	0x03CCC9E0 MOV X0, X19
	0x03CCC9E4 MOV X1, X31
	0x03CCC9E8 MOV X2, X31
	0x03CCC9EC BL 0x3C3883C
	0x03CCC9F0 TBZ X0, 0x0, 0x3CCCA30
	0x03CCC9F4 ADRP X8, 0x495000
	0x03CCC9F8 LDR X8, [X8 + 0xEE8]
	0x03CCC9FC MOV X1, X31
	0x03CCCA00 LDR X0, [X8]
	0x03CCCA04 BL 0x3C13E40
	0x03CCCA08 LDR X8, [X20]
	0x03CCCA0C MOV X19, X0
	0x03CCCA10 LDR W9, [X8 + 0xE0]
	0x03CCCA14 CBNZ W9, 0x3CCCA24
	0x03CCCA18 MOV X0, X8
	0x03CCCA1C BL 0x1C16DFC
	0x03CCCA20 LDR X8, [X20]
	0x03CCCA24 LDR X9, [X8 + 0xB8]
	0x03CCCA28 STR X19, [X9 + 0x148]
	0x03CCCA2C B 0x3CCCA34
	0x03CCCA30 LDR X8, [X20]
	0x03CCCA34 LDR W9, [X8 + 0xE0]
	0x03CCCA38 CBNZ W9, 0x3CCCA48
	0x03CCCA3C MOV X0, X8
	0x03CCCA40 BL 0x1C16DFC
	0x03CCCA44 LDR X8, [X20]
	0x03CCCA48 LDR X0, [X21]
	0x03CCCA4C LDR X8, [X8 + 0xB8]
	0x03CCCA50 LDR W9, [X0 + 0xE0]
	0x03CCCA54 LDR X19, [X8 + 0x148]
	0x03CCCA58 CBNZ W9, 0x3CCCA60
	0x03CCCA5C BL 0x1C16DFC
	0x03CCCA60 MOV X0, X19
	0x03CCCA64 MOV X1, X31
	0x03CCCA68 MOV X2, X31
	0x03CCCA6C BL 0x3C3883C
	0x03CCCA70 TBZ X0, 0x0, 0x3CCCAAC
	0x03CCCA74 ADRP X8, 0x495000
	0x03CCCA78 LDR X8, [X8 + 0xEF0]
	0x03CCCA7C MOV X1, X31
	0x03CCCA80 LDR X0, [X8]
	0x03CCCA84 BL 0x3C13E40
	0x03CCCA88 LDR X8, [X20]
	0x03CCCA8C MOV X19, X0
	0x03CCCA90 LDR W9, [X8 + 0xE0]
	0x03CCCA94 CBNZ W9, 0x3CCCAA4
	0x03CCCA98 MOV X0, X8
	0x03CCCA9C BL 0x1C16DFC
	0x03CCCAA0 LDR X8, [X20]
	0x03CCCAA4 LDR X8, [X8 + 0xB8]
	0x03CCCAA8 STR X19, [X8 + 0x148]
	0x03CCCAAC LDR X0, [X20]
	0x03CCCAB0 LDR W8, [X0 + 0xE0]
	0x03CCCAB4 CBNZ W8, 0x3CCCAC0
	0x03CCCAB8 BL 0x1C16DFC
	0x03CCCABC LDR X0, [X20]
	0x03CCCAC0 LDR X8, [X0 + 0xB8]
	0x03CCCAC4 LDP X20, X19, [X31 + 0x10]
	0x03CCCAC8 LDR X0, [X8 + 0x148]
	0x03CCCACC LDP X30, X21, [X31], #0x20
	0x03CCCAD0 RET
	0x03CCCAD4 STP X30, X21, [X31 - 0x20]!
	0x03CCCAD8 STP X20, X19, [X31 + 0x10]
	0x03CCCADC ADRP X19, 0x71B000
	0x03CCCAE0 ADRP X20, 0x495000
	0x03CCCAE4 LDRB W8, [X19 + 0x387]
	0x03CCCAE8 LDR X20, [X20 + 0x268]
	0x03CCCAEC TBNZ X8, 0x0, 0x3CCCB34
	0x03CCCAF0 ADRP X0, 0x427000
	0x03CCCAF4 LDR X0, [X0 + 0x598]
	0x03CCCAF8 BL 0x1C16CF4
	0x03CCCAFC ADRP X0, 0x495000
	0x03CCCB00 LDR X0, [X0 + 0x268]
	0x03CCCB04 BL 0x1C16CF4
	0x03CCCB08 ADRP X0, 0x495000
	0x03CCCB0C LDR X0, [X0 + 0xF00]
	0x03CCCB10 BL 0x1C16CF4
	0x03CCCB14 ADRP X0, 0x48D000
	0x03CCCB18 LDR X0, [X0 + 0x5E0]
	0x03CCCB1C BL 0x1C16CF4
	0x03CCCB20 ADRP X0, 0x495000
	0x03CCCB24 LDR X0, [X0 + 0xF08]
	0x03CCCB28 BL 0x1C16CF4
	0x03CCCB2C MOVZ W8, 0x1
	0x03CCCB30 STRB W8, [X19 + 0x387]
	0x03CCCB34 LDR X0, [X20]
	0x03CCCB38 ADRP X21, 0x427000
	0x03CCCB3C LDR W8, [X0 + 0xE0]
	0x03CCCB40 LDR X21, [X21 + 0x598]
	0x03CCCB44 CBNZ W8, 0x3CCCB50
	0x03CCCB48 BL 0x1C16DFC
	0x03CCCB4C LDR X0, [X20]
	0x03CCCB50 LDR X8, [X21]
	0x03CCCB54 LDR X9, [X0 + 0xB8]
	0x03CCCB58 LDR W10, [X8 + 0xE0]
	0x03CCCB5C LDR X19, [X9 + 0x150]
	0x03CCCB60 CBNZ W10, 0x3CCCB6C
	0x03CCCB64 MOV X0, X8
	0x03CCCB68 BL 0x1C16DFC
	0x03CCCB6C MOV X0, X19
	0x03CCCB70 MOV X1, X31
	0x03CCCB74 MOV X2, X31
	0x03CCCB78 BL 0x3C3883C
	0x03CCCB7C TBZ X0, 0x0, 0x3CCCC94
	0x03CCCB80 ADRP X8, 0x48D000
	0x03CCCB84 LDR X8, [X8 + 0x5E0]
	0x03CCCB88 MOV X1, X31
	0x03CCCB8C LDR X0, [X8]
	0x03CCCB90 BL 0x3C13E40
	0x03CCCB94 LDR X8, [X20]
	0x03CCCB98 MOV X19, X0
	0x03CCCB9C LDR W9, [X8 + 0xE0]
	0x03CCCBA0 CBNZ W9, 0x3CCCBB0
	0x03CCCBA4 MOV X0, X8
	0x03CCCBA8 BL 0x1C16DFC
	0x03CCCBAC LDR X8, [X20]
	0x03CCCBB0 LDR X8, [X8 + 0xB8]
	0x03CCCBB4 STR X19, [X8 + 0x150]
	0x03CCCBB8 LDR X0, [X21]
	0x03CCCBBC LDR W8, [X0 + 0xE0]
	0x03CCCBC0 CBNZ W8, 0x3CCCBC8
	0x03CCCBC4 BL 0x1C16DFC
	0x03CCCBC8 MOV X0, X19
	0x03CCCBCC MOV X1, X31
	0x03CCCBD0 MOV X2, X31
	0x03CCCBD4 BL 0x3C3883C
	0x03CCCBD8 TBZ X0, 0x0, 0x3CCCC18
	0x03CCCBDC ADRP X8, 0x495000
	0x03CCCBE0 LDR X8, [X8 + 0xF08]
	0x03CCCBE4 MOV X1, X31
	0x03CCCBE8 LDR X0, [X8]
	0x03CCCBEC BL 0x3C13E40
	0x03CCCBF0 LDR X8, [X20]
	0x03CCCBF4 MOV X19, X0
	0x03CCCBF8 LDR W9, [X8 + 0xE0]
	0x03CCCBFC CBNZ W9, 0x3CCCC0C
	0x03CCCC00 MOV X0, X8
	0x03CCCC04 BL 0x1C16DFC
	0x03CCCC08 LDR X8, [X20]
	0x03CCCC0C LDR X9, [X8 + 0xB8]
	0x03CCCC10 STR X19, [X9 + 0x150]
	0x03CCCC14 B 0x3CCCC1C
	0x03CCCC18 LDR X8, [X20]
	0x03CCCC1C LDR W9, [X8 + 0xE0]
	0x03CCCC20 CBNZ W9, 0x3CCCC30
	0x03CCCC24 MOV X0, X8
	0x03CCCC28 BL 0x1C16DFC
	0x03CCCC2C LDR X8, [X20]
	0x03CCCC30 LDR X0, [X21]
	0x03CCCC34 LDR X8, [X8 + 0xB8]
	0x03CCCC38 LDR W9, [X0 + 0xE0]
	0x03CCCC3C LDR X19, [X8 + 0x150]
	0x03CCCC40 CBNZ W9, 0x3CCCC48
	0x03CCCC44 BL 0x1C16DFC
	0x03CCCC48 MOV X0, X19
	0x03CCCC4C MOV X1, X31
	0x03CCCC50 MOV X2, X31
	0x03CCCC54 BL 0x3C3883C
	0x03CCCC58 TBZ X0, 0x0, 0x3CCCC94
	0x03CCCC5C ADRP X8, 0x495000
	0x03CCCC60 LDR X8, [X8 + 0xF00]
	0x03CCCC64 MOV X1, X31
	0x03CCCC68 LDR X0, [X8]
	0x03CCCC6C BL 0x3C13E40
	0x03CCCC70 LDR X8, [X20]
	0x03CCCC74 MOV X19, X0
	0x03CCCC78 LDR W9, [X8 + 0xE0]
	0x03CCCC7C CBNZ W9, 0x3CCCC8C
	0x03CCCC80 MOV X0, X8
	0x03CCCC84 BL 0x1C16DFC
	0x03CCCC88 LDR X8, [X20]
	0x03CCCC8C LDR X8, [X8 + 0xB8]
	0x03CCCC90 STR X19, [X8 + 0x150]
	0x03CCCC94 LDR X0, [X20]
	0x03CCCC98 LDR W8, [X0 + 0xE0]
	0x03CCCC9C CBNZ W8, 0x3CCCCA8
	0x03CCCCA0 BL 0x1C16DFC
	0x03CCCCA4 LDR X0, [X20]
	0x03CCCCA8 LDR X8, [X0 + 0xB8]
	0x03CCCCAC LDP X20, X19, [X31 + 0x10]
	0x03CCCCB0 LDR X0, [X8 + 0x150]
	0x03CCCCB4 LDP X30, X21, [X31], #0x20
	0x03CCCCB8 RET
	0x03CCCCBC STP X29, X30, [X31 - 0x60]!
	0x03CCCCC0 STP X28, X27, [X31 + 0x10]
	0x03CCCCC4 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X20, 0x71C000
	014 Move W8, [X20+896]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x496000
	021 Move X0, [X0+1664]
	022 Call 0x1C17CF4
	023 Move X0, 0x496000
	024 Move X0, [X0+3576]
	025 Call 0x1C17CF4
	026 Move X0, 0x496000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x496000
	030 Move X0, [X0+3592]
	031 Call 0x1C17CF4
	032 Move X0, 0x496000
	033 Move X0, [X0+1672]
	034 Call 0x1C17CF4
	035 Move X0, 0x496000
	036 Move X0, [X0+3600]
	037 Call 0x1C17CF4
	038 Move X0, 0x496000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move X0, 0x496000
	042 Move X0, [X0+3616]
	043 Call 0x1C17CF4
	044 Move X0, 0x496000
	045 Move X0, [X0+3624]
	046 Call 0x1C17CF4
	047 Move X0, 0x496000
	048 Move X0, [X0+3632]
	049 Call 0x1C17CF4
	050 Move X0, 0x496000
	051 Move X0, [X0+608]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+896], W8
	055 Compare X19, 0
	056 JumpIfEqual {380}
	057 Move X26, 0x496000
	058 Move X26, [X26+608]
	059 Move X0, X19
	060 Move X1, X31
	061 Call TextAsset.get_instanceID, X0
	062 Move X8, [X26]
	063 Move W20, W0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {70}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X8, [X26]
	070 Move X8, [X8+184]
	071 Move X0, [X8]
	072 Compare X0, 0
	073 JumpIfEqual {380}
	074 Move X8, 0x496000
	075 Move X8, [X8+3592]
	076 Move W1, W20
	077 Move X2, [X8]
	078 Call Dictionary`2<Int32, FontAssetRef>.ContainsKey, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {264}
	083 Move X0, [X26]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {89}
	087 Call 0x1C17DFC
	088 Move X0, [X26]
	089 Move X8, [X0+184]
	090 Move X0, [X8]
	091 Compare X0, 0
	092 JumpIfEqual {380}
	093 Move X8, 0x496000
	094 Move X8, [X8+3624]
	095 Move W1, W20
	096 Move X2, [X8]
	097 Add X8, X31, 0
	098 Call Dictionary`2<Int32, FontAssetRef>.get_Item, X0, X1
	099 Move W21, [X31]
	100 Move W22, [X31+4]
	101 Move W23, [X31+8]
	102 Move W27, [X31+12]
	103 Move X24, [X31+16]
	104 Move X28, [X31+24]
	105 Move X0, X19
	106 Move X1, X31
	107 Call TextAsset.get_hashCode, X0
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, X19
	110 Move X1, X31
	111 Call FontAsset.get_familyNameHashCode, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X19
	114 Move X1, X31
	115 Call FontAsset.get_styleNameHashCode, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X19
	118 Move X1, X31
	119 Call TextAsset.get_hashCode, X0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, [X26]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X26]
	127 Move X8, [X0+184]
	128 Move X0, [X8+8]
	129 Compare X0, 0
	130 JumpIfEqual {380}
	131 Move X8, 0x496000
	132 Move X8, [X8+3608]
	133 Move W1, W21
	134 Move X2, [X8]
	135 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	136 Move X0, X19
	137 Move X1, X31
	138 Call TextAsset.get_hashCode, X0
	139 Move X8, [X26]
	140 Move X8, [X8+184]
	141 Move X8, [X8+8]
	142 Compare X8, 0
	143 JumpIfEqual {380}
	144 Move X9, 0x496000
	145 Move X9, [X9+1672]
	146 Move W21, W0
	147 Move X0, X8
	148 Move W1, W21
	149 Move X2, [X9]
	150 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {171}
	155 Move X0, [X26]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1C17DFC
	160 Move X0, [X26]
	161 Move X8, [X0+184]
	162 Move X0, [X8+8]
	163 Compare X0, 0
	164 JumpIfEqual {380}
	165 Move X8, 0x496000
	166 Move X8, [X8+1664]
	167 Move W1, W21
	168 Move X2, X19
	169 Move X3, [X8]
	170 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	171 Move X0, X19
	172 Move X1, X31
	173 Call FontAsset.get_familyNameHashCode, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X19
	176 Move X1, X31
	177 Call FontAsset.get_styleNameHashCode, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, [X26]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {185}
	183 Call 0x1C17DFC
	184 Move X0, [X26]
	185 Move X8, [X0+184]
	186 Move X0, [X8+16]
	187 Compare X0, 0
	188 JumpIfEqual {380}
	189 Move X8, 0x496000
	190 Move X8, [X8+3616]
	191 Move X1, X24
	192 Move X2, [X8]
	193 Call Dictionary`2<Int64, Object>.Remove, X0, X1
	194 Move X0, X19
	195 Move X1, X31
	196 Call FontAsset.get_familyNameHashCode, X0
	197 Move W22, W0
	198 Move X0, X19
	199 Move X1, X31
	200 Call FontAsset.get_styleNameHashCode, X0
	201 Move W23, W0
	202 Move X0, X19
	203 Move X1, X31
	204 Call FontAsset.get_styleNameHashCode, X0
	205 Move W25, W0
	206 Move X0, X19
	207 Move X1, X31
	208 Call FontAsset.get_familyNameHashCode, X0
	209 Move X8, [X26]
	210 Move X8, [X8+184]
	211 Move X8, [X8+16]
	212 Compare X8, 0
	213 JumpIfEqual {380}
	214 Move X9, 0x496000
	215 Move X9, [X9+3600]
	216 Move W24, W0
	217 NotImplemented "Instruction BFM not yet implemented."
	218 Move X0, X8
	219 Move X2, [X9]
	220 Move X1, X24
	221 Call Dictionary`2<Int64, Object>.ContainsKey, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {242}
	226 Move X0, [X26]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {232}
	230 Call 0x1C17DFC
	231 Move X0, [X26]
	232 Move X8, [X0+184]
	233 Move X0, [X8+16]
	234 Compare X0, 0
	235 JumpIfEqual {380}
	236 Move X8, 0x496000
	237 Move X8, [X8+3584]
	238 Move X1, X24
	239 Move X2, X19
	240 Move X3, [X8]
	241 Call Dictionary`2<Int64, Object>.Add, X0, X1, X2
	242 Move X0, [X26]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {248}
	246 Call 0x1C17DFC
	247 Move X0, [X26]
	248 Move X8, [X0+184]
	249 Move X0, [X8]
	250 Compare X0, 0
	251 JumpIfEqual {380}
	252 Move X8, 0x496000
	253 Move X8, [X8+3632]
	254 Add X2, X31, 0
	255 Move W1, W20
	256 Move [X31], W21
	257 Move [X31+4], W22
	258 Move X3, [X8]
	259 Move [X31+8], W23
	260 Move [X31+12], W27
	261 Move [X31+16], X24
	262 Move [X31+24], X28
	263 Call Dictionary`2<Int32, FontAssetRef>.set_Item, X0, X1, X2
	264 Move X0, X19
	265 Move X1, X31
	266 Call TextAsset.get_hashCode, X0
	267 Move W21, W0
	268 Move X0, X19
	269 Move X1, X31
	270 Call FontAsset.get_familyNameHashCode, X0
	271 Move W23, W0
	272 Move X0, X19
	273 Move X1, X31
	274 Call FontAsset.get_styleNameHashCode, X0
	275 Move W24, W0
	276 Move X0, [X26]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 NotImplemented "Instruction CSEL not yet implemented."
	279 Move W8, [X0+224]
	280 Compare W8, 0
	281 JumpIfNotEqual {284}
	282 Call 0x1C17DFC
	283 Move X0, [X26]
	284 Move X8, [X0+184]
	285 Move X0, [X8]
	286 Compare X0, 0
	287 JumpIfEqual {380}
	288 Move X8, 0x496000
	289 Move X8, [X8+3576]
	290 Move W21, W23
	291 NotImplemented "Instruction BFM not yet implemented."
	292 Add X2, X31, 0
	293 Move X3, [X8]
	294 Move W1, W20
	295 Move [X31], W22
	296 Move [X31+4], W23
	297 Move [X31+8], W24
	298 Move [X31+12], W31
	299 Move [X31+16], X21
	300 Move [X31+24], X19
	301 Call Dictionary`2<Int32, FontAssetRef>.Add, X0, X1, X2
	302 Move X8, [X26]
	303 Move X8, [X8+184]
	304 Move X0, [X8+8]
	305 Compare X0, 0
	306 JumpIfEqual {380}
	307 Move X8, 0x496000
	308 Move X8, [X8+1672]
	309 Move W1, W22
	310 Move X2, [X8]
	311 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfEqual {332}
	316 Move X0, [X26]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {322}
	320 Call 0x1C17DFC
	321 Move X0, [X26]
	322 Move X8, [X0+184]
	323 Move X0, [X8+8]
	324 Compare X0, 0
	325 JumpIfEqual {380}
	326 Move X8, 0x496000
	327 Move X8, [X8+1664]
	328 Move W1, W22
	329 Move X2, X19
	330 Move X3, [X8]
	331 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	332 Move X0, [X26]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {338}
	336 Call 0x1C17DFC
	337 Move X0, [X26]
	338 Move X8, [X0+184]
	339 Move X0, [X8+16]
	340 Compare X0, 0
	341 JumpIfEqual {380}
	342 Move X8, 0x496000
	343 Move X8, [X8+3600]
	344 Move X1, X21
	345 Move X2, [X8]
	346 Call Dictionary`2<Int64, Object>.ContainsKey, X0, X1
	347 Move TEMP, X0
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfEqual {367}
	351 Move X0, [X26]
	352 Move W8, [X0+224]
	353 Compare W8, 0
	354 JumpIfNotEqual {357}
	355 Call 0x1C17DFC
	356 Move X0, [X26]
	357 Move X8, [X0+184]
	358 Move X0, [X8+16]
	359 Compare X0, 0
	360 JumpIfEqual {380}
	361 Move X8, 0x496000
	362 Move X8, [X8+3584]
	363 Move X1, X21
	364 Move X2, X19
	365 Move X3, [X8]
	366 Call Dictionary`2<Int64, Object>.Add, X0, X1, X2
	367 Move X20, [X31+112]
	368 Move X19, [X31+120]
	369 Move X22, [X31+96]
	370 Move X21, [X31+104]
	371 Move X24, [X31+80]
	372 Move X23, [X31+88]
	373 Move X26, [X31+64]
	374 Move X25, [X31+72]
	375 Move X28, [X31+48]
	376 Move X27, [X31+56]
	377 Move X30, [X31+32]
	378 Add X31, X31, 128
	379 Return 
	380 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03CCCCE8 ADRP X25, 0x48D000
	0x03CCCCEC ADRP X24, 0x48D000
	0x03CCCCF0 ADRP X23, 0x48D000
	0x03CCCCF4 ADRP X22, 0x48D000
	0x03CCCCF8 ADRP X21, 0x48D000
	0x03CCCCFC ADRP X20, 0x42C000
	0x03CCCD00 ADRP X10, 0x48C000
	0x03CCCD04 LDR X28, [X28 + 0x7F0]
	0x03CCCD08 LDR X19, [X19 + 0x268]
	0x03CCCD0C LDR X27, [X27 + 0x7F8]
	0x03CCCD10 LDR X26, [X26 + 0x800]
	0x03CCCD14 LDR X25, [X25 + 0x808]
	0x03CCCD18 LDR X24, [X24 + 0x810]
	0x03CCCD1C LDRB W8, [X29 + 0x388]
	0x03CCCD20 LDR X23, [X23 + 0x818]
	0x03CCCD24 LDR X22, [X22 + 0x820]
	0x03CCCD28 LDR X21, [X21 + 0x828]
	0x03CCCD2C LDR X20, [X20 + 0x4E0]
	0x03CCCD30 LDR X10, [X10 + 0x5E0]
	0x03CCCD34 TBNZ X8, 0x0, 0x3CCCDCC
	0x03CCCD38 ADRP X0, 0x495000
	0x03CCCD3C LDR X0, [X0 + 0x268]
	0x03CCCD40 BL 0x1C16CF4
	0x03CCCD44 ADRP X0, 0x48D000
	0x03CCCD48 LDR X0, [X0 + 0x7F0]
	0x03CCCD4C BL 0x1C16CF4
	0x03CCCD50 ADRP X0, 0x42C000
	0x03CCCD54 LDR X0, [X0 + 0x4E0]
	0x03CCCD58 BL 0x1C16CF4
	0x03CCCD5C ADRP X0, 0x48C000
	0x03CCCD60 LDR X0, [X0 + 0x5E0]
	0x03CCCD64 BL 0x1C16CF4
	0x03CCCD68 ADRP X0, 0x48D000
	0x03CCCD6C LDR X0, [X0 + 0x810]
	0x03CCCD70 BL 0x1C16CF4
	0x03CCCD74 ADRP X0, 0x48D000
	0x03CCCD78 LDR X0, [X0 + 0x820]
	0x03CCCD7C BL 0x1C16CF4
	0x03CCCD80 ADRP X0, 0x48D000
	0x03CCCD84 LDR X0, [X0 + 0x828]
	0x03CCCD88 BL 0x1C16CF4
	0x03CCCD8C ADRP X0, 0x48D000
	0x03CCCD90 LDR X0, [X0 + 0x818]
	0x03CCCD94 BL 0x1C16CF4
	0x03CCCD98 ADRP X0, 0x48D000
	0x03CCCD9C LDR X0, [X0 + 0x7F8]
	0x03CCCDA0 BL 0x1C16CF4
	0x03CCCDA4 ADRP X0, 0x48D000
	0x03CCCDA8 LDR X0, [X0 + 0x808]
	0x03CCCDAC BL 0x1C16CF4
	0x03CCCDB0 ADRP X0, 0x48D000
	0x03CCCDB4 LDR X0, [X0 + 0x800]
	0x03CCCDB8 BL 0x1C16CF4
	0x03CCCDBC ADRP X10, 0x48C000
	0x03CCCDC0 LDR X10, [X10 + 0x5E0]
	0x03CCCDC4 MOVZ W8, 0x1
	0x03CCCDC8 STRB W8, [X29 + 0x388]
	0x03CCCDCC LDR X8, [X19]
	0x03CCCDD0 LDR X11, [X28]
	0x03CCCDD4 LDR X9, [X27]
	0x03CCCDD8 LDP X28, X27, [X31 + 0x10]
	0x03CCCDDC LDR X8, [X8 + 0xB8]
	0x03CCCDE0 STP X11, X9, [X8 + 0xF0]
	0x03CCCDE4 LDR X11, [X26]
	0x03CCCDE8 LDR X9, [X25]
	0x03CCCDEC LDP X26, X25, [X31 + 0x20]
	0x03CCCDF0 STP X11, X9, [X8 + 0x100]
	0x03CCCDF4 LDR X11, [X24]
	0x03CCCDF8 LDR X9, [X23]
	0x03CCCDFC LDP X24, X23, [X31 + 0x30]
	0x03CCCE00 STP X11, X9, [X8 + 0x110]
	0x03CCCE04 LDR X11, [X22]
	0x03CCCE08 LDR X9, [X21]
	0x03CCCE0C LDP X22, X21, [X31 + 0x40]
	0x03CCCE10 STP X11, X9, [X8 + 0x120]
	0x03CCCE14 LDR X11, [X20]
	0x03CCCE18 LDR X9, [X10]
	0x03CCCE1C LDP X20, X19, [X31 + 0x50]
	0x03CCCE20 MOVZ W10, 0x3F800000
	0x03CCCE24 STR W10, [X8 + 0x140]
	0x03CCCE28 STP X11, X9, [X8 + 0x130]
	0x03CCCE2C STRB W31, [X8 + 0x144]
	0x03CCCE30 LDP X29, X30, [X31], #0x60
	0x03CCCE34 B 0x3CCCE38
	0x03CCCE38 STR X30, [X31 - 0x20]!
	0x03CCCE3C STP X20, X19, [X31 + 0x10]
	0x03CCCE40 ADRP X20, 0x71B000
	0x03CCCE44 ADRP X19, 0x495000
	0x03CCCE48 LDRB W8, [X20 + 0x389]
	0x03CCCE4C LDR X19, [X19 + 0x268]
	0x03CCCE50 TBNZ X8, 0x0, 0x3CCD138
	0x03CCCE54 ADRP X0, 0x495000
	0x03CCCE58 LDR X0, [X0 + 0x268]
	0x03CCCE5C BL 0x1C16CF4
	0x03CCCE60 ADRP X0, 0x48D000
	0x03CCCE64 LDR X0, [X0 + 0x490]
	0x03CCCE68 BL 0x1C16CF4
	0x03CCCE6C ADRP X0, 0x48D000
	0x03CCCE70 LDR X0, [X0 + 0x498]
	0x03CCCE74 BL 0x1C16CF4
	0x03CCCE78 ADRP X0, 0x48D000
	0x03CCCE7C LDR X0, [X0 + 0x4A0]
	0x03CCCE80 BL 0x1C16CF4
	0x03CCCE84 ADRP X0, 0x48D000
	0x03CCCE88 LDR X0, [X0 + 0x4A8]
	0x03CCCE8C BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0x71C000
	014 Move X29, 0x496000
	015 Move X19, 0x496000
	016 Move X20, 0x496000
	017 Move X27, 0x496000
	018 Move X26, 0x496000
	019 Move X25, 0x496000
	020 Move X24, 0x496000
	021 Move X23, 0x429000
	022 Move X22, 0x429000
	023 Move X21, 0x496000
	024 Move X29, [X29+3640]
	025 Move X19, [X19+3648]
	026 Move X20, [X20+608]
	027 Move X27, [X27+1616]
	028 Move X26, [X26+1624]
	029 Move W8, [X28+897]
	030 Move X25, [X25+3656]
	031 Move X24, [X24+3664]
	032 Move X23, [X23+3632]
	033 Move X22, [X22+3616]
	034 Move X21, [X21+656]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {71}
	039 Move X0, 0x496000
	040 Move X0, [X0+3648]
	041 Call 0x1C17CF4
	042 Move X0, 0x496000
	043 Move X0, [X0+1624]
	044 Call 0x1C17CF4
	045 Move X0, 0x496000
	046 Move X0, [X0+3664]
	047 Call 0x1C17CF4
	048 Move X0, 0x496000
	049 Move X0, [X0+3640]
	050 Call 0x1C17CF4
	051 Move X0, 0x496000
	052 Move X0, [X0+3656]
	053 Call 0x1C17CF4
	054 Move X0, 0x496000
	055 Move X0, [X0+1616]
	056 Call 0x1C17CF4
	057 Move X0, 0x429000
	058 Move X0, [X0+3616]
	059 Call 0x1C17CF4
	060 Move X0, 0x429000
	061 Move X0, [X0+3632]
	062 Call 0x1C17CF4
	063 Move X0, 0x496000
	064 Move X0, [X0+608]
	065 Call 0x1C17CF4
	066 Move X0, 0x496000
	067 Move X0, [X0+656]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X28+897], W8
	071 Move X0, [X29]
	072 Call 0x1C17F10
	073 Move X1, [X19]
	074 Move X19, X0
	075 Call Dictionary`2<Int32, FontAssetRef>..ctor, X0
	076 Move X8, [X20]
	077 Move X8, [X8+184]
	078 Move [X8], X19
	079 Move X0, [X27]
	080 Call 0x1C17F10
	081 Move X1, [X26]
	082 Move X19, X0
	083 Call Dictionary`2<Int32, Object>..ctor, X0
	084 Move X8, [X20]
	085 Move X8, [X8+184]
	086 Move [X8+8], X19
	087 Move X0, [X25]
	088 Call 0x1C17F10
	089 Move X1, [X24]
	090 Move X19, X0
	091 Call Dictionary`2<Int64, Object>..ctor, X0
	092 Move X8, [X20]
	093 Move X8, [X8+184]
	094 Move [X8+16], X19
	095 Move X0, [X23]
	096 Call 0x1C17F10
	097 Move X2, [X22]
	098 Move W1, 16
	099 Move X19, X0
	100 Call List`1<Int32>..ctor, X0, X1
	101 Move X8, [X20]
	102 Move X8, [X8+184]
	103 Move [X8+24], X19
	104 Move X0, [X21]
	105 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	106 Move X8, [X20]
	107 Move X20, [X31+80]
	108 Move X19, [X31+88]
	109 Move X22, [X31+64]
	110 Move X21, [X31+72]
	111 Move X24, [X31+48]
	112 Move X23, [X31+56]
	113 Move X8, [X8+184]
	114 Move X26, [X31+32]
	115 Move X25, [X31+40]
	116 Move X28, [X31+16]
	117 Move X27, [X31+24]
	118 Move [X8+32], W0
	119 Move X29, [X31+96]
	120 Move X30, [X31+104]
	121 Return 

