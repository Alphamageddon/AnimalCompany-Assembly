Type: UnityEngine.TextCore.Text.HighlightState

Method: System.Void .ctor(UnityEngine.Color32 color, UnityEngine.TextCore.Text.Offset padding)

Disassembly:
	0x03CC66E0 B.GE 0x3CC679C
	0x03CC66E4 LDR X0, [X27]
	0x03CC66E8 LDR W8, [X0 + 0xE0]
	0x03CC66EC CBNZ W8, 0x3CC66F4

ISIL:
	001 Move [X0], W1
	002 Move [X0+4], S0
	003 Move [X0+12], S1
	004 Move [X0+12], S2
	005 Move [X0+20], S3
	006 Return 

Method: System.Boolean op_Equality(UnityEngine.TextCore.Text.HighlightState lhs, UnityEngine.TextCore.Text.HighlightState rhs)

Disassembly:
	0x03CC66F0 BL 0x1C16DFC
	0x03CC66F4 ADD W1, W25, 0x2
	0x03CC66F8 MOV X0, X22
	0x03CC66FC BL 0x3CC740C
	0x03CC6700 MOV W25, W19
	0x03CC6704 CMP W0, 0x3C
	0x03CC6708 B.NE 0x3CC694C
	0x03CC670C LDR X0, [X27]
	0x03CC6710 LDR W8, [X0 + 0xE0]
	0x03CC6714 CBNZ W8, 0x3CC671C
	0x03CC6718 BL 0x1C16DFC
	0x03CC671C ADD W1, W25, 0x1
	0x03CC6720 MOV X0, X22
	0x03CC6724 BL 0x3CC758C
	0x03CC6728 CMP W0, W28
	0x03CC672C B.LE 0x3CC67A4
	0x03CC6730 CMP W0, W29
	0x03CC6734 B.LE 0x3CC67F0
	0x03CC6738 MOVZ W8, 0x2CAE
	0x03CC673C MOVK W8, 0x320000
	0x03CC6740 CMP W0, W8
	0x03CC6744 B.EQ 0x3CC6898
	0x03CC6748 MOVZ W8, 0xBD17
	0x03CC674C MOVK W8, 0x5F90000
	0x03CC6750 CMP W0, W8
	0x03CC6754 B.EQ 0x3CC68D0
	0x03CC6758 MOVZ W8, 0xF418
	0x03CC675C MOVK W8, 0x72E60000
	0x03CC6760 CMP W0, W8
	0x03CC6764 B.NE 0x3CC6948
	0x03CC6768 TBNZ X21, 0x0, 0x3CC6944
	0x03CC676C LDR X0, [X27]
	0x03CC6770 LDR W8, [X0 + 0xE0]
	0x03CC6774 CBNZ W8, 0x3CC677C
	0x03CC6778 BL 0x1C16DFC
	0x03CC677C LDP X2, X3, [X31 + 0x10]
	0x03CC6780 LDR X4, [X31 + 0x8]
	0x03CC6784 MOV X0, X24
	0x03CC6788 MOV X1, X23
	0x03CC678C BL 0x3CC703C
	0x03CC6790 MOV W21, W31
	0x03CC6794 ADD W25, W25, 0x7
	0x03CC6798 B 0x3CC6978
	0x03CC679C MOVZ W0, 0x5C
	0x03CC67A0 B 0x3CC694C
	0x03CC67A4 CMP W0, W20
	0x03CC67A8 B.LE 0x3CC6834
	0x03CC67AC CMP W0, 0x8D0
	0x03CC67B0 B.EQ 0x3CC6914
	0x03CC67B4 CMP W0, 0x8F1
	0x03CC67B8 B.EQ 0x3CC6940
	0x03CC67BC CMP W0, W28
	0x03CC67C0 B.NE 0x3CC6948
	0x03CC67C4 TBNZ X21, 0x0, 0x3CC6944
	0x03CC67C8 LDR X8, [X24]
	0x03CC67CC CBZ X8, 0x3CC69E0
	0x03CC67D0 LDRSW X9, [X23]
	0x03CC67D4 LDR W10, [X8 + 0x18]
	0x03CC67D8 CMP W9, W10
	0x03CC67DC B.CS 0x3CC69DC
	0x03CC67E0 MOV W21, W31

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x722000
	014 Move W8, [X21+851]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x49C000
	022 Move X0, [X0+2872]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+851], W8
	026 Move W8, [X20]
	027 Move W9, [X19]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, [X20+1]
	030 Move W9, [X19+1]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, [X20+2]
	033 Move W9, [X19+2]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X20+3]
	036 Move W9, [X19+3]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, 0x49C000
	039 Move S10, [X20+4]
	040 Move S8, [X20+8]
	041 Move X8, [X8+2872]
	042 Move S11, [X20+12]
	043 Move S9, [X20+16]
	044 Move S15, [X19+4]
	045 Move S14, [X19+8]
	046 Move S13, [X19+12]
	047 Move S12, [X19+16]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move W0, W31
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 And W0, W8, W9
	061 Move W0, W31
	062 Move X20, [X31+80]
	063 Move X19, [X31+88]
	064 Move X30, [X31+64]
	065 Move X21, [X31+72]
	066 Move D9, [X31+48]
	067 Move D8, [X31+56]
	068 Move D11, [X31+32]
	069 Move D10, [X31+40]
	070 Move D13, [X31+16]
	071 Move D12, [X31+24]
	072 Move D15, [X31+96]
	073 Move D14, [X31+104]
	074 Return X0

Method: System.Boolean op_Inequality(UnityEngine.TextCore.Text.HighlightState lhs, UnityEngine.TextCore.Text.HighlightState rhs)

Disassembly:
	0x03CC67E4 ADD X8, X8, X9, 0x4, LSL
	0x03CC67E8 MOVZ W9, 0xAD
	0x03CC67EC B 0x3CC6888
	0x03CC67F0 MOVZ W8, 0x8527
	0x03CC67F4 MOVK W8, 0x10000
	0x03CC67F8 CMP W0, W8
	0x03CC67FC B.EQ 0x3CC6860
	0x03CC6800 CMP W0, W29
	0x03CC6804 B.NE 0x3CC6948
	0x03CC6808 TBNZ X21, 0x0, 0x3CC6944
	0x03CC680C LDR X8, [X24]
	0x03CC6810 CBZ X8, 0x3CC69E0
	0x03CC6814 LDRSW X9, [X23]
	0x03CC6818 LDR W10, [X8 + 0x18]
	0x03CC681C CMP W9, W10
	0x03CC6820 B.CS 0x3CC69DC
	0x03CC6824 MOV W21, W31
	0x03CC6828 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move W8, [X0+16]
	004 Move V0, [X0]
	005 Add X0, X31, 32
	006 Move [X31+48], W8
	007 Move [X31+2], V0
	008 Move W8, [X1+16]
	009 Move V0, [X1]
	010 Add X1, X31, 0
	011 Move [X31+16], W8
	012 Move [X31], V0
	013 Call HighlightState.op_Equality, X0, X1
	014 Move X30, [X31+64]
	015 NotImplemented "Instruction ORN not yet implemented."
	016 And W0, W8, 1
	017 Add X31, X31, 80
	018 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03CC682C MOVZ W9, 0xA0
	0x03CC6830 B 0x3CC68C0
	0x03CC6834 MOVZ W8, 0x3CB4
	0x03CC6838 MOVK W8, 0xE7AE0000
	0x03CC683C CMP W0, W8
	0x03CC6840 B.EQ 0x3CC6944
	0x03CC6844 CMP W0, W20
	0x03CC6848 B.NE 0x3CC6948
	0x03CC684C MOV W21, W31
	0x03CC6850 B 0x3CC6948
	0x03CC6854 MOVZ W0, 0xA
	0x03CC6858 MOV W25, W8
	0x03CC685C B 0x3CC694C
	0x03CC6860 TBNZ X21, 0x0, 0x3CC6944
	0x03CC6864 LDR X8, [X24]
	0x03CC6868 CBZ X8, 0x3CC69E0
	0x03CC686C LDRSW X9, [X23]
	0x03CC6870 LDR W10, [X8 + 0x18]
	0x03CC6874 CMP W9, W10
	0x03CC6878 B.CS 0x3CC69DC
	0x03CC687C MOV W21, W31
	0x03CC6880 ADD X8, X8, X9, 0x4, LSL
	0x03CC6884 MOVZ W9, 0x200D
	0x03CC6888 STR W9, [X8 + 0x24]
	0x03CC688C LDR W8, [X23]
	0x03CC6890 ADD W25, W25, 0x4
	0x03CC6894 B 0x3CC6970

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x722000
	007 Move X20, 0x49C000
	008 Move W8, [X21+852]
	009 Move X20, [X20+1992]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x49C000
	016 Move X0, [X0+1992]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+852], W8
	020 Move W8, [X19+16]
	021 Move V0, [X19]
	022 Move X0, [X20]
	023 Add X1, X31, 0
	024 Move [X31+16], W8
	025 Move [X31], V0
	026 Call 0x1C17E04
	027 Move X1, X31
	028 Call ValueType.GetHashCode, X0
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Add X31, X31, 64
	034 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03CC6898 TBNZ X21, 0x0, 0x3CC6944
	0x03CC689C LDR X8, [X24]
	0x03CC68A0 CBZ X8, 0x3CC69E0
	0x03CC68A4 LDRSW X9, [X23]
	0x03CC68A8 LDR W10, [X8 + 0x18]
	0x03CC68AC CMP W9, W10
	0x03CC68B0 B.CS 0x3CC69DC
	0x03CC68B4 MOV W21, W31
	0x03CC68B8 ADD X8, X8, X9, 0x4, LSL
	0x03CC68BC MOVZ W9, 0x200B
	0x03CC68C0 STR W9, [X8 + 0x24]
	0x03CC68C4 LDR W8, [X23]
	0x03CC68C8 ADD W25, W25, 0x5
	0x03CC68CC B 0x3CC6970
	0x03CC68D0 TBNZ X21, 0x0, 0x3CC6944
	0x03CC68D4 LDR X0, [X27]
	0x03CC68D8 LDR W8, [X0 + 0xE0]
	0x03CC68DC CBNZ W8, 0x3CC68E4
	0x03CC68E0 BL 0x1C16DFC
	0x03CC68E4 LDP X5, X6, [X31 + 0x10]
	0x03CC68E8 LDR X7, [X31 + 0x8]
	0x03CC68EC ADD X0, X31, 0x28
	0x03CC68F0 ADD X2, X31, 0x24
	0x03CC68F4 MOV W1, W25
	0x03CC68F8 MOV X3, X24
	0x03CC68FC MOV X4, X23
	0x03CC6900 BL 0x3CC6E0C
	0x03CC6904 TBZ X0, 0x0, 0x3CC684C
	0x03CC6908 LDR W25, [X31 + 0x24]
	0x03CC690C MOV W21, W31
	0x03CC6910 B 0x3CC6978
	0x03CC6914 TBNZ X21, 0x0, 0x3CC6944

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x722000
	008 Move X21, 0x49C000
	009 Move W8, [X22+853]
	010 Move X21, [X21+1992]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x49C000
	018 Move X0, [X0+1992]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+853], W8
	022 Move W8, [X20+16]
	023 Move V0, [X20]
	024 Move X0, [X21]
	025 Add X1, X31, 0
	026 Move [X31+16], W8
	027 Move [X31], V0
	028 Call 0x1C17E04
	029 Move X1, X19
	030 Move X2, X31
	031 Call ValueType.Equals, X0, X1
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X22, [X31+48]
	035 Move X21, [X31+56]
	036 Move X30, [X31+32]
	037 And W0, W0, 1
	038 Add X31, X31, 80
	039 Return X0

