Type: UnityEngine.TextCore.Text.TextGenerator/SpecialCharacter

Method: System.Void .ctor(UnityEngine.TextCore.Text.Character character, System.Int32 materialIndex)

Disassembly:
	0x03CC6274 LDP X20, X19, [X31 + 0x30]
	0x03CC6278 LDP X22, X21, [X31 + 0x20]
	0x03CC627C LDP X30, X23, [X31 + 0x10]
	0x03CC6280 ADD X31, X31, 0x40
	0x03CC6284 RET
	0x03CC6288 STR X30, [X31 - 0x10]!
	0x03CC628C CBZ W1, 0x3CC62C8
	0x03CC6290 CBZ X0, 0x3CC63E4
	0x03CC6294 LDR W9, [X0 + 0x18]
	0x03CC6298 CMP W9, W1
	0x03CC629C B.LS 0x3CC63E0
	0x03CC62A0 ADD X8, X0, W1, 0x1, SXTW
	0x03CC62A4 LDRH W10, [X8 + 0x20]
	0x03CC62A8 ADD W8, W2, W1
	0x03CC62AC CMP W10, 0x2D
	0x03CC62B0 B.EQ 0x3CC62D8
	0x03CC62B4 CMP W10, 0x2B
	0x03CC62B8 B.NE 0x3CC62C0
	0x03CC62BC ADD W1, W1, 0x1
	0x03CC62C0 MOVZ W10, 0x1
	0x03CC62C4 B 0x3CC62E0
	0x03CC62C8 ADRP X8, 0xFFFFFFFFFCE24000
	0x03CC62CC LDR V0, [X8 + 0x214]
	0x03CC62D0 MOV W8, W31
	0x03CC62D4 B 0x3CC63D4
	0x03CC62D8 ADD W1, W1, 0x1
	0x03CC62DC MOVN W10, 0x0
	0x03CC62E0 CMP W1, W8
	0x03CC62E4 FMOV S0, W31
	0x03CC62E8 B.GE 0x3CC63D4
	0x03CC62EC ADRP X13, 0xFFFFFFFFFCE24000
	0x03CC62F0 LDR V3, [X13 + 0xBC]
	0x03CC62F4 SXTW X12, W8
	0x03CC62F8 ADD X11, X0, W1, 0x1, SXTW
	0x03CC62FC SCVTF S1, W10
	0x03CC6300 SXTW X10, W10
	0x03CC6304 FMOV S2, W31
	0x03CC6308 ADD X11, X11, 0x20
	0x03CC630C SUB X12, X12, W1, SXTW
	0x03CC6310 MOVZ W13, 0x1
	0x03CC6314 FMOV S4, 10
	0x03CC6318 FMOV S0, W31
	0x03CC631C CMP W1, W9
	0x03CC6320 B.CS 0x3CC63E0
	0x03CC6324 LDRH W15, [X11]
	0x03CC6328 CMP W15, 0x2E
	0x03CC632C SUB W14, W15, 0x30
	0x03CC6330 B.EQ 0x3CC634C
	0x03CC6334 AND W16, W14, 0xFFFF
	0x03CC6338 CMP W16, 0x9
	0x03CC633C B.LS 0x3CC634C
	0x03CC6340 CMP W15, 0x2C
	0x03CC6344 B.NE 0x3CC6394
	0x03CC6348 B 0x3CC63A8
	0x03CC634C CMP W15, 0x2E
	0x03CC6350 B.NE 0x3CC6360
	0x03CC6354 MOV W13, W31
	0x03CC6358 MOV V2.16B, V3.16B
	0x03CC635C B 0x3CC6394
	0x03CC6360 TBZ X13, 0x0, 0x3CC637C
	0x03CC6364 MUL X13, X14, X10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x722000
	007 Move W8, [X22+843]
	008 Move W19, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x49C000
	016 Move X0, [X0+600]
	017 Call 0x1C17CF4
	018 Move X0, 0x42E000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+843], W8
	023 Move [X20], X21
	024 Compare X21, 0
	025 JumpIfEqual {73}
	026 Move X22, 0x42E000
	027 Move X22, [X22+1432]
	028 Move X0, X21
	029 Move X1, X31
	030 Call TextElement.get_textAsset, X0
	031 Compare X0, 0
	032 JumpIfEqual {40}
	033 Move X8, 0x49C000
	034 Move X8, [X8+600]
	035 Move X9, [X0]
	036 Move X8, [X8]
	037 Move W11, [X9+304]
	038 Move W10, [X8+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X21, X31
	041 Move X9, [X9+200]
	042 Add X9, X9, X10
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Move [X20+8], X21
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X21
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move X8, X31
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {65}
	061 Move X8, [X20+8]
	062 Compare X8, 0
	063 JumpIfEqual {73}
	064 Move X8, [X8+40]
	065 Move [X20+16], X8
	066 Move [X20+24], W19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Call 0x1C17F20

