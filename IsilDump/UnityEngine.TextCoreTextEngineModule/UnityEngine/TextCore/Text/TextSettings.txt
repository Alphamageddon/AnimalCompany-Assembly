Type: UnityEngine.TextCore.Text.TextSettings

Method: System.String get_version()

Disassembly:
	0x03CCCF00 LDR X0, [X0 + 0x4E8]
	0x03CCCF04 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_version(System.String value)

Disassembly:
	0x03CCCF08 ADRP X0, 0x48D000
	0x03CCCF0C LDR X0, [X0 + 0x4F0]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: UnityEngine.TextCore.Text.FontAsset get_defaultFontAsset()

Disassembly:
	0x03CCCF10 BL 0x1C16CF4
	0x03CCCF14 ADRP X0, 0x48D000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_defaultFontAsset(UnityEngine.TextCore.Text.FontAsset value)

Disassembly:
	0x03CCCF18 LDR X0, [X0 + 0x4F8]
	0x03CCCF1C BL 0x1C16CF4

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_defaultFontAssetPath()

Disassembly:
	0x03CCCF20 ADRP X0, 0x48D000
	0x03CCCF24 LDR X0, [X0 + 0x500]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_defaultFontAssetPath(System.String value)

Disassembly:
	0x03CCCF28 BL 0x1C16CF4
	0x03CCCF2C ADRP X0, 0x48B000

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> get_fallbackFontAssets()

Disassembly:
	0x03CCCF30 LDR X0, [X0 + 0x890]
	0x03CCCF34 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_fallbackFontAssets(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> value)

Disassembly:
	0x03CCCF38 ADRP X0, 0x48D000
	0x03CCCF3C LDR X0, [X0 + 0x508]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Boolean get_matchMaterialPreset()

Disassembly:
	0x03CCCF40 BL 0x1C16CF4
	0x03CCCF44 ADRP X0, 0x48D000

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_matchMaterialPreset(System.Boolean value)

Disassembly:
	0x03CCCF48 LDR X0, [X0 + 0x510]
	0x03CCCF4C BL 0x1C16CF4
	0x03CCCF50 ADRP X0, 0x48D000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+56], W8
	003 Return 

Method: System.Int32 get_missingCharacterUnicode()

Disassembly:
	0x03CCCF54 LDR X0, [X0 + 0x518]
	0x03CCCF58 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: System.Void set_missingCharacterUnicode(System.Int32 value)

Disassembly:
	0x03CCCF5C ADRP X0, 0x48D000
	0x03CCCF60 LDR X0, [X0 + 0x520]

ISIL:
	001 Move [X0+60], W1
	002 Return 

Method: System.Boolean get_clearDynamicDataOnBuild()

Disassembly:
	0x03CCCF64 BL 0x1C16CF4
	0x03CCCF68 ADRP X0, 0x48D000

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_clearDynamicDataOnBuild(System.Boolean value)

Disassembly:
	0x03CCCF6C LDR X0, [X0 + 0x528]
	0x03CCCF70 BL 0x1C16CF4
	0x03CCCF74 ADRP X0, 0x481000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+64], W8
	003 Return 

Method: UnityEngine.TextCore.Text.SpriteAsset get_defaultSpriteAsset()

Disassembly:
	0x03CCCF78 LDR X0, [X0 + 0xB00]
	0x03CCCF7C BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_defaultSpriteAsset(UnityEngine.TextCore.Text.SpriteAsset value)

Disassembly:
	0x03CCCF80 ADRP X0, 0x48D000
	0x03CCCF84 LDR X0, [X0 + 0x530]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_defaultSpriteAssetPath()

Disassembly:
	0x03CCCF88 BL 0x1C16CF4
	0x03CCCF8C ADRP X0, 0x495000

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_defaultSpriteAssetPath(System.String value)

Disassembly:
	0x03CCCF90 LDR X0, [X0 + 0xF18]
	0x03CCCF94 BL 0x1C16CF4

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> get_fallbackSpriteAssets()

Disassembly:
	0x03CCCF98 ADRP X0, 0x48D000
	0x03CCCF9C LDR X0, [X0 + 0x538]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_fallbackSpriteAssets(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> value)

Disassembly:
	0x03CCCFA0 BL 0x1C16CF4
	0x03CCCFA4 ADRP X0, 0x48D000

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.UInt32 get_missingSpriteCharacterUnicode()

Disassembly:
	0x03CCCFA8 LDR X0, [X0 + 0x540]
	0x03CCCFAC BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_missingSpriteCharacterUnicode(System.UInt32 value)

Disassembly:
	0x03CCCFB0 ADRP X0, 0x48D000
	0x03CCCFB4 LDR X0, [X0 + 0x548]

ISIL:
	001 Move [X0+96], W1
	002 Return 

Method: UnityEngine.TextCore.Text.TextStyleSheet get_defaultStyleSheet()

Disassembly:
	0x03CCCFB8 BL 0x1C16CF4
	0x03CCCFBC ADRP X0, 0x48D000

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_defaultStyleSheet(UnityEngine.TextCore.Text.TextStyleSheet value)

Disassembly:
	0x03CCCFC0 LDR X0, [X0 + 0x550]
	0x03CCCFC4 BL 0x1C16CF4

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.String get_styleSheetsResourcePath()

Disassembly:
	0x03CCCFC8 ADRP X0, 0x48D000
	0x03CCCFCC LDR X0, [X0 + 0x558]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_styleSheetsResourcePath(System.String value)

Disassembly:
	0x03CCCFD0 BL 0x1C16CF4
	0x03CCCFD4 ADRP X0, 0x48D000

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.String get_defaultColorGradientPresetsPath()

Disassembly:
	0x03CCCFD8 LDR X0, [X0 + 0x560]
	0x03CCCFDC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_defaultColorGradientPresetsPath(System.String value)

Disassembly:
	0x03CCCFE0 ADRP X0, 0x495000
	0x03CCCFE4 LDR X0, [X0 + 0xF20]

ISIL:
	001 Move [X0+120], X1
	002 Return 

Method: UnityEngine.TextCore.Text.UnicodeLineBreakingRules get_lineBreakingRules()

Disassembly:
	0x03CCCFE8 BL 0x1C16CF4
	0x03CCCFEC ADRP X0, 0x48D000
	0x03CCCFF0 LDR X0, [X0 + 0x568]
	0x03CCCFF4 BL 0x1C16CF4
	0x03CCCFF8 ADRP X0, 0x48D000
	0x03CCCFFC LDR X0, [X0 + 0x570]
	0x03CCD000 BL 0x1C16CF4
	0x03CCD004 ADRP X0, 0x48C000
	0x03CCD008 LDR X0, [X0 + 0x578]
	0x03CCD00C BL 0x1C16CF4
	0x03CCD010 ADRP X0, 0x48C000
	0x03CCD014 LDR X0, [X0 + 0x580]
	0x03CCD018 BL 0x1C16CF4
	0x03CCD01C ADRP X0, 0x48C000
	0x03CCD020 LDR X0, [X0 + 0x588]
	0x03CCD024 BL 0x1C16CF4
	0x03CCD028 ADRP X0, 0x48C000
	0x03CCD02C LDR X0, [X0 + 0x598]
	0x03CCD030 BL 0x1C16CF4
	0x03CCD034 ADRP X0, 0x48C000
	0x03CCD038 LDR X0, [X0 + 0x5A0]
	0x03CCD03C BL 0x1C16CF4
	0x03CCD040 ADRP X0, 0x494000
	0x03CCD044 LDR X0, [X0 + 0xF28]
	0x03CCD048 BL 0x1C16CF4
	0x03CCD04C ADRP X0, 0x48C000
	0x03CCD050 LDR X0, [X0 + 0x5A8]
	0x03CCD054 BL 0x1C16CF4
	0x03CCD058 ADRP X0, 0x48C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x71C000
	005 Move W8, [X20+898]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x495000
	012 Move X0, [X0+3672]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+898], W8
	016 Move X0, [X19+128]
	017 Compare X0, 0
	018 JumpIfNotEqual {32}
	019 Move X8, 0x495000
	020 Move X8, [X8+3672]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X19+128], X20
	027 Compare X20, 0
	028 JumpIfEqual {36}
	029 Move X0, X20
	030 Call UnicodeLineBreakingRules.LoadLineBreakingRules, X0
	031 Move X0, [X19+128]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Void set_lineBreakingRules(UnityEngine.TextCore.Text.UnicodeLineBreakingRules value)

Disassembly:
	0x03CCD248 LDR X8, [X19]
	0x03CCD24C MOV X1, X31

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: System.Boolean get_useModernHangulLineBreakingRules()

Disassembly:
	0x03CCD250 LDR X8, [X8 + 0xB8]
	0x03CCD254 STR W0, [X8 + 0x18]

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.Void set_useModernHangulLineBreakingRules(System.Boolean value)

Disassembly:
	0x03CCD258 ADRP X8, 0x494000
	0x03CCD25C LDR X8, [X8 + 0xF20]
	0x03CCD260 LDR X0, [X8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+136], W8
	003 Return 

Method: System.Boolean get_displayWarnings()

Disassembly:
	0x03CCD264 BL 0x3C124EC
	0x03CCD268 LDR X8, [X19]

ISIL:
	001 Move W0, [X0+137]
	002 Return X0

Method: System.Void set_displayWarnings(System.Boolean value)

Disassembly:
	0x03CCD26C MOV X1, X31
	0x03CCD270 LDR X8, [X8 + 0xB8]
	0x03CCD274 STR W0, [X8 + 0x1C]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+137], W8
	003 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03CCD278 ADRP X8, 0x494000
	0x03CCD27C LDR X8, [X8 + 0xF30]
	0x03CCD280 LDR X0, [X8]
	0x03CCD284 BL 0x3C124EC
	0x03CCD288 LDR X8, [X19]
	0x03CCD28C MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Call TextSettings.get_lineBreakingRules, X0
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call UnicodeLineBreakingRules.LoadLineBreakingRules, X0
	007 Return 
	008 Call 0x1C17F20

Method: System.Void InitializeFontReferenceLookup()

Disassembly:
	0x03CCD290 LDR X8, [X8 + 0xB8]
	0x03CCD294 STR W0, [X8 + 0x20]
	0x03CCD298 ADRP X8, 0x494000
	0x03CCD29C LDR X8, [X8 + 0xF38]
	0x03CCD2A0 LDR X0, [X8]
	0x03CCD2A4 BL 0x3C124EC
	0x03CCD2A8 LDR X8, [X19]
	0x03CCD2AC MOV X1, X31
	0x03CCD2B0 LDR X8, [X8 + 0xB8]
	0x03CCD2B4 STR W0, [X8 + 0x24]
	0x03CCD2B8 ADRP X8, 0x494000
	0x03CCD2BC LDR X8, [X8 + 0xF28]
	0x03CCD2C0 LDR X0, [X8]
	0x03CCD2C4 BL 0x3C124EC
	0x03CCD2C8 LDR X8, [X19]
	0x03CCD2CC MOV X1, X31
	0x03CCD2D0 LDR X8, [X8 + 0xB8]
	0x03CCD2D4 STR W0, [X8 + 0x28]
	0x03CCD2D8 ADRP X8, 0x48C000
	0x03CCD2DC LDR X8, [X8 + 0x608]
	0x03CCD2E0 LDR X0, [X8]
	0x03CCD2E4 BL 0x3C124EC
	0x03CCD2E8 LDR X8, [X19]
	0x03CCD2EC MOV X1, X31
	0x03CCD2F0 LDR X8, [X8 + 0xB8]
	0x03CCD2F4 STR W0, [X8 + 0x2C]
	0x03CCD2F8 ADRP X8, 0x48C000
	0x03CCD2FC LDR X8, [X8 + 0x5A8]
	0x03CCD300 LDR X0, [X8]
	0x03CCD304 BL 0x3C124EC
	0x03CCD308 LDR X8, [X19]
	0x03CCD30C MOV X1, X31
	0x03CCD310 LDR X8, [X8 + 0xB8]
	0x03CCD314 STR W0, [X8 + 0x30]
	0x03CCD318 ADRP X8, 0x48C000
	0x03CCD31C LDR X8, [X8 + 0x4F0]
	0x03CCD320 LDR X0, [X8]
	0x03CCD324 BL 0x3C124EC
	0x03CCD328 LDR X8, [X19]
	0x03CCD32C MOV X1, X31
	0x03CCD330 LDR X8, [X8 + 0xB8]
	0x03CCD334 STR W0, [X8 + 0x34]
	0x03CCD338 ADRP X8, 0x48C000
	0x03CCD33C LDR X8, [X8 + 0x628]
	0x03CCD340 LDR X0, [X8]
	0x03CCD344 BL 0x3C124EC
	0x03CCD348 LDR X8, [X19]
	0x03CCD34C MOV X1, X31
	0x03CCD350 LDR X8, [X8 + 0xB8]
	0x03CCD354 STR W0, [X8 + 0x38]
	0x03CCD358 ADRP X8, 0x48C000
	0x03CCD35C LDR X8, [X8 + 0x588]
	0x03CCD360 LDR X0, [X8]
	0x03CCD364 BL 0x3C124EC
	0x03CCD368 LDR X8, [X19]
	0x03CCD36C MOV X1, X31
	0x03CCD370 LDR X8, [X8 + 0xB8]
	0x03CCD374 STR W0, [X8 + 0x3C]
	0x03CCD378 ADRP X8, 0x48C000
	0x03CCD37C LDR X8, [X8 + 0x4F8]
	0x03CCD380 LDR X0, [X8]
	0x03CCD384 BL 0x3C124EC
	0x03CCD388 LDR X8, [X19]
	0x03CCD38C MOV X1, X31
	0x03CCD390 LDR X8, [X8 + 0xB8]
	0x03CCD394 STR W0, [X8 + 0x40]
	0x03CCD398 ADRP X8, 0x48C000
	0x03CCD39C LDR X8, [X8 + 0x5F0]
	0x03CCD3A0 LDR X0, [X8]
	0x03CCD3A4 BL 0x3C124EC
	0x03CCD3A8 LDR X8, [X19]
	0x03CCD3AC MOV X1, X31
	0x03CCD3B0 LDR X8, [X8 + 0xB8]
	0x03CCD3B4 STR W0, [X8 + 0x44]
	0x03CCD3B8 ADRP X8, 0x48C000
	0x03CCD3BC LDR X8, [X8 + 0x498]
	0x03CCD3C0 LDR X0, [X8]
	0x03CCD3C4 BL 0x3C124EC
	0x03CCD3C8 LDR X8, [X19]
	0x03CCD3CC MOV X1, X31
	0x03CCD3D0 LDR X8, [X8 + 0xB8]
	0x03CCD3D4 STR W0, [X8 + 0x48]
	0x03CCD3D8 ADRP X8, 0x48C000
	0x03CCD3DC LDR X8, [X8 + 0x5F8]
	0x03CCD3E0 LDR X0, [X8]
	0x03CCD3E4 BL 0x3C124EC
	0x03CCD3E8 LDR X8, [X19]
	0x03CCD3EC MOV X1, X31
	0x03CCD3F0 LDR X8, [X8 + 0xB8]
	0x03CCD3F4 STR W0, [X8 + 0x4C]
	0x03CCD3F8 ADRP X8, 0x48C000
	0x03CCD3FC LDR X8, [X8 + 0x4C0]
	0x03CCD400 LDR X0, [X8]
	0x03CCD404 BL 0x3C124EC
	0x03CCD408 LDR X8, [X19]
	0x03CCD40C MOV X1, X31
	0x03CCD410 LDR X8, [X8 + 0xB8]
	0x03CCD414 STR W0, [X8 + 0x50]
	0x03CCD418 ADRP X8, 0x48C000
	0x03CCD41C LDR X8, [X8 + 0x520]
	0x03CCD420 LDR X0, [X8]
	0x03CCD424 BL 0x3C124EC
	0x03CCD428 LDR X8, [X19]
	0x03CCD42C MOV X1, X31
	0x03CCD430 LDR X8, [X8 + 0xB8]
	0x03CCD434 STR W0, [X8 + 0x54]
	0x03CCD438 ADRP X8, 0x48C000
	0x03CCD43C LDR X8, [X8 + 0x528]
	0x03CCD440 LDR X0, [X8]
	0x03CCD444 BL 0x3C124EC
	0x03CCD448 LDR X8, [X19]
	0x03CCD44C MOV X1, X31
	0x03CCD450 LDR X8, [X8 + 0xB8]
	0x03CCD454 STR W0, [X8 + 0x58]
	0x03CCD458 ADRP X8, 0x48C000
	0x03CCD45C LDR X8, [X8 + 0x5D0]
	0x03CCD460 LDR X0, [X8]
	0x03CCD464 BL 0x3C124EC
	0x03CCD468 LDR X8, [X19]
	0x03CCD46C MOV X1, X31
	0x03CCD470 LDR X8, [X8 + 0xB8]
	0x03CCD474 STR W0, [X8 + 0x5C]
	0x03CCD478 ADRP X8, 0x48C000
	0x03CCD47C LDR X8, [X8 + 0x4A0]
	0x03CCD480 LDR X0, [X8]
	0x03CCD484 BL 0x3C124EC
	0x03CCD488 LDR X8, [X19]
	0x03CCD48C MOV X1, X31
	0x03CCD490 LDR X8, [X8 + 0xB8]
	0x03CCD494 STR W0, [X8 + 0x60]
	0x03CCD498 ADRP X8, 0x48C000
	0x03CCD49C LDR X8, [X8 + 0x618]
	0x03CCD4A0 LDR X0, [X8]
	0x03CCD4A4 BL 0x3C124EC
	0x03CCD4A8 LDR X8, [X19]
	0x03CCD4AC MOV X1, X31
	0x03CCD4B0 LDR X8, [X8 + 0xB8]
	0x03CCD4B4 STR W0, [X8 + 0x64]
	0x03CCD4B8 ADRP X8, 0x48C000
	0x03CCD4BC LDR X8, [X8 + 0x568]
	0x03CCD4C0 LDR X0, [X8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x71B000
	014 Move W8, [X20+899]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {52}
	020 Move X0, 0x427000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x495000
	024 Move X0, [X0+1664]
	025 Call 0x1C17CF4
	026 Move X0, 0x495000
	027 Move X0, [X0+1672]
	028 Call 0x1C17CF4
	029 Move X0, 0x495000
	030 Move X0, [X0+3704]
	031 Call 0x1C17CF4
	032 Move X0, 0x495000
	033 Move X0, [X0+3712]
	034 Call 0x1C17CF4
	035 Move X0, 0x495000
	036 Move X0, [X0+3720]
	037 Call 0x1C17CF4
	038 Move X0, 0x495000
	039 Move X0, [X0+3728]
	040 Call 0x1C17CF4
	041 Move X0, 0x495000
	042 Move X0, [X0+3736]
	043 Call 0x1C17CF4
	044 Move X0, 0x427000
	045 Move X0, [X0+1432]
	046 Call 0x1C17CF4
	047 Move X0, 0x495000
	048 Move X0, [X0+3744]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+899], W8
	052 Move X21, [X19+152]
	053 Compare X21, 0
	054 JumpIfNotEqual {65}
	055 Move X8, 0x495000
	056 Move X8, [X8+3736]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X8, 0x495000
	060 Move X8, [X8+3712]
	061 Move X21, X0
	062 Move X1, [X8]
	063 Call List`1<FontReferenceMap>..ctor, X0
	064 Move [X19+152], X21
	065 Compare X21, 0
	066 JumpIfEqual {172}
	067 Move X23, 0x495000
	068 Move X24, 0x427000
	069 Move X25, 0x427000
	070 Move X26, 0x495000
	071 Move X27, 0x495000
	072 Move X28, 0x495000
	073 Move X29, 0x495000
	074 Move X23, [X23+3728]
	075 Move X24, [X24+1432]
	076 Move X25, [X25+2600]
	077 Move X26, [X26+3744]
	078 Move X27, [X27+3704]
	079 Move X28, [X28+1672]
	080 Move X29, [X29+1664]
	081 Move W20, W31
	082 Move W8, [X21+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X2, [X23]
	085 Move X0, X21
	086 Move W1, W20
	087 Call List`1<FontReferenceMap>.get_Item, X0, X1
	088 Move X22, X0
	089 Move X0, [X24]
	090 Move X21, X1
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X22
	096 Move X1, X31
	097 Move X2, X31
	098 Call Object.op_Equality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {116}
	103 Move X0, [X24]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X21
	109 Move X1, X31
	110 Move X2, X31
	111 Call Object.op_Equality, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {135}
	116 Move X0, [X25]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, [X26]
	122 Move X1, X31
	123 Call Debug.Log, X0
	124 Move X0, [X19+152]
	125 Compare X0, 0
	126 JumpIfEqual {172}
	127 Move X2, [X27]
	128 Move W1, W20
	129 Call List`1<FontReferenceMap>.RemoveAt, X0, X1
	130 Subtract W20, W20, 1
	131 Move X21, [X19+152]
	132 Add W20, W20, 1
	133 Compare X21, 0
	134 JumpIfNotEqual {82}
	135 Compare X22, 0
	136 JumpIfEqual {172}
	137 Move X0, X22
	138 Move X1, X31
	139 Call Object.GetInstanceID, X0
	140 Move X8, [X19+144]
	141 Compare X8, 0
	142 JumpIfEqual {172}
	143 Move X2, [X28]
	144 Move W22, W0
	145 Move X0, X8
	146 Move W1, W22
	147 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {131}
	152 Move X0, [X19+144]
	153 Compare X0, 0
	154 JumpIfEqual {172}
	155 Move X3, [X29]
	156 Move W1, W22
	157 Move X2, X21
	158 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	159 Move X20, [X31+80]
	160 Move X19, [X31+88]
	161 Move X22, [X31+64]
	162 Move X21, [X31+72]
	163 Move X24, [X31+48]
	164 Move X23, [X31+56]
	165 Move X26, [X31+32]
	166 Move X25, [X31+40]
	167 Move X28, [X31+16]
	168 Move X27, [X31+24]
	169 Move X29, [X31+96]
	170 Move X30, [X31+104]
	171 Return 
	172 Call 0x1C17F20

Method: UnityEngine.TextCore.Text.FontAsset GetCachedFontAssetInternal(UnityEngine.Font font)

Disassembly:
	0x03CCD4C4 BL 0x3C124EC
	0x03CCD4C8 LDR X8, [X19]
	0x03CCD4CC MOV X1, X31
	0x03CCD4D0 LDR X8, [X8 + 0xB8]
	0x03CCD4D4 STR W0, [X8 + 0x68]
	0x03CCD4D8 ADRP X8, 0x48C000
	0x03CCD4DC LDR X8, [X8 + 0x530]
	0x03CCD4E0 LDR X0, [X8]
	0x03CCD4E4 BL 0x3C124EC
	0x03CCD4E8 LDR X8, [X19]
	0x03CCD4EC MOV X1, X31
	0x03CCD4F0 LDR X8, [X8 + 0xB8]
	0x03CCD4F4 STR W0, [X8 + 0x6C]
	0x03CCD4F8 ADRP X8, 0x48C000
	0x03CCD4FC LDR X8, [X8 + 0x5C8]
	0x03CCD500 LDR X0, [X8]
	0x03CCD504 BL 0x3C124EC
	0x03CCD508 LDR X8, [X19]
	0x03CCD50C MOV X1, X31
	0x03CCD510 LDR X8, [X8 + 0xB8]
	0x03CCD514 STR W0, [X8 + 0x70]
	0x03CCD518 ADRP X8, 0x48C000
	0x03CCD51C LDR X8, [X8 + 0x570]
	0x03CCD520 LDR X0, [X8]
	0x03CCD524 BL 0x3C124EC
	0x03CCD528 LDR X8, [X19]
	0x03CCD52C MOV X1, X31
	0x03CCD530 LDR X8, [X8 + 0xB8]
	0x03CCD534 STR W0, [X8 + 0x74]
	0x03CCD538 ADRP X8, 0x48C000
	0x03CCD53C LDR X8, [X8 + 0x560]
	0x03CCD540 LDR X0, [X8]
	0x03CCD544 BL 0x3C124EC
	0x03CCD548 LDR X8, [X19]
	0x03CCD54C MOV X1, X31
	0x03CCD550 LDR X8, [X8 + 0xB8]
	0x03CCD554 STR W0, [X8 + 0x78]
	0x03CCD558 ADRP X8, 0x48C000
	0x03CCD55C LDR X8, [X8 + 0x5B0]
	0x03CCD560 LDR X0, [X8]
	0x03CCD564 BL 0x3C124EC
	0x03CCD568 LDR X8, [X19]
	0x03CCD56C MOV X1, X31
	0x03CCD570 LDR X8, [X8 + 0xB8]
	0x03CCD574 STR W0, [X8 + 0x7C]
	0x03CCD578 ADRP X8, 0x48C000
	0x03CCD57C LDR X8, [X8 + 0x4A8]
	0x03CCD580 LDR X0, [X8]
	0x03CCD584 BL 0x3C124EC
	0x03CCD588 LDR X8, [X19]
	0x03CCD58C MOV X1, X31
	0x03CCD590 LDR X8, [X8 + 0xB8]
	0x03CCD594 STR W0, [X8 + 0x80]
	0x03CCD598 ADRP X8, 0x48C000
	0x03CCD59C LDR X8, [X8 + 0x548]
	0x03CCD5A0 LDR X0, [X8]
	0x03CCD5A4 BL 0x3C124EC
	0x03CCD5A8 LDR X8, [X19]
	0x03CCD5AC MOV X1, X31
	0x03CCD5B0 LDR X8, [X8 + 0xB8]
	0x03CCD5B4 STR W0, [X8 + 0x84]
	0x03CCD5B8 ADRP X8, 0x48C000
	0x03CCD5BC LDR X8, [X8 + 0x4D8]
	0x03CCD5C0 LDR X0, [X8]
	0x03CCD5C4 BL 0x3C124EC
	0x03CCD5C8 LDR X8, [X19]
	0x03CCD5CC MOV X1, X31
	0x03CCD5D0 LDR X8, [X8 + 0xB8]
	0x03CCD5D4 STR W0, [X8 + 0x88]
	0x03CCD5D8 ADRP X8, 0x48C000
	0x03CCD5DC LDR X8, [X8 + 0x558]
	0x03CCD5E0 LDR X0, [X8]
	0x03CCD5E4 BL 0x3C124EC
	0x03CCD5E8 LDR X8, [X19]
	0x03CCD5EC MOV X1, X31
	0x03CCD5F0 LDR X8, [X8 + 0xB8]
	0x03CCD5F4 STR W0, [X8 + 0xA0]
	0x03CCD5F8 ADRP X8, 0x48C000
	0x03CCD5FC LDR X8, [X8 + 0x538]
	0x03CCD600 LDR X0, [X8]
	0x03CCD604 BL 0x3C124EC
	0x03CCD608 LDR X8, [X19]
	0x03CCD60C MOV X1, X31
	0x03CCD610 LDR X8, [X8 + 0xB8]
	0x03CCD614 STR W0, [X8 + 0xA4]
	0x03CCD618 ADRP X8, 0x48C000
	0x03CCD61C LDR X8, [X8 + 0x5A0]
	0x03CCD620 LDR X0, [X8]
	0x03CCD624 BL 0x3C124EC
	0x03CCD628 LDR X8, [X19]
	0x03CCD62C MOV X1, X31
	0x03CCD630 LDR X8, [X8 + 0xB8]
	0x03CCD634 STR W0, [X8 + 0xA8]
	0x03CCD638 ADRP X8, 0x48C000
	0x03CCD63C LDR X8, [X8 + 0x580]
	0x03CCD640 LDR X0, [X8]
	0x03CCD644 BL 0x3C124EC
	0x03CCD648 LDR X8, [X19]
	0x03CCD64C MOV X1, X31
	0x03CCD650 LDR X8, [X8 + 0xB8]
	0x03CCD654 STR W0, [X8 + 0xAC]
	0x03CCD658 ADRP X8, 0x48C000
	0x03CCD65C LDR X8, [X8 + 0x5E8]
	0x03CCD660 LDR X0, [X8]
	0x03CCD664 BL 0x3C124EC
	0x03CCD668 LDR X8, [X19]
	0x03CCD66C MOV X1, X31
	0x03CCD670 LDR X8, [X8 + 0xB8]
	0x03CCD674 STR W0, [X8 + 0x8C]
	0x03CCD678 ADRP X8, 0x48C000
	0x03CCD67C LDR X8, [X8 + 0x4E0]
	0x03CCD680 LDR X0, [X8]
	0x03CCD684 BL 0x3C124EC
	0x03CCD688 LDR X8, [X19]
	0x03CCD68C MOV X1, X31
	0x03CCD690 LDR X8, [X8 + 0xB8]
	0x03CCD694 STR W0, [X8 + 0x90]
	0x03CCD698 ADRP X8, 0x48C000
	0x03CCD69C LDR X8, [X8 + 0x578]
	0x03CCD6A0 LDR X0, [X8]
	0x03CCD6A4 BL 0x3C124EC
	0x03CCD6A8 LDR X8, [X19]
	0x03CCD6AC MOV X1, X31
	0x03CCD6B0 LDR X8, [X8 + 0xB8]
	0x03CCD6B4 STR W0, [X8 + 0x94]
	0x03CCD6B8 ADRP X8, 0x48C000
	0x03CCD6BC LDR X8, [X8 + 0x500]
	0x03CCD6C0 LDR X0, [X8]
	0x03CCD6C4 BL 0x3C124EC
	0x03CCD6C8 LDR X8, [X19]
	0x03CCD6CC MOV X1, X31
	0x03CCD6D0 LDR X8, [X8 + 0xB8]
	0x03CCD6D4 STR W0, [X8 + 0x98]
	0x03CCD6D8 ADRP X8, 0x48C000
	0x03CCD6DC LDR X8, [X8 + 0x4E8]
	0x03CCD6E0 LDR X0, [X8]
	0x03CCD6E4 BL 0x3C124EC
	0x03CCD6E8 LDR X8, [X19]
	0x03CCD6EC MOV X1, X31
	0x03CCD6F0 LDR X8, [X8 + 0xB8]
	0x03CCD6F4 STR W0, [X8 + 0x9C]
	0x03CCD6F8 ADRP X8, 0x48C000
	0x03CCD6FC LDR X8, [X8 + 0x490]
	0x03CCD700 LDR X0, [X8]
	0x03CCD704 BL 0x3C124EC
	0x03CCD708 LDR X8, [X19]
	0x03CCD70C MOV X1, X31
	0x03CCD710 LDR X8, [X8 + 0xB8]
	0x03CCD714 STR W0, [X8 + 0xB0]
	0x03CCD718 ADRP X8, 0x48C000
	0x03CCD71C LDR X8, [X8 + 0x510]
	0x03CCD720 LDR X0, [X8]
	0x03CCD724 BL 0x3C124EC
	0x03CCD728 LDR X8, [X19]
	0x03CCD72C MOV X1, X31
	0x03CCD730 LDR X8, [X8 + 0xB8]
	0x03CCD734 STR W0, [X8 + 0xB4]
	0x03CCD738 ADRP X8, 0x48C000
	0x03CCD73C LDR X8, [X8 + 0x4B8]
	0x03CCD740 LDR X0, [X8]
	0x03CCD744 BL 0x3C124EC
	0x03CCD748 LDR X8, [X19]
	0x03CCD74C MOV X1, X31
	0x03CCD750 LDR X8, [X8 + 0xB8]
	0x03CCD754 STR W0, [X8 + 0xC8]
	0x03CCD758 ADRP X8, 0x48C000
	0x03CCD75C LDR X8, [X8 + 0x610]
	0x03CCD760 LDR X0, [X8]
	0x03CCD764 BL 0x3C124EC
	0x03CCD768 LDR X8, [X19]
	0x03CCD76C MOV X1, X31
	0x03CCD770 LDR X8, [X8 + 0xB8]
	0x03CCD774 STR W0, [X8 + 0xB8]
	0x03CCD778 ADRP X8, 0x48C000
	0x03CCD77C LDR X8, [X8 + 0x598]
	0x03CCD780 LDR X0, [X8]
	0x03CCD784 BL 0x3C124EC
	0x03CCD788 LDR X8, [X19]
	0x03CCD78C MOV X1, X31
	0x03CCD790 LDR X8, [X8 + 0xB8]
	0x03CCD794 STR W0, [X8 + 0xBC]
	0x03CCD798 ADRP X8, 0x48C000
	0x03CCD79C LDR X8, [X8 + 0x630]
	0x03CCD7A0 LDR X0, [X8]
	0x03CCD7A4 BL 0x3C124EC
	0x03CCD7A8 LDR X8, [X19]
	0x03CCD7AC MOV X1, X31
	0x03CCD7B0 LDR X8, [X8 + 0xB8]
	0x03CCD7B4 STR W0, [X8 + 0xC0]
	0x03CCD7B8 ADRP X8, 0x48C000
	0x03CCD7BC LDR X8, [X8 + 0x5B8]
	0x03CCD7C0 LDR X0, [X8]
	0x03CCD7C4 BL 0x3C124EC
	0x03CCD7C8 LDR X8, [X19]
	0x03CCD7CC MOV X1, X31
	0x03CCD7D0 LDR X8, [X8 + 0xB8]
	0x03CCD7D4 STR W0, [X8 + 0xC4]
	0x03CCD7D8 ADRP X8, 0x48C000
	0x03CCD7DC LDR X8, [X8 + 0x4C8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x71B000
	008 Move W8, [X21+900]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {50}
	015 Move X0, 0x495000
	016 Move X0, [X0+1664]
	017 Call 0x1C17CF4
	018 Move X0, 0x495000
	019 Move X0, [X0+1672]
	020 Call 0x1C17CF4
	021 Move X0, 0x495000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x495000
	025 Move X0, [X0+3752]
	026 Call 0x1C17CF4
	027 Move X0, 0x495000
	028 Move X0, [X0+1616]
	029 Call 0x1C17CF4
	030 Move X0, 0x495000
	031 Move X0, [X0+600]
	032 Call 0x1C17CF4
	033 Move X0, 0x495000
	034 Move X0, [X0+3760]
	035 Call 0x1C17CF4
	036 Move X0, 0x427000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x495000
	040 Move X0, [X0+656]
	041 Call 0x1C17CF4
	042 Move X0, 0x495000
	043 Move X0, [X0+3768]
	044 Call 0x1C17CF4
	045 Move X0, 0x495000
	046 Move X0, [X0+3776]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+900], W8
	050 Move X8, [X19+144]
	051 Compare X8, 0
	052 JumpIfNotEqual {65}
	053 Move X8, 0x495000
	054 Move X8, [X8+1616]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X8, 0x495000
	058 Move X8, [X8+1624]
	059 Move X21, X0
	060 Move X1, [X8]
	061 Call Dictionary`2<Int32, Object>..ctor, X0
	062 Move X0, X19
	063 Move [X19+144], X21
	064 Call TextSettings.InitializeFontReferenceLookup, X0
	065 Compare X20, 0
	066 JumpIfEqual {232}
	067 Move X0, X20
	068 Move X1, X31
	069 Call Object.GetInstanceID, X0
	070 Move X8, [X19+144]
	071 Compare X8, 0
	072 JumpIfEqual {232}
	073 Move X9, 0x495000
	074 Move X9, [X9+1672]
	075 Move W21, W0
	076 Move X0, X8
	077 Move W1, W21
	078 Move X2, [X9]
	079 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {99}
	084 Move X0, [X19+144]
	085 Compare X0, 0
	086 JumpIfEqual {232}
	087 Move X8, 0x495000
	088 Move X8, [X8+3752]
	089 Move W1, W21
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X2, [X8]
	095 Move X30, [X31+16]
	096 Add X31, X31, 64
	097 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	098 Return X0
	099 Move X0, X20
	100 Move X1, X31
	101 Call Object.get_name, X0
	102 Move X8, 0x495000
	103 Move X8, [X8+3768]
	104 Move X2, X31
	105 Move X1, [X8]
	106 Call String.op_Equality, X0, X1
	107 Move X8, 0x495000
	108 Move X8, [X8+600]
	109 Move W22, W0
	110 Move X8, [X8]
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfEqual {127}
	114 Move TEMP, X22
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {133}
	118 Move X8, 0x495000
	119 Move X9, 0x495000
	120 Move X8, [X8+3776]
	121 Move X9, [X9+656]
	122 Move W2, 90
	123 Move X3, X31
	124 Move X0, [X8]
	125 Move X1, [X9]
	126 Call FontAsset.CreateFontAsset, X0, X1, X2
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move TEMP, X22
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {118}
	133 Move W1, 90
	134 Move W2, 9
	135 Move W3, 0x1045
	136 Move W4, 1024
	137 Move W5, 1024
	138 Move W6, 1
	139 Move W7, 1
	140 Move X0, X20
	141 Move [X31], X31
	142 Call FontAsset.CreateFontAsset, X0, X1, X2, X3, X4, X5, X6, X7
	143 Move X8, 0x427000
	144 Move X8, [X8+1432]
	145 Move X22, X0
	146 Move X0, [X8]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X22
	152 Move X1, X31
	153 Move X2, X31
	154 Call Object.op_Inequality, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {224}
	159 Compare X22, 0
	160 JumpIfEqual {232}
	161 Move W1, 52
	162 Move X0, X22
	163 Move X2, X31
	164 Call Object.set_hideFlags, X0, X1
	165 Move X0, X22
	166 Move X1, X31
	167 Call FontAsset.get_atlasTextures, X0
	168 Compare X0, 0
	169 JumpIfEqual {232}
	170 Move W8, [X0+24]
	171 Compare W8, 0
	172 JumpIfEqual {233}
	173 Move X0, [X0+32]
	174 Compare X0, 0
	175 JumpIfEqual {232}
	176 Move W1, 52
	177 Move X2, X31
	178 Call Object.set_hideFlags, X0, X1
	179 Move X0, [X22+40]
	180 Compare X0, 0
	181 JumpIfEqual {232}
	182 Move W1, 52
	183 Move X2, X31
	184 Call Object.set_hideFlags, X0, X1
	185 Move W1, 1
	186 Move X0, X22
	187 Move X2, X31
	188 Call FontAsset.set_isMultiAtlasTexturesEnabled, X0, X1
	189 Move X0, [X19+152]
	190 Compare X0, 0
	191 JumpIfEqual {232}
	192 Move X9, 0x495000
	193 Move X9, [X9+3760]
	194 Move W10, [X0+28]
	195 Move X8, [X0+16]
	196 Move X9, [X9]
	197 Add W10, W10, 1
	198 Move [X0+28], W10
	199 Compare X8, 0
	200 JumpIfEqual {232}
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Move W11, [X8+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add W9, W10, 1
	205 Add X8, X8, X10
	206 Move [X0+24], W9
	207 Move [X8+32], X20
	208 Move [X8+40], X22
	209 Move X8, [X9+32]
	210 Move X1, X20
	211 Move X2, X22
	212 Move X8, [X8+192]
	213 Move X3, [X8+112]
	214 Call List`1<FontReferenceMap>.AddWithResize, X0, X1
	215 Move X0, [X19+144]
	216 Compare X0, 0
	217 JumpIfEqual {232}
	218 Move X8, 0x495000
	219 Move X8, [X8+1664]
	220 Move W1, W21
	221 Move X2, X22
	222 Move X3, [X8]
	223 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	224 Move X0, X22
	225 Move X20, [X31+48]
	226 Move X19, [X31+56]
	227 Move X22, [X31+32]
	228 Move X21, [X31+40]
	229 Move X30, [X31+16]
	230 Add X31, X31, 64
	231 Return X0
	232 Call 0x1C17F20
	233 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03CCD7E8 LDR X8, [X19]
	0x03CCD7EC MOV X1, X31
	0x03CCD7F0 LDR X8, [X8 + 0xB8]
	0x03CCD7F4 STR W0, [X8 + 0xCC]
	0x03CCD7F8 ADRP X8, 0x48C000
	0x03CCD7FC LDR X8, [X8 + 0x540]
	0x03CCD800 LDR X0, [X8]
	0x03CCD804 BL 0x3C124EC
	0x03CCD808 LDR X8, [X19]
	0x03CCD80C MOV X1, X31
	0x03CCD810 LDR X8, [X8 + 0xB8]
	0x03CCD814 STR W0, [X8 + 0xD0]
	0x03CCD818 ADRP X8, 0x48C000
	0x03CCD81C LDR X8, [X8 + 0x4B0]
	0x03CCD820 LDR X0, [X8]
	0x03CCD824 BL 0x3C124EC
	0x03CCD828 LDR X8, [X19]
	0x03CCD82C MOV X1, X31
	0x03CCD830 LDR X8, [X8 + 0xB8]
	0x03CCD834 STR W0, [X8 + 0xD4]
	0x03CCD838 ADRP X8, 0x48A000
	0x03CCD83C LDR X8, [X8 + 0x888]
	0x03CCD840 LDR X0, [X8]
	0x03CCD844 BL 0x3C124EC
	0x03CCD848 LDR X8, [X19]
	0x03CCD84C MOV X1, X31
	0x03CCD850 LDR X8, [X8 + 0xB8]
	0x03CCD854 STR W0, [X8 + 0xD8]
	0x03CCD858 ADRP X8, 0x48A000
	0x03CCD85C LDR X8, [X8 + 0x890]
	0x03CCD860 LDR X0, [X8]
	0x03CCD864 BL 0x3C124EC
	0x03CCD868 LDR X8, [X19]
	0x03CCD86C MOV X1, X31
	0x03CCD870 LDR X8, [X8 + 0xB8]
	0x03CCD874 STR W0, [X8 + 0xDC]
	0x03CCD878 ADRP X8, 0x48C000
	0x03CCD87C LDR X8, [X8 + 0x550]
	0x03CCD880 LDR X0, [X8]
	0x03CCD884 BL 0x3C124EC
	0x03CCD888 LDR X8, [X19]
	0x03CCD88C MOV X1, X31
	0x03CCD890 LDR X8, [X8 + 0xB8]
	0x03CCD894 STR W0, [X8 + 0xE0]
	0x03CCD898 ADRP X8, 0x48C000
	0x03CCD89C LDR X8, [X8 + 0x620]
	0x03CCD8A0 LDR X0, [X8]
	0x03CCD8A4 BL 0x3C124EC
	0x03CCD8A8 LDR X8, [X19]
	0x03CCD8AC MOV X1, X31
	0x03CCD8B0 LDR X8, [X8 + 0xB8]
	0x03CCD8B4 STR W0, [X8 + 0xE4]
	0x03CCD8B8 ADRP X8, 0x48C000
	0x03CCD8BC LDR X8, [X8 + 0x5D8]
	0x03CCD8C0 LDR X0, [X8]
	0x03CCD8C4 BL 0x3C124EC
	0x03CCD8C8 LDR X8, [X19]
	0x03CCD8CC MOV X1, X31
	0x03CCD8D0 LDR X8, [X8 + 0xB8]
	0x03CCD8D4 STR W0, [X8 + 0xE8]
	0x03CCD8D8 ADRP X8, 0x48C000
	0x03CCD8DC LDR X8, [X8 + 0x508]
	0x03CCD8E0 LDR X0, [X8]
	0x03CCD8E4 BL 0x3C124EC
	0x03CCD8E8 LDR X8, [X19]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x71B000
	011 Move X26, 0x495000
	012 Move X24, 0x495000
	013 Move X23, 0x495000
	014 Move X22, 0x495000
	015 Move X21, 0x495000
	016 Move X20, 0x495000
	017 Move X26, [X26+3784]
	018 Move W8, [X25+901]
	019 Move X24, [X24+3792]
	020 Move X23, [X23+3800]
	021 Move X22, [X22+3808]
	022 Move X21, [X21+3736]
	023 Move X20, [X20+3712]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x495000
	030 Move X0, [X0+3712]
	031 Call 0x1C17CF4
	032 Move X0, 0x495000
	033 Move X0, [X0+3736]
	034 Call 0x1C17CF4
	035 Move X0, 0x495000
	036 Move X0, [X0+3800]
	037 Call 0x1C17CF4
	038 Move X0, 0x495000
	039 Move X0, [X0+3808]
	040 Call 0x1C17CF4
	041 Move X0, 0x495000
	042 Move X0, [X0+3784]
	043 Call 0x1C17CF4
	044 Move X0, 0x495000
	045 Move X0, [X0+3792]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+901], W8
	049 Move X8, [X26]
	050 Move W9, 1
	051 Move [X19+64], W9
	052 Move [X19+40], X8
	053 Move X8, [X24]
	054 Move [X19+80], X8
	055 Move X9, [X23]
	056 Move X8, [X22]
	057 Move [X19+137], W31
	058 Move [X19+112], X9
	059 Move [X19+120], X8
	060 Move X0, [X21]
	061 Call 0x1C17F10
	062 Move X1, [X20]
	063 Move X20, X0
	064 Call List`1<FontReferenceMap>..ctor, X0
	065 Move [X19+152], X20
	066 Move X0, X19
	067 Move X20, [X31+64]
	068 Move X19, [X31+72]
	069 Move X22, [X31+48]
	070 Move X21, [X31+56]
	071 Move X24, [X31+32]
	072 Move X23, [X31+40]
	073 Move X26, [X31+16]
	074 Move X25, [X31+24]
	075 Move X1, X31
	076 Move X30, [X31+80]
	077 Call ScriptableObject..ctor, X0
	078 Return 

