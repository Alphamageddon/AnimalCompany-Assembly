Type: UnityEngine.TextCore.Text.TextStyleSheet

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.Text.TextStyle> get_styles()

Disassembly:
	0x03CCEB00 ADRP X20, 0x719000
	0x03CCEB04 LDR X1, [X20 + 0x3A0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void Reset()

Disassembly:
	0x03CCEB08 MOV X19, X0

ISIL:
No ISIL was generated
Method: UnityEngine.TextCore.Text.TextStyle GetStyle(System.Int32 hashCode)

Disassembly:
	0x03CC86A4 LDR X8, [X19 + 0x58]
	0x03CC86A8 CBZ X8, 0x3CC8C3C
	0x03CC86AC LDR W9, [X8 + 0x18]
	0x03CC86B0 CMP W23, W9
	0x03CC86B4 B.CS 0x3CC8C38
	0x03CC86B8 LDR W9, [X25 + 0x18]
	0x03CC86BC CMP W9, W21
	0x03CC86C0 B.LS 0x3CC8C38
	0x03CC86C4 MOVZ W9, 0x50
	0x03CC86C8 MADD X8, X23, X9, X8
	0x03CC86CC LDR X8, [X8 + 0x28]
	0x03CC86D0 CBZ X8, 0x3CC8C3C
	0x03CC86D4 LDR W10, [X8 + 0x18]
	0x03CC86D8 ADD W9, W24, 0x2
	0x03CC86DC CMP W9, W10
	0x03CC86E0 B.CS 0x3CC8C38
	0x03CC86E4 MOVZ W10, 0x188
	0x03CC86E8 MADD X10, X26, X10, X25
	0x03CC86EC LDR V0, [X10 + 0xC8]
	0x03CC86F0 LDR V1, [X10 + 0xD0]
	0x03CC86F4 SXTW X9, W9
	0x03CC86F8 MOVZ W10, 0xC
	0x03CC86FC MADD X8, X9, X10, X8
	0x03CC8700 STR D0, [X8 + 0x20]
	0x03CC8704 STR S1, [X8 + 0x28]
	0x03CC8708 LDR X8, [X19 + 0x58]
	0x03CC870C CBZ X8, 0x3CC8C3C
	0x03CC8710 LDR W9, [X8 + 0x18]
	0x03CC8714 CMP W23, W9
	0x03CC8718 B.CS 0x3CC8C38
	0x03CC871C LDR W9, [X25 + 0x18]
	0x03CC8720 CMP W9, W21
	0x03CC8724 B.LS 0x3CC8C38
	0x03CC8728 MOVZ W9, 0x50

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x720000
	007 Move W8, [X21+907]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x49A000
	015 Move X0, [X0+3496]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+907], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+32]
	021 Compare X0, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X20
	024 Call TextStyleSheet.LoadStyleDictionaryInternal, X0
	025 Move X0, [X20+32]
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X8, 0x49A000
	029 Move X8, [X8+3496]
	030 Add X2, X31, 8
	031 Move W1, W19
	032 Move X3, [X8]
	033 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	034 Move X8, [X31+8]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 And W31, W0, 1
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20

Method: UnityEngine.TextCore.Text.TextStyle GetStyle(System.String name)

Disassembly:
	0x03CCEDE8 STP X20, X19, [X31 + 0x10]
	0x03CCEDEC ADRP X20, 0x719000
	0x03CCEDF0 LDR X1, [X20 + 0x400]
	0x03CCEDF4 MOV X19, X0
	0x03CCEDF8 CBNZ X1, 0x3CCEE10
	0x03CCEDFC ADRP X0, 0xFFFFFFFFFCE3F000
	0x03CCEE00 ADD X0, X0, 0xBBE
	0x03CCEE04 BL 0x1C16CB8
	0x03CCEE08 MOV X1, X0
	0x03CCEE0C STR X0, [X20 + 0x400]
	0x03CCEE10 MOV X0, X19
	0x03CCEE14 LDP X20, X19, [X31 + 0x10]
	0x03CCEE18 LDR X30, [X31], #0x20
	0x03CCEE1C BR X1
	0x03CCEE20 STRB W31, [X0 + 0x80]
	0x03CCEE24 RET
	0x03CCEE28 STP X30, X21, [X31 - 0x20]!
	0x03CCEE2C STP X20, X19, [X31 + 0x10]
	0x03CCEE30 ADRP X21, 0x719000
	0x03CCEE34 LDR X2, [X21 + 0x3D0]
	0x03CCEE38 MOV X19, X1
	0x03CCEE3C MOV X20, X0
	0x03CCEE40 CBNZ X2, 0x3CCEE58
	0x03CCEE44 ADRP X0, 0xFFFFFFFFFCE43000
	0x03CCEE48 ADD X0, X0, 0x748
	0x03CCEE4C BL 0x1C16CB8
	0x03CCEE50 MOV X2, X0
	0x03CCEE54 STR X0, [X21 + 0x3D0]
	0x03CCEE58 MOV X0, X20
	0x03CCEE5C MOV X1, X19
	0x03CCEE60 LDP X20, X19, [X31 + 0x10]
	0x03CCEE64 LDP X30, X21, [X31], #0x20
	0x03CCEE68 BR X2
	0x03CCEE6C STP X30, X21, [X31 - 0x20]!
	0x03CCEE70 STP X20, X19, [X31 + 0x10]
	0x03CCEE74 ADRP X21, 0x719000
	0x03CCEE78 LDR X2, [X21 + 0x3D0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x71A000
	007 Move W8, [X21+908]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x494000
	015 Move X0, [X0+3496]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+908], W8
	019 Move [X31+8], X31
	020 Move X8, [X19+32]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X19
	024 Call TextStyleSheet.LoadStyleDictionaryInternal, X0
	025 Move X0, X20
	026 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	027 Move X8, [X19+32]
	028 Compare X8, 0
	029 JumpIfEqual {46}
	030 Move X9, 0x494000
	031 Move X9, [X9+3496]
	032 Move W1, W0
	033 Add X2, X31, 8
	034 Move X0, X8
	035 Move X3, [X9]
	036 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	037 Move X8, [X31+8]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 And W31, W0, 1
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Add X31, X31, 48
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void RefreshStyles()

Disassembly:
	0x03CCEE7C MOV X19, X1

ISIL:
	001 Call TextStyleSheet.LoadStyleDictionaryInternal, X0
	002 Return 

Method: System.Void LoadStyleDictionaryInternal()

Disassembly:
	0x03CCEB0C CBNZ X1, 0x3CCEB24
	0x03CCEB10 ADRP X0, 0xFFFFFFFFFCE5D000
	0x03CCEB14 ADD X0, X0, 0x23A
	0x03CCEB18 BL 0x1C16CB8
	0x03CCEB1C MOV X1, X0
	0x03CCEB20 STR X0, [X20 + 0x3A0]
	0x03CCEB24 MOV X0, X19
	0x03CCEB28 LDP X20, X19, [X31 + 0x10]
	0x03CCEB2C LDR X30, [X31], #0x20
	0x03CCEB30 BR X1
	0x03CCEB34 SUB X31, X31, 0xA0
	0x03CCEB38 STR X30, [X31 + 0x60]
	0x03CCEB3C STP X24, X23, [X31 + 0x70]
	0x03CCEB40 STP X22, X21, [X31 + 0x80]
	0x03CCEB44 STP X20, X19, [X31 + 0x90]
	0x03CCEB48 ADRP X21, 0x719000
	0x03CCEB4C ADRP X24, 0x425000
	0x03CCEB50 MOV X19, X8
	0x03CCEB54 LDRB W8, [X21 + 0x397]
	0x03CCEB58 LDR X24, [X24 + 0x598]
	0x03CCEB5C MOV X20, X1
	0x03CCEB60 TBNZ X8, 0x0, 0x3CCEBA8
	0x03CCEB64 ADRP X0, 0x425000
	0x03CCEB68 LDR X0, [X0 + 0xA28]
	0x03CCEB6C BL 0x1C16CF4
	0x03CCEB70 ADRP X0, 0x425000
	0x03CCEB74 LDR X0, [X0 + 0x9D0]
	0x03CCEB78 BL 0x1C16CF4
	0x03CCEB7C ADRP X0, 0x425000
	0x03CCEB80 LDR X0, [X0 + 0x598]
	0x03CCEB84 BL 0x1C16CF4
	0x03CCEB88 ADRP X0, 0x493000
	0x03CCEB8C LDR X0, [X0 + 0xFC8]
	0x03CCEB90 BL 0x1C16CF4
	0x03CCEB94 ADRP X0, 0x493000
	0x03CCEB98 LDR X0, [X0 + 0xFD0]
	0x03CCEB9C BL 0x1C16CF4
	0x03CCEBA0 MOVZ W8, 0x1
	0x03CCEBA4 STRB W8, [X21 + 0x397]
	0x03CCEBA8 LDR X0, [X24]
	0x03CCEBAC LDR X21, [X20]
	0x03CCEBB0 LDR W8, [X0 + 0xE0]
	0x03CCEBB4 CBNZ W8, 0x3CCEBBC
	0x03CCEBB8 BL 0x1C16DFC
	0x03CCEBBC MOV X0, X21
	0x03CCEBC0 MOV X1, X31
	0x03CCEBC4 MOV X2, X31
	0x03CCEBC8 BL 0x3C354F8
	0x03CCEBCC TBZ X0, 0x0, 0x3CCEC04
	0x03CCEBD0 LDR X21, [X20]
	0x03CCEBD4 CBZ X21, 0x3CCEDD0
	0x03CCEBD8 ADRP X22, 0x719000
	0x03CCEBDC LDR X8, [X22 + 0x400]
	0x03CCEBE0 CBNZ X8, 0x3CCEBF8
	0x03CCEBE4 ADRP X0, 0xFFFFFFFFFCE3F000
	0x03CCEBE8 ADD X0, X0, 0xBBE
	0x03CCEBEC BL 0x1C16CB8
	0x03CCEBF0 MOV X8, X0
	0x03CCEBF4 STR X0, [X22 + 0x400]
	0x03CCEBF8 MOV X0, X21
	0x03CCEBFC BLR X8
	0x03CCEC00 TBNZ X0, 0x0, 0x3CCED98
	0x03CCEC04 LDR W8, [X20 + 0x18]
	0x03CCEC08 CBNZ W8, 0x3CCEC14
	0x03CCEC0C LDR W8, [X20 + 0x28]
	0x03CCEC10 CBZ W8, 0x3CCECD4
	0x03CCEC14 LDR X0, [X24]
	0x03CCEC18 LDR X21, [X20]
	0x03CCEC1C LDR W8, [X0 + 0xE0]
	0x03CCEC20 CBNZ W8, 0x3CCEC28
	0x03CCEC24 BL 0x1C16DFC
	0x03CCEC28 MOV X0, X21
	0x03CCEC2C MOV X1, X31
	0x03CCEC30 MOV X2, X31
	0x03CCEC34 BL 0x3C354F8
	0x03CCEC38 TBZ X0, 0x0, 0x3CCECCC
	0x03CCEC3C ADRP X8, 0x425000
	0x03CCEC40 LDR X21, [X20]
	0x03CCEC44 LDR X8, [X8 + 0x9D0]
	0x03CCEC48 MOVZ W1, 0x1
	0x03CCEC4C LDR X0, [X8]
	0x03CCEC50 BL 0x1C16D6C
	0x03CCEC54 LDR X8, [X20]
	0x03CCEC58 CBZ X8, 0x3CCEDD0
	0x03CCEC5C MOV X22, X0
	0x03CCEC60 MOV X0, X8
	0x03CCEC64 MOV X1, X31
	0x03CCEC68 BL 0x3C389D4
	0x03CCEC6C CBZ X22, 0x3CCEDD0
	0x03CCEC70 MOV X23, X0
	0x03CCEC74 CBZ X0, 0x3CCEC8C
	0x03CCEC78 LDR X8, [X22]
	0x03CCEC7C MOV X0, X23
	0x03CCEC80 LDR X1, [X8 + 0x40]
	0x03CCEC84 BL 0x1C16E00
	0x03CCEC88 CBZ X0, 0x3CCEDD8
	0x03CCEC8C LDR W8, [X22 + 0x18]
	0x03CCEC90 CBZ W8, 0x3CCEDD4
	0x03CCEC94 STR X23, [X22 + 0x20]
	0x03CCEC98 ADRP X8, 0x425000
	0x03CCEC9C LDR X8, [X8 + 0xA28]
	0x03CCECA0 LDR X0, [X8]
	0x03CCECA4 LDR W8, [X0 + 0xE0]
	0x03CCECA8 CBNZ W8, 0x3CCECB0
	0x03CCECAC BL 0x1C16DFC
	0x03CCECB0 ADRP X8, 0x493000
	0x03CCECB4 LDR X8, [X8 + 0xFC8]
	0x03CCECB8 MOV X0, X21
	0x03CCECBC MOV X2, X22
	0x03CCECC0 MOV X3, X31
	0x03CCECC4 LDR X1, [X8]
	0x03CCECC8 BL 0x3C06D3C
	0x03CCECCC STR W31, [X20 + 0x18]
	0x03CCECD0 STR W31, [X20 + 0x28]
	0x03CCECD4 LDRB W8, [X20 + 0x31]
	0x03CCECD8 TBZ X8, 0x0, 0x3CCED98
	0x03CCECDC LDR X0, [X24]
	0x03CCECE0 LDR X21, [X20]
	0x03CCECE4 LDR W8, [X0 + 0xE0]
	0x03CCECE8 CBNZ W8, 0x3CCECF0
	0x03CCECEC BL 0x1C16DFC
	0x03CCECF0 MOV X0, X21
	0x03CCECF4 MOV X1, X31
	0x03CCECF8 MOV X2, X31
	0x03CCECFC BL 0x3C354F8
	0x03CCED00 TBZ X0, 0x0, 0x3CCED94
	0x03CCED04 ADRP X8, 0x425000
	0x03CCED08 LDR X21, [X20]
	0x03CCED0C LDR X8, [X8 + 0x9D0]
	0x03CCED10 MOVZ W1, 0x1
	0x03CCED14 LDR X0, [X8]
	0x03CCED18 BL 0x1C16D6C
	0x03CCED1C LDR X8, [X20]
	0x03CCED20 CBZ X8, 0x3CCEDD0
	0x03CCED24 MOV X22, X0
	0x03CCED28 MOV X0, X8
	0x03CCED2C MOV X1, X31
	0x03CCED30 BL 0x3C389D4
	0x03CCED34 CBZ X22, 0x3CCEDD0
	0x03CCED38 MOV X23, X0
	0x03CCED3C CBZ X0, 0x3CCED54
	0x03CCED40 LDR X8, [X22]
	0x03CCED44 MOV X0, X23
	0x03CCED48 LDR X1, [X8 + 0x40]
	0x03CCED4C BL 0x1C16E00
	0x03CCED50 CBZ X0, 0x3CCEDD8
	0x03CCED54 LDR W8, [X22 + 0x18]
	0x03CCED58 CBZ W8, 0x3CCEDD4
	0x03CCED5C STR X23, [X22 + 0x20]
	0x03CCED60 ADRP X8, 0x425000
	0x03CCED64 LDR X8, [X8 + 0xA28]
	0x03CCED68 LDR X0, [X8]
	0x03CCED6C LDR W8, [X0 + 0xE0]
	0x03CCED70 CBNZ W8, 0x3CCED78
	0x03CCED74 BL 0x1C16DFC
	0x03CCED78 ADRP X8, 0x493000
	0x03CCED7C LDR X8, [X8 + 0xFD0]
	0x03CCED80 MOV X0, X21
	0x03CCED84 MOV X2, X22
	0x03CCED88 MOV X3, X31
	0x03CCED8C LDR X1, [X8]
	0x03CCED90 BL 0x3C06D3C
	0x03CCED94 STRB W31, [X20 + 0x31]
	0x03CCED98 ADD X0, X31, 0x0
	0x03CCED9C MOVZ W2, 0x60
	0x03CCEDA0 MOV X1, X20
	0x03CCEDA4 BL 0x3EB1AC0
	0x03CCEDA8 ADD X1, X31, 0x0
	0x03CCEDAC MOVZ W2, 0x60
	0x03CCEDB0 MOV X0, X19
	0x03CCEDB4 BL 0x3EB1AC0
	0x03CCEDB8 LDP X20, X19, [X31 + 0x90]
	0x03CCEDBC LDP X22, X21, [X31 + 0x80]
	0x03CCEDC0 LDP X24, X23, [X31 + 0x70]
	0x03CCEDC4 LDR X30, [X31 + 0x60]
	0x03CCEDC8 ADD X31, X31, 0xA0
	0x03CCEDCC RET
	0x03CCEDD0 BL 0x1C16F20
	0x03CCEDD4 BL 0x1C16F28
	0x03CCEDD8 BL 0x1C16F44
	0x03CCEDDC MOV X1, X31
	0x03CCEDE0 BL 0x1C16DEC
	0x03CCEDE4 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x71A000
	011 Move W8, [X20+909]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0x494000
	018 Move X0, [X0+3904]
	019 Call 0x1C17CF4
	020 Move X0, 0x494000
	021 Move X0, [X0+3912]
	022 Call 0x1C17CF4
	023 Move X0, 0x494000
	024 Move X0, [X0+3920]
	025 Call 0x1C17CF4
	026 Move X0, 0x494000
	027 Move X0, [X0+3928]
	028 Call 0x1C17CF4
	029 Move X0, 0x494000
	030 Move X0, [X0+3936]
	031 Call 0x1C17CF4
	032 Move X0, 0x494000
	033 Move X0, [X0+3944]
	034 Call 0x1C17CF4
	035 Move X0, 0x494000
	036 Move X0, [X0+3952]
	037 Call 0x1C17CF4
	038 Move X0, 0x494000
	039 Move X0, [X0+3960]
	040 Call 0x1C17CF4
	041 Move X0, 0x428000
	042 Move X0, [X0+632]
	043 Call 0x1C17CF4
	044 Move X0, 0x494000
	045 Move X0, [X0+3968]
	046 Call 0x1C17CF4
	047 Move X0, 0x48C000
	048 Move X0, [X0+2488]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+909], W8
	052 Move X0, [X19+32]
	053 Compare X0, 0
	054 JumpIfEqual {59}
	055 Move X8, 0x494000
	056 Move X8, [X8+3912]
	057 Move X1, [X8]
	058 Call Dictionary`2<Int32, Object>.Clear, X0
	059 Move X8, 0x494000
	060 Move X8, [X8+3936]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X8, 0x494000
	064 Move X8, [X8+3928]
	065 Move X20, X0
	066 Move X1, [X8]
	067 Call Dictionary`2<Int32, Object>..ctor, X0
	068 Move [X19+32], X20
	069 Move X0, [X19+24]
	070 Compare X0, 0
	071 JumpIfEqual {215}
	072 Move X26, 0x494000
	073 Move X25, 0x494000
	074 Move X23, 0x494000
	075 Move X24, 0x48C000
	076 Move X26, [X26+3960]
	077 Move X25, [X25+3920]
	078 Move X23, [X23+3904]
	079 Move X24, [X24+2488]
	080 Move W20, W31
	081 Move W8, [X0+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X2, [X26]
	084 Move W1, W20
	085 Call List`1<Object>.get_Item, X0, X1
	086 Compare X0, 0
	087 JumpIfEqual {215}
	088 Call TextStyle.RefreshStyle, X0
	089 Move X0, [X19+24]
	090 Compare X0, 0
	091 JumpIfEqual {215}
	092 Move X2, [X26]
	093 Move X21, [X19+32]
	094 Move W1, W20
	095 Call List`1<Object>.get_Item, X0, X1
	096 Compare X0, 0
	097 JumpIfEqual {215}
	098 Compare X21, 0
	099 JumpIfEqual {215}
	100 Move W1, [X0+24]
	101 Move X2, [X25]
	102 Move X0, X21
	103 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {132}
	108 Move X0, [X19+24]
	109 Compare X0, 0
	110 JumpIfEqual {215}
	111 Move X2, [X26]
	112 Move X21, [X19+32]
	113 Move W1, W20
	114 Call List`1<Object>.get_Item, X0, X1
	115 Compare X0, 0
	116 JumpIfEqual {215}
	117 Move X8, [X19+24]
	118 Compare X8, 0
	119 JumpIfEqual {215}
	120 Move X2, [X26]
	121 Move W22, [X0+24]
	122 Move X0, X8
	123 Move W1, W20
	124 Call List`1<Object>.get_Item, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {215}
	127 Move X3, [X23]
	128 Move X2, X0
	129 Move X0, X21
	130 Move W1, W22
	131 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	132 Move X0, [X19+24]
	133 Add W20, W20, 1
	134 Compare X0, 0
	135 JumpIfNotEqual {81}
	136 Move X0, [X24]
	137 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	138 Move X8, [X19+32]
	139 Compare X8, 0
	140 JumpIfEqual {215}
	141 Move X2, [X25]
	142 Move W20, W0
	143 Move X0, X8
	144 Move W1, W20
	145 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {160}
	150 Move X20, [X31+64]
	151 Move X19, [X31+72]
	152 Move X22, [X31+48]
	153 Move X21, [X31+56]
	154 Move X24, [X31+32]
	155 Move X23, [X31+40]
	156 Move X26, [X31+16]
	157 Move X25, [X31+24]
	158 Move X30, [X31+80]
	159 Return 
	160 Move X8, 0x428000
	161 Move X8, [X8+632]
	162 Move X9, 0x494000
	163 Move X8, [X8]
	164 Move X8, [X8+184]
	165 Move X9, [X9+3968]
	166 Move X22, [X8]
	167 Move X0, [X9]
	168 Call 0x1C17F10
	169 Move X1, [X24]
	170 Move X2, X22
	171 Move X3, X22
	172 Move X21, X0
	173 Call TextStyle..ctor, X0, X1, X2, X3
	174 Move X0, [X19+24]
	175 Compare X0, 0
	176 JumpIfEqual {215}
	177 Move X9, 0x494000
	178 Move X9, [X9+3944]
	179 Move W10, [X0+28]
	180 Move X8, [X0+16]
	181 Move X9, [X9]
	182 Add W10, W10, 1
	183 Move [X0+28], W10
	184 Compare X8, 0
	185 JumpIfEqual {215}
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Move W11, [X8+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add W9, W10, 1
	190 Add X8, X8, X10
	191 Move [X0+24], W9
	192 Move [X8+32], X21
	193 Move X8, [X9+32]
	194 Move X1, X21
	195 Move X8, [X8+192]
	196 Move X2, [X8+112]
	197 Call List`1<Object>.AddWithResize, X0, X1
	198 Move X0, [X19+32]
	199 Compare X0, 0
	200 JumpIfEqual {215}
	201 Move X3, [X23]
	202 Move W1, W20
	203 Move X2, X21
	204 Move X20, [X31+64]
	205 Move X19, [X31+72]
	206 Move X22, [X31+48]
	207 Move X21, [X31+56]
	208 Move X24, [X31+32]
	209 Move X23, [X31+40]
	210 Move X26, [X31+16]
	211 Move X25, [X31+24]
	212 Move X30, [X31+80]
	213 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	214 Return 
	215 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03CCEE80 MOV X20, X0
	0x03CCEE84 CBNZ X2, 0x3CCEE9C
	0x03CCEE88 ADRP X0, 0xFFFFFFFFFCE43000
	0x03CCEE8C ADD X0, X0, 0x748
	0x03CCEE90 BL 0x1C16CB8
	0x03CCEE94 MOV X2, X0
	0x03CCEE98 STR X0, [X21 + 0x3D0]
	0x03CCEE9C MOV X0, X20
	0x03CCEEA0 MOV X1, X19
	0x03CCEEA4 LDP X20, X19, [X31 + 0x10]
	0x03CCEEA8 LDP X30, X21, [X31], #0x20
	0x03CCEEAC BR X2
	0x03CCEEB0 STP X30, X21, [X31 - 0x20]!
	0x03CCEEB4 STP X20, X19, [X31 + 0x10]
	0x03CCEEB8 ADRP X21, 0x719000
	0x03CCEEBC LDR X2, [X21 + 0x3D8]
	0x03CCEEC0 MOV X19, X1
	0x03CCEEC4 MOV X20, X0
	0x03CCEEC8 CBNZ X2, 0x3CCEEE0
	0x03CCEECC ADRP X0, 0xFFFFFFFFFCE33000
	0x03CCEED0 ADD X0, X0, 0x886
	0x03CCEED4 BL 0x1C16CB8
	0x03CCEED8 MOV X2, X0
	0x03CCEEDC STR X0, [X21 + 0x3D8]
	0x03CCEEE0 MOV X0, X20
	0x03CCEEE4 MOV X1, X19
	0x03CCEEE8 LDP X20, X19, [X31 + 0x10]
	0x03CCEEEC LDP X30, X21, [X31], #0x20
	0x03CCEEF0 BR X2
	0x03CCEEF4 STP X30, X21, [X31 - 0x20]!
	0x03CCEEF8 STP X20, X19, [X31 + 0x10]
	0x03CCEEFC ADRP X21, 0x719000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x71A000
	007 Move X22, 0x494000
	008 Move X20, 0x494000
	009 Move W8, [X21+910]
	010 Move X22, [X22+3976]
	011 Move X20, [X20+3984]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x494000
	018 Move X0, [X0+3984]
	019 Call 0x1C17CF4
	020 Move X0, 0x494000
	021 Move X0, [X0+3976]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+910], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X2, [X20]
	028 Move W1, 1
	029 Move X20, X0
	030 Call List`1<Object>..ctor, X0, X1
	031 Move [X19+24], X20
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+48]
	039 Call ScriptableObject..ctor, X0
	040 Return 

