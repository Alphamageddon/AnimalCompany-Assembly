Type: UnityEngine.TextCore.Text.TextAsset

Method: System.String get_version()

Disassembly:
	0x03CAD71C MOV X21, X0
	0x03CAD720 CBZ X0, 0x3CAD738

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_version(System.String value)

Disassembly:
	0x03CAD724 LDR X8, [X20]
	0x03CAD728 MOV X0, X21

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Int32 get_instanceID()

Disassembly:
	0x03CA4338 TBZ X21, 0x0, 0x3CA4344
	0x03CA433C MOV X0, X20
	0x03CA4340 BL 0x3CA34CC
	0x03CA4344 LDR X0, [X20 + 0x1D0]
	0x03CA4348 CBZ X0, 0x3CA4414
	0x03CA434C MOV W21, W31
	0x03CA4350 LDR W8, [X0 + 0x18]
	0x03CA4354 CMP W21, W8
	0x03CA4358 B.GE 0x3CA43D8
	0x03CA435C LDR X2, [X26]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, [X0+32]
	005 Compare W0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, X19
	008 Move X1, X31
	009 Call Object.GetInstanceID, X0
	010 Move [X19+32], W0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0

Method: System.Int32 get_hashCode()

Disassembly:
	0x03CAAFFC CMP W3, W2
	0x03CAB000 B.LS 0x3CAB258
	0x03CAB004 ADD X17, X16, X9, 0x3, LSL
	0x03CAB008 LDR V0, [X17 + 0x20]!
	0x03CAB00C CMP W3, W1
	0x03CAB010 B.LS 0x3CAB258
	0x03CAB014 ADD X16, X16, X8, 0x3, LSL
	0x03CAB018 LDR V1, [X16 + 0x20]
	0x03CAB01C STR D1, [X17]
	0x03CAB020 LDR X16, [X0 + 0x28]
	0x03CAB024 CBZ X16, 0x3CAB25C
	0x03CAB028 LDR W17, [X16 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, [X0+36]
	005 Compare W0, 0
	006 JumpIfNotEqual {13}
	007 Move X0, X19
	008 Move X1, X31
	009 Call Object.get_name, X0
	010 Move X1, X31
	011 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	012 Move [X19+36], W0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Void set_hashCode(System.Int32 value)

Disassembly:
	0x03CAD72C LDR X1, [X8 + 0x40]
	0x03CAD730 BL 0x1C16E00

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: UnityEngine.Material get_material()

Disassembly:
	0x03CAD734 CBZ X0, 0x3CAE044
	0x03CAD738 LDR W8, [X22]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_material(UnityEngine.Material value)

Disassembly:
	0x03CAD73C CMP W8, 0x2F
	0x03CAD740 B.LS 0x3CAE040

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Int32 get_materialHashCode()

Disassembly:
	0x03CAB02C CMP W17, W1
	0x03CAB030 B.LS 0x3CAB258
	0x03CAB034 ADD X16, X16, X8, 0x3, LSL
	0x03CAB038 STR D0, [X16 + 0x20]
	0x03CAB03C LDR X16, [X0 + 0x28]
	0x03CAB040 CBZ X16, 0x3CAB25C
	0x03CAB044 LDR W17, [X16 + 0x18]
	0x03CAB048 CMP W11, W17
	0x03CAB04C B.CS 0x3CAB258
	0x03CAB050 ADD X3, X16, X11, 0x3, LSL
	0x03CAB054 LDR V0, [X3 + 0x20]!
	0x03CAB058 CMP W10, W17
	0x03CAB05C B.CS 0x3CAB258
	0x03CAB060 ADD X16, X16, X10, 0x3, LSL
	0x03CAB064 LDR V1, [X16 + 0x20]
	0x03CAB068 STR D1, [X3]
	0x03CAB06C LDR X16, [X0 + 0x28]
	0x03CAB070 CBZ X16, 0x3CAB25C
	0x03CAB074 LDR W17, [X16 + 0x18]
	0x03CAB078 CMP W10, W17
	0x03CAB07C B.CS 0x3CAB258
	0x03CAB080 ADD X16, X16, X10, 0x3, LSL
	0x03CAB084 STR D0, [X16 + 0x20]
	0x03CAB088 LDR X16, [X0 + 0x28]
	0x03CAB08C CBZ X16, 0x3CAB25C
	0x03CAB090 LDR W17, [X16 + 0x18]
	0x03CAB094 CMP W13, W17
	0x03CAB098 B.CS 0x3CAB258
	0x03CAB09C ADD X3, X16, X13, 0x3, LSL
	0x03CAB0A0 LDR V0, [X3 + 0x20]!
	0x03CAB0A4 CMP W12, W17
	0x03CAB0A8 B.CS 0x3CAB258
	0x03CAB0AC ADD X16, X16, X12, 0x3, LSL
	0x03CAB0B0 LDR V1, [X16 + 0x20]
	0x03CAB0B4 STR D1, [X3]
	0x03CAB0B8 LDR X16, [X0 + 0x28]
	0x03CAB0BC CBZ X16, 0x3CAB25C
	0x03CAB0C0 LDR W17, [X16 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x73D000
	005 Move W8, [X20+817]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x449000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+817], W8
	016 Move W0, [X19+48]
	017 Compare W0, 0
	018 JumpIfNotEqual {44}
	019 Move X8, 0x449000
	020 Move X8, [X8+1432]
	021 Move X20, [X19+40]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {36}
	035 Move W0, W31
	036 Move X0, [X19+40]
	037 Compare X0, 0
	038 JumpIfEqual {48}
	039 Move X1, X31
	040 Call Object.get_name, X0
	041 Move X1, X31
	042 Call TextUtilities.GetHashCodeCaseInSensitive, X0
	043 Move [X19+48], W0
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Void set_materialHashCode(System.Int32 value)

Disassembly:
	0x03CAD744 ADRP X26, 0x47A000
	0x03CAD748 LDR X26, [X26 + 0x680]

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03CA8B74 STR W31, [X31 + 0x30]
	0x03CA8B78 BL 0x3C9E6D0

ISIL:
	001 Move X1, X31
	002 Call ScriptableObject..ctor, X0
	003 Return 

